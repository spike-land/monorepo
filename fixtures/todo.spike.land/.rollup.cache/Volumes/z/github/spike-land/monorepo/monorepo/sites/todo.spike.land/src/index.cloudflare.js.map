{"version":3,"file":"index.cloudflare.js","sourceRoot":"","sources":["index.cloudflare.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAC3C,OAAO,EAAE,cAAc,EAAE,MAAM,8BAA8B,CAAC;AAC9D,OAAO,OAAO,MAAM,gCAAgC,CAAC;AAErD,MAAM,OAAO,GAAG,IAAI,CAAC;AAErB,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAU,EAAE,EAAE;IACvC,KAAK,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AAEH,KAAK,UAAU,aAAa,CAAC,KAAU;IACrC,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;IAC9B,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAEjC,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;QAC/B,iDAAiD;QACjD,OAAO,kBAAkB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;KACvC;SAAM;QACL,oCAAoC;QACpC,OAAO,UAAU,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KACnC;AACH,CAAC;AAED,KAAK,UAAU,UAAU,CAAC,KAAU,EAAE,OAAgB;IACpD,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC/C,IAAI,OAAO,EAAE;QACX,MAAM,cAAc,GAAG,MAAM,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAClD,IAAI,cAAc,EAAE;YAClB,OAAO,cAAc,CAAC;SACvB;KACF;IAED,MAAM,SAAS,GAAG,MAAM,SAAS,CAAC;QAChC,GAAG,EAAE,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC;QACzB,OAAO;KACR,CAAC,CAAC;IAEH,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE;QAC5C,OAAO,EAAE;YACP,cAAc,EAAE,0BAA0B;YAC1C,eAAe,EAAE,WAAW,EAAE,EAAE;SACjC;KACF,CAAC,CAAC;IACH,IAAI,OAAO,EAAE;QACX,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;KACvD;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,KAAK,UAAU,kBAAkB,CAAC,KAAU,EAAE,GAAQ;IACpD,IAAI;QACF,qBAAqB;QACrB,MAAM,OAAO,GAAG,OAAO;YACrB,CAAC,CAAC;gBACA,YAAY,CAAC,GAAY;oBACvB,MAAM,UAAU,GAAG,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACjD,IAAI,UAAU,EAAE;wBACd,OAAO;4BACL,UAAU,EAAE,QAAQ;4BACpB,OAAO,EAAE,QAAQ;4BACjB,WAAW,EAAE,KAAK;yBACnB,CAAC;qBACH;oBACD,OAAO;wBACL,UAAU,EAAE,EAAE,GAAG,EAAE;wBACnB,OAAO,EAAE,EAAE;wBACX,WAAW,EAAE,KAAK;qBACnB,CAAC;gBACJ,CAAC;aACF;YACD,CAAC,CAAC,SAAS,CAAC;QAEd,MAAM,cAAc,GAAG,MAAM,cAAc,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QAC5D,OAAO,cAAc,CAAC;KACvB;IAAC,OAAO,CAAC,EAAE;QACV,aAAa;QACb,OAAO,IAAI,QAAQ,CAAC,IAAI,GAAG,CAAC,QAAQ,aAAa,EAAE;YACjD,MAAM,EAAE,GAAG;YACX,UAAU,EAAE,WAAW;SACxB,CAAC,CAAC;KACJ;AACH,CAAC","sourcesContent":["import { renderApp } from \"./index.server\";\nimport { getAssetFromKV } from \"@cloudflare/kv-asset-handler\";\nimport symbols from \"../server/build/q-symbols.json\";\n\nconst CACHING = true;\n\naddEventListener(\"fetch\", (event: any) => {\n  event.respondWith(handleRequest(event));\n});\n\nasync function handleRequest(event: any) {\n  const request = event.request;\n  const url = new URL(request.url);\n\n  if (/\\.\\w+$/.test(url.pathname)) {\n    // If path ends with extension, serve static file\n    return handleStaticAssets(event, url);\n  } else {\n    // Otherwise Server side render qwik\n    return handleQwik(event, request);\n  }\n}\n\nasync function handleQwik(event: any, request: Request) {\n  const cache = await caches.open(\"custom:qwik\");\n  if (CACHING) {\n    const cachedResponse = await cache.match(request);\n    if (cachedResponse) {\n      return cachedResponse;\n    }\n  }\n\n  const ssrResult = await renderApp({\n    url: new URL(request.url),\n    symbols,\n  });\n\n  const response = new Response(ssrResult.html, {\n    headers: {\n      \"Content-Type\": \"text/html; charset=utf-8\",\n      \"Cache-Control\": `max-age=${60}`,\n    },\n  });\n  if (CACHING) {\n    event.waitUntil(cache.put(request, response.clone()));\n  }\n  return response;\n}\n\nasync function handleStaticAssets(event: any, url: URL) {\n  try {\n    // Server static file\n    const options = CACHING\n      ? {\n        cacheControl(req: Request) {\n          const inmmutable = /\\/q-\\w+\\.\\w+$/.test(req.url);\n          if (inmmutable) {\n            return {\n              browserTTL: 31536000,\n              edgeTTL: 31536000,\n              bypassCache: false,\n            };\n          }\n          return {\n            browserTTL: 60 * 60,\n            edgeTTL: 60,\n            bypassCache: false,\n          };\n        },\n      }\n      : undefined;\n\n    const staticResponse = await getAssetFromKV(event, options);\n    return staticResponse;\n  } catch (e) {\n    // Handle 404\n    return new Response(`\"${url.pathname}\" not found`, {\n      status: 404,\n      statusText: \"not found\",\n    });\n  }\n}\n"]}