{"version":3,"sources":["webpack://@zedvision/zedvision-site/./src/pages/example.tsx"],"names":["Slider","steps","useState","sliderValue","setSlider","css","e","Number","currentTarget","value"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;;AAEA;;AAEA,IAAMA,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,MAAMC,KAAK,GAAG,GAAd;;AADmB,kBAEcC,+CAAQ,CAACD,KAAK,GAAG,CAAT,CAFtB;AAAA,MAEZE,WAFY;AAAA,MAECC,SAFD;;AAGnB,SAAO,iHACL;AACE,OAAG,EAAEH,KADP;AAEE,OAAG,EAAEI,6DAAF,uSAIiB,MAAMJ,KAAN,GAAcE,WAJ/B,EAI8C,MAAMF,KAAN,IAC9CA,KAAK,GAAGE,WADsC,CAJ9C,CAFL;AAUE,QAAI,EAAC,OAVP;AAWE,kBAAW,mBAXb;AAYE,SAAK,EAAEA,WAZT;AAaE,QAAI,EAAC,GAbP;AAcE,mBAAe,EAAE,yBAACG,CAAD;AAAA,aAAOF,SAAS,CAACG,MAAM,CAACD,CAAC,CAACE,aAAF,CAAgBC,KAAjB,CAAP,CAAhB;AAAA;AAdnB,IADK,EAkBL;AACE,OAAG,EAAEJ,6DAAF,8LACY,KAAKJ,KAAL,GAAaE,WADzB;AADL,4CAlBK,EAyBL;AACE,OAAG,EAAEE,6DAAF,8LACY,KAAKJ,KAAL,IAAcA,KAAK,GAAGE,WAAtB,CADZ;AADL,qBAzBK,CAAP;AAiCD,CApCD;;AAsCA,+DAAe;AAAA,SACb,iHACE,8DAAC,4DAAD;AACE,UAAM,EAAEE,6DAAF;AADR,IADF,EASE,8DAAC,MAAD,OATF,CADa;AAAA,CAAf,E","file":"component---src-pages-example-tsx-3554d1dbdc6586ef2800.js","sourcesContent":["import React, { useState } from \"react\";\n/** @jsx jsx */\n\nimport { css, Global, jsx } from \"@emotion/react\";\n\nconst Slider = () => {\n  const steps = 128;\n  const [sliderValue, setSlider] = useState(steps / 2);\n  return <>\n    <input\n      max={steps}\n      css={css`\n        appearance: none;\n        width: 100%;\n        height: 40px; \n        background: rgb(${255 / steps * sliderValue} ${255 / steps *\n        (steps - sliderValue)} 0); \n        outline: none; \n    `}\n      type=\"range\"\n      aria-label=\"font size changer\"\n      value={sliderValue}\n      step=\"1\"\n      onChangeCapture={(e) => setSlider(Number(e.currentTarget.value))}\n    >\n    </input>\n    <p\n      css={css`\n        font-size: ${72 / steps * sliderValue}px\n        `}\n    >\n      Example when the text gets bigger...\n    </p>\n    <p\n      css={css`\n        font-size: ${72 / steps * (steps - sliderValue)}px\n        `}\n    >\n      ...or smaller\n    </p>\n  </>;\n};\n\nexport default () =>\n  <>\n    <Global\n      styles={css`\n      body{\n          margin: 0;\n          overflow: overlay;\n        }  \n    `}\n    />\n    <Slider />\n  </>;\n"],"sourceRoot":""}