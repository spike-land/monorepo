{"version":3,"sources":["webpack:///../code/src/shadb/dist/vendor/idb.js","webpack:///../code/src/shadb/dist/diff.js","webpack:///../code/src/shadb/dist/getDbObj.js","webpack:///../code/src/shadb/dist/shaDB.js","webpack:///../code/src/shadb/dist/sha256.js"],"names":["instanceOfAny","object","constructors","some","c","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","IDBDatabase","IDBObjectStore","IDBIndex","IDBCursor","IDBTransaction","getCursorAdvanceMethods","prototype","advance","continue","continuePrimaryKey","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","request","promise","Promise","resolve","reject","unlisten","removeEventListener","success","error","wrap1","result","addEventListener","then","value","set","catch","cacheDonePromiseForTransaction","tx","has","done","complete","DOMException","idbProxyTraps","get","target","prop","receiver","objectStoreNames","undefined","objectStore","replaceTraps","callback","wrapFunction","func","transaction","storeNames","args","call","unwrap1","sort","includes","apply","transformCachableValue","Proxy","IDBRequest","newValue","u","w","openDB1","name","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","db","deleteDB1","deleteDatabase","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","method","storeName","target1","store","index","shift","all","oldTraps","diff","str1","str2","diffChars","sha256","sha1Str1","res","map","x","added","removed","count","b","isDiff","str","length","isKey","slice","filter","maybeInst","JSON","parse","_a","assemble","oldValue","instructions","instArr","old","ret","forEach","element","Number","absNum","Math","abs","currentString","String","getDbObj","dbObj","key","format","data","json","allData","text","keyOfDiff","TextDecoder","decode","put","val","oldKey","actualValue","prevValue","prevSha","diffObj","diffAsStr","stringify","prev","delete","clear","keys","getAllKeys","getDB","dbPromise","openDB","createObjectStore","keyVal","Array","Uint8Array","crypto","subtle","digest","TextEncoder","encode","from","toString","join"],"mappings":"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","file":"4-c37c3473272fee69c0ee.js","sourcesContent":["const instanceOfAny = (object, constructors) =>\n  constructors.some((c) => object instanceof c);\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\nfunction getIdbProxyableTypes() {\n  return idbProxyableTypes || (idbProxyableTypes = [\n    IDBDatabase,\n    IDBObjectStore,\n    IDBIndex,\n    IDBCursor,\n    IDBTransaction,\n  ]);\n}\nfunction getCursorAdvanceMethods() {\n  return cursorAdvanceMethods || (cursorAdvanceMethods = [\n    IDBCursor.prototype.advance,\n    IDBCursor.prototype.continue,\n    IDBCursor.prototype.continuePrimaryKey,\n  ]);\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n  const promise = new Promise((resolve, reject) => {\n    const unlisten = () => {\n      request.removeEventListener(\"success\", success);\n      request.removeEventListener(\"error\", error);\n    };\n    const success = () => {\n      resolve(wrap1(request.result));\n      unlisten();\n    };\n    const error = () => {\n      reject(request.error);\n      unlisten();\n    };\n    request.addEventListener(\"success\", success);\n    request.addEventListener(\"error\", error);\n  });\n  promise.then((value) => {\n    if (value instanceof IDBCursor) {\n      cursorRequestMap.set(value, request);\n    }\n  }).catch(() => {\n  });\n  reverseTransformCache.set(promise, request);\n  return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n  if (transactionDoneMap.has(tx)) {\n    return;\n  }\n  const done = new Promise((resolve, reject) => {\n    const unlisten = () => {\n      tx.removeEventListener(\"complete\", complete);\n      tx.removeEventListener(\"error\", error);\n      tx.removeEventListener(\"abort\", error);\n    };\n    const complete = () => {\n      resolve();\n      unlisten();\n    };\n    const error = () => {\n      reject(tx.error || new DOMException(\"AbortError\", \"AbortError\"));\n      unlisten();\n    };\n    tx.addEventListener(\"complete\", complete);\n    tx.addEventListener(\"error\", error);\n    tx.addEventListener(\"abort\", error);\n  });\n  transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n  get(target, prop, receiver) {\n    if (target instanceof IDBTransaction) {\n      if (prop === \"done\") {\n        return transactionDoneMap.get(target);\n      }\n      if (prop === \"objectStoreNames\") {\n        return target.objectStoreNames || transactionStoreNamesMap.get(target);\n      }\n      if (prop === \"store\") {\n        return receiver.objectStoreNames[1]\n          ? undefined\n          : receiver.objectStore(receiver.objectStoreNames[0]);\n      }\n    }\n    return wrap1(target[prop]);\n  },\n  set(target, prop, value) {\n    target[prop] = value;\n    return true;\n  },\n  has(target, prop) {\n    if (\n      target instanceof IDBTransaction && (prop === \"done\" || prop === \"store\")\n    ) {\n      return true;\n    }\n    return prop in target;\n  },\n};\nfunction replaceTraps(callback) {\n  idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n  if (\n    func === IDBDatabase.prototype.transaction &&\n    !(\"objectStoreNames\" in IDBTransaction.prototype)\n  ) {\n    return function (storeNames, ...args) {\n      const tx = func.call(unwrap1(this), storeNames, ...args);\n      transactionStoreNamesMap.set(\n        tx,\n        storeNames.sort ? storeNames.sort() : [\n          storeNames,\n        ],\n      );\n      return wrap1(tx);\n    };\n  }\n  if (getCursorAdvanceMethods().includes(func)) {\n    return function (...args) {\n      func.apply(unwrap1(this), args);\n      return wrap1(cursorRequestMap.get(this));\n    };\n  }\n  return function (...args) {\n    return wrap1(func.apply(unwrap1(this), args));\n  };\n}\nfunction transformCachableValue(value) {\n  if (typeof value === \"function\") {\n    return wrapFunction(value);\n  }\n  if (value instanceof IDBTransaction) {\n    cacheDonePromiseForTransaction(value);\n  }\n  if (instanceOfAny(value, getIdbProxyableTypes())) {\n    return new Proxy(value, idbProxyTraps);\n  }\n  return value;\n}\nfunction wrap1(value) {\n  if (value instanceof IDBRequest) {\n    return promisifyRequest(value);\n  }\n  if (transformCache.has(value)) {\n    return transformCache.get(value);\n  }\n  const newValue = transformCachableValue(value);\n  if (newValue !== value) {\n    transformCache.set(value, newValue);\n    reverseTransformCache.set(newValue, value);\n  }\n  return newValue;\n}\nconst unwrap1 = (value) => reverseTransformCache.get(value);\nconst u = unwrap1, w = wrap1;\nexport { u as unwrap, w as wrap };\nfunction openDB1(\n  name,\n  version,\n  { blocked, upgrade, blocking, terminated } = {},\n) {\n  const request = indexedDB.open(name, version);\n  const openPromise = wrap1(request);\n  if (upgrade) {\n    request.addEventListener(\"upgradeneeded\", (event) => {\n      upgrade(\n        wrap1(request.result),\n        event.oldVersion,\n        event.newVersion,\n        wrap1(request.transaction),\n      );\n    });\n  }\n  if (blocked) {\n    request.addEventListener(\"blocked\", () => blocked());\n  }\n  openPromise.then((db) => {\n    if (terminated) {\n      db.addEventListener(\"close\", () => terminated());\n    }\n    if (blocking) {\n      db.addEventListener(\"versionchange\", () => blocking());\n    }\n  }).catch(() => {\n  });\n  return openPromise;\n}\nfunction deleteDB1(name, { blocked } = {}) {\n  const request = indexedDB.deleteDatabase(name);\n  if (blocked) {\n    request.addEventListener(\"blocked\", () => blocked());\n  }\n  return wrap1(request).then(() => undefined);\n}\nconst readMethods = [\n  \"get\",\n  \"getKey\",\n  \"getAll\",\n  \"getAllKeys\",\n  \"count\",\n];\nconst writeMethods = [\n  \"put\",\n  \"add\",\n  \"delete\",\n  \"clear\",\n];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n  if (\n    !(target instanceof IDBDatabase && !(prop in target) &&\n      typeof prop === \"string\")\n  ) {\n    return;\n  }\n  if (cachedMethods.get(prop)) {\n    return cachedMethods.get(prop);\n  }\n  const targetFuncName = prop.replace(/FromIndex$/, \"\");\n  const useIndex = prop !== targetFuncName;\n  const isWrite = writeMethods.includes(targetFuncName);\n  if (\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n    !(isWrite || readMethods.includes(targetFuncName))\n  ) {\n    return;\n  }\n  const method = async function (storeName, ...args) {\n    const tx = this.transaction(storeName, isWrite ? \"readwrite\" : \"readonly\");\n    let target1 = tx.store;\n    if (useIndex) {\n      target1 = target1.index(args.shift());\n    }\n    return (await Promise.all([\n      target1[targetFuncName](...args),\n      isWrite && tx.done,\n    ]))[0];\n  };\n  cachedMethods.set(prop, method);\n  return method;\n}\nreplaceTraps((oldTraps) => ({\n  ...oldTraps,\n  get: (target, prop, receiver) =>\n    getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n  has: (target, prop) =>\n    !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\nexport { deleteDB1 as deleteDB, openDB1 as openDB };\n","export const diff = async (str1, str2) => {\n  const { diffChars } = await import(\"./vendor/diff.min.js\");\n  const { sha256 } = await import(\"./sha256.js\");\n  const sha1Str1 = sha256(str1);\n  const res = diffChars(str1, str2);\n  return {\n    b: await sha1Str1,\n    c: res.map((x) => x.added ? x.value : x.removed ? -x.count : x.count),\n  };\n};\nexport const isDiff = (str) => {\n  if (str.length < 10) {\n    return false;\n  }\n  const isKey =\n    [...(str.slice(0, 8))].filter((x) => x < \"0\" || x > \"f\").length === 0;\n  const maybeInst = str.slice(8);\n  if (\n    isKey && maybeInst[0] === \"[\" && maybeInst[maybeInst.length - 1] === \"]\"\n  ) {\n    try {\n      return JSON.parse(maybeInst).length > 1;\n    } catch (_a) {\n      return false;\n    }\n  }\n  return false;\n};\nexport const assemble = (oldValue, instructions) => {\n  const instArr = JSON.parse(instructions);\n  let old = oldValue.slice();\n  let ret = \"\";\n  instArr.forEach((element) => {\n    if (Number(element) === element) {\n      const absNum = Math.abs(element);\n      const currentString = old.slice(0, absNum);\n      old = old.slice(absNum);\n      if (element > 0) {\n        ret += String(currentString);\n      }\n    } else {\n      ret += String(element);\n    }\n  });\n  return ret;\n};\n","import { assemble, diff, isDiff } from \"./diff.js\";\nimport { sha256 } from \"./sha256.js\";\nexport const getDbObj = (db) => {\n  const dbObj = {\n    async get(key, format = \"string\") {\n      let data;\n      try {\n        data = await db.get(key);\n        if (!data) {\n          return null;\n        }\n      } catch (_) {\n        return null;\n        //key not found that we write - its ok.\n      }\n      if (format === \"json\") {\n        try {\n          const json = JSON.parse(data);\n          return json;\n        } catch (_a) {\n          return data;\n        }\n      }\n      const allData = await data;\n      if (format === \"string\") {\n        if (typeof allData === \"string\" && format === \"string\") {\n          const text = allData;\n          if (isDiff(text)) {\n            const keyOfDiff = text.slice(0, 8);\n            const instructions = text.slice(8);\n            const oldValue = await dbObj.get(keyOfDiff);\n            return assemble(oldValue, instructions);\n          }\n          return allData;\n        }\n        return new TextDecoder().decode(allData);\n      }\n      return data;\n    },\n    async put(key, val) {\n      let prev;\n      try {\n        const oldKey = await dbObj.get(key);\n        // console.log(realKey);\n        if (\n          typeof oldKey === \"string\" && typeof val === \"string\" &&\n          oldKey.length === 8 && oldKey !== val\n        ) {\n          const actualValue = await dbObj.get(val);\n          const prevValue = await dbObj.get(oldKey);\n          if (typeof prevValue === \"string\") {\n            const prevSha = await sha256(prevValue);\n            if (prevSha === oldKey) {\n              const diffObj = await diff(actualValue, prevValue);\n              const diffAsStr = diffObj.b + JSON.stringify(diffObj.c);\n              await dbObj.put(prevSha, diffAsStr);\n            }\n          }\n        }\n      } catch (_a) {\n        prev = \"\";\n      }\n      if (prev !== \"\" && val === prev) {\n        return val;\n      }\n      let str;\n      if (typeof val !== \"string\") {\n        str = new TextDecoder().decode(val);\n      } else {\n        str = val;\n      }\n      return await db.put(key, str);\n    },\n    async delete(key) {\n      return await db.delete(key);\n    },\n    async clear() {\n      return await db.clear();\n    },\n    async keys() {\n      return await db.getAllKeys();\n    },\n  };\n  return dbObj;\n};\n","import { openDB } from \"./vendor/idb.js\";\nimport { getDbObj } from \"./getDbObj.js\";\nexport function getDB(storeName = \"defaultStore\") {\n  return async () => {\n    const dbPromise = openDB(\"zed-vision-alpha\", 1, {\n      upgrade(db) {\n        db.createObjectStore(storeName);\n      },\n      blocked() {\n      },\n      blocking() {\n      },\n      terminated() {\n      },\n    });\n    const keyVal = {\n      async get(key) {\n        return (await dbPromise).get(storeName, key);\n      },\n      async put(key, val) {\n        return (await dbPromise).put(storeName, val, key);\n      },\n      async delete(key) {\n        return (await dbPromise).delete(storeName, key);\n      },\n      async clear() {\n        return (await dbPromise).clear(storeName);\n      },\n      async keys() {\n        return (await dbPromise).getAllKeys(storeName);\n      },\n    };\n    return getDbObj(keyVal);\n  };\n}\n","export const sha256 = async (x) =>\n  Array.from(\n    new Uint8Array(\n      await crypto.subtle.digest(\n        \"SHA-256\",\n        typeof x === \"string\" ? new TextEncoder().encode(x) : x,\n      ),\n    ).slice(0, 4),\n  ).map((b) => (\"00\" + b.toString(16)).slice(-2)).join(\"\");\n"],"sourceRoot":""}