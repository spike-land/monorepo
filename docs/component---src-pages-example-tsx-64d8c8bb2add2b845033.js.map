{"version":3,"sources":["webpack://@zedvision/zedvision-site/./src/pages/example.tsx"],"names":["Slider","steps","useState","sliderValue","setSlider","css","e","Number","currentTarget","value"],"mappings":";;;;;;;;;;uEACA,eAIA,GAAMA,OAAM,CAAG,QAATA,OAAS,EAAM,CACnB,GAAMC,MAAK,CAAG,GAAd,CACA,cAAiCC,+CAAQ,CAACD,KAAK,CAAG,CAAT,CAAzC,CAAOE,WAAP,cAAoBC,SAApB,cACA,MAAO,gHACL,uEACE,GAAG,CAAEH,KADP,CAEE,GAAG,CAAEI,6DAAF,gSAIiB,IAAMJ,KAAN,CAAcE,WAJ/B,CAI8C,IAAMF,KAAN,EAC9CA,KAAK,CAAGE,WADsC,CAJ9C,CAFL,CAUE,IAAI,CAAC,OAVP,CAWE,aAAW,mBAXb,CAYE,KAAK,CAAEA,WAZT,CAaE,IAAI,CAAC,GAbP,CAcE,eAAe,CAAE,yBAACG,CAAD,QAAOF,UAAS,CAACG,MAAM,CAACD,CAAC,CAACE,aAAF,CAAgBC,KAAjB,CAAP,CAAhB,EAdnB,EADK,CAkBL,mEACE,GAAG,CAAEJ,6DAAF,wLACY,GAAKJ,KAAL,CAAaE,WADzB,CADL,yCAlBK,CAyBL,mEACE,GAAG,CAAEE,6DAAF,wLACY,GAAKJ,KAAL,EAAcA,KAAK,CAAGE,WAAtB,CADZ,CADL,kBAzBK,CAAP,CAiCD,CApCD,CAsCA,+DAAe,iBACb,gHACE,8DAAC,4DAAD,EACE,MAAM,CAAEE,6DAAF,wOADR,EADF,CASE,8DAAC,MAAD,MATF,CADa,EAAf,E","file":"component---src-pages-example-tsx-64d8c8bb2add2b845033.js","sourcesContent":["import React, { useState } from \"react\";\n/** @jsx jsx */\n\nimport { css, Global, jsx } from \"@emotion/react\";\n\nconst Slider = () => {\n  const steps = 128;\n  const [sliderValue, setSlider] = useState(steps / 2);\n  return <>\n    <input\n      max={steps}\n      css={css`\n        appearance: none;\n        width: 100%;\n        height: 40px; \n        background: rgb(${255 / steps * sliderValue} ${255 / steps *\n        (steps - sliderValue)} 0); \n        outline: none; \n    `}\n      type=\"range\"\n      aria-label=\"font size changer\"\n      value={sliderValue}\n      step=\"1\"\n      onChangeCapture={(e) => setSlider(Number(e.currentTarget.value))}\n    >\n    </input>\n    <p\n      css={css`\n        font-size: ${72 / steps * sliderValue}px\n        `}\n    >\n      Example when the text gets bigger...\n    </p>\n    <p\n      css={css`\n        font-size: ${72 / steps * (steps - sliderValue)}px\n        `}\n    >\n      ...or smaller\n    </p>\n  </>;\n};\n\nexport default () =>\n  <>\n    <Global\n      styles={css`\n      body{\n          margin: 0;\n          overflow: overlay;\n        }  \n    `}\n    />\n    <Slider />\n  </>;\n"],"sourceRoot":""}