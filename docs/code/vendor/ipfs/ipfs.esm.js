var __commonJS = (callback, module2) => () => {
  if (!module2) {
    module2 = {exports: {}};
    callback(module2.exports, module2);
  }
  return module2.exports;
};
var require_index_min = __commonJS((exports, module) => {
  /*! For license information please see index.min.js.LICENSE.txt */
  !function(e, t) {
    typeof exports == "object" && typeof module == "object" ? module.exports = t() : typeof define == "function" && define.amd ? define([], t) : typeof exports == "object" ? exports.Ipfs = t() : e.Ipfs = t();
  }(self, function() {
    return function(e) {
      var t = {};
      function r(n) {
        if (t[n])
          return t[n].exports;
        var i = t[n] = {i: n, l: false, exports: {}};
        return e[n].call(i.exports, i, i.exports, r), i.l = true, i.exports;
      }
      return r.m = e, r.c = t, r.d = function(e2, t2, n) {
        r.o(e2, t2) || Object.defineProperty(e2, t2, {enumerable: true, get: n});
      }, r.r = function(e2) {
        typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, {value: "Module"}), Object.defineProperty(e2, "__esModule", {value: true});
      }, r.t = function(e2, t2) {
        if (1 & t2 && (e2 = r(e2)), 8 & t2)
          return e2;
        if (4 & t2 && typeof e2 == "object" && e2 && e2.__esModule)
          return e2;
        var n = Object.create(null);
        if (r.r(n), Object.defineProperty(n, "default", {enumerable: true, value: e2}), 2 & t2 && typeof e2 != "string")
          for (var i in e2)
            r.d(n, i, function(t3) {
              return e2[t3];
            }.bind(null, i));
        return n;
      }, r.n = function(e2) {
        var t2 = e2 && e2.__esModule ? function() {
          return e2.default;
        } : function() {
          return e2;
        };
        return r.d(t2, "a", t2), t2;
      }, r.o = function(e2, t2) {
        return Object.prototype.hasOwnProperty.call(e2, t2);
      }, r.p = "", r(r.s = 384);
    }([function(e, t, r) {
      "use strict";
      function n(e2, t2) {
        for (const r2 in t2)
          Object.defineProperty(e2, r2, {value: t2[r2], enumerable: true, configurable: true});
        return e2;
      }
      e.exports = function(e2, t2, r2) {
        if (!e2 || typeof e2 == "string")
          throw new TypeError("Please pass an Error to err-code");
        r2 || (r2 = {}), typeof t2 == "object" && (r2 = t2, t2 = void 0), t2 != null && (r2.code = t2);
        try {
          return n(e2, r2);
        } catch (i) {
          r2.message = e2.message, r2.stack = e2.stack;
          const t3 = function() {
          };
          return t3.prototype = Object.create(Object.getPrototypeOf(e2)), n(new t3(), r2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      (function(n) {
        t.formatArgs = function(t2) {
          if (t2[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + t2[0] + (this.useColors ? "%c " : " ") + "+" + e.exports.humanize(this.diff), !this.useColors)
            return;
          const r2 = "color: " + this.color;
          t2.splice(1, 0, r2, "color: inherit");
          let n2 = 0, i2 = 0;
          t2[0].replace(/%[a-zA-Z%]/g, (e2) => {
            e2 !== "%%" && (n2++, e2 === "%c" && (i2 = n2));
          }), t2.splice(i2, 0, r2);
        }, t.save = function(e2) {
          try {
            e2 ? t.storage.setItem("debug", e2) : t.storage.removeItem("debug");
          } catch (r2) {
          }
        }, t.load = function() {
          let e2;
          try {
            e2 = t.storage.getItem("debug");
          } catch (r2) {
          }
          !e2 && n !== void 0 && "env" in n && (e2 = {NODE_ENV: "production"}.DEBUG);
          return e2;
        }, t.useColors = function() {
          if (typeof window != "undefined" && window.process && (window.process.type === "renderer" || window.process.__nwjs))
            return true;
          if (typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))
            return false;
          return typeof document != "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window != "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
        }, t.storage = function() {
          try {
            return localStorage;
          } catch (e2) {
          }
        }(), t.destroy = (() => {
          let e2 = false;
          return () => {
            e2 || (e2 = true, console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."));
          };
        })(), t.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], t.log = console.debug || console.log || (() => {
        }), e.exports = r(523)(t);
        const {formatters: i} = e.exports;
        i.j = function(e2) {
          try {
            return JSON.stringify(e2);
          } catch (t2) {
            return "[UnexpectedJSONParseError]: " + t2.message;
          }
        };
      }).call(this, r(10));
    }, function(e, t, r) {
      "use strict";
      const n = r(247), {anySignal: i} = r(131), s = r(150).default, {TimeoutError: o} = r(522);
      e.exports = function(e2, t2) {
        return (...r2) => {
          const a = r2[t2 == null ? r2.length - 1 : t2];
          if (!a || !a.timeout)
            return e2(...r2);
          const c = typeof a.timeout == "string" ? s(a.timeout) : a.timeout, u = new n(c);
          a.signal = i([a.signal, u.signal]);
          const h = e2(...r2), f = new Promise((e3, t3) => {
            u.signal.addEventListener("abort", () => {
              t3(new o());
            });
          }), d = Date.now(), l = () => {
            if (u.signal.aborted)
              throw new o();
            if (Date.now() - d > c)
              throw u.abort(), new o();
          };
          return h[Symbol.asyncIterator] ? async function* () {
            const e3 = h[Symbol.asyncIterator]();
            try {
              for (; ; ) {
                const {value: t3, done: r3} = await Promise.race([e3.next(), f]);
                if (r3)
                  break;
                l(), yield t3;
              }
            } catch (t3) {
              throw l(), t3;
            } finally {
              u.clear(), e3.return && e3.return();
            }
          }() : (async () => {
            try {
              const e3 = await Promise.race([h, f]);
              return l(), e3;
            } catch (e3) {
              throw l(), e3;
            } finally {
              u.clear();
            }
          })();
        };
      };
    }, function(e, t, r) {
      "use strict";
      (function(e2) {
        var n = r(442), i = r(223), s = r(224);
        function o() {
          return c.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
        }
        function a(e3, t2) {
          if (o() < t2)
            throw new RangeError("Invalid typed array length");
          return c.TYPED_ARRAY_SUPPORT ? (e3 = new Uint8Array(t2)).__proto__ = c.prototype : (e3 === null && (e3 = new c(t2)), e3.length = t2), e3;
        }
        function c(e3, t2, r2) {
          if (!(c.TYPED_ARRAY_SUPPORT || this instanceof c))
            return new c(e3, t2, r2);
          if (typeof e3 == "number") {
            if (typeof t2 == "string")
              throw new Error("If encoding is specified then the first argument must be a string");
            return f(this, e3);
          }
          return u(this, e3, t2, r2);
        }
        function u(e3, t2, r2, n2) {
          if (typeof t2 == "number")
            throw new TypeError('"value" argument must not be a number');
          return typeof ArrayBuffer != "undefined" && t2 instanceof ArrayBuffer ? function(e4, t3, r3, n3) {
            if (t3.byteLength, r3 < 0 || t3.byteLength < r3)
              throw new RangeError("'offset' is out of bounds");
            if (t3.byteLength < r3 + (n3 || 0))
              throw new RangeError("'length' is out of bounds");
            t3 = r3 === void 0 && n3 === void 0 ? new Uint8Array(t3) : n3 === void 0 ? new Uint8Array(t3, r3) : new Uint8Array(t3, r3, n3);
            c.TYPED_ARRAY_SUPPORT ? (e4 = t3).__proto__ = c.prototype : e4 = d(e4, t3);
            return e4;
          }(e3, t2, r2, n2) : typeof t2 == "string" ? function(e4, t3, r3) {
            typeof r3 == "string" && r3 !== "" || (r3 = "utf8");
            if (!c.isEncoding(r3))
              throw new TypeError('"encoding" must be a valid string encoding');
            var n3 = 0 | p(t3, r3), i2 = (e4 = a(e4, n3)).write(t3, r3);
            i2 !== n3 && (e4 = e4.slice(0, i2));
            return e4;
          }(e3, t2, r2) : function(e4, t3) {
            if (c.isBuffer(t3)) {
              var r3 = 0 | l(t3.length);
              return (e4 = a(e4, r3)).length === 0 || t3.copy(e4, 0, 0, r3), e4;
            }
            if (t3) {
              if (typeof ArrayBuffer != "undefined" && t3.buffer instanceof ArrayBuffer || "length" in t3)
                return typeof t3.length != "number" || (n3 = t3.length) != n3 ? a(e4, 0) : d(e4, t3);
              if (t3.type === "Buffer" && s(t3.data))
                return d(e4, t3.data);
            }
            var n3;
            throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
          }(e3, t2);
        }
        function h(e3) {
          if (typeof e3 != "number")
            throw new TypeError('"size" argument must be a number');
          if (e3 < 0)
            throw new RangeError('"size" argument must not be negative');
        }
        function f(e3, t2) {
          if (h(t2), e3 = a(e3, t2 < 0 ? 0 : 0 | l(t2)), !c.TYPED_ARRAY_SUPPORT)
            for (var r2 = 0; r2 < t2; ++r2)
              e3[r2] = 0;
          return e3;
        }
        function d(e3, t2) {
          var r2 = t2.length < 0 ? 0 : 0 | l(t2.length);
          e3 = a(e3, r2);
          for (var n2 = 0; n2 < r2; n2 += 1)
            e3[n2] = 255 & t2[n2];
          return e3;
        }
        function l(e3) {
          if (e3 >= o())
            throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + o().toString(16) + " bytes");
          return 0 | e3;
        }
        function p(e3, t2) {
          if (c.isBuffer(e3))
            return e3.length;
          if (typeof ArrayBuffer != "undefined" && typeof ArrayBuffer.isView == "function" && (ArrayBuffer.isView(e3) || e3 instanceof ArrayBuffer))
            return e3.byteLength;
          typeof e3 != "string" && (e3 = "" + e3);
          var r2 = e3.length;
          if (r2 === 0)
            return 0;
          for (var n2 = false; ; )
            switch (t2) {
              case "ascii":
              case "latin1":
              case "binary":
                return r2;
              case "utf8":
              case "utf-8":
              case void 0:
                return F(e3).length;
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return 2 * r2;
              case "hex":
                return r2 >>> 1;
              case "base64":
                return z(e3).length;
              default:
                if (n2)
                  return F(e3).length;
                t2 = ("" + t2).toLowerCase(), n2 = true;
            }
        }
        function y(e3, t2, r2) {
          var n2 = false;
          if ((t2 === void 0 || t2 < 0) && (t2 = 0), t2 > this.length)
            return "";
          if ((r2 === void 0 || r2 > this.length) && (r2 = this.length), r2 <= 0)
            return "";
          if ((r2 >>>= 0) <= (t2 >>>= 0))
            return "";
          for (e3 || (e3 = "utf8"); ; )
            switch (e3) {
              case "hex":
                return C(this, t2, r2);
              case "utf8":
              case "utf-8":
                return k(this, t2, r2);
              case "ascii":
                return R(this, t2, r2);
              case "latin1":
              case "binary":
                return T(this, t2, r2);
              case "base64":
                return I(this, t2, r2);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return M(this, t2, r2);
              default:
                if (n2)
                  throw new TypeError("Unknown encoding: " + e3);
                e3 = (e3 + "").toLowerCase(), n2 = true;
            }
        }
        function g(e3, t2, r2) {
          var n2 = e3[t2];
          e3[t2] = e3[r2], e3[r2] = n2;
        }
        function b(e3, t2, r2, n2, i2) {
          if (e3.length === 0)
            return -1;
          if (typeof r2 == "string" ? (n2 = r2, r2 = 0) : r2 > 2147483647 ? r2 = 2147483647 : r2 < -2147483648 && (r2 = -2147483648), r2 = +r2, isNaN(r2) && (r2 = i2 ? 0 : e3.length - 1), r2 < 0 && (r2 = e3.length + r2), r2 >= e3.length) {
            if (i2)
              return -1;
            r2 = e3.length - 1;
          } else if (r2 < 0) {
            if (!i2)
              return -1;
            r2 = 0;
          }
          if (typeof t2 == "string" && (t2 = c.from(t2, n2)), c.isBuffer(t2))
            return t2.length === 0 ? -1 : m(e3, t2, r2, n2, i2);
          if (typeof t2 == "number")
            return t2 &= 255, c.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf == "function" ? i2 ? Uint8Array.prototype.indexOf.call(e3, t2, r2) : Uint8Array.prototype.lastIndexOf.call(e3, t2, r2) : m(e3, [t2], r2, n2, i2);
          throw new TypeError("val must be string, number or Buffer");
        }
        function m(e3, t2, r2, n2, i2) {
          var s2, o2 = 1, a2 = e3.length, c2 = t2.length;
          if (n2 !== void 0 && ((n2 = String(n2).toLowerCase()) === "ucs2" || n2 === "ucs-2" || n2 === "utf16le" || n2 === "utf-16le")) {
            if (e3.length < 2 || t2.length < 2)
              return -1;
            o2 = 2, a2 /= 2, c2 /= 2, r2 /= 2;
          }
          function u2(e4, t3) {
            return o2 === 1 ? e4[t3] : e4.readUInt16BE(t3 * o2);
          }
          if (i2) {
            var h2 = -1;
            for (s2 = r2; s2 < a2; s2++)
              if (u2(e3, s2) === u2(t2, h2 === -1 ? 0 : s2 - h2)) {
                if (h2 === -1 && (h2 = s2), s2 - h2 + 1 === c2)
                  return h2 * o2;
              } else
                h2 !== -1 && (s2 -= s2 - h2), h2 = -1;
          } else
            for (r2 + c2 > a2 && (r2 = a2 - c2), s2 = r2; s2 >= 0; s2--) {
              for (var f2 = true, d2 = 0; d2 < c2; d2++)
                if (u2(e3, s2 + d2) !== u2(t2, d2)) {
                  f2 = false;
                  break;
                }
              if (f2)
                return s2;
            }
          return -1;
        }
        function v(e3, t2, r2, n2) {
          r2 = Number(r2) || 0;
          var i2 = e3.length - r2;
          n2 ? (n2 = Number(n2)) > i2 && (n2 = i2) : n2 = i2;
          var s2 = t2.length;
          if (s2 % 2 != 0)
            throw new TypeError("Invalid hex string");
          n2 > s2 / 2 && (n2 = s2 / 2);
          for (var o2 = 0; o2 < n2; ++o2) {
            var a2 = parseInt(t2.substr(2 * o2, 2), 16);
            if (isNaN(a2))
              return o2;
            e3[r2 + o2] = a2;
          }
          return o2;
        }
        function w(e3, t2, r2, n2) {
          return q(F(t2, e3.length - r2), e3, r2, n2);
        }
        function _(e3, t2, r2, n2) {
          return q(function(e4) {
            for (var t3 = [], r3 = 0; r3 < e4.length; ++r3)
              t3.push(255 & e4.charCodeAt(r3));
            return t3;
          }(t2), e3, r2, n2);
        }
        function E(e3, t2, r2, n2) {
          return _(e3, t2, r2, n2);
        }
        function S(e3, t2, r2, n2) {
          return q(z(t2), e3, r2, n2);
        }
        function A(e3, t2, r2, n2) {
          return q(function(e4, t3) {
            for (var r3, n3, i2, s2 = [], o2 = 0; o2 < e4.length && !((t3 -= 2) < 0); ++o2)
              r3 = e4.charCodeAt(o2), n3 = r3 >> 8, i2 = r3 % 256, s2.push(i2), s2.push(n3);
            return s2;
          }(t2, e3.length - r2), e3, r2, n2);
        }
        function I(e3, t2, r2) {
          return t2 === 0 && r2 === e3.length ? n.fromByteArray(e3) : n.fromByteArray(e3.slice(t2, r2));
        }
        function k(e3, t2, r2) {
          r2 = Math.min(e3.length, r2);
          for (var n2 = [], i2 = t2; i2 < r2; ) {
            var s2, o2, a2, c2, u2 = e3[i2], h2 = null, f2 = u2 > 239 ? 4 : u2 > 223 ? 3 : u2 > 191 ? 2 : 1;
            if (i2 + f2 <= r2)
              switch (f2) {
                case 1:
                  u2 < 128 && (h2 = u2);
                  break;
                case 2:
                  (192 & (s2 = e3[i2 + 1])) == 128 && (c2 = (31 & u2) << 6 | 63 & s2) > 127 && (h2 = c2);
                  break;
                case 3:
                  s2 = e3[i2 + 1], o2 = e3[i2 + 2], (192 & s2) == 128 && (192 & o2) == 128 && (c2 = (15 & u2) << 12 | (63 & s2) << 6 | 63 & o2) > 2047 && (c2 < 55296 || c2 > 57343) && (h2 = c2);
                  break;
                case 4:
                  s2 = e3[i2 + 1], o2 = e3[i2 + 2], a2 = e3[i2 + 3], (192 & s2) == 128 && (192 & o2) == 128 && (192 & a2) == 128 && (c2 = (15 & u2) << 18 | (63 & s2) << 12 | (63 & o2) << 6 | 63 & a2) > 65535 && c2 < 1114112 && (h2 = c2);
              }
            h2 === null ? (h2 = 65533, f2 = 1) : h2 > 65535 && (h2 -= 65536, n2.push(h2 >>> 10 & 1023 | 55296), h2 = 56320 | 1023 & h2), n2.push(h2), i2 += f2;
          }
          return function(e4) {
            var t3 = e4.length;
            if (t3 <= 4096)
              return String.fromCharCode.apply(String, e4);
            var r3 = "", n3 = 0;
            for (; n3 < t3; )
              r3 += String.fromCharCode.apply(String, e4.slice(n3, n3 += 4096));
            return r3;
          }(n2);
        }
        t.Buffer = c, t.SlowBuffer = function(e3) {
          +e3 != e3 && (e3 = 0);
          return c.alloc(+e3);
        }, t.INSPECT_MAX_BYTES = 50, c.TYPED_ARRAY_SUPPORT = e2.TYPED_ARRAY_SUPPORT !== void 0 ? e2.TYPED_ARRAY_SUPPORT : function() {
          try {
            var e3 = new Uint8Array(1);
            return e3.__proto__ = {__proto__: Uint8Array.prototype, foo: function() {
              return 42;
            }}, e3.foo() === 42 && typeof e3.subarray == "function" && e3.subarray(1, 1).byteLength === 0;
          } catch (t2) {
            return false;
          }
        }(), t.kMaxLength = o(), c.poolSize = 8192, c._augment = function(e3) {
          return e3.__proto__ = c.prototype, e3;
        }, c.from = function(e3, t2, r2) {
          return u(null, e3, t2, r2);
        }, c.TYPED_ARRAY_SUPPORT && (c.prototype.__proto__ = Uint8Array.prototype, c.__proto__ = Uint8Array, typeof Symbol != "undefined" && Symbol.species && c[Symbol.species] === c && Object.defineProperty(c, Symbol.species, {value: null, configurable: true})), c.alloc = function(e3, t2, r2) {
          return function(e4, t3, r3, n2) {
            return h(t3), t3 <= 0 ? a(e4, t3) : r3 !== void 0 ? typeof n2 == "string" ? a(e4, t3).fill(r3, n2) : a(e4, t3).fill(r3) : a(e4, t3);
          }(null, e3, t2, r2);
        }, c.allocUnsafe = function(e3) {
          return f(null, e3);
        }, c.allocUnsafeSlow = function(e3) {
          return f(null, e3);
        }, c.isBuffer = function(e3) {
          return !(e3 == null || !e3._isBuffer);
        }, c.compare = function(e3, t2) {
          if (!c.isBuffer(e3) || !c.isBuffer(t2))
            throw new TypeError("Arguments must be Buffers");
          if (e3 === t2)
            return 0;
          for (var r2 = e3.length, n2 = t2.length, i2 = 0, s2 = Math.min(r2, n2); i2 < s2; ++i2)
            if (e3[i2] !== t2[i2]) {
              r2 = e3[i2], n2 = t2[i2];
              break;
            }
          return r2 < n2 ? -1 : n2 < r2 ? 1 : 0;
        }, c.isEncoding = function(e3) {
          switch (String(e3).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return true;
            default:
              return false;
          }
        }, c.concat = function(e3, t2) {
          if (!s(e3))
            throw new TypeError('"list" argument must be an Array of Buffers');
          if (e3.length === 0)
            return c.alloc(0);
          var r2;
          if (t2 === void 0)
            for (t2 = 0, r2 = 0; r2 < e3.length; ++r2)
              t2 += e3[r2].length;
          var n2 = c.allocUnsafe(t2), i2 = 0;
          for (r2 = 0; r2 < e3.length; ++r2) {
            var o2 = e3[r2];
            if (!c.isBuffer(o2))
              throw new TypeError('"list" argument must be an Array of Buffers');
            o2.copy(n2, i2), i2 += o2.length;
          }
          return n2;
        }, c.byteLength = p, c.prototype._isBuffer = true, c.prototype.swap16 = function() {
          var e3 = this.length;
          if (e3 % 2 != 0)
            throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (var t2 = 0; t2 < e3; t2 += 2)
            g(this, t2, t2 + 1);
          return this;
        }, c.prototype.swap32 = function() {
          var e3 = this.length;
          if (e3 % 4 != 0)
            throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (var t2 = 0; t2 < e3; t2 += 4)
            g(this, t2, t2 + 3), g(this, t2 + 1, t2 + 2);
          return this;
        }, c.prototype.swap64 = function() {
          var e3 = this.length;
          if (e3 % 8 != 0)
            throw new RangeError("Buffer size must be a multiple of 64-bits");
          for (var t2 = 0; t2 < e3; t2 += 8)
            g(this, t2, t2 + 7), g(this, t2 + 1, t2 + 6), g(this, t2 + 2, t2 + 5), g(this, t2 + 3, t2 + 4);
          return this;
        }, c.prototype.toString = function() {
          var e3 = 0 | this.length;
          return e3 === 0 ? "" : arguments.length === 0 ? k(this, 0, e3) : y.apply(this, arguments);
        }, c.prototype.equals = function(e3) {
          if (!c.isBuffer(e3))
            throw new TypeError("Argument must be a Buffer");
          return this === e3 || c.compare(this, e3) === 0;
        }, c.prototype.inspect = function() {
          var e3 = "", r2 = t.INSPECT_MAX_BYTES;
          return this.length > 0 && (e3 = this.toString("hex", 0, r2).match(/.{2}/g).join(" "), this.length > r2 && (e3 += " ... ")), "<Buffer " + e3 + ">";
        }, c.prototype.compare = function(e3, t2, r2, n2, i2) {
          if (!c.isBuffer(e3))
            throw new TypeError("Argument must be a Buffer");
          if (t2 === void 0 && (t2 = 0), r2 === void 0 && (r2 = e3 ? e3.length : 0), n2 === void 0 && (n2 = 0), i2 === void 0 && (i2 = this.length), t2 < 0 || r2 > e3.length || n2 < 0 || i2 > this.length)
            throw new RangeError("out of range index");
          if (n2 >= i2 && t2 >= r2)
            return 0;
          if (n2 >= i2)
            return -1;
          if (t2 >= r2)
            return 1;
          if (this === e3)
            return 0;
          for (var s2 = (i2 >>>= 0) - (n2 >>>= 0), o2 = (r2 >>>= 0) - (t2 >>>= 0), a2 = Math.min(s2, o2), u2 = this.slice(n2, i2), h2 = e3.slice(t2, r2), f2 = 0; f2 < a2; ++f2)
            if (u2[f2] !== h2[f2]) {
              s2 = u2[f2], o2 = h2[f2];
              break;
            }
          return s2 < o2 ? -1 : o2 < s2 ? 1 : 0;
        }, c.prototype.includes = function(e3, t2, r2) {
          return this.indexOf(e3, t2, r2) !== -1;
        }, c.prototype.indexOf = function(e3, t2, r2) {
          return b(this, e3, t2, r2, true);
        }, c.prototype.lastIndexOf = function(e3, t2, r2) {
          return b(this, e3, t2, r2, false);
        }, c.prototype.write = function(e3, t2, r2, n2) {
          if (t2 === void 0)
            n2 = "utf8", r2 = this.length, t2 = 0;
          else if (r2 === void 0 && typeof t2 == "string")
            n2 = t2, r2 = this.length, t2 = 0;
          else {
            if (!isFinite(t2))
              throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            t2 |= 0, isFinite(r2) ? (r2 |= 0, n2 === void 0 && (n2 = "utf8")) : (n2 = r2, r2 = void 0);
          }
          var i2 = this.length - t2;
          if ((r2 === void 0 || r2 > i2) && (r2 = i2), e3.length > 0 && (r2 < 0 || t2 < 0) || t2 > this.length)
            throw new RangeError("Attempt to write outside buffer bounds");
          n2 || (n2 = "utf8");
          for (var s2 = false; ; )
            switch (n2) {
              case "hex":
                return v(this, e3, t2, r2);
              case "utf8":
              case "utf-8":
                return w(this, e3, t2, r2);
              case "ascii":
                return _(this, e3, t2, r2);
              case "latin1":
              case "binary":
                return E(this, e3, t2, r2);
              case "base64":
                return S(this, e3, t2, r2);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return A(this, e3, t2, r2);
              default:
                if (s2)
                  throw new TypeError("Unknown encoding: " + n2);
                n2 = ("" + n2).toLowerCase(), s2 = true;
            }
        }, c.prototype.toJSON = function() {
          return {type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0)};
        };
        function R(e3, t2, r2) {
          var n2 = "";
          r2 = Math.min(e3.length, r2);
          for (var i2 = t2; i2 < r2; ++i2)
            n2 += String.fromCharCode(127 & e3[i2]);
          return n2;
        }
        function T(e3, t2, r2) {
          var n2 = "";
          r2 = Math.min(e3.length, r2);
          for (var i2 = t2; i2 < r2; ++i2)
            n2 += String.fromCharCode(e3[i2]);
          return n2;
        }
        function C(e3, t2, r2) {
          var n2 = e3.length;
          (!t2 || t2 < 0) && (t2 = 0), (!r2 || r2 < 0 || r2 > n2) && (r2 = n2);
          for (var i2 = "", s2 = t2; s2 < r2; ++s2)
            i2 += j(e3[s2]);
          return i2;
        }
        function M(e3, t2, r2) {
          for (var n2 = e3.slice(t2, r2), i2 = "", s2 = 0; s2 < n2.length; s2 += 2)
            i2 += String.fromCharCode(n2[s2] + 256 * n2[s2 + 1]);
          return i2;
        }
        function x(e3, t2, r2) {
          if (e3 % 1 != 0 || e3 < 0)
            throw new RangeError("offset is not uint");
          if (e3 + t2 > r2)
            throw new RangeError("Trying to access beyond buffer length");
        }
        function N(e3, t2, r2, n2, i2, s2) {
          if (!c.isBuffer(e3))
            throw new TypeError('"buffer" argument must be a Buffer instance');
          if (t2 > i2 || t2 < s2)
            throw new RangeError('"value" argument is out of bounds');
          if (r2 + n2 > e3.length)
            throw new RangeError("Index out of range");
        }
        function P(e3, t2, r2, n2) {
          t2 < 0 && (t2 = 65535 + t2 + 1);
          for (var i2 = 0, s2 = Math.min(e3.length - r2, 2); i2 < s2; ++i2)
            e3[r2 + i2] = (t2 & 255 << 8 * (n2 ? i2 : 1 - i2)) >>> 8 * (n2 ? i2 : 1 - i2);
        }
        function B(e3, t2, r2, n2) {
          t2 < 0 && (t2 = 4294967295 + t2 + 1);
          for (var i2 = 0, s2 = Math.min(e3.length - r2, 4); i2 < s2; ++i2)
            e3[r2 + i2] = t2 >>> 8 * (n2 ? i2 : 3 - i2) & 255;
        }
        function O(e3, t2, r2, n2, i2, s2) {
          if (r2 + n2 > e3.length)
            throw new RangeError("Index out of range");
          if (r2 < 0)
            throw new RangeError("Index out of range");
        }
        function D(e3, t2, r2, n2, s2) {
          return s2 || O(e3, 0, r2, 4), i.write(e3, t2, r2, n2, 23, 4), r2 + 4;
        }
        function L(e3, t2, r2, n2, s2) {
          return s2 || O(e3, 0, r2, 8), i.write(e3, t2, r2, n2, 52, 8), r2 + 8;
        }
        c.prototype.slice = function(e3, t2) {
          var r2, n2 = this.length;
          if ((e3 = ~~e3) < 0 ? (e3 += n2) < 0 && (e3 = 0) : e3 > n2 && (e3 = n2), (t2 = t2 === void 0 ? n2 : ~~t2) < 0 ? (t2 += n2) < 0 && (t2 = 0) : t2 > n2 && (t2 = n2), t2 < e3 && (t2 = e3), c.TYPED_ARRAY_SUPPORT)
            (r2 = this.subarray(e3, t2)).__proto__ = c.prototype;
          else {
            var i2 = t2 - e3;
            r2 = new c(i2, void 0);
            for (var s2 = 0; s2 < i2; ++s2)
              r2[s2] = this[s2 + e3];
          }
          return r2;
        }, c.prototype.readUIntLE = function(e3, t2, r2) {
          e3 |= 0, t2 |= 0, r2 || x(e3, t2, this.length);
          for (var n2 = this[e3], i2 = 1, s2 = 0; ++s2 < t2 && (i2 *= 256); )
            n2 += this[e3 + s2] * i2;
          return n2;
        }, c.prototype.readUIntBE = function(e3, t2, r2) {
          e3 |= 0, t2 |= 0, r2 || x(e3, t2, this.length);
          for (var n2 = this[e3 + --t2], i2 = 1; t2 > 0 && (i2 *= 256); )
            n2 += this[e3 + --t2] * i2;
          return n2;
        }, c.prototype.readUInt8 = function(e3, t2) {
          return t2 || x(e3, 1, this.length), this[e3];
        }, c.prototype.readUInt16LE = function(e3, t2) {
          return t2 || x(e3, 2, this.length), this[e3] | this[e3 + 1] << 8;
        }, c.prototype.readUInt16BE = function(e3, t2) {
          return t2 || x(e3, 2, this.length), this[e3] << 8 | this[e3 + 1];
        }, c.prototype.readUInt32LE = function(e3, t2) {
          return t2 || x(e3, 4, this.length), (this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16) + 16777216 * this[e3 + 3];
        }, c.prototype.readUInt32BE = function(e3, t2) {
          return t2 || x(e3, 4, this.length), 16777216 * this[e3] + (this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3]);
        }, c.prototype.readIntLE = function(e3, t2, r2) {
          e3 |= 0, t2 |= 0, r2 || x(e3, t2, this.length);
          for (var n2 = this[e3], i2 = 1, s2 = 0; ++s2 < t2 && (i2 *= 256); )
            n2 += this[e3 + s2] * i2;
          return n2 >= (i2 *= 128) && (n2 -= Math.pow(2, 8 * t2)), n2;
        }, c.prototype.readIntBE = function(e3, t2, r2) {
          e3 |= 0, t2 |= 0, r2 || x(e3, t2, this.length);
          for (var n2 = t2, i2 = 1, s2 = this[e3 + --n2]; n2 > 0 && (i2 *= 256); )
            s2 += this[e3 + --n2] * i2;
          return s2 >= (i2 *= 128) && (s2 -= Math.pow(2, 8 * t2)), s2;
        }, c.prototype.readInt8 = function(e3, t2) {
          return t2 || x(e3, 1, this.length), 128 & this[e3] ? -1 * (255 - this[e3] + 1) : this[e3];
        }, c.prototype.readInt16LE = function(e3, t2) {
          t2 || x(e3, 2, this.length);
          var r2 = this[e3] | this[e3 + 1] << 8;
          return 32768 & r2 ? 4294901760 | r2 : r2;
        }, c.prototype.readInt16BE = function(e3, t2) {
          t2 || x(e3, 2, this.length);
          var r2 = this[e3 + 1] | this[e3] << 8;
          return 32768 & r2 ? 4294901760 | r2 : r2;
        }, c.prototype.readInt32LE = function(e3, t2) {
          return t2 || x(e3, 4, this.length), this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16 | this[e3 + 3] << 24;
        }, c.prototype.readInt32BE = function(e3, t2) {
          return t2 || x(e3, 4, this.length), this[e3] << 24 | this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3];
        }, c.prototype.readFloatLE = function(e3, t2) {
          return t2 || x(e3, 4, this.length), i.read(this, e3, true, 23, 4);
        }, c.prototype.readFloatBE = function(e3, t2) {
          return t2 || x(e3, 4, this.length), i.read(this, e3, false, 23, 4);
        }, c.prototype.readDoubleLE = function(e3, t2) {
          return t2 || x(e3, 8, this.length), i.read(this, e3, true, 52, 8);
        }, c.prototype.readDoubleBE = function(e3, t2) {
          return t2 || x(e3, 8, this.length), i.read(this, e3, false, 52, 8);
        }, c.prototype.writeUIntLE = function(e3, t2, r2, n2) {
          (e3 = +e3, t2 |= 0, r2 |= 0, n2) || N(this, e3, t2, r2, Math.pow(2, 8 * r2) - 1, 0);
          var i2 = 1, s2 = 0;
          for (this[t2] = 255 & e3; ++s2 < r2 && (i2 *= 256); )
            this[t2 + s2] = e3 / i2 & 255;
          return t2 + r2;
        }, c.prototype.writeUIntBE = function(e3, t2, r2, n2) {
          (e3 = +e3, t2 |= 0, r2 |= 0, n2) || N(this, e3, t2, r2, Math.pow(2, 8 * r2) - 1, 0);
          var i2 = r2 - 1, s2 = 1;
          for (this[t2 + i2] = 255 & e3; --i2 >= 0 && (s2 *= 256); )
            this[t2 + i2] = e3 / s2 & 255;
          return t2 + r2;
        }, c.prototype.writeUInt8 = function(e3, t2, r2) {
          return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 1, 255, 0), c.TYPED_ARRAY_SUPPORT || (e3 = Math.floor(e3)), this[t2] = 255 & e3, t2 + 1;
        }, c.prototype.writeUInt16LE = function(e3, t2, r2) {
          return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 2, 65535, 0), c.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e3, this[t2 + 1] = e3 >>> 8) : P(this, e3, t2, true), t2 + 2;
        }, c.prototype.writeUInt16BE = function(e3, t2, r2) {
          return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 2, 65535, 0), c.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 8, this[t2 + 1] = 255 & e3) : P(this, e3, t2, false), t2 + 2;
        }, c.prototype.writeUInt32LE = function(e3, t2, r2) {
          return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 4, 4294967295, 0), c.TYPED_ARRAY_SUPPORT ? (this[t2 + 3] = e3 >>> 24, this[t2 + 2] = e3 >>> 16, this[t2 + 1] = e3 >>> 8, this[t2] = 255 & e3) : B(this, e3, t2, true), t2 + 4;
        }, c.prototype.writeUInt32BE = function(e3, t2, r2) {
          return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 4, 4294967295, 0), c.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 24, this[t2 + 1] = e3 >>> 16, this[t2 + 2] = e3 >>> 8, this[t2 + 3] = 255 & e3) : B(this, e3, t2, false), t2 + 4;
        }, c.prototype.writeIntLE = function(e3, t2, r2, n2) {
          if (e3 = +e3, t2 |= 0, !n2) {
            var i2 = Math.pow(2, 8 * r2 - 1);
            N(this, e3, t2, r2, i2 - 1, -i2);
          }
          var s2 = 0, o2 = 1, a2 = 0;
          for (this[t2] = 255 & e3; ++s2 < r2 && (o2 *= 256); )
            e3 < 0 && a2 === 0 && this[t2 + s2 - 1] !== 0 && (a2 = 1), this[t2 + s2] = (e3 / o2 >> 0) - a2 & 255;
          return t2 + r2;
        }, c.prototype.writeIntBE = function(e3, t2, r2, n2) {
          if (e3 = +e3, t2 |= 0, !n2) {
            var i2 = Math.pow(2, 8 * r2 - 1);
            N(this, e3, t2, r2, i2 - 1, -i2);
          }
          var s2 = r2 - 1, o2 = 1, a2 = 0;
          for (this[t2 + s2] = 255 & e3; --s2 >= 0 && (o2 *= 256); )
            e3 < 0 && a2 === 0 && this[t2 + s2 + 1] !== 0 && (a2 = 1), this[t2 + s2] = (e3 / o2 >> 0) - a2 & 255;
          return t2 + r2;
        }, c.prototype.writeInt8 = function(e3, t2, r2) {
          return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 1, 127, -128), c.TYPED_ARRAY_SUPPORT || (e3 = Math.floor(e3)), e3 < 0 && (e3 = 255 + e3 + 1), this[t2] = 255 & e3, t2 + 1;
        }, c.prototype.writeInt16LE = function(e3, t2, r2) {
          return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 2, 32767, -32768), c.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e3, this[t2 + 1] = e3 >>> 8) : P(this, e3, t2, true), t2 + 2;
        }, c.prototype.writeInt16BE = function(e3, t2, r2) {
          return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 2, 32767, -32768), c.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 8, this[t2 + 1] = 255 & e3) : P(this, e3, t2, false), t2 + 2;
        }, c.prototype.writeInt32LE = function(e3, t2, r2) {
          return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 4, 2147483647, -2147483648), c.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e3, this[t2 + 1] = e3 >>> 8, this[t2 + 2] = e3 >>> 16, this[t2 + 3] = e3 >>> 24) : B(this, e3, t2, true), t2 + 4;
        }, c.prototype.writeInt32BE = function(e3, t2, r2) {
          return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 4, 2147483647, -2147483648), e3 < 0 && (e3 = 4294967295 + e3 + 1), c.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 24, this[t2 + 1] = e3 >>> 16, this[t2 + 2] = e3 >>> 8, this[t2 + 3] = 255 & e3) : B(this, e3, t2, false), t2 + 4;
        }, c.prototype.writeFloatLE = function(e3, t2, r2) {
          return D(this, e3, t2, true, r2);
        }, c.prototype.writeFloatBE = function(e3, t2, r2) {
          return D(this, e3, t2, false, r2);
        }, c.prototype.writeDoubleLE = function(e3, t2, r2) {
          return L(this, e3, t2, true, r2);
        }, c.prototype.writeDoubleBE = function(e3, t2, r2) {
          return L(this, e3, t2, false, r2);
        }, c.prototype.copy = function(e3, t2, r2, n2) {
          if (r2 || (r2 = 0), n2 || n2 === 0 || (n2 = this.length), t2 >= e3.length && (t2 = e3.length), t2 || (t2 = 0), n2 > 0 && n2 < r2 && (n2 = r2), n2 === r2)
            return 0;
          if (e3.length === 0 || this.length === 0)
            return 0;
          if (t2 < 0)
            throw new RangeError("targetStart out of bounds");
          if (r2 < 0 || r2 >= this.length)
            throw new RangeError("sourceStart out of bounds");
          if (n2 < 0)
            throw new RangeError("sourceEnd out of bounds");
          n2 > this.length && (n2 = this.length), e3.length - t2 < n2 - r2 && (n2 = e3.length - t2 + r2);
          var i2, s2 = n2 - r2;
          if (this === e3 && r2 < t2 && t2 < n2)
            for (i2 = s2 - 1; i2 >= 0; --i2)
              e3[i2 + t2] = this[i2 + r2];
          else if (s2 < 1e3 || !c.TYPED_ARRAY_SUPPORT)
            for (i2 = 0; i2 < s2; ++i2)
              e3[i2 + t2] = this[i2 + r2];
          else
            Uint8Array.prototype.set.call(e3, this.subarray(r2, r2 + s2), t2);
          return s2;
        }, c.prototype.fill = function(e3, t2, r2, n2) {
          if (typeof e3 == "string") {
            if (typeof t2 == "string" ? (n2 = t2, t2 = 0, r2 = this.length) : typeof r2 == "string" && (n2 = r2, r2 = this.length), e3.length === 1) {
              var i2 = e3.charCodeAt(0);
              i2 < 256 && (e3 = i2);
            }
            if (n2 !== void 0 && typeof n2 != "string")
              throw new TypeError("encoding must be a string");
            if (typeof n2 == "string" && !c.isEncoding(n2))
              throw new TypeError("Unknown encoding: " + n2);
          } else
            typeof e3 == "number" && (e3 &= 255);
          if (t2 < 0 || this.length < t2 || this.length < r2)
            throw new RangeError("Out of range index");
          if (r2 <= t2)
            return this;
          var s2;
          if (t2 >>>= 0, r2 = r2 === void 0 ? this.length : r2 >>> 0, e3 || (e3 = 0), typeof e3 == "number")
            for (s2 = t2; s2 < r2; ++s2)
              this[s2] = e3;
          else {
            var o2 = c.isBuffer(e3) ? e3 : F(new c(e3, n2).toString()), a2 = o2.length;
            for (s2 = 0; s2 < r2 - t2; ++s2)
              this[s2 + t2] = o2[s2 % a2];
          }
          return this;
        };
        var U = /[^+\/0-9A-Za-z-_]/g;
        function j(e3) {
          return e3 < 16 ? "0" + e3.toString(16) : e3.toString(16);
        }
        function F(e3, t2) {
          var r2;
          t2 = t2 || 1 / 0;
          for (var n2 = e3.length, i2 = null, s2 = [], o2 = 0; o2 < n2; ++o2) {
            if ((r2 = e3.charCodeAt(o2)) > 55295 && r2 < 57344) {
              if (!i2) {
                if (r2 > 56319) {
                  (t2 -= 3) > -1 && s2.push(239, 191, 189);
                  continue;
                }
                if (o2 + 1 === n2) {
                  (t2 -= 3) > -1 && s2.push(239, 191, 189);
                  continue;
                }
                i2 = r2;
                continue;
              }
              if (r2 < 56320) {
                (t2 -= 3) > -1 && s2.push(239, 191, 189), i2 = r2;
                continue;
              }
              r2 = 65536 + (i2 - 55296 << 10 | r2 - 56320);
            } else
              i2 && (t2 -= 3) > -1 && s2.push(239, 191, 189);
            if (i2 = null, r2 < 128) {
              if ((t2 -= 1) < 0)
                break;
              s2.push(r2);
            } else if (r2 < 2048) {
              if ((t2 -= 2) < 0)
                break;
              s2.push(r2 >> 6 | 192, 63 & r2 | 128);
            } else if (r2 < 65536) {
              if ((t2 -= 3) < 0)
                break;
              s2.push(r2 >> 12 | 224, r2 >> 6 & 63 | 128, 63 & r2 | 128);
            } else {
              if (!(r2 < 1114112))
                throw new Error("Invalid code point");
              if ((t2 -= 4) < 0)
                break;
              s2.push(r2 >> 18 | 240, r2 >> 12 & 63 | 128, r2 >> 6 & 63 | 128, 63 & r2 | 128);
            }
          }
          return s2;
        }
        function z(e3) {
          return n.toByteArray(function(e4) {
            if ((e4 = function(e5) {
              return e5.trim ? e5.trim() : e5.replace(/^\s+|\s+$/g, "");
            }(e4).replace(U, "")).length < 2)
              return "";
            for (; e4.length % 4 != 0; )
              e4 += "=";
            return e4;
          }(e3));
        }
        function q(e3, t2, r2, n2) {
          for (var i2 = 0; i2 < n2 && !(i2 + r2 >= t2.length || i2 >= e3.length); ++i2)
            t2[i2 + r2] = e3[i2];
          return i2;
        }
      }).call(this, r(12));
    }, function(e, t, r) {
      "use strict";
      const n = r(48), i = r(30), s = r(17), {baseTable: o} = r(77), a = r(412), c = r(27), u = r(5), h = r(19), f = Object.keys(o).reduce((e2, t2) => (e2[o[t2]] = t2, e2), {}), d = Symbol.for("@ipld/js-cid/CID");
      class l {
        constructor(e2, t2, r2, o2) {
          if (Object.defineProperty(this, d, {value: true}), l.isCID(e2)) {
            const t3 = e2;
            return this.version = t3.version, this.codec = t3.codec, this.multihash = t3.multihash, void (this.multibaseName = t3.multibaseName || (t3.version === 0 ? "base58btc" : "base32"));
          }
          if (typeof e2 == "string") {
            const t3 = i.isEncoded(e2);
            if (t3) {
              const r3 = i.decode(e2);
              this.version = parseInt(r3[0].toString(), 16), this.codec = s.getCodec(r3.slice(1)), this.multihash = s.rmPrefix(r3.slice(1)), this.multibaseName = t3;
            } else
              this.version = 0, this.codec = "dag-pb", this.multihash = n.fromB58String(e2), this.multibaseName = "base58btc";
            return l.validateCID(this), void Object.defineProperty(this, "string", {value: e2});
          }
          if (e2 instanceof Uint8Array) {
            const t3 = parseInt(e2[0].toString(), 16);
            if (t3 === 1) {
              const r3 = e2;
              this.version = t3, this.codec = s.getCodec(r3.slice(1)), this.multihash = s.rmPrefix(r3.slice(1)), this.multibaseName = "base32";
            } else
              this.version = 0, this.codec = "dag-pb", this.multihash = e2, this.multibaseName = "base58btc";
            l.validateCID(this);
          } else
            this.version = e2, typeof t2 == "number" && (t2 = f[t2]), this.codec = t2, this.multihash = r2, this.multibaseName = o2 || (e2 === 0 ? "base58btc" : "base32"), l.validateCID(this);
        }
        get bytes() {
          let e2 = this._bytes;
          if (!e2) {
            if (this.version === 0)
              e2 = this.multihash;
            else {
              if (this.version !== 1)
                throw new Error("unsupported version");
              {
                const t2 = s.getCodeVarint(this.codec);
                e2 = c([[1], t2, this.multihash], 1 + t2.byteLength + this.multihash.byteLength);
              }
            }
            Object.defineProperty(this, "_bytes", {value: e2});
          }
          return e2;
        }
        get prefix() {
          const e2 = s.getCodeVarint(this.codec), t2 = n.prefix(this.multihash);
          return c([[this.version], e2, t2], 1 + e2.byteLength + t2.byteLength);
        }
        get code() {
          return o[this.codec];
        }
        toV0() {
          if (this.codec !== "dag-pb")
            throw new Error("Cannot convert a non dag-pb CID to CIDv0");
          const {name: e2, length: t2} = n.decode(this.multihash);
          if (e2 !== "sha2-256")
            throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");
          if (t2 !== 32)
            throw new Error("Cannot convert non 32 byte multihash CID to CIDv0");
          return new l(0, this.codec, this.multihash);
        }
        toV1() {
          return new l(1, this.codec, this.multihash);
        }
        toBaseEncodedString(e2 = this.multibaseName) {
          if (this.string && this.string.length !== 0 && e2 === this.multibaseName)
            return this.string;
          let t2;
          if (this.version === 0) {
            if (e2 !== "base58btc")
              throw new Error("not supported with CIDv0, to support different bases, please migrate the instance do CIDv1, you can do that through cid.toV1()");
            t2 = n.toB58String(this.multihash);
          } else {
            if (this.version !== 1)
              throw new Error("unsupported version");
            t2 = u(i.encode(e2, this.bytes));
          }
          return e2 === this.multibaseName && Object.defineProperty(this, "string", {value: t2}), t2;
        }
        [Symbol.for("nodejs.util.inspect.custom")]() {
          return "CID(" + this.toString() + ")";
        }
        toString(e2) {
          return this.toBaseEncodedString(e2);
        }
        toJSON() {
          return {codec: this.codec, version: this.version, hash: this.multihash};
        }
        equals(e2) {
          return this.codec === e2.codec && this.version === e2.version && h(this.multihash, e2.multihash);
        }
        static validateCID(e2) {
          const t2 = a.checkCIDComponents(e2);
          if (t2)
            throw new Error(t2);
        }
        static isCID(e2) {
          return e2 instanceof l || Boolean(e2 && e2[d]);
        }
      }
      l.codecs = o, e.exports = l;
    }, function(e, t, r) {
      "use strict";
      const {names: n} = r(132), {TextDecoder: i} = r(134), s = new i("utf8");
      e.exports = function(e2, t2 = "utf8") {
        if (t2 === "utf8" || t2 === "utf-8")
          return s.decode(e2);
        if (t2 === "ascii")
          return function(e3) {
            let t3 = "";
            for (let r3 = 0; r3 < e3.length; r3++)
              t3 += String.fromCharCode(e3[r3]);
            return t3;
          }(e2);
        const r2 = n[t2];
        if (!r2)
          throw new Error("Unknown base");
        return r2.encode(e2);
      };
    }, function(e, t, r) {
      "use strict";
      const {names: n} = r(132), {TextEncoder: i} = r(134), s = new i();
      e.exports = function(e2, t2 = "utf8") {
        if (t2 === "utf8" || t2 === "utf-8")
          return s.encode(e2);
        if (t2 === "ascii")
          return function(e3) {
            const t3 = new Uint8Array(e3.length);
            for (let r3 = 0; r3 < e3.length; r3++)
              t3[r3] = e3.charCodeAt(r3);
            return t3;
          }(e2);
        const r2 = n[t2];
        if (!r2)
          throw new Error("Unknown base");
        return r2.decode(e2);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(48), i = r(4), s = r(136), o = r(24), {PeerIdProto: a} = r(491), c = r(19), u = r(6), h = r(5);
      const f = o(class {
        constructor(e2, t2, r2) {
          if (!(e2 instanceof Uint8Array))
            throw new Error("invalid id provided");
          if (t2 && r2 && !c(t2.public.bytes, r2.bytes))
            throw new Error("inconsistent arguments");
          this._id = e2, this._idB58String = n.toB58String(this.id), this._privKey = t2, this._pubKey = r2;
        }
        get id() {
          return this._id;
        }
        set id(e2) {
          throw new Error("Id is immutable");
        }
        get privKey() {
          return this._privKey;
        }
        set privKey(e2) {
          this._privKey = e2;
        }
        get pubKey() {
          if (this._pubKey)
            return this._pubKey;
          if (this._privKey)
            return this._privKey.public;
          try {
            const e2 = n.decode(this.id);
            e2.name === "identity" && (this._pubKey = s.unmarshalPublicKey(e2.digest));
          } catch (e2) {
          }
          return this._pubKey;
        }
        set pubKey(e2) {
          this._pubKey = e2;
        }
        marshalPubKey() {
          if (this.pubKey)
            return s.marshalPublicKey(this.pubKey);
        }
        marshalPrivKey() {
          if (this.privKey)
            return s.marshalPrivateKey(this.privKey);
        }
        marshal(e2) {
          return a.encode({id: this.toBytes(), pubKey: this.marshalPubKey(), privKey: e2 ? null : this.marshalPrivKey()});
        }
        toPrint() {
          let e2 = this.toB58String();
          e2.startsWith("Qm") && (e2 = e2.slice(2));
          let t2 = 6;
          return e2.length < t2 && (t2 = e2.length), "<peer.ID " + e2.substr(0, t2) + ">";
        }
        toJSON() {
          return {id: this.toB58String(), privKey: p(this.marshalPrivKey()), pubKey: p(this.marshalPubKey())};
        }
        toHexString() {
          return n.toHexString(this.id);
        }
        toBytes() {
          return this.id;
        }
        toB58String() {
          return this._idB58String;
        }
        toString() {
          if (!this._idCIDString) {
            const e2 = new i(1, "libp2p-key", this.id, "base32");
            this._idCIDString = e2.toBaseEncodedString("base32");
          }
          return this._idCIDString;
        }
        equals(e2) {
          if (e2 instanceof Uint8Array)
            return c(this.id, e2);
          if (e2.id)
            return c(this.id, e2.id);
          throw new Error("not valid Id");
        }
        isEqual(e2) {
          return this.equals(e2);
        }
        isValid() {
          return Boolean(this.privKey && this.privKey.public && this.privKey.public.bytes && this.pubKey.bytes instanceof Uint8Array && c(this.privKey.public.bytes, this.pubKey.bytes));
        }
        hasInlinePublicKey() {
          try {
            if (n.decode(this.id).name === "identity")
              return true;
          } catch (e2) {
          }
          return false;
        }
      }, {className: "PeerId", symbolName: "@libp2p/js-peer-id/PeerId"});
      t = e.exports = f;
      const d = (e2) => e2.bytes.length <= 42 ? n.encode(e2.bytes, "identity") : e2.hash(), l = async (e2, t2) => {
        const r2 = await d(t2);
        return new f(r2, e2, t2);
      };
      t.create = async (e2) => {
        (e2 = e2 || {}).bits = e2.bits || 2048, e2.keyType = e2.keyType || "RSA";
        const t2 = await s.generateKeyPair(e2.keyType, e2.bits);
        return l(t2, t2.public);
      }, t.createFromHexString = (e2) => new f(n.fromHexString(e2)), t.createFromBytes = (e2) => new f(e2), t.createFromB58String = (e2) => t.createFromCID(e2);
      function p(e2) {
        if (e2)
          return h(e2, "base64pad");
      }
      t.createFromCID = (e2) => {
        if (!((e3) => e3.codec === "libp2p-key" || e3.codec === "dag-pb")(e2 = i.isCID(e2) ? e2 : new i(e2)))
          throw new Error("Supplied PeerID CID has invalid multicodec: " + e2.codec);
        return new f(e2.multihash);
      }, t.createFromPubKey = async (e2) => {
        let t2 = e2;
        if (typeof t2 == "string" && (t2 = u(e2, "base64pad")), !(t2 instanceof Uint8Array))
          throw new Error("Supplied key is neither a base64 string nor a Uint8Array");
        const r2 = await s.unmarshalPublicKey(t2);
        return l(null, r2);
      }, t.createFromPrivKey = async (e2) => {
        if (typeof e2 == "string" && (e2 = u(e2, "base64pad")), !(e2 instanceof Uint8Array))
          throw new Error("Supplied key is neither a base64 string nor a Uint8Array");
        const t2 = await s.unmarshalPrivateKey(e2);
        return l(t2, t2.public);
      }, t.createFromJSON = async (e2) => {
        const t2 = n.fromB58String(e2.id), r2 = e2.privKey && u(e2.privKey, "base64pad"), i2 = e2.pubKey && u(e2.pubKey, "base64pad"), o2 = i2 && await s.unmarshalPublicKey(i2);
        if (!r2)
          return new f(t2, null, o2);
        const a2 = await s.unmarshalPrivateKey(r2), h2 = await d(a2.public);
        let l2;
        if (o2 && (l2 = await d(o2)), o2 && !c(h2, l2))
          throw new Error("Public and private key do not match");
        if (t2 && !c(h2, t2))
          throw new Error("Id and private key do not match");
        return new f(t2, a2, o2);
      }, t.createFromProtobuf = async (e2) => {
        typeof e2 == "string" && (e2 = u(e2, "base16"));
        let t2, r2, {id: n2, privKey: i2, pubKey: o2} = a.decode(e2);
        if (i2 = !!i2 && await s.unmarshalPrivateKey(i2), o2 = !!o2 && await s.unmarshalPublicKey(o2), i2 && (r2 = await d(i2.public)), o2 && (t2 = await d(o2)), i2) {
          if (o2 && !c(r2, t2))
            throw new Error("Public and private key do not match");
          return new f(r2, i2, i2.public);
        }
        if (o2)
          return new f(t2, null, o2);
        if (n2)
          return new f(n2);
        throw new Error("Protobuf did not contain any usable key material");
      }, t.isPeerId = (e2) => Boolean(typeof e2 == "object" && e2._id && e2._idB58String);
    }, function(e, t, r) {
      "use strict";
      e.exports = {options: {usePureJavaScript: false}};
    }, function(e, t, r) {
      "use strict";
      const n = r(240), i = r(520), s = r(148), o = r(246), a = r(244);
      t.Key = n, t.MemoryDatastore = i, t.utils = s, t.Errors = o, t.Adapter = a;
    }, function(e, t, r) {
      "use strict";
      var n, i, s = e.exports = {};
      function o() {
        throw new Error("setTimeout has not been defined");
      }
      function a() {
        throw new Error("clearTimeout has not been defined");
      }
      function c(e2) {
        if (n === setTimeout)
          return setTimeout(e2, 0);
        if ((n === o || !n) && setTimeout)
          return n = setTimeout, setTimeout(e2, 0);
        try {
          return n(e2, 0);
        } catch (t2) {
          try {
            return n.call(null, e2, 0);
          } catch (t3) {
            return n.call(this, e2, 0);
          }
        }
      }
      !function() {
        try {
          n = typeof setTimeout == "function" ? setTimeout : o;
        } catch (e2) {
          n = o;
        }
        try {
          i = typeof clearTimeout == "function" ? clearTimeout : a;
        } catch (e2) {
          i = a;
        }
      }();
      var u, h = [], f = false, d = -1;
      function l() {
        f && u && (f = false, u.length ? h = u.concat(h) : d = -1, h.length && p());
      }
      function p() {
        if (!f) {
          var e2 = c(l);
          f = true;
          for (var t2 = h.length; t2; ) {
            for (u = h, h = []; ++d < t2; )
              u && u[d].run();
            d = -1, t2 = h.length;
          }
          u = null, f = false, function(e3) {
            if (i === clearTimeout)
              return clearTimeout(e3);
            if ((i === a || !i) && clearTimeout)
              return i = clearTimeout, clearTimeout(e3);
            try {
              i(e3);
            } catch (t3) {
              try {
                return i.call(null, e3);
              } catch (t4) {
                return i.call(this, e3);
              }
            }
          }(e2);
        }
      }
      function y(e2, t2) {
        this.fun = e2, this.array = t2;
      }
      function g() {
      }
      s.nextTick = function(e2) {
        var t2 = new Array(arguments.length - 1);
        if (arguments.length > 1)
          for (var r2 = 1; r2 < arguments.length; r2++)
            t2[r2 - 1] = arguments[r2];
        h.push(new y(e2, t2)), h.length !== 1 || f || c(p);
      }, y.prototype.run = function() {
        this.fun.apply(null, this.array);
      }, s.title = "browser", s.browser = true, s.env = {}, s.argv = [], s.version = "", s.versions = {}, s.on = g, s.addListener = g, s.once = g, s.off = g, s.removeListener = g, s.removeAllListeners = g, s.emit = g, s.prependListener = g, s.prependOnceListener = g, s.listeners = function(e2) {
        return [];
      }, s.binding = function(e2) {
        throw new Error("process.binding is not supported");
      }, s.cwd = function() {
        return "/";
      }, s.chdir = function(e2) {
        throw new Error("process.chdir is not supported");
      }, s.umask = function() {
        return 0;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(496), i = r(105), s = r(147), o = r(4), a = r(24), c = r(0), u = Symbol.for("nodejs.util.inspect.custom"), h = r(5), f = r(19), d = new Map(), l = a.proto(function(e2) {
        if (!(this instanceof l))
          return new l(e2);
        if (e2 == null && (e2 = ""), e2 instanceof Uint8Array)
          this.bytes = n.fromBytes(e2);
        else if (typeof e2 == "string" || e2 instanceof String) {
          if (e2.length > 0 && e2.charAt(0) !== "/")
            throw new Error(`multiaddr "${e2}" must start with a "/"`);
          this.bytes = n.fromString(e2);
        } else {
          if (!(e2.bytes && e2.protos && e2.protoCodes))
            throw new Error("addr must be a string, Buffer, or another Multiaddr");
          this.bytes = n.fromBytes(e2.bytes);
        }
      }, {className: "Multiaddr", symbolName: "@multiformats/js-multiaddr/multiaddr"});
      l.prototype.toString = function() {
        return n.bytesToString(this.bytes);
      }, l.prototype.toJSON = l.prototype.toString, l.prototype.toOptions = function() {
        const e2 = {}, t2 = this.toString().split("/");
        return e2.family = t2[1] === "ip4" ? "ipv4" : "ipv6", e2.host = t2[2], e2.transport = t2[3], e2.port = parseInt(t2[4]), e2;
      }, l.prototype[u] = function() {
        return "<Multiaddr " + h(this.bytes, "base16") + " - " + n.bytesToString(this.bytes) + ">";
      }, l.prototype.inspect = function() {
        return "<Multiaddr " + h(this.bytes, "base16") + " - " + n.bytesToString(this.bytes) + ">";
      }, l.prototype.protos = function() {
        return this.protoCodes().map((e2) => Object.assign({}, i(e2)));
      }, l.prototype.protoCodes = function() {
        const e2 = [], t2 = this.bytes;
        let r2 = 0;
        for (; r2 < t2.length; ) {
          const o2 = s.decode(t2, r2), a2 = s.decode.bytes, c2 = i(o2);
          r2 += n.sizeForAddr(c2, t2.slice(r2 + a2)) + a2, e2.push(o2);
        }
        return e2;
      }, l.prototype.protoNames = function() {
        return this.protos().map((e2) => e2.name);
      }, l.prototype.tuples = function() {
        return n.bytesToTuples(this.bytes);
      }, l.prototype.stringTuples = function() {
        const e2 = n.bytesToTuples(this.bytes);
        return n.tuplesToStringTuples(e2);
      }, l.prototype.encapsulate = function(e2) {
        return e2 = l(e2), l(this.toString() + e2.toString());
      }, l.prototype.decapsulate = function(e2) {
        e2 = e2.toString();
        const t2 = this.toString(), r2 = t2.lastIndexOf(e2);
        if (r2 < 0)
          throw new Error("Address " + this + " does not contain subaddress: " + e2);
        return l(t2.slice(0, r2));
      }, l.prototype.decapsulateCode = function(e2) {
        const t2 = this.tuples();
        for (let r2 = t2.length - 1; r2 >= 0; r2--)
          if (t2[r2][0] === e2)
            return l(n.tuplesToBytes(t2.slice(0, r2)));
        return this;
      }, l.prototype.getPeerId = function() {
        let e2 = null;
        try {
          e2 = this.stringTuples().filter((e3) => {
            if (e3[0] === i.names.ipfs.code)
              return true;
          }).pop()[1], e2 = h(new o(e2).multihash, "base58btc");
        } catch (t2) {
          e2 = null;
        }
        return e2;
      }, l.prototype.getPath = function() {
        let e2 = null;
        try {
          e2 = this.stringTuples().filter((e3) => {
            if (i(e3[0]).path)
              return true;
          })[0][1];
        } catch (t2) {
          e2 = null;
        }
        return e2;
      }, l.prototype.equals = function(e2) {
        return f(this.bytes, e2.bytes);
      }, l.prototype.resolve = async function() {
        const e2 = this.protos().find((e3) => e3.resolvable);
        if (!e2)
          return [this];
        const t2 = d.get(e2.name);
        if (!t2)
          throw c(new Error("no available resolver for " + e2.name), "ERR_NO_AVAILABLE_RESOLVER");
        return (await t2(this)).map((e3) => l(e3));
      }, l.prototype.nodeAddress = function() {
        const e2 = this.protoCodes(), t2 = this.protoNames(), r2 = this.toString().split("/").slice(1);
        if (r2.length < 4)
          throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6}/{address}/{tcp, udp}/{port}".');
        if (e2[0] !== 4 && e2[0] !== 41 && e2[0] !== 54 && e2[0] !== 55)
          throw new Error(`no protocol with name: "'${t2[0]}'". Must have a valid family name: "{ip4, ip6, dns4, dns6}".`);
        if (r2[2] !== "tcp" && r2[2] !== "udp")
          throw new Error(`no protocol with name: "'${t2[1]}'". Must have a valid transport protocol: "{tcp, udp}".`);
        return {family: e2[0] === 41 || e2[0] === 55 ? 6 : 4, address: r2[1], port: parseInt(r2[3])};
      }, l.fromNodeAddress = function(e2, t2) {
        if (!e2)
          throw new Error("requires node address object");
        if (!t2)
          throw new Error("requires transport protocol");
        let r2;
        switch (e2.family) {
          case "IPv4":
            r2 = "ip4";
            break;
          case "IPv6":
            r2 = "ip6";
            break;
          default:
            throw Error(`Invalid addr family. Got '${e2.family}' instead of 'IPv4' or 'IPv6'`);
        }
        return l("/" + [r2, e2.address, t2, e2.port].join("/"));
      }, l.prototype.isThinWaistAddress = function(e2) {
        const t2 = (e2 || this).protos();
        return t2.length === 2 && ((t2[0].code === 4 || t2[0].code === 41) && (t2[1].code === 6 || t2[1].code === 273));
      }, l.protocols = i, l.isName = function(e2) {
        return !!l.isMultiaddr(e2) && e2.protos().some((e3) => e3.resolvable);
      }, l.resolve = function(e2) {
        return l.isMultiaddr(e2) && l.isName(e2) ? Promise.reject(new Error("not implemented yet")) : Promise.reject(Error("not a valid name"));
      }, l.resolvers = d, e.exports = l;
    }, function(e, t, r) {
      "use strict";
      var n;
      n = function() {
        return this;
      }();
      try {
        n = n || new Function("return this")();
      } catch (i) {
        typeof window == "object" && (n = window);
      }
      e.exports = n;
    }, function(e, t, r) {
      "use strict";
      (function(t2, n, i) {
        var s = r(8), o = r(443), a = e.exports = s.util = s.util || {};
        function c(e2) {
          if (e2 !== 8 && e2 !== 16 && e2 !== 24 && e2 !== 32)
            throw new Error("Only 8, 16, 24, or 32 bits supported: " + e2);
        }
        function u(e2) {
          if (this.data = "", this.read = 0, typeof e2 == "string")
            this.data = e2;
          else if (a.isArrayBuffer(e2) || a.isArrayBufferView(e2))
            if (i !== void 0 && e2 instanceof i)
              this.data = e2.toString("binary");
            else {
              var t3 = new Uint8Array(e2);
              try {
                this.data = String.fromCharCode.apply(null, t3);
              } catch (n2) {
                for (var r2 = 0; r2 < t3.length; ++r2)
                  this.putByte(t3[r2]);
              }
            }
          else
            (e2 instanceof u || typeof e2 == "object" && typeof e2.data == "string" && typeof e2.read == "number") && (this.data = e2.data, this.read = e2.read);
          this._constructedStringLength = 0;
        }
        !function() {
          if (t2 !== void 0 && t2.nextTick && !t2.browser)
            return a.nextTick = t2.nextTick, void (typeof setImmediate == "function" ? a.setImmediate = setImmediate : a.setImmediate = a.nextTick);
          if (typeof setImmediate == "function")
            return a.setImmediate = function() {
              return setImmediate.apply(void 0, arguments);
            }, void (a.nextTick = function(e3) {
              return setImmediate(e3);
            });
          if (a.setImmediate = function(e3) {
            setTimeout(e3, 0);
          }, typeof window != "undefined" && typeof window.postMessage == "function") {
            var e2 = "forge.setImmediate", r2 = [];
            a.setImmediate = function(t3) {
              r2.push(t3), r2.length === 1 && window.postMessage(e2, "*");
            }, window.addEventListener("message", function(t3) {
              if (t3.source === window && t3.data === e2) {
                t3.stopPropagation();
                var n3 = r2.slice();
                r2.length = 0, n3.forEach(function(e3) {
                  e3();
                });
              }
            }, true);
          }
          if (typeof MutationObserver != "undefined") {
            var n2 = Date.now(), i2 = true, s2 = document.createElement("div");
            r2 = [];
            new MutationObserver(function() {
              var e3 = r2.slice();
              r2.length = 0, e3.forEach(function(e4) {
                e4();
              });
            }).observe(s2, {attributes: true});
            var o2 = a.setImmediate;
            a.setImmediate = function(e3) {
              Date.now() - n2 > 15 ? (n2 = Date.now(), o2(e3)) : (r2.push(e3), r2.length === 1 && s2.setAttribute("a", i2 = !i2));
            };
          }
          a.nextTick = a.setImmediate;
        }(), a.isNodejs = t2 !== void 0 && t2.versions && t2.versions.node, a.globalScope = a.isNodejs ? n : typeof self == "undefined" ? window : self, a.isArray = Array.isArray || function(e2) {
          return Object.prototype.toString.call(e2) === "[object Array]";
        }, a.isArrayBuffer = function(e2) {
          return typeof ArrayBuffer != "undefined" && e2 instanceof ArrayBuffer;
        }, a.isArrayBufferView = function(e2) {
          return e2 && a.isArrayBuffer(e2.buffer) && e2.byteLength !== void 0;
        }, a.ByteBuffer = u, a.ByteStringBuffer = u;
        a.ByteStringBuffer.prototype._optimizeConstructedString = function(e2) {
          this._constructedStringLength += e2, this._constructedStringLength > 4096 && (this.data.substr(0, 1), this._constructedStringLength = 0);
        }, a.ByteStringBuffer.prototype.length = function() {
          return this.data.length - this.read;
        }, a.ByteStringBuffer.prototype.isEmpty = function() {
          return this.length() <= 0;
        }, a.ByteStringBuffer.prototype.putByte = function(e2) {
          return this.putBytes(String.fromCharCode(e2));
        }, a.ByteStringBuffer.prototype.fillWithByte = function(e2, t3) {
          e2 = String.fromCharCode(e2);
          for (var r2 = this.data; t3 > 0; )
            1 & t3 && (r2 += e2), (t3 >>>= 1) > 0 && (e2 += e2);
          return this.data = r2, this._optimizeConstructedString(t3), this;
        }, a.ByteStringBuffer.prototype.putBytes = function(e2) {
          return this.data += e2, this._optimizeConstructedString(e2.length), this;
        }, a.ByteStringBuffer.prototype.putString = function(e2) {
          return this.putBytes(a.encodeUtf8(e2));
        }, a.ByteStringBuffer.prototype.putInt16 = function(e2) {
          return this.putBytes(String.fromCharCode(e2 >> 8 & 255) + String.fromCharCode(255 & e2));
        }, a.ByteStringBuffer.prototype.putInt24 = function(e2) {
          return this.putBytes(String.fromCharCode(e2 >> 16 & 255) + String.fromCharCode(e2 >> 8 & 255) + String.fromCharCode(255 & e2));
        }, a.ByteStringBuffer.prototype.putInt32 = function(e2) {
          return this.putBytes(String.fromCharCode(e2 >> 24 & 255) + String.fromCharCode(e2 >> 16 & 255) + String.fromCharCode(e2 >> 8 & 255) + String.fromCharCode(255 & e2));
        }, a.ByteStringBuffer.prototype.putInt16Le = function(e2) {
          return this.putBytes(String.fromCharCode(255 & e2) + String.fromCharCode(e2 >> 8 & 255));
        }, a.ByteStringBuffer.prototype.putInt24Le = function(e2) {
          return this.putBytes(String.fromCharCode(255 & e2) + String.fromCharCode(e2 >> 8 & 255) + String.fromCharCode(e2 >> 16 & 255));
        }, a.ByteStringBuffer.prototype.putInt32Le = function(e2) {
          return this.putBytes(String.fromCharCode(255 & e2) + String.fromCharCode(e2 >> 8 & 255) + String.fromCharCode(e2 >> 16 & 255) + String.fromCharCode(e2 >> 24 & 255));
        }, a.ByteStringBuffer.prototype.putInt = function(e2, t3) {
          c(t3);
          var r2 = "";
          do {
            t3 -= 8, r2 += String.fromCharCode(e2 >> t3 & 255);
          } while (t3 > 0);
          return this.putBytes(r2);
        }, a.ByteStringBuffer.prototype.putSignedInt = function(e2, t3) {
          return e2 < 0 && (e2 += 2 << t3 - 1), this.putInt(e2, t3);
        }, a.ByteStringBuffer.prototype.putBuffer = function(e2) {
          return this.putBytes(e2.getBytes());
        }, a.ByteStringBuffer.prototype.getByte = function() {
          return this.data.charCodeAt(this.read++);
        }, a.ByteStringBuffer.prototype.getInt16 = function() {
          var e2 = this.data.charCodeAt(this.read) << 8 ^ this.data.charCodeAt(this.read + 1);
          return this.read += 2, e2;
        }, a.ByteStringBuffer.prototype.getInt24 = function() {
          var e2 = this.data.charCodeAt(this.read) << 16 ^ this.data.charCodeAt(this.read + 1) << 8 ^ this.data.charCodeAt(this.read + 2);
          return this.read += 3, e2;
        }, a.ByteStringBuffer.prototype.getInt32 = function() {
          var e2 = this.data.charCodeAt(this.read) << 24 ^ this.data.charCodeAt(this.read + 1) << 16 ^ this.data.charCodeAt(this.read + 2) << 8 ^ this.data.charCodeAt(this.read + 3);
          return this.read += 4, e2;
        }, a.ByteStringBuffer.prototype.getInt16Le = function() {
          var e2 = this.data.charCodeAt(this.read) ^ this.data.charCodeAt(this.read + 1) << 8;
          return this.read += 2, e2;
        }, a.ByteStringBuffer.prototype.getInt24Le = function() {
          var e2 = this.data.charCodeAt(this.read) ^ this.data.charCodeAt(this.read + 1) << 8 ^ this.data.charCodeAt(this.read + 2) << 16;
          return this.read += 3, e2;
        }, a.ByteStringBuffer.prototype.getInt32Le = function() {
          var e2 = this.data.charCodeAt(this.read) ^ this.data.charCodeAt(this.read + 1) << 8 ^ this.data.charCodeAt(this.read + 2) << 16 ^ this.data.charCodeAt(this.read + 3) << 24;
          return this.read += 4, e2;
        }, a.ByteStringBuffer.prototype.getInt = function(e2) {
          c(e2);
          var t3 = 0;
          do {
            t3 = (t3 << 8) + this.data.charCodeAt(this.read++), e2 -= 8;
          } while (e2 > 0);
          return t3;
        }, a.ByteStringBuffer.prototype.getSignedInt = function(e2) {
          var t3 = this.getInt(e2), r2 = 2 << e2 - 2;
          return t3 >= r2 && (t3 -= r2 << 1), t3;
        }, a.ByteStringBuffer.prototype.getBytes = function(e2) {
          var t3;
          return e2 ? (e2 = Math.min(this.length(), e2), t3 = this.data.slice(this.read, this.read + e2), this.read += e2) : e2 === 0 ? t3 = "" : (t3 = this.read === 0 ? this.data : this.data.slice(this.read), this.clear()), t3;
        }, a.ByteStringBuffer.prototype.bytes = function(e2) {
          return e2 === void 0 ? this.data.slice(this.read) : this.data.slice(this.read, this.read + e2);
        }, a.ByteStringBuffer.prototype.at = function(e2) {
          return this.data.charCodeAt(this.read + e2);
        }, a.ByteStringBuffer.prototype.setAt = function(e2, t3) {
          return this.data = this.data.substr(0, this.read + e2) + String.fromCharCode(t3) + this.data.substr(this.read + e2 + 1), this;
        }, a.ByteStringBuffer.prototype.last = function() {
          return this.data.charCodeAt(this.data.length - 1);
        }, a.ByteStringBuffer.prototype.copy = function() {
          var e2 = a.createBuffer(this.data);
          return e2.read = this.read, e2;
        }, a.ByteStringBuffer.prototype.compact = function() {
          return this.read > 0 && (this.data = this.data.slice(this.read), this.read = 0), this;
        }, a.ByteStringBuffer.prototype.clear = function() {
          return this.data = "", this.read = 0, this;
        }, a.ByteStringBuffer.prototype.truncate = function(e2) {
          var t3 = Math.max(0, this.length() - e2);
          return this.data = this.data.substr(this.read, t3), this.read = 0, this;
        }, a.ByteStringBuffer.prototype.toHex = function() {
          for (var e2 = "", t3 = this.read; t3 < this.data.length; ++t3) {
            var r2 = this.data.charCodeAt(t3);
            r2 < 16 && (e2 += "0"), e2 += r2.toString(16);
          }
          return e2;
        }, a.ByteStringBuffer.prototype.toString = function() {
          return a.decodeUtf8(this.bytes());
        }, a.DataBuffer = function(e2, t3) {
          t3 = t3 || {}, this.read = t3.readOffset || 0, this.growSize = t3.growSize || 1024;
          var r2 = a.isArrayBuffer(e2), n2 = a.isArrayBufferView(e2);
          if (r2 || n2)
            return this.data = r2 ? new DataView(e2) : new DataView(e2.buffer, e2.byteOffset, e2.byteLength), void (this.write = "writeOffset" in t3 ? t3.writeOffset : this.data.byteLength);
          this.data = new DataView(new ArrayBuffer(0)), this.write = 0, e2 != null && this.putBytes(e2), "writeOffset" in t3 && (this.write = t3.writeOffset);
        }, a.DataBuffer.prototype.length = function() {
          return this.write - this.read;
        }, a.DataBuffer.prototype.isEmpty = function() {
          return this.length() <= 0;
        }, a.DataBuffer.prototype.accommodate = function(e2, t3) {
          if (this.length() >= e2)
            return this;
          t3 = Math.max(t3 || this.growSize, e2);
          var r2 = new Uint8Array(this.data.buffer, this.data.byteOffset, this.data.byteLength), n2 = new Uint8Array(this.length() + t3);
          return n2.set(r2), this.data = new DataView(n2.buffer), this;
        }, a.DataBuffer.prototype.putByte = function(e2) {
          return this.accommodate(1), this.data.setUint8(this.write++, e2), this;
        }, a.DataBuffer.prototype.fillWithByte = function(e2, t3) {
          this.accommodate(t3);
          for (var r2 = 0; r2 < t3; ++r2)
            this.data.setUint8(e2);
          return this;
        }, a.DataBuffer.prototype.putBytes = function(e2, t3) {
          if (a.isArrayBufferView(e2)) {
            var r2 = (n2 = new Uint8Array(e2.buffer, e2.byteOffset, e2.byteLength)).byteLength - n2.byteOffset;
            return this.accommodate(r2), new Uint8Array(this.data.buffer, this.write).set(n2), this.write += r2, this;
          }
          if (a.isArrayBuffer(e2)) {
            var n2 = new Uint8Array(e2);
            return this.accommodate(n2.byteLength), new Uint8Array(this.data.buffer).set(n2, this.write), this.write += n2.byteLength, this;
          }
          if (e2 instanceof a.DataBuffer || typeof e2 == "object" && typeof e2.read == "number" && typeof e2.write == "number" && a.isArrayBufferView(e2.data)) {
            n2 = new Uint8Array(e2.data.byteLength, e2.read, e2.length());
            return this.accommodate(n2.byteLength), new Uint8Array(e2.data.byteLength, this.write).set(n2), this.write += n2.byteLength, this;
          }
          if (e2 instanceof a.ByteStringBuffer && (e2 = e2.data, t3 = "binary"), t3 = t3 || "binary", typeof e2 == "string") {
            var i2;
            if (t3 === "hex")
              return this.accommodate(Math.ceil(e2.length / 2)), i2 = new Uint8Array(this.data.buffer, this.write), this.write += a.binary.hex.decode(e2, i2, this.write), this;
            if (t3 === "base64")
              return this.accommodate(3 * Math.ceil(e2.length / 4)), i2 = new Uint8Array(this.data.buffer, this.write), this.write += a.binary.base64.decode(e2, i2, this.write), this;
            if (t3 === "utf8" && (e2 = a.encodeUtf8(e2), t3 = "binary"), t3 === "binary" || t3 === "raw")
              return this.accommodate(e2.length), i2 = new Uint8Array(this.data.buffer, this.write), this.write += a.binary.raw.decode(i2), this;
            if (t3 === "utf16")
              return this.accommodate(2 * e2.length), i2 = new Uint16Array(this.data.buffer, this.write), this.write += a.text.utf16.encode(i2), this;
            throw new Error("Invalid encoding: " + t3);
          }
          throw Error("Invalid parameter: " + e2);
        }, a.DataBuffer.prototype.putBuffer = function(e2) {
          return this.putBytes(e2), e2.clear(), this;
        }, a.DataBuffer.prototype.putString = function(e2) {
          return this.putBytes(e2, "utf16");
        }, a.DataBuffer.prototype.putInt16 = function(e2) {
          return this.accommodate(2), this.data.setInt16(this.write, e2), this.write += 2, this;
        }, a.DataBuffer.prototype.putInt24 = function(e2) {
          return this.accommodate(3), this.data.setInt16(this.write, e2 >> 8 & 65535), this.data.setInt8(this.write, e2 >> 16 & 255), this.write += 3, this;
        }, a.DataBuffer.prototype.putInt32 = function(e2) {
          return this.accommodate(4), this.data.setInt32(this.write, e2), this.write += 4, this;
        }, a.DataBuffer.prototype.putInt16Le = function(e2) {
          return this.accommodate(2), this.data.setInt16(this.write, e2, true), this.write += 2, this;
        }, a.DataBuffer.prototype.putInt24Le = function(e2) {
          return this.accommodate(3), this.data.setInt8(this.write, e2 >> 16 & 255), this.data.setInt16(this.write, e2 >> 8 & 65535, true), this.write += 3, this;
        }, a.DataBuffer.prototype.putInt32Le = function(e2) {
          return this.accommodate(4), this.data.setInt32(this.write, e2, true), this.write += 4, this;
        }, a.DataBuffer.prototype.putInt = function(e2, t3) {
          c(t3), this.accommodate(t3 / 8);
          do {
            t3 -= 8, this.data.setInt8(this.write++, e2 >> t3 & 255);
          } while (t3 > 0);
          return this;
        }, a.DataBuffer.prototype.putSignedInt = function(e2, t3) {
          return c(t3), this.accommodate(t3 / 8), e2 < 0 && (e2 += 2 << t3 - 1), this.putInt(e2, t3);
        }, a.DataBuffer.prototype.getByte = function() {
          return this.data.getInt8(this.read++);
        }, a.DataBuffer.prototype.getInt16 = function() {
          var e2 = this.data.getInt16(this.read);
          return this.read += 2, e2;
        }, a.DataBuffer.prototype.getInt24 = function() {
          var e2 = this.data.getInt16(this.read) << 8 ^ this.data.getInt8(this.read + 2);
          return this.read += 3, e2;
        }, a.DataBuffer.prototype.getInt32 = function() {
          var e2 = this.data.getInt32(this.read);
          return this.read += 4, e2;
        }, a.DataBuffer.prototype.getInt16Le = function() {
          var e2 = this.data.getInt16(this.read, true);
          return this.read += 2, e2;
        }, a.DataBuffer.prototype.getInt24Le = function() {
          var e2 = this.data.getInt8(this.read) ^ this.data.getInt16(this.read + 1, true) << 8;
          return this.read += 3, e2;
        }, a.DataBuffer.prototype.getInt32Le = function() {
          var e2 = this.data.getInt32(this.read, true);
          return this.read += 4, e2;
        }, a.DataBuffer.prototype.getInt = function(e2) {
          c(e2);
          var t3 = 0;
          do {
            t3 = (t3 << 8) + this.data.getInt8(this.read++), e2 -= 8;
          } while (e2 > 0);
          return t3;
        }, a.DataBuffer.prototype.getSignedInt = function(e2) {
          var t3 = this.getInt(e2), r2 = 2 << e2 - 2;
          return t3 >= r2 && (t3 -= r2 << 1), t3;
        }, a.DataBuffer.prototype.getBytes = function(e2) {
          var t3;
          return e2 ? (e2 = Math.min(this.length(), e2), t3 = this.data.slice(this.read, this.read + e2), this.read += e2) : e2 === 0 ? t3 = "" : (t3 = this.read === 0 ? this.data : this.data.slice(this.read), this.clear()), t3;
        }, a.DataBuffer.prototype.bytes = function(e2) {
          return e2 === void 0 ? this.data.slice(this.read) : this.data.slice(this.read, this.read + e2);
        }, a.DataBuffer.prototype.at = function(e2) {
          return this.data.getUint8(this.read + e2);
        }, a.DataBuffer.prototype.setAt = function(e2, t3) {
          return this.data.setUint8(e2, t3), this;
        }, a.DataBuffer.prototype.last = function() {
          return this.data.getUint8(this.write - 1);
        }, a.DataBuffer.prototype.copy = function() {
          return new a.DataBuffer(this);
        }, a.DataBuffer.prototype.compact = function() {
          if (this.read > 0) {
            var e2 = new Uint8Array(this.data.buffer, this.read), t3 = new Uint8Array(e2.byteLength);
            t3.set(e2), this.data = new DataView(t3), this.write -= this.read, this.read = 0;
          }
          return this;
        }, a.DataBuffer.prototype.clear = function() {
          return this.data = new DataView(new ArrayBuffer(0)), this.read = this.write = 0, this;
        }, a.DataBuffer.prototype.truncate = function(e2) {
          return this.write = Math.max(0, this.length() - e2), this.read = Math.min(this.read, this.write), this;
        }, a.DataBuffer.prototype.toHex = function() {
          for (var e2 = "", t3 = this.read; t3 < this.data.byteLength; ++t3) {
            var r2 = this.data.getUint8(t3);
            r2 < 16 && (e2 += "0"), e2 += r2.toString(16);
          }
          return e2;
        }, a.DataBuffer.prototype.toString = function(e2) {
          var t3 = new Uint8Array(this.data, this.read, this.length());
          if ((e2 = e2 || "utf8") === "binary" || e2 === "raw")
            return a.binary.raw.encode(t3);
          if (e2 === "hex")
            return a.binary.hex.encode(t3);
          if (e2 === "base64")
            return a.binary.base64.encode(t3);
          if (e2 === "utf8")
            return a.text.utf8.decode(t3);
          if (e2 === "utf16")
            return a.text.utf16.decode(t3);
          throw new Error("Invalid encoding: " + e2);
        }, a.createBuffer = function(e2, t3) {
          return t3 = t3 || "raw", e2 !== void 0 && t3 === "utf8" && (e2 = a.encodeUtf8(e2)), new a.ByteBuffer(e2);
        }, a.fillString = function(e2, t3) {
          for (var r2 = ""; t3 > 0; )
            1 & t3 && (r2 += e2), (t3 >>>= 1) > 0 && (e2 += e2);
          return r2;
        }, a.xorBytes = function(e2, t3, r2) {
          for (var n2 = "", i2 = "", s2 = "", o2 = 0, a2 = 0; r2 > 0; --r2, ++o2)
            i2 = e2.charCodeAt(o2) ^ t3.charCodeAt(o2), a2 >= 10 && (n2 += s2, s2 = "", a2 = 0), s2 += String.fromCharCode(i2), ++a2;
          return n2 += s2;
        }, a.hexToBytes = function(e2) {
          var t3 = "", r2 = 0;
          for (true & e2.length && (r2 = 1, t3 += String.fromCharCode(parseInt(e2[0], 16))); r2 < e2.length; r2 += 2)
            t3 += String.fromCharCode(parseInt(e2.substr(r2, 2), 16));
          return t3;
        }, a.bytesToHex = function(e2) {
          return a.createBuffer(e2).toHex();
        }, a.int32ToBytes = function(e2) {
          return String.fromCharCode(e2 >> 24 & 255) + String.fromCharCode(e2 >> 16 & 255) + String.fromCharCode(e2 >> 8 & 255) + String.fromCharCode(255 & e2);
        };
        var h = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", f = [62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, 64, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], d = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
        a.encode64 = function(e2, t3) {
          for (var r2, n2, i2, s2 = "", o2 = "", a2 = 0; a2 < e2.length; )
            r2 = e2.charCodeAt(a2++), n2 = e2.charCodeAt(a2++), i2 = e2.charCodeAt(a2++), s2 += h.charAt(r2 >> 2), s2 += h.charAt((3 & r2) << 4 | n2 >> 4), isNaN(n2) ? s2 += "==" : (s2 += h.charAt((15 & n2) << 2 | i2 >> 6), s2 += isNaN(i2) ? "=" : h.charAt(63 & i2)), t3 && s2.length > t3 && (o2 += s2.substr(0, t3) + "\r\n", s2 = s2.substr(t3));
          return o2 += s2;
        }, a.decode64 = function(e2) {
          e2 = e2.replace(/[^A-Za-z0-9\+\/\=]/g, "");
          for (var t3, r2, n2, i2, s2 = "", o2 = 0; o2 < e2.length; )
            t3 = f[e2.charCodeAt(o2++) - 43], r2 = f[e2.charCodeAt(o2++) - 43], n2 = f[e2.charCodeAt(o2++) - 43], i2 = f[e2.charCodeAt(o2++) - 43], s2 += String.fromCharCode(t3 << 2 | r2 >> 4), n2 !== 64 && (s2 += String.fromCharCode((15 & r2) << 4 | n2 >> 2), i2 !== 64 && (s2 += String.fromCharCode((3 & n2) << 6 | i2)));
          return s2;
        }, a.encodeUtf8 = function(e2) {
          return unescape(encodeURIComponent(e2));
        }, a.decodeUtf8 = function(e2) {
          return decodeURIComponent(escape(e2));
        }, a.binary = {raw: {}, hex: {}, base64: {}, base58: {}, baseN: {encode: o.encode, decode: o.decode}}, a.binary.raw.encode = function(e2) {
          return String.fromCharCode.apply(null, e2);
        }, a.binary.raw.decode = function(e2, t3, r2) {
          var n2 = t3;
          n2 || (n2 = new Uint8Array(e2.length));
          for (var i2 = r2 = r2 || 0, s2 = 0; s2 < e2.length; ++s2)
            n2[i2++] = e2.charCodeAt(s2);
          return t3 ? i2 - r2 : n2;
        }, a.binary.hex.encode = a.bytesToHex, a.binary.hex.decode = function(e2, t3, r2) {
          var n2 = t3;
          n2 || (n2 = new Uint8Array(Math.ceil(e2.length / 2)));
          var i2 = 0, s2 = r2 = r2 || 0;
          for (1 & e2.length && (i2 = 1, n2[s2++] = parseInt(e2[0], 16)); i2 < e2.length; i2 += 2)
            n2[s2++] = parseInt(e2.substr(i2, 2), 16);
          return t3 ? s2 - r2 : n2;
        }, a.binary.base64.encode = function(e2, t3) {
          for (var r2, n2, i2, s2 = "", o2 = "", a2 = 0; a2 < e2.byteLength; )
            r2 = e2[a2++], n2 = e2[a2++], i2 = e2[a2++], s2 += h.charAt(r2 >> 2), s2 += h.charAt((3 & r2) << 4 | n2 >> 4), isNaN(n2) ? s2 += "==" : (s2 += h.charAt((15 & n2) << 2 | i2 >> 6), s2 += isNaN(i2) ? "=" : h.charAt(63 & i2)), t3 && s2.length > t3 && (o2 += s2.substr(0, t3) + "\r\n", s2 = s2.substr(t3));
          return o2 += s2;
        }, a.binary.base64.decode = function(e2, t3, r2) {
          var n2, i2, s2, o2, a2 = t3;
          a2 || (a2 = new Uint8Array(3 * Math.ceil(e2.length / 4))), e2 = e2.replace(/[^A-Za-z0-9\+\/\=]/g, "");
          for (var c2 = 0, u2 = r2 = r2 || 0; c2 < e2.length; )
            n2 = f[e2.charCodeAt(c2++) - 43], i2 = f[e2.charCodeAt(c2++) - 43], s2 = f[e2.charCodeAt(c2++) - 43], o2 = f[e2.charCodeAt(c2++) - 43], a2[u2++] = n2 << 2 | i2 >> 4, s2 !== 64 && (a2[u2++] = (15 & i2) << 4 | s2 >> 2, o2 !== 64 && (a2[u2++] = (3 & s2) << 6 | o2));
          return t3 ? u2 - r2 : a2.subarray(0, u2);
        }, a.binary.base58.encode = function(e2, t3) {
          return a.binary.baseN.encode(e2, d, t3);
        }, a.binary.base58.decode = function(e2, t3) {
          return a.binary.baseN.decode(e2, d, t3);
        }, a.text = {utf8: {}, utf16: {}}, a.text.utf8.encode = function(e2, t3, r2) {
          e2 = a.encodeUtf8(e2);
          var n2 = t3;
          n2 || (n2 = new Uint8Array(e2.length));
          for (var i2 = r2 = r2 || 0, s2 = 0; s2 < e2.length; ++s2)
            n2[i2++] = e2.charCodeAt(s2);
          return t3 ? i2 - r2 : n2;
        }, a.text.utf8.decode = function(e2) {
          return a.decodeUtf8(String.fromCharCode.apply(null, e2));
        }, a.text.utf16.encode = function(e2, t3, r2) {
          var n2 = t3;
          n2 || (n2 = new Uint8Array(2 * e2.length));
          for (var i2 = new Uint16Array(n2.buffer), s2 = r2 = r2 || 0, o2 = r2, a2 = 0; a2 < e2.length; ++a2)
            i2[o2++] = e2.charCodeAt(a2), s2 += 2;
          return t3 ? s2 - r2 : n2;
        }, a.text.utf16.decode = function(e2) {
          return String.fromCharCode.apply(null, new Uint16Array(e2.buffer));
        }, a.deflate = function(e2, t3, r2) {
          if (t3 = a.decode64(e2.deflate(a.encode64(t3)).rval), r2) {
            var n2 = 2;
            32 & t3.charCodeAt(1) && (n2 = 6), t3 = t3.substring(n2, t3.length - 4);
          }
          return t3;
        }, a.inflate = function(e2, t3, r2) {
          var n2 = e2.inflate(a.encode64(t3)).rval;
          return n2 === null ? null : a.decode64(n2);
        };
        var l = function(e2, t3, r2) {
          if (!e2)
            throw new Error("WebStorage not available.");
          var n2;
          if (r2 === null ? n2 = e2.removeItem(t3) : (r2 = a.encode64(JSON.stringify(r2)), n2 = e2.setItem(t3, r2)), n2 !== void 0 && n2.rval !== true) {
            var i2 = new Error(n2.error.message);
            throw i2.id = n2.error.id, i2.name = n2.error.name, i2;
          }
        }, p = function(e2, t3) {
          if (!e2)
            throw new Error("WebStorage not available.");
          var r2 = e2.getItem(t3);
          if (e2.init)
            if (r2.rval === null) {
              if (r2.error) {
                var n2 = new Error(r2.error.message);
                throw n2.id = r2.error.id, n2.name = r2.error.name, n2;
              }
              r2 = null;
            } else
              r2 = r2.rval;
          return r2 !== null && (r2 = JSON.parse(a.decode64(r2))), r2;
        }, y = function(e2, t3, r2, n2) {
          var i2 = p(e2, t3);
          i2 === null && (i2 = {}), i2[r2] = n2, l(e2, t3, i2);
        }, g = function(e2, t3, r2) {
          var n2 = p(e2, t3);
          return n2 !== null && (n2 = r2 in n2 ? n2[r2] : null), n2;
        }, b = function(e2, t3, r2) {
          var n2 = p(e2, t3);
          if (n2 !== null && r2 in n2) {
            delete n2[r2];
            var i2 = true;
            for (var s2 in n2) {
              i2 = false;
              break;
            }
            i2 && (n2 = null), l(e2, t3, n2);
          }
        }, m = function(e2, t3) {
          l(e2, t3, null);
        }, v = function(e2, t3, r2) {
          var n2, i2 = null;
          r2 === void 0 && (r2 = ["web", "flash"]);
          var s2 = false, o2 = null;
          for (var a2 in r2) {
            n2 = r2[a2];
            try {
              if (n2 === "flash" || n2 === "both") {
                if (t3[0] === null)
                  throw new Error("Flash local storage not available.");
                i2 = e2.apply(this, t3), s2 = n2 === "flash";
              }
              n2 !== "web" && n2 !== "both" || (t3[0] = localStorage, i2 = e2.apply(this, t3), s2 = true);
            } catch (c2) {
              o2 = c2;
            }
            if (s2)
              break;
          }
          if (!s2)
            throw o2;
          return i2;
        };
        a.setItem = function(e2, t3, r2, n2, i2) {
          v(y, arguments, i2);
        }, a.getItem = function(e2, t3, r2, n2) {
          return v(g, arguments, n2);
        }, a.removeItem = function(e2, t3, r2, n2) {
          v(b, arguments, n2);
        }, a.clearItems = function(e2, t3, r2) {
          v(m, arguments, r2);
        }, a.parseUrl = function(e2) {
          var t3 = /^(https?):\/\/([^:&^\/]*):?(\d*)(.*)$/g;
          t3.lastIndex = 0;
          var r2 = t3.exec(e2), n2 = r2 === null ? null : {full: e2, scheme: r2[1], host: r2[2], port: r2[3], path: r2[4]};
          return n2 && (n2.fullHost = n2.host, n2.port ? (n2.port !== 80 && n2.scheme === "http" || n2.port !== 443 && n2.scheme === "https") && (n2.fullHost += ":" + n2.port) : n2.scheme === "http" ? n2.port = 80 : n2.scheme === "https" && (n2.port = 443), n2.full = n2.scheme + "://" + n2.fullHost), n2;
        };
        var w = null;
        a.getQueryVariables = function(e2) {
          var t3, r2 = function(e3) {
            for (var t4 = {}, r3 = e3.split("&"), n2 = 0; n2 < r3.length; n2++) {
              var i2, s2, o2 = r3[n2].indexOf("=");
              o2 > 0 ? (i2 = r3[n2].substring(0, o2), s2 = r3[n2].substring(o2 + 1)) : (i2 = r3[n2], s2 = null), i2 in t4 || (t4[i2] = []), i2 in Object.prototype || s2 === null || t4[i2].push(unescape(s2));
            }
            return t4;
          };
          return e2 === void 0 ? (w === null && (w = typeof window != "undefined" && window.location && window.location.search ? r2(window.location.search.substring(1)) : {}), t3 = w) : t3 = r2(e2), t3;
        }, a.parseFragment = function(e2) {
          var t3 = e2, r2 = "", n2 = e2.indexOf("?");
          n2 > 0 && (t3 = e2.substring(0, n2), r2 = e2.substring(n2 + 1));
          var i2 = t3.split("/");
          return i2.length > 0 && i2[0] === "" && i2.shift(), {pathString: t3, queryString: r2, path: i2, query: r2 === "" ? {} : a.getQueryVariables(r2)};
        }, a.makeRequest = function(e2) {
          var t3 = a.parseFragment(e2), r2 = {path: t3.pathString, query: t3.queryString, getPath: function(e3) {
            return e3 === void 0 ? t3.path : t3.path[e3];
          }, getQuery: function(e3, r3) {
            var n2;
            return e3 === void 0 ? n2 = t3.query : (n2 = t3.query[e3]) && r3 !== void 0 && (n2 = n2[r3]), n2;
          }, getQueryLast: function(e3, t4) {
            var n2 = r2.getQuery(e3);
            return n2 ? n2[n2.length - 1] : t4;
          }};
          return r2;
        }, a.makeLink = function(e2, t3, r2) {
          e2 = jQuery.isArray(e2) ? e2.join("/") : e2;
          var n2 = jQuery.param(t3 || {});
          return r2 = r2 || "", e2 + (n2.length > 0 ? "?" + n2 : "") + (r2.length > 0 ? "#" + r2 : "");
        }, a.setPath = function(e2, t3, r2) {
          if (typeof e2 == "object" && e2 !== null)
            for (var n2 = 0, i2 = t3.length; n2 < i2; ) {
              var s2 = t3[n2++];
              if (n2 == i2)
                e2[s2] = r2;
              else {
                var o2 = s2 in e2;
                (!o2 || o2 && typeof e2[s2] != "object" || o2 && e2[s2] === null) && (e2[s2] = {}), e2 = e2[s2];
              }
            }
        }, a.getPath = function(e2, t3, r2) {
          for (var n2 = 0, i2 = t3.length, s2 = true; s2 && n2 < i2 && typeof e2 == "object" && e2 !== null; ) {
            var o2 = t3[n2++];
            (s2 = o2 in e2) && (e2 = e2[o2]);
          }
          return s2 ? e2 : r2;
        }, a.deletePath = function(e2, t3) {
          if (typeof e2 == "object" && e2 !== null)
            for (var r2 = 0, n2 = t3.length; r2 < n2; ) {
              var i2 = t3[r2++];
              if (r2 == n2)
                delete e2[i2];
              else {
                if (!(i2 in e2) || typeof e2[i2] != "object" || e2[i2] === null)
                  break;
                e2 = e2[i2];
              }
            }
        }, a.isEmpty = function(e2) {
          for (var t3 in e2)
            if (e2.hasOwnProperty(t3))
              return false;
          return true;
        }, a.format = function(e2) {
          for (var t3, r2, n2 = /%./g, i2 = 0, s2 = [], o2 = 0; t3 = n2.exec(e2); ) {
            (r2 = e2.substring(o2, n2.lastIndex - 2)).length > 0 && s2.push(r2), o2 = n2.lastIndex;
            var a2 = t3[0][1];
            switch (a2) {
              case "s":
              case "o":
                i2 < arguments.length ? s2.push(arguments[1 + i2++]) : s2.push("<?>");
                break;
              case "%":
                s2.push("%");
                break;
              default:
                s2.push("<%" + a2 + "?>");
            }
          }
          return s2.push(e2.substring(o2)), s2.join("");
        }, a.formatNumber = function(e2, t3, r2, n2) {
          var i2 = e2, s2 = isNaN(t3 = Math.abs(t3)) ? 2 : t3, o2 = r2 === void 0 ? "," : r2, a2 = n2 === void 0 ? "." : n2, c2 = i2 < 0 ? "-" : "", u2 = parseInt(i2 = Math.abs(+i2 || 0).toFixed(s2), 10) + "", h2 = u2.length > 3 ? u2.length % 3 : 0;
          return c2 + (h2 ? u2.substr(0, h2) + a2 : "") + u2.substr(h2).replace(/(\d{3})(?=\d)/g, "$1" + a2) + (s2 ? o2 + Math.abs(i2 - u2).toFixed(s2).slice(2) : "");
        }, a.formatSize = function(e2) {
          return e2 = e2 >= 1073741824 ? a.formatNumber(e2 / 1073741824, 2, ".", "") + " GiB" : e2 >= 1048576 ? a.formatNumber(e2 / 1048576, 2, ".", "") + " MiB" : e2 >= 1024 ? a.formatNumber(e2 / 1024, 0) + " KiB" : a.formatNumber(e2, 0) + " bytes";
        }, a.bytesFromIP = function(e2) {
          return e2.indexOf(".") !== -1 ? a.bytesFromIPv4(e2) : e2.indexOf(":") !== -1 ? a.bytesFromIPv6(e2) : null;
        }, a.bytesFromIPv4 = function(e2) {
          if ((e2 = e2.split(".")).length !== 4)
            return null;
          for (var t3 = a.createBuffer(), r2 = 0; r2 < e2.length; ++r2) {
            var n2 = parseInt(e2[r2], 10);
            if (isNaN(n2))
              return null;
            t3.putByte(n2);
          }
          return t3.getBytes();
        }, a.bytesFromIPv6 = function(e2) {
          for (var t3 = 0, r2 = 2 * (8 - (e2 = e2.split(":").filter(function(e3) {
            return e3.length === 0 && ++t3, true;
          })).length + t3), n2 = a.createBuffer(), i2 = 0; i2 < 8; ++i2)
            if (e2[i2] && e2[i2].length !== 0) {
              var s2 = a.hexToBytes(e2[i2]);
              s2.length < 2 && n2.putByte(0), n2.putBytes(s2);
            } else
              n2.fillWithByte(0, r2), r2 = 0;
          return n2.getBytes();
        }, a.bytesToIP = function(e2) {
          return e2.length === 4 ? a.bytesToIPv4(e2) : e2.length === 16 ? a.bytesToIPv6(e2) : null;
        }, a.bytesToIPv4 = function(e2) {
          if (e2.length !== 4)
            return null;
          for (var t3 = [], r2 = 0; r2 < e2.length; ++r2)
            t3.push(e2.charCodeAt(r2));
          return t3.join(".");
        }, a.bytesToIPv6 = function(e2) {
          if (e2.length !== 16)
            return null;
          for (var t3 = [], r2 = [], n2 = 0, i2 = 0; i2 < e2.length; i2 += 2) {
            for (var s2 = a.bytesToHex(e2[i2] + e2[i2 + 1]); s2[0] === "0" && s2 !== "0"; )
              s2 = s2.substr(1);
            if (s2 === "0") {
              var o2 = r2[r2.length - 1], c2 = t3.length;
              o2 && c2 === o2.end + 1 ? (o2.end = c2, o2.end - o2.start > r2[n2].end - r2[n2].start && (n2 = r2.length - 1)) : r2.push({start: c2, end: c2});
            }
            t3.push(s2);
          }
          if (r2.length > 0) {
            var u2 = r2[n2];
            u2.end - u2.start > 0 && (t3.splice(u2.start, u2.end - u2.start + 1, ""), u2.start === 0 && t3.unshift(""), u2.end === 7 && t3.push(""));
          }
          return t3.join(":");
        }, a.estimateCores = function(e2, t3) {
          if (typeof e2 == "function" && (t3 = e2, e2 = {}), e2 = e2 || {}, "cores" in a && !e2.update)
            return t3(null, a.cores);
          if (typeof navigator != "undefined" && "hardwareConcurrency" in navigator && navigator.hardwareConcurrency > 0)
            return a.cores = navigator.hardwareConcurrency, t3(null, a.cores);
          if (typeof Worker == "undefined")
            return a.cores = 1, t3(null, a.cores);
          if (typeof Blob == "undefined")
            return a.cores = 2, t3(null, a.cores);
          var r2 = URL.createObjectURL(new Blob(["(", function() {
            self.addEventListener("message", function(e3) {
              for (var t4 = Date.now(), r3 = t4 + 4; Date.now() < r3; )
                ;
              self.postMessage({st: t4, et: r3});
            });
          }.toString(), ")()"], {type: "application/javascript"}));
          !function e3(n2, i2, s2) {
            if (i2 === 0) {
              var o2 = Math.floor(n2.reduce(function(e4, t4) {
                return e4 + t4;
              }, 0) / n2.length);
              return a.cores = Math.max(1, o2), URL.revokeObjectURL(r2), t3(null, a.cores);
            }
            !function(e4, t4) {
              for (var n3 = [], i3 = [], s3 = 0; s3 < e4; ++s3) {
                var o3 = new Worker(r2);
                o3.addEventListener("message", function(r3) {
                  if (i3.push(r3.data), i3.length === e4) {
                    for (var s4 = 0; s4 < e4; ++s4)
                      n3[s4].terminate();
                    t4(null, i3);
                  }
                }), n3.push(o3);
              }
              for (s3 = 0; s3 < e4; ++s3)
                n3[s3].postMessage(s3);
            }(s2, function(t4, r3) {
              n2.push(function(e4, t5) {
                for (var r4 = [], n3 = 0; n3 < e4; ++n3)
                  for (var i3 = t5[n3], s3 = r4[n3] = [], o3 = 0; o3 < e4; ++o3)
                    if (n3 !== o3) {
                      var a2 = t5[o3];
                      (i3.st > a2.st && i3.st < a2.et || a2.st > i3.st && a2.st < i3.et) && s3.push(o3);
                    }
                return r4.reduce(function(e5, t6) {
                  return Math.max(e5, t6.length);
                }, 0);
              }(s2, r3)), e3(n2, i2 - 1, s2);
            });
          }([], 5, 16);
        };
      }).call(this, r(10), r(12), r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      var n, i = typeof Reflect == "object" ? Reflect : null, s = i && typeof i.apply == "function" ? i.apply : function(e2, t2, r2) {
        return Function.prototype.apply.call(e2, t2, r2);
      };
      n = i && typeof i.ownKeys == "function" ? i.ownKeys : Object.getOwnPropertySymbols ? function(e2) {
        return Object.getOwnPropertyNames(e2).concat(Object.getOwnPropertySymbols(e2));
      } : function(e2) {
        return Object.getOwnPropertyNames(e2);
      };
      var o = Number.isNaN || function(e2) {
        return e2 != e2;
      };
      function a() {
        a.init.call(this);
      }
      e.exports = a, e.exports.once = function(e2, t2) {
        return new Promise(function(r2, n2) {
          function i2() {
            s2 !== void 0 && e2.removeListener("error", s2), r2([].slice.call(arguments));
          }
          var s2;
          t2 !== "error" && (s2 = function(r3) {
            e2.removeListener(t2, i2), n2(r3);
          }, e2.once("error", s2)), e2.once(t2, i2);
        });
      }, a.EventEmitter = a, a.prototype._events = void 0, a.prototype._eventsCount = 0, a.prototype._maxListeners = void 0;
      var c = 10;
      function u(e2) {
        if (typeof e2 != "function")
          throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof e2);
      }
      function h(e2) {
        return e2._maxListeners === void 0 ? a.defaultMaxListeners : e2._maxListeners;
      }
      function f(e2, t2, r2, n2) {
        var i2, s2, o2, a2;
        if (u(r2), (s2 = e2._events) === void 0 ? (s2 = e2._events = Object.create(null), e2._eventsCount = 0) : (s2.newListener !== void 0 && (e2.emit("newListener", t2, r2.listener ? r2.listener : r2), s2 = e2._events), o2 = s2[t2]), o2 === void 0)
          o2 = s2[t2] = r2, ++e2._eventsCount;
        else if (typeof o2 == "function" ? o2 = s2[t2] = n2 ? [r2, o2] : [o2, r2] : n2 ? o2.unshift(r2) : o2.push(r2), (i2 = h(e2)) > 0 && o2.length > i2 && !o2.warned) {
          o2.warned = true;
          var c2 = new Error("Possible EventEmitter memory leak detected. " + o2.length + " " + String(t2) + " listeners added. Use emitter.setMaxListeners() to increase limit");
          c2.name = "MaxListenersExceededWarning", c2.emitter = e2, c2.type = t2, c2.count = o2.length, a2 = c2, console && console.warn && console.warn(a2);
        }
        return e2;
      }
      function d() {
        if (!this.fired)
          return this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
      }
      function l(e2, t2, r2) {
        var n2 = {fired: false, wrapFn: void 0, target: e2, type: t2, listener: r2}, i2 = d.bind(n2);
        return i2.listener = r2, n2.wrapFn = i2, i2;
      }
      function p(e2, t2, r2) {
        var n2 = e2._events;
        if (n2 === void 0)
          return [];
        var i2 = n2[t2];
        return i2 === void 0 ? [] : typeof i2 == "function" ? r2 ? [i2.listener || i2] : [i2] : r2 ? function(e3) {
          for (var t3 = new Array(e3.length), r3 = 0; r3 < t3.length; ++r3)
            t3[r3] = e3[r3].listener || e3[r3];
          return t3;
        }(i2) : g(i2, i2.length);
      }
      function y(e2) {
        var t2 = this._events;
        if (t2 !== void 0) {
          var r2 = t2[e2];
          if (typeof r2 == "function")
            return 1;
          if (r2 !== void 0)
            return r2.length;
        }
        return 0;
      }
      function g(e2, t2) {
        for (var r2 = new Array(t2), n2 = 0; n2 < t2; ++n2)
          r2[n2] = e2[n2];
        return r2;
      }
      Object.defineProperty(a, "defaultMaxListeners", {enumerable: true, get: function() {
        return c;
      }, set: function(e2) {
        if (typeof e2 != "number" || e2 < 0 || o(e2))
          throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e2 + ".");
        c = e2;
      }}), a.init = function() {
        this._events !== void 0 && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
      }, a.prototype.setMaxListeners = function(e2) {
        if (typeof e2 != "number" || e2 < 0 || o(e2))
          throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e2 + ".");
        return this._maxListeners = e2, this;
      }, a.prototype.getMaxListeners = function() {
        return h(this);
      }, a.prototype.emit = function(e2) {
        for (var t2 = [], r2 = 1; r2 < arguments.length; r2++)
          t2.push(arguments[r2]);
        var n2 = e2 === "error", i2 = this._events;
        if (i2 !== void 0)
          n2 = n2 && i2.error === void 0;
        else if (!n2)
          return false;
        if (n2) {
          var o2;
          if (t2.length > 0 && (o2 = t2[0]), o2 instanceof Error)
            throw o2;
          var a2 = new Error("Unhandled error." + (o2 ? " (" + o2.message + ")" : ""));
          throw a2.context = o2, a2;
        }
        var c2 = i2[e2];
        if (c2 === void 0)
          return false;
        if (typeof c2 == "function")
          s(c2, this, t2);
        else {
          var u2 = c2.length, h2 = g(c2, u2);
          for (r2 = 0; r2 < u2; ++r2)
            s(h2[r2], this, t2);
        }
        return true;
      }, a.prototype.addListener = function(e2, t2) {
        return f(this, e2, t2, false);
      }, a.prototype.on = a.prototype.addListener, a.prototype.prependListener = function(e2, t2) {
        return f(this, e2, t2, true);
      }, a.prototype.once = function(e2, t2) {
        return u(t2), this.on(e2, l(this, e2, t2)), this;
      }, a.prototype.prependOnceListener = function(e2, t2) {
        return u(t2), this.prependListener(e2, l(this, e2, t2)), this;
      }, a.prototype.removeListener = function(e2, t2) {
        var r2, n2, i2, s2, o2;
        if (u(t2), (n2 = this._events) === void 0)
          return this;
        if ((r2 = n2[e2]) === void 0)
          return this;
        if (r2 === t2 || r2.listener === t2)
          --this._eventsCount == 0 ? this._events = Object.create(null) : (delete n2[e2], n2.removeListener && this.emit("removeListener", e2, r2.listener || t2));
        else if (typeof r2 != "function") {
          for (i2 = -1, s2 = r2.length - 1; s2 >= 0; s2--)
            if (r2[s2] === t2 || r2[s2].listener === t2) {
              o2 = r2[s2].listener, i2 = s2;
              break;
            }
          if (i2 < 0)
            return this;
          i2 === 0 ? r2.shift() : function(e3, t3) {
            for (; t3 + 1 < e3.length; t3++)
              e3[t3] = e3[t3 + 1];
            e3.pop();
          }(r2, i2), r2.length === 1 && (n2[e2] = r2[0]), n2.removeListener !== void 0 && this.emit("removeListener", e2, o2 || t2);
        }
        return this;
      }, a.prototype.off = a.prototype.removeListener, a.prototype.removeAllListeners = function(e2) {
        var t2, r2, n2;
        if ((r2 = this._events) === void 0)
          return this;
        if (r2.removeListener === void 0)
          return arguments.length === 0 ? (this._events = Object.create(null), this._eventsCount = 0) : r2[e2] !== void 0 && (--this._eventsCount == 0 ? this._events = Object.create(null) : delete r2[e2]), this;
        if (arguments.length === 0) {
          var i2, s2 = Object.keys(r2);
          for (n2 = 0; n2 < s2.length; ++n2)
            (i2 = s2[n2]) !== "removeListener" && this.removeAllListeners(i2);
          return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
        }
        if (typeof (t2 = r2[e2]) == "function")
          this.removeListener(e2, t2);
        else if (t2 !== void 0)
          for (n2 = t2.length - 1; n2 >= 0; n2--)
            this.removeListener(e2, t2[n2]);
        return this;
      }, a.prototype.listeners = function(e2) {
        return p(this, e2, true);
      }, a.prototype.rawListeners = function(e2) {
        return p(this, e2, false);
      }, a.listenerCount = function(e2, t2) {
        return typeof e2.listenerCount == "function" ? e2.listenerCount(t2) : y.call(e2, t2);
      }, a.prototype.listenerCount = y, a.prototype.eventNames = function() {
        return this._eventsCount > 0 ? n(this._events) : [];
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(48), s = r(506), o = r(19);
      async function a(e2, t2, r2) {
        const n2 = await a.digest(e2, t2, r2);
        return i.encode(n2, t2, r2);
      }
      a.multihash = i, a.digest = async (e2, t2, r2) => {
        const n2 = a.createHash(t2), i2 = await n2(e2);
        return r2 ? i2.slice(0, r2) : i2;
      }, a.createHash = function(e2) {
        if (!e2)
          throw n(new Error("hash algorithm must be specified"), "ERR_HASH_ALGORITHM_NOT_SPECIFIED");
        if (e2 = i.coerceCode(e2), !a.functions[e2])
          throw n(new Error(`multihash function '${e2}' not yet supported`), "ERR_HASH_ALGORITHM_NOT_SUPPORTED");
        return a.functions[e2];
      }, a.functions = {0: s.identity, 17: s.sha1, 18: s.sha2256, 19: s.sha2512, 20: s.sha3512, 21: s.sha3384, 22: s.sha3256, 23: s.sha3224, 24: s.shake128, 25: s.shake256, 26: s.keccak224, 27: s.keccak256, 28: s.keccak384, 29: s.keccak512, 34: s.murmur3128, 35: s.murmur332, 86: s.dblSha2256}, s.addBlake(a.functions), a.validate = async (e2, t2) => {
        const r2 = await a(e2, i.decode(t2).name);
        return o(t2, r2);
      }, e.exports = a;
    }, function(e, t, r) {
      "use strict";
      t.DAGNode = r(525), t.DAGLink = r(254), t.resolver = r(531), t.util = r(255), t.codec = t.util.codec, t.defaultHashAlg = t.util.defaultHashAlg;
    }, function(e, t, r) {
      "use strict";
      const n = r(135), i = r(408), s = r(409), o = r(222), a = r(27);
      const c = r(410), u = r(411);
      e.exports = {addPrefix: function(e2, t2) {
        let r2;
        if (e2 instanceof Uint8Array)
          r2 = o.varintUint8ArrayEncode(e2);
        else {
          if (!s[e2])
            throw new Error("multicodec not recognized");
          r2 = s[e2];
        }
        return a([r2, t2], r2.length + t2.length);
      }, rmPrefix: function(e2) {
        return n.decode(e2), e2.slice(n.decode.bytes);
      }, getCodec: function(e2) {
        const t2 = n.decode(e2), r2 = i.get(t2);
        if (r2 === void 0)
          throw new Error(`Code ${t2} not found`);
        return r2;
      }, getName: function(e2) {
        return i.get(e2);
      }, getNumber: function(e2) {
        const t2 = s[e2];
        if (t2 === void 0)
          throw new Error("Codec `" + e2 + "` not found");
        return n.decode(t2);
      }, getCode: function(e2) {
        return n.decode(e2);
      }, getCodeVarint: function(e2) {
        const t2 = s[e2];
        if (t2 === void 0)
          throw new Error("Codec `" + e2 + "` not found");
        return t2;
      }, getVarint: function(e2) {
        return n.encode(e2);
      }, print: u, ...c};
    }, function(e, t, r) {
      "use strict";
      typeof Object.create == "function" ? e.exports = function(e2, t2) {
        t2 && (e2.super_ = t2, e2.prototype = Object.create(t2.prototype, {constructor: {value: e2, enumerable: false, writable: true, configurable: true}}));
      } : e.exports = function(e2, t2) {
        if (t2) {
          e2.super_ = t2;
          var r2 = function() {
          };
          r2.prototype = t2.prototype, e2.prototype = new r2(), e2.prototype.constructor = e2;
        }
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2) {
        if (e2 === t2)
          return true;
        if (e2.byteLength !== t2.byteLength)
          return false;
        for (let r2 = 0; r2 < e2.byteLength; r2++)
          if (e2[r2] !== t2[r2])
            return false;
        return true;
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(413), i = r(417);
      e.exports = function(e2, t2) {
        if (t2 || (t2 = {}), !e2)
          throw new Error("Pass in a .proto string or a protobuf-schema parsed object");
        var r2 = typeof e2 != "object" || e2 instanceof Uint8Array ? n.parse(e2) : e2, s = function() {
          var e3 = this;
          i(r2, t2.encodings || {}).forEach(function(t3) {
            e3[t3.name] = function(e4) {
              if (!e4)
                return null;
              var t4 = {};
              return Object.keys(e4).forEach(function(r3) {
                t4[r3] = e4[r3].value;
              }), t4;
            }(t3.values) || t3;
          });
        };
        return s.prototype.toString = function() {
          return n.stringify(r2);
        }, s.prototype.toJSON = function() {
          return r2;
        }, new s();
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(1), i = r(15), s = i.multihash, {Key: o} = r(9), a = r(1043), c = r(211), u = r(212), {Record: h} = r(66), f = r(7), d = r(0), l = r(27), p = r(6), y = r(5);
      t.convertBuffer = (e2) => i.digest(e2, "sha2-256"), t.convertPeerId = (e2) => i.digest(e2.id, "sha2-256"), t.bufferToKey = (e2) => new o("/" + t.encodeBase32(e2), false), t.keyForPublicKey = (e2) => l([p("/pk/"), e2.id]), t.isPublicKeyKey = (e2) => y(e2.slice(0, 4)) === "/pk/", t.fromPublicKeyKey = (e2) => new f(e2.slice(4)), t.now = () => Date.now(), t.encodeBase32 = (e2) => new a.Encoder().write(e2).finalize(), t.decodeBase32 = (e2) => {
        const t2 = new a.Decoder();
        return Uint8Array.from(t2.write(e2).finalize());
      }, t.sortClosestPeers = async (e2, r2) => (await u(e2, async (e3) => {
        const n2 = await t.convertPeerId(e3);
        return {peer: e3, distance: c(n2, r2)};
      })).sort(t.xorCompare).map((e3) => e3.peer), t.xorCompare = (e2, t2) => c.compare(e2.distance, t2.distance), t.pathSize = (e2, t2) => Math.ceil(e2 / t2), t.createPutRecord = (e2, t2) => {
        const r2 = new Date();
        return new h(e2, t2, r2).serialize();
      }, t.logger = (e2, t2) => {
        const r2 = ["libp2p", "dht"];
        t2 && r2.push(t2), e2 && r2.push("" + e2.toB58String().slice(0, 8)), n.formatters.b = (e3) => s.toB58String(e3);
        const i2 = n(r2.join(":"));
        return i2.error = n(r2.concat(["error"]).join(":")), i2;
      }, t.TimeoutError = class extends Error {
        get code() {
          return "ETIMEDOUT";
        }
      }, t.withTimeout = (e2, t2) => async (...r2) => Promise.race([e2(...r2), new Promise((e3, r3) => {
        setTimeout(() => {
          r3(d(new Error("Async function did not complete before timeout"), "ETIMEDOUT"));
        }, t2);
      })]), t.mapParallel = async function(e2, t2) {
        const r2 = [];
        for await (const n2 of e2)
          r2.push(t2(n2));
        return Promise.all(r2);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(52), i = r(4), s = r(9).Key, o = r(0), a = r(106), c = r(2), u = r(23);
      t.mergeOptions = u;
      t.OFFLINE_ERROR = "This command must be run in online mode. Try running 'ipfs daemon' first.", t.MFS_ROOT_KEY = new s("/local/filesroot"), t.MFS_MAX_CHUNK_SIZE = 262144, t.MFS_MAX_LINKS = 174;
      const h = c(async (e2, t2) => await e2);
      t.normalizePath = (e2) => {
        if (n.cid(e2))
          return "/ipfs/" + new i(e2);
        if (n.path(e2))
          return e2;
        throw o(new Error("invalid path: " + e2), "ERR_BAD_PATH");
      }, t.normalizeCidPath = (e2) => e2 instanceof Uint8Array ? new i(e2).toString() : i.isCID(e2) ? e2.toString() : (e2.indexOf("/ipfs/") === 0 && (e2 = e2.substring("/ipfs/".length)), e2.charAt(e2.length - 1) === "/" && (e2 = e2.substring(0, e2.length - 1)), e2), t.resolvePath = async function(e2, t2, r2 = {}) {
        if (n.cid(t2))
          return new i(t2);
        const {cid: s2, path: o2} = a(t2);
        if (!o2)
          return s2;
        return (await e2.resolve(s2, {...r2, path: o2})).cid;
      }, t.mapFile = (e2, t2 = {}) => {
        const r2 = {cid: e2.cid, path: e2.path, name: e2.name, depth: e2.path.split("/").length, size: 0, type: "file"};
        return e2.unixfs && (r2.type = e2.unixfs.type === "directory" ? "dir" : "file", e2.unixfs.type === "file" && (r2.size = e2.unixfs.fileSize(), t2.includeContent && (r2.content = e2.content())), r2.mode = e2.unixfs.mode, r2.mtime = e2.unixfs.mtime), r2;
      }, t.withTimeoutOption = c, t.withTimeout = h;
    }, function(e, t, r) {
      "use strict";
      const n = r(397), {hasOwnProperty: i} = Object.prototype, {propertyIsEnumerable: s} = Object, o = (e2, t2, r2) => Object.defineProperty(e2, t2, {value: r2, writable: true, enumerable: true, configurable: true}), a = {concatArrays: false, ignoreUndefined: false}, c = (e2) => {
        const t2 = [];
        for (const r2 in e2)
          i.call(e2, r2) && t2.push(r2);
        if (Object.getOwnPropertySymbols) {
          const r2 = Object.getOwnPropertySymbols(e2);
          for (const n2 of r2)
            s.call(e2, n2) && t2.push(n2);
        }
        return t2;
      };
      function u(e2) {
        return Array.isArray(e2) ? function(e3) {
          const t2 = e3.slice(0, 0);
          return c(e3).forEach((r2) => {
            o(t2, r2, u(e3[r2]));
          }), t2;
        }(e2) : n(e2) ? function(e3) {
          const t2 = Object.getPrototypeOf(e3) === null ? Object.create(null) : {};
          return c(e3).forEach((r2) => {
            o(t2, r2, u(e3[r2]));
          }), t2;
        }(e2) : e2;
      }
      const h = (e2, t2, r2, n2) => (r2.forEach((r3) => {
        t2[r3] === void 0 && n2.ignoreUndefined || (r3 in e2 && e2[r3] !== Object.getPrototypeOf(e2) ? o(e2, r3, f(e2[r3], t2[r3], n2)) : o(e2, r3, u(t2[r3])));
      }), e2);
      function f(e2, t2, r2) {
        return r2.concatArrays && Array.isArray(e2) && Array.isArray(t2) ? ((e3, t3, r3) => {
          let n2 = e3.slice(0, 0), s2 = 0;
          return [e3, t3].forEach((t4) => {
            const a2 = [];
            for (let r4 = 0; r4 < t4.length; r4++)
              i.call(t4, r4) && (a2.push(String(r4)), o(n2, s2++, t4 === e3 ? t4[r4] : u(t4[r4])));
            n2 = h(n2, t4, c(t4).filter((e4) => !a2.includes(e4)), r3);
          }), n2;
        })(e2, t2, r2) : n(t2) && n(e2) ? h(e2, t2, c(t2), r2) : u(t2);
      }
      e.exports = function(...e2) {
        const t2 = f(u(a), this !== void 0 && this || {}, a);
        let r2 = {_: {}};
        for (const i2 of e2)
          if (i2 !== void 0) {
            if (!n(i2))
              throw new TypeError("`" + i2 + "` is not an Option Object");
            r2 = f(r2, {_: i2}, t2);
          }
        return r2._;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, {className: t2, symbolName: r2}) {
        const n = Symbol.for(r2), i = {[t2]: class extends e2 {
          constructor(...e3) {
            super(...e3), Object.defineProperty(this, n, {value: true});
          }
          get [Symbol.toStringTag]() {
            return t2;
          }
        }}[t2];
        return i["is" + t2] = (e3) => !(!e3 || !e3[n]), i;
      }, e.exports.proto = function(e2, {className: t2, symbolName: r2, withoutNew: n}) {
        const i = Symbol.for(r2), s = {[t2]: function(...t3) {
          if (n && !(this instanceof s))
            return new s(...t3);
          const r3 = e2.call(this, ...t3) || this;
          return r3 && !r3[i] && Object.defineProperty(r3, i, {value: true}), r3;
        }}[t2];
        return s.prototype = Object.create(e2.prototype), s.prototype.constructor = s, Object.defineProperty(s.prototype, Symbol.toStringTag, {get: () => t2}), s["is" + t2] = (e3) => !(!e3 || !e3[i]), s;
      };
    }, function(e, t, r) {
      "use strict";
      const n = (...e2) => {
        let t2;
        for (; e2.length; )
          t2 = e2.shift()(t2);
        return t2;
      }, i = (e2) => e2 && (typeof e2[Symbol.asyncIterator] == "function" || typeof e2[Symbol.iterator] == "function" || typeof e2.next == "function"), s = (e2) => e2 && typeof e2.sink == "function" && i(e2.source), o = (e2) => (t2) => (e2.sink(t2), e2.source), a = (...e2) => {
        if (s(e2[0])) {
          const t2 = e2[0];
          e2[0] = () => t2.source;
        } else if (i(e2[0])) {
          const t2 = e2[0];
          e2[0] = () => t2;
        }
        if (e2.length > 1 && s(e2[e2.length - 1]) && (e2[e2.length - 1] = e2[e2.length - 1].sink), e2.length > 2)
          for (let t2 = 1; t2 < e2.length - 1; t2++)
            s(e2[t2]) && (e2[t2] = o(e2[t2]));
        return n(...e2);
      };
      e.exports = a, e.exports.pipe = a, e.exports.rawPipe = n, e.exports.isIterable = i, e.exports.isDuplex = s;
    }, function(e, t, r) {
      "use strict";
      t.messages = {NOT_STARTED_YET: "The libp2p node is not started yet", DHT_DISABLED: "DHT is not available", CONN_ENCRYPTION_REQUIRED: "At least one connection encryption module is required"}, t.codes = {DHT_DISABLED: "ERR_DHT_DISABLED", PUBSUB_NOT_STARTED: "ERR_PUBSUB_NOT_STARTED", DHT_NOT_STARTED: "ERR_DHT_NOT_STARTED", CONN_ENCRYPTION_REQUIRED: "ERR_CONN_ENCRYPTION_REQUIRED", ERR_CONNECTION_ENDED: "ERR_CONNECTION_ENDED", ERR_CONNECTION_FAILED: "ERR_CONNECTION_FAILED", ERR_NODE_NOT_STARTED: "ERR_NODE_NOT_STARTED", ERR_ALREADY_ABORTED: "ERR_ALREADY_ABORTED", ERR_NO_VALID_ADDRESSES: "ERR_NO_VALID_ADDRESSES", ERR_DIALED_SELF: "ERR_DIALED_SELF", ERR_DISCOVERED_SELF: "ERR_DISCOVERED_SELF", ERR_DUPLICATE_TRANSPORT: "ERR_DUPLICATE_TRANSPORT", ERR_ENCRYPTION_FAILED: "ERR_ENCRYPTION_FAILED", ERR_HOP_REQUEST_FAILED: "ERR_HOP_REQUEST_FAILED", ERR_INVALID_KEY: "ERR_INVALID_KEY", ERR_INVALID_MESSAGE: "ERR_INVALID_MESSAGE", ERR_INVALID_PARAMETERS: "ERR_INVALID_PARAMETERS", ERR_INVALID_PEER: "ERR_INVALID_PEER", ERR_MUXER_UNAVAILABLE: "ERR_MUXER_UNAVAILABLE", ERR_TIMEOUT: "ERR_TIMEOUT", ERR_TRANSPORT_UNAVAILABLE: "ERR_TRANSPORT_UNAVAILABLE", ERR_TRANSPORT_DIAL_FAILED: "ERR_TRANSPORT_DIAL_FAILED", ERR_UNSUPPORTED_PROTOCOL: "ERR_UNSUPPORTED_PROTOCOL", ERR_INVALID_MULTIADDR: "ERR_INVALID_MULTIADDR", ERR_SIGNATURE_NOT_VALID: "ERR_SIGNATURE_NOT_VALID"};
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2) {
        t2 || (t2 = e2.reduce((e3, t3) => e3 + t3.length, 0));
        const r2 = new Uint8Array(t2);
        let n = 0;
        for (const i of e2)
          r2.set(i, n), n += i.length;
        return r2;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(20)(r(532)).Data, i = r(0), s = ["raw", "directory", "file", "metadata", "symlink", "hamt-sharded-directory"], o = ["directory", "hamt-sharded-directory"], a = parseInt("0644", 8), c = parseInt("0755", 8);
      function u(e2) {
        if (e2 != null) {
          if (Object.prototype.hasOwnProperty.call(e2, "secs") && (e2 = {secs: e2.secs, nsecs: e2.nsecs}), Object.prototype.hasOwnProperty.call(e2, "Seconds") && (e2 = {secs: e2.Seconds, nsecs: e2.FractionalNanoseconds}), Array.isArray(e2) && (e2 = {secs: e2[0], nsecs: e2[1]}), e2 instanceof Date) {
            const t2 = e2.getTime(), r2 = Math.floor(t2 / 1e3);
            e2 = {secs: r2, nsecs: 1e3 * (t2 - 1e3 * r2)};
          }
          if (Object.prototype.hasOwnProperty.call(e2, "secs")) {
            if (e2.nsecs < 0 || e2.nsecs > 999999999)
              throw i(new Error("mtime-nsecs must be within the range [0,999999999]"), "ERR_INVALID_MTIME_NSECS");
            return e2;
          }
        }
      }
      function h(e2) {
        if (e2 != null)
          return (typeof e2 == "string" || e2 instanceof String) && (e2 = parseInt(e2, 8)), 4095 & e2;
      }
      class f {
        static unmarshal(e2) {
          const t2 = n.decode(e2), r2 = new f({type: s[t2.Type], data: t2.hasData() ? t2.Data : void 0, blockSizes: t2.blocksizes, mode: t2.hasMode() ? t2.mode : void 0, mtime: t2.hasMtime() ? t2.mtime : void 0});
          return r2._originalMode = t2.hasMode() ? t2.mode : void 0, r2;
        }
        constructor(...e2) {
          const {type: t2, data: r2, blockSizes: n2, hashType: o2, fanout: f2, mtime: d, mode: l} = function(e3) {
            return e3.length === 0 ? {type: "file"} : e3.length === 2 ? {type: e3[0], data: e3[1]} : typeof e3[0] == "string" || e3[0] instanceof String ? {type: e3[0]} : e3[0];
          }(e2);
          if (!s.includes(t2))
            throw i(new Error("Type: " + t2 + " is not valid"), "ERR_INVALID_TYPE");
          this.type = t2, this.data = r2, this.hashType = o2, this.fanout = f2, this.blockSizes = n2 || [];
          const p = h(l);
          p !== void 0 && (this.mode = p), this.mode === void 0 && t2 === "file" && (this.mode = a), this.mode === void 0 && this.isDirectory() && (this.mode = c);
          const y = u(d);
          y && (this.mtime = y);
        }
        isDirectory() {
          return o.includes(this.type);
        }
        addBlockSize(e2) {
          this.blockSizes.push(e2);
        }
        removeBlockSize(e2) {
          this.blockSizes.splice(e2, 1);
        }
        fileSize() {
          if (this.isDirectory())
            return;
          let e2 = 0;
          return this.blockSizes.forEach((t2) => {
            e2 += t2;
          }), this.data && (e2 += this.data.length), e2;
        }
        marshal() {
          let e2;
          switch (this.type) {
            case "raw":
              e2 = n.DataType.Raw;
              break;
            case "directory":
              e2 = n.DataType.Directory;
              break;
            case "file":
              e2 = n.DataType.File;
              break;
            case "metadata":
              e2 = n.DataType.Metadata;
              break;
            case "symlink":
              e2 = n.DataType.Symlink;
              break;
            case "hamt-sharded-directory":
              e2 = n.DataType.HAMTShard;
              break;
            default:
              throw i(new Error("Type: " + e2 + " is not valid"), "ERR_INVALID_TYPE");
          }
          let t2 = this.data;
          this.data && this.data.length || (t2 = void 0);
          let r2, s2, o2 = this.blockSizes;
          if (this.blockSizes && this.blockSizes.length || (o2 = void 0), this.mode != null && (r2 = 4294963200 & this._originalMode | h(this.mode), r2 === a && this.type === "file" && (r2 = void 0), r2 === c && this.isDirectory() && (r2 = void 0)), this.mtime != null) {
            const e3 = u(this.mtime);
            e3 && (s2 = {Seconds: e3.secs, FractionalNanoseconds: e3.nsecs}, s2.FractionalNanoseconds === 0 && delete s2.FractionalNanoseconds);
          }
          return n.encode({Type: e2, Data: t2, filesize: this.fileSize(), blocksizes: o2, hashType: this.hashType, fanout: this.fanout, mode: r2, mtime: s2});
        }
      }
      e.exports = f;
    }, function(e, t, r) {
      "use strict";
      var n;
      !function(i) {
        var s, o = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, a = Math.ceil, c = Math.floor, u = "[BigNumber Error] ", h = u + "Number primitive has more than 15 significant digits: ", f = 1e14, d = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], l = 1e9;
        function p(e2) {
          var t2 = 0 | e2;
          return e2 > 0 || e2 === t2 ? t2 : t2 - 1;
        }
        function y(e2) {
          for (var t2, r2, n2 = 1, i2 = e2.length, s2 = e2[0] + ""; n2 < i2; ) {
            for (r2 = 14 - (t2 = e2[n2++] + "").length; r2--; t2 = "0" + t2)
              ;
            s2 += t2;
          }
          for (i2 = s2.length; s2.charCodeAt(--i2) === 48; )
            ;
          return s2.slice(0, i2 + 1 || 1);
        }
        function g(e2, t2) {
          var r2, n2, i2 = e2.c, s2 = t2.c, o2 = e2.s, a2 = t2.s, c2 = e2.e, u2 = t2.e;
          if (!o2 || !a2)
            return null;
          if (r2 = i2 && !i2[0], n2 = s2 && !s2[0], r2 || n2)
            return r2 ? n2 ? 0 : -a2 : o2;
          if (o2 != a2)
            return o2;
          if (r2 = o2 < 0, n2 = c2 == u2, !i2 || !s2)
            return n2 ? 0 : !i2 ^ r2 ? 1 : -1;
          if (!n2)
            return c2 > u2 ^ r2 ? 1 : -1;
          for (a2 = (c2 = i2.length) < (u2 = s2.length) ? c2 : u2, o2 = 0; o2 < a2; o2++)
            if (i2[o2] != s2[o2])
              return i2[o2] > s2[o2] ^ r2 ? 1 : -1;
          return c2 == u2 ? 0 : c2 > u2 ^ r2 ? 1 : -1;
        }
        function b(e2, t2, r2, n2) {
          if (e2 < t2 || e2 > r2 || e2 !== c(e2))
            throw Error(u + (n2 || "Argument") + (typeof e2 == "number" ? e2 < t2 || e2 > r2 ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(e2));
        }
        function m(e2) {
          var t2 = e2.c.length - 1;
          return p(e2.e / 14) == t2 && e2.c[t2] % 2 != 0;
        }
        function v(e2, t2) {
          return (e2.length > 1 ? e2.charAt(0) + "." + e2.slice(1) : e2) + (t2 < 0 ? "e" : "e+") + t2;
        }
        function w(e2, t2, r2) {
          var n2, i2;
          if (t2 < 0) {
            for (i2 = r2 + "."; ++t2; i2 += r2)
              ;
            e2 = i2 + e2;
          } else if (++t2 > (n2 = e2.length)) {
            for (i2 = r2, t2 -= n2; --t2; i2 += r2)
              ;
            e2 += i2;
          } else
            t2 < n2 && (e2 = e2.slice(0, t2) + "." + e2.slice(t2));
          return e2;
        }
        (s = function e2(t2) {
          var r2, n2, i2, s2, _, E, S, A, I, k = j.prototype = {constructor: j, toString: null, valueOf: null}, R = new j(1), T = 20, C = 4, M = -7, x = 21, N = -1e7, P = 1e7, B = false, O = 1, D = 0, L = {prefix: "", groupSize: 3, secondaryGroupSize: 0, groupSeparator: ",", decimalSeparator: ".", fractionGroupSize: 0, fractionGroupSeparator: "\xA0", suffix: ""}, U = "0123456789abcdefghijklmnopqrstuvwxyz";
          function j(e3, t3) {
            var r3, s3, a2, u2, f2, d2, l2, p2, y2 = this;
            if (!(y2 instanceof j))
              return new j(e3, t3);
            if (t3 == null) {
              if (e3 && e3._isBigNumber === true)
                return y2.s = e3.s, void (!e3.c || e3.e > P ? y2.c = y2.e = null : e3.e < N ? y2.c = [y2.e = 0] : (y2.e = e3.e, y2.c = e3.c.slice()));
              if ((d2 = typeof e3 == "number") && 0 * e3 == 0) {
                if (y2.s = 1 / e3 < 0 ? (e3 = -e3, -1) : 1, e3 === ~~e3) {
                  for (u2 = 0, f2 = e3; f2 >= 10; f2 /= 10, u2++)
                    ;
                  return void (u2 > P ? y2.c = y2.e = null : (y2.e = u2, y2.c = [e3]));
                }
                p2 = String(e3);
              } else {
                if (!o.test(p2 = String(e3)))
                  return i2(y2, p2, d2);
                y2.s = p2.charCodeAt(0) == 45 ? (p2 = p2.slice(1), -1) : 1;
              }
              (u2 = p2.indexOf(".")) > -1 && (p2 = p2.replace(".", "")), (f2 = p2.search(/e/i)) > 0 ? (u2 < 0 && (u2 = f2), u2 += +p2.slice(f2 + 1), p2 = p2.substring(0, f2)) : u2 < 0 && (u2 = p2.length);
            } else {
              if (b(t3, 2, U.length, "Base"), t3 == 10)
                return K(y2 = new j(e3), T + y2.e + 1, C);
              if (p2 = String(e3), d2 = typeof e3 == "number") {
                if (0 * e3 != 0)
                  return i2(y2, p2, d2, t3);
                if (y2.s = 1 / e3 < 0 ? (p2 = p2.slice(1), -1) : 1, j.DEBUG && p2.replace(/^0\.0*|\./, "").length > 15)
                  throw Error(h + e3);
              } else
                y2.s = p2.charCodeAt(0) === 45 ? (p2 = p2.slice(1), -1) : 1;
              for (r3 = U.slice(0, t3), u2 = f2 = 0, l2 = p2.length; f2 < l2; f2++)
                if (r3.indexOf(s3 = p2.charAt(f2)) < 0) {
                  if (s3 == ".") {
                    if (f2 > u2) {
                      u2 = l2;
                      continue;
                    }
                  } else if (!a2 && (p2 == p2.toUpperCase() && (p2 = p2.toLowerCase()) || p2 == p2.toLowerCase() && (p2 = p2.toUpperCase()))) {
                    a2 = true, f2 = -1, u2 = 0;
                    continue;
                  }
                  return i2(y2, String(e3), d2, t3);
                }
              d2 = false, (u2 = (p2 = n2(p2, t3, 10, y2.s)).indexOf(".")) > -1 ? p2 = p2.replace(".", "") : u2 = p2.length;
            }
            for (f2 = 0; p2.charCodeAt(f2) === 48; f2++)
              ;
            for (l2 = p2.length; p2.charCodeAt(--l2) === 48; )
              ;
            if (p2 = p2.slice(f2, ++l2)) {
              if (l2 -= f2, d2 && j.DEBUG && l2 > 15 && (e3 > 9007199254740991 || e3 !== c(e3)))
                throw Error(h + y2.s * e3);
              if ((u2 = u2 - f2 - 1) > P)
                y2.c = y2.e = null;
              else if (u2 < N)
                y2.c = [y2.e = 0];
              else {
                if (y2.e = u2, y2.c = [], f2 = (u2 + 1) % 14, u2 < 0 && (f2 += 14), f2 < l2) {
                  for (f2 && y2.c.push(+p2.slice(0, f2)), l2 -= 14; f2 < l2; )
                    y2.c.push(+p2.slice(f2, f2 += 14));
                  f2 = 14 - (p2 = p2.slice(f2)).length;
                } else
                  f2 -= l2;
                for (; f2--; p2 += "0")
                  ;
                y2.c.push(+p2);
              }
            } else
              y2.c = [y2.e = 0];
          }
          function F(e3, t3, r3, n3) {
            var i3, s3, o2, a2, c2;
            if (r3 == null ? r3 = C : b(r3, 0, 8), !e3.c)
              return e3.toString();
            if (i3 = e3.c[0], o2 = e3.e, t3 == null)
              c2 = y(e3.c), c2 = n3 == 1 || n3 == 2 && (o2 <= M || o2 >= x) ? v(c2, o2) : w(c2, o2, "0");
            else if (s3 = (e3 = K(new j(e3), t3, r3)).e, a2 = (c2 = y(e3.c)).length, n3 == 1 || n3 == 2 && (t3 <= s3 || s3 <= M)) {
              for (; a2 < t3; c2 += "0", a2++)
                ;
              c2 = v(c2, s3);
            } else if (t3 -= o2, c2 = w(c2, s3, "0"), s3 + 1 > a2) {
              if (--t3 > 0)
                for (c2 += "."; t3--; c2 += "0")
                  ;
            } else if ((t3 += s3 - a2) > 0)
              for (s3 + 1 == a2 && (c2 += "."); t3--; c2 += "0")
                ;
            return e3.s < 0 && i3 ? "-" + c2 : c2;
          }
          function z(e3, t3) {
            for (var r3, n3 = 1, i3 = new j(e3[0]); n3 < e3.length; n3++) {
              if (!(r3 = new j(e3[n3])).s) {
                i3 = r3;
                break;
              }
              t3.call(i3, r3) && (i3 = r3);
            }
            return i3;
          }
          function q(e3, t3, r3) {
            for (var n3 = 1, i3 = t3.length; !t3[--i3]; t3.pop())
              ;
            for (i3 = t3[0]; i3 >= 10; i3 /= 10, n3++)
              ;
            return (r3 = n3 + 14 * r3 - 1) > P ? e3.c = e3.e = null : r3 < N ? e3.c = [e3.e = 0] : (e3.e = r3, e3.c = t3), e3;
          }
          function K(e3, t3, r3, n3) {
            var i3, s3, o2, u2, h2, l2, p2, y2 = e3.c, g2 = d;
            if (y2) {
              e: {
                for (i3 = 1, u2 = y2[0]; u2 >= 10; u2 /= 10, i3++)
                  ;
                if ((s3 = t3 - i3) < 0)
                  s3 += 14, o2 = t3, p2 = (h2 = y2[l2 = 0]) / g2[i3 - o2 - 1] % 10 | 0;
                else if ((l2 = a((s3 + 1) / 14)) >= y2.length) {
                  if (!n3)
                    break e;
                  for (; y2.length <= l2; y2.push(0))
                    ;
                  h2 = p2 = 0, i3 = 1, o2 = (s3 %= 14) - 14 + 1;
                } else {
                  for (h2 = u2 = y2[l2], i3 = 1; u2 >= 10; u2 /= 10, i3++)
                    ;
                  p2 = (o2 = (s3 %= 14) - 14 + i3) < 0 ? 0 : h2 / g2[i3 - o2 - 1] % 10 | 0;
                }
                if (n3 = n3 || t3 < 0 || y2[l2 + 1] != null || (o2 < 0 ? h2 : h2 % g2[i3 - o2 - 1]), n3 = r3 < 4 ? (p2 || n3) && (r3 == 0 || r3 == (e3.s < 0 ? 3 : 2)) : p2 > 5 || p2 == 5 && (r3 == 4 || n3 || r3 == 6 && (s3 > 0 ? o2 > 0 ? h2 / g2[i3 - o2] : 0 : y2[l2 - 1]) % 10 & 1 || r3 == (e3.s < 0 ? 8 : 7)), t3 < 1 || !y2[0])
                  return y2.length = 0, n3 ? (t3 -= e3.e + 1, y2[0] = g2[(14 - t3 % 14) % 14], e3.e = -t3 || 0) : y2[0] = e3.e = 0, e3;
                if (s3 == 0 ? (y2.length = l2, u2 = 1, l2--) : (y2.length = l2 + 1, u2 = g2[14 - s3], y2[l2] = o2 > 0 ? c(h2 / g2[i3 - o2] % g2[o2]) * u2 : 0), n3)
                  for (; ; ) {
                    if (l2 == 0) {
                      for (s3 = 1, o2 = y2[0]; o2 >= 10; o2 /= 10, s3++)
                        ;
                      for (o2 = y2[0] += u2, u2 = 1; o2 >= 10; o2 /= 10, u2++)
                        ;
                      s3 != u2 && (e3.e++, y2[0] == f && (y2[0] = 1));
                      break;
                    }
                    if (y2[l2] += u2, y2[l2] != f)
                      break;
                    y2[l2--] = 0, u2 = 1;
                  }
                for (s3 = y2.length; y2[--s3] === 0; y2.pop())
                  ;
              }
              e3.e > P ? e3.c = e3.e = null : e3.e < N && (e3.c = [e3.e = 0]);
            }
            return e3;
          }
          function V(e3) {
            var t3, r3 = e3.e;
            return r3 === null ? e3.toString() : (t3 = y(e3.c), t3 = r3 <= M || r3 >= x ? v(t3, r3) : w(t3, r3, "0"), e3.s < 0 ? "-" + t3 : t3);
          }
          return j.clone = e2, j.ROUND_UP = 0, j.ROUND_DOWN = 1, j.ROUND_CEIL = 2, j.ROUND_FLOOR = 3, j.ROUND_HALF_UP = 4, j.ROUND_HALF_DOWN = 5, j.ROUND_HALF_EVEN = 6, j.ROUND_HALF_CEIL = 7, j.ROUND_HALF_FLOOR = 8, j.EUCLID = 9, j.config = j.set = function(e3) {
            var t3, r3;
            if (e3 != null) {
              if (typeof e3 != "object")
                throw Error(u + "Object expected: " + e3);
              if (e3.hasOwnProperty(t3 = "DECIMAL_PLACES") && (b(r3 = e3[t3], 0, l, t3), T = r3), e3.hasOwnProperty(t3 = "ROUNDING_MODE") && (b(r3 = e3[t3], 0, 8, t3), C = r3), e3.hasOwnProperty(t3 = "EXPONENTIAL_AT") && ((r3 = e3[t3]) && r3.pop ? (b(r3[0], -l, 0, t3), b(r3[1], 0, l, t3), M = r3[0], x = r3[1]) : (b(r3, -l, l, t3), M = -(x = r3 < 0 ? -r3 : r3))), e3.hasOwnProperty(t3 = "RANGE"))
                if ((r3 = e3[t3]) && r3.pop)
                  b(r3[0], -l, -1, t3), b(r3[1], 1, l, t3), N = r3[0], P = r3[1];
                else {
                  if (b(r3, -l, l, t3), !r3)
                    throw Error(u + t3 + " cannot be zero: " + r3);
                  N = -(P = r3 < 0 ? -r3 : r3);
                }
              if (e3.hasOwnProperty(t3 = "CRYPTO")) {
                if ((r3 = e3[t3]) !== !!r3)
                  throw Error(u + t3 + " not true or false: " + r3);
                if (r3) {
                  if (typeof crypto == "undefined" || !crypto || !crypto.getRandomValues && !crypto.randomBytes)
                    throw B = !r3, Error(u + "crypto unavailable");
                  B = r3;
                } else
                  B = r3;
              }
              if (e3.hasOwnProperty(t3 = "MODULO_MODE") && (b(r3 = e3[t3], 0, 9, t3), O = r3), e3.hasOwnProperty(t3 = "POW_PRECISION") && (b(r3 = e3[t3], 0, l, t3), D = r3), e3.hasOwnProperty(t3 = "FORMAT")) {
                if (typeof (r3 = e3[t3]) != "object")
                  throw Error(u + t3 + " not an object: " + r3);
                L = r3;
              }
              if (e3.hasOwnProperty(t3 = "ALPHABET")) {
                if (typeof (r3 = e3[t3]) != "string" || /^.?$|[+\-.\s]|(.).*\1/.test(r3))
                  throw Error(u + t3 + " invalid: " + r3);
                U = r3;
              }
            }
            return {DECIMAL_PLACES: T, ROUNDING_MODE: C, EXPONENTIAL_AT: [M, x], RANGE: [N, P], CRYPTO: B, MODULO_MODE: O, POW_PRECISION: D, FORMAT: L, ALPHABET: U};
          }, j.isBigNumber = function(e3) {
            if (!e3 || e3._isBigNumber !== true)
              return false;
            if (!j.DEBUG)
              return true;
            var t3, r3, n3 = e3.c, i3 = e3.e, s3 = e3.s;
            e:
              if ({}.toString.call(n3) == "[object Array]") {
                if ((s3 === 1 || s3 === -1) && i3 >= -l && i3 <= l && i3 === c(i3)) {
                  if (n3[0] === 0) {
                    if (i3 === 0 && n3.length === 1)
                      return true;
                    break e;
                  }
                  if ((t3 = (i3 + 1) % 14) < 1 && (t3 += 14), String(n3[0]).length == t3) {
                    for (t3 = 0; t3 < n3.length; t3++)
                      if ((r3 = n3[t3]) < 0 || r3 >= f || r3 !== c(r3))
                        break e;
                    if (r3 !== 0)
                      return true;
                  }
                }
              } else if (n3 === null && i3 === null && (s3 === null || s3 === 1 || s3 === -1))
                return true;
            throw Error(u + "Invalid BigNumber: " + e3);
          }, j.maximum = j.max = function() {
            return z(arguments, k.lt);
          }, j.minimum = j.min = function() {
            return z(arguments, k.gt);
          }, j.random = (s2 = 9007199254740992 * Math.random() & 2097151 ? function() {
            return c(9007199254740992 * Math.random());
          } : function() {
            return 8388608 * (1073741824 * Math.random() | 0) + (8388608 * Math.random() | 0);
          }, function(e3) {
            var t3, r3, n3, i3, o2, h2 = 0, f2 = [], p2 = new j(R);
            if (e3 == null ? e3 = T : b(e3, 0, l), i3 = a(e3 / 14), B)
              if (crypto.getRandomValues) {
                for (t3 = crypto.getRandomValues(new Uint32Array(i3 *= 2)); h2 < i3; )
                  (o2 = 131072 * t3[h2] + (t3[h2 + 1] >>> 11)) >= 9e15 ? (r3 = crypto.getRandomValues(new Uint32Array(2)), t3[h2] = r3[0], t3[h2 + 1] = r3[1]) : (f2.push(o2 % 1e14), h2 += 2);
                h2 = i3 / 2;
              } else {
                if (!crypto.randomBytes)
                  throw B = false, Error(u + "crypto unavailable");
                for (t3 = crypto.randomBytes(i3 *= 7); h2 < i3; )
                  (o2 = 281474976710656 * (31 & t3[h2]) + 1099511627776 * t3[h2 + 1] + 4294967296 * t3[h2 + 2] + 16777216 * t3[h2 + 3] + (t3[h2 + 4] << 16) + (t3[h2 + 5] << 8) + t3[h2 + 6]) >= 9e15 ? crypto.randomBytes(7).copy(t3, h2) : (f2.push(o2 % 1e14), h2 += 7);
                h2 = i3 / 7;
              }
            if (!B)
              for (; h2 < i3; )
                (o2 = s2()) < 9e15 && (f2[h2++] = o2 % 1e14);
            for (e3 %= 14, (i3 = f2[--h2]) && e3 && (o2 = d[14 - e3], f2[h2] = c(i3 / o2) * o2); f2[h2] === 0; f2.pop(), h2--)
              ;
            if (h2 < 0)
              f2 = [n3 = 0];
            else {
              for (n3 = -1; f2[0] === 0; f2.splice(0, 1), n3 -= 14)
                ;
              for (h2 = 1, o2 = f2[0]; o2 >= 10; o2 /= 10, h2++)
                ;
              h2 < 14 && (n3 -= 14 - h2);
            }
            return p2.e = n3, p2.c = f2, p2;
          }), j.sum = function() {
            for (var e3 = 1, t3 = arguments, r3 = new j(t3[0]); e3 < t3.length; )
              r3 = r3.plus(t3[e3++]);
            return r3;
          }, n2 = function() {
            function e3(e4, t3, r3, n3) {
              for (var i3, s3, o2 = [0], a2 = 0, c2 = e4.length; a2 < c2; ) {
                for (s3 = o2.length; s3--; o2[s3] *= t3)
                  ;
                for (o2[0] += n3.indexOf(e4.charAt(a2++)), i3 = 0; i3 < o2.length; i3++)
                  o2[i3] > r3 - 1 && (o2[i3 + 1] == null && (o2[i3 + 1] = 0), o2[i3 + 1] += o2[i3] / r3 | 0, o2[i3] %= r3);
              }
              return o2.reverse();
            }
            return function(t3, n3, i3, s3, o2) {
              var a2, c2, u2, h2, f2, d2, l2, p2, g2 = t3.indexOf("."), b2 = T, m2 = C;
              for (g2 >= 0 && (h2 = D, D = 0, t3 = t3.replace(".", ""), d2 = (p2 = new j(n3)).pow(t3.length - g2), D = h2, p2.c = e3(w(y(d2.c), d2.e, "0"), 10, i3, "0123456789"), p2.e = p2.c.length), u2 = h2 = (l2 = e3(t3, n3, i3, o2 ? (a2 = U, "0123456789") : (a2 = "0123456789", U))).length; l2[--h2] == 0; l2.pop())
                ;
              if (!l2[0])
                return a2.charAt(0);
              if (g2 < 0 ? --u2 : (d2.c = l2, d2.e = u2, d2.s = s3, l2 = (d2 = r2(d2, p2, b2, m2, i3)).c, f2 = d2.r, u2 = d2.e), g2 = l2[c2 = u2 + b2 + 1], h2 = i3 / 2, f2 = f2 || c2 < 0 || l2[c2 + 1] != null, f2 = m2 < 4 ? (g2 != null || f2) && (m2 == 0 || m2 == (d2.s < 0 ? 3 : 2)) : g2 > h2 || g2 == h2 && (m2 == 4 || f2 || m2 == 6 && 1 & l2[c2 - 1] || m2 == (d2.s < 0 ? 8 : 7)), c2 < 1 || !l2[0])
                t3 = f2 ? w(a2.charAt(1), -b2, a2.charAt(0)) : a2.charAt(0);
              else {
                if (l2.length = c2, f2)
                  for (--i3; ++l2[--c2] > i3; )
                    l2[c2] = 0, c2 || (++u2, l2 = [1].concat(l2));
                for (h2 = l2.length; !l2[--h2]; )
                  ;
                for (g2 = 0, t3 = ""; g2 <= h2; t3 += a2.charAt(l2[g2++]))
                  ;
                t3 = w(t3, u2, a2.charAt(0));
              }
              return t3;
            };
          }(), r2 = function() {
            function e3(e4, t4, r4) {
              var n3, i3, s3, o2, a2 = 0, c2 = e4.length, u2 = t4 % 1e7, h2 = t4 / 1e7 | 0;
              for (e4 = e4.slice(); c2--; )
                a2 = ((i3 = u2 * (s3 = e4[c2] % 1e7) + (n3 = h2 * s3 + (o2 = e4[c2] / 1e7 | 0) * u2) % 1e7 * 1e7 + a2) / r4 | 0) + (n3 / 1e7 | 0) + h2 * o2, e4[c2] = i3 % r4;
              return a2 && (e4 = [a2].concat(e4)), e4;
            }
            function t3(e4, t4, r4, n3) {
              var i3, s3;
              if (r4 != n3)
                s3 = r4 > n3 ? 1 : -1;
              else
                for (i3 = s3 = 0; i3 < r4; i3++)
                  if (e4[i3] != t4[i3]) {
                    s3 = e4[i3] > t4[i3] ? 1 : -1;
                    break;
                  }
              return s3;
            }
            function r3(e4, t4, r4, n3) {
              for (var i3 = 0; r4--; )
                e4[r4] -= i3, i3 = e4[r4] < t4[r4] ? 1 : 0, e4[r4] = i3 * n3 + e4[r4] - t4[r4];
              for (; !e4[0] && e4.length > 1; e4.splice(0, 1))
                ;
            }
            return function(n3, i3, s3, o2, a2) {
              var u2, h2, d2, l2, y2, g2, b2, m2, v2, w2, _2, E2, S2, A2, I2, k2, R2, T2 = n3.s == i3.s ? 1 : -1, C2 = n3.c, M2 = i3.c;
              if (!(C2 && C2[0] && M2 && M2[0]))
                return new j(n3.s && i3.s && (C2 ? !M2 || C2[0] != M2[0] : M2) ? C2 && C2[0] == 0 || !M2 ? 0 * T2 : T2 / 0 : NaN);
              for (v2 = (m2 = new j(T2)).c = [], T2 = s3 + (h2 = n3.e - i3.e) + 1, a2 || (a2 = f, h2 = p(n3.e / 14) - p(i3.e / 14), T2 = T2 / 14 | 0), d2 = 0; M2[d2] == (C2[d2] || 0); d2++)
                ;
              if (M2[d2] > (C2[d2] || 0) && h2--, T2 < 0)
                v2.push(1), l2 = true;
              else {
                for (A2 = C2.length, k2 = M2.length, d2 = 0, T2 += 2, (y2 = c(a2 / (M2[0] + 1))) > 1 && (M2 = e3(M2, y2, a2), C2 = e3(C2, y2, a2), k2 = M2.length, A2 = C2.length), S2 = k2, _2 = (w2 = C2.slice(0, k2)).length; _2 < k2; w2[_2++] = 0)
                  ;
                R2 = M2.slice(), R2 = [0].concat(R2), I2 = M2[0], M2[1] >= a2 / 2 && I2++;
                do {
                  if (y2 = 0, (u2 = t3(M2, w2, k2, _2)) < 0) {
                    if (E2 = w2[0], k2 != _2 && (E2 = E2 * a2 + (w2[1] || 0)), (y2 = c(E2 / I2)) > 1)
                      for (y2 >= a2 && (y2 = a2 - 1), b2 = (g2 = e3(M2, y2, a2)).length, _2 = w2.length; t3(g2, w2, b2, _2) == 1; )
                        y2--, r3(g2, k2 < b2 ? R2 : M2, b2, a2), b2 = g2.length, u2 = 1;
                    else
                      y2 == 0 && (u2 = y2 = 1), b2 = (g2 = M2.slice()).length;
                    if (b2 < _2 && (g2 = [0].concat(g2)), r3(w2, g2, _2, a2), _2 = w2.length, u2 == -1)
                      for (; t3(M2, w2, k2, _2) < 1; )
                        y2++, r3(w2, k2 < _2 ? R2 : M2, _2, a2), _2 = w2.length;
                  } else
                    u2 === 0 && (y2++, w2 = [0]);
                  v2[d2++] = y2, w2[0] ? w2[_2++] = C2[S2] || 0 : (w2 = [C2[S2]], _2 = 1);
                } while ((S2++ < A2 || w2[0] != null) && T2--);
                l2 = w2[0] != null, v2[0] || v2.splice(0, 1);
              }
              if (a2 == f) {
                for (d2 = 1, T2 = v2[0]; T2 >= 10; T2 /= 10, d2++)
                  ;
                K(m2, s3 + (m2.e = d2 + 14 * h2 - 1) + 1, o2, l2);
              } else
                m2.e = h2, m2.r = +l2;
              return m2;
            };
          }(), _ = /^(-?)0([xbo])(?=\w[\w.]*$)/i, E = /^([^.]+)\.$/, S = /^\.([^.]+)$/, A = /^-?(Infinity|NaN)$/, I = /^\s*\+(?=[\w.])|^\s+|\s+$/g, i2 = function(e3, t3, r3, n3) {
            var i3, s3 = r3 ? t3 : t3.replace(I, "");
            if (A.test(s3))
              e3.s = isNaN(s3) ? null : s3 < 0 ? -1 : 1;
            else {
              if (!r3 && (s3 = s3.replace(_, function(e4, t4, r4) {
                return i3 = (r4 = r4.toLowerCase()) == "x" ? 16 : r4 == "b" ? 2 : 8, n3 && n3 != i3 ? e4 : t4;
              }), n3 && (i3 = n3, s3 = s3.replace(E, "$1").replace(S, "0.$1")), t3 != s3))
                return new j(s3, i3);
              if (j.DEBUG)
                throw Error(u + "Not a" + (n3 ? " base " + n3 : "") + " number: " + t3);
              e3.s = null;
            }
            e3.c = e3.e = null;
          }, k.absoluteValue = k.abs = function() {
            var e3 = new j(this);
            return e3.s < 0 && (e3.s = 1), e3;
          }, k.comparedTo = function(e3, t3) {
            return g(this, new j(e3, t3));
          }, k.decimalPlaces = k.dp = function(e3, t3) {
            var r3, n3, i3, s3 = this;
            if (e3 != null)
              return b(e3, 0, l), t3 == null ? t3 = C : b(t3, 0, 8), K(new j(s3), e3 + s3.e + 1, t3);
            if (!(r3 = s3.c))
              return null;
            if (n3 = 14 * ((i3 = r3.length - 1) - p(this.e / 14)), i3 = r3[i3])
              for (; i3 % 10 == 0; i3 /= 10, n3--)
                ;
            return n3 < 0 && (n3 = 0), n3;
          }, k.dividedBy = k.div = function(e3, t3) {
            return r2(this, new j(e3, t3), T, C);
          }, k.dividedToIntegerBy = k.idiv = function(e3, t3) {
            return r2(this, new j(e3, t3), 0, 1);
          }, k.exponentiatedBy = k.pow = function(e3, t3) {
            var r3, n3, i3, s3, o2, h2, f2, d2, l2 = this;
            if ((e3 = new j(e3)).c && !e3.isInteger())
              throw Error(u + "Exponent not an integer: " + V(e3));
            if (t3 != null && (t3 = new j(t3)), o2 = e3.e > 14, !l2.c || !l2.c[0] || l2.c[0] == 1 && !l2.e && l2.c.length == 1 || !e3.c || !e3.c[0])
              return d2 = new j(Math.pow(+V(l2), o2 ? 2 - m(e3) : +V(e3))), t3 ? d2.mod(t3) : d2;
            if (h2 = e3.s < 0, t3) {
              if (t3.c ? !t3.c[0] : !t3.s)
                return new j(NaN);
              (n3 = !h2 && l2.isInteger() && t3.isInteger()) && (l2 = l2.mod(t3));
            } else {
              if (e3.e > 9 && (l2.e > 0 || l2.e < -1 || (l2.e == 0 ? l2.c[0] > 1 || o2 && l2.c[1] >= 24e7 : l2.c[0] < 8e13 || o2 && l2.c[0] <= 9999975e7)))
                return s3 = l2.s < 0 && m(e3) ? -0 : 0, l2.e > -1 && (s3 = 1 / s3), new j(h2 ? 1 / s3 : s3);
              D && (s3 = a(D / 14 + 2));
            }
            for (o2 ? (r3 = new j(0.5), h2 && (e3.s = 1), f2 = m(e3)) : f2 = (i3 = Math.abs(+V(e3))) % 2, d2 = new j(R); ; ) {
              if (f2) {
                if (!(d2 = d2.times(l2)).c)
                  break;
                s3 ? d2.c.length > s3 && (d2.c.length = s3) : n3 && (d2 = d2.mod(t3));
              }
              if (i3) {
                if ((i3 = c(i3 / 2)) === 0)
                  break;
                f2 = i3 % 2;
              } else if (K(e3 = e3.times(r3), e3.e + 1, 1), e3.e > 14)
                f2 = m(e3);
              else {
                if ((i3 = +V(e3)) === 0)
                  break;
                f2 = i3 % 2;
              }
              l2 = l2.times(l2), s3 ? l2.c && l2.c.length > s3 && (l2.c.length = s3) : n3 && (l2 = l2.mod(t3));
            }
            return n3 ? d2 : (h2 && (d2 = R.div(d2)), t3 ? d2.mod(t3) : s3 ? K(d2, D, C, void 0) : d2);
          }, k.integerValue = function(e3) {
            var t3 = new j(this);
            return e3 == null ? e3 = C : b(e3, 0, 8), K(t3, t3.e + 1, e3);
          }, k.isEqualTo = k.eq = function(e3, t3) {
            return g(this, new j(e3, t3)) === 0;
          }, k.isFinite = function() {
            return !!this.c;
          }, k.isGreaterThan = k.gt = function(e3, t3) {
            return g(this, new j(e3, t3)) > 0;
          }, k.isGreaterThanOrEqualTo = k.gte = function(e3, t3) {
            return (t3 = g(this, new j(e3, t3))) === 1 || t3 === 0;
          }, k.isInteger = function() {
            return !!this.c && p(this.e / 14) > this.c.length - 2;
          }, k.isLessThan = k.lt = function(e3, t3) {
            return g(this, new j(e3, t3)) < 0;
          }, k.isLessThanOrEqualTo = k.lte = function(e3, t3) {
            return (t3 = g(this, new j(e3, t3))) === -1 || t3 === 0;
          }, k.isNaN = function() {
            return !this.s;
          }, k.isNegative = function() {
            return this.s < 0;
          }, k.isPositive = function() {
            return this.s > 0;
          }, k.isZero = function() {
            return !!this.c && this.c[0] == 0;
          }, k.minus = function(e3, t3) {
            var r3, n3, i3, s3, o2 = this, a2 = o2.s;
            if (t3 = (e3 = new j(e3, t3)).s, !a2 || !t3)
              return new j(NaN);
            if (a2 != t3)
              return e3.s = -t3, o2.plus(e3);
            var c2 = o2.e / 14, u2 = e3.e / 14, h2 = o2.c, d2 = e3.c;
            if (!c2 || !u2) {
              if (!h2 || !d2)
                return h2 ? (e3.s = -t3, e3) : new j(d2 ? o2 : NaN);
              if (!h2[0] || !d2[0])
                return d2[0] ? (e3.s = -t3, e3) : new j(h2[0] ? o2 : C == 3 ? -0 : 0);
            }
            if (c2 = p(c2), u2 = p(u2), h2 = h2.slice(), a2 = c2 - u2) {
              for ((s3 = a2 < 0) ? (a2 = -a2, i3 = h2) : (u2 = c2, i3 = d2), i3.reverse(), t3 = a2; t3--; i3.push(0))
                ;
              i3.reverse();
            } else
              for (n3 = (s3 = (a2 = h2.length) < (t3 = d2.length)) ? a2 : t3, a2 = t3 = 0; t3 < n3; t3++)
                if (h2[t3] != d2[t3]) {
                  s3 = h2[t3] < d2[t3];
                  break;
                }
            if (s3 && (i3 = h2, h2 = d2, d2 = i3, e3.s = -e3.s), (t3 = (n3 = d2.length) - (r3 = h2.length)) > 0)
              for (; t3--; h2[r3++] = 0)
                ;
            for (t3 = f - 1; n3 > a2; ) {
              if (h2[--n3] < d2[n3]) {
                for (r3 = n3; r3 && !h2[--r3]; h2[r3] = t3)
                  ;
                --h2[r3], h2[n3] += f;
              }
              h2[n3] -= d2[n3];
            }
            for (; h2[0] == 0; h2.splice(0, 1), --u2)
              ;
            return h2[0] ? q(e3, h2, u2) : (e3.s = C == 3 ? -1 : 1, e3.c = [e3.e = 0], e3);
          }, k.modulo = k.mod = function(e3, t3) {
            var n3, i3, s3 = this;
            return e3 = new j(e3, t3), !s3.c || !e3.s || e3.c && !e3.c[0] ? new j(NaN) : !e3.c || s3.c && !s3.c[0] ? new j(s3) : (O == 9 ? (i3 = e3.s, e3.s = 1, n3 = r2(s3, e3, 0, 3), e3.s = i3, n3.s *= i3) : n3 = r2(s3, e3, 0, O), (e3 = s3.minus(n3.times(e3))).c[0] || O != 1 || (e3.s = s3.s), e3);
          }, k.multipliedBy = k.times = function(e3, t3) {
            var r3, n3, i3, s3, o2, a2, c2, u2, h2, d2, l2, y2, g2, b2, m2 = this, v2 = m2.c, w2 = (e3 = new j(e3, t3)).c;
            if (!(v2 && w2 && v2[0] && w2[0]))
              return !m2.s || !e3.s || v2 && !v2[0] && !w2 || w2 && !w2[0] && !v2 ? e3.c = e3.e = e3.s = null : (e3.s *= m2.s, v2 && w2 ? (e3.c = [0], e3.e = 0) : e3.c = e3.e = null), e3;
            for (n3 = p(m2.e / 14) + p(e3.e / 14), e3.s *= m2.s, (c2 = v2.length) < (d2 = w2.length) && (g2 = v2, v2 = w2, w2 = g2, i3 = c2, c2 = d2, d2 = i3), i3 = c2 + d2, g2 = []; i3--; g2.push(0))
              ;
            for (b2 = f, 1e7, i3 = d2; --i3 >= 0; ) {
              for (r3 = 0, l2 = w2[i3] % 1e7, y2 = w2[i3] / 1e7 | 0, s3 = i3 + (o2 = c2); s3 > i3; )
                r3 = ((u2 = l2 * (u2 = v2[--o2] % 1e7) + (a2 = y2 * u2 + (h2 = v2[o2] / 1e7 | 0) * l2) % 1e7 * 1e7 + g2[s3] + r3) / b2 | 0) + (a2 / 1e7 | 0) + y2 * h2, g2[s3--] = u2 % b2;
              g2[s3] = r3;
            }
            return r3 ? ++n3 : g2.splice(0, 1), q(e3, g2, n3);
          }, k.negated = function() {
            var e3 = new j(this);
            return e3.s = -e3.s || null, e3;
          }, k.plus = function(e3, t3) {
            var r3, n3 = this, i3 = n3.s;
            if (t3 = (e3 = new j(e3, t3)).s, !i3 || !t3)
              return new j(NaN);
            if (i3 != t3)
              return e3.s = -t3, n3.minus(e3);
            var s3 = n3.e / 14, o2 = e3.e / 14, a2 = n3.c, c2 = e3.c;
            if (!s3 || !o2) {
              if (!a2 || !c2)
                return new j(i3 / 0);
              if (!a2[0] || !c2[0])
                return c2[0] ? e3 : new j(a2[0] ? n3 : 0 * i3);
            }
            if (s3 = p(s3), o2 = p(o2), a2 = a2.slice(), i3 = s3 - o2) {
              for (i3 > 0 ? (o2 = s3, r3 = c2) : (i3 = -i3, r3 = a2), r3.reverse(); i3--; r3.push(0))
                ;
              r3.reverse();
            }
            for ((i3 = a2.length) - (t3 = c2.length) < 0 && (r3 = c2, c2 = a2, a2 = r3, t3 = i3), i3 = 0; t3; )
              i3 = (a2[--t3] = a2[t3] + c2[t3] + i3) / f | 0, a2[t3] = f === a2[t3] ? 0 : a2[t3] % f;
            return i3 && (a2 = [i3].concat(a2), ++o2), q(e3, a2, o2);
          }, k.precision = k.sd = function(e3, t3) {
            var r3, n3, i3, s3 = this;
            if (e3 != null && e3 !== !!e3)
              return b(e3, 1, l), t3 == null ? t3 = C : b(t3, 0, 8), K(new j(s3), e3, t3);
            if (!(r3 = s3.c))
              return null;
            if (n3 = 14 * (i3 = r3.length - 1) + 1, i3 = r3[i3]) {
              for (; i3 % 10 == 0; i3 /= 10, n3--)
                ;
              for (i3 = r3[0]; i3 >= 10; i3 /= 10, n3++)
                ;
            }
            return e3 && s3.e + 1 > n3 && (n3 = s3.e + 1), n3;
          }, k.shiftedBy = function(e3) {
            return b(e3, -9007199254740991, 9007199254740991), this.times("1e" + e3);
          }, k.squareRoot = k.sqrt = function() {
            var e3, t3, n3, i3, s3, o2 = this, a2 = o2.c, c2 = o2.s, u2 = o2.e, h2 = T + 4, f2 = new j("0.5");
            if (c2 !== 1 || !a2 || !a2[0])
              return new j(!c2 || c2 < 0 && (!a2 || a2[0]) ? NaN : a2 ? o2 : 1 / 0);
            if ((c2 = Math.sqrt(+V(o2))) == 0 || c2 == 1 / 0 ? (((t3 = y(a2)).length + u2) % 2 == 0 && (t3 += "0"), c2 = Math.sqrt(+t3), u2 = p((u2 + 1) / 2) - (u2 < 0 || u2 % 2), n3 = new j(t3 = c2 == 1 / 0 ? "5e" + u2 : (t3 = c2.toExponential()).slice(0, t3.indexOf("e") + 1) + u2)) : n3 = new j(c2 + ""), n3.c[0]) {
              for ((c2 = (u2 = n3.e) + h2) < 3 && (c2 = 0); ; )
                if (s3 = n3, n3 = f2.times(s3.plus(r2(o2, s3, h2, 1))), y(s3.c).slice(0, c2) === (t3 = y(n3.c)).slice(0, c2)) {
                  if (n3.e < u2 && --c2, (t3 = t3.slice(c2 - 3, c2 + 1)) != "9999" && (i3 || t3 != "4999")) {
                    +t3 && (+t3.slice(1) || t3.charAt(0) != "5") || (K(n3, n3.e + T + 2, 1), e3 = !n3.times(n3).eq(o2));
                    break;
                  }
                  if (!i3 && (K(s3, s3.e + T + 2, 0), s3.times(s3).eq(o2))) {
                    n3 = s3;
                    break;
                  }
                  h2 += 4, c2 += 4, i3 = 1;
                }
            }
            return K(n3, n3.e + T + 1, C, e3);
          }, k.toExponential = function(e3, t3) {
            return e3 != null && (b(e3, 0, l), e3++), F(this, e3, t3, 1);
          }, k.toFixed = function(e3, t3) {
            return e3 != null && (b(e3, 0, l), e3 = e3 + this.e + 1), F(this, e3, t3);
          }, k.toFormat = function(e3, t3, r3) {
            var n3, i3 = this;
            if (r3 == null)
              e3 != null && t3 && typeof t3 == "object" ? (r3 = t3, t3 = null) : e3 && typeof e3 == "object" ? (r3 = e3, e3 = t3 = null) : r3 = L;
            else if (typeof r3 != "object")
              throw Error(u + "Argument not an object: " + r3);
            if (n3 = i3.toFixed(e3, t3), i3.c) {
              var s3, o2 = n3.split("."), a2 = +r3.groupSize, c2 = +r3.secondaryGroupSize, h2 = r3.groupSeparator || "", f2 = o2[0], d2 = o2[1], l2 = i3.s < 0, p2 = l2 ? f2.slice(1) : f2, y2 = p2.length;
              if (c2 && (s3 = a2, a2 = c2, c2 = s3, y2 -= s3), a2 > 0 && y2 > 0) {
                for (s3 = y2 % a2 || a2, f2 = p2.substr(0, s3); s3 < y2; s3 += a2)
                  f2 += h2 + p2.substr(s3, a2);
                c2 > 0 && (f2 += h2 + p2.slice(s3)), l2 && (f2 = "-" + f2);
              }
              n3 = d2 ? f2 + (r3.decimalSeparator || "") + ((c2 = +r3.fractionGroupSize) ? d2.replace(new RegExp("\\d{" + c2 + "}\\B", "g"), "$&" + (r3.fractionGroupSeparator || "")) : d2) : f2;
            }
            return (r3.prefix || "") + n3 + (r3.suffix || "");
          }, k.toFraction = function(e3) {
            var t3, n3, i3, s3, o2, a2, c2, h2, f2, l2, p2, g2, b2 = this, m2 = b2.c;
            if (e3 != null && (!(c2 = new j(e3)).isInteger() && (c2.c || c2.s !== 1) || c2.lt(R)))
              throw Error(u + "Argument " + (c2.isInteger() ? "out of range: " : "not an integer: ") + V(c2));
            if (!m2)
              return new j(b2);
            for (t3 = new j(R), f2 = n3 = new j(R), i3 = h2 = new j(R), g2 = y(m2), o2 = t3.e = g2.length - b2.e - 1, t3.c[0] = d[(a2 = o2 % 14) < 0 ? 14 + a2 : a2], e3 = !e3 || c2.comparedTo(t3) > 0 ? o2 > 0 ? t3 : f2 : c2, a2 = P, P = 1 / 0, c2 = new j(g2), h2.c[0] = 0; l2 = r2(c2, t3, 0, 1), (s3 = n3.plus(l2.times(i3))).comparedTo(e3) != 1; )
              n3 = i3, i3 = s3, f2 = h2.plus(l2.times(s3 = f2)), h2 = s3, t3 = c2.minus(l2.times(s3 = t3)), c2 = s3;
            return s3 = r2(e3.minus(n3), i3, 0, 1), h2 = h2.plus(s3.times(f2)), n3 = n3.plus(s3.times(i3)), h2.s = f2.s = b2.s, p2 = r2(f2, i3, o2 *= 2, C).minus(b2).abs().comparedTo(r2(h2, n3, o2, C).minus(b2).abs()) < 1 ? [f2, i3] : [h2, n3], P = a2, p2;
          }, k.toNumber = function() {
            return +V(this);
          }, k.toPrecision = function(e3, t3) {
            return e3 != null && b(e3, 1, l), F(this, e3, t3, 2);
          }, k.toString = function(e3) {
            var t3, r3 = this, i3 = r3.s, s3 = r3.e;
            return s3 === null ? i3 ? (t3 = "Infinity", i3 < 0 && (t3 = "-" + t3)) : t3 = "NaN" : (e3 == null ? t3 = s3 <= M || s3 >= x ? v(y(r3.c), s3) : w(y(r3.c), s3, "0") : e3 === 10 ? t3 = w(y((r3 = K(new j(r3), T + s3 + 1, C)).c), r3.e, "0") : (b(e3, 2, U.length, "Base"), t3 = n2(w(y(r3.c), s3, "0"), 10, e3, i3, true)), i3 < 0 && r3.c[0] && (t3 = "-" + t3)), t3;
          }, k.valueOf = k.toJSON = function() {
            return V(this);
          }, k._isBigNumber = true, t2 != null && j.set(t2), j;
        }()).default = s.BigNumber = s, (n = function() {
          return s;
        }.call(t, r, t, e)) === void 0 || (e.exports = n);
      }();
    }, function(e, t, r) {
      "use strict";
      const n = r(132), {encodeText: i, decodeText: s, concat: o} = r(133);
      function a(e2) {
        if (n.names[e2])
          return n.names[e2];
        if (n.codes[e2])
          return n.codes[e2];
        throw new Error("Unsupported encoding: " + e2);
      }
      (t = e.exports = function(e2, t2) {
        if (!t2)
          throw new Error("requires an encoded Uint8Array");
        const {name: r2, codeBuf: n2} = a(e2);
        return function(e3, t3) {
          a(e3).decode(s(t3));
        }(r2, t2), o([n2, t2], n2.length + t2.length);
      }).encode = function(e2, t2) {
        const r2 = a(e2), n2 = i(r2.encode(t2));
        return o([r2.codeBuf, n2], r2.codeBuf.length + n2.length);
      }, t.decode = function(e2) {
        e2 instanceof Uint8Array && (e2 = s(e2));
        const t2 = e2[0];
        return ["f", "F", "v", "V", "t", "T", "b", "B", "c", "C", "h", "k", "K"].includes(t2) && (e2 = e2.toLowerCase()), a(e2[0]).decode(e2.substring(1));
      }, t.isEncoded = function(e2) {
        if (e2 instanceof Uint8Array && (e2 = s(e2)), Object.prototype.toString.call(e2) !== "[object String]")
          return false;
        try {
          return a(e2[0]).name;
        } catch (t2) {
          return false;
        }
      }, t.encoding = a, t.encodingFromData = function(e2) {
        return e2 instanceof Uint8Array && (e2 = s(e2)), a(e2[0]);
      }, t.names = Object.freeze(n.names), t.codes = Object.freeze(n.codes);
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2, r2, n) {
        return t2.bytes = r2.bytes = 0, {type: e2, encode: t2, decode: r2, encodingLength: n};
      };
    }, function(e, t, r) {
      "use strict";
      var n = t, i = r(38), s = r(51), o = r(231);
      n.assert = s, n.toArray = o.toArray, n.zero2 = o.zero2, n.toHex = o.toHex, n.encode = o.encode, n.getNAF = function(e2, t2, r2) {
        var n2 = new Array(Math.max(e2.bitLength(), r2) + 1);
        n2.fill(0);
        for (var i2 = 1 << t2 + 1, s2 = e2.clone(), o2 = 0; o2 < n2.length; o2++) {
          var a, c = s2.andln(i2 - 1);
          s2.isOdd() ? (a = c > (i2 >> 1) - 1 ? (i2 >> 1) - c : c, s2.isubn(a)) : a = 0, n2[o2] = a, s2.iushrn(1);
        }
        return n2;
      }, n.getJSF = function(e2, t2) {
        var r2 = [[], []];
        e2 = e2.clone(), t2 = t2.clone();
        for (var n2 = 0, i2 = 0; e2.cmpn(-n2) > 0 || t2.cmpn(-i2) > 0; ) {
          var s2, o2, a, c = e2.andln(3) + n2 & 3, u = t2.andln(3) + i2 & 3;
          if (c === 3 && (c = -1), u === 3 && (u = -1), (1 & c) == 0)
            s2 = 0;
          else
            s2 = (a = e2.andln(7) + n2 & 7) !== 3 && a !== 5 || u !== 2 ? c : -c;
          if (r2[0].push(s2), (1 & u) == 0)
            o2 = 0;
          else
            o2 = (a = t2.andln(7) + i2 & 7) !== 3 && a !== 5 || c !== 2 ? u : -u;
          r2[1].push(o2), 2 * n2 === s2 + 1 && (n2 = 1 - n2), 2 * i2 === o2 + 1 && (i2 = 1 - i2), e2.iushrn(1), t2.iushrn(1);
        }
        return r2;
      }, n.cachedProperty = function(e2, t2, r2) {
        var n2 = "_" + t2;
        e2.prototype[t2] = function() {
          return this[n2] !== void 0 ? this[n2] : this[n2] = r2.call(this);
        };
      }, n.parseBytes = function(e2) {
        return typeof e2 == "string" ? n.toArray(e2, "hex") : e2;
      }, n.intFromLE = function(e2) {
        return new i(e2, "hex", "le");
      };
    }, function(e, t, r) {
      "use strict";
      const {Buffer: n} = r(3), i = Symbol.for("BufferList");
      function s(e2) {
        if (!(this instanceof s))
          return new s(e2);
        s._init.call(this, e2);
      }
      s._init = function(e2) {
        Object.defineProperty(this, i, {value: true}), this._bufs = [], this.length = 0, e2 && this.append(e2);
      }, s.prototype._new = function(e2) {
        return new s(e2);
      }, s.prototype._offset = function(e2) {
        if (e2 === 0)
          return [0, 0];
        let t2 = 0;
        for (let r2 = 0; r2 < this._bufs.length; r2++) {
          const n2 = t2 + this._bufs[r2].length;
          if (e2 < n2 || r2 === this._bufs.length - 1)
            return [r2, e2 - t2];
          t2 = n2;
        }
      }, s.prototype._reverseOffset = function(e2) {
        const t2 = e2[0];
        let r2 = e2[1];
        for (let n2 = 0; n2 < t2; n2++)
          r2 += this._bufs[n2].length;
        return r2;
      }, s.prototype.get = function(e2) {
        if (e2 > this.length || e2 < 0)
          return;
        const t2 = this._offset(e2);
        return this._bufs[t2[0]][t2[1]];
      }, s.prototype.slice = function(e2, t2) {
        return typeof e2 == "number" && e2 < 0 && (e2 += this.length), typeof t2 == "number" && t2 < 0 && (t2 += this.length), this.copy(null, 0, e2, t2);
      }, s.prototype.copy = function(e2, t2, r2, i2) {
        if ((typeof r2 != "number" || r2 < 0) && (r2 = 0), (typeof i2 != "number" || i2 > this.length) && (i2 = this.length), r2 >= this.length)
          return e2 || n.alloc(0);
        if (i2 <= 0)
          return e2 || n.alloc(0);
        const s2 = !!e2, o = this._offset(r2), a = i2 - r2;
        let c = a, u = s2 && t2 || 0, h = o[1];
        if (r2 === 0 && i2 === this.length) {
          if (!s2)
            return this._bufs.length === 1 ? this._bufs[0] : n.concat(this._bufs, this.length);
          for (let t3 = 0; t3 < this._bufs.length; t3++)
            this._bufs[t3].copy(e2, u), u += this._bufs[t3].length;
          return e2;
        }
        if (c <= this._bufs[o[0]].length - h)
          return s2 ? this._bufs[o[0]].copy(e2, t2, h, h + c) : this._bufs[o[0]].slice(h, h + c);
        s2 || (e2 = n.allocUnsafe(a));
        for (let n2 = o[0]; n2 < this._bufs.length; n2++) {
          const t3 = this._bufs[n2].length - h;
          if (!(c > t3)) {
            this._bufs[n2].copy(e2, u, h, h + c), u += t3;
            break;
          }
          this._bufs[n2].copy(e2, u, h), u += t3, c -= t3, h && (h = 0);
        }
        return e2.length > u ? e2.slice(0, u) : e2;
      }, s.prototype.shallowSlice = function(e2, t2) {
        if (e2 = e2 || 0, t2 = typeof t2 != "number" ? this.length : t2, e2 < 0 && (e2 += this.length), t2 < 0 && (t2 += this.length), e2 === t2)
          return this._new();
        const r2 = this._offset(e2), n2 = this._offset(t2), i2 = this._bufs.slice(r2[0], n2[0] + 1);
        return n2[1] === 0 ? i2.pop() : i2[i2.length - 1] = i2[i2.length - 1].slice(0, n2[1]), r2[1] !== 0 && (i2[0] = i2[0].slice(r2[1])), this._new(i2);
      }, s.prototype.toString = function(e2, t2, r2) {
        return this.slice(t2, r2).toString(e2);
      }, s.prototype.consume = function(e2) {
        if (e2 = Math.trunc(e2), Number.isNaN(e2) || e2 <= 0)
          return this;
        for (; this._bufs.length; ) {
          if (!(e2 >= this._bufs[0].length)) {
            this._bufs[0] = this._bufs[0].slice(e2), this.length -= e2;
            break;
          }
          e2 -= this._bufs[0].length, this.length -= this._bufs[0].length, this._bufs.shift();
        }
        return this;
      }, s.prototype.duplicate = function() {
        const e2 = this._new();
        for (let t2 = 0; t2 < this._bufs.length; t2++)
          e2.append(this._bufs[t2]);
        return e2;
      }, s.prototype.append = function(e2) {
        if (e2 == null)
          return this;
        if (e2.buffer)
          this._appendBuffer(n.from(e2.buffer, e2.byteOffset, e2.byteLength));
        else if (Array.isArray(e2))
          for (let t2 = 0; t2 < e2.length; t2++)
            this.append(e2[t2]);
        else if (this._isBufferList(e2))
          for (let t2 = 0; t2 < e2._bufs.length; t2++)
            this.append(e2._bufs[t2]);
        else
          typeof e2 == "number" && (e2 = e2.toString()), this._appendBuffer(n.from(e2));
        return this;
      }, s.prototype._appendBuffer = function(e2) {
        this._bufs.push(e2), this.length += e2.length;
      }, s.prototype.indexOf = function(e2, t2, r2) {
        if (r2 === void 0 && typeof t2 == "string" && (r2 = t2, t2 = void 0), typeof e2 == "function" || Array.isArray(e2))
          throw new TypeError('The "value" argument must be one of type string, Buffer, BufferList, or Uint8Array.');
        if (typeof e2 == "number" ? e2 = n.from([e2]) : typeof e2 == "string" ? e2 = n.from(e2, r2) : this._isBufferList(e2) ? e2 = e2.slice() : Array.isArray(e2.buffer) ? e2 = n.from(e2.buffer, e2.byteOffset, e2.byteLength) : n.isBuffer(e2) || (e2 = n.from(e2)), t2 = Number(t2 || 0), isNaN(t2) && (t2 = 0), t2 < 0 && (t2 = this.length + t2), t2 < 0 && (t2 = 0), e2.length === 0)
          return t2 > this.length ? this.length : t2;
        const i2 = this._offset(t2);
        let s2 = i2[0], o = i2[1];
        for (; s2 < this._bufs.length; s2++) {
          const t3 = this._bufs[s2];
          for (; o < t3.length; ) {
            if (t3.length - o >= e2.length) {
              const r3 = t3.indexOf(e2, o);
              if (r3 !== -1)
                return this._reverseOffset([s2, r3]);
              o = t3.length - e2.length + 1;
            } else {
              const t4 = this._reverseOffset([s2, o]);
              if (this._match(t4, e2))
                return t4;
              o++;
            }
          }
          o = 0;
        }
        return -1;
      }, s.prototype._match = function(e2, t2) {
        if (this.length - e2 < t2.length)
          return false;
        for (let r2 = 0; r2 < t2.length; r2++)
          if (this.get(e2 + r2) !== t2[r2])
            return false;
        return true;
      }, function() {
        const e2 = {readDoubleBE: 8, readDoubleLE: 8, readFloatBE: 4, readFloatLE: 4, readInt32BE: 4, readInt32LE: 4, readUInt32BE: 4, readUInt32LE: 4, readInt16BE: 2, readInt16LE: 2, readUInt16BE: 2, readUInt16LE: 2, readInt8: 1, readUInt8: 1, readIntBE: null, readIntLE: null, readUIntBE: null, readUIntLE: null};
        for (const t2 in e2)
          !function(t3) {
            s.prototype[t3] = e2[t3] === null ? function(e3, r2) {
              return this.slice(e3, e3 + r2)[t3](0, r2);
            } : function(r2) {
              return this.slice(r2, r2 + e2[t3])[t3](0);
            };
          }(t2);
      }(), s.prototype._isBufferList = function(e2) {
        return e2 instanceof s || s.isBufferList(e2);
      }, s.isBufferList = function(e2) {
        return e2 != null && e2[i];
      }, e.exports = s;
    }, function(e, t, r) {
      "use strict";
      t.encode = r(818), t.decode = r(822), t.varintEncode = r(324), t.varintDecode = r(326), t.int32BEEncode = r(823), t.int32BEDecode = r(824);
    }, function(e, t, r) {
      "use strict";
      var n = r(51), i = r(18);
      function s(e2, t2) {
        return (64512 & e2.charCodeAt(t2)) == 55296 && (!(t2 < 0 || t2 + 1 >= e2.length) && (64512 & e2.charCodeAt(t2 + 1)) == 56320);
      }
      function o(e2) {
        return (e2 >>> 24 | e2 >>> 8 & 65280 | e2 << 8 & 16711680 | (255 & e2) << 24) >>> 0;
      }
      function a(e2) {
        return e2.length === 1 ? "0" + e2 : e2;
      }
      function c(e2) {
        return e2.length === 7 ? "0" + e2 : e2.length === 6 ? "00" + e2 : e2.length === 5 ? "000" + e2 : e2.length === 4 ? "0000" + e2 : e2.length === 3 ? "00000" + e2 : e2.length === 2 ? "000000" + e2 : e2.length === 1 ? "0000000" + e2 : e2;
      }
      t.inherits = i, t.toArray = function(e2, t2) {
        if (Array.isArray(e2))
          return e2.slice();
        if (!e2)
          return [];
        var r2 = [];
        if (typeof e2 == "string")
          if (t2) {
            if (t2 === "hex")
              for ((e2 = e2.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (e2 = "0" + e2), i2 = 0; i2 < e2.length; i2 += 2)
                r2.push(parseInt(e2[i2] + e2[i2 + 1], 16));
          } else
            for (var n2 = 0, i2 = 0; i2 < e2.length; i2++) {
              var o2 = e2.charCodeAt(i2);
              o2 < 128 ? r2[n2++] = o2 : o2 < 2048 ? (r2[n2++] = o2 >> 6 | 192, r2[n2++] = 63 & o2 | 128) : s(e2, i2) ? (o2 = 65536 + ((1023 & o2) << 10) + (1023 & e2.charCodeAt(++i2)), r2[n2++] = o2 >> 18 | 240, r2[n2++] = o2 >> 12 & 63 | 128, r2[n2++] = o2 >> 6 & 63 | 128, r2[n2++] = 63 & o2 | 128) : (r2[n2++] = o2 >> 12 | 224, r2[n2++] = o2 >> 6 & 63 | 128, r2[n2++] = 63 & o2 | 128);
            }
        else
          for (i2 = 0; i2 < e2.length; i2++)
            r2[i2] = 0 | e2[i2];
        return r2;
      }, t.toHex = function(e2) {
        for (var t2 = "", r2 = 0; r2 < e2.length; r2++)
          t2 += a(e2[r2].toString(16));
        return t2;
      }, t.htonl = o, t.toHex32 = function(e2, t2) {
        for (var r2 = "", n2 = 0; n2 < e2.length; n2++) {
          var i2 = e2[n2];
          t2 === "little" && (i2 = o(i2)), r2 += c(i2.toString(16));
        }
        return r2;
      }, t.zero2 = a, t.zero8 = c, t.join32 = function(e2, t2, r2, i2) {
        var s2 = r2 - t2;
        n(s2 % 4 == 0);
        for (var o2 = new Array(s2 / 4), a2 = 0, c2 = t2; a2 < o2.length; a2++, c2 += 4) {
          var u;
          u = i2 === "big" ? e2[c2] << 24 | e2[c2 + 1] << 16 | e2[c2 + 2] << 8 | e2[c2 + 3] : e2[c2 + 3] << 24 | e2[c2 + 2] << 16 | e2[c2 + 1] << 8 | e2[c2], o2[a2] = u >>> 0;
        }
        return o2;
      }, t.split32 = function(e2, t2) {
        for (var r2 = new Array(4 * e2.length), n2 = 0, i2 = 0; n2 < e2.length; n2++, i2 += 4) {
          var s2 = e2[n2];
          t2 === "big" ? (r2[i2] = s2 >>> 24, r2[i2 + 1] = s2 >>> 16 & 255, r2[i2 + 2] = s2 >>> 8 & 255, r2[i2 + 3] = 255 & s2) : (r2[i2 + 3] = s2 >>> 24, r2[i2 + 2] = s2 >>> 16 & 255, r2[i2 + 1] = s2 >>> 8 & 255, r2[i2] = 255 & s2);
        }
        return r2;
      }, t.rotr32 = function(e2, t2) {
        return e2 >>> t2 | e2 << 32 - t2;
      }, t.rotl32 = function(e2, t2) {
        return e2 << t2 | e2 >>> 32 - t2;
      }, t.sum32 = function(e2, t2) {
        return e2 + t2 >>> 0;
      }, t.sum32_3 = function(e2, t2, r2) {
        return e2 + t2 + r2 >>> 0;
      }, t.sum32_4 = function(e2, t2, r2, n2) {
        return e2 + t2 + r2 + n2 >>> 0;
      }, t.sum32_5 = function(e2, t2, r2, n2, i2) {
        return e2 + t2 + r2 + n2 + i2 >>> 0;
      }, t.sum64 = function(e2, t2, r2, n2) {
        var i2 = e2[t2], s2 = n2 + e2[t2 + 1] >>> 0, o2 = (s2 < n2 ? 1 : 0) + r2 + i2;
        e2[t2] = o2 >>> 0, e2[t2 + 1] = s2;
      }, t.sum64_hi = function(e2, t2, r2, n2) {
        return (t2 + n2 >>> 0 < t2 ? 1 : 0) + e2 + r2 >>> 0;
      }, t.sum64_lo = function(e2, t2, r2, n2) {
        return t2 + n2 >>> 0;
      }, t.sum64_4_hi = function(e2, t2, r2, n2, i2, s2, o2, a2) {
        var c2 = 0, u = t2;
        return c2 += (u = u + n2 >>> 0) < t2 ? 1 : 0, c2 += (u = u + s2 >>> 0) < s2 ? 1 : 0, e2 + r2 + i2 + o2 + (c2 += (u = u + a2 >>> 0) < a2 ? 1 : 0) >>> 0;
      }, t.sum64_4_lo = function(e2, t2, r2, n2, i2, s2, o2, a2) {
        return t2 + n2 + s2 + a2 >>> 0;
      }, t.sum64_5_hi = function(e2, t2, r2, n2, i2, s2, o2, a2, c2, u) {
        var h = 0, f = t2;
        return h += (f = f + n2 >>> 0) < t2 ? 1 : 0, h += (f = f + s2 >>> 0) < s2 ? 1 : 0, h += (f = f + a2 >>> 0) < a2 ? 1 : 0, e2 + r2 + i2 + o2 + c2 + (h += (f = f + u >>> 0) < u ? 1 : 0) >>> 0;
      }, t.sum64_5_lo = function(e2, t2, r2, n2, i2, s2, o2, a2, c2, u) {
        return t2 + n2 + s2 + a2 + u >>> 0;
      }, t.rotr64_hi = function(e2, t2, r2) {
        return (t2 << 32 - r2 | e2 >>> r2) >>> 0;
      }, t.rotr64_lo = function(e2, t2, r2) {
        return (e2 << 32 - r2 | t2 >>> r2) >>> 0;
      }, t.shr64_hi = function(e2, t2, r2) {
        return e2 >>> r2;
      }, t.shr64_lo = function(e2, t2, r2) {
        return (e2 << 32 - r2 | t2 >>> r2) >>> 0;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(4), s = r(666), o = r(40), a = (e2) => {
        if (e2 instanceof Uint8Array)
          return {cid: new i(e2), toResolve: []};
        if (i.isCID(e2))
          return {cid: e2, toResolve: []};
        if (typeof e2 == "string") {
          e2.indexOf("/ipfs/") === 0 && (e2 = e2.substring(6));
          const t2 = ((e3 = "") => (e3.trim().match(/([^\\^/]|\\\/)+/g) || []).filter(Boolean))(e2);
          return {cid: new i(t2[0]), toResolve: t2.slice(1)};
        }
        throw n(new Error("Unknown path type " + e2), "ERR_BAD_PATH");
      }, c = async function* (e2, t2, r2) {
        let {cid: i2, toResolve: o2} = a(e2), c2 = i2.toBaseEncodedString(), u2 = c2;
        const h = o2.length;
        for (; ; ) {
          const a2 = await s(i2, c2, u2, o2, h, t2, r2);
          if (!a2.entry && !a2.next)
            throw n(new Error("Could not resolve " + e2), "ERR_NOT_FOUND");
          if (a2.entry && (yield a2.entry), !a2.next)
            return;
          o2 = a2.next.toResolve, i2 = a2.next.cid, c2 = a2.next.name, u2 = a2.next.path;
        }
      }, u = (e2, t2, r2) => o(c(e2, t2, r2));
      e.exports = u, e.exports.path = c, e.exports.recursive = async function* (e2, t2, r2) {
        const n2 = await u(e2, t2, r2);
        if (yield n2, n2.unixfs && n2.unixfs.type.includes("dir"))
          for await (const i2 of async function* e3(t3, r3) {
            for await (const n3 of t3.content(r3))
              if (yield n3, n3.unixfs.type.includes("dir"))
                for await (const t4 of e3(n3, r3))
                  yield t4;
          }(n2, r2))
            yield i2;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = {encode: r(420), decode: r(421), encodingLength: r(422)};
    }, function(e, t, r) {
      "use strict";
      (function(e2) {
        !function(e3, t2) {
          function n(e4, t3) {
            if (!e4)
              throw new Error(t3 || "Assertion failed");
          }
          function i(e4, t3) {
            e4.super_ = t3;
            var r2 = function() {
            };
            r2.prototype = t3.prototype, e4.prototype = new r2(), e4.prototype.constructor = e4;
          }
          function s(e4, t3, r2) {
            if (s.isBN(e4))
              return e4;
            this.negative = 0, this.words = null, this.length = 0, this.red = null, e4 !== null && (t3 !== "le" && t3 !== "be" || (r2 = t3, t3 = 10), this._init(e4 || 0, t3 || 10, r2 || "be"));
          }
          var o;
          typeof e3 == "object" ? e3.exports = s : (void 0).BN = s, s.BN = s, s.wordSize = 26;
          try {
            o = r(467).Buffer;
          } catch (A) {
          }
          function a(e4, t3, r2) {
            for (var n2 = 0, i2 = Math.min(e4.length, r2), s2 = t3; s2 < i2; s2++) {
              var o2 = e4.charCodeAt(s2) - 48;
              n2 <<= 4, n2 |= o2 >= 49 && o2 <= 54 ? o2 - 49 + 10 : o2 >= 17 && o2 <= 22 ? o2 - 17 + 10 : 15 & o2;
            }
            return n2;
          }
          function c(e4, t3, r2, n2) {
            for (var i2 = 0, s2 = Math.min(e4.length, r2), o2 = t3; o2 < s2; o2++) {
              var a2 = e4.charCodeAt(o2) - 48;
              i2 *= n2, i2 += a2 >= 49 ? a2 - 49 + 10 : a2 >= 17 ? a2 - 17 + 10 : a2;
            }
            return i2;
          }
          s.isBN = function(e4) {
            return e4 instanceof s || e4 !== null && typeof e4 == "object" && e4.constructor.wordSize === s.wordSize && Array.isArray(e4.words);
          }, s.max = function(e4, t3) {
            return e4.cmp(t3) > 0 ? e4 : t3;
          }, s.min = function(e4, t3) {
            return e4.cmp(t3) < 0 ? e4 : t3;
          }, s.prototype._init = function(e4, t3, r2) {
            if (typeof e4 == "number")
              return this._initNumber(e4, t3, r2);
            if (typeof e4 == "object")
              return this._initArray(e4, t3, r2);
            t3 === "hex" && (t3 = 16), n(t3 === (0 | t3) && t3 >= 2 && t3 <= 36);
            var i2 = 0;
            (e4 = e4.toString().replace(/\s+/g, ""))[0] === "-" && i2++, t3 === 16 ? this._parseHex(e4, i2) : this._parseBase(e4, t3, i2), e4[0] === "-" && (this.negative = 1), this.strip(), r2 === "le" && this._initArray(this.toArray(), t3, r2);
          }, s.prototype._initNumber = function(e4, t3, r2) {
            e4 < 0 && (this.negative = 1, e4 = -e4), e4 < 67108864 ? (this.words = [67108863 & e4], this.length = 1) : e4 < 4503599627370496 ? (this.words = [67108863 & e4, e4 / 67108864 & 67108863], this.length = 2) : (n(e4 < 9007199254740992), this.words = [67108863 & e4, e4 / 67108864 & 67108863, 1], this.length = 3), r2 === "le" && this._initArray(this.toArray(), t3, r2);
          }, s.prototype._initArray = function(e4, t3, r2) {
            if (n(typeof e4.length == "number"), e4.length <= 0)
              return this.words = [0], this.length = 1, this;
            this.length = Math.ceil(e4.length / 3), this.words = new Array(this.length);
            for (var i2 = 0; i2 < this.length; i2++)
              this.words[i2] = 0;
            var s2, o2, a2 = 0;
            if (r2 === "be")
              for (i2 = e4.length - 1, s2 = 0; i2 >= 0; i2 -= 3)
                o2 = e4[i2] | e4[i2 - 1] << 8 | e4[i2 - 2] << 16, this.words[s2] |= o2 << a2 & 67108863, this.words[s2 + 1] = o2 >>> 26 - a2 & 67108863, (a2 += 24) >= 26 && (a2 -= 26, s2++);
            else if (r2 === "le")
              for (i2 = 0, s2 = 0; i2 < e4.length; i2 += 3)
                o2 = e4[i2] | e4[i2 + 1] << 8 | e4[i2 + 2] << 16, this.words[s2] |= o2 << a2 & 67108863, this.words[s2 + 1] = o2 >>> 26 - a2 & 67108863, (a2 += 24) >= 26 && (a2 -= 26, s2++);
            return this.strip();
          }, s.prototype._parseHex = function(e4, t3) {
            this.length = Math.ceil((e4.length - t3) / 6), this.words = new Array(this.length);
            for (var r2 = 0; r2 < this.length; r2++)
              this.words[r2] = 0;
            var n2, i2, s2 = 0;
            for (r2 = e4.length - 6, n2 = 0; r2 >= t3; r2 -= 6)
              i2 = a(e4, r2, r2 + 6), this.words[n2] |= i2 << s2 & 67108863, this.words[n2 + 1] |= i2 >>> 26 - s2 & 4194303, (s2 += 24) >= 26 && (s2 -= 26, n2++);
            r2 + 6 !== t3 && (i2 = a(e4, t3, r2 + 6), this.words[n2] |= i2 << s2 & 67108863, this.words[n2 + 1] |= i2 >>> 26 - s2 & 4194303), this.strip();
          }, s.prototype._parseBase = function(e4, t3, r2) {
            this.words = [0], this.length = 1;
            for (var n2 = 0, i2 = 1; i2 <= 67108863; i2 *= t3)
              n2++;
            n2--, i2 = i2 / t3 | 0;
            for (var s2 = e4.length - r2, o2 = s2 % n2, a2 = Math.min(s2, s2 - o2) + r2, u2 = 0, h2 = r2; h2 < a2; h2 += n2)
              u2 = c(e4, h2, h2 + n2, t3), this.imuln(i2), this.words[0] + u2 < 67108864 ? this.words[0] += u2 : this._iaddn(u2);
            if (o2 !== 0) {
              var f2 = 1;
              for (u2 = c(e4, h2, e4.length, t3), h2 = 0; h2 < o2; h2++)
                f2 *= t3;
              this.imuln(f2), this.words[0] + u2 < 67108864 ? this.words[0] += u2 : this._iaddn(u2);
            }
          }, s.prototype.copy = function(e4) {
            e4.words = new Array(this.length);
            for (var t3 = 0; t3 < this.length; t3++)
              e4.words[t3] = this.words[t3];
            e4.length = this.length, e4.negative = this.negative, e4.red = this.red;
          }, s.prototype.clone = function() {
            var e4 = new s(null);
            return this.copy(e4), e4;
          }, s.prototype._expand = function(e4) {
            for (; this.length < e4; )
              this.words[this.length++] = 0;
            return this;
          }, s.prototype.strip = function() {
            for (; this.length > 1 && this.words[this.length - 1] === 0; )
              this.length--;
            return this._normSign();
          }, s.prototype._normSign = function() {
            return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
          }, s.prototype.inspect = function() {
            return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
          };
          var u = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], h = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], f = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
          function d(e4, t3, r2) {
            r2.negative = t3.negative ^ e4.negative;
            var n2 = e4.length + t3.length | 0;
            r2.length = n2, n2 = n2 - 1 | 0;
            var i2 = 0 | e4.words[0], s2 = 0 | t3.words[0], o2 = i2 * s2, a2 = 67108863 & o2, c2 = o2 / 67108864 | 0;
            r2.words[0] = a2;
            for (var u2 = 1; u2 < n2; u2++) {
              for (var h2 = c2 >>> 26, f2 = 67108863 & c2, d2 = Math.min(u2, t3.length - 1), l2 = Math.max(0, u2 - e4.length + 1); l2 <= d2; l2++) {
                var p2 = u2 - l2 | 0;
                h2 += (o2 = (i2 = 0 | e4.words[p2]) * (s2 = 0 | t3.words[l2]) + f2) / 67108864 | 0, f2 = 67108863 & o2;
              }
              r2.words[u2] = 0 | f2, c2 = 0 | h2;
            }
            return c2 !== 0 ? r2.words[u2] = 0 | c2 : r2.length--, r2.strip();
          }
          s.prototype.toString = function(e4, t3) {
            var r2;
            if (t3 = 0 | t3 || 1, (e4 = e4 || 10) === 16 || e4 === "hex") {
              r2 = "";
              for (var i2 = 0, s2 = 0, o2 = 0; o2 < this.length; o2++) {
                var a2 = this.words[o2], c2 = (16777215 & (a2 << i2 | s2)).toString(16);
                r2 = (s2 = a2 >>> 24 - i2 & 16777215) !== 0 || o2 !== this.length - 1 ? u[6 - c2.length] + c2 + r2 : c2 + r2, (i2 += 2) >= 26 && (i2 -= 26, o2--);
              }
              for (s2 !== 0 && (r2 = s2.toString(16) + r2); r2.length % t3 != 0; )
                r2 = "0" + r2;
              return this.negative !== 0 && (r2 = "-" + r2), r2;
            }
            if (e4 === (0 | e4) && e4 >= 2 && e4 <= 36) {
              var d2 = h[e4], l2 = f[e4];
              r2 = "";
              var p2 = this.clone();
              for (p2.negative = 0; !p2.isZero(); ) {
                var y2 = p2.modn(l2).toString(e4);
                r2 = (p2 = p2.idivn(l2)).isZero() ? y2 + r2 : u[d2 - y2.length] + y2 + r2;
              }
              for (this.isZero() && (r2 = "0" + r2); r2.length % t3 != 0; )
                r2 = "0" + r2;
              return this.negative !== 0 && (r2 = "-" + r2), r2;
            }
            n(false, "Base should be between 2 and 36");
          }, s.prototype.toNumber = function() {
            var e4 = this.words[0];
            return this.length === 2 ? e4 += 67108864 * this.words[1] : this.length === 3 && this.words[2] === 1 ? e4 += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && n(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -e4 : e4;
          }, s.prototype.toJSON = function() {
            return this.toString(16);
          }, s.prototype.toBuffer = function(e4, t3) {
            return n(o !== void 0), this.toArrayLike(o, e4, t3);
          }, s.prototype.toArray = function(e4, t3) {
            return this.toArrayLike(Array, e4, t3);
          }, s.prototype.toArrayLike = function(e4, t3, r2) {
            var i2 = this.byteLength(), s2 = r2 || Math.max(1, i2);
            n(i2 <= s2, "byte array longer than desired length"), n(s2 > 0, "Requested array length <= 0"), this.strip();
            var o2, a2, c2 = t3 === "le", u2 = new e4(s2), h2 = this.clone();
            if (c2) {
              for (a2 = 0; !h2.isZero(); a2++)
                o2 = h2.andln(255), h2.iushrn(8), u2[a2] = o2;
              for (; a2 < s2; a2++)
                u2[a2] = 0;
            } else {
              for (a2 = 0; a2 < s2 - i2; a2++)
                u2[a2] = 0;
              for (a2 = 0; !h2.isZero(); a2++)
                o2 = h2.andln(255), h2.iushrn(8), u2[s2 - a2 - 1] = o2;
            }
            return u2;
          }, Math.clz32 ? s.prototype._countBits = function(e4) {
            return 32 - Math.clz32(e4);
          } : s.prototype._countBits = function(e4) {
            var t3 = e4, r2 = 0;
            return t3 >= 4096 && (r2 += 13, t3 >>>= 13), t3 >= 64 && (r2 += 7, t3 >>>= 7), t3 >= 8 && (r2 += 4, t3 >>>= 4), t3 >= 2 && (r2 += 2, t3 >>>= 2), r2 + t3;
          }, s.prototype._zeroBits = function(e4) {
            if (e4 === 0)
              return 26;
            var t3 = e4, r2 = 0;
            return (8191 & t3) == 0 && (r2 += 13, t3 >>>= 13), (127 & t3) == 0 && (r2 += 7, t3 >>>= 7), (15 & t3) == 0 && (r2 += 4, t3 >>>= 4), (3 & t3) == 0 && (r2 += 2, t3 >>>= 2), (1 & t3) == 0 && r2++, r2;
          }, s.prototype.bitLength = function() {
            var e4 = this.words[this.length - 1], t3 = this._countBits(e4);
            return 26 * (this.length - 1) + t3;
          }, s.prototype.zeroBits = function() {
            if (this.isZero())
              return 0;
            for (var e4 = 0, t3 = 0; t3 < this.length; t3++) {
              var r2 = this._zeroBits(this.words[t3]);
              if (e4 += r2, r2 !== 26)
                break;
            }
            return e4;
          }, s.prototype.byteLength = function() {
            return Math.ceil(this.bitLength() / 8);
          }, s.prototype.toTwos = function(e4) {
            return this.negative !== 0 ? this.abs().inotn(e4).iaddn(1) : this.clone();
          }, s.prototype.fromTwos = function(e4) {
            return this.testn(e4 - 1) ? this.notn(e4).iaddn(1).ineg() : this.clone();
          }, s.prototype.isNeg = function() {
            return this.negative !== 0;
          }, s.prototype.neg = function() {
            return this.clone().ineg();
          }, s.prototype.ineg = function() {
            return this.isZero() || (this.negative ^= 1), this;
          }, s.prototype.iuor = function(e4) {
            for (; this.length < e4.length; )
              this.words[this.length++] = 0;
            for (var t3 = 0; t3 < e4.length; t3++)
              this.words[t3] = this.words[t3] | e4.words[t3];
            return this.strip();
          }, s.prototype.ior = function(e4) {
            return n((this.negative | e4.negative) == 0), this.iuor(e4);
          }, s.prototype.or = function(e4) {
            return this.length > e4.length ? this.clone().ior(e4) : e4.clone().ior(this);
          }, s.prototype.uor = function(e4) {
            return this.length > e4.length ? this.clone().iuor(e4) : e4.clone().iuor(this);
          }, s.prototype.iuand = function(e4) {
            var t3;
            t3 = this.length > e4.length ? e4 : this;
            for (var r2 = 0; r2 < t3.length; r2++)
              this.words[r2] = this.words[r2] & e4.words[r2];
            return this.length = t3.length, this.strip();
          }, s.prototype.iand = function(e4) {
            return n((this.negative | e4.negative) == 0), this.iuand(e4);
          }, s.prototype.and = function(e4) {
            return this.length > e4.length ? this.clone().iand(e4) : e4.clone().iand(this);
          }, s.prototype.uand = function(e4) {
            return this.length > e4.length ? this.clone().iuand(e4) : e4.clone().iuand(this);
          }, s.prototype.iuxor = function(e4) {
            var t3, r2;
            this.length > e4.length ? (t3 = this, r2 = e4) : (t3 = e4, r2 = this);
            for (var n2 = 0; n2 < r2.length; n2++)
              this.words[n2] = t3.words[n2] ^ r2.words[n2];
            if (this !== t3)
              for (; n2 < t3.length; n2++)
                this.words[n2] = t3.words[n2];
            return this.length = t3.length, this.strip();
          }, s.prototype.ixor = function(e4) {
            return n((this.negative | e4.negative) == 0), this.iuxor(e4);
          }, s.prototype.xor = function(e4) {
            return this.length > e4.length ? this.clone().ixor(e4) : e4.clone().ixor(this);
          }, s.prototype.uxor = function(e4) {
            return this.length > e4.length ? this.clone().iuxor(e4) : e4.clone().iuxor(this);
          }, s.prototype.inotn = function(e4) {
            n(typeof e4 == "number" && e4 >= 0);
            var t3 = 0 | Math.ceil(e4 / 26), r2 = e4 % 26;
            this._expand(t3), r2 > 0 && t3--;
            for (var i2 = 0; i2 < t3; i2++)
              this.words[i2] = 67108863 & ~this.words[i2];
            return r2 > 0 && (this.words[i2] = ~this.words[i2] & 67108863 >> 26 - r2), this.strip();
          }, s.prototype.notn = function(e4) {
            return this.clone().inotn(e4);
          }, s.prototype.setn = function(e4, t3) {
            n(typeof e4 == "number" && e4 >= 0);
            var r2 = e4 / 26 | 0, i2 = e4 % 26;
            return this._expand(r2 + 1), this.words[r2] = t3 ? this.words[r2] | 1 << i2 : this.words[r2] & ~(1 << i2), this.strip();
          }, s.prototype.iadd = function(e4) {
            var t3, r2, n2;
            if (this.negative !== 0 && e4.negative === 0)
              return this.negative = 0, t3 = this.isub(e4), this.negative ^= 1, this._normSign();
            if (this.negative === 0 && e4.negative !== 0)
              return e4.negative = 0, t3 = this.isub(e4), e4.negative = 1, t3._normSign();
            this.length > e4.length ? (r2 = this, n2 = e4) : (r2 = e4, n2 = this);
            for (var i2 = 0, s2 = 0; s2 < n2.length; s2++)
              t3 = (0 | r2.words[s2]) + (0 | n2.words[s2]) + i2, this.words[s2] = 67108863 & t3, i2 = t3 >>> 26;
            for (; i2 !== 0 && s2 < r2.length; s2++)
              t3 = (0 | r2.words[s2]) + i2, this.words[s2] = 67108863 & t3, i2 = t3 >>> 26;
            if (this.length = r2.length, i2 !== 0)
              this.words[this.length] = i2, this.length++;
            else if (r2 !== this)
              for (; s2 < r2.length; s2++)
                this.words[s2] = r2.words[s2];
            return this;
          }, s.prototype.add = function(e4) {
            var t3;
            return e4.negative !== 0 && this.negative === 0 ? (e4.negative = 0, t3 = this.sub(e4), e4.negative ^= 1, t3) : e4.negative === 0 && this.negative !== 0 ? (this.negative = 0, t3 = e4.sub(this), this.negative = 1, t3) : this.length > e4.length ? this.clone().iadd(e4) : e4.clone().iadd(this);
          }, s.prototype.isub = function(e4) {
            if (e4.negative !== 0) {
              e4.negative = 0;
              var t3 = this.iadd(e4);
              return e4.negative = 1, t3._normSign();
            }
            if (this.negative !== 0)
              return this.negative = 0, this.iadd(e4), this.negative = 1, this._normSign();
            var r2, n2, i2 = this.cmp(e4);
            if (i2 === 0)
              return this.negative = 0, this.length = 1, this.words[0] = 0, this;
            i2 > 0 ? (r2 = this, n2 = e4) : (r2 = e4, n2 = this);
            for (var s2 = 0, o2 = 0; o2 < n2.length; o2++)
              s2 = (t3 = (0 | r2.words[o2]) - (0 | n2.words[o2]) + s2) >> 26, this.words[o2] = 67108863 & t3;
            for (; s2 !== 0 && o2 < r2.length; o2++)
              s2 = (t3 = (0 | r2.words[o2]) + s2) >> 26, this.words[o2] = 67108863 & t3;
            if (s2 === 0 && o2 < r2.length && r2 !== this)
              for (; o2 < r2.length; o2++)
                this.words[o2] = r2.words[o2];
            return this.length = Math.max(this.length, o2), r2 !== this && (this.negative = 1), this.strip();
          }, s.prototype.sub = function(e4) {
            return this.clone().isub(e4);
          };
          var l = function(e4, t3, r2) {
            var n2, i2, s2, o2 = e4.words, a2 = t3.words, c2 = r2.words, u2 = 0, h2 = 0 | o2[0], f2 = 8191 & h2, d2 = h2 >>> 13, l2 = 0 | o2[1], p2 = 8191 & l2, y2 = l2 >>> 13, g2 = 0 | o2[2], b2 = 8191 & g2, m2 = g2 >>> 13, v2 = 0 | o2[3], w2 = 8191 & v2, _2 = v2 >>> 13, E2 = 0 | o2[4], S2 = 8191 & E2, A = E2 >>> 13, I = 0 | o2[5], k = 8191 & I, R = I >>> 13, T = 0 | o2[6], C = 8191 & T, M = T >>> 13, x = 0 | o2[7], N = 8191 & x, P = x >>> 13, B = 0 | o2[8], O = 8191 & B, D = B >>> 13, L = 0 | o2[9], U = 8191 & L, j = L >>> 13, F = 0 | a2[0], z = 8191 & F, q = F >>> 13, K = 0 | a2[1], V = 8191 & K, H = K >>> 13, G = 0 | a2[2], $ = 8191 & G, W = G >>> 13, Y = 0 | a2[3], X = 8191 & Y, J = Y >>> 13, Z = 0 | a2[4], Q = 8191 & Z, ee = Z >>> 13, te = 0 | a2[5], re = 8191 & te, ne = te >>> 13, ie = 0 | a2[6], se = 8191 & ie, oe = ie >>> 13, ae = 0 | a2[7], ce = 8191 & ae, ue = ae >>> 13, he = 0 | a2[8], fe = 8191 & he, de = he >>> 13, le = 0 | a2[9], pe = 8191 & le, ye = le >>> 13;
            r2.negative = e4.negative ^ t3.negative, r2.length = 19;
            var ge = (u2 + (n2 = Math.imul(f2, z)) | 0) + ((8191 & (i2 = (i2 = Math.imul(f2, q)) + Math.imul(d2, z) | 0)) << 13) | 0;
            u2 = ((s2 = Math.imul(d2, q)) + (i2 >>> 13) | 0) + (ge >>> 26) | 0, ge &= 67108863, n2 = Math.imul(p2, z), i2 = (i2 = Math.imul(p2, q)) + Math.imul(y2, z) | 0, s2 = Math.imul(y2, q);
            var be = (u2 + (n2 = n2 + Math.imul(f2, V) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(f2, H) | 0) + Math.imul(d2, V) | 0)) << 13) | 0;
            u2 = ((s2 = s2 + Math.imul(d2, H) | 0) + (i2 >>> 13) | 0) + (be >>> 26) | 0, be &= 67108863, n2 = Math.imul(b2, z), i2 = (i2 = Math.imul(b2, q)) + Math.imul(m2, z) | 0, s2 = Math.imul(m2, q), n2 = n2 + Math.imul(p2, V) | 0, i2 = (i2 = i2 + Math.imul(p2, H) | 0) + Math.imul(y2, V) | 0, s2 = s2 + Math.imul(y2, H) | 0;
            var me = (u2 + (n2 = n2 + Math.imul(f2, $) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(f2, W) | 0) + Math.imul(d2, $) | 0)) << 13) | 0;
            u2 = ((s2 = s2 + Math.imul(d2, W) | 0) + (i2 >>> 13) | 0) + (me >>> 26) | 0, me &= 67108863, n2 = Math.imul(w2, z), i2 = (i2 = Math.imul(w2, q)) + Math.imul(_2, z) | 0, s2 = Math.imul(_2, q), n2 = n2 + Math.imul(b2, V) | 0, i2 = (i2 = i2 + Math.imul(b2, H) | 0) + Math.imul(m2, V) | 0, s2 = s2 + Math.imul(m2, H) | 0, n2 = n2 + Math.imul(p2, $) | 0, i2 = (i2 = i2 + Math.imul(p2, W) | 0) + Math.imul(y2, $) | 0, s2 = s2 + Math.imul(y2, W) | 0;
            var ve = (u2 + (n2 = n2 + Math.imul(f2, X) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(f2, J) | 0) + Math.imul(d2, X) | 0)) << 13) | 0;
            u2 = ((s2 = s2 + Math.imul(d2, J) | 0) + (i2 >>> 13) | 0) + (ve >>> 26) | 0, ve &= 67108863, n2 = Math.imul(S2, z), i2 = (i2 = Math.imul(S2, q)) + Math.imul(A, z) | 0, s2 = Math.imul(A, q), n2 = n2 + Math.imul(w2, V) | 0, i2 = (i2 = i2 + Math.imul(w2, H) | 0) + Math.imul(_2, V) | 0, s2 = s2 + Math.imul(_2, H) | 0, n2 = n2 + Math.imul(b2, $) | 0, i2 = (i2 = i2 + Math.imul(b2, W) | 0) + Math.imul(m2, $) | 0, s2 = s2 + Math.imul(m2, W) | 0, n2 = n2 + Math.imul(p2, X) | 0, i2 = (i2 = i2 + Math.imul(p2, J) | 0) + Math.imul(y2, X) | 0, s2 = s2 + Math.imul(y2, J) | 0;
            var we = (u2 + (n2 = n2 + Math.imul(f2, Q) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(f2, ee) | 0) + Math.imul(d2, Q) | 0)) << 13) | 0;
            u2 = ((s2 = s2 + Math.imul(d2, ee) | 0) + (i2 >>> 13) | 0) + (we >>> 26) | 0, we &= 67108863, n2 = Math.imul(k, z), i2 = (i2 = Math.imul(k, q)) + Math.imul(R, z) | 0, s2 = Math.imul(R, q), n2 = n2 + Math.imul(S2, V) | 0, i2 = (i2 = i2 + Math.imul(S2, H) | 0) + Math.imul(A, V) | 0, s2 = s2 + Math.imul(A, H) | 0, n2 = n2 + Math.imul(w2, $) | 0, i2 = (i2 = i2 + Math.imul(w2, W) | 0) + Math.imul(_2, $) | 0, s2 = s2 + Math.imul(_2, W) | 0, n2 = n2 + Math.imul(b2, X) | 0, i2 = (i2 = i2 + Math.imul(b2, J) | 0) + Math.imul(m2, X) | 0, s2 = s2 + Math.imul(m2, J) | 0, n2 = n2 + Math.imul(p2, Q) | 0, i2 = (i2 = i2 + Math.imul(p2, ee) | 0) + Math.imul(y2, Q) | 0, s2 = s2 + Math.imul(y2, ee) | 0;
            var _e = (u2 + (n2 = n2 + Math.imul(f2, re) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(f2, ne) | 0) + Math.imul(d2, re) | 0)) << 13) | 0;
            u2 = ((s2 = s2 + Math.imul(d2, ne) | 0) + (i2 >>> 13) | 0) + (_e >>> 26) | 0, _e &= 67108863, n2 = Math.imul(C, z), i2 = (i2 = Math.imul(C, q)) + Math.imul(M, z) | 0, s2 = Math.imul(M, q), n2 = n2 + Math.imul(k, V) | 0, i2 = (i2 = i2 + Math.imul(k, H) | 0) + Math.imul(R, V) | 0, s2 = s2 + Math.imul(R, H) | 0, n2 = n2 + Math.imul(S2, $) | 0, i2 = (i2 = i2 + Math.imul(S2, W) | 0) + Math.imul(A, $) | 0, s2 = s2 + Math.imul(A, W) | 0, n2 = n2 + Math.imul(w2, X) | 0, i2 = (i2 = i2 + Math.imul(w2, J) | 0) + Math.imul(_2, X) | 0, s2 = s2 + Math.imul(_2, J) | 0, n2 = n2 + Math.imul(b2, Q) | 0, i2 = (i2 = i2 + Math.imul(b2, ee) | 0) + Math.imul(m2, Q) | 0, s2 = s2 + Math.imul(m2, ee) | 0, n2 = n2 + Math.imul(p2, re) | 0, i2 = (i2 = i2 + Math.imul(p2, ne) | 0) + Math.imul(y2, re) | 0, s2 = s2 + Math.imul(y2, ne) | 0;
            var Ee = (u2 + (n2 = n2 + Math.imul(f2, se) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(f2, oe) | 0) + Math.imul(d2, se) | 0)) << 13) | 0;
            u2 = ((s2 = s2 + Math.imul(d2, oe) | 0) + (i2 >>> 13) | 0) + (Ee >>> 26) | 0, Ee &= 67108863, n2 = Math.imul(N, z), i2 = (i2 = Math.imul(N, q)) + Math.imul(P, z) | 0, s2 = Math.imul(P, q), n2 = n2 + Math.imul(C, V) | 0, i2 = (i2 = i2 + Math.imul(C, H) | 0) + Math.imul(M, V) | 0, s2 = s2 + Math.imul(M, H) | 0, n2 = n2 + Math.imul(k, $) | 0, i2 = (i2 = i2 + Math.imul(k, W) | 0) + Math.imul(R, $) | 0, s2 = s2 + Math.imul(R, W) | 0, n2 = n2 + Math.imul(S2, X) | 0, i2 = (i2 = i2 + Math.imul(S2, J) | 0) + Math.imul(A, X) | 0, s2 = s2 + Math.imul(A, J) | 0, n2 = n2 + Math.imul(w2, Q) | 0, i2 = (i2 = i2 + Math.imul(w2, ee) | 0) + Math.imul(_2, Q) | 0, s2 = s2 + Math.imul(_2, ee) | 0, n2 = n2 + Math.imul(b2, re) | 0, i2 = (i2 = i2 + Math.imul(b2, ne) | 0) + Math.imul(m2, re) | 0, s2 = s2 + Math.imul(m2, ne) | 0, n2 = n2 + Math.imul(p2, se) | 0, i2 = (i2 = i2 + Math.imul(p2, oe) | 0) + Math.imul(y2, se) | 0, s2 = s2 + Math.imul(y2, oe) | 0;
            var Se = (u2 + (n2 = n2 + Math.imul(f2, ce) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(f2, ue) | 0) + Math.imul(d2, ce) | 0)) << 13) | 0;
            u2 = ((s2 = s2 + Math.imul(d2, ue) | 0) + (i2 >>> 13) | 0) + (Se >>> 26) | 0, Se &= 67108863, n2 = Math.imul(O, z), i2 = (i2 = Math.imul(O, q)) + Math.imul(D, z) | 0, s2 = Math.imul(D, q), n2 = n2 + Math.imul(N, V) | 0, i2 = (i2 = i2 + Math.imul(N, H) | 0) + Math.imul(P, V) | 0, s2 = s2 + Math.imul(P, H) | 0, n2 = n2 + Math.imul(C, $) | 0, i2 = (i2 = i2 + Math.imul(C, W) | 0) + Math.imul(M, $) | 0, s2 = s2 + Math.imul(M, W) | 0, n2 = n2 + Math.imul(k, X) | 0, i2 = (i2 = i2 + Math.imul(k, J) | 0) + Math.imul(R, X) | 0, s2 = s2 + Math.imul(R, J) | 0, n2 = n2 + Math.imul(S2, Q) | 0, i2 = (i2 = i2 + Math.imul(S2, ee) | 0) + Math.imul(A, Q) | 0, s2 = s2 + Math.imul(A, ee) | 0, n2 = n2 + Math.imul(w2, re) | 0, i2 = (i2 = i2 + Math.imul(w2, ne) | 0) + Math.imul(_2, re) | 0, s2 = s2 + Math.imul(_2, ne) | 0, n2 = n2 + Math.imul(b2, se) | 0, i2 = (i2 = i2 + Math.imul(b2, oe) | 0) + Math.imul(m2, se) | 0, s2 = s2 + Math.imul(m2, oe) | 0, n2 = n2 + Math.imul(p2, ce) | 0, i2 = (i2 = i2 + Math.imul(p2, ue) | 0) + Math.imul(y2, ce) | 0, s2 = s2 + Math.imul(y2, ue) | 0;
            var Ae = (u2 + (n2 = n2 + Math.imul(f2, fe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(f2, de) | 0) + Math.imul(d2, fe) | 0)) << 13) | 0;
            u2 = ((s2 = s2 + Math.imul(d2, de) | 0) + (i2 >>> 13) | 0) + (Ae >>> 26) | 0, Ae &= 67108863, n2 = Math.imul(U, z), i2 = (i2 = Math.imul(U, q)) + Math.imul(j, z) | 0, s2 = Math.imul(j, q), n2 = n2 + Math.imul(O, V) | 0, i2 = (i2 = i2 + Math.imul(O, H) | 0) + Math.imul(D, V) | 0, s2 = s2 + Math.imul(D, H) | 0, n2 = n2 + Math.imul(N, $) | 0, i2 = (i2 = i2 + Math.imul(N, W) | 0) + Math.imul(P, $) | 0, s2 = s2 + Math.imul(P, W) | 0, n2 = n2 + Math.imul(C, X) | 0, i2 = (i2 = i2 + Math.imul(C, J) | 0) + Math.imul(M, X) | 0, s2 = s2 + Math.imul(M, J) | 0, n2 = n2 + Math.imul(k, Q) | 0, i2 = (i2 = i2 + Math.imul(k, ee) | 0) + Math.imul(R, Q) | 0, s2 = s2 + Math.imul(R, ee) | 0, n2 = n2 + Math.imul(S2, re) | 0, i2 = (i2 = i2 + Math.imul(S2, ne) | 0) + Math.imul(A, re) | 0, s2 = s2 + Math.imul(A, ne) | 0, n2 = n2 + Math.imul(w2, se) | 0, i2 = (i2 = i2 + Math.imul(w2, oe) | 0) + Math.imul(_2, se) | 0, s2 = s2 + Math.imul(_2, oe) | 0, n2 = n2 + Math.imul(b2, ce) | 0, i2 = (i2 = i2 + Math.imul(b2, ue) | 0) + Math.imul(m2, ce) | 0, s2 = s2 + Math.imul(m2, ue) | 0, n2 = n2 + Math.imul(p2, fe) | 0, i2 = (i2 = i2 + Math.imul(p2, de) | 0) + Math.imul(y2, fe) | 0, s2 = s2 + Math.imul(y2, de) | 0;
            var Ie = (u2 + (n2 = n2 + Math.imul(f2, pe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(f2, ye) | 0) + Math.imul(d2, pe) | 0)) << 13) | 0;
            u2 = ((s2 = s2 + Math.imul(d2, ye) | 0) + (i2 >>> 13) | 0) + (Ie >>> 26) | 0, Ie &= 67108863, n2 = Math.imul(U, V), i2 = (i2 = Math.imul(U, H)) + Math.imul(j, V) | 0, s2 = Math.imul(j, H), n2 = n2 + Math.imul(O, $) | 0, i2 = (i2 = i2 + Math.imul(O, W) | 0) + Math.imul(D, $) | 0, s2 = s2 + Math.imul(D, W) | 0, n2 = n2 + Math.imul(N, X) | 0, i2 = (i2 = i2 + Math.imul(N, J) | 0) + Math.imul(P, X) | 0, s2 = s2 + Math.imul(P, J) | 0, n2 = n2 + Math.imul(C, Q) | 0, i2 = (i2 = i2 + Math.imul(C, ee) | 0) + Math.imul(M, Q) | 0, s2 = s2 + Math.imul(M, ee) | 0, n2 = n2 + Math.imul(k, re) | 0, i2 = (i2 = i2 + Math.imul(k, ne) | 0) + Math.imul(R, re) | 0, s2 = s2 + Math.imul(R, ne) | 0, n2 = n2 + Math.imul(S2, se) | 0, i2 = (i2 = i2 + Math.imul(S2, oe) | 0) + Math.imul(A, se) | 0, s2 = s2 + Math.imul(A, oe) | 0, n2 = n2 + Math.imul(w2, ce) | 0, i2 = (i2 = i2 + Math.imul(w2, ue) | 0) + Math.imul(_2, ce) | 0, s2 = s2 + Math.imul(_2, ue) | 0, n2 = n2 + Math.imul(b2, fe) | 0, i2 = (i2 = i2 + Math.imul(b2, de) | 0) + Math.imul(m2, fe) | 0, s2 = s2 + Math.imul(m2, de) | 0;
            var ke = (u2 + (n2 = n2 + Math.imul(p2, pe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(p2, ye) | 0) + Math.imul(y2, pe) | 0)) << 13) | 0;
            u2 = ((s2 = s2 + Math.imul(y2, ye) | 0) + (i2 >>> 13) | 0) + (ke >>> 26) | 0, ke &= 67108863, n2 = Math.imul(U, $), i2 = (i2 = Math.imul(U, W)) + Math.imul(j, $) | 0, s2 = Math.imul(j, W), n2 = n2 + Math.imul(O, X) | 0, i2 = (i2 = i2 + Math.imul(O, J) | 0) + Math.imul(D, X) | 0, s2 = s2 + Math.imul(D, J) | 0, n2 = n2 + Math.imul(N, Q) | 0, i2 = (i2 = i2 + Math.imul(N, ee) | 0) + Math.imul(P, Q) | 0, s2 = s2 + Math.imul(P, ee) | 0, n2 = n2 + Math.imul(C, re) | 0, i2 = (i2 = i2 + Math.imul(C, ne) | 0) + Math.imul(M, re) | 0, s2 = s2 + Math.imul(M, ne) | 0, n2 = n2 + Math.imul(k, se) | 0, i2 = (i2 = i2 + Math.imul(k, oe) | 0) + Math.imul(R, se) | 0, s2 = s2 + Math.imul(R, oe) | 0, n2 = n2 + Math.imul(S2, ce) | 0, i2 = (i2 = i2 + Math.imul(S2, ue) | 0) + Math.imul(A, ce) | 0, s2 = s2 + Math.imul(A, ue) | 0, n2 = n2 + Math.imul(w2, fe) | 0, i2 = (i2 = i2 + Math.imul(w2, de) | 0) + Math.imul(_2, fe) | 0, s2 = s2 + Math.imul(_2, de) | 0;
            var Re = (u2 + (n2 = n2 + Math.imul(b2, pe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(b2, ye) | 0) + Math.imul(m2, pe) | 0)) << 13) | 0;
            u2 = ((s2 = s2 + Math.imul(m2, ye) | 0) + (i2 >>> 13) | 0) + (Re >>> 26) | 0, Re &= 67108863, n2 = Math.imul(U, X), i2 = (i2 = Math.imul(U, J)) + Math.imul(j, X) | 0, s2 = Math.imul(j, J), n2 = n2 + Math.imul(O, Q) | 0, i2 = (i2 = i2 + Math.imul(O, ee) | 0) + Math.imul(D, Q) | 0, s2 = s2 + Math.imul(D, ee) | 0, n2 = n2 + Math.imul(N, re) | 0, i2 = (i2 = i2 + Math.imul(N, ne) | 0) + Math.imul(P, re) | 0, s2 = s2 + Math.imul(P, ne) | 0, n2 = n2 + Math.imul(C, se) | 0, i2 = (i2 = i2 + Math.imul(C, oe) | 0) + Math.imul(M, se) | 0, s2 = s2 + Math.imul(M, oe) | 0, n2 = n2 + Math.imul(k, ce) | 0, i2 = (i2 = i2 + Math.imul(k, ue) | 0) + Math.imul(R, ce) | 0, s2 = s2 + Math.imul(R, ue) | 0, n2 = n2 + Math.imul(S2, fe) | 0, i2 = (i2 = i2 + Math.imul(S2, de) | 0) + Math.imul(A, fe) | 0, s2 = s2 + Math.imul(A, de) | 0;
            var Te = (u2 + (n2 = n2 + Math.imul(w2, pe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(w2, ye) | 0) + Math.imul(_2, pe) | 0)) << 13) | 0;
            u2 = ((s2 = s2 + Math.imul(_2, ye) | 0) + (i2 >>> 13) | 0) + (Te >>> 26) | 0, Te &= 67108863, n2 = Math.imul(U, Q), i2 = (i2 = Math.imul(U, ee)) + Math.imul(j, Q) | 0, s2 = Math.imul(j, ee), n2 = n2 + Math.imul(O, re) | 0, i2 = (i2 = i2 + Math.imul(O, ne) | 0) + Math.imul(D, re) | 0, s2 = s2 + Math.imul(D, ne) | 0, n2 = n2 + Math.imul(N, se) | 0, i2 = (i2 = i2 + Math.imul(N, oe) | 0) + Math.imul(P, se) | 0, s2 = s2 + Math.imul(P, oe) | 0, n2 = n2 + Math.imul(C, ce) | 0, i2 = (i2 = i2 + Math.imul(C, ue) | 0) + Math.imul(M, ce) | 0, s2 = s2 + Math.imul(M, ue) | 0, n2 = n2 + Math.imul(k, fe) | 0, i2 = (i2 = i2 + Math.imul(k, de) | 0) + Math.imul(R, fe) | 0, s2 = s2 + Math.imul(R, de) | 0;
            var Ce = (u2 + (n2 = n2 + Math.imul(S2, pe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(S2, ye) | 0) + Math.imul(A, pe) | 0)) << 13) | 0;
            u2 = ((s2 = s2 + Math.imul(A, ye) | 0) + (i2 >>> 13) | 0) + (Ce >>> 26) | 0, Ce &= 67108863, n2 = Math.imul(U, re), i2 = (i2 = Math.imul(U, ne)) + Math.imul(j, re) | 0, s2 = Math.imul(j, ne), n2 = n2 + Math.imul(O, se) | 0, i2 = (i2 = i2 + Math.imul(O, oe) | 0) + Math.imul(D, se) | 0, s2 = s2 + Math.imul(D, oe) | 0, n2 = n2 + Math.imul(N, ce) | 0, i2 = (i2 = i2 + Math.imul(N, ue) | 0) + Math.imul(P, ce) | 0, s2 = s2 + Math.imul(P, ue) | 0, n2 = n2 + Math.imul(C, fe) | 0, i2 = (i2 = i2 + Math.imul(C, de) | 0) + Math.imul(M, fe) | 0, s2 = s2 + Math.imul(M, de) | 0;
            var Me = (u2 + (n2 = n2 + Math.imul(k, pe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(k, ye) | 0) + Math.imul(R, pe) | 0)) << 13) | 0;
            u2 = ((s2 = s2 + Math.imul(R, ye) | 0) + (i2 >>> 13) | 0) + (Me >>> 26) | 0, Me &= 67108863, n2 = Math.imul(U, se), i2 = (i2 = Math.imul(U, oe)) + Math.imul(j, se) | 0, s2 = Math.imul(j, oe), n2 = n2 + Math.imul(O, ce) | 0, i2 = (i2 = i2 + Math.imul(O, ue) | 0) + Math.imul(D, ce) | 0, s2 = s2 + Math.imul(D, ue) | 0, n2 = n2 + Math.imul(N, fe) | 0, i2 = (i2 = i2 + Math.imul(N, de) | 0) + Math.imul(P, fe) | 0, s2 = s2 + Math.imul(P, de) | 0;
            var xe = (u2 + (n2 = n2 + Math.imul(C, pe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(C, ye) | 0) + Math.imul(M, pe) | 0)) << 13) | 0;
            u2 = ((s2 = s2 + Math.imul(M, ye) | 0) + (i2 >>> 13) | 0) + (xe >>> 26) | 0, xe &= 67108863, n2 = Math.imul(U, ce), i2 = (i2 = Math.imul(U, ue)) + Math.imul(j, ce) | 0, s2 = Math.imul(j, ue), n2 = n2 + Math.imul(O, fe) | 0, i2 = (i2 = i2 + Math.imul(O, de) | 0) + Math.imul(D, fe) | 0, s2 = s2 + Math.imul(D, de) | 0;
            var Ne = (u2 + (n2 = n2 + Math.imul(N, pe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(N, ye) | 0) + Math.imul(P, pe) | 0)) << 13) | 0;
            u2 = ((s2 = s2 + Math.imul(P, ye) | 0) + (i2 >>> 13) | 0) + (Ne >>> 26) | 0, Ne &= 67108863, n2 = Math.imul(U, fe), i2 = (i2 = Math.imul(U, de)) + Math.imul(j, fe) | 0, s2 = Math.imul(j, de);
            var Pe = (u2 + (n2 = n2 + Math.imul(O, pe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(O, ye) | 0) + Math.imul(D, pe) | 0)) << 13) | 0;
            u2 = ((s2 = s2 + Math.imul(D, ye) | 0) + (i2 >>> 13) | 0) + (Pe >>> 26) | 0, Pe &= 67108863;
            var Be = (u2 + (n2 = Math.imul(U, pe)) | 0) + ((8191 & (i2 = (i2 = Math.imul(U, ye)) + Math.imul(j, pe) | 0)) << 13) | 0;
            return u2 = ((s2 = Math.imul(j, ye)) + (i2 >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, c2[0] = ge, c2[1] = be, c2[2] = me, c2[3] = ve, c2[4] = we, c2[5] = _e, c2[6] = Ee, c2[7] = Se, c2[8] = Ae, c2[9] = Ie, c2[10] = ke, c2[11] = Re, c2[12] = Te, c2[13] = Ce, c2[14] = Me, c2[15] = xe, c2[16] = Ne, c2[17] = Pe, c2[18] = Be, u2 !== 0 && (c2[19] = u2, r2.length++), r2;
          };
          function p(e4, t3, r2) {
            return new y().mulp(e4, t3, r2);
          }
          function y(e4, t3) {
            this.x = e4, this.y = t3;
          }
          Math.imul || (l = d), s.prototype.mulTo = function(e4, t3) {
            var r2 = this.length + e4.length;
            return this.length === 10 && e4.length === 10 ? l(this, e4, t3) : r2 < 63 ? d(this, e4, t3) : r2 < 1024 ? function(e5, t4, r3) {
              r3.negative = t4.negative ^ e5.negative, r3.length = e5.length + t4.length;
              for (var n2 = 0, i2 = 0, s2 = 0; s2 < r3.length - 1; s2++) {
                var o2 = i2;
                i2 = 0;
                for (var a2 = 67108863 & n2, c2 = Math.min(s2, t4.length - 1), u2 = Math.max(0, s2 - e5.length + 1); u2 <= c2; u2++) {
                  var h2 = s2 - u2, f2 = (0 | e5.words[h2]) * (0 | t4.words[u2]), d2 = 67108863 & f2;
                  a2 = 67108863 & (d2 = d2 + a2 | 0), i2 += (o2 = (o2 = o2 + (f2 / 67108864 | 0) | 0) + (d2 >>> 26) | 0) >>> 26, o2 &= 67108863;
                }
                r3.words[s2] = a2, n2 = o2, o2 = i2;
              }
              return n2 !== 0 ? r3.words[s2] = n2 : r3.length--, r3.strip();
            }(this, e4, t3) : p(this, e4, t3);
          }, y.prototype.makeRBT = function(e4) {
            for (var t3 = new Array(e4), r2 = s.prototype._countBits(e4) - 1, n2 = 0; n2 < e4; n2++)
              t3[n2] = this.revBin(n2, r2, e4);
            return t3;
          }, y.prototype.revBin = function(e4, t3, r2) {
            if (e4 === 0 || e4 === r2 - 1)
              return e4;
            for (var n2 = 0, i2 = 0; i2 < t3; i2++)
              n2 |= (1 & e4) << t3 - i2 - 1, e4 >>= 1;
            return n2;
          }, y.prototype.permute = function(e4, t3, r2, n2, i2, s2) {
            for (var o2 = 0; o2 < s2; o2++)
              n2[o2] = t3[e4[o2]], i2[o2] = r2[e4[o2]];
          }, y.prototype.transform = function(e4, t3, r2, n2, i2, s2) {
            this.permute(s2, e4, t3, r2, n2, i2);
            for (var o2 = 1; o2 < i2; o2 <<= 1)
              for (var a2 = o2 << 1, c2 = Math.cos(2 * Math.PI / a2), u2 = Math.sin(2 * Math.PI / a2), h2 = 0; h2 < i2; h2 += a2)
                for (var f2 = c2, d2 = u2, l2 = 0; l2 < o2; l2++) {
                  var p2 = r2[h2 + l2], y2 = n2[h2 + l2], g2 = r2[h2 + l2 + o2], b2 = n2[h2 + l2 + o2], m2 = f2 * g2 - d2 * b2;
                  b2 = f2 * b2 + d2 * g2, g2 = m2, r2[h2 + l2] = p2 + g2, n2[h2 + l2] = y2 + b2, r2[h2 + l2 + o2] = p2 - g2, n2[h2 + l2 + o2] = y2 - b2, l2 !== a2 && (m2 = c2 * f2 - u2 * d2, d2 = c2 * d2 + u2 * f2, f2 = m2);
                }
          }, y.prototype.guessLen13b = function(e4, t3) {
            var r2 = 1 | Math.max(t3, e4), n2 = 1 & r2, i2 = 0;
            for (r2 = r2 / 2 | 0; r2; r2 >>>= 1)
              i2++;
            return 1 << i2 + 1 + n2;
          }, y.prototype.conjugate = function(e4, t3, r2) {
            if (!(r2 <= 1))
              for (var n2 = 0; n2 < r2 / 2; n2++) {
                var i2 = e4[n2];
                e4[n2] = e4[r2 - n2 - 1], e4[r2 - n2 - 1] = i2, i2 = t3[n2], t3[n2] = -t3[r2 - n2 - 1], t3[r2 - n2 - 1] = -i2;
              }
          }, y.prototype.normalize13b = function(e4, t3) {
            for (var r2 = 0, n2 = 0; n2 < t3 / 2; n2++) {
              var i2 = 8192 * Math.round(e4[2 * n2 + 1] / t3) + Math.round(e4[2 * n2] / t3) + r2;
              e4[n2] = 67108863 & i2, r2 = i2 < 67108864 ? 0 : i2 / 67108864 | 0;
            }
            return e4;
          }, y.prototype.convert13b = function(e4, t3, r2, i2) {
            for (var s2 = 0, o2 = 0; o2 < t3; o2++)
              s2 += 0 | e4[o2], r2[2 * o2] = 8191 & s2, s2 >>>= 13, r2[2 * o2 + 1] = 8191 & s2, s2 >>>= 13;
            for (o2 = 2 * t3; o2 < i2; ++o2)
              r2[o2] = 0;
            n(s2 === 0), n((-8192 & s2) == 0);
          }, y.prototype.stub = function(e4) {
            for (var t3 = new Array(e4), r2 = 0; r2 < e4; r2++)
              t3[r2] = 0;
            return t3;
          }, y.prototype.mulp = function(e4, t3, r2) {
            var n2 = 2 * this.guessLen13b(e4.length, t3.length), i2 = this.makeRBT(n2), s2 = this.stub(n2), o2 = new Array(n2), a2 = new Array(n2), c2 = new Array(n2), u2 = new Array(n2), h2 = new Array(n2), f2 = new Array(n2), d2 = r2.words;
            d2.length = n2, this.convert13b(e4.words, e4.length, o2, n2), this.convert13b(t3.words, t3.length, u2, n2), this.transform(o2, s2, a2, c2, n2, i2), this.transform(u2, s2, h2, f2, n2, i2);
            for (var l2 = 0; l2 < n2; l2++) {
              var p2 = a2[l2] * h2[l2] - c2[l2] * f2[l2];
              c2[l2] = a2[l2] * f2[l2] + c2[l2] * h2[l2], a2[l2] = p2;
            }
            return this.conjugate(a2, c2, n2), this.transform(a2, c2, d2, s2, n2, i2), this.conjugate(d2, s2, n2), this.normalize13b(d2, n2), r2.negative = e4.negative ^ t3.negative, r2.length = e4.length + t3.length, r2.strip();
          }, s.prototype.mul = function(e4) {
            var t3 = new s(null);
            return t3.words = new Array(this.length + e4.length), this.mulTo(e4, t3);
          }, s.prototype.mulf = function(e4) {
            var t3 = new s(null);
            return t3.words = new Array(this.length + e4.length), p(this, e4, t3);
          }, s.prototype.imul = function(e4) {
            return this.clone().mulTo(e4, this);
          }, s.prototype.imuln = function(e4) {
            n(typeof e4 == "number"), n(e4 < 67108864);
            for (var t3 = 0, r2 = 0; r2 < this.length; r2++) {
              var i2 = (0 | this.words[r2]) * e4, s2 = (67108863 & i2) + (67108863 & t3);
              t3 >>= 26, t3 += i2 / 67108864 | 0, t3 += s2 >>> 26, this.words[r2] = 67108863 & s2;
            }
            return t3 !== 0 && (this.words[r2] = t3, this.length++), this;
          }, s.prototype.muln = function(e4) {
            return this.clone().imuln(e4);
          }, s.prototype.sqr = function() {
            return this.mul(this);
          }, s.prototype.isqr = function() {
            return this.imul(this.clone());
          }, s.prototype.pow = function(e4) {
            var t3 = function(e5) {
              for (var t4 = new Array(e5.bitLength()), r3 = 0; r3 < t4.length; r3++) {
                var n3 = r3 / 26 | 0, i3 = r3 % 26;
                t4[r3] = (e5.words[n3] & 1 << i3) >>> i3;
              }
              return t4;
            }(e4);
            if (t3.length === 0)
              return new s(1);
            for (var r2 = this, n2 = 0; n2 < t3.length && t3[n2] === 0; n2++, r2 = r2.sqr())
              ;
            if (++n2 < t3.length)
              for (var i2 = r2.sqr(); n2 < t3.length; n2++, i2 = i2.sqr())
                t3[n2] !== 0 && (r2 = r2.mul(i2));
            return r2;
          }, s.prototype.iushln = function(e4) {
            n(typeof e4 == "number" && e4 >= 0);
            var t3, r2 = e4 % 26, i2 = (e4 - r2) / 26, s2 = 67108863 >>> 26 - r2 << 26 - r2;
            if (r2 !== 0) {
              var o2 = 0;
              for (t3 = 0; t3 < this.length; t3++) {
                var a2 = this.words[t3] & s2, c2 = (0 | this.words[t3]) - a2 << r2;
                this.words[t3] = c2 | o2, o2 = a2 >>> 26 - r2;
              }
              o2 && (this.words[t3] = o2, this.length++);
            }
            if (i2 !== 0) {
              for (t3 = this.length - 1; t3 >= 0; t3--)
                this.words[t3 + i2] = this.words[t3];
              for (t3 = 0; t3 < i2; t3++)
                this.words[t3] = 0;
              this.length += i2;
            }
            return this.strip();
          }, s.prototype.ishln = function(e4) {
            return n(this.negative === 0), this.iushln(e4);
          }, s.prototype.iushrn = function(e4, t3, r2) {
            var i2;
            n(typeof e4 == "number" && e4 >= 0), i2 = t3 ? (t3 - t3 % 26) / 26 : 0;
            var s2 = e4 % 26, o2 = Math.min((e4 - s2) / 26, this.length), a2 = 67108863 ^ 67108863 >>> s2 << s2, c2 = r2;
            if (i2 -= o2, i2 = Math.max(0, i2), c2) {
              for (var u2 = 0; u2 < o2; u2++)
                c2.words[u2] = this.words[u2];
              c2.length = o2;
            }
            if (o2 === 0)
              ;
            else if (this.length > o2)
              for (this.length -= o2, u2 = 0; u2 < this.length; u2++)
                this.words[u2] = this.words[u2 + o2];
            else
              this.words[0] = 0, this.length = 1;
            var h2 = 0;
            for (u2 = this.length - 1; u2 >= 0 && (h2 !== 0 || u2 >= i2); u2--) {
              var f2 = 0 | this.words[u2];
              this.words[u2] = h2 << 26 - s2 | f2 >>> s2, h2 = f2 & a2;
            }
            return c2 && h2 !== 0 && (c2.words[c2.length++] = h2), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
          }, s.prototype.ishrn = function(e4, t3, r2) {
            return n(this.negative === 0), this.iushrn(e4, t3, r2);
          }, s.prototype.shln = function(e4) {
            return this.clone().ishln(e4);
          }, s.prototype.ushln = function(e4) {
            return this.clone().iushln(e4);
          }, s.prototype.shrn = function(e4) {
            return this.clone().ishrn(e4);
          }, s.prototype.ushrn = function(e4) {
            return this.clone().iushrn(e4);
          }, s.prototype.testn = function(e4) {
            n(typeof e4 == "number" && e4 >= 0);
            var t3 = e4 % 26, r2 = (e4 - t3) / 26, i2 = 1 << t3;
            return !(this.length <= r2) && !!(this.words[r2] & i2);
          }, s.prototype.imaskn = function(e4) {
            n(typeof e4 == "number" && e4 >= 0);
            var t3 = e4 % 26, r2 = (e4 - t3) / 26;
            if (n(this.negative === 0, "imaskn works only with positive numbers"), this.length <= r2)
              return this;
            if (t3 !== 0 && r2++, this.length = Math.min(r2, this.length), t3 !== 0) {
              var i2 = 67108863 ^ 67108863 >>> t3 << t3;
              this.words[this.length - 1] &= i2;
            }
            return this.strip();
          }, s.prototype.maskn = function(e4) {
            return this.clone().imaskn(e4);
          }, s.prototype.iaddn = function(e4) {
            return n(typeof e4 == "number"), n(e4 < 67108864), e4 < 0 ? this.isubn(-e4) : this.negative !== 0 ? this.length === 1 && (0 | this.words[0]) < e4 ? (this.words[0] = e4 - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(e4), this.negative = 1, this) : this._iaddn(e4);
          }, s.prototype._iaddn = function(e4) {
            this.words[0] += e4;
            for (var t3 = 0; t3 < this.length && this.words[t3] >= 67108864; t3++)
              this.words[t3] -= 67108864, t3 === this.length - 1 ? this.words[t3 + 1] = 1 : this.words[t3 + 1]++;
            return this.length = Math.max(this.length, t3 + 1), this;
          }, s.prototype.isubn = function(e4) {
            if (n(typeof e4 == "number"), n(e4 < 67108864), e4 < 0)
              return this.iaddn(-e4);
            if (this.negative !== 0)
              return this.negative = 0, this.iaddn(e4), this.negative = 1, this;
            if (this.words[0] -= e4, this.length === 1 && this.words[0] < 0)
              this.words[0] = -this.words[0], this.negative = 1;
            else
              for (var t3 = 0; t3 < this.length && this.words[t3] < 0; t3++)
                this.words[t3] += 67108864, this.words[t3 + 1] -= 1;
            return this.strip();
          }, s.prototype.addn = function(e4) {
            return this.clone().iaddn(e4);
          }, s.prototype.subn = function(e4) {
            return this.clone().isubn(e4);
          }, s.prototype.iabs = function() {
            return this.negative = 0, this;
          }, s.prototype.abs = function() {
            return this.clone().iabs();
          }, s.prototype._ishlnsubmul = function(e4, t3, r2) {
            var i2, s2, o2 = e4.length + r2;
            this._expand(o2);
            var a2 = 0;
            for (i2 = 0; i2 < e4.length; i2++) {
              s2 = (0 | this.words[i2 + r2]) + a2;
              var c2 = (0 | e4.words[i2]) * t3;
              a2 = ((s2 -= 67108863 & c2) >> 26) - (c2 / 67108864 | 0), this.words[i2 + r2] = 67108863 & s2;
            }
            for (; i2 < this.length - r2; i2++)
              a2 = (s2 = (0 | this.words[i2 + r2]) + a2) >> 26, this.words[i2 + r2] = 67108863 & s2;
            if (a2 === 0)
              return this.strip();
            for (n(a2 === -1), a2 = 0, i2 = 0; i2 < this.length; i2++)
              a2 = (s2 = -(0 | this.words[i2]) + a2) >> 26, this.words[i2] = 67108863 & s2;
            return this.negative = 1, this.strip();
          }, s.prototype._wordDiv = function(e4, t3) {
            var r2 = (this.length, e4.length), n2 = this.clone(), i2 = e4, o2 = 0 | i2.words[i2.length - 1];
            (r2 = 26 - this._countBits(o2)) !== 0 && (i2 = i2.ushln(r2), n2.iushln(r2), o2 = 0 | i2.words[i2.length - 1]);
            var a2, c2 = n2.length - i2.length;
            if (t3 !== "mod") {
              (a2 = new s(null)).length = c2 + 1, a2.words = new Array(a2.length);
              for (var u2 = 0; u2 < a2.length; u2++)
                a2.words[u2] = 0;
            }
            var h2 = n2.clone()._ishlnsubmul(i2, 1, c2);
            h2.negative === 0 && (n2 = h2, a2 && (a2.words[c2] = 1));
            for (var f2 = c2 - 1; f2 >= 0; f2--) {
              var d2 = 67108864 * (0 | n2.words[i2.length + f2]) + (0 | n2.words[i2.length + f2 - 1]);
              for (d2 = Math.min(d2 / o2 | 0, 67108863), n2._ishlnsubmul(i2, d2, f2); n2.negative !== 0; )
                d2--, n2.negative = 0, n2._ishlnsubmul(i2, 1, f2), n2.isZero() || (n2.negative ^= 1);
              a2 && (a2.words[f2] = d2);
            }
            return a2 && a2.strip(), n2.strip(), t3 !== "div" && r2 !== 0 && n2.iushrn(r2), {div: a2 || null, mod: n2};
          }, s.prototype.divmod = function(e4, t3, r2) {
            return n(!e4.isZero()), this.isZero() ? {div: new s(0), mod: new s(0)} : this.negative !== 0 && e4.negative === 0 ? (a2 = this.neg().divmod(e4, t3), t3 !== "mod" && (i2 = a2.div.neg()), t3 !== "div" && (o2 = a2.mod.neg(), r2 && o2.negative !== 0 && o2.iadd(e4)), {div: i2, mod: o2}) : this.negative === 0 && e4.negative !== 0 ? (a2 = this.divmod(e4.neg(), t3), t3 !== "mod" && (i2 = a2.div.neg()), {div: i2, mod: a2.mod}) : (this.negative & e4.negative) != 0 ? (a2 = this.neg().divmod(e4.neg(), t3), t3 !== "div" && (o2 = a2.mod.neg(), r2 && o2.negative !== 0 && o2.isub(e4)), {div: a2.div, mod: o2}) : e4.length > this.length || this.cmp(e4) < 0 ? {div: new s(0), mod: this} : e4.length === 1 ? t3 === "div" ? {div: this.divn(e4.words[0]), mod: null} : t3 === "mod" ? {div: null, mod: new s(this.modn(e4.words[0]))} : {div: this.divn(e4.words[0]), mod: new s(this.modn(e4.words[0]))} : this._wordDiv(e4, t3);
            var i2, o2, a2;
          }, s.prototype.div = function(e4) {
            return this.divmod(e4, "div", false).div;
          }, s.prototype.mod = function(e4) {
            return this.divmod(e4, "mod", false).mod;
          }, s.prototype.umod = function(e4) {
            return this.divmod(e4, "mod", true).mod;
          }, s.prototype.divRound = function(e4) {
            var t3 = this.divmod(e4);
            if (t3.mod.isZero())
              return t3.div;
            var r2 = t3.div.negative !== 0 ? t3.mod.isub(e4) : t3.mod, n2 = e4.ushrn(1), i2 = e4.andln(1), s2 = r2.cmp(n2);
            return s2 < 0 || i2 === 1 && s2 === 0 ? t3.div : t3.div.negative !== 0 ? t3.div.isubn(1) : t3.div.iaddn(1);
          }, s.prototype.modn = function(e4) {
            n(e4 <= 67108863);
            for (var t3 = (1 << 26) % e4, r2 = 0, i2 = this.length - 1; i2 >= 0; i2--)
              r2 = (t3 * r2 + (0 | this.words[i2])) % e4;
            return r2;
          }, s.prototype.idivn = function(e4) {
            n(e4 <= 67108863);
            for (var t3 = 0, r2 = this.length - 1; r2 >= 0; r2--) {
              var i2 = (0 | this.words[r2]) + 67108864 * t3;
              this.words[r2] = i2 / e4 | 0, t3 = i2 % e4;
            }
            return this.strip();
          }, s.prototype.divn = function(e4) {
            return this.clone().idivn(e4);
          }, s.prototype.egcd = function(e4) {
            n(e4.negative === 0), n(!e4.isZero());
            var t3 = this, r2 = e4.clone();
            t3 = t3.negative !== 0 ? t3.umod(e4) : t3.clone();
            for (var i2 = new s(1), o2 = new s(0), a2 = new s(0), c2 = new s(1), u2 = 0; t3.isEven() && r2.isEven(); )
              t3.iushrn(1), r2.iushrn(1), ++u2;
            for (var h2 = r2.clone(), f2 = t3.clone(); !t3.isZero(); ) {
              for (var d2 = 0, l2 = 1; (t3.words[0] & l2) == 0 && d2 < 26; ++d2, l2 <<= 1)
                ;
              if (d2 > 0)
                for (t3.iushrn(d2); d2-- > 0; )
                  (i2.isOdd() || o2.isOdd()) && (i2.iadd(h2), o2.isub(f2)), i2.iushrn(1), o2.iushrn(1);
              for (var p2 = 0, y2 = 1; (r2.words[0] & y2) == 0 && p2 < 26; ++p2, y2 <<= 1)
                ;
              if (p2 > 0)
                for (r2.iushrn(p2); p2-- > 0; )
                  (a2.isOdd() || c2.isOdd()) && (a2.iadd(h2), c2.isub(f2)), a2.iushrn(1), c2.iushrn(1);
              t3.cmp(r2) >= 0 ? (t3.isub(r2), i2.isub(a2), o2.isub(c2)) : (r2.isub(t3), a2.isub(i2), c2.isub(o2));
            }
            return {a: a2, b: c2, gcd: r2.iushln(u2)};
          }, s.prototype._invmp = function(e4) {
            n(e4.negative === 0), n(!e4.isZero());
            var t3 = this, r2 = e4.clone();
            t3 = t3.negative !== 0 ? t3.umod(e4) : t3.clone();
            for (var i2, o2 = new s(1), a2 = new s(0), c2 = r2.clone(); t3.cmpn(1) > 0 && r2.cmpn(1) > 0; ) {
              for (var u2 = 0, h2 = 1; (t3.words[0] & h2) == 0 && u2 < 26; ++u2, h2 <<= 1)
                ;
              if (u2 > 0)
                for (t3.iushrn(u2); u2-- > 0; )
                  o2.isOdd() && o2.iadd(c2), o2.iushrn(1);
              for (var f2 = 0, d2 = 1; (r2.words[0] & d2) == 0 && f2 < 26; ++f2, d2 <<= 1)
                ;
              if (f2 > 0)
                for (r2.iushrn(f2); f2-- > 0; )
                  a2.isOdd() && a2.iadd(c2), a2.iushrn(1);
              t3.cmp(r2) >= 0 ? (t3.isub(r2), o2.isub(a2)) : (r2.isub(t3), a2.isub(o2));
            }
            return (i2 = t3.cmpn(1) === 0 ? o2 : a2).cmpn(0) < 0 && i2.iadd(e4), i2;
          }, s.prototype.gcd = function(e4) {
            if (this.isZero())
              return e4.abs();
            if (e4.isZero())
              return this.abs();
            var t3 = this.clone(), r2 = e4.clone();
            t3.negative = 0, r2.negative = 0;
            for (var n2 = 0; t3.isEven() && r2.isEven(); n2++)
              t3.iushrn(1), r2.iushrn(1);
            for (; ; ) {
              for (; t3.isEven(); )
                t3.iushrn(1);
              for (; r2.isEven(); )
                r2.iushrn(1);
              var i2 = t3.cmp(r2);
              if (i2 < 0) {
                var s2 = t3;
                t3 = r2, r2 = s2;
              } else if (i2 === 0 || r2.cmpn(1) === 0)
                break;
              t3.isub(r2);
            }
            return r2.iushln(n2);
          }, s.prototype.invm = function(e4) {
            return this.egcd(e4).a.umod(e4);
          }, s.prototype.isEven = function() {
            return (1 & this.words[0]) == 0;
          }, s.prototype.isOdd = function() {
            return (1 & this.words[0]) == 1;
          }, s.prototype.andln = function(e4) {
            return this.words[0] & e4;
          }, s.prototype.bincn = function(e4) {
            n(typeof e4 == "number");
            var t3 = e4 % 26, r2 = (e4 - t3) / 26, i2 = 1 << t3;
            if (this.length <= r2)
              return this._expand(r2 + 1), this.words[r2] |= i2, this;
            for (var s2 = i2, o2 = r2; s2 !== 0 && o2 < this.length; o2++) {
              var a2 = 0 | this.words[o2];
              s2 = (a2 += s2) >>> 26, a2 &= 67108863, this.words[o2] = a2;
            }
            return s2 !== 0 && (this.words[o2] = s2, this.length++), this;
          }, s.prototype.isZero = function() {
            return this.length === 1 && this.words[0] === 0;
          }, s.prototype.cmpn = function(e4) {
            var t3, r2 = e4 < 0;
            if (this.negative !== 0 && !r2)
              return -1;
            if (this.negative === 0 && r2)
              return 1;
            if (this.strip(), this.length > 1)
              t3 = 1;
            else {
              r2 && (e4 = -e4), n(e4 <= 67108863, "Number is too big");
              var i2 = 0 | this.words[0];
              t3 = i2 === e4 ? 0 : i2 < e4 ? -1 : 1;
            }
            return this.negative !== 0 ? 0 | -t3 : t3;
          }, s.prototype.cmp = function(e4) {
            if (this.negative !== 0 && e4.negative === 0)
              return -1;
            if (this.negative === 0 && e4.negative !== 0)
              return 1;
            var t3 = this.ucmp(e4);
            return this.negative !== 0 ? 0 | -t3 : t3;
          }, s.prototype.ucmp = function(e4) {
            if (this.length > e4.length)
              return 1;
            if (this.length < e4.length)
              return -1;
            for (var t3 = 0, r2 = this.length - 1; r2 >= 0; r2--) {
              var n2 = 0 | this.words[r2], i2 = 0 | e4.words[r2];
              if (n2 !== i2) {
                n2 < i2 ? t3 = -1 : n2 > i2 && (t3 = 1);
                break;
              }
            }
            return t3;
          }, s.prototype.gtn = function(e4) {
            return this.cmpn(e4) === 1;
          }, s.prototype.gt = function(e4) {
            return this.cmp(e4) === 1;
          }, s.prototype.gten = function(e4) {
            return this.cmpn(e4) >= 0;
          }, s.prototype.gte = function(e4) {
            return this.cmp(e4) >= 0;
          }, s.prototype.ltn = function(e4) {
            return this.cmpn(e4) === -1;
          }, s.prototype.lt = function(e4) {
            return this.cmp(e4) === -1;
          }, s.prototype.lten = function(e4) {
            return this.cmpn(e4) <= 0;
          }, s.prototype.lte = function(e4) {
            return this.cmp(e4) <= 0;
          }, s.prototype.eqn = function(e4) {
            return this.cmpn(e4) === 0;
          }, s.prototype.eq = function(e4) {
            return this.cmp(e4) === 0;
          }, s.red = function(e4) {
            return new E(e4);
          }, s.prototype.toRed = function(e4) {
            return n(!this.red, "Already a number in reduction context"), n(this.negative === 0, "red works only with positives"), e4.convertTo(this)._forceRed(e4);
          }, s.prototype.fromRed = function() {
            return n(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
          }, s.prototype._forceRed = function(e4) {
            return this.red = e4, this;
          }, s.prototype.forceRed = function(e4) {
            return n(!this.red, "Already a number in reduction context"), this._forceRed(e4);
          }, s.prototype.redAdd = function(e4) {
            return n(this.red, "redAdd works only with red numbers"), this.red.add(this, e4);
          }, s.prototype.redIAdd = function(e4) {
            return n(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, e4);
          }, s.prototype.redSub = function(e4) {
            return n(this.red, "redSub works only with red numbers"), this.red.sub(this, e4);
          }, s.prototype.redISub = function(e4) {
            return n(this.red, "redISub works only with red numbers"), this.red.isub(this, e4);
          }, s.prototype.redShl = function(e4) {
            return n(this.red, "redShl works only with red numbers"), this.red.shl(this, e4);
          }, s.prototype.redMul = function(e4) {
            return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, e4), this.red.mul(this, e4);
          }, s.prototype.redIMul = function(e4) {
            return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, e4), this.red.imul(this, e4);
          }, s.prototype.redSqr = function() {
            return n(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
          }, s.prototype.redISqr = function() {
            return n(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
          }, s.prototype.redSqrt = function() {
            return n(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
          }, s.prototype.redInvm = function() {
            return n(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
          }, s.prototype.redNeg = function() {
            return n(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
          }, s.prototype.redPow = function(e4) {
            return n(this.red && !e4.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, e4);
          };
          var g = {k256: null, p224: null, p192: null, p25519: null};
          function b(e4, t3) {
            this.name = e4, this.p = new s(t3, 16), this.n = this.p.bitLength(), this.k = new s(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
          }
          function m() {
            b.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
          }
          function v() {
            b.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
          }
          function w() {
            b.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
          }
          function _() {
            b.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
          }
          function E(e4) {
            if (typeof e4 == "string") {
              var t3 = s._prime(e4);
              this.m = t3.p, this.prime = t3;
            } else
              n(e4.gtn(1), "modulus must be greater than 1"), this.m = e4, this.prime = null;
          }
          function S(e4) {
            E.call(this, e4), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new s(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
          }
          b.prototype._tmp = function() {
            var e4 = new s(null);
            return e4.words = new Array(Math.ceil(this.n / 13)), e4;
          }, b.prototype.ireduce = function(e4) {
            var t3, r2 = e4;
            do {
              this.split(r2, this.tmp), t3 = (r2 = (r2 = this.imulK(r2)).iadd(this.tmp)).bitLength();
            } while (t3 > this.n);
            var n2 = t3 < this.n ? -1 : r2.ucmp(this.p);
            return n2 === 0 ? (r2.words[0] = 0, r2.length = 1) : n2 > 0 ? r2.isub(this.p) : r2.strip !== void 0 ? r2.strip() : r2._strip(), r2;
          }, b.prototype.split = function(e4, t3) {
            e4.iushrn(this.n, 0, t3);
          }, b.prototype.imulK = function(e4) {
            return e4.imul(this.k);
          }, i(m, b), m.prototype.split = function(e4, t3) {
            for (var r2 = Math.min(e4.length, 9), n2 = 0; n2 < r2; n2++)
              t3.words[n2] = e4.words[n2];
            if (t3.length = r2, e4.length <= 9)
              return e4.words[0] = 0, void (e4.length = 1);
            var i2 = e4.words[9];
            for (t3.words[t3.length++] = 4194303 & i2, n2 = 10; n2 < e4.length; n2++) {
              var s2 = 0 | e4.words[n2];
              e4.words[n2 - 10] = (4194303 & s2) << 4 | i2 >>> 22, i2 = s2;
            }
            i2 >>>= 22, e4.words[n2 - 10] = i2, i2 === 0 && e4.length > 10 ? e4.length -= 10 : e4.length -= 9;
          }, m.prototype.imulK = function(e4) {
            e4.words[e4.length] = 0, e4.words[e4.length + 1] = 0, e4.length += 2;
            for (var t3 = 0, r2 = 0; r2 < e4.length; r2++) {
              var n2 = 0 | e4.words[r2];
              t3 += 977 * n2, e4.words[r2] = 67108863 & t3, t3 = 64 * n2 + (t3 / 67108864 | 0);
            }
            return e4.words[e4.length - 1] === 0 && (e4.length--, e4.words[e4.length - 1] === 0 && e4.length--), e4;
          }, i(v, b), i(w, b), i(_, b), _.prototype.imulK = function(e4) {
            for (var t3 = 0, r2 = 0; r2 < e4.length; r2++) {
              var n2 = 19 * (0 | e4.words[r2]) + t3, i2 = 67108863 & n2;
              n2 >>>= 26, e4.words[r2] = i2, t3 = n2;
            }
            return t3 !== 0 && (e4.words[e4.length++] = t3), e4;
          }, s._prime = function(e4) {
            if (g[e4])
              return g[e4];
            var t3;
            if (e4 === "k256")
              t3 = new m();
            else if (e4 === "p224")
              t3 = new v();
            else if (e4 === "p192")
              t3 = new w();
            else {
              if (e4 !== "p25519")
                throw new Error("Unknown prime " + e4);
              t3 = new _();
            }
            return g[e4] = t3, t3;
          }, E.prototype._verify1 = function(e4) {
            n(e4.negative === 0, "red works only with positives"), n(e4.red, "red works only with red numbers");
          }, E.prototype._verify2 = function(e4, t3) {
            n((e4.negative | t3.negative) == 0, "red works only with positives"), n(e4.red && e4.red === t3.red, "red works only with red numbers");
          }, E.prototype.imod = function(e4) {
            return this.prime ? this.prime.ireduce(e4)._forceRed(this) : e4.umod(this.m)._forceRed(this);
          }, E.prototype.neg = function(e4) {
            return e4.isZero() ? e4.clone() : this.m.sub(e4)._forceRed(this);
          }, E.prototype.add = function(e4, t3) {
            this._verify2(e4, t3);
            var r2 = e4.add(t3);
            return r2.cmp(this.m) >= 0 && r2.isub(this.m), r2._forceRed(this);
          }, E.prototype.iadd = function(e4, t3) {
            this._verify2(e4, t3);
            var r2 = e4.iadd(t3);
            return r2.cmp(this.m) >= 0 && r2.isub(this.m), r2;
          }, E.prototype.sub = function(e4, t3) {
            this._verify2(e4, t3);
            var r2 = e4.sub(t3);
            return r2.cmpn(0) < 0 && r2.iadd(this.m), r2._forceRed(this);
          }, E.prototype.isub = function(e4, t3) {
            this._verify2(e4, t3);
            var r2 = e4.isub(t3);
            return r2.cmpn(0) < 0 && r2.iadd(this.m), r2;
          }, E.prototype.shl = function(e4, t3) {
            return this._verify1(e4), this.imod(e4.ushln(t3));
          }, E.prototype.imul = function(e4, t3) {
            return this._verify2(e4, t3), this.imod(e4.imul(t3));
          }, E.prototype.mul = function(e4, t3) {
            return this._verify2(e4, t3), this.imod(e4.mul(t3));
          }, E.prototype.isqr = function(e4) {
            return this.imul(e4, e4.clone());
          }, E.prototype.sqr = function(e4) {
            return this.mul(e4, e4);
          }, E.prototype.sqrt = function(e4) {
            if (e4.isZero())
              return e4.clone();
            var t3 = this.m.andln(3);
            if (n(t3 % 2 == 1), t3 === 3) {
              var r2 = this.m.add(new s(1)).iushrn(2);
              return this.pow(e4, r2);
            }
            for (var i2 = this.m.subn(1), o2 = 0; !i2.isZero() && i2.andln(1) === 0; )
              o2++, i2.iushrn(1);
            n(!i2.isZero());
            var a2 = new s(1).toRed(this), c2 = a2.redNeg(), u2 = this.m.subn(1).iushrn(1), h2 = this.m.bitLength();
            for (h2 = new s(2 * h2 * h2).toRed(this); this.pow(h2, u2).cmp(c2) !== 0; )
              h2.redIAdd(c2);
            for (var f2 = this.pow(h2, i2), d2 = this.pow(e4, i2.addn(1).iushrn(1)), l2 = this.pow(e4, i2), p2 = o2; l2.cmp(a2) !== 0; ) {
              for (var y2 = l2, g2 = 0; y2.cmp(a2) !== 0; g2++)
                y2 = y2.redSqr();
              n(g2 < p2);
              var b2 = this.pow(f2, new s(1).iushln(p2 - g2 - 1));
              d2 = d2.redMul(b2), f2 = b2.redSqr(), l2 = l2.redMul(f2), p2 = g2;
            }
            return d2;
          }, E.prototype.invm = function(e4) {
            var t3 = e4._invmp(this.m);
            return t3.negative !== 0 ? (t3.negative = 0, this.imod(t3).redNeg()) : this.imod(t3);
          }, E.prototype.pow = function(e4, t3) {
            if (t3.isZero())
              return new s(1).toRed(this);
            if (t3.cmpn(1) === 0)
              return e4.clone();
            var r2 = new Array(16);
            r2[0] = new s(1).toRed(this), r2[1] = e4;
            for (var n2 = 2; n2 < r2.length; n2++)
              r2[n2] = this.mul(r2[n2 - 1], e4);
            var i2 = r2[0], o2 = 0, a2 = 0, c2 = t3.bitLength() % 26;
            for (c2 === 0 && (c2 = 26), n2 = t3.length - 1; n2 >= 0; n2--) {
              for (var u2 = t3.words[n2], h2 = c2 - 1; h2 >= 0; h2--) {
                var f2 = u2 >> h2 & 1;
                i2 !== r2[0] && (i2 = this.sqr(i2)), f2 !== 0 || o2 !== 0 ? (o2 <<= 1, o2 |= f2, (++a2 === 4 || n2 === 0 && h2 === 0) && (i2 = this.mul(i2, r2[o2]), a2 = 0, o2 = 0)) : a2 = 0;
              }
              c2 = 26;
            }
            return i2;
          }, E.prototype.convertTo = function(e4) {
            var t3 = e4.umod(this.m);
            return t3 === e4 ? t3.clone() : t3;
          }, E.prototype.convertFrom = function(e4) {
            var t3 = e4.clone();
            return t3.red = null, t3;
          }, s.mont = function(e4) {
            return new S(e4);
          }, i(S, E), S.prototype.convertTo = function(e4) {
            return this.imod(e4.ushln(this.shift));
          }, S.prototype.convertFrom = function(e4) {
            var t3 = this.imod(e4.mul(this.rinv));
            return t3.red = null, t3;
          }, S.prototype.imul = function(e4, t3) {
            if (e4.isZero() || t3.isZero())
              return e4.words[0] = 0, e4.length = 1, e4;
            var r2 = e4.imul(t3), n2 = r2.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i2 = r2.isub(n2).iushrn(this.shift), s2 = i2;
            return i2.cmp(this.m) >= 0 ? s2 = i2.isub(this.m) : i2.cmpn(0) < 0 && (s2 = i2.iadd(this.m)), s2._forceRed(this);
          }, S.prototype.mul = function(e4, t3) {
            if (e4.isZero() || t3.isZero())
              return new s(0)._forceRed(this);
            var r2 = e4.mul(t3), n2 = r2.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i2 = r2.isub(n2).iushrn(this.shift), o2 = i2;
            return i2.cmp(this.m) >= 0 ? o2 = i2.isub(this.m) : i2.cmpn(0) < 0 && (o2 = i2.iadd(this.m)), o2._forceRed(this);
          }, S.prototype.invm = function(e4) {
            return this.imod(e4._invmp(this.m).mul(this.r2))._forceRed(this);
          };
        }(e2);
      }).call(this, r(103)(e));
    }, function(e, t, r) {
      "use strict";
      const n = r(237), i = r(492), s = r(136);
      t.aes = i, t.hmac = n, t.keys = s, t.randomBytes = r(102), t.pbkdf2 = r(495);
    }, function(e, t, r) {
      "use strict";
      e.exports = async (e2) => {
        let t2;
        for await (const r2 of e2)
          t2 = r2;
        return t2;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(293), i = r(174), s = r(36), o = r(0), a = r(4);
      e.exports = async (e2, t2, r2) => {
        const c = Array.isArray(t2);
        let u = Array.isArray(t2) ? t2 : [t2];
        const h = await n(e2, r2);
        return u = u.map((e3) => {
          if (a.isCID(e3) && (e3 = "/ipfs/" + e3), (e3 = (e3 = (e3 || "").trim()).replace(/(\/\/+)/g, "/")).endsWith("/") && e3.length > 1 && (e3 = e3.substring(0, e3.length - 1)), !e3)
            throw o(new Error("paths must not be empty"), "ERR_NO_PATH");
          if (e3.substring(0, 1) !== "/")
            throw o(new Error("paths must start with a leading slash"), "ERR_INVALID_PATH");
          e3.substring(e3.length - 1) === "/" && (e3 = e3.substring(0, e3.length - 1));
          const t3 = i(e3);
          if (t3[0] === "ipfs") {
            let e4;
            return e4 = t3.length === 2 ? "/" + t3.join("/") : "/" + t3.slice(0, t3.length - 1).join("/"), {type: "ipfs", depth: t3.length - 2, mfsPath: "/" + t3.join("/"), mfsDirectory: e4, parts: t3, path: "/" + t3.join("/"), name: t3[t3.length - 1]};
          }
          const r3 = `/ipfs/${h}${t3.length ? "/" + t3.join("/") : ""}`, n2 = `/ipfs/${h}/${t3.slice(0, t3.length - 1).join("/")}`;
          return {type: "mfs", depth: t3.length, mfsDirectory: n2, mfsPath: r3, parts: t3, path: "/" + t3.join("/"), name: t3[t3.length - 1]};
        }), await Promise.all(u.map(async (t3) => {
          const r3 = t3.type === "mfs" ? t3.mfsPath : t3.path;
          try {
            const n2 = await s(r3, e2.ipld);
            t3.cid = n2.cid, t3.mfsPath = "/ipfs/" + n2.path, t3.unixfs = n2.unixfs, t3.content = n2.content;
          } catch (n2) {
            if (n2.code !== "ERR_NOT_FOUND")
              throw n2;
          }
          t3.exists = Boolean(t3.cid);
        })), c ? u : u[0];
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2) {
        if (!t2) {
          const t3 = new Error(r2 || "Assertion failed");
          throw Error.captureStackTrace && Error.captureStackTrace(t3, e2), t3;
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(7), i = r(11), s = r(20), {Record: o} = r(66), a = s(r(1048)), c = a.Message.MessageType, u = a.Message.ConnectionType;
      class h {
        constructor(e2, t2, r2) {
          if (t2 && !(t2 instanceof Uint8Array))
            throw new Error("Key must be a Uint8Array");
          this.type = e2, this.key = t2, this._clusterLevelRaw = r2, this.closerPeers = [], this.providerPeers = [], this.record = null;
        }
        get clusterLevel() {
          const e2 = this._clusterLevelRaw - 1;
          return e2 < 0 ? 0 : e2;
        }
        set clusterLevel(e2) {
          this._clusterLevelRaw = e2;
        }
        serialize() {
          const e2 = {key: this.key, type: this.type, clusterLevelRaw: this._clusterLevelRaw, closerPeers: this.closerPeers.map(f), providerPeers: this.providerPeers.map(f)};
          return this.record && (this.record instanceof Uint8Array ? e2.record = this.record : e2.record = this.record.serialize()), a.Message.encode(e2);
        }
        static deserialize(e2) {
          const t2 = a.Message.decode(e2), r2 = new h(t2.type, t2.key, t2.clusterLevelRaw);
          return r2.closerPeers = t2.closerPeers.map(d), r2.providerPeers = t2.providerPeers.map(d), t2.record && (r2.record = o.deserialize(t2.record)), r2;
        }
      }
      function f(e2) {
        return {id: e2.id.id, addrs: (e2.multiaddrs || []).map((e3) => e3.bytes), connection: u.CONNECTED};
      }
      function d(e2) {
        return {id: new n(e2.id), multiaddrs: e2.addrs.map((e3) => i(e3))};
      }
      h.TYPES = c, h.CONNECTION_TYPES = u, e.exports = h;
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      r(13), r(78);
      var i = e.exports = n.asn1 = n.asn1 || {};
      function s(e2, t2, r2) {
        if (r2 > t2) {
          var n2 = new Error("Too few bytes to parse DER.");
          throw n2.available = e2.length(), n2.remaining = t2, n2.requested = r2, n2;
        }
      }
      i.Class = {UNIVERSAL: 0, APPLICATION: 64, CONTEXT_SPECIFIC: 128, PRIVATE: 192}, i.Type = {NONE: 0, BOOLEAN: 1, INTEGER: 2, BITSTRING: 3, OCTETSTRING: 4, NULL: 5, OID: 6, ODESC: 7, EXTERNAL: 8, REAL: 9, ENUMERATED: 10, EMBEDDED: 11, UTF8: 12, ROID: 13, SEQUENCE: 16, SET: 17, PRINTABLESTRING: 19, IA5STRING: 22, UTCTIME: 23, GENERALIZEDTIME: 24, BMPSTRING: 30}, i.create = function(e2, t2, r2, s2, o2) {
        if (n.util.isArray(s2)) {
          for (var a = [], c = 0; c < s2.length; ++c)
            s2[c] !== void 0 && a.push(s2[c]);
          s2 = a;
        }
        var u = {tagClass: e2, type: t2, constructed: r2, composed: r2 || n.util.isArray(s2), value: s2};
        return o2 && "bitStringContents" in o2 && (u.bitStringContents = o2.bitStringContents, u.original = i.copy(u)), u;
      }, i.copy = function(e2, t2) {
        var r2;
        if (n.util.isArray(e2)) {
          r2 = [];
          for (var s2 = 0; s2 < e2.length; ++s2)
            r2.push(i.copy(e2[s2], t2));
          return r2;
        }
        return typeof e2 == "string" ? e2 : (r2 = {tagClass: e2.tagClass, type: e2.type, constructed: e2.constructed, composed: e2.composed, value: i.copy(e2.value, t2)}, t2 && !t2.excludeBitStringContents && (r2.bitStringContents = e2.bitStringContents), r2);
      }, i.equals = function(e2, t2, r2) {
        if (n.util.isArray(e2)) {
          if (!n.util.isArray(t2))
            return false;
          if (e2.length !== t2.length)
            return false;
          for (var s2 = 0; s2 < e2.length; ++s2)
            if (!i.equals(e2[s2], t2[s2]))
              return false;
          return true;
        }
        if (typeof e2 != typeof t2)
          return false;
        if (typeof e2 == "string")
          return e2 === t2;
        var o2 = e2.tagClass === t2.tagClass && e2.type === t2.type && e2.constructed === t2.constructed && e2.composed === t2.composed && i.equals(e2.value, t2.value);
        return r2 && r2.includeBitStringContents && (o2 = o2 && e2.bitStringContents === t2.bitStringContents), o2;
      }, i.getBerValueLength = function(e2) {
        var t2 = e2.getByte();
        if (t2 !== 128)
          return 128 & t2 ? e2.getInt((127 & t2) << 3) : t2;
      };
      i.fromDer = function(e2, t2) {
        return t2 === void 0 && (t2 = {strict: true, decodeBitStrings: true}), typeof t2 == "boolean" && (t2 = {strict: t2, decodeBitStrings: true}), "strict" in t2 || (t2.strict = true), "decodeBitStrings" in t2 || (t2.decodeBitStrings = true), typeof e2 == "string" && (e2 = n.util.createBuffer(e2)), function e3(t3, r2, n2, o2) {
          var a;
          s(t3, r2, 2);
          var c = t3.getByte();
          r2--;
          var u = 192 & c, h = 31 & c;
          a = t3.length();
          var f, d, l = function(e4, t4) {
            var r3 = e4.getByte();
            if (t4--, r3 !== 128) {
              var n3;
              if (128 & r3) {
                var i2 = 127 & r3;
                s(e4, t4, i2), n3 = e4.getInt(i2 << 3);
              } else
                n3 = r3;
              if (n3 < 0)
                throw new Error("Negative length: " + n3);
              return n3;
            }
          }(t3, r2);
          if (r2 -= a - t3.length(), l !== void 0 && l > r2) {
            if (o2.strict) {
              var p = new Error("Too few bytes to read ASN.1 value.");
              throw p.available = t3.length(), p.remaining = r2, p.requested = l, p;
            }
            l = r2;
          }
          var y = (32 & c) == 32;
          if (y)
            if (f = [], l === void 0)
              for (; ; ) {
                if (s(t3, r2, 2), t3.bytes(2) === String.fromCharCode(0, 0)) {
                  t3.getBytes(2), r2 -= 2;
                  break;
                }
                a = t3.length(), f.push(e3(t3, r2, n2 + 1, o2)), r2 -= a - t3.length();
              }
            else
              for (; l > 0; )
                a = t3.length(), f.push(e3(t3, l, n2 + 1, o2)), r2 -= a - t3.length(), l -= a - t3.length();
          f === void 0 && u === i.Class.UNIVERSAL && h === i.Type.BITSTRING && (d = t3.bytes(l));
          if (f === void 0 && o2.decodeBitStrings && u === i.Class.UNIVERSAL && h === i.Type.BITSTRING && l > 1) {
            var g = t3.read, b = r2, m = 0;
            if (h === i.Type.BITSTRING && (s(t3, r2, 1), m = t3.getByte(), r2--), m === 0)
              try {
                a = t3.length();
                var v = {verbose: o2.verbose, strict: true, decodeBitStrings: true}, w = e3(t3, r2, n2 + 1, v), _ = a - t3.length();
                r2 -= _, h == i.Type.BITSTRING && _++;
                var E = w.tagClass;
                _ !== l || E !== i.Class.UNIVERSAL && E !== i.Class.CONTEXT_SPECIFIC || (f = [w]);
              } catch (A) {
              }
            f === void 0 && (t3.read = g, r2 = b);
          }
          if (f === void 0) {
            if (l === void 0) {
              if (o2.strict)
                throw new Error("Non-constructed ASN.1 object of indefinite length.");
              l = r2;
            }
            if (h === i.Type.BMPSTRING)
              for (f = ""; l > 0; l -= 2)
                s(t3, r2, 2), f += String.fromCharCode(t3.getInt16()), r2 -= 2;
            else
              f = t3.getBytes(l);
          }
          var S = d === void 0 ? null : {bitStringContents: d};
          return i.create(u, h, y, f, S);
        }(e2, e2.length(), 0, t2);
      }, i.toDer = function(e2) {
        var t2 = n.util.createBuffer(), r2 = e2.tagClass | e2.type, s2 = n.util.createBuffer(), o2 = false;
        if ("bitStringContents" in e2 && (o2 = true, e2.original && (o2 = i.equals(e2, e2.original))), o2)
          s2.putBytes(e2.bitStringContents);
        else if (e2.composed) {
          e2.constructed ? r2 |= 32 : s2.putByte(0);
          for (var a = 0; a < e2.value.length; ++a)
            e2.value[a] !== void 0 && s2.putBuffer(i.toDer(e2.value[a]));
        } else if (e2.type === i.Type.BMPSTRING)
          for (a = 0; a < e2.value.length; ++a)
            s2.putInt16(e2.value.charCodeAt(a));
        else
          e2.type === i.Type.INTEGER && e2.value.length > 1 && (e2.value.charCodeAt(0) === 0 && (128 & e2.value.charCodeAt(1)) == 0 || e2.value.charCodeAt(0) === 255 && (128 & e2.value.charCodeAt(1)) == 128) ? s2.putBytes(e2.value.substr(1)) : s2.putBytes(e2.value);
        if (t2.putByte(r2), s2.length() <= 127)
          t2.putByte(127 & s2.length());
        else {
          var c = s2.length(), u = "";
          do {
            u += String.fromCharCode(255 & c), c >>>= 8;
          } while (c > 0);
          t2.putByte(128 | u.length);
          for (a = u.length - 1; a >= 0; --a)
            t2.putByte(u.charCodeAt(a));
        }
        return t2.putBuffer(s2), t2;
      }, i.oidToDer = function(e2) {
        var t2, r2, i2, s2, o2 = e2.split("."), a = n.util.createBuffer();
        a.putByte(40 * parseInt(o2[0], 10) + parseInt(o2[1], 10));
        for (var c = 2; c < o2.length; ++c) {
          t2 = true, r2 = [], i2 = parseInt(o2[c], 10);
          do {
            s2 = 127 & i2, i2 >>>= 7, t2 || (s2 |= 128), r2.push(s2), t2 = false;
          } while (i2 > 0);
          for (var u = r2.length - 1; u >= 0; --u)
            a.putByte(r2[u]);
        }
        return a;
      }, i.derToOid = function(e2) {
        var t2;
        typeof e2 == "string" && (e2 = n.util.createBuffer(e2));
        var r2 = e2.getByte();
        t2 = Math.floor(r2 / 40) + "." + r2 % 40;
        for (var i2 = 0; e2.length() > 0; )
          i2 <<= 7, 128 & (r2 = e2.getByte()) ? i2 += 127 & r2 : (t2 += "." + (i2 + r2), i2 = 0);
        return t2;
      }, i.utcTimeToDate = function(e2) {
        var t2 = new Date(), r2 = parseInt(e2.substr(0, 2), 10);
        r2 = r2 >= 50 ? 1900 + r2 : 2e3 + r2;
        var n2 = parseInt(e2.substr(2, 2), 10) - 1, i2 = parseInt(e2.substr(4, 2), 10), s2 = parseInt(e2.substr(6, 2), 10), o2 = parseInt(e2.substr(8, 2), 10), a = 0;
        if (e2.length > 11) {
          var c = e2.charAt(10), u = 10;
          c !== "+" && c !== "-" && (a = parseInt(e2.substr(10, 2), 10), u += 2);
        }
        if (t2.setUTCFullYear(r2, n2, i2), t2.setUTCHours(s2, o2, a, 0), u && ((c = e2.charAt(u)) === "+" || c === "-")) {
          var h = 60 * parseInt(e2.substr(u + 1, 2), 10) + parseInt(e2.substr(u + 4, 2), 10);
          h *= 6e4, c === "+" ? t2.setTime(+t2 - h) : t2.setTime(+t2 + h);
        }
        return t2;
      }, i.generalizedTimeToDate = function(e2) {
        var t2 = new Date(), r2 = parseInt(e2.substr(0, 4), 10), n2 = parseInt(e2.substr(4, 2), 10) - 1, i2 = parseInt(e2.substr(6, 2), 10), s2 = parseInt(e2.substr(8, 2), 10), o2 = parseInt(e2.substr(10, 2), 10), a = parseInt(e2.substr(12, 2), 10), c = 0, u = 0, h = false;
        e2.charAt(e2.length - 1) === "Z" && (h = true);
        var f = e2.length - 5, d = e2.charAt(f);
        d !== "+" && d !== "-" || (u = 60 * parseInt(e2.substr(f + 1, 2), 10) + parseInt(e2.substr(f + 4, 2), 10), u *= 6e4, d === "+" && (u *= -1), h = true);
        return e2.charAt(14) === "." && (c = 1e3 * parseFloat(e2.substr(14), 10)), h ? (t2.setUTCFullYear(r2, n2, i2), t2.setUTCHours(s2, o2, a, c), t2.setTime(+t2 + u)) : (t2.setFullYear(r2, n2, i2), t2.setHours(s2, o2, a, c)), t2;
      }, i.dateToUtcTime = function(e2) {
        if (typeof e2 == "string")
          return e2;
        var t2 = "", r2 = [];
        r2.push(("" + e2.getUTCFullYear()).substr(2)), r2.push("" + (e2.getUTCMonth() + 1)), r2.push("" + e2.getUTCDate()), r2.push("" + e2.getUTCHours()), r2.push("" + e2.getUTCMinutes()), r2.push("" + e2.getUTCSeconds());
        for (var n2 = 0; n2 < r2.length; ++n2)
          r2[n2].length < 2 && (t2 += "0"), t2 += r2[n2];
        return t2 += "Z";
      }, i.dateToGeneralizedTime = function(e2) {
        if (typeof e2 == "string")
          return e2;
        var t2 = "", r2 = [];
        r2.push("" + e2.getUTCFullYear()), r2.push("" + (e2.getUTCMonth() + 1)), r2.push("" + e2.getUTCDate()), r2.push("" + e2.getUTCHours()), r2.push("" + e2.getUTCMinutes()), r2.push("" + e2.getUTCSeconds());
        for (var n2 = 0; n2 < r2.length; ++n2)
          r2[n2].length < 2 && (t2 += "0"), t2 += r2[n2];
        return t2 += "Z";
      }, i.integerToDer = function(e2) {
        var t2 = n.util.createBuffer();
        if (e2 >= -128 && e2 < 128)
          return t2.putSignedInt(e2, 8);
        if (e2 >= -32768 && e2 < 32768)
          return t2.putSignedInt(e2, 16);
        if (e2 >= -8388608 && e2 < 8388608)
          return t2.putSignedInt(e2, 24);
        if (e2 >= -2147483648 && e2 < 2147483648)
          return t2.putSignedInt(e2, 32);
        var r2 = new Error("Integer too large; max is 32-bits.");
        throw r2.integer = e2, r2;
      }, i.derToInteger = function(e2) {
        typeof e2 == "string" && (e2 = n.util.createBuffer(e2));
        var t2 = 8 * e2.length();
        if (t2 > 32)
          throw new Error("Integer too large; max is 32-bits.");
        return e2.getSignedInt(t2);
      }, i.validate = function(e2, t2, r2, s2) {
        var o2 = false;
        if (e2.tagClass !== t2.tagClass && t2.tagClass !== void 0 || e2.type !== t2.type && t2.type !== void 0)
          s2 && (e2.tagClass !== t2.tagClass && s2.push("[" + t2.name + '] Expected tag class "' + t2.tagClass + '", got "' + e2.tagClass + '"'), e2.type !== t2.type && s2.push("[" + t2.name + '] Expected type "' + t2.type + '", got "' + e2.type + '"'));
        else if (e2.constructed === t2.constructed || t2.constructed === void 0) {
          if (o2 = true, t2.value && n.util.isArray(t2.value))
            for (var a = 0, c = 0; o2 && c < t2.value.length; ++c)
              o2 = t2.value[c].optional || false, e2.value[a] && ((o2 = i.validate(e2.value[a], t2.value[c], r2, s2)) ? ++a : t2.value[c].optional && (o2 = true)), !o2 && s2 && s2.push("[" + t2.name + '] Tag class "' + t2.tagClass + '", type "' + t2.type + '" expected value length "' + t2.value.length + '", got "' + e2.value.length + '"');
          if (o2 && r2) {
            if (t2.capture && (r2[t2.capture] = e2.value), t2.captureAsn1 && (r2[t2.captureAsn1] = e2), t2.captureBitStringContents && "bitStringContents" in e2 && (r2[t2.captureBitStringContents] = e2.bitStringContents), t2.captureBitStringValue && "bitStringContents" in e2)
              if (e2.bitStringContents.length < 2)
                r2[t2.captureBitStringValue] = "";
              else {
                if (e2.bitStringContents.charCodeAt(0) !== 0)
                  throw new Error("captureBitStringValue only supported for zero unused bits");
                r2[t2.captureBitStringValue] = e2.bitStringContents.slice(1);
              }
          }
        } else
          s2 && s2.push("[" + t2.name + '] Expected constructed "' + t2.constructed + '", got "' + e2.constructed + '"');
        return o2;
      };
      var o = /[^\\u0000-\\u00ff]/;
      i.prettyPrint = function(e2, t2, r2) {
        var s2 = "";
        r2 = r2 || 2, (t2 = t2 || 0) > 0 && (s2 += "\n");
        for (var a = "", c = 0; c < t2 * r2; ++c)
          a += " ";
        switch (s2 += a + "Tag: ", e2.tagClass) {
          case i.Class.UNIVERSAL:
            s2 += "Universal:";
            break;
          case i.Class.APPLICATION:
            s2 += "Application:";
            break;
          case i.Class.CONTEXT_SPECIFIC:
            s2 += "Context-Specific:";
            break;
          case i.Class.PRIVATE:
            s2 += "Private:";
        }
        if (e2.tagClass === i.Class.UNIVERSAL)
          switch (s2 += e2.type, e2.type) {
            case i.Type.NONE:
              s2 += " (None)";
              break;
            case i.Type.BOOLEAN:
              s2 += " (Boolean)";
              break;
            case i.Type.INTEGER:
              s2 += " (Integer)";
              break;
            case i.Type.BITSTRING:
              s2 += " (Bit string)";
              break;
            case i.Type.OCTETSTRING:
              s2 += " (Octet string)";
              break;
            case i.Type.NULL:
              s2 += " (Null)";
              break;
            case i.Type.OID:
              s2 += " (Object Identifier)";
              break;
            case i.Type.ODESC:
              s2 += " (Object Descriptor)";
              break;
            case i.Type.EXTERNAL:
              s2 += " (External or Instance of)";
              break;
            case i.Type.REAL:
              s2 += " (Real)";
              break;
            case i.Type.ENUMERATED:
              s2 += " (Enumerated)";
              break;
            case i.Type.EMBEDDED:
              s2 += " (Embedded PDV)";
              break;
            case i.Type.UTF8:
              s2 += " (UTF8)";
              break;
            case i.Type.ROID:
              s2 += " (Relative Object Identifier)";
              break;
            case i.Type.SEQUENCE:
              s2 += " (Sequence)";
              break;
            case i.Type.SET:
              s2 += " (Set)";
              break;
            case i.Type.PRINTABLESTRING:
              s2 += " (Printable String)";
              break;
            case i.Type.IA5String:
              s2 += " (IA5String (ASCII))";
              break;
            case i.Type.UTCTIME:
              s2 += " (UTC time)";
              break;
            case i.Type.GENERALIZEDTIME:
              s2 += " (Generalized time)";
              break;
            case i.Type.BMPSTRING:
              s2 += " (BMP String)";
          }
        else
          s2 += e2.type;
        if (s2 += "\n", s2 += a + "Constructed: " + e2.constructed + "\n", e2.composed) {
          var u = 0, h = "";
          for (c = 0; c < e2.value.length; ++c)
            e2.value[c] !== void 0 && (u += 1, h += i.prettyPrint(e2.value[c], t2 + 1, r2), c + 1 < e2.value.length && (h += ","));
          s2 += a + "Sub values: " + u + h;
        } else {
          if (s2 += a + "Value: ", e2.type === i.Type.OID) {
            var f = i.derToOid(e2.value);
            s2 += f, n.pki && n.pki.oids && f in n.pki.oids && (s2 += " (" + n.pki.oids[f] + ") ");
          }
          if (e2.type === i.Type.INTEGER)
            try {
              s2 += i.derToInteger(e2.value);
            } catch (l) {
              s2 += "0x" + n.util.bytesToHex(e2.value);
            }
          else if (e2.type === i.Type.BITSTRING) {
            if (e2.value.length > 1 ? s2 += "0x" + n.util.bytesToHex(e2.value.slice(1)) : s2 += "(none)", e2.value.length > 0) {
              var d = e2.value.charCodeAt(0);
              d == 1 ? s2 += " (1 unused bit shown)" : d > 1 && (s2 += " (" + d + " unused bits shown)");
            }
          } else
            e2.type === i.Type.OCTETSTRING ? (o.test(e2.value) || (s2 += "(" + e2.value + ") "), s2 += "0x" + n.util.bytesToHex(e2.value)) : e2.type === i.Type.UTF8 ? s2 += n.util.decodeUtf8(e2.value) : e2.type === i.Type.PRINTABLESTRING || e2.type === i.Type.IA5String ? s2 += e2.value : o.test(e2.value) ? s2 += "0x" + n.util.bytesToHex(e2.value) : e2.value.length === 0 ? s2 += "[null]" : s2 += e2.value;
        }
        return s2;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(190), i = r(825), s = (e2, t2, r2) => o(e2, Array.isArray(t2) ? t2 : [{signal: t2, options: r2}]), o = (e2, t2) => (e2 = n(e2), t2 = t2.map(({signal: e3, options: t3}) => ({signal: e3, options: t3 || {}})), async function* () {
        let r2;
        const n2 = () => {
          r2 && r2();
        };
        for (const {signal: e3} of t2)
          e3.addEventListener("abort", n2);
        for (; ; ) {
          let o2;
          try {
            for (const {signal: e3, options: r3} of t2)
              if (e3.aborted) {
                const {abortMessage: e4, abortCode: t3} = r3;
                throw new i(e4, t3);
              }
            const n3 = new Promise((e3, n4) => {
              r2 = () => {
                const {options: e4} = t2.find(({signal: e5}) => e5.aborted), {abortMessage: r3, abortCode: s2} = e4;
                n4(new i(r3, s2));
              };
            });
            o2 = await Promise.race([n3, e2.next()]), r2 = null;
          } catch (s2) {
            for (const {signal: e3} of t2)
              e3.removeEventListener("abort", n2);
            const r3 = t2.find(({signal: e3}) => e3.aborted), i2 = s2.type === "aborted" && r3;
            if (i2 && r3.options.onAbort && await r3.options.onAbort(e2), typeof e2.return == "function" && await e2.return(), i2 && r3.options.returnOnAbort)
              return;
            throw s2;
          }
          if (o2.done)
            break;
          yield o2.value;
        }
        for (const {signal: e3} of t2)
          e3.removeEventListener("abort", n2);
      }()), a = (e2, t2, r2) => c(e2, Array.isArray(t2) ? t2 : [{signal: t2, options: r2}]), c = (e2, t2) => (r2) => e2(o(r2, t2)), u = (e2, t2) => ({sink: c(e2.sink, t2), source: o(e2.source, t2)});
      e.exports = s, e.exports.AbortError = i, e.exports.source = s, e.exports.sink = a, e.exports.transform = a, e.exports.duplex = (e2, t2, r2) => u(e2, Array.isArray(t2) ? t2 : [{signal: t2, options: r2}]);
    }, function(e, t, r) {
      "use strict";
      const n = r(1), i = r(19), s = (e2, t2, r2) => {
        let n2 = 0;
        const i2 = r2.length;
        for (; n2 < i2; ) {
          if (e2(t2, r2[n2]))
            return true;
          n2 += 1;
        }
        return false;
      };
      e.exports = {logger: (e2, t2) => {
        const r2 = ["bitswap"];
        t2 && r2.push(t2), e2 && r2.push("" + e2.toB58String().slice(0, 8));
        const i2 = n(r2.join(":"));
        return i2.error = n(r2.concat(["error"]).join(":")), i2;
      }, includesWith: s, uniqWith: (e2, t2) => {
        let r2 = 0;
        const n2 = t2.length, i2 = [];
        let o;
        for (; r2 < n2; )
          o = t2[r2], s(e2, o, i2) || (i2[i2.length] = o), r2 += 1;
        return i2;
      }, groupBy: (e2, t2) => t2.reduce((t3, r2) => {
        const n2 = e2(r2);
        return t3[n2] ? t3[n2].push(r2) : t3[n2] = [r2], t3;
      }, {}), pullAllWith: (e2, t2, r2) => t2.filter((t3) => !s(e2, t3, r2)), sortBy: (e2, t2) => Array.prototype.slice.call(t2, 0).sort((t3, r2) => {
        const n2 = e2(t3), i2 = e2(r2);
        return n2 < i2 ? -1 : n2 > i2 ? 1 : 0;
      }), isMapEqual: (e2, t2) => {
        if (e2.size !== t2.size)
          return false;
        for (const [r2, n2] of e2) {
          if (!t2.has(r2))
            return false;
          const e3 = t2.get(r2);
          if (typeof n2.equals == "function" && !n2.equals(e3))
            return false;
          if (n2._data && !i(n2._data, e3._data))
            return false;
        }
        return true;
      }};
    }, function(e, t, r) {
      "use strict";
      const {AbortController: n, AbortSignal: i} = typeof self != "undefined" ? self : typeof window != "undefined" ? window : void 0;
      e.exports = n, e.exports.AbortSignal = i, e.exports.default = n;
    }, function(e, t, r) {
      "use strict";
      const n = r(30), i = r(135), {names: s} = r(407), o = r(5), a = r(6), c = r(27), u = {};
      for (const y in s)
        u[s[y]] = y;
      function h(e2) {
        if (!(e2 instanceof Uint8Array))
          throw new Error("multihash must be a Uint8Array");
        if (e2.length < 2)
          throw new Error("multihash too short. must be > 2 bytes.");
        const t2 = i.decode(e2);
        if (!l(t2))
          throw new Error("multihash unknown function code: 0x" + t2.toString(16));
        e2 = e2.slice(i.decode.bytes);
        const r2 = i.decode(e2);
        if (r2 < 0)
          throw new Error("multihash invalid length: " + r2);
        if ((e2 = e2.slice(i.decode.bytes)).length !== r2)
          throw new Error("multihash length inconsistent: 0x" + o(e2, "base16"));
        return {code: t2, name: u[t2], length: r2, digest: e2};
      }
      function f(e2) {
        let t2 = e2;
        if (typeof e2 == "string") {
          if (s[e2] === void 0)
            throw new Error("Unrecognized hash function named: " + e2);
          t2 = s[e2];
        }
        if (typeof t2 != "number")
          throw new Error("Hash function code should be a number. Got: " + t2);
        if (u[t2] === void 0 && !d(t2))
          throw new Error("Unrecognized function code: " + t2);
        return t2;
      }
      function d(e2) {
        return e2 > 0 && e2 < 16;
      }
      function l(e2) {
        return !!d(e2) || !!u[e2];
      }
      function p(e2) {
        h(e2);
      }
      e.exports = {names: s, codes: Object.freeze(u), toHexString: function(e2) {
        if (!(e2 instanceof Uint8Array))
          throw new Error("must be passed a Uint8Array");
        return o(e2, "base16");
      }, fromHexString: function(e2) {
        return a(e2, "base16");
      }, toB58String: function(e2) {
        if (!(e2 instanceof Uint8Array))
          throw new Error("must be passed a Uint8Array");
        return o(n.encode("base58btc", e2)).slice(1);
      }, fromB58String: function(e2) {
        const t2 = e2 instanceof Uint8Array ? o(e2) : e2;
        return n.decode("z" + t2);
      }, decode: h, encode: function(e2, t2, r2) {
        if (!e2 || t2 === void 0)
          throw new Error("multihash encode requires at least two args: digest, code");
        const n2 = f(t2);
        if (!(e2 instanceof Uint8Array))
          throw new Error("digest should be a Uint8Array");
        if (r2 == null && (r2 = e2.length), r2 && e2.length !== r2)
          throw new Error("digest length should be equal to specified length.");
        const s2 = i.encode(n2), o2 = i.encode(r2);
        return c([s2, o2, e2], s2.length + o2.length + e2.length);
      }, coerceCode: f, isAppCode: d, validate: p, prefix: function(e2) {
        return p(e2), e2.subarray(0, 2);
      }, isValidCode: l};
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      e.exports = n.md = n.md || {}, n.md.algorithms = n.md.algorithms || {};
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      r(79), r(445), r(446), r(13), n.random && n.random.getBytes ? e.exports = n.random : function(t2) {
        var r2 = {}, i = new Array(4), s = n.util.createBuffer();
        function o() {
          var e2 = n.prng.create(r2);
          return e2.getBytes = function(t3, r3) {
            return e2.generate(t3, r3);
          }, e2.getBytesSync = function(t3) {
            return e2.generate(t3);
          }, e2;
        }
        r2.formatKey = function(e2) {
          var t3 = n.util.createBuffer(e2);
          return (e2 = new Array(4))[0] = t3.getInt32(), e2[1] = t3.getInt32(), e2[2] = t3.getInt32(), e2[3] = t3.getInt32(), n.aes._expandKey(e2, false);
        }, r2.formatSeed = function(e2) {
          var t3 = n.util.createBuffer(e2);
          return (e2 = new Array(4))[0] = t3.getInt32(), e2[1] = t3.getInt32(), e2[2] = t3.getInt32(), e2[3] = t3.getInt32(), e2;
        }, r2.cipher = function(e2, t3) {
          return n.aes._updateBlock(e2, t3, i, false), s.putInt32(i[0]), s.putInt32(i[1]), s.putInt32(i[2]), s.putInt32(i[3]), s.getBytes();
        }, r2.increment = function(e2) {
          return ++e2[3], e2;
        }, r2.md = n.md.sha256;
        var a = o(), c = null, u = n.util.globalScope, h = u.crypto || u.msCrypto;
        if (h && h.getRandomValues && (c = function(e2) {
          return h.getRandomValues(e2);
        }), n.options.usePureJavaScript || !n.util.isNodejs && !c) {
          if (typeof window == "undefined" || window.document, a.collectInt(+new Date(), 32), typeof navigator != "undefined") {
            var f = "";
            for (var d in navigator)
              try {
                typeof navigator[d] == "string" && (f += navigator[d]);
              } catch (l) {
              }
            a.collect(f), f = null;
          }
          t2 && (t2().mousemove(function(e2) {
            a.collectInt(e2.clientX, 16), a.collectInt(e2.clientY, 16);
          }), t2().keypress(function(e2) {
            a.collectInt(e2.charCode, 8);
          }));
        }
        if (n.random)
          for (var d in a)
            n.random[d] = a[d];
        else
          n.random = a;
        n.random.createInstance = o, e.exports = n.random;
      }(typeof jQuery != "undefined" ? jQuery : null);
    }, function(e, t, r) {
      "use strict";
      function n(e2, t2) {
        if (!e2)
          throw new Error(t2 || "Assertion failed");
      }
      e.exports = n, n.equal = function(e2, t2, r2) {
        if (e2 != t2)
          throw new Error(r2 || "Assertion failed: " + e2 + " != " + t2);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(48), i = r(30), s = r(11), o = r(60), a = r(4), {URL: c} = r(504), u = r(5), h = /^https?:\/\/[^/]+\/(ip[fn]s)\/([^/?#]+)/, f = /^\/(ip[fn]s)\/([^/?#]+)/, d = /^https?:\/\/([^/]+)\.(ip[fn]s)\.[^/?]+/, l = /^(([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])\.)+([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])$/;
      function p(e2) {
        try {
          return new a(e2), true;
        } catch (t2) {
          return false;
        }
      }
      function y(e2) {
        if (!e2)
          return false;
        if (s.isMultiaddr(e2))
          return true;
        try {
          return new s(e2), true;
        } catch (t2) {
          return false;
        }
      }
      function g(e2, t2, r2 = 1, n2 = 2) {
        const i2 = v(e2);
        if (!i2)
          return false;
        const s2 = i2.match(t2);
        if (!s2)
          return false;
        if (s2[r2] !== "ipfs")
          return false;
        let o2 = s2[n2];
        return o2 && t2 === d && (o2 = o2.toLowerCase()), p(o2);
      }
      function b(e2, t2, r2 = 1, n2) {
        const i2 = v(e2);
        if (!i2)
          return false;
        const s2 = i2.match(t2);
        if (!s2)
          return false;
        if (s2[r2] !== "ipns")
          return false;
        let o2 = s2[n2];
        if (o2 && t2 === d) {
          if (o2 = o2.toLowerCase(), p(o2))
            return true;
          try {
            const {hostname: e3} = new c("http://" + o2);
            return l.test(e3);
          } catch (a2) {
            return false;
          }
        }
        return true;
      }
      function m(e2) {
        return typeof e2 == "string";
      }
      function v(e2) {
        return e2 instanceof Uint8Array ? u(e2, "base58btc") : !!m(e2) && e2;
      }
      const w = (e2) => g(e2, d, 2, 1), _ = (e2) => b(e2, d, 2, 1), E = (e2) => w(e2) || _(e2), S = (e2) => g(e2, h) || w(e2), A = (e2) => b(e2, h) || _(e2), I = (e2) => S(e2) || A(e2) || E(e2), k = (e2) => g(e2, f) || b(e2, f);
      e.exports = {multihash: function(e2) {
        const t2 = v(e2);
        try {
          return n.decode(i.decode("z" + t2)), true;
        } catch (r2) {
          return false;
        }
      }, multiaddr: y, peerMultiaddr: function(e2) {
        return y(e2) && o.IPFS.matches(e2);
      }, cid: p, base32cid: (e2) => function(e3) {
        try {
          return i.isEncoded(e3);
        } catch (t2) {
          return false;
        }
      }(e2) === "base32" && p(e2), ipfsSubdomain: w, ipnsSubdomain: _, subdomain: E, subdomainGatewayPattern: d, ipfsUrl: S, ipnsUrl: A, url: I, pathGatewayPattern: h, ipfsPath: (e2) => g(e2, f), ipnsPath: (e2) => b(e2, f), path: k, pathPattern: f, urlOrPath: (e2) => I(e2) || k(e2), cidPath: (e2) => m(e2) && !p(e2) && g("/ipfs/" + e2, f)};
    }, function(e, t, r) {
      "use strict";
      var n = r(109), i = Object.keys || function(e2) {
        var t2 = [];
        for (var r2 in e2)
          t2.push(r2);
        return t2;
      };
      e.exports = f;
      var s = Object.create(r(85));
      s.inherits = r(18);
      var o = r(266), a = r(157);
      s.inherits(f, o);
      for (var c = i(a.prototype), u = 0; u < c.length; u++) {
        var h = c[u];
        f.prototype[h] || (f.prototype[h] = a.prototype[h]);
      }
      function f(e2) {
        if (!(this instanceof f))
          return new f(e2);
        o.call(this, e2), a.call(this, e2), e2 && e2.readable === false && (this.readable = false), e2 && e2.writable === false && (this.writable = false), this.allowHalfOpen = true, e2 && e2.allowHalfOpen === false && (this.allowHalfOpen = false), this.once("end", d);
      }
      function d() {
        this.allowHalfOpen || this._writableState.ended || n.nextTick(l, this);
      }
      function l(e2) {
        e2.end();
      }
      Object.defineProperty(f.prototype, "writableHighWaterMark", {enumerable: false, get: function() {
        return this._writableState.highWaterMark;
      }}), Object.defineProperty(f.prototype, "destroyed", {get: function() {
        return this._readableState !== void 0 && this._writableState !== void 0 && (this._readableState.destroyed && this._writableState.destroyed);
      }, set: function(e2) {
        this._readableState !== void 0 && this._writableState !== void 0 && (this._readableState.destroyed = e2, this._writableState.destroyed = e2);
      }}), f.prototype._destroy = function(e2, t2) {
        this.push(null), this.end(), n.nextTick(t2, e2);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(29).BigNumber;
      t.MT = {POS_INT: 0, NEG_INT: 1, BYTE_STRING: 2, UTF8_STRING: 3, ARRAY: 4, MAP: 5, TAG: 6, SIMPLE_FLOAT: 7}, t.TAG = {DATE_STRING: 0, DATE_EPOCH: 1, POS_BIGINT: 2, NEG_BIGINT: 3, DECIMAL_FRAC: 4, BIGFLOAT: 5, BASE64URL_EXPECTED: 21, BASE64_EXPECTED: 22, BASE16_EXPECTED: 23, CBOR: 24, URI: 32, BASE64URL: 33, BASE64: 34, REGEXP: 35, MIME: 36}, t.NUMBYTES = {ZERO: 0, ONE: 24, TWO: 25, FOUR: 26, EIGHT: 27, INDEFINITE: 31}, t.SIMPLE = {FALSE: 20, TRUE: 21, NULL: 22, UNDEFINED: 23}, t.SYMS = {NULL: Symbol("null"), UNDEFINED: Symbol("undef"), PARENT: Symbol("parent"), BREAK: Symbol("break"), STREAM: Symbol("stream")}, t.SHIFT32 = 4294967296, t.BI = {MINUS_ONE: -1, MAXINT32: 4294967295, MAXINT64: "0xffffffffffffffff", SHIFT32: t.SHIFT32};
      const i = new n(-1);
      t.BN = {MINUS_ONE: i, NEG_MAX: i.minus(new n(Number.MAX_SAFE_INTEGER.toString(16), 16)), MAXINT: new n("0x20000000000000"), MAXINT32: new n(4294967295), MAXINT64: new n("0xffffffffffffffff"), SHIFT32: new n(t.SHIFT32)};
    }, function(e, t, r) {
      "use strict";
      function n(e2, t2) {
        return t2 === void 0 ? (t3) => n(e2, t3) : t2[Symbol.asyncIterator] ? async function* (e3, t3) {
          let r2 = [];
          for await (const n2 of t3)
            r2.push(n2), r2.length === e3 && (yield r2, r2 = []);
          r2.length > 0 && (yield r2);
        }(e2, t2) : function* (e3, t3) {
          let r2 = [];
          for (const n2 of t3)
            r2.push(n2), r2.length === e3 && (yield r2, r2 = []);
          r2.length > 0 && (yield r2);
        }(e2, t2);
      }
      function i(e2) {
        if (typeof e2.next == "function")
          return e2;
        if (typeof e2[Symbol.iterator] == "function")
          return e2[Symbol.iterator]();
        if (typeof e2[Symbol.asyncIterator] == "function")
          return e2[Symbol.asyncIterator]();
        throw new TypeError('"values" does not to conform to any of the iterator or iterable protocols');
      }
      function s() {
        let e2, t2;
        return {promise: new Promise((r2, n2) => {
          t2 = r2, e2 = n2;
        }), reject: e2, resolve: t2};
      }
      function o(e2, t2) {
        const r2 = i(t2), n2 = [], o2 = [];
        let a2 = false, c2 = false;
        async function u2() {
          if (!c2 && !(a2 || n2.length >= e2)) {
            a2 = true;
            try {
              const {done: e3, value: t3} = await r2.next();
              e3 ? c2 = true : n2.push({value: t3});
            } catch (t3) {
              c2 = true, n2.push({error: t3});
            }
            !function() {
              for (; o2.length > 0 && n2.length > 0; ) {
                const e3 = o2.shift(), {error: t3, value: r3} = n2.shift();
                t3 ? e3.reject(t3) : e3.resolve({done: false, value: r3});
              }
              for (; o2.length > 0 && c2; ) {
                const {resolve: e3} = o2.shift();
                e3({done: true, value: void 0});
              }
            }(), a2 = false, u2();
          }
        }
        const h2 = {next: async function() {
          if (n2.length > 0) {
            const {error: e4, value: t3} = n2.shift();
            if (e4)
              throw e4;
            return u2(), {done: false, value: t3};
          }
          if (c2)
            return {done: true, value: void 0};
          const e3 = s();
          return o2.push(e3), u2(), e3.promise;
        }, [Symbol.asyncIterator]: () => h2};
        return h2;
      }
      function a(e2, t2) {
        return t2 === void 0 ? (t3) => a(e2, t3) : e2 === 0 ? t2 : t2[Symbol.asyncIterator] ? o(e2, t2) : function* (e3, t3) {
          const r2 = [];
          let n2;
          try {
            for (const n3 of t3)
              r2.push(n3), r2.length <= e3 || (yield r2.shift());
          } catch (i2) {
            n2 = i2;
          }
          for (const s2 of r2)
            yield s2;
          if (n2)
            throw n2;
        }(e2, t2);
      }
      function c(e2) {
        return e2[Symbol.asyncIterator] ? async function(e3) {
          const t2 = [];
          for await (const r2 of e3)
            t2.push(r2);
          return t2;
        }(e2) : Array.from(e2);
      }
      function u(...e2) {
        return e2.find((e3) => e3[Symbol.asyncIterator] !== void 0) ? async function* (e3) {
          for await (const t2 of e3)
            yield* t2;
        }(e2) : function* (e3) {
          for (const t2 of e3)
            yield* t2;
        }(e2);
      }
      function h(e2) {
        if (e2[Symbol.asyncIterator])
          return async function(e3) {
            for await (const t2 of e3)
              ;
          }(e2);
        for (const t2 of e2)
          ;
      }
      async function* f(e2, t2) {
        for await (const r2 of t2)
          await e2(r2) && (yield r2);
      }
      function d(e2, t2) {
        return t2 === void 0 ? (t3) => f(e2, t3) : f(e2, t2);
      }
      async function* l(e2) {
        for await (const t2 of e2)
          t2 && typeof t2 != "string" && (t2[Symbol.iterator] || t2[Symbol.asyncIterator]) ? yield* l(t2) : yield t2;
      }
      async function* p(e2, t2) {
        for await (const r2 of t2)
          yield await e2(r2);
      }
      function y(e2, t2) {
        return t2 === void 0 ? (t3) => p(e2, t3) : p(e2, t2);
      }
      function g(e2, t2) {
        return t2 === void 0 ? (t3) => g(e2, t3) : d((e3) => e3 != null, l(y(e2, t2)));
      }
      function b(e2, t2, r2) {
        const n2 = i(r2), o2 = [], a2 = [];
        let c2 = false, u2 = false, h2 = 0, f2 = null;
        function d2() {
          for (; a2.length > 0 && o2.length > 0; ) {
            const {resolve: e3} = a2.shift();
            e3({done: false, value: o2.shift()});
          }
          for (; a2.length > 0 && h2 === 0 && c2; ) {
            const {resolve: e3, reject: t3} = a2.shift();
            f2 ? (t3(f2), f2 = null) : e3({done: true, value: void 0});
          }
        }
        async function l2() {
          if (c2)
            d2();
          else if (!(u2 || h2 + o2.length >= e2)) {
            u2 = true, h2++;
            try {
              const {done: e3, value: r3} = await n2.next();
              e3 ? (c2 = true, h2--, d2()) : async function(e4) {
                try {
                  const r4 = await t2(e4);
                  if (r4 && r4[Symbol.asyncIterator])
                    for await (const e5 of r4)
                      o2.push(e5);
                  else
                    o2.push(r4);
                } catch (r4) {
                  c2 = true, f2 = r4;
                }
                h2--, d2(), l2();
              }(r3);
            } catch (r3) {
              c2 = true, h2--, f2 = r3, d2();
            }
            u2 = false, l2();
          }
        }
        const p2 = {next: async function() {
          if (o2.length === 0) {
            const e4 = s();
            return a2.push(e4), l2(), e4.promise;
          }
          const e3 = o2.shift();
          return l2(), {done: false, value: e3};
        }, [Symbol.asyncIterator]: () => p2};
        return p2;
      }
      function m(e2, t2, r2) {
        return t2 === void 0 ? (t3, r3) => r3 ? m(e2, t3, r3) : m(e2, t3) : r2 === void 0 ? (r3) => m(e2, t2, r3) : d((e3) => e3 != null, l(b(e2, t2, r2)));
      }
      async function v(e2) {
        return new Promise((t2) => {
          e2.once("readable", () => {
            t2();
          });
        });
      }
      function w(e2) {
        return typeof e2[Symbol.asyncIterator] == "function" ? e2 : async function* (e3) {
          for (; ; ) {
            const t2 = e3.read();
            if (t2 === null) {
              if (e3._readableState.ended)
                break;
              await v(e3);
            } else
              yield t2;
          }
        }(e2);
      }
      async function* _(...e2) {
        const t2 = new Set(e2.map(i));
        for (; t2.size > 0; )
          for (const e3 of t2) {
            const r2 = await e3.next();
            r2.done ? t2.delete(e3) : yield r2.value;
          }
      }
      function E(e2, ...t2) {
        let r2 = e2();
        for (const n2 of t2)
          r2 = n2(r2);
        return r2;
      }
      function S(e2, t2, r2) {
        return t2 === void 0 ? (t3, r3) => S(e2, t3, r3) : r2 === void 0 ? (r3) => S(e2, t2, r3) : e2 === 1 ? y(t2, r2) : async function* (e3, t3, r3) {
          let n2 = null;
          const s2 = i(E(() => r3, a(1), async function* (e4) {
            for await (const t4 of e4) {
              if (n2)
                return;
              yield t4;
            }
          }, y((e4) => ({value: t3(e4)})), a(e3 - 1)));
          for (; ; ) {
            const {value: e4, done: t4} = await s2.next();
            if (t4)
              break;
            try {
              const t5 = await e4.value;
              n2 || (yield t5);
            } catch (o2) {
              n2 = o2;
            }
          }
          if (n2)
            throw n2;
        }(e2, t2, r2);
      }
      function A(e2, t2, r2) {
        return t2 === void 0 ? (t3, r3) => r3 ? A(e2, t3, r3) : A(e2, t3) : r2 === void 0 ? (r3) => A(e2, t2, r3) : d((e3) => e3 != null, l(S(e2, t2, r2)));
      }
      async function* I(...e2) {
        const t2 = e2.map(i), r2 = new Set(), n2 = new Map();
        let s2 = null, o2 = null, a2 = null;
        const c2 = (e3) => {
          s2 = e3, o2 && o2(e3);
        }, u2 = (e3) => {
          a2 && a2(e3);
        }, h2 = (e3) => {
          const t3 = Promise.resolve(e3.next()).then(async ({done: i2, value: s3}) => {
            i2 || n2.set(e3, s3), r2.delete(t3);
          });
          r2.add(t3), t3.then(u2, c2);
        };
        for (const i2 of t2)
          h2(i2);
        for (; ; ) {
          if (r2.size === 0 && n2.size === 0)
            return;
          await new Promise((e3, t3) => {
            if (s2 && t3(s2), n2.size > 0)
              return e3();
            a2 = e3, o2 = t3;
          });
          for (const [e3, t3] of n2)
            n2.delete(e3), yield t3, h2(e3);
        }
      }
      async function k(e2, t2, r2) {
        let n2 = t2;
        for await (const i2 of r2)
          n2 = await e2(n2, i2);
        return n2;
      }
      function R(e2, t2, r2) {
        return t2 === void 0 ? (t3, r3) => r3 ? k(e2, t3, r3) : R(e2, t3) : r2 === void 0 ? (r3) => R(e2, t2, r3) : k(e2, t2, r2);
      }
      function T(e2, t2) {
        return t2 === void 0 ? (t3) => T(e2, t3) : t2[Symbol.asyncIterator] ? async function* (e3, t3) {
          let r2 = 0;
          for await (const n2 of t3)
            if (yield await n2, r2++, r2 >= e3)
              break;
        }(e2, t2) : function* (e3, t3) {
          let r2 = 0;
          for (const n2 of t3)
            if (yield n2, r2++, r2 >= e3)
              break;
        }(e2, t2);
      }
      async function* C(e2, t2) {
        for await (const r2 of t2)
          await e2(r2), yield r2;
      }
      function M(e2, t2) {
        return t2 === void 0 ? (t3) => C(e2, t3) : C(e2, t2);
      }
      function x(e2, t2) {
        let r2 = e2[0] + t2[0], n2 = e2[1] + t2[1];
        if (n2 >= 1e9) {
          const e3 = n2 % 1e9;
          r2 += (n2 - e3) / 1e9, n2 = e3;
        }
        return [r2, n2];
      }
      function N(e2 = {}, t2) {
        return t2 === void 0 ? (t3) => N(e2, t3) : t2[Symbol.asyncIterator] !== void 0 ? async function* (e3, t3) {
          const r2 = t3[Symbol.asyncIterator]();
          let n2 = [0, 0];
          for (; ; ) {
            const t4 = process.hrtime(), {value: i2, done: s2} = await r2.next(), o2 = process.hrtime(t4);
            if (n2 = x(n2, o2), e3.progress && e3.progress(o2, n2), s2)
              return e3.total && e3.total(n2), i2;
            yield i2;
          }
        }(e2, t2) : function* (e3, t3) {
          const r2 = t3[Symbol.iterator]();
          let n2 = [0, 0];
          for (; ; ) {
            const t4 = process.hrtime(), {value: i2, done: s2} = r2.next(), o2 = process.hrtime(t4);
            if (n2 = x(n2, o2), e3.progress && e3.progress(o2, n2), s2)
              return e3.total && e3.total(n2), i2;
            yield i2;
          }
        }(e2, t2);
      }
      function P(e2, t2, r2) {
        const n2 = i(r2), o2 = [], a2 = [];
        let c2 = false, u2 = false, h2 = 0, f2 = null;
        function d2() {
          for (; a2.length > 0 && o2.length > 0; ) {
            const {resolve: e3} = a2.shift();
            e3({done: false, value: o2.shift()});
          }
          for (; a2.length > 0 && h2 === 0 && c2; ) {
            const {resolve: e3, reject: t3} = a2.shift();
            f2 ? (t3(f2), f2 = null) : e3({done: true, value: void 0});
          }
        }
        async function l2() {
          if (c2)
            d2();
          else if (!(u2 || h2 + o2.length >= e2)) {
            u2 = true, h2++;
            try {
              const {done: e3, value: r3} = await n2.next();
              e3 ? (c2 = true, h2--, d2()) : async function(e4) {
                try {
                  const r4 = await t2(e4);
                  o2.push(r4);
                } catch (r4) {
                  c2 = true, f2 = r4;
                }
                h2--, d2(), l2();
              }(r3);
            } catch (r3) {
              c2 = true, h2--, f2 = r3, d2();
            }
            u2 = false, l2();
          }
        }
        const p2 = {next: async function() {
          if (o2.length === 0) {
            const e4 = s();
            return a2.push(e4), l2(), e4.promise;
          }
          const e3 = o2.shift();
          return l2(), {done: false, value: e3};
        }, [Symbol.asyncIterator]: () => p2};
        return p2;
      }
      function B(e2, t2, r2) {
        return t2 === void 0 ? (t3, r3) => r3 ? B(e2, t3, r3) : B(e2, t3) : r2 === void 0 ? (r3) => B(e2, t2, r3) : P(e2, t2, r2);
      }
      async function O(e2, t2) {
        let r2 = null, n2 = null, i2 = null;
        const s2 = (e3) => {
          r2 = e3, n2 && n2(e3);
        }, o2 = () => {
          i2 && i2();
        };
        e2.once("error", s2);
        for await (const a2 of t2)
          if (e2.write(a2) === false && await new Promise((t3, s3) => {
            if (r2)
              return s3(r2);
            e2.once("drain", o2), i2 = t3, n2 = s3;
          }), r2)
            break;
        if (e2.removeListener("error", s2), e2.removeListener("drain", o2), r2)
          throw r2;
      }
      function D(e2, t2) {
        return t2 === void 0 ? (t3) => O(e2, t3) : O(e2, t2);
      }
      r.r(t), r.d(t, "batch", function() {
        return n;
      }), r.d(t, "buffer", function() {
        return a;
      }), r.d(t, "collect", function() {
        return c;
      }), r.d(t, "concat", function() {
        return u;
      }), r.d(t, "consume", function() {
        return h;
      }), r.d(t, "filter", function() {
        return d;
      }), r.d(t, "flatMap", function() {
        return g;
      }), r.d(t, "flatTransform", function() {
        return m;
      }), r.d(t, "flatten", function() {
        return l;
      }), r.d(t, "fromStream", function() {
        return w;
      }), r.d(t, "getIterator", function() {
        return i;
      }), r.d(t, "map", function() {
        return y;
      }), r.d(t, "merge", function() {
        return _;
      }), r.d(t, "parallelFlatMap", function() {
        return A;
      }), r.d(t, "parallelMap", function() {
        return S;
      }), r.d(t, "parallelMerge", function() {
        return I;
      }), r.d(t, "pipeline", function() {
        return E;
      }), r.d(t, "reduce", function() {
        return R;
      }), r.d(t, "take", function() {
        return T;
      }), r.d(t, "tap", function() {
        return M;
      }), r.d(t, "time", function() {
        return N;
      }), r.d(t, "transform", function() {
        return B;
      }), r.d(t, "writeToStream", function() {
        return D;
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(0), s = r(2), o = r(6);
      e.exports = ({ipld: e2, preload: t2}) => s(async function(r2, s2 = {}) {
        let a, c;
        try {
          a = function(e3, t3) {
            if (typeof e3 == "string")
              return t3 !== "base58" && t3 ? o(e3, t3) : e3;
            if (e3 instanceof Uint8Array)
              return e3;
            if (n.isCID(e3))
              return e3.bytes;
            throw new Error("unsupported multihash");
          }(r2, s2.enc);
        } catch (u) {
          throw i(u, "ERR_INVALID_MULTIHASH");
        }
        try {
          c = new n(a);
        } catch (u) {
          throw i(u, "ERR_INVALID_CID");
        }
        return s2.cidVersion === 1 && (c = c.toV1()), s2.preload !== false && t2(c), e2.get(c, {signal: s2.signal});
      });
    }, function(e, t, r) {
      "use strict";
      var n = function(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      };
      Object.defineProperty(t, "__esModule", {value: true}), t.isValidPublicKey = t.getHkdf = t.verifySignedPayload = t.getHandshakePayload = t.decodePayload = t.getPeerIdFromPayload = t.signPayload = t.createHandshakePayload = t.getPayload = t.generateKeypair = void 0;
      const i = n(r(1012)), s = n(r(209)), o = n(r(377)), a = r(3), c = n(r(7)), u = r(39), h = r(1015), f = n(r(19)), d = h.pb.NoiseHandshakePayload;
      function l(e2, t2, r2) {
        const n2 = d.create({identityKey: a.Buffer.from(e2), identitySig: t2, data: r2 || null});
        return a.Buffer.from(d.encode(n2).finish());
      }
      async function p(e2, t2) {
        return a.Buffer.from(await e2.privKey.sign(t2));
      }
      function y(e2) {
        return a.Buffer.concat([a.Buffer.from("noise-libp2p-static-key:"), e2]);
      }
      t.generateKeypair = function() {
        const e2 = s.default.privateKeyGenerate();
        return {publicKey: s.default.publicKeyCreate(e2), privateKey: e2};
      }, t.getPayload = async function(e2, t2, r2) {
        const n2 = await p(e2, y(t2)), i2 = r2 || a.Buffer.alloc(0);
        return await l(e2.marshalPubKey(), n2, i2);
      }, t.createHandshakePayload = l, t.signPayload = p, t.getPeerIdFromPayload = async function(e2) {
        return await c.default.createFromPubKey(a.Buffer.from(e2.identityKey));
      }, t.decodePayload = function(e2) {
        return d.toObject(d.decode(a.Buffer.from(e2)));
      }, t.getHandshakePayload = y, t.verifySignedPayload = async function(e2, t2, r2) {
        const n2 = a.Buffer.from(t2.identityKey);
        if (!await async function(e3, t3) {
          const r3 = await c.default.createFromPubKey(t3);
          return f.default(r3.id, e3);
        }(r2.id, n2))
          throw new Error("Peer ID doesn't match libp2p public key.");
        const i2 = y(e2), s2 = u.keys.unmarshalPublicKey(n2);
        if (!t2.identitySig || !s2.verify(i2, a.Buffer.from(t2.identitySig)))
          throw new Error("Static key doesn't match to peer that signed payload!");
        return c.default.createFromPubKey(n2);
      }, t.getHkdf = function(e2, t2) {
        const r2 = a.Buffer.alloc(0), n2 = i.default.extract(o.default, t2, e2), s2 = i.default.expand(o.default, n2, r2, 96);
        return [s2.slice(0, 32), s2.slice(32, 64), s2.slice(64, 96)];
      }, t.isValidPublicKey = function(e2) {
        return s.default.publicKeyVerify(e2.slice(0, 32));
      };
    }, function(e, t, r) {
      "use strict";
      (function(e2) {
        var n = t;
        function i(e3, t2, r2) {
          for (var n2 = Object.keys(t2), i2 = 0; i2 < n2.length; ++i2)
            e3[n2[i2]] !== void 0 && r2 || (e3[n2[i2]] = t2[n2[i2]]);
          return e3;
        }
        function s(e3) {
          function t2(e4, r2) {
            if (!(this instanceof t2))
              return new t2(e4, r2);
            Object.defineProperty(this, "message", {get: function() {
              return e4;
            }}), Error.captureStackTrace ? Error.captureStackTrace(this, t2) : Object.defineProperty(this, "stack", {value: new Error().stack || ""}), r2 && i(this, r2);
          }
          return (t2.prototype = Object.create(Error.prototype)).constructor = t2, Object.defineProperty(t2.prototype, "name", {get: function() {
            return e3;
          }}), t2.prototype.toString = function() {
            return this.name + ": " + this.message;
          }, t2;
        }
        n.asPromise = r(1018), n.base64 = r(1019), n.EventEmitter = r(1020), n.float = r(1021), n.inquire = r(1022), n.utf8 = r(1023), n.pool = r(1024), n.LongBits = r(1025), n.isNode = Boolean(e2 !== void 0 && e2 && e2.process && e2.process.versions && e2.process.versions.node), n.global = n.isNode && e2 || typeof window != "undefined" && window || typeof self != "undefined" && self || void 0, n.emptyArray = Object.freeze ? Object.freeze([]) : [], n.emptyObject = Object.freeze ? Object.freeze({}) : {}, n.isInteger = Number.isInteger || function(e3) {
          return typeof e3 == "number" && isFinite(e3) && Math.floor(e3) === e3;
        }, n.isString = function(e3) {
          return typeof e3 == "string" || e3 instanceof String;
        }, n.isObject = function(e3) {
          return e3 && typeof e3 == "object";
        }, n.isset = n.isSet = function(e3, t2) {
          var r2 = e3[t2];
          return !(r2 == null || !e3.hasOwnProperty(t2)) && (typeof r2 != "object" || (Array.isArray(r2) ? r2.length : Object.keys(r2).length) > 0);
        }, n.Buffer = function() {
          try {
            var e3 = n.inquire("buffer").Buffer;
            return e3.prototype.utf8Write ? e3 : null;
          } catch (t2) {
            return null;
          }
        }(), n._Buffer_from = null, n._Buffer_allocUnsafe = null, n.newBuffer = function(e3) {
          return typeof e3 == "number" ? n.Buffer ? n._Buffer_allocUnsafe(e3) : new n.Array(e3) : n.Buffer ? n._Buffer_from(e3) : typeof Uint8Array == "undefined" ? e3 : new Uint8Array(e3);
        }, n.Array = typeof Uint8Array != "undefined" ? Uint8Array : Array, n.Long = n.global.dcodeIO && n.global.dcodeIO.Long || n.global.Long || n.inquire("long"), n.key2Re = /^true|false|0|1$/, n.key32Re = /^-?(?:0|[1-9][0-9]*)$/, n.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/, n.longToHash = function(e3) {
          return e3 ? n.LongBits.from(e3).toHash() : n.LongBits.zeroHash;
        }, n.longFromHash = function(e3, t2) {
          var r2 = n.LongBits.fromHash(e3);
          return n.Long ? n.Long.fromBits(r2.lo, r2.hi, t2) : r2.toNumber(Boolean(t2));
        }, n.merge = i, n.lcFirst = function(e3) {
          return e3.charAt(0).toLowerCase() + e3.substring(1);
        }, n.newError = s, n.ProtocolError = s("ProtocolError"), n.oneOfGetter = function(e3) {
          for (var t2 = {}, r2 = 0; r2 < e3.length; ++r2)
            t2[e3[r2]] = 1;
          return function() {
            for (var e4 = Object.keys(this), r3 = e4.length - 1; r3 > -1; --r3)
              if (t2[e4[r3]] === 1 && this[e4[r3]] !== void 0 && this[e4[r3]] !== null)
                return e4[r3];
          };
        }, n.oneOfSetter = function(e3) {
          return function(t2) {
            for (var r2 = 0; r2 < e3.length; ++r2)
              e3[r2] !== t2 && delete this[e3[r2]];
          };
        }, n.toJSONOptions = {longs: String, enums: String, bytes: String, json: true}, n._configure = function() {
          var e3 = n.Buffer;
          e3 ? (n._Buffer_from = e3.from !== Uint8Array.from && e3.from || function(t2, r2) {
            return new e3(t2, r2);
          }, n._Buffer_allocUnsafe = e3.allocUnsafe || function(t2) {
            return new e3(t2);
          }) : n._Buffer_from = n._Buffer_allocUnsafe = null;
        };
      }).call(this, r(12));
    }, function(e, t, r) {
      "use strict";
      const n = t.second = 1e3, i = t.minute = 60 * n, s = t.hour = 60 * i;
      t.MAX_RECORD_AGE = 36 * s, t.PROTOCOL_DHT = "/kad/1.0.0", t.PROVIDERS_KEY_PREFIX = "/providers/", t.PROVIDERS_LRU_CACHE_SIZE = 256, t.PROVIDERS_VALIDITY = 24 * s, t.PROVIDERS_CLEANUP_INTERVAL = s, t.READ_MESSAGE_TIMEOUT = 10 * n, t.GET_MANY_RECORD_COUNT = 16, t.K = 20, t.ALPHA = 3, t.defaultRandomWalk = {enabled: true, queriesPerPeriod: 1, interval: 5 * i, timeout: 10 * n, delay: 10 * n};
    }, function(e, t, r) {
      "use strict";
      const n = r(11), i = C("dns4"), s = C("dns6"), o = C("dnsaddr"), a = T(C("dns"), o, i, s), c = T(C("ip4"), C("ip6")), u = T(R(c, C("tcp")), R(a, C("tcp"))), h = R(c, C("udp")), f = R(h, C("utp")), d = T(R(u, C("ws")), R(a, C("ws"))), l = T(R(u, C("wss")), R(a, C("wss"))), p = T(R(u, C("http")), R(c, C("http")), R(a, C("http"))), y = T(R(u, C("https")), R(c, C("https")), R(a, C("https"))), g = T(R(d, C("p2p-webrtc-star"), C("p2p")), R(l, C("p2p-webrtc-star"), C("p2p")), R(d, C("p2p-webrtc-star")), R(l, C("p2p-webrtc-star"))), b = T(R(d, C("p2p-websocket-star"), C("p2p")), R(l, C("p2p-websocket-star"), C("p2p")), R(d, C("p2p-websocket-star")), R(l, C("p2p-websocket-star"))), m = T(R(p, C("p2p-webrtc-direct")), R(y, C("p2p-webrtc-direct"))), v = T(d, l, p, y, g, m, u, f, a), w = T(R(v, C("p2p-stardust"), C("p2p")), R(v, C("p2p-stardust"))), _ = T(R(v, C("p2p")), g, C("p2p")), E = T(R(_, C("p2p-circuit"), _), R(_, C("p2p-circuit")), R(C("p2p-circuit"), _), R(v, C("p2p-circuit")), R(C("p2p-circuit"), v), C("p2p-circuit")), S = () => T(R(E, S), E), A = S(), I = T(R(A, _, A), R(_, A), R(A, _), A, _);
      function k(e2) {
        return function(t2) {
          if (!n.isMultiaddr(t2))
            try {
              t2 = n(t2);
            } catch (i2) {
              return false;
            }
          const r2 = e2(t2.protoNames());
          return r2 !== null && r2.length === 0;
        };
      }
      function R() {
        const e2 = Array.from(arguments);
        function t2(t3) {
          return t3.length < e2.length ? null : (e2.some((e3) => {
            if ((t3 = typeof e3 == "function" ? e3().partialMatch(t3) : e3.partialMatch(t3)) === null)
              return true;
          }), t3);
        }
        return {toString: function() {
          return "{ " + e2.join(" ") + " }";
        }, input: e2, matches: k(t2), partialMatch: t2};
      }
      function T() {
        const e2 = Array.from(arguments);
        function t2(t3) {
          let r3 = null;
          return e2.some((e3) => {
            const n2 = typeof e3 == "function" ? e3().partialMatch(t3) : e3.partialMatch(t3);
            if (n2)
              return r3 = n2, true;
          }), r3;
        }
        const r2 = {toString: function() {
          return "{ " + e2.join(" ") + " }";
        }, input: e2, matches: k(t2), partialMatch: t2};
        return r2;
      }
      function C(e2) {
        const t2 = e2;
        return {toString: function() {
          return t2;
        }, matches: function(e3) {
          if (typeof e3 == "string")
            try {
              e3 = n(e3);
            } catch (i2) {
              return false;
            }
          const r2 = e3.protoNames();
          return r2.length === 1 && r2[0] === t2;
        }, partialMatch: function(e3) {
          return e3.length === 0 ? null : e3[0] === t2 ? e3.slice(1) : null;
        }};
      }
      t.DNS = a, t.DNS4 = i, t.DNS6 = s, t.DNSADDR = o, t.IP = c, t.TCP = u, t.UDP = h, t.UTP = f, t.HTTP = p, t.HTTPS = y, t.WebSockets = d, t.WebSocketsSecure = l, t.WebSocketStar = b, t.WebRTCStar = g, t.WebRTCDirect = m, t.Reliable = v, t.Stardust = w, t.Circuit = A, t.P2P = I, t.IPFS = I;
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(24), s = r(6);
      e.exports = i(class {
        constructor(e2, t2, r2) {
          if (!r2)
            throw new Error("A link requires a cid to point to");
          Object.defineProperties(this, {Name: {value: e2 || "", writable: false, enumerable: true}, Tsize: {value: t2, writable: false, enumerable: true}, Hash: {value: new n(r2), writable: false, enumerable: true}, _nameBuf: {value: null, writable: true, enumerable: false}});
        }
        toString() {
          return `DAGLink <${this.Hash.toBaseEncodedString()} - name: "${this.Name}", size: ${this.Tsize}>`;
        }
        toJSON() {
          return this._json || (this._json = Object.freeze({name: this.Name, size: this.Tsize, cid: this.Hash.toBaseEncodedString()})), Object.assign({}, this._json);
        }
        get nameAsBuffer() {
          return this._nameBuf !== null || (this._nameBuf = s(this.Name)), this._nameBuf;
        }
      }, {className: "DAGLink", symbolName: "@ipld/js-ipld-dag-pb/daglink"});
    }, function(e, t, r) {
      "use strict";
      class n extends Error {
        constructor(e2 = "not initialized") {
          super(e2), this.name = "NotInitializedError", this.code = n.code;
        }
      }
      n.code = "ERR_NOT_INITIALIZED", t.NotInitializedError = n;
      class i extends Error {
        constructor(e2 = "cannot initialize an initializing node") {
          super(e2), this.name = "AlreadyInitializingError", this.code = s.code;
        }
      }
      i.code = "ERR_ALREADY_INITIALIZING", t.AlreadyInitializingError = i;
      class s extends Error {
        constructor(e2 = "cannot re-initialize an initialized node") {
          super(e2), this.name = "AlreadyInitializedError", this.code = s.code;
        }
      }
      s.code = "ERR_ALREADY_INITIALIZED", t.AlreadyInitializedError = s;
      class o extends Error {
        constructor(e2 = "not started") {
          super(e2), this.name = "NotStartedError", this.code = o.code;
        }
      }
      o.code = "ERR_NOT_STARTED", t.NotStartedError = o;
      class a extends Error {
        constructor(e2 = "cannot start, already startin") {
          super(e2), this.name = "AlreadyStartingError", this.code = a.code;
        }
      }
      a.code = "ERR_ALREADY_STARTING", t.AlreadyStartingError = a;
      class c extends Error {
        constructor(e2 = "cannot start, already started") {
          super(e2), this.name = "AlreadyStartedError", this.code = c.code;
        }
      }
      c.code = "ERR_ALREADY_STARTED", t.AlreadyStartedError = c;
      class u extends Error {
        constructor(e2 = "not enabled") {
          super(e2), this.name = "NotEnabledError", this.code = u.code;
        }
      }
      u.code = "ERR_NOT_ENABLED", t.NotEnabledError = u;
    }, function(e, t, r) {
      "use strict";
      e.exports = i;
      var n = r(14).EventEmitter;
      function i() {
        n.call(this);
      }
      r(18)(i, n), i.Readable = r(155), i.Writable = r(562), i.Duplex = r(563), i.Transform = r(564), i.PassThrough = r(565), i.Stream = i, i.prototype.pipe = function(e2, t2) {
        var r2 = this;
        function i2(t3) {
          e2.writable && e2.write(t3) === false && r2.pause && r2.pause();
        }
        function s() {
          r2.readable && r2.resume && r2.resume();
        }
        r2.on("data", i2), e2.on("drain", s), e2._isStdio || t2 && t2.end === false || (r2.on("end", a), r2.on("close", c));
        var o = false;
        function a() {
          o || (o = true, e2.end());
        }
        function c() {
          o || (o = true, typeof e2.destroy == "function" && e2.destroy());
        }
        function u(e3) {
          if (h(), n.listenerCount(this, "error") === 0)
            throw e3;
        }
        function h() {
          r2.removeListener("data", i2), e2.removeListener("drain", s), r2.removeListener("end", a), r2.removeListener("close", c), r2.removeListener("error", u), e2.removeListener("error", u), r2.removeListener("end", h), r2.removeListener("close", h), e2.removeListener("close", h);
        }
        return r2.on("error", u), e2.on("error", u), r2.on("end", h), r2.on("close", h), e2.on("close", h), e2.emit("pipe", r2), e2;
      };
    }, function(e, t, r) {
      "use strict";
      (function(e2) {
        var n = Object.getOwnPropertyDescriptors || function(e3) {
          for (var t2 = Object.keys(e3), r2 = {}, n2 = 0; n2 < t2.length; n2++)
            r2[t2[n2]] = Object.getOwnPropertyDescriptor(e3, t2[n2]);
          return r2;
        }, i = /%[sdj%]/g;
        t.format = function(e3) {
          if (!b(e3)) {
            for (var t2 = [], r2 = 0; r2 < arguments.length; r2++)
              t2.push(a(arguments[r2]));
            return t2.join(" ");
          }
          r2 = 1;
          for (var n2 = arguments, s2 = n2.length, o2 = String(e3).replace(i, function(e4) {
            if (e4 === "%%")
              return "%";
            if (r2 >= s2)
              return e4;
            switch (e4) {
              case "%s":
                return String(n2[r2++]);
              case "%d":
                return Number(n2[r2++]);
              case "%j":
                try {
                  return JSON.stringify(n2[r2++]);
                } catch (t3) {
                  return "[Circular]";
                }
              default:
                return e4;
            }
          }), c2 = n2[r2]; r2 < s2; c2 = n2[++r2])
            y(c2) || !w(c2) ? o2 += " " + c2 : o2 += " " + a(c2);
          return o2;
        }, t.deprecate = function(r2, n2) {
          if (e2 !== void 0 && e2.noDeprecation === true)
            return r2;
          if (e2 === void 0)
            return function() {
              return t.deprecate(r2, n2).apply(this, arguments);
            };
          var i2 = false;
          return function() {
            if (!i2) {
              if (e2.throwDeprecation)
                throw new Error(n2);
              e2.traceDeprecation ? console.trace(n2) : console.error(n2), i2 = true;
            }
            return r2.apply(this, arguments);
          };
        };
        var s, o = {};
        function a(e3, r2) {
          var n2 = {seen: [], stylize: u};
          return arguments.length >= 3 && (n2.depth = arguments[2]), arguments.length >= 4 && (n2.colors = arguments[3]), p(r2) ? n2.showHidden = r2 : r2 && t._extend(n2, r2), m(n2.showHidden) && (n2.showHidden = false), m(n2.depth) && (n2.depth = 2), m(n2.colors) && (n2.colors = false), m(n2.customInspect) && (n2.customInspect = true), n2.colors && (n2.stylize = c), h(n2, e3, n2.depth);
        }
        function c(e3, t2) {
          var r2 = a.styles[t2];
          return r2 ? "[" + a.colors[r2][0] + "m" + e3 + "[" + a.colors[r2][1] + "m" : e3;
        }
        function u(e3, t2) {
          return e3;
        }
        function h(e3, r2, n2) {
          if (e3.customInspect && r2 && S(r2.inspect) && r2.inspect !== t.inspect && (!r2.constructor || r2.constructor.prototype !== r2)) {
            var i2 = r2.inspect(n2, e3);
            return b(i2) || (i2 = h(e3, i2, n2)), i2;
          }
          var s2 = function(e4, t2) {
            if (m(t2))
              return e4.stylize("undefined", "undefined");
            if (b(t2)) {
              var r3 = "'" + JSON.stringify(t2).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
              return e4.stylize(r3, "string");
            }
            if (g(t2))
              return e4.stylize("" + t2, "number");
            if (p(t2))
              return e4.stylize("" + t2, "boolean");
            if (y(t2))
              return e4.stylize("null", "null");
          }(e3, r2);
          if (s2)
            return s2;
          var o2 = Object.keys(r2), a2 = function(e4) {
            var t2 = {};
            return e4.forEach(function(e5, r3) {
              t2[e5] = true;
            }), t2;
          }(o2);
          if (e3.showHidden && (o2 = Object.getOwnPropertyNames(r2)), E(r2) && (o2.indexOf("message") >= 0 || o2.indexOf("description") >= 0))
            return f(r2);
          if (o2.length === 0) {
            if (S(r2)) {
              var c2 = r2.name ? ": " + r2.name : "";
              return e3.stylize("[Function" + c2 + "]", "special");
            }
            if (v(r2))
              return e3.stylize(RegExp.prototype.toString.call(r2), "regexp");
            if (_(r2))
              return e3.stylize(Date.prototype.toString.call(r2), "date");
            if (E(r2))
              return f(r2);
          }
          var u2, w2 = "", A2 = false, I2 = ["{", "}"];
          (l(r2) && (A2 = true, I2 = ["[", "]"]), S(r2)) && (w2 = " [Function" + (r2.name ? ": " + r2.name : "") + "]");
          return v(r2) && (w2 = " " + RegExp.prototype.toString.call(r2)), _(r2) && (w2 = " " + Date.prototype.toUTCString.call(r2)), E(r2) && (w2 = " " + f(r2)), o2.length !== 0 || A2 && r2.length != 0 ? n2 < 0 ? v(r2) ? e3.stylize(RegExp.prototype.toString.call(r2), "regexp") : e3.stylize("[Object]", "special") : (e3.seen.push(r2), u2 = A2 ? function(e4, t2, r3, n3, i3) {
            for (var s3 = [], o3 = 0, a3 = t2.length; o3 < a3; ++o3)
              T(t2, String(o3)) ? s3.push(d(e4, t2, r3, n3, String(o3), true)) : s3.push("");
            return i3.forEach(function(i4) {
              i4.match(/^\d+$/) || s3.push(d(e4, t2, r3, n3, i4, true));
            }), s3;
          }(e3, r2, n2, a2, o2) : o2.map(function(t2) {
            return d(e3, r2, n2, a2, t2, A2);
          }), e3.seen.pop(), function(e4, t2, r3) {
            if (e4.reduce(function(e5, t3) {
              return t3.indexOf("\n") >= 0 && 0, e5 + t3.replace(/\u001b\[\d\d?m/g, "").length + 1;
            }, 0) > 60)
              return r3[0] + (t2 === "" ? "" : t2 + "\n ") + " " + e4.join(",\n  ") + " " + r3[1];
            return r3[0] + t2 + " " + e4.join(", ") + " " + r3[1];
          }(u2, w2, I2)) : I2[0] + w2 + I2[1];
        }
        function f(e3) {
          return "[" + Error.prototype.toString.call(e3) + "]";
        }
        function d(e3, t2, r2, n2, i2, s2) {
          var o2, a2, c2;
          if ((c2 = Object.getOwnPropertyDescriptor(t2, i2) || {value: t2[i2]}).get ? a2 = c2.set ? e3.stylize("[Getter/Setter]", "special") : e3.stylize("[Getter]", "special") : c2.set && (a2 = e3.stylize("[Setter]", "special")), T(n2, i2) || (o2 = "[" + i2 + "]"), a2 || (e3.seen.indexOf(c2.value) < 0 ? (a2 = y(r2) ? h(e3, c2.value, null) : h(e3, c2.value, r2 - 1)).indexOf("\n") > -1 && (a2 = s2 ? a2.split("\n").map(function(e4) {
            return "  " + e4;
          }).join("\n").substr(2) : "\n" + a2.split("\n").map(function(e4) {
            return "   " + e4;
          }).join("\n")) : a2 = e3.stylize("[Circular]", "special")), m(o2)) {
            if (s2 && i2.match(/^\d+$/))
              return a2;
            (o2 = JSON.stringify("" + i2)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (o2 = o2.substr(1, o2.length - 2), o2 = e3.stylize(o2, "name")) : (o2 = o2.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), o2 = e3.stylize(o2, "string"));
          }
          return o2 + ": " + a2;
        }
        function l(e3) {
          return Array.isArray(e3);
        }
        function p(e3) {
          return typeof e3 == "boolean";
        }
        function y(e3) {
          return e3 === null;
        }
        function g(e3) {
          return typeof e3 == "number";
        }
        function b(e3) {
          return typeof e3 == "string";
        }
        function m(e3) {
          return e3 === void 0;
        }
        function v(e3) {
          return w(e3) && A(e3) === "[object RegExp]";
        }
        function w(e3) {
          return typeof e3 == "object" && e3 !== null;
        }
        function _(e3) {
          return w(e3) && A(e3) === "[object Date]";
        }
        function E(e3) {
          return w(e3) && (A(e3) === "[object Error]" || e3 instanceof Error);
        }
        function S(e3) {
          return typeof e3 == "function";
        }
        function A(e3) {
          return Object.prototype.toString.call(e3);
        }
        function I(e3) {
          return e3 < 10 ? "0" + e3.toString(10) : e3.toString(10);
        }
        t.debuglog = function(r2) {
          if (m(s) && (s = {NODE_ENV: "production"}.NODE_DEBUG || ""), r2 = r2.toUpperCase(), !o[r2])
            if (new RegExp("\\b" + r2 + "\\b", "i").test(s)) {
              var n2 = e2.pid;
              o[r2] = function() {
                var e3 = t.format.apply(t, arguments);
                console.error("%s %d: %s", r2, n2, e3);
              };
            } else
              o[r2] = function() {
              };
          return o[r2];
        }, t.inspect = a, a.colors = {bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39]}, a.styles = {special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red"}, t.isArray = l, t.isBoolean = p, t.isNull = y, t.isNullOrUndefined = function(e3) {
          return e3 == null;
        }, t.isNumber = g, t.isString = b, t.isSymbol = function(e3) {
          return typeof e3 == "symbol";
        }, t.isUndefined = m, t.isRegExp = v, t.isObject = w, t.isDate = _, t.isError = E, t.isFunction = S, t.isPrimitive = function(e3) {
          return e3 === null || typeof e3 == "boolean" || typeof e3 == "number" || typeof e3 == "string" || typeof e3 == "symbol" || e3 === void 0;
        }, t.isBuffer = r(566);
        var k = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        function R() {
          var e3 = new Date(), t2 = [I(e3.getHours()), I(e3.getMinutes()), I(e3.getSeconds())].join(":");
          return [e3.getDate(), k[e3.getMonth()], t2].join(" ");
        }
        function T(e3, t2) {
          return Object.prototype.hasOwnProperty.call(e3, t2);
        }
        t.log = function() {
          console.log("%s - %s", R(), t.format.apply(t, arguments));
        }, t.inherits = r(567), t._extend = function(e3, t2) {
          if (!t2 || !w(t2))
            return e3;
          for (var r2 = Object.keys(t2), n2 = r2.length; n2--; )
            e3[r2[n2]] = t2[r2[n2]];
          return e3;
        };
        var C = typeof Symbol != "undefined" ? Symbol("util.promisify.custom") : void 0;
        function M(e3, t2) {
          if (!e3) {
            var r2 = new Error("Promise was rejected with a falsy value");
            r2.reason = e3, e3 = r2;
          }
          return t2(e3);
        }
        t.promisify = function(e3) {
          if (typeof e3 != "function")
            throw new TypeError('The "original" argument must be of type Function');
          if (C && e3[C]) {
            var t2;
            if (typeof (t2 = e3[C]) != "function")
              throw new TypeError('The "util.promisify.custom" argument must be of type Function');
            return Object.defineProperty(t2, C, {value: t2, enumerable: false, writable: false, configurable: true}), t2;
          }
          function t2() {
            for (var t3, r2, n2 = new Promise(function(e4, n3) {
              t3 = e4, r2 = n3;
            }), i2 = [], s2 = 0; s2 < arguments.length; s2++)
              i2.push(arguments[s2]);
            i2.push(function(e4, n3) {
              e4 ? r2(e4) : t3(n3);
            });
            try {
              e3.apply(this, i2);
            } catch (o2) {
              r2(o2);
            }
            return n2;
          }
          return Object.setPrototypeOf(t2, Object.getPrototypeOf(e3)), C && Object.defineProperty(t2, C, {value: t2, enumerable: false, writable: false, configurable: true}), Object.defineProperties(t2, n(e3));
        }, t.promisify.custom = C, t.callbackify = function(t2) {
          if (typeof t2 != "function")
            throw new TypeError('The "original" argument must be of type Function');
          function r2() {
            for (var r3 = [], n2 = 0; n2 < arguments.length; n2++)
              r3.push(arguments[n2]);
            var i2 = r3.pop();
            if (typeof i2 != "function")
              throw new TypeError("The last argument must be of type Function");
            var s2 = this, o2 = function() {
              return i2.apply(s2, arguments);
            };
            t2.apply(this, r3).then(function(t3) {
              e2.nextTick(o2, null, t3);
            }, function(t3) {
              e2.nextTick(M, t3, o2);
            });
          }
          return Object.setPrototypeOf(r2, Object.getPrototypeOf(t2)), Object.defineProperties(r2, n(t2)), r2;
        };
      }).call(this, r(10));
    }, function(e, t, r) {
      "use strict";
      (function(e2) {
        const n = r(64), i = r(29).BigNumber, s = r(54), o = s.NUMBYTES, a = s.SHIFT32;
        t.hasBigInt = typeof BigInt == "function";
        const c = typeof TextDecoder == "function" ? TextDecoder : n.TextDecoder;
        if (c) {
          const e3 = new c("utf8", {fatal: true, ignoreBOM: true});
          t.utf8 = (t2) => e3.decode(t2), t.utf8.checksUTF8 = true;
        } else
          t.utf8 = (e3) => e3.toString("utf8"), t.utf8.checksUTF8 = false;
        t.parseCBORint = function(e3, t2) {
          switch (e3) {
            case o.ONE:
              return t2.readUInt8(0);
            case o.TWO:
              return t2.readUInt16BE(0);
            case o.FOUR:
              return t2.readUInt32BE(0);
            case o.EIGHT:
              const r2 = t2.readUInt32BE(0), n2 = t2.readUInt32BE(4);
              return r2 > 2097151 ? new i(r2).times(a).plus(n2) : r2 * a + n2;
            default:
              throw new Error("Invalid additional info for int: " + e3);
          }
        }, t.writeHalf = function(t2, r2) {
          const n2 = e2.allocUnsafe(4);
          n2.writeFloatBE(r2, 0);
          const i2 = n2.readUInt32BE(0);
          if ((8191 & i2) != 0)
            return false;
          let s2 = i2 >> 16 & 32768;
          const o2 = i2 >> 23 & 255, a2 = 8388607 & i2;
          if (o2 >= 113 && o2 <= 142)
            s2 += (o2 - 112 << 10) + (a2 >> 13);
          else {
            if (!(o2 >= 103 && o2 < 113))
              return false;
            if (a2 & (1 << 126 - o2) - 1)
              return false;
            s2 += a2 + 8388608 >> 126 - o2;
          }
          return t2.writeUInt16BE(s2), true;
        }, t.parseHalf = function(e3) {
          const t2 = 128 & e3[0] ? -1 : 1, r2 = (124 & e3[0]) >> 2, n2 = (3 & e3[0]) << 8 | e3[1];
          return r2 ? r2 === 31 ? t2 * (n2 ? NaN : Infinity) : t2 * Math.pow(2, r2 - 25) * (1024 + n2) : 5960464477539063e-23 * t2 * n2;
        }, t.parseCBORfloat = function(e3) {
          switch (e3.length) {
            case 2:
              return t.parseHalf(e3);
            case 4:
              return e3.readFloatBE(0);
            case 8:
              return e3.readDoubleBE(0);
            default:
              throw new Error("Invalid float size: " + e3.length);
          }
        }, t.hex = function(t2) {
          return e2.from(t2.replace(/^0x/, ""), "hex");
        }, t.bin = function(t2) {
          let r2 = 0, n2 = (t2 = t2.replace(/\s/g, "")).length % 8 || 8;
          const i2 = [];
          for (; n2 <= t2.length; )
            i2.push(parseInt(t2.slice(r2, n2), 2)), r2 = n2, n2 += 8;
          return e2.from(i2);
        }, t.extend = function(e3 = {}, ...t2) {
          const r2 = t2.length;
          for (let n2 = 0; n2 < r2; n2++) {
            const r3 = t2[n2];
            for (const t3 in r3) {
              const n3 = r3[t3];
              e3[t3] = n3;
            }
          }
          return e3;
        }, t.arrayEqual = function(e3, t2) {
          return e3 == null && t2 == null || e3 != null && t2 != null && (e3.length === t2.length && e3.every((e4, r2) => e4 === t2[r2]));
        }, t.bufferEqual = function(t2, r2) {
          if (t2 == null && r2 == null)
            return true;
          if (t2 == null || r2 == null)
            return false;
          if (!e2.isBuffer(t2) || !e2.isBuffer(r2) || t2.length !== r2.length)
            return false;
          const n2 = t2.length;
          let i2, s2, o2 = true;
          for (i2 = s2 = 0; s2 < n2; i2 = ++s2) {
            const e3 = t2[i2];
            o2 = o2 && r2[i2] === e3;
          }
          return !!o2;
        }, t.bufferToBignumber = function(e3) {
          return new i(e3.toString("hex"), 16);
        }, t.toBigInt = function(e3) {
          return t.hasBigInt ? BigInt(e3) : Number(e3);
        }, t.bigIntize = function(e3) {
          const r2 = {};
          for (const n2 in e3)
            r2[n2] = t.toBigInt(e3[n2]);
          return r2;
        }, t.bufferToBigInt = function(e3) {
          return t.toBigInt("0x" + e3.toString("hex"));
        }, t.guessEncoding = function(t2) {
          if (typeof t2 == "string")
            return "hex";
          if (!e2.isBuffer(t2))
            throw new Error("Unknown input type");
        };
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      e.exports = {Record: r(598), validator: r(601), selection: r(604)};
    }, function(e, t, r) {
      "use strict";
      const n = r(15), i = r(4);
      e.exports = async (e2, t2, r2) => {
        r2.codec || (r2.codec = "dag-pb"), r2.cidVersion || (r2.cidVersion = 0), r2.hashAlg || (r2.hashAlg = "sha2-256"), r2.hashAlg !== "sha2-256" && (r2.cidVersion = 1);
        const s = await n(e2, r2.hashAlg), o = new i(r2.cidVersion, r2.codec, s);
        return r2.onlyHash || await t2.put(e2, {...r2, cid: o}), o;
      };
    }, function(e, t, r) {
      "use strict";
      const {DAGLink: n, DAGNode: i} = r(16), s = r(4), o = r(1)("ipfs:mfs:core:utils:add-link"), a = r(28), c = r(168), {updateHamtDirectory: u, recreateHamtLevel: h, createShard: f, toPrefix: d, addLinksToHamtBucket: l} = r(294), p = r(0), y = r(17), g = r(15).multihash, b = r(40), m = async (e2, t2) => {
        const r2 = await f(e2, t2.parent.Links.map((e3) => ({name: e3.Name, size: e3.Tsize, cid: e3.Hash})).concat({name: t2.name, size: t2.size, cid: t2.cid}), t2);
        return o("Converted directory to sharded directory " + r2.cid), r2;
      }, v = async (e2, t2) => {
        t2.parent.rmLink(t2.name), t2.parent.addLink(new n(t2.name, t2.size, t2.cid));
        const r2 = a.unmarshal(t2.parent.Data);
        r2.mtime && (r2.mtime = new Date(), t2.parent = new i(r2.marshal(), t2.parent.Links));
        const s2 = g.names[t2.hashAlg], o2 = await e2.ipld.put(t2.parent, y.DAG_PB, {cidVersion: t2.cidVersion, hashAlg: s2, onlyHash: !t2.flush});
        return {node: t2.parent, cid: o2, size: t2.parent.size};
      }, w = async (e2, t2) => {
        const {shard: r2, path: n2} = await _(e2, t2), i2 = await b(r2.flush("", e2.block)), s2 = await e2.ipld.get(i2.cid), o2 = t2.parent.Links.find((e3) => e3.Name.substring(0, 2) === n2[0].prefix), a2 = s2.Links.find((e3) => e3.Name.substring(0, 2) === n2[0].prefix);
        return o2 && t2.parent.rmLink(o2.Name), t2.parent.addLink(a2), u(e2, t2.parent.Links, n2[0].bucket, t2);
      }, _ = async (e2, t2) => {
        const r2 = {name: t2.name, cid: t2.cid, size: t2.size}, n2 = await h(t2.parent.Links), i2 = a.unmarshal(t2.parent.Data), s2 = new c({root: true, dir: true, parent: null, parentKey: null, path: "", dirty: true, flat: false, mode: i2.mode}, t2);
        s2._bucket = n2, i2.mtime && (s2.mtime = new Date());
        const u2 = await n2._findNewBucketAndPos(r2.name), f2 = E(u2);
        f2[0].node = t2.parent;
        let p2 = 0;
        for (; p2 < f2.length; ) {
          const t3 = f2[p2];
          p2++;
          const i3 = t3.node.Links.find((e3) => e3.Name.substring(0, 2) === t3.prefix);
          if (!i3) {
            o(`Link ${t3.prefix}${r2.name} will be added`), p2 = f2.length;
            break;
          }
          if (i3.Name === `${t3.prefix}${r2.name}`) {
            o(`Link ${t3.prefix}${r2.name} will be replaced`), p2 = f2.length;
            break;
          }
          if (i3.Name.length > 2) {
            o(`Link ${i3.Name} ${i3.Hash} will be replaced with a subshard`), p2 = f2.length;
            break;
          }
          o("Found subshard " + t3.prefix);
          const s3 = await e2.ipld.get(i3.Hash);
          if (!f2[p2]) {
            o("Loaded new subshard " + t3.prefix), await h(s3.Links, n2, t3.bucket, parseInt(t3.prefix, 16));
            const e3 = await n2._findNewBucketAndPos(r2.name);
            f2.push({bucket: e3.bucket, prefix: d(e3.pos), node: s3});
            break;
          }
          const a2 = f2[p2];
          await l(s3.Links, a2.bucket, n2), a2.node = s3;
        }
        return await s2._bucket.put(r2.name, {size: r2.size, cid: r2.cid}), {shard: s2, path: f2};
      }, E = (e2) => {
        let t2 = e2.bucket, r2 = e2.pos;
        const n2 = [{bucket: t2, prefix: d(r2)}];
        for (t2 = e2.bucket._parent, r2 = e2.bucket._posAtParent; t2; )
          n2.push({bucket: t2, prefix: d(r2)}), r2 = t2._posAtParent, t2 = t2._parent;
        return n2.reverse(), n2;
      };
      e.exports = async (e2, t2) => {
        if (!t2.parentCid && !t2.parent)
          throw p(new Error("No parent node or CID passed to addLink"), "EINVALIDPARENT");
        if (t2.parentCid && !s.isCID(t2.parentCid))
          throw p(new Error("Invalid CID passed to addLink"), "EINVALIDPARENTCID");
        if (t2.parent || (o("Loading parent node " + t2.parentCid), t2.parent = await e2.ipld.get(t2.parentCid)), !t2.cid)
          throw p(new Error("No child cid passed to addLink"), "EINVALIDCHILDCID");
        if (!t2.name)
          throw p(new Error("No child name passed to addLink"), "EINVALIDCHILDNAME");
        if (s.isCID(t2.cid) || (t2.cid = new s(t2.cid)), !t2.size && t2.size !== 0)
          throw p(new Error("No child size passed to addLink"), "EINVALIDCHILDSIZE");
        const r2 = a.unmarshal(t2.parent.Data);
        return r2.type === "hamt-sharded-directory" ? (o("Adding link to sharded directory"), w(e2, t2)) : t2.parent.Links.length >= t2.shardSplitThreshold ? (o("Converting directory to sharded directory"), m(e2, {...t2, mtime: r2.mtime, mode: r2.mode})) : (o(`Adding ${t2.name} (${t2.cid}) to regular directory`), v(e2, t2));
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(1)("ipfs:mfs:utils:update-tree"), i = r(68), s = {shardSplitThreshold: 1e3};
      e.exports = async (e2, t2, r2) => {
        r2 = Object.assign({}, s, r2), n("Trail", t2), t2 = t2.slice().reverse();
        let o, a = 0;
        for await (const n2 of e2.ipld.getMany(t2.map((e3) => e3.cid))) {
          const s2 = t2[a].cid, c2 = t2[a].name;
          if (a++, !o) {
            o = {cid: s2, name: c2, size: n2.size};
            continue;
          }
          const u = await i(e2, {parent: n2, name: o.name, cid: o.cid, size: o.size, flush: r2.flush, shardSplitThreshold: r2.shardSplitThreshold, hashAlg: r2.hashAlg, cidVersion: r2.cidVersion});
          o = {cid: u.cid, name: c2, size: u.size};
        }
        const {cid: c} = o;
        return n("Final CID " + c), c;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(1)("ipfs:mfs:utils:update-mfs-root"), {MFS_ROOT_KEY: i} = r(22), s = r(0);
      e.exports = async (e2, t2, r2) => {
        if (r2 && r2.signal && r2.signal.aborted)
          throw s(new Error("Request aborted"), "ERR_ABORTED", {name: "Aborted"});
        return n("New MFS root will be " + t2), await e2.repo.datastore.put(i, t2.bytes), t2;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function() {
        for (var e2 = {}, t2 = 0; t2 < arguments.length; t2++) {
          var r2 = arguments[t2];
          for (var i in r2)
            n.call(r2, i) && (e2[i] = r2[i]);
        }
        return e2;
      };
      var n = Object.prototype.hasOwnProperty;
    }, function(e, t, r) {
      "use strict";
      var n = {};
      function i(e2, t2, r2) {
        r2 || (r2 = Error);
        var i2 = function(e3) {
          var r3, n2;
          function i3(r4, n3, i4) {
            return e3.call(this, function(e4, r5, n4) {
              return typeof t2 == "string" ? t2 : t2(e4, r5, n4);
            }(r4, n3, i4)) || this;
          }
          return n2 = e3, (r3 = i3).prototype = Object.create(n2.prototype), r3.prototype.constructor = r3, r3.__proto__ = n2, i3;
        }(r2);
        i2.prototype.name = r2.name, i2.prototype.code = e2, n[e2] = i2;
      }
      function s(e2, t2) {
        if (Array.isArray(e2)) {
          var r2 = e2.length;
          return e2 = e2.map(function(e3) {
            return String(e3);
          }), r2 > 2 ? "one of ".concat(t2, " ").concat(e2.slice(0, r2 - 1).join(", "), ", or ") + e2[r2 - 1] : r2 === 2 ? "one of ".concat(t2, " ").concat(e2[0], " or ").concat(e2[1]) : "of ".concat(t2, " ").concat(e2[0]);
        }
        return "of ".concat(t2, " ").concat(String(e2));
      }
      i("ERR_INVALID_OPT_VALUE", function(e2, t2) {
        return 'The value "' + t2 + '" is invalid for option "' + e2 + '"';
      }, TypeError), i("ERR_INVALID_ARG_TYPE", function(e2, t2, r2) {
        var n2, i2, o, a;
        if (typeof t2 == "string" && (i2 = "not ", t2.substr(!o || o < 0 ? 0 : +o, i2.length) === i2) ? (n2 = "must not be", t2 = t2.replace(/^not /, "")) : n2 = "must be", function(e3, t3, r3) {
          return (r3 === void 0 || r3 > e3.length) && (r3 = e3.length), e3.substring(r3 - t3.length, r3) === t3;
        }(e2, " argument"))
          a = "The ".concat(e2, " ").concat(n2, " ").concat(s(t2, "type"));
        else {
          var c = function(e3, t3, r3) {
            return typeof r3 != "number" && (r3 = 0), !(r3 + t3.length > e3.length) && e3.indexOf(t3, r3) !== -1;
          }(e2, ".") ? "property" : "argument";
          a = 'The "'.concat(e2, '" ').concat(c, " ").concat(n2, " ").concat(s(t2, "type"));
        }
        return a += ". Received type ".concat(typeof r2);
      }, TypeError), i("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), i("ERR_METHOD_NOT_IMPLEMENTED", function(e2) {
        return "The " + e2 + " method is not implemented";
      }), i("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), i("ERR_STREAM_DESTROYED", function(e2) {
        return "Cannot call " + e2 + " after a stream was destroyed";
      }), i("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), i("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), i("ERR_STREAM_WRITE_AFTER_END", "write after end"), i("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), i("ERR_UNKNOWN_ENCODING", function(e2) {
        return "Unknown encoding: " + e2;
      }, TypeError), i("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), e.exports.codes = n;
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        var n = Object.keys || function(e2) {
          var t3 = [];
          for (var r2 in e2)
            t3.push(r2);
          return t3;
        };
        e.exports = u;
        var i = r(305), s = r(309);
        r(18)(u, i);
        for (var o = n(s.prototype), a = 0; a < o.length; a++) {
          var c = o[a];
          u.prototype[c] || (u.prototype[c] = s.prototype[c]);
        }
        function u(e2) {
          if (!(this instanceof u))
            return new u(e2);
          i.call(this, e2), s.call(this, e2), this.allowHalfOpen = true, e2 && (e2.readable === false && (this.readable = false), e2.writable === false && (this.writable = false), e2.allowHalfOpen === false && (this.allowHalfOpen = false, this.once("end", h)));
        }
        function h() {
          this._writableState.ended || t2.nextTick(f, this);
        }
        function f(e2) {
          e2.end();
        }
        Object.defineProperty(u.prototype, "writableHighWaterMark", {enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        }}), Object.defineProperty(u.prototype, "writableBuffer", {enumerable: false, get: function() {
          return this._writableState && this._writableState.getBuffer();
        }}), Object.defineProperty(u.prototype, "writableLength", {enumerable: false, get: function() {
          return this._writableState.length;
        }}), Object.defineProperty(u.prototype, "destroyed", {enumerable: false, get: function() {
          return this._readableState !== void 0 && this._writableState !== void 0 && (this._readableState.destroyed && this._writableState.destroyed);
        }, set: function(e2) {
          this._readableState !== void 0 && this._writableState !== void 0 && (this._readableState.destroyed = e2, this._writableState.destroyed = e2);
        }});
      }).call(this, r(10));
    }, function(e, t, r) {
      "use strict";
      var n = Object.create ? function(e2, t2, r2, n2) {
        n2 === void 0 && (n2 = r2), Object.defineProperty(e2, n2, {enumerable: true, get: function() {
          return t2[r2];
        }});
      } : function(e2, t2, r2, n2) {
        n2 === void 0 && (n2 = r2), e2[n2] = t2[r2];
      }, i = function(e2, t2) {
        for (var r2 in e2)
          r2 === "default" || t2.hasOwnProperty(r2) || n(t2, e2, r2);
      };
      Object.defineProperty(t, "__esModule", {value: true}), i(r(829), t), i(r(830), t), i(r(831), t), i(r(832), t);
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.ERR_TOPIC_VALIDATOR_IGNORE = t.ERR_TOPIC_VALIDATOR_REJECT = t.TimeCacheDuration = t.GossipsubIWantFollowupTime = t.GossipsubMaxIHaveMessages = t.GossipsubMaxIHaveLength = t.GossipsubGraftFloodThreshold = t.GossipsubOpportunisticGraftPeers = t.GossipsubOpportunisticGraftTicks = t.GossipsubDirectConnectInitialDelay = t.GossipsubDirectConnectTicks = t.GossipsubConnectionTimeout = t.GossipsubMaxPendingConnections = t.GossipsubConnectors = t.GossipsubPruneBackoffTicks = t.GossipsubPruneBackoff = t.GossipsubPrunePeers = t.GossipsubFanoutTTL = t.GossipsubHeartbeatInterval = t.GossipsubHeartbeatInitialDelay = t.GossipsubGossipRetransmission = t.GossipsubGossipFactor = t.GossipsubDlazy = t.GossipsubHistoryGossip = t.GossipsubHistoryLength = t.GossipsubDout = t.GossipsubDscore = t.GossipsubDhi = t.GossipsubDlo = t.GossipsubD = t.GossipsubIDv11 = t.GossipsubIDv10 = t.FloodsubID = t.minute = t.second = void 0, t.second = 1e3, t.minute = 60 * t.second, t.FloodsubID = "/floodsub/1.0.0", t.GossipsubIDv10 = "/meshsub/1.0.0", t.GossipsubIDv11 = "/meshsub/1.1.0", t.GossipsubD = 6, t.GossipsubDlo = 4, t.GossipsubDhi = 12, t.GossipsubDscore = 4, t.GossipsubDout = 2, t.GossipsubHistoryLength = 5, t.GossipsubHistoryGossip = 3, t.GossipsubDlazy = 6, t.GossipsubGossipFactor = 0.25, t.GossipsubGossipRetransmission = 3, t.GossipsubHeartbeatInitialDelay = 100, t.GossipsubHeartbeatInterval = t.second, t.GossipsubFanoutTTL = t.minute, t.GossipsubPrunePeers = 16, t.GossipsubPruneBackoff = t.minute, t.GossipsubPruneBackoffTicks = 15, t.GossipsubConnectors = 8, t.GossipsubMaxPendingConnections = 128, t.GossipsubConnectionTimeout = 30 * t.second, t.GossipsubDirectConnectTicks = 300, t.GossipsubDirectConnectInitialDelay = t.second, t.GossipsubOpportunisticGraftTicks = 60, t.GossipsubOpportunisticGraftPeers = 2, t.GossipsubGraftFloodThreshold = 10 * t.second, t.GossipsubMaxIHaveLength = 5e3, t.GossipsubMaxIHaveMessages = 10, t.GossipsubIWantFollowupTime = 3 * t.second, t.TimeCacheDuration = 12e4, t.ERR_TOPIC_VALIDATOR_REJECT = "ERR_TOPIC_VALIDATOR_REJECT", t.ERR_TOPIC_VALIDATOR_IGNORE = "ERR_TOPIC_VALIDATOR_IGNORE";
    }, function(e, t, r) {
      "use strict";
      var n, i = r(971), s = r(360), o = r(973), a = r(974), c = r(975);
      typeof ArrayBuffer != "undefined" && (n = r(976));
      var u = typeof navigator != "undefined" && /Android/i.test(navigator.userAgent), h = typeof navigator != "undefined" && /PhantomJS/i.test(navigator.userAgent), f = u || h;
      t.protocol = 3;
      var d = t.packets = {open: 0, close: 1, ping: 2, pong: 3, message: 4, upgrade: 5, noop: 6}, l = i(d), p = {type: "error", data: "parser error"}, y = r(977);
      function g(e2, t2, r2) {
        for (var n2 = new Array(e2.length), i2 = a(e2.length, r2), s2 = function(e3, r3, i3) {
          t2(r3, function(t3, r4) {
            n2[e3] = r4, i3(t3, n2);
          });
        }, o2 = 0; o2 < e2.length; o2++)
          s2(o2, e2[o2], i2);
      }
      t.encodePacket = function(e2, r2, n2, i2) {
        typeof r2 == "function" && (i2 = r2, r2 = false), typeof n2 == "function" && (i2 = n2, n2 = null);
        var s2 = e2.data === void 0 ? void 0 : e2.data.buffer || e2.data;
        if (typeof ArrayBuffer != "undefined" && s2 instanceof ArrayBuffer)
          return function(e3, r3, n3) {
            if (!r3)
              return t.encodeBase64Packet(e3, n3);
            var i3 = e3.data, s3 = new Uint8Array(i3), o3 = new Uint8Array(1 + i3.byteLength);
            o3[0] = d[e3.type];
            for (var a2 = 0; a2 < s3.length; a2++)
              o3[a2 + 1] = s3[a2];
            return n3(o3.buffer);
          }(e2, r2, i2);
        if (y !== void 0 && s2 instanceof y)
          return function(e3, r3, n3) {
            if (!r3)
              return t.encodeBase64Packet(e3, n3);
            if (f)
              return function(e4, r4, n4) {
                if (!r4)
                  return t.encodeBase64Packet(e4, n4);
                var i4 = new FileReader();
                return i4.onload = function() {
                  t.encodePacket({type: e4.type, data: i4.result}, r4, true, n4);
                }, i4.readAsArrayBuffer(e4.data);
              }(e3, r3, n3);
            var i3 = new Uint8Array(1);
            i3[0] = d[e3.type];
            var s3 = new y([i3.buffer, e3.data]);
            return n3(s3);
          }(e2, r2, i2);
        if (s2 && s2.base64)
          return function(e3, r3) {
            var n3 = "b" + t.packets[e3.type] + e3.data.data;
            return r3(n3);
          }(e2, i2);
        var o2 = d[e2.type];
        return e2.data !== void 0 && (o2 += n2 ? c.encode(String(e2.data), {strict: false}) : String(e2.data)), i2("" + o2);
      }, t.encodeBase64Packet = function(e2, r2) {
        var n2, i2 = "b" + t.packets[e2.type];
        if (y !== void 0 && e2.data instanceof y) {
          var s2 = new FileReader();
          return s2.onload = function() {
            var e3 = s2.result.split(",")[1];
            r2(i2 + e3);
          }, s2.readAsDataURL(e2.data);
        }
        try {
          n2 = String.fromCharCode.apply(null, new Uint8Array(e2.data));
        } catch (u2) {
          for (var o2 = new Uint8Array(e2.data), a2 = new Array(o2.length), c2 = 0; c2 < o2.length; c2++)
            a2[c2] = o2[c2];
          n2 = String.fromCharCode.apply(null, a2);
        }
        return i2 += btoa(n2), r2(i2);
      }, t.decodePacket = function(e2, r2, n2) {
        if (e2 === void 0)
          return p;
        if (typeof e2 == "string") {
          if (e2.charAt(0) === "b")
            return t.decodeBase64Packet(e2.substr(1), r2);
          if (n2 && (e2 = function(e3) {
            try {
              e3 = c.decode(e3, {strict: false});
            } catch (t2) {
              return false;
            }
            return e3;
          }(e2)) === false)
            return p;
          var i2 = e2.charAt(0);
          return Number(i2) == i2 && l[i2] ? e2.length > 1 ? {type: l[i2], data: e2.substring(1)} : {type: l[i2]} : p;
        }
        i2 = new Uint8Array(e2)[0];
        var s2 = o(e2, 1);
        return y && r2 === "blob" && (s2 = new y([s2])), {type: l[i2], data: s2};
      }, t.decodeBase64Packet = function(e2, t2) {
        var r2 = l[e2.charAt(0)];
        if (!n)
          return {type: r2, data: {base64: true, data: e2.substr(1)}};
        var i2 = n.decode(e2.substr(1));
        return t2 === "blob" && y && (i2 = new y([i2])), {type: r2, data: i2};
      }, t.encodePayload = function(e2, r2, n2) {
        typeof r2 == "function" && (n2 = r2, r2 = null);
        var i2 = s(e2);
        if (r2 && i2)
          return y && !f ? t.encodePayloadAsBlob(e2, n2) : t.encodePayloadAsArrayBuffer(e2, n2);
        if (!e2.length)
          return n2("0:");
        g(e2, function(e3, n3) {
          t.encodePacket(e3, !!i2 && r2, false, function(e4) {
            n3(null, function(e5) {
              return e5.length + ":" + e5;
            }(e4));
          });
        }, function(e3, t2) {
          return n2(t2.join(""));
        });
      }, t.decodePayload = function(e2, r2, n2) {
        if (typeof e2 != "string")
          return t.decodePayloadAsBinary(e2, r2, n2);
        var i2;
        if (typeof r2 == "function" && (n2 = r2, r2 = null), e2 === "")
          return n2(p, 0, 1);
        for (var s2, o2, a2 = "", c2 = 0, u2 = e2.length; c2 < u2; c2++) {
          var h2 = e2.charAt(c2);
          if (h2 === ":") {
            if (a2 === "" || a2 != (s2 = Number(a2)))
              return n2(p, 0, 1);
            if (a2 != (o2 = e2.substr(c2 + 1, s2)).length)
              return n2(p, 0, 1);
            if (o2.length) {
              if (i2 = t.decodePacket(o2, r2, false), p.type === i2.type && p.data === i2.data)
                return n2(p, 0, 1);
              if (n2(i2, c2 + s2, u2) === false)
                return;
            }
            c2 += s2, a2 = "";
          } else
            a2 += h2;
        }
        return a2 !== "" ? n2(p, 0, 1) : void 0;
      }, t.encodePayloadAsArrayBuffer = function(e2, r2) {
        if (!e2.length)
          return r2(new ArrayBuffer(0));
        g(e2, function(e3, r3) {
          t.encodePacket(e3, true, true, function(e4) {
            return r3(null, e4);
          });
        }, function(e3, t2) {
          var n2 = t2.reduce(function(e4, t3) {
            var r3;
            return e4 + (r3 = typeof t3 == "string" ? t3.length : t3.byteLength).toString().length + r3 + 2;
          }, 0), i2 = new Uint8Array(n2), s2 = 0;
          return t2.forEach(function(e4) {
            var t3 = typeof e4 == "string", r3 = e4;
            if (t3) {
              for (var n3 = new Uint8Array(e4.length), o2 = 0; o2 < e4.length; o2++)
                n3[o2] = e4.charCodeAt(o2);
              r3 = n3.buffer;
            }
            i2[s2++] = t3 ? 0 : 1;
            var a2 = r3.byteLength.toString();
            for (o2 = 0; o2 < a2.length; o2++)
              i2[s2++] = parseInt(a2[o2]);
            i2[s2++] = 255;
            for (n3 = new Uint8Array(r3), o2 = 0; o2 < n3.length; o2++)
              i2[s2++] = n3[o2];
          }), r2(i2.buffer);
        });
      }, t.encodePayloadAsBlob = function(e2, r2) {
        g(e2, function(e3, r3) {
          t.encodePacket(e3, true, true, function(e4) {
            var t2 = new Uint8Array(1);
            if (t2[0] = 1, typeof e4 == "string") {
              for (var n2 = new Uint8Array(e4.length), i2 = 0; i2 < e4.length; i2++)
                n2[i2] = e4.charCodeAt(i2);
              e4 = n2.buffer, t2[0] = 0;
            }
            var s2 = (e4 instanceof ArrayBuffer ? e4.byteLength : e4.size).toString(), o2 = new Uint8Array(s2.length + 1);
            for (i2 = 0; i2 < s2.length; i2++)
              o2[i2] = parseInt(s2[i2]);
            if (o2[s2.length] = 255, y) {
              var a2 = new y([t2.buffer, o2.buffer, e4]);
              r3(null, a2);
            }
          });
        }, function(e3, t2) {
          return r2(new y(t2));
        });
      }, t.decodePayloadAsBinary = function(e2, r2, n2) {
        typeof r2 == "function" && (n2 = r2, r2 = null);
        for (var i2 = e2, s2 = []; i2.byteLength > 0; ) {
          for (var a2 = new Uint8Array(i2), c2 = a2[0] === 0, u2 = "", h2 = 1; a2[h2] !== 255; h2++) {
            if (u2.length > 310)
              return n2(p, 0, 1);
            u2 += a2[h2];
          }
          i2 = o(i2, 2 + u2.length), u2 = parseInt(u2);
          var f2 = o(i2, 0, u2);
          if (c2)
            try {
              f2 = String.fromCharCode.apply(null, new Uint8Array(f2));
            } catch (y2) {
              var d2 = new Uint8Array(f2);
              f2 = "";
              for (h2 = 0; h2 < d2.length; h2++)
                f2 += String.fromCharCode(d2[h2]);
            }
          s2.push(f2), i2 = o(i2, u2);
        }
        var l2 = s2.length;
        s2.forEach(function(e3, i3) {
          n2(t.decodePacket(e3, r2, true), i3, l2);
        });
      };
    }, function(e, t, r) {
      "use strict";
      const n = Object.freeze({identity: 0, cidv1: 1, cidv2: 2, cidv3: 3, ip4: 4, tcp: 6, sha1: 17, "sha2-256": 18, "sha2-512": 19, "sha3-512": 20, "sha3-384": 21, "sha3-256": 22, "sha3-224": 23, "shake-128": 24, "shake-256": 25, "keccak-224": 26, "keccak-256": 27, "keccak-384": 28, "keccak-512": 29, blake3: 30, dccp: 33, "murmur3-128": 34, "murmur3-32": 35, ip6: 41, ip6zone: 42, path: 47, multicodec: 48, multihash: 49, multiaddr: 50, multibase: 51, dns: 53, dns4: 54, dns6: 55, dnsaddr: 56, protobuf: 80, cbor: 81, raw: 85, "dbl-sha2-256": 86, rlp: 96, bencode: 99, "dag-pb": 112, "dag-cbor": 113, "libp2p-key": 114, "git-raw": 120, "torrent-info": 123, "torrent-file": 124, "leofcoin-block": 129, "leofcoin-tx": 130, "leofcoin-pr": 131, sctp: 132, "dag-jose": 133, "dag-cose": 134, "eth-block": 144, "eth-block-list": 145, "eth-tx-trie": 146, "eth-tx": 147, "eth-tx-receipt-trie": 148, "eth-tx-receipt": 149, "eth-state-trie": 150, "eth-account-snapshot": 151, "eth-storage-trie": 152, "bitcoin-block": 176, "bitcoin-tx": 177, "bitcoin-witness-commitment": 178, "zcash-block": 192, "zcash-tx": 193, docid: 206, "stellar-block": 208, "stellar-tx": 209, md4: 212, md5: 213, bmt: 214, "decred-block": 224, "decred-tx": 225, "ipld-ns": 226, "ipfs-ns": 227, "swarm-ns": 228, "ipns-ns": 229, zeronet: 230, "secp256k1-pub": 231, "bls12_381-g1-pub": 234, "bls12_381-g2-pub": 235, "x25519-pub": 236, "ed25519-pub": 237, "bls12_381-g1g2-pub": 238, "dash-block": 240, "dash-tx": 241, "swarm-manifest": 250, "swarm-feed": 251, udp: 273, "p2p-webrtc-star": 275, "p2p-webrtc-direct": 276, "p2p-stardust": 277, "p2p-circuit": 290, "dag-json": 297, udt: 301, utp: 302, unix: 400, p2p: 421, ipfs: 421, https: 443, onion: 444, onion3: 445, garlic64: 446, garlic32: 447, tls: 448, quic: 460, ws: 477, wss: 478, "p2p-websocket-star": 479, http: 480, json: 512, messagepack: 513, "libp2p-peer-record": 769, "sha2-256-trunc254-padded": 4114, "ripemd-128": 4178, "ripemd-160": 4179, "ripemd-256": 4180, "ripemd-320": 4181, x11: 4352, "p256-pub": 4608, "p384-pub": 4609, "p521-pub": 4610, "ed448-pub": 4611, "x448-pub": 4612, "ed25519-priv": 4864, kangarootwelve: 7425, "sm3-256": 21325, "blake2b-8": 45569, "blake2b-16": 45570, "blake2b-24": 45571, "blake2b-32": 45572, "blake2b-40": 45573, "blake2b-48": 45574, "blake2b-56": 45575, "blake2b-64": 45576, "blake2b-72": 45577, "blake2b-80": 45578, "blake2b-88": 45579, "blake2b-96": 45580, "blake2b-104": 45581, "blake2b-112": 45582, "blake2b-120": 45583, "blake2b-128": 45584, "blake2b-136": 45585, "blake2b-144": 45586, "blake2b-152": 45587, "blake2b-160": 45588, "blake2b-168": 45589, "blake2b-176": 45590, "blake2b-184": 45591, "blake2b-192": 45592, "blake2b-200": 45593, "blake2b-208": 45594, "blake2b-216": 45595, "blake2b-224": 45596, "blake2b-232": 45597, "blake2b-240": 45598, "blake2b-248": 45599, "blake2b-256": 45600, "blake2b-264": 45601, "blake2b-272": 45602, "blake2b-280": 45603, "blake2b-288": 45604, "blake2b-296": 45605, "blake2b-304": 45606, "blake2b-312": 45607, "blake2b-320": 45608, "blake2b-328": 45609, "blake2b-336": 45610, "blake2b-344": 45611, "blake2b-352": 45612, "blake2b-360": 45613, "blake2b-368": 45614, "blake2b-376": 45615, "blake2b-384": 45616, "blake2b-392": 45617, "blake2b-400": 45618, "blake2b-408": 45619, "blake2b-416": 45620, "blake2b-424": 45621, "blake2b-432": 45622, "blake2b-440": 45623, "blake2b-448": 45624, "blake2b-456": 45625, "blake2b-464": 45626, "blake2b-472": 45627, "blake2b-480": 45628, "blake2b-488": 45629, "blake2b-496": 45630, "blake2b-504": 45631, "blake2b-512": 45632, "blake2s-8": 45633, "blake2s-16": 45634, "blake2s-24": 45635, "blake2s-32": 45636, "blake2s-40": 45637, "blake2s-48": 45638, "blake2s-56": 45639, "blake2s-64": 45640, "blake2s-72": 45641, "blake2s-80": 45642, "blake2s-88": 45643, "blake2s-96": 45644, "blake2s-104": 45645, "blake2s-112": 45646, "blake2s-120": 45647, "blake2s-128": 45648, "blake2s-136": 45649, "blake2s-144": 45650, "blake2s-152": 45651, "blake2s-160": 45652, "blake2s-168": 45653, "blake2s-176": 45654, "blake2s-184": 45655, "blake2s-192": 45656, "blake2s-200": 45657, "blake2s-208": 45658, "blake2s-216": 45659, "blake2s-224": 45660, "blake2s-232": 45661, "blake2s-240": 45662, "blake2s-248": 45663, "blake2s-256": 45664, "skein256-8": 45825, "skein256-16": 45826, "skein256-24": 45827, "skein256-32": 45828, "skein256-40": 45829, "skein256-48": 45830, "skein256-56": 45831, "skein256-64": 45832, "skein256-72": 45833, "skein256-80": 45834, "skein256-88": 45835, "skein256-96": 45836, "skein256-104": 45837, "skein256-112": 45838, "skein256-120": 45839, "skein256-128": 45840, "skein256-136": 45841, "skein256-144": 45842, "skein256-152": 45843, "skein256-160": 45844, "skein256-168": 45845, "skein256-176": 45846, "skein256-184": 45847, "skein256-192": 45848, "skein256-200": 45849, "skein256-208": 45850, "skein256-216": 45851, "skein256-224": 45852, "skein256-232": 45853, "skein256-240": 45854, "skein256-248": 45855, "skein256-256": 45856, "skein512-8": 45857, "skein512-16": 45858, "skein512-24": 45859, "skein512-32": 45860, "skein512-40": 45861, "skein512-48": 45862, "skein512-56": 45863, "skein512-64": 45864, "skein512-72": 45865, "skein512-80": 45866, "skein512-88": 45867, "skein512-96": 45868, "skein512-104": 45869, "skein512-112": 45870, "skein512-120": 45871, "skein512-128": 45872, "skein512-136": 45873, "skein512-144": 45874, "skein512-152": 45875, "skein512-160": 45876, "skein512-168": 45877, "skein512-176": 45878, "skein512-184": 45879, "skein512-192": 45880, "skein512-200": 45881, "skein512-208": 45882, "skein512-216": 45883, "skein512-224": 45884, "skein512-232": 45885, "skein512-240": 45886, "skein512-248": 45887, "skein512-256": 45888, "skein512-264": 45889, "skein512-272": 45890, "skein512-280": 45891, "skein512-288": 45892, "skein512-296": 45893, "skein512-304": 45894, "skein512-312": 45895, "skein512-320": 45896, "skein512-328": 45897, "skein512-336": 45898, "skein512-344": 45899, "skein512-352": 45900, "skein512-360": 45901, "skein512-368": 45902, "skein512-376": 45903, "skein512-384": 45904, "skein512-392": 45905, "skein512-400": 45906, "skein512-408": 45907, "skein512-416": 45908, "skein512-424": 45909, "skein512-432": 45910, "skein512-440": 45911, "skein512-448": 45912, "skein512-456": 45913, "skein512-464": 45914, "skein512-472": 45915, "skein512-480": 45916, "skein512-488": 45917, "skein512-496": 45918, "skein512-504": 45919, "skein512-512": 45920, "skein1024-8": 45921, "skein1024-16": 45922, "skein1024-24": 45923, "skein1024-32": 45924, "skein1024-40": 45925, "skein1024-48": 45926, "skein1024-56": 45927, "skein1024-64": 45928, "skein1024-72": 45929, "skein1024-80": 45930, "skein1024-88": 45931, "skein1024-96": 45932, "skein1024-104": 45933, "skein1024-112": 45934, "skein1024-120": 45935, "skein1024-128": 45936, "skein1024-136": 45937, "skein1024-144": 45938, "skein1024-152": 45939, "skein1024-160": 45940, "skein1024-168": 45941, "skein1024-176": 45942, "skein1024-184": 45943, "skein1024-192": 45944, "skein1024-200": 45945, "skein1024-208": 45946, "skein1024-216": 45947, "skein1024-224": 45948, "skein1024-232": 45949, "skein1024-240": 45950, "skein1024-248": 45951, "skein1024-256": 45952, "skein1024-264": 45953, "skein1024-272": 45954, "skein1024-280": 45955, "skein1024-288": 45956, "skein1024-296": 45957, "skein1024-304": 45958, "skein1024-312": 45959, "skein1024-320": 45960, "skein1024-328": 45961, "skein1024-336": 45962, "skein1024-344": 45963, "skein1024-352": 45964, "skein1024-360": 45965, "skein1024-368": 45966, "skein1024-376": 45967, "skein1024-384": 45968, "skein1024-392": 45969, "skein1024-400": 45970, "skein1024-408": 45971, "skein1024-416": 45972, "skein1024-424": 45973, "skein1024-432": 45974, "skein1024-440": 45975, "skein1024-448": 45976, "skein1024-456": 45977, "skein1024-464": 45978, "skein1024-472": 45979, "skein1024-480": 45980, "skein1024-488": 45981, "skein1024-496": 45982, "skein1024-504": 45983, "skein1024-512": 45984, "skein1024-520": 45985, "skein1024-528": 45986, "skein1024-536": 45987, "skein1024-544": 45988, "skein1024-552": 45989, "skein1024-560": 45990, "skein1024-568": 45991, "skein1024-576": 45992, "skein1024-584": 45993, "skein1024-592": 45994, "skein1024-600": 45995, "skein1024-608": 45996, "skein1024-616": 45997, "skein1024-624": 45998, "skein1024-632": 45999, "skein1024-640": 46e3, "skein1024-648": 46001, "skein1024-656": 46002, "skein1024-664": 46003, "skein1024-672": 46004, "skein1024-680": 46005, "skein1024-688": 46006, "skein1024-696": 46007, "skein1024-704": 46008, "skein1024-712": 46009, "skein1024-720": 46010, "skein1024-728": 46011, "skein1024-736": 46012, "skein1024-744": 46013, "skein1024-752": 46014, "skein1024-760": 46015, "skein1024-768": 46016, "skein1024-776": 46017, "skein1024-784": 46018, "skein1024-792": 46019, "skein1024-800": 46020, "skein1024-808": 46021, "skein1024-816": 46022, "skein1024-824": 46023, "skein1024-832": 46024, "skein1024-840": 46025, "skein1024-848": 46026, "skein1024-856": 46027, "skein1024-864": 46028, "skein1024-872": 46029, "skein1024-880": 46030, "skein1024-888": 46031, "skein1024-896": 46032, "skein1024-904": 46033, "skein1024-912": 46034, "skein1024-920": 46035, "skein1024-928": 46036, "skein1024-936": 46037, "skein1024-944": 46038, "skein1024-952": 46039, "skein1024-960": 46040, "skein1024-968": 46041, "skein1024-976": 46042, "skein1024-984": 46043, "skein1024-992": 46044, "skein1024-1000": 46045, "skein1024-1008": 46046, "skein1024-1016": 46047, "skein1024-1024": 46048, "poseidon-bls12_381-a2-fc1": 46081, "poseidon-bls12_381-a2-fc1-sc": 46082, "zeroxcert-imprint-256": 52753, "fil-commitment-unsealed": 61697, "fil-commitment-sealed": 61698, "holochain-adr-v0": 8417572, "holochain-adr-v1": 8483108, "holochain-key-v0": 9728292, "holochain-key-v1": 9793828, "holochain-sig-v0": 10645796, "holochain-sig-v1": 10711332, "skynet-ns": 11639056});
      e.exports = {baseTable: n};
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      n.pki = n.pki || {};
      var i = e.exports = n.pki.oids = n.oids = n.oids || {};
      function s(e2, t2) {
        i[e2] = t2, i[t2] = e2;
      }
      function o(e2, t2) {
        i[e2] = t2;
      }
      s("1.2.840.113549.1.1.1", "rsaEncryption"), s("1.2.840.113549.1.1.4", "md5WithRSAEncryption"), s("1.2.840.113549.1.1.5", "sha1WithRSAEncryption"), s("1.2.840.113549.1.1.7", "RSAES-OAEP"), s("1.2.840.113549.1.1.8", "mgf1"), s("1.2.840.113549.1.1.9", "pSpecified"), s("1.2.840.113549.1.1.10", "RSASSA-PSS"), s("1.2.840.113549.1.1.11", "sha256WithRSAEncryption"), s("1.2.840.113549.1.1.12", "sha384WithRSAEncryption"), s("1.2.840.113549.1.1.13", "sha512WithRSAEncryption"), s("1.3.101.112", "EdDSA25519"), s("1.2.840.10040.4.3", "dsa-with-sha1"), s("1.3.14.3.2.7", "desCBC"), s("1.3.14.3.2.26", "sha1"), s("2.16.840.1.101.3.4.2.1", "sha256"), s("2.16.840.1.101.3.4.2.2", "sha384"), s("2.16.840.1.101.3.4.2.3", "sha512"), s("1.2.840.113549.2.5", "md5"), s("1.2.840.113549.1.7.1", "data"), s("1.2.840.113549.1.7.2", "signedData"), s("1.2.840.113549.1.7.3", "envelopedData"), s("1.2.840.113549.1.7.4", "signedAndEnvelopedData"), s("1.2.840.113549.1.7.5", "digestedData"), s("1.2.840.113549.1.7.6", "encryptedData"), s("1.2.840.113549.1.9.1", "emailAddress"), s("1.2.840.113549.1.9.2", "unstructuredName"), s("1.2.840.113549.1.9.3", "contentType"), s("1.2.840.113549.1.9.4", "messageDigest"), s("1.2.840.113549.1.9.5", "signingTime"), s("1.2.840.113549.1.9.6", "counterSignature"), s("1.2.840.113549.1.9.7", "challengePassword"), s("1.2.840.113549.1.9.8", "unstructuredAddress"), s("1.2.840.113549.1.9.14", "extensionRequest"), s("1.2.840.113549.1.9.20", "friendlyName"), s("1.2.840.113549.1.9.21", "localKeyId"), s("1.2.840.113549.1.9.22.1", "x509Certificate"), s("1.2.840.113549.1.12.10.1.1", "keyBag"), s("1.2.840.113549.1.12.10.1.2", "pkcs8ShroudedKeyBag"), s("1.2.840.113549.1.12.10.1.3", "certBag"), s("1.2.840.113549.1.12.10.1.4", "crlBag"), s("1.2.840.113549.1.12.10.1.5", "secretBag"), s("1.2.840.113549.1.12.10.1.6", "safeContentsBag"), s("1.2.840.113549.1.5.13", "pkcs5PBES2"), s("1.2.840.113549.1.5.12", "pkcs5PBKDF2"), s("1.2.840.113549.1.12.1.1", "pbeWithSHAAnd128BitRC4"), s("1.2.840.113549.1.12.1.2", "pbeWithSHAAnd40BitRC4"), s("1.2.840.113549.1.12.1.3", "pbeWithSHAAnd3-KeyTripleDES-CBC"), s("1.2.840.113549.1.12.1.4", "pbeWithSHAAnd2-KeyTripleDES-CBC"), s("1.2.840.113549.1.12.1.5", "pbeWithSHAAnd128BitRC2-CBC"), s("1.2.840.113549.1.12.1.6", "pbewithSHAAnd40BitRC2-CBC"), s("1.2.840.113549.2.7", "hmacWithSHA1"), s("1.2.840.113549.2.8", "hmacWithSHA224"), s("1.2.840.113549.2.9", "hmacWithSHA256"), s("1.2.840.113549.2.10", "hmacWithSHA384"), s("1.2.840.113549.2.11", "hmacWithSHA512"), s("1.2.840.113549.3.7", "des-EDE3-CBC"), s("2.16.840.1.101.3.4.1.2", "aes128-CBC"), s("2.16.840.1.101.3.4.1.22", "aes192-CBC"), s("2.16.840.1.101.3.4.1.42", "aes256-CBC"), s("2.5.4.3", "commonName"), s("2.5.4.5", "serialName"), s("2.5.4.6", "countryName"), s("2.5.4.7", "localityName"), s("2.5.4.8", "stateOrProvinceName"), s("2.5.4.9", "streetAddress"), s("2.5.4.10", "organizationName"), s("2.5.4.11", "organizationalUnitName"), s("2.5.4.13", "description"), s("2.5.4.15", "businessCategory"), s("2.5.4.17", "postalCode"), s("1.3.6.1.4.1.311.60.2.1.2", "jurisdictionOfIncorporationStateOrProvinceName"), s("1.3.6.1.4.1.311.60.2.1.3", "jurisdictionOfIncorporationCountryName"), s("2.16.840.1.113730.1.1", "nsCertType"), s("2.16.840.1.113730.1.13", "nsComment"), o("2.5.29.1", "authorityKeyIdentifier"), o("2.5.29.2", "keyAttributes"), o("2.5.29.3", "certificatePolicies"), o("2.5.29.4", "keyUsageRestriction"), o("2.5.29.5", "policyMapping"), o("2.5.29.6", "subtreesConstraint"), o("2.5.29.7", "subjectAltName"), o("2.5.29.8", "issuerAltName"), o("2.5.29.9", "subjectDirectoryAttributes"), o("2.5.29.10", "basicConstraints"), o("2.5.29.11", "nameConstraints"), o("2.5.29.12", "policyConstraints"), o("2.5.29.13", "basicConstraints"), s("2.5.29.14", "subjectKeyIdentifier"), s("2.5.29.15", "keyUsage"), o("2.5.29.16", "privateKeyUsagePeriod"), s("2.5.29.17", "subjectAltName"), s("2.5.29.18", "issuerAltName"), s("2.5.29.19", "basicConstraints"), o("2.5.29.20", "cRLNumber"), o("2.5.29.21", "cRLReason"), o("2.5.29.22", "expirationDate"), o("2.5.29.23", "instructionCode"), o("2.5.29.24", "invalidityDate"), o("2.5.29.25", "cRLDistributionPoints"), o("2.5.29.26", "issuingDistributionPoint"), o("2.5.29.27", "deltaCRLIndicator"), o("2.5.29.28", "issuingDistributionPoint"), o("2.5.29.29", "certificateIssuer"), o("2.5.29.30", "nameConstraints"), s("2.5.29.31", "cRLDistributionPoints"), s("2.5.29.32", "certificatePolicies"), o("2.5.29.33", "policyMappings"), o("2.5.29.34", "policyConstraints"), s("2.5.29.35", "authorityKeyIdentifier"), o("2.5.29.36", "policyConstraints"), s("2.5.29.37", "extKeyUsage"), o("2.5.29.46", "freshestCRL"), o("2.5.29.54", "inhibitAnyPolicy"), s("1.3.6.1.4.1.11129.2.4.2", "timestampList"), s("1.3.6.1.5.5.7.1.1", "authorityInfoAccess"), s("1.3.6.1.5.5.7.3.1", "serverAuth"), s("1.3.6.1.5.5.7.3.2", "clientAuth"), s("1.3.6.1.5.5.7.3.3", "codeSigning"), s("1.3.6.1.5.5.7.3.4", "emailProtection"), s("1.3.6.1.5.5.7.3.8", "timeStamping");
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      function i(e2, t2) {
        n.cipher.registerAlgorithm(e2, function() {
          return new n.aes.Algorithm(e2, t2);
        });
      }
      r(226), r(227), r(13), e.exports = n.aes = n.aes || {}, n.aes.startEncrypting = function(e2, t2, r2, n2) {
        var i2 = p({key: e2, output: r2, decrypt: false, mode: n2});
        return i2.start(t2), i2;
      }, n.aes.createEncryptionCipher = function(e2, t2) {
        return p({key: e2, output: null, decrypt: false, mode: t2});
      }, n.aes.startDecrypting = function(e2, t2, r2, n2) {
        var i2 = p({key: e2, output: r2, decrypt: true, mode: n2});
        return i2.start(t2), i2;
      }, n.aes.createDecryptionCipher = function(e2, t2) {
        return p({key: e2, output: null, decrypt: true, mode: t2});
      }, n.aes.Algorithm = function(e2, t2) {
        h || f();
        var r2 = this;
        r2.name = e2, r2.mode = new t2({blockSize: 16, cipher: {encrypt: function(e3, t3) {
          return l(r2._w, e3, t3, false);
        }, decrypt: function(e3, t3) {
          return l(r2._w, e3, t3, true);
        }}}), r2._init = false;
      }, n.aes.Algorithm.prototype.initialize = function(e2) {
        if (!this._init) {
          var t2, r2 = e2.key;
          if (typeof r2 != "string" || r2.length !== 16 && r2.length !== 24 && r2.length !== 32) {
            if (n.util.isArray(r2) && (r2.length === 16 || r2.length === 24 || r2.length === 32)) {
              t2 = r2, r2 = n.util.createBuffer();
              for (var i2 = 0; i2 < t2.length; ++i2)
                r2.putByte(t2[i2]);
            }
          } else
            r2 = n.util.createBuffer(r2);
          if (!n.util.isArray(r2)) {
            t2 = r2, r2 = [];
            var s2 = t2.length();
            if (s2 === 16 || s2 === 24 || s2 === 32) {
              s2 >>>= 2;
              for (i2 = 0; i2 < s2; ++i2)
                r2.push(t2.getInt32());
            }
          }
          if (!n.util.isArray(r2) || r2.length !== 4 && r2.length !== 6 && r2.length !== 8)
            throw new Error("Invalid key parameter.");
          var o2 = this.mode.name, a2 = ["CFB", "OFB", "CTR", "GCM"].indexOf(o2) !== -1;
          this._w = d(r2, e2.decrypt && !a2), this._init = true;
        }
      }, n.aes._expandKey = function(e2, t2) {
        return h || f(), d(e2, t2);
      }, n.aes._updateBlock = l, i("AES-ECB", n.cipher.modes.ecb), i("AES-CBC", n.cipher.modes.cbc), i("AES-CFB", n.cipher.modes.cfb), i("AES-OFB", n.cipher.modes.ofb), i("AES-CTR", n.cipher.modes.ctr), i("AES-GCM", n.cipher.modes.gcm);
      var s, o, a, c, u, h = false;
      function f() {
        h = true, a = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54];
        for (var e2 = new Array(256), t2 = 0; t2 < 128; ++t2)
          e2[t2] = t2 << 1, e2[t2 + 128] = t2 + 128 << 1 ^ 283;
        s = new Array(256), o = new Array(256), c = new Array(4), u = new Array(4);
        for (t2 = 0; t2 < 4; ++t2)
          c[t2] = new Array(256), u[t2] = new Array(256);
        var r2, n2, i2, f2, d2, l2, p2, y = 0, g = 0;
        for (t2 = 0; t2 < 256; ++t2) {
          f2 = (f2 = g ^ g << 1 ^ g << 2 ^ g << 3 ^ g << 4) >> 8 ^ 255 & f2 ^ 99, s[y] = f2, o[f2] = y, l2 = (d2 = e2[f2]) << 24 ^ f2 << 16 ^ f2 << 8 ^ f2 ^ d2, p2 = ((r2 = e2[y]) ^ (n2 = e2[r2]) ^ (i2 = e2[n2])) << 24 ^ (y ^ i2) << 16 ^ (y ^ n2 ^ i2) << 8 ^ y ^ r2 ^ i2;
          for (var b = 0; b < 4; ++b)
            c[b][y] = l2, u[b][f2] = p2, l2 = l2 << 24 | l2 >>> 8, p2 = p2 << 24 | p2 >>> 8;
          y === 0 ? y = g = 1 : (y = r2 ^ e2[e2[e2[r2 ^ i2]]], g ^= e2[e2[g]]);
        }
      }
      function d(e2, t2) {
        for (var r2, n2 = e2.slice(0), i2 = 1, o2 = n2.length, c2 = 4 * (o2 + 6 + 1), h2 = o2; h2 < c2; ++h2)
          r2 = n2[h2 - 1], h2 % o2 == 0 ? (r2 = s[r2 >>> 16 & 255] << 24 ^ s[r2 >>> 8 & 255] << 16 ^ s[255 & r2] << 8 ^ s[r2 >>> 24] ^ a[i2] << 24, i2++) : o2 > 6 && h2 % o2 == 4 && (r2 = s[r2 >>> 24] << 24 ^ s[r2 >>> 16 & 255] << 16 ^ s[r2 >>> 8 & 255] << 8 ^ s[255 & r2]), n2[h2] = n2[h2 - o2] ^ r2;
        if (t2) {
          for (var f2, d2 = u[0], l2 = u[1], p2 = u[2], y = u[3], g = n2.slice(0), b = (h2 = 0, (c2 = n2.length) - 4); h2 < c2; h2 += 4, b -= 4)
            if (h2 === 0 || h2 === c2 - 4)
              g[h2] = n2[b], g[h2 + 1] = n2[b + 3], g[h2 + 2] = n2[b + 2], g[h2 + 3] = n2[b + 1];
            else
              for (var m = 0; m < 4; ++m)
                f2 = n2[b + m], g[h2 + (3 & -m)] = d2[s[f2 >>> 24]] ^ l2[s[f2 >>> 16 & 255]] ^ p2[s[f2 >>> 8 & 255]] ^ y[s[255 & f2]];
          n2 = g;
        }
        return n2;
      }
      function l(e2, t2, r2, n2) {
        var i2, a2, h2, f2, d2, l2, p2, y, g, b, m, v, w = e2.length / 4 - 1;
        n2 ? (i2 = u[0], a2 = u[1], h2 = u[2], f2 = u[3], d2 = o) : (i2 = c[0], a2 = c[1], h2 = c[2], f2 = c[3], d2 = s), l2 = t2[0] ^ e2[0], p2 = t2[n2 ? 3 : 1] ^ e2[1], y = t2[2] ^ e2[2], g = t2[n2 ? 1 : 3] ^ e2[3];
        for (var _ = 3, E = 1; E < w; ++E)
          b = i2[l2 >>> 24] ^ a2[p2 >>> 16 & 255] ^ h2[y >>> 8 & 255] ^ f2[255 & g] ^ e2[++_], m = i2[p2 >>> 24] ^ a2[y >>> 16 & 255] ^ h2[g >>> 8 & 255] ^ f2[255 & l2] ^ e2[++_], v = i2[y >>> 24] ^ a2[g >>> 16 & 255] ^ h2[l2 >>> 8 & 255] ^ f2[255 & p2] ^ e2[++_], g = i2[g >>> 24] ^ a2[l2 >>> 16 & 255] ^ h2[p2 >>> 8 & 255] ^ f2[255 & y] ^ e2[++_], l2 = b, p2 = m, y = v;
        r2[0] = d2[l2 >>> 24] << 24 ^ d2[p2 >>> 16 & 255] << 16 ^ d2[y >>> 8 & 255] << 8 ^ d2[255 & g] ^ e2[++_], r2[n2 ? 3 : 1] = d2[p2 >>> 24] << 24 ^ d2[y >>> 16 & 255] << 16 ^ d2[g >>> 8 & 255] << 8 ^ d2[255 & l2] ^ e2[++_], r2[2] = d2[y >>> 24] << 24 ^ d2[g >>> 16 & 255] << 16 ^ d2[l2 >>> 8 & 255] << 8 ^ d2[255 & p2] ^ e2[++_], r2[n2 ? 1 : 3] = d2[g >>> 24] << 24 ^ d2[l2 >>> 16 & 255] << 16 ^ d2[p2 >>> 8 & 255] << 8 ^ d2[255 & y] ^ e2[++_];
      }
      function p(e2) {
        var t2, r2 = "AES-" + ((e2 = e2 || {}).mode || "CBC").toUpperCase(), i2 = (t2 = e2.decrypt ? n.cipher.createDecipher(r2, e2.key) : n.cipher.createCipher(r2, e2.key)).start;
        return t2.start = function(e3, r3) {
          var s2 = null;
          r3 instanceof n.util.ByteBuffer && (s2 = r3, r3 = {}), (r3 = r3 || {}).output = s2, r3.iv = e3, i2.call(t2, r3);
        }, t2;
      }
    }, function(e, t, r) {
      "use strict";
      const n = r(48), i = self.crypto || self.msCrypto, s = async (e2, t2) => {
        if (typeof self == "undefined" || !self.crypto && !self.msCrypto)
          throw new Error("Please use a browser with webcrypto support and ensure the code has been delivered securely via HTTPS/TLS and run within a Secure Context");
        switch (t2) {
          case "sha1":
            return new Uint8Array(await i.subtle.digest({name: "SHA-1"}, e2));
          case "sha2-256":
            return new Uint8Array(await i.subtle.digest({name: "SHA-256"}, e2));
          case "sha2-512":
            return new Uint8Array(await i.subtle.digest({name: "SHA-512"}, e2));
          case "dbl-sha2-256": {
            const t3 = await i.subtle.digest({name: "SHA-256"}, e2);
            return new Uint8Array(await i.subtle.digest({name: "SHA-256"}, t3));
          }
          default:
            throw new Error(t2 + " is not a supported algorithm");
        }
      };
      e.exports = {factory: (e2) => async (t2) => s(t2, e2), digest: s, multihashing: async (e2, t2, r2) => {
        const i2 = await s(e2, t2);
        return n.encode(i2, t2, r2);
      }};
    }, function(e, t, r) {
      "use strict";
      var n = r(35), i = r(51);
      function s() {
        this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
      }
      t.BlockHash = s, s.prototype.update = function(e2, t2) {
        if (e2 = n.toArray(e2, t2), this.pending ? this.pending = this.pending.concat(e2) : this.pending = e2, this.pendingTotal += e2.length, this.pending.length >= this._delta8) {
          var r2 = (e2 = this.pending).length % this._delta8;
          this.pending = e2.slice(e2.length - r2, e2.length), this.pending.length === 0 && (this.pending = null), e2 = n.join32(e2, 0, e2.length - r2, this.endian);
          for (var i2 = 0; i2 < e2.length; i2 += this._delta32)
            this._update(e2, i2, i2 + this._delta32);
        }
        return this;
      }, s.prototype.digest = function(e2) {
        return this.update(this._pad()), i(this.pending === null), this._digest(e2);
      }, s.prototype._pad = function() {
        var e2 = this.pendingTotal, t2 = this._delta8, r2 = t2 - (e2 + this.padLength) % t2, n2 = new Array(r2 + this.padLength);
        n2[0] = 128;
        for (var i2 = 1; i2 < r2; i2++)
          n2[i2] = 0;
        if (e2 <<= 3, this.endian === "big") {
          for (var s2 = 8; s2 < this.padLength; s2++)
            n2[i2++] = 0;
          n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = e2 >>> 24 & 255, n2[i2++] = e2 >>> 16 & 255, n2[i2++] = e2 >>> 8 & 255, n2[i2++] = 255 & e2;
        } else
          for (n2[i2++] = 255 & e2, n2[i2++] = e2 >>> 8 & 255, n2[i2++] = e2 >>> 16 & 255, n2[i2++] = e2 >>> 24 & 255, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, s2 = 8; s2 < this.padLength; s2++)
            n2[i2++] = 0;
        return n2;
      };
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true});
      const n = r(538), i = r(539), s = r(540), o = () => {
      }, a = new i.TimeoutError();
      t.default = class extends n {
        constructor(e2) {
          var t2, r2, n2, i2;
          if (super(), this._intervalCount = 0, this._intervalEnd = 0, this._pendingCount = 0, this._resolveEmpty = o, this._resolveIdle = o, !(typeof (e2 = Object.assign({carryoverConcurrencyCount: false, intervalCap: 1 / 0, interval: 0, concurrency: 1 / 0, autoStart: true, queueClass: s.default}, e2)).intervalCap == "number" && e2.intervalCap >= 1))
            throw new TypeError(`Expected \`intervalCap\` to be a number from 1 and up, got \`${(r2 = (t2 = e2.intervalCap) === null || t2 === void 0 ? void 0 : t2.toString()) !== null && r2 !== void 0 ? r2 : ""}\` (${typeof e2.intervalCap})`);
          if (e2.interval === void 0 || !(Number.isFinite(e2.interval) && e2.interval >= 0))
            throw new TypeError(`Expected \`interval\` to be a finite number >= 0, got \`${(i2 = (n2 = e2.interval) === null || n2 === void 0 ? void 0 : n2.toString()) !== null && i2 !== void 0 ? i2 : ""}\` (${typeof e2.interval})`);
          this._carryoverConcurrencyCount = e2.carryoverConcurrencyCount, this._isIntervalIgnored = e2.intervalCap === 1 / 0 || e2.interval === 0, this._intervalCap = e2.intervalCap, this._interval = e2.interval, this._queue = new e2.queueClass(), this._queueClass = e2.queueClass, this.concurrency = e2.concurrency, this._timeout = e2.timeout, this._throwOnTimeout = e2.throwOnTimeout === true, this._isPaused = e2.autoStart === false;
        }
        get _doesIntervalAllowAnother() {
          return this._isIntervalIgnored || this._intervalCount < this._intervalCap;
        }
        get _doesConcurrentAllowAnother() {
          return this._pendingCount < this._concurrency;
        }
        _next() {
          this._pendingCount--, this._tryToStartAnother(), this.emit("next");
        }
        _resolvePromises() {
          this._resolveEmpty(), this._resolveEmpty = o, this._pendingCount === 0 && (this._resolveIdle(), this._resolveIdle = o, this.emit("idle"));
        }
        _onResumeInterval() {
          this._onInterval(), this._initializeIntervalIfNeeded(), this._timeoutId = void 0;
        }
        _isIntervalPaused() {
          const e2 = Date.now();
          if (this._intervalId === void 0) {
            const t2 = this._intervalEnd - e2;
            if (!(t2 < 0))
              return this._timeoutId === void 0 && (this._timeoutId = setTimeout(() => {
                this._onResumeInterval();
              }, t2)), true;
            this._intervalCount = this._carryoverConcurrencyCount ? this._pendingCount : 0;
          }
          return false;
        }
        _tryToStartAnother() {
          if (this._queue.size === 0)
            return this._intervalId && clearInterval(this._intervalId), this._intervalId = void 0, this._resolvePromises(), false;
          if (!this._isPaused) {
            const e2 = !this._isIntervalPaused();
            if (this._doesIntervalAllowAnother && this._doesConcurrentAllowAnother) {
              const t2 = this._queue.dequeue();
              return !!t2 && (this.emit("active"), t2(), e2 && this._initializeIntervalIfNeeded(), true);
            }
          }
          return false;
        }
        _initializeIntervalIfNeeded() {
          this._isIntervalIgnored || this._intervalId !== void 0 || (this._intervalId = setInterval(() => {
            this._onInterval();
          }, this._interval), this._intervalEnd = Date.now() + this._interval);
        }
        _onInterval() {
          this._intervalCount === 0 && this._pendingCount === 0 && this._intervalId && (clearInterval(this._intervalId), this._intervalId = void 0), this._intervalCount = this._carryoverConcurrencyCount ? this._pendingCount : 0, this._processQueue();
        }
        _processQueue() {
          for (; this._tryToStartAnother(); )
            ;
        }
        get concurrency() {
          return this._concurrency;
        }
        set concurrency(e2) {
          if (!(typeof e2 == "number" && e2 >= 1))
            throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${e2}\` (${typeof e2})`);
          this._concurrency = e2, this._processQueue();
        }
        async add(e2, t2 = {}) {
          return new Promise((r2, n2) => {
            this._queue.enqueue(async () => {
              this._pendingCount++, this._intervalCount++;
              try {
                const s2 = this._timeout === void 0 && t2.timeout === void 0 ? e2() : i.default(Promise.resolve(e2()), t2.timeout === void 0 ? this._timeout : t2.timeout, () => {
                  (t2.throwOnTimeout === void 0 ? this._throwOnTimeout : t2.throwOnTimeout) && n2(a);
                });
                r2(await s2);
              } catch (s2) {
                n2(s2);
              }
              this._next();
            }, t2), this._tryToStartAnother(), this.emit("add");
          });
        }
        async addAll(e2, t2) {
          return Promise.all(e2.map(async (e3) => this.add(e3, t2)));
        }
        start() {
          return this._isPaused ? (this._isPaused = false, this._processQueue(), this) : this;
        }
        pause() {
          this._isPaused = true;
        }
        clear() {
          this._queue = new this._queueClass();
        }
        async onEmpty() {
          if (this._queue.size !== 0)
            return new Promise((e2) => {
              const t2 = this._resolveEmpty;
              this._resolveEmpty = () => {
                t2(), e2();
              };
            });
        }
        async onIdle() {
          if (this._pendingCount !== 0 || this._queue.size !== 0)
            return new Promise((e2) => {
              const t2 = this._resolveIdle;
              this._resolveIdle = () => {
                t2(), e2();
              };
            });
        }
        get size() {
          return this._queue.size;
        }
        sizeBy(e2) {
          return this._queue.filter(e2).length;
        }
        get pending() {
          return this._pendingCount;
        }
        get isPaused() {
          return this._isPaused;
        }
        get timeout() {
          return this._timeout;
        }
        set timeout(e2) {
          this._timeout = e2;
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(0), s = r(547), o = r(1), a = r(264), c = r(84), u = r(265), h = r(30), f = r(17);
      const d = h.encoding("base32upper");
      function l(e2) {
        return "/" + d.encode(e2.multihash);
      }
      function p(e2) {
        return d.decode(e2.toString().slice(1));
      }
      const y = {direct: "direct", recursive: "recursive", indirect: "indirect", all: "all"};
      class g {
        constructor({repo: e2, dagReader: t2}) {
          this.repo = e2, this.dag = t2, this.log = o("ipfs:pin"), this.directPins = new Set(), this.recursivePins = new Set();
        }
        async *_walkDag(e2, {preload: t2 = false}) {
          const {value: r2} = await this.dag.get(e2, {preload: t2});
          if (e2.codec === "dag-pb")
            for (const n2 of r2.Links)
              yield n2.Hash, yield* this._walkDag(n2.Hash, {preload: t2});
          else if (e2.codec === "dag-cbor")
            for (const [, n2] of s(r2))
              yield n2, yield* this._walkDag(n2, {preload: t2});
        }
        async pinDirectly(e2, t2 = {}) {
          await this.dag.get(e2, t2);
          const r2 = {depth: 0};
          return e2.version !== 0 && (r2.version = e2.version), e2.codec !== "dag-pb" && (r2.codec = f.getNumber(e2.codec)), t2.metadata && (r2.metadata = t2.metadata), this.repo.pins.put(l(e2), u.encode(r2));
        }
        async unpin(e2, t2) {
          return this.repo.pins.delete(l(e2));
        }
        async pinRecursively(e2, t2 = {}) {
          await this.fetchCompleteDag(e2, t2);
          const r2 = {depth: 1 / 0};
          e2.version !== 0 && (r2.version = e2.version), e2.codec !== "dag-pb" && (r2.codec = f.getNumber(e2.codec)), t2.metadata && (r2.metadata = t2.metadata), await this.repo.pins.put(l(e2), u.encode(r2));
        }
        async *directKeys(e2) {
          for await (const t2 of this.repo.pins.query({filters: [(e3) => u.decode(e3.value).depth === 0]})) {
            const e3 = u.decode(t2.value), r2 = e3.version || 0, i2 = e3.codec ? f.getName(e3.codec) : "dag-pb", s2 = p(t2.key);
            yield {cid: new n(r2, i2, s2), metadata: e3.metadata};
          }
        }
        async *recursiveKeys(e2) {
          for await (const t2 of this.repo.pins.query({filters: [(e3) => u.decode(e3.value).depth === 1 / 0]})) {
            const e3 = u.decode(t2.value), r2 = e3.version || 0, i2 = e3.codec ? f.getName(e3.codec) : "dag-pb", s2 = p(t2.key);
            yield {cid: new n(r2, i2, s2), metadata: e3.metadata};
          }
        }
        async *indirectKeys({preload: e2}) {
          for await (const {cid: t2} of this.recursiveKeys())
            for await (const r2 of this._walkDag(t2, {preload: e2})) {
              const e3 = [y.recursive];
              (await this.isPinnedWithType(r2, e3)).pinned || (yield r2);
            }
        }
        async isPinnedWithType(e2, t2, r2) {
          Array.isArray(t2) || (t2 = [t2]);
          const n2 = t2.includes(y.all), i2 = t2.includes(y.direct), s2 = t2.includes(y.recursive), o2 = t2.includes(y.indirect);
          if (s2 || i2 || n2) {
            const r3 = await a(this.repo.pins.query({prefix: l(e2), filters: [(e3) => {
              if (n2)
                return true;
              const r4 = u.decode(e3.value);
              return t2.includes(r4.depth === 0 ? y.direct : y.recursive);
            }], limit: 1}));
            if (r3) {
              const t3 = u.decode(r3.value);
              return {cid: e2, pinned: true, reason: t3.depth === 0 ? y.direct : y.recursive, metadata: t3.metadata};
            }
          }
          const c2 = this;
          if (n2 || o2) {
            const t3 = await a(async function* (e3, t4) {
              for await (const {cid: r3} of t4)
                for await (const t5 of c2._walkDag(r3, {preload: false}))
                  if (t5.equals(e3))
                    return void (yield r3);
            }(e2, this.recursiveKeys()));
            if (t3)
              return {cid: e2, pinned: true, reason: y.indirect, parent: t3};
          }
          return {cid: e2, pinned: false};
        }
        async fetchCompleteDag(e2, t2) {
          await c(this._walkDag(e2, {preload: t2.preload}));
        }
        static checkPinType(e2) {
          if (typeof e2 != "string" || !Object.keys(y).includes(e2))
            throw function(e3) {
              return i(new Error(`Invalid type '${e3}', must be one of {direct, indirect, recursive, all}`), "ERR_INVALID_PIN_TYPE");
            }(e2);
          return true;
        }
      }
      g.PinTypes = y, e.exports = g;
    }, function(e, t, r) {
      "use strict";
      e.exports = async (e2) => {
        const t2 = [];
        for await (const r2 of e2)
          t2.push(r2);
        return t2;
      };
    }, function(e, t, r) {
      "use strict";
      (function(e2) {
        function r2(e3) {
          return Object.prototype.toString.call(e3);
        }
        t.isArray = function(e3) {
          return Array.isArray ? Array.isArray(e3) : r2(e3) === "[object Array]";
        }, t.isBoolean = function(e3) {
          return typeof e3 == "boolean";
        }, t.isNull = function(e3) {
          return e3 === null;
        }, t.isNullOrUndefined = function(e3) {
          return e3 == null;
        }, t.isNumber = function(e3) {
          return typeof e3 == "number";
        }, t.isString = function(e3) {
          return typeof e3 == "string";
        }, t.isSymbol = function(e3) {
          return typeof e3 == "symbol";
        }, t.isUndefined = function(e3) {
          return e3 === void 0;
        }, t.isRegExp = function(e3) {
          return r2(e3) === "[object RegExp]";
        }, t.isObject = function(e3) {
          return typeof e3 == "object" && e3 !== null;
        }, t.isDate = function(e3) {
          return r2(e3) === "[object Date]";
        }, t.isError = function(e3) {
          return r2(e3) === "[object Error]" || e3 instanceof Error;
        }, t.isFunction = function(e3) {
          return typeof e3 == "function";
        }, t.isPrimitive = function(e3) {
          return e3 === null || typeof e3 == "boolean" || typeof e3 == "number" || typeof e3 == "string" || typeof e3 == "symbol" || e3 === void 0;
        }, t.isBuffer = e2.isBuffer;
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      const n = r(64), i = r(54), s = i.MT, o = i.SIMPLE, a = i.SYMS;
      class c {
        constructor(e2) {
          if (typeof e2 != "number")
            throw new Error("Invalid Simple type: " + typeof e2);
          if (e2 < 0 || e2 > 255 || (0 | e2) !== e2)
            throw new Error("value must be a small positive integer: " + e2);
          this.value = e2;
        }
        toString() {
          return "simple(" + this.value + ")";
        }
        [n.inspect.custom](e2, t2) {
          return "simple(" + this.value + ")";
        }
        inspect(e2, t2) {
          return "simple(" + this.value + ")";
        }
        encodeCBOR(e2) {
          return e2._pushInt(this.value, s.SIMPLE_FLOAT);
        }
        static isSimple(e2) {
          return e2 instanceof c;
        }
        static decode(e2, t2 = true, r2 = false) {
          switch (e2) {
            case o.FALSE:
              return false;
            case o.TRUE:
              return true;
            case o.NULL:
              return t2 ? null : a.NULL;
            case o.UNDEFINED:
              return t2 ? void 0 : a.UNDEFINED;
            case -1:
              if (!t2 || !r2)
                throw new Error("Invalid BREAK");
              return a.BREAK;
            default:
              return new c(e2);
          }
        }
      }
      e.exports = c;
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const n = r(63), i = r(64);
        class s extends n.Transform {
          constructor(e2, r2, n2) {
            let i2, s2;
            switch (n2 == null && (n2 = {}), typeof e2) {
              case "object":
                t2.isBuffer(e2) ? (i2 = e2, r2 != null && typeof r2 == "object" && (n2 = r2)) : n2 = e2;
                break;
              case "string":
                i2 = e2, r2 != null && typeof r2 == "object" ? n2 = r2 : s2 = r2;
            }
            n2 == null && (n2 = {}), i2 == null && (i2 = n2.input), s2 == null && (s2 = n2.inputEncoding), delete n2.input, delete n2.inputEncoding;
            const o2 = n2.watchPipe == null || n2.watchPipe;
            delete n2.watchPipe;
            const a2 = !!n2.readError;
            delete n2.readError, super(n2), this.readError = a2, o2 && this.on("pipe", (e3) => {
              const t3 = e3._readableState.objectMode;
              if (this.length > 0 && t3 !== this._readableState.objectMode)
                throw new Error("Do not switch objectMode in the middle of the stream");
              return this._readableState.objectMode = t3, this._writableState.objectMode = t3;
            }), i2 != null && this.end(i2, s2);
          }
          static isNoFilter(e2) {
            return e2 instanceof this;
          }
          static compare(e2, t3) {
            if (!(e2 instanceof this))
              throw new TypeError("Arguments must be NoFilters");
            return e2 === t3 ? 0 : e2.compare(t3);
          }
          static concat(e2, r2) {
            if (!Array.isArray(e2))
              throw new TypeError("list argument must be an Array of NoFilters");
            if (e2.length === 0 || r2 === 0)
              return t2.alloc(0);
            r2 == null && (r2 = e2.reduce((e3, t3) => {
              if (!(t3 instanceof s))
                throw new TypeError("list argument must be an Array of NoFilters");
              return e3 + t3.length;
            }, 0));
            let n2 = true, i2 = true;
            const o2 = e2.map((e3) => {
              if (!(e3 instanceof s))
                throw new TypeError("list argument must be an Array of NoFilters");
              const r3 = e3.slice();
              return t2.isBuffer(r3) ? i2 = false : n2 = false, r3;
            });
            if (n2)
              return t2.concat(o2, r2);
            if (i2)
              return [].concat(...o2).slice(0, r2);
            throw new Error("Concatenating mixed object and byte streams not supported");
          }
          _transform(e2, r2, n2) {
            this._readableState.objectMode || t2.isBuffer(e2) || (e2 = t2.from(e2, r2)), this.push(e2), n2();
          }
          _bufArray() {
            let e2 = this._readableState.buffer;
            if (!Array.isArray(e2)) {
              let t3 = e2.head;
              for (e2 = []; t3 != null; )
                e2.push(t3.data), t3 = t3.next;
            }
            return e2;
          }
          read(e2) {
            const t3 = super.read(e2);
            if (t3 != null) {
              if (this.emit("read", t3), this.readError && t3.length < e2)
                throw new Error(`Read ${t3.length}, wanted ${e2}`);
            } else if (this.readError)
              throw new Error("No data available, wanted " + e2);
            return t3;
          }
          promise(e2) {
            let t3 = false;
            return new Promise((r2, n2) => {
              this.on("finish", () => {
                const n3 = this.read();
                e2 == null || t3 || (t3 = true, e2(null, n3)), r2(n3);
              }), this.on("error", (r3) => {
                e2 == null || t3 || (t3 = true, e2(r3)), n2(r3);
              });
            });
          }
          compare(e2) {
            if (!(e2 instanceof s))
              throw new TypeError("Arguments must be NoFilters");
            if (this === e2)
              return 0;
            {
              const r2 = this.slice(), n2 = e2.slice();
              if (t2.isBuffer(r2) && t2.isBuffer(n2))
                return r2.compare(n2);
              throw new Error("Cannot compare streams in object mode");
            }
          }
          equals(e2) {
            return this.compare(e2) === 0;
          }
          slice(e2, r2) {
            if (this._readableState.objectMode)
              return this._bufArray().slice(e2, r2);
            const n2 = this._bufArray();
            switch (n2.length) {
              case 0:
                return t2.alloc(0);
              case 1:
                return n2[0].slice(e2, r2);
              default:
                return t2.concat(n2).slice(e2, r2);
            }
          }
          get(e2) {
            return this.slice()[e2];
          }
          toJSON() {
            const e2 = this.slice();
            return t2.isBuffer(e2) ? e2.toJSON() : e2;
          }
          toString(e2, r2, n2) {
            const s2 = this.slice(r2, n2);
            if (!t2.isBuffer(s2))
              return JSON.stringify(s2);
            if ((!e2 || e2 === "utf8") && i.TextDecoder) {
              return new i.TextDecoder("utf8", {fatal: true, ignoreBOM: true}).decode(s2);
            }
            return s2.toString(e2, r2, n2);
          }
          inspect(e2, t3) {
            return this[i.inspect.custom](e2, t3);
          }
          [i.inspect.custom](e2, r2) {
            const n2 = this._bufArray().map((e3) => t2.isBuffer(e3) ? (r2 != null ? r2.stylize : void 0) ? r2.stylize(e3.toString("hex"), "string") : e3.toString("hex") : i.inspect(e3, r2)).join(", ");
            return `${this.constructor.name} [${n2}]`;
          }
          get length() {
            return this._readableState.length;
          }
          writeBigInt(e2) {
            let r2 = e2.toString(16);
            if (e2 < 0) {
              const t3 = BigInt(Math.floor(r2.length / 2));
              r2 = (e2 = (BigInt(1) << t3 * BigInt(8)) + e2).toString(16);
            }
            return r2.length % 2 && (r2 = "0" + r2), this.push(t2.from(r2, "hex"));
          }
          readUBigInt(e2) {
            const r2 = this.read(e2);
            return t2.isBuffer(r2) ? BigInt("0x" + r2.toString("hex")) : null;
          }
          readBigInt(e2) {
            const r2 = this.read(e2);
            if (!t2.isBuffer(r2))
              return null;
            let n2 = BigInt("0x" + r2.toString("hex"));
            if (128 & r2[0]) {
              n2 -= BigInt(1) << BigInt(r2.length) * BigInt(8);
            }
            return n2;
          }
        }
        function o(e2, r2) {
          return function(n2) {
            const i2 = this.read(r2);
            return t2.isBuffer(i2) ? i2[e2].call(i2, 0, true) : null;
          };
        }
        function a(e2, r2) {
          return function(n2) {
            const i2 = t2.alloc(r2);
            return i2[e2].call(i2, n2, 0, true), this.push(i2);
          };
        }
        Object.assign(s.prototype, {writeUInt8: a("writeUInt8", 1), writeUInt16LE: a("writeUInt16LE", 2), writeUInt16BE: a("writeUInt16BE", 2), writeUInt32LE: a("writeUInt32LE", 4), writeUInt32BE: a("writeUInt32BE", 4), writeInt8: a("writeInt8", 1), writeInt16LE: a("writeInt16LE", 2), writeInt16BE: a("writeInt16BE", 2), writeInt32LE: a("writeInt32LE", 4), writeInt32BE: a("writeInt32BE", 4), writeFloatLE: a("writeFloatLE", 4), writeFloatBE: a("writeFloatBE", 4), writeDoubleLE: a("writeDoubleLE", 8), writeDoubleBE: a("writeDoubleBE", 8), readUInt8: o("readUInt8", 1), readUInt16LE: o("readUInt16LE", 2), readUInt16BE: o("readUInt16BE", 2), readUInt32LE: o("readUInt32LE", 4), readUInt32BE: o("readUInt32BE", 4), readInt8: o("readInt8", 1), readInt16LE: o("readInt16LE", 2), readInt16BE: o("readInt16BE", 2), readInt32LE: o("readInt32LE", 4), readInt32BE: o("readInt32BE", 4), readFloatLE: o("readFloatLE", 4), readFloatBE: o("readFloatBE", 4), readDoubleLE: o("readDoubleLE", 8), readDoubleBE: o("readDoubleBE", 8)}), e.exports = s;
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      const n = r(582), {Key: i} = r(9), s = r(39), o = r(7), a = r(48), c = r(0), u = r(30), h = r(6), f = r(5), d = r(27), l = r(1), p = l("jsipns");
      p.error = l("jsipns:error");
      const y = r(583), {parseRFC3339: g} = r(584), b = r(585), m = a.names.id, v = async (e2, t2, r2, n2, i2) => {
        const s2 = await S(e2, t2, i2, n2), o2 = {value: h(t2), signature: s2, validityType: i2, validity: h(n2), sequence: r2};
        return p(`ipns entry for ${t2} created`), o2;
      }, w = async (e2, t2) => {
        const {value: r2, validityType: n2, validity: i2} = t2, s2 = A(r2, n2, i2);
        let o2;
        try {
          o2 = await e2.verify(s2, t2.signature);
        } catch (a2) {
          o2 = false;
        }
        if (!o2)
          throw p.error("record signature verification failed"), c(new Error("record signature verification failed"), b.ERR_SIGNATURE_VERIFICATION);
        if (n2 === y.ValidityType.EOL) {
          let e3;
          try {
            e3 = g(f(i2));
          } catch (u2) {
            throw p.error("unrecognized validity format (not an rfc3339 format)"), c(new Error("unrecognized validity format (not an rfc3339 format)"), b.ERR_UNRECOGNIZED_FORMAT);
          }
          if (e3 < Date.now())
            throw p.error("record has expired"), c(new Error("record has expired"), b.ERR_IPNS_EXPIRED_RECORD);
        } else if (n2)
          throw p.error("unrecognized validity type"), c(new Error("unrecognized validity type"), b.ERR_UNRECOGNIZED_VALIDITY);
        p(`ipns entry for ${r2} is valid`);
      }, _ = (e2, t2) => {
        if (!t2 || !e2) {
          const e3 = new Error("one or more of the provided parameters are not defined");
          throw p.error(e3), c(e3, b.ERR_UNDEFINED_PARAMETER);
        }
        if (t2.pubKey) {
          let e3;
          try {
            e3 = s.keys.unmarshalPublicKey(t2.pubKey);
          } catch (r2) {
            throw p.error(r2), r2;
          }
          return e3;
        }
        if (e2.pubKey)
          return e2.pubKey;
        throw Object.assign(new Error("no public key is available"), {code: b.ERR_UNDEFINED_PARAMETER});
      }, E = (e2) => u.encode("base32", e2).toString().slice(1).toUpperCase(), S = (e2, t2, r2, n2) => {
        try {
          const i2 = A(t2, r2, n2);
          return e2.sign(i2);
        } catch (i2) {
          throw p.error("record signature creation failed"), c(new Error("record signature creation failed: " + i2.message), b.ERR_SIGNATURE_CREATION);
        }
      }, A = (e2, t2, r2) => {
        e2 instanceof Uint8Array || (e2 = h(e2)), r2 instanceof Uint8Array || (r2 = h(r2));
        const n2 = h(((e3) => {
          if (e3.toString() === "0")
            return "EOL";
          const t3 = new Error("unrecognized validity type " + e3.toString());
          throw p.error(t3), c(t3, b.ERR_UNRECOGNIZED_VALIDITY);
        })(t2));
        return d([e2, r2, n2]);
      }, I = (e2) => {
        const t2 = a.decode(e2.id);
        return t2.code !== m ? null : s.keys.unmarshalPublicKey(t2.digest);
      }, k = y.encode, R = y.decode, T = {validate: async (e2, t2) => {
        const r2 = R(e2), n2 = t2.slice("/ipns/".length), i2 = o.createFromBytes(n2), s2 = _(i2, r2);
        return await w(s2, r2), true;
      }, select: (e2, t2) => {
        const r2 = R(e2), n2 = R(t2);
        return r2.sequence > n2.sequence ? 0 : 1;
      }};
      e.exports = {create: (e2, t2, r2, i2) => {
        const s2 = new n(Date.now() + Number(i2)).toString(), o2 = y.ValidityType.EOL;
        return v(e2, t2, r2, s2, o2);
      }, createWithExpiration: (e2, t2, r2, n2) => {
        const i2 = y.ValidityType.EOL;
        return v(e2, t2, r2, n2, i2);
      }, validate: w, embedPublicKey: async (e2, t2) => {
        if (!e2 || !e2.bytes || !t2) {
          const e3 = new Error("one or more of the provided parameters are not defined");
          throw p.error(e3), c(e3, b.ERR_UNDEFINED_PARAMETER);
        }
        let r2, n2;
        try {
          r2 = await o.createFromPubKey(e2.bytes);
        } catch (i2) {
          throw c(i2, b.ERR_PEER_ID_FROM_PUBLIC_KEY);
        }
        try {
          n2 = I(r2);
        } catch (i2) {
          throw p.error(i2), c(i2, b.ERR_PUBLIC_KEY_FROM_ID);
        }
        if (n2)
          return null;
        try {
          t2.pubKey = s.keys.marshalPublicKey(e2);
        } catch (i2) {
          throw p.error(i2), i2;
        }
        return t2;
      }, extractPublicKey: _, getLocalKey: (e2) => new i("/ipns/" + E(e2)), getIdKeys: (e2) => {
        const t2 = h("/pk/"), r2 = h("/ipns/");
        return {routingPubKey: new i(d([t2, e2]), false), pkKey: new i(E(d([t2, e2]))), routingKey: new i(d([r2, e2]), false), ipnsKey: new i(E(d([r2, e2])))};
      }, marshal: k, unmarshal: R, validator: T, namespace: "/ipns/", namespaceLength: "/ipns/".length};
    }, function(e, t, r) {
      "use strict";
      const n = r(4), {version: i} = r(631), s = Symbol.for("@ipld/js-ipld-block/block"), o = {writable: false, configurable: false, enumerable: true};
      class a {
        constructor(e2, t2) {
          if (!(e2 && e2 instanceof Uint8Array))
            throw new Error("first argument  must be a Uint8Array");
          if (!t2 || !n.isCID(t2))
            throw new Error("second argument must be a CID");
          this.data = e2, this.cid = t2, Object.defineProperties(this, {data: o, cid: o});
        }
        get _data() {
          return h(), this.data;
        }
        get _cid() {
          return u(), this.cid;
        }
        get [Symbol.toStringTag]() {
          return "Block";
        }
        get [s]() {
          return true;
        }
        static isBlock(e2) {
          return Boolean(e2 && e2[s]);
        }
      }
      const c = (e2, t2) => {
        let r2 = false;
        return () => {
          if (!e2.test(i))
            throw new Error(t2);
          r2 || (r2 = true, console.warn(t2));
        };
      }, u = c(/^0\.10|^0\.11/, "block._cid is deprecated and will be removed in 0.12 release. Please use block.cid instead"), h = c(/^0\.10|^0.11/, "block._data is deprecated and will be removed in 0.12 release. Please use block.data instead");
      e.exports = a;
    }, function(e, t, r) {
      "use strict";
      const n = r(36), i = r(1)("ipfs:mfs:utils:to-trail");
      e.exports = async (e2, t2) => {
        i("Creating trail for path " + t2);
        const r2 = [];
        for await (const i2 of n.path(t2, e2.ipld))
          r2.push({name: i2.name, cid: i2.cid, size: i2.node.size, type: i2.unixfs ? i2.unixfs.type : void 0});
        return r2;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(16), i = n.DAGNode, s = n.DAGLink, o = r(15).multihash, a = r(17), c = r(2), u = r(5), h = r(6);
      function f(e2, t2) {
        switch (t2) {
          case "json":
            return function(e3) {
              let t3, r2;
              try {
                const n2 = JSON.parse(u(e3));
                r2 = (n2.Links || []).map((e4) => new s(e4.Name || e4.name, e4.Size || e4.size, o.fromB58String(e4.Hash || e4.hash || e4.multihash))), t3 = h(n2.Data);
              } catch (n2) {
                throw new Error("failed to parse JSON: " + n2);
              }
              return new i(t3, r2);
            }(e2);
          case "protobuf":
            return function(e3) {
              return n.util.deserialize(e3);
            }(e2);
          default:
            throw new Error("unkown encoding: " + t2);
        }
      }
      e.exports = ({ipld: e2, gcLock: t2, preload: r2}) => c(async function(n2, s2 = {}) {
        const o2 = s2.enc;
        let c2;
        if (n2 instanceof Uint8Array)
          c2 = o2 ? await f(n2, o2) : new i(n2);
        else if (i.isDAGNode(n2))
          c2 = n2;
        else {
          if (typeof n2 != "object")
            throw new Error("obj not recognized");
          c2 = new i(n2.Data, n2.Links);
        }
        const u2 = await t2.readLock();
        try {
          const t3 = await e2.put(c2, a.DAG_PB, {cidVersion: 0, hashAlg: a.SHA2_256});
          return s2.preload !== false && r2(t3), t3;
        } finally {
          u2();
        }
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(300);
      e.exports = (e2) => {
        let t2;
        typeof (e2 = e2 || {}) == "function" ? (t2 = e2, e2 = {}) : t2 = e2.onEnd;
        let r2, i, s, o = new n();
        const a = (e3) => i ? i(e3) : (o.push(e3), r2), c = (e3) => s ? r2 : a({done: false, value: e3}), u = (e3) => s ? r2 : (s = true, e3 ? ((e4) => (o = new n(), i ? i({error: e4}) : (o.push({error: e4}), r2)))(e3) : a({done: true}));
        if (r2 = {[Symbol.asyncIterator]() {
          return this;
        }, next: () => {
          if (!o.isEmpty()) {
            if (e2.writev) {
              let e3;
              const t4 = [];
              for (; !o.isEmpty(); ) {
                if (e3 = o.shift(), e3.error)
                  throw e3.error;
                t4.push(e3.value);
              }
              return {done: e3.done, value: t4};
            }
            const t3 = o.shift();
            if (t3.error)
              throw t3.error;
            return t3;
          }
          return s ? {done: true} : new Promise((t3, n2) => {
            i = (s2) => (i = null, s2.error ? n2(s2.error) : e2.writev && !s2.done ? t3({done: s2.done, value: [s2.value]}) : t3(s2), r2);
          });
        }, return: () => (o = new n(), u(), {done: true}), throw: (e3) => (u(e3), {done: true}), push: c, end: u}, !t2)
          return r2;
        const h = r2;
        return r2 = {[Symbol.asyncIterator]() {
          return this;
        }, next: () => h.next(), throw: (e3) => (h.throw(e3), t2 && (t2(e3), t2 = null), {done: true}), return: () => (h.return(), t2 && (t2(), t2 = null), {done: true}), push: c, end: (e3) => (h.end(e3), t2 && (t2(e3), t2 = null), r2)}, r2;
      };
    }, function(e, t, r) {
      "use strict";
      const {Key: n, Errors: i, Adapter: s, utils: {filter: o, map: a, take: c, sortAll: u}} = r(9);
      e.exports = class extends s {
        constructor(e2, t2) {
          let n2;
          super(), t2 && t2.db ? (n2 = t2.db, delete t2.db) : n2 = r(760), this.db = this._initDb(n2, e2, t2);
        }
        _initDb(e2, t2, r2) {
          return e2(t2, {...r2, valueEncoding: "binary", compression: false});
        }
        async open() {
          try {
            await this.db.open();
          } catch (e2) {
            throw i.dbOpenFailedError(e2);
          }
        }
        async put(e2, t2) {
          try {
            await this.db.put(e2.toString(), t2);
          } catch (r2) {
            throw i.dbWriteFailedError(r2);
          }
        }
        async get(e2) {
          let t2;
          try {
            t2 = await this.db.get(e2.toString());
          } catch (r2) {
            if (r2.notFound)
              throw i.notFoundError(r2);
            throw i.dbWriteFailedError(r2);
          }
          return t2;
        }
        async has(e2) {
          try {
            await this.db.get(e2.toString());
          } catch (t2) {
            if (t2.notFound)
              return false;
            throw t2;
          }
          return true;
        }
        async delete(e2) {
          try {
            await this.db.del(e2.toString());
          } catch (t2) {
            throw i.dbDeleteFailedError(t2);
          }
        }
        close() {
          return this.db.close();
        }
        batch() {
          const e2 = [];
          return {put: (t2, r2) => {
            e2.push({type: "put", key: t2.toString(), value: r2});
          }, delete: (t2) => {
            e2.push({type: "del", key: t2.toString()});
          }, commit: () => this.db.batch(e2)};
        }
        query(e2) {
          let t2 = true;
          e2.keysOnly != null && (t2 = !e2.keysOnly);
          const r2 = {keys: true, values: t2, keyAsBuffer: true};
          if (e2.prefix != null) {
            const t3 = e2.prefix.toString();
            r2.gte = t3, r2.lt = t3 + "\xFF";
          }
          let i2 = (s2 = this.db.iterator(r2), {next: () => new Promise((e3, t3) => {
            s2.next((r3, n2, i3) => r3 ? t3(r3) : n2 == null ? s2.end((r4) => {
              if (r4)
                return t3(r4);
              e3({done: true});
            }) : void e3({done: false, value: {key: n2, value: i3}}));
          }), return: () => new Promise((e3, t3) => {
            s2.end((r3) => {
              if (r3)
                return t3(r3);
              e3({done: true});
            });
          }), [Symbol.asyncIterator]() {
            return this;
          }});
          var s2;
          if (i2 = a(i2, ({key: e3, value: r3}) => {
            const i3 = {key: new n(e3, false)};
            return t2 && (i3.value = r3), i3;
          }), Array.isArray(e2.filters) && (i2 = e2.filters.reduce((e3, t3) => o(e3, t3), i2)), Array.isArray(e2.orders) && (i2 = e2.orders.reduce((e3, t3) => u(e3, t3), i2)), e2.offset != null) {
            let t3 = 0;
            i2 = o(i2, () => t3++ >= e2.offset);
          }
          return e2.limit != null && (i2 = c(i2, e2.limit)), i2;
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(20);
      e.exports = n("\nmessage CircuitRelay {\n\n  enum Status {\n    SUCCESS                    = 100;\n    HOP_SRC_ADDR_TOO_LONG      = 220;\n    HOP_DST_ADDR_TOO_LONG      = 221;\n    HOP_SRC_MULTIADDR_INVALID  = 250;\n    HOP_DST_MULTIADDR_INVALID  = 251;\n    HOP_NO_CONN_TO_DST         = 260;\n    HOP_CANT_DIAL_DST          = 261;\n    HOP_CANT_OPEN_DST_STREAM   = 262;\n    HOP_CANT_SPEAK_RELAY       = 270;\n    HOP_CANT_RELAY_TO_SELF     = 280;\n    STOP_SRC_ADDR_TOO_LONG     = 320;\n    STOP_DST_ADDR_TOO_LONG     = 321;\n    STOP_SRC_MULTIADDR_INVALID = 350;\n    STOP_DST_MULTIADDR_INVALID = 351;\n    STOP_RELAY_REFUSED         = 390;\n    MALFORMED_MESSAGE          = 400;\n  }\n\n  enum Type { // RPC identifier, either HOP, STOP or STATUS\n    HOP = 1;\n    STOP = 2;\n    STATUS = 3;\n    CAN_HOP = 4;\n  }\n\n  message Peer {\n    required bytes id = 1;    // peer id\n    repeated bytes addrs = 2; // peer's known addresses\n  }\n\n  optional Type type = 1;     // Type of the message\n\n  optional Peer srcPeer = 2;  // srcPeer and dstPeer are used when Type is HOP or STATUS\n  optional Peer dstPeer = 3;\n\n  optional Status code = 4;   // Status code, used when Type is STATUS\n}\n");
    }, function(e, t, r) {
      "use strict";
      const n = r(336), i = r(92), s = r(197);
      e.exports = (e2) => {
        const t2 = i(), r2 = n(e2.source), o = s();
        let a;
        const c = e2.sink(async function* () {
          yield* t2;
          const e3 = await o.promise;
          yield* e3;
        }());
        c.catch((e3) => {
          a = e3;
        });
        return {reader: r2, writer: t2, stream: {sink: (e3) => a ? Promise.reject(a) : (o.resolve(e3), c), source: r2}, rest: () => t2.end(), write: t2.push, read: async () => (await r2.next()).value};
      };
    }, function(e, t, r) {
      "use strict";
      var n;
      !function() {
        var i = {not_string: /[^s]/, not_bool: /[^t]/, not_type: /[^T]/, not_primitive: /[^v]/, number: /[diefg]/, numeric_arg: /[bcdiefguxX]/, json: /[j]/, not_json: /[^j]/, text: /^[^\x25]+/, modulo: /^\x25{2}/, placeholder: /^\x25(?:([1-9]\d*)\$|\(([^)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-gijostTuvxX])/, key: /^([a-z_][a-z_\d]*)/i, key_access: /^\.([a-z_][a-z_\d]*)/i, index_access: /^\[(\d+)\]/, sign: /^[+-]/};
        function s(e2) {
          return a(u(e2), arguments);
        }
        function o(e2, t2) {
          return s.apply(null, [e2].concat(t2 || []));
        }
        function a(e2, t2) {
          var r2, n2, o2, a2, c2, u2, h, f, d, l = 1, p = e2.length, y = "";
          for (n2 = 0; n2 < p; n2++)
            if (typeof e2[n2] == "string")
              y += e2[n2];
            else if (typeof e2[n2] == "object") {
              if ((a2 = e2[n2]).keys)
                for (r2 = t2[l], o2 = 0; o2 < a2.keys.length; o2++) {
                  if (r2 == null)
                    throw new Error(s('[sprintf] Cannot access property "%s" of undefined value "%s"', a2.keys[o2], a2.keys[o2 - 1]));
                  r2 = r2[a2.keys[o2]];
                }
              else
                r2 = a2.param_no ? t2[a2.param_no] : t2[l++];
              if (i.not_type.test(a2.type) && i.not_primitive.test(a2.type) && r2 instanceof Function && (r2 = r2()), i.numeric_arg.test(a2.type) && typeof r2 != "number" && isNaN(r2))
                throw new TypeError(s("[sprintf] expecting number but found %T", r2));
              switch (i.number.test(a2.type) && (f = r2 >= 0), a2.type) {
                case "b":
                  r2 = parseInt(r2, 10).toString(2);
                  break;
                case "c":
                  r2 = String.fromCharCode(parseInt(r2, 10));
                  break;
                case "d":
                case "i":
                  r2 = parseInt(r2, 10);
                  break;
                case "j":
                  r2 = JSON.stringify(r2, null, a2.width ? parseInt(a2.width) : 0);
                  break;
                case "e":
                  r2 = a2.precision ? parseFloat(r2).toExponential(a2.precision) : parseFloat(r2).toExponential();
                  break;
                case "f":
                  r2 = a2.precision ? parseFloat(r2).toFixed(a2.precision) : parseFloat(r2);
                  break;
                case "g":
                  r2 = a2.precision ? String(Number(r2.toPrecision(a2.precision))) : parseFloat(r2);
                  break;
                case "o":
                  r2 = (parseInt(r2, 10) >>> 0).toString(8);
                  break;
                case "s":
                  r2 = String(r2), r2 = a2.precision ? r2.substring(0, a2.precision) : r2;
                  break;
                case "t":
                  r2 = String(!!r2), r2 = a2.precision ? r2.substring(0, a2.precision) : r2;
                  break;
                case "T":
                  r2 = Object.prototype.toString.call(r2).slice(8, -1).toLowerCase(), r2 = a2.precision ? r2.substring(0, a2.precision) : r2;
                  break;
                case "u":
                  r2 = parseInt(r2, 10) >>> 0;
                  break;
                case "v":
                  r2 = r2.valueOf(), r2 = a2.precision ? r2.substring(0, a2.precision) : r2;
                  break;
                case "x":
                  r2 = (parseInt(r2, 10) >>> 0).toString(16);
                  break;
                case "X":
                  r2 = (parseInt(r2, 10) >>> 0).toString(16).toUpperCase();
              }
              i.json.test(a2.type) ? y += r2 : (!i.number.test(a2.type) || f && !a2.sign ? d = "" : (d = f ? "+" : "-", r2 = r2.toString().replace(i.sign, "")), u2 = a2.pad_char ? a2.pad_char === "0" ? "0" : a2.pad_char.charAt(1) : " ", h = a2.width - (d + r2).length, c2 = a2.width && h > 0 ? u2.repeat(h) : "", y += a2.align ? d + r2 + c2 : u2 === "0" ? d + c2 + r2 : c2 + d + r2);
            }
          return y;
        }
        var c = Object.create(null);
        function u(e2) {
          if (c[e2])
            return c[e2];
          for (var t2, r2 = e2, n2 = [], s2 = 0; r2; ) {
            if ((t2 = i.text.exec(r2)) !== null)
              n2.push(t2[0]);
            else if ((t2 = i.modulo.exec(r2)) !== null)
              n2.push("%");
            else {
              if ((t2 = i.placeholder.exec(r2)) === null)
                throw new SyntaxError("[sprintf] unexpected placeholder");
              if (t2[2]) {
                s2 |= 1;
                var o2 = [], a2 = t2[2], u2 = [];
                if ((u2 = i.key.exec(a2)) === null)
                  throw new SyntaxError("[sprintf] failed to parse named argument key");
                for (o2.push(u2[1]); (a2 = a2.substring(u2[0].length)) !== ""; )
                  if ((u2 = i.key_access.exec(a2)) !== null)
                    o2.push(u2[1]);
                  else {
                    if ((u2 = i.index_access.exec(a2)) === null)
                      throw new SyntaxError("[sprintf] failed to parse named argument key");
                    o2.push(u2[1]);
                  }
                t2[2] = o2;
              } else
                s2 |= 2;
              if (s2 === 3)
                throw new Error("[sprintf] mixing positional and named placeholders is not (yet) supported");
              n2.push({placeholder: t2[0], param_no: t2[1], keys: t2[2], sign: t2[3], pad_char: t2[4], align: t2[5], width: t2[6], precision: t2[7], type: t2[8]});
            }
            r2 = r2.substring(t2[0].length);
          }
          return c[e2] = n2;
        }
        t.sprintf = s, t.vsprintf = o, typeof window != "undefined" && (window.sprintf = s, window.vsprintf = o, (n = function() {
          return {sprintf: s, vsprintf: o};
        }.call(t, r, t, e)) === void 0 || (e.exports = n));
      }();
    }, function(e, t, r) {
      "use strict";
      var n = function(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      };
      Object.defineProperty(t, "__esModule", {value: true}), t.logCipherState = t.logRemoteEphemeralKey = t.logRemoteStaticKey = t.logLocalEphemeralKeys = t.logLocalStaticKeys = t.logger = void 0;
      const i = n(r(1)), s = r(210);
      let o;
      t.logger = i.default("libp2p:noise"), o = s.DUMP_SESSION_KEYS ? t.logger : () => {
      }, t.logLocalStaticKeys = function(e2) {
        o("LOCAL_STATIC_PUBLIC_KEY " + e2.publicKey.toString("hex")), o("LOCAL_STATIC_PRIVATE_KEY " + e2.privateKey.toString("hex"));
      }, t.logLocalEphemeralKeys = function(e2) {
        e2 ? (o("LOCAL_PUBLIC_EPHEMERAL_KEY " + e2.publicKey.toString("hex")), o("LOCAL_PRIVATE_EPHEMERAL_KEY " + e2.privateKey.toString("hex"))) : o("Missing local ephemeral keys.");
      }, t.logRemoteStaticKey = function(e2) {
        o("REMOTE_STATIC_PUBLIC_KEY " + e2.toString("hex"));
      }, t.logRemoteEphemeralKey = function(e2) {
        o("REMOTE_EPHEMERAL_PUBLIC_KEY " + e2.toString("hex"));
      }, t.logCipherState = function(e2) {
        e2.cs1 && e2.cs2 ? (o(`CIPHER_STATE_1 ${e2.cs1.n} ${e2.cs1.k.toString("hex")}`), o(`CIPHER_STATE_2 ${e2.cs2.n} ${e2.cs2.k.toString("hex")}`)) : o("Missing cipher state.");
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(89), i = r(4), {getName: s} = r(17), o = r(1096), a = r(15), {isMapEqual: c} = r(46), {Message: u} = r(1101), h = r(1102);
      class f {
        constructor(e2) {
          this.full = e2, this.wantlist = new Map(), this.blocks = new Map(), this.blockPresences = new Map(), this.pendingBytes = 0;
        }
        get empty() {
          return this.blocks.size === 0 && this.wantlist.size === 0 && this.blockPresences.size === 0;
        }
        addEntry(e2, t2, r2, n2, i2) {
          r2 == null && (r2 = f.WantType.Block);
          const s2 = e2.toString("base58btc"), o2 = this.wantlist.get(s2);
          o2 ? (o2.wantType === r2 && (o2.priority = t2), n2 && (o2.cancel = Boolean(n2)), i2 && (o2.sendDontHave = Boolean(i2)), r2 === f.WantType.Block && o2.wantType === f.WantType.Have && (o2.wantType = r2)) : this.wantlist.set(s2, new h(e2, t2, r2, n2, i2));
        }
        addBlock(e2) {
          const t2 = e2.cid.toString("base58btc");
          this.blocks.set(t2, e2);
        }
        addHave(e2) {
          const t2 = e2.toString("base58btc");
          this.blockPresences.has(t2) || this.blockPresences.set(t2, f.BlockPresenceType.Have);
        }
        addDontHave(e2) {
          const t2 = e2.toString("base58btc");
          this.blockPresences.has(t2) || this.blockPresences.set(t2, f.BlockPresenceType.DontHave);
        }
        cancel(e2) {
          const t2 = e2.toString("base58btc");
          this.wantlist.delete(t2), this.addEntry(e2, 0, f.WantType.Block, true, false);
        }
        setPendingBytes(e2) {
          this.pendingBytes = e2;
        }
        serializeToBitswap100() {
          const e2 = {wantlist: {entries: Array.from(this.wantlist.values()).map((e3) => ({block: e3.cid.bytes, priority: Number(e3.priority), cancel: Boolean(e3.cancel)}))}, blocks: Array.from(this.blocks.values()).map((e3) => e3.data)};
          return this.full && (e2.wantlist.full = true), u.encode(e2);
        }
        serializeToBitswap110() {
          const e2 = {wantlist: {entries: Array.from(this.wantlist.values()).map((e3) => ({block: e3.cid.bytes, priority: Number(e3.priority), wantType: e3.wantType, cancel: Boolean(e3.cancel), sendDontHave: Boolean(e3.sendDontHave)}))}, blockPresences: [], payload: []};
          this.full && (e2.wantlist.full = true), this.blocks.forEach((t2) => {
            e2.payload.push({prefix: t2.cid.prefix, data: t2.data});
          });
          for (const [t2, r2] of this.blockPresences)
            e2.blockPresences.push({cid: new i(t2).bytes, type: r2});
          return this.pendingBytes > 0 && (e2.pendingBytes = this.pendingBytes), u.encode(e2);
        }
        equals(e2) {
          return !!(this.full === e2.full && this.pendingBytes === e2.pendingBytes && c(this.wantlist, e2.wantlist) && c(this.blocks, e2.blocks) && c(this.blockPresences, e2.blockPresences));
        }
        get [Symbol.toStringTag]() {
          const e2 = Array.from(this.wantlist.keys()), t2 = Array.from(this.blocks.keys());
          return `BitswapMessage <full: ${this.full}, list: ${e2}, blocks: ${t2}>`;
        }
      }
      f.deserialize = async (e2) => {
        const t2 = u.decode(e2), r2 = t2.wantlist && t2.wantlist.full || false, c2 = new f(r2);
        return t2.wantlist && t2.wantlist.entries.forEach((e3) => {
          const t3 = new i(e3.block);
          c2.addEntry(t3, e3.priority, e3.wantType, e3.cancel, e3.sendDontHave);
        }), t2.blockPresences && t2.blockPresences.forEach((e3) => {
          const t3 = new i(e3.cid);
          e3.type === f.BlockPresenceType.Have ? c2.addHave(t3) : c2.addDontHave(t3);
        }), t2.blocks.length > 0 ? (await Promise.all(t2.blocks.map(async (e3) => {
          const t3 = await a(e3, "sha2-256"), r3 = new i(t3);
          c2.addBlock(new n(e3, r3));
        })), c2) : t2.payload.length > 0 ? (await Promise.all(t2.payload.map(async (e3) => {
          if (!e3.prefix || !e3.data)
            return;
          const t3 = o(e3.prefix), r3 = t3[0], u2 = t3[1], h2 = t3[2], f2 = await a(e3.data, h2), d = new i(r3, s(u2), f2);
          c2.addBlock(new n(e3.data, d));
        })), c2.setPendingBytes(t2.pendingBytes), c2) : c2;
      }, f.blockPresenceSize = (e2) => e2.bytes.length + 1, f.Entry = h, f.WantType = {Block: u.Wantlist.WantType.Block, Have: u.Wantlist.WantType.Have}, f.BlockPresenceType = {Have: u.BlockPresenceType.Have, DontHave: u.BlockPresenceType.DontHave}, e.exports = f;
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      if (r(44), r(100), r(78), r(448), r(450), r(50), r(13), i === void 0)
        var i = n.jsbn.BigInteger;
      var s = n.util.isNodejs ? r(140) : null, o = n.asn1, a = n.util;
      n.pki = n.pki || {}, e.exports = n.pki.rsa = n.rsa = n.rsa || {};
      var c = n.pki, u = [6, 4, 2, 4, 2, 4, 6, 2], h = {name: "PrivateKeyInfo", tagClass: o.Class.UNIVERSAL, type: o.Type.SEQUENCE, constructed: true, value: [{name: "PrivateKeyInfo.version", tagClass: o.Class.UNIVERSAL, type: o.Type.INTEGER, constructed: false, capture: "privateKeyVersion"}, {name: "PrivateKeyInfo.privateKeyAlgorithm", tagClass: o.Class.UNIVERSAL, type: o.Type.SEQUENCE, constructed: true, value: [{name: "AlgorithmIdentifier.algorithm", tagClass: o.Class.UNIVERSAL, type: o.Type.OID, constructed: false, capture: "privateKeyOid"}]}, {name: "PrivateKeyInfo", tagClass: o.Class.UNIVERSAL, type: o.Type.OCTETSTRING, constructed: false, capture: "privateKey"}]}, f = {name: "RSAPrivateKey", tagClass: o.Class.UNIVERSAL, type: o.Type.SEQUENCE, constructed: true, value: [{name: "RSAPrivateKey.version", tagClass: o.Class.UNIVERSAL, type: o.Type.INTEGER, constructed: false, capture: "privateKeyVersion"}, {name: "RSAPrivateKey.modulus", tagClass: o.Class.UNIVERSAL, type: o.Type.INTEGER, constructed: false, capture: "privateKeyModulus"}, {name: "RSAPrivateKey.publicExponent", tagClass: o.Class.UNIVERSAL, type: o.Type.INTEGER, constructed: false, capture: "privateKeyPublicExponent"}, {name: "RSAPrivateKey.privateExponent", tagClass: o.Class.UNIVERSAL, type: o.Type.INTEGER, constructed: false, capture: "privateKeyPrivateExponent"}, {name: "RSAPrivateKey.prime1", tagClass: o.Class.UNIVERSAL, type: o.Type.INTEGER, constructed: false, capture: "privateKeyPrime1"}, {name: "RSAPrivateKey.prime2", tagClass: o.Class.UNIVERSAL, type: o.Type.INTEGER, constructed: false, capture: "privateKeyPrime2"}, {name: "RSAPrivateKey.exponent1", tagClass: o.Class.UNIVERSAL, type: o.Type.INTEGER, constructed: false, capture: "privateKeyExponent1"}, {name: "RSAPrivateKey.exponent2", tagClass: o.Class.UNIVERSAL, type: o.Type.INTEGER, constructed: false, capture: "privateKeyExponent2"}, {name: "RSAPrivateKey.coefficient", tagClass: o.Class.UNIVERSAL, type: o.Type.INTEGER, constructed: false, capture: "privateKeyCoefficient"}]}, d = {name: "RSAPublicKey", tagClass: o.Class.UNIVERSAL, type: o.Type.SEQUENCE, constructed: true, value: [{name: "RSAPublicKey.modulus", tagClass: o.Class.UNIVERSAL, type: o.Type.INTEGER, constructed: false, capture: "publicKeyModulus"}, {name: "RSAPublicKey.exponent", tagClass: o.Class.UNIVERSAL, type: o.Type.INTEGER, constructed: false, capture: "publicKeyExponent"}]}, l = n.pki.rsa.publicKeyValidator = {name: "SubjectPublicKeyInfo", tagClass: o.Class.UNIVERSAL, type: o.Type.SEQUENCE, constructed: true, captureAsn1: "subjectPublicKeyInfo", value: [{name: "SubjectPublicKeyInfo.AlgorithmIdentifier", tagClass: o.Class.UNIVERSAL, type: o.Type.SEQUENCE, constructed: true, value: [{name: "AlgorithmIdentifier.algorithm", tagClass: o.Class.UNIVERSAL, type: o.Type.OID, constructed: false, capture: "publicKeyOid"}]}, {name: "SubjectPublicKeyInfo.subjectPublicKey", tagClass: o.Class.UNIVERSAL, type: o.Type.BITSTRING, constructed: false, value: [{name: "SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey", tagClass: o.Class.UNIVERSAL, type: o.Type.SEQUENCE, constructed: true, optional: true, captureAsn1: "rsaPublicKey"}]}]}, p = function(e2) {
        var t2;
        if (!(e2.algorithm in c.oids)) {
          var r2 = new Error("Unknown message digest algorithm.");
          throw r2.algorithm = e2.algorithm, r2;
        }
        t2 = c.oids[e2.algorithm];
        var n2 = o.oidToDer(t2).getBytes(), i2 = o.create(o.Class.UNIVERSAL, o.Type.SEQUENCE, true, []), s2 = o.create(o.Class.UNIVERSAL, o.Type.SEQUENCE, true, []);
        s2.value.push(o.create(o.Class.UNIVERSAL, o.Type.OID, false, n2)), s2.value.push(o.create(o.Class.UNIVERSAL, o.Type.NULL, false, ""));
        var a2 = o.create(o.Class.UNIVERSAL, o.Type.OCTETSTRING, false, e2.digest().getBytes());
        return i2.value.push(s2), i2.value.push(a2), o.toDer(i2).getBytes();
      }, y = function(e2, t2, r2) {
        if (r2)
          return e2.modPow(t2.e, t2.n);
        if (!t2.p || !t2.q)
          return e2.modPow(t2.d, t2.n);
        var s2;
        t2.dP || (t2.dP = t2.d.mod(t2.p.subtract(i.ONE))), t2.dQ || (t2.dQ = t2.d.mod(t2.q.subtract(i.ONE))), t2.qInv || (t2.qInv = t2.q.modInverse(t2.p));
        do {
          s2 = new i(n.util.bytesToHex(n.random.getBytes(t2.n.bitLength() / 8)), 16);
        } while (s2.compareTo(t2.n) >= 0 || !s2.gcd(t2.n).equals(i.ONE));
        for (var o2 = (e2 = e2.multiply(s2.modPow(t2.e, t2.n)).mod(t2.n)).mod(t2.p).modPow(t2.dP, t2.p), a2 = e2.mod(t2.q).modPow(t2.dQ, t2.q); o2.compareTo(a2) < 0; )
          o2 = o2.add(t2.p);
        var c2 = o2.subtract(a2).multiply(t2.qInv).mod(t2.p).multiply(t2.q).add(a2);
        return c2 = c2.multiply(s2.modInverse(t2.n)).mod(t2.n);
      };
      function g(e2, t2, r2) {
        var i2 = n.util.createBuffer(), s2 = Math.ceil(t2.n.bitLength() / 8);
        if (e2.length > s2 - 11) {
          var o2 = new Error("Message is too long for PKCS#1 v1.5 padding.");
          throw o2.length = e2.length, o2.max = s2 - 11, o2;
        }
        i2.putByte(0), i2.putByte(r2);
        var a2, c2 = s2 - 3 - e2.length;
        if (r2 === 0 || r2 === 1) {
          a2 = r2 === 0 ? 0 : 255;
          for (var u2 = 0; u2 < c2; ++u2)
            i2.putByte(a2);
        } else
          for (; c2 > 0; ) {
            var h2 = 0, f2 = n.random.getBytes(c2);
            for (u2 = 0; u2 < c2; ++u2)
              (a2 = f2.charCodeAt(u2)) === 0 ? ++h2 : i2.putByte(a2);
            c2 = h2;
          }
        return i2.putByte(0), i2.putBytes(e2), i2;
      }
      function b(e2, t2, r2, i2) {
        var s2 = Math.ceil(t2.n.bitLength() / 8), o2 = n.util.createBuffer(e2), a2 = o2.getByte(), c2 = o2.getByte();
        if (a2 !== 0 || r2 && c2 !== 0 && c2 !== 1 || !r2 && c2 != 2 || r2 && c2 === 0 && i2 === void 0)
          throw new Error("Encryption block is invalid.");
        var u2 = 0;
        if (c2 === 0) {
          u2 = s2 - 3 - i2;
          for (var h2 = 0; h2 < u2; ++h2)
            if (o2.getByte() !== 0)
              throw new Error("Encryption block is invalid.");
        } else if (c2 === 1)
          for (u2 = 0; o2.length() > 1; ) {
            if (o2.getByte() !== 255) {
              --o2.read;
              break;
            }
            ++u2;
          }
        else if (c2 === 2)
          for (u2 = 0; o2.length() > 1; ) {
            if (o2.getByte() === 0) {
              --o2.read;
              break;
            }
            ++u2;
          }
        if (o2.getByte() !== 0 || u2 !== s2 - 3 - o2.length())
          throw new Error("Encryption block is invalid.");
        return o2.getBytes();
      }
      function m(e2, t2, r2) {
        typeof t2 == "function" && (r2 = t2, t2 = {});
        var s2 = {algorithm: {name: (t2 = t2 || {}).algorithm || "PRIMEINC", options: {workers: t2.workers || 2, workLoad: t2.workLoad || 100, workerScript: t2.workerScript}}};
        function o2() {
          a2(e2.pBits, function(t3, n2) {
            return t3 ? r2(t3) : (e2.p = n2, e2.q !== null ? u2(t3, e2.q) : void a2(e2.qBits, u2));
          });
        }
        function a2(e3, t3) {
          n.prime.generateProbablePrime(e3, s2, t3);
        }
        function u2(t3, n2) {
          if (t3)
            return r2(t3);
          if (e2.q = n2, e2.p.compareTo(e2.q) < 0) {
            var s3 = e2.p;
            e2.p = e2.q, e2.q = s3;
          }
          if (e2.p.subtract(i.ONE).gcd(e2.e).compareTo(i.ONE) !== 0)
            return e2.p = null, void o2();
          if (e2.q.subtract(i.ONE).gcd(e2.e).compareTo(i.ONE) !== 0)
            return e2.q = null, void a2(e2.qBits, u2);
          if (e2.p1 = e2.p.subtract(i.ONE), e2.q1 = e2.q.subtract(i.ONE), e2.phi = e2.p1.multiply(e2.q1), e2.phi.gcd(e2.e).compareTo(i.ONE) !== 0)
            return e2.p = e2.q = null, void o2();
          if (e2.n = e2.p.multiply(e2.q), e2.n.bitLength() !== e2.bits)
            return e2.q = null, void a2(e2.qBits, u2);
          var h2 = e2.e.modInverse(e2.phi);
          e2.keys = {privateKey: c.rsa.setPrivateKey(e2.n, e2.e, h2, e2.p, e2.q, h2.mod(e2.p1), h2.mod(e2.q1), e2.q.modInverse(e2.p)), publicKey: c.rsa.setPublicKey(e2.n, e2.e)}, r2(null, e2.keys);
        }
        "prng" in t2 && (s2.prng = t2.prng), o2();
      }
      function v(e2) {
        var t2 = e2.toString(16);
        t2[0] >= "8" && (t2 = "00" + t2);
        var r2 = n.util.hexToBytes(t2);
        return r2.length > 1 && (r2.charCodeAt(0) === 0 && (128 & r2.charCodeAt(1)) == 0 || r2.charCodeAt(0) === 255 && (128 & r2.charCodeAt(1)) == 128) ? r2.substr(1) : r2;
      }
      function w(e2) {
        return e2 <= 100 ? 27 : e2 <= 150 ? 18 : e2 <= 200 ? 15 : e2 <= 250 ? 12 : e2 <= 300 ? 9 : e2 <= 350 ? 8 : e2 <= 400 ? 7 : e2 <= 500 ? 6 : e2 <= 600 ? 5 : e2 <= 800 ? 4 : e2 <= 1250 ? 3 : 2;
      }
      function _(e2) {
        return n.util.isNodejs && typeof s[e2] == "function";
      }
      function E(e2) {
        return a.globalScope !== void 0 && typeof a.globalScope.crypto == "object" && typeof a.globalScope.crypto.subtle == "object" && typeof a.globalScope.crypto.subtle[e2] == "function";
      }
      function S(e2) {
        return a.globalScope !== void 0 && typeof a.globalScope.msCrypto == "object" && typeof a.globalScope.msCrypto.subtle == "object" && typeof a.globalScope.msCrypto.subtle[e2] == "function";
      }
      function A(e2) {
        for (var t2 = n.util.hexToBytes(e2.toString(16)), r2 = new Uint8Array(t2.length), i2 = 0; i2 < t2.length; ++i2)
          r2[i2] = t2.charCodeAt(i2);
        return r2;
      }
      c.rsa.encrypt = function(e2, t2, r2) {
        var s2, o2 = r2, a2 = Math.ceil(t2.n.bitLength() / 8);
        r2 !== false && r2 !== true ? (o2 = r2 === 2, s2 = g(e2, t2, r2)) : (s2 = n.util.createBuffer()).putBytes(e2);
        for (var c2 = new i(s2.toHex(), 16), u2 = y(c2, t2, o2).toString(16), h2 = n.util.createBuffer(), f2 = a2 - Math.ceil(u2.length / 2); f2 > 0; )
          h2.putByte(0), --f2;
        return h2.putBytes(n.util.hexToBytes(u2)), h2.getBytes();
      }, c.rsa.decrypt = function(e2, t2, r2, s2) {
        var o2 = Math.ceil(t2.n.bitLength() / 8);
        if (e2.length !== o2) {
          var a2 = new Error("Encrypted message length is invalid.");
          throw a2.length = e2.length, a2.expected = o2, a2;
        }
        var c2 = new i(n.util.createBuffer(e2).toHex(), 16);
        if (c2.compareTo(t2.n) >= 0)
          throw new Error("Encrypted message is invalid.");
        for (var u2 = y(c2, t2, r2).toString(16), h2 = n.util.createBuffer(), f2 = o2 - Math.ceil(u2.length / 2); f2 > 0; )
          h2.putByte(0), --f2;
        return h2.putBytes(n.util.hexToBytes(u2)), s2 !== false ? b(h2.getBytes(), t2, r2) : h2.getBytes();
      }, c.rsa.createKeyPairGenerationState = function(e2, t2, r2) {
        typeof e2 == "string" && (e2 = parseInt(e2, 10)), e2 = e2 || 2048;
        var s2, o2 = (r2 = r2 || {}).prng || n.random, a2 = {nextBytes: function(e3) {
          for (var t3 = o2.getBytesSync(e3.length), r3 = 0; r3 < e3.length; ++r3)
            e3[r3] = t3.charCodeAt(r3);
        }}, c2 = r2.algorithm || "PRIMEINC";
        if (c2 !== "PRIMEINC")
          throw new Error("Invalid key generation algorithm: " + c2);
        return (s2 = {algorithm: c2, state: 0, bits: e2, rng: a2, eInt: t2 || 65537, e: new i(null), p: null, q: null, qBits: e2 >> 1, pBits: e2 - (e2 >> 1), pqState: 0, num: null, keys: null}).e.fromInt(s2.eInt), s2;
      }, c.rsa.stepKeyPairGenerationState = function(e2, t2) {
        "algorithm" in e2 || (e2.algorithm = "PRIMEINC");
        var r2 = new i(null);
        r2.fromInt(30);
        for (var n2, s2 = 0, o2 = function(e3, t3) {
          return e3 | t3;
        }, a2 = +new Date(), h2 = 0; e2.keys === null && (t2 <= 0 || h2 < t2); ) {
          if (e2.state === 0) {
            var f2 = e2.p === null ? e2.pBits : e2.qBits, d2 = f2 - 1;
            e2.pqState === 0 ? (e2.num = new i(f2, e2.rng), e2.num.testBit(d2) || e2.num.bitwiseTo(i.ONE.shiftLeft(d2), o2, e2.num), e2.num.dAddOffset(31 - e2.num.mod(r2).byteValue(), 0), s2 = 0, ++e2.pqState) : e2.pqState === 1 ? e2.num.bitLength() > f2 ? e2.pqState = 0 : e2.num.isProbablePrime(w(e2.num.bitLength())) ? ++e2.pqState : e2.num.dAddOffset(u[s2++ % 8], 0) : e2.pqState === 2 ? e2.pqState = e2.num.subtract(i.ONE).gcd(e2.e).compareTo(i.ONE) === 0 ? 3 : 0 : e2.pqState === 3 && (e2.pqState = 0, e2.p === null ? e2.p = e2.num : e2.q = e2.num, e2.p !== null && e2.q !== null && ++e2.state, e2.num = null);
          } else if (e2.state === 1)
            e2.p.compareTo(e2.q) < 0 && (e2.num = e2.p, e2.p = e2.q, e2.q = e2.num), ++e2.state;
          else if (e2.state === 2)
            e2.p1 = e2.p.subtract(i.ONE), e2.q1 = e2.q.subtract(i.ONE), e2.phi = e2.p1.multiply(e2.q1), ++e2.state;
          else if (e2.state === 3)
            e2.phi.gcd(e2.e).compareTo(i.ONE) === 0 ? ++e2.state : (e2.p = null, e2.q = null, e2.state = 0);
          else if (e2.state === 4)
            e2.n = e2.p.multiply(e2.q), e2.n.bitLength() === e2.bits ? ++e2.state : (e2.q = null, e2.state = 0);
          else if (e2.state === 5) {
            var l2 = e2.e.modInverse(e2.phi);
            e2.keys = {privateKey: c.rsa.setPrivateKey(e2.n, e2.e, l2, e2.p, e2.q, l2.mod(e2.p1), l2.mod(e2.q1), e2.q.modInverse(e2.p)), publicKey: c.rsa.setPublicKey(e2.n, e2.e)};
          }
          h2 += (n2 = +new Date()) - a2, a2 = n2;
        }
        return e2.keys !== null;
      }, c.rsa.generateKeyPair = function(e2, t2, r2, i2) {
        if (arguments.length === 1 ? typeof e2 == "object" ? (r2 = e2, e2 = void 0) : typeof e2 == "function" && (i2 = e2, e2 = void 0) : arguments.length === 2 ? typeof e2 == "number" ? typeof t2 == "function" ? (i2 = t2, t2 = void 0) : typeof t2 != "number" && (r2 = t2, t2 = void 0) : (r2 = e2, i2 = t2, e2 = void 0, t2 = void 0) : arguments.length === 3 && (typeof t2 == "number" ? typeof r2 == "function" && (i2 = r2, r2 = void 0) : (i2 = r2, r2 = t2, t2 = void 0)), r2 = r2 || {}, e2 === void 0 && (e2 = r2.bits || 2048), t2 === void 0 && (t2 = r2.e || 65537), !n.options.usePureJavaScript && !r2.prng && e2 >= 256 && e2 <= 16384 && (t2 === 65537 || t2 === 3)) {
          if (i2) {
            if (_("generateKeyPair"))
              return s.generateKeyPair("rsa", {modulusLength: e2, publicExponent: t2, publicKeyEncoding: {type: "spki", format: "pem"}, privateKeyEncoding: {type: "pkcs8", format: "pem"}}, function(e3, t3, r3) {
                if (e3)
                  return i2(e3);
                i2(null, {privateKey: c.privateKeyFromPem(r3), publicKey: c.publicKeyFromPem(t3)});
              });
            if (E("generateKey") && E("exportKey"))
              return a.globalScope.crypto.subtle.generateKey({name: "RSASSA-PKCS1-v1_5", modulusLength: e2, publicExponent: A(t2), hash: {name: "SHA-256"}}, true, ["sign", "verify"]).then(function(e3) {
                return a.globalScope.crypto.subtle.exportKey("pkcs8", e3.privateKey);
              }).then(void 0, function(e3) {
                i2(e3);
              }).then(function(e3) {
                if (e3) {
                  var t3 = c.privateKeyFromAsn1(o.fromDer(n.util.createBuffer(e3)));
                  i2(null, {privateKey: t3, publicKey: c.setRsaPublicKey(t3.n, t3.e)});
                }
              });
            if (S("generateKey") && S("exportKey")) {
              var u2 = a.globalScope.msCrypto.subtle.generateKey({name: "RSASSA-PKCS1-v1_5", modulusLength: e2, publicExponent: A(t2), hash: {name: "SHA-256"}}, true, ["sign", "verify"]);
              return u2.oncomplete = function(e3) {
                var t3 = e3.target.result, r3 = a.globalScope.msCrypto.subtle.exportKey("pkcs8", t3.privateKey);
                r3.oncomplete = function(e4) {
                  var t4 = e4.target.result, r4 = c.privateKeyFromAsn1(o.fromDer(n.util.createBuffer(t4)));
                  i2(null, {privateKey: r4, publicKey: c.setRsaPublicKey(r4.n, r4.e)});
                }, r3.onerror = function(e4) {
                  i2(e4);
                };
              }, void (u2.onerror = function(e3) {
                i2(e3);
              });
            }
          } else if (_("generateKeyPairSync")) {
            var h2 = s.generateKeyPairSync("rsa", {modulusLength: e2, publicExponent: t2, publicKeyEncoding: {type: "spki", format: "pem"}, privateKeyEncoding: {type: "pkcs8", format: "pem"}});
            return {privateKey: c.privateKeyFromPem(h2.privateKey), publicKey: c.publicKeyFromPem(h2.publicKey)};
          }
        }
        var f2 = c.rsa.createKeyPairGenerationState(e2, t2, r2);
        if (!i2)
          return c.rsa.stepKeyPairGenerationState(f2, 0), f2.keys;
        m(f2, r2, i2);
      }, c.setRsaPublicKey = c.rsa.setPublicKey = function(e2, t2) {
        var r2 = {n: e2, e: t2, encrypt: function(e3, t3, i2) {
          if (typeof t3 == "string" ? t3 = t3.toUpperCase() : t3 === void 0 && (t3 = "RSAES-PKCS1-V1_5"), t3 === "RSAES-PKCS1-V1_5")
            t3 = {encode: function(e4, t4, r3) {
              return g(e4, t4, 2).getBytes();
            }};
          else if (t3 === "RSA-OAEP" || t3 === "RSAES-OAEP")
            t3 = {encode: function(e4, t4) {
              return n.pkcs1.encode_rsa_oaep(t4, e4, i2);
            }};
          else if (["RAW", "NONE", "NULL", null].indexOf(t3) !== -1)
            t3 = {encode: function(e4) {
              return e4;
            }};
          else if (typeof t3 == "string")
            throw new Error('Unsupported encryption scheme: "' + t3 + '".');
          var s2 = t3.encode(e3, r2, true);
          return c.rsa.encrypt(s2, r2, true);
        }, verify: function(e3, t3, n2) {
          typeof n2 == "string" ? n2 = n2.toUpperCase() : n2 === void 0 && (n2 = "RSASSA-PKCS1-V1_5"), n2 === "RSASSA-PKCS1-V1_5" ? n2 = {verify: function(e4, t4) {
            return t4 = b(t4, r2, true), e4 === o.fromDer(t4).value[1].value;
          }} : n2 !== "NONE" && n2 !== "NULL" && n2 !== null || (n2 = {verify: function(e4, t4) {
            return e4 === (t4 = b(t4, r2, true));
          }});
          var i2 = c.rsa.decrypt(t3, r2, true, false);
          return n2.verify(e3, i2, r2.n.bitLength());
        }};
        return r2;
      }, c.setRsaPrivateKey = c.rsa.setPrivateKey = function(e2, t2, r2, i2, s2, o2, a2, u2) {
        var h2 = {n: e2, e: t2, d: r2, p: i2, q: s2, dP: o2, dQ: a2, qInv: u2, decrypt: function(e3, t3, r3) {
          typeof t3 == "string" ? t3 = t3.toUpperCase() : t3 === void 0 && (t3 = "RSAES-PKCS1-V1_5");
          var i3 = c.rsa.decrypt(e3, h2, false, false);
          if (t3 === "RSAES-PKCS1-V1_5")
            t3 = {decode: b};
          else if (t3 === "RSA-OAEP" || t3 === "RSAES-OAEP")
            t3 = {decode: function(e4, t4) {
              return n.pkcs1.decode_rsa_oaep(t4, e4, r3);
            }};
          else {
            if (["RAW", "NONE", "NULL", null].indexOf(t3) === -1)
              throw new Error('Unsupported encryption scheme: "' + t3 + '".');
            t3 = {decode: function(e4) {
              return e4;
            }};
          }
          return t3.decode(i3, h2, false);
        }, sign: function(e3, t3) {
          var r3 = false;
          typeof t3 == "string" && (t3 = t3.toUpperCase()), t3 === void 0 || t3 === "RSASSA-PKCS1-V1_5" ? (t3 = {encode: p}, r3 = 1) : t3 !== "NONE" && t3 !== "NULL" && t3 !== null || (t3 = {encode: function() {
            return e3;
          }}, r3 = 1);
          var n2 = t3.encode(e3, h2.n.bitLength());
          return c.rsa.encrypt(n2, h2, r3);
        }};
        return h2;
      }, c.wrapRsaPrivateKey = function(e2) {
        return o.create(o.Class.UNIVERSAL, o.Type.SEQUENCE, true, [o.create(o.Class.UNIVERSAL, o.Type.INTEGER, false, o.integerToDer(0).getBytes()), o.create(o.Class.UNIVERSAL, o.Type.SEQUENCE, true, [o.create(o.Class.UNIVERSAL, o.Type.OID, false, o.oidToDer(c.oids.rsaEncryption).getBytes()), o.create(o.Class.UNIVERSAL, o.Type.NULL, false, "")]), o.create(o.Class.UNIVERSAL, o.Type.OCTETSTRING, false, o.toDer(e2).getBytes())]);
      }, c.privateKeyFromAsn1 = function(e2) {
        var t2, r2, s2, a2, u2, d2, l2, p2, y2 = {}, g2 = [];
        if (o.validate(e2, h, y2, g2) && (e2 = o.fromDer(n.util.createBuffer(y2.privateKey))), y2 = {}, g2 = [], !o.validate(e2, f, y2, g2)) {
          var b2 = new Error("Cannot read private key. ASN.1 object does not contain an RSAPrivateKey.");
          throw b2.errors = g2, b2;
        }
        return t2 = n.util.createBuffer(y2.privateKeyModulus).toHex(), r2 = n.util.createBuffer(y2.privateKeyPublicExponent).toHex(), s2 = n.util.createBuffer(y2.privateKeyPrivateExponent).toHex(), a2 = n.util.createBuffer(y2.privateKeyPrime1).toHex(), u2 = n.util.createBuffer(y2.privateKeyPrime2).toHex(), d2 = n.util.createBuffer(y2.privateKeyExponent1).toHex(), l2 = n.util.createBuffer(y2.privateKeyExponent2).toHex(), p2 = n.util.createBuffer(y2.privateKeyCoefficient).toHex(), c.setRsaPrivateKey(new i(t2, 16), new i(r2, 16), new i(s2, 16), new i(a2, 16), new i(u2, 16), new i(d2, 16), new i(l2, 16), new i(p2, 16));
      }, c.privateKeyToAsn1 = c.privateKeyToRSAPrivateKey = function(e2) {
        return o.create(o.Class.UNIVERSAL, o.Type.SEQUENCE, true, [o.create(o.Class.UNIVERSAL, o.Type.INTEGER, false, o.integerToDer(0).getBytes()), o.create(o.Class.UNIVERSAL, o.Type.INTEGER, false, v(e2.n)), o.create(o.Class.UNIVERSAL, o.Type.INTEGER, false, v(e2.e)), o.create(o.Class.UNIVERSAL, o.Type.INTEGER, false, v(e2.d)), o.create(o.Class.UNIVERSAL, o.Type.INTEGER, false, v(e2.p)), o.create(o.Class.UNIVERSAL, o.Type.INTEGER, false, v(e2.q)), o.create(o.Class.UNIVERSAL, o.Type.INTEGER, false, v(e2.dP)), o.create(o.Class.UNIVERSAL, o.Type.INTEGER, false, v(e2.dQ)), o.create(o.Class.UNIVERSAL, o.Type.INTEGER, false, v(e2.qInv))]);
      }, c.publicKeyFromAsn1 = function(e2) {
        var t2 = {}, r2 = [];
        if (o.validate(e2, l, t2, r2)) {
          var s2, a2 = o.derToOid(t2.publicKeyOid);
          if (a2 !== c.oids.rsaEncryption)
            throw (s2 = new Error("Cannot read public key. Unknown OID.")).oid = a2, s2;
          e2 = t2.rsaPublicKey;
        }
        if (r2 = [], !o.validate(e2, d, t2, r2))
          throw (s2 = new Error("Cannot read public key. ASN.1 object does not contain an RSAPublicKey.")).errors = r2, s2;
        var u2 = n.util.createBuffer(t2.publicKeyModulus).toHex(), h2 = n.util.createBuffer(t2.publicKeyExponent).toHex();
        return c.setRsaPublicKey(new i(u2, 16), new i(h2, 16));
      }, c.publicKeyToAsn1 = c.publicKeyToSubjectPublicKeyInfo = function(e2) {
        return o.create(o.Class.UNIVERSAL, o.Type.SEQUENCE, true, [o.create(o.Class.UNIVERSAL, o.Type.SEQUENCE, true, [o.create(o.Class.UNIVERSAL, o.Type.OID, false, o.oidToDer(c.oids.rsaEncryption).getBytes()), o.create(o.Class.UNIVERSAL, o.Type.NULL, false, "")]), o.create(o.Class.UNIVERSAL, o.Type.BITSTRING, false, [c.publicKeyToRSAPublicKey(e2)])]);
      }, c.publicKeyToRSAPublicKey = function(e2) {
        return o.create(o.Class.UNIVERSAL, o.Type.SEQUENCE, true, [o.create(o.Class.UNIVERSAL, o.Type.INTEGER, false, v(e2.n)), o.create(o.Class.UNIVERSAL, o.Type.INTEGER, false, v(e2.e))]);
      };
    }, function(e, t, r) {
      "use strict";
      var n, i = r(8);
      e.exports = i.jsbn = i.jsbn || {};
      function s(e2, t2, r2) {
        this.data = [], e2 != null && (typeof e2 == "number" ? this.fromNumber(e2, t2, r2) : t2 == null && typeof e2 != "string" ? this.fromString(e2, 256) : this.fromString(e2, t2));
      }
      function o() {
        return new s(null);
      }
      function a(e2, t2, r2, n2, i2, s2) {
        for (var o2 = 16383 & t2, a2 = t2 >> 14; --s2 >= 0; ) {
          var c2 = 16383 & this.data[e2], u2 = this.data[e2++] >> 14, h2 = a2 * c2 + u2 * o2;
          i2 = ((c2 = o2 * c2 + ((16383 & h2) << 14) + r2.data[n2] + i2) >> 28) + (h2 >> 14) + a2 * u2, r2.data[n2++] = 268435455 & c2;
        }
        return i2;
      }
      i.jsbn.BigInteger = s, typeof navigator == "undefined" ? (s.prototype.am = a, n = 28) : navigator.appName == "Microsoft Internet Explorer" ? (s.prototype.am = function(e2, t2, r2, n2, i2, s2) {
        for (var o2 = 32767 & t2, a2 = t2 >> 15; --s2 >= 0; ) {
          var c2 = 32767 & this.data[e2], u2 = this.data[e2++] >> 15, h2 = a2 * c2 + u2 * o2;
          i2 = ((c2 = o2 * c2 + ((32767 & h2) << 15) + r2.data[n2] + (1073741823 & i2)) >>> 30) + (h2 >>> 15) + a2 * u2 + (i2 >>> 30), r2.data[n2++] = 1073741823 & c2;
        }
        return i2;
      }, n = 30) : navigator.appName != "Netscape" ? (s.prototype.am = function(e2, t2, r2, n2, i2, s2) {
        for (; --s2 >= 0; ) {
          var o2 = t2 * this.data[e2++] + r2.data[n2] + i2;
          i2 = Math.floor(o2 / 67108864), r2.data[n2++] = 67108863 & o2;
        }
        return i2;
      }, n = 26) : (s.prototype.am = a, n = 28), s.prototype.DB = n, s.prototype.DM = (1 << n) - 1, s.prototype.DV = 1 << n;
      s.prototype.FV = Math.pow(2, 52), s.prototype.F1 = 52 - n, s.prototype.F2 = 2 * n - 52;
      var c, u, h = new Array();
      for (c = "0".charCodeAt(0), u = 0; u <= 9; ++u)
        h[c++] = u;
      for (c = "a".charCodeAt(0), u = 10; u < 36; ++u)
        h[c++] = u;
      for (c = "A".charCodeAt(0), u = 10; u < 36; ++u)
        h[c++] = u;
      function f(e2) {
        return "0123456789abcdefghijklmnopqrstuvwxyz".charAt(e2);
      }
      function d(e2, t2) {
        var r2 = h[e2.charCodeAt(t2)];
        return r2 == null ? -1 : r2;
      }
      function l(e2) {
        var t2 = o();
        return t2.fromInt(e2), t2;
      }
      function p(e2) {
        var t2, r2 = 1;
        return (t2 = e2 >>> 16) != 0 && (e2 = t2, r2 += 16), (t2 = e2 >> 8) != 0 && (e2 = t2, r2 += 8), (t2 = e2 >> 4) != 0 && (e2 = t2, r2 += 4), (t2 = e2 >> 2) != 0 && (e2 = t2, r2 += 2), (t2 = e2 >> 1) != 0 && (e2 = t2, r2 += 1), r2;
      }
      function y(e2) {
        this.m = e2;
      }
      function g(e2) {
        this.m = e2, this.mp = e2.invDigit(), this.mpl = 32767 & this.mp, this.mph = this.mp >> 15, this.um = (1 << e2.DB - 15) - 1, this.mt2 = 2 * e2.t;
      }
      function b(e2, t2) {
        return e2 & t2;
      }
      function m(e2, t2) {
        return e2 | t2;
      }
      function v(e2, t2) {
        return e2 ^ t2;
      }
      function w(e2, t2) {
        return e2 & ~t2;
      }
      function _(e2) {
        if (e2 == 0)
          return -1;
        var t2 = 0;
        return (65535 & e2) == 0 && (e2 >>= 16, t2 += 16), (255 & e2) == 0 && (e2 >>= 8, t2 += 8), (15 & e2) == 0 && (e2 >>= 4, t2 += 4), (3 & e2) == 0 && (e2 >>= 2, t2 += 2), (1 & e2) == 0 && ++t2, t2;
      }
      function E(e2) {
        for (var t2 = 0; e2 != 0; )
          e2 &= e2 - 1, ++t2;
        return t2;
      }
      function S() {
      }
      function A(e2) {
        return e2;
      }
      function I(e2) {
        this.r2 = o(), this.q3 = o(), s.ONE.dlShiftTo(2 * e2.t, this.r2), this.mu = this.r2.divide(e2), this.m = e2;
      }
      y.prototype.convert = function(e2) {
        return e2.s < 0 || e2.compareTo(this.m) >= 0 ? e2.mod(this.m) : e2;
      }, y.prototype.revert = function(e2) {
        return e2;
      }, y.prototype.reduce = function(e2) {
        e2.divRemTo(this.m, null, e2);
      }, y.prototype.mulTo = function(e2, t2, r2) {
        e2.multiplyTo(t2, r2), this.reduce(r2);
      }, y.prototype.sqrTo = function(e2, t2) {
        e2.squareTo(t2), this.reduce(t2);
      }, g.prototype.convert = function(e2) {
        var t2 = o();
        return e2.abs().dlShiftTo(this.m.t, t2), t2.divRemTo(this.m, null, t2), e2.s < 0 && t2.compareTo(s.ZERO) > 0 && this.m.subTo(t2, t2), t2;
      }, g.prototype.revert = function(e2) {
        var t2 = o();
        return e2.copyTo(t2), this.reduce(t2), t2;
      }, g.prototype.reduce = function(e2) {
        for (; e2.t <= this.mt2; )
          e2.data[e2.t++] = 0;
        for (var t2 = 0; t2 < this.m.t; ++t2) {
          var r2 = 32767 & e2.data[t2], n2 = r2 * this.mpl + ((r2 * this.mph + (e2.data[t2] >> 15) * this.mpl & this.um) << 15) & e2.DM;
          for (r2 = t2 + this.m.t, e2.data[r2] += this.m.am(0, n2, e2, t2, 0, this.m.t); e2.data[r2] >= e2.DV; )
            e2.data[r2] -= e2.DV, e2.data[++r2]++;
        }
        e2.clamp(), e2.drShiftTo(this.m.t, e2), e2.compareTo(this.m) >= 0 && e2.subTo(this.m, e2);
      }, g.prototype.mulTo = function(e2, t2, r2) {
        e2.multiplyTo(t2, r2), this.reduce(r2);
      }, g.prototype.sqrTo = function(e2, t2) {
        e2.squareTo(t2), this.reduce(t2);
      }, s.prototype.copyTo = function(e2) {
        for (var t2 = this.t - 1; t2 >= 0; --t2)
          e2.data[t2] = this.data[t2];
        e2.t = this.t, e2.s = this.s;
      }, s.prototype.fromInt = function(e2) {
        this.t = 1, this.s = e2 < 0 ? -1 : 0, e2 > 0 ? this.data[0] = e2 : e2 < -1 ? this.data[0] = e2 + this.DV : this.t = 0;
      }, s.prototype.fromString = function(e2, t2) {
        var r2;
        if (t2 == 16)
          r2 = 4;
        else if (t2 == 8)
          r2 = 3;
        else if (t2 == 256)
          r2 = 8;
        else if (t2 == 2)
          r2 = 1;
        else if (t2 == 32)
          r2 = 5;
        else {
          if (t2 != 4)
            return void this.fromRadix(e2, t2);
          r2 = 2;
        }
        this.t = 0, this.s = 0;
        for (var n2 = e2.length, i2 = false, o2 = 0; --n2 >= 0; ) {
          var a2 = r2 == 8 ? 255 & e2[n2] : d(e2, n2);
          a2 < 0 ? e2.charAt(n2) == "-" && (i2 = true) : (i2 = false, o2 == 0 ? this.data[this.t++] = a2 : o2 + r2 > this.DB ? (this.data[this.t - 1] |= (a2 & (1 << this.DB - o2) - 1) << o2, this.data[this.t++] = a2 >> this.DB - o2) : this.data[this.t - 1] |= a2 << o2, (o2 += r2) >= this.DB && (o2 -= this.DB));
        }
        r2 == 8 && (128 & e2[0]) != 0 && (this.s = -1, o2 > 0 && (this.data[this.t - 1] |= (1 << this.DB - o2) - 1 << o2)), this.clamp(), i2 && s.ZERO.subTo(this, this);
      }, s.prototype.clamp = function() {
        for (var e2 = this.s & this.DM; this.t > 0 && this.data[this.t - 1] == e2; )
          --this.t;
      }, s.prototype.dlShiftTo = function(e2, t2) {
        var r2;
        for (r2 = this.t - 1; r2 >= 0; --r2)
          t2.data[r2 + e2] = this.data[r2];
        for (r2 = e2 - 1; r2 >= 0; --r2)
          t2.data[r2] = 0;
        t2.t = this.t + e2, t2.s = this.s;
      }, s.prototype.drShiftTo = function(e2, t2) {
        for (var r2 = e2; r2 < this.t; ++r2)
          t2.data[r2 - e2] = this.data[r2];
        t2.t = Math.max(this.t - e2, 0), t2.s = this.s;
      }, s.prototype.lShiftTo = function(e2, t2) {
        var r2, n2 = e2 % this.DB, i2 = this.DB - n2, s2 = (1 << i2) - 1, o2 = Math.floor(e2 / this.DB), a2 = this.s << n2 & this.DM;
        for (r2 = this.t - 1; r2 >= 0; --r2)
          t2.data[r2 + o2 + 1] = this.data[r2] >> i2 | a2, a2 = (this.data[r2] & s2) << n2;
        for (r2 = o2 - 1; r2 >= 0; --r2)
          t2.data[r2] = 0;
        t2.data[o2] = a2, t2.t = this.t + o2 + 1, t2.s = this.s, t2.clamp();
      }, s.prototype.rShiftTo = function(e2, t2) {
        t2.s = this.s;
        var r2 = Math.floor(e2 / this.DB);
        if (r2 >= this.t)
          t2.t = 0;
        else {
          var n2 = e2 % this.DB, i2 = this.DB - n2, s2 = (1 << n2) - 1;
          t2.data[0] = this.data[r2] >> n2;
          for (var o2 = r2 + 1; o2 < this.t; ++o2)
            t2.data[o2 - r2 - 1] |= (this.data[o2] & s2) << i2, t2.data[o2 - r2] = this.data[o2] >> n2;
          n2 > 0 && (t2.data[this.t - r2 - 1] |= (this.s & s2) << i2), t2.t = this.t - r2, t2.clamp();
        }
      }, s.prototype.subTo = function(e2, t2) {
        for (var r2 = 0, n2 = 0, i2 = Math.min(e2.t, this.t); r2 < i2; )
          n2 += this.data[r2] - e2.data[r2], t2.data[r2++] = n2 & this.DM, n2 >>= this.DB;
        if (e2.t < this.t) {
          for (n2 -= e2.s; r2 < this.t; )
            n2 += this.data[r2], t2.data[r2++] = n2 & this.DM, n2 >>= this.DB;
          n2 += this.s;
        } else {
          for (n2 += this.s; r2 < e2.t; )
            n2 -= e2.data[r2], t2.data[r2++] = n2 & this.DM, n2 >>= this.DB;
          n2 -= e2.s;
        }
        t2.s = n2 < 0 ? -1 : 0, n2 < -1 ? t2.data[r2++] = this.DV + n2 : n2 > 0 && (t2.data[r2++] = n2), t2.t = r2, t2.clamp();
      }, s.prototype.multiplyTo = function(e2, t2) {
        var r2 = this.abs(), n2 = e2.abs(), i2 = r2.t;
        for (t2.t = i2 + n2.t; --i2 >= 0; )
          t2.data[i2] = 0;
        for (i2 = 0; i2 < n2.t; ++i2)
          t2.data[i2 + r2.t] = r2.am(0, n2.data[i2], t2, i2, 0, r2.t);
        t2.s = 0, t2.clamp(), this.s != e2.s && s.ZERO.subTo(t2, t2);
      }, s.prototype.squareTo = function(e2) {
        for (var t2 = this.abs(), r2 = e2.t = 2 * t2.t; --r2 >= 0; )
          e2.data[r2] = 0;
        for (r2 = 0; r2 < t2.t - 1; ++r2) {
          var n2 = t2.am(r2, t2.data[r2], e2, 2 * r2, 0, 1);
          (e2.data[r2 + t2.t] += t2.am(r2 + 1, 2 * t2.data[r2], e2, 2 * r2 + 1, n2, t2.t - r2 - 1)) >= t2.DV && (e2.data[r2 + t2.t] -= t2.DV, e2.data[r2 + t2.t + 1] = 1);
        }
        e2.t > 0 && (e2.data[e2.t - 1] += t2.am(r2, t2.data[r2], e2, 2 * r2, 0, 1)), e2.s = 0, e2.clamp();
      }, s.prototype.divRemTo = function(e2, t2, r2) {
        var n2 = e2.abs();
        if (!(n2.t <= 0)) {
          var i2 = this.abs();
          if (i2.t < n2.t)
            return t2 != null && t2.fromInt(0), void (r2 != null && this.copyTo(r2));
          r2 == null && (r2 = o());
          var a2 = o(), c2 = this.s, u2 = e2.s, h2 = this.DB - p(n2.data[n2.t - 1]);
          h2 > 0 ? (n2.lShiftTo(h2, a2), i2.lShiftTo(h2, r2)) : (n2.copyTo(a2), i2.copyTo(r2));
          var f2 = a2.t, d2 = a2.data[f2 - 1];
          if (d2 != 0) {
            var l2 = d2 * (1 << this.F1) + (f2 > 1 ? a2.data[f2 - 2] >> this.F2 : 0), y2 = this.FV / l2, g2 = (1 << this.F1) / l2, b2 = 1 << this.F2, m2 = r2.t, v2 = m2 - f2, w2 = t2 == null ? o() : t2;
            for (a2.dlShiftTo(v2, w2), r2.compareTo(w2) >= 0 && (r2.data[r2.t++] = 1, r2.subTo(w2, r2)), s.ONE.dlShiftTo(f2, w2), w2.subTo(a2, a2); a2.t < f2; )
              a2.data[a2.t++] = 0;
            for (; --v2 >= 0; ) {
              var _2 = r2.data[--m2] == d2 ? this.DM : Math.floor(r2.data[m2] * y2 + (r2.data[m2 - 1] + b2) * g2);
              if ((r2.data[m2] += a2.am(0, _2, r2, v2, 0, f2)) < _2)
                for (a2.dlShiftTo(v2, w2), r2.subTo(w2, r2); r2.data[m2] < --_2; )
                  r2.subTo(w2, r2);
            }
            t2 != null && (r2.drShiftTo(f2, t2), c2 != u2 && s.ZERO.subTo(t2, t2)), r2.t = f2, r2.clamp(), h2 > 0 && r2.rShiftTo(h2, r2), c2 < 0 && s.ZERO.subTo(r2, r2);
          }
        }
      }, s.prototype.invDigit = function() {
        if (this.t < 1)
          return 0;
        var e2 = this.data[0];
        if ((1 & e2) == 0)
          return 0;
        var t2 = 3 & e2;
        return (t2 = (t2 = (t2 = (t2 = t2 * (2 - (15 & e2) * t2) & 15) * (2 - (255 & e2) * t2) & 255) * (2 - ((65535 & e2) * t2 & 65535)) & 65535) * (2 - e2 * t2 % this.DV) % this.DV) > 0 ? this.DV - t2 : -t2;
      }, s.prototype.isEven = function() {
        return (this.t > 0 ? 1 & this.data[0] : this.s) == 0;
      }, s.prototype.exp = function(e2, t2) {
        if (e2 > 4294967295 || e2 < 1)
          return s.ONE;
        var r2 = o(), n2 = o(), i2 = t2.convert(this), a2 = p(e2) - 1;
        for (i2.copyTo(r2); --a2 >= 0; )
          if (t2.sqrTo(r2, n2), (e2 & 1 << a2) > 0)
            t2.mulTo(n2, i2, r2);
          else {
            var c2 = r2;
            r2 = n2, n2 = c2;
          }
        return t2.revert(r2);
      }, s.prototype.toString = function(e2) {
        if (this.s < 0)
          return "-" + this.negate().toString(e2);
        var t2;
        if (e2 == 16)
          t2 = 4;
        else if (e2 == 8)
          t2 = 3;
        else if (e2 == 2)
          t2 = 1;
        else if (e2 == 32)
          t2 = 5;
        else {
          if (e2 != 4)
            return this.toRadix(e2);
          t2 = 2;
        }
        var r2, n2 = (1 << t2) - 1, i2 = false, s2 = "", o2 = this.t, a2 = this.DB - o2 * this.DB % t2;
        if (o2-- > 0)
          for (a2 < this.DB && (r2 = this.data[o2] >> a2) > 0 && (i2 = true, s2 = f(r2)); o2 >= 0; )
            a2 < t2 ? (r2 = (this.data[o2] & (1 << a2) - 1) << t2 - a2, r2 |= this.data[--o2] >> (a2 += this.DB - t2)) : (r2 = this.data[o2] >> (a2 -= t2) & n2, a2 <= 0 && (a2 += this.DB, --o2)), r2 > 0 && (i2 = true), i2 && (s2 += f(r2));
        return i2 ? s2 : "0";
      }, s.prototype.negate = function() {
        var e2 = o();
        return s.ZERO.subTo(this, e2), e2;
      }, s.prototype.abs = function() {
        return this.s < 0 ? this.negate() : this;
      }, s.prototype.compareTo = function(e2) {
        var t2 = this.s - e2.s;
        if (t2 != 0)
          return t2;
        var r2 = this.t;
        if ((t2 = r2 - e2.t) != 0)
          return this.s < 0 ? -t2 : t2;
        for (; --r2 >= 0; )
          if ((t2 = this.data[r2] - e2.data[r2]) != 0)
            return t2;
        return 0;
      }, s.prototype.bitLength = function() {
        return this.t <= 0 ? 0 : this.DB * (this.t - 1) + p(this.data[this.t - 1] ^ this.s & this.DM);
      }, s.prototype.mod = function(e2) {
        var t2 = o();
        return this.abs().divRemTo(e2, null, t2), this.s < 0 && t2.compareTo(s.ZERO) > 0 && e2.subTo(t2, t2), t2;
      }, s.prototype.modPowInt = function(e2, t2) {
        var r2;
        return r2 = e2 < 256 || t2.isEven() ? new y(t2) : new g(t2), this.exp(e2, r2);
      }, s.ZERO = l(0), s.ONE = l(1), S.prototype.convert = A, S.prototype.revert = A, S.prototype.mulTo = function(e2, t2, r2) {
        e2.multiplyTo(t2, r2);
      }, S.prototype.sqrTo = function(e2, t2) {
        e2.squareTo(t2);
      }, I.prototype.convert = function(e2) {
        if (e2.s < 0 || e2.t > 2 * this.m.t)
          return e2.mod(this.m);
        if (e2.compareTo(this.m) < 0)
          return e2;
        var t2 = o();
        return e2.copyTo(t2), this.reduce(t2), t2;
      }, I.prototype.revert = function(e2) {
        return e2;
      }, I.prototype.reduce = function(e2) {
        for (e2.drShiftTo(this.m.t - 1, this.r2), e2.t > this.m.t + 1 && (e2.t = this.m.t + 1, e2.clamp()), this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3), this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2); e2.compareTo(this.r2) < 0; )
          e2.dAddOffset(1, this.m.t + 1);
        for (e2.subTo(this.r2, e2); e2.compareTo(this.m) >= 0; )
          e2.subTo(this.m, e2);
      }, I.prototype.mulTo = function(e2, t2, r2) {
        e2.multiplyTo(t2, r2), this.reduce(r2);
      }, I.prototype.sqrTo = function(e2, t2) {
        e2.squareTo(t2), this.reduce(t2);
      };
      var k = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509], R = (1 << 26) / k[k.length - 1];
      s.prototype.chunkSize = function(e2) {
        return Math.floor(Math.LN2 * this.DB / Math.log(e2));
      }, s.prototype.toRadix = function(e2) {
        if (e2 == null && (e2 = 10), this.signum() == 0 || e2 < 2 || e2 > 36)
          return "0";
        var t2 = this.chunkSize(e2), r2 = Math.pow(e2, t2), n2 = l(r2), i2 = o(), s2 = o(), a2 = "";
        for (this.divRemTo(n2, i2, s2); i2.signum() > 0; )
          a2 = (r2 + s2.intValue()).toString(e2).substr(1) + a2, i2.divRemTo(n2, i2, s2);
        return s2.intValue().toString(e2) + a2;
      }, s.prototype.fromRadix = function(e2, t2) {
        this.fromInt(0), t2 == null && (t2 = 10);
        for (var r2 = this.chunkSize(t2), n2 = Math.pow(t2, r2), i2 = false, o2 = 0, a2 = 0, c2 = 0; c2 < e2.length; ++c2) {
          var u2 = d(e2, c2);
          u2 < 0 ? e2.charAt(c2) == "-" && this.signum() == 0 && (i2 = true) : (a2 = t2 * a2 + u2, ++o2 >= r2 && (this.dMultiply(n2), this.dAddOffset(a2, 0), o2 = 0, a2 = 0));
        }
        o2 > 0 && (this.dMultiply(Math.pow(t2, o2)), this.dAddOffset(a2, 0)), i2 && s.ZERO.subTo(this, this);
      }, s.prototype.fromNumber = function(e2, t2, r2) {
        if (typeof t2 == "number")
          if (e2 < 2)
            this.fromInt(1);
          else
            for (this.fromNumber(e2, r2), this.testBit(e2 - 1) || this.bitwiseTo(s.ONE.shiftLeft(e2 - 1), m, this), this.isEven() && this.dAddOffset(1, 0); !this.isProbablePrime(t2); )
              this.dAddOffset(2, 0), this.bitLength() > e2 && this.subTo(s.ONE.shiftLeft(e2 - 1), this);
        else {
          var n2 = new Array(), i2 = 7 & e2;
          n2.length = 1 + (e2 >> 3), t2.nextBytes(n2), i2 > 0 ? n2[0] &= (1 << i2) - 1 : n2[0] = 0, this.fromString(n2, 256);
        }
      }, s.prototype.bitwiseTo = function(e2, t2, r2) {
        var n2, i2, s2 = Math.min(e2.t, this.t);
        for (n2 = 0; n2 < s2; ++n2)
          r2.data[n2] = t2(this.data[n2], e2.data[n2]);
        if (e2.t < this.t) {
          for (i2 = e2.s & this.DM, n2 = s2; n2 < this.t; ++n2)
            r2.data[n2] = t2(this.data[n2], i2);
          r2.t = this.t;
        } else {
          for (i2 = this.s & this.DM, n2 = s2; n2 < e2.t; ++n2)
            r2.data[n2] = t2(i2, e2.data[n2]);
          r2.t = e2.t;
        }
        r2.s = t2(this.s, e2.s), r2.clamp();
      }, s.prototype.changeBit = function(e2, t2) {
        var r2 = s.ONE.shiftLeft(e2);
        return this.bitwiseTo(r2, t2, r2), r2;
      }, s.prototype.addTo = function(e2, t2) {
        for (var r2 = 0, n2 = 0, i2 = Math.min(e2.t, this.t); r2 < i2; )
          n2 += this.data[r2] + e2.data[r2], t2.data[r2++] = n2 & this.DM, n2 >>= this.DB;
        if (e2.t < this.t) {
          for (n2 += e2.s; r2 < this.t; )
            n2 += this.data[r2], t2.data[r2++] = n2 & this.DM, n2 >>= this.DB;
          n2 += this.s;
        } else {
          for (n2 += this.s; r2 < e2.t; )
            n2 += e2.data[r2], t2.data[r2++] = n2 & this.DM, n2 >>= this.DB;
          n2 += e2.s;
        }
        t2.s = n2 < 0 ? -1 : 0, n2 > 0 ? t2.data[r2++] = n2 : n2 < -1 && (t2.data[r2++] = this.DV + n2), t2.t = r2, t2.clamp();
      }, s.prototype.dMultiply = function(e2) {
        this.data[this.t] = this.am(0, e2 - 1, this, 0, 0, this.t), ++this.t, this.clamp();
      }, s.prototype.dAddOffset = function(e2, t2) {
        if (e2 != 0) {
          for (; this.t <= t2; )
            this.data[this.t++] = 0;
          for (this.data[t2] += e2; this.data[t2] >= this.DV; )
            this.data[t2] -= this.DV, ++t2 >= this.t && (this.data[this.t++] = 0), ++this.data[t2];
        }
      }, s.prototype.multiplyLowerTo = function(e2, t2, r2) {
        var n2, i2 = Math.min(this.t + e2.t, t2);
        for (r2.s = 0, r2.t = i2; i2 > 0; )
          r2.data[--i2] = 0;
        for (n2 = r2.t - this.t; i2 < n2; ++i2)
          r2.data[i2 + this.t] = this.am(0, e2.data[i2], r2, i2, 0, this.t);
        for (n2 = Math.min(e2.t, t2); i2 < n2; ++i2)
          this.am(0, e2.data[i2], r2, i2, 0, t2 - i2);
        r2.clamp();
      }, s.prototype.multiplyUpperTo = function(e2, t2, r2) {
        --t2;
        var n2 = r2.t = this.t + e2.t - t2;
        for (r2.s = 0; --n2 >= 0; )
          r2.data[n2] = 0;
        for (n2 = Math.max(t2 - this.t, 0); n2 < e2.t; ++n2)
          r2.data[this.t + n2 - t2] = this.am(t2 - n2, e2.data[n2], r2, 0, 0, this.t + n2 - t2);
        r2.clamp(), r2.drShiftTo(1, r2);
      }, s.prototype.modInt = function(e2) {
        if (e2 <= 0)
          return 0;
        var t2 = this.DV % e2, r2 = this.s < 0 ? e2 - 1 : 0;
        if (this.t > 0)
          if (t2 == 0)
            r2 = this.data[0] % e2;
          else
            for (var n2 = this.t - 1; n2 >= 0; --n2)
              r2 = (t2 * r2 + this.data[n2]) % e2;
        return r2;
      }, s.prototype.millerRabin = function(e2) {
        var t2 = this.subtract(s.ONE), r2 = t2.getLowestSetBit();
        if (r2 <= 0)
          return false;
        for (var n2, i2 = t2.shiftRight(r2), o2 = {nextBytes: function(e3) {
          for (var t3 = 0; t3 < e3.length; ++t3)
            e3[t3] = Math.floor(256 * Math.random());
        }}, a2 = 0; a2 < e2; ++a2) {
          do {
            n2 = new s(this.bitLength(), o2);
          } while (n2.compareTo(s.ONE) <= 0 || n2.compareTo(t2) >= 0);
          var c2 = n2.modPow(i2, this);
          if (c2.compareTo(s.ONE) != 0 && c2.compareTo(t2) != 0) {
            for (var u2 = 1; u2++ < r2 && c2.compareTo(t2) != 0; )
              if ((c2 = c2.modPowInt(2, this)).compareTo(s.ONE) == 0)
                return false;
            if (c2.compareTo(t2) != 0)
              return false;
          }
        }
        return true;
      }, s.prototype.clone = function() {
        var e2 = o();
        return this.copyTo(e2), e2;
      }, s.prototype.intValue = function() {
        if (this.s < 0) {
          if (this.t == 1)
            return this.data[0] - this.DV;
          if (this.t == 0)
            return -1;
        } else {
          if (this.t == 1)
            return this.data[0];
          if (this.t == 0)
            return 0;
        }
        return (this.data[1] & (1 << 32 - this.DB) - 1) << this.DB | this.data[0];
      }, s.prototype.byteValue = function() {
        return this.t == 0 ? this.s : this.data[0] << 24 >> 24;
      }, s.prototype.shortValue = function() {
        return this.t == 0 ? this.s : this.data[0] << 16 >> 16;
      }, s.prototype.signum = function() {
        return this.s < 0 ? -1 : this.t <= 0 || this.t == 1 && this.data[0] <= 0 ? 0 : 1;
      }, s.prototype.toByteArray = function() {
        var e2 = this.t, t2 = new Array();
        t2[0] = this.s;
        var r2, n2 = this.DB - e2 * this.DB % 8, i2 = 0;
        if (e2-- > 0)
          for (n2 < this.DB && (r2 = this.data[e2] >> n2) != (this.s & this.DM) >> n2 && (t2[i2++] = r2 | this.s << this.DB - n2); e2 >= 0; )
            n2 < 8 ? (r2 = (this.data[e2] & (1 << n2) - 1) << 8 - n2, r2 |= this.data[--e2] >> (n2 += this.DB - 8)) : (r2 = this.data[e2] >> (n2 -= 8) & 255, n2 <= 0 && (n2 += this.DB, --e2)), (128 & r2) != 0 && (r2 |= -256), i2 == 0 && (128 & this.s) != (128 & r2) && ++i2, (i2 > 0 || r2 != this.s) && (t2[i2++] = r2);
        return t2;
      }, s.prototype.equals = function(e2) {
        return this.compareTo(e2) == 0;
      }, s.prototype.min = function(e2) {
        return this.compareTo(e2) < 0 ? this : e2;
      }, s.prototype.max = function(e2) {
        return this.compareTo(e2) > 0 ? this : e2;
      }, s.prototype.and = function(e2) {
        var t2 = o();
        return this.bitwiseTo(e2, b, t2), t2;
      }, s.prototype.or = function(e2) {
        var t2 = o();
        return this.bitwiseTo(e2, m, t2), t2;
      }, s.prototype.xor = function(e2) {
        var t2 = o();
        return this.bitwiseTo(e2, v, t2), t2;
      }, s.prototype.andNot = function(e2) {
        var t2 = o();
        return this.bitwiseTo(e2, w, t2), t2;
      }, s.prototype.not = function() {
        for (var e2 = o(), t2 = 0; t2 < this.t; ++t2)
          e2.data[t2] = this.DM & ~this.data[t2];
        return e2.t = this.t, e2.s = ~this.s, e2;
      }, s.prototype.shiftLeft = function(e2) {
        var t2 = o();
        return e2 < 0 ? this.rShiftTo(-e2, t2) : this.lShiftTo(e2, t2), t2;
      }, s.prototype.shiftRight = function(e2) {
        var t2 = o();
        return e2 < 0 ? this.lShiftTo(-e2, t2) : this.rShiftTo(e2, t2), t2;
      }, s.prototype.getLowestSetBit = function() {
        for (var e2 = 0; e2 < this.t; ++e2)
          if (this.data[e2] != 0)
            return e2 * this.DB + _(this.data[e2]);
        return this.s < 0 ? this.t * this.DB : -1;
      }, s.prototype.bitCount = function() {
        for (var e2 = 0, t2 = this.s & this.DM, r2 = 0; r2 < this.t; ++r2)
          e2 += E(this.data[r2] ^ t2);
        return e2;
      }, s.prototype.testBit = function(e2) {
        var t2 = Math.floor(e2 / this.DB);
        return t2 >= this.t ? this.s != 0 : (this.data[t2] & 1 << e2 % this.DB) != 0;
      }, s.prototype.setBit = function(e2) {
        return this.changeBit(e2, m);
      }, s.prototype.clearBit = function(e2) {
        return this.changeBit(e2, w);
      }, s.prototype.flipBit = function(e2) {
        return this.changeBit(e2, v);
      }, s.prototype.add = function(e2) {
        var t2 = o();
        return this.addTo(e2, t2), t2;
      }, s.prototype.subtract = function(e2) {
        var t2 = o();
        return this.subTo(e2, t2), t2;
      }, s.prototype.multiply = function(e2) {
        var t2 = o();
        return this.multiplyTo(e2, t2), t2;
      }, s.prototype.divide = function(e2) {
        var t2 = o();
        return this.divRemTo(e2, t2, null), t2;
      }, s.prototype.remainder = function(e2) {
        var t2 = o();
        return this.divRemTo(e2, null, t2), t2;
      }, s.prototype.divideAndRemainder = function(e2) {
        var t2 = o(), r2 = o();
        return this.divRemTo(e2, t2, r2), new Array(t2, r2);
      }, s.prototype.modPow = function(e2, t2) {
        var r2, n2, i2 = e2.bitLength(), s2 = l(1);
        if (i2 <= 0)
          return s2;
        r2 = i2 < 18 ? 1 : i2 < 48 ? 3 : i2 < 144 ? 4 : i2 < 768 ? 5 : 6, n2 = i2 < 8 ? new y(t2) : t2.isEven() ? new I(t2) : new g(t2);
        var a2 = new Array(), c2 = 3, u2 = r2 - 1, h2 = (1 << r2) - 1;
        if (a2[1] = n2.convert(this), r2 > 1) {
          var f2 = o();
          for (n2.sqrTo(a2[1], f2); c2 <= h2; )
            a2[c2] = o(), n2.mulTo(f2, a2[c2 - 2], a2[c2]), c2 += 2;
        }
        var d2, b2, m2 = e2.t - 1, v2 = true, w2 = o();
        for (i2 = p(e2.data[m2]) - 1; m2 >= 0; ) {
          for (i2 >= u2 ? d2 = e2.data[m2] >> i2 - u2 & h2 : (d2 = (e2.data[m2] & (1 << i2 + 1) - 1) << u2 - i2, m2 > 0 && (d2 |= e2.data[m2 - 1] >> this.DB + i2 - u2)), c2 = r2; (1 & d2) == 0; )
            d2 >>= 1, --c2;
          if ((i2 -= c2) < 0 && (i2 += this.DB, --m2), v2)
            a2[d2].copyTo(s2), v2 = false;
          else {
            for (; c2 > 1; )
              n2.sqrTo(s2, w2), n2.sqrTo(w2, s2), c2 -= 2;
            c2 > 0 ? n2.sqrTo(s2, w2) : (b2 = s2, s2 = w2, w2 = b2), n2.mulTo(w2, a2[d2], s2);
          }
          for (; m2 >= 0 && (e2.data[m2] & 1 << i2) == 0; )
            n2.sqrTo(s2, w2), b2 = s2, s2 = w2, w2 = b2, --i2 < 0 && (i2 = this.DB - 1, --m2);
        }
        return n2.revert(s2);
      }, s.prototype.modInverse = function(e2) {
        var t2 = e2.isEven();
        if (this.isEven() && t2 || e2.signum() == 0)
          return s.ZERO;
        for (var r2 = e2.clone(), n2 = this.clone(), i2 = l(1), o2 = l(0), a2 = l(0), c2 = l(1); r2.signum() != 0; ) {
          for (; r2.isEven(); )
            r2.rShiftTo(1, r2), t2 ? (i2.isEven() && o2.isEven() || (i2.addTo(this, i2), o2.subTo(e2, o2)), i2.rShiftTo(1, i2)) : o2.isEven() || o2.subTo(e2, o2), o2.rShiftTo(1, o2);
          for (; n2.isEven(); )
            n2.rShiftTo(1, n2), t2 ? (a2.isEven() && c2.isEven() || (a2.addTo(this, a2), c2.subTo(e2, c2)), a2.rShiftTo(1, a2)) : c2.isEven() || c2.subTo(e2, c2), c2.rShiftTo(1, c2);
          r2.compareTo(n2) >= 0 ? (r2.subTo(n2, r2), t2 && i2.subTo(a2, i2), o2.subTo(c2, o2)) : (n2.subTo(r2, n2), t2 && a2.subTo(i2, a2), c2.subTo(o2, c2));
        }
        return n2.compareTo(s.ONE) != 0 ? s.ZERO : c2.compareTo(e2) >= 0 ? c2.subtract(e2) : c2.signum() < 0 ? (c2.addTo(e2, c2), c2.signum() < 0 ? c2.add(e2) : c2) : c2;
      }, s.prototype.pow = function(e2) {
        return this.exp(e2, new S());
      }, s.prototype.gcd = function(e2) {
        var t2 = this.s < 0 ? this.negate() : this.clone(), r2 = e2.s < 0 ? e2.negate() : e2.clone();
        if (t2.compareTo(r2) < 0) {
          var n2 = t2;
          t2 = r2, r2 = n2;
        }
        var i2 = t2.getLowestSetBit(), s2 = r2.getLowestSetBit();
        if (s2 < 0)
          return t2;
        for (i2 < s2 && (s2 = i2), s2 > 0 && (t2.rShiftTo(s2, t2), r2.rShiftTo(s2, r2)); t2.signum() > 0; )
          (i2 = t2.getLowestSetBit()) > 0 && t2.rShiftTo(i2, t2), (i2 = r2.getLowestSetBit()) > 0 && r2.rShiftTo(i2, r2), t2.compareTo(r2) >= 0 ? (t2.subTo(r2, t2), t2.rShiftTo(1, t2)) : (r2.subTo(t2, r2), r2.rShiftTo(1, r2));
        return s2 > 0 && r2.lShiftTo(s2, r2), r2;
      }, s.prototype.isProbablePrime = function(e2) {
        var t2, r2 = this.abs();
        if (r2.t == 1 && r2.data[0] <= k[k.length - 1]) {
          for (t2 = 0; t2 < k.length; ++t2)
            if (r2.data[0] == k[t2])
              return true;
          return false;
        }
        if (r2.isEven())
          return false;
        for (t2 = 1; t2 < k.length; ) {
          for (var n2 = k[t2], i2 = t2 + 1; i2 < k.length && n2 < R; )
            n2 *= k[i2++];
          for (n2 = r2.modInt(n2); t2 < i2; )
            if (n2 % k[t2++] == 0)
              return false;
        }
        return r2.millerRabin(e2);
      };
    }, function(e, t, r) {
      "use strict";
      t.get = (e2 = self) => {
        const t2 = e2.crypto || e2.msCrypto;
        if (!t2 || !t2.subtle)
          throw Object.assign(new Error("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p-crypto/blob/master/README.md#web-crypto-api"), {code: "ERR_MISSING_WEB_CRYPTO"});
        return t2;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(455), i = r(0);
      e.exports = function(e2) {
        if (isNaN(e2) || e2 <= 0)
          throw i(new Error("random bytes length must be a Number bigger than 0"), "ERR_INVALID_LENGTH");
        return n(e2);
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2) {
        return e2.webpackPolyfill || (e2.deprecate = function() {
        }, e2.paths = [], e2.children || (e2.children = []), Object.defineProperty(e2, "loaded", {enumerable: true, get: function() {
          return e2.l;
        }}), Object.defineProperty(e2, "id", {enumerable: true, get: function() {
          return e2.i;
        }}), e2.webpackPolyfill = 1), e2;
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(38), i = r(32), s = i.getNAF, o = i.getJSF, a = i.assert;
      function c(e2, t2) {
        this.type = e2, this.p = new n(t2.p, 16), this.red = t2.prime ? n.red(t2.prime) : n.mont(this.p), this.zero = new n(0).toRed(this.red), this.one = new n(1).toRed(this.red), this.two = new n(2).toRed(this.red), this.n = t2.n && new n(t2.n, 16), this.g = t2.g && this.pointFromJSON(t2.g, t2.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
        var r2 = this.n && this.p.div(this.n);
        !r2 || r2.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = true, this.redN = this.n.toRed(this.red));
      }
      function u(e2, t2) {
        this.curve = e2, this.type = t2, this.precomputed = null;
      }
      e.exports = c, c.prototype.point = function() {
        throw new Error("Not implemented");
      }, c.prototype.validate = function() {
        throw new Error("Not implemented");
      }, c.prototype._fixedNafMul = function(e2, t2) {
        a(e2.precomputed);
        var r2 = e2._getDoubles(), n2 = s(t2, 1, this._bitLength), i2 = (1 << r2.step + 1) - (r2.step % 2 == 0 ? 2 : 1);
        i2 /= 3;
        for (var o2 = [], c2 = 0; c2 < n2.length; c2 += r2.step) {
          var u2 = 0;
          for (t2 = c2 + r2.step - 1; t2 >= c2; t2--)
            u2 = (u2 << 1) + n2[t2];
          o2.push(u2);
        }
        for (var h = this.jpoint(null, null, null), f = this.jpoint(null, null, null), d = i2; d > 0; d--) {
          for (c2 = 0; c2 < o2.length; c2++) {
            (u2 = o2[c2]) === d ? f = f.mixedAdd(r2.points[c2]) : u2 === -d && (f = f.mixedAdd(r2.points[c2].neg()));
          }
          h = h.add(f);
        }
        return h.toP();
      }, c.prototype._wnafMul = function(e2, t2) {
        var r2 = 4, n2 = e2._getNAFPoints(r2);
        r2 = n2.wnd;
        for (var i2 = n2.points, o2 = s(t2, r2, this._bitLength), c2 = this.jpoint(null, null, null), u2 = o2.length - 1; u2 >= 0; u2--) {
          for (t2 = 0; u2 >= 0 && o2[u2] === 0; u2--)
            t2++;
          if (u2 >= 0 && t2++, c2 = c2.dblp(t2), u2 < 0)
            break;
          var h = o2[u2];
          a(h !== 0), c2 = e2.type === "affine" ? h > 0 ? c2.mixedAdd(i2[h - 1 >> 1]) : c2.mixedAdd(i2[-h - 1 >> 1].neg()) : h > 0 ? c2.add(i2[h - 1 >> 1]) : c2.add(i2[-h - 1 >> 1].neg());
        }
        return e2.type === "affine" ? c2.toP() : c2;
      }, c.prototype._wnafMulAdd = function(e2, t2, r2, n2, i2) {
        for (var a2 = this._wnafT1, c2 = this._wnafT2, u2 = this._wnafT3, h = 0, f = 0; f < n2; f++) {
          var d = (I = t2[f])._getNAFPoints(e2);
          a2[f] = d.wnd, c2[f] = d.points;
        }
        for (f = n2 - 1; f >= 1; f -= 2) {
          var l = f - 1, p = f;
          if (a2[l] === 1 && a2[p] === 1) {
            var y = [t2[l], null, null, t2[p]];
            t2[l].y.cmp(t2[p].y) === 0 ? (y[1] = t2[l].add(t2[p]), y[2] = t2[l].toJ().mixedAdd(t2[p].neg())) : t2[l].y.cmp(t2[p].y.redNeg()) === 0 ? (y[1] = t2[l].toJ().mixedAdd(t2[p]), y[2] = t2[l].add(t2[p].neg())) : (y[1] = t2[l].toJ().mixedAdd(t2[p]), y[2] = t2[l].toJ().mixedAdd(t2[p].neg()));
            var g = [-3, -1, -5, -7, 0, 7, 5, 1, 3], b = o(r2[l], r2[p]);
            h = Math.max(b[0].length, h), u2[l] = new Array(h), u2[p] = new Array(h);
            for (var m = 0; m < h; m++) {
              var v = 0 | b[0][m], w = 0 | b[1][m];
              u2[l][m] = g[3 * (v + 1) + (w + 1)], u2[p][m] = 0, c2[l] = y;
            }
          } else
            u2[l] = s(r2[l], a2[l], this._bitLength), u2[p] = s(r2[p], a2[p], this._bitLength), h = Math.max(u2[l].length, h), h = Math.max(u2[p].length, h);
        }
        var _ = this.jpoint(null, null, null), E = this._wnafT4;
        for (f = h; f >= 0; f--) {
          for (var S = 0; f >= 0; ) {
            var A = true;
            for (m = 0; m < n2; m++)
              E[m] = 0 | u2[m][f], E[m] !== 0 && (A = false);
            if (!A)
              break;
            S++, f--;
          }
          if (f >= 0 && S++, _ = _.dblp(S), f < 0)
            break;
          for (m = 0; m < n2; m++) {
            var I, k = E[m];
            k !== 0 && (k > 0 ? I = c2[m][k - 1 >> 1] : k < 0 && (I = c2[m][-k - 1 >> 1].neg()), _ = I.type === "affine" ? _.mixedAdd(I) : _.add(I));
          }
        }
        for (f = 0; f < n2; f++)
          c2[f] = null;
        return i2 ? _ : _.toP();
      }, c.BasePoint = u, u.prototype.eq = function() {
        throw new Error("Not implemented");
      }, u.prototype.validate = function() {
        return this.curve.validate(this);
      }, c.prototype.decodePoint = function(e2, t2) {
        e2 = i.toArray(e2, t2);
        var r2 = this.p.byteLength();
        if ((e2[0] === 4 || e2[0] === 6 || e2[0] === 7) && e2.length - 1 == 2 * r2)
          return e2[0] === 6 ? a(e2[e2.length - 1] % 2 == 0) : e2[0] === 7 && a(e2[e2.length - 1] % 2 == 1), this.point(e2.slice(1, 1 + r2), e2.slice(1 + r2, 1 + 2 * r2));
        if ((e2[0] === 2 || e2[0] === 3) && e2.length - 1 === r2)
          return this.pointFromX(e2.slice(1, 1 + r2), e2[0] === 3);
        throw new Error("Unknown point format");
      }, u.prototype.encodeCompressed = function(e2) {
        return this.encode(e2, true);
      }, u.prototype._encode = function(e2) {
        var t2 = this.curve.p.byteLength(), r2 = this.getX().toArray("be", t2);
        return e2 ? [this.getY().isEven() ? 2 : 3].concat(r2) : [4].concat(r2, this.getY().toArray("be", t2));
      }, u.prototype.encode = function(e2, t2) {
        return i.encode(this._encode(t2), e2);
      }, u.prototype.precompute = function(e2) {
        if (this.precomputed)
          return this;
        var t2 = {doubles: null, naf: null, beta: null};
        return t2.naf = this._getNAFPoints(8), t2.doubles = this._getDoubles(4, e2), t2.beta = this._getBeta(), this.precomputed = t2, this;
      }, u.prototype._hasDoubles = function(e2) {
        if (!this.precomputed)
          return false;
        var t2 = this.precomputed.doubles;
        return !!t2 && t2.points.length >= Math.ceil((e2.bitLength() + 1) / t2.step);
      }, u.prototype._getDoubles = function(e2, t2) {
        if (this.precomputed && this.precomputed.doubles)
          return this.precomputed.doubles;
        for (var r2 = [this], n2 = this, i2 = 0; i2 < t2; i2 += e2) {
          for (var s2 = 0; s2 < e2; s2++)
            n2 = n2.dbl();
          r2.push(n2);
        }
        return {step: e2, points: r2};
      }, u.prototype._getNAFPoints = function(e2) {
        if (this.precomputed && this.precomputed.naf)
          return this.precomputed.naf;
        for (var t2 = [this], r2 = (1 << e2) - 1, n2 = r2 === 1 ? null : this.dbl(), i2 = 1; i2 < r2; i2++)
          t2[i2] = t2[i2 - 1].add(n2);
        return {wnd: e2, points: t2};
      }, u.prototype._getBeta = function() {
        return null;
      }, u.prototype.dblp = function(e2) {
        for (var t2 = this, r2 = 0; r2 < e2; r2++)
          t2 = t2.dbl();
        return t2;
      };
    }, function(e, t, r) {
      "use strict";
      function n(e2) {
        if (typeof e2 == "number") {
          if (n.codes[e2])
            return n.codes[e2];
          throw new Error("no protocol with code: " + e2);
        }
        if (typeof e2 == "string" || e2 instanceof String) {
          if (n.names[e2])
            return n.names[e2];
          throw new Error("no protocol with name: " + e2);
        }
        throw new Error("invalid protocol id type: " + e2);
      }
      const i = -1;
      function s(e2, t2, r2, n2, i2) {
        return {code: e2, size: t2, name: r2, resolvable: Boolean(n2), path: Boolean(i2)};
      }
      n.lengthPrefixedVarSize = i, n.V = i, n.table = [[4, 32, "ip4"], [6, 16, "tcp"], [33, 16, "dccp"], [41, 128, "ip6"], [42, i, "ip6zone"], [53, i, "dns", "resolvable"], [54, i, "dns4", "resolvable"], [55, i, "dns6", "resolvable"], [56, i, "dnsaddr", "resolvable"], [132, 16, "sctp"], [273, 16, "udp"], [275, 0, "p2p-webrtc-star"], [276, 0, "p2p-webrtc-direct"], [277, 0, "p2p-stardust"], [290, 0, "p2p-circuit"], [301, 0, "udt"], [302, 0, "utp"], [400, i, "unix", false, "path"], [421, i, "ipfs"], [421, i, "p2p"], [443, 0, "https"], [444, 96, "onion"], [445, 296, "onion3"], [446, i, "garlic64"], [460, 0, "quic"], [477, 0, "ws"], [478, 0, "wss"], [479, 0, "p2p-websocket-star"], [480, 0, "http"], [777, i, "memory"]], n.names = {}, n.codes = {}, n.table.map((e2) => {
        const t2 = s.apply(null, e2);
        n.codes[t2.code] = t2, n.names[t2.name] = t2;
      }), n.object = s, e.exports = n;
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(0);
      e.exports = (e2) => {
        if (e2 instanceof Uint8Array)
          try {
            e2 = new n(e2);
          } catch (o) {
            throw i(o, "ERR_INVALID_CID");
          }
        if (n.isCID(e2))
          return {cid: e2, path: void 0};
        e2.startsWith("/ipfs/") && (e2 = e2.substring("/ipfs/".length));
        const t2 = e2.split("/");
        let r2, s;
        try {
          r2 = new n(t2.shift());
        } catch (o) {
          throw i(o, "ERR_INVALID_CID");
        }
        return t2.length && (s = "/" + t2.join("/")), {cid: r2, path: s};
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2) {
        if (!e2)
          throw Error("hashlru must have a max value, of type number, greater than 0");
        var t2 = 0, r2 = Object.create(null), n = Object.create(null);
        function i(i2, s) {
          r2[i2] = s, ++t2 >= e2 && (t2 = 0, n = r2, r2 = Object.create(null));
        }
        return {has: function(e3) {
          return r2[e3] !== void 0 || n[e3] !== void 0;
        }, remove: function(e3) {
          r2[e3] !== void 0 && (r2[e3] = void 0), n[e3] !== void 0 && (n[e3] = void 0);
        }, get: function(e3) {
          var t3 = r2[e3];
          return t3 !== void 0 ? t3 : (t3 = n[e3]) !== void 0 ? (i(e3, t3), t3) : void 0;
        }, set: function(e3, t3) {
          r2[e3] !== void 0 ? r2[e3] = t3 : i(e3, t3);
        }, clear: function() {
          r2 = Object.create(null), n = Object.create(null);
        }};
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(29).BigNumber;
      t.MT = {POS_INT: 0, NEG_INT: 1, BYTE_STRING: 2, UTF8_STRING: 3, ARRAY: 4, MAP: 5, TAG: 6, SIMPLE_FLOAT: 7}, t.TAG = {DATE_STRING: 0, DATE_EPOCH: 1, POS_BIGINT: 2, NEG_BIGINT: 3, DECIMAL_FRAC: 4, BIGFLOAT: 5, BASE64URL_EXPECTED: 21, BASE64_EXPECTED: 22, BASE16_EXPECTED: 23, CBOR: 24, URI: 32, BASE64URL: 33, BASE64: 34, REGEXP: 35, MIME: 36}, t.NUMBYTES = {ZERO: 0, ONE: 24, TWO: 25, FOUR: 26, EIGHT: 27, INDEFINITE: 31}, t.SIMPLE = {FALSE: 20, TRUE: 21, NULL: 22, UNDEFINED: 23}, t.SYMS = {NULL: Symbol("null"), UNDEFINED: Symbol("undef"), PARENT: Symbol("parent"), BREAK: Symbol("break"), STREAM: Symbol("stream")}, t.SHIFT32 = Math.pow(2, 32), t.SHIFT16 = Math.pow(2, 16), t.MAX_SAFE_HIGH = 2097151, t.NEG_ONE = new n(-1), t.TEN = new n(10), t.TWO = new n(2), t.PARENT = {ARRAY: 0, OBJECT: 1, MAP: 2, TAG: 3, BYTE_STRING: 4, UTF8_STRING: 5};
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        t2 === void 0 || !t2.version || t2.version.indexOf("v0.") === 0 || t2.version.indexOf("v1.") === 0 && t2.version.indexOf("v1.8.") !== 0 ? e.exports = {nextTick: function(e2, r2, n, i) {
          if (typeof e2 != "function")
            throw new TypeError('"callback" argument must be a function');
          var s, o, a = arguments.length;
          switch (a) {
            case 0:
            case 1:
              return t2.nextTick(e2);
            case 2:
              return t2.nextTick(function() {
                e2.call(null, r2);
              });
            case 3:
              return t2.nextTick(function() {
                e2.call(null, r2, n);
              });
            case 4:
              return t2.nextTick(function() {
                e2.call(null, r2, n, i);
              });
            default:
              for (s = new Array(a - 1), o = 0; o < s.length; )
                s[o++] = arguments[o];
              return t2.nextTick(function() {
                e2.apply(null, s);
              });
          }
        }} : e.exports = t2;
      }).call(this, r(10));
    }, function(e, t, r) {
      "use strict";
      var n = r(560).Buffer, i = n.isEncoding || function(e2) {
        switch ((e2 = "" + e2) && e2.toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
          case "raw":
            return true;
          default:
            return false;
        }
      };
      function s(e2) {
        var t2;
        switch (this.encoding = function(e3) {
          var t3 = function(e4) {
            if (!e4)
              return "utf8";
            for (var t4; ; )
              switch (e4) {
                case "utf8":
                case "utf-8":
                  return "utf8";
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return "utf16le";
                case "latin1":
                case "binary":
                  return "latin1";
                case "base64":
                case "ascii":
                case "hex":
                  return e4;
                default:
                  if (t4)
                    return;
                  e4 = ("" + e4).toLowerCase(), t4 = true;
              }
          }(e3);
          if (typeof t3 != "string" && (n.isEncoding === i || !i(e3)))
            throw new Error("Unknown encoding: " + e3);
          return t3 || e3;
        }(e2), this.encoding) {
          case "utf16le":
            this.text = c, this.end = u, t2 = 4;
            break;
          case "utf8":
            this.fillLast = a, t2 = 4;
            break;
          case "base64":
            this.text = h, this.end = f, t2 = 3;
            break;
          default:
            return this.write = d, void (this.end = l);
        }
        this.lastNeed = 0, this.lastTotal = 0, this.lastChar = n.allocUnsafe(t2);
      }
      function o(e2) {
        return e2 <= 127 ? 0 : e2 >> 5 == 6 ? 2 : e2 >> 4 == 14 ? 3 : e2 >> 3 == 30 ? 4 : e2 >> 6 == 2 ? -1 : -2;
      }
      function a(e2) {
        var t2 = this.lastTotal - this.lastNeed, r2 = function(e3, t3, r3) {
          if ((192 & t3[0]) != 128)
            return e3.lastNeed = 0, "\uFFFD";
          if (e3.lastNeed > 1 && t3.length > 1) {
            if ((192 & t3[1]) != 128)
              return e3.lastNeed = 1, "\uFFFD";
            if (e3.lastNeed > 2 && t3.length > 2 && (192 & t3[2]) != 128)
              return e3.lastNeed = 2, "\uFFFD";
          }
        }(this, e2);
        return r2 !== void 0 ? r2 : this.lastNeed <= e2.length ? (e2.copy(this.lastChar, t2, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (e2.copy(this.lastChar, t2, 0, e2.length), void (this.lastNeed -= e2.length));
      }
      function c(e2, t2) {
        if ((e2.length - t2) % 2 == 0) {
          var r2 = e2.toString("utf16le", t2);
          if (r2) {
            var n2 = r2.charCodeAt(r2.length - 1);
            if (n2 >= 55296 && n2 <= 56319)
              return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = e2[e2.length - 2], this.lastChar[1] = e2[e2.length - 1], r2.slice(0, -1);
          }
          return r2;
        }
        return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = e2[e2.length - 1], e2.toString("utf16le", t2, e2.length - 1);
      }
      function u(e2) {
        var t2 = e2 && e2.length ? this.write(e2) : "";
        if (this.lastNeed) {
          var r2 = this.lastTotal - this.lastNeed;
          return t2 + this.lastChar.toString("utf16le", 0, r2);
        }
        return t2;
      }
      function h(e2, t2) {
        var r2 = (e2.length - t2) % 3;
        return r2 === 0 ? e2.toString("base64", t2) : (this.lastNeed = 3 - r2, this.lastTotal = 3, r2 === 1 ? this.lastChar[0] = e2[e2.length - 1] : (this.lastChar[0] = e2[e2.length - 2], this.lastChar[1] = e2[e2.length - 1]), e2.toString("base64", t2, e2.length - r2));
      }
      function f(e2) {
        var t2 = e2 && e2.length ? this.write(e2) : "";
        return this.lastNeed ? t2 + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : t2;
      }
      function d(e2) {
        return e2.toString(this.encoding);
      }
      function l(e2) {
        return e2 && e2.length ? this.write(e2) : "";
      }
      t.StringDecoder = s, s.prototype.write = function(e2) {
        if (e2.length === 0)
          return "";
        var t2, r2;
        if (this.lastNeed) {
          if ((t2 = this.fillLast(e2)) === void 0)
            return "";
          r2 = this.lastNeed, this.lastNeed = 0;
        } else
          r2 = 0;
        return r2 < e2.length ? t2 ? t2 + this.text(e2, r2) : this.text(e2, r2) : t2 || "";
      }, s.prototype.end = function(e2) {
        var t2 = e2 && e2.length ? this.write(e2) : "";
        return this.lastNeed ? t2 + "\uFFFD" : t2;
      }, s.prototype.text = function(e2, t2) {
        var r2 = function(e3, t3, r3) {
          var n3 = t3.length - 1;
          if (n3 < r3)
            return 0;
          var i2 = o(t3[n3]);
          if (i2 >= 0)
            return i2 > 0 && (e3.lastNeed = i2 - 1), i2;
          if (--n3 < r3 || i2 === -2)
            return 0;
          if ((i2 = o(t3[n3])) >= 0)
            return i2 > 0 && (e3.lastNeed = i2 - 2), i2;
          if (--n3 < r3 || i2 === -2)
            return 0;
          if ((i2 = o(t3[n3])) >= 0)
            return i2 > 0 && (i2 === 2 ? i2 = 0 : e3.lastNeed = i2 - 3), i2;
          return 0;
        }(this, e2, t2);
        if (!this.lastNeed)
          return e2.toString("utf8", t2);
        this.lastTotal = r2;
        var n2 = e2.length - (r2 - this.lastNeed);
        return e2.copy(this.lastChar, 0, n2), e2.toString("utf8", t2, n2);
      }, s.prototype.fillLast = function(e2) {
        if (this.lastNeed <= e2.length)
          return e2.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
        e2.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e2.length), this.lastNeed -= e2.length;
      };
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const n = r(63), i = r(568), s = r(158), o = r(86), a = r(65), c = r(29).BigNumber, u = r(87), h = r(54), f = h.MT, d = h.NUMBYTES, l = (h.SIMPLE, h.SYMS), p = a.bigIntize(h.BI), y = h.BN, g = Symbol("count"), b = (Symbol("pending_key"), Symbol("major type")), m = Symbol("error"), v = Symbol("not found");
        function w(e2, t3, r2) {
          const n2 = [];
          return n2[g] = r2, n2[l.PARENT] = e2, n2[b] = t3, n2;
        }
        function _(e2, t3) {
          const r2 = new u();
          return r2[g] = -1, r2[l.PARENT] = e2, r2[b] = t3, r2;
        }
        function E(e2) {
          return a.bufferToBigInt(e2);
        }
        function S(e2) {
          return p.MINUS_ONE - a.bufferToBigInt(e2);
        }
        class A extends i {
          constructor(e2) {
            const t3 = (e2 = e2 || {}).tags;
            delete e2.tags;
            const r2 = e2.max_depth != null ? e2.max_depth : -1;
            delete e2.max_depth;
            const n2 = !!a.hasBigInt && !!e2.bigint;
            delete e2.bigint, super(e2), this.running = true, this.max_depth = r2, this.tags = t3, n2 && (this.tags == null && (this.tags = {}), this.tags[2] == null && (this.tags[2] = E), this.tags[3] == null && (this.tags[3] = S));
          }
          static nullcheck(e2) {
            switch (e2) {
              case l.NULL:
                return null;
              case l.UNDEFINED:
                return;
              case v:
                throw new Error("Value not found");
              default:
                return e2;
            }
          }
          static decodeFirstSync(e2, t3) {
            let r2, i2 = {};
            switch (typeof (t3 = t3 || {encoding: "hex"})) {
              case "string":
                r2 = t3;
                break;
              case "object":
                i2 = a.extend({}, t3), r2 = i2.encoding, delete i2.encoding;
            }
            const s2 = new A(i2), o2 = e2 instanceof n.Readable ? e2 : new u(e2, r2 != null ? r2 : a.guessEncoding(e2)), c2 = s2._parse();
            let h2 = c2.next();
            for (; !h2.done; ) {
              const e3 = o2.read(h2.value);
              if (e3 == null || e3.length !== h2.value)
                throw new Error("Insufficient data");
              h2 = c2.next(e3);
            }
            const f2 = A.nullcheck(h2.value);
            if (o2.length > 0) {
              const e3 = o2.read(1);
              o2.unshift(e3);
              const t4 = new Error("Unexpected data: 0x" + e3[0].toString(16));
              throw t4.value = f2, t4;
            }
            return f2;
          }
          static decodeAllSync(e2, t3) {
            let r2, i2 = {};
            switch (typeof (t3 = t3 || {encoding: "hex"})) {
              case "string":
                r2 = t3;
                break;
              case "object":
                i2 = a.extend({}, t3), r2 = i2.encoding, delete i2.encoding;
            }
            const s2 = new A(i2), o2 = e2 instanceof n.Readable ? e2 : new u(e2, r2 != null ? r2 : a.guessEncoding(e2)), c2 = [];
            for (; o2.length > 0; ) {
              const e3 = s2._parse();
              let t4 = e3.next();
              for (; !t4.done; ) {
                const r3 = o2.read(t4.value);
                if (r3 == null || r3.length !== t4.value)
                  throw new Error("Insufficient data");
                t4 = e3.next(r3);
              }
              c2.push(A.nullcheck(t4.value));
            }
            return c2;
          }
          static decodeFirst(e2, t3, r2) {
            let n2 = {}, i2 = false, s2 = "hex";
            switch (typeof t3) {
              case "function":
                r2 = t3, s2 = a.guessEncoding(e2);
                break;
              case "string":
                s2 = t3;
                break;
              case "object":
                n2 = a.extend({}, t3), s2 = n2.encoding != null ? n2.encoding : a.guessEncoding(e2), delete n2.encoding, i2 = n2.required != null && n2.required, delete n2.required;
            }
            const o2 = new A(n2);
            let c2 = v;
            const u2 = new Promise((e3, t4) => {
              o2.on("data", (e4) => {
                c2 = A.nullcheck(e4), o2.close();
              }), o2.once("error", (e4) => (c2 !== v && (e4.value = c2), c2 = m, o2.close(), t4(e4))), o2.once("end", () => {
                switch (c2) {
                  case v:
                    return i2 ? t4(new Error("No CBOR found")) : e3(c2);
                  case m:
                    return;
                  default:
                    return e3(c2);
                }
              });
            });
            return typeof r2 == "function" && u2.then((e3) => r2(null, e3), r2), o2.end(e2, s2), u2;
          }
          static decodeAll(e2, t3, r2) {
            let n2 = {}, i2 = "hex";
            switch (typeof t3) {
              case "function":
                r2 = t3, i2 = a.guessEncoding(e2);
                break;
              case "string":
                i2 = t3;
                break;
              case "object":
                n2 = a.extend({}, t3), i2 = n2.encoding != null ? n2.encoding : a.guessEncoding(e2), delete n2.encoding;
            }
            const s2 = new A(n2), o2 = [];
            s2.on("data", (e3) => o2.push(A.nullcheck(e3)));
            const c2 = new Promise((e3, t4) => {
              s2.on("error", t4), s2.on("end", () => e3(o2));
            });
            return typeof r2 == "function" && c2.then((e3) => r2(null, e3), r2), s2.end(e2, i2), c2;
          }
          close() {
            this.running = false, this.__fresh = true;
          }
          *_parse() {
            let e2 = null, r2 = 0, n2 = null;
            for (; ; ) {
              if (this.max_depth >= 0 && r2 > this.max_depth)
                throw new Error("Maximum depth " + this.max_depth + " exceeded");
              const i2 = (yield 1)[0];
              if (!this.running)
                throw new Error("Unexpected data: 0x" + i2.toString(16));
              const h2 = i2 >> 5, p2 = 31 & i2, m2 = e2 != null ? e2[b] : void 0, v2 = e2 != null ? e2.length : void 0;
              switch (p2) {
                case d.ONE:
                  this.emit("more-bytes", h2, 1, m2, v2), n2 = (yield 1)[0];
                  break;
                case d.TWO:
                case d.FOUR:
                case d.EIGHT:
                  const e3 = 1 << p2 - 24;
                  this.emit("more-bytes", h2, e3, m2, v2);
                  const t3 = yield e3;
                  n2 = h2 === f.SIMPLE_FLOAT ? t3 : a.parseCBORint(p2, t3);
                  break;
                case 28:
                case 29:
                case 30:
                  throw this.running = false, new Error("Additional info not implemented: " + p2);
                case d.INDEFINITE:
                  switch (h2) {
                    case f.POS_INT:
                    case f.NEG_INT:
                    case f.TAG:
                      throw new Error("Invalid indefinite encoding for MT " + h2);
                  }
                  n2 = -1;
                  break;
                default:
                  n2 = p2;
              }
              switch (h2) {
                case f.POS_INT:
                  break;
                case f.NEG_INT:
                  n2 = n2 === Number.MAX_SAFE_INTEGER ? y.NEG_MAX : n2 instanceof c ? y.MINUS_ONE.minus(n2) : -1 - n2;
                  break;
                case f.BYTE_STRING:
                case f.UTF8_STRING:
                  switch (n2) {
                    case 0:
                      this.emit("start-string", h2, n2, m2, v2), n2 = h2 === f.BYTE_STRING ? t2.allocUnsafe(0) : "";
                      break;
                    case -1:
                      this.emit("start", h2, l.STREAM, m2, v2), e2 = _(e2, h2), r2++;
                      continue;
                    default:
                      this.emit("start-string", h2, n2, m2, v2), n2 = yield n2, h2 === f.UTF8_STRING && (n2 = a.utf8(n2));
                  }
                  break;
                case f.ARRAY:
                case f.MAP:
                  switch (n2) {
                    case 0:
                      n2 = h2 === f.MAP ? {} : [];
                      break;
                    case -1:
                      this.emit("start", h2, l.STREAM, m2, v2), e2 = w(e2, h2, -1), r2++;
                      continue;
                    default:
                      this.emit("start", h2, n2, m2, v2), e2 = w(e2, h2, n2 * (h2 - 3)), r2++;
                      continue;
                  }
                  break;
                case f.TAG:
                  this.emit("start", h2, n2, m2, v2), e2 = w(e2, h2, 1), e2.push(n2), r2++;
                  continue;
                case f.SIMPLE_FLOAT:
                  if (typeof n2 == "number") {
                    if (p2 === d.ONE && n2 < 32)
                      throw new Error("Invalid two-byte encoding of simple value " + n2);
                    const t3 = e2 != null;
                    n2 = o.decode(n2, t3, t3 && e2[g] < 0);
                  } else
                    n2 = a.parseCBORfloat(n2);
              }
              this.emit("value", n2, m2, v2, p2);
              let E2 = false;
              for (; e2 != null; ) {
                switch (false) {
                  case n2 !== l.BREAK:
                    e2[g] = 1;
                    break;
                  case !Array.isArray(e2):
                    e2.push(n2);
                    break;
                  case !(e2 instanceof u):
                    const t4 = e2[b];
                    if (t4 != null && t4 !== h2)
                      throw this.running = false, new Error("Invalid major type in indefinite encoding");
                    e2.write(n2);
                }
                if (--e2[g] != 0) {
                  E2 = true;
                  break;
                }
                if (--r2, delete e2[g], this.emit("stop", e2[b]), Array.isArray(e2))
                  switch (e2[b]) {
                    case f.ARRAY:
                      n2 = e2;
                      break;
                    case f.MAP:
                      let t4 = true;
                      if (e2.length % 2 != 0)
                        throw new Error("Invalid map length: " + e2.length);
                      for (let r3 = 0, n3 = e2.length; r3 < n3; r3 += 2)
                        if (typeof e2[r3] != "string") {
                          t4 = false;
                          break;
                        }
                      if (t4) {
                        n2 = {};
                        for (let t5 = 0, r3 = e2.length; t5 < r3; t5 += 2)
                          n2[e2[t5]] = e2[t5 + 1];
                      } else {
                        n2 = new Map();
                        for (let t5 = 0, r3 = e2.length; t5 < r3; t5 += 2)
                          n2.set(e2[t5], e2[t5 + 1]);
                      }
                      break;
                    case f.TAG:
                      n2 = new s(e2[0], e2[1]).convert(this.tags);
                  }
                else if (e2 instanceof u)
                  switch (e2[b]) {
                    case f.BYTE_STRING:
                      n2 = e2.slice();
                      break;
                    case f.UTF8_STRING:
                      n2 = e2.toString("utf-8");
                  }
                const t3 = e2;
                e2 = e2[l.PARENT], delete t3[l.PARENT], delete t3[b];
              }
              if (!E2)
                return n2;
            }
          }
        }
        A.NOT_FOUND = v, e.exports = A;
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      const {Adapter: n, utils: i} = r(9), s = i.map;
      e.exports = class extends n {
        constructor(e2, t2) {
          super(), this.child = e2, this.transform = t2;
        }
        open() {
          return this.child.open();
        }
        put(e2, t2, r2) {
          return this.child.put(this.transform.convert(e2), t2, r2);
        }
        get(e2, t2) {
          return this.child.get(this.transform.convert(e2), t2);
        }
        has(e2, t2) {
          return this.child.has(this.transform.convert(e2), t2);
        }
        delete(e2, t2) {
          return this.child.delete(this.transform.convert(e2), t2);
        }
        batch() {
          const e2 = this.child.batch();
          return {put: (t2, r2) => {
            e2.put(this.transform.convert(t2), r2);
          }, delete: (t2) => {
            e2.delete(this.transform.convert(t2));
          }, commit: (t2) => e2.commit(t2)};
        }
        query(e2, t2) {
          return s(this.child.query(e2, t2), (e3) => (e3.key = this.transform.invert(e3.key), e3));
        }
        close() {
          return this.child.close();
        }
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2, r2, n, i) {
        for (t2 = t2.split ? t2.split(".") : t2, n = 0; n < t2.length; n++)
          e2 = e2 ? e2[t2[n]] : i;
        return e2 === i ? r2 : e2;
      };
    }, function(e, t, r) {
      "use strict";
      var n, i, s, o = r(690), a = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-";
      function c() {
        s = false;
      }
      function u(e2) {
        if (e2) {
          if (e2 !== n) {
            if (e2.length !== a.length)
              throw new Error("Custom alphabet for shortid must be " + a.length + " unique characters. You submitted " + e2.length + " characters: " + e2);
            var t2 = e2.split("").filter(function(e3, t3, r2) {
              return t3 !== r2.lastIndexOf(e3);
            });
            if (t2.length)
              throw new Error("Custom alphabet for shortid must be " + a.length + " unique characters. These characters were not unique: " + t2.join(", "));
            n = e2, c();
          }
        } else
          n !== a && (n = a, c());
      }
      function h() {
        return s || (s = function() {
          n || u(a);
          for (var e2, t2 = n.split(""), r2 = [], i2 = o.nextValue(); t2.length > 0; )
            i2 = o.nextValue(), e2 = Math.floor(i2 * t2.length), r2.push(t2.splice(e2, 1)[0]);
          return r2.join("");
        }());
      }
      e.exports = {get: function() {
        return n || a;
      }, characters: function(e2) {
        return u(e2), n;
      }, seed: function(e2) {
        o.seed(e2), i !== e2 && (c(), i = e2);
      }, lookup: function(e2) {
        return h()[e2];
      }, shuffled: h};
    }, function(e, t, r) {
      "use strict";
      const n = r(23).bind({ignoreUndefined: true}), i = r(41), s = r(36), o = r(1)("ipfs:mfs:stat"), a = r(0), c = r(2), u = {withLocal: false, signal: void 0};
      e.exports = (e2) => c(async function(t2, r2) {
        r2 = n(u, r2), o("Fetching stats for " + t2);
        const {type: c2, cid: f, mfsPath: d} = await i(e2, t2, r2), l = c2 === "ipfs" && f ? f : d;
        let p;
        try {
          p = await s(l, e2.ipld);
        } catch (y) {
          if (y.code === "ERR_NOT_FOUND")
            throw a(new Error(t2 + " does not exist"), "ERR_NOT_FOUND");
          throw y;
        }
        if (!h[p.cid.codec])
          throw new Error("Cannot stat codec " + p.cid.codec);
        return h[p.cid.codec](p);
      });
      const h = {raw: (e2) => ({cid: e2.cid, size: e2.node.length, cumulativeSize: e2.node.length, blocks: 0, type: "file", local: void 0, sizeLocal: void 0, withLocality: false}), "dag-pb": (e2) => {
        const t2 = e2.node.Links.length, r2 = e2.node.size, n2 = e2.node.size, i2 = {cid: e2.cid, type: "file", size: r2, cumulativeSize: n2, blocks: t2, local: void 0, sizeLocal: void 0, withLocality: false};
        return e2.unixfs && (i2.size = e2.unixfs.fileSize(), e2.unixfs.type === "hamt-sharded-directory" ? i2.type = "directory" : i2.type = e2.unixfs.type, i2.mode = e2.unixfs.mode, e2.unixfs.isDirectory() && (i2.size = 0, i2.cumulativeSize = e2.node.size), i2.type === "file" && (i2.blocks = e2.unixfs.blockSizes.length), e2.unixfs.mtime && (i2.mtime = e2.unixfs.mtime)), i2;
      }, "dag-cbor": (e2) => ({cid: e2.cid, local: void 0, sizeLocal: void 0, withLocality: false}), identity: (e2) => ({cid: e2.cid, size: e2.node.digest.length, cumulativeSize: e2.node.digest.length, blocks: 0, type: "file", local: void 0, sizeLocal: void 0, withLocality: false})};
    }, function(e, t, r) {
      "use strict";
      const n = r(9).Key, i = r(161), s = i.ShardingDatastore;
      t.CONFIG_KEY = new n("/config"), t.VERSION_KEY = new n("/version"), t.createStore = async function(e2, t2, r2) {
        const {StorageBackend: n2, storageOptions: o} = function(e3, t3) {
          if (!t3 || !t3.storageBackends)
            throw new Error("Please pass storage backend definitions");
          if (!t3.storageBackends[e3])
            throw new Error(`Storage backend '${e3}' not defined in config`);
          const r3 = t3.storageBackends[e3];
          let n3 = {};
          return t3.storageBackendOptions !== void 0 && t3.storageBackendOptions[e3] !== void 0 && (n3 = t3.storageBackendOptions[e3]), {StorageBackend: r3, storageOptions: n3};
        }(t2, r2);
        t2 !== "root" && (e2 = `${e2}/${t2}`);
        let a = new n2(e2, o);
        if (o.sharding) {
          const e3 = new i.shard.NextToLast(2);
          a = await s.createOrOpen(a, e3);
        }
        return await a.close(), a;
      }, t.containsIrreversibleMigration = function(e2, t2, r2) {
        return r2.filter((r3) => r3.version > e2 && r3.version <= t2).some((e3) => e3.revert === void 0);
      };
    }, function(e, t, r) {
      "use strict";
      t.getCallback = function(e2, t2) {
        return typeof e2 == "function" ? e2 : t2;
      }, t.getOptions = function(e2) {
        return typeof e2 == "object" && e2 !== null ? e2 : {};
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(7), {codes: {ERR_INVALID_PARAMETERS: s}} = r(26), o = (e2) => e2;
      e.exports = class {
        constructor({peerStore: e2, eventName: t2, eventProperty: r2, eventTransformer: n2 = o}) {
          this._ps = e2, this.eventName = t2, this.eventProperty = r2, this.eventTransformer = n2, this.data = new Map();
        }
        set(e2, t2) {
          throw n(new Error("set must be implemented by the subclass"), "ERR_NOT_IMPLEMENTED");
        }
        _setData(e2, t2, {emit: r2 = true} = {}) {
          const n2 = e2.toB58String();
          this.data.set(n2, t2), r2 && this._emit(e2, t2);
        }
        _emit(e2, t2) {
          this._ps.emit(this.eventName, {peerId: e2, [this.eventProperty]: this.eventTransformer(t2)});
        }
        get(e2) {
          if (!i.isPeerId(e2))
            throw n(new Error("peerId must be an instance of peer-id"), s);
          const t2 = this.data.get(e2.toB58String());
          return t2 ? [...t2] : void 0;
        }
        delete(e2) {
          if (!i.isPeerId(e2))
            throw n(new Error("peerId must be an instance of peer-id"), s);
          return !!this.data.delete(e2.toB58String()) && (this._emit(e2, []), true);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const {Buffer: n} = r(3), i = r(33);
      e.exports = async function* (e2) {
        for await (const t2 of e2)
          n.isBuffer(t2) ? yield t2 : i.isBufferList(t2) ? yield t2.slice() : yield n.from(t2);
      }, e.exports.toBuffer = e.exports, e.exports.toList = async function* (e2) {
        for await (const t2 of e2)
          n.isBuffer(t2) ? yield new i().append(t2) : i.isBufferList(t2) ? yield t2 : yield new i().append(n.from(t2));
      };
    }, function(e, t, r) {
      "use strict";
      (function(n) {
        t.log = function(...e2) {
          return typeof console == "object" && console.log && console.log(...e2);
        }, t.formatArgs = function(t2) {
          if (t2[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + t2[0] + (this.useColors ? "%c " : " ") + "+" + e.exports.humanize(this.diff), !this.useColors)
            return;
          const r2 = "color: " + this.color;
          t2.splice(1, 0, r2, "color: inherit");
          let n2 = 0, i2 = 0;
          t2[0].replace(/%[a-zA-Z%]/g, (e2) => {
            e2 !== "%%" && (n2++, e2 === "%c" && (i2 = n2));
          }), t2.splice(i2, 0, r2);
        }, t.save = function(e2) {
          try {
            e2 ? t.storage.setItem("debug", e2) : t.storage.removeItem("debug");
          } catch (r2) {
          }
        }, t.load = function() {
          let e2;
          try {
            e2 = t.storage.getItem("debug");
          } catch (r2) {
          }
          !e2 && n !== void 0 && "env" in n && (e2 = {NODE_ENV: "production"}.DEBUG);
          return e2;
        }, t.useColors = function() {
          if (typeof window != "undefined" && window.process && (window.process.type === "renderer" || window.process.__nwjs))
            return true;
          if (typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))
            return false;
          return typeof document != "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window != "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
        }, t.storage = function() {
          try {
            return localStorage;
          } catch (e2) {
          }
        }(), t.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], e.exports = r(961)(t);
        const {formatters: i} = e.exports;
        i.j = function(e2) {
          try {
            return JSON.stringify(e2);
          } catch (t2) {
            return "[UnexpectedJSONParseError]: " + t2.message;
          }
        };
      }).call(this, r(10));
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2) {
        var r2 = function() {
        };
        r2.prototype = t2.prototype, e2.prototype = new r2(), e2.prototype.constructor = e2;
      };
    }, function(e, t, r) {
      "use strict";
      (function(n) {
        function i() {
          var e2;
          try {
            e2 = t.storage.debug;
          } catch (r2) {
          }
          return !e2 && n !== void 0 && "env" in n && (e2 = {NODE_ENV: "production"}.DEBUG), e2;
        }
        (t = e.exports = r(978)).log = function() {
          return typeof console == "object" && console.log && Function.prototype.apply.call(console.log, console, arguments);
        }, t.formatArgs = function(e2) {
          var r2 = this.useColors;
          if (e2[0] = (r2 ? "%c" : "") + this.namespace + (r2 ? " %c" : " ") + e2[0] + (r2 ? "%c " : " ") + "+" + t.humanize(this.diff), !r2)
            return;
          var n2 = "color: " + this.color;
          e2.splice(1, 0, n2, "color: inherit");
          var i2 = 0, s = 0;
          e2[0].replace(/%[a-zA-Z%]/g, function(e3) {
            e3 !== "%%" && (i2++, e3 === "%c" && (s = i2));
          }), e2.splice(s, 0, n2);
        }, t.save = function(e2) {
          try {
            e2 == null ? t.storage.removeItem("debug") : t.storage.debug = e2;
          } catch (r2) {
          }
        }, t.load = i, t.useColors = function() {
          if (typeof window != "undefined" && window.process && window.process.type === "renderer")
            return true;
          if (typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))
            return false;
          return typeof document != "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window != "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
        }, t.storage = typeof chrome != "undefined" && chrome.storage !== void 0 ? chrome.storage.local : function() {
          try {
            return window.localStorage;
          } catch (e2) {
          }
        }(), t.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], t.formatters.j = function(e2) {
          try {
            return JSON.stringify(e2);
          } catch (t2) {
            return "[UnexpectedJSONParseError]: " + t2.message;
          }
        }, t.enable(i());
      }).call(this, r(10));
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.decode2 = t.decode1 = t.decode0 = t.encode2 = t.encode1 = t.encode0 = t.uint16BEDecode = t.uint16BEEncode = void 0;
      const n = r(3);
      t.uint16BEEncode = (e2, t2, r2) => ((t2 = t2 || n.Buffer.allocUnsafe(2)).writeUInt16BE(e2, r2), t2), t.uint16BEEncode.bytes = 2, t.uint16BEDecode = (e2) => {
        if (e2.length < 2)
          throw RangeError("Could not decode int16BE");
        return e2.readUInt16BE(0);
      }, t.uint16BEDecode.bytes = 2, t.encode0 = function(e2) {
        return n.Buffer.concat([e2.ne, e2.ciphertext]);
      }, t.encode1 = function(e2) {
        return n.Buffer.concat([e2.ne, e2.ns, e2.ciphertext]);
      }, t.encode2 = function(e2) {
        return n.Buffer.concat([e2.ns, e2.ciphertext]);
      }, t.decode0 = function(e2) {
        if (e2.length < 32)
          throw new Error("Cannot decode stage 0 MessageBuffer: length less than 32 bytes.");
        return {ne: e2.slice(0, 32), ciphertext: e2.slice(32, e2.length), ns: n.Buffer.alloc(0)};
      }, t.decode1 = function(e2) {
        if (e2.length < 80)
          throw new Error("Cannot decode stage 1 MessageBuffer: length less than 80 bytes.");
        return {ne: e2.slice(0, 32), ns: e2.slice(32, 80), ciphertext: e2.slice(80, e2.length)};
      }, t.decode2 = function(e2) {
        if (e2.length < 48)
          throw new Error("Cannot decode stage 2 MessageBuffer: length less than 48 bytes.");
        return {ne: n.Buffer.alloc(0), ns: e2.slice(0, 48), ciphertext: e2.slice(48, e2.length)};
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(152);
      class i extends Error {
        constructor(e2) {
          super(e2), this.name = "TimeoutError";
        }
      }
      const s = (e2, t2, r2) => new Promise((s2, o) => {
        if (typeof t2 != "number" || t2 < 0)
          throw new TypeError("Expected `milliseconds` to be a positive number");
        if (t2 === 1 / 0)
          return void s2(e2);
        const a = setTimeout(() => {
          if (typeof r2 == "function") {
            try {
              s2(r2());
            } catch (a2) {
              o(a2);
            }
            return;
          }
          const n2 = r2 instanceof Error ? r2 : new i(typeof r2 == "string" ? r2 : `Promise timed out after ${t2} milliseconds`);
          typeof e2.cancel == "function" && e2.cancel(), o(n2);
        }, t2);
        n(e2.then(s2, o), () => {
          clearTimeout(a);
        });
      });
      e.exports = s, e.exports.default = s, e.exports.TimeoutError = i;
    }, function(e, t, r) {
      "use strict";
      const {sortBy: n} = r(46), i = r(1103);
      class s {
        constructor(e2) {
          this.set = new Map(), this._stats = e2;
        }
        get length() {
          return this.set.size;
        }
        add(e2, t2, n2) {
          const s3 = r(98), o = e2.toString("base58btc"), a = this.set.get(o);
          a ? (a.inc(), a.priority = t2, a.wantType === s3.WantType.Have && n2 === s3.WantType.Block && (a.wantType = n2)) : (this.set.set(o, new i(e2, t2, n2)), this._stats && this._stats.push(null, "wantListSize", 1));
        }
        remove(e2) {
          const t2 = e2.toString("base58btc"), r2 = this.set.get(t2);
          r2 && (r2.dec(), r2.hasRefs() || (this.set.delete(t2), this._stats && this._stats.push(null, "wantListSize", -1)));
        }
        removeForce(e2) {
          this.set.has(e2) && this.set.delete(e2);
        }
        forEach(e2) {
          return this.set.forEach(e2);
        }
        entries() {
          return this.set.entries();
        }
        sortedEntries() {
          return new Map(n((e2) => e2[1].key, Array.from(this.set.entries())));
        }
        contains(e2) {
          const t2 = e2.toString("base58btc");
          return this.set.get(t2);
        }
      }
      s.Entry = i, e.exports = s;
    }, function(e, t, r) {
      "use strict";
      e.exports = {maxProvidersPerRequest: 3, providerRequestTimeout: 1e4, hasBlockTimeout: 15e3, provideTimeout: 15e3, kMaxPriority: Math.pow(2, 31) - 1, maxListeners: 1e3, wantlistSendDebounceMs: 1};
    }, function(e, t, r) {
      "use strict";
      const {fetch: n, Request: i, Headers: s} = r(389), {TimeoutError: o, HTTPError: a} = r(214), c = r(23).bind({ignoreUndefined: true}), {URL: u, URLSearchParams: h} = r(398), f = r(400), d = r(130), l = r(131), p = {headers: {}, throwHttpErrors: true, credentials: "same-origin", transformSearchParams: (e2) => e2};
      class y {
        constructor(e2 = {}) {
          this.opts = c(p, e2);
        }
        async fetch(e2, t2 = {}) {
          const r2 = c(this.opts, t2);
          if (r2.headers = new s(r2.headers), typeof e2 != "string" && !(e2 instanceof u || e2 instanceof i))
            throw new TypeError("`resource` must be a string, URL, or Request");
          if (r2.base && typeof r2.base == "string" && typeof e2 == "string") {
            if (e2.startsWith("/"))
              throw new Error("`resource` must not begin with a slash when using `base`");
            r2.base.endsWith("/") || (r2.base += "/"), e2 = r2.base + e2;
          }
          const f2 = new u(e2, r2.base);
          r2.searchParams && (f2.search = r2.transformSearchParams(new h(r2.searchParams))), r2.json !== void 0 && (r2.body = JSON.stringify(r2.json), r2.headers.set("content-type", "application/json"));
          const p2 = new d(), y3 = l([p2.signal, r2.signal]), v = await ((e3, t3, r3) => {
            if (t3 === void 0)
              return e3;
            const n2 = Date.now(), i2 = () => Date.now() - n2 >= t3;
            return new Promise((n3, s2) => {
              const a2 = setTimeout(() => {
                i2() && (s2(new o()), r3.abort());
              }, t3), c2 = (e4) => (t4) => {
                clearTimeout(a2), i2() ? s2(new o()) : e4(t4);
              };
              e3.then(c2(n3), c2(s2));
            });
          })(n(f2.toString(), {...r2, signal: y3, timeout: void 0}), r2.timeout, p2);
          if (!v.ok && r2.throwHttpErrors)
            throw r2.handleError && await r2.handleError(v), new a(v);
          return v.iterator = function() {
            const e3 = b(v.body);
            if (!m(e3))
              throw new Error("Can't convert fetch body into a Async Iterator:");
            return e3;
          }, v.ndjson = async function* () {
            for await (const e3 of g(v.iterator()))
              t2.transform ? yield t2.transform(e3) : yield e3;
          }, v;
        }
        post(e2, t2 = {}) {
          return this.fetch(e2, {...t2, method: "POST"});
        }
        get(e2, t2 = {}) {
          return this.fetch(e2, {...t2, method: "GET"});
        }
        put(e2, t2 = {}) {
          return this.fetch(e2, {...t2, method: "PUT"});
        }
        delete(e2, t2 = {}) {
          return this.fetch(e2, {...t2, method: "DELETE"});
        }
        options(e2, t2 = {}) {
          return this.fetch(e2, {...t2, method: "OPTIONS"});
        }
      }
      const g = async function* (e2) {
        const t2 = new f();
        let r2 = "";
        for await (const n2 of e2) {
          r2 += t2.decode(n2, {stream: true});
          const e3 = r2.split(/\r?\n/);
          for (let t3 = 0; t3 < e3.length - 1; t3++) {
            const r3 = e3[t3].trim();
            r3.length > 0 && (yield JSON.parse(r3));
          }
          r2 = e3[e3.length - 1];
        }
        r2 += t2.decode(), r2 = r2.trim(), r2.length !== 0 && (yield JSON.parse(r2));
      }, b = function(e2) {
        if (m(e2)) {
          if (Object.prototype.hasOwnProperty.call(e2, "readable") && Object.prototype.hasOwnProperty.call(e2, "writable")) {
            const t3 = e2[Symbol.asyncIterator](), r2 = {next: t3.next.bind(t3), return: () => (e2.destroy(), t3.return()), [Symbol.asyncIterator]: () => r2};
            return r2;
          }
          return e2;
        }
        const t2 = e2.getReader();
        return {next: () => t2.read(), return: () => (t2.releaseLock(), {}), [Symbol.asyncIterator]() {
          return this;
        }};
      }, m = (e2) => typeof e2 == "object" && e2 !== null && typeof e2[Symbol.asyncIterator] == "function";
      y.HTTPError = a, y.TimeoutError = o, y.streamToAsyncIterator = b, y.post = (e2, t2) => new y(t2).post(e2, t2), y.get = (e2, t2) => new y(t2).get(e2, t2), y.put = (e2, t2) => new y(t2).put(e2, t2), y.delete = (e2, t2) => new y(t2).delete(e2, t2), y.options = (e2, t2) => new y(t2).options(e2, t2), e.exports = y;
    }, function(e, t, r) {
      "use strict";
      var n = r(217), i = r(219), s = r(220), o = r(395), a = s(), c = function() {
        return a;
      };
      n(c, {getPolyfill: s, implementation: i, shim: o}), e.exports = c;
    }, function(e, t, r) {
      "use strict";
      typeof globalThis != "object" && (Object.defineProperty(Object.prototype, "__magic__", {get: function() {
        return this;
      }, configurable: true}), __magic__.globalThis = __magic__, delete Object.prototype.__magic__), e.exports = globalThis;
    }, function(e, t, r) {
      "use strict";
      const n = r(128)();
      n.AbortController && n.AbortSignal ? (e.exports = class extends n.AbortController {
      }, e.exports.AbortSignal = n.AbortSignal, e.exports.default = e.exports) : e.exports = r(47);
    }, function(e, t, r) {
      "use strict";
      const n = r(130);
      function i(e2) {
        const t2 = new n();
        function r2() {
          t2.abort();
          for (const t3 of e2)
            t3 && t3.removeEventListener && t3.removeEventListener("abort", r2);
        }
        for (const n2 of e2)
          if (n2 && n2.addEventListener) {
            if (n2.aborted) {
              r2();
              break;
            }
            n2.addEventListener("abort", r2);
          }
        return t2.signal;
      }
      e.exports = i, e.exports.anySignal = i;
    }, function(e, t, r) {
      "use strict";
      const n = r(401), i = r(402), {rfc4648: s} = r(403), {decodeText: o, encodeText: a} = r(133), c = [["identity", "\0", () => ({encode: o, decode: a}), ""], ["base2", "0", s(1), "01"], ["base8", "7", s(3), "01234567"], ["base10", "9", n, "0123456789"], ["base16", "f", s(4), "0123456789abcdef"], ["base16upper", "F", s(4), "0123456789ABCDEF"], ["base32hex", "v", s(5), "0123456789abcdefghijklmnopqrstuv"], ["base32hexupper", "V", s(5), "0123456789ABCDEFGHIJKLMNOPQRSTUV"], ["base32hexpad", "t", s(5), "0123456789abcdefghijklmnopqrstuv="], ["base32hexpadupper", "T", s(5), "0123456789ABCDEFGHIJKLMNOPQRSTUV="], ["base32", "b", s(5), "abcdefghijklmnopqrstuvwxyz234567"], ["base32upper", "B", s(5), "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"], ["base32pad", "c", s(5), "abcdefghijklmnopqrstuvwxyz234567="], ["base32padupper", "C", s(5), "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567="], ["base32z", "h", s(5), "ybndrfg8ejkmcpqxot1uwisza345h769"], ["base36", "k", n, "0123456789abcdefghijklmnopqrstuvwxyz"], ["base36upper", "K", n, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"], ["base58btc", "z", n, "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"], ["base58flickr", "Z", n, "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"], ["base64", "m", s(6), "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"], ["base64pad", "M", s(6), "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="], ["base64url", "u", s(6), "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"], ["base64urlpad", "U", s(6), "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_="]], u = c.reduce((e2, t2) => (e2[t2[0]] = new i(t2[0], t2[1], t2[2], t2[3]), e2), {}), h = c.reduce((e2, t2) => (e2[t2[1]] = u[t2[0]], e2), {});
      e.exports = {names: u, codes: h};
    }, function(e, t, r) {
      "use strict";
      const {TextEncoder: n, TextDecoder: i} = r(134), s = new i(), o = new n();
      e.exports = {decodeText: (e2) => s.decode(e2), encodeText: (e2) => o.encode(e2), concat: function(e2, t2) {
        const r2 = new Uint8Array(t2);
        let n2 = 0;
        for (const i2 of e2)
          r2.set(i2, n2), n2 += i2.length;
        return r2;
      }};
    }, function(e, t, r) {
      "use strict";
      t.TextEncoder = TextEncoder, t.TextDecoder = TextDecoder;
    }, function(e, t, r) {
      "use strict";
      e.exports = {encode: r(404), decode: r(405), encodingLength: r(406)};
    }, function(e, t, r) {
      "use strict";
      const n = r(20)(r(138));
      r(44), r(225);
      const i = r(8), s = r(0), o = r(6), a = r(451);
      t = e.exports;
      const c = {rsa: r(452), ed25519: r(458), secp256k1: r(460)(n, r(102))};
      t.supportedKeys = c, t.keysPBM = n;
      const u = "secp256k1 support requires libp2p-crypto-secp256k1 package", h = "ERR_MISSING_PACKAGE";
      function f(e2) {
        const t2 = c[e2.toLowerCase()];
        if (!t2) {
          const t3 = Object.keys(c).join(" / ");
          throw s(new Error(`invalid or unsupported key type ${e2}. Must be ${t3}`), "ERR_UNSUPPORTED_KEY_TYPE");
        }
        return t2;
      }
      t.keyStretcher = r(486), t.generateEphemeralKeyPair = r(488), t.generateKeyPair = async (e2, t2) => f(e2).generateKeyPair(t2), t.generateKeyPairFromSeed = async (e2, t2, r2) => {
        const n2 = f(e2);
        if (e2.toLowerCase() !== "ed25519")
          throw s(new Error("Seed key derivation is unimplemented for RSA or secp256k1"), "ERR_UNSUPPORTED_KEY_DERIVATION_TYPE");
        return n2.generateKeyPairFromSeed(t2, r2);
      }, t.unmarshalPublicKey = (e2) => {
        const t2 = n.PublicKey.decode(e2), r2 = t2.Data;
        switch (t2.Type) {
          case n.KeyType.RSA:
            return c.rsa.unmarshalRsaPublicKey(r2);
          case n.KeyType.Ed25519:
            return c.ed25519.unmarshalEd25519PublicKey(r2);
          case n.KeyType.Secp256k1:
            if (c.secp256k1)
              return c.secp256k1.unmarshalSecp256k1PublicKey(r2);
            throw s(new Error(u), h);
          default:
            f(t2.Type);
        }
      }, t.marshalPublicKey = (e2, t2) => (f(t2 = (t2 || "rsa").toLowerCase()), e2.bytes), t.unmarshalPrivateKey = async (e2) => {
        const t2 = n.PrivateKey.decode(e2), r2 = t2.Data;
        switch (t2.Type) {
          case n.KeyType.RSA:
            return c.rsa.unmarshalRsaPrivateKey(r2);
          case n.KeyType.Ed25519:
            return c.ed25519.unmarshalEd25519PrivateKey(r2);
          case n.KeyType.Secp256k1:
            if (c.secp256k1)
              return c.secp256k1.unmarshalSecp256k1PrivateKey(r2);
            throw s(new Error(u), h);
          default:
            f(t2.Type);
        }
      }, t.marshalPrivateKey = (e2, t2) => (f(t2 = (t2 || "rsa").toLowerCase()), e2.bytes), t.import = async (e2, r2) => {
        try {
          const n3 = await a.import(e2, r2);
          return t.unmarshalPrivateKey(n3);
        } catch (h2) {
        }
        const n2 = i.pki.decryptRsaPrivateKey(e2, r2);
        if (n2 === null)
          throw s(new Error("Cannot read the key, most likely the password is wrong or not a RSA key"), "ERR_CANNOT_DECRYPT_PEM");
        let u2 = i.asn1.toDer(i.pki.privateKeyToAsn1(n2));
        return u2 = o(u2.getBytes(), "ascii"), c.rsa.unmarshalRsaPrivateKey(u2);
      };
    }, function(e, t, r) {
      "use strict";
      t.defined = function(e2) {
        return e2 != null && (typeof e2 != "number" || !isNaN(e2));
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = "enum KeyType {\n  RSA = 0;\n  Ed25519 = 1;\n  Secp256k1 = 2;\n}\nmessage PublicKey {\n  required KeyType Type = 1;\n  required bytes Data = 2;\n}\nmessage PrivateKey {\n  required KeyType Type = 1;\n  required bytes Data = 2;\n}";
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      function i(e2, t2) {
        n.cipher.registerAlgorithm(e2, function() {
          return new n.des.Algorithm(e2, t2);
        });
      }
      r(226), r(227), r(13), e.exports = n.des = n.des || {}, n.des.startEncrypting = function(e2, t2, r2, n2) {
        var i2 = p({key: e2, output: r2, decrypt: false, mode: n2 || (t2 === null ? "ECB" : "CBC")});
        return i2.start(t2), i2;
      }, n.des.createEncryptionCipher = function(e2, t2) {
        return p({key: e2, output: null, decrypt: false, mode: t2});
      }, n.des.startDecrypting = function(e2, t2, r2, n2) {
        var i2 = p({key: e2, output: r2, decrypt: true, mode: n2 || (t2 === null ? "ECB" : "CBC")});
        return i2.start(t2), i2;
      }, n.des.createDecryptionCipher = function(e2, t2) {
        return p({key: e2, output: null, decrypt: true, mode: t2});
      }, n.des.Algorithm = function(e2, t2) {
        var r2 = this;
        r2.name = e2, r2.mode = new t2({blockSize: 8, cipher: {encrypt: function(e3, t3) {
          return l(r2._keys, e3, t3, false);
        }, decrypt: function(e3, t3) {
          return l(r2._keys, e3, t3, true);
        }}}), r2._init = false;
      }, n.des.Algorithm.prototype.initialize = function(e2) {
        if (!this._init) {
          var t2 = n.util.createBuffer(e2.key);
          if (this.name.indexOf("3DES") === 0 && t2.length() !== 24)
            throw new Error("Invalid Triple-DES key size: " + 8 * t2.length());
          this._keys = function(e3) {
            for (var t3, r2 = [0, 4, 536870912, 536870916, 65536, 65540, 536936448, 536936452, 512, 516, 536871424, 536871428, 66048, 66052, 536936960, 536936964], n2 = [0, 1, 1048576, 1048577, 67108864, 67108865, 68157440, 68157441, 256, 257, 1048832, 1048833, 67109120, 67109121, 68157696, 68157697], i2 = [0, 8, 2048, 2056, 16777216, 16777224, 16779264, 16779272, 0, 8, 2048, 2056, 16777216, 16777224, 16779264, 16779272], s2 = [0, 2097152, 134217728, 136314880, 8192, 2105344, 134225920, 136323072, 131072, 2228224, 134348800, 136445952, 139264, 2236416, 134356992, 136454144], o2 = [0, 262144, 16, 262160, 0, 262144, 16, 262160, 4096, 266240, 4112, 266256, 4096, 266240, 4112, 266256], a2 = [0, 1024, 32, 1056, 0, 1024, 32, 1056, 33554432, 33555456, 33554464, 33555488, 33554432, 33555456, 33554464, 33555488], c2 = [0, 268435456, 524288, 268959744, 2, 268435458, 524290, 268959746, 0, 268435456, 524288, 268959744, 2, 268435458, 524290, 268959746], u2 = [0, 65536, 2048, 67584, 536870912, 536936448, 536872960, 536938496, 131072, 196608, 133120, 198656, 537001984, 537067520, 537004032, 537069568], h2 = [0, 262144, 0, 262144, 2, 262146, 2, 262146, 33554432, 33816576, 33554432, 33816576, 33554434, 33816578, 33554434, 33816578], f2 = [0, 268435456, 8, 268435464, 0, 268435456, 8, 268435464, 1024, 268436480, 1032, 268436488, 1024, 268436480, 1032, 268436488], d2 = [0, 32, 0, 32, 1048576, 1048608, 1048576, 1048608, 8192, 8224, 8192, 8224, 1056768, 1056800, 1056768, 1056800], l2 = [0, 16777216, 512, 16777728, 2097152, 18874368, 2097664, 18874880, 67108864, 83886080, 67109376, 83886592, 69206016, 85983232, 69206528, 85983744], p2 = [0, 4096, 134217728, 134221824, 524288, 528384, 134742016, 134746112, 16, 4112, 134217744, 134221840, 524304, 528400, 134742032, 134746128], y = [0, 4, 256, 260, 0, 4, 256, 260, 1, 5, 257, 261, 1, 5, 257, 261], g = e3.length() > 8 ? 3 : 1, b = [], m = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0], v = 0, w = 0; w < g; w++) {
              var _ = e3.getInt32(), E = e3.getInt32();
              _ ^= (t3 = 252645135 & (_ >>> 4 ^ E)) << 4, _ ^= t3 = 65535 & ((E ^= t3) >>> -16 ^ _), _ ^= (t3 = 858993459 & (_ >>> 2 ^ (E ^= t3 << -16))) << 2, _ ^= t3 = 65535 & ((E ^= t3) >>> -16 ^ _), _ ^= (t3 = 1431655765 & (_ >>> 1 ^ (E ^= t3 << -16))) << 1, _ ^= t3 = 16711935 & ((E ^= t3) >>> 8 ^ _), t3 = (_ ^= (t3 = 1431655765 & (_ >>> 1 ^ (E ^= t3 << 8))) << 1) << 8 | (E ^= t3) >>> 20 & 240, _ = E << 24 | E << 8 & 16711680 | E >>> 8 & 65280 | E >>> 24 & 240, E = t3;
              for (var S = 0; S < m.length; ++S) {
                m[S] ? (_ = _ << 2 | _ >>> 26, E = E << 2 | E >>> 26) : (_ = _ << 1 | _ >>> 27, E = E << 1 | E >>> 27);
                var A = r2[(_ &= -15) >>> 28] | n2[_ >>> 24 & 15] | i2[_ >>> 20 & 15] | s2[_ >>> 16 & 15] | o2[_ >>> 12 & 15] | a2[_ >>> 8 & 15] | c2[_ >>> 4 & 15], I = u2[(E &= -15) >>> 28] | h2[E >>> 24 & 15] | f2[E >>> 20 & 15] | d2[E >>> 16 & 15] | l2[E >>> 12 & 15] | p2[E >>> 8 & 15] | y[E >>> 4 & 15];
                t3 = 65535 & (I >>> 16 ^ A), b[v++] = A ^ t3, b[v++] = I ^ t3 << 16;
              }
            }
            return b;
          }(t2), this._init = true;
        }
      }, i("DES-ECB", n.cipher.modes.ecb), i("DES-CBC", n.cipher.modes.cbc), i("DES-CFB", n.cipher.modes.cfb), i("DES-OFB", n.cipher.modes.ofb), i("DES-CTR", n.cipher.modes.ctr), i("3DES-ECB", n.cipher.modes.ecb), i("3DES-CBC", n.cipher.modes.cbc), i("3DES-CFB", n.cipher.modes.cfb), i("3DES-OFB", n.cipher.modes.ofb), i("3DES-CTR", n.cipher.modes.ctr);
      var s = [16843776, 0, 65536, 16843780, 16842756, 66564, 4, 65536, 1024, 16843776, 16843780, 1024, 16778244, 16842756, 16777216, 4, 1028, 16778240, 16778240, 66560, 66560, 16842752, 16842752, 16778244, 65540, 16777220, 16777220, 65540, 0, 1028, 66564, 16777216, 65536, 16843780, 4, 16842752, 16843776, 16777216, 16777216, 1024, 16842756, 65536, 66560, 16777220, 1024, 4, 16778244, 66564, 16843780, 65540, 16842752, 16778244, 16777220, 1028, 66564, 16843776, 1028, 16778240, 16778240, 0, 65540, 66560, 0, 16842756], o = [-2146402272, -2147450880, 32768, 1081376, 1048576, 32, -2146435040, -2147450848, -2147483616, -2146402272, -2146402304, -2147483648, -2147450880, 1048576, 32, -2146435040, 1081344, 1048608, -2147450848, 0, -2147483648, 32768, 1081376, -2146435072, 1048608, -2147483616, 0, 1081344, 32800, -2146402304, -2146435072, 32800, 0, 1081376, -2146435040, 1048576, -2147450848, -2146435072, -2146402304, 32768, -2146435072, -2147450880, 32, -2146402272, 1081376, 32, 32768, -2147483648, 32800, -2146402304, 1048576, -2147483616, 1048608, -2147450848, -2147483616, 1048608, 1081344, 0, -2147450880, 32800, -2147483648, -2146435040, -2146402272, 1081344], a = [520, 134349312, 0, 134348808, 134218240, 0, 131592, 134218240, 131080, 134217736, 134217736, 131072, 134349320, 131080, 134348800, 520, 134217728, 8, 134349312, 512, 131584, 134348800, 134348808, 131592, 134218248, 131584, 131072, 134218248, 8, 134349320, 512, 134217728, 134349312, 134217728, 131080, 520, 131072, 134349312, 134218240, 0, 512, 131080, 134349320, 134218240, 134217736, 512, 0, 134348808, 134218248, 131072, 134217728, 134349320, 8, 131592, 131584, 134217736, 134348800, 134218248, 520, 134348800, 131592, 8, 134348808, 131584], c = [8396801, 8321, 8321, 128, 8396928, 8388737, 8388609, 8193, 0, 8396800, 8396800, 8396929, 129, 0, 8388736, 8388609, 1, 8192, 8388608, 8396801, 128, 8388608, 8193, 8320, 8388737, 1, 8320, 8388736, 8192, 8396928, 8396929, 129, 8388736, 8388609, 8396800, 8396929, 129, 0, 0, 8396800, 8320, 8388736, 8388737, 1, 8396801, 8321, 8321, 128, 8396929, 129, 1, 8192, 8388609, 8193, 8396928, 8388737, 8193, 8320, 8388608, 8396801, 128, 8388608, 8192, 8396928], u = [256, 34078976, 34078720, 1107296512, 524288, 256, 1073741824, 34078720, 1074266368, 524288, 33554688, 1074266368, 1107296512, 1107820544, 524544, 1073741824, 33554432, 1074266112, 1074266112, 0, 1073742080, 1107820800, 1107820800, 33554688, 1107820544, 1073742080, 0, 1107296256, 34078976, 33554432, 1107296256, 524544, 524288, 1107296512, 256, 33554432, 1073741824, 34078720, 1107296512, 1074266368, 33554688, 1073741824, 1107820544, 34078976, 1074266368, 256, 33554432, 1107820544, 1107820800, 524544, 1107296256, 1107820800, 34078720, 0, 1074266112, 1107296256, 524544, 33554688, 1073742080, 524288, 0, 1074266112, 34078976, 1073742080], h = [536870928, 541065216, 16384, 541081616, 541065216, 16, 541081616, 4194304, 536887296, 4210704, 4194304, 536870928, 4194320, 536887296, 536870912, 16400, 0, 4194320, 536887312, 16384, 4210688, 536887312, 16, 541065232, 541065232, 0, 4210704, 541081600, 16400, 4210688, 541081600, 536870912, 536887296, 16, 541065232, 4210688, 541081616, 4194304, 16400, 536870928, 4194304, 536887296, 536870912, 16400, 536870928, 541081616, 4210688, 541065216, 4210704, 541081600, 0, 541065232, 16, 16384, 541065216, 4210704, 16384, 4194320, 536887312, 0, 541081600, 536870912, 4194320, 536887312], f = [2097152, 69206018, 67110914, 0, 2048, 67110914, 2099202, 69208064, 69208066, 2097152, 0, 67108866, 2, 67108864, 69206018, 2050, 67110912, 2099202, 2097154, 67110912, 67108866, 69206016, 69208064, 2097154, 69206016, 2048, 2050, 69208066, 2099200, 2, 67108864, 2099200, 67108864, 2099200, 2097152, 67110914, 67110914, 69206018, 69206018, 2, 2097154, 67108864, 67110912, 2097152, 69208064, 2050, 2099202, 69208064, 2050, 67108866, 69208066, 69206016, 2099200, 0, 2, 69208066, 0, 2099202, 69206016, 2048, 67108866, 67110912, 2048, 2097154], d = [268439616, 4096, 262144, 268701760, 268435456, 268439616, 64, 268435456, 262208, 268697600, 268701760, 266240, 268701696, 266304, 4096, 64, 268697600, 268435520, 268439552, 4160, 266240, 262208, 268697664, 268701696, 4160, 0, 0, 268697664, 268435520, 268439552, 266304, 262144, 266304, 262144, 268701696, 4096, 64, 268697664, 4096, 266304, 268439552, 64, 268435520, 268697600, 268697664, 268435456, 262144, 268439616, 0, 268701760, 262208, 268435520, 268697600, 268439552, 268439616, 0, 268701760, 266240, 266240, 4160, 4160, 262208, 268435456, 268701696];
      function l(e2, t2, r2, n2) {
        var i2, l2, p2 = e2.length === 32 ? 3 : 9;
        i2 = p2 === 3 ? n2 ? [30, -2, -2] : [0, 32, 2] : n2 ? [94, 62, -2, 32, 64, 2, 30, -2, -2] : [0, 32, 2, 62, 30, -2, 64, 96, 2];
        var y = t2[0], g = t2[1];
        y ^= (l2 = 252645135 & (y >>> 4 ^ g)) << 4, y ^= (l2 = 65535 & (y >>> 16 ^ (g ^= l2))) << 16, y ^= l2 = 858993459 & ((g ^= l2) >>> 2 ^ y), y ^= l2 = 16711935 & ((g ^= l2 << 2) >>> 8 ^ y), y = (y ^= (l2 = 1431655765 & (y >>> 1 ^ (g ^= l2 << 8))) << 1) << 1 | y >>> 31, g = (g ^= l2) << 1 | g >>> 31;
        for (var b = 0; b < p2; b += 3) {
          for (var m = i2[b + 1], v = i2[b + 2], w = i2[b]; w != m; w += v) {
            var _ = g ^ e2[w], E = (g >>> 4 | g << 28) ^ e2[w + 1];
            l2 = y, y = g, g = l2 ^ (o[_ >>> 24 & 63] | c[_ >>> 16 & 63] | h[_ >>> 8 & 63] | d[63 & _] | s[E >>> 24 & 63] | a[E >>> 16 & 63] | u[E >>> 8 & 63] | f[63 & E]);
          }
          l2 = y, y = g, g = l2;
        }
        g = g >>> 1 | g << 31, g ^= l2 = 1431655765 & ((y = y >>> 1 | y << 31) >>> 1 ^ g), g ^= (l2 = 16711935 & (g >>> 8 ^ (y ^= l2 << 1))) << 8, g ^= (l2 = 858993459 & (g >>> 2 ^ (y ^= l2))) << 2, g ^= l2 = 65535 & ((y ^= l2) >>> 16 ^ g), g ^= l2 = 252645135 & ((y ^= l2 << 16) >>> 4 ^ g), y ^= l2 << 4, r2[0] = y, r2[1] = g;
      }
      function p(e2) {
        var t2, r2 = "DES-" + ((e2 = e2 || {}).mode || "CBC").toUpperCase(), i2 = (t2 = e2.decrypt ? n.cipher.createDecipher(r2, e2.key) : n.cipher.createCipher(r2, e2.key)).start;
        return t2.start = function(e3, r3) {
          var s2 = null;
          r3 instanceof n.util.ByteBuffer && (s2 = r3, r3 = {}), (r3 = r3 || {}).output = s2, r3.iv = e3, i2.call(t2, r3);
        }, t2;
      }
    }, function(e, t) {
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      r(13);
      var i = e.exports = n.pem = n.pem || {};
      function s(e2) {
        for (var t2 = e2.name + ": ", r2 = [], n2 = function(e3, t3) {
          return " " + t3;
        }, i2 = 0; i2 < e2.values.length; ++i2)
          r2.push(e2.values[i2].replace(/^(\S+\r\n)/, n2));
        t2 += r2.join(",") + "\r\n";
        var s2 = 0, o2 = -1;
        for (i2 = 0; i2 < t2.length; ++i2, ++s2)
          if (s2 > 65 && o2 !== -1) {
            var a = t2[o2];
            a === "," ? (++o2, t2 = t2.substr(0, o2) + "\r\n " + t2.substr(o2)) : t2 = t2.substr(0, o2) + "\r\n" + a + t2.substr(o2 + 1), s2 = i2 - o2 - 1, o2 = -1, ++i2;
          } else
            t2[i2] !== " " && t2[i2] !== "	" && t2[i2] !== "," || (o2 = i2);
        return t2;
      }
      function o(e2) {
        return e2.replace(/^\s+/, "");
      }
      i.encode = function(e2, t2) {
        t2 = t2 || {};
        var r2, i2 = "-----BEGIN " + e2.type + "-----\r\n";
        if (e2.procType && (i2 += s(r2 = {name: "Proc-Type", values: [String(e2.procType.version), e2.procType.type]})), e2.contentDomain && (i2 += s(r2 = {name: "Content-Domain", values: [e2.contentDomain]})), e2.dekInfo && (r2 = {name: "DEK-Info", values: [e2.dekInfo.algorithm]}, e2.dekInfo.parameters && r2.values.push(e2.dekInfo.parameters), i2 += s(r2)), e2.headers)
          for (var o2 = 0; o2 < e2.headers.length; ++o2)
            i2 += s(e2.headers[o2]);
        return e2.procType && (i2 += "\r\n"), i2 += n.util.encode64(e2.body, t2.maxline || 64) + "\r\n", i2 += "-----END " + e2.type + "-----\r\n";
      }, i.decode = function(e2) {
        for (var t2, r2 = [], i2 = /\s*-----BEGIN ([A-Z0-9- ]+)-----\r?\n?([\x21-\x7e\s]+?(?:\r?\n\r?\n))?([:A-Za-z0-9+\/=\s]+?)-----END \1-----/g, s2 = /([\x21-\x7e]+):\s*([\x21-\x7e\s^:]+)/, a = /\r?\n/; t2 = i2.exec(e2); ) {
          var c = {type: t2[1], procType: null, contentDomain: null, dekInfo: null, headers: [], body: n.util.decode64(t2[3])};
          if (r2.push(c), t2[2]) {
            for (var u = t2[2].split(a), h = 0; t2 && h < u.length; ) {
              for (var f = u[h].replace(/\s+$/, ""), d = h + 1; d < u.length; ++d) {
                var l = u[d];
                if (!/\s/.test(l[0]))
                  break;
                f += l, h = d;
              }
              if (t2 = f.match(s2)) {
                for (var p = {name: t2[1], values: []}, y = t2[2].split(","), g = 0; g < y.length; ++g)
                  p.values.push(o(y[g]));
                if (c.procType)
                  if (c.contentDomain || p.name !== "Content-Domain")
                    if (c.dekInfo || p.name !== "DEK-Info")
                      c.headers.push(p);
                    else {
                      if (p.values.length === 0)
                        throw new Error('Invalid PEM formatted message. The "DEK-Info" header must have at least one subfield.');
                      c.dekInfo = {algorithm: y[0], parameters: y[1] || null};
                    }
                  else
                    c.contentDomain = y[0] || "";
                else {
                  if (p.name !== "Proc-Type")
                    throw new Error('Invalid PEM formatted message. The first encapsulated header must be "Proc-Type".');
                  if (p.values.length !== 2)
                    throw new Error('Invalid PEM formatted message. The "Proc-Type" header must have two subfields.');
                  c.procType = {version: y[0], type: y[1]};
                }
              }
              ++h;
            }
            if (c.procType === "ENCRYPTED" && !c.dekInfo)
              throw new Error('Invalid PEM formatted message. The "DEK-Info" header must be present if "Proc-Type" is "ENCRYPTED".');
          }
        }
        if (r2.length === 0)
          throw new Error("Invalid PEM formatted message.");
        return r2;
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      r(49), r(13);
      var i = e.exports = n.sha512 = n.sha512 || {};
      n.md.sha512 = n.md.algorithms.sha512 = i;
      var s = n.sha384 = n.sha512.sha384 = n.sha512.sha384 || {};
      s.create = function() {
        return i.create("SHA-384");
      }, n.md.sha384 = n.md.algorithms.sha384 = s, n.sha512.sha256 = n.sha512.sha256 || {create: function() {
        return i.create("SHA-512/256");
      }}, n.md["sha512/256"] = n.md.algorithms["sha512/256"] = n.sha512.sha256, n.sha512.sha224 = n.sha512.sha224 || {create: function() {
        return i.create("SHA-512/224");
      }}, n.md["sha512/224"] = n.md.algorithms["sha512/224"] = n.sha512.sha224, i.create = function(e2) {
        if (a || (o = String.fromCharCode(128), o += n.util.fillString(String.fromCharCode(0), 128), c = [[1116352408, 3609767458], [1899447441, 602891725], [3049323471, 3964484399], [3921009573, 2173295548], [961987163, 4081628472], [1508970993, 3053834265], [2453635748, 2937671579], [2870763221, 3664609560], [3624381080, 2734883394], [310598401, 1164996542], [607225278, 1323610764], [1426881987, 3590304994], [1925078388, 4068182383], [2162078206, 991336113], [2614888103, 633803317], [3248222580, 3479774868], [3835390401, 2666613458], [4022224774, 944711139], [264347078, 2341262773], [604807628, 2007800933], [770255983, 1495990901], [1249150122, 1856431235], [1555081692, 3175218132], [1996064986, 2198950837], [2554220882, 3999719339], [2821834349, 766784016], [2952996808, 2566594879], [3210313671, 3203337956], [3336571891, 1034457026], [3584528711, 2466948901], [113926993, 3758326383], [338241895, 168717936], [666307205, 1188179964], [773529912, 1546045734], [1294757372, 1522805485], [1396182291, 2643833823], [1695183700, 2343527390], [1986661051, 1014477480], [2177026350, 1206759142], [2456956037, 344077627], [2730485921, 1290863460], [2820302411, 3158454273], [3259730800, 3505952657], [3345764771, 106217008], [3516065817, 3606008344], [3600352804, 1432725776], [4094571909, 1467031594], [275423344, 851169720], [430227734, 3100823752], [506948616, 1363258195], [659060556, 3750685593], [883997877, 3785050280], [958139571, 3318307427], [1322822218, 3812723403], [1537002063, 2003034995], [1747873779, 3602036899], [1955562222, 1575990012], [2024104815, 1125592928], [2227730452, 2716904306], [2361852424, 442776044], [2428436474, 593698344], [2756734187, 3733110249], [3204031479, 2999351573], [3329325298, 3815920427], [3391569614, 3928383900], [3515267271, 566280711], [3940187606, 3454069534], [4118630271, 4000239992], [116418474, 1914138554], [174292421, 2731055270], [289380356, 3203993006], [460393269, 320620315], [685471733, 587496836], [852142971, 1086792851], [1017036298, 365543100], [1126000580, 2618297676], [1288033470, 3409855158], [1501505948, 4234509866], [1607167915, 987167468], [1816402316, 1246189591]], (u = {})["SHA-512"] = [[1779033703, 4089235720], [3144134277, 2227873595], [1013904242, 4271175723], [2773480762, 1595750129], [1359893119, 2917565137], [2600822924, 725511199], [528734635, 4215389547], [1541459225, 327033209]], u["SHA-384"] = [[3418070365, 3238371032], [1654270250, 914150663], [2438529370, 812702999], [355462360, 4144912697], [1731405415, 4290775857], [2394180231, 1750603025], [3675008525, 1694076839], [1203062813, 3204075428]], u["SHA-512/256"] = [[573645204, 4230739756], [2673172387, 3360449730], [596883563, 1867755857], [2520282905, 1497426621], [2519219938, 2827943907], [3193839141, 1401305490], [721525244, 746961066], [246885852, 2177182882]], u["SHA-512/224"] = [[2352822216, 424955298], [1944164710, 2312950998], [502970286, 855612546], [1738396948, 1479516111], [258812777, 2077511080], [2011393907, 79989058], [1067287976, 1780299464], [286451373, 2446758561]], a = true), e2 === void 0 && (e2 = "SHA-512"), !(e2 in u))
          throw new Error("Invalid SHA-512 algorithm: " + e2);
        for (var t2 = u[e2], r2 = null, i2 = n.util.createBuffer(), s2 = new Array(80), f = 0; f < 80; ++f)
          s2[f] = new Array(2);
        var d = 64;
        switch (e2) {
          case "SHA-384":
            d = 48;
            break;
          case "SHA-512/256":
            d = 32;
            break;
          case "SHA-512/224":
            d = 28;
        }
        var l = {algorithm: e2.replace("-", "").toLowerCase(), blockLength: 128, digestLength: d, messageLength: 0, fullMessageLength: null, messageLengthSize: 16, start: function() {
          l.messageLength = 0, l.fullMessageLength = l.messageLength128 = [];
          for (var e3 = l.messageLengthSize / 4, s3 = 0; s3 < e3; ++s3)
            l.fullMessageLength.push(0);
          i2 = n.util.createBuffer(), r2 = new Array(t2.length);
          for (s3 = 0; s3 < t2.length; ++s3)
            r2[s3] = t2[s3].slice(0);
          return l;
        }};
        return l.start(), l.update = function(e3, t3) {
          t3 === "utf8" && (e3 = n.util.encodeUtf8(e3));
          var o2 = e3.length;
          l.messageLength += o2, o2 = [o2 / 4294967296 >>> 0, o2 >>> 0];
          for (var a2 = l.fullMessageLength.length - 1; a2 >= 0; --a2)
            l.fullMessageLength[a2] += o2[1], o2[1] = o2[0] + (l.fullMessageLength[a2] / 4294967296 >>> 0), l.fullMessageLength[a2] = l.fullMessageLength[a2] >>> 0, o2[0] = o2[1] / 4294967296 >>> 0;
          return i2.putBytes(e3), h(r2, s2, i2), (i2.read > 2048 || i2.length() === 0) && i2.compact(), l;
        }, l.digest = function() {
          var t3 = n.util.createBuffer();
          t3.putBytes(i2.bytes());
          var a2, c2 = l.fullMessageLength[l.fullMessageLength.length - 1] + l.messageLengthSize & l.blockLength - 1;
          t3.putBytes(o.substr(0, l.blockLength - c2));
          for (var u2 = 8 * l.fullMessageLength[0], f2 = 0; f2 < l.fullMessageLength.length - 1; ++f2)
            u2 += (a2 = 8 * l.fullMessageLength[f2 + 1]) / 4294967296 >>> 0, t3.putInt32(u2 >>> 0), u2 = a2 >>> 0;
          t3.putInt32(u2);
          var d2 = new Array(r2.length);
          for (f2 = 0; f2 < r2.length; ++f2)
            d2[f2] = r2[f2].slice(0);
          h(d2, s2, t3);
          var p, y = n.util.createBuffer();
          p = e2 === "SHA-512" ? d2.length : e2 === "SHA-384" ? d2.length - 2 : d2.length - 4;
          for (f2 = 0; f2 < p; ++f2)
            y.putInt32(d2[f2][0]), f2 === p - 1 && e2 === "SHA-512/224" || y.putInt32(d2[f2][1]);
          return y;
        }, l;
      };
      var o = null, a = false, c = null, u = null;
      function h(e2, t2, r2) {
        for (var n2, i2, s2, o2, a2, u2, h2, f, d, l, p, y, g, b, m, v, w, _, E, S, A, I, k, R, T, C, M, x, N, P, B, O, D, L = r2.length(); L >= 128; ) {
          for (M = 0; M < 16; ++M)
            t2[M][0] = r2.getInt32() >>> 0, t2[M][1] = r2.getInt32() >>> 0;
          for (; M < 80; ++M)
            n2 = (((x = (P = t2[M - 2])[0]) >>> 19 | (N = P[1]) << 13) ^ (N >>> 29 | x << 3) ^ x >>> 6) >>> 0, i2 = ((x << 13 | N >>> 19) ^ (N << 3 | x >>> 29) ^ (x << 26 | N >>> 6)) >>> 0, s2 = (((x = (O = t2[M - 15])[0]) >>> 1 | (N = O[1]) << 31) ^ (x >>> 8 | N << 24) ^ x >>> 7) >>> 0, o2 = ((x << 31 | N >>> 1) ^ (x << 24 | N >>> 8) ^ (x << 25 | N >>> 7)) >>> 0, B = t2[M - 7], D = t2[M - 16], N = i2 + B[1] + o2 + D[1], t2[M][0] = n2 + B[0] + s2 + D[0] + (N / 4294967296 >>> 0) >>> 0, t2[M][1] = N >>> 0;
          for (p = e2[0][0], y = e2[0][1], g = e2[1][0], b = e2[1][1], m = e2[2][0], v = e2[2][1], w = e2[3][0], _ = e2[3][1], E = e2[4][0], S = e2[4][1], A = e2[5][0], I = e2[5][1], k = e2[6][0], R = e2[6][1], T = e2[7][0], C = e2[7][1], M = 0; M < 80; ++M)
            h2 = ((E >>> 14 | S << 18) ^ (E >>> 18 | S << 14) ^ (S >>> 9 | E << 23)) >>> 0, f = (k ^ E & (A ^ k)) >>> 0, a2 = ((p >>> 28 | y << 4) ^ (y >>> 2 | p << 30) ^ (y >>> 7 | p << 25)) >>> 0, u2 = ((p << 4 | y >>> 28) ^ (y << 30 | p >>> 2) ^ (y << 25 | p >>> 7)) >>> 0, d = (p & g | m & (p ^ g)) >>> 0, l = (y & b | v & (y ^ b)) >>> 0, N = C + (((E << 18 | S >>> 14) ^ (E << 14 | S >>> 18) ^ (S << 23 | E >>> 9)) >>> 0) + ((R ^ S & (I ^ R)) >>> 0) + c[M][1] + t2[M][1], n2 = T + h2 + f + c[M][0] + t2[M][0] + (N / 4294967296 >>> 0) >>> 0, i2 = N >>> 0, s2 = a2 + d + ((N = u2 + l) / 4294967296 >>> 0) >>> 0, o2 = N >>> 0, T = k, C = R, k = A, R = I, A = E, I = S, E = w + n2 + ((N = _ + i2) / 4294967296 >>> 0) >>> 0, S = N >>> 0, w = m, _ = v, m = g, v = b, g = p, b = y, p = n2 + s2 + ((N = i2 + o2) / 4294967296 >>> 0) >>> 0, y = N >>> 0;
          N = e2[0][1] + y, e2[0][0] = e2[0][0] + p + (N / 4294967296 >>> 0) >>> 0, e2[0][1] = N >>> 0, N = e2[1][1] + b, e2[1][0] = e2[1][0] + g + (N / 4294967296 >>> 0) >>> 0, e2[1][1] = N >>> 0, N = e2[2][1] + v, e2[2][0] = e2[2][0] + m + (N / 4294967296 >>> 0) >>> 0, e2[2][1] = N >>> 0, N = e2[3][1] + _, e2[3][0] = e2[3][0] + w + (N / 4294967296 >>> 0) >>> 0, e2[3][1] = N >>> 0, N = e2[4][1] + S, e2[4][0] = e2[4][0] + E + (N / 4294967296 >>> 0) >>> 0, e2[4][1] = N >>> 0, N = e2[5][1] + I, e2[5][0] = e2[5][0] + A + (N / 4294967296 >>> 0) >>> 0, e2[5][1] = N >>> 0, N = e2[6][1] + R, e2[6][0] = e2[6][0] + k + (N / 4294967296 >>> 0) >>> 0, e2[6][1] = N >>> 0, N = e2[7][1] + C, e2[7][0] = e2[7][0] + T + (N / 4294967296 >>> 0) >>> 0, e2[7][1] = N >>> 0, L -= 128;
        }
      }
    }, function(e, t, r) {
      "use strict";
      r(13), r(100);
      const n = r(8), i = r(6), s = r(5), o = r(27);
      t.bigIntegerToUintBase64url = (e2, t2) => {
        let r2 = Uint8Array.from(e2.abs().toByteArray());
        if (r2 = r2[0] === 0 ? r2.slice(1) : r2, t2 != null) {
          if (r2.length > t2)
            throw new Error("byte array longer than desired length");
          r2 = o([new Uint8Array(t2 - r2.length), r2]);
        }
        return s(r2, "base64url");
      }, t.base64urlToBigInteger = (e2) => {
        const r2 = t.base64urlToBuffer(e2);
        return new n.jsbn.BigInteger(s(r2, "base16"), 16);
      }, t.base64urlToBuffer = (e2, t2) => {
        let r2 = i(e2, "base64urlpad");
        if (t2 != null) {
          if (r2.length > t2)
            throw new Error("byte array longer than desired length");
          r2 = o([new Uint8Array(t2 - r2.length), r2]);
        }
        return r2;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(30), i = r(229);
      e.exports = {export: async function(e2, t2) {
        const r2 = i.create(), s = await r2.encrypt(e2, t2);
        return n.names.base64.encode(s);
      }};
    }, function(e, t, r) {
      "use strict";
      var n, i = t, s = r(146), o = r(233), a = r(32).assert;
      function c(e2) {
        e2.type === "short" ? this.curve = new o.short(e2) : e2.type === "edwards" ? this.curve = new o.edwards(e2) : this.curve = new o.mont(e2), this.g = this.curve.g, this.n = this.curve.n, this.hash = e2.hash, a(this.g.validate(), "Invalid curve"), a(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
      }
      function u(e2, t2) {
        Object.defineProperty(i, e2, {configurable: true, enumerable: true, get: function() {
          var r2 = new c(t2);
          return Object.defineProperty(i, e2, {configurable: true, enumerable: true, value: r2}), r2;
        }});
      }
      i.PresetCurve = c, u("p192", {type: "short", prime: "p192", p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff", a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc", b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1", n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831", hash: s.sha256, gRed: false, g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}), u("p224", {type: "short", prime: "p224", p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001", a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe", b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4", n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d", hash: s.sha256, gRed: false, g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}), u("p256", {type: "short", prime: null, p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff", a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc", b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b", n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551", hash: s.sha256, gRed: false, g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}), u("p384", {type: "short", prime: null, p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff", a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc", b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef", n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973", hash: s.sha384, gRed: false, g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}), u("p521", {type: "short", prime: null, p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff", a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc", b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00", n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409", hash: s.sha512, gRed: false, g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}), u("curve25519", {type: "mont", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "76d06", b: "1", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: s.sha256, gRed: false, g: ["9"]}), u("ed25519", {type: "edwards", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "-1", c: "1", d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: s.sha256, gRed: false, g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"]});
      try {
        n = r(478);
      } catch (h) {
        n = void 0;
      }
      u("secp256k1", {type: "short", prime: "k256", p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f", a: "0", b: "7", n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141", h: "1", hash: s.sha256, beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee", lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72", basis: [{a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3"}, {a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15"}], gRed: false, g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", n]});
    }, function(e, t, r) {
      "use strict";
      var n = t;
      n.utils = r(35), n.common = r(81), n.sha = r(472), n.ripemd = r(476), n.hmac = r(477), n.sha1 = n.sha.sha1, n.sha256 = n.sha.sha256, n.sha224 = n.sha.sha224, n.sha384 = n.sha.sha384, n.sha512 = n.sha.sha512, n.ripemd160 = n.ripemd.ripemd160;
    }, function(e, t, r) {
      "use strict";
      e.exports = {encode: r(501), decode: r(502), encodingLength: r(503)};
    }, function(e, t, r) {
      "use strict";
      const n = r(518), i = r(519), s = r(243);
      t.utf8Encoder = new i("utf8"), t.utf8Decoder = new s("utf8"), t.filter = (e2, t2) => async function* () {
        for await (const r2 of e2) {
          await t2(r2) && (yield r2);
        }
      }(), t.sortAll = (e2, t2) => async function* () {
        let r2 = [];
        for await (const t3 of e2)
          r2.push(t3);
        r2 = await t2(r2);
        for (const e3 of r2)
          yield e3;
      }(), t.take = (e2, t2) => async function* () {
        if (t2 <= 0)
          return;
        let r2 = 0;
        for await (const n2 of e2)
          if (yield n2, r2++, r2 >= t2)
            return;
      }(), t.map = (e2, t2) => async function* () {
        for await (const r2 of e2)
          yield t2(r2);
      }(), t.replaceStartWith = function(e2, t2) {
        const r2 = new RegExp("^" + t2);
        return e2.replace(r2, "");
      }, t.tmpdir = n;
    }, function(e, t, r) {
      "use strict";
      var n = r(521);
      function i(e2, t2, r2) {
        var i2 = this;
        this._started = n(), this._rescheduled = 0, this._scheduled = t2, this._args = r2, this._timer = setTimeout(function t3() {
          i2._rescheduled > 0 ? (i2._scheduled = i2._rescheduled - (n() - i2._started), i2._timer = setTimeout(t3, i2._scheduled), i2._rescheduled = 0) : e2.apply(null, i2._args);
        }, t2);
      }
      i.prototype.reschedule = function(e2) {
        var t2 = n();
        return !(t2 + e2 - (this._started + this._scheduled) < 0) && (this._started = t2, this._rescheduled = e2, true);
      }, i.prototype.clear = function() {
        clearTimeout(this._timer);
      }, e.exports = function() {
        if (typeof arguments[0] != "function")
          throw new Error("callback needed");
        if (typeof arguments[1] != "number")
          throw new Error("timeout needed");
        var e2;
        if (arguments.length > 0) {
          e2 = new Array(arguments.length - 2);
          for (var t2 = 0; t2 < e2.length; t2++)
            e2[t2] = arguments[t2 + 2];
        }
        return new i(arguments[0], arguments[1], e2);
      };
    }, function(e, t, r) {
      "use strict";
      r.r(t), r.d(t, "default", function() {
        return i;
      });
      let n = /(-?(?:\d+\.?\d*|\d*\.?\d+)(?:e[-+]?\d+)?)\s*([a-zµμ]*)/gi;
      function i(e2 = "", t2 = "ms") {
        var r2 = null;
        return (e2 = e2.replace(/(\d),(\d)/g, "$1$2")).replace(n, function(e3, t3, n2) {
          (n2 = i[n2] || i[n2.toLowerCase().replace(/s$/, "")]) && (r2 = (r2 || 0) + parseFloat(t3, 10) * n2);
        }), r2 && r2 / i[t2];
      }
      i.nanosecond = i.ns = 1e-6, i["\xB5s"] = i["\u03BCs"] = i.us = i.microsecond = 1e-3, i.millisecond = i.ms = 1, i.second = i.sec = i.s = 1e3 * i.ms, i.minute = i.min = i.m = 60 * i.s, i.hour = i.hr = i.h = 60 * i.m, i.day = i.d = 24 * i.h, i.week = i.wk = i.w = 7 * i.d, i.month = i.b = 30.4375 * i.d, i.year = i.yr = i.y = 365.25 * i.d;
    }, function(e, t, r) {
      "use strict";
      const {NotStartedError: n, AlreadyStartingError: i, AlreadyStartedError: s} = r(62), {withTimeout: o} = r(22);
      class a {
        static create({start: e2, stop: t2}) {
          return new a(e2, t2);
        }
        static async start(e2, t2) {
          const {state: r2, activate: n2} = e2;
          switch (r2.status) {
            case "stopped":
              try {
                const r3 = n2(t2);
                e2.state = {status: "starting", ready: r3};
                const i2 = await r3;
                return e2.state = {status: "started", value: i2}, i2;
              } catch (o2) {
                throw e2.state = {status: "stopped"}, o2;
              }
            case "starting":
              throw new i();
            case "started":
              throw new s();
            case "stopping":
              return await r2.ready, await a.start(e2, t2);
            default:
              return a.panic(e2);
          }
        }
        static async stop(e2) {
          const {state: t2, deactivate: r2} = e2;
          switch (t2.status) {
            case "stopped":
              break;
            case "starting":
              try {
                await t2.ready;
              } catch (n2) {
              }
              return await a.stop(e2);
            case "stopping":
              return await t2.ready;
            case "started":
              r2 && await r2(t2.value), e2.state = {status: "stopped"};
              break;
            default:
              a.panic(t2);
          }
        }
        static try({state: e2}) {
          switch (e2.status) {
            case "started":
              return e2.value;
            default:
              return null;
          }
        }
        static async use({state: e2}, t2) {
          switch (e2.status) {
            case "started":
              return e2.value;
            case "starting":
              return await o(e2.ready, t2);
            default:
              throw new n();
          }
        }
        static panic({state: e2}) {
          const t2 = JSON.stringify({status: e2.status});
          throw RangeError(`Service in invalid state ${t2}, should never happen if you see this please report a bug`);
        }
        constructor(e2, t2) {
          this.activate = e2, this.deactivate = t2, this.state = {status: "stopped"};
        }
        async use(e2) {
          return await a.use(this, e2);
        }
        try() {
          return a.try(this);
        }
      }
      e.exports = a;
    }, function(e, t, r) {
      "use strict";
      e.exports = (e2, t2) => (t2 = t2 || (() => {
      }), e2.then((e3) => new Promise((e4) => {
        e4(t2());
      }).then(() => e3), (e3) => new Promise((e4) => {
        e4(t2());
      }).then(() => {
        throw e3;
      })));
    }, function(e, t, r) {
      "use strict";
      t.util = r(258), t.resolver = r(555), t.codec = t.util.codec, t.defaultHashAlg = t.util.defaultHashAlg;
    }, function(e, t, r) {
      "use strict";
      const {Buffer: n} = r(3), i = r(29).BigNumber, s = r(108), o = s.SHIFT32, a = s.SHIFT16;
      t.parseHalf = function(e2) {
        var t2, r2, n2;
        return n2 = 128 & e2[0] ? -1 : 1, t2 = (124 & e2[0]) >> 2, r2 = (3 & e2[0]) << 8 | e2[1], t2 ? t2 === 31 ? n2 * (r2 ? NaN : Infinity) : n2 * Math.pow(2, t2 - 25) * (1024 + r2) : 5960464477539063e-23 * n2 * r2;
      }, t.arrayBufferToBignumber = function(e2) {
        const t2 = e2.byteLength;
        let r2 = "";
        for (let i2 = 0; i2 < t2; i2++)
          r2 += (n2 = e2[i2]) < 16 ? "0" + n2.toString(16) : n2.toString(16);
        var n2;
        return new i(r2, 16);
      }, t.buildMap = (e2) => {
        const t2 = new Map(), r2 = Object.keys(e2), n2 = r2.length;
        for (let i2 = 0; i2 < n2; i2++)
          t2.set(r2[i2], e2[r2[i2]]);
        return t2;
      }, t.buildInt32 = (e2, t2) => e2 * a + t2, t.buildInt64 = (e2, r2, n2, s2) => {
        const a2 = t.buildInt32(e2, r2), c = t.buildInt32(n2, s2);
        return a2 > 2097151 ? new i(a2).times(o).plus(c) : a2 * o + c;
      }, t.writeHalf = function(e2, t2) {
        const r2 = n.allocUnsafe(4);
        r2.writeFloatBE(t2, 0);
        const i2 = r2.readUInt32BE(0);
        if ((8191 & i2) != 0)
          return false;
        var s2 = i2 >> 16 & 32768;
        const o2 = i2 >> 23 & 255, a2 = 8388607 & i2;
        if (o2 >= 113 && o2 <= 142)
          s2 += (o2 - 112 << 10) + (a2 >> 13);
        else {
          if (!(o2 >= 103 && o2 < 113))
            return false;
          if (a2 & (1 << 126 - o2) - 1)
            return false;
          s2 += a2 + 8388608 >> 126 - o2;
        }
        return e2.writeUInt16BE(s2, 0), true;
      }, t.keySorter = function(e2, t2) {
        var r2 = e2[0].byteLength, n2 = t2[0].byteLength;
        return r2 > n2 ? 1 : n2 > r2 ? -1 : e2[0].compare(t2[0]);
      }, t.isNegativeZero = (e2) => e2 === 0 && 1 / e2 < 0, t.nextPowerOf2 = (e2) => {
        let t2 = 0;
        if (e2 && !(e2 & e2 - 1))
          return e2;
        for (; e2 !== 0; )
          e2 >>= 1, t2 += 1;
        return 1 << t2;
      };
    }, function(e, t, r) {
      "use strict";
      (t = e.exports = r(266)).Stream = t, t.Readable = t, t.Writable = r(157), t.Duplex = r(53), t.Transform = r(270), t.PassThrough = r(561);
    }, function(e, t, r) {
      "use strict";
      var n = r(3), i = n.Buffer;
      function s(e2, t2) {
        for (var r2 in e2)
          t2[r2] = e2[r2];
      }
      function o(e2, t2, r2) {
        return i(e2, t2, r2);
      }
      i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? e.exports = n : (s(n, t), t.Buffer = o), s(i, o), o.from = function(e2, t2, r2) {
        if (typeof e2 == "number")
          throw new TypeError("Argument must not be a number");
        return i(e2, t2, r2);
      }, o.alloc = function(e2, t2, r2) {
        if (typeof e2 != "number")
          throw new TypeError("Argument must be a number");
        var n2 = i(e2);
        return t2 !== void 0 ? typeof r2 == "string" ? n2.fill(t2, r2) : n2.fill(t2) : n2.fill(0), n2;
      }, o.allocUnsafe = function(e2) {
        if (typeof e2 != "number")
          throw new TypeError("Argument must be a number");
        return i(e2);
      }, o.allocUnsafeSlow = function(e2) {
        if (typeof e2 != "number")
          throw new TypeError("Argument must be a number");
        return n.SlowBuffer(e2);
      };
    }, function(e, t, r) {
      "use strict";
      (function(t2, n) {
        var i = r(109);
        function s(e2) {
          var t3 = this;
          this.next = null, this.entry = null, this.finish = function() {
            !function(e3, t4, r2) {
              var n2 = e3.entry;
              e3.entry = null;
              for (; n2; ) {
                var i2 = n2.callback;
                t4.pendingcb--, i2(r2), n2 = n2.next;
              }
              t4.corkedRequestsFree ? t4.corkedRequestsFree.next = e3 : t4.corkedRequestsFree = e3;
            }(t3, e2);
          };
        }
        e.exports = b;
        var o, a = !t2.browser && ["v0.10", "v0.9."].indexOf(t2.version.slice(0, 5)) > -1 ? setImmediate : i.nextTick;
        b.WritableState = g;
        var c = Object.create(r(85));
        c.inherits = r(18);
        var u = {deprecate: r(269)}, h = r(267), f = r(156).Buffer, d = n.Uint8Array || function() {
        };
        var l, p = r(268);
        function y() {
        }
        function g(e2, t3) {
          o = o || r(53), e2 = e2 || {};
          var n2 = t3 instanceof o;
          this.objectMode = !!e2.objectMode, n2 && (this.objectMode = this.objectMode || !!e2.writableObjectMode);
          var c2 = e2.highWaterMark, u2 = e2.writableHighWaterMark, h2 = this.objectMode ? 16 : 16384;
          this.highWaterMark = c2 || c2 === 0 ? c2 : n2 && (u2 || u2 === 0) ? u2 : h2, this.highWaterMark = Math.floor(this.highWaterMark), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
          var f2 = e2.decodeStrings === false;
          this.decodeStrings = !f2, this.defaultEncoding = e2.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(e3) {
            !function(e4, t4) {
              var r2 = e4._writableState, n3 = r2.sync, s2 = r2.writecb;
              if (function(e5) {
                e5.writing = false, e5.writecb = null, e5.length -= e5.writelen, e5.writelen = 0;
              }(r2), t4)
                !function(e5, t5, r3, n4, s3) {
                  --t5.pendingcb, r3 ? (i.nextTick(s3, n4), i.nextTick(S, e5, t5), e5._writableState.errorEmitted = true, e5.emit("error", n4)) : (s3(n4), e5._writableState.errorEmitted = true, e5.emit("error", n4), S(e5, t5));
                }(e4, r2, n3, t4, s2);
              else {
                var o2 = _(r2);
                o2 || r2.corked || r2.bufferProcessing || !r2.bufferedRequest || w(e4, r2), n3 ? a(v, e4, r2, o2, s2) : v(e4, r2, o2, s2);
              }
            }(t3, e3);
          }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.bufferedRequestCount = 0, this.corkedRequestsFree = new s(this);
        }
        function b(e2) {
          if (o = o || r(53), !(l.call(b, this) || this instanceof o))
            return new b(e2);
          this._writableState = new g(e2, this), this.writable = true, e2 && (typeof e2.write == "function" && (this._write = e2.write), typeof e2.writev == "function" && (this._writev = e2.writev), typeof e2.destroy == "function" && (this._destroy = e2.destroy), typeof e2.final == "function" && (this._final = e2.final)), h.call(this);
        }
        function m(e2, t3, r2, n2, i2, s2, o2) {
          t3.writelen = n2, t3.writecb = o2, t3.writing = true, t3.sync = true, r2 ? e2._writev(i2, t3.onwrite) : e2._write(i2, s2, t3.onwrite), t3.sync = false;
        }
        function v(e2, t3, r2, n2) {
          r2 || function(e3, t4) {
            t4.length === 0 && t4.needDrain && (t4.needDrain = false, e3.emit("drain"));
          }(e2, t3), t3.pendingcb--, n2(), S(e2, t3);
        }
        function w(e2, t3) {
          t3.bufferProcessing = true;
          var r2 = t3.bufferedRequest;
          if (e2._writev && r2 && r2.next) {
            var n2 = t3.bufferedRequestCount, i2 = new Array(n2), o2 = t3.corkedRequestsFree;
            o2.entry = r2;
            for (var a2 = 0, c2 = true; r2; )
              i2[a2] = r2, r2.isBuf || (c2 = false), r2 = r2.next, a2 += 1;
            i2.allBuffers = c2, m(e2, t3, true, t3.length, i2, "", o2.finish), t3.pendingcb++, t3.lastBufferedRequest = null, o2.next ? (t3.corkedRequestsFree = o2.next, o2.next = null) : t3.corkedRequestsFree = new s(t3), t3.bufferedRequestCount = 0;
          } else {
            for (; r2; ) {
              var u2 = r2.chunk, h2 = r2.encoding, f2 = r2.callback;
              if (m(e2, t3, false, t3.objectMode ? 1 : u2.length, u2, h2, f2), r2 = r2.next, t3.bufferedRequestCount--, t3.writing)
                break;
            }
            r2 === null && (t3.lastBufferedRequest = null);
          }
          t3.bufferedRequest = r2, t3.bufferProcessing = false;
        }
        function _(e2) {
          return e2.ending && e2.length === 0 && e2.bufferedRequest === null && !e2.finished && !e2.writing;
        }
        function E(e2, t3) {
          e2._final(function(r2) {
            t3.pendingcb--, r2 && e2.emit("error", r2), t3.prefinished = true, e2.emit("prefinish"), S(e2, t3);
          });
        }
        function S(e2, t3) {
          var r2 = _(t3);
          return r2 && (!function(e3, t4) {
            t4.prefinished || t4.finalCalled || (typeof e3._final == "function" ? (t4.pendingcb++, t4.finalCalled = true, i.nextTick(E, e3, t4)) : (t4.prefinished = true, e3.emit("prefinish")));
          }(e2, t3), t3.pendingcb === 0 && (t3.finished = true, e2.emit("finish"))), r2;
        }
        c.inherits(b, h), g.prototype.getBuffer = function() {
          for (var e2 = this.bufferedRequest, t3 = []; e2; )
            t3.push(e2), e2 = e2.next;
          return t3;
        }, function() {
          try {
            Object.defineProperty(g.prototype, "buffer", {get: u.deprecate(function() {
              return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")});
          } catch (e2) {
          }
        }(), typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (l = Function.prototype[Symbol.hasInstance], Object.defineProperty(b, Symbol.hasInstance, {value: function(e2) {
          return !!l.call(this, e2) || this === b && (e2 && e2._writableState instanceof g);
        }})) : l = function(e2) {
          return e2 instanceof this;
        }, b.prototype.pipe = function() {
          this.emit("error", new Error("Cannot pipe, not readable"));
        }, b.prototype.write = function(e2, t3, r2) {
          var n2, s2 = this._writableState, o2 = false, a2 = !s2.objectMode && (n2 = e2, f.isBuffer(n2) || n2 instanceof d);
          return a2 && !f.isBuffer(e2) && (e2 = function(e3) {
            return f.from(e3);
          }(e2)), typeof t3 == "function" && (r2 = t3, t3 = null), a2 ? t3 = "buffer" : t3 || (t3 = s2.defaultEncoding), typeof r2 != "function" && (r2 = y), s2.ended ? function(e3, t4) {
            var r3 = new Error("write after end");
            e3.emit("error", r3), i.nextTick(t4, r3);
          }(this, r2) : (a2 || function(e3, t4, r3, n3) {
            var s3 = true, o3 = false;
            return r3 === null ? o3 = new TypeError("May not write null values to stream") : typeof r3 == "string" || r3 === void 0 || t4.objectMode || (o3 = new TypeError("Invalid non-string/buffer chunk")), o3 && (e3.emit("error", o3), i.nextTick(n3, o3), s3 = false), s3;
          }(this, s2, e2, r2)) && (s2.pendingcb++, o2 = function(e3, t4, r3, n3, i2, s3) {
            if (!r3) {
              var o3 = function(e4, t5, r4) {
                e4.objectMode || e4.decodeStrings === false || typeof t5 != "string" || (t5 = f.from(t5, r4));
                return t5;
              }(t4, n3, i2);
              n3 !== o3 && (r3 = true, i2 = "buffer", n3 = o3);
            }
            var a3 = t4.objectMode ? 1 : n3.length;
            t4.length += a3;
            var c2 = t4.length < t4.highWaterMark;
            c2 || (t4.needDrain = true);
            if (t4.writing || t4.corked) {
              var u2 = t4.lastBufferedRequest;
              t4.lastBufferedRequest = {chunk: n3, encoding: i2, isBuf: r3, callback: s3, next: null}, u2 ? u2.next = t4.lastBufferedRequest : t4.bufferedRequest = t4.lastBufferedRequest, t4.bufferedRequestCount += 1;
            } else
              m(e3, t4, false, a3, n3, i2, s3);
            return c2;
          }(this, s2, a2, e2, t3, r2)), o2;
        }, b.prototype.cork = function() {
          this._writableState.corked++;
        }, b.prototype.uncork = function() {
          var e2 = this._writableState;
          e2.corked && (e2.corked--, e2.writing || e2.corked || e2.finished || e2.bufferProcessing || !e2.bufferedRequest || w(this, e2));
        }, b.prototype.setDefaultEncoding = function(e2) {
          if (typeof e2 == "string" && (e2 = e2.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e2 + "").toLowerCase()) > -1))
            throw new TypeError("Unknown encoding: " + e2);
          return this._writableState.defaultEncoding = e2, this;
        }, Object.defineProperty(b.prototype, "writableHighWaterMark", {enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        }}), b.prototype._write = function(e2, t3, r2) {
          r2(new Error("_write() is not implemented"));
        }, b.prototype._writev = null, b.prototype.end = function(e2, t3, r2) {
          var n2 = this._writableState;
          typeof e2 == "function" ? (r2 = e2, e2 = null, t3 = null) : typeof t3 == "function" && (r2 = t3, t3 = null), e2 != null && this.write(e2, t3), n2.corked && (n2.corked = 1, this.uncork()), n2.ending || n2.finished || function(e3, t4, r3) {
            t4.ending = true, S(e3, t4), r3 && (t4.finished ? i.nextTick(r3) : e3.once("finish", r3));
            t4.ended = true, e3.writable = false;
          }(this, n2, r2);
        }, Object.defineProperty(b.prototype, "destroyed", {get: function() {
          return this._writableState !== void 0 && this._writableState.destroyed;
        }, set: function(e2) {
          this._writableState && (this._writableState.destroyed = e2);
        }}), b.prototype.destroy = p.destroy, b.prototype._undestroy = p.undestroy, b.prototype._destroy = function(e2, t3) {
          this.end(), t3(e2);
        };
      }).call(this, r(10), r(12));
    }, function(e, t, r) {
      "use strict";
      const n = r(29).BigNumber, i = r(65), s = r(159), o = new n(-1), a = new n(10), c = new n(2);
      class u {
        constructor(e2, t2, r2) {
          if (this.tag = e2, this.value = t2, this.err = r2, typeof this.tag != "number")
            throw new Error("Invalid tag type (" + typeof this.tag + ")");
          if (this.tag < 0 || (0 | this.tag) !== this.tag)
            throw new Error("Tag must be a positive integer: " + this.tag);
        }
        toString() {
          return `${this.tag}(${JSON.stringify(this.value)})`;
        }
        encodeCBOR(e2) {
          return e2._pushTag(this.tag), e2.pushAny(this.value);
        }
        convert(e2) {
          let t2 = e2 != null ? e2[this.tag] : void 0;
          if (typeof t2 != "function" && (t2 = u["_tag_" + this.tag], typeof t2 != "function"))
            return this;
          try {
            return t2.call(u, this.value);
          } catch (r2) {
            return this.err = r2, this;
          }
        }
        static _tag_0(e2) {
          return new Date(e2);
        }
        static _tag_1(e2) {
          return new Date(1e3 * e2);
        }
        static _tag_2(e2) {
          return i.bufferToBignumber(e2);
        }
        static _tag_3(e2) {
          return o.minus(i.bufferToBignumber(e2));
        }
        static _tag_4(e2) {
          return a.pow(e2[0]).times(e2[1]);
        }
        static _tag_5(e2) {
          return c.pow(e2[0]).times(e2[1]);
        }
        static _tag_32(e2) {
          return s.parse(e2);
        }
        static _tag_35(e2) {
          return new RegExp(e2);
        }
      }
      e.exports = u;
    }, function(e, t, r) {
      "use strict";
      var n = r(569), i = r(570);
      function s() {
        this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, this.path = null, this.href = null;
      }
      t.parse = v, t.resolve = function(e2, t2) {
        return v(e2, false, true).resolve(t2);
      }, t.resolveObject = function(e2, t2) {
        return e2 ? v(e2, false, true).resolveObject(t2) : t2;
      }, t.format = function(e2) {
        i.isString(e2) && (e2 = v(e2));
        return e2 instanceof s ? e2.format() : s.prototype.format.call(e2);
      }, t.Url = s;
      var o = /^([a-z0-9.+-]+:)/i, a = /:[0-9]*$/, c = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, u = ["{", "}", "|", "\\", "^", "`"].concat(["<", ">", '"', "`", " ", "\r", "\n", "	"]), h = ["'"].concat(u), f = ["%", "/", "?", ";", "#"].concat(h), d = ["/", "?", "#"], l = /^[+a-z0-9A-Z_-]{0,63}$/, p = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, y = {javascript: true, "javascript:": true}, g = {javascript: true, "javascript:": true}, b = {http: true, https: true, ftp: true, gopher: true, file: true, "http:": true, "https:": true, "ftp:": true, "gopher:": true, "file:": true}, m = r(571);
      function v(e2, t2, r2) {
        if (e2 && i.isObject(e2) && e2 instanceof s)
          return e2;
        var n2 = new s();
        return n2.parse(e2, t2, r2), n2;
      }
      s.prototype.parse = function(e2, t2, r2) {
        if (!i.isString(e2))
          throw new TypeError("Parameter 'url' must be a string, not " + typeof e2);
        var s2 = e2.indexOf("?"), a2 = s2 !== -1 && s2 < e2.indexOf("#") ? "?" : "#", u2 = e2.split(a2);
        u2[0] = u2[0].replace(/\\/g, "/");
        var v2 = e2 = u2.join(a2);
        if (v2 = v2.trim(), !r2 && e2.split("#").length === 1) {
          var w = c.exec(v2);
          if (w)
            return this.path = v2, this.href = v2, this.pathname = w[1], w[2] ? (this.search = w[2], this.query = t2 ? m.parse(this.search.substr(1)) : this.search.substr(1)) : t2 && (this.search = "", this.query = {}), this;
        }
        var _ = o.exec(v2);
        if (_) {
          var E = (_ = _[0]).toLowerCase();
          this.protocol = E, v2 = v2.substr(_.length);
        }
        if (r2 || _ || v2.match(/^\/\/[^@\/]+@[^@\/]+/)) {
          var S = v2.substr(0, 2) === "//";
          !S || _ && g[_] || (v2 = v2.substr(2), this.slashes = true);
        }
        if (!g[_] && (S || _ && !b[_])) {
          for (var A, I, k = -1, R = 0; R < d.length; R++) {
            (T = v2.indexOf(d[R])) !== -1 && (k === -1 || T < k) && (k = T);
          }
          (I = k === -1 ? v2.lastIndexOf("@") : v2.lastIndexOf("@", k)) !== -1 && (A = v2.slice(0, I), v2 = v2.slice(I + 1), this.auth = decodeURIComponent(A)), k = -1;
          for (R = 0; R < f.length; R++) {
            var T;
            (T = v2.indexOf(f[R])) !== -1 && (k === -1 || T < k) && (k = T);
          }
          k === -1 && (k = v2.length), this.host = v2.slice(0, k), v2 = v2.slice(k), this.parseHost(), this.hostname = this.hostname || "";
          var C = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
          if (!C)
            for (var M = this.hostname.split(/\./), x = (R = 0, M.length); R < x; R++) {
              var N = M[R];
              if (N && !N.match(l)) {
                for (var P = "", B = 0, O = N.length; B < O; B++)
                  N.charCodeAt(B) > 127 ? P += "x" : P += N[B];
                if (!P.match(l)) {
                  var D = M.slice(0, R), L = M.slice(R + 1), U = N.match(p);
                  U && (D.push(U[1]), L.unshift(U[2])), L.length && (v2 = "/" + L.join(".") + v2), this.hostname = D.join(".");
                  break;
                }
              }
            }
          this.hostname.length > 255 ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(), C || (this.hostname = n.toASCII(this.hostname));
          var j = this.port ? ":" + this.port : "", F = this.hostname || "";
          this.host = F + j, this.href += this.host, C && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), v2[0] !== "/" && (v2 = "/" + v2));
        }
        if (!y[E])
          for (R = 0, x = h.length; R < x; R++) {
            var z = h[R];
            if (v2.indexOf(z) !== -1) {
              var q = encodeURIComponent(z);
              q === z && (q = escape(z)), v2 = v2.split(z).join(q);
            }
          }
        var K = v2.indexOf("#");
        K !== -1 && (this.hash = v2.substr(K), v2 = v2.slice(0, K));
        var V = v2.indexOf("?");
        if (V !== -1 ? (this.search = v2.substr(V), this.query = v2.substr(V + 1), t2 && (this.query = m.parse(this.query)), v2 = v2.slice(0, V)) : t2 && (this.search = "", this.query = {}), v2 && (this.pathname = v2), b[E] && this.hostname && !this.pathname && (this.pathname = "/"), this.pathname || this.search) {
          j = this.pathname || "";
          var H = this.search || "";
          this.path = j + H;
        }
        return this.href = this.format(), this;
      }, s.prototype.format = function() {
        var e2 = this.auth || "";
        e2 && (e2 = (e2 = encodeURIComponent(e2)).replace(/%3A/i, ":"), e2 += "@");
        var t2 = this.protocol || "", r2 = this.pathname || "", n2 = this.hash || "", s2 = false, o2 = "";
        this.host ? s2 = e2 + this.host : this.hostname && (s2 = e2 + (this.hostname.indexOf(":") === -1 ? this.hostname : "[" + this.hostname + "]"), this.port && (s2 += ":" + this.port)), this.query && i.isObject(this.query) && Object.keys(this.query).length && (o2 = m.stringify(this.query));
        var a2 = this.search || o2 && "?" + o2 || "";
        return t2 && t2.substr(-1) !== ":" && (t2 += ":"), this.slashes || (!t2 || b[t2]) && s2 !== false ? (s2 = "//" + (s2 || ""), r2 && r2.charAt(0) !== "/" && (r2 = "/" + r2)) : s2 || (s2 = ""), n2 && n2.charAt(0) !== "#" && (n2 = "#" + n2), a2 && a2.charAt(0) !== "?" && (a2 = "?" + a2), t2 + s2 + (r2 = r2.replace(/[?#]/g, function(e3) {
          return encodeURIComponent(e3);
        })) + (a2 = a2.replace("#", "%23")) + n2;
      }, s.prototype.resolve = function(e2) {
        return this.resolveObject(v(e2, false, true)).format();
      }, s.prototype.resolveObject = function(e2) {
        if (i.isString(e2)) {
          var t2 = new s();
          t2.parse(e2, false, true), e2 = t2;
        }
        for (var r2 = new s(), n2 = Object.keys(this), o2 = 0; o2 < n2.length; o2++) {
          var a2 = n2[o2];
          r2[a2] = this[a2];
        }
        if (r2.hash = e2.hash, e2.href === "")
          return r2.href = r2.format(), r2;
        if (e2.slashes && !e2.protocol) {
          for (var c2 = Object.keys(e2), u2 = 0; u2 < c2.length; u2++) {
            var h2 = c2[u2];
            h2 !== "protocol" && (r2[h2] = e2[h2]);
          }
          return b[r2.protocol] && r2.hostname && !r2.pathname && (r2.path = r2.pathname = "/"), r2.href = r2.format(), r2;
        }
        if (e2.protocol && e2.protocol !== r2.protocol) {
          if (!b[e2.protocol]) {
            for (var f2 = Object.keys(e2), d2 = 0; d2 < f2.length; d2++) {
              var l2 = f2[d2];
              r2[l2] = e2[l2];
            }
            return r2.href = r2.format(), r2;
          }
          if (r2.protocol = e2.protocol, e2.host || g[e2.protocol])
            r2.pathname = e2.pathname;
          else {
            for (var p2 = (e2.pathname || "").split("/"); p2.length && !(e2.host = p2.shift()); )
              ;
            e2.host || (e2.host = ""), e2.hostname || (e2.hostname = ""), p2[0] !== "" && p2.unshift(""), p2.length < 2 && p2.unshift(""), r2.pathname = p2.join("/");
          }
          if (r2.search = e2.search, r2.query = e2.query, r2.host = e2.host || "", r2.auth = e2.auth, r2.hostname = e2.hostname || e2.host, r2.port = e2.port, r2.pathname || r2.search) {
            var y2 = r2.pathname || "", m2 = r2.search || "";
            r2.path = y2 + m2;
          }
          return r2.slashes = r2.slashes || e2.slashes, r2.href = r2.format(), r2;
        }
        var v2 = r2.pathname && r2.pathname.charAt(0) === "/", w = e2.host || e2.pathname && e2.pathname.charAt(0) === "/", _ = w || v2 || r2.host && e2.pathname, E = _, S = r2.pathname && r2.pathname.split("/") || [], A = (p2 = e2.pathname && e2.pathname.split("/") || [], r2.protocol && !b[r2.protocol]);
        if (A && (r2.hostname = "", r2.port = null, r2.host && (S[0] === "" ? S[0] = r2.host : S.unshift(r2.host)), r2.host = "", e2.protocol && (e2.hostname = null, e2.port = null, e2.host && (p2[0] === "" ? p2[0] = e2.host : p2.unshift(e2.host)), e2.host = null), _ = _ && (p2[0] === "" || S[0] === "")), w)
          r2.host = e2.host || e2.host === "" ? e2.host : r2.host, r2.hostname = e2.hostname || e2.hostname === "" ? e2.hostname : r2.hostname, r2.search = e2.search, r2.query = e2.query, S = p2;
        else if (p2.length)
          S || (S = []), S.pop(), S = S.concat(p2), r2.search = e2.search, r2.query = e2.query;
        else if (!i.isNullOrUndefined(e2.search)) {
          if (A)
            r2.hostname = r2.host = S.shift(), (C = !!(r2.host && r2.host.indexOf("@") > 0) && r2.host.split("@")) && (r2.auth = C.shift(), r2.host = r2.hostname = C.shift());
          return r2.search = e2.search, r2.query = e2.query, i.isNull(r2.pathname) && i.isNull(r2.search) || (r2.path = (r2.pathname ? r2.pathname : "") + (r2.search ? r2.search : "")), r2.href = r2.format(), r2;
        }
        if (!S.length)
          return r2.pathname = null, r2.search ? r2.path = "/" + r2.search : r2.path = null, r2.href = r2.format(), r2;
        for (var I = S.slice(-1)[0], k = (r2.host || e2.host || S.length > 1) && (I === "." || I === "..") || I === "", R = 0, T = S.length; T >= 0; T--)
          (I = S[T]) === "." ? S.splice(T, 1) : I === ".." ? (S.splice(T, 1), R++) : R && (S.splice(T, 1), R--);
        if (!_ && !E)
          for (; R--; R)
            S.unshift("..");
        !_ || S[0] === "" || S[0] && S[0].charAt(0) === "/" || S.unshift(""), k && S.join("/").substr(-1) !== "/" && S.push("");
        var C, M = S[0] === "" || S[0] && S[0].charAt(0) === "/";
        A && (r2.hostname = r2.host = M ? "" : S.length ? S.shift() : "", (C = !!(r2.host && r2.host.indexOf("@") > 0) && r2.host.split("@")) && (r2.auth = C.shift(), r2.host = r2.hostname = C.shift()));
        return (_ = _ || r2.host && S.length) && !M && S.unshift(""), S.length ? r2.pathname = S.join("/") : (r2.pathname = null, r2.path = null), i.isNull(r2.pathname) && i.isNull(r2.search) || (r2.path = (r2.pathname ? r2.pathname : "") + (r2.search ? r2.search : "")), r2.auth = e2.auth || r2.auth, r2.slashes = r2.slashes || e2.slashes, r2.href = r2.format(), r2;
      }, s.prototype.parseHost = function() {
        var e2 = this.host, t2 = a.exec(e2);
        t2 && ((t2 = t2[0]) !== ":" && (this.port = t2.substr(1)), e2 = e2.substr(0, e2.length - t2.length)), e2 && (this.hostname = e2);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(4);
      function s(e2) {
        const t2 = {path: e2.path == null ? e2.cid : "" + e2.path, recursive: e2.recursive !== false};
        return e2.metadata != null && (t2.metadata = e2.metadata), t2;
      }
      e.exports = async function* (e2) {
        if (e2 == null)
          throw n(new Error("Unexpected input: " + e2), "ERR_UNEXPECTED_INPUT");
        if (i.isCID(e2))
          yield s({cid: e2});
        else {
          if (!(e2 instanceof String || typeof e2 == "string")) {
            if (e2.cid != null || e2.path != null)
              return yield s(e2);
            if (e2[Symbol.iterator]) {
              const t2 = e2[Symbol.iterator](), r2 = t2.next();
              if (r2.done)
                return t2;
              if (i.isCID(r2.value) || r2.value instanceof String || typeof r2.value == "string") {
                yield s({cid: r2.value});
                for (const e3 of t2)
                  yield s({cid: e3});
                return;
              }
              if (r2.value.cid != null || r2.value.path != null) {
                yield s(r2.value);
                for (const e3 of t2)
                  yield s(e3);
                return;
              }
              throw n(new Error("Unexpected input: " + typeof e2), "ERR_UNEXPECTED_INPUT");
            }
            if (e2[Symbol.asyncIterator]) {
              const t2 = e2[Symbol.asyncIterator](), r2 = await t2.next();
              if (r2.done)
                return t2;
              if (i.isCID(r2.value) || r2.value instanceof String || typeof r2.value == "string") {
                yield s({cid: r2.value});
                for await (const e3 of t2)
                  yield s({cid: e3});
                return;
              }
              if (r2.value.cid != null || r2.value.path != null) {
                yield s(r2.value);
                for await (const e3 of t2)
                  yield s(e3);
                return;
              }
              throw n(new Error("Unexpected input: " + typeof e2), "ERR_UNEXPECTED_INPUT");
            }
            throw n(new Error("Unexpected input: " + typeof e2), "ERR_UNEXPECTED_INPUT");
          }
          yield s({path: e2});
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(112), i = r(589), s = r(593), o = r(594), a = r(595), c = r(272);
      t.KeytransformDatastore = n, t.ShardingDatastore = i, t.MountDatastore = s, t.TieredDatastore = o, t.NamespaceDatastore = a, t.shard = c;
    }, function(e, t, r) {
      "use strict";
      const n = r(275), i = r(0);
      t.getPubsubRouting = (e2, t2) => {
        if (!e2 || !t2 || !t2.ipnsPubsub)
          throw i(new Error("IPNS pubsub subsystem is not enabled"), "ERR_IPNS_PUBSUB_NOT_ENABLED");
        if (n.isIpnsPubsubDatastore(e2.routing))
          return e2.routing;
        const r2 = (e2.routing.stores || []).find((e3) => n.isIpnsPubsubDatastore(e3));
        if (!r2)
          throw i(new Error("IPNS pubsub datastore not found"), "ERR_PUBSUB_DATASTORE_NOT_FOUND");
        return r2;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = () => ({Addresses: {Swarm: [], Announce: [], API: "", Gateway: "", Delegates: ["/dns4/node0.delegate.ipfs.io/tcp/443/https", "/dns4/node1.delegate.ipfs.io/tcp/443/https", "/dns4/node2.delegate.ipfs.io/tcp/443/https", "/dns4/node3.delegate.ipfs.io/tcp/443/https"]}, Discovery: {MDNS: {Enabled: false, Interval: 10}, webRTCStar: {Enabled: true}}, Bootstrap: ["/dnsaddr/bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN", "/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb", "/dnsaddr/bootstrap.libp2p.io/p2p/QmZa1sAxajnQjVM8WjWXoMbmPd7NsWhfKsPkErzpm9wGkp", "/dnsaddr/bootstrap.libp2p.io/p2p/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa", "/dnsaddr/bootstrap.libp2p.io/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt", "/dns4/node0.preload.ipfs.io/tcp/443/wss/p2p/QmZMxNdpMkewiVZLMRxaNxUeZpDUb34pWjZ1kZvsd16Zic", "/dns4/node1.preload.ipfs.io/tcp/443/wss/p2p/Qmbut9Ywz9YEDrz8ySBSgWyJk41Uvm2QJPhwDJzJyGFsD6", "/dns4/node2.preload.ipfs.io/tcp/443/wss/p2p/QmV7gnbW5VTcJ3oyM2Xk1rdFBJ3kTkvxc87UFGsun29STS", "/dns4/node3.preload.ipfs.io/tcp/443/wss/p2p/QmY7JB6MQXhxHvq7dBDh4HpbH29v4yE9JRadAVpndvzySN"], Pubsub: {Enabled: true}, Swarm: {ConnMgr: {LowWater: 200, HighWater: 500}}, Routing: {Type: "none"}});
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(0);
      t.cleanCid = (e2) => {
        if (n.isCID(e2))
          return e2;
        try {
          return new n(e2);
        } catch (t2) {
          throw i(t2, "ERR_INVALID_CID");
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(280), i = r(281).bind({ignoreUndefined: true}), s = {chunker: "fixed", strategy: "balanced", rawLeaves: false, onlyHash: false, reduceSingleLeafToSelf: true, codec: "dag-pb", hashAlg: "sha2-256", leafType: "file", cidVersion: 0, progress: () => () => {
      }, shardSplitThreshold: 1e3, fileImportConcurrency: 50, blockWriteConcurrency: 10, minChunkSize: 262144, maxChunkSize: 262144, avgChunkSize: 262144, window: 16, polynomial: 17437180132763652, maxChildrenPerNode: 174, layerRepeat: 4, wrapWithDirectory: false, pin: false, recursive: false, hidden: false, preload: false, chunkValidator: null, importBuffer: null};
      e.exports = async function* (e2, t2, o = {}) {
        const a = i(s, o);
        let c, u;
        c = typeof o.dagBuilder == "function" ? o.dagBuilder : r(638), u = typeof o.treeBuilder == "function" ? o.treeBuilder : r(652);
        for await (const r2 of u(n(c(e2, t2, a), a.fileImportConcurrency), t2, a))
          yield {cid: r2.cid, path: r2.path, unixfs: r2.unixfs, size: r2.size};
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = async function* (e2, t2) {
        t2 = parseInt(t2), (isNaN(t2) || t2 < 1) && (t2 = 1);
        let r2 = [];
        for await (const n of e2)
          for (r2.push(n); r2.length >= t2; )
            yield r2.slice(0, t2), r2 = r2.slice(t2);
        for (; r2.length; )
          yield r2.slice(0, t2), r2 = r2.slice(t2);
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = class {
        constructor(e2, t2) {
          this.options = t2 || {}, Object.assign(this, e2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const {DAGLink: n, DAGNode: i} = r(16), s = r(28), o = r(15), a = r(167), c = r(67), u = r(655), h = r(281).bind({ignoreUndefined: true}), f = r(6), d = async function(e2) {
        const t2 = f(e2), r2 = (await o(t2, "murmur3-128")).slice(2, 10), n2 = r2.length, i2 = new Uint8Array(n2);
        for (let s2 = 0; s2 < n2; s2++)
          i2[n2 - s2 - 1] = r2[s2];
        return i2;
      };
      d.code = 34;
      const l = {hamtHashFn: d, hamtBucketBits: 8};
      e.exports = class extends a {
        constructor(e2, t2) {
          super(e2, t2 = h(l, t2)), this._bucket = u({hashFn: t2.hamtHashFn, bits: t2.hamtBucketBits});
        }
        async put(e2, t2) {
          await this._bucket.put(e2, t2);
        }
        get(e2) {
          return this._bucket.get(e2);
        }
        childCount() {
          return this._bucket.leafCount();
        }
        directChildrenCount() {
          return this._bucket.childrenCount();
        }
        onlyChild() {
          return this._bucket.onlyChild();
        }
        async *eachChildSeries() {
          for await (const {key: e2, value: t2} of this._bucket.eachLeafSeries())
            yield {key: e2, child: t2};
        }
        async *flush(e2, t2) {
          for await (const r2 of async function* e3(t3, r3, o2, a2, h2) {
            const f2 = r3._children, d2 = [];
            let l2 = 0;
            for (let i2 = 0; i2 < f2.length; i2++) {
              const t4 = f2.get(i2);
              if (!t4)
                continue;
              const r4 = i2.toString(16).toUpperCase().padStart(2, "0");
              if (u.isBucket(t4)) {
                let i3;
                for await (const r5 of await e3("", t4, o2, null, h2))
                  i3 = r5;
                d2.push(new n(r4, i3.size, i3.cid)), l2 += i3.size;
              } else if (typeof t4.value.flush == "function") {
                const e4 = t4.value;
                let i3;
                for await (const t5 of e4.flush(e4.path, o2))
                  i3 = t5, yield i3;
                const s2 = r4 + t4.key;
                d2.push(new n(s2, i3.size, i3.cid)), l2 += i3.size;
              } else {
                const e4 = t4.value;
                if (!e4.cid)
                  continue;
                const i3 = r4 + t4.key, s2 = e4.size;
                d2.push(new n(i3, s2, e4.cid)), l2 += s2;
              }
            }
            const p = Uint8Array.from(f2.bitField().reverse()), y = new s({type: "hamt-sharded-directory", data: p, fanout: r3.tableSize(), hashType: h2.hamtHashFn.code, mtime: a2 && a2.mtime, mode: a2 && a2.mode}), g = new i(y.marshal(), d2).serialize(), b = await c(g, o2, h2), m = g.length + l2;
            yield {cid: b, unixfs: y, path: t3, size: m};
          }(e2, this._bucket, t2, this, this.options))
            yield r2;
        }
      }, e.exports.hashFn = d;
    }, function(e, t, r) {
      "use strict";
      const n = r(656), i = r(657), s = {bits: 8};
      class o {
        constructor(e2, t2, r2) {
          if (this._options = Object.assign({}, s, e2), this._popCount = 0, this._parent = t2, this._posAtParent = r2, !this._options.hashFn)
            throw new Error("please define an options.hashFn");
          this._options.hash || (this._options.hash = i(this._options.hashFn)), this._children = new n();
        }
        static isBucket(e2) {
          return e2 instanceof o;
        }
        async put(e2, t2) {
          const r2 = await this._findNewBucketAndPos(e2);
          await r2.bucket._putAt(r2, e2, t2);
        }
        async get(e2) {
          const t2 = await this._findChild(e2);
          if (t2)
            return t2.value;
        }
        async del(e2) {
          const t2 = await this._findPlace(e2), r2 = t2.bucket._at(t2.pos);
          r2 && r2.key === e2 && t2.bucket._delAt(t2.pos);
        }
        leafCount() {
          return this._children.compactArray().reduce((e2, t2) => t2 instanceof o ? e2 + t2.leafCount() : e2 + 1, 0);
        }
        childrenCount() {
          return this._children.length;
        }
        onlyChild() {
          return this._children.get(0);
        }
        *eachLeafSeries() {
          const e2 = this._children.compactArray();
          for (const t2 of e2)
            if (t2 instanceof o)
              for (const e3 of t2.eachLeafSeries())
                yield e3;
            else
              yield t2;
        }
        serialize(e2, t2) {
          return t2(this._children.reduce((r2, n2, i2) => (n2 && (n2 instanceof o ? r2.push(n2.serialize(e2, t2)) : r2.push(e2(n2, i2))), r2), []));
        }
        asyncTransform(e2, t2) {
          return async function e3(t3, r2, n2) {
            const i2 = [];
            for (const s2 of t3._children.compactArray()) {
              if (s2 instanceof o)
                await e3(s2, r2, n2);
              else {
                const e4 = await r2(s2);
                i2.push({bitField: t3._children.bitField(), children: e4});
              }
              return n2(i2);
            }
          }(this, e2, t2);
        }
        toJSON() {
          return this.serialize(c, u);
        }
        prettyPrint() {
          return JSON.stringify(this.toJSON(), null, "  ");
        }
        tableSize() {
          return Math.pow(2, this._options.bits);
        }
        async _findChild(e2) {
          const t2 = await this._findPlace(e2), r2 = t2.bucket._at(t2.pos);
          if (r2 && r2.key === e2)
            return r2;
        }
        async _findPlace(e2) {
          const t2 = this._options.hash(e2), r2 = await t2.take(this._options.bits), n2 = this._children.get(r2);
          return n2 instanceof o ? n2._findPlace(t2) : {bucket: this, pos: r2, hash: t2};
        }
        async _findNewBucketAndPos(e2) {
          const t2 = await this._findPlace(e2), r2 = t2.bucket._at(t2.pos);
          if (r2 && r2.key !== e2) {
            const e3 = new o(this._options, t2.bucket, t2.pos);
            t2.bucket._putObjectAt(t2.pos, e3);
            const n2 = await e3._findPlace(r2.hash);
            return n2.bucket._putAt(n2, r2.key, r2.value), e3._findNewBucketAndPos(t2.hash);
          }
          return t2;
        }
        _putAt(e2, t2, r2) {
          this._putObjectAt(e2.pos, {key: t2, value: r2, hash: e2.hash});
        }
        _putObjectAt(e2, t2) {
          this._children.get(e2) || this._popCount++, this._children.set(e2, t2);
        }
        _delAt(e2) {
          this._children.get(e2) && this._popCount--, this._children.unset(e2), this._level();
        }
        _level() {
          if (this._parent && this._popCount <= 1)
            if (this._popCount === 1) {
              const e2 = this._children.find(a);
              if (!(e2 instanceof o)) {
                const t2 = e2.hash;
                t2.untake(this._options.bits);
                const r2 = {pos: this._posAtParent, hash: t2};
                this._parent._putAt(r2, e2.key, e2.value);
              }
            } else
              this._parent._delAt(this._posAtParent);
        }
        _at(e2) {
          return this._children.get(e2);
        }
      }
      function a(e2) {
        return Boolean(e2);
      }
      function c(e2, t2) {
        return e2.key;
      }
      function u(e2) {
        return e2;
      }
      e.exports = o;
    }, function(e, t, r) {
      "use strict";
      e.exports = async function* (e2, t2 = {}) {
        const r2 = e2.getReader();
        try {
          for (; ; ) {
            const e3 = await r2.read();
            if (e3.done)
              return;
            yield e3.value;
          }
        } finally {
          t2.preventCancel !== true && r2.cancel(), r2.releaseLock();
        }
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = async function* (e2, t2) {
        for await (const r2 of e2)
          yield t2(r2);
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2, r2, n) {
        const i = t2 + e2.length;
        return r2 >= i || n < t2 ? new Uint8Array(0) : (n >= t2 && n < i && (e2 = e2.slice(0, n - t2)), r2 >= t2 && r2 < i && (e2 = e2.slice(r2 - t2)), e2);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0);
      e.exports = (e2, t2, r2) => {
        if (t2 || (t2 = 0), t2 < 0)
          throw n(new Error("Offset must be greater than or equal to 0"), "ERR_INVALID_PARAMS");
        if (t2 > e2)
          throw n(new Error("Offset must be less than the file size"), "ERR_INVALID_PARAMS");
        if (r2 || r2 === 0 || (r2 = e2 - t2), r2 < 0)
          throw n(new Error("Length must be greater than or equal to 0"), "ERR_INVALID_PARAMS");
        return t2 + r2 > e2 && (r2 = e2 - t2), {offset: t2, length: r2};
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = (e2 = "") => (e2.trim().match(/([^\\^/]|\\\/)+/g) || []).filter(Boolean);
    }, function(e, t, r) {
      "use strict";
      const n = r(176), i = r(115), s = r(1)("ipfs:mfs:cp"), o = r(0), a = r(69), c = r(70), u = r(68), h = r(41), f = r(702), d = r(90), l = r(2), p = {parents: false, flush: true, hashAlg: "sha2-256", cidVersion: 0, shardSplitThreshold: 1e3, signal: void 0};
      e.exports = function(e2) {
        return l(async function(...t2) {
          let {sources: r2, destination: a2, options: c2} = await f(e2, t2, p);
          if (!r2.length)
            throw o(new Error("Please supply at least one source"), "ERR_INVALID_PARAMS");
          c2.parents = c2.p || c2.parents;
          const u2 = r2.find((e3) => !e3.exists);
          if (u2)
            throw o(new Error(u2.path + " does not exist"), "ERR_INVALID_PARAMS");
          const l2 = y(a2);
          if (a2.exists) {
            if (s("Destination exists"), r2.length === 1 && !l2)
              throw o(new Error("directory already has entry by that name"), "ERR_ALREADY_EXISTS");
          } else if (s("Destination does not exist"), r2.length > 1) {
            if (!c2.parents)
              throw o(new Error("destination did not exist, pass -p to create intermediate directories"), "ERR_INVALID_PARAMS");
            await n(e2)(a2.path, c2), a2 = await h(e2, a2.path, c2);
          } else if (a2.parts.length > 1) {
            const t3 = "/" + a2.parts.slice(0, -1).join("/");
            try {
              await i(e2)(t3, c2);
            } catch (w) {
              if (w.code !== "ERR_NOT_FOUND")
                throw w;
              if (!c2.parents)
                throw o(new Error("destination did not exist, pass -p to create intermediate directories"), "ERR_INVALID_PARAMS");
              await n(e2)(t3, c2), a2 = await h(e2, a2.path, c2);
            }
          }
          const m2 = y(a2) ? a2.mfsPath : a2.mfsDirectory, v = await d(e2, m2);
          if (r2.length === 1) {
            const t3 = r2.pop(), n2 = l2 ? t3.name : a2.name;
            return s(`Only one source, copying to destination ${l2 ? "directory" : "file"} ${n2}`), g(e2, t3, n2, v, c2);
          }
          return s("Multiple sources, wrapping in a directory"), b(e2, r2, a2, v, c2);
        });
      };
      const y = (e2) => e2.unixfs && e2.unixfs.type && e2.unixfs.type.includes("directory"), g = async (e2, t2, r2, n2, i2) => {
        let s2 = n2.pop();
        s2 = await m(e2, t2, r2, s2, i2), n2.push(s2);
        const o2 = await a(e2, n2, i2);
        await c(e2, o2, i2);
      }, b = async (e2, t2, r2, n2, i2) => {
        for (let o2 = 0; o2 < t2.length; o2++) {
          const n3 = t2[o2];
          r2 = await m(e2, n3, n3.name, r2, i2);
        }
        n2[n2.length - 1] = r2;
        const s2 = await a(e2, n2, i2);
        await c(e2, s2, i2);
      }, m = async (e2, t2, r2, n2, i2) => {
        const s2 = await e2.repo.blocks.get(t2.cid), {node: o2, cid: a2} = await u(e2, {parentCid: n2.cid, size: s2.data.length, cid: t2.cid, name: r2, hashAlg: i2.hashAlg, cidVersion: i2.cidVersion, flush: i2.flush});
        return n2.node = o2, n2.cid = a2, n2.size = o2.size, n2;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(1)("ipfs:mfs:mkdir"), s = r(36), o = r(701), a = r(174), c = r(70), u = r(69), h = r(68), f = r(293), d = r(23).bind({ignoreUndefined: true}), l = r(2), p = {parents: false, hashAlg: "sha2-256", cidVersion: 0, shardSplitThreshold: 1e3, flush: true, mode: null, mtime: null, signal: void 0};
      e.exports = (e2) => l(async function(t2, r2 = {}) {
        const h2 = d(p, r2);
        if (!t2)
          throw new Error("no path given to Mkdir");
        if ((t2 = t2.trim()) === "/") {
          if (h2.parents)
            return;
          throw n(new Error("cannot create directory '/': Already exists"), "ERR_INVALID_PATH");
        }
        if (t2.substring(0, 1) !== "/")
          throw n(new Error("paths must start with a leading slash"), "ERR_INVALID_PATH");
        i("Creating " + t2);
        const l2 = a(t2);
        if (l2[0] === "ipfs")
          throw n(new Error("path cannot have the prefix 'ipfs'"), "ERR_INVALID_PATH");
        const g = await f(e2, h2);
        let b;
        const m = [], v = await o(e2, "directory", h2);
        for (let o2 = 0; o2 <= l2.length; o2++) {
          const t3 = l2.slice(0, o2), r3 = `/ipfs/${g}/${t3.join("/")}`;
          try {
            if (b = await s(r3, e2.ipld), i(r3 + " existed"), i(`${r3} had children ${b.node.Links.map((e3) => e3.Name)}`), o2 === l2.length) {
              if (h2.parents)
                return;
              throw n(new Error("file already exists"), "ERR_ALREADY_EXISTS");
            }
            m.push({name: b.name, cid: b.cid});
          } catch (_) {
            if (_.code !== "ERR_NOT_FOUND")
              throw _;
            if (o2 < l2.length && !h2.parents)
              throw n(new Error(`Intermediate directory path ${r3} does not exist, use the -p flag to create it`), "ERR_NOT_FOUND");
            await y(e2, t3[t3.length - 1], v, m[m.length - 1], m, h2);
          }
        }
        const w = await u(e2, m, h2);
        await c(e2, w, h2);
      });
      const y = async (e2, t2, r2, n2, s2, o2) => {
        i(`Adding empty dir called ${t2} to ${n2.cid}`);
        const a2 = await h(e2, {parent: n2.node, parentCid: n2.cid, size: r2.node.size, cid: r2.cid, name: t2, hashAlg: o2.hashAlg, cidVersion: o2.cidVersion, flush: o2.flush});
        s2[s2.length - 1].cid = a2.cid, s2.push({name: t2, cid: r2.cid});
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(41), i = r(23).bind({ignoreUndefined: true});
      e.exports = async function(e2, t2, r2) {
        const s = [];
        let o;
        for (let n2 = 0; n2 < t2.length; n2++)
          typeof t2[n2] == "string" || t2[n2] instanceof String ? s.push(t2[n2].trim()) : n2 === t2.length - 1 && (o = t2[n2]);
        return o = i(r2, o), {sources: await n(e2, s, o), options: o};
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(69), s = r(70), o = r(177), a = r(703), c = r(41), u = r(90), h = r(2), f = {recursive: false, cidVersion: 0, hashAlg: "sha2-256", flush: true, signal: void 0};
      e.exports = (e2) => h(async function(...t2) {
        const {sources: r2, options: i2} = await o(e2, t2, f);
        if (!r2.length)
          throw n(new Error("Please supply at least one path to remove"), "ERR_INVALID_PARAMS");
        r2.forEach((e3) => {
          if (e3.path === "/")
            throw n(new Error("Cannot delete root"), "ERR_INVALID_PARAMS");
        });
        for (const n2 of r2)
          await d(e2, n2.path, i2);
      });
      const d = async (e2, t2, r2) => {
        const o2 = await c(e2, t2, r2), h2 = await u(e2, o2.mfsPath), f2 = h2[h2.length - 1];
        h2.pop();
        const d2 = h2[h2.length - 1];
        if (!d2)
          throw n(new Error(t2 + " does not exist"), "ERR_NOT_FOUND");
        if (f2.type === "directory" && !r2.recursive)
          throw n(new Error(t2 + " is a directory, use -r to remove directories"), "ERR_WAS_DIR");
        const {cid: l} = await a(e2, {parentCid: d2.cid, name: f2.name, hashAlg: r2.hashAlg, cidVersion: r2.cidVersion, flush: r2.flush});
        d2.cid = l;
        const p = await i(e2, h2, r2);
        await s(e2, p, r2);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(296), i = r(1), s = r(29), o = r(0), a = r(732), c = r(746), u = r(747), h = r(748), f = r(749), d = r(750), l = r(751), p = r(753), y = r(756), g = r(757), b = r(759), m = r(800), v = r(181), w = i("ipfs:repo"), _ = Number.MAX_SAFE_INTEGER, E = {memory: r(319), fs: r(319)};
      async function S(e2) {
        const t2 = new s(0);
        for await (const r2 of e2.query({}))
          t2.plus(r2.value.byteLength).plus(r2.key.uint8Array().byteLength);
        return t2;
      }
      e.exports = class {
        constructor(e2, t2) {
          if (typeof e2 != "string")
            throw new Error("missing repoPath");
          this.options = function(e3) {
            const t3 = Object.assign({}, b, e3);
            return t3.storageBackends = Object.assign({}, b.storageBackends, t3.storageBackends), t3.storageBackendOptions = Object.assign({}, b.storageBackendOptions, t3.storageBackendOptions), t3;
          }(t2), this.closed = true, this.path = e2, this._locker = this._getLocker(), this.root = f.create("root", this.path, this.options), this.version = d(this.root), this.config = l(this.root), this.spec = p(this.root), this.apiAddr = y(this.root);
        }
        async init(e2) {
          var t2;
          w("initializing at: %s", this.path), await this._openRoot(), await this.config.set((t2 = e2, t2.datastore = Object.assign({}, m, n(t2, "datastore", {})), t2)), await this.spec.set(function(e3) {
            const t3 = Object.assign({}, m.Spec, n(e3, "datastore.Spec", {}));
            return {type: t3.type, mounts: t3.mounts.map((e4) => ({mountpoint: e4.mountpoint, type: e4.child.type, path: e4.child.path, shardFunc: e4.child.shardFunc}))};
          }(e2)), await this.version.set(h.repoVersion);
        }
        async isInitialized() {
          if (!this.closed)
            return true;
          try {
            return await this._openRoot(), await this._checkInitialized(), await this.root.close(), true;
          } catch (e2) {
            return false;
          }
        }
        async open() {
          if (!this.closed)
            throw o(new Error("repo is already open"), v.ERR_REPO_ALREADY_OPEN);
          w("opening at: %s", this.path);
          try {
            await this._openRoot(), await this._checkInitialized(), this.lockfile = await this._openLock(this.path), w("acquired repo.lock");
            if (!await this.version.check(h.repoVersion)) {
              if (!await this._isAutoMigrationEnabled())
                throw new v.InvalidRepoVersionError("Incompatible repo versions. Automatic migrations disabled. Please migrate the repo manually.");
              await this._migrate(h.repoVersion);
            }
            w("creating datastore"), this.datastore = f.create("datastore", u(this.path, "datastore"), this.options), await this.datastore.open(), w("creating blocks");
            const e2 = f.create("blocks", u(this.path, "blocks"), this.options);
            await e2.open(), this.blocks = await g(e2, this.options.storageBackendOptions.blocks), w("creating keystore"), this.keys = f.create("keys", u(this.path, "keys"), this.options), await this.keys.open(), w("creating pins"), this.pins = f.create("pins", u(this.path, "pins"), this.options), await this.pins.open(), this.closed = false, w("all opened");
          } catch (e2) {
            if (this.lockfile)
              try {
                await this._closeLock(), this.lockfile = null;
              } catch (t2) {
                w("error removing lock", t2);
              }
            throw e2;
          }
        }
        _getLocker() {
          if (typeof this.options.lock == "string") {
            if (!E[this.options.lock])
              throw new Error("Unknown lock type: " + this.options.lock);
            return E[this.options.lock];
          }
          if (!this.options.lock)
            throw new Error("No lock provided");
          return this.options.lock;
        }
        async _openRoot() {
          try {
            await this.root.open();
          } catch (e2) {
            if (e2.message !== "Already open")
              throw e2;
          }
        }
        async _openLock(e2) {
          const t2 = await this._locker.lock(e2);
          if (typeof t2.close != "function")
            throw o(new Error("Locks must have a close method"), "ERR_NO_CLOSE_FUNCTION");
          return t2;
        }
        _closeLock() {
          return this.lockfile.close();
        }
        async _checkInitialized() {
          let e2;
          w("init check");
          try {
            [e2] = await Promise.all([this.config.exists(), this.spec.exists(), this.version.exists()]);
          } catch (t2) {
            if (t2.code === "ERR_NOT_FOUND")
              throw o(new Error("repo is not initialized yet"), v.ERR_REPO_NOT_INITIALIZED, {path: this.path});
            throw t2;
          }
          if (!e2)
            throw o(new Error("repo is not initialized yet"), v.ERR_REPO_NOT_INITIALIZED, {path: this.path});
        }
        async close() {
          if (this.closed)
            throw o(new Error("repo is already closed"), v.ERR_REPO_ALREADY_CLOSED);
          w("closing at: %s", this.path);
          try {
            await this.apiAddr.delete();
          } catch (e2) {
            if (e2.code !== v.ERR_REPO_NOT_INITIALIZED && !e2.message.startsWith("ENOENT"))
              throw e2;
          }
          await Promise.all([this.root, this.blocks, this.keys, this.datastore, this.pins].map((e2) => e2.close())), w("unlocking"), this.closed = true, await this._closeLock(), this.lockfile = null;
        }
        async exists() {
          return this.version.exists();
        }
        async stat() {
          const [e2, t2, r2, n2, i2] = await Promise.all([this._storageMaxStat(), this._blockStat(), this.version.get(), S(this.datastore), S(this.keys)]), s2 = t2.size.plus(n2).plus(i2);
          return {repoPath: this.path, storageMax: e2, version: r2, numObjects: t2.count, repoSize: s2};
        }
        async _isAutoMigrationEnabled() {
          if (this.options.autoMigrate !== void 0)
            return this.options.autoMigrate;
          let e2;
          try {
            e2 = await this.config.get("repoAutoMigrate");
          } catch (t2) {
            if (t2.code !== v.NotFoundError.code)
              throw t2;
            e2 = true;
          }
          return e2;
        }
        async _migrate(e2) {
          return await this.version.get() > e2 ? (w("reverting to version " + e2), a.revert(this.path, this.options, e2, {ignoreLock: true, onProgress: this.options.onMigrationProgress})) : (w("migrating to version " + e2), a.migrate(this.path, this.options, e2, {ignoreLock: true, onProgress: this.options.onMigrationProgress}));
        }
        async _storageMaxStat() {
          try {
            const e2 = await this.config.get("Datastore.StorageMax");
            return new s(c(e2));
          } catch (e2) {
            return new s(_);
          }
        }
        async _blockStat() {
          let e2 = new s(0), t2 = new s(0);
          for await (const r2 of this.blocks.query({}))
            e2 = e2.plus(1), t2 = t2.plus(r2.data.byteLength).plus(r2.cid.bytes.byteLength);
          return {count: e2, size: t2};
        }
      }, e.exports.utils = {blockstore: r(299)}, e.exports.repoVersion = h.repoVersion, e.exports.errors = v;
    }, function(e, t, r) {
      "use strict";
      class n extends Error {
        constructor(e2) {
          super(e2), this.name = "NonReversibleMigrationError", this.code = "ERR_NON_REVERSIBLE_MIGRATION", this.message = e2;
        }
      }
      n.code = "ERR_NON_REVERSIBLE_MIGRATION", t.NonReversibleMigrationError = n;
      class i extends Error {
        constructor(e2) {
          super(e2), this.name = "NotInitializedRepoError", this.code = "ERR_NOT_INITIALIZED_REPO", this.message = e2;
        }
      }
      i.code = "ERR_NOT_INITIALIZED_REPO", t.NotInitializedRepoError = i;
      class s extends Error {
        constructor(e2) {
          super(e2), this.name = "RequiredParameterError", this.code = "ERR_REQUIRED_PARAMETER", this.message = e2;
        }
      }
      s.code = "ERR_REQUIRED_PARAMETER", t.RequiredParameterError = s;
      class o extends Error {
        constructor(e2) {
          super(e2), this.name = "InvalidValueError", this.code = "ERR_INVALID_VALUE", this.message = e2;
        }
      }
      o.code = "ERR_INVALID_VALUE", t.InvalidValueError = o;
      class a extends Error {
        constructor(e2) {
          super(e2), this.name = "MissingRepoOptionsError", this.code = "ERR_MISSING_REPO_OPTIONS", this.message = e2;
        }
      }
      a.code = "ERR_MISSING_REPO_OPTIONS", t.MissingRepoOptionsError = a;
    }, function(e, t, r) {
      "use strict";
      class n extends Error {
        constructor(e2) {
          super(e2), this.name = "LockExistsError", this.code = n.code;
        }
      }
      n.code = "ERR_LOCK_EXISTS", t.LockExistsError = n;
      class i extends Error {
        constructor(e2) {
          super(e2), this.name = "NotFoundError", this.code = i.code;
        }
      }
      i.code = "ERR_NOT_FOUND", t.NotFoundError = i;
      class s extends Error {
        constructor(e2) {
          super(e2), this.name = "InvalidRepoVersionError", this.code = s.code;
        }
      }
      s.code = "ERR_INVALID_REPO_VERSION", t.InvalidRepoVersionError = s, t.ERR_REPO_NOT_INITIALIZED = "ERR_REPO_NOT_INITIALIZED", t.ERR_REPO_ALREADY_OPEN = "ERR_REPO_ALREADY_OPEN", t.ERR_REPO_ALREADY_CLOSED = "ERR_REPO_ALREADY_CLOSED";
    }, function(e, t, r) {
      "use strict";
      var n = r(71), i = r(765);
      e.exports = function() {
        var e2 = n.apply(null, arguments);
        return i(e2, {bufferKeys: e2.bufferKeys || false, snapshots: e2.snapshots || false, permanence: e2.permanence || false, seek: e2.seek || false, clear: e2.clear || false, status: e2.status || false, createIfMissing: e2.createIfMissing || false, errorIfExists: e2.errorIfExists || false, deferredOpen: e2.deferredOpen || false, openCallback: e2.openCallback || false, promises: e2.promises || false, streams: e2.streams || false, encodings: e2.encodings || false, additionalMethods: n(e2.additionalMethods)});
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = r(184);
    }, function(e, t, r) {
      "use strict";
      var n, i, s, o = [r(766), r(767), r(768), r(769), r(770)], a = -1, c = [], u = false;
      function h() {
        n && i && (n = false, i.length ? c = i.concat(c) : a = -1, c.length && f());
      }
      function f() {
        if (!n) {
          u = false, n = true;
          for (var e2 = c.length, t2 = setTimeout(h); e2; ) {
            for (i = c, c = []; i && ++a < e2; )
              i[a].run();
            a = -1, e2 = c.length;
          }
          i = null, a = -1, n = false, clearTimeout(t2);
        }
      }
      for (var d = -1, l = o.length; ++d < l; )
        if (o[d] && o[d].test && o[d].test()) {
          s = o[d].install(f);
          break;
        }
      function p(e2, t2) {
        this.fun = e2, this.array = t2;
      }
      p.prototype.run = function() {
        var e2 = this.fun, t2 = this.array;
        switch (t2.length) {
          case 0:
            return e2();
          case 1:
            return e2(t2[0]);
          case 2:
            return e2(t2[0], t2[1]);
          case 3:
            return e2(t2[0], t2[1], t2[2]);
          default:
            return e2.apply(null, t2);
        }
      }, e.exports = function(e2) {
        var t2 = new Array(arguments.length - 1);
        if (arguments.length > 1)
          for (var r2 = 1; r2 < arguments.length; r2++)
            t2[r2 - 1] = arguments[r2];
        c.push(new p(e2, t2)), u || n || (u = true, s());
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(72).codes.ERR_STREAM_PREMATURE_CLOSE;
      function i() {
      }
      e.exports = function e2(t2, r2, s) {
        if (typeof r2 == "function")
          return e2(t2, null, r2);
        r2 || (r2 = {}), s = function(e3) {
          var t3 = false;
          return function() {
            if (!t3) {
              t3 = true;
              for (var r3 = arguments.length, n2 = new Array(r3), i2 = 0; i2 < r3; i2++)
                n2[i2] = arguments[i2];
              e3.apply(this, n2);
            }
          };
        }(s || i);
        var o = r2.readable || r2.readable !== false && t2.readable, a = r2.writable || r2.writable !== false && t2.writable, c = function() {
          t2.writable || h();
        }, u = t2._writableState && t2._writableState.finished, h = function() {
          a = false, u = true, o || s.call(t2);
        }, f = t2._readableState && t2._readableState.endEmitted, d = function() {
          o = false, f = true, a || s.call(t2);
        }, l = function(e3) {
          s.call(t2, e3);
        }, p = function() {
          var e3;
          return o && !f ? (t2._readableState && t2._readableState.ended || (e3 = new n()), s.call(t2, e3)) : a && !u ? (t2._writableState && t2._writableState.ended || (e3 = new n()), s.call(t2, e3)) : void 0;
        }, y = function() {
          t2.req.on("finish", h);
        };
        return !function(e3) {
          return e3.setHeader && typeof e3.abort == "function";
        }(t2) ? a && !t2._writableState && (t2.on("end", c), t2.on("close", c)) : (t2.on("complete", h), t2.on("abort", p), t2.req ? y() : t2.on("request", y)), t2.on("end", d), t2.on("finish", h), r2.error !== false && t2.on("error", l), t2.on("close", p), function() {
          t2.removeListener("complete", h), t2.removeListener("abort", p), t2.removeListener("request", y), t2.req && t2.req.removeListener("finish", h), t2.removeListener("end", c), t2.removeListener("close", c), t2.removeListener("finish", h), t2.removeListener("end", d), t2.removeListener("error", l), t2.removeListener("close", p);
        };
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(781).create, i = n("LevelUPError"), s = n("NotFoundError", i);
      s.prototype.notFound = true, s.prototype.status = 404, e.exports = {LevelUPError: i, InitializationError: n("InitializationError", i), OpenError: n("OpenError", i), ReadError: n("ReadError", i), WriteError: n("WriteError", i), NotFoundError: s, EncodingError: n("EncodingError", i)};
    }, function(e, t, r) {
      "use strict";
      t.AbstractLevelDOWN = r(790), t.AbstractIterator = r(312), t.AbstractChainedBatch = r(313);
    }, function(e, t, r) {
      "use strict";
      e.exports = r(184);
    }, function(e, t, r) {
      "use strict";
      t.codes = {ERR_MISSING_SIGNATURE: "ERR_MISSING_SIGNATURE", ERR_INVALID_SIGNATURE: "ERR_INVALID_SIGNATURE"};
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2) {
        if (e2) {
          if (typeof e2[Symbol.iterator] == "function")
            return e2[Symbol.iterator]();
          if (typeof e2[Symbol.asyncIterator] == "function")
            return e2[Symbol.asyncIterator]();
          if (typeof e2.next == "function")
            return e2;
        }
        throw new Error("argument is not an iterator or iterable");
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(1);
      n("libp2p:envelope").error = n("libp2p:envelope:error");
      const i = r(0), s = r(27), o = r(6), a = r(136), c = r(7), u = r(846), h = r(19), {codes: f} = r(26), d = r(850);
      class l {
        constructor({peerId: e2, payloadType: t2, payload: r2, signature: n2}) {
          this.peerId = e2, this.payloadType = t2, this.payload = r2, this.signature = n2, this._marshal = void 0;
        }
        marshal() {
          if (this._marshal)
            return this._marshal;
          const e2 = a.marshalPublicKey(this.peerId.pubKey);
          return this._marshal = d.encode({public_key: e2, payload_type: this.payloadType, payload: this.payload, signature: this.signature}), this._marshal;
        }
        equals(e2) {
          return h(this.peerId.pubKey.bytes, e2.peerId.pubKey.bytes) && h(this.payloadType, e2.payloadType) && h(this.payload, e2.payload) && h(this.signature, e2.signature);
        }
        validate(e2) {
          const t2 = p(e2, this.payloadType, this.payload);
          return this.peerId.pubKey.verify(t2, this.signature);
        }
      }
      const p = (e2, t2, r2) => {
        e2 = o(e2);
        const n2 = u.encode(e2.byteLength), i2 = u.encode(t2.length), a2 = u.encode(r2.length);
        return s([new Uint8Array(n2), e2, new Uint8Array(i2), t2, new Uint8Array(a2), r2]);
      };
      l.createFromProtobuf = async (e2) => {
        const t2 = d.decode(e2), r2 = await c.createFromPubKey(t2.public_key);
        return new l({peerId: r2, payloadType: t2.payload_type, payload: t2.payload, signature: t2.signature});
      }, l.seal = async (e2, t2) => {
        const r2 = e2.domain, n2 = e2.codec, i2 = e2.marshal(), s2 = p(r2, n2, i2), o2 = await t2.privKey.sign(s2);
        return new l({peerId: t2, payloadType: n2, payload: i2, signature: o2});
      }, l.openAndCertify = async (e2, t2) => {
        const r2 = await l.createFromProtobuf(e2);
        if (!await r2.validate(t2))
          throw i(new Error("envelope signature is not valid for the given domain"), f.ERR_SIGNATURE_NOT_VALID);
        return r2;
      }, e.exports = l;
    }, function(e, t, r) {
      "use strict";
      typeof globalThis != "object" && (Object.defineProperty(Object.prototype, "__magic__", {get: function() {
        return this;
      }, configurable: true}), __magic__.globalThis = __magic__, delete Object.prototype.__magic__), e.exports = globalThis;
    }, function(e, t, r) {
      "use strict";
      const n = r(853), i = r(858);
      e.exports = (e2, t2) => {
        const r2 = n(e2, {...t2, count: 1});
        return i.fn(async (e3) => {
          e3(() => {
            r2.cancel();
          });
          const [t3] = await r2;
          return t3;
        })();
      }, e.exports.AggregateError = n.AggregateError;
    }, function(e, t, r) {
      "use strict";
      e.exports = {DIAL_TIMEOUT: 3e4, MAX_PARALLEL_DIALS: 100, MAX_PER_PEER_DIALS: 4, METRICS: {computeThrottleMaxQueueSize: 1e3, computeThrottleTimeout: 2e3, movingAverageIntervals: [6e4, 3e5, 9e5], maxOldPeersRetention: 50}};
    }, function(e, t, r) {
      "use strict";
      e.exports = {relay: "/libp2p/circuit/relay/0.1.0"};
    }, function(e, t, r) {
      "use strict";
      const n = r(34), i = r(95), {CircuitRelay: s} = r(94), o = r(1), a = o("libp2p:circuit:stream-handler");
      a.error = o("libp2p:circuit:stream-handler:error");
      e.exports = class {
        constructor({stream: e2, maxLength: t2 = 4096}) {
          this.stream = e2, this.shake = i(this.stream), this.decoder = n.decode.fromReader(this.shake.reader, {maxDataLength: t2});
        }
        async read() {
          const e2 = await this.decoder.next();
          if (e2.value) {
            const t2 = s.decode(e2.value.slice());
            return a("read message type", t2.type), t2;
          }
          a("read received no value, closing stream"), this.close();
        }
        write(e2) {
          a("write message type %s", e2.type), this.shake.write(n.encode.single(s.encode(e2)));
        }
        rest() {
          return this.shake.rest(), this.shake.stream;
        }
        end(e2) {
          this.write(e2), this.close();
        }
        close() {
          a("closing the stream"), this.rest().sink([]);
        }
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = () => {
        const e2 = {};
        return e2.promise = new Promise((t2, r2) => {
          e2.resolve = t2, e2.reject = r2;
        }), e2;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(33), i = r(34), s = r(25), o = r(0), a = r(6)("\n");
      async function c(e2) {
        for await (const t2 of e2)
          return t2;
      }
      t.encode = (e2) => i.encode.single(new n([e2, a])), t.write = (e2, r2) => e2.push(t.encode(r2)), t.writeAll = (e2, r2) => {
        e2.push(r2.reduce((e3, r3) => e3.append(t.encode(r3)), new n()));
      }, t.read = async (e2) => {
        let t2 = 1;
        const r2 = {[Symbol.asyncIterator]() {
          return this;
        }, next: () => e2.next(t2)}, n2 = await s(r2, i.decode({onLength: (e3) => {
          t2 = e3;
        }}), c);
        if (n2.get(n2.length - 1) !== a[0])
          throw o(new Error("missing newline"), "ERR_INVALID_MULTISTREAM_SELECT_MESSAGE");
        return n2.shallowSlice(0, -1);
      };
    }, function(e, t, r) {
      "use strict";
      t.BITS = 32, t.GROUPS = 4, t.RE_ADDRESS = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/g, t.RE_SUBNET_STRING = /\/\d{1,2}$/;
    }, function(e, t, r) {
      "use strict";
      t.BITS = 128, t.GROUPS = 8, t.SCOPES = {0: "Reserved", 1: "Interface local", 2: "Link local", 4: "Admin local", 5: "Site local", 8: "Organization local", 14: "Global", 15: "Reserved"}, t.TYPES = {"ff01::1/128": "Multicast (All nodes on this interface)", "ff01::2/128": "Multicast (All routers on this interface)", "ff02::1/128": "Multicast (All nodes on this link)", "ff02::2/128": "Multicast (All routers on this link)", "ff05::2/128": "Multicast (All routers in this site)", "ff02::5/128": "Multicast (OSPFv3 AllSPF routers)", "ff02::6/128": "Multicast (OSPFv3 AllDR routers)", "ff02::9/128": "Multicast (RIP routers)", "ff02::a/128": "Multicast (EIGRP routers)", "ff02::d/128": "Multicast (PIM routers)", "ff02::16/128": "Multicast (MLDv2 reports)", "ff01::fb/128": "Multicast (mDNSv6)", "ff02::fb/128": "Multicast (mDNSv6)", "ff05::fb/128": "Multicast (mDNSv6)", "ff02::1:2/128": "Multicast (All DHCP servers and relay agents on this link)", "ff05::1:2/128": "Multicast (All DHCP servers and relay agents in this site)", "ff02::1:3/128": "Multicast (All DHCP servers on this link)", "ff05::1:3/128": "Multicast (All DHCP servers in this site)", "::/128": "Unspecified", "::1/128": "Loopback", "ff00::/8": "Multicast", "fe80::/10": "Link-local unicast"}, t.RE_BAD_CHARACTERS = /([^0-9a-f:\/%])/gi, t.RE_BAD_ADDRESS = /([0-9a-f]{5,}|:{3,}|[^:]:$|^:[^:]|\/$)/gi, t.RE_SUBNET_STRING = /\/\d{1,3}(?=%|$)/, t.RE_ZONE_STRING = /%.*$/, t.RE_URL = new RegExp(/^\[{0,1}([0-9a-f:]+)\]{0,1}/), t.RE_URL_WITH_PORT = new RegExp(/\[([0-9a-f:]+)\]:([0-9]{1,5})/);
    }, function(e, t, r) {
      "use strict";
      t.CODE_P2P = 421, t.CODE_CIRCUIT = 290, t.CLOSE_TIMEOUT = 2e3;
    }, function(e, t, r) {
      "use strict";
      var n = r(962)("socket.io-parser"), i = r(965), s = r(966), o = r(355), a = r(356);
      function c() {
      }
      t.protocol = 4, t.types = ["CONNECT", "DISCONNECT", "EVENT", "ACK", "ERROR", "BINARY_EVENT", "BINARY_ACK"], t.CONNECT = 0, t.DISCONNECT = 1, t.EVENT = 2, t.ACK = 3, t.ERROR = 4, t.BINARY_EVENT = 5, t.BINARY_ACK = 6, t.Encoder = c, t.Decoder = f;
      var u = t.ERROR + '"encode error"';
      function h(e2) {
        var r2 = "" + e2.type;
        if (t.BINARY_EVENT !== e2.type && t.BINARY_ACK !== e2.type || (r2 += e2.attachments + "-"), e2.nsp && e2.nsp !== "/" && (r2 += e2.nsp + ","), e2.id != null && (r2 += e2.id), e2.data != null) {
          var i2 = function(e3) {
            try {
              return JSON.stringify(e3);
            } catch (t2) {
              return false;
            }
          }(e2.data);
          if (i2 === false)
            return u;
          r2 += i2;
        }
        return n("encoded %j as %s", e2, r2), r2;
      }
      function f() {
        this.reconstructor = null;
      }
      function d(e2) {
        this.reconPack = e2, this.buffers = [];
      }
      function l(e2) {
        return {type: t.ERROR, data: "parser error: " + e2};
      }
      c.prototype.encode = function(e2, r2) {
        (n("encoding packet %j", e2), t.BINARY_EVENT === e2.type || t.BINARY_ACK === e2.type) ? function(e3, t2) {
          s.removeBlobs(e3, function(e4) {
            var r3 = s.deconstructPacket(e4), n2 = h(r3.packet), i2 = r3.buffers;
            i2.unshift(n2), t2(i2);
          });
        }(e2, r2) : r2([h(e2)]);
      }, i(f.prototype), f.prototype.add = function(e2) {
        var r2;
        if (typeof e2 == "string")
          r2 = function(e3) {
            var r3 = 0, i2 = {type: Number(e3.charAt(0))};
            if (t.types[i2.type] == null)
              return l("unknown packet type " + i2.type);
            if (t.BINARY_EVENT === i2.type || t.BINARY_ACK === i2.type) {
              for (var s2 = ""; e3.charAt(++r3) !== "-" && (s2 += e3.charAt(r3), r3 != e3.length); )
                ;
              if (s2 != Number(s2) || e3.charAt(r3) !== "-")
                throw new Error("Illegal attachments");
              i2.attachments = Number(s2);
            }
            if (e3.charAt(r3 + 1) === "/")
              for (i2.nsp = ""; ++r3; ) {
                if ((c2 = e3.charAt(r3)) === ",")
                  break;
                if (i2.nsp += c2, r3 === e3.length)
                  break;
              }
            else
              i2.nsp = "/";
            var a2 = e3.charAt(r3 + 1);
            if (a2 !== "" && Number(a2) == a2) {
              for (i2.id = ""; ++r3; ) {
                var c2;
                if ((c2 = e3.charAt(r3)) == null || Number(c2) != c2) {
                  --r3;
                  break;
                }
                if (i2.id += e3.charAt(r3), r3 === e3.length)
                  break;
              }
              i2.id = Number(i2.id);
            }
            if (e3.charAt(++r3)) {
              var u2 = function(e4) {
                try {
                  return JSON.parse(e4);
                } catch (t2) {
                  return false;
                }
              }(e3.substr(r3));
              if (!(u2 !== false && (i2.type === t.ERROR || o(u2))))
                return l("invalid payload");
              i2.data = u2;
            }
            return n("decoded %s as %j", e3, i2), i2;
          }(e2), t.BINARY_EVENT === r2.type || t.BINARY_ACK === r2.type ? (this.reconstructor = new d(r2), this.reconstructor.reconPack.attachments === 0 && this.emit("decoded", r2)) : this.emit("decoded", r2);
        else {
          if (!a(e2) && !e2.base64)
            throw new Error("Unknown type: " + e2);
          if (!this.reconstructor)
            throw new Error("got binary data when not reconstructing a packet");
          (r2 = this.reconstructor.takeBinaryData(e2)) && (this.reconstructor = null, this.emit("decoded", r2));
        }
      }, f.prototype.destroy = function() {
        this.reconstructor && this.reconstructor.finishedReconstruction();
      }, d.prototype.takeBinaryData = function(e2) {
        if (this.buffers.push(e2), this.buffers.length === this.reconPack.attachments) {
          var t2 = s.reconstructPacket(this.reconPack, this.buffers);
          return this.finishedReconstruction(), t2;
        }
        return null;
      }, d.prototype.finishedReconstruction = function() {
        this.reconPack = null, this.buffers = [];
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(969), i = r(204);
      e.exports = function(e2) {
        var t2 = e2.xdomain, r2 = e2.xscheme, s = e2.enablesXDR;
        try {
          if (typeof XMLHttpRequest != "undefined" && (!t2 || n))
            return new XMLHttpRequest();
        } catch (o) {
        }
        try {
          if (typeof XDomainRequest != "undefined" && !r2 && s)
            return new XDomainRequest();
        } catch (o) {
        }
        if (!t2)
          try {
            return new i[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP");
          } catch (o) {
          }
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = typeof self != "undefined" ? self : typeof window != "undefined" ? window : Function("return this")();
    }, function(e, t, r) {
      "use strict";
      var n = r(76), i = r(206);
      function s(e2) {
        this.path = e2.path, this.hostname = e2.hostname, this.port = e2.port, this.secure = e2.secure, this.query = e2.query, this.timestampParam = e2.timestampParam, this.timestampRequests = e2.timestampRequests, this.readyState = "", this.agent = e2.agent || false, this.socket = e2.socket, this.enablesXDR = e2.enablesXDR, this.withCredentials = e2.withCredentials, this.pfx = e2.pfx, this.key = e2.key, this.passphrase = e2.passphrase, this.cert = e2.cert, this.ca = e2.ca, this.ciphers = e2.ciphers, this.rejectUnauthorized = e2.rejectUnauthorized, this.forceNode = e2.forceNode, this.isReactNative = e2.isReactNative, this.extraHeaders = e2.extraHeaders, this.localAddress = e2.localAddress;
      }
      e.exports = s, i(s.prototype), s.prototype.onError = function(e2, t2) {
        var r2 = new Error(e2);
        return r2.type = "TransportError", r2.description = t2, this.emit("error", r2), this;
      }, s.prototype.open = function() {
        return this.readyState !== "closed" && this.readyState !== "" || (this.readyState = "opening", this.doOpen()), this;
      }, s.prototype.close = function() {
        return this.readyState !== "opening" && this.readyState !== "open" || (this.doClose(), this.onClose()), this;
      }, s.prototype.send = function(e2) {
        if (this.readyState !== "open")
          throw new Error("Transport not open");
        this.write(e2);
      }, s.prototype.onOpen = function() {
        this.readyState = "open", this.writable = true, this.emit("open");
      }, s.prototype.onData = function(e2) {
        var t2 = n.decodePacket(e2, this.socket.binaryType);
        this.onPacket(t2);
      }, s.prototype.onPacket = function(e2) {
        this.emit("packet", e2);
      }, s.prototype.onClose = function() {
        this.readyState = "closed", this.emit("close");
      };
    }, function(e, t, r) {
      "use strict";
      function n(e2) {
        if (e2)
          return function(e3) {
            for (var t2 in n.prototype)
              e3[t2] = n.prototype[t2];
            return e3;
          }(e2);
      }
      e.exports = n, n.prototype.on = n.prototype.addEventListener = function(e2, t2) {
        return this._callbacks = this._callbacks || {}, (this._callbacks["$" + e2] = this._callbacks["$" + e2] || []).push(t2), this;
      }, n.prototype.once = function(e2, t2) {
        function r2() {
          this.off(e2, r2), t2.apply(this, arguments);
        }
        return r2.fn = t2, this.on(e2, r2), this;
      }, n.prototype.off = n.prototype.removeListener = n.prototype.removeAllListeners = n.prototype.removeEventListener = function(e2, t2) {
        if (this._callbacks = this._callbacks || {}, arguments.length == 0)
          return this._callbacks = {}, this;
        var r2, n2 = this._callbacks["$" + e2];
        if (!n2)
          return this;
        if (arguments.length == 1)
          return delete this._callbacks["$" + e2], this;
        for (var i = 0; i < n2.length; i++)
          if ((r2 = n2[i]) === t2 || r2.fn === t2) {
            n2.splice(i, 1);
            break;
          }
        return n2.length === 0 && delete this._callbacks["$" + e2], this;
      }, n.prototype.emit = function(e2) {
        this._callbacks = this._callbacks || {};
        for (var t2 = new Array(arguments.length - 1), r2 = this._callbacks["$" + e2], n2 = 1; n2 < arguments.length; n2++)
          t2[n2 - 1] = arguments[n2];
        if (r2) {
          n2 = 0;
          for (var i = (r2 = r2.slice(0)).length; n2 < i; ++n2)
            r2[n2].apply(this, t2);
        }
        return this;
      }, n.prototype.listeners = function(e2) {
        return this._callbacks = this._callbacks || {}, this._callbacks["$" + e2] || [];
      }, n.prototype.hasListeners = function(e2) {
        return !!this.listeners(e2).length;
      };
    }, function(e, t, r) {
      "use strict";
      t.encode = function(e2) {
        var t2 = "";
        for (var r2 in e2)
          e2.hasOwnProperty(r2) && (t2.length && (t2 += "&"), t2 += encodeURIComponent(r2) + "=" + encodeURIComponent(e2[r2]));
        return t2;
      }, t.decode = function(e2) {
        for (var t2 = {}, r2 = e2.split("&"), n = 0, i = r2.length; n < i; n++) {
          var s = r2[n].split("=");
          t2[decodeURIComponent(s[0])] = decodeURIComponent(s[1]);
        }
        return t2;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = (e2) => {
        if (e2[Symbol.asyncIterator])
          return e2;
        if (e2.getReader)
          return async function* () {
            const t2 = e2.getReader();
            try {
              for (; ; ) {
                const {done: e3, value: r2} = await t2.read();
                if (e3)
                  return;
                yield r2;
              }
            } finally {
              t2.releaseLock();
            }
          }();
        throw new Error("unknown stream");
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(999), i = r(1006);
      e.exports = new n("X25519", "ED25519", i);
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.DUMP_SESSION_KEYS = t.NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG = t.NOISE_MSG_MAX_LENGTH_BYTES = void 0, t.NOISE_MSG_MAX_LENGTH_BYTES = 65535, t.NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG = t.NOISE_MSG_MAX_LENGTH_BYTES - 16, t.DUMP_SESSION_KEYS = {NODE_ENV: "production"}.DUMP_SESSION_KEYS;
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        function r2(e2, r3) {
          if (e2.length !== r3.length)
            throw new Error("Inputs should have the same length");
          for (var n = t2.allocUnsafe(e2.length), i = 0; i < e2.length; i++)
            n[i] = e2[i] ^ r3[i];
          return n;
        }
        e.exports = r2, r2.compare = function(e2, t3) {
          if (e2.length !== t3.length)
            throw new Error("Inputs should have the same length");
          for (var r3 = 0; r3 < e2.length; r3++)
            if (e2[r3] !== t3[r3])
              return e2[r3] < t3[r3] ? -1 : 1;
          return 0;
        }, r2.gt = function(e2, t3) {
          return r2.compare(e2, t3) === 1;
        }, r2.lt = function(e2, t3) {
          return r2.compare(e2, t3) === -1;
        }, r2.eq = function(e2, t3) {
          return r2.compare(e2, t3) === 0;
        };
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      const n = r(330);
      e.exports = async (e2, t2, {concurrency: r2 = 1 / 0, stopOnError: i = true} = {}) => new Promise((s, o) => {
        if (typeof t2 != "function")
          throw new TypeError("Mapper function is required");
        if (!Number.isSafeInteger(r2) && r2 !== 1 / 0 || !(r2 >= 1))
          throw new TypeError(`Expected \`concurrency\` to be an integer from 1 and up or \`Infinity\`, got \`${r2}\` (${typeof r2})`);
        const a = [], c = [], u = e2[Symbol.iterator]();
        let h = false, f = false, d = 0, l = 0;
        const p = () => {
          if (h)
            return;
          const e3 = u.next(), r3 = l;
          if (l++, e3.done)
            return f = true, void (d === 0 && (i || c.length === 0 ? s(a) : o(new n(c))));
          d++, (async () => {
            try {
              const n2 = await e3.value;
              a[r3] = await t2(n2, r3), d--, p();
            } catch (n2) {
              i ? (h = true, o(n2)) : (c.push(n2), d--, p());
            }
          })();
        };
        for (let e3 = 0; e3 < r2 && (p(), !f); e3++)
          ;
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(15).multihash, i = r(21), s = r(1057);
      e.exports = class {
        constructor(e2, t2, r2) {
          this.dht = e2, this.key = t2, this.makePath = r2, this._log = i.logger(this.dht.peerId, "query:" + n.toB58String(t2)), this.running = false, this._onStart = this._onStart.bind(this), this._onComplete = this._onComplete.bind(this);
        }
        async run(e2) {
          return this.dht._queryManager.running ? e2.length === 0 ? (this._log.error("Running query with no peers"), {finalSet: new Set(), paths: []}) : (this._run = new s(this), this._log(`query running with K=${this.dht.kBucketSize}, A=${this.dht.concurrency}, D=${Math.min(this.dht.disjointPaths, e2.length)}`), this._run.once("start", this._onStart), this._run.once("complete", this._onComplete), this._run.execute(e2)) : (this._log.error("Attempt to run query after shutdown"), {finalSet: new Set(), paths: []});
        }
        _onStart() {
          this.running = true, this._startTime = Date.now(), this._log("query:start"), this.dht._queryManager.queryStarted(this);
        }
        _onComplete() {
          this.stop();
        }
        stop() {
          this._log(`query:done in ${Date.now() - this._startTime}ms`), this._run && this._log(`${this._run.errors.length} of ${this._run.peersSeen.size} peers errored (${this._run.errors.length / this._run.peersSeen.size * 100}% fail rate)`), this.running && (this._run.removeListener("start", this._onStart), this._run.removeListener("complete", this._onComplete), this.running = false, this._run && this._run.stop(), this.dht._queryManager.queryCompleted(this));
        }
      };
    }, function(e, t, r) {
      "use strict";
      class n extends Error {
        constructor(e2 = "Request timed out") {
          super(e2), this.name = "TimeoutError";
        }
      }
      t.TimeoutError = n;
      class i extends Error {
        constructor(e2 = "The operation was aborted.") {
          super(e2), this.name = "AbortError";
        }
      }
      t.AbortError = i;
      class s extends Error {
        constructor(e2) {
          super(e2.statusText), this.name = "HTTPError", this.response = e2;
        }
      }
      t.HTTPError = s;
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const n = r(391), i = typeof window == "object" && typeof document == "object" && document.nodeType === 9, s = n(), o = i && !s, a = s && !i, c = s && i, u = t2 !== void 0 && t2.release !== void 0 && t2.release.name === "node" && !s, h = typeof importScripts == "function" && typeof self != "undefined" && typeof WorkerGlobalScope != "undefined" && self instanceof WorkerGlobalScope, f = t2 !== void 0 && {NODE_ENV: "production"} !== void 0 && false;
        e.exports = {isTest: f, isElectron: s, isElectronMain: a, isElectronRenderer: c, isNode: u, isBrowser: o, isWebWorker: h, isEnvWithDom: i};
      }).call(this, r(10));
    }, function(e, t, r) {
      "use strict";
      const n = r(128)();
      n.fetch && n.Headers && n.Request && n.Response ? (e.exports = function(...e2) {
        return n.fetch(...e2);
      }, e.exports.Headers = n.Headers, e.exports.Request = n.Request, e.exports.Response = n.Response, e.exports.default = e.exports) : e.exports = r(396);
    }, function(e, t, r) {
      "use strict";
      var n = r(393), i = typeof Symbol == "function" && typeof Symbol("foo") == "symbol", s = Object.prototype.toString, o = Array.prototype.concat, a = Object.defineProperty, c = a && function() {
        var e2 = {};
        try {
          for (var t2 in a(e2, "x", {enumerable: false, value: e2}), e2)
            return false;
          return e2.x === e2;
        } catch (r2) {
          return false;
        }
      }(), u = function(e2, t2, r2, n2) {
        var i2;
        (!(t2 in e2) || typeof (i2 = n2) == "function" && s.call(i2) === "[object Function]" && n2()) && (c ? a(e2, t2, {configurable: true, enumerable: false, value: r2, writable: true}) : e2[t2] = r2);
      }, h = function(e2, t2) {
        var r2 = arguments.length > 2 ? arguments[2] : {}, s2 = n(t2);
        i && (s2 = o.call(s2, Object.getOwnPropertySymbols(t2)));
        for (var a2 = 0; a2 < s2.length; a2 += 1)
          u(e2, s2[a2], t2[s2[a2]], r2[s2[a2]]);
      };
      h.supportsDescriptors = !!c, e.exports = h;
    }, function(e, t, r) {
      "use strict";
      var n = Object.prototype.toString;
      e.exports = function(e2) {
        var t2 = n.call(e2), r2 = t2 === "[object Arguments]";
        return r2 || (r2 = t2 !== "[object Array]" && e2 !== null && typeof e2 == "object" && typeof e2.length == "number" && e2.length >= 0 && n.call(e2.callee) === "[object Function]"), r2;
      };
    }, function(e, t, r) {
      "use strict";
      typeof self != "undefined" ? e.exports = self : typeof window != "undefined" ? e.exports = window : e.exports = Function("return this")();
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        var n = r(219);
        e.exports = function() {
          return typeof t2 == "object" && t2 && t2.Math === Math && t2.Array === Array ? t2 : n;
        };
      }).call(this, r(12));
    }, function(e, t, r) {
      "use strict";
      const n = self.location && self.location.protocol + "//" + self.location.host, i = self.URL;
      e.exports = {URLWithLegacySupport: class {
        constructor(e2 = "", t2 = n) {
          this.super = new i(e2, t2), this.path = this.pathname + this.search, this.auth = this.username && this.password ? this.username + ":" + this.password : null, this.query = this.search && this.search.startsWith("?") ? this.search.slice(1) : null;
        }
        get hash() {
          return this.super.hash;
        }
        get host() {
          return this.super.host;
        }
        get hostname() {
          return this.super.hostname;
        }
        get href() {
          return this.super.href;
        }
        get origin() {
          return this.super.origin;
        }
        get password() {
          return this.super.password;
        }
        get pathname() {
          return this.super.pathname;
        }
        get port() {
          return this.super.port;
        }
        get protocol() {
          return this.super.protocol;
        }
        get search() {
          return this.super.search;
        }
        get searchParams() {
          return this.super.searchParams;
        }
        get username() {
          return this.super.username;
        }
        set hash(e2) {
          this.super.hash = e2;
        }
        set host(e2) {
          this.super.host = e2;
        }
        set hostname(e2) {
          this.super.hostname = e2;
        }
        set href(e2) {
          this.super.href = e2;
        }
        set origin(e2) {
          this.super.origin = e2;
        }
        set password(e2) {
          this.super.password = e2;
        }
        set pathname(e2) {
          this.super.pathname = e2;
        }
        set port(e2) {
          this.super.port = e2;
        }
        set protocol(e2) {
          this.super.protocol = e2;
        }
        set search(e2) {
          this.super.search = e2;
        }
        set searchParams(e2) {
          this.super.searchParams = e2;
        }
        set username(e2) {
          this.super.username = e2;
        }
        createObjectURL(e2) {
          return this.super.createObjectURL(e2);
        }
        revokeObjectURL(e2) {
          this.super.revokeObjectURL(e2);
        }
        toJSON() {
          return this.super.toJSON();
        }
        toString() {
          return this.super.toString();
        }
        format() {
          return this.toString();
        }
      }, URLSearchParams: self.URLSearchParams, defaultBase: n, format: function(e2) {
        if (typeof e2 == "string") {
          return new i(e2).toString();
        }
        if (!(e2 instanceof i)) {
          const t2 = e2.username && e2.password ? `${e2.username}:${e2.password}@` : "", r2 = e2.auth ? e2.auth + "@" : "", n2 = e2.port ? ":" + e2.port : "", i2 = e2.protocol ? e2.protocol + "//" : "", s = e2.host || "", o = e2.hostname || "", a = e2.search || (e2.query ? "?" + e2.query : ""), c = e2.hash || "", u = e2.pathname || "";
          return `${i2}${t2 || r2}${s || o + n2}${e2.path || u + a}${c}`;
        }
      }};
    }, function(e, t, r) {
      "use strict";
      const n = r(135), i = r(5), s = r(6);
      function o(e2) {
        return parseInt(i(e2, "base16"), 16);
      }
      e.exports = {numberToUint8Array: function(e2) {
        let t2 = e2.toString(16);
        t2.length % 2 == 1 && (t2 = "0" + t2);
        return s(t2, "base16");
      }, uint8ArrayToNumber: o, varintUint8ArrayEncode: function(e2) {
        return Uint8Array.from(n.encode(o(e2)));
      }, varintEncode: function(e2) {
        return Uint8Array.from(n.encode(e2));
      }};
    }, function(e, t, r) {
      "use strict";
      t.read = function(e2, t2, r2, n, i) {
        var s, o, a = 8 * i - n - 1, c = (1 << a) - 1, u = c >> 1, h = -7, f = r2 ? i - 1 : 0, d = r2 ? -1 : 1, l = e2[t2 + f];
        for (f += d, s = l & (1 << -h) - 1, l >>= -h, h += a; h > 0; s = 256 * s + e2[t2 + f], f += d, h -= 8)
          ;
        for (o = s & (1 << -h) - 1, s >>= -h, h += n; h > 0; o = 256 * o + e2[t2 + f], f += d, h -= 8)
          ;
        if (s === 0)
          s = 1 - u;
        else {
          if (s === c)
            return o ? NaN : 1 / 0 * (l ? -1 : 1);
          o += Math.pow(2, n), s -= u;
        }
        return (l ? -1 : 1) * o * Math.pow(2, s - n);
      }, t.write = function(e2, t2, r2, n, i, s) {
        var o, a, c, u = 8 * s - i - 1, h = (1 << u) - 1, f = h >> 1, d = i === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, l = n ? 0 : s - 1, p = n ? 1 : -1, y = t2 < 0 || t2 === 0 && 1 / t2 < 0 ? 1 : 0;
        for (t2 = Math.abs(t2), isNaN(t2) || t2 === 1 / 0 ? (a = isNaN(t2) ? 1 : 0, o = h) : (o = Math.floor(Math.log(t2) / Math.LN2), t2 * (c = Math.pow(2, -o)) < 1 && (o--, c *= 2), (t2 += o + f >= 1 ? d / c : d * Math.pow(2, 1 - f)) * c >= 2 && (o++, c /= 2), o + f >= h ? (a = 0, o = h) : o + f >= 1 ? (a = (t2 * c - 1) * Math.pow(2, i), o += f) : (a = t2 * Math.pow(2, f - 1) * Math.pow(2, i), o = 0)); i >= 8; e2[r2 + l] = 255 & a, l += p, a /= 256, i -= 8)
          ;
        for (o = o << i | a, u += i; u > 0; e2[r2 + l] = 255 & o, l += p, o /= 256, u -= 8)
          ;
        e2[r2 + l - p] |= 128 * y;
      };
    }, function(e, t, r) {
      "use strict";
      var n = {}.toString;
      e.exports = Array.isArray || function(e2) {
        return n.call(e2) == "[object Array]";
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      if (r(79), r(44), r(139), r(49), r(78), r(228), r(141), r(50), r(447), r(99), r(13), i === void 0)
        var i = n.jsbn.BigInteger;
      var s = n.asn1, o = n.pki = n.pki || {};
      e.exports = o.pbe = n.pbe = n.pbe || {};
      var a = o.oids, c = {name: "EncryptedPrivateKeyInfo", tagClass: s.Class.UNIVERSAL, type: s.Type.SEQUENCE, constructed: true, value: [{name: "EncryptedPrivateKeyInfo.encryptionAlgorithm", tagClass: s.Class.UNIVERSAL, type: s.Type.SEQUENCE, constructed: true, value: [{name: "AlgorithmIdentifier.algorithm", tagClass: s.Class.UNIVERSAL, type: s.Type.OID, constructed: false, capture: "encryptionOid"}, {name: "AlgorithmIdentifier.parameters", tagClass: s.Class.UNIVERSAL, type: s.Type.SEQUENCE, constructed: true, captureAsn1: "encryptionParams"}]}, {name: "EncryptedPrivateKeyInfo.encryptedData", tagClass: s.Class.UNIVERSAL, type: s.Type.OCTETSTRING, constructed: false, capture: "encryptedData"}]}, u = {name: "PBES2Algorithms", tagClass: s.Class.UNIVERSAL, type: s.Type.SEQUENCE, constructed: true, value: [{name: "PBES2Algorithms.keyDerivationFunc", tagClass: s.Class.UNIVERSAL, type: s.Type.SEQUENCE, constructed: true, value: [{name: "PBES2Algorithms.keyDerivationFunc.oid", tagClass: s.Class.UNIVERSAL, type: s.Type.OID, constructed: false, capture: "kdfOid"}, {name: "PBES2Algorithms.params", tagClass: s.Class.UNIVERSAL, type: s.Type.SEQUENCE, constructed: true, value: [{name: "PBES2Algorithms.params.salt", tagClass: s.Class.UNIVERSAL, type: s.Type.OCTETSTRING, constructed: false, capture: "kdfSalt"}, {name: "PBES2Algorithms.params.iterationCount", tagClass: s.Class.UNIVERSAL, type: s.Type.INTEGER, constructed: false, capture: "kdfIterationCount"}, {name: "PBES2Algorithms.params.keyLength", tagClass: s.Class.UNIVERSAL, type: s.Type.INTEGER, constructed: false, optional: true, capture: "keyLength"}, {name: "PBES2Algorithms.params.prf", tagClass: s.Class.UNIVERSAL, type: s.Type.SEQUENCE, constructed: true, optional: true, value: [{name: "PBES2Algorithms.params.prf.algorithm", tagClass: s.Class.UNIVERSAL, type: s.Type.OID, constructed: false, capture: "prfOid"}]}]}]}, {name: "PBES2Algorithms.encryptionScheme", tagClass: s.Class.UNIVERSAL, type: s.Type.SEQUENCE, constructed: true, value: [{name: "PBES2Algorithms.encryptionScheme.oid", tagClass: s.Class.UNIVERSAL, type: s.Type.OID, constructed: false, capture: "encOid"}, {name: "PBES2Algorithms.encryptionScheme.iv", tagClass: s.Class.UNIVERSAL, type: s.Type.OCTETSTRING, constructed: false, capture: "encIv"}]}]}, h = {name: "pkcs-12PbeParams", tagClass: s.Class.UNIVERSAL, type: s.Type.SEQUENCE, constructed: true, value: [{name: "pkcs-12PbeParams.salt", tagClass: s.Class.UNIVERSAL, type: s.Type.OCTETSTRING, constructed: false, capture: "salt"}, {name: "pkcs-12PbeParams.iterations", tagClass: s.Class.UNIVERSAL, type: s.Type.INTEGER, constructed: false, capture: "iterations"}]};
      function f(e2, t2) {
        return e2.start().update(t2).digest().getBytes();
      }
      function d(e2) {
        var t2;
        if (e2) {
          if (!(t2 = o.oids[s.derToOid(e2)])) {
            var r2 = new Error("Unsupported PRF OID.");
            throw r2.oid = e2, r2.supported = ["hmacWithSHA1", "hmacWithSHA224", "hmacWithSHA256", "hmacWithSHA384", "hmacWithSHA512"], r2;
          }
        } else
          t2 = "hmacWithSHA1";
        return l(t2);
      }
      function l(e2) {
        var t2 = n.md;
        switch (e2) {
          case "hmacWithSHA224":
            t2 = n.md.sha512;
          case "hmacWithSHA1":
          case "hmacWithSHA256":
          case "hmacWithSHA384":
          case "hmacWithSHA512":
            e2 = e2.substr(8).toLowerCase();
            break;
          default:
            var r2 = new Error("Unsupported PRF algorithm.");
            throw r2.algorithm = e2, r2.supported = ["hmacWithSHA1", "hmacWithSHA224", "hmacWithSHA256", "hmacWithSHA384", "hmacWithSHA512"], r2;
        }
        if (!t2 || !(e2 in t2))
          throw new Error("Unknown hash algorithm: " + e2);
        return t2[e2].create();
      }
      o.encryptPrivateKeyInfo = function(e2, t2, r2) {
        (r2 = r2 || {}).saltSize = r2.saltSize || 8, r2.count = r2.count || 2048, r2.algorithm = r2.algorithm || "aes128", r2.prfAlgorithm = r2.prfAlgorithm || "sha1";
        var i2, c2, u2, h2 = n.random.getBytesSync(r2.saltSize), f2 = r2.count, d2 = s.integerToDer(f2);
        if (r2.algorithm.indexOf("aes") === 0 || r2.algorithm === "des") {
          var p, y, g;
          switch (r2.algorithm) {
            case "aes128":
              i2 = 16, p = 16, y = a["aes128-CBC"], g = n.aes.createEncryptionCipher;
              break;
            case "aes192":
              i2 = 24, p = 16, y = a["aes192-CBC"], g = n.aes.createEncryptionCipher;
              break;
            case "aes256":
              i2 = 32, p = 16, y = a["aes256-CBC"], g = n.aes.createEncryptionCipher;
              break;
            case "des":
              i2 = 8, p = 8, y = a.desCBC, g = n.des.createEncryptionCipher;
              break;
            default:
              throw (E = new Error("Cannot encrypt private key. Unknown encryption algorithm.")).algorithm = r2.algorithm, E;
          }
          var b = "hmacWith" + r2.prfAlgorithm.toUpperCase(), m = l(b), v = n.pkcs5.pbkdf2(t2, h2, f2, i2, m), w = n.random.getBytesSync(p);
          (S = g(v)).start(w), S.update(s.toDer(e2)), S.finish(), u2 = S.output.getBytes();
          var _ = function(e3, t3, r3, i3) {
            var a2 = s.create(s.Class.UNIVERSAL, s.Type.SEQUENCE, true, [s.create(s.Class.UNIVERSAL, s.Type.OCTETSTRING, false, e3), s.create(s.Class.UNIVERSAL, s.Type.INTEGER, false, t3.getBytes())]);
            i3 !== "hmacWithSHA1" && a2.value.push(s.create(s.Class.UNIVERSAL, s.Type.INTEGER, false, n.util.hexToBytes(r3.toString(16))), s.create(s.Class.UNIVERSAL, s.Type.SEQUENCE, true, [s.create(s.Class.UNIVERSAL, s.Type.OID, false, s.oidToDer(o.oids[i3]).getBytes()), s.create(s.Class.UNIVERSAL, s.Type.NULL, false, "")]));
            return a2;
          }(h2, d2, i2, b);
          c2 = s.create(s.Class.UNIVERSAL, s.Type.SEQUENCE, true, [s.create(s.Class.UNIVERSAL, s.Type.OID, false, s.oidToDer(a.pkcs5PBES2).getBytes()), s.create(s.Class.UNIVERSAL, s.Type.SEQUENCE, true, [s.create(s.Class.UNIVERSAL, s.Type.SEQUENCE, true, [s.create(s.Class.UNIVERSAL, s.Type.OID, false, s.oidToDer(a.pkcs5PBKDF2).getBytes()), _]), s.create(s.Class.UNIVERSAL, s.Type.SEQUENCE, true, [s.create(s.Class.UNIVERSAL, s.Type.OID, false, s.oidToDer(y).getBytes()), s.create(s.Class.UNIVERSAL, s.Type.OCTETSTRING, false, w)])])]);
        } else {
          var E;
          if (r2.algorithm !== "3des")
            throw (E = new Error("Cannot encrypt private key. Unknown encryption algorithm.")).algorithm = r2.algorithm, E;
          i2 = 24;
          var S, A = new n.util.ByteBuffer(h2);
          v = o.pbe.generatePkcs12Key(t2, A, 1, f2, i2), w = o.pbe.generatePkcs12Key(t2, A, 2, f2, i2);
          (S = n.des.createEncryptionCipher(v)).start(w), S.update(s.toDer(e2)), S.finish(), u2 = S.output.getBytes(), c2 = s.create(s.Class.UNIVERSAL, s.Type.SEQUENCE, true, [s.create(s.Class.UNIVERSAL, s.Type.OID, false, s.oidToDer(a["pbeWithSHAAnd3-KeyTripleDES-CBC"]).getBytes()), s.create(s.Class.UNIVERSAL, s.Type.SEQUENCE, true, [s.create(s.Class.UNIVERSAL, s.Type.OCTETSTRING, false, h2), s.create(s.Class.UNIVERSAL, s.Type.INTEGER, false, d2.getBytes())])]);
        }
        return s.create(s.Class.UNIVERSAL, s.Type.SEQUENCE, true, [c2, s.create(s.Class.UNIVERSAL, s.Type.OCTETSTRING, false, u2)]);
      }, o.decryptPrivateKeyInfo = function(e2, t2) {
        var r2 = null, i2 = {}, a2 = [];
        if (!s.validate(e2, c, i2, a2)) {
          var u2 = new Error("Cannot read encrypted private key. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");
          throw u2.errors = a2, u2;
        }
        var h2 = s.derToOid(i2.encryptionOid), f2 = o.pbe.getCipher(h2, i2.encryptionParams, t2), d2 = n.util.createBuffer(i2.encryptedData);
        return f2.update(d2), f2.finish() && (r2 = s.fromDer(f2.output)), r2;
      }, o.encryptedPrivateKeyToPem = function(e2, t2) {
        var r2 = {type: "ENCRYPTED PRIVATE KEY", body: s.toDer(e2).getBytes()};
        return n.pem.encode(r2, {maxline: t2});
      }, o.encryptedPrivateKeyFromPem = function(e2) {
        var t2 = n.pem.decode(e2)[0];
        if (t2.type !== "ENCRYPTED PRIVATE KEY") {
          var r2 = new Error('Could not convert encrypted private key from PEM; PEM header type is "ENCRYPTED PRIVATE KEY".');
          throw r2.headerType = t2.type, r2;
        }
        if (t2.procType && t2.procType.type === "ENCRYPTED")
          throw new Error("Could not convert encrypted private key from PEM; PEM is encrypted.");
        return s.fromDer(t2.body);
      }, o.encryptRsaPrivateKey = function(e2, t2, r2) {
        if (!(r2 = r2 || {}).legacy) {
          var i2 = o.wrapRsaPrivateKey(o.privateKeyToAsn1(e2));
          return i2 = o.encryptPrivateKeyInfo(i2, t2, r2), o.encryptedPrivateKeyToPem(i2);
        }
        var a2, c2, u2, h2;
        switch (r2.algorithm) {
          case "aes128":
            a2 = "AES-128-CBC", u2 = 16, c2 = n.random.getBytesSync(16), h2 = n.aes.createEncryptionCipher;
            break;
          case "aes192":
            a2 = "AES-192-CBC", u2 = 24, c2 = n.random.getBytesSync(16), h2 = n.aes.createEncryptionCipher;
            break;
          case "aes256":
            a2 = "AES-256-CBC", u2 = 32, c2 = n.random.getBytesSync(16), h2 = n.aes.createEncryptionCipher;
            break;
          case "3des":
            a2 = "DES-EDE3-CBC", u2 = 24, c2 = n.random.getBytesSync(8), h2 = n.des.createEncryptionCipher;
            break;
          case "des":
            a2 = "DES-CBC", u2 = 8, c2 = n.random.getBytesSync(8), h2 = n.des.createEncryptionCipher;
            break;
          default:
            var f2 = new Error('Could not encrypt RSA private key; unsupported encryption algorithm "' + r2.algorithm + '".');
            throw f2.algorithm = r2.algorithm, f2;
        }
        var d2 = h2(n.pbe.opensslDeriveBytes(t2, c2.substr(0, 8), u2));
        d2.start(c2), d2.update(s.toDer(o.privateKeyToAsn1(e2))), d2.finish();
        var l2 = {type: "RSA PRIVATE KEY", procType: {version: "4", type: "ENCRYPTED"}, dekInfo: {algorithm: a2, parameters: n.util.bytesToHex(c2).toUpperCase()}, body: d2.output.getBytes()};
        return n.pem.encode(l2);
      }, o.decryptRsaPrivateKey = function(e2, t2) {
        var r2 = null, i2 = n.pem.decode(e2)[0];
        if (i2.type !== "ENCRYPTED PRIVATE KEY" && i2.type !== "PRIVATE KEY" && i2.type !== "RSA PRIVATE KEY")
          throw (u2 = new Error('Could not convert private key from PEM; PEM header type is not "ENCRYPTED PRIVATE KEY", "PRIVATE KEY", or "RSA PRIVATE KEY".')).headerType = u2, u2;
        if (i2.procType && i2.procType.type === "ENCRYPTED") {
          var a2, c2;
          switch (i2.dekInfo.algorithm) {
            case "DES-CBC":
              a2 = 8, c2 = n.des.createDecryptionCipher;
              break;
            case "DES-EDE3-CBC":
              a2 = 24, c2 = n.des.createDecryptionCipher;
              break;
            case "AES-128-CBC":
              a2 = 16, c2 = n.aes.createDecryptionCipher;
              break;
            case "AES-192-CBC":
              a2 = 24, c2 = n.aes.createDecryptionCipher;
              break;
            case "AES-256-CBC":
              a2 = 32, c2 = n.aes.createDecryptionCipher;
              break;
            case "RC2-40-CBC":
              a2 = 5, c2 = function(e3) {
                return n.rc2.createDecryptionCipher(e3, 40);
              };
              break;
            case "RC2-64-CBC":
              a2 = 8, c2 = function(e3) {
                return n.rc2.createDecryptionCipher(e3, 64);
              };
              break;
            case "RC2-128-CBC":
              a2 = 16, c2 = function(e3) {
                return n.rc2.createDecryptionCipher(e3, 128);
              };
              break;
            default:
              var u2;
              throw (u2 = new Error('Could not decrypt private key; unsupported encryption algorithm "' + i2.dekInfo.algorithm + '".')).algorithm = i2.dekInfo.algorithm, u2;
          }
          var h2 = n.util.hexToBytes(i2.dekInfo.parameters), f2 = c2(n.pbe.opensslDeriveBytes(t2, h2.substr(0, 8), a2));
          if (f2.start(h2), f2.update(n.util.createBuffer(i2.body)), !f2.finish())
            return r2;
          r2 = f2.output.getBytes();
        } else
          r2 = i2.body;
        return (r2 = i2.type === "ENCRYPTED PRIVATE KEY" ? o.decryptPrivateKeyInfo(s.fromDer(r2), t2) : s.fromDer(r2)) !== null && (r2 = o.privateKeyFromAsn1(r2)), r2;
      }, o.pbe.generatePkcs12Key = function(e2, t2, r2, i2, s2, o2) {
        var a2, c2;
        if (o2 == null) {
          if (!("sha1" in n.md))
            throw new Error('"sha1" hash algorithm unavailable.');
          o2 = n.md.sha1.create();
        }
        var u2 = o2.digestLength, h2 = o2.blockLength, f2 = new n.util.ByteBuffer(), d2 = new n.util.ByteBuffer();
        if (e2 != null) {
          for (c2 = 0; c2 < e2.length; c2++)
            d2.putInt16(e2.charCodeAt(c2));
          d2.putInt16(0);
        }
        var l2 = d2.length(), p = t2.length(), y = new n.util.ByteBuffer();
        y.fillWithByte(r2, h2);
        var g = h2 * Math.ceil(p / h2), b = new n.util.ByteBuffer();
        for (c2 = 0; c2 < g; c2++)
          b.putByte(t2.at(c2 % p));
        var m = h2 * Math.ceil(l2 / h2), v = new n.util.ByteBuffer();
        for (c2 = 0; c2 < m; c2++)
          v.putByte(d2.at(c2 % l2));
        var w = b;
        w.putBuffer(v);
        for (var _ = Math.ceil(s2 / u2), E = 1; E <= _; E++) {
          var S = new n.util.ByteBuffer();
          S.putBytes(y.bytes()), S.putBytes(w.bytes());
          for (var A = 0; A < i2; A++)
            o2.start(), o2.update(S.getBytes()), S = o2.digest();
          var I = new n.util.ByteBuffer();
          for (c2 = 0; c2 < h2; c2++)
            I.putByte(S.at(c2 % u2));
          var k = Math.ceil(p / h2) + Math.ceil(l2 / h2), R = new n.util.ByteBuffer();
          for (a2 = 0; a2 < k; a2++) {
            var T = new n.util.ByteBuffer(w.getBytes(h2)), C = 511;
            for (c2 = I.length() - 1; c2 >= 0; c2--)
              C >>= 8, C += I.at(c2) + T.at(c2), T.setAt(c2, 255 & C);
            R.putBuffer(T);
          }
          w = R, f2.putBuffer(S);
        }
        return f2.truncate(f2.length() - s2), f2;
      }, o.pbe.getCipher = function(e2, t2, r2) {
        switch (e2) {
          case o.oids.pkcs5PBES2:
            return o.pbe.getCipherForPBES2(e2, t2, r2);
          case o.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:
          case o.oids["pbewithSHAAnd40BitRC2-CBC"]:
            return o.pbe.getCipherForPKCS12PBE(e2, t2, r2);
          default:
            var n2 = new Error("Cannot read encrypted PBE data block. Unsupported OID.");
            throw n2.oid = e2, n2.supportedOids = ["pkcs5PBES2", "pbeWithSHAAnd3-KeyTripleDES-CBC", "pbewithSHAAnd40BitRC2-CBC"], n2;
        }
      }, o.pbe.getCipherForPBES2 = function(e2, t2, r2) {
        var i2, a2 = {}, c2 = [];
        if (!s.validate(t2, u, a2, c2))
          throw (i2 = new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.")).errors = c2, i2;
        if ((e2 = s.derToOid(a2.kdfOid)) !== o.oids.pkcs5PBKDF2)
          throw (i2 = new Error("Cannot read encrypted private key. Unsupported key derivation function OID.")).oid = e2, i2.supportedOids = ["pkcs5PBKDF2"], i2;
        if ((e2 = s.derToOid(a2.encOid)) !== o.oids["aes128-CBC"] && e2 !== o.oids["aes192-CBC"] && e2 !== o.oids["aes256-CBC"] && e2 !== o.oids["des-EDE3-CBC"] && e2 !== o.oids.desCBC)
          throw (i2 = new Error("Cannot read encrypted private key. Unsupported encryption scheme OID.")).oid = e2, i2.supportedOids = ["aes128-CBC", "aes192-CBC", "aes256-CBC", "des-EDE3-CBC", "desCBC"], i2;
        var h2, f2, l2 = a2.kdfSalt, p = n.util.createBuffer(a2.kdfIterationCount);
        switch (p = p.getInt(p.length() << 3), o.oids[e2]) {
          case "aes128-CBC":
            h2 = 16, f2 = n.aes.createDecryptionCipher;
            break;
          case "aes192-CBC":
            h2 = 24, f2 = n.aes.createDecryptionCipher;
            break;
          case "aes256-CBC":
            h2 = 32, f2 = n.aes.createDecryptionCipher;
            break;
          case "des-EDE3-CBC":
            h2 = 24, f2 = n.des.createDecryptionCipher;
            break;
          case "desCBC":
            h2 = 8, f2 = n.des.createDecryptionCipher;
        }
        var y = d(a2.prfOid), g = n.pkcs5.pbkdf2(r2, l2, p, h2, y), b = a2.encIv, m = f2(g);
        return m.start(b), m;
      }, o.pbe.getCipherForPKCS12PBE = function(e2, t2, r2) {
        var i2 = {}, a2 = [];
        if (!s.validate(t2, h, i2, a2))
          throw (y = new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.")).errors = a2, y;
        var c2, u2, f2, l2 = n.util.createBuffer(i2.salt), p = n.util.createBuffer(i2.iterations);
        switch (p = p.getInt(p.length() << 3), e2) {
          case o.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:
            c2 = 24, u2 = 8, f2 = n.des.startDecrypting;
            break;
          case o.oids["pbewithSHAAnd40BitRC2-CBC"]:
            c2 = 5, u2 = 8, f2 = function(e3, t3) {
              var r3 = n.rc2.createDecryptionCipher(e3, 40);
              return r3.start(t3, null), r3;
            };
            break;
          default:
            var y;
            throw (y = new Error("Cannot read PKCS #12 PBE data block. Unsupported OID.")).oid = e2, y;
        }
        var g = d(i2.prfOid), b = o.pbe.generatePkcs12Key(r2, l2, 1, p, c2, g);
        return g.start(), f2(b, o.pbe.generatePkcs12Key(r2, l2, 2, p, u2, g));
      }, o.pbe.opensslDeriveBytes = function(e2, t2, r2, i2) {
        if (i2 == null) {
          if (!("md5" in n.md))
            throw new Error('"md5" hash algorithm unavailable.');
          i2 = n.md.md5.create();
        }
        t2 === null && (t2 = "");
        for (var s2 = [f(i2, e2 + t2)], o2 = 16, a2 = 1; o2 < r2; ++a2, o2 += 16)
          s2.push(f(i2, s2[a2 - 1] + e2 + t2));
        return s2.join("").substr(0, r2);
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      r(13), e.exports = n.cipher = n.cipher || {}, n.cipher.algorithms = n.cipher.algorithms || {}, n.cipher.createCipher = function(e2, t2) {
        var r2 = e2;
        if (typeof r2 == "string" && (r2 = n.cipher.getAlgorithm(r2)) && (r2 = r2()), !r2)
          throw new Error("Unsupported algorithm: " + e2);
        return new n.cipher.BlockCipher({algorithm: r2, key: t2, decrypt: false});
      }, n.cipher.createDecipher = function(e2, t2) {
        var r2 = e2;
        if (typeof r2 == "string" && (r2 = n.cipher.getAlgorithm(r2)) && (r2 = r2()), !r2)
          throw new Error("Unsupported algorithm: " + e2);
        return new n.cipher.BlockCipher({algorithm: r2, key: t2, decrypt: true});
      }, n.cipher.registerAlgorithm = function(e2, t2) {
        e2 = e2.toUpperCase(), n.cipher.algorithms[e2] = t2;
      }, n.cipher.getAlgorithm = function(e2) {
        return (e2 = e2.toUpperCase()) in n.cipher.algorithms ? n.cipher.algorithms[e2] : null;
      };
      var i = n.cipher.BlockCipher = function(e2) {
        this.algorithm = e2.algorithm, this.mode = this.algorithm.mode, this.blockSize = this.mode.blockSize, this._finish = false, this._input = null, this.output = null, this._op = e2.decrypt ? this.mode.decrypt : this.mode.encrypt, this._decrypt = e2.decrypt, this.algorithm.initialize(e2);
      };
      i.prototype.start = function(e2) {
        e2 = e2 || {};
        var t2 = {};
        for (var r2 in e2)
          t2[r2] = e2[r2];
        t2.decrypt = this._decrypt, this._finish = false, this._input = n.util.createBuffer(), this.output = e2.output || n.util.createBuffer(), this.mode.start(t2);
      }, i.prototype.update = function(e2) {
        for (e2 && this._input.putBuffer(e2); !this._op.call(this.mode, this._input, this.output, this._finish) && !this._finish; )
          ;
        this._input.compact();
      }, i.prototype.finish = function(e2) {
        !e2 || this.mode.name !== "ECB" && this.mode.name !== "CBC" || (this.mode.pad = function(t3) {
          return e2(this.blockSize, t3, false);
        }, this.mode.unpad = function(t3) {
          return e2(this.blockSize, t3, true);
        });
        var t2 = {};
        return t2.decrypt = this._decrypt, t2.overflow = this._input.length() % this.blockSize, !(!this._decrypt && this.mode.pad && !this.mode.pad(this._input, t2)) && (this._finish = true, this.update(), !(this._decrypt && this.mode.unpad && !this.mode.unpad(this.output, t2)) && !(this.mode.afterFinish && !this.mode.afterFinish(this.output, t2)));
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      r(13), n.cipher = n.cipher || {};
      var i = e.exports = n.cipher.modes = n.cipher.modes || {};
      function s(e2, t2) {
        if (typeof e2 == "string" && (e2 = n.util.createBuffer(e2)), n.util.isArray(e2) && e2.length > 4) {
          var r2 = e2;
          e2 = n.util.createBuffer();
          for (var i2 = 0; i2 < r2.length; ++i2)
            e2.putByte(r2[i2]);
        }
        if (e2.length() < t2)
          throw new Error("Invalid IV length; got " + e2.length() + " bytes and expected " + t2 + " bytes.");
        if (!n.util.isArray(e2)) {
          var s2 = [], o2 = t2 / 4;
          for (i2 = 0; i2 < o2; ++i2)
            s2.push(e2.getInt32());
          e2 = s2;
        }
        return e2;
      }
      function o(e2) {
        e2[e2.length - 1] = e2[e2.length - 1] + 1 & 4294967295;
      }
      function a(e2) {
        return [e2 / 4294967296 | 0, 4294967295 & e2];
      }
      i.ecb = function(e2) {
        e2 = e2 || {}, this.name = "ECB", this.cipher = e2.cipher, this.blockSize = e2.blockSize || 16, this._ints = this.blockSize / 4, this._inBlock = new Array(this._ints), this._outBlock = new Array(this._ints);
      }, i.ecb.prototype.start = function(e2) {
      }, i.ecb.prototype.encrypt = function(e2, t2, r2) {
        if (e2.length() < this.blockSize && !(r2 && e2.length() > 0))
          return true;
        for (var n2 = 0; n2 < this._ints; ++n2)
          this._inBlock[n2] = e2.getInt32();
        this.cipher.encrypt(this._inBlock, this._outBlock);
        for (n2 = 0; n2 < this._ints; ++n2)
          t2.putInt32(this._outBlock[n2]);
      }, i.ecb.prototype.decrypt = function(e2, t2, r2) {
        if (e2.length() < this.blockSize && !(r2 && e2.length() > 0))
          return true;
        for (var n2 = 0; n2 < this._ints; ++n2)
          this._inBlock[n2] = e2.getInt32();
        this.cipher.decrypt(this._inBlock, this._outBlock);
        for (n2 = 0; n2 < this._ints; ++n2)
          t2.putInt32(this._outBlock[n2]);
      }, i.ecb.prototype.pad = function(e2, t2) {
        var r2 = e2.length() === this.blockSize ? this.blockSize : this.blockSize - e2.length();
        return e2.fillWithByte(r2, r2), true;
      }, i.ecb.prototype.unpad = function(e2, t2) {
        if (t2.overflow > 0)
          return false;
        var r2 = e2.length(), n2 = e2.at(r2 - 1);
        return !(n2 > this.blockSize << 2) && (e2.truncate(n2), true);
      }, i.cbc = function(e2) {
        e2 = e2 || {}, this.name = "CBC", this.cipher = e2.cipher, this.blockSize = e2.blockSize || 16, this._ints = this.blockSize / 4, this._inBlock = new Array(this._ints), this._outBlock = new Array(this._ints);
      }, i.cbc.prototype.start = function(e2) {
        if (e2.iv === null) {
          if (!this._prev)
            throw new Error("Invalid IV parameter.");
          this._iv = this._prev.slice(0);
        } else {
          if (!("iv" in e2))
            throw new Error("Invalid IV parameter.");
          this._iv = s(e2.iv, this.blockSize), this._prev = this._iv.slice(0);
        }
      }, i.cbc.prototype.encrypt = function(e2, t2, r2) {
        if (e2.length() < this.blockSize && !(r2 && e2.length() > 0))
          return true;
        for (var n2 = 0; n2 < this._ints; ++n2)
          this._inBlock[n2] = this._prev[n2] ^ e2.getInt32();
        this.cipher.encrypt(this._inBlock, this._outBlock);
        for (n2 = 0; n2 < this._ints; ++n2)
          t2.putInt32(this._outBlock[n2]);
        this._prev = this._outBlock;
      }, i.cbc.prototype.decrypt = function(e2, t2, r2) {
        if (e2.length() < this.blockSize && !(r2 && e2.length() > 0))
          return true;
        for (var n2 = 0; n2 < this._ints; ++n2)
          this._inBlock[n2] = e2.getInt32();
        this.cipher.decrypt(this._inBlock, this._outBlock);
        for (n2 = 0; n2 < this._ints; ++n2)
          t2.putInt32(this._prev[n2] ^ this._outBlock[n2]);
        this._prev = this._inBlock.slice(0);
      }, i.cbc.prototype.pad = function(e2, t2) {
        var r2 = e2.length() === this.blockSize ? this.blockSize : this.blockSize - e2.length();
        return e2.fillWithByte(r2, r2), true;
      }, i.cbc.prototype.unpad = function(e2, t2) {
        if (t2.overflow > 0)
          return false;
        var r2 = e2.length(), n2 = e2.at(r2 - 1);
        return !(n2 > this.blockSize << 2) && (e2.truncate(n2), true);
      }, i.cfb = function(e2) {
        e2 = e2 || {}, this.name = "CFB", this.cipher = e2.cipher, this.blockSize = e2.blockSize || 16, this._ints = this.blockSize / 4, this._inBlock = null, this._outBlock = new Array(this._ints), this._partialBlock = new Array(this._ints), this._partialOutput = n.util.createBuffer(), this._partialBytes = 0;
      }, i.cfb.prototype.start = function(e2) {
        if (!("iv" in e2))
          throw new Error("Invalid IV parameter.");
        this._iv = s(e2.iv, this.blockSize), this._inBlock = this._iv.slice(0), this._partialBytes = 0;
      }, i.cfb.prototype.encrypt = function(e2, t2, r2) {
        var n2 = e2.length();
        if (n2 === 0)
          return true;
        if (this.cipher.encrypt(this._inBlock, this._outBlock), this._partialBytes === 0 && n2 >= this.blockSize)
          for (var i2 = 0; i2 < this._ints; ++i2)
            this._inBlock[i2] = e2.getInt32() ^ this._outBlock[i2], t2.putInt32(this._inBlock[i2]);
        else {
          var s2 = (this.blockSize - n2) % this.blockSize;
          s2 > 0 && (s2 = this.blockSize - s2), this._partialOutput.clear();
          for (i2 = 0; i2 < this._ints; ++i2)
            this._partialBlock[i2] = e2.getInt32() ^ this._outBlock[i2], this._partialOutput.putInt32(this._partialBlock[i2]);
          if (s2 > 0)
            e2.read -= this.blockSize;
          else
            for (i2 = 0; i2 < this._ints; ++i2)
              this._inBlock[i2] = this._partialBlock[i2];
          if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes), s2 > 0 && !r2)
            return t2.putBytes(this._partialOutput.getBytes(s2 - this._partialBytes)), this._partialBytes = s2, true;
          t2.putBytes(this._partialOutput.getBytes(n2 - this._partialBytes)), this._partialBytes = 0;
        }
      }, i.cfb.prototype.decrypt = function(e2, t2, r2) {
        var n2 = e2.length();
        if (n2 === 0)
          return true;
        if (this.cipher.encrypt(this._inBlock, this._outBlock), this._partialBytes === 0 && n2 >= this.blockSize)
          for (var i2 = 0; i2 < this._ints; ++i2)
            this._inBlock[i2] = e2.getInt32(), t2.putInt32(this._inBlock[i2] ^ this._outBlock[i2]);
        else {
          var s2 = (this.blockSize - n2) % this.blockSize;
          s2 > 0 && (s2 = this.blockSize - s2), this._partialOutput.clear();
          for (i2 = 0; i2 < this._ints; ++i2)
            this._partialBlock[i2] = e2.getInt32(), this._partialOutput.putInt32(this._partialBlock[i2] ^ this._outBlock[i2]);
          if (s2 > 0)
            e2.read -= this.blockSize;
          else
            for (i2 = 0; i2 < this._ints; ++i2)
              this._inBlock[i2] = this._partialBlock[i2];
          if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes), s2 > 0 && !r2)
            return t2.putBytes(this._partialOutput.getBytes(s2 - this._partialBytes)), this._partialBytes = s2, true;
          t2.putBytes(this._partialOutput.getBytes(n2 - this._partialBytes)), this._partialBytes = 0;
        }
      }, i.ofb = function(e2) {
        e2 = e2 || {}, this.name = "OFB", this.cipher = e2.cipher, this.blockSize = e2.blockSize || 16, this._ints = this.blockSize / 4, this._inBlock = null, this._outBlock = new Array(this._ints), this._partialOutput = n.util.createBuffer(), this._partialBytes = 0;
      }, i.ofb.prototype.start = function(e2) {
        if (!("iv" in e2))
          throw new Error("Invalid IV parameter.");
        this._iv = s(e2.iv, this.blockSize), this._inBlock = this._iv.slice(0), this._partialBytes = 0;
      }, i.ofb.prototype.encrypt = function(e2, t2, r2) {
        var n2 = e2.length();
        if (e2.length() === 0)
          return true;
        if (this.cipher.encrypt(this._inBlock, this._outBlock), this._partialBytes === 0 && n2 >= this.blockSize)
          for (var i2 = 0; i2 < this._ints; ++i2)
            t2.putInt32(e2.getInt32() ^ this._outBlock[i2]), this._inBlock[i2] = this._outBlock[i2];
        else {
          var s2 = (this.blockSize - n2) % this.blockSize;
          s2 > 0 && (s2 = this.blockSize - s2), this._partialOutput.clear();
          for (i2 = 0; i2 < this._ints; ++i2)
            this._partialOutput.putInt32(e2.getInt32() ^ this._outBlock[i2]);
          if (s2 > 0)
            e2.read -= this.blockSize;
          else
            for (i2 = 0; i2 < this._ints; ++i2)
              this._inBlock[i2] = this._outBlock[i2];
          if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes), s2 > 0 && !r2)
            return t2.putBytes(this._partialOutput.getBytes(s2 - this._partialBytes)), this._partialBytes = s2, true;
          t2.putBytes(this._partialOutput.getBytes(n2 - this._partialBytes)), this._partialBytes = 0;
        }
      }, i.ofb.prototype.decrypt = i.ofb.prototype.encrypt, i.ctr = function(e2) {
        e2 = e2 || {}, this.name = "CTR", this.cipher = e2.cipher, this.blockSize = e2.blockSize || 16, this._ints = this.blockSize / 4, this._inBlock = null, this._outBlock = new Array(this._ints), this._partialOutput = n.util.createBuffer(), this._partialBytes = 0;
      }, i.ctr.prototype.start = function(e2) {
        if (!("iv" in e2))
          throw new Error("Invalid IV parameter.");
        this._iv = s(e2.iv, this.blockSize), this._inBlock = this._iv.slice(0), this._partialBytes = 0;
      }, i.ctr.prototype.encrypt = function(e2, t2, r2) {
        var n2 = e2.length();
        if (n2 === 0)
          return true;
        if (this.cipher.encrypt(this._inBlock, this._outBlock), this._partialBytes === 0 && n2 >= this.blockSize)
          for (var i2 = 0; i2 < this._ints; ++i2)
            t2.putInt32(e2.getInt32() ^ this._outBlock[i2]);
        else {
          var s2 = (this.blockSize - n2) % this.blockSize;
          s2 > 0 && (s2 = this.blockSize - s2), this._partialOutput.clear();
          for (i2 = 0; i2 < this._ints; ++i2)
            this._partialOutput.putInt32(e2.getInt32() ^ this._outBlock[i2]);
          if (s2 > 0 && (e2.read -= this.blockSize), this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes), s2 > 0 && !r2)
            return t2.putBytes(this._partialOutput.getBytes(s2 - this._partialBytes)), this._partialBytes = s2, true;
          t2.putBytes(this._partialOutput.getBytes(n2 - this._partialBytes)), this._partialBytes = 0;
        }
        o(this._inBlock);
      }, i.ctr.prototype.decrypt = i.ctr.prototype.encrypt, i.gcm = function(e2) {
        e2 = e2 || {}, this.name = "GCM", this.cipher = e2.cipher, this.blockSize = e2.blockSize || 16, this._ints = this.blockSize / 4, this._inBlock = new Array(this._ints), this._outBlock = new Array(this._ints), this._partialOutput = n.util.createBuffer(), this._partialBytes = 0, this._R = 3774873600;
      }, i.gcm.prototype.start = function(e2) {
        if (!("iv" in e2))
          throw new Error("Invalid IV parameter.");
        var t2, r2 = n.util.createBuffer(e2.iv);
        if (this._cipherLength = 0, t2 = "additionalData" in e2 ? n.util.createBuffer(e2.additionalData) : n.util.createBuffer(), this._tagLength = "tagLength" in e2 ? e2.tagLength : 128, this._tag = null, e2.decrypt && (this._tag = n.util.createBuffer(e2.tag).getBytes(), this._tag.length !== this._tagLength / 8))
          throw new Error("Authentication tag does not match tag length.");
        this._hashBlock = new Array(this._ints), this.tag = null, this._hashSubkey = new Array(this._ints), this.cipher.encrypt([0, 0, 0, 0], this._hashSubkey), this.componentBits = 4, this._m = this.generateHashTable(this._hashSubkey, this.componentBits);
        var i2 = r2.length();
        if (i2 === 12)
          this._j0 = [r2.getInt32(), r2.getInt32(), r2.getInt32(), 1];
        else {
          for (this._j0 = [0, 0, 0, 0]; r2.length() > 0; )
            this._j0 = this.ghash(this._hashSubkey, this._j0, [r2.getInt32(), r2.getInt32(), r2.getInt32(), r2.getInt32()]);
          this._j0 = this.ghash(this._hashSubkey, this._j0, [0, 0].concat(a(8 * i2)));
        }
        this._inBlock = this._j0.slice(0), o(this._inBlock), this._partialBytes = 0, t2 = n.util.createBuffer(t2), this._aDataLength = a(8 * t2.length());
        var s2 = t2.length() % this.blockSize;
        for (s2 && t2.fillWithByte(0, this.blockSize - s2), this._s = [0, 0, 0, 0]; t2.length() > 0; )
          this._s = this.ghash(this._hashSubkey, this._s, [t2.getInt32(), t2.getInt32(), t2.getInt32(), t2.getInt32()]);
      }, i.gcm.prototype.encrypt = function(e2, t2, r2) {
        var n2 = e2.length();
        if (n2 === 0)
          return true;
        if (this.cipher.encrypt(this._inBlock, this._outBlock), this._partialBytes === 0 && n2 >= this.blockSize) {
          for (var i2 = 0; i2 < this._ints; ++i2)
            t2.putInt32(this._outBlock[i2] ^= e2.getInt32());
          this._cipherLength += this.blockSize;
        } else {
          var s2 = (this.blockSize - n2) % this.blockSize;
          s2 > 0 && (s2 = this.blockSize - s2), this._partialOutput.clear();
          for (i2 = 0; i2 < this._ints; ++i2)
            this._partialOutput.putInt32(e2.getInt32() ^ this._outBlock[i2]);
          if (s2 <= 0 || r2) {
            if (r2) {
              var a2 = n2 % this.blockSize;
              this._cipherLength += a2, this._partialOutput.truncate(this.blockSize - a2);
            } else
              this._cipherLength += this.blockSize;
            for (i2 = 0; i2 < this._ints; ++i2)
              this._outBlock[i2] = this._partialOutput.getInt32();
            this._partialOutput.read -= this.blockSize;
          }
          if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes), s2 > 0 && !r2)
            return e2.read -= this.blockSize, t2.putBytes(this._partialOutput.getBytes(s2 - this._partialBytes)), this._partialBytes = s2, true;
          t2.putBytes(this._partialOutput.getBytes(n2 - this._partialBytes)), this._partialBytes = 0;
        }
        this._s = this.ghash(this._hashSubkey, this._s, this._outBlock), o(this._inBlock);
      }, i.gcm.prototype.decrypt = function(e2, t2, r2) {
        var n2 = e2.length();
        if (n2 < this.blockSize && !(r2 && n2 > 0))
          return true;
        this.cipher.encrypt(this._inBlock, this._outBlock), o(this._inBlock), this._hashBlock[0] = e2.getInt32(), this._hashBlock[1] = e2.getInt32(), this._hashBlock[2] = e2.getInt32(), this._hashBlock[3] = e2.getInt32(), this._s = this.ghash(this._hashSubkey, this._s, this._hashBlock);
        for (var i2 = 0; i2 < this._ints; ++i2)
          t2.putInt32(this._outBlock[i2] ^ this._hashBlock[i2]);
        n2 < this.blockSize ? this._cipherLength += n2 % this.blockSize : this._cipherLength += this.blockSize;
      }, i.gcm.prototype.afterFinish = function(e2, t2) {
        var r2 = true;
        t2.decrypt && t2.overflow && e2.truncate(this.blockSize - t2.overflow), this.tag = n.util.createBuffer();
        var i2 = this._aDataLength.concat(a(8 * this._cipherLength));
        this._s = this.ghash(this._hashSubkey, this._s, i2);
        var s2 = [];
        this.cipher.encrypt(this._j0, s2);
        for (var o2 = 0; o2 < this._ints; ++o2)
          this.tag.putInt32(this._s[o2] ^ s2[o2]);
        return this.tag.truncate(this.tag.length() % (this._tagLength / 8)), t2.decrypt && this.tag.bytes() !== this._tag && (r2 = false), r2;
      }, i.gcm.prototype.multiply = function(e2, t2) {
        for (var r2 = [0, 0, 0, 0], n2 = t2.slice(0), i2 = 0; i2 < 128; ++i2) {
          e2[i2 / 32 | 0] & 1 << 31 - i2 % 32 && (r2[0] ^= n2[0], r2[1] ^= n2[1], r2[2] ^= n2[2], r2[3] ^= n2[3]), this.pow(n2, n2);
        }
        return r2;
      }, i.gcm.prototype.pow = function(e2, t2) {
        for (var r2 = 1 & e2[3], n2 = 3; n2 > 0; --n2)
          t2[n2] = e2[n2] >>> 1 | (1 & e2[n2 - 1]) << 31;
        t2[0] = e2[0] >>> 1, r2 && (t2[0] ^= this._R);
      }, i.gcm.prototype.tableMultiply = function(e2) {
        for (var t2 = [0, 0, 0, 0], r2 = 0; r2 < 32; ++r2) {
          var n2 = e2[r2 / 8 | 0] >>> 4 * (7 - r2 % 8) & 15, i2 = this._m[r2][n2];
          t2[0] ^= i2[0], t2[1] ^= i2[1], t2[2] ^= i2[2], t2[3] ^= i2[3];
        }
        return t2;
      }, i.gcm.prototype.ghash = function(e2, t2, r2) {
        return t2[0] ^= r2[0], t2[1] ^= r2[1], t2[2] ^= r2[2], t2[3] ^= r2[3], this.tableMultiply(t2);
      }, i.gcm.prototype.generateHashTable = function(e2, t2) {
        for (var r2 = 8 / t2, n2 = 4 * r2, i2 = 16 * r2, s2 = new Array(i2), o2 = 0; o2 < i2; ++o2) {
          var a2 = [0, 0, 0, 0], c = (n2 - 1 - o2 % n2) * t2;
          a2[o2 / n2 | 0] = 1 << t2 - 1 << c, s2[o2] = this.generateSubHashTable(this.multiply(a2, e2), t2);
        }
        return s2;
      }, i.gcm.prototype.generateSubHashTable = function(e2, t2) {
        var r2 = 1 << t2, n2 = r2 >>> 1, i2 = new Array(r2);
        i2[n2] = e2.slice(0);
        for (var s2 = n2 >>> 1; s2 > 0; )
          this.pow(i2[2 * s2], i2[s2] = []), s2 >>= 1;
        for (s2 = 2; s2 < n2; ) {
          for (var o2 = 1; o2 < s2; ++o2) {
            var a2 = i2[s2], c = i2[o2];
            i2[s2 + o2] = [a2[0] ^ c[0], a2[1] ^ c[1], a2[2] ^ c[2], a2[3] ^ c[3]];
          }
          s2 *= 2;
        }
        for (i2[0] = [0, 0, 0, 0], s2 = n2 + 1; s2 < r2; ++s2) {
          var u = i2[s2 ^ n2];
          i2[s2] = [e2[0] ^ u[0], e2[1] ^ u[1], e2[2] ^ u[2], e2[3] ^ u[3]];
        }
        return i2;
      };
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        var n = r(8);
        r(444), r(49), r(13);
        var i, s = n.pkcs5 = n.pkcs5 || {};
        n.util.isNodejs && !n.options.usePureJavaScript && (i = r(140)), e.exports = n.pbkdf2 = s.pbkdf2 = function(e2, r2, s2, o, a, c) {
          if (typeof a == "function" && (c = a, a = null), n.util.isNodejs && !n.options.usePureJavaScript && i.pbkdf2 && (a === null || typeof a != "object") && (i.pbkdf2Sync.length > 4 || !a || a === "sha1"))
            return typeof a != "string" && (a = "sha1"), e2 = t2.from(e2, "binary"), r2 = t2.from(r2, "binary"), c ? i.pbkdf2Sync.length === 4 ? i.pbkdf2(e2, r2, s2, o, function(e3, t3) {
              if (e3)
                return c(e3);
              c(null, t3.toString("binary"));
            }) : i.pbkdf2(e2, r2, s2, o, a, function(e3, t3) {
              if (e3)
                return c(e3);
              c(null, t3.toString("binary"));
            }) : i.pbkdf2Sync.length === 4 ? i.pbkdf2Sync(e2, r2, s2, o).toString("binary") : i.pbkdf2Sync(e2, r2, s2, o, a).toString("binary");
          if (a == null && (a = "sha1"), typeof a == "string") {
            if (!(a in n.md.algorithms))
              throw new Error("Unknown hash algorithm: " + a);
            a = n.md[a].create();
          }
          var u = a.digestLength;
          if (o > 4294967295 * u) {
            var h = new Error("Derived key is too long.");
            if (c)
              return c(h);
            throw h;
          }
          var f = Math.ceil(o / u), d = o - (f - 1) * u, l = n.hmac.create();
          l.start(a, e2);
          var p, y, g, b = "";
          if (!c) {
            for (var m = 1; m <= f; ++m) {
              l.start(null, null), l.update(r2), l.update(n.util.int32ToBytes(m)), p = g = l.digest().getBytes();
              for (var v = 2; v <= s2; ++v)
                l.start(null, null), l.update(g), y = l.digest().getBytes(), p = n.util.xorBytes(p, y, u), g = y;
              b += m < f ? p : p.substr(0, d);
            }
            return b;
          }
          m = 1;
          function w() {
            if (m > f)
              return c(null, b);
            l.start(null, null), l.update(r2), l.update(n.util.int32ToBytes(m)), p = g = l.digest().getBytes(), v = 2, _();
          }
          function _() {
            if (v <= s2)
              return l.start(null, null), l.update(g), y = l.digest().getBytes(), p = n.util.xorBytes(p, y, u), g = y, ++v, n.util.setImmediate(_);
            b += m < f ? p : p.substr(0, d), ++m, w();
          }
          w();
        };
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      const n = r(27), i = r(6), s = r(101);
      e.exports = {create: function({algorithm: e2 = "AES-GCM", nonceLength: t2 = 12, keyLength: r2 = 16, digest: o = "SHA-256", saltLength: a = 16, iterations: c = 32767} = {}) {
        const u = s.get();
        return r2 *= 8, {encrypt: async function(s2, h) {
          const f = u.getRandomValues(new Uint8Array(a)), d = u.getRandomValues(new Uint8Array(t2)), l = {name: e2, iv: d}, p = {name: "PBKDF2", salt: f, iterations: c, hash: {name: o}}, y = await u.subtle.importKey("raw", i(h), {name: "PBKDF2"}, false, ["deriveKey", "deriveBits"]), g = await u.subtle.deriveKey(p, y, {name: e2, length: r2}, true, ["encrypt"]), b = await u.subtle.encrypt(l, g, s2);
          return n([f, l.iv, new Uint8Array(b)]);
        }, decrypt: async function(n2, s2) {
          const h = n2.slice(0, a), f = n2.slice(a, a + t2), d = n2.slice(a + t2), l = {name: e2, iv: f}, p = {name: "PBKDF2", salt: h, iterations: c, hash: {name: o}}, y = await u.subtle.importKey("raw", i(s2), {name: "PBKDF2"}, false, ["deriveKey", "deriveBits"]), g = await u.subtle.deriveKey(p, y, {name: e2, length: r2}, true, ["decrypt"]), b = await u.subtle.decrypt(l, g, d);
          return new Uint8Array(b);
        }};
      }};
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        var n = r(8);
        r(100), r(50), r(142), r(13);
        var i = r(453), s = i.publicKeyValidator, o = i.privateKeyValidator;
        if (a === void 0)
          var a = n.jsbn.BigInteger;
        var c = n.util.ByteBuffer, u = t2 === void 0 ? Uint8Array : t2;
        n.pki = n.pki || {}, e.exports = n.pki.ed25519 = n.ed25519 = n.ed25519 || {};
        var h = n.ed25519;
        function f(e2) {
          var r2 = e2.message;
          if (r2 instanceof Uint8Array || r2 instanceof u)
            return r2;
          var n2 = e2.encoding;
          if (r2 === void 0) {
            if (!e2.md)
              throw new TypeError('"options.message" or "options.md" not specified.');
            r2 = e2.md.digest().getBytes(), n2 = "binary";
          }
          if (typeof r2 == "string" && !n2)
            throw new TypeError('"options.encoding" must be "binary" or "utf8".');
          if (typeof r2 == "string") {
            if (t2 !== void 0)
              return t2.from(r2, n2);
            r2 = new c(r2, n2);
          } else if (!(r2 instanceof c))
            throw new TypeError('"options.message" must be a node.js Buffer, a Uint8Array, a forge ByteBuffer, or a string with "options.encoding" specifying its encoding.');
          for (var i2 = new u(r2.length()), s2 = 0; s2 < i2.length; ++s2)
            i2[s2] = r2.at(s2);
          return i2;
        }
        h.constants = {}, h.constants.PUBLIC_KEY_BYTE_LENGTH = 32, h.constants.PRIVATE_KEY_BYTE_LENGTH = 64, h.constants.SEED_BYTE_LENGTH = 32, h.constants.SIGN_BYTE_LENGTH = 64, h.constants.HASH_BYTE_LENGTH = 64, h.generateKeyPair = function(e2) {
          var t3 = (e2 = e2 || {}).seed;
          if (t3 === void 0)
            t3 = n.random.getBytesSync(h.constants.SEED_BYTE_LENGTH);
          else if (typeof t3 == "string") {
            if (t3.length !== h.constants.SEED_BYTE_LENGTH)
              throw new TypeError('"seed" must be ' + h.constants.SEED_BYTE_LENGTH + " bytes in length.");
          } else if (!(t3 instanceof Uint8Array))
            throw new TypeError('"seed" must be a node.js Buffer, Uint8Array, or a binary string.');
          t3 = f({message: t3, encoding: "binary"});
          for (var r2 = new u(h.constants.PUBLIC_KEY_BYTE_LENGTH), i2 = new u(h.constants.PRIVATE_KEY_BYTE_LENGTH), s2 = 0; s2 < 32; ++s2)
            i2[s2] = t3[s2];
          return function(e3, t4) {
            var r3, n2 = [O(), O(), O(), O()], i3 = w(t4, 32);
            for (i3[0] &= 248, i3[31] &= 127, i3[31] |= 64, x(n2, i3), I(e3, n2), r3 = 0; r3 < 32; ++r3)
              t4[r3 + 32] = e3[r3];
          }(r2, i2), {publicKey: r2, privateKey: i2};
        }, h.privateKeyFromAsn1 = function(e2) {
          var t3 = {}, r2 = [];
          if (!n.asn1.validate(e2, o, t3, r2)) {
            var i2 = new Error("Invalid Key.");
            throw i2.errors = r2, i2;
          }
          var s2 = n.asn1.derToOid(t3.privateKeyOid), a2 = n.oids.EdDSA25519;
          if (s2 !== a2)
            throw new Error('Invalid OID "' + s2 + '"; OID must be "' + a2 + '".');
          var c2 = t3.privateKey;
          return {privateKeyBytes: f({message: n.asn1.fromDer(c2).value, encoding: "binary"})};
        }, h.publicKeyFromAsn1 = function(e2) {
          var t3 = {}, r2 = [];
          if (!n.asn1.validate(e2, s, t3, r2)) {
            var i2 = new Error("Invalid Key.");
            throw i2.errors = r2, i2;
          }
          var o2 = n.asn1.derToOid(t3.publicKeyOid), a2 = n.oids.EdDSA25519;
          if (o2 !== a2)
            throw new Error('Invalid OID "' + o2 + '"; OID must be "' + a2 + '".');
          var c2 = t3.ed25519PublicKey;
          if (c2.length !== h.constants.PUBLIC_KEY_BYTE_LENGTH)
            throw new Error("Key length is invalid.");
          return f({message: c2, encoding: "binary"});
        }, h.publicKeyFromPrivateKey = function(e2) {
          var t3 = f({message: (e2 = e2 || {}).privateKey, encoding: "binary"});
          if (t3.length !== h.constants.PRIVATE_KEY_BYTE_LENGTH)
            throw new TypeError('"options.privateKey" must have a byte length of ' + h.constants.PRIVATE_KEY_BYTE_LENGTH);
          for (var r2 = new u(h.constants.PUBLIC_KEY_BYTE_LENGTH), n2 = 0; n2 < r2.length; ++n2)
            r2[n2] = t3[32 + n2];
          return r2;
        }, h.sign = function(e2) {
          var t3 = f(e2 = e2 || {}), r2 = f({message: e2.privateKey, encoding: "binary"});
          if (r2.length === h.constants.SEED_BYTE_LENGTH)
            r2 = h.generateKeyPair({seed: r2}).privateKey;
          else if (r2.length !== h.constants.PRIVATE_KEY_BYTE_LENGTH)
            throw new TypeError('"options.privateKey" must have a byte length of ' + h.constants.SEED_BYTE_LENGTH + " or " + h.constants.PRIVATE_KEY_BYTE_LENGTH);
          var n2 = new u(h.constants.SIGN_BYTE_LENGTH + t3.length);
          !function(e3, t4, r3, n3) {
            var i3, s3, o2 = new Float64Array(64), a2 = [O(), O(), O(), O()], c2 = w(n3, 32);
            c2[0] &= 248, c2[31] &= 127, c2[31] |= 64;
            var u2 = r3 + 64;
            for (i3 = 0; i3 < r3; ++i3)
              e3[64 + i3] = t4[i3];
            for (i3 = 0; i3 < 32; ++i3)
              e3[32 + i3] = c2[32 + i3];
            var h2 = w(e3.subarray(32), r3 + 32);
            for (E(h2), x(a2, h2), I(e3, a2), i3 = 32; i3 < 64; ++i3)
              e3[i3] = n3[i3];
            var f2 = w(e3, r3 + 64);
            for (E(f2), i3 = 32; i3 < 64; ++i3)
              o2[i3] = 0;
            for (i3 = 0; i3 < 32; ++i3)
              o2[i3] = h2[i3];
            for (i3 = 0; i3 < 32; ++i3)
              for (s3 = 0; s3 < 32; s3++)
                o2[i3 + s3] += f2[i3] * c2[s3];
            _(e3.subarray(32), o2);
          }(n2, t3, t3.length, r2);
          for (var i2 = new u(h.constants.SIGN_BYTE_LENGTH), s2 = 0; s2 < i2.length; ++s2)
            i2[s2] = n2[s2];
          return i2;
        }, h.verify = function(e2) {
          var t3 = f(e2 = e2 || {});
          if (e2.signature === void 0)
            throw new TypeError('"options.signature" must be a node.js Buffer, a Uint8Array, a forge ByteBuffer, or a binary string.');
          var r2 = f({message: e2.signature, encoding: "binary"});
          if (r2.length !== h.constants.SIGN_BYTE_LENGTH)
            throw new TypeError('"options.signature" must have a byte length of ' + h.constants.SIGN_BYTE_LENGTH);
          var n2 = f({message: e2.publicKey, encoding: "binary"});
          if (n2.length !== h.constants.PUBLIC_KEY_BYTE_LENGTH)
            throw new TypeError('"options.publicKey" must have a byte length of ' + h.constants.PUBLIC_KEY_BYTE_LENGTH);
          var i2, s2 = new u(h.constants.SIGN_BYTE_LENGTH + t3.length), o2 = new u(h.constants.SIGN_BYTE_LENGTH + t3.length);
          for (i2 = 0; i2 < h.constants.SIGN_BYTE_LENGTH; ++i2)
            s2[i2] = r2[i2];
          for (i2 = 0; i2 < t3.length; ++i2)
            s2[i2 + h.constants.SIGN_BYTE_LENGTH] = t3[i2];
          return function(e3, t4, r3, n3) {
            var i3, s3 = new u(32), o3 = [O(), O(), O(), O()], a2 = [O(), O(), O(), O()];
            if (-1, r3 < 64)
              return -1;
            if (function(e4, t5) {
              var r4 = O(), n4 = O(), i4 = O(), s4 = O(), o4 = O(), a3 = O(), c3 = O();
              N(e4[2], l), function(e5, t6) {
                var r5;
                for (r5 = 0; r5 < 16; ++r5)
                  e5[r5] = t6[2 * r5] + (t6[2 * r5 + 1] << 8);
                e5[15] &= 32767;
              }(e4[1], t5), U(i4, e4[1]), j(s4, i4, p), L(i4, i4, e4[2]), D(s4, e4[2], s4), U(o4, s4), U(a3, o4), j(c3, a3, o4), j(r4, c3, i4), j(r4, r4, s4), function(e5, t6) {
                var r5, n5 = O();
                for (r5 = 0; r5 < 16; ++r5)
                  n5[r5] = t6[r5];
                for (r5 = 250; r5 >= 0; --r5)
                  U(n5, n5), r5 !== 1 && j(n5, n5, t6);
                for (r5 = 0; r5 < 16; ++r5)
                  e5[r5] = n5[r5];
              }(r4, r4), j(r4, r4, i4), j(r4, r4, s4), j(r4, r4, s4), j(e4[0], r4, s4), U(n4, e4[0]), j(n4, n4, s4), R(n4, i4) && j(e4[0], e4[0], v);
              if (U(n4, e4[0]), j(n4, n4, s4), R(n4, i4))
                return -1;
              C(e4[0]) === t5[31] >> 7 && L(e4[0], d, e4[0]);
              return j(e4[3], e4[0], e4[1]), 0;
            }(a2, n3))
              return -1;
            for (i3 = 0; i3 < r3; ++i3)
              e3[i3] = t4[i3];
            for (i3 = 0; i3 < 32; ++i3)
              e3[i3 + 32] = n3[i3];
            var c2 = w(e3, r3);
            if (E(c2), M(o3, a2, c2), x(a2, t4.subarray(32)), S(o3, a2), I(s3, o3), r3 -= 64, T(t4, 0, s3, 0)) {
              for (i3 = 0; i3 < r3; ++i3)
                e3[i3] = 0;
              return -1;
            }
            for (i3 = 0; i3 < r3; ++i3)
              e3[i3] = t4[i3 + 64];
            return r3;
          }(o2, s2, s2.length, n2) >= 0;
        };
        var d = O(), l = O([1]), p = O([30883, 4953, 19914, 30187, 55467, 16705, 2637, 112, 59544, 30585, 16505, 36039, 65139, 11119, 27886, 20995]), y = O([61785, 9906, 39828, 60374, 45398, 33411, 5274, 224, 53552, 61171, 33010, 6542, 64743, 22239, 55772, 9222]), g = O([54554, 36645, 11616, 51542, 42930, 38181, 51040, 26924, 56412, 64982, 57905, 49316, 21502, 52590, 14035, 8553]), b = O([26200, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214]), m = new Float64Array([237, 211, 245, 92, 26, 99, 18, 88, 214, 156, 247, 162, 222, 249, 222, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16]), v = O([41136, 18958, 6951, 50414, 58488, 44335, 6150, 12099, 55207, 15867, 153, 11085, 57099, 20417, 9344, 11139]);
        function w(e2, r2) {
          var i2 = n.md.sha512.create(), s2 = new c(e2);
          i2.update(s2.getBytes(r2), "binary");
          var o2 = i2.digest().getBytes();
          if (t2 !== void 0)
            return t2.from(o2, "binary");
          for (var a2 = new u(h.constants.HASH_BYTE_LENGTH), f2 = 0; f2 < 64; ++f2)
            a2[f2] = o2.charCodeAt(f2);
          return a2;
        }
        function _(e2, t3) {
          var r2, n2, i2, s2;
          for (n2 = 63; n2 >= 32; --n2) {
            for (r2 = 0, i2 = n2 - 32, s2 = n2 - 12; i2 < s2; ++i2)
              t3[i2] += r2 - 16 * t3[n2] * m[i2 - (n2 - 32)], r2 = t3[i2] + 128 >> 8, t3[i2] -= 256 * r2;
            t3[i2] += r2, t3[n2] = 0;
          }
          for (r2 = 0, i2 = 0; i2 < 32; ++i2)
            t3[i2] += r2 - (t3[31] >> 4) * m[i2], r2 = t3[i2] >> 8, t3[i2] &= 255;
          for (i2 = 0; i2 < 32; ++i2)
            t3[i2] -= r2 * m[i2];
          for (n2 = 0; n2 < 32; ++n2)
            t3[n2 + 1] += t3[n2] >> 8, e2[n2] = 255 & t3[n2];
        }
        function E(e2) {
          for (var t3 = new Float64Array(64), r2 = 0; r2 < 64; ++r2)
            t3[r2] = e2[r2], e2[r2] = 0;
          _(e2, t3);
        }
        function S(e2, t3) {
          var r2 = O(), n2 = O(), i2 = O(), s2 = O(), o2 = O(), a2 = O(), c2 = O(), u2 = O(), h2 = O();
          L(r2, e2[1], e2[0]), L(h2, t3[1], t3[0]), j(r2, r2, h2), D(n2, e2[0], e2[1]), D(h2, t3[0], t3[1]), j(n2, n2, h2), j(i2, e2[3], t3[3]), j(i2, i2, y), j(s2, e2[2], t3[2]), D(s2, s2, s2), L(o2, n2, r2), L(a2, s2, i2), D(c2, s2, i2), D(u2, n2, r2), j(e2[0], o2, a2), j(e2[1], u2, c2), j(e2[2], c2, a2), j(e2[3], o2, u2);
        }
        function A(e2, t3, r2) {
          for (var n2 = 0; n2 < 4; ++n2)
            B(e2[n2], t3[n2], r2);
        }
        function I(e2, t3) {
          var r2 = O(), n2 = O(), i2 = O();
          !function(e3, t4) {
            var r3, n3 = O();
            for (r3 = 0; r3 < 16; ++r3)
              n3[r3] = t4[r3];
            for (r3 = 253; r3 >= 0; --r3)
              U(n3, n3), r3 !== 2 && r3 !== 4 && j(n3, n3, t4);
            for (r3 = 0; r3 < 16; ++r3)
              e3[r3] = n3[r3];
          }(i2, t3[2]), j(r2, t3[0], i2), j(n2, t3[1], i2), k(e2, n2), e2[31] ^= C(r2) << 7;
        }
        function k(e2, t3) {
          var r2, n2, i2, s2 = O(), o2 = O();
          for (r2 = 0; r2 < 16; ++r2)
            o2[r2] = t3[r2];
          for (P(o2), P(o2), P(o2), n2 = 0; n2 < 2; ++n2) {
            for (s2[0] = o2[0] - 65517, r2 = 1; r2 < 15; ++r2)
              s2[r2] = o2[r2] - 65535 - (s2[r2 - 1] >> 16 & 1), s2[r2 - 1] &= 65535;
            s2[15] = o2[15] - 32767 - (s2[14] >> 16 & 1), i2 = s2[15] >> 16 & 1, s2[14] &= 65535, B(o2, s2, 1 - i2);
          }
          for (r2 = 0; r2 < 16; r2++)
            e2[2 * r2] = 255 & o2[r2], e2[2 * r2 + 1] = o2[r2] >> 8;
        }
        function R(e2, t3) {
          var r2 = new u(32), n2 = new u(32);
          return k(r2, e2), k(n2, t3), T(r2, 0, n2, 0);
        }
        function T(e2, t3, r2, n2) {
          return function(e3, t4, r3, n3, i2) {
            var s2, o2 = 0;
            for (s2 = 0; s2 < i2; ++s2)
              o2 |= e3[t4 + s2] ^ r3[n3 + s2];
            return (1 & o2 - 1 >>> 8) - 1;
          }(e2, t3, r2, n2, 32);
        }
        function C(e2) {
          var t3 = new u(32);
          return k(t3, e2), 1 & t3[0];
        }
        function M(e2, t3, r2) {
          var n2, i2;
          for (N(e2[0], d), N(e2[1], l), N(e2[2], l), N(e2[3], d), i2 = 255; i2 >= 0; --i2)
            A(e2, t3, n2 = r2[i2 / 8 | 0] >> (7 & i2) & 1), S(t3, e2), S(e2, e2), A(e2, t3, n2);
        }
        function x(e2, t3) {
          var r2 = [O(), O(), O(), O()];
          N(r2[0], g), N(r2[1], b), N(r2[2], l), j(r2[3], g, b), M(e2, r2, t3);
        }
        function N(e2, t3) {
          var r2;
          for (r2 = 0; r2 < 16; r2++)
            e2[r2] = 0 | t3[r2];
        }
        function P(e2) {
          var t3, r2, n2 = 1;
          for (t3 = 0; t3 < 16; ++t3)
            r2 = e2[t3] + n2 + 65535, n2 = Math.floor(r2 / 65536), e2[t3] = r2 - 65536 * n2;
          e2[0] += n2 - 1 + 37 * (n2 - 1);
        }
        function B(e2, t3, r2) {
          for (var n2, i2 = ~(r2 - 1), s2 = 0; s2 < 16; ++s2)
            n2 = i2 & (e2[s2] ^ t3[s2]), e2[s2] ^= n2, t3[s2] ^= n2;
        }
        function O(e2) {
          var t3, r2 = new Float64Array(16);
          if (e2)
            for (t3 = 0; t3 < e2.length; ++t3)
              r2[t3] = e2[t3];
          return r2;
        }
        function D(e2, t3, r2) {
          for (var n2 = 0; n2 < 16; ++n2)
            e2[n2] = t3[n2] + r2[n2];
        }
        function L(e2, t3, r2) {
          for (var n2 = 0; n2 < 16; ++n2)
            e2[n2] = t3[n2] - r2[n2];
        }
        function U(e2, t3) {
          j(e2, t3, t3);
        }
        function j(e2, t3, r2) {
          var n2, i2, s2 = 0, o2 = 0, a2 = 0, c2 = 0, u2 = 0, h2 = 0, f2 = 0, d2 = 0, l2 = 0, p2 = 0, y2 = 0, g2 = 0, b2 = 0, m2 = 0, v2 = 0, w2 = 0, _2 = 0, E2 = 0, S2 = 0, A2 = 0, I2 = 0, k2 = 0, R2 = 0, T2 = 0, C2 = 0, M2 = 0, x2 = 0, N2 = 0, P2 = 0, B2 = 0, O2 = 0, D2 = r2[0], L2 = r2[1], U2 = r2[2], j2 = r2[3], F = r2[4], z = r2[5], q = r2[6], K = r2[7], V = r2[8], H = r2[9], G = r2[10], $ = r2[11], W = r2[12], Y = r2[13], X = r2[14], J = r2[15];
          s2 += (n2 = t3[0]) * D2, o2 += n2 * L2, a2 += n2 * U2, c2 += n2 * j2, u2 += n2 * F, h2 += n2 * z, f2 += n2 * q, d2 += n2 * K, l2 += n2 * V, p2 += n2 * H, y2 += n2 * G, g2 += n2 * $, b2 += n2 * W, m2 += n2 * Y, v2 += n2 * X, w2 += n2 * J, o2 += (n2 = t3[1]) * D2, a2 += n2 * L2, c2 += n2 * U2, u2 += n2 * j2, h2 += n2 * F, f2 += n2 * z, d2 += n2 * q, l2 += n2 * K, p2 += n2 * V, y2 += n2 * H, g2 += n2 * G, b2 += n2 * $, m2 += n2 * W, v2 += n2 * Y, w2 += n2 * X, _2 += n2 * J, a2 += (n2 = t3[2]) * D2, c2 += n2 * L2, u2 += n2 * U2, h2 += n2 * j2, f2 += n2 * F, d2 += n2 * z, l2 += n2 * q, p2 += n2 * K, y2 += n2 * V, g2 += n2 * H, b2 += n2 * G, m2 += n2 * $, v2 += n2 * W, w2 += n2 * Y, _2 += n2 * X, E2 += n2 * J, c2 += (n2 = t3[3]) * D2, u2 += n2 * L2, h2 += n2 * U2, f2 += n2 * j2, d2 += n2 * F, l2 += n2 * z, p2 += n2 * q, y2 += n2 * K, g2 += n2 * V, b2 += n2 * H, m2 += n2 * G, v2 += n2 * $, w2 += n2 * W, _2 += n2 * Y, E2 += n2 * X, S2 += n2 * J, u2 += (n2 = t3[4]) * D2, h2 += n2 * L2, f2 += n2 * U2, d2 += n2 * j2, l2 += n2 * F, p2 += n2 * z, y2 += n2 * q, g2 += n2 * K, b2 += n2 * V, m2 += n2 * H, v2 += n2 * G, w2 += n2 * $, _2 += n2 * W, E2 += n2 * Y, S2 += n2 * X, A2 += n2 * J, h2 += (n2 = t3[5]) * D2, f2 += n2 * L2, d2 += n2 * U2, l2 += n2 * j2, p2 += n2 * F, y2 += n2 * z, g2 += n2 * q, b2 += n2 * K, m2 += n2 * V, v2 += n2 * H, w2 += n2 * G, _2 += n2 * $, E2 += n2 * W, S2 += n2 * Y, A2 += n2 * X, I2 += n2 * J, f2 += (n2 = t3[6]) * D2, d2 += n2 * L2, l2 += n2 * U2, p2 += n2 * j2, y2 += n2 * F, g2 += n2 * z, b2 += n2 * q, m2 += n2 * K, v2 += n2 * V, w2 += n2 * H, _2 += n2 * G, E2 += n2 * $, S2 += n2 * W, A2 += n2 * Y, I2 += n2 * X, k2 += n2 * J, d2 += (n2 = t3[7]) * D2, l2 += n2 * L2, p2 += n2 * U2, y2 += n2 * j2, g2 += n2 * F, b2 += n2 * z, m2 += n2 * q, v2 += n2 * K, w2 += n2 * V, _2 += n2 * H, E2 += n2 * G, S2 += n2 * $, A2 += n2 * W, I2 += n2 * Y, k2 += n2 * X, R2 += n2 * J, l2 += (n2 = t3[8]) * D2, p2 += n2 * L2, y2 += n2 * U2, g2 += n2 * j2, b2 += n2 * F, m2 += n2 * z, v2 += n2 * q, w2 += n2 * K, _2 += n2 * V, E2 += n2 * H, S2 += n2 * G, A2 += n2 * $, I2 += n2 * W, k2 += n2 * Y, R2 += n2 * X, T2 += n2 * J, p2 += (n2 = t3[9]) * D2, y2 += n2 * L2, g2 += n2 * U2, b2 += n2 * j2, m2 += n2 * F, v2 += n2 * z, w2 += n2 * q, _2 += n2 * K, E2 += n2 * V, S2 += n2 * H, A2 += n2 * G, I2 += n2 * $, k2 += n2 * W, R2 += n2 * Y, T2 += n2 * X, C2 += n2 * J, y2 += (n2 = t3[10]) * D2, g2 += n2 * L2, b2 += n2 * U2, m2 += n2 * j2, v2 += n2 * F, w2 += n2 * z, _2 += n2 * q, E2 += n2 * K, S2 += n2 * V, A2 += n2 * H, I2 += n2 * G, k2 += n2 * $, R2 += n2 * W, T2 += n2 * Y, C2 += n2 * X, M2 += n2 * J, g2 += (n2 = t3[11]) * D2, b2 += n2 * L2, m2 += n2 * U2, v2 += n2 * j2, w2 += n2 * F, _2 += n2 * z, E2 += n2 * q, S2 += n2 * K, A2 += n2 * V, I2 += n2 * H, k2 += n2 * G, R2 += n2 * $, T2 += n2 * W, C2 += n2 * Y, M2 += n2 * X, x2 += n2 * J, b2 += (n2 = t3[12]) * D2, m2 += n2 * L2, v2 += n2 * U2, w2 += n2 * j2, _2 += n2 * F, E2 += n2 * z, S2 += n2 * q, A2 += n2 * K, I2 += n2 * V, k2 += n2 * H, R2 += n2 * G, T2 += n2 * $, C2 += n2 * W, M2 += n2 * Y, x2 += n2 * X, N2 += n2 * J, m2 += (n2 = t3[13]) * D2, v2 += n2 * L2, w2 += n2 * U2, _2 += n2 * j2, E2 += n2 * F, S2 += n2 * z, A2 += n2 * q, I2 += n2 * K, k2 += n2 * V, R2 += n2 * H, T2 += n2 * G, C2 += n2 * $, M2 += n2 * W, x2 += n2 * Y, N2 += n2 * X, P2 += n2 * J, v2 += (n2 = t3[14]) * D2, w2 += n2 * L2, _2 += n2 * U2, E2 += n2 * j2, S2 += n2 * F, A2 += n2 * z, I2 += n2 * q, k2 += n2 * K, R2 += n2 * V, T2 += n2 * H, C2 += n2 * G, M2 += n2 * $, x2 += n2 * W, N2 += n2 * Y, P2 += n2 * X, B2 += n2 * J, w2 += (n2 = t3[15]) * D2, o2 += 38 * (E2 += n2 * U2), a2 += 38 * (S2 += n2 * j2), c2 += 38 * (A2 += n2 * F), u2 += 38 * (I2 += n2 * z), h2 += 38 * (k2 += n2 * q), f2 += 38 * (R2 += n2 * K), d2 += 38 * (T2 += n2 * V), l2 += 38 * (C2 += n2 * H), p2 += 38 * (M2 += n2 * G), y2 += 38 * (x2 += n2 * $), g2 += 38 * (N2 += n2 * W), b2 += 38 * (P2 += n2 * Y), m2 += 38 * (B2 += n2 * X), v2 += 38 * (O2 += n2 * J), s2 = (n2 = (s2 += 38 * (_2 += n2 * L2)) + (i2 = 1) + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), o2 = (n2 = o2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), a2 = (n2 = a2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), c2 = (n2 = c2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), u2 = (n2 = u2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), h2 = (n2 = h2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), f2 = (n2 = f2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), d2 = (n2 = d2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), l2 = (n2 = l2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), p2 = (n2 = p2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), y2 = (n2 = y2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), g2 = (n2 = g2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), b2 = (n2 = b2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), m2 = (n2 = m2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), v2 = (n2 = v2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), w2 = (n2 = w2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), s2 = (n2 = (s2 += i2 - 1 + 37 * (i2 - 1)) + (i2 = 1) + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), o2 = (n2 = o2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), a2 = (n2 = a2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), c2 = (n2 = c2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), u2 = (n2 = u2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), h2 = (n2 = h2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), f2 = (n2 = f2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), d2 = (n2 = d2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), l2 = (n2 = l2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), p2 = (n2 = p2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), y2 = (n2 = y2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), g2 = (n2 = g2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), b2 = (n2 = b2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), m2 = (n2 = m2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), v2 = (n2 = v2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), w2 = (n2 = w2 + i2 + 65535) - 65536 * (i2 = Math.floor(n2 / 65536)), s2 += i2 - 1 + 37 * (i2 - 1), e2[0] = s2, e2[1] = o2, e2[2] = a2, e2[3] = c2, e2[4] = u2, e2[5] = h2, e2[6] = f2, e2[7] = d2, e2[8] = l2, e2[9] = p2, e2[10] = y2, e2[11] = g2, e2[12] = b2, e2[13] = m2, e2[14] = v2, e2[15] = w2;
        }
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      var n = t;
      function i(e2) {
        return e2.length === 1 ? "0" + e2 : e2;
      }
      function s(e2) {
        for (var t2 = "", r2 = 0; r2 < e2.length; r2++)
          t2 += i(e2[r2].toString(16));
        return t2;
      }
      n.toArray = function(e2, t2) {
        if (Array.isArray(e2))
          return e2.slice();
        if (!e2)
          return [];
        var r2 = [];
        if (typeof e2 != "string") {
          for (var n2 = 0; n2 < e2.length; n2++)
            r2[n2] = 0 | e2[n2];
          return r2;
        }
        if (t2 === "hex") {
          (e2 = e2.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (e2 = "0" + e2);
          for (n2 = 0; n2 < e2.length; n2 += 2)
            r2.push(parseInt(e2[n2] + e2[n2 + 1], 16));
        } else
          for (n2 = 0; n2 < e2.length; n2++) {
            var i2 = e2.charCodeAt(n2), s2 = i2 >> 8, o = 255 & i2;
            s2 ? r2.push(s2, o) : r2.push(o);
          }
        return r2;
      }, n.zero2 = i, n.toHex = s, n.encode = function(e2, t2) {
        return t2 === "hex" ? s(e2) : e2;
      };
    }, function(e, t, r) {
      "use strict";
      var n;
      function i(e2) {
        this.rand = e2;
      }
      if (e.exports = function(e2) {
        return n || (n = new i(null)), n.generate(e2);
      }, e.exports.Rand = i, i.prototype.generate = function(e2) {
        return this._rand(e2);
      }, i.prototype._rand = function(e2) {
        if (this.rand.getBytes)
          return this.rand.getBytes(e2);
        for (var t2 = new Uint8Array(e2), r2 = 0; r2 < t2.length; r2++)
          t2[r2] = this.rand.getByte();
        return t2;
      }, typeof self == "object")
        self.crypto && self.crypto.getRandomValues ? i.prototype._rand = function(e2) {
          var t2 = new Uint8Array(e2);
          return self.crypto.getRandomValues(t2), t2;
        } : self.msCrypto && self.msCrypto.getRandomValues ? i.prototype._rand = function(e2) {
          var t2 = new Uint8Array(e2);
          return self.msCrypto.getRandomValues(t2), t2;
        } : typeof window == "object" && (i.prototype._rand = function() {
          throw new Error("Not implemented yet");
        });
      else
        try {
          var s = r(468);
          if (typeof s.randomBytes != "function")
            throw new Error("Not supported");
          i.prototype._rand = function(e2) {
            return s.randomBytes(e2);
          };
        } catch (o) {
        }
    }, function(e, t, r) {
      "use strict";
      var n = t;
      n.base = r(104), n.short = r(469), n.mont = r(470), n.edwards = r(471);
    }, function(e, t, r) {
      "use strict";
      var n = r(35).rotr32;
      function i(e2, t2, r2) {
        return e2 & t2 ^ ~e2 & r2;
      }
      function s(e2, t2, r2) {
        return e2 & t2 ^ e2 & r2 ^ t2 & r2;
      }
      function o(e2, t2, r2) {
        return e2 ^ t2 ^ r2;
      }
      t.ft_1 = function(e2, t2, r2, n2) {
        return e2 === 0 ? i(t2, r2, n2) : e2 === 1 || e2 === 3 ? o(t2, r2, n2) : e2 === 2 ? s(t2, r2, n2) : void 0;
      }, t.ch32 = i, t.maj32 = s, t.p32 = o, t.s0_256 = function(e2) {
        return n(e2, 2) ^ n(e2, 13) ^ n(e2, 22);
      }, t.s1_256 = function(e2) {
        return n(e2, 6) ^ n(e2, 11) ^ n(e2, 25);
      }, t.g0_256 = function(e2) {
        return n(e2, 7) ^ n(e2, 18) ^ e2 >>> 3;
      }, t.g1_256 = function(e2) {
        return n(e2, 17) ^ n(e2, 19) ^ e2 >>> 10;
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(35), i = r(81), s = r(234), o = r(51), a = n.sum32, c = n.sum32_4, u = n.sum32_5, h = s.ch32, f = s.maj32, d = s.s0_256, l = s.s1_256, p = s.g0_256, y = s.g1_256, g = i.BlockHash, b = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
      function m() {
        if (!(this instanceof m))
          return new m();
        g.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = b, this.W = new Array(64);
      }
      n.inherits(m, g), e.exports = m, m.blockSize = 512, m.outSize = 256, m.hmacStrength = 192, m.padLength = 64, m.prototype._update = function(e2, t2) {
        for (var r2 = this.W, n2 = 0; n2 < 16; n2++)
          r2[n2] = e2[t2 + n2];
        for (; n2 < r2.length; n2++)
          r2[n2] = c(y(r2[n2 - 2]), r2[n2 - 7], p(r2[n2 - 15]), r2[n2 - 16]);
        var i2 = this.h[0], s2 = this.h[1], g2 = this.h[2], b2 = this.h[3], m2 = this.h[4], v = this.h[5], w = this.h[6], _ = this.h[7];
        for (o(this.k.length === r2.length), n2 = 0; n2 < r2.length; n2++) {
          var E = u(_, l(m2), h(m2, v, w), this.k[n2], r2[n2]), S = a(d(i2), f(i2, s2, g2));
          _ = w, w = v, v = m2, m2 = a(b2, E), b2 = g2, g2 = s2, s2 = i2, i2 = a(E, S);
        }
        this.h[0] = a(this.h[0], i2), this.h[1] = a(this.h[1], s2), this.h[2] = a(this.h[2], g2), this.h[3] = a(this.h[3], b2), this.h[4] = a(this.h[4], m2), this.h[5] = a(this.h[5], v), this.h[6] = a(this.h[6], w), this.h[7] = a(this.h[7], _);
      }, m.prototype._digest = function(e2) {
        return e2 === "hex" ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(35), i = r(81), s = r(51), o = n.rotr64_hi, a = n.rotr64_lo, c = n.shr64_hi, u = n.shr64_lo, h = n.sum64, f = n.sum64_hi, d = n.sum64_lo, l = n.sum64_4_hi, p = n.sum64_4_lo, y = n.sum64_5_hi, g = n.sum64_5_lo, b = i.BlockHash, m = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
      function v() {
        if (!(this instanceof v))
          return new v();
        b.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = m, this.W = new Array(160);
      }
      function w(e2, t2, r2, n2, i2) {
        var s2 = e2 & r2 ^ ~e2 & i2;
        return s2 < 0 && (s2 += 4294967296), s2;
      }
      function _(e2, t2, r2, n2, i2, s2) {
        var o2 = t2 & n2 ^ ~t2 & s2;
        return o2 < 0 && (o2 += 4294967296), o2;
      }
      function E(e2, t2, r2, n2, i2) {
        var s2 = e2 & r2 ^ e2 & i2 ^ r2 & i2;
        return s2 < 0 && (s2 += 4294967296), s2;
      }
      function S(e2, t2, r2, n2, i2, s2) {
        var o2 = t2 & n2 ^ t2 & s2 ^ n2 & s2;
        return o2 < 0 && (o2 += 4294967296), o2;
      }
      function A(e2, t2) {
        var r2 = o(e2, t2, 28) ^ o(t2, e2, 2) ^ o(t2, e2, 7);
        return r2 < 0 && (r2 += 4294967296), r2;
      }
      function I(e2, t2) {
        var r2 = a(e2, t2, 28) ^ a(t2, e2, 2) ^ a(t2, e2, 7);
        return r2 < 0 && (r2 += 4294967296), r2;
      }
      function k(e2, t2) {
        var r2 = o(e2, t2, 14) ^ o(e2, t2, 18) ^ o(t2, e2, 9);
        return r2 < 0 && (r2 += 4294967296), r2;
      }
      function R(e2, t2) {
        var r2 = a(e2, t2, 14) ^ a(e2, t2, 18) ^ a(t2, e2, 9);
        return r2 < 0 && (r2 += 4294967296), r2;
      }
      function T(e2, t2) {
        var r2 = o(e2, t2, 1) ^ o(e2, t2, 8) ^ c(e2, t2, 7);
        return r2 < 0 && (r2 += 4294967296), r2;
      }
      function C(e2, t2) {
        var r2 = a(e2, t2, 1) ^ a(e2, t2, 8) ^ u(e2, t2, 7);
        return r2 < 0 && (r2 += 4294967296), r2;
      }
      function M(e2, t2) {
        var r2 = o(e2, t2, 19) ^ o(t2, e2, 29) ^ c(e2, t2, 6);
        return r2 < 0 && (r2 += 4294967296), r2;
      }
      function x(e2, t2) {
        var r2 = a(e2, t2, 19) ^ a(t2, e2, 29) ^ u(e2, t2, 6);
        return r2 < 0 && (r2 += 4294967296), r2;
      }
      n.inherits(v, b), e.exports = v, v.blockSize = 1024, v.outSize = 512, v.hmacStrength = 192, v.padLength = 128, v.prototype._prepareBlock = function(e2, t2) {
        for (var r2 = this.W, n2 = 0; n2 < 32; n2++)
          r2[n2] = e2[t2 + n2];
        for (; n2 < r2.length; n2 += 2) {
          var i2 = M(r2[n2 - 4], r2[n2 - 3]), s2 = x(r2[n2 - 4], r2[n2 - 3]), o2 = r2[n2 - 14], a2 = r2[n2 - 13], c2 = T(r2[n2 - 30], r2[n2 - 29]), u2 = C(r2[n2 - 30], r2[n2 - 29]), h2 = r2[n2 - 32], f2 = r2[n2 - 31];
          r2[n2] = l(i2, s2, o2, a2, c2, u2, h2, f2), r2[n2 + 1] = p(i2, s2, o2, a2, c2, u2, h2, f2);
        }
      }, v.prototype._update = function(e2, t2) {
        this._prepareBlock(e2, t2);
        var r2 = this.W, n2 = this.h[0], i2 = this.h[1], o2 = this.h[2], a2 = this.h[3], c2 = this.h[4], u2 = this.h[5], l2 = this.h[6], p2 = this.h[7], b2 = this.h[8], m2 = this.h[9], v2 = this.h[10], T2 = this.h[11], C2 = this.h[12], M2 = this.h[13], x2 = this.h[14], N = this.h[15];
        s(this.k.length === r2.length);
        for (var P = 0; P < r2.length; P += 2) {
          var B = x2, O = N, D = k(b2, m2), L = R(b2, m2), U = w(b2, m2, v2, T2, C2), j = _(b2, m2, v2, T2, C2, M2), F = this.k[P], z = this.k[P + 1], q = r2[P], K = r2[P + 1], V = y(B, O, D, L, U, j, F, z, q, K), H = g(B, O, D, L, U, j, F, z, q, K);
          B = A(n2, i2), O = I(n2, i2), D = E(n2, i2, o2, a2, c2), L = S(n2, i2, o2, a2, c2, u2);
          var G = f(B, O, D, L), $ = d(B, O, D, L);
          x2 = C2, N = M2, C2 = v2, M2 = T2, v2 = b2, T2 = m2, b2 = f(l2, p2, V, H), m2 = d(p2, p2, V, H), l2 = c2, p2 = u2, c2 = o2, u2 = a2, o2 = n2, a2 = i2, n2 = f(V, H, G, $), i2 = d(V, H, G, $);
        }
        h(this.h, 0, n2, i2), h(this.h, 2, o2, a2), h(this.h, 4, c2, u2), h(this.h, 6, l2, p2), h(this.h, 8, b2, m2), h(this.h, 10, v2, T2), h(this.h, 12, C2, M2), h(this.h, 14, x2, N);
      }, v.prototype._digest = function(e2) {
        return e2 === "hex" ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(101), i = r(487), s = {SHA1: "SHA-1", SHA256: "SHA-256", SHA512: "SHA-512"};
      t.create = async function(e2, t2) {
        const r2 = s[e2], o = await n.get().subtle.importKey("raw", t2, {name: "HMAC", hash: {name: r2}}, false, ["sign"]);
        return {digest: async (e3) => (async (e4, t3) => {
          const r3 = await n.get().subtle.sign({name: "HMAC"}, e4, t3);
          return new Uint8Array(r3, r3.byteOffset, r3.byteLength);
        })(o, e3), length: i[e2]};
      };
    }, function(e, t, r) {
      "use strict";
      const n = self.location ? self.location.protocol + "//" + self.location.host : "", i = self.URL;
      e.exports = {URLWithLegacySupport: class {
        constructor(e2 = "", t2 = n) {
          this.super = new i(e2, t2), this.path = this.pathname + this.search, this.auth = this.username && this.password ? this.username + ":" + this.password : null, this.query = this.search && this.search.startsWith("?") ? this.search.slice(1) : null;
        }
        get hash() {
          return this.super.hash;
        }
        get host() {
          return this.super.host;
        }
        get hostname() {
          return this.super.hostname;
        }
        get href() {
          return this.super.href;
        }
        get origin() {
          return this.super.origin;
        }
        get password() {
          return this.super.password;
        }
        get pathname() {
          return this.super.pathname;
        }
        get port() {
          return this.super.port;
        }
        get protocol() {
          return this.super.protocol;
        }
        get search() {
          return this.super.search;
        }
        get searchParams() {
          return this.super.searchParams;
        }
        get username() {
          return this.super.username;
        }
        set hash(e2) {
          this.super.hash = e2;
        }
        set host(e2) {
          this.super.host = e2;
        }
        set hostname(e2) {
          this.super.hostname = e2;
        }
        set href(e2) {
          this.super.href = e2;
        }
        set origin(e2) {
          this.super.origin = e2;
        }
        set password(e2) {
          this.super.password = e2;
        }
        set pathname(e2) {
          this.super.pathname = e2;
        }
        set port(e2) {
          this.super.port = e2;
        }
        set protocol(e2) {
          this.super.protocol = e2;
        }
        set search(e2) {
          this.super.search = e2;
        }
        set searchParams(e2) {
          this.super.searchParams = e2;
        }
        set username(e2) {
          this.super.username = e2;
        }
        createObjectURL(e2) {
          return this.super.createObjectURL(e2);
        }
        revokeObjectURL(e2) {
          this.super.revokeObjectURL(e2);
        }
        toJSON() {
          return this.super.toJSON();
        }
        toString() {
          return this.super.toString();
        }
        format() {
          return this.toString();
        }
      }, URLSearchParams: self.URLSearchParams, defaultBase: n, format: function(e2) {
        if (typeof e2 == "string") {
          return new i(e2).toString();
        }
        if (!(e2 instanceof i)) {
          const t2 = e2.username && e2.password ? `${e2.username}:${e2.password}@` : "", r2 = e2.auth ? e2.auth + "@" : "", n2 = e2.port ? ":" + e2.port : "", i2 = e2.protocol ? e2.protocol + "//" : "", s = e2.host || "", o = e2.hostname || "", a = e2.search || (e2.query ? "?" + e2.query : ""), c = e2.hash || "", u = e2.pathname || "";
          return `${i2}${t2 || r2}${s || o + n2}${e2.path || u + a}${c}`;
        }
      }};
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        function r2(e2) {
          return (4294967296 + e2).toString(16).substring(1);
        }
        e.exports = {normalizeInput: function(e2) {
          var r3;
          if (e2 instanceof Uint8Array)
            r3 = e2;
          else if (e2 instanceof t2)
            r3 = new Uint8Array(e2);
          else {
            if (typeof e2 != "string")
              throw new Error("Input must be an string, Buffer or Uint8Array");
            r3 = new Uint8Array(t2.from(e2, "utf8"));
          }
          return r3;
        }, toHex: function(e2) {
          return Array.prototype.map.call(e2, function(e3) {
            return (e3 < 16 ? "0" : "") + e3.toString(16);
          }).join("");
        }, debugPrint: function(e2, t3, n) {
          for (var i = "\n" + e2 + " = ", s = 0; s < t3.length; s += 2) {
            if (n === 32)
              i += r2(t3[s]).toUpperCase(), i += " ", i += r2(t3[s + 1]).toUpperCase();
            else {
              if (n !== 64)
                throw new Error("Invalid size " + n);
              i += r2(t3[s + 1]).toUpperCase(), i += r2(t3[s]).toUpperCase();
            }
            s % 6 == 4 ? i += "\n" + new Array(e2.length + 4).join(" ") : s < t3.length - 2 && (i += " ");
          }
          console.log(i);
        }, testSpeed: function(e2, t3, r3) {
          for (var n = new Date().getTime(), i = new Uint8Array(t3), s = 0; s < t3; s++)
            i[s] = s % 256;
          var o = new Date().getTime();
          for (console.log("Generated random input in " + (o - n) + "ms"), n = o, s = 0; s < r3; s++) {
            var a = e2(i), c = new Date().getTime(), u = c - n;
            n = c, console.log("Hashed in " + u + "ms: " + a.substring(0, 20) + "..."), console.log(Math.round(t3 / (1 << 20) / (u / 1e3) * 100) / 100 + " MB PER SECOND");
          }
        }};
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      const {nanoid: n} = r(241), i = r(24), {utf8Encoder: s, utf8Decoder: o} = r(148), a = r(243), c = s.encode("/"), u = c[0];
      class h {
        constructor(e2, t2) {
          if (typeof e2 == "string")
            this._buf = s.encode(e2);
          else {
            if (!(e2 instanceof Uint8Array))
              throw new Error("Invalid key, should be String of Uint8Array");
            this._buf = e2;
          }
          if (t2 == null && (t2 = true), t2 && this.clean(), this._buf.byteLength === 0 || this._buf[0] !== u)
            throw new Error("Invalid key");
        }
        toString(e2 = "utf8") {
          return e2 === "utf8" || e2 === "utf-8" ? o.decode(this._buf) : new a(e2).decode(this._buf);
        }
        uint8Array() {
          return this._buf;
        }
        get [Symbol.toStringTag]() {
          return `Key(${this.toString()})`;
        }
        static withNamespaces(e2) {
          return new f(e2.join("/"));
        }
        static random() {
          return new f(n().replace(/-/g, ""));
        }
        clean() {
          if (this._buf && this._buf.byteLength !== 0 || (this._buf = c), this._buf[0] !== u) {
            const e2 = new Uint8Array(this._buf.byteLength + 1);
            e2.fill(u, 0, 1), e2.set(this._buf, 1), this._buf = e2;
          }
          for (; this._buf.byteLength > 1 && this._buf[this._buf.byteLength - 1] === u; )
            this._buf = this._buf.subarray(0, -1);
        }
        less(e2) {
          const t2 = this.list(), r2 = e2.list();
          for (let n2 = 0; n2 < t2.length; n2++) {
            if (r2.length < n2 + 1)
              return false;
            const e3 = t2[n2], i2 = r2[n2];
            if (e3 < i2)
              return true;
            if (e3 > i2)
              return false;
          }
          return t2.length < r2.length;
        }
        reverse() {
          return h.withNamespaces(this.list().slice().reverse());
        }
        namespaces() {
          return this.list();
        }
        baseNamespace() {
          const e2 = this.namespaces();
          return e2[e2.length - 1];
        }
        list() {
          return this.toString().split("/").slice(1);
        }
        type() {
          return function(e2) {
            const t2 = e2.split(":");
            if (t2.length < 2)
              return "";
            return t2.slice(0, -1).join(":");
          }(this.baseNamespace());
        }
        name() {
          return function(e2) {
            const t2 = e2.split(":");
            return t2[t2.length - 1];
          }(this.baseNamespace());
        }
        instance(e2) {
          return new f(this.toString() + ":" + e2);
        }
        path() {
          let e2 = this.parent().toString();
          return e2.endsWith("/") || (e2 += "/"), e2 += this.type(), new f(e2);
        }
        parent() {
          const e2 = this.list();
          return e2.length === 1 ? new f("/") : new f(e2.slice(0, -1).join("/"));
        }
        child(e2) {
          return this.toString() === "/" ? e2 : e2.toString() === "/" ? this : new f(this.toString() + e2.toString(), false);
        }
        isAncestorOf(e2) {
          return e2.toString() !== this.toString() && e2.toString().startsWith(this.toString());
        }
        isDecendantOf(e2) {
          return e2.toString() !== this.toString() && this.toString().startsWith(e2.toString());
        }
        isTopLevel() {
          return this.list().length === 1;
        }
        concat(...e2) {
          return h.withNamespaces([...this.namespaces(), ...(t2 = e2.map((e3) => e3.namespaces()), [].concat(...t2))]);
          var t2;
        }
      }
      const f = i(h, {className: "Key", symbolName: "@ipfs/interface-datastore/key"});
      e.exports = f;
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), Object.defineProperty(t, "urlAlphabet", {enumerable: true, get: function() {
        return n.urlAlphabet;
      }}), t.random = t.customRandom = t.customAlphabet = t.nanoid = void 0;
      var n = r(517);
      let i = (e2) => crypto.getRandomValues(new Uint8Array(e2));
      t.random = i;
      let s = (e2, t2, r2) => {
        let n2 = (2 << Math.log(e2.length - 1) / Math.LN2) - 1, i2 = -~(1.6 * n2 * t2 / e2.length);
        return () => {
          let s2 = "";
          for (; ; ) {
            let o = r2(i2), a = i2;
            for (; a--; )
              if (s2 += e2[o[a] & n2] || "", s2.length === t2)
                return s2;
          }
        };
      };
      t.customRandom = s;
      t.customAlphabet = (e2, t2) => s(e2, t2, i);
      t.nanoid = (e2 = 21) => {
        let t2 = "", r2 = crypto.getRandomValues(new Uint8Array(e2));
        for (; e2--; ) {
          let n2 = 63 & r2[e2];
          t2 += n2 < 36 ? n2.toString(36) : n2 < 62 ? (n2 - 26).toString(36).toUpperCase() : n2 < 63 ? "_" : "-";
        }
        return t2;
      };
    }, function(e, t, r) {
      "use strict";
      typeof globalThis != "object" && (Object.defineProperty(Object.prototype, "__magic__", {get: function() {
        return this;
      }, configurable: true}), __magic__.globalThis = __magic__, delete Object.prototype.__magic__), e.exports = globalThis;
    }, function(e, t, r) {
      "use strict";
      e.exports = r(242).TextDecoder;
    }, function(e, t, r) {
      "use strict";
      const {filter: n, sortAll: i, take: s, map: o} = r(148), a = r(245);
      e.exports = class {
        async open() {
        }
        async close() {
        }
        async put(e2, t2, r2 = {}) {
        }
        async *putMany(e2, t2 = {}) {
          for await (const {key: r2, value: n2} of e2)
            await this.put(r2, n2, t2), yield {key: r2, value: n2};
        }
        async get(e2, t2 = {}) {
        }
        async *getMany(e2, t2 = {}) {
          for await (const r2 of e2)
            yield this.get(r2, t2);
        }
        async has(e2) {
        }
        async delete(e2, t2 = {}) {
        }
        async *deleteMany(e2, t2 = {}) {
          for await (const r2 of e2)
            await this.delete(r2, t2), yield r2;
        }
        batch() {
          let e2 = [], t2 = [];
          return {put(t3, r2) {
            e2.push({key: t3, value: r2});
          }, delete(e3) {
            t2.push(e3);
          }, commit: async (r2) => {
            await a(this.putMany(e2, r2)), e2 = [], await a(this.deleteMany(t2, r2)), t2 = [];
          }};
        }
        async *_all(e2, t2) {
        }
        async *query(e2, t2) {
          let r2 = this._all(e2, t2);
          if (e2.prefix != null && (r2 = n(r2, (t3) => t3.key.toString().startsWith(e2.prefix))), Array.isArray(e2.filters) && (r2 = e2.filters.reduce((e3, t3) => n(e3, t3), r2)), Array.isArray(e2.orders) && (r2 = e2.orders.reduce((e3, t3) => i(e3, t3), r2)), e2.offset != null) {
            let t3 = 0;
            r2 = n(r2, () => t3++ >= e2.offset);
          }
          e2.limit != null && (r2 = s(r2, e2.limit)), e2.keysOnly === true && (r2 = o(r2, (e3) => ({key: e3.key}))), yield* r2;
        }
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = async (e2) => {
        for await (const t2 of e2)
          ;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0);
      e.exports.dbOpenFailedError = (e2) => (e2 = e2 || new Error("Cannot open database"), n(e2, "ERR_DB_OPEN_FAILED")), e.exports.dbDeleteFailedError = (e2) => (e2 = e2 || new Error("Delete failed"), n(e2, "ERR_DB_DELETE_FAILED")), e.exports.dbWriteFailedError = (e2) => (e2 = e2 || new Error("Write failed"), n(e2, "ERR_DB_WRITE_FAILED")), e.exports.notFoundError = (e2) => (e2 = e2 || new Error("Not Found"), n(e2, "ERR_NOT_FOUND")), e.exports.abortedError = (e2) => (e2 = e2 || new Error("Aborted"), n(e2, "ERR_ABORTED"));
    }, function(e, t, r) {
      "use strict";
      const {AbortController: n} = typeof self != "undefined" ? self : typeof window != "undefined" ? window : r(47), i = r(149);
      class s extends n {
        constructor(e2) {
          super(), this._ms = e2, this._timer = i(() => this.abort(), e2), Object.setPrototypeOf(this, s.prototype);
        }
        abort() {
          return this._timer.clear(), super.abort();
        }
        clear() {
          this._timer.clear();
        }
        reset() {
          this._timer.clear(), this._timer = i(() => this.abort(), this._ms);
        }
      }
      e.exports = s, e.exports.TimeoutController = s;
    }, function(e, t, r) {
      "use strict";
      const n = r(24), i = r(249), s = r(61), {serializeDAGNode: o} = r(251), a = r(527), c = r(528), u = r(530), h = r(6), f = r(5);
      e.exports = n(class {
        constructor(e2, t2 = [], r2 = null) {
          if (e2 || (e2 = new Uint8Array(0)), typeof e2 == "string" && (e2 = h(e2)), !(e2 instanceof Uint8Array))
            throw new Error("Passed 'data' is not a Uint8Array or a String!");
          if (r2 !== null && typeof r2 != "number")
            throw new Error("Passed 'serializedSize' must be a number!");
          t2 = t2.map((e3) => s.isDAGLink(e3) ? e3 : s.util.createDagLinkFromB58EncodedHash(e3)), i(t2), Object.defineProperties(this, {Data: {value: e2, writable: false, enumerable: true}, Links: {value: t2, writable: false, enumerable: true}, _serializedSize: {value: r2, writable: true, enumerable: false}, _size: {value: null, writable: true, enumerable: false}});
        }
        toJSON() {
          return this._json || (this._json = Object.freeze({data: this.Data, links: this.Links.map((e2) => e2.toJSON()), size: this.size})), Object.assign({}, this._json);
        }
        toString() {
          return `DAGNode <data: "${f(this.Data, "base64urlpad")}", links: ${this.Links.length}, size: ${this.size}>`;
        }
        _invalidateCached() {
          this._serializedSize = null, this._size = null;
        }
        addLink(e2) {
          return this._invalidateCached(), c(this, e2);
        }
        rmLink(e2) {
          return this._invalidateCached(), u(this, e2);
        }
        toDAGLink(e2) {
          return a(this, e2);
        }
        serialize() {
          return o(this);
        }
        get size() {
          return this._size === null && (this._serializedSize === null && (this._serializedSize = this.serialize().length), this._size = this.Links.reduce((e2, t2) => e2 + t2.Tsize, this._serializedSize)), this._size;
        }
        set size(e2) {
          throw new Error("Can't set property: 'size' is immutable");
        }
      }, {className: "DAGNode", symbolName: "@ipld/js-ipld-dag-pb/dagnode"});
    }, function(e, t, r) {
      "use strict";
      const n = r(526), i = r(250), s = (e2, t2) => {
        const r2 = e2.nameAsBuffer, n2 = t2.nameAsBuffer;
        return i(r2, n2);
      };
      e.exports = (e2) => {
        n.inplace(e2, s);
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2) {
        for (let r2 = 0; r2 < e2.byteLength; r2++) {
          if (e2[r2] < t2[r2])
            return -1;
          if (e2[r2] > t2[r2])
            return 1;
        }
        return e2.byteLength > t2.byteLength ? 1 : e2.byteLength < t2.byteLength ? -1 : 0;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(20)(r(252)), i = r(61);
      t = e.exports;
      const s = (e2) => {
        const t2 = e2.Data, r2 = e2.Links || [];
        return n.PBNode.encode(((e3) => {
          const t3 = {};
          return e3.Data && e3.Data.byteLength > 0 ? t3.Data = e3.Data : t3.Data = null, e3.Links && e3.Links.length > 0 ? t3.Links = e3.Links.map((e4) => ({Hash: e4.Hash.bytes, Name: e4.Name, Tsize: e4.Tsize})) : t3.Links = null, t3;
        })({Data: t2, Links: r2}));
      };
      t.serializeDAGNode = s, t.serializeDAGNodeLike = (e2, t2 = []) => {
        const r2 = {Data: e2};
        return r2.Links = t2.map((e3) => i.isDAGLink(e3) ? e3 : i.util.createDagLinkFromB58EncodedHash(e3)), s(r2);
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = "// An IPFS MerkleDAG Link\nmessage PBLink {\n\n  // multihash of the target object\n  optional bytes Hash = 1;\n\n  // utf string name. should be unique per object\n  optional string Name = 2;\n\n  // cumulative size of target object\n  optional uint64 Tsize = 3;\n}\n\n// An IPFS MerkleDAG Node\nmessage PBNode {\n\n  // refs to other objects\n  repeated PBLink Links = 2;\n\n  // opaque user data\n  optional bytes Data = 1;\n}";
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(17), s = r(15);
      (t = e.exports).codec = i.DAG_PB, t.defaultHashAlg = i.SHA2_256;
      t.cid = async (e2, r2) => {
        const o = {cidVersion: 1, hashAlg: t.defaultHashAlg}, a = Object.assign(o, r2), c = await s(e2, a.hashAlg), u = i.print[t.codec];
        return new n(a.cidVersion, u, c);
      };
    }, function(e, t, r) {
      "use strict";
      (e.exports = r(61)).util = r(529);
    }, function(e, t, r) {
      "use strict";
      const n = r(20)(r(252)), i = r(61), s = r(248), {serializeDAGNodeLike: o} = r(251), a = r(253);
      (t = e.exports).codec = a.codec, t.defaultHashAlg = a.defaultHashAlg;
      t.serialize = (e2) => s.isDAGNode(e2) ? e2.serialize() : o(e2.Data, e2.Links), t.deserialize = (e2) => {
        const t2 = n.PBNode.decode(e2), r2 = t2.Links.map((e3) => new i(e3.Name, e3.Tsize, e3.Hash)), o2 = t2.Data == null ? new Uint8Array(0) : t2.Data;
        return new s(o2, r2, e2.byteLength);
      }, t.cid = (e2, t2) => a.cid(e2, t2);
    }, function(e, t, r) {
      "use strict";
      const n = r(107);
      e.exports = class {
        constructor(e2) {
          this.lru = n(e2);
        }
        get(e2) {
          const t2 = this.lru.get(e2);
          if (t2)
            return t2.expire && t2.expire < Date.now() ? void this.lru.remove(e2) : t2.value;
        }
        set(e2, t2, r2) {
          this.lru.set(e2, {value: t2, expire: Date.now() + r2});
        }
        has(e2) {
          return !!this.get(e2);
        }
        remove(e2) {
          this.lru.remove(e2);
        }
        clear() {
          this.lru.clear();
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(4);
      t.cidToString = (e2, t2 = {}) => {
        const r2 = t2.upgrade !== false;
        let i = n.isCID(e2) ? e2 : new n(e2);
        if (i.version === 0 && t2.base && t2.base !== "base58btc") {
          if (!r2)
            return i.toString();
          i = i.toV1();
        }
        return i.toBaseEncodedString(t2.base);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(548), i = r(17), s = r(15), o = r(4), a = r(553), c = r(27), u = r(6);
      function h(e2) {
        let t2;
        try {
          t2 = a(e2);
        } catch (r2) {
          t2 = false;
        }
        if (t2)
          throw new Error("The object passed has circular references");
        return function e3(t3) {
          if (!t3 || t3 instanceof Uint8Array || typeof t3 == "string")
            return t3;
          if (Array.isArray(t3))
            return t3.map(e3);
          if (o.isCID(t3))
            return typeof (r2 = t3) == "string" ? r2 = new o(r2).bytes : o.isCID(r2) && (r2 = r2.bytes), new n.Tagged(42, c([u("00", "base16"), r2], 1 + r2.length));
          var r2;
          const i2 = Object.keys(t3);
          if (i2.length > 0) {
            const r3 = {};
            return i2.forEach((n2) => {
              typeof t3[n2] == "object" ? r3[n2] = e3(t3[n2]) : r3[n2] = t3[n2];
            }), r3;
          }
          return t3;
        }(e2);
      }
      (t = e.exports).codec = i.DAG_CBOR, t.defaultHashAlg = i.SHA2_256;
      const f = {42: (e2) => (e2 = e2.slice(1), new o(e2))};
      let d = 65536;
      let l = 67108864, p = null;
      t.configureDecoder = (e2) => {
        let t2 = f;
        e2 ? (typeof e2.size == "number" && (d = e2.size), typeof e2.maxSize == "number" && (l = e2.maxSize), e2.tags && (t2 = Object.assign({}, f, e2 && e2.tags))) : (d = 65536, l = 67108864);
        const r2 = {tags: t2, size: d};
        p = new n.Decoder(r2), d = r2.size;
      }, t.configureDecoder(), t.serialize = (e2) => {
        const t2 = h(e2);
        return n.encode(t2);
      }, t.deserialize = (e2) => {
        if (e2.length > d && e2.length <= l && t.configureDecoder({size: e2.length}), e2.length > d)
          throw new Error("Data is too large to deserialize with current decoder");
        const r2 = p.decodeAll(e2);
        if (r2.length !== 1)
          throw new Error("Extraneous CBOR data found beyond initial top-level object");
        return r2[0];
      }, t.cid = async (e2, r2) => {
        const n2 = {cidVersion: 1, hashAlg: t.defaultHashAlg}, a2 = Object.assign(n2, r2), c2 = await s(e2, a2.hashAlg), u2 = i.print[t.codec];
        return new o(a2.cidVersion, u2, c2);
      };
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const {Buffer: n} = r(3), i = r(223), s = r(29).BigNumber, o = r(550), a = r(154), c = r(108), u = r(260), h = r(261), {URL: f} = r(262);
        class d {
          constructor(e2) {
            !(e2 = e2 || {}).size || e2.size < 65536 ? e2.size = 65536 : e2.size = a.nextPowerOf2(e2.size), this._heap = new ArrayBuffer(e2.size), this._heap8 = new Uint8Array(this._heap), this._buffer = n.from(this._heap), this._reset(), this._knownTags = Object.assign({0: (e3) => new Date(e3), 1: (e3) => new Date(1e3 * e3), 2: (e3) => a.arrayBufferToBignumber(e3), 3: (e3) => c.NEG_ONE.minus(a.arrayBufferToBignumber(e3)), 4: (e3) => c.TEN.pow(e3[0]).times(e3[1]), 5: (e3) => c.TWO.pow(e3[0]).times(e3[1]), 32: (e3) => new f(e3), 35: (e3) => new RegExp(e3)}, e2.tags), this.parser = o(t2, {log: console.log.bind(console), pushInt: this.pushInt.bind(this), pushInt32: this.pushInt32.bind(this), pushInt32Neg: this.pushInt32Neg.bind(this), pushInt64: this.pushInt64.bind(this), pushInt64Neg: this.pushInt64Neg.bind(this), pushFloat: this.pushFloat.bind(this), pushFloatSingle: this.pushFloatSingle.bind(this), pushFloatDouble: this.pushFloatDouble.bind(this), pushTrue: this.pushTrue.bind(this), pushFalse: this.pushFalse.bind(this), pushUndefined: this.pushUndefined.bind(this), pushNull: this.pushNull.bind(this), pushInfinity: this.pushInfinity.bind(this), pushInfinityNeg: this.pushInfinityNeg.bind(this), pushNaN: this.pushNaN.bind(this), pushNaNNeg: this.pushNaNNeg.bind(this), pushArrayStart: this.pushArrayStart.bind(this), pushArrayStartFixed: this.pushArrayStartFixed.bind(this), pushArrayStartFixed32: this.pushArrayStartFixed32.bind(this), pushArrayStartFixed64: this.pushArrayStartFixed64.bind(this), pushObjectStart: this.pushObjectStart.bind(this), pushObjectStartFixed: this.pushObjectStartFixed.bind(this), pushObjectStartFixed32: this.pushObjectStartFixed32.bind(this), pushObjectStartFixed64: this.pushObjectStartFixed64.bind(this), pushByteString: this.pushByteString.bind(this), pushByteStringStart: this.pushByteStringStart.bind(this), pushUtf8String: this.pushUtf8String.bind(this), pushUtf8StringStart: this.pushUtf8StringStart.bind(this), pushSimpleUnassigned: this.pushSimpleUnassigned.bind(this), pushTagUnassigned: this.pushTagUnassigned.bind(this), pushTagStart: this.pushTagStart.bind(this), pushTagStart4: this.pushTagStart4.bind(this), pushTagStart8: this.pushTagStart8.bind(this), pushBreak: this.pushBreak.bind(this)}, this._heap);
          }
          get _depth() {
            return this._parents.length;
          }
          get _currentParent() {
            return this._parents[this._depth - 1];
          }
          get _ref() {
            return this._currentParent.ref;
          }
          _closeParent() {
            var e2 = this._parents.pop();
            if (e2.length > 0)
              throw new Error(`Missing ${e2.length} elements`);
            switch (e2.type) {
              case c.PARENT.TAG:
                this._push(this.createTag(e2.ref[0], e2.ref[1]));
                break;
              case c.PARENT.BYTE_STRING:
                this._push(this.createByteString(e2.ref, e2.length));
                break;
              case c.PARENT.UTF8_STRING:
                this._push(this.createUtf8String(e2.ref, e2.length));
                break;
              case c.PARENT.MAP:
                if (e2.values % 2 > 0)
                  throw new Error("Odd number of elements in the map");
                this._push(this.createMap(e2.ref, e2.length));
                break;
              case c.PARENT.OBJECT:
                if (e2.values % 2 > 0)
                  throw new Error("Odd number of elements in the map");
                this._push(this.createObject(e2.ref, e2.length));
                break;
              case c.PARENT.ARRAY:
                this._push(this.createArray(e2.ref, e2.length));
            }
            this._currentParent && this._currentParent.type === c.PARENT.TAG && this._dec();
          }
          _dec() {
            const e2 = this._currentParent;
            e2.length < 0 || (e2.length--, e2.length === 0 && this._closeParent());
          }
          _push(e2, t3) {
            const r2 = this._currentParent;
            switch (r2.values++, r2.type) {
              case c.PARENT.ARRAY:
              case c.PARENT.BYTE_STRING:
              case c.PARENT.UTF8_STRING:
                r2.length > -1 ? this._ref[this._ref.length - r2.length] = e2 : this._ref.push(e2), this._dec();
                break;
              case c.PARENT.OBJECT:
                r2.tmpKey != null ? (this._ref[r2.tmpKey] = e2, r2.tmpKey = null, this._dec()) : (r2.tmpKey = e2, typeof r2.tmpKey != "string" && (r2.type = c.PARENT.MAP, r2.ref = a.buildMap(r2.ref)));
                break;
              case c.PARENT.MAP:
                r2.tmpKey != null ? (this._ref.set(r2.tmpKey, e2), r2.tmpKey = null, this._dec()) : r2.tmpKey = e2;
                break;
              case c.PARENT.TAG:
                this._ref.push(e2), t3 || this._dec();
                break;
              default:
                throw new Error("Unknown parent type");
            }
          }
          _createParent(e2, t3, r2) {
            this._parents[this._depth] = {type: t3, length: r2, ref: e2, values: 0, tmpKey: null};
          }
          _reset() {
            this._res = [], this._parents = [{type: c.PARENT.ARRAY, length: -1, ref: this._res, values: 0, tmpKey: null}];
          }
          createTag(e2, t3) {
            const r2 = this._knownTags[e2];
            return r2 ? r2(t3) : new h(e2, t3);
          }
          createMap(e2, t3) {
            return e2;
          }
          createObject(e2, t3) {
            return e2;
          }
          createArray(e2, t3) {
            return e2;
          }
          createByteString(e2, t3) {
            return n.concat(e2);
          }
          createByteStringFromHeap(e2, t3) {
            return e2 === t3 ? n.alloc(0) : n.from(this._heap.slice(e2, t3));
          }
          createInt(e2) {
            return e2;
          }
          createInt32(e2, t3) {
            return a.buildInt32(e2, t3);
          }
          createInt64(e2, t3, r2, n2) {
            return a.buildInt64(e2, t3, r2, n2);
          }
          createFloat(e2) {
            return e2;
          }
          createFloatSingle(e2, t3, r2, n2) {
            return i.read([e2, t3, r2, n2], 0, false, 23, 4);
          }
          createFloatDouble(e2, t3, r2, n2, s2, o2, a2, c2) {
            return i.read([e2, t3, r2, n2, s2, o2, a2, c2], 0, false, 52, 8);
          }
          createInt32Neg(e2, t3) {
            return -1 - a.buildInt32(e2, t3);
          }
          createInt64Neg(e2, t3, r2, n2) {
            const i2 = a.buildInt32(e2, t3), o2 = a.buildInt32(r2, n2);
            return i2 > c.MAX_SAFE_HIGH ? c.NEG_ONE.minus(new s(i2).times(c.SHIFT32).plus(o2)) : -1 - (i2 * c.SHIFT32 + o2);
          }
          createTrue() {
            return true;
          }
          createFalse() {
            return false;
          }
          createNull() {
            return null;
          }
          createUndefined() {
          }
          createInfinity() {
            return 1 / 0;
          }
          createInfinityNeg() {
            return -1 / 0;
          }
          createNaN() {
            return NaN;
          }
          createNaNNeg() {
            return NaN;
          }
          createUtf8String(e2, t3) {
            return e2.join("");
          }
          createUtf8StringFromHeap(e2, t3) {
            return e2 === t3 ? "" : this._buffer.toString("utf8", e2, t3);
          }
          createSimpleUnassigned(e2) {
            return new u(e2);
          }
          pushInt(e2) {
            this._push(this.createInt(e2));
          }
          pushInt32(e2, t3) {
            this._push(this.createInt32(e2, t3));
          }
          pushInt64(e2, t3, r2, n2) {
            this._push(this.createInt64(e2, t3, r2, n2));
          }
          pushFloat(e2) {
            this._push(this.createFloat(e2));
          }
          pushFloatSingle(e2, t3, r2, n2) {
            this._push(this.createFloatSingle(e2, t3, r2, n2));
          }
          pushFloatDouble(e2, t3, r2, n2, i2, s2, o2, a2) {
            this._push(this.createFloatDouble(e2, t3, r2, n2, i2, s2, o2, a2));
          }
          pushInt32Neg(e2, t3) {
            this._push(this.createInt32Neg(e2, t3));
          }
          pushInt64Neg(e2, t3, r2, n2) {
            this._push(this.createInt64Neg(e2, t3, r2, n2));
          }
          pushTrue() {
            this._push(this.createTrue());
          }
          pushFalse() {
            this._push(this.createFalse());
          }
          pushNull() {
            this._push(this.createNull());
          }
          pushUndefined() {
            this._push(this.createUndefined());
          }
          pushInfinity() {
            this._push(this.createInfinity());
          }
          pushInfinityNeg() {
            this._push(this.createInfinityNeg());
          }
          pushNaN() {
            this._push(this.createNaN());
          }
          pushNaNNeg() {
            this._push(this.createNaNNeg());
          }
          pushArrayStart() {
            this._createParent([], c.PARENT.ARRAY, -1);
          }
          pushArrayStartFixed(e2) {
            this._createArrayStartFixed(e2);
          }
          pushArrayStartFixed32(e2, t3) {
            const r2 = a.buildInt32(e2, t3);
            this._createArrayStartFixed(r2);
          }
          pushArrayStartFixed64(e2, t3, r2, n2) {
            const i2 = a.buildInt64(e2, t3, r2, n2);
            this._createArrayStartFixed(i2);
          }
          pushObjectStart() {
            this._createObjectStartFixed(-1);
          }
          pushObjectStartFixed(e2) {
            this._createObjectStartFixed(e2);
          }
          pushObjectStartFixed32(e2, t3) {
            const r2 = a.buildInt32(e2, t3);
            this._createObjectStartFixed(r2);
          }
          pushObjectStartFixed64(e2, t3, r2, n2) {
            const i2 = a.buildInt64(e2, t3, r2, n2);
            this._createObjectStartFixed(i2);
          }
          pushByteStringStart() {
            this._parents[this._depth] = {type: c.PARENT.BYTE_STRING, length: -1, ref: [], values: 0, tmpKey: null};
          }
          pushByteString(e2, t3) {
            this._push(this.createByteStringFromHeap(e2, t3));
          }
          pushUtf8StringStart() {
            this._parents[this._depth] = {type: c.PARENT.UTF8_STRING, length: -1, ref: [], values: 0, tmpKey: null};
          }
          pushUtf8String(e2, t3) {
            this._push(this.createUtf8StringFromHeap(e2, t3));
          }
          pushSimpleUnassigned(e2) {
            this._push(this.createSimpleUnassigned(e2));
          }
          pushTagStart(e2) {
            this._parents[this._depth] = {type: c.PARENT.TAG, length: 1, ref: [e2]};
          }
          pushTagStart4(e2, t3) {
            this.pushTagStart(a.buildInt32(e2, t3));
          }
          pushTagStart8(e2, t3, r2, n2) {
            this.pushTagStart(a.buildInt64(e2, t3, r2, n2));
          }
          pushTagUnassigned(e2) {
            this._push(this.createTag(e2));
          }
          pushBreak() {
            if (this._currentParent.length > -1)
              throw new Error("Unexpected break");
            this._closeParent();
          }
          _createObjectStartFixed(e2) {
            e2 !== 0 ? this._createParent({}, c.PARENT.OBJECT, e2) : this._push(this.createObject({}));
          }
          _createArrayStartFixed(e2) {
            e2 !== 0 ? this._createParent(new Array(e2), c.PARENT.ARRAY, e2) : this._push(this.createArray([]));
          }
          _decode(e2) {
            if (e2.byteLength === 0)
              throw new Error("Input too short");
            this._reset(), this._heap8.set(e2);
            const t3 = this.parser.parse(e2.byteLength);
            if (this._depth > 1) {
              for (; this._currentParent.length === 0; )
                this._closeParent();
              if (this._depth > 1)
                throw new Error("Undeterminated nesting");
            }
            if (t3 > 0)
              throw new Error("Failed to parse");
            if (this._res.length === 0)
              throw new Error("No valid result");
          }
          decodeFirst(e2) {
            return this._decode(e2), this._res[0];
          }
          decodeAll(e2) {
            return this._decode(e2), this._res;
          }
          static decode(e2, t3) {
            typeof e2 == "string" && (e2 = n.from(e2, t3 || "hex"));
            return new d({size: e2.length}).decodeFirst(e2);
          }
          static decodeAll(e2, t3) {
            typeof e2 == "string" && (e2 = n.from(e2, t3 || "hex"));
            return new d({size: e2.length}).decodeAll(e2);
          }
        }
        d.decodeFirst = d.decode, e.exports = d;
      }).call(this, r(12));
    }, function(e, t, r) {
      "use strict";
      const n = r(108), i = n.MT, s = n.SIMPLE, o = n.SYMS;
      class a {
        constructor(e2) {
          if (typeof e2 != "number")
            throw new Error("Invalid Simple type: " + typeof e2);
          if (e2 < 0 || e2 > 255 || (0 | e2) !== e2)
            throw new Error("value must be a small positive integer: " + e2);
          this.value = e2;
        }
        toString() {
          return "simple(" + this.value + ")";
        }
        inspect() {
          return "simple(" + this.value + ")";
        }
        encodeCBOR(e2) {
          return e2._pushInt(this.value, i.SIMPLE_FLOAT);
        }
        static isSimple(e2) {
          return e2 instanceof a;
        }
        static decode(e2, t2) {
          switch (t2 == null && (t2 = true), e2) {
            case s.FALSE:
              return false;
            case s.TRUE:
              return true;
            case s.NULL:
              return t2 ? null : o.NULL;
            case s.UNDEFINED:
              return t2 ? void 0 : o.UNDEFINED;
            case -1:
              if (!t2)
                throw new Error("Invalid BREAK");
              return o.BREAK;
            default:
              return new a(e2);
          }
        }
      }
      e.exports = a;
    }, function(e, t, r) {
      "use strict";
      class n {
        constructor(e2, t2, r2) {
          if (this.tag = e2, this.value = t2, this.err = r2, typeof this.tag != "number")
            throw new Error("Invalid tag type (" + typeof this.tag + ")");
          if (this.tag < 0 || (0 | this.tag) !== this.tag)
            throw new Error("Tag must be a positive integer: " + this.tag);
        }
        toString() {
          return `${this.tag}(${JSON.stringify(this.value)})`;
        }
        encodeCBOR(e2) {
          return e2._pushTag(this.tag), e2.pushAny(this.value);
        }
        convert(e2) {
          var t2, r2;
          if (typeof (r2 = e2 != null ? e2[this.tag] : void 0) != "function" && typeof (r2 = n["_tag" + this.tag]) != "function")
            return this;
          try {
            return r2.call(n, this.value);
          } catch (i) {
            return t2 = i, this.err = t2, this;
          }
        }
      }
      e.exports = n;
    }, function(e, t, r) {
      "use strict";
      const {URLWithLegacySupport: n, format: i, URLSearchParams: s, defaultBase: o} = r(263), a = r(551);
      e.exports = {URL: n, URLSearchParams: s, format: i, relative: a, defaultBase: o};
    }, function(e, t, r) {
      "use strict";
      const n = self.location ? self.location.protocol + "//" + self.location.host : "", i = self.URL;
      e.exports = {URLWithLegacySupport: class {
        constructor(e2 = "", t2 = n) {
          this.super = new i(e2, t2), this.path = this.pathname + this.search, this.auth = this.username && this.password ? this.username + ":" + this.password : null, this.query = this.search && this.search.startsWith("?") ? this.search.slice(1) : null;
        }
        get hash() {
          return this.super.hash;
        }
        get host() {
          return this.super.host;
        }
        get hostname() {
          return this.super.hostname;
        }
        get href() {
          return this.super.href;
        }
        get origin() {
          return this.super.origin;
        }
        get password() {
          return this.super.password;
        }
        get pathname() {
          return this.super.pathname;
        }
        get port() {
          return this.super.port;
        }
        get protocol() {
          return this.super.protocol;
        }
        get search() {
          return this.super.search;
        }
        get searchParams() {
          return this.super.searchParams;
        }
        get username() {
          return this.super.username;
        }
        set hash(e2) {
          this.super.hash = e2;
        }
        set host(e2) {
          this.super.host = e2;
        }
        set hostname(e2) {
          this.super.hostname = e2;
        }
        set href(e2) {
          this.super.href = e2;
        }
        set origin(e2) {
          this.super.origin = e2;
        }
        set password(e2) {
          this.super.password = e2;
        }
        set pathname(e2) {
          this.super.pathname = e2;
        }
        set port(e2) {
          this.super.port = e2;
        }
        set protocol(e2) {
          this.super.protocol = e2;
        }
        set search(e2) {
          this.super.search = e2;
        }
        set searchParams(e2) {
          this.super.searchParams = e2;
        }
        set username(e2) {
          this.super.username = e2;
        }
        createObjectURL(e2) {
          return this.super.createObjectURL(e2);
        }
        revokeObjectURL(e2) {
          this.super.revokeObjectURL(e2);
        }
        toJSON() {
          return this.super.toJSON();
        }
        toString() {
          return this.super.toString();
        }
        format() {
          return this.toString();
        }
      }, URLSearchParams: self.URLSearchParams, defaultBase: n, format: function(e2) {
        if (typeof e2 == "string") {
          return new i(e2).toString();
        }
        if (!(e2 instanceof i)) {
          const t2 = e2.username && e2.password ? `${e2.username}:${e2.password}@` : "", r2 = e2.auth ? e2.auth + "@" : "", n2 = e2.port ? ":" + e2.port : "", i2 = e2.protocol ? e2.protocol + "//" : "", s = e2.host || "", o = e2.hostname || "", a = e2.search || (e2.query ? "?" + e2.query : ""), c = e2.hash || "", u = e2.pathname || "";
          return `${i2}${t2 || r2}${s || o + n2}${e2.path || u + a}${c}`;
        }
      }};
    }, function(e, t, r) {
      "use strict";
      e.exports = async (e2) => {
        for await (const t2 of e2)
          return t2;
      };
    }, function(e, t, r) {
      "use strict";
      t.Commented = r(556), t.Diagnose = r(574), t.Decoder = r(111), t.Encoder = r(271), t.Simple = r(86), t.Tagged = r(158), t.Map = r(575), t.comment = t.Commented.comment, t.decodeAll = t.Decoder.decodeAll, t.decodeFirst = t.Decoder.decodeFirst, t.decodeAllSync = t.Decoder.decodeAllSync, t.decodeFirstSync = t.Decoder.decodeFirstSync, t.diagnose = t.Diagnose.diagnose, t.encode = t.Encoder.encode, t.encodeCanonical = t.Encoder.encodeCanonical, t.encodeOne = t.Encoder.encodeOne, t.encodeAsync = t.Encoder.encodeAsync, t.decode = t.Decoder.decodeFirstSync, t.leveldb = {decode: t.Decoder.decodeAllSync, encode: t.Encoder.encode, buffer: true, name: "cbor"}, t.hasBigInt = r(65).hasBigInt;
    }, function(e, t, r) {
      "use strict";
      (function(t2, n) {
        var i = r(109);
        e.exports = v;
        var s, o = r(224);
        v.ReadableState = m;
        r(14).EventEmitter;
        var a = function(e2, t3) {
          return e2.listeners(t3).length;
        }, c = r(267), u = r(156).Buffer, h = t2.Uint8Array || function() {
        };
        var f = Object.create(r(85));
        f.inherits = r(18);
        var d = r(557), l = void 0;
        l = d && d.debuglog ? d.debuglog("stream") : function() {
        };
        var p, y = r(558), g = r(268);
        f.inherits(v, c);
        var b = ["error", "close", "destroy", "pause", "resume"];
        function m(e2, t3) {
          e2 = e2 || {};
          var n2 = t3 instanceof (s = s || r(53));
          this.objectMode = !!e2.objectMode, n2 && (this.objectMode = this.objectMode || !!e2.readableObjectMode);
          var i2 = e2.highWaterMark, o2 = e2.readableHighWaterMark, a2 = this.objectMode ? 16 : 16384;
          this.highWaterMark = i2 || i2 === 0 ? i2 : n2 && (o2 || o2 === 0) ? o2 : a2, this.highWaterMark = Math.floor(this.highWaterMark), this.buffer = new y(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.destroyed = false, this.defaultEncoding = e2.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, e2.encoding && (p || (p = r(110).StringDecoder), this.decoder = new p(e2.encoding), this.encoding = e2.encoding);
        }
        function v(e2) {
          if (s = s || r(53), !(this instanceof v))
            return new v(e2);
          this._readableState = new m(e2, this), this.readable = true, e2 && (typeof e2.read == "function" && (this._read = e2.read), typeof e2.destroy == "function" && (this._destroy = e2.destroy)), c.call(this);
        }
        function w(e2, t3, r2, n2, i2) {
          var s2, o2 = e2._readableState;
          t3 === null ? (o2.reading = false, function(e3, t4) {
            if (t4.ended)
              return;
            if (t4.decoder) {
              var r3 = t4.decoder.end();
              r3 && r3.length && (t4.buffer.push(r3), t4.length += t4.objectMode ? 1 : r3.length);
            }
            t4.ended = true, S(e3);
          }(e2, o2)) : (i2 || (s2 = function(e3, t4) {
            var r3;
            n3 = t4, u.isBuffer(n3) || n3 instanceof h || typeof t4 == "string" || t4 === void 0 || e3.objectMode || (r3 = new TypeError("Invalid non-string/buffer chunk"));
            var n3;
            return r3;
          }(o2, t3)), s2 ? e2.emit("error", s2) : o2.objectMode || t3 && t3.length > 0 ? (typeof t3 == "string" || o2.objectMode || Object.getPrototypeOf(t3) === u.prototype || (t3 = function(e3) {
            return u.from(e3);
          }(t3)), n2 ? o2.endEmitted ? e2.emit("error", new Error("stream.unshift() after end event")) : _(e2, o2, t3, true) : o2.ended ? e2.emit("error", new Error("stream.push() after EOF")) : (o2.reading = false, o2.decoder && !r2 ? (t3 = o2.decoder.write(t3), o2.objectMode || t3.length !== 0 ? _(e2, o2, t3, false) : I(e2, o2)) : _(e2, o2, t3, false))) : n2 || (o2.reading = false));
          return function(e3) {
            return !e3.ended && (e3.needReadable || e3.length < e3.highWaterMark || e3.length === 0);
          }(o2);
        }
        function _(e2, t3, r2, n2) {
          t3.flowing && t3.length === 0 && !t3.sync ? (e2.emit("data", r2), e2.read(0)) : (t3.length += t3.objectMode ? 1 : r2.length, n2 ? t3.buffer.unshift(r2) : t3.buffer.push(r2), t3.needReadable && S(e2)), I(e2, t3);
        }
        Object.defineProperty(v.prototype, "destroyed", {get: function() {
          return this._readableState !== void 0 && this._readableState.destroyed;
        }, set: function(e2) {
          this._readableState && (this._readableState.destroyed = e2);
        }}), v.prototype.destroy = g.destroy, v.prototype._undestroy = g.undestroy, v.prototype._destroy = function(e2, t3) {
          this.push(null), t3(e2);
        }, v.prototype.push = function(e2, t3) {
          var r2, n2 = this._readableState;
          return n2.objectMode ? r2 = true : typeof e2 == "string" && ((t3 = t3 || n2.defaultEncoding) !== n2.encoding && (e2 = u.from(e2, t3), t3 = ""), r2 = true), w(this, e2, t3, false, r2);
        }, v.prototype.unshift = function(e2) {
          return w(this, e2, null, true, false);
        }, v.prototype.isPaused = function() {
          return this._readableState.flowing === false;
        }, v.prototype.setEncoding = function(e2) {
          return p || (p = r(110).StringDecoder), this._readableState.decoder = new p(e2), this._readableState.encoding = e2, this;
        };
        function E(e2, t3) {
          return e2 <= 0 || t3.length === 0 && t3.ended ? 0 : t3.objectMode ? 1 : e2 != e2 ? t3.flowing && t3.length ? t3.buffer.head.data.length : t3.length : (e2 > t3.highWaterMark && (t3.highWaterMark = function(e3) {
            return e3 >= 8388608 ? e3 = 8388608 : (e3--, e3 |= e3 >>> 1, e3 |= e3 >>> 2, e3 |= e3 >>> 4, e3 |= e3 >>> 8, e3 |= e3 >>> 16, e3++), e3;
          }(e2)), e2 <= t3.length ? e2 : t3.ended ? t3.length : (t3.needReadable = true, 0));
        }
        function S(e2) {
          var t3 = e2._readableState;
          t3.needReadable = false, t3.emittedReadable || (l("emitReadable", t3.flowing), t3.emittedReadable = true, t3.sync ? i.nextTick(A, e2) : A(e2));
        }
        function A(e2) {
          l("emit readable"), e2.emit("readable"), C(e2);
        }
        function I(e2, t3) {
          t3.readingMore || (t3.readingMore = true, i.nextTick(k, e2, t3));
        }
        function k(e2, t3) {
          for (var r2 = t3.length; !t3.reading && !t3.flowing && !t3.ended && t3.length < t3.highWaterMark && (l("maybeReadMore read 0"), e2.read(0), r2 !== t3.length); )
            r2 = t3.length;
          t3.readingMore = false;
        }
        function R(e2) {
          l("readable nexttick read 0"), e2.read(0);
        }
        function T(e2, t3) {
          t3.reading || (l("resume read 0"), e2.read(0)), t3.resumeScheduled = false, t3.awaitDrain = 0, e2.emit("resume"), C(e2), t3.flowing && !t3.reading && e2.read(0);
        }
        function C(e2) {
          var t3 = e2._readableState;
          for (l("flow", t3.flowing); t3.flowing && e2.read() !== null; )
            ;
        }
        function M(e2, t3) {
          return t3.length === 0 ? null : (t3.objectMode ? r2 = t3.buffer.shift() : !e2 || e2 >= t3.length ? (r2 = t3.decoder ? t3.buffer.join("") : t3.buffer.length === 1 ? t3.buffer.head.data : t3.buffer.concat(t3.length), t3.buffer.clear()) : r2 = function(e3, t4, r3) {
            var n2;
            e3 < t4.head.data.length ? (n2 = t4.head.data.slice(0, e3), t4.head.data = t4.head.data.slice(e3)) : n2 = e3 === t4.head.data.length ? t4.shift() : r3 ? function(e4, t5) {
              var r4 = t5.head, n3 = 1, i2 = r4.data;
              e4 -= i2.length;
              for (; r4 = r4.next; ) {
                var s2 = r4.data, o2 = e4 > s2.length ? s2.length : e4;
                if (o2 === s2.length ? i2 += s2 : i2 += s2.slice(0, e4), (e4 -= o2) === 0) {
                  o2 === s2.length ? (++n3, r4.next ? t5.head = r4.next : t5.head = t5.tail = null) : (t5.head = r4, r4.data = s2.slice(o2));
                  break;
                }
                ++n3;
              }
              return t5.length -= n3, i2;
            }(e3, t4) : function(e4, t5) {
              var r4 = u.allocUnsafe(e4), n3 = t5.head, i2 = 1;
              n3.data.copy(r4), e4 -= n3.data.length;
              for (; n3 = n3.next; ) {
                var s2 = n3.data, o2 = e4 > s2.length ? s2.length : e4;
                if (s2.copy(r4, r4.length - e4, 0, o2), (e4 -= o2) === 0) {
                  o2 === s2.length ? (++i2, n3.next ? t5.head = n3.next : t5.head = t5.tail = null) : (t5.head = n3, n3.data = s2.slice(o2));
                  break;
                }
                ++i2;
              }
              return t5.length -= i2, r4;
            }(e3, t4);
            return n2;
          }(e2, t3.buffer, t3.decoder), r2);
          var r2;
        }
        function x(e2) {
          var t3 = e2._readableState;
          if (t3.length > 0)
            throw new Error('"endReadable()" called on non-empty stream');
          t3.endEmitted || (t3.ended = true, i.nextTick(N, t3, e2));
        }
        function N(e2, t3) {
          e2.endEmitted || e2.length !== 0 || (e2.endEmitted = true, t3.readable = false, t3.emit("end"));
        }
        function P(e2, t3) {
          for (var r2 = 0, n2 = e2.length; r2 < n2; r2++)
            if (e2[r2] === t3)
              return r2;
          return -1;
        }
        v.prototype.read = function(e2) {
          l("read", e2), e2 = parseInt(e2, 10);
          var t3 = this._readableState, r2 = e2;
          if (e2 !== 0 && (t3.emittedReadable = false), e2 === 0 && t3.needReadable && (t3.length >= t3.highWaterMark || t3.ended))
            return l("read: emitReadable", t3.length, t3.ended), t3.length === 0 && t3.ended ? x(this) : S(this), null;
          if ((e2 = E(e2, t3)) === 0 && t3.ended)
            return t3.length === 0 && x(this), null;
          var n2, i2 = t3.needReadable;
          return l("need readable", i2), (t3.length === 0 || t3.length - e2 < t3.highWaterMark) && l("length less than watermark", i2 = true), t3.ended || t3.reading ? l("reading or ended", i2 = false) : i2 && (l("do read"), t3.reading = true, t3.sync = true, t3.length === 0 && (t3.needReadable = true), this._read(t3.highWaterMark), t3.sync = false, t3.reading || (e2 = E(r2, t3))), (n2 = e2 > 0 ? M(e2, t3) : null) === null ? (t3.needReadable = true, e2 = 0) : t3.length -= e2, t3.length === 0 && (t3.ended || (t3.needReadable = true), r2 !== e2 && t3.ended && x(this)), n2 !== null && this.emit("data", n2), n2;
        }, v.prototype._read = function(e2) {
          this.emit("error", new Error("_read() is not implemented"));
        }, v.prototype.pipe = function(e2, t3) {
          var r2 = this, s2 = this._readableState;
          switch (s2.pipesCount) {
            case 0:
              s2.pipes = e2;
              break;
            case 1:
              s2.pipes = [s2.pipes, e2];
              break;
            default:
              s2.pipes.push(e2);
          }
          s2.pipesCount += 1, l("pipe count=%d opts=%j", s2.pipesCount, t3);
          var c2 = (!t3 || t3.end !== false) && e2 !== n.stdout && e2 !== n.stderr ? h2 : v2;
          function u2(t4, n2) {
            l("onunpipe"), t4 === r2 && n2 && n2.hasUnpiped === false && (n2.hasUnpiped = true, l("cleanup"), e2.removeListener("close", b2), e2.removeListener("finish", m2), e2.removeListener("drain", f2), e2.removeListener("error", g2), e2.removeListener("unpipe", u2), r2.removeListener("end", h2), r2.removeListener("end", v2), r2.removeListener("data", y2), d2 = true, !s2.awaitDrain || e2._writableState && !e2._writableState.needDrain || f2());
          }
          function h2() {
            l("onend"), e2.end();
          }
          s2.endEmitted ? i.nextTick(c2) : r2.once("end", c2), e2.on("unpipe", u2);
          var f2 = function(e3) {
            return function() {
              var t4 = e3._readableState;
              l("pipeOnDrain", t4.awaitDrain), t4.awaitDrain && t4.awaitDrain--, t4.awaitDrain === 0 && a(e3, "data") && (t4.flowing = true, C(e3));
            };
          }(r2);
          e2.on("drain", f2);
          var d2 = false;
          var p2 = false;
          function y2(t4) {
            l("ondata"), p2 = false, e2.write(t4) !== false || p2 || ((s2.pipesCount === 1 && s2.pipes === e2 || s2.pipesCount > 1 && P(s2.pipes, e2) !== -1) && !d2 && (l("false write response, pause", r2._readableState.awaitDrain), r2._readableState.awaitDrain++, p2 = true), r2.pause());
          }
          function g2(t4) {
            l("onerror", t4), v2(), e2.removeListener("error", g2), a(e2, "error") === 0 && e2.emit("error", t4);
          }
          function b2() {
            e2.removeListener("finish", m2), v2();
          }
          function m2() {
            l("onfinish"), e2.removeListener("close", b2), v2();
          }
          function v2() {
            l("unpipe"), r2.unpipe(e2);
          }
          return r2.on("data", y2), function(e3, t4, r3) {
            if (typeof e3.prependListener == "function")
              return e3.prependListener(t4, r3);
            e3._events && e3._events[t4] ? o(e3._events[t4]) ? e3._events[t4].unshift(r3) : e3._events[t4] = [r3, e3._events[t4]] : e3.on(t4, r3);
          }(e2, "error", g2), e2.once("close", b2), e2.once("finish", m2), e2.emit("pipe", r2), s2.flowing || (l("pipe resume"), r2.resume()), e2;
        }, v.prototype.unpipe = function(e2) {
          var t3 = this._readableState, r2 = {hasUnpiped: false};
          if (t3.pipesCount === 0)
            return this;
          if (t3.pipesCount === 1)
            return e2 && e2 !== t3.pipes || (e2 || (e2 = t3.pipes), t3.pipes = null, t3.pipesCount = 0, t3.flowing = false, e2 && e2.emit("unpipe", this, r2)), this;
          if (!e2) {
            var n2 = t3.pipes, i2 = t3.pipesCount;
            t3.pipes = null, t3.pipesCount = 0, t3.flowing = false;
            for (var s2 = 0; s2 < i2; s2++)
              n2[s2].emit("unpipe", this, r2);
            return this;
          }
          var o2 = P(t3.pipes, e2);
          return o2 === -1 || (t3.pipes.splice(o2, 1), t3.pipesCount -= 1, t3.pipesCount === 1 && (t3.pipes = t3.pipes[0]), e2.emit("unpipe", this, r2)), this;
        }, v.prototype.on = function(e2, t3) {
          var r2 = c.prototype.on.call(this, e2, t3);
          if (e2 === "data")
            this._readableState.flowing !== false && this.resume();
          else if (e2 === "readable") {
            var n2 = this._readableState;
            n2.endEmitted || n2.readableListening || (n2.readableListening = n2.needReadable = true, n2.emittedReadable = false, n2.reading ? n2.length && S(this) : i.nextTick(R, this));
          }
          return r2;
        }, v.prototype.addListener = v.prototype.on, v.prototype.resume = function() {
          var e2 = this._readableState;
          return e2.flowing || (l("resume"), e2.flowing = true, function(e3, t3) {
            t3.resumeScheduled || (t3.resumeScheduled = true, i.nextTick(T, e3, t3));
          }(this, e2)), this;
        }, v.prototype.pause = function() {
          return l("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && (l("pause"), this._readableState.flowing = false, this.emit("pause")), this;
        }, v.prototype.wrap = function(e2) {
          var t3 = this, r2 = this._readableState, n2 = false;
          for (var i2 in e2.on("end", function() {
            if (l("wrapped end"), r2.decoder && !r2.ended) {
              var e3 = r2.decoder.end();
              e3 && e3.length && t3.push(e3);
            }
            t3.push(null);
          }), e2.on("data", function(i3) {
            (l("wrapped data"), r2.decoder && (i3 = r2.decoder.write(i3)), r2.objectMode && i3 == null) || (r2.objectMode || i3 && i3.length) && (t3.push(i3) || (n2 = true, e2.pause()));
          }), e2)
            this[i2] === void 0 && typeof e2[i2] == "function" && (this[i2] = function(t4) {
              return function() {
                return e2[t4].apply(e2, arguments);
              };
            }(i2));
          for (var s2 = 0; s2 < b.length; s2++)
            e2.on(b[s2], this.emit.bind(this, b[s2]));
          return this._read = function(t4) {
            l("wrapped _read", t4), n2 && (n2 = false, e2.resume());
          }, this;
        }, Object.defineProperty(v.prototype, "readableHighWaterMark", {enumerable: false, get: function() {
          return this._readableState.highWaterMark;
        }}), v._fromList = M;
      }).call(this, r(12), r(10));
    }, function(e, t, r) {
      "use strict";
      e.exports = r(14).EventEmitter;
    }, function(e, t, r) {
      "use strict";
      var n = r(109);
      function i(e2, t2) {
        e2.emit("error", t2);
      }
      e.exports = {destroy: function(e2, t2) {
        var r2 = this, s = this._readableState && this._readableState.destroyed, o = this._writableState && this._writableState.destroyed;
        return s || o ? (t2 ? t2(e2) : !e2 || this._writableState && this._writableState.errorEmitted || n.nextTick(i, this, e2), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(e2 || null, function(e3) {
          !t2 && e3 ? (n.nextTick(i, r2, e3), r2._writableState && (r2._writableState.errorEmitted = true)) : t2 && t2(e3);
        }), this);
      }, undestroy: function() {
        this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
      }};
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        function r2(e2) {
          try {
            if (!t2.localStorage)
              return false;
          } catch (n) {
            return false;
          }
          var r3 = t2.localStorage[e2];
          return r3 != null && String(r3).toLowerCase() === "true";
        }
        e.exports = function(e2, t3) {
          if (r2("noDeprecation"))
            return e2;
          var n = false;
          return function() {
            if (!n) {
              if (r2("throwDeprecation"))
                throw new Error(t3);
              r2("traceDeprecation") ? console.trace(t3) : console.warn(t3), n = true;
            }
            return e2.apply(this, arguments);
          };
        };
      }).call(this, r(12));
    }, function(e, t, r) {
      "use strict";
      e.exports = o;
      var n = r(53), i = Object.create(r(85));
      function s(e2, t2) {
        var r2 = this._transformState;
        r2.transforming = false;
        var n2 = r2.writecb;
        if (!n2)
          return this.emit("error", new Error("write callback called multiple times"));
        r2.writechunk = null, r2.writecb = null, t2 != null && this.push(t2), n2(e2);
        var i2 = this._readableState;
        i2.reading = false, (i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
      }
      function o(e2) {
        if (!(this instanceof o))
          return new o(e2);
        n.call(this, e2), this._transformState = {afterTransform: s.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null}, this._readableState.needReadable = true, this._readableState.sync = false, e2 && (typeof e2.transform == "function" && (this._transform = e2.transform), typeof e2.flush == "function" && (this._flush = e2.flush)), this.on("prefinish", a);
      }
      function a() {
        var e2 = this;
        typeof this._flush == "function" ? this._flush(function(t2, r2) {
          c(e2, t2, r2);
        }) : c(this, null, null);
      }
      function c(e2, t2, r2) {
        if (t2)
          return e2.emit("error", t2);
        if (r2 != null && e2.push(r2), e2._writableState.length)
          throw new Error("Calling transform done when ws.length != 0");
        if (e2._transformState.transforming)
          throw new Error("Calling transform done when still transforming");
        return e2.push(null);
      }
      i.inherits = r(18), i.inherits(o, n), o.prototype.push = function(e2, t2) {
        return this._transformState.needTransform = false, n.prototype.push.call(this, e2, t2);
      }, o.prototype._transform = function(e2, t2, r2) {
        throw new Error("_transform() is not implemented");
      }, o.prototype._write = function(e2, t2, r2) {
        var n2 = this._transformState;
        if (n2.writecb = r2, n2.writechunk = e2, n2.writeencoding = t2, !n2.transforming) {
          var i2 = this._readableState;
          (n2.needTransform || i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
        }
      }, o.prototype._read = function(e2) {
        var t2 = this._transformState;
        t2.writechunk !== null && t2.writecb && !t2.transforming ? (t2.transforming = true, this._transform(t2.writechunk, t2.writeencoding, t2.afterTransform)) : t2.needTransform = true;
      }, o.prototype._destroy = function(e2, t2) {
        var r2 = this;
        n.prototype._destroy.call(this, e2, function(e3) {
          t2(e3), r2.emit("close");
        });
      };
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const n = r(63), i = r(159), s = r(29).BigNumber, o = r(87), a = (r(158), r(86), r(65)), c = r(54), u = c.MT, h = c.NUMBYTES, f = c.SHIFT32, d = c.SYMS, l = c.TAG, p = c.MT.SIMPLE_FLOAT << 5 | c.NUMBYTES.TWO, y = c.MT.SIMPLE_FLOAT << 5 | c.NUMBYTES.FOUR, g = c.MT.SIMPLE_FLOAT << 5 | c.NUMBYTES.EIGHT, b = c.MT.SIMPLE_FLOAT << 5 | c.SIMPLE.TRUE, m = c.MT.SIMPLE_FLOAT << 5 | c.SIMPLE.FALSE, v = c.MT.SIMPLE_FLOAT << 5 | c.SIMPLE.UNDEFINED, w = c.MT.SIMPLE_FLOAT << 5 | c.SIMPLE.NULL, _ = a.bigIntize(c.BI), E = c.BN, S = t2.from("f97e00", "hex"), A = t2.from("f9fc00", "hex"), I = t2.from("f97c00", "hex"), k = t2.from("f98000", "hex"), R = Symbol("CBOR_LOOP_DETECT");
        class T extends n.Transform {
          constructor(e2) {
            const r2 = Object.assign({}, e2, {readableObjectMode: false, writableObjectMode: true});
            super(r2), this.canonical = r2.canonical, this.encodeUndefined = r2.encodeUndefined, this.disallowUndefinedKeys = !!r2.disallowUndefinedKeys, this.dateType = r2.dateType != null ? r2.dateType.toLowerCase() : "number", this.collapseBigIntegers = !!r2.collapseBigIntegers, typeof r2.detectLoops == "symbol" ? this.detectLoops = r2.detectLoops : this.detectLoops = r2.detectLoops ? Symbol("CBOR_DETECT") : null, this.semanticTypes = [Array, this._pushArray, Date, this._pushDate, t2, this._pushBuffer, Map, this._pushMap, o, this._pushNoFilter, RegExp, this._pushRegexp, Set, this._pushSet, s, this._pushBigNumber, ArrayBuffer, this._pushUint8Array, Uint8ClampedArray, this._pushUint8Array, Uint8Array, this._pushUint8Array, Uint16Array, this._pushArray, Uint32Array, this._pushArray, Int8Array, this._pushArray, Int16Array, this._pushArray, Int32Array, this._pushArray, Float32Array, this._pushFloat32Array, Float64Array, this._pushFloat64Array], i.Url && this.semanticTypes.push(i.Url, this._pushUrl), i.URL && this.semanticTypes.push(i.URL, this._pushURL);
            const n2 = r2.genTypes || [];
            for (let t3 = 0, i2 = n2.length; t3 < i2; t3 += 2)
              this.addSemanticType(n2[t3], n2[t3 + 1]);
          }
          _transform(e2, t3, r2) {
            return r2(this.pushAny(e2) === false ? new Error("Push Error") : void 0);
          }
          _flush(e2) {
            return e2();
          }
          addSemanticType(e2, t3) {
            for (let r2 = 0, n2 = this.semanticTypes.length; r2 < n2; r2 += 2) {
              if (this.semanticTypes[r2] === e2) {
                const e3 = this.semanticTypes[r2 + 1];
                return this.semanticTypes[r2 + 1] = t3, e3;
              }
            }
            return this.semanticTypes.push(e2, t3), null;
          }
          _pushUInt8(e2) {
            const r2 = t2.allocUnsafe(1);
            return r2.writeUInt8(e2, 0), this.push(r2);
          }
          _pushUInt16BE(e2) {
            const r2 = t2.allocUnsafe(2);
            return r2.writeUInt16BE(e2, 0), this.push(r2);
          }
          _pushUInt32BE(e2) {
            const r2 = t2.allocUnsafe(4);
            return r2.writeUInt32BE(e2, 0), this.push(r2);
          }
          _pushFloatBE(e2) {
            const r2 = t2.allocUnsafe(4);
            return r2.writeFloatBE(e2, 0), this.push(r2);
          }
          _pushDoubleBE(e2) {
            const r2 = t2.allocUnsafe(8);
            return r2.writeDoubleBE(e2, 0), this.push(r2);
          }
          _pushNaN() {
            return this.push(S);
          }
          _pushInfinity(e2) {
            const t3 = e2 < 0 ? A : I;
            return this.push(t3);
          }
          _pushFloat(e2) {
            if (this.canonical) {
              const r2 = t2.allocUnsafe(2);
              if (a.writeHalf(r2, e2) && a.parseHalf(r2) === e2)
                return this._pushUInt8(p) && this.push(r2);
            }
            return Math.fround(e2) === e2 ? this._pushUInt8(y) && this._pushFloatBE(e2) : this._pushUInt8(g) && this._pushDoubleBE(e2);
          }
          _pushInt(e2, t3, r2) {
            const n2 = t3 << 5;
            switch (false) {
              case !(e2 < 24):
                return this._pushUInt8(n2 | e2);
              case !(e2 <= 255):
                return this._pushUInt8(n2 | h.ONE) && this._pushUInt8(e2);
              case !(e2 <= 65535):
                return this._pushUInt8(n2 | h.TWO) && this._pushUInt16BE(e2);
              case !(e2 <= 4294967295):
                return this._pushUInt8(n2 | h.FOUR) && this._pushUInt32BE(e2);
              case !(e2 <= Number.MAX_SAFE_INTEGER):
                return this._pushUInt8(n2 | h.EIGHT) && this._pushUInt32BE(Math.floor(e2 / f)) && this._pushUInt32BE(e2 % f);
              default:
                return t3 === u.NEG_INT ? this._pushFloat(r2) : this._pushFloat(e2);
            }
          }
          _pushIntNum(e2) {
            return Object.is(e2, -0) ? this.push(k) : e2 < 0 ? this._pushInt(-e2 - 1, u.NEG_INT, e2) : this._pushInt(e2, u.POS_INT);
          }
          _pushNumber(e2) {
            switch (false) {
              case !isNaN(e2):
                return this._pushNaN();
              case isFinite(e2):
                return this._pushInfinity(e2);
              case Math.round(e2) !== e2:
                return this._pushIntNum(e2);
              default:
                return this._pushFloat(e2);
            }
          }
          _pushString(e2) {
            const r2 = t2.byteLength(e2, "utf8");
            return this._pushInt(r2, u.UTF8_STRING) && this.push(e2, "utf8");
          }
          _pushBoolean(e2) {
            return this._pushUInt8(e2 ? b : m);
          }
          _pushUndefined(e2) {
            switch (typeof this.encodeUndefined) {
              case "undefined":
                return this._pushUInt8(v);
              case "function":
                return this.pushAny(this.encodeUndefined.call(this, e2));
              case "object":
                if (t2.isBuffer(this.encodeUndefined))
                  return this.push(this.encodeUndefined);
            }
            return this.pushAny(this.encodeUndefined);
          }
          _pushNull(e2) {
            return this._pushUInt8(w);
          }
          _pushArray(e2, t3) {
            const r2 = t3.length;
            if (!e2._pushInt(r2, u.ARRAY))
              return false;
            for (let n2 = 0; n2 < r2; n2++)
              if (!e2.pushAny(t3[n2]))
                return false;
            return true;
          }
          _pushTag(e2) {
            return this._pushInt(e2, u.TAG);
          }
          _pushDate(e2, t3) {
            switch (e2.dateType) {
              case "string":
                return e2._pushTag(l.DATE_STRING) && e2._pushString(t3.toISOString());
              case "int":
              case "integer":
                return e2._pushTag(l.DATE_EPOCH) && e2._pushIntNum(Math.round(t3 / 1e3));
              case "float":
                return e2._pushTag(l.DATE_EPOCH) && e2._pushFloat(t3 / 1e3);
              case "number":
              default:
                return e2._pushTag(l.DATE_EPOCH) && e2.pushAny(t3 / 1e3);
            }
          }
          _pushBuffer(e2, t3) {
            return e2._pushInt(t3.length, u.BYTE_STRING) && e2.push(t3);
          }
          _pushNoFilter(e2, t3) {
            return e2._pushBuffer(e2, t3.slice());
          }
          _pushRegexp(e2, t3) {
            return e2._pushTag(l.REGEXP) && e2.pushAny(t3.source);
          }
          _pushSet(e2, t3) {
            if (!e2._pushInt(t3.size, u.ARRAY))
              return false;
            for (const r2 of t3)
              if (!e2.pushAny(r2))
                return false;
            return true;
          }
          _pushUrl(e2, t3) {
            return e2._pushTag(l.URI) && e2.pushAny(t3.format());
          }
          _pushURL(e2, t3) {
            return e2._pushTag(l.URI) && e2.pushAny(t3.toString());
          }
          _pushBigint(e2) {
            let r2 = u.POS_INT, n2 = l.POS_BIGINT;
            if (e2.isNegative() && (e2 = e2.negated().minus(1), r2 = u.NEG_INT, n2 = l.NEG_BIGINT), this.collapseBigIntegers && e2.lte(E.MAXINT64))
              return e2.lte(E.MAXINT32) ? this._pushInt(e2.toNumber(), r2) : this._pushUInt8(r2 << 5 | h.EIGHT) && this._pushUInt32BE(e2.dividedToIntegerBy(E.SHIFT32).toNumber()) && this._pushUInt32BE(e2.mod(E.SHIFT32).toNumber());
            let i2 = e2.toString(16);
            i2.length % 2 && (i2 = "0" + i2);
            const s2 = t2.from(i2, "hex");
            return this._pushTag(n2) && this._pushBuffer(this, s2);
          }
          _pushJSBigint(e2) {
            let r2 = u.POS_INT, n2 = l.POS_BIGINT;
            if (e2 < 0 && (e2 = -e2 + _.MINUS_ONE, r2 = u.NEG_INT, n2 = l.NEG_BIGINT), this.collapseBigIntegers && e2 <= _.MAXINT64)
              return e2 <= 4294967295 ? this._pushInt(Number(e2), r2) : this._pushUInt8(r2 << 5 | h.EIGHT) && this._pushUInt32BE(Number(e2 / _.SHIFT32)) && this._pushUInt32BE(Number(e2 % _.SHIFT32));
            let i2 = e2.toString(16);
            i2.length % 2 && (i2 = "0" + i2);
            const s2 = t2.from(i2, "hex");
            return this._pushTag(n2) && this._pushBuffer(this, s2);
          }
          _pushBigNumber(e2, t3) {
            if (t3.isNaN())
              return e2._pushNaN();
            if (!t3.isFinite())
              return e2._pushInfinity(t3.isNegative() ? -1 / 0 : 1 / 0);
            if (t3.isInteger())
              return e2._pushBigint(t3);
            if (!e2._pushTag(l.DECIMAL_FRAC) || !e2._pushInt(2, u.ARRAY))
              return false;
            const r2 = t3.decimalPlaces(), n2 = t3.times(new s(10).pow(r2));
            return !!e2._pushIntNum(-r2) && (n2.abs().isLessThan(E.MAXINT) ? e2._pushIntNum(n2.toNumber()) : e2._pushBigint(n2));
          }
          _pushMap(e2, t3) {
            if (!e2._pushInt(t3.size, u.MAP))
              return false;
            if (e2.canonical) {
              const r2 = [...t3.entries()], n2 = new T(this), i2 = new o({highWaterMark: this.readableHighWaterMark});
              n2.pipe(i2), r2.sort(([e3], [t4]) => {
                n2.pushAny(e3);
                const r3 = i2.read();
                n2.pushAny(t4);
                const s2 = i2.read();
                return r3.compare(s2);
              });
              for (const [t4, s2] of r2) {
                if (e2.disallowUndefinedKeys && t4 === void 0)
                  throw new Error("Invalid Map key: undefined");
                if (!e2.pushAny(t4) || !e2.pushAny(s2))
                  return false;
              }
            } else
              for (const [r2, n2] of t3) {
                if (e2.disallowUndefinedKeys && r2 === void 0)
                  throw new Error("Invalid Map key: undefined");
                if (!e2.pushAny(r2) || !e2.pushAny(n2))
                  return false;
              }
            return true;
          }
          _pushUint8Array(e2, r2) {
            return e2._pushBuffer(e2, t2.from(r2));
          }
          _pushFloat32Array(e2, t3) {
            const r2 = t3.length;
            if (!e2._pushInt(r2, u.ARRAY))
              return false;
            for (let n2 = 0; n2 < r2; n2++)
              if (!e2._pushUInt8(y) || !e2._pushFloatBE(t3[n2]))
                return false;
            return true;
          }
          _pushFloat64Array(e2, t3) {
            const r2 = t3.length;
            if (!e2._pushInt(r2, u.ARRAY))
              return false;
            for (let n2 = 0; n2 < r2; n2++)
              if (!e2._pushUInt8(g) || !e2._pushDoubleBE(t3[n2]))
                return false;
            return true;
          }
          removeLoopDetectors(e2) {
            if (!this.detectLoops || typeof e2 != "object" || !e2)
              return false;
            const t3 = e2[R];
            if (!t3 || t3 !== this.detectLoops)
              return false;
            if (delete e2[R], Array.isArray(e2))
              for (const r2 of e2)
                this.removeLoopDetectors(r2);
            else
              for (const r2 in e2)
                this.removeLoopDetectors(e2[r2]);
            return true;
          }
          _pushObject(e2) {
            if (!e2)
              return this._pushNull(e2);
            if (this.detectLoops) {
              if (e2[R] === this.detectLoops)
                throw new Error("Loop detected while CBOR encoding");
              e2[R] = this.detectLoops;
            }
            const t3 = e2.encodeCBOR;
            if (typeof t3 == "function")
              return t3.call(e2, this);
            for (let s2 = 0, o2 = this.semanticTypes.length; s2 < o2; s2 += 2) {
              if (e2 instanceof this.semanticTypes[s2])
                return this.semanticTypes[s2 + 1].call(e2, this, e2);
            }
            const r2 = Object.keys(e2), n2 = {};
            if (this.canonical && r2.sort((e3, t4) => {
              const r3 = n2[e3] || (n2[e3] = T.encode(e3)), i3 = n2[t4] || (n2[t4] = T.encode(t4));
              return r3.compare(i3);
            }), !this._pushInt(r2.length, u.MAP))
              return false;
            let i2;
            for (let s2 = 0, o2 = r2.length; s2 < o2; s2++) {
              const t4 = r2[s2];
              if (this.canonical && (i2 = n2[t4])) {
                if (!this.push(i2))
                  return false;
              } else if (!this._pushString(t4))
                return false;
              if (!this.pushAny(e2[t4]))
                return false;
            }
            return true;
          }
          pushAny(e2) {
            switch (typeof e2) {
              case "number":
                return this._pushNumber(e2);
              case "bigint":
                return this._pushJSBigint(e2);
              case "string":
                return this._pushString(e2);
              case "boolean":
                return this._pushBoolean(e2);
              case "undefined":
                return this._pushUndefined(e2);
              case "object":
                return this._pushObject(e2);
              case "symbol":
                switch (e2) {
                  case d.NULL:
                    return this._pushNull(null);
                  case d.UNDEFINED:
                    return this._pushUndefined(void 0);
                  default:
                    throw new Error("Unknown symbol: " + e2.toString());
                }
              default:
                throw new Error("Unknown type: " + typeof e2 + ", " + (e2 ? e2.toString() : ""));
            }
          }
          _pushAny(e2) {
            return this.pushAny(e2);
          }
          _encodeAll(e2) {
            const t3 = new o({highWaterMark: this.readableHighWaterMark});
            this.pipe(t3);
            for (const r2 of e2)
              this.pushAny(r2);
            return this.end(), t3.read();
          }
          static encode(...e2) {
            return new T()._encodeAll(e2);
          }
          static encodeCanonical(...e2) {
            return new T({canonical: true})._encodeAll(e2);
          }
          static encodeOne(e2, t3) {
            return new T(t3)._encodeAll([e2]);
          }
          static encodeAsync(e2, r2) {
            return new Promise((n2, i2) => {
              const s2 = [], o2 = new T(r2);
              o2.on("data", (e3) => s2.push(e3)), o2.on("error", i2), o2.on("finish", () => n2(t2.concat(s2))), o2.pushAny(e2), o2.end();
            });
          }
        }
        e.exports = T;
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      const n = r(9).Key, {utf8Decoder: i} = r(273), s = r(592), o = t.PREFIX = "/repo/flatfs/shard/", a = t.SHARDING_FN = "SHARDING";
      t.README_FN = "_README";
      class c {
        constructor(e2) {
          this.param = e2;
        }
        fun(e2) {
          throw new Error("implement me");
        }
        toString() {
          return `${o}v1/${this.name}/${this.param}`;
        }
      }
      class u extends c {
        constructor(e2) {
          super(e2), this._padding = "".padStart(e2, "_"), this.name = "prefix";
        }
        fun(e2) {
          return (e2 + this._padding).slice(0, this.param);
        }
      }
      class h extends c {
        constructor(e2) {
          super(e2), this._padding = "".padStart(e2, "_"), this.name = "suffix";
        }
        fun(e2) {
          const t2 = this._padding + e2;
          return t2.slice(t2.length - this.param);
        }
      }
      class f extends c {
        constructor(e2) {
          super(e2), this._padding = "".padStart(e2 + 1, "_"), this.name = "next-to-last";
        }
        fun(e2) {
          const t2 = this._padding + e2, r2 = t2.length - this.param - 1;
          return t2.slice(r2, r2 + this.param);
        }
      }
      function d(e2) {
        if ((e2 = e2.trim()).length === 0)
          throw new Error("empty shard string");
        if (!e2.startsWith(o))
          throw new Error("invalid or no path prefix: " + e2);
        const t2 = e2.slice(o.length).split("/"), r2 = t2[0];
        if (r2 !== "v1")
          throw new Error(`expect 'v1' version, got '${r2}'`);
        const n2 = t2[1];
        if (!t2[2])
          throw new Error("missing param");
        const i2 = parseInt(t2[2], 10);
        switch (n2) {
          case "prefix":
            return new u(i2);
          case "suffix":
            return new h(i2);
          case "next-to-last":
            return new f(i2);
          default:
            throw new Error("unkown sharding function: " + n2);
        }
      }
      t.readShardFun = async (e2, t2) => {
        const r2 = new n(e2).child(new n(a)), s2 = typeof t2.getRaw == "function" ? t2.getRaw.bind(t2) : t2.get.bind(t2), o2 = await s2(r2);
        return d(i.decode(o2 || "").trim());
      }, t.readme = s, t.parseShardFun = d, t.Prefix = u, t.Suffix = h, t.NextToLast = f;
    }, function(e, t, r) {
      "use strict";
      const n = r(590), i = r(591);
      e.exports.utf8Encoder = new n("utf8"), e.exports.utf8Decoder = new i("utf8");
    }, function(e, t, r) {
      "use strict";
      typeof globalThis != "object" && (Object.defineProperty(Object.prototype, "__magic__", {get: function() {
        return this;
      }, configurable: true}), __magic__.globalThis = __magic__, delete Object.prototype.__magic__), e.exports = globalThis;
    }, function(e, t, r) {
      "use strict";
      const n = r(88), {toB58String: i} = r(15).multihash, s = r(596), o = r(5), a = r(6), c = r(24), u = r(0), h = r(1), f = Object.assign(h("ipfs:ipns:pubsub"), {error: h("ipfs:ipns:pubsub:error")});
      e.exports = c(class {
        constructor(e2, t2, r2) {
          this._pubsub = e2, this._subscriptions = {}, this._handleSubscriptionKey = this._handleSubscriptionKey.bind(this), this._pubsubDs = new s(e2, t2, r2, n.validator, this._handleSubscriptionKey);
        }
        async put(e2, t2) {
          return this._pubsubDs.put(e2, t2);
        }
        async get(e2) {
          let t2, r2;
          try {
            t2 = await this._pubsubDs.get(e2);
          } catch (a2) {
            r2 = a2;
          }
          const s2 = e2.slice(0, n.namespaceLength);
          if (o(s2) === n.namespace) {
            const t3 = i(e2), r3 = i(e2.slice(n.namespaceLength));
            this._subscriptions[t3] = r3, f(`subscribed to pubsub topic ${t3}, id ${r3}`);
          }
          if (r2)
            throw r2;
          return t2;
        }
        _handleSubscriptionKey(e2) {
          e2 instanceof Uint8Array && (e2 = o(e2, "base58btc"));
          const t2 = this._subscriptions[e2];
          if (!t2)
            throw u(new Error(`key ${e2} does not correspond to a subscription`), "ERR_INVALID_KEY");
          let r2;
          try {
            r2 = n.getIdKeys(a(t2, "base58btc"));
          } catch (i2) {
            throw f.error(i2), i2;
          }
          return r2.routingKey.uint8Array();
        }
        getSubscriptions() {
          return Object.values(this._subscriptions).filter(Boolean).map((e2) => `${n.namespace}${e2}`);
        }
        async cancel(e2) {
          if (typeof e2 != "string")
            throw u(new Error("invalid subscription name"), "ERR_INVALID_SUBSCRIPTION_NAME");
          e2.startsWith(n.namespace) && (e2 = e2.substring(n.namespaceLength));
          const t2 = Object.keys(this._subscriptions).find((t3) => this._subscriptions[t3] === e2);
          if (!t2)
            return {canceled: false};
          const r2 = a(t2);
          return this._pubsubDs.unsubscribe(r2), this._subscriptions[t2] = void 0, f(`unsubscribed pubsub ${t2}: ${e2}`), {canceled: true};
        }
      }, {className: "IpnsPubsubDatastore", symbolName: "@js-ipfs/ipns/IpnsPubsubDatastore"});
    }, function(e, t, r) {
      "use strict";
      const {Key: n} = r(9), {Record: i} = r(66), {encodeBase32: s} = r(277), o = r(0), a = r(1), c = Object.assign(a("ipfs:ipns:offline-datastore"), {error: a("ipfs:ipns:offline-datastore:error")});
      e.exports = class {
        constructor(e2) {
          this._repo = e2;
        }
        async put(e2, t2) {
          if (!(e2 instanceof Uint8Array))
            throw o(new Error("Offline datastore key must be a Uint8Array"), "ERR_INVALID_KEY");
          if (!(t2 instanceof Uint8Array))
            throw o(new Error("Offline datastore value must be a Uint8Array"), "ERR_INVALID_VALUE");
          let r2;
          try {
            r2 = this._routingKey(e2);
          } catch (s2) {
            throw c.error(s2), o(new Error("Not possible to generate the routing key"), "ERR_GENERATING_ROUTING_KEY");
          }
          const n2 = new i(e2, t2);
          return this._repo.datastore.put(r2, n2.serialize());
        }
        async get(e2) {
          if (!(e2 instanceof Uint8Array))
            throw o(new Error("Offline datastore key must be a Uint8Array"), "ERR_INVALID_KEY");
          let t2;
          try {
            t2 = this._routingKey(e2);
          } catch (s2) {
            throw c.error(s2), o(new Error("Not possible to generate the routing key"), "ERR_GENERATING_ROUTING_KEY");
          }
          const r2 = await this._repo.datastore.get(t2);
          let n2;
          try {
            n2 = i.deserialize(r2);
          } catch (s2) {
            throw c.error(s2), s2;
          }
          return n2.value;
        }
        _routingKey(e2) {
          return new n("/" + s(e2), false);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(88), i = r(5);
      e.exports = {encodeBase32: (e2) => i(e2, "base32upper"), validator: {func: (e2, t2, r2) => n.validator.validate(t2, e2, r2)}, selector: (e2, t2) => n.validator.select(t2[0], t2[1])};
    }, function(e, t, r) {
      "use strict";
      const n = r(29).default, i = r(4), s = r(2);
      e.exports = ({network: e2}) => s(async function(t2) {
        const {bitswap: r2} = await e2.use(t2), s2 = r2.stat().snapshot;
        return {provideBufLen: parseInt(s2.providesBufferLength.toString()), blocksReceived: new n(s2.blocksReceived), wantlist: Array.from(r2.getWantlist()).map((e3) => e3[1].cid), peers: r2.peers().map((e3) => new i(e3.toB58String())), dupBlksReceived: new n(s2.dupBlksReceived), dupDataReceived: new n(s2.dupDataReceived), dataReceived: new n(s2.dataReceived), blocksSent: new n(s2.blocksSent), dataSent: new n(s2.dataSent)};
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(60).IPFS.matches;
      t.isValidMultiaddr = (e2) => {
        try {
          return n(e2);
        } catch (t2) {
          return false;
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(166);
      e.exports = async function* (e2, t2) {
        t2 = parseInt(t2), (isNaN(t2) || t2 < 1) && (t2 = 1);
        for await (const r2 of n(e2, t2)) {
          const e3 = r2.map((e4) => e4().then((e5) => ({ok: true, value: e5}), (e5) => ({ok: false, err: e5})));
          for (let t3 = 0; t3 < e3.length; t3++) {
            const r3 = await e3[t3];
            if (!r3.ok)
              throw r3.err;
            yield r3.value;
          }
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(637), {hasOwnProperty: i} = Object.prototype, {propertyIsEnumerable: s} = Object, o = (e2, t2, r2) => Object.defineProperty(e2, t2, {value: r2, writable: true, enumerable: true, configurable: true}), a = {concatArrays: false, ignoreUndefined: false}, c = (e2) => {
        const t2 = [];
        for (const r2 in e2)
          i.call(e2, r2) && t2.push(r2);
        if (Object.getOwnPropertySymbols) {
          const r2 = Object.getOwnPropertySymbols(e2);
          for (const n2 of r2)
            s.call(e2, n2) && t2.push(n2);
        }
        return t2;
      };
      function u(e2) {
        return Array.isArray(e2) ? function(e3) {
          const t2 = e3.slice(0, 0);
          return c(e3).forEach((r2) => {
            o(t2, r2, u(e3[r2]));
          }), t2;
        }(e2) : n(e2) ? function(e3) {
          const t2 = Object.getPrototypeOf(e3) === null ? Object.create(null) : {};
          return c(e3).forEach((r2) => {
            o(t2, r2, u(e3[r2]));
          }), t2;
        }(e2) : e2;
      }
      const h = (e2, t2, r2, n2) => (r2.forEach((r3) => {
        t2[r3] === void 0 && n2.ignoreUndefined || (r3 in e2 && e2[r3] !== Object.getPrototypeOf(e2) ? o(e2, r3, f(e2[r3], t2[r3], n2)) : o(e2, r3, u(t2[r3])));
      }), e2);
      function f(e2, t2, r2) {
        return r2.concatArrays && Array.isArray(e2) && Array.isArray(t2) ? ((e3, t3, r3) => {
          let n2 = e3.slice(0, 0), s2 = 0;
          return [e3, t3].forEach((t4) => {
            const a2 = [];
            for (let r4 = 0; r4 < t4.length; r4++)
              i.call(t4, r4) && (a2.push(String(r4)), o(n2, s2++, t4 === e3 ? t4[r4] : u(t4[r4])));
            n2 = h(n2, t4, c(t4).filter((e4) => !a2.includes(e4)), r3);
          }), n2;
        })(e2, t2, r2) : n(t2) && n(e2) ? h(e2, t2, c(t2), r2) : u(t2);
      }
      e.exports = function(...e2) {
        const t2 = f(u(a), this !== void 0 && this || {}, a);
        let r2 = {_: {}};
        for (const i2 of e2)
          if (i2 !== void 0) {
            if (!n(i2))
              throw new TypeError("`" + i2 + "` is not an Option Object");
            r2 = f(r2, {_: i2}, t2);
          }
        return r2._;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2) {
        const [t2, r2] = e2[Symbol.asyncIterator] ? [e2[Symbol.asyncIterator](), Symbol.asyncIterator] : [e2[Symbol.iterator](), Symbol.iterator], n = [];
        return {peek: () => t2.next(), push: (e3) => {
          n.push(e3);
        }, next: () => n.length ? {done: false, value: n.shift()} : t2.next(), [r2]() {
          return this;
        }};
      };
    }, function(e, t, r) {
      "use strict";
      const {Blob: n} = r(129);
      e.exports = {isBytes: function(e2) {
        return ArrayBuffer.isView(e2) || e2 instanceof ArrayBuffer;
      }, isBlob: function(e2) {
        return n !== void 0 && e2 instanceof n;
      }, isFileObject: function(e2) {
        return typeof e2 == "object" && (e2.path || e2.content);
      }, isReadableStream: (e2) => e2 && typeof e2.getReader == "function", mtimeToObject: function(e2) {
        if (e2 != null) {
          if (e2 instanceof Date) {
            const t2 = e2.getTime(), r2 = Math.floor(t2 / 1e3);
            return {secs: r2, nsecs: 1e3 * (t2 - 1e3 * r2)};
          }
          return Object.prototype.hasOwnProperty.call(e2, "secs") ? {secs: e2.secs, nsecs: e2.nsecs} : Object.prototype.hasOwnProperty.call(e2, "Seconds") ? {secs: e2.Seconds, nsecs: e2.FractionalNanoseconds} : Array.isArray(e2) ? {secs: e2[0], nsecs: e2[1]} : void 0;
        }
      }, modeToNumber: function(e2) {
        if (e2 != null)
          return typeof e2 == "number" ? e2 : (e2 = e2.toString()).substring(0, 1) === "0" ? parseInt(e2, 8) : parseInt(e2, 10);
      }};
    }, function(e, t, r) {
      "use strict";
      const n = r(172), i = r(173), s = r(28), o = r(0);
      e.exports = (e2, t2, r2, a, c, u, h) => (e3 = {}) => {
        const a2 = r2.fileSize(), {offset: c2, length: u2} = i(a2, e3.offset, e3.length);
        return async function* e4(t3, r3, i2, a3, c3 = 0, u3) {
          if (r3 instanceof Uint8Array) {
            const e5 = n(r3, c3, i2, a3);
            return e5.length && (yield e5), c3 += e5.length;
          }
          let h2;
          try {
            h2 = s.unmarshal(r3.Data);
          } catch (d) {
            throw o(d, "ERR_NOT_UNIXFS");
          }
          if (Boolean(h2.data && h2.data.length)) {
            const e5 = n(h2.data, c3, i2, a3);
            e5.length && (yield e5), c3 += h2.data.length;
          }
          let f = c3;
          for (let n2 = 0; n2 < r3.Links.length; n2++) {
            const s2 = r3.Links[n2], o2 = c3 + h2.blockSizes[n2];
            if (i2 >= f && i2 < o2 || a3 > f && a3 <= o2 || i2 < f && a3 > o2) {
              const r4 = await t3.get(s2.Hash, u3);
              for await (const n3 of e4(t3, r4, i2, a3, c3, u3))
                c3 += n3.length, yield n3;
            }
            c3 = o2, f = o2 + 1;
          }
        }(h, t2, c2, c2 + u2, 0, e3);
      };
    }, function(e) {
      e.exports = JSON.parse('{"name":"ipfs-core","version":"0.3.0","description":"JavaScript implementation of the IPFS specification","keywords":["IPFS"],"homepage":"https://github.com/ipfs/js-ipfs/tree/master/packages/ipfs-core#readme","bugs":"https://github.com/ipfs/js-ipfs/issues","license":"(Apache-2.0 OR MIT)","leadMaintainer":"Alex Potsides <alex@achingbrain.net>","main":"src/index.js","files":["src","dist"],"browser":{"./src/runtime/init-assets-nodejs.js":"./src/runtime/init-assets-browser.js","./src/runtime/config-nodejs.js":"./src/runtime/config-browser.js","./src/runtime/dns-nodejs.js":"./src/runtime/dns-browser.js","./src/runtime/libp2p-nodejs.js":"./src/runtime/libp2p-browser.js","./src/runtime/libp2p-pubsub-routers-nodejs.js":"./src/runtime/libp2p-pubsub-routers-browser.js","./src/runtime/preload-nodejs.js":"./src/runtime/preload-browser.js","./src/runtime/repo-nodejs.js":"./src/runtime/repo-browser.js","./test/utils/create-repo-nodejs.js":"./test/utils/create-repo-browser.js","ipfs-utils/src/files/glob-source":false},"typesVersions":{"*":{"*":["dist/*","dist/*/index"]}},"repository":{"type":"git","url":"git+https://github.com/ipfs/js-ipfs.git"},"scripts":{"lint":"aegir lint","build":"npm run build:js && npm run build:types","build:js":"aegir build","build:types":"tsc --build","test":"aegir test","test:node":"aegir test -t node","test:browser":"aegir test -t browser","test:webworker":"aegir test -t webworker -- --timeout 10000","test:electron-main":"aegir test -t electron-main","test:electron-renderer":"aegir test -t electron-renderer","test:bootstrapers":"IPFS_TEST=bootstrapers aegir test -t browser -f test/bootstrapers.js","coverage":"nyc --reporter=text --reporter=lcov npm run test:node","clean":"rimraf ./dist","dep-check":"aegir dep-check -i typescript -i interface-ipfs-core"},"dependencies":{"array-shuffle":"^1.0.1","bignumber.js":"^9.0.0","cbor":"^5.1.0","cids":"^1.0.0","class-is":"^1.1.0","dag-cbor-links":"^2.0.0","datastore-core":"^2.0.0","datastore-pubsub":"^0.4.1","debug":"^4.1.1","dlv":"^1.1.3","err-code":"^2.0.3","hamt-sharding":"^1.0.0","hashlru":"^2.3.0","interface-datastore":"^2.0.0","ipfs-bitswap":"^4.0.0","ipfs-block-service":"^0.18.0","ipfs-core-utils":"^0.5.3","ipfs-repo":"^7.0.0","ipfs-unixfs":"^2.0.3","ipfs-unixfs-exporter":"^3.0.4","ipfs-unixfs-importer":"^5.0.0","ipfs-utils":"^5.0.0","ipld":"^0.28.0","ipld-block":"^0.11.0","ipld-dag-cbor":"^0.17.0","ipld-dag-pb":"^0.20.0","ipld-raw":"^6.0.0","ipns":"^0.8.0","is-domain-name":"^1.0.1","is-ipfs":"^2.0.0","it-all":"^1.0.4","it-first":"^1.0.4","it-last":"^1.0.4","it-pipe":"^1.1.0","libp2p":"^0.29.3","libp2p-bootstrap":"^0.12.1","libp2p-crypto":"^0.18.0","libp2p-floodsub":"^0.23.1","libp2p-gossipsub":"^0.6.1","libp2p-kad-dht":"^0.20.1","libp2p-mdns":"^0.15.0","libp2p-mplex":"^0.10.0","libp2p-noise":"^2.0.1","libp2p-record":"^0.9.0","libp2p-tcp":"^0.15.1","libp2p-webrtc-star":"^0.20.1","libp2p-websockets":"^0.14.0","mafmt":"^8.0.0","merge-options":"^2.0.0","mortice":"^2.0.0","multiaddr":"^8.0.0","multiaddr-to-uri":"^6.0.0","multibase":"^3.0.0","multicodec":"^2.0.1","multihashing-async":"^2.0.1","native-abort-controller":"~0.0.3","p-queue":"^6.6.1","parse-duration":"^0.4.4","peer-id":"^0.14.1","streaming-iterables":"^5.0.2","uint8arrays":"^1.1.0"},"devDependencies":{"aegir":"^29.2.2","delay":"^4.4.0","go-ipfs":"^0.7.0","interface-ipfs-core":"^0.142.2","ipfsd-ctl":"^7.1.1","ipld-git":"^0.6.1","iso-url":"^1.0.0","nanoid":"^3.1.12","rimraf":"^3.0.2","sinon":"^9.0.3","typescript":"4.0.x"}}');
    }, function(e, t, r) {
      "use strict";
      const n = r(163), i = r(2), s = r(1)("ipfs:core:config");
      async function o(e2) {
        return Object.keys(a).map((e3) => ({name: e3, description: a[e3].description}));
      }
      e.exports = ({repo: e2}) => ({getAll: i(async function(t2 = {}) {
        return e2.config.getAll(t2);
      }), get: i(async function(t2, r2) {
        if (!t2)
          return Promise.reject(new Error("key argument is required"));
        return e2.config.get(t2, r2);
      }), set: i(async function(t2, r2, n2) {
        return e2.config.set(t2, r2, n2);
      }), replace: i(async function(t2, r2) {
        return e2.config.replace(t2, r2);
      }), profiles: {apply: i(async function(t2, r2 = {}) {
        const {dryRun: n2} = r2, i2 = a[t2];
        if (!i2)
          throw new Error(`No profile with name '${t2}' exists`);
        try {
          const t3 = await e2.config.getAll(r2);
          let s2 = JSON.parse(JSON.stringify(t3));
          return s2 = i2.transform(s2), n2 || await e2.config.replace(s2, r2), delete t3.Identity.PrivKey, delete s2.Identity.PrivKey, {original: t3, updated: s2};
        } catch (o2) {
          throw s(o2), new Error(`Could not apply profile '${t2}' to config: ${o2.message}`);
        }
      }), list: i(o)}});
      const a = {server: {description: "Recommended for nodes with public IPv4 address (servers, VPSes, etc.), disables host and content discovery in local networks.", transform: (e2) => (e2.Discovery.MDNS.Enabled = false, e2.Discovery.webRTCStar.Enabled = false, e2)}, "local-discovery": {description: "Sets default values to fields affected by `server` profile, enables discovery in local networks.", transform: (e2) => (e2.Discovery.MDNS.Enabled = true, e2.Discovery.webRTCStar.Enabled = true, e2)}, test: {description: "Reduces external interference, useful for running ipfs in test environments. Note that with these settings node won't be able to talk to the rest of the network without manual bootstrap.", transform: (e2) => {
        const t2 = n();
        return e2.Addresses.API = t2.Addresses.API ? "/ip4/127.0.0.1/tcp/0" : "", e2.Addresses.Gateway = t2.Addresses.Gateway ? "/ip4/127.0.0.1/tcp/0" : "", e2.Addresses.Swarm = t2.Addresses.Swarm.length ? ["/ip4/127.0.0.1/tcp/0"] : [], e2.Addresses.Delegates = [], e2.Bootstrap = [], e2.Discovery.MDNS.Enabled = false, e2.Discovery.webRTCStar.Enabled = false, e2;
      }}, "default-networking": {description: "Restores default network settings. Inverse profile of the `test` profile.", transform: (e2) => {
        const t2 = n();
        return e2.Addresses.API = t2.Addresses.API, e2.Addresses.Gateway = t2.Addresses.Gateway, e2.Addresses.Swarm = t2.Addresses.Swarm, e2.Addresses.Delegates = t2.Addresses.Delegates, e2.Bootstrap = t2.Bootstrap, e2.Discovery.MDNS.Enabled = t2.Discovery.MDNS.Enabled, e2.Discovery.webRTCStar.Enabled = t2.Discovery.webRTCStar.Enabled, e2;
      }}, lowpower: {description: "Reduces daemon overhead on the system. May affect node functionality,performance of content discovery and data fetching may be degraded. Recommended for low power systems.", transform: (e2) => {
        const t2 = e2.Swarm || {}, r2 = t2.ConnMgr || {};
        return r2.LowWater = 20, r2.HighWater = 40, t2.ConnMgr = r2, e2.Swarm = t2, e2;
      }}, "default-power": {description: 'Inverse of "lowpower" profile.', transform: (e2) => {
        const t2 = n();
        return e2.Swarm = t2.Swarm, e2;
      }}};
      e.exports.profiles = a;
    }, function(e, t, r) {
      "use strict";
      const n = r(11), i = (e2, t2) => t2, s = {ip4: i, ip6: (e2, t2, r2, n2) => n2.length === 1 && n2[0].protocol === "ip6" ? t2 : `[${t2}]`, tcp: (e2, t2, r2, n2, i2) => n2.some((e3) => ["http", "https", "ws", "wss"].includes(e3.protocol)) ? `${e2}:${t2}` : ((e3, t3, r3, n3) => {
        if (n3 && n3.assumeHttp === false)
          return `tcp://${e3}:${t3}`;
        let i3 = "tcp", s2 = ":" + t3;
        return r3[r3.length - 1].protocol === "tcp" && (i3 = t3 === "443" ? "https" : "http", s2 = t3 === "443" || t3 === "80" ? "" : s2), `${i3}://${e3}${s2}`;
      })(e2, t2, n2, i2), udp: (e2, t2) => `udp://${e2}:${t2}`, dnsaddr: i, dns4: i, dns6: i, ipfs: (e2, t2) => `${e2}/ipfs/${t2}`, p2p: (e2, t2) => `${e2}/p2p/${t2}`, http: (e2) => "http://" + e2, https: (e2) => "https://" + e2, ws: (e2) => "ws://" + e2, wss: (e2) => "wss://" + e2, "p2p-websocket-star": (e2) => e2 + "/p2p-websocket-star", "p2p-webrtc-star": (e2) => e2 + "/p2p-webrtc-star", "p2p-webrtc-direct": (e2) => e2 + "/p2p-webrtc-direct"};
      e.exports = (e2, t2) => {
        const r2 = n(e2), i2 = e2.toString().split("/").slice(1);
        return r2.tuples().map((e3) => ({protocol: i2.shift(), content: e3[1] ? i2.shift() : null})).reduce((e3, r3, n2, i3) => {
          const o = s[r3.protocol];
          if (!o)
            throw new Error("Unsupported protocol " + r3.protocol);
          return o(e3, r3.content, n2, i3, t2);
        }, "");
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(289);
      let i;
      e.exports = (e2) => {
        if (i)
          return i;
        const t2 = n({singleProcess: e2});
        return i = {readLock: (e3) => async (...r2) => {
          const n2 = await t2.readLock();
          try {
            return await e3.apply(null, r2);
          } finally {
            n2();
          }
        }, writeLock: (e3) => async (...r2) => {
          const n2 = await t2.writeLock();
          try {
            return await e3.apply(null, r2);
          } finally {
            n2();
          }
        }}, i;
      };
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const n = r(688), i = r(698), {default: s} = r(82), {timeout: o} = r(699), a = r(292), c = {};
        let u;
        function h(e2, t3) {
          let r2;
          const n2 = new Promise((e3) => {
            r2 = e3;
          });
          return e2.add(() => o(new Promise((e3) => {
            r2(() => {
              e3();
            });
          }), t3.timeout)), n2;
        }
        const f = {concurrency: 1 / 0, timeout: 846e5, global: t2, singleProcess: false};
        e.exports = (e2, t3) => (t3 || (t3 = {}), typeof e2 == "object" && (t3 = e2, e2 = "lock"), e2 || (e2 = "lock"), t3 = Object.assign({}, f, t3), u || (u = n(t3) || i(t3), u.isWorker || (u.on("requestReadLock", (e3, t4) => {
          c[e3] && c[e3].readLock().then((e4) => t4().finally(() => e4()));
        }), u.on("requestWriteLock", async (e3, t4) => {
          c[e3] && c[e3].writeLock().then((e4) => t4().finally(() => e4()));
        }))), c[e2] || (c[e2] = ((e3, t4) => {
          if (u.isWorker)
            return {readLock: u.readLock(e3, t4), writeLock: u.writeLock(e3, t4)};
          const r2 = new s({concurrency: 1});
          let n2 = null;
          return {readLock: () => {
            if (n2)
              return h(n2, t4);
            n2 = new s({concurrency: t4.concurrency, autoStart: false});
            const e4 = n2, i2 = h(n2, t4);
            return r2.add(() => (e4.start(), e4.onIdle().then(() => {
              n2 === e4 && (n2 = null);
            }))), i2;
          }, writeLock: () => (n2 = null, h(r2, t4))};
        })(e2, t3)), c[e2]), e.exports.Worker = function(e2, r2) {
          let n2;
          r2 = r2 || t2.Worker;
          try {
            n2 = new r2(e2);
          } catch (i2) {
            i2.message.includes("not a constructor") && (n2 = r2(e2));
          }
          if (!n2)
            throw new Error("Could not create Worker from", r2);
          return a(n2), n2;
        };
      }).call(this, r(12));
    }, function(e, t, r) {
      "use strict";
      e.exports = r(689);
    }, function(e, t, r) {
      "use strict";
      e.exports = {WORKER_REQUEST_READ_LOCK: "lock:worker:request-read", WORKER_RELEASE_READ_LOCK: "lock:worker:release-read", MASTER_GRANT_READ_LOCK: "lock:master:grant-read", WORKER_REQUEST_WRITE_LOCK: "lock:worker:request-write", WORKER_RELEASE_WRITE_LOCK: "lock:worker:release-write", MASTER_GRANT_WRITE_LOCK: "lock:master:grant-write"};
    }, function(e, t, r) {
      "use strict";
      const n = {}, i = (e2) => {
        e2.addEventListener("message", (t2) => {
          i.dispatchEvent("message", e2, t2);
        }), e2.port && e2.port.addEventListener("message", (t2) => {
          i.dispatchEvent("message", e2, t2);
        });
      };
      i.addEventListener = (e2, t2) => {
        n[e2] || (n[e2] = []), n[e2].push(t2);
      }, i.removeEventListener = (e2, t2) => {
        n[e2] && (n[e2] = n[e2].filter((e3) => e3 === t2));
      }, i.dispatchEvent = function() {
        const e2 = Array.prototype.slice.call(arguments), t2 = e2.shift();
        n[t2] && n[t2].forEach((t3) => t3.apply(null, e2));
      }, e.exports = i;
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(28), {DAGNode: s} = r(16), o = r(1)("ipfs:mfs:utils:with-mfs-root"), a = r(17), c = r(15).multihash, u = r(0), {MFS_ROOT_KEY: h} = r(22);
      e.exports = async (e2, t2) => {
        if (t2 && t2.signal && t2.signal.aborted)
          throw u(new Error("Request aborted"), "ERR_ABORTED", {name: "Aborted"});
        let r2;
        await e2.repo.datastore.open();
        try {
          const t3 = await e2.repo.datastore.get(h);
          r2 = new n(t3);
        } catch (f) {
          if (f.code !== "ERR_NOT_FOUND")
            throw f;
          o("Creating new MFS root");
          const n2 = new s(new i({type: "directory"}).marshal());
          if (r2 = await e2.ipld.put(n2, a.DAG_PB, {cidVersion: 0, hashAlg: c.names["sha2-256"]}), t2 && t2.signal && t2.signal.aborted)
            throw u(new Error("Request aborted"), "ERR_ABORTED", {name: "Aborted"});
          await e2.repo.datastore.put(h, r2.bytes);
        }
        return o("Loaded MFS root /ipfs/" + r2), r2;
      };
    }, function(e, t, r) {
      "use strict";
      const {DAGNode: n} = r(16), i = r(169), s = r(168), o = r(1)("ipfs:mfs:core:utils:hamt-utils"), a = r(28), c = r(17), u = r(15).multihash, h = r(40), f = async (e2, t2, r2, n2) => {
        const o2 = new i({hashFn: s.hashFn, hash: r2 ? r2._options.hash : void 0}, r2, n2);
        return r2 && r2._putObjectAt(n2, o2), await d(e2, o2, t2), o2;
      }, d = async (e2, t2, r2) => {
        await Promise.all(e2.map((e3) => {
          if (e3.Name.length === 2) {
            const r3 = parseInt(e3.Name, 16);
            return t2._putObjectAt(r3, new i({hashFn: s.hashFn}, t2, r3)), Promise.resolve();
          }
          return (r2 || t2).put(e3.Name.substring(2), {size: e3.Tsize, cid: e3.Hash});
        }));
      }, l = (e2) => e2.toString("16").toUpperCase().padStart(2, "0").substring(0, 2);
      e.exports = {generatePath: async (e2, t2, r2) => {
        const n2 = await f(r2.Links, null, null, null), i2 = await n2._findNewBucketAndPos(t2), s2 = [{bucket: i2.bucket, prefix: l(i2.pos)}];
        let a2 = i2.bucket;
        for (; a2 !== n2; )
          s2.push({bucket: a2, prefix: l(a2._posAtParent)}), a2 = a2._parent;
        s2.reverse(), s2[0].node = r2;
        for (let c2 = 0; c2 < s2.length; c2++) {
          const r3 = s2[c2], i3 = r3.node.Links.filter((e3) => e3.Name.substring(0, 2) === r3.prefix).pop();
          if (!i3) {
            o(`Link ${r3.prefix}${t2} will be added`);
            continue;
          }
          if (i3.Name === `${r3.prefix}${t2}`) {
            o(`Link ${r3.prefix}${t2} will be replaced`);
            continue;
          }
          o("Found subshard " + r3.prefix);
          const a3 = await e2.ipld.get(i3.Hash);
          if (!s2[c2 + 1]) {
            o("Loaded new subshard " + r3.prefix), await f(a3.Links, n2, r3.bucket, parseInt(r3.prefix, 16));
            const e3 = await n2._findNewBucketAndPos(t2);
            s2.push({bucket: e3.bucket, prefix: l(e3.pos), node: a3});
            continue;
          }
          const u2 = s2[c2 + 1];
          await d(a3.Links, u2.bucket, n2), u2.node = a3;
        }
        return await n2.put(t2, true), s2.reverse(), {rootBucket: n2, path: s2};
      }, updateHamtDirectory: async (e2, t2, r2, i2) => {
        const o2 = Uint8Array.from(r2._children.bitField().reverse()), h2 = a.unmarshal(i2.parent.Data), f2 = new a({type: "hamt-sharded-directory", data: o2, fanout: r2.tableSize(), hashType: s.hashFn.code, mode: h2.mode, mtime: h2.mtime}), d2 = u.names[i2.hashAlg], l2 = new n(f2.marshal(), t2);
        return {node: l2, cid: await e2.ipld.put(l2, c.DAG_PB, {cidVersion: i2.cidVersion, hashAlg: d2, onlyHash: !i2.flush}), size: l2.size};
      }, recreateHamtLevel: f, addLinksToHamtBucket: d, toPrefix: l, createShard: async (e2, t2, r2) => {
        const n2 = new s({root: true, dir: true, parent: null, parentKey: null, path: "", dirty: true, flat: false, mtime: r2.mtime, mode: r2.mode}, {...r2, codec: "dag-pb"});
        for (let i2 = 0; i2 < t2.length; i2++)
          await n2._bucket.put(t2[i2].name, {size: t2[i2].size, cid: t2[i2].cid});
        return h(n2.flush("", e2.block, null));
      }};
    }, function(e, t, r) {
      "use strict";
      const n = r(2);
      e.exports = ({repo: e2}) => n(async function(t2) {
        const r2 = await e2.stat(t2);
        return {numObjects: r2.numObjects, repoSize: r2.repoSize, repoPath: r2.repoPath, version: r2.version.toString(), storageMax: r2.storageMax};
      });
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2, r2) {
        if (!e2)
          return r2;
        var n, i;
        Array.isArray(t2) && (n = t2.slice(0));
        typeof t2 == "string" && (n = t2.split("."));
        typeof t2 == "symbol" && (n = [t2]);
        if (!Array.isArray(n))
          throw new Error("props arg must be an array, a string or a symbol");
        for (; n.length; ) {
          if (i = n.shift(), !e2)
            return r2;
          if ((e2 = e2[i]) === void 0)
            return r2;
        }
        return e2;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = async (e2) => {
        let t2 = 0;
        for await (const r2 of e2)
          t2++;
        return t2;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(30), {Key: i} = r(9), s = r(15).multihash, o = new i("/local/pins"), a = s.fromB58String("QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n");
      e.exports = {PIN_DS_KEY: o, DEFAULT_FANOUT: 256, MAX_ITEMS: 8192, EMPTY_KEY: a, PinTypes: {direct: "direct", recursive: "recursive"}, cidToKey: function(e2) {
        return new i("/" + n.encoding("base32upper").encode(e2.multihash));
      }};
    }, function(e, t, r) {
      "use strict";
      const {Key: n} = r(9), i = r(4), s = r(30), o = r(0), a = r(5);
      t.cidToKey = (e2) => {
        if (!i.isCID(e2))
          throw o(new Error("Not a valid cid"), "ERR_INVALID_CID");
        return new n("/" + a(s.encode("base32", e2.multihash)).slice(1).toUpperCase(), false);
      }, t.keyToCid = (e2) => new i(1, "raw", s.decode("b" + e2.toString().slice(1).toLowerCase()));
    }, function(e, t, r) {
      "use strict";
      const n = r(758);
      e.exports = class {
        constructor(e2) {
          this.hwm = e2 || 16, this.head = new n(this.hwm), this.tail = this.head;
        }
        push(e2) {
          if (!this.head.push(e2)) {
            const t2 = this.head;
            this.head = t2.next = new n(2 * this.head.buffer.length), this.head.push(e2);
          }
        }
        shift() {
          const e2 = this.tail.shift();
          if (e2 === void 0 && this.tail.next) {
            const e3 = this.tail.next;
            return this.tail.next = null, this.tail = e3, this.tail.shift();
          }
          return e2;
        }
        isEmpty() {
          return this.head.isEmpty();
        }
      };
    }, function(e, t, r) {
      "use strict";
      t.AbstractLevelDOWN = r(764), t.AbstractIterator = r(302), t.AbstractChainedBatch = r(303);
    }, function(e, t, r) {
      "use strict";
      var n = r(183);
      function i(e2) {
        if (typeof e2 != "object" || e2 === null)
          throw new TypeError("First argument must be an abstract-leveldown compliant store");
        this.db = e2, this._ended = false, this._nexting = false;
      }
      i.prototype.next = function(e2) {
        var t2 = this;
        if (typeof e2 != "function")
          throw new Error("next() requires a callback argument");
        return t2._ended ? (n(e2, new Error("cannot call next() after end()")), t2) : t2._nexting ? (n(e2, new Error("cannot call next() before previous next() has completed")), t2) : (t2._nexting = true, t2._next(function() {
          t2._nexting = false, e2.apply(null, arguments);
        }), t2);
      }, i.prototype._next = function(e2) {
        n(e2);
      }, i.prototype.seek = function(e2) {
        if (this._ended)
          throw new Error("cannot call seek() after end()");
        if (this._nexting)
          throw new Error("cannot call seek() before next() has completed");
        e2 = this.db._serializeKey(e2), this._seek(e2);
      }, i.prototype._seek = function(e2) {
      }, i.prototype.end = function(e2) {
        if (typeof e2 != "function")
          throw new Error("end() requires a callback argument");
        if (this._ended)
          return n(e2, new Error("end() already called on iterator"));
        this._ended = true, this._end(e2);
      }, i.prototype._end = function(e2) {
        n(e2);
      }, i.prototype._nextTick = n, e.exports = i;
    }, function(e, t, r) {
      "use strict";
      var n = r(183);
      function i(e2) {
        if (typeof e2 != "object" || e2 === null)
          throw new TypeError("First argument must be an abstract-leveldown compliant store");
        this.db = e2, this._operations = [], this._written = false;
      }
      i.prototype._checkWritten = function() {
        if (this._written)
          throw new Error("write() already called on this batch");
      }, i.prototype.put = function(e2, t2) {
        this._checkWritten();
        var r2 = this.db._checkKey(e2) || this.db._checkValue(t2);
        if (r2)
          throw r2;
        return e2 = this.db._serializeKey(e2), t2 = this.db._serializeValue(t2), this._put(e2, t2), this;
      }, i.prototype._put = function(e2, t2) {
        this._operations.push({type: "put", key: e2, value: t2});
      }, i.prototype.del = function(e2) {
        this._checkWritten();
        var t2 = this.db._checkKey(e2);
        if (t2)
          throw t2;
        return e2 = this.db._serializeKey(e2), this._del(e2), this;
      }, i.prototype._del = function(e2) {
        this._operations.push({type: "del", key: e2});
      }, i.prototype.clear = function() {
        return this._checkWritten(), this._clear(), this;
      }, i.prototype._clear = function() {
        this._operations = [];
      }, i.prototype.write = function(e2, t2) {
        if (this._checkWritten(), typeof e2 == "function" && (t2 = e2), typeof t2 != "function")
          throw new Error("write() requires a callback argument");
        typeof e2 == "object" && e2 !== null || (e2 = {}), this._written = true, this._write(e2, t2);
      }, i.prototype._write = function(e2, t2) {
        this.db._batch(this._operations, e2, t2);
      }, i.prototype._nextTick = n, e.exports = i;
    }, function(e, t, r) {
      "use strict";
      (t = e.exports = r(305)).Stream = t, t.Readable = t, t.Writable = r(309), t.Duplex = r(73), t.Transform = r(310), t.PassThrough = r(778), t.finished = r(185), t.pipeline = r(779);
    }, function(e, t, r) {
      "use strict";
      (function(t2, n) {
        var i;
        e.exports = I, I.ReadableState = A;
        r(14).EventEmitter;
        var s = function(e2, t3) {
          return e2.listeners(t3).length;
        }, o = r(306), a = r(3).Buffer, c = t2.Uint8Array || function() {
        };
        var u, h = r(773);
        u = h && h.debuglog ? h.debuglog("stream") : function() {
        };
        var f, d, l, p = r(774), y = r(307), g = r(308).getHighWaterMark, b = r(72).codes, m = b.ERR_INVALID_ARG_TYPE, v = b.ERR_STREAM_PUSH_AFTER_EOF, w = b.ERR_METHOD_NOT_IMPLEMENTED, _ = b.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
        r(18)(I, o);
        var E = y.errorOrDestroy, S = ["error", "close", "destroy", "pause", "resume"];
        function A(e2, t3, n2) {
          i = i || r(73), e2 = e2 || {}, typeof n2 != "boolean" && (n2 = t3 instanceof i), this.objectMode = !!e2.objectMode, n2 && (this.objectMode = this.objectMode || !!e2.readableObjectMode), this.highWaterMark = g(this, e2, "readableHighWaterMark", n2), this.buffer = new p(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = e2.emitClose !== false, this.autoDestroy = !!e2.autoDestroy, this.destroyed = false, this.defaultEncoding = e2.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, e2.encoding && (f || (f = r(110).StringDecoder), this.decoder = new f(e2.encoding), this.encoding = e2.encoding);
        }
        function I(e2) {
          if (i = i || r(73), !(this instanceof I))
            return new I(e2);
          var t3 = this instanceof i;
          this._readableState = new A(e2, this, t3), this.readable = true, e2 && (typeof e2.read == "function" && (this._read = e2.read), typeof e2.destroy == "function" && (this._destroy = e2.destroy)), o.call(this);
        }
        function k(e2, t3, r2, n2, i2) {
          u("readableAddChunk", t3);
          var s2, o2 = e2._readableState;
          if (t3 === null)
            o2.reading = false, function(e3, t4) {
              if (u("onEofChunk"), t4.ended)
                return;
              if (t4.decoder) {
                var r3 = t4.decoder.end();
                r3 && r3.length && (t4.buffer.push(r3), t4.length += t4.objectMode ? 1 : r3.length);
              }
              t4.ended = true, t4.sync ? C(e3) : (t4.needReadable = false, t4.emittedReadable || (t4.emittedReadable = true, M(e3)));
            }(e2, o2);
          else if (i2 || (s2 = function(e3, t4) {
            var r3;
            n3 = t4, a.isBuffer(n3) || n3 instanceof c || typeof t4 == "string" || t4 === void 0 || e3.objectMode || (r3 = new m("chunk", ["string", "Buffer", "Uint8Array"], t4));
            var n3;
            return r3;
          }(o2, t3)), s2)
            E(e2, s2);
          else if (o2.objectMode || t3 && t3.length > 0)
            if (typeof t3 == "string" || o2.objectMode || Object.getPrototypeOf(t3) === a.prototype || (t3 = function(e3) {
              return a.from(e3);
            }(t3)), n2)
              o2.endEmitted ? E(e2, new _()) : R(e2, o2, t3, true);
            else if (o2.ended)
              E(e2, new v());
            else {
              if (o2.destroyed)
                return false;
              o2.reading = false, o2.decoder && !r2 ? (t3 = o2.decoder.write(t3), o2.objectMode || t3.length !== 0 ? R(e2, o2, t3, false) : x(e2, o2)) : R(e2, o2, t3, false);
            }
          else
            n2 || (o2.reading = false, x(e2, o2));
          return !o2.ended && (o2.length < o2.highWaterMark || o2.length === 0);
        }
        function R(e2, t3, r2, n2) {
          t3.flowing && t3.length === 0 && !t3.sync ? (t3.awaitDrain = 0, e2.emit("data", r2)) : (t3.length += t3.objectMode ? 1 : r2.length, n2 ? t3.buffer.unshift(r2) : t3.buffer.push(r2), t3.needReadable && C(e2)), x(e2, t3);
        }
        Object.defineProperty(I.prototype, "destroyed", {enumerable: false, get: function() {
          return this._readableState !== void 0 && this._readableState.destroyed;
        }, set: function(e2) {
          this._readableState && (this._readableState.destroyed = e2);
        }}), I.prototype.destroy = y.destroy, I.prototype._undestroy = y.undestroy, I.prototype._destroy = function(e2, t3) {
          t3(e2);
        }, I.prototype.push = function(e2, t3) {
          var r2, n2 = this._readableState;
          return n2.objectMode ? r2 = true : typeof e2 == "string" && ((t3 = t3 || n2.defaultEncoding) !== n2.encoding && (e2 = a.from(e2, t3), t3 = ""), r2 = true), k(this, e2, t3, false, r2);
        }, I.prototype.unshift = function(e2) {
          return k(this, e2, null, true, false);
        }, I.prototype.isPaused = function() {
          return this._readableState.flowing === false;
        }, I.prototype.setEncoding = function(e2) {
          f || (f = r(110).StringDecoder);
          var t3 = new f(e2);
          this._readableState.decoder = t3, this._readableState.encoding = this._readableState.decoder.encoding;
          for (var n2 = this._readableState.buffer.head, i2 = ""; n2 !== null; )
            i2 += t3.write(n2.data), n2 = n2.next;
          return this._readableState.buffer.clear(), i2 !== "" && this._readableState.buffer.push(i2), this._readableState.length = i2.length, this;
        };
        function T(e2, t3) {
          return e2 <= 0 || t3.length === 0 && t3.ended ? 0 : t3.objectMode ? 1 : e2 != e2 ? t3.flowing && t3.length ? t3.buffer.head.data.length : t3.length : (e2 > t3.highWaterMark && (t3.highWaterMark = function(e3) {
            return e3 >= 1073741824 ? e3 = 1073741824 : (e3--, e3 |= e3 >>> 1, e3 |= e3 >>> 2, e3 |= e3 >>> 4, e3 |= e3 >>> 8, e3 |= e3 >>> 16, e3++), e3;
          }(e2)), e2 <= t3.length ? e2 : t3.ended ? t3.length : (t3.needReadable = true, 0));
        }
        function C(e2) {
          var t3 = e2._readableState;
          u("emitReadable", t3.needReadable, t3.emittedReadable), t3.needReadable = false, t3.emittedReadable || (u("emitReadable", t3.flowing), t3.emittedReadable = true, n.nextTick(M, e2));
        }
        function M(e2) {
          var t3 = e2._readableState;
          u("emitReadable_", t3.destroyed, t3.length, t3.ended), t3.destroyed || !t3.length && !t3.ended || (e2.emit("readable"), t3.emittedReadable = false), t3.needReadable = !t3.flowing && !t3.ended && t3.length <= t3.highWaterMark, D(e2);
        }
        function x(e2, t3) {
          t3.readingMore || (t3.readingMore = true, n.nextTick(N, e2, t3));
        }
        function N(e2, t3) {
          for (; !t3.reading && !t3.ended && (t3.length < t3.highWaterMark || t3.flowing && t3.length === 0); ) {
            var r2 = t3.length;
            if (u("maybeReadMore read 0"), e2.read(0), r2 === t3.length)
              break;
          }
          t3.readingMore = false;
        }
        function P(e2) {
          var t3 = e2._readableState;
          t3.readableListening = e2.listenerCount("readable") > 0, t3.resumeScheduled && !t3.paused ? t3.flowing = true : e2.listenerCount("data") > 0 && e2.resume();
        }
        function B(e2) {
          u("readable nexttick read 0"), e2.read(0);
        }
        function O(e2, t3) {
          u("resume", t3.reading), t3.reading || e2.read(0), t3.resumeScheduled = false, e2.emit("resume"), D(e2), t3.flowing && !t3.reading && e2.read(0);
        }
        function D(e2) {
          var t3 = e2._readableState;
          for (u("flow", t3.flowing); t3.flowing && e2.read() !== null; )
            ;
        }
        function L(e2, t3) {
          return t3.length === 0 ? null : (t3.objectMode ? r2 = t3.buffer.shift() : !e2 || e2 >= t3.length ? (r2 = t3.decoder ? t3.buffer.join("") : t3.buffer.length === 1 ? t3.buffer.first() : t3.buffer.concat(t3.length), t3.buffer.clear()) : r2 = t3.buffer.consume(e2, t3.decoder), r2);
          var r2;
        }
        function U(e2) {
          var t3 = e2._readableState;
          u("endReadable", t3.endEmitted), t3.endEmitted || (t3.ended = true, n.nextTick(j, t3, e2));
        }
        function j(e2, t3) {
          if (u("endReadableNT", e2.endEmitted, e2.length), !e2.endEmitted && e2.length === 0 && (e2.endEmitted = true, t3.readable = false, t3.emit("end"), e2.autoDestroy)) {
            var r2 = t3._writableState;
            (!r2 || r2.autoDestroy && r2.finished) && t3.destroy();
          }
        }
        function F(e2, t3) {
          for (var r2 = 0, n2 = e2.length; r2 < n2; r2++)
            if (e2[r2] === t3)
              return r2;
          return -1;
        }
        I.prototype.read = function(e2) {
          u("read", e2), e2 = parseInt(e2, 10);
          var t3 = this._readableState, r2 = e2;
          if (e2 !== 0 && (t3.emittedReadable = false), e2 === 0 && t3.needReadable && ((t3.highWaterMark !== 0 ? t3.length >= t3.highWaterMark : t3.length > 0) || t3.ended))
            return u("read: emitReadable", t3.length, t3.ended), t3.length === 0 && t3.ended ? U(this) : C(this), null;
          if ((e2 = T(e2, t3)) === 0 && t3.ended)
            return t3.length === 0 && U(this), null;
          var n2, i2 = t3.needReadable;
          return u("need readable", i2), (t3.length === 0 || t3.length - e2 < t3.highWaterMark) && u("length less than watermark", i2 = true), t3.ended || t3.reading ? u("reading or ended", i2 = false) : i2 && (u("do read"), t3.reading = true, t3.sync = true, t3.length === 0 && (t3.needReadable = true), this._read(t3.highWaterMark), t3.sync = false, t3.reading || (e2 = T(r2, t3))), (n2 = e2 > 0 ? L(e2, t3) : null) === null ? (t3.needReadable = t3.length <= t3.highWaterMark, e2 = 0) : (t3.length -= e2, t3.awaitDrain = 0), t3.length === 0 && (t3.ended || (t3.needReadable = true), r2 !== e2 && t3.ended && U(this)), n2 !== null && this.emit("data", n2), n2;
        }, I.prototype._read = function(e2) {
          E(this, new w("_read()"));
        }, I.prototype.pipe = function(e2, t3) {
          var r2 = this, i2 = this._readableState;
          switch (i2.pipesCount) {
            case 0:
              i2.pipes = e2;
              break;
            case 1:
              i2.pipes = [i2.pipes, e2];
              break;
            default:
              i2.pipes.push(e2);
          }
          i2.pipesCount += 1, u("pipe count=%d opts=%j", i2.pipesCount, t3);
          var o2 = (!t3 || t3.end !== false) && e2 !== n.stdout && e2 !== n.stderr ? c2 : g2;
          function a2(t4, n2) {
            u("onunpipe"), t4 === r2 && n2 && n2.hasUnpiped === false && (n2.hasUnpiped = true, u("cleanup"), e2.removeListener("close", p2), e2.removeListener("finish", y2), e2.removeListener("drain", h2), e2.removeListener("error", l2), e2.removeListener("unpipe", a2), r2.removeListener("end", c2), r2.removeListener("end", g2), r2.removeListener("data", d2), f2 = true, !i2.awaitDrain || e2._writableState && !e2._writableState.needDrain || h2());
          }
          function c2() {
            u("onend"), e2.end();
          }
          i2.endEmitted ? n.nextTick(o2) : r2.once("end", o2), e2.on("unpipe", a2);
          var h2 = function(e3) {
            return function() {
              var t4 = e3._readableState;
              u("pipeOnDrain", t4.awaitDrain), t4.awaitDrain && t4.awaitDrain--, t4.awaitDrain === 0 && s(e3, "data") && (t4.flowing = true, D(e3));
            };
          }(r2);
          e2.on("drain", h2);
          var f2 = false;
          function d2(t4) {
            u("ondata");
            var n2 = e2.write(t4);
            u("dest.write", n2), n2 === false && ((i2.pipesCount === 1 && i2.pipes === e2 || i2.pipesCount > 1 && F(i2.pipes, e2) !== -1) && !f2 && (u("false write response, pause", i2.awaitDrain), i2.awaitDrain++), r2.pause());
          }
          function l2(t4) {
            u("onerror", t4), g2(), e2.removeListener("error", l2), s(e2, "error") === 0 && E(e2, t4);
          }
          function p2() {
            e2.removeListener("finish", y2), g2();
          }
          function y2() {
            u("onfinish"), e2.removeListener("close", p2), g2();
          }
          function g2() {
            u("unpipe"), r2.unpipe(e2);
          }
          return r2.on("data", d2), function(e3, t4, r3) {
            if (typeof e3.prependListener == "function")
              return e3.prependListener(t4, r3);
            e3._events && e3._events[t4] ? Array.isArray(e3._events[t4]) ? e3._events[t4].unshift(r3) : e3._events[t4] = [r3, e3._events[t4]] : e3.on(t4, r3);
          }(e2, "error", l2), e2.once("close", p2), e2.once("finish", y2), e2.emit("pipe", r2), i2.flowing || (u("pipe resume"), r2.resume()), e2;
        }, I.prototype.unpipe = function(e2) {
          var t3 = this._readableState, r2 = {hasUnpiped: false};
          if (t3.pipesCount === 0)
            return this;
          if (t3.pipesCount === 1)
            return e2 && e2 !== t3.pipes || (e2 || (e2 = t3.pipes), t3.pipes = null, t3.pipesCount = 0, t3.flowing = false, e2 && e2.emit("unpipe", this, r2)), this;
          if (!e2) {
            var n2 = t3.pipes, i2 = t3.pipesCount;
            t3.pipes = null, t3.pipesCount = 0, t3.flowing = false;
            for (var s2 = 0; s2 < i2; s2++)
              n2[s2].emit("unpipe", this, {hasUnpiped: false});
            return this;
          }
          var o2 = F(t3.pipes, e2);
          return o2 === -1 || (t3.pipes.splice(o2, 1), t3.pipesCount -= 1, t3.pipesCount === 1 && (t3.pipes = t3.pipes[0]), e2.emit("unpipe", this, r2)), this;
        }, I.prototype.on = function(e2, t3) {
          var r2 = o.prototype.on.call(this, e2, t3), i2 = this._readableState;
          return e2 === "data" ? (i2.readableListening = this.listenerCount("readable") > 0, i2.flowing !== false && this.resume()) : e2 === "readable" && (i2.endEmitted || i2.readableListening || (i2.readableListening = i2.needReadable = true, i2.flowing = false, i2.emittedReadable = false, u("on readable", i2.length, i2.reading), i2.length ? C(this) : i2.reading || n.nextTick(B, this))), r2;
        }, I.prototype.addListener = I.prototype.on, I.prototype.removeListener = function(e2, t3) {
          var r2 = o.prototype.removeListener.call(this, e2, t3);
          return e2 === "readable" && n.nextTick(P, this), r2;
        }, I.prototype.removeAllListeners = function(e2) {
          var t3 = o.prototype.removeAllListeners.apply(this, arguments);
          return e2 !== "readable" && e2 !== void 0 || n.nextTick(P, this), t3;
        }, I.prototype.resume = function() {
          var e2 = this._readableState;
          return e2.flowing || (u("resume"), e2.flowing = !e2.readableListening, function(e3, t3) {
            t3.resumeScheduled || (t3.resumeScheduled = true, n.nextTick(O, e3, t3));
          }(this, e2)), e2.paused = false, this;
        }, I.prototype.pause = function() {
          return u("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && (u("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
        }, I.prototype.wrap = function(e2) {
          var t3 = this, r2 = this._readableState, n2 = false;
          for (var i2 in e2.on("end", function() {
            if (u("wrapped end"), r2.decoder && !r2.ended) {
              var e3 = r2.decoder.end();
              e3 && e3.length && t3.push(e3);
            }
            t3.push(null);
          }), e2.on("data", function(i3) {
            (u("wrapped data"), r2.decoder && (i3 = r2.decoder.write(i3)), r2.objectMode && i3 == null) || (r2.objectMode || i3 && i3.length) && (t3.push(i3) || (n2 = true, e2.pause()));
          }), e2)
            this[i2] === void 0 && typeof e2[i2] == "function" && (this[i2] = function(t4) {
              return function() {
                return e2[t4].apply(e2, arguments);
              };
            }(i2));
          for (var s2 = 0; s2 < S.length; s2++)
            e2.on(S[s2], this.emit.bind(this, S[s2]));
          return this._read = function(t4) {
            u("wrapped _read", t4), n2 && (n2 = false, e2.resume());
          }, this;
        }, typeof Symbol == "function" && (I.prototype[Symbol.asyncIterator] = function() {
          return d === void 0 && (d = r(776)), d(this);
        }), Object.defineProperty(I.prototype, "readableHighWaterMark", {enumerable: false, get: function() {
          return this._readableState.highWaterMark;
        }}), Object.defineProperty(I.prototype, "readableBuffer", {enumerable: false, get: function() {
          return this._readableState && this._readableState.buffer;
        }}), Object.defineProperty(I.prototype, "readableFlowing", {enumerable: false, get: function() {
          return this._readableState.flowing;
        }, set: function(e2) {
          this._readableState && (this._readableState.flowing = e2);
        }}), I._fromList = L, Object.defineProperty(I.prototype, "readableLength", {enumerable: false, get: function() {
          return this._readableState.length;
        }}), typeof Symbol == "function" && (I.from = function(e2, t3) {
          return l === void 0 && (l = r(777)), l(I, e2, t3);
        });
      }).call(this, r(12), r(10));
    }, function(e, t, r) {
      "use strict";
      e.exports = r(14).EventEmitter;
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        function r2(e2, t3) {
          i(e2, t3), n(e2);
        }
        function n(e2) {
          e2._writableState && !e2._writableState.emitClose || e2._readableState && !e2._readableState.emitClose || e2.emit("close");
        }
        function i(e2, t3) {
          e2.emit("error", t3);
        }
        e.exports = {destroy: function(e2, s) {
          var o = this, a = this._readableState && this._readableState.destroyed, c = this._writableState && this._writableState.destroyed;
          return a || c ? (s ? s(e2) : e2 && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, t2.nextTick(i, this, e2)) : t2.nextTick(i, this, e2)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(e2 || null, function(e3) {
            !s && e3 ? o._writableState ? o._writableState.errorEmitted ? t2.nextTick(n, o) : (o._writableState.errorEmitted = true, t2.nextTick(r2, o, e3)) : t2.nextTick(r2, o, e3) : s ? (t2.nextTick(n, o), s(e3)) : t2.nextTick(n, o);
          }), this);
        }, undestroy: function() {
          this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
        }, errorOrDestroy: function(e2, t3) {
          var r3 = e2._readableState, n2 = e2._writableState;
          r3 && r3.autoDestroy || n2 && n2.autoDestroy ? e2.destroy(t3) : e2.emit("error", t3);
        }};
      }).call(this, r(10));
    }, function(e, t, r) {
      "use strict";
      var n = r(72).codes.ERR_INVALID_OPT_VALUE;
      e.exports = {getHighWaterMark: function(e2, t2, r2, i) {
        var s = function(e3, t3, r3) {
          return e3.highWaterMark != null ? e3.highWaterMark : t3 ? e3[r3] : null;
        }(t2, i, r2);
        if (s != null) {
          if (!isFinite(s) || Math.floor(s) !== s || s < 0)
            throw new n(i ? r2 : "highWaterMark", s);
          return Math.floor(s);
        }
        return e2.objectMode ? 16 : 16384;
      }};
    }, function(e, t, r) {
      "use strict";
      (function(t2, n) {
        function i(e2) {
          var t3 = this;
          this.next = null, this.entry = null, this.finish = function() {
            !function(e3, t4, r2) {
              var n2 = e3.entry;
              e3.entry = null;
              for (; n2; ) {
                var i2 = n2.callback;
                t4.pendingcb--, i2(r2), n2 = n2.next;
              }
              t4.corkedRequestsFree.next = e3;
            }(t3, e2);
          };
        }
        var s;
        e.exports = I, I.WritableState = A;
        var o = {deprecate: r(269)}, a = r(306), c = r(3).Buffer, u = t2.Uint8Array || function() {
        };
        var h, f = r(307), d = r(308).getHighWaterMark, l = r(72).codes, p = l.ERR_INVALID_ARG_TYPE, y = l.ERR_METHOD_NOT_IMPLEMENTED, g = l.ERR_MULTIPLE_CALLBACK, b = l.ERR_STREAM_CANNOT_PIPE, m = l.ERR_STREAM_DESTROYED, v = l.ERR_STREAM_NULL_VALUES, w = l.ERR_STREAM_WRITE_AFTER_END, _ = l.ERR_UNKNOWN_ENCODING, E = f.errorOrDestroy;
        function S() {
        }
        function A(e2, t3, o2) {
          s = s || r(73), e2 = e2 || {}, typeof o2 != "boolean" && (o2 = t3 instanceof s), this.objectMode = !!e2.objectMode, o2 && (this.objectMode = this.objectMode || !!e2.writableObjectMode), this.highWaterMark = d(this, e2, "writableHighWaterMark", o2), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
          var a2 = e2.decodeStrings === false;
          this.decodeStrings = !a2, this.defaultEncoding = e2.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(e3) {
            !function(e4, t4) {
              var r2 = e4._writableState, i2 = r2.sync, s2 = r2.writecb;
              if (typeof s2 != "function")
                throw new g();
              if (function(e5) {
                e5.writing = false, e5.writecb = null, e5.length -= e5.writelen, e5.writelen = 0;
              }(r2), t4)
                !function(e5, t5, r3, i3, s3) {
                  --t5.pendingcb, r3 ? (n.nextTick(s3, i3), n.nextTick(x, e5, t5), e5._writableState.errorEmitted = true, E(e5, i3)) : (s3(i3), e5._writableState.errorEmitted = true, E(e5, i3), x(e5, t5));
                }(e4, r2, i2, t4, s2);
              else {
                var o3 = C(r2) || e4.destroyed;
                o3 || r2.corked || r2.bufferProcessing || !r2.bufferedRequest || T(e4, r2), i2 ? n.nextTick(R, e4, r2, o3, s2) : R(e4, r2, o3, s2);
              }
            }(t3, e3);
          }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = e2.emitClose !== false, this.autoDestroy = !!e2.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new i(this);
        }
        function I(e2) {
          var t3 = this instanceof (s = s || r(73));
          if (!t3 && !h.call(I, this))
            return new I(e2);
          this._writableState = new A(e2, this, t3), this.writable = true, e2 && (typeof e2.write == "function" && (this._write = e2.write), typeof e2.writev == "function" && (this._writev = e2.writev), typeof e2.destroy == "function" && (this._destroy = e2.destroy), typeof e2.final == "function" && (this._final = e2.final)), a.call(this);
        }
        function k(e2, t3, r2, n2, i2, s2, o2) {
          t3.writelen = n2, t3.writecb = o2, t3.writing = true, t3.sync = true, t3.destroyed ? t3.onwrite(new m("write")) : r2 ? e2._writev(i2, t3.onwrite) : e2._write(i2, s2, t3.onwrite), t3.sync = false;
        }
        function R(e2, t3, r2, n2) {
          r2 || function(e3, t4) {
            t4.length === 0 && t4.needDrain && (t4.needDrain = false, e3.emit("drain"));
          }(e2, t3), t3.pendingcb--, n2(), x(e2, t3);
        }
        function T(e2, t3) {
          t3.bufferProcessing = true;
          var r2 = t3.bufferedRequest;
          if (e2._writev && r2 && r2.next) {
            var n2 = t3.bufferedRequestCount, s2 = new Array(n2), o2 = t3.corkedRequestsFree;
            o2.entry = r2;
            for (var a2 = 0, c2 = true; r2; )
              s2[a2] = r2, r2.isBuf || (c2 = false), r2 = r2.next, a2 += 1;
            s2.allBuffers = c2, k(e2, t3, true, t3.length, s2, "", o2.finish), t3.pendingcb++, t3.lastBufferedRequest = null, o2.next ? (t3.corkedRequestsFree = o2.next, o2.next = null) : t3.corkedRequestsFree = new i(t3), t3.bufferedRequestCount = 0;
          } else {
            for (; r2; ) {
              var u2 = r2.chunk, h2 = r2.encoding, f2 = r2.callback;
              if (k(e2, t3, false, t3.objectMode ? 1 : u2.length, u2, h2, f2), r2 = r2.next, t3.bufferedRequestCount--, t3.writing)
                break;
            }
            r2 === null && (t3.lastBufferedRequest = null);
          }
          t3.bufferedRequest = r2, t3.bufferProcessing = false;
        }
        function C(e2) {
          return e2.ending && e2.length === 0 && e2.bufferedRequest === null && !e2.finished && !e2.writing;
        }
        function M(e2, t3) {
          e2._final(function(r2) {
            t3.pendingcb--, r2 && E(e2, r2), t3.prefinished = true, e2.emit("prefinish"), x(e2, t3);
          });
        }
        function x(e2, t3) {
          var r2 = C(t3);
          if (r2 && (function(e3, t4) {
            t4.prefinished || t4.finalCalled || (typeof e3._final != "function" || t4.destroyed ? (t4.prefinished = true, e3.emit("prefinish")) : (t4.pendingcb++, t4.finalCalled = true, n.nextTick(M, e3, t4)));
          }(e2, t3), t3.pendingcb === 0 && (t3.finished = true, e2.emit("finish"), t3.autoDestroy))) {
            var i2 = e2._readableState;
            (!i2 || i2.autoDestroy && i2.endEmitted) && e2.destroy();
          }
          return r2;
        }
        r(18)(I, a), A.prototype.getBuffer = function() {
          for (var e2 = this.bufferedRequest, t3 = []; e2; )
            t3.push(e2), e2 = e2.next;
          return t3;
        }, function() {
          try {
            Object.defineProperty(A.prototype, "buffer", {get: o.deprecate(function() {
              return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")});
          } catch (e2) {
          }
        }(), typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (h = Function.prototype[Symbol.hasInstance], Object.defineProperty(I, Symbol.hasInstance, {value: function(e2) {
          return !!h.call(this, e2) || this === I && (e2 && e2._writableState instanceof A);
        }})) : h = function(e2) {
          return e2 instanceof this;
        }, I.prototype.pipe = function() {
          E(this, new b());
        }, I.prototype.write = function(e2, t3, r2) {
          var i2, s2 = this._writableState, o2 = false, a2 = !s2.objectMode && (i2 = e2, c.isBuffer(i2) || i2 instanceof u);
          return a2 && !c.isBuffer(e2) && (e2 = function(e3) {
            return c.from(e3);
          }(e2)), typeof t3 == "function" && (r2 = t3, t3 = null), a2 ? t3 = "buffer" : t3 || (t3 = s2.defaultEncoding), typeof r2 != "function" && (r2 = S), s2.ending ? function(e3, t4) {
            var r3 = new w();
            E(e3, r3), n.nextTick(t4, r3);
          }(this, r2) : (a2 || function(e3, t4, r3, i3) {
            var s3;
            return r3 === null ? s3 = new v() : typeof r3 == "string" || t4.objectMode || (s3 = new p("chunk", ["string", "Buffer"], r3)), !s3 || (E(e3, s3), n.nextTick(i3, s3), false);
          }(this, s2, e2, r2)) && (s2.pendingcb++, o2 = function(e3, t4, r3, n2, i3, s3) {
            if (!r3) {
              var o3 = function(e4, t5, r4) {
                e4.objectMode || e4.decodeStrings === false || typeof t5 != "string" || (t5 = c.from(t5, r4));
                return t5;
              }(t4, n2, i3);
              n2 !== o3 && (r3 = true, i3 = "buffer", n2 = o3);
            }
            var a3 = t4.objectMode ? 1 : n2.length;
            t4.length += a3;
            var u2 = t4.length < t4.highWaterMark;
            u2 || (t4.needDrain = true);
            if (t4.writing || t4.corked) {
              var h2 = t4.lastBufferedRequest;
              t4.lastBufferedRequest = {chunk: n2, encoding: i3, isBuf: r3, callback: s3, next: null}, h2 ? h2.next = t4.lastBufferedRequest : t4.bufferedRequest = t4.lastBufferedRequest, t4.bufferedRequestCount += 1;
            } else
              k(e3, t4, false, a3, n2, i3, s3);
            return u2;
          }(this, s2, a2, e2, t3, r2)), o2;
        }, I.prototype.cork = function() {
          this._writableState.corked++;
        }, I.prototype.uncork = function() {
          var e2 = this._writableState;
          e2.corked && (e2.corked--, e2.writing || e2.corked || e2.bufferProcessing || !e2.bufferedRequest || T(this, e2));
        }, I.prototype.setDefaultEncoding = function(e2) {
          if (typeof e2 == "string" && (e2 = e2.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e2 + "").toLowerCase()) > -1))
            throw new _(e2);
          return this._writableState.defaultEncoding = e2, this;
        }, Object.defineProperty(I.prototype, "writableBuffer", {enumerable: false, get: function() {
          return this._writableState && this._writableState.getBuffer();
        }}), Object.defineProperty(I.prototype, "writableHighWaterMark", {enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        }}), I.prototype._write = function(e2, t3, r2) {
          r2(new y("_write()"));
        }, I.prototype._writev = null, I.prototype.end = function(e2, t3, r2) {
          var i2 = this._writableState;
          return typeof e2 == "function" ? (r2 = e2, e2 = null, t3 = null) : typeof t3 == "function" && (r2 = t3, t3 = null), e2 != null && this.write(e2, t3), i2.corked && (i2.corked = 1, this.uncork()), i2.ending || function(e3, t4, r3) {
            t4.ending = true, x(e3, t4), r3 && (t4.finished ? n.nextTick(r3) : e3.once("finish", r3));
            t4.ended = true, e3.writable = false;
          }(this, i2, r2), this;
        }, Object.defineProperty(I.prototype, "writableLength", {enumerable: false, get: function() {
          return this._writableState.length;
        }}), Object.defineProperty(I.prototype, "destroyed", {enumerable: false, get: function() {
          return this._writableState !== void 0 && this._writableState.destroyed;
        }, set: function(e2) {
          this._writableState && (this._writableState.destroyed = e2);
        }}), I.prototype.destroy = f.destroy, I.prototype._undestroy = f.undestroy, I.prototype._destroy = function(e2, t3) {
          t3(e2);
        };
      }).call(this, r(12), r(10));
    }, function(e, t, r) {
      "use strict";
      e.exports = h;
      var n = r(72).codes, i = n.ERR_METHOD_NOT_IMPLEMENTED, s = n.ERR_MULTIPLE_CALLBACK, o = n.ERR_TRANSFORM_ALREADY_TRANSFORMING, a = n.ERR_TRANSFORM_WITH_LENGTH_0, c = r(73);
      function u(e2, t2) {
        var r2 = this._transformState;
        r2.transforming = false;
        var n2 = r2.writecb;
        if (n2 === null)
          return this.emit("error", new s());
        r2.writechunk = null, r2.writecb = null, t2 != null && this.push(t2), n2(e2);
        var i2 = this._readableState;
        i2.reading = false, (i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
      }
      function h(e2) {
        if (!(this instanceof h))
          return new h(e2);
        c.call(this, e2), this._transformState = {afterTransform: u.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null}, this._readableState.needReadable = true, this._readableState.sync = false, e2 && (typeof e2.transform == "function" && (this._transform = e2.transform), typeof e2.flush == "function" && (this._flush = e2.flush)), this.on("prefinish", f);
      }
      function f() {
        var e2 = this;
        typeof this._flush != "function" || this._readableState.destroyed ? d(this, null, null) : this._flush(function(t2, r2) {
          d(e2, t2, r2);
        });
      }
      function d(e2, t2, r2) {
        if (t2)
          return e2.emit("error", t2);
        if (r2 != null && e2.push(r2), e2._writableState.length)
          throw new a();
        if (e2._transformState.transforming)
          throw new o();
        return e2.push(null);
      }
      r(18)(h, c), h.prototype.push = function(e2, t2) {
        return this._transformState.needTransform = false, c.prototype.push.call(this, e2, t2);
      }, h.prototype._transform = function(e2, t2, r2) {
        r2(new i("_transform()"));
      }, h.prototype._write = function(e2, t2, r2) {
        var n2 = this._transformState;
        if (n2.writecb = r2, n2.writechunk = e2, n2.writeencoding = t2, !n2.transforming) {
          var i2 = this._readableState;
          (n2.needTransform || i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
        }
      }, h.prototype._read = function(e2) {
        var t2 = this._transformState;
        t2.writechunk === null || t2.transforming ? t2.needTransform = true : (t2.transforming = true, this._transform(t2.writechunk, t2.writeencoding, t2.afterTransform));
      }, h.prototype._destroy = function(e2, t2) {
        c.prototype._destroy.call(this, e2, function(e3) {
          t2(e3);
        });
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function() {
        var e2, t2 = new Promise(function(t3, r2) {
          e2 = function(e3, n) {
            e3 ? r2(e3) : t3(n);
          };
        });
        return e2.promise = t2, e2;
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(188);
      function i(e2) {
        if (typeof e2 != "object" || e2 === null)
          throw new TypeError("First argument must be an abstract-leveldown compliant store");
        this.db = e2, this._ended = false, this._nexting = false;
      }
      i.prototype.next = function(e2) {
        var t2 = this;
        if (typeof e2 != "function")
          throw new Error("next() requires a callback argument");
        return t2._ended ? (n(e2, new Error("cannot call next() after end()")), t2) : t2._nexting ? (n(e2, new Error("cannot call next() before previous next() has completed")), t2) : (t2._nexting = true, t2._next(function() {
          t2._nexting = false, e2.apply(null, arguments);
        }), t2);
      }, i.prototype._next = function(e2) {
        n(e2);
      }, i.prototype.seek = function(e2) {
        if (this._ended)
          throw new Error("cannot call seek() after end()");
        if (this._nexting)
          throw new Error("cannot call seek() before next() has completed");
        e2 = this.db._serializeKey(e2), this._seek(e2);
      }, i.prototype._seek = function(e2) {
      }, i.prototype.end = function(e2) {
        if (typeof e2 != "function")
          throw new Error("end() requires a callback argument");
        if (this._ended)
          return n(e2, new Error("end() already called on iterator"));
        this._ended = true, this._end(e2);
      }, i.prototype._end = function(e2) {
        n(e2);
      }, i.prototype._nextTick = n, e.exports = i;
    }, function(e, t, r) {
      "use strict";
      var n = r(188);
      function i(e2) {
        if (typeof e2 != "object" || e2 === null)
          throw new TypeError("First argument must be an abstract-leveldown compliant store");
        this.db = e2, this._operations = [], this._written = false;
      }
      i.prototype._checkWritten = function() {
        if (this._written)
          throw new Error("write() already called on this batch");
      }, i.prototype.put = function(e2, t2) {
        this._checkWritten();
        var r2 = this.db._checkKey(e2) || this.db._checkValue(t2);
        if (r2)
          throw r2;
        return e2 = this.db._serializeKey(e2), t2 = this.db._serializeValue(t2), this._put(e2, t2), this;
      }, i.prototype._put = function(e2, t2) {
        this._operations.push({type: "put", key: e2, value: t2});
      }, i.prototype.del = function(e2) {
        this._checkWritten();
        var t2 = this.db._checkKey(e2);
        if (t2)
          throw t2;
        return e2 = this.db._serializeKey(e2), this._del(e2), this;
      }, i.prototype._del = function(e2) {
        this._operations.push({type: "del", key: e2});
      }, i.prototype.clear = function() {
        return this._checkWritten(), this._clear(), this;
      }, i.prototype._clear = function() {
        this._operations = [];
      }, i.prototype.write = function(e2, t2) {
        if (this._checkWritten(), typeof e2 == "function" && (t2 = e2), typeof t2 != "function")
          throw new Error("write() requires a callback argument");
        typeof e2 == "object" && e2 !== null || (e2 = {}), this._written = true, this._write(e2, t2);
      }, i.prototype._write = function(e2, t2) {
        this.db._batch(this._operations, e2, t2);
      }, i.prototype._nextTick = n, e.exports = i;
    }, function(e, t, r) {
      "use strict";
      t.AbstractLevelDOWN = r(794), t.AbstractIterator = r(315), t.AbstractChainedBatch = r(316);
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        function r2(e2) {
          if (typeof e2 != "object" || e2 === null)
            throw new TypeError("First argument must be an abstract-leveldown compliant store");
          this.db = e2, this._ended = false, this._nexting = false;
        }
        r2.prototype.next = function(e2) {
          var r3 = this;
          if (typeof e2 != "function")
            throw new Error("next() requires a callback argument");
          return r3._ended ? (t2.nextTick(e2, new Error("cannot call next() after end()")), r3) : r3._nexting ? (t2.nextTick(e2, new Error("cannot call next() before previous next() has completed")), r3) : (r3._nexting = true, r3._next(function() {
            r3._nexting = false, e2.apply(null, arguments);
          }), r3);
        }, r2.prototype._next = function(e2) {
          t2.nextTick(e2);
        }, r2.prototype.seek = function(e2) {
          if (this._ended)
            throw new Error("cannot call seek() after end()");
          if (this._nexting)
            throw new Error("cannot call seek() before next() has completed");
          e2 = this.db._serializeKey(e2), this._seek(e2);
        }, r2.prototype._seek = function(e2) {
        }, r2.prototype.end = function(e2) {
          if (typeof e2 != "function")
            throw new Error("end() requires a callback argument");
          if (this._ended)
            return t2.nextTick(e2, new Error("end() already called on iterator"));
          this._ended = true, this._end(e2);
        }, r2.prototype._end = function(e2) {
          t2.nextTick(e2);
        }, e.exports = r2;
      }).call(this, r(10));
    }, function(e, t, r) {
      "use strict";
      function n(e2) {
        if (typeof e2 != "object" || e2 === null)
          throw new TypeError("First argument must be an abstract-leveldown compliant store");
        this.db = e2, this._operations = [], this._written = false;
      }
      n.prototype._checkWritten = function() {
        if (this._written)
          throw new Error("write() already called on this batch");
      }, n.prototype.put = function(e2, t2) {
        this._checkWritten();
        var r2 = this.db._checkKey(e2) || this.db._checkValue(t2);
        if (r2)
          throw r2;
        return e2 = this.db._serializeKey(e2), t2 = this.db._serializeValue(t2), this._put(e2, t2), this;
      }, n.prototype._put = function(e2, t2) {
        this._operations.push({type: "put", key: e2, value: t2});
      }, n.prototype.del = function(e2) {
        this._checkWritten();
        var t2 = this.db._checkKey(e2);
        if (t2)
          throw t2;
        return e2 = this.db._serializeKey(e2), this._del(e2), this;
      }, n.prototype._del = function(e2) {
        this._operations.push({type: "del", key: e2});
      }, n.prototype.clear = function() {
        return this._checkWritten(), this._clear(), this;
      }, n.prototype._clear = function() {
        this._operations = [];
      }, n.prototype.write = function(e2, t2) {
        if (this._checkWritten(), typeof e2 == "function" && (t2 = e2), typeof t2 != "function")
          throw new Error("write() requires a callback argument");
        typeof e2 == "object" && e2 !== null || (e2 = {}), this._written = true, this._write(e2, t2);
      }, n.prototype._write = function(e2, t2) {
        this.db._batch(this._operations, e2, t2);
      }, e.exports = n;
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        var n = r(797);
        e.exports = function(e2) {
          return e2 instanceof Uint8Array ? n(e2) : e2 instanceof ArrayBuffer ? t2.from(e2) : t2.from(String(e2));
        };
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      e.exports = r(184);
    }, function(e, t, r) {
      "use strict";
      const n = r(181), i = r(1)("ipfs:repo:lock"), s = {};
      t.lock = async (e2) => {
        const t2 = e2 + "/repo.lock";
        if (i("locking %s", t2), s[t2] === true)
          throw new n.LockExistsError("Lock already being held for file: " + t2);
        s[t2] = true;
        return {async close() {
          s[t2] && delete s[t2];
        }};
      }, t.locked = async (e2) => {
        const t2 = e2 + "/repo.lock";
        return i("checking lock: " + t2), Boolean(s[t2]);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(15), s = r(17);
      e.exports = {codec: s.RAW, defaultHashAlg: s.SHA2_256, resolver: {resolve: (e2, t2) => {
        if (t2 !== "/")
          throw new Error("Only the root path / may be resolved");
        return {value: e2, remainderPath: ""};
      }, tree: (e2) => ({done: true})}, util: {deserialize: (e2) => e2, serialize: (e2) => e2, cid: async (t2, r2) => {
        const o = {cidVersion: 1, hashAlg: e.exports.defaultHashAlg}, a = Object.assign(o, r2), c = await i(t2, a.hashAlg), u = s.print[e.exports.codec];
        return new n(a.cidVersion, u, c);
      }}};
    }, function(e, t, r) {
      "use strict";
      const n = r(113), i = r(23), s = r(0), o = r(811);
      e.exports = ({options: e2 = {}, peerId: t2, multiaddrs: a = [], repo: c, keychainConfig: u = {}, config: h = {}}) => {
        const {datastore: f, keys: d} = c, l = function({options: e3, config: t3, datastore: a2, keys: c2, keychainConfig: u2, peerId: h2, multiaddrs: f2}) {
          const d2 = {datastore: a2, peerId: h2, modules: {}}, l2 = {modules: {pubsub: (() => {
            const e4 = n(t3, "Pubsub.Router") || "gossipsub";
            if (!o[e4])
              throw s(new Error(`Router unavailable. Configure libp2p.modules.pubsub to use the ${e4} router.`), "ERR_NOT_SUPPORTED");
            return o[e4];
          })()}, config: {peerDiscovery: {mdns: {enabled: n(e3, "config.Discovery.MDNS.Enabled", n(t3, "Discovery.MDNS.Enabled", true))}, webRTCStar: {enabled: n(e3, "config.Discovery.webRTCStar.Enabled", n(t3, "Discovery.webRTCStar.Enabled", true))}, bootstrap: {list: n(e3, "config.Bootstrap", n(t3, "Bootstrap", []))}}, relay: {enabled: n(e3, "relay.enabled", n(t3, "relay.enabled", true)), hop: {enabled: n(e3, "relay.hop.enabled", n(t3, "relay.hop.enabled", false)), active: n(e3, "relay.hop.active", n(t3, "relay.hop.active", false))}}, dht: {enabled: n(t3, "Routing.Type", "none") !== "none", clientMode: n(t3, "Routing.Type", "dht") !== "dhtserver", kBucketSize: n(e3, "dht.kBucketSize", 20)}, pubsub: {enabled: n(e3, "config.Pubsub.Enabled", n(t3, "Pubsub.Enabled", true))}}, addresses: {listen: f2, announce: n(e3, "addresses.announce", n(t3, "Addresses.Announce", []))}, connectionManager: n(e3, "connectionManager", {maxConnections: n(e3, "config.Swarm.ConnMgr.HighWater", n(t3, "Swarm.ConnMgr.HighWater")), minConnections: n(e3, "config.Swarm.ConnMgr.LowWater", n(t3, "Swarm.ConnMgr.LowWater"))}), keychain: {datastore: c2, ...u2}}, p = r(928);
          let y = n(e3, "libp2p", {});
          typeof y == "function" && (y = {});
          const g = i(d2, p(), l2, y);
          n(g, "config.peerDiscovery.bootstrap.list", []).length > 0 && g.modules.peerDiscovery.push(r(1092));
          return g;
        }({options: e2, config: h, datastore: f, keys: d, keychainConfig: u, peerId: t2, multiaddrs: a});
        if (typeof e2.libp2p == "function")
          return e2.libp2p({libp2pOptions: l, options: e2, config: h, datastore: f, peerId: t2});
        return new (r(851))(l);
      };
    }, function(e, t, r) {
      "use strict";
      var n = Object.create ? function(e2, t2, r2, n2) {
        n2 === void 0 && (n2 = r2), Object.defineProperty(e2, n2, {enumerable: true, get: function() {
          return t2[r2];
        }});
      } : function(e2, t2, r2, n2) {
        n2 === void 0 && (n2 = r2), e2[n2] = t2[r2];
      }, i = Object.create ? function(e2, t2) {
        Object.defineProperty(e2, "default", {enumerable: true, value: t2});
      } : function(e2, t2) {
        e2.default = t2;
      }, s = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        var t2 = {};
        if (e2 != null)
          for (var r2 in e2)
            r2 !== "default" && Object.hasOwnProperty.call(e2, r2) && n(t2, e2, r2);
        return i(t2, e2), t2;
      }, o = function(e2, t2, r2, n2) {
        return new (r2 || (r2 = Promise))(function(i2, s2) {
          function o2(e3) {
            try {
              c2(n2.next(e3));
            } catch (t3) {
              s2(t3);
            }
          }
          function a2(e3) {
            try {
              c2(n2.throw(e3));
            } catch (t3) {
              s2(t3);
            }
          }
          function c2(e3) {
            var t3;
            e3.done ? i2(e3.value) : (t3 = e3.value, t3 instanceof r2 ? t3 : new r2(function(e4) {
              e4(t3);
            })).then(o2, a2);
          }
          c2((n2 = n2.apply(e2, t2 || [])).next());
        });
      };
      const a = s(r(812)), c = r(828), u = r(833), h = s(r(75)), f = r(835), d = r(327), l = r(74), p = r(836), y = r(843), g = r(844), b = r(7), m = r(191);
      class v extends a.default {
        constructor(e2, t2 = {}) {
          const r2 = [h.GossipsubIDv11, h.GossipsubIDv10], n2 = Object.assign(Object.assign({gossipIncoming: true, fallbackToFloodsub: true, floodPublish: true, doPX: false, directPeers: [], D: h.GossipsubD, Dlo: h.GossipsubDlo, Dhi: h.GossipsubDhi, Dscore: h.GossipsubDscore, Dout: h.GossipsubDout, Dlazy: h.GossipsubDlazy}, t2), {scoreParams: p.createPeerScoreParams(t2.scoreParams), scoreThresholds: p.createPeerScoreThresholds(t2.scoreThresholds)});
          n2.fallbackToFloodsub && r2.push(h.FloodsubID), super(Object.assign({debugName: "libp2p:gossipsub", multicodecs: r2, libp2p: e2}, n2)), this._options = n2, this.direct = new Set(n2.directPeers.map((e3) => e3.id.toB58String())), n2.directPeers.forEach((t3) => {
            e2.peerStore.addressBook.add(t3.id, t3.addrs);
          }), this.seenCache = new g(), this.mesh = new Map(), this.fanout = new Map(), this.lastpub = new Map(), this.gossip = new Map(), this.control = new Map(), this.peerhave = new Map(), this.iasked = new Map(), this.backoff = new Map(), this.outbound = new Map(), this.messageCache = t2.messageCache || new c.MessageCache(h.GossipsubHistoryGossip, h.GossipsubHistoryLength, this.getMsgId.bind(this)), this.heartbeat = new f.Heartbeat(this), this.heartbeatTicks = 0, this.gossipTracer = new y.IWantTracer(this.getMsgId.bind(this)), this._libp2p = e2, this.score = new p.PeerScore(this._options.scoreParams, e2.connectionManager, this.getMsgId.bind(this));
        }
        _decodeRpc(e2) {
          return u.RPCCodec.decode(e2);
        }
        _encodeRpc(e2) {
          return u.RPCCodec.encode(e2);
        }
        _addPeer(e2, t2) {
          const r2 = super._addPeer(e2, t2);
          this.score.addPeer(e2.toB58String());
          let n2 = false;
          for (const i2 of this._libp2p.connectionManager.getAll(e2))
            if (i2.stat.direction === "outbound" && Array.from(i2.registry.values()).some((e3) => t2 === e3.protocol)) {
              n2 = true;
              break;
            }
          return this.outbound.set(r2.id.toB58String(), n2), r2;
        }
        _removePeer(e2) {
          const t2 = super._removePeer(e2), r2 = e2.toB58String();
          for (const n2 of this.mesh.values())
            n2.delete(r2);
          for (const n2 of this.fanout.values())
            n2.delete(r2);
          return this.gossip.delete(r2), this.control.delete(r2), this.outbound.delete(r2), this.score.removePeer(r2), t2;
        }
        _processRpc(e2, t2, r2) {
          return !!super._processRpc(e2, t2, r2) && (r2.control && this._processRpcControlMessage(e2, r2.control), true);
        }
        _processRpcControlMessage(e2, t2) {
          if (!t2)
            return;
          const r2 = this._handleIHave(e2, t2.ihave), n2 = this._handleIWant(e2, t2.iwant), i2 = this._handleGraft(e2, t2.graft);
          if (this._handlePrune(e2, t2.prune), !r2.length && !n2.length && !i2.length)
            return;
          const s2 = l.createGossipRpc(n2, {iwant: r2, prune: i2});
          this._sendRpc(e2, s2);
        }
        _processRpcMessage(e2) {
          const t2 = Object.create(null, {_processRpcMessage: {get: () => super._processRpcMessage}});
          return o(this, void 0, void 0, function* () {
            const r2 = this.getMsgId(e2), n2 = l.messageIdToString(r2);
            this.seenCache.has(n2) ? this.score.duplicateMessage(e2) : (this.seenCache.put(n2), this.score.validateMessage(e2), yield t2._processRpcMessage.call(this, e2));
          });
        }
        _acceptFrom(e2) {
          return this.direct.has(e2) || this.score.score(e2) >= this._options.scoreThresholds.graylistThreshold;
        }
        validate(e2) {
          const t2 = Object.create(null, {validate: {get: () => super.validate}});
          return o(this, void 0, void 0, function* () {
            try {
              yield t2.validate.call(this, e2);
            } catch (r2) {
              throw this.score.rejectMessage(e2, r2.code), this.gossipTracer.rejectMessage(e2, r2.code), r2;
            }
          });
        }
        _handleIHave(e2, t2) {
          if (!t2.length)
            return [];
          const r2 = this.score.score(e2);
          if (r2 < this._options.scoreThresholds.gossipThreshold)
            return this.log("IHAVE: ignoring peer %s with score below threshold [ score = %d ]", e2, r2), [];
          const n2 = (this.peerhave.get(e2) || 0) + 1;
          if (this.peerhave.set(e2, n2), n2 > h.GossipsubMaxIHaveMessages)
            return this.log("IHAVE: peer %s has advertised too many times (%d) within this heartbeat interval; ignoring", e2, n2), [];
          const i2 = this.iasked.get(e2) || 0;
          if (i2 >= h.GossipsubMaxIHaveLength)
            return this.log("IHAVE: peer %s has already advertised too many messages (%d); ignoring", e2, i2), [];
          const s2 = new Map();
          if (t2.forEach(({topicID: e3, messageIDs: t3}) => {
            e3 && this.mesh.has(e3) && t3.forEach((e4) => {
              const t4 = l.messageIdToString(e4);
              this.seenCache.has(t4) || s2.set(t4, e4);
            });
          }), !s2.size)
            return [];
          let o2 = s2.size;
          o2 + i2 > h.GossipsubMaxIHaveLength && (o2 = h.GossipsubMaxIHaveLength - i2), this.log("IHAVE: Asking for %d out of %d messages from %s", o2, s2.size, e2);
          let a2 = Array.from(s2.values());
          return l.shuffle(a2), a2 = a2.slice(0, o2), this.iasked.set(e2, i2 + o2), this.gossipTracer.addPromise(e2, a2), [{messageIDs: a2}];
        }
        _handleIWant(e2, t2) {
          if (!t2.length)
            return [];
          const r2 = this.score.score(e2);
          if (r2 < this._options.scoreThresholds.gossipThreshold)
            return this.log("IWANT: ignoring peer %s with score below threshold [score = %d]", e2, r2), [];
          const n2 = new Map();
          return t2.forEach(({messageIDs: t3}) => {
            t3.forEach((t4) => {
              const [r3, i2] = this.messageCache.getForPeer(t4, e2);
              r3 && (i2 > h.GossipsubGossipRetransmission ? this.log("IWANT: Peer %s has asked for message %s too many times: ignoring request", e2, t4) : n2.set(l.messageIdToString(t4), r3));
            });
          }), n2.size ? (this.log("IWANT: Sending %d messages to %s", n2.size, e2), Array.from(n2.values()).map(a.utils.normalizeOutRpcMessage)) : [];
        }
        _handleGraft(e2, t2) {
          const r2 = [], n2 = this.score.score(e2), i2 = this._now();
          let s2 = this._options.doPX;
          return t2.forEach(({topicID: t3}) => {
            var o2;
            if (!t3)
              return;
            const a2 = this.mesh.get(t3);
            if (!a2)
              return void (s2 = false);
            if (a2.has(e2))
              return;
            if (this.direct.has(e2))
              return this.log("GRAFT: ignoring request from direct peer %s", e2), r2.push(t3), void (s2 = false);
            const c2 = (o2 = this.backoff.get(t3)) === null || o2 === void 0 ? void 0 : o2.get(e2);
            if (typeof c2 == "number" && i2 < c2) {
              this.log("GRAFT: ignoring backed off peer %s", e2), this.score.addPenalty(e2, 1), s2 = false;
              const n3 = c2 + h.GossipsubGraftFloodThreshold - h.GossipsubPruneBackoff;
              return i2 < n3 && this.score.addPenalty(e2, 1), this._addBackoff(e2, t3), void r2.push(t3);
            }
            return n2 < 0 ? (this.log("GRAFT: ignoring peer %s with negative score: score=%d, topic=%s", e2, n2, t3), r2.push(t3), s2 = false, void this._addBackoff(e2, t3)) : a2.size >= this._options.Dhi && !this.outbound.get(e2) ? (r2.push(t3), void this._addBackoff(e2, t3)) : (this.log("GRAFT: Add mesh link from %s in %s", e2, t3), this.score.graft(e2, t3), void a2.add(e2));
          }), r2.length ? r2.map((t3) => this._makePrune(e2, t3, s2)) : [];
        }
        _handlePrune(e2, t2) {
          const r2 = this.score.score(e2);
          t2.forEach(({topicID: t3, backoff: n2, peers: i2}) => {
            if (!t3)
              return;
            const s2 = this.mesh.get(t3);
            if (s2 && (this.log("PRUNE: Remove mesh link to %s in %s", e2, t3), this.score.prune(e2, t3), s2.delete(e2), typeof n2 == "number" && n2 > 0 ? this._doAddBackoff(e2, t3, 1e3 * n2) : this._addBackoff(e2, t3), i2 && i2.length)) {
              if (r2 < this._options.scoreThresholds.acceptPXThreshold)
                return void this.log("PRUNE: ignoring PX from peer %s with insufficient score [score = %d, topic = %s]", e2, r2, t3);
              this._pxConnect(i2);
            }
          });
        }
        _addBackoff(e2, t2) {
          this._doAddBackoff(e2, t2, h.GossipsubPruneBackoff);
        }
        _doAddBackoff(e2, t2, r2) {
          let n2 = this.backoff.get(t2);
          n2 || (n2 = new Map(), this.backoff.set(t2, n2));
          const i2 = this._now() + r2;
          (n2.get(e2) || 0) < i2 && n2.set(e2, i2);
        }
        _applyIwantPenalties() {
          this.gossipTracer.getBrokenPromises().forEach((e2, t2) => {
            this.log("peer %s didn't follow up in %d IWANT requests; adding penalty", t2, e2), this.score.addPenalty(t2, e2);
          });
        }
        _clearBackoff() {
          if (this.heartbeatTicks % h.GossipsubPruneBackoffTicks != 0)
            return;
          const e2 = this._now();
          this.backoff.forEach((t2, r2) => {
            t2.forEach((r3, n2) => {
              r3 < e2 && t2.delete(n2);
            }), t2.size === 0 && this.backoff.delete(r2);
          });
        }
        _directConnect() {
          if (this.heartbeatTicks % h.GossipsubDirectConnectTicks != 0)
            return;
          const e2 = [];
          this.direct.forEach((t2) => {
            const r2 = this.peers.get(t2);
            r2 && r2.isWritable || e2.push(t2);
          }), e2.length && e2.forEach((e3) => {
            this._connect(e3);
          });
        }
        _pxConnect(e2) {
          return o(this, void 0, void 0, function* () {
            e2.length > h.GossipsubPrunePeers && (l.shuffle(e2), e2 = e2.slice(0, h.GossipsubPrunePeers));
            const t2 = [];
            yield Promise.all(e2.map((e3) => o(this, void 0, void 0, function* () {
              if (!e3.peerID)
                return;
              const r2 = b.createFromBytes(e3.peerID).toB58String();
              if (!this.peers.has(r2))
                if (e3.signedPeerRecord)
                  try {
                    const n2 = yield m.openAndCertify(e3.signedPeerRecord, "libp2p-peer-record"), i2 = n2.peerId.toB58String();
                    if (r2 !== i2)
                      return void this.log("bogus peer record obtained through px: peer ID %s doesn't match expected peer %s", i2, r2);
                    if (!this._libp2p.peerStore.addressBook.consumePeerRecord(n2))
                      return void this.log("bogus peer record obtained through px: could not add peer record to address book");
                    t2.push(r2);
                  } catch (n2) {
                    this.log("bogus peer record obtained through px: invalid signature or not a peer record");
                  }
                else
                  t2.push(r2);
            }))), t2.length && t2.forEach((e3) => this._connect(e3));
          });
        }
        start() {
          super.start(), this.heartbeat.start(), this.score.start(), this._directPeerInitial = setTimeout(() => {
            this.direct.forEach((e2) => {
              this._connect(e2);
            });
          }, h.GossipsubDirectConnectInitialDelay);
        }
        stop() {
          super.stop(), this.heartbeat.stop(), this.score.stop(), this.mesh = new Map(), this.fanout = new Map(), this.lastpub = new Map(), this.gossip = new Map(), this.control = new Map(), this.peerhave = new Map(), this.iasked = new Map(), this.backoff = new Map(), this.outbound = new Map(), this.gossipTracer.clear(), clearTimeout(this._directPeerInitial);
        }
        _connect(e2) {
          this.log("Initiating connection with %s", e2), this._libp2p.dialProtocol(b.createFromB58String(e2), this.multicodecs);
        }
        subscribe(e2) {
          super.subscribe(e2), this.join(e2);
        }
        unsubscribe(e2) {
          super.unsubscribe(e2), this.leave(e2);
        }
        join(e2) {
          if (!this.started)
            throw new Error("Gossipsub has not started");
          this.log("JOIN %s", e2);
          const t2 = this.fanout.get(e2);
          if (t2)
            t2.forEach((e3) => {
              this.score.score(e3) < 0 && t2.delete(e3);
            }), t2.size < this._options.D && d.getGossipPeers(this, e2, this._options.D - t2.size, (e3) => !t2.has(e3) && !this.direct.has(e3) && this.score.score(e3) >= 0).forEach((e3) => t2.add(e3)), this.mesh.set(e2, t2), this.fanout.delete(e2), this.lastpub.delete(e2);
          else {
            const t3 = d.getGossipPeers(this, e2, this._options.D, (e3) => !this.direct.has(e3) && this.score.score(e3) >= 0);
            this.mesh.set(e2, t3);
          }
          this.mesh.get(e2).forEach((t3) => {
            this.log("JOIN: Add mesh link to %s in %s", t3, e2), this._sendGraft(t3, e2);
          });
        }
        leave(e2) {
          if (!this.started)
            throw new Error("Gossipsub has not started");
          this.log("LEAVE %s", e2);
          const t2 = this.mesh.get(e2);
          t2 && (t2.forEach((t3) => {
            this.log("LEAVE: Remove mesh link to %s in %s", t3, e2), this._sendPrune(t3, e2);
          }), this.mesh.delete(e2));
        }
        _publish(e2) {
          return o(this, void 0, void 0, function* () {
            e2.receivedFrom !== this.peerId.toB58String() && (this.score.deliverMessage(e2), this.gossipTracer.deliverMessage(e2));
            const t2 = this.getMsgId(e2), r2 = l.messageIdToString(t2);
            this.seenCache.put(r2), this.messageCache.put(e2);
            const n2 = new Set();
            e2.topicIDs.forEach((t3) => {
              const r3 = this.topics.get(t3);
              if (r3)
                if (this._options.floodPublish && e2.from === this.peerId.toB58String())
                  r3.forEach((e3) => {
                    (this.direct.has(e3) || this.score.score(e3) >= this._options.scoreThresholds.publishThreshold) && n2.add(e3);
                  });
                else {
                  this.direct.forEach((e4) => {
                    n2.add(e4);
                  }), r3.forEach((e4) => {
                    const t4 = this.score.score(e4), r4 = this.peers.get(e4);
                    r4 && r4.protocol === h.FloodsubID && t4 >= this._options.scoreThresholds.publishThreshold && n2.add(e4);
                  });
                  let e3 = this.mesh.get(t3);
                  if (!e3 || !e3.size) {
                    if (e3 = this.fanout.get(t3), !e3) {
                      const r4 = d.getGossipPeers(this, t3, this._options.D, (e4) => this.score.score(e4) >= this._options.scoreThresholds.publishThreshold);
                      r4.size > 0 ? (e3 = r4, this.fanout.set(t3, r4)) : e3 = new Set();
                    }
                    this.lastpub.set(t3, this._now());
                  }
                  e3.forEach((e4) => {
                    n2.add(e4);
                  });
                }
            });
            const i2 = l.createGossipRpc([a.utils.normalizeOutRpcMessage(e2)]);
            n2.forEach((t3) => {
              t3 !== e2.from && this._sendRpc(t3, i2);
            });
          });
        }
        _sendGraft(e2, t2) {
          const r2 = [{topicID: t2}], n2 = l.createGossipRpc([], {graft: r2});
          this._sendRpc(e2, n2);
        }
        _sendPrune(e2, t2) {
          const r2 = [this._makePrune(e2, t2, this._options.doPX)], n2 = l.createGossipRpc([], {prune: r2});
          this._sendRpc(e2, n2);
        }
        _sendRpc(e2, t2) {
          const r2 = this.peers.get(e2);
          if (!r2 || !r2.isWritable)
            return;
          const n2 = this.control.get(e2);
          n2 && (this._piggybackControl(e2, t2, n2), this.control.delete(e2));
          const i2 = this.gossip.get(e2);
          i2 && (this._piggybackGossip(e2, t2, i2), this.gossip.delete(e2)), r2.write(u.RPCCodec.encode(t2));
        }
        _piggybackControl(e2, t2, r2) {
          const n2 = (r2.graft || []).filter(({topicID: t3}) => (t3 && this.mesh.get(t3) || new Set()).has(e2)), i2 = (r2.prune || []).filter(({topicID: t3}) => !(t3 && this.mesh.get(t3) || new Set()).has(e2));
          (n2.length || i2.length) && (t2.control ? (t2.control.graft = t2.control.graft.concat(n2), t2.control.prune = t2.control.prune.concat(i2)) : t2.control = {ihave: [], iwant: [], graft: n2, prune: i2});
        }
        _piggybackGossip(e2, t2, r2) {
          t2.control || (t2.control = {ihave: [], iwant: [], graft: [], prune: []}), t2.control.ihave = r2;
        }
        _sendGraftPrune(e2, t2, r2) {
          const n2 = this._options.doPX;
          for (const [i2, s2] of e2) {
            const e3 = s2.map((e4) => ({topicID: e4}));
            let o2 = [];
            const a2 = t2.get(i2);
            a2 && (o2 = a2.map((e4) => this._makePrune(i2, e4, n2 && !r2.get(i2))), t2.delete(i2));
            const c2 = l.createGossipRpc([], {graft: e3, prune: o2});
            this._sendRpc(i2, c2);
          }
          for (const [i2, s2] of t2) {
            const e3 = s2.map((e4) => this._makePrune(i2, e4, n2 && !r2.get(i2))), t3 = l.createGossipRpc([], {prune: e3});
            this._sendRpc(i2, t3);
          }
        }
        _emitGossip(e2, t2) {
          const r2 = this.messageCache.getGossipIDs(e2);
          if (!r2.length)
            return;
          l.shuffle(r2), r2.length > h.GossipsubMaxIHaveLength && this.log("too many messages for gossip; will truncate IHAVE list (%d messages)", r2.length);
          const n2 = [], i2 = this.topics.get(e2);
          if (!i2)
            return;
          i2.forEach((e3) => {
            const r3 = this.peers.get(e3);
            r3 && !t2.has(e3) && !this.direct.has(e3) && l.hasGossipProtocol(r3.protocol) && this.score.score(e3) >= this._options.scoreThresholds.gossipThreshold && n2.push(e3);
          });
          let s2 = this._options.Dlazy;
          const o2 = h.GossipsubGossipFactor * n2.length;
          o2 > s2 && (s2 = o2), s2 > n2.length ? s2 = n2.length : l.shuffle(n2), n2.slice(0, s2).forEach((t3) => {
            let n3 = r2;
            r2.length > h.GossipsubMaxIHaveLength && (n3 = l.shuffle(n3.slice()).slice(0, h.GossipsubMaxIHaveLength)), this._pushGossip(t3, {topicID: e2, messageIDs: n3});
          });
        }
        _flush() {
          for (const [e2, t2] of this.gossip.entries()) {
            this.gossip.delete(e2);
            const r2 = l.createGossipRpc([], {ihave: t2});
            this._sendRpc(e2, r2);
          }
          for (const [e2, t2] of this.control.entries()) {
            this.control.delete(e2);
            const r2 = l.createGossipRpc([], {graft: t2.graft, prune: t2.prune});
            this._sendRpc(e2, r2);
          }
        }
        _pushGossip(e2, t2) {
          this.log("Add gossip to %s", e2);
          const r2 = this.gossip.get(e2) || [];
          this.gossip.set(e2, r2.concat(t2));
        }
        _now() {
          return Date.now();
        }
        _makePrune(e2, t2, r2) {
          if (this.peers.get(e2).protocol === h.GossipsubIDv10)
            return {topicID: t2, peers: []};
          const n2 = h.GossipsubPruneBackoff / 1e3, i2 = [];
          if (r2) {
            d.getGossipPeers(this, t2, h.GossipsubPrunePeers, (t3) => t3 !== e2 && this.score.score(t3) >= 0).forEach((e3) => {
              const t3 = b.createFromB58String(e3);
              i2.push({peerID: t3.toBytes(), signedPeerRecord: this._libp2p.peerStore.addressBook.getRawEnvelope(t3)});
            });
          }
          return {topicID: t2, peers: i2, backoff: n2};
        }
      }
      v.multicodec = h.GossipsubIDv11, e.exports = v;
    }, function(e, t, r) {
      "use strict";
      const n = r(20), i = n(r(815)), s = i.RPC, o = n(r(816));
      (t = e.exports).rpc = i, t.td = o, t.RPC = s, t.Message = s.Message, t.SubOpts = s.SubOpts;
    }, function(e, t, r) {
      "use strict";
      const n = r(325), {Buffer: i} = r(3), s = (e2, t2, r2) => {
        const o = n.encode(e2, t2, r2);
        return s.bytes = n.encode.bytes, t2 || i.from(o);
      };
      e.exports = s;
    }, function(e, t, r) {
      "use strict";
      e.exports = {encode: r(819), decode: r(820), encodingLength: r(821)};
    }, function(e, t, r) {
      "use strict";
      const {Buffer: n} = r(3), i = r(325), s = (e2) => {
        const t2 = i.decode(n.isBuffer(e2) ? e2 : (r2 = e2, new Proxy({}, {get: (e3, t3) => t3[0] === "l" ? r2[t3] : r2.get(parseInt(t3))})));
        var r2;
        return s.bytes = i.decode.bytes, t2;
      };
      e.exports = s;
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.getGossipPeers = void 0;
      const n = r(74);
      t.getGossipPeers = function(e2, t2, r2, i = () => true) {
        const s = e2.topics.get(t2);
        if (!s)
          return new Set();
        let o = [];
        return s.forEach((t3) => {
          const r3 = e2.peers.get(t3);
          r3 && n.hasGossipProtocol(r3.protocol) && i(t3) && o.push(t3);
        }), o = n.shuffle(o), r2 > 0 && o.length > r2 && (o = o.slice(0, r2)), new Set(o);
      };
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.validateTopicScoreParams = t.validatePeerScoreParams = t.createTopicScoreParams = t.createPeerScoreParams = t.defaultTopicScoreParams = t.defaultPeerScoreParams = void 0;
      const n = r(329), i = r(0);
      function s(e2 = {}) {
        return Object.assign(Object.assign({}, t.defaultTopicScoreParams), e2);
      }
      function o(e2) {
        if (e2.topicWeight < 0)
          throw i(new Error("invalid topic weight; must be >= 0"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.timeInMeshQuantum === 0)
          throw i(new Error("invalid TimeInMeshQuantum; must be non zero"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.timeInMeshWeight < 0)
          throw i(new Error("invalid TimeInMeshWeight; must be positive (or 0 to disable)"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.timeInMeshWeight !== 0 && e2.timeInMeshQuantum <= 0)
          throw i(new Error("invalid TimeInMeshQuantum; must be positive"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.timeInMeshWeight !== 0 && e2.timeInMeshCap <= 0)
          throw i(new Error("invalid TimeInMeshCap; must be positive"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.firstMessageDeliveriesWeight < 0)
          throw i(new Error("invallid FirstMessageDeliveriesWeight; must be positive (or 0 to disable)"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.firstMessageDeliveriesWeight !== 0 && (e2.firstMessageDeliveriesDecay <= 0 || e2.firstMessageDeliveriesDecay >= 1))
          throw i(new Error("invalid FirstMessageDeliveriesDecay; must be between 0 and 1"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.firstMessageDeliveriesWeight !== 0 && e2.firstMessageDeliveriesCap <= 0)
          throw i(new Error("invalid FirstMessageDeliveriesCap; must be positive"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.meshMessageDeliveriesWeight > 0)
          throw i(new Error("invalid MeshMessageDeliveriesWeight; must be negative (or 0 to disable)"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.meshMessageDeliveriesWeight !== 0 && (e2.meshMessageDeliveriesDecay <= 0 || e2.meshMessageDeliveriesDecay >= 1))
          throw i(new Error("invalid MeshMessageDeliveriesDecay; must be between 0 and 1"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.meshMessageDeliveriesWeight !== 0 && e2.meshMessageDeliveriesCap <= 0)
          throw i(new Error("invalid MeshMessageDeliveriesCap; must be positive"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.meshMessageDeliveriesWeight !== 0 && e2.meshMessageDeliveriesThreshold <= 0)
          throw i(new Error("invalid MeshMessageDeliveriesThreshold; must be positive"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.meshMessageDeliveriesWindow < 0)
          throw i(new Error("invalid MeshMessageDeliveriesWindow; must be non-negative"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.meshMessageDeliveriesWeight !== 0 && e2.meshMessageDeliveriesActivation < 1e3)
          throw i(new Error("invalid MeshMessageDeliveriesActivation; must be at least 1s"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.meshFailurePenaltyWeight > 0)
          throw i(new Error("invalid MeshFailurePenaltyWeight; must be negative (or 0 to disable)"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.meshFailurePenaltyWeight !== 0 && (e2.meshFailurePenaltyDecay <= 0 || e2.meshFailurePenaltyDecay >= 1))
          throw i(new Error("invalid MeshFailurePenaltyDecay; must be between 0 and 1"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.invalidMessageDeliveriesWeight > 0)
          throw i(new Error("invalid InvalidMessageDeliveriesWeight; must be negative (or 0 to disable)"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.invalidMessageDeliveriesDecay <= 0 || e2.invalidMessageDeliveriesDecay >= 1)
          throw i(new Error("invalid InvalidMessageDeliveriesDecay; must be between 0 and 1"), n.ERR_INVALID_PEER_SCORE_PARAMS);
      }
      t.defaultPeerScoreParams = {topics: {}, topicScoreCap: 10, appSpecificScore: () => 0, appSpecificWeight: 10, IPColocationFactorWeight: -5, IPColocationFactorThreshold: 10, IPColocationFactorWhitelist: new Set(), behaviourPenaltyWeight: -10, behaviourPenaltyDecay: 0.2, decayInterval: 1e3, decayToZero: 0.1, retainScore: 36e5}, t.defaultTopicScoreParams = {topicWeight: 0.5, timeInMeshWeight: 1, timeInMeshQuantum: 1, timeInMeshCap: 3600, firstMessageDeliveriesWeight: 1, firstMessageDeliveriesDecay: 0.5, firstMessageDeliveriesCap: 2e3, meshMessageDeliveriesWeight: -1, meshMessageDeliveriesDecay: 0.5, meshMessageDeliveriesCap: 100, meshMessageDeliveriesThreshold: 20, meshMessageDeliveriesWindow: 10, meshMessageDeliveriesActivation: 5e3, meshFailurePenaltyWeight: -1, meshFailurePenaltyDecay: 0.5, invalidMessageDeliveriesWeight: -1, invalidMessageDeliveriesDecay: 0.3}, t.createPeerScoreParams = function(e2 = {}) {
        return Object.assign(Object.assign(Object.assign({}, t.defaultPeerScoreParams), e2), {topics: e2.topics ? Object.entries(e2.topics).reduce((e3, [t2, r2]) => (e3[t2] = s(r2), e3), {}) : {}});
      }, t.createTopicScoreParams = s, t.validatePeerScoreParams = function(e2) {
        for (const [r2, s2] of Object.entries(e2.topics))
          try {
            o(s2);
          } catch (t2) {
            throw i(new Error(`invalid score parameters for topic ${r2}: ${t2.message}`), n.ERR_INVALID_PEER_SCORE_PARAMS);
          }
        if (e2.topicScoreCap < 0)
          throw i(new Error("invalid topic score cap; must be positive (or 0 for no cap)"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.appSpecificScore === null || e2.appSpecificScore === void 0)
          throw i(new Error("missing application specific score function"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.IPColocationFactorWeight > 0)
          throw i(new Error("invalid IPColocationFactorWeight; must be negative (or 0 to disable)"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.IPColocationFactorWeight !== 0 && e2.IPColocationFactorThreshold < 1)
          throw i(new Error("invalid IPColocationFactorThreshold; must be at least 1"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.behaviourPenaltyWeight > 0)
          throw i(new Error("invalid BehaviourPenaltyWeight; must be negative (or 0 to disable)"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.behaviourPenaltyWeight !== 0 && (e2.behaviourPenaltyDecay <= 0 || e2.behaviourPenaltyDecay >= 1))
          throw i(new Error("invalid BehaviourPenaltyDecay; must be between 0 and 1"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.decayInterval < 1e3)
          throw i(new Error("invalid DecayInterval; must be at least 1s"), n.ERR_INVALID_PEER_SCORE_PARAMS);
        if (e2.decayToZero <= 0 || e2.decayToZero >= 1)
          throw i(new Error("invalid DecayToZero; must be between 0 and 1"), n.ERR_INVALID_PEER_SCORE_PARAMS);
      }, t.validateTopicScoreParams = o;
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.ERR_INVALID_PEER_SCORE_THRESHOLDS = t.ERR_INVALID_PEER_SCORE_PARAMS = void 0, t.ERR_INVALID_PEER_SCORE_PARAMS = "ERR_INVALID_PEER_SCORE_PARAMS", t.ERR_INVALID_PEER_SCORE_THRESHOLDS = "ERR_INVALID_PEER_SCORE_THRESHOLDS";
    }, function(e, t, r) {
      "use strict";
      const n = r(854), i = r(855);
      class s extends Error {
        constructor(e2) {
          if (!Array.isArray(e2))
            throw new TypeError("Expected input to be an Array, got " + typeof e2);
          let t2 = (e2 = [...e2].map((e3) => e3 instanceof Error ? e3 : e3 !== null && typeof e3 == "object" ? Object.assign(new Error(e3.message), e3) : new Error(e3))).map((e3) => typeof e3.stack == "string" ? i(e3.stack).replace(/\s+at .*aggregate-error\/index.js:\d+:\d+\)?/g, "") : String(e3)).join("\n");
          t2 = "\n" + n(t2, 4), super(t2), this.name = "AggregateError", Object.defineProperty(this, "_errors", {value: e2});
        }
        *[Symbol.iterator]() {
          for (const e2 of this._errors)
            yield e2;
        }
      }
      e.exports = s;
    }, function(e, t, r) {
      "use strict";
      const n = r(7), i = r(11), s = r(0), {codes: o} = r(26);
      e.exports = function(e2) {
        let t2;
        if (typeof e2 == "string" && (e2 = i(e2)), i.isMultiaddr(e2)) {
          t2 = e2;
          try {
            e2 = n.createFromB58String(e2.getPeerId());
          } catch (r2) {
            throw s(new Error(e2 + " is not a valid peer type"), o.ERR_INVALID_MULTIADDR);
          }
        }
        return {id: e2, multiaddrs: t2 ? [t2] : void 0};
      };
    }, function(e, t, r) {
      "use strict";
      var n = 1e3, i = 6e4, s = 60 * i, o = 24 * s;
      function a(e2, t2, r2, n2) {
        var i2 = t2 >= 1.5 * r2;
        return Math.round(e2 / r2) + " " + n2 + (i2 ? "s" : "");
      }
      e.exports = function(e2, t2) {
        t2 = t2 || {};
        var r2 = typeof e2;
        if (r2 === "string" && e2.length > 0)
          return function(e3) {
            if ((e3 = String(e3)).length > 100)
              return;
            var t3 = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e3);
            if (!t3)
              return;
            var r3 = parseFloat(t3[1]);
            switch ((t3[2] || "ms").toLowerCase()) {
              case "years":
              case "year":
              case "yrs":
              case "yr":
              case "y":
                return 315576e5 * r3;
              case "weeks":
              case "week":
              case "w":
                return 6048e5 * r3;
              case "days":
              case "day":
              case "d":
                return r3 * o;
              case "hours":
              case "hour":
              case "hrs":
              case "hr":
              case "h":
                return r3 * s;
              case "minutes":
              case "minute":
              case "mins":
              case "min":
              case "m":
                return r3 * i;
              case "seconds":
              case "second":
              case "secs":
              case "sec":
              case "s":
                return r3 * n;
              case "milliseconds":
              case "millisecond":
              case "msecs":
              case "msec":
              case "ms":
                return r3;
              default:
                return;
            }
          }(e2);
        if (r2 === "number" && isFinite(e2))
          return t2.long ? function(e3) {
            var t3 = Math.abs(e3);
            if (t3 >= o)
              return a(e3, t3, o, "day");
            if (t3 >= s)
              return a(e3, t3, s, "hour");
            if (t3 >= i)
              return a(e3, t3, i, "minute");
            if (t3 >= n)
              return a(e3, t3, n, "second");
            return e3 + " ms";
          }(e2) : function(e3) {
            var t3 = Math.abs(e3);
            if (t3 >= o)
              return Math.round(e3 / o) + "d";
            if (t3 >= s)
              return Math.round(e3 / s) + "h";
            if (t3 >= i)
              return Math.round(e3 / i) + "m";
            if (t3 >= n)
              return Math.round(e3 / n) + "s";
            return e3 + "ms";
          }(e2);
        throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e2));
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(867).version;
      e.exports.PROTOCOL_VERSION = "ipfs/0.1.0", e.exports.AGENT_VERSION = "js-libp2p/" + n, e.exports.MULTICODEC_IDENTIFY = "/ipfs/id/1.0.0", e.exports.MULTICODEC_IDENTIFY_PUSH = "/ipfs/id/push/1.0.0";
    }, function(e, t, r) {
      "use strict";
      const n = r(868), {codes: i} = r(26), s = r(0), o = r(1), a = o("libp2p:transports");
      a.error = o("libp2p:transports:error");
      class c {
        constructor({libp2p: e2, upgrader: t2, faultTolerance: r2 = u.FATAL_ALL}) {
          this.libp2p = e2, this.upgrader = t2, this._transports = new Map(), this._listeners = new Map(), this._listenerOptions = new Map(), this.faultTolerance = r2;
        }
        add(e2, t2, r2 = {}) {
          if (a("adding %s", e2), !e2)
            throw s(new Error(`Transport must have a valid key, was given '${e2}'`), i.ERR_INVALID_KEY);
          if (this._transports.has(e2))
            throw s(new Error("There is already a transport with this key"), i.ERR_DUPLICATE_TRANSPORT);
          const n2 = new t2({...r2, libp2p: this.libp2p, upgrader: this.upgrader});
          this._transports.set(e2, n2), this._listenerOptions.set(e2, r2.listenerOptions || {}), this._listeners.has(e2) || this._listeners.set(e2, []);
        }
        async close() {
          const e2 = [];
          for (const [t2, r2] of this._listeners)
            for (a("closing listeners for %s", t2); r2.length; ) {
              const t3 = r2.pop();
              e2.push(t3.close());
            }
          await Promise.all(e2), a("all listeners closed");
          for (const t2 of this._listeners.keys())
            this._listeners.set(t2, []);
        }
        async dial(e2, t2) {
          const r2 = this.transportForMultiaddr(e2);
          if (!r2)
            throw s(new Error("No transport available for address " + String(e2)), i.ERR_TRANSPORT_UNAVAILABLE);
          try {
            return await r2.dial(e2, t2);
          } catch (n2) {
            throw n2.code || (n2.code = i.ERR_TRANSPORT_DIAL_FAILED), n2;
          }
        }
        getAddrs() {
          let e2 = [];
          for (const t2 of this._listeners.values())
            for (const r2 of t2)
              e2 = [...e2, ...r2.getAddrs()];
          return e2;
        }
        getTransports() {
          return this._transports.values();
        }
        transportForMultiaddr(e2) {
          for (const t2 of this._transports.values()) {
            if (t2.filter([e2]).length)
              return t2;
          }
          return null;
        }
        async listen() {
          const e2 = this.libp2p.addressManager.getListenAddrs();
          if (e2.length === 0)
            return void a("no addresses were provided for listening, this node is dial only");
          const t2 = [];
          for (const [r2, o2] of this._transports.entries()) {
            const c3 = o2.filter(e2), u2 = [];
            for (const e3 of c3) {
              a("creating listener for %s on %s", r2, e3);
              const t3 = o2.createListener(this._listenerOptions.get(r2), this.onConnection);
              this._listeners.get(r2).push(t3), u2.push(t3.listen(e3));
            }
            if (u2.length === 0) {
              t2.push(r2);
              continue;
            }
            if (!(await n(u2)).find((e3) => e3.isFulfilled === true))
              throw s(new Error(`Transport (${r2}) could not listen on any available address`), i.ERR_NO_VALID_ADDRESSES);
          }
          if (t2.length === this._transports.size) {
            const e3 = `no valid addresses were provided for transports [${t2}]`;
            if (this.faultTolerance === u.FATAL_ALL)
              throw s(new Error(e3), i.ERR_NO_VALID_ADDRESSES);
            a("libp2p in dial mode only: " + e3);
          }
        }
        async remove(e2) {
          if (a("removing %s", e2), this._listeners.has(e2))
            for (const t2 of this._listeners.get(e2))
              await t2.close();
          this._transports.delete(e2), this._listeners.delete(e2);
        }
        async removeAll() {
          const e2 = [];
          for (const t2 of this._transports.keys())
            e2.push(this.remove(t2));
          await Promise.all(e2);
        }
      }
      const u = {FATAL_ALL: 0, NO_FATAL: 1};
      c.FaultTolerance = u, e.exports = c;
    }, function(e, t, r) {
      "use strict";
      const n = r(11), {CircuitRelay: i} = r(94);
      function s(e2, t2) {
        e2.write({type: i.Type.STATUS, code: t2});
      }
      e.exports = {validateAddrs: function(e2, t2) {
        try {
          e2.dstPeer.addrs.forEach((e3) => n(e3));
        } catch (r2) {
          throw s(t2, e2.type === i.Type.HOP ? i.Status.HOP_DST_MULTIADDR_INVALID : i.Status.STOP_DST_MULTIADDR_INVALID), r2;
        }
        try {
          e2.srcPeer.addrs.forEach((e3) => n(e3));
        } catch (r2) {
          throw s(t2, e2.type === i.Type.HOP ? i.Status.HOP_SRC_MULTIADDR_INVALID : i.Status.STOP_SRC_MULTIADDR_INVALID), r2;
        }
      }};
    }, function(e, t, r) {
      "use strict";
      const n = r(33);
      e.exports = (e2) => {
        const t2 = async function* () {
          let t3 = yield, r2 = new n();
          for await (const i of e2)
            if (t3)
              for (r2.append(i); r2.length >= t3; ) {
                const e3 = r2.shallowSlice(0, t3);
                if (r2.consume(t3), t3 = yield e3, !t3) {
                  r2.length && (t3 = yield r2, r2 = new n());
                  break;
                }
              }
            else
              t3 = yield r2.append(i), r2 = new n();
          if (t3)
            throw Object.assign(new Error(`stream ended before ${t3} bytes became available`), {code: "ERR_UNDER_READ", buffer: r2});
        }();
        return t2.next(), t2;
      };
    }, function(e, t, r) {
      "use strict";
      const {CircuitRelay: n} = r(94), i = r(195), s = r(196), {validateAddrs: o} = r(335), a = r(1), c = a("libp2p:circuit:stop");
      c.error = a("libp2p:circuit:stop:error"), e.exports.handleStop = function({connection: e2, request: t2, streamHandler: r2}) {
        try {
          o(t2, r2);
        } catch (i2) {
          return c.error("invalid stop request via peer %s", e2.remotePeer.toB58String(), i2);
        }
        return c("stop request is valid"), r2.write({type: n.Type.STATUS, code: n.Status.SUCCESS}), r2.rest();
      }, e.exports.stop = async function({connection: e2, request: t2}) {
        const {stream: r2} = await e2.newStream([i.relay]);
        c("starting stop request to %s", e2.remotePeer.toB58String());
        const o2 = new s({stream: r2});
        o2.write(t2);
        const a2 = await o2.read();
        if (a2.code === n.Status.SUCCESS)
          return c("stop request to %s was successful", e2.remotePeer.toB58String()), o2.rest();
        c("stop request failed with code %d", a2.code), o2.close();
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(881);
      function i(e2) {
        const t2 = new n();
        function r2() {
          t2.abort();
          for (const t3 of e2)
            t3 && t3.removeEventListener && t3.removeEventListener("abort", r2);
        }
        for (const n2 of e2)
          if (n2 && n2.addEventListener) {
            if (n2.aborted) {
              r2();
              break;
            }
            n2.addEventListener("abort", r2);
          }
        return t2.signal;
      }
      e.exports = i, e.exports.anySignal = i;
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      r(79), r(44), r(139), r(49), r(892), r(78), r(141), r(894), r(99), r(13);
      var i = n.asn1, s = e.exports = n.pki = n.pki || {}, o = s.oids, a = {};
      a.CN = o.commonName, a.commonName = "CN", a.C = o.countryName, a.countryName = "C", a.L = o.localityName, a.localityName = "L", a.ST = o.stateOrProvinceName, a.stateOrProvinceName = "ST", a.O = o.organizationName, a.organizationName = "O", a.OU = o.organizationalUnitName, a.organizationalUnitName = "OU", a.E = o.emailAddress, a.emailAddress = "E";
      var c = n.pki.rsa.publicKeyValidator, u = {name: "Certificate", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "Certificate.TBSCertificate", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, captureAsn1: "tbsCertificate", value: [{name: "Certificate.TBSCertificate.version", tagClass: i.Class.CONTEXT_SPECIFIC, type: 0, constructed: true, optional: true, value: [{name: "Certificate.TBSCertificate.version.integer", tagClass: i.Class.UNIVERSAL, type: i.Type.INTEGER, constructed: false, capture: "certVersion"}]}, {name: "Certificate.TBSCertificate.serialNumber", tagClass: i.Class.UNIVERSAL, type: i.Type.INTEGER, constructed: false, capture: "certSerialNumber"}, {name: "Certificate.TBSCertificate.signature", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "Certificate.TBSCertificate.signature.algorithm", tagClass: i.Class.UNIVERSAL, type: i.Type.OID, constructed: false, capture: "certinfoSignatureOid"}, {name: "Certificate.TBSCertificate.signature.parameters", tagClass: i.Class.UNIVERSAL, optional: true, captureAsn1: "certinfoSignatureParams"}]}, {name: "Certificate.TBSCertificate.issuer", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, captureAsn1: "certIssuer"}, {name: "Certificate.TBSCertificate.validity", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "Certificate.TBSCertificate.validity.notBefore (utc)", tagClass: i.Class.UNIVERSAL, type: i.Type.UTCTIME, constructed: false, optional: true, capture: "certValidity1UTCTime"}, {name: "Certificate.TBSCertificate.validity.notBefore (generalized)", tagClass: i.Class.UNIVERSAL, type: i.Type.GENERALIZEDTIME, constructed: false, optional: true, capture: "certValidity2GeneralizedTime"}, {name: "Certificate.TBSCertificate.validity.notAfter (utc)", tagClass: i.Class.UNIVERSAL, type: i.Type.UTCTIME, constructed: false, optional: true, capture: "certValidity3UTCTime"}, {name: "Certificate.TBSCertificate.validity.notAfter (generalized)", tagClass: i.Class.UNIVERSAL, type: i.Type.GENERALIZEDTIME, constructed: false, optional: true, capture: "certValidity4GeneralizedTime"}]}, {name: "Certificate.TBSCertificate.subject", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, captureAsn1: "certSubject"}, c, {name: "Certificate.TBSCertificate.issuerUniqueID", tagClass: i.Class.CONTEXT_SPECIFIC, type: 1, constructed: true, optional: true, value: [{name: "Certificate.TBSCertificate.issuerUniqueID.id", tagClass: i.Class.UNIVERSAL, type: i.Type.BITSTRING, constructed: false, captureBitStringValue: "certIssuerUniqueId"}]}, {name: "Certificate.TBSCertificate.subjectUniqueID", tagClass: i.Class.CONTEXT_SPECIFIC, type: 2, constructed: true, optional: true, value: [{name: "Certificate.TBSCertificate.subjectUniqueID.id", tagClass: i.Class.UNIVERSAL, type: i.Type.BITSTRING, constructed: false, captureBitStringValue: "certSubjectUniqueId"}]}, {name: "Certificate.TBSCertificate.extensions", tagClass: i.Class.CONTEXT_SPECIFIC, type: 3, constructed: true, captureAsn1: "certExtensions", optional: true}]}, {name: "Certificate.signatureAlgorithm", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "Certificate.signatureAlgorithm.algorithm", tagClass: i.Class.UNIVERSAL, type: i.Type.OID, constructed: false, capture: "certSignatureOid"}, {name: "Certificate.TBSCertificate.signature.parameters", tagClass: i.Class.UNIVERSAL, optional: true, captureAsn1: "certSignatureParams"}]}, {name: "Certificate.signatureValue", tagClass: i.Class.UNIVERSAL, type: i.Type.BITSTRING, constructed: false, captureBitStringValue: "certSignature"}]}, h = {name: "rsapss", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "rsapss.hashAlgorithm", tagClass: i.Class.CONTEXT_SPECIFIC, type: 0, constructed: true, value: [{name: "rsapss.hashAlgorithm.AlgorithmIdentifier", tagClass: i.Class.UNIVERSAL, type: i.Class.SEQUENCE, constructed: true, optional: true, value: [{name: "rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm", tagClass: i.Class.UNIVERSAL, type: i.Type.OID, constructed: false, capture: "hashOid"}]}]}, {name: "rsapss.maskGenAlgorithm", tagClass: i.Class.CONTEXT_SPECIFIC, type: 1, constructed: true, value: [{name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier", tagClass: i.Class.UNIVERSAL, type: i.Class.SEQUENCE, constructed: true, optional: true, value: [{name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm", tagClass: i.Class.UNIVERSAL, type: i.Type.OID, constructed: false, capture: "maskGenOid"}, {name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier.params", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm", tagClass: i.Class.UNIVERSAL, type: i.Type.OID, constructed: false, capture: "maskGenHashOid"}]}]}]}, {name: "rsapss.saltLength", tagClass: i.Class.CONTEXT_SPECIFIC, type: 2, optional: true, value: [{name: "rsapss.saltLength.saltLength", tagClass: i.Class.UNIVERSAL, type: i.Class.INTEGER, constructed: false, capture: "saltLength"}]}, {name: "rsapss.trailerField", tagClass: i.Class.CONTEXT_SPECIFIC, type: 3, optional: true, value: [{name: "rsapss.trailer.trailer", tagClass: i.Class.UNIVERSAL, type: i.Class.INTEGER, constructed: false, capture: "trailer"}]}]}, f = {name: "CertificationRequestInfo", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, captureAsn1: "certificationRequestInfo", value: [{name: "CertificationRequestInfo.integer", tagClass: i.Class.UNIVERSAL, type: i.Type.INTEGER, constructed: false, capture: "certificationRequestInfoVersion"}, {name: "CertificationRequestInfo.subject", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, captureAsn1: "certificationRequestInfoSubject"}, c, {name: "CertificationRequestInfo.attributes", tagClass: i.Class.CONTEXT_SPECIFIC, type: 0, constructed: true, optional: true, capture: "certificationRequestInfoAttributes", value: [{name: "CertificationRequestInfo.attributes", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "CertificationRequestInfo.attributes.type", tagClass: i.Class.UNIVERSAL, type: i.Type.OID, constructed: false}, {name: "CertificationRequestInfo.attributes.value", tagClass: i.Class.UNIVERSAL, type: i.Type.SET, constructed: true}]}]}]}, d = {name: "CertificationRequest", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, captureAsn1: "csr", value: [f, {name: "CertificationRequest.signatureAlgorithm", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "CertificationRequest.signatureAlgorithm.algorithm", tagClass: i.Class.UNIVERSAL, type: i.Type.OID, constructed: false, capture: "csrSignatureOid"}, {name: "CertificationRequest.signatureAlgorithm.parameters", tagClass: i.Class.UNIVERSAL, optional: true, captureAsn1: "csrSignatureParams"}]}, {name: "CertificationRequest.signature", tagClass: i.Class.UNIVERSAL, type: i.Type.BITSTRING, constructed: false, captureBitStringValue: "csrSignature"}]};
      function l(e2, t2) {
        typeof t2 == "string" && (t2 = {shortName: t2});
        for (var r2, n2 = null, i2 = 0; n2 === null && i2 < e2.attributes.length; ++i2)
          r2 = e2.attributes[i2], (t2.type && t2.type === r2.type || t2.name && t2.name === r2.name || t2.shortName && t2.shortName === r2.shortName) && (n2 = r2);
        return n2;
      }
      s.RDNAttributesAsArray = function(e2, t2) {
        for (var r2, n2, s2, c2 = [], u2 = 0; u2 < e2.value.length; ++u2) {
          r2 = e2.value[u2];
          for (var h2 = 0; h2 < r2.value.length; ++h2)
            s2 = {}, n2 = r2.value[h2], s2.type = i.derToOid(n2.value[0].value), s2.value = n2.value[1].value, s2.valueTagClass = n2.value[1].type, s2.type in o && (s2.name = o[s2.type], s2.name in a && (s2.shortName = a[s2.name])), t2 && (t2.update(s2.type), t2.update(s2.value)), c2.push(s2);
        }
        return c2;
      }, s.CRIAttributesAsArray = function(e2) {
        for (var t2 = [], r2 = 0; r2 < e2.length; ++r2)
          for (var n2 = e2[r2], c2 = i.derToOid(n2.value[0].value), u2 = n2.value[1].value, h2 = 0; h2 < u2.length; ++h2) {
            var f2 = {};
            if (f2.type = c2, f2.value = u2[h2].value, f2.valueTagClass = u2[h2].type, f2.type in o && (f2.name = o[f2.type], f2.name in a && (f2.shortName = a[f2.name])), f2.type === o.extensionRequest) {
              f2.extensions = [];
              for (var d2 = 0; d2 < f2.value.length; ++d2)
                f2.extensions.push(s.certificateExtensionFromAsn1(f2.value[d2]));
            }
            t2.push(f2);
          }
        return t2;
      };
      var p = function(e2, t2, r2) {
        var n2 = {};
        if (e2 !== o["RSASSA-PSS"])
          return n2;
        r2 && (n2 = {hash: {algorithmOid: o.sha1}, mgf: {algorithmOid: o.mgf1, hash: {algorithmOid: o.sha1}}, saltLength: 20});
        var s2 = {}, a2 = [];
        if (!i.validate(t2, h, s2, a2)) {
          var c2 = new Error("Cannot read RSASSA-PSS parameter block.");
          throw c2.errors = a2, c2;
        }
        return s2.hashOid !== void 0 && (n2.hash = n2.hash || {}, n2.hash.algorithmOid = i.derToOid(s2.hashOid)), s2.maskGenOid !== void 0 && (n2.mgf = n2.mgf || {}, n2.mgf.algorithmOid = i.derToOid(s2.maskGenOid), n2.mgf.hash = n2.mgf.hash || {}, n2.mgf.hash.algorithmOid = i.derToOid(s2.maskGenHashOid)), s2.saltLength !== void 0 && (n2.saltLength = s2.saltLength.charCodeAt(0)), n2;
      };
      function y(e2) {
        for (var t2, r2, s2 = i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, []), o2 = e2.attributes, a2 = 0; a2 < o2.length; ++a2) {
          var c2 = (t2 = o2[a2]).value, u2 = i.Type.PRINTABLESTRING;
          "valueTagClass" in t2 && (u2 = t2.valueTagClass) === i.Type.UTF8 && (c2 = n.util.encodeUtf8(c2)), r2 = i.create(i.Class.UNIVERSAL, i.Type.SET, true, [i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(t2.type).getBytes()), i.create(i.Class.UNIVERSAL, u2, false, c2)])]), s2.value.push(r2);
        }
        return s2;
      }
      function g(e2) {
        for (var t2, r2 = 0; r2 < e2.length; ++r2) {
          if ((t2 = e2[r2]).name === void 0 && (t2.type && t2.type in s.oids ? t2.name = s.oids[t2.type] : t2.shortName && t2.shortName in a && (t2.name = s.oids[a[t2.shortName]])), t2.type === void 0) {
            if (!t2.name || !(t2.name in s.oids))
              throw (c2 = new Error("Attribute type not specified.")).attribute = t2, c2;
            t2.type = s.oids[t2.name];
          }
          if (t2.shortName === void 0 && t2.name && t2.name in a && (t2.shortName = a[t2.name]), t2.type === o.extensionRequest && (t2.valueConstructed = true, t2.valueTagClass = i.Type.SEQUENCE, !t2.value && t2.extensions)) {
            t2.value = [];
            for (var n2 = 0; n2 < t2.extensions.length; ++n2)
              t2.value.push(s.certificateExtensionToAsn1(b(t2.extensions[n2])));
          }
          var c2;
          if (t2.value === void 0)
            throw (c2 = new Error("Attribute value not specified.")).attribute = t2, c2;
        }
      }
      function b(e2, t2) {
        if (t2 = t2 || {}, e2.name === void 0 && e2.id && e2.id in s.oids && (e2.name = s.oids[e2.id]), e2.id === void 0) {
          if (!e2.name || !(e2.name in s.oids))
            throw (_2 = new Error("Extension ID not specified.")).extension = e2, _2;
          e2.id = s.oids[e2.name];
        }
        if (e2.value !== void 0)
          return e2;
        if (e2.name === "keyUsage") {
          var r2 = 0, a2 = 0, c2 = 0;
          e2.digitalSignature && (a2 |= 128, r2 = 7), e2.nonRepudiation && (a2 |= 64, r2 = 6), e2.keyEncipherment && (a2 |= 32, r2 = 5), e2.dataEncipherment && (a2 |= 16, r2 = 4), e2.keyAgreement && (a2 |= 8, r2 = 3), e2.keyCertSign && (a2 |= 4, r2 = 2), e2.cRLSign && (a2 |= 2, r2 = 1), e2.encipherOnly && (a2 |= 1, r2 = 0), e2.decipherOnly && (c2 |= 128, r2 = 7);
          var u2 = String.fromCharCode(r2);
          c2 !== 0 ? u2 += String.fromCharCode(a2) + String.fromCharCode(c2) : a2 !== 0 && (u2 += String.fromCharCode(a2)), e2.value = i.create(i.Class.UNIVERSAL, i.Type.BITSTRING, false, u2);
        } else if (e2.name === "basicConstraints")
          e2.value = i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, []), e2.cA && e2.value.value.push(i.create(i.Class.UNIVERSAL, i.Type.BOOLEAN, false, String.fromCharCode(255))), "pathLenConstraint" in e2 && e2.value.value.push(i.create(i.Class.UNIVERSAL, i.Type.INTEGER, false, i.integerToDer(e2.pathLenConstraint).getBytes()));
        else if (e2.name === "extKeyUsage") {
          e2.value = i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, []);
          var h2 = e2.value.value;
          for (var f2 in e2)
            e2[f2] === true && (f2 in o ? h2.push(i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(o[f2]).getBytes())) : f2.indexOf(".") !== -1 && h2.push(i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(f2).getBytes())));
        } else if (e2.name === "nsCertType") {
          r2 = 0, a2 = 0;
          e2.client && (a2 |= 128, r2 = 7), e2.server && (a2 |= 64, r2 = 6), e2.email && (a2 |= 32, r2 = 5), e2.objsign && (a2 |= 16, r2 = 4), e2.reserved && (a2 |= 8, r2 = 3), e2.sslCA && (a2 |= 4, r2 = 2), e2.emailCA && (a2 |= 2, r2 = 1), e2.objCA && (a2 |= 1, r2 = 0);
          u2 = String.fromCharCode(r2);
          a2 !== 0 && (u2 += String.fromCharCode(a2)), e2.value = i.create(i.Class.UNIVERSAL, i.Type.BITSTRING, false, u2);
        } else if (e2.name === "subjectAltName" || e2.name === "issuerAltName") {
          e2.value = i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, []);
          for (var d2 = 0; d2 < e2.altNames.length; ++d2) {
            u2 = (m2 = e2.altNames[d2]).value;
            if (m2.type === 7 && m2.ip) {
              if ((u2 = n.util.bytesFromIP(m2.ip)) === null)
                throw (_2 = new Error('Extension "ip" value is not a valid IPv4 or IPv6 address.')).extension = e2, _2;
            } else
              m2.type === 8 && (u2 = m2.oid ? i.oidToDer(i.oidToDer(m2.oid)) : i.oidToDer(u2));
            e2.value.value.push(i.create(i.Class.CONTEXT_SPECIFIC, m2.type, false, u2));
          }
        } else if (e2.name === "nsComment" && t2.cert) {
          if (!/^[\x00-\x7F]*$/.test(e2.comment) || e2.comment.length < 1 || e2.comment.length > 128)
            throw new Error('Invalid "nsComment" content.');
          e2.value = i.create(i.Class.UNIVERSAL, i.Type.IA5STRING, false, e2.comment);
        } else if (e2.name === "subjectKeyIdentifier" && t2.cert) {
          var l2 = t2.cert.generateSubjectKeyIdentifier();
          e2.subjectKeyIdentifier = l2.toHex(), e2.value = i.create(i.Class.UNIVERSAL, i.Type.OCTETSTRING, false, l2.getBytes());
        } else if (e2.name === "authorityKeyIdentifier" && t2.cert) {
          e2.value = i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, []);
          h2 = e2.value.value;
          if (e2.keyIdentifier) {
            var p2 = e2.keyIdentifier === true ? t2.cert.generateSubjectKeyIdentifier().getBytes() : e2.keyIdentifier;
            h2.push(i.create(i.Class.CONTEXT_SPECIFIC, 0, false, p2));
          }
          if (e2.authorityCertIssuer) {
            var g2 = [i.create(i.Class.CONTEXT_SPECIFIC, 4, true, [y(e2.authorityCertIssuer === true ? t2.cert.issuer : e2.authorityCertIssuer)])];
            h2.push(i.create(i.Class.CONTEXT_SPECIFIC, 1, true, g2));
          }
          if (e2.serialNumber) {
            var b2 = n.util.hexToBytes(e2.serialNumber === true ? t2.cert.serialNumber : e2.serialNumber);
            h2.push(i.create(i.Class.CONTEXT_SPECIFIC, 2, false, b2));
          }
        } else if (e2.name === "cRLDistributionPoints") {
          e2.value = i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, []);
          h2 = e2.value.value;
          var m2, v2 = i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, []), w2 = i.create(i.Class.CONTEXT_SPECIFIC, 0, true, []);
          for (d2 = 0; d2 < e2.altNames.length; ++d2) {
            u2 = (m2 = e2.altNames[d2]).value;
            if (m2.type === 7 && m2.ip) {
              if ((u2 = n.util.bytesFromIP(m2.ip)) === null)
                throw (_2 = new Error('Extension "ip" value is not a valid IPv4 or IPv6 address.')).extension = e2, _2;
            } else
              m2.type === 8 && (u2 = m2.oid ? i.oidToDer(i.oidToDer(m2.oid)) : i.oidToDer(u2));
            w2.value.push(i.create(i.Class.CONTEXT_SPECIFIC, m2.type, false, u2));
          }
          v2.value.push(i.create(i.Class.CONTEXT_SPECIFIC, 0, true, [w2])), h2.push(v2);
        }
        var _2;
        if (e2.value === void 0)
          throw (_2 = new Error("Extension value not specified.")).extension = e2, _2;
        return e2;
      }
      function m(e2, t2) {
        switch (e2) {
          case o["RSASSA-PSS"]:
            var r2 = [];
            return t2.hash.algorithmOid !== void 0 && r2.push(i.create(i.Class.CONTEXT_SPECIFIC, 0, true, [i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(t2.hash.algorithmOid).getBytes()), i.create(i.Class.UNIVERSAL, i.Type.NULL, false, "")])])), t2.mgf.algorithmOid !== void 0 && r2.push(i.create(i.Class.CONTEXT_SPECIFIC, 1, true, [i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(t2.mgf.algorithmOid).getBytes()), i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(t2.mgf.hash.algorithmOid).getBytes()), i.create(i.Class.UNIVERSAL, i.Type.NULL, false, "")])])])), t2.saltLength !== void 0 && r2.push(i.create(i.Class.CONTEXT_SPECIFIC, 2, true, [i.create(i.Class.UNIVERSAL, i.Type.INTEGER, false, i.integerToDer(t2.saltLength).getBytes())])), i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, r2);
          default:
            return i.create(i.Class.UNIVERSAL, i.Type.NULL, false, "");
        }
      }
      function v(e2) {
        var t2 = i.create(i.Class.CONTEXT_SPECIFIC, 0, true, []);
        if (e2.attributes.length === 0)
          return t2;
        for (var r2 = e2.attributes, s2 = 0; s2 < r2.length; ++s2) {
          var o2 = r2[s2], a2 = o2.value, c2 = i.Type.UTF8;
          "valueTagClass" in o2 && (c2 = o2.valueTagClass), c2 === i.Type.UTF8 && (a2 = n.util.encodeUtf8(a2));
          var u2 = false;
          "valueConstructed" in o2 && (u2 = o2.valueConstructed);
          var h2 = i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(o2.type).getBytes()), i.create(i.Class.UNIVERSAL, i.Type.SET, true, [i.create(i.Class.UNIVERSAL, c2, u2, a2)])]);
          t2.value.push(h2);
        }
        return t2;
      }
      s.certificateFromPem = function(e2, t2, r2) {
        var o2 = n.pem.decode(e2)[0];
        if (o2.type !== "CERTIFICATE" && o2.type !== "X509 CERTIFICATE" && o2.type !== "TRUSTED CERTIFICATE") {
          var a2 = new Error('Could not convert certificate from PEM; PEM header type is not "CERTIFICATE", "X509 CERTIFICATE", or "TRUSTED CERTIFICATE".');
          throw a2.headerType = o2.type, a2;
        }
        if (o2.procType && o2.procType.type === "ENCRYPTED")
          throw new Error("Could not convert certificate from PEM; PEM is encrypted.");
        var c2 = i.fromDer(o2.body, r2);
        return s.certificateFromAsn1(c2, t2);
      }, s.certificateToPem = function(e2, t2) {
        var r2 = {type: "CERTIFICATE", body: i.toDer(s.certificateToAsn1(e2)).getBytes()};
        return n.pem.encode(r2, {maxline: t2});
      }, s.publicKeyFromPem = function(e2) {
        var t2 = n.pem.decode(e2)[0];
        if (t2.type !== "PUBLIC KEY" && t2.type !== "RSA PUBLIC KEY") {
          var r2 = new Error('Could not convert public key from PEM; PEM header type is not "PUBLIC KEY" or "RSA PUBLIC KEY".');
          throw r2.headerType = t2.type, r2;
        }
        if (t2.procType && t2.procType.type === "ENCRYPTED")
          throw new Error("Could not convert public key from PEM; PEM is encrypted.");
        var o2 = i.fromDer(t2.body);
        return s.publicKeyFromAsn1(o2);
      }, s.publicKeyToPem = function(e2, t2) {
        var r2 = {type: "PUBLIC KEY", body: i.toDer(s.publicKeyToAsn1(e2)).getBytes()};
        return n.pem.encode(r2, {maxline: t2});
      }, s.publicKeyToRSAPublicKeyPem = function(e2, t2) {
        var r2 = {type: "RSA PUBLIC KEY", body: i.toDer(s.publicKeyToRSAPublicKey(e2)).getBytes()};
        return n.pem.encode(r2, {maxline: t2});
      }, s.getPublicKeyFingerprint = function(e2, t2) {
        var r2, o2 = (t2 = t2 || {}).md || n.md.sha1.create();
        switch (t2.type || "RSAPublicKey") {
          case "RSAPublicKey":
            r2 = i.toDer(s.publicKeyToRSAPublicKey(e2)).getBytes();
            break;
          case "SubjectPublicKeyInfo":
            r2 = i.toDer(s.publicKeyToAsn1(e2)).getBytes();
            break;
          default:
            throw new Error('Unknown fingerprint type "' + t2.type + '".');
        }
        o2.start(), o2.update(r2);
        var a2 = o2.digest();
        if (t2.encoding === "hex") {
          var c2 = a2.toHex();
          return t2.delimiter ? c2.match(/.{2}/g).join(t2.delimiter) : c2;
        }
        if (t2.encoding === "binary")
          return a2.getBytes();
        if (t2.encoding)
          throw new Error('Unknown encoding "' + t2.encoding + '".');
        return a2;
      }, s.certificationRequestFromPem = function(e2, t2, r2) {
        var o2 = n.pem.decode(e2)[0];
        if (o2.type !== "CERTIFICATE REQUEST") {
          var a2 = new Error('Could not convert certification request from PEM; PEM header type is not "CERTIFICATE REQUEST".');
          throw a2.headerType = o2.type, a2;
        }
        if (o2.procType && o2.procType.type === "ENCRYPTED")
          throw new Error("Could not convert certification request from PEM; PEM is encrypted.");
        var c2 = i.fromDer(o2.body, r2);
        return s.certificationRequestFromAsn1(c2, t2);
      }, s.certificationRequestToPem = function(e2, t2) {
        var r2 = {type: "CERTIFICATE REQUEST", body: i.toDer(s.certificationRequestToAsn1(e2)).getBytes()};
        return n.pem.encode(r2, {maxline: t2});
      }, s.createCertificate = function() {
        var e2 = {version: 2, serialNumber: "00", signatureOid: null, signature: null, siginfo: {}};
        return e2.siginfo.algorithmOid = null, e2.validity = {}, e2.validity.notBefore = new Date(), e2.validity.notAfter = new Date(), e2.issuer = {}, e2.issuer.getField = function(t2) {
          return l(e2.issuer, t2);
        }, e2.issuer.addField = function(t2) {
          g([t2]), e2.issuer.attributes.push(t2);
        }, e2.issuer.attributes = [], e2.issuer.hash = null, e2.subject = {}, e2.subject.getField = function(t2) {
          return l(e2.subject, t2);
        }, e2.subject.addField = function(t2) {
          g([t2]), e2.subject.attributes.push(t2);
        }, e2.subject.attributes = [], e2.subject.hash = null, e2.extensions = [], e2.publicKey = null, e2.md = null, e2.setSubject = function(t2, r2) {
          g(t2), e2.subject.attributes = t2, delete e2.subject.uniqueId, r2 && (e2.subject.uniqueId = r2), e2.subject.hash = null;
        }, e2.setIssuer = function(t2, r2) {
          g(t2), e2.issuer.attributes = t2, delete e2.issuer.uniqueId, r2 && (e2.issuer.uniqueId = r2), e2.issuer.hash = null;
        }, e2.setExtensions = function(t2) {
          for (var r2 = 0; r2 < t2.length; ++r2)
            b(t2[r2], {cert: e2});
          e2.extensions = t2;
        }, e2.getExtension = function(t2) {
          typeof t2 == "string" && (t2 = {name: t2});
          for (var r2, n2 = null, i2 = 0; n2 === null && i2 < e2.extensions.length; ++i2)
            r2 = e2.extensions[i2], (t2.id && r2.id === t2.id || t2.name && r2.name === t2.name) && (n2 = r2);
          return n2;
        }, e2.sign = function(t2, r2) {
          e2.md = r2 || n.md.sha1.create();
          var a2 = o[e2.md.algorithm + "WithRSAEncryption"];
          if (!a2) {
            var c2 = new Error("Could not compute certificate digest. Unknown message digest algorithm OID.");
            throw c2.algorithm = e2.md.algorithm, c2;
          }
          e2.signatureOid = e2.siginfo.algorithmOid = a2, e2.tbsCertificate = s.getTBSCertificate(e2);
          var u2 = i.toDer(e2.tbsCertificate);
          e2.md.update(u2.getBytes()), e2.signature = t2.sign(e2.md);
        }, e2.verify = function(t2) {
          var r2 = false;
          if (!e2.issued(t2)) {
            var a2 = t2.issuer, c2 = e2.subject;
            throw (y2 = new Error("The parent certificate did not issue the given child certificate; the child certificate's issuer does not match the parent's subject.")).expectedIssuer = a2.attributes, y2.actualIssuer = c2.attributes, y2;
          }
          var u2 = t2.md;
          if (u2 === null) {
            if (t2.signatureOid in o)
              switch (o[t2.signatureOid]) {
                case "sha1WithRSAEncryption":
                  u2 = n.md.sha1.create();
                  break;
                case "md5WithRSAEncryption":
                  u2 = n.md.md5.create();
                  break;
                case "sha256WithRSAEncryption":
                  u2 = n.md.sha256.create();
                  break;
                case "sha384WithRSAEncryption":
                  u2 = n.md.sha384.create();
                  break;
                case "sha512WithRSAEncryption":
                  u2 = n.md.sha512.create();
                  break;
                case "RSASSA-PSS":
                  u2 = n.md.sha256.create();
              }
            if (u2 === null)
              throw (y2 = new Error("Could not compute certificate digest. Unknown signature OID.")).signatureOid = t2.signatureOid, y2;
            var h2 = t2.tbsCertificate || s.getTBSCertificate(t2), f2 = i.toDer(h2);
            u2.update(f2.getBytes());
          }
          if (u2 !== null) {
            var d2;
            switch (t2.signatureOid) {
              case o.sha1WithRSAEncryption:
                d2 = void 0;
                break;
              case o["RSASSA-PSS"]:
                var l2, p2, y2;
                if ((l2 = o[t2.signatureParameters.mgf.hash.algorithmOid]) === void 0 || n.md[l2] === void 0)
                  throw (y2 = new Error("Unsupported MGF hash function.")).oid = t2.signatureParameters.mgf.hash.algorithmOid, y2.name = l2, y2;
                if ((p2 = o[t2.signatureParameters.mgf.algorithmOid]) === void 0 || n.mgf[p2] === void 0)
                  throw (y2 = new Error("Unsupported MGF function.")).oid = t2.signatureParameters.mgf.algorithmOid, y2.name = p2, y2;
                if (p2 = n.mgf[p2].create(n.md[l2].create()), (l2 = o[t2.signatureParameters.hash.algorithmOid]) === void 0 || n.md[l2] === void 0)
                  throw {message: "Unsupported RSASSA-PSS hash function.", oid: t2.signatureParameters.hash.algorithmOid, name: l2};
                d2 = n.pss.create(n.md[l2].create(), p2, t2.signatureParameters.saltLength);
            }
            r2 = e2.publicKey.verify(u2.digest().getBytes(), t2.signature, d2);
          }
          return r2;
        }, e2.isIssuer = function(t2) {
          var r2 = false, n2 = e2.issuer, i2 = t2.subject;
          if (n2.hash && i2.hash)
            r2 = n2.hash === i2.hash;
          else if (n2.attributes.length === i2.attributes.length) {
            var s2, o2;
            r2 = true;
            for (var a2 = 0; r2 && a2 < n2.attributes.length; ++a2)
              s2 = n2.attributes[a2], o2 = i2.attributes[a2], s2.type === o2.type && s2.value === o2.value || (r2 = false);
          }
          return r2;
        }, e2.issued = function(t2) {
          return t2.isIssuer(e2);
        }, e2.generateSubjectKeyIdentifier = function() {
          return s.getPublicKeyFingerprint(e2.publicKey, {type: "RSAPublicKey"});
        }, e2.verifySubjectKeyIdentifier = function() {
          for (var t2 = o.subjectKeyIdentifier, r2 = 0; r2 < e2.extensions.length; ++r2) {
            var i2 = e2.extensions[r2];
            if (i2.id === t2) {
              var s2 = e2.generateSubjectKeyIdentifier().getBytes();
              return n.util.hexToBytes(i2.subjectKeyIdentifier) === s2;
            }
          }
          return false;
        }, e2;
      }, s.certificateFromAsn1 = function(e2, t2) {
        var r2 = {}, a2 = [];
        if (!i.validate(e2, u, r2, a2))
          throw (d2 = new Error("Cannot read X.509 certificate. ASN.1 object is not an X509v3 Certificate.")).errors = a2, d2;
        if (i.derToOid(r2.publicKeyOid) !== s.oids.rsaEncryption)
          throw new Error("Cannot read public key. OID is not RSA.");
        var c2 = s.createCertificate();
        c2.version = r2.certVersion ? r2.certVersion.charCodeAt(0) : 0;
        var h2 = n.util.createBuffer(r2.certSerialNumber);
        c2.serialNumber = h2.toHex(), c2.signatureOid = n.asn1.derToOid(r2.certSignatureOid), c2.signatureParameters = p(c2.signatureOid, r2.certSignatureParams, true), c2.siginfo.algorithmOid = n.asn1.derToOid(r2.certinfoSignatureOid), c2.siginfo.parameters = p(c2.siginfo.algorithmOid, r2.certinfoSignatureParams, false), c2.signature = r2.certSignature;
        var f2 = [];
        if (r2.certValidity1UTCTime !== void 0 && f2.push(i.utcTimeToDate(r2.certValidity1UTCTime)), r2.certValidity2GeneralizedTime !== void 0 && f2.push(i.generalizedTimeToDate(r2.certValidity2GeneralizedTime)), r2.certValidity3UTCTime !== void 0 && f2.push(i.utcTimeToDate(r2.certValidity3UTCTime)), r2.certValidity4GeneralizedTime !== void 0 && f2.push(i.generalizedTimeToDate(r2.certValidity4GeneralizedTime)), f2.length > 2)
          throw new Error("Cannot read notBefore/notAfter validity times; more than two times were provided in the certificate.");
        if (f2.length < 2)
          throw new Error("Cannot read notBefore/notAfter validity times; they were not provided as either UTCTime or GeneralizedTime.");
        if (c2.validity.notBefore = f2[0], c2.validity.notAfter = f2[1], c2.tbsCertificate = r2.tbsCertificate, t2) {
          var d2;
          if (c2.md = null, c2.signatureOid in o)
            switch (o[c2.signatureOid]) {
              case "sha1WithRSAEncryption":
                c2.md = n.md.sha1.create();
                break;
              case "md5WithRSAEncryption":
                c2.md = n.md.md5.create();
                break;
              case "sha256WithRSAEncryption":
                c2.md = n.md.sha256.create();
                break;
              case "sha384WithRSAEncryption":
                c2.md = n.md.sha384.create();
                break;
              case "sha512WithRSAEncryption":
                c2.md = n.md.sha512.create();
                break;
              case "RSASSA-PSS":
                c2.md = n.md.sha256.create();
            }
          if (c2.md === null)
            throw (d2 = new Error("Could not compute certificate digest. Unknown signature OID.")).signatureOid = c2.signatureOid, d2;
          var y2 = i.toDer(c2.tbsCertificate);
          c2.md.update(y2.getBytes());
        }
        var b2 = n.md.sha1.create();
        c2.issuer.getField = function(e3) {
          return l(c2.issuer, e3);
        }, c2.issuer.addField = function(e3) {
          g([e3]), c2.issuer.attributes.push(e3);
        }, c2.issuer.attributes = s.RDNAttributesAsArray(r2.certIssuer, b2), r2.certIssuerUniqueId && (c2.issuer.uniqueId = r2.certIssuerUniqueId), c2.issuer.hash = b2.digest().toHex();
        var m2 = n.md.sha1.create();
        return c2.subject.getField = function(e3) {
          return l(c2.subject, e3);
        }, c2.subject.addField = function(e3) {
          g([e3]), c2.subject.attributes.push(e3);
        }, c2.subject.attributes = s.RDNAttributesAsArray(r2.certSubject, m2), r2.certSubjectUniqueId && (c2.subject.uniqueId = r2.certSubjectUniqueId), c2.subject.hash = m2.digest().toHex(), r2.certExtensions ? c2.extensions = s.certificateExtensionsFromAsn1(r2.certExtensions) : c2.extensions = [], c2.publicKey = s.publicKeyFromAsn1(r2.subjectPublicKeyInfo), c2;
      }, s.certificateExtensionsFromAsn1 = function(e2) {
        for (var t2 = [], r2 = 0; r2 < e2.value.length; ++r2)
          for (var n2 = e2.value[r2], i2 = 0; i2 < n2.value.length; ++i2)
            t2.push(s.certificateExtensionFromAsn1(n2.value[i2]));
        return t2;
      }, s.certificateExtensionFromAsn1 = function(e2) {
        var t2 = {};
        if (t2.id = i.derToOid(e2.value[0].value), t2.critical = false, e2.value[1].type === i.Type.BOOLEAN ? (t2.critical = e2.value[1].value.charCodeAt(0) !== 0, t2.value = e2.value[2].value) : t2.value = e2.value[1].value, t2.id in o) {
          if (t2.name = o[t2.id], t2.name === "keyUsage") {
            var r2 = 0, s2 = 0;
            (c2 = i.fromDer(t2.value)).value.length > 1 && (r2 = c2.value.charCodeAt(1), s2 = c2.value.length > 2 ? c2.value.charCodeAt(2) : 0), t2.digitalSignature = (128 & r2) == 128, t2.nonRepudiation = (64 & r2) == 64, t2.keyEncipherment = (32 & r2) == 32, t2.dataEncipherment = (16 & r2) == 16, t2.keyAgreement = (8 & r2) == 8, t2.keyCertSign = (4 & r2) == 4, t2.cRLSign = (2 & r2) == 2, t2.encipherOnly = (1 & r2) == 1, t2.decipherOnly = (128 & s2) == 128;
          } else if (t2.name === "basicConstraints") {
            (c2 = i.fromDer(t2.value)).value.length > 0 && c2.value[0].type === i.Type.BOOLEAN ? t2.cA = c2.value[0].value.charCodeAt(0) !== 0 : t2.cA = false;
            var a2 = null;
            c2.value.length > 0 && c2.value[0].type === i.Type.INTEGER ? a2 = c2.value[0].value : c2.value.length > 1 && (a2 = c2.value[1].value), a2 !== null && (t2.pathLenConstraint = i.derToInteger(a2));
          } else if (t2.name === "extKeyUsage")
            for (var c2 = i.fromDer(t2.value), u2 = 0; u2 < c2.value.length; ++u2) {
              var h2 = i.derToOid(c2.value[u2].value);
              h2 in o ? t2[o[h2]] = true : t2[h2] = true;
            }
          else if (t2.name === "nsCertType") {
            r2 = 0;
            (c2 = i.fromDer(t2.value)).value.length > 1 && (r2 = c2.value.charCodeAt(1)), t2.client = (128 & r2) == 128, t2.server = (64 & r2) == 64, t2.email = (32 & r2) == 32, t2.objsign = (16 & r2) == 16, t2.reserved = (8 & r2) == 8, t2.sslCA = (4 & r2) == 4, t2.emailCA = (2 & r2) == 2, t2.objCA = (1 & r2) == 1;
          } else if (t2.name === "subjectAltName" || t2.name === "issuerAltName") {
            var f2;
            t2.altNames = [];
            c2 = i.fromDer(t2.value);
            for (var d2 = 0; d2 < c2.value.length; ++d2) {
              var l2 = {type: (f2 = c2.value[d2]).type, value: f2.value};
              switch (t2.altNames.push(l2), f2.type) {
                case 1:
                case 2:
                case 6:
                  break;
                case 7:
                  l2.ip = n.util.bytesToIP(f2.value);
                  break;
                case 8:
                  l2.oid = i.derToOid(f2.value);
              }
            }
          } else if (t2.name === "subjectKeyIdentifier") {
            c2 = i.fromDer(t2.value);
            t2.subjectKeyIdentifier = n.util.bytesToHex(c2.value);
          }
        }
        return t2;
      }, s.certificationRequestFromAsn1 = function(e2, t2) {
        var r2 = {}, a2 = [];
        if (!i.validate(e2, d, r2, a2))
          throw (u2 = new Error("Cannot read PKCS#10 certificate request. ASN.1 object is not a PKCS#10 CertificationRequest.")).errors = a2, u2;
        if (i.derToOid(r2.publicKeyOid) !== s.oids.rsaEncryption)
          throw new Error("Cannot read public key. OID is not RSA.");
        var c2 = s.createCertificationRequest();
        if (c2.version = r2.csrVersion ? r2.csrVersion.charCodeAt(0) : 0, c2.signatureOid = n.asn1.derToOid(r2.csrSignatureOid), c2.signatureParameters = p(c2.signatureOid, r2.csrSignatureParams, true), c2.siginfo.algorithmOid = n.asn1.derToOid(r2.csrSignatureOid), c2.siginfo.parameters = p(c2.siginfo.algorithmOid, r2.csrSignatureParams, false), c2.signature = r2.csrSignature, c2.certificationRequestInfo = r2.certificationRequestInfo, t2) {
          var u2;
          if (c2.md = null, c2.signatureOid in o)
            switch (o[c2.signatureOid]) {
              case "sha1WithRSAEncryption":
                c2.md = n.md.sha1.create();
                break;
              case "md5WithRSAEncryption":
                c2.md = n.md.md5.create();
                break;
              case "sha256WithRSAEncryption":
                c2.md = n.md.sha256.create();
                break;
              case "sha384WithRSAEncryption":
                c2.md = n.md.sha384.create();
                break;
              case "sha512WithRSAEncryption":
                c2.md = n.md.sha512.create();
                break;
              case "RSASSA-PSS":
                c2.md = n.md.sha256.create();
            }
          if (c2.md === null)
            throw (u2 = new Error("Could not compute certification request digest. Unknown signature OID.")).signatureOid = c2.signatureOid, u2;
          var h2 = i.toDer(c2.certificationRequestInfo);
          c2.md.update(h2.getBytes());
        }
        var f2 = n.md.sha1.create();
        return c2.subject.getField = function(e3) {
          return l(c2.subject, e3);
        }, c2.subject.addField = function(e3) {
          g([e3]), c2.subject.attributes.push(e3);
        }, c2.subject.attributes = s.RDNAttributesAsArray(r2.certificationRequestInfoSubject, f2), c2.subject.hash = f2.digest().toHex(), c2.publicKey = s.publicKeyFromAsn1(r2.subjectPublicKeyInfo), c2.getAttribute = function(e3) {
          return l(c2, e3);
        }, c2.addAttribute = function(e3) {
          g([e3]), c2.attributes.push(e3);
        }, c2.attributes = s.CRIAttributesAsArray(r2.certificationRequestInfoAttributes || []), c2;
      }, s.createCertificationRequest = function() {
        var e2 = {version: 0, signatureOid: null, signature: null, siginfo: {}};
        return e2.siginfo.algorithmOid = null, e2.subject = {}, e2.subject.getField = function(t2) {
          return l(e2.subject, t2);
        }, e2.subject.addField = function(t2) {
          g([t2]), e2.subject.attributes.push(t2);
        }, e2.subject.attributes = [], e2.subject.hash = null, e2.publicKey = null, e2.attributes = [], e2.getAttribute = function(t2) {
          return l(e2, t2);
        }, e2.addAttribute = function(t2) {
          g([t2]), e2.attributes.push(t2);
        }, e2.md = null, e2.setSubject = function(t2) {
          g(t2), e2.subject.attributes = t2, e2.subject.hash = null;
        }, e2.setAttributes = function(t2) {
          g(t2), e2.attributes = t2;
        }, e2.sign = function(t2, r2) {
          e2.md = r2 || n.md.sha1.create();
          var a2 = o[e2.md.algorithm + "WithRSAEncryption"];
          if (!a2) {
            var c2 = new Error("Could not compute certification request digest. Unknown message digest algorithm OID.");
            throw c2.algorithm = e2.md.algorithm, c2;
          }
          e2.signatureOid = e2.siginfo.algorithmOid = a2, e2.certificationRequestInfo = s.getCertificationRequestInfo(e2);
          var u2 = i.toDer(e2.certificationRequestInfo);
          e2.md.update(u2.getBytes()), e2.signature = t2.sign(e2.md);
        }, e2.verify = function() {
          var t2 = false, r2 = e2.md;
          if (r2 === null) {
            if (e2.signatureOid in o)
              switch (o[e2.signatureOid]) {
                case "sha1WithRSAEncryption":
                  r2 = n.md.sha1.create();
                  break;
                case "md5WithRSAEncryption":
                  r2 = n.md.md5.create();
                  break;
                case "sha256WithRSAEncryption":
                  r2 = n.md.sha256.create();
                  break;
                case "sha384WithRSAEncryption":
                  r2 = n.md.sha384.create();
                  break;
                case "sha512WithRSAEncryption":
                  r2 = n.md.sha512.create();
                  break;
                case "RSASSA-PSS":
                  r2 = n.md.sha256.create();
              }
            if (r2 === null)
              throw (d2 = new Error("Could not compute certification request digest. Unknown signature OID.")).signatureOid = e2.signatureOid, d2;
            var a2 = e2.certificationRequestInfo || s.getCertificationRequestInfo(e2), c2 = i.toDer(a2);
            r2.update(c2.getBytes());
          }
          if (r2 !== null) {
            var u2;
            switch (e2.signatureOid) {
              case o.sha1WithRSAEncryption:
                break;
              case o["RSASSA-PSS"]:
                var h2, f2, d2;
                if ((h2 = o[e2.signatureParameters.mgf.hash.algorithmOid]) === void 0 || n.md[h2] === void 0)
                  throw (d2 = new Error("Unsupported MGF hash function.")).oid = e2.signatureParameters.mgf.hash.algorithmOid, d2.name = h2, d2;
                if ((f2 = o[e2.signatureParameters.mgf.algorithmOid]) === void 0 || n.mgf[f2] === void 0)
                  throw (d2 = new Error("Unsupported MGF function.")).oid = e2.signatureParameters.mgf.algorithmOid, d2.name = f2, d2;
                if (f2 = n.mgf[f2].create(n.md[h2].create()), (h2 = o[e2.signatureParameters.hash.algorithmOid]) === void 0 || n.md[h2] === void 0)
                  throw (d2 = new Error("Unsupported RSASSA-PSS hash function.")).oid = e2.signatureParameters.hash.algorithmOid, d2.name = h2, d2;
                u2 = n.pss.create(n.md[h2].create(), f2, e2.signatureParameters.saltLength);
            }
            t2 = e2.publicKey.verify(r2.digest().getBytes(), e2.signature, u2);
          }
          return t2;
        }, e2;
      };
      var w = new Date("1950-01-01T00:00:00Z"), _ = new Date("2050-01-01T00:00:00Z");
      function E(e2) {
        return e2 >= w && e2 < _ ? i.create(i.Class.UNIVERSAL, i.Type.UTCTIME, false, i.dateToUtcTime(e2)) : i.create(i.Class.UNIVERSAL, i.Type.GENERALIZEDTIME, false, i.dateToGeneralizedTime(e2));
      }
      s.getTBSCertificate = function(e2) {
        var t2 = E(e2.validity.notBefore), r2 = E(e2.validity.notAfter), o2 = i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.CONTEXT_SPECIFIC, 0, true, [i.create(i.Class.UNIVERSAL, i.Type.INTEGER, false, i.integerToDer(e2.version).getBytes())]), i.create(i.Class.UNIVERSAL, i.Type.INTEGER, false, n.util.hexToBytes(e2.serialNumber)), i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(e2.siginfo.algorithmOid).getBytes()), m(e2.siginfo.algorithmOid, e2.siginfo.parameters)]), y(e2.issuer), i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [t2, r2]), y(e2.subject), s.publicKeyToAsn1(e2.publicKey)]);
        return e2.issuer.uniqueId && o2.value.push(i.create(i.Class.CONTEXT_SPECIFIC, 1, true, [i.create(i.Class.UNIVERSAL, i.Type.BITSTRING, false, String.fromCharCode(0) + e2.issuer.uniqueId)])), e2.subject.uniqueId && o2.value.push(i.create(i.Class.CONTEXT_SPECIFIC, 2, true, [i.create(i.Class.UNIVERSAL, i.Type.BITSTRING, false, String.fromCharCode(0) + e2.subject.uniqueId)])), e2.extensions.length > 0 && o2.value.push(s.certificateExtensionsToAsn1(e2.extensions)), o2;
      }, s.getCertificationRequestInfo = function(e2) {
        return i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.INTEGER, false, i.integerToDer(e2.version).getBytes()), y(e2.subject), s.publicKeyToAsn1(e2.publicKey), v(e2)]);
      }, s.distinguishedNameToAsn1 = function(e2) {
        return y(e2);
      }, s.certificateToAsn1 = function(e2) {
        var t2 = e2.tbsCertificate || s.getTBSCertificate(e2);
        return i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [t2, i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(e2.signatureOid).getBytes()), m(e2.signatureOid, e2.signatureParameters)]), i.create(i.Class.UNIVERSAL, i.Type.BITSTRING, false, String.fromCharCode(0) + e2.signature)]);
      }, s.certificateExtensionsToAsn1 = function(e2) {
        var t2 = i.create(i.Class.CONTEXT_SPECIFIC, 3, true, []), r2 = i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, []);
        t2.value.push(r2);
        for (var n2 = 0; n2 < e2.length; ++n2)
          r2.value.push(s.certificateExtensionToAsn1(e2[n2]));
        return t2;
      }, s.certificateExtensionToAsn1 = function(e2) {
        var t2 = i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, []);
        t2.value.push(i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(e2.id).getBytes())), e2.critical && t2.value.push(i.create(i.Class.UNIVERSAL, i.Type.BOOLEAN, false, String.fromCharCode(255)));
        var r2 = e2.value;
        return typeof e2.value != "string" && (r2 = i.toDer(r2).getBytes()), t2.value.push(i.create(i.Class.UNIVERSAL, i.Type.OCTETSTRING, false, r2)), t2;
      }, s.certificationRequestToAsn1 = function(e2) {
        var t2 = e2.certificationRequestInfo || s.getCertificationRequestInfo(e2);
        return i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [t2, i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(e2.signatureOid).getBytes()), m(e2.signatureOid, e2.signatureParameters)]), i.create(i.Class.UNIVERSAL, i.Type.BITSTRING, false, String.fromCharCode(0) + e2.signature)]);
      }, s.createCaStore = function(e2) {
        var t2 = {certs: {}};
        function r2(e3) {
          return o2(e3), t2.certs[e3.hash] || null;
        }
        function o2(e3) {
          if (!e3.hash) {
            var t3 = n.md.sha1.create();
            e3.attributes = s.RDNAttributesAsArray(y(e3), t3), e3.hash = t3.digest().toHex();
          }
        }
        if (t2.getIssuer = function(e3) {
          return r2(e3.issuer);
        }, t2.addCertificate = function(e3) {
          if (typeof e3 == "string" && (e3 = n.pki.certificateFromPem(e3)), o2(e3.subject), !t2.hasCertificate(e3))
            if (e3.subject.hash in t2.certs) {
              var r3 = t2.certs[e3.subject.hash];
              n.util.isArray(r3) || (r3 = [r3]), r3.push(e3), t2.certs[e3.subject.hash] = r3;
            } else
              t2.certs[e3.subject.hash] = e3;
        }, t2.hasCertificate = function(e3) {
          typeof e3 == "string" && (e3 = n.pki.certificateFromPem(e3));
          var t3 = r2(e3.subject);
          if (!t3)
            return false;
          n.util.isArray(t3) || (t3 = [t3]);
          for (var o3 = i.toDer(s.certificateToAsn1(e3)).getBytes(), a3 = 0; a3 < t3.length; ++a3) {
            if (o3 === i.toDer(s.certificateToAsn1(t3[a3])).getBytes())
              return true;
          }
          return false;
        }, t2.listAllCertificates = function() {
          var e3 = [];
          for (var r3 in t2.certs)
            if (t2.certs.hasOwnProperty(r3)) {
              var i2 = t2.certs[r3];
              if (n.util.isArray(i2))
                for (var s2 = 0; s2 < i2.length; ++s2)
                  e3.push(i2[s2]);
              else
                e3.push(i2);
            }
          return e3;
        }, t2.removeCertificate = function(e3) {
          var a3;
          if (typeof e3 == "string" && (e3 = n.pki.certificateFromPem(e3)), o2(e3.subject), !t2.hasCertificate(e3))
            return null;
          var c3 = r2(e3.subject);
          if (!n.util.isArray(c3))
            return a3 = t2.certs[e3.subject.hash], delete t2.certs[e3.subject.hash], a3;
          for (var u2 = i.toDer(s.certificateToAsn1(e3)).getBytes(), h2 = 0; h2 < c3.length; ++h2) {
            u2 === i.toDer(s.certificateToAsn1(c3[h2])).getBytes() && (a3 = c3[h2], c3.splice(h2, 1));
          }
          return c3.length === 0 && delete t2.certs[e3.subject.hash], a3;
        }, e2)
          for (var a2 = 0; a2 < e2.length; ++a2) {
            var c2 = e2[a2];
            t2.addCertificate(c2);
          }
        return t2;
      }, s.certificateError = {bad_certificate: "forge.pki.BadCertificate", unsupported_certificate: "forge.pki.UnsupportedCertificate", certificate_revoked: "forge.pki.CertificateRevoked", certificate_expired: "forge.pki.CertificateExpired", certificate_unknown: "forge.pki.CertificateUnknown", unknown_ca: "forge.pki.UnknownCertificateAuthority"}, s.verifyCertificateChain = function(e2, t2, r2) {
        typeof r2 == "function" && (r2 = {verify: r2}), r2 = r2 || {};
        var i2 = (t2 = t2.slice(0)).slice(0), o2 = r2.validityCheckDate;
        o2 === void 0 && (o2 = new Date());
        var a2 = true, c2 = null, u2 = 0;
        do {
          var h2 = t2.shift(), f2 = null, d2 = false;
          if (o2 && (o2 < h2.validity.notBefore || o2 > h2.validity.notAfter) && (c2 = {message: "Certificate is not valid yet or has expired.", error: s.certificateError.certificate_expired, notBefore: h2.validity.notBefore, notAfter: h2.validity.notAfter, now: o2}), c2 === null) {
            if ((f2 = t2[0] || e2.getIssuer(h2)) === null && h2.isIssuer(h2) && (d2 = true, f2 = h2), f2) {
              var l2 = f2;
              n.util.isArray(l2) || (l2 = [l2]);
              for (var p2 = false; !p2 && l2.length > 0; ) {
                f2 = l2.shift();
                try {
                  p2 = f2.verify(h2);
                } catch (E2) {
                }
              }
              p2 || (c2 = {message: "Certificate signature is invalid.", error: s.certificateError.bad_certificate});
            }
            c2 !== null || f2 && !d2 || e2.hasCertificate(h2) || (c2 = {message: "Certificate is not trusted.", error: s.certificateError.unknown_ca});
          }
          if (c2 === null && f2 && !h2.isIssuer(f2) && (c2 = {message: "Certificate issuer is invalid.", error: s.certificateError.bad_certificate}), c2 === null)
            for (var y2 = {keyUsage: true, basicConstraints: true}, g2 = 0; c2 === null && g2 < h2.extensions.length; ++g2) {
              var b2 = h2.extensions[g2];
              b2.critical && !(b2.name in y2) && (c2 = {message: "Certificate has an unsupported critical extension.", error: s.certificateError.unsupported_certificate});
            }
          if (c2 === null && (!a2 || t2.length === 0 && (!f2 || d2))) {
            var m2 = h2.getExtension("basicConstraints"), v2 = h2.getExtension("keyUsage");
            if (v2 !== null && (v2.keyCertSign && m2 !== null || (c2 = {message: "Certificate keyUsage or basicConstraints conflict or indicate that the certificate is not a CA. If the certificate is the only one in the chain or isn't the first then the certificate must be a valid CA.", error: s.certificateError.bad_certificate})), c2 !== null || m2 === null || m2.cA || (c2 = {message: "Certificate basicConstraints indicates the certificate is not a CA.", error: s.certificateError.bad_certificate}), c2 === null && v2 !== null && "pathLenConstraint" in m2)
              u2 - 1 > m2.pathLenConstraint && (c2 = {message: "Certificate basicConstraints pathLenConstraint violated.", error: s.certificateError.bad_certificate});
          }
          var w2 = c2 === null || c2.error, _2 = r2.verify ? r2.verify(w2, u2, i2) : w2;
          if (_2 !== true)
            throw w2 === true && (c2 = {message: "The application rejected the certificate.", error: s.certificateError.bad_certificate}), (_2 || _2 === 0) && (typeof _2 != "object" || n.util.isArray(_2) ? typeof _2 == "string" && (c2.error = _2) : (_2.message && (c2.message = _2.message), _2.error && (c2.error = _2.error))), c2;
          c2 = null, a2 = false, ++u2;
        } while (t2.length > 0);
        return true;
      };
    }, function(e, t, r) {
      "use strict";
      const n = Math.exp;
      e.exports = function(e2) {
        if (typeof e2 != "number")
          throw new Error("must provide a timespan to the moving average constructor");
        if (e2 <= 0)
          throw new Error("must provide a timespan > 0 to the moving average constructor");
        let t2, r2, i = 0, s = 0, o = 0, a = {};
        return a.push = function(a2, c) {
          if (r2) {
            const u = 1 - n(-(a2 - r2) / e2), h = c - t2;
            t2 = u * c + (1 - u) * t2, i = (1 - u) * (i + h * (u * h)), s = Math.sqrt(i), o = t2 + u * h;
          } else
            t2 = c;
          r2 = a2;
        }, a.movingAverage = function() {
          return t2;
        }, a.variance = function() {
          return i;
        }, a.deviation = function() {
          return s;
        }, a.forecast = function() {
          return o;
        }, a;
      };
    }, function(e, t, r) {
      "use strict";
      t.PROTOCOL_ID = "/multistream/1.0.0";
    }, function(e, t, r) {
      "use strict";
      e.exports = {OPEN: "open", CLOSING: "closing", CLOSED: "closed"};
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(1);
      i("libp2p:peer-store").error = i("libp2p:peer-store:error");
      const {EventEmitter: s} = r(14), o = r(7), a = r(907), c = r(912), u = r(913), h = r(914), {ERR_INVALID_PARAMETERS: f} = r(26);
      e.exports = class extends s {
        constructor({peerId: e2}) {
          super(), this._peerId = e2, this.addressBook = new a(this), this.keyBook = new c(this), this.metadataBook = new u(this), this.protoBook = new h(this);
        }
        start() {
        }
        stop() {
        }
        get peers() {
          const e2 = new Set([...this.addressBook.data.keys(), ...this.keyBook.data.keys(), ...this.protoBook.data.keys(), ...this.metadataBook.data.keys()]);
          this._peerId && e2.delete(this._peerId.toB58String());
          const t2 = new Map();
          return e2.forEach((e3) => {
            t2.set(e3, this.get(o.createFromCID(e3)));
          }), t2;
        }
        delete(e2) {
          const t2 = this.addressBook.delete(e2), r2 = this.keyBook.delete(e2), n2 = this.protoBook.delete(e2), i2 = this.metadataBook.delete(e2);
          return t2 || r2 || n2 || i2;
        }
        get(e2) {
          if (!o.isPeerId(e2))
            throw n(new Error("peerId must be an instance of peer-id"), f);
          const t2 = this.keyBook.data.get(e2.toB58String()), r2 = this.addressBook.get(e2), i2 = this.metadataBook.get(e2), s2 = this.protoBook.get(e2);
          if (t2 || r2 || i2 || s2)
            return {id: t2 || e2, addresses: r2 || [], protocols: s2 || [], metadata: i2};
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(11), i = r(7), s = r(908), o = r(909), a = r(910), {ENVELOPE_DOMAIN_PEER_RECORD: c, ENVELOPE_PAYLOAD_TYPE_PEER_RECORD: u} = r(911);
      class h extends s {
        constructor({peerId: e2, multiaddrs: t2 = [], seqNumber: r2 = Date.now()}) {
          super(c, u), this.peerId = e2, this.multiaddrs = t2, this.seqNumber = r2, this._marshal = void 0;
        }
        marshal() {
          return this._marshal || (this._marshal = a.encode({peer_id: this.peerId.toBytes(), seq: this.seqNumber, addresses: this.multiaddrs.map((e2) => ({multiaddr: e2.bytes}))})), this._marshal;
        }
        equals(e2) {
          return !!this.peerId.equals(e2.peerId) && (this.seqNumber === e2.seqNumber && !!o(this.multiaddrs, e2.multiaddrs));
        }
      }
      h.createFromProtobuf = (e2) => {
        const t2 = a.decode(e2), r2 = i.createFromBytes(t2.peer_id), s2 = (t2.addresses || []).map((e3) => n(e3.multiaddr)), o2 = t2.seq;
        return new h({peerId: r2, multiaddrs: s2, seqNumber: o2});
      }, h.DOMAIN = c, e.exports = h;
    }, function(e, t, r) {
      "use strict";
      t.CODE_P2P = 421, t.CODE_CIRCUIT = 290, t.CLOSE_TIMEOUT = 2e3;
    }, function(e, t, r) {
      "use strict";
      const n = r(11), i = r(0), {Address4: s, Address6: o} = r(943), a = {ERR_INVALID_IP_PARAMETER: "ERR_INVALID_IP_PARAMETER", ERR_INVALID_PORT_PARAMETER: "ERR_INVALID_PORT_PARAMETER", ERR_INVALID_IP: "ERR_INVALID_IP"};
      e.exports = function(e2, t2) {
        if (typeof e2 != "string")
          throw i(new Error("invalid ip provided: " + e2), a.ERR_INVALID_IP_PARAMETER);
        if (t2 = parseInt(t2), isNaN(t2))
          throw i(new Error("invalid port provided: " + t2), a.ERR_INVALID_PORT_PARAMETER);
        if (new s(e2).isValid())
          return n(`/ip4/${e2}/tcp/${t2}`);
        const r2 = new o(e2);
        if (r2.isValid())
          return r2.is4() ? n(`/ip4/${r2.to4().correctForm()}/tcp/${t2}`) : n(`/ip6/${e2}/tcp/${t2}`);
        throw i(new Error(`invalid ip:port for creating a multiaddr: ${e2}:${t2}`), a.ERR_INVALID_IP);
      }, e.exports.Errors = a;
    }, function(e, t, r) {
      "use strict";
      var n = r(348).BigInteger, i = r(349), s = r(96).sprintf, o = r(350), a = r(351), c = r(199);
      function u(e2) {
        this.valid = false, this.address = e2, this.groups = c.GROUPS, this.v4 = true, this.subnet = "/32", this.subnetMask = 32;
        var t2 = c.RE_SUBNET_STRING.exec(e2);
        if (t2) {
          if (this.parsedSubnet = t2[0].replace("/", ""), this.subnetMask = parseInt(this.parsedSubnet, 10), this.subnet = "/" + this.subnetMask, this.subnetMask < 0 || this.subnetMask > c.BITS)
            return this.valid = false, void (this.error = "Invalid subnet mask.");
          e2 = e2.replace(c.RE_SUBNET_STRING, "");
        }
        this.addressMinusSuffix = e2, this.parsedAddress = this.parse(e2);
      }
      u.prototype.parse = function(e2) {
        var t2 = e2.split(".");
        return e2.match(c.RE_ADDRESS) ? this.valid = true : this.error = "Invalid IPv4 address.", t2;
      }, u.prototype.isValid = function() {
        return this.valid;
      }, u.prototype.correctForm = function() {
        return this.parsedAddress.map(function(e2) {
          return parseInt(e2, 10);
        }).join(".");
      }, u.prototype.isCorrect = i.isCorrect(c.BITS), u.fromHex = function(e2) {
        var t2, r2 = o(e2.replace(/:/g, ""), 8, "0"), n2 = [];
        for (t2 = 0; t2 < 8; t2 += 2) {
          var i2 = r2.slice(t2, t2 + 2);
          n2.push(parseInt(i2, 16));
        }
        return new u(n2.join("."));
      }, u.fromInteger = function(e2) {
        return u.fromHex(e2.toString(16));
      }, u.prototype.toHex = function() {
        return this.parsedAddress.map(function(e2) {
          return s("%02x", parseInt(e2, 10));
        }).join(":");
      }, u.prototype.toArray = function() {
        return this.parsedAddress.map(function(e2) {
          return parseInt(e2, 10);
        });
      }, u.prototype.toGroup6 = function() {
        var e2, t2 = [];
        for (e2 = 0; e2 < c.GROUPS; e2 += 2) {
          var r2 = s("%02x%02x", parseInt(this.parsedAddress[e2], 10), parseInt(this.parsedAddress[e2 + 1], 10));
          t2.push(s("%x", parseInt(r2, 16)));
        }
        return t2.join(":");
      }, u.prototype.bigInteger = function() {
        return this.valid ? new n(this.parsedAddress.map(function(e2) {
          return s("%02x", parseInt(e2, 10));
        }).join(""), 16) : null;
      }, u.prototype._startAddress = function() {
        return new n(this.mask() + a("0", c.BITS - this.subnetMask), 2);
      }, u.prototype.startAddress = function() {
        return u.fromBigInteger(this._startAddress());
      }, u.prototype.startAddressExclusive = function() {
        var e2 = new n("1");
        return u.fromBigInteger(this._startAddress().add(e2));
      }, u.prototype._endAddress = function() {
        return new n(this.mask() + a("1", c.BITS - this.subnetMask), 2);
      }, u.prototype.endAddress = function() {
        return u.fromBigInteger(this._endAddress());
      }, u.prototype.endAddressExclusive = function() {
        var e2 = new n("1");
        return u.fromBigInteger(this._endAddress().subtract(e2));
      }, u.fromBigInteger = function(e2) {
        return u.fromInteger(parseInt(e2.toString(), 10));
      }, u.prototype.mask = function(e2) {
        return e2 === void 0 && (e2 = this.subnetMask), this.getBitsBase2(0, e2);
      }, u.prototype.getBitsBase2 = function(e2, t2) {
        return this.binaryZeroPad().slice(e2, t2);
      }, u.prototype.isInSubnet = i.isInSubnet, u.prototype.isMulticast = function() {
        return this.isInSubnet(new u("224.0.0.0/4"));
      }, u.prototype.binaryZeroPad = function() {
        return o(this.bigInteger().toString(2), c.BITS, "0");
      }, e.exports = u;
    }, function(e, t, r) {
      "use strict";
      (function() {
        var t2;
        function r2(e2, t3, r3) {
          e2 != null && (typeof e2 == "number" ? this.fromNumber(e2, t3, r3) : t3 == null && typeof e2 != "string" ? this.fromString(e2, 256) : this.fromString(e2, t3));
        }
        function n() {
          return new r2(null);
        }
        var i = typeof navigator != "undefined";
        i && navigator.appName == "Microsoft Internet Explorer" ? (r2.prototype.am = function(e2, t3, r3, n2, i2, s2) {
          for (var o2 = 32767 & t3, a2 = t3 >> 15; --s2 >= 0; ) {
            var c2 = 32767 & this[e2], u2 = this[e2++] >> 15, h2 = a2 * c2 + u2 * o2;
            i2 = ((c2 = o2 * c2 + ((32767 & h2) << 15) + r3[n2] + (1073741823 & i2)) >>> 30) + (h2 >>> 15) + a2 * u2 + (i2 >>> 30), r3[n2++] = 1073741823 & c2;
          }
          return i2;
        }, t2 = 30) : i && navigator.appName != "Netscape" ? (r2.prototype.am = function(e2, t3, r3, n2, i2, s2) {
          for (; --s2 >= 0; ) {
            var o2 = t3 * this[e2++] + r3[n2] + i2;
            i2 = Math.floor(o2 / 67108864), r3[n2++] = 67108863 & o2;
          }
          return i2;
        }, t2 = 26) : (r2.prototype.am = function(e2, t3, r3, n2, i2, s2) {
          for (var o2 = 16383 & t3, a2 = t3 >> 14; --s2 >= 0; ) {
            var c2 = 16383 & this[e2], u2 = this[e2++] >> 14, h2 = a2 * c2 + u2 * o2;
            i2 = ((c2 = o2 * c2 + ((16383 & h2) << 14) + r3[n2] + i2) >> 28) + (h2 >> 14) + a2 * u2, r3[n2++] = 268435455 & c2;
          }
          return i2;
        }, t2 = 28), r2.prototype.DB = t2, r2.prototype.DM = (1 << t2) - 1, r2.prototype.DV = 1 << t2;
        r2.prototype.FV = Math.pow(2, 52), r2.prototype.F1 = 52 - t2, r2.prototype.F2 = 2 * t2 - 52;
        var s, o, a = new Array();
        for (s = "0".charCodeAt(0), o = 0; o <= 9; ++o)
          a[s++] = o;
        for (s = "a".charCodeAt(0), o = 10; o < 36; ++o)
          a[s++] = o;
        for (s = "A".charCodeAt(0), o = 10; o < 36; ++o)
          a[s++] = o;
        function c(e2) {
          return "0123456789abcdefghijklmnopqrstuvwxyz".charAt(e2);
        }
        function u(e2, t3) {
          var r3 = a[e2.charCodeAt(t3)];
          return r3 == null ? -1 : r3;
        }
        function h(e2) {
          var t3 = n();
          return t3.fromInt(e2), t3;
        }
        function f(e2) {
          var t3, r3 = 1;
          return (t3 = e2 >>> 16) != 0 && (e2 = t3, r3 += 16), (t3 = e2 >> 8) != 0 && (e2 = t3, r3 += 8), (t3 = e2 >> 4) != 0 && (e2 = t3, r3 += 4), (t3 = e2 >> 2) != 0 && (e2 = t3, r3 += 2), (t3 = e2 >> 1) != 0 && (e2 = t3, r3 += 1), r3;
        }
        function d(e2) {
          this.m = e2;
        }
        function l(e2) {
          this.m = e2, this.mp = e2.invDigit(), this.mpl = 32767 & this.mp, this.mph = this.mp >> 15, this.um = (1 << e2.DB - 15) - 1, this.mt2 = 2 * e2.t;
        }
        function p(e2, t3) {
          return e2 & t3;
        }
        function y(e2, t3) {
          return e2 | t3;
        }
        function g(e2, t3) {
          return e2 ^ t3;
        }
        function b(e2, t3) {
          return e2 & ~t3;
        }
        function m(e2) {
          if (e2 == 0)
            return -1;
          var t3 = 0;
          return (65535 & e2) == 0 && (e2 >>= 16, t3 += 16), (255 & e2) == 0 && (e2 >>= 8, t3 += 8), (15 & e2) == 0 && (e2 >>= 4, t3 += 4), (3 & e2) == 0 && (e2 >>= 2, t3 += 2), (1 & e2) == 0 && ++t3, t3;
        }
        function v(e2) {
          for (var t3 = 0; e2 != 0; )
            e2 &= e2 - 1, ++t3;
          return t3;
        }
        function w() {
        }
        function _(e2) {
          return e2;
        }
        function E(e2) {
          this.r2 = n(), this.q3 = n(), r2.ONE.dlShiftTo(2 * e2.t, this.r2), this.mu = this.r2.divide(e2), this.m = e2;
        }
        d.prototype.convert = function(e2) {
          return e2.s < 0 || e2.compareTo(this.m) >= 0 ? e2.mod(this.m) : e2;
        }, d.prototype.revert = function(e2) {
          return e2;
        }, d.prototype.reduce = function(e2) {
          e2.divRemTo(this.m, null, e2);
        }, d.prototype.mulTo = function(e2, t3, r3) {
          e2.multiplyTo(t3, r3), this.reduce(r3);
        }, d.prototype.sqrTo = function(e2, t3) {
          e2.squareTo(t3), this.reduce(t3);
        }, l.prototype.convert = function(e2) {
          var t3 = n();
          return e2.abs().dlShiftTo(this.m.t, t3), t3.divRemTo(this.m, null, t3), e2.s < 0 && t3.compareTo(r2.ZERO) > 0 && this.m.subTo(t3, t3), t3;
        }, l.prototype.revert = function(e2) {
          var t3 = n();
          return e2.copyTo(t3), this.reduce(t3), t3;
        }, l.prototype.reduce = function(e2) {
          for (; e2.t <= this.mt2; )
            e2[e2.t++] = 0;
          for (var t3 = 0; t3 < this.m.t; ++t3) {
            var r3 = 32767 & e2[t3], n2 = r3 * this.mpl + ((r3 * this.mph + (e2[t3] >> 15) * this.mpl & this.um) << 15) & e2.DM;
            for (e2[r3 = t3 + this.m.t] += this.m.am(0, n2, e2, t3, 0, this.m.t); e2[r3] >= e2.DV; )
              e2[r3] -= e2.DV, e2[++r3]++;
          }
          e2.clamp(), e2.drShiftTo(this.m.t, e2), e2.compareTo(this.m) >= 0 && e2.subTo(this.m, e2);
        }, l.prototype.mulTo = function(e2, t3, r3) {
          e2.multiplyTo(t3, r3), this.reduce(r3);
        }, l.prototype.sqrTo = function(e2, t3) {
          e2.squareTo(t3), this.reduce(t3);
        }, r2.prototype.copyTo = function(e2) {
          for (var t3 = this.t - 1; t3 >= 0; --t3)
            e2[t3] = this[t3];
          e2.t = this.t, e2.s = this.s;
        }, r2.prototype.fromInt = function(e2) {
          this.t = 1, this.s = e2 < 0 ? -1 : 0, e2 > 0 ? this[0] = e2 : e2 < -1 ? this[0] = e2 + this.DV : this.t = 0;
        }, r2.prototype.fromString = function(e2, t3) {
          var n2;
          if (t3 == 16)
            n2 = 4;
          else if (t3 == 8)
            n2 = 3;
          else if (t3 == 256)
            n2 = 8;
          else if (t3 == 2)
            n2 = 1;
          else if (t3 == 32)
            n2 = 5;
          else {
            if (t3 != 4)
              return void this.fromRadix(e2, t3);
            n2 = 2;
          }
          this.t = 0, this.s = 0;
          for (var i2 = e2.length, s2 = false, o2 = 0; --i2 >= 0; ) {
            var a2 = n2 == 8 ? 255 & e2[i2] : u(e2, i2);
            a2 < 0 ? e2.charAt(i2) == "-" && (s2 = true) : (s2 = false, o2 == 0 ? this[this.t++] = a2 : o2 + n2 > this.DB ? (this[this.t - 1] |= (a2 & (1 << this.DB - o2) - 1) << o2, this[this.t++] = a2 >> this.DB - o2) : this[this.t - 1] |= a2 << o2, (o2 += n2) >= this.DB && (o2 -= this.DB));
          }
          n2 == 8 && (128 & e2[0]) != 0 && (this.s = -1, o2 > 0 && (this[this.t - 1] |= (1 << this.DB - o2) - 1 << o2)), this.clamp(), s2 && r2.ZERO.subTo(this, this);
        }, r2.prototype.clamp = function() {
          for (var e2 = this.s & this.DM; this.t > 0 && this[this.t - 1] == e2; )
            --this.t;
        }, r2.prototype.dlShiftTo = function(e2, t3) {
          var r3;
          for (r3 = this.t - 1; r3 >= 0; --r3)
            t3[r3 + e2] = this[r3];
          for (r3 = e2 - 1; r3 >= 0; --r3)
            t3[r3] = 0;
          t3.t = this.t + e2, t3.s = this.s;
        }, r2.prototype.drShiftTo = function(e2, t3) {
          for (var r3 = e2; r3 < this.t; ++r3)
            t3[r3 - e2] = this[r3];
          t3.t = Math.max(this.t - e2, 0), t3.s = this.s;
        }, r2.prototype.lShiftTo = function(e2, t3) {
          var r3, n2 = e2 % this.DB, i2 = this.DB - n2, s2 = (1 << i2) - 1, o2 = Math.floor(e2 / this.DB), a2 = this.s << n2 & this.DM;
          for (r3 = this.t - 1; r3 >= 0; --r3)
            t3[r3 + o2 + 1] = this[r3] >> i2 | a2, a2 = (this[r3] & s2) << n2;
          for (r3 = o2 - 1; r3 >= 0; --r3)
            t3[r3] = 0;
          t3[o2] = a2, t3.t = this.t + o2 + 1, t3.s = this.s, t3.clamp();
        }, r2.prototype.rShiftTo = function(e2, t3) {
          t3.s = this.s;
          var r3 = Math.floor(e2 / this.DB);
          if (r3 >= this.t)
            t3.t = 0;
          else {
            var n2 = e2 % this.DB, i2 = this.DB - n2, s2 = (1 << n2) - 1;
            t3[0] = this[r3] >> n2;
            for (var o2 = r3 + 1; o2 < this.t; ++o2)
              t3[o2 - r3 - 1] |= (this[o2] & s2) << i2, t3[o2 - r3] = this[o2] >> n2;
            n2 > 0 && (t3[this.t - r3 - 1] |= (this.s & s2) << i2), t3.t = this.t - r3, t3.clamp();
          }
        }, r2.prototype.subTo = function(e2, t3) {
          for (var r3 = 0, n2 = 0, i2 = Math.min(e2.t, this.t); r3 < i2; )
            n2 += this[r3] - e2[r3], t3[r3++] = n2 & this.DM, n2 >>= this.DB;
          if (e2.t < this.t) {
            for (n2 -= e2.s; r3 < this.t; )
              n2 += this[r3], t3[r3++] = n2 & this.DM, n2 >>= this.DB;
            n2 += this.s;
          } else {
            for (n2 += this.s; r3 < e2.t; )
              n2 -= e2[r3], t3[r3++] = n2 & this.DM, n2 >>= this.DB;
            n2 -= e2.s;
          }
          t3.s = n2 < 0 ? -1 : 0, n2 < -1 ? t3[r3++] = this.DV + n2 : n2 > 0 && (t3[r3++] = n2), t3.t = r3, t3.clamp();
        }, r2.prototype.multiplyTo = function(e2, t3) {
          var n2 = this.abs(), i2 = e2.abs(), s2 = n2.t;
          for (t3.t = s2 + i2.t; --s2 >= 0; )
            t3[s2] = 0;
          for (s2 = 0; s2 < i2.t; ++s2)
            t3[s2 + n2.t] = n2.am(0, i2[s2], t3, s2, 0, n2.t);
          t3.s = 0, t3.clamp(), this.s != e2.s && r2.ZERO.subTo(t3, t3);
        }, r2.prototype.squareTo = function(e2) {
          for (var t3 = this.abs(), r3 = e2.t = 2 * t3.t; --r3 >= 0; )
            e2[r3] = 0;
          for (r3 = 0; r3 < t3.t - 1; ++r3) {
            var n2 = t3.am(r3, t3[r3], e2, 2 * r3, 0, 1);
            (e2[r3 + t3.t] += t3.am(r3 + 1, 2 * t3[r3], e2, 2 * r3 + 1, n2, t3.t - r3 - 1)) >= t3.DV && (e2[r3 + t3.t] -= t3.DV, e2[r3 + t3.t + 1] = 1);
          }
          e2.t > 0 && (e2[e2.t - 1] += t3.am(r3, t3[r3], e2, 2 * r3, 0, 1)), e2.s = 0, e2.clamp();
        }, r2.prototype.divRemTo = function(e2, t3, i2) {
          var s2 = e2.abs();
          if (!(s2.t <= 0)) {
            var o2 = this.abs();
            if (o2.t < s2.t)
              return t3 != null && t3.fromInt(0), void (i2 != null && this.copyTo(i2));
            i2 == null && (i2 = n());
            var a2 = n(), c2 = this.s, u2 = e2.s, h2 = this.DB - f(s2[s2.t - 1]);
            h2 > 0 ? (s2.lShiftTo(h2, a2), o2.lShiftTo(h2, i2)) : (s2.copyTo(a2), o2.copyTo(i2));
            var d2 = a2.t, l2 = a2[d2 - 1];
            if (l2 != 0) {
              var p2 = l2 * (1 << this.F1) + (d2 > 1 ? a2[d2 - 2] >> this.F2 : 0), y2 = this.FV / p2, g2 = (1 << this.F1) / p2, b2 = 1 << this.F2, m2 = i2.t, v2 = m2 - d2, w2 = t3 == null ? n() : t3;
              for (a2.dlShiftTo(v2, w2), i2.compareTo(w2) >= 0 && (i2[i2.t++] = 1, i2.subTo(w2, i2)), r2.ONE.dlShiftTo(d2, w2), w2.subTo(a2, a2); a2.t < d2; )
                a2[a2.t++] = 0;
              for (; --v2 >= 0; ) {
                var _2 = i2[--m2] == l2 ? this.DM : Math.floor(i2[m2] * y2 + (i2[m2 - 1] + b2) * g2);
                if ((i2[m2] += a2.am(0, _2, i2, v2, 0, d2)) < _2)
                  for (a2.dlShiftTo(v2, w2), i2.subTo(w2, i2); i2[m2] < --_2; )
                    i2.subTo(w2, i2);
              }
              t3 != null && (i2.drShiftTo(d2, t3), c2 != u2 && r2.ZERO.subTo(t3, t3)), i2.t = d2, i2.clamp(), h2 > 0 && i2.rShiftTo(h2, i2), c2 < 0 && r2.ZERO.subTo(i2, i2);
            }
          }
        }, r2.prototype.invDigit = function() {
          if (this.t < 1)
            return 0;
          var e2 = this[0];
          if ((1 & e2) == 0)
            return 0;
          var t3 = 3 & e2;
          return (t3 = (t3 = (t3 = (t3 = t3 * (2 - (15 & e2) * t3) & 15) * (2 - (255 & e2) * t3) & 255) * (2 - ((65535 & e2) * t3 & 65535)) & 65535) * (2 - e2 * t3 % this.DV) % this.DV) > 0 ? this.DV - t3 : -t3;
        }, r2.prototype.isEven = function() {
          return (this.t > 0 ? 1 & this[0] : this.s) == 0;
        }, r2.prototype.exp = function(e2, t3) {
          if (e2 > 4294967295 || e2 < 1)
            return r2.ONE;
          var i2 = n(), s2 = n(), o2 = t3.convert(this), a2 = f(e2) - 1;
          for (o2.copyTo(i2); --a2 >= 0; )
            if (t3.sqrTo(i2, s2), (e2 & 1 << a2) > 0)
              t3.mulTo(s2, o2, i2);
            else {
              var c2 = i2;
              i2 = s2, s2 = c2;
            }
          return t3.revert(i2);
        }, r2.prototype.toString = function(e2) {
          if (this.s < 0)
            return "-" + this.negate().toString(e2);
          var t3;
          if (e2 == 16)
            t3 = 4;
          else if (e2 == 8)
            t3 = 3;
          else if (e2 == 2)
            t3 = 1;
          else if (e2 == 32)
            t3 = 5;
          else {
            if (e2 != 4)
              return this.toRadix(e2);
            t3 = 2;
          }
          var r3, n2 = (1 << t3) - 1, i2 = false, s2 = "", o2 = this.t, a2 = this.DB - o2 * this.DB % t3;
          if (o2-- > 0)
            for (a2 < this.DB && (r3 = this[o2] >> a2) > 0 && (i2 = true, s2 = c(r3)); o2 >= 0; )
              a2 < t3 ? (r3 = (this[o2] & (1 << a2) - 1) << t3 - a2, r3 |= this[--o2] >> (a2 += this.DB - t3)) : (r3 = this[o2] >> (a2 -= t3) & n2, a2 <= 0 && (a2 += this.DB, --o2)), r3 > 0 && (i2 = true), i2 && (s2 += c(r3));
          return i2 ? s2 : "0";
        }, r2.prototype.negate = function() {
          var e2 = n();
          return r2.ZERO.subTo(this, e2), e2;
        }, r2.prototype.abs = function() {
          return this.s < 0 ? this.negate() : this;
        }, r2.prototype.compareTo = function(e2) {
          var t3 = this.s - e2.s;
          if (t3 != 0)
            return t3;
          var r3 = this.t;
          if ((t3 = r3 - e2.t) != 0)
            return this.s < 0 ? -t3 : t3;
          for (; --r3 >= 0; )
            if ((t3 = this[r3] - e2[r3]) != 0)
              return t3;
          return 0;
        }, r2.prototype.bitLength = function() {
          return this.t <= 0 ? 0 : this.DB * (this.t - 1) + f(this[this.t - 1] ^ this.s & this.DM);
        }, r2.prototype.mod = function(e2) {
          var t3 = n();
          return this.abs().divRemTo(e2, null, t3), this.s < 0 && t3.compareTo(r2.ZERO) > 0 && e2.subTo(t3, t3), t3;
        }, r2.prototype.modPowInt = function(e2, t3) {
          var r3;
          return r3 = e2 < 256 || t3.isEven() ? new d(t3) : new l(t3), this.exp(e2, r3);
        }, r2.ZERO = h(0), r2.ONE = h(1), w.prototype.convert = _, w.prototype.revert = _, w.prototype.mulTo = function(e2, t3, r3) {
          e2.multiplyTo(t3, r3);
        }, w.prototype.sqrTo = function(e2, t3) {
          e2.squareTo(t3);
        }, E.prototype.convert = function(e2) {
          if (e2.s < 0 || e2.t > 2 * this.m.t)
            return e2.mod(this.m);
          if (e2.compareTo(this.m) < 0)
            return e2;
          var t3 = n();
          return e2.copyTo(t3), this.reduce(t3), t3;
        }, E.prototype.revert = function(e2) {
          return e2;
        }, E.prototype.reduce = function(e2) {
          for (e2.drShiftTo(this.m.t - 1, this.r2), e2.t > this.m.t + 1 && (e2.t = this.m.t + 1, e2.clamp()), this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3), this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2); e2.compareTo(this.r2) < 0; )
            e2.dAddOffset(1, this.m.t + 1);
          for (e2.subTo(this.r2, e2); e2.compareTo(this.m) >= 0; )
            e2.subTo(this.m, e2);
        }, E.prototype.mulTo = function(e2, t3, r3) {
          e2.multiplyTo(t3, r3), this.reduce(r3);
        }, E.prototype.sqrTo = function(e2, t3) {
          e2.squareTo(t3), this.reduce(t3);
        };
        var S, A, I, k = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997], R = (1 << 26) / k[k.length - 1];
        function T() {
          var e2;
          e2 = new Date().getTime(), A[I++] ^= 255 & e2, A[I++] ^= e2 >> 8 & 255, A[I++] ^= e2 >> 16 & 255, A[I++] ^= e2 >> 24 & 255, I >= O && (I -= O);
        }
        if (r2.prototype.chunkSize = function(e2) {
          return Math.floor(Math.LN2 * this.DB / Math.log(e2));
        }, r2.prototype.toRadix = function(e2) {
          if (e2 == null && (e2 = 10), this.signum() == 0 || e2 < 2 || e2 > 36)
            return "0";
          var t3 = this.chunkSize(e2), r3 = Math.pow(e2, t3), i2 = h(r3), s2 = n(), o2 = n(), a2 = "";
          for (this.divRemTo(i2, s2, o2); s2.signum() > 0; )
            a2 = (r3 + o2.intValue()).toString(e2).substr(1) + a2, s2.divRemTo(i2, s2, o2);
          return o2.intValue().toString(e2) + a2;
        }, r2.prototype.fromRadix = function(e2, t3) {
          this.fromInt(0), t3 == null && (t3 = 10);
          for (var n2 = this.chunkSize(t3), i2 = Math.pow(t3, n2), s2 = false, o2 = 0, a2 = 0, c2 = 0; c2 < e2.length; ++c2) {
            var h2 = u(e2, c2);
            h2 < 0 ? e2.charAt(c2) == "-" && this.signum() == 0 && (s2 = true) : (a2 = t3 * a2 + h2, ++o2 >= n2 && (this.dMultiply(i2), this.dAddOffset(a2, 0), o2 = 0, a2 = 0));
          }
          o2 > 0 && (this.dMultiply(Math.pow(t3, o2)), this.dAddOffset(a2, 0)), s2 && r2.ZERO.subTo(this, this);
        }, r2.prototype.fromNumber = function(e2, t3, n2) {
          if (typeof t3 == "number")
            if (e2 < 2)
              this.fromInt(1);
            else
              for (this.fromNumber(e2, n2), this.testBit(e2 - 1) || this.bitwiseTo(r2.ONE.shiftLeft(e2 - 1), y, this), this.isEven() && this.dAddOffset(1, 0); !this.isProbablePrime(t3); )
                this.dAddOffset(2, 0), this.bitLength() > e2 && this.subTo(r2.ONE.shiftLeft(e2 - 1), this);
          else {
            var i2 = new Array(), s2 = 7 & e2;
            i2.length = 1 + (e2 >> 3), t3.nextBytes(i2), s2 > 0 ? i2[0] &= (1 << s2) - 1 : i2[0] = 0, this.fromString(i2, 256);
          }
        }, r2.prototype.bitwiseTo = function(e2, t3, r3) {
          var n2, i2, s2 = Math.min(e2.t, this.t);
          for (n2 = 0; n2 < s2; ++n2)
            r3[n2] = t3(this[n2], e2[n2]);
          if (e2.t < this.t) {
            for (i2 = e2.s & this.DM, n2 = s2; n2 < this.t; ++n2)
              r3[n2] = t3(this[n2], i2);
            r3.t = this.t;
          } else {
            for (i2 = this.s & this.DM, n2 = s2; n2 < e2.t; ++n2)
              r3[n2] = t3(i2, e2[n2]);
            r3.t = e2.t;
          }
          r3.s = t3(this.s, e2.s), r3.clamp();
        }, r2.prototype.changeBit = function(e2, t3) {
          var n2 = r2.ONE.shiftLeft(e2);
          return this.bitwiseTo(n2, t3, n2), n2;
        }, r2.prototype.addTo = function(e2, t3) {
          for (var r3 = 0, n2 = 0, i2 = Math.min(e2.t, this.t); r3 < i2; )
            n2 += this[r3] + e2[r3], t3[r3++] = n2 & this.DM, n2 >>= this.DB;
          if (e2.t < this.t) {
            for (n2 += e2.s; r3 < this.t; )
              n2 += this[r3], t3[r3++] = n2 & this.DM, n2 >>= this.DB;
            n2 += this.s;
          } else {
            for (n2 += this.s; r3 < e2.t; )
              n2 += e2[r3], t3[r3++] = n2 & this.DM, n2 >>= this.DB;
            n2 += e2.s;
          }
          t3.s = n2 < 0 ? -1 : 0, n2 > 0 ? t3[r3++] = n2 : n2 < -1 && (t3[r3++] = this.DV + n2), t3.t = r3, t3.clamp();
        }, r2.prototype.dMultiply = function(e2) {
          this[this.t] = this.am(0, e2 - 1, this, 0, 0, this.t), ++this.t, this.clamp();
        }, r2.prototype.dAddOffset = function(e2, t3) {
          if (e2 != 0) {
            for (; this.t <= t3; )
              this[this.t++] = 0;
            for (this[t3] += e2; this[t3] >= this.DV; )
              this[t3] -= this.DV, ++t3 >= this.t && (this[this.t++] = 0), ++this[t3];
          }
        }, r2.prototype.multiplyLowerTo = function(e2, t3, r3) {
          var n2, i2 = Math.min(this.t + e2.t, t3);
          for (r3.s = 0, r3.t = i2; i2 > 0; )
            r3[--i2] = 0;
          for (n2 = r3.t - this.t; i2 < n2; ++i2)
            r3[i2 + this.t] = this.am(0, e2[i2], r3, i2, 0, this.t);
          for (n2 = Math.min(e2.t, t3); i2 < n2; ++i2)
            this.am(0, e2[i2], r3, i2, 0, t3 - i2);
          r3.clamp();
        }, r2.prototype.multiplyUpperTo = function(e2, t3, r3) {
          --t3;
          var n2 = r3.t = this.t + e2.t - t3;
          for (r3.s = 0; --n2 >= 0; )
            r3[n2] = 0;
          for (n2 = Math.max(t3 - this.t, 0); n2 < e2.t; ++n2)
            r3[this.t + n2 - t3] = this.am(t3 - n2, e2[n2], r3, 0, 0, this.t + n2 - t3);
          r3.clamp(), r3.drShiftTo(1, r3);
        }, r2.prototype.modInt = function(e2) {
          if (e2 <= 0)
            return 0;
          var t3 = this.DV % e2, r3 = this.s < 0 ? e2 - 1 : 0;
          if (this.t > 0)
            if (t3 == 0)
              r3 = this[0] % e2;
            else
              for (var n2 = this.t - 1; n2 >= 0; --n2)
                r3 = (t3 * r3 + this[n2]) % e2;
          return r3;
        }, r2.prototype.millerRabin = function(e2) {
          var t3 = this.subtract(r2.ONE), i2 = t3.getLowestSetBit();
          if (i2 <= 0)
            return false;
          var s2 = t3.shiftRight(i2);
          (e2 = e2 + 1 >> 1) > k.length && (e2 = k.length);
          for (var o2 = n(), a2 = 0; a2 < e2; ++a2) {
            o2.fromInt(k[Math.floor(Math.random() * k.length)]);
            var c2 = o2.modPow(s2, this);
            if (c2.compareTo(r2.ONE) != 0 && c2.compareTo(t3) != 0) {
              for (var u2 = 1; u2++ < i2 && c2.compareTo(t3) != 0; )
                if ((c2 = c2.modPowInt(2, this)).compareTo(r2.ONE) == 0)
                  return false;
              if (c2.compareTo(t3) != 0)
                return false;
            }
          }
          return true;
        }, r2.prototype.clone = function() {
          var e2 = n();
          return this.copyTo(e2), e2;
        }, r2.prototype.intValue = function() {
          if (this.s < 0) {
            if (this.t == 1)
              return this[0] - this.DV;
            if (this.t == 0)
              return -1;
          } else {
            if (this.t == 1)
              return this[0];
            if (this.t == 0)
              return 0;
          }
          return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0];
        }, r2.prototype.byteValue = function() {
          return this.t == 0 ? this.s : this[0] << 24 >> 24;
        }, r2.prototype.shortValue = function() {
          return this.t == 0 ? this.s : this[0] << 16 >> 16;
        }, r2.prototype.signum = function() {
          return this.s < 0 ? -1 : this.t <= 0 || this.t == 1 && this[0] <= 0 ? 0 : 1;
        }, r2.prototype.toByteArray = function() {
          var e2 = this.t, t3 = new Array();
          t3[0] = this.s;
          var r3, n2 = this.DB - e2 * this.DB % 8, i2 = 0;
          if (e2-- > 0)
            for (n2 < this.DB && (r3 = this[e2] >> n2) != (this.s & this.DM) >> n2 && (t3[i2++] = r3 | this.s << this.DB - n2); e2 >= 0; )
              n2 < 8 ? (r3 = (this[e2] & (1 << n2) - 1) << 8 - n2, r3 |= this[--e2] >> (n2 += this.DB - 8)) : (r3 = this[e2] >> (n2 -= 8) & 255, n2 <= 0 && (n2 += this.DB, --e2)), (128 & r3) != 0 && (r3 |= -256), i2 == 0 && (128 & this.s) != (128 & r3) && ++i2, (i2 > 0 || r3 != this.s) && (t3[i2++] = r3);
          return t3;
        }, r2.prototype.equals = function(e2) {
          return this.compareTo(e2) == 0;
        }, r2.prototype.min = function(e2) {
          return this.compareTo(e2) < 0 ? this : e2;
        }, r2.prototype.max = function(e2) {
          return this.compareTo(e2) > 0 ? this : e2;
        }, r2.prototype.and = function(e2) {
          var t3 = n();
          return this.bitwiseTo(e2, p, t3), t3;
        }, r2.prototype.or = function(e2) {
          var t3 = n();
          return this.bitwiseTo(e2, y, t3), t3;
        }, r2.prototype.xor = function(e2) {
          var t3 = n();
          return this.bitwiseTo(e2, g, t3), t3;
        }, r2.prototype.andNot = function(e2) {
          var t3 = n();
          return this.bitwiseTo(e2, b, t3), t3;
        }, r2.prototype.not = function() {
          for (var e2 = n(), t3 = 0; t3 < this.t; ++t3)
            e2[t3] = this.DM & ~this[t3];
          return e2.t = this.t, e2.s = ~this.s, e2;
        }, r2.prototype.shiftLeft = function(e2) {
          var t3 = n();
          return e2 < 0 ? this.rShiftTo(-e2, t3) : this.lShiftTo(e2, t3), t3;
        }, r2.prototype.shiftRight = function(e2) {
          var t3 = n();
          return e2 < 0 ? this.lShiftTo(-e2, t3) : this.rShiftTo(e2, t3), t3;
        }, r2.prototype.getLowestSetBit = function() {
          for (var e2 = 0; e2 < this.t; ++e2)
            if (this[e2] != 0)
              return e2 * this.DB + m(this[e2]);
          return this.s < 0 ? this.t * this.DB : -1;
        }, r2.prototype.bitCount = function() {
          for (var e2 = 0, t3 = this.s & this.DM, r3 = 0; r3 < this.t; ++r3)
            e2 += v(this[r3] ^ t3);
          return e2;
        }, r2.prototype.testBit = function(e2) {
          var t3 = Math.floor(e2 / this.DB);
          return t3 >= this.t ? this.s != 0 : (this[t3] & 1 << e2 % this.DB) != 0;
        }, r2.prototype.setBit = function(e2) {
          return this.changeBit(e2, y);
        }, r2.prototype.clearBit = function(e2) {
          return this.changeBit(e2, b);
        }, r2.prototype.flipBit = function(e2) {
          return this.changeBit(e2, g);
        }, r2.prototype.add = function(e2) {
          var t3 = n();
          return this.addTo(e2, t3), t3;
        }, r2.prototype.subtract = function(e2) {
          var t3 = n();
          return this.subTo(e2, t3), t3;
        }, r2.prototype.multiply = function(e2) {
          var t3 = n();
          return this.multiplyTo(e2, t3), t3;
        }, r2.prototype.divide = function(e2) {
          var t3 = n();
          return this.divRemTo(e2, t3, null), t3;
        }, r2.prototype.remainder = function(e2) {
          var t3 = n();
          return this.divRemTo(e2, null, t3), t3;
        }, r2.prototype.divideAndRemainder = function(e2) {
          var t3 = n(), r3 = n();
          return this.divRemTo(e2, t3, r3), new Array(t3, r3);
        }, r2.prototype.modPow = function(e2, t3) {
          var r3, i2, s2 = e2.bitLength(), o2 = h(1);
          if (s2 <= 0)
            return o2;
          r3 = s2 < 18 ? 1 : s2 < 48 ? 3 : s2 < 144 ? 4 : s2 < 768 ? 5 : 6, i2 = s2 < 8 ? new d(t3) : t3.isEven() ? new E(t3) : new l(t3);
          var a2 = new Array(), c2 = 3, u2 = r3 - 1, p2 = (1 << r3) - 1;
          if (a2[1] = i2.convert(this), r3 > 1) {
            var y2 = n();
            for (i2.sqrTo(a2[1], y2); c2 <= p2; )
              a2[c2] = n(), i2.mulTo(y2, a2[c2 - 2], a2[c2]), c2 += 2;
          }
          var g2, b2, m2 = e2.t - 1, v2 = true, w2 = n();
          for (s2 = f(e2[m2]) - 1; m2 >= 0; ) {
            for (s2 >= u2 ? g2 = e2[m2] >> s2 - u2 & p2 : (g2 = (e2[m2] & (1 << s2 + 1) - 1) << u2 - s2, m2 > 0 && (g2 |= e2[m2 - 1] >> this.DB + s2 - u2)), c2 = r3; (1 & g2) == 0; )
              g2 >>= 1, --c2;
            if ((s2 -= c2) < 0 && (s2 += this.DB, --m2), v2)
              a2[g2].copyTo(o2), v2 = false;
            else {
              for (; c2 > 1; )
                i2.sqrTo(o2, w2), i2.sqrTo(w2, o2), c2 -= 2;
              c2 > 0 ? i2.sqrTo(o2, w2) : (b2 = o2, o2 = w2, w2 = b2), i2.mulTo(w2, a2[g2], o2);
            }
            for (; m2 >= 0 && (e2[m2] & 1 << s2) == 0; )
              i2.sqrTo(o2, w2), b2 = o2, o2 = w2, w2 = b2, --s2 < 0 && (s2 = this.DB - 1, --m2);
          }
          return i2.revert(o2);
        }, r2.prototype.modInverse = function(e2) {
          var t3 = e2.isEven();
          if (this.isEven() && t3 || e2.signum() == 0)
            return r2.ZERO;
          for (var n2 = e2.clone(), i2 = this.clone(), s2 = h(1), o2 = h(0), a2 = h(0), c2 = h(1); n2.signum() != 0; ) {
            for (; n2.isEven(); )
              n2.rShiftTo(1, n2), t3 ? (s2.isEven() && o2.isEven() || (s2.addTo(this, s2), o2.subTo(e2, o2)), s2.rShiftTo(1, s2)) : o2.isEven() || o2.subTo(e2, o2), o2.rShiftTo(1, o2);
            for (; i2.isEven(); )
              i2.rShiftTo(1, i2), t3 ? (a2.isEven() && c2.isEven() || (a2.addTo(this, a2), c2.subTo(e2, c2)), a2.rShiftTo(1, a2)) : c2.isEven() || c2.subTo(e2, c2), c2.rShiftTo(1, c2);
            n2.compareTo(i2) >= 0 ? (n2.subTo(i2, n2), t3 && s2.subTo(a2, s2), o2.subTo(c2, o2)) : (i2.subTo(n2, i2), t3 && a2.subTo(s2, a2), c2.subTo(o2, c2));
          }
          return i2.compareTo(r2.ONE) != 0 ? r2.ZERO : c2.compareTo(e2) >= 0 ? c2.subtract(e2) : c2.signum() < 0 ? (c2.addTo(e2, c2), c2.signum() < 0 ? c2.add(e2) : c2) : c2;
        }, r2.prototype.pow = function(e2) {
          return this.exp(e2, new w());
        }, r2.prototype.gcd = function(e2) {
          var t3 = this.s < 0 ? this.negate() : this.clone(), r3 = e2.s < 0 ? e2.negate() : e2.clone();
          if (t3.compareTo(r3) < 0) {
            var n2 = t3;
            t3 = r3, r3 = n2;
          }
          var i2 = t3.getLowestSetBit(), s2 = r3.getLowestSetBit();
          if (s2 < 0)
            return t3;
          for (i2 < s2 && (s2 = i2), s2 > 0 && (t3.rShiftTo(s2, t3), r3.rShiftTo(s2, r3)); t3.signum() > 0; )
            (i2 = t3.getLowestSetBit()) > 0 && t3.rShiftTo(i2, t3), (i2 = r3.getLowestSetBit()) > 0 && r3.rShiftTo(i2, r3), t3.compareTo(r3) >= 0 ? (t3.subTo(r3, t3), t3.rShiftTo(1, t3)) : (r3.subTo(t3, r3), r3.rShiftTo(1, r3));
          return s2 > 0 && r3.lShiftTo(s2, r3), r3;
        }, r2.prototype.isProbablePrime = function(e2) {
          var t3, r3 = this.abs();
          if (r3.t == 1 && r3[0] <= k[k.length - 1]) {
            for (t3 = 0; t3 < k.length; ++t3)
              if (r3[0] == k[t3])
                return true;
            return false;
          }
          if (r3.isEven())
            return false;
          for (t3 = 1; t3 < k.length; ) {
            for (var n2 = k[t3], i2 = t3 + 1; i2 < k.length && n2 < R; )
              n2 *= k[i2++];
            for (n2 = r3.modInt(n2); t3 < i2; )
              if (n2 % k[t3++] == 0)
                return false;
          }
          return r3.millerRabin(e2);
        }, r2.prototype.square = function() {
          var e2 = n();
          return this.squareTo(e2), e2;
        }, r2.prototype.Barrett = E, A == null) {
          var C;
          if (A = new Array(), I = 0, typeof window != "undefined" && window.crypto) {
            if (window.crypto.getRandomValues) {
              var M = new Uint8Array(32);
              for (window.crypto.getRandomValues(M), C = 0; C < 32; ++C)
                A[I++] = M[C];
            } else if (navigator.appName == "Netscape" && navigator.appVersion < "5") {
              var x = window.crypto.random(32);
              for (C = 0; C < x.length; ++C)
                A[I++] = 255 & x.charCodeAt(C);
            }
          }
          for (; I < O; )
            C = Math.floor(65536 * Math.random()), A[I++] = C >>> 8, A[I++] = 255 & C;
          I = 0, T();
        }
        function N() {
          if (S == null) {
            for (T(), (S = new B()).init(A), I = 0; I < A.length; ++I)
              A[I] = 0;
            I = 0;
          }
          return S.next();
        }
        function P() {
        }
        function B() {
          this.i = 0, this.j = 0, this.S = new Array();
        }
        P.prototype.nextBytes = function(e2) {
          var t3;
          for (t3 = 0; t3 < e2.length; ++t3)
            e2[t3] = N();
        }, B.prototype.init = function(e2) {
          var t3, r3, n2;
          for (t3 = 0; t3 < 256; ++t3)
            this.S[t3] = t3;
          for (r3 = 0, t3 = 0; t3 < 256; ++t3)
            r3 = r3 + this.S[t3] + e2[t3 % e2.length] & 255, n2 = this.S[t3], this.S[t3] = this.S[r3], this.S[r3] = n2;
          this.i = 0, this.j = 0;
        }, B.prototype.next = function() {
          var e2;
          return this.i = this.i + 1 & 255, this.j = this.j + this.S[this.i] & 255, e2 = this.S[this.i], this.S[this.i] = this.S[this.j], this.S[this.j] = e2, this.S[e2 + this.S[this.i] & 255];
        };
        var O = 256;
        e.exports = {default: r2, BigInteger: r2, SecureRandom: P};
      }).call(void 0);
    }, function(e, t, r) {
      "use strict";
      var n = t.falseIfInvalid = function(e2) {
        return function() {
          return !!this.valid && e2.apply(this, arguments);
        };
      };
      t.isInSubnet = n(function(e2) {
        return !(this.subnetMask < e2.subnetMask) && this.mask(e2.subnetMask) === e2.mask();
      }), t.isCorrect = function(e2) {
        return n(function() {
          return this.addressMinusSuffix === this.correctForm() && (this.subnetMask === e2 && !this.parsedSubnet || this.parsedSubnet === String(this.subnetMask));
        });
      };
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        var r2, n = /^\s+|\s+$/g, i = /^[-+]0x[0-9a-f]+$/i, s = /^0b[01]+$/i, o = /^0o[0-7]+$/i, a = "[\\ud800-\\udfff]", c = "[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]", u = "\\ud83c[\\udffb-\\udfff]", h = "[^\\ud800-\\udfff]", f = "(?:\\ud83c[\\udde6-\\uddff]){2}", d = "[\\ud800-\\udbff][\\udc00-\\udfff]", l = "(?:" + c + "|" + u + ")?", p = "[\\ufe0e\\ufe0f]?" + l + ("(?:\\u200d(?:" + [h, f, d].join("|") + ")[\\ufe0e\\ufe0f]?" + l + ")*"), y = "(?:" + [h + c + "?", c, f, d, a].join("|") + ")", g = RegExp(u + "(?=" + u + ")|" + y + p, "g"), b = RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0\\ufe0e\\ufe0f]"), m = parseInt, v = typeof t2 == "object" && t2 && t2.Object === Object && t2, w = typeof self == "object" && self && self.Object === Object && self, _ = v || w || Function("return this")(), E = (r2 = "length", function(e2) {
          return e2 == null ? void 0 : e2[r2];
        });
        function S(e2) {
          return b.test(e2);
        }
        function A(e2) {
          return S(e2) ? function(e3) {
            var t3 = g.lastIndex = 0;
            for (; g.test(e3); )
              t3++;
            return t3;
          }(e2) : E(e2);
        }
        function I(e2) {
          return S(e2) ? function(e3) {
            return e3.match(g) || [];
          }(e2) : function(e3) {
            return e3.split("");
          }(e2);
        }
        var k = Object.prototype.toString, R = _.Symbol, T = Math.ceil, C = Math.floor, M = R ? R.prototype : void 0, x = M ? M.toString : void 0;
        function N(e2, t3) {
          var r3 = "";
          if (!e2 || t3 < 1 || t3 > 9007199254740991)
            return r3;
          do {
            t3 % 2 && (r3 += e2), (t3 = C(t3 / 2)) && (e2 += e2);
          } while (t3);
          return r3;
        }
        function P(e2) {
          if (typeof e2 == "string")
            return e2;
          if (D(e2))
            return x ? x.call(e2) : "";
          var t3 = e2 + "";
          return t3 == "0" && 1 / e2 == -1 / 0 ? "-0" : t3;
        }
        function B(e2, t3, r3) {
          var n2 = e2.length;
          return r3 = r3 === void 0 ? n2 : r3, !t3 && r3 >= n2 ? e2 : function(e3, t4, r4) {
            var n3 = -1, i2 = e3.length;
            t4 < 0 && (t4 = -t4 > i2 ? 0 : i2 + t4), (r4 = r4 > i2 ? i2 : r4) < 0 && (r4 += i2), i2 = t4 > r4 ? 0 : r4 - t4 >>> 0, t4 >>>= 0;
            for (var s2 = Array(i2); ++n3 < i2; )
              s2[n3] = e3[n3 + t4];
            return s2;
          }(e2, t3, r3);
        }
        function O(e2) {
          var t3 = typeof e2;
          return !!e2 && (t3 == "object" || t3 == "function");
        }
        function D(e2) {
          return typeof e2 == "symbol" || function(e3) {
            return !!e3 && typeof e3 == "object";
          }(e2) && k.call(e2) == "[object Symbol]";
        }
        function L(e2) {
          return e2 ? (e2 = function(e3) {
            if (typeof e3 == "number")
              return e3;
            if (D(e3))
              return NaN;
            if (O(e3)) {
              var t3 = typeof e3.valueOf == "function" ? e3.valueOf() : e3;
              e3 = O(t3) ? t3 + "" : t3;
            }
            if (typeof e3 != "string")
              return e3 === 0 ? e3 : +e3;
            e3 = e3.replace(n, "");
            var r3 = s.test(e3);
            return r3 || o.test(e3) ? m(e3.slice(2), r3 ? 2 : 8) : i.test(e3) ? NaN : +e3;
          }(e2)) === 1 / 0 || e2 === -1 / 0 ? 17976931348623157e292 * (e2 < 0 ? -1 : 1) : e2 == e2 ? e2 : 0 : e2 === 0 ? e2 : 0;
        }
        e.exports = function(e2, t3, r3) {
          var n2;
          e2 = (n2 = e2) == null ? "" : P(n2);
          var i2 = (t3 = function(e3) {
            var t4 = L(e3), r4 = t4 % 1;
            return t4 == t4 ? r4 ? t4 - r4 : t4 : 0;
          }(t3)) ? A(e2) : 0;
          return t3 && i2 < t3 ? function(e3, t4) {
            var r4 = (t4 = t4 === void 0 ? " " : P(t4)).length;
            if (r4 < 2)
              return r4 ? N(t4, e3) : t4;
            var n3 = N(t4, T(e3 / A(t4)));
            return S(t4) ? B(I(n3), 0, e3).join("") : n3.slice(0, e3);
          }(t3 - i2, r3) + e2 : e2;
        };
      }).call(this, r(12));
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        var r2 = /^\s+|\s+$/g, n = /^[-+]0x[0-9a-f]+$/i, i = /^0b[01]+$/i, s = /^0o[0-7]+$/i, o = /^(?:0|[1-9]\d*)$/, a = parseInt, c = typeof t2 == "object" && t2 && t2.Object === Object && t2, u = typeof self == "object" && self && self.Object === Object && self, h = c || u || Function("return this")(), f = Object.prototype.toString, d = h.Symbol, l = Math.floor, p = d ? d.prototype : void 0, y = p ? p.toString : void 0;
        function g(e2, t3, r3) {
          if (!b(r3))
            return false;
          var n2 = typeof t3;
          return !!(n2 == "number" ? function(e3) {
            return e3 != null && function(e4) {
              return typeof e4 == "number" && e4 > -1 && e4 % 1 == 0 && e4 <= 9007199254740991;
            }(e3.length) && !function(e4) {
              var t4 = b(e4) ? f.call(e4) : "";
              return t4 == "[object Function]" || t4 == "[object GeneratorFunction]";
            }(e3);
          }(r3) && function(e3, t4) {
            return !!(t4 = t4 == null ? 9007199254740991 : t4) && (typeof e3 == "number" || o.test(e3)) && e3 > -1 && e3 % 1 == 0 && e3 < t4;
          }(t3, r3.length) : n2 == "string" && t3 in r3) && function(e3, t4) {
            return e3 === t4 || e3 != e3 && t4 != t4;
          }(r3[t3], e2);
        }
        function b(e2) {
          var t3 = typeof e2;
          return !!e2 && (t3 == "object" || t3 == "function");
        }
        function m(e2) {
          return typeof e2 == "symbol" || function(e3) {
            return !!e3 && typeof e3 == "object";
          }(e2) && f.call(e2) == "[object Symbol]";
        }
        function v(e2) {
          return e2 ? (e2 = function(e3) {
            if (typeof e3 == "number")
              return e3;
            if (m(e3))
              return NaN;
            if (b(e3)) {
              var t3 = typeof e3.valueOf == "function" ? e3.valueOf() : e3;
              e3 = b(t3) ? t3 + "" : t3;
            }
            if (typeof e3 != "string")
              return e3 === 0 ? e3 : +e3;
            e3 = e3.replace(r2, "");
            var o2 = i.test(e3);
            return o2 || s.test(e3) ? a(e3.slice(2), o2 ? 2 : 8) : n.test(e3) ? NaN : +e3;
          }(e2)) === 1 / 0 || e2 === -1 / 0 ? 17976931348623157e292 * (e2 < 0 ? -1 : 1) : e2 == e2 ? e2 : 0 : e2 === 0 ? e2 : 0;
        }
        function w(e2) {
          return e2 == null ? "" : function(e3) {
            if (typeof e3 == "string")
              return e3;
            if (m(e3))
              return y ? y.call(e3) : "";
            var t3 = e3 + "";
            return t3 == "0" && 1 / e3 == -1 / 0 ? "-0" : t3;
          }(e2);
        }
        e.exports = function(e2, t3, r3) {
          var n2, i2;
          return (r3 ? g(e2, t3, r3) : t3 === void 0) ? t3 = 1 : (n2 = v(t3), i2 = n2 % 1, t3 = n2 == n2 ? i2 ? n2 - i2 : n2 : 0), function(e3, t4) {
            var r4 = "";
            if (!e3 || t4 < 1 || t4 > 9007199254740991)
              return r4;
            do {
              t4 % 2 && (r4 += e3), (t4 = l(t4 / 2)) && (e3 += e3);
            } while (t4);
            return r4;
          }(w(e2), t3);
        };
      }).call(this, r(12));
    }, function(e, t, r) {
      "use strict";
      var n = r(96).sprintf, i = t.spanAllZeroes = function(e2) {
        return e2.replace(/(0+)/g, '<span class="zero">$1</span>');
      };
      function s(e2) {
        return e2.replace(/^(0+)/, '<span class="zero">$1</span>');
      }
      t.spanAll = function(e2, t2) {
        return t2 === void 0 && (t2 = 0), e2.split("").map(function(e3, r2) {
          return n('<span class="digit value-%s position-%d">%s</span>', e3, r2 + t2, i(e3));
        }).join("");
      }, t.spanLeadingZeroes = function(e2) {
        return e2.split(":").map(function(e3) {
          return s(e3);
        }).join(":");
      }, t.simpleGroup = function(e2, t2) {
        var r2 = e2.split(":");
        return t2 || (t2 = 0), r2.map(function(e3, r3) {
          return /group-v4/.test(e3) ? e3 : n('<span class="hover-group group-%d">%s</span>', r3 + t2, s(e3));
        }).join(":");
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(1)("simple-peer"), i = r(953), s = r(354), o = r(304), a = r(955), c = r(0);
      function u(e2) {
        return e2.replace(/a=ice-options:trickle\s\n/g, "");
      }
      class h extends o.Duplex {
        constructor(e2) {
          if (super(e2 = Object.assign({allowHalfOpen: false}, e2)), this._id = s(4).toString("hex").slice(0, 7), this._debug("new peer %o", e2), this.channelName = e2.initiator ? e2.channelName || s(20).toString("hex") : null, this.initiator = e2.initiator || false, this.channelConfig = e2.channelConfig || h.channelConfig, this.negotiated = this.channelConfig.negotiated, this.config = Object.assign({}, h.config, e2.config), this.offerOptions = e2.offerOptions || {}, this.answerOptions = e2.answerOptions || {}, this.sdpTransform = e2.sdpTransform || ((e3) => e3), this.streams = e2.streams || (e2.stream ? [e2.stream] : []), this.trickle = e2.trickle === void 0 || e2.trickle, this.allowHalfTrickle = e2.allowHalfTrickle !== void 0 && e2.allowHalfTrickle, this.iceCompleteTimeout = e2.iceCompleteTimeout || 5e3, this._connected = false, this.remoteAddress = void 0, this.remoteFamily = void 0, this.remotePort = void 0, this.localAddress = void 0, this.localFamily = void 0, this.localPort = void 0, this._wrtc = e2.wrtc && typeof e2.wrtc == "object" ? e2.wrtc : i(), !this._wrtc)
            throw typeof window == "undefined" ? c(new Error("No WebRTC support: Specify `opts.wrtc` option in this environment"), "ERR_WEBRTC_SUPPORT") : c(new Error("No WebRTC support: Not a supported browser"), "ERR_WEBRTC_SUPPORT");
          this._pcReady = false, this._channelReady = false, this._iceComplete = false, this._iceCompleteTimer = null, this._channel = null, this._pendingCandidates = [], this._isNegotiating = !this.negotiated && !this.initiator, this._batchedNegotiation = false, this._queuedNegotiation = false, this._sendersAwaitingStable = [], this._senderMap = new Map(), this._firstStable = true, this._closingInterval = null, this._remoteTracks = [], this._remoteStreams = [], this._chunk = null, this._cb = null, this._interval = null;
          try {
            this._pc = new this._wrtc.RTCPeerConnection(this.config);
          } catch (t2) {
            return void a(() => this.destroy(c(t2, "ERR_PC_CONSTRUCTOR")));
          }
          this._isReactNativeWebrtc = typeof this._pc._peerConnectionId == "number", this._pc.oniceconnectionstatechange = () => {
            this._onIceStateChange();
          }, this._pc.onicegatheringstatechange = () => {
            this._onIceStateChange();
          }, this._pc.onconnectionstatechange = () => {
            this._onConnectionStateChange();
          }, this._pc.onsignalingstatechange = () => {
            this._onSignalingStateChange();
          }, this._pc.onicecandidate = (e3) => {
            this._onIceCandidate(e3);
          }, this.initiator || this.negotiated ? this._setupData({channel: this._pc.createDataChannel(this.channelName, this.channelConfig)}) : this._pc.ondatachannel = (e3) => {
            this._setupData(e3);
          }, this.streams && this.streams.forEach((e3) => {
            this.addStream(e3);
          }), this._pc.ontrack = (e3) => {
            this._onTrack(e3);
          }, this.initiator && this._needsNegotiation(), this._onFinishBound = () => {
            this._onFinish();
          }, this.once("finish", this._onFinishBound);
        }
        get bufferSize() {
          return this._channel && this._channel.bufferedAmount || 0;
        }
        get connected() {
          return this._connected && this._channel.readyState === "open";
        }
        address() {
          return {port: this.localPort, family: this.localFamily, address: this.localAddress};
        }
        signal(e2) {
          if (this.destroyed)
            throw c(new Error("cannot signal after peer is destroyed"), "ERR_SIGNALING");
          if (typeof e2 == "string")
            try {
              e2 = JSON.parse(e2);
            } catch (t2) {
              e2 = {};
            }
          this._debug("signal()"), e2.renegotiate && this.initiator && (this._debug("got request to renegotiate"), this._needsNegotiation()), e2.transceiverRequest && this.initiator && (this._debug("got request for transceiver"), this.addTransceiver(e2.transceiverRequest.kind, e2.transceiverRequest.init)), e2.candidate && (this._pc.remoteDescription && this._pc.remoteDescription.type ? this._addIceCandidate(e2.candidate) : this._pendingCandidates.push(e2.candidate)), e2.sdp && this._pc.setRemoteDescription(new this._wrtc.RTCSessionDescription(e2)).then(() => {
            this.destroyed || (this._pendingCandidates.forEach((e3) => {
              this._addIceCandidate(e3);
            }), this._pendingCandidates = [], this._pc.remoteDescription.type === "offer" && this._createAnswer());
          }).catch((e3) => {
            this.destroy(c(e3, "ERR_SET_REMOTE_DESCRIPTION"));
          }), e2.sdp || e2.candidate || e2.renegotiate || e2.transceiverRequest || this.destroy(c(new Error("signal() called with invalid signal data"), "ERR_SIGNALING"));
        }
        _addIceCandidate(e2) {
          var t2 = new this._wrtc.RTCIceCandidate(e2);
          this._pc.addIceCandidate(t2).catch((e3) => {
            var r2;
            !t2.address || t2.address.endsWith(".local") ? (r2 = "Ignoring unsupported ICE candidate.", console.warn(r2)) : this.destroy(c(e3, "ERR_ADD_ICE_CANDIDATE"));
          });
        }
        send(e2) {
          this._channel.send(e2);
        }
        addTransceiver(e2, t2) {
          if (this._debug("addTransceiver()"), this.initiator)
            try {
              this._pc.addTransceiver(e2, t2), this._needsNegotiation();
            } catch (r2) {
              this.destroy(c(r2, "ERR_ADD_TRANSCEIVER"));
            }
          else
            this.emit("signal", {transceiverRequest: {kind: e2, init: t2}});
        }
        addStream(e2) {
          this._debug("addStream()"), e2.getTracks().forEach((t2) => {
            this.addTrack(t2, e2);
          });
        }
        addTrack(e2, t2) {
          this._debug("addTrack()");
          var r2 = this._senderMap.get(e2) || new Map(), n2 = r2.get(t2);
          if (n2)
            throw n2.removed ? c(new Error("Track has been removed. You should enable/disable tracks that you want to re-add."), "ERR_SENDER_REMOVED") : c(new Error("Track has already been added to that stream."), "ERR_SENDER_ALREADY_ADDED");
          n2 = this._pc.addTrack(e2, t2), r2.set(t2, n2), this._senderMap.set(e2, r2), this._needsNegotiation();
        }
        replaceTrack(e2, t2, r2) {
          this._debug("replaceTrack()");
          var n2 = this._senderMap.get(e2), i2 = n2 ? n2.get(r2) : null;
          if (!i2)
            throw c(new Error("Cannot replace track that was never added."), "ERR_TRACK_NOT_ADDED");
          t2 && this._senderMap.set(t2, n2), i2.replaceTrack != null ? i2.replaceTrack(t2) : this.destroy(c(new Error("replaceTrack is not supported in this browser"), "ERR_UNSUPPORTED_REPLACETRACK"));
        }
        removeTrack(e2, t2) {
          this._debug("removeSender()");
          var r2 = this._senderMap.get(e2), n2 = r2 ? r2.get(t2) : null;
          if (!n2)
            throw c(new Error("Cannot remove track that was never added."), "ERR_TRACK_NOT_ADDED");
          try {
            n2.removed = true, this._pc.removeTrack(n2);
          } catch (i2) {
            i2.name === "NS_ERROR_UNEXPECTED" ? this._sendersAwaitingStable.push(n2) : this.destroy(c(i2, "ERR_REMOVE_TRACK"));
          }
          this._needsNegotiation();
        }
        removeStream(e2) {
          this._debug("removeSenders()"), e2.getTracks().forEach((t2) => {
            this.removeTrack(t2, e2);
          });
        }
        _needsNegotiation() {
          this._debug("_needsNegotiation"), this._batchedNegotiation || (this._batchedNegotiation = true, a(() => {
            this._batchedNegotiation = false, this._debug("starting batched negotiation"), this.negotiate();
          }));
        }
        negotiate() {
          this.initiator ? this._isNegotiating ? (this._queuedNegotiation = true, this._debug("already negotiating, queueing")) : (this._debug("start negotiation"), setTimeout(() => {
            this._createOffer();
          }, 0)) : this._isNegotiating ? (this._queuedNegotiation = true, this._debug("already negotiating, queueing")) : (this._debug("requesting negotiation from initiator"), this.emit("signal", {renegotiate: true})), this._isNegotiating = true;
        }
        _destroy(e2, t2) {
          if (this._debug("destroy (error: %s)", e2 && (e2.message || e2)), this.readable = this.writable = false, this._readableState.ended || this.push(null), this._writableState.finished || this.end(), this._connected = false, this._pcReady = false, this._channelReady = false, this._remoteTracks = null, this._remoteStreams = null, this._senderMap = null, clearInterval(this._closingInterval), this._closingInterval = null, clearInterval(this._interval), this._interval = null, this._chunk = null, this._cb = null, this._onFinishBound && this.removeListener("finish", this._onFinishBound), this._onFinishBound = null, this._channel) {
            try {
              this._channel.close();
            } catch (e3) {
            }
            this._channel.onmessage = null, this._channel.onopen = null, this._channel.onclose = null, this._channel.onerror = null;
          }
          if (this._pc) {
            try {
              this._pc.close();
            } catch (e3) {
            }
            this._pc.oniceconnectionstatechange = null, this._pc.onicegatheringstatechange = null, this._pc.onsignalingstatechange = null, this._pc.onicecandidate = null, this._pc.ontrack = null, this._pc.ondatachannel = null;
          }
          this._pc = null, this._channel = null, t2(e2);
        }
        _setupData(e2) {
          if (!e2.channel)
            return this.destroy(c(new Error("Data channel event is missing `channel` property"), "ERR_DATA_CHANNEL"));
          this._channel = e2.channel, this._channel.binaryType = "arraybuffer", typeof this._channel.bufferedAmountLowThreshold == "number" && (this._channel.bufferedAmountLowThreshold = 65536), this.channelName = this._channel.label, this._channel.onmessage = (e3) => {
            this._onChannelMessage(e3);
          }, this._channel.onbufferedamountlow = () => {
            this._onChannelBufferedAmountLow();
          }, this._channel.onopen = () => {
            this._onChannelOpen();
          }, this._channel.onclose = () => {
            this._onChannelClose();
          }, this._channel.onerror = (e3) => {
            this.destroy(c(e3, "ERR_DATA_CHANNEL"));
          };
          var t2 = false;
          this._closingInterval = setInterval(() => {
            this._channel && this._channel.readyState === "closing" ? (t2 && this._onChannelClose(), t2 = true) : t2 = false;
          }, 5e3);
        }
        _read() {
        }
        _write(e2, t2, r2) {
          if (this.destroyed)
            return r2(c(new Error("cannot write after peer is destroyed"), "ERR_DATA_CHANNEL"));
          if (this._connected) {
            try {
              this.send(e2);
            } catch (n2) {
              return this.destroy(c(n2, "ERR_DATA_CHANNEL"));
            }
            this._channel.bufferedAmount > 65536 ? (this._debug("start backpressure: bufferedAmount %d", this._channel.bufferedAmount), this._cb = r2) : r2(null);
          } else
            this._debug("write before connect"), this._chunk = e2, this._cb = r2;
        }
        _onFinish() {
          if (this.destroyed)
            return;
          const e2 = () => {
            setTimeout(() => this.destroy(), 1e3);
          };
          this._connected ? e2() : this.once("connect", e2);
        }
        _startIceCompleteTimeout() {
          this.destroyed || this._iceCompleteTimer || (this._debug("started iceComplete timeout"), this._iceCompleteTimer = setTimeout(() => {
            this._iceComplete || (this._iceComplete = true, this._debug("iceComplete timeout completed"), this.emit("iceTimeout"), this.emit("_iceComplete"));
          }, this.iceCompleteTimeout));
        }
        _createOffer() {
          this.destroyed || this._pc.createOffer(this.offerOptions).then((e2) => {
            if (this.destroyed)
              return;
            this.trickle || this.allowHalfTrickle || (e2.sdp = u(e2.sdp)), e2.sdp = this.sdpTransform(e2.sdp);
            const t2 = () => {
              if (!this.destroyed) {
                var t3 = this._pc.localDescription || e2;
                this._debug("signal"), this.emit("signal", {type: t3.type, sdp: t3.sdp});
              }
            };
            this._pc.setLocalDescription(e2).then(() => {
              this._debug("createOffer success"), this.destroyed || (this.trickle || this._iceComplete ? t2() : this.once("_iceComplete", t2));
            }).catch((e3) => {
              this.destroy(c(e3, "ERR_SET_LOCAL_DESCRIPTION"));
            });
          }).catch((e2) => {
            this.destroy(c(e2, "ERR_CREATE_OFFER"));
          });
        }
        _requestMissingTransceivers() {
          this._pc.getTransceivers && this._pc.getTransceivers().forEach((e2) => {
            e2.mid || !e2.sender.track || e2.requested || (e2.requested = true, this.addTransceiver(e2.sender.track.kind));
          });
        }
        _createAnswer() {
          this.destroyed || this._pc.createAnswer(this.answerOptions).then((e2) => {
            if (this.destroyed)
              return;
            this.trickle || this.allowHalfTrickle || (e2.sdp = u(e2.sdp)), e2.sdp = this.sdpTransform(e2.sdp);
            const t2 = () => {
              if (!this.destroyed) {
                var t3 = this._pc.localDescription || e2;
                this._debug("signal"), this.emit("signal", {type: t3.type, sdp: t3.sdp}), this.initiator || this._requestMissingTransceivers();
              }
            };
            this._pc.setLocalDescription(e2).then(() => {
              this.destroyed || (this.trickle || this._iceComplete ? t2() : this.once("_iceComplete", t2));
            }).catch((e3) => {
              this.destroy(c(e3, "ERR_SET_LOCAL_DESCRIPTION"));
            });
          }).catch((e2) => {
            this.destroy(c(e2, "ERR_CREATE_ANSWER"));
          });
        }
        _onConnectionStateChange() {
          this.destroyed || this._pc.connectionState === "failed" && this.destroy(c(new Error("Connection failed."), "ERR_CONNECTION_FAILURE"));
        }
        _onIceStateChange() {
          if (!this.destroyed) {
            var e2 = this._pc.iceConnectionState, t2 = this._pc.iceGatheringState;
            this._debug("iceStateChange (connection: %s) (gathering: %s)", e2, t2), this.emit("iceStateChange", e2, t2), e2 !== "connected" && e2 !== "completed" || (this._pcReady = true, this._maybeReady()), e2 === "failed" && this.destroy(c(new Error("Ice connection failed."), "ERR_ICE_CONNECTION_FAILURE")), e2 === "closed" && this.destroy(c(new Error("Ice connection closed."), "ERR_ICE_CONNECTION_CLOSED"));
          }
        }
        getStats(e2) {
          const t2 = (e3) => (Object.prototype.toString.call(e3.values) === "[object Array]" && e3.values.forEach((t3) => {
            Object.assign(e3, t3);
          }), e3);
          this._pc.getStats.length === 0 || this._isReactNativeWebrtc ? this._pc.getStats().then((r2) => {
            var n2 = [];
            r2.forEach((e3) => {
              n2.push(t2(e3));
            }), e2(null, n2);
          }, (t3) => e2(t3)) : this._pc.getStats.length > 0 ? this._pc.getStats((r2) => {
            if (!this.destroyed) {
              var n2 = [];
              r2.result().forEach((e3) => {
                var r3 = {};
                e3.names().forEach((t3) => {
                  r3[t3] = e3.stat(t3);
                }), r3.id = e3.id, r3.type = e3.type, r3.timestamp = e3.timestamp, n2.push(t2(r3));
              }), e2(null, n2);
            }
          }, (t3) => e2(t3)) : e2(null, []);
        }
        _maybeReady() {
          if (this._debug("maybeReady pc %s channel %s", this._pcReady, this._channelReady), this._connected || this._connecting || !this._pcReady || !this._channelReady)
            return;
          this._connecting = true;
          const e2 = () => {
            this.destroyed || this.getStats((t2, r2) => {
              if (this.destroyed)
                return;
              t2 && (r2 = []);
              var n2 = {}, i2 = {}, s2 = {}, o2 = false;
              r2.forEach((e3) => {
                e3.type !== "remotecandidate" && e3.type !== "remote-candidate" || (n2[e3.id] = e3), e3.type !== "localcandidate" && e3.type !== "local-candidate" || (i2[e3.id] = e3), e3.type !== "candidatepair" && e3.type !== "candidate-pair" || (s2[e3.id] = e3);
              });
              const a2 = (e3) => {
                o2 = true;
                var t3 = i2[e3.localCandidateId];
                t3 && (t3.ip || t3.address) ? (this.localAddress = t3.ip || t3.address, this.localPort = Number(t3.port)) : t3 && t3.ipAddress ? (this.localAddress = t3.ipAddress, this.localPort = Number(t3.portNumber)) : typeof e3.googLocalAddress == "string" && (t3 = e3.googLocalAddress.split(":"), this.localAddress = t3[0], this.localPort = Number(t3[1])), this.localAddress && (this.localFamily = this.localAddress.includes(":") ? "IPv6" : "IPv4");
                var r3 = n2[e3.remoteCandidateId];
                r3 && (r3.ip || r3.address) ? (this.remoteAddress = r3.ip || r3.address, this.remotePort = Number(r3.port)) : r3 && r3.ipAddress ? (this.remoteAddress = r3.ipAddress, this.remotePort = Number(r3.portNumber)) : typeof e3.googRemoteAddress == "string" && (r3 = e3.googRemoteAddress.split(":"), this.remoteAddress = r3[0], this.remotePort = Number(r3[1])), this.remoteAddress && (this.remoteFamily = this.remoteAddress.includes(":") ? "IPv6" : "IPv4"), this._debug("connect local: %s:%s remote: %s:%s", this.localAddress, this.localPort, this.remoteAddress, this.remotePort);
              };
              if (r2.forEach((e3) => {
                e3.type === "transport" && e3.selectedCandidatePairId && a2(s2[e3.selectedCandidatePairId]), (e3.type === "googCandidatePair" && e3.googActiveConnection === "true" || (e3.type === "candidatepair" || e3.type === "candidate-pair") && e3.selected) && a2(e3);
              }), o2 || Object.keys(s2).length && !Object.keys(i2).length) {
                if (this._connecting = false, this._connected = true, this._chunk) {
                  try {
                    this.send(this._chunk);
                  } catch (t3) {
                    return this.destroy(c(t3, "ERR_DATA_CHANNEL"));
                  }
                  this._chunk = null, this._debug('sent chunk from "write before connect"');
                  var u2 = this._cb;
                  this._cb = null, u2(null);
                }
                typeof this._channel.bufferedAmountLowThreshold != "number" && (this._interval = setInterval(() => this._onInterval(), 150), this._interval.unref && this._interval.unref()), this._debug("connect"), this.emit("connect");
              } else
                setTimeout(e2, 100);
            });
          };
          e2();
        }
        _onInterval() {
          !this._cb || !this._channel || this._channel.bufferedAmount > 65536 || this._onChannelBufferedAmountLow();
        }
        _onSignalingStateChange() {
          this.destroyed || (this._pc.signalingState !== "stable" || this._firstStable || (this._isNegotiating = false, this._debug("flushing sender queue", this._sendersAwaitingStable), this._sendersAwaitingStable.forEach((e2) => {
            this._pc.removeTrack(e2), this._queuedNegotiation = true;
          }), this._sendersAwaitingStable = [], this._queuedNegotiation && (this._debug("flushing negotiation queue"), this._queuedNegotiation = false, this._needsNegotiation()), this._debug("negotiate"), this.emit("negotiate")), this._firstStable = false, this._debug("signalingStateChange %s", this._pc.signalingState), this.emit("signalingStateChange", this._pc.signalingState));
        }
        _onIceCandidate(e2) {
          this.destroyed || (e2.candidate && this.trickle ? this.emit("signal", {candidate: {candidate: e2.candidate.candidate, sdpMLineIndex: e2.candidate.sdpMLineIndex, sdpMid: e2.candidate.sdpMid}}) : e2.candidate || this._iceComplete || (this._iceComplete = true, this.emit("_iceComplete")), e2.candidate && this._startIceCompleteTimeout());
        }
        _onChannelMessage(e2) {
          if (!this.destroyed) {
            var t2 = e2.data;
            t2 instanceof ArrayBuffer && (t2 = new Uint8Array(t2)), this.push(t2);
          }
        }
        _onChannelBufferedAmountLow() {
          if (!this.destroyed && this._cb) {
            this._debug("ending backpressure: bufferedAmount %d", this._channel.bufferedAmount);
            var e2 = this._cb;
            this._cb = null, e2(null);
          }
        }
        _onChannelOpen() {
          this._connected || this.destroyed || (this._debug("on channel open"), this._channelReady = true, this._maybeReady());
        }
        _onChannelClose() {
          this.destroyed || (this._debug("on channel close"), this.destroy());
        }
        _onTrack(e2) {
          this.destroyed || e2.streams.forEach((t2) => {
            this._debug("on track"), this.emit("track", e2.track, t2), this._remoteTracks.push({track: e2.track, stream: t2}), this._remoteStreams.some((e3) => e3.id === t2.id) || (this._remoteStreams.push(t2), a(() => {
              this.emit("stream", t2);
            }));
          });
        }
        _debug() {
          var e2 = [].slice.call(arguments);
          e2[0] = "[" + this._id + "] " + e2[0], n.apply(null, e2);
        }
      }
      h.WEBRTC_SUPPORT = !!i(), h.config = {iceServers: [{urls: ["stun:stun.l.google.com:19302", "stun:global.stun.twilio.com:3478"]}], sdpSemantics: "unified-plan"}, h.channelConfig = {}, e.exports = h;
    }, function(e, t, r) {
      "use strict";
      (function(t2, n) {
        var i = r(954).Buffer, s = t2.crypto || t2.msCrypto;
        s && s.getRandomValues ? e.exports = function(e2, t3) {
          if (e2 > 4294967295)
            throw new RangeError("requested too many random bytes");
          var r2 = i.allocUnsafe(e2);
          if (e2 > 0)
            if (e2 > 65536)
              for (var o = 0; o < e2; o += 65536)
                s.getRandomValues(r2.slice(o, o + 65536));
            else
              s.getRandomValues(r2);
          if (typeof t3 == "function")
            return n.nextTick(function() {
              t3(null, r2);
            });
          return r2;
        } : e.exports = function() {
          throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11");
        };
      }).call(this, r(12), r(10));
    }, function(e, t, r) {
      "use strict";
      var n = {}.toString;
      e.exports = Array.isArray || function(e2) {
        return n.call(e2) == "[object Array]";
      };
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        e.exports = function(e2) {
          return r2 && t2.isBuffer(e2) || n && (e2 instanceof ArrayBuffer || function(e3) {
            return typeof ArrayBuffer.isView == "function" ? ArrayBuffer.isView(e3) : e3.buffer instanceof ArrayBuffer;
          }(e2));
        };
        var r2 = typeof t2 == "function" && typeof t2.isBuffer == "function", n = typeof ArrayBuffer == "function";
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      var n = r(967), i = r(363), s = r(364), o = r(202), a = r(365), c = r(366), u = r(120)("socket.io-client:manager"), h = r(362), f = r(986), d = Object.prototype.hasOwnProperty;
      function l(e2, t2) {
        if (!(this instanceof l))
          return new l(e2, t2);
        e2 && typeof e2 == "object" && (t2 = e2, e2 = void 0), (t2 = t2 || {}).path = t2.path || "/socket.io", this.nsps = {}, this.subs = [], this.opts = t2, this.reconnection(t2.reconnection !== false), this.reconnectionAttempts(t2.reconnectionAttempts || 1 / 0), this.reconnectionDelay(t2.reconnectionDelay || 1e3), this.reconnectionDelayMax(t2.reconnectionDelayMax || 5e3), this.randomizationFactor(t2.randomizationFactor || 0.5), this.backoff = new f({min: this.reconnectionDelay(), max: this.reconnectionDelayMax(), jitter: this.randomizationFactor()}), this.timeout(t2.timeout == null ? 2e4 : t2.timeout), this.readyState = "closed", this.uri = e2, this.connecting = [], this.lastPing = null, this.encoding = false, this.packetBuffer = [];
        var r2 = t2.parser || o;
        this.encoder = new r2.Encoder(), this.decoder = new r2.Decoder(), this.autoConnect = t2.autoConnect !== false, this.autoConnect && this.open();
      }
      e.exports = l, l.prototype.emitAll = function() {
        for (var e2 in this.emit.apply(this, arguments), this.nsps)
          d.call(this.nsps, e2) && this.nsps[e2].emit.apply(this.nsps[e2], arguments);
      }, l.prototype.updateSocketIds = function() {
        for (var e2 in this.nsps)
          d.call(this.nsps, e2) && (this.nsps[e2].id = this.generateId(e2));
      }, l.prototype.generateId = function(e2) {
        return (e2 === "/" ? "" : e2 + "#") + this.engine.id;
      }, s(l.prototype), l.prototype.reconnection = function(e2) {
        return arguments.length ? (this._reconnection = !!e2, this) : this._reconnection;
      }, l.prototype.reconnectionAttempts = function(e2) {
        return arguments.length ? (this._reconnectionAttempts = e2, this) : this._reconnectionAttempts;
      }, l.prototype.reconnectionDelay = function(e2) {
        return arguments.length ? (this._reconnectionDelay = e2, this.backoff && this.backoff.setMin(e2), this) : this._reconnectionDelay;
      }, l.prototype.randomizationFactor = function(e2) {
        return arguments.length ? (this._randomizationFactor = e2, this.backoff && this.backoff.setJitter(e2), this) : this._randomizationFactor;
      }, l.prototype.reconnectionDelayMax = function(e2) {
        return arguments.length ? (this._reconnectionDelayMax = e2, this.backoff && this.backoff.setMax(e2), this) : this._reconnectionDelayMax;
      }, l.prototype.timeout = function(e2) {
        return arguments.length ? (this._timeout = e2, this) : this._timeout;
      }, l.prototype.maybeReconnectOnOpen = function() {
        !this.reconnecting && this._reconnection && this.backoff.attempts === 0 && this.reconnect();
      }, l.prototype.open = l.prototype.connect = function(e2, t2) {
        if (u("readyState %s", this.readyState), ~this.readyState.indexOf("open"))
          return this;
        u("opening %s", this.uri), this.engine = n(this.uri, this.opts);
        var r2 = this.engine, i2 = this;
        this.readyState = "opening", this.skipReconnect = false;
        var s2 = a(r2, "open", function() {
          i2.onopen(), e2 && e2();
        }), o2 = a(r2, "error", function(t3) {
          if (u("connect_error"), i2.cleanup(), i2.readyState = "closed", i2.emitAll("connect_error", t3), e2) {
            var r3 = new Error("Connection error");
            r3.data = t3, e2(r3);
          } else
            i2.maybeReconnectOnOpen();
        });
        if (this._timeout !== false) {
          var c2 = this._timeout;
          u("connect attempt will timeout after %d", c2);
          var h2 = setTimeout(function() {
            u("connect attempt timed out after %d", c2), s2.destroy(), r2.close(), r2.emit("error", "timeout"), i2.emitAll("connect_timeout", c2);
          }, c2);
          this.subs.push({destroy: function() {
            clearTimeout(h2);
          }});
        }
        return this.subs.push(s2), this.subs.push(o2), this;
      }, l.prototype.onopen = function() {
        u("open"), this.cleanup(), this.readyState = "open", this.emit("open");
        var e2 = this.engine;
        this.subs.push(a(e2, "data", c(this, "ondata"))), this.subs.push(a(e2, "ping", c(this, "onping"))), this.subs.push(a(e2, "pong", c(this, "onpong"))), this.subs.push(a(e2, "error", c(this, "onerror"))), this.subs.push(a(e2, "close", c(this, "onclose"))), this.subs.push(a(this.decoder, "decoded", c(this, "ondecoded")));
      }, l.prototype.onping = function() {
        this.lastPing = new Date(), this.emitAll("ping");
      }, l.prototype.onpong = function() {
        this.emitAll("pong", new Date() - this.lastPing);
      }, l.prototype.ondata = function(e2) {
        this.decoder.add(e2);
      }, l.prototype.ondecoded = function(e2) {
        this.emit("packet", e2);
      }, l.prototype.onerror = function(e2) {
        u("error", e2), this.emitAll("error", e2);
      }, l.prototype.socket = function(e2, t2) {
        var r2 = this.nsps[e2];
        if (!r2) {
          r2 = new i(this, e2, t2), this.nsps[e2] = r2;
          var n2 = this;
          r2.on("connecting", s2), r2.on("connect", function() {
            r2.id = n2.generateId(e2);
          }), this.autoConnect && s2();
        }
        function s2() {
          ~h(n2.connecting, r2) || n2.connecting.push(r2);
        }
        return r2;
      }, l.prototype.destroy = function(e2) {
        var t2 = h(this.connecting, e2);
        ~t2 && this.connecting.splice(t2, 1), this.connecting.length || this.close();
      }, l.prototype.packet = function(e2) {
        u("writing packet %j", e2);
        var t2 = this;
        e2.query && e2.type === 0 && (e2.nsp += "?" + e2.query), t2.encoding ? t2.packetBuffer.push(e2) : (t2.encoding = true, this.encoder.encode(e2, function(r2) {
          for (var n2 = 0; n2 < r2.length; n2++)
            t2.engine.write(r2[n2], e2.options);
          t2.encoding = false, t2.processPacketQueue();
        }));
      }, l.prototype.processPacketQueue = function() {
        if (this.packetBuffer.length > 0 && !this.encoding) {
          var e2 = this.packetBuffer.shift();
          this.packet(e2);
        }
      }, l.prototype.cleanup = function() {
        u("cleanup");
        for (var e2 = this.subs.length, t2 = 0; t2 < e2; t2++) {
          this.subs.shift().destroy();
        }
        this.packetBuffer = [], this.encoding = false, this.lastPing = null, this.decoder.destroy();
      }, l.prototype.close = l.prototype.disconnect = function() {
        u("disconnect"), this.skipReconnect = true, this.reconnecting = false, this.readyState === "opening" && this.cleanup(), this.backoff.reset(), this.readyState = "closed", this.engine && this.engine.close();
      }, l.prototype.onclose = function(e2) {
        u("onclose"), this.cleanup(), this.backoff.reset(), this.readyState = "closed", this.emit("close", e2), this._reconnection && !this.skipReconnect && this.reconnect();
      }, l.prototype.reconnect = function() {
        if (this.reconnecting || this.skipReconnect)
          return this;
        var e2 = this;
        if (this.backoff.attempts >= this._reconnectionAttempts)
          u("reconnect failed"), this.backoff.reset(), this.emitAll("reconnect_failed"), this.reconnecting = false;
        else {
          var t2 = this.backoff.duration();
          u("will wait %dms before reconnect attempt", t2), this.reconnecting = true;
          var r2 = setTimeout(function() {
            e2.skipReconnect || (u("attempting reconnect"), e2.emitAll("reconnect_attempt", e2.backoff.attempts), e2.emitAll("reconnecting", e2.backoff.attempts), e2.skipReconnect || e2.open(function(t3) {
              t3 ? (u("reconnect attempt error"), e2.reconnecting = false, e2.reconnect(), e2.emitAll("reconnect_error", t3.data)) : (u("reconnect success"), e2.onreconnect());
            }));
          }, t2);
          this.subs.push({destroy: function() {
            clearTimeout(r2);
          }});
        }
      }, l.prototype.onreconnect = function() {
        var e2 = this.backoff.attempts;
        this.reconnecting = false, this.backoff.reset(), this.updateSocketIds(), this.emitAll("reconnect", e2);
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(203), i = r(970), s = r(980), o = r(981);
      t.polling = function(e2) {
        var t2 = false, r2 = false, o2 = e2.jsonp !== false;
        if (typeof location != "undefined") {
          var a = location.protocol === "https:", c = location.port;
          c || (c = a ? 443 : 80), t2 = e2.hostname !== location.hostname || c !== e2.port, r2 = e2.secure !== a;
        }
        if (e2.xdomain = t2, e2.xscheme = r2, "open" in new n(e2) && !e2.forceJSONP)
          return new i(e2);
        if (!o2)
          throw new Error("JSONP disabled");
        return new s(e2);
      }, t.websocket = o;
    }, function(e, t, r) {
      "use strict";
      var n = r(205), i = r(207), s = r(76), o = r(121), a = r(361), c = r(122)("engine.io-client:polling");
      e.exports = h;
      var u = new (r(203))({xdomain: false}).responseType != null;
      function h(e2) {
        var t2 = e2 && e2.forceBase64;
        u && !t2 || (this.supportsBinary = false), n.call(this, e2);
      }
      o(h, n), h.prototype.name = "polling", h.prototype.doOpen = function() {
        this.poll();
      }, h.prototype.pause = function(e2) {
        var t2 = this;
        function r2() {
          c("paused"), t2.readyState = "paused", e2();
        }
        if (this.readyState = "pausing", this.polling || !this.writable) {
          var n2 = 0;
          this.polling && (c("we are currently polling - waiting to pause"), n2++, this.once("pollComplete", function() {
            c("pre-pause polling complete"), --n2 || r2();
          })), this.writable || (c("we are currently writing - waiting to pause"), n2++, this.once("drain", function() {
            c("pre-pause writing complete"), --n2 || r2();
          }));
        } else
          r2();
      }, h.prototype.poll = function() {
        c("polling"), this.polling = true, this.doPoll(), this.emit("poll");
      }, h.prototype.onData = function(e2) {
        var t2 = this;
        c("polling got data %s", e2);
        s.decodePayload(e2, this.socket.binaryType, function(e3, r2, n2) {
          if (t2.readyState === "opening" && t2.onOpen(), e3.type === "close")
            return t2.onClose(), false;
          t2.onPacket(e3);
        }), this.readyState !== "closed" && (this.polling = false, this.emit("pollComplete"), this.readyState === "open" ? this.poll() : c('ignoring poll - transport state "%s"', this.readyState));
      }, h.prototype.doClose = function() {
        var e2 = this;
        function t2() {
          c("writing close packet"), e2.write([{type: "close"}]);
        }
        this.readyState === "open" ? (c("transport open - closing"), t2()) : (c("transport not open - deferring close"), this.once("open", t2));
      }, h.prototype.write = function(e2) {
        var t2 = this;
        this.writable = false;
        var r2 = function() {
          t2.writable = true, t2.emit("drain");
        };
        s.encodePayload(e2, this.supportsBinary, function(e3) {
          t2.doWrite(e3, r2);
        });
      }, h.prototype.uri = function() {
        var e2 = this.query || {}, t2 = this.secure ? "https" : "http", r2 = "";
        return this.timestampRequests !== false && (e2[this.timestampParam] = a()), this.supportsBinary || e2.sid || (e2.b64 = 1), e2 = i.encode(e2), this.port && (t2 === "https" && Number(this.port) !== 443 || t2 === "http" && Number(this.port) !== 80) && (r2 = ":" + this.port), e2.length && (e2 = "?" + e2), t2 + "://" + (this.hostname.indexOf(":") !== -1 ? "[" + this.hostname + "]" : this.hostname) + r2 + this.path + e2;
      };
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        var n = r(972), i = Object.prototype.toString, s = typeof Blob == "function" || typeof Blob != "undefined" && i.call(Blob) === "[object BlobConstructor]", o = typeof File == "function" || typeof File != "undefined" && i.call(File) === "[object FileConstructor]";
        e.exports = function e2(r2) {
          if (!r2 || typeof r2 != "object")
            return false;
          if (n(r2)) {
            for (var i2 = 0, a = r2.length; i2 < a; i2++)
              if (e2(r2[i2]))
                return true;
            return false;
          }
          if (typeof t2 == "function" && t2.isBuffer && t2.isBuffer(r2) || typeof ArrayBuffer == "function" && r2 instanceof ArrayBuffer || s && r2 instanceof Blob || o && r2 instanceof File)
            return true;
          if (r2.toJSON && typeof r2.toJSON == "function" && arguments.length === 1)
            return e2(r2.toJSON(), true);
          for (var c in r2)
            if (Object.prototype.hasOwnProperty.call(r2, c) && e2(r2[c]))
              return true;
          return false;
        };
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      var n, i = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""), s = {}, o = 0, a = 0;
      function c(e2) {
        var t2 = "";
        do {
          t2 = i[e2 % 64] + t2, e2 = Math.floor(e2 / 64);
        } while (e2 > 0);
        return t2;
      }
      function u() {
        var e2 = c(+new Date());
        return e2 !== n ? (o = 0, n = e2) : e2 + "." + c(o++);
      }
      for (; a < 64; a++)
        s[i[a]] = a;
      u.encode = c, u.decode = function(e2) {
        var t2 = 0;
        for (a = 0; a < e2.length; a++)
          t2 = 64 * t2 + s[e2.charAt(a)];
        return t2;
      }, e.exports = u;
    }, function(e, t, r) {
      "use strict";
      var n = [].indexOf;
      e.exports = function(e2, t2) {
        if (n)
          return e2.indexOf(t2);
        for (var r2 = 0; r2 < e2.length; ++r2)
          if (e2[r2] === t2)
            return r2;
        return -1;
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(202), i = r(364), s = r(984), o = r(365), a = r(366), c = r(120)("socket.io-client:socket"), u = r(985), h = r(360);
      e.exports = l;
      var f = {connect: 1, connect_error: 1, connect_timeout: 1, connecting: 1, disconnect: 1, error: 1, reconnect: 1, reconnect_attempt: 1, reconnect_failed: 1, reconnect_error: 1, reconnecting: 1, ping: 1, pong: 1}, d = i.prototype.emit;
      function l(e2, t2, r2) {
        this.io = e2, this.nsp = t2, this.json = this, this.ids = 0, this.acks = {}, this.receiveBuffer = [], this.sendBuffer = [], this.connected = false, this.disconnected = true, this.flags = {}, r2 && r2.query && (this.query = r2.query), this.io.autoConnect && this.open();
      }
      i(l.prototype), l.prototype.subEvents = function() {
        if (!this.subs) {
          var e2 = this.io;
          this.subs = [o(e2, "open", a(this, "onopen")), o(e2, "packet", a(this, "onpacket")), o(e2, "close", a(this, "onclose"))];
        }
      }, l.prototype.open = l.prototype.connect = function() {
        return this.connected || (this.subEvents(), this.io.open(), this.io.readyState === "open" && this.onopen(), this.emit("connecting")), this;
      }, l.prototype.send = function() {
        var e2 = s(arguments);
        return e2.unshift("message"), this.emit.apply(this, e2), this;
      }, l.prototype.emit = function(e2) {
        if (f.hasOwnProperty(e2))
          return d.apply(this, arguments), this;
        var t2 = s(arguments), r2 = {type: (this.flags.binary !== void 0 ? this.flags.binary : h(t2)) ? n.BINARY_EVENT : n.EVENT, data: t2, options: {}};
        return r2.options.compress = !this.flags || this.flags.compress !== false, typeof t2[t2.length - 1] == "function" && (c("emitting packet with ack id %d", this.ids), this.acks[this.ids] = t2.pop(), r2.id = this.ids++), this.connected ? this.packet(r2) : this.sendBuffer.push(r2), this.flags = {}, this;
      }, l.prototype.packet = function(e2) {
        e2.nsp = this.nsp, this.io.packet(e2);
      }, l.prototype.onopen = function() {
        if (c("transport is open - connecting"), this.nsp !== "/")
          if (this.query) {
            var e2 = typeof this.query == "object" ? u.encode(this.query) : this.query;
            c("sending connect packet with query %s", e2), this.packet({type: n.CONNECT, query: e2});
          } else
            this.packet({type: n.CONNECT});
      }, l.prototype.onclose = function(e2) {
        c("close (%s)", e2), this.connected = false, this.disconnected = true, delete this.id, this.emit("disconnect", e2);
      }, l.prototype.onpacket = function(e2) {
        var t2 = e2.nsp === this.nsp, r2 = e2.type === n.ERROR && e2.nsp === "/";
        if (t2 || r2)
          switch (e2.type) {
            case n.CONNECT:
              this.onconnect();
              break;
            case n.EVENT:
            case n.BINARY_EVENT:
              this.onevent(e2);
              break;
            case n.ACK:
            case n.BINARY_ACK:
              this.onack(e2);
              break;
            case n.DISCONNECT:
              this.ondisconnect();
              break;
            case n.ERROR:
              this.emit("error", e2.data);
          }
      }, l.prototype.onevent = function(e2) {
        var t2 = e2.data || [];
        c("emitting event %j", t2), e2.id != null && (c("attaching ack callback to event"), t2.push(this.ack(e2.id))), this.connected ? d.apply(this, t2) : this.receiveBuffer.push(t2);
      }, l.prototype.ack = function(e2) {
        var t2 = this, r2 = false;
        return function() {
          if (!r2) {
            r2 = true;
            var i2 = s(arguments);
            c("sending ack %j", i2), t2.packet({type: h(i2) ? n.BINARY_ACK : n.ACK, id: e2, data: i2});
          }
        };
      }, l.prototype.onack = function(e2) {
        var t2 = this.acks[e2.id];
        typeof t2 == "function" ? (c("calling ack %s with %j", e2.id, e2.data), t2.apply(this, e2.data), delete this.acks[e2.id]) : c("bad ack %s", e2.id);
      }, l.prototype.onconnect = function() {
        this.connected = true, this.disconnected = false, this.emit("connect"), this.emitBuffered();
      }, l.prototype.emitBuffered = function() {
        var e2;
        for (e2 = 0; e2 < this.receiveBuffer.length; e2++)
          d.apply(this, this.receiveBuffer[e2]);
        for (this.receiveBuffer = [], e2 = 0; e2 < this.sendBuffer.length; e2++)
          this.packet(this.sendBuffer[e2]);
        this.sendBuffer = [];
      }, l.prototype.ondisconnect = function() {
        c("server disconnect (%s)", this.nsp), this.destroy(), this.onclose("io server disconnect");
      }, l.prototype.destroy = function() {
        if (this.subs) {
          for (var e2 = 0; e2 < this.subs.length; e2++)
            this.subs[e2].destroy();
          this.subs = null;
        }
        this.io.destroy(this);
      }, l.prototype.close = l.prototype.disconnect = function() {
        return this.connected && (c("performing disconnect (%s)", this.nsp), this.packet({type: n.DISCONNECT})), this.destroy(), this.connected && this.onclose("io client disconnect"), this;
      }, l.prototype.compress = function(e2) {
        return this.flags.compress = e2, this;
      }, l.prototype.binary = function(e2) {
        return this.flags.binary = e2, this;
      };
    }, function(e, t, r) {
      "use strict";
      function n(e2) {
        if (e2)
          return function(e3) {
            for (var t2 in n.prototype)
              e3[t2] = n.prototype[t2];
            return e3;
          }(e2);
      }
      e.exports = n, n.prototype.on = n.prototype.addEventListener = function(e2, t2) {
        return this._callbacks = this._callbacks || {}, (this._callbacks["$" + e2] = this._callbacks["$" + e2] || []).push(t2), this;
      }, n.prototype.once = function(e2, t2) {
        function r2() {
          this.off(e2, r2), t2.apply(this, arguments);
        }
        return r2.fn = t2, this.on(e2, r2), this;
      }, n.prototype.off = n.prototype.removeListener = n.prototype.removeAllListeners = n.prototype.removeEventListener = function(e2, t2) {
        if (this._callbacks = this._callbacks || {}, arguments.length == 0)
          return this._callbacks = {}, this;
        var r2, n2 = this._callbacks["$" + e2];
        if (!n2)
          return this;
        if (arguments.length == 1)
          return delete this._callbacks["$" + e2], this;
        for (var i = 0; i < n2.length; i++)
          if ((r2 = n2[i]) === t2 || r2.fn === t2) {
            n2.splice(i, 1);
            break;
          }
        return this;
      }, n.prototype.emit = function(e2) {
        this._callbacks = this._callbacks || {};
        var t2 = [].slice.call(arguments, 1), r2 = this._callbacks["$" + e2];
        if (r2)
          for (var n2 = 0, i = (r2 = r2.slice(0)).length; n2 < i; ++n2)
            r2[n2].apply(this, t2);
        return this;
      }, n.prototype.listeners = function(e2) {
        return this._callbacks = this._callbacks || {}, this._callbacks["$" + e2] || [];
      }, n.prototype.hasListeners = function(e2) {
        return !!this.listeners(e2).length;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2, r2) {
        return e2.on(t2, r2), {destroy: function() {
          e2.removeListener(t2, r2);
        }};
      };
    }, function(e, t, r) {
      "use strict";
      var n = [].slice;
      e.exports = function(e2, t2) {
        if (typeof t2 == "string" && (t2 = e2[t2]), typeof t2 != "function")
          throw new Error("bind() requires a function");
        var r2 = n.call(arguments, 2);
        return function() {
          return t2.apply(e2, r2.concat(n.call(arguments)));
        };
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(45), i = r(987), {CLOSE_TIMEOUT: s} = r(201), o = r(346), a = r(1), c = a("libp2p:webrtc-star:socket");
      c.error = a("libp2p:webrtc-star:socket:error");
      const u = (e2, t2) => {
        if (e2 && t2)
          try {
            return o(e2, t2);
          } catch (r2) {
            return c.error(r2), o("0.0.0.0", t2);
          }
      };
      e.exports = (e2, t2 = {}) => {
        const {sink: r2, source: o2} = i.duplex(e2), a2 = t2.remoteAddr || u(e2.remoteAddress, e2.remotePort), h = u(e2.localAddress, e2.localPort), f = {async sink(e3) {
          t2.signal && (e3 = n(e3, t2.signal));
          try {
            await r2(async function* () {
              for await (const t3 of e3)
                yield t3 instanceof Uint8Array ? t3 : t3.slice();
            }());
          } catch (i2) {
            i2.type !== "aborted" && c.error(i2);
          }
        }, source: t2.signal ? n(o2, t2.signal) : o2, conn: e2, localAddr: h, remoteAddr: a2, timeline: {open: Date.now()}, close() {
          if (!e2.destroyed)
            return new Promise((t3, r3) => {
              const n2 = Date.now(), i2 = setTimeout(() => {
                if (f.remoteAddr) {
                  const {host: e3, port: t4} = f.remoteAddr.toOptions();
                  c("timeout closing socket to %s:%s after %dms, destroying it manually", e3, t4, Date.now() - n2);
                }
                e2.destroyed || e2.destroy();
              }, s);
              e2.once("close", () => {
                t3();
              }), e2.end((e3) => {
                if (clearTimeout(i2), f.timeline.close = Date.now(), e3)
                  return r3(e3);
              });
            });
        }};
        return e2.once("close", () => {
          f.timeline.close || (f.timeline.close = Date.now());
        }), f;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(190);
      e.exports = (e2) => async (t2) => {
        t2 = n(t2);
        const r2 = (e3) => {
          typeof e3.return == "function" && e3.return();
        };
        let i = null, s = null;
        const o = (e3) => {
          i = e3, s && s(e3), r2(t2);
        };
        let a = null, c = false;
        const u = () => {
          c = true, a && a();
        };
        let h = null, f = false;
        const d = () => {
          f = true, h && h();
        };
        let l = null;
        const p = () => {
          l && l();
        };
        e2.once("error", o), e2.once("close", u), e2.once("finish", d);
        try {
          for await (const r3 of t2) {
            if (!e2.writable || e2.destroyed || i)
              break;
            e2.write(r3) === false && await new Promise((t3, r4) => {
              a = l = t3, s = r4, e2.once("drain", p);
            });
          }
        } catch (y) {
          i || e2.destroy(), i = y;
        }
        try {
          if (e2.writable && e2.end(), await (r2(t2), new Promise((e3, t3) => {
            if (c || f || i)
              return e3();
            h = a = e3, s = t3;
          })), i)
            throw i;
        } finally {
          e2.removeListener("error", o), e2.removeListener("close", u), e2.removeListener("finish", d), e2.removeListener("drain", p);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(368), i = r(208);
      e.exports = (e2) => ({sink: n(e2), source: i(e2)});
    }, function(e, t, r) {
      "use strict";
      const n = r(11);
      (t = e.exports).cleanUrlSIO = function(e2) {
        const t2 = e2.toString().split("/"), r2 = e2.protos()[1].name, i = e2.protos()[2].name, s = e2.stringTuples()[1][1];
        if (r2 !== "tcp" || i !== "ws" && i !== "wss")
          throw new Error("invalid multiaddr: " + e2.toString());
        return n.isName(e2) ? i === "ws" ? "http://" + t2[2] + (s === 80 ? "" : ":" + s) : i === "wss" ? "https://" + t2[2] + (s === 443 ? "" : ":" + s) : void 0 : "http://" + t2[2] + ":" + t2[4];
      }, t.cleanMultiaddr = function(e2) {
        const t2 = "/libp2p-webrtc-star";
        if (e2.indexOf(t2) !== -1) {
          e2 = e2.substring(t2.length, e2.length);
          let r2 = n(e2);
          const i = r2.stringTuples().filter((e3) => e3[0] === 421)[0];
          r2 = r2.decapsulate("p2p"), r2 = r2.encapsulate("/p2p-webrtc-star"), r2 = r2.encapsulate("/p2p/" + i[1]), e2 = r2.toString();
        }
        return e2;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = {encode: r(993), decode: r(994), encodingLength: r(995)};
    }, function(e, t, r) {
      "use strict";
      e.exports = (e2) => {
        e2 = e2 || 1 << 20;
        const t2 = (t3) => {
          if (t3.data && t3.data.length > e2)
            throw Object.assign(new Error("message size too large!"), {code: "ERR_MSG_TOO_BIG"});
        };
        return (e3) => async function* () {
          for await (const r2 of e3)
            Array.isArray(r2) ? r2.forEach(t2) : t2(r2), yield r2;
        }();
      }, e.exports.MAX_MSG_SIZE = 1 << 20;
    }, function(e, t, r) {
      "use strict";
      const n = Object.freeze({NEW_STREAM: 0, MESSAGE_RECEIVER: 1, MESSAGE_INITIATOR: 2, CLOSE_RECEIVER: 3, CLOSE_INITIATOR: 4, RESET_RECEIVER: 5, RESET_INITIATOR: 6});
      t.MessageTypes = n, t.InitiatorMessageTypes = Object.freeze({NEW_STREAM: n.NEW_STREAM, MESSAGE: n.MESSAGE_INITIATOR, CLOSE: n.CLOSE_INITIATOR, RESET: n.RESET_INITIATOR}), t.ReceiverMessageTypes = Object.freeze({MESSAGE: n.MESSAGE_RECEIVER, CLOSE: n.CLOSE_RECEIVER, RESET: n.RESET_RECEIVER}), t.MessageTypeNames = Object.freeze(Object.entries(n).reduce((e2, t2) => (e2[t2[1]] = t2[0], e2), {}));
    }, function(e, t, r) {
      "use strict";
      var n = function(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      };
      Object.defineProperty(t, "__esModule", {value: true}), t.Noise = void 0;
      const i = n(r(209)), s = r(3), o = n(r(1007)), a = n(r(1009)), c = n(r(119)), u = n(r(25)), h = r(34), f = r(376), d = r(1034), l = r(1037), p = r(57), y = r(123), g = r(1038), b = r(1039), m = r(97), v = r(210);
      t.Noise = class {
        constructor(e2, t2) {
          if (this.protocol = "/noise", this.prologue = s.Buffer.alloc(0), this.earlyData = t2 || s.Buffer.alloc(0), this.useNoisePipes = false, e2) {
            const t3 = i.default.publicKeyCreate(e2);
            this.staticKeys = {privateKey: e2, publicKey: t3};
          } else
            this.staticKeys = p.generateKeypair();
        }
        async secureOutbound(e2, t2, r2) {
          const n2 = o.default(t2, {lengthEncoder: y.uint16BEEncode, lengthDecoder: y.uint16BEDecode, maxDataLength: v.NOISE_MSG_MAX_LENGTH_BYTES}), i2 = await this.performHandshake({connection: n2, isInitiator: true, localPeer: e2, remotePeer: r2});
          return {conn: await this.createSecureConnection(n2, i2), remoteEarlyData: i2.remoteEarlyData, remotePeer: i2.remotePeer};
        }
        async secureInbound(e2, t2, r2) {
          const n2 = o.default(t2, {lengthEncoder: y.uint16BEEncode, lengthDecoder: y.uint16BEDecode, maxDataLength: v.NOISE_MSG_MAX_LENGTH_BYTES}), i2 = await this.performHandshake({connection: n2, isInitiator: false, localPeer: e2, remotePeer: r2});
          return {conn: await this.createSecureConnection(n2, i2), remoteEarlyData: i2.remoteEarlyData, remotePeer: i2.remotePeer};
        }
        async performHandshake(e2) {
          const t2 = await p.getPayload(e2.localPeer, this.staticKeys.publicKey, this.earlyData);
          let r2 = this.useNoisePipes;
          if (e2.isInitiator && b.KeyCache.load(e2.remotePeer) === null && (r2 = false), !r2)
            return await this.performXXHandshake(e2, t2);
          {
            const {remotePeer: r3, connection: i2, isInitiator: o2} = e2, a2 = new d.IKHandshake(o2, t2, this.prologue, this.staticKeys, i2, b.KeyCache.load(e2.remotePeer) || s.Buffer.alloc(32), r3);
            try {
              return await this.performIKHandshake(a2);
            } catch (n2) {
              let r4;
              return e2.isInitiator && (r4 = a2.getLocalEphemeralKeys()), await this.performXXFallbackHandshake(e2, t2, n2.initialMsg, r4);
            }
          }
        }
        async performXXFallbackHandshake(e2, t2, r2, n2) {
          const {isInitiator: i2, remotePeer: s2, connection: o2} = e2, a2 = new l.XXFallbackHandshake(i2, t2, this.prologue, this.staticKeys, o2, r2, s2, n2);
          try {
            await a2.propose(), await a2.exchange(), await a2.finish();
          } catch (c2) {
            throw m.logger(c2), new Error("Error occurred during XX Fallback handshake: " + c2.message);
          }
          return a2;
        }
        async performXXHandshake(e2, t2) {
          const {isInitiator: r2, remotePeer: n2, connection: i2} = e2, s2 = new f.XXHandshake(r2, t2, this.prologue, this.staticKeys, i2, n2);
          try {
            await s2.propose(), await s2.exchange(), await s2.finish(), this.useNoisePipes && s2.remotePeer && b.KeyCache.store(s2.remotePeer, s2.getRemoteStaticKey());
          } catch (o2) {
            throw new Error("Error occurred during XX handshake: " + o2.message);
          }
          return s2;
        }
        async performIKHandshake(e2) {
          return await e2.stage0(), await e2.stage1(), e2;
        }
        async createSecureConnection(e2, t2) {
          const [r2, n2] = a.default(), i2 = e2.unwrap();
          return await u.default(r2, c.default, g.encryptStream(t2), h.encode({lengthEncoder: y.uint16BEEncode}), i2, h.decode({lengthDecoder: y.uint16BEDecode}), c.default, g.decryptStream(t2), r2), n2;
        }
      };
    }, function(e, t, r) {
      "use strict";
      t.custom = "inspect";
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.XXHandshake = void 0;
      const n = r(3), i = r(1011), s = r(57), o = r(97), a = r(123);
      t.XXHandshake = class {
        constructor(e2, t2, r2, s2, o2, a2, c) {
          this.isInitiator = e2, this.payload = t2, this.prologue = r2, this.staticKeypair = s2, this.connection = o2, a2 && (this.remotePeer = a2), this.xx = c || new i.XX(), this.session = this.xx.initSession(this.isInitiator, this.prologue, this.staticKeypair), this.remoteEarlyData = n.Buffer.alloc(0);
        }
        async propose() {
          if (o.logLocalStaticKeys(this.session.hs.s), this.isInitiator) {
            o.logger("Stage 0 - Initiator starting to send first message.");
            const e2 = this.xx.sendMessage(this.session, n.Buffer.alloc(0));
            this.connection.writeLP(a.encode0(e2)), o.logger("Stage 0 - Initiator finished sending first message."), o.logLocalEphemeralKeys(this.session.hs.e);
          } else {
            o.logger("Stage 0 - Responder waiting to receive first message...");
            const e2 = a.decode0((await this.connection.readLP()).slice()), {valid: t2} = this.xx.recvMessage(this.session, e2);
            if (!t2)
              throw new Error("xx handshake stage 0 validation fail");
            o.logger("Stage 0 - Responder received first message."), o.logRemoteEphemeralKey(this.session.hs.re);
          }
        }
        async exchange() {
          if (this.isInitiator) {
            o.logger("Stage 1 - Initiator waiting to receive first message from responder...");
            const t2 = a.decode1((await this.connection.readLP()).slice()), {plaintext: r2, valid: n2} = this.xx.recvMessage(this.session, t2);
            if (!n2)
              throw new Error("xx handshake stage 1 validation fail");
            o.logger("Stage 1 - Initiator received the message."), o.logRemoteEphemeralKey(this.session.hs.re), o.logRemoteStaticKey(this.session.hs.rs), o.logger("Initiator going to check remote's signature...");
            try {
              const e2 = await s.decodePayload(r2);
              this.remotePeer = this.remotePeer || await s.getPeerIdFromPayload(e2), this.remotePeer = await s.verifySignedPayload(t2.ns, e2, this.remotePeer), this.setRemoteEarlyData(e2.data);
            } catch (e2) {
              throw new Error("Error occurred while verifying signed payload: " + e2.message);
            }
            o.logger("All good with the signature!");
          } else {
            o.logger("Stage 1 - Responder sending out first message with signed payload and static key.");
            const e2 = this.xx.sendMessage(this.session, this.payload);
            this.connection.writeLP(a.encode1(e2)), o.logger("Stage 1 - Responder sent the second handshake message with signed payload."), o.logLocalEphemeralKeys(this.session.hs.e);
          }
        }
        async finish() {
          if (this.isInitiator) {
            o.logger("Stage 2 - Initiator sending third handshake message.");
            const e2 = this.xx.sendMessage(this.session, this.payload);
            this.connection.writeLP(a.encode2(e2)), o.logger("Stage 2 - Initiator sent message with signed payload.");
          } else {
            o.logger("Stage 2 - Responder waiting for third handshake message...");
            const t2 = a.decode2((await this.connection.readLP()).slice()), {plaintext: r2, valid: n2} = this.xx.recvMessage(this.session, t2);
            if (!n2)
              throw new Error("xx handshake stage 2 validation fail");
            o.logger("Stage 2 - Responder received the message, finished handshake.");
            try {
              const e2 = await s.decodePayload(r2);
              this.remotePeer = this.remotePeer || await s.getPeerIdFromPayload(e2), await s.verifySignedPayload(this.session.hs.rs, e2, this.remotePeer), this.setRemoteEarlyData(e2.data);
            } catch (e2) {
              throw new Error("Error occurred while verifying signed payload: " + e2.message);
            }
          }
          o.logCipherState(this.session);
        }
        encrypt(e2, t2) {
          const r2 = this.getCS(t2);
          return this.xx.encryptWithAd(r2, n.Buffer.alloc(0), e2);
        }
        decrypt(e2, t2) {
          const r2 = this.getCS(t2, false);
          return this.xx.decryptWithAd(r2, n.Buffer.alloc(0), e2);
        }
        getRemoteStaticKey() {
          return this.session.hs.rs;
        }
        getCS(e2, t2 = true) {
          if (!e2.cs1 || !e2.cs2)
            throw new Error("Handshake not completed properly, cipher state does not exist.");
          return this.isInitiator ? t2 ? e2.cs1 : e2.cs2 : t2 ? e2.cs2 : e2.cs1;
        }
        setRemoteEarlyData(e2) {
          e2 && (this.remoteEarlyData = n.Buffer.from(e2.buffer, e2.byteOffset, e2.length));
        }
      };
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const n = r(42), i = r(1014), s = t2.alloc(8, 0), o = t2.alloc(64, 0);
        o[0] = 128;
        const a = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]);
        class c {
          constructor() {
            this.state = new Uint32Array(8), this.msg = new Uint32Array(64), this.block = t2.alloc(64), this.size = -1;
          }
          init() {
            return this.state[0] = 1779033703, this.state[1] = 3144134277, this.state[2] = 1013904242, this.state[3] = 2773480762, this.state[4] = 1359893119, this.state[5] = 2600822924, this.state[6] = 528734635, this.state[7] = 1541459225, this.size = 0, this;
          }
          update(e2) {
            return n(t2.isBuffer(e2)), this._update(e2, e2.length), this;
          }
          final() {
            return this._final(t2.alloc(32));
          }
          _update(e2, t3) {
            n(this.size !== -1, "Context is not initialized.");
            let r2 = 63 & this.size, i2 = 0;
            if (this.size += t3, r2 > 0) {
              let n2 = 64 - r2;
              if (n2 > t3 && (n2 = t3), e2.copy(this.block, r2, i2, i2 + n2), r2 += n2, t3 -= n2, i2 += n2, r2 < 64)
                return;
              this._transform(this.block, 0);
            }
            for (; t3 >= 64; )
              this._transform(e2, i2), i2 += 64, t3 -= 64;
            t3 > 0 && e2.copy(this.block, 0, i2, i2 + t3);
          }
          _final(e2) {
            n(this.size !== -1, "Context is not initialized.");
            const t3 = 63 & this.size, r2 = 8 * this.size;
            p(s, r2 * (1 / 4294967296) >>> 0, 0), p(s, r2 >>> 0, 4), this._update(o, 1 + (119 - t3 & 63)), this._update(s, 8);
            for (let n2 = 0; n2 < 8; n2++)
              p(e2, this.state[n2], 4 * n2), this.state[n2] = 0;
            for (let n2 = 0; n2 < 64; n2++)
              this.msg[n2] = 0;
            for (let n2 = 0; n2 < 64; n2++)
              this.block[n2] = 0;
            return this.size = -1, e2;
          }
          _transform(e2, t3) {
            const r2 = this.msg;
            let n2 = this.state[0], i2 = this.state[1], s2 = this.state[2], o2 = this.state[3], c2 = this.state[4], p2 = this.state[5], y = this.state[6], g = this.state[7], b = 0;
            for (; b < 16; b++)
              r2[b] = (v = t3 + 4 * b, 16777216 * (m = e2)[v++] + 65536 * m[v++] + 256 * m[v++] + m[v]);
            for (var m, v, w; b < 64; b++)
              r2[b] = (((w = r2[b - 2]) >>> 17 | w << 15) ^ (w >>> 19 | w << 13) ^ w >>> 10) + r2[b - 7] + f(r2[b - 15]) + r2[b - 16];
            for (b = 0; b < 64; b++) {
              const e3 = g + h(c2) + d(c2, p2, y) + a[b] + r2[b], t4 = u(n2) + l(n2, i2, s2);
              g = y, y = p2, p2 = c2, c2 = o2 + e3 >>> 0, o2 = s2, s2 = i2, i2 = n2, n2 = e3 + t4 >>> 0;
            }
            this.state[0] += n2, this.state[1] += i2, this.state[2] += s2, this.state[3] += o2, this.state[4] += c2, this.state[5] += p2, this.state[6] += y, this.state[7] += g;
          }
          static hash() {
            return new c();
          }
          static hmac() {
            return new i(c, 64);
          }
          static digest(e2) {
            return c.ctx.init().update(e2).final();
          }
          static root(e2, r2) {
            return n(t2.isBuffer(e2) && e2.length === 32), n(t2.isBuffer(r2) && r2.length === 32), c.ctx.init().update(e2).update(r2).final();
          }
          static multi(e2, t3, r2) {
            const {ctx: n2} = c;
            return n2.init(), n2.update(e2), n2.update(t3), r2 && n2.update(r2), n2.final();
          }
          static mac(e2, t3) {
            return c.hmac().init(t3).update(e2).final();
          }
        }
        function u(e2) {
          return (e2 >>> 2 | e2 << 30) ^ (e2 >>> 13 | e2 << 19) ^ (e2 >>> 22 | e2 << 10);
        }
        function h(e2) {
          return (e2 >>> 6 | e2 << 26) ^ (e2 >>> 11 | e2 << 21) ^ (e2 >>> 25 | e2 << 7);
        }
        function f(e2) {
          return (e2 >>> 7 | e2 << 25) ^ (e2 >>> 18 | e2 << 14) ^ e2 >>> 3;
        }
        function d(e2, t3, r2) {
          return r2 ^ e2 & (t3 ^ r2);
        }
        function l(e2, t3, r2) {
          return e2 & t3 | r2 & (e2 | t3);
        }
        function p(e2, t3, r2) {
          return e2[r2++] = t3 >>> 24, e2[r2++] = t3 >>> 16, e2[r2++] = t3 >>> 8, e2[r2++] = t3, r2;
        }
        c.native = 0, c.id = "SHA256", c.size = 32, c.bits = 256, c.blockSize = 64, c.zero = t2.alloc(32, 0), c.ctx = new c(), e.exports = c;
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      e.exports = f;
      var n, i = r(58), s = i.LongBits, o = i.base64, a = i.utf8;
      function c(e2, t2, r2) {
        this.fn = e2, this.len = t2, this.next = void 0, this.val = r2;
      }
      function u() {
      }
      function h(e2) {
        this.head = e2.head, this.tail = e2.tail, this.len = e2.len, this.next = e2.states;
      }
      function f() {
        this.len = 0, this.head = new c(u, 0, 0), this.tail = this.head, this.states = null;
      }
      var d = function() {
        return i.Buffer ? function() {
          return (f.create = function() {
            return new n();
          })();
        } : function() {
          return new f();
        };
      };
      function l(e2, t2, r2) {
        t2[r2] = 255 & e2;
      }
      function p(e2, t2) {
        this.len = e2, this.next = void 0, this.val = t2;
      }
      function y(e2, t2, r2) {
        for (; e2.hi; )
          t2[r2++] = 127 & e2.lo | 128, e2.lo = (e2.lo >>> 7 | e2.hi << 25) >>> 0, e2.hi >>>= 7;
        for (; e2.lo > 127; )
          t2[r2++] = 127 & e2.lo | 128, e2.lo = e2.lo >>> 7;
        t2[r2++] = e2.lo;
      }
      function g(e2, t2, r2) {
        t2[r2] = 255 & e2, t2[r2 + 1] = e2 >>> 8 & 255, t2[r2 + 2] = e2 >>> 16 & 255, t2[r2 + 3] = e2 >>> 24;
      }
      f.create = d(), f.alloc = function(e2) {
        return new i.Array(e2);
      }, i.Array !== Array && (f.alloc = i.pool(f.alloc, i.Array.prototype.subarray)), f.prototype._push = function(e2, t2, r2) {
        return this.tail = this.tail.next = new c(e2, t2, r2), this.len += t2, this;
      }, p.prototype = Object.create(c.prototype), p.prototype.fn = function(e2, t2, r2) {
        for (; e2 > 127; )
          t2[r2++] = 127 & e2 | 128, e2 >>>= 7;
        t2[r2] = e2;
      }, f.prototype.uint32 = function(e2) {
        return this.len += (this.tail = this.tail.next = new p((e2 >>>= 0) < 128 ? 1 : e2 < 16384 ? 2 : e2 < 2097152 ? 3 : e2 < 268435456 ? 4 : 5, e2)).len, this;
      }, f.prototype.int32 = function(e2) {
        return e2 < 0 ? this._push(y, 10, s.fromNumber(e2)) : this.uint32(e2);
      }, f.prototype.sint32 = function(e2) {
        return this.uint32((e2 << 1 ^ e2 >> 31) >>> 0);
      }, f.prototype.uint64 = function(e2) {
        var t2 = s.from(e2);
        return this._push(y, t2.length(), t2);
      }, f.prototype.int64 = f.prototype.uint64, f.prototype.sint64 = function(e2) {
        var t2 = s.from(e2).zzEncode();
        return this._push(y, t2.length(), t2);
      }, f.prototype.bool = function(e2) {
        return this._push(l, 1, e2 ? 1 : 0);
      }, f.prototype.fixed32 = function(e2) {
        return this._push(g, 4, e2 >>> 0);
      }, f.prototype.sfixed32 = f.prototype.fixed32, f.prototype.fixed64 = function(e2) {
        var t2 = s.from(e2);
        return this._push(g, 4, t2.lo)._push(g, 4, t2.hi);
      }, f.prototype.sfixed64 = f.prototype.fixed64, f.prototype.float = function(e2) {
        return this._push(i.float.writeFloatLE, 4, e2);
      }, f.prototype.double = function(e2) {
        return this._push(i.float.writeDoubleLE, 8, e2);
      };
      var b = i.Array.prototype.set ? function(e2, t2, r2) {
        t2.set(e2, r2);
      } : function(e2, t2, r2) {
        for (var n2 = 0; n2 < e2.length; ++n2)
          t2[r2 + n2] = e2[n2];
      };
      f.prototype.bytes = function(e2) {
        var t2 = e2.length >>> 0;
        if (!t2)
          return this._push(l, 1, 0);
        if (i.isString(e2)) {
          var r2 = f.alloc(t2 = o.length(e2));
          o.decode(e2, r2, 0), e2 = r2;
        }
        return this.uint32(t2)._push(b, t2, e2);
      }, f.prototype.string = function(e2) {
        var t2 = a.length(e2);
        return t2 ? this.uint32(t2)._push(a.write, t2, e2) : this._push(l, 1, 0);
      }, f.prototype.fork = function() {
        return this.states = new h(this), this.head = this.tail = new c(u, 0, 0), this.len = 0, this;
      }, f.prototype.reset = function() {
        return this.states ? (this.head = this.states.head, this.tail = this.states.tail, this.len = this.states.len, this.states = this.states.next) : (this.head = this.tail = new c(u, 0, 0), this.len = 0), this;
      }, f.prototype.ldelim = function() {
        var e2 = this.head, t2 = this.tail, r2 = this.len;
        return this.reset().uint32(r2), r2 && (this.tail.next = e2.next, this.tail = t2, this.len += r2), this;
      }, f.prototype.finish = function() {
        for (var e2 = this.head.next, t2 = this.constructor.alloc(this.len), r2 = 0; e2; )
          e2.fn(e2.val, t2, r2), r2 += e2.len, e2 = e2.next;
        return t2;
      }, f._configure = function(e2) {
        n = e2, f.create = d(), n._configure();
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = c;
      var n, i = r(58), s = i.LongBits, o = i.utf8;
      function a(e2, t2) {
        return RangeError("index out of range: " + e2.pos + " + " + (t2 || 1) + " > " + e2.len);
      }
      function c(e2) {
        this.buf = e2, this.pos = 0, this.len = e2.length;
      }
      var u, h = typeof Uint8Array != "undefined" ? function(e2) {
        if (e2 instanceof Uint8Array || Array.isArray(e2))
          return new c(e2);
        throw Error("illegal buffer");
      } : function(e2) {
        if (Array.isArray(e2))
          return new c(e2);
        throw Error("illegal buffer");
      }, f = function() {
        return i.Buffer ? function(e2) {
          return (c.create = function(e3) {
            return i.Buffer.isBuffer(e3) ? new n(e3) : h(e3);
          })(e2);
        } : h;
      };
      function d() {
        var e2 = new s(0, 0), t2 = 0;
        if (!(this.len - this.pos > 4)) {
          for (; t2 < 3; ++t2) {
            if (this.pos >= this.len)
              throw a(this);
            if (e2.lo = (e2.lo | (127 & this.buf[this.pos]) << 7 * t2) >>> 0, this.buf[this.pos++] < 128)
              return e2;
          }
          return e2.lo = (e2.lo | (127 & this.buf[this.pos++]) << 7 * t2) >>> 0, e2;
        }
        for (; t2 < 4; ++t2)
          if (e2.lo = (e2.lo | (127 & this.buf[this.pos]) << 7 * t2) >>> 0, this.buf[this.pos++] < 128)
            return e2;
        if (e2.lo = (e2.lo | (127 & this.buf[this.pos]) << 28) >>> 0, e2.hi = (e2.hi | (127 & this.buf[this.pos]) >> 4) >>> 0, this.buf[this.pos++] < 128)
          return e2;
        if (t2 = 0, this.len - this.pos > 4) {
          for (; t2 < 5; ++t2)
            if (e2.hi = (e2.hi | (127 & this.buf[this.pos]) << 7 * t2 + 3) >>> 0, this.buf[this.pos++] < 128)
              return e2;
        } else
          for (; t2 < 5; ++t2) {
            if (this.pos >= this.len)
              throw a(this);
            if (e2.hi = (e2.hi | (127 & this.buf[this.pos]) << 7 * t2 + 3) >>> 0, this.buf[this.pos++] < 128)
              return e2;
          }
        throw Error("invalid varint encoding");
      }
      function l(e2, t2) {
        return (e2[t2 - 4] | e2[t2 - 3] << 8 | e2[t2 - 2] << 16 | e2[t2 - 1] << 24) >>> 0;
      }
      function p() {
        if (this.pos + 8 > this.len)
          throw a(this, 8);
        return new s(l(this.buf, this.pos += 4), l(this.buf, this.pos += 4));
      }
      c.create = f(), c.prototype._slice = i.Array.prototype.subarray || i.Array.prototype.slice, c.prototype.uint32 = (u = 4294967295, function() {
        if (u = (127 & this.buf[this.pos]) >>> 0, this.buf[this.pos++] < 128)
          return u;
        if (u = (u | (127 & this.buf[this.pos]) << 7) >>> 0, this.buf[this.pos++] < 128)
          return u;
        if (u = (u | (127 & this.buf[this.pos]) << 14) >>> 0, this.buf[this.pos++] < 128)
          return u;
        if (u = (u | (127 & this.buf[this.pos]) << 21) >>> 0, this.buf[this.pos++] < 128)
          return u;
        if (u = (u | (15 & this.buf[this.pos]) << 28) >>> 0, this.buf[this.pos++] < 128)
          return u;
        if ((this.pos += 5) > this.len)
          throw this.pos = this.len, a(this, 10);
        return u;
      }), c.prototype.int32 = function() {
        return 0 | this.uint32();
      }, c.prototype.sint32 = function() {
        var e2 = this.uint32();
        return e2 >>> 1 ^ -(1 & e2) | 0;
      }, c.prototype.bool = function() {
        return this.uint32() !== 0;
      }, c.prototype.fixed32 = function() {
        if (this.pos + 4 > this.len)
          throw a(this, 4);
        return l(this.buf, this.pos += 4);
      }, c.prototype.sfixed32 = function() {
        if (this.pos + 4 > this.len)
          throw a(this, 4);
        return 0 | l(this.buf, this.pos += 4);
      }, c.prototype.float = function() {
        if (this.pos + 4 > this.len)
          throw a(this, 4);
        var e2 = i.float.readFloatLE(this.buf, this.pos);
        return this.pos += 4, e2;
      }, c.prototype.double = function() {
        if (this.pos + 8 > this.len)
          throw a(this, 4);
        var e2 = i.float.readDoubleLE(this.buf, this.pos);
        return this.pos += 8, e2;
      }, c.prototype.bytes = function() {
        var e2 = this.uint32(), t2 = this.pos, r2 = this.pos + e2;
        if (r2 > this.len)
          throw a(this, e2);
        return this.pos += e2, Array.isArray(this.buf) ? this.buf.slice(t2, r2) : t2 === r2 ? new this.buf.constructor(0) : this._slice.call(this.buf, t2, r2);
      }, c.prototype.string = function() {
        var e2 = this.bytes();
        return o.read(e2, 0, e2.length);
      }, c.prototype.skip = function(e2) {
        if (typeof e2 == "number") {
          if (this.pos + e2 > this.len)
            throw a(this, e2);
          this.pos += e2;
        } else
          do {
            if (this.pos >= this.len)
              throw a(this);
          } while (128 & this.buf[this.pos++]);
        return this;
      }, c.prototype.skipType = function(e2) {
        switch (e2) {
          case 0:
            this.skip();
            break;
          case 1:
            this.skip(8);
            break;
          case 2:
            this.skip(this.uint32());
            break;
          case 3:
            for (; (e2 = 7 & this.uint32()) != 4; )
              this.skipType(e2);
            break;
          case 5:
            this.skip(4);
            break;
          default:
            throw Error("invalid wire type " + e2 + " at offset " + this.pos);
        }
        return this;
      }, c._configure = function(e2) {
        n = e2, c.create = f(), n._configure();
        var t2 = i.Long ? "toLong" : "toNumber";
        i.merge(c.prototype, {int64: function() {
          return d.call(this)[t2](false);
        }, uint64: function() {
          return d.call(this)[t2](true);
        }, sint64: function() {
          return d.call(this).zzDecode()[t2](false);
        }, fixed64: function() {
          return p.call(this)[t2](true);
        }, sfixed64: function() {
          return p.call(this)[t2](false);
        }});
      };
    }, function(e, t, r) {
      "use strict";
      var n = function(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      };
      Object.defineProperty(t, "__esModule", {value: true}), t.AbstractHandshake = t.MIN_NONCE = void 0;
      const i = r(3), s = n(r(1031)), o = n(r(209)), a = n(r(377)), c = r(57), u = r(97);
      t.MIN_NONCE = 0;
      t.AbstractHandshake = class {
        encryptWithAd(e2, t2, r2) {
          const n2 = this.encrypt(e2.k, e2.n, t2, r2);
          return this.setNonce(e2, this.incrementNonce(e2.n)), n2;
        }
        decryptWithAd(e2, t2, r2) {
          const {plaintext: n2, valid: i2} = this.decrypt(e2.k, e2.n, t2, r2);
          return this.setNonce(e2, this.incrementNonce(e2.n)), {plaintext: n2, valid: i2};
        }
        hasKey(e2) {
          return !this.isEmptyKey(e2.k);
        }
        setNonce(e2, t2) {
          e2.n = t2;
        }
        createEmptyKey() {
          return i.Buffer.alloc(32);
        }
        isEmptyKey(e2) {
          return this.createEmptyKey().equals(e2);
        }
        incrementNonce(e2) {
          return e2 + 1;
        }
        nonceToBytes(e2) {
          const t2 = i.Buffer.alloc(12);
          return t2.writeUInt32LE(e2, 4), t2;
        }
        encrypt(e2, t2, r2, n2) {
          const o2 = this.nonceToBytes(t2), a2 = new s.default();
          return n2 = i.Buffer.from(n2), a2.init(e2, o2), a2.aad(r2), a2.encrypt(n2), i.Buffer.concat([n2, a2.final()]);
        }
        encryptAndHash(e2, t2) {
          let r2;
          return r2 = this.hasKey(e2.cs) ? this.encryptWithAd(e2.cs, e2.h, t2) : t2, this.mixHash(e2, r2), r2;
        }
        decrypt(e2, t2, r2, n2) {
          const o2 = this.nonceToBytes(t2), a2 = new s.default(), c2 = (n2 = i.Buffer.from(n2)).slice(n2.length - 16);
          return n2 = n2.slice(0, n2.length - 16), a2.init(e2, o2), a2.aad(r2), a2.decrypt(n2), {plaintext: n2, valid: a2.verify(c2)};
        }
        decryptAndHash(e2, t2) {
          let r2, n2 = true;
          return this.hasKey(e2.cs) ? {plaintext: r2, valid: n2} = this.decryptWithAd(e2.cs, e2.h, t2) : r2 = t2, this.mixHash(e2, t2), {plaintext: r2, valid: n2};
        }
        dh(e2, t2) {
          try {
            const r2 = o.default.derive(t2, e2), n2 = i.Buffer.alloc(32);
            return r2.copy(n2), n2;
          } catch (r2) {
            return u.logger(r2.message), i.Buffer.alloc(32);
          }
        }
        mixHash(e2, t2) {
          e2.h = this.getHash(e2.h, t2);
        }
        getHash(e2, t2) {
          return a.default.digest(i.Buffer.from([...e2, ...t2]));
        }
        mixKey(e2, t2) {
          const [r2, n2] = c.getHkdf(e2.ck, t2);
          e2.cs = this.initializeKey(n2), e2.ck = r2;
        }
        initializeKey(e2) {
          return {k: e2, n: t.MIN_NONCE};
        }
        initializeSymmetric(e2) {
          const t2 = i.Buffer.from(e2, "utf-8"), r2 = this.hashProtocolName(t2), n2 = r2, s2 = this.createEmptyKey();
          return {cs: this.initializeKey(s2), ck: n2, h: r2};
        }
        hashProtocolName(e2) {
          if (e2.length <= 32) {
            const t2 = i.Buffer.alloc(32);
            return e2.copy(t2), t2;
          }
          return this.getHash(e2, i.Buffer.alloc(0));
        }
        split(e2) {
          const [t2, r2] = c.getHkdf(e2.ck, i.Buffer.alloc(0));
          return {cs1: this.initializeKey(t2), cs2: this.initializeKey(r2)};
        }
        writeMessageRegular(e2, t2) {
          const r2 = this.encryptWithAd(e2, i.Buffer.alloc(0), t2);
          return {ne: this.createEmptyKey(), ns: i.Buffer.alloc(0), ciphertext: r2};
        }
        readMessageRegular(e2, t2) {
          return this.decryptWithAd(e2, i.Buffer.alloc(0), t2.ciphertext);
        }
      };
    }, function(e, t, r) {
      "use strict";
      (function(e2) {
        Object.defineProperty(t, "__esModule", {value: true}), t.hasNextTick = t.hasSetImmediate = void 0, t.fallback = u, t.wrap = h;
        var n, i = r(382), s = (n = i) && n.__esModule ? n : {default: n};
        var o, a = t.hasSetImmediate = typeof setImmediate == "function" && setImmediate, c = t.hasNextTick = typeof e2 == "object" && typeof e2.nextTick == "function";
        function u(e3) {
          setTimeout(e3, 0);
        }
        function h(e3) {
          return function(t2) {
            var r2 = (0, s.default)(arguments, 1);
            e3(function() {
              t2.apply(null, r2);
            });
          };
        }
        o = a ? setImmediate : c ? e2.nextTick : u, t.default = h(o);
      }).call(this, r(10));
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.default = function(e2, t2) {
        t2 |= 0;
        for (var r2 = Math.max(e2.length - t2, 0), n = Array(r2), i = 0; i < r2; i++)
          n[i] = e2[t2 + i];
        return n;
      }, e.exports = t.default;
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.isAsync = void 0;
      var n, i = r(1074), s = (n = i) && n.__esModule ? n : {default: n};
      var o = typeof Symbol == "function";
      function a(e2) {
        return o && e2[Symbol.toStringTag] === "AsyncFunction";
      }
      t.default = function(e2) {
        return a(e2) ? (0, s.default)(e2) : e2;
      }, t.isAsync = a;
    }, function(e, t, r) {
      e.exports = r(385);
    }, function(e, t, r) {
      "use strict";
      e.exports = {...r(386)};
    }, function(e, t, r) {
      "use strict";
      const n = r(387), i = r(388), s = r(7), o = r(39), a = r(52), c = r(11), u = r(30), h = r(17), f = r(15), d = f.multihash, l = r(4), {create: p} = r(516);
      e.exports = {create: p, crypto: o, isIPFS: a, CID: l, multiaddr: c, multibase: u, multihash: d, multihashing: f, multicodec: h, PeerId: s, globSource: n, urlSource: i};
    }, function(e, t) {
    }, function(e, t, r) {
      "use strict";
      const n = r(127);
      e.exports = async function* (e2, t2) {
        const r2 = new n(), i = await r2.get(e2, t2);
        yield {path: decodeURIComponent(new URL(e2).pathname.split("/").pop() || ""), content: i.iterator()};
      };
    }, function(e, t, r) {
      "use strict";
      const {TimeoutError: n, AbortError: i} = r(214), {Request: s, Response: o, Headers: a} = r(390), c = fetch;
      t.fetch = (e2, t2 = {}) => t2.onUploadProgress != null ? ((e3, t3 = {}) => {
        const r2 = new XMLHttpRequest();
        r2.open(t3.method || "GET", e3.toString(), true);
        const {timeout: s2} = t3;
        if (s2 > 0 && s2 < 1 / 0 && (r2.timeout = t3.timeout), t3.overrideMimeType != null && r2.overrideMimeType(t3.overrideMimeType), t3.headers)
          for (const [n2, i2] of t3.headers.entries())
            r2.setRequestHeader(n2, i2);
        return t3.signal && (t3.signal.onabort = () => r2.abort()), t3.onUploadProgress && (r2.upload.onprogress = t3.onUploadProgress), r2.responseType = "arraybuffer", new Promise((e4, s3) => {
          const a2 = (t4) => {
            switch (t4.type) {
              case "error":
                e4(o.error());
                break;
              case "load":
                e4(new h(r2.responseURL, r2.response, {status: r2.status, statusText: r2.statusText, headers: u(r2.getAllResponseHeaders())}));
                break;
              case "timeout":
                s3(new n());
                break;
              case "abort":
                s3(new i());
            }
          };
          r2.onerror = a2, r2.onload = a2, r2.ontimeout = a2, r2.onabort = a2, r2.send(t3.body);
        });
      })(e2, t2) : c(e2, t2), t.Request = s, t.Headers = a;
      const u = (e2) => {
        const t2 = new a();
        for (const r2 of e2.trim().split(/[\r\n]+/)) {
          const e3 = r2.indexOf(": ");
          e3 > 0 && t2.set(r2.slice(0, e3), r2.slice(e3 + 1));
        }
        return t2;
      };
      class h extends o {
        constructor(e2, t2, r2) {
          super(t2, r2), Object.defineProperty(this, "url", {value: e2});
        }
      }
    }, function(e, t, r) {
      "use strict";
      const {isElectronMain: n} = r(215);
      e.exports = r(n ? 392 : 216);
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        e.exports = function() {
          return typeof window != "undefined" && typeof window.process == "object" && window.process.type === "renderer" || (!(t2 === void 0 || typeof t2.versions != "object" || !t2.versions.electron) || typeof navigator == "object" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Electron") >= 0);
        };
      }).call(this, r(10));
    }, function(e, t) {
    }, function(e, t, r) {
      "use strict";
      var n = Array.prototype.slice, i = r(218), s = Object.keys, o = s ? function(e2) {
        return s(e2);
      } : r(394), a = Object.keys;
      o.shim = function() {
        Object.keys ? function() {
          var e2 = Object.keys(arguments);
          return e2 && e2.length === arguments.length;
        }(1, 2) || (Object.keys = function(e2) {
          return i(e2) ? a(n.call(e2)) : a(e2);
        }) : Object.keys = o;
        return Object.keys || o;
      }, e.exports = o;
    }, function(e, t, r) {
      "use strict";
      var n;
      if (!Object.keys) {
        var i = Object.prototype.hasOwnProperty, s = Object.prototype.toString, o = r(218), a = Object.prototype.propertyIsEnumerable, c = !a.call({toString: null}, "toString"), u = a.call(function() {
        }, "prototype"), h = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"], f = function(e2) {
          var t2 = e2.constructor;
          return t2 && t2.prototype === e2;
        }, d = {$applicationCache: true, $console: true, $external: true, $frame: true, $frameElement: true, $frames: true, $innerHeight: true, $innerWidth: true, $onmozfullscreenchange: true, $onmozfullscreenerror: true, $outerHeight: true, $outerWidth: true, $pageXOffset: true, $pageYOffset: true, $parent: true, $scrollLeft: true, $scrollTop: true, $scrollX: true, $scrollY: true, $self: true, $webkitIndexedDB: true, $webkitStorageInfo: true, $window: true}, l = function() {
          if (typeof window == "undefined")
            return false;
          for (var e2 in window)
            try {
              if (!d["$" + e2] && i.call(window, e2) && window[e2] !== null && typeof window[e2] == "object")
                try {
                  f(window[e2]);
                } catch (t2) {
                  return true;
                }
            } catch (t2) {
              return true;
            }
          return false;
        }();
        n = function(e2) {
          var t2 = e2 !== null && typeof e2 == "object", r2 = s.call(e2) === "[object Function]", n2 = o(e2), a2 = t2 && s.call(e2) === "[object String]", d2 = [];
          if (!t2 && !r2 && !n2)
            throw new TypeError("Object.keys called on a non-object");
          var p = u && r2;
          if (a2 && e2.length > 0 && !i.call(e2, 0))
            for (var y = 0; y < e2.length; ++y)
              d2.push(String(y));
          if (n2 && e2.length > 0)
            for (var g = 0; g < e2.length; ++g)
              d2.push(String(g));
          else
            for (var b in e2)
              p && b === "prototype" || !i.call(e2, b) || d2.push(String(b));
          if (c)
            for (var m = function(e3) {
              if (typeof window == "undefined" || !l)
                return f(e3);
              try {
                return f(e3);
              } catch (t3) {
                return false;
              }
            }(e2), v = 0; v < h.length; ++v)
              m && h[v] === "constructor" || !i.call(e2, h[v]) || d2.push(h[v]);
          return d2;
        };
      }
      e.exports = n;
    }, function(e, t, r) {
      "use strict";
      var n = r(217), i = r(220);
      e.exports = function() {
        var e2 = i();
        if (n.supportsDescriptors) {
          var t2 = Object.getOwnPropertyDescriptor(e2, "globalThis");
          (!t2 || t2.configurable && (t2.enumerable || t2.writable || globalThis !== e2)) && Object.defineProperty(e2, "globalThis", {configurable: true, enumerable: false, value: e2, writable: false});
        } else
          typeof globalThis == "object" && globalThis === e2 || (e2.globalThis = e2);
        return e2;
      };
    }, function(e, t, r) {
      "use strict";
      var n = function() {
        if (typeof self != "undefined")
          return self;
        if (typeof window != "undefined")
          return window;
        if (n !== void 0)
          return n;
        throw new Error("unable to locate global object");
      }();
      e.exports = t = n.fetch, n.fetch && (t.default = n.fetch.bind(n)), t.Headers = n.Headers, t.Request = n.Request, t.Response = n.Response;
    }, function(e, t, r) {
      "use strict";
      e.exports = (e2) => {
        if (Object.prototype.toString.call(e2) !== "[object Object]")
          return false;
        const t2 = Object.getPrototypeOf(e2);
        return t2 === null || t2 === Object.prototype;
      };
    }, function(e, t, r) {
      "use strict";
      const {URLWithLegacySupport: n, format: i, URLSearchParams: s, defaultBase: o} = r(221), a = r(399);
      e.exports = {URL: n, URLSearchParams: s, format: i, relative: a, defaultBase: o};
    }, function(e, t, r) {
      "use strict";
      const {URLWithLegacySupport: n, format: i} = r(221);
      e.exports = (e2, t2 = {}, r2 = {}, s) => {
        let o, a = t2.protocol ? t2.protocol.replace(":", "") : "http";
        a = (r2[a] || s || a) + ":";
        try {
          o = new n(e2);
        } catch (u) {
          o = {};
        }
        const c = Object.assign({}, t2, {protocol: a || o.protocol, host: t2.host || o.host});
        return new n(e2, i(c)).toString();
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = r(129).TextDecoder;
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2) {
        if (e2.length >= 255)
          throw new TypeError("Alphabet too long");
        for (var t2 = new Uint8Array(256), r2 = 0; r2 < t2.length; r2++)
          t2[r2] = 255;
        for (var n = 0; n < e2.length; n++) {
          var i = e2.charAt(n), s = i.charCodeAt(0);
          if (t2[s] !== 255)
            throw new TypeError(i + " is ambiguous");
          t2[s] = n;
        }
        var o = e2.length, a = e2.charAt(0), c = Math.log(o) / Math.log(256), u = Math.log(256) / Math.log(o);
        function h(e3) {
          if (typeof e3 != "string")
            throw new TypeError("Expected String");
          if (e3.length === 0)
            return new Uint8Array();
          var r3 = 0;
          if (e3[r3] !== " ") {
            for (var n2 = 0, i2 = 0; e3[r3] === a; )
              n2++, r3++;
            for (var s2 = (e3.length - r3) * c + 1 >>> 0, u2 = new Uint8Array(s2); e3[r3]; ) {
              var h2 = t2[e3.charCodeAt(r3)];
              if (h2 === 255)
                return;
              for (var f = 0, d = s2 - 1; (h2 !== 0 || f < i2) && d !== -1; d--, f++)
                h2 += o * u2[d] >>> 0, u2[d] = h2 % 256 >>> 0, h2 = h2 / 256 >>> 0;
              if (h2 !== 0)
                throw new Error("Non-zero carry");
              i2 = f, r3++;
            }
            if (e3[r3] !== " ") {
              for (var l = s2 - i2; l !== s2 && u2[l] === 0; )
                l++;
              for (var p = new Uint8Array(n2 + (s2 - l)), y = n2; l !== s2; )
                p[y++] = u2[l++];
              return p;
            }
          }
        }
        return {encode: function(t3) {
          if (t3 instanceof Uint8Array || (ArrayBuffer.isView(t3) ? t3 = new Uint8Array(t3.buffer, t3.byteOffset, t3.byteLength) : Array.isArray(t3) && (t3 = Uint8Array.from(t3))), !(t3 instanceof Uint8Array))
            throw new TypeError("Expected Uint8Array");
          if (t3.length === 0)
            return "";
          for (var r3 = 0, n2 = 0, i2 = 0, s2 = t3.length; i2 !== s2 && t3[i2] === 0; )
            i2++, r3++;
          for (var c2 = (s2 - i2) * u + 1 >>> 0, h2 = new Uint8Array(c2); i2 !== s2; ) {
            for (var f = t3[i2], d = 0, l = c2 - 1; (f !== 0 || d < n2) && l !== -1; l--, d++)
              f += 256 * h2[l] >>> 0, h2[l] = f % o >>> 0, f = f / o >>> 0;
            if (f !== 0)
              throw new Error("Non-zero carry");
            n2 = d, i2++;
          }
          for (var p = c2 - n2; p !== c2 && h2[p] === 0; )
            p++;
          for (var y = a.repeat(r3); p < c2; ++p)
            y += e2.charAt(h2[p]);
          return y;
        }, decodeUnsafe: h, decode: function(e3) {
          var t3 = h(e3);
          if (t3)
            return t3;
          throw new Error("Non-base" + o + " character");
        }};
      };
    }, function(e, t, r) {
      "use strict";
      const {encodeText: n} = r(133);
      e.exports = class {
        constructor(e2, t2, r2, i) {
          this.name = e2, this.code = t2, this.codeBuf = n(this.code), this.alphabet = i, this.codec = r2(i);
        }
        encode(e2) {
          return this.codec.encode(e2);
        }
        decode(e2) {
          for (const t2 of e2)
            if (this.alphabet && this.alphabet.indexOf(t2) < 0)
              throw new Error(`invalid character '${t2}' in '${e2}'`);
          return this.codec.decode(e2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = {rfc4648: (e2) => (t2) => ({encode: (r2) => ((e3, t3, r3) => {
        const n = t3[t3.length - 1] === "=", i = (1 << r3) - 1;
        let s = "", o = 0, a = 0;
        for (let c = 0; c < e3.length; ++c)
          for (a = a << 8 | e3[c], o += 8; o > r3; )
            o -= r3, s += t3[i & a >> o];
        if (o && (s += t3[i & a << r3 - o]), n)
          for (; s.length * r3 & 7; )
            s += "=";
        return s;
      })(r2, t2, e2), decode: (r2) => ((e3, t3, r3) => {
        const n = {};
        for (let u = 0; u < t3.length; ++u)
          n[t3[u]] = u;
        let i = e3.length;
        for (; e3[i - 1] === "="; )
          --i;
        const s = new Uint8Array(i * r3 / 8 | 0);
        let o = 0, a = 0, c = 0;
        for (let u = 0; u < i; ++u) {
          const t4 = n[e3[u]];
          if (t4 === void 0)
            throw new SyntaxError("Invalid character " + e3[u]);
          a = a << r3 | t4, o += r3, o >= 8 && (o -= 8, s[c++] = 255 & a >> o);
        }
        if (o >= r3 || 255 & a << 8 - o)
          throw new SyntaxError("Unexpected end of data");
        return s;
      })(r2, t2, e2)})};
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2, i) {
        if (Number.MAX_SAFE_INTEGER && t2 > Number.MAX_SAFE_INTEGER)
          throw e2.bytes = 0, new RangeError("Could not encode varint");
        r2 = r2 || [];
        var s = i = i || 0;
        for (; t2 >= n; )
          r2[i++] = 255 & t2 | 128, t2 /= 128;
        for (; -128 & t2; )
          r2[i++] = 255 & t2 | 128, t2 >>>= 7;
        return r2[i] = 0 | t2, e2.bytes = i - s + 1, r2;
      };
      var n = Math.pow(2, 31);
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2) {
        var n, i = 0, s = 0, o = r2 = r2 || 0, a = t2.length;
        do {
          if (o >= a || s > 49)
            throw e2.bytes = 0, new RangeError("Could not decode varint");
          n = t2[o++], i += s < 28 ? (127 & n) << s : (127 & n) * Math.pow(2, s), s += 7;
        } while (n >= 128);
        return e2.bytes = o - r2, i;
      };
    }, function(e, t, r) {
      "use strict";
      var n = Math.pow(2, 7), i = Math.pow(2, 14), s = Math.pow(2, 21), o = Math.pow(2, 28), a = Math.pow(2, 35), c = Math.pow(2, 42), u = Math.pow(2, 49), h = Math.pow(2, 56), f = Math.pow(2, 63);
      e.exports = function(e2) {
        return e2 < n ? 1 : e2 < i ? 2 : e2 < s ? 3 : e2 < o ? 4 : e2 < a ? 5 : e2 < c ? 6 : e2 < u ? 7 : e2 < h ? 8 : e2 < f ? 9 : 10;
      };
    }, function(e, t, r) {
      "use strict";
      const n = Object.freeze({identity: 0, sha1: 17, "sha2-256": 18, "sha2-512": 19, "sha3-512": 20, "sha3-384": 21, "sha3-256": 22, "sha3-224": 23, "shake-128": 24, "shake-256": 25, "keccak-224": 26, "keccak-256": 27, "keccak-384": 28, "keccak-512": 29, blake3: 30, "murmur3-128": 34, "murmur3-32": 35, "dbl-sha2-256": 86, md4: 212, md5: 213, bmt: 214, "sha2-256-trunc254-padded": 4114, "ripemd-128": 4178, "ripemd-160": 4179, "ripemd-256": 4180, "ripemd-320": 4181, x11: 4352, kangarootwelve: 7425, "sm3-256": 21325, "blake2b-8": 45569, "blake2b-16": 45570, "blake2b-24": 45571, "blake2b-32": 45572, "blake2b-40": 45573, "blake2b-48": 45574, "blake2b-56": 45575, "blake2b-64": 45576, "blake2b-72": 45577, "blake2b-80": 45578, "blake2b-88": 45579, "blake2b-96": 45580, "blake2b-104": 45581, "blake2b-112": 45582, "blake2b-120": 45583, "blake2b-128": 45584, "blake2b-136": 45585, "blake2b-144": 45586, "blake2b-152": 45587, "blake2b-160": 45588, "blake2b-168": 45589, "blake2b-176": 45590, "blake2b-184": 45591, "blake2b-192": 45592, "blake2b-200": 45593, "blake2b-208": 45594, "blake2b-216": 45595, "blake2b-224": 45596, "blake2b-232": 45597, "blake2b-240": 45598, "blake2b-248": 45599, "blake2b-256": 45600, "blake2b-264": 45601, "blake2b-272": 45602, "blake2b-280": 45603, "blake2b-288": 45604, "blake2b-296": 45605, "blake2b-304": 45606, "blake2b-312": 45607, "blake2b-320": 45608, "blake2b-328": 45609, "blake2b-336": 45610, "blake2b-344": 45611, "blake2b-352": 45612, "blake2b-360": 45613, "blake2b-368": 45614, "blake2b-376": 45615, "blake2b-384": 45616, "blake2b-392": 45617, "blake2b-400": 45618, "blake2b-408": 45619, "blake2b-416": 45620, "blake2b-424": 45621, "blake2b-432": 45622, "blake2b-440": 45623, "blake2b-448": 45624, "blake2b-456": 45625, "blake2b-464": 45626, "blake2b-472": 45627, "blake2b-480": 45628, "blake2b-488": 45629, "blake2b-496": 45630, "blake2b-504": 45631, "blake2b-512": 45632, "blake2s-8": 45633, "blake2s-16": 45634, "blake2s-24": 45635, "blake2s-32": 45636, "blake2s-40": 45637, "blake2s-48": 45638, "blake2s-56": 45639, "blake2s-64": 45640, "blake2s-72": 45641, "blake2s-80": 45642, "blake2s-88": 45643, "blake2s-96": 45644, "blake2s-104": 45645, "blake2s-112": 45646, "blake2s-120": 45647, "blake2s-128": 45648, "blake2s-136": 45649, "blake2s-144": 45650, "blake2s-152": 45651, "blake2s-160": 45652, "blake2s-168": 45653, "blake2s-176": 45654, "blake2s-184": 45655, "blake2s-192": 45656, "blake2s-200": 45657, "blake2s-208": 45658, "blake2s-216": 45659, "blake2s-224": 45660, "blake2s-232": 45661, "blake2s-240": 45662, "blake2s-248": 45663, "blake2s-256": 45664, "skein256-8": 45825, "skein256-16": 45826, "skein256-24": 45827, "skein256-32": 45828, "skein256-40": 45829, "skein256-48": 45830, "skein256-56": 45831, "skein256-64": 45832, "skein256-72": 45833, "skein256-80": 45834, "skein256-88": 45835, "skein256-96": 45836, "skein256-104": 45837, "skein256-112": 45838, "skein256-120": 45839, "skein256-128": 45840, "skein256-136": 45841, "skein256-144": 45842, "skein256-152": 45843, "skein256-160": 45844, "skein256-168": 45845, "skein256-176": 45846, "skein256-184": 45847, "skein256-192": 45848, "skein256-200": 45849, "skein256-208": 45850, "skein256-216": 45851, "skein256-224": 45852, "skein256-232": 45853, "skein256-240": 45854, "skein256-248": 45855, "skein256-256": 45856, "skein512-8": 45857, "skein512-16": 45858, "skein512-24": 45859, "skein512-32": 45860, "skein512-40": 45861, "skein512-48": 45862, "skein512-56": 45863, "skein512-64": 45864, "skein512-72": 45865, "skein512-80": 45866, "skein512-88": 45867, "skein512-96": 45868, "skein512-104": 45869, "skein512-112": 45870, "skein512-120": 45871, "skein512-128": 45872, "skein512-136": 45873, "skein512-144": 45874, "skein512-152": 45875, "skein512-160": 45876, "skein512-168": 45877, "skein512-176": 45878, "skein512-184": 45879, "skein512-192": 45880, "skein512-200": 45881, "skein512-208": 45882, "skein512-216": 45883, "skein512-224": 45884, "skein512-232": 45885, "skein512-240": 45886, "skein512-248": 45887, "skein512-256": 45888, "skein512-264": 45889, "skein512-272": 45890, "skein512-280": 45891, "skein512-288": 45892, "skein512-296": 45893, "skein512-304": 45894, "skein512-312": 45895, "skein512-320": 45896, "skein512-328": 45897, "skein512-336": 45898, "skein512-344": 45899, "skein512-352": 45900, "skein512-360": 45901, "skein512-368": 45902, "skein512-376": 45903, "skein512-384": 45904, "skein512-392": 45905, "skein512-400": 45906, "skein512-408": 45907, "skein512-416": 45908, "skein512-424": 45909, "skein512-432": 45910, "skein512-440": 45911, "skein512-448": 45912, "skein512-456": 45913, "skein512-464": 45914, "skein512-472": 45915, "skein512-480": 45916, "skein512-488": 45917, "skein512-496": 45918, "skein512-504": 45919, "skein512-512": 45920, "skein1024-8": 45921, "skein1024-16": 45922, "skein1024-24": 45923, "skein1024-32": 45924, "skein1024-40": 45925, "skein1024-48": 45926, "skein1024-56": 45927, "skein1024-64": 45928, "skein1024-72": 45929, "skein1024-80": 45930, "skein1024-88": 45931, "skein1024-96": 45932, "skein1024-104": 45933, "skein1024-112": 45934, "skein1024-120": 45935, "skein1024-128": 45936, "skein1024-136": 45937, "skein1024-144": 45938, "skein1024-152": 45939, "skein1024-160": 45940, "skein1024-168": 45941, "skein1024-176": 45942, "skein1024-184": 45943, "skein1024-192": 45944, "skein1024-200": 45945, "skein1024-208": 45946, "skein1024-216": 45947, "skein1024-224": 45948, "skein1024-232": 45949, "skein1024-240": 45950, "skein1024-248": 45951, "skein1024-256": 45952, "skein1024-264": 45953, "skein1024-272": 45954, "skein1024-280": 45955, "skein1024-288": 45956, "skein1024-296": 45957, "skein1024-304": 45958, "skein1024-312": 45959, "skein1024-320": 45960, "skein1024-328": 45961, "skein1024-336": 45962, "skein1024-344": 45963, "skein1024-352": 45964, "skein1024-360": 45965, "skein1024-368": 45966, "skein1024-376": 45967, "skein1024-384": 45968, "skein1024-392": 45969, "skein1024-400": 45970, "skein1024-408": 45971, "skein1024-416": 45972, "skein1024-424": 45973, "skein1024-432": 45974, "skein1024-440": 45975, "skein1024-448": 45976, "skein1024-456": 45977, "skein1024-464": 45978, "skein1024-472": 45979, "skein1024-480": 45980, "skein1024-488": 45981, "skein1024-496": 45982, "skein1024-504": 45983, "skein1024-512": 45984, "skein1024-520": 45985, "skein1024-528": 45986, "skein1024-536": 45987, "skein1024-544": 45988, "skein1024-552": 45989, "skein1024-560": 45990, "skein1024-568": 45991, "skein1024-576": 45992, "skein1024-584": 45993, "skein1024-592": 45994, "skein1024-600": 45995, "skein1024-608": 45996, "skein1024-616": 45997, "skein1024-624": 45998, "skein1024-632": 45999, "skein1024-640": 46e3, "skein1024-648": 46001, "skein1024-656": 46002, "skein1024-664": 46003, "skein1024-672": 46004, "skein1024-680": 46005, "skein1024-688": 46006, "skein1024-696": 46007, "skein1024-704": 46008, "skein1024-712": 46009, "skein1024-720": 46010, "skein1024-728": 46011, "skein1024-736": 46012, "skein1024-744": 46013, "skein1024-752": 46014, "skein1024-760": 46015, "skein1024-768": 46016, "skein1024-776": 46017, "skein1024-784": 46018, "skein1024-792": 46019, "skein1024-800": 46020, "skein1024-808": 46021, "skein1024-816": 46022, "skein1024-824": 46023, "skein1024-832": 46024, "skein1024-840": 46025, "skein1024-848": 46026, "skein1024-856": 46027, "skein1024-864": 46028, "skein1024-872": 46029, "skein1024-880": 46030, "skein1024-888": 46031, "skein1024-896": 46032, "skein1024-904": 46033, "skein1024-912": 46034, "skein1024-920": 46035, "skein1024-928": 46036, "skein1024-936": 46037, "skein1024-944": 46038, "skein1024-952": 46039, "skein1024-960": 46040, "skein1024-968": 46041, "skein1024-976": 46042, "skein1024-984": 46043, "skein1024-992": 46044, "skein1024-1000": 46045, "skein1024-1008": 46046, "skein1024-1016": 46047, "skein1024-1024": 46048, "poseidon-bls12_381-a2-fc1": 46081, "poseidon-bls12_381-a2-fc1-sc": 46082});
      e.exports = {names: n};
    }, function(e, t, r) {
      "use strict";
      const {baseTable: n} = r(77), i = new Map();
      for (const s in n) {
        const e2 = n[s];
        i.set(e2, s);
      }
      e.exports = Object.freeze(i);
    }, function(e, t, r) {
      "use strict";
      const {baseTable: n} = r(77), i = r(222).varintEncode, s = {};
      for (const o in n) {
        const e2 = n[o];
        s[o] = i(e2);
      }
      e.exports = Object.freeze(s);
    }, function(e, t, r) {
      "use strict";
      const {baseTable: n} = r(77), i = {};
      for (const [s, o] of Object.entries(n)) {
        i[s.toUpperCase().replace(/-/g, "_")] = o;
      }
      e.exports = Object.freeze(i);
    }, function(e, t, r) {
      "use strict";
      const {baseTable: n} = r(77), i = {};
      for (const [s, o] of Object.entries(n))
        i[o] === void 0 && (i[o] = s);
      e.exports = Object.freeze(i);
    }, function(e, t, r) {
      "use strict";
      const n = r(48), i = {checkCIDComponents: function(e2) {
        if (e2 == null)
          return "null values are not valid CIDs";
        if (e2.version !== 0 && e2.version !== 1)
          return "Invalid version, must be a number equal to 1 or 0";
        if (typeof e2.codec != "string")
          return "codec must be string";
        if (e2.version === 0) {
          if (e2.codec !== "dag-pb")
            return "codec must be 'dag-pb' for CIDv0";
          if (e2.multibaseName !== "base58btc")
            return "multibaseName must be 'base58btc' for CIDv0";
        }
        if (!(e2.multihash instanceof Uint8Array))
          return "multihash must be a Uint8Array";
        try {
          n.validate(e2.multihash);
        } catch (t2) {
          let e3 = t2.message;
          return e3 || (e3 = "Multihash validation failed"), e3;
        }
      }};
      e.exports = i;
    }, function(e, t, r) {
      "use strict";
      var n = r(414), i = r(416);
      e.exports = n, e.exports.parse = n, e.exports.stringify = i;
    }, function(e, t, r) {
      "use strict";
      var n = r(415), i = ["int32", "int64", "uint32", "uint64", "sint32", "sint64", "bool", "fixed64", "sfixed64", "double", "fixed32", "sfixed32", "float"], s = function(e2) {
        for (var t2 = {}; e2.length; )
          switch (e2[0]) {
            case "[":
            case ",":
              e2.shift();
              var r2 = e2.shift();
              if (r2 === "(" && (r2 = e2.shift(), e2.shift()), e2[0] !== "=")
                throw new Error("Unexpected token in field options: " + e2[0]);
              if (e2.shift(), e2[0] === "]")
                throw new Error("Unexpected ] in field option");
              t2[r2] = e2.shift();
              break;
            case "]":
              return e2.shift(), t2;
            default:
              throw new Error("Unexpected token in field options: " + e2[0]);
          }
        throw new Error("No closing tag for field options");
      }, o = function(e2) {
        for (var t2 = {name: null, type: null, tag: -1, map: null, oneof: null, required: false, repeated: false, options: {}}; e2.length; )
          switch (e2[0]) {
            case "=":
              e2.shift(), t2.tag = Number(e2.shift());
              break;
            case "map":
              if (t2.type = "map", t2.map = {from: null, to: null}, e2.shift(), e2[0] !== "<")
                throw new Error("Unexpected token in map type: " + e2[0]);
              if (e2.shift(), t2.map.from = e2.shift(), e2[0] !== ",")
                throw new Error("Unexpected token in map type: " + e2[0]);
              if (e2.shift(), t2.map.to = e2.shift(), e2[0] !== ">")
                throw new Error("Unexpected token in map type: " + e2[0]);
              e2.shift(), t2.name = e2.shift();
              break;
            case "repeated":
            case "required":
            case "optional":
              var r2 = e2.shift();
              t2.required = r2 === "required", t2.repeated = r2 === "repeated", t2.type = e2.shift(), t2.name = e2.shift();
              break;
            case "[":
              t2.options = s(e2);
              break;
            case ";":
              if (t2.name === null)
                throw new Error("Missing field name");
              if (t2.type === null)
                throw new Error("Missing type in message field: " + t2.name);
              if (t2.tag === -1)
                throw new Error("Missing tag number in message field: " + t2.name);
              return e2.shift(), t2;
            default:
              throw new Error("Unexpected token in message field: " + e2[0]);
          }
        throw new Error("No ; found for message field");
      }, a = function(e2) {
        for (var t2 = {enums: [], options: {}, messages: [], fields: [], extends: [], extensions: null}; e2.length; )
          switch (e2[0]) {
            case "map":
            case "repeated":
            case "optional":
            case "required":
              t2.fields.push(o(e2));
              break;
            case "enum":
              t2.enums.push(p(e2));
              break;
            case "message":
              t2.messages.push(h(e2));
              break;
            case "extensions":
              t2.extensions = u(e2);
              break;
            case "oneof":
              e2.shift();
              var r2 = e2.shift();
              if (e2[0] !== "{")
                throw new Error("Unexpected token in oneof: " + e2[0]);
              for (e2.shift(); e2[0] !== "}"; ) {
                e2.unshift("optional");
                var n2 = o(e2);
                n2.oneof = r2, t2.fields.push(n2);
              }
              e2.shift();
              break;
            case "extend":
              t2.extends.push(c(e2));
              break;
            case ";":
              e2.shift();
              break;
            case "reserved":
              for (e2.shift(); e2[0] !== ";"; )
                e2.shift();
              break;
            case "option":
              var i2 = y(e2);
              if (t2.options[i2.name] !== void 0)
                throw new Error("Duplicate option " + i2.name);
              t2.options[i2.name] = i2.value;
              break;
            default:
              e2.unshift("optional"), t2.fields.push(o(e2));
          }
        return t2;
      }, c = function(e2) {
        return {name: e2[1], message: h(e2)};
      }, u = function(e2) {
        e2.shift();
        var t2 = Number(e2.shift());
        if (isNaN(t2))
          throw new Error("Invalid from in extensions definition");
        if (e2.shift() !== "to")
          throw new Error("Expected keyword 'to' in extensions definition");
        var r2 = e2.shift();
        if (r2 === "max" && (r2 = 536870911), r2 = Number(r2), isNaN(r2))
          throw new Error("Invalid to in extensions definition");
        if (e2.shift() !== ";")
          throw new Error("Missing ; in extensions definition");
        return {from: t2, to: r2};
      }, h = function(e2) {
        e2.shift();
        var t2 = 1, r2 = [], n2 = {name: e2.shift(), options: {}, enums: [], extends: [], messages: [], fields: []};
        if (e2[0] !== "{")
          throw new Error("Expected { but found " + e2[0]);
        for (e2.shift(); e2.length; ) {
          if (e2[0] === "{" ? t2++ : e2[0] === "}" && t2--, !t2)
            return e2.shift(), r2 = a(r2), n2.enums = r2.enums, n2.messages = r2.messages, n2.fields = r2.fields, n2.extends = r2.extends, n2.extensions = r2.extensions, n2.options = r2.options, n2;
          r2.push(e2.shift());
        }
        if (t2)
          throw new Error("No closing tag for message");
      }, f = function(e2) {
        e2.shift();
        var t2 = e2.shift();
        if (e2[0] !== ";")
          throw new Error("Expected ; but found " + e2[0]);
        return e2.shift(), t2;
      }, d = function(e2) {
        if (e2.shift(), e2[0] !== "=")
          throw new Error("Expected = but found " + e2[0]);
        e2.shift();
        var t2 = e2.shift();
        switch (t2) {
          case '"proto2"':
            t2 = 2;
            break;
          case '"proto3"':
            t2 = 3;
            break;
          default:
            throw new Error("Expected protobuf syntax version but found " + t2);
        }
        if (e2[0] !== ";")
          throw new Error("Expected ; but found " + e2[0]);
        return e2.shift(), t2;
      }, l = function(e2) {
        if (e2.length < 4)
          throw new Error("Invalid enum value: " + e2.slice(0, 3).join(" "));
        if (e2[1] !== "=")
          throw new Error("Expected = but found " + e2[1]);
        if (e2[3] !== ";" && e2[3] !== "[")
          throw new Error("Expected ; or [ but found " + e2[1]);
        var t2 = e2.shift();
        e2.shift();
        var r2 = {value: null, options: {}};
        return r2.value = Number(e2.shift()), e2[0] === "[" && (r2.options = s(e2)), e2.shift(), {name: t2, val: r2};
      }, p = function(e2) {
        e2.shift();
        var t2 = {}, r2 = {name: e2.shift(), values: {}, options: {}};
        if (e2[0] !== "{")
          throw new Error("Expected { but found " + e2[0]);
        for (e2.shift(); e2.length; ) {
          if (e2[0] === "}")
            return e2.shift(), e2[0] === ";" && e2.shift(), r2;
          if (e2[0] !== "option") {
            var n2 = l(e2);
            r2.values[n2.name] = n2.val;
          } else
            t2 = y(e2), r2.options[t2.name] = t2.value;
        }
        throw new Error("No closing tag for enum");
      }, y = function(e2) {
        for (var t2 = null, r2 = null, n2 = function(e3) {
          return e3 === "true" || e3 !== "false" && e3.replace(/^"+|"+$/gm, "");
        }; e2.length; ) {
          if (e2[0] === ";")
            return e2.shift(), {name: t2, value: r2};
          switch (e2[0]) {
            case "option":
              e2.shift();
              var i2 = e2[0] === "(";
              if (i2 && e2.shift(), t2 = e2.shift(), i2) {
                if (e2[0] !== ")")
                  throw new Error("Expected ) but found " + e2[0]);
                e2.shift();
              }
              e2[0][0] === "." && (t2 += e2.shift());
              break;
            case "=":
              if (e2.shift(), t2 === null)
                throw new Error("Expected key for option with value: " + e2[0]);
              if (r2 = n2(e2.shift()), t2 === "optimize_for" && !/^(SPEED|CODE_SIZE|LITE_RUNTIME)$/.test(r2))
                throw new Error("Unexpected value for option optimize_for: " + r2);
              r2 === "{" && (r2 = g(e2));
              break;
            default:
              throw new Error("Unexpected token in option: " + e2[0]);
          }
        }
      }, g = function(e2) {
        for (var t2 = function(e3) {
          return e3 === "true" || e3 !== "false" && e3.replace(/^"+|"+$/gm, "");
        }, r2 = {}; e2.length; ) {
          if (e2[0] === "}")
            return e2.shift(), r2;
          var n2 = e2[0] === "(";
          n2 && e2.shift();
          var i2 = e2.shift();
          if (n2) {
            if (e2[0] !== ")")
              throw new Error("Expected ) but found " + e2[0]);
            e2.shift();
          }
          var s2 = null;
          switch (e2[0]) {
            case ":":
              if (r2[i2] !== void 0)
                throw new Error("Duplicate option map key " + i2);
              e2.shift(), (s2 = t2(e2.shift())) === "{" && (s2 = g(e2)), r2[i2] = s2, e2[0] === ";" && e2.shift();
              break;
            case "{":
              if (e2.shift(), s2 = g(e2), r2[i2] === void 0 && (r2[i2] = []), !Array.isArray(r2[i2]))
                throw new Error("Duplicate option map key " + i2);
              r2[i2].push(s2);
              break;
            default:
              throw new Error("Unexpected token in option map: " + e2[0]);
          }
        }
        throw new Error("No closing tag for option map");
      }, b = function(e2) {
        e2.shift();
        var t2 = e2.shift().replace(/^"+|"+$/gm, "");
        if (e2[0] !== ";")
          throw new Error("Unexpected token: " + e2[0] + '. Expected ";"');
        return e2.shift(), t2;
      }, m = function(e2) {
        e2.shift();
        var t2 = {name: e2.shift(), methods: [], options: {}};
        if (e2[0] !== "{")
          throw new Error("Expected { but found " + e2[0]);
        for (e2.shift(); e2.length; ) {
          if (e2[0] === "}")
            return e2.shift(), e2[0] === ";" && e2.shift(), t2;
          switch (e2[0]) {
            case "option":
              var r2 = y(e2);
              if (t2.options[r2.name] !== void 0)
                throw new Error("Duplicate option " + r2.name);
              t2.options[r2.name] = r2.value;
              break;
            case "rpc":
              t2.methods.push(v(e2));
              break;
            default:
              throw new Error("Unexpected token in service: " + e2[0]);
          }
        }
        throw new Error("No closing tag for service");
      }, v = function(e2) {
        e2.shift();
        var t2 = {name: e2.shift(), input_type: null, output_type: null, client_streaming: false, server_streaming: false, options: {}};
        if (e2[0] !== "(")
          throw new Error("Expected ( but found " + e2[0]);
        if (e2.shift(), e2[0] === "stream" && (e2.shift(), t2.client_streaming = true), t2.input_type = e2.shift(), e2[0] !== ")")
          throw new Error("Expected ) but found " + e2[0]);
        if (e2.shift(), e2[0] !== "returns")
          throw new Error("Expected returns but found " + e2[0]);
        if (e2.shift(), e2[0] !== "(")
          throw new Error("Expected ( but found " + e2[0]);
        if (e2.shift(), e2[0] === "stream" && (e2.shift(), t2.server_streaming = true), t2.output_type = e2.shift(), e2[0] !== ")")
          throw new Error("Expected ) but found " + e2[0]);
        if (e2.shift(), e2[0] === ";")
          return e2.shift(), t2;
        if (e2[0] !== "{")
          throw new Error("Expected { but found " + e2[0]);
        for (e2.shift(); e2.length; ) {
          if (e2[0] === "}")
            return e2.shift(), e2[0] === ";" && e2.shift(), t2;
          if (e2[0] !== "option")
            throw new Error("Unexpected token in rpc options: " + e2[0]);
          var r2 = y(e2);
          if (t2.options[r2.name] !== void 0)
            throw new Error("Duplicate option " + r2.name);
          t2.options[r2.name] = r2.value;
        }
        throw new Error("No closing tag for rpc");
      };
      e.exports = function(e2) {
        for (var t2 = n(e2.toString()), r2 = 0; r2 < t2.length; r2++) {
          var s2;
          if (/^("|')([^'"]*)$/.test(t2[r2])) {
            for (s2 = t2[r2].length === 1 ? r2 + 1 : r2; s2 < t2.length; s2++)
              if (/^[^'"\\]*(?:\\.[^'"\\]*)*("|')$/.test(t2[s2])) {
                t2 = t2.slice(0, r2).concat(t2.slice(r2, s2 + 1).join("")).concat(t2.slice(s2 + 1));
                break;
              }
          }
        }
        for (var o2 = {syntax: 3, package: null, imports: [], enums: [], messages: [], options: {}, extends: []}, a2 = true; t2.length; ) {
          switch (t2[0]) {
            case "package":
              o2.package = f(t2);
              break;
            case "syntax":
              if (!a2)
                throw new Error("Protobuf syntax version should be first thing in file");
              o2.syntax = d(t2);
              break;
            case "message":
              o2.messages.push(h(t2));
              break;
            case "enum":
              o2.enums.push(p(t2));
              break;
            case "option":
              var u2 = y(t2);
              if (o2.options[u2.name])
                throw new Error("Duplicate option " + u2.name);
              o2.options[u2.name] = u2.value;
              break;
            case "import":
              o2.imports.push(b(t2));
              break;
            case "extend":
              o2.extends.push(c(t2));
              break;
            case "service":
              o2.services || (o2.services = []), o2.services.push(m(t2));
              break;
            default:
              throw new Error("Unexpected token: " + t2[0]);
          }
          a2 = false;
        }
        return o2.extends.forEach(function(e3) {
          o2.messages.forEach(function(t3) {
            t3.name === e3.name && e3.message.fields.forEach(function(e4) {
              if (!t3.extensions || e4.tag < t3.extensions.from || e4.tag > t3.extensions.to)
                throw new Error(t3.name + " does not declare " + e4.tag + " as an extension number");
              t3.fields.push(e4);
            });
          });
        }), o2.messages.forEach(function(e3) {
          e3.fields.forEach(function(t3) {
            var r3, n2, s3, a3;
            if (t3.options && t3.options.packed === "true" && i.indexOf(t3.type) === -1) {
              if (t3.type.indexOf(".") === -1) {
                if (e3.enums && e3.enums.some(function(e4) {
                  return e4.name === t3.type;
                }))
                  return;
              } else {
                if ((r3 = t3.type.split(".")).length > 2)
                  throw new Error("what is this?");
                if (n2 = r3[0], s3 = r3[1], o2.messages.some(function(e4) {
                  if (e4.name === n2)
                    return a3 = e4, e4;
                }), a3 && a3.enums && a3.enums.some(function(e4) {
                  return e4.name === s3;
                }))
                  return;
              }
              throw new Error("Fields of type " + t3.type + ' cannot be declared [packed=true]. Only repeated fields of primitive numeric types (types which use the varint, 32-bit, or 64-bit wire types) can be declared "packed". See https://developers.google.com/protocol-buffers/docs/encoding#optional');
            }
          });
        }), o2;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2) {
        var t2, r2 = function(e3) {
          return e3.trim();
        };
        return e2.replace(/([;,{}()=:[\]<>]|\/\*|\*\/)/g, " $1 ").split(/\n/).map(r2).filter(Boolean).map(function(e3) {
          var t3 = e3.indexOf("//");
          return t3 > -1 ? e3.slice(0, t3) : e3;
        }).map(r2).filter(Boolean).join("\n").split(/\s+|\n+/gm).filter((t2 = false, function(e3) {
          return e3 === "/*" ? (t2 = true, false) : e3 === "*/" ? (t2 = false, false) : !t2;
        }));
      };
    }, function(e, t, r) {
      "use strict";
      var n = function(e2, t2) {
        var r2 = e2.repeated ? "repeated" : e2.required ? "required" : "optional";
        e2.type === "map" && (r2 = "map<" + e2.map.from + "," + e2.map.to + ">"), e2.oneof && (r2 = "");
        var n2 = Object.keys(e2.options || {}).map(function(t3) {
          return t3 + " = " + e2.options[t3];
        }).join(",");
        return n2 && (n2 = " [" + n2 + "]"), t2.push((r2 ? r2 + " " : "") + (e2.map === "map" ? "" : e2.type + " ") + e2.name + " = " + e2.tag + n2 + ";"), t2;
      }, i = function(e2, t2) {
        t2.push("message " + e2.name + " {"), e2.options || (e2.options = {}), a(e2.options, t2), e2.enums || (e2.enums = []), e2.enums.forEach(function(e3) {
          t2.push(s(e3, []));
        }), e2.messages || (e2.messages = []), e2.messages.forEach(function(e3) {
          t2.push(i(e3, []));
        });
        var r2 = {};
        return e2.fields || (e2.fields = []), e2.fields.forEach(function(e3) {
          e3.oneof ? (r2[e3.oneof] || (r2[e3.oneof] = []), r2[e3.oneof].push(n(e3, []))) : t2.push(n(e3, []));
        }), Object.keys(r2).forEach(function(e3) {
          r2[e3].unshift("oneof " + e3 + " {"), r2[e3].push("}"), t2.push(r2[e3]);
        }), t2.push("}", ""), t2;
      }, s = function(e2, t2) {
        t2.push("enum " + e2.name + " {"), e2.options || (e2.options = {});
        var r2 = a(e2.options, []);
        return r2.length > 1 && t2.push(r2.slice(0, -1)), Object.keys(e2.values).map(function(r3) {
          var n2 = o(e2.values[r3]);
          t2.push([r3 + " = " + n2 + ";"]);
        }), t2.push("}", ""), t2;
      }, o = function(e2, t2) {
        var r2 = Object.keys(e2.options || {}).map(function(t3) {
          return t3 + " = " + e2.options[t3];
        }).join(",");
        return r2 && (r2 = " [" + r2 + "]"), e2.value + r2;
      }, a = function(e2, t2) {
        var r2 = Object.keys(e2);
        return r2.forEach(function(r3) {
          var n2 = e2[r3];
          ~r3.indexOf(".") && (r3 = "(" + r3 + ")");
          var i2 = typeof n2;
          i2 === "object" ? (n2 = c(n2, [])).length && t2.push("option " + r3 + " = {", n2, "};") : (i2 === "string" && r3 !== "optimize_for" && (n2 = '"' + n2 + '"'), t2.push("option " + r3 + " = " + n2 + ";"));
        }), r2.length > 0 && t2.push(""), t2;
      }, c = function(e2, t2) {
        return Object.keys(e2).forEach(function(r2) {
          var n2 = e2[r2], i2 = typeof n2;
          i2 === "object" ? Array.isArray(n2) ? n2.forEach(function(e3) {
            (e3 = c(e3, [])).length && t2.push(r2 + " {", e3, "}");
          }) : (n2 = c(n2, [])).length && t2.push(r2 + " {", n2, "}") : (i2 === "string" && (n2 = '"' + n2 + '"'), t2.push(r2 + ": " + n2));
        }), t2;
      }, u = function(e2, t2) {
        var r2 = "rpc " + e2.name + "(";
        e2.client_streaming && (r2 += "stream "), r2 += e2.input_type + ") returns (", e2.server_streaming && (r2 += "stream "), r2 += e2.output_type + ")", e2.options || (e2.options = {});
        var n2 = a(e2.options, []);
        return n2.length > 1 ? t2.push(r2 + " {", n2.slice(0, -1), "}") : t2.push(r2 + ";"), t2;
      }, h = function(e2) {
        return function(t2) {
          return Array.isArray(t2) ? t2.map(h(e2 + "  ")).join("\n") : e2 + t2;
        };
      };
      e.exports = function(e2) {
        var t2 = [];
        return t2.push('syntax = "proto' + e2.syntax + '";', ""), e2.package && t2.push("package " + e2.package + ";", ""), e2.options || (e2.options = {}), a(e2.options, t2), e2.enums || (e2.enums = []), e2.enums.forEach(function(e3) {
          s(e3, t2);
        }), e2.messages || (e2.messages = []), e2.messages.forEach(function(e3) {
          i(e3, t2);
        }), e2.services && e2.services.forEach(function(e3) {
          !function(e4, t3) {
            t3.push("service " + e4.name + " {"), e4.options || (e4.options = {}), a(e4.options, t3), e4.methods || (e4.methods = []), e4.methods.forEach(function(e5) {
              t3.push(u(e5, []));
            }), t3.push("}", "");
          }(e3, t2);
        }), t2.map(h("")).join("\n");
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(418), i = r(439), s = r(440), o = r(441), a = r(37);
      e.exports = function(e2, t2) {
        const r2 = {}, c = {}, u = {}, h = function(e3, t3) {
          e3.enums && e3.enums.forEach(function(e4) {
            e4.id = t3 + (t3 ? "." : "") + e4.name, c[e4.id] = e4, h(e4, e4.id);
          }), e3.messages && e3.messages.forEach(function(n2) {
            n2.id = t3 + (t3 ? "." : "") + n2.name, r2[n2.id] = n2, n2.fields.forEach(function(n3) {
              if (!n3.map)
                return;
              const i2 = "Map_" + n3.map.from + "_" + n3.map.to, s2 = {name: i2, enums: [], messages: [], fields: [{name: "key", type: n3.map.from, tag: 1, repeated: false, required: true}, {name: "value", type: n3.map.to, tag: 2, repeated: false, required: false}], extensions: null, id: t3 + (t3 ? "." : "") + i2};
              r2[s2.id] || (r2[s2.id] = s2, e3.messages.push(s2)), n3.type = i2, n3.repeated = true;
            }), h(n2, n2.id);
          });
        };
        h(e2, "");
        const f = function(e3, t3) {
          e3.messages.forEach(function(r4) {
            t3[r4.name] = d(r4.name, e3.id);
          }), e3.enums.forEach(function(e4) {
            t3[e4.name] = function(e5) {
              if (!e5)
                return null;
              const t4 = {};
              return Object.keys(e5).forEach(function(r4) {
                t4[r4] = e5[r4].value;
              }), t4;
            }(e4.values);
          }), t3.type = 2, t3.message = true, t3.name = e3.name;
          const r3 = {};
          e3.fields.forEach(function(e4) {
            e4.oneof && (r3[e4.oneof] || (r3[e4.oneof] = []), r3[e4.oneof].push(e4.name));
          });
          const n2 = e3.fields.map(function(t4) {
            return d(t4.type, e3.id);
          }), a2 = o(e3, n2, r3), c2 = s(e3, d, n2, r3, a2), u2 = i(e3, d, n2);
          return c2.bytes = u2.bytes = 0, t3.buffer = true, t3.encode = c2, t3.decode = u2, t3.encodingLength = a2, t3;
        }, d = function(e3, i2, s2) {
          if (t2 && t2[e3])
            return t2[e3];
          if (n[e3])
            return n[e3];
          const o2 = (i2 ? i2 + "." + e3 : e3).split(".").map(function(t3, r3, n2) {
            return n2.slice(0, r3).concat(e3).join(".");
          }).reverse().reduce(function(e4, t3) {
            return e4 || r2[t3] || c[t3];
          }, null);
          if (s2 === false)
            return o2;
          if (!o2)
            throw new Error("Could not resolve " + e3);
          if (o2.values)
            return function(e4) {
              const t3 = Object.keys(e4.values || []).map(function(t4) {
                return parseInt(e4.values[t4].value, 10);
              });
              return n.make(0, function e5(r3, n2, i3, s3) {
                if (!t3.length || t3.indexOf(r3) === -1)
                  throw new Error("Invalid enum value: " + r3);
                return a.encode(r3, n2, s3), e5.bytes = a.encode.bytes, n2;
              }, function e5(r3, n2, i3) {
                var s3 = a.decode(r3, i3);
                if (!t3.length || t3.indexOf(s3) === -1)
                  throw new Error("Invalid enum value: " + s3);
                return e5.bytes = a.decode.bytes, s3;
              }, a.encodingLength);
            }(o2);
          return u[o2.id] || f(o2, u[o2.id] = {});
        };
        return (e2.enums || []).concat((e2.messages || []).map(function(e3) {
          return d(e3.id);
        }));
      };
    }, function(e, t, r) {
      "use strict";
      t.make = r(31), t.bytes = r(419), t.string = r(423), t.bool = r(424), t.int32 = r(425), t.int64 = r(426), t.sint32 = t.sint64 = r(427), t.uint32 = t.uint64 = t.enum = t.varint = r(433), t.fixed64 = t.sfixed64 = r(434), t.double = r(435), t.fixed32 = r(436), t.sfixed32 = r(437), t.float = r(438);
    }, function(e, t, r) {
      "use strict";
      const n = r(37), i = r(31);
      function s(e2) {
        return e2.byteLength;
      }
      e.exports = i(2, function e2(t2, r2, i2, o) {
        const a = o, c = s(t2);
        n.encode(c, r2, o), o += n.encode.bytes, r2.set(t2, o), e2.bytes = (o += c) - a;
      }, function e2(t2, r2, i2) {
        const s2 = i2, o = n.decode(t2, i2);
        i2 += n.decode.bytes;
        const a = t2.slice(i2, i2 + o);
        return i2 += a.length, e2.bytes = i2 - s2, a;
      }, function(e2) {
        const t2 = s(e2);
        return n.encodingLength(t2) + t2;
      });
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2, i) {
        r2 = r2 || [];
        var s = i = i || 0;
        for (; t2 >= n; )
          r2[i++] = 255 & t2 | 128, t2 /= 128;
        for (; -128 & t2; )
          r2[i++] = 255 & t2 | 128, t2 >>>= 7;
        return r2[i] = 0 | t2, e2.bytes = i - s + 1, r2;
      };
      var n = Math.pow(2, 31);
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2) {
        var n, i = 0, s = 0, o = r2 = r2 || 0, a = t2.length;
        do {
          if (o >= a)
            throw e2.bytes = 0, new RangeError("Could not decode varint");
          n = t2[o++], i += s < 28 ? (127 & n) << s : (127 & n) * Math.pow(2, s), s += 7;
        } while (n >= 128);
        return e2.bytes = o - r2, i;
      };
    }, function(e, t, r) {
      "use strict";
      var n = Math.pow(2, 7), i = Math.pow(2, 14), s = Math.pow(2, 21), o = Math.pow(2, 28), a = Math.pow(2, 35), c = Math.pow(2, 42), u = Math.pow(2, 49), h = Math.pow(2, 56), f = Math.pow(2, 63);
      e.exports = function(e2) {
        return e2 < n ? 1 : e2 < i ? 2 : e2 < s ? 3 : e2 < o ? 4 : e2 < a ? 5 : e2 < c ? 6 : e2 < u ? 7 : e2 < h ? 8 : e2 < f ? 9 : 10;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(37), i = r(6), s = r(5), o = r(31);
      e.exports = o(2, function e2(t2, r2, s2, o2) {
        const a = o2, c = i(t2).byteLength;
        n.encode(c, r2, o2, "utf-8"), o2 += n.encode.bytes;
        const u = i(t2);
        r2.set(u, o2), o2 += u.length, e2.bytes = o2 - a;
      }, function e2(t2, r2, i2) {
        const o2 = i2, a = n.decode(t2, i2);
        i2 += n.decode.bytes;
        const c = s(t2.subarray(i2, i2 + a));
        return e2.bytes = (i2 += a) - o2, c;
      }, function(e2) {
        const t2 = i(e2).byteLength;
        return n.encodingLength(t2) + t2;
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(31);
      e.exports = n(0, function e2(t2, r2, n2, i) {
        r2[i] = t2 ? 1 : 0, e2.bytes = 1;
      }, function e2(t2, r2, n2) {
        const i = t2[n2] > 0;
        return e2.bytes = 1, i;
      }, function() {
        return 1;
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(37), i = r(31);
      e.exports = i(0, function e2(t2, r2, i2, s) {
        n.encode(t2 < 0 ? t2 + 4294967296 : t2, r2, s), e2.bytes = n.encode.bytes;
      }, function e2(t2, r2, i2) {
        const s = n.decode(t2, i2);
        return e2.bytes = n.decode.bytes, s > 2147483647 ? s - 4294967296 : s;
      }, function(e2) {
        return n.encodingLength(e2 < 0 ? e2 + 4294967296 : e2);
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(37), i = r(31);
      e.exports = i(0, function e2(t2, r2, i2, s) {
        if (t2 < 0) {
          const i3 = s + 9;
          for (n.encode(-1 * t2, r2, s), r2[s += n.encode.bytes - 1] = 128 | r2[s]; s < i3 - 1; )
            r2[++s] = 255;
          r2[i3] = 1, e2.bytes = 10;
        } else
          n.encode(t2, r2, s), e2.bytes = n.encode.bytes;
      }, function e2(t2, r2, i2) {
        let s = n.decode(t2, i2);
        if (s >= Math.pow(2, 63)) {
          let r3 = 9;
          for (; t2[i2 + r3 - 1] === 255; )
            r3--;
          r3 = r3 || 9;
          const o = t2.subarray(i2, i2 + r3);
          o[r3 - 1] = 127 & o[r3 - 1], s = -1 * n.decode(o, 0), e2.bytes = 10;
        } else
          e2.bytes = n.decode.bytes;
        return s;
      }, function(e2) {
        return e2 < 0 ? 10 : n.encodingLength(e2);
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(428), i = r(31);
      e.exports = i(0, function e2(t2, r2, i2, s) {
        n.encode(t2, r2, s), e2.bytes = n.encode.bytes;
      }, function e2(t2, r2, i2) {
        const s = n.decode(t2, i2);
        return e2.bytes = n.decode.bytes, s;
      }, n.encodingLength);
    }, function(e, t, r) {
      "use strict";
      var n = r(429);
      t.encode = function e2(t2, r2, i) {
        t2 = t2 >= 0 ? 2 * t2 : -2 * t2 - 1;
        var s = n.encode(t2, r2, i);
        return e2.bytes = n.encode.bytes, s;
      }, t.decode = function e2(t2, r2) {
        var i = n.decode(t2, r2);
        return e2.bytes = n.decode.bytes, 1 & i ? (i + 1) / -2 : i / 2;
      }, t.encodingLength = function(e2) {
        return n.encodingLength(e2 >= 0 ? 2 * e2 : -2 * e2 - 1);
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = {encode: r(430), decode: r(431), encodingLength: r(432)};
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2, i) {
        r2 = r2 || [];
        var s = i = i || 0;
        for (; t2 >= n; )
          r2[i++] = 255 & t2 | 128, t2 /= 128;
        for (; -128 & t2; )
          r2[i++] = 255 & t2 | 128, t2 >>>= 7;
        return r2[i] = 0 | t2, e2.bytes = i - s + 1, r2;
      };
      var n = Math.pow(2, 31);
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2) {
        var n, i = 0, s = 0, o = r2 = r2 || 0, a = t2.length;
        do {
          if (o >= a)
            throw e2.bytes = 0, new RangeError("Could not decode varint");
          n = t2[o++], i += s < 28 ? (127 & n) << s : (127 & n) * Math.pow(2, s), s += 7;
        } while (n >= 128);
        return e2.bytes = o - r2, i;
      };
    }, function(e, t, r) {
      "use strict";
      var n = Math.pow(2, 7), i = Math.pow(2, 14), s = Math.pow(2, 21), o = Math.pow(2, 28), a = Math.pow(2, 35), c = Math.pow(2, 42), u = Math.pow(2, 49), h = Math.pow(2, 56), f = Math.pow(2, 63);
      e.exports = function(e2) {
        return e2 < n ? 1 : e2 < i ? 2 : e2 < s ? 3 : e2 < o ? 4 : e2 < a ? 5 : e2 < c ? 6 : e2 < u ? 7 : e2 < h ? 8 : e2 < f ? 9 : 10;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(37), i = r(31);
      e.exports = i(0, function e2(t2, r2, i2, s) {
        n.encode(t2, r2, s), e2.bytes = n.encode.bytes;
      }, function e2(t2, r2, i2) {
        const s = n.decode(t2, i2);
        return e2.bytes = n.decode.bytes, s;
      }, n.encodingLength);
    }, function(e, t, r) {
      "use strict";
      const n = r(31);
      e.exports = n(1, function e2(t2, r2, n2, i) {
        for (const s of t2)
          r2[i] = s, i++;
        e2.bytes = 8;
      }, function e2(t2, r2, n2) {
        const i = t2.slice(n2, n2 + 8);
        return e2.bytes = 8, i;
      }, function() {
        return 8;
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(31);
      e.exports = n(1, function e2(t2, r2, n2, i) {
        n2.setFloat64(i, t2, true), e2.bytes = 8;
      }, function e2(t2, r2, n2) {
        const i = r2.getFloat64(n2, true);
        return e2.bytes = 8, i;
      }, function() {
        return 8;
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(31);
      e.exports = n(5, function e2(t2, r2, n2, i) {
        n2.setUint32(i, t2, true), e2.bytes = 4;
      }, function e2(t2, r2, n2) {
        const i = r2.getUint32(n2, true);
        return e2.bytes = 4, i;
      }, function(e2) {
        return 4;
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(31);
      e.exports = n(5, function e2(t2, r2, n2, i) {
        n2.setInt32(i, t2, true), e2.bytes = 4;
      }, function e2(t2, r2, n2) {
        const i = r2.getInt32(n2, true);
        return e2.bytes = 4, i;
      }, function(e2) {
        return 4;
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(31);
      e.exports = n(5, function e2(t2, r2, n2, i) {
        n2.setFloat32(i, t2, true), e2.bytes = 4;
      }, function e2(t2, r2, n2) {
        const i = r2.getFloat32(n2, true);
        return e2.bytes = 4, i;
      }, function() {
        return 4;
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(37), i = r(137).defined;
      function s(e2) {
        return `${e2.substring(0, 1).toUpperCase()}${e2.substring(1)}`;
      }
      function o(e2, t2, r2, n2) {
        if (Object.prototype.hasOwnProperty.call(e2, t2))
          return;
        const i2 = s(t2);
        Object.defineProperties(e2, {[t2]: {enumerable: true, configurable: true, set: (e3) => {
          r2 = e3;
        }, get: () => r2 === void 0 ? n2 : r2}, ["has" + i2]: {configurable: true, value: () => r2 !== void 0}, ["set" + i2]: {configurable: true, value: (e3) => {
          r2 = e3;
        }}, ["get" + i2]: {configurable: true, value: () => r2}, ["clear" + i2]: {configurable: true, value: () => {
          r2 = void 0, e2[t2] = void 0;
        }}});
      }
      var a = function(e2, t2, r2, i2) {
        switch (e2) {
          case 0:
            return n.decode(t2, i2), i2 + n.decode.bytes;
          case 1:
            return i2 + 8;
          case 2:
            var s2 = n.decode(t2, i2);
            return i2 + n.decode.bytes + s2;
          case 3:
          case 4:
            throw new Error("Groups are not supported");
          case 5:
            return i2 + 4;
          default:
            throw new Error("Unknown wire type: " + e2);
        }
      }, c = function(e2) {
        if (e2.map)
          return {};
        if (e2.repeated)
          return [];
        switch (e2.type) {
          case "string":
            return "";
          case "bool":
            return false;
          case "float":
          case "double":
          case "sfixed32":
          case "fixed32":
          case "varint":
          case "enum":
          case "uint64":
          case "uint32":
          case "int64":
          case "int32":
          case "sint64":
          case "sint32":
            return 0;
          default:
            return null;
        }
      }, u = function(e2, t2) {
        if (t2 === void 0)
          return t2;
        switch (e2.type) {
          case "bool":
            return t2 === "true";
          case "float":
          case "double":
          case "sfixed32":
          case "fixed32":
          case "varint":
          case "enum":
          case "uint64":
          case "uint32":
          case "int64":
          case "int32":
          case "sint64":
          case "sint32":
            return parseInt(t2, 10);
          default:
            return t2;
        }
      };
      e.exports = function(e2, t2, r2) {
        const h = [], f = {}, d = [], l = [];
        for (var p = 0; p < r2.length; p++) {
          const r3 = e2.fields[p];
          f[r3.tag] = p;
          const n2 = r3.options && r3.options.default, i2 = t2(r3.type, e2.id, false);
          l[p] = [n2, i2 && i2.values], e2.fields[p].packed = r3.repeated && r3.options && r3.options.packed && r3.options.packed !== "false", r3.required && h.push(r3.name), r3.oneof && d.push(r3.name);
        }
        function y(e3, t3, r3, i2, a2, c2, u2) {
          const h2 = t3.name;
          if (t3.oneof) {
            const e4 = Object.keys(r3);
            for (var f2 = 0; f2 < e4.length; f2++)
              if (d.indexOf(e4[f2]) > -1) {
                const t4 = s(e4[f2]);
                delete r3["has" + t4], delete r3["get" + t4], delete r3["set" + t4], delete r3["clear" + t4], delete r3[e4[f2]];
              }
          }
          let l2;
          if (e3.message) {
            const s2 = n.decode(i2, c2);
            c2 += n.decode.bytes;
            const o2 = e3.decode(i2, a2, c2, c2 + s2);
            t3.map ? (l2 = r3[h2] || {}, l2[o2.key] = o2.value) : t3.repeated ? (l2 = r3[h2] || [], l2.push(o2)) : l2 = o2;
          } else
            t3.repeated ? (l2 = r3[h2] || [], l2.push(e3.decode(i2, a2, c2))) : l2 = e3.decode(i2, a2, c2);
          return o(r3, h2, l2), c2 += e3.decode.bytes;
        }
        return function t3(s2, p2, g, b) {
          if (g == null && (g = 0), b == null && (b = s2.length), !(b <= s2.length && g <= s2.length))
            throw new Error("Decoded message is not valid");
          p2 || (p2 = new DataView(s2.buffer, s2.byteOffset, s2.byteLength));
          for (var m, v = g, w = {}; ; ) {
            if (b <= g) {
              var _, E, S = "", A = 0;
              for (A = 0; A < h.length; A++)
                if (S = h[A], !i(w[S]))
                  throw new Error("Decoded message is not valid, missing required field: " + S);
              for (A = 0; A < r2.length; A++) {
                let t4;
                if (m = e2.fields[A], E = l[A][0], _ = l[A][1], S = m.name, !Object.prototype.hasOwnProperty.call(w, S)) {
                  var I = false;
                  if (m.oneof) {
                    for (var k = Object.keys(w), R = 0; R < k.length; R++)
                      if (d.indexOf(k[R]) > -1) {
                        I = true;
                        break;
                      }
                  }
                  I || (_ ? m.repeated ? E = [] : (E = E && _[E] ? _[E].value : _[Object.keys(_)[0]].value, E = parseInt(E || 0, 10)) : (t4 = c(m), E = u(m, E)), o(w, S, E, t4));
                }
              }
              return t3.bytes = g - v, w;
            }
            var T = n.decode(s2, g);
            g += n.decode.bytes;
            var C = f[T >> 3];
            if (C != null) {
              var M = r2[C];
              if ((m = e2.fields[C]).packed) {
                var x = n.decode(s2, g);
                for (x += g += n.decode.bytes; g < x; )
                  g = y(M, m, w, s2, p2, g);
              } else
                g = y(M, m, w, s2, p2, g);
            } else
              g = a(7 & T, s2, p2, g);
          }
        };
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(137).defined, i = r(37);
      e.exports = function(e2, t2, r2, s, o) {
        const a = Object.keys(s), c = r2.length, u = {};
        for (let n2 = 0; n2 < c; n2++) {
          u[n2] = {p: i.encode(e2.fields[n2].tag << 3 | 2), h: i.encode(e2.fields[n2].tag << 3 | r2[n2].type)};
          const t3 = e2.fields[n2];
          e2.fields[n2].packed = t3.repeated && t3.options && t3.options.packed && t3.options.packed !== "false";
        }
        function h(e3, t3, r3, n2, s2, o2, a2) {
          let c2 = 0;
          if (!o2)
            for (c2 = 0; c2 < n2.length; c2++)
              e3[r3++] = n2[c2];
          return s2.message && (i.encode(s2.encodingLength(a2), e3, r3), r3 += i.encode.bytes), s2.encode(a2, e3, t3, r3), r3 + s2.encode.bytes;
        }
        return function t3(f, d, l, p = 0) {
          d == null && (d = new Uint8Array(o(f))), l == null && (l = new DataView(d.buffer, d.byteOffset, d.byteLength));
          const y = p, g = Object.keys(f);
          let b = 0, m = false;
          for (b = 0; b < a.length; b++) {
            const e3 = a[b], t4 = s[b];
            if (g.indexOf(t4) > -1) {
              if (m)
                throw new Error("only one of the properties defined in oneof " + e3 + " can be set");
              m = true;
            }
          }
          for (b = 0; b < c; b++) {
            const t4 = r2[b], s2 = e2.fields[b];
            let o2 = f[s2.name], a2 = 0;
            if (!n(o2)) {
              if (s2.required)
                throw new Error(s2.name + " is required");
              continue;
            }
            const c2 = u[b].p, y2 = u[b].h, g2 = s2.packed;
            if (s2.map) {
              const e3 = Object.keys(o2);
              for (a2 = 0; a2 < e3.length; a2++)
                e3[a2] = {key: e3[a2], value: o2[e3[a2]]};
              o2 = e3;
            }
            if (g2) {
              let e3 = 0;
              for (a2 = 0; a2 < o2.length; a2++)
                Object.prototype.hasOwnProperty.call(o2, a2) && (e3 += t4.encodingLength(o2[a2]));
              if (e3) {
                for (a2 = 0; a2 < y2.length; a2++)
                  d[p++] = c2[a2];
                i.encode(e3, d, p), p += i.encode.bytes;
              }
            }
            if (s2.repeated) {
              let e3;
              for (a2 = 0; a2 < o2.length; a2++)
                e3 = o2[a2], n(e3) && (p = h(d, l, p, y2, t4, g2, e3));
            } else
              p = h(d, l, p, y2, t4, g2, o2);
          }
          return t3.bytes = p - y, d;
        };
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(137).defined, i = r(37);
      e.exports = function(e2, t2, r2) {
        const s = Object.keys(r2), o = t2.length, a = new Array(o);
        for (let n2 = 0; n2 < e2.fields.length; n2++) {
          a[n2] = i.encodingLength(e2.fields[n2].tag << 3 | t2[n2].type);
          const r3 = e2.fields[n2];
          e2.fields[n2].packed = r3.repeated && r3.options && r3.options.packed && r3.options.packed !== "false";
        }
        return function(c) {
          let u = 0, h = 0, f = 0;
          for (h = 0; h < s.length; h++) {
            const e3 = s[h], t3 = r2[e3];
            let i2 = false;
            for (f = 0; f < t3.length; f++)
              if (n(c[t3[f]])) {
                if (i2)
                  throw new Error("only one of the properties defined in oneof " + e3 + " can be set");
                i2 = true;
              }
          }
          for (h = 0; h < o; h++) {
            const r3 = t2[h], s2 = e2.fields[h];
            let o2 = c[s2.name];
            const d = a[h];
            let l;
            if (n(o2)) {
              if (s2.map) {
                const e3 = Object.keys(o2);
                for (f = 0; f < e3.length; f++)
                  e3[f] = {key: e3[f], value: o2[e3[f]]};
                o2 = e3;
              }
              if (s2.packed) {
                let e3 = 0;
                for (f = 0; f < o2.length; f++)
                  n(o2[f]) && (l = r3.encodingLength(o2[f]), e3 += l, r3.message && (e3 += i.encodingLength(l)));
                e3 && (u += d + e3 + i.encodingLength(e3));
              } else if (s2.repeated)
                for (f = 0; f < o2.length; f++)
                  n(o2[f]) && (l = r3.encodingLength(o2[f]), u += d + l + (r3.message ? i.encodingLength(l) : 0));
              else
                l = r3.encodingLength(o2), u += d + l + (r3.message ? i.encodingLength(l) : 0);
            } else if (s2.required)
              throw new Error(s2.name + " is required");
          }
          return u;
        };
      };
    }, function(e, t, r) {
      "use strict";
      t.byteLength = function(e2) {
        var t2 = u(e2), r2 = t2[0], n2 = t2[1];
        return 3 * (r2 + n2) / 4 - n2;
      }, t.toByteArray = function(e2) {
        var t2, r2, n2 = u(e2), o2 = n2[0], a2 = n2[1], c2 = new s(function(e3, t3, r3) {
          return 3 * (t3 + r3) / 4 - r3;
        }(0, o2, a2)), h2 = 0, f = a2 > 0 ? o2 - 4 : o2;
        for (r2 = 0; r2 < f; r2 += 4)
          t2 = i[e2.charCodeAt(r2)] << 18 | i[e2.charCodeAt(r2 + 1)] << 12 | i[e2.charCodeAt(r2 + 2)] << 6 | i[e2.charCodeAt(r2 + 3)], c2[h2++] = t2 >> 16 & 255, c2[h2++] = t2 >> 8 & 255, c2[h2++] = 255 & t2;
        a2 === 2 && (t2 = i[e2.charCodeAt(r2)] << 2 | i[e2.charCodeAt(r2 + 1)] >> 4, c2[h2++] = 255 & t2);
        a2 === 1 && (t2 = i[e2.charCodeAt(r2)] << 10 | i[e2.charCodeAt(r2 + 1)] << 4 | i[e2.charCodeAt(r2 + 2)] >> 2, c2[h2++] = t2 >> 8 & 255, c2[h2++] = 255 & t2);
        return c2;
      }, t.fromByteArray = function(e2) {
        for (var t2, r2 = e2.length, i2 = r2 % 3, s2 = [], o2 = 0, a2 = r2 - i2; o2 < a2; o2 += 16383)
          s2.push(h(e2, o2, o2 + 16383 > a2 ? a2 : o2 + 16383));
        i2 === 1 ? (t2 = e2[r2 - 1], s2.push(n[t2 >> 2] + n[t2 << 4 & 63] + "==")) : i2 === 2 && (t2 = (e2[r2 - 2] << 8) + e2[r2 - 1], s2.push(n[t2 >> 10] + n[t2 >> 4 & 63] + n[t2 << 2 & 63] + "="));
        return s2.join("");
      };
      for (var n = [], i = [], s = typeof Uint8Array != "undefined" ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a = 0, c = o.length; a < c; ++a)
        n[a] = o[a], i[o.charCodeAt(a)] = a;
      function u(e2) {
        var t2 = e2.length;
        if (t2 % 4 > 0)
          throw new Error("Invalid string. Length must be a multiple of 4");
        var r2 = e2.indexOf("=");
        return r2 === -1 && (r2 = t2), [r2, r2 === t2 ? 0 : 4 - r2 % 4];
      }
      function h(e2, t2, r2) {
        for (var i2, s2, o2 = [], a2 = t2; a2 < r2; a2 += 3)
          i2 = (e2[a2] << 16 & 16711680) + (e2[a2 + 1] << 8 & 65280) + (255 & e2[a2 + 2]), o2.push(n[(s2 = i2) >> 18 & 63] + n[s2 >> 12 & 63] + n[s2 >> 6 & 63] + n[63 & s2]);
        return o2.join("");
      }
      i["-".charCodeAt(0)] = 62, i["_".charCodeAt(0)] = 63;
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        var r2 = {};
        e.exports = r2;
        var n = {};
        r2.encode = function(e2, t3, r3) {
          if (typeof t3 != "string")
            throw new TypeError('"alphabet" must be a string.');
          if (r3 !== void 0 && typeof r3 != "number")
            throw new TypeError('"maxline" must be a number.');
          var n2 = "";
          if (e2 instanceof Uint8Array) {
            var i = 0, s = t3.length, o = t3.charAt(0), a = [0];
            for (i = 0; i < e2.length; ++i) {
              for (var c = 0, u = e2[i]; c < a.length; ++c)
                u += a[c] << 8, a[c] = u % s, u = u / s | 0;
              for (; u > 0; )
                a.push(u % s), u = u / s | 0;
            }
            for (i = 0; e2[i] === 0 && i < e2.length - 1; ++i)
              n2 += o;
            for (i = a.length - 1; i >= 0; --i)
              n2 += t3[a[i]];
          } else
            n2 = function(e3, t4) {
              var r4 = 0, n3 = t4.length, i2 = t4.charAt(0), s2 = [0];
              for (r4 = 0; r4 < e3.length(); ++r4) {
                for (var o2 = 0, a2 = e3.at(r4); o2 < s2.length; ++o2)
                  a2 += s2[o2] << 8, s2[o2] = a2 % n3, a2 = a2 / n3 | 0;
                for (; a2 > 0; )
                  s2.push(a2 % n3), a2 = a2 / n3 | 0;
              }
              var c2 = "";
              for (r4 = 0; e3.at(r4) === 0 && r4 < e3.length() - 1; ++r4)
                c2 += i2;
              for (r4 = s2.length - 1; r4 >= 0; --r4)
                c2 += t4[s2[r4]];
              return c2;
            }(e2, t3);
          if (r3) {
            var h = new RegExp(".{1," + r3 + "}", "g");
            n2 = n2.match(h).join("\r\n");
          }
          return n2;
        }, r2.decode = function(e2, r3) {
          if (typeof e2 != "string")
            throw new TypeError('"input" must be a string.');
          if (typeof r3 != "string")
            throw new TypeError('"alphabet" must be a string.');
          var i = n[r3];
          if (!i) {
            i = n[r3] = [];
            for (var s = 0; s < r3.length; ++s)
              i[r3.charCodeAt(s)] = s;
          }
          e2 = e2.replace(/\s/g, "");
          var o = r3.length, a = r3.charAt(0), c = [0];
          for (s = 0; s < e2.length; s++) {
            var u = i[e2.charCodeAt(s)];
            if (u === void 0)
              return;
            for (var h = 0, f = u; h < c.length; ++h)
              f += c[h] * o, c[h] = 255 & f, f >>= 8;
            for (; f > 0; )
              c.push(255 & f), f >>= 8;
          }
          for (var d = 0; e2[d] === a && d < e2.length - 1; ++d)
            c.push(0);
          return t2 !== void 0 ? t2.from(c.reverse()) : new Uint8Array(c.reverse());
        };
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      r(49), r(13), (e.exports = n.hmac = n.hmac || {}).create = function() {
        var e2 = null, t2 = null, r2 = null, i = null, s = {start: function(s2, o) {
          if (s2 !== null)
            if (typeof s2 == "string") {
              if (!((s2 = s2.toLowerCase()) in n.md.algorithms))
                throw new Error('Unknown hash algorithm "' + s2 + '"');
              t2 = n.md.algorithms[s2].create();
            } else
              t2 = s2;
          if (o === null)
            o = e2;
          else {
            if (typeof o == "string")
              o = n.util.createBuffer(o);
            else if (n.util.isArray(o)) {
              var a = o;
              o = n.util.createBuffer();
              for (var c = 0; c < a.length; ++c)
                o.putByte(a[c]);
            }
            var u = o.length();
            u > t2.blockLength && (t2.start(), t2.update(o.bytes()), o = t2.digest()), r2 = n.util.createBuffer(), i = n.util.createBuffer(), u = o.length();
            for (c = 0; c < u; ++c) {
              a = o.at(c);
              r2.putByte(54 ^ a), i.putByte(92 ^ a);
            }
            if (u < t2.blockLength)
              for (a = t2.blockLength - u, c = 0; c < a; ++c)
                r2.putByte(54), i.putByte(92);
            e2 = o, r2 = r2.bytes(), i = i.bytes();
          }
          t2.start(), t2.update(r2);
        }, update: function(e3) {
          t2.update(e3);
        }, getMac: function() {
          var e3 = t2.digest().bytes();
          return t2.start(), t2.update(i), t2.update(e3), t2.digest();
        }};
        return s.digest = s.getMac, s;
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      r(49), r(13);
      var i = e.exports = n.sha256 = n.sha256 || {};
      n.md.sha256 = n.md.algorithms.sha256 = i, i.create = function() {
        o || (s = String.fromCharCode(128), s += n.util.fillString(String.fromCharCode(0), 64), a = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], o = true);
        var e2 = null, t2 = n.util.createBuffer(), r2 = new Array(64), i2 = {algorithm: "sha256", blockLength: 64, digestLength: 32, messageLength: 0, fullMessageLength: null, messageLengthSize: 8, start: function() {
          i2.messageLength = 0, i2.fullMessageLength = i2.messageLength64 = [];
          for (var r3 = i2.messageLengthSize / 4, s2 = 0; s2 < r3; ++s2)
            i2.fullMessageLength.push(0);
          return t2 = n.util.createBuffer(), e2 = {h0: 1779033703, h1: 3144134277, h2: 1013904242, h3: 2773480762, h4: 1359893119, h5: 2600822924, h6: 528734635, h7: 1541459225}, i2;
        }};
        return i2.start(), i2.update = function(s2, o2) {
          o2 === "utf8" && (s2 = n.util.encodeUtf8(s2));
          var a2 = s2.length;
          i2.messageLength += a2, a2 = [a2 / 4294967296 >>> 0, a2 >>> 0];
          for (var u = i2.fullMessageLength.length - 1; u >= 0; --u)
            i2.fullMessageLength[u] += a2[1], a2[1] = a2[0] + (i2.fullMessageLength[u] / 4294967296 >>> 0), i2.fullMessageLength[u] = i2.fullMessageLength[u] >>> 0, a2[0] = a2[1] / 4294967296 >>> 0;
          return t2.putBytes(s2), c(e2, r2, t2), (t2.read > 2048 || t2.length() === 0) && t2.compact(), i2;
        }, i2.digest = function() {
          var o2 = n.util.createBuffer();
          o2.putBytes(t2.bytes());
          var a2, u = i2.fullMessageLength[i2.fullMessageLength.length - 1] + i2.messageLengthSize & i2.blockLength - 1;
          o2.putBytes(s.substr(0, i2.blockLength - u));
          for (var h = 8 * i2.fullMessageLength[0], f = 0; f < i2.fullMessageLength.length - 1; ++f)
            h += (a2 = 8 * i2.fullMessageLength[f + 1]) / 4294967296 >>> 0, o2.putInt32(h >>> 0), h = a2 >>> 0;
          o2.putInt32(h);
          var d = {h0: e2.h0, h1: e2.h1, h2: e2.h2, h3: e2.h3, h4: e2.h4, h5: e2.h5, h6: e2.h6, h7: e2.h7};
          c(d, r2, o2);
          var l = n.util.createBuffer();
          return l.putInt32(d.h0), l.putInt32(d.h1), l.putInt32(d.h2), l.putInt32(d.h3), l.putInt32(d.h4), l.putInt32(d.h5), l.putInt32(d.h6), l.putInt32(d.h7), l;
        }, i2;
      };
      var s = null, o = false, a = null;
      function c(e2, t2, r2) {
        for (var n2, i2, s2, o2, c2, u, h, f, d, l, p, y, g, b = r2.length(); b >= 64; ) {
          for (c2 = 0; c2 < 16; ++c2)
            t2[c2] = r2.getInt32();
          for (; c2 < 64; ++c2)
            n2 = ((n2 = t2[c2 - 2]) >>> 17 | n2 << 15) ^ (n2 >>> 19 | n2 << 13) ^ n2 >>> 10, i2 = ((i2 = t2[c2 - 15]) >>> 7 | i2 << 25) ^ (i2 >>> 18 | i2 << 14) ^ i2 >>> 3, t2[c2] = n2 + t2[c2 - 7] + i2 + t2[c2 - 16] | 0;
          for (u = e2.h0, h = e2.h1, f = e2.h2, d = e2.h3, l = e2.h4, p = e2.h5, y = e2.h6, g = e2.h7, c2 = 0; c2 < 64; ++c2)
            s2 = (u >>> 2 | u << 30) ^ (u >>> 13 | u << 19) ^ (u >>> 22 | u << 10), o2 = u & h | f & (u ^ h), n2 = g + ((l >>> 6 | l << 26) ^ (l >>> 11 | l << 21) ^ (l >>> 25 | l << 7)) + (y ^ l & (p ^ y)) + a[c2] + t2[c2], g = y, y = p, p = l, l = d + n2 >>> 0, d = f, f = h, h = u, u = n2 + (i2 = s2 + o2) >>> 0;
          e2.h0 = e2.h0 + u | 0, e2.h1 = e2.h1 + h | 0, e2.h2 = e2.h2 + f | 0, e2.h3 = e2.h3 + d | 0, e2.h4 = e2.h4 + l | 0, e2.h5 = e2.h5 + p | 0, e2.h6 = e2.h6 + y | 0, e2.h7 = e2.h7 + g | 0, b -= 64;
        }
      }
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        var n = r(8);
        r(13);
        var i = null;
        !n.util.isNodejs || n.options.usePureJavaScript || t2.versions["node-webkit"] || (i = r(140)), (e.exports = n.prng = n.prng || {}).create = function(e2) {
          for (var t3 = {plugin: e2, key: null, seed: null, time: null, reseeds: 0, generated: 0, keyBytes: ""}, r2 = e2.md, s = new Array(32), o = 0; o < 32; ++o)
            s[o] = r2.create();
          function a() {
            if (t3.pools[0].messageLength >= 32)
              return c();
            var e3 = 32 - t3.pools[0].messageLength << 5;
            t3.collect(t3.seedFileSync(e3)), c();
          }
          function c() {
            t3.reseeds = t3.reseeds === 4294967295 ? 0 : t3.reseeds + 1;
            var e3 = t3.plugin.md.create();
            e3.update(t3.keyBytes);
            for (var r3 = 1, n2 = 0; n2 < 32; ++n2)
              t3.reseeds % r3 == 0 && (e3.update(t3.pools[n2].digest().getBytes()), t3.pools[n2].start()), r3 <<= 1;
            t3.keyBytes = e3.digest().getBytes(), e3.start(), e3.update(t3.keyBytes);
            var i2 = e3.digest().getBytes();
            t3.key = t3.plugin.formatKey(t3.keyBytes), t3.seed = t3.plugin.formatSeed(i2), t3.generated = 0;
          }
          function u(e3) {
            var t4 = null, r3 = n.util.globalScope, i2 = r3.crypto || r3.msCrypto;
            i2 && i2.getRandomValues && (t4 = function(e4) {
              return i2.getRandomValues(e4);
            });
            var s2 = n.util.createBuffer();
            if (t4)
              for (; s2.length() < e3; ) {
                var o2 = Math.max(1, Math.min(e3 - s2.length(), 65536) / 4), a2 = new Uint32Array(Math.floor(o2));
                try {
                  t4(a2);
                  for (var c2 = 0; c2 < a2.length; ++c2)
                    s2.putInt32(a2[c2]);
                } catch (l) {
                  if (!(typeof QuotaExceededError != "undefined" && l instanceof QuotaExceededError))
                    throw l;
                }
              }
            if (s2.length() < e3)
              for (var u2, h, f, d = Math.floor(65536 * Math.random()); s2.length() < e3; ) {
                h = 16807 * (65535 & d), h += (32767 & (u2 = 16807 * (d >> 16))) << 16, d = 4294967295 & (h = (2147483647 & (h += u2 >> 15)) + (h >> 31));
                for (c2 = 0; c2 < 3; ++c2)
                  f = d >>> (c2 << 3), f ^= Math.floor(256 * Math.random()), s2.putByte(String.fromCharCode(255 & f));
              }
            return s2.getBytes(e3);
          }
          return t3.pools = s, t3.pool = 0, t3.generate = function(e3, r3) {
            if (!r3)
              return t3.generateSync(e3);
            var i2 = t3.plugin.cipher, s2 = t3.plugin.increment, o2 = t3.plugin.formatKey, a2 = t3.plugin.formatSeed, u2 = n.util.createBuffer();
            t3.key = null, function h(f) {
              if (f)
                return r3(f);
              if (u2.length() >= e3)
                return r3(null, u2.getBytes(e3));
              t3.generated > 1048575 && (t3.key = null);
              if (t3.key === null)
                return n.util.nextTick(function() {
                  !function(e4) {
                    if (t3.pools[0].messageLength >= 32)
                      return c(), e4();
                    var r4 = 32 - t3.pools[0].messageLength << 5;
                    t3.seedFile(r4, function(r5, n2) {
                      if (r5)
                        return e4(r5);
                      t3.collect(n2), c(), e4();
                    });
                  }(h);
                });
              var d = i2(t3.key, t3.seed);
              t3.generated += d.length, u2.putBytes(d), t3.key = o2(i2(t3.key, s2(t3.seed))), t3.seed = a2(i2(t3.key, t3.seed)), n.util.setImmediate(h);
            }();
          }, t3.generateSync = function(e3) {
            var r3 = t3.plugin.cipher, i2 = t3.plugin.increment, s2 = t3.plugin.formatKey, o2 = t3.plugin.formatSeed;
            t3.key = null;
            for (var c2 = n.util.createBuffer(); c2.length() < e3; ) {
              t3.generated > 1048575 && (t3.key = null), t3.key === null && a();
              var u2 = r3(t3.key, t3.seed);
              t3.generated += u2.length, c2.putBytes(u2), t3.key = s2(r3(t3.key, i2(t3.seed))), t3.seed = o2(r3(t3.key, t3.seed));
            }
            return c2.getBytes(e3);
          }, i ? (t3.seedFile = function(e3, t4) {
            i.randomBytes(e3, function(e4, r3) {
              if (e4)
                return t4(e4);
              t4(null, r3.toString());
            });
          }, t3.seedFileSync = function(e3) {
            return i.randomBytes(e3).toString();
          }) : (t3.seedFile = function(e3, t4) {
            try {
              t4(null, u(e3));
            } catch (r3) {
              t4(r3);
            }
          }, t3.seedFileSync = u), t3.collect = function(e3) {
            for (var r3 = e3.length, n2 = 0; n2 < r3; ++n2)
              t3.pools[t3.pool].update(e3.substr(n2, 1)), t3.pool = t3.pool === 31 ? 0 : t3.pool + 1;
          }, t3.collectInt = function(e3, r3) {
            for (var n2 = "", i2 = 0; i2 < r3; i2 += 8)
              n2 += String.fromCharCode(e3 >> i2 & 255);
            t3.collect(n2);
          }, t3.registerWorker = function(e3) {
            if (e3 === self)
              t3.seedFile = function(e4, t4) {
                self.addEventListener("message", function e5(r3) {
                  var n2 = r3.data;
                  n2.forge && n2.forge.prng && (self.removeEventListener("message", e5), t4(n2.forge.prng.err, n2.forge.prng.bytes));
                }), self.postMessage({forge: {prng: {needed: e4}}});
              };
            else {
              e3.addEventListener("message", function(r3) {
                var n2 = r3.data;
                n2.forge && n2.forge.prng && t3.seedFile(n2.forge.prng.needed, function(t4, r4) {
                  e3.postMessage({forge: {prng: {err: t4, bytes: r4}}});
                });
              });
            }
          }, t3;
        };
      }).call(this, r(10));
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      r(13);
      var i = [217, 120, 249, 196, 25, 221, 181, 237, 40, 233, 253, 121, 74, 160, 216, 157, 198, 126, 55, 131, 43, 118, 83, 142, 98, 76, 100, 136, 68, 139, 251, 162, 23, 154, 89, 245, 135, 179, 79, 19, 97, 69, 109, 141, 9, 129, 125, 50, 189, 143, 64, 235, 134, 183, 123, 11, 240, 149, 33, 34, 92, 107, 78, 130, 84, 214, 101, 147, 206, 96, 178, 28, 115, 86, 192, 20, 167, 140, 241, 220, 18, 117, 202, 31, 59, 190, 228, 209, 66, 61, 212, 48, 163, 60, 182, 38, 111, 191, 14, 218, 70, 105, 7, 87, 39, 242, 29, 155, 188, 148, 67, 3, 248, 17, 199, 246, 144, 239, 62, 231, 6, 195, 213, 47, 200, 102, 30, 215, 8, 232, 234, 222, 128, 82, 238, 247, 132, 170, 114, 172, 53, 77, 106, 42, 150, 26, 210, 113, 90, 21, 73, 116, 75, 159, 208, 94, 4, 24, 164, 236, 194, 224, 65, 110, 15, 81, 203, 204, 36, 145, 175, 80, 161, 244, 112, 57, 153, 124, 58, 133, 35, 184, 180, 122, 252, 2, 54, 91, 37, 85, 151, 49, 45, 93, 250, 152, 227, 138, 146, 174, 5, 223, 41, 16, 103, 108, 186, 201, 211, 0, 230, 207, 225, 158, 168, 44, 99, 22, 1, 63, 88, 226, 137, 169, 13, 56, 52, 27, 171, 51, 255, 176, 187, 72, 12, 95, 185, 177, 205, 46, 197, 243, 219, 71, 229, 165, 156, 119, 10, 166, 32, 104, 254, 127, 193, 173], s = [1, 2, 3, 5], o = function(e2, t2) {
        return e2 << t2 & 65535 | (65535 & e2) >> 16 - t2;
      }, a = function(e2, t2) {
        return (65535 & e2) >> t2 | e2 << 16 - t2 & 65535;
      };
      e.exports = n.rc2 = n.rc2 || {}, n.rc2.expandKey = function(e2, t2) {
        typeof e2 == "string" && (e2 = n.util.createBuffer(e2)), t2 = t2 || 128;
        var r2, s2 = e2, o2 = e2.length(), a2 = t2, c2 = Math.ceil(a2 / 8), u = 255 >> (7 & a2);
        for (r2 = o2; r2 < 128; r2++)
          s2.putByte(i[s2.at(r2 - 1) + s2.at(r2 - o2) & 255]);
        for (s2.setAt(128 - c2, i[s2.at(128 - c2) & u]), r2 = 127 - c2; r2 >= 0; r2--)
          s2.setAt(r2, i[s2.at(r2 + 1) ^ s2.at(r2 + c2)]);
        return s2;
      };
      var c = function(e2, t2, r2) {
        var i2, c2, u, h, f = false, d = null, l = null, p = null, y = [];
        for (e2 = n.rc2.expandKey(e2, t2), u = 0; u < 64; u++)
          y.push(e2.getInt16Le());
        r2 ? (i2 = function(e3) {
          for (u = 0; u < 4; u++)
            e3[u] += y[h] + (e3[(u + 3) % 4] & e3[(u + 2) % 4]) + (~e3[(u + 3) % 4] & e3[(u + 1) % 4]), e3[u] = o(e3[u], s[u]), h++;
        }, c2 = function(e3) {
          for (u = 0; u < 4; u++)
            e3[u] += y[63 & e3[(u + 3) % 4]];
        }) : (i2 = function(e3) {
          for (u = 3; u >= 0; u--)
            e3[u] = a(e3[u], s[u]), e3[u] -= y[h] + (e3[(u + 3) % 4] & e3[(u + 2) % 4]) + (~e3[(u + 3) % 4] & e3[(u + 1) % 4]), h--;
        }, c2 = function(e3) {
          for (u = 3; u >= 0; u--)
            e3[u] -= y[63 & e3[(u + 3) % 4]];
        });
        var g = function(e3) {
          var t3 = [];
          for (u = 0; u < 4; u++) {
            var n2 = d.getInt16Le();
            p !== null && (r2 ? n2 ^= p.getInt16Le() : p.putInt16Le(n2)), t3.push(65535 & n2);
          }
          h = r2 ? 0 : 63;
          for (var i3 = 0; i3 < e3.length; i3++)
            for (var s2 = 0; s2 < e3[i3][0]; s2++)
              e3[i3][1](t3);
          for (u = 0; u < 4; u++)
            p !== null && (r2 ? p.putInt16Le(t3[u]) : t3[u] ^= p.getInt16Le()), l.putInt16Le(t3[u]);
        }, b = null;
        return b = {start: function(e3, t3) {
          e3 && typeof e3 == "string" && (e3 = n.util.createBuffer(e3)), f = false, d = n.util.createBuffer(), l = t3 || new n.util.createBuffer(), p = e3, b.output = l;
        }, update: function(e3) {
          for (f || d.putBuffer(e3); d.length() >= 8; )
            g([[5, i2], [1, c2], [6, i2], [1, c2], [5, i2]]);
        }, finish: function(e3) {
          var t3 = true;
          if (r2)
            if (e3)
              t3 = e3(8, d, !r2);
            else {
              var n2 = d.length() === 8 ? 8 : 8 - d.length();
              d.fillWithByte(n2, n2);
            }
          if (t3 && (f = true, b.update()), !r2 && (t3 = d.length() === 0))
            if (e3)
              t3 = e3(8, l, !r2);
            else {
              var i3 = l.length(), s2 = l.at(i3 - 1);
              s2 > i3 ? t3 = false : l.truncate(s2);
            }
          return t3;
        }};
      };
      n.rc2.startEncrypting = function(e2, t2, r2) {
        var i2 = n.rc2.createEncryptionCipher(e2, 128);
        return i2.start(t2, r2), i2;
      }, n.rc2.createEncryptionCipher = function(e2, t2) {
        return c(e2, t2, true);
      }, n.rc2.startDecrypting = function(e2, t2, r2) {
        var i2 = n.rc2.createDecryptionCipher(e2, 128);
        return i2.start(t2, r2), i2;
      }, n.rc2.createDecryptionCipher = function(e2, t2) {
        return c(e2, t2, false);
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      r(13), r(50), r(449);
      var i = e.exports = n.pkcs1 = n.pkcs1 || {};
      function s(e2, t2, r2) {
        r2 || (r2 = n.md.sha1.create());
        for (var i2 = "", s2 = Math.ceil(t2 / r2.digestLength), o = 0; o < s2; ++o) {
          var a = String.fromCharCode(o >> 24 & 255, o >> 16 & 255, o >> 8 & 255, 255 & o);
          r2.start(), r2.update(e2 + a), i2 += r2.digest().getBytes();
        }
        return i2.substring(0, t2);
      }
      i.encode_rsa_oaep = function(e2, t2, r2) {
        var i2, o, a, c;
        typeof r2 == "string" ? (i2 = r2, o = arguments[3] || void 0, a = arguments[4] || void 0) : r2 && (i2 = r2.label || void 0, o = r2.seed || void 0, a = r2.md || void 0, r2.mgf1 && r2.mgf1.md && (c = r2.mgf1.md)), a ? a.start() : a = n.md.sha1.create(), c || (c = a);
        var u = Math.ceil(e2.n.bitLength() / 8), h = u - 2 * a.digestLength - 2;
        if (t2.length > h)
          throw (g = new Error("RSAES-OAEP input message length is too long.")).length = t2.length, g.maxLength = h, g;
        i2 || (i2 = ""), a.update(i2, "raw");
        for (var f = a.digest(), d = "", l = h - t2.length, p = 0; p < l; p++)
          d += "\0";
        var y = f.getBytes() + d + "" + t2;
        if (o) {
          if (o.length !== a.digestLength) {
            var g;
            throw (g = new Error("Invalid RSAES-OAEP seed. The seed length must match the digest length.")).seedLength = o.length, g.digestLength = a.digestLength, g;
          }
        } else
          o = n.random.getBytes(a.digestLength);
        var b = s(o, u - a.digestLength - 1, c), m = n.util.xorBytes(y, b, y.length), v = s(m, a.digestLength, c), w = n.util.xorBytes(o, v, o.length);
        return "\0" + w + m;
      }, i.decode_rsa_oaep = function(e2, t2, r2) {
        var i2, o, a;
        typeof r2 == "string" ? (i2 = r2, o = arguments[3] || void 0) : r2 && (i2 = r2.label || void 0, o = r2.md || void 0, r2.mgf1 && r2.mgf1.md && (a = r2.mgf1.md));
        var c = Math.ceil(e2.n.bitLength() / 8);
        if (t2.length !== c)
          throw (m = new Error("RSAES-OAEP encoded message length is invalid.")).length = t2.length, m.expectedLength = c, m;
        if (o === void 0 ? o = n.md.sha1.create() : o.start(), a || (a = o), c < 2 * o.digestLength + 2)
          throw new Error("RSAES-OAEP key is too short for the hash function.");
        i2 || (i2 = ""), o.update(i2, "raw");
        for (var u = o.digest().getBytes(), h = t2.charAt(0), f = t2.substring(1, o.digestLength + 1), d = t2.substring(1 + o.digestLength), l = s(d, o.digestLength, a), p = n.util.xorBytes(f, l, f.length), y = s(p, c - o.digestLength - 1, a), g = n.util.xorBytes(d, y, d.length), b = g.substring(0, o.digestLength), m = h !== "\0", v = 0; v < o.digestLength; ++v)
          m |= u.charAt(v) !== b.charAt(v);
        for (var w = 1, _ = o.digestLength, E = o.digestLength; E < g.length; E++) {
          var S = g.charCodeAt(E), A = 1 & S ^ 1, I = w ? 65534 : 0;
          m |= S & I, _ += w &= A;
        }
        if (m || g.charCodeAt(_) !== 1)
          throw new Error("Invalid RSAES-OAEP padding.");
        return g.substring(_ + 1);
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      r(49), r(13);
      var i = e.exports = n.sha1 = n.sha1 || {};
      n.md.sha1 = n.md.algorithms.sha1 = i, i.create = function() {
        o || (s = String.fromCharCode(128), s += n.util.fillString(String.fromCharCode(0), 64), o = true);
        var e2 = null, t2 = n.util.createBuffer(), r2 = new Array(80), i2 = {algorithm: "sha1", blockLength: 64, digestLength: 20, messageLength: 0, fullMessageLength: null, messageLengthSize: 8, start: function() {
          i2.messageLength = 0, i2.fullMessageLength = i2.messageLength64 = [];
          for (var r3 = i2.messageLengthSize / 4, s2 = 0; s2 < r3; ++s2)
            i2.fullMessageLength.push(0);
          return t2 = n.util.createBuffer(), e2 = {h0: 1732584193, h1: 4023233417, h2: 2562383102, h3: 271733878, h4: 3285377520}, i2;
        }};
        return i2.start(), i2.update = function(s2, o2) {
          o2 === "utf8" && (s2 = n.util.encodeUtf8(s2));
          var c = s2.length;
          i2.messageLength += c, c = [c / 4294967296 >>> 0, c >>> 0];
          for (var u = i2.fullMessageLength.length - 1; u >= 0; --u)
            i2.fullMessageLength[u] += c[1], c[1] = c[0] + (i2.fullMessageLength[u] / 4294967296 >>> 0), i2.fullMessageLength[u] = i2.fullMessageLength[u] >>> 0, c[0] = c[1] / 4294967296 >>> 0;
          return t2.putBytes(s2), a(e2, r2, t2), (t2.read > 2048 || t2.length() === 0) && t2.compact(), i2;
        }, i2.digest = function() {
          var o2 = n.util.createBuffer();
          o2.putBytes(t2.bytes());
          var c, u = i2.fullMessageLength[i2.fullMessageLength.length - 1] + i2.messageLengthSize & i2.blockLength - 1;
          o2.putBytes(s.substr(0, i2.blockLength - u));
          for (var h = 8 * i2.fullMessageLength[0], f = 0; f < i2.fullMessageLength.length - 1; ++f)
            h += (c = 8 * i2.fullMessageLength[f + 1]) / 4294967296 >>> 0, o2.putInt32(h >>> 0), h = c >>> 0;
          o2.putInt32(h);
          var d = {h0: e2.h0, h1: e2.h1, h2: e2.h2, h3: e2.h3, h4: e2.h4};
          a(d, r2, o2);
          var l = n.util.createBuffer();
          return l.putInt32(d.h0), l.putInt32(d.h1), l.putInt32(d.h2), l.putInt32(d.h3), l.putInt32(d.h4), l;
        }, i2;
      };
      var s = null, o = false;
      function a(e2, t2, r2) {
        for (var n2, i2, s2, o2, a2, c, u, h = r2.length(); h >= 64; ) {
          for (i2 = e2.h0, s2 = e2.h1, o2 = e2.h2, a2 = e2.h3, c = e2.h4, u = 0; u < 16; ++u)
            n2 = r2.getInt32(), t2[u] = n2, n2 = (i2 << 5 | i2 >>> 27) + (a2 ^ s2 & (o2 ^ a2)) + c + 1518500249 + n2, c = a2, a2 = o2, o2 = (s2 << 30 | s2 >>> 2) >>> 0, s2 = i2, i2 = n2;
          for (; u < 20; ++u)
            n2 = (n2 = t2[u - 3] ^ t2[u - 8] ^ t2[u - 14] ^ t2[u - 16]) << 1 | n2 >>> 31, t2[u] = n2, n2 = (i2 << 5 | i2 >>> 27) + (a2 ^ s2 & (o2 ^ a2)) + c + 1518500249 + n2, c = a2, a2 = o2, o2 = (s2 << 30 | s2 >>> 2) >>> 0, s2 = i2, i2 = n2;
          for (; u < 32; ++u)
            n2 = (n2 = t2[u - 3] ^ t2[u - 8] ^ t2[u - 14] ^ t2[u - 16]) << 1 | n2 >>> 31, t2[u] = n2, n2 = (i2 << 5 | i2 >>> 27) + (s2 ^ o2 ^ a2) + c + 1859775393 + n2, c = a2, a2 = o2, o2 = (s2 << 30 | s2 >>> 2) >>> 0, s2 = i2, i2 = n2;
          for (; u < 40; ++u)
            n2 = (n2 = t2[u - 6] ^ t2[u - 16] ^ t2[u - 28] ^ t2[u - 32]) << 2 | n2 >>> 30, t2[u] = n2, n2 = (i2 << 5 | i2 >>> 27) + (s2 ^ o2 ^ a2) + c + 1859775393 + n2, c = a2, a2 = o2, o2 = (s2 << 30 | s2 >>> 2) >>> 0, s2 = i2, i2 = n2;
          for (; u < 60; ++u)
            n2 = (n2 = t2[u - 6] ^ t2[u - 16] ^ t2[u - 28] ^ t2[u - 32]) << 2 | n2 >>> 30, t2[u] = n2, n2 = (i2 << 5 | i2 >>> 27) + (s2 & o2 | a2 & (s2 ^ o2)) + c + 2400959708 + n2, c = a2, a2 = o2, o2 = (s2 << 30 | s2 >>> 2) >>> 0, s2 = i2, i2 = n2;
          for (; u < 80; ++u)
            n2 = (n2 = t2[u - 6] ^ t2[u - 16] ^ t2[u - 28] ^ t2[u - 32]) << 2 | n2 >>> 30, t2[u] = n2, n2 = (i2 << 5 | i2 >>> 27) + (s2 ^ o2 ^ a2) + c + 3395469782 + n2, c = a2, a2 = o2, o2 = (s2 << 30 | s2 >>> 2) >>> 0, s2 = i2, i2 = n2;
          e2.h0 = e2.h0 + i2 | 0, e2.h1 = e2.h1 + s2 | 0, e2.h2 = e2.h2 + o2 | 0, e2.h3 = e2.h3 + a2 | 0, e2.h4 = e2.h4 + c | 0, h -= 64;
        }
      }
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      r(13), r(100), r(50), function() {
        if (n.prime)
          e.exports = n.prime;
        else {
          var t2 = e.exports = n.prime = n.prime || {}, r2 = n.jsbn.BigInteger, i = [6, 4, 2, 4, 2, 4, 6, 2], s = new r2(null);
          s.fromInt(30);
          var o = function(e2, t3) {
            return e2 | t3;
          };
          t2.generateProbablePrime = function(e2, t3, i2) {
            typeof t3 == "function" && (i2 = t3, t3 = {});
            var s2 = (t3 = t3 || {}).algorithm || "PRIMEINC";
            typeof s2 == "string" && (s2 = {name: s2}), s2.options = s2.options || {};
            var o2 = t3.prng || n.random, u = {nextBytes: function(e3) {
              for (var t4 = o2.getBytesSync(e3.length), r3 = 0; r3 < e3.length; ++r3)
                e3[r3] = t4.charCodeAt(r3);
            }};
            if (s2.name === "PRIMEINC")
              return function(e3, t4, i3, s3) {
                if ("workers" in i3)
                  return function(e4, t5, i4, s4) {
                    if (typeof Worker == "undefined")
                      return a(e4, t5, i4, s4);
                    var o3 = c(e4, t5), u2 = i4.workers, h = i4.workLoad || 100, f = 30 * h / 8, d = i4.workerScript || "forge/prime.worker.js";
                    if (u2 === -1)
                      return n.util.estimateCores(function(e5, t6) {
                        e5 && (t6 = 2), u2 = t6 - 1, l();
                      });
                    function l() {
                      u2 = Math.max(1, u2);
                      for (var n2 = [], i5 = 0; i5 < u2; ++i5)
                        n2[i5] = new Worker(d);
                      for (i5 = 0; i5 < u2; ++i5)
                        n2[i5].addEventListener("message", l2);
                      var a2 = false;
                      function l2(i6) {
                        if (!a2) {
                          0;
                          var u3 = i6.data;
                          if (u3.found) {
                            for (var d2 = 0; d2 < n2.length; ++d2)
                              n2[d2].terminate();
                            return a2 = true, s4(null, new r2(u3.prime, 16));
                          }
                          o3.bitLength() > e4 && (o3 = c(e4, t5));
                          var l3 = o3.toString(16);
                          i6.target.postMessage({hex: l3, workLoad: h}), o3.dAddOffset(f, 0);
                        }
                      }
                    }
                    l();
                  }(e3, t4, i3, s3);
                return a(e3, t4, i3, s3);
              }(e2, u, s2.options, i2);
            throw new Error("Invalid prime generation algorithm: " + s2.name);
          };
        }
        function a(e2, t3, r3, s2) {
          var o2 = c(e2, t3), a2 = function(e3) {
            return e3 <= 100 ? 27 : e3 <= 150 ? 18 : e3 <= 200 ? 15 : e3 <= 250 ? 12 : e3 <= 300 ? 9 : e3 <= 350 ? 8 : e3 <= 400 ? 7 : e3 <= 500 ? 6 : e3 <= 600 ? 5 : e3 <= 800 ? 4 : e3 <= 1250 ? 3 : 2;
          }(o2.bitLength());
          "millerRabinTests" in r3 && (a2 = r3.millerRabinTests);
          var u = 10;
          "maxBlockTime" in r3 && (u = r3.maxBlockTime), function e3(t4, r4, s3, o3, a3, u2, h) {
            var f = +new Date();
            do {
              if (t4.bitLength() > r4 && (t4 = c(r4, s3)), t4.isProbablePrime(a3))
                return h(null, t4);
              t4.dAddOffset(i[o3++ % 8], 0);
            } while (u2 < 0 || +new Date() - f < u2);
            n.util.setImmediate(function() {
              e3(t4, r4, s3, o3, a3, u2, h);
            });
          }(o2, e2, t3, 0, a2, u, s2);
        }
        function c(e2, t3) {
          var n2 = new r2(e2, t3), i2 = e2 - 1;
          return n2.testBit(i2) || n2.bitwiseTo(r2.ONE.shiftLeft(i2), o, n2), n2.dAddOffset(31 - n2.mod(s).byteValue(), 0), n2;
        }
      }();
    }, function(e, t, r) {
      "use strict";
      const n = r(30), i = r(229);
      e.exports = {import: async function(e2, t2) {
        const r2 = n.names.base64.decode(e2), s = i.create();
        return await s.decrypt(r2, t2);
      }};
    }, function(e, t, r) {
      "use strict";
      const n = r(80), i = r(20), s = r(0), o = r(19), a = r(5);
      r(142), r(230);
      const c = r(8), u = r(454), h = i(r(138)), f = r(144);
      class d {
        constructor(e2) {
          this._key = e2;
        }
        async verify(e2, t2) {
          return u.hashAndVerify(this._key, t2, e2);
        }
        marshal() {
          return u.utils.jwkToPkix(this._key);
        }
        get bytes() {
          return h.PublicKey.encode({Type: h.KeyType.RSA, Data: this.marshal()});
        }
        encrypt(e2) {
          return u.encrypt(this._key, e2);
        }
        equals(e2) {
          return o(this.bytes, e2.bytes);
        }
        async hash() {
          return n.multihashing(this.bytes, "sha2-256");
        }
      }
      class l {
        constructor(e2, t2) {
          this._key = e2, this._publicKey = t2;
        }
        genSecret() {
          return u.getRandomValues(16);
        }
        async sign(e2) {
          return u.hashAndSign(this._key, e2);
        }
        get public() {
          if (!this._publicKey)
            throw s(new Error("public key not provided"), "ERR_PUBKEY_NOT_PROVIDED");
          return new d(this._publicKey);
        }
        decrypt(e2) {
          return u.decrypt(this._key, e2);
        }
        marshal() {
          return u.utils.jwkToPkcs1(this._key);
        }
        get bytes() {
          return h.PrivateKey.encode({Type: h.KeyType.RSA, Data: this.marshal()});
        }
        equals(e2) {
          return o(this.bytes, e2.bytes);
        }
        async hash() {
          return n.multihashing(this.bytes, "sha2-256");
        }
        async id() {
          const e2 = await this.public.hash();
          return a(e2, "base58btc");
        }
        async export(e2, t2 = "pkcs-8") {
          if (t2 === "pkcs-8") {
            const t3 = new c.util.ByteBuffer(this.marshal()), r2 = c.asn1.fromDer(t3), n2 = c.pki.privateKeyFromAsn1(r2), i2 = {algorithm: "aes256", count: 1e4, saltSize: 16, prfAlgorithm: "sha512"};
            return c.pki.encryptRsaPrivateKey(n2, e2, i2);
          }
          if (t2 === "libp2p-key")
            return f.export(this.bytes, e2);
          throw s(new Error(`export format '${t2}' is not supported`), "ERR_INVALID_EXPORT_FORMAT");
        }
      }
      e.exports = {RsaPublicKey: d, RsaPrivateKey: l, unmarshalRsaPublicKey: function(e2) {
        const t2 = u.utils.pkixToJwk(e2);
        return new d(t2);
      }, unmarshalRsaPrivateKey: async function(e2) {
        const t2 = u.utils.pkcs1ToJwk(e2), r2 = await u.unmarshalPrivateKey(t2);
        return new l(r2.privateKey, r2.publicKey);
      }, generateKeyPair: async function(e2) {
        const t2 = await u.generateKey(e2);
        return new l(t2.privateKey, t2.publicKey);
      }, fromJwk: async function(e2) {
        const t2 = await u.unmarshalPrivateKey(e2);
        return new l(t2.privateKey, t2.publicKey);
      }};
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      r(44);
      var i = n.asn1;
      t.privateKeyValidator = {name: "PrivateKeyInfo", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "PrivateKeyInfo.version", tagClass: i.Class.UNIVERSAL, type: i.Type.INTEGER, constructed: false, capture: "privateKeyVersion"}, {name: "PrivateKeyInfo.privateKeyAlgorithm", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "AlgorithmIdentifier.algorithm", tagClass: i.Class.UNIVERSAL, type: i.Type.OID, constructed: false, capture: "privateKeyOid"}]}, {name: "PrivateKeyInfo", tagClass: i.Class.UNIVERSAL, type: i.Type.OCTETSTRING, constructed: false, capture: "privateKey"}]}, t.publicKeyValidator = {name: "SubjectPublicKeyInfo", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, captureAsn1: "subjectPublicKeyInfo", value: [{name: "SubjectPublicKeyInfo.AlgorithmIdentifier", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "AlgorithmIdentifier.algorithm", tagClass: i.Class.UNIVERSAL, type: i.Type.OID, constructed: false, capture: "publicKeyOid"}]}, {tagClass: i.Class.UNIVERSAL, type: i.Type.BITSTRING, constructed: false, composed: true, captureBitStringValue: "ed25519PublicKey"}]};
    }, function(e, t, r) {
      "use strict";
      const n = r(101), i = r(102), s = r(5), o = r(6);
      function a(e2) {
        return Promise.all([n.get().subtle.exportKey("jwk", e2.privateKey), n.get().subtle.exportKey("jwk", e2.publicKey)]);
      }
      t.utils = r(456), t.generateKey = async function(e2) {
        const t2 = await n.get().subtle.generateKey({name: "RSASSA-PKCS1-v1_5", modulusLength: e2, publicExponent: new Uint8Array([1, 0, 1]), hash: {name: "SHA-256"}}, true, ["sign", "verify"]), r2 = await a(t2);
        return {privateKey: r2[0], publicKey: r2[1]};
      }, t.unmarshalPrivateKey = async function(e2) {
        const t2 = [await n.get().subtle.importKey("jwk", e2, {name: "RSASSA-PKCS1-v1_5", hash: {name: "SHA-256"}}, true, ["sign"]), await (r2 = e2, n.get().subtle.importKey("jwk", {kty: r2.kty, n: r2.n, e: r2.e}, {name: "RSASSA-PKCS1-v1_5", hash: {name: "SHA-256"}}, true, ["verify"]))];
        var r2;
        const i2 = await a({privateKey: t2[0], publicKey: t2[1]});
        return {privateKey: i2[0], publicKey: i2[1]};
      }, t.getRandomValues = i, t.hashAndSign = async function(e2, t2) {
        const r2 = await n.get().subtle.importKey("jwk", e2, {name: "RSASSA-PKCS1-v1_5", hash: {name: "SHA-256"}}, false, ["sign"]), i2 = await n.get().subtle.sign({name: "RSASSA-PKCS1-v1_5"}, r2, Uint8Array.from(t2));
        return new Uint8Array(i2, i2.byteOffset, i2.byteLength);
      }, t.hashAndVerify = async function(e2, t2, r2) {
        const i2 = await n.get().subtle.importKey("jwk", e2, {name: "RSASSA-PKCS1-v1_5", hash: {name: "SHA-256"}}, false, ["verify"]);
        return n.get().subtle.verify({name: "RSASSA-PKCS1-v1_5"}, i2, t2, r2);
      };
      const {jwk2pub: c, jwk2priv: u} = r(457);
      function h(e2, t2, r2, n2) {
        const i2 = t2 ? c(e2) : u(e2), a2 = n2(s(Uint8Array.from(r2), "ascii"), i2);
        return o(a2, "ascii");
      }
      t.encrypt = function(e2, t2) {
        return h(e2, true, t2, (e3, t3) => t3.encrypt(e3));
      }, t.decrypt = function(e2, t2) {
        return h(e2, false, t2, (e3, t3) => t3.decrypt(e3));
      };
    }, function(e, t, r) {
      "use strict";
      const n = self.crypto || self.msCrypto, {Buffer: i} = r(3);
      n && n.getRandomValues ? e.exports = function(e2) {
        const t2 = new Uint8Array(e2);
        let r2 = 0;
        if (e2 > 0)
          if (e2 > 65536)
            for (; r2 < e2; )
              r2 + 65536 > e2 ? (n.getRandomValues(t2.subarray(r2, r2 + (e2 - r2))), r2 += e2 - r2) : (n.getRandomValues(t2.subarray(r2, r2 + 65536)), r2 += 65536);
          else
            n.getRandomValues(t2);
        return i.from(t2);
      } : e.exports = function() {
        throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11");
      };
    }, function(e, t, r) {
      "use strict";
      r(44), r(99);
      const n = r(8), {bigIntegerToUintBase64url: i, base64urlToBigInteger: s} = r(143), o = r(6), a = r(5);
      t.pkcs1ToJwk = function(e2) {
        const t2 = n.asn1.fromDer(a(e2, "ascii")), r2 = n.pki.privateKeyFromAsn1(t2);
        return {kty: "RSA", n: i(r2.n), e: i(r2.e), d: i(r2.d), p: i(r2.p), q: i(r2.q), dp: i(r2.dP), dq: i(r2.dQ), qi: i(r2.qInv), alg: "RS256", kid: "2011-04-29"};
      }, t.jwkToPkcs1 = function(e2) {
        const t2 = n.pki.privateKeyToAsn1({n: s(e2.n), e: s(e2.e), d: s(e2.d), p: s(e2.p), q: s(e2.q), dP: s(e2.dp), dQ: s(e2.dq), qInv: s(e2.qi)});
        return o(n.asn1.toDer(t2).getBytes(), "ascii");
      }, t.pkixToJwk = function(e2) {
        const t2 = n.asn1.fromDer(a(e2, "ascii")), r2 = n.pki.publicKeyFromAsn1(t2);
        return {kty: "RSA", n: i(r2.n), e: i(r2.e), alg: "RS256", kid: "2011-04-29"};
      }, t.jwkToPkix = function(e2) {
        const t2 = n.pki.publicKeyToAsn1({n: s(e2.n), e: s(e2.e)});
        return o(n.asn1.toDer(t2).getBytes(), "ascii");
      };
    }, function(e, t, r) {
      "use strict";
      r(99);
      const n = r(8), {base64urlToBigInteger: i} = r(143);
      function s(e2, t2) {
        return t2.map((t3) => i(e2[t3]));
      }
      e.exports = {jwk2pub: function(e2) {
        return n.pki.setRsaPublicKey(...s(e2, ["n", "e"]));
      }, jwk2priv: function(e2) {
        return n.pki.setRsaPrivateKey(...s(e2, ["n", "e", "d", "p", "q", "dp", "dq", "qi"]));
      }};
    }, function(e, t, r) {
      "use strict";
      const n = r(80), i = r(20), s = r(30), o = r(0), a = r(19), c = r(459), u = i(r(138)), h = r(144);
      class f {
        constructor(e2) {
          this._key = l(e2, c.publicKeyLength);
        }
        async verify(e2, t2) {
          return c.hashAndVerify(this._key, t2, e2);
        }
        marshal() {
          return this._key;
        }
        get bytes() {
          return u.PublicKey.encode({Type: u.KeyType.Ed25519, Data: this.marshal()});
        }
        equals(e2) {
          return a(this.bytes, e2.bytes);
        }
        async hash() {
          return n.multihashing(this.bytes, "sha2-256");
        }
      }
      class d {
        constructor(e2, t2) {
          this._key = l(e2, c.privateKeyLength), this._publicKey = l(t2, c.publicKeyLength);
        }
        async sign(e2) {
          return c.hashAndSign(this._key, e2);
        }
        get public() {
          return new f(this._publicKey);
        }
        marshal() {
          return this._key;
        }
        get bytes() {
          return u.PrivateKey.encode({Type: u.KeyType.Ed25519, Data: this.marshal()});
        }
        equals(e2) {
          return a(this.bytes, e2.bytes);
        }
        async hash() {
          return n.multihashing(this.bytes, "sha2-256");
        }
        async id() {
          const e2 = await this.public.hash();
          return s.encode("base58btc", e2).toString().slice(1);
        }
        async export(e2, t2 = "libp2p-key") {
          if (t2 === "libp2p-key")
            return h.export(this.bytes, e2);
          throw o(new Error(`export format '${t2}' is not supported`), "ERR_INVALID_EXPORT_FORMAT");
        }
      }
      function l(e2, t2) {
        if ((e2 = Uint8Array.from(e2 || [])).length !== t2)
          throw o(new Error(`Key must be a Uint8Array of length ${t2}, got ${e2.length}`), "ERR_INVALID_KEY_TYPE");
        return e2;
      }
      e.exports = {Ed25519PublicKey: f, Ed25519PrivateKey: d, unmarshalEd25519PrivateKey: function(e2) {
        if (e2.length > c.privateKeyLength) {
          const t3 = (e2 = l(e2, c.privateKeyLength + c.publicKeyLength)).slice(0, c.privateKeyLength), r3 = e2.slice(c.privateKeyLength, e2.length);
          return new d(t3, r3);
        }
        const t2 = (e2 = l(e2, c.privateKeyLength)).slice(0, c.privateKeyLength), r2 = e2.slice(c.publicKeyLength);
        return new d(t2, r2);
      }, unmarshalEd25519PublicKey: function(e2) {
        return e2 = l(e2, c.publicKeyLength), new f(e2);
      }, generateKeyPair: async function() {
        const {privateKey: e2, publicKey: t2} = await c.generateKey();
        return new d(e2, t2);
      }, generateKeyPairFromSeed: async function(e2) {
        const {privateKey: t2, publicKey: r2} = await c.generateKeyFromSeed(e2);
        return new d(t2, r2);
      }};
    }, function(e, t, r) {
      "use strict";
      r(230);
      const n = r(8);
      t.publicKeyLength = n.pki.ed25519.constants.PUBLIC_KEY_BYTE_LENGTH, t.privateKeyLength = n.pki.ed25519.constants.PRIVATE_KEY_BYTE_LENGTH, t.generateKey = async function() {
        return n.pki.ed25519.generateKeyPair();
      }, t.generateKeyFromSeed = async function(e2) {
        return n.pki.ed25519.generateKeyPair({seed: e2});
      }, t.hashAndSign = async function(e2, t2) {
        return n.pki.ed25519.sign({message: t2, privateKey: e2});
      }, t.hashAndVerify = async function(e2, t2, r2) {
        return n.pki.ed25519.verify({signature: t2, message: r2, publicKey: e2});
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(80), i = r(0), s = r(19), o = r(5), a = r(144);
      e.exports = (e2, t2, c) => {
        c = c || r(461)(t2);
        class u {
          constructor(e3) {
            c.validatePublicKey(e3), this._key = e3;
          }
          verify(e3, t3) {
            return c.hashAndVerify(this._key, t3, e3);
          }
          marshal() {
            return c.compressPublicKey(this._key);
          }
          get bytes() {
            return e2.PublicKey.encode({Type: e2.KeyType.Secp256k1, Data: this.marshal()});
          }
          equals(e3) {
            return s(this.bytes, e3.bytes);
          }
          hash() {
            return n.multihashing(this.bytes, "sha2-256");
          }
        }
        class h {
          constructor(e3, t3) {
            this._key = e3, this._publicKey = t3 || c.computePublicKey(e3), c.validatePrivateKey(this._key), c.validatePublicKey(this._publicKey);
          }
          sign(e3) {
            return c.hashAndSign(this._key, e3);
          }
          get public() {
            return new u(this._publicKey);
          }
          marshal() {
            return this._key;
          }
          get bytes() {
            return e2.PrivateKey.encode({Type: e2.KeyType.Secp256k1, Data: this.marshal()});
          }
          equals(e3) {
            return s(this.bytes, e3.bytes);
          }
          hash() {
            return n.multihashing(this.bytes, "sha2-256");
          }
          async id() {
            const e3 = await this.public.hash();
            return o(e3, "base58btc");
          }
          async export(e3, t3 = "libp2p-key") {
            if (t3 === "libp2p-key")
              return a.export(this.bytes, e3);
            throw i(new Error(`export format '${t3}' is not supported`), "ERR_INVALID_EXPORT_FORMAT");
          }
        }
        return {Secp256k1PublicKey: u, Secp256k1PrivateKey: h, unmarshalSecp256k1PrivateKey: function(e3) {
          return new h(e3);
        }, unmarshalSecp256k1PublicKey: function(e3) {
          return new u(e3);
        }, generateKeyPair: async function() {
          const e3 = await c.generateKey();
          return new h(e3);
        }};
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(462), i = r(80);
      e.exports = (e2) => {
        function t2(e3) {
          if (!n.privateKeyVerify(e3))
            throw new Error("Invalid private key");
        }
        return {generateKey: function() {
          let t3;
          do {
            t3 = e2(32);
          } while (!n.privateKeyVerify(t3));
          return t3;
        }, privateKeyLength: 32, hashAndSign: async function(e3, t3) {
          const r2 = await i.digest(t3, "sha2-256"), s = n.ecdsaSign(r2, e3);
          return n.signatureExport(s.signature);
        }, hashAndVerify: async function(e3, t3, r2) {
          const s = await i.digest(r2, "sha2-256");
          return t3 = n.signatureImport(t3), n.ecdsaVerify(t3, s, e3);
        }, compressPublicKey: function(e3) {
          if (!n.publicKeyVerify(e3))
            throw new Error("Invalid public key");
          return n.publicKeyConvert(e3, true);
        }, decompressPublicKey: function(e3) {
          return n.publicKeyConvert(e3, false);
        }, validatePrivateKey: t2, validatePublicKey: function(e3) {
          if (!n.publicKeyVerify(e3))
            throw new Error("Invalid public key");
        }, computePublicKey: function(e3) {
          return t2(e3), n.publicKeyCreate(e3);
        }};
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = r(463)(r(464));
    }, function(e, t, r) {
      "use strict";
      const n = "Impossible case. Please create issue.", i = "The tweak was out of range or the resulted private key is invalid", s = "The tweak was out of range or equal to zero", o = "Unknow error on context randomization", a = "Private Key is invalid", c = "Public Key could not be parsed", u = "Public Key serialization error", h = "The sum of the public keys is not valid", f = "Signature could not be parsed", d = "The nonce generation function failed, or the private key was invalid", l = "Public key could not be recover", p = "Scalar was invalid (zero or overflow)";
      function y(e2, t2) {
        if (!e2)
          throw new Error(t2);
      }
      function g(e2, t2, r2) {
        if (y(t2 instanceof Uint8Array, `Expected ${e2} to be an Uint8Array`), r2 !== void 0)
          if (Array.isArray(r2)) {
            const n2 = `Expected ${e2} to be an Uint8Array with length [${r2.join(", ")}]`;
            y(r2.includes(t2.length), n2);
          } else {
            const n2 = `Expected ${e2} to be an Uint8Array with length ${r2}`;
            y(t2.length === r2, n2);
          }
      }
      function b(e2) {
        y(v(e2) === "Boolean", "Expected compressed to be a Boolean");
      }
      function m(e2 = (e3) => new Uint8Array(e3), t2) {
        return typeof e2 == "function" && (e2 = e2(t2)), g("output", e2, t2), e2;
      }
      function v(e2) {
        return Object.prototype.toString.call(e2).slice(8, -1);
      }
      e.exports = (e2) => ({contextRandomize(t2) {
        switch (y(t2 === null || t2 instanceof Uint8Array, "Expected seed to be an Uint8Array or null"), t2 !== null && g("seed", t2, 32), e2.contextRandomize(t2)) {
          case 1:
            throw new Error(o);
        }
      }, privateKeyVerify: (t2) => (g("private key", t2, 32), e2.privateKeyVerify(t2) === 0), privateKeyNegate(t2) {
        switch (g("private key", t2, 32), e2.privateKeyNegate(t2)) {
          case 0:
            return t2;
          case 1:
            throw new Error(n);
        }
      }, privateKeyTweakAdd(t2, r2) {
        switch (g("private key", t2, 32), g("tweak", r2, 32), e2.privateKeyTweakAdd(t2, r2)) {
          case 0:
            return t2;
          case 1:
            throw new Error(i);
        }
      }, privateKeyTweakMul(t2, r2) {
        switch (g("private key", t2, 32), g("tweak", r2, 32), e2.privateKeyTweakMul(t2, r2)) {
          case 0:
            return t2;
          case 1:
            throw new Error(s);
        }
      }, publicKeyVerify: (t2) => (g("public key", t2, [33, 65]), e2.publicKeyVerify(t2) === 0), publicKeyCreate(t2, r2 = true, n2) {
        switch (g("private key", t2, 32), b(r2), n2 = m(n2, r2 ? 33 : 65), e2.publicKeyCreate(n2, t2)) {
          case 0:
            return n2;
          case 1:
            throw new Error(a);
          case 2:
            throw new Error(u);
        }
      }, publicKeyConvert(t2, r2 = true, n2) {
        switch (g("public key", t2, [33, 65]), b(r2), n2 = m(n2, r2 ? 33 : 65), e2.publicKeyConvert(n2, t2)) {
          case 0:
            return n2;
          case 1:
            throw new Error(c);
          case 2:
            throw new Error(u);
        }
      }, publicKeyNegate(t2, r2 = true, i2) {
        switch (g("public key", t2, [33, 65]), b(r2), i2 = m(i2, r2 ? 33 : 65), e2.publicKeyNegate(i2, t2)) {
          case 0:
            return i2;
          case 1:
            throw new Error(c);
          case 2:
            throw new Error(n);
          case 3:
            throw new Error(u);
        }
      }, publicKeyCombine(t2, r2 = true, n2) {
        y(Array.isArray(t2), "Expected public keys to be an Array"), y(t2.length > 0, "Expected public keys array will have more than zero items");
        for (const e3 of t2)
          g("public key", e3, [33, 65]);
        switch (b(r2), n2 = m(n2, r2 ? 33 : 65), e2.publicKeyCombine(n2, t2)) {
          case 0:
            return n2;
          case 1:
            throw new Error(c);
          case 2:
            throw new Error(h);
          case 3:
            throw new Error(u);
        }
      }, publicKeyTweakAdd(t2, r2, n2 = true, s2) {
        switch (g("public key", t2, [33, 65]), g("tweak", r2, 32), b(n2), s2 = m(s2, n2 ? 33 : 65), e2.publicKeyTweakAdd(s2, t2, r2)) {
          case 0:
            return s2;
          case 1:
            throw new Error(c);
          case 2:
            throw new Error(i);
        }
      }, publicKeyTweakMul(t2, r2, n2 = true, i2) {
        switch (g("public key", t2, [33, 65]), g("tweak", r2, 32), b(n2), i2 = m(i2, n2 ? 33 : 65), e2.publicKeyTweakMul(i2, t2, r2)) {
          case 0:
            return i2;
          case 1:
            throw new Error(c);
          case 2:
            throw new Error(s);
        }
      }, signatureNormalize(t2) {
        switch (g("signature", t2, 64), e2.signatureNormalize(t2)) {
          case 0:
            return t2;
          case 1:
            throw new Error(f);
        }
      }, signatureExport(t2, r2) {
        g("signature", t2, 64);
        const i2 = {output: r2 = m(r2, 72), outputlen: 72};
        switch (e2.signatureExport(i2, t2)) {
          case 0:
            return r2.slice(0, i2.outputlen);
          case 1:
            throw new Error(f);
          case 2:
            throw new Error(n);
        }
      }, signatureImport(t2, r2) {
        switch (g("signature", t2), r2 = m(r2, 64), e2.signatureImport(r2, t2)) {
          case 0:
            return r2;
          case 1:
            throw new Error(f);
          case 2:
            throw new Error(n);
        }
      }, ecdsaSign(t2, r2, i2 = {}, s2) {
        g("message", t2, 32), g("private key", r2, 32), y(v(i2) === "Object", "Expected options to be an Object"), i2.data !== void 0 && g("options.data", i2.data), i2.noncefn !== void 0 && y(v(i2.noncefn) === "Function", "Expected options.noncefn to be a Function");
        const o2 = {signature: s2 = m(s2, 64), recid: null};
        switch (e2.ecdsaSign(o2, t2, r2, i2.data, i2.noncefn)) {
          case 0:
            return o2;
          case 1:
            throw new Error(d);
          case 2:
            throw new Error(n);
        }
      }, ecdsaVerify(t2, r2, n2) {
        switch (g("signature", t2, 64), g("message", r2, 32), g("public key", n2, [33, 65]), e2.ecdsaVerify(t2, r2, n2)) {
          case 0:
            return true;
          case 3:
            return false;
          case 1:
            throw new Error(f);
          case 2:
            throw new Error(c);
        }
      }, ecdsaRecover(t2, r2, i2, s2 = true, o2) {
        switch (g("signature", t2, 64), y(v(r2) === "Number" && r2 >= 0 && r2 <= 3, "Expected recovery id to be a Number within interval [0, 3]"), g("message", i2, 32), b(s2), o2 = m(o2, s2 ? 33 : 65), e2.ecdsaRecover(o2, t2, r2, i2)) {
          case 0:
            return o2;
          case 1:
            throw new Error(f);
          case 2:
            throw new Error(l);
          case 3:
            throw new Error(n);
        }
      }, ecdh(t2, r2, n2 = {}, i2) {
        switch (g("public key", t2, [33, 65]), g("private key", r2, 32), y(v(n2) === "Object", "Expected options to be an Object"), n2.data !== void 0 && g("options.data", n2.data), n2.hashfn !== void 0 ? (y(v(n2.hashfn) === "Function", "Expected options.hashfn to be a Function"), n2.xbuf !== void 0 && g("options.xbuf", n2.xbuf, 32), n2.ybuf !== void 0 && g("options.ybuf", n2.ybuf, 32), g("output", i2)) : i2 = m(i2, 32), e2.ecdh(i2, t2, r2, n2.data, n2.hashfn, n2.xbuf, n2.ybuf)) {
          case 0:
            return i2;
          case 1:
            throw new Error(c);
          case 2:
            throw new Error(p);
        }
      }});
    }, function(e, t, r) {
      "use strict";
      const n = new (0, r(465).ec)("secp256k1"), i = n.curve, s = i.n.constructor;
      function o(e2) {
        const t2 = e2[0];
        switch (t2) {
          case 2:
          case 3:
            return e2.length !== 33 ? null : function(e3, t3) {
              let r2 = new s(t3);
              if (r2.cmp(i.p) >= 0)
                return null;
              r2 = r2.toRed(i.red);
              let o2 = r2.redSqr().redIMul(r2).redIAdd(i.b).redSqrt();
              return e3 === 3 !== o2.isOdd() && (o2 = o2.redNeg()), n.keyPair({pub: {x: r2, y: o2}});
            }(t2, e2.subarray(1, 33));
          case 4:
          case 6:
          case 7:
            return e2.length !== 65 ? null : function(e3, t3, r2) {
              let o2 = new s(t3), a2 = new s(r2);
              if (o2.cmp(i.p) >= 0 || a2.cmp(i.p) >= 0)
                return null;
              if (o2 = o2.toRed(i.red), a2 = a2.toRed(i.red), (e3 === 6 || e3 === 7) && a2.isOdd() !== (e3 === 7))
                return null;
              const c = o2.redSqr().redIMul(o2);
              return a2.redSqr().redISub(c.redIAdd(i.b)).isZero() ? n.keyPair({pub: {x: o2, y: a2}}) : null;
            }(t2, e2.subarray(1, 33), e2.subarray(33, 65));
          default:
            return null;
        }
      }
      function a(e2, t2) {
        const r2 = t2.encode(null, e2.length === 33);
        for (let n2 = 0; n2 < e2.length; ++n2)
          e2[n2] = r2[n2];
      }
      e.exports = {contextRandomize: () => 0, privateKeyVerify(e2) {
        const t2 = new s(e2);
        return t2.cmp(i.n) < 0 && !t2.isZero() ? 0 : 1;
      }, privateKeyNegate(e2) {
        const t2 = new s(e2), r2 = i.n.sub(t2).umod(i.n).toArrayLike(Uint8Array, "be", 32);
        return e2.set(r2), 0;
      }, privateKeyTweakAdd(e2, t2) {
        const r2 = new s(t2);
        if (r2.cmp(i.n) >= 0)
          return 1;
        if (r2.iadd(new s(e2)), r2.cmp(i.n) >= 0 && r2.isub(i.n), r2.isZero())
          return 1;
        const n2 = r2.toArrayLike(Uint8Array, "be", 32);
        return e2.set(n2), 0;
      }, privateKeyTweakMul(e2, t2) {
        let r2 = new s(t2);
        if (r2.cmp(i.n) >= 0 || r2.isZero())
          return 1;
        r2.imul(new s(e2)), r2.cmp(i.n) >= 0 && (r2 = r2.umod(i.n));
        const n2 = r2.toArrayLike(Uint8Array, "be", 32);
        return e2.set(n2), 0;
      }, publicKeyVerify: (e2) => o(e2) === null ? 1 : 0, publicKeyCreate(e2, t2) {
        const r2 = new s(t2);
        if (r2.cmp(i.n) >= 0 || r2.isZero())
          return 1;
        return a(e2, n.keyFromPrivate(t2).getPublic()), 0;
      }, publicKeyConvert(e2, t2) {
        const r2 = o(t2);
        if (r2 === null)
          return 1;
        return a(e2, r2.getPublic()), 0;
      }, publicKeyNegate(e2, t2) {
        const r2 = o(t2);
        if (r2 === null)
          return 1;
        const n2 = r2.getPublic();
        return n2.y = n2.y.redNeg(), a(e2, n2), 0;
      }, publicKeyCombine(e2, t2) {
        const r2 = new Array(t2.length);
        for (let i2 = 0; i2 < t2.length; ++i2)
          if (r2[i2] = o(t2[i2]), r2[i2] === null)
            return 1;
        let n2 = r2[0].getPublic();
        for (let i2 = 1; i2 < r2.length; ++i2)
          n2 = n2.add(r2[i2].pub);
        return n2.isInfinity() ? 2 : (a(e2, n2), 0);
      }, publicKeyTweakAdd(e2, t2, r2) {
        const n2 = o(t2);
        if (n2 === null)
          return 1;
        if ((r2 = new s(r2)).cmp(i.n) >= 0)
          return 2;
        const c = n2.getPublic().add(i.g.mul(r2));
        return c.isInfinity() ? 2 : (a(e2, c), 0);
      }, publicKeyTweakMul(e2, t2, r2) {
        const n2 = o(t2);
        if (n2 === null)
          return 1;
        if ((r2 = new s(r2)).cmp(i.n) >= 0 || r2.isZero())
          return 2;
        return a(e2, n2.getPublic().mul(r2)), 0;
      }, signatureNormalize(e2) {
        const t2 = new s(e2.subarray(0, 32)), r2 = new s(e2.subarray(32, 64));
        return t2.cmp(i.n) >= 0 || r2.cmp(i.n) >= 0 ? 1 : (r2.cmp(n.nh) === 1 && e2.set(i.n.sub(r2).toArrayLike(Uint8Array, "be", 32), 32), 0);
      }, signatureExport(e2, t2) {
        const r2 = t2.subarray(0, 32), n2 = t2.subarray(32, 64);
        if (new s(r2).cmp(i.n) >= 0)
          return 1;
        if (new s(n2).cmp(i.n) >= 0)
          return 1;
        const {output: o2} = e2;
        let a2 = o2.subarray(4, 37);
        a2[0] = 0, a2.set(r2, 1);
        let c = 33, u = 0;
        for (; c > 1 && a2[u] === 0 && !(128 & a2[u + 1]); --c, ++u)
          ;
        if (a2 = a2.subarray(u), 128 & a2[0])
          return 1;
        if (c > 1 && a2[0] === 0 && !(128 & a2[1]))
          return 1;
        let h = o2.subarray(39, 72);
        h[0] = 0, h.set(n2, 1);
        let f = 33, d = 0;
        for (; f > 1 && h[d] === 0 && !(128 & h[d + 1]); --f, ++d)
          ;
        return h = h.subarray(d), 128 & h[0] || f > 1 && h[0] === 0 && !(128 & h[1]) ? 1 : (e2.outputlen = 6 + c + f, o2[0] = 48, o2[1] = e2.outputlen - 2, o2[2] = 2, o2[3] = a2.length, o2.set(a2, 4), o2[4 + c] = 2, o2[5 + c] = h.length, o2.set(h, 6 + c), 0);
      }, signatureImport(e2, t2) {
        if (t2.length < 8)
          return 1;
        if (t2.length > 72)
          return 1;
        if (t2[0] !== 48)
          return 1;
        if (t2[1] !== t2.length - 2)
          return 1;
        if (t2[2] !== 2)
          return 1;
        const r2 = t2[3];
        if (r2 === 0)
          return 1;
        if (5 + r2 >= t2.length)
          return 1;
        if (t2[4 + r2] !== 2)
          return 1;
        const n2 = t2[5 + r2];
        if (n2 === 0)
          return 1;
        if (6 + r2 + n2 !== t2.length)
          return 1;
        if (128 & t2[4])
          return 1;
        if (r2 > 1 && t2[4] === 0 && !(128 & t2[5]))
          return 1;
        if (128 & t2[r2 + 6])
          return 1;
        if (n2 > 1 && t2[r2 + 6] === 0 && !(128 & t2[r2 + 7]))
          return 1;
        let o2 = t2.subarray(4, 4 + r2);
        if (o2.length === 33 && o2[0] === 0 && (o2 = o2.subarray(1)), o2.length > 32)
          return 1;
        let a2 = t2.subarray(6 + r2);
        if (a2.length === 33 && a2[0] === 0 && (a2 = a2.slice(1)), a2.length > 32)
          throw new Error("S length is too long");
        let c = new s(o2);
        c.cmp(i.n) >= 0 && (c = new s(0));
        let u = new s(t2.subarray(6 + r2));
        return u.cmp(i.n) >= 0 && (u = new s(0)), e2.set(c.toArrayLike(Uint8Array, "be", 32), 0), e2.set(u.toArrayLike(Uint8Array, "be", 32), 32), 0;
      }, ecdsaSign(e2, t2, r2, o2, a2) {
        if (a2) {
          const e3 = a2;
          a2 = (n2) => {
            const i2 = e3(t2, r2, null, o2, n2);
            if (!(i2 instanceof Uint8Array && i2.length === 32))
              throw new Error("This is the way");
            return new s(i2);
          };
        }
        const c = new s(r2);
        if (c.cmp(i.n) >= 0 || c.isZero())
          return 1;
        let u;
        try {
          u = n.sign(t2, r2, {canonical: true, k: a2, pers: o2});
        } catch (h) {
          return 1;
        }
        return e2.signature.set(u.r.toArrayLike(Uint8Array, "be", 32), 0), e2.signature.set(u.s.toArrayLike(Uint8Array, "be", 32), 32), e2.recid = u.recoveryParam, 0;
      }, ecdsaVerify(e2, t2, r2) {
        const a2 = {r: e2.subarray(0, 32), s: e2.subarray(32, 64)}, c = new s(a2.r), u = new s(a2.s);
        if (c.cmp(i.n) >= 0 || u.cmp(i.n) >= 0)
          return 1;
        if (u.cmp(n.nh) === 1 || c.isZero() || u.isZero())
          return 3;
        const h = o(r2);
        if (h === null)
          return 2;
        const f = h.getPublic();
        return n.verify(t2, a2, f) ? 0 : 3;
      }, ecdsaRecover(e2, t2, r2, o2) {
        const c = {r: t2.slice(0, 32), s: t2.slice(32, 64)}, u = new s(c.r), h = new s(c.s);
        if (u.cmp(i.n) >= 0 || h.cmp(i.n) >= 0)
          return 1;
        if (u.isZero() || h.isZero())
          return 2;
        let f;
        try {
          f = n.recoverPubKey(o2, c, r2);
        } catch (d) {
          return 2;
        }
        return a(e2, f), 0;
      }, ecdh(e2, t2, r2, a2, c, u, h) {
        const f = o(t2);
        if (f === null)
          return 1;
        const d = new s(r2);
        if (d.cmp(i.n) >= 0 || d.isZero())
          return 2;
        const l = f.getPublic().mul(d);
        if (c === void 0) {
          const t3 = l.encode(null, true), r3 = n.hash().update(t3).digest();
          for (let n2 = 0; n2 < 32; ++n2)
            e2[n2] = r3[n2];
        } else {
          u || (u = new Uint8Array(32));
          const t3 = l.getX().toArray("be", 32);
          for (let e3 = 0; e3 < 32; ++e3)
            u[e3] = t3[e3];
          h || (h = new Uint8Array(32));
          const r3 = l.getY().toArray("be", 32);
          for (let e3 = 0; e3 < 32; ++e3)
            h[e3] = r3[e3];
          const n2 = c(u, h, a2);
          if (!(n2 instanceof Uint8Array && n2.length === e2.length))
            return 2;
          e2.set(n2);
        }
        return 0;
      }};
    }, function(e, t, r) {
      "use strict";
      var n = t;
      n.version = r(466).version, n.utils = r(32), n.rand = r(232), n.curve = r(233), n.curves = r(145), n.ec = r(479), n.eddsa = r(483);
    }, function(e) {
      e.exports = JSON.parse('{"_from":"elliptic@^6.5.3","_id":"elliptic@6.5.3","_inBundle":false,"_integrity":"sha512-IMqzv5wNQf+E6aHeIqATs0tOLeOTwj1QKbRcS3jBbYkl5oLAserA8yJTT7/VyHUYG91PRmPyeQDObKLPpeS4dw==","_location":"/elliptic","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"elliptic@^6.5.3","name":"elliptic","escapedName":"elliptic","rawSpec":"^6.5.3","saveSpec":null,"fetchSpec":"^6.5.3"},"_requiredBy":["/browserify-sign","/create-ecdh","/secp256k1"],"_resolved":"https://registry.npmjs.org/elliptic/-/elliptic-6.5.3.tgz","_shasum":"cb59eb2efdaf73a0bd78ccd7015a62ad6e0f93d6","_spec":"elliptic@^6.5.3","_where":"/Users/alex/Documents/Workspaces/ipfs/js-ipfs-release/node_modules/browserify-sign","author":{"name":"Fedor Indutny","email":"fedor@indutny.com"},"bugs":{"url":"https://github.com/indutny/elliptic/issues"},"bundleDependencies":false,"dependencies":{"bn.js":"^4.4.0","brorand":"^1.0.1","hash.js":"^1.0.0","hmac-drbg":"^1.0.0","inherits":"^2.0.1","minimalistic-assert":"^1.0.0","minimalistic-crypto-utils":"^1.0.0"},"deprecated":false,"description":"EC cryptography","devDependencies":{"brfs":"^1.4.3","coveralls":"^3.0.8","grunt":"^1.0.4","grunt-browserify":"^5.0.0","grunt-cli":"^1.2.0","grunt-contrib-connect":"^1.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^1.0.1","grunt-mocha-istanbul":"^3.0.1","grunt-saucelabs":"^9.0.1","istanbul":"^0.4.2","jscs":"^3.0.7","jshint":"^2.10.3","mocha":"^6.2.2"},"files":["lib"],"homepage":"https://github.com/indutny/elliptic","keywords":["EC","Elliptic","curve","Cryptography"],"license":"MIT","main":"lib/elliptic.js","name":"elliptic","repository":{"type":"git","url":"git+ssh://git@github.com/indutny/elliptic.git"},"scripts":{"jscs":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","jshint":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","lint":"npm run jscs && npm run jshint","test":"npm run lint && npm run unit","unit":"istanbul test _mocha --reporter=spec test/index.js","version":"grunt dist && git add dist/"},"version":"6.5.3"}');
    }, function(e, t) {
    }, function(e, t) {
    }, function(e, t, r) {
      "use strict";
      var n = r(32), i = r(38), s = r(18), o = r(104), a = n.assert;
      function c(e2) {
        o.call(this, "short", e2), this.a = new i(e2.a, 16).toRed(this.red), this.b = new i(e2.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = this.a.fromRed().cmpn(0) === 0, this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0, this.endo = this._getEndomorphism(e2), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
      }
      function u(e2, t2, r2, n2) {
        o.BasePoint.call(this, e2, "affine"), t2 === null && r2 === null ? (this.x = null, this.y = null, this.inf = true) : (this.x = new i(t2, 16), this.y = new i(r2, 16), n2 && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = false);
      }
      function h(e2, t2, r2, n2) {
        o.BasePoint.call(this, e2, "jacobian"), t2 === null && r2 === null && n2 === null ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new i(0)) : (this.x = new i(t2, 16), this.y = new i(r2, 16), this.z = new i(n2, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
      }
      s(c, o), e.exports = c, c.prototype._getEndomorphism = function(e2) {
        if (this.zeroA && this.g && this.n && this.p.modn(3) === 1) {
          var t2, r2;
          if (e2.beta)
            t2 = new i(e2.beta, 16).toRed(this.red);
          else {
            var n2 = this._getEndoRoots(this.p);
            t2 = (t2 = n2[0].cmp(n2[1]) < 0 ? n2[0] : n2[1]).toRed(this.red);
          }
          if (e2.lambda)
            r2 = new i(e2.lambda, 16);
          else {
            var s2 = this._getEndoRoots(this.n);
            this.g.mul(s2[0]).x.cmp(this.g.x.redMul(t2)) === 0 ? r2 = s2[0] : (r2 = s2[1], a(this.g.mul(r2).x.cmp(this.g.x.redMul(t2)) === 0));
          }
          return {beta: t2, lambda: r2, basis: e2.basis ? e2.basis.map(function(e3) {
            return {a: new i(e3.a, 16), b: new i(e3.b, 16)};
          }) : this._getEndoBasis(r2)};
        }
      }, c.prototype._getEndoRoots = function(e2) {
        var t2 = e2 === this.p ? this.red : i.mont(e2), r2 = new i(2).toRed(t2).redInvm(), n2 = r2.redNeg(), s2 = new i(3).toRed(t2).redNeg().redSqrt().redMul(r2);
        return [n2.redAdd(s2).fromRed(), n2.redSub(s2).fromRed()];
      }, c.prototype._getEndoBasis = function(e2) {
        for (var t2, r2, n2, s2, o2, a2, c2, u2, h2, f = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), d = e2, l = this.n.clone(), p = new i(1), y = new i(0), g = new i(0), b = new i(1), m = 0; d.cmpn(0) !== 0; ) {
          var v = l.div(d);
          u2 = l.sub(v.mul(d)), h2 = g.sub(v.mul(p));
          var w = b.sub(v.mul(y));
          if (!n2 && u2.cmp(f) < 0)
            t2 = c2.neg(), r2 = p, n2 = u2.neg(), s2 = h2;
          else if (n2 && ++m == 2)
            break;
          c2 = u2, l = d, d = u2, g = p, p = h2, b = y, y = w;
        }
        o2 = u2.neg(), a2 = h2;
        var _ = n2.sqr().add(s2.sqr());
        return o2.sqr().add(a2.sqr()).cmp(_) >= 0 && (o2 = t2, a2 = r2), n2.negative && (n2 = n2.neg(), s2 = s2.neg()), o2.negative && (o2 = o2.neg(), a2 = a2.neg()), [{a: n2, b: s2}, {a: o2, b: a2}];
      }, c.prototype._endoSplit = function(e2) {
        var t2 = this.endo.basis, r2 = t2[0], n2 = t2[1], i2 = n2.b.mul(e2).divRound(this.n), s2 = r2.b.neg().mul(e2).divRound(this.n), o2 = i2.mul(r2.a), a2 = s2.mul(n2.a), c2 = i2.mul(r2.b), u2 = s2.mul(n2.b);
        return {k1: e2.sub(o2).sub(a2), k2: c2.add(u2).neg()};
      }, c.prototype.pointFromX = function(e2, t2) {
        (e2 = new i(e2, 16)).red || (e2 = e2.toRed(this.red));
        var r2 = e2.redSqr().redMul(e2).redIAdd(e2.redMul(this.a)).redIAdd(this.b), n2 = r2.redSqrt();
        if (n2.redSqr().redSub(r2).cmp(this.zero) !== 0)
          throw new Error("invalid point");
        var s2 = n2.fromRed().isOdd();
        return (t2 && !s2 || !t2 && s2) && (n2 = n2.redNeg()), this.point(e2, n2);
      }, c.prototype.validate = function(e2) {
        if (e2.inf)
          return true;
        var t2 = e2.x, r2 = e2.y, n2 = this.a.redMul(t2), i2 = t2.redSqr().redMul(t2).redIAdd(n2).redIAdd(this.b);
        return r2.redSqr().redISub(i2).cmpn(0) === 0;
      }, c.prototype._endoWnafMulAdd = function(e2, t2, r2) {
        for (var n2 = this._endoWnafT1, i2 = this._endoWnafT2, s2 = 0; s2 < e2.length; s2++) {
          var o2 = this._endoSplit(t2[s2]), a2 = e2[s2], c2 = a2._getBeta();
          o2.k1.negative && (o2.k1.ineg(), a2 = a2.neg(true)), o2.k2.negative && (o2.k2.ineg(), c2 = c2.neg(true)), n2[2 * s2] = a2, n2[2 * s2 + 1] = c2, i2[2 * s2] = o2.k1, i2[2 * s2 + 1] = o2.k2;
        }
        for (var u2 = this._wnafMulAdd(1, n2, i2, 2 * s2, r2), h2 = 0; h2 < 2 * s2; h2++)
          n2[h2] = null, i2[h2] = null;
        return u2;
      }, s(u, o.BasePoint), c.prototype.point = function(e2, t2, r2) {
        return new u(this, e2, t2, r2);
      }, c.prototype.pointFromJSON = function(e2, t2) {
        return u.fromJSON(this, e2, t2);
      }, u.prototype._getBeta = function() {
        if (this.curve.endo) {
          var e2 = this.precomputed;
          if (e2 && e2.beta)
            return e2.beta;
          var t2 = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
          if (e2) {
            var r2 = this.curve, n2 = function(e3) {
              return r2.point(e3.x.redMul(r2.endo.beta), e3.y);
            };
            e2.beta = t2, t2.precomputed = {beta: null, naf: e2.naf && {wnd: e2.naf.wnd, points: e2.naf.points.map(n2)}, doubles: e2.doubles && {step: e2.doubles.step, points: e2.doubles.points.map(n2)}};
          }
          return t2;
        }
      }, u.prototype.toJSON = function() {
        return this.precomputed ? [this.x, this.y, this.precomputed && {doubles: this.precomputed.doubles && {step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1)}, naf: this.precomputed.naf && {wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1)}}] : [this.x, this.y];
      }, u.fromJSON = function(e2, t2, r2) {
        typeof t2 == "string" && (t2 = JSON.parse(t2));
        var n2 = e2.point(t2[0], t2[1], r2);
        if (!t2[2])
          return n2;
        function i2(t3) {
          return e2.point(t3[0], t3[1], r2);
        }
        var s2 = t2[2];
        return n2.precomputed = {beta: null, doubles: s2.doubles && {step: s2.doubles.step, points: [n2].concat(s2.doubles.points.map(i2))}, naf: s2.naf && {wnd: s2.naf.wnd, points: [n2].concat(s2.naf.points.map(i2))}}, n2;
      }, u.prototype.inspect = function() {
        return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
      }, u.prototype.isInfinity = function() {
        return this.inf;
      }, u.prototype.add = function(e2) {
        if (this.inf)
          return e2;
        if (e2.inf)
          return this;
        if (this.eq(e2))
          return this.dbl();
        if (this.neg().eq(e2))
          return this.curve.point(null, null);
        if (this.x.cmp(e2.x) === 0)
          return this.curve.point(null, null);
        var t2 = this.y.redSub(e2.y);
        t2.cmpn(0) !== 0 && (t2 = t2.redMul(this.x.redSub(e2.x).redInvm()));
        var r2 = t2.redSqr().redISub(this.x).redISub(e2.x), n2 = t2.redMul(this.x.redSub(r2)).redISub(this.y);
        return this.curve.point(r2, n2);
      }, u.prototype.dbl = function() {
        if (this.inf)
          return this;
        var e2 = this.y.redAdd(this.y);
        if (e2.cmpn(0) === 0)
          return this.curve.point(null, null);
        var t2 = this.curve.a, r2 = this.x.redSqr(), n2 = e2.redInvm(), i2 = r2.redAdd(r2).redIAdd(r2).redIAdd(t2).redMul(n2), s2 = i2.redSqr().redISub(this.x.redAdd(this.x)), o2 = i2.redMul(this.x.redSub(s2)).redISub(this.y);
        return this.curve.point(s2, o2);
      }, u.prototype.getX = function() {
        return this.x.fromRed();
      }, u.prototype.getY = function() {
        return this.y.fromRed();
      }, u.prototype.mul = function(e2) {
        return e2 = new i(e2, 16), this.isInfinity() ? this : this._hasDoubles(e2) ? this.curve._fixedNafMul(this, e2) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [e2]) : this.curve._wnafMul(this, e2);
      }, u.prototype.mulAdd = function(e2, t2, r2) {
        var n2 = [this, t2], i2 = [e2, r2];
        return this.curve.endo ? this.curve._endoWnafMulAdd(n2, i2) : this.curve._wnafMulAdd(1, n2, i2, 2);
      }, u.prototype.jmulAdd = function(e2, t2, r2) {
        var n2 = [this, t2], i2 = [e2, r2];
        return this.curve.endo ? this.curve._endoWnafMulAdd(n2, i2, true) : this.curve._wnafMulAdd(1, n2, i2, 2, true);
      }, u.prototype.eq = function(e2) {
        return this === e2 || this.inf === e2.inf && (this.inf || this.x.cmp(e2.x) === 0 && this.y.cmp(e2.y) === 0);
      }, u.prototype.neg = function(e2) {
        if (this.inf)
          return this;
        var t2 = this.curve.point(this.x, this.y.redNeg());
        if (e2 && this.precomputed) {
          var r2 = this.precomputed, n2 = function(e3) {
            return e3.neg();
          };
          t2.precomputed = {naf: r2.naf && {wnd: r2.naf.wnd, points: r2.naf.points.map(n2)}, doubles: r2.doubles && {step: r2.doubles.step, points: r2.doubles.points.map(n2)}};
        }
        return t2;
      }, u.prototype.toJ = function() {
        return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
      }, s(h, o.BasePoint), c.prototype.jpoint = function(e2, t2, r2) {
        return new h(this, e2, t2, r2);
      }, h.prototype.toP = function() {
        if (this.isInfinity())
          return this.curve.point(null, null);
        var e2 = this.z.redInvm(), t2 = e2.redSqr(), r2 = this.x.redMul(t2), n2 = this.y.redMul(t2).redMul(e2);
        return this.curve.point(r2, n2);
      }, h.prototype.neg = function() {
        return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
      }, h.prototype.add = function(e2) {
        if (this.isInfinity())
          return e2;
        if (e2.isInfinity())
          return this;
        var t2 = e2.z.redSqr(), r2 = this.z.redSqr(), n2 = this.x.redMul(t2), i2 = e2.x.redMul(r2), s2 = this.y.redMul(t2.redMul(e2.z)), o2 = e2.y.redMul(r2.redMul(this.z)), a2 = n2.redSub(i2), c2 = s2.redSub(o2);
        if (a2.cmpn(0) === 0)
          return c2.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
        var u2 = a2.redSqr(), h2 = u2.redMul(a2), f = n2.redMul(u2), d = c2.redSqr().redIAdd(h2).redISub(f).redISub(f), l = c2.redMul(f.redISub(d)).redISub(s2.redMul(h2)), p = this.z.redMul(e2.z).redMul(a2);
        return this.curve.jpoint(d, l, p);
      }, h.prototype.mixedAdd = function(e2) {
        if (this.isInfinity())
          return e2.toJ();
        if (e2.isInfinity())
          return this;
        var t2 = this.z.redSqr(), r2 = this.x, n2 = e2.x.redMul(t2), i2 = this.y, s2 = e2.y.redMul(t2).redMul(this.z), o2 = r2.redSub(n2), a2 = i2.redSub(s2);
        if (o2.cmpn(0) === 0)
          return a2.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
        var c2 = o2.redSqr(), u2 = c2.redMul(o2), h2 = r2.redMul(c2), f = a2.redSqr().redIAdd(u2).redISub(h2).redISub(h2), d = a2.redMul(h2.redISub(f)).redISub(i2.redMul(u2)), l = this.z.redMul(o2);
        return this.curve.jpoint(f, d, l);
      }, h.prototype.dblp = function(e2) {
        if (e2 === 0)
          return this;
        if (this.isInfinity())
          return this;
        if (!e2)
          return this.dbl();
        if (this.curve.zeroA || this.curve.threeA) {
          for (var t2 = this, r2 = 0; r2 < e2; r2++)
            t2 = t2.dbl();
          return t2;
        }
        var n2 = this.curve.a, i2 = this.curve.tinv, s2 = this.x, o2 = this.y, a2 = this.z, c2 = a2.redSqr().redSqr(), u2 = o2.redAdd(o2);
        for (r2 = 0; r2 < e2; r2++) {
          var h2 = s2.redSqr(), f = u2.redSqr(), d = f.redSqr(), l = h2.redAdd(h2).redIAdd(h2).redIAdd(n2.redMul(c2)), p = s2.redMul(f), y = l.redSqr().redISub(p.redAdd(p)), g = p.redISub(y), b = l.redMul(g);
          b = b.redIAdd(b).redISub(d);
          var m = u2.redMul(a2);
          r2 + 1 < e2 && (c2 = c2.redMul(d)), s2 = y, a2 = m, u2 = b;
        }
        return this.curve.jpoint(s2, u2.redMul(i2), a2);
      }, h.prototype.dbl = function() {
        return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
      }, h.prototype._zeroDbl = function() {
        var e2, t2, r2;
        if (this.zOne) {
          var n2 = this.x.redSqr(), i2 = this.y.redSqr(), s2 = i2.redSqr(), o2 = this.x.redAdd(i2).redSqr().redISub(n2).redISub(s2);
          o2 = o2.redIAdd(o2);
          var a2 = n2.redAdd(n2).redIAdd(n2), c2 = a2.redSqr().redISub(o2).redISub(o2), u2 = s2.redIAdd(s2);
          u2 = (u2 = u2.redIAdd(u2)).redIAdd(u2), e2 = c2, t2 = a2.redMul(o2.redISub(c2)).redISub(u2), r2 = this.y.redAdd(this.y);
        } else {
          var h2 = this.x.redSqr(), f = this.y.redSqr(), d = f.redSqr(), l = this.x.redAdd(f).redSqr().redISub(h2).redISub(d);
          l = l.redIAdd(l);
          var p = h2.redAdd(h2).redIAdd(h2), y = p.redSqr(), g = d.redIAdd(d);
          g = (g = g.redIAdd(g)).redIAdd(g), e2 = y.redISub(l).redISub(l), t2 = p.redMul(l.redISub(e2)).redISub(g), r2 = (r2 = this.y.redMul(this.z)).redIAdd(r2);
        }
        return this.curve.jpoint(e2, t2, r2);
      }, h.prototype._threeDbl = function() {
        var e2, t2, r2;
        if (this.zOne) {
          var n2 = this.x.redSqr(), i2 = this.y.redSqr(), s2 = i2.redSqr(), o2 = this.x.redAdd(i2).redSqr().redISub(n2).redISub(s2);
          o2 = o2.redIAdd(o2);
          var a2 = n2.redAdd(n2).redIAdd(n2).redIAdd(this.curve.a), c2 = a2.redSqr().redISub(o2).redISub(o2);
          e2 = c2;
          var u2 = s2.redIAdd(s2);
          u2 = (u2 = u2.redIAdd(u2)).redIAdd(u2), t2 = a2.redMul(o2.redISub(c2)).redISub(u2), r2 = this.y.redAdd(this.y);
        } else {
          var h2 = this.z.redSqr(), f = this.y.redSqr(), d = this.x.redMul(f), l = this.x.redSub(h2).redMul(this.x.redAdd(h2));
          l = l.redAdd(l).redIAdd(l);
          var p = d.redIAdd(d), y = (p = p.redIAdd(p)).redAdd(p);
          e2 = l.redSqr().redISub(y), r2 = this.y.redAdd(this.z).redSqr().redISub(f).redISub(h2);
          var g = f.redSqr();
          g = (g = (g = g.redIAdd(g)).redIAdd(g)).redIAdd(g), t2 = l.redMul(p.redISub(e2)).redISub(g);
        }
        return this.curve.jpoint(e2, t2, r2);
      }, h.prototype._dbl = function() {
        var e2 = this.curve.a, t2 = this.x, r2 = this.y, n2 = this.z, i2 = n2.redSqr().redSqr(), s2 = t2.redSqr(), o2 = r2.redSqr(), a2 = s2.redAdd(s2).redIAdd(s2).redIAdd(e2.redMul(i2)), c2 = t2.redAdd(t2), u2 = (c2 = c2.redIAdd(c2)).redMul(o2), h2 = a2.redSqr().redISub(u2.redAdd(u2)), f = u2.redISub(h2), d = o2.redSqr();
        d = (d = (d = d.redIAdd(d)).redIAdd(d)).redIAdd(d);
        var l = a2.redMul(f).redISub(d), p = r2.redAdd(r2).redMul(n2);
        return this.curve.jpoint(h2, l, p);
      }, h.prototype.trpl = function() {
        if (!this.curve.zeroA)
          return this.dbl().add(this);
        var e2 = this.x.redSqr(), t2 = this.y.redSqr(), r2 = this.z.redSqr(), n2 = t2.redSqr(), i2 = e2.redAdd(e2).redIAdd(e2), s2 = i2.redSqr(), o2 = this.x.redAdd(t2).redSqr().redISub(e2).redISub(n2), a2 = (o2 = (o2 = (o2 = o2.redIAdd(o2)).redAdd(o2).redIAdd(o2)).redISub(s2)).redSqr(), c2 = n2.redIAdd(n2);
        c2 = (c2 = (c2 = c2.redIAdd(c2)).redIAdd(c2)).redIAdd(c2);
        var u2 = i2.redIAdd(o2).redSqr().redISub(s2).redISub(a2).redISub(c2), h2 = t2.redMul(u2);
        h2 = (h2 = h2.redIAdd(h2)).redIAdd(h2);
        var f = this.x.redMul(a2).redISub(h2);
        f = (f = f.redIAdd(f)).redIAdd(f);
        var d = this.y.redMul(u2.redMul(c2.redISub(u2)).redISub(o2.redMul(a2)));
        d = (d = (d = d.redIAdd(d)).redIAdd(d)).redIAdd(d);
        var l = this.z.redAdd(o2).redSqr().redISub(r2).redISub(a2);
        return this.curve.jpoint(f, d, l);
      }, h.prototype.mul = function(e2, t2) {
        return e2 = new i(e2, t2), this.curve._wnafMul(this, e2);
      }, h.prototype.eq = function(e2) {
        if (e2.type === "affine")
          return this.eq(e2.toJ());
        if (this === e2)
          return true;
        var t2 = this.z.redSqr(), r2 = e2.z.redSqr();
        if (this.x.redMul(r2).redISub(e2.x.redMul(t2)).cmpn(0) !== 0)
          return false;
        var n2 = t2.redMul(this.z), i2 = r2.redMul(e2.z);
        return this.y.redMul(i2).redISub(e2.y.redMul(n2)).cmpn(0) === 0;
      }, h.prototype.eqXToP = function(e2) {
        var t2 = this.z.redSqr(), r2 = e2.toRed(this.curve.red).redMul(t2);
        if (this.x.cmp(r2) === 0)
          return true;
        for (var n2 = e2.clone(), i2 = this.curve.redN.redMul(t2); ; ) {
          if (n2.iadd(this.curve.n), n2.cmp(this.curve.p) >= 0)
            return false;
          if (r2.redIAdd(i2), this.x.cmp(r2) === 0)
            return true;
        }
      }, h.prototype.inspect = function() {
        return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
      }, h.prototype.isInfinity = function() {
        return this.z.cmpn(0) === 0;
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(38), i = r(18), s = r(104), o = r(32);
      function a(e2) {
        s.call(this, "mont", e2), this.a = new n(e2.a, 16).toRed(this.red), this.b = new n(e2.b, 16).toRed(this.red), this.i4 = new n(4).toRed(this.red).redInvm(), this.two = new n(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two));
      }
      function c(e2, t2, r2) {
        s.BasePoint.call(this, e2, "projective"), t2 === null && r2 === null ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new n(t2, 16), this.z = new n(r2, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));
      }
      i(a, s), e.exports = a, a.prototype.validate = function(e2) {
        var t2 = e2.normalize().x, r2 = t2.redSqr(), n2 = r2.redMul(t2).redAdd(r2.redMul(this.a)).redAdd(t2);
        return n2.redSqrt().redSqr().cmp(n2) === 0;
      }, i(c, s.BasePoint), a.prototype.decodePoint = function(e2, t2) {
        return this.point(o.toArray(e2, t2), 1);
      }, a.prototype.point = function(e2, t2) {
        return new c(this, e2, t2);
      }, a.prototype.pointFromJSON = function(e2) {
        return c.fromJSON(this, e2);
      }, c.prototype.precompute = function() {
      }, c.prototype._encode = function() {
        return this.getX().toArray("be", this.curve.p.byteLength());
      }, c.fromJSON = function(e2, t2) {
        return new c(e2, t2[0], t2[1] || e2.one);
      }, c.prototype.inspect = function() {
        return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
      }, c.prototype.isInfinity = function() {
        return this.z.cmpn(0) === 0;
      }, c.prototype.dbl = function() {
        var e2 = this.x.redAdd(this.z).redSqr(), t2 = this.x.redSub(this.z).redSqr(), r2 = e2.redSub(t2), n2 = e2.redMul(t2), i2 = r2.redMul(t2.redAdd(this.curve.a24.redMul(r2)));
        return this.curve.point(n2, i2);
      }, c.prototype.add = function() {
        throw new Error("Not supported on Montgomery curve");
      }, c.prototype.diffAdd = function(e2, t2) {
        var r2 = this.x.redAdd(this.z), n2 = this.x.redSub(this.z), i2 = e2.x.redAdd(e2.z), s2 = e2.x.redSub(e2.z).redMul(r2), o2 = i2.redMul(n2), a2 = t2.z.redMul(s2.redAdd(o2).redSqr()), c2 = t2.x.redMul(s2.redISub(o2).redSqr());
        return this.curve.point(a2, c2);
      }, c.prototype.mul = function(e2) {
        for (var t2 = e2.clone(), r2 = this, n2 = this.curve.point(null, null), i2 = []; t2.cmpn(0) !== 0; t2.iushrn(1))
          i2.push(t2.andln(1));
        for (var s2 = i2.length - 1; s2 >= 0; s2--)
          i2[s2] === 0 ? (r2 = r2.diffAdd(n2, this), n2 = n2.dbl()) : (n2 = r2.diffAdd(n2, this), r2 = r2.dbl());
        return n2;
      }, c.prototype.mulAdd = function() {
        throw new Error("Not supported on Montgomery curve");
      }, c.prototype.jumlAdd = function() {
        throw new Error("Not supported on Montgomery curve");
      }, c.prototype.eq = function(e2) {
        return this.getX().cmp(e2.getX()) === 0;
      }, c.prototype.normalize = function() {
        return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this;
      }, c.prototype.getX = function() {
        return this.normalize(), this.x.fromRed();
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(32), i = r(38), s = r(18), o = r(104), a = n.assert;
      function c(e2) {
        this.twisted = (0 | e2.a) != 1, this.mOneA = this.twisted && (0 | e2.a) == -1, this.extended = this.mOneA, o.call(this, "edwards", e2), this.a = new i(e2.a, 16).umod(this.red.m), this.a = this.a.toRed(this.red), this.c = new i(e2.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new i(e2.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), a(!this.twisted || this.c.fromRed().cmpn(1) === 0), this.oneC = (0 | e2.c) == 1;
      }
      function u(e2, t2, r2, n2, s2) {
        o.BasePoint.call(this, e2, "projective"), t2 === null && r2 === null && n2 === null ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = true) : (this.x = new i(t2, 16), this.y = new i(r2, 16), this.z = n2 ? new i(n2, 16) : this.curve.one, this.t = s2 && new i(s2, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
      }
      s(c, o), e.exports = c, c.prototype._mulA = function(e2) {
        return this.mOneA ? e2.redNeg() : this.a.redMul(e2);
      }, c.prototype._mulC = function(e2) {
        return this.oneC ? e2 : this.c.redMul(e2);
      }, c.prototype.jpoint = function(e2, t2, r2, n2) {
        return this.point(e2, t2, r2, n2);
      }, c.prototype.pointFromX = function(e2, t2) {
        (e2 = new i(e2, 16)).red || (e2 = e2.toRed(this.red));
        var r2 = e2.redSqr(), n2 = this.c2.redSub(this.a.redMul(r2)), s2 = this.one.redSub(this.c2.redMul(this.d).redMul(r2)), o2 = n2.redMul(s2.redInvm()), a2 = o2.redSqrt();
        if (a2.redSqr().redSub(o2).cmp(this.zero) !== 0)
          throw new Error("invalid point");
        var c2 = a2.fromRed().isOdd();
        return (t2 && !c2 || !t2 && c2) && (a2 = a2.redNeg()), this.point(e2, a2);
      }, c.prototype.pointFromY = function(e2, t2) {
        (e2 = new i(e2, 16)).red || (e2 = e2.toRed(this.red));
        var r2 = e2.redSqr(), n2 = r2.redSub(this.c2), s2 = r2.redMul(this.d).redMul(this.c2).redSub(this.a), o2 = n2.redMul(s2.redInvm());
        if (o2.cmp(this.zero) === 0) {
          if (t2)
            throw new Error("invalid point");
          return this.point(this.zero, e2);
        }
        var a2 = o2.redSqrt();
        if (a2.redSqr().redSub(o2).cmp(this.zero) !== 0)
          throw new Error("invalid point");
        return a2.fromRed().isOdd() !== t2 && (a2 = a2.redNeg()), this.point(a2, e2);
      }, c.prototype.validate = function(e2) {
        if (e2.isInfinity())
          return true;
        e2.normalize();
        var t2 = e2.x.redSqr(), r2 = e2.y.redSqr(), n2 = t2.redMul(this.a).redAdd(r2), i2 = this.c2.redMul(this.one.redAdd(this.d.redMul(t2).redMul(r2)));
        return n2.cmp(i2) === 0;
      }, s(u, o.BasePoint), c.prototype.pointFromJSON = function(e2) {
        return u.fromJSON(this, e2);
      }, c.prototype.point = function(e2, t2, r2, n2) {
        return new u(this, e2, t2, r2, n2);
      }, u.fromJSON = function(e2, t2) {
        return new u(e2, t2[0], t2[1], t2[2]);
      }, u.prototype.inspect = function() {
        return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
      }, u.prototype.isInfinity = function() {
        return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);
      }, u.prototype._extDbl = function() {
        var e2 = this.x.redSqr(), t2 = this.y.redSqr(), r2 = this.z.redSqr();
        r2 = r2.redIAdd(r2);
        var n2 = this.curve._mulA(e2), i2 = this.x.redAdd(this.y).redSqr().redISub(e2).redISub(t2), s2 = n2.redAdd(t2), o2 = s2.redSub(r2), a2 = n2.redSub(t2), c2 = i2.redMul(o2), u2 = s2.redMul(a2), h = i2.redMul(a2), f = o2.redMul(s2);
        return this.curve.point(c2, u2, f, h);
      }, u.prototype._projDbl = function() {
        var e2, t2, r2, n2 = this.x.redAdd(this.y).redSqr(), i2 = this.x.redSqr(), s2 = this.y.redSqr();
        if (this.curve.twisted) {
          var o2 = (u2 = this.curve._mulA(i2)).redAdd(s2);
          if (this.zOne)
            e2 = n2.redSub(i2).redSub(s2).redMul(o2.redSub(this.curve.two)), t2 = o2.redMul(u2.redSub(s2)), r2 = o2.redSqr().redSub(o2).redSub(o2);
          else {
            var a2 = this.z.redSqr(), c2 = o2.redSub(a2).redISub(a2);
            e2 = n2.redSub(i2).redISub(s2).redMul(c2), t2 = o2.redMul(u2.redSub(s2)), r2 = o2.redMul(c2);
          }
        } else {
          var u2 = i2.redAdd(s2);
          a2 = this.curve._mulC(this.z).redSqr(), c2 = u2.redSub(a2).redSub(a2);
          e2 = this.curve._mulC(n2.redISub(u2)).redMul(c2), t2 = this.curve._mulC(u2).redMul(i2.redISub(s2)), r2 = u2.redMul(c2);
        }
        return this.curve.point(e2, t2, r2);
      }, u.prototype.dbl = function() {
        return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
      }, u.prototype._extAdd = function(e2) {
        var t2 = this.y.redSub(this.x).redMul(e2.y.redSub(e2.x)), r2 = this.y.redAdd(this.x).redMul(e2.y.redAdd(e2.x)), n2 = this.t.redMul(this.curve.dd).redMul(e2.t), i2 = this.z.redMul(e2.z.redAdd(e2.z)), s2 = r2.redSub(t2), o2 = i2.redSub(n2), a2 = i2.redAdd(n2), c2 = r2.redAdd(t2), u2 = s2.redMul(o2), h = a2.redMul(c2), f = s2.redMul(c2), d = o2.redMul(a2);
        return this.curve.point(u2, h, d, f);
      }, u.prototype._projAdd = function(e2) {
        var t2, r2, n2 = this.z.redMul(e2.z), i2 = n2.redSqr(), s2 = this.x.redMul(e2.x), o2 = this.y.redMul(e2.y), a2 = this.curve.d.redMul(s2).redMul(o2), c2 = i2.redSub(a2), u2 = i2.redAdd(a2), h = this.x.redAdd(this.y).redMul(e2.x.redAdd(e2.y)).redISub(s2).redISub(o2), f = n2.redMul(c2).redMul(h);
        return this.curve.twisted ? (t2 = n2.redMul(u2).redMul(o2.redSub(this.curve._mulA(s2))), r2 = c2.redMul(u2)) : (t2 = n2.redMul(u2).redMul(o2.redSub(s2)), r2 = this.curve._mulC(c2).redMul(u2)), this.curve.point(f, t2, r2);
      }, u.prototype.add = function(e2) {
        return this.isInfinity() ? e2 : e2.isInfinity() ? this : this.curve.extended ? this._extAdd(e2) : this._projAdd(e2);
      }, u.prototype.mul = function(e2) {
        return this._hasDoubles(e2) ? this.curve._fixedNafMul(this, e2) : this.curve._wnafMul(this, e2);
      }, u.prototype.mulAdd = function(e2, t2, r2) {
        return this.curve._wnafMulAdd(1, [this, t2], [e2, r2], 2, false);
      }, u.prototype.jmulAdd = function(e2, t2, r2) {
        return this.curve._wnafMulAdd(1, [this, t2], [e2, r2], 2, true);
      }, u.prototype.normalize = function() {
        if (this.zOne)
          return this;
        var e2 = this.z.redInvm();
        return this.x = this.x.redMul(e2), this.y = this.y.redMul(e2), this.t && (this.t = this.t.redMul(e2)), this.z = this.curve.one, this.zOne = true, this;
      }, u.prototype.neg = function() {
        return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
      }, u.prototype.getX = function() {
        return this.normalize(), this.x.fromRed();
      }, u.prototype.getY = function() {
        return this.normalize(), this.y.fromRed();
      }, u.prototype.eq = function(e2) {
        return this === e2 || this.getX().cmp(e2.getX()) === 0 && this.getY().cmp(e2.getY()) === 0;
      }, u.prototype.eqXToP = function(e2) {
        var t2 = e2.toRed(this.curve.red).redMul(this.z);
        if (this.x.cmp(t2) === 0)
          return true;
        for (var r2 = e2.clone(), n2 = this.curve.redN.redMul(this.z); ; ) {
          if (r2.iadd(this.curve.n), r2.cmp(this.curve.p) >= 0)
            return false;
          if (t2.redIAdd(n2), this.x.cmp(t2) === 0)
            return true;
        }
      }, u.prototype.toP = u.prototype.normalize, u.prototype.mixedAdd = u.prototype.add;
    }, function(e, t, r) {
      "use strict";
      t.sha1 = r(473), t.sha224 = r(474), t.sha256 = r(235), t.sha384 = r(475), t.sha512 = r(236);
    }, function(e, t, r) {
      "use strict";
      var n = r(35), i = r(81), s = r(234), o = n.rotl32, a = n.sum32, c = n.sum32_5, u = s.ft_1, h = i.BlockHash, f = [1518500249, 1859775393, 2400959708, 3395469782];
      function d() {
        if (!(this instanceof d))
          return new d();
        h.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = new Array(80);
      }
      n.inherits(d, h), e.exports = d, d.blockSize = 512, d.outSize = 160, d.hmacStrength = 80, d.padLength = 64, d.prototype._update = function(e2, t2) {
        for (var r2 = this.W, n2 = 0; n2 < 16; n2++)
          r2[n2] = e2[t2 + n2];
        for (; n2 < r2.length; n2++)
          r2[n2] = o(r2[n2 - 3] ^ r2[n2 - 8] ^ r2[n2 - 14] ^ r2[n2 - 16], 1);
        var i2 = this.h[0], s2 = this.h[1], h2 = this.h[2], d2 = this.h[3], l = this.h[4];
        for (n2 = 0; n2 < r2.length; n2++) {
          var p = ~~(n2 / 20), y = c(o(i2, 5), u(p, s2, h2, d2), l, r2[n2], f[p]);
          l = d2, d2 = h2, h2 = o(s2, 30), s2 = i2, i2 = y;
        }
        this.h[0] = a(this.h[0], i2), this.h[1] = a(this.h[1], s2), this.h[2] = a(this.h[2], h2), this.h[3] = a(this.h[3], d2), this.h[4] = a(this.h[4], l);
      }, d.prototype._digest = function(e2) {
        return e2 === "hex" ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(35), i = r(235);
      function s() {
        if (!(this instanceof s))
          return new s();
        i.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];
      }
      n.inherits(s, i), e.exports = s, s.blockSize = 512, s.outSize = 224, s.hmacStrength = 192, s.padLength = 64, s.prototype._digest = function(e2) {
        return e2 === "hex" ? n.toHex32(this.h.slice(0, 7), "big") : n.split32(this.h.slice(0, 7), "big");
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(35), i = r(236);
      function s() {
        if (!(this instanceof s))
          return new s();
        i.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428];
      }
      n.inherits(s, i), e.exports = s, s.blockSize = 1024, s.outSize = 384, s.hmacStrength = 192, s.padLength = 128, s.prototype._digest = function(e2) {
        return e2 === "hex" ? n.toHex32(this.h.slice(0, 12), "big") : n.split32(this.h.slice(0, 12), "big");
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(35), i = r(81), s = n.rotl32, o = n.sum32, a = n.sum32_3, c = n.sum32_4, u = i.BlockHash;
      function h() {
        if (!(this instanceof h))
          return new h();
        u.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little";
      }
      function f(e2, t2, r2, n2) {
        return e2 <= 15 ? t2 ^ r2 ^ n2 : e2 <= 31 ? t2 & r2 | ~t2 & n2 : e2 <= 47 ? (t2 | ~r2) ^ n2 : e2 <= 63 ? t2 & n2 | r2 & ~n2 : t2 ^ (r2 | ~n2);
      }
      function d(e2) {
        return e2 <= 15 ? 0 : e2 <= 31 ? 1518500249 : e2 <= 47 ? 1859775393 : e2 <= 63 ? 2400959708 : 2840853838;
      }
      function l(e2) {
        return e2 <= 15 ? 1352829926 : e2 <= 31 ? 1548603684 : e2 <= 47 ? 1836072691 : e2 <= 63 ? 2053994217 : 0;
      }
      n.inherits(h, u), t.ripemd160 = h, h.blockSize = 512, h.outSize = 160, h.hmacStrength = 192, h.padLength = 64, h.prototype._update = function(e2, t2) {
        for (var r2 = this.h[0], n2 = this.h[1], i2 = this.h[2], u2 = this.h[3], h2 = this.h[4], m = r2, v = n2, w = i2, _ = u2, E = h2, S = 0; S < 80; S++) {
          var A = o(s(c(r2, f(S, n2, i2, u2), e2[p[S] + t2], d(S)), g[S]), h2);
          r2 = h2, h2 = u2, u2 = s(i2, 10), i2 = n2, n2 = A, A = o(s(c(m, f(79 - S, v, w, _), e2[y[S] + t2], l(S)), b[S]), E), m = E, E = _, _ = s(w, 10), w = v, v = A;
        }
        A = a(this.h[1], i2, _), this.h[1] = a(this.h[2], u2, E), this.h[2] = a(this.h[3], h2, m), this.h[3] = a(this.h[4], r2, v), this.h[4] = a(this.h[0], n2, w), this.h[0] = A;
      }, h.prototype._digest = function(e2) {
        return e2 === "hex" ? n.toHex32(this.h, "little") : n.split32(this.h, "little");
      };
      var p = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13], y = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11], g = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6], b = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];
    }, function(e, t, r) {
      "use strict";
      var n = r(35), i = r(51);
      function s(e2, t2, r2) {
        if (!(this instanceof s))
          return new s(e2, t2, r2);
        this.Hash = e2, this.blockSize = e2.blockSize / 8, this.outSize = e2.outSize / 8, this.inner = null, this.outer = null, this._init(n.toArray(t2, r2));
      }
      e.exports = s, s.prototype._init = function(e2) {
        e2.length > this.blockSize && (e2 = new this.Hash().update(e2).digest()), i(e2.length <= this.blockSize);
        for (var t2 = e2.length; t2 < this.blockSize; t2++)
          e2.push(0);
        for (t2 = 0; t2 < e2.length; t2++)
          e2[t2] ^= 54;
        for (this.inner = new this.Hash().update(e2), t2 = 0; t2 < e2.length; t2++)
          e2[t2] ^= 106;
        this.outer = new this.Hash().update(e2);
      }, s.prototype.update = function(e2, t2) {
        return this.inner.update(e2, t2), this;
      }, s.prototype.digest = function(e2) {
        return this.outer.update(this.inner.digest()), this.outer.digest(e2);
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = {doubles: {step: 4, points: [["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"], ["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"], ["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"], ["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"], ["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"], ["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"], ["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"], ["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"], ["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"], ["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"], ["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"], ["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"], ["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"], ["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"], ["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"], ["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"], ["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"], ["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"], ["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"], ["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"], ["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"], ["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"], ["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"], ["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"], ["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"], ["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"], ["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"], ["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"], ["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"], ["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"], ["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"], ["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"], ["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"], ["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"], ["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"], ["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"], ["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"], ["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"], ["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"], ["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"], ["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"], ["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"], ["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"], ["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"], ["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"], ["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"], ["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"], ["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"], ["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"], ["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"], ["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"], ["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"], ["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"], ["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"], ["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"], ["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"], ["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"], ["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"], ["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"], ["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"], ["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"], ["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"], ["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"], ["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"], ["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]}, naf: {wnd: 7, points: [["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"], ["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"], ["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"], ["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"], ["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"], ["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"], ["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"], ["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"], ["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"], ["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"], ["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"], ["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"], ["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"], ["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"], ["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"], ["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"], ["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"], ["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"], ["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"], ["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"], ["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"], ["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"], ["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"], ["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"], ["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"], ["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"], ["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"], ["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"], ["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"], ["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"], ["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"], ["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"], ["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"], ["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"], ["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"], ["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"], ["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"], ["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"], ["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"], ["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"], ["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"], ["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"], ["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"], ["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"], ["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"], ["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"], ["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"], ["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"], ["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"], ["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"], ["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"], ["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"], ["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"], ["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"], ["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"], ["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"], ["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"], ["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"], ["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"], ["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"], ["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"], ["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"], ["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"], ["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"], ["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"], ["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"], ["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"], ["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"], ["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"], ["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"], ["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"], ["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"], ["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"], ["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"], ["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"], ["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"], ["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"], ["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"], ["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"], ["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"], ["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"], ["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"], ["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"], ["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"], ["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"], ["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"], ["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"], ["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"], ["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"], ["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"], ["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"], ["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"], ["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"], ["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"], ["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"], ["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"], ["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"], ["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"], ["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"], ["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"], ["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"], ["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"], ["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"], ["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"], ["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"], ["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"], ["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"], ["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"], ["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"], ["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"], ["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"], ["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"], ["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"], ["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"], ["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"], ["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"], ["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"], ["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"], ["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"], ["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"], ["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"], ["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"], ["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"], ["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"], ["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"], ["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"], ["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]}};
    }, function(e, t, r) {
      "use strict";
      var n = r(38), i = r(480), s = r(32), o = r(145), a = r(232), c = s.assert, u = r(481), h = r(482);
      function f(e2) {
        if (!(this instanceof f))
          return new f(e2);
        typeof e2 == "string" && (c(o.hasOwnProperty(e2), "Unknown curve " + e2), e2 = o[e2]), e2 instanceof o.PresetCurve && (e2 = {curve: e2}), this.curve = e2.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e2.curve.g, this.g.precompute(e2.curve.n.bitLength() + 1), this.hash = e2.hash || e2.curve.hash;
      }
      e.exports = f, f.prototype.keyPair = function(e2) {
        return new u(this, e2);
      }, f.prototype.keyFromPrivate = function(e2, t2) {
        return u.fromPrivate(this, e2, t2);
      }, f.prototype.keyFromPublic = function(e2, t2) {
        return u.fromPublic(this, e2, t2);
      }, f.prototype.genKeyPair = function(e2) {
        e2 || (e2 = {});
        for (var t2 = new i({hash: this.hash, pers: e2.pers, persEnc: e2.persEnc || "utf8", entropy: e2.entropy || a(this.hash.hmacStrength), entropyEnc: e2.entropy && e2.entropyEnc || "utf8", nonce: this.n.toArray()}), r2 = this.n.byteLength(), s2 = this.n.sub(new n(2)); ; ) {
          var o2 = new n(t2.generate(r2));
          if (!(o2.cmp(s2) > 0))
            return o2.iaddn(1), this.keyFromPrivate(o2);
        }
      }, f.prototype._truncateToN = function(e2, t2) {
        var r2 = 8 * e2.byteLength() - this.n.bitLength();
        return r2 > 0 && (e2 = e2.ushrn(r2)), !t2 && e2.cmp(this.n) >= 0 ? e2.sub(this.n) : e2;
      }, f.prototype.sign = function(e2, t2, r2, s2) {
        typeof r2 == "object" && (s2 = r2, r2 = null), s2 || (s2 = {}), t2 = this.keyFromPrivate(t2, r2), e2 = this._truncateToN(new n(e2, 16));
        for (var o2 = this.n.byteLength(), a2 = t2.getPrivate().toArray("be", o2), c2 = e2.toArray("be", o2), u2 = new i({hash: this.hash, entropy: a2, nonce: c2, pers: s2.pers, persEnc: s2.persEnc || "utf8"}), f2 = this.n.sub(new n(1)), d = 0; ; d++) {
          var l = s2.k ? s2.k(d) : new n(u2.generate(this.n.byteLength()));
          if (!((l = this._truncateToN(l, true)).cmpn(1) <= 0 || l.cmp(f2) >= 0)) {
            var p = this.g.mul(l);
            if (!p.isInfinity()) {
              var y = p.getX(), g = y.umod(this.n);
              if (g.cmpn(0) !== 0) {
                var b = l.invm(this.n).mul(g.mul(t2.getPrivate()).iadd(e2));
                if ((b = b.umod(this.n)).cmpn(0) !== 0) {
                  var m = (p.getY().isOdd() ? 1 : 0) | (y.cmp(g) !== 0 ? 2 : 0);
                  return s2.canonical && b.cmp(this.nh) > 0 && (b = this.n.sub(b), m ^= 1), new h({r: g, s: b, recoveryParam: m});
                }
              }
            }
          }
        }
      }, f.prototype.verify = function(e2, t2, r2, i2) {
        e2 = this._truncateToN(new n(e2, 16)), r2 = this.keyFromPublic(r2, i2);
        var s2 = (t2 = new h(t2, "hex")).r, o2 = t2.s;
        if (s2.cmpn(1) < 0 || s2.cmp(this.n) >= 0)
          return false;
        if (o2.cmpn(1) < 0 || o2.cmp(this.n) >= 0)
          return false;
        var a2, c2 = o2.invm(this.n), u2 = c2.mul(e2).umod(this.n), f2 = c2.mul(s2).umod(this.n);
        return this.curve._maxwellTrick ? !(a2 = this.g.jmulAdd(u2, r2.getPublic(), f2)).isInfinity() && a2.eqXToP(s2) : !(a2 = this.g.mulAdd(u2, r2.getPublic(), f2)).isInfinity() && a2.getX().umod(this.n).cmp(s2) === 0;
      }, f.prototype.recoverPubKey = function(e2, t2, r2, i2) {
        c((3 & r2) === r2, "The recovery param is more than two bits"), t2 = new h(t2, i2);
        var s2 = this.n, o2 = new n(e2), a2 = t2.r, u2 = t2.s, f2 = 1 & r2, d = r2 >> 1;
        if (a2.cmp(this.curve.p.umod(this.curve.n)) >= 0 && d)
          throw new Error("Unable to find sencond key candinate");
        a2 = d ? this.curve.pointFromX(a2.add(this.curve.n), f2) : this.curve.pointFromX(a2, f2);
        var l = t2.r.invm(s2), p = s2.sub(o2).mul(l).umod(s2), y = u2.mul(l).umod(s2);
        return this.g.mulAdd(p, a2, y);
      }, f.prototype.getKeyRecoveryParam = function(e2, t2, r2, n2) {
        if ((t2 = new h(t2, n2)).recoveryParam !== null)
          return t2.recoveryParam;
        for (var i2 = 0; i2 < 4; i2++) {
          var s2;
          try {
            s2 = this.recoverPubKey(e2, t2, i2);
          } catch (e3) {
            continue;
          }
          if (s2.eq(r2))
            return i2;
        }
        throw new Error("Unable to find valid recovery factor");
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(146), i = r(231), s = r(51);
      function o(e2) {
        if (!(this instanceof o))
          return new o(e2);
        this.hash = e2.hash, this.predResist = !!e2.predResist, this.outLen = this.hash.outSize, this.minEntropy = e2.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
        var t2 = i.toArray(e2.entropy, e2.entropyEnc || "hex"), r2 = i.toArray(e2.nonce, e2.nonceEnc || "hex"), n2 = i.toArray(e2.pers, e2.persEnc || "hex");
        s(t2.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(t2, r2, n2);
      }
      e.exports = o, o.prototype._init = function(e2, t2, r2) {
        var n2 = e2.concat(t2).concat(r2);
        this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
        for (var i2 = 0; i2 < this.V.length; i2++)
          this.K[i2] = 0, this.V[i2] = 1;
        this._update(n2), this._reseed = 1, this.reseedInterval = 281474976710656;
      }, o.prototype._hmac = function() {
        return new n.hmac(this.hash, this.K);
      }, o.prototype._update = function(e2) {
        var t2 = this._hmac().update(this.V).update([0]);
        e2 && (t2 = t2.update(e2)), this.K = t2.digest(), this.V = this._hmac().update(this.V).digest(), e2 && (this.K = this._hmac().update(this.V).update([1]).update(e2).digest(), this.V = this._hmac().update(this.V).digest());
      }, o.prototype.reseed = function(e2, t2, r2, n2) {
        typeof t2 != "string" && (n2 = r2, r2 = t2, t2 = null), e2 = i.toArray(e2, t2), r2 = i.toArray(r2, n2), s(e2.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(e2.concat(r2 || [])), this._reseed = 1;
      }, o.prototype.generate = function(e2, t2, r2, n2) {
        if (this._reseed > this.reseedInterval)
          throw new Error("Reseed is required");
        typeof t2 != "string" && (n2 = r2, r2 = t2, t2 = null), r2 && (r2 = i.toArray(r2, n2 || "hex"), this._update(r2));
        for (var s2 = []; s2.length < e2; )
          this.V = this._hmac().update(this.V).digest(), s2 = s2.concat(this.V);
        var o2 = s2.slice(0, e2);
        return this._update(r2), this._reseed++, i.encode(o2, t2);
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(38), i = r(32).assert;
      function s(e2, t2) {
        this.ec = e2, this.priv = null, this.pub = null, t2.priv && this._importPrivate(t2.priv, t2.privEnc), t2.pub && this._importPublic(t2.pub, t2.pubEnc);
      }
      e.exports = s, s.fromPublic = function(e2, t2, r2) {
        return t2 instanceof s ? t2 : new s(e2, {pub: t2, pubEnc: r2});
      }, s.fromPrivate = function(e2, t2, r2) {
        return t2 instanceof s ? t2 : new s(e2, {priv: t2, privEnc: r2});
      }, s.prototype.validate = function() {
        var e2 = this.getPublic();
        return e2.isInfinity() ? {result: false, reason: "Invalid public key"} : e2.validate() ? e2.mul(this.ec.curve.n).isInfinity() ? {result: true, reason: null} : {result: false, reason: "Public key * N != O"} : {result: false, reason: "Public key is not a point"};
      }, s.prototype.getPublic = function(e2, t2) {
        return typeof e2 == "string" && (t2 = e2, e2 = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), t2 ? this.pub.encode(t2, e2) : this.pub;
      }, s.prototype.getPrivate = function(e2) {
        return e2 === "hex" ? this.priv.toString(16, 2) : this.priv;
      }, s.prototype._importPrivate = function(e2, t2) {
        this.priv = new n(e2, t2 || 16), this.priv = this.priv.umod(this.ec.curve.n);
      }, s.prototype._importPublic = function(e2, t2) {
        if (e2.x || e2.y)
          return this.ec.curve.type === "mont" ? i(e2.x, "Need x coordinate") : this.ec.curve.type !== "short" && this.ec.curve.type !== "edwards" || i(e2.x && e2.y, "Need both x and y coordinate"), void (this.pub = this.ec.curve.point(e2.x, e2.y));
        this.pub = this.ec.curve.decodePoint(e2, t2);
      }, s.prototype.derive = function(e2) {
        return e2.mul(this.priv).getX();
      }, s.prototype.sign = function(e2, t2, r2) {
        return this.ec.sign(e2, this, t2, r2);
      }, s.prototype.verify = function(e2, t2) {
        return this.ec.verify(e2, t2, this);
      }, s.prototype.inspect = function() {
        return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(38), i = r(32), s = i.assert;
      function o(e2, t2) {
        if (e2 instanceof o)
          return e2;
        this._importDER(e2, t2) || (s(e2.r && e2.s, "Signature without r or s"), this.r = new n(e2.r, 16), this.s = new n(e2.s, 16), e2.recoveryParam === void 0 ? this.recoveryParam = null : this.recoveryParam = e2.recoveryParam);
      }
      function a() {
        this.place = 0;
      }
      function c(e2, t2) {
        var r2 = e2[t2.place++];
        if (!(128 & r2))
          return r2;
        var n2 = 15 & r2;
        if (n2 === 0 || n2 > 4)
          return false;
        for (var i2 = 0, s2 = 0, o2 = t2.place; s2 < n2; s2++, o2++)
          i2 <<= 8, i2 |= e2[o2], i2 >>>= 0;
        return !(i2 <= 127) && (t2.place = o2, i2);
      }
      function u(e2) {
        for (var t2 = 0, r2 = e2.length - 1; !e2[t2] && !(128 & e2[t2 + 1]) && t2 < r2; )
          t2++;
        return t2 === 0 ? e2 : e2.slice(t2);
      }
      function h(e2, t2) {
        if (t2 < 128)
          e2.push(t2);
        else {
          var r2 = 1 + (Math.log(t2) / Math.LN2 >>> 3);
          for (e2.push(128 | r2); --r2; )
            e2.push(t2 >>> (r2 << 3) & 255);
          e2.push(t2);
        }
      }
      e.exports = o, o.prototype._importDER = function(e2, t2) {
        e2 = i.toArray(e2, t2);
        var r2 = new a();
        if (e2[r2.place++] !== 48)
          return false;
        var s2 = c(e2, r2);
        if (s2 === false)
          return false;
        if (s2 + r2.place !== e2.length)
          return false;
        if (e2[r2.place++] !== 2)
          return false;
        var o2 = c(e2, r2);
        if (o2 === false)
          return false;
        var u2 = e2.slice(r2.place, o2 + r2.place);
        if (r2.place += o2, e2[r2.place++] !== 2)
          return false;
        var h2 = c(e2, r2);
        if (h2 === false)
          return false;
        if (e2.length !== h2 + r2.place)
          return false;
        var f = e2.slice(r2.place, h2 + r2.place);
        if (u2[0] === 0) {
          if (!(128 & u2[1]))
            return false;
          u2 = u2.slice(1);
        }
        if (f[0] === 0) {
          if (!(128 & f[1]))
            return false;
          f = f.slice(1);
        }
        return this.r = new n(u2), this.s = new n(f), this.recoveryParam = null, true;
      }, o.prototype.toDER = function(e2) {
        var t2 = this.r.toArray(), r2 = this.s.toArray();
        for (128 & t2[0] && (t2 = [0].concat(t2)), 128 & r2[0] && (r2 = [0].concat(r2)), t2 = u(t2), r2 = u(r2); !(r2[0] || 128 & r2[1]); )
          r2 = r2.slice(1);
        var n2 = [2];
        h(n2, t2.length), (n2 = n2.concat(t2)).push(2), h(n2, r2.length);
        var s2 = n2.concat(r2), o2 = [48];
        return h(o2, s2.length), o2 = o2.concat(s2), i.encode(o2, e2);
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(146), i = r(145), s = r(32), o = s.assert, a = s.parseBytes, c = r(484), u = r(485);
      function h(e2) {
        if (o(e2 === "ed25519", "only tested with ed25519 so far"), !(this instanceof h))
          return new h(e2);
        e2 = i[e2].curve;
        this.curve = e2, this.g = e2.g, this.g.precompute(e2.n.bitLength() + 1), this.pointClass = e2.point().constructor, this.encodingLength = Math.ceil(e2.n.bitLength() / 8), this.hash = n.sha512;
      }
      e.exports = h, h.prototype.sign = function(e2, t2) {
        e2 = a(e2);
        var r2 = this.keyFromSecret(t2), n2 = this.hashInt(r2.messagePrefix(), e2), i2 = this.g.mul(n2), s2 = this.encodePoint(i2), o2 = this.hashInt(s2, r2.pubBytes(), e2).mul(r2.priv()), c2 = n2.add(o2).umod(this.curve.n);
        return this.makeSignature({R: i2, S: c2, Rencoded: s2});
      }, h.prototype.verify = function(e2, t2, r2) {
        e2 = a(e2), t2 = this.makeSignature(t2);
        var n2 = this.keyFromPublic(r2), i2 = this.hashInt(t2.Rencoded(), n2.pubBytes(), e2), s2 = this.g.mul(t2.S());
        return t2.R().add(n2.pub().mul(i2)).eq(s2);
      }, h.prototype.hashInt = function() {
        for (var e2 = this.hash(), t2 = 0; t2 < arguments.length; t2++)
          e2.update(arguments[t2]);
        return s.intFromLE(e2.digest()).umod(this.curve.n);
      }, h.prototype.keyFromPublic = function(e2) {
        return c.fromPublic(this, e2);
      }, h.prototype.keyFromSecret = function(e2) {
        return c.fromSecret(this, e2);
      }, h.prototype.makeSignature = function(e2) {
        return e2 instanceof u ? e2 : new u(this, e2);
      }, h.prototype.encodePoint = function(e2) {
        var t2 = e2.getY().toArray("le", this.encodingLength);
        return t2[this.encodingLength - 1] |= e2.getX().isOdd() ? 128 : 0, t2;
      }, h.prototype.decodePoint = function(e2) {
        var t2 = (e2 = s.parseBytes(e2)).length - 1, r2 = e2.slice(0, t2).concat(-129 & e2[t2]), n2 = (128 & e2[t2]) != 0, i2 = s.intFromLE(r2);
        return this.curve.pointFromY(i2, n2);
      }, h.prototype.encodeInt = function(e2) {
        return e2.toArray("le", this.encodingLength);
      }, h.prototype.decodeInt = function(e2) {
        return s.intFromLE(e2);
      }, h.prototype.isPoint = function(e2) {
        return e2 instanceof this.pointClass;
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(32), i = n.assert, s = n.parseBytes, o = n.cachedProperty;
      function a(e2, t2) {
        this.eddsa = e2, this._secret = s(t2.secret), e2.isPoint(t2.pub) ? this._pub = t2.pub : this._pubBytes = s(t2.pub);
      }
      a.fromPublic = function(e2, t2) {
        return t2 instanceof a ? t2 : new a(e2, {pub: t2});
      }, a.fromSecret = function(e2, t2) {
        return t2 instanceof a ? t2 : new a(e2, {secret: t2});
      }, a.prototype.secret = function() {
        return this._secret;
      }, o(a, "pubBytes", function() {
        return this.eddsa.encodePoint(this.pub());
      }), o(a, "pub", function() {
        return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());
      }), o(a, "privBytes", function() {
        var e2 = this.eddsa, t2 = this.hash(), r2 = e2.encodingLength - 1, n2 = t2.slice(0, e2.encodingLength);
        return n2[0] &= 248, n2[r2] &= 127, n2[r2] |= 64, n2;
      }), o(a, "priv", function() {
        return this.eddsa.decodeInt(this.privBytes());
      }), o(a, "hash", function() {
        return this.eddsa.hash().update(this.secret()).digest();
      }), o(a, "messagePrefix", function() {
        return this.hash().slice(this.eddsa.encodingLength);
      }), a.prototype.sign = function(e2) {
        return i(this._secret, "KeyPair can only verify"), this.eddsa.sign(e2, this);
      }, a.prototype.verify = function(e2, t2) {
        return this.eddsa.verify(e2, t2, this);
      }, a.prototype.getSecret = function(e2) {
        return i(this._secret, "KeyPair is public only"), n.encode(this.secret(), e2);
      }, a.prototype.getPublic = function(e2) {
        return n.encode(this.pubBytes(), e2);
      }, e.exports = a;
    }, function(e, t, r) {
      "use strict";
      var n = r(38), i = r(32), s = i.assert, o = i.cachedProperty, a = i.parseBytes;
      function c(e2, t2) {
        this.eddsa = e2, typeof t2 != "object" && (t2 = a(t2)), Array.isArray(t2) && (t2 = {R: t2.slice(0, e2.encodingLength), S: t2.slice(e2.encodingLength)}), s(t2.R && t2.S, "Signature without R or S"), e2.isPoint(t2.R) && (this._R = t2.R), t2.S instanceof n && (this._S = t2.S), this._Rencoded = Array.isArray(t2.R) ? t2.R : t2.Rencoded, this._Sencoded = Array.isArray(t2.S) ? t2.S : t2.Sencoded;
      }
      o(c, "S", function() {
        return this.eddsa.decodeInt(this.Sencoded());
      }), o(c, "R", function() {
        return this.eddsa.decodePoint(this.Rencoded());
      }), o(c, "Rencoded", function() {
        return this.eddsa.encodePoint(this.R());
      }), o(c, "Sencoded", function() {
        return this.eddsa.encodeInt(this.S());
      }), c.prototype.toBytes = function() {
        return this.Rencoded().concat(this.Sencoded());
      }, c.prototype.toHex = function() {
        return i.encode(this.toBytes(), "hex").toUpperCase();
      }, e.exports = c;
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(27), s = r(6), o = r(237), a = {"AES-128": {ivSize: 16, keySize: 16}, "AES-256": {ivSize: 16, keySize: 32}, Blowfish: {ivSize: 8, cipherKeySize: 32}};
      e.exports = async (e2, t2, r2) => {
        const c = a[e2];
        if (!c) {
          const t3 = Object.keys(a).join(" / ");
          throw n(new Error(`unknown cipher type '${e2}'. Must be ${t3}`), "ERR_INVALID_CIPHER_TYPE");
        }
        if (!t2)
          throw n(new Error("missing hash type"), "ERR_MISSING_HASH_TYPE");
        const u = c.keySize, h = c.ivSize, f = s("key expansion"), d = 2 * (h + u + 20), l = await o.create(t2, r2);
        let p = await l.digest(f);
        const y = [];
        let g = 0;
        for (; g < d; ) {
          const e3 = await l.digest(i([p, f]));
          let t3 = e3.length;
          g + t3 > d && (t3 = d - g), y.push(e3), g += t3, p = await l.digest(p);
        }
        const b = d / 2, m = i(y), v = m.slice(0, b), w = m.slice(b, d), _ = (e3) => ({iv: e3.slice(0, h), cipherKey: e3.slice(h, h + u), macKey: e3.slice(h + u)});
        return {k1: _(v), k2: _(w)};
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = {SHA1: 20, SHA256: 32, SHA512: 64};
    }, function(e, t, r) {
      "use strict";
      const n = r(489);
      e.exports = async (e2) => n.generateEphmeralKeyPair(e2);
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(101), {base64urlToBuffer: s} = r(143), o = r(490), a = r(5), c = r(27), u = r(19), h = {"P-256": 256, "P-384": 384, "P-521": 521};
      t.generateEphmeralKeyPair = async function(e2) {
        o(Object.keys(h), e2);
        const t2 = await i.get().subtle.generateKey({name: "ECDH", namedCurve: e2}, true, ["deriveBits"]);
        return {key: d(await i.get().subtle.exportKey("jwk", t2.publicKey)), genSharedKey: async (r2, n2) => {
          let s2;
          s2 = n2 ? await i.get().subtle.importKey("jwk", p(e2, n2), {name: "ECDH", namedCurve: e2}, false, ["deriveBits"]) : t2.privateKey;
          const o2 = [await i.get().subtle.importKey("jwk", l(e2, r2), {name: "ECDH", namedCurve: e2}, false, []), s2], a2 = await i.get().subtle.deriveBits({name: "ECDH", namedCurve: e2, public: o2[0]}, o2[1], h[e2]);
          return new Uint8Array(a2, a2.byteOffset, a2.byteLength);
        }};
      };
      const f = {"P-256": 32, "P-384": 48, "P-521": 66};
      function d(e2) {
        const t2 = f[e2.crv];
        return c([Uint8Array.from([4]), s(e2.x, t2), s(e2.y, t2)], 1 + 2 * t2);
      }
      function l(e2, t2) {
        const r2 = f[e2];
        if (u(!t2.slice(0, 1), Uint8Array.from([4])))
          throw n(new Error("Cannot unmarshal public key - invalid key format"), "ERR_INVALID_KEY_FORMAT");
        return {kty: "EC", crv: e2, x: a(t2.slice(1, r2 + 1), "base64url"), y: a(t2.slice(1 + r2), "base64url"), ext: true};
      }
      const p = (e2, t2) => ({...l(e2, t2.public), d: a(t2.private, "base64url")});
    }, function(e, t, r) {
      "use strict";
      const n = r(0);
      e.exports = function(e2, t2) {
        if (!e2.includes(t2)) {
          const r2 = e2.join(" / ");
          throw n(new Error(`Unknown curve: ${t2}. Must be ${r2}`), "ERR_INVALID_CURVE");
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(20);
      e.exports = n("\n\nmessage PeerIdProto {\n  required bytes id = 1;\n  bytes pubKey = 2;\n  bytes privKey = 3;\n}\n\n");
    }, function(e, t, r) {
      "use strict";
      const n = r(493), i = r(494);
      t.create = async function(e2, t2) {
        const r2 = i(e2), s = n.createCipheriv(r2, e2, t2), o = n.createDecipheriv(r2, e2, t2);
        return {encrypt: async (e3) => s.update(e3), decrypt: async (e3) => o.update(e3)};
      };
    }, function(e, t, r) {
      "use strict";
      r(79);
      const n = r(8), i = r(5), s = r(6);
      e.exports = {createCipheriv: (e2, t2, r2) => {
        const o = n.cipher.createCipher("AES-CTR", i(t2, "ascii"));
        return o.start({iv: i(r2, "ascii")}), {update: (e3) => (o.update(n.util.createBuffer(i(e3, "ascii"))), s(o.output.getBytes(), "ascii"))};
      }, createDecipheriv: (e2, t2, r2) => {
        const o = n.cipher.createDecipher("AES-CTR", i(t2, "ascii"));
        return o.start({iv: i(r2, "ascii")}), {update: (e3) => (o.update(n.util.createBuffer(i(e3, "ascii"))), s(o.output.getBytes(), "ascii"))};
      }};
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = {16: "aes-128-ctr", 32: "aes-256-ctr"};
      e.exports = function(e2) {
        const t2 = i[e2.length];
        if (!t2) {
          const t3 = Object.entries(i).map(([e3, t4]) => `${e3} (${t4})`).join(" / ");
          throw n(new Error(`Invalid key length ${e2.length} bytes. Must be ${t3}`), "ERR_INVALID_KEY_LENGTH");
        }
        return t2;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(228), i = r(13), s = r(0), o = {sha1: "sha1", "sha2-256": "sha256", "sha2-512": "sha512"};
      e.exports = function(e2, t2, r2, a, c) {
        const u = o[c];
        if (!u) {
          const e3 = Object.keys(o).join(" / ");
          throw s(new Error(`Hash '${c}' is unknown or not supported. Must be ${e3}`), "ERR_UNSUPPORTED_HASH_TYPE");
        }
        const h = n(e2, t2, r2, a, u);
        return i.encode64(h);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(497), i = r(105), s = r(147), o = r(27), a = r(5);
      function c(e2) {
        const t2 = [], r2 = e2.split("/").slice(1);
        if (r2.length === 1 && r2[0] === "")
          return [];
        for (let n2 = 0; n2 < r2.length; n2++) {
          const s2 = r2[n2], o2 = i(s2);
          if (o2.size !== 0) {
            if (n2++, n2 >= r2.length)
              throw v("invalid address: " + e2);
            if (o2.path) {
              t2.push([s2, m(r2.slice(n2).join("/"))]);
              break;
            }
            t2.push([s2, r2[n2]]);
          } else
            t2.push([s2]);
        }
        return t2;
      }
      function u(e2) {
        const t2 = [];
        return e2.map((e3) => {
          const r2 = w(e3);
          t2.push(r2.name), e3.length > 1 && t2.push(e3[1]);
        }), m(t2.join("/"));
      }
      function h(e2) {
        return e2.map((e3) => {
          Array.isArray(e3) || (e3 = [e3]);
          const t2 = w(e3);
          return e3.length > 1 ? [t2.code, n.toBytes(t2.code, e3[1])] : [t2.code];
        });
      }
      function f(e2) {
        return e2.map((e3) => {
          const t2 = w(e3);
          return e3.length > 1 ? [t2.code, n.toString(t2.code, e3[1])] : [t2.code];
        });
      }
      function d(e2) {
        return g(o(e2.map((e3) => {
          const t2 = w(e3);
          let r2 = Uint8Array.from(s.encode(t2.code));
          return e3.length > 1 && (r2 = o([r2, e3[1]])), r2;
        })));
      }
      function l(e2, t2) {
        if (e2.size > 0)
          return e2.size / 8;
        if (e2.size === 0)
          return 0;
        return s.decode(t2) + s.decode.bytes;
      }
      function p(e2) {
        const t2 = [];
        let r2 = 0;
        for (; r2 < e2.length; ) {
          const n2 = s.decode(e2, r2), o2 = s.decode.bytes, c2 = l(i(n2), e2.slice(r2 + o2));
          if (c2 === 0) {
            t2.push([n2]), r2 += o2;
            continue;
          }
          const u2 = e2.slice(r2 + o2, r2 + o2 + c2);
          if (r2 += c2 + o2, r2 > e2.length)
            throw v("Invalid address Uint8Array: " + a(e2, "base16"));
          t2.push([n2, u2]);
        }
        return t2;
      }
      function y(e2) {
        return d(h(c(e2 = m(e2))));
      }
      function g(e2) {
        const t2 = b(e2);
        if (t2)
          throw t2;
        return Uint8Array.from(e2);
      }
      function b(e2) {
        try {
          p(e2);
        } catch (t2) {
          return t2;
        }
      }
      function m(e2) {
        return "/" + e2.trim().split("/").filter((e3) => e3).join("/");
      }
      function v(e2) {
        return new Error("Error parsing address: " + e2);
      }
      function w(e2) {
        return i(e2[0]);
      }
      e.exports = {stringToStringTuples: c, stringTuplesToString: u, tuplesToStringTuples: f, stringTuplesToTuples: h, bytesToTuples: p, tuplesToBytes: d, bytesToString: function(e2) {
        const t2 = p(e2);
        return u(f(t2));
      }, stringToBytes: y, fromString: function(e2) {
        return y(e2);
      }, fromBytes: g, validateBytes: b, isValidBytes: function(e2) {
        return b(e2) === void 0;
      }, cleanPath: m, ParseError: v, protoFromTuple: w, sizeForAddr: l};
    }, function(e, t, r) {
      "use strict";
      const n = r(498), i = r(105), s = r(4), o = r(30), a = r(147), c = r(5), u = r(6), h = r(27);
      function f(e2, t2) {
        return t2 instanceof Uint8Array ? f.toString(e2, t2) : f.toBytes(e2, t2);
      }
      function d(e2) {
        if (!n.isIP(e2))
          throw new Error("invalid ip address");
        return n.toBytes(e2);
      }
      function l(e2) {
        const t2 = new ArrayBuffer(2);
        return new DataView(t2).setUint16(0, e2), new Uint8Array(t2);
      }
      function p(e2) {
        return new DataView(e2.buffer).getUint16(0);
      }
      function y(e2) {
        const t2 = e2.slice(0, e2.length - 2), r2 = e2.slice(e2.length - 2);
        return c(t2, "base32") + ":" + p(r2);
      }
      e.exports = f, f.toString = function(e2, t2) {
        switch ((e2 = i(e2)).code) {
          case 4:
          case 41:
            return function(e3) {
              const t3 = n.toString(e3);
              if (!t3 || !n.isIP(t3))
                throw new Error("invalid ip address");
              return t3;
            }(t2);
          case 6:
          case 273:
          case 33:
          case 132:
            return p(t2);
          case 53:
          case 54:
          case 55:
          case 56:
          case 400:
          case 777:
            return function(e3) {
              const t3 = a.decode(e3);
              if ((e3 = e3.slice(a.decode.bytes)).length !== t3)
                throw new Error("inconsistent lengths");
              return c(e3);
            }(t2);
          case 421:
            return function(e3) {
              const t3 = a.decode(e3), r2 = e3.slice(a.decode.bytes);
              if (r2.length !== t3)
                throw new Error("inconsistent lengths");
              return c(r2, "base58btc");
            }(t2);
          case 444:
          case 445:
            return y(t2);
          default:
            return c(t2, "base16");
        }
      }, f.toBytes = function(e2, t2) {
        switch ((e2 = i(e2)).code) {
          case 4:
          case 41:
            return d(t2);
          case 6:
          case 273:
          case 33:
          case 132:
            return l(parseInt(t2, 10));
          case 53:
          case 54:
          case 55:
          case 56:
          case 400:
          case 777:
            return function(e3) {
              const t3 = u(e3), r2 = Uint8Array.from(a.encode(t3.length));
              return h([r2, t3], r2.length + t3.length);
            }(t2);
          case 421:
            return function(e3) {
              const t3 = new s(e3).multihash, r2 = Uint8Array.from(a.encode(t3.length));
              return h([r2, t3], r2.length + t3.length);
            }(t2);
          case 444:
            return function(e3) {
              const t3 = e3.split(":");
              if (t3.length !== 2)
                throw new Error("failed to parse onion addr: " + t3 + " does not contain a port number");
              if (t3[0].length !== 16)
                throw new Error("failed to parse onion addr: " + t3[0] + " not a Tor onion address.");
              const r2 = o.decode("b" + t3[0]), n2 = parseInt(t3[1], 10);
              if (n2 < 1 || n2 > 65536)
                throw new Error("Port number is not in range(1, 65536)");
              const i2 = l(n2);
              return h([r2, i2], r2.length + i2.length);
            }(t2);
          case 445:
            return function(e3) {
              const t3 = e3.split(":");
              if (t3.length !== 2)
                throw new Error("failed to parse onion addr: " + t3 + " does not contain a port number");
              if (t3[0].length !== 56)
                throw new Error("failed to parse onion addr: " + t3[0] + " not a Tor onion3 address.");
              const r2 = o.decode("b" + t3[0]), n2 = parseInt(t3[1], 10);
              if (n2 < 1 || n2 > 65536)
                throw new Error("Port number is not in range(1, 65536)");
              const i2 = l(n2);
              return h([r2, i2], r2.length + i2.length);
            }(t2);
          default:
            return u(t2, "base16");
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(499), i = r(5), s = n, o = n.v4, a = n.v6, c = function(e2, t2, r2) {
        var n2;
        if (r2 = ~~r2, o(e2))
          n2 = t2 || new Uint8Array(r2 + 4), e2.split(/\./g).map(function(e3) {
            n2[r2++] = 255 & parseInt(e3, 10);
          });
        else if (a(e2)) {
          var s2, u = e2.split(":", 8);
          for (s2 = 0; s2 < u.length; s2++) {
            var h;
            o(u[s2]) && (h = c(u[s2]), u[s2] = i(h.slice(0, 2), "base16")), h && ++s2 < 8 && u.splice(s2, 0, i(h.slice(2, 4), "base16"));
          }
          if (u[0] === "")
            for (; u.length < 8; )
              u.unshift("0");
          else if (u[u.length - 1] === "")
            for (; u.length < 8; )
              u.push("0");
          else if (u.length < 8) {
            for (s2 = 0; s2 < u.length && u[s2] !== ""; s2++)
              ;
            var f = [s2, "1"];
            for (s2 = 9 - u.length; s2 > 0; s2--)
              f.push("0");
            u.splice.apply(u, f);
          }
          for (n2 = t2 || new Uint8Array(r2 + 16), s2 = 0; s2 < u.length; s2++) {
            var d = parseInt(u[s2], 16);
            n2[r2++] = d >> 8 & 255, n2[r2++] = 255 & d;
          }
        }
        if (!n2)
          throw Error("Invalid ip address: " + e2);
        return n2;
      };
      e.exports = {isIP: s, isV4: o, isV6: a, toBytes: c, toString: function(e2, t2, r2) {
        t2 = ~~t2, r2 = r2 || e2.length - t2;
        var n2, i2 = [];
        const s2 = new DataView(e2.buffer);
        if (r2 === 4) {
          for (let n3 = 0; n3 < r2; n3++)
            i2.push(e2[t2 + n3]);
          n2 = i2.join(".");
        } else if (r2 === 16) {
          for (let e3 = 0; e3 < r2; e3 += 2)
            i2.push(s2.getUint16(t2 + e3).toString(16));
          n2 = (n2 = (n2 = i2.join(":")).replace(/(^|:)0(:0)*:0(:|$)/, "$1::$3")).replace(/:{3,4}/, "::");
        }
        return n2;
      }};
    }, function(e, t, r) {
      "use strict";
      const n = r(500), i = (e2) => n({exact: true}).test(e2);
      i.v4 = (e2) => n.v4({exact: true}).test(e2), i.v6 = (e2) => n.v6({exact: true}).test(e2), i.version = (e2) => i(e2) ? i.v4(e2) ? 4 : 6 : void 0, e.exports = i;
    }, function(e, t, r) {
      "use strict";
      const n = (e2) => e2 && e2.includeBoundaries ? "(?:(?<=\\s|^)(?=[a-fA-F\\d:])|(?<=[a-fA-F\\d:])(?=\\s|$))" : "", i = "(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}", s = "[a-fA-F\\d]{1,4}", o = `
(
(?:${s}:){7}(?:${s}|:)|                                // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8
(?:${s}:){6}(?:${i}|:${s}|:)|                         // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4
(?:${s}:){5}(?::${i}|(:${s}){1,2}|:)|                 // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4
(?:${s}:){4}(?:(:${s}){0,1}:${i}|(:${s}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4
(?:${s}:){3}(?:(:${s}){0,2}:${i}|(:${s}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4
(?:${s}:){2}(?:(:${s}){0,3}:${i}|(:${s}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4
(?:${s}:){1}(?:(:${s}){0,4}:${i}|(:${s}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4
(?::((?::${s}){0,5}:${i}|(?::${s}){1,7}|:))           // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4
)(%[0-9a-zA-Z]{1,})?                                           // %eth0            %1
`.replace(/\s*\/\/.*$/gm, "").replace(/\n/g, "").trim(), a = new RegExp(`(?:^${i}$)|(?:^${o}$)`), c = new RegExp(`^${i}$`), u = new RegExp(`^${o}$`), h = (e2) => e2 && e2.exact ? a : new RegExp(`(?:${n(e2)}${i}${n(e2)})|(?:${n(e2)}${o}${n(e2)})`, "g");
      h.v4 = (e2) => e2 && e2.exact ? c : new RegExp(`${n(e2)}${i}${n(e2)}`, "g"), h.v6 = (e2) => e2 && e2.exact ? u : new RegExp(`${n(e2)}${o}${n(e2)}`, "g"), e.exports = h;
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2, i) {
        r2 = r2 || [];
        var s = i = i || 0;
        for (; t2 >= n; )
          r2[i++] = 255 & t2 | 128, t2 /= 128;
        for (; -128 & t2; )
          r2[i++] = 255 & t2 | 128, t2 >>>= 7;
        return r2[i] = 0 | t2, e2.bytes = i - s + 1, r2;
      };
      var n = Math.pow(2, 31);
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2) {
        var n, i = 0, s = 0, o = r2 = r2 || 0, a = t2.length;
        do {
          if (o >= a)
            throw e2.bytes = 0, new RangeError("Could not decode varint");
          n = t2[o++], i += s < 28 ? (127 & n) << s : (127 & n) * Math.pow(2, s), s += 7;
        } while (n >= 128);
        return e2.bytes = o - r2, i;
      };
    }, function(e, t, r) {
      "use strict";
      var n = Math.pow(2, 7), i = Math.pow(2, 14), s = Math.pow(2, 21), o = Math.pow(2, 28), a = Math.pow(2, 35), c = Math.pow(2, 42), u = Math.pow(2, 49), h = Math.pow(2, 56), f = Math.pow(2, 63);
      e.exports = function(e2) {
        return e2 < n ? 1 : e2 < i ? 2 : e2 < s ? 3 : e2 < o ? 4 : e2 < a ? 5 : e2 < c ? 6 : e2 < u ? 7 : e2 < h ? 8 : e2 < f ? 9 : 10;
      };
    }, function(e, t, r) {
      "use strict";
      const {URLWithLegacySupport: n, format: i, URLSearchParams: s, defaultBase: o} = r(238), a = r(505);
      e.exports = {URL: n, URLSearchParams: s, format: i, relative: a, defaultBase: o};
    }, function(e, t, r) {
      "use strict";
      const {URLWithLegacySupport: n, format: i} = r(238);
      e.exports = (e2, t2 = {}, r2 = {}, s) => {
        let o, a = t2.protocol ? t2.protocol.replace(":", "") : "http";
        a = (r2[a] || s || a) + ":";
        try {
          o = new n(e2);
        } catch (u) {
          o = {};
        }
        const c = Object.assign({}, t2, {protocol: a || o.protocol, host: t2.host || o.host});
        return new n(e2, i(c)).toString();
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(507), i = r(509), {factory: s} = r(80), {fromNumberTo32BitBuf: o} = r(511), a = r(6), c = (e2) => async (t2) => {
        switch (e2) {
          case "sha3-224":
            return new Uint8Array(n.sha3_224.arrayBuffer(t2));
          case "sha3-256":
            return new Uint8Array(n.sha3_256.arrayBuffer(t2));
          case "sha3-384":
            return new Uint8Array(n.sha3_384.arrayBuffer(t2));
          case "sha3-512":
            return new Uint8Array(n.sha3_512.arrayBuffer(t2));
          case "shake-128":
            return new Uint8Array(n.shake128.create(128).update(t2).arrayBuffer());
          case "shake-256":
            return new Uint8Array(n.shake256.create(256).update(t2).arrayBuffer());
          case "keccak-224":
            return new Uint8Array(n.keccak224.arrayBuffer(t2));
          case "keccak-256":
            return new Uint8Array(n.keccak256.arrayBuffer(t2));
          case "keccak-384":
            return new Uint8Array(n.keccak384.arrayBuffer(t2));
          case "keccak-512":
            return new Uint8Array(n.keccak512.arrayBuffer(t2));
          case "murmur3-128":
            return a(i.x64.hash128(t2), "base16");
          case "murmur3-32":
            return o(i.x86.hash32(t2));
          default:
            throw new TypeError(e2 + " is not a supported algorithm");
        }
      };
      e.exports = {identity: (e2) => e2, sha1: s("sha1"), sha2256: s("sha2-256"), sha2512: s("sha2-512"), dblSha2256: s("dbl-sha2-256"), sha3224: c("sha3-224"), sha3256: c("sha3-256"), sha3384: c("sha3-384"), sha3512: c("sha3-512"), shake128: c("shake-128"), shake256: c("shake-256"), keccak224: c("keccak-224"), keccak256: c("keccak-256"), keccak384: c("keccak-384"), keccak512: c("keccak-512"), murmur3128: c("murmur3-128"), murmur332: c("murmur3-32"), addBlake: r(512)};
    }, function(e, t, r) {
      "use strict";
      (function(n, i) {
        var s;
        !function() {
          var o = "input is invalid type", a = typeof window == "object", c = a ? window : {};
          c.JS_SHA3_NO_WINDOW && (a = false);
          var u = !a && typeof self == "object";
          !c.JS_SHA3_NO_NODE_JS && typeof n == "object" && n.versions && n.versions.node ? c = i : u && (c = self);
          var h = !c.JS_SHA3_NO_COMMON_JS && typeof e == "object" && e.exports, f = r(508), d = !c.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer != "undefined", l = "0123456789abcdef".split(""), p = [4, 1024, 262144, 67108864], y = [0, 8, 16, 24], g = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648], b = [224, 256, 384, 512], m = [128, 256], v = ["hex", "buffer", "arrayBuffer", "array", "digest"], w = {128: 168, 256: 136};
          !c.JS_SHA3_NO_NODE_JS && Array.isArray || (Array.isArray = function(e2) {
            return Object.prototype.toString.call(e2) === "[object Array]";
          }), !d || !c.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW && ArrayBuffer.isView || (ArrayBuffer.isView = function(e2) {
            return typeof e2 == "object" && e2.buffer && e2.buffer.constructor === ArrayBuffer;
          });
          for (var _ = function(e2, t2, r2) {
            return function(n2) {
              return new D(e2, t2, e2).update(n2)[r2]();
            };
          }, E = function(e2, t2, r2) {
            return function(n2, i2) {
              return new D(e2, t2, i2).update(n2)[r2]();
            };
          }, S = function(e2, t2, r2) {
            return function(t3, n2, i2, s2) {
              return T["cshake" + e2].update(t3, n2, i2, s2)[r2]();
            };
          }, A = function(e2, t2, r2) {
            return function(t3, n2, i2, s2) {
              return T["kmac" + e2].update(t3, n2, i2, s2)[r2]();
            };
          }, I = function(e2, t2, r2, n2) {
            for (var i2 = 0; i2 < v.length; ++i2) {
              var s2 = v[i2];
              e2[s2] = t2(r2, n2, s2);
            }
            return e2;
          }, k = function(e2, t2) {
            var r2 = _(e2, t2, "hex");
            return r2.create = function() {
              return new D(e2, t2, e2);
            }, r2.update = function(e3) {
              return r2.create().update(e3);
            }, I(r2, _, e2, t2);
          }, R = [{name: "keccak", padding: [1, 256, 65536, 16777216], bits: b, createMethod: k}, {name: "sha3", padding: [6, 1536, 393216, 100663296], bits: b, createMethod: k}, {name: "shake", padding: [31, 7936, 2031616, 520093696], bits: m, createMethod: function(e2, t2) {
            var r2 = E(e2, t2, "hex");
            return r2.create = function(r3) {
              return new D(e2, t2, r3);
            }, r2.update = function(e3, t3) {
              return r2.create(t3).update(e3);
            }, I(r2, E, e2, t2);
          }}, {name: "cshake", padding: p, bits: m, createMethod: function(e2, t2) {
            var r2 = w[e2], n2 = S(e2, 0, "hex");
            return n2.create = function(n3, i2, s2) {
              return i2 || s2 ? new D(e2, t2, n3).bytepad([i2, s2], r2) : T["shake" + e2].create(n3);
            }, n2.update = function(e3, t3, r3, i2) {
              return n2.create(t3, r3, i2).update(e3);
            }, I(n2, S, e2, t2);
          }}, {name: "kmac", padding: p, bits: m, createMethod: function(e2, t2) {
            var r2 = w[e2], n2 = A(e2, 0, "hex");
            return n2.create = function(n3, i2, s2) {
              return new L(e2, t2, i2).bytepad(["KMAC", s2], r2).bytepad([n3], r2);
            }, n2.update = function(e3, t3, r3, i2) {
              return n2.create(e3, r3, i2).update(t3);
            }, I(n2, A, e2, t2);
          }}], T = {}, C = [], M = 0; M < R.length; ++M)
            for (var x = R[M], N = x.bits, P = 0; P < N.length; ++P) {
              var B = x.name + "_" + N[P];
              if (C.push(B), T[B] = x.createMethod(N[P], x.padding), x.name !== "sha3") {
                var O = x.name + N[P];
                C.push(O), T[O] = T[B];
              }
            }
          function D(e2, t2, r2) {
            this.blocks = [], this.s = [], this.padding = t2, this.outputBits = r2, this.reset = true, this.finalized = false, this.block = 0, this.start = 0, this.blockCount = 1600 - (e2 << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = r2 >> 5, this.extraBytes = (31 & r2) >> 3;
            for (var n2 = 0; n2 < 50; ++n2)
              this.s[n2] = 0;
          }
          function L(e2, t2, r2) {
            D.call(this, e2, t2, r2);
          }
          D.prototype.update = function(e2) {
            if (this.finalized)
              throw new Error("finalize already called");
            var t2, r2 = typeof e2;
            if (r2 !== "string") {
              if (r2 !== "object")
                throw new Error(o);
              if (e2 === null)
                throw new Error(o);
              if (d && e2.constructor === ArrayBuffer)
                e2 = new Uint8Array(e2);
              else if (!(Array.isArray(e2) || d && ArrayBuffer.isView(e2)))
                throw new Error(o);
              t2 = true;
            }
            for (var n2, i2, s2 = this.blocks, a2 = this.byteCount, c2 = e2.length, u2 = this.blockCount, h2 = 0, f2 = this.s; h2 < c2; ) {
              if (this.reset)
                for (this.reset = false, s2[0] = this.block, n2 = 1; n2 < u2 + 1; ++n2)
                  s2[n2] = 0;
              if (t2)
                for (n2 = this.start; h2 < c2 && n2 < a2; ++h2)
                  s2[n2 >> 2] |= e2[h2] << y[3 & n2++];
              else
                for (n2 = this.start; h2 < c2 && n2 < a2; ++h2)
                  (i2 = e2.charCodeAt(h2)) < 128 ? s2[n2 >> 2] |= i2 << y[3 & n2++] : i2 < 2048 ? (s2[n2 >> 2] |= (192 | i2 >> 6) << y[3 & n2++], s2[n2 >> 2] |= (128 | 63 & i2) << y[3 & n2++]) : i2 < 55296 || i2 >= 57344 ? (s2[n2 >> 2] |= (224 | i2 >> 12) << y[3 & n2++], s2[n2 >> 2] |= (128 | i2 >> 6 & 63) << y[3 & n2++], s2[n2 >> 2] |= (128 | 63 & i2) << y[3 & n2++]) : (i2 = 65536 + ((1023 & i2) << 10 | 1023 & e2.charCodeAt(++h2)), s2[n2 >> 2] |= (240 | i2 >> 18) << y[3 & n2++], s2[n2 >> 2] |= (128 | i2 >> 12 & 63) << y[3 & n2++], s2[n2 >> 2] |= (128 | i2 >> 6 & 63) << y[3 & n2++], s2[n2 >> 2] |= (128 | 63 & i2) << y[3 & n2++]);
              if (this.lastByteIndex = n2, n2 >= a2) {
                for (this.start = n2 - a2, this.block = s2[u2], n2 = 0; n2 < u2; ++n2)
                  f2[n2] ^= s2[n2];
                U(f2), this.reset = true;
              } else
                this.start = n2;
            }
            return this;
          }, D.prototype.encode = function(e2, t2) {
            var r2 = 255 & e2, n2 = 1, i2 = [r2];
            for (r2 = 255 & (e2 >>= 8); r2 > 0; )
              i2.unshift(r2), r2 = 255 & (e2 >>= 8), ++n2;
            return t2 ? i2.push(n2) : i2.unshift(n2), this.update(i2), i2.length;
          }, D.prototype.encodeString = function(e2) {
            var t2, r2 = typeof e2;
            if (r2 !== "string") {
              if (r2 !== "object")
                throw new Error(o);
              if (e2 === null)
                throw new Error(o);
              if (d && e2.constructor === ArrayBuffer)
                e2 = new Uint8Array(e2);
              else if (!(Array.isArray(e2) || d && ArrayBuffer.isView(e2)))
                throw new Error(o);
              t2 = true;
            }
            var n2 = 0, i2 = e2.length;
            if (t2)
              n2 = i2;
            else
              for (var s2 = 0; s2 < e2.length; ++s2) {
                var a2 = e2.charCodeAt(s2);
                a2 < 128 ? n2 += 1 : a2 < 2048 ? n2 += 2 : a2 < 55296 || a2 >= 57344 ? n2 += 3 : (a2 = 65536 + ((1023 & a2) << 10 | 1023 & e2.charCodeAt(++s2)), n2 += 4);
              }
            return n2 += this.encode(8 * n2), this.update(e2), n2;
          }, D.prototype.bytepad = function(e2, t2) {
            for (var r2 = this.encode(t2), n2 = 0; n2 < e2.length; ++n2)
              r2 += this.encodeString(e2[n2]);
            var i2 = t2 - r2 % t2, s2 = [];
            return s2.length = i2, this.update(s2), this;
          }, D.prototype.finalize = function() {
            if (!this.finalized) {
              this.finalized = true;
              var e2 = this.blocks, t2 = this.lastByteIndex, r2 = this.blockCount, n2 = this.s;
              if (e2[t2 >> 2] |= this.padding[3 & t2], this.lastByteIndex === this.byteCount)
                for (e2[0] = e2[r2], t2 = 1; t2 < r2 + 1; ++t2)
                  e2[t2] = 0;
              for (e2[r2 - 1] |= 2147483648, t2 = 0; t2 < r2; ++t2)
                n2[t2] ^= e2[t2];
              U(n2);
            }
          }, D.prototype.toString = D.prototype.hex = function() {
            this.finalize();
            for (var e2, t2 = this.blockCount, r2 = this.s, n2 = this.outputBlocks, i2 = this.extraBytes, s2 = 0, o2 = 0, a2 = ""; o2 < n2; ) {
              for (s2 = 0; s2 < t2 && o2 < n2; ++s2, ++o2)
                e2 = r2[s2], a2 += l[e2 >> 4 & 15] + l[15 & e2] + l[e2 >> 12 & 15] + l[e2 >> 8 & 15] + l[e2 >> 20 & 15] + l[e2 >> 16 & 15] + l[e2 >> 28 & 15] + l[e2 >> 24 & 15];
              o2 % t2 == 0 && (U(r2), s2 = 0);
            }
            return i2 && (e2 = r2[s2], a2 += l[e2 >> 4 & 15] + l[15 & e2], i2 > 1 && (a2 += l[e2 >> 12 & 15] + l[e2 >> 8 & 15]), i2 > 2 && (a2 += l[e2 >> 20 & 15] + l[e2 >> 16 & 15])), a2;
          }, D.prototype.arrayBuffer = function() {
            this.finalize();
            var e2, t2 = this.blockCount, r2 = this.s, n2 = this.outputBlocks, i2 = this.extraBytes, s2 = 0, o2 = 0, a2 = this.outputBits >> 3;
            e2 = i2 ? new ArrayBuffer(n2 + 1 << 2) : new ArrayBuffer(a2);
            for (var c2 = new Uint32Array(e2); o2 < n2; ) {
              for (s2 = 0; s2 < t2 && o2 < n2; ++s2, ++o2)
                c2[o2] = r2[s2];
              o2 % t2 == 0 && U(r2);
            }
            return i2 && (c2[s2] = r2[s2], e2 = e2.slice(0, a2)), e2;
          }, D.prototype.buffer = D.prototype.arrayBuffer, D.prototype.digest = D.prototype.array = function() {
            this.finalize();
            for (var e2, t2, r2 = this.blockCount, n2 = this.s, i2 = this.outputBlocks, s2 = this.extraBytes, o2 = 0, a2 = 0, c2 = []; a2 < i2; ) {
              for (o2 = 0; o2 < r2 && a2 < i2; ++o2, ++a2)
                e2 = a2 << 2, t2 = n2[o2], c2[e2] = 255 & t2, c2[e2 + 1] = t2 >> 8 & 255, c2[e2 + 2] = t2 >> 16 & 255, c2[e2 + 3] = t2 >> 24 & 255;
              a2 % r2 == 0 && U(n2);
            }
            return s2 && (e2 = a2 << 2, t2 = n2[o2], c2[e2] = 255 & t2, s2 > 1 && (c2[e2 + 1] = t2 >> 8 & 255), s2 > 2 && (c2[e2 + 2] = t2 >> 16 & 255)), c2;
          }, L.prototype = new D(), L.prototype.finalize = function() {
            return this.encode(this.outputBits, true), D.prototype.finalize.call(this);
          };
          var U = function(e2) {
            var t2, r2, n2, i2, s2, o2, a2, c2, u2, h2, f2, d2, l2, p2, y2, b2, m2, v2, w2, _2, E2, S2, A2, I2, k2, R2, T2, C2, M2, x2, N2, P2, B2, O2, D2, L2, U2, j, F, z, q, K, V, H, G, $, W, Y, X, J, Z, Q, ee, te, re, ne, ie, se, oe, ae, ce, ue, he;
            for (n2 = 0; n2 < 48; n2 += 2)
              i2 = e2[0] ^ e2[10] ^ e2[20] ^ e2[30] ^ e2[40], s2 = e2[1] ^ e2[11] ^ e2[21] ^ e2[31] ^ e2[41], o2 = e2[2] ^ e2[12] ^ e2[22] ^ e2[32] ^ e2[42], a2 = e2[3] ^ e2[13] ^ e2[23] ^ e2[33] ^ e2[43], c2 = e2[4] ^ e2[14] ^ e2[24] ^ e2[34] ^ e2[44], u2 = e2[5] ^ e2[15] ^ e2[25] ^ e2[35] ^ e2[45], h2 = e2[6] ^ e2[16] ^ e2[26] ^ e2[36] ^ e2[46], f2 = e2[7] ^ e2[17] ^ e2[27] ^ e2[37] ^ e2[47], t2 = (d2 = e2[8] ^ e2[18] ^ e2[28] ^ e2[38] ^ e2[48]) ^ (o2 << 1 | a2 >>> 31), r2 = (l2 = e2[9] ^ e2[19] ^ e2[29] ^ e2[39] ^ e2[49]) ^ (a2 << 1 | o2 >>> 31), e2[0] ^= t2, e2[1] ^= r2, e2[10] ^= t2, e2[11] ^= r2, e2[20] ^= t2, e2[21] ^= r2, e2[30] ^= t2, e2[31] ^= r2, e2[40] ^= t2, e2[41] ^= r2, t2 = i2 ^ (c2 << 1 | u2 >>> 31), r2 = s2 ^ (u2 << 1 | c2 >>> 31), e2[2] ^= t2, e2[3] ^= r2, e2[12] ^= t2, e2[13] ^= r2, e2[22] ^= t2, e2[23] ^= r2, e2[32] ^= t2, e2[33] ^= r2, e2[42] ^= t2, e2[43] ^= r2, t2 = o2 ^ (h2 << 1 | f2 >>> 31), r2 = a2 ^ (f2 << 1 | h2 >>> 31), e2[4] ^= t2, e2[5] ^= r2, e2[14] ^= t2, e2[15] ^= r2, e2[24] ^= t2, e2[25] ^= r2, e2[34] ^= t2, e2[35] ^= r2, e2[44] ^= t2, e2[45] ^= r2, t2 = c2 ^ (d2 << 1 | l2 >>> 31), r2 = u2 ^ (l2 << 1 | d2 >>> 31), e2[6] ^= t2, e2[7] ^= r2, e2[16] ^= t2, e2[17] ^= r2, e2[26] ^= t2, e2[27] ^= r2, e2[36] ^= t2, e2[37] ^= r2, e2[46] ^= t2, e2[47] ^= r2, t2 = h2 ^ (i2 << 1 | s2 >>> 31), r2 = f2 ^ (s2 << 1 | i2 >>> 31), e2[8] ^= t2, e2[9] ^= r2, e2[18] ^= t2, e2[19] ^= r2, e2[28] ^= t2, e2[29] ^= r2, e2[38] ^= t2, e2[39] ^= r2, e2[48] ^= t2, e2[49] ^= r2, p2 = e2[0], y2 = e2[1], $ = e2[11] << 4 | e2[10] >>> 28, W = e2[10] << 4 | e2[11] >>> 28, C2 = e2[20] << 3 | e2[21] >>> 29, M2 = e2[21] << 3 | e2[20] >>> 29, ae = e2[31] << 9 | e2[30] >>> 23, ce = e2[30] << 9 | e2[31] >>> 23, K = e2[40] << 18 | e2[41] >>> 14, V = e2[41] << 18 | e2[40] >>> 14, O2 = e2[2] << 1 | e2[3] >>> 31, D2 = e2[3] << 1 | e2[2] >>> 31, b2 = e2[13] << 12 | e2[12] >>> 20, m2 = e2[12] << 12 | e2[13] >>> 20, Y = e2[22] << 10 | e2[23] >>> 22, X = e2[23] << 10 | e2[22] >>> 22, x2 = e2[33] << 13 | e2[32] >>> 19, N2 = e2[32] << 13 | e2[33] >>> 19, ue = e2[42] << 2 | e2[43] >>> 30, he = e2[43] << 2 | e2[42] >>> 30, te = e2[5] << 30 | e2[4] >>> 2, re = e2[4] << 30 | e2[5] >>> 2, L2 = e2[14] << 6 | e2[15] >>> 26, U2 = e2[15] << 6 | e2[14] >>> 26, v2 = e2[25] << 11 | e2[24] >>> 21, w2 = e2[24] << 11 | e2[25] >>> 21, J = e2[34] << 15 | e2[35] >>> 17, Z = e2[35] << 15 | e2[34] >>> 17, P2 = e2[45] << 29 | e2[44] >>> 3, B2 = e2[44] << 29 | e2[45] >>> 3, I2 = e2[6] << 28 | e2[7] >>> 4, k2 = e2[7] << 28 | e2[6] >>> 4, ne = e2[17] << 23 | e2[16] >>> 9, ie = e2[16] << 23 | e2[17] >>> 9, j = e2[26] << 25 | e2[27] >>> 7, F = e2[27] << 25 | e2[26] >>> 7, _2 = e2[36] << 21 | e2[37] >>> 11, E2 = e2[37] << 21 | e2[36] >>> 11, Q = e2[47] << 24 | e2[46] >>> 8, ee = e2[46] << 24 | e2[47] >>> 8, H = e2[8] << 27 | e2[9] >>> 5, G = e2[9] << 27 | e2[8] >>> 5, R2 = e2[18] << 20 | e2[19] >>> 12, T2 = e2[19] << 20 | e2[18] >>> 12, se = e2[29] << 7 | e2[28] >>> 25, oe = e2[28] << 7 | e2[29] >>> 25, z = e2[38] << 8 | e2[39] >>> 24, q = e2[39] << 8 | e2[38] >>> 24, S2 = e2[48] << 14 | e2[49] >>> 18, A2 = e2[49] << 14 | e2[48] >>> 18, e2[0] = p2 ^ ~b2 & v2, e2[1] = y2 ^ ~m2 & w2, e2[10] = I2 ^ ~R2 & C2, e2[11] = k2 ^ ~T2 & M2, e2[20] = O2 ^ ~L2 & j, e2[21] = D2 ^ ~U2 & F, e2[30] = H ^ ~$ & Y, e2[31] = G ^ ~W & X, e2[40] = te ^ ~ne & se, e2[41] = re ^ ~ie & oe, e2[2] = b2 ^ ~v2 & _2, e2[3] = m2 ^ ~w2 & E2, e2[12] = R2 ^ ~C2 & x2, e2[13] = T2 ^ ~M2 & N2, e2[22] = L2 ^ ~j & z, e2[23] = U2 ^ ~F & q, e2[32] = $ ^ ~Y & J, e2[33] = W ^ ~X & Z, e2[42] = ne ^ ~se & ae, e2[43] = ie ^ ~oe & ce, e2[4] = v2 ^ ~_2 & S2, e2[5] = w2 ^ ~E2 & A2, e2[14] = C2 ^ ~x2 & P2, e2[15] = M2 ^ ~N2 & B2, e2[24] = j ^ ~z & K, e2[25] = F ^ ~q & V, e2[34] = Y ^ ~J & Q, e2[35] = X ^ ~Z & ee, e2[44] = se ^ ~ae & ue, e2[45] = oe ^ ~ce & he, e2[6] = _2 ^ ~S2 & p2, e2[7] = E2 ^ ~A2 & y2, e2[16] = x2 ^ ~P2 & I2, e2[17] = N2 ^ ~B2 & k2, e2[26] = z ^ ~K & O2, e2[27] = q ^ ~V & D2, e2[36] = J ^ ~Q & H, e2[37] = Z ^ ~ee & G, e2[46] = ae ^ ~ue & te, e2[47] = ce ^ ~he & re, e2[8] = S2 ^ ~p2 & b2, e2[9] = A2 ^ ~y2 & m2, e2[18] = P2 ^ ~I2 & R2, e2[19] = B2 ^ ~k2 & T2, e2[28] = K ^ ~O2 & L2, e2[29] = V ^ ~D2 & U2, e2[38] = Q ^ ~H & $, e2[39] = ee ^ ~G & W, e2[48] = ue ^ ~te & ne, e2[49] = he ^ ~re & ie, e2[0] ^= g[n2], e2[1] ^= g[n2 + 1];
          };
          if (h)
            e.exports = T;
          else {
            for (M = 0; M < C.length; ++M)
              c[C[M]] = T[C[M]];
            f && ((s = function() {
              return T;
            }.call(t, r, t, e)) === void 0 || (e.exports = s));
          }
        }();
      }).call(this, r(10), r(12));
    }, function(e, t) {
      (function(t2) {
        e.exports = t2;
      }).call(this, {});
    }, function(e, t, r) {
      "use strict";
      e.exports = r(510);
    }, function(e, t, r) {
      "use strict";
      !function(r2, n) {
        var i = {version: "3.0.0", x86: {}, x64: {}, inputValidation: true};
        function s(e2) {
          if (!Array.isArray(e2) && !ArrayBuffer.isView(e2))
            return false;
          for (var t2 = 0; t2 < e2.length; t2++)
            if (!Number.isInteger(e2[t2]) || e2[t2] < 0 || e2[t2] > 255)
              return false;
          return true;
        }
        function o(e2, t2) {
          return (65535 & e2) * t2 + (((e2 >>> 16) * t2 & 65535) << 16);
        }
        function a(e2, t2) {
          return e2 << t2 | e2 >>> 32 - t2;
        }
        function c(e2) {
          return e2 = o(e2 ^= e2 >>> 16, 2246822507), e2 = o(e2 ^= e2 >>> 13, 3266489909), e2 ^= e2 >>> 16;
        }
        function u(e2, t2) {
          e2 = [e2[0] >>> 16, 65535 & e2[0], e2[1] >>> 16, 65535 & e2[1]], t2 = [t2[0] >>> 16, 65535 & t2[0], t2[1] >>> 16, 65535 & t2[1]];
          var r3 = [0, 0, 0, 0];
          return r3[3] += e2[3] + t2[3], r3[2] += r3[3] >>> 16, r3[3] &= 65535, r3[2] += e2[2] + t2[2], r3[1] += r3[2] >>> 16, r3[2] &= 65535, r3[1] += e2[1] + t2[1], r3[0] += r3[1] >>> 16, r3[1] &= 65535, r3[0] += e2[0] + t2[0], r3[0] &= 65535, [r3[0] << 16 | r3[1], r3[2] << 16 | r3[3]];
        }
        function h(e2, t2) {
          e2 = [e2[0] >>> 16, 65535 & e2[0], e2[1] >>> 16, 65535 & e2[1]], t2 = [t2[0] >>> 16, 65535 & t2[0], t2[1] >>> 16, 65535 & t2[1]];
          var r3 = [0, 0, 0, 0];
          return r3[3] += e2[3] * t2[3], r3[2] += r3[3] >>> 16, r3[3] &= 65535, r3[2] += e2[2] * t2[3], r3[1] += r3[2] >>> 16, r3[2] &= 65535, r3[2] += e2[3] * t2[2], r3[1] += r3[2] >>> 16, r3[2] &= 65535, r3[1] += e2[1] * t2[3], r3[0] += r3[1] >>> 16, r3[1] &= 65535, r3[1] += e2[2] * t2[2], r3[0] += r3[1] >>> 16, r3[1] &= 65535, r3[1] += e2[3] * t2[1], r3[0] += r3[1] >>> 16, r3[1] &= 65535, r3[0] += e2[0] * t2[3] + e2[1] * t2[2] + e2[2] * t2[1] + e2[3] * t2[0], r3[0] &= 65535, [r3[0] << 16 | r3[1], r3[2] << 16 | r3[3]];
        }
        function f(e2, t2) {
          return (t2 %= 64) === 32 ? [e2[1], e2[0]] : t2 < 32 ? [e2[0] << t2 | e2[1] >>> 32 - t2, e2[1] << t2 | e2[0] >>> 32 - t2] : (t2 -= 32, [e2[1] << t2 | e2[0] >>> 32 - t2, e2[0] << t2 | e2[1] >>> 32 - t2]);
        }
        function d(e2, t2) {
          return (t2 %= 64) === 0 ? e2 : t2 < 32 ? [e2[0] << t2 | e2[1] >>> 32 - t2, e2[1] << t2] : [e2[1] << t2 - 32, 0];
        }
        function l(e2, t2) {
          return [e2[0] ^ t2[0], e2[1] ^ t2[1]];
        }
        function p(e2) {
          return e2 = l(e2, [0, e2[0] >>> 1]), e2 = l(e2 = h(e2, [4283543511, 3981806797]), [0, e2[0] >>> 1]), e2 = l(e2 = h(e2, [3301882366, 444984403]), [0, e2[0] >>> 1]);
        }
        i.x86.hash32 = function(e2, t2) {
          if (!i.inputValidation || s(e2)) {
            t2 = t2 || 0;
            for (var r3 = e2.length % 4, n2 = e2.length - r3, u2 = t2, h2 = 0, f2 = 3432918353, d2 = 461845907, l2 = 0; l2 < n2; l2 += 4)
              h2 = o(h2 = e2[l2] | e2[l2 + 1] << 8 | e2[l2 + 2] << 16 | e2[l2 + 3] << 24, f2), h2 = o(h2 = a(h2, 15), d2), u2 = o(u2 = a(u2 ^= h2, 13), 5) + 3864292196;
            switch (h2 = 0, r3) {
              case 3:
                h2 ^= e2[l2 + 2] << 16;
              case 2:
                h2 ^= e2[l2 + 1] << 8;
              case 1:
                h2 = o(h2 ^= e2[l2], f2), u2 ^= h2 = o(h2 = a(h2, 15), d2);
            }
            return (u2 = c(u2 ^= e2.length)) >>> 0;
          }
        }, i.x86.hash128 = function(e2, t2) {
          if (!i.inputValidation || s(e2)) {
            t2 = t2 || 0;
            for (var r3 = e2.length % 16, n2 = e2.length - r3, u2 = t2, h2 = t2, f2 = t2, d2 = t2, l2 = 0, p2 = 0, y = 0, g = 0, b = 597399067, m = 2869860233, v = 951274213, w = 2716044179, _ = 0; _ < n2; _ += 16)
              l2 = e2[_] | e2[_ + 1] << 8 | e2[_ + 2] << 16 | e2[_ + 3] << 24, p2 = e2[_ + 4] | e2[_ + 5] << 8 | e2[_ + 6] << 16 | e2[_ + 7] << 24, y = e2[_ + 8] | e2[_ + 9] << 8 | e2[_ + 10] << 16 | e2[_ + 11] << 24, g = e2[_ + 12] | e2[_ + 13] << 8 | e2[_ + 14] << 16 | e2[_ + 15] << 24, l2 = a(l2 = o(l2, b), 15), u2 = a(u2 ^= l2 = o(l2, m), 19), u2 = o(u2 += h2, 5) + 1444728091, p2 = a(p2 = o(p2, m), 16), h2 = a(h2 ^= p2 = o(p2, v), 17), h2 = o(h2 += f2, 5) + 197830471, y = a(y = o(y, v), 17), f2 = a(f2 ^= y = o(y, w), 15), f2 = o(f2 += d2, 5) + 2530024501, g = a(g = o(g, w), 18), d2 = a(d2 ^= g = o(g, b), 13), d2 = o(d2 += u2, 5) + 850148119;
            switch (l2 = 0, p2 = 0, y = 0, g = 0, r3) {
              case 15:
                g ^= e2[_ + 14] << 16;
              case 14:
                g ^= e2[_ + 13] << 8;
              case 13:
                g = o(g ^= e2[_ + 12], w), d2 ^= g = o(g = a(g, 18), b);
              case 12:
                y ^= e2[_ + 11] << 24;
              case 11:
                y ^= e2[_ + 10] << 16;
              case 10:
                y ^= e2[_ + 9] << 8;
              case 9:
                y = o(y ^= e2[_ + 8], v), f2 ^= y = o(y = a(y, 17), w);
              case 8:
                p2 ^= e2[_ + 7] << 24;
              case 7:
                p2 ^= e2[_ + 6] << 16;
              case 6:
                p2 ^= e2[_ + 5] << 8;
              case 5:
                p2 = o(p2 ^= e2[_ + 4], m), h2 ^= p2 = o(p2 = a(p2, 16), v);
              case 4:
                l2 ^= e2[_ + 3] << 24;
              case 3:
                l2 ^= e2[_ + 2] << 16;
              case 2:
                l2 ^= e2[_ + 1] << 8;
              case 1:
                l2 = o(l2 ^= e2[_], b), u2 ^= l2 = o(l2 = a(l2, 15), m);
            }
            return u2 ^= e2.length, u2 += h2 ^= e2.length, u2 += f2 ^= e2.length, h2 += u2 += d2 ^= e2.length, f2 += u2, d2 += u2, u2 = c(u2), u2 += h2 = c(h2), u2 += f2 = c(f2), h2 += u2 += d2 = c(d2), f2 += u2, d2 += u2, ("00000000" + (u2 >>> 0).toString(16)).slice(-8) + ("00000000" + (h2 >>> 0).toString(16)).slice(-8) + ("00000000" + (f2 >>> 0).toString(16)).slice(-8) + ("00000000" + (d2 >>> 0).toString(16)).slice(-8);
          }
        }, i.x64.hash128 = function(e2, t2) {
          if (!i.inputValidation || s(e2)) {
            t2 = t2 || 0;
            for (var r3 = e2.length % 16, n2 = e2.length - r3, o2 = [0, t2], a2 = [0, t2], c2 = [0, 0], y = [0, 0], g = [2277735313, 289559509], b = [1291169091, 658871167], m = 0; m < n2; m += 16)
              c2 = [e2[m + 4] | e2[m + 5] << 8 | e2[m + 6] << 16 | e2[m + 7] << 24, e2[m] | e2[m + 1] << 8 | e2[m + 2] << 16 | e2[m + 3] << 24], y = [e2[m + 12] | e2[m + 13] << 8 | e2[m + 14] << 16 | e2[m + 15] << 24, e2[m + 8] | e2[m + 9] << 8 | e2[m + 10] << 16 | e2[m + 11] << 24], c2 = f(c2 = h(c2, g), 31), o2 = u(o2 = f(o2 = l(o2, c2 = h(c2, b)), 27), a2), o2 = u(h(o2, [0, 5]), [0, 1390208809]), y = f(y = h(y, b), 33), a2 = u(a2 = f(a2 = l(a2, y = h(y, g)), 31), o2), a2 = u(h(a2, [0, 5]), [0, 944331445]);
            switch (c2 = [0, 0], y = [0, 0], r3) {
              case 15:
                y = l(y, d([0, e2[m + 14]], 48));
              case 14:
                y = l(y, d([0, e2[m + 13]], 40));
              case 13:
                y = l(y, d([0, e2[m + 12]], 32));
              case 12:
                y = l(y, d([0, e2[m + 11]], 24));
              case 11:
                y = l(y, d([0, e2[m + 10]], 16));
              case 10:
                y = l(y, d([0, e2[m + 9]], 8));
              case 9:
                y = h(y = l(y, [0, e2[m + 8]]), b), a2 = l(a2, y = h(y = f(y, 33), g));
              case 8:
                c2 = l(c2, d([0, e2[m + 7]], 56));
              case 7:
                c2 = l(c2, d([0, e2[m + 6]], 48));
              case 6:
                c2 = l(c2, d([0, e2[m + 5]], 40));
              case 5:
                c2 = l(c2, d([0, e2[m + 4]], 32));
              case 4:
                c2 = l(c2, d([0, e2[m + 3]], 24));
              case 3:
                c2 = l(c2, d([0, e2[m + 2]], 16));
              case 2:
                c2 = l(c2, d([0, e2[m + 1]], 8));
              case 1:
                c2 = h(c2 = l(c2, [0, e2[m]]), g), o2 = l(o2, c2 = h(c2 = f(c2, 31), b));
            }
            return o2 = u(o2 = l(o2, [0, e2.length]), a2 = l(a2, [0, e2.length])), a2 = u(a2, o2), o2 = u(o2 = p(o2), a2 = p(a2)), a2 = u(a2, o2), ("00000000" + (o2[0] >>> 0).toString(16)).slice(-8) + ("00000000" + (o2[1] >>> 0).toString(16)).slice(-8) + ("00000000" + (a2[0] >>> 0).toString(16)).slice(-8) + ("00000000" + (a2[1] >>> 0).toString(16)).slice(-8);
          }
        }, e.exports && (t = e.exports = i), t.murmurHash3 = i;
      }();
    }, function(e, t, r) {
      "use strict";
      e.exports = {fromNumberTo32BitBuf: (e2) => {
        const t2 = new Uint8Array(4);
        for (let r2 = 0; r2 < 4; r2++)
          t2[r2] = 255 & e2, e2 >>= 8;
        return t2;
      }};
    }, function(e, t, r) {
      "use strict";
      const n = r(513), i = {init: n.blake2bInit, update: n.blake2bUpdate, digest: n.blake2bFinal}, s = {init: n.blake2sInit, update: n.blake2sUpdate, digest: n.blake2sFinal}, o = (e2, t2) => async (r2) => {
        const n2 = t2.init(e2, null);
        return t2.update(n2, r2), t2.digest(n2);
      };
      e.exports = (e2) => {
        for (let t2 = 0; t2 < 64; t2++)
          e2[45569 + t2] = o(t2 + 1, i);
        for (let t2 = 0; t2 < 32; t2++)
          e2[45633 + t2] = o(t2 + 1, s);
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(514), i = r(515);
      e.exports = {blake2b: n.blake2b, blake2bHex: n.blake2bHex, blake2bInit: n.blake2bInit, blake2bUpdate: n.blake2bUpdate, blake2bFinal: n.blake2bFinal, blake2s: i.blake2s, blake2sHex: i.blake2sHex, blake2sInit: i.blake2sInit, blake2sUpdate: i.blake2sUpdate, blake2sFinal: i.blake2sFinal};
    }, function(e, t, r) {
      "use strict";
      var n = r(239);
      function i(e2, t2, r2) {
        var n2 = e2[t2] + e2[r2], i2 = e2[t2 + 1] + e2[r2 + 1];
        n2 >= 4294967296 && i2++, e2[t2] = n2, e2[t2 + 1] = i2;
      }
      function s(e2, t2, r2, n2) {
        var i2 = e2[t2] + r2;
        r2 < 0 && (i2 += 4294967296);
        var s2 = e2[t2 + 1] + n2;
        i2 >= 4294967296 && s2++, e2[t2] = i2, e2[t2 + 1] = s2;
      }
      function o(e2, t2) {
        return e2[t2] ^ e2[t2 + 1] << 8 ^ e2[t2 + 2] << 16 ^ e2[t2 + 3] << 24;
      }
      function a(e2, t2, r2, n2, o2, a2) {
        var c2 = f[o2], u2 = f[o2 + 1], d2 = f[a2], l2 = f[a2 + 1];
        i(h, e2, t2), s(h, e2, c2, u2);
        var p2 = h[n2] ^ h[e2], y2 = h[n2 + 1] ^ h[e2 + 1];
        h[n2] = y2, h[n2 + 1] = p2, i(h, r2, n2), p2 = h[t2] ^ h[r2], y2 = h[t2 + 1] ^ h[r2 + 1], h[t2] = p2 >>> 24 ^ y2 << 8, h[t2 + 1] = y2 >>> 24 ^ p2 << 8, i(h, e2, t2), s(h, e2, d2, l2), p2 = h[n2] ^ h[e2], y2 = h[n2 + 1] ^ h[e2 + 1], h[n2] = p2 >>> 16 ^ y2 << 16, h[n2 + 1] = y2 >>> 16 ^ p2 << 16, i(h, r2, n2), p2 = h[t2] ^ h[r2], y2 = h[t2 + 1] ^ h[r2 + 1], h[t2] = y2 >>> 31 ^ p2 << 1, h[t2 + 1] = p2 >>> 31 ^ y2 << 1;
      }
      var c = new Uint32Array([4089235720, 1779033703, 2227873595, 3144134277, 4271175723, 1013904242, 1595750129, 2773480762, 2917565137, 1359893119, 725511199, 2600822924, 4215389547, 528734635, 327033209, 1541459225]), u = new Uint8Array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3].map(function(e2) {
        return 2 * e2;
      })), h = new Uint32Array(32), f = new Uint32Array(32);
      function d(e2, t2) {
        var r2 = 0;
        for (r2 = 0; r2 < 16; r2++)
          h[r2] = e2.h[r2], h[r2 + 16] = c[r2];
        for (h[24] = h[24] ^ e2.t, h[25] = h[25] ^ e2.t / 4294967296, t2 && (h[28] = ~h[28], h[29] = ~h[29]), r2 = 0; r2 < 32; r2++)
          f[r2] = o(e2.b, 4 * r2);
        for (r2 = 0; r2 < 12; r2++)
          a(0, 8, 16, 24, u[16 * r2 + 0], u[16 * r2 + 1]), a(2, 10, 18, 26, u[16 * r2 + 2], u[16 * r2 + 3]), a(4, 12, 20, 28, u[16 * r2 + 4], u[16 * r2 + 5]), a(6, 14, 22, 30, u[16 * r2 + 6], u[16 * r2 + 7]), a(0, 10, 20, 30, u[16 * r2 + 8], u[16 * r2 + 9]), a(2, 12, 22, 24, u[16 * r2 + 10], u[16 * r2 + 11]), a(4, 14, 16, 26, u[16 * r2 + 12], u[16 * r2 + 13]), a(6, 8, 18, 28, u[16 * r2 + 14], u[16 * r2 + 15]);
        for (r2 = 0; r2 < 16; r2++)
          e2.h[r2] = e2.h[r2] ^ h[r2] ^ h[r2 + 16];
      }
      function l(e2, t2) {
        if (e2 === 0 || e2 > 64)
          throw new Error("Illegal output length, expected 0 < length <= 64");
        if (t2 && t2.length > 64)
          throw new Error("Illegal key, expected Uint8Array with 0 < length <= 64");
        for (var r2 = {b: new Uint8Array(128), h: new Uint32Array(16), t: 0, c: 0, outlen: e2}, n2 = 0; n2 < 16; n2++)
          r2.h[n2] = c[n2];
        var i2 = t2 ? t2.length : 0;
        return r2.h[0] ^= 16842752 ^ i2 << 8 ^ e2, t2 && (p(r2, t2), r2.c = 128), r2;
      }
      function p(e2, t2) {
        for (var r2 = 0; r2 < t2.length; r2++)
          e2.c === 128 && (e2.t += e2.c, d(e2, false), e2.c = 0), e2.b[e2.c++] = t2[r2];
      }
      function y(e2) {
        for (e2.t += e2.c; e2.c < 128; )
          e2.b[e2.c++] = 0;
        d(e2, true);
        for (var t2 = new Uint8Array(e2.outlen), r2 = 0; r2 < e2.outlen; r2++)
          t2[r2] = e2.h[r2 >> 2] >> 8 * (3 & r2);
        return t2;
      }
      function g(e2, t2, r2) {
        r2 = r2 || 64, e2 = n.normalizeInput(e2);
        var i2 = l(r2, t2);
        return p(i2, e2), y(i2);
      }
      e.exports = {blake2b: g, blake2bHex: function(e2, t2, r2) {
        var i2 = g(e2, t2, r2);
        return n.toHex(i2);
      }, blake2bInit: l, blake2bUpdate: p, blake2bFinal: y};
    }, function(e, t, r) {
      "use strict";
      var n = r(239);
      function i(e2, t2) {
        return e2[t2] ^ e2[t2 + 1] << 8 ^ e2[t2 + 2] << 16 ^ e2[t2 + 3] << 24;
      }
      function s(e2, t2, r2, n2, i2, s2) {
        u[e2] = u[e2] + u[t2] + i2, u[n2] = o(u[n2] ^ u[e2], 16), u[r2] = u[r2] + u[n2], u[t2] = o(u[t2] ^ u[r2], 12), u[e2] = u[e2] + u[t2] + s2, u[n2] = o(u[n2] ^ u[e2], 8), u[r2] = u[r2] + u[n2], u[t2] = o(u[t2] ^ u[r2], 7);
      }
      function o(e2, t2) {
        return e2 >>> t2 ^ e2 << 32 - t2;
      }
      var a = new Uint32Array([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]), c = new Uint8Array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0]), u = new Uint32Array(16), h = new Uint32Array(16);
      function f(e2, t2) {
        var r2 = 0;
        for (r2 = 0; r2 < 8; r2++)
          u[r2] = e2.h[r2], u[r2 + 8] = a[r2];
        for (u[12] ^= e2.t, u[13] ^= e2.t / 4294967296, t2 && (u[14] = ~u[14]), r2 = 0; r2 < 16; r2++)
          h[r2] = i(e2.b, 4 * r2);
        for (r2 = 0; r2 < 10; r2++)
          s(0, 4, 8, 12, h[c[16 * r2 + 0]], h[c[16 * r2 + 1]]), s(1, 5, 9, 13, h[c[16 * r2 + 2]], h[c[16 * r2 + 3]]), s(2, 6, 10, 14, h[c[16 * r2 + 4]], h[c[16 * r2 + 5]]), s(3, 7, 11, 15, h[c[16 * r2 + 6]], h[c[16 * r2 + 7]]), s(0, 5, 10, 15, h[c[16 * r2 + 8]], h[c[16 * r2 + 9]]), s(1, 6, 11, 12, h[c[16 * r2 + 10]], h[c[16 * r2 + 11]]), s(2, 7, 8, 13, h[c[16 * r2 + 12]], h[c[16 * r2 + 13]]), s(3, 4, 9, 14, h[c[16 * r2 + 14]], h[c[16 * r2 + 15]]);
        for (r2 = 0; r2 < 8; r2++)
          e2.h[r2] ^= u[r2] ^ u[r2 + 8];
      }
      function d(e2, t2) {
        if (!(e2 > 0 && e2 <= 32))
          throw new Error("Incorrect output length, should be in [1, 32]");
        var r2 = t2 ? t2.length : 0;
        if (t2 && !(r2 > 0 && r2 <= 32))
          throw new Error("Incorrect key length, should be in [1, 32]");
        var n2 = {h: new Uint32Array(a), b: new Uint32Array(64), c: 0, t: 0, outlen: e2};
        return n2.h[0] ^= 16842752 ^ r2 << 8 ^ e2, r2 > 0 && (l(n2, t2), n2.c = 64), n2;
      }
      function l(e2, t2) {
        for (var r2 = 0; r2 < t2.length; r2++)
          e2.c === 64 && (e2.t += e2.c, f(e2, false), e2.c = 0), e2.b[e2.c++] = t2[r2];
      }
      function p(e2) {
        for (e2.t += e2.c; e2.c < 64; )
          e2.b[e2.c++] = 0;
        f(e2, true);
        for (var t2 = new Uint8Array(e2.outlen), r2 = 0; r2 < e2.outlen; r2++)
          t2[r2] = e2.h[r2 >> 2] >> 8 * (3 & r2) & 255;
        return t2;
      }
      function y(e2, t2, r2) {
        r2 = r2 || 32, e2 = n.normalizeInput(e2);
        var i2 = d(r2, t2);
        return l(i2, e2), p(i2);
      }
      e.exports = {blake2s: y, blake2sHex: function(e2, t2, r2) {
        var i2 = y(e2, t2, r2);
        return n.toHex(i2);
      }, blake2sInit: d, blake2sUpdate: l, blake2sFinal: p};
    }, function(e, t, r) {
      "use strict";
      const {mergeOptions: n} = r(22), {isTest: i} = r(215), s = r(1)("ipfs"), {DAGNode: o} = r(16), a = r(28), c = r(17), u = r(533), {AlreadyInitializedError: h} = r(62), f = r(534), d = r(535), l = r(536), p = r(542), y = r(543), g = r(544), b = r(579), m = r(607), v = r(616), w = r(617), _ = r(618), E = r(622), S = r(628), A = r(634), I = r(676), k = r(677), R = r(286), T = r(678), C = r(83), M = r(683), x = r(686), N = r(687), P = r(711), B = r(719), O = r(729), D = r(801), L = r(803), U = r(804), j = r(809), F = r(1093), z = r(151), q = r(1117), K = r(1123), V = r(1124), H = r(1125), G = r(1126);
      class $ {
        constructor({print: e2, storage: t2, options: r2}) {
          const {peerId: n2, repo: i2, keychain: s2} = t2, o2 = z.create(F), a2 = M(r2.preload), c2 = new L(t2.repo), u2 = U({blockService: c2, print: e2, options: r2.ipld}), h2 = K({path: i2.path, repoOwner: r2.repoOwner}), j2 = l(), $2 = p({network: o2}), W2 = new b(r2), Y2 = T.reader({ipld: u2, preload: a2}), X2 = new m({dns: j2, ipns: W2, dagReader: Y2, peerId: n2, isOnline: $2, keychain: s2, options: r2}), J = y({ipld: u2, name: X2}), Z = new C({repo: i2, dagReader: Y2}), Q = new g({gcLock: h2, pinManager: Z, dagReader: Y2}), ee = new S({blockService: c2, preload: a2, gcLock: h2, pinManager: Z, pin: Q}), te = new T({ipld: u2, preload: a2, gcLock: h2, pin: Q, dagReader: Y2}), re = Object.assign(v({ipld: u2, resolve: J, preload: a2}), {local: w({repo: t2.repo})}), {add: ne, addAll: ie, cat: se, get: oe, ls: ae} = new A({gcLock: h2, preload: a2, pin: Q, block: ee, ipld: u2, options: r2.EXPERIMENTAL}), ce = N({ipld: u2, block: ee, blockService: c2, repo: i2, preload: a2, options: r2}), ue = x({files: ce, preload: a2, options: r2.preload});
          this.preload = a2, this.name = X2, this.ipld = u2, this.ipns = W2, this.pin = Q, this.resolve = J, this.block = ee, this.refs = re, this.start = f({network: o2, peerId: n2, repo: i2, blockService: c2, preload: a2, ipns: W2, mfsPreload: ue, print: e2, keychain: s2, options: r2}), this.stop = d({network: o2, preload: a2, mfsPreload: ue, blockService: c2, ipns: W2, repo: i2}), this.dht = H({network: o2, repo: i2}), this.pubsub = G({network: o2, config: r2.config}), this.dns = j2, this.isOnline = $2, this.id = k({network: o2, peerId: n2}), this.version = I({repo: i2}), this.bitswap = new _({network: o2}), this.bootstrap = new E({repo: i2}), this.config = R({repo: i2}), this.ping = V({network: o2}), this.add = ne, this.addAll = ie, this.cat = se, this.get = oe, this.ls = ae, this.dag = te, this.files = ce, this.key = new P({keychain: s2}), this.object = new B({ipld: u2, preload: a2, gcLock: h2, dag: te}), this.repo = new O({gcLock: h2, pin: Q, repo: i2, refs: re}), this.stats = new D({repo: i2, network: o2}), this.swarm = new q({network: o2}), Object.defineProperty(this, "libp2p", {get() {
            const e3 = o2.try();
            return e3 ? e3.libp2p : void 0;
          }});
        }
        async init() {
          throw new h();
        }
        static async create(e2 = {}) {
          const t2 = (e2 = n(X(), e2)).silent ? s : console.log, r2 = {...n(W(e2), e2), print: t2}, i2 = await j.start(r2), o2 = await i2.repo.config.getAll(), a2 = new $({storage: i2, print: t2, options: {...e2, config: o2}});
          if (await a2.preload.start(), a2.ipns.startOffline(i2), i2.isNew && !r2.emptyRepo) {
            const e3 = await Y(a2);
            s("adding default assets"), await u({addAll: a2.addAll, print: t2}), s("initializing IPNS keyspace"), await a2.ipns.initializeKeyspace(i2.peerId.privKey, e3.toString());
          }
          return e2.start !== false && await a2.start(), a2;
        }
      }
      e.exports = $;
      const W = ({init: e2}) => typeof e2 == "object" ? e2 : {}, Y = async (e2) => {
        const t2 = new o(new a("directory").marshal()), r2 = await e2.dag.put(t2, {version: 0, format: c.DAG_PB, hashAlg: c.SHA2_256, preload: false});
        return await e2.pin.add(r2), r2;
      }, X = () => ({start: true, EXPERIMENTAL: {}, preload: {enabled: !i, addresses: ["/dns4/node0.preload.ipfs.io/https", "/dns4/node1.preload.ipfs.io/https", "/dns4/node2.preload.ipfs.io/https", "/dns4/node3.preload.ipfs.io/https"]}});
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.urlAlphabet = void 0;
      t.urlAlphabet = "ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW";
    }, function(e, t, r) {
      "use strict";
      const {nanoid: n} = r(241);
      e.exports = (e2 = (e3) => e3) => e2(n());
    }, function(e, t, r) {
      "use strict";
      e.exports = r(242).TextEncoder;
    }, function(e, t, r) {
      "use strict";
      const n = r(240), i = r(244), s = r(246);
      e.exports = class extends i {
        constructor() {
          super(), this.data = {};
        }
        async put(e2, t2) {
          this.data[e2.toString()] = t2;
        }
        async get(e2) {
          if (!await this.has(e2))
            throw s.notFoundError();
          return this.data[e2.toString()];
        }
        async has(e2) {
          return this.data[e2.toString()] !== void 0;
        }
        async delete(e2) {
          delete this.data[e2.toString()];
        }
        *_all() {
          yield* Object.entries(this.data).map(([e2, t2]) => ({key: new n(e2), value: t2}));
        }
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function() {
        return Date.now();
      };
    }, function(e, t, r) {
      "use strict";
      class n extends Error {
        constructor(e2 = "request timed out") {
          super(e2), this.name = "TimeoutError", this.code = n.code;
        }
      }
      n.code = "ERR_TIMEOUT", t.TimeoutError = n;
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2) {
        function t2(e3) {
          let r2, i2 = null;
          function s(...e4) {
            if (!s.enabled)
              return;
            const n2 = s, i3 = Number(new Date()), o = i3 - (r2 || i3);
            n2.diff = o, n2.prev = r2, n2.curr = i3, r2 = i3, e4[0] = t2.coerce(e4[0]), typeof e4[0] != "string" && e4.unshift("%O");
            let a = 0;
            e4[0] = e4[0].replace(/%([a-zA-Z%])/g, (r3, i4) => {
              if (r3 === "%%")
                return "%";
              a++;
              const s2 = t2.formatters[i4];
              if (typeof s2 == "function") {
                const t3 = e4[a];
                r3 = s2.call(n2, t3), e4.splice(a, 1), a--;
              }
              return r3;
            }), t2.formatArgs.call(n2, e4);
            (n2.log || t2.log).apply(n2, e4);
          }
          return s.namespace = e3, s.useColors = t2.useColors(), s.color = t2.selectColor(e3), s.extend = n, s.destroy = t2.destroy, Object.defineProperty(s, "enabled", {enumerable: true, configurable: false, get: () => i2 === null ? t2.enabled(e3) : i2, set: (e4) => {
            i2 = e4;
          }}), typeof t2.init == "function" && t2.init(s), s;
        }
        function n(e3, r2) {
          const n2 = t2(this.namespace + (r2 === void 0 ? ":" : r2) + e3);
          return n2.log = this.log, n2;
        }
        function i(e3) {
          return e3.toString().substring(2, e3.toString().length - 2).replace(/\.\*\?$/, "*");
        }
        return t2.debug = t2, t2.default = t2, t2.coerce = function(e3) {
          if (e3 instanceof Error)
            return e3.stack || e3.message;
          return e3;
        }, t2.disable = function() {
          const e3 = [...t2.names.map(i), ...t2.skips.map(i).map((e4) => "-" + e4)].join(",");
          return t2.enable(""), e3;
        }, t2.enable = function(e3) {
          let r2;
          t2.save(e3), t2.names = [], t2.skips = [];
          const n2 = (typeof e3 == "string" ? e3 : "").split(/[\s,]+/), i2 = n2.length;
          for (r2 = 0; r2 < i2; r2++)
            n2[r2] && ((e3 = n2[r2].replace(/\*/g, ".*?"))[0] === "-" ? t2.skips.push(new RegExp("^" + e3.substr(1) + "$")) : t2.names.push(new RegExp("^" + e3 + "$")));
        }, t2.enabled = function(e3) {
          if (e3[e3.length - 1] === "*")
            return true;
          let r2, n2;
          for (r2 = 0, n2 = t2.skips.length; r2 < n2; r2++)
            if (t2.skips[r2].test(e3))
              return false;
          for (r2 = 0, n2 = t2.names.length; r2 < n2; r2++)
            if (t2.names[r2].test(e3))
              return true;
          return false;
        }, t2.humanize = r(524), t2.destroy = function() {
          console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
        }, Object.keys(e2).forEach((r2) => {
          t2[r2] = e2[r2];
        }), t2.names = [], t2.skips = [], t2.formatters = {}, t2.selectColor = function(e3) {
          let r2 = 0;
          for (let t3 = 0; t3 < e3.length; t3++)
            r2 = (r2 << 5) - r2 + e3.charCodeAt(t3), r2 |= 0;
          return t2.colors[Math.abs(r2) % t2.colors.length];
        }, t2.enable(t2.load()), t2;
      };
    }, function(e, t, r) {
      "use strict";
      var n = 1e3, i = 6e4, s = 60 * i, o = 24 * s;
      function a(e2, t2, r2, n2) {
        var i2 = t2 >= 1.5 * r2;
        return Math.round(e2 / r2) + " " + n2 + (i2 ? "s" : "");
      }
      e.exports = function(e2, t2) {
        t2 = t2 || {};
        var r2 = typeof e2;
        if (r2 === "string" && e2.length > 0)
          return function(e3) {
            if ((e3 = String(e3)).length > 100)
              return;
            var t3 = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e3);
            if (!t3)
              return;
            var r3 = parseFloat(t3[1]);
            switch ((t3[2] || "ms").toLowerCase()) {
              case "years":
              case "year":
              case "yrs":
              case "yr":
              case "y":
                return 315576e5 * r3;
              case "weeks":
              case "week":
              case "w":
                return 6048e5 * r3;
              case "days":
              case "day":
              case "d":
                return r3 * o;
              case "hours":
              case "hour":
              case "hrs":
              case "hr":
              case "h":
                return r3 * s;
              case "minutes":
              case "minute":
              case "mins":
              case "min":
              case "m":
                return r3 * i;
              case "seconds":
              case "second":
              case "secs":
              case "sec":
              case "s":
                return r3 * n;
              case "milliseconds":
              case "millisecond":
              case "msecs":
              case "msec":
              case "ms":
                return r3;
              default:
                return;
            }
          }(e2);
        if (r2 === "number" && isFinite(e2))
          return t2.long ? function(e3) {
            var t3 = Math.abs(e3);
            if (t3 >= o)
              return a(e3, t3, o, "day");
            if (t3 >= s)
              return a(e3, t3, s, "hour");
            if (t3 >= i)
              return a(e3, t3, i, "minute");
            if (t3 >= n)
              return a(e3, t3, n, "second");
            return e3 + " ms";
          }(e2) : function(e3) {
            var t3 = Math.abs(e3);
            if (t3 >= o)
              return Math.round(e3 / o) + "d";
            if (t3 >= s)
              return Math.round(e3 / s) + "h";
            if (t3 >= i)
              return Math.round(e3 / i) + "m";
            if (t3 >= n)
              return Math.round(e3 / n) + "s";
            return e3 + "ms";
          }(e2);
        throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e2));
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = r(248);
    }, function(e, t, r) {
      "use strict";
      e.exports = function() {
        var e2 = function(e3, r3) {
          return t2(e3.slice(), r3);
        };
        function t2(e3, t3) {
          typeof t3 != "function" && (t3 = function(e4, t4) {
            return String(e4).localeCompare(t4);
          });
          var n = e3.length;
          if (n <= 1)
            return e3;
          for (var i = new Array(n), s = 1; s < n; s *= 2) {
            r2(e3, t3, s, i);
            var o = e3;
            e3 = i, i = o;
          }
          return e3;
        }
        e2.inplace = function(e3, n) {
          var i = t2(e3, n);
          return i !== e3 && r2(i, null, e3.length, e3), e3;
        };
        var r2 = function(e3, t3, r3, n) {
          var i, s, o, a, c, u = e3.length, h = 0, f = 2 * r3;
          for (i = 0; i < u; i += f)
            for (o = (s = i + r3) + r3, s > u && (s = u), o > u && (o = u), a = i, c = s; ; )
              if (a < s && c < o)
                t3(e3[a], e3[c]) <= 0 ? n[h++] = e3[a++] : n[h++] = e3[c++];
              else if (a < s)
                n[h++] = e3[a++];
              else {
                if (!(c < o))
                  break;
                n[h++] = e3[c++];
              }
        };
        return e2;
      }();
    }, function(e, t, r) {
      "use strict";
      const n = r(61), i = r(253);
      e.exports = async (e2, t2 = {}) => {
        const r2 = await i.cid(e2.serialize(), t2);
        return new n(t2.name || "", e2.size, r2);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(249), i = r(254);
      e.exports = (e2, t2) => {
        const r2 = ((e3) => {
          if (i.isDAGLink(e3))
            return e3;
          if (!("cid" in e3 || "hash" in e3 || "Hash" in e3 || "multihash" in e3))
            throw new Error("Link must be a DAGLink or DAGLink-like. Convert the DAGNode into a DAGLink via `node.toDAGLink()`.");
          return new i(e3.Name || e3.name, e3.Tsize || e3.size, e3.Hash || e3.multihash || e3.hash || e3.cid);
        })(t2);
        e2.Links.push(r2), n(e2.Links);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(61);
      e.exports.createDagLinkFromB58EncodedHash = function(e2) {
        return new n(e2.Name || e2.name || "", e2.Tsize || e2.Size || e2.size || 0, e2.Hash || e2.hash || e2.multihash || e2.cid);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(19);
      e.exports = (e2, t2) => {
        let r2 = null;
        if (typeof t2 == "string" ? r2 = (e3) => e3.Name === t2 : (t2 instanceof Uint8Array || n.isCID(t2)) && (r2 = (e3) => i(e3.Hash, t2)), !r2)
          throw new Error("second arg needs to be a name or CID");
        {
          const t3 = e2.Links;
          let n2 = 0;
          for (; n2 < t3.length; ) {
            r2(t3[n2]) ? t3.splice(n2, 1) : n2++;
          }
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(255);
      t.resolve = (e2, t2) => {
        let r2 = i.deserialize(e2);
        const s = t2.split("/").filter(Boolean);
        for (; s.length; ) {
          const e3 = s.shift();
          if (r2[e3] === void 0) {
            for (const t3 of r2.Links)
              if (t3.Name === e3)
                return {value: t3.Hash, remainderPath: s.join("/")};
            throw new Error(`Object has no property '${e3}'`);
          }
          if (r2 = r2[e3], n.isCID(r2))
            return {value: r2, remainderPath: s.join("/")};
        }
        return {value: r2, remainderPath: ""};
      }, t.tree = function* (e2) {
        const t2 = i.deserialize(e2);
        yield "Data", yield "Links";
        for (let r2 = 0; r2 < t2.Links.length; r2++)
          yield "Links/" + r2, yield `Links/${r2}/Name`, yield `Links/${r2}/Tsize`, yield `Links/${r2}/Hash`;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = '\nsyntax = "proto2";\n\nmessage Data {\n  enum DataType {\n    Raw = 0;\n    Directory = 1;\n    File = 2;\n    Metadata = 3;\n    Symlink = 4;\n    HAMTShard = 5;\n  }\n\n  required DataType Type = 1;\n  optional bytes Data = 2;\n  optional uint64 filesize = 3;\n  repeated uint64 blocksizes = 4;\n  optional uint64 hashType = 5;\n  optional uint64 fanout = 6;\n  optional uint32 mode = 7;\n  optional UnixTime mtime = 8;\n}\n\nmessage UnixTime {\n  required int64 Seconds = 1;\n  optional fixed32 FractionalNanoseconds = 2;\n}\n\nmessage Metadata {\n  optional string MimeType = 1;\n}\n';
    }, function(e, t, r) {
      "use strict";
      e.exports = () => {
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(151);
      e.exports = ({network: e2, preload: t2, peerId: r2, keychain: i, repo: s, ipns: o, blockService: a, mfsPreload: c, print: u, options: h}) => async () => {
        const {bitswap: f, libp2p: d} = await n.start(e2, {peerId: r2, repo: s, print: u, options: h});
        a.setExchange(f), await Promise.all([o.startOnline({keychain: i, libp2p: d, peerId: r2, repo: s}), t2.start(), c.start()]);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(151);
      e.exports = ({network: e2, preload: t2, blockService: r2, ipns: i, repo: s, mfsPreload: o}) => async () => {
        r2.unsetExchange(), await Promise.all([t2.stop(), i.stop(), o.stop(), n.stop(e2), s.close()]);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(537), i = r(2);
      e.exports = () => i(async (e2, t2 = {}) => {
        if (typeof e2 != "string")
          throw new Error("Invalid arguments, domain must be a string");
        return e2 = function(e3) {
          return e3.endsWith(".eth") && (e3 = e3.replace(/.eth$/, ".eth.link")), e3;
        }(e2), n(e2, t2);
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(256), {default: i} = r(82), s = r(127), o = new n(1e3), a = new i({concurrency: 4}), c = (e2) => {
        if (e2.Path)
          return e2.Path;
        throw new Error(e2.Message);
      };
      e.exports = async (e2, t2) => (async (e3, t3 = {}) => {
        const r2 = new URLSearchParams(t3);
        r2.set("arg", e3);
        const n2 = r2.toString();
        if (!t3.nocache && o.has(n2)) {
          const e4 = o.get(n2);
          return c(e4);
        }
        const i2 = await a.add(async () => {
          const e4 = await s.get("https://ipfs.io/api/v0/dns", {searchParams: r2}), t4 = new URL(e4.url).search.slice(1), n3 = await e4.json();
          return o.set(t4, n3, 6e4), n3;
        });
        return c(i2);
      })(e2, t2);
    }, function(e, t, r) {
      "use strict";
      var n = Object.prototype.hasOwnProperty, i = "~";
      function s() {
      }
      function o(e2, t2, r2) {
        this.fn = e2, this.context = t2, this.once = r2 || false;
      }
      function a(e2, t2, r2, n2, s2) {
        if (typeof r2 != "function")
          throw new TypeError("The listener must be a function");
        var a2 = new o(r2, n2 || e2, s2), c2 = i ? i + t2 : t2;
        return e2._events[c2] ? e2._events[c2].fn ? e2._events[c2] = [e2._events[c2], a2] : e2._events[c2].push(a2) : (e2._events[c2] = a2, e2._eventsCount++), e2;
      }
      function c(e2, t2) {
        --e2._eventsCount == 0 ? e2._events = new s() : delete e2._events[t2];
      }
      function u() {
        this._events = new s(), this._eventsCount = 0;
      }
      Object.create && (s.prototype = Object.create(null), new s().__proto__ || (i = false)), u.prototype.eventNames = function() {
        var e2, t2, r2 = [];
        if (this._eventsCount === 0)
          return r2;
        for (t2 in e2 = this._events)
          n.call(e2, t2) && r2.push(i ? t2.slice(1) : t2);
        return Object.getOwnPropertySymbols ? r2.concat(Object.getOwnPropertySymbols(e2)) : r2;
      }, u.prototype.listeners = function(e2) {
        var t2 = i ? i + e2 : e2, r2 = this._events[t2];
        if (!r2)
          return [];
        if (r2.fn)
          return [r2.fn];
        for (var n2 = 0, s2 = r2.length, o2 = new Array(s2); n2 < s2; n2++)
          o2[n2] = r2[n2].fn;
        return o2;
      }, u.prototype.listenerCount = function(e2) {
        var t2 = i ? i + e2 : e2, r2 = this._events[t2];
        return r2 ? r2.fn ? 1 : r2.length : 0;
      }, u.prototype.emit = function(e2, t2, r2, n2, s2, o2) {
        var a2 = i ? i + e2 : e2;
        if (!this._events[a2])
          return false;
        var c2, u2, h = this._events[a2], f = arguments.length;
        if (h.fn) {
          switch (h.once && this.removeListener(e2, h.fn, void 0, true), f) {
            case 1:
              return h.fn.call(h.context), true;
            case 2:
              return h.fn.call(h.context, t2), true;
            case 3:
              return h.fn.call(h.context, t2, r2), true;
            case 4:
              return h.fn.call(h.context, t2, r2, n2), true;
            case 5:
              return h.fn.call(h.context, t2, r2, n2, s2), true;
            case 6:
              return h.fn.call(h.context, t2, r2, n2, s2, o2), true;
          }
          for (u2 = 1, c2 = new Array(f - 1); u2 < f; u2++)
            c2[u2 - 1] = arguments[u2];
          h.fn.apply(h.context, c2);
        } else {
          var d, l = h.length;
          for (u2 = 0; u2 < l; u2++)
            switch (h[u2].once && this.removeListener(e2, h[u2].fn, void 0, true), f) {
              case 1:
                h[u2].fn.call(h[u2].context);
                break;
              case 2:
                h[u2].fn.call(h[u2].context, t2);
                break;
              case 3:
                h[u2].fn.call(h[u2].context, t2, r2);
                break;
              case 4:
                h[u2].fn.call(h[u2].context, t2, r2, n2);
                break;
              default:
                if (!c2)
                  for (d = 1, c2 = new Array(f - 1); d < f; d++)
                    c2[d - 1] = arguments[d];
                h[u2].fn.apply(h[u2].context, c2);
            }
        }
        return true;
      }, u.prototype.on = function(e2, t2, r2) {
        return a(this, e2, t2, r2, false);
      }, u.prototype.once = function(e2, t2, r2) {
        return a(this, e2, t2, r2, true);
      }, u.prototype.removeListener = function(e2, t2, r2, n2) {
        var s2 = i ? i + e2 : e2;
        if (!this._events[s2])
          return this;
        if (!t2)
          return c(this, s2), this;
        var o2 = this._events[s2];
        if (o2.fn)
          o2.fn !== t2 || n2 && !o2.once || r2 && o2.context !== r2 || c(this, s2);
        else {
          for (var a2 = 0, u2 = [], h = o2.length; a2 < h; a2++)
            (o2[a2].fn !== t2 || n2 && !o2[a2].once || r2 && o2[a2].context !== r2) && u2.push(o2[a2]);
          u2.length ? this._events[s2] = u2.length === 1 ? u2[0] : u2 : c(this, s2);
        }
        return this;
      }, u.prototype.removeAllListeners = function(e2) {
        var t2;
        return e2 ? (t2 = i ? i + e2 : e2, this._events[t2] && c(this, t2)) : (this._events = new s(), this._eventsCount = 0), this;
      }, u.prototype.off = u.prototype.removeListener, u.prototype.addListener = u.prototype.on, u.prefixed = i, u.EventEmitter = u, e.exports = u;
    }, function(e, t, r) {
      "use strict";
      const n = r(152);
      class i extends Error {
        constructor(e2) {
          super(e2), this.name = "TimeoutError";
        }
      }
      const s = (e2, t2, r2) => new Promise((s2, o) => {
        if (typeof t2 != "number" || t2 < 0)
          throw new TypeError("Expected `milliseconds` to be a positive number");
        if (t2 === 1 / 0)
          return void s2(e2);
        const a = setTimeout(() => {
          if (typeof r2 == "function") {
            try {
              s2(r2());
            } catch (a2) {
              o(a2);
            }
            return;
          }
          const n2 = r2 instanceof Error ? r2 : new i(typeof r2 == "string" ? r2 : `Promise timed out after ${t2} milliseconds`);
          typeof e2.cancel == "function" && e2.cancel(), o(n2);
        }, t2);
        n(e2.then(s2, o), () => {
          clearTimeout(a);
        });
      });
      e.exports = s, e.exports.default = s, e.exports.TimeoutError = i;
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true});
      const n = r(541);
      t.default = class {
        constructor() {
          this._queue = [];
        }
        enqueue(e2, t2) {
          const r2 = {priority: (t2 = Object.assign({priority: 0}, t2)).priority, run: e2};
          if (this.size && this._queue[this.size - 1].priority >= t2.priority)
            return void this._queue.push(r2);
          const i = n.default(this._queue, r2, (e3, t3) => t3.priority - e3.priority);
          this._queue.splice(i, 0, r2);
        }
        dequeue() {
          const e2 = this._queue.shift();
          return e2 == null ? void 0 : e2.run;
        }
        filter(e2) {
          return this._queue.filter((t2) => t2.priority === e2.priority).map((e3) => e3.run);
        }
        get size() {
          return this._queue.length;
        }
      };
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.default = function(e2, t2, r2) {
        let n = 0, i = e2.length;
        for (; i > 0; ) {
          const s = i / 2 | 0;
          let o = n + s;
          r2(e2[o], t2) <= 0 ? (n = ++o, i -= s + 1) : i = s;
        }
        return n;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = ({network: e2}) => () => {
        const t2 = e2.try();
        return t2 != null && t2.libp2p.isStarted();
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(52), i = r(4), {cidToString: s} = r(257), o = r(2);
      e.exports = ({ipld: e2, name: t2}) => o(async function(r2, o2 = {}) {
        if (!n.path(r2))
          throw new Error("invalid argument " + r2);
        if (n.ipnsPath(r2)) {
          if (!t2)
            throw new Error("failed to resolve IPNS path: name API unavailable");
          for await (const e3 of t2.resolve(r2, o2))
            r2 = e3;
        }
        const [, , a, ...c] = r2.split("/"), u = new i(a);
        if (c.length === 0)
          return "/ipfs/" + s(u, {base: o2.cidBase});
        r2 = c.join("/");
        const h = e2.resolve(u, r2);
        let f = u, d = r2;
        for await (const e3 of h)
          i.isCID(e3.value) && (f = e3.value, d = e3.remainderPath);
        return `/ipfs/${s(f, {base: o2.cidBase})}${d ? "/" + d : ""}`;
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(545), i = r(546), s = r(576), o = r(577), a = r(578);
      e.exports = class {
        constructor({gcLock: e2, dagReader: t2, pinManager: r2}) {
          const c = i({gcLock: e2, dagReader: t2, pinManager: r2});
          this.addAll = c, this.add = n({addAll: c});
          const u = a({gcLock: e2, dagReader: t2, pinManager: r2});
          this.rmAll = u, this.rm = o({rmAll: u}), this.ls = s({dagReader: t2, pinManager: r2});
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(40);
      e.exports = ({addAll: e2}) => async (t2, r2 = {}) => await n(e2({path: t2, ...r2}, r2));
    }, function(e, t, r) {
      "use strict";
      const {resolvePath: n} = r(22), i = r(83), {PinTypes: s} = i, o = r(2), a = r(160);
      e.exports = ({pinManager: e2, gcLock: t2, dagReader: r2}) => o(async function* (i2, o2 = {}) {
        const c = async function* () {
          for await (const {path: t3, recursive: o3, metadata: c2} of a(i2)) {
            const i3 = await n(r2, t3), {reason: a2} = await e2.isPinnedWithType(i3, [s.recursive, s.direct]);
            if (a2 === "recursive" && !o3)
              throw new Error(i3 + " already pinned recursively");
            o3 ? await e2.pinRecursively(i3, {metadata: c2}) : await e2.pinDirectly(i3, {metadata: c2}), yield i3;
          }
        };
        if (!Boolean(o2.lock))
          return void (yield* c());
        const u = await t2.readLock();
        try {
          yield* c();
        } finally {
          u();
        }
      });
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const n = r(153).util, i = r(4), s = (e2, r2 = [], o = true) => (o && t2.isBuffer(e2) && (e2 = n.deserialize(e2)), function* () {
          for (let t3 of Object.keys(e2)) {
            let n2 = r2.slice();
            n2.push(t3);
            let o2 = e2[t3];
            if (o2 && typeof o2 == "object")
              if (Array.isArray(o2))
                for (let e3 = 0; e3 < o2.length; e3++) {
                  let t4 = n2.slice();
                  t4.push(e3);
                  let r3 = o2[e3];
                  i.isCID(r3) ? yield [t4.join("/"), r3] : typeof r3 == "object" && (yield* s(r3, n2, false));
                }
              else
                i.isCID(o2) ? yield [n2.join("/"), o2] : yield* s(o2, n2, false);
          }
        }());
        e.exports = s;
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      t.Diagnose = r(549), t.Decoder = r(259), t.Encoder = r(552), t.Simple = r(260), t.Tagged = r(261), t.decodeAll = t.Decoder.decodeAll, t.decodeFirst = t.Decoder.decodeFirst, t.diagnose = t.Diagnose.diagnose, t.encode = t.Encoder.encode, t.decode = t.Decoder.decode, t.leveldb = {decode: t.Decoder.decodeAll, encode: t.Encoder.encode, buffer: true, name: "cbor"};
    }, function(e, t, r) {
      "use strict";
      const {Buffer: n} = r(3), i = r(259), s = r(154);
      class o extends i {
        createTag(e2, t2) {
          return `${e2}(${t2})`;
        }
        createInt(e2) {
          return super.createInt(e2).toString();
        }
        createInt32(e2, t2) {
          return super.createInt32(e2, t2).toString();
        }
        createInt64(e2, t2, r2, n2) {
          return super.createInt64(e2, t2, r2, n2).toString();
        }
        createInt32Neg(e2, t2) {
          return super.createInt32Neg(e2, t2).toString();
        }
        createInt64Neg(e2, t2, r2, n2) {
          return super.createInt64Neg(e2, t2, r2, n2).toString();
        }
        createTrue() {
          return "true";
        }
        createFalse() {
          return "false";
        }
        createFloat(e2) {
          const t2 = super.createFloat(e2);
          return s.isNegativeZero(e2) ? "-0_1" : t2 + "_1";
        }
        createFloatSingle(e2, t2, r2, n2) {
          return super.createFloatSingle(e2, t2, r2, n2) + "_2";
        }
        createFloatDouble(e2, t2, r2, n2, i2, s2, o2, a2) {
          return super.createFloatDouble(e2, t2, r2, n2, i2, s2, o2, a2) + "_3";
        }
        createByteString(e2, t2) {
          const r2 = e2.join(", ");
          return t2 === -1 ? `(_ ${r2})` : "h'" + r2;
        }
        createByteStringFromHeap(e2, t2) {
          return `h'${n.from(super.createByteStringFromHeap(e2, t2)).toString("hex")}'`;
        }
        createInfinity() {
          return "Infinity_1";
        }
        createInfinityNeg() {
          return "-Infinity_1";
        }
        createNaN() {
          return "NaN_1";
        }
        createNaNNeg() {
          return "-NaN_1";
        }
        createNull() {
          return "null";
        }
        createUndefined() {
          return "undefined";
        }
        createSimpleUnassigned(e2) {
          return `simple(${e2})`;
        }
        createArray(e2, t2) {
          const r2 = super.createArray(e2, t2);
          return t2 === -1 ? `[_ ${r2.join(", ")}]` : `[${r2.join(", ")}]`;
        }
        createMap(e2, t2) {
          const r2 = super.createMap(e2), n2 = Array.from(r2.keys()).reduce(a(r2), "");
          return t2 === -1 ? `{_ ${n2}}` : `{${n2}}`;
        }
        createObject(e2, t2) {
          const r2 = super.createObject(e2), n2 = Object.keys(r2).reduce(a(r2), "");
          return t2 === -1 ? `{_ ${n2}}` : `{${n2}}`;
        }
        createUtf8String(e2, t2) {
          const r2 = e2.join(", ");
          return t2 === -1 ? `(_ ${r2})` : `"${r2}"`;
        }
        createUtf8StringFromHeap(e2, t2) {
          return `"${n.from(super.createUtf8StringFromHeap(e2, t2)).toString("utf8")}"`;
        }
        static diagnose(e2, t2) {
          typeof e2 == "string" && (e2 = n.from(e2, t2 || "hex"));
          return new o().decodeFirst(e2);
        }
      }
      function a(e2) {
        return (t2, r2) => t2 ? `${t2}, ${r2}: ${e2[r2]}` : `${r2}: ${e2[r2]}`;
      }
      e.exports = o;
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2, r2) {
        "use asm";
        var n = new e2.Uint8Array(r2);
        var i = t2.pushInt;
        var s = t2.pushInt32;
        var o = t2.pushInt32Neg;
        var a = t2.pushInt64;
        var c = t2.pushInt64Neg;
        var u = t2.pushFloat;
        var h = t2.pushFloatSingle;
        var f = t2.pushFloatDouble;
        var d = t2.pushTrue;
        var l = t2.pushFalse;
        var p = t2.pushUndefined;
        var y = t2.pushNull;
        var g = t2.pushInfinity;
        var b = t2.pushInfinityNeg;
        var m = t2.pushNaN;
        var v = t2.pushNaNNeg;
        var w = t2.pushArrayStart;
        var _ = t2.pushArrayStartFixed;
        var E = t2.pushArrayStartFixed32;
        var S = t2.pushArrayStartFixed64;
        var A = t2.pushObjectStart;
        var I = t2.pushObjectStartFixed;
        var k = t2.pushObjectStartFixed32;
        var R = t2.pushObjectStartFixed64;
        var T = t2.pushByteString;
        var C = t2.pushByteStringStart;
        var M = t2.pushUtf8String;
        var x = t2.pushUtf8StringStart;
        var N = t2.pushSimpleUnassigned;
        var P = t2.pushTagStart;
        var B = t2.pushTagStart4;
        var O = t2.pushTagStart8;
        var D = t2.pushTagUnassigned;
        var L = t2.pushBreak;
        var U = e2.Math.pow;
        var j = 0;
        var F = 0;
        var z = 0;
        function q(e3) {
          e3 = e3 | 0;
          j = 0;
          F = e3;
          while ((j | 0) < (F | 0)) {
            z = Xe[n[j] & 255](n[j] | 0) | 0;
            if ((z | 0) > 0) {
              break;
            }
          }
          return z | 0;
        }
        function K(e3) {
          e3 = e3 | 0;
          if (((j | 0) + (e3 | 0) | 0) < (F | 0)) {
            return 0;
          }
          return 1;
        }
        function V(e3) {
          e3 = e3 | 0;
          return n[e3 | 0] << 8 | n[e3 + 1 | 0] | 0;
        }
        function H(e3) {
          e3 = e3 | 0;
          return n[e3 | 0] << 24 | n[e3 + 1 | 0] << 16 | n[e3 + 2 | 0] << 8 | n[e3 + 3 | 0] | 0;
        }
        function G(e3) {
          e3 = e3 | 0;
          i(e3 | 0);
          j = j + 1 | 0;
          return 0;
        }
        function $(e3) {
          e3 = e3 | 0;
          if (K(1) | 0) {
            return 1;
          }
          i(n[j + 1 | 0] | 0);
          j = j + 2 | 0;
          return 0;
        }
        function W(e3) {
          e3 = e3 | 0;
          if (K(2) | 0) {
            return 1;
          }
          i(V(j + 1 | 0) | 0);
          j = j + 3 | 0;
          return 0;
        }
        function Y(e3) {
          e3 = e3 | 0;
          if (K(4) | 0) {
            return 1;
          }
          s(V(j + 1 | 0) | 0, V(j + 3 | 0) | 0);
          j = j + 5 | 0;
          return 0;
        }
        function X(e3) {
          e3 = e3 | 0;
          if (K(8) | 0) {
            return 1;
          }
          a(V(j + 1 | 0) | 0, V(j + 3 | 0) | 0, V(j + 5 | 0) | 0, V(j + 7 | 0) | 0);
          j = j + 9 | 0;
          return 0;
        }
        function J(e3) {
          e3 = e3 | 0;
          i(-1 - (e3 - 32 | 0) | 0);
          j = j + 1 | 0;
          return 0;
        }
        function Z(e3) {
          e3 = e3 | 0;
          if (K(1) | 0) {
            return 1;
          }
          i(-1 - (n[j + 1 | 0] | 0) | 0);
          j = j + 2 | 0;
          return 0;
        }
        function Q(e3) {
          e3 = e3 | 0;
          var t3 = 0;
          if (K(2) | 0) {
            return 1;
          }
          t3 = V(j + 1 | 0) | 0;
          i(-1 - (t3 | 0) | 0);
          j = j + 3 | 0;
          return 0;
        }
        function ee(e3) {
          e3 = e3 | 0;
          if (K(4) | 0) {
            return 1;
          }
          o(V(j + 1 | 0) | 0, V(j + 3 | 0) | 0);
          j = j + 5 | 0;
          return 0;
        }
        function te(e3) {
          e3 = e3 | 0;
          if (K(8) | 0) {
            return 1;
          }
          c(V(j + 1 | 0) | 0, V(j + 3 | 0) | 0, V(j + 5 | 0) | 0, V(j + 7 | 0) | 0);
          j = j + 9 | 0;
          return 0;
        }
        function re(e3) {
          e3 = e3 | 0;
          var t3 = 0;
          var r3 = 0;
          var n2 = 0;
          n2 = e3 - 64 | 0;
          if (K(n2 | 0) | 0) {
            return 1;
          }
          t3 = j + 1 | 0;
          r3 = (j + 1 | 0) + (n2 | 0) | 0;
          T(t3 | 0, r3 | 0);
          j = r3 | 0;
          return 0;
        }
        function ne(e3) {
          e3 = e3 | 0;
          var t3 = 0;
          var r3 = 0;
          var i2 = 0;
          if (K(1) | 0) {
            return 1;
          }
          i2 = n[j + 1 | 0] | 0;
          t3 = j + 2 | 0;
          r3 = (j + 2 | 0) + (i2 | 0) | 0;
          if (K(i2 + 1 | 0) | 0) {
            return 1;
          }
          T(t3 | 0, r3 | 0);
          j = r3 | 0;
          return 0;
        }
        function ie(e3) {
          e3 = e3 | 0;
          var t3 = 0;
          var r3 = 0;
          var n2 = 0;
          if (K(2) | 0) {
            return 1;
          }
          n2 = V(j + 1 | 0) | 0;
          t3 = j + 3 | 0;
          r3 = (j + 3 | 0) + (n2 | 0) | 0;
          if (K(n2 + 2 | 0) | 0) {
            return 1;
          }
          T(t3 | 0, r3 | 0);
          j = r3 | 0;
          return 0;
        }
        function se(e3) {
          e3 = e3 | 0;
          var t3 = 0;
          var r3 = 0;
          var n2 = 0;
          if (K(4) | 0) {
            return 1;
          }
          n2 = H(j + 1 | 0) | 0;
          t3 = j + 5 | 0;
          r3 = (j + 5 | 0) + (n2 | 0) | 0;
          if (K(n2 + 4 | 0) | 0) {
            return 1;
          }
          T(t3 | 0, r3 | 0);
          j = r3 | 0;
          return 0;
        }
        function oe(e3) {
          e3 = e3 | 0;
          return 1;
        }
        function ae(e3) {
          e3 = e3 | 0;
          C();
          j = j + 1 | 0;
          return 0;
        }
        function ce(e3) {
          e3 = e3 | 0;
          var t3 = 0;
          var r3 = 0;
          var n2 = 0;
          n2 = e3 - 96 | 0;
          if (K(n2 | 0) | 0) {
            return 1;
          }
          t3 = j + 1 | 0;
          r3 = (j + 1 | 0) + (n2 | 0) | 0;
          M(t3 | 0, r3 | 0);
          j = r3 | 0;
          return 0;
        }
        function ue(e3) {
          e3 = e3 | 0;
          var t3 = 0;
          var r3 = 0;
          var i2 = 0;
          if (K(1) | 0) {
            return 1;
          }
          i2 = n[j + 1 | 0] | 0;
          t3 = j + 2 | 0;
          r3 = (j + 2 | 0) + (i2 | 0) | 0;
          if (K(i2 + 1 | 0) | 0) {
            return 1;
          }
          M(t3 | 0, r3 | 0);
          j = r3 | 0;
          return 0;
        }
        function he(e3) {
          e3 = e3 | 0;
          var t3 = 0;
          var r3 = 0;
          var n2 = 0;
          if (K(2) | 0) {
            return 1;
          }
          n2 = V(j + 1 | 0) | 0;
          t3 = j + 3 | 0;
          r3 = (j + 3 | 0) + (n2 | 0) | 0;
          if (K(n2 + 2 | 0) | 0) {
            return 1;
          }
          M(t3 | 0, r3 | 0);
          j = r3 | 0;
          return 0;
        }
        function fe(e3) {
          e3 = e3 | 0;
          var t3 = 0;
          var r3 = 0;
          var n2 = 0;
          if (K(4) | 0) {
            return 1;
          }
          n2 = H(j + 1 | 0) | 0;
          t3 = j + 5 | 0;
          r3 = (j + 5 | 0) + (n2 | 0) | 0;
          if (K(n2 + 4 | 0) | 0) {
            return 1;
          }
          M(t3 | 0, r3 | 0);
          j = r3 | 0;
          return 0;
        }
        function de(e3) {
          e3 = e3 | 0;
          return 1;
        }
        function le(e3) {
          e3 = e3 | 0;
          x();
          j = j + 1 | 0;
          return 0;
        }
        function pe(e3) {
          e3 = e3 | 0;
          _(e3 - 128 | 0);
          j = j + 1 | 0;
          return 0;
        }
        function ye(e3) {
          e3 = e3 | 0;
          if (K(1) | 0) {
            return 1;
          }
          _(n[j + 1 | 0] | 0);
          j = j + 2 | 0;
          return 0;
        }
        function ge(e3) {
          e3 = e3 | 0;
          if (K(2) | 0) {
            return 1;
          }
          _(V(j + 1 | 0) | 0);
          j = j + 3 | 0;
          return 0;
        }
        function be(e3) {
          e3 = e3 | 0;
          if (K(4) | 0) {
            return 1;
          }
          E(V(j + 1 | 0) | 0, V(j + 3 | 0) | 0);
          j = j + 5 | 0;
          return 0;
        }
        function me(e3) {
          e3 = e3 | 0;
          if (K(8) | 0) {
            return 1;
          }
          S(V(j + 1 | 0) | 0, V(j + 3 | 0) | 0, V(j + 5 | 0) | 0, V(j + 7 | 0) | 0);
          j = j + 9 | 0;
          return 0;
        }
        function ve(e3) {
          e3 = e3 | 0;
          w();
          j = j + 1 | 0;
          return 0;
        }
        function we(e3) {
          e3 = e3 | 0;
          var t3 = 0;
          t3 = e3 - 160 | 0;
          if (K(t3 | 0) | 0) {
            return 1;
          }
          I(t3 | 0);
          j = j + 1 | 0;
          return 0;
        }
        function _e(e3) {
          e3 = e3 | 0;
          if (K(1) | 0) {
            return 1;
          }
          I(n[j + 1 | 0] | 0);
          j = j + 2 | 0;
          return 0;
        }
        function Ee(e3) {
          e3 = e3 | 0;
          if (K(2) | 0) {
            return 1;
          }
          I(V(j + 1 | 0) | 0);
          j = j + 3 | 0;
          return 0;
        }
        function Se(e3) {
          e3 = e3 | 0;
          if (K(4) | 0) {
            return 1;
          }
          k(V(j + 1 | 0) | 0, V(j + 3 | 0) | 0);
          j = j + 5 | 0;
          return 0;
        }
        function Ae(e3) {
          e3 = e3 | 0;
          if (K(8) | 0) {
            return 1;
          }
          R(V(j + 1 | 0) | 0, V(j + 3 | 0) | 0, V(j + 5 | 0) | 0, V(j + 7 | 0) | 0);
          j = j + 9 | 0;
          return 0;
        }
        function Ie(e3) {
          e3 = e3 | 0;
          A();
          j = j + 1 | 0;
          return 0;
        }
        function ke(e3) {
          e3 = e3 | 0;
          P(e3 - 192 | 0 | 0);
          j = j + 1 | 0;
          return 0;
        }
        function Re(e3) {
          e3 | 0;
          P(e3 | 0);
          j = j + 1 | 0;
          return 0;
        }
        function Te(e3) {
          e3 | 0;
          P(e3 | 0);
          j = j + 1 | 0;
          return 0;
        }
        function Ce(e3) {
          e3 | 0;
          P(e3 | 0);
          j = j + 1 | 0;
          return 0;
        }
        function Me(e3) {
          e3 | 0;
          P(e3 | 0);
          j = j + 1 | 0;
          return 0;
        }
        function xe(e3) {
          e3 = e3 | 0;
          P(e3 - 192 | 0 | 0);
          j = j + 1 | 0;
          return 0;
        }
        function Ne(e3) {
          e3 | 0;
          P(e3 | 0);
          j = j + 1 | 0;
          return 0;
        }
        function Pe(e3) {
          e3 | 0;
          P(e3 | 0);
          j = j + 1 | 0;
          return 0;
        }
        function Be(e3) {
          e3 | 0;
          P(e3 | 0);
          j = j + 1 | 0;
          return 0;
        }
        function Oe(e3) {
          e3 = e3 | 0;
          if (K(1) | 0) {
            return 1;
          }
          P(n[j + 1 | 0] | 0);
          j = j + 2 | 0;
          return 0;
        }
        function De(e3) {
          e3 = e3 | 0;
          if (K(2) | 0) {
            return 1;
          }
          P(V(j + 1 | 0) | 0);
          j = j + 3 | 0;
          return 0;
        }
        function Le(e3) {
          e3 = e3 | 0;
          if (K(4) | 0) {
            return 1;
          }
          B(V(j + 1 | 0) | 0, V(j + 3 | 0) | 0);
          j = j + 5 | 0;
          return 0;
        }
        function Ue(e3) {
          e3 = e3 | 0;
          if (K(8) | 0) {
            return 1;
          }
          O(V(j + 1 | 0) | 0, V(j + 3 | 0) | 0, V(j + 5 | 0) | 0, V(j + 7 | 0) | 0);
          j = j + 9 | 0;
          return 0;
        }
        function je(e3) {
          e3 = e3 | 0;
          N((e3 | 0) - 224 | 0);
          j = j + 1 | 0;
          return 0;
        }
        function Fe(e3) {
          e3 = e3 | 0;
          l();
          j = j + 1 | 0;
          return 0;
        }
        function ze(e3) {
          e3 = e3 | 0;
          d();
          j = j + 1 | 0;
          return 0;
        }
        function qe(e3) {
          e3 = e3 | 0;
          y();
          j = j + 1 | 0;
          return 0;
        }
        function Ke(e3) {
          e3 = e3 | 0;
          p();
          j = j + 1 | 0;
          return 0;
        }
        function Ve(e3) {
          e3 = e3 | 0;
          if (K(1) | 0) {
            return 1;
          }
          N(n[j + 1 | 0] | 0);
          j = j + 2 | 0;
          return 0;
        }
        function He(e3) {
          e3 = e3 | 0;
          var t3 = 0;
          var r3 = 0;
          var i2 = 1;
          var s2 = 0;
          var o2 = 0;
          var a2 = 0;
          if (K(2) | 0) {
            return 1;
          }
          t3 = n[j + 1 | 0] | 0;
          r3 = n[j + 2 | 0] | 0;
          if ((t3 | 0) & 128) {
            i2 = -1;
          }
          s2 = +(((t3 | 0) & 124) >> 2);
          o2 = +(((t3 | 0) & 3) << 8 | r3);
          if (+s2 == 0) {
            u(+(+i2 * 5960464477539063e-23 * +o2));
          } else if (+s2 == 31) {
            if (+i2 == 1) {
              if (+o2 > 0) {
                m();
              } else {
                g();
              }
            } else {
              if (+o2 > 0) {
                v();
              } else {
                b();
              }
            }
          } else {
            u(+(+i2 * U(2, +(+s2 - 25)) * +(1024 + o2)));
          }
          j = j + 3 | 0;
          return 0;
        }
        function Ge(e3) {
          e3 = e3 | 0;
          if (K(4) | 0) {
            return 1;
          }
          h(n[j + 1 | 0] | 0, n[j + 2 | 0] | 0, n[j + 3 | 0] | 0, n[j + 4 | 0] | 0);
          j = j + 5 | 0;
          return 0;
        }
        function $e(e3) {
          e3 = e3 | 0;
          if (K(8) | 0) {
            return 1;
          }
          f(n[j + 1 | 0] | 0, n[j + 2 | 0] | 0, n[j + 3 | 0] | 0, n[j + 4 | 0] | 0, n[j + 5 | 0] | 0, n[j + 6 | 0] | 0, n[j + 7 | 0] | 0, n[j + 8 | 0] | 0);
          j = j + 9 | 0;
          return 0;
        }
        function We(e3) {
          e3 = e3 | 0;
          return 1;
        }
        function Ye(e3) {
          e3 = e3 | 0;
          L();
          j = j + 1 | 0;
          return 0;
        }
        var Xe = [G, G, G, G, G, G, G, G, G, G, G, G, G, G, G, G, G, G, G, G, G, G, G, G, $, W, Y, X, We, We, We, We, J, J, J, J, J, J, J, J, J, J, J, J, J, J, J, J, J, J, J, J, J, J, J, J, Z, Q, ee, te, We, We, We, We, re, re, re, re, re, re, re, re, re, re, re, re, re, re, re, re, re, re, re, re, re, re, re, re, ne, ie, se, oe, We, We, We, ae, ce, ce, ce, ce, ce, ce, ce, ce, ce, ce, ce, ce, ce, ce, ce, ce, ce, ce, ce, ce, ce, ce, ce, ce, ue, he, fe, de, We, We, We, le, pe, pe, pe, pe, pe, pe, pe, pe, pe, pe, pe, pe, pe, pe, pe, pe, pe, pe, pe, pe, pe, pe, pe, pe, ye, ge, be, me, We, We, We, ve, we, we, we, we, we, we, we, we, we, we, we, we, we, we, we, we, we, we, we, we, we, we, we, we, _e, Ee, Se, Ae, We, We, We, Ie, ke, ke, ke, ke, ke, ke, xe, xe, xe, xe, xe, xe, xe, xe, xe, xe, xe, xe, xe, xe, xe, xe, xe, xe, Oe, De, Le, Ue, We, We, We, We, je, je, je, je, je, je, je, je, je, je, je, je, je, je, je, je, je, je, je, je, Fe, ze, qe, Ke, Ve, He, Ge, $e, We, We, We, Ye];
        return {parse: q};
      };
    }, function(e, t, r) {
      "use strict";
      const {URLWithLegacySupport: n, format: i} = r(263);
      e.exports = (e2, t2 = {}, r2 = {}, s) => {
        let o, a = t2.protocol ? t2.protocol.replace(":", "") : "http";
        a = (r2[a] || s || a) + ":";
        try {
          o = new n(e2);
        } catch (u) {
          o = {};
        }
        const c = Object.assign({}, t2, {protocol: a || o.protocol, host: t2.host || o.host});
        return new n(e2, i(c)).toString();
      };
    }, function(e, t, r) {
      "use strict";
      const {Buffer: n} = r(3), {URL: i} = r(262), s = r(29).BigNumber, o = r(154), a = r(108), c = a.MT, u = a.NUMBYTES, h = a.SHIFT32, f = a.SYMS, d = a.TAG, l = a.MT.SIMPLE_FLOAT << 5 | a.NUMBYTES.TWO, p = a.MT.SIMPLE_FLOAT << 5 | a.NUMBYTES.FOUR, y = a.MT.SIMPLE_FLOAT << 5 | a.NUMBYTES.EIGHT, g = a.MT.SIMPLE_FLOAT << 5 | a.SIMPLE.TRUE, b = a.MT.SIMPLE_FLOAT << 5 | a.SIMPLE.FALSE, m = a.MT.SIMPLE_FLOAT << 5 | a.SIMPLE.UNDEFINED, v = a.MT.SIMPLE_FLOAT << 5 | a.SIMPLE.NULL, w = new s("0x20000000000000"), _ = n.from("f97e00", "hex"), E = n.from("f9fc00", "hex"), S = n.from("f97c00", "hex");
      class A {
        constructor(e2) {
          e2 = e2 || {}, this.streaming = typeof e2.stream == "function", this.onData = e2.stream, this.semanticTypes = [[i, this._pushUrl], [s, this._pushBigNumber]];
          const t2 = e2.genTypes || [], r2 = t2.length;
          for (let n2 = 0; n2 < r2; n2++)
            this.addSemanticType(t2[n2][0], t2[n2][1]);
          this._reset();
        }
        addSemanticType(e2, t2) {
          const r2 = this.semanticTypes.length;
          for (let n2 = 0; n2 < r2; n2++) {
            if (this.semanticTypes[n2][0] === e2) {
              const e3 = this.semanticTypes[n2][1];
              return this.semanticTypes[n2][1] = t2, e3;
            }
          }
          return this.semanticTypes.push([e2, t2]), null;
        }
        push(e2) {
          return !e2 || (this.result[this.offset] = e2, this.resultMethod[this.offset] = 0, this.resultLength[this.offset] = e2.length, this.offset++, this.streaming && this.onData(this.finalize()), true);
        }
        pushWrite(e2, t2, r2) {
          return this.result[this.offset] = e2, this.resultMethod[this.offset] = t2, this.resultLength[this.offset] = r2, this.offset++, this.streaming && this.onData(this.finalize()), true;
        }
        _pushUInt8(e2) {
          return this.pushWrite(e2, 1, 1);
        }
        _pushUInt16BE(e2) {
          return this.pushWrite(e2, 2, 2);
        }
        _pushUInt32BE(e2) {
          return this.pushWrite(e2, 3, 4);
        }
        _pushDoubleBE(e2) {
          return this.pushWrite(e2, 4, 8);
        }
        _pushNaN() {
          return this.push(_);
        }
        _pushInfinity(e2) {
          const t2 = e2 < 0 ? E : S;
          return this.push(t2);
        }
        _pushFloat(e2) {
          const t2 = n.allocUnsafe(2);
          if (o.writeHalf(t2, e2) && o.parseHalf(t2) === e2)
            return this._pushUInt8(l) && this.push(t2);
          const r2 = n.allocUnsafe(4);
          return r2.writeFloatBE(e2, 0), r2.readFloatBE(0) === e2 ? this._pushUInt8(p) && this.push(r2) : this._pushUInt8(y) && this._pushDoubleBE(e2);
        }
        _pushInt(e2, t2, r2) {
          const n2 = t2 << 5;
          return e2 < 24 ? this._pushUInt8(n2 | e2) : e2 <= 255 ? this._pushUInt8(n2 | u.ONE) && this._pushUInt8(e2) : e2 <= 65535 ? this._pushUInt8(n2 | u.TWO) && this._pushUInt16BE(e2) : e2 <= 4294967295 ? this._pushUInt8(n2 | u.FOUR) && this._pushUInt32BE(e2) : e2 <= Number.MAX_SAFE_INTEGER ? this._pushUInt8(n2 | u.EIGHT) && this._pushUInt32BE(Math.floor(e2 / h)) && this._pushUInt32BE(e2 % h) : t2 === c.NEG_INT ? this._pushFloat(r2) : this._pushFloat(e2);
        }
        _pushIntNum(e2) {
          return e2 < 0 ? this._pushInt(-e2 - 1, c.NEG_INT, e2) : this._pushInt(e2, c.POS_INT);
        }
        _pushNumber(e2) {
          switch (false) {
            case e2 == e2:
              return this._pushNaN(e2);
            case isFinite(e2):
              return this._pushInfinity(e2);
            case e2 % 1 != 0:
              return this._pushIntNum(e2);
            default:
              return this._pushFloat(e2);
          }
        }
        _pushString(e2) {
          const t2 = n.byteLength(e2, "utf8");
          return this._pushInt(t2, c.UTF8_STRING) && this.pushWrite(e2, 5, t2);
        }
        _pushBoolean(e2) {
          return this._pushUInt8(e2 ? g : b);
        }
        _pushUndefined(e2) {
          return this._pushUInt8(m);
        }
        _pushArray(e2, t2) {
          const r2 = t2.length;
          if (!e2._pushInt(r2, c.ARRAY))
            return false;
          for (let n2 = 0; n2 < r2; n2++)
            if (!e2.pushAny(t2[n2]))
              return false;
          return true;
        }
        _pushTag(e2) {
          return this._pushInt(e2, c.TAG);
        }
        _pushDate(e2, t2) {
          return e2._pushTag(d.DATE_EPOCH) && e2.pushAny(Math.round(t2 / 1e3));
        }
        _pushBuffer(e2, t2) {
          return e2._pushInt(t2.length, c.BYTE_STRING) && e2.push(t2);
        }
        _pushNoFilter(e2, t2) {
          return e2._pushBuffer(e2, t2.slice());
        }
        _pushRegexp(e2, t2) {
          return e2._pushTag(d.REGEXP) && e2.pushAny(t2.source);
        }
        _pushSet(e2, t2) {
          if (!e2._pushInt(t2.size, c.ARRAY))
            return false;
          for (const r2 of t2)
            if (!e2.pushAny(r2))
              return false;
          return true;
        }
        _pushUrl(e2, t2) {
          return e2._pushTag(d.URI) && e2.pushAny(t2.format());
        }
        _pushBigint(e2) {
          let t2 = d.POS_BIGINT;
          e2.isNegative() && (e2 = e2.negated().minus(1), t2 = d.NEG_BIGINT);
          let r2 = e2.toString(16);
          r2.length % 2 && (r2 = "0" + r2);
          const i2 = n.from(r2, "hex");
          return this._pushTag(t2) && this._pushBuffer(this, i2);
        }
        _pushBigNumber(e2, t2) {
          if (t2.isNaN())
            return e2._pushNaN();
          if (!t2.isFinite())
            return e2._pushInfinity(t2.isNegative() ? -1 / 0 : 1 / 0);
          if (t2.isInteger())
            return e2._pushBigint(t2);
          if (!e2._pushTag(d.DECIMAL_FRAC) || !e2._pushInt(2, c.ARRAY))
            return false;
          const r2 = t2.decimalPlaces(), n2 = t2.multipliedBy(new s(10).pow(r2));
          return !!e2._pushIntNum(-r2) && (n2.abs().isLessThan(w) ? e2._pushIntNum(n2.toNumber()) : e2._pushBigint(n2));
        }
        _pushMap(e2, t2) {
          return !!e2._pushInt(t2.size, c.MAP) && this._pushRawMap(t2.size, Array.from(t2));
        }
        _pushObject(e2) {
          if (!e2)
            return this._pushUInt8(v);
          for (var t2 = this.semanticTypes.length, r2 = 0; r2 < t2; r2++)
            if (e2 instanceof this.semanticTypes[r2][0])
              return this.semanticTypes[r2][1].call(e2, this, e2);
          var n2 = e2.encodeCBOR;
          if (typeof n2 == "function")
            return n2.call(e2, this);
          var i2 = Object.keys(e2), s2 = i2.length;
          return !!this._pushInt(s2, c.MAP) && this._pushRawMap(s2, i2.map((t3) => [t3, e2[t3]]));
        }
        _pushRawMap(e2, t2) {
          t2 = t2.map(function(e3) {
            return e3[0] = A.encode(e3[0]), e3;
          }).sort(o.keySorter);
          for (var r2 = 0; r2 < e2; r2++) {
            if (!this.push(t2[r2][0]))
              return false;
            if (!this.pushAny(t2[r2][1]))
              return false;
          }
          return true;
        }
        write(e2) {
          return this.pushAny(e2);
        }
        pushAny(e2) {
          switch (function(e3) {
            return {}.toString.call(e3).slice(8, -1);
          }(e2)) {
            case "Number":
              return this._pushNumber(e2);
            case "String":
              return this._pushString(e2);
            case "Boolean":
              return this._pushBoolean(e2);
            case "Object":
              return this._pushObject(e2);
            case "Array":
              return this._pushArray(this, e2);
            case "Uint8Array":
              return this._pushBuffer(this, n.isBuffer(e2) ? e2 : n.from(e2));
            case "Null":
              return this._pushUInt8(v);
            case "Undefined":
              return this._pushUndefined(e2);
            case "Map":
              return this._pushMap(this, e2);
            case "Set":
              return this._pushSet(this, e2);
            case "URL":
              return this._pushUrl(this, e2);
            case "BigNumber":
              return this._pushBigNumber(this, e2);
            case "Date":
              return this._pushDate(this, e2);
            case "RegExp":
              return this._pushRegexp(this, e2);
            case "Symbol":
              switch (e2) {
                case f.NULL:
                  return this._pushObject(null);
                case f.UNDEFINED:
                  return this._pushUndefined(void 0);
                default:
                  throw new Error("Unknown symbol: " + e2.toString());
              }
            default:
              throw new Error("Unknown type: " + typeof e2 + ", " + (e2 ? e2.toString() : ""));
          }
        }
        finalize() {
          if (this.offset === 0)
            return null;
          for (var e2 = this.result, t2 = this.resultLength, r2 = this.resultMethod, i2 = this.offset, s2 = 0, o2 = 0; o2 < i2; o2++)
            s2 += t2[o2];
          var a2 = n.allocUnsafe(s2), c2 = 0, u2 = 0;
          for (o2 = 0; o2 < i2; o2++) {
            switch (u2 = t2[o2], r2[o2]) {
              case 0:
                e2[o2].copy(a2, c2);
                break;
              case 1:
                a2.writeUInt8(e2[o2], c2, true);
                break;
              case 2:
                a2.writeUInt16BE(e2[o2], c2, true);
                break;
              case 3:
                a2.writeUInt32BE(e2[o2], c2, true);
                break;
              case 4:
                a2.writeDoubleBE(e2[o2], c2, true);
                break;
              case 5:
                a2.write(e2[o2], c2, u2, "utf8");
                break;
              default:
                throw new Error("unkown method");
            }
            c2 += u2;
          }
          var h2 = a2;
          return this._reset(), h2;
        }
        _reset() {
          this.result = [], this.resultMethod = [], this.resultLength = [], this.offset = 0;
        }
        static encode(e2) {
          const t2 = new A();
          if (!t2.pushAny(e2))
            throw new Error("Failed to encode input");
          return t2.finalize();
        }
      }
      e.exports = A;
    }, function(e, t, r) {
      "use strict";
      var n = r(554);
      e.exports = function(e2) {
        if (!(e2 instanceof Object))
          throw new TypeError('"obj" must be an object (or inherit from it)');
        return function e3(t2, r2) {
          for (var i in r2 = new n(t2, r2), t2) {
            var s = t2[i];
            if (s instanceof Object && (r2.contains(s) || e3(s, r2)))
              return true;
          }
          return false;
        }(e2);
      };
    }, function(e, t, r) {
      "use strict";
      function n(e2, t2) {
        this.value = e2, this.next = t2;
      }
      e.exports = n, n.prototype.contains = function(e2) {
        for (var t2 = this; t2; ) {
          if (t2.value === e2)
            return true;
          t2 = t2.next;
        }
        return false;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(258);
      t.resolve = (e2, t2) => {
        let r2 = i.deserialize(e2);
        const s2 = t2.split("/").filter(Boolean);
        for (; s2.length; ) {
          const e3 = s2.shift();
          if (r2[e3] === void 0)
            throw new Error(`Object has no property '${e3}'`);
          if (r2 = r2[e3], n.isCID(r2))
            return {value: r2, remainderPath: s2.join("/")};
        }
        return {value: r2, remainderPath: ""};
      };
      const s = function* (e2, t2) {
        if (!(e2 instanceof Uint8Array || n.isCID(e2) || typeof e2 == "string" || e2 === null))
          for (const r2 of Object.keys(e2)) {
            const n2 = t2 === void 0 ? r2 : t2 + "/" + r2;
            yield n2, yield* s(e2[r2], n2);
          }
      };
      t.tree = function* (e2) {
        const t2 = i.deserialize(e2);
        yield* s(t2);
      };
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const n = r(63), i = r(64), s = (r(65), r(86), r(111)), o = r(54), a = r(29).BigNumber, c = r(87), u = o.MT, h = o.NUMBYTES, f = o.SYMS;
        function d(e2) {
          return e2 > 1 ? "s" : "";
        }
        class l extends n.Transform {
          constructor(e2) {
            const t3 = Object.assign({max_depth: 10}, e2, {readableObjectMode: false, writableObjectMode: false}), r2 = t3.max_depth;
            delete t3.max_depth, super(t3), this.depth = 1, this.max_depth = r2, this.all = new c(), this.parser = new s(t3), this.parser.on("value", this._on_value.bind(this)), this.parser.on("start", this._on_start.bind(this)), this.parser.on("start-string", this._on_start_string.bind(this)), this.parser.on("stop", this._on_stop.bind(this)), this.parser.on("more-bytes", this._on_more.bind(this)), this.parser.on("error", this._on_error.bind(this)), this.parser.on("data", this._on_data.bind(this)), this.parser.bs.on("read", this._on_read.bind(this));
          }
          _transform(e2, t3, r2) {
            this.parser.write(e2, t3, r2);
          }
          _flush(e2) {
            return this.parser._flush(e2);
          }
          static comment(e2, t3, r2) {
            if (e2 == null)
              throw new Error("input required");
            let n2 = typeof e2 == "string" ? "hex" : void 0, i2 = 10;
            switch (typeof t3) {
              case "function":
                r2 = t3;
                break;
              case "string":
                n2 = t3;
                break;
              case "number":
                i2 = t3;
                break;
              case "object":
                const e3 = t3.encoding, s3 = t3.max_depth;
                n2 = e3 != null ? e3 : n2, i2 = s3 != null ? s3 : i2;
                break;
              case "undefined":
                break;
              default:
                throw new Error("Unknown option type");
            }
            const s2 = new c(), o2 = new l({max_depth: i2});
            let a2 = null;
            return typeof r2 == "function" ? (o2.on("end", () => {
              r2(null, s2.toString("utf8"));
            }), o2.on("error", r2)) : a2 = new Promise((e3, t4) => (o2.on("end", () => {
              e3(s2.toString("utf8"));
            }), o2.on("error", t4))), o2.pipe(s2), o2.end(e2, n2), a2;
          }
          _on_error(e2) {
            return this.push("ERROR: ") && this.push(e2.toString()) && this.push("\n");
          }
          _on_read(e2) {
            this.all.write(e2);
            const t3 = e2.toString("hex");
            this.push(new Array(this.depth + 1).join("  ")), this.push(t3);
            let r2 = 2 * (this.max_depth - this.depth);
            return r2 -= t3.length, r2 < 1 && (r2 = 1), this.push(new Array(r2 + 1).join(" ")), this.push("-- ");
          }
          _on_more(e2, t3, r2, n2) {
            this.depth++;
            let i2 = "";
            switch (e2) {
              case u.POS_INT:
                i2 = "Positive number,";
                break;
              case u.NEG_INT:
                i2 = "Negative number,";
                break;
              case u.ARRAY:
                i2 = "Array, length";
                break;
              case u.MAP:
                i2 = "Map, count";
                break;
              case u.BYTE_STRING:
                i2 = "Bytes, length";
                break;
              case u.UTF8_STRING:
                i2 = "String, length";
                break;
              case u.SIMPLE_FLOAT:
                i2 = t3 === 1 ? "Simple value," : "Float,";
            }
            return this.push(i2 + " next " + t3 + " byte" + d(t3) + "\n");
          }
          _on_start_string(e2, t3, r2, n2) {
            this.depth++;
            let i2 = "";
            switch (e2) {
              case u.BYTE_STRING:
                i2 = "Bytes, length: " + t3;
                break;
              case u.UTF8_STRING:
                i2 = "String, length: " + t3.toString();
            }
            return this.push(i2 + "\n");
          }
          _on_start(e2, t3, r2, n2) {
            if (this.depth++, t3 !== f.BREAK)
              switch (r2) {
                case u.ARRAY:
                  this.push(`[${n2}], `);
                  break;
                case u.MAP:
                  n2 % 2 ? this.push(`{Val:${Math.floor(n2 / 2)}}, `) : this.push(`{Key:${Math.floor(n2 / 2)}}, `);
              }
            switch (e2) {
              case u.TAG:
                this.push("Tag #" + t3);
                break;
              case u.ARRAY:
                t3 === f.STREAM ? this.push("Array (streaming)") : this.push(`Array, ${t3} item${d(t3)}`);
                break;
              case u.MAP:
                t3 === f.STREAM ? this.push("Map (streaming)") : this.push(`Map, ${t3} pair${d(t3)}`);
                break;
              case u.BYTE_STRING:
                this.push("Bytes (streaming)");
                break;
              case u.UTF8_STRING:
                this.push("String (streaming)");
            }
            return this.push("\n");
          }
          _on_stop(e2) {
            return this.depth--;
          }
          _on_value(e2, r2, n2, s2) {
            if (e2 !== f.BREAK)
              switch (r2) {
                case u.ARRAY:
                  this.push(`[${n2}], `);
                  break;
                case u.MAP:
                  n2 % 2 ? this.push(`{Val:${Math.floor(n2 / 2)}}, `) : this.push(`{Key:${Math.floor(n2 / 2)}}, `);
              }
            switch (e2 === f.BREAK ? this.push("BREAK\n") : e2 === f.NULL ? this.push("null\n") : e2 === f.UNDEFINED ? this.push("undefined\n") : typeof e2 == "string" ? (this.depth--, e2.length > 0 && (this.push(JSON.stringify(e2)), this.push("\n"))) : t2.isBuffer(e2) ? (this.depth--, e2.length > 0 && (this.push(e2.toString("hex")), this.push("\n"))) : e2 instanceof a ? (this.push(e2.toString()), this.push("\n")) : (this.push(i.inspect(e2)), this.push("\n")), s2) {
              case h.ONE:
              case h.TWO:
              case h.FOUR:
              case h.EIGHT:
                this.depth--;
            }
          }
          _on_data() {
            return this.push("0x"), this.push(this.all.read().toString("hex")), this.push("\n");
          }
        }
        e.exports = l;
      }).call(this, r(3).Buffer);
    }, function(e, t) {
    }, function(e, t, r) {
      "use strict";
      var n = r(156).Buffer, i = r(559);
      e.exports = function() {
        function e2() {
          !function(e3, t2) {
            if (!(e3 instanceof t2))
              throw new TypeError("Cannot call a class as a function");
          }(this, e2), this.head = null, this.tail = null, this.length = 0;
        }
        return e2.prototype.push = function(e3) {
          var t2 = {data: e3, next: null};
          this.length > 0 ? this.tail.next = t2 : this.head = t2, this.tail = t2, ++this.length;
        }, e2.prototype.unshift = function(e3) {
          var t2 = {data: e3, next: this.head};
          this.length === 0 && (this.tail = t2), this.head = t2, ++this.length;
        }, e2.prototype.shift = function() {
          if (this.length !== 0) {
            var e3 = this.head.data;
            return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, e3;
          }
        }, e2.prototype.clear = function() {
          this.head = this.tail = null, this.length = 0;
        }, e2.prototype.join = function(e3) {
          if (this.length === 0)
            return "";
          for (var t2 = this.head, r2 = "" + t2.data; t2 = t2.next; )
            r2 += e3 + t2.data;
          return r2;
        }, e2.prototype.concat = function(e3) {
          if (this.length === 0)
            return n.alloc(0);
          if (this.length === 1)
            return this.head.data;
          for (var t2, r2, i2, s = n.allocUnsafe(e3 >>> 0), o = this.head, a = 0; o; )
            t2 = o.data, r2 = s, i2 = a, t2.copy(r2, i2), a += o.data.length, o = o.next;
          return s;
        }, e2;
      }(), i && i.inspect && i.inspect.custom && (e.exports.prototype[i.inspect.custom] = function() {
        var e2 = i.inspect({length: this.length});
        return this.constructor.name + " " + e2;
      });
    }, function(e, t) {
    }, function(e, t, r) {
      "use strict";
      var n = r(3), i = n.Buffer;
      function s(e2, t2) {
        for (var r2 in e2)
          t2[r2] = e2[r2];
      }
      function o(e2, t2, r2) {
        return i(e2, t2, r2);
      }
      i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? e.exports = n : (s(n, t), t.Buffer = o), s(i, o), o.from = function(e2, t2, r2) {
        if (typeof e2 == "number")
          throw new TypeError("Argument must not be a number");
        return i(e2, t2, r2);
      }, o.alloc = function(e2, t2, r2) {
        if (typeof e2 != "number")
          throw new TypeError("Argument must be a number");
        var n2 = i(e2);
        return t2 !== void 0 ? typeof r2 == "string" ? n2.fill(t2, r2) : n2.fill(t2) : n2.fill(0), n2;
      }, o.allocUnsafe = function(e2) {
        if (typeof e2 != "number")
          throw new TypeError("Argument must be a number");
        return i(e2);
      }, o.allocUnsafeSlow = function(e2) {
        if (typeof e2 != "number")
          throw new TypeError("Argument must be a number");
        return n.SlowBuffer(e2);
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = s;
      var n = r(270), i = Object.create(r(85));
      function s(e2) {
        if (!(this instanceof s))
          return new s(e2);
        n.call(this, e2);
      }
      i.inherits = r(18), i.inherits(s, n), s.prototype._transform = function(e2, t2, r2) {
        r2(null, e2);
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = r(157);
    }, function(e, t, r) {
      "use strict";
      e.exports = r(53);
    }, function(e, t, r) {
      "use strict";
      e.exports = r(155).Transform;
    }, function(e, t, r) {
      "use strict";
      e.exports = r(155).PassThrough;
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2) {
        return e2 && typeof e2 == "object" && typeof e2.copy == "function" && typeof e2.fill == "function" && typeof e2.readUInt8 == "function";
      };
    }, function(e, t, r) {
      "use strict";
      typeof Object.create == "function" ? e.exports = function(e2, t2) {
        e2.super_ = t2, e2.prototype = Object.create(t2.prototype, {constructor: {value: e2, enumerable: false, writable: true, configurable: true}});
      } : e.exports = function(e2, t2) {
        e2.super_ = t2;
        var r2 = function() {
        };
        r2.prototype = t2.prototype, e2.prototype = new r2(), e2.prototype.constructor = e2;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(63), i = r(87), s = n.Transform;
      e.exports = class extends s {
        constructor(e2) {
          super(e2), this._writableState.objectMode = false, this._readableState.objectMode = true, this.bs = new i(), this.__restart();
        }
        _transform(e2, t2, r2) {
          for (this.bs.write(e2); this.bs.length >= this.__needed; ) {
            let e3;
            const t3 = this.__needed === null ? void 0 : this.bs.read(this.__needed);
            try {
              e3 = this.__parser.next(t3);
            } catch (n2) {
              return r2(n2);
            }
            this.__needed && (this.__fresh = false), e3.done ? (this.push(e3.value), this.__restart()) : this.__needed = e3.value || 0;
          }
          return r2();
        }
        *_parse() {
          throw new Error("Must be implemented in subclass");
        }
        __restart() {
          this.__needed = null, this.__parser = this._parse(), this.__fresh = true;
        }
        _flush(e2) {
          e2(this.__fresh ? null : new Error("unexpected end of input"));
        }
      };
    }, function(e, t, r) {
      "use strict";
      (function(e2, n) {
        var i;
        !function(s) {
          t && t.nodeType, e2 && e2.nodeType;
          var o = typeof n == "object" && n;
          o.global !== o && o.window !== o && o.self;
          var a, c = 2147483647, u = /^xn--/, h = /[^\x20-\x7E]/, f = /[\x2E\u3002\uFF0E\uFF61]/g, d = {overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input"}, l = Math.floor, p = String.fromCharCode;
          function y(e3) {
            throw new RangeError(d[e3]);
          }
          function g(e3, t2) {
            for (var r2 = e3.length, n2 = []; r2--; )
              n2[r2] = t2(e3[r2]);
            return n2;
          }
          function b(e3, t2) {
            var r2 = e3.split("@"), n2 = "";
            return r2.length > 1 && (n2 = r2[0] + "@", e3 = r2[1]), n2 + g((e3 = e3.replace(f, ".")).split("."), t2).join(".");
          }
          function m(e3) {
            for (var t2, r2, n2 = [], i2 = 0, s2 = e3.length; i2 < s2; )
              (t2 = e3.charCodeAt(i2++)) >= 55296 && t2 <= 56319 && i2 < s2 ? (64512 & (r2 = e3.charCodeAt(i2++))) == 56320 ? n2.push(((1023 & t2) << 10) + (1023 & r2) + 65536) : (n2.push(t2), i2--) : n2.push(t2);
            return n2;
          }
          function v(e3) {
            return g(e3, function(e4) {
              var t2 = "";
              return e4 > 65535 && (t2 += p((e4 -= 65536) >>> 10 & 1023 | 55296), e4 = 56320 | 1023 & e4), t2 += p(e4);
            }).join("");
          }
          function w(e3, t2) {
            return e3 + 22 + 75 * (e3 < 26) - ((t2 != 0) << 5);
          }
          function _(e3, t2, r2) {
            var n2 = 0;
            for (e3 = r2 ? l(e3 / 700) : e3 >> 1, e3 += l(e3 / t2); e3 > 455; n2 += 36)
              e3 = l(e3 / 35);
            return l(n2 + 36 * e3 / (e3 + 38));
          }
          function E(e3) {
            var t2, r2, n2, i2, s2, o2, a2, u2, h2, f2, d2, p2 = [], g2 = e3.length, b2 = 0, m2 = 128, w2 = 72;
            for ((r2 = e3.lastIndexOf("-")) < 0 && (r2 = 0), n2 = 0; n2 < r2; ++n2)
              e3.charCodeAt(n2) >= 128 && y("not-basic"), p2.push(e3.charCodeAt(n2));
            for (i2 = r2 > 0 ? r2 + 1 : 0; i2 < g2; ) {
              for (s2 = b2, o2 = 1, a2 = 36; i2 >= g2 && y("invalid-input"), ((u2 = (d2 = e3.charCodeAt(i2++)) - 48 < 10 ? d2 - 22 : d2 - 65 < 26 ? d2 - 65 : d2 - 97 < 26 ? d2 - 97 : 36) >= 36 || u2 > l((c - b2) / o2)) && y("overflow"), b2 += u2 * o2, !(u2 < (h2 = a2 <= w2 ? 1 : a2 >= w2 + 26 ? 26 : a2 - w2)); a2 += 36)
                o2 > l(c / (f2 = 36 - h2)) && y("overflow"), o2 *= f2;
              w2 = _(b2 - s2, t2 = p2.length + 1, s2 == 0), l(b2 / t2) > c - m2 && y("overflow"), m2 += l(b2 / t2), b2 %= t2, p2.splice(b2++, 0, m2);
            }
            return v(p2);
          }
          function S(e3) {
            var t2, r2, n2, i2, s2, o2, a2, u2, h2, f2, d2, g2, b2, v2, E2, S2 = [];
            for (g2 = (e3 = m(e3)).length, t2 = 128, r2 = 0, s2 = 72, o2 = 0; o2 < g2; ++o2)
              (d2 = e3[o2]) < 128 && S2.push(p(d2));
            for (n2 = i2 = S2.length, i2 && S2.push("-"); n2 < g2; ) {
              for (a2 = c, o2 = 0; o2 < g2; ++o2)
                (d2 = e3[o2]) >= t2 && d2 < a2 && (a2 = d2);
              for (a2 - t2 > l((c - r2) / (b2 = n2 + 1)) && y("overflow"), r2 += (a2 - t2) * b2, t2 = a2, o2 = 0; o2 < g2; ++o2)
                if ((d2 = e3[o2]) < t2 && ++r2 > c && y("overflow"), d2 == t2) {
                  for (u2 = r2, h2 = 36; !(u2 < (f2 = h2 <= s2 ? 1 : h2 >= s2 + 26 ? 26 : h2 - s2)); h2 += 36)
                    E2 = u2 - f2, v2 = 36 - f2, S2.push(p(w(f2 + E2 % v2, 0))), u2 = l(E2 / v2);
                  S2.push(p(w(u2, 0))), s2 = _(r2, b2, n2 == i2), r2 = 0, ++n2;
                }
              ++r2, ++t2;
            }
            return S2.join("");
          }
          a = {version: "1.4.1", ucs2: {decode: m, encode: v}, decode: E, encode: S, toASCII: function(e3) {
            return b(e3, function(e4) {
              return h.test(e4) ? "xn--" + S(e4) : e4;
            });
          }, toUnicode: function(e3) {
            return b(e3, function(e4) {
              return u.test(e4) ? E(e4.slice(4).toLowerCase()) : e4;
            });
          }}, (i = function() {
            return a;
          }.call(t, r, t, e2)) === void 0 || (e2.exports = i);
        }();
      }).call(this, r(103)(e), r(12));
    }, function(e, t, r) {
      "use strict";
      e.exports = {isString: function(e2) {
        return typeof e2 == "string";
      }, isObject: function(e2) {
        return typeof e2 == "object" && e2 !== null;
      }, isNull: function(e2) {
        return e2 === null;
      }, isNullOrUndefined: function(e2) {
        return e2 == null;
      }};
    }, function(e, t, r) {
      "use strict";
      t.decode = t.parse = r(572), t.encode = t.stringify = r(573);
    }, function(e, t, r) {
      "use strict";
      function n(e2, t2) {
        return Object.prototype.hasOwnProperty.call(e2, t2);
      }
      e.exports = function(e2, t2, r2, i) {
        t2 = t2 || "&", r2 = r2 || "=";
        var s = {};
        if (typeof e2 != "string" || e2.length === 0)
          return s;
        var o = /\+/g;
        e2 = e2.split(t2);
        var a = 1e3;
        i && typeof i.maxKeys == "number" && (a = i.maxKeys);
        var c = e2.length;
        a > 0 && c > a && (c = a);
        for (var u = 0; u < c; ++u) {
          var h, f, d, l, p = e2[u].replace(o, "%20"), y = p.indexOf(r2);
          y >= 0 ? (h = p.substr(0, y), f = p.substr(y + 1)) : (h = p, f = ""), d = decodeURIComponent(h), l = decodeURIComponent(f), n(s, d) ? Array.isArray(s[d]) ? s[d].push(l) : s[d] = [s[d], l] : s[d] = l;
        }
        return s;
      };
    }, function(e, t, r) {
      "use strict";
      var n = function(e2) {
        switch (typeof e2) {
          case "string":
            return e2;
          case "boolean":
            return e2 ? "true" : "false";
          case "number":
            return isFinite(e2) ? e2 : "";
          default:
            return "";
        }
      };
      e.exports = function(e2, t2, r2, i) {
        return t2 = t2 || "&", r2 = r2 || "=", e2 === null && (e2 = void 0), typeof e2 == "object" ? Object.keys(e2).map(function(i2) {
          var s = encodeURIComponent(n(i2)) + r2;
          return Array.isArray(e2[i2]) ? e2[i2].map(function(e3) {
            return s + encodeURIComponent(n(e3));
          }).join(t2) : s + encodeURIComponent(n(e2[i2]));
        }).join(t2) : i ? encodeURIComponent(n(i)) + r2 + encodeURIComponent(n(e2)) : "";
      };
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const n = r(63), i = r(64), s = r(111), o = (r(86), r(65)), a = r(54), c = r(29).BigNumber, u = r(87), h = a.MT, f = a.SYMS;
        class d extends n.Transform {
          constructor(e2) {
            const t3 = Object.assign({separator: "\n", stream_errors: false}, e2, {readableObjectMode: false, writableObjectMode: false}), r2 = t3.separator;
            delete t3.separator;
            const n2 = t3.stream_errors;
            delete t3.stream_errors, super(t3), this.float_bytes = -1, this.separator = r2, this.stream_errors = n2, this.parser = new s(t3), this.parser.on("more-bytes", this._on_more.bind(this)), this.parser.on("value", this._on_value.bind(this)), this.parser.on("start", this._on_start.bind(this)), this.parser.on("stop", this._on_stop.bind(this)), this.parser.on("data", this._on_data.bind(this)), this.parser.on("error", this._on_error.bind(this));
          }
          _transform(e2, t3, r2) {
            return this.parser.write(e2, t3, r2);
          }
          _flush(e2) {
            return this.parser._flush((t3) => this.stream_errors ? (t3 && this._on_error(t3), e2()) : e2(t3));
          }
          static diagnose(e2, t3, r2) {
            if (e2 == null)
              throw new Error("input required");
            let n2 = {}, i2 = "hex";
            switch (typeof t3) {
              case "function":
                r2 = t3, i2 = o.guessEncoding(e2);
                break;
              case "object":
                n2 = o.extend({}, t3), i2 = n2.encoding != null ? n2.encoding : o.guessEncoding(e2), delete n2.encoding;
                break;
              default:
                i2 = t3 != null ? t3 : "hex";
            }
            const s2 = new u(), a2 = new d(n2);
            let c2 = null;
            return typeof r2 == "function" ? (a2.on("end", () => r2(null, s2.toString("utf8"))), a2.on("error", r2)) : c2 = new Promise((e3, t4) => (a2.on("end", () => e3(s2.toString("utf8"))), a2.on("error", t4))), a2.pipe(s2), a2.end(e2, i2), c2;
          }
          _on_error(e2) {
            return this.stream_errors ? this.push(e2.toString()) : this.emit("error", e2);
          }
          _on_more(e2, t3, r2, n2) {
            if (e2 === h.SIMPLE_FLOAT)
              return this.float_bytes = {2: 1, 4: 2, 8: 3}[t3];
          }
          _fore(e2, t3) {
            switch (e2) {
              case h.BYTE_STRING:
              case h.UTF8_STRING:
              case h.ARRAY:
                if (t3 > 0)
                  return this.push(", ");
                break;
              case h.MAP:
                if (t3 > 0)
                  return t3 % 2 ? this.push(": ") : this.push(", ");
            }
          }
          _on_value(e2, r2, n2) {
            if (e2 !== f.BREAK)
              return this._fore(r2, n2), this.push((() => {
                switch (false) {
                  case e2 !== f.NULL:
                    return "null";
                  case e2 !== f.UNDEFINED:
                    return "undefined";
                  case typeof e2 != "string":
                    return JSON.stringify(e2);
                  case !(this.float_bytes > 0):
                    const r3 = this.float_bytes;
                    return this.float_bytes = -1, i.inspect(e2) + "_" + r3;
                  case !t2.isBuffer(e2):
                    return "h'" + e2.toString("hex") + "'";
                  case !(e2 instanceof c):
                    return e2.toString();
                  default:
                    return i.inspect(e2);
                }
              })());
          }
          _on_start(e2, t3, r2, n2) {
            switch (this._fore(r2, n2), e2) {
              case h.TAG:
                this.push(t3 + "(");
                break;
              case h.ARRAY:
                this.push("[");
                break;
              case h.MAP:
                this.push("{");
                break;
              case h.BYTE_STRING:
              case h.UTF8_STRING:
                this.push("(");
            }
            if (t3 === f.STREAM)
              return this.push("_ ");
          }
          _on_stop(e2) {
            switch (e2) {
              case h.TAG:
                return this.push(")");
              case h.ARRAY:
                return this.push("]");
              case h.MAP:
                return this.push("}");
              case h.BYTE_STRING:
              case h.UTF8_STRING:
                return this.push(")");
            }
          }
          _on_data() {
            return this.push(this.separator);
          }
        }
        e.exports = d;
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const n = r(271), i = r(111), s = r(54).MT;
        class o extends Map {
          constructor(e2) {
            super(e2);
          }
          static _encode(e2) {
            return n.encodeCanonical(e2).toString("base64");
          }
          static _decode(e2) {
            return i.decodeFirstSync(e2, "base64");
          }
          get(e2) {
            return super.get(o._encode(e2));
          }
          set(e2, t3) {
            return super.set(o._encode(e2), t3);
          }
          delete(e2) {
            return super.delete(o._encode(e2));
          }
          has(e2) {
            return super.has(o._encode(e2));
          }
          *keys() {
            for (const e2 of super.keys())
              yield o._decode(e2);
          }
          *entries() {
            for (const e2 of super.entries())
              yield [o._decode(e2[0]), e2[1]];
          }
          [Symbol.iterator]() {
            return this.entries();
          }
          forEach(e2, t3) {
            if (typeof e2 != "function")
              throw new TypeError("Must be function");
            for (const r2 of super.entries())
              e2.call(this, r2[1], o._decode(r2[0]), this);
          }
          encodeCBOR(e2) {
            if (!e2._pushInt(this.size, s.MAP))
              return false;
            if (e2.canonical) {
              const r2 = Array.from(super.entries()).map((e3) => [t2.from(e3[0], "base64"), e3[1]]);
              r2.sort((e3, t3) => e3[0].compare(t3[0]));
              for (const t3 of r2)
                if (!e2.push(t3[0]) || !e2.pushAny(t3[1]))
                  return false;
            } else
              for (const r2 of super.entries())
                if (!e2.push(t2.from(r2[0], "base64")) || !e2.pushAny(r2[1]))
                  return false;
            return true;
          }
        }
        e.exports = o;
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      const n = r(83), {PinTypes: i} = n, s = r(160), {resolvePath: o} = r(22), a = r(2);
      function c(e2, t2, r2) {
        const n2 = {type: e2, cid: t2};
        return r2 && (n2.metadata = r2), n2;
      }
      e.exports = ({pinManager: e2, dagReader: t2}) => a(async function* (r2 = {}) {
        let a2 = i.all;
        if (r2.type ? (a2 = r2.type, typeof r2.type == "string" && (a2 = r2.type.toLowerCase()), n.checkPinType(a2)) : r2.type = i.all, r2.paths) {
          let n2 = false;
          for await (const {path: u} of s(r2.paths)) {
            const r3 = await o(t2, u), {reason: s2, pinned: h, parent: f, metadata: d} = await e2.isPinnedWithType(r3, a2);
            if (!h)
              throw new Error(`path '${u}' is not pinned`);
            switch (s2) {
              case i.direct:
              case i.recursive:
                n2 = true, yield c(s2, r3, d);
                break;
              default:
                n2 = true, yield c(`${i.indirect} through ${f}`, r3, d);
            }
          }
          if (!n2)
            throw new Error("No match found");
        } else {
          if (a2 === i.recursive || a2 === i.all)
            for await (const {cid: t3, metadata: r3} of e2.recursiveKeys())
              yield c(i.recursive, t3, r3);
          if (a2 === i.indirect || a2 === i.all)
            for await (const t3 of e2.indirectKeys(r2))
              yield c(i.indirect, t3);
          if (a2 === i.direct || a2 === i.all)
            for await (const {cid: t3, metadata: r3} of e2.directKeys())
              yield c(i.direct, t3, r3);
        }
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(40);
      e.exports = ({rmAll: e2}) => async (t2, r2) => await n(e2({path: t2, ...r2}, r2));
    }, function(e, t, r) {
      "use strict";
      const n = r(160), {resolvePath: i} = r(22), s = r(2), {PinTypes: o} = r(83);
      e.exports = ({pinManager: e2, gcLock: t2, dagReader: r2}) => s(async function* (s2, a = {}) {
        const c = await t2.readLock();
        try {
          for await (const {path: t3, recursive: a2} of n(s2)) {
            const n2 = await i(r2, t3), {pinned: s3, reason: c2} = await e2.isPinnedWithType(n2, o.all);
            if (!s3)
              throw new Error(n2 + " is not pinned");
            switch (c2) {
              case o.recursive:
                if (!a2)
                  throw new Error(n2 + " is pinned recursively");
                await e2.unpin(n2), yield n2;
                break;
              case o.direct:
                await e2.unpin(n2), yield n2;
                break;
              default:
                throw new Error(`${n2} is pinned indirectly under ${c2}`);
            }
          }
        } finally {
          c();
        }
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(580), i = r(588), s = r(276), {NotInitializedError: o, AlreadyInitializedError: a} = r(62), c = r(1)("ipfs:components:ipns");
      e.exports = class {
        constructor(e2 = {}) {
          this.options = e2, this.offline = null, this.online = null;
        }
        getIPNS() {
          const e2 = this.online || this.offline;
          if (e2)
            return e2;
          throw new o();
        }
        get routing() {
          return this.getIPNS().routing;
        }
        startOffline({repo: e2, peerId: t2, keychain: r2}) {
          if (this.offline != null)
            throw new a();
          c("initializing IPNS keyspace");
          const i2 = new s(e2), o2 = new n(i2, e2.datastore, t2, r2, this.options);
          this.offline = o2;
        }
        async startOnline({libp2p: e2, repo: t2, peerId: r2, keychain: s2}) {
          if (this.online != null)
            throw new a();
          const o2 = i({libp2p: e2, repo: t2, peerId: r2, options: this.options}), c2 = new n(o2, t2.datastore, r2, s2, this.options);
          await c2.republisher.start(), this.online = c2;
        }
        async stop() {
          const e2 = this.online;
          e2 && (await e2.republisher.stop(), this.online = null);
        }
        publish(e2, t2, r2) {
          return this.getIPNS().publish(e2, t2, r2);
        }
        resolve(e2, t2) {
          return this.getIPNS().resolve(e2, t2);
        }
        initializeKeyspace(e2, t2) {
          return this.getIPNS().initializeKeyspace(e2, t2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const {createFromPrivKey: n} = r(7), i = r(0), s = r(1), o = Object.assign(s("ipfs:ipns"), {error: s("ipfs:ipns:error")}), a = r(581), c = r(586), u = r(587), {normalizePath: h} = r(22), f = r(256);
      e.exports = class {
        constructor(e2, t2, r2, n2, i2) {
          this.publisher = new a(e2, t2), this.republisher = new c(this.publisher, t2, r2, n2, i2), this.resolver = new u(e2), this.cache = new f(1e3), this.routing = e2;
        }
        async publish(e2, t2, r2 = a.defaultRecordLifetime) {
          try {
            t2 = h(t2);
            const i2 = await n(e2.bytes);
            await this.publisher.publishWithEOL(e2, t2, r2), o(`IPNS value ${t2} was published correctly`);
            const s2 = i2.toB58String(), a2 = parseFloat(r2), c2 = a2 < 6e4 ? a2 : 6e4;
            return this.cache.set(s2, t2, c2), o(`IPNS value ${t2} was cached correctly`), {name: s2, value: t2};
          } catch (i2) {
            throw o.error(i2), i2;
          }
        }
        async resolve(e2, t2 = {}) {
          if (typeof e2 != "string")
            throw i(new Error("name received is not valid"), "ERR_INVALID_NAME");
          if (!t2.nocache && !t2.recursive) {
            const t3 = e2.split("/")[2], r2 = this.cache.get(t3);
            if (r2)
              return r2;
          }
          try {
            const r2 = await this.resolver.resolve(e2, t2);
            return o(`IPNS record from ${e2} was resolved correctly`), r2;
          } catch (r2) {
            throw o.error(r2), r2;
          }
        }
        async initializeKeyspace(e2, t2) {
          return this.publish(e2, t2, a.defaultRecordLifetime);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(7), {Key: i, Errors: s} = r(9), o = r(0), a = r(1), c = Object.assign(a("ipfs:ipns:publisher"), {error: a("ipfs:ipns:publisher:error")}), u = r(5), h = r(88), f = s.notFoundError().code;
      class d {
        constructor(e2, t2) {
          this._routing = e2, this._datastore = t2;
        }
        async publishWithEOL(e2, t2, r2) {
          if (!e2 || !e2.bytes)
            throw o(new Error("invalid private key"), "ERR_INVALID_PRIVATE_KEY");
          const i2 = await n.createFromPrivKey(e2.bytes), s2 = await this._updateOrCreateRecord(e2, t2, r2, i2);
          return this._putRecordToRouting(s2, i2);
        }
        publish(e2, t2) {
          return this.publishWithEOL(e2, t2, 36e5);
        }
        async _putRecordToRouting(e2, t2) {
          if (!n.isPeerId(t2)) {
            const e3 = "peerId received is not valid";
            throw c.error(e3), o(new Error(e3), "ERR_INVALID_PEER_ID");
          }
          const r2 = t2._pubKey, i2 = await h.embedPublicKey(r2, e2), s2 = h.getIdKeys(t2.toBytes());
          return await this._publishEntry(s2.routingKey, i2 || e2), await this._publishPublicKey(s2.routingPubKey, r2), i2 || e2;
        }
        async _publishEntry(e2, t2) {
          if (!i.isKey(e2)) {
            const e3 = "datastore key does not have a valid format";
            throw c.error(e3), o(new Error(e3), "ERR_INVALID_DATASTORE_KEY");
          }
          let r2;
          try {
            r2 = h.marshal(t2);
          } catch (n2) {
            throw c.error(n2), n2;
          }
          try {
            const t3 = await this._routing.put(e2.uint8Array(), r2);
            return c(`ipns record for ${u(e2.uint8Array(), "base64")} was stored in the routing`), t3;
          } catch (n2) {
            const t3 = `ipns record for ${u(e2.uint8Array(), "base64")} could not be stored in the routing`;
            throw c.error(t3), c.error(n2), o(new Error(t3), "ERR_PUTTING_TO_ROUTING");
          }
        }
        async _publishPublicKey(e2, t2) {
          if (!i.isKey(e2)) {
            const e3 = "datastore key does not have a valid format";
            throw c.error(e3), o(new Error(e3), "ERR_INVALID_DATASTORE_KEY");
          }
          if (!t2 || !t2.bytes) {
            const e3 = "one or more of the provided parameters are not defined";
            throw c.error(e3), o(new Error(e3), "ERR_UNDEFINED_PARAMETER");
          }
          try {
            const r2 = await this._routing.put(e2.uint8Array(), t2.bytes);
            return c(`public key for ${u(e2.uint8Array(), "base64")} was stored in the routing`), r2;
          } catch (r2) {
            const t3 = `public key for ${u(e2.uint8Array(), "base64")} could not be stored in the routing`;
            throw c.error(t3), c.error(r2), o(new Error(t3), "ERR_PUTTING_TO_ROUTING");
          }
        }
        async _getPublished(e2, t2 = {}) {
          if (!n.isPeerId(e2)) {
            const e3 = "peerId received is not valid";
            throw c.error(e3), o(new Error(e3), "ERR_INVALID_PEER_ID");
          }
          const r2 = t2.checkRouting !== false;
          try {
            const t3 = await this._datastore.get(h.getLocalKey(e2.id));
            return this._unmarshalData(t3);
          } catch (i2) {
            if (i2.code !== f) {
              const t3 = `unexpected error getting the ipns record ${e2.id} from datastore`;
              throw c.error(t3), o(new Error(t3), "ERR_UNEXPECTED_DATASTORE_RESPONSE");
            }
            if (!r2)
              throw o(i2);
            try {
              const t3 = h.getIdKeys(e2.toBytes()), r3 = await this._routing.get(t3.routingKey.uint8Array());
              return this._unmarshalData(r3);
            } catch (i3) {
              throw c.error(i3), i3;
            }
          }
        }
        _unmarshalData(e2) {
          try {
            return h.unmarshal(e2);
          } catch (t2) {
            throw o(t2, "ERR_INVALID_RECORD_DATA");
          }
        }
        async _updateOrCreateRecord(e2, t2, r2, i2) {
          if (!n.isPeerId(i2)) {
            const e3 = "peerId received is not valid";
            throw c.error(e3), o(new Error(e3), "ERR_INVALID_PEER_ID");
          }
          const s2 = {checkRouting: true};
          let a2;
          try {
            a2 = await this._getPublished(i2, s2);
          } catch (l) {
            if (l.code !== f) {
              const e3 = `unexpected error when determining the last published IPNS record for ${i2.id} ${l.stack}`;
              throw c.error(e3), o(new Error(e3), "ERR_DETERMINING_PUBLISHED_RECORD");
            }
          }
          let u2, d3 = 0;
          a2 && a2.sequence !== void 0 && (d3 = a2.value.toString() !== t2 ? a2.sequence + 1 : a2.sequence);
          try {
            u2 = await h.create(e2, t2, d3, r2);
          } catch (l) {
            const e3 = `ipns record for ${t2} could not be created`;
            throw c.error(l), o(new Error(e3), "ERR_CREATING_IPNS_RECORD");
          }
          try {
            const e3 = h.marshal(u2);
            return await this._datastore.put(h.getLocalKey(i2.id), e3), c(`ipns record for ${t2} was stored in the datastore`), u2;
          } catch (l) {
            const e3 = `ipns record for ${t2} could not be stored in the datastore`;
            throw c.error(e3), o(new Error(e3), "ERR_STORING_IN_DATASTORE");
          }
        }
      }
      d.defaultRecordLifetime = 36e5, e.exports = d;
    }, function(e, t, r) {
      "use strict";
      !function() {
        e.exports = u;
        var t2 = 100982246400, r2 = 864e13, n = 4294967296, i = Math.trunc || function(e2) {
          var t3 = e2 - e2 % 1;
          return t3 === 0 && (e2 < 0 || e2 === 0 && 1 / e2 != 1 / 0) ? -0 : t3;
        }, s = u.prototype;
        u.fromDate = function(e2) {
          return new u(+e2);
        }, u.fromInt64BE = p(0, 1, 2, 3, 0, 4), u.fromInt64LE = p(3, 2, 1, 0, 4, 0), u.fromString = function(e2) {
          var t3, r3 = new u(), n2 = (e2 += "").replace(/^\s*[+\-]?\d+/, function(e3) {
            var t4 = +e3, n3 = 1970 + (t4 - 1970) % 400;
            return r3.year = t4 - n3, n3;
          }).replace(/(?:Z|([+\-]\d{2}):?(\d{2}))$/, function(e3, r4, n3) {
            return r4 < 0 && (n3 *= -1), t3 = 6e4 * (60 * +r4 + +n3), "";
          }).replace(/\.\d+$/, function(e3) {
            return r3.nano = +(e3 + "000000000").substr(1, 9), "";
          }).split(/\D+/);
          n2.length > 1 ? n2[1]-- : n2[1] = 0;
          if (r3.time = t3 = Date.UTC.apply(Date, n2) - (t3 || 0), isNaN(t3))
            throw new TypeError("Invalid Date");
          return h(r3);
        }, u.fromTimeT = function(e2) {
          return d(e2, 0);
        }, s.year = 0, s.time = 0, s.nano = 0, s.addNano = function(e2) {
          return this.nano += +e2 || 0, this;
        }, s.getNano = function() {
          var e2 = h(this);
          return (e2.time % 1e3 * 1e6 + +e2.nano + 1e9) % 1e9;
        }, s.getTimeT = function() {
          var e2 = h(this), t3 = Math.floor(e2.time / 1e3), r3 = e2.year;
          r3 && (t3 += 1168776 * r3 * 86400 / 3200);
          return t3;
        }, s.getYear = function() {
          return this.toDate().getUTCFullYear() + this.year;
        }, s.toDate = function() {
          return f(h(this).time);
        }, s.toJSON = function() {
          return this.toString().replace(/0{1,6}Z$/, "Z");
        }, s.toString = function(e2) {
          var t3 = this, r3 = t3.toDate(), n2 = {H: function() {
            return g(r3.getUTCHours());
          }, L: function() {
            return b(r3.getUTCMilliseconds(), 3);
          }, M: function() {
            return g(r3.getUTCMinutes());
          }, N: function() {
            return b(t3.getNano(), 9);
          }, S: function() {
            return g(r3.getUTCSeconds());
          }, Y: function() {
            var e3 = t3.getYear();
            return e3 > 999999 ? "+" + e3 : e3 > 9999 ? "+" + b(e3, 6) : e3 >= 0 ? b(e3, 4) : e3 >= -999999 ? "-" + b(-e3, 6) : e3;
          }, a: function() {
            return a[r3.getUTCDay()];
          }, b: function() {
            return o[r3.getUTCMonth()];
          }, d: function() {
            return g(r3.getUTCDate());
          }, e: function() {
            return e3 = r3.getUTCDate(), (e3 > 9 ? "" : " ") + (0 | e3);
            var e3;
          }, m: function() {
            return g(r3.getUTCMonth() + 1);
          }};
          return function e3(t4) {
            return t4.replace(/%./g, function(t5) {
              var r4 = t5[1], i2 = c[r4], s2 = n2[r4];
              return i2 ? e3(i2) : s2 ? s2() : t5;
            });
          }(e2 || "%Y-%m-%dT%H:%M:%S.%NZ");
        }, s.writeInt64BE = l(0, 1, 2, 3, 0, 4), s.writeInt64LE = l(3, 2, 1, 0, 4, 0);
        var o = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], a = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], c = {"%": "%", F: "%Y-%m-%d", n: "\n", R: "%H:%M", T: "%H:%M:%S", t: "	", X: "%T", Z: "GMT", z: "+0000"};
        return u;
        function u(e2, t3, r3) {
          var n2 = this;
          if (!(n2 instanceof u))
            return new u(e2, t3, r3);
          n2.time = +e2 || 0, n2.nano = +t3 || 0, n2.year = +r3 || 0, h(n2);
        }
        function h(e2) {
          var t3, n2, s2 = e2.year, o2 = e2.time, a2 = e2.nano;
          if (a2 < 0 || 1e6 <= a2) {
            var c2 = Math.floor(a2 / 1e6);
            a2 -= 1e6 * c2, o2 += c2, t3 = 1;
          }
          var u2 = s2 % 3200;
          if (o2 < -r2 || r2 < o2 || u2) {
            (n2 = i(o2 / 1009822464e5)) && (s2 += 3200 * n2, o2 -= 1009822464e5 * n2);
            var h2 = f(o2);
            h2.setUTCFullYear(u2 + h2.getUTCFullYear());
            var d2 = (o2 = +h2) + 1009822464e5 * (n2 = i((s2 -= u2) / 3200));
            n2 && -r2 <= d2 && d2 <= r2 && (s2 -= 3200 * n2, o2 = d2), t3 = 1;
          }
          return t3 && (e2.year = s2, e2.time = o2, e2.nano = a2), e2;
        }
        function f(e2) {
          var t3 = new Date(0);
          return t3.setTime(e2), t3;
        }
        function d(e2, r3) {
          r3 |= 0, e2 = +e2 || 0;
          var s2 = i((r3 *= n) / t2) + i(e2 / t2), o2 = r3 % t2 + e2 % t2, a2 = i(o2 / t2);
          return a2 && (s2 += a2, o2 -= a2 * t2), new u(1e3 * o2, 0, 3200 * s2);
        }
        function l(e2, t3, r3, s2, o2, a2) {
          return function(e3, t4) {
            var r4 = h(this);
            e3 || (e3 = new Array(8));
            y(e3, t4 |= 0);
            var s3 = Math.floor(r4.time / 1e3), u2 = 31556952 * r4.year, f2 = i(u2 / n) + i(s3 / n), d2 = u2 % n + s3 % n, l2 = Math.floor(d2 / n);
            l2 && (f2 += l2, d2 -= l2 * n);
            return c2(e3, t4 + o2, f2), c2(e3, t4 + a2, d2), e3;
          };
          function c2(n2, i2, o3) {
            n2[i2 + e2] = o3 >> 24 & 255, n2[i2 + t3] = o3 >> 16 & 255, n2[i2 + r3] = o3 >> 8 & 255, n2[i2 + s2] = 255 & o3;
          }
        }
        function p(e2, t3, r3, n2, i2, s2) {
          return function(e3, t4) {
            y(e3, t4 |= 0);
            var r4 = o2(e3, t4 + i2);
            return d(o2(e3, t4 + s2), r4);
          };
          function o2(i3, s3) {
            return 16777216 * i3[s3 + e2] + (i3[s3 + t3] << 16 | i3[s3 + r3] << 8 | i3[s3 + n2]);
          }
        }
        function y(e2, t3) {
          var r3 = e2 && e2.length;
          if (r3 == null)
            throw new TypeError("Invalid Buffer");
          if (r3 < t3 + 8)
            throw new RangeError("Out of range");
        }
        function g(e2) {
          return (e2 > 9 ? "" : "0") + (0 | e2);
        }
        function b(e2, t3) {
          return ("000000000" + (0 | e2)).substr(-t3);
        }
      }();
    }, function(e, t, r) {
      "use strict";
      const n = r(20);
      e.exports = n('\nmessage IpnsEntry {\n  enum ValidityType {\n		EOL = 0; // setting an EOL says "this record is valid until..."\n	}\n\n  required bytes value = 1;\n	required bytes signature = 2;\n\n	optional ValidityType validityType = 3;\n	optional bytes validity = 4;\n\n	optional uint64 sequence = 5;\n\n	optional uint64 ttl = 6;\n\n	// in order for nodes to properly validate a record upon receipt, they need the public\n	// key associated with it. For old RSA keys, its easiest if we just send this as part of\n	// the record itself. For newer ed25519 keys, the public key can be embedded in the\n	// peerID, making this field unnecessary.\n	optional bytes pubKey = 7;\n}\n').IpnsEntry;
    }, function(e, t, r) {
      "use strict";
      e.exports.toRFC3339 = (e2) => `${e2.getUTCFullYear()}-${String(e2.getUTCMonth() + 1).padStart(2, "0")}-${String(e2.getUTCDate()).padStart(2, "0")}T${String(e2.getUTCHours()).padStart(2, "0")}:${String(e2.getUTCMinutes()).padStart(2, "0")}:${String(e2.getUTCSeconds()).padStart(2, "0")}.${1e3 * e2.getUTCMilliseconds() * 1e3}Z`, e.exports.parseRFC3339 = (e2) => {
        const t2 = new RegExp("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})\\.(\\d+)Z"), r2 = String(e2).trim().match(t2);
        if (!r2)
          throw new Error("Invalid format");
        const n = parseInt(r2[1], 10), i = parseInt(r2[2], 10) - 1, s = parseInt(r2[3], 10), o = parseInt(r2[4], 10), a = parseInt(r2[5], 10), c = parseInt(r2[6], 10), u = parseInt(r2[7].slice(0, -6), 10);
        return new Date(Date.UTC(n, i, s, o, a, c, u));
      };
    }, function(e, t, r) {
      "use strict";
      t.ERR_IPNS_EXPIRED_RECORD = "ERR_IPNS_EXPIRED_RECORD", t.ERR_UNRECOGNIZED_VALIDITY = "ERR_UNRECOGNIZED_VALIDITY", t.ERR_SIGNATURE_CREATION = "ERR_SIGNATURE_CREATION", t.ERR_SIGNATURE_VERIFICATION = "ERR_SIGNATURE_VERIFICATION", t.ERR_UNRECOGNIZED_FORMAT = "ERR_UNRECOGNIZED_FORMAT", t.ERR_PEER_ID_FROM_PUBLIC_KEY = "ERR_PEER_ID_FROM_PUBLIC_KEY", t.ERR_PUBLIC_KEY_FROM_ID = "ERR_PUBLIC_KEY_FROM_ID", t.ERR_UNDEFINED_PARAMETER = "ERR_UNDEFINED_PARAMETER";
    }, function(e, t, r) {
      "use strict";
      const n = r(88), i = r(39), s = r(7), o = r(0), a = r(1), c = Object.assign(a("ipfs:ipns:republisher"), {error: a("ipfs:ipns:republisher:error")});
      e.exports = class {
        constructor(e2, t2, r2, n2, i2 = {}) {
          this._publisher = e2, this._datastore = t2, this._peerId = r2, this._keychain = n2, this._options = i2, this._republishHandle = null;
        }
        async start() {
          if (this._republishHandle)
            throw o(new Error("republisher is already running"), "ERR_REPUBLISH_ALREADY_RUNNING");
          const e2 = {_task: null, _inflightTask: null, _timeoutId: null, runPeriodically: (t3) => {
            e2._timeoutId = setTimeout(async () => {
              e2._timeoutId = null;
              try {
                e2._inflightTask = e2._task(), await e2._inflightTask, e2._task && e2.runPeriodically(t3);
              } catch (r3) {
                c.error(r3);
              }
            }, t3());
          }, cancel: async () => {
            e2._timeoutId != null && clearTimeout(e2._timeoutId), e2._task = null, await e2._inflightTask;
          }}, {privKey: t2} = this._peerId, {pass: r2} = this._options;
          let n2 = true;
          e2._task = () => this._republishEntries(t2, r2), e2.runPeriodically(() => n2 ? (n2 = false, this._options.initialBroadcastInterval || 6e4) : this._options.broadcastInterval || 144e5), this._republishHandle = e2;
        }
        async stop() {
          const e2 = this._republishHandle;
          if (!e2)
            throw o(new Error("republisher is not running"), "ERR_REPUBLISH_NOT_RUNNING");
          this._republishHandle = null, await e2.cancel();
        }
        async _republishEntries(e2, t2) {
          try {
            await this._republishEntry(e2);
          } catch (r2) {
            const e3 = "cannot republish entry for the node's private key";
            return void c.error(e3);
          }
          if (t2)
            try {
              const e3 = await this._keychain.listKeys();
              for (const r2 of e3) {
                const e4 = await this._keychain.exportKey(r2.name, t2), n2 = await i.keys.import(e4, t2);
                await this._republishEntry(n2);
              }
            } catch (r2) {
              c.error(r2);
            }
        }
        async _republishEntry(e2) {
          if (!e2 || !e2.bytes)
            throw o(new Error("invalid private key"), "ERR_INVALID_PRIVATE_KEY");
          try {
            const t2 = await s.createFromPrivKey(e2.bytes), r2 = await this._getPreviousValue(t2);
            await this._publisher.publishWithEOL(e2, r2, 864e5);
          } catch (t2) {
            if (t2.code === "ERR_NO_ENTRY_FOUND")
              return;
            throw t2;
          }
        }
        async _getPreviousValue(e2) {
          if (!s.isPeerId(e2))
            throw o(new Error("invalid peer ID"), "ERR_INVALID_PEER_ID");
          try {
            const r2 = await this._datastore.get(n.getLocalKey(e2.id));
            if (!(r2 instanceof Uint8Array))
              throw o(new Error("found ipns record that we couldn't process"), "ERR_INVALID_IPNS_RECORD");
            try {
              return n.unmarshal(r2).value;
            } catch (t2) {
              throw c.error(t2), o(new Error("found ipns record that we couldn't convert to a value"), "ERR_INVALID_IPNS_RECORD");
            }
          } catch (t2) {
            if (t2 && t2.notFound)
              throw o(new Error("no previous entry for record with id: " + e2.id), "ERR_NO_ENTRY_FOUND");
            throw t2;
          }
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(88), i = r(7), s = r(0), o = r(1), a = Object.assign(o("ipfs:ipns:resolver"), {error: o("ipfs:ipns:resolver:error")}), c = r(5), {Errors: u} = r(9), h = u.notFoundError().code;
      e.exports = class {
        constructor(e2) {
          this._routing = e2;
        }
        async resolve(e2, t2 = {}) {
          if (typeof e2 != "string")
            throw s(new Error("invalid name"), "ERR_INVALID_NAME");
          const r2 = t2.recursive && t2.recursive.toString() === "true", n2 = e2.split("/");
          if (n2.length !== 3 || n2[0] !== "")
            throw s(new Error("invalid name"), "ERR_INVALID_NAME");
          const i2 = n2[2];
          let o2;
          r2 && (o2 = 32);
          const c2 = await this.resolver(i2, o2);
          return a(e2 + " was locally resolved correctly"), c2;
        }
        async resolver(e2, t2) {
          if (t2 === 0) {
            const e3 = "could not resolve name (recursion limit of 32 exceeded)";
            throw a.error(e3), s(new Error(e3), "ERR_RESOLVE_RECURSION_LIMIT");
          }
          const r2 = await this._resolveName(e2), n2 = r2.split("/");
          return n2[1] !== "ipfs" && t2 ? this.resolver(n2[2], t2 - 1) : r2;
        }
        async _resolveName(e2) {
          const t2 = i.createFromCID(e2), {routingKey: r2} = n.getIdKeys(t2.toBytes());
          let o2, c2;
          try {
            o2 = await this._routing.get(r2.uint8Array());
          } catch (u2) {
            if (a.error("could not get record from routing", u2), u2.code === h)
              throw s(new Error(`record requested for ${e2} was not found in the network`), "ERR_NO_RECORD_FOUND");
            throw s(new Error("unexpected error getting the ipns record " + t2.toString()), "ERR_UNEXPECTED_ERROR_GETTING_RECORD");
          }
          try {
            c2 = n.unmarshal(o2);
          } catch (u2) {
            throw a.error("could not unmarshal record", u2), s(new Error("found ipns record that we couldn't convert to a value"), "ERR_INVALID_RECORD_RECEIVED");
          }
          return this._validateRecord(t2, c2);
        }
        async _validateRecord(e2, t2) {
          const r2 = await n.extractPublicKey(e2, t2);
          return await n.validate(r2, t2), c(t2.value);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const {TieredDatastore: n} = r(161), i = r(113), s = r(275), o = r(276);
      e.exports = ({libp2p: e2, repo: t2, peerId: r2, options: a}) => {
        const c = [];
        let u;
        if (i(a, "EXPERIMENTAL.ipnsPubsub", false)) {
          const n2 = e2.pubsub, i2 = t2.datastore;
          u = new s(n2, i2, r2), c.push(u);
        }
        if (i(a, "offline") || !i(a, "libp2p.config.dht.enabled", false)) {
          const e3 = new o(t2);
          c.push(e3);
        } else
          c.push(e2._dht);
        return new n(c);
      };
    }, function(e, t, r) {
      "use strict";
      const {Adapter: n, Key: i} = r(9), s = r(272), o = r(112), {utf8Encoder: a} = r(273), c = new i(s.SHARDING_FN), u = new i(s.README_FN);
      class h extends n {
        constructor(e2, t2) {
          super(), this.child = new o(e2, {convert: this._convertKey.bind(this), invert: this._invertKey.bind(this)}), this.shard = t2;
        }
        open() {
          return this.child.open();
        }
        _convertKey(e2) {
          const t2 = e2.toString();
          if (t2 === c.toString() || t2 === u.toString())
            return e2;
          return new i(this.shard.fun(t2)).child(e2);
        }
        _invertKey(e2) {
          const t2 = e2.toString();
          return t2 === c.toString() || t2 === u.toString() ? e2 : i.withNamespaces(e2.list().slice(1));
        }
        static async createOrOpen(e2, t2) {
          try {
            await h.create(e2, t2);
          } catch (r2) {
            if (r2 && r2.message !== "datastore exists")
              throw r2;
          }
          return h.open(e2);
        }
        static async open(e2) {
          const t2 = await s.readShardFun("/", e2);
          return new h(e2, t2);
        }
        static async create(e2, t2) {
          if (!await e2.has(c)) {
            const r3 = typeof e2.putRaw == "function" ? e2.putRaw.bind(e2) : e2.put.bind(e2);
            return Promise.all([r3(c, a.encode(t2.toString() + "\n")), r3(u, a.encode(s.readme))]);
          }
          const r2 = (await s.readShardFun("/", e2) || "").toString(), n2 = t2.toString();
          if (r2 !== n2)
            throw new Error(`specified fun ${n2} does not match repo shard fun ${r2}`);
          throw new Error("datastore exists");
        }
        put(e2, t2, r2) {
          return this.child.put(e2, t2, r2);
        }
        get(e2, t2) {
          return this.child.get(e2, t2);
        }
        has(e2, t2) {
          return this.child.has(e2, t2);
        }
        delete(e2, t2) {
          return this.child.delete(e2, t2);
        }
        batch() {
          return this.child.batch();
        }
        query(e2, t2) {
          const r2 = {keysOnly: e2.keysOnly, offset: e2.offset, limit: e2.limit, filters: [(e3) => e3.key.toString() !== c.toString(), (e3) => e3.key.toString() !== u.toString()]};
          if (e2.prefix != null && r2.filters.push((t3) => this._invertKey(t3.key).toString().startsWith(e2.prefix)), e2.filters != null) {
            const t3 = e2.filters.map((e3) => (t4) => e3(Object.assign({}, t4, {key: this._invertKey(t4.key)})));
            r2.filters = r2.filters.concat(t3);
          }
          return e2.orders != null && (r2.orders = e2.orders.map((e3) => async (t3) => {
            t3.forEach((e4) => {
              e4.key = this._invertKey(e4.key);
            });
            const r3 = await e3(t3);
            return r3.forEach((e4) => {
              e4.key = this._convertKey(e4.key);
            }), r3;
          })), this.child.query(r2, t2);
        }
        close() {
          return this.child.close();
        }
      }
      e.exports = h;
    }, function(e, t, r) {
      "use strict";
      e.exports = r(274).TextEncoder;
    }, function(e, t, r) {
      "use strict";
      e.exports = r(274).TextDecoder;
    }, function(e, t, r) {
      "use strict";
      e.exports = `This is a repository of IPLD objects. Each IPLD object is in a single file,
named <base32 encoding of cid>.data. Where <base32 encoding of cid> is the
"base32" encoding of the CID (as specified in
https://github.com/multiformats/multibase) without the 'B' prefix.
All the object files are placed in a tree of directories, based on a
function of the CID. This is a form of sharding similar to
the objects directory in git repositories. Previously, we used
prefixes, we now use the next-to-last two charters.
    func NextToLast(base32cid string) {
      nextToLastLen := 2
      offset := len(base32cid) - nextToLastLen - 1
      return str[offset : offset+nextToLastLen]
    }
For example, an object with a base58 CIDv1 of
    zb2rhYSxw4ZjuzgCnWSt19Q94ERaeFhu9uSqRgjSdx9bsgM6f
has a base32 CIDv1 of
    BAFKREIA22FLID5AJ2KU7URG47MDLROZIH6YF2KALU2PWEFPVI37YLKRSCA
and will be placed at
    SC/AFKREIA22FLID5AJ2KU7URG47MDLROZIH6YF2KALU2PWEFPVI37YLKRSCA.data
with 'SC' being the last-to-next two characters and the 'B' at the
beginning of the CIDv1 string is the multibase prefix that is not
stored in the filename.
`;
    }, function(e, t, r) {
      "use strict";
      const {Adapter: n, Key: i, Errors: s, utils: {filter: o, take: a, sortAll: c, replaceStartWith: u}} = r(9), h = r(112);
      e.exports = class extends n {
        constructor(e2) {
          super(), this.mounts = e2.slice();
        }
        open() {
          return Promise.all(this.mounts.map((e2) => e2.datastore.open()));
        }
        _lookup(e2) {
          for (const t2 of this.mounts)
            if (t2.prefix.toString() === e2.toString() || t2.prefix.isAncestorOf(e2)) {
              const r2 = u(e2.toString(), t2.prefix.toString());
              return {datastore: t2.datastore, mountpoint: t2.prefix, rest: new i(r2)};
            }
        }
        put(e2, t2, r2) {
          const n2 = this._lookup(e2);
          if (n2 == null)
            throw s.dbWriteFailedError(new Error("No datastore mounted for this key"));
          return n2.datastore.put(n2.rest, t2, r2);
        }
        get(e2, t2) {
          const r2 = this._lookup(e2);
          if (r2 == null)
            throw s.notFoundError(new Error("No datastore mounted for this key"));
          return r2.datastore.get(r2.rest, t2);
        }
        has(e2, t2) {
          const r2 = this._lookup(e2);
          return r2 != null && r2.datastore.has(r2.rest, t2);
        }
        delete(e2, t2) {
          const r2 = this._lookup(e2);
          if (r2 == null)
            throw s.dbDeleteFailedError(new Error("No datastore mounted for this key"));
          return r2.datastore.delete(r2.rest, t2);
        }
        close() {
          return Promise.all(this.mounts.map((e2) => e2.datastore.close()));
        }
        batch() {
          const e2 = {}, t2 = (t3) => {
            const r2 = this._lookup(t3);
            if (r2 == null)
              throw new Error("No datastore mounted for this key");
            const n2 = r2.mountpoint.toString();
            return e2[n2] == null && (e2[n2] = r2.datastore.batch()), {batch: e2[n2], rest: r2.rest};
          };
          return {put: (e3, r2) => {
            const n2 = t2(e3);
            n2.batch.put(n2.rest, r2);
          }, delete: (e3) => {
            const r2 = t2(e3);
            r2.batch.delete(r2.rest);
          }, commit: (t3) => Promise.all(Object.keys(e2).map((r2) => e2[r2].commit(t3)))};
        }
        query(e2, t2) {
          const r2 = this.mounts.map((r3) => {
            const n3 = new h(r3.datastore, {convert: (e3) => {
              throw new Error("should never be called");
            }, invert: (e3) => r3.prefix.child(e3)});
            let i3;
            return e2.prefix != null && (i3 = u(e2.prefix, r3.prefix.toString())), n3.query({prefix: i3, filters: e2.filters, keysOnly: e2.keysOnly}, t2);
          });
          let n2 = (i2 = r2, async function* () {
            for (let e3 = 0; e3 < i2.length; e3++)
              for await (const t3 of i2[e3])
                yield t3;
          }());
          var i2;
          if (e2.filters && e2.filters.forEach((e3) => {
            n2 = o(n2, e3);
          }), e2.orders && e2.orders.forEach((e3) => {
            n2 = c(n2, e3);
          }), e2.offset != null) {
            let t3 = 0;
            n2 = o(n2, () => t3++ >= e2.offset);
          }
          return e2.limit != null && (n2 = a(n2, e2.limit)), n2;
        }
      };
    }, function(e, t, r) {
      "use strict";
      const {Adapter: n, Errors: i} = r(9), s = r(1)("datastore:core:tiered");
      e.exports = class extends n {
        constructor(e2) {
          super(), this.stores = e2.slice();
        }
        async open() {
          try {
            await Promise.all(this.stores.map((e2) => e2.open()));
          } catch (e2) {
            throw i.dbOpenFailedError();
          }
        }
        async put(e2, t2) {
          try {
            await Promise.all(this.stores.map((r2) => r2.put(e2, t2)));
          } catch (r2) {
            throw i.dbWriteFailedError();
          }
        }
        async get(e2, t2) {
          for (const n2 of this.stores)
            try {
              const r2 = await n2.get(e2, t2);
              if (r2)
                return r2;
            } catch (r2) {
              s(r2);
            }
          throw i.notFoundError();
        }
        async has(e2, t2) {
          for (const r2 of this.stores)
            if (await r2.has(e2, t2))
              return true;
          return false;
        }
        async delete(e2, t2) {
          try {
            await Promise.all(this.stores.map((r2) => r2.delete(e2, t2)));
          } catch (r2) {
            throw i.dbDeleteFailedError();
          }
        }
        async close() {
          await Promise.all(this.stores.map((e2) => e2.close()));
        }
        batch() {
          const e2 = this.stores.map((e3) => e3.batch());
          return {put: (t2, r2) => {
            e2.forEach((e3) => e3.put(t2, r2));
          }, delete: (t2) => {
            e2.forEach((e3) => e3.delete(t2));
          }, commit: async (t2) => {
            for (const r2 of e2)
              await r2.commit(t2);
          }};
        }
        query(e2, t2) {
          return this.stores[this.stores.length - 1].query(e2, t2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(9).Key, i = r(112);
      e.exports = class extends i {
        constructor(e2, t2) {
          super(e2, {convert: (e3) => t2.child(e3), invert(e3) {
            if (t2.toString() === "/")
              return e3;
            if (!t2.isAncestorOf(e3))
              throw new Error(`Expected prefix: (${t2.toString()}) in key: ${e3.toString()}`);
            return new n(e3.toString().slice(t2.toString().length), false);
          }}), this.prefix = t2;
        }
        query(e2) {
          return e2.prefix && this.prefix.toString() !== "/" ? super.query(Object.assign({}, e2, {prefix: this.prefix.child(new n(e2.prefix)).toString()})) : super.query(e2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const {Key: n, Adapter: i} = r(9), {encodeBase32: s, keyToTopic: o, topicToKey: a} = r(597), c = r(0), u = r(1), h = u("datastore-pubsub:publisher");
      h.error = u("datastore-pubsub:publisher:error");
      e.exports = class extends i {
        constructor(e2, t2, r2, n2, i2) {
          if (super(), !n2)
            throw c(new TypeError("missing validator"), "ERR_INVALID_PARAMETERS");
          if (typeof n2.validate != "function")
            throw c(new TypeError("missing validate function"), "ERR_INVALID_PARAMETERS");
          if (typeof n2.select != "function")
            throw c(new TypeError("missing select function"), "ERR_INVALID_PARAMETERS");
          if (i2 && typeof i2 != "function")
            throw c(new TypeError("invalid subscriptionKeyFn received"), "ERR_INVALID_PARAMETERS");
          this._pubsub = e2, this._datastore = t2, this._peerId = r2, this._validator = n2, this._handleSubscriptionKeyFn = i2, this._onMessage = this._onMessage.bind(this);
        }
        async put(e2, t2) {
          if (!(e2 instanceof Uint8Array)) {
            const e3 = "datastore key does not have a valid format";
            throw h.error(e3), c(new Error(e3), "ERR_INVALID_DATASTORE_KEY");
          }
          if (!(t2 instanceof Uint8Array)) {
            const e3 = "received value is not a Uint8Array";
            throw h.error(e3), c(new Error(e3), "ERR_INVALID_VALUE_RECEIVED");
          }
          const r2 = o(e2);
          return h("publish value for topic " + r2), this._pubsub.publish(r2, t2);
        }
        async get(e2) {
          if (!(e2 instanceof Uint8Array)) {
            const e3 = "datastore key does not have a valid format";
            throw h.error(e3), c(new Error(e3), "ERR_INVALID_DATASTORE_KEY");
          }
          const t2 = o(e2), r2 = await this._pubsub.getTopics();
          if (r2 && Array.isArray(r2) && r2.indexOf(t2) > -1)
            return this._getLocal(e2);
          try {
            await this._pubsub.subscribe(t2, this._onMessage);
          } catch (n2) {
            const e3 = "cannot subscribe topic " + t2;
            throw h.error(e3), c(new Error(e3), "ERR_SUBSCRIBING_TOPIC");
          }
          return h("subscribed values for key " + t2), this._getLocal(e2);
        }
        unsubscribe(e2) {
          const t2 = o(e2);
          return this._pubsub.unsubscribe(t2, this._onMessage);
        }
        async _getLocal(e2) {
          const t2 = new n("/" + s(e2), false);
          let r2;
          try {
            r2 = await this._datastore.get(t2);
          } catch (i2) {
            if (i2.code !== "ERR_NOT_FOUND") {
              const e4 = "unexpected error getting the ipns record for " + t2.toString();
              throw h.error(e4), c(new Error(e4), "ERR_UNEXPECTED_ERROR_GETTING_RECORD");
            }
            const e3 = "local record requested was not found for " + t2.toString();
            throw h.error(e3), c(new Error(e3), "ERR_NOT_FOUND");
          }
          if (!(r2 instanceof Uint8Array)) {
            const e3 = "found record that we couldn't convert to a value";
            throw h.error(e3), c(new Error(e3), "ERR_INVALID_RECORD_RECEIVED");
          }
          return r2;
        }
        async _onMessage(e2) {
          const {data: t2, from: r2, topicIDs: n2} = e2;
          let i2;
          try {
            i2 = a(n2[0]);
          } catch (s2) {
            return void h.error(s2);
          }
          if (h("message received for topic " + n2[0]), r2 !== this._peerId.toB58String()) {
            if (this._handleSubscriptionKeyFn) {
              let e3;
              try {
                e3 = await this._handleSubscriptionKeyFn(i2);
              } catch (s2) {
                return void h.error("message discarded by the subscriptionKeyFn");
              }
              i2 = e3;
            }
            try {
              await this._storeIfSubscriptionIsBetter(i2, t2);
            } catch (s2) {
              h.error(s2);
            }
          } else
            h("message discarded as it is from the same peer");
        }
        async _storeIfSubscriptionIsBetter(e2, t2) {
          let r2 = false;
          try {
            r2 = await this._isBetter(e2, t2);
          } catch (n2) {
            if (n2.code !== "ERR_NOT_VALID_RECORD")
              throw n2;
          }
          r2 && await this._storeRecord(e2, t2);
        }
        async _validateRecord(e2, t2) {
          return this._validator.validate(e2, t2);
        }
        async _selectRecord(e2, t2) {
          return await this._validator.select(e2, t2) === 0;
        }
        async _isBetter(e2, t2) {
          let r2, i2;
          try {
            i2 = await this._validateRecord(t2, e2);
          } catch (a2) {
            r2 = a2;
          }
          if (r2 || !i2) {
            const e3 = "record received through pubsub is not valid";
            throw h.error(e3), c(new Error(e3), "ERR_NOT_VALID_RECORD");
          }
          const s2 = new n(e2);
          let o2;
          try {
            o2 = await this._getLocal(s2.uint8Array());
          } catch (a2) {
            return true;
          }
          return !o2.equals(t2) && this._selectRecord(t2, o2);
        }
        async _storeRecord(e2, t2) {
          const r2 = new n("/" + s(e2), false);
          await this._datastore.put(r2, t2), h(`record for ${o(e2)} was stored in the datastore`);
        }
        open() {
          const e2 = "open function was not implemented yet";
          throw h.error(e2), c(new Error(e2), "ERR_NOT_IMPLEMENTED_YET");
        }
        has(e2) {
          const t2 = "has function was not implemented yet";
          throw h.error(t2), c(new Error(t2), "ERR_NOT_IMPLEMENTED_YET");
        }
        delete(e2) {
          const t2 = "delete function was not implemented yet";
          throw h.error(t2), c(new Error(t2), "ERR_NOT_IMPLEMENTED_YET");
        }
        close() {
          const e2 = "close function was not implemented yet";
          throw h.error(e2), c(new Error(e2), "ERR_NOT_IMPLEMENTED_YET");
        }
        batch() {
          const e2 = "batch function was not implemented yet";
          throw h.error(e2), c(new Error(e2), "ERR_NOT_IMPLEMENTED_YET");
        }
        query() {
          const e2 = "query function was not implemented yet";
          throw h.error(e2), c(new Error(e2), "ERR_NOT_IMPLEMENTED_YET");
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(5), s = r(6);
      e.exports.encodeBase32 = (e2) => i(e2, "base32"), e.exports.keyToTopic = (e2) => {
        (typeof e2 == "string" || e2 instanceof String) && (e2 = s(e2));
        return "/record/" + i(e2, "base64url");
      }, e.exports.topicToKey = (e2) => {
        if (e2.substring(0, "/record/".length) !== "/record/")
          throw n(new Error("topic received is not from a record"), "ERR_TOPIC_IS_NOT_FROM_RECORD_NAMESPACE");
        const t2 = e2.substring("/record/".length);
        return s(t2, "base64url");
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(20)(r(599)).Record, i = r(600);
      class s {
        constructor(e2, t2, r2) {
          if (!(e2 instanceof Uint8Array))
            throw new Error("key must be a Uint8Array");
          if (!(t2 instanceof Uint8Array))
            throw new Error("value must be a Uint8Array");
          this.key = e2, this.value = t2, this.timeReceived = r2;
        }
        serialize() {
          return n.encode(this.prepareSerialize());
        }
        prepareSerialize() {
          return {key: this.key, value: this.value, timeReceived: this.timeReceived && i.toRFC3339(this.timeReceived)};
        }
        static deserialize(e2) {
          const t2 = n.decode(e2);
          return s.fromDeserialized(t2);
        }
        static fromDeserialized(e2) {
          let t2;
          e2.timeReceived && (t2 = i.parseRFC3339(e2.timeReceived));
          return new s(e2.key, e2.value, t2);
        }
      }
      e.exports = s;
    }, function(e, t, r) {
      "use strict";
      e.exports = "// Record represents a dht record that contains a value\n// for a key value pair\nmessage Record {\n  // The key that references this record\n  bytes key = 1;\n\n  // The actual value this record is storing\n  bytes value = 2;\n\n  // Note: These fields were removed from the Record message\n  // hash of the authors public key\n  // optional bytes author = 3;\n  // A PKI signature for the key+value+author\n  // optional bytes signature = 4;\n\n  // Time the record was received, set by receiver\n  optional string timeReceived = 5;\n}";
    }, function(e, t, r) {
      "use strict";
      e.exports.toRFC3339 = (e2) => `${e2.getUTCFullYear()}-${String(e2.getUTCMonth() + 1).padStart(2, "0")}-${String(e2.getUTCDate()).padStart(2, "0")}T${String(e2.getUTCHours()).padStart(2, "0")}:${String(e2.getUTCMinutes()).padStart(2, "0")}:${String(e2.getUTCSeconds()).padStart(2, "0")}.${1e3 * e2.getUTCMilliseconds() * 1e3}Z`, e.exports.parseRFC3339 = (e2) => {
        const t2 = new RegExp("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})\\.(\\d+)Z"), r2 = String(e2).trim().match(t2);
        if (!r2)
          throw new Error("Invalid format");
        const n = parseInt(r2[1], 10), i = parseInt(r2[2], 10) - 1, s = parseInt(r2[3], 10), o = parseInt(r2[4], 10), a = parseInt(r2[5], 10), c = parseInt(r2[6], 10), u = parseInt(r2[7].slice(0, -6), 10);
        return new Date(Date.UTC(n, i, s, o, a, c, u));
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(5);
      e.exports = {verifyRecord: (e2, t2) => {
        const r2 = t2.key, s = i(r2).split("/");
        if (s.length < 3)
          return;
        const o = e2[s[1].toString()];
        if (!o) {
          throw n(new Error("Invalid record keytype"), "ERR_INVALID_RECORD_KEY_TYPE");
        }
        return o.func(r2, t2.value);
      }, validators: r(602)};
    }, function(e, t, r) {
      "use strict";
      e.exports = {pk: r(603)};
    }, function(e, t, r) {
      "use strict";
      const n = r(15), i = r(0), s = r(5), o = r(19);
      e.exports = {func: async (e2, t2) => {
        if (!(e2 instanceof Uint8Array))
          throw i(new Error('"key" must be a Uint8Array'), "ERR_INVALID_RECORD_KEY_NOT_BUFFER");
        if (e2.byteLength < 5)
          throw i(new Error("invalid public key record"), "ERR_INVALID_RECORD_KEY_TOO_SHORT");
        if (s(e2.subarray(0, 4)) !== "/pk/")
          throw i(new Error("key was not prefixed with /pk/"), "ERR_INVALID_RECORD_KEY_BAD_PREFIX");
        const r2 = e2.slice(4), a = await n(t2, "sha2-256");
        if (!o(r2, a))
          throw i(new Error("public key does not match passed in key"), "ERR_INVALID_RECORD_HASH_MISMATCH");
      }, sign: false};
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(5);
      e.exports = {bestRecord: (e2, t2, r2) => {
        if (r2.length === 0) {
          throw n(new Error("No records given"), "ERR_NO_RECORDS_RECEIVED");
        }
        const s = i(t2).split("/");
        if (s.length < 3) {
          throw n(new Error("Record key does not have a selector function"), "ERR_NO_SELECTOR_FUNCTION_FOR_RECORD_KEY");
        }
        const o = e2[s[1].toString()];
        if (!o) {
          const e3 = "Unrecognized key prefix: " + s[1];
          throw n(new Error(e3), "ERR_UNRECOGNIZED_KEY_PREFIX");
        }
        return o(t2, r2);
      }, selectors: r(605)};
    }, function(e, t, r) {
      "use strict";
      e.exports = {pk: r(606)};
    }, function(e, t, r) {
      "use strict";
      e.exports = (e2, t2) => 0;
    }, function(e, t, r) {
      "use strict";
      const n = r(608), i = r(610), s = r(612);
      e.exports = class {
        constructor({dns: e2, ipns: t2, dagReader: r2, peerId: o, isOnline: a, keychain: c, options: u}) {
          this.publish = n({ipns: t2, dagReader: r2, peerId: o, isOnline: a, keychain: c}), this.resolve = i({dns: e2, ipns: t2, peerId: o, isOnline: a, options: u}), this.pubsub = new s({ipns: t2, options: u.EXPERIMENTAL});
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(1), i = r(150).default, s = r(39), o = r(0), a = Object.assign(n("ipfs:name:publish"), {error: n("ipfs:name:publish:error")}), {OFFLINE_ERROR: c, normalizePath: u} = r(22), h = r(2), {resolvePath: f} = r(609);
      e.exports = ({ipns: e2, dagReader: t2, peerId: r2, isOnline: n2, keychain: d}) => {
        const l = async (e3) => {
          if (e3 === "self")
            return r2.privKey;
          try {
            const t3 = await d.exportKey(e3, "temp");
            return await s.keys.import(t3, "temp");
          } catch (t3) {
            throw a.error(t3), o(t3, "ERR_CANNOT_GET_KEY");
          }
        };
        return h(async function(r3, s2 = {}) {
          const h2 = !(s2.resolve === false), d2 = s2.lifetime || "24h", p = s2.key || "self";
          if (!n2())
            throw o(new Error(c), "OFFLINE_ERROR");
          try {
            r3 = u(r3);
          } catch (b) {
            throw a.error(b), b;
          }
          let y = 0;
          try {
            y = i(d2) || 0, y = parseFloat(y.toFixed(6));
          } catch (b) {
            throw a.error(b), b;
          }
          const g = await Promise.all([l(p), h2 ? f({ipns: e2, dagReader: t2}, r3) : Promise.resolve()]);
          return e2.publish(g[0], r3, y);
        });
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(52);
      t.resolvePath = ({ipns: e2, dagReader: t2}, r2) => n.ipnsPath(r2) ? e2.resolve(r2) : t2.get(r2.substring("/ipfs/".length));
    }, function(e, t, r) {
      "use strict";
      const n = r(1), i = r(0), {mergeOptions: s} = r(22), o = r(4), a = r(611), c = Object.assign(n("ipfs:name:resolve"), {error: n("ipfs:name:resolve:error")}), {OFFLINE_ERROR: u} = r(22), h = r(2), f = (e2, t2) => t2.length > 0 ? e2 + "/" + t2.join("/") : e2;
      e.exports = ({dns: e2, ipns: t2, peerId: r2, isOnline: n2, options: {offline: d}}) => h(async function* (h2, l = {}) {
        if (l = s({nocache: false, recursive: true}, l), d && l && l.nocache)
          throw i(new Error("cannot specify both offline and nocache"), "ERR_NOCACHE_AND_OFFLINE");
        h2 || (h2 = r2.toB58String()), h2.startsWith("/ipns/") || (h2 = "/ipns/" + h2);
        const [p, y, ...g] = h2.slice(1).split("/");
        try {
          new o(y);
        } catch (b) {
          if (a(y))
            return void (yield f(await e2(y, l), g));
          throw c.error(b), i(new Error("Invalid IPNS name"), "ERR_IPNS_INVALID_NAME");
        }
        if (!n2() && !d)
          throw i(new Error(u), "OFFLINE_ERROR");
        yield f(await t2.resolve(`/${p}/${y}`, l), g);
      });
    }, function(e, t, r) {
      "use strict";
      var n = /^(?:[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9])?\.){0,126}(?:[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9]))\.?$/i;
      e.exports = function(e2, t2) {
        if (t2 == null && (t2 = false), e2.length < 2)
          return false;
        if (e2.length > 255)
          return false;
        var r2 = e2[e2.length - 1];
        if (t2) {
          if (r2 !== ".")
            return false;
        } else if (r2 === ".")
          return false;
        return n.test(e2);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(613), i = r(614), s = r(615);
      e.exports = class {
        constructor({ipns: e2, options: t2}) {
          this.cancel = n({ipns: e2, options: t2}), this.state = i({ipns: e2, options: t2}), this.subs = s({ipns: e2, options: t2});
        }
      };
    }, function(e, t, r) {
      "use strict";
      const {getPubsubRouting: n} = r(162), i = r(2);
      e.exports = ({ipns: e2, options: t2}) => i(async function(r2, i2) {
        return n(e2, t2).cancel(r2, i2);
      });
    }, function(e, t, r) {
      "use strict";
      const {getPubsubRouting: n} = r(162), i = r(2);
      e.exports = ({ipns: e2, options: t2}) => i(async function(r2) {
        try {
          return {enabled: Boolean(n(e2, t2))};
        } catch (i2) {
          return {enabled: false};
        }
      });
    }, function(e, t, r) {
      "use strict";
      const {getPubsubRouting: n} = r(162), i = r(2);
      e.exports = ({ipns: e2, options: t2}) => i(async function(r2) {
        return n(e2, t2).getSubscriptions(r2);
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(52), i = r(4), {DAGNode: s} = r(16), {normalizeCidPath: o} = r(22), {Errors: a} = r(9), c = a.notFoundError().code, u = r(2), h = {default: "<dst>", edges: "<src> -> <dst>"};
      async function* f(e2, t2, r2, n2) {
        const o2 = (await e2(r2)).split("/")[2];
        for await (const a2 of async function* (e3, t3, r3, n3) {
          const o3 = new Set();
          yield* async function* t4(a3, u2) {
            const h2 = u2 + 1;
            if (!(h2 > r3))
              try {
                for (const r4 of await async function(e4, t5) {
                  const r5 = await e4.get(new i(t5));
                  if (s.isDAGNode(r5))
                    return r5.Links.map(({Name: e5, Hash: t6}) => ({name: e5, cid: new i(t6)}));
                  return function e5(t6, r6 = "") {
                    let n4 = [];
                    for (const [s2, o4] of Object.entries(t6))
                      i.isCID(o4) ? n4.push({name: r6 + s2, cid: o4}) : typeof o4 == "object" && (n4 = n4.concat(e5(o4, r6 + s2 + "/")));
                    return n4;
                  }(r5);
                }(e3, a3.cid))
                  yield {parent: a3, node: r4, isDuplicate: n3 && o3.has(r4.cid.toString())}, n3 && o3.add(r4.cid.toString()), yield* t4(r4, h2);
              } catch (f2) {
                throw f2.code === c && (f2.message = "Could not find object with CID: " + a3.cid), f2;
              }
          }({cid: t3}, 0);
        }(t2, o2, n2.maxDepth, n2.unique))
          a2.parent && (a2.isDuplicate || (yield {ref: d(a2.parent.cid, a2.node.cid, a2.node.name, n2.format)}));
      }
      function d(e2, t2, r2, n2) {
        let i2 = n2.replace(/<src>/g, e2.toString());
        return i2 = i2.replace(/<dst>/g, t2.toString()), i2 = i2.replace(/<linkname>/g, r2), i2;
      }
      e.exports = function({ipld: e2, resolve: t2, preload: r2}) {
        return u(async function* (i2, s2 = {}) {
          if (s2.maxDepth === 0)
            return;
          if (s2.edges && s2.format && s2.format !== h.default)
            throw new Error("Cannot set edges to true and also specify format");
          s2.format = s2.edges ? h.edges : s2.format || h.default, typeof s2.maxDepth != "number" && (s2.maxDepth = s2.recursive ? 1 / 0 : 1);
          const a2 = (Array.isArray(i2) ? i2 : [i2]).map((e3) => function(e4, t3, r3) {
            const i3 = o(t3), s3 = i3.split("/")[0];
            if (!n.cid(s3))
              throw new Error(`Error resolving path '${i3}': '${s3}' is not a valid CID`);
            r3.preload !== false && e4(s3);
            return "/ipfs/" + i3;
          }(r2, e3, s2));
          for (const r3 of a2)
            yield* f(t2, e2, r3, s2);
        });
      }, e.exports.Format = h;
    }, function(e, t, r) {
      "use strict";
      const n = r(2);
      e.exports = function({repo: e2}) {
        return n(async function* (t2 = {}) {
          for await (const r2 of e2.blocks.query({keysOnly: true, signal: t2.signal}))
            yield {ref: r2.toString()};
        });
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(619), i = r(620), s = r(621), o = r(278);
      e.exports = class {
        constructor({network: e2}) {
          this.wantlist = n({network: e2}), this.wantlistForPeer = i({network: e2}), this.unwant = s({network: e2}), this.stat = o({network: e2});
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(2);
      e.exports = ({network: e2}) => n(async function(t2 = {}) {
        const {bitswap: r2} = await e2.use(t2), n2 = r2.getWantlist(t2);
        return Array.from(n2).map((e3) => e3[1].cid);
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(7), i = r(2);
      e.exports = ({network: e2}) => i(async function(t2, r2 = {}) {
        const {bitswap: i2} = await e2.use(r2), s = i2.wantlistForPeer(n.createFromCID(t2), r2);
        return Array.from(s).map((e3) => e3[1].cid);
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(0), s = r(2);
      e.exports = ({network: e2}) => s(async function(t2, r2) {
        const {bitswap: s2} = await e2.use(r2);
        Array.isArray(t2) || (t2 = [t2]);
        try {
          t2 = t2.map((e3) => new n(e3));
        } catch (o) {
          throw i(o, "ERR_INVALID_CID");
        }
        return s2.unwant(t2, r2);
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(623), i = r(624), s = r(625), o = r(626), a = r(627);
      e.exports = class {
        constructor({repo: e2}) {
          this.add = n({repo: e2}), this.list = s({repo: e2}), this.rm = a({repo: e2}), this.clear = i({repo: e2}), this.reset = o({repo: e2});
        }
      };
    }, function(e, t, r) {
      "use strict";
      const {isValidMultiaddr: n} = r(279), i = r(2);
      e.exports = ({repo: e2}) => i(async function(t2, r2 = {}) {
        if (!n(t2))
          throw new Error(t2 + " is not a valid Multiaddr");
        const i2 = await e2.config.getAll(r2);
        return i2.Bootstrap.indexOf(t2.toString()) === -1 && i2.Bootstrap.push(t2.toString()), await e2.config.replace(i2), {Peers: [t2]};
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(2), i = r(11);
      e.exports = ({repo: e2}) => n(async function(t2 = {}) {
        const r2 = await e2.config.getAll(t2), n2 = r2.Bootstrap || [];
        return r2.Bootstrap = [], await e2.config.replace(r2), {Peers: n2.map((e3) => new i(e3))};
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(2), i = r(11);
      e.exports = ({repo: e2}) => n(async function(t2) {
        return {Peers: (await e2.config.get("Bootstrap", t2) || []).map((e3) => new i(e3))};
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(163), i = r(2), s = r(11);
      e.exports = ({repo: e2}) => i(async function(t2 = {}) {
        const r2 = await e2.config.getAll(t2);
        return r2.Bootstrap = n().Bootstrap, await e2.config.replace(r2), {Peers: n().Bootstrap.map((e3) => new s(e3))};
      });
    }, function(e, t, r) {
      "use strict";
      const {isValidMultiaddr: n} = r(279), i = r(2);
      e.exports = ({repo: e2}) => i(async function(t2, r2 = {}) {
        if (!n(t2))
          throw new Error(t2 + " is not a valid Multiaddr");
        const i2 = await e2.config.getAll(r2);
        return i2.Bootstrap = (i2.Bootstrap || []).filter((e3) => e3.toString() !== t2.toString()), await e2.config.replace(i2), {Peers: [t2]};
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(629), i = r(630), s = r(632), o = r(633);
      e.exports = class {
        constructor({blockService: e2, preload: t2, gcLock: r2, pinManager: a, pin: c}) {
          this.get = n({blockService: e2, preload: t2}), this.put = i({blockService: e2, preload: t2, gcLock: r2, pin: c}), this.rm = s({blockService: e2, gcLock: r2, pinManager: a}), this.stat = o({blockService: e2, preload: t2});
        }
      };
    }, function(e, t, r) {
      "use strict";
      const {cleanCid: n} = r(164), i = r(2);
      e.exports = ({blockService: e2, preload: t2}) => i(async function(r2, i2 = {}) {
        return r2 = n(r2), i2.preload !== false && t2(r2), e2.get(r2, i2);
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(89), i = r(15), s = r(4), o = r(52), a = r(2);
      e.exports = ({blockService: e2, pin: t2, gcLock: r2, preload: c}) => a(async function(a2, u = {}) {
        if (Array.isArray(a2))
          throw new Error("Array is not supported");
        if (!n.isBlock(a2)) {
          const e3 = a2;
          if (u.cid && o.cid(u.cid)) {
            const t3 = s.isCID(u.cid) ? u.cid : new s(u.cid);
            a2 = new n(e3, t3);
          } else {
            const t3 = u.mhtype || "sha2-256", r3 = u.format || "dag-pb";
            let o2 = 1;
            o2 = u.version == null ? t3 === "sha2-256" && r3 === "dag-pb" ? 0 : 1 : u.version;
            const c2 = await i(a2, t3), h2 = new s(o2, r3, c2);
            a2 = new n(e3, h2);
          }
        }
        const h = await r2.readLock();
        try {
          return await e2.put(a2, {signal: u.signal}), u.preload !== false && c(a2.cid), u.pin === true && await t2.add(a2.cid, {recursive: true, signal: u.signal}), a2;
        } finally {
          h();
        }
      });
    }, function(e) {
      e.exports = JSON.parse('{"_from":"ipld-block@^0.11.0","_id":"ipld-block@0.11.0","_inBundle":false,"_integrity":"sha512-Kk56OOPmlWAjXfBJXvx2jX5RA6R9qUrcc2JXwF7Y4IL9mlmxcxTNkgcsJYR78DbyMllQbi7yreghjGjtCTYKaw==","_location":"/ipld-block","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"ipld-block@^0.11.0","name":"ipld-block","escapedName":"ipld-block","rawSpec":"^0.11.0","saveSpec":null,"fetchSpec":"^0.11.0"},"_requiredBy":["/","/ipfs-bitswap","/ipfs-repo","/ipld"],"_resolved":"https://registry.npmjs.org/ipld-block/-/ipld-block-0.11.0.tgz","_shasum":"71b24b70f4d867b0609a738efa4872ef4df84c7a","_spec":"ipld-block@^0.11.0","_where":"/Users/alex/Documents/Workspaces/ipfs/js-ipfs-release","bugs":{"url":"https://github.com/ipld/js-ipld-block/issues"},"bundleDependencies":false,"contributors":[{"name":"David Dias","email":"daviddias.p@gmail.com"},{"name":"Volker Mische","email":"volker.mische@gmail.com"},{"name":"Friedel Ziegelmayer","email":"dignifiedquire@gmail.com"},{"name":"Irakli Gozalishvili","email":"contact@gozala.io"},{"name":"achingbrain","email":"alex@achingbrain.net"},{"name":"\u1D20\u026A\u1D04\u1D1B\u1D0F\u0280 \u0299\u1D0A\u1D07\u029F\u1D0B\u029C\u1D0F\u029F\u1D0D","email":"victorbjelkholm@gmail.com"},{"name":"Alan Shaw","email":"alan.shaw@protocol.ai"},{"name":"Charlie","email":"the_charlie_daly@hotmail.co.uk"},{"name":"Diogo Silva","email":"fsdiogo@gmail.com"},{"name":"Hugo Dias","email":"hugomrdias@gmail.com"},{"name":"Mikeal Rogers","email":"mikeal.rogers@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"},{"name":"Richard Schneider","email":"makaretu@gmail.com"},{"name":"Xmader","email":"xmader@outlook.com"}],"dependencies":{"cids":"^1.0.0"},"deprecated":false,"description":"JavaScript Implementation of IPLD Block","devDependencies":{"aegir":"^27.0.0","typescript":"^4.0.3","uint8arrays":"^1.0.0"},"engines":{"node":">=6.0.0","npm":">=3.0.0"},"homepage":"https://github.com/ipld/js-ipld-block#readme","keywords":["IPLD"],"leadMaintainer":"Volker Mische <volker.mische@gmail.com>","license":"MIT","main":"src/index.js","name":"ipld-block","pre-push":["lint","test"],"repository":{"type":"git","url":"git+https://github.com/ipld/js-ipld-block.git"},"scripts":{"build":"npm run build:js && npm run build:types","build:js":"aegir build","build:types":"tsc --emitDeclarationOnly --declarationDir dist","check":"tsc --noEmit --noErrorTruncation","coverage":"aegir coverage","coverage-publish":"aegir coverage --provider coveralls","docs":"aegir docs","lint":"aegir lint","prepare":"npm run build:types","release":"aegir release --docs","release-major":"aegir release --type major --docs","release-minor":"aegir release --type minor --docs","test":"aegir test","test:browser":"aegir test --target browser","test:node":"aegir test --target node"},"typesVersions":{"*":{"*":["dist/*"]}},"version":"0.11.0"}');
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(0), {parallelMap: s, filter: o} = r(55), {pipe: a} = r(25), {PinTypes: c} = r(83), {cleanCid: u} = r(164), h = r(2);
      e.exports = ({blockService: e2, gcLock: t2, pinManager: r2}) => h(async function* (h2, f = {}) {
        Array.isArray(h2) || (h2 = [h2]);
        const d = await t2.writeLock();
        try {
          yield* a(h2, s(8, async (t3) => {
            const s2 = {cid: t3 = u(t3)};
            try {
              const s3 = await r2.isPinnedWithType(t3, c.all);
              if (s3.pinned) {
                if (n.isCID(s3.reason))
                  throw i(new Error("pinned via " + s3.reason));
                throw i(new Error("pinned: " + s3.reason));
              }
              if (!await e2._repo.blocks.has(t3))
                throw i(new Error("block not found"), "ERR_BLOCK_NOT_FOUND");
              await e2.delete(t3);
            } catch (o2) {
              f.force || (o2.message = `cannot remove ${t3}: ${o2.message}`, s2.error = o2);
            }
            return s2;
          }), o(() => !f.quiet));
        } finally {
          d();
        }
      });
    }, function(e, t, r) {
      "use strict";
      const {cleanCid: n} = r(164), i = r(2);
      e.exports = ({blockService: e2, preload: t2}) => i(async function(r2, i2 = {}) {
        return r2 = n(r2), i2.preload !== false && t2(r2), {cid: r2, size: (await e2.get(r2)).data.length};
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(635), i = r(636), s = r(665), o = r(674), a = r(675);
      e.exports = class {
        constructor({preload: e2, gcLock: t2, pin: r2, block: c, ipld: u, options: h}) {
          const f = i({preload: e2, gcLock: t2, block: c, pin: r2, options: h});
          this.addAll = f, this.add = n({addAll: f}), this.cat = s({ipld: u, preload: e2}), this.get = o({ipld: u, preload: e2}), this.ls = a({ipld: u, preload: e2});
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(40);
      e.exports = ({addAll: e2}) => async function(t2, r2) {
        return await n(e2(t2, r2));
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(165), i = r(660), {parseChunkerString: s} = r(664), {pipe: o} = r(25), a = r(2), c = r(23).bind({ignoreUndefined: true});
      e.exports = ({block: e2, gcLock: t2, preload: r2, pin: u, options: h}) => {
        const f = h && h.sharding;
        return a(async function* (a2, h2 = {}) {
          const d = c({shardSplitThreshold: f ? 1e3 : 1 / 0, strategy: "balanced"}, h2, {...s(h2.chunker)});
          d.hashAlg && d.hashAlg !== "sha2-256" && d.cidVersion !== 1 && (d.cidVersion = 1), d.trickle && (d.strategy = "trickle"), d.strategy === "trickle" && (d.leafType = "raw", d.reduceSingleLeafToSelf = false), d.cidVersion > 0 && d.rawLeaves === void 0 && (d.rawLeaves = true), d.hashAlg !== void 0 && d.rawLeaves === void 0 && (d.rawLeaves = true), delete d.trickle;
          const l = {};
          if (d.progress) {
            const e3 = d.progress;
            d.progress = (t3, r3) => {
              l[r3] || (l[r3] = 0), l[r3] += t3, e3(l[r3], r3);
            };
          }
          const p = o(i(a2), (t3) => n(t3, e2, {...d, pin: false}), function(e3) {
            return async function* (t3) {
              for await (const r3 of t3) {
                let t4 = r3.cid;
                e3.cidVersion === 1 && (t4 = t4.toV1());
                let n2 = r3.path ? r3.path : t4.toString();
                e3.wrapWithDirectory && !r3.path && (n2 = ""), yield {path: n2, cid: t4, size: r3.size, mode: r3.unixfs && r3.unixfs.mode, mtime: r3.unixfs && r3.unixfs.mtime};
              }
            };
          }(d), function(e3, t3) {
            return async function* (r3) {
              for await (const n2 of r3) {
                (!n2.path || t3.wrapWithDirectory ? n2.path === "" : !n2.path.includes("/")) && !t3.onlyHash && t3.preload !== false && e3(n2.cid), yield n2;
              }
            };
          }(r2, d), function(e3, t3) {
            return async function* (r3) {
              for await (const n2 of r3) {
                const r4 = !n2.path.includes("/");
                (t3.pin == null || t3.pin) && r4 && !t3.onlyHash && await e3.add(n2.cid, {preload: false, lock: false}), yield n2;
              }
            };
          }(u, d)), y = await t2.readLock();
          try {
            for await (const e3 of p)
              delete l[e3.path], yield e3;
          } finally {
            y();
          }
        });
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = (e2) => {
        if (Object.prototype.toString.call(e2) !== "[object Object]")
          return false;
        const t2 = Object.getPrototypeOf(e2);
        return t2 === null || t2 === Object.prototype;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(639), i = r(640);
      e.exports = async function* (e2, t2, s) {
        for await (const o of e2)
          if (o.path && (o.path.substring(0, 2) === "./" && (s.wrapWithDirectory = true), o.path = o.path.split("/").filter((e3) => e3 && e3 !== ".").join("/")), o.content) {
            let e3, n2, a = o.content;
            (a[Symbol.asyncIterator] || a[Symbol.iterator]) && a.length === void 0 || (a = {[Symbol.iterator]: function* () {
              yield o.content;
            }}), e3 = typeof s.chunker == "function" ? s.chunker : s.chunker === "rabin" ? r(645) : r(650), n2 = typeof s.chunkValidator == "function" ? s.chunkValidator : r(651), yield () => i(o, e3(n2(a, s), s), t2, s);
          } else
            yield () => n(o, t2, s);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(28), i = r(67), {DAGNode: s} = r(16);
      e.exports = async (e2, t2, r2) => {
        const o = new n({type: "directory", mtime: e2.mtime, mode: e2.mode}), a = new s(o.marshal()).serialize();
        return {cid: await i(a, t2, r2), path: e2.path, unixfs: o, size: a.length};
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(28), s = r(67), {DAGNode: o, DAGLink: a} = r(16), c = r(84), u = r(280), h = r(15).multihash, f = {flat: r(641), balanced: r(642), trickle: r(643)};
      e.exports = async (e2, t2, d, l) => {
        const p = f[l.strategy];
        if (!p)
          throw n(new Error("Unknown importer build strategy name: " + l.strategy), "ERR_BAD_STRATEGY");
        const y = await c(p(async function* (e3, t3, n2, i2) {
          let s2, o2, a2 = -1;
          o2 = typeof i2.bufferImporter == "function" ? i2.bufferImporter : r(644);
          for await (const r2 of u(o2(e3, t3, n2, i2), i2.blockWriteConcurrency))
            a2++, a2 !== 0 ? (a2 === 1 && (yield s2, s2 = null), yield r2) : s2 = r2;
          s2 && (s2.single = true, yield s2);
        }(e2, t2, d, l), ((e3, t3, r2) => async function(n2) {
          if (n2.length === 1 && n2[0].single && r2.reduceSingleLeafToSelf) {
            const a2 = n2[0];
            if (a2.cid.codec === "raw" && (e3.mtime !== void 0 || e3.mode !== void 0)) {
              let {data: n3} = await t3.get(a2.cid, r2);
              a2.unixfs = new i({type: "file", mtime: e3.mtime, mode: e3.mode, data: n3});
              const c3 = h.decode(a2.cid.multihash);
              n3 = new o(a2.unixfs.marshal()).serialize(), a2.cid = await s(n3, t3, {...r2, codec: "dag-pb", hashAlg: c3.name, cidVersion: r2.cidVersion}), a2.size = n3.length;
            }
            return {cid: a2.cid, path: e3.path, unixfs: a2.unixfs, size: a2.size};
          }
          const c2 = new i({type: "file", mtime: e3.mtime, mode: e3.mode}), u2 = n2.filter((e4) => !(e4.cid.codec !== "raw" || !e4.size) || (!(e4.unixfs.data || !e4.unixfs.fileSize()) || Boolean(e4.unixfs.data.length))).map((e4) => e4.cid.codec === "raw" ? (c2.addBlockSize(e4.size), new a(e4.name, e4.size, e4.cid)) : (e4.unixfs.data ? c2.addBlockSize(e4.unixfs.data.length) : c2.addBlockSize(e4.unixfs.fileSize()), new a(e4.name, e4.size, e4.cid))), f2 = new o(c2.marshal(), u2), d2 = f2.serialize();
          return {cid: await s(d2, t3, r2), path: e3.path, unixfs: c2, size: d2.length + f2.Links.reduce((e4, t4) => e4 + t4.Tsize, 0)};
        })(e2, d, l), l));
        if (y.length > 1)
          throw n(new Error("expected a maximum of 1 roots and got " + y.length), "ETOOMANYROOTS");
        return y[0];
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(84);
      e.exports = async function* (e2, t2) {
        yield await t2(await n(e2));
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(166);
      e.exports = async function* (e2, t2, r2) {
        yield await async function e3(t3, r3, i) {
          const s = [];
          for await (const o of n(t3, i.maxChildrenPerNode))
            s.push(await r3(o));
          if (s.length > 1)
            return e3(s, r3, i);
          return s[0];
        }(e2, t2, r2);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(166);
      e.exports = function* (e2, t2, r2) {
        yield async function(e3, t3, r3) {
          let o, a = 0, c = 1, u = o = new s(r3.layerRepeat);
          for await (const s2 of n(e3, r3.maxChildrenPerNode))
            u.isFull() && (u !== o && o.addChild(await u.reduce(t3)), a && a % r3.layerRepeat == 0 && c++, u = new i(c, r3.layerRepeat, a), a++), u.append(s2);
          u && u !== o && o.addChild(await u.reduce(t3));
          return o.reduce(t3);
        }(e2, t2, r2);
      };
      class i {
        constructor(e2, t2, r2) {
          this.maxDepth = e2, this.layerRepeat = t2, this.currentDepth = 1, this.iteration = r2, this.root = this.node = this.parent = {children: [], depth: this.currentDepth, maxDepth: e2, maxChildren: (this.maxDepth - this.currentDepth) * this.layerRepeat};
        }
        isFull() {
          if (!this.root.data)
            return false;
          if (this.currentDepth < this.maxDepth && this.node.maxChildren)
            return this._addNextNodeToParent(this.node), false;
          const e2 = this._findParent(this.node, this.currentDepth);
          return !e2 || (this._addNextNodeToParent(e2), false);
        }
        _addNextNodeToParent(e2) {
          this.parent = e2;
          const t2 = {children: [], depth: e2.depth + 1, parent: e2, maxDepth: this.maxDepth, maxChildren: Math.floor(e2.children.length / this.layerRepeat) * this.layerRepeat};
          e2.children.push(t2), this.currentDepth = t2.depth, this.node = t2;
        }
        append(e2) {
          this.node.data = e2;
        }
        reduce(e2) {
          return this._reduce(this.root, e2);
        }
        async _reduce(e2, t2) {
          let r2 = [];
          return e2.children.length && (r2 = await Promise.all(e2.children.filter((e3) => e3.data).map((e3) => this._reduce(e3, t2)))), t2(e2.data.concat(r2));
        }
        _findParent(e2, t2) {
          const r2 = e2.parent;
          if (r2 && r2.depth !== 0)
            return r2.children.length !== r2.maxChildren && r2.maxChildren ? r2 : this._findParent(r2, t2);
        }
      }
      class s extends i {
        constructor(e2) {
          super(0, e2), this.root.depth = 0, this.currentDepth = 1;
        }
        addChild(e2) {
          this.root.children.push(e2);
        }
        reduce(e2) {
          return e2(this.root.data.concat(this.root.children));
        }
      }
    }, function(e, t, r) {
      "use strict";
      const n = r(28), i = r(67), {DAGNode: s} = r(16);
      e.exports = async function* (e2, t2, r2, o) {
        for await (let a of t2)
          yield async () => {
            let t3;
            o.progress(a.length, e2.path);
            const c = {...o};
            return o.rawLeaves ? (c.codec = "raw", c.cidVersion = 1) : (t3 = new n({type: o.leafType, data: a, mtime: e2.mtime, mode: e2.mode}), a = new s(t3.marshal()).serialize()), {cid: await i(a, r2, c), unixfs: t3, size: a.length};
          };
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(33), {create: i} = r(646), s = r(0);
      e.exports = async function* (e2, t2) {
        const r2 = o();
        let n2, i2, a;
        if (t2.minChunkSize && t2.maxChunkSize && t2.avgChunkSize)
          a = t2.avgChunkSize, n2 = t2.minChunkSize, i2 = t2.maxChunkSize;
        else {
          if (!t2.avgChunkSize)
            throw s(new Error("please specify an average chunk size"), "ERR_INVALID_AVG_CHUNK_SIZE");
          a = t2.avgChunkSize, n2 = a / 3, i2 = a + a / 2;
        }
        if (n2 < 16)
          throw s(new Error("rabin min must be greater than 16"), "ERR_INVALID_MIN_CHUNK_SIZE");
        i2 < n2 && (i2 = n2), a < n2 && (a = n2);
        const c = Math.floor(Math.log2(a));
        for await (const s2 of r2(e2, {min: n2, max: i2, bits: c, window: t2.window, polynomial: t2.polynomial}))
          yield s2;
      };
      const o = () => async function* (e2, t2) {
        const r2 = await i(t2.bits, t2.min, t2.max, t2.window), s2 = new n();
        for await (const n2 of e2) {
          s2.append(n2);
          const e3 = r2.fingerprint(n2);
          for (let t3 = 0; t3 < e3.length; t3++) {
            var o2 = e3[t3], a = s2.slice(0, o2);
            s2.consume(o2), yield a;
          }
        }
        s2.length && (yield s2.slice(0));
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(647), i = r(648);
      e.exports = {Rabin: n, create: async (e2, t2, r2, s, o) => {
        const a = await i();
        return new n(a, e2, t2, r2, s, o);
      }};
    }, function(e, t, r) {
      "use strict";
      e.exports = class {
        constructor(e2, t2 = 12, r2 = 8192, n = 32768, i = 64, s) {
          this.bits = t2, this.min = r2, this.max = n, this.asModule = e2, this.rabin = new e2.Rabin(t2, r2, n, i, s), this.polynomial = s;
        }
        fingerprint(e2) {
          const {__retain: t2, __release: r2, __allocArray: n, __getInt32Array: i, Int32Array_ID: s, Uint8Array_ID: o} = this.asModule, a = t2(n(s, new Int32Array(Math.ceil(e2.length / this.min)))), c = t2(n(o, e2)), u = i(this.rabin.fingerprint(c, a));
          r2(c), r2(a);
          const h = [];
          for (let f = 0; f < u.length && u[f] !== 0; f++)
            h[f] = u[f];
          return h;
        }
      };
    }, function(e, t, r) {
      "use strict";
      const {instantiate: n} = r(649);
      function i(e2 = {}) {
        if (!i.supported)
          return null;
        var t2 = new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 78, 14, 96, 2, 127, 126, 0, 96, 1, 127, 1, 126, 96, 2, 127, 127, 0, 96, 1, 127, 1, 127, 96, 1, 127, 0, 96, 3, 127, 127, 127, 0, 96, 2, 127, 127, 1, 127, 96, 3, 127, 127, 127, 1, 127, 96, 0, 0, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 0, 96, 5, 127, 127, 127, 127, 127, 1, 127, 96, 1, 126, 1, 127, 96, 2, 126, 126, 1, 126, 2, 13, 1, 3, 101, 110, 118, 5, 97, 98, 111, 114, 116, 0, 10, 3, 54, 53, 2, 2, 5, 9, 3, 6, 2, 5, 7, 6, 3, 4, 2, 7, 9, 12, 13, 5, 6, 11, 3, 2, 3, 2, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 7, 8, 8, 4, 4, 5, 3, 1, 0, 1, 6, 47, 9, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 0, 65, 3, 11, 127, 0, 65, 4, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 0, 65, 240, 2, 11, 127, 0, 65, 6, 11, 7, 240, 5, 41, 6, 109, 101, 109, 111, 114, 121, 2, 0, 7, 95, 95, 97, 108, 108, 111, 99, 0, 10, 8, 95, 95, 114, 101, 116, 97, 105, 110, 0, 11, 9, 95, 95, 114, 101, 108, 101, 97, 115, 101, 0, 12, 9, 95, 95, 99, 111, 108, 108, 101, 99, 116, 0, 51, 11, 95, 95, 114, 116, 116, 105, 95, 98, 97, 115, 101, 3, 7, 13, 73, 110, 116, 51, 50, 65, 114, 114, 97, 121, 95, 73, 68, 3, 2, 13, 85, 105, 110, 116, 56, 65, 114, 114, 97, 121, 95, 73, 68, 3, 3, 6, 100, 101, 103, 114, 101, 101, 0, 16, 3, 109, 111, 100, 0, 17, 5, 82, 97, 98, 105, 110, 3, 8, 16, 82, 97, 98, 105, 110, 35, 103, 101, 116, 58, 119, 105, 110, 100, 111, 119, 0, 21, 16, 82, 97, 98, 105, 110, 35, 115, 101, 116, 58, 119, 105, 110, 100, 111, 119, 0, 22, 21, 82, 97, 98, 105, 110, 35, 103, 101, 116, 58, 119, 105, 110, 100, 111, 119, 95, 115, 105, 122, 101, 0, 23, 21, 82, 97, 98, 105, 110, 35, 115, 101, 116, 58, 119, 105, 110, 100, 111, 119, 95, 115, 105, 122, 101, 0, 24, 14, 82, 97, 98, 105, 110, 35, 103, 101, 116, 58, 119, 112, 111, 115, 0, 25, 14, 82, 97, 98, 105, 110, 35, 115, 101, 116, 58, 119, 112, 111, 115, 0, 26, 15, 82, 97, 98, 105, 110, 35, 103, 101, 116, 58, 99, 111, 117, 110, 116, 0, 27, 15, 82, 97, 98, 105, 110, 35, 115, 101, 116, 58, 99, 111, 117, 110, 116, 0, 28, 13, 82, 97, 98, 105, 110, 35, 103, 101, 116, 58, 112, 111, 115, 0, 29, 13, 82, 97, 98, 105, 110, 35, 115, 101, 116, 58, 112, 111, 115, 0, 30, 15, 82, 97, 98, 105, 110, 35, 103, 101, 116, 58, 115, 116, 97, 114, 116, 0, 31, 15, 82, 97, 98, 105, 110, 35, 115, 101, 116, 58, 115, 116, 97, 114, 116, 0, 32, 16, 82, 97, 98, 105, 110, 35, 103, 101, 116, 58, 100, 105, 103, 101, 115, 116, 0, 33, 16, 82, 97, 98, 105, 110, 35, 115, 101, 116, 58, 100, 105, 103, 101, 115, 116, 0, 34, 21, 82, 97, 98, 105, 110, 35, 103, 101, 116, 58, 99, 104, 117, 110, 107, 95, 115, 116, 97, 114, 116, 0, 35, 21, 82, 97, 98, 105, 110, 35, 115, 101, 116, 58, 99, 104, 117, 110, 107, 95, 115, 116, 97, 114, 116, 0, 36, 22, 82, 97, 98, 105, 110, 35, 103, 101, 116, 58, 99, 104, 117, 110, 107, 95, 108, 101, 110, 103, 116, 104, 0, 37, 22, 82, 97, 98, 105, 110, 35, 115, 101, 116, 58, 99, 104, 117, 110, 107, 95, 108, 101, 110, 103, 116, 104, 0, 38, 31, 82, 97, 98, 105, 110, 35, 103, 101, 116, 58, 99, 104, 117, 110, 107, 95, 99, 117, 116, 95, 102, 105, 110, 103, 101, 114, 112, 114, 105, 110, 116, 0, 39, 31, 82, 97, 98, 105, 110, 35, 115, 101, 116, 58, 99, 104, 117, 110, 107, 95, 99, 117, 116, 95, 102, 105, 110, 103, 101, 114, 112, 114, 105, 110, 116, 0, 40, 20, 82, 97, 98, 105, 110, 35, 103, 101, 116, 58, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108, 0, 41, 20, 82, 97, 98, 105, 110, 35, 115, 101, 116, 58, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108, 0, 42, 17, 82, 97, 98, 105, 110, 35, 103, 101, 116, 58, 109, 105, 110, 115, 105, 122, 101, 0, 43, 17, 82, 97, 98, 105, 110, 35, 115, 101, 116, 58, 109, 105, 110, 115, 105, 122, 101, 0, 44, 17, 82, 97, 98, 105, 110, 35, 103, 101, 116, 58, 109, 97, 120, 115, 105, 122, 101, 0, 45, 17, 82, 97, 98, 105, 110, 35, 115, 101, 116, 58, 109, 97, 120, 115, 105, 122, 101, 0, 46, 14, 82, 97, 98, 105, 110, 35, 103, 101, 116, 58, 109, 97, 115, 107, 0, 47, 14, 82, 97, 98, 105, 110, 35, 115, 101, 116, 58, 109, 97, 115, 107, 0, 48, 17, 82, 97, 98, 105, 110, 35, 99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114, 0, 20, 17, 82, 97, 98, 105, 110, 35, 102, 105, 110, 103, 101, 114, 112, 114, 105, 110, 116, 0, 49, 8, 1, 50, 10, 249, 35, 53, 199, 1, 1, 4, 127, 32, 1, 40, 2, 0, 65, 124, 113, 34, 2, 65, 128, 2, 73, 4, 127, 32, 2, 65, 4, 118, 33, 4, 65, 0, 5, 32, 2, 65, 31, 32, 2, 103, 107, 34, 3, 65, 4, 107, 118, 65, 16, 115, 33, 4, 32, 3, 65, 7, 107, 11, 33, 3, 32, 1, 40, 2, 20, 33, 2, 32, 1, 40, 2, 16, 34, 5, 4, 64, 32, 5, 32, 2, 54, 2, 20, 11, 32, 2, 4, 64, 32, 2, 32, 5, 54, 2, 16, 11, 32, 1, 32, 0, 32, 4, 32, 3, 65, 4, 116, 106, 65, 2, 116, 106, 40, 2, 96, 70, 4, 64, 32, 0, 32, 4, 32, 3, 65, 4, 116, 106, 65, 2, 116, 106, 32, 2, 54, 2, 96, 32, 2, 69, 4, 64, 32, 0, 32, 3, 65, 2, 116, 106, 32, 0, 32, 3, 65, 2, 116, 106, 40, 2, 4, 65, 1, 32, 4, 116, 65, 127, 115, 113, 34, 1, 54, 2, 4, 32, 1, 69, 4, 64, 32, 0, 32, 0, 40, 2, 0, 65, 1, 32, 3, 116, 65, 127, 115, 113, 54, 2, 0, 11, 11, 11, 11, 226, 2, 1, 6, 127, 32, 1, 40, 2, 0, 33, 3, 32, 1, 65, 16, 106, 32, 1, 40, 2, 0, 65, 124, 113, 106, 34, 4, 40, 2, 0, 34, 5, 65, 1, 113, 4, 64, 32, 3, 65, 124, 113, 65, 16, 106, 32, 5, 65, 124, 113, 106, 34, 2, 65, 240, 255, 255, 255, 3, 73, 4, 64, 32, 0, 32, 4, 16, 1, 32, 1, 32, 2, 32, 3, 65, 3, 113, 114, 34, 3, 54, 2, 0, 32, 1, 65, 16, 106, 32, 1, 40, 2, 0, 65, 124, 113, 106, 34, 4, 40, 2, 0, 33, 5, 11, 11, 32, 3, 65, 2, 113, 4, 64, 32, 1, 65, 4, 107, 40, 2, 0, 34, 2, 40, 2, 0, 34, 6, 65, 124, 113, 65, 16, 106, 32, 3, 65, 124, 113, 106, 34, 7, 65, 240, 255, 255, 255, 3, 73, 4, 64, 32, 0, 32, 2, 16, 1, 32, 2, 32, 7, 32, 6, 65, 3, 113, 114, 34, 3, 54, 2, 0, 32, 2, 33, 1, 11, 11, 32, 4, 32, 5, 65, 2, 114, 54, 2, 0, 32, 4, 65, 4, 107, 32, 1, 54, 2, 0, 32, 0, 32, 3, 65, 124, 113, 34, 2, 65, 128, 2, 73, 4, 127, 32, 2, 65, 4, 118, 33, 4, 65, 0, 5, 32, 2, 65, 31, 32, 2, 103, 107, 34, 2, 65, 4, 107, 118, 65, 16, 115, 33, 4, 32, 2, 65, 7, 107, 11, 34, 3, 65, 4, 116, 32, 4, 106, 65, 2, 116, 106, 40, 2, 96, 33, 2, 32, 1, 65, 0, 54, 2, 16, 32, 1, 32, 2, 54, 2, 20, 32, 2, 4, 64, 32, 2, 32, 1, 54, 2, 16, 11, 32, 0, 32, 4, 32, 3, 65, 4, 116, 106, 65, 2, 116, 106, 32, 1, 54, 2, 96, 32, 0, 32, 0, 40, 2, 0, 65, 1, 32, 3, 116, 114, 54, 2, 0, 32, 0, 32, 3, 65, 2, 116, 106, 32, 0, 32, 3, 65, 2, 116, 106, 40, 2, 4, 65, 1, 32, 4, 116, 114, 54, 2, 4, 11, 119, 1, 1, 127, 32, 2, 2, 127, 32, 0, 40, 2, 160, 12, 34, 2, 4, 64, 32, 2, 32, 1, 65, 16, 107, 70, 4, 64, 32, 2, 40, 2, 0, 33, 3, 32, 1, 65, 16, 107, 33, 1, 11, 11, 32, 1, 11, 107, 34, 2, 65, 48, 73, 4, 64, 15, 11, 32, 1, 32, 3, 65, 2, 113, 32, 2, 65, 32, 107, 65, 1, 114, 114, 54, 2, 0, 32, 1, 65, 0, 54, 2, 16, 32, 1, 65, 0, 54, 2, 20, 32, 1, 32, 2, 106, 65, 16, 107, 34, 2, 65, 2, 54, 2, 0, 32, 0, 32, 2, 54, 2, 160, 12, 32, 0, 32, 1, 16, 2, 11, 155, 1, 1, 3, 127, 35, 0, 34, 0, 69, 4, 64, 65, 1, 63, 0, 34, 0, 74, 4, 127, 65, 1, 32, 0, 107, 64, 0, 65, 0, 72, 5, 65, 0, 11, 4, 64, 0, 11, 65, 176, 3, 34, 0, 65, 0, 54, 2, 0, 65, 208, 15, 65, 0, 54, 2, 0, 3, 64, 32, 1, 65, 23, 73, 4, 64, 32, 1, 65, 2, 116, 65, 176, 3, 106, 65, 0, 54, 2, 4, 65, 0, 33, 2, 3, 64, 32, 2, 65, 16, 73, 4, 64, 32, 1, 65, 4, 116, 32, 2, 106, 65, 2, 116, 65, 176, 3, 106, 65, 0, 54, 2, 96, 32, 2, 65, 1, 106, 33, 2, 12, 1, 11, 11, 32, 1, 65, 1, 106, 33, 1, 12, 1, 11, 11, 65, 176, 3, 65, 224, 15, 63, 0, 65, 16, 116, 16, 3, 65, 176, 3, 36, 0, 11, 32, 0, 11, 45, 0, 32, 0, 65, 240, 255, 255, 255, 3, 79, 4, 64, 65, 32, 65, 224, 0, 65, 201, 3, 65, 29, 16, 0, 0, 11, 32, 0, 65, 15, 106, 65, 112, 113, 34, 0, 65, 16, 32, 0, 65, 16, 75, 27, 11, 169, 1, 1, 1, 127, 32, 0, 32, 1, 65, 128, 2, 73, 4, 127, 32, 1, 65, 4, 118, 33, 1, 65, 0, 5, 32, 1, 65, 248, 255, 255, 255, 1, 73, 4, 64, 32, 1, 65, 1, 65, 27, 32, 1, 103, 107, 116, 106, 65, 1, 107, 33, 1, 11, 32, 1, 65, 31, 32, 1, 103, 107, 34, 2, 65, 4, 107, 118, 65, 16, 115, 33, 1, 32, 2, 65, 7, 107, 11, 34, 2, 65, 2, 116, 106, 40, 2, 4, 65, 127, 32, 1, 116, 113, 34, 1, 4, 127, 32, 0, 32, 1, 104, 32, 2, 65, 4, 116, 106, 65, 2, 116, 106, 40, 2, 96, 5, 32, 0, 40, 2, 0, 65, 127, 32, 2, 65, 1, 106, 116, 113, 34, 1, 4, 127, 32, 0, 32, 0, 32, 1, 104, 34, 0, 65, 2, 116, 106, 40, 2, 4, 104, 32, 0, 65, 4, 116, 106, 65, 2, 116, 106, 40, 2, 96, 5, 65, 0, 11, 11, 11, 111, 1, 1, 127, 63, 0, 34, 2, 32, 1, 65, 248, 255, 255, 255, 1, 73, 4, 127, 32, 1, 65, 1, 65, 27, 32, 1, 103, 107, 116, 65, 1, 107, 106, 5, 32, 1, 11, 65, 16, 32, 0, 40, 2, 160, 12, 32, 2, 65, 16, 116, 65, 16, 107, 71, 116, 106, 65, 255, 255, 3, 106, 65, 128, 128, 124, 113, 65, 16, 118, 34, 1, 32, 2, 32, 1, 74, 27, 64, 0, 65, 0, 72, 4, 64, 32, 1, 64, 0, 65, 0, 72, 4, 64, 0, 11, 11, 32, 0, 32, 2, 65, 16, 116, 63, 0, 65, 16, 116, 16, 3, 11, 113, 1, 2, 127, 32, 1, 40, 2, 0, 34, 3, 65, 124, 113, 32, 2, 107, 34, 4, 65, 32, 79, 4, 64, 32, 1, 32, 2, 32, 3, 65, 2, 113, 114, 54, 2, 0, 32, 2, 32, 1, 65, 16, 106, 106, 34, 1, 32, 4, 65, 16, 107, 65, 1, 114, 54, 2, 0, 32, 0, 32, 1, 16, 2, 5, 32, 1, 32, 3, 65, 126, 113, 54, 2, 0, 32, 1, 65, 16, 106, 32, 1, 40, 2, 0, 65, 124, 113, 106, 32, 1, 65, 16, 106, 32, 1, 40, 2, 0, 65, 124, 113, 106, 40, 2, 0, 65, 125, 113, 54, 2, 0, 11, 11, 91, 1, 2, 127, 32, 0, 32, 1, 16, 5, 34, 4, 16, 6, 34, 3, 69, 4, 64, 65, 1, 36, 1, 65, 0, 36, 1, 32, 0, 32, 4, 16, 6, 34, 3, 69, 4, 64, 32, 0, 32, 4, 16, 7, 32, 0, 32, 4, 16, 6, 33, 3, 11, 11, 32, 3, 65, 0, 54, 2, 4, 32, 3, 32, 2, 54, 2, 8, 32, 3, 32, 1, 54, 2, 12, 32, 0, 32, 3, 16, 1, 32, 0, 32, 3, 32, 4, 16, 8, 32, 3, 11, 13, 0, 16, 4, 32, 0, 32, 1, 16, 9, 65, 16, 106, 11, 33, 1, 1, 127, 32, 0, 65, 172, 3, 75, 4, 64, 32, 0, 65, 16, 107, 34, 1, 32, 1, 40, 2, 4, 65, 1, 106, 54, 2, 4, 11, 32, 0, 11, 18, 0, 32, 0, 65, 172, 3, 75, 4, 64, 32, 0, 65, 16, 107, 16, 52, 11, 11, 140, 3, 1, 1, 127, 2, 64, 32, 1, 69, 13, 0, 32, 0, 65, 0, 58, 0, 0, 32, 0, 32, 1, 106, 65, 1, 107, 65, 0, 58, 0, 0, 32, 1, 65, 2, 77, 13, 0, 32, 0, 65, 1, 106, 65, 0, 58, 0, 0, 32, 0, 65, 2, 106, 65, 0, 58, 0, 0, 32, 0, 32, 1, 106, 34, 2, 65, 2, 107, 65, 0, 58, 0, 0, 32, 2, 65, 3, 107, 65, 0, 58, 0, 0, 32, 1, 65, 6, 77, 13, 0, 32, 0, 65, 3, 106, 65, 0, 58, 0, 0, 32, 0, 32, 1, 106, 65, 4, 107, 65, 0, 58, 0, 0, 32, 1, 65, 8, 77, 13, 0, 32, 1, 65, 0, 32, 0, 107, 65, 3, 113, 34, 1, 107, 33, 2, 32, 0, 32, 1, 106, 34, 0, 65, 0, 54, 2, 0, 32, 0, 32, 2, 65, 124, 113, 34, 1, 106, 65, 4, 107, 65, 0, 54, 2, 0, 32, 1, 65, 8, 77, 13, 0, 32, 0, 65, 4, 106, 65, 0, 54, 2, 0, 32, 0, 65, 8, 106, 65, 0, 54, 2, 0, 32, 0, 32, 1, 106, 34, 2, 65, 12, 107, 65, 0, 54, 2, 0, 32, 2, 65, 8, 107, 65, 0, 54, 2, 0, 32, 1, 65, 24, 77, 13, 0, 32, 0, 65, 12, 106, 65, 0, 54, 2, 0, 32, 0, 65, 16, 106, 65, 0, 54, 2, 0, 32, 0, 65, 20, 106, 65, 0, 54, 2, 0, 32, 0, 65, 24, 106, 65, 0, 54, 2, 0, 32, 0, 32, 1, 106, 34, 2, 65, 28, 107, 65, 0, 54, 2, 0, 32, 2, 65, 24, 107, 65, 0, 54, 2, 0, 32, 2, 65, 20, 107, 65, 0, 54, 2, 0, 32, 2, 65, 16, 107, 65, 0, 54, 2, 0, 32, 0, 32, 0, 65, 4, 113, 65, 24, 106, 34, 2, 106, 33, 0, 32, 1, 32, 2, 107, 33, 1, 3, 64, 32, 1, 65, 32, 79, 4, 64, 32, 0, 66, 0, 55, 3, 0, 32, 0, 65, 8, 106, 66, 0, 55, 3, 0, 32, 0, 65, 16, 106, 66, 0, 55, 3, 0, 32, 0, 65, 24, 106, 66, 0, 55, 3, 0, 32, 1, 65, 32, 107, 33, 1, 32, 0, 65, 32, 106, 33, 0, 12, 1, 11, 11, 11, 11, 178, 1, 1, 3, 127, 32, 1, 65, 240, 255, 255, 255, 3, 32, 2, 118, 75, 4, 64, 65, 144, 1, 65, 192, 1, 65, 23, 65, 56, 16, 0, 0, 11, 32, 1, 32, 2, 116, 34, 3, 65, 0, 16, 10, 34, 2, 32, 3, 16, 13, 32, 0, 69, 4, 64, 65, 12, 65, 2, 16, 10, 34, 0, 65, 172, 3, 75, 4, 64, 32, 0, 65, 16, 107, 34, 1, 32, 1, 40, 2, 4, 65, 1, 106, 54, 2, 4, 11, 11, 32, 0, 65, 0, 54, 2, 0, 32, 0, 65, 0, 54, 2, 4, 32, 0, 65, 0, 54, 2, 8, 32, 2, 34, 1, 32, 0, 40, 2, 0, 34, 4, 71, 4, 64, 32, 1, 65, 172, 3, 75, 4, 64, 32, 1, 65, 16, 107, 34, 5, 32, 5, 40, 2, 4, 65, 1, 106, 54, 2, 4, 11, 32, 4, 16, 12, 11, 32, 0, 32, 1, 54, 2, 0, 32, 0, 32, 2, 54, 2, 4, 32, 0, 32, 3, 54, 2, 8, 32, 0, 11, 46, 1, 2, 127, 65, 12, 65, 5, 16, 10, 34, 0, 65, 172, 3, 75, 4, 64, 32, 0, 65, 16, 107, 34, 1, 32, 1, 40, 2, 4, 65, 1, 106, 54, 2, 4, 11, 32, 0, 65, 128, 2, 65, 3, 16, 14, 11, 66, 2, 1, 127, 1, 126, 66, 128, 128, 128, 128, 128, 128, 128, 128, 128, 127, 33, 2, 3, 64, 32, 1, 65, 192, 0, 72, 4, 64, 32, 0, 32, 2, 131, 66, 0, 86, 4, 64, 65, 63, 32, 1, 107, 15, 11, 32, 2, 66, 1, 136, 33, 2, 32, 1, 65, 1, 106, 33, 1, 12, 1, 11, 11, 65, 127, 11, 165, 1, 2, 2, 127, 1, 126, 2, 127, 66, 128, 128, 128, 128, 128, 128, 128, 128, 128, 127, 33, 4, 3, 64, 32, 3, 65, 192, 0, 72, 4, 64, 65, 63, 32, 3, 107, 32, 1, 32, 4, 131, 66, 0, 86, 13, 2, 26, 32, 4, 66, 1, 136, 33, 4, 32, 3, 65, 1, 106, 33, 3, 12, 1, 11, 11, 65, 127, 11, 33, 3, 3, 64, 2, 127, 66, 128, 128, 128, 128, 128, 128, 128, 128, 128, 127, 33, 4, 65, 0, 33, 2, 3, 64, 32, 2, 65, 192, 0, 72, 4, 64, 65, 63, 32, 2, 107, 32, 0, 32, 4, 131, 66, 0, 86, 13, 2, 26, 32, 4, 66, 1, 136, 33, 4, 32, 2, 65, 1, 106, 33, 2, 12, 1, 11, 11, 65, 127, 11, 32, 3, 107, 34, 2, 65, 0, 78, 4, 64, 32, 0, 32, 1, 32, 2, 172, 134, 133, 33, 0, 12, 1, 11, 11, 32, 0, 11, 40, 0, 32, 1, 32, 0, 40, 2, 8, 79, 4, 64, 65, 128, 2, 65, 192, 2, 65, 163, 1, 65, 44, 16, 0, 0, 11, 32, 1, 32, 0, 40, 2, 4, 106, 32, 2, 58, 0, 0, 11, 38, 0, 32, 1, 32, 0, 40, 2, 8, 79, 4, 64, 65, 128, 2, 65, 192, 2, 65, 152, 1, 65, 44, 16, 0, 0, 11, 32, 1, 32, 0, 40, 2, 4, 106, 45, 0, 0, 11, 164, 9, 2, 1, 127, 6, 126, 32, 0, 69, 4, 64, 65, 232, 0, 65, 6, 16, 10, 34, 0, 65, 172, 3, 75, 4, 64, 32, 0, 65, 16, 107, 34, 5, 32, 5, 40, 2, 4, 65, 1, 106, 54, 2, 4, 11, 11, 32, 0, 65, 0, 54, 2, 0, 32, 0, 65, 0, 54, 2, 4, 32, 0, 65, 0, 54, 2, 8, 32, 0, 66, 0, 55, 3, 16, 32, 0, 66, 0, 55, 3, 24, 32, 0, 66, 0, 55, 3, 32, 32, 0, 66, 0, 55, 3, 40, 32, 0, 66, 0, 55, 3, 48, 32, 0, 66, 0, 55, 3, 56, 32, 0, 66, 0, 55, 3, 64, 32, 0, 66, 0, 55, 3, 72, 32, 0, 66, 0, 55, 3, 80, 32, 0, 66, 0, 55, 3, 88, 32, 0, 66, 0, 55, 3, 96, 32, 0, 32, 2, 173, 55, 3, 80, 32, 0, 32, 3, 173, 55, 3, 88, 65, 12, 65, 4, 16, 10, 34, 2, 65, 172, 3, 75, 4, 64, 32, 2, 65, 16, 107, 34, 3, 32, 3, 40, 2, 4, 65, 1, 106, 54, 2, 4, 11, 32, 2, 32, 4, 65, 0, 16, 14, 33, 2, 32, 0, 40, 2, 0, 16, 12, 32, 0, 32, 2, 54, 2, 0, 32, 0, 32, 4, 54, 2, 4, 32, 0, 66, 1, 32, 1, 173, 134, 66, 1, 125, 55, 3, 96, 32, 0, 66, 243, 130, 183, 218, 216, 230, 232, 30, 55, 3, 72, 35, 4, 69, 4, 64, 65, 0, 33, 2, 3, 64, 32, 2, 65, 128, 2, 72, 4, 64, 32, 2, 65, 255, 1, 113, 173, 33, 7, 32, 0, 41, 3, 72, 34, 8, 33, 9, 2, 127, 66, 128, 128, 128, 128, 128, 128, 128, 128, 128, 127, 33, 6, 65, 0, 33, 3, 3, 64, 32, 3, 65, 192, 0, 72, 4, 64, 65, 63, 32, 3, 107, 32, 6, 32, 8, 131, 66, 0, 86, 13, 2, 26, 32, 6, 66, 1, 136, 33, 6, 32, 3, 65, 1, 106, 33, 3, 12, 1, 11, 11, 65, 127, 11, 33, 1, 3, 64, 2, 127, 66, 128, 128, 128, 128, 128, 128, 128, 128, 128, 127, 33, 6, 65, 0, 33, 3, 3, 64, 32, 3, 65, 192, 0, 72, 4, 64, 65, 63, 32, 3, 107, 32, 6, 32, 7, 131, 66, 0, 86, 13, 2, 26, 32, 6, 66, 1, 136, 33, 6, 32, 3, 65, 1, 106, 33, 3, 12, 1, 11, 11, 65, 127, 11, 32, 1, 107, 34, 3, 65, 0, 78, 4, 64, 32, 7, 32, 9, 32, 3, 172, 134, 133, 33, 7, 12, 1, 11, 11, 65, 0, 33, 5, 3, 64, 32, 5, 32, 0, 40, 2, 4, 65, 1, 107, 72, 4, 64, 65, 0, 33, 3, 32, 7, 66, 8, 134, 33, 7, 32, 0, 41, 3, 72, 34, 8, 33, 9, 2, 127, 66, 128, 128, 128, 128, 128, 128, 128, 128, 128, 127, 33, 6, 3, 64, 32, 3, 65, 192, 0, 72, 4, 64, 65, 63, 32, 3, 107, 32, 6, 32, 8, 131, 66, 0, 86, 13, 2, 26, 32, 6, 66, 1, 136, 33, 6, 32, 3, 65, 1, 106, 33, 3, 12, 1, 11, 11, 65, 127, 11, 33, 1, 3, 64, 2, 127, 66, 128, 128, 128, 128, 128, 128, 128, 128, 128, 127, 33, 6, 65, 0, 33, 4, 3, 64, 32, 4, 65, 192, 0, 72, 4, 64, 65, 63, 32, 4, 107, 32, 6, 32, 7, 131, 66, 0, 86, 13, 2, 26, 32, 6, 66, 1, 136, 33, 6, 32, 4, 65, 1, 106, 33, 4, 12, 1, 11, 11, 65, 127, 11, 32, 1, 107, 34, 3, 65, 0, 78, 4, 64, 32, 7, 32, 9, 32, 3, 172, 134, 133, 33, 7, 12, 1, 11, 11, 32, 5, 65, 1, 106, 33, 5, 12, 1, 11, 11, 35, 6, 40, 2, 4, 32, 2, 65, 3, 116, 106, 32, 7, 55, 3, 0, 32, 2, 65, 1, 106, 33, 2, 12, 1, 11, 11, 2, 127, 32, 0, 41, 3, 72, 33, 6, 66, 128, 128, 128, 128, 128, 128, 128, 128, 128, 127, 33, 7, 65, 0, 33, 2, 3, 64, 32, 2, 65, 192, 0, 72, 4, 64, 65, 63, 32, 2, 107, 32, 6, 32, 7, 131, 66, 0, 86, 13, 2, 26, 32, 7, 66, 1, 136, 33, 7, 32, 2, 65, 1, 106, 33, 2, 12, 1, 11, 11, 65, 127, 11, 172, 33, 8, 65, 0, 33, 2, 3, 64, 32, 2, 65, 128, 2, 72, 4, 64, 35, 5, 33, 4, 32, 2, 172, 32, 8, 134, 34, 9, 33, 7, 2, 127, 32, 0, 41, 3, 72, 34, 10, 33, 11, 66, 128, 128, 128, 128, 128, 128, 128, 128, 128, 127, 33, 6, 65, 0, 33, 3, 3, 64, 32, 3, 65, 192, 0, 72, 4, 64, 65, 63, 32, 3, 107, 32, 6, 32, 11, 131, 66, 0, 86, 13, 2, 26, 32, 6, 66, 1, 136, 33, 6, 32, 3, 65, 1, 106, 33, 3, 12, 1, 11, 11, 65, 127, 11, 33, 1, 3, 64, 2, 127, 66, 128, 128, 128, 128, 128, 128, 128, 128, 128, 127, 33, 6, 65, 0, 33, 5, 3, 64, 32, 5, 65, 192, 0, 72, 4, 64, 65, 63, 32, 5, 107, 32, 6, 32, 7, 131, 66, 0, 86, 13, 2, 26, 32, 6, 66, 1, 136, 33, 6, 32, 5, 65, 1, 106, 33, 5, 12, 1, 11, 11, 65, 127, 11, 32, 1, 107, 34, 3, 65, 0, 78, 4, 64, 32, 7, 32, 10, 32, 3, 172, 134, 133, 33, 7, 12, 1, 11, 11, 32, 4, 40, 2, 4, 32, 2, 65, 3, 116, 106, 32, 7, 32, 9, 132, 55, 3, 0, 32, 2, 65, 1, 106, 33, 2, 12, 1, 11, 11, 65, 1, 36, 4, 11, 32, 0, 66, 0, 55, 3, 24, 32, 0, 66, 0, 55, 3, 32, 65, 0, 33, 2, 3, 64, 32, 2, 32, 0, 40, 2, 4, 72, 4, 64, 32, 0, 40, 2, 0, 32, 2, 65, 0, 16, 18, 32, 2, 65, 1, 106, 33, 2, 12, 1, 11, 11, 32, 0, 66, 0, 55, 3, 40, 32, 0, 65, 0, 54, 2, 8, 32, 0, 66, 0, 55, 3, 16, 32, 0, 66, 0, 55, 3, 40, 32, 0, 40, 2, 0, 32, 0, 40, 2, 8, 16, 19, 33, 1, 32, 0, 40, 2, 0, 32, 0, 40, 2, 8, 65, 1, 16, 18, 32, 0, 32, 0, 41, 3, 40, 35, 6, 40, 2, 4, 32, 1, 65, 3, 116, 106, 41, 3, 0, 133, 55, 3, 40, 32, 0, 32, 0, 40, 2, 8, 65, 1, 106, 32, 0, 40, 2, 4, 111, 54, 2, 8, 32, 0, 35, 5, 40, 2, 4, 32, 0, 41, 3, 40, 34, 6, 66, 45, 136, 167, 65, 255, 1, 113, 65, 3, 116, 106, 41, 3, 0, 32, 6, 66, 8, 134, 66, 1, 132, 133, 55, 3, 40, 32, 0, 11, 38, 1, 1, 127, 32, 0, 40, 2, 0, 34, 0, 65, 172, 3, 75, 4, 64, 32, 0, 65, 16, 107, 34, 1, 32, 1, 40, 2, 4, 65, 1, 106, 54, 2, 4, 11, 32, 0, 11, 55, 1, 2, 127, 32, 1, 32, 0, 40, 2, 0, 34, 2, 71, 4, 64, 32, 1, 65, 172, 3, 75, 4, 64, 32, 1, 65, 16, 107, 34, 3, 32, 3, 40, 2, 4, 65, 1, 106, 54, 2, 4, 11, 32, 2, 16, 12, 11, 32, 0, 32, 1, 54, 2, 0, 11, 7, 0, 32, 0, 40, 2, 4, 11, 9, 0, 32, 0, 32, 1, 54, 2, 4, 11, 7, 0, 32, 0, 40, 2, 8, 11, 9, 0, 32, 0, 32, 1, 54, 2, 8, 11, 7, 0, 32, 0, 41, 3, 16, 11, 9, 0, 32, 0, 32, 1, 55, 3, 16, 11, 7, 0, 32, 0, 41, 3, 24, 11, 9, 0, 32, 0, 32, 1, 55, 3, 24, 11, 7, 0, 32, 0, 41, 3, 32, 11, 9, 0, 32, 0, 32, 1, 55, 3, 32, 11, 7, 0, 32, 0, 41, 3, 40, 11, 9, 0, 32, 0, 32, 1, 55, 3, 40, 11, 7, 0, 32, 0, 41, 3, 48, 11, 9, 0, 32, 0, 32, 1, 55, 3, 48, 11, 7, 0, 32, 0, 41, 3, 56, 11, 9, 0, 32, 0, 32, 1, 55, 3, 56, 11, 7, 0, 32, 0, 41, 3, 64, 11, 9, 0, 32, 0, 32, 1, 55, 3, 64, 11, 7, 0, 32, 0, 41, 3, 72, 11, 9, 0, 32, 0, 32, 1, 55, 3, 72, 11, 7, 0, 32, 0, 41, 3, 80, 11, 9, 0, 32, 0, 32, 1, 55, 3, 80, 11, 7, 0, 32, 0, 41, 3, 88, 11, 9, 0, 32, 0, 32, 1, 55, 3, 88, 11, 7, 0, 32, 0, 41, 3, 96, 11, 9, 0, 32, 0, 32, 1, 55, 3, 96, 11, 172, 4, 2, 5, 127, 1, 126, 32, 2, 65, 172, 3, 75, 4, 64, 32, 2, 65, 16, 107, 34, 4, 32, 4, 40, 2, 4, 65, 1, 106, 54, 2, 4, 11, 32, 2, 33, 4, 65, 0, 33, 2, 32, 1, 40, 2, 8, 33, 5, 32, 1, 40, 2, 4, 33, 6, 3, 64, 2, 127, 65, 0, 33, 3, 3, 64, 32, 3, 32, 5, 72, 4, 64, 32, 3, 32, 6, 106, 45, 0, 0, 33, 1, 32, 0, 40, 2, 0, 32, 0, 40, 2, 8, 16, 19, 33, 7, 32, 0, 40, 2, 0, 32, 0, 40, 2, 8, 32, 1, 16, 18, 32, 0, 32, 0, 41, 3, 40, 35, 6, 40, 2, 4, 32, 7, 65, 3, 116, 106, 41, 3, 0, 133, 55, 3, 40, 32, 0, 32, 0, 40, 2, 8, 65, 1, 106, 32, 0, 40, 2, 4, 111, 54, 2, 8, 32, 0, 35, 5, 40, 2, 4, 32, 0, 41, 3, 40, 34, 8, 66, 45, 136, 167, 65, 255, 1, 113, 65, 3, 116, 106, 41, 3, 0, 32, 1, 173, 32, 8, 66, 8, 134, 132, 133, 55, 3, 40, 32, 0, 32, 0, 41, 3, 16, 66, 1, 124, 55, 3, 16, 32, 0, 32, 0, 41, 3, 24, 66, 1, 124, 55, 3, 24, 32, 0, 41, 3, 16, 32, 0, 41, 3, 80, 90, 4, 127, 32, 0, 41, 3, 40, 32, 0, 41, 3, 96, 131, 80, 5, 65, 0, 11, 4, 127, 65, 1, 5, 32, 0, 41, 3, 16, 32, 0, 41, 3, 88, 90, 11, 4, 64, 32, 0, 32, 0, 41, 3, 32, 55, 3, 48, 32, 0, 32, 0, 41, 3, 16, 55, 3, 56, 32, 0, 32, 0, 41, 3, 40, 55, 3, 64, 65, 0, 33, 1, 3, 64, 32, 1, 32, 0, 40, 2, 4, 72, 4, 64, 32, 0, 40, 2, 0, 32, 1, 65, 0, 16, 18, 32, 1, 65, 1, 106, 33, 1, 12, 1, 11, 11, 32, 0, 66, 0, 55, 3, 40, 32, 0, 65, 0, 54, 2, 8, 32, 0, 66, 0, 55, 3, 16, 32, 0, 66, 0, 55, 3, 40, 32, 0, 40, 2, 0, 32, 0, 40, 2, 8, 16, 19, 33, 1, 32, 0, 40, 2, 0, 32, 0, 40, 2, 8, 65, 1, 16, 18, 32, 0, 32, 0, 41, 3, 40, 35, 6, 40, 2, 4, 32, 1, 65, 3, 116, 106, 41, 3, 0, 133, 55, 3, 40, 32, 0, 32, 0, 40, 2, 8, 65, 1, 106, 32, 0, 40, 2, 4, 111, 54, 2, 8, 32, 0, 35, 5, 40, 2, 4, 32, 0, 41, 3, 40, 34, 8, 66, 45, 136, 167, 65, 255, 1, 113, 65, 3, 116, 106, 41, 3, 0, 32, 8, 66, 8, 134, 66, 1, 132, 133, 55, 3, 40, 32, 3, 65, 1, 106, 12, 3, 11, 32, 3, 65, 1, 106, 33, 3, 12, 1, 11, 11, 65, 127, 11, 34, 1, 65, 0, 78, 4, 64, 32, 5, 32, 1, 107, 33, 5, 32, 1, 32, 6, 106, 33, 6, 32, 2, 34, 1, 65, 1, 106, 33, 2, 32, 4, 40, 2, 4, 32, 1, 65, 2, 116, 106, 32, 0, 41, 3, 56, 62, 2, 0, 12, 1, 11, 11, 32, 4, 11, 10, 0, 16, 15, 36, 5, 16, 15, 36, 6, 11, 3, 0, 1, 11, 73, 1, 2, 127, 32, 0, 40, 2, 4, 34, 1, 65, 255, 255, 255, 255, 0, 113, 34, 2, 65, 1, 70, 4, 64, 32, 0, 65, 16, 106, 16, 53, 32, 0, 32, 0, 40, 2, 0, 65, 1, 114, 54, 2, 0, 35, 0, 32, 0, 16, 2, 5, 32, 0, 32, 2, 65, 1, 107, 32, 1, 65, 128, 128, 128, 128, 127, 113, 114, 54, 2, 4, 11, 11, 58, 0, 2, 64, 2, 64, 2, 64, 32, 0, 65, 8, 107, 40, 2, 0, 14, 7, 0, 0, 1, 1, 1, 1, 1, 2, 11, 15, 11, 32, 0, 40, 2, 0, 34, 0, 4, 64, 32, 0, 65, 172, 3, 79, 4, 64, 32, 0, 65, 16, 107, 16, 52, 11, 11, 15, 11, 0, 11, 11, 137, 3, 7, 0, 65, 16, 11, 55, 40, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 40, 0, 0, 0, 97, 0, 108, 0, 108, 0, 111, 0, 99, 0, 97, 0, 116, 0, 105, 0, 111, 0, 110, 0, 32, 0, 116, 0, 111, 0, 111, 0, 32, 0, 108, 0, 97, 0, 114, 0, 103, 0, 101, 0, 65, 208, 0, 11, 45, 30, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 30, 0, 0, 0, 126, 0, 108, 0, 105, 0, 98, 0, 47, 0, 114, 0, 116, 0, 47, 0, 116, 0, 108, 0, 115, 0, 102, 0, 46, 0, 116, 0, 115, 0, 65, 128, 1, 11, 43, 28, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 28, 0, 0, 0, 73, 0, 110, 0, 118, 0, 97, 0, 108, 0, 105, 0, 100, 0, 32, 0, 108, 0, 101, 0, 110, 0, 103, 0, 116, 0, 104, 0, 65, 176, 1, 11, 53, 38, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 38, 0, 0, 0, 126, 0, 108, 0, 105, 0, 98, 0, 47, 0, 97, 0, 114, 0, 114, 0, 97, 0, 121, 0, 98, 0, 117, 0, 102, 0, 102, 0, 101, 0, 114, 0, 46, 0, 116, 0, 115, 0, 65, 240, 1, 11, 51, 36, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 36, 0, 0, 0, 73, 0, 110, 0, 100, 0, 101, 0, 120, 0, 32, 0, 111, 0, 117, 0, 116, 0, 32, 0, 111, 0, 102, 0, 32, 0, 114, 0, 97, 0, 110, 0, 103, 0, 101, 0, 65, 176, 2, 11, 51, 36, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 36, 0, 0, 0, 126, 0, 108, 0, 105, 0, 98, 0, 47, 0, 116, 0, 121, 0, 112, 0, 101, 0, 100, 0, 97, 0, 114, 0, 114, 0, 97, 0, 121, 0, 46, 0, 116, 0, 115, 0, 65, 240, 2, 11, 53, 7, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 145, 4, 0, 0, 2, 0, 0, 0, 49, 0, 0, 0, 2, 0, 0, 0, 17, 1, 0, 0, 2, 0, 0, 0, 16, 0, 34, 16, 115, 111, 117, 114, 99, 101, 77, 97, 112, 112, 105, 110, 103, 85, 82, 76, 16, 46, 47, 114, 97, 98, 105, 110, 46, 119, 97, 115, 109, 46, 109, 97, 112]);
        return n(new Response(new Blob([t2], {type: "application/wasm"})), e2);
      }
      i.supported = typeof WebAssembly != "undefined", e.exports = i;
    }, function(e, t, r) {
      "use strict";
      const n = typeof BigUint64Array != "undefined", i = Symbol();
      function s(e2, t2) {
        const r2 = new Uint32Array(e2), n2 = new Uint16Array(e2);
        var i2 = r2[t2 + -4 >>> 2] >>> 1, s2 = t2 >>> 1;
        if (i2 <= 1024)
          return String.fromCharCode.apply(String, n2.subarray(s2, s2 + i2));
        const o2 = [];
        do {
          const e3 = n2[s2 + 1024 - 1], t3 = e3 >= 55296 && e3 < 56320 ? 1023 : 1024;
          o2.push(String.fromCharCode.apply(String, n2.subarray(s2, s2 += t3))), i2 -= t3;
        } while (i2 > 1024);
        return o2.join("") + String.fromCharCode.apply(String, n2.subarray(s2, s2 + i2));
      }
      function o(e2) {
        const t2 = {};
        function r2(e3, t3) {
          return e3 ? s(e3.buffer, t3) : "<yet unknown>";
        }
        const n2 = e2.env = e2.env || {};
        return n2.abort = n2.abort || function(e3, i2, s2, o2) {
          const a2 = t2.memory || n2.memory;
          throw Error("abort: " + r2(a2, e3) + " at " + r2(a2, i2) + ":" + s2 + ":" + o2);
        }, n2.trace = n2.trace || function(e3, i2) {
          const s2 = t2.memory || n2.memory;
          console.log("trace: " + r2(s2, e3) + (i2 ? " " : "") + Array.prototype.slice.call(arguments, 2, 2 + i2).join(", "));
        }, e2.Math = e2.Math || Math, e2.Date = e2.Date || Date, t2;
      }
      function a(e2, t2) {
        const r2 = t2.exports, i2 = r2.memory, o2 = r2.table, a2 = r2.__alloc, c2 = r2.__retain, u2 = r2.__rtti_base || -1;
        function h2(e3) {
          const t3 = new Uint32Array(i2.buffer);
          if ((e3 >>>= 0) >= t3[u2 >>> 2])
            throw Error("invalid id: " + e3);
          return t3[(u2 + 4 >>> 2) + 2 * e3];
        }
        function d(e3) {
          const t3 = new Uint32Array(i2.buffer);
          if ((e3 >>>= 0) >= t3[u2 >>> 2])
            throw Error("invalid id: " + e3);
          return t3[(u2 + 4 >>> 2) + 2 * e3 + 1];
        }
        function l(e3) {
          return 31 - Math.clz32(e3 >>> 5 & 31);
        }
        function p(e3, t3, r3) {
          const n2 = i2.buffer;
          if (r3)
            switch (e3) {
              case 2:
                return new Float32Array(n2);
              case 3:
                return new Float64Array(n2);
            }
          else
            switch (e3) {
              case 0:
                return new (t3 ? Int8Array : Uint8Array)(n2);
              case 1:
                return new (t3 ? Int16Array : Uint16Array)(n2);
              case 2:
                return new (t3 ? Int32Array : Uint32Array)(n2);
              case 3:
                return new (t3 ? BigInt64Array : BigUint64Array)(n2);
            }
          throw Error("unsupported align: " + e3);
        }
        function y(e3) {
          const t3 = new Uint32Array(i2.buffer), r3 = t3[e3 + -8 >>> 2], n2 = h2(r3);
          if (!(1 & n2))
            throw Error("not an array: " + r3);
          const s2 = l(n2);
          var o3 = t3[e3 + 4 >>> 2];
          const a3 = 2 & n2 ? t3[e3 + 12 >>> 2] : t3[o3 + -4 >>> 2] >>> s2;
          return p(s2, 1024 & n2, 2048 & n2).subarray(o3 >>>= s2, o3 + a3);
        }
        function g(e3, t3, r3) {
          return new e3(b(e3, t3, r3));
        }
        function b(e3, t3, r3) {
          const n2 = i2.buffer, s2 = new Uint32Array(n2), o3 = s2[r3 + 4 >>> 2];
          return new e3(n2, o3, s2[o3 + -4 >>> 2] >>> t3);
        }
        return e2.__allocString = function(e3) {
          const t3 = e3.length, r3 = a2(t3 << 1, 1), n2 = new Uint16Array(i2.buffer);
          for (var s2 = 0, o3 = r3 >>> 1; s2 < t3; ++s2)
            n2[o3 + s2] = e3.charCodeAt(s2);
          return r3;
        }, e2.__getString = function(e3) {
          const t3 = i2.buffer;
          if (new Uint32Array(t3)[e3 + -8 >>> 2] !== 1)
            throw Error("not a string: " + e3);
          return s(t3, e3);
        }, e2.__allocArray = function(e3, t3) {
          const r3 = h2(e3);
          if (!(3 & r3))
            throw Error("not an array: " + e3 + " @ " + r3);
          const n2 = l(r3), s2 = t3.length, o3 = a2(s2 << n2, 0), u3 = a2(2 & r3 ? 16 : 12, e3), f2 = new Uint32Array(i2.buffer);
          f2[u3 + 0 >>> 2] = c2(o3), f2[u3 + 4 >>> 2] = o3, f2[u3 + 8 >>> 2] = s2 << n2, 2 & r3 && (f2[u3 + 12 >>> 2] = s2);
          const d2 = p(n2, 1024 & r3, 2048 & r3);
          if (8192 & r3)
            for (let i3 = 0; i3 < s2; ++i3)
              d2[(o3 >>> n2) + i3] = c2(t3[i3]);
          else
            d2.set(t3, o3 >>> n2);
          return u3;
        }, e2.__getArrayView = y, e2.__getArray = function(e3) {
          const t3 = y(e3), r3 = t3.length, n2 = new Array(r3);
          for (let i3 = 0; i3 < r3; i3++)
            n2[i3] = t3[i3];
          return n2;
        }, e2.__getArrayBuffer = function(e3) {
          const t3 = i2.buffer, r3 = new Uint32Array(t3)[e3 + -4 >>> 2];
          return t3.slice(e3, e3 + r3);
        }, e2.__getInt8Array = g.bind(null, Int8Array, 0), e2.__getInt8ArrayView = b.bind(null, Int8Array, 0), e2.__getUint8Array = g.bind(null, Uint8Array, 0), e2.__getUint8ArrayView = b.bind(null, Uint8Array, 0), e2.__getUint8ClampedArray = g.bind(null, Uint8ClampedArray, 0), e2.__getUint8ClampedArrayView = b.bind(null, Uint8ClampedArray, 0), e2.__getInt16Array = g.bind(null, Int16Array, 1), e2.__getInt16ArrayView = b.bind(null, Int16Array, 1), e2.__getUint16Array = g.bind(null, Uint16Array, 1), e2.__getUint16ArrayView = b.bind(null, Uint16Array, 1), e2.__getInt32Array = g.bind(null, Int32Array, 2), e2.__getInt32ArrayView = b.bind(null, Int32Array, 2), e2.__getUint32Array = g.bind(null, Uint32Array, 2), e2.__getUint32ArrayView = b.bind(null, Uint32Array, 2), n && (e2.__getInt64Array = g.bind(null, BigInt64Array, 3), e2.__getInt64ArrayView = b.bind(null, BigInt64Array, 3), e2.__getUint64Array = g.bind(null, BigUint64Array, 3), e2.__getUint64ArrayView = b.bind(null, BigUint64Array, 3)), e2.__getFloat32Array = g.bind(null, Float32Array, 2), e2.__getFloat32ArrayView = b.bind(null, Float32Array, 2), e2.__getFloat64Array = g.bind(null, Float64Array, 3), e2.__getFloat64ArrayView = b.bind(null, Float64Array, 3), e2.__instanceof = function(e3, t3) {
          const r3 = new Uint32Array(i2.buffer);
          var n2 = r3[e3 + -8 >>> 2];
          if (n2 <= r3[u2 >>> 2])
            do {
              if (n2 == t3)
                return true;
            } while (n2 = d(n2));
          return false;
        }, e2.memory = e2.memory || i2, e2.table = e2.table || o2, f(r2, e2);
      }
      function c(e2) {
        return typeof Response != "undefined" && e2 instanceof Response;
      }
      async function u(e2, t2) {
        return c(e2 = await e2) ? h(e2, t2) : a(o(t2 || (t2 = {})), await WebAssembly.instantiate(e2 instanceof WebAssembly.Module ? e2 : await WebAssembly.compile(e2), t2));
      }
      async function h(e2, t2) {
        return WebAssembly.instantiateStreaming ? a(o(t2 || (t2 = {})), (await WebAssembly.instantiateStreaming(e2, t2)).instance) : u(c(e2 = await e2) ? e2.arrayBuffer() : e2, t2);
      }
      function f(e2, t2) {
        var r2 = t2 ? Object.create(t2) : {}, n2 = e2.__argumentsLength ? function(t3) {
          e2.__argumentsLength.value = t3;
        } : e2.__setArgumentsLength || e2.__setargc || function() {
        };
        for (let s2 in e2) {
          if (!Object.prototype.hasOwnProperty.call(e2, s2))
            continue;
          const t3 = e2[s2];
          let o2 = s2.split("."), a2 = r2;
          for (; o2.length > 1; ) {
            let e3 = o2.shift();
            Object.prototype.hasOwnProperty.call(a2, e3) || (a2[e3] = {}), a2 = a2[e3];
          }
          let c2 = o2[0], u2 = c2.indexOf("#");
          if (u2 >= 0) {
            let r3 = c2.substring(0, u2), o3 = a2[r3];
            if (o3 === void 0 || !o3.prototype) {
              let e3 = function(...t4) {
                return e3.wrap(e3.prototype.constructor(0, ...t4));
              };
              e3.prototype = {valueOf: function() {
                return this[i];
              }}, e3.wrap = function(t4) {
                return Object.create(e3.prototype, {[i]: {value: t4, writable: false}});
              }, o3 && Object.getOwnPropertyNames(o3).forEach((t4) => Object.defineProperty(e3, t4, Object.getOwnPropertyDescriptor(o3, t4))), a2[r3] = e3;
            }
            if (c2 = c2.substring(u2 + 1), a2 = a2[r3].prototype, /^(get|set):/.test(c2)) {
              if (!Object.prototype.hasOwnProperty.call(a2, c2 = c2.substring(4))) {
                let t4 = e2[s2.replace("set:", "get:")], r4 = e2[s2.replace("get:", "set:")];
                Object.defineProperty(a2, c2, {get: function() {
                  return t4(this[i]);
                }, set: function(e3) {
                  r4(this[i], e3);
                }, enumerable: true});
              }
            } else
              c2 === "constructor" ? (a2[c2] = (...e3) => (n2(e3.length), t3(...e3))).original = t3 : (a2[c2] = function(...e3) {
                return n2(e3.length), t3(this[i], ...e3);
              }).original = t3;
          } else
            /^(get|set):/.test(c2) ? Object.prototype.hasOwnProperty.call(a2, c2 = c2.substring(4)) || Object.defineProperty(a2, c2, {get: e2[s2.replace("set:", "get:")], set: e2[s2.replace("get:", "set:")], enumerable: true}) : typeof t3 == "function" && t3 !== n2 ? (a2[c2] = (...e3) => (n2(e3.length), t3(...e3))).original = t3 : a2[c2] = t3;
        }
        return r2;
      }
      t.instantiate = u, t.instantiateSync = function(e2, t2) {
        return a(o(t2 || (t2 = {})), new WebAssembly.Instance(e2 instanceof WebAssembly.Module ? e2 : new WebAssembly.Module(e2), t2));
      }, t.instantiateStreaming = h, t.demangle = f;
    }, function(e, t, r) {
      "use strict";
      const n = r(33);
      e.exports = async function* (e2, t2) {
        let r2 = new n(), i = 0, s = false;
        const o = t2.maxChunkSize;
        for await (const a of e2)
          for (r2.append(a), i += a.length; i >= o; )
            if (yield r2.slice(0, o), s = true, o === r2.length)
              r2 = new n(), i = 0;
            else {
              const e3 = new n();
              e3.append(r2.shallowSlice(o)), r2 = e3, i -= o;
            }
        s && !i || (yield r2.slice(0, i));
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(6);
      e.exports = async function* (e2) {
        for await (const t2 of e2) {
          if (t2.length === void 0)
            throw n(new Error("Content was invalid"), "ERR_INVALID_CONTENT");
          typeof t2 == "string" || t2 instanceof String ? yield i(t2) : Array.isArray(t2) ? yield Uint8Array.from(t2) : yield t2;
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(653), i = r(654), s = r(167), o = r(659);
      async function a(e2, t2, r2) {
        const a2 = o(e2.path || ""), c2 = a2.length - 1;
        let u = t2, h = "";
        for (let o2 = 0; o2 < a2.length; o2++) {
          const f = a2[o2];
          h += `${h ? "/" : ""}${f}`;
          const d = o2 === c2;
          if (u.dirty = true, u.cid = null, u.size = null, d)
            await u.put(f, e2), t2 = await i(null, u, r2.shardSplitThreshold, r2);
          else {
            let e3 = await u.get(f);
            e3 && e3 instanceof s || (e3 = new n({dir: true, parent: u, parentKey: f, path: h, dirty: true, flat: true, mtime: e3 && e3.unixfs && e3.unixfs.mtime, mode: e3 && e3.unixfs && e3.unixfs.mode}, r2)), await u.put(f, e3), u = e3;
          }
        }
        return t2;
      }
      async function* c(e2, t2) {
        e2 instanceof s ? yield* e2.flush(e2.path, t2) : e2 && e2.unixfs && e2.unixfs.isDirectory() && (yield e2);
      }
      e.exports = async function* (e2, t2, r2) {
        let i2 = new n({root: true, dir: true, path: "", dirty: true, flat: true}, r2);
        for await (const n2 of e2)
          n2 && (i2 = await a(n2, i2, r2), n2.unixfs && n2.unixfs.isDirectory() || (yield n2));
        if (r2.wrapWithDirectory)
          yield* c(i2, t2);
        else
          for await (const n2 of i2.eachChildSeries())
            n2 && (yield* c(n2.child, t2));
      };
    }, function(e, t, r) {
      "use strict";
      const {DAGLink: n, DAGNode: i} = r(16), s = r(28), o = r(167), a = r(67);
      e.exports = class extends o {
        constructor(e2, t2) {
          super(e2, t2), this._children = {};
        }
        put(e2, t2) {
          this.cid = void 0, this.size = void 0, this._children[e2] = t2;
        }
        get(e2) {
          return this._children[e2];
        }
        childCount() {
          return Object.keys(this._children).length;
        }
        directChildrenCount() {
          return this.childCount();
        }
        onlyChild() {
          return this._children[Object.keys(this._children)[0]];
        }
        *eachChildSeries() {
          const e2 = Object.keys(this._children);
          for (let t2 = 0; t2 < e2.length; t2++) {
            const r2 = e2[t2];
            yield {key: r2, child: this._children[r2]};
          }
        }
        async *flush(e2, t2) {
          const r2 = Object.keys(this._children), o2 = [];
          for (let i2 = 0; i2 < r2.length; i2++) {
            let e3 = this._children[r2[i2]];
            if (typeof e3.flush == "function")
              for await (const r3 of e3.flush(e3.path, t2))
                e3 = r3, yield e3;
            o2.push(new n(r2[i2], e3.size, e3.cid));
          }
          const c = new s({type: "directory", mtime: this.mtime, mode: this.mode}), u = new i(c.marshal(), o2), h = u.serialize(), f = await a(h, t2, this.options), d = h.length + u.Links.reduce((e3, t3) => e3 + t3.Tsize, 0);
          this.cid = f, this.size = d, yield {cid: f, unixfs: c, path: e2, size: d};
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(168);
      e.exports = async function e2(t2, r2, i, s) {
        let o = r2;
        r2.flat && r2.directChildrenCount() >= i && (o = await async function(e3, t3) {
          const r3 = new n({root: e3.root, dir: true, parent: e3.parent, parentKey: e3.parentKey, path: e3.path, dirty: e3.dirty, flat: false, mtime: e3.mtime, mode: e3.mode}, t3);
          for await (const {key: n2, child: i2} of e3.eachChildSeries())
            await r3.put(n2, i2);
          return r3;
        }(r2, s));
        const a = o.parent;
        return a ? (o !== r2 && (t2 && (t2.parent = o), await a.put(o.parentKey, o)), e2(o, a, i, s)) : o;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(169);
      e.exports = function(e2) {
        return new n(e2);
      }, e.exports.isBucket = n.isBucket;
    }, function(e, t, r) {
      "use strict";
      function n(e2, t2) {
        return e2 + i(t2);
      }
      function i(e2) {
        let t2 = e2;
        return t2 -= t2 >> 1 & 1431655765, t2 = (858993459 & t2) + (t2 >> 2 & 858993459), 16843009 * (t2 + (t2 >> 4) & 252645135) >> 24;
      }
      function s(e2, t2) {
        return e2[0] - t2[0];
      }
      function o(e2) {
        return e2[1];
      }
      e.exports = class {
        constructor() {
          this._bitArrays = [], this._data = [], this._length = 0, this._changedLength = false, this._changedData = false;
        }
        set(e2, t2) {
          let r2 = this._internalPositionFor(e2, false);
          if (t2 === void 0)
            r2 !== -1 && (this._unsetInternalPos(r2), this._unsetBit(e2), this._changedLength = true, this._changedData = true);
          else {
            let n2 = false;
            r2 === -1 ? (r2 = this._data.length, this._setBit(e2), this._changedData = true) : n2 = true, this._setInternalPos(r2, e2, t2, n2), this._changedLength = true;
          }
        }
        unset(e2) {
          this.set(e2, void 0);
        }
        get(e2) {
          this._sortData();
          const t2 = this._internalPositionFor(e2, true);
          if (t2 !== -1)
            return this._data[t2][1];
        }
        push(e2) {
          return this.set(this.length, e2), this.length;
        }
        get length() {
          if (this._sortData(), this._changedLength) {
            const e2 = this._data[this._data.length - 1];
            this._length = e2 ? e2[0] + 1 : 0, this._changedLength = false;
          }
          return this._length;
        }
        forEach(e2) {
          let t2 = 0;
          for (; t2 < this.length; )
            e2(this.get(t2), t2, this), t2++;
        }
        map(e2) {
          let t2 = 0, r2 = new Array(this.length);
          for (; t2 < this.length; )
            r2[t2] = e2(this.get(t2), t2, this), t2++;
          return r2;
        }
        reduce(e2, t2) {
          let r2 = 0, n2 = t2;
          for (; r2 < this.length; ) {
            n2 = e2(n2, this.get(r2), r2), r2++;
          }
          return n2;
        }
        find(e2) {
          let t2, r2, n2 = 0;
          for (; n2 < this.length && !t2; )
            r2 = this.get(n2), t2 = e2(r2), n2++;
          return t2 ? r2 : void 0;
        }
        _internalPositionFor(e2, t2) {
          const r2 = this._bytePosFor(e2, t2);
          if (r2 >= this._bitArrays.length)
            return -1;
          const s2 = this._bitArrays[r2], o2 = e2 - 7 * r2;
          if (!((s2 & 1 << o2) > 0))
            return -1;
          return this._bitArrays.slice(0, r2).reduce(n, 0) + i(s2 & ~(4294967295 << o2 + 1)) - 1;
        }
        _bytePosFor(e2, t2) {
          const r2 = Math.floor(e2 / 7), n2 = r2 + 1;
          for (; !t2 && this._bitArrays.length < n2; )
            this._bitArrays.push(0);
          return r2;
        }
        _setBit(e2) {
          const t2 = this._bytePosFor(e2, false);
          this._bitArrays[t2] |= 1 << e2 - 7 * t2;
        }
        _unsetBit(e2) {
          const t2 = this._bytePosFor(e2, false);
          this._bitArrays[t2] &= ~(1 << e2 - 7 * t2);
        }
        _setInternalPos(e2, t2, r2, n2) {
          const i2 = this._data, s2 = [t2, r2];
          if (n2)
            this._sortData(), i2[e2] = s2;
          else {
            if (i2.length)
              if (i2[i2.length - 1][0] >= t2)
                i2.push(s2);
              else if (i2[0][0] <= t2)
                i2.unshift(s2);
              else {
                const e3 = Math.round(i2.length / 2);
                this._data = i2.slice(0, e3).concat(s2).concat(i2.slice(e3));
              }
            else
              this._data.push(s2);
            this._changedData = true, this._changedLength = true;
          }
        }
        _unsetInternalPos(e2) {
          this._data.splice(e2, 1);
        }
        _sortData() {
          this._changedData && this._data.sort(s), this._changedData = false;
        }
        bitField() {
          const e2 = [];
          let t2, r2 = 8, n2 = 0, i2 = 0;
          const s2 = this._bitArrays.slice();
          for (; s2.length || n2; ) {
            n2 === 0 && (t2 = s2.shift(), n2 = 7);
            const o3 = Math.min(n2, r2);
            i2 |= (t2 & ~(255 << o3)) << 8 - r2, t2 >>>= o3, n2 -= o3, r2 -= o3, r2 && (n2 || s2.length) || (e2.push(i2), i2 = 0, r2 = 8);
          }
          for (var o2 = e2.length - 1; o2 > 0; o2--) {
            if (e2[o2] !== 0)
              break;
            e2.pop();
          }
          return e2;
        }
        compactArray() {
          return this._sortData(), this._data.map(o);
        }
      };
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const n = r(658);
        e.exports = function(e2) {
          return function(t3) {
            return t3 instanceof i ? t3 : new i(t3, e2);
          };
        };
        class i {
          constructor(e2, r2) {
            if (typeof e2 != "string" && !t2.isBuffer(e2))
              throw new Error("can only hash strings or buffers");
            this._value = e2, this._hashFn = r2, this._depth = -1, this._availableBits = 0, this._currentBufferIndex = 0, this._buffers = [];
          }
          async take(e2) {
            let t3 = e2;
            for (; this._availableBits < t3; )
              await this._produceMoreBits();
            let r2 = 0;
            for (; t3 > 0; ) {
              const e3 = this._buffers[this._currentBufferIndex], n2 = Math.min(e3.availableBits(), t3);
              r2 = (r2 << n2) + e3.take(n2), t3 -= n2, this._availableBits -= n2, e3.availableBits() === 0 && this._currentBufferIndex++;
            }
            return r2;
          }
          untake(e2) {
            let t3 = e2;
            for (; t3 > 0; ) {
              const e3 = this._buffers[this._currentBufferIndex], r2 = Math.min(e3.totalBits() - e3.availableBits(), t3);
              e3.untake(r2), t3 -= r2, this._availableBits += r2, this._currentBufferIndex > 0 && e3.totalBits() === e3.availableBits() && (this._depth--, this._currentBufferIndex--);
            }
          }
          async _produceMoreBits() {
            this._depth++;
            const e2 = this._depth ? this._value + this._depth : this._value, t3 = await this._hashFn(e2), r2 = new n(t3);
            this._buffers.push(r2), this._availableBits += r2.availableBits();
          }
        }
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      const n = [255, 254, 252, 248, 240, 224, 192, 128], i = [1, 3, 7, 15, 31, 63, 127, 255];
      function s(e2, t2, r2) {
        return (e2 & function(e3, t3) {
          return n[e3] & i[Math.min(t3 + e3 - 1, 7)];
        }(t2, r2)) >>> t2;
      }
      e.exports = class {
        constructor(e2) {
          this._value = e2, this._currentBytePos = e2.length - 1, this._currentBitPos = 7;
        }
        availableBits() {
          return this._currentBitPos + 1 + 8 * this._currentBytePos;
        }
        totalBits() {
          return 8 * this._value.length;
        }
        take(e2) {
          let t2 = e2, r2 = 0;
          for (; t2 && this._haveBits(); ) {
            const e3 = this._value[this._currentBytePos], n2 = this._currentBitPos + 1, i2 = Math.min(n2, t2);
            r2 = (r2 << i2) + s(e3, n2 - i2, i2), t2 -= i2, this._currentBitPos -= i2, this._currentBitPos < 0 && (this._currentBitPos = 7, this._currentBytePos--);
          }
          return r2;
        }
        untake(e2) {
          for (this._currentBitPos += e2; this._currentBitPos > 7; )
            this._currentBitPos -= 8, this._currentBytePos += 1;
        }
        _haveBits() {
          return this._currentBytePos >= 0;
        }
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = (e2 = "") => (e2.trim().match(/([^\\^/]|\\\/)+/g) || []).filter(Boolean);
    }, function(e, t, r) {
      "use strict";
      const n = r(661), i = r(663);
      e.exports = (e2) => i(e2, n);
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(6), s = r(170), o = r(662), a = r(282), c = r(84), u = r(171), {isBytes: h, isReadableStream: f, isBlob: d} = r(283);
      function l(e2) {
        return e2 instanceof Uint8Array ? e2 : ArrayBuffer.isView(e2) ? new Uint8Array(e2.buffer, e2.byteOffset, e2.byteLength) : e2 instanceof ArrayBuffer ? new Uint8Array(e2) : Array.isArray(e2) ? Uint8Array.from(e2) : i(e2);
      }
      e.exports = async function* (e2) {
        if (h(e2) || typeof e2 == "string" || e2 instanceof String)
          yield l(e2);
        else {
          if (!d(e2)) {
            if (f(e2) && (e2 = s(e2)), e2[Symbol.iterator] || e2[Symbol.asyncIterator]) {
              const t2 = a(e2), {value: r2, done: n2} = await t2.peek();
              if (n2)
                return void (yield* []);
              if (t2.push(r2), Number.isInteger(r2))
                return void (yield Uint8Array.from(await c(t2)));
              if (h(r2) || typeof r2 == "string" || r2 instanceof String)
                return void (yield* u(t2, l));
            }
            throw n(new Error("Unexpected input: " + e2), "ERR_UNEXPECTED_INPUT");
          }
          yield* o(e2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(170);
      e.exports = function(e2) {
        return typeof e2.stream == "function" ? n(e2.stream()) : n(new Response(e2).body);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(170), s = r(282), o = r(171), {isBytes: a, isBlob: c, isReadableStream: u, isFileObject: h, mtimeToObject: f, modeToNumber: d} = r(283);
      async function l(e2, t2) {
        const {path: r2, mode: n2, mtime: i2, content: s2} = e2, o2 = {path: r2 || "", mode: d(n2), mtime: f(i2)};
        return s2 ? o2.content = await t2(s2) : r2 || (o2.content = await t2(e2)), o2;
      }
      e.exports = async function* (e2, t2) {
        if (e2 == null)
          throw n(new Error("Unexpected input: " + e2), "ERR_UNEXPECTED_INPUT");
        if (typeof e2 == "string" || e2 instanceof String)
          yield l(e2, t2);
        else if (a(e2) || c(e2))
          yield l(e2, t2);
        else {
          if (u(e2) && (e2 = i(e2)), e2[Symbol.iterator] || e2[Symbol.asyncIterator]) {
            const r2 = s(e2), {value: n2, done: i2} = await r2.peek();
            if (i2)
              return void (yield* []);
            if (r2.push(n2), Number.isInteger(n2) || a(n2))
              return void (yield l(r2, t2));
            if (h(n2) || c(n2) || typeof n2 == "string" || n2 instanceof String)
              return void (yield* o(r2, (e3) => l(e3, t2)));
            if (n2[Symbol.iterator] || n2[Symbol.asyncIterator] || u(n2))
              return void (yield* o(r2, (e3) => l(e3, t2)));
          }
          if (!h(e2))
            throw n(new Error("Unexpected input: " + typeof e2), "ERR_UNEXPECTED_INPUT");
          yield l(e2, t2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = (e2) => {
        const t2 = {}, r2 = e2.split("-");
        switch (r2.length) {
          case 1:
            t2.avgChunkSize = 262144;
            break;
          case 2:
            t2.avgChunkSize = i(r2[1], "avg");
            break;
          case 4:
            t2.minChunkSize = i(r2[1], "min"), t2.avgChunkSize = i(r2[2], "avg"), t2.maxChunkSize = i(r2[3], "max");
            break;
          default:
            throw new Error('Incorrect chunker format (expected "rabin" "rabin-[avg]" or "rabin-[min]-[avg]-[max]"');
        }
        return t2;
      }, i = (e2, t2) => {
        const r2 = parseInt(e2);
        if (isNaN(r2))
          throw new Error(`Chunker parameter ${t2} must be an integer`);
        return r2;
      };
      e.exports = {parseChunkSize: i, parseRabinString: n, parseChunkerString: (e2) => {
        if (e2) {
          if (e2.startsWith("size-")) {
            const t2 = e2.split("-")[1], r2 = parseInt(t2);
            if (isNaN(r2))
              throw new Error("Chunker parameter size must be an integer");
            return {chunker: "fixed", maxChunkSize: r2};
          }
          if (e2.startsWith("rabin"))
            return {chunker: "rabin", ...n(e2)};
          throw new Error("Unrecognized chunker option: " + e2);
        }
        return {chunker: "fixed"};
      }};
    }, function(e, t, r) {
      "use strict";
      const n = r(36), {normalizeCidPath: i} = r(22), s = r(2);
      e.exports = function({ipld: e2, preload: t2}) {
        return s(async function* (r2, s2 = {}) {
          if (r2 = i(r2), s2.preload !== false) {
            const e3 = r2.split("/");
            t2(e3[0]);
          }
          const o = await n(r2, e2, s2);
          if (o.unixfs && o.unixfs.type.includes("dir"))
            throw new Error("this dag node is a directory");
          if (!o.content)
            throw new Error("this dag node has no content");
          yield* o.content(s2);
        });
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = {"dag-pb": r(667), raw: r(671), "dag-cbor": r(672), identity: r(673)}, s = (e2, t2, r2, o, a, c, u) => {
        const h = i[e2.codec];
        if (!h)
          throw n(new Error("No resolver for codec " + e2.codec), "ERR_NO_RESOLVER");
        return h(e2, t2, r2, o, s, a, c, u);
      };
      e.exports = s;
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(28), s = r(668), o = {raw: r(284), file: r(284), directory: r(669), "hamt-sharded-directory": r(670), metadata: (e2, t2, r2, n2, i2, s2, o2) => {
      }, symlink: (e2, t2, r2, n2, i2, s2, o2) => {
      }};
      e.exports = async (e2, t2, r2, a, c, u, h, f) => {
        const d = await h.get(e2, f);
        let l, p;
        t2 || (t2 = e2.toBaseEncodedString());
        try {
          l = i.unmarshal(d.Data);
        } catch (y) {
          throw n(y, "ERR_NOT_UNIXFS");
        }
        if (r2 || (r2 = t2), a.length) {
          let e3;
          if (e3 = l && l.type === "hamt-sharded-directory" ? await s(d, a[0], h) : ((e4, t4) => {
            const r3 = e4.Links.find((e5) => e5.Name === t4);
            return r3 && r3.Hash;
          })(d, a[0]), !e3)
            throw n(new Error("file does not exist"), "ERR_NOT_FOUND");
          const t3 = a.shift();
          p = {cid: e3, toResolve: a, name: t3, path: `${r2}/${t3}`};
        }
        return {entry: {name: t2, path: r2, cid: e2, node: d, content: o[l.type](e2, d, l, r2, c, u, h, f), unixfs: l, depth: u}, next: p};
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(169), i = r(15), s = r(6), o = async function(e2) {
        const t2 = s(e2), r2 = (await i(t2, "murmur3-128")).slice(2, 10), n2 = r2.length, o2 = new Uint8Array(n2);
        for (let i2 = 0; i2 < n2; i2++)
          o2[n2 - i2 - 1] = r2[i2];
        return o2;
      };
      o.code = 34;
      const a = (e2) => e2.toString("16").toUpperCase().padStart(2, "0").substring(0, 2), c = async (e2, t2, r2, i2, s2) => {
        var u, h, f;
        i2 || ((i2 = {rootBucket: new n({hashFn: o}), hamtDepth: 1}).lastBucket = i2.rootBucket), await (u = e2.Links, h = i2.lastBucket, f = i2.rootBucket, Promise.all(u.map((e3) => {
          if (e3.Name.length === 2) {
            const t3 = parseInt(e3.Name, 16);
            return h._putObjectAt(t3, new n({hashFn: o}, h, t3));
          }
          return f.put(e3.Name.substring(2), true);
        })));
        const d = await i2.rootBucket._findNewBucketAndPos(t2);
        let l = a(d.pos);
        const p = ((e3) => {
          let t3 = e3.bucket;
          const r3 = [];
          for (; t3._parent; )
            r3.push(t3), t3 = t3._parent;
          return r3.push(t3), r3.reverse();
        })(d);
        p.length > i2.hamtDepth && (i2.lastBucket = p[i2.hamtDepth], l = a(i2.lastBucket._posAtParent));
        const y = e2.Links.find((e3) => {
          const r3 = e3.Name.substring(0, 2), n2 = e3.Name.substring(2);
          if (r3 === l && (!n2 || n2 === t2))
            return true;
        });
        return y ? y.Name.substring(2) === t2 ? y.Hash : (i2.hamtDepth++, e2 = await r2.get(y.Hash, s2), c(e2, t2, r2, i2, s2)) : null;
      };
      e.exports = c;
    }, function(e, t, r) {
      "use strict";
      e.exports = (e2, t2, r2, n, i, s, o, a) => async function* (e3 = {}) {
        const r3 = e3.offset || 0, a2 = e3.length || t2.Links.length, c = t2.Links.slice(r3, a2);
        for (const t3 of c) {
          const r4 = await i(t3.Hash, t3.Name, `${n}/${t3.Name}`, [], s + 1, o, e3);
          yield r4.entry;
        }
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = (e2, t2, r2, n, i, s, o) => (e3 = {}) => async function* e4(t3, r3, n2, i2, s2, o2) {
        const a = t3.Links;
        for (const c of a) {
          const a2 = c.Name.substring(2);
          if (a2) {
            const e5 = await n2(c.Hash, a2, `${r3}/${a2}`, [], i2 + 1, s2);
            yield e5.entry;
          } else {
            t3 = await s2.get(c.Hash);
            for await (const a3 of e4(t3, r3, n2, i2, s2, o2))
              yield a3;
          }
        }
      }(t2, n, i, s, o, e3);
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(172), s = r(173);
      e.exports = async (e2, t2, r2, o, a, c, u, h) => {
        if (o.length)
          throw n(new Error(`No link named ${r2} found in raw node ${e2.toBaseEncodedString()}`), "ERR_NOT_FOUND");
        const f = await u.get(e2, h);
        return {entry: {name: t2, path: r2, cid: e2, node: f, content: (d = f, function* (e3 = {}) {
          const {offset: t3, length: r3} = s(d.length, e3.offset, e3.length);
          yield i(d, 0, t3, t3 + r3);
        }), depth: c}};
        var d;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(0);
      e.exports = async (e2, t2, r2, s, o, a, c, u) => {
        const h = await c.get(e2, u);
        let f = h, d = r2;
        for (; s.length; ) {
          const o2 = s[0];
          if (!(o2 in f))
            throw i(new Error(`No property named ${o2} found in cbor node ${e2.toBaseEncodedString()}`), "ERR_NO_PROP");
          if (s.shift(), d = `${d}/${o2}`, n.isCID(f[o2]))
            return {entry: {name: t2, path: r2, cid: e2, node: h, depth: a}, next: {cid: f[o2], name: o2, path: d, toResolve: s}};
          f = f[o2];
        }
        return {entry: {name: t2, path: r2, cid: e2, node: h, depth: a}};
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(172), s = r(173), o = r(15).multihash;
      e.exports = async (e2, t2, r2, a, c, u, h, f) => {
        if (a.length)
          throw n(new Error(`No link named ${r2} found in raw node ${e2.toBaseEncodedString()}`), "ERR_NOT_FOUND");
        const d = await o.decode(e2.multihash);
        return {entry: {name: t2, path: r2, cid: e2, node: d, content: (l = d.digest, function* (e3 = {}) {
          const {offset: t3, length: r3} = s(l.length, e3.offset, e3.length);
          yield i(l, 0, t3, t3 + r3);
        }), depth: u}};
        var l;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(36), i = r(0), {normalizeCidPath: s, mapFile: o} = r(22), a = r(2);
      e.exports = function({ipld: e2, preload: t2}) {
        return a(async function* (r2, a2 = {}) {
          if (a2.preload !== false) {
            let e3;
            try {
              e3 = s(r2).split("/");
            } catch (c) {
              throw i(c, "ERR_INVALID_PATH");
            }
            t2(e3[0]);
          }
          for await (const t3 of n.recursive(r2, e2, a2))
            yield o(t3, {...a2, includeContent: true});
        });
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(36), i = r(0), {normalizeCidPath: s, mapFile: o} = r(22), a = r(2);
      e.exports = function({ipld: e2, preload: t2}) {
        return a(async function* (r2, a2 = {}) {
          const c = s(r2), u = a2.recursive, h = c.split("/");
          a2.preload !== false && t2(h[0]);
          const f = await n(r2, e2, a2);
          if (!f.unixfs)
            throw i(new Error("dag node was not a UnixFS node"), "ERR_NOT_UNIXFS");
          if (f.unixfs.type !== "file") {
            if (!f.unixfs.type.includes("dir"))
              throw i(new Error("Unknown UnixFS type " + f.unixfs.type), "ERR_UNKNOWN_UNIXFS_TYPE");
            if (u) {
              for await (const t3 of n.recursive(f.cid, e2, a2))
                f.cid.toBaseEncodedString() !== t3.cid.toBaseEncodedString() && (yield o(t3, a2));
              return;
            }
            for await (let e3 of f.content())
              e3 = o(e3, a2), e3.depth--, yield e3;
          } else
            yield o(f, a2);
        });
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(285), i = r(2), s = {gitHead: "", ...n};
      e.exports = ({repo: e2}) => i(async function(t2) {
        const r2 = await e2.version.get(t2);
        return {version: s.version, repo: r2, commit: s.gitHead, "interface-ipfs-core": s.devDependencies["interface-ipfs-core"]};
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(285).version, i = r(11), s = r(2), o = r(5);
      e.exports = ({peerId: e2, network: t2}) => s(async function(r2) {
        const s2 = e2.toB58String();
        let a = [], c = [];
        const u = t2.try();
        if (u) {
          const {libp2p: e3} = u;
          a = e3.transportManager.getAddrs(), c = Array.from(e3.upgrader.protocols.keys());
        }
        return {id: s2, publicKey: o(e2.pubKey.bytes, "base64pad"), addresses: a.map((e3) => {
          const t3 = e3.toString();
          return t3.endsWith("/p2p/" + s2) ? t3 : `${t3}/p2p/${s2}`;
        }).sort().map((e3) => i(e3)), agentVersion: "js-ipfs/" + n, protocolVersion: "9000", protocols: c.sort()};
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(679), i = r(680), s = r(681), o = r(682);
      class a {
        constructor(e2) {
          this.get = n(e2), this.resolve = i(e2), this.tree = s(e2);
        }
      }
      e.exports = class {
        constructor({ipld: e2, pin: t2, preload: r2, gcLock: n2, dagReader: i2}) {
          const {get: s2, resolve: a2, tree: c} = i2, u = o({ipld: e2, preload: r2, pin: t2, gcLock: n2});
          this.get = s2, this.resolve = a2, this.tree = c, this.put = u;
        }
        static reader(e2) {
          return new a(e2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(2), i = r(264), s = r(40), o = r(106);
      e.exports = ({ipld: e2, preload: t2}) => n(async function(r2, n2 = {}) {
        const {cid: a, path: c} = o(r2);
        if (c && (n2.path = c), n2.preload !== false && t2(a), n2.path) {
          return n2.localResolve ? await i(e2.resolve(a, n2.path)) : await s(e2.resolve(a, n2.path));
        }
        return {value: await e2.get(a, n2), remainderPath: ""};
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(2), s = r(106);
      e.exports = ({ipld: e2, preload: t2}) => i(async function(r2, i2 = {}) {
        const {cid: o, path: a} = s(r2);
        i2.preload !== false && t2(o), a && (i2.path = a);
        let c = o, u = i2.path || "";
        if (u.startsWith("/") && (u = u.substring(1)), i2.path)
          try {
            for await (const {value: t3, remainderPath: r3} of e2.resolve(o, i2.path, {signal: i2.signal})) {
              if (!n.isCID(t3))
                break;
              u = r3, c = t3;
            }
          } catch (h) {
            throw h.message.startsWith("Object has no property") && (h.message = `no link named "${u.split("/")[0]}" under ${c}`, h.code = "ERR_NO_LINK"), h;
          }
        return {cid: c, remainderPath: u || ""};
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(2), i = r(106);
      e.exports = ({ipld: e2, preload: t2}) => n(async function* (r2, n2 = {}) {
        const {cid: s, path: o} = i(r2);
        o && (n2.path = o), n2.preload !== false && t2(s), yield* e2.tree(s, n2.path, n2);
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(17), i = (e2) => n[e2.toUpperCase().replace(/-/g, "_")], s = r(2);
      e.exports = ({ipld: e2, pin: t2, gcLock: r2, preload: n2}) => s(async function(i2, s2 = {}) {
        const {cidVersion: a2, format: c2, hashAlg: u2} = o(s2), h = s2.pin ? await r2.readLock() : null;
        try {
          const r3 = await e2.put(i2, c2, {hashAlg: u2, cidVersion: a2, signal: s2.signal});
          return s2.pin && await t2.add(r3, {lock: false}), s2.preload !== false && n2(r3), r3;
        } finally {
          h && h();
        }
      });
      const o = (e2) => {
        if (e2.cid && (e2.format || e2.hashAlg))
          throw new Error("Can't put dag node. Please provide either `cid` OR `format` and `hashAlg` options.");
        if (e2.format && !e2.hashAlg || !e2.format && e2.hashAlg)
          throw new Error("Can't put dag node. Please provide `format` AND `hashAlg` options.");
        const {hashAlg: t2, format: r2} = e2.cid != null ? {format: e2.cid.code, hashAlg: void 0} : a({...u, ...e2});
        return {cidVersion: c({...e2, format: r2, hashAlg: t2}), format: r2, hashAlg: t2};
      }, a = ({format: e2, hashAlg: t2}) => ({format: typeof e2 == "string" ? i(e2) : e2, hashAlg: typeof t2 == "string" ? i(t2) : t2}), c = ({version: e2, cid: t2, format: r2, hashAlg: i2}) => typeof e2 == "number" ? e2 : t2 ? t2.version : r2 === n.DAG_PB && i2 === n.SHA2_256 ? 0 : 1, u = {format: n.DAG_CBOR, hashAlg: n.SHA2_256};
    }, function(e, t, r) {
      "use strict";
      const n = r(287), i = r(1), s = r(4), o = r(684), a = r(130), c = r(685), u = r(107), h = Object.assign(i("ipfs:preload"), {error: i("ipfs:preload:error")});
      e.exports = (e2 = {}) => {
        if (e2.enabled = Boolean(e2.enabled), e2.addresses = e2.addresses || [], e2.cache = e2.cache || 1e3, !e2.enabled || !e2.addresses.length) {
          h("preload disabled");
          const e3 = () => {
          };
          return Object.assign(e3, {start: () => {
          }, stop: () => {
          }});
        }
        let t2 = true, r2 = [];
        const i2 = e2.addresses.map(n), f = u(e2.cache), d = async (e3) => {
          try {
            if (t2)
              throw new Error(`preload ${e3} but preloader is not started`);
            if (typeof e3 != "string" && (e3 = new s(e3).toString()), f.has(e3))
              return;
            f.set(e3, true);
            const u2 = o(i2);
            let d2 = false;
            const l = Date.now();
            for (const i3 of u2) {
              if (t2)
                throw new Error("preload aborted for " + e3);
              let s2;
              try {
                s2 = new a(), r2 = r2.concat(s2), await c(`${i3}/api/v0/refs?r=true&arg=${encodeURIComponent(e3)}`, {signal: s2.signal}), d2 = true;
              } catch (n2) {
                n2.type !== "aborted" && h.error(n2);
              } finally {
                r2 = r2.filter((e4) => e4 !== s2);
              }
              if (d2)
                break;
            }
            h(`${d2 ? "" : "un"}successfully preloaded ${e3} in ${Date.now() - l}ms`);
          } catch (n2) {
            h.error(n2);
          }
        };
        return d.start = () => {
          t2 = false;
        }, d.stop = () => {
          t2 = true, h(`aborting ${r2.length} pending preload request(s)`), r2.forEach((e3) => e3.abort()), r2 = [];
        }, d;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2) {
        if (!Array.isArray(e2))
          throw new TypeError("Expected Array, got " + typeof e2);
        for (var t2, r2, n = e2.length, i = e2.slice(); n; )
          t2 = Math.floor(Math.random() * n--), r2 = i[n], i[n] = i[t2], i[t2] = r2;
        return i;
      };
    }, function(e, t, r) {
      "use strict";
      const {default: n} = r(82), i = r(127), s = r(1), o = Object.assign(s("ipfs:preload"), {error: s("ipfs:preload:error")}), a = new n({concurrency: 4});
      e.exports = function(e2, t2 = {}) {
        return o(e2), a.add(async () => {
          const r2 = (await i.post(e2, {signal: t2.signal})).body.getReader();
          try {
            for (; ; ) {
              const {done: e3} = await r2.read();
              if (e3)
                return;
            }
          } finally {
            r2.releaseLock();
          }
        });
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(1), {cidToString: i} = r(257), s = Object.assign(n("ipfs:mfs-preload"), {error: n("ipfs:mfs-preload:error")});
      e.exports = ({preload: e2, files: t2, options: r2 = {}}) => {
        if (r2.interval = r2.interval || 3e4, !r2.enabled) {
          s("MFS preload disabled");
          const e3 = async () => {
          };
          return {start: e3, stop: e3};
        }
        let n2, o;
        const a = async () => {
          try {
            const c = await t2.stat("/"), u = i(c.cid, {base: "base32"});
            n2 !== u && (s(`preloading updated MFS root ${n2} -> ${c.cid}`), await e2(c.cid), n2 = u);
          } catch (c) {
            s.error("failed to preload MFS root", c);
          } finally {
            o = setTimeout(a, r2.interval);
          }
        };
        return {async start() {
          const e3 = await t2.stat("/");
          n2 = i(e3.cid, {base: "base32"}), s("monitoring MFS root " + e3.cid), o = setTimeout(a, r2.interval);
        }, stop() {
          clearTimeout(o);
        }};
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(288), i = r(52), s = {stat: r(115)}, o = {chmod: r(700), cp: r(175), flush: r(704), mkdir: r(176), mv: r(705), rm: r(178), touch: r(706)}, a = {write: r(707), read: r(709), ls: r(710)}, c = ({options: e2, mfs: t2, operations: r2, lock: n2}) => {
        Object.keys(r2).forEach((i2) => {
          t2[i2] = n2(r2[i2](e2));
        });
      }, u = {repoOwner: true, ipld: null, repo: null};
      e.exports = ({ipld: e2, block: t2, blockService: r2, repo: h, preload: f, options: d}) => {
        const l = function(e3) {
          const {repoOwner: t3} = Object.assign({}, u || {}, e3);
          e3.repo = {blocks: e3.blocks, datastore: e3.datastore};
          const r3 = n(t3), i2 = {};
          return c({options: e3, mfs: i2, operations: s, lock: (e4) => r3.readLock(e4)}), c({options: e3, mfs: i2, operations: o, lock: (e4) => r3.writeLock(e4)}), Object.keys(a).forEach((t4) => {
            i2[t4] = a[t4](e3);
          }), i2;
        }({ipld: e2, block: t2, blocks: r2, datastore: h.root, repoOwner: d.repoOwner}), p = (e3) => (...t3) => {
          const r3 = t3.filter((e4) => i.ipfsPath(e4) || i.cid(e4));
          if (r3.length) {
            const e4 = t3[t3.length - 1];
            e4 && e4.preload !== false && r3.forEach((e5) => f(e5));
          }
          return e3(...t3);
        };
        return {...l, chmod: l.chmod, cp: p(l.cp), mkdir: l.mkdir, stat: p(l.stat), rm: l.rm, read: p(l.read), touch: l.touch, write: l.write, mv: p(l.mv), flush: l.flush, ls: p(async function* (...e3) {
          for await (const t3 of l.ls(...e3))
            yield {...t3, size: t3.size || 0};
        })};
      };
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const n = r(14).EventEmitter, i = r(290), {WORKER_REQUEST_READ_LOCK: s, WORKER_RELEASE_READ_LOCK: o, MASTER_GRANT_READ_LOCK: a, WORKER_REQUEST_WRITE_LOCK: c, WORKER_RELEASE_WRITE_LOCK: u, MASTER_GRANT_WRITE_LOCK: h} = r(291);
        let f;
        const d = (e2, t3, r2, n2, i2) => (s2, o2) => {
          o2 && o2.type === r2 && e2.emit(t3, o2.name, () => (s2.send({type: i2, name: o2.name, identifier: o2.identifier}), new Promise((e3) => {
            const t4 = (r3) => {
              r3 && r3.type === n2 && r3.identifier === o2.identifier && (s2.removeListener("message", t4), e3());
            };
            s2.on("message", t4);
          })));
        }, l = (e2, r2, n2, s2) => () => {
          const o2 = i.generate();
          return t2.send({type: r2, identifier: o2, name: e2}), new Promise((r3) => {
            const i2 = (a2) => {
              a2 && a2.type === n2 && a2.identifier === o2 && (t2.removeListener("message", i2), r3(() => {
                t2.send({type: s2, identifier: o2, name: e2});
              }));
            };
            t2.on("message", i2);
          });
        };
        e.exports = (e2) => {
          try {
            if (f = r(697), !Object.keys(f).length)
              return;
          } catch (t3) {
            return;
          }
          if (f.isMaster || e2.singleProcess) {
            const e3 = new n();
            return f.on("message", d(e3, "requestReadLock", s, o, a)), f.on("message", d(e3, "requestWriteLock", c, u, h)), e3;
          }
          return {isWorker: true, readLock: (e3) => l(e3, s, a, o), writeLock: (e3) => l(e3, c, h, u)};
        };
      }).call(this, r(10));
    }, function(e, t, r) {
      "use strict";
      var n = r(114), i = r(691), s = r(695), o = r(696) || 0;
      function a() {
        return i(o);
      }
      e.exports = a, e.exports.generate = a, e.exports.seed = function(t2) {
        return n.seed(t2), e.exports;
      }, e.exports.worker = function(t2) {
        return o = t2, e.exports;
      }, e.exports.characters = function(e2) {
        return e2 !== void 0 && n.characters(e2), n.shuffled();
      }, e.exports.isValid = s;
    }, function(e, t, r) {
      "use strict";
      var n = 1;
      e.exports = {nextValue: function() {
        return (n = (9301 * n + 49297) % 233280) / 233280;
      }, seed: function(e2) {
        n = e2;
      }};
    }, function(e, t, r) {
      "use strict";
      var n, i, s = r(692);
      r(114);
      e.exports = function(e2) {
        var t2 = "", r2 = Math.floor(1e-3 * (Date.now() - 1567752802062));
        return r2 === i ? n++ : (n = 0, i = r2), t2 += s(7), t2 += s(e2), n > 0 && (t2 += s(n)), t2 += s(r2);
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(114), i = r(693), s = r(694);
      e.exports = function(e2) {
        for (var t2, r2 = 0, o = ""; !t2; )
          o += s(i, n.get(), 1), t2 = e2 < Math.pow(16, r2 + 1), r2++;
        return o;
      };
    }, function(e, t, r) {
      "use strict";
      var n, i = typeof window == "object" && (window.crypto || window.msCrypto);
      n = i && i.getRandomValues ? function(e2) {
        return i.getRandomValues(new Uint8Array(e2));
      } : function(e2) {
        for (var t2 = [], r2 = 0; r2 < e2; r2++)
          t2.push(Math.floor(256 * Math.random()));
        return t2;
      }, e.exports = n;
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2, r2) {
        for (var n = (2 << Math.log(t2.length - 1) / Math.LN2) - 1, i = -~(1.6 * n * r2 / t2.length), s = ""; ; )
          for (var o = e2(i), a = i; a--; )
            if ((s += t2[o[a] & n] || "").length === +r2)
              return s;
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(114);
      e.exports = function(e2) {
        return !(!e2 || typeof e2 != "string" || e2.length < 6) && !new RegExp("[^" + n.get().replace(/[|\\{}()[\]^$+*?.-]/g, "\\$&") + "]").test(e2);
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = 0;
    }, function(e, t) {
    }, function(e, t, r) {
      "use strict";
      const n = r(14).EventEmitter, i = r(290), {WORKER_REQUEST_READ_LOCK: s, WORKER_RELEASE_READ_LOCK: o, MASTER_GRANT_READ_LOCK: a, WORKER_REQUEST_WRITE_LOCK: c, WORKER_RELEASE_WRITE_LOCK: u, MASTER_GRANT_WRITE_LOCK: h} = r(291), f = r(292), d = r(128)(), l = (e2, t2, r2, n2, i2) => (s2, o2) => {
        if (!o2 || !o2.data || o2.data.type !== r2)
          return;
        const a2 = {type: o2.data.type, name: o2.data.name, identifier: o2.data.identifier};
        e2.emit(t2, a2.name, () => (s2.postMessage({type: i2, name: a2.name, identifier: a2.identifier}), new Promise((e3) => {
          const t3 = (r3) => {
            if (!r3 || !r3.data)
              return;
            const i3 = {type: r3.data.type, name: r3.data.name, identifier: r3.data.identifier};
            i3 && i3.type === n2 && i3.identifier === a2.identifier && (s2.removeEventListener("message", t3), e3());
          };
          s2.addEventListener("message", t3);
        })));
      }, p = (e2, t2, r2, n2) => () => {
        const s2 = i.generate();
        return d.postMessage({type: t2, identifier: s2, name: e2}), new Promise((t3) => {
          const i2 = (o2) => {
            if (!o2 || !o2.data)
              return;
            const a2 = {type: o2.data.type, identifier: o2.data.identifier};
            a2 && a2.type === r2 && a2.identifier === s2 && (d.removeEventListener("message", i2), t3(() => {
              d.postMessage({type: n2, identifier: s2, name: e2});
            }));
          };
          d.addEventListener("message", i2);
        });
      }, y = {singleProcess: false};
      e.exports = (e2) => {
        e2 = Object.assign({}, y, e2);
        if (!!d.document || e2.singleProcess) {
          const e3 = new n();
          return f.addEventListener("message", l(e3, "requestReadLock", s, o, a)), f.addEventListener("message", l(e3, "requestWriteLock", c, u, h)), e3;
        }
        return {isWorker: true, readLock: (e3) => p(e3, s, a, o), writeLock: (e3) => p(e3, c, h, u)};
      };
    }, function(e, t, r) {
      "use strict";
      var n;
      e.exports.timeout = function(e2, t2) {
        var r2, i = new n();
        return Promise.race([e2, new Promise(function(e3, n2) {
          r2 = setTimeout(function() {
            n2(i);
          }, t2);
        })]).then(function(e3) {
          return clearTimeout(r2), e3;
        }, function(e3) {
          throw clearTimeout(r2), e3;
        });
      };
      (n = e.exports.TimeoutError = function() {
        Error.call(this), this.stack = Error().stack, this.message = "Timeout";
      }).prototype = Object.create(Error.prototype), n.prototype.name = "TimeoutError";
    }, function(e, t, r) {
      "use strict";
      const n = r(23).bind({ignoreUndefined: true}), i = r(41), s = r(1)("ipfs:mfs:touch"), o = r(0), a = r(28), c = r(90), u = r(68), h = r(69), f = r(70), {DAGNode: d} = r(16), l = r(17), p = r(15).multihash, {pipe: y} = r(25), g = r(165), b = r(36), m = r(40), v = r(175), w = r(178), _ = r(67), E = r(2), S = {flush: true, shardSplitThreshold: 1e3, hashAlg: "sha2-256", cidVersion: 0, recursive: false, signal: void 0};
      function A(e2, t2, r2) {
        t2 || (t2 = 0);
        const n2 = e2.match(/^(u?g?o?a?)(-?\+?=?)?(r?w?x?X?s?t?)$/);
        if (!n2)
          throw new Error("Invalid file mode: " + e2);
        let [, i2, s2, o2] = n2;
        i2 !== "a" && i2 || (i2 = "ugo");
        let a2 = function(e3, t3, r3) {
          let n3 = 0;
          return (e3.includes("x") || e3.includes("X") && (r3 || 1 & t3 || 8 & t3 || 64 & t3)) && (n3 += 1), e3.includes("w") && (n3 += 2), e3.includes("r") && (n3 += 4), n3;
        }(o2, t2, r2);
        return a2 = function(e3, t3) {
          let r3 = 0;
          return e3.includes("u") && (r3 += t3 << 6), e3.includes("g") && (r3 += t3 << 3), e3.includes("o") && (r3 += t3), r3;
        }(i2, a2), a2 = function(e3, t3, r3) {
          return t3.includes("t") && (r3 += parseInt("1000", 8)), t3.includes("s") && (e3.includes("u") && (r3 += parseInt("4000", 8)), e3.includes("g") && (r3 += parseInt("2000", 8))), r3;
        }(i2, o2, a2), s2 === "=" ? (i2.includes("u") && (t2 &= parseInt("7077", 8), t2 |= a2), i2.includes("g") && (t2 &= parseInt("7707", 8), t2 |= a2), i2.includes("o") && (t2 &= parseInt("7770", 8), t2 |= a2), t2) : s2 === "+" ? a2 | t2 : s2 === "-" ? a2 ^ t2 : void 0;
      }
      function I(e2, t2) {
        return e2 instanceof String && (e2 = e2.toString()), typeof e2 == "string" && (e2 = e2.match(/^\d+$/g) ? parseInt(e2, 8) : e2.split(",").reduce((e3, r2) => A(r2, e3, t2.isDirectory()), t2.mode)), e2;
      }
      e.exports = (e2) => E(async function(t2, r2, E2 = {}) {
        const A2 = n(S, E2);
        s("Fetching stats for " + t2);
        const {cid: k, mfsDirectory: R, name: T} = await i(e2, t2, A2);
        if (k.codec !== "dag-pb")
          throw o(new Error(t2 + " was not a UnixFS node"), "ERR_NOT_UNIXFS");
        if (A2.recursive) {
          const n2 = await y(async function* () {
            for await (const t3 of b.recursive(k, e2.ipld)) {
              let n3 = await e2.ipld.get(t3.cid);
              t3.unixfs.mode = I(r2, t3.unixfs), n3 = new d(t3.unixfs.marshal(), n3.Links), yield {path: t3.path, content: n3};
            }
          }, (t3) => g(t3, e2.block, {...A2, pin: false, dagBuilder: async function* (e3, t4, r3) {
            for await (const n3 of e3)
              yield async function() {
                return {cid: await _(n3.content.serialize(), t4, r3), path: n3.path, unixfs: a.unmarshal(n3.content.Data), node: n3.content};
              };
          }}), (e3) => m(e3));
          return await w(e2)(t2, A2), void await v(e2)("/ipfs/" + n2.cid, t2, A2);
        }
        let C = await e2.ipld.get(k);
        const M = a.unmarshal(C.Data);
        M.mode = I(r2, M), C = new d(M.marshal(), C.Links);
        const x = await e2.ipld.put(C, l.DAG_PB, {cidVersion: k.version, hashAlg: p.names[A2.hashAlg || S.hashAlg], onlyHash: !A2.flush}), N = await c(e2, R), P = N[N.length - 1], B = await e2.ipld.get(P.cid), O = await u(e2, {parent: B, name: T, cid: x, size: C.serialize().length, flush: A2.flush, hashAlg: A2.hashAlg, cidVersion: k.version});
        P.cid = O.cid;
        const D = await h(e2, N, A2);
        await f(e2, D, A2);
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(28), {DAGNode: i} = r(16), s = r(17), o = r(15).multihash;
      e.exports = async (e2, t2, r2) => {
        const a = o.names[r2.hashAlg], c = new n({type: t2, mode: r2.mode, mtime: r2.mtime}), u = new i(c.marshal());
        return {cid: await e2.ipld.put(u, s.DAG_PB, {cidVersion: r2.cidVersion, hashAlg: a, onlyHash: !r2.flush}), node: u};
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(177);
      e.exports = async function(e2, t2, r2) {
        const {sources: i, options: s} = await n(e2, t2, r2);
        return {destination: i.pop(), sources: i, options: s};
      };
    }, function(e, t, r) {
      "use strict";
      const {DAGNode: n, DAGLink: i} = r(16), s = r(4), o = r(1)("ipfs:mfs:core:utils:remove-link"), a = r(28), {generatePath: c, updateHamtDirectory: u} = r(294), h = r(0), f = r(17), d = r(15).multihash, l = async (e2, t2) => {
        const r2 = d.names[t2.hashAlg];
        t2.parent.rmLink(t2.name);
        const n2 = await e2.ipld.put(t2.parent, f.DAG_PB, {cidVersion: t2.cidVersion, hashAlg: r2});
        return o("Updated regular directory " + n2), {node: t2.parent, cid: n2};
      }, p = async (e2, t2) => {
        const {rootBucket: r2, path: n2} = await c(e2, t2.name, t2.parent);
        await r2.del(t2.name);
        const {node: i2} = await y(e2, n2, {name: t2.name, cid: t2.cid, size: t2.size, hashAlg: t2.hashAlg, cidVersion: t2.cidVersion, flush: t2.flush}, t2);
        return u(e2, i2.Links, r2, t2);
      }, y = async (e2, t2, r2, i2) => {
        const {bucket: s2, prefix: a2, node: c2} = t2.pop(), f2 = c2.Links.find((e3) => e3.Name.substring(0, 2) === a2);
        if (!f2)
          throw h(new Error(`No link found with prefix ${a2} for file ${r2.name}`), "ERR_NOT_FOUND");
        if (f2.Name === `${a2}${r2.name}`)
          return o("Removing existing link " + f2.Name), c2.rmLink(f2.Name), await s2.del(r2.name), u(e2, c2.Links, s2, i2);
        o(`Descending into sub-shard ${f2.Name} for ${a2}${r2.name}`);
        const d2 = await y(e2, t2, r2, i2);
        let l2 = a2;
        d2.node.Links.length === 1 && (o("Removing subshard for " + a2), d2.cid = d2.node.Links[0].Hash, d2.node = d2.node.Links[0], l2 = `${a2}${d2.node.Name.substring(2)}`), o(`Updating shard ${a2} with name ${l2}`);
        const p2 = n.isDAGNode(d2.node) ? d2.node.size : d2.node.Tsize;
        return g(e2, s2, c2, a2, l2, p2, d2.cid, i2);
      }, g = (e2, t2, r2, n2, s2, o2, a2, c2) => (r2.rmLink(n2), r2.addLink(new i(s2, o2, a2)), u(e2, r2.Links, t2, c2));
      e.exports = async (e2, t2) => {
        if (!t2.parentCid && !t2.parent)
          throw h(new Error("No parent node or CID passed to removeLink"), "EINVALIDPARENT");
        if (t2.parentCid && !s.isCID(t2.parentCid))
          throw h(new Error("Invalid CID passed to removeLink"), "EINVALIDPARENTCID");
        if (t2.parent || (o("Loading parent node " + t2.parentCid), t2.parent = await e2.ipld.get(t2.parentCid)), !t2.name)
          throw h(new Error("No child name passed to removeLink"), "EINVALIDCHILDNAME");
        return a.unmarshal(t2.parent.Data).type === "hamt-sharded-directory" ? (o(`Removing ${t2.name} from sharded directory`), p(e2, t2)) : (o(`Removing link ${t2.name} regular directory`), l(e2, t2));
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(115), i = r(2), s = r(23).bind({ignoreUndefined: true}), o = {timeout: void 0, signal: void 0};
      e.exports = (e2) => i(async function(t2, r2 = {}) {
        r2 = s(o, r2);
        const {cid: i2} = await n(e2)(t2, r2);
        return i2;
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(177), i = r(175), s = r(178), o = r(2), a = {parents: false, recursive: false, flush: true, cidVersion: 0, hashAlg: "sha2-256", shardSplitThreshold: 1e3, signal: void 0};
      e.exports = (e2) => o(async function(...t2) {
        const {sources: r2, options: o2} = await n(e2, t2, a), c = r2.map((e3) => e3.path).concat(o2), u = r2.slice(0, -1).map((e3) => e3.path).concat(Object.assign(o2, {recursive: true}));
        await i(e2).apply(null, c), await s(e2).apply(null, u);
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(23).bind({ignoreUndefined: true}), i = r(41), s = r(1)("ipfs:mfs:touch"), o = r(0), a = r(28), c = r(90), u = r(68), h = r(69), f = r(70), {DAGNode: d} = r(16), l = r(17), p = r(15).multihash, y = r(2), g = {mtime: void 0, flush: true, shardSplitThreshold: 1e3, cidVersion: 0, hashAlg: "sha2-256", signal: void 0};
      e.exports = (e2) => y(async function(t2, r2 = {}) {
        const y2 = n(g, r2);
        y2.mtime = y2.mtime || new Date(), s(`Touching ${t2} mtime: ${y2.mtime}`);
        const {cid: b, mfsDirectory: m, name: v, exists: w} = await i(e2, t2, y2);
        let _, E, S = y2.cidVersion;
        if (w) {
          if (b.codec !== "dag-pb")
            throw o(new Error(t2 + " was not a UnixFS node"), "ERR_NOT_UNIXFS");
          S = b.version, _ = await e2.ipld.get(b);
          const r3 = a.unmarshal(_.Data);
          r3.mtime = y2.mtime, _ = new d(r3.marshal(), _.Links), E = await e2.ipld.put(_, l.DAG_PB, {cidVersion: b.version, hashAlg: p.names["sha2-256"], onlyHash: !y2.flush});
        } else {
          const t3 = new a({type: "file", mtime: y2.mtime});
          _ = new d(t3.marshal()), E = await e2.ipld.put(_, l.DAG_PB, {cidVersion: y2.cidVersion, hashAlg: p.names["sha2-256"], onlyHash: !y2.flush});
        }
        const A = await c(e2, m), I = A[A.length - 1], k = await e2.ipld.get(I.cid), R = await u(e2, {parent: k, name: v, cid: E, size: _.serialize().length, flush: y2.flush, shardSplitThreshold: y2.shardSplitThreshold, hashAlg: "sha2-256", cidVersion: S});
        I.cid = R.cid;
        const T = await h(e2, A, y2);
        await f(e2, T, y2);
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(1)("ipfs:mfs:write"), i = r(165), s = r(115), o = r(176), a = r(68), c = r(23).bind({ignoreUndefined: true}), u = r(288), h = r(708), f = r(41), d = r(174), l = r(90), p = r(69), y = r(70), g = r(0), {MFS_MAX_CHUNK_SIZE: b} = r(22), m = r(40), v = r(2), w = {offset: 0, length: void 0, create: false, truncate: false, rawLeaves: false, reduceSingleLeafToSelf: false, cidVersion: 0, hashAlg: "sha2-256", parents: false, progress: () => {
      }, strategy: "trickle", flush: true, leafType: "raw", shardSplitThreshold: 1e3, mode: void 0, mtime: void 0, signal: void 0};
      e.exports = (e2) => v(async function(t2, r2, i2 = {}) {
        let s2, o2, a2;
        if (i2 = c(w, i2), n("Reading source, destination and parent"), await u().readLock(async () => {
          s2 = await h(r2), o2 = await f(e2, t2, i2), a2 = await f(e2, o2.mfsDirectory, i2);
        })(), n("Read source, destination and parent"), !i2.parents && !a2.exists)
          throw g(new Error("directory does not exist"), "ERR_NO_EXIST");
        if (!i2.create && !o2.exists)
          throw g(new Error("file does not exist"), "ERR_NO_EXIST");
        return _(e2, t2, s2, o2, i2);
      });
      const _ = async (e2, t2, r2, n2, i2) => {
        const c2 = await E(e2, r2, n2, i2);
        await u().writeLock(async () => {
          const r3 = d(t2), n3 = r3.pop();
          let u2 = false;
          try {
            await s(e2)("/" + r3.join("/"), i2), u2 = true;
          } catch (E2) {
            if (E2.code !== "ERR_NOT_FOUND")
              throw E2;
          }
          u2 || await o(e2)("/" + r3.join("/"), i2);
          const h2 = await f(e2, t2, i2), b2 = await l(e2, h2.mfsDirectory), m2 = b2[b2.length - 1];
          if (!m2.type.includes("directory"))
            throw g(new Error(`cannot write to ${m2.name}: Not a directory`), "ERR_NOT_A_DIRECTORY");
          const v2 = await e2.ipld.get(m2.cid), w2 = await a(e2, {parent: v2, name: n3, cid: c2.cid, size: c2.size, flush: i2.flush, shardSplitThreshold: i2.shardSplitThreshold, hashAlg: i2.hashAlg, cidVersion: i2.cidVersion});
          m2.cid = w2.cid;
          const _2 = await p(e2, b2, i2);
          await y(e2, _2, i2);
        })();
      }, E = async (e2, t2, r2, s2) => {
        r2.exists ? n(`Overwriting file ${r2.cid} offset ${s2.offset} length ${s2.length}`) : n(`Writing file offset ${s2.offset} length ${s2.length}`);
        const o2 = [];
        if (s2.offset > 0)
          if (r2.unixfs) {
            if (n(`Writing first ${s2.offset} bytes of original file`), o2.push(() => r2.content({offset: 0, length: s2.offset})), r2.unixfs.fileSize() < s2.offset) {
              const e3 = s2.offset - r2.unixfs.fileSize();
              n(`Writing zeros for extra ${e3} bytes`), o2.push(A(e3));
            }
          } else
            n(`Writing zeros for first ${s2.offset} bytes`), o2.push(A(s2.offset));
        o2.push(S(t2, s2.length));
        const a2 = k(I(o2), (e3) => {
          if (r2.unixfs && !s2.truncate) {
            const t3 = r2.unixfs.fileSize();
            if (t3 > e3)
              return n(`Writing last ${t3 - e3} of ${t3} bytes from original file starting at offset ${e3}`), r2.content({offset: e3});
            n("Not writing last bytes from original file");
          }
          return {[Symbol.asyncIterator]: async function* () {
          }};
        });
        let c2, u2;
        s2.mode !== void 0 && s2.mode !== null ? c2 = s2.mode : r2 && r2.unixfs && (c2 = r2.unixfs.mode), s2.mtime !== void 0 && s2.mtine !== null ? u2 = s2.mtime : r2 && r2.unixfs && (u2 = r2.unixfs.mtime);
        const h2 = await m(i([{content: a2, mode: c2, mtime: u2}], e2.block, {progress: s2.progress, hashAlg: s2.hashAlg, cidVersion: s2.cidVersion, strategy: s2.strategy, rawLeaves: s2.rawLeaves, reduceSingleLeafToSelf: s2.reduceSingleLeafToSelf, leafType: s2.leafType, pin: false}));
        return n("Wrote " + h2.cid), {cid: h2.cid, size: h2.size};
      }, S = (e2, t2) => async function* () {
        let r2 = 0;
        for await (const n2 of e2) {
          if (r2 += n2.length, r2 > t2)
            return void (yield n2.slice(0, t2 - r2));
          yield n2;
        }
      }, A = (e2, t2 = b) => {
        const r2 = new Uint8Array(t2), n2 = {[Symbol.asyncIterator]: function* () {
          for (; ; )
            yield r2.slice();
        }};
        return S(n2, e2);
      }, I = async function* (e2) {
        for (let t2 = 0; t2 < e2.length; t2++)
          yield* e2[t2]();
      }, k = async function* (e2, t2) {
        let r2 = 0;
        for await (const n2 of e2)
          r2 += n2.length, yield n2;
        for await (const n2 of t2(r2))
          r2 += n2.length, yield n2;
      };
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const n = r(0), i = r(1)("ipfs:mfs:utils:to-async-iterator"), {MFS_MAX_CHUNK_SIZE: s} = r(22), o = r(6);
        e.exports = (e2) => {
          if (!e2)
            throw n(new Error("paths must start with a leading slash"), "ERR_INVALID_PATH");
          if ((typeof e2 == "string" || e2 instanceof String) && (i("Content was a string"), e2 = o(e2)), e2.length)
            return i("Content was array-like"), {[Symbol.asyncIterator]: function* () {
              yield e2;
            }};
          if (e2[Symbol.asyncIterator])
            return i("Content was an async iterator"), e2;
          if (e2[Symbol.iterator])
            return i("Content was an iterator"), e2;
          if (t2.Blob && e2 instanceof t2.Blob) {
            i("Content was an HTML5 Blob");
            let r2 = 0;
            const n2 = {next: () => r2 > e2.size ? {done: true} : new Promise((n3, i2) => {
              const o2 = e2.slice(r2, s);
              r2 += s;
              const a = new t2.FileReader(), c = (e3) => {
                if (a.removeEventListener("loadend", c, false), e3.error)
                  return i2(e3.error);
                n3({done: false, value: new Uint8Array(a.result)});
              };
              a.addEventListener("loadend", c), a.readAsArrayBuffer(o2);
            })};
            return {[Symbol.asyncIterator]: () => n2};
          }
          throw n(new Error(`Don't know how to convert ${e2} into an async iterator`), "ERR_INVALID_PARAMS");
        };
      }).call(this, r(12));
    }, function(e, t, r) {
      "use strict";
      const n = r(36), i = r(23).bind({ignoreUndefined: true}), s = r(41), o = r(0), a = r(2), c = {offset: 0, length: 1 / 0, signal: void 0};
      e.exports = (e2) => a(function(t2, r2 = {}) {
        return r2 = i(c, r2), {[Symbol.asyncIterator]: async function* () {
          const i2 = await s(e2, t2, r2), a2 = await n(i2.mfsPath, e2.ipld);
          if (a2.unixfs.type !== "file")
            throw o(new Error(t2 + " was not a file"), "ERR_NOT_FILE");
          if (!a2.content)
            throw o(new Error("Could not load content stream from " + t2), "ERR_NO_CONTENT");
          for await (const e3 of a2.content({offset: r2.offset, length: r2.length}))
            yield e3;
        }};
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(36), i = r(41), s = r(2), o = (e2) => {
        let t2, r2, n2 = "file", i2 = e2.node.size || e2.node.length;
        e2.unixfs && (i2 = e2.unixfs.fileSize(), n2 = e2.unixfs.type, e2.unixfs.type === "hamt-sharded-directory" && (n2 = "directory"), t2 = e2.unixfs.mode, r2 = e2.unixfs.mtime);
        const s2 = {cid: e2.cid, name: e2.name, type: n2, size: i2};
        return r2 !== void 0 && (s2.mtime = r2), t2 !== void 0 && (s2.mode = t2), s2;
      };
      e.exports = (e2) => s(async function* (t2, r2 = {}) {
        const s2 = await i(e2, t2, r2), a = await n(s2.mfsPath, e2.ipld);
        if (a.unixfs && a.unixfs.type.includes("directory"))
          for await (const e3 of a.content(r2))
            yield o(e3);
        else
          yield o(a);
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(712), i = r(713), s = r(714), o = r(715), a = r(716), c = r(717), u = r(718);
      e.exports = class {
        constructor({keychain: e2}) {
          this.gen = i({keychain: e2}), this.list = a({keychain: e2}), this.rm = u({keychain: e2}), this.rename = c({keychain: e2}), this.export = n({keychain: e2}), this.import = s({keychain: e2}), this.info = o({keychain: e2});
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(2);
      e.exports = ({keychain: e2}) => n((t2, r2, n2) => e2.exportKey(t2, r2, n2));
    }, function(e, t, r) {
      "use strict";
      const n = r(2);
      e.exports = ({keychain: e2}) => n((t2, r2 = {}) => e2.createKey(t2, r2.type || "rsa", r2.size || 2048));
    }, function(e, t, r) {
      "use strict";
      const n = r(2);
      e.exports = ({keychain: e2}) => n((t2, r2, n2, i) => e2.importKey(t2, r2, n2, i));
    }, function(e, t, r) {
      "use strict";
      const n = r(2);
      e.exports = ({keychain: e2}) => n((t2, r2 = {}) => e2.findKeyByName(t2, r2));
    }, function(e, t, r) {
      "use strict";
      const n = r(2);
      e.exports = ({keychain: e2}) => n((t2 = {}) => e2.listKeys(t2));
    }, function(e, t, r) {
      "use strict";
      const n = r(2);
      e.exports = ({keychain: e2}) => n(async (t2, r2, n2 = {}) => {
        const i = await e2.renameKey(t2, r2, n2);
        return {was: t2, now: i.name, id: i.id, overwrite: false};
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(2);
      e.exports = ({keychain: e2}) => n((t2, r2) => e2.removeKey(t2, r2));
    }, function(e, t, r) {
      "use strict";
      const n = r(720), i = r(56), s = r(721), o = r(722), a = r(91), c = r(723), u = r(724);
      e.exports = class {
        constructor({ipld: e2, preload: t2, dag: r2, gcLock: h}) {
          this.data = n({ipld: e2, preload: t2}), this.get = i({ipld: e2, preload: t2}), this.links = s({dag: r2}), this.new = o({ipld: e2, preload: t2}), this.put = a({ipld: e2, preload: t2, gcLock: h}), this.stat = c({ipld: e2, preload: t2}), this.patch = new u({ipld: e2, preload: t2, gcLock: h});
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(2);
      e.exports = ({ipld: e2, preload: t2}) => {
        const i = r(56)({ipld: e2, preload: t2});
        return n(async function(e3, t3) {
          return (await i(e3, t3)).Data;
        });
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(16).DAGLink, i = r(4), s = r(2);
      e.exports = ({dag: e2}) => s(async function(t2, r2 = {}) {
        const s2 = new i(t2), o = await e2.get(s2, r2);
        if (s2.codec === "raw")
          return [];
        if (s2.codec === "dag-pb")
          return o.value.Links;
        if (s2.codec === "dag-cbor")
          return function e3(t3, r3 = []) {
            for (const o2 in t3) {
              const a = t3[o2];
              if (o2 === "/" && Object.keys(t3).length === 1)
                try {
                  r3.push(new n("", 0, new i(a)));
                  continue;
                } catch (s3) {
                }
              i.isCID(a) ? r3.push(new n("", 0, a)) : (Array.isArray(a) && e3(a, r3), a && typeof a == "object" && e3(a, r3));
            }
            return r3;
          }(o);
        throw new Error("Cannot resolve links from codec " + s2.codec);
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(16).DAGNode, i = r(17), s = r(28), o = r(2);
      e.exports = ({ipld: e2, preload: t2}) => o(async function(r2 = {}) {
        let o2;
        if (r2.template) {
          if (r2.template !== "unixfs-dir")
            throw new Error("unknown template");
          o2 = new s("directory").marshal();
        } else
          o2 = new Uint8Array(0);
        const a = new n(o2), c = await e2.put(a, i.DAG_PB, {cidVersion: 0, hashAlg: i.SHA2_256, signal: r2.signal});
        return r2.preload !== false && t2(c), c;
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(16), i = r(2);
      e.exports = ({ipld: e2, preload: t2}) => {
        const s = r(56)({ipld: e2, preload: t2});
        return i(async function(e3, t3 = {}) {
          const r2 = await s(e3, t3), i2 = n.util.serialize(r2), o = await n.util.cid(i2, {cidVersion: 0}), a = i2.length, c = r2.Links.reduce((e4, t4) => e4 + t4.Tsize, 0);
          return {Hash: o.toBaseEncodedString(), NumLinks: r2.Links.length, BlockSize: a, LinksSize: a - r2.Data.length, DataSize: r2.Data.length, CumulativeSize: a + c};
        });
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(725), i = r(726), s = r(727), o = r(728);
      e.exports = class {
        constructor({ipld: e2, preload: t2, gcLock: r2}) {
          this.addLink = n({ipld: e2, preload: t2, gcLock: r2}), this.appendData = i({ipld: e2, preload: t2, gcLock: r2}), this.rmLink = s({ipld: e2, preload: t2, gcLock: r2}), this.setData = o({ipld: e2, preload: t2, gcLock: r2});
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(2);
      e.exports = ({ipld: e2, gcLock: t2, preload: i}) => {
        const s = r(56)({ipld: e2, preload: i}), o = r(91)({ipld: e2, gcLock: t2, preload: i});
        return n(async function(e3, t3, r2) {
          const n2 = await s(e3, r2);
          return n2.addLink(t3), o(n2, r2);
        });
      };
    }, function(e, t, r) {
      "use strict";
      const {DAGNode: n} = r(16), i = r(2), s = r(27);
      e.exports = ({ipld: e2, gcLock: t2, preload: o}) => {
        const a = r(56)({ipld: e2, preload: o}), c = r(91)({ipld: e2, gcLock: t2, preload: o});
        return i(async function(e3, t3, r2) {
          const i2 = await a(e3, r2), o2 = s([i2.Data, t3]);
          return c(new n(o2, i2.Links), r2);
        });
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(2);
      e.exports = ({ipld: e2, gcLock: t2, preload: i}) => {
        const s = r(56)({ipld: e2, preload: i}), o = r(91)({ipld: e2, gcLock: t2, preload: i});
        return n(async function(e3, t3, r2) {
          const n2 = await s(e3, r2);
          return n2.rmLink(t3.Name || t3.name), o(n2, r2);
        });
      };
    }, function(e, t, r) {
      "use strict";
      const {DAGNode: n} = r(16), i = r(2);
      e.exports = ({ipld: e2, gcLock: t2, preload: s}) => {
        const o = r(56)({ipld: e2, preload: s}), a = r(91)({ipld: e2, gcLock: t2, preload: s});
        return i(async function(e3, t3, r2) {
          const i2 = await o(e3, r2);
          return a(new n(t3, i2.Links), r2);
        });
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(730), i = r(295), s = r(731);
      e.exports = class {
        constructor({gcLock: e2, pin: t2, repo: r2, refs: o}) {
          this.gc = n({gcLock: e2, pin: t2, refs: o, repo: r2}), this.stat = i({repo: r2}), this.version = s({repo: r2});
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(1)("ipfs:repo:gc"), {MFS_ROOT_KEY: s} = r(22), o = r(2), {Errors: a} = r(9), c = a.notFoundError().code, {parallelMerge: u, transform: h, map: f} = r(55), d = r(30);
      e.exports = ({gcLock: e2, pin: t2, refs: r2, repo: a2}) => o(async function* (o2 = {}) {
        const l = Date.now();
        i("Creating set of marked blocks");
        const p = await e2.writeLock();
        try {
          const e3 = await async function({pin: e4, refs: t3, repo: r3}) {
            const o4 = f(({cid: e5}) => e5, e4.ls()), a3 = async function* () {
              let e5;
              try {
                e5 = await r3.root.get(s);
              } catch (a4) {
                if (a4.code === c)
                  return void i("No blocks in MFS");
                throw a4;
              }
              const o5 = new n(e5);
              yield o5;
              for await (const {ref: r4} of t3(o5, {recursive: true}))
                yield new n(r4);
            }(), h2 = new Set();
            for await (const n2 of u(o4, a3))
              h2.add(d.encode("base32", n2.multihash).toString());
            return h2;
          }({pin: t2, refs: r2, repo: a2}), o3 = a2.blocks.query({keysOnly: true});
          yield* async function* ({repo: e4}, t3, r3) {
            let n2 = 0, s2 = 0;
            const o4 = async (r4) => {
              n2++;
              try {
                const n3 = d.encode("base32", r4.multihash).toString();
                if (t3.has(n3))
                  return null;
                const i2 = {cid: r4};
                try {
                  await e4.blocks.delete(r4), s2++;
                } catch (o5) {
                  i2.err = new Error(`Could not delete block with CID ${r4}: ${o5.message}`);
                }
                return i2;
              } catch (o5) {
                const e5 = "Could delete block with CID " + r4;
                return i(e5, o5), {err: new Error(e5 + ": " + o5.message)};
              }
            };
            for await (const i2 of h(256, o4, r3))
              i2 && (yield i2);
            i(`Marked set has ${t3.size} unique blocks. Blockstore has ${n2} blocks. Deleted ${s2} blocks.`);
          }({repo: a2}, e3, o3), i(`Complete (${Date.now() - l}ms)`);
        } finally {
          p();
        }
      });
    }, function(e, t, r) {
      "use strict";
      const {repoVersion: n} = r(179), i = r(2);
      e.exports = ({repo: e2}) => i(async function(t2) {
        try {
          await e2._checkInitialized(t2);
        } catch (r2) {
          if ([/Key not found in database \[\/version\]/, /ENOENT/, /repo is not initialized yet/].some((e3) => e3.test(r2.message)))
            return n;
          throw r2;
        }
        return e2.version.get(t2);
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(733), i = r(743), s = r(745), o = r(180), a = r(1)("ipfs:repo:migrator");
      function c(e2) {
        return e2 = e2 || n, Array.isArray(e2) && e2.length !== 0 ? e2[e2.length - 1].version : 0;
      }
      function u(e2, t2, r2, n2 = false) {
        let i2 = 0;
        for (const s2 of e2) {
          if (s2.version > r2)
            break;
          if (s2.version > t2) {
            if (n2 && !s2.revert)
              throw new o.NonReversibleMigrationError(`It is not possible to revert to version ${t2} because migration version ${s2.version} is not reversible. Cancelling reversion.`);
            i2++;
          }
        }
        if (i2 !== r2 - t2)
          throw new o.InvalidValueError(`The ipfs-repo-migrations package does not have all migration to migrate from version ${t2} to ${r2}`);
      }
      t.getCurrentRepoVersion = i.getVersion, t.errors = o, t.getLatestMigrationVersion = c, t.migrate = async function(e2, t2, r2, {ignoreLock: h = false, onProgress: f, isDryRun: d = false, migrations: l}) {
        if (l = l || n, !e2)
          throw new o.RequiredParameterError("Path argument is required!");
        if (!t2)
          throw new o.RequiredParameterError("repoOptions argument is required!");
        if (!r2)
          throw new o.RequiredParameterError("toVersion argument is required!");
        if (!Number.isInteger(r2) || r2 <= 0)
          throw new o.InvalidValueError("Version has to be positive integer!");
        const p = await i.getVersion(e2, t2);
        if (p === r2)
          return void a("Nothing to migrate.");
        if (p > r2)
          throw new o.InvalidValueError(`Current repo's version (${p}) is higher then toVersion (${r2}), you probably wanted to revert it?`);
        let y;
        u(l, p, r2), d || h || (y = await s.lock(p, e2));
        try {
          for (const n2 of l) {
            if (r2 !== void 0 && n2.version > r2)
              break;
            if (!(n2.version <= p)) {
              a("Migrating version " + n2.version);
              try {
                if (!d) {
                  let r3;
                  f && (r3 = (e3, t3) => f(n2.version, e3.toFixed(2), t3)), await n2.migrate(e2, t2, r3);
                }
              } catch (g) {
                const r3 = n2.version - 1;
                throw a("An exception was raised during execution of migration. Setting the repo's version to last successfully migrated version: " + r3), await i.setVersion(e2, r3, t2), new Error(`During migration to version ${n2.version} exception was raised: ${g.stack || g.message || g}`);
              }
              a(`Migrating to version ${n2.version} finished`);
            }
          }
          d || await i.setVersion(e2, r2 || c(l), t2), a("Repo successfully migrated ", r2 !== void 0 ? `to version ${r2}!` : "to latest version!");
        } finally {
          d || h || await y.close();
        }
      }, t.revert = async function(e2, t2, r2, {ignoreLock: c2 = false, onProgress: h, isDryRun: f = false, migrations: d}) {
        if (d = d || n, !e2)
          throw new o.RequiredParameterError("Path argument is required!");
        if (!t2)
          throw new o.RequiredParameterError("repoOptions argument is required!");
        if (!r2)
          throw new o.RequiredParameterError("When reverting migrations, you have to specify to which version to revert!");
        if (!Number.isInteger(r2) || r2 <= 0)
          throw new o.InvalidValueError("Version has to be positive integer!");
        const l = await i.getVersion(e2, t2);
        if (l === r2)
          return void a("Nothing to revert.");
        if (l < r2)
          throw new o.InvalidValueError(`Current repo's version (${l}) is lower then toVersion (${r2}), you probably wanted to migrate it?`);
        let p;
        u(d, r2, l, true), f || c2 || (p = await s.lock(l, e2)), a(`Reverting from version ${l} to ${r2}`);
        try {
          const n2 = d.slice().reverse();
          for (const s2 of n2) {
            if (s2.version <= r2)
              break;
            if (!(s2.version > l)) {
              a("Reverting migration version " + s2.version);
              try {
                if (!f) {
                  let r3;
                  h && (r3 = (e3, t3) => h(s2.version, e3.toFixed(2), t3)), await s2.revert(e2, t2, r3);
                }
              } catch (y) {
                const r3 = s2.version;
                throw a("An exception was raised during execution of migration. Setting the repo's version to last successfully reverted version: " + r3), await i.setVersion(e2, r3, t2), y.message = `During reversion to version ${s2.version} exception was raised: ${y.message}`, y;
              }
              a(`Reverting to version ${s2.version} finished`);
            }
          }
          f || await i.setVersion(e2, r2, t2), a(`All migrations successfully reverted to version ${r2}!`);
        } finally {
          f || c2 || await p.close();
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = {description: "Empty migration.", migrate: () => {
      }, revert: () => {
      }, empty: true};
      e.exports = [Object.assign({version: 1}, n), Object.assign({version: 2}, n), Object.assign({version: 3}, n), Object.assign({version: 4}, n), Object.assign({version: 5}, n), Object.assign({version: 6}, n), Object.assign({version: 7}, n), r(734), r(735)];
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(9).Key, s = r(30), o = r(1)("ipfs:repo:migrator:migration-8"), a = r(5), {createStore: c} = r(116), u = r(297);
      function h(e2) {
        const t2 = s.decode("b" + e2.toString().slice(1));
        let r2 = new n(t2).multihash;
        return r2 = s.encode("base32", r2).slice(1), r2 = a(r2).toUpperCase(), new i("/" + r2, false);
      }
      function f(e2) {
        const t2 = s.decode("b" + e2.toString().slice(1)), r2 = s.encode("base32", new n(1, "raw", t2).bytes).slice(1);
        return new i(("/" + a(r2)).toUpperCase(), false);
      }
      async function d(e2, t2, r2, n2) {
        const i2 = await c(e2, "blocks", t2);
        let s2;
        await i2.open(), r2 && (s2 = await u(i2.query({keysOnly: true, filters: [({key: e3}) => n2(e3).toString() !== e3.toString()]})));
        try {
          let e3 = 0;
          for await (const t3 of i2.query({})) {
            const a2 = n2(t3.key);
            a2.toString() !== t3.key.toString() && (e3 += 1, o(`Migrating Block from ${t3.key} to ${a2}`), await i2.delete(t3.key), await i2.put(a2, t3.value), r2 && r2(e3 / s2 * 100, `Migrated Block from ${t3.key} to ${a2}`));
          }
        } finally {
          await i2.close();
        }
      }
      e.exports = {version: 8, description: "Transforms key names into base32 encoding and converts Block store to use bare multihashes encoded as base32", migrate: (e2, t2, r2) => d(e2, t2, r2, h), revert: (e2, t2, r2) => d(e2, t2, r2, f)};
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(16), s = r(265), o = r(17), a = r(30), c = r(736), {createStore: u} = r(116), {cidToKey: h, PIN_DS_KEY: f, PinTypes: d} = r(298), l = r(297);
      async function p(e2, t2, r2, a2) {
        if (!await t2.has(f))
          return;
        const u2 = await t2.get(f), p2 = new n(u2), y2 = await e2.get(h(p2)), g2 = i.util.deserialize(y2);
        let b, m = 0;
        a2 && (b = await l(c.loadSet(e2, g2, d.recursive)) + await l(c.loadSet(e2, g2, d.direct)));
        for await (const n2 of c.loadSet(e2, g2, d.recursive)) {
          m++;
          const e3 = {depth: 1 / 0};
          n2.version !== 0 && (e3.version = n2.version), n2.codec !== "dag-pb" && (e3.codec = o.getNumber(n2.codec)), await r2.put(h(n2), s.encode(e3)), a2 && a2(m / b * 100, "Migrated recursive pin " + n2);
        }
        for await (const n2 of c.loadSet(e2, g2, d.direct)) {
          m++;
          const e3 = {depth: 0};
          n2.version !== 0 && (e3.version = n2.version), n2.codec !== "dag-pb" && (e3.codec = o.getNumber(n2.codec)), await r2.put(h(n2), s.encode(e3)), a2(m / b * 100, "Migrated direct pin " + n2);
        }
        await e2.delete(h(p2)), await t2.delete(f);
      }
      async function y(e2, t2, r2, u2) {
        let p2, y2 = [], g2 = [], b = 0;
        u2 && (p2 = await l(r2.query({keysOnly: true})));
        for await (const {key: i2, value: c2} of r2.query({})) {
          b++;
          const e3 = s.decode(c2), t3 = new n(e3.version || 0, e3.codec && o.getName(e3.codec) || "dag-pb", a.decode("b" + i2.toString().split("/").pop()));
          e3.depth === 0 ? (u2 && u2(b / p2 * 100, "Reverted direct pin " + t3), g2.push(t3)) : (u2 && u2(b / p2 * 100, "Reverted recursive pin " + t3), y2.push(t3));
        }
        u2(100, "Updating pin root");
        const m = new i.DAGNode(new Uint8Array(), [await c.storeSet(e2, d.recursive, y2), await c.storeSet(e2, d.direct, g2)]).serialize(), v = await i.util.cid(m, {cidVersion: 0, hashAlg: o.SHA2_256});
        await e2.put(h(v), m), await t2.put(f, v.multihash);
      }
      async function g(e2, t2, r2, n2) {
        const i2 = await u(e2, "blocks", t2), s2 = await u(e2, "datastore", t2), o2 = await u(e2, "pins", t2);
        await i2.open(), await s2.open(), await o2.open();
        try {
          await n2(i2, s2, o2, r2);
        } finally {
          await o2.close(), await s2.close(), await i2.close();
        }
      }
      e.exports = {version: 9, description: "Migrates pins to datastore", migrate: (e2, t2, r2) => g(e2, t2, r2, p), revert: (e2, t2, r2) => g(e2, t2, r2, y)};
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(20), s = r(737), o = r(738), a = r(16), {DAGNode: c, DAGLink: u} = a, h = r(17), f = r(742), {cidToKey: d, DEFAULT_FANOUT: l, MAX_ITEMS: p, EMPTY_KEY: y} = r(298), g = r(27), b = r(250), m = r(5), v = r(6), w = r(19), _ = i(f);
      function E(e2, t2) {
        const r2 = new Uint8Array(4);
        new DataView(r2.buffer).setUint32(0, e2, true);
        const i2 = v(function(e3) {
          return new n(e3).toBaseEncodedString();
        }(t2)), o2 = g([r2, i2], r2.byteLength + i2.byteLength);
        return s(m(o2));
      }
      async function* S(e2, t2) {
        const r2 = function(e3) {
          const t3 = e3.Data, r3 = o.decode(t3), n3 = o.decode.bytes;
          if (n3 <= 0)
            throw new Error("Invalid Set header length");
          if (n3 + r3 > t3.length)
            throw new Error("Impossibly large set header length");
          const i2 = t3.slice(n3, r3 + n3), s2 = _.Set.decode(i2);
          if (s2.version !== 1)
            throw new Error("Unsupported Set version: " + s2.version);
          if (s2.fanout > e3.Links.length)
            throw new Error("Impossibly large fanout");
          return {header: s2, data: t3.slice(r3 + n3)};
        }(t2);
        let n2 = 0;
        for (const i2 of t2.Links) {
          if (n2 < r2.header.fanout) {
            const t3 = i2.Hash;
            if (!w(y, t3.bytes)) {
              const r3 = await e2.get(d(t3)), n3 = a.util.deserialize(r3);
              yield* S(e2, n3);
            }
          } else
            yield i2.Hash;
          n2++;
        }
      }
      e.exports = {loadSet: async function* (e2, t2, r2) {
        const n2 = t2.Links.find((e3) => e3.Name === r2);
        if (!n2)
          throw new Error("No link found with name " + r2);
        const i2 = await e2.get(d(n2.Hash)), s2 = a.util.deserialize(i2);
        yield* S(e2, s2);
      }, storeSet: async function(e2, t2, r2) {
        const n2 = await function(e3, t3) {
          return async function t4(r3, n3) {
            const i3 = _.Set.encode({version: 1, fanout: l, seed: n3}), s3 = o.encode(i3.length), f2 = g([s3, i3]), m2 = [];
            for (let e4 = 0; e4 < l; e4++)
              m2.push(new u("", 1, y));
            if (r3.length <= p) {
              const e4 = r3.map((e5) => ({link: new u("", 1, e5.key), data: e5.data || new Uint8Array()})).sort((e5, t6) => b(e5.link.Hash.bytes, t6.link.Hash.bytes)), t5 = m2.concat(e4.map((e5) => e5.link)), n4 = g([f2, ...e4.map((e5) => e5.data)]);
              return new c(n4, t5);
            }
            {
              const e4 = r3.reduce((e5, t5) => {
                const r4 = E(n3, t5.key) % l;
                return e5[r4] = r4 in e5 ? e5[r4].concat([t5]) : [t5], e5;
              }, []);
              let i4 = 0;
              for (const r4 of e4) {
                const e5 = await t4(r4, n3 + 1);
                await v2(e5, i4), i4++;
              }
              return new c(f2, m2);
            }
            async function v2(t5, r4) {
              const n4 = a.util.serialize(t5), i4 = await a.util.cid(n4, {cidVersion: 0, hashAlg: h.SHA2_256});
              await e3.put(d(i4), n4), m2[r4] = new u("", t5.size, i4);
            }
          }(t3, 0);
        }(e2, r2.map((e3) => ({key: e3, data: null}))), i2 = n2.serialize(n2), s2 = await a.util.cid(i2, {cidVersion: 0, hashAlg: h.SHA2_256});
        return await e2.put(d(s2), i2), new u(t2, n2.size, s2);
      }};
    }, function(e, t, r) {
      "use strict";
      function n(e2) {
        for (var t2 = n.BASE, r2 = 0, i = e2.length; r2 < i; r2++)
          t2 ^= e2.charCodeAt(r2), t2 += (t2 << 1) + (t2 << 4) + (t2 << 7) + (t2 << 8) + (t2 << 24);
        return t2 >>> 0;
      }
      n.BASE = 2166136261, e.exports = n;
    }, function(e, t, r) {
      "use strict";
      e.exports = {encode: r(739), decode: r(740), encodingLength: r(741)};
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2, i) {
        r2 = r2 || [];
        var s = i = i || 0;
        for (; t2 >= n; )
          r2[i++] = 255 & t2 | 128, t2 /= 128;
        for (; -128 & t2; )
          r2[i++] = 255 & t2 | 128, t2 >>>= 7;
        return r2[i] = 0 | t2, e2.bytes = i - s + 1, r2;
      };
      var n = Math.pow(2, 31);
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2) {
        var n, i = 0, s = 0, o = r2 = r2 || 0, a = t2.length;
        do {
          if (o >= a)
            throw e2.bytes = 0, new RangeError("Could not decode varint");
          n = t2[o++], i += s < 28 ? (127 & n) << s : (127 & n) * Math.pow(2, s), s += 7;
        } while (n >= 128);
        return e2.bytes = o - r2, i;
      };
    }, function(e, t, r) {
      "use strict";
      var n = Math.pow(2, 7), i = Math.pow(2, 14), s = Math.pow(2, 21), o = Math.pow(2, 28), a = Math.pow(2, 35), c = Math.pow(2, 42), u = Math.pow(2, 49), h = Math.pow(2, 56), f = Math.pow(2, 63);
      e.exports = function(e2) {
        return e2 < n ? 1 : e2 < i ? 2 : e2 < s ? 3 : e2 < o ? 4 : e2 < a ? 5 : e2 < c ? 6 : e2 < u ? 7 : e2 < h ? 8 : e2 < f ? 9 : 10;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = '\n  syntax = "proto2";\n\n  package ipfs.pin;\n\n  option go_package = "pb";\n\n  message Set {\n    optional uint32 version = 1;\n    optional uint32 fanout = 2;\n    optional fixed32 seed = 3;\n  }\n';
    }, function(e, t, r) {
      "use strict";
      const n = r(744), {MissingRepoOptionsError: i, NotInitializedRepoError: s} = r(180), {VERSION_KEY: o, createStore: a} = r(116), c = r(6);
      t.getVersion = async function(e2, t2) {
        if (!await n.isRepoInitialized(e2, t2))
          throw new s(`Repo in path ${e2} is not initialized!`);
        if (!t2)
          throw new i("Please pass repo options when trying to open a repo");
        const r2 = await a(e2, "root", t2);
        await r2.open();
        const c2 = parseInt(await r2.get(o));
        return await r2.close(), c2;
      }, t.setVersion = async function(e2, t2, r2) {
        if (!r2)
          throw new i("Please pass repo options when trying to open a repo");
        const n2 = await a(e2, "root", r2);
        await n2.open(), await n2.put(o, c(String(t2))), await n2.close();
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(1)("ipfs:repo:migrator:repo:init"), {CONFIG_KEY: i, VERSION_KEY: s, createStore: o} = r(116), {MissingRepoOptionsError: a} = r(180);
      t.isRepoInitialized = async function(e2, t2) {
        if (!t2)
          throw new a("Please pass repo options when trying to open a repo");
        let r2;
        try {
          r2 = await o(e2, "root", t2), await r2.open();
          const a2 = await r2.has(s), c = await r2.has(i);
          return !(!a2 || !c) || (n("Version entry present: " + a2), n("Config entry present: " + c), false);
        } catch (c) {
          return n("While checking if repo is initialized error was thrown: " + c.message), false;
        } finally {
          r2 !== void 0 && await r2.close();
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(1)("ipfs:repo:migrator:repo_mem_lock"), i = {};
      t.lock = async function(e2, t2) {
        const r2 = t2 + "/repo.lock";
        if (n("locking %s", r2), i[r2] === true)
          throw Error("There is already present lock for: " + r2);
        return i[r2] = true, {close() {
          i[r2] && (n("releasing lock %s", r2), delete i[r2]);
        }};
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2) {
        if (typeof e2 == "string")
          return c(e2);
        if (typeof e2 == "number")
          return a(e2, t2);
        return null;
      }, e.exports.format = a, e.exports.parse = c;
      var n = /\B(?=(\d{3})+(?!\d))/g, i = /(?:\.0*|(\.[^0]+)0+)$/, s = {b: 1, kb: 1024, mb: 1 << 20, gb: 1 << 30, tb: Math.pow(1024, 4), pb: Math.pow(1024, 5)}, o = /^((-|\+)?(\d+(?:\.\d+)?)) *(kb|mb|gb|tb|pb)$/i;
      function a(e2, t2) {
        if (!Number.isFinite(e2))
          return null;
        var r2 = Math.abs(e2), o2 = t2 && t2.thousandsSeparator || "", a2 = t2 && t2.unitSeparator || "", c2 = t2 && t2.decimalPlaces !== void 0 ? t2.decimalPlaces : 2, u = Boolean(t2 && t2.fixedDecimals), h = t2 && t2.unit || "";
        h && s[h.toLowerCase()] || (h = r2 >= s.pb ? "PB" : r2 >= s.tb ? "TB" : r2 >= s.gb ? "GB" : r2 >= s.mb ? "MB" : r2 >= s.kb ? "KB" : "B");
        var f = (e2 / s[h.toLowerCase()]).toFixed(c2);
        return u || (f = f.replace(i, "$1")), o2 && (f = f.replace(n, o2)), f + a2 + h;
      }
      function c(e2) {
        if (typeof e2 == "number" && !isNaN(e2))
          return e2;
        if (typeof e2 != "string")
          return null;
        var t2, r2 = o.exec(e2), n2 = "b";
        return r2 ? (t2 = parseFloat(r2[1]), n2 = r2[4].toLowerCase()) : (t2 = parseInt(e2, 10), n2 = "b"), Math.floor(s[n2] * t2);
      }
    }, function(e, t, r) {
      "use strict";
      e.exports = function(...e2) {
        return e2.length === 0 ? "." : e2.join("/");
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = {repoVersion: 9};
    }, function(e, t, r) {
      "use strict";
      t.create = function(e2, t2, r2) {
        return new (0, r2.storageBackends[e2])(t2, Object.assign({}, r2.storageBackendOptions[e2] || {}));
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(9).Key, i = r(1)("ipfs:repo:version"), s = r(5), o = r(6), a = new n("version");
      e.exports = (e2) => ({exists: async () => e2.has(a), async get() {
        const t2 = await e2.get(a);
        return parseInt(s(t2), 10);
      }, set: async (t2) => e2.put(a, o(String(t2))), async check(e3) {
        const t2 = await this.get();
        i("comparing version: %s and %s", t2, e3);
        return t2 === e3 || (t2 === 6 && e3 === 7 || e3 === 6 && t2 === 7);
      }});
    }, function(e, t, r) {
      "use strict";
      const n = r(9).Key, {default: i} = r(82), s = r(296), o = r(752), a = r(0), c = r(181), u = r(5), h = r(6), f = new n("config");
      e.exports = (e2) => {
        const t2 = new i({concurrency: 1}), r2 = {getAll: async (e3 = {}) => r2.get(void 0, e3), async get(t3, r3 = {}) {
          t3 || (t3 = void 0);
          const n3 = await e2.get(f);
          if (r3.signal && r3.signal.aborted)
            return;
          const i2 = JSON.parse(u(n3));
          if (t3 !== void 0 && s(i2, t3) === void 0)
            throw new c.NotFoundError(`Key ${t3} does not exist in config`);
          return t3 !== void 0 ? s(i2, t3) : i2;
        }, async set(e3, r3, i2 = {}) {
          if (arguments.length === 1)
            r3 = e3, e3 = void 0;
          else if (!e3 || typeof e3 != "string")
            throw a(new Error("Invalid key type: " + typeof e3), "ERR_INVALID_KEY");
          if (r3 === void 0 || r3 instanceof Uint8Array)
            throw a(new Error("Invalid value type: " + typeof r3), "ERR_INVALID_VALUE");
          return t2.add(() => n2({key: e3, value: r3}, i2.signal));
        }, async replace(e3, r3 = {}) {
          if (!e3 || e3 instanceof Uint8Array)
            throw a(new Error("Invalid value type: " + typeof e3), "ERR_INVALID_VALUE");
          return t2.add(() => n2({key: void 0, value: e3}, r3.signal));
        }, exists: async () => e2.has(f)};
        return r2;
        async function n2(e3, t3) {
          if (t3 && t3.aborted)
            return;
          const n3 = e3.key, i2 = e3.value;
          if (n3) {
            const e4 = await r2.get();
            return o(e4, n3, i2), d(e4);
          }
          return d(i2);
        }
        function d(t3) {
          const r3 = h(JSON.stringify(t3, null, 2));
          return e2.put(f, r3);
        }
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2, r2) {
        typeof t2 == "string" && (t2 = t2.split("."));
        typeof t2 == "symbol" && (t2 = [t2]);
        var n, i = t2.pop();
        if (!i)
          return false;
        for (; n = t2.shift(); )
          if (e2[n] === void 0 && (e2[n] = {}), !(e2 = e2[n]) || typeof e2 != "object")
            return false;
        return e2[i] = r2, true;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(9).Key, i = r(754), s = r(5), o = r(6), a = new n("datastore_spec");
      e.exports = (e2) => ({exists: async () => e2.has(a), async get() {
        const t2 = await e2.get(a);
        return JSON.parse(s(t2));
      }, set: async (t2) => e2.put(a, o(JSON.stringify(i(t2, {deep: true}))))});
    }, function(e, t, r) {
      "use strict";
      const n = r(755);
      e.exports = (e2, t2 = {}) => {
        if (!n(e2) && !Array.isArray(e2))
          throw new TypeError("Expected a plain object or array");
        const {deep: r2} = t2, i = [], s = [], o = (e3) => {
          const t3 = i.indexOf(e3);
          if (t3 !== -1)
            return s[t3];
          const r3 = [];
          return i.push(e3), s.push(r3), r3.push(...e3.map((e4) => Array.isArray(e4) ? o(e4) : n(e4) ? a(e4) : e4)), r3;
        }, a = (e3) => {
          const c = i.indexOf(e3);
          if (c !== -1)
            return s[c];
          const u = {}, h = Object.keys(e3).sort(t2.compare);
          i.push(e3), s.push(u);
          for (const t3 of h) {
            const i2 = e3[t3];
            r2 && Array.isArray(i2) ? u[t3] = o(i2) : u[t3] = r2 && n(i2) ? a(i2) : i2;
          }
          return u;
        };
        return Array.isArray(e2) ? r2 ? o(e2) : e2.slice() : a(e2);
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = (e2) => {
        if (Object.prototype.toString.call(e2) !== "[object Object]")
          return false;
        const t2 = Object.getPrototypeOf(e2);
        return t2 === null || t2 === Object.prototype;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(9).Key, i = r(6), s = new n("api");
      e.exports = (e2) => ({async get() {
        const t2 = await e2.get(s);
        return t2 && t2.toString();
      }, set: async (t2) => e2.put(s, i(t2.toString())), delete: async () => e2.delete(s)});
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const n = r(161), i = n.ShardingDatastore, s = r(89), {cidToKey: o, keyToCid: a} = r(299), c = r(171), u = r(245), h = r(92);
        e.exports = async (e2, r2) => function(e3) {
          return {async *query(t3, r3) {
            for await (const {key: n2, value: i2} of e3.query(t3, r3))
              t3.keysOnly ? yield a(n2) : yield new s(i2, a(n2));
          }, async get(t3, r3) {
            const n2 = o(t3), i2 = await e3.get(n2, r3);
            return new s(i2, t3);
          }, async *getMany(e4, t3) {
            for await (const r3 of e4)
              yield this.get(r3, t3);
          }, async put(t3, r3) {
            if (!s.isBlock(t3))
              throw new Error("invalid block");
            const n2 = o(t3.cid);
            return await e3.has(n2, r3) || await e3.put(n2, t3.data, r3), t3;
          }, async *putMany(r3, n2) {
            const i2 = h();
            (t2 && t2.nextTick ? t2.nextTick : setImmediate)(async () => {
              try {
                await u(e3.putMany(async function* () {
                  for await (const t3 of r3) {
                    const r4 = o(t3.cid);
                    await e3.has(r4, n2) || (yield {key: r4, value: t3.data}), i2.push(t3);
                  }
                }())), i2.end();
              } catch (t3) {
                i2.end(t3);
              }
            }), yield* i2;
          }, has: async (t3, r3) => e3.has(o(t3), r3), delete: async (t3, r3) => e3.delete(o(t3), r3), async *deleteMany(t3, r3) {
            yield* e3.deleteMany(c(t3, (e4) => o(e4)), r3);
          }, close: async () => e3.close()};
        }(await function(e3, t3) {
          if (t3.sharding) {
            const t4 = new n.shard.NextToLast(2);
            return i.createOrOpen(e3, t4);
          }
          return e3;
        }(e2, r2));
      }).call(this, r(10));
    }, function(e, t, r) {
      "use strict";
      e.exports = class {
        constructor(e2) {
          if (!(e2 > 0) || (e2 - 1 & e2) != 0)
            throw new Error("Max size for a FixedFIFO should be a power of two");
          this.buffer = new Array(e2), this.mask = e2 - 1, this.top = 0, this.btm = 0, this.next = null;
        }
        push(e2) {
          return this.buffer[this.top] === void 0 && (this.buffer[this.top] = e2, this.top = this.top + 1 & this.mask, true);
        }
        shift() {
          const e2 = this.buffer[this.btm];
          if (e2 !== void 0)
            return this.buffer[this.btm] = void 0, this.btm = this.btm + 1 & this.mask, e2;
        }
        isEmpty() {
          return this.buffer[this.btm] === void 0;
        }
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = {lock: "memory", storageBackends: {root: r(93), blocks: r(93), keys: r(93), datastore: r(93), pins: r(93)}, storageBackendOptions: {root: {extension: "", prefix: "", version: 2}, blocks: {sharding: false, prefix: "", version: 2}, keys: {sharding: false, prefix: "", version: 2}, datastore: {sharding: false, prefix: "", version: 2}, pins: {sharding: false, prefix: "", version: 2}}};
    }, function(e, t, r) {
      "use strict";
      e.exports = r(761)(r(793));
    }, function(e, t, r) {
      "use strict";
      var n = r(762), i = r(789);
      e.exports = function(e2) {
        function t2(t3, s, o) {
          return typeof t3 == "function" ? o = t3 : typeof s == "function" && (o = s), r2(s) || (s = r2(t3) ? t3 : {}), n(i(e2(t3, s), s), s, o);
        }
        function r2(e3) {
          return typeof e3 == "object" && e3 !== null;
        }
        return ["destroy", "repair"].forEach(function(r3) {
          typeof e2[r3] == "function" && (t2[r3] = function() {
            e2[r3].apply(e2, arguments);
          });
        }), t2.errors = n.errors, t2;
      };
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        var n = r(14).EventEmitter, i = r(64).inherits, s = r(71), o = r(763), a = r(772), c = r(780), u = r(186), h = r(182), f = r(784), d = r(311), l = r(117).getCallback, p = r(117).getOptions, y = u.WriteError, g = u.ReadError, b = u.NotFoundError, m = u.OpenError, v = u.InitializationError;
        function w(e2, r2, i2) {
          if (!(this instanceof w))
            return new w(e2, r2, i2);
          var s2, a2 = this;
          if (n.call(this), this.setMaxListeners(1 / 0), typeof r2 == "function" && (i2 = r2, r2 = {}), r2 = r2 || {}, !e2 || typeof e2 != "object") {
            if (s2 = new v("First argument must be an abstract-leveldown compliant store"), typeof i2 == "function")
              return t2.nextTick(i2, s2);
            throw s2;
          }
          f.strictEqual(typeof e2.status, "string", ".status required, old abstract-leveldown"), this.options = p(r2), this._db = e2, this.db = new o(e2), this.open(i2 || function(e3) {
            e3 && a2.emit("error", e3);
          }), this.supports = h(this.db.supports, {status: false, deferredOpen: true, openCallback: true, promises: true, streams: true}), Object.keys(this.supports.additionalMethods).forEach(function(e3) {
            this[e3] == null && (this[e3] = function() {
              return this.db[e3].apply(this.db, arguments);
            });
          }, this);
        }
        function _(e2, r2) {
          if (!e2._isOpening() && !e2.isOpen())
            return t2.nextTick(r2, new g("Database is not open")), true;
        }
        w.prototype.emit = n.prototype.emit, w.prototype.once = n.prototype.once, i(w, n), w.prototype.open = function(e2, r2) {
          var n2, i2 = this;
          return typeof e2 == "function" && (r2 = e2, e2 = null), r2 || (n2 = (r2 = d()).promise), e2 || (e2 = this.options), this.isOpen() ? (t2.nextTick(r2, null, i2), n2) : this._isOpening() ? (this.once("open", function() {
            r2(null, i2);
          }), n2) : (this.emit("opening"), this.db.open(e2, function(e3) {
            if (e3)
              return r2(new m(e3));
            i2.db = i2._db, r2(null, i2), i2.emit("open"), i2.emit("ready");
          }), n2);
        }, w.prototype.close = function(e2) {
          var r2, n2 = this;
          return e2 || (r2 = (e2 = d()).promise), this.isOpen() ? (this.db.close(function() {
            n2.emit("closed"), e2.apply(null, arguments);
          }), this.emit("closing"), this.db = new o(this._db)) : this.isClosed() ? t2.nextTick(e2) : this.db.status === "closing" ? this.once("closed", e2) : this._isOpening() && this.once("open", function() {
            n2.close(e2);
          }), r2;
        }, w.prototype.isOpen = function() {
          return this.db.status === "open";
        }, w.prototype._isOpening = function() {
          return this.db.status === "opening";
        }, w.prototype.isClosed = function() {
          return /^clos|new/.test(this.db.status);
        }, w.prototype.get = function(e2, t3, r2) {
          var n2;
          return (r2 = l(t3, r2)) || (n2 = (r2 = d()).promise), _(this, r2) || (t3 = p(t3), this.db.get(e2, t3, function(t4, n3) {
            if (t4)
              return t4 = /notfound/i.test(t4) || t4.notFound ? new b("Key not found in database [" + e2 + "]", t4) : new g(t4), r2(t4);
            r2(null, n3);
          })), n2;
        }, w.prototype.put = function(e2, t3, r2, n2) {
          var i2, s2 = this;
          return (n2 = l(r2, n2)) || (i2 = (n2 = d()).promise), _(this, n2) || (r2 = p(r2), this.db.put(e2, t3, r2, function(r3) {
            if (r3)
              return n2(new y(r3));
            s2.emit("put", e2, t3), n2();
          })), i2;
        }, w.prototype.del = function(e2, t3, r2) {
          var n2, i2 = this;
          return (r2 = l(t3, r2)) || (n2 = (r2 = d()).promise), _(this, r2) || (t3 = p(t3), this.db.del(e2, t3, function(t4) {
            if (t4)
              return r2(new y(t4));
            i2.emit("del", e2), r2();
          })), n2;
        }, w.prototype.batch = function(e2, t3, r2) {
          if (!arguments.length)
            return new c(this);
          var n2, i2 = this;
          return (r2 = typeof e2 == "function" ? e2 : l(t3, r2)) || (n2 = (r2 = d()).promise), _(this, r2) || (t3 = p(t3), this.db.batch(e2, t3, function(t4) {
            if (t4)
              return r2(new y(t4));
            i2.emit("batch", e2), r2();
          })), n2;
        }, w.prototype.iterator = function(e2) {
          return this.db.iterator(e2);
        }, w.prototype.clear = function(e2, t3) {
          var r2, n2 = this;
          return t3 = l(e2, t3), e2 = p(e2), t3 || (r2 = (t3 = d()).promise), _(this, t3) || this.db.clear(e2, function(r3) {
            if (r3)
              return t3(new y(r3));
            n2.emit("clear", e2), t3();
          }), r2;
        }, w.prototype.readStream = w.prototype.createReadStream = function(e2) {
          return typeof (e2 = s({keys: true, values: true}, e2)).limit != "number" && (e2.limit = -1), new a(this.db.iterator(e2), e2);
        }, w.prototype.keyStream = w.prototype.createKeyStream = function(e2) {
          return this.createReadStream(s(e2, {keys: true, values: false}));
        }, w.prototype.valueStream = w.prototype.createValueStream = function(e2) {
          return this.createReadStream(s(e2, {keys: false, values: true}));
        }, w.prototype.toString = function() {
          return "LevelUP";
        }, w.prototype.type = "levelup", w.errors = u, e.exports = w.default = w;
      }).call(this, r(10));
    }, function(e, t, r) {
      "use strict";
      var n = r(301).AbstractLevelDOWN, i = r(18), s = r(771), o = "put get del batch clear".split(" "), a = "approximateSize compactRange".split(" ");
      function c(e2) {
        n.call(this, e2.supports || {}), a.forEach(function(t2) {
          typeof e2[t2] != "function" || this.supports.additionalMethods[t2] || (this.supports.additionalMethods[t2] = true);
        }, this), this._db = e2, this._operations = [], u(this);
      }
      function u(e2) {
        o.forEach(function(t2) {
          e2["_" + t2] = function() {
            this._operations.push({method: t2, args: arguments});
          };
        }), Object.keys(e2.supports.additionalMethods).forEach(function(t2) {
          e2[t2] = function() {
            this._operations.push({method: t2, args: arguments});
          };
        }), e2._iterator = function(t2) {
          var r2 = new s(e2, t2);
          return this._operations.push({iterator: r2}), r2;
        };
      }
      i(c, n), c.prototype.type = "deferred-leveldown", c.prototype._open = function(e2, t2) {
        var r2 = this;
        this._db.open(e2, function(e3) {
          if (e3)
            return t2(e3);
          r2._operations.forEach(function(e4) {
            e4.iterator ? e4.iterator.setDb(r2._db) : r2._db[e4.method].apply(r2._db, e4.args);
          }), r2._operations = [], function(e4) {
            o.concat("iterator").forEach(function(t3) {
              e4["_" + t3] = function() {
                return this._db[t3].apply(this._db, arguments);
              };
            }), Object.keys(e4.supports.additionalMethods).forEach(function(t3) {
              e4[t3] = function() {
                return this._db[t3].apply(this._db, arguments);
              };
            });
          }(r2), t2();
        });
      }, c.prototype._close = function(e2) {
        var t2 = this;
        this._db.close(function(r2) {
          if (r2)
            return e2(r2);
          u(t2), e2();
        });
      }, c.prototype._serializeKey = function(e2) {
        return e2;
      }, c.prototype._serializeValue = function(e2) {
        return e2;
      }, e.exports = c, e.exports.DeferredIterator = s;
    }, function(e, t, r) {
      "use strict";
      var n = r(71), i = r(182), s = r(3).Buffer, o = r(302), a = r(303), c = r(183), u = Object.prototype.hasOwnProperty, h = "start end gt gte lt lte".split(" ");
      function f(e2) {
        this.status = "new", this.supports = i(e2, {status: true});
      }
      function d(e2, t2) {
        var r2 = {};
        for (var n2 in t2)
          if (u.call(t2, n2)) {
            var i2 = t2[n2];
            l(n2) && (i2 = e2._serializeKey(i2)), r2[n2] = i2;
          }
        return r2;
      }
      function l(e2) {
        return h.indexOf(e2) !== -1;
      }
      f.prototype.open = function(e2, t2) {
        var r2 = this, n2 = this.status;
        if (typeof e2 == "function" && (t2 = e2), typeof t2 != "function")
          throw new Error("open() requires a callback argument");
        typeof e2 == "object" && e2 !== null || (e2 = {}), e2.createIfMissing = e2.createIfMissing !== false, e2.errorIfExists = !!e2.errorIfExists, this.status = "opening", this._open(e2, function(e3) {
          if (e3)
            return r2.status = n2, t2(e3);
          r2.status = "open", t2();
        });
      }, f.prototype._open = function(e2, t2) {
        c(t2);
      }, f.prototype.close = function(e2) {
        var t2 = this, r2 = this.status;
        if (typeof e2 != "function")
          throw new Error("close() requires a callback argument");
        this.status = "closing", this._close(function(n2) {
          if (n2)
            return t2.status = r2, e2(n2);
          t2.status = "closed", e2();
        });
      }, f.prototype._close = function(e2) {
        c(e2);
      }, f.prototype.get = function(e2, t2, r2) {
        if (typeof t2 == "function" && (r2 = t2), typeof r2 != "function")
          throw new Error("get() requires a callback argument");
        var n2 = this._checkKey(e2);
        if (n2)
          return c(r2, n2);
        e2 = this._serializeKey(e2), typeof t2 == "object" && t2 !== null || (t2 = {}), t2.asBuffer = t2.asBuffer !== false, this._get(e2, t2, r2);
      }, f.prototype._get = function(e2, t2, r2) {
        c(function() {
          r2(new Error("NotFound"));
        });
      }, f.prototype.put = function(e2, t2, r2, n2) {
        if (typeof r2 == "function" && (n2 = r2), typeof n2 != "function")
          throw new Error("put() requires a callback argument");
        var i2 = this._checkKey(e2) || this._checkValue(t2);
        if (i2)
          return c(n2, i2);
        e2 = this._serializeKey(e2), t2 = this._serializeValue(t2), typeof r2 == "object" && r2 !== null || (r2 = {}), this._put(e2, t2, r2, n2);
      }, f.prototype._put = function(e2, t2, r2, n2) {
        c(n2);
      }, f.prototype.del = function(e2, t2, r2) {
        if (typeof t2 == "function" && (r2 = t2), typeof r2 != "function")
          throw new Error("del() requires a callback argument");
        var n2 = this._checkKey(e2);
        if (n2)
          return c(r2, n2);
        e2 = this._serializeKey(e2), typeof t2 == "object" && t2 !== null || (t2 = {}), this._del(e2, t2, r2);
      }, f.prototype._del = function(e2, t2, r2) {
        c(r2);
      }, f.prototype.batch = function(e2, t2, r2) {
        if (!arguments.length)
          return this._chainedBatch();
        if (typeof t2 == "function" && (r2 = t2), typeof e2 == "function" && (r2 = e2), typeof r2 != "function")
          throw new Error("batch(array) requires a callback argument");
        if (!Array.isArray(e2))
          return c(r2, new Error("batch(array) requires an array argument"));
        if (e2.length === 0)
          return c(r2);
        typeof t2 == "object" && t2 !== null || (t2 = {});
        for (var i2 = new Array(e2.length), s2 = 0; s2 < e2.length; s2++) {
          if (typeof e2[s2] != "object" || e2[s2] === null)
            return c(r2, new Error("batch(array) element must be an object and not `null`"));
          var o2 = n(e2[s2]);
          if (o2.type !== "put" && o2.type !== "del")
            return c(r2, new Error("`type` must be 'put' or 'del'"));
          var a2 = this._checkKey(o2.key);
          if (a2)
            return c(r2, a2);
          if (o2.key = this._serializeKey(o2.key), o2.type === "put") {
            var u2 = this._checkValue(o2.value);
            if (u2)
              return c(r2, u2);
            o2.value = this._serializeValue(o2.value);
          }
          i2[s2] = o2;
        }
        this._batch(i2, t2, r2);
      }, f.prototype._batch = function(e2, t2, r2) {
        c(r2);
      }, f.prototype.clear = function(e2, t2) {
        if (typeof e2 == "function")
          t2 = e2;
        else if (typeof t2 != "function")
          throw new Error("clear() requires a callback argument");
        (e2 = d(this, e2)).reverse = !!e2.reverse, e2.limit = "limit" in e2 ? e2.limit : -1, this._clear(e2, t2);
      }, f.prototype._clear = function(e2, t2) {
        e2.keys = true, e2.values = false, e2.keyAsBuffer = true, e2.valueAsBuffer = true;
        var r2 = this._iterator(e2), n2 = {}, i2 = this, s2 = function(e3) {
          if (e3)
            return r2.end(function() {
              t2(e3);
            });
          r2.next(function(e4, o2) {
            return e4 ? s2(e4) : o2 === void 0 ? r2.end(t2) : void i2._del(o2, n2, s2);
          });
        };
        s2();
      }, f.prototype._setupIteratorOptions = function(e2) {
        return (e2 = d(this, e2)).reverse = !!e2.reverse, e2.keys = e2.keys !== false, e2.values = e2.values !== false, e2.limit = "limit" in e2 ? e2.limit : -1, e2.keyAsBuffer = e2.keyAsBuffer !== false, e2.valueAsBuffer = e2.valueAsBuffer !== false, e2;
      }, f.prototype.iterator = function(e2) {
        return typeof e2 == "object" && e2 !== null || (e2 = {}), e2 = this._setupIteratorOptions(e2), this._iterator(e2);
      }, f.prototype._iterator = function(e2) {
        return new o(this);
      }, f.prototype._chainedBatch = function() {
        return new a(this);
      }, f.prototype._serializeKey = function(e2) {
        return e2;
      }, f.prototype._serializeValue = function(e2) {
        return e2;
      }, f.prototype._checkKey = function(e2) {
        return e2 == null ? new Error("key cannot be `null` or `undefined`") : s.isBuffer(e2) && e2.length === 0 ? new Error("key cannot be an empty Buffer") : e2 === "" ? new Error("key cannot be an empty String") : Array.isArray(e2) && e2.length === 0 ? new Error("key cannot be an empty Array") : void 0;
      }, f.prototype._checkValue = function(e2) {
        if (e2 == null)
          return new Error("value cannot be `null` or `undefined`");
      }, f.prototype._nextTick = c, e.exports = f;
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2) {
        for (var t2 = 1; t2 < arguments.length; t2++) {
          var r2 = arguments[t2];
          for (var i in r2)
            n.call(r2, i) && (e2[i] = r2[i]);
        }
        return e2;
      };
      var n = Object.prototype.hasOwnProperty;
    }, function(e, t, r) {
      "use strict";
      (function(e2) {
        t.test = function() {
          return e2 !== void 0 && !e2.browser;
        }, t.install = function(t2) {
          return function() {
            e2.nextTick(t2);
          };
        };
      }).call(this, r(10));
    }, function(e, t, r) {
      "use strict";
      (function(e2) {
        var r2 = e2.MutationObserver || e2.WebKitMutationObserver;
        t.test = function() {
          return r2;
        }, t.install = function(t2) {
          var n = 0, i = new r2(t2), s = e2.document.createTextNode("");
          return i.observe(s, {characterData: true}), function() {
            s.data = n = ++n % 2;
          };
        };
      }).call(this, r(12));
    }, function(e, t, r) {
      "use strict";
      (function(e2) {
        t.test = function() {
          return !e2.setImmediate && e2.MessageChannel !== void 0;
        }, t.install = function(t2) {
          var r2 = new e2.MessageChannel();
          return r2.port1.onmessage = t2, function() {
            r2.port2.postMessage(0);
          };
        };
      }).call(this, r(12));
    }, function(e, t, r) {
      "use strict";
      (function(e2) {
        t.test = function() {
          return "document" in e2 && "onreadystatechange" in e2.document.createElement("script");
        }, t.install = function(t2) {
          return function() {
            var r2 = e2.document.createElement("script");
            return r2.onreadystatechange = function() {
              t2(), r2.onreadystatechange = null, r2.parentNode.removeChild(r2), r2 = null;
            }, e2.document.documentElement.appendChild(r2), t2;
          };
        };
      }).call(this, r(12));
    }, function(e, t, r) {
      "use strict";
      t.test = function() {
        return true;
      }, t.install = function(e2) {
        return function() {
          setTimeout(e2, 0);
        };
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(301).AbstractIterator;
      function i(e2, t2) {
        n.call(this, e2), this._options = t2, this._iterator = null, this._operations = [];
      }
      r(18)(i, n), i.prototype.setDb = function(e2) {
        var t2 = this._iterator = e2.iterator(this._options);
        this._operations.forEach(function(e3) {
          t2[e3.method].apply(t2, e3.args);
        });
      }, i.prototype._operation = function(e2, t2) {
        if (this._iterator)
          return this._iterator[e2].apply(this._iterator, t2);
        this._operations.push({method: e2, args: t2});
      }, "next end".split(" ").forEach(function(e2) {
        i.prototype["_" + e2] = function() {
          this._operation(e2, arguments);
        };
      }), i.prototype.seek = function() {
        this._operation("seek", arguments);
      }, e.exports = i;
    }, function(e, t, r) {
      "use strict";
      var n = r(18), i = r(304).Readable, s = r(71);
      function o(e2, t2) {
        if (!(this instanceof o))
          return new o(e2, t2);
        t2 = t2 || {}, i.call(this, s(t2, {objectMode: true})), this._iterator = e2, this._options = t2, this.on("end", this.destroy.bind(this, null, null));
      }
      e.exports = o, n(o, i), o.prototype._read = function() {
        var e2 = this, t2 = this._options;
        this.destroyed || this._iterator.next(function(r2, n2, i2) {
          if (!e2.destroyed)
            return r2 ? e2.destroy(r2) : void (n2 === void 0 && i2 === void 0 ? e2.push(null) : t2.keys !== false && t2.values === false ? e2.push(n2) : t2.keys === false && t2.values !== false ? e2.push(i2) : e2.push({key: n2, value: i2}));
        });
      }, o.prototype._destroy = function(e2, t2) {
        this._iterator.end(function(r2) {
          t2(e2 || r2);
        });
      };
    }, function(e, t) {
    }, function(e, t, r) {
      "use strict";
      function n(e2, t2) {
        var r2 = Object.keys(e2);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(e2);
          t2 && (n2 = n2.filter(function(t3) {
            return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
          })), r2.push.apply(r2, n2);
        }
        return r2;
      }
      function i(e2, t2, r2) {
        return t2 in e2 ? Object.defineProperty(e2, t2, {value: r2, enumerable: true, configurable: true, writable: true}) : e2[t2] = r2, e2;
      }
      function s(e2, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var n2 = t2[r2];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
        }
      }
      var o = r(3).Buffer, a = r(775).inspect, c = a && a.custom || "inspect";
      e.exports = function() {
        function e2() {
          !function(e3, t3) {
            if (!(e3 instanceof t3))
              throw new TypeError("Cannot call a class as a function");
          }(this, e2), this.head = null, this.tail = null, this.length = 0;
        }
        var t2, r2, u;
        return t2 = e2, (r2 = [{key: "push", value: function(e3) {
          var t3 = {data: e3, next: null};
          this.length > 0 ? this.tail.next = t3 : this.head = t3, this.tail = t3, ++this.length;
        }}, {key: "unshift", value: function(e3) {
          var t3 = {data: e3, next: this.head};
          this.length === 0 && (this.tail = t3), this.head = t3, ++this.length;
        }}, {key: "shift", value: function() {
          if (this.length !== 0) {
            var e3 = this.head.data;
            return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, e3;
          }
        }}, {key: "clear", value: function() {
          this.head = this.tail = null, this.length = 0;
        }}, {key: "join", value: function(e3) {
          if (this.length === 0)
            return "";
          for (var t3 = this.head, r3 = "" + t3.data; t3 = t3.next; )
            r3 += e3 + t3.data;
          return r3;
        }}, {key: "concat", value: function(e3) {
          if (this.length === 0)
            return o.alloc(0);
          for (var t3, r3, n2, i2 = o.allocUnsafe(e3 >>> 0), s2 = this.head, a2 = 0; s2; )
            t3 = s2.data, r3 = i2, n2 = a2, o.prototype.copy.call(t3, r3, n2), a2 += s2.data.length, s2 = s2.next;
          return i2;
        }}, {key: "consume", value: function(e3, t3) {
          var r3;
          return e3 < this.head.data.length ? (r3 = this.head.data.slice(0, e3), this.head.data = this.head.data.slice(e3)) : r3 = e3 === this.head.data.length ? this.shift() : t3 ? this._getString(e3) : this._getBuffer(e3), r3;
        }}, {key: "first", value: function() {
          return this.head.data;
        }}, {key: "_getString", value: function(e3) {
          var t3 = this.head, r3 = 1, n2 = t3.data;
          for (e3 -= n2.length; t3 = t3.next; ) {
            var i2 = t3.data, s2 = e3 > i2.length ? i2.length : e3;
            if (s2 === i2.length ? n2 += i2 : n2 += i2.slice(0, e3), (e3 -= s2) == 0) {
              s2 === i2.length ? (++r3, t3.next ? this.head = t3.next : this.head = this.tail = null) : (this.head = t3, t3.data = i2.slice(s2));
              break;
            }
            ++r3;
          }
          return this.length -= r3, n2;
        }}, {key: "_getBuffer", value: function(e3) {
          var t3 = o.allocUnsafe(e3), r3 = this.head, n2 = 1;
          for (r3.data.copy(t3), e3 -= r3.data.length; r3 = r3.next; ) {
            var i2 = r3.data, s2 = e3 > i2.length ? i2.length : e3;
            if (i2.copy(t3, t3.length - e3, 0, s2), (e3 -= s2) == 0) {
              s2 === i2.length ? (++n2, r3.next ? this.head = r3.next : this.head = this.tail = null) : (this.head = r3, r3.data = i2.slice(s2));
              break;
            }
            ++n2;
          }
          return this.length -= n2, t3;
        }}, {key: c, value: function(e3, t3) {
          return a(this, function(e4) {
            for (var t4 = 1; t4 < arguments.length; t4++) {
              var r3 = arguments[t4] != null ? arguments[t4] : {};
              t4 % 2 ? n(Object(r3), true).forEach(function(t5) {
                i(e4, t5, r3[t5]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(r3)) : n(Object(r3)).forEach(function(t5) {
                Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(r3, t5));
              });
            }
            return e4;
          }({}, t3, {depth: 0, customInspect: false}));
        }}]) && s(t2.prototype, r2), u && s(t2, u), e2;
      }();
    }, function(e, t) {
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        var n;
        function i(e2, t3, r2) {
          return t3 in e2 ? Object.defineProperty(e2, t3, {value: r2, enumerable: true, configurable: true, writable: true}) : e2[t3] = r2, e2;
        }
        var s = r(185), o = Symbol("lastResolve"), a = Symbol("lastReject"), c = Symbol("error"), u = Symbol("ended"), h = Symbol("lastPromise"), f = Symbol("handlePromise"), d = Symbol("stream");
        function l(e2, t3) {
          return {value: e2, done: t3};
        }
        function p(e2) {
          var t3 = e2[o];
          if (t3 !== null) {
            var r2 = e2[d].read();
            r2 !== null && (e2[h] = null, e2[o] = null, e2[a] = null, t3(l(r2, false)));
          }
        }
        function y(e2) {
          t2.nextTick(p, e2);
        }
        var g = Object.getPrototypeOf(function() {
        }), b = Object.setPrototypeOf((i(n = {get stream() {
          return this[d];
        }, next: function() {
          var e2 = this, r2 = this[c];
          if (r2 !== null)
            return Promise.reject(r2);
          if (this[u])
            return Promise.resolve(l(void 0, true));
          if (this[d].destroyed)
            return new Promise(function(r3, n3) {
              t2.nextTick(function() {
                e2[c] ? n3(e2[c]) : r3(l(void 0, true));
              });
            });
          var n2, i2 = this[h];
          if (i2)
            n2 = new Promise(function(e3, t3) {
              return function(r3, n3) {
                e3.then(function() {
                  t3[u] ? r3(l(void 0, true)) : t3[f](r3, n3);
                }, n3);
              };
            }(i2, this));
          else {
            var s2 = this[d].read();
            if (s2 !== null)
              return Promise.resolve(l(s2, false));
            n2 = new Promise(this[f]);
          }
          return this[h] = n2, n2;
        }}, Symbol.asyncIterator, function() {
          return this;
        }), i(n, "return", function() {
          var e2 = this;
          return new Promise(function(t3, r2) {
            e2[d].destroy(null, function(e3) {
              e3 ? r2(e3) : t3(l(void 0, true));
            });
          });
        }), n), g);
        e.exports = function(e2) {
          var t3, r2 = Object.create(b, (i(t3 = {}, d, {value: e2, writable: true}), i(t3, o, {value: null, writable: true}), i(t3, a, {value: null, writable: true}), i(t3, c, {value: null, writable: true}), i(t3, u, {value: e2._readableState.endEmitted, writable: true}), i(t3, f, {value: function(e3, t4) {
            var n2 = r2[d].read();
            n2 ? (r2[h] = null, r2[o] = null, r2[a] = null, e3(l(n2, false))) : (r2[o] = e3, r2[a] = t4);
          }, writable: true}), t3));
          return r2[h] = null, s(e2, function(e3) {
            if (e3 && e3.code !== "ERR_STREAM_PREMATURE_CLOSE") {
              var t4 = r2[a];
              return t4 !== null && (r2[h] = null, r2[o] = null, r2[a] = null, t4(e3)), void (r2[c] = e3);
            }
            var n2 = r2[o];
            n2 !== null && (r2[h] = null, r2[o] = null, r2[a] = null, n2(l(void 0, true))), r2[u] = true;
          }), e2.on("readable", y.bind(null, r2)), r2;
        };
      }).call(this, r(10));
    }, function(e, t, r) {
      "use strict";
      e.exports = function() {
        throw new Error("Readable.from is not available in the browser");
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = i;
      var n = r(310);
      function i(e2) {
        if (!(this instanceof i))
          return new i(e2);
        n.call(this, e2);
      }
      r(18)(i, n), i.prototype._transform = function(e2, t2, r2) {
        r2(null, e2);
      };
    }, function(e, t, r) {
      "use strict";
      var n;
      var i = r(72).codes, s = i.ERR_MISSING_ARGS, o = i.ERR_STREAM_DESTROYED;
      function a(e2) {
        if (e2)
          throw e2;
      }
      function c(e2, t2, i2, s2) {
        s2 = function(e3) {
          var t3 = false;
          return function() {
            t3 || (t3 = true, e3.apply(void 0, arguments));
          };
        }(s2);
        var a2 = false;
        e2.on("close", function() {
          a2 = true;
        }), n === void 0 && (n = r(185)), n(e2, {readable: t2, writable: i2}, function(e3) {
          if (e3)
            return s2(e3);
          a2 = true, s2();
        });
        var c2 = false;
        return function(t3) {
          if (!a2 && !c2)
            return c2 = true, function(e3) {
              return e3.setHeader && typeof e3.abort == "function";
            }(e2) ? e2.abort() : typeof e2.destroy == "function" ? e2.destroy() : void s2(t3 || new o("pipe"));
        };
      }
      function u(e2) {
        e2();
      }
      function h(e2, t2) {
        return e2.pipe(t2);
      }
      function f(e2) {
        return e2.length ? typeof e2[e2.length - 1] != "function" ? a : e2.pop() : a;
      }
      e.exports = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        var n2, i2 = f(t2);
        if (Array.isArray(t2[0]) && (t2 = t2[0]), t2.length < 2)
          throw new s("streams");
        var o2 = t2.map(function(e3, r3) {
          var s2 = r3 < t2.length - 1;
          return c(e3, s2, r3 > 0, function(e4) {
            n2 || (n2 = e4), e4 && o2.forEach(u), s2 || (o2.forEach(u), i2(n2));
          });
        });
        return t2.reduce(h);
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(186).WriteError, i = r(311), s = r(117).getCallback, o = r(117).getOptions;
      function a(e2) {
        this.db = this._levelup = e2, this.batch = e2.db.batch(), this.ops = [], this.length = 0;
      }
      a.prototype.put = function(e2, t2) {
        try {
          this.batch.put(e2, t2);
        } catch (r2) {
          throw new n(r2);
        }
        return this.ops.push({type: "put", key: e2, value: t2}), this.length++, this;
      }, a.prototype.del = function(e2) {
        try {
          this.batch.del(e2);
        } catch (t2) {
          throw new n(t2);
        }
        return this.ops.push({type: "del", key: e2}), this.length++, this;
      }, a.prototype.clear = function() {
        try {
          this.batch.clear();
        } catch (e2) {
          throw new n(e2);
        }
        return this.ops = [], this.length = 0, this;
      }, a.prototype.write = function(e2, t2) {
        var r2, a2 = this._levelup, c = this.ops;
        (t2 = s(e2, t2)) || (r2 = (t2 = i()).promise), e2 = o(e2);
        try {
          this.batch.write(e2, function(e3) {
            if (e3)
              return t2(new n(e3));
            a2.emit("batch", c), t2();
          });
        } catch (u) {
          throw new n(u);
        }
        return r2;
      }, e.exports = a;
    }, function(e, t, r) {
      "use strict";
      var n = e.exports.all = [{errno: -2, code: "ENOENT", description: "no such file or directory"}, {errno: -1, code: "UNKNOWN", description: "unknown error"}, {errno: 0, code: "OK", description: "success"}, {errno: 1, code: "EOF", description: "end of file"}, {errno: 2, code: "EADDRINFO", description: "getaddrinfo error"}, {errno: 3, code: "EACCES", description: "permission denied"}, {errno: 4, code: "EAGAIN", description: "resource temporarily unavailable"}, {errno: 5, code: "EADDRINUSE", description: "address already in use"}, {errno: 6, code: "EADDRNOTAVAIL", description: "address not available"}, {errno: 7, code: "EAFNOSUPPORT", description: "address family not supported"}, {errno: 8, code: "EALREADY", description: "connection already in progress"}, {errno: 9, code: "EBADF", description: "bad file descriptor"}, {errno: 10, code: "EBUSY", description: "resource busy or locked"}, {errno: 11, code: "ECONNABORTED", description: "software caused connection abort"}, {errno: 12, code: "ECONNREFUSED", description: "connection refused"}, {errno: 13, code: "ECONNRESET", description: "connection reset by peer"}, {errno: 14, code: "EDESTADDRREQ", description: "destination address required"}, {errno: 15, code: "EFAULT", description: "bad address in system call argument"}, {errno: 16, code: "EHOSTUNREACH", description: "host is unreachable"}, {errno: 17, code: "EINTR", description: "interrupted system call"}, {errno: 18, code: "EINVAL", description: "invalid argument"}, {errno: 19, code: "EISCONN", description: "socket is already connected"}, {errno: 20, code: "EMFILE", description: "too many open files"}, {errno: 21, code: "EMSGSIZE", description: "message too long"}, {errno: 22, code: "ENETDOWN", description: "network is down"}, {errno: 23, code: "ENETUNREACH", description: "network is unreachable"}, {errno: 24, code: "ENFILE", description: "file table overflow"}, {errno: 25, code: "ENOBUFS", description: "no buffer space available"}, {errno: 26, code: "ENOMEM", description: "not enough memory"}, {errno: 27, code: "ENOTDIR", description: "not a directory"}, {errno: 28, code: "EISDIR", description: "illegal operation on a directory"}, {errno: 29, code: "ENONET", description: "machine is not on the network"}, {errno: 31, code: "ENOTCONN", description: "socket is not connected"}, {errno: 32, code: "ENOTSOCK", description: "socket operation on non-socket"}, {errno: 33, code: "ENOTSUP", description: "operation not supported on socket"}, {errno: 34, code: "ENOENT", description: "no such file or directory"}, {errno: 35, code: "ENOSYS", description: "function not implemented"}, {errno: 36, code: "EPIPE", description: "broken pipe"}, {errno: 37, code: "EPROTO", description: "protocol error"}, {errno: 38, code: "EPROTONOSUPPORT", description: "protocol not supported"}, {errno: 39, code: "EPROTOTYPE", description: "protocol wrong type for socket"}, {errno: 40, code: "ETIMEDOUT", description: "connection timed out"}, {errno: 41, code: "ECHARSET", description: "invalid Unicode character"}, {errno: 42, code: "EAIFAMNOSUPPORT", description: "address family for hostname not supported"}, {errno: 44, code: "EAISERVICE", description: "servname not supported for ai_socktype"}, {errno: 45, code: "EAISOCKTYPE", description: "ai_socktype not supported"}, {errno: 46, code: "ESHUTDOWN", description: "cannot send after transport endpoint shutdown"}, {errno: 47, code: "EEXIST", description: "file already exists"}, {errno: 48, code: "ESRCH", description: "no such process"}, {errno: 49, code: "ENAMETOOLONG", description: "name too long"}, {errno: 50, code: "EPERM", description: "operation not permitted"}, {errno: 51, code: "ELOOP", description: "too many symbolic links encountered"}, {errno: 52, code: "EXDEV", description: "cross-device link not permitted"}, {errno: 53, code: "ENOTEMPTY", description: "directory not empty"}, {errno: 54, code: "ENOSPC", description: "no space left on device"}, {errno: 55, code: "EIO", description: "i/o error"}, {errno: 56, code: "EROFS", description: "read-only file system"}, {errno: 57, code: "ENODEV", description: "no such device"}, {errno: 58, code: "ESPIPE", description: "invalid seek"}, {errno: 59, code: "ECANCELED", description: "operation canceled"}];
      e.exports.errno = {}, e.exports.code = {}, n.forEach(function(t2) {
        e.exports.errno[t2.errno] = t2, e.exports.code[t2.code] = t2;
      }), e.exports.custom = r(782)(e.exports), e.exports.create = e.exports.custom.createError;
    }, function(e, t, r) {
      "use strict";
      var n = r(783);
      function i(e2, t2, r2) {
        t2 && typeof t2 != "string" && (t2 = t2.message || t2.name), n(this, {type: e2, name: e2, cause: typeof t2 != "string" ? t2 : r2, message: t2}, "ewr");
      }
      function s(e2, t2) {
        Error.call(this), Error.captureStackTrace && Error.captureStackTrace(this, this.constructor), i.call(this, "CustomError", e2, t2);
      }
      s.prototype = new Error(), e.exports = function(e2) {
        var t2 = function(t3, r2) {
          return function(e3, t4, r3) {
            var n2 = function(r4, s2) {
              i.call(this, t4, r4, s2), t4 == "FilesystemError" && (this.code = this.cause.code, this.path = this.cause.path, this.errno = this.cause.errno, this.message = (e3.errno[this.cause.errno] ? e3.errno[this.cause.errno].description : this.cause.message) + (this.cause.path ? " [" + this.cause.path + "]" : "")), Error.call(this), Error.captureStackTrace && Error.captureStackTrace(this, n2);
            };
            return n2.prototype = r3 ? new r3() : new s(), n2;
          }(e2, t3, r2);
        };
        return {CustomError: s, FilesystemError: t2("FilesystemError"), createError: t2};
      };
    }, function(e, t, r) {
      "use strict";
      var n;
      n = function() {
        var e2 = typeof Object.defineProperty == "function" ? function(e3, t2, r2) {
          return Object.defineProperty(e3, t2, r2), e3;
        } : function(e3, t2, r2) {
          return e3[t2] = r2.value, e3;
        };
        return function(t2, r2, n2, i) {
          var s;
          if (i = function(e3, t3) {
            var r3 = typeof t3 == "object", n3 = !r3 && typeof t3 == "string", i2 = function(e4) {
              return r3 ? !!t3[e4] : !!n3 && t3.indexOf(e4[0]) > -1;
            };
            return {enumerable: i2("enumerable"), configurable: i2("configurable"), writable: i2("writable"), value: e3};
          }(n2, i), typeof r2 == "object") {
            for (s in r2)
              Object.hasOwnProperty.call(r2, s) && (i.value = r2[s], e2(t2, s, i));
            return t2;
          }
          return e2(t2, r2, i);
        };
      }, e.exports ? e.exports = n() : (void 0).prr = n();
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        var n = r(785);
        function i(e2, t3) {
          if (e2 === t3)
            return 0;
          for (var r2 = e2.length, n2 = t3.length, i2 = 0, s2 = Math.min(r2, n2); i2 < s2; ++i2)
            if (e2[i2] !== t3[i2]) {
              r2 = e2[i2], n2 = t3[i2];
              break;
            }
          return r2 < n2 ? -1 : n2 < r2 ? 1 : 0;
        }
        function s(e2) {
          return t2.Buffer && typeof t2.Buffer.isBuffer == "function" ? t2.Buffer.isBuffer(e2) : !(e2 == null || !e2._isBuffer);
        }
        var o = r(786), a = Object.prototype.hasOwnProperty, c = Array.prototype.slice, u = function() {
        }.name === "foo";
        function h(e2) {
          return Object.prototype.toString.call(e2);
        }
        function f(e2) {
          return !s(e2) && (typeof t2.ArrayBuffer == "function" && (typeof ArrayBuffer.isView == "function" ? ArrayBuffer.isView(e2) : !!e2 && (e2 instanceof DataView || !!(e2.buffer && e2.buffer instanceof ArrayBuffer))));
        }
        var d = e.exports = m, l = /\s*function\s+([^\(\s]*)\s*/;
        function p(e2) {
          if (o.isFunction(e2)) {
            if (u)
              return e2.name;
            var t3 = e2.toString().match(l);
            return t3 && t3[1];
          }
        }
        function y(e2, t3) {
          return typeof e2 == "string" ? e2.length < t3 ? e2 : e2.slice(0, t3) : e2;
        }
        function g(e2) {
          if (u || !o.isFunction(e2))
            return o.inspect(e2);
          var t3 = p(e2);
          return "[Function" + (t3 ? ": " + t3 : "") + "]";
        }
        function b(e2, t3, r2, n2, i2) {
          throw new d.AssertionError({message: r2, actual: e2, expected: t3, operator: n2, stackStartFunction: i2});
        }
        function m(e2, t3) {
          e2 || b(e2, true, t3, "==", d.ok);
        }
        function v(e2, t3, r2, n2) {
          if (e2 === t3)
            return true;
          if (s(e2) && s(t3))
            return i(e2, t3) === 0;
          if (o.isDate(e2) && o.isDate(t3))
            return e2.getTime() === t3.getTime();
          if (o.isRegExp(e2) && o.isRegExp(t3))
            return e2.source === t3.source && e2.global === t3.global && e2.multiline === t3.multiline && e2.lastIndex === t3.lastIndex && e2.ignoreCase === t3.ignoreCase;
          if (e2 !== null && typeof e2 == "object" || t3 !== null && typeof t3 == "object") {
            if (f(e2) && f(t3) && h(e2) === h(t3) && !(e2 instanceof Float32Array || e2 instanceof Float64Array))
              return i(new Uint8Array(e2.buffer), new Uint8Array(t3.buffer)) === 0;
            if (s(e2) !== s(t3))
              return false;
            var a2 = (n2 = n2 || {actual: [], expected: []}).actual.indexOf(e2);
            return a2 !== -1 && a2 === n2.expected.indexOf(t3) || (n2.actual.push(e2), n2.expected.push(t3), function(e3, t4, r3, n3) {
              if (e3 == null || t4 == null)
                return false;
              if (o.isPrimitive(e3) || o.isPrimitive(t4))
                return e3 === t4;
              if (r3 && Object.getPrototypeOf(e3) !== Object.getPrototypeOf(t4))
                return false;
              var i2 = w(e3), s2 = w(t4);
              if (i2 && !s2 || !i2 && s2)
                return false;
              if (i2)
                return e3 = c.call(e3), t4 = c.call(t4), v(e3, t4, r3);
              var a3, u2, h2 = S(e3), f2 = S(t4);
              if (h2.length !== f2.length)
                return false;
              for (h2.sort(), f2.sort(), u2 = h2.length - 1; u2 >= 0; u2--)
                if (h2[u2] !== f2[u2])
                  return false;
              for (u2 = h2.length - 1; u2 >= 0; u2--)
                if (a3 = h2[u2], !v(e3[a3], t4[a3], r3, n3))
                  return false;
              return true;
            }(e2, t3, r2, n2));
          }
          return r2 ? e2 === t3 : e2 == t3;
        }
        function w(e2) {
          return Object.prototype.toString.call(e2) == "[object Arguments]";
        }
        function _(e2, t3) {
          if (!e2 || !t3)
            return false;
          if (Object.prototype.toString.call(t3) == "[object RegExp]")
            return t3.test(e2);
          try {
            if (e2 instanceof t3)
              return true;
          } catch (r2) {
          }
          return !Error.isPrototypeOf(t3) && t3.call({}, e2) === true;
        }
        function E(e2, t3, r2, n2) {
          var i2;
          if (typeof t3 != "function")
            throw new TypeError('"block" argument must be a function');
          typeof r2 == "string" && (n2 = r2, r2 = null), i2 = function(e3) {
            var t4;
            try {
              e3();
            } catch (r3) {
              t4 = r3;
            }
            return t4;
          }(t3), n2 = (r2 && r2.name ? " (" + r2.name + ")." : ".") + (n2 ? " " + n2 : "."), e2 && !i2 && b(i2, r2, "Missing expected exception" + n2);
          var s2 = typeof n2 == "string", a2 = !e2 && i2 && !r2;
          if ((!e2 && o.isError(i2) && s2 && _(i2, r2) || a2) && b(i2, r2, "Got unwanted exception" + n2), e2 && i2 && r2 && !_(i2, r2) || !e2 && i2)
            throw i2;
        }
        d.AssertionError = function(e2) {
          this.name = "AssertionError", this.actual = e2.actual, this.expected = e2.expected, this.operator = e2.operator, e2.message ? (this.message = e2.message, this.generatedMessage = false) : (this.message = function(e3) {
            return y(g(e3.actual), 128) + " " + e3.operator + " " + y(g(e3.expected), 128);
          }(this), this.generatedMessage = true);
          var t3 = e2.stackStartFunction || b;
          if (Error.captureStackTrace)
            Error.captureStackTrace(this, t3);
          else {
            var r2 = new Error();
            if (r2.stack) {
              var n2 = r2.stack, i2 = p(t3), s2 = n2.indexOf("\n" + i2);
              if (s2 >= 0) {
                var o2 = n2.indexOf("\n", s2 + 1);
                n2 = n2.substring(o2 + 1);
              }
              this.stack = n2;
            }
          }
        }, o.inherits(d.AssertionError, Error), d.fail = b, d.ok = m, d.equal = function(e2, t3, r2) {
          e2 != t3 && b(e2, t3, r2, "==", d.equal);
        }, d.notEqual = function(e2, t3, r2) {
          e2 == t3 && b(e2, t3, r2, "!=", d.notEqual);
        }, d.deepEqual = function(e2, t3, r2) {
          v(e2, t3, false) || b(e2, t3, r2, "deepEqual", d.deepEqual);
        }, d.deepStrictEqual = function(e2, t3, r2) {
          v(e2, t3, true) || b(e2, t3, r2, "deepStrictEqual", d.deepStrictEqual);
        }, d.notDeepEqual = function(e2, t3, r2) {
          v(e2, t3, false) && b(e2, t3, r2, "notDeepEqual", d.notDeepEqual);
        }, d.notDeepStrictEqual = function e2(t3, r2, n2) {
          v(t3, r2, true) && b(t3, r2, n2, "notDeepStrictEqual", e2);
        }, d.strictEqual = function(e2, t3, r2) {
          e2 !== t3 && b(e2, t3, r2, "===", d.strictEqual);
        }, d.notStrictEqual = function(e2, t3, r2) {
          e2 === t3 && b(e2, t3, r2, "!==", d.notStrictEqual);
        }, d.throws = function(e2, t3, r2) {
          E(true, e2, t3, r2);
        }, d.doesNotThrow = function(e2, t3, r2) {
          E(false, e2, t3, r2);
        }, d.ifError = function(e2) {
          if (e2)
            throw e2;
        }, d.strict = n(function e2(t3, r2) {
          t3 || b(t3, true, r2, "==", e2);
        }, d, {equal: d.strictEqual, deepEqual: d.deepStrictEqual, notEqual: d.notStrictEqual, notDeepEqual: d.notDeepStrictEqual}), d.strict.strict = d.strict;
        var S = Object.keys || function(e2) {
          var t3 = [];
          for (var r2 in e2)
            a.call(e2, r2) && t3.push(r2);
          return t3;
        };
      }).call(this, r(12));
    }, function(e, t, r) {
      "use strict";
      var n = Object.getOwnPropertySymbols, i = Object.prototype.hasOwnProperty, s = Object.prototype.propertyIsEnumerable;
      function o(e2) {
        if (e2 == null)
          throw new TypeError("Object.assign cannot be called with null or undefined");
        return Object(e2);
      }
      e.exports = function() {
        try {
          if (!Object.assign)
            return false;
          var e2 = new String("abc");
          if (e2[5] = "de", Object.getOwnPropertyNames(e2)[0] === "5")
            return false;
          for (var t2 = {}, r2 = 0; r2 < 10; r2++)
            t2["_" + String.fromCharCode(r2)] = r2;
          if (Object.getOwnPropertyNames(t2).map(function(e3) {
            return t2[e3];
          }).join("") !== "0123456789")
            return false;
          var n2 = {};
          return "abcdefghijklmnopqrst".split("").forEach(function(e3) {
            n2[e3] = e3;
          }), Object.keys(Object.assign({}, n2)).join("") === "abcdefghijklmnopqrst";
        } catch (i2) {
          return false;
        }
      }() ? Object.assign : function(e2, t2) {
        for (var r2, a, c = o(e2), u = 1; u < arguments.length; u++) {
          for (var h in r2 = Object(arguments[u]))
            i.call(r2, h) && (c[h] = r2[h]);
          if (n) {
            a = n(r2);
            for (var f = 0; f < a.length; f++)
              s.call(r2, a[f]) && (c[a[f]] = r2[a[f]]);
          }
        }
        return c;
      };
    }, function(e, t, r) {
      "use strict";
      (function(e2, n) {
        var i = /%[sdj%]/g;
        t.format = function(e3) {
          if (!b(e3)) {
            for (var t2 = [], r2 = 0; r2 < arguments.length; r2++)
              t2.push(a(arguments[r2]));
            return t2.join(" ");
          }
          r2 = 1;
          for (var n2 = arguments, s2 = n2.length, o2 = String(e3).replace(i, function(e4) {
            if (e4 === "%%")
              return "%";
            if (r2 >= s2)
              return e4;
            switch (e4) {
              case "%s":
                return String(n2[r2++]);
              case "%d":
                return Number(n2[r2++]);
              case "%j":
                try {
                  return JSON.stringify(n2[r2++]);
                } catch (t3) {
                  return "[Circular]";
                }
              default:
                return e4;
            }
          }), c2 = n2[r2]; r2 < s2; c2 = n2[++r2])
            y(c2) || !w(c2) ? o2 += " " + c2 : o2 += " " + a(c2);
          return o2;
        }, t.deprecate = function(r2, i2) {
          if (m(e2.process))
            return function() {
              return t.deprecate(r2, i2).apply(this, arguments);
            };
          if (n.noDeprecation === true)
            return r2;
          var s2 = false;
          return function() {
            if (!s2) {
              if (n.throwDeprecation)
                throw new Error(i2);
              n.traceDeprecation ? console.trace(i2) : console.error(i2), s2 = true;
            }
            return r2.apply(this, arguments);
          };
        };
        var s, o = {};
        function a(e3, r2) {
          var n2 = {seen: [], stylize: u};
          return arguments.length >= 3 && (n2.depth = arguments[2]), arguments.length >= 4 && (n2.colors = arguments[3]), p(r2) ? n2.showHidden = r2 : r2 && t._extend(n2, r2), m(n2.showHidden) && (n2.showHidden = false), m(n2.depth) && (n2.depth = 2), m(n2.colors) && (n2.colors = false), m(n2.customInspect) && (n2.customInspect = true), n2.colors && (n2.stylize = c), h(n2, e3, n2.depth);
        }
        function c(e3, t2) {
          var r2 = a.styles[t2];
          return r2 ? "[" + a.colors[r2][0] + "m" + e3 + "[" + a.colors[r2][1] + "m" : e3;
        }
        function u(e3, t2) {
          return e3;
        }
        function h(e3, r2, n2) {
          if (e3.customInspect && r2 && S(r2.inspect) && r2.inspect !== t.inspect && (!r2.constructor || r2.constructor.prototype !== r2)) {
            var i2 = r2.inspect(n2, e3);
            return b(i2) || (i2 = h(e3, i2, n2)), i2;
          }
          var s2 = function(e4, t2) {
            if (m(t2))
              return e4.stylize("undefined", "undefined");
            if (b(t2)) {
              var r3 = "'" + JSON.stringify(t2).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
              return e4.stylize(r3, "string");
            }
            if (g(t2))
              return e4.stylize("" + t2, "number");
            if (p(t2))
              return e4.stylize("" + t2, "boolean");
            if (y(t2))
              return e4.stylize("null", "null");
          }(e3, r2);
          if (s2)
            return s2;
          var o2 = Object.keys(r2), a2 = function(e4) {
            var t2 = {};
            return e4.forEach(function(e5, r3) {
              t2[e5] = true;
            }), t2;
          }(o2);
          if (e3.showHidden && (o2 = Object.getOwnPropertyNames(r2)), E(r2) && (o2.indexOf("message") >= 0 || o2.indexOf("description") >= 0))
            return f(r2);
          if (o2.length === 0) {
            if (S(r2)) {
              var c2 = r2.name ? ": " + r2.name : "";
              return e3.stylize("[Function" + c2 + "]", "special");
            }
            if (v(r2))
              return e3.stylize(RegExp.prototype.toString.call(r2), "regexp");
            if (_(r2))
              return e3.stylize(Date.prototype.toString.call(r2), "date");
            if (E(r2))
              return f(r2);
          }
          var u2, w2 = "", A2 = false, I2 = ["{", "}"];
          (l(r2) && (A2 = true, I2 = ["[", "]"]), S(r2)) && (w2 = " [Function" + (r2.name ? ": " + r2.name : "") + "]");
          return v(r2) && (w2 = " " + RegExp.prototype.toString.call(r2)), _(r2) && (w2 = " " + Date.prototype.toUTCString.call(r2)), E(r2) && (w2 = " " + f(r2)), o2.length !== 0 || A2 && r2.length != 0 ? n2 < 0 ? v(r2) ? e3.stylize(RegExp.prototype.toString.call(r2), "regexp") : e3.stylize("[Object]", "special") : (e3.seen.push(r2), u2 = A2 ? function(e4, t2, r3, n3, i3) {
            for (var s3 = [], o3 = 0, a3 = t2.length; o3 < a3; ++o3)
              T(t2, String(o3)) ? s3.push(d(e4, t2, r3, n3, String(o3), true)) : s3.push("");
            return i3.forEach(function(i4) {
              i4.match(/^\d+$/) || s3.push(d(e4, t2, r3, n3, i4, true));
            }), s3;
          }(e3, r2, n2, a2, o2) : o2.map(function(t2) {
            return d(e3, r2, n2, a2, t2, A2);
          }), e3.seen.pop(), function(e4, t2, r3) {
            if (e4.reduce(function(e5, t3) {
              return t3.indexOf("\n") >= 0 && 0, e5 + t3.replace(/\u001b\[\d\d?m/g, "").length + 1;
            }, 0) > 60)
              return r3[0] + (t2 === "" ? "" : t2 + "\n ") + " " + e4.join(",\n  ") + " " + r3[1];
            return r3[0] + t2 + " " + e4.join(", ") + " " + r3[1];
          }(u2, w2, I2)) : I2[0] + w2 + I2[1];
        }
        function f(e3) {
          return "[" + Error.prototype.toString.call(e3) + "]";
        }
        function d(e3, t2, r2, n2, i2, s2) {
          var o2, a2, c2;
          if ((c2 = Object.getOwnPropertyDescriptor(t2, i2) || {value: t2[i2]}).get ? a2 = c2.set ? e3.stylize("[Getter/Setter]", "special") : e3.stylize("[Getter]", "special") : c2.set && (a2 = e3.stylize("[Setter]", "special")), T(n2, i2) || (o2 = "[" + i2 + "]"), a2 || (e3.seen.indexOf(c2.value) < 0 ? (a2 = y(r2) ? h(e3, c2.value, null) : h(e3, c2.value, r2 - 1)).indexOf("\n") > -1 && (a2 = s2 ? a2.split("\n").map(function(e4) {
            return "  " + e4;
          }).join("\n").substr(2) : "\n" + a2.split("\n").map(function(e4) {
            return "   " + e4;
          }).join("\n")) : a2 = e3.stylize("[Circular]", "special")), m(o2)) {
            if (s2 && i2.match(/^\d+$/))
              return a2;
            (o2 = JSON.stringify("" + i2)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (o2 = o2.substr(1, o2.length - 2), o2 = e3.stylize(o2, "name")) : (o2 = o2.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), o2 = e3.stylize(o2, "string"));
          }
          return o2 + ": " + a2;
        }
        function l(e3) {
          return Array.isArray(e3);
        }
        function p(e3) {
          return typeof e3 == "boolean";
        }
        function y(e3) {
          return e3 === null;
        }
        function g(e3) {
          return typeof e3 == "number";
        }
        function b(e3) {
          return typeof e3 == "string";
        }
        function m(e3) {
          return e3 === void 0;
        }
        function v(e3) {
          return w(e3) && A(e3) === "[object RegExp]";
        }
        function w(e3) {
          return typeof e3 == "object" && e3 !== null;
        }
        function _(e3) {
          return w(e3) && A(e3) === "[object Date]";
        }
        function E(e3) {
          return w(e3) && (A(e3) === "[object Error]" || e3 instanceof Error);
        }
        function S(e3) {
          return typeof e3 == "function";
        }
        function A(e3) {
          return Object.prototype.toString.call(e3);
        }
        function I(e3) {
          return e3 < 10 ? "0" + e3.toString(10) : e3.toString(10);
        }
        t.debuglog = function(e3) {
          if (m(s) && (s = {NODE_ENV: "production"}.NODE_DEBUG || ""), e3 = e3.toUpperCase(), !o[e3])
            if (new RegExp("\\b" + e3 + "\\b", "i").test(s)) {
              var r2 = n.pid;
              o[e3] = function() {
                var n2 = t.format.apply(t, arguments);
                console.error("%s %d: %s", e3, r2, n2);
              };
            } else
              o[e3] = function() {
              };
          return o[e3];
        }, t.inspect = a, a.colors = {bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39]}, a.styles = {special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red"}, t.isArray = l, t.isBoolean = p, t.isNull = y, t.isNullOrUndefined = function(e3) {
          return e3 == null;
        }, t.isNumber = g, t.isString = b, t.isSymbol = function(e3) {
          return typeof e3 == "symbol";
        }, t.isUndefined = m, t.isRegExp = v, t.isObject = w, t.isDate = _, t.isError = E, t.isFunction = S, t.isPrimitive = function(e3) {
          return e3 === null || typeof e3 == "boolean" || typeof e3 == "number" || typeof e3 == "string" || typeof e3 == "symbol" || e3 === void 0;
        }, t.isBuffer = r(787);
        var k = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        function R() {
          var e3 = new Date(), t2 = [I(e3.getHours()), I(e3.getMinutes()), I(e3.getSeconds())].join(":");
          return [e3.getDate(), k[e3.getMonth()], t2].join(" ");
        }
        function T(e3, t2) {
          return Object.prototype.hasOwnProperty.call(e3, t2);
        }
        t.log = function() {
          console.log("%s - %s", R(), t.format.apply(t, arguments));
        }, t.inherits = r(788), t._extend = function(e3, t2) {
          if (!t2 || !w(t2))
            return e3;
          for (var r2 = Object.keys(t2), n2 = r2.length; n2--; )
            e3[r2[n2]] = t2[r2[n2]];
          return e3;
        };
      }).call(this, r(12), r(10));
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2) {
        return e2 && typeof e2 == "object" && typeof e2.copy == "function" && typeof e2.fill == "function" && typeof e2.readUInt8 == "function";
      };
    }, function(e, t, r) {
      "use strict";
      typeof Object.create == "function" ? e.exports = function(e2, t2) {
        e2.super_ = t2, e2.prototype = Object.create(t2.prototype, {constructor: {value: e2, enumerable: false, writable: true, configurable: true}});
      } : e.exports = function(e2, t2) {
        e2.super_ = t2;
        var r2 = function() {
        };
        r2.prototype = t2.prototype, e2.prototype = new r2(), e2.prototype.constructor = e2;
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(187).AbstractLevelDOWN, i = r(187).AbstractChainedBatch, s = r(187).AbstractIterator, o = r(18), a = r(791), c = r(186).EncodingError, u = ["approximateSize", "compactRange"];
      function h(e2, t2) {
        if (!(this instanceof h))
          return new h(e2, t2);
        var r2 = e2.supports || {}, i2 = r2.additionalMethods || {};
        n.call(this, r2), this.supports.encodings = true, this.supports.additionalMethods = {}, u.forEach(function(t3) {
          var r3 = typeof e2[t3] == "function";
          (i2[t3] || r3) && (this.supports.additionalMethods[t3] = true, this[t3] = function(e3, r4, n2, i3) {
            return e3 = this.codec.encodeKey(e3, n2), r4 = this.codec.encodeKey(r4, n2), this.db[t3](e3, r4, n2, i3);
          });
        }, this), (t2 = t2 || {}).keyEncoding === void 0 && (t2.keyEncoding = "utf8"), t2.valueEncoding === void 0 && (t2.valueEncoding = "utf8"), this.db = e2, this.codec = new a(t2);
      }
      function f(e2, t2) {
        s.call(this, e2), this.codec = e2.codec, this.keys = t2.keys, this.values = t2.values, this.opts = this.codec.encodeLtgt(t2), this.it = e2.db.iterator(this.opts);
      }
      function d(e2, t2) {
        i.call(this, e2), this.codec = e2.codec, this.batch = e2.db.batch();
      }
      e.exports = h.default = h, o(h, n), h.prototype.type = "encoding-down", h.prototype._serializeKey = h.prototype._serializeValue = function(e2) {
        return e2;
      }, h.prototype._open = function(e2, t2) {
        this.db.open(e2, t2);
      }, h.prototype._close = function(e2) {
        this.db.close(e2);
      }, h.prototype._put = function(e2, t2, r2, n2) {
        e2 = this.codec.encodeKey(e2, r2), t2 = this.codec.encodeValue(t2, r2), this.db.put(e2, t2, r2, n2);
      }, h.prototype._get = function(e2, t2, r2) {
        var n2 = this;
        e2 = this.codec.encodeKey(e2, t2), t2.asBuffer = this.codec.valueAsBuffer(t2), this.db.get(e2, t2, function(e3, i2) {
          if (e3)
            return r2(e3);
          try {
            i2 = n2.codec.decodeValue(i2, t2);
          } catch (e4) {
            return r2(new c(e4));
          }
          r2(null, i2);
        });
      }, h.prototype._del = function(e2, t2, r2) {
        e2 = this.codec.encodeKey(e2, t2), this.db.del(e2, t2, r2);
      }, h.prototype._chainedBatch = function() {
        return new d(this);
      }, h.prototype._batch = function(e2, t2, r2) {
        e2 = this.codec.encodeBatch(e2, t2), this.db.batch(e2, t2, r2);
      }, h.prototype._iterator = function(e2) {
        return e2.keyAsBuffer = this.codec.keyAsBuffer(e2), e2.valueAsBuffer = this.codec.valueAsBuffer(e2), new f(this, e2);
      }, h.prototype._clear = function(e2, t2) {
        e2 = this.codec.encodeLtgt(e2), this.db.clear(e2, t2);
      }, o(f, s), f.prototype._next = function(e2) {
        var t2 = this;
        this.it.next(function(r2, n2, i2) {
          if (r2)
            return e2(r2);
          try {
            n2 = t2.keys && n2 !== void 0 ? t2.codec.decodeKey(n2, t2.opts) : void 0, i2 = t2.values && i2 !== void 0 ? t2.codec.decodeValue(i2, t2.opts) : void 0;
          } catch (r3) {
            return e2(new c(r3));
          }
          e2(null, n2, i2);
        });
      }, f.prototype._seek = function(e2) {
        e2 = this.codec.encodeKey(e2, this.opts), this.it.seek(e2);
      }, f.prototype._end = function(e2) {
        this.it.end(e2);
      }, o(d, i), d.prototype._put = function(e2, t2) {
        e2 = this.codec.encodeKey(e2), t2 = this.codec.encodeValue(t2), this.batch.put(e2, t2);
      }, d.prototype._del = function(e2) {
        e2 = this.codec.encodeKey(e2), this.batch.del(e2);
      }, d.prototype._clear = function() {
        this.batch.clear();
      }, d.prototype._write = function(e2, t2) {
        this.batch.write(e2, t2);
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(71), i = r(182), s = r(3).Buffer, o = r(312), a = r(313), c = r(188), u = Object.prototype.hasOwnProperty, h = "start end gt gte lt lte".split(" ");
      function f(e2) {
        this.status = "new", this.supports = i(e2, {status: true});
      }
      function d(e2, t2) {
        var r2 = {};
        for (var n2 in t2)
          if (u.call(t2, n2)) {
            var i2 = t2[n2];
            l(n2) && (i2 = e2._serializeKey(i2)), r2[n2] = i2;
          }
        return r2;
      }
      function l(e2) {
        return h.indexOf(e2) !== -1;
      }
      f.prototype.open = function(e2, t2) {
        var r2 = this, n2 = this.status;
        if (typeof e2 == "function" && (t2 = e2), typeof t2 != "function")
          throw new Error("open() requires a callback argument");
        typeof e2 == "object" && e2 !== null || (e2 = {}), e2.createIfMissing = e2.createIfMissing !== false, e2.errorIfExists = !!e2.errorIfExists, this.status = "opening", this._open(e2, function(e3) {
          if (e3)
            return r2.status = n2, t2(e3);
          r2.status = "open", t2();
        });
      }, f.prototype._open = function(e2, t2) {
        c(t2);
      }, f.prototype.close = function(e2) {
        var t2 = this, r2 = this.status;
        if (typeof e2 != "function")
          throw new Error("close() requires a callback argument");
        this.status = "closing", this._close(function(n2) {
          if (n2)
            return t2.status = r2, e2(n2);
          t2.status = "closed", e2();
        });
      }, f.prototype._close = function(e2) {
        c(e2);
      }, f.prototype.get = function(e2, t2, r2) {
        if (typeof t2 == "function" && (r2 = t2), typeof r2 != "function")
          throw new Error("get() requires a callback argument");
        var n2 = this._checkKey(e2);
        if (n2)
          return c(r2, n2);
        e2 = this._serializeKey(e2), typeof t2 == "object" && t2 !== null || (t2 = {}), t2.asBuffer = t2.asBuffer !== false, this._get(e2, t2, r2);
      }, f.prototype._get = function(e2, t2, r2) {
        c(function() {
          r2(new Error("NotFound"));
        });
      }, f.prototype.put = function(e2, t2, r2, n2) {
        if (typeof r2 == "function" && (n2 = r2), typeof n2 != "function")
          throw new Error("put() requires a callback argument");
        var i2 = this._checkKey(e2) || this._checkValue(t2);
        if (i2)
          return c(n2, i2);
        e2 = this._serializeKey(e2), t2 = this._serializeValue(t2), typeof r2 == "object" && r2 !== null || (r2 = {}), this._put(e2, t2, r2, n2);
      }, f.prototype._put = function(e2, t2, r2, n2) {
        c(n2);
      }, f.prototype.del = function(e2, t2, r2) {
        if (typeof t2 == "function" && (r2 = t2), typeof r2 != "function")
          throw new Error("del() requires a callback argument");
        var n2 = this._checkKey(e2);
        if (n2)
          return c(r2, n2);
        e2 = this._serializeKey(e2), typeof t2 == "object" && t2 !== null || (t2 = {}), this._del(e2, t2, r2);
      }, f.prototype._del = function(e2, t2, r2) {
        c(r2);
      }, f.prototype.batch = function(e2, t2, r2) {
        if (!arguments.length)
          return this._chainedBatch();
        if (typeof t2 == "function" && (r2 = t2), typeof e2 == "function" && (r2 = e2), typeof r2 != "function")
          throw new Error("batch(array) requires a callback argument");
        if (!Array.isArray(e2))
          return c(r2, new Error("batch(array) requires an array argument"));
        if (e2.length === 0)
          return c(r2);
        typeof t2 == "object" && t2 !== null || (t2 = {});
        for (var i2 = new Array(e2.length), s2 = 0; s2 < e2.length; s2++) {
          if (typeof e2[s2] != "object" || e2[s2] === null)
            return c(r2, new Error("batch(array) element must be an object and not `null`"));
          var o2 = n(e2[s2]);
          if (o2.type !== "put" && o2.type !== "del")
            return c(r2, new Error("`type` must be 'put' or 'del'"));
          var a2 = this._checkKey(o2.key);
          if (a2)
            return c(r2, a2);
          if (o2.key = this._serializeKey(o2.key), o2.type === "put") {
            var u2 = this._checkValue(o2.value);
            if (u2)
              return c(r2, u2);
            o2.value = this._serializeValue(o2.value);
          }
          i2[s2] = o2;
        }
        this._batch(i2, t2, r2);
      }, f.prototype._batch = function(e2, t2, r2) {
        c(r2);
      }, f.prototype.clear = function(e2, t2) {
        if (typeof e2 == "function")
          t2 = e2;
        else if (typeof t2 != "function")
          throw new Error("clear() requires a callback argument");
        (e2 = d(this, e2)).reverse = !!e2.reverse, e2.limit = "limit" in e2 ? e2.limit : -1, this._clear(e2, t2);
      }, f.prototype._clear = function(e2, t2) {
        e2.keys = true, e2.values = false, e2.keyAsBuffer = true, e2.valueAsBuffer = true;
        var r2 = this._iterator(e2), n2 = {}, i2 = this, s2 = function(e3) {
          if (e3)
            return r2.end(function() {
              t2(e3);
            });
          r2.next(function(e4, o2) {
            return e4 ? s2(e4) : o2 === void 0 ? r2.end(t2) : void i2._del(o2, n2, s2);
          });
        };
        s2();
      }, f.prototype._setupIteratorOptions = function(e2) {
        return (e2 = d(this, e2)).reverse = !!e2.reverse, e2.keys = e2.keys !== false, e2.values = e2.values !== false, e2.limit = "limit" in e2 ? e2.limit : -1, e2.keyAsBuffer = e2.keyAsBuffer !== false, e2.valueAsBuffer = e2.valueAsBuffer !== false, e2;
      }, f.prototype.iterator = function(e2) {
        return typeof e2 == "object" && e2 !== null || (e2 = {}), e2 = this._setupIteratorOptions(e2), this._iterator(e2);
      }, f.prototype._iterator = function(e2) {
        return new o(this);
      }, f.prototype._chainedBatch = function() {
        return new a(this);
      }, f.prototype._serializeKey = function(e2) {
        return e2;
      }, f.prototype._serializeValue = function(e2) {
        return e2;
      }, f.prototype._checkKey = function(e2) {
        return e2 == null ? new Error("key cannot be `null` or `undefined`") : s.isBuffer(e2) && e2.length === 0 ? new Error("key cannot be an empty Buffer") : e2 === "" ? new Error("key cannot be an empty String") : Array.isArray(e2) && e2.length === 0 ? new Error("key cannot be an empty Array") : void 0;
      }, f.prototype._checkValue = function(e2) {
        if (e2 == null)
          return new Error("value cannot be `null` or `undefined`");
      }, f.prototype._nextTick = c, e.exports = f;
    }, function(e, t, r) {
      "use strict";
      var n = r(792);
      function i(e2) {
        if (!(this instanceof i))
          return new i(e2);
        this.opts = e2 || {}, this.encodings = n;
      }
      e.exports = i, i.prototype._encoding = function(e2) {
        return typeof e2 == "string" && (e2 = n[e2]), e2 || (e2 = n.id), e2;
      }, i.prototype._keyEncoding = function(e2, t2) {
        return this._encoding(t2 && t2.keyEncoding || e2 && e2.keyEncoding || this.opts.keyEncoding);
      }, i.prototype._valueEncoding = function(e2, t2) {
        return this._encoding(t2 && (t2.valueEncoding || t2.encoding) || e2 && (e2.valueEncoding || e2.encoding) || this.opts.valueEncoding || this.opts.encoding);
      }, i.prototype.encodeKey = function(e2, t2, r2) {
        return this._keyEncoding(t2, r2).encode(e2);
      }, i.prototype.encodeValue = function(e2, t2, r2) {
        return this._valueEncoding(t2, r2).encode(e2);
      }, i.prototype.decodeKey = function(e2, t2) {
        return this._keyEncoding(t2).decode(e2);
      }, i.prototype.decodeValue = function(e2, t2) {
        return this._valueEncoding(t2).decode(e2);
      }, i.prototype.encodeBatch = function(e2, t2) {
        var r2 = this;
        return e2.map(function(e3) {
          var n2 = {type: e3.type, key: r2.encodeKey(e3.key, t2, e3)};
          return r2.keyAsBuffer(t2, e3) && (n2.keyEncoding = "binary"), e3.prefix && (n2.prefix = e3.prefix), "value" in e3 && (n2.value = r2.encodeValue(e3.value, t2, e3), r2.valueAsBuffer(t2, e3) && (n2.valueEncoding = "binary")), n2;
        });
      };
      var s = ["lt", "gt", "lte", "gte", "start", "end"];
      i.prototype.encodeLtgt = function(e2) {
        var t2 = this, r2 = {};
        return Object.keys(e2).forEach(function(n2) {
          r2[n2] = s.indexOf(n2) > -1 ? t2.encodeKey(e2[n2], e2) : e2[n2];
        }), r2;
      }, i.prototype.createStreamDecoder = function(e2) {
        var t2 = this;
        return e2.keys && e2.values ? function(r2, n2) {
          return {key: t2.decodeKey(r2, e2), value: t2.decodeValue(n2, e2)};
        } : e2.keys ? function(r2) {
          return t2.decodeKey(r2, e2);
        } : e2.values ? function(r2, n2) {
          return t2.decodeValue(n2, e2);
        } : function() {
        };
      }, i.prototype.keyAsBuffer = function(e2) {
        return this._keyEncoding(e2).buffer;
      }, i.prototype.valueAsBuffer = function(e2) {
        return this._valueEncoding(e2).buffer;
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(3).Buffer;
      t.utf8 = t["utf-8"] = {encode: function(e2) {
        return s(e2) ? e2 : String(e2);
      }, decode: i, buffer: false, type: "utf8"}, t.json = {encode: JSON.stringify, decode: JSON.parse, buffer: false, type: "json"}, t.binary = {encode: function(e2) {
        return s(e2) ? e2 : n.from(e2);
      }, decode: i, buffer: true, type: "binary"}, t.none = {encode: i, decode: i, buffer: false, type: "id"}, t.id = t.none;
      function i(e2) {
        return e2;
      }
      function s(e2) {
        return e2 == null || n.isBuffer(e2);
      }
      ["hex", "ascii", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le"].forEach(function(e2) {
        t[e2] = {encode: function(t2) {
          return s(t2) ? t2 : n.from(t2, e2);
        }, decode: function(t2) {
          return t2.toString(e2);
        }, buffer: true, type: e2};
      });
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        e.exports = u;
        var n = r(314).AbstractLevelDOWN, i = r(18), s = r(795), o = r(317), a = r(318), c = r(799);
        function u(e2, t3) {
          if (!(this instanceof u))
            return new u(e2, t3);
          if (n.call(this), t3 = t3 || {}, typeof e2 != "string")
            throw new Error("constructor requires a location string argument");
          this.location = e2, this.prefix = t3.prefix == null ? "level-js-" : t3.prefix, this.version = parseInt(t3.version || 1, 10);
        }
        i(u, n), u.binaryKeys = c.binaryKeys(indexedDB), u.arrayKeys = c.arrayKeys(indexedDB), u.prototype._open = function(e2, t3) {
          var r2 = indexedDB.open(this.prefix + this.location, this.version), n2 = this;
          r2.onerror = function() {
            t3(r2.error || new Error("unknown error"));
          }, r2.onsuccess = function() {
            n2.db = r2.result, t3();
          }, r2.onupgradeneeded = function(e3) {
            var t4 = e3.target.result;
            t4.objectStoreNames.contains(n2.location) || t4.createObjectStore(n2.location);
          };
        }, u.prototype.store = function(e2) {
          return this.db.transaction([this.location], e2).objectStore(this.location);
        }, u.prototype.await = function(e2, t3) {
          var r2 = e2.transaction;
          r2.onabort = function() {
            t3(r2.error || new Error("aborted by user"));
          }, r2.oncomplete = function() {
            t3(null, e2.result);
          };
        }, u.prototype._get = function(e2, t3, r2) {
          var n2 = this.store("readonly");
          try {
            var i2 = n2.get(e2);
          } catch (s2) {
            return a(function() {
              r2(s2);
            });
          }
          this.await(i2, function(e3, n3) {
            return e3 ? r2(e3) : n3 === void 0 ? r2(new Error("NotFound")) : (t3.asBuffer && (n3 = o(n3)), void r2(null, n3));
          });
        }, u.prototype._del = function(e2, t3, r2) {
          var n2 = this.store("readwrite");
          try {
            var i2 = n2.delete(e2);
          } catch (s2) {
            return a(function() {
              r2(s2);
            });
          }
          this.await(i2, r2);
        }, u.prototype._put = function(e2, t3, r2, n2) {
          var i2 = this.store("readwrite");
          try {
            var s2 = i2.put(t3, e2);
          } catch (o2) {
            return a(function() {
              n2(o2);
            });
          }
          this.await(s2, n2);
        }, u.prototype._serializeKey = function(e2) {
          return t2.isBuffer(e2) ? u.binaryKeys ? e2 : e2.toString() : Array.isArray(e2) ? u.arrayKeys ? e2.map(this._serializeKey, this) : String(e2) : e2;
        }, u.prototype._serializeValue = function(e2) {
          return e2;
        }, u.prototype._iterator = function(e2) {
          return new s(this, this.location, e2);
        }, u.prototype._batch = function(e2, t3, r2) {
          if (e2.length === 0)
            return a(r2);
          var n2, i2 = this.store("readwrite"), s2 = i2.transaction, o2 = 0;
          s2.onabort = function() {
            r2(n2 || s2.error || new Error("aborted by user"));
          }, s2.oncomplete = function() {
            r2();
          }, function t4() {
            var r3 = e2[o2++], a2 = r3.key;
            try {
              var c2 = r3.type === "del" ? i2.delete(a2) : i2.put(r3.value, a2);
            } catch (u2) {
              return n2 = u2, void s2.abort();
            }
            o2 < e2.length && (c2.onsuccess = t4);
          }();
        }, u.prototype._close = function(e2) {
          this.db.close(), a(e2);
        }, u.destroy = function(e2, t3, r2) {
          typeof t3 == "function" && (r2 = t3, t3 = "level-js-");
          var n2 = indexedDB.deleteDatabase(t3 + e2);
          n2.onsuccess = function() {
            r2();
          }, n2.onerror = function(e3) {
            r2(e3);
          };
        };
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      (function(t2, n) {
        var i = r(71), s = r(315), o = r(316), a = Object.prototype.hasOwnProperty, c = "start end gt gte lt lte".split(" ");
        function u() {
          this.status = "new";
        }
        function h(e2) {
          return c.indexOf(e2) !== -1;
        }
        u.prototype.open = function(e2, t3) {
          var r2 = this, n2 = this.status;
          if (typeof e2 == "function" && (t3 = e2), typeof t3 != "function")
            throw new Error("open() requires a callback argument");
          typeof e2 == "object" && e2 !== null || (e2 = {}), e2.createIfMissing = e2.createIfMissing !== false, e2.errorIfExists = !!e2.errorIfExists, this.status = "opening", this._open(e2, function(e3) {
            if (e3)
              return r2.status = n2, t3(e3);
            r2.status = "open", t3();
          });
        }, u.prototype._open = function(e2, r2) {
          t2.nextTick(r2);
        }, u.prototype.close = function(e2) {
          var t3 = this, r2 = this.status;
          if (typeof e2 != "function")
            throw new Error("close() requires a callback argument");
          this.status = "closing", this._close(function(n2) {
            if (n2)
              return t3.status = r2, e2(n2);
            t3.status = "closed", e2();
          });
        }, u.prototype._close = function(e2) {
          t2.nextTick(e2);
        }, u.prototype.get = function(e2, r2, n2) {
          if (typeof r2 == "function" && (n2 = r2), typeof n2 != "function")
            throw new Error("get() requires a callback argument");
          var i2 = this._checkKey(e2);
          if (i2)
            return t2.nextTick(n2, i2);
          e2 = this._serializeKey(e2), typeof r2 == "object" && r2 !== null || (r2 = {}), r2.asBuffer = r2.asBuffer !== false, this._get(e2, r2, n2);
        }, u.prototype._get = function(e2, r2, n2) {
          t2.nextTick(function() {
            n2(new Error("NotFound"));
          });
        }, u.prototype.put = function(e2, r2, n2, i2) {
          if (typeof n2 == "function" && (i2 = n2), typeof i2 != "function")
            throw new Error("put() requires a callback argument");
          var s2 = this._checkKey(e2) || this._checkValue(r2);
          if (s2)
            return t2.nextTick(i2, s2);
          e2 = this._serializeKey(e2), r2 = this._serializeValue(r2), typeof n2 == "object" && n2 !== null || (n2 = {}), this._put(e2, r2, n2, i2);
        }, u.prototype._put = function(e2, r2, n2, i2) {
          t2.nextTick(i2);
        }, u.prototype.del = function(e2, r2, n2) {
          if (typeof r2 == "function" && (n2 = r2), typeof n2 != "function")
            throw new Error("del() requires a callback argument");
          var i2 = this._checkKey(e2);
          if (i2)
            return t2.nextTick(n2, i2);
          e2 = this._serializeKey(e2), typeof r2 == "object" && r2 !== null || (r2 = {}), this._del(e2, r2, n2);
        }, u.prototype._del = function(e2, r2, n2) {
          t2.nextTick(n2);
        }, u.prototype.batch = function(e2, r2, n2) {
          if (!arguments.length)
            return this._chainedBatch();
          if (typeof r2 == "function" && (n2 = r2), typeof e2 == "function" && (n2 = e2), typeof n2 != "function")
            throw new Error("batch(array) requires a callback argument");
          if (!Array.isArray(e2))
            return t2.nextTick(n2, new Error("batch(array) requires an array argument"));
          if (e2.length === 0)
            return t2.nextTick(n2);
          typeof r2 == "object" && r2 !== null || (r2 = {});
          for (var s2 = new Array(e2.length), o2 = 0; o2 < e2.length; o2++) {
            if (typeof e2[o2] != "object" || e2[o2] === null)
              return t2.nextTick(n2, new Error("batch(array) element must be an object and not `null`"));
            var a2 = i(e2[o2]);
            if (a2.type !== "put" && a2.type !== "del")
              return t2.nextTick(n2, new Error("`type` must be 'put' or 'del'"));
            var c2 = this._checkKey(a2.key);
            if (c2)
              return t2.nextTick(n2, c2);
            if (a2.key = this._serializeKey(a2.key), a2.type === "put") {
              var u2 = this._checkValue(a2.value);
              if (u2)
                return t2.nextTick(n2, u2);
              a2.value = this._serializeValue(a2.value);
            }
            s2[o2] = a2;
          }
          this._batch(s2, r2, n2);
        }, u.prototype._batch = function(e2, r2, n2) {
          t2.nextTick(n2);
        }, u.prototype._setupIteratorOptions = function(e2) {
          return (e2 = function(e3, t3) {
            var r2 = {};
            for (var n2 in t3)
              if (a.call(t3, n2)) {
                var i2 = t3[n2];
                h(n2) && (i2 = e3._serializeKey(i2)), r2[n2] = i2;
              }
            return r2;
          }(this, e2)).reverse = !!e2.reverse, e2.keys = e2.keys !== false, e2.values = e2.values !== false, e2.limit = "limit" in e2 ? e2.limit : -1, e2.keyAsBuffer = e2.keyAsBuffer !== false, e2.valueAsBuffer = e2.valueAsBuffer !== false, e2;
        }, u.prototype.iterator = function(e2) {
          return typeof e2 == "object" && e2 !== null || (e2 = {}), e2 = this._setupIteratorOptions(e2), this._iterator(e2);
        }, u.prototype._iterator = function(e2) {
          return new s(this);
        }, u.prototype._chainedBatch = function() {
          return new o(this);
        }, u.prototype._serializeKey = function(e2) {
          return e2;
        }, u.prototype._serializeValue = function(e2) {
          return e2;
        }, u.prototype._checkKey = function(e2) {
          return e2 == null ? new Error("key cannot be `null` or `undefined`") : n.isBuffer(e2) && e2.length === 0 ? new Error("key cannot be an empty Buffer") : e2 === "" ? new Error("key cannot be an empty String") : Array.isArray(e2) && e2.length === 0 ? new Error("key cannot be an empty Array") : void 0;
        }, u.prototype._checkValue = function(e2) {
          if (e2 == null)
            return new Error("value cannot be `null` or `undefined`");
        }, e.exports = u;
      }).call(this, r(10), r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      var n = r(18), i = r(314).AbstractIterator, s = r(796), o = r(317), a = r(318), c = function() {
      };
      function u(e2, t2, r2) {
        if (i.call(this, e2), this._limit = r2.limit, this._count = 0, this._callback = null, this._cache = [], this._completed = false, this._aborted = false, this._error = null, this._transaction = null, this._keyAsBuffer = r2.keyAsBuffer, this._valueAsBuffer = r2.valueAsBuffer, this._limit !== 0) {
          try {
            var n2 = this.createKeyRange(r2);
          } catch (s2) {
            return void (this._completed = true);
          }
          this.createIterator(t2, n2, r2.reverse);
        } else
          this._completed = true;
      }
      e.exports = u, n(u, i), u.prototype.createKeyRange = function(e2) {
        var t2 = s.lowerBound(e2), r2 = s.upperBound(e2), n2 = s.lowerBoundExclusive(e2), i2 = s.upperBoundExclusive(e2);
        return t2 !== void 0 && r2 !== void 0 ? IDBKeyRange.bound(t2, r2, n2, i2) : t2 !== void 0 ? IDBKeyRange.lowerBound(t2, n2) : r2 !== void 0 ? IDBKeyRange.upperBound(r2, i2) : null;
      }, u.prototype.createIterator = function(e2, t2, r2) {
        var n2 = this, i2 = this.db.db.transaction([e2], "readonly");
        i2.objectStore(e2).openCursor(t2, r2 ? "prev" : "next").onsuccess = function(e3) {
          var t3 = e3.target.result;
          t3 && n2.onItem(t3);
        }, this._transaction = i2, i2.onabort = function() {
          n2.onAbort(n2._transaction.error || new Error("aborted by user"));
        }, i2.oncomplete = function() {
          n2.onComplete();
        };
      }, u.prototype.onItem = function(e2) {
        this._cache.push(e2.key, e2.value), (this._limit <= 0 || ++this._count < this._limit) && e2.continue(), this.maybeNext();
      }, u.prototype.onAbort = function(e2) {
        this._aborted = true, this._error = e2, this.maybeNext();
      }, u.prototype.onComplete = function() {
        this._completed = true, this.maybeNext();
      }, u.prototype.maybeNext = function() {
        this._callback && (this._next(this._callback), this._callback = null);
      }, u.prototype._next = function(e2) {
        if (this._aborted) {
          var t2 = this._error;
          this._error = null, a(function() {
            e2(t2);
          });
        } else if (this._cache.length > 0) {
          var r2 = this._cache.shift(), n2 = this._cache.shift();
          this._keyAsBuffer && (r2 = o(r2)), this._valueAsBuffer && (n2 = o(n2)), a(function() {
            e2(null, r2, n2);
          });
        } else
          this._completed ? a(e2) : this._callback = e2;
      }, u.prototype._end = function(e2) {
        if (this._aborted || this._completed) {
          var t2 = this._error;
          a(function() {
            e2(t2);
          });
        } else
          this.onItem = c, this.onAbort = e2, this.onComplete = e2;
      };
    }, function(e, t, r) {
      "use strict";
      (function(e2) {
        function r2(e3) {
          return e3 !== void 0 && e3 !== "";
        }
        function n(e3, t2) {
          return Object.hasOwnProperty.call(e3, t2);
        }
        function i(e3, t2) {
          return Object.hasOwnProperty.call(e3, t2) && t2;
        }
        t.compare = function(t2, r3) {
          if (e2.isBuffer(t2)) {
            for (var n2 = Math.min(t2.length, r3.length), i2 = 0; i2 < n2; i2++) {
              var s2 = t2[i2] - r3[i2];
              if (s2)
                return s2;
            }
            return t2.length - r3.length;
          }
          return t2 < r3 ? -1 : t2 > r3 ? 1 : 0;
        };
        var s = t.lowerBoundKey = function(e3) {
          return i(e3, "gt") || i(e3, "gte") || i(e3, "min") || (e3.reverse ? i(e3, "end") : i(e3, "start")) || void 0;
        }, o = t.lowerBound = function(e3, t2) {
          var r3 = s(e3);
          return r3 ? e3[r3] : t2;
        }, a = t.lowerBoundInclusive = function(e3) {
          return !n(e3, "gt");
        }, c = t.upperBoundInclusive = function(e3) {
          return !n(e3, "lt");
        }, u = t.lowerBoundExclusive = function(e3) {
          return !a(e3);
        }, h = t.upperBoundExclusive = function(e3) {
          return !c(e3);
        }, f = t.upperBoundKey = function(e3) {
          return i(e3, "lt") || i(e3, "lte") || i(e3, "max") || (e3.reverse ? i(e3, "start") : i(e3, "end")) || void 0;
        }, d = t.upperBound = function(e3, t2) {
          var r3 = f(e3);
          return r3 ? e3[r3] : t2;
        };
        function l(e3) {
          return e3;
        }
        t.start = function(e3, t2) {
          return e3.reverse ? d(e3, t2) : o(e3, t2);
        }, t.end = function(e3, t2) {
          return e3.reverse ? o(e3, t2) : d(e3, t2);
        }, t.startInclusive = function(e3) {
          return e3.reverse ? c(e3) : a(e3);
        }, t.endInclusive = function(e3) {
          return e3.reverse ? a(e3) : c(e3);
        }, t.toLtgt = function(e3, r3, i2, s2, o2) {
          r3 = r3 || {}, i2 = i2 || l;
          var a2 = arguments.length > 3, c2 = t.lowerBoundKey(e3), u2 = t.upperBoundKey(e3);
          return c2 ? c2 === "gt" ? r3.gt = i2(e3.gt, false) : r3.gte = i2(e3[c2], false) : a2 && (r3.gte = i2(s2, false)), u2 ? u2 === "lt" ? r3.lt = i2(e3.lt, true) : r3.lte = i2(e3[u2], true) : a2 && (r3.lte = i2(o2, true)), e3.reverse != null && (r3.reverse = !!e3.reverse), n(r3, "max") && delete r3.max, n(r3, "min") && delete r3.min, n(r3, "start") && delete r3.start, n(r3, "end") && delete r3.end, r3;
        }, t.contains = function(e3, n2, i2) {
          i2 = i2 || t.compare;
          var s2 = o(e3);
          if (r2(s2) && ((a2 = i2(n2, s2)) < 0 || a2 === 0 && u(e3)))
            return false;
          var a2, c2 = d(e3);
          if (r2(c2) && ((a2 = i2(n2, c2)) > 0 || a2 === 0 && h(e3)))
            return false;
          return true;
        }, t.filter = function(e3, r3) {
          return function(n2) {
            return t.contains(e3, n2, r3);
          };
        };
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        var n = r(798).strict;
        e.exports = function(e2) {
          if (n(e2)) {
            var r2 = t2.from(e2.buffer);
            return e2.byteLength !== e2.buffer.byteLength && (r2 = r2.slice(e2.byteOffset, e2.byteOffset + e2.byteLength)), r2;
          }
          return t2.from(e2);
        };
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      e.exports = s, s.strict = o, s.loose = a;
      var n = Object.prototype.toString, i = {"[object Int8Array]": true, "[object Int16Array]": true, "[object Int32Array]": true, "[object Uint8Array]": true, "[object Uint8ClampedArray]": true, "[object Uint16Array]": true, "[object Uint32Array]": true, "[object Float32Array]": true, "[object Float64Array]": true};
      function s(e2) {
        return o(e2) || a(e2);
      }
      function o(e2) {
        return e2 instanceof Int8Array || e2 instanceof Int16Array || e2 instanceof Int32Array || e2 instanceof Uint8Array || e2 instanceof Uint8ClampedArray || e2 instanceof Uint16Array || e2 instanceof Uint32Array || e2 instanceof Float32Array || e2 instanceof Float64Array;
      }
      function a(e2) {
        return i[n.call(e2)];
      }
    }, function(e, t, r) {
      "use strict";
      t.test = function(e2) {
        return function(t2) {
          try {
            return t2.cmp(e2, 0), true;
          } catch (r2) {
            return false;
          }
        };
      }, t.binaryKeys = t.test(new Uint8Array(0)), t.arrayKeys = t.test([1]);
    }, function(e, t, r) {
      "use strict";
      e.exports = {Spec: {type: "mount", mounts: [{mountpoint: "/blocks", type: "measure", prefix: "flatfs.datastore", child: {type: "flatfs", path: "blocks", sync: true, shardFunc: "/repo/flatfs/shard/v1/next-to-last/2"}}, {mountpoint: "/", type: "measure", prefix: "leveldb.datastore", child: {type: "levelds", path: "datastore", compression: "none"}}]}};
    }, function(e, t, r) {
      "use strict";
      const n = r(802), i = r(295), s = r(278);
      e.exports = class {
        constructor({repo: e2, network: t2}) {
          this.repo = i({repo: e2}), this.bw = n({network: t2}), this.bitswap = s({network: t2});
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(29).default, i = r(150).default, s = r(0), o = r(2);
      function a(e2, t2) {
        let r2;
        if (r2 = t2.peer ? e2.metrics.forPeer(t2.peer) : t2.proto ? e2.metrics.forProtocol(t2.proto) : e2.metrics.global, !r2)
          return {totalIn: new n(0), totalOut: new n(0), rateIn: new n(0), rateOut: new n(0)};
        const {movingAverages: i2, snapshot: s2} = r2;
        return {totalIn: s2.dataReceived, totalOut: s2.dataSent, rateIn: new n(i2.dataReceived[6e4].movingAverage() / 60), rateOut: new n(i2.dataSent[6e4].movingAverage() / 60)};
      }
      e.exports = ({network: e2}) => o(async function* (t2 = {}) {
        const {libp2p: r2} = await e2.use(t2);
        if (!t2.poll)
          return void (yield a(r2, t2));
        const n2 = t2.interval || 1e3;
        let o2, c = -1;
        try {
          if (c = typeof n2 == "string" ? i(n2) || -1 : n2, !c || c < 0)
            throw new Error("invalid duration");
        } catch (u) {
          throw s(u, "ERR_INVALID_POLL_INTERVAL");
        }
        try {
          for (; ; )
            yield a(r2, t2), await new Promise((e3) => {
              o2 = setTimeout(e3, c);
            });
        } finally {
          clearTimeout(o2);
        }
      });
    }, function(e, t, r) {
      "use strict";
      const {map: n} = r(55), i = r(0);
      e.exports = class {
        constructor(e2) {
          this._repo = e2, this._bitswap = null;
        }
        setExchange(e2) {
          this._bitswap = e2;
        }
        unsetExchange() {
          this._bitswap = null;
        }
        hasExchange() {
          return this._bitswap != null;
        }
        put(e2, t2) {
          return this.hasExchange() ? this._bitswap.put(e2, t2) : this._repo.blocks.put(e2, t2);
        }
        putMany(e2, t2) {
          return this.hasExchange() ? this._bitswap.putMany(e2, t2) : this._repo.blocks.putMany(e2, t2);
        }
        get(e2, t2) {
          return this.hasExchange() ? this._bitswap.get(e2, t2) : this._repo.blocks.get(e2, t2);
        }
        getMany(e2, t2) {
          if (!Array.isArray(e2))
            throw new Error("first arg must be an array of cids");
          if (this.hasExchange())
            return this._bitswap.getMany(e2, t2);
          return n((e3) => this._repo.blocks.get(e3, t2))(e2);
        }
        async delete(e2, t2) {
          if (!await this._repo.blocks.has(e2))
            throw i(new Error("blockstore: block not found"), "ERR_BLOCK_NOT_FOUND");
          return this._repo.blocks.delete(e2, t2);
        }
        deleteMany(e2, t2) {
          const r2 = this._repo;
          return this._repo.blocks.deleteMany(async function* () {
            for await (const t3 of e2) {
              if (!await r2.blocks.has(t3))
                throw i(new Error("blockstore: block not found"), "ERR_BLOCK_NOT_FOUND");
              yield t3;
            }
          }(), t2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(805), i = r(806);
      e.exports = ({blockService: e2, print: t2, options: r2}) => new i(n(e2, r2, t2));
    }, function(e, t, r) {
      "use strict";
      const n = r(23), i = r(17), s = {get [i.DAG_PB]() {
        return r(16);
      }, get [i.DAG_CBOR]() {
        return r(153);
      }, get [i.RAW]() {
        return r(320);
      }};
      e.exports = (e2, t2 = {}, r2) => n.call({concatArrays: true}, {blockService: e2, loadFormat: (e3) => {
        if (r2("Loading IPLD format", e3), s[e3])
          return s[e3];
        throw new Error(`Missing IPLD format "${i.getName(e3)}"`);
      }}, t2);
    }, function(e, t, r) {
      "use strict";
      const n = r(89), i = r(4), s = r(23), o = r(153), a = r(16), c = r(320), u = r(17), h = r(807), {extendIterator: f} = r(808);
      class d {
        constructor(e2) {
          const t2 = s(d.defaultOptions, e2);
          if (!t2.blockService)
            throw new Error("Missing blockservice");
          this.bs = t2.blockService, this.resolvers = {}, typeof t2.loadFormat != "function" ? this.loadFormat = (e3) => {
            const t3 = u.print[e3];
            throw new Error(`No resolver found for codec "${t3}"`);
          } : this.loadFormat = t2.loadFormat;
          for (const r2 of t2.formats)
            this.addFormat(r2);
        }
        addFormat(e2) {
          const t2 = e2.codec;
          if (this.resolvers[e2.codec]) {
            const e3 = u.print[t2];
            throw new Error(`Resolver already exists for codec "${e3}"`);
          }
          return this.resolvers[t2] = e2, this;
        }
        removeFormat(e2) {
          return this.resolvers[e2] && delete this.resolvers[e2], this;
        }
        resolve(e2, t2, r2) {
          if (!i.isCID(e2))
            throw new Error("`cid` argument must be a CID");
          if (typeof t2 != "string")
            throw new Error("`path` argument must be a string");
          const n2 = async function* () {
            for (; e2 !== null; ) {
              const s2 = await this.getFormat(e2.codec), o2 = await this.bs.get(e2, r2), a2 = s2.resolver.resolve(o2.data, t2);
              t2 = a2.remainderPath;
              let c2 = a2.value;
              if (Object.keys(c2).length === 1 && "/" in c2)
                try {
                  c2 = new i(c2["/"]);
                } catch (n3) {
                  c2 = null;
                }
              e2 = i.isCID(c2) ? c2 : null, yield {remainderPath: t2, value: c2};
            }
          }.bind(this);
          return f(n2());
        }
        async get(e2, t2) {
          const r2 = await this.bs.get(e2, t2);
          return (await this.getFormat(r2.cid.codec)).util.deserialize(r2.data);
        }
        getMany(e2, t2) {
          if (!h.isIterable(e2) || typeof e2 == "string" || e2 instanceof Uint8Array)
            throw new Error("`cids` must be an iterable of CIDs");
          const r2 = async function* () {
            for await (const r3 of e2)
              yield this.get(r3, t2);
          }.bind(this);
          return f(r2());
        }
        async put(e2, t2, r2) {
          if (t2 === void 0)
            throw new Error("`put` requires a format");
          if (typeof t2 != "number")
            throw new Error("`format` parameter must be number (multicodec)");
          const i2 = await this.getFormat(t2), o2 = {hashAlg: i2.defaultHashAlg, cidVersion: 1, onlyHash: false}, a2 = s(o2, r2), c2 = {cidVersion: a2.cidVersion, hashAlg: a2.hashAlg, onlyHash: a2.onlyHash}, u2 = i2.util.serialize(e2), h2 = await i2.util.cid(u2, c2);
          if (!a2.onlyHash) {
            const e3 = new n(u2, h2);
            await this.bs.put(e3, a2);
          }
          return h2;
        }
        putMany(e2, t2, r2) {
          if (!h.isIterable(e2) || typeof e2 == "string" || e2 instanceof Uint8Array)
            throw new Error("`nodes` must be an iterable");
          if (t2 === void 0)
            throw new Error("`put` requires a format");
          if (typeof t2 != "number")
            throw new Error("`format` parameter must be number (multicodec)");
          let n2, i2;
          const o2 = async function* () {
            for await (const o3 of e2) {
              if (n2 === void 0) {
                i2 = await this.getFormat(t2);
                const e3 = {hashAlg: i2.defaultHashAlg, cidVersion: 1, onlyHash: false};
                n2 = s(e3, r2);
              }
              yield this.put(o3, t2, n2);
            }
          }.bind(this);
          return f(o2());
        }
        async remove(e2, t2) {
          return this.bs.delete(e2, t2);
        }
        removeMany(e2, t2) {
          if (!h.isIterable(e2) || typeof e2 == "string" || e2 instanceof Uint8Array)
            throw new Error("`cids` must be an iterable of CIDs");
          const r2 = async function* () {
            for await (const r3 of e2)
              yield this.remove(r3, t2);
          }.bind(this);
          return f(r2());
        }
        tree(e2, t2, r2) {
          typeof t2 == "object" && (r2 = t2, t2 = void 0), t2 = t2 || "";
          const n2 = s({recursive: false}, r2), o2 = async (e3, t3) => {
            const r3 = (await this.getFormat(e3.cid.codec)).resolver.resolve(e3.data, t3);
            return i.isCID(r3.value) ? r3.value : null;
          }, a2 = async function* () {
            const r3 = [];
            let i2;
            const s2 = [{cid: e2, basePath: ""}];
            let a3;
            for (; r3.length > 0 || s2.length > 0; ) {
              if (r3.length === 0 && s2.length > 0) {
                ({cid: e2, basePath: a3} = s2.shift());
                const t3 = await this.getFormat(e2.codec);
                i2 = await this.bs.get(e2, n2);
                const o3 = t3.resolver.tree(i2.data);
                r3.push(...o3);
              }
              const c2 = r3.shift();
              let u2 = a3 + c2;
              n2.recursive && (e2 = await o2(i2, c2)) !== null && s2.push({cid: e2, basePath: u2 + "/"}), u2.startsWith(t2) && u2.length > t2.length && (t2.length > 0 && (u2 = u2.slice(t2.length + 1)), yield u2);
            }
          }.bind(this);
          return f(a2());
        }
        async getFormat(e2) {
          if (typeof e2 == "string") {
            const t3 = e2.toUpperCase().replace(/-/g, "_");
            e2 = u[t3];
          }
          if (this.resolvers[e2])
            return this.resolvers[e2];
          const t2 = await this.loadFormat(e2);
          return this.addFormat(t2), t2;
        }
      }
      d.defaultOptions = {formats: [o, a, c]}, e.exports = d;
    }, function(e, t, r) {
      "use strict";
      function n(e2) {
        return !isNaN(parseFloat(e2)) && isFinite(e2);
      }
      function i(e2) {
        return e2 !== null && typeof e2 == "object" && e2.constructor === Object;
      }
      function s(e2) {
        return o(e2) && typeof e2.length == "number";
      }
      function o(e2) {
        return typeof e2 == "object" && e2 !== null;
      }
      function a(e2) {
        return e2 !== void 0;
      }
      function c(e2) {
        return !a(e2);
      }
      function u(e2) {
        return e2 === null;
      }
      function h(e2) {
        return a(e2) && !u(e2) && !Number.isNaN(e2);
      }
      function f(e2) {
        return typeof e2 == "function" && /^class /.test(Function.prototype.toString.call(e2));
      }
      function d(e2) {
        if (e2 === null)
          return true;
        switch (typeof e2) {
          case "string":
          case "number":
          case "symbol":
          case "undefined":
          case "boolean":
            return true;
          default:
            return false;
        }
      }
      function l(e2) {
        if (e2) {
          const t2 = a(Promise) && e2 instanceof Promise, r2 = e2.then && typeof e2.then == "function";
          return !(!t2 && !r2);
        }
        return false;
      }
      function p(e2) {
        return !(e2 === null || !a(e2)) && (typeof e2[Symbol.iterator] == "function" || typeof e2[Symbol.asyncIterator] == "function");
      }
      function y(e2) {
        return typeof e2 == "string";
      }
      function g(e2) {
        return typeof e2 == "function";
      }
      r.r(t), r.d(t, "isNumber", function() {
        return n;
      }), r.d(t, "isPlainObject", function() {
        return i;
      }), r.d(t, "isArrayLike", function() {
        return s;
      }), r.d(t, "isObject", function() {
        return o;
      }), r.d(t, "isDefined", function() {
        return a;
      }), r.d(t, "isUndefined", function() {
        return c;
      }), r.d(t, "isNull", function() {
        return u;
      }), r.d(t, "isDefinedValue", function() {
        return h;
      }), r.d(t, "isClass", function() {
        return f;
      }), r.d(t, "isPrimitive", function() {
        return d;
      }), r.d(t, "isPromise", function() {
        return l;
      }), r.d(t, "isIterable", function() {
        return p;
      }), r.d(t, "isString", function() {
        return y;
      }), r.d(t, "isFunction", function() {
        return g;
      }), t.default = {isNumber: n, isPlainObject: i, isArrayLike: s, isObject: o, isDefined: a, isUndefined: c, isNull: u, isDefinedValue: h, isClass: f, isPrimitive: d, isPromise: l, isIterable: p, isString: y, isFunction: g};
    }, function(e, t, r) {
      "use strict";
      t.first = async (e2) => {
        for await (const t2 of e2)
          return t2;
      }, t.last = async (e2) => {
        let t2;
        for await (t2 of e2)
          ;
        return t2;
      }, t.all = async (e2) => {
        const t2 = [];
        for await (const r2 of e2)
          t2.push(r2);
        return t2;
      }, t.extendIterator = (e2) => (e2.first = () => t.first(e2), e2.last = () => t.last(e2), e2.all = () => t.all(e2), e2);
    }, function(e, t, r) {
      "use strict";
      const n = r(1)("ipfs:components:peer:storage"), i = r(810), s = r(163), {ERR_REPO_NOT_INITIALIZED: o} = r(179).errors, a = r(6), c = r(5), u = r(7), {mergeOptions: h} = r(22), f = r(286), {NotEnabledError: d} = r(62), l = r(321);
      class p {
        constructor(e2, t2, r2, n2, i2) {
          this.print = n2, this.peerId = e2, this.keychain = t2, this.repo = r2, this.print = n2, this.isNew = i2;
        }
        static async start(e2) {
          const {repoAutoMigrate: t2, repo: r2, print: n2, silent: s2} = e2, o2 = typeof r2 == "string" || r2 == null ? i({path: r2, autoMigrate: t2, silent: s2}) : r2, {peerId: a2, keychain: c2, isNew: u2} = await y(o2, e2);
          return new p(a2, c2, o2, n2, u2);
        }
      }
      e.exports = p;
      const y = async (e2, t2) => {
        const r2 = await g(e2);
        if (r2 == null)
          return {...await _(e2, t2), isNew: false};
        if (r2.code === o) {
          if (t2.allowNew === false)
            throw new d("Initialization of new repos disabled by config, pass `config.init.isNew: true` to enable it");
          return {...await b(e2, t2), isNew: true};
        }
        throw r2;
      }, g = async (e2) => {
        if (!e2.closed)
          return null;
        try {
          return await e2.open(), null;
        } catch (t2) {
          return t2;
        }
      }, b = async (e2, t2) => {
        const r2 = await e2.exists();
        if (n("repo exists?", r2), r2 === true)
          throw new Error("repo already exists");
        const i2 = t2.privateKey ? await m(t2.privateKey) : await v(t2), o2 = w(i2);
        n("peer identity: %s", o2.PeerID);
        const a2 = {...h(S(s(), t2.profiles), t2.config), Identity: o2};
        await e2.init(a2), await e2.open(), n("repo opened");
        const c2 = l({options: void 0, multiaddrs: void 0, peerId: i2, repo: e2, config: a2, keychainConfig: {pass: t2.pass}});
        return c2.keychain && c2.keychain.opts && (await c2.loadKeychain(), await e2.config.set("Keychain", {dek: c2.keychain.opts.dek})), {peerId: i2, keychain: c2.keychain};
      }, m = (e2) => (n("using user-supplied private-key"), typeof e2 == "object" ? e2 : u.createFromPrivKey(a(e2, "base64pad"))), v = ({print: e2, algorithm: t2 = "RSA", bits: r2 = 2048}) => (e2("generating %s-bit (rsa only) %s keypair...", r2, t2), u.create({keyType: t2, bits: r2})), w = (e2) => ({PeerID: e2.toB58String(), PrivKey: c(e2.privKey.bytes, "base64pad")}), _ = async (e2, {config: t2, profiles: r2, pass: n2}) => {
        const i2 = await e2.config.getAll(), s2 = E(S(i2, r2), t2);
        i2 !== s2 && await e2.config.replace(s2);
        const o2 = await u.createFromPrivKey(s2.Identity.PrivKey), a2 = l({options: void 0, multiaddrs: void 0, peerId: o2, repo: e2, config: s2, keychainConfig: {pass: n2, ...s2.Keychain}});
        return a2.keychain && await a2.loadKeychain(), {peerId: o2, keychain: a2.keychain};
      }, E = (e2, t2) => t2 ? h(e2, t2) : e2, S = (e2, t2) => (t2 || []).reduce((e3, t3) => {
        const r2 = f.profiles[t3];
        if (!r2)
          throw new Error(`Could not find profile with name '${t3}'`);
        return n("applying profile %s", t3), r2.transform(e3);
      }, e2);
    }, function(e, t, r) {
      "use strict";
      const n = r(179);
      e.exports = (e2 = {}) => {
        const t2 = e2.path || "ipfs";
        return new n(t2, {autoMigrate: e2.autoMigrate});
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = {gossipsub: r(322)};
    }, function(e, t, r) {
      "use strict";
      const n = r(1), i = r(14), s = r(0), o = r(25), a = r(813), {codes: c} = r(189), u = r(323), h = r(817), f = r(826), {signMessage: d, verifySignature: l} = r(827);
      e.exports = class extends i {
        constructor({debugName: e2, multicodecs: t2, libp2p: r2, signMessages: i2 = true, strictSigning: s2 = true, canRelayMessage: o2 = false, emitSelf: a2 = false}) {
          if (typeof e2 != "string")
            throw new Error("a debugname `string` is required");
          if (!t2)
            throw new Error("multicodecs are required");
          if (!r2)
            throw new Error("libp2p is required");
          super(), this.log = n(e2), this.log.err = n(e2 + ":error"), this.multicodecs = f.ensureArray(t2), this._libp2p = r2, this.registrar = r2.registrar, this.peerId = r2.peerId, this.started = false, this.topics = new Map(), this.subscriptions = new Set(), this.peers = new Map(), this.signMessages = i2, this.strictSigning = s2, this.canRelayMessage = o2, this.emitSelf = a2, this.topicValidators = new Map(), this._registrarId = void 0, this._onIncomingStream = this._onIncomingStream.bind(this), this._onPeerConnected = this._onPeerConnected.bind(this), this._onPeerDisconnected = this._onPeerDisconnected.bind(this);
        }
        start() {
          if (this.started)
            return;
          this.log("starting"), this.registrar.handle(this.multicodecs, this._onIncomingStream);
          const e2 = new a({multicodecs: this.multicodecs, handlers: {onConnect: this._onPeerConnected, onDisconnect: this._onPeerDisconnected}});
          this._registrarId = this.registrar.register(e2), this.log("started"), this.started = true;
        }
        stop() {
          this.started && (this.registrar.unregister(this._registrarId), this.log("stopping"), this.peers.forEach((e2) => e2.close()), this.peers = new Map(), this.subscriptions = new Set(), this.started = false, this.log("stopped"));
        }
        _onIncomingStream({protocol: e2, stream: t2, connection: r2}) {
          const n2 = r2.remotePeer, i2 = n2.toB58String(), s2 = this._addPeer(n2, e2);
          s2.attachInboundStream(t2), this._processMessages(i2, s2.inboundStream, s2);
        }
        async _onPeerConnected(e2, t2) {
          const r2 = e2.toB58String();
          this.log("connected", r2);
          try {
            const {stream: r3, protocol: n2} = await t2.newStream(this.multicodecs), i2 = this._addPeer(e2, n2);
            await i2.attachOutboundStream(r3);
          } catch (n2) {
            this.log.err(n2);
          }
          this._sendSubscriptions(r2, Array.from(this.subscriptions), true);
        }
        _onPeerDisconnected(e2, t2) {
          const r2 = e2.toB58String();
          this.log("connection ended", r2, t2 ? t2.message : ""), this._removePeer(e2);
        }
        _addPeer(e2, t2) {
          const r2 = e2.toB58String(), n2 = this.peers.get(r2);
          if (n2)
            return n2;
          this.log("new peer", r2);
          const i2 = new h({id: e2, protocol: t2});
          return this.peers.set(r2, i2), i2.once("close", () => this._removePeer(e2)), i2;
        }
        _removePeer(e2) {
          if (!e2)
            return;
          const t2 = e2.toB58String(), r2 = this.peers.get(t2);
          if (r2) {
            r2.removeAllListeners(), r2.close(), this.log("delete peer", t2), this.peers.delete(t2);
            for (const e3 of this.topics.values())
              e3.delete(t2);
            return r2;
          }
        }
        async _processMessages(e2, t2, r2) {
          try {
            await o(t2, async (t3) => {
              for await (const n2 of t3) {
                const t4 = n2 instanceof Uint8Array ? n2 : n2.slice(), i2 = this._decodeRpc(t4);
                this._processRpc(e2, r2, i2);
              }
            });
          } catch (n2) {
            this._onPeerDisconnected(r2.id, n2);
          }
        }
        _processRpc(e2, t2, r2) {
          this.log("rpc from", e2);
          const n2 = r2.subscriptions, i2 = r2.msgs;
          return n2.length && (n2.forEach((t3) => this._processRpcSubOpt(e2, t3)), this.emit("pubsub:subscription-change", t2.id, n2)), this._acceptFrom(e2) ? (i2.length && i2.forEach((t3) => {
            if (!this.canRelayMessage && !t3.topicIDs.some((e3) => this.subscriptions.has(e3)))
              return void this.log("received message we didn't subscribe to. Dropping.");
            const r3 = f.normalizeInRpcMessage(t3, e2);
            this._processRpcMessage(r3);
          }), true) : (this.log("received message from unacceptable peer %s", e2), false);
        }
        _processRpcSubOpt(e2, t2) {
          const r2 = t2.topicID;
          let n2 = this.topics.get(r2);
          n2 || (n2 = new Set(), this.topics.set(r2, n2)), t2.subscribe ? n2.add(e2) : n2.delete(e2);
        }
        async _processRpcMessage(e2) {
          if (this.peerId.toB58String() !== e2.from || this.emitSelf) {
            try {
              await this.validate(e2);
            } catch (t2) {
              return void this.log("Message is invalid, dropping it. %O", t2);
            }
            this._emitMessage(e2), this._publish(f.normalizeOutRpcMessage(e2));
          }
        }
        _emitMessage(e2) {
          e2.topicIDs.forEach((t2) => {
            this.subscriptions.has(t2) && this.emit(t2, e2);
          });
        }
        getMsgId(e2) {
          return f.msgId(e2.from, e2.seqno);
        }
        _acceptFrom(e2) {
          return true;
        }
        _decodeRpc(e2) {
          return u.rpc.RPC.decode(e2);
        }
        _encodeRpc(e2) {
          return u.rpc.RPC.encode(e2);
        }
        _sendRpc(e2, t2) {
          const r2 = this.peers.get(e2);
          if (r2 && r2.isWritable)
            r2.write(this._encodeRpc(t2));
          else {
            const t3 = `Cannot send RPC to ${e2} as there is no open stream to it available`;
            this.log.err(t3);
          }
        }
        _sendSubscriptions(e2, t2, r2) {
          return this._sendRpc(e2, {subscriptions: t2.map((e3) => ({topicID: e3, subscribe: r2}))});
        }
        async validate(e2) {
          if (this.strictSigning && !e2.signature)
            throw s(new Error("Signing required and no signature was present"), c.ERR_MISSING_SIGNATURE);
          if (e2.signature && !await l(e2))
            throw s(new Error("Invalid message signature"), c.ERR_INVALID_SIGNATURE);
          for (const t2 of e2.topicIDs) {
            const r2 = this.topicValidators.get(t2);
            r2 && await r2(t2, e2);
          }
        }
        _buildMessage(e2) {
          const t2 = f.normalizeOutRpcMessage(e2);
          return this.signMessages ? d(this.peerId, t2) : e2;
        }
        getSubscribers(e2) {
          if (!this.started)
            throw s(new Error("not started yet"), "ERR_NOT_STARTED_YET");
          if (!e2 || typeof e2 != "string")
            throw s(new Error("a string topic must be provided"), "ERR_NOT_VALID_TOPIC");
          const t2 = this.topics.get(e2);
          return t2 ? Array.from(t2) : [];
        }
        async publish(e2, t2) {
          if (!this.started)
            throw new Error("Pubsub has not started");
          this.log("publish", e2, t2);
          const r2 = this.peerId.toB58String();
          let n2 = {receivedFrom: r2, from: r2, data: t2, seqno: f.randomSeqno(), topicIDs: [e2]};
          const i2 = await this._buildMessage(n2);
          n2 = f.normalizeInRpcMessage(i2), this.emitSelf && this._emitMessage(n2), await this._publish(n2);
        }
        _publish(e2) {
          throw s(new Error("publish must be implemented by the subclass"), "ERR_NOT_IMPLEMENTED");
        }
        subscribe(e2) {
          if (!this.started)
            throw new Error("Pubsub has not started");
          this.subscriptions.has(e2) || (this.subscriptions.add(e2), this.peers.forEach((t2, r2) => this._sendSubscriptions(r2, [e2], true)));
        }
        unsubscribe(e2) {
          if (!this.started)
            throw new Error("Pubsub is not started");
          this.subscriptions.has(e2) && this.listenerCount(e2) === 0 && (this.subscriptions.delete(e2), this.peers.forEach((t2, r2) => this._sendSubscriptions(r2, [e2], false)));
        }
        getTopics() {
          if (!this.started)
            throw new Error("Pubsub is not started");
          return Array.from(this.subscriptions);
        }
      }, e.exports.message = u, e.exports.utils = f;
    }, function(e, t, r) {
      "use strict";
      const n = r(24), i = r(814);
      e.exports = n(class extends i {
        constructor({min: e2, max: t2, multicodecs: r2, handlers: n2}) {
          if (super({min: e2, max: t2, handlers: n2}), !r2)
            throw new Error("one or more multicodec should be provided");
          if (!n2)
            throw new Error("the handlers should be provided");
          if (typeof n2.onConnect != "function")
            throw new Error("the 'onConnect' handler must be provided");
          if (typeof n2.onDisconnect != "function")
            throw new Error("the 'onDisconnect' handler must be provided");
          this.multicodecs = Array.isArray(r2) ? r2 : [r2], this._registrar = void 0, this._onProtocolChange = this._onProtocolChange.bind(this), this._onPeerConnect = this._onPeerConnect.bind(this);
        }
        set registrar(e2) {
          this._registrar = e2, this._registrar.peerStore.on("change:protocols", this._onProtocolChange), this._registrar.connectionManager.on("peer:connect", this._onPeerConnect), this._updatePeers(this._registrar.peerStore.peers.values());
        }
        _updatePeers(e2) {
          for (const {id: t2, protocols: r2} of e2)
            if (this.multicodecs.filter((e3) => r2.includes(e3)).length) {
              this.peers.add(t2.toB58String());
              const e3 = this._registrar.getConnection(t2);
              e3 && this._onConnect(t2, e3);
            } else
              this.peers.delete(t2.toB58String());
        }
        _onProtocolChange({peerId: e2, protocols: t2}) {
          const r2 = this.peers.has(e2.toB58String()), n2 = t2.filter((e3) => this.multicodecs.includes(e3));
          r2 && n2.length === 0 && this._onDisconnect(e2);
          for (const i2 of t2)
            if (this.multicodecs.includes(i2)) {
              const t3 = this._registrar.peerStore.get(e2);
              return void this._updatePeers([t3]);
            }
        }
        _onPeerConnect(e2) {
          const t2 = e2.remotePeer, r2 = this._registrar.peerStore.protoBook.get(t2);
          r2 && this.multicodecs.find((e3) => r2.includes(e3)) && (this.peers.add(t2.toB58String()), this._onConnect(t2, e2));
        }
      }, {className: "MulticodecTopology", symbolName: "@libp2p/js-interfaces/topology/multicodec-topology"});
    }, function(e, t, r) {
      "use strict";
      const n = r(24), i = () => {
      };
      e.exports = n(class {
        constructor({min: e2 = 0, max: t2 = 1 / 0, handlers: r2 = {}}) {
          this.min = e2, this.max = t2, this._onConnect = r2.onConnect || i, this._onDisconnect = r2.onDisconnect || i, this.peers = new Set();
        }
        set registrar(e2) {
          this._registrar = e2;
        }
        disconnect(e2) {
          this._onDisconnect(e2);
        }
      }, {className: "Topology", symbolName: "@libp2p/js-interfaces/topology"});
    }, function(e, t, r) {
      "use strict";
      e.exports = "\nmessage RPC {\n  repeated SubOpts subscriptions = 1;\n  repeated Message msgs = 2;\n\n  message SubOpts {\n    optional bool subscribe = 1; // subscribe or unsubcribe\n    optional string topicID = 2;\n  }\n\n  message Message {\n    optional bytes from = 1;\n    optional bytes data = 2;\n    optional bytes seqno = 3;\n    repeated string topicIDs = 4;\n    optional bytes signature = 5;\n    optional bytes key = 6;\n  }\n}";
    }, function(e, t, r) {
      "use strict";
      e.exports = "\n// topicCID = cid(merkledag_protobuf(topicDescriptor)); (not the topic.name)\nmessage TopicDescriptor {\n  optional string name = 1;\n  optional AuthOpts auth = 2;\n  optional EncOpts enc = 2;\n\n  message AuthOpts {\n    optional AuthMode mode = 1;\n    repeated bytes keys = 2; // root keys to trust\n\n    enum AuthMode {\n      NONE = 0; // no authentication, anyone can publish\n      KEY = 1; // only messages signed by keys in the topic descriptor are accepted\n      WOT = 2; // web of trust, certificates can allow publisher set to grow\n    }\n  }\n\n  message EncOpts {\n    optional EncMode mode = 1;\n    repeated bytes keyHashes = 2; // the hashes of the shared keys used (salted)\n\n    enum EncMode {\n      NONE = 0; // no encryption, anyone can read\n      SHAREDKEY = 1; // messages are encrypted with shared key\n      WOT = 2; // web of trust, certificates can allow publisher set to grow\n    }\n  }\n}";
    }, function(e, t, r) {
      "use strict";
      const n = r(14), i = r(34), s = r(92), o = r(25), a = r(45), c = r(47), u = r(1), h = u("libp2p-pubsub:peer-streams");
      h.error = u("libp2p-pubsub:peer-streams:error");
      e.exports = class extends n {
        constructor({id: e2, protocol: t2}) {
          super(), this.id = e2, this.protocol = t2, this._rawOutboundStream = null, this._rawInboundStream = null, this._inboundAbortController = null, this.outboundStream = null, this.inboundStream = null;
        }
        get isReadable() {
          return Boolean(this.inboundStream);
        }
        get isWritable() {
          return Boolean(this.outboundStream);
        }
        write(e2) {
          if (!this.isWritable) {
            const e3 = this.id.toB58String();
            throw new Error("No writable connection to " + e3);
          }
          this.outboundStream.push(e2);
        }
        attachInboundStream(e2) {
          this._inboundAbortController = new c(), this._rawInboundStream = e2, this.inboundStream = a(o(this._rawInboundStream, i.decode()), this._inboundAbortController.signal, {returnOnAbort: true}), this.emit("stream:inbound");
        }
        async attachOutboundStream(e2) {
          const t2 = this.outboundStream;
          t2 && await this.outboundStream.end(false), this._rawOutboundStream = e2, this.outboundStream = s({onEnd: (e3) => {
            this._rawOutboundStream.reset && this._rawOutboundStream.reset(), this._rawOutboundStream = null, this.outboundStream = null, e3 !== false && this.emit("close");
          }}), o(this.outboundStream, i.encode(), this._rawOutboundStream).catch((e3) => {
            h.error(e3);
          }), t2 || this.emit("stream:outbound");
        }
        close() {
          this.outboundStream && this.outboundStream.end(), this.inboundStream && this._inboundAbortController.abort(), this._rawOutboundStream = null, this.outboundStream = null, this._rawInboundStream = null, this.inboundStream = null, this.emit("close");
        }
      };
    }, function(e, t, r) {
      "use strict";
      const {Buffer: n} = r(3), i = r(33), s = r(324);
      function o(e2) {
        e2 = e2 || {};
        const t2 = Math.max(e2.poolSize || 10240, e2.minPoolSize || 8), r2 = e2.lengthEncoder || s;
        return (e3) => async function* () {
          let s2 = n.alloc(t2), o2 = 0;
          for await (const a of e3) {
            r2(a.length, s2, o2);
            const e4 = s2.slice(o2, o2 + r2.bytes);
            o2 += r2.bytes, s2.length - o2 < 8 && (s2 = n.alloc(t2), o2 = 0), yield new i().append(e4).append(a);
          }
        }();
      }
      o.single = (e2, t2) => {
        const r2 = (t2 = t2 || {}).lengthEncoder || s;
        return new i([r2(e2.length), e2]);
      }, e.exports = o, e.exports.MIN_POOL_SIZE = 8, e.exports.DEFAULT_POOL_SIZE = 10240;
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2, i) {
        r2 = r2 || [];
        var s = i = i || 0;
        for (; t2 >= n; )
          r2[i++] = 255 & t2 | 128, t2 /= 128;
        for (; -128 & t2; )
          r2[i++] = 255 & t2 | 128, t2 >>>= 7;
        return r2[i] = 0 | t2, e2.bytes = i - s + 1, r2;
      };
      var n = Math.pow(2, 31);
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2) {
        var n, i = 0, s = 0, o = r2 = r2 || 0, a = t2.length;
        do {
          if (o >= a)
            throw e2.bytes = 0, new RangeError("Could not decode varint");
          n = t2[o++], i += s < 28 ? (127 & n) << s : (127 & n) * Math.pow(2, s), s += 7;
        } while (n >= 128);
        return e2.bytes = o - r2, i;
      };
    }, function(e, t, r) {
      "use strict";
      var n = Math.pow(2, 7), i = Math.pow(2, 14), s = Math.pow(2, 21), o = Math.pow(2, 28), a = Math.pow(2, 35), c = Math.pow(2, 42), u = Math.pow(2, 49), h = Math.pow(2, 56), f = Math.pow(2, 63);
      e.exports = function(e2) {
        return e2 < n ? 1 : e2 < i ? 2 : e2 < s ? 3 : e2 < o ? 4 : e2 < a ? 5 : e2 < c ? 6 : e2 < u ? 7 : e2 < h ? 8 : e2 < f ? 9 : 10;
      };
    }, function(e, t, r) {
      "use strict";
      const {Buffer: n} = r(3), i = r(33), s = r(326), o = n.alloc(0), a = "readLength", c = "readData", u = {[a]: (e2, t2, r2, n2) => {
        let s2;
        t2 = t2.append(e2);
        try {
          s2 = n2.lengthDecoder(t2);
        } catch (u2) {
          if (t2.length > n2.maxLengthLength)
            throw Object.assign(u2, {message: "message length too long", code: "ERR_MSG_LENGTH_TOO_LONG"});
          if (u2 instanceof RangeError)
            return {mode: a, buffer: t2};
          throw u2;
        }
        if (s2 > n2.maxDataLength)
          throw Object.assign(new Error("message data too long"), {code: "ERR_MSG_DATA_TOO_LONG"});
        return e2 = t2.shallowSlice(n2.lengthDecoder.bytes), t2 = new i(), n2.onLength && n2.onLength(s2), s2 <= 0 ? (n2.onData && n2.onData(o), {mode: a, chunk: e2, buffer: t2, data: o}) : {mode: c, chunk: e2, buffer: t2, state: {dataLength: s2}};
      }, [c]: (e2, t2, r2, n2) => {
        if ((t2 = t2.append(e2)).length < r2.dataLength)
          return {mode: c, buffer: t2, state: r2};
        const {dataLength: s2} = r2, o2 = t2.shallowSlice(0, s2);
        return e2 = t2.length > s2 ? t2.shallowSlice(s2) : null, t2 = new i(), n2.onData && n2.onData(o2), {mode: a, chunk: e2, buffer: t2, data: o2};
      }};
      function h(e2) {
        return (e2 = e2 || {}).lengthDecoder = e2.lengthDecoder || s, e2.maxLengthLength = e2.maxLengthLength || 8, e2.maxDataLength = e2.maxDataLength || 4194304, (t2) => async function* () {
          let r2, n2 = new i(), s2 = a;
          for await (let i2 of t2)
            for (; i2; ) {
              const t3 = u[s2](i2, n2, r2, e2);
              ({mode: s2, chunk: i2, buffer: n2, state: r2} = t3), t3.data && (yield t3.data);
            }
          if (n2.length)
            throw Object.assign(new Error("unexpected end of input"), {code: "ERR_UNEXPECTED_EOF"});
        }();
      }
      h.fromReader = (e2, t2) => {
        t2 = t2 || {};
        let r2 = 1;
        const n2 = {[Symbol.asyncIterator]() {
          return this;
        }, next: async () => {
          try {
            return await e2.next(r2);
          } catch (t3) {
            if (t3.code === "ERR_UNDER_READ")
              return {done: true, value: null};
            throw t3;
          } finally {
            r2 = 1;
          }
        }};
        return t2.onLength = (e3) => {
          r2 = e3;
        }, h(t2)(n2);
      }, e.exports = h, e.exports.MAX_LENGTH_LENGTH = 8, e.exports.MAX_DATA_LENGTH = 4194304;
    }, function(e, t, r) {
      "use strict";
      const {Buffer: n} = r(3), i = (e2, t2, r2) => ((t2 = t2 || n.allocUnsafe(4)).writeInt32BE(e2, r2), t2);
      i.bytes = 4, e.exports = i;
    }, function(e, t, r) {
      "use strict";
      const n = (e2) => {
        if (e2.length < 4)
          throw RangeError("Could not decode int32BE");
        return e2.readInt32BE(0);
      };
      n.bytes = 4, e.exports = n;
    }, function(e, t, r) {
      "use strict";
      e.exports = class extends Error {
        constructor(e2, t2) {
          super(e2 || "The operation was aborted"), this.type = "aborted", this.code = t2 || "ABORT_ERR";
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(102), i = r(5), s = r(6), o = r(7);
      (t = e.exports).randomSeqno = () => n(8), t.msgId = (e2, t2) => {
        const r2 = o.createFromB58String(e2).id, n2 = new Uint8Array(r2.length + t2.length);
        return n2.set(r2, 0), n2.set(t2, r2.length), n2;
      }, t.anyMatch = (e2, t2) => {
        let r2;
        r2 = Array.isArray(t2) ? (e3) => t2.indexOf(e3) > -1 : (e3) => t2.has(e3);
        for (const n2 of e2)
          if (r2(n2))
            return true;
        return false;
      }, t.ensureArray = (e2) => Array.isArray(e2) ? e2 : [e2], t.normalizeInRpcMessage = (e2, t2) => {
        const r2 = Object.assign({}, e2);
        return e2.from instanceof Uint8Array && (r2.from = i(e2.from, "base58btc")), t2 && (r2.receivedFrom = t2), r2;
      }, t.normalizeOutRpcMessage = (e2) => {
        const t2 = Object.assign({}, e2);
        return (typeof e2.from == "string" || e2.from instanceof String) && (t2.from = s(e2.from, "base58btc")), (typeof e2.data == "string" || e2.data instanceof String) && (t2.data = s(e2.data)), t2;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(7), {Message: i} = r(323), s = r(27), o = r(6)("libp2p-pubsub:");
      async function a(e2) {
        const t2 = n.createFromCID(e2.from);
        if (e2.key) {
          const r2 = await n.createFromPubKey(e2.key);
          if (r2.isEqual(t2))
            return r2.pubKey;
          throw new Error("Public Key does not match the originator");
        }
        if (t2.pubKey)
          return t2.pubKey;
        throw new Error("Could not get the public key from the originator id");
      }
      e.exports = {messagePublicKey: a, signMessage: async function(e2, t2) {
        const r2 = s([o, i.encode(t2)]), n2 = await e2.privKey.sign(r2);
        return {...t2, signature: n2, key: e2.pubKey.bytes};
      }, SignPrefix: o, verifySignature: async function(e2) {
        const t2 = {...e2};
        delete t2.signature, delete t2.key, t2.from = n.createFromCID(t2.from).toBytes();
        const r2 = s([o, i.encode(t2)]);
        return (await a(e2)).verify(r2, e2.signature);
      }};
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.MessageCache = void 0;
      const n = r(74);
      t.MessageCache = class {
        constructor(e2, t2, r2) {
          this.msgs = new Map(), this.peertx = new Map(), this.history = [];
          for (let n2 = 0; n2 < t2; n2++)
            this.history[n2] = [];
          this.gossip = e2, this.msgIdFn = r2;
        }
        put(e2) {
          const t2 = this.getMsgId(e2), r2 = n.messageIdToString(t2);
          this.msgs.set(r2, e2), this.history[0].push({msgID: t2, topics: e2.topicIDs});
        }
        getMsgId(e2) {
          return this.msgIdFn(e2);
        }
        get(e2) {
          return this.msgs.get(n.messageIdToString(e2));
        }
        getForPeer(e2, t2) {
          const r2 = n.messageIdToString(e2), i = this.msgs.get(r2);
          if (!i)
            return [void 0, 0];
          let s = this.peertx.get(r2);
          s || (s = new Map(), this.peertx.set(r2, s));
          const o = (s.get(t2) || 0) + 1;
          return s.set(t2, o), [i, o];
        }
        getGossipIDs(e2) {
          const t2 = [];
          for (let r2 = 0; r2 < this.gossip; r2++)
            this.history[r2].forEach((r3) => {
              for (const n2 of r3.topics)
                if (n2 === e2) {
                  t2.push(r3.msgID);
                  break;
                }
            });
          return t2;
        }
        shift() {
          this.history[this.history.length - 1].forEach((e2) => {
            const t2 = n.messageIdToString(e2.msgID);
            this.msgs.delete(t2), this.peertx.delete(t2);
          }), this.history.pop(), this.history.unshift([]);
        }
      };
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.createGossipRpc = void 0, t.createGossipRpc = function(e2 = [], t2 = {}) {
        return {subscriptions: [], msgs: e2, control: Object.assign({ihave: [], iwant: [], graft: [], prune: []}, t2)};
      };
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.shuffle = void 0, t.shuffle = function(e2) {
        if (e2.length <= 1)
          return e2;
        for (let t2 = 0; t2 < e2.length; t2++) {
          const r2 = Math.floor(Math.random() * Math.floor(e2.length)), n = e2[t2];
          e2[t2] = e2[r2], e2[r2] = n;
        }
        return e2;
      };
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.hasGossipProtocol = void 0;
      const n = r(75);
      t.hasGossipProtocol = function(e2) {
        return e2 === n.GossipsubIDv10 || e2 === n.GossipsubIDv11;
      };
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.messageIdToString = void 0;
      const n = r(5);
      t.messageIdToString = function(e2) {
        return n(e2, "base64");
      };
    }, function(e, t, r) {
      "use strict";
      var n = function(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      };
      Object.defineProperty(t, "__esModule", {value: true}), t.RPCCodec = void 0;
      const i = n(r(834)), s = r(20)(i.default);
      t.RPCCodec = s.RPC;
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.default = "\nmessage RPC {\n  repeated SubOpts subscriptions = 1;\n  repeated Message msgs = 2;\n  optional ControlMessage control = 3;\n\n  message SubOpts {\n    optional bool subscribe = 1; // subscribe or unsubcribe\n    optional string topicID = 2;\n  }\n\n  message Message {\n    optional bytes from = 1;\n    optional bytes data = 2;\n    optional bytes seqno = 3;\n    repeated string topicIDs = 4; \n    optional bytes signature = 5;\n    optional bytes key = 6;\n  }\n\n  message ControlMessage {\n    repeated ControlIHave ihave = 1;\n    repeated ControlIWant iwant = 2;\n    repeated ControlGraft graft = 3;\n    repeated ControlPrune prune = 4;\n  }\n\n  message ControlIHave {\n    optional string topicID = 1;\n    repeated bytes messageIDs = 2;\n  }\n\n  message ControlIWant {\n    repeated bytes messageIDs = 1;  \n  }\n\n  message ControlGraft {\n    optional string topicID = 1;\n  }\n\n  message ControlPrune {\n    optional string topicID = 1;\n    repeated PeerInfo peers = 2;\n    optional uint64 backoff = 3;\n  }\n\n  message PeerInfo {\n    optional bytes peerID = 1;\n    optional bytes signedPeerRecord = 2;\n  }\n}";
    }, function(e, t, r) {
      "use strict";
      var n = Object.create ? function(e2, t2, r2, n2) {
        n2 === void 0 && (n2 = r2), Object.defineProperty(e2, n2, {enumerable: true, get: function() {
          return t2[r2];
        }});
      } : function(e2, t2, r2, n2) {
        n2 === void 0 && (n2 = r2), e2[n2] = t2[r2];
      }, i = Object.create ? function(e2, t2) {
        Object.defineProperty(e2, "default", {enumerable: true, value: t2});
      } : function(e2, t2) {
        e2.default = t2;
      }, s = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        var t2 = {};
        if (e2 != null)
          for (var r2 in e2)
            r2 !== "default" && Object.hasOwnProperty.call(e2, r2) && n(t2, e2, r2);
        return i(t2, e2), t2;
      };
      Object.defineProperty(t, "__esModule", {value: true}), t.Heartbeat = void 0;
      const o = s(r(75)), a = r(327), c = r(74);
      t.Heartbeat = class {
        constructor(e2) {
          this.gossipsub = e2;
        }
        start() {
          if (this._heartbeatTimer)
            return;
          const e2 = this._heartbeat.bind(this), t2 = setTimeout(() => {
            e2(), this._heartbeatTimer.runPeriodically(e2, o.GossipsubHeartbeatInterval);
          }, o.GossipsubHeartbeatInitialDelay);
          this._heartbeatTimer = {_intervalId: void 0, runPeriodically: (e3, t3) => {
            this._heartbeatTimer._intervalId = setInterval(e3, t3);
          }, cancel: () => {
            clearTimeout(t2), clearInterval(this._heartbeatTimer._intervalId);
          }};
        }
        stop() {
          this._heartbeatTimer && (this._heartbeatTimer.cancel(), this._heartbeatTimer = null);
        }
        _heartbeat() {
          const {D: e2, Dlo: t2, Dhi: r2, Dscore: n2, Dout: i2} = this.gossipsub._options;
          this.gossipsub.heartbeatTicks++;
          const s2 = new Map(), u = (e3) => {
            let t3 = s2.get(e3);
            return t3 === void 0 && (t3 = this.gossipsub.score.score(e3), s2.set(e3, t3)), t3;
          }, h = new Map(), f = new Map(), d = new Map();
          this.gossipsub._clearBackoff(), this.gossipsub.peerhave.clear(), this.gossipsub.iasked.clear(), this.gossipsub._applyIwantPenalties(), this.gossipsub._directConnect(), this.gossipsub.mesh.forEach((s3, l2) => {
            const p = (e3) => {
              this.gossipsub.log("HEARTBEAT: Remove mesh link to %s in %s", e3, l2), this.gossipsub.score.prune(e3, l2), this.gossipsub._addBackoff(e3, l2), s3.delete(e3);
              const t3 = f.get(e3);
              t3 ? t3.push(l2) : f.set(e3, [l2]);
            }, y = (e3) => {
              this.gossipsub.log("HEARTBEAT: Add mesh link to %s in %s", e3, l2), this.gossipsub.score.graft(e3, l2), s3.add(e3);
              const t3 = h.get(e3);
              t3 ? t3.push(l2) : h.set(e3, [l2]);
            };
            if (s3.forEach((e3) => {
              const t3 = u(e3);
              t3 < 0 && (this.gossipsub.log("HEARTBEAT: Prune peer %s with negative score: score=%d, topic=%s", e3, t3, l2), p(e3), d.set(e3, true));
            }), s3.size < t2) {
              const t3 = this.gossipsub.backoff.get(l2), r3 = e2 - s3.size;
              a.getGossipPeers(this.gossipsub, l2, r3, (e3) => !s3.has(e3) && !this.gossipsub.direct.has(e3) && (!t3 || !t3.has(e3)) && u(e3) >= 0).forEach(y);
            }
            if (s3.size > r2) {
              let t3 = Array.from(s3);
              t3.sort((e3, t4) => u(t4) - u(e3)), t3 = t3.slice(0, n2).concat(c.shuffle(t3.slice(n2)));
              let r3 = 0;
              if (t3.slice(0, e2).forEach((e3) => {
                this.gossipsub.outbound.get(e3) && r3++;
              }), r3 < i2) {
                const n3 = (e3) => {
                  const r4 = t3[e3];
                  for (let n4 = e3; n4 > 0; n4--)
                    t3[n4] = t3[n4 - 1];
                  t3[0] = r4;
                };
                if (r3 > 0) {
                  let i4 = r3;
                  for (let r4 = 1; r4 < e2 && i4 > 0; r4++)
                    this.gossipsub.outbound.get(t3[r4]) && (n3(r4), i4--);
                }
                let i3 = e2 - r3;
                for (let r4 = e2; r4 < t3.length && i3 > 0; r4++)
                  this.gossipsub.outbound.get(t3[r4]) && (n3(r4), i3--);
              }
              t3.slice(e2).forEach(p);
            }
            if (s3.size >= t2) {
              let e3 = 0;
              if (s3.forEach((t3) => {
                this.gossipsub.outbound.get(t3) && e3++;
              }), e3 < i2) {
                const t3 = i2 - e3, r3 = this.gossipsub.backoff.get(l2);
                a.getGossipPeers(this.gossipsub, l2, t3, (e4) => !s3.has(e4) && !this.gossipsub.direct.has(e4) && (!r3 || !r3.has(e4)) && u(e4) >= 0).forEach(y);
              }
            }
            if (this.gossipsub.heartbeatTicks % o.GossipsubOpportunisticGraftTicks == 0 && s3.size > 1) {
              const e3 = Array.from(s3).sort((e4, t4) => u(e4) - u(t4)), t3 = s3.size / 2, r3 = u(e3[t3]);
              if (r3 < this.gossipsub._options.scoreThresholds.opportunisticGraftThreshold) {
                const e4 = this.gossipsub.backoff.get(l2);
                a.getGossipPeers(this.gossipsub, l2, o.GossipsubOpportunisticGraftPeers, (t4) => s3.has(t4) && !this.gossipsub.direct.has(t4) && (!e4 || !e4.has(t4)) && u(t4) > r3).forEach((e5) => {
                  this.gossipsub.log("HEARTBEAT: Opportunistically graft peer %s on topic %s", e5, l2), y(e5);
                });
              }
            }
            this.gossipsub._emitGossip(l2, s3);
          });
          const l = this.gossipsub._now();
          this.gossipsub.lastpub.forEach((e3, t3) => {
            e3 + o.GossipsubFanoutTTL < l && (this.gossipsub.fanout.delete(t3), this.gossipsub.lastpub.delete(t3));
          }), this.gossipsub.fanout.forEach((t3, r3) => {
            const n3 = this.gossipsub.topics.get(r3);
            if (t3.forEach((e3) => {
              (!n3.has(e3) || u(e3) < this.gossipsub._options.scoreThresholds.publishThreshold) && t3.delete(e3);
            }), t3.size < e2) {
              const n4 = e2 - t3.size;
              a.getGossipPeers(this.gossipsub, r3, n4, (e3) => !t3.has(e3) && !this.gossipsub.direct.has(e3) && u(e3) >= this.gossipsub._options.scoreThresholds.publishThreshold).forEach((e3) => {
                t3.add(e3);
              });
            }
            this.gossipsub._emitGossip(r3, t3);
          }), this.gossipsub._sendGraftPrune(h, f, d), this.gossipsub._flush(), this.gossipsub.messageCache.shift(), this.gossipsub.emit("gossipsub:heartbeat");
        }
      };
    }, function(e, t, r) {
      "use strict";
      var n = Object.create ? function(e2, t2, r2, n2) {
        n2 === void 0 && (n2 = r2), Object.defineProperty(e2, n2, {enumerable: true, get: function() {
          return t2[r2];
        }});
      } : function(e2, t2, r2, n2) {
        n2 === void 0 && (n2 = r2), e2[n2] = t2[r2];
      }, i = function(e2, t2) {
        for (var r2 in e2)
          r2 === "default" || t2.hasOwnProperty(r2) || n(t2, e2, r2);
      };
      Object.defineProperty(t, "__esModule", {value: true}), i(r(328), t), i(r(837), t), i(r(838), t);
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.validatePeerScoreThresholds = t.createPeerScoreThresholds = t.defaultPeerScoreThresholds = void 0;
      const n = r(329), i = r(0);
      t.defaultPeerScoreThresholds = {gossipThreshold: -10, publishThreshold: -50, graylistThreshold: -80, acceptPXThreshold: 10, opportunisticGraftThreshold: 20}, t.createPeerScoreThresholds = function(e2 = {}) {
        return Object.assign(Object.assign({}, t.defaultPeerScoreThresholds), e2);
      }, t.validatePeerScoreThresholds = function(e2) {
        if (e2.gossipThreshold > 0)
          throw i(new Error("invalid gossip threshold; it must be <= 0"), n.ERR_INVALID_PEER_SCORE_THRESHOLDS);
        if (e2.publishThreshold > 0 || e2.publishThreshold > e2.gossipThreshold)
          throw i(new Error("invalid publish threshold; it must be <= 0 and <= gossip threshold"), n.ERR_INVALID_PEER_SCORE_THRESHOLDS);
        if (e2.graylistThreshold > 0 || e2.graylistThreshold > e2.publishThreshold)
          throw i(new Error("invalid graylist threshold; it must be <= 0 and <= publish threshold"), n.ERR_INVALID_PEER_SCORE_THRESHOLDS);
        if (e2.acceptPXThreshold < 0)
          throw i(new Error("invalid accept PX threshold; it must be >= 0"), n.ERR_INVALID_PEER_SCORE_THRESHOLDS);
        if (e2.opportunisticGraftThreshold < 0)
          throw i(new Error("invalid opportunistic grafting threshold; it must be >= 0"), n.ERR_INVALID_PEER_SCORE_THRESHOLDS);
      };
    }, function(e, t, r) {
      "use strict";
      var n = function(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      };
      Object.defineProperty(t, "__esModule", {value: true}), t.PeerScore = void 0;
      const i = r(328), s = r(839), o = r(840), a = r(841), c = r(75), u = n(r(7)), h = r(1), f = r(189), {ERR_INVALID_SIGNATURE: d, ERR_MISSING_SIGNATURE: l} = f.codes, p = h("libp2p:gossipsub:score");
      t.PeerScore = class {
        constructor(e2, t2, r2) {
          i.validatePeerScoreParams(e2), this.params = e2, this._connectionManager = t2, this.peerStats = new Map(), this.peerIPs = new Map(), this.deliveryRecords = new a.MessageDeliveries(), this.msgId = r2;
        }
        start() {
          this._backgroundInterval ? p("Peer score already running") : (this._backgroundInterval = setInterval(() => this.background(), this.params.decayInterval), p("started"));
        }
        stop() {
          this._backgroundInterval ? (clearInterval(this._backgroundInterval), delete this._backgroundInterval, this.peerIPs.clear(), this.peerStats.clear(), this.deliveryRecords.clear(), p("stopped")) : p("Peer score already stopped");
        }
        background() {
          this._refreshScores(), this._updateIPs(), this.deliveryRecords.gc();
        }
        _refreshScores() {
          const e2 = Date.now(), t2 = this.params.decayToZero;
          this.peerStats.forEach((r2, n2) => {
            r2.connected ? (Object.entries(r2.topics).forEach(([r3, n3]) => {
              const i2 = this.params.topics[r3];
              i2 && (n3.firstMessageDeliveries *= i2.firstMessageDeliveriesDecay, n3.firstMessageDeliveries < t2 && (n3.firstMessageDeliveries = 0), n3.meshMessageDeliveries *= i2.meshMessageDeliveriesDecay, n3.meshMessageDeliveries < t2 && (n3.meshMessageDeliveries = 0), n3.meshFailurePenalty *= i2.meshFailurePenaltyDecay, n3.meshFailurePenalty < t2 && (n3.meshFailurePenalty = 0), n3.invalidMessageDeliveries *= i2.invalidMessageDeliveriesDecay, n3.invalidMessageDeliveries < t2 && (n3.invalidMessageDeliveries = 0), n3.inMesh && (n3.meshTime = e2 - n3.graftTime, n3.meshTime > i2.meshMessageDeliveriesActivation && (n3.meshMessageDeliveriesActive = true)));
            }), r2.behaviourPenalty *= this.params.behaviourPenaltyDecay, r2.behaviourPenalty < t2 && (r2.behaviourPenalty = 0)) : e2 > r2.expire && (this._removeIPs(n2, r2.ips), this.peerStats.delete(n2));
          });
        }
        score(e2) {
          const t2 = this.peerStats.get(e2);
          return t2 ? o.computeScore(e2, t2, this.params, this.peerIPs) : 0;
        }
        addPenalty(e2, t2) {
          const r2 = this.peerStats.get(e2);
          r2 && (r2.behaviourPenalty += t2);
        }
        addPeer(e2) {
          const t2 = s.createPeerStats({connected: true});
          this.peerStats.set(e2, t2);
          const r2 = this._getIPs(e2);
          this._setIPs(e2, r2, t2.ips), t2.ips = r2;
        }
        removePeer(e2) {
          const t2 = this.peerStats.get(e2);
          if (t2) {
            if (this.score(e2) > 0)
              return this._removeIPs(e2, t2.ips), void this.peerStats.delete(e2);
            Object.entries(t2.topics).forEach(([e3, t3]) => {
              t3.firstMessageDeliveries = 0;
              const r2 = this.params.topics[e3].meshMessageDeliveriesThreshold;
              if (t3.inMesh && t3.meshMessageDeliveriesActive && t3.meshMessageDeliveries < r2) {
                const e4 = r2 - t3.meshMessageDeliveries;
                t3.meshFailurePenalty += e4 * e4;
              }
              t3.inMesh = false;
            }), t2.connected = false, t2.expire = Date.now() + this.params.retainScore;
          }
        }
        graft(e2, t2) {
          const r2 = this.peerStats.get(e2);
          if (!r2)
            return;
          const n2 = s.ensureTopicStats(t2, r2, this.params);
          n2 && (n2.inMesh = true, n2.graftTime = Date.now(), n2.meshTime = 0, n2.meshMessageDeliveriesActive = false);
        }
        prune(e2, t2) {
          const r2 = this.peerStats.get(e2);
          if (!r2)
            return;
          const n2 = s.ensureTopicStats(t2, r2, this.params);
          if (!n2)
            return;
          const i2 = this.params.topics[t2].meshMessageDeliveriesThreshold;
          if (n2.meshMessageDeliveriesActive && n2.meshMessageDeliveries < i2) {
            const e3 = i2 - n2.meshMessageDeliveries;
            n2.meshFailurePenalty += e3 * e3;
          }
          n2.inMesh = false;
        }
        validateMessage(e2) {
          this.deliveryRecords.ensureRecord(this.msgId(e2));
        }
        deliverMessage(e2) {
          const t2 = e2.receivedFrom;
          this._markFirstMessageDelivery(t2, e2);
          const r2 = this.deliveryRecords.ensureRecord(this.msgId(e2)), n2 = Date.now();
          r2.status === a.DeliveryRecordStatus.unknown ? (r2.status = a.DeliveryRecordStatus.valid, r2.validated = n2, r2.peers.forEach((r3) => {
            r3 !== t2 && this._markDuplicateMessageDelivery(r3, e2);
          })) : p("unexpected delivery: message from %s was first seen %s ago and has delivery status %d", t2, n2 - r2.firstSeen, a.DeliveryRecordStatus[r2.status]);
        }
        rejectMessage(e2, t2) {
          const r2 = e2.receivedFrom;
          switch (t2) {
            case l:
            case d:
              return void this._markInvalidMessageDelivery(r2, e2);
          }
          const n2 = this.deliveryRecords.ensureRecord(this.msgId(e2));
          if (n2.status === a.DeliveryRecordStatus.unknown) {
            switch (t2) {
              case c.ERR_TOPIC_VALIDATOR_IGNORE:
                return void (n2.status = a.DeliveryRecordStatus.ignored);
            }
            n2.status = a.DeliveryRecordStatus.invalid, this._markInvalidMessageDelivery(r2, e2), n2.peers.forEach((t3) => {
              this._markInvalidMessageDelivery(t3, e2);
            });
          } else
            p("unexpected rejection: message from %s was first seen %s ago and has delivery status %d", r2, Date.now() - n2.firstSeen, a.DeliveryRecordStatus[n2.status]);
        }
        duplicateMessage(e2) {
          const t2 = e2.receivedFrom, r2 = this.deliveryRecords.ensureRecord(this.msgId(e2));
          if (!r2.peers.has(t2))
            switch (r2.status) {
              case a.DeliveryRecordStatus.unknown:
                r2.peers.add(t2);
                break;
              case a.DeliveryRecordStatus.valid:
                r2.peers.add(t2), this._markDuplicateMessageDelivery(t2, e2, r2.validated);
                break;
              case a.DeliveryRecordStatus.invalid:
                this._markInvalidMessageDelivery(t2, e2);
            }
        }
        _markInvalidMessageDelivery(e2, t2) {
          const r2 = this.peerStats.get(e2);
          r2 && t2.topicIDs.forEach((e3) => {
            const t3 = s.ensureTopicStats(e3, r2, this.params);
            t3 && (t3.invalidMessageDeliveries += 1);
          });
        }
        _markFirstMessageDelivery(e2, t2) {
          const r2 = this.peerStats.get(e2);
          r2 && t2.topicIDs.forEach((e3) => {
            const t3 = s.ensureTopicStats(e3, r2, this.params);
            if (!t3)
              return;
            let n2 = this.params.topics[e3].firstMessageDeliveriesCap;
            t3.firstMessageDeliveries += 1, t3.firstMessageDeliveries > n2 && (t3.firstMessageDeliveries = n2), t3.inMesh && (n2 = this.params.topics[e3].meshMessageDeliveriesCap, t3.meshMessageDeliveries += 1, t3.meshMessageDeliveries > n2 && (t3.meshMessageDeliveries = n2));
          });
        }
        _markDuplicateMessageDelivery(e2, t2, r2 = 0) {
          const n2 = this.peerStats.get(e2);
          if (!n2)
            return;
          const i2 = r2 ? Date.now() : 0;
          t2.topicIDs.forEach((e3) => {
            const t3 = s.ensureTopicStats(e3, n2, this.params);
            if (!t3)
              return;
            if (!t3.inMesh)
              return;
            const o2 = this.params.topics[e3];
            if (r2 && i2 > r2 + o2.meshMessageDeliveriesWindow)
              return;
            const a2 = o2.meshMessageDeliveriesCap;
            t3.meshMessageDeliveries += 1, t3.meshMessageDeliveries > a2 && (t3.meshMessageDeliveries = a2);
          });
        }
        _getIPs(e2) {
          return this._connectionManager.getAll(u.default.createFromB58String(e2)).map((e3) => e3.remoteAddr.toOptions().host);
        }
        _setIPs(e2, t2, r2) {
          e:
            for (const n2 of t2) {
              for (const e3 of r2)
                if (n2 === e3)
                  continue e;
              let t3 = this.peerIPs.get(n2);
              t3 || (t3 = new Set(), this.peerIPs.set(n2, t3)), t3.add(e2);
            }
          e:
            for (const n2 of r2) {
              for (const e3 of t2)
                if (n2 === e3)
                  continue e;
              const r3 = this.peerIPs.get(n2);
              r3 && (r3.delete(e2), r3.size || this.peerIPs.delete(n2));
            }
        }
        _removeIPs(e2, t2) {
          t2.forEach((t3) => {
            const r2 = this.peerIPs.get(t3);
            r2 && (r2.delete(e2), r2.size || this.peerIPs.delete(t3));
          });
        }
        _updateIPs() {
          this.peerStats.forEach((e2, t2) => {
            const r2 = this._getIPs(t2);
            this._setIPs(t2, r2, e2.ips), e2.ips = r2;
          });
        }
      };
    }, function(e, t, r) {
      "use strict";
      function n(e2 = {}) {
        return Object.assign({inMesh: false, graftTime: 0, meshTime: 0, firstMessageDeliveries: 0, meshMessageDeliveries: 0, meshMessageDeliveriesActive: false, meshFailurePenalty: 0, invalidMessageDeliveries: 0}, e2);
      }
      Object.defineProperty(t, "__esModule", {value: true}), t.ensureTopicStats = t.createTopicStats = t.createPeerStats = void 0, t.createPeerStats = function(e2 = {}) {
        return Object.assign(Object.assign({connected: false, expire: 0, ips: [], behaviourPenalty: 0}, e2), {topics: e2.topics ? Object.entries(e2.topics).reduce((e3, [t2, r2]) => (e3[t2] = n(r2), e3), {}) : {}});
      }, t.createTopicStats = n, t.ensureTopicStats = function(e2, t2, r2) {
        let i = t2.topics[e2];
        return i || (r2.topics[e2] ? (t2.topics[e2] = i = n(), i) : void 0);
      };
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.computeScore = void 0, t.computeScore = function(e2, t2, r2, n) {
        let i = 0;
        Object.entries(t2.topics).forEach(([e3, t3]) => {
          const n2 = r2.topics[e3];
          if (!n2)
            return;
          let s2 = 0;
          if (t3.inMesh) {
            let e4 = t3.meshTime / n2.timeInMeshQuantum;
            e4 > n2.timeInMeshCap && (e4 = n2.timeInMeshCap), s2 += e4 * n2.timeInMeshWeight;
          }
          if (s2 += t3.firstMessageDeliveries * n2.firstMessageDeliveriesWeight, t3.meshMessageDeliveriesActive && t3.meshMessageDeliveries < n2.meshMessageDeliveriesThreshold) {
            const e4 = n2.meshMessageDeliveriesThreshold - t3.meshMessageDeliveries;
            s2 += e4 * e4 * n2.meshMessageDeliveriesWeight;
          }
          s2 += t3.meshFailurePenalty * n2.meshFailurePenaltyWeight;
          s2 += t3.invalidMessageDeliveries * t3.invalidMessageDeliveries * n2.invalidMessageDeliveriesWeight, i += s2 * n2.topicWeight;
        }), r2.topicScoreCap > 0 && i > r2.topicScoreCap && (i = r2.topicScoreCap);
        const s = r2.appSpecificScore(e2);
        i += s * r2.appSpecificWeight, t2.ips.forEach((e3) => {
          if (r2.IPColocationFactorWhitelist.has(e3))
            return;
          const t3 = n.get(e3), s2 = t3 ? t3.size : 0;
          if (s2 > r2.IPColocationFactorThreshold) {
            const e4 = s2 - r2.IPColocationFactorThreshold;
            i += e4 * e4 * r2.IPColocationFactorWeight;
          }
        });
        const o = t2.behaviourPenalty * t2.behaviourPenalty;
        return i += o * r2.behaviourPenaltyWeight, i;
      };
    }, function(e, t, r) {
      "use strict";
      var n = function(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      };
      Object.defineProperty(t, "__esModule", {value: true}), t.MessageDeliveries = t.DeliveryRecordStatus = void 0;
      const i = r(75), s = n(r(842)), o = r(74);
      var a;
      !function(e2) {
        e2[e2.unknown = 0] = "unknown", e2[e2.valid = 1] = "valid", e2[e2.invalid = 2] = "invalid", e2[e2.ignored = 3] = "ignored";
      }(a = t.DeliveryRecordStatus || (t.DeliveryRecordStatus = {}));
      t.MessageDeliveries = class {
        constructor() {
          this.records = new Map(), this.queue = new s.default();
        }
        ensureRecord(e2) {
          const t2 = o.messageIdToString(e2);
          let r2 = this.records.get(t2);
          if (r2)
            return r2;
          r2 = {status: a.unknown, firstSeen: Date.now(), validated: 0, peers: new Set()}, this.records.set(t2, r2);
          const n2 = {msgId: t2, expire: Date.now() + i.TimeCacheDuration};
          return this.queue.push(n2), r2;
        }
        gc() {
          const e2 = Date.now();
          let t2 = this.queue.peekFront();
          for (; t2 && t2.expire < e2; )
            this.records.delete(t2.msgId), this.queue.shift(), t2 = this.queue.peekFront();
        }
        clear() {
          this.records.clear(), this.queue.clear();
        }
      };
    }, function(e, t, r) {
      "use strict";
      function n(e2) {
        this._head = 0, this._tail = 0, this._capacityMask = 3, this._list = new Array(4), Array.isArray(e2) && this._fromArray(e2);
      }
      n.prototype.peekAt = function(e2) {
        var t2 = e2;
        if (t2 === (0 | t2)) {
          var r2 = this.size();
          if (!(t2 >= r2 || t2 < -r2))
            return t2 < 0 && (t2 += r2), t2 = this._head + t2 & this._capacityMask, this._list[t2];
        }
      }, n.prototype.get = function(e2) {
        return this.peekAt(e2);
      }, n.prototype.peek = function() {
        if (this._head !== this._tail)
          return this._list[this._head];
      }, n.prototype.peekFront = function() {
        return this.peek();
      }, n.prototype.peekBack = function() {
        return this.peekAt(-1);
      }, Object.defineProperty(n.prototype, "length", {get: function() {
        return this.size();
      }}), n.prototype.size = function() {
        return this._head === this._tail ? 0 : this._head < this._tail ? this._tail - this._head : this._capacityMask + 1 - (this._head - this._tail);
      }, n.prototype.unshift = function(e2) {
        if (e2 === void 0)
          return this.size();
        var t2 = this._list.length;
        return this._head = this._head - 1 + t2 & this._capacityMask, this._list[this._head] = e2, this._tail === this._head && this._growArray(), this._head < this._tail ? this._tail - this._head : this._capacityMask + 1 - (this._head - this._tail);
      }, n.prototype.shift = function() {
        var e2 = this._head;
        if (e2 !== this._tail) {
          var t2 = this._list[e2];
          return this._list[e2] = void 0, this._head = e2 + 1 & this._capacityMask, e2 < 2 && this._tail > 1e4 && this._tail <= this._list.length >>> 2 && this._shrinkArray(), t2;
        }
      }, n.prototype.push = function(e2) {
        if (e2 === void 0)
          return this.size();
        var t2 = this._tail;
        return this._list[t2] = e2, this._tail = t2 + 1 & this._capacityMask, this._tail === this._head && this._growArray(), this._head < this._tail ? this._tail - this._head : this._capacityMask + 1 - (this._head - this._tail);
      }, n.prototype.pop = function() {
        var e2 = this._tail;
        if (e2 !== this._head) {
          var t2 = this._list.length;
          this._tail = e2 - 1 + t2 & this._capacityMask;
          var r2 = this._list[this._tail];
          return this._list[this._tail] = void 0, this._head < 2 && e2 > 1e4 && e2 <= t2 >>> 2 && this._shrinkArray(), r2;
        }
      }, n.prototype.removeOne = function(e2) {
        var t2 = e2;
        if (t2 === (0 | t2) && this._head !== this._tail) {
          var r2 = this.size(), n2 = this._list.length;
          if (!(t2 >= r2 || t2 < -r2)) {
            t2 < 0 && (t2 += r2), t2 = this._head + t2 & this._capacityMask;
            var i, s = this._list[t2];
            if (e2 < r2 / 2) {
              for (i = e2; i > 0; i--)
                this._list[t2] = this._list[t2 = t2 - 1 + n2 & this._capacityMask];
              this._list[t2] = void 0, this._head = this._head + 1 + n2 & this._capacityMask;
            } else {
              for (i = r2 - 1 - e2; i > 0; i--)
                this._list[t2] = this._list[t2 = t2 + 1 + n2 & this._capacityMask];
              this._list[t2] = void 0, this._tail = this._tail - 1 + n2 & this._capacityMask;
            }
            return s;
          }
        }
      }, n.prototype.remove = function(e2, t2) {
        var r2, n2 = e2, i = t2;
        if (n2 === (0 | n2) && this._head !== this._tail) {
          var s = this.size(), o = this._list.length;
          if (!(n2 >= s || n2 < -s || t2 < 1)) {
            if (n2 < 0 && (n2 += s), t2 === 1 || !t2)
              return (r2 = new Array(1))[0] = this.removeOne(n2), r2;
            if (n2 === 0 && n2 + t2 >= s)
              return r2 = this.toArray(), this.clear(), r2;
            var a;
            for (n2 + t2 > s && (t2 = s - n2), r2 = new Array(t2), a = 0; a < t2; a++)
              r2[a] = this._list[this._head + n2 + a & this._capacityMask];
            if (n2 = this._head + n2 & this._capacityMask, e2 + t2 === s) {
              for (this._tail = this._tail - t2 + o & this._capacityMask, a = t2; a > 0; a--)
                this._list[n2 = n2 + 1 + o & this._capacityMask] = void 0;
              return r2;
            }
            if (e2 === 0) {
              for (this._head = this._head + t2 + o & this._capacityMask, a = t2 - 1; a > 0; a--)
                this._list[n2 = n2 + 1 + o & this._capacityMask] = void 0;
              return r2;
            }
            if (n2 < s / 2) {
              for (this._head = this._head + e2 + t2 + o & this._capacityMask, a = e2; a > 0; a--)
                this.unshift(this._list[n2 = n2 - 1 + o & this._capacityMask]);
              for (n2 = this._head - 1 + o & this._capacityMask; i > 0; )
                this._list[n2 = n2 - 1 + o & this._capacityMask] = void 0, i--;
              e2 < 0 && (this._tail = n2);
            } else {
              for (this._tail = n2, n2 = n2 + t2 + o & this._capacityMask, a = s - (t2 + e2); a > 0; a--)
                this.push(this._list[n2++]);
              for (n2 = this._tail; i > 0; )
                this._list[n2 = n2 + 1 + o & this._capacityMask] = void 0, i--;
            }
            return this._head < 2 && this._tail > 1e4 && this._tail <= o >>> 2 && this._shrinkArray(), r2;
          }
        }
      }, n.prototype.splice = function(e2, t2) {
        var r2 = e2;
        if (r2 === (0 | r2)) {
          var n2 = this.size();
          if (r2 < 0 && (r2 += n2), !(r2 > n2)) {
            if (arguments.length > 2) {
              var i, s, o, a = arguments.length, c = this._list.length, u = 2;
              if (!n2 || r2 < n2 / 2) {
                for (s = new Array(r2), i = 0; i < r2; i++)
                  s[i] = this._list[this._head + i & this._capacityMask];
                for (t2 === 0 ? (o = [], r2 > 0 && (this._head = this._head + r2 + c & this._capacityMask)) : (o = this.remove(r2, t2), this._head = this._head + r2 + c & this._capacityMask); a > u; )
                  this.unshift(arguments[--a]);
                for (i = r2; i > 0; i--)
                  this.unshift(s[i - 1]);
              } else {
                var h = (s = new Array(n2 - (r2 + t2))).length;
                for (i = 0; i < h; i++)
                  s[i] = this._list[this._head + r2 + t2 + i & this._capacityMask];
                for (t2 === 0 ? (o = [], r2 != n2 && (this._tail = this._head + r2 + c & this._capacityMask)) : (o = this.remove(r2, t2), this._tail = this._tail - h + c & this._capacityMask); u < a; )
                  this.push(arguments[u++]);
                for (i = 0; i < h; i++)
                  this.push(s[i]);
              }
              return o;
            }
            return this.remove(r2, t2);
          }
        }
      }, n.prototype.clear = function() {
        this._head = 0, this._tail = 0;
      }, n.prototype.isEmpty = function() {
        return this._head === this._tail;
      }, n.prototype.toArray = function() {
        return this._copyArray(false);
      }, n.prototype._fromArray = function(e2) {
        for (var t2 = 0; t2 < e2.length; t2++)
          this.push(e2[t2]);
      }, n.prototype._copyArray = function(e2) {
        var t2, r2 = [], n2 = this._list, i = n2.length;
        if (e2 || this._head > this._tail) {
          for (t2 = this._head; t2 < i; t2++)
            r2.push(n2[t2]);
          for (t2 = 0; t2 < this._tail; t2++)
            r2.push(n2[t2]);
        } else
          for (t2 = this._head; t2 < this._tail; t2++)
            r2.push(n2[t2]);
        return r2;
      }, n.prototype._growArray = function() {
        this._head && (this._list = this._copyArray(true), this._head = 0), this._tail = this._list.length, this._list.length *= 2, this._capacityMask = this._capacityMask << 1 | 1;
      }, n.prototype._shrinkArray = function() {
        this._list.length >>>= 1, this._capacityMask >>>= 1;
      }, e.exports = n;
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.IWantTracer = void 0;
      const n = r(75), i = r(74), s = r(189), {ERR_INVALID_SIGNATURE: o, ERR_MISSING_SIGNATURE: a} = s.codes;
      t.IWantTracer = class {
        constructor(e2) {
          this.getMsgId = e2, this.promises = new Map();
        }
        addPromise(e2, t2) {
          const r2 = t2[Math.floor(Math.random() * t2.length)], s2 = i.messageIdToString(r2);
          let o2 = this.promises.get(s2);
          o2 || (o2 = new Map(), this.promises.set(s2, o2)), o2.has(e2) || o2.set(e2, Date.now() + n.GossipsubIWantFollowupTime);
        }
        getBrokenPromises() {
          const e2 = Date.now(), t2 = new Map();
          return this.promises.forEach((r2, n2) => {
            r2.forEach((n3, i2) => {
              n3 < e2 && (t2.set(i2, (t2.get(i2) || 0) + 1), r2.delete(i2));
            }), r2.size || this.promises.delete(n2);
          }), t2;
        }
        deliverMessage(e2) {
          const t2 = this.getMsgId(e2), r2 = i.messageIdToString(t2);
          this.promises.delete(r2);
        }
        rejectMessage(e2, t2) {
          switch (t2) {
            case o:
            case a:
              return;
          }
          const r2 = this.getMsgId(e2), n2 = i.messageIdToString(r2);
          this.promises.delete(n2);
        }
        clear() {
          this.promises.clear();
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(845);
      e.exports = function e2(t2) {
        if (!(this instanceof e2))
          return new e2(t2);
        const r2 = (t2 = t2 || {}).validity || 30, i = new Map(), s = n(() => {
          i.forEach((e3, t3) => {
            const n2 = e3.validity || r2;
            (function(e4) {
              const t4 = new Date().getTime() - e4.getTime();
              return Math.floor(t4 / 1e3);
            })(e3.timestamp) > n2 && i.delete(t3);
          });
        }, 200);
        this.put = (e3, t3, r3) => {
          this.has(e3) || i.set(e3, {value: t3, timestamp: new Date(), validity: r3}), s();
        }, this.get = (e3) => {
          if (i.has(e3))
            return i.get(e3).value;
          throw new Error("key does not exist");
        }, this.has = (e3) => i.has(e3);
      };
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        var r2 = /^\s+|\s+$/g, n = /^[-+]0x[0-9a-f]+$/i, i = /^0b[01]+$/i, s = /^0o[0-7]+$/i, o = parseInt, a = typeof t2 == "object" && t2 && t2.Object === Object && t2, c = typeof self == "object" && self && self.Object === Object && self, u = a || c || Function("return this")(), h = Object.prototype.toString, f = Math.max, d = Math.min, l = function() {
          return u.Date.now();
        };
        function p(e2, t3, r3) {
          var n2, i2, s2, o2, a2, c2, u2 = 0, h2 = false, p2 = false, b = true;
          if (typeof e2 != "function")
            throw new TypeError("Expected a function");
          function m(t4) {
            var r4 = n2, s3 = i2;
            return n2 = i2 = void 0, u2 = t4, o2 = e2.apply(s3, r4);
          }
          function v(e3) {
            return u2 = e3, a2 = setTimeout(_, t3), h2 ? m(e3) : o2;
          }
          function w(e3) {
            var r4 = e3 - c2;
            return c2 === void 0 || r4 >= t3 || r4 < 0 || p2 && e3 - u2 >= s2;
          }
          function _() {
            var e3 = l();
            if (w(e3))
              return E(e3);
            a2 = setTimeout(_, function(e4) {
              var r4 = t3 - (e4 - c2);
              return p2 ? d(r4, s2 - (e4 - u2)) : r4;
            }(e3));
          }
          function E(e3) {
            return a2 = void 0, b && n2 ? m(e3) : (n2 = i2 = void 0, o2);
          }
          function S() {
            var e3 = l(), r4 = w(e3);
            if (n2 = arguments, i2 = this, c2 = e3, r4) {
              if (a2 === void 0)
                return v(c2);
              if (p2)
                return a2 = setTimeout(_, t3), m(c2);
            }
            return a2 === void 0 && (a2 = setTimeout(_, t3)), o2;
          }
          return t3 = g(t3) || 0, y(r3) && (h2 = !!r3.leading, s2 = (p2 = "maxWait" in r3) ? f(g(r3.maxWait) || 0, t3) : s2, b = "trailing" in r3 ? !!r3.trailing : b), S.cancel = function() {
            a2 !== void 0 && clearTimeout(a2), u2 = 0, n2 = c2 = i2 = a2 = void 0;
          }, S.flush = function() {
            return a2 === void 0 ? o2 : E(l());
          }, S;
        }
        function y(e2) {
          var t3 = typeof e2;
          return !!e2 && (t3 == "object" || t3 == "function");
        }
        function g(e2) {
          if (typeof e2 == "number")
            return e2;
          if (function(e3) {
            return typeof e3 == "symbol" || function(e4) {
              return !!e4 && typeof e4 == "object";
            }(e3) && h.call(e3) == "[object Symbol]";
          }(e2))
            return NaN;
          if (y(e2)) {
            var t3 = typeof e2.valueOf == "function" ? e2.valueOf() : e2;
            e2 = y(t3) ? t3 + "" : t3;
          }
          if (typeof e2 != "string")
            return e2 === 0 ? e2 : +e2;
          e2 = e2.replace(r2, "");
          var a2 = i.test(e2);
          return a2 || s.test(e2) ? o(e2.slice(2), a2 ? 2 : 8) : n.test(e2) ? NaN : +e2;
        }
        e.exports = function(e2, t3, r3) {
          var n2 = true, i2 = true;
          if (typeof e2 != "function")
            throw new TypeError("Expected a function");
          return y(r3) && (n2 = "leading" in r3 ? !!r3.leading : n2, i2 = "trailing" in r3 ? !!r3.trailing : i2), p(e2, t3, {leading: n2, maxWait: t3, trailing: i2});
        };
      }).call(this, r(12));
    }, function(e, t, r) {
      "use strict";
      e.exports = {encode: r(847), decode: r(848), encodingLength: r(849)};
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2, i) {
        r2 = r2 || [];
        var s = i = i || 0;
        for (; t2 >= n; )
          r2[i++] = 255 & t2 | 128, t2 /= 128;
        for (; -128 & t2; )
          r2[i++] = 255 & t2 | 128, t2 >>>= 7;
        return r2[i] = 0 | t2, e2.bytes = i - s + 1, r2;
      };
      var n = Math.pow(2, 31);
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2) {
        var n, i = 0, s = 0, o = r2 = r2 || 0, a = t2.length;
        do {
          if (o >= a)
            throw e2.bytes = 0, new RangeError("Could not decode varint");
          n = t2[o++], i += s < 28 ? (127 & n) << s : (127 & n) * Math.pow(2, s), s += 7;
        } while (n >= 128);
        return e2.bytes = o - r2, i;
      };
    }, function(e, t, r) {
      "use strict";
      var n = Math.pow(2, 7), i = Math.pow(2, 14), s = Math.pow(2, 21), o = Math.pow(2, 28), a = Math.pow(2, 35), c = Math.pow(2, 42), u = Math.pow(2, 49), h = Math.pow(2, 56), f = Math.pow(2, 63);
      e.exports = function(e2) {
        return e2 < n ? 1 : e2 < i ? 2 : e2 < s ? 3 : e2 < o ? 4 : e2 < a ? 5 : e2 < c ? 6 : e2 < u ? 7 : e2 < h ? 8 : e2 < f ? 9 : 10;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(20);
      e.exports = n("\nmessage Envelope {\n  // public_key is the public key of the keypair the enclosed payload was\n  // signed with.\n  bytes public_key = 1;\n\n  // payload_type encodes the type of payload, so that it can be deserialized\n  // deterministically.\n  bytes payload_type = 2;\n\n  // payload is the actual payload carried inside this envelope.\n  bytes payload = 3;\n\n  // signature is the signature produced by the private key corresponding to\n  // the enclosed public key, over the payload, prefixing a domain string for\n  // additional security.\n  bytes signature = 5;\n}\n").Envelope;
    }, function(e, t, r) {
      "use strict";
      const {EventEmitter: n} = r(14), i = r(1), s = r(192), o = i("libp2p");
      o.error = i("libp2p:error");
      const a = r(0), c = r(7), u = r(852), h = r(859), f = r(331), {validate: d} = r(860), {codes: l, messages: p} = r(26), y = r(872), g = r(873), b = r(876), m = r(880), v = r(884), w = r(896), _ = r(334), E = r(899), S = r(343), A = r(915), I = r(916), k = r(920), R = r(922), {IdentifyService: T, multicodecs: C} = r(924);
      class M extends n {
        constructor(e2) {
          if (super(), this._options = d(e2), this.peerId = this._options.peerId, this.datastore = this._options.datastore, this.peerStore = this.datastore && this._options.peerStore.persistence ? new I({peerId: this.peerId, datastore: this.datastore, ...this._options.peerStore}) : new S({peerId: this.peerId}), this.addresses = this._options.addresses, this.addressManager = new y(this._options.addresses), this._modules = this._options.modules, this._config = this._options.config, this._transport = [], this._discovery = new Map(), this._options.connectionManager.minPeers && (this._options.connectionManager.minConnections = this._options.connectionManager.minPeers), this.connectionManager = new g(this, {autoDial: this._config.peerDiscovery.autoDial, ...this._options.connectionManager}), this._options.metrics.enabled && (this.metrics = new w({...this._options.metrics, connectionManager: this.connectionManager})), this._options.keychain && this._options.keychain.datastore) {
            o("creating keychain");
            const e3 = v.generateOptions();
            this.keychain = new v(this._options.keychain.datastore, {passPhrase: this._options.keychain.pass, ...e3, ...this._options.keychain}), o("keychain constructed");
          }
          if (this.upgrader = new E({localPeer: this.peerId, metrics: this.metrics, onConnection: (e3) => this.connectionManager.onConnect(e3), onConnectionEnd: (e3) => this.connectionManager.onDisconnect(e3)}), this.transportManager = new _({libp2p: this, upgrader: this.upgrader, faultTolerance: this._options.transportManager.faultTolerance}), this.registrar = new k({peerStore: this.peerStore, connectionManager: this.connectionManager}), this.handle = this.handle.bind(this), this.registrar.handle = this.handle, !this._modules.connEncryption || !this._modules.connEncryption.length)
            throw a(new Error(p.CONN_ENCRYPTION_REQUIRED), l.CONN_ENCRYPTION_REQUIRED);
          if (this._modules.connEncryption.forEach((e3) => {
            this.upgrader.cryptos.set(e3.protocol, e3);
          }), this.dialer = new m({transportManager: this.transportManager, peerStore: this.peerStore, concurrency: this._options.dialer.maxParallelDials, perPeerLimit: this._options.dialer.maxDialsPerPeer, timeout: this._options.dialer.dialTimeout, resolvers: this._options.dialer.resolvers}), this._modules.transport.forEach((e3) => {
            const t2 = e3.prototype[Symbol.toStringTag], r2 = this._config.transport[t2];
            this.transportManager.add(t2, e3, r2);
          }), this._config.relay.enabled && this.transportManager.add(b.prototype[Symbol.toStringTag], b), this._modules.streamMuxer) {
            this._modules.streamMuxer.forEach((e3) => {
              this.upgrader.muxers.set(e3.multicodec, e3);
            }), this.identifyService = new T({libp2p: this, protocols: this.upgrader.protocols}), this.handle(Object.values(C), this.identifyService.handleMessage);
          }
          if (this._modules.connProtector)
            this.upgrader.protector = this._modules.connProtector;
          else if (s.process !== void 0 && s.process.env && s.process.env.LIBP2P_FORCE_PNET)
            throw new Error("Private network is enforced, but no protector was provided");
          if (this._modules.dht) {
            const e3 = this._modules.dht;
            this._dht = new e3({libp2p: this, dialer: this.dialer, peerId: this.peerId, peerStore: this.peerStore, registrar: this.registrar, datastore: this.datastore, ...this._config.dht});
          }
          if (this._modules.pubsub) {
            const e3 = this._modules.pubsub;
            this.pubsub = A(e3, this, this._config.pubsub);
          }
          this.peerRouting = u(this), this.contentRouting = h(this), R.mount(this), this._onDiscoveryPeer = this._onDiscoveryPeer.bind(this);
        }
        emit(e2, ...t2) {
          e2 !== "error" || this._events.error ? super.emit(e2, ...t2) : o.error(...t2);
        }
        async start() {
          o("libp2p is starting");
          try {
            await this._onStarting(), await this._onDidStart(), o("libp2p has started");
          } catch (e2) {
            throw this.emit("error", e2), o.error("An error occurred starting libp2p", e2), await this.stop(), e2;
          }
        }
        async stop() {
          o("libp2p is stopping");
          try {
            for (const e2 of this._discovery.values())
              e2.removeListener("peer", this._onDiscoveryPeer);
            await Promise.all(Array.from(this._discovery.values(), (e2) => e2.stop())), this._discovery = new Map(), await this.peerStore.stop(), await this.connectionManager.stop(), await Promise.all([this.pubsub && this.pubsub.stop(), this._dht && this._dht.stop(), this.metrics && this.metrics.stop()]), await this.transportManager.close(), R.unmount(this), this.dialer.destroy();
          } catch (e2) {
            e2 && (o.error(e2), this.emit("error", e2));
          }
          this._isStarted = false, o("libp2p has stopped");
        }
        async loadKeychain() {
          try {
            await this.keychain.findKeyByName("self");
          } catch (e2) {
            await this.keychain.importPeer("self", this.peerId);
          }
        }
        isStarted() {
          return this._isStarted;
        }
        get connections() {
          return this.connectionManager.connections;
        }
        dial(e2, t2) {
          return this.dialProtocol(e2, null, t2);
        }
        async dialProtocol(e2, t2, r2) {
          const {id: n2, multiaddrs: i2} = f(e2);
          if (n2.equals(this.peerId))
            throw a(new Error("Cannot dial self"), l.ERR_DIALED_SELF);
          let s2 = this.connectionManager.get(n2);
          return s2 ? i2 && this.peerStore.addressBook.add(n2, i2) : s2 = await this.dialer.connectToPeer(e2, r2), t2 ? s2.newStream(t2) : s2;
        }
        get multiaddrs() {
          const e2 = this.addressManager.getNoAnnounceAddrs();
          return this.transportManager.getAddrs().concat(this.addressManager.getAnnounceAddrs()).filter((t2, r2, n2) => n2.findIndex((e3) => e3.equals(t2)) === r2 && !e2.find((e3) => e3.equals(t2)));
        }
        async hangUp(e2) {
          const {id: t2} = f(e2), r2 = this.connectionManager.connections.get(t2.toB58String());
          r2 && await Promise.all(r2.map((e3) => e3.close()));
        }
        ping(e2) {
          const {id: t2, multiaddrs: r2} = f(e2);
          return R(this, r2 ? r2[0] : t2);
        }
        handle(e2, t2) {
          (e2 = Array.isArray(e2) ? e2 : [e2]).forEach((e3) => {
            this.upgrader.protocols.set(e3, t2);
          }), this.isStarted() && this.identifyService && this.identifyService.pushToPeerStore(this.peerStore);
        }
        unhandle(e2) {
          (e2 = Array.isArray(e2) ? e2 : [e2]).forEach((e3) => {
            this.upgrader.protocols.delete(e3);
          }), this.isStarted() && this.identifyService && this.identifyService.pushToPeerStore(this.peerStore);
        }
        async _onStarting() {
          await this.transportManager.listen(), await this.peerStore.start(), this._config.pubsub.enabled && this.pubsub && this.pubsub.start(), this._config.dht.enabled && (this._dht && this._dht.start(), this._dht.on("peer", this._onDiscoveryPeer)), this.metrics && this.metrics.start();
        }
        async _onDidStart() {
          this._isStarted = true, this.peerStore.on("peer", (e2) => {
            this.emit("peer:discovery", e2), this._maybeConnect(e2);
          });
          for (const e2 of this.peerStore.peers.values())
            this.emit("peer:discovery", e2.id);
          this.connectionManager.start(), await this._setupPeerDiscovery();
        }
        _onDiscoveryPeer(e2) {
          e2.id.toB58String() !== this.peerId.toB58String() ? (e2.multiaddrs && this.peerStore.addressBook.add(e2.id, e2.multiaddrs), e2.protocols && this.peerStore.protoBook.set(e2.id, e2.protocols)) : o.error(new Error(l.ERR_DISCOVERED_SELF));
        }
        async _maybeConnect(e2) {
          if (this._config.peerDiscovery.autoDial === true && !this.connectionManager.get(e2)) {
            if ((this._options.connectionManager.minConnections || 0) > this.connectionManager.size) {
              o("connecting to discovered peer %s", e2.toB58String());
              try {
                await this.dialer.connectToPeer(e2);
              } catch (t2) {
                o.error("could not connect to discovered peer", t2);
              }
            }
          }
        }
        async _setupPeerDiscovery() {
          const e2 = (e3) => {
            let t2 = {enabled: true};
            if (e3.tag && this._config.peerDiscovery && this._config.peerDiscovery[e3.tag] && (t2 = {...t2, ...this._config.peerDiscovery[e3.tag]}), t2.enabled && !this._discovery.has(e3.tag)) {
              let r2;
              r2 = typeof e3 == "function" ? new e3(Object.assign({}, t2, {peerId: this.peerId, libp2p: this})) : e3, r2.on("peer", this._onDiscoveryPeer), this._discovery.set(e3.tag, r2);
            }
          };
          for (const t2 of this._modules.peerDiscovery || [])
            e2(t2);
          for (const t2 of this.transportManager.getTransports())
            t2.discovery && e2(t2.discovery);
          await Promise.all(Array.from(this._discovery.values(), (e3) => e3.start()));
        }
      }
      M.create = async function(e2 = {}) {
        if (e2.peerId)
          return new M(e2);
        const t2 = await c.create();
        return e2.peerId = t2, new M(e2);
      }, e.exports = M;
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(193);
      e.exports = (e2) => {
        const t2 = e2._modules.peerRouting || [];
        return e2._dht && t2.unshift(e2._dht), {findPeer: async (e3, r2) => {
          if (!t2.length)
            throw n(new Error("No peer routers available"), "NO_ROUTERS_AVAILABLE");
          return i(t2.map(async (t3) => {
            const i2 = await t3.findPeer(e3, r2);
            if (!i2 || Object.keys(i2).length === 0)
              throw n(new Error("not found"), "NOT_FOUND");
            return i2;
          }));
        }};
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(330), i = r(857);
      class s extends Error {
      }
      e.exports = (e2, t2) => new i((r2, i2, o) => {
        const {count: a, filter: c = () => true} = t2;
        if (!Number.isFinite(a))
          return void i2(new TypeError("Expected a finite number, got " + typeof t2.count));
        const u = [], h = [];
        let f = 0, d = false;
        const l = new Set(), p = () => {
          for (const t3 of e2)
            l.has(t3) || typeof t3.cancel != "function" || t3.cancel();
        };
        o(p);
        for (const t3 of e2)
          f++, (async () => {
            try {
              const e3 = await t3;
              if (d)
                return;
              if (!c(e3))
                throw new s("Value does not satisfy filter");
              u.push(e3);
            } catch (e3) {
              h.push(e3);
            } finally {
              l.add(t3), !d && (u.length === a && (r2(u), d = true), f - h.length < a && (i2(new n(h)), d = true), d) && p();
            }
          })();
        a > f && (i2(new RangeError(`Expected input to contain at least ${t2.count} items, but contains ${f} items`)), p());
      }), e.exports.AggregateError = n, e.exports.FilterError = s;
    }, function(e, t, r) {
      "use strict";
      e.exports = (e2, t2 = 1, r2) => {
        if (r2 = {indent: " ", includeEmptyLines: false, ...r2}, typeof e2 != "string")
          throw new TypeError(`Expected \`input\` to be a \`string\`, got \`${typeof e2}\``);
        if (typeof t2 != "number")
          throw new TypeError(`Expected \`count\` to be a \`number\`, got \`${typeof t2}\``);
        if (typeof r2.indent != "string")
          throw new TypeError(`Expected \`options.indent\` to be a \`string\`, got \`${typeof r2.indent}\``);
        if (t2 === 0)
          return e2;
        const n = r2.includeEmptyLines ? /^/gm : /^(?!\s*$)/gm;
        return e2.replace(n, r2.indent.repeat(t2));
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(856), i = /\s+at.*(?:\(|\s)(.*)\)?/, s = /^(?:(?:(?:node|(?:internal\/[\w/]*|.*node_modules\/(?:babel-polyfill|pirates)\/.*)?\w+)\.js:\d+:\d+)|native)/, o = n.homedir === void 0 ? "" : n.homedir();
      e.exports = (e2, t2) => (t2 = Object.assign({pretty: false}, t2), e2.replace(/\\/g, "/").split("\n").filter((e3) => {
        const t3 = e3.match(i);
        if (t3 === null || !t3[1])
          return true;
        const r2 = t3[1];
        return !r2.includes(".app/Contents/Resources/electron.asar") && !r2.includes(".app/Contents/Resources/default_app.asar") && !s.test(r2);
      }).filter((e3) => e3.trim() !== "").map((e3) => t2.pretty ? e3.replace(i, (e4, t3) => e4.replace(t3, t3.replace(o, "~"))) : e3).join("\n"));
    }, function(e, t) {
    }, function(e, t, r) {
      "use strict";
      class n extends Error {
        constructor(e2) {
          super(e2 || "Promise was canceled"), this.name = "CancelError";
        }
        get isCanceled() {
          return true;
        }
      }
      class i {
        static fn(e2) {
          return (...t2) => new i((r2, n2, i2) => {
            t2.push(i2), e2(...t2).then(r2, n2);
          });
        }
        constructor(e2) {
          this._cancelHandlers = [], this._isPending = true, this._isCanceled = false, this._rejectOnCancel = true, this._promise = new Promise((t2, r2) => {
            this._reject = r2;
            const n2 = (e3) => {
              if (!this._isPending)
                throw new Error("The `onCancel` handler was attached after the promise settled.");
              this._cancelHandlers.push(e3);
            };
            return Object.defineProperties(n2, {shouldReject: {get: () => this._rejectOnCancel, set: (e3) => {
              this._rejectOnCancel = e3;
            }}}), e2((e3) => {
              this._isPending = false, t2(e3);
            }, (e3) => {
              this._isPending = false, r2(e3);
            }, n2);
          });
        }
        then(e2, t2) {
          return this._promise.then(e2, t2);
        }
        catch(e2) {
          return this._promise.catch(e2);
        }
        finally(e2) {
          return this._promise.finally(e2);
        }
        cancel(e2) {
          if (this._isPending && !this._isCanceled) {
            if (this._cancelHandlers.length > 0)
              try {
                for (const e3 of this._cancelHandlers)
                  e3();
              } catch (t2) {
                this._reject(t2);
              }
            this._isCanceled = true, this._rejectOnCancel && this._reject(new n(e2));
          }
        }
        get isCanceled() {
          return this._isCanceled;
        }
      }
      Object.setPrototypeOf(i.prototype, Promise.prototype), e.exports = i, e.exports.CancelError = n;
    }, function(e, t, r) {
      "use strict";
      class n extends Error {
        constructor(e2) {
          super(e2 || "Promise was canceled"), this.name = "CancelError";
        }
        get isCanceled() {
          return true;
        }
      }
      class i {
        static fn(e2) {
          return (...t2) => new i((r2, n2, i2) => {
            t2.push(i2), e2(...t2).then(r2, n2);
          });
        }
        constructor(e2) {
          this._cancelHandlers = [], this._isPending = true, this._isCanceled = false, this._rejectOnCancel = true, this._promise = new Promise((t2, r2) => {
            this._reject = r2;
            const n2 = (e3) => {
              if (!this._isPending)
                throw new Error("The `onCancel` handler was attached after the promise settled.");
              this._cancelHandlers.push(e3);
            };
            return Object.defineProperties(n2, {shouldReject: {get: () => this._rejectOnCancel, set: (e3) => {
              this._rejectOnCancel = e3;
            }}}), e2((e3) => {
              this._isPending = false, t2(e3);
            }, (e3) => {
              this._isPending = false, r2(e3);
            }, n2);
          });
        }
        then(e2, t2) {
          return this._promise.then(e2, t2);
        }
        catch(e2) {
          return this._promise.catch(e2);
        }
        finally(e2) {
          return this._promise.finally(e2);
        }
        cancel(e2) {
          if (this._isPending && !this._isCanceled) {
            if (this._cancelHandlers.length > 0)
              try {
                for (const e3 of this._cancelHandlers)
                  e3();
              } catch (t2) {
                this._reject(t2);
              }
            this._isCanceled = true, this._rejectOnCancel && this._reject(new n(e2));
          }
        }
        get isCanceled() {
          return this._isCanceled;
        }
      }
      Object.setPrototypeOf(i.prototype, Promise.prototype), e.exports = i, e.exports.CancelError = n;
    }, function(e, t, r) {
      "use strict";
      const n = r(0), {messages: i, codes: s} = r(26), o = r(84), a = r(193);
      e.exports = (e2) => {
        const t2 = e2._modules.contentRouting || [], r2 = e2._dht;
        return r2 && t2.unshift(r2), {async *findProviders(e3, r3) {
          if (!t2.length)
            throw n(new Error("No content routers available"), "NO_ROUTERS_AVAILABLE");
          const i2 = await a(t2.map(async (t3) => {
            const i3 = await o(t3.findProviders(e3, r3));
            if (!i3 || !i3.length)
              throw n(new Error("not found"), "NOT_FOUND");
            return i3;
          }));
          for (const t3 of i2)
            yield t3;
        }, async provide(e3) {
          if (!t2.length)
            throw n(new Error("No content routers available"), "NO_ROUTERS_AVAILABLE");
          return Promise.all(t2.map((t3) => t3.provide(e3)));
        }, async put(t3, o2, a2) {
          if (!e2.isStarted() || !r2.isStarted)
            throw n(new Error(i.NOT_STARTED_YET), s.DHT_NOT_STARTED);
          return r2.put(t3, o2, a2);
        }, async get(t3, o2) {
          if (!e2.isStarted() || !r2.isStarted)
            throw n(new Error(i.NOT_STARTED_YET), s.DHT_NOT_STARTED);
          return r2.get(t3, o2);
        }, async getMany(t3, o2, a2) {
          if (!e2.isStarted() || !r2.isStarted)
            throw n(new Error(i.NOT_STARTED_YET), s.DHT_NOT_STARTED);
          return r2.getMany(t3, o2, a2);
        }};
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(23), {dnsaddrResolver: i} = r(861), s = r(194), {AGENT_VERSION: o} = r(333), {FaultTolerance: a} = r(334), c = {addresses: {listen: [], announce: [], noAnnounce: []}, connectionManager: {minConnections: 25}, transportManager: {faultTolerance: a.FATAL_ALL}, dialer: {maxParallelDials: s.MAX_PARALLEL_DIALS, maxDialsPerPeer: s.MAX_PER_PEER_DIALS, dialTimeout: s.DIAL_TIMEOUT, resolvers: {dnsaddr: i}}, host: {agentVersion: o}, metrics: {enabled: false}, peerStore: {persistence: false, threshold: 5}, config: {dht: {enabled: false, kBucketSize: 20, randomWalk: {enabled: false, queriesPerPeriod: 1, interval: 3e5, timeout: 1e4}}, peerDiscovery: {autoDial: true}, pubsub: {enabled: true, emitSelf: true, signMessages: true, strictSigning: true}, relay: {enabled: true, hop: {enabled: false, active: false}}, transport: {}}};
      e.exports.validate = (e2) => {
        if ((e2 = n(c, e2)).modules.transport.length < 1)
          throw new Error("'options.modules.transport' must contain at least 1 transport");
        return e2;
      };
    }, function(e, t, r) {
      "use strict";
      r(11);
      const n = r(105), {code: i} = n("dnsaddr");
      e.exports = {dnsaddrResolver: async function(e2) {
        const {Resolver: t2} = r(862), n2 = new t2(), s = e2.getPeerId(), [, o] = e2.stringTuples().find(([e3]) => e3 === i) || [];
        let a = (await n2.resolveTxt("_dnsaddr." + o)).flat().map((e3) => e3.split("=")[1]);
        return s && (a = a.filter((e3) => e3.includes(s))), a;
      }};
    }, function(e, t, r) {
      "use strict";
      let n;
      try {
        if (n = r(863).promises, !n)
          throw new Error("no dns available");
      } catch (i) {
        n = r(864);
      }
      e.exports = n;
    }, function(e, t) {
    }, function(e, t, r) {
      "use strict";
      const n = r(1), i = n("dns-over-http-resolver");
      i.error = n("dns-over-http-resolver:error");
      const s = r(865), {buildResource: o, fetch: a, getCacheKey: c} = r(866);
      class u {
        constructor({maxCache: e2 = 100} = {}) {
          this._cache = new s({max: e2}), this._servers = ["https://cloudflare-dns.com/dns-query", "https://dns.google/resolve"];
        }
        getServers() {
          return this._servers;
        }
        _getShuffledServers() {
          const e2 = [].concat(this._servers);
          for (let t2 = e2.length - 1; t2 > 0; t2--) {
            const r2 = Math.floor(Math.random() * t2), n2 = e2[t2];
            e2[t2] = e2[r2], e2[r2] = n2;
          }
          return e2;
        }
        setServers(e2) {
          this._servers = e2;
        }
        resolve(e2, t2 = "A") {
          switch (t2) {
            case "A":
              return this.resolve4(e2);
            case "AAAA":
              return this.resolve6(e2);
            case "TXT":
              return this.resolveTxt(e2);
            default:
              throw new Error(t2 + " is not supported");
          }
        }
        async resolve4(e2) {
          const t2 = this._cache.get(c(e2, "A"));
          if (t2)
            return t2;
          for (const n2 of this._getShuffledServers())
            try {
              const t3 = await a(o({serverResolver: n2, hostname: e2, recordType: "A"})), r2 = await t3.json(), i2 = r2.Answer.map((e3) => e3.data), s2 = Math.min(r2.Answer.map((e3) => e3.TTL));
              return this._cache.set(c(e2, "A"), i2, {ttl: s2}), i2;
            } catch (r2) {
              i.error(`${n2} could not resolve ${e2} record A`);
            }
          throw new Error(`Could not resolve ${e2} record A`);
        }
        async resolve6(e2) {
          const t2 = this._cache.get(c(e2, "AAAA"));
          if (t2)
            return t2;
          for (const n2 of this._getShuffledServers())
            try {
              const t3 = await a(o({serverResolver: n2, hostname: e2, recordType: "AAAA"})), r2 = await t3.json(), i2 = r2.Answer.map((e3) => e3.data), s2 = Math.min(r2.Answer.map((e3) => e3.TTL));
              return this._cache.set(c(e2, "AAAA"), i2, {ttl: s2}), i2;
            } catch (r2) {
              i.error(`${n2} could not resolve ${e2} record AAAA`);
            }
          throw new Error(`Could not resolve ${e2} record AAAA`);
        }
        async resolveTxt(e2) {
          const t2 = this._cache.get(c(e2, "TXT"));
          if (t2)
            return t2;
          for (const n2 of this._getShuffledServers())
            try {
              const t3 = await a(o({serverResolver: n2, hostname: e2, recordType: "TXT"})), r2 = await t3.json(), i2 = r2.Answer.map((e3) => [e3.data.replace(/['"]+/g, "")]), s2 = Math.min(r2.Answer.map((e3) => e3.TTL));
              return this._cache.set(c(e2, "TXT"), i2, {ttl: s2}), i2;
            } catch (r2) {
              i.error(`${n2} could not resolve ${e2} record TXT`);
            }
          throw new Error(`Could not resolve ${e2} record TXT`);
        }
      }
      u.Resolver = u, e.exports = u;
    }, function(e, t, r) {
      "use strict";
      e.exports = o;
      var n = r(332), i = o.prototype, s = new Date() % 1e9;
      function o(e2) {
        e2 = e2 || {}, this.id = e2.id || (1e9 * Math.random() >>> 0) + s++, this.max = e2.max || 1 / 0, this.items = e2.items || [], this._lookup = {}, this.size = this.items.length, this.lastModified = new Date(e2.lastModified || new Date());
        for (var t2, r2, n2 = this.items.length; n2--; )
          t2 = this.items[n2], r2 = new Date(t2.expires) - new Date(), this._lookup[t2.key] = t2, r2 > 0 ? this.expire(t2.key, r2) : r2 <= 0 && this.delete(t2.key);
      }
      i.has = function(e2) {
        return e2 in this._lookup;
      }, i.get = function(e2) {
        if (!this.has(e2))
          return null;
        var t2 = this._lookup[e2];
        return t2.refresh && this.expire(e2, t2.refresh), this.items.splice(this.items.indexOf(t2), 1), this.items.push(t2), t2.value;
      }, i.meta = function(e2) {
        if (!this.has(e2))
          return null;
        var t2 = this._lookup[e2];
        return "meta" in t2 ? t2.meta : null;
      }, i.set = function(e2, t2, r2) {
        var n2 = this._lookup[e2], i2 = this._lookup[e2] = {key: e2, value: t2};
        return this.lastModified = new Date(), n2 ? (clearTimeout(n2.timeout), this.items.splice(this.items.indexOf(n2), 1, i2)) : (this.size >= this.max && this.delete(this.items[0].key), this.items.push(i2), this.size++), r2 && ("ttl" in r2 && this.expire(e2, r2.ttl), "meta" in r2 && (i2.meta = r2.meta), r2.refresh && (i2.refresh = r2.ttl)), this;
      }, i.delete = function(e2) {
        var t2 = this._lookup[e2];
        return !!t2 && (this.lastModified = new Date(), this.items.splice(this.items.indexOf(t2), 1), clearTimeout(t2.timeout), delete this._lookup[e2], this.size--, this);
      }, i.expire = function(e2, t2) {
        var r2 = t2 || 0, i2 = this._lookup[e2];
        if (!i2)
          return this;
        if (typeof r2 == "string" && (r2 = n(t2)), typeof r2 != "number")
          throw new TypeError("Expiration time must be a string or number.");
        return clearTimeout(i2.timeout), i2.timeout = setTimeout(this.delete.bind(this, i2.key), r2), i2.expires = Number(new Date()) + r2, this;
      }, i.clear = function() {
        for (var e2 = this.items.length; e2--; )
          this.delete(this.items[e2].key);
        return this;
      }, i.toJSON = function() {
        for (var e2, t2 = new Array(this.items.length), r2 = t2.length; r2--; )
          e2 = this.items[r2], t2[r2] = {key: e2.key, meta: e2.meta, value: e2.value, expires: e2.expires, refresh: e2.refresh};
        return {id: this.id, max: isFinite(this.max) ? this.max : void 0, lastModified: this.lastModified, items: t2};
      };
    }, function(e, t, r) {
      "use strict";
      const {default: n, Headers: i} = r(216);
      e.exports.buildResource = function({serverResolver: e2, hostname: t2, recordType: r2}) {
        return `${e2}?name=${t2}&type=${r2}`;
      }, e.exports.fetch = function(e2) {
        return n(e2, {headers: new i({accept: "application/dns-json"})});
      }, e.exports.getCacheKey = function(e2, t2) {
        return `${t2}_${e2}`;
      };
    }, function(e) {
      e.exports = JSON.parse('{"_from":"libp2p@^0.29.3","_id":"libp2p@0.29.4","_inBundle":false,"_integrity":"sha512-RACD3rvhgBTcLDtILwN8lE2z3GV5OCR1Se/wQ9UPYArSImsoikKjGQMvW0vZl9W3adUqmJOUs7CJWTUvdTAOpw==","_location":"/libp2p","_phantomChildren":{"abort-controller":"3.0.0","abortable-iterator":"3.0.0","at-least-node":"1.0.0","base64-js":"1.5.1","chai":"4.2.0","chai-checkmark":"1.0.1","class-is":"1.1.0","debug":"4.3.1","delay":"4.4.0","detect-node":"2.0.4","dirty-chai":"2.0.1","err-code":"2.0.3","graceful-fs":"4.2.4","ieee754":"1.2.1","is-electron":"2.2.0","it-goodbye":"2.0.2","it-length-prefixed":"3.1.0","it-pair":"1.0.0","it-pipe":"1.1.0","it-pushable":"1.4.0","it-to-stream":"0.1.2","libp2p-crypto":"0.18.0","libp2p-tcp":"0.15.1","merge-options":"2.0.0","minimatch":"3.0.4","multiaddr":"8.1.2","multibase":"3.1.0","nanoid":"3.1.20","node-fetch":"2.6.1","p-defer":"3.0.0","p-limit":"2.3.0","p-wait-for":"3.1.0","peer-id":"0.14.2","protons":"2.0.0","sinon":"9.2.2","stream-to-it":"0.2.2","streaming-iterables":"5.0.3","uint8arrays":"1.1.0"},"_requested":{"type":"range","registry":true,"raw":"libp2p@^0.29.3","name":"libp2p","escapedName":"libp2p","rawSpec":"^0.29.3","saveSpec":null,"fetchSpec":"^0.29.3"},"_requiredBy":["/"],"_resolved":"https://registry.npmjs.org/libp2p/-/libp2p-0.29.4.tgz","_shasum":"95247793185badb603ef82c36f21455ec6943dfb","_spec":"libp2p@^0.29.3","_where":"/Users/alex/Documents/Workspaces/ipfs/js-ipfs-release","bugs":{"url":"https://github.com/libp2p/js-libp2p/issues"},"bundleDependencies":false,"contributors":[{"name":"David Dias","email":"daviddias.p@gmail.com"},{"name":"Jacob Heun","email":"jacobheun@gmail.com"},{"name":"Vasco Santos","email":"vasco.santos@moxy.studio"},{"name":"Alan Shaw","email":"alan@tableflip.io"},{"name":"Alex Potsides","email":"alex@achingbrain.net"},{"name":"Cayman","email":"caymannava@gmail.com"},{"name":"Pedro Teixeira","email":"i@pgte.me"},{"name":"Friedel Ziegelmayer","email":"dignifiedquire@gmail.com"},{"name":"Maciej Kr\xFCger","email":"mkg20001@gmail.com"},{"name":"Hugo Dias","email":"mail@hugodias.me"},{"name":"dirkmc","email":"dirkmdev@gmail.com"},{"name":"Volker Mische","email":"volker.mische@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"},{"name":"a1300","email":"matthias-knopp@gmx.net"},{"name":"Elven","email":"mon.samuel@qq.com"},{"name":"Andrew Nesbitt","email":"andrewnez@gmail.com"},{"name":"Giovanni T. Parra","email":"fiatjaf@gmail.com"},{"name":"Ryan Bell","email":"ryan@piing.net"},{"name":"Thomas Eizinger","email":"thomas@eizinger.io"},{"name":"\u1D20\u026A\u1D04\u1D1B\u1D0F\u0280 \u0299\u1D0A\u1D07\u029F\u1D0B\u029C\u1D0F\u029F\u1D0D","email":"victorbjelkholm@gmail.com"},{"name":"Didrik Nordstr\xF6m","email":"didrik@betamos.se"},{"name":"Irakli Gozalishvili","email":"rfobic@gmail.com"},{"name":"Ethan Lam","email":"elmemphis2000@gmail.com"},{"name":"Joel Gustafson","email":"joelg@mit.edu"},{"name":"Julien Bouquillon","email":"contact@revolunet.com"},{"name":"Kevin Kwok","email":"antimatter15@gmail.com"},{"name":"Nuno Nogueira","email":"nunofmn@gmail.com"},{"name":"Dmitriy Ryajov","email":"dryajov@gmail.com"},{"name":"RasmusErik Voel Jensen","email":"github@solsort.com"},{"name":"Diogo Silva","email":"fsdiogo@gmail.com"},{"name":"Samlior","email":"samlior@foxmail.com"},{"name":"Smite Chow","email":"xiaopengyou@live.com"},{"name":"Soeren","email":"nikorpoulsen@gmail.com"},{"name":"S\xF6nke Hahn","email":"soenkehahn@gmail.com"},{"name":"robertkiel","email":"robert.kiel@validitylabs.org"},{"name":"Tiago Alves","email":"alvesjtiago@gmail.com"},{"name":"Daijiro Wachi","email":"daijiro.wachi@gmail.com"},{"name":"Yusef Napora","email":"yusef@napora.org"},{"name":"Zane Starr","email":"zcstarr@gmail.com"},{"name":"Cindy Wu","email":"ciindy.wu@gmail.com"},{"name":"Chris Bratlien","email":"chrisbratlien@gmail.com"},{"name":"ebinks","email":"elizabethjbinks@gmail.com"},{"name":"Bernd Strehl","email":"bernd.strehl@gmail.com"},{"name":"Florian-Merle","email":"florian.david.merle@gmail.com"},{"name":"Francis Gulotta","email":"wizard@roborooter.com"},{"name":"Felipe Martins","email":"felipebrasil93@gmail.com"},{"name":"isan_rivkin","email":"isanrivkin@gmail.com"},{"name":"Henrique Dias","email":"hacdias@gmail.com"},{"name":"Fei Liu","email":"liu.feiwood@gmail.com"}],"dependencies":{"abort-controller":"^3.0.0","aggregate-error":"^3.0.1","any-signal":"^1.1.0","bignumber.js":"^9.0.0","class-is":"^1.1.0","debug":"^4.1.1","err-code":"^2.0.0","events":"^3.1.0","hashlru":"^2.3.0","interface-datastore":"^2.0.0","ipfs-utils":"^2.2.0","it-all":"^1.0.1","it-buffer":"^0.1.2","it-handshake":"^1.0.1","it-length-prefixed":"^3.0.1","it-pipe":"^1.1.0","it-protocol-buffers":"^0.2.0","libp2p-crypto":"^0.18.0","libp2p-interfaces":"^0.5.1","libp2p-utils":"^0.2.0","mafmt":"^8.0.0","merge-options":"^2.0.0","moving-average":"^1.0.0","multiaddr":"^8.1.0","multicodec":"^2.0.0","multistream-select":"^1.0.0","mutable-proxy":"^1.0.0","node-forge":"^0.9.1","p-any":"^3.0.0","p-fifo":"^1.0.0","p-settle":"^4.0.1","peer-id":"^0.14.2","protons":"^2.0.0","retimer":"^2.0.0","sanitize-filename":"^1.6.3","streaming-iterables":"^5.0.2","timeout-abort-controller":"^1.1.1","varint":"^5.0.0","xsalsa20":"^1.0.2"},"deprecated":false,"description":"JavaScript implementation of libp2p, a modular peer to peer network stack","devDependencies":{"@nodeutils/defaults-deep":"^1.1.0","abortable-iterator":"^3.0.0","aegir":"^27.0.0","chai":"^4.2.0","chai-as-promised":"^7.1.1","chai-bytes":"^0.1.2","chai-string":"^1.5.0","cids":"^1.0.0","delay":"^4.3.0","dirty-chai":"^2.0.1","interop-libp2p":"^0.3.0","ipfs-http-client":"^47.0.1","it-concat":"^1.0.0","it-pair":"^1.0.0","it-pushable":"^1.4.0","libp2p":".","libp2p-bootstrap":"^0.12.0","libp2p-delegated-content-routing":"^0.7.0","libp2p-delegated-peer-routing":"^0.7.0","libp2p-floodsub":"^0.23.0","libp2p-gossipsub":"^0.6.0","libp2p-kad-dht":"^0.20.0","libp2p-mdns":"^0.15.0","libp2p-mplex":"^0.10.1","libp2p-noise":"^2.0.0","libp2p-secio":"^0.13.1","libp2p-tcp":"^0.15.1","libp2p-webrtc-star":"^0.20.0","libp2p-websockets":"^0.14.0","multihashes":"^3.0.1","nock":"^13.0.3","p-defer":"^3.0.0","p-times":"^3.0.0","p-wait-for":"^3.1.0","promisify-es6":"^1.0.3","rimraf":"^3.0.2","sinon":"^9.0.2","uint8arrays":"^1.1.0"},"engines":{"node":">=12.0.0","npm":">=6.0.0"},"files":["dist","src"],"homepage":"https://libp2p.io","keywords":["libp2p","network","p2p","peer","peer-to-peer","IPFS"],"leadMaintainer":"Jacob Heun <jacobheun@gmail.com>","license":"MIT","main":"src/index.js","name":"libp2p","repository":{"type":"git","url":"git+https://github.com/libp2p/js-libp2p.git"},"scripts":{"build":"aegir build","coverage":"nyc --reporter=text --reporter=lcov npm run test:node","lint":"aegir lint","release":"aegir release -t node -t browser","release-major":"aegir release --type major -t node -t browser","release-minor":"aegir release --type minor -t node -t browser","test":"npm run test:node && npm run test:browser","test:browser":"aegir test -t browser","test:node":"aegir test -t node -f \\"./test/**/*.{node,spec}.js\\""},"version":"0.29.4"}');
    }, function(e, t, r) {
      "use strict";
      const n = r(869), i = r(870);
      e.exports = async (e2, t2 = {}) => {
        const {concurrency: r2 = 1 / 0} = t2, s = i(r2);
        return Promise.all(e2.map((e3) => e3 && typeof e3.then == "function" ? n(e3) : n(typeof e3 == "function" ? s(() => e3()) : Promise.resolve(e3))));
      };
    }, function(e, t, r) {
      "use strict";
      const n = async (e2) => {
        try {
          return {isFulfilled: true, isRejected: false, value: await e2};
        } catch (t2) {
          return {isFulfilled: false, isRejected: true, reason: t2};
        }
      };
      e.exports = n, e.exports.default = n;
    }, function(e, t, r) {
      "use strict";
      const n = r(871), i = (e2) => {
        if (!Number.isInteger(e2) && e2 !== 1 / 0 || !(e2 > 0))
          return Promise.reject(new TypeError("Expected `concurrency` to be a number from 1 and up"));
        const t2 = [];
        let r2 = 0;
        const i2 = () => {
          r2--, t2.length > 0 && t2.shift()();
        }, s = (e3, t3, ...s2) => {
          r2++;
          const o2 = n(e3, ...s2);
          t3(o2), o2.then(i2, i2);
        }, o = (n2, ...i3) => new Promise((o2) => ((n3, i4, ...o3) => {
          r2 < e2 ? s(n3, i4, ...o3) : t2.push(s.bind(null, n3, i4, ...o3));
        })(n2, o2, ...i3));
        return Object.defineProperties(o, {activeCount: {get: () => r2}, pendingCount: {get: () => t2.length}, clearQueue: {value: () => {
          t2.length = 0;
        }}}), o;
      };
      e.exports = i, e.exports.default = i;
    }, function(e, t, r) {
      "use strict";
      const n = (e2, ...t2) => new Promise((r2) => {
        r2(e2(...t2));
      });
      e.exports = n, e.exports.default = n;
    }, function(e, t, r) {
      "use strict";
      const n = r(1);
      n("libp2p:addresses").error = n("libp2p:addresses:error");
      const i = r(11);
      e.exports = class {
        constructor({listen: e2 = [], announce: t2 = [], noAnnounce: r2 = []} = {}) {
          this.listen = new Set(e2), this.announce = new Set(t2), this.noAnnounce = new Set(r2);
        }
        getListenAddrs() {
          return Array.from(this.listen).map((e2) => i(e2));
        }
        getAnnounceAddrs() {
          return Array.from(this.announce).map((e2) => i(e2));
        }
        getNoAnnounceAddrs() {
          return Array.from(this.noAnnounce).map((e2) => i(e2));
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(1), i = n("libp2p:connection-manager");
      i.error = n("libp2p:connection-manager:error");
      const s = r(0), o = r(23), a = r(874), c = r(149), {EventEmitter: u} = r(14), h = r(7), {ERR_INVALID_PARAMETERS: f} = r(26), d = {maxConnections: 1 / 0, minConnections: 0, maxData: 1 / 0, maxSentData: 1 / 0, maxReceivedData: 1 / 0, maxEventLoopDelay: 1 / 0, pollInterval: 2e3, autoDialInterval: 1e4, movingAverageInterval: 6e4, defaultPeerValue: 1};
      function l(e2, t2) {
        return e2[1] - t2[1];
      }
      e.exports = class extends u {
        constructor(e2, t2) {
          if (super(), this._libp2p = e2, this._peerId = e2.peerId.toB58String(), this._options = o.call({ignoreUndefined: true}, d, t2), this._options.maxConnections < this._options.minConnections)
            throw s(new Error("Connection Manager maxConnections must be greater than minConnections"), f);
          i("options: %j", this._options), this._libp2p = e2, this._peerValues = new Map(), this.connections = new Map(), this._started = false, this._timer = null, this._autoDialTimeout = null, this._checkMetrics = this._checkMetrics.bind(this), this._autoDial = this._autoDial.bind(this);
        }
        get size() {
          return Array.from(this.connections.values()).reduce((e2, t2) => e2 + t2.length, 0);
        }
        start() {
          this._libp2p.metrics && (this._timer = this._timer || c(this._checkMetrics, this._options.pollInterval)), this._latencyMonitor = new a({latencyCheckIntervalMs: this._options.pollInterval, dataEmitIntervalMs: this._options.pollInterval}), this._onLatencyMeasure = this._onLatencyMeasure.bind(this), this._latencyMonitor.on("data", this._onLatencyMeasure), this._started = true, i("started"), this._options.autoDial && this._autoDial();
        }
        async stop() {
          this._autoDialTimeout && this._autoDialTimeout.clear(), this._timer && this._timer.clear(), this._latencyMonitor && this._latencyMonitor.removeListener("data", this._onLatencyMeasure), this._started = false, await this._close(), i("stopped");
        }
        async _close() {
          const e2 = [];
          for (const t2 of this.connections.values())
            for (const r2 of t2)
              e2.push(r2.close());
          await e2, this.connections.clear();
        }
        setPeerValue(e2, t2) {
          if (t2 < 0 || t2 > 1)
            throw new Error("value should be a number between 0 and 1");
          e2.toB58String && (e2 = e2.toB58String()), this._peerValues.set(e2, t2);
        }
        _checkMetrics() {
          const e2 = this._libp2p.metrics.global.movingAverages, t2 = e2.dataReceived[this._options.movingAverageInterval].movingAverage();
          this._checkMaxLimit("maxReceivedData", t2);
          const r2 = e2.dataSent[this._options.movingAverageInterval].movingAverage();
          this._checkMaxLimit("maxSentData", r2);
          const n2 = t2 + r2;
          this._checkMaxLimit("maxData", n2), i("metrics update", n2), this._timer = c(this._checkMetrics, this._options.pollInterval);
        }
        onConnect(e2) {
          const t2 = e2.remotePeer, r2 = t2.toB58String(), n2 = this.connections.get(r2);
          this.emit("peer:connect", e2), n2 ? n2.push(e2) : this.connections.set(r2, [e2]), this._libp2p.peerStore.keyBook.set(t2, t2.pubKey), this._peerValues.has(r2) || this._peerValues.set(r2, this._options.defaultPeerValue), this._checkMaxLimit("maxConnections", this.size);
        }
        onDisconnect(e2) {
          const t2 = e2.remotePeer.toB58String();
          let r2 = this.connections.get(t2);
          r2 && r2.length > 1 ? (r2 = r2.filter((t3) => t3.id !== e2.id), this.connections.set(t2, r2)) : r2 && (this.connections.delete(t2), this._peerValues.delete(e2.remotePeer.toB58String()), this.emit("peer:disconnect", e2));
        }
        get(e2) {
          const t2 = this.getAll(e2);
          return t2.length ? t2[0] : null;
        }
        getAll(e2) {
          if (!h.isPeerId(e2))
            throw s(new Error("peerId must be an instance of peer-id"), f);
          const t2 = e2.toB58String(), r2 = this.connections.get(t2);
          return r2 ? r2.filter((e3) => e3.stat.status === "open") : [];
        }
        _onLatencyMeasure(e2) {
          this._checkMaxLimit("maxEventLoopDelay", e2.avgMs);
        }
        _checkMaxLimit(e2, t2) {
          const r2 = this._options[e2];
          i("checking limit of %s. current value: %d of %d", e2, t2, r2), t2 > r2 && (i("%s: limit exceeded: %s, %d", this._peerId, e2, t2), this._maybeDisconnectOne());
        }
        async _autoDial() {
          const e2 = this._options.minConnections;
          if (this.size >= e2)
            return void (this._autoDialTimeout = c(this._autoDial, this._options.autoDialInterval));
          const t2 = Array.from(this._libp2p.peerStore.peers.values()).sort((e3, t3) => !t3.protocols || !t3.protocols.length || e3.protocols && e3.protocols.length ? t3.id.pubKey && !e3.id.pubKey ? 1 : -1 : 1);
          for (let n2 = 0; n2 < t2.length && this.size < e2; n2++)
            if (!this.get(t2[n2].id)) {
              i("connecting to a peerStore stored peer %s", t2[n2].id.toB58String());
              try {
                if (await this._libp2p.dialer.connectToPeer(t2[n2].id), !this._started)
                  return;
              } catch (r2) {
                i.error("could not connect to peerStore stored peer", r2);
              }
            }
          this._autoDialTimeout = c(this._autoDial, this._options.autoDialInterval);
        }
        _maybeDisconnectOne() {
          if (this._options.minConnections < this.connections.size) {
            const e2 = Array.from(this._peerValues).sort(l);
            i("%s: sorted peer values: %j", this._peerId, e2);
            const t2 = e2[0];
            if (t2) {
              const e3 = t2[0];
              i("%s: lowest value peer is %s", this._peerId, e3), i("%s: closing a connection to %j", this._peerId, e3);
              for (const t3 of this.connections.values())
                if (t3[0].remotePeer.toB58String() === e3) {
                  t3[0].close();
                  break;
                }
            }
          }
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(192), i = r(14), s = r(875), o = r(1)("latency-monitor:LatencyMonitor");
      e.exports = class extends i {
        constructor({latencyCheckIntervalMs: e2, dataEmitIntervalMs: t2, asyncTestFn: r2, latencyRandomPercentage: i2} = {}) {
          super();
          const a = this;
          a.latencyCheckIntervalMs = e2 || 500, a.latencyRandomPercentage = i2 || 10, a._latecyCheckMultiply = a.latencyRandomPercentage / 100 * 2 * a.latencyCheckIntervalMs, a._latecyCheckSubtract = a._latecyCheckMultiply / 2, a.dataEmitIntervalMs = t2 === null || t2 === 0 ? void 0 : t2 || 5e3, o("latencyCheckIntervalMs: %s dataEmitIntervalMs: %s", a.latencyCheckIntervalMs, a.dataEmitIntervalMs), a.dataEmitIntervalMs ? o("Expecting ~%s events per summary", a.latencyCheckIntervalMs / a.dataEmitIntervalMs) : o("Not emitting summaries"), a.asyncTestFn = r2, n.process && n.process.hrtime ? (o("Using process.hrtime for timing"), a.now = n.process.hrtime, a.getDeltaMS = (e3) => {
            const t3 = a.now(e3);
            return 1e3 * t3[0] + t3[1] / 1e6;
          }) : typeof window != "undefined" && window.performance && window.performance.now ? (o("Using performance.now for timing"), a.now = window.performance.now.bind(window.performance), a.getDeltaMS = (e3) => Math.round(a.now() - e3)) : (o("Using Date.now for timing"), a.now = Date.now, a.getDeltaMS = (e3) => a.now() - e3), a._latencyData = a._initLatencyData(), typeof window != "undefined" && (a._visibilityChangeEmitter = new s(), a._visibilityChangeEmitter.on("visibilityChange", (e3) => {
            e3 ? a._startTimers() : (a._emitSummary(), a._stopTimers());
          })), a._visibilityChangeEmitter && !a._visibilityChangeEmitter.isVisible() || a._startTimers();
        }
        _startTimers() {
          this._checkLatencyID || (this._checkLatency(), this.dataEmitIntervalMs && (this._emitIntervalID = setInterval(() => this._emitSummary(), this.dataEmitIntervalMs), typeof this._emitIntervalID.unref == "function" && this._emitIntervalID.unref()));
        }
        _stopTimers() {
          this._checkLatencyID && (clearTimeout(this._checkLatencyID), this._checkLatencyID = void 0), this._emitIntervalID && (clearInterval(this._emitIntervalID), this._emitIntervalID = void 0);
        }
        _emitSummary() {
          const e2 = this.getSummary();
          e2.events > 0 && this.emit("data", e2);
        }
        getSummary() {
          const e2 = {events: this._latencyData.events, minMs: this._latencyData.minMs, maxMs: this._latencyData.maxMs, avgMs: this._latencyData.events ? this._latencyData.totalMs / this._latencyData.events : Number.POSITIVE_INFINITY, lengthMs: this.getDeltaMS(this._latencyData.startTime)};
          return this._latencyData = this._initLatencyData(), o("Summary: %O", e2), e2;
        }
        _checkLatency() {
          const e2 = this, t2 = Math.random() * e2._latecyCheckMultiply - e2._latecyCheckSubtract, r2 = {deltaOffset: Math.ceil(e2.latencyCheckIntervalMs + t2), startTime: e2.now()}, n2 = () => {
            if (!this._checkLatencyID)
              return;
            const t3 = e2.getDeltaMS(r2.startTime) - r2.deltaOffset;
            e2._checkLatency(), e2._latencyData.events++, e2._latencyData.minMs = Math.min(e2._latencyData.minMs, t3), e2._latencyData.maxMs = Math.max(e2._latencyData.maxMs, t3), e2._latencyData.totalMs += t3, o("MS: %s Data: %O", t3, e2._latencyData);
          };
          o("localData: %O", r2), this._checkLatencyID = setTimeout(() => {
            e2.asyncTestFn ? (r2.deltaOffset = 0, r2.startTime = e2.now(), e2.asyncTestFn(n2)) : (r2.deltaOffset -= 1, n2());
          }, r2.deltaOffset), typeof this._checkLatencyID.unref == "function" && this._checkLatencyID.unref();
        }
        _initLatencyData() {
          return {startTime: this.now(), minMs: Number.POSITIVE_INFINITY, maxMs: Number.NEGATIVE_INFINITY, events: 0, totalMs: 0};
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(14), i = r(1)("latency-monitor:VisibilityChangeEmitter");
      e.exports = class extends n {
        constructor() {
          super(), typeof document != "undefined" ? (this._initializeVisibilityVarNames(), this._addVisibilityChangeListener()) : i('This is not a browser, no "document" found. Stopping.');
        }
        _initializeVisibilityVarNames() {
          let e2, t2;
          document.hidden !== void 0 ? (e2 = "hidden", t2 = "visibilitychange") : document.mozHidden !== void 0 ? (e2 = "mozHidden", t2 = "mozvisibilitychange") : document.msHidden !== void 0 ? (e2 = "msHidden", t2 = "msvisibilitychange") : document.webkitHidden !== void 0 && (e2 = "webkitHidden", t2 = "webkitvisibilitychange"), this._hidden = e2, this._visibilityChange = t2;
        }
        _addVisibilityChangeListener() {
          document.addEventListener === void 0 || document[this._hidden] === void 0 ? i("Checking page visibility requires a browser that supports the Page Visibility API.") : document.addEventListener(this._visibilityChange, this._handleVisibilityChange.bind(this), false);
        }
        isVisible() {
          if (this._hidden !== void 0 && document[this._hidden] !== void 0)
            return !document[this._hidden];
        }
        _handleVisibilityChange() {
          const e2 = !document[this._hidden];
          i(e2 ? "Page Visible" : "Page Hidden"), this.emit("visibilityChange", e2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(60), i = r(11), s = r(7), o = r(24), {CircuitRelay: a} = r(94), c = r(1), u = c("libp2p:circuit");
      u.error = c("libp2p:circuit:error");
      const h = r(877), {relay: f} = r(195), d = r(878), {handleCanHop: l, handleHop: p, hop: y} = r(879), {handleStop: g} = r(337), b = r(196);
      e.exports = o(class {
        constructor({libp2p: e2, upgrader: t2}) {
          this._dialer = e2.dialer, this._registrar = e2.registrar, this._connectionManager = e2.connectionManager, this._upgrader = t2, this._options = e2._config.relay, this._libp2p = e2, this.peerId = e2.peerId, this._registrar.handle(f, this._onProtocol.bind(this));
        }
        async _onProtocol({connection: e2, stream: t2, protocol: r2}) {
          const n2 = new b({stream: t2}), s2 = await n2.read(), o2 = this;
          let c2;
          switch (s2.type) {
            case a.Type.CAN_HOP:
              u("received CAN_HOP request from %s", e2.remotePeer.toB58String()), await l({circuit: o2, connection: e2, streamHandler: n2});
              break;
            case a.Type.HOP:
              u("received HOP request from %s", e2.remotePeer.toB58String()), c2 = await p({connection: e2, request: s2, streamHandler: n2, circuit: o2});
              break;
            case a.Type.STOP:
              u("received STOP request from %s", e2.remotePeer.toB58String()), c2 = await g({connection: e2, request: s2, streamHandler: n2, circuit: o2});
              break;
            default:
              u("Request of type %s not supported", s2.type);
          }
          if (c2) {
            const e3 = i(s2.dstPeer.addrs[0]), t3 = i(s2.srcPeer.addrs[0]), r3 = h({stream: c2, remoteAddr: e3, localAddr: t3}), n3 = a.Type === a.Type.HOP ? "relay" : "inbound";
            u("new %s connection %s", n3, r3.remoteAddr);
            const o3 = await this._upgrader.upgradeInbound(r3);
            u("%s connection %s upgraded", n3, r3.remoteAddr), this.handler && this.handler(o3);
          }
        }
        async dial(e2, t2) {
          const r2 = e2.toString().split("/p2p-circuit"), n2 = i(r2[0]), o2 = i(r2[r2.length - 1]), c2 = s.createFromCID(n2.getPeerId()), f2 = s.createFromCID(o2.getPeerId());
          let d2 = false, l2 = this._connectionManager.get(c2);
          l2 || (l2 = await this._dialer.connectToPeer(n2, t2), d2 = true);
          try {
            const t3 = await y({connection: l2, circuit: this, request: {type: a.Type.HOP, srcPeer: {id: this.peerId.toBytes(), addrs: this._libp2p.multiaddrs.map((e3) => e3.bytes)}, dstPeer: {id: f2.toBytes(), addrs: [i(o2).bytes]}}}), r3 = n2.encapsulate("/p2p-circuit/p2p/" + this.peerId.toB58String()), s2 = h({stream: t3, remoteAddr: e2, localAddr: r3});
            return u("new outbound connection %s", s2.remoteAddr), this._upgrader.upgradeOutbound(s2);
          } catch (p2) {
            throw u.error("Circuit relay dial failed", p2), d2 && await l2.close(), p2;
          }
        }
        createListener(e2, t2) {
          return typeof e2 == "function" && (t2 = e2, e2 = {}), this.handler = t2, d(this, e2);
        }
        filter(e2) {
          return (e2 = Array.isArray(e2) ? e2 : [e2]).filter((e3) => n.Circuit.matches(e3));
        }
      }, {className: "Circuit", symbolName: "@libp2p/js-libp2p-circuit/circuit"});
    }, function(e, t, r) {
      "use strict";
      const n = r(45), i = r(1)("libp2p:stream:converter");
      e.exports = function({stream: e2, remoteAddr: t2, localAddr: r2}, s = {}) {
        const {sink: o, source: a} = e2, c = {async sink(e3) {
          s.signal && (e3 = n(e3, s.signal));
          try {
            await o(e3);
          } catch (t3) {
            t3.type !== "aborted" && i(t3);
          }
          u();
        }, source: s.signal ? n(a, s.signal) : a, conn: e2, localAddr: r2, remoteAddr: t2, timeline: {open: Date.now()}, close() {
          o([]), u();
        }};
        function u() {
          c.timeline.close || (c.timeline.close = Date.now());
        }
        return c;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(14), i = r(11), s = r(1);
      s("libp2p:circuit:listener").err = s("libp2p:circuit:error:listener"), e.exports = (e2) => {
        const t2 = new n(), r2 = new Map();
        return t2.listen = async (n2) => {
          const s2 = String(n2).split("/p2p-circuit").find((e3) => e3 !== ""), o = await e2._dialer.connectToPeer(i(s2)), a = o.remoteAddr.encapsulate("/p2p-circuit");
          r2.set(o.remotePeer.toB58String(), a), t2.emit("listening");
        }, t2.close = () => {
        }, t2.getAddrs = () => {
          const e3 = [];
          for (const t3 of r2.values())
            e3.push(t3);
          return e3;
        }, t2;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(1), i = n("libp2p:circuit:hop");
      i.error = n("libp2p:circuit:hop:error");
      const s = r(7), {validateAddrs: o} = r(335), a = r(196), {CircuitRelay: c} = r(94), u = r(25), h = r(0), {codes: f} = r(26), {stop: d} = r(337), l = r(195);
      e.exports.handleHop = async function({connection: e2, request: t2, streamHandler: r2, circuit: n2}) {
        if (!n2._options.hop.enabled)
          return i("HOP request received but we are not acting as a relay"), r2.end({type: c.Type.STATUS, code: c.Status.HOP_CANT_SPEAK_RELAY});
        try {
          o(t2, r2);
        } catch (y) {
          return i.error("invalid hop request via peer %s", e2.remotePeer.toB58String(), y);
        }
        const a2 = new s(t2.dstPeer.id), h2 = n2._connectionManager.get(a2);
        if (!h2 && !n2._options.hop.active)
          return i("HOP request received but we are not connected to the destination peer"), r2.end({type: c.Type.STATUS, code: c.Status.HOP_NO_CONN_TO_DST});
        const f2 = {type: c.Type.STOP, dstPeer: t2.dstPeer, srcPeer: t2.srcPeer};
        let l2;
        try {
          l2 = await d({connection: h2, request: f2, circuit: n2});
        } catch (y) {
          return i.error(y);
        }
        i("hop request from %s is valid", e2.remotePeer.toB58String()), r2.write({type: c.Type.STATUS, code: c.Status.SUCCESS});
        const p = r2.rest();
        return u(p, l2, p);
      }, e.exports.hop = async function({connection: e2, request: t2}) {
        const {stream: r2} = await e2.newStream([l.relay]), n2 = new a({stream: r2});
        n2.write(t2);
        const s2 = await n2.read();
        if (s2.code === c.Status.SUCCESS)
          return i("hop request was successful"), n2.rest();
        throw i("hop request failed with code %d, closing stream", s2.code), n2.close(), h(new Error("HOP request failed with code " + s2.code), f.ERR_HOP_REQUEST_FAILED);
      }, e.exports.handleCanHop = function({connection: e2, streamHandler: t2, circuit: r2}) {
        const n2 = r2._options.hop.enabled;
        i("can hop (%s) request from %s", n2, e2.remotePeer.toB58String()), t2.end({type: c.Type.STATUS, code: n2 ? c.Status.SUCCESS : c.Status.HOP_CANT_SPEAK_RELAY});
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(11), i = r(0), s = r(247), o = r(338), a = r(1), c = a("libp2p:dialer");
      c.error = a("libp2p:dialer:error");
      const {DialRequest: u} = r(882), h = r(331), {codes: f} = r(26), {DIAL_TIMEOUT: d, MAX_PARALLEL_DIALS: l, MAX_PER_PEER_DIALS: p} = r(194);
      e.exports = class {
        constructor({transportManager: e2, peerStore: t2, concurrency: r2 = l, timeout: i2 = d, perPeerLimit: s2 = p, resolvers: o2 = {}}) {
          this.transportManager = e2, this.peerStore = t2, this.concurrency = r2, this.timeout = i2, this.perPeerLimit = s2, this.tokens = [...new Array(r2)].map((e3, t3) => t3), this._pendingDials = new Map();
          for (const [a2, c2] of Object.entries(o2))
            n.resolvers.set(a2, c2);
        }
        destroy() {
          for (const t2 of this._pendingDials.values())
            try {
              t2.controller.abort();
            } catch (e2) {
              c.error(e2);
            }
          this._pendingDials.clear();
        }
        async connectToPeer(e2, t2 = {}) {
          const r2 = await this._createDialTarget(e2);
          if (!r2.addrs.length)
            throw i(new Error("The dial request has no addresses"), f.ERR_NO_VALID_ADDRESSES);
          const n2 = this._pendingDials.get(r2.id) || this._createPendingDial(r2, t2);
          try {
            const e3 = await n2.promise;
            return c("dial succeeded to %s", r2.id), e3;
          } catch (s2) {
            throw n2.controller.signal.aborted && (s2.code = f.ERR_TIMEOUT), c.error(s2), s2;
          } finally {
            n2.destroy();
          }
        }
        async _createDialTarget(e2) {
          const {id: t2, multiaddrs: r2} = h(e2);
          r2 && this.peerStore.addressBook.add(t2, r2);
          let i2 = this.peerStore.addressBook.getMultiaddrsForPeer(t2) || [];
          n.isMultiaddr(e2) && (i2 = i2.filter((t3) => !e2.equals(t3)), i2.unshift(e2));
          const s2 = [];
          for (const n2 of i2) {
            (await this._resolve(n2)).forEach((e3) => s2.push(e3));
          }
          return {id: t2.toB58String(), addrs: s2};
        }
        _createPendingDial(e2, t2) {
          const r2 = new u({addrs: e2.addrs, dialAction: (e3, t3) => {
            if (t3.signal.aborted)
              throw i(new Error("already aborted"), f.ERR_ALREADY_ABORTED);
            return this.transportManager.dial(e3, t3);
          }, dialer: this}), n2 = new s(this.timeout), a2 = [n2.signal];
          t2.signal && a2.push(t2.signal);
          const c2 = o(a2), h2 = {dialRequest: r2, controller: n2, promise: r2.run({...t2, signal: c2}), destroy: () => {
            n2.clear(), this._pendingDials.delete(e2.id);
          }};
          return this._pendingDials.set(e2.id, h2), h2;
        }
        getTokens(e2) {
          const t2 = Math.min(e2, this.perPeerLimit, this.tokens.length), r2 = this.tokens.splice(0, t2);
          return c("%d tokens request, returning %d, %d remaining", e2, t2, this.tokens.length), r2;
        }
        releaseToken(e2) {
          this.tokens.indexOf(e2) > -1 || (c("token %d released", e2), this.tokens.push(e2));
        }
        async _resolve(e2) {
          if (!e2.protoNames().includes("dnsaddr"))
            return [e2];
          const t2 = await this._resolveRecord(e2);
          return (await Promise.all(t2.map((e3) => this._resolve(e3)))).flat().reduce((e3, t3) => (e3.find((e4) => e4.equals(t3)) || e3.push(t3), e3), []);
        }
        async _resolveRecord(e2) {
          try {
            e2 = n(e2.toString());
            return await e2.resolve();
          } catch (t2) {
            return c.error(`multiaddr ${e2} could not be resolved`), [];
          }
        }
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = AbortController;
    }, function(e, t, r) {
      "use strict";
      const n = r(47), i = r(338), s = r(1), o = r(0);
      s("libp2p:dialer:request").error = s("libp2p:dialer:request:error");
      const a = r(883), c = r(193);
      e.exports.DialRequest = class {
        constructor({addrs: e2, dialAction: t2, dialer: r2}) {
          this.addrs = e2, this.dialer = r2, this.dialAction = t2;
        }
        async run(e2) {
          const t2 = this.dialer.getTokens(this.addrs.length);
          if (t2.length < 1)
            throw o(new Error("No dial tokens available"), "ERR_NO_DIAL_TOKENS");
          const r2 = new a();
          t2.forEach((e3) => r2.push(e3));
          const s2 = this.addrs.map(() => new n());
          let u = 0;
          try {
            return await c(this.addrs.map(async (n2, o2) => {
              const a2 = await r2.shift();
              let c2;
              try {
                const h = s2[o2].signal;
                c2 = await this.dialAction(n2, {...e2, signal: i([h, e2.signal])}), s2.splice(o2, 1);
              } finally {
                u++, this.addrs.length - u >= t2.length ? r2.push(a2) : this.dialer.releaseToken(t2.splice(t2.indexOf(a2), 1)[0]);
              }
              return c2;
            }));
          } finally {
            s2.map((e3) => e3.abort()), t2.forEach((e3) => this.dialer.releaseToken(e3));
          }
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(300), i = r(197);
      e.exports = class {
        constructor() {
          this._buffer = new n(), this._waitingConsumers = new n();
        }
        push(e2) {
          const {promise: t2, resolve: r2} = i();
          return this._buffer.push({chunk: e2, resolve: r2}), this._consume(), t2;
        }
        _consume() {
          for (; !this._waitingConsumers.isEmpty() && !this._buffer.isEmpty(); ) {
            const e2 = this._waitingConsumers.shift(), t2 = this._buffer.shift();
            e2.resolve(t2.chunk), t2.resolve();
          }
        }
        shift() {
          const {promise: e2, resolve: t2} = i();
          return this._waitingConsumers.push({resolve: t2}), this._consume(), e2;
        }
        isEmpty() {
          return this._buffer.isEmpty();
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(885), i = r(23), s = r(39), o = r(9), a = r(889), c = r(0), {Number: u} = r(192), h = r(5), f = r(6);
      r(142);
      const d = 14, l = 16, p = 1e3, y = {dek: {keyLength: 64, iterationCount: 1e4, salt: "you should override this value with a crypto secure random number", hash: "sha2-512"}};
      function g(e2) {
        return !!e2 && (typeof e2 == "string" && e2 === n(e2.trim()));
      }
      async function b(e2) {
        const t2 = 800 * Math.random() + 200;
        throw await new Promise((e3) => setTimeout(e3, t2)), e2;
      }
      function m(e2) {
        return new o.Key("/pkcs8/" + e2);
      }
      function v(e2) {
        return new o.Key("/info/" + e2);
      }
      e.exports = class {
        constructor(e2, t2) {
          if (!e2)
            throw new Error("store is required");
          if (this.store = e2, this.opts = i(y, t2), this.opts.passPhrase && this.opts.passPhrase.length < 20)
            throw new Error("passPhrase must be least 20 characters");
          if (this.opts.dek.keyLength < d)
            throw new Error(`dek.keyLength must be least ${d} bytes`);
          if (this.opts.dek.salt.length < l)
            throw new Error(`dek.saltLength must be least ${l} bytes`);
          if (this.opts.dek.iterationCount < p)
            throw new Error("dek.iterationCount must be least " + p);
          const r2 = this.opts.passPhrase ? s.pbkdf2(this.opts.passPhrase, this.opts.dek.salt, this.opts.dek.iterationCount, this.opts.dek.keyLength, this.opts.dek.hash) : "";
          Object.defineProperty(this, "_", {value: () => r2});
        }
        get cms() {
          return new a(this);
        }
        static generateOptions() {
          const e2 = Object.assign({}, y), t2 = 3 * Math.ceil(l / 3);
          return e2.dek.salt = h(s.randomBytes(t2), "base64"), e2;
        }
        static get options() {
          return y;
        }
        async createKey(e2, t2, r2) {
          const n2 = this;
          if (!g(e2) || e2 === "self")
            return b(c(new Error(`Invalid key name '${e2}'`), "ERR_INVALID_KEY_NAME"));
          if (typeof t2 != "string")
            return b(c(new Error(`Invalid key type '${t2}'`), "ERR_INVALID_KEY_TYPE"));
          const i2 = m(e2);
          if (await n2.store.has(i2))
            return b(c(new Error(`Key '${e2}' already exists`), "ERR_KEY_ALREADY_EXISTS"));
          switch (t2.toLowerCase()) {
            case "rsa":
              if (!u.isSafeInteger(r2) || r2 < 2048)
                return b(c(new Error("Invalid RSA key size " + r2), "ERR_INVALID_KEY_SIZE"));
          }
          let o2;
          try {
            const a2 = await s.keys.generateKeyPair(t2, r2), c2 = await a2.id(), u2 = await a2.export(this._());
            o2 = {name: e2, id: c2};
            const h2 = n2.store.batch();
            h2.put(i2, f(u2)), h2.put(v(e2), f(JSON.stringify(o2))), await h2.commit();
          } catch (a2) {
            return b(a2);
          }
          return o2;
        }
        async listKeys() {
          const e2 = this, t2 = {prefix: "/info/"}, r2 = [];
          for await (const n2 of e2.store.query(t2))
            r2.push(JSON.parse(h(n2.value)));
          return r2;
        }
        async findKeyById(e2) {
          try {
            return (await this.listKeys()).find((t2) => t2.id === e2);
          } catch (t2) {
            return b(t2);
          }
        }
        async findKeyByName(e2) {
          if (!g(e2))
            return b(c(new Error(`Invalid key name '${e2}'`), "ERR_INVALID_KEY_NAME"));
          const t2 = v(e2);
          try {
            const e3 = await this.store.get(t2);
            return JSON.parse(h(e3));
          } catch (r2) {
            return b(c(new Error(`Key '${e2}' does not exist. ${r2.message}`), "ERR_KEY_NOT_FOUND"));
          }
        }
        async removeKey(e2) {
          if (!g(e2) || e2 === "self")
            return b(c(new Error(`Invalid key name '${e2}'`), "ERR_INVALID_KEY_NAME"));
          const t2 = m(e2), r2 = await this.findKeyByName(e2), n2 = this.store.batch();
          return n2.delete(t2), n2.delete(v(e2)), await n2.commit(), r2;
        }
        async renameKey(e2, t2) {
          const r2 = this;
          if (!g(e2) || e2 === "self")
            return b(c(new Error(`Invalid old key name '${e2}'`), "ERR_OLD_KEY_NAME_INVALID"));
          if (!g(t2) || t2 === "self")
            return b(c(new Error(`Invalid new key name '${t2}'`), "ERR_NEW_KEY_NAME_INVALID"));
          const n2 = m(e2), i2 = m(t2), s2 = v(e2), o2 = v(t2);
          if (await r2.store.has(i2))
            return b(c(new Error(`Key '${t2}' already exists`), "ERR_KEY_ALREADY_EXISTS"));
          try {
            const e3 = await r2.store.get(n2), a2 = await r2.store.get(s2), c2 = JSON.parse(h(a2));
            c2.name = t2;
            const u2 = r2.store.batch();
            return u2.put(i2, e3), u2.put(o2, f(JSON.stringify(c2))), u2.delete(n2), u2.delete(s2), await u2.commit(), c2;
          } catch (a2) {
            return b(a2);
          }
        }
        async exportKey(e2, t2) {
          if (!g(e2))
            return b(c(new Error(`Invalid key name '${e2}'`), "ERR_INVALID_KEY_NAME"));
          if (!t2)
            return b(c(new Error("Password is required"), "ERR_PASSWORD_REQUIRED"));
          const r2 = m(e2);
          try {
            const e3 = await this.store.get(r2), n2 = h(e3);
            return (await s.keys.import(n2, this._())).export(t2);
          } catch (n2) {
            return b(n2);
          }
        }
        async importKey(e2, t2, r2) {
          if (!g(e2) || e2 === "self")
            return b(c(new Error(`Invalid key name '${e2}'`), "ERR_INVALID_KEY_NAME"));
          if (!t2)
            return b(c(new Error("PEM encoded key is required"), "ERR_PEM_REQUIRED"));
          const n2 = m(e2);
          if (await this.store.has(n2))
            return b(c(new Error(`Key '${e2}' already exists`), "ERR_KEY_ALREADY_EXISTS"));
          let i2, o2;
          try {
            i2 = await s.keys.import(t2, r2);
          } catch (h2) {
            return b(c(new Error("Cannot read the key, most likely the password is wrong"), "ERR_CANNOT_READ_KEY"));
          }
          try {
            o2 = await i2.id(), t2 = await i2.export(this._());
          } catch (h2) {
            return b(h2);
          }
          const a2 = {name: e2, id: o2}, u2 = this.store.batch();
          return u2.put(n2, f(t2)), u2.put(v(e2), f(JSON.stringify(a2))), await u2.commit(), a2;
        }
        async importPeer(e2, t2) {
          const r2 = this;
          if (!g(e2))
            return b(c(new Error(`Invalid key name '${e2}'`), "ERR_INVALID_KEY_NAME"));
          if (!t2 || !t2.privKey)
            return b(c(new Error("Peer.privKey is required"), "ERR_MISSING_PRIVATE_KEY"));
          const n2 = t2.privKey, i2 = m(e2);
          if (await r2.store.has(i2))
            return b(c(new Error(`Key '${e2}' already exists`), "ERR_KEY_ALREADY_EXISTS"));
          try {
            const t3 = await n2.id(), s2 = await n2.export(this._()), o2 = {name: e2, id: t3}, a2 = r2.store.batch();
            return a2.put(i2, f(s2)), a2.put(v(e2), f(JSON.stringify(o2))), await a2.commit(), o2;
          } catch (s2) {
            return b(s2);
          }
        }
        async _getPrivateKey(e2) {
          if (!g(e2))
            return b(c(new Error(`Invalid key name '${e2}'`), "ERR_INVALID_KEY_NAME"));
          try {
            const t2 = m(e2), r2 = await this.store.get(t2);
            return h(r2);
          } catch (t2) {
            return b(c(new Error(`Key '${e2}' does not exist. ${t2.message}`), "ERR_KEY_NOT_FOUND"));
          }
        }
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(886), i = /[\/\?<>\\:\*\|"]/g, s = /[\x00-\x1f\x80-\x9f]/g, o = /^\.+$/, a = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\..*)?$/i, c = /[\. ]+$/;
      function u(e2, t2) {
        if (typeof e2 != "string")
          throw new Error("Input must be string");
        var r2 = e2.replace(i, t2).replace(s, t2).replace(o, t2).replace(a, t2).replace(c, t2);
        return n(r2, 255);
      }
      e.exports = function(e2, t2) {
        var r2 = t2 && t2.replacement || "", n2 = u(e2, r2);
        return r2 === "" ? n2 : u(n2, "");
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(887), i = r(888);
      e.exports = n.bind(null, i);
    }, function(e, t, r) {
      "use strict";
      function n(e2) {
        return e2 >= 55296 && e2 <= 56319;
      }
      function i(e2) {
        return e2 >= 56320 && e2 <= 57343;
      }
      e.exports = function(e2, t2, r2) {
        if (typeof t2 != "string")
          throw new Error("Input must be string");
        for (var s, o, a = t2.length, c = 0, u = 0; u < a; u += 1) {
          if (s = t2.charCodeAt(u), o = t2[u], n(s) && i(t2.charCodeAt(u + 1)) && (o += t2[u += 1]), (c += e2(o)) === r2)
            return t2.slice(0, u + 1);
          if (c > r2)
            return t2.slice(0, u - o.length + 1);
        }
        return t2;
      };
    }, function(e, t, r) {
      "use strict";
      function n(e2) {
        return e2 >= 55296 && e2 <= 56319;
      }
      function i(e2) {
        return e2 >= 56320 && e2 <= 57343;
      }
      e.exports = function(e2) {
        if (typeof e2 != "string")
          throw new Error("Input must be string");
        for (var t2 = e2.length, r2 = 0, s = null, o = null, a = 0; a < t2; a++)
          i(s = e2.charCodeAt(a)) ? o != null && n(o) ? r2 += 1 : r2 += 3 : s <= 127 ? r2 += 1 : s >= 128 && s <= 2047 ? r2 += 2 : s >= 2048 && s <= 65535 && (r2 += 3), o = s;
        return r2;
      };
    }, function(e, t, r) {
      "use strict";
      r(890), r(225);
      const n = r(8), {certificateForKey: i, findAsync: s} = r(895), o = r(0), a = r(6), c = r(5);
      e.exports = class {
        constructor(e2) {
          if (!e2)
            throw o(new Error("keychain is required"), "ERR_KEYCHAIN_REQUIRED");
          this.keychain = e2;
        }
        async encrypt(e2, t2) {
          if (!(t2 instanceof Uint8Array))
            throw o(new Error("Plain data must be a Uint8Array"), "ERR_INVALID_PARAMS");
          const r2 = await this.keychain.findKeyByName(e2), s2 = await this.keychain._getPrivateKey(e2), c2 = n.pki.decryptRsaPrivateKey(s2, this.keychain._()), u = await i(r2, c2), h = n.pkcs7.createEnvelopedData();
          h.addRecipient(u), h.content = n.util.createBuffer(t2), h.encrypt();
          const f = n.asn1.toDer(h.toAsn1()).getBytes();
          return a(f, "ascii");
        }
        async decrypt(e2) {
          if (!(e2 instanceof Uint8Array))
            throw o(new Error("CMS data is required"), "ERR_INVALID_PARAMS");
          let t2;
          try {
            const r3 = n.util.createBuffer(c(e2, "ascii")), i3 = n.asn1.fromDer(r3);
            t2 = n.pkcs7.messageFromAsn1(i3);
          } catch (d) {
            throw o(new Error("Invalid CMS: " + d.message), "ERR_INVALID_CMS");
          }
          const r2 = t2.recipients.filter((e3) => e3.issuer.find((e4) => e4.shortName === "O" && e4.value === "ipfs")).filter((e3) => e3.issuer.find((e4) => e4.shortName === "CN")).map((e3) => ({recipient: e3, keyId: e3.issuer.find((e4) => e4.shortName === "CN").value})), i2 = await s(r2, async (e3) => {
            try {
              if (await this.keychain.findKeyById(e3.keyId))
                return true;
            } catch (d) {
              return false;
            }
            return false;
          });
          if (!i2) {
            const e3 = r2.map((e4) => e4.keyId);
            throw o(new Error("Decryption needs one of the key(s): " + e3.join(", ")), "ERR_MISSING_KEYS", {missingKeys: e3});
          }
          const u = await this.keychain.findKeyById(i2.keyId), h = await this.keychain._getPrivateKey(u.name), f = n.pki.decryptRsaPrivateKey(h, this.keychain._());
          return t2.decrypt(i2.recipient, f), a(t2.content.getBytes(), "ascii");
        }
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      r(79), r(44), r(139), r(78), r(141), r(891), r(50), r(13), r(339);
      var i = n.asn1, s = e.exports = n.pkcs7 = n.pkcs7 || {};
      function o(e2) {
        var t2 = {}, r2 = [];
        if (!i.validate(e2, s.asn1.recipientInfoValidator, t2, r2)) {
          var o2 = new Error("Cannot read PKCS#7 RecipientInfo. ASN.1 object is not an PKCS#7 RecipientInfo.");
          throw o2.errors = r2, o2;
        }
        return {version: t2.version.charCodeAt(0), issuer: n.pki.RDNAttributesAsArray(t2.issuer), serialNumber: n.util.createBuffer(t2.serial).toHex(), encryptedContent: {algorithm: i.derToOid(t2.encAlgorithm), parameter: t2.encParameter.value, content: t2.encKey}};
      }
      function a(e2) {
        for (var t2, r2 = [], s2 = 0; s2 < e2.length; ++s2)
          r2.push((t2 = e2[s2], i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.INTEGER, false, i.integerToDer(t2.version).getBytes()), i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [n.pki.distinguishedNameToAsn1({attributes: t2.issuer}), i.create(i.Class.UNIVERSAL, i.Type.INTEGER, false, n.util.hexToBytes(t2.serialNumber))]), i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(t2.encryptedContent.algorithm).getBytes()), i.create(i.Class.UNIVERSAL, i.Type.NULL, false, "")]), i.create(i.Class.UNIVERSAL, i.Type.OCTETSTRING, false, t2.encryptedContent.content)])));
        return r2;
      }
      function c(e2) {
        var t2 = i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.INTEGER, false, i.integerToDer(e2.version).getBytes()), i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [n.pki.distinguishedNameToAsn1({attributes: e2.issuer}), i.create(i.Class.UNIVERSAL, i.Type.INTEGER, false, n.util.hexToBytes(e2.serialNumber))]), i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(e2.digestAlgorithm).getBytes()), i.create(i.Class.UNIVERSAL, i.Type.NULL, false, "")])]);
        if (e2.authenticatedAttributesAsn1 && t2.value.push(e2.authenticatedAttributesAsn1), t2.value.push(i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(e2.signatureAlgorithm).getBytes()), i.create(i.Class.UNIVERSAL, i.Type.NULL, false, "")])), t2.value.push(i.create(i.Class.UNIVERSAL, i.Type.OCTETSTRING, false, e2.signature)), e2.unauthenticatedAttributes.length > 0) {
          for (var r2 = i.create(i.Class.CONTEXT_SPECIFIC, 1, true, []), s2 = 0; s2 < e2.unauthenticatedAttributes.length; ++s2) {
            var o2 = e2.unauthenticatedAttributes[s2];
            r2.values.push(u(o2));
          }
          t2.value.push(r2);
        }
        return t2;
      }
      function u(e2) {
        var t2;
        if (e2.type === n.pki.oids.contentType)
          t2 = i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(e2.value).getBytes());
        else if (e2.type === n.pki.oids.messageDigest)
          t2 = i.create(i.Class.UNIVERSAL, i.Type.OCTETSTRING, false, e2.value.bytes());
        else if (e2.type === n.pki.oids.signingTime) {
          var r2 = new Date("1950-01-01T00:00:00Z"), s2 = new Date("2050-01-01T00:00:00Z"), o2 = e2.value;
          if (typeof o2 == "string") {
            var a2 = Date.parse(o2);
            o2 = isNaN(a2) ? o2.length === 13 ? i.utcTimeToDate(o2) : i.generalizedTimeToDate(o2) : new Date(a2);
          }
          t2 = o2 >= r2 && o2 < s2 ? i.create(i.Class.UNIVERSAL, i.Type.UTCTIME, false, i.dateToUtcTime(o2)) : i.create(i.Class.UNIVERSAL, i.Type.GENERALIZEDTIME, false, i.dateToGeneralizedTime(o2));
        }
        return i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(e2.type).getBytes()), i.create(i.Class.UNIVERSAL, i.Type.SET, true, [t2])]);
      }
      function h(e2, t2, r2) {
        var s2 = {};
        if (!i.validate(t2, r2, s2, [])) {
          var o2 = new Error("Cannot read PKCS#7 message. ASN.1 object is not a supported PKCS#7 message.");
          throw o2.errors = o2, o2;
        }
        if (i.derToOid(s2.contentType) !== n.pki.oids.data)
          throw new Error("Unsupported PKCS#7 message. Only wrapped ContentType Data supported.");
        if (s2.encryptedContent) {
          var a2 = "";
          if (n.util.isArray(s2.encryptedContent))
            for (var c2 = 0; c2 < s2.encryptedContent.length; ++c2) {
              if (s2.encryptedContent[c2].type !== i.Type.OCTETSTRING)
                throw new Error("Malformed PKCS#7 message, expecting encrypted content constructed of only OCTET STRING objects.");
              a2 += s2.encryptedContent[c2].value;
            }
          else
            a2 = s2.encryptedContent;
          e2.encryptedContent = {algorithm: i.derToOid(s2.encAlgorithm), parameter: n.util.createBuffer(s2.encParameter.value), content: n.util.createBuffer(a2)};
        }
        if (s2.content) {
          a2 = "";
          if (n.util.isArray(s2.content))
            for (c2 = 0; c2 < s2.content.length; ++c2) {
              if (s2.content[c2].type !== i.Type.OCTETSTRING)
                throw new Error("Malformed PKCS#7 message, expecting content constructed of only OCTET STRING objects.");
              a2 += s2.content[c2].value;
            }
          else
            a2 = s2.content;
          e2.content = n.util.createBuffer(a2);
        }
        return e2.version = s2.version.charCodeAt(0), e2.rawCapture = s2, s2;
      }
      function f(e2) {
        if (e2.encryptedContent.key === void 0)
          throw new Error("Symmetric key not available.");
        if (e2.content === void 0) {
          var t2;
          switch (e2.encryptedContent.algorithm) {
            case n.pki.oids["aes128-CBC"]:
            case n.pki.oids["aes192-CBC"]:
            case n.pki.oids["aes256-CBC"]:
              t2 = n.aes.createDecryptionCipher(e2.encryptedContent.key);
              break;
            case n.pki.oids.desCBC:
            case n.pki.oids["des-EDE3-CBC"]:
              t2 = n.des.createDecryptionCipher(e2.encryptedContent.key);
              break;
            default:
              throw new Error("Unsupported symmetric cipher, OID " + e2.encryptedContent.algorithm);
          }
          if (t2.start(e2.encryptedContent.parameter), t2.update(e2.encryptedContent.content), !t2.finish())
            throw new Error("Symmetric decryption failed.");
          e2.content = t2.output;
        }
      }
      s.messageFromPem = function(e2) {
        var t2 = n.pem.decode(e2)[0];
        if (t2.type !== "PKCS7") {
          var r2 = new Error('Could not convert PKCS#7 message from PEM; PEM header type is not "PKCS#7".');
          throw r2.headerType = t2.type, r2;
        }
        if (t2.procType && t2.procType.type === "ENCRYPTED")
          throw new Error("Could not convert PKCS#7 message from PEM; PEM is encrypted.");
        var o2 = i.fromDer(t2.body);
        return s.messageFromAsn1(o2);
      }, s.messageToPem = function(e2, t2) {
        var r2 = {type: "PKCS7", body: i.toDer(e2.toAsn1()).getBytes()};
        return n.pem.encode(r2, {maxline: t2});
      }, s.messageFromAsn1 = function(e2) {
        var t2 = {}, r2 = [];
        if (!i.validate(e2, s.asn1.contentInfoValidator, t2, r2)) {
          var o2 = new Error("Cannot read PKCS#7 message. ASN.1 object is not an PKCS#7 ContentInfo.");
          throw o2.errors = r2, o2;
        }
        var a2, c2 = i.derToOid(t2.contentType);
        switch (c2) {
          case n.pki.oids.envelopedData:
            a2 = s.createEnvelopedData();
            break;
          case n.pki.oids.encryptedData:
            a2 = s.createEncryptedData();
            break;
          case n.pki.oids.signedData:
            a2 = s.createSignedData();
            break;
          default:
            throw new Error("Cannot read PKCS#7 message. ContentType with OID " + c2 + " is not (yet) supported.");
        }
        return a2.fromAsn1(t2.content.value[0]), a2;
      }, s.createSignedData = function() {
        var e2 = null;
        return e2 = {type: n.pki.oids.signedData, version: 1, certificates: [], crls: [], signers: [], digestAlgorithmIdentifiers: [], contentInfo: null, signerInfos: [], fromAsn1: function(t2) {
          if (h(e2, t2, s.asn1.signedDataValidator), e2.certificates = [], e2.crls = [], e2.digestAlgorithmIdentifiers = [], e2.contentInfo = null, e2.signerInfos = [], e2.rawCapture.certificates)
            for (var r2 = e2.rawCapture.certificates.value, i2 = 0; i2 < r2.length; ++i2)
              e2.certificates.push(n.pki.certificateFromAsn1(r2[i2]));
        }, toAsn1: function() {
          e2.contentInfo || e2.sign();
          for (var t2 = [], r2 = 0; r2 < e2.certificates.length; ++r2)
            t2.push(n.pki.certificateToAsn1(e2.certificates[r2]));
          var s2 = [], o2 = i.create(i.Class.CONTEXT_SPECIFIC, 0, true, [i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.INTEGER, false, i.integerToDer(e2.version).getBytes()), i.create(i.Class.UNIVERSAL, i.Type.SET, true, e2.digestAlgorithmIdentifiers), e2.contentInfo])]);
          return t2.length > 0 && o2.value[0].value.push(i.create(i.Class.CONTEXT_SPECIFIC, 0, true, t2)), s2.length > 0 && o2.value[0].value.push(i.create(i.Class.CONTEXT_SPECIFIC, 1, true, s2)), o2.value[0].value.push(i.create(i.Class.UNIVERSAL, i.Type.SET, true, e2.signerInfos)), i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(e2.type).getBytes()), o2]);
        }, addSigner: function(t2) {
          var r2 = t2.issuer, i2 = t2.serialNumber;
          if (t2.certificate) {
            var s2 = t2.certificate;
            typeof s2 == "string" && (s2 = n.pki.certificateFromPem(s2)), r2 = s2.issuer.attributes, i2 = s2.serialNumber;
          }
          var o2 = t2.key;
          if (!o2)
            throw new Error("Could not add PKCS#7 signer; no private key specified.");
          typeof o2 == "string" && (o2 = n.pki.privateKeyFromPem(o2));
          var a2 = t2.digestAlgorithm || n.pki.oids.sha1;
          switch (a2) {
            case n.pki.oids.sha1:
            case n.pki.oids.sha256:
            case n.pki.oids.sha384:
            case n.pki.oids.sha512:
            case n.pki.oids.md5:
              break;
            default:
              throw new Error("Could not add PKCS#7 signer; unknown message digest algorithm: " + a2);
          }
          var c2 = t2.authenticatedAttributes || [];
          if (c2.length > 0) {
            for (var u2 = false, h2 = false, f2 = 0; f2 < c2.length; ++f2) {
              var d = c2[f2];
              if (u2 || d.type !== n.pki.oids.contentType) {
                if (h2 || d.type !== n.pki.oids.messageDigest)
                  ;
                else if (h2 = true, u2)
                  break;
              } else if (u2 = true, h2)
                break;
            }
            if (!u2 || !h2)
              throw new Error("Invalid signer.authenticatedAttributes. If signer.authenticatedAttributes is specified, then it must contain at least two attributes, PKCS #9 content-type and PKCS #9 message-digest.");
          }
          e2.signers.push({key: o2, version: 1, issuer: r2, serialNumber: i2, digestAlgorithm: a2, signatureAlgorithm: n.pki.oids.rsaEncryption, signature: null, authenticatedAttributes: c2, unauthenticatedAttributes: []});
        }, sign: function(t2) {
          var r2;
          (t2 = t2 || {}, typeof e2.content != "object" || e2.contentInfo === null) && (e2.contentInfo = i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(n.pki.oids.data).getBytes())]), "content" in e2 && (e2.content instanceof n.util.ByteBuffer ? r2 = e2.content.bytes() : typeof e2.content == "string" && (r2 = n.util.encodeUtf8(e2.content)), t2.detached ? e2.detachedContent = i.create(i.Class.UNIVERSAL, i.Type.OCTETSTRING, false, r2) : e2.contentInfo.value.push(i.create(i.Class.CONTEXT_SPECIFIC, 0, true, [i.create(i.Class.UNIVERSAL, i.Type.OCTETSTRING, false, r2)]))));
          e2.signers.length !== 0 && function(t3) {
            var r3;
            r3 = e2.detachedContent ? e2.detachedContent : (r3 = e2.contentInfo.value[1]).value[0];
            if (!r3)
              throw new Error("Could not sign PKCS#7 message; there is no content to sign.");
            var s2 = i.derToOid(e2.contentInfo.value[0].value), o2 = i.toDer(r3);
            for (var a2 in o2.getByte(), i.getBerValueLength(o2), o2 = o2.getBytes(), t3)
              t3[a2].start().update(o2);
            for (var h2 = new Date(), f2 = 0; f2 < e2.signers.length; ++f2) {
              var d = e2.signers[f2];
              if (d.authenticatedAttributes.length === 0) {
                if (s2 !== n.pki.oids.data)
                  throw new Error("Invalid signer; authenticatedAttributes must be present when the ContentInfo content type is not PKCS#7 Data.");
              } else {
                d.authenticatedAttributesAsn1 = i.create(i.Class.CONTEXT_SPECIFIC, 0, true, []);
                for (var l = i.create(i.Class.UNIVERSAL, i.Type.SET, true, []), p = 0; p < d.authenticatedAttributes.length; ++p) {
                  var y = d.authenticatedAttributes[p];
                  y.type === n.pki.oids.messageDigest ? y.value = t3[d.digestAlgorithm].digest() : y.type === n.pki.oids.signingTime && (y.value || (y.value = h2)), l.value.push(u(y)), d.authenticatedAttributesAsn1.value.push(u(y));
                }
                o2 = i.toDer(l).getBytes(), d.md.start().update(o2);
              }
              d.signature = d.key.sign(d.md, "RSASSA-PKCS1-V1_5");
            }
            e2.signerInfos = function(e3) {
              for (var t4 = [], r4 = 0; r4 < e3.length; ++r4)
                t4.push(c(e3[r4]));
              return t4;
            }(e2.signers);
          }(function() {
            for (var t3 = {}, r3 = 0; r3 < e2.signers.length; ++r3) {
              var s2 = e2.signers[r3];
              (o2 = s2.digestAlgorithm) in t3 || (t3[o2] = n.md[n.pki.oids[o2]].create()), s2.authenticatedAttributes.length === 0 ? s2.md = t3[o2] : s2.md = n.md[n.pki.oids[o2]].create();
            }
            for (var o2 in e2.digestAlgorithmIdentifiers = [], t3)
              e2.digestAlgorithmIdentifiers.push(i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(o2).getBytes()), i.create(i.Class.UNIVERSAL, i.Type.NULL, false, "")]));
            return t3;
          }());
        }, verify: function() {
          throw new Error("PKCS#7 signature verification not yet implemented.");
        }, addCertificate: function(t2) {
          typeof t2 == "string" && (t2 = n.pki.certificateFromPem(t2)), e2.certificates.push(t2);
        }, addCertificateRevokationList: function(e3) {
          throw new Error("PKCS#7 CRL support not yet implemented.");
        }};
      }, s.createEncryptedData = function() {
        var e2 = null;
        return e2 = {type: n.pki.oids.encryptedData, version: 0, encryptedContent: {algorithm: n.pki.oids["aes256-CBC"]}, fromAsn1: function(t2) {
          h(e2, t2, s.asn1.encryptedDataValidator);
        }, decrypt: function(t2) {
          t2 !== void 0 && (e2.encryptedContent.key = t2), f(e2);
        }};
      }, s.createEnvelopedData = function() {
        var e2 = null;
        return e2 = {type: n.pki.oids.envelopedData, version: 0, recipients: [], encryptedContent: {algorithm: n.pki.oids["aes256-CBC"]}, fromAsn1: function(t2) {
          var r2 = h(e2, t2, s.asn1.envelopedDataValidator);
          e2.recipients = function(e3) {
            for (var t3 = [], r3 = 0; r3 < e3.length; ++r3)
              t3.push(o(e3[r3]));
            return t3;
          }(r2.recipientInfos.value);
        }, toAsn1: function() {
          return i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(e2.type).getBytes()), i.create(i.Class.CONTEXT_SPECIFIC, 0, true, [i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.INTEGER, false, i.integerToDer(e2.version).getBytes()), i.create(i.Class.UNIVERSAL, i.Type.SET, true, a(e2.recipients)), i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, (t2 = e2.encryptedContent, [i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(n.pki.oids.data).getBytes()), i.create(i.Class.UNIVERSAL, i.Type.SEQUENCE, true, [i.create(i.Class.UNIVERSAL, i.Type.OID, false, i.oidToDer(t2.algorithm).getBytes()), i.create(i.Class.UNIVERSAL, i.Type.OCTETSTRING, false, t2.parameter.getBytes())]), i.create(i.Class.CONTEXT_SPECIFIC, 0, true, [i.create(i.Class.UNIVERSAL, i.Type.OCTETSTRING, false, t2.content.getBytes())])]))])])]);
          var t2;
        }, findRecipient: function(t2) {
          for (var r2 = t2.issuer.attributes, n2 = 0; n2 < e2.recipients.length; ++n2) {
            var i2 = e2.recipients[n2], s2 = i2.issuer;
            if (i2.serialNumber === t2.serialNumber && s2.length === r2.length) {
              for (var o2 = true, a2 = 0; a2 < r2.length; ++a2)
                if (s2[a2].type !== r2[a2].type || s2[a2].value !== r2[a2].value) {
                  o2 = false;
                  break;
                }
              if (o2)
                return i2;
            }
          }
          return null;
        }, decrypt: function(t2, r2) {
          if (e2.encryptedContent.key === void 0 && t2 !== void 0 && r2 !== void 0)
            switch (t2.encryptedContent.algorithm) {
              case n.pki.oids.rsaEncryption:
              case n.pki.oids.desCBC:
                var i2 = r2.decrypt(t2.encryptedContent.content);
                e2.encryptedContent.key = n.util.createBuffer(i2);
                break;
              default:
                throw new Error("Unsupported asymmetric cipher, OID " + t2.encryptedContent.algorithm);
            }
          f(e2);
        }, addRecipient: function(t2) {
          e2.recipients.push({version: 0, issuer: t2.issuer.attributes, serialNumber: t2.serialNumber, encryptedContent: {algorithm: n.pki.oids.rsaEncryption, key: t2.publicKey}});
        }, encrypt: function(t2, r2) {
          if (e2.encryptedContent.content === void 0) {
            var i2, s2, o2;
            switch (r2 = r2 || e2.encryptedContent.algorithm, t2 = t2 || e2.encryptedContent.key, r2) {
              case n.pki.oids["aes128-CBC"]:
                i2 = 16, s2 = 16, o2 = n.aes.createEncryptionCipher;
                break;
              case n.pki.oids["aes192-CBC"]:
                i2 = 24, s2 = 16, o2 = n.aes.createEncryptionCipher;
                break;
              case n.pki.oids["aes256-CBC"]:
                i2 = 32, s2 = 16, o2 = n.aes.createEncryptionCipher;
                break;
              case n.pki.oids["des-EDE3-CBC"]:
                i2 = 24, s2 = 8, o2 = n.des.createEncryptionCipher;
                break;
              default:
                throw new Error("Unsupported symmetric cipher, OID " + r2);
            }
            if (t2 === void 0)
              t2 = n.util.createBuffer(n.random.getBytes(i2));
            else if (t2.length() != i2)
              throw new Error("Symmetric key has wrong length; got " + t2.length() + " bytes, expected " + i2 + ".");
            e2.encryptedContent.algorithm = r2, e2.encryptedContent.key = t2, e2.encryptedContent.parameter = n.util.createBuffer(n.random.getBytes(s2));
            var a2 = o2(t2);
            if (a2.start(e2.encryptedContent.parameter.copy()), a2.update(e2.content), !a2.finish())
              throw new Error("Symmetric encryption failed.");
            e2.encryptedContent.content = a2.output;
          }
          for (var c2 = 0; c2 < e2.recipients.length; ++c2) {
            var u2 = e2.recipients[c2];
            if (u2.encryptedContent.content === void 0)
              switch (u2.encryptedContent.algorithm) {
                case n.pki.oids.rsaEncryption:
                  u2.encryptedContent.content = u2.encryptedContent.key.encrypt(e2.encryptedContent.key.data);
                  break;
                default:
                  throw new Error("Unsupported asymmetric cipher, OID " + u2.encryptedContent.algorithm);
              }
          }
        }};
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      r(44), r(13);
      var i = n.asn1, s = e.exports = n.pkcs7asn1 = n.pkcs7asn1 || {};
      n.pkcs7 = n.pkcs7 || {}, n.pkcs7.asn1 = s;
      var o = {name: "ContentInfo", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "ContentInfo.ContentType", tagClass: i.Class.UNIVERSAL, type: i.Type.OID, constructed: false, capture: "contentType"}, {name: "ContentInfo.content", tagClass: i.Class.CONTEXT_SPECIFIC, type: 0, constructed: true, optional: true, captureAsn1: "content"}]};
      s.contentInfoValidator = o;
      var a = {name: "EncryptedContentInfo", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "EncryptedContentInfo.contentType", tagClass: i.Class.UNIVERSAL, type: i.Type.OID, constructed: false, capture: "contentType"}, {name: "EncryptedContentInfo.contentEncryptionAlgorithm", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "EncryptedContentInfo.contentEncryptionAlgorithm.algorithm", tagClass: i.Class.UNIVERSAL, type: i.Type.OID, constructed: false, capture: "encAlgorithm"}, {name: "EncryptedContentInfo.contentEncryptionAlgorithm.parameter", tagClass: i.Class.UNIVERSAL, captureAsn1: "encParameter"}]}, {name: "EncryptedContentInfo.encryptedContent", tagClass: i.Class.CONTEXT_SPECIFIC, type: 0, capture: "encryptedContent", captureAsn1: "encryptedContentAsn1"}]};
      s.envelopedDataValidator = {name: "EnvelopedData", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "EnvelopedData.Version", tagClass: i.Class.UNIVERSAL, type: i.Type.INTEGER, constructed: false, capture: "version"}, {name: "EnvelopedData.RecipientInfos", tagClass: i.Class.UNIVERSAL, type: i.Type.SET, constructed: true, captureAsn1: "recipientInfos"}].concat(a)}, s.encryptedDataValidator = {name: "EncryptedData", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "EncryptedData.Version", tagClass: i.Class.UNIVERSAL, type: i.Type.INTEGER, constructed: false, capture: "version"}].concat(a)};
      var c = {name: "SignerInfo", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "SignerInfo.version", tagClass: i.Class.UNIVERSAL, type: i.Type.INTEGER, constructed: false}, {name: "SignerInfo.issuerAndSerialNumber", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "SignerInfo.issuerAndSerialNumber.issuer", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, captureAsn1: "issuer"}, {name: "SignerInfo.issuerAndSerialNumber.serialNumber", tagClass: i.Class.UNIVERSAL, type: i.Type.INTEGER, constructed: false, capture: "serial"}]}, {name: "SignerInfo.digestAlgorithm", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "SignerInfo.digestAlgorithm.algorithm", tagClass: i.Class.UNIVERSAL, type: i.Type.OID, constructed: false, capture: "digestAlgorithm"}, {name: "SignerInfo.digestAlgorithm.parameter", tagClass: i.Class.UNIVERSAL, constructed: false, captureAsn1: "digestParameter", optional: true}]}, {name: "SignerInfo.authenticatedAttributes", tagClass: i.Class.CONTEXT_SPECIFIC, type: 0, constructed: true, optional: true, capture: "authenticatedAttributes"}, {name: "SignerInfo.digestEncryptionAlgorithm", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, capture: "signatureAlgorithm"}, {name: "SignerInfo.encryptedDigest", tagClass: i.Class.UNIVERSAL, type: i.Type.OCTETSTRING, constructed: false, capture: "signature"}, {name: "SignerInfo.unauthenticatedAttributes", tagClass: i.Class.CONTEXT_SPECIFIC, type: 1, constructed: true, optional: true, capture: "unauthenticatedAttributes"}]};
      s.signedDataValidator = {name: "SignedData", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "SignedData.Version", tagClass: i.Class.UNIVERSAL, type: i.Type.INTEGER, constructed: false, capture: "version"}, {name: "SignedData.DigestAlgorithms", tagClass: i.Class.UNIVERSAL, type: i.Type.SET, constructed: true, captureAsn1: "digestAlgorithms"}, o, {name: "SignedData.Certificates", tagClass: i.Class.CONTEXT_SPECIFIC, type: 0, optional: true, captureAsn1: "certificates"}, {name: "SignedData.CertificateRevocationLists", tagClass: i.Class.CONTEXT_SPECIFIC, type: 1, optional: true, captureAsn1: "crls"}, {name: "SignedData.SignerInfos", tagClass: i.Class.UNIVERSAL, type: i.Type.SET, capture: "signerInfos", optional: true, value: [c]}]}, s.recipientInfoValidator = {name: "RecipientInfo", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "RecipientInfo.version", tagClass: i.Class.UNIVERSAL, type: i.Type.INTEGER, constructed: false, capture: "version"}, {name: "RecipientInfo.issuerAndSerial", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "RecipientInfo.issuerAndSerial.issuer", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, captureAsn1: "issuer"}, {name: "RecipientInfo.issuerAndSerial.serialNumber", tagClass: i.Class.UNIVERSAL, type: i.Type.INTEGER, constructed: false, capture: "serial"}]}, {name: "RecipientInfo.keyEncryptionAlgorithm", tagClass: i.Class.UNIVERSAL, type: i.Type.SEQUENCE, constructed: true, value: [{name: "RecipientInfo.keyEncryptionAlgorithm.algorithm", tagClass: i.Class.UNIVERSAL, type: i.Type.OID, constructed: false, capture: "encAlgorithm"}, {name: "RecipientInfo.keyEncryptionAlgorithm.parameter", tagClass: i.Class.UNIVERSAL, constructed: false, captureAsn1: "encParameter"}]}, {name: "RecipientInfo.encryptedKey", tagClass: i.Class.UNIVERSAL, type: i.Type.OCTETSTRING, constructed: false, capture: "encKey"}]};
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      r(893), e.exports = n.mgf = n.mgf || {}, n.mgf.mgf1 = n.mgf1;
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      r(13), n.mgf = n.mgf || {}, (e.exports = n.mgf.mgf1 = n.mgf1 = n.mgf1 || {}).create = function(e2) {
        return {generate: function(t2, r2) {
          for (var i = new n.util.ByteBuffer(), s = Math.ceil(r2 / e2.digestLength), o = 0; o < s; o++) {
            var a = new n.util.ByteBuffer();
            a.putInt32(o), e2.start(), e2.update(t2 + a.getBytes()), i.putBuffer(e2.digest());
          }
          return i.truncate(i.length() - r2), i.getBytes();
        }};
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(8);
      r(50), r(13), (e.exports = n.pss = n.pss || {}).create = function(e2) {
        arguments.length === 3 && (e2 = {md: arguments[0], mgf: arguments[1], saltLength: arguments[2]});
        var t2, r2 = e2.md, i = e2.mgf, s = r2.digestLength, o = e2.salt || null;
        if (typeof o == "string" && (o = n.util.createBuffer(o)), "saltLength" in e2)
          t2 = e2.saltLength;
        else {
          if (o === null)
            throw new Error("Salt length not specified or specific salt not given.");
          t2 = o.length();
        }
        if (o !== null && o.length() !== t2)
          throw new Error("Given salt length does not match length of given salt.");
        var a = e2.prng || n.random, c = {encode: function(e3, c2) {
          var u, h, f = c2 - 1, d = Math.ceil(f / 8), l = e3.digest().getBytes();
          if (d < s + t2 + 2)
            throw new Error("Message is too long to encrypt.");
          h = o === null ? a.getBytesSync(t2) : o.bytes();
          var p = new n.util.ByteBuffer();
          p.fillWithByte(0, 8), p.putBytes(l), p.putBytes(h), r2.start(), r2.update(p.getBytes());
          var y = r2.digest().getBytes(), g = new n.util.ByteBuffer();
          g.fillWithByte(0, d - t2 - s - 2), g.putByte(1), g.putBytes(h);
          var b = g.getBytes(), m = d - s - 1, v = i.generate(y, m), w = "";
          for (u = 0; u < m; u++)
            w += String.fromCharCode(b.charCodeAt(u) ^ v.charCodeAt(u));
          var _ = 65280 >> 8 * d - f & 255;
          return (w = String.fromCharCode(w.charCodeAt(0) & ~_) + w.substr(1)) + y + String.fromCharCode(188);
        }, verify: function(e3, o2, a2) {
          var c2, u = a2 - 1, h = Math.ceil(u / 8);
          if (o2 = o2.substr(-h), h < s + t2 + 2)
            throw new Error("Inconsistent parameters to PSS signature verification.");
          if (o2.charCodeAt(h - 1) !== 188)
            throw new Error("Encoded message does not end in 0xBC.");
          var f = h - s - 1, d = o2.substr(0, f), l = o2.substr(f, s), p = 65280 >> 8 * h - u & 255;
          if ((d.charCodeAt(0) & p) != 0)
            throw new Error("Bits beyond keysize not zero as expected.");
          var y = i.generate(l, f), g = "";
          for (c2 = 0; c2 < f; c2++)
            g += String.fromCharCode(d.charCodeAt(c2) ^ y.charCodeAt(c2));
          g = String.fromCharCode(g.charCodeAt(0) & ~p) + g.substr(1);
          var b = h - s - t2 - 2;
          for (c2 = 0; c2 < b; c2++)
            if (g.charCodeAt(c2) !== 0)
              throw new Error("Leftmost octets not zero as expected");
          if (g.charCodeAt(b) !== 1)
            throw new Error("Inconsistent PSS signature, 0x01 marker not found");
          var m = g.substr(-t2), v = new n.util.ByteBuffer();
          return v.fillWithByte(0, 8), v.putBytes(e3), v.putBytes(m), r2.start(), r2.update(v.getBytes()), l === r2.digest().getBytes();
        }};
        return c;
      };
    }, function(e, t, r) {
      "use strict";
      r(339);
      const n = r(8).pki;
      e.exports.certificateForKey = (e2, t2) => {
        const r2 = n.setRsaPublicKey(t2.n, t2.e), i = n.createCertificate();
        i.publicKey = r2, i.serialNumber = "01", i.validity.notBefore = new Date(), i.validity.notAfter = new Date(), i.validity.notAfter.setFullYear(i.validity.notBefore.getFullYear() + 10);
        const s = [{name: "organizationName", value: "ipfs"}, {shortName: "OU", value: "keystore"}, {name: "commonName", value: e2.id}];
        return i.setSubject(s), i.setIssuer(s), i.setExtensions([{name: "basicConstraints", cA: true}, {name: "keyUsage", keyCertSign: true, digitalSignature: true, nonRepudiation: true, keyEncipherment: true, dataEncipherment: true}, {name: "extKeyUsage", serverAuth: true, clientAuth: true, codeSigning: true, emailProtection: true, timeStamping: true}, {name: "nsCertType", client: true, server: true, email: true, objsign: true, sslCA: true, emailCA: true, objCA: true}]), i.sign(t2), i;
      }, e.exports.findAsync = async function(e2, t2) {
        const r2 = e2.map(t2);
        return e2[(await Promise.all(r2)).findIndex((e3) => e3)];
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(23), i = r(25), {tap: s} = r(55), o = r(897), {METRICS: a} = r(194), c = r(898), u = ["dataReceived", "dataSent"], h = {in: "dataReceived", out: "dataSent"};
      class f {
        constructor(e2) {
          this._options = n(a, e2), this._globalStats = new c(u, this._options), this._peerStats = new Map(), this._protocolStats = new Map(), this._oldPeers = o(this._options.maxOldPeersRetention), this._running = false, this._onMessage = this._onMessage.bind(this), this._connectionManager = e2.connectionManager, this._connectionManager.on("peer:disconnect", (e3) => {
            this.onPeerDisconnected(e3.remotePeer);
          });
        }
        start() {
          this._running = true;
        }
        stop() {
          this._running = false, this._globalStats.stop();
          for (const e2 of this._peerStats.values())
            e2.stop();
          for (const e2 of this._protocolStats.values())
            e2.stop();
        }
        get global() {
          return this._globalStats;
        }
        get peers() {
          return Array.from(this._peerStats.keys());
        }
        forPeer(e2) {
          const t2 = e2.toB58String();
          return this._peerStats.get(t2) || this._oldPeers.get(t2);
        }
        get protocols() {
          return Array.from(this._protocolStats.keys());
        }
        forProtocol(e2) {
          return this._protocolStats.get(e2);
        }
        onPeerDisconnected(e2) {
          const t2 = e2.toB58String(), r2 = this._peerStats.get(t2);
          r2 && (r2.stop(), this._peerStats.delete(t2), this._oldPeers.set(t2, r2));
        }
        _onMessage({remotePeer: e2, protocol: t2, direction: r2, dataLength: n2}) {
          if (!this._running)
            return;
          const i2 = h[r2];
          let s2 = this.forPeer(e2);
          if (s2 || (s2 = new c(u, this._options), this._peerStats.set(e2.toB58String(), s2)), s2.push(i2, n2), this._globalStats.push(i2, n2), t2) {
            let e3 = this.forProtocol(t2);
            e3 || (e3 = new c(u, this._options), this._protocolStats.set(t2, e3)), e3.push(i2, n2);
          }
        }
        updatePlaceholder(e2, t2) {
          if (!this._running)
            return;
          const r2 = this.forPeer(e2), n2 = t2.toB58String(), i2 = this.forPeer(t2);
          let s2 = r2;
          i2 && (s2 = f.mergeStats(i2, s2), this._oldPeers.delete(n2)), this._peerStats.delete(e2.toB58String()), this._peerStats.set(n2, s2), s2.start();
        }
        trackStream({stream: e2, remotePeer: t2, protocol: r2}) {
          const n2 = this, o2 = e2.source;
          e2.source = s((e3) => n2._onMessage({remotePeer: t2, protocol: r2, direction: "in", dataLength: e3.length}))(o2);
          const a2 = e2.sink;
          return e2.sink = (e3) => i(e3, s((e4) => n2._onMessage({remotePeer: t2, protocol: r2, direction: "out", dataLength: e4.length})), a2), e2;
        }
        static mergeStats(e2, t2) {
          return e2.stop(), t2.stop(), e2._queue = [...e2._queue, ...t2._queue], e2;
        }
      }
      e.exports = f;
    }, function(e, t, r) {
      "use strict";
      const n = r(107);
      e.exports = (e2) => {
        const t2 = n(e2);
        return t2.delete = t2.remove, t2;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(14), i = r(29), s = r(340), o = r(149);
      e.exports = class extends n {
        constructor(e2, t2) {
          super(), this._options = t2, this._queue = [], this._stats = {}, this._frequencyLastTime = Date.now(), this._frequencyAccumulators = {}, this._movingAverages = {}, this._update = this._update.bind(this);
          const r2 = this._options.movingAverageIntervals;
          for (var n2 = 0; n2 < e2.length; n2++) {
            var o2 = e2[n2];
            this._stats[o2] = i(0), this._movingAverages[o2] = {};
            for (var a = 0; a < r2.length; a++) {
              var c = r2[a];
              (this._movingAverages[o2][c] = s(c)).push(this._frequencyLastTime, 0);
            }
          }
        }
        start() {
          this._queue.length && this._resetComputeTimeout();
        }
        stop() {
          this._timeout && (this._timeout.clear(), this._timeout = null);
        }
        get snapshot() {
          return Object.assign({}, this._stats);
        }
        get movingAverages() {
          return Object.assign({}, this._movingAverages);
        }
        toJSON() {
          const e2 = this.snapshot, t2 = this.movingAverages, r2 = {dataReceived: e2.dataReceived.toString(), dataSent: e2.dataSent.toString(), movingAverages: {}}, n2 = Object.keys(t2);
          for (const i2 of n2) {
            r2.movingAverages[i2] = {};
            for (const e3 of Object.keys(t2[i2]))
              r2.movingAverages[i2][e3] = t2[i2][e3].movingAverage();
          }
          return r2;
        }
        push(e2, t2) {
          this._queue.push([e2, t2, Date.now()]), this._resetComputeTimeout();
        }
        _resetComputeTimeout() {
          this._timeout = o(this._update, this._nextTimeout());
        }
        _nextTimeout() {
          const e2 = this._queue.length / this._options.computeThrottleMaxQueueSize;
          return Math.max(this._options.computeThrottleTimeout * (1 - e2), 0);
        }
        _update() {
          if (this._timeout = null, this._queue.length) {
            let e2;
            for (e2 of this._queue)
              this._applyOp(e2);
            this._queue = [], this._updateFrequency(e2[2]), this.emit("update", this._stats);
          }
        }
        _updateFrequency(e2) {
          const t2 = e2 - this._frequencyLastTime;
          Object.keys(this._stats).forEach((r2) => {
            this._updateFrequencyFor(r2, t2, e2);
          }), this._frequencyLastTime = e2;
        }
        _updateFrequencyFor(e2, t2, r2) {
          const n2 = this._frequencyAccumulators[e2] || 0;
          this._frequencyAccumulators[e2] = 0;
          const i2 = n2 / (t2 || 1) * 1e3;
          let o2 = this._movingAverages[e2];
          o2 || (o2 = this._movingAverages[e2] = {});
          const a = this._options.movingAverageIntervals;
          for (var c = 0; c < a.length; c++) {
            var u = a[c], h = o2[u];
            h || (h = o2[u] = s(u)), h.push(r2, i2);
          }
        }
        _applyOp(e2) {
          const t2 = e2[0], r2 = e2[1];
          if (typeof r2 != "number")
            throw new Error("invalid increment number:", r2);
          let n2;
          n2 = Object.prototype.hasOwnProperty.call(this._stats, t2) ? this._stats[t2] : this._stats[t2] = i(0), this._stats[t2] = n2.plus(r2), this._frequencyAccumulators[t2] || (this._frequencyAccumulators[t2] = 0), this._frequencyAccumulators[t2] += r2;
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(1), i = n("libp2p:upgrader");
      i.error = n("libp2p:upgrader:error");
      const s = r(900), {Connection: o} = r(904), a = r(342), c = r(7), u = r(25), h = r(0), f = r(906), {codes: d} = r(26);
      e.exports = class {
        constructor({localPeer: e2, metrics: t2, cryptos: r2, muxers: n2, onConnectionEnd: i2 = () => {
        }, onConnection: s2 = () => {
        }}) {
          this.localPeer = e2, this.metrics = t2, this.cryptos = r2 || new Map(), this.muxers = n2 || new Map(), this.protector = null, this.protocols = new Map(), this.onConnection = s2, this.onConnectionEnd = i2;
        }
        async upgradeInbound(e2) {
          let t2, r2, n2, s2, o2, a2, c2;
          if (this.metrics) {
            ({setTarget: a2, proxy: c2} = f());
            const t3 = parseInt(1e9 * Math.random()).toString(36) + Date.now();
            a2({toB58String: () => t3}), e2 = this.metrics.trackStream({stream: e2, remotePeer: c2});
          }
          i("Starting the inbound connection upgrade");
          let u2 = e2;
          this.protector && (u2 = await this.protector.protect(e2));
          try {
            ({conn: t2, remotePeer: r2, protocol: o2} = await this._encryptInbound(this.localPeer, u2, this.cryptos)), this.muxers.size ? {stream: n2, Muxer: s2} = await this._multiplexInbound(t2, this.muxers) : n2 = t2;
          } catch (h2) {
            throw i.error("Failed to upgrade inbound connection", h2), await e2.close(h2), h2;
          }
          return this.metrics && (this.metrics.updatePlaceholder(c2, r2), a2(r2)), i("Successfully upgraded inbound connection"), this._createConnection({cryptoProtocol: o2, direction: "inbound", maConn: e2, upgradedConn: n2, Muxer: s2, remotePeer: r2});
        }
        async upgradeOutbound(e2) {
          let t2, r2, n2, s2, o2, a2, u2, h2;
          try {
            t2 = c.createFromB58String(e2.remoteAddr.getPeerId());
          } catch (l) {
            i.error("multiaddr did not contain a valid peer id", l);
          }
          if (this.metrics) {
            ({setTarget: u2, proxy: h2} = f());
            const t3 = parseInt(1e9 * Math.random()).toString(36) + Date.now();
            u2({toB58String: () => t3}), e2 = this.metrics.trackStream({stream: e2, remotePeer: h2});
          }
          i("Starting the outbound connection upgrade");
          let d2 = e2;
          this.protector && (d2 = await this.protector.protect(e2));
          try {
            ({conn: r2, remotePeer: n2, protocol: o2} = await this._encryptOutbound(this.localPeer, d2, t2, this.cryptos)), this.muxers.size ? {stream: s2, Muxer: a2} = await this._multiplexOutbound(r2, this.muxers) : s2 = r2;
          } catch (l) {
            throw i.error("Failed to upgrade outbound connection", l), await e2.close(l), l;
          }
          return this.metrics && (this.metrics.updatePlaceholder(h2, n2), u2(n2)), i("Successfully upgraded outbound connection"), this._createConnection({cryptoProtocol: o2, direction: "outbound", maConn: e2, upgradedConn: s2, Muxer: a2, remotePeer: n2});
        }
        _createConnection({cryptoProtocol: e2, direction: t2, maConn: r2, upgradedConn: n2, Muxer: c2, remotePeer: f2}) {
          let l, p, y;
          c2 && (l = new c2({onStream: async (e3) => {
            const r3 = new s.Listener(e3);
            try {
              const {stream: n3, protocol: s2} = await r3.handle(Array.from(this.protocols.keys()));
              i("%s: incoming stream opened on %s", t2, s2), this.metrics && this.metrics.trackStream({stream: n3, remotePeer: f2, protocol: s2}), y.addStream(e3, {protocol: s2}), this._onStream({connection: y, stream: {...e3, ...n3}, protocol: s2});
            } catch (n3) {
              i.error(n3);
            }
          }, onStreamEnd: (e3) => {
            y.removeStream(e3.id);
          }}), p = async (e3) => {
            i("%s: starting new stream on %s", t2, e3);
            const r3 = l.newStream(), n3 = new s.Dialer(r3);
            try {
              const {stream: t3, protocol: i2} = await n3.select(e3);
              return this.metrics && this.metrics.trackStream({stream: t3, remotePeer: f2, protocol: i2}), {stream: {...r3, ...t3}, protocol: i2};
            } catch (o2) {
              throw i.error("could not create new stream", o2), h(o2, d.ERR_UNSUPPORTED_PROTOCOL);
            }
          }, u(n2, l, n2).catch(i.error));
          const g = r2.timeline;
          r2.timeline = new Proxy(g, {set: (...e3) => (y && e3[1] === "close" && e3[2] && !g.close && (async () => {
            try {
              y.stat.status === a.OPEN && await y.close();
            } catch (e4) {
              i.error(e4);
            } finally {
              this.onConnectionEnd(y);
            }
          })(), Reflect.set(...e3))}), r2.timeline.upgraded = Date.now();
          const b = () => {
            throw h(new Error("connection is not multiplexed"), "ERR_CONNECTION_NOT_MULTIPLEXED");
          };
          return y = new o({localAddr: r2.localAddr, remoteAddr: r2.remoteAddr, localPeer: this.localPeer, remotePeer: f2, stat: {direction: t2, timeline: r2.timeline, multiplexer: c2 && c2.multicodec, encryption: e2}, newStream: p || b, getStreams: () => l ? l.streams : b, close: async (e3) => {
            await r2.close(e3), l && l.streams.map((t3) => t3.abort(e3));
          }}), this.onConnection(y), y;
        }
        _onStream({connection: e2, stream: t2, protocol: r2}) {
          this.protocols.get(r2)({connection: e2, stream: t2, protocol: r2});
        }
        async _encryptInbound(e2, t2, r2) {
          const n2 = new s.Listener(t2), o2 = Array.from(r2.keys());
          i("handling inbound crypto protocol selection", o2);
          try {
            const {stream: t3, protocol: s2} = await n2.handle(o2), a2 = r2.get(s2);
            return i("encrypting inbound connection..."), {...await a2.secureInbound(e2, t3), protocol: s2};
          } catch (a2) {
            throw h(a2, d.ERR_ENCRYPTION_FAILED);
          }
        }
        async _encryptOutbound(e2, t2, r2, n2) {
          const o2 = new s.Dialer(t2), a2 = Array.from(n2.keys());
          i("selecting outbound crypto protocol", a2);
          try {
            const {stream: t3, protocol: s2} = await o2.select(a2), c2 = n2.get(s2);
            return i("encrypting outbound connection to %j", r2), {...await c2.secureOutbound(e2, t3, r2), protocol: s2};
          } catch (c2) {
            throw h(c2, d.ERR_ENCRYPTION_FAILED);
          }
        }
        async _multiplexOutbound(e2, t2) {
          const r2 = new s.Dialer(e2), n2 = Array.from(t2.keys());
          i("outbound selecting muxer %s", n2);
          try {
            const {stream: e3, protocol: s2} = await r2.select(n2);
            i("%s selected as muxer protocol", s2);
            return {stream: e3, Muxer: t2.get(s2)};
          } catch (o2) {
            throw h(o2, d.ERR_MUXER_UNAVAILABLE);
          }
        }
        async _multiplexInbound(e2, t2) {
          const r2 = new s.Listener(e2), n2 = Array.from(t2.keys());
          i("inbound handling muxers %s", n2);
          try {
            const {stream: e3, protocol: i2} = await r2.handle(n2);
            return {stream: e3, Muxer: t2.get(i2)};
          } catch (o2) {
            throw h(o2, d.ERR_MUXER_UNAVAILABLE);
          }
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(901), i = r(902), s = r(903), {PROTOCOL_ID: o} = r(341);
      t.PROTOCOL_ID = o;
      class a {
        constructor(e2) {
          this._stream = e2, this._shaken = false;
        }
        async _handshake() {
          if (this._shaken)
            return;
          const {stream: e2} = await n(this._stream, o);
          this._stream = e2, this._shaken = true;
        }
      }
      t.Dialer = class extends a {
        select(e2) {
          return n(this._stream, e2, this._shaken ? null : o);
        }
        async ls() {
          await this._handshake();
          const {stream: e2, protocols: t2} = await s(this._stream);
          return this._stream = e2, t2;
        }
      };
      t.Listener = class extends a {
        handle(e2) {
          return i(this._stream, e2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(1)("mss:select"), i = r(0), s = r(198), o = r(95);
      e.exports = async (e2, t2, r2) => {
        t2 = Array.isArray(t2) ? [...t2] : [t2];
        const {reader: a, writer: c, rest: u, stream: h} = o(e2), f = t2.shift();
        r2 ? (n('select: write ["%s", "%s"]', r2, f), s.writeAll(c, [r2, f])) : (n('select: write "%s"', f), s.write(c, f));
        let d = (await s.read(a)).toString();
        if (n('select: read "%s"', d), d === r2 && (d = (await s.read(a)).toString(), n('select: read "%s"', d)), d === f)
          return u(), {stream: h, protocol: f};
        for (const i2 of t2) {
          n('select: write "%s"', i2), s.write(c, i2);
          const e3 = (await s.read(a)).toString();
          if (n('select: read "%s" for "%s"', e3, i2), e3 === i2)
            return u(), {stream: h, protocol: i2};
        }
        throw u(), i(new Error("protocol selection failed"), "ERR_UNSUPPORTED_PROTOCOL");
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(1)("mss:handle"), i = r(33), s = r(198), o = r(95), {PROTOCOL_ID: a} = r(341);
      e.exports = async (e2, t2) => {
        t2 = Array.isArray(t2) ? t2 : [t2];
        const {writer: r2, reader: c, rest: u, stream: h} = o(e2);
        for (; ; ) {
          const e3 = (await s.read(c)).toString();
          if (n('read "%s"', e3), e3 !== a) {
            if (t2.includes(e3))
              return s.write(r2, e3), n('respond with "%s" for "%s"', e3, e3), u(), {stream: h, protocol: e3};
            e3 !== "ls" ? (s.write(r2, "na"), n('respond with "na" for "%s"', e3)) : (s.write(r2, new i(t2.map((e4) => s.encode(e4)))), n('respond with "%s" for %s', t2, e3));
          } else
            n('respond with "%s" for "%s"', a, e3), s.write(r2, a);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(336), i = r(1)("it-multistream-select:ls"), s = r(198), o = r(95), a = r(34), c = r(25);
      e.exports = async (e2) => {
        const {reader: t2, writer: r2, rest: u, stream: h} = o(e2);
        i('write "ls"'), s.write(r2, "ls"), u();
        const f = await s.read(t2), d = n([f]), l = [];
        return await c(d, a.decode(), async (e3) => {
          for await (const t3 of e3)
            l.push(t3.shallowSlice(0, -1).toString());
        }), {stream: h, protocols: l};
      };
    }, function(e, t, r) {
      "use strict";
      t.Connection = r(905);
    }, function(e, t, r) {
      "use strict";
      const n = r(7), i = r(11), s = r(24), o = r(0), a = r(342);
      e.exports = s(class {
        constructor({localAddr: e2, remoteAddr: t2, localPeer: r2, remotePeer: s2, newStream: c, close: u, getStreams: h, stat: f}) {
          !function(e3, t3, r3, s3, a2, c2, u2) {
            if (e3 && !i.isMultiaddr(e3))
              throw o(new Error("localAddr must be an instance of multiaddr"), "ERR_INVALID_PARAMETERS");
            if (!n.isPeerId(t3))
              throw o(new Error("localPeer must be an instance of peer-id"), "ERR_INVALID_PARAMETERS");
            if (!n.isPeerId(r3))
              throw o(new Error("remotePeer must be an instance of peer-id"), "ERR_INVALID_PARAMETERS");
            if (typeof s3 != "function")
              throw o(new Error("new stream must be a function"), "ERR_INVALID_PARAMETERS");
            if (typeof a2 != "function")
              throw o(new Error("close must be a function"), "ERR_INVALID_PARAMETERS");
            if (typeof c2 != "function")
              throw o(new Error("getStreams must be a function"), "ERR_INVALID_PARAMETERS");
            if (!u2)
              throw o(new Error("connection metadata object must be provided"), "ERR_INVALID_PARAMETERS");
            if (u2.direction !== "inbound" && u2.direction !== "outbound")
              throw o(new Error('direction must be "inbound" or "outbound"'), "ERR_INVALID_PARAMETERS");
            if (!u2.timeline)
              throw o(new Error("connection timeline object must be provided in the stat object"), "ERR_INVALID_PARAMETERS");
            if (!u2.timeline.open)
              throw o(new Error("connection open timestamp must be provided"), "ERR_INVALID_PARAMETERS");
            if (!u2.timeline.upgraded)
              throw o(new Error("connection upgraded timestamp must be provided"), "ERR_INVALID_PARAMETERS");
          }(e2, r2, s2, c, u, h, f), this.id = parseInt(1e9 * Math.random()).toString(36) + Date.now(), this.localAddr = e2, this.remoteAddr = t2, this.localPeer = r2, this.remotePeer = s2, this._stat = {...f, status: a.OPEN}, this._newStream = c, this._close = u, this._getStreams = h, this.registry = new Map(), this.tags = [];
        }
        get stat() {
          return this._stat;
        }
        get streams() {
          return this._getStreams();
        }
        async newStream(e2) {
          if (this.stat.status === a.CLOSING)
            throw o(new Error("the connection is being closed"), "ERR_CONNECTION_BEING_CLOSED");
          if (this.stat.status === a.CLOSED)
            throw o(new Error("the connection is closed"), "ERR_CONNECTION_CLOSED");
          Array.isArray(e2) || (e2 = [e2]);
          const {stream: t2, protocol: r2} = await this._newStream(e2);
          return this.addStream(t2, {protocol: r2}), {stream: t2, protocol: r2};
        }
        addStream(e2, {protocol: t2, metadata: r2 = {}}) {
          this.registry.set(e2.id, {protocol: t2, ...r2});
        }
        removeStream(e2) {
          this.registry.delete(e2);
        }
        async close() {
          if (this.stat.status !== a.CLOSED) {
            if (this._closing)
              return this._closing;
            this.stat.status = a.CLOSING, this._closing = await this._close(), this._stat.timeline.close = Date.now(), this.stat.status = a.CLOSED;
          }
        }
      }, {className: "Connection", symbolName: "@libp2p/interface-connection/connection"});
    }, function(e, t, r) {
      "use strict";
      function n(e2) {
        if (Array.isArray(e2)) {
          for (var t2 = 0, r2 = Array(e2.length); t2 < e2.length; t2++)
            r2[t2] = e2[t2];
          return r2;
        }
        return Array.from(e2);
      }
      e.exports = function(e2) {
        var t2 = void 0, r2 = void 0;
        function i(e3) {
          if (!(e3 instanceof Object))
            throw new Error('Target "' + e3 + '" is not an object');
          r2 = e3;
        }
        function s(e3) {
          Object.keys(e3).forEach(function(t3) {
            var r3 = e3[t3];
            if (typeof r3 != "function")
              throw new Error('Trap "' + t3 + ": " + r3 + '" is not a function');
            if (!Reflect[t3])
              throw new Error('Trap "' + t3 + ": " + r3 + '" is not a valid trap');
          }), t2 = e3;
        }
        i(function() {
        }), e2 && i(e2), s(Reflect);
        var o = new Proxy({}, {get: function(e3, i2) {
          return function() {
            for (var e4 = arguments.length, s2 = Array(e4), o2 = 0; o2 < e4; o2++)
              s2[o2] = arguments[o2];
            return t2[i2].apply(null, [r2].concat(n(s2.slice(1))));
          };
        }});
        return {setTarget: i, setHandler: s, getTarget: function() {
          return r2;
        }, getHandler: function() {
          return t2;
        }, proxy: new Proxy(r2, o)};
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(1), s = i("libp2p:peer-store:address-book");
      s.error = i("libp2p:peer-store:address-book:error");
      const o = r(11), a = r(7), c = r(118), u = r(344), {codes: {ERR_INVALID_PARAMETERS: h}} = r(26), f = r(191);
      e.exports = class extends c {
        constructor(e2) {
          super({peerStore: e2, eventName: "change:multiaddrs", eventProperty: "multiaddrs", eventTransformer: (e3) => e3.addresses ? e3.addresses.map((e4) => e4.multiaddr) : []}), this.data = new Map();
        }
        consumePeerRecord(e2) {
          let t2;
          try {
            t2 = u.createFromProtobuf(e2.payload);
          } catch (a2) {
            return s.error("invalid peer record received"), false;
          }
          if (!t2.peerId.equals(e2.peerId))
            return s("signing key does not match PeerId in the PeerRecord"), false;
          if (!t2.multiaddrs || !t2.multiaddrs.length)
            return false;
          const r2 = t2.peerId, n2 = r2.toB58String(), i2 = (this.data.get(n2) || {}).record;
          if (i2 && i2.seqNumber >= t2.seqNumber)
            return false;
          const o2 = this._toAddresses(t2.multiaddrs, true);
          return this._setData(r2, {addresses: o2, record: {raw: e2.marshal(), seqNumber: t2.seqNumber}}), s("stored provided peer record for " + n2), true;
        }
        getRawEnvelope(e2) {
          const t2 = this.data.get(e2.toB58String());
          if (t2 && t2.record && t2.record.raw)
            return t2.record.raw;
        }
        getPeerRecord(e2) {
          const t2 = this.getRawEnvelope(e2);
          if (t2)
            return f.createFromProtobuf(t2);
        }
        set(e2, t2) {
          if (!a.isPeerId(e2))
            throw s.error("peerId must be an instance of peer-id to store data"), n(new Error("peerId must be an instance of peer-id"), h);
          const r2 = this._toAddresses(t2), i2 = e2.toB58String(), o2 = this.data.get(i2) || {}, c2 = o2.addresses;
          if (!r2.length)
            return this;
          if (c2 && c2.length === r2.length) {
            if (c2.filter((e3) => r2.some((t3) => e3.multiaddr.equals(t3.multiaddr))).length === c2.length)
              return s("the addresses provided to store are equal to the already stored for " + i2), this;
          }
          return this._setData(e2, {addresses: r2, record: o2.record}), s("stored provided multiaddrs for " + i2), c2 || this._ps.emit("peer", e2), this;
        }
        add(e2, t2) {
          if (!a.isPeerId(e2))
            throw s.error("peerId must be an instance of peer-id to store data"), n(new Error("peerId must be an instance of peer-id"), h);
          const r2 = this._toAddresses(t2), i2 = e2.toB58String(), o2 = this.data.get(i2) || {}, c2 = o2.addresses || [];
          return c2.forEach((e3) => {
            r2.find((t3) => t3.multiaddr.equals(e3.multiaddr)) || r2.push(e3);
          }), c2 && c2.length === r2.length ? (s("the addresses provided to store are already stored for " + i2), this) : (this._setData(e2, {addresses: r2, record: o2.record}), s("added provided multiaddrs for " + i2), o2.addresses || this._ps.emit("peer", e2), this);
        }
        get(e2) {
          if (!a.isPeerId(e2))
            throw n(new Error("peerId must be an instance of peer-id"), h);
          const t2 = this.data.get(e2.toB58String());
          return t2 && t2.addresses ? [...t2.addresses] : void 0;
        }
        _toAddresses(e2, t2 = false) {
          if (!e2)
            throw s.error("multiaddrs must be provided to store data"), n(new Error("multiaddrs must be provided"), h);
          const r2 = [];
          return e2.forEach((e3) => {
            if (!o.isMultiaddr(e3))
              throw s.error(`multiaddr ${e3} must be an instance of multiaddr`), n(new Error(`multiaddr ${e3} must be an instance of multiaddr`), h);
            r2.push({multiaddr: e3, isCertified: t2});
          }), r2;
        }
        getMultiaddrsForPeer(e2) {
          if (!a.isPeerId(e2))
            throw n(new Error("peerId must be an instance of peer-id"), h);
          const t2 = this.data.get(e2.toB58String());
          if (t2 && t2.addresses)
            return t2.addresses.map((t3) => {
              const r2 = t3.multiaddr, n2 = r2.getPeerId();
              return n2 && n2 === e2.toB58String() ? r2 : r2.encapsulate("/p2p/" + e2.toB58String());
            });
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0);
      e.exports = class {
        constructor(e2, t2) {
          this.domain = e2, this.codec = t2;
        }
        marshal() {
          throw n(new Error("marshal must be implemented by the subclass"), "ERR_NOT_IMPLEMENTED");
        }
        equals(e2) {
          throw n(new Error("equals must be implemented by the subclass"), "ERR_NOT_IMPLEMENTED");
        }
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2) {
        return e2.length === t2.length && t2.sort() && e2.sort().every((e3, r2) => t2[r2].equals(e3));
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(20);
      e.exports = n("\nmessage PeerRecord {\n    // AddressInfo is a wrapper around a binary multiaddr. It is defined as a\n    // separate message to allow us to add per-address metadata in the future.\n    message AddressInfo {\n        bytes multiaddr = 1;\n    }\n\n    // peer_id contains a libp2p peer id in its binary representation.\n    bytes peer_id = 1;\n\n    // seq contains a monotonically-increasing sequence counter to order PeerRecords in time.\n    uint64 seq = 2;\n\n    // addresses is a list of public listen addresses for the peer.\n    repeated AddressInfo addresses = 3;\n}\n").PeerRecord;
    }, function(e, t, r) {
      "use strict";
      const n = r(17);
      e.exports.ENVELOPE_DOMAIN_PEER_RECORD = n.getName(n.LIBP2P_PEER_RECORD), e.exports.ENVELOPE_PAYLOAD_TYPE_PEER_RECORD = Uint8Array.from([3, 1]);
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(1), s = i("libp2p:peer-store:key-book");
      s.error = i("libp2p:peer-store:key-book:error");
      const o = r(7), a = r(118), {codes: {ERR_INVALID_PARAMETERS: c}} = r(26);
      e.exports = class extends a {
        constructor(e2) {
          super({peerStore: e2, eventName: "change:pubkey", eventProperty: "pubkey", eventTransformer: (e3) => e3.pubKey}), this.data = new Map();
        }
        set(e2, t2) {
          if (!o.isPeerId(e2))
            throw s.error("peerId must be an instance of peer-id to store data"), n(new Error("peerId must be an instance of peer-id"), c);
          const r2 = e2.toB58String();
          return !this.data.get(r2) && t2 && (e2.pubKey = t2, this._setData(e2, e2), s("stored provided public key for " + r2)), this;
        }
        get(e2) {
          if (!o.isPeerId(e2))
            throw n(new Error("peerId must be an instance of peer-id"), c);
          const t2 = this.data.get(e2.toB58String());
          return t2 ? t2.pubKey : void 0;
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(1), s = i("libp2p:peer-store:proto-book");
      s.error = i("libp2p:peer-store:proto-book:error");
      const o = r(19), a = r(7), c = r(118), {codes: {ERR_INVALID_PARAMETERS: u}} = r(26);
      e.exports = class extends c {
        constructor(e2) {
          super({peerStore: e2, eventName: "change:metadata", eventProperty: "metadata"}), this.data = new Map();
        }
        set(e2, t2, r2) {
          if (!a.isPeerId(e2))
            throw s.error("peerId must be an instance of peer-id to store data"), n(new Error("peerId must be an instance of peer-id"), u);
          if (typeof t2 != "string" || !(r2 instanceof Uint8Array))
            throw s.error("valid key and value must be provided to store data"), n(new Error("valid key and value must be provided"), u);
          return this._setValue(e2, t2, r2), this;
        }
        _setValue(e2, t2, r2, {emit: n2 = true} = {}) {
          const i2 = e2.toB58String(), a2 = this.data.get(i2) || new Map(), c2 = a2.get(t2);
          c2 && o(r2, c2) ? s(`the metadata provided to store is equal to the already stored for ${i2} on ${t2}`) : (a2.set(t2, r2), this.data.set(i2, a2), n2 && this._emit(e2, t2));
        }
        get(e2) {
          if (!a.isPeerId(e2))
            throw n(new Error("peerId must be an instance of peer-id"), u);
          return this.data.get(e2.toB58String());
        }
        getValue(e2, t2) {
          if (!a.isPeerId(e2))
            throw n(new Error("peerId must be an instance of peer-id"), u);
          const r2 = this.data.get(e2.toB58String());
          return r2 && r2.get(t2);
        }
        delete(e2) {
          if (!a.isPeerId(e2))
            throw n(new Error("peerId must be an instance of peer-id"), u);
          return !!this.data.delete(e2.toB58String()) && (this._emit(e2), true);
        }
        deleteValue(e2, t2) {
          if (!a.isPeerId(e2))
            throw n(new Error("peerId must be an instance of peer-id"), u);
          const r2 = this.data.get(e2.toB58String());
          return !(!r2 || !r2.delete(t2)) && (this._emit(e2, t2), true);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(1), s = i("libp2p:peer-store:proto-book");
      s.error = i("libp2p:peer-store:proto-book:error");
      const o = r(7), a = r(118), {codes: {ERR_INVALID_PARAMETERS: c}} = r(26);
      e.exports = class extends a {
        constructor(e2) {
          super({peerStore: e2, eventName: "change:protocols", eventProperty: "protocols", eventTransformer: (e3) => Array.from(e3)}), this.data = new Map();
        }
        set(e2, t2) {
          if (!o.isPeerId(e2))
            throw s.error("peerId must be an instance of peer-id to store data"), n(new Error("peerId must be an instance of peer-id"), c);
          if (!t2)
            throw s.error("protocols must be provided to store data"), n(new Error("protocols must be provided"), c);
          const r2 = e2.toB58String(), i2 = this.data.get(r2), a2 = new Set(t2);
          return i2 && (h = a2, (u = i2).size === h.size && [...u].every((e3) => h.has(e3))) ? (s("the protocols provided to store are equal to the already stored for " + r2), this) : (this._setData(e2, a2), s("stored provided protocols for " + r2), this);
          var u, h;
        }
        add(e2, t2) {
          if (!o.isPeerId(e2))
            throw s.error("peerId must be an instance of peer-id to store data"), n(new Error("peerId must be an instance of peer-id"), c);
          if (!t2)
            throw s.error("protocols must be provided to store data"), n(new Error("protocols must be provided"), c);
          const r2 = e2.toB58String(), i2 = this.data.get(r2) || new Set(), a2 = new Set([...i2, ...t2]);
          return i2.size === a2.size ? (s("the protocols provided to store are already stored for " + r2), this) : (t2 = [...a2], this._setData(e2, a2), s("added provided protocols for " + r2), this);
        }
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = (e2, t2, r2) => new class extends e2 {
        subscribe(e3, t3) {
          t3 && this.on(e3, t3), super.subscribe(e3);
        }
        unsubscribe(e3, t3) {
          t3 ? this.removeListener(e3, t3) : this.removeAllListeners(e3), this.listenerCount(e3) === 0 && super.unsubscribe(e3);
        }
      }(t2, r2);
    }, function(e, t, r) {
      "use strict";
      const n = r(1), i = n("libp2p:persistent-peer-store");
      i.error = n("libp2p:persistent-peer-store:error");
      const {Key: s} = r(9), o = r(11), a = r(7), c = r(343), {NAMESPACE_ADDRESS: u, NAMESPACE_COMMON: h, NAMESPACE_KEYS: f, NAMESPACE_METADATA: d, NAMESPACE_PROTOCOL: l} = r(917), p = r(918), y = r(919);
      e.exports = class extends c {
        constructor({peerId: e2, datastore: t2, threshold: r2 = 5}) {
          super({peerId: e2}), this._datastore = t2, this._dirtyPeers = new Set(), this._dirtyMetadata = new Map(), this.threshold = r2, this._addDirtyPeer = this._addDirtyPeer.bind(this);
        }
        async start() {
          i("PeerStore is starting"), this.on("change:protocols", this._addDirtyPeer), this.on("change:multiaddrs", this._addDirtyPeer), this.on("change:pubkey", this._addDirtyPeerKey), this.on("change:metadata", this._addDirtyPeerMetadata);
          for await (const e2 of this._datastore.query({prefix: h}))
            await this._processDatastoreEntry(e2);
          i("PeerStore started");
        }
        async stop() {
          i("PeerStore is stopping"), this.removeAllListeners(), await this._commitData(), i("PeerStore stopped");
        }
        _addDirtyPeer({peerId: e2}) {
          const t2 = e2.toB58String();
          i("add dirty peer", t2), this._dirtyPeers.add(t2), this._dirtyPeers.size >= this.threshold && this._commitData().catch((e3) => {
            i.error("error committing data", e3);
          });
        }
        _addDirtyPeerKey({peerId: e2}) {
          if (e2.hasInlinePublicKey())
            return;
          const t2 = e2.toB58String();
          i("add dirty peer key", t2), this._dirtyPeers.add(t2), this._dirtyPeers.size >= this.threshold && this._commitData().catch((e3) => {
            i.error("error committing data", e3);
          });
        }
        _addDirtyPeerMetadata({peerId: e2, metadata: t2}) {
          const r2 = e2.toB58String();
          i("add dirty metadata peer", r2), this._dirtyPeers.add(r2);
          const n2 = this._dirtyMetadata.get(r2) || new Set();
          n2.add(t2), this._dirtyMetadata.set(r2, n2), this._dirtyPeers.size >= this.threshold && this._commitData().catch((e3) => {
            i.error("error committing data", e3);
          });
        }
        async _commitData() {
          const e2 = Array.from(this._dirtyPeers);
          if (!e2.length)
            return;
          this._dirtyPeers.clear(), i("create batch commit");
          const t2 = this._datastore.batch();
          for (const r2 of e2) {
            const e3 = this.keyBook.data.get(r2) || a.createFromCID(r2);
            this._batchAddressBook(e3, t2), !e3.hasInlinePublicKey() && this._batchKeyBook(e3, t2), this._batchMetadataBook(e3, t2), this._batchProtoBook(e3, t2);
          }
          await t2.commit(), i("batch committed");
        }
        _batchAddressBook(e2, t2) {
          const r2 = e2.toString(), n2 = new s(`${u}${r2}`), o2 = this.addressBook.data.get(e2.toB58String());
          try {
            if (!o2)
              return void t2.delete(n2);
            const e3 = p.encode({addrs: o2.addresses.map((e4) => ({multiaddr: e4.multiaddr.bytes, isCertified: e4.isCertified})), certified_record: o2.record ? {seq: o2.record.seqNumber, raw: o2.record.raw} : void 0});
            t2.put(n2, e3);
          } catch (a2) {
            i.error(a2);
          }
        }
        _batchKeyBook(e2, t2) {
          const r2 = e2.toString(), n2 = new s(`${f}${r2}`);
          try {
            if (!e2.pubKey)
              return void t2.delete(n2);
            const r3 = e2.marshalPubKey();
            t2.put(n2, r3);
          } catch (o2) {
            i.error(o2);
          }
        }
        _batchMetadataBook(e2, t2) {
          const r2 = e2.toString(), n2 = this._dirtyMetadata.get(e2.toB58String()) || [];
          try {
            n2.forEach((n3) => {
              const i2 = new s(`${d}${r2}/${n3}`), o2 = this.metadataBook.getValue(e2, n3);
              o2 ? t2.put(i2, o2) : t2.delete(i2);
            });
          } catch (o2) {
            i.error(o2);
          }
        }
        _batchProtoBook(e2, t2) {
          const r2 = e2.toString(), n2 = new s(`${l}${r2}`), o2 = this.protoBook.get(e2);
          try {
            if (!o2)
              return void t2.delete(n2);
            const e3 = y.encode({protocols: o2});
            t2.put(n2, e3);
          } catch (a2) {
            i.error(a2);
          }
        }
        async _processDatastoreEntry({key: e2, value: t2}) {
          try {
            const r2 = e2.toString().split("/"), n2 = a.createFromCID(r2[3]);
            let s2;
            switch (r2[2]) {
              case "addrs":
                s2 = p.decode(t2), this.addressBook._setData(n2, {addresses: s2.addrs.map((e3) => ({multiaddr: o(e3.multiaddr), isCertified: Boolean(e3.isCertified)})), record: s2.certified_record ? {raw: s2.certified_record.raw, seqNumber: s2.certified_record.seq} : void 0}, {emit: false});
                break;
              case "keys":
                s2 = await a.createFromPubKey(t2), this.keyBook._setData(s2, s2, {emit: false});
                break;
              case "metadata":
                this.metadataBook._setValue(n2, r2[4], t2, {emit: false});
                break;
              case "protos":
                s2 = y.decode(t2), this.protoBook._setData(n2, new Set(s2.protocols), {emit: false});
                break;
              default:
                i("invalid data persisted for: ", e2.toString());
            }
          } catch (r2) {
            i.error(r2);
          }
        }
      };
    }, function(e, t, r) {
      "use strict";
      e.exports.NAMESPACE_COMMON = "/peers/", e.exports.NAMESPACE_ADDRESS = "/peers/addrs/", e.exports.NAMESPACE_KEYS = "/peers/keys/", e.exports.NAMESPACE_METADATA = "/peers/metadata/", e.exports.NAMESPACE_PROTOCOL = "/peers/protos/";
    }, function(e, t, r) {
      "use strict";
      const n = r(20);
      e.exports = n("\nmessage Addresses {\n  // Address represents a single multiaddr.\n  message Address {\n    required bytes multiaddr = 1;\n\n    // Flag to indicate if the address comes from a certified source.\n    optional bool isCertified = 2;\n  }\n\n  // CertifiedRecord contains a serialized signed PeerRecord used to\n  // populate the signedAddrs list.\n  message CertifiedRecord {\n    // The Seq counter from the signed PeerRecord envelope\n    uint64 seq = 1;\n\n    // The serialized bytes of the SignedEnvelope containing the PeerRecord.\n    bytes raw = 2;\n  }\n\n  // The known multiaddrs.\n  repeated Address addrs = 1;\n\n  // The most recently received signed PeerRecord.\n  CertifiedRecord certified_record = 2;\n}\n").Addresses;
    }, function(e, t, r) {
      "use strict";
      const n = r(20);
      e.exports = n("\nmessage Protocols {\n  repeated string protocols = 1;\n}\n").Protocols;
    }, function(e, t, r) {
      "use strict";
      const n = r(1), i = r(0);
      n("libp2p:peer-store").error = n("libp2p:peer-store:error");
      const {ERR_INVALID_PARAMETERS: s} = r(26), o = r(921);
      e.exports = class {
        constructor({peerStore: e2, connectionManager: t2}) {
          this.peerStore = e2, this.connectionManager = t2, this.topologies = new Map(), this._handle = void 0, this._onDisconnect = this._onDisconnect.bind(this), this.connectionManager.on("peer:disconnect", this._onDisconnect);
        }
        get handle() {
          return this._handle;
        }
        set handle(e2) {
          this._handle = e2;
        }
        getConnection(e2) {
          return this.connectionManager.get(e2);
        }
        register(e2) {
          if (!o.isTopology(e2))
            throw i(new Error("topology must be an instance of interfaces/topology"), s);
          const t2 = parseInt(1e9 * Math.random()).toString(36) + Date.now();
          return this.topologies.set(t2, e2), e2.registrar = this, t2;
        }
        unregister(e2) {
          return this.topologies.delete(e2);
        }
        _onDisconnect(e2, t2) {
          for (const [, r2] of this.topologies)
            r2.disconnect(e2.remotePeer, t2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(24), i = () => {
      };
      e.exports = n(class {
        constructor({min: e2 = 0, max: t2 = 1 / 0, handlers: r2 = {}}) {
          this.min = e2, this.max = t2, this._onConnect = r2.onConnect || i, this._onDisconnect = r2.onDisconnect || i, this.peers = new Set();
        }
        set registrar(e2) {
          this._registrar = e2;
        }
        disconnect(e2) {
          this._onDisconnect(e2);
        }
      }, {className: "Topology", symbolName: "@libp2p/js-interfaces/topology"});
    }, function(e, t, r) {
      "use strict";
      const n = r(1), i = n("libp2p-ping");
      i.error = n("libp2p-ping:error");
      const s = r(0), o = r(39), a = r(25), {toBuffer: c} = r(119), {collect: u, take: h} = r(55), {PROTOCOL: f, PING_LENGTH: d} = r(923);
      (t = e.exports = async function(e2, t2) {
        i("dialing %s to %s", f, t2.toB58String ? t2.toB58String() : t2);
        const {stream: r2} = await e2.dialProtocol(t2, f), n2 = new Date(), l = o.randomBytes(d), [p] = await a([l], r2, (e3) => h(1, e3), c, u), y = Date.now();
        if (!l.equals(p))
          throw s(new Error("Received wrong ping ack"), "ERR_WRONG_PING_ACK");
        return y - n2;
      }).mount = function(e2) {
        e2.handle(f, ({stream: e3}) => a(e3, e3));
      }, t.unmount = function(e2) {
        e2.unhandle(f);
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = {PROTOCOL: "/ipfs/ping/1.0.0", PING_LENGTH: 32};
    }, function(e, t, r) {
      "use strict";
      const n = r(1), i = n("libp2p:identify");
      i.error = n("libp2p:identify:error");
      const s = r(0), o = r(925), a = r(34), c = r(25), {collect: u, take: h, consume: f} = r(55), d = r(6), l = r(7), p = r(11), {toBuffer: y} = r(119), g = r(927), b = r(191), m = r(344), {MULTICODEC_IDENTIFY: v, MULTICODEC_IDENTIFY_PUSH: w, AGENT_VERSION: _, PROTOCOL_VERSION: E} = r(333), {codes: S} = r(26);
      class A {
        static getCleanMultiaddr(e2) {
          if (e2 && e2.length > 0)
            try {
              return p(e2);
            } catch (t2) {
              return null;
            }
          return null;
        }
        constructor({libp2p: e2, protocols: t2}) {
          this.peerStore = e2.peerStore, this.connectionManager = e2.connectionManager, this.connectionManager.on("peer:connect", (e3) => {
            const t3 = e3.remotePeer;
            this.identify(e3, t3).catch(i.error);
          }), this.peerId = e2.peerId, this._libp2p = e2, this._protocols = t2, this.handleMessage = this.handleMessage.bind(this), this._host = {agentVersion: _, protocolVersion: E, ...e2._options.host}, this.peerStore.metadataBook.set(this.peerId, "AgentVersion", d(this._host.agentVersion)), this.peerStore.metadataBook.set(this.peerId, "ProtocolVersion", d(this._host.protocolVersion));
        }
        async push(e2) {
          const t2 = await this._getSelfPeerRecord(), r2 = this._libp2p.multiaddrs.map((e3) => e3.bytes), n2 = Array.from(this._protocols.keys()), s2 = e2.map(async (e3) => {
            try {
              const {stream: i2} = await e3.newStream(w);
              await c([{listenAddrs: r2, signedPeerRecord: t2, protocols: n2}], o.encode(g), i2, f);
            } catch (s3) {
              i.error("could not push identify update to peer", s3);
            }
          });
          return Promise.all(s2);
        }
        pushToPeerStore(e2) {
          const t2 = [];
          let r2;
          for (const n2 of e2.peers.values())
            n2.protocols.includes(w) && (r2 = this.connectionManager.get(n2.id)) && t2.push(r2);
          this.push(t2);
        }
        async identify(e2) {
          const {stream: t2} = await e2.newStream(v), [r2] = await c([], t2, a.decode(), h(1), y, u);
          if (!r2)
            throw s(new Error("No data could be retrieved"), S.ERR_CONNECTION_ENDED);
          let n2;
          try {
            n2 = g.decode(r2);
          } catch (k) {
            throw s(k, S.ERR_INVALID_MESSAGE);
          }
          let {publicKey: o2, listenAddrs: f2, protocols: w2, observedAddr: _2, signedPeerRecord: E2} = n2;
          const I = await l.createFromPubKey(o2);
          if (e2.remotePeer.toB58String() !== I.toB58String())
            throw s(new Error("identified peer does not match the expected peer"), S.ERR_INVALID_PEER);
          _2 = A.getCleanMultiaddr(_2);
          try {
            const e3 = await b.openAndCertify(E2, m.DOMAIN);
            if (this.peerStore.addressBook.consumePeerRecord(e3))
              return void this.peerStore.protoBook.set(I, w2);
          } catch (k) {
            i("received invalid envelope, discard it and fallback to listenAddrs is available", k);
          }
          try {
            this.peerStore.addressBook.set(I, f2.map((e3) => p(e3)));
          } catch (k) {
            i.error("received invalid addrs", k);
          }
          this.peerStore.protoBook.set(I, w2), this.peerStore.metadataBook.set(I, "AgentVersion", d(n2.agentVersion)), i("received observed address of %s", _2);
        }
        handleMessage({connection: e2, stream: t2, protocol: r2}) {
          switch (r2) {
            case v:
              return this._handleIdentify({connection: e2, stream: t2});
            case w:
              return this._handlePush({connection: e2, stream: t2});
            default:
              i.error("cannot handle unknown protocol %s", r2);
          }
        }
        async _handleIdentify({connection: e2, stream: t2}) {
          let r2 = new Uint8Array(0);
          this.peerId.pubKey && (r2 = this.peerId.pubKey.bytes);
          const n2 = await this._getSelfPeerRecord(), s2 = g.encode({protocolVersion: this._host.protocolVersion, agentVersion: this._host.agentVersion, publicKey: r2, listenAddrs: this._libp2p.multiaddrs.map((e3) => e3.bytes), signedPeerRecord: n2, observedAddr: e2.remoteAddr.bytes, protocols: Array.from(this._protocols.keys())});
          try {
            await c([s2], a.encode(), t2, f);
          } catch (o2) {
            i.error("could not respond to identify request", o2);
          }
        }
        async _handlePush({connection: e2, stream: t2}) {
          let r2;
          try {
            const [e3] = await c([], t2, a.decode(), h(1), y, u);
            r2 = g.decode(e3);
          } catch (s2) {
            return i.error("received invalid message", s2);
          }
          const n2 = e2.remotePeer;
          try {
            const e3 = await b.openAndCertify(r2.signedPeerRecord, m.DOMAIN);
            if (this.peerStore.addressBook.consumePeerRecord(e3))
              return void this.peerStore.protoBook.set(n2, r2.protocols);
          } catch (s2) {
            i("received invalid envelope, discard it and fallback to listenAddrs is available", s2);
          }
          try {
            this.peerStore.addressBook.set(n2, r2.listenAddrs.map((e3) => p(e3)));
          } catch (s2) {
            i.error("received invalid addrs", s2);
          }
          this.peerStore.protoBook.set(n2, r2.protocols);
        }
        async _getSelfPeerRecord() {
          const e2 = this.peerStore.addressBook.getRawEnvelope(this.peerId);
          if (e2)
            return e2;
          try {
            const e3 = new m({peerId: this.peerId, multiaddrs: this._libp2p.multiaddrs}), t2 = await b.seal(e3, this.peerId);
            return this.peerStore.addressBook.consumePeerRecord(t2), this.peerStore.addressBook.getRawEnvelope(this.peerId);
          } catch (t2) {
            i.error("failed to get self peer record");
          }
          return null;
        }
      }
      e.exports.IdentifyService = A, e.exports.multicodecs = {IDENTIFY: v, IDENTIFY_PUSH: w}, e.exports.Message = g;
    }, function(e, t, r) {
      "use strict";
      const n = r(34), i = r(926), s = r(119);
      e.exports.encode = (e2) => (t2) => n.encode()(i.encode(e2)(t2)), e.exports.decode = (e2) => (t2) => i.decode(e2)(s(n.decode()(t2))), e.exports.it = i;
    }, function(e, t, r) {
      "use strict";
      e.exports.encode = (e2) => (t2) => async function* () {
        for await (const r2 of t2)
          yield e2.encode(r2);
      }(), e.exports.decode = (e2) => (t2) => async function* () {
        for await (const r2 of t2)
          yield e2.decode(r2);
      }();
    }, function(e, t, r) {
      "use strict";
      const n = r(20);
      e.exports = n("\nmessage Identify {\n  // protocolVersion determines compatibility between peers\n  optional string protocolVersion = 5; // e.g. ipfs/1.0.0\n\n  // agentVersion is like a UserAgent string in browsers, or client version in bittorrent\n  // includes the client name and client.\n  optional string agentVersion = 6; // e.g. go-ipfs/0.1.0\n\n  // publicKey is this node's public key (which also gives its node.ID)\n  // - may not need to be sent, as secure channel implies it has been sent.\n  // - then again, if we change / disable secure channel, may still want it.\n  optional bytes publicKey = 1;\n\n  // listenAddrs are the multiaddrs the sender node listens for open connections on\n  repeated bytes listenAddrs = 2;\n\n  // oservedAddr is the multiaddr of the remote endpoint that the sender node perceives\n  // this is useful information to convey to the other side, as it helps the remote endpoint\n  // determine whether its connection to the local peer goes through NAT.\n  optional bytes observedAddr = 4;\n\n  repeated string protocols = 3;\n\n  // signedPeerRecord contains a serialized SignedEnvelope containing a PeerRecord,\n  // signed by the sending node. It contains the same addresses as the listenAddrs field, but\n  // in a form that lets us share authenticated addrs with other peers.\n  optional bytes signedPeerRecord = 8;\n}\n").Identify;
    }, function(e, t, r) {
      "use strict";
      const n = r(929), i = r(952), s = r(989), {NOISE: o} = r(998), a = r(1040), c = r(322), u = r(277);
      e.exports = () => ({dialer: {maxParallelDials: 150, maxDialsPerPeer: 4, dialTimeout: 1e4}, modules: {transport: [n, i], streamMuxer: [s], connEncryption: [o], peerDiscovery: [], dht: a, pubsub: c}, config: {peerDiscovery: {autoDial: true, bootstrap: {enabled: true}, webRTCStar: {enabled: true}}, dht: {kBucketSize: 20, enabled: false, clientMode: true, randomWalk: {enabled: false}, validators: {ipns: u.validator}, selectors: {ipns: u.selector}}, pubsub: {enabled: true, emitSelf: true}}, metrics: {enabled: true}, peerStore: {persistence: true, threshold: 1}});
    }, function(e, t, r) {
      "use strict";
      const n = r(930), i = r(60), s = r(24), o = r(287), {AbortError: a} = r(45), c = r(1)("libp2p:websockets"), u = r(941), h = r(942), {CODE_CIRCUIT: f, CODE_P2P: d} = r(345);
      e.exports = s(class {
        constructor({upgrader: e2}) {
          if (!e2)
            throw new Error("An upgrader must be provided. See https://github.com/libp2p/interface-transport#upgrader.");
          this._upgrader = e2;
        }
        async dial(e2, t2 = {}) {
          c("dialing %s", e2);
          const r2 = await this._connect(e2, t2), n2 = h(r2, {remoteAddr: e2, signal: t2.signal});
          c("new outbound connection %s", n2.remoteAddr);
          const i2 = await this._upgrader.upgradeOutbound(n2);
          return c("outbound connection %s upgraded", n2.remoteAddr), i2;
        }
        async _connect(e2, t2 = {}) {
          if (t2.signal && t2.signal.aborted)
            throw new a();
          const r2 = e2.toOptions();
          c("dialing %s:%s", r2.host, r2.port);
          const i2 = n(o(e2), Object.assign({binary: true}, t2));
          if (!t2.signal)
            return await i2.connected(), c("connected %s", e2), i2;
          let s2;
          const u2 = new Promise((e3, r3) => {
            if (s2 = () => {
              r3(new a()), i2.close();
            }, t2.signal.aborted)
              return s2();
            t2.signal.addEventListener("abort", s2);
          });
          try {
            await Promise.race([u2, i2.connected()]);
          } finally {
            t2.signal.removeEventListener("abort", s2);
          }
          return c("connected %s", e2), i2;
        }
        createListener(e2 = {}, t2) {
          return typeof e2 == "function" && (t2 = e2, e2 = {}), u({handler: t2, upgrader: this._upgrader}, e2);
        }
        filter(e2) {
          return (e2 = Array.isArray(e2) ? e2 : [e2]).filter((e3) => !e3.protoCodes().includes(f) && (i.WebSockets.matches(e3.decapsulateCode(d)) || i.WebSocketsSecure.matches(e3.decapsulateCode(d))));
        }
      }, {className: "WebSockets", symbolName: "@libp2p/js-libp2p-websockets/websockets"});
    }, function(e, t, r) {
      "use strict";
      var n = r(931), i = r(933), s = r(939);
      e.exports = function(e2, t2 = {}) {
        const r2 = typeof window == "undefined" ? {} : window.location, o = s(e2, r2), a = new n(o, t2.websocket), c = i(a, t2);
        return c.remoteAddress = o, c.close = () => new Promise((e3, t3) => {
          a.addEventListener("close", e3), a.close();
        }), c.destroy = () => {
          a.terminate ? a.terminate() : a.close();
        }, c.socket = a, c;
      }, e.exports.connect = e.exports;
    }, function(e, t, r) {
      "use strict";
      e.exports = typeof WebSocket == "undefined" ? r(932) : WebSocket;
    }, function(e, t) {
    }, function(e, t, r) {
      "use strict";
      const n = r(934), i = r(937);
      e.exports = (e2, t2) => {
        (t2 = t2 || {}).binaryType ? e2.binaryType = t2.binaryType : t2.binary && (e2.binaryType = "arraybuffer");
        const r2 = {sink: i(e2, t2), source: n(e2, t2), connected: () => r2.source.connected()};
        return r2;
      };
    }, function(e, t, r) {
      "use strict";
      const {Buffer: n} = r(3), {EventIterator: i} = r(935);
      e.exports = (e2) => {
        const t2 = e2.removeEventListener || e2.removeListener, r2 = async function* () {
          const r3 = new i(({push: r4, stop: n2, fail: i2}) => (e2.addEventListener("message", r4), e2.addEventListener("error", i2), e2.addEventListener("close", n2), () => {
            t2.call(e2, "message", r4), t2.call(e2, "error", i2), t2.call(e2, "close", n2);
          }), {highWaterMark: 1 / 0});
          for await (const {data: e3} of r3)
            yield (s2 = e3, s2 instanceof ArrayBuffer || s2 != null && s2.constructor != null && s2.constructor.name === "ArrayBuffer" && typeof s2.byteLength == "number" ? n.from(e3) : e3);
          var s2;
        }();
        let s, o = e2.readyState === 1;
        return e2.addEventListener("open", () => {
          o = true, s = null;
        }), e2.addEventListener("close", () => {
          o = false, s = null;
        }), e2.addEventListener("error", (e3) => {
          o || (s = e3);
        }), r2.connected = () => new Promise((r3, n2) => {
          if (o)
            return r3();
          if (s)
            return n2(s);
          const i2 = (r4) => {
            t2.call(e2, "open", a), t2.call(e2, "error", c), r4();
          }, a = () => i2(r3), c = (e3) => i2(() => n2(e3));
          e2.addEventListener("open", a), e2.addEventListener("error", c);
        }), r2;
      };
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true});
      const n = r(936);
      t.EventIterator = n.EventIterator, t.subscribe = function(e2, t2, r2) {
        return new n.EventIterator(({push: r3}) => (this.addEventListener(e2, r3, t2), () => this.removeEventListener(e2, r3, t2)), r2);
      }, t.default = n.EventIterator;
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true});
      class n {
        constructor() {
          this.pullQueue = [], this.pushQueue = [], this.eventHandlers = {}, this.isPaused = false, this.isStopped = false;
        }
        push(e2) {
          if (this.isStopped)
            return;
          const t2 = {value: e2, done: false};
          if (this.pullQueue.length) {
            const e3 = this.pullQueue.shift();
            e3 && e3.resolve(t2);
          } else
            this.pushQueue.push(Promise.resolve(t2)), this.highWaterMark !== void 0 && this.pushQueue.length >= this.highWaterMark && !this.isPaused && (this.isPaused = true, this.eventHandlers.highWater ? this.eventHandlers.highWater() : console && console.warn(`EventIterator queue reached ${this.pushQueue.length} items`));
        }
        stop() {
          if (!this.isStopped) {
            this.isStopped = true, this.remove();
            for (const e2 of this.pullQueue)
              e2.resolve({value: void 0, done: true});
            this.pullQueue.length = 0;
          }
        }
        fail(e2) {
          if (!this.isStopped)
            if (this.isStopped = true, this.remove(), this.pullQueue.length) {
              for (const t2 of this.pullQueue)
                t2.reject(e2);
              this.pullQueue.length = 0;
            } else {
              const t2 = Promise.reject(e2);
              t2.catch(() => {
              }), this.pushQueue.push(t2);
            }
        }
        remove() {
          Promise.resolve().then(() => {
            this.removeCallback && this.removeCallback();
          });
        }
        [Symbol.asyncIterator]() {
          return {next: (e2) => {
            const t2 = this.pushQueue.shift();
            return t2 ? (this.lowWaterMark !== void 0 && this.pushQueue.length <= this.lowWaterMark && this.isPaused && (this.isPaused = false, this.eventHandlers.lowWater && this.eventHandlers.lowWater()), t2) : this.isStopped ? Promise.resolve({value: void 0, done: true}) : new Promise((e3, t3) => {
              this.pullQueue.push({resolve: e3, reject: t3});
            });
          }, return: () => (this.isStopped = true, this.pushQueue.length = 0, this.remove(), Promise.resolve({value: void 0, done: true}))};
        }
      }
      class i {
        constructor(e2, {highWaterMark: t2 = 100, lowWaterMark: r2 = 1} = {}) {
          const i3 = new n();
          i3.highWaterMark = t2, i3.lowWaterMark = r2, i3.removeCallback = e2({push: (e3) => i3.push(e3), stop: () => i3.stop(), fail: (e3) => i3.fail(e3), on: (e3, t3) => {
            i3.eventHandlers[e3] = t3;
          }}) || (() => {
          }), this[Symbol.asyncIterator] = () => i3[Symbol.asyncIterator](), Object.freeze(this);
        }
      }
      t.EventIterator = i, t.default = i;
    }, function(e, t, r) {
      "use strict";
      const n = r(938);
      e.exports = (e2, t2) => ((t2 = t2 || {}).closeOnEnd = t2.closeOnEnd !== false, async (r2) => {
        for await (const t3 of r2) {
          try {
            await n(e2);
          } catch (i) {
            if (i.message === "socket closed")
              break;
            throw i;
          }
          e2.send(t3);
        }
        if (t2.closeOnEnd && e2.readyState <= 1)
          return new Promise((t3, r3) => {
            e2.addEventListener("close", (e3) => {
              if (e3.wasClean || e3.code === 1006)
                t3();
              else {
                const t4 = Object.assign(new Error("ws error"), {event: e3});
                r3(t4);
              }
            }), setTimeout(() => e2.close());
          });
      });
    }, function(e, t, r) {
      "use strict";
      e.exports = async (e2) => {
        if (e2.readyState >= 2)
          throw new Error("socket closed");
        if (e2.readyState !== 1)
          return new Promise((t2, r2) => {
            const n = e2 && (e2.removeEventListener || e2.removeListener);
            function i() {
              typeof n == "function" && (n.call(e2, "open", s), n.call(e2, "error", o));
            }
            function s() {
              i(), t2();
            }
            function o(e3) {
              i(), r2(e3);
            }
            e2.addEventListener("open", s), e2.addEventListener("error", o);
          });
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(940), i = {http: "ws", https: "wss"};
      e.exports = (e2, t2) => n(e2, t2, i, "ws");
    }, function(e, t, r) {
      "use strict";
      var n = r(159);
      e.exports = function(e2, t2, r2, i) {
        var s;
        return r2 = r2 || {}, s = (e2 = n.parse(e2, false, true)).protocol ? e2.protocol : (r2[s = t2.protocol ? t2.protocol.replace(/:$/, "") : "http"] || i || s) + ":", e2.host && e2.host[0] === ":" && (e2.host = null), e2.hostname ? n.format({protocol: s, slashes: true, hostname: e2.hostname, port: e2.port, pathname: e2.pathname, search: e2.search}) : (e2.host = t2.host, e2.port ? n.format({protocol: s, slashes: true, host: t2.hostname + ":" + e2.port, port: e2.port, pathname: e2.pathname, search: e2.search}) : e2.pathname ? n.format({protocol: s, slashes: true, host: e2.host, pathname: e2.pathname, search: e2.search}) : (e2.pathname = t2.pathname, e2.search ? n.format({protocol: s, slashes: true, host: e2.host, pathname: e2.pathname, search: e2.search}) : (e2.search = t2.search, e2.format(e2))));
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function() {
        throw new Error("WebSocket Servers can not be created in the browser!");
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(45), {CLOSE_TIMEOUT: i} = r(345), s = r(346), o = r(951), a = r(1), c = a("libp2p:websockets:socket");
      c.error = a("libp2p:websockets:socket:error"), e.exports = (e2, t2 = {}) => {
        const r2 = {async sink(r3) {
          t2.signal && (r3 = n(r3, t2.signal));
          try {
            await e2.sink(async function* () {
              for await (const e3 of r3)
                yield e3 instanceof Uint8Array ? e3 : e3.slice();
            }());
          } catch (i2) {
            i2.type !== "aborted" && c.error(i2);
          }
        }, source: t2.signal ? n(e2.source, t2.signal) : e2.source, conn: e2, localAddr: t2.localAddr || (e2.localAddress && e2.localPort ? s(e2.localAddress, e2.localPort) : void 0), remoteAddr: t2.remoteAddr || s(e2.remoteAddress, e2.remotePort), timeline: {open: Date.now()}, async close() {
          const t3 = Date.now();
          try {
            await o(e2.close(), i);
          } catch (n2) {
            const {host: i2, port: s2} = r2.remoteAddr.toOptions();
            c("timeout closing stream to %s:%s after %dms, destroying it manually", i2, s2, Date.now() - t3), e2.destroy();
          } finally {
            r2.timeline.close = Date.now();
          }
        }};
        return e2.socket.once && e2.socket.once("close", () => {
          r2.timeline.close || (r2.timeline.close = Date.now());
        }), r2;
      };
    }, function(e, t, r) {
      "use strict";
      t.Address4 = r(347), t.Address6 = r(944), t.v6 = {helpers: r(352)};
    }, function(e, t, r) {
      "use strict";
      var n = r(348).BigInteger, i = r(96).sprintf, s = r(945), o = r(350), a = r(351), c = r(946), u = r(947), h = r(199), f = r(200), d = r(347);
      function l(e2) {
        return e2 = (e2 = e2.replace(/^(0{1,})([1-9]+)$/, '<span class="parse-error">$1</span>$2')).replace(/^(0{1,})(0)$/, '<span class="parse-error">$1</span>$2');
      }
      function p(e2, t2) {
        this.groups = t2 === void 0 ? f.GROUPS : t2, this.v4 = false, this.subnet = "/128", this.subnetMask = 128, this.zone = "", this.address = e2;
        var r2 = f.RE_SUBNET_STRING.exec(e2);
        if (r2) {
          if (this.parsedSubnet = r2[0].replace("/", ""), this.subnetMask = parseInt(this.parsedSubnet, 10), this.subnet = "/" + this.subnetMask, isNaN(this.subnetMask) || this.subnetMask < 0 || this.subnetMask > f.BITS)
            return this.valid = false, void (this.error = "Invalid subnet mask.");
          e2 = e2.replace(f.RE_SUBNET_STRING, "");
        } else if (/\//.test(e2))
          return this.valid = false, void (this.error = "Invalid subnet mask.");
        var n2 = f.RE_ZONE_STRING.exec(e2);
        n2 && (this.zone = n2[0], e2 = e2.replace(f.RE_ZONE_STRING, "")), this.addressMinusSuffix = e2, this.parsedAddress = this.parse(this.addressMinusSuffix);
      }
      function y(e2) {
        return i("%04x", parseInt(e2, 16));
      }
      function g(e2) {
        return 255 & e2;
      }
      s(p.prototype, r(948)), s(p.prototype, r(949)), s(p.prototype, r(950)), p.fromBigInteger = function(e2) {
        var t2, r2 = o(e2.toString(16), 32, "0"), n2 = [];
        for (t2 = 0; t2 < f.GROUPS; t2++)
          n2.push(r2.slice(4 * t2, 4 * (t2 + 1)));
        return new p(n2.join(":"));
      }, p.fromURL = function(e2) {
        var t2, r2, n2;
        if (e2.indexOf("[") !== -1 && e2.indexOf("]:") !== -1) {
          if ((n2 = f.RE_URL_WITH_PORT.exec(e2)) === null)
            return {error: "failed to parse address with port", address: null, port: null};
          t2 = n2[1], r2 = n2[2];
        } else if (e2.indexOf("/") !== -1) {
          if (e2 = e2.replace(/^[a-z0-9]+:\/\//, ""), (n2 = f.RE_URL.exec(e2)) === null)
            return {error: "failed to parse address from URL", address: null, port: null};
          t2 = n2[1];
        } else
          t2 = e2;
        return r2 ? ((r2 = parseInt(r2, 10)) < 0 || r2 > 65536) && (r2 = null) : r2 = null, {address: new p(t2), port: r2};
      }, p.fromAddress4 = function(e2) {
        e2 = new d(e2);
        var t2 = f.BITS - (h.BITS - e2.subnetMask);
        return new p("::ffff:" + e2.correctForm() + "/" + t2);
      }, p.fromArpa = function(e2) {
        var t2 = e2.replace(/(\.ip6\.arpa)?\.$/, "");
        if (t2.length !== 63)
          return t2 = {error: "Not Valid 'ip6.arpa' form", address: null};
        t2 = t2.split(".").reverse();
        for (var r2 = 7; r2 > 0; r2--) {
          var n2 = 4 * r2;
          t2.splice(n2, 0, ":");
        }
        return new p(t2 = t2.join(""));
      }, p.prototype.microsoftTranscription = function() {
        return i("%s.ipv6-literal.net", this.correctForm().replace(/:/g, "-"));
      }, p.prototype.mask = function(e2) {
        return e2 === void 0 && (e2 = this.subnetMask), this.getBitsBase2(0, e2);
      }, p.prototype.possibleSubnets = function(e2) {
        e2 === void 0 && (e2 = 128);
        var t2 = f.BITS - this.subnetMask - Math.abs(e2 - f.BITS);
        return t2 < 0 ? "0" : function(e3) {
          for (var t3 = /(\d+)(\d{3})/; t3.test(e3); )
            e3 = e3.replace(t3, "$1,$2");
          return e3;
        }(new n("2", 10).pow(t2).toString(10));
      }, p.prototype._startAddress = function() {
        return new n(this.mask() + a("0", f.BITS - this.subnetMask), 2);
      }, p.prototype.startAddress = function() {
        return p.fromBigInteger(this._startAddress());
      }, p.prototype.startAddressExclusive = function() {
        var e2 = new n("1");
        return p.fromBigInteger(this._startAddress().add(e2));
      }, p.prototype._endAddress = function() {
        return new n(this.mask() + a("1", f.BITS - this.subnetMask), 2);
      }, p.prototype.endAddress = function() {
        return p.fromBigInteger(this._endAddress());
      }, p.prototype.endAddressExclusive = function() {
        var e2 = new n("1");
        return p.fromBigInteger(this._endAddress().subtract(e2));
      }, p.prototype.getScope = function() {
        var e2 = f.SCOPES[this.getBits(12, 16)];
        return this.getType() === "Global unicast" && e2 !== "Link local" && (e2 = "Global"), e2;
      }, p.prototype.getType = function() {
        var e2 = this;
        return c(f.TYPES, function(t2, r2) {
          return e2.isInSubnet(new p(r2));
        }) || "Global unicast";
      }, p.prototype.getBits = function(e2, t2) {
        return new n(this.getBitsBase2(e2, t2), 2);
      }, p.prototype.getBitsBase2 = function(e2, t2) {
        return this.binaryZeroPad().slice(e2, t2);
      }, p.prototype.getBitsBase16 = function(e2, t2) {
        var r2 = t2 - e2;
        return r2 % 4 != 0 ? null : o(this.getBits(e2, t2).toString(16), r2 / 4, "0");
      }, p.prototype.getBitsPastSubnet = function() {
        return this.getBitsBase2(this.subnetMask, f.BITS);
      }, p.prototype.reverseForm = function(e2) {
        e2 || (e2 = {});
        var t2 = Math.floor(this.subnetMask / 4), r2 = this.canonicalForm().replace(/:/g, "").split("").slice(0, t2).reverse().join(".");
        return t2 > 0 ? e2.omitSuffix ? r2 : i("%s.ip6.arpa.", r2) : e2.omitSuffix ? "" : "ip6.arpa.";
      }, p.prototype.correctForm = function() {
        if (!this.parsedAddress)
          return null;
        var e2, t2 = [], r2 = 0, n2 = [];
        for (e2 = 0; e2 < this.parsedAddress.length; e2++) {
          var i2 = parseInt(this.parsedAddress[e2], 16);
          i2 === 0 && r2++, i2 !== 0 && r2 > 0 && (r2 > 1 && n2.push([e2 - r2, e2 - 1]), r2 = 0);
        }
        r2 > 1 && n2.push([this.parsedAddress.length - r2, this.parsedAddress.length - 1]);
        var s2 = n2.map(function(e3) {
          return e3[1] - e3[0] + 1;
        });
        if (n2.length > 0) {
          var o2 = s2.indexOf(u(s2));
          t2 = function(e3, t3) {
            var r3, n3 = [], i3 = [];
            for (r3 = 0; r3 < e3.length; r3++)
              r3 < t3[0] ? n3.push(e3[r3]) : r3 > t3[1] && i3.push(e3[r3]);
            return n3.concat(["compact"]).concat(i3);
          }(this.parsedAddress, n2[o2]);
        } else
          t2 = this.parsedAddress;
        for (e2 = 0; e2 < t2.length; e2++)
          t2[e2] !== "compact" && (t2[e2] = parseInt(t2[e2], 16).toString(16));
        var a2 = t2.join(":");
        return a2 = (a2 = (a2 = a2.replace(/^compact$/, "::")).replace(/^compact|compact$/, ":")).replace(/compact/, "");
      }, p.prototype.binaryZeroPad = function() {
        return o(this.bigInteger().toString(2), f.BITS, "0");
      }, p.prototype.parse4in6 = function(e2) {
        var t2 = e2.split(":"), r2 = t2.slice(-1)[0].match(h.RE_ADDRESS);
        if (r2) {
          for (var n2 = new d(r2[0]), i2 = 0; i2 < n2.groups; i2++)
            if (/^0[0-9]+/.test(n2.parsedAddress[i2]))
              return this.valid = false, this.error = "IPv4 addresses can not have leading zeroes.", this.parseError = e2.replace(h.RE_ADDRESS, n2.parsedAddress.map(l).join(".")), null;
          this.v4 = true, t2[t2.length - 1] = n2.toGroup6(), e2 = t2.join(":");
        }
        return e2;
      }, p.prototype.parse = function(e2) {
        if (e2 = this.parse4in6(e2), this.error)
          return null;
        var t2 = e2.match(f.RE_BAD_CHARACTERS);
        if (t2)
          return this.valid = false, this.error = i("Bad character%s detected in address: %s", t2.length > 1 ? "s" : "", t2.join("")), this.parseError = e2.replace(f.RE_BAD_CHARACTERS, '<span class="parse-error">$1</span>'), null;
        var r2 = e2.match(f.RE_BAD_ADDRESS);
        if (r2)
          return this.valid = false, this.error = i("Address failed regex: %s", r2.join("")), this.parseError = e2.replace(f.RE_BAD_ADDRESS, '<span class="parse-error">$1</span>'), null;
        var n2 = [], s2 = e2.split("::");
        if (s2.length === 2) {
          var o2 = s2[0].split(":"), a2 = s2[1].split(":");
          o2.length === 1 && o2[0] === "" && (o2 = []), a2.length === 1 && a2[0] === "" && (a2 = []);
          var c2 = this.groups - (o2.length + a2.length);
          if (!c2)
            return this.valid = false, this.error = "Error parsing groups", null;
          this.elidedGroups = c2, this.elisionBegin = o2.length, this.elisionEnd = o2.length + this.elidedGroups, o2.forEach(function(e3) {
            n2.push(e3);
          });
          for (var u2 = 0; u2 < c2; u2++)
            n2.push(0);
          a2.forEach(function(e3) {
            n2.push(e3);
          });
        } else {
          if (s2.length !== 1)
            return this.valid = false, this.error = "Too many :: groups found", null;
          n2 = e2.split(":"), this.elidedGroups = 0;
        }
        return (n2 = n2.map(function(e3) {
          return i("%x", parseInt(e3, 16));
        })).length !== this.groups ? (this.valid = false, this.error = "Incorrect number of groups found", null) : (this.valid = true, n2);
      }, p.prototype.canonicalForm = function() {
        return this.valid ? this.parsedAddress.map(y).join(":") : null;
      }, p.prototype.decimal = function() {
        return this.valid ? this.parsedAddress.map(function(e2) {
          return i("%05d", parseInt(e2, 16));
        }).join(":") : null;
      }, p.prototype.bigInteger = function() {
        return this.valid ? new n(this.parsedAddress.map(y).join(""), 16) : null;
      }, p.prototype.to4 = function() {
        var e2 = this.binaryZeroPad().split("");
        return d.fromHex(new n(e2.slice(96, 128).join(""), 2).toString(16));
      }, p.prototype.to4in6 = function() {
        var e2 = this.to4(), t2 = new p(this.parsedAddress.slice(0, 6).join(":"), 6), r2 = t2.correctForm(), n2 = "";
        return /:$/.test(r2) || (n2 = ":"), t2.correctForm() + n2 + e2.address;
      }, p.prototype.inspectTeredo = function() {
        var e2 = this.getBitsBase16(0, 32), t2 = this.getBits(80, 96).xor(new n("ffff", 16)).toString(), r2 = d.fromHex(this.getBitsBase16(32, 64)), s2 = d.fromHex(this.getBits(96, 128).xor(new n("ffffffff", 16)).toString(16)), o2 = this.getBits(64, 80), a2 = this.getBitsBase2(64, 80), c2 = o2.testBit(15), u2 = o2.testBit(14), h2 = o2.testBit(8), f2 = o2.testBit(9), l2 = new n(a2.slice(2, 6) + a2.slice(8, 16), 2).toString(10);
        return {prefix: i("%s:%s", e2.slice(0, 4), e2.slice(4, 8)), server4: r2.address, client4: s2.address, flags: a2, coneNat: c2, microsoft: {reserved: u2, universalLocal: f2, groupIndividual: h2, nonce: l2}, udpPort: t2};
      }, p.prototype.inspect6to4 = function() {
        var e2 = this.getBitsBase16(0, 16), t2 = d.fromHex(this.getBitsBase16(16, 48));
        return {prefix: i("%s", e2.slice(0, 4)), gateway: t2.address};
      }, p.prototype.to6to4 = function() {
        return this.is4() ? new p(["2002", this.getBitsBase16(96, 112), this.getBitsBase16(112, 128), "", "/16"].join(":")) : null;
      }, p.prototype.toByteArray = function() {
        var e2 = this.bigInteger().toByteArray();
        return e2.length === 17 && e2[0] === 0 ? e2.slice(1) : e2;
      }, p.prototype.toUnsignedByteArray = function() {
        return this.toByteArray().map(g);
      }, p.fromByteArray = function(e2) {
        return this.fromUnsignedByteArray(e2.map(g));
      }, p.fromUnsignedByteArray = function(e2) {
        for (var t2 = new n("256", 10), r2 = new n("0", 10), i2 = new n("1", 10), s2 = e2.length - 1; s2 >= 0; s2--)
          r2 = r2.add(i2.multiply(new n(e2[s2].toString(10), 10))), i2 = i2.multiply(t2);
        return p.fromBigInteger(r2);
      }, e.exports = p;
    }, function(e, t, r) {
      "use strict";
      (function(e2, r2) {
        var n = /^\[object .+?Constructor\]$/, i = /^(?:0|[1-9]\d*)$/, s = {};
        s["[object Float32Array]"] = s["[object Float64Array]"] = s["[object Int8Array]"] = s["[object Int16Array]"] = s["[object Int32Array]"] = s["[object Uint8Array]"] = s["[object Uint8ClampedArray]"] = s["[object Uint16Array]"] = s["[object Uint32Array]"] = true, s["[object Arguments]"] = s["[object Array]"] = s["[object ArrayBuffer]"] = s["[object Boolean]"] = s["[object DataView]"] = s["[object Date]"] = s["[object Error]"] = s["[object Function]"] = s["[object Map]"] = s["[object Number]"] = s["[object Object]"] = s["[object RegExp]"] = s["[object Set]"] = s["[object String]"] = s["[object WeakMap]"] = false;
        var o = typeof e2 == "object" && e2 && e2.Object === Object && e2, a = typeof self == "object" && self && self.Object === Object && self, c = o || a || Function("return this")(), u = t && !t.nodeType && t, h = u && typeof r2 == "object" && r2 && !r2.nodeType && r2, f = h && h.exports === u, d = f && o.process, l = function() {
          try {
            var e3 = h && h.require && h.require("util").types;
            return e3 || d && d.binding && d.binding("util");
          } catch (t2) {
          }
        }(), p = l && l.isTypedArray;
        function y(e3, t2, r3) {
          switch (r3.length) {
            case 0:
              return e3.call(t2);
            case 1:
              return e3.call(t2, r3[0]);
            case 2:
              return e3.call(t2, r3[0], r3[1]);
            case 3:
              return e3.call(t2, r3[0], r3[1], r3[2]);
          }
          return e3.apply(t2, r3);
        }
        var g, b, m, v = Array.prototype, w = Function.prototype, _ = Object.prototype, E = c["__core-js_shared__"], S = w.toString, A = _.hasOwnProperty, I = (g = /[^.]+$/.exec(E && E.keys && E.keys.IE_PROTO || "")) ? "Symbol(src)_1." + g : "", k = _.toString, R = S.call(Object), T = RegExp("^" + S.call(A).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), C = f ? c.Buffer : void 0, M = c.Symbol, x = c.Uint8Array, N = C ? C.allocUnsafe : void 0, P = (b = Object.getPrototypeOf, m = Object, function(e3) {
          return b(m(e3));
        }), B = Object.create, O = _.propertyIsEnumerable, D = v.splice, L = M ? M.toStringTag : void 0, U = function() {
          try {
            var e3 = ue(Object, "defineProperty");
            return e3({}, "", {}), e3;
          } catch (t2) {
          }
        }(), j = C ? C.isBuffer : void 0, F = Math.max, z = Date.now, q = ue(c, "Map"), K = ue(Object, "create"), V = function() {
          function e3() {
          }
          return function(t2) {
            if (!_e(t2))
              return {};
            if (B)
              return B(t2);
            e3.prototype = t2;
            var r3 = new e3();
            return e3.prototype = void 0, r3;
          };
        }();
        function H(e3) {
          var t2 = -1, r3 = e3 == null ? 0 : e3.length;
          for (this.clear(); ++t2 < r3; ) {
            var n2 = e3[t2];
            this.set(n2[0], n2[1]);
          }
        }
        function G(e3) {
          var t2 = -1, r3 = e3 == null ? 0 : e3.length;
          for (this.clear(); ++t2 < r3; ) {
            var n2 = e3[t2];
            this.set(n2[0], n2[1]);
          }
        }
        function $(e3) {
          var t2 = -1, r3 = e3 == null ? 0 : e3.length;
          for (this.clear(); ++t2 < r3; ) {
            var n2 = e3[t2];
            this.set(n2[0], n2[1]);
          }
        }
        function W(e3) {
          var t2 = this.__data__ = new G(e3);
          this.size = t2.size;
        }
        function Y(e3, t2) {
          var r3 = ge(e3), n2 = !r3 && ye(e3), i2 = !r3 && !n2 && me(e3), s2 = !r3 && !n2 && !i2 && Se(e3), o2 = r3 || n2 || i2 || s2, a2 = o2 ? function(e4, t3) {
            for (var r4 = -1, n3 = Array(e4); ++r4 < e4; )
              n3[r4] = t3(r4);
            return n3;
          }(e3.length, String) : [], c2 = a2.length;
          for (var u2 in e3)
            !t2 && !A.call(e3, u2) || o2 && (u2 == "length" || i2 && (u2 == "offset" || u2 == "parent") || s2 && (u2 == "buffer" || u2 == "byteLength" || u2 == "byteOffset") || he(u2, c2)) || a2.push(u2);
          return a2;
        }
        function X(e3, t2, r3) {
          (r3 !== void 0 && !pe(e3[t2], r3) || r3 === void 0 && !(t2 in e3)) && Q(e3, t2, r3);
        }
        function J(e3, t2, r3) {
          var n2 = e3[t2];
          A.call(e3, t2) && pe(n2, r3) && (r3 !== void 0 || t2 in e3) || Q(e3, t2, r3);
        }
        function Z(e3, t2) {
          for (var r3 = e3.length; r3--; )
            if (pe(e3[r3][0], t2))
              return r3;
          return -1;
        }
        function Q(e3, t2, r3) {
          t2 == "__proto__" && U ? U(e3, t2, {configurable: true, enumerable: true, value: r3, writable: true}) : e3[t2] = r3;
        }
        H.prototype.clear = function() {
          this.__data__ = K ? K(null) : {}, this.size = 0;
        }, H.prototype.delete = function(e3) {
          var t2 = this.has(e3) && delete this.__data__[e3];
          return this.size -= t2 ? 1 : 0, t2;
        }, H.prototype.get = function(e3) {
          var t2 = this.__data__;
          if (K) {
            var r3 = t2[e3];
            return r3 === "__lodash_hash_undefined__" ? void 0 : r3;
          }
          return A.call(t2, e3) ? t2[e3] : void 0;
        }, H.prototype.has = function(e3) {
          var t2 = this.__data__;
          return K ? t2[e3] !== void 0 : A.call(t2, e3);
        }, H.prototype.set = function(e3, t2) {
          var r3 = this.__data__;
          return this.size += this.has(e3) ? 0 : 1, r3[e3] = K && t2 === void 0 ? "__lodash_hash_undefined__" : t2, this;
        }, G.prototype.clear = function() {
          this.__data__ = [], this.size = 0;
        }, G.prototype.delete = function(e3) {
          var t2 = this.__data__, r3 = Z(t2, e3);
          return !(r3 < 0) && (r3 == t2.length - 1 ? t2.pop() : D.call(t2, r3, 1), --this.size, true);
        }, G.prototype.get = function(e3) {
          var t2 = this.__data__, r3 = Z(t2, e3);
          return r3 < 0 ? void 0 : t2[r3][1];
        }, G.prototype.has = function(e3) {
          return Z(this.__data__, e3) > -1;
        }, G.prototype.set = function(e3, t2) {
          var r3 = this.__data__, n2 = Z(r3, e3);
          return n2 < 0 ? (++this.size, r3.push([e3, t2])) : r3[n2][1] = t2, this;
        }, $.prototype.clear = function() {
          this.size = 0, this.__data__ = {hash: new H(), map: new (q || G)(), string: new H()};
        }, $.prototype.delete = function(e3) {
          var t2 = ce(this, e3).delete(e3);
          return this.size -= t2 ? 1 : 0, t2;
        }, $.prototype.get = function(e3) {
          return ce(this, e3).get(e3);
        }, $.prototype.has = function(e3) {
          return ce(this, e3).has(e3);
        }, $.prototype.set = function(e3, t2) {
          var r3 = ce(this, e3), n2 = r3.size;
          return r3.set(e3, t2), this.size += r3.size == n2 ? 0 : 1, this;
        }, W.prototype.clear = function() {
          this.__data__ = new G(), this.size = 0;
        }, W.prototype.delete = function(e3) {
          var t2 = this.__data__, r3 = t2.delete(e3);
          return this.size = t2.size, r3;
        }, W.prototype.get = function(e3) {
          return this.__data__.get(e3);
        }, W.prototype.has = function(e3) {
          return this.__data__.has(e3);
        }, W.prototype.set = function(e3, t2) {
          var r3 = this.__data__;
          if (r3 instanceof G) {
            var n2 = r3.__data__;
            if (!q || n2.length < 199)
              return n2.push([e3, t2]), this.size = ++r3.size, this;
            r3 = this.__data__ = new $(n2);
          }
          return r3.set(e3, t2), this.size = r3.size, this;
        };
        var ee, te = function(e3, t2, r3) {
          for (var n2 = -1, i2 = Object(e3), s2 = r3(e3), o2 = s2.length; o2--; ) {
            var a2 = s2[ee ? o2 : ++n2];
            if (t2(i2[a2], a2, i2) === false)
              break;
          }
          return e3;
        };
        function re(e3) {
          return e3 == null ? e3 === void 0 ? "[object Undefined]" : "[object Null]" : L && L in Object(e3) ? function(e4) {
            var t2 = A.call(e4, L), r3 = e4[L];
            try {
              e4[L] = void 0;
              var n2 = true;
            } catch (s2) {
            }
            var i2 = k.call(e4);
            n2 && (t2 ? e4[L] = r3 : delete e4[L]);
            return i2;
          }(e3) : function(e4) {
            return k.call(e4);
          }(e3);
        }
        function ne(e3) {
          return Ee(e3) && re(e3) == "[object Arguments]";
        }
        function ie(e3) {
          return !(!_e(e3) || function(e4) {
            return !!I && I in e4;
          }(e3)) && (ve(e3) ? T : n).test(function(e4) {
            if (e4 != null) {
              try {
                return S.call(e4);
              } catch (t2) {
              }
              try {
                return e4 + "";
              } catch (t2) {
              }
            }
            return "";
          }(e3));
        }
        function se(e3) {
          if (!_e(e3))
            return function(e4) {
              var t3 = [];
              if (e4 != null)
                for (var r4 in Object(e4))
                  t3.push(r4);
              return t3;
            }(e3);
          var t2 = fe(e3), r3 = [];
          for (var n2 in e3)
            (n2 != "constructor" || !t2 && A.call(e3, n2)) && r3.push(n2);
          return r3;
        }
        function oe(e3, t2, r3, n2, i2) {
          e3 !== t2 && te(t2, function(s2, o2) {
            if (i2 || (i2 = new W()), _e(s2))
              !function(e4, t3, r4, n3, i3, s3, o3) {
                var a3 = de(e4, r4), c2 = de(t3, r4), u2 = o3.get(c2);
                if (u2)
                  return void X(e4, r4, u2);
                var h2 = s3 ? s3(a3, c2, r4 + "", e4, t3, o3) : void 0, f2 = h2 === void 0;
                if (f2) {
                  var d2 = ge(c2), l2 = !d2 && me(c2), p2 = !d2 && !l2 && Se(c2);
                  h2 = c2, d2 || l2 || p2 ? ge(a3) ? h2 = a3 : Ee(v2 = a3) && be(v2) ? h2 = function(e5, t4) {
                    var r5 = -1, n4 = e5.length;
                    t4 || (t4 = Array(n4));
                    for (; ++r5 < n4; )
                      t4[r5] = e5[r5];
                    return t4;
                  }(a3) : l2 ? (f2 = false, h2 = function(e5, t4) {
                    if (t4)
                      return e5.slice();
                    var r5 = e5.length, n4 = N ? N(r5) : new e5.constructor(r5);
                    return e5.copy(n4), n4;
                  }(c2, true)) : p2 ? (f2 = false, y2 = c2, g2 = (b2 = y2.buffer, m2 = new b2.constructor(b2.byteLength), new x(m2).set(new x(b2)), m2), h2 = new y2.constructor(g2, y2.byteOffset, y2.length)) : h2 = [] : function(e5) {
                    if (!Ee(e5) || re(e5) != "[object Object]")
                      return false;
                    var t4 = P(e5);
                    if (t4 === null)
                      return true;
                    var r5 = A.call(t4, "constructor") && t4.constructor;
                    return typeof r5 == "function" && r5 instanceof r5 && S.call(r5) == R;
                  }(c2) || ye(c2) ? (h2 = a3, ye(a3) ? h2 = function(e5) {
                    return function(e6, t4, r5, n4) {
                      var i4 = !r5;
                      r5 || (r5 = {});
                      var s4 = -1, o4 = t4.length;
                      for (; ++s4 < o4; ) {
                        var a4 = t4[s4], c3 = n4 ? n4(r5[a4], e6[a4], a4, r5, e6) : void 0;
                        c3 === void 0 && (c3 = e6[a4]), i4 ? Q(r5, a4, c3) : J(r5, a4, c3);
                      }
                      return r5;
                    }(e5, Ae(e5));
                  }(a3) : _e(a3) && !ve(a3) || (h2 = function(e5) {
                    return typeof e5.constructor != "function" || fe(e5) ? {} : V(P(e5));
                  }(c2))) : f2 = false;
                }
                var y2, g2, b2, m2;
                var v2;
                f2 && (o3.set(c2, h2), i3(h2, c2, n3, s3, o3), o3.delete(c2));
                X(e4, r4, h2);
              }(e3, t2, o2, r3, oe, n2, i2);
            else {
              var a2 = n2 ? n2(de(e3, o2), s2, o2 + "", e3, t2, i2) : void 0;
              a2 === void 0 && (a2 = s2), X(e3, o2, a2);
            }
          }, Ae);
        }
        function ae(e3, t2) {
          return le(function(e4, t3, r3) {
            return t3 = F(t3 === void 0 ? e4.length - 1 : t3, 0), function() {
              for (var n2 = arguments, i2 = -1, s2 = F(n2.length - t3, 0), o2 = Array(s2); ++i2 < s2; )
                o2[i2] = n2[t3 + i2];
              i2 = -1;
              for (var a2 = Array(t3 + 1); ++i2 < t3; )
                a2[i2] = n2[i2];
              return a2[t3] = r3(o2), y(e4, this, a2);
            };
          }(e3, t2, Re), e3 + "");
        }
        function ce(e3, t2) {
          var r3, n2, i2 = e3.__data__;
          return ((n2 = typeof (r3 = t2)) == "string" || n2 == "number" || n2 == "symbol" || n2 == "boolean" ? r3 !== "__proto__" : r3 === null) ? i2[typeof t2 == "string" ? "string" : "hash"] : i2.map;
        }
        function ue(e3, t2) {
          var r3 = function(e4, t3) {
            return e4 == null ? void 0 : e4[t3];
          }(e3, t2);
          return ie(r3) ? r3 : void 0;
        }
        function he(e3, t2) {
          var r3 = typeof e3;
          return !!(t2 = t2 == null ? 9007199254740991 : t2) && (r3 == "number" || r3 != "symbol" && i.test(e3)) && e3 > -1 && e3 % 1 == 0 && e3 < t2;
        }
        function fe(e3) {
          var t2 = e3 && e3.constructor;
          return e3 === (typeof t2 == "function" && t2.prototype || _);
        }
        function de(e3, t2) {
          if ((t2 !== "constructor" || typeof e3[t2] != "function") && t2 != "__proto__")
            return e3[t2];
        }
        var le = function(e3) {
          var t2 = 0, r3 = 0;
          return function() {
            var n2 = z(), i2 = 16 - (n2 - r3);
            if (r3 = n2, i2 > 0) {
              if (++t2 >= 800)
                return arguments[0];
            } else
              t2 = 0;
            return e3.apply(void 0, arguments);
          };
        }(U ? function(e3, t2) {
          return U(e3, "toString", {configurable: true, enumerable: false, value: (r3 = t2, function() {
            return r3;
          }), writable: true});
          var r3;
        } : Re);
        function pe(e3, t2) {
          return e3 === t2 || e3 != e3 && t2 != t2;
        }
        var ye = ne(function() {
          return arguments;
        }()) ? ne : function(e3) {
          return Ee(e3) && A.call(e3, "callee") && !O.call(e3, "callee");
        }, ge = Array.isArray;
        function be(e3) {
          return e3 != null && we(e3.length) && !ve(e3);
        }
        var me = j || function() {
          return false;
        };
        function ve(e3) {
          if (!_e(e3))
            return false;
          var t2 = re(e3);
          return t2 == "[object Function]" || t2 == "[object GeneratorFunction]" || t2 == "[object AsyncFunction]" || t2 == "[object Proxy]";
        }
        function we(e3) {
          return typeof e3 == "number" && e3 > -1 && e3 % 1 == 0 && e3 <= 9007199254740991;
        }
        function _e(e3) {
          var t2 = typeof e3;
          return e3 != null && (t2 == "object" || t2 == "function");
        }
        function Ee(e3) {
          return e3 != null && typeof e3 == "object";
        }
        var Se = p ? function(e3) {
          return function(t2) {
            return e3(t2);
          };
        }(p) : function(e3) {
          return Ee(e3) && we(e3.length) && !!s[re(e3)];
        };
        function Ae(e3) {
          return be(e3) ? Y(e3, true) : se(e3);
        }
        var Ie, ke = (Ie = function(e3, t2, r3) {
          oe(e3, t2, r3);
        }, ae(function(e3, t2) {
          var r3 = -1, n2 = t2.length, i2 = n2 > 1 ? t2[n2 - 1] : void 0, s2 = n2 > 2 ? t2[2] : void 0;
          for (i2 = Ie.length > 3 && typeof i2 == "function" ? (n2--, i2) : void 0, s2 && function(e4, t3, r4) {
            if (!_e(r4))
              return false;
            var n3 = typeof t3;
            return !!(n3 == "number" ? be(r4) && he(t3, r4.length) : n3 == "string" && t3 in r4) && pe(r4[t3], e4);
          }(t2[0], t2[1], s2) && (i2 = n2 < 3 ? void 0 : i2, n2 = 1), e3 = Object(e3); ++r3 < n2; ) {
            var o2 = t2[r3];
            o2 && Ie(e3, o2, r3, i2);
          }
          return e3;
        }));
        function Re(e3) {
          return e3;
        }
        r2.exports = ke;
      }).call(this, r(12), r(103)(e));
    }, function(e, t, r) {
      "use strict";
      (function(e2, r2) {
        var n = "[object Arguments]", i = "[object Map]", s = "[object Object]", o = "[object Set]", a = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, c = /^\w*$/, u = /^\./, h = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, f = /^\s+|\s+$/g, d = /\\(\\)?/g, l = /^[-+]0x[0-9a-f]+$/i, p = /^0b[01]+$/i, y = /^\[object .+?Constructor\]$/, g = /^0o[0-7]+$/i, b = /^(?:0|[1-9]\d*)$/, m = {};
        m["[object Float32Array]"] = m["[object Float64Array]"] = m["[object Int8Array]"] = m["[object Int16Array]"] = m["[object Int32Array]"] = m["[object Uint8Array]"] = m["[object Uint8ClampedArray]"] = m["[object Uint16Array]"] = m["[object Uint32Array]"] = true, m[n] = m["[object Array]"] = m["[object ArrayBuffer]"] = m["[object Boolean]"] = m["[object DataView]"] = m["[object Date]"] = m["[object Error]"] = m["[object Function]"] = m[i] = m["[object Number]"] = m[s] = m["[object RegExp]"] = m[o] = m["[object String]"] = m["[object WeakMap]"] = false;
        var v = parseInt, w = typeof e2 == "object" && e2 && e2.Object === Object && e2, _ = typeof self == "object" && self && self.Object === Object && self, E = w || _ || Function("return this")(), S = t && !t.nodeType && t, A = S && typeof r2 == "object" && r2 && !r2.nodeType && r2, I = A && A.exports === S && w.process, k = function() {
          try {
            return I && I.binding("util");
          } catch (e3) {
          }
        }(), R = k && k.isTypedArray;
        function T(e3, t2) {
          for (var r3 = -1, n2 = e3 ? e3.length : 0; ++r3 < n2; )
            if (t2(e3[r3], r3, e3))
              return true;
          return false;
        }
        function C(e3) {
          var t2 = false;
          if (e3 != null && typeof e3.toString != "function")
            try {
              t2 = !!(e3 + "");
            } catch (r3) {
            }
          return t2;
        }
        function M(e3) {
          var t2 = -1, r3 = Array(e3.size);
          return e3.forEach(function(e4, n2) {
            r3[++t2] = [n2, e4];
          }), r3;
        }
        function x(e3) {
          var t2 = -1, r3 = Array(e3.size);
          return e3.forEach(function(e4) {
            r3[++t2] = e4;
          }), r3;
        }
        var N, P, B, O = Array.prototype, D = Function.prototype, L = Object.prototype, U = E["__core-js_shared__"], j = (N = /[^.]+$/.exec(U && U.keys && U.keys.IE_PROTO || "")) ? "Symbol(src)_1." + N : "", F = D.toString, z = L.hasOwnProperty, q = L.toString, K = RegExp("^" + F.call(z).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), V = E.Symbol, H = E.Uint8Array, G = L.propertyIsEnumerable, $ = O.splice, W = (P = Object.keys, B = Object, function(e3) {
          return P(B(e3));
        }), Y = Math.max, X = ke(E, "DataView"), J = ke(E, "Map"), Z = ke(E, "Promise"), Q = ke(E, "Set"), ee = ke(E, "WeakMap"), te = ke(Object, "create"), re = Be(X), ne = Be(J), ie = Be(Z), se = Be(Q), oe = Be(ee), ae = V ? V.prototype : void 0, ce = ae ? ae.valueOf : void 0, ue = ae ? ae.toString : void 0;
        function he(e3) {
          var t2 = -1, r3 = e3 ? e3.length : 0;
          for (this.clear(); ++t2 < r3; ) {
            var n2 = e3[t2];
            this.set(n2[0], n2[1]);
          }
        }
        function fe(e3) {
          var t2 = -1, r3 = e3 ? e3.length : 0;
          for (this.clear(); ++t2 < r3; ) {
            var n2 = e3[t2];
            this.set(n2[0], n2[1]);
          }
        }
        function de(e3) {
          var t2 = -1, r3 = e3 ? e3.length : 0;
          for (this.clear(); ++t2 < r3; ) {
            var n2 = e3[t2];
            this.set(n2[0], n2[1]);
          }
        }
        function le(e3) {
          var t2 = -1, r3 = e3 ? e3.length : 0;
          for (this.__data__ = new de(); ++t2 < r3; )
            this.add(e3[t2]);
        }
        function pe(e3) {
          this.__data__ = new fe(e3);
        }
        function ye(e3, t2) {
          var r3 = Fe(e3) || je(e3) ? function(e4, t3) {
            for (var r4 = -1, n3 = Array(e4); ++r4 < e4; )
              n3[r4] = t3(r4);
            return n3;
          }(e3.length, String) : [], n2 = r3.length, i2 = !!n2;
          for (var s2 in e3)
            !t2 && !z.call(e3, s2) || i2 && (s2 == "length" || Te(s2, n2)) || r3.push(s2);
          return r3;
        }
        function ge(e3, t2) {
          for (var r3 = e3.length; r3--; )
            if (Ue(e3[r3][0], t2))
              return r3;
          return -1;
        }
        function be(e3, t2) {
          for (var r3 = 0, n2 = (t2 = Ce(t2, e3) ? [t2] : Se(t2)).length; e3 != null && r3 < n2; )
            e3 = e3[Pe(t2[r3++])];
          return r3 && r3 == n2 ? e3 : void 0;
        }
        function me(e3, t2) {
          return e3 != null && t2 in Object(e3);
        }
        function ve(e3, t2, r3, a2, c2) {
          return e3 === t2 || (e3 == null || t2 == null || !Ve(e3) && !He(t2) ? e3 != e3 && t2 != t2 : function(e4, t3, r4, a3, c3, u2) {
            var h2 = Fe(e4), f2 = Fe(t3), d2 = "[object Array]", l2 = "[object Array]";
            h2 || (d2 = (d2 = Re(e4)) == n ? s : d2);
            f2 || (l2 = (l2 = Re(t3)) == n ? s : l2);
            var p2 = d2 == s && !C(e4), y2 = l2 == s && !C(t3), g2 = d2 == l2;
            if (g2 && !p2)
              return u2 || (u2 = new pe()), h2 || $e(e4) ? Ae(e4, t3, r4, a3, c3, u2) : function(e5, t4, r5, n2, s2, a4, c4) {
                switch (r5) {
                  case "[object DataView]":
                    if (e5.byteLength != t4.byteLength || e5.byteOffset != t4.byteOffset)
                      return false;
                    e5 = e5.buffer, t4 = t4.buffer;
                  case "[object ArrayBuffer]":
                    return !(e5.byteLength != t4.byteLength || !n2(new H(e5), new H(t4)));
                  case "[object Boolean]":
                  case "[object Date]":
                  case "[object Number]":
                    return Ue(+e5, +t4);
                  case "[object Error]":
                    return e5.name == t4.name && e5.message == t4.message;
                  case "[object RegExp]":
                  case "[object String]":
                    return e5 == t4 + "";
                  case i:
                    var u3 = M;
                  case o:
                    var h3 = 2 & a4;
                    if (u3 || (u3 = x), e5.size != t4.size && !h3)
                      return false;
                    var f3 = c4.get(e5);
                    if (f3)
                      return f3 == t4;
                    a4 |= 1, c4.set(e5, t4);
                    var d3 = Ae(u3(e5), u3(t4), n2, s2, a4, c4);
                    return c4.delete(e5), d3;
                  case "[object Symbol]":
                    if (ce)
                      return ce.call(e5) == ce.call(t4);
                }
                return false;
              }(e4, t3, d2, r4, a3, c3, u2);
            if (!(2 & c3)) {
              var b2 = p2 && z.call(e4, "__wrapped__"), m2 = y2 && z.call(t3, "__wrapped__");
              if (b2 || m2) {
                var v2 = b2 ? e4.value() : e4, w2 = m2 ? t3.value() : t3;
                return u2 || (u2 = new pe()), r4(v2, w2, a3, c3, u2);
              }
            }
            if (!g2)
              return false;
            return u2 || (u2 = new pe()), function(e5, t4, r5, n2, i2, s2) {
              var o2 = 2 & i2, a4 = We(e5), c4 = a4.length, u3 = We(t4).length;
              if (c4 != u3 && !o2)
                return false;
              var h3 = c4;
              for (; h3--; ) {
                var f3 = a4[h3];
                if (!(o2 ? f3 in t4 : z.call(t4, f3)))
                  return false;
              }
              var d3 = s2.get(e5);
              if (d3 && s2.get(t4))
                return d3 == t4;
              var l3 = true;
              s2.set(e5, t4), s2.set(t4, e5);
              var p3 = o2;
              for (; ++h3 < c4; ) {
                f3 = a4[h3];
                var y3 = e5[f3], g3 = t4[f3];
                if (n2)
                  var b3 = o2 ? n2(g3, y3, f3, t4, e5, s2) : n2(y3, g3, f3, e5, t4, s2);
                if (!(b3 === void 0 ? y3 === g3 || r5(y3, g3, n2, i2, s2) : b3)) {
                  l3 = false;
                  break;
                }
                p3 || (p3 = f3 == "constructor");
              }
              if (l3 && !p3) {
                var m3 = e5.constructor, v3 = t4.constructor;
                m3 == v3 || !("constructor" in e5) || !("constructor" in t4) || typeof m3 == "function" && m3 instanceof m3 && typeof v3 == "function" && v3 instanceof v3 || (l3 = false);
              }
              return s2.delete(e5), s2.delete(t4), l3;
            }(e4, t3, r4, a3, c3, u2);
          }(e3, t2, ve, r3, a2, c2));
        }
        function we(e3) {
          return !(!Ve(e3) || function(e4) {
            return !!j && j in e4;
          }(e3)) && (qe(e3) || C(e3) ? K : y).test(Be(e3));
        }
        function _e(e3) {
          return typeof e3 == "function" ? e3 : e3 == null ? Ye : typeof e3 == "object" ? Fe(e3) ? function(e4, t3) {
            if (Ce(e4) && Me(t3))
              return xe(Pe(e4), t3);
            return function(r4) {
              var n2 = function(e5, t4, r5) {
                var n3 = e5 == null ? void 0 : be(e5, t4);
                return n3 === void 0 ? r5 : n3;
              }(r4, e4);
              return n2 === void 0 && n2 === t3 ? function(e5, t4) {
                return e5 != null && function(e6, t5, r5) {
                  t5 = Ce(t5, e6) ? [t5] : Se(t5);
                  var n3, i2 = -1, s2 = t5.length;
                  for (; ++i2 < s2; ) {
                    var o2 = Pe(t5[i2]);
                    if (!(n3 = e6 != null && r5(e6, o2)))
                      break;
                    e6 = e6[o2];
                  }
                  if (n3)
                    return n3;
                  return !!(s2 = e6 ? e6.length : 0) && Ke(s2) && Te(o2, s2) && (Fe(e6) || je(e6));
                }(e5, t4, me);
              }(r4, e4) : ve(t3, n2, void 0, 3);
            };
          }(e3[0], e3[1]) : function(e4) {
            var t3 = function(e5) {
              var t4 = We(e5), r4 = t4.length;
              for (; r4--; ) {
                var n2 = t4[r4], i2 = e5[n2];
                t4[r4] = [n2, i2, Me(i2)];
              }
              return t4;
            }(e4);
            if (t3.length == 1 && t3[0][2])
              return xe(t3[0][0], t3[0][1]);
            return function(r4) {
              return r4 === e4 || function(e5, t4, r5, n2) {
                var i2 = r5.length, s2 = i2, o2 = !n2;
                if (e5 == null)
                  return !s2;
                for (e5 = Object(e5); i2--; ) {
                  var a2 = r5[i2];
                  if (o2 && a2[2] ? a2[1] !== e5[a2[0]] : !(a2[0] in e5))
                    return false;
                }
                for (; ++i2 < s2; ) {
                  var c2 = (a2 = r5[i2])[0], u2 = e5[c2], h2 = a2[1];
                  if (o2 && a2[2]) {
                    if (u2 === void 0 && !(c2 in e5))
                      return false;
                  } else {
                    var f2 = new pe();
                    if (n2)
                      var d2 = n2(u2, h2, c2, e5, t4, f2);
                    if (!(d2 === void 0 ? ve(h2, u2, n2, 3, f2) : d2))
                      return false;
                  }
                }
                return true;
              }(r4, e4, t3);
            };
          }(e3) : Ce(t2 = e3) ? (r3 = Pe(t2), function(e4) {
            return e4 == null ? void 0 : e4[r3];
          }) : function(e4) {
            return function(t3) {
              return be(t3, e4);
            };
          }(t2);
          var t2, r3;
        }
        function Ee(e3) {
          if (r3 = (t2 = e3) && t2.constructor, n2 = typeof r3 == "function" && r3.prototype || L, t2 !== n2)
            return W(e3);
          var t2, r3, n2, i2 = [];
          for (var s2 in Object(e3))
            z.call(e3, s2) && s2 != "constructor" && i2.push(s2);
          return i2;
        }
        function Se(e3) {
          return Fe(e3) ? e3 : Ne(e3);
        }
        function Ae(e3, t2, r3, n2, i2, s2) {
          var o2 = 2 & i2, a2 = e3.length, c2 = t2.length;
          if (a2 != c2 && !(o2 && c2 > a2))
            return false;
          var u2 = s2.get(e3);
          if (u2 && s2.get(t2))
            return u2 == t2;
          var h2 = -1, f2 = true, d2 = 1 & i2 ? new le() : void 0;
          for (s2.set(e3, t2), s2.set(t2, e3); ++h2 < a2; ) {
            var l2 = e3[h2], p2 = t2[h2];
            if (n2)
              var y2 = o2 ? n2(p2, l2, h2, t2, e3, s2) : n2(l2, p2, h2, e3, t2, s2);
            if (y2 !== void 0) {
              if (y2)
                continue;
              f2 = false;
              break;
            }
            if (d2) {
              if (!T(t2, function(e4, t3) {
                if (!d2.has(t3) && (l2 === e4 || r3(l2, e4, n2, i2, s2)))
                  return d2.add(t3);
              })) {
                f2 = false;
                break;
              }
            } else if (l2 !== p2 && !r3(l2, p2, n2, i2, s2)) {
              f2 = false;
              break;
            }
          }
          return s2.delete(e3), s2.delete(t2), f2;
        }
        function Ie(e3, t2) {
          var r3, n2, i2 = e3.__data__;
          return ((n2 = typeof (r3 = t2)) == "string" || n2 == "number" || n2 == "symbol" || n2 == "boolean" ? r3 !== "__proto__" : r3 === null) ? i2[typeof t2 == "string" ? "string" : "hash"] : i2.map;
        }
        function ke(e3, t2) {
          var r3 = function(e4, t3) {
            return e4 == null ? void 0 : e4[t3];
          }(e3, t2);
          return we(r3) ? r3 : void 0;
        }
        he.prototype.clear = function() {
          this.__data__ = te ? te(null) : {};
        }, he.prototype.delete = function(e3) {
          return this.has(e3) && delete this.__data__[e3];
        }, he.prototype.get = function(e3) {
          var t2 = this.__data__;
          if (te) {
            var r3 = t2[e3];
            return r3 === "__lodash_hash_undefined__" ? void 0 : r3;
          }
          return z.call(t2, e3) ? t2[e3] : void 0;
        }, he.prototype.has = function(e3) {
          var t2 = this.__data__;
          return te ? t2[e3] !== void 0 : z.call(t2, e3);
        }, he.prototype.set = function(e3, t2) {
          return this.__data__[e3] = te && t2 === void 0 ? "__lodash_hash_undefined__" : t2, this;
        }, fe.prototype.clear = function() {
          this.__data__ = [];
        }, fe.prototype.delete = function(e3) {
          var t2 = this.__data__, r3 = ge(t2, e3);
          return !(r3 < 0) && (r3 == t2.length - 1 ? t2.pop() : $.call(t2, r3, 1), true);
        }, fe.prototype.get = function(e3) {
          var t2 = this.__data__, r3 = ge(t2, e3);
          return r3 < 0 ? void 0 : t2[r3][1];
        }, fe.prototype.has = function(e3) {
          return ge(this.__data__, e3) > -1;
        }, fe.prototype.set = function(e3, t2) {
          var r3 = this.__data__, n2 = ge(r3, e3);
          return n2 < 0 ? r3.push([e3, t2]) : r3[n2][1] = t2, this;
        }, de.prototype.clear = function() {
          this.__data__ = {hash: new he(), map: new (J || fe)(), string: new he()};
        }, de.prototype.delete = function(e3) {
          return Ie(this, e3).delete(e3);
        }, de.prototype.get = function(e3) {
          return Ie(this, e3).get(e3);
        }, de.prototype.has = function(e3) {
          return Ie(this, e3).has(e3);
        }, de.prototype.set = function(e3, t2) {
          return Ie(this, e3).set(e3, t2), this;
        }, le.prototype.add = le.prototype.push = function(e3) {
          return this.__data__.set(e3, "__lodash_hash_undefined__"), this;
        }, le.prototype.has = function(e3) {
          return this.__data__.has(e3);
        }, pe.prototype.clear = function() {
          this.__data__ = new fe();
        }, pe.prototype.delete = function(e3) {
          return this.__data__.delete(e3);
        }, pe.prototype.get = function(e3) {
          return this.__data__.get(e3);
        }, pe.prototype.has = function(e3) {
          return this.__data__.has(e3);
        }, pe.prototype.set = function(e3, t2) {
          var r3 = this.__data__;
          if (r3 instanceof fe) {
            var n2 = r3.__data__;
            if (!J || n2.length < 199)
              return n2.push([e3, t2]), this;
            r3 = this.__data__ = new de(n2);
          }
          return r3.set(e3, t2), this;
        };
        var Re = function(e3) {
          return q.call(e3);
        };
        function Te(e3, t2) {
          return !!(t2 = t2 == null ? 9007199254740991 : t2) && (typeof e3 == "number" || b.test(e3)) && e3 > -1 && e3 % 1 == 0 && e3 < t2;
        }
        function Ce(e3, t2) {
          if (Fe(e3))
            return false;
          var r3 = typeof e3;
          return !(r3 != "number" && r3 != "symbol" && r3 != "boolean" && e3 != null && !Ge(e3)) || (c.test(e3) || !a.test(e3) || t2 != null && e3 in Object(t2));
        }
        function Me(e3) {
          return e3 == e3 && !Ve(e3);
        }
        function xe(e3, t2) {
          return function(r3) {
            return r3 != null && (r3[e3] === t2 && (t2 !== void 0 || e3 in Object(r3)));
          };
        }
        (X && Re(new X(new ArrayBuffer(1))) != "[object DataView]" || J && Re(new J()) != i || Z && Re(Z.resolve()) != "[object Promise]" || Q && Re(new Q()) != o || ee && Re(new ee()) != "[object WeakMap]") && (Re = function(e3) {
          var t2 = q.call(e3), r3 = t2 == s ? e3.constructor : void 0, n2 = r3 ? Be(r3) : void 0;
          if (n2)
            switch (n2) {
              case re:
                return "[object DataView]";
              case ne:
                return i;
              case ie:
                return "[object Promise]";
              case se:
                return o;
              case oe:
                return "[object WeakMap]";
            }
          return t2;
        });
        var Ne = Le(function(e3) {
          var t2;
          e3 = (t2 = e3) == null ? "" : function(e4) {
            if (typeof e4 == "string")
              return e4;
            if (Ge(e4))
              return ue ? ue.call(e4) : "";
            var t3 = e4 + "";
            return t3 == "0" && 1 / e4 == -1 / 0 ? "-0" : t3;
          }(t2);
          var r3 = [];
          return u.test(e3) && r3.push(""), e3.replace(h, function(e4, t3, n2, i2) {
            r3.push(n2 ? i2.replace(d, "$1") : t3 || e4);
          }), r3;
        });
        function Pe(e3) {
          if (typeof e3 == "string" || Ge(e3))
            return e3;
          var t2 = e3 + "";
          return t2 == "0" && 1 / e3 == -1 / 0 ? "-0" : t2;
        }
        function Be(e3) {
          if (e3 != null) {
            try {
              return F.call(e3);
            } catch (t2) {
            }
            try {
              return e3 + "";
            } catch (t2) {
            }
          }
          return "";
        }
        var Oe, De = (Oe = function(e3, t2, r3) {
          var n2 = e3 ? e3.length : 0;
          if (!n2)
            return -1;
          var i2, s2, o2 = r3 == null ? 0 : (i2 = function(e4) {
            return e4 ? (e4 = function(e5) {
              if (typeof e5 == "number")
                return e5;
              if (Ge(e5))
                return NaN;
              if (Ve(e5)) {
                var t3 = typeof e5.valueOf == "function" ? e5.valueOf() : e5;
                e5 = Ve(t3) ? t3 + "" : t3;
              }
              if (typeof e5 != "string")
                return e5 === 0 ? e5 : +e5;
              e5 = e5.replace(f, "");
              var r4 = p.test(e5);
              return r4 || g.test(e5) ? v(e5.slice(2), r4 ? 2 : 8) : l.test(e5) ? NaN : +e5;
            }(e4)) === 1 / 0 || e4 === -1 / 0 ? 17976931348623157e292 * (e4 < 0 ? -1 : 1) : e4 == e4 ? e4 : 0 : e4 === 0 ? e4 : 0;
          }(r3), s2 = i2 % 1, i2 == i2 ? s2 ? i2 - s2 : i2 : 0);
          return o2 < 0 && (o2 = Y(n2 + o2, 0)), function(e4, t3, r4, n3) {
            for (var i3 = e4.length, s3 = r4 + (n3 ? 1 : -1); n3 ? s3-- : ++s3 < i3; )
              if (t3(e4[s3], s3, e4))
                return s3;
            return -1;
          }(e3, _e(t2), o2);
        }, function(e3, t2, r3) {
          var n2 = Object(e3);
          if (!ze(e3)) {
            var i2 = _e(t2);
            e3 = We(e3), t2 = function(e4) {
              return i2(n2[e4], e4, n2);
            };
          }
          var s2 = Oe(e3, t2, r3);
          return s2 > -1 ? n2[i2 ? e3[s2] : s2] : void 0;
        });
        function Le(e3, t2) {
          if (typeof e3 != "function" || t2 && typeof t2 != "function")
            throw new TypeError("Expected a function");
          var r3 = function() {
            var n2 = arguments, i2 = t2 ? t2.apply(this, n2) : n2[0], s2 = r3.cache;
            if (s2.has(i2))
              return s2.get(i2);
            var o2 = e3.apply(this, n2);
            return r3.cache = s2.set(i2, o2), o2;
          };
          return r3.cache = new (Le.Cache || de)(), r3;
        }
        function Ue(e3, t2) {
          return e3 === t2 || e3 != e3 && t2 != t2;
        }
        function je(e3) {
          return function(e4) {
            return He(e4) && ze(e4);
          }(e3) && z.call(e3, "callee") && (!G.call(e3, "callee") || q.call(e3) == n);
        }
        Le.Cache = de;
        var Fe = Array.isArray;
        function ze(e3) {
          return e3 != null && Ke(e3.length) && !qe(e3);
        }
        function qe(e3) {
          var t2 = Ve(e3) ? q.call(e3) : "";
          return t2 == "[object Function]" || t2 == "[object GeneratorFunction]";
        }
        function Ke(e3) {
          return typeof e3 == "number" && e3 > -1 && e3 % 1 == 0 && e3 <= 9007199254740991;
        }
        function Ve(e3) {
          var t2 = typeof e3;
          return !!e3 && (t2 == "object" || t2 == "function");
        }
        function He(e3) {
          return !!e3 && typeof e3 == "object";
        }
        function Ge(e3) {
          return typeof e3 == "symbol" || He(e3) && q.call(e3) == "[object Symbol]";
        }
        var $e = R ? function(e3) {
          return function(t2) {
            return e3(t2);
          };
        }(R) : function(e3) {
          return He(e3) && Ke(e3.length) && !!m[q.call(e3)];
        };
        function We(e3) {
          return ze(e3) ? ye(e3) : Ee(e3);
        }
        function Ye(e3) {
          return e3;
        }
        r2.exports = De;
      }).call(this, r(12), r(103)(e));
    }, function(e, t, r) {
      "use strict";
      var n = Object.prototype.toString;
      function i(e2, t2) {
        return e2 > t2;
      }
      function s(e2) {
        return typeof e2 == "symbol" || function(e3) {
          return !!e3 && typeof e3 == "object";
        }(e2) && n.call(e2) == "[object Symbol]";
      }
      function o(e2) {
        return e2;
      }
      e.exports = function(e2) {
        return e2 && e2.length ? function(e3, t2, r2) {
          for (var n2 = -1, i2 = e3.length; ++n2 < i2; ) {
            var o2 = e3[n2], a = t2(o2);
            if (a != null && (c === void 0 ? a == a && !s(a) : r2(a, c)))
              var c = a, u = o2;
          }
          return u;
        }(e2, o, i) : void 0;
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(349), i = r(200);
      t.isValid = function() {
        return this.valid;
      }, t.isInSubnet = n.isInSubnet, t.isCorrect = n.isCorrect(i.BITS), t.isCanonical = n.falseIfInvalid(function() {
        return this.addressMinusSuffix === this.canonicalForm();
      }), t.isLinkLocal = n.falseIfInvalid(function() {
        return this.getBitsBase2(0, 64) === "1111111010000000000000000000000000000000000000000000000000000000";
      }), t.isMulticast = n.falseIfInvalid(function() {
        return this.getType() === "Multicast";
      }), t.is4 = n.falseIfInvalid(function() {
        return this.v4;
      }), t.isTeredo = n.falseIfInvalid(function() {
        return this.isInSubnet(new this.constructor("2001::/32"));
      }), t.is6to4 = n.falseIfInvalid(function() {
        return this.isInSubnet(new this.constructor("2002::/16"));
      }), t.isLoopback = n.falseIfInvalid(function() {
        return this.getType() === "Loopback";
      });
    }, function(e, t, r) {
      "use strict";
      var n = r(199), i = r(352), s = r(96).sprintf;
      t.href = function(e2) {
        return e2 = e2 === void 0 ? "" : s(":%s", e2), s("http://[%s]%s/", this.correctForm(), e2);
      }, t.link = function(e2) {
        e2 || (e2 = {}), e2.className === void 0 && (e2.className = ""), e2.prefix === void 0 && (e2.prefix = "/#address="), e2.v4 === void 0 && (e2.v4 = false);
        var t2 = this.correctForm;
        return e2.v4 && (t2 = this.to4in6), e2.className ? s('<a href="%1$s%2$s" class="%3$s">%2$s</a>', e2.prefix, t2.call(this), e2.className) : s('<a href="%1$s%2$s">%2$s</a>', e2.prefix, t2.call(this));
      }, t.group = function() {
        var e2, t2 = this.address.match(n.RE_ADDRESS);
        if (t2) {
          var r2 = t2[0].split(".");
          this.address = this.address.replace(n.RE_ADDRESS, s('<span class="hover-group group-v4 group-6">%s</span>.<span class="hover-group group-v4 group-7">%s</span>', r2.slice(0, 2).join("."), r2.slice(2, 4).join(".")));
        }
        if (this.elidedGroups === 0)
          return i.simpleGroup(this.address);
        var o = [], a = this.address.split("::");
        a[0].length ? o.push(i.simpleGroup(a[0])) : o.push("");
        var c = ["hover-group"];
        for (e2 = this.elisionBegin; e2 < this.elisionBegin + this.elidedGroups; e2++)
          c.push(s("group-%d", e2));
        return o.push(s('<span class="%s"></span>', c.join(" "))), a[1].length ? o.push(i.simpleGroup(a[1], this.elisionEnd)) : o.push(""), o.join(":");
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(96).sprintf, i = r(200);
      function s(e2) {
        return n("(%s)", e2.join("|"));
      }
      function o(e2) {
        return e2.length < 4 ? n("0{0,%d}%s", 4 - e2.length, e2) : e2;
      }
      function a(e2) {
        var t2 = [];
        e2.forEach(function(e3, r3) {
          parseInt(e3, 16) === 0 && t2.push(r3);
        });
        var r2 = t2.map(function(t3) {
          return e2.map(function(e3, r3) {
            if (r3 === t3) {
              var n2 = r3 === 0 || r3 === i.GROUPS - 1 ? ":" : "";
              return s([o(e3), n2]);
            }
            return o(e3);
          }).join(":");
        });
        return r2.push(e2.map(o).join(":")), s(r2);
      }
      function c(e2, t2, r2) {
        var i2 = t2 ? "" : ":", o2 = r2 ? "" : ":", a2 = [];
        t2 || r2 || a2.push("::"), t2 && r2 && a2.push(""), (r2 && !t2 || !r2 && t2) && a2.push(":"), a2.push(n("%s(:0{1,4}){1,%d}", i2, e2 - 1)), a2.push(n("(0{1,4}:){1,%d}%s", e2 - 1, o2)), a2.push(n("(0{1,4}:){%d}0{1,4}", e2 - 1));
        for (var c2 = 1; c2 < e2 - 1; c2++)
          for (var u = 1; u < e2 - c2; u++)
            a2.push(n("(0{1,4}:){%d}:(0{1,4}:){%d}0{1,4}", u, e2 - u - c2 - 1));
        return s(a2);
      }
      t.regularExpressionString = function(e2) {
        e2 === void 0 && (e2 = false);
        var t2 = [], r2 = new this.constructor(this.correctForm());
        if (r2.elidedGroups === 0)
          t2.push(a(r2.parsedAddress));
        else if (r2.elidedGroups === i.GROUPS)
          t2.push(c(i.GROUPS));
        else {
          var n2 = r2.address.split("::");
          n2[0].length && t2.push(a(n2[0].split(":"))), t2.push(c(r2.elidedGroups, n2[0].length !== 0, n2[1].length !== 0)), n2[1].length && t2.push(a(n2[1].split(":"))), t2 = [t2.join(":")];
        }
        return e2 || (t2 = [].concat("(?=^|", "[^A-Fa-f0-9:]", "|[^\\w\\:])(", t2, ")(?=[^\\w\\:]|", "[^A-Fa-f0-9:]", "|$)")), t2.join("");
      }, t.regularExpression = function(e2) {
        return new RegExp(this.regularExpressionString(e2), "i");
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(152);
      class i extends Error {
        constructor(e2) {
          super(e2), this.name = "TimeoutError";
        }
      }
      const s = (e2, t2, r2) => new Promise((s2, o) => {
        if (typeof t2 != "number" || t2 < 0)
          throw new TypeError("Expected `milliseconds` to be a positive number");
        if (t2 === 1 / 0)
          return void s2(e2);
        const a = setTimeout(() => {
          if (typeof r2 == "function") {
            try {
              s2(r2());
            } catch (a2) {
              o(a2);
            }
            return;
          }
          const n2 = r2 instanceof Error ? r2 : new i(typeof r2 == "string" ? r2 : `Promise timed out after ${t2} milliseconds`);
          typeof e2.cancel == "function" && e2.cancel(), o(n2);
        }, t2);
        n(e2.then(s2, o), () => {
          clearTimeout(a);
        });
      });
      e.exports = s, e.exports.default = s, e.exports.TimeoutError = i;
    }, function(e, t, r) {
      "use strict";
      const n = r(1), i = n("libp2p:webrtc-star");
      i.error = n("libp2p:webrtc-star:error");
      const {EventEmitter: s} = r(14), o = r(0), a = r(24), {AbortError: c} = r(45), u = r(353), {supportsWebRTCDataChannels: h} = r(956), f = r(11), d = r(60), l = r(7), {CODE_CIRCUIT: p} = r(201), y = r(957), g = r(367), {cleanMultiaddr: b} = r(370);
      function m() {
      }
      e.exports = a(class {
        constructor(e2 = {}) {
          if (!e2.upgrader)
            throw new Error("An upgrader must be provided. See https://github.com/libp2p/interface-transport#upgrader.");
          this._upgrader = e2.upgrader, this._signallingAddr = void 0, this.sioOptions = {transports: ["websocket"], "force new connection": true}, e2.wrtc && (this.wrtc = e2.wrtc), this.listenersRefs = {}, this.discovery = new s(), this.discovery.tag = "webRTCStar", this.discovery._isStarted = false, this.discovery.start = () => {
            this.discovery._isStarted = true;
          }, this.discovery.stop = () => {
            this.discovery._isStarted = false;
          }, this._peerDiscovered = this._peerDiscovered.bind(this);
        }
        async dial(e2, t2 = {}) {
          const r2 = await this._connect(e2, t2), n2 = g(r2, {remoteAddr: e2, signal: t2.signal});
          i("new outbound connection %s", n2.remoteAddr);
          const s2 = await this._upgrader.upgradeOutbound(n2);
          return i("outbound connection %s upgraded", n2.remoteAddr), s2;
        }
        _connect(e2, t2 = {}) {
          if (t2.signal && t2.signal.aborted)
            throw new c();
          const r2 = {initiator: true, trickle: false, ...t2.spOptions || {}};
          this.wrtc && (r2.wrtc = this.wrtc);
          const n2 = e2.toOptions(), s2 = (~~(1e9 * Math.random())).toString(36) + Date.now(), a2 = this.listenersRefs[Object.keys(this.listenersRefs)[0]].io;
          return new Promise((h2, f2) => {
            const d2 = Date.now();
            let l2;
            i("dialing %s:%s", n2.host, n2.port);
            const p2 = new u(r2), y2 = (e3) => {
              if (!l2) {
                const t3 = `connection error ${n2.host}:${n2.port}: ${e3.message}`;
                i.error(t3), v(e3);
              }
            }, g2 = () => {
              i("connnection timeout %s:%s", n2.host, n2.port);
              const e3 = o(new Error(`connection timeout after ${Date.now() - d2}ms`), "ERR_CONNECT_TIMEOUT");
              p2.emit("error", e3);
            }, b2 = () => {
              l2 = true, i("connection opened %s:%s", n2.host, n2.port), v(null);
            }, m2 = () => {
              i.error("connection aborted %s:%s", n2.host, n2.port), p2.destroy(), v(new c());
            }, v = (e3) => {
              p2.removeListener("timeout", g2), p2.removeListener("connect", b2), t2.signal && t2.signal.removeEventListener("abort", m2), e3 ? f2(e3) : h2(p2);
            };
            p2.on("error", y2), p2.once("timeout", g2), p2.once("connect", b2), p2.on("close", () => {
              p2.removeListener("error", y2);
            }), t2.signal && t2.signal.addEventListener("abort", m2), p2.on("signal", (t3) => {
              a2.emit("ss-handshake", {intentId: s2, srcMultiaddr: this._signallingAddr.toString(), dstMultiaddr: e2.toString(), signal: t3});
            }), a2.on("ws-handshake", (e3) => {
              e3.intentId === s2 && e3.err && f2(o(e3.err instanceof Error ? e3.err : new Error(e3.err), "ERR_SIGNALLING_FAILED")), e3.intentId === s2 && e3.answer && !p2.destroyed && p2.signal(e3.signal);
            });
          });
        }
        createListener(e2 = {}, t2) {
          if (!h && !this.wrtc)
            throw o(new Error("no WebRTC support"), "ERR_NO_WEBRTC_SUPPORT");
          return typeof e2 == "function" && (t2 = e2, e2 = {}), y({handler: t2 = t2 || m, upgrader: this._upgrader}, this, e2);
        }
        filter(e2) {
          return (e2 = Array.isArray(e2) ? e2 : [e2]).filter((e3) => !e3.protoCodes().includes(p) && d.WebRTCStar.matches(e3));
        }
        _peerDiscovered(e2) {
          if (!this.discovery._isStarted)
            return;
          i("Peer Discovered:", e2), e2 = b(e2);
          const t2 = f(e2), r2 = l.createFromB58String(t2.getPeerId());
          this.discovery.emit("peer", {id: r2, multiaddrs: [t2]});
        }
      }, {className: "WebRTCStar", symbolName: "@libp2p/js-libp2p-webrtc-star/webrtcstar"});
    }, function(e, t, r) {
      "use strict";
      e.exports = function() {
        if (typeof globalThis == "undefined")
          return null;
        var e2 = {RTCPeerConnection: globalThis.RTCPeerConnection || globalThis.mozRTCPeerConnection || globalThis.webkitRTCPeerConnection, RTCSessionDescription: globalThis.RTCSessionDescription || globalThis.mozRTCSessionDescription || globalThis.webkitRTCSessionDescription, RTCIceCandidate: globalThis.RTCIceCandidate || globalThis.mozRTCIceCandidate || globalThis.webkitRTCIceCandidate};
        return e2.RTCPeerConnection ? e2 : null;
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(3), i = n.Buffer;
      function s(e2, t2) {
        for (var r2 in e2)
          t2[r2] = e2[r2];
      }
      function o(e2, t2, r2) {
        return i(e2, t2, r2);
      }
      i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? e.exports = n : (s(n, t), t.Buffer = o), o.prototype = Object.create(i.prototype), s(i, o), o.from = function(e2, t2, r2) {
        if (typeof e2 == "number")
          throw new TypeError("Argument must not be a number");
        return i(e2, t2, r2);
      }, o.alloc = function(e2, t2, r2) {
        if (typeof e2 != "number")
          throw new TypeError("Argument must be a number");
        var n2 = i(e2);
        return t2 !== void 0 ? typeof r2 == "string" ? n2.fill(t2, r2) : n2.fill(t2) : n2.fill(0), n2;
      }, o.allocUnsafe = function(e2) {
        if (typeof e2 != "number")
          throw new TypeError("Argument must be a number");
        return i(e2);
      }, o.allocUnsafeSlow = function(e2) {
        if (typeof e2 != "number")
          throw new TypeError("Argument must be a number");
        return n.SlowBuffer(e2);
      };
    }, function(e, t, r) {
      "use strict";
      let n;
      e.exports = typeof queueMicrotask == "function" ? queueMicrotask.bind(globalThis) : (e2) => (n || (n = Promise.resolve())).then(e2).catch((e3) => setTimeout(() => {
        throw e3;
      }, 0));
    }, function(e, t, r) {
      "use strict";
      const n = r(129);
      e.exports = {supportsFileReader: typeof self != "undefined" && "FileReader" in self, supportsWebRTC: "RTCPeerConnection" in n && typeof navigator != "undefined" && navigator.mediaDevices !== void 0 && "getUserMedia" in navigator.mediaDevices, supportsWebRTCDataChannels: "RTCPeerConnection" in n};
    }, function(e, t, r) {
      "use strict";
      const n = r(14), i = r(1), s = i("libp2p:webrtc-star:listener");
      s.error = i("libp2p:webrtc-star:listener:error");
      const o = r(11), a = r(958), c = r(353), u = r(197), h = r(367), {cleanUrlSIO: f} = r(370), {CODE_P2P: d} = r(201), l = {transports: ["websocket"], "force new connection": true};
      e.exports = ({handler: e2, upgrader: t2}, r2, i2 = {}) => {
        const p = new n();
        let y;
        return p.__connections = [], p.__spChannels = new Map(), p.__pendingIntents = new Map(), p.listen = (n2) => {
          const o2 = u();
          y = n2, !n2.protoCodes().includes(d) && t2.localPeer ? r2._signallingAddr = n2.encapsulate("/p2p/" + t2.localPeer.toB58String()) : r2._signallingAddr = n2;
          const g = f(n2);
          s("Dialing to Signalling Server on: " + g), p.io = a.connect(g, l);
          return p.io.once("connect_error", (e3) => o2.reject(e3)), p.io.once("error", (e3) => {
            p.emit("error", e3), p.emit("close");
          }), p.io.on("ws-handshake", (o3) => {
            if (o3.answer || o3.err || !o3.intentId)
              return;
            const a2 = o3.intentId;
            let u2 = p.__pendingIntents.get(a2);
            u2 || (u2 = [], p.__pendingIntents.set(a2, u2));
            let f2 = p.__spChannels.get(a2);
            if (f2)
              return void f2.signal(o3.signal);
            if (o3.signal.type !== "offer")
              return void u2.push(o3);
            const l2 = {trickle: false, ...i2};
            r2.wrtc && (l2.wrtc = r2.wrtc), f2 = new c(l2);
            const y2 = (e3) => {
              s.error("incoming connectioned errored", e3);
            };
            f2.on("error", y2), f2.once("close", (...e3) => {
              f2.removeListener("error", y2);
            }), f2.on("signal", (e3) => {
              o3.signal = e3, o3.answer = true, p.io.emit("ss-handshake", o3);
            }), f2.signal(o3.signal);
            for (const e3 of u2)
              f2.signal(e3.signal);
            p.__pendingIntents.set(a2, []), f2.once("connect", async () => {
              const r3 = h(f2);
              let i3;
              s("new inbound connection %s", r3.remoteAddr);
              try {
                i3 = await t2.upgradeInbound(r3);
              } catch (o4) {
                return s.error("inbound connection failed to upgrade", o4), r3.close();
              }
              if (!i3.remoteAddr)
                try {
                  i3.remoteAddr = n2.decapsulateCode(d).encapsulate("/p2p/" + i3.remotePeer.toB58String());
                } catch (o4) {
                  s.error("could not determine remote address", o4);
                }
              s("inbound connection %s upgraded", r3.remoteAddr), function(e3, t3, r4) {
                e3.__connections.push(t3);
                t3.conn.once("close", () => {
                  e3.__connections = e3.__connections.filter((e4) => e4 !== t3), e3.__spChannels.delete(r4), e3.__pendingIntents.delete(r4);
                });
              }(p, r3, a2), p.emit("connection", i3), e2(i3);
            }), p.__spChannels.set(a2, f2);
          }), p.io.on("ws-peer", r2._peerDiscovered), p.io.on("connect", () => {
            p.io.emit("ss-join", r2._signallingAddr.toString());
          }), p.io.once("connect", () => {
            p.emit("listening"), o2.resolve();
          }), o2.promise;
        }, p.close = async () => {
          p.io && p.io.emit("ss-leave"), await Promise.all(p.__connections.map((e3) => e3.close())), p.emit("close");
        }, p.getAddrs = () => [y], r2.listenersRefs[o.toString()] = p, p;
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(959), i = r(202), s = r(357), o = r(120)("socket.io-client");
      e.exports = t = c;
      var a = t.managers = {};
      function c(e2, t2) {
        typeof e2 == "object" && (t2 = e2, e2 = void 0), t2 = t2 || {};
        var r2, i2 = n(e2), c2 = i2.source, u = i2.id, h = i2.path, f = a[u] && h in a[u].nsps;
        return t2.forceNew || t2["force new connection"] || t2.multiplex === false || f ? (o("ignoring socket cache for %s", c2), r2 = s(c2, t2)) : (a[u] || (o("new io instance for %s", c2), a[u] = s(c2, t2)), r2 = a[u]), i2.query && !t2.query && (t2.query = i2.query), r2.socket(i2.path, t2);
      }
      t.protocol = i.protocol, t.connect = c, t.Manager = r(357), t.Socket = r(363);
    }, function(e, t, r) {
      "use strict";
      var n = r(960), i = r(120)("socket.io-client:url");
      e.exports = function(e2, t2) {
        var r2 = e2;
        t2 = t2 || typeof location != "undefined" && location, e2 == null && (e2 = t2.protocol + "//" + t2.host);
        typeof e2 == "string" && (e2.charAt(0) === "/" && (e2 = e2.charAt(1) === "/" ? t2.protocol + e2 : t2.host + e2), /^(https?|wss?):\/\//.test(e2) || (i("protocol-less url %s", e2), e2 = t2 !== void 0 ? t2.protocol + "//" + e2 : "https://" + e2), i("parse %s", e2), r2 = n(e2));
        r2.port || (/^(http|ws)$/.test(r2.protocol) ? r2.port = "80" : /^(http|ws)s$/.test(r2.protocol) && (r2.port = "443"));
        r2.path = r2.path || "/";
        var s = r2.host.indexOf(":") !== -1 ? "[" + r2.host + "]" : r2.host;
        return r2.id = r2.protocol + "://" + s + ":" + r2.port, r2.href = r2.protocol + "://" + s + (t2 && t2.port === r2.port ? "" : ":" + r2.port), r2;
      };
    }, function(e, t, r) {
      "use strict";
      var n = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/, i = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];
      e.exports = function(e2) {
        var t2 = e2, r2 = e2.indexOf("["), s = e2.indexOf("]");
        r2 != -1 && s != -1 && (e2 = e2.substring(0, r2) + e2.substring(r2, s).replace(/:/g, ";") + e2.substring(s, e2.length));
        for (var o = n.exec(e2 || ""), a = {}, c = 14; c--; )
          a[i[c]] = o[c] || "";
        return r2 != -1 && s != -1 && (a.source = t2, a.host = a.host.substring(1, a.host.length - 1).replace(/;/g, ":"), a.authority = a.authority.replace("[", "").replace("]", "").replace(/;/g, ":"), a.ipv6uri = true), a;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2) {
        function t2(e3) {
          let t3 = 0;
          for (let r2 = 0; r2 < e3.length; r2++)
            t3 = (t3 << 5) - t3 + e3.charCodeAt(r2), t3 |= 0;
          return n.colors[Math.abs(t3) % n.colors.length];
        }
        function n(e3) {
          let r2;
          function o2(...e4) {
            if (!o2.enabled)
              return;
            const t3 = o2, i2 = Number(new Date()), s2 = i2 - (r2 || i2);
            t3.diff = s2, t3.prev = r2, t3.curr = i2, r2 = i2, e4[0] = n.coerce(e4[0]), typeof e4[0] != "string" && e4.unshift("%O");
            let a = 0;
            e4[0] = e4[0].replace(/%([a-zA-Z%])/g, (r3, i3) => {
              if (r3 === "%%")
                return r3;
              a++;
              const s3 = n.formatters[i3];
              if (typeof s3 == "function") {
                const n2 = e4[a];
                r3 = s3.call(t3, n2), e4.splice(a, 1), a--;
              }
              return r3;
            }), n.formatArgs.call(t3, e4);
            (t3.log || n.log).apply(t3, e4);
          }
          return o2.namespace = e3, o2.enabled = n.enabled(e3), o2.useColors = n.useColors(), o2.color = t2(e3), o2.destroy = i, o2.extend = s, typeof n.init == "function" && n.init(o2), n.instances.push(o2), o2;
        }
        function i() {
          const e3 = n.instances.indexOf(this);
          return e3 !== -1 && (n.instances.splice(e3, 1), true);
        }
        function s(e3, t3) {
          const r2 = n(this.namespace + (t3 === void 0 ? ":" : t3) + e3);
          return r2.log = this.log, r2;
        }
        function o(e3) {
          return e3.toString().substring(2, e3.toString().length - 2).replace(/\.\*\?$/, "*");
        }
        return n.debug = n, n.default = n, n.coerce = function(e3) {
          if (e3 instanceof Error)
            return e3.stack || e3.message;
          return e3;
        }, n.disable = function() {
          const e3 = [...n.names.map(o), ...n.skips.map(o).map((e4) => "-" + e4)].join(",");
          return n.enable(""), e3;
        }, n.enable = function(e3) {
          let t3;
          n.save(e3), n.names = [], n.skips = [];
          const r2 = (typeof e3 == "string" ? e3 : "").split(/[\s,]+/), i2 = r2.length;
          for (t3 = 0; t3 < i2; t3++)
            r2[t3] && ((e3 = r2[t3].replace(/\*/g, ".*?"))[0] === "-" ? n.skips.push(new RegExp("^" + e3.substr(1) + "$")) : n.names.push(new RegExp("^" + e3 + "$")));
          for (t3 = 0; t3 < n.instances.length; t3++) {
            const e4 = n.instances[t3];
            e4.enabled = n.enabled(e4.namespace);
          }
        }, n.enabled = function(e3) {
          if (e3[e3.length - 1] === "*")
            return true;
          let t3, r2;
          for (t3 = 0, r2 = n.skips.length; t3 < r2; t3++)
            if (n.skips[t3].test(e3))
              return false;
          for (t3 = 0, r2 = n.names.length; t3 < r2; t3++)
            if (n.names[t3].test(e3))
              return true;
          return false;
        }, n.humanize = r(332), Object.keys(e2).forEach((t3) => {
          n[t3] = e2[t3];
        }), n.instances = [], n.names = [], n.skips = [], n.formatters = {}, n.selectColor = t2, n.enable(n.load()), n;
      };
    }, function(e, t, r) {
      "use strict";
      (function(n) {
        function i() {
          var e2;
          try {
            e2 = t.storage.debug;
          } catch (r2) {
          }
          return !e2 && n !== void 0 && "env" in n && (e2 = {NODE_ENV: "production"}.DEBUG), e2;
        }
        (t = e.exports = r(963)).log = function() {
          return typeof console == "object" && console.log && Function.prototype.apply.call(console.log, console, arguments);
        }, t.formatArgs = function(e2) {
          var r2 = this.useColors;
          if (e2[0] = (r2 ? "%c" : "") + this.namespace + (r2 ? " %c" : " ") + e2[0] + (r2 ? "%c " : " ") + "+" + t.humanize(this.diff), !r2)
            return;
          var n2 = "color: " + this.color;
          e2.splice(1, 0, n2, "color: inherit");
          var i2 = 0, s = 0;
          e2[0].replace(/%[a-zA-Z%]/g, function(e3) {
            e3 !== "%%" && (i2++, e3 === "%c" && (s = i2));
          }), e2.splice(s, 0, n2);
        }, t.save = function(e2) {
          try {
            e2 == null ? t.storage.removeItem("debug") : t.storage.debug = e2;
          } catch (r2) {
          }
        }, t.load = i, t.useColors = function() {
          if (typeof window != "undefined" && window.process && window.process.type === "renderer")
            return true;
          if (typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))
            return false;
          return typeof document != "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window != "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
        }, t.storage = typeof chrome != "undefined" && chrome.storage !== void 0 ? chrome.storage.local : function() {
          try {
            return window.localStorage;
          } catch (e2) {
          }
        }(), t.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], t.formatters.j = function(e2) {
          try {
            return JSON.stringify(e2);
          } catch (t2) {
            return "[UnexpectedJSONParseError]: " + t2.message;
          }
        }, t.enable(i());
      }).call(this, r(10));
    }, function(e, t, r) {
      "use strict";
      function n(e2) {
        var r2;
        function n2() {
          if (n2.enabled) {
            var e3 = n2, i2 = +new Date(), s = i2 - (r2 || i2);
            e3.diff = s, e3.prev = r2, e3.curr = i2, r2 = i2;
            for (var o = new Array(arguments.length), a = 0; a < o.length; a++)
              o[a] = arguments[a];
            o[0] = t.coerce(o[0]), typeof o[0] != "string" && o.unshift("%O");
            var c = 0;
            o[0] = o[0].replace(/%([a-zA-Z%])/g, function(r3, n3) {
              if (r3 === "%%")
                return r3;
              c++;
              var i3 = t.formatters[n3];
              if (typeof i3 == "function") {
                var s2 = o[c];
                r3 = i3.call(e3, s2), o.splice(c, 1), c--;
              }
              return r3;
            }), t.formatArgs.call(e3, o);
            var u = n2.log || t.log || console.log.bind(console);
            u.apply(e3, o);
          }
        }
        return n2.namespace = e2, n2.enabled = t.enabled(e2), n2.useColors = t.useColors(), n2.color = function(e3) {
          var r3, n3 = 0;
          for (r3 in e3)
            n3 = (n3 << 5) - n3 + e3.charCodeAt(r3), n3 |= 0;
          return t.colors[Math.abs(n3) % t.colors.length];
        }(e2), n2.destroy = i, typeof t.init == "function" && t.init(n2), t.instances.push(n2), n2;
      }
      function i() {
        var e2 = t.instances.indexOf(this);
        return e2 !== -1 && (t.instances.splice(e2, 1), true);
      }
      (t = e.exports = n.debug = n.default = n).coerce = function(e2) {
        return e2 instanceof Error ? e2.stack || e2.message : e2;
      }, t.disable = function() {
        t.enable("");
      }, t.enable = function(e2) {
        var r2;
        t.save(e2), t.names = [], t.skips = [];
        var n2 = (typeof e2 == "string" ? e2 : "").split(/[\s,]+/), i2 = n2.length;
        for (r2 = 0; r2 < i2; r2++)
          n2[r2] && ((e2 = n2[r2].replace(/\*/g, ".*?"))[0] === "-" ? t.skips.push(new RegExp("^" + e2.substr(1) + "$")) : t.names.push(new RegExp("^" + e2 + "$")));
        for (r2 = 0; r2 < t.instances.length; r2++) {
          var s = t.instances[r2];
          s.enabled = t.enabled(s.namespace);
        }
      }, t.enabled = function(e2) {
        if (e2[e2.length - 1] === "*")
          return true;
        var r2, n2;
        for (r2 = 0, n2 = t.skips.length; r2 < n2; r2++)
          if (t.skips[r2].test(e2))
            return false;
        for (r2 = 0, n2 = t.names.length; r2 < n2; r2++)
          if (t.names[r2].test(e2))
            return true;
        return false;
      }, t.humanize = r(964), t.instances = [], t.names = [], t.skips = [], t.formatters = {};
    }, function(e, t, r) {
      "use strict";
      var n = 1e3, i = 6e4, s = 60 * i, o = 24 * s;
      function a(e2, t2, r2) {
        if (!(e2 < t2))
          return e2 < 1.5 * t2 ? Math.floor(e2 / t2) + " " + r2 : Math.ceil(e2 / t2) + " " + r2 + "s";
      }
      e.exports = function(e2, t2) {
        t2 = t2 || {};
        var r2, c = typeof e2;
        if (c === "string" && e2.length > 0)
          return function(e3) {
            if ((e3 = String(e3)).length > 100)
              return;
            var t3 = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e3);
            if (!t3)
              return;
            var r3 = parseFloat(t3[1]);
            switch ((t3[2] || "ms").toLowerCase()) {
              case "years":
              case "year":
              case "yrs":
              case "yr":
              case "y":
                return 315576e5 * r3;
              case "days":
              case "day":
              case "d":
                return r3 * o;
              case "hours":
              case "hour":
              case "hrs":
              case "hr":
              case "h":
                return r3 * s;
              case "minutes":
              case "minute":
              case "mins":
              case "min":
              case "m":
                return r3 * i;
              case "seconds":
              case "second":
              case "secs":
              case "sec":
              case "s":
                return r3 * n;
              case "milliseconds":
              case "millisecond":
              case "msecs":
              case "msec":
              case "ms":
                return r3;
              default:
                return;
            }
          }(e2);
        if (c === "number" && isNaN(e2) === false)
          return t2.long ? a(r2 = e2, o, "day") || a(r2, s, "hour") || a(r2, i, "minute") || a(r2, n, "second") || r2 + " ms" : function(e3) {
            if (e3 >= o)
              return Math.round(e3 / o) + "d";
            if (e3 >= s)
              return Math.round(e3 / s) + "h";
            if (e3 >= i)
              return Math.round(e3 / i) + "m";
            if (e3 >= n)
              return Math.round(e3 / n) + "s";
            return e3 + "ms";
          }(e2);
        throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e2));
      };
    }, function(e, t, r) {
      "use strict";
      function n(e2) {
        if (e2)
          return function(e3) {
            for (var t2 in n.prototype)
              e3[t2] = n.prototype[t2];
            return e3;
          }(e2);
      }
      e.exports = n, n.prototype.on = n.prototype.addEventListener = function(e2, t2) {
        return this._callbacks = this._callbacks || {}, (this._callbacks["$" + e2] = this._callbacks["$" + e2] || []).push(t2), this;
      }, n.prototype.once = function(e2, t2) {
        function r2() {
          this.off(e2, r2), t2.apply(this, arguments);
        }
        return r2.fn = t2, this.on(e2, r2), this;
      }, n.prototype.off = n.prototype.removeListener = n.prototype.removeAllListeners = n.prototype.removeEventListener = function(e2, t2) {
        if (this._callbacks = this._callbacks || {}, arguments.length == 0)
          return this._callbacks = {}, this;
        var r2, n2 = this._callbacks["$" + e2];
        if (!n2)
          return this;
        if (arguments.length == 1)
          return delete this._callbacks["$" + e2], this;
        for (var i = 0; i < n2.length; i++)
          if ((r2 = n2[i]) === t2 || r2.fn === t2) {
            n2.splice(i, 1);
            break;
          }
        return n2.length === 0 && delete this._callbacks["$" + e2], this;
      }, n.prototype.emit = function(e2) {
        this._callbacks = this._callbacks || {};
        for (var t2 = new Array(arguments.length - 1), r2 = this._callbacks["$" + e2], n2 = 1; n2 < arguments.length; n2++)
          t2[n2 - 1] = arguments[n2];
        if (r2) {
          n2 = 0;
          for (var i = (r2 = r2.slice(0)).length; n2 < i; ++n2)
            r2[n2].apply(this, t2);
        }
        return this;
      }, n.prototype.listeners = function(e2) {
        return this._callbacks = this._callbacks || {}, this._callbacks["$" + e2] || [];
      }, n.prototype.hasListeners = function(e2) {
        return !!this.listeners(e2).length;
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(355), i = r(356), s = Object.prototype.toString, o = typeof Blob == "function" || typeof Blob != "undefined" && s.call(Blob) === "[object BlobConstructor]", a = typeof File == "function" || typeof File != "undefined" && s.call(File) === "[object FileConstructor]";
      t.deconstructPacket = function(e2) {
        var t2 = [], r2 = e2.data, s2 = e2;
        return s2.data = function e3(t3, r3) {
          if (!t3)
            return t3;
          if (i(t3)) {
            var s3 = {_placeholder: true, num: r3.length};
            return r3.push(t3), s3;
          }
          if (n(t3)) {
            for (var o2 = new Array(t3.length), a2 = 0; a2 < t3.length; a2++)
              o2[a2] = e3(t3[a2], r3);
            return o2;
          }
          if (typeof t3 == "object" && !(t3 instanceof Date)) {
            o2 = {};
            for (var c in t3)
              o2[c] = e3(t3[c], r3);
            return o2;
          }
          return t3;
        }(r2, t2), s2.attachments = t2.length, {packet: s2, buffers: t2};
      }, t.reconstructPacket = function(e2, t2) {
        return e2.data = function e3(t3, r2) {
          if (!t3)
            return t3;
          if (t3 && t3._placeholder)
            return r2[t3.num];
          if (n(t3))
            for (var i2 = 0; i2 < t3.length; i2++)
              t3[i2] = e3(t3[i2], r2);
          else if (typeof t3 == "object")
            for (var s2 in t3)
              t3[s2] = e3(t3[s2], r2);
          return t3;
        }(e2.data, t2), e2.attachments = void 0, e2;
      }, t.removeBlobs = function(e2, t2) {
        var r2 = 0, s2 = e2;
        !function e3(c, u, h) {
          if (!c)
            return c;
          if (o && c instanceof Blob || a && c instanceof File) {
            r2++;
            var f = new FileReader();
            f.onload = function() {
              h ? h[u] = this.result : s2 = this.result, --r2 || t2(s2);
            }, f.readAsArrayBuffer(c);
          } else if (n(c))
            for (var d = 0; d < c.length; d++)
              e3(c[d], d, c);
          else if (typeof c == "object" && !i(c))
            for (var l in c)
              e3(c[l], l, c);
        }(s2), r2 || t2(s2);
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = r(968), e.exports.parser = r(76);
    }, function(e, t, r) {
      "use strict";
      var n = r(358), i = r(206), s = r(122)("engine.io-client:socket"), o = r(362), a = r(76), c = r(983), u = r(207);
      function h(e2, t2) {
        if (!(this instanceof h))
          return new h(e2, t2);
        t2 = t2 || {}, e2 && typeof e2 == "object" && (t2 = e2, e2 = null), e2 ? (e2 = c(e2), t2.hostname = e2.host, t2.secure = e2.protocol === "https" || e2.protocol === "wss", t2.port = e2.port, e2.query && (t2.query = e2.query)) : t2.host && (t2.hostname = c(t2.host).host), this.secure = t2.secure != null ? t2.secure : typeof location != "undefined" && location.protocol === "https:", t2.hostname && !t2.port && (t2.port = this.secure ? "443" : "80"), this.agent = t2.agent || false, this.hostname = t2.hostname || (typeof location != "undefined" ? location.hostname : "localhost"), this.port = t2.port || (typeof location != "undefined" && location.port ? location.port : this.secure ? 443 : 80), this.query = t2.query || {}, typeof this.query == "string" && (this.query = u.decode(this.query)), this.upgrade = t2.upgrade !== false, this.path = (t2.path || "/engine.io").replace(/\/$/, "") + "/", this.forceJSONP = !!t2.forceJSONP, this.jsonp = t2.jsonp !== false, this.forceBase64 = !!t2.forceBase64, this.enablesXDR = !!t2.enablesXDR, this.withCredentials = t2.withCredentials !== false, this.timestampParam = t2.timestampParam || "t", this.timestampRequests = t2.timestampRequests, this.transports = t2.transports || ["polling", "websocket"], this.transportOptions = t2.transportOptions || {}, this.readyState = "", this.writeBuffer = [], this.prevBufferLen = 0, this.policyPort = t2.policyPort || 843, this.rememberUpgrade = t2.rememberUpgrade || false, this.binaryType = null, this.onlyBinaryUpgrades = t2.onlyBinaryUpgrades, this.perMessageDeflate = t2.perMessageDeflate !== false && (t2.perMessageDeflate || {}), this.perMessageDeflate === true && (this.perMessageDeflate = {}), this.perMessageDeflate && this.perMessageDeflate.threshold == null && (this.perMessageDeflate.threshold = 1024), this.pfx = t2.pfx || null, this.key = t2.key || null, this.passphrase = t2.passphrase || null, this.cert = t2.cert || null, this.ca = t2.ca || null, this.ciphers = t2.ciphers || null, this.rejectUnauthorized = t2.rejectUnauthorized === void 0 || t2.rejectUnauthorized, this.forceNode = !!t2.forceNode, this.isReactNative = typeof navigator != "undefined" && typeof navigator.product == "string" && navigator.product.toLowerCase() === "reactnative", (typeof self == "undefined" || this.isReactNative) && (t2.extraHeaders && Object.keys(t2.extraHeaders).length > 0 && (this.extraHeaders = t2.extraHeaders), t2.localAddress && (this.localAddress = t2.localAddress)), this.id = null, this.upgrades = null, this.pingInterval = null, this.pingTimeout = null, this.pingIntervalTimer = null, this.pingTimeoutTimer = null, this.open();
      }
      e.exports = h, h.priorWebsocketSuccess = false, i(h.prototype), h.protocol = a.protocol, h.Socket = h, h.Transport = r(205), h.transports = r(358), h.parser = r(76), h.prototype.createTransport = function(e2) {
        s('creating transport "%s"', e2);
        var t2 = function(e3) {
          var t3 = {};
          for (var r3 in e3)
            e3.hasOwnProperty(r3) && (t3[r3] = e3[r3]);
          return t3;
        }(this.query);
        t2.EIO = a.protocol, t2.transport = e2;
        var r2 = this.transportOptions[e2] || {};
        return this.id && (t2.sid = this.id), new n[e2]({query: t2, socket: this, agent: r2.agent || this.agent, hostname: r2.hostname || this.hostname, port: r2.port || this.port, secure: r2.secure || this.secure, path: r2.path || this.path, forceJSONP: r2.forceJSONP || this.forceJSONP, jsonp: r2.jsonp || this.jsonp, forceBase64: r2.forceBase64 || this.forceBase64, enablesXDR: r2.enablesXDR || this.enablesXDR, withCredentials: r2.withCredentials || this.withCredentials, timestampRequests: r2.timestampRequests || this.timestampRequests, timestampParam: r2.timestampParam || this.timestampParam, policyPort: r2.policyPort || this.policyPort, pfx: r2.pfx || this.pfx, key: r2.key || this.key, passphrase: r2.passphrase || this.passphrase, cert: r2.cert || this.cert, ca: r2.ca || this.ca, ciphers: r2.ciphers || this.ciphers, rejectUnauthorized: r2.rejectUnauthorized || this.rejectUnauthorized, perMessageDeflate: r2.perMessageDeflate || this.perMessageDeflate, extraHeaders: r2.extraHeaders || this.extraHeaders, forceNode: r2.forceNode || this.forceNode, localAddress: r2.localAddress || this.localAddress, requestTimeout: r2.requestTimeout || this.requestTimeout, protocols: r2.protocols || void 0, isReactNative: this.isReactNative});
      }, h.prototype.open = function() {
        var e2;
        if (this.rememberUpgrade && h.priorWebsocketSuccess && this.transports.indexOf("websocket") !== -1)
          e2 = "websocket";
        else {
          if (this.transports.length === 0) {
            var t2 = this;
            return void setTimeout(function() {
              t2.emit("error", "No transports available");
            }, 0);
          }
          e2 = this.transports[0];
        }
        this.readyState = "opening";
        try {
          e2 = this.createTransport(e2);
        } catch (r2) {
          return this.transports.shift(), void this.open();
        }
        e2.open(), this.setTransport(e2);
      }, h.prototype.setTransport = function(e2) {
        s("setting transport %s", e2.name);
        var t2 = this;
        this.transport && (s("clearing existing transport %s", this.transport.name), this.transport.removeAllListeners()), this.transport = e2, e2.on("drain", function() {
          t2.onDrain();
        }).on("packet", function(e3) {
          t2.onPacket(e3);
        }).on("error", function(e3) {
          t2.onError(e3);
        }).on("close", function() {
          t2.onClose("transport close");
        });
      }, h.prototype.probe = function(e2) {
        s('probing transport "%s"', e2);
        var t2 = this.createTransport(e2, {probe: 1}), r2 = false, n2 = this;
        function i2() {
          if (n2.onlyBinaryUpgrades) {
            var i3 = !this.supportsBinary && n2.transport.supportsBinary;
            r2 = r2 || i3;
          }
          r2 || (s('probe transport "%s" opened', e2), t2.send([{type: "ping", data: "probe"}]), t2.once("packet", function(i4) {
            if (!r2)
              if (i4.type === "pong" && i4.data === "probe") {
                if (s('probe transport "%s" pong', e2), n2.upgrading = true, n2.emit("upgrading", t2), !t2)
                  return;
                h.priorWebsocketSuccess = t2.name === "websocket", s('pausing current transport "%s"', n2.transport.name), n2.transport.pause(function() {
                  r2 || n2.readyState !== "closed" && (s("changing transport and sending upgrade packet"), d(), n2.setTransport(t2), t2.send([{type: "upgrade"}]), n2.emit("upgrade", t2), t2 = null, n2.upgrading = false, n2.flush());
                });
              } else {
                s('probe transport "%s" failed', e2);
                var o3 = new Error("probe error");
                o3.transport = t2.name, n2.emit("upgradeError", o3);
              }
          }));
        }
        function o2() {
          r2 || (r2 = true, d(), t2.close(), t2 = null);
        }
        function a2(r3) {
          var i3 = new Error("probe error: " + r3);
          i3.transport = t2.name, o2(), s('probe transport "%s" failed because of error: %s', e2, r3), n2.emit("upgradeError", i3);
        }
        function c2() {
          a2("transport closed");
        }
        function u2() {
          a2("socket closed");
        }
        function f(e3) {
          t2 && e3.name !== t2.name && (s('"%s" works - aborting "%s"', e3.name, t2.name), o2());
        }
        function d() {
          t2.removeListener("open", i2), t2.removeListener("error", a2), t2.removeListener("close", c2), n2.removeListener("close", u2), n2.removeListener("upgrading", f);
        }
        h.priorWebsocketSuccess = false, t2.once("open", i2), t2.once("error", a2), t2.once("close", c2), this.once("close", u2), this.once("upgrading", f), t2.open();
      }, h.prototype.onOpen = function() {
        if (s("socket open"), this.readyState = "open", h.priorWebsocketSuccess = this.transport.name === "websocket", this.emit("open"), this.flush(), this.readyState === "open" && this.upgrade && this.transport.pause) {
          s("starting upgrade probes");
          for (var e2 = 0, t2 = this.upgrades.length; e2 < t2; e2++)
            this.probe(this.upgrades[e2]);
        }
      }, h.prototype.onPacket = function(e2) {
        if (this.readyState === "opening" || this.readyState === "open" || this.readyState === "closing")
          switch (s('socket receive: type "%s", data "%s"', e2.type, e2.data), this.emit("packet", e2), this.emit("heartbeat"), e2.type) {
            case "open":
              this.onHandshake(JSON.parse(e2.data));
              break;
            case "pong":
              this.setPing(), this.emit("pong");
              break;
            case "error":
              var t2 = new Error("server error");
              t2.code = e2.data, this.onError(t2);
              break;
            case "message":
              this.emit("data", e2.data), this.emit("message", e2.data);
          }
        else
          s('packet received with socket readyState "%s"', this.readyState);
      }, h.prototype.onHandshake = function(e2) {
        this.emit("handshake", e2), this.id = e2.sid, this.transport.query.sid = e2.sid, this.upgrades = this.filterUpgrades(e2.upgrades), this.pingInterval = e2.pingInterval, this.pingTimeout = e2.pingTimeout, this.onOpen(), this.readyState !== "closed" && (this.setPing(), this.removeListener("heartbeat", this.onHeartbeat), this.on("heartbeat", this.onHeartbeat));
      }, h.prototype.onHeartbeat = function(e2) {
        clearTimeout(this.pingTimeoutTimer);
        var t2 = this;
        t2.pingTimeoutTimer = setTimeout(function() {
          t2.readyState !== "closed" && t2.onClose("ping timeout");
        }, e2 || t2.pingInterval + t2.pingTimeout);
      }, h.prototype.setPing = function() {
        var e2 = this;
        clearTimeout(e2.pingIntervalTimer), e2.pingIntervalTimer = setTimeout(function() {
          s("writing ping packet - expecting pong within %sms", e2.pingTimeout), e2.ping(), e2.onHeartbeat(e2.pingTimeout);
        }, e2.pingInterval);
      }, h.prototype.ping = function() {
        var e2 = this;
        this.sendPacket("ping", function() {
          e2.emit("ping");
        });
      }, h.prototype.onDrain = function() {
        this.writeBuffer.splice(0, this.prevBufferLen), this.prevBufferLen = 0, this.writeBuffer.length === 0 ? this.emit("drain") : this.flush();
      }, h.prototype.flush = function() {
        this.readyState !== "closed" && this.transport.writable && !this.upgrading && this.writeBuffer.length && (s("flushing %d packets in socket", this.writeBuffer.length), this.transport.send(this.writeBuffer), this.prevBufferLen = this.writeBuffer.length, this.emit("flush"));
      }, h.prototype.write = h.prototype.send = function(e2, t2, r2) {
        return this.sendPacket("message", e2, t2, r2), this;
      }, h.prototype.sendPacket = function(e2, t2, r2, n2) {
        if (typeof t2 == "function" && (n2 = t2, t2 = void 0), typeof r2 == "function" && (n2 = r2, r2 = null), this.readyState !== "closing" && this.readyState !== "closed") {
          (r2 = r2 || {}).compress = r2.compress !== false;
          var i2 = {type: e2, data: t2, options: r2};
          this.emit("packetCreate", i2), this.writeBuffer.push(i2), n2 && this.once("flush", n2), this.flush();
        }
      }, h.prototype.close = function() {
        if (this.readyState === "opening" || this.readyState === "open") {
          this.readyState = "closing";
          var e2 = this;
          this.writeBuffer.length ? this.once("drain", function() {
            this.upgrading ? n2() : t2();
          }) : this.upgrading ? n2() : t2();
        }
        function t2() {
          e2.onClose("forced close"), s("socket closing - telling transport to close"), e2.transport.close();
        }
        function r2() {
          e2.removeListener("upgrade", r2), e2.removeListener("upgradeError", r2), t2();
        }
        function n2() {
          e2.once("upgrade", r2), e2.once("upgradeError", r2);
        }
        return this;
      }, h.prototype.onError = function(e2) {
        s("socket error %j", e2), h.priorWebsocketSuccess = false, this.emit("error", e2), this.onClose("transport error", e2);
      }, h.prototype.onClose = function(e2, t2) {
        if (this.readyState === "opening" || this.readyState === "open" || this.readyState === "closing") {
          s('socket close with reason: "%s"', e2);
          clearTimeout(this.pingIntervalTimer), clearTimeout(this.pingTimeoutTimer), this.transport.removeAllListeners("close"), this.transport.close(), this.transport.removeAllListeners(), this.readyState = "closed", this.id = null, this.emit("close", e2, t2), this.writeBuffer = [], this.prevBufferLen = 0;
        }
      }, h.prototype.filterUpgrades = function(e2) {
        for (var t2 = [], r2 = 0, n2 = e2.length; r2 < n2; r2++)
          ~o(this.transports, e2[r2]) && t2.push(e2[r2]);
        return t2;
      };
    }, function(e, t, r) {
      "use strict";
      try {
        e.exports = typeof XMLHttpRequest != "undefined" && "withCredentials" in new XMLHttpRequest();
      } catch (n) {
        e.exports = false;
      }
    }, function(e, t, r) {
      "use strict";
      var n = r(203), i = r(359), s = r(206), o = r(121), a = r(122)("engine.io-client:polling-xhr"), c = r(204);
      function u() {
      }
      function h(e2) {
        if (i.call(this, e2), this.requestTimeout = e2.requestTimeout, this.extraHeaders = e2.extraHeaders, typeof location != "undefined") {
          var t2 = location.protocol === "https:", r2 = location.port;
          r2 || (r2 = t2 ? 443 : 80), this.xd = typeof location != "undefined" && e2.hostname !== location.hostname || r2 !== e2.port, this.xs = e2.secure !== t2;
        }
      }
      function f(e2) {
        this.method = e2.method || "GET", this.uri = e2.uri, this.xd = !!e2.xd, this.xs = !!e2.xs, this.async = e2.async !== false, this.data = e2.data !== void 0 ? e2.data : null, this.agent = e2.agent, this.isBinary = e2.isBinary, this.supportsBinary = e2.supportsBinary, this.enablesXDR = e2.enablesXDR, this.withCredentials = e2.withCredentials, this.requestTimeout = e2.requestTimeout, this.pfx = e2.pfx, this.key = e2.key, this.passphrase = e2.passphrase, this.cert = e2.cert, this.ca = e2.ca, this.ciphers = e2.ciphers, this.rejectUnauthorized = e2.rejectUnauthorized, this.extraHeaders = e2.extraHeaders, this.create();
      }
      if (e.exports = h, e.exports.Request = f, o(h, i), h.prototype.supportsBinary = true, h.prototype.request = function(e2) {
        return (e2 = e2 || {}).uri = this.uri(), e2.xd = this.xd, e2.xs = this.xs, e2.agent = this.agent || false, e2.supportsBinary = this.supportsBinary, e2.enablesXDR = this.enablesXDR, e2.withCredentials = this.withCredentials, e2.pfx = this.pfx, e2.key = this.key, e2.passphrase = this.passphrase, e2.cert = this.cert, e2.ca = this.ca, e2.ciphers = this.ciphers, e2.rejectUnauthorized = this.rejectUnauthorized, e2.requestTimeout = this.requestTimeout, e2.extraHeaders = this.extraHeaders, new f(e2);
      }, h.prototype.doWrite = function(e2, t2) {
        var r2 = typeof e2 != "string" && e2 !== void 0, n2 = this.request({method: "POST", data: e2, isBinary: r2}), i2 = this;
        n2.on("success", t2), n2.on("error", function(e3) {
          i2.onError("xhr post error", e3);
        }), this.sendXhr = n2;
      }, h.prototype.doPoll = function() {
        a("xhr poll");
        var e2 = this.request(), t2 = this;
        e2.on("data", function(e3) {
          t2.onData(e3);
        }), e2.on("error", function(e3) {
          t2.onError("xhr poll error", e3);
        }), this.pollXhr = e2;
      }, s(f.prototype), f.prototype.create = function() {
        var e2 = {agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR};
        e2.pfx = this.pfx, e2.key = this.key, e2.passphrase = this.passphrase, e2.cert = this.cert, e2.ca = this.ca, e2.ciphers = this.ciphers, e2.rejectUnauthorized = this.rejectUnauthorized;
        var t2 = this.xhr = new n(e2), r2 = this;
        try {
          a("xhr open %s: %s", this.method, this.uri), t2.open(this.method, this.uri, this.async);
          try {
            if (this.extraHeaders)
              for (var i2 in t2.setDisableHeaderCheck && t2.setDisableHeaderCheck(true), this.extraHeaders)
                this.extraHeaders.hasOwnProperty(i2) && t2.setRequestHeader(i2, this.extraHeaders[i2]);
          } catch (s2) {
          }
          if (this.method === "POST")
            try {
              this.isBinary ? t2.setRequestHeader("Content-type", "application/octet-stream") : t2.setRequestHeader("Content-type", "text/plain;charset=UTF-8");
            } catch (s2) {
            }
          try {
            t2.setRequestHeader("Accept", "*/*");
          } catch (s2) {
          }
          "withCredentials" in t2 && (t2.withCredentials = this.withCredentials), this.requestTimeout && (t2.timeout = this.requestTimeout), this.hasXDR() ? (t2.onload = function() {
            r2.onLoad();
          }, t2.onerror = function() {
            r2.onError(t2.responseText);
          }) : t2.onreadystatechange = function() {
            if (t2.readyState === 2)
              try {
                var e3 = t2.getResponseHeader("Content-Type");
                (r2.supportsBinary && e3 === "application/octet-stream" || e3 === "application/octet-stream; charset=UTF-8") && (t2.responseType = "arraybuffer");
              } catch (s2) {
              }
            t2.readyState === 4 && (t2.status === 200 || t2.status === 1223 ? r2.onLoad() : setTimeout(function() {
              r2.onError(typeof t2.status == "number" ? t2.status : 0);
            }, 0));
          }, a("xhr data %s", this.data), t2.send(this.data);
        } catch (s2) {
          return void setTimeout(function() {
            r2.onError(s2);
          }, 0);
        }
        typeof document != "undefined" && (this.index = f.requestsCount++, f.requests[this.index] = this);
      }, f.prototype.onSuccess = function() {
        this.emit("success"), this.cleanup();
      }, f.prototype.onData = function(e2) {
        this.emit("data", e2), this.onSuccess();
      }, f.prototype.onError = function(e2) {
        this.emit("error", e2), this.cleanup(true);
      }, f.prototype.cleanup = function(e2) {
        if (this.xhr !== void 0 && this.xhr !== null) {
          if (this.hasXDR() ? this.xhr.onload = this.xhr.onerror = u : this.xhr.onreadystatechange = u, e2)
            try {
              this.xhr.abort();
            } catch (t2) {
            }
          typeof document != "undefined" && delete f.requests[this.index], this.xhr = null;
        }
      }, f.prototype.onLoad = function() {
        var e2;
        try {
          var t2;
          try {
            t2 = this.xhr.getResponseHeader("Content-Type");
          } catch (r2) {
          }
          e2 = (t2 === "application/octet-stream" || t2 === "application/octet-stream; charset=UTF-8") && this.xhr.response || this.xhr.responseText;
        } catch (r2) {
          this.onError(r2);
        }
        e2 != null && this.onData(e2);
      }, f.prototype.hasXDR = function() {
        return typeof XDomainRequest != "undefined" && !this.xs && this.enablesXDR;
      }, f.prototype.abort = function() {
        this.cleanup();
      }, f.requestsCount = 0, f.requests = {}, typeof document != "undefined") {
        if (typeof attachEvent == "function")
          attachEvent("onunload", d);
        else if (typeof addEventListener == "function") {
          addEventListener("onpagehide" in c ? "pagehide" : "unload", d, false);
        }
      }
      function d() {
        for (var e2 in f.requests)
          f.requests.hasOwnProperty(e2) && f.requests[e2].abort();
      }
    }, function(e, t, r) {
      "use strict";
      e.exports = Object.keys || function(e2) {
        var t2 = [], r2 = Object.prototype.hasOwnProperty;
        for (var n in e2)
          r2.call(e2, n) && t2.push(n);
        return t2;
      };
    }, function(e, t, r) {
      "use strict";
      var n = {}.toString;
      e.exports = Array.isArray || function(e2) {
        return n.call(e2) == "[object Array]";
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2, r2) {
        var n = e2.byteLength;
        if (t2 = t2 || 0, r2 = r2 || n, e2.slice)
          return e2.slice(t2, r2);
        if (t2 < 0 && (t2 += n), r2 < 0 && (r2 += n), r2 > n && (r2 = n), t2 >= n || t2 >= r2 || n === 0)
          return new ArrayBuffer(0);
        for (var i = new Uint8Array(e2), s = new Uint8Array(r2 - t2), o = t2, a = 0; o < r2; o++, a++)
          s[a] = i[o];
        return s.buffer;
      };
    }, function(e, t, r) {
      "use strict";
      function n() {
      }
      e.exports = function(e2, t2, r2) {
        var i = false;
        return r2 = r2 || n, s.count = e2, e2 === 0 ? t2() : s;
        function s(e3, n2) {
          if (s.count <= 0)
            throw new Error("after called too many times");
          --s.count, e3 ? (i = true, t2(e3), t2 = r2) : s.count !== 0 || i || t2(null, n2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      var n, i, s, o = String.fromCharCode;
      function a(e2) {
        for (var t2, r2, n2 = [], i2 = 0, s2 = e2.length; i2 < s2; )
          (t2 = e2.charCodeAt(i2++)) >= 55296 && t2 <= 56319 && i2 < s2 ? (64512 & (r2 = e2.charCodeAt(i2++))) == 56320 ? n2.push(((1023 & t2) << 10) + (1023 & r2) + 65536) : (n2.push(t2), i2--) : n2.push(t2);
        return n2;
      }
      function c(e2, t2) {
        if (e2 >= 55296 && e2 <= 57343) {
          if (t2)
            throw Error("Lone surrogate U+" + e2.toString(16).toUpperCase() + " is not a scalar value");
          return false;
        }
        return true;
      }
      function u(e2, t2) {
        return o(e2 >> t2 & 63 | 128);
      }
      function h(e2, t2) {
        if ((4294967168 & e2) == 0)
          return o(e2);
        var r2 = "";
        return (4294965248 & e2) == 0 ? r2 = o(e2 >> 6 & 31 | 192) : (4294901760 & e2) == 0 ? (c(e2, t2) || (e2 = 65533), r2 = o(e2 >> 12 & 15 | 224), r2 += u(e2, 6)) : (4292870144 & e2) == 0 && (r2 = o(e2 >> 18 & 7 | 240), r2 += u(e2, 12), r2 += u(e2, 6)), r2 += o(63 & e2 | 128);
      }
      function f() {
        if (s >= i)
          throw Error("Invalid byte index");
        var e2 = 255 & n[s];
        if (s++, (192 & e2) == 128)
          return 63 & e2;
        throw Error("Invalid continuation byte");
      }
      function d(e2) {
        var t2, r2;
        if (s > i)
          throw Error("Invalid byte index");
        if (s == i)
          return false;
        if (t2 = 255 & n[s], s++, (128 & t2) == 0)
          return t2;
        if ((224 & t2) == 192) {
          if ((r2 = (31 & t2) << 6 | f()) >= 128)
            return r2;
          throw Error("Invalid continuation byte");
        }
        if ((240 & t2) == 224) {
          if ((r2 = (15 & t2) << 12 | f() << 6 | f()) >= 2048)
            return c(r2, e2) ? r2 : 65533;
          throw Error("Invalid continuation byte");
        }
        if ((248 & t2) == 240 && (r2 = (7 & t2) << 18 | f() << 12 | f() << 6 | f()) >= 65536 && r2 <= 1114111)
          return r2;
        throw Error("Invalid UTF-8 detected");
      }
      e.exports = {version: "2.1.2", encode: function(e2, t2) {
        for (var r2 = (t2 = t2 || {}).strict !== false, n2 = a(e2), i2 = n2.length, s2 = -1, o2 = ""; ++s2 < i2; )
          o2 += h(n2[s2], r2);
        return o2;
      }, decode: function(e2, t2) {
        var r2 = (t2 = t2 || {}).strict !== false;
        n = a(e2), i = n.length, s = 0;
        for (var c2, u2 = []; (c2 = d(r2)) !== false; )
          u2.push(c2);
        return function(e3) {
          for (var t3, r3 = e3.length, n2 = -1, i2 = ""; ++n2 < r3; )
            (t3 = e3[n2]) > 65535 && (i2 += o((t3 -= 65536) >>> 10 & 1023 | 55296), t3 = 56320 | 1023 & t3), i2 += o(t3);
          return i2;
        }(u2);
      }};
    }, function(e, t, r) {
      "use strict";
      var n;
      n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", t.encode = function(e2) {
        var t2, r2 = new Uint8Array(e2), i = r2.length, s = "";
        for (t2 = 0; t2 < i; t2 += 3)
          s += n[r2[t2] >> 2], s += n[(3 & r2[t2]) << 4 | r2[t2 + 1] >> 4], s += n[(15 & r2[t2 + 1]) << 2 | r2[t2 + 2] >> 6], s += n[63 & r2[t2 + 2]];
        return i % 3 == 2 ? s = s.substring(0, s.length - 1) + "=" : i % 3 == 1 && (s = s.substring(0, s.length - 2) + "=="), s;
      }, t.decode = function(e2) {
        var t2, r2, i, s, o, a = 0.75 * e2.length, c = e2.length, u = 0;
        e2[e2.length - 1] === "=" && (a--, e2[e2.length - 2] === "=" && a--);
        var h = new ArrayBuffer(a), f = new Uint8Array(h);
        for (t2 = 0; t2 < c; t2 += 4)
          r2 = n.indexOf(e2[t2]), i = n.indexOf(e2[t2 + 1]), s = n.indexOf(e2[t2 + 2]), o = n.indexOf(e2[t2 + 3]), f[u++] = r2 << 2 | i >> 4, f[u++] = (15 & i) << 4 | s >> 2, f[u++] = (3 & s) << 6 | 63 & o;
        return h;
      };
    }, function(e, t, r) {
      "use strict";
      var n = n !== void 0 ? n : typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : typeof MSBlobBuilder != "undefined" ? MSBlobBuilder : typeof MozBlobBuilder != "undefined" && MozBlobBuilder, i = function() {
        try {
          return new Blob(["hi"]).size === 2;
        } catch (e2) {
          return false;
        }
      }(), s = i && function() {
        try {
          return new Blob([new Uint8Array([1, 2])]).size === 2;
        } catch (e2) {
          return false;
        }
      }(), o = n && n.prototype.append && n.prototype.getBlob;
      function a(e2) {
        return e2.map(function(e3) {
          if (e3.buffer instanceof ArrayBuffer) {
            var t2 = e3.buffer;
            if (e3.byteLength !== t2.byteLength) {
              var r2 = new Uint8Array(e3.byteLength);
              r2.set(new Uint8Array(t2, e3.byteOffset, e3.byteLength)), t2 = r2.buffer;
            }
            return t2;
          }
          return e3;
        });
      }
      function c(e2, t2) {
        t2 = t2 || {};
        var r2 = new n();
        return a(e2).forEach(function(e3) {
          r2.append(e3);
        }), t2.type ? r2.getBlob(t2.type) : r2.getBlob();
      }
      function u(e2, t2) {
        return new Blob(a(e2), t2 || {});
      }
      typeof Blob != "undefined" && (c.prototype = Blob.prototype, u.prototype = Blob.prototype), e.exports = i ? s ? Blob : u : o ? c : void 0;
    }, function(e, t, r) {
      "use strict";
      function n(e2) {
        var r2;
        function n2() {
          if (n2.enabled) {
            var e3 = n2, i2 = +new Date(), s = i2 - (r2 || i2);
            e3.diff = s, e3.prev = r2, e3.curr = i2, r2 = i2;
            for (var o = new Array(arguments.length), a = 0; a < o.length; a++)
              o[a] = arguments[a];
            o[0] = t.coerce(o[0]), typeof o[0] != "string" && o.unshift("%O");
            var c = 0;
            o[0] = o[0].replace(/%([a-zA-Z%])/g, function(r3, n3) {
              if (r3 === "%%")
                return r3;
              c++;
              var i3 = t.formatters[n3];
              if (typeof i3 == "function") {
                var s2 = o[c];
                r3 = i3.call(e3, s2), o.splice(c, 1), c--;
              }
              return r3;
            }), t.formatArgs.call(e3, o);
            var u = n2.log || t.log || console.log.bind(console);
            u.apply(e3, o);
          }
        }
        return n2.namespace = e2, n2.enabled = t.enabled(e2), n2.useColors = t.useColors(), n2.color = function(e3) {
          var r3, n3 = 0;
          for (r3 in e3)
            n3 = (n3 << 5) - n3 + e3.charCodeAt(r3), n3 |= 0;
          return t.colors[Math.abs(n3) % t.colors.length];
        }(e2), n2.destroy = i, typeof t.init == "function" && t.init(n2), t.instances.push(n2), n2;
      }
      function i() {
        var e2 = t.instances.indexOf(this);
        return e2 !== -1 && (t.instances.splice(e2, 1), true);
      }
      (t = e.exports = n.debug = n.default = n).coerce = function(e2) {
        return e2 instanceof Error ? e2.stack || e2.message : e2;
      }, t.disable = function() {
        t.enable("");
      }, t.enable = function(e2) {
        var r2;
        t.save(e2), t.names = [], t.skips = [];
        var n2 = (typeof e2 == "string" ? e2 : "").split(/[\s,]+/), i2 = n2.length;
        for (r2 = 0; r2 < i2; r2++)
          n2[r2] && ((e2 = n2[r2].replace(/\*/g, ".*?"))[0] === "-" ? t.skips.push(new RegExp("^" + e2.substr(1) + "$")) : t.names.push(new RegExp("^" + e2 + "$")));
        for (r2 = 0; r2 < t.instances.length; r2++) {
          var s = t.instances[r2];
          s.enabled = t.enabled(s.namespace);
        }
      }, t.enabled = function(e2) {
        if (e2[e2.length - 1] === "*")
          return true;
        var r2, n2;
        for (r2 = 0, n2 = t.skips.length; r2 < n2; r2++)
          if (t.skips[r2].test(e2))
            return false;
        for (r2 = 0, n2 = t.names.length; r2 < n2; r2++)
          if (t.names[r2].test(e2))
            return true;
        return false;
      }, t.humanize = r(979), t.instances = [], t.names = [], t.skips = [], t.formatters = {};
    }, function(e, t, r) {
      "use strict";
      var n = 1e3, i = 6e4, s = 60 * i, o = 24 * s;
      function a(e2, t2, r2) {
        if (!(e2 < t2))
          return e2 < 1.5 * t2 ? Math.floor(e2 / t2) + " " + r2 : Math.ceil(e2 / t2) + " " + r2 + "s";
      }
      e.exports = function(e2, t2) {
        t2 = t2 || {};
        var r2, c = typeof e2;
        if (c === "string" && e2.length > 0)
          return function(e3) {
            if ((e3 = String(e3)).length > 100)
              return;
            var t3 = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e3);
            if (!t3)
              return;
            var r3 = parseFloat(t3[1]);
            switch ((t3[2] || "ms").toLowerCase()) {
              case "years":
              case "year":
              case "yrs":
              case "yr":
              case "y":
                return 315576e5 * r3;
              case "days":
              case "day":
              case "d":
                return r3 * o;
              case "hours":
              case "hour":
              case "hrs":
              case "hr":
              case "h":
                return r3 * s;
              case "minutes":
              case "minute":
              case "mins":
              case "min":
              case "m":
                return r3 * i;
              case "seconds":
              case "second":
              case "secs":
              case "sec":
              case "s":
                return r3 * n;
              case "milliseconds":
              case "millisecond":
              case "msecs":
              case "msec":
              case "ms":
                return r3;
              default:
                return;
            }
          }(e2);
        if (c === "number" && isNaN(e2) === false)
          return t2.long ? a(r2 = e2, o, "day") || a(r2, s, "hour") || a(r2, i, "minute") || a(r2, n, "second") || r2 + " ms" : function(e3) {
            if (e3 >= o)
              return Math.round(e3 / o) + "d";
            if (e3 >= s)
              return Math.round(e3 / s) + "h";
            if (e3 >= i)
              return Math.round(e3 / i) + "m";
            if (e3 >= n)
              return Math.round(e3 / n) + "s";
            return e3 + "ms";
          }(e2);
        throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e2));
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(359), i = r(121), s = r(204);
      e.exports = h;
      var o, a = /\n/g, c = /\\n/g;
      function u() {
      }
      function h(e2) {
        n.call(this, e2), this.query = this.query || {}, o || (o = s.___eio = s.___eio || []), this.index = o.length;
        var t2 = this;
        o.push(function(e3) {
          t2.onData(e3);
        }), this.query.j = this.index, typeof addEventListener == "function" && addEventListener("beforeunload", function() {
          t2.script && (t2.script.onerror = u);
        }, false);
      }
      i(h, n), h.prototype.supportsBinary = false, h.prototype.doClose = function() {
        this.script && (this.script.parentNode.removeChild(this.script), this.script = null), this.form && (this.form.parentNode.removeChild(this.form), this.form = null, this.iframe = null), n.prototype.doClose.call(this);
      }, h.prototype.doPoll = function() {
        var e2 = this, t2 = document.createElement("script");
        this.script && (this.script.parentNode.removeChild(this.script), this.script = null), t2.async = true, t2.src = this.uri(), t2.onerror = function(t3) {
          e2.onError("jsonp poll error", t3);
        };
        var r2 = document.getElementsByTagName("script")[0];
        r2 ? r2.parentNode.insertBefore(t2, r2) : (document.head || document.body).appendChild(t2), this.script = t2, typeof navigator != "undefined" && /gecko/i.test(navigator.userAgent) && setTimeout(function() {
          var e3 = document.createElement("iframe");
          document.body.appendChild(e3), document.body.removeChild(e3);
        }, 100);
      }, h.prototype.doWrite = function(e2, t2) {
        var r2 = this;
        if (!this.form) {
          var n2, i2 = document.createElement("form"), s2 = document.createElement("textarea"), o2 = this.iframeId = "eio_iframe_" + this.index;
          i2.className = "socketio", i2.style.position = "absolute", i2.style.top = "-1000px", i2.style.left = "-1000px", i2.target = o2, i2.method = "POST", i2.setAttribute("accept-charset", "utf-8"), s2.name = "d", i2.appendChild(s2), document.body.appendChild(i2), this.form = i2, this.area = s2;
        }
        function u2() {
          h2(), t2();
        }
        function h2() {
          if (r2.iframe)
            try {
              r2.form.removeChild(r2.iframe);
            } catch (t3) {
              r2.onError("jsonp polling iframe removal error", t3);
            }
          try {
            var e3 = '<iframe src="javascript:0" name="' + r2.iframeId + '">';
            n2 = document.createElement(e3);
          } catch (t3) {
            (n2 = document.createElement("iframe")).name = r2.iframeId, n2.src = "javascript:0";
          }
          n2.id = r2.iframeId, r2.form.appendChild(n2), r2.iframe = n2;
        }
        this.form.action = this.uri(), h2(), e2 = e2.replace(c, "\\\n"), this.area.value = e2.replace(a, "\\n");
        try {
          this.form.submit();
        } catch (f) {
        }
        this.iframe.attachEvent ? this.iframe.onreadystatechange = function() {
          r2.iframe.readyState === "complete" && u2();
        } : this.iframe.onload = u2;
      };
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        var n, i, s = r(205), o = r(76), a = r(207), c = r(121), u = r(361), h = r(122)("engine.io-client:websocket");
        if (typeof WebSocket != "undefined" ? n = WebSocket : typeof self != "undefined" && (n = self.WebSocket || self.MozWebSocket), typeof window == "undefined")
          try {
            i = r(982);
          } catch (l) {
          }
        var f = n || i;
        function d(e2) {
          e2 && e2.forceBase64 && (this.supportsBinary = false), this.perMessageDeflate = e2.perMessageDeflate, this.usingBrowserWebSocket = n && !e2.forceNode, this.protocols = e2.protocols, this.usingBrowserWebSocket || (f = i), s.call(this, e2);
        }
        e.exports = d, c(d, s), d.prototype.name = "websocket", d.prototype.supportsBinary = true, d.prototype.doOpen = function() {
          if (this.check()) {
            var e2 = this.uri(), t3 = this.protocols, r2 = {};
            this.isReactNative || (r2.agent = this.agent, r2.perMessageDeflate = this.perMessageDeflate, r2.pfx = this.pfx, r2.key = this.key, r2.passphrase = this.passphrase, r2.cert = this.cert, r2.ca = this.ca, r2.ciphers = this.ciphers, r2.rejectUnauthorized = this.rejectUnauthorized), this.extraHeaders && (r2.headers = this.extraHeaders), this.localAddress && (r2.localAddress = this.localAddress);
            try {
              this.ws = this.usingBrowserWebSocket && !this.isReactNative ? t3 ? new f(e2, t3) : new f(e2) : new f(e2, t3, r2);
            } catch (n2) {
              return this.emit("error", n2);
            }
            this.ws.binaryType === void 0 && (this.supportsBinary = false), this.ws.supports && this.ws.supports.binary ? (this.supportsBinary = true, this.ws.binaryType = "nodebuffer") : this.ws.binaryType = "arraybuffer", this.addEventListeners();
          }
        }, d.prototype.addEventListeners = function() {
          var e2 = this;
          this.ws.onopen = function() {
            e2.onOpen();
          }, this.ws.onclose = function() {
            e2.onClose();
          }, this.ws.onmessage = function(t3) {
            e2.onData(t3.data);
          }, this.ws.onerror = function(t3) {
            e2.onError("websocket error", t3);
          };
        }, d.prototype.write = function(e2) {
          var r2 = this;
          this.writable = false;
          for (var n2 = e2.length, i2 = 0, s2 = n2; i2 < s2; i2++)
            !function(e3) {
              o.encodePacket(e3, r2.supportsBinary, function(i3) {
                if (!r2.usingBrowserWebSocket) {
                  var s3 = {};
                  if (e3.options && (s3.compress = e3.options.compress), r2.perMessageDeflate)
                    (typeof i3 == "string" ? t2.byteLength(i3) : i3.length) < r2.perMessageDeflate.threshold && (s3.compress = false);
                }
                try {
                  r2.usingBrowserWebSocket ? r2.ws.send(i3) : r2.ws.send(i3, s3);
                } catch (l) {
                  h("websocket closed before onclose event");
                }
                --n2 || a2();
              });
            }(e2[i2]);
          function a2() {
            r2.emit("flush"), setTimeout(function() {
              r2.writable = true, r2.emit("drain");
            }, 0);
          }
        }, d.prototype.onClose = function() {
          s.prototype.onClose.call(this);
        }, d.prototype.doClose = function() {
          this.ws !== void 0 && this.ws.close();
        }, d.prototype.uri = function() {
          var e2 = this.query || {}, t3 = this.secure ? "wss" : "ws", r2 = "";
          return this.port && (t3 === "wss" && Number(this.port) !== 443 || t3 === "ws" && Number(this.port) !== 80) && (r2 = ":" + this.port), this.timestampRequests && (e2[this.timestampParam] = u()), this.supportsBinary || (e2.b64 = 1), (e2 = a.encode(e2)).length && (e2 = "?" + e2), t3 + "://" + (this.hostname.indexOf(":") !== -1 ? "[" + this.hostname + "]" : this.hostname) + r2 + this.path + e2;
        }, d.prototype.check = function() {
          return !(!f || "__initialize" in f && this.name === d.prototype.name);
        };
      }).call(this, r(3).Buffer);
    }, function(e, t) {
    }, function(e, t, r) {
      "use strict";
      var n = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/, i = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];
      e.exports = function(e2) {
        var t2 = e2, r2 = e2.indexOf("["), s = e2.indexOf("]");
        r2 != -1 && s != -1 && (e2 = e2.substring(0, r2) + e2.substring(r2, s).replace(/:/g, ";") + e2.substring(s, e2.length));
        for (var o, a, c = n.exec(e2 || ""), u = {}, h = 14; h--; )
          u[i[h]] = c[h] || "";
        return r2 != -1 && s != -1 && (u.source = t2, u.host = u.host.substring(1, u.host.length - 1).replace(/;/g, ":"), u.authority = u.authority.replace("[", "").replace("]", "").replace(/;/g, ":"), u.ipv6uri = true), u.pathNames = function(e3, t3) {
          var r3 = t3.replace(/\/{2,9}/g, "/").split("/");
          t3.substr(0, 1) != "/" && t3.length !== 0 || r3.splice(0, 1);
          t3.substr(t3.length - 1, 1) == "/" && r3.splice(r3.length - 1, 1);
          return r3;
        }(0, u.path), u.queryKey = (o = u.query, a = {}, o.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function(e3, t3, r3) {
          t3 && (a[t3] = r3);
        }), a), u;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2) {
        for (var r2 = [], n = (t2 = t2 || 0) || 0; n < e2.length; n++)
          r2[n - t2] = e2[n];
        return r2;
      };
    }, function(e, t, r) {
      "use strict";
      t.encode = function(e2) {
        var t2 = "";
        for (var r2 in e2)
          e2.hasOwnProperty(r2) && (t2.length && (t2 += "&"), t2 += encodeURIComponent(r2) + "=" + encodeURIComponent(e2[r2]));
        return t2;
      }, t.decode = function(e2) {
        for (var t2 = {}, r2 = e2.split("&"), n = 0, i = r2.length; n < i; n++) {
          var s = r2[n].split("=");
          t2[decodeURIComponent(s[0])] = decodeURIComponent(s[1]);
        }
        return t2;
      };
    }, function(e, t, r) {
      "use strict";
      function n(e2) {
        e2 = e2 || {}, this.ms = e2.min || 100, this.max = e2.max || 1e4, this.factor = e2.factor || 2, this.jitter = e2.jitter > 0 && e2.jitter <= 1 ? e2.jitter : 0, this.attempts = 0;
      }
      e.exports = n, n.prototype.duration = function() {
        var e2 = this.ms * Math.pow(this.factor, this.attempts++);
        if (this.jitter) {
          var t2 = Math.random(), r2 = Math.floor(t2 * this.jitter * e2);
          e2 = (1 & Math.floor(10 * t2)) == 0 ? e2 - r2 : e2 + r2;
        }
        return 0 | Math.min(e2, this.max);
      }, n.prototype.reset = function() {
        this.attempts = 0;
      }, n.prototype.setMin = function(e2) {
        this.ms = e2;
      }, n.prototype.setMax = function(e2) {
        this.max = e2;
      }, n.prototype.setJitter = function(e2) {
        this.jitter = e2;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = r(208), e.exports.source = r(208), e.exports.sink = r(368), e.exports.transform = r(988), e.exports.duplex = r(369);
    }, function(e, t, r) {
      "use strict";
      const n = r(369);
      e.exports = (e2) => async function* (t2) {
        const r2 = n(e2);
        r2.sink(t2).catch((e3) => {
        }), yield* r2.source;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = r(990);
    }, function(e, t, r) {
      "use strict";
      const n = r(25), i = r(92), s = r(1)("libp2p:mplex"), o = r(45), a = r(991), c = r(372), {MessageTypes: u, MessageTypeNames: h} = r(373), f = r(997);
      class d {
        constructor(e2) {
          e2 = typeof (e2 = e2 || {}) == "function" ? {onStream: e2} : e2, this._streamId = 0, this._streams = {initiators: new Map(), receivers: new Map()}, this._options = e2, this.sink = this._createSink(), this.source = this._createSource(), this.onStream = e2.onStream, this.onStreamEnd = e2.onStreamEnd;
        }
        get streams() {
          const e2 = [];
          return this._streams.initiators.forEach((t2) => {
            e2.push(t2);
          }), this._streams.receivers.forEach((t2) => {
            e2.push(t2);
          }), e2;
        }
        newStream(e2) {
          const t2 = this._streamId++;
          e2 = e2 == null ? t2.toString() : String(e2);
          const r2 = this._streams.initiators;
          return this._newStream({id: t2, name: e2, type: "initiator", registry: r2});
        }
        _newReceiverStream({id: e2, name: t2}) {
          const r2 = this._streams.receivers;
          return this._newStream({id: e2, name: t2, type: "receiver", registry: r2});
        }
        _newStream({id: e2, name: t2, type: r2, registry: n2}) {
          if (n2.has(e2))
            throw new Error(`${r2} stream ${e2} already exists!`);
          s("new %s stream %s %s", r2, e2, t2);
          const i2 = f({id: e2, name: t2, send: (n3) => (s.enabled && s("%s stream %s %s send", r2, e2, t2, {...n3, type: h[n3.type], data: n3.data && n3.data.slice()}), this.source.push(n3)), type: r2, onEnd: () => {
            s("%s stream %s %s ended", r2, e2, t2), n2.delete(e2), this.onStreamEnd && this.onStreamEnd(i2);
          }, maxMsgSize: this._options.maxMsgSize});
          return n2.set(e2, i2), i2;
        }
        _createSink() {
          return async (e2) => {
            this._options.signal && (e2 = o(e2, this._options.signal));
            try {
              await n(e2, a.decode, c(this._options.maxMsgSize), async (e3) => {
                for await (const t2 of e3)
                  for (const e4 of t2)
                    this._handleIncoming(e4);
              });
            } catch (t2) {
              return s("error in sink", t2), this.source.end(t2);
            }
            this.source.end();
          };
        }
        _createSource() {
          const e2 = i({onEnd: (e3) => {
            const {initiators: t2, receivers: r2} = this._streams;
            for (const n2 of t2.values())
              n2.abort(e3);
            for (const n2 of r2.values())
              n2.abort(e3);
          }, writev: true});
          return Object.assign(a.encode(e2), {push: e2.push, end: e2.end, return: e2.return});
        }
        _handleIncoming({id: e2, type: t2, data: r2}) {
          if (s.enabled && s("incoming message", {id: e2, type: h[t2], data: r2.slice()}), t2 === u.NEW_STREAM && this.onStream) {
            const t3 = this._newReceiverStream({id: e2, name: r2.toString()});
            return this.onStream(t3);
          }
          const n2 = (1 & t2 ? this._streams.initiators : this._streams.receivers).get(e2);
          if (!n2)
            return s("missing stream %s", e2);
          switch (t2) {
            case u.MESSAGE_INITIATOR:
            case u.MESSAGE_RECEIVER:
              n2.source.push(r2);
              break;
            case u.CLOSE_INITIATOR:
            case u.CLOSE_RECEIVER:
              n2.close();
              break;
            case u.RESET_INITIATOR:
            case u.RESET_RECEIVER:
              n2.reset();
              break;
            default:
              s("unknown message type %s", t2);
          }
        }
      }
      d.multicodec = "/mplex/6.7.0", e.exports = d;
    }, function(e, t, r) {
      "use strict";
      t.encode = r(992), t.decode = r(996);
    }, function(e, t, r) {
      "use strict";
      const n = r(371), i = r(33);
      const s = new class {
        constructor() {
          this._pool = new Uint8Array(10240), this._poolOffset = 0;
        }
        write(e2) {
          const t2 = this._pool;
          let r2 = this._poolOffset;
          n.encode(e2.id << 3 | e2.type, t2, r2), r2 += n.encode.bytes, n.encode(e2.data ? e2.data.length : 0, t2, r2), r2 += n.encode.bytes;
          const i2 = t2.subarray(this._poolOffset, r2);
          return 10240 - r2 < 100 ? (this._pool = new Uint8Array(10240), this._poolOffset = 0) : this._poolOffset = r2, e2.data ? [i2, e2.data] : i2;
        }
      }();
      e.exports = (e2) => async function* () {
        for await (const t2 of e2)
          Array.isArray(t2) ? yield new i(t2.map((e3) => s.write(e3))) : yield new i(s.write(t2));
      }();
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2, i) {
        r2 = r2 || [];
        var s = i = i || 0;
        for (; t2 >= n; )
          r2[i++] = 255 & t2 | 128, t2 /= 128;
        for (; -128 & t2; )
          r2[i++] = 255 & t2 | 128, t2 >>>= 7;
        return r2[i] = 0 | t2, e2.bytes = i - s + 1, r2;
      };
      var n = Math.pow(2, 31);
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2) {
        var n, i = 0, s = 0, o = r2 = r2 || 0, a = t2.length;
        do {
          if (o >= a)
            throw e2.bytes = 0, new RangeError("Could not decode varint");
          n = t2[o++], i += s < 28 ? (127 & n) << s : (127 & n) * Math.pow(2, s), s += 7;
        } while (n >= 128);
        return e2.bytes = o - r2, i;
      };
    }, function(e, t, r) {
      "use strict";
      var n = Math.pow(2, 7), i = Math.pow(2, 14), s = Math.pow(2, 21), o = Math.pow(2, 28), a = Math.pow(2, 35), c = Math.pow(2, 42), u = Math.pow(2, 49), h = Math.pow(2, 56), f = Math.pow(2, 63);
      e.exports = function(e2) {
        return e2 < n ? 1 : e2 < i ? 2 : e2 < s ? 3 : e2 < o ? 4 : e2 < a ? 5 : e2 < c ? 6 : e2 < u ? 7 : e2 < h ? 8 : e2 < f ? 9 : 10;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(371), i = r(33);
      e.exports = (e2) => async function* () {
        const t2 = new s();
        for await (const r2 of e2) {
          const e3 = t2.write(r2);
          e3.length && (yield e3);
        }
      }();
      class s {
        constructor() {
          this._buffer = new i(), this._bufferProxy = new Proxy({}, {get: (e2, t2) => t2[0] === "l" ? this._buffer[t2] : this._buffer.get(parseInt(t2))}), this._headerInfo = null;
        }
        write(e2) {
          if (!e2 || !e2.length)
            return [];
          this._buffer.append(e2);
          const t2 = [];
          for (; ; ) {
            if (!this._headerInfo)
              try {
                this._headerInfo = this._decodeHeader(this._bufferProxy);
              } catch (r2) {
                break;
              }
            const {id: e3, type: n2, length: i2, offset: s3} = this._headerInfo;
            if (this._buffer.length - s3 < i2)
              break;
            t2.push({id: e3, type: n2, data: this._buffer.shallowSlice(s3, s3 + i2)}), this._buffer.consume(s3 + i2), this._headerInfo = null;
          }
          return t2;
        }
        _decodeHeader(e2) {
          const t2 = n.decode(e2);
          let r2 = n.decode.bytes;
          const i2 = n.decode(e2, r2);
          return r2 += n.decode.bytes, {id: t2 >> 3, type: 7 & t2, offset: r2, length: i2};
        }
      }
    }, function(e, t, r) {
      "use strict";
      const n = r(45), i = r(47), s = r(1)("libp2p:mplex:stream"), o = r(92), a = r(33), c = r(0), {MAX_MSG_SIZE: u} = r(372), {InitiatorMessageTypes: h, ReceiverMessageTypes: f} = r(373);
      e.exports = ({id: e2, name: t2, send: r2, onEnd: d = () => {
      }, type: l = "initiator", maxMsgSize: p = u}) => {
        const y = new i(), g = new i(), b = l === "initiator" ? h : f, m = l === "initiator" ? "i" + e2 : "r" + e2;
        t2 = String(t2 == null ? e2 : t2);
        let v, w = false, _ = false;
        const E = (e3) => {
          _ || (_ = true, s("%s stream %s sink end", l, t2, e3), e3 && !v && (v = e3), w && (S.timeline.close = Date.now(), d(v)));
        }, S = {close: () => S.source.end(), abort: (e3) => {
          s("%s stream %s abort", l, t2, e3), S.source.end(e3), y.abort(), E(e3);
        }, reset: () => {
          const e3 = c(new Error("stream reset"), "ERR_MPLEX_STREAM_RESET");
          g.abort(), S.source.end(e3), E(e3);
        }, sink: async (i2) => {
          i2 = n(i2, [{signal: y.signal, options: {abortMessage: "stream aborted", abortCode: "ERR_MPLEX_STREAM_ABORT"}}, {signal: g.signal, options: {abortMessage: "stream reset", abortCode: "ERR_MPLEX_STREAM_RESET"}}]), l === "initiator" && r2({id: e2, type: b.NEW_STREAM, data: t2});
          try {
            for await (let t3 of i2)
              for (; t3.length; ) {
                if (t3.length <= p) {
                  r2({id: e2, type: b.MESSAGE, data: t3});
                  break;
                }
                t3 = a.isBufferList(t3) ? t3 : new a(t3), r2({id: e2, type: b.MESSAGE, data: t3.shallowSlice(0, p)}), t3.consume(p);
              }
          } catch (o2) {
            return o2.code === "ERR_MPLEX_STREAM_RESET" ? s("%s stream %s reset", l, t2) : (s("%s stream %s error", l, t2, o2), r2({id: e2, type: b.RESET})), S.source.end(o2), E(o2);
          }
          r2({id: e2, type: b.CLOSE}), E();
        }, source: o((e3) => {
          w || (w = true, s("%s stream %s source end", l, t2, e3), e3 && !v && (v = e3), _ && (S.timeline.close = Date.now(), d(v)));
        }), timeline: {open: Date.now(), close: null}, id: m};
        return S;
      };
    }, function(e, t, r) {
      "use strict";
      var n = Object.create ? function(e2, t2, r2, n2) {
        n2 === void 0 && (n2 = r2), Object.defineProperty(e2, n2, {enumerable: true, get: function() {
          return t2[r2];
        }});
      } : function(e2, t2, r2, n2) {
        n2 === void 0 && (n2 = r2), e2[n2] = t2[r2];
      }, i = function(e2, t2) {
        for (var r2 in e2)
          r2 === "default" || t2.hasOwnProperty(r2) || n(t2, e2, r2);
      };
      Object.defineProperty(t, "__esModule", {value: true}), t.NOISE = void 0;
      const s = r(374);
      i(r(374), t), t.NOISE = new s.Noise();
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const n = r(42), i = r(1e3), s = r(1003), {padRight: o} = r(1005);
        e.exports = class {
          constructor(e2, t3, r2) {
            n(typeof e2 == "string"), n(!t3 || typeof t3 == "string"), this.id = e2, this.type = "ecdh", this.eid = t3 || null, this._pre = r2 || null, this._curve = null, this._edwards = null, this.native = 0;
          }
          get curve() {
            return this._curve || (this._curve = i.curve(this.id)), this._curve;
          }
          get edwards() {
            return this.eid && !this._edwards && (this._edwards = i.curve(this.eid, this._pre), this._edwards.precompute(s), this._pre = null), this._edwards;
          }
          get size() {
            return this.curve.fieldSize;
          }
          get bits() {
            return this.curve.fieldBits;
          }
          privateKeyGenerate() {
            const e2 = s.randomBytes(this.curve.scalarSize);
            return this.curve.clamp(e2);
          }
          privateKeyVerify(e2) {
            return n(t2.isBuffer(e2)), e2.length === this.curve.scalarSize;
          }
          privateKeyExport(e2, r2) {
            const n2 = this.publicKeyCreate(e2), {x: i2, y: s2} = this.publicKeyExport(n2, r2);
            return {d: t2.from(e2), x: i2, y: s2};
          }
          privateKeyImport(e2) {
            return n(e2 && typeof e2 == "object"), o(e2.d, this.curve.scalarSize);
          }
          publicKeyCreate(e2) {
            const t3 = this.curve.decodeClamped(e2);
            if (this.edwards && this.edwards.g.pre) {
              const e3 = this.edwards.g.mulBlind(t3);
              return this.curve.pointFromEdwards(e3).encode();
            }
            return this.curve.g.toX().mulBlind(t3, s).encode();
          }
          publicKeyConvert(e2, t3) {
            if (n(t3 == null || typeof t3 == "boolean"), !this.edwards)
              throw new Error("No equivalent edwards curve.");
            const r2 = this.curve.decodePoint(e2), i2 = this.edwards.pointFromMont(r2);
            return t3 != null && i2.isOdd() !== t3 ? i2.neg().encode() : i2.encode();
          }
          publicKeyFromUniform(e2) {
            const t3 = this.curve.decodeUniform(e2);
            return this.curve.pointFromUniform(t3).encode();
          }
          publicKeyToUniform(e2, t3 = s.randomInt()) {
            const r2 = this.curve.decodePoint(e2), n2 = this.curve.pointToUniform(r2, t3);
            return this.curve.encodeUniform(n2, t3 >>> 8);
          }
          publicKeyFromHash(e2, t3 = false) {
            return this.curve.pointFromHash(e2, t3).encode();
          }
          publicKeyToHash(e2, t3 = s.randomInt()) {
            const r2 = this.curve.decodePoint(e2);
            return this.curve.pointToHash(r2, t3, s);
          }
          publicKeyVerify(e2) {
            let r2;
            n(t2.isBuffer(e2));
            try {
              r2 = this.curve.decodeX(e2);
            } catch (i2) {
              return false;
            }
            return r2.validate();
          }
          publicKeyIsSmall(e2) {
            let r2;
            n(t2.isBuffer(e2));
            try {
              r2 = this.curve.decodeX(e2);
            } catch (i2) {
              return false;
            }
            return !!r2.validate() && r2.isSmall();
          }
          publicKeyHasTorsion(e2) {
            let r2;
            n(t2.isBuffer(e2));
            try {
              r2 = this.curve.decodeX(e2);
            } catch (i2) {
              return false;
            }
            return !!r2.validate() && r2.hasTorsion();
          }
          publicKeyExport(e2, t3) {
            const {x: r2, y: n2} = this.curve.decodePoint(e2, t3);
            return {x: this.curve.encodeField(r2.fromRed()), y: this.curve.encodeField(n2.fromRed())};
          }
          publicKeyImport(e2) {
            n(e2 && typeof e2 == "object");
            const t3 = o(e2.x, this.curve.fieldSize), r2 = this.curve.decodeX(t3);
            if (!r2.validate())
              throw new Error("Invalid point.");
            return r2.encode();
          }
          derive(e2, t3) {
            const r2 = this.curve.decodeX(e2), n2 = this.curve.decodeClamped(t3);
            return r2.mulConst(n2, s).encode();
          }
        };
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      (function(e2) {
        const {custom: n} = r(375), i = r(1001), s = 0, o = 1, a = 2, c = 3, u = [-3, -1, -5, -7, 0, 7, 5, 1, 3];
        let h = 0;
        class f {
          constructor(e3, t2, r2) {
            this.Point = null, this.id = null, this.uid = h++, this.ossl = null, this.type = "base", this.endian = "be", this.hash = null, this.prefix = null, this.context = false, this.prime = null, this.p = null, this.red = null, this.fieldSize = 0, this.fieldBits = 0, this.adjustedSize = 0, this.signBit = 0, this.mask = 0, this.n = null, this.h = null, this.q = null, this.z = null, this.g = null, this.nh = null, this.scalarSize = 0, this.scalarBits = 0, this.zero = null, this.one = null, this.two = null, this.three = null, this.four = null, this.i2 = null, this.i3 = null, this.i4 = null, this.i6 = null, this.torsion = null, this.endo = null, this.hi = null, this._init(e3, t2, r2);
          }
          _init(t2, r2, n2) {
            N(typeof t2 == "function"), N(typeof r2 == "string"), N(n2 && typeof n2 == "object"), N(n2.red == null || n2.red instanceof i.Red), N(n2.p != null, "Must pass a prime."), N(n2.id == null || typeof n2.id == "string"), N(n2.ossl == null || typeof n2.ossl == "string"), N(n2.endian == null || typeof n2.endian == "string"), N(n2.hash == null || typeof n2.hash == "string"), N(n2.prefix == null || typeof n2.prefix == "string"), N(n2.context == null || typeof n2.context == "boolean"), N(n2.prime == null || typeof n2.prime == "string"), N(n2.torsion == null || Array.isArray(n2.torsion)), this.Point = t2, this.id = n2.id || null, this.ossl = n2.ossl || null, this.type = r2, this.endian = n2.endian || (r2 === "short" ? "be" : "le"), this.hash = n2.hash || null, this.prefix = n2.prefix ? e2.from(n2.prefix, "binary") : null, this.context = n2.context || false, this.prime = n2.prime || null, this.p = i.fromJSON(n2.p), n2.red ? this.red = n2.red : (this.red = n2.prime ? i.red(n2.prime) : i.mont(this.p), this.red.precompute()), this.fieldSize = this.p.byteLength(), this.fieldBits = this.p.bitLength(), this.adjustedSize = this.fieldSize + ((7 & this.fieldBits) == 0), this.signBit = 8 * this.adjustedSize - 1, this.mask = 255, (7 & this.fieldBits) != 0 && (this.mask = (1 << (7 & this.fieldBits)) - 1), this.n = i.fromJSON(n2.n || "0"), this.h = i.fromJSON(n2.h || "1"), this.q = this.n.mul(this.h), this.z = i.fromJSON(n2.z || "0").toRed(this.red), this.g = null, this.nh = this.n.ushrn(1), this.scalarSize = this.n.byteLength(), this.scalarBits = this.n.bitLength(), this.zero = new i(0).toRed(this.red), this.one = new i(1).toRed(this.red), this.two = new i(2).toRed(this.red), this.three = new i(3).toRed(this.red), this.four = new i(4).toRed(this.red), this.i2 = this.two.redInvert(), this.i3 = this.three.redInvert(), this.i4 = this.i2.redSqr(), this.i6 = this.i2.redMul(this.i3), this.torsion = new Array(this.h.word(0));
            for (let e3 = 0; e3 < this.torsion.length; e3++)
              this.torsion[e3] = this.point();
            return this.endo = null, this.hi = null, this._scale = U(this._scale, this), this.isIsomorphic = U(this.isIsomorphic, this), this.isIsogenous = U(this.isIsogenous, this), N(this.p.sign() > 0 && this.p.isOdd()), N(this.n.sign() >= 0), N(this.h.sign() > 0 && this.h.cmpn(255) <= 0), N(this.endian === "be" || this.endian === "le"), this;
          }
          _finalize(e3) {
            if (N(e3 && typeof e3 == "object"), this.g = e3.g ? this.pointFromJSON(e3.g) : this.point(), e3.torsion) {
              N(e3.torsion.length === this.torsion.length);
              for (let t2 = 0; t2 < this.torsion.length; t2++)
                this.torsion[t2] = this.pointFromJSON(e3.torsion[t2]);
            }
            return this;
          }
          _findTorsion() {
            N(!this.n.isZero());
            const e3 = this.h.word(0), t2 = this.one.redNeg(), r2 = [this.point()], n2 = new Set();
            let i2 = e3;
            for (; r2.length < i2; ) {
              let e4;
              t2.redIAdd(this.one);
              try {
                e4 = this.pointFromX(t2.clone());
              } catch (s2) {
                continue;
              }
              try {
                e4 = e4.mul(this.n);
              } catch (s2) {
                i2 = 2;
                continue;
              }
              if (!e4.isInfinity()) {
                e4.normalize();
                for (const t3 of [e4, e4.neg()]) {
                  const e5 = t3.key();
                  n2.has(e5) || (r2.push(t3), n2.add(e5));
                }
              }
            }
            for (r2.sort((e4, t3) => e4.cmp(t3)); r2.length < e3; )
              r2.push(this.point());
            return r2;
          }
          _simpleMul(e3, t2) {
            N(e3 instanceof d), N(t2 instanceof i), N(!t2.red);
            const r2 = t2.bitLength();
            t2.isNeg() && (e3 = e3.neg());
            let n2 = this.jpoint();
            for (let i2 = r2 - 1; i2 >= 0; i2--) {
              const r3 = t2.bit(i2);
              n2 = n2.dbl(), r3 === 1 && (n2 = n2.add(e3));
            }
            return n2;
          }
          _simpleMulAdd(e3, t2) {
            N(Array.isArray(e3)), N(Array.isArray(t2)), N(e3.length === t2.length);
            const r2 = e3.length, n2 = new Array(r2), s2 = t2;
            let o2 = 0;
            for (let c2 = 0; c2 < r2; c2++) {
              const r3 = e3[c2], s3 = t2[c2];
              if (N(r3 instanceof d), N(s3 instanceof i), N(!s3.red), c2 > 0 && r3.type !== e3[c2 - 1].type)
                throw new Error("Cannot mix points.");
              n2[c2] = s3.isNeg() ? r3.neg() : r3, o2 = Math.max(o2, s3.bitLength());
            }
            let a2 = this.jpoint();
            for (let i2 = o2 - 1; i2 >= 0; i2--) {
              a2 = a2.dbl();
              for (let e4 = 0; e4 < r2; e4++) {
                const t3 = n2[e4];
                s2[e4].bit(i2) === 1 && (a2 = a2.add(t3));
              }
            }
            return a2;
          }
          _constMul(e3, t2, r2) {
            return N(e3 instanceof d), this.n.isZero() ? this._simpleMul(e3, t2) : this.type === "short" && this.h.cmpn(1) === 0 ? this._coZLadderMul(e3, t2) : this._ladderMul(e3, t2);
          }
          _ladderMul(e3, t2) {
            N(e3 instanceof d), N(t2 instanceof i), N(!t2.red);
            const [r2, n2, s2] = function(e4, t3) {
              N(e4 instanceof i), N(t3 instanceof i);
              const r3 = e4.abs().add(t3), n3 = r3.add(t3), s3 = r3.bitLength(), o3 = t3.bitLength();
              r3.cinject(n3, s3 - o3 - 1 >>> 31);
              const a3 = 1 & e4.isNeg(), c3 = r3.bitLength(), u2 = r3.toArray("le");
              return [a3, c3, u2];
            }(t2, this.q);
            let o2 = e3.toJ().clone(), a2 = this.jpoint().clone(), c2 = 0;
            for (let i2 = n2 - 1; i2 >= 0; i2--) {
              const e4 = s2[i2 >> 3] >> (7 & i2) & 1;
              o2.swap(a2, c2 ^ e4), o2 = o2.uadd(a2), a2 = a2.udbl(), c2 = e4;
            }
            return o2.swap(a2, c2), a2.swap(a2.neg(), r2), a2;
          }
          _coZLadderMul(e3, t2) {
            N(e3 instanceof d), N(t2 instanceof i), N(!t2.red);
            const r2 = e3.toJ().clone(), [n2, s2, o2, a2] = function(e4, t3) {
              N(e4 instanceof i), N(t3 instanceof i);
              const r3 = e4.mod(t3), n3 = t3.sub(r3), s3 = r3.bitLength(), o3 = n3.bitLength(), a3 = s3 - o3 >>> 31;
              r3.cinject(n3, a3);
              const c3 = r3.bitLength(), u3 = r3.toArray("le"), h3 = r3.ceq(t3.subn(1));
              return [a3, c3, u3, h3];
            }(t2, this.n);
            let [c2, u2] = r2.zdblu(), h2 = 0;
            for (let i2 = s2 - 2; i2 >= 0; i2--) {
              const e4 = o2[i2 >> 3] >> (7 & i2) & 1;
              c2.swap(u2, h2 ^ e4), [c2, u2] = u2.zaddc(c2), [u2, c2] = c2.zaddu(u2), h2 = e4;
            }
            return c2.swap(u2, h2), u2.swap(r2.neg(), a2), u2.swap(u2.neg(), n2), u2;
          }
          _fixedMul(e3, t2) {
            N(e3 instanceof d), N(t2 instanceof i), N(e3.pre && e3.pre.windows);
            const {width: r2, bits: n2, points: s2} = e3._getWindows(0, 0), o2 = 1 << r2, a2 = (n2 + r2 - 1) / r2 >>> 0;
            let c2 = this.jpoint();
            for (let i2 = 0; i2 < a2; i2++) {
              const e4 = t2.bits(i2 * r2, r2);
              c2 = c2.add(s2[i2 * o2 + e4]);
            }
            return t2.isNeg() && (c2 = c2.neg()), c2;
          }
          _fixedNafMul(e3, t2) {
            N(e3 instanceof d), N(t2 instanceof i), N(e3.pre && e3.pre.doubles);
            const {step: r2, points: n2} = e3._getDoubles(0, 0), s2 = function(e4, t3, r3, n3) {
              N(n3 >>> 0 === n3);
              const i2 = M(e4, t3, r3), s3 = Math.ceil(i2.length / n3), o3 = new Array(s3);
              let a3 = 0;
              for (let c3 = 0; c3 < i2.length; c3 += n3) {
                let e5 = 0;
                for (let t4 = c3 + n3 - 1; t4 >= c3; t4--)
                  e5 = (e5 << 1) + i2[t4];
                o3[a3++] = e5;
              }
              return N(a3 === s3), o3;
            }(t2, 2, t2.bitLength() + 1, r2), o2 = ((1 << r2 + 1) - (r2 % 2 == 0 ? 2 : 1)) / 3;
            let a2 = this.jpoint(), c2 = this.jpoint();
            for (let i2 = o2; i2 > 0; i2--) {
              for (let e4 = 0; e4 < s2.length; e4++) {
                const t3 = s2[e4];
                t3 === i2 ? c2 = c2.add(n2[e4]) : t3 === -i2 && (c2 = c2.sub(n2[e4]));
              }
              a2 = a2.add(c2);
            }
            return a2;
          }
          _windowMul(e3, t2, r2) {
            N(e3 >>> 0 === e3), N(t2 instanceof d), N(r2 instanceof i);
            const n2 = 1 << e3, s2 = (Math.max(r2.bitLength(), this.n.bitLength()) + e3 - 1) / e3 >>> 0, o2 = new Array(n2), a2 = t2.toJ();
            o2[0] = this.jpoint(), o2[1] = a2;
            for (let i2 = 2; i2 < n2; i2 += 2)
              o2[i2 + 0] = o2[i2 >> 1].dbl(), o2[i2 + 1] = o2[i2].add(a2);
            let c2 = this.jpoint();
            for (let i2 = s2 - 1; i2 >= 0; i2--) {
              const t3 = r2.bits(i2 * e3, e3);
              i2 === s2 - 1 ? c2 = o2[t3] : (c2 = c2.dblp(e3), c2 = c2.add(o2[t3]));
            }
            return r2.isNeg() && (c2 = c2.neg()), c2;
          }
          _slideMul(e3, t2, r2) {
            N(e3 >>> 0 === e3), N(t2 instanceof d), N(r2 instanceof i);
            const n2 = 1 << e3 - 1, s2 = new Array(n2), o2 = t2.toJ();
            s2[0] = o2.dblp(e3 - 1);
            for (let i2 = 1; i2 < n2; i2++)
              s2[i2] = s2[i2 - 1].add(o2);
            let a2 = r2.bitLength(), c2 = this.jpoint();
            for (; a2 >= e3; ) {
              const t3 = a2 - e3, i2 = r2.bits(t3, e3);
              i2 < n2 ? (c2 = c2.dbl(), a2 -= 1) : (c2 = c2.dblp(e3), c2 = c2.add(s2[i2 & ~n2]), a2 = t3);
            }
            if (a2 > 0) {
              const e4 = r2.bits(0, a2);
              for (; a2--; )
                c2 = c2.dbl(), e4 >> a2 & 1 && (c2 = c2.add(t2));
            }
            return r2.isNeg() && (c2 = c2.neg()), c2;
          }
          _wnafMul(e3, t2, r2) {
            N(t2 instanceof d), N(r2 instanceof i);
            const {width: n2, points: s2} = t2._safeNAF(e3), o2 = M(r2, n2, r2.bitLength() + 1);
            let a2 = this.jpoint();
            for (let i2 = o2.length - 1; i2 >= 0; i2--) {
              const e4 = o2[i2];
              i2 !== o2.length - 1 && (a2 = a2.dbl()), e4 > 0 ? a2 = a2.add(s2[e4 - 1 >> 1]) : e4 < 0 && (a2 = a2.sub(s2[-e4 - 1 >> 1]));
            }
            return a2;
          }
          _wnafMulAdd(e3, t2, r2) {
            N(e3 >>> 0 === e3), N(Array.isArray(t2)), N(Array.isArray(r2)), N(t2.length === r2.length);
            const n2 = t2.length, s2 = new Array(n2), o2 = new Array(n2);
            let a2 = 0;
            for (let l2 = 0; l2 < n2; l2++) {
              const e4 = t2[l2], n3 = r2[l2];
              if (N(e4 instanceof d), N(n3 instanceof i), l2 > 0 && e4.type !== t2[l2 - 1].type)
                throw new Error("Cannot mix points.");
              s2[l2] = null, o2[l2] = null, a2 = Math.max(a2, n3.bitLength() + 1);
            }
            let c2 = null, u2 = null, h2 = 0;
            for (let i2 = 0; i2 < n2; i2++) {
              const e4 = t2[i2], n3 = r2[i2], f3 = e4._getNAF(0);
              f3 ? (s2[h2] = f3.points, o2[h2] = M(n3, f3.width, a2), h2 += 1) : c2 ? (s2[h2] = c2._getJNAF(e4), o2[h2] = x(u2, n3, a2), c2 = null, u2 = null, h2 += 1) : (c2 = e4, u2 = n3);
            }
            if (c2) {
              const t3 = c2._safeNAF(e3);
              s2[h2] = t3.points, o2[h2] = M(u2, t3.width, a2), h2 += 1;
            }
            let f2 = this.jpoint();
            for (let i2 = a2 - 1; i2 >= 0; i2--) {
              i2 !== a2 - 1 && (f2 = f2.dbl());
              for (let e4 = 0; e4 < h2; e4++) {
                const t3 = o2[e4][i2];
                t3 > 0 ? f2 = f2.add(s2[e4][t3 - 1 >> 1]) : t3 < 0 && (f2 = f2.sub(s2[e4][-t3 - 1 >> 1]));
              }
            }
            return f2;
          }
          _endoWnafMulAdd(e3, t2) {
            throw new Error("Not implemented.");
          }
          _scale(e3, t2) {
            switch (N(e3 instanceof f), N(e3.p.eq(this.p)), e3.type) {
              case "short":
                return this._scaleShort(e3, t2);
              case "mont":
                return this._scaleMont(e3, t2);
              case "edwards":
                return this._scaleEdwards(e3, t2);
              default:
                throw new Error("Not implemented.");
            }
          }
          _scaleShort(e3, t2) {
            throw new Error("Not implemented.");
          }
          _scaleMont(e3, t2) {
            throw new Error("Not implemented.");
          }
          _scaleEdwards(e3, t2) {
            throw new Error("Not implemented.");
          }
          isElliptic() {
            throw new Error("Not implemented.");
          }
          jinv() {
            throw new Error("Not implemented.");
          }
          isComplete() {
            return false;
          }
          precompute(e3) {
            return N(!this.g.isInfinity(), "Must have base point."), N(!this.n.isZero(), "Must have order."), this.g.precompute(this.n.bitLength(), e3), this;
          }
          scalar(e3, t2, r2) {
            const n2 = new i(e3, t2, r2);
            return N(!n2.red), this.n.isZero() ? n2 : n2.imod(this.n);
          }
          field(e3, t2, r2) {
            const n2 = i.cast(e3, t2, r2);
            return n2.red ? n2.forceRed(this.red) : n2.toRed(this.red);
          }
          point(e3, t2) {
            throw new Error("Not implemented.");
          }
          jpoint(e3, t2, r2) {
            throw new Error("Not implemented.");
          }
          xpoint(e3, t2) {
            throw new Error("Not implemented.");
          }
          cpoint(e3, t2, r2, n2) {
            if (N(e3 instanceof i), N(t2 instanceof i), N(r2 instanceof i), N(n2 instanceof i), t2.isZero() || n2.isZero())
              return this.point();
            const s2 = t2.redMul(n2).redInvert(), o2 = e3.redMul(n2).redMul(s2), a2 = r2.redMul(t2).redMul(s2);
            return this.point(o2, a2);
          }
          solveX2(e3) {
            throw new Error("Not implemented.");
          }
          solveX(e3) {
            return this.solveX2(e3).redSqrt();
          }
          solveY2(e3) {
            throw new Error("Not implemented.");
          }
          solveY(e3) {
            return this.solveY2(e3).redSqrt();
          }
          validate(e3) {
            throw new Error("Not implemented.");
          }
          pointFromX(e3, t2) {
            throw new Error("Not implemented.");
          }
          pointFromY(e3, t2) {
            throw new Error("Not implemented.");
          }
          isIsomorphic(e3) {
            throw new Error("Not implemented.");
          }
          isIsogenous(e3) {
            throw new Error("Not implemented.");
          }
          pointFromShort(e3) {
            throw new Error("Not implemented.");
          }
          pointFromMont(e3, t2) {
            throw new Error("Not implemented.");
          }
          pointFromEdwards(e3) {
            throw new Error("Not implemented.");
          }
          pointFromUniform(e3) {
            throw new Error("Not implemented.");
          }
          pointToUniform(e3) {
            throw new Error("Not implemented.");
          }
          pointFromHash(t2, r2 = false) {
            if (N(e2.isBuffer(t2)), N(typeof r2 == "boolean"), t2.length !== 2 * this.fieldSize)
              throw new Error("Invalid hash size.");
            const n2 = t2.slice(0, this.fieldSize), i2 = t2.slice(this.fieldSize), s2 = this.decodeUniform(n2), o2 = this.decodeUniform(i2), a2 = this.pointFromUniform(s2), c2 = this.pointFromUniform(o2), u2 = a2.uadd(c2);
            return r2 ? u2.mulH() : u2;
          }
          pointToHash(t2, r2, n2) {
            N(t2 instanceof this.Point), N(r2 >>> 0 === r2);
            const i2 = r2 % this.torsion.length, s2 = t2.add(this.torsion[i2]);
            for (; ; ) {
              const t3 = this.randomField(n2), r3 = this.pointFromUniform(t3);
              if (r3.neg().eq(r3))
                continue;
              const i3 = s2.usub(r3), a2 = L(n2);
              let c2;
              try {
                c2 = this.pointToUniform(i3, 15 & a2);
              } catch (o2) {
                if (o2.message === "Invalid point.")
                  continue;
                throw o2;
              }
              const u2 = this.encodeUniform(t3, a2 >>> 8), h2 = this.encodeUniform(c2, a2 >>> 16);
              return e2.concat([u2, h2]);
            }
          }
          randomScalar(e3) {
            const t2 = this.n.isZero() ? this.p : this.n;
            return i.random(e3, 1, t2);
          }
          randomField(e3) {
            return i.random(e3, 1, this.p).toRed(this.red);
          }
          randomPoint(e3) {
            let t2;
            for (; ; ) {
              const n2 = this.randomField(e3), i2 = (1 & L(e3)) != 0;
              try {
                t2 = this.pointFromX(n2, i2);
              } catch (r2) {
                continue;
              }
              return N(t2.validate()), t2.mulH();
            }
          }
          mulAll(e3, t2) {
            return this.jmulAll(e3, t2);
          }
          mulAllSimple(e3, t2) {
            return this.jmulAllSimple(e3, t2);
          }
          jmulAll(e3, t2) {
            return N(Array.isArray(e3)), N(e3.length === 0 || e3[0] instanceof d), this.endo && e3.length > 0 && e3[0].type === s ? this._endoWnafMulAdd(e3, t2) : this._wnafMulAdd(5, e3, t2);
          }
          jmulAllSimple(e3, t2) {
            return this._simpleMulAdd(e3, t2);
          }
          mulH(e3) {
            return N(e3 instanceof i), this.imulH(e3.clone());
          }
          imulH(e3) {
            N(e3 instanceof i), N(!e3.red);
            const t2 = this.h.word(0);
            if ((t2 & t2 - 1) == 0) {
              const t3 = this.h.bitLength();
              return e3.iushln(t3 - 1).imod(this.n);
            }
            return e3.imuln(t2).imod(this.n);
          }
          clamp(t2) {
            N(e2.isBuffer(t2)), N(t2.length === this.scalarSize), N(this.scalarSize <= this.fieldSize);
            let r2 = 7 & this.fieldBits || 8, n2 = 0, i2 = this.scalarSize - 1;
            return this.endian === "be" && ([n2, i2] = [i2, n2]), this.scalarSize < this.fieldSize && (r2 = 8), t2[n2] &= 255 & -this.h.word(0), t2[i2] &= (1 << r2) - 1, t2[i2] |= 1 << r2 - 1, t2;
          }
          splitHash(t2) {
            N(e2.isBuffer(t2)), N(t2.length === 2 * this.adjustedSize), N(this.scalarSize <= this.adjustedSize);
            let r2 = 0;
            this.endian === "be" && (r2 = this.adjustedSize - this.scalarSize);
            const n2 = t2.slice(r2, r2 + this.scalarSize), i2 = t2.slice(this.adjustedSize);
            return this.clamp(n2), [n2, i2];
          }
          encodeField(e3) {
            return N(e3 instanceof i), N(!e3.red), e3.encode(this.endian, this.fieldSize);
          }
          decodeField(t2) {
            if (N(e2.isBuffer(t2)), t2.length !== this.fieldSize)
              throw new Error("Invalid field element size.");
            return i.decode(t2, this.endian);
          }
          encodeAdjusted(e3) {
            return N(e3 instanceof i), N(!e3.red), e3.encode(this.endian, this.adjustedSize);
          }
          decodeAdjusted(t2) {
            if (N(e2.isBuffer(t2)), t2.length !== this.adjustedSize)
              throw new Error("Invalid field element size.");
            return i.decode(t2, this.endian);
          }
          encodeScalar(e3) {
            return N(e3 instanceof i), N(!e3.red), e3.encode(this.endian, this.scalarSize);
          }
          decodeScalar(t2) {
            if (N(e2.isBuffer(t2)), t2.length !== this.scalarSize)
              throw new Error("Invalid scalar size.");
            return i.decode(t2, this.endian);
          }
          encodeClamped(e3) {
            return this.clamp(this.encodeScalar(e3));
          }
          decodeClamped(t2) {
            if (N(e2.isBuffer(t2)), t2.length !== this.scalarSize)
              throw new Error("Invalid scalar size.");
            const r2 = this.clamp(e2.from(t2));
            return i.decode(r2, this.endian);
          }
          encodeUniform(e3, t2) {
            N(e3 instanceof i), N(t2 >>> 0 === t2);
            const r2 = this.endian === "le" ? this.fieldSize - 1 : 0, n2 = e3.fromRed().encode(this.endian, this.fieldSize);
            return n2[r2] |= t2 & ~this.mask & 255, n2;
          }
          decodeUniform(t2) {
            if (N(e2.isBuffer(t2)), t2.length !== this.fieldSize)
              throw new Error("Invalid field size.");
            const r2 = i.decode(t2, this.endian);
            return r2.iumaskn(this.fieldBits), r2.toRed(this.red);
          }
          encodePoint(e3, t2) {
            return N(e3 instanceof d), e3.encode(t2);
          }
          decodePoint(e3) {
            throw new Error("Not implemented.");
          }
          encodeX(e3) {
            throw new Error("Not implemented.");
          }
          decodeX(e3) {
            throw new Error("Not implemented.");
          }
          decodeEven(e3) {
            throw new Error("Not implemented.");
          }
          decodeSquare(e3) {
            throw new Error("Not implemented.");
          }
          toShort() {
            throw new Error("Not implemented.");
          }
          toMont(e3) {
            throw new Error("Not implemented.");
          }
          toEdwards(e3) {
            throw new Error("Not implemented.");
          }
          pointToJSON(e3, t2) {
            return N(e3 instanceof d), e3.toJSON(t2);
          }
          pointFromJSON(e3) {
            throw new Error("Not implemented.");
          }
          toJSON(e3) {
            let t2, r2, n2, i2, s2;
            return this.type === "edwards" && (t2 = this.prefix ? this.prefix.toString() : null, r2 = this.context), this.n.isZero() || (n2 = this.n.toJSON()), this.z.isZero() || (i2 = this.z.fromRed(), this.z.redIsHigh() && i2.isub(this.p), i2 = i2.toString(16)), this.endo && (s2 = this.endo.toJSON()), {id: this.id, ossl: this.ossl, type: this.type, endian: this.endian, hash: this.hash, prefix: t2, context: r2, prime: this.prime, p: this.p.toJSON(), a: void 0, b: void 0, d: void 0, n: n2, h: this.h.toString(16), s: void 0, z: i2, c: void 0, g: this.g.toJSON(e3), endo: s2};
          }
          static fromJSON(e3) {
            return new this(e3);
          }
        }
        class d {
          constructor(e3, t2) {
            N(e3 instanceof f), N(t2 >>> 0 === t2), this.curve = e3, this.type = t2, this.pre = null;
          }
          _init() {
            throw new Error("Not implemented.");
          }
          _getNAF(e3) {
            if (N(e3 >>> 0 === e3), this.pre && this.pre.naf)
              return this.pre.naf;
            if (e3 === 0)
              return null;
            const t2 = 1 << e3 - 2, r2 = new Array(t2), n2 = t2 === 1 ? null : this.dbl();
            r2[0] = this;
            for (let i2 = 1; i2 < t2; i2++)
              r2[i2] = r2[i2 - 1].add(n2);
            return new E(e3, r2);
          }
          _safeNAF(e3) {
            return this._getNAF(e3);
          }
          _getWindows(e3, t2) {
            if (N(e3 >>> 0 === e3), N(t2 >>> 0 === t2), this.pre && this.pre.windows)
              return this.pre.windows;
            if (e3 === 0)
              return null;
            const r2 = 1 << e3, n2 = (t2 + e3 - 1) / e3 >>> 0, i2 = new Array(n2 * r2);
            let s2 = this.toP();
            for (let o2 = 0; o2 < n2; o2++) {
              i2[o2 * r2] = this.curve.point();
              for (let e4 = 1; e4 < r2; e4++)
                i2[o2 * r2 + e4] = i2[o2 * r2 + e4 - 1].add(s2);
              s2 = s2.dblp(e3);
            }
            return new S(e3, t2, i2);
          }
          _getDoubles(e3, t2) {
            if (N(e3 >>> 0 === e3), N(t2 >>> 0 === t2), this.pre && this.pre.doubles)
              return this.pre.doubles;
            if (e3 === 0)
              return null;
            const r2 = Math.ceil(t2 / e3) + 1, n2 = new Array(r2);
            let i2 = this, s2 = 0;
            n2[s2++] = i2;
            for (let o2 = 0; o2 < t2; o2 += e3) {
              for (let t3 = 0; t3 < e3; t3++)
                i2 = i2.dbl();
              n2[s2++] = i2;
            }
            return N(s2 === r2), new A(e3, n2);
          }
          _getBeta() {
            return null;
          }
          _getBlinding(e3) {
            if (this.pre && this.pre.blinding)
              return this.pre.blinding;
            if (!e3)
              return null;
            if (this.curve.n.isZero())
              return null;
            const t2 = this.curve.randomScalar(e3), r2 = this.mul(t2);
            return new I(t2, r2);
          }
          _hasWindows(e3) {
            if (N(e3 instanceof i), !this.pre || !this.pre.windows)
              return false;
            const {bits: t2} = this.pre.windows;
            return t2 >= e3.bitLength();
          }
          _hasDoubles(e3) {
            if (N(e3 instanceof i), !this.pre || !this.pre.doubles)
              return false;
            const {step: t2, points: r2} = this.pre.doubles, n2 = e3.bitLength() + 1;
            return r2.length >= Math.ceil(n2 / t2) + 1;
          }
          _getJNAF(e3) {
            return N(e3 instanceof d), N(e3.type === this.type), [this, this.add(e3), this.sub(e3), e3];
          }
          _blind(e3, t2) {
            if (N(e3 instanceof i), N(!e3.red), this.pre && this.pre.blinding) {
              const {blind: t3, unblind: r2} = this.pre.blinding;
              return [this, e3.sub(t3), r2];
            }
            if (!t2)
              return [this, e3, null];
            if (this.pre) {
              if (this.curve.n.isZero())
                return [this, e3, null];
              return [this, this.curve.randomScalar(t2).mul(this.curve.n).iadd(e3), null];
            }
            return [this.randomize(t2), e3, null];
          }
          clone() {
            throw new Error("Not implemented.");
          }
          swap(e3, t2) {
            throw new Error("Not implemented.");
          }
          precompute(e3, t2) {
            return N(e3 >>> 0 === e3), this.pre || (this.pre = new _()), this.pre.naf || (this.pre.naf = this._getNAF(9)), this.pre.doubles || (this.pre.doubles = this._getDoubles(4, e3 + 1)), this.pre.beta || (this.pre.beta = this._getBeta()), this.pre.blinding || (this.pre.blinding = this._getBlinding(t2)), this;
          }
          validate() {
            return this.curve.validate(this);
          }
          normalize() {
            return this;
          }
          scale(e3) {
            throw new Error("Not implemented.");
          }
          randomize(e3) {
            const t2 = this.curve.randomField(e3);
            return this.scale(t2);
          }
          neg() {
            throw new Error("Not implemented.");
          }
          add(e3) {
            throw new Error("Not implemented.");
          }
          sub(e3) {
            return N(e3 instanceof d), this.add(e3.neg());
          }
          dbl() {
            throw new Error("Not implemented.");
          }
          dblp(e3) {
            N(e3 >>> 0 === e3);
            let t2 = this;
            for (let r2 = 0; r2 < e3; r2++)
              t2 = t2.dbl();
            return t2;
          }
          uadd(e3) {
            throw new Error("Not implemented.");
          }
          usub(e3) {
            return N(e3 instanceof d), this.uadd(e3.neg());
          }
          udbl() {
            throw new Error("Not implemented.");
          }
          zaddu(e3) {
            throw new Error("Not implemented.");
          }
          zaddc(e3) {
            throw new Error("Not implemented.");
          }
          zdblu() {
            throw new Error("Not implemented.");
          }
          diffAdd(e3, t2) {
            throw new Error("Not implemented.");
          }
          diffAddDbl(e3, t2) {
            throw new Error("Not implemented.");
          }
          recover() {
            throw new Error("Not implemented.");
          }
          getX() {
            throw new Error("Not implemented.");
          }
          getY() {
            throw new Error("Not implemented.");
          }
          eq(e3) {
            throw new Error("Not implemented.");
          }
          cmp(e3) {
            throw new Error("Not implemented.");
          }
          isInfinity() {
            throw new Error("Not implemented.");
          }
          isOrder2() {
            throw new Error("Not implemented.");
          }
          isOdd() {
            throw new Error("Not implemented.");
          }
          isEven() {
            throw new Error("Not implemented.");
          }
          isSquare() {
            throw new Error("Not implemented.");
          }
          eqX(e3) {
            throw new Error("Not implemented.");
          }
          eqR(e3) {
            throw new Error("Not implemented.");
          }
          isSmall() {
            return !this.isInfinity() && this.jmulH().isInfinity();
          }
          hasTorsion() {
            return !this.isInfinity() && !this.jmul(this.curve.n).isInfinity();
          }
          order() {
            const {h: e3, n: t2} = this.curve;
            let r2 = this.toJ(), n2 = new i(1);
            for (; !r2.isInfinity(); ) {
              if (n2.iaddn(1), n2.cmp(e3) > 0) {
                n2 = t2.clone();
                break;
              }
              r2 = r2.add(this);
            }
            return n2;
          }
          mul(e3) {
            return this.jmul(e3);
          }
          muln(e3) {
            return this.jmuln(e3);
          }
          mulSimple(e3) {
            return this.jmulSimple(e3);
          }
          mulBlind(e3, t2) {
            return this.jmulBlind(e3, t2);
          }
          mulConst(e3, t2) {
            return this.jmulConst(e3, t2);
          }
          mulAdd(e3, t2, r2) {
            return this.jmulAdd(e3, t2, r2);
          }
          mulAddSimple(e3, t2, r2) {
            return this.jmulAddSimple(e3, t2, r2);
          }
          mulH() {
            return this.jmulH();
          }
          div(e3) {
            return this.jdiv(e3);
          }
          divn(e3) {
            return this.jdivn(e3);
          }
          divH() {
            return this.jdivH();
          }
          jmul(e3) {
            return this._hasDoubles(e3) ? this.curve._fixedNafMul(this, e3) : this.curve.endo && this.type === s ? this.curve._endoWnafMulAdd([this], [e3]) : this.curve._wnafMul(5, this, e3);
          }
          jmuln(e3) {
            return N((0 | e3) === e3), this.jmulSimple(new i(e3));
          }
          jmulSimple(e3) {
            return this.curve._simpleMul(this, e3);
          }
          jmulBlind(e3, t2 = null) {
            const [r2, n2, i2] = this._blind(e3, t2), s2 = r2.jmul(n2);
            return i2 ? s2.add(i2) : s2;
          }
          jmulConst(e3, t2 = null) {
            const [r2, n2, i2] = this._blind(e3, t2), s2 = this.curve._constMul(r2, n2, t2);
            return i2 ? s2.uadd(i2) : s2;
          }
          jmulAdd(e3, t2, r2) {
            return this.curve.endo && this.type === s ? this.curve._endoWnafMulAdd([this, t2], [e3, r2]) : this.curve._wnafMulAdd(5, [this, t2], [e3, r2]);
          }
          jmulAddSimple(e3, t2, r2) {
            return this.curve._simpleMulAdd([this, t2], [e3, r2]);
          }
          jmulH() {
            const e3 = this.curve.h.word(0);
            if ((e3 & e3 - 1) == 0) {
              const e4 = this.curve.h.bitLength();
              return this.toJ().dblp(e4 - 1);
            }
            return this.jmulSimple(this.curve.h);
          }
          jdiv(e3) {
            return N(e3 instanceof i), N(!e3.red), this.jmul(e3.invert(this.curve.n));
          }
          jdivn(e3) {
            return N(!this.curve.n.isZero()), this.curve.h.cmpn(e3) === 0 ? this.jdivH() : this.jdiv(new i(e3));
          }
          jdivH() {
            return this.curve.n.isZero() || this.curve.h.cmpn(1) === 0 ? this.toJ() : (this.curve.hi === null && (this.curve.hi = this.curve.h.invert(this.curve.n)), this.jmul(this.curve.hi));
          }
          ladder(e3) {
            throw new Error("Not implemented.");
          }
          ladderSimple(e3) {
            throw new Error("Not implemented.");
          }
          ladderBlind(e3, t2) {
            throw new Error("Not implemented.");
          }
          ladderConst(e3, t2) {
            throw new Error("Not implemented.");
          }
          toP() {
            return this.normalize();
          }
          toJ() {
            return this;
          }
          toX() {
            return this;
          }
          key() {
            if (this.isInfinity())
              return this.curve.uid + ":oo";
            this.normalize();
            const e3 = this.getX().toString(16), t2 = this.getY().toString(16);
            return `${this.curve.uid}:${e3},${t2}`;
          }
          encode(e3) {
            throw new Error("Not implemented.");
          }
          static decode(e3, t2) {
            throw new Error("Not implemented.");
          }
          encodeX() {
            throw new Error("Not implemented.");
          }
          static decodeX(e3, t2) {
            throw new Error("Not implemented.");
          }
          static decodeEven(e3, t2) {
            throw new Error("Not implemented.");
          }
          static decodeSquare(e3, t2) {
            throw new Error("Not implemented.");
          }
          toJSON(e3) {
            throw new Error("Not implemented.");
          }
          static fromJSON(e3, t2) {
            throw new Error("Not implemented.");
          }
          [n]() {
            return "<Point>";
          }
        }
        class l extends f {
          constructor(e3) {
            super(p, "short", e3), this.a = i.fromJSON(e3.a).toRed(this.red), this.b = i.fromJSON(e3.b).toRed(this.red), this.c = i.fromJSON(e3.c || "0").toRed(this.red), this.ai = this.a.isZero() ? this.zero : this.a.redInvert(), this.zi = this.z.isZero() ? this.zero : this.z.redInvert(), this.zeroA = this.a.isZero(), this.threeA = this.a.eq(this.three.redNeg()), this.redN = this.n.toRed(this.red), this.pmodn = this.p.clone(), this.highOrder = this.n.cmp(this.p) >= 0, this.smallGap = false, this._finalize(e3);
          }
          _finalize(e3) {
            return super._finalize(e3), e3.endo != null ? this.endo = k.fromJSON(this, e3.endo) : this.endo = this._getEndomorphism(), this.n.isZero() || (this.pmodn = this.p.mod(this.n), this.smallGap = this.p.div(this.n).cmpn(1) <= 0), this;
          }
          static _isomorphism(e3, t2, r2, n2) {
            if (N(e3 instanceof i), N(t2 instanceof i), N(r2 instanceof i), N(n2 == null || typeof n2 == "boolean"), N(!e3.isZero() || !t2.isZero()), r2.isZero())
              throw new Error("Invalid coefficient.");
            if (e3.isZero()) {
              const n3 = r2;
              return N(D(n3.redDiv(t2)).redJacobi() === 1), [e3.clone(), n3.clone()];
            }
            if (t2.isZero()) {
              const n3 = r2, i2 = n3.redDiv(e3).redSqrt();
              if (i2.redJacobi() !== 1 && i2.redINeg(), i2.redJacobi() !== 1)
                throw new Error("Invalid `a` coefficient.");
              return [n3.clone(), t2.clone()];
            }
            const s2 = r2, o2 = s2.redDiv(e3), a2 = o2.redSqrt();
            if (n2 != null ? a2.redIsOdd() !== n2 && a2.redINeg() : a2.redJacobi() !== 1 && a2.redINeg(), a2.redJacobi() !== 1)
              throw new Error("Invalid `a` coefficient.");
            const c2 = o2.redMul(a2), u2 = e3.redMul(o2), h2 = t2.redMul(c2);
            return N(u2.eq(s2)), [u2, h2];
          }
          _short(e3, t2) {
            return l._isomorphism(this.a, this.b, e3, t2);
          }
          _mont(e3, t2) {
            const [r2, n2] = this._findRS(t2), i2 = n2.redInvert(), s2 = r2.redMuln(3).redMul(i2);
            return e3 != null ? g._isomorphism(s2, i2, e3) : [s2, i2];
          }
          _edwards(e3, t2) {
            const [r2, n2] = this._findRS(t2), i2 = r2.redMuln(3), s2 = n2.redMuln(2), o2 = i2.redAdd(s2), a2 = i2.redSub(s2);
            return e3 != null ? v._isomorphism(o2, a2, e3) : [o2, a2];
          }
          _findRS(e3) {
            N(e3 == null || typeof e3 == "boolean"), N(this.h.word(0) >= 4), N(!this.n.isZero());
            const t2 = this.one.redNeg();
            let r2;
            for (; ; ) {
              t2.redIAdd(this.one);
              try {
                r2 = this.pointFromX(t2.clone());
              } catch (s2) {
                continue;
              }
              if (r2 = r2.mul(this.n), !r2.isInfinity() && r2.y.isZero())
                break;
            }
            const n2 = r2.x, i2 = n2.redSqr().redMuln(3).redIAdd(this.a).redSqrt();
            return e3 != null && i2.redIsOdd() !== e3 && i2.redINeg(), [n2, i2];
          }
          _scale0(e3, t2) {
            if (N(this.a.isZero() === e3.isZero()), N(this.b.isZero() === t2.isZero()), this.a.isZero()) {
              const e4 = this.b.redDiv(this.field(t2)), r3 = D(e4), n3 = r3.redSqrt(), i3 = r3.redMul(n3);
              return N(i3.redSqr().eq(e4)), N(!n3.isZero()), [r3, i3];
            }
            if (this.b.isZero()) {
              const t3 = this.a.redDiv(this.field(e3)), r3 = t3.redSqrt();
              r3.redJacobi() !== 1 && r3.redINeg();
              const n3 = r3.redSqrt(), i3 = r3.redMul(n3);
              return N(i3.redMul(n3).eq(t3)), N(!n3.isZero()), [r3, i3];
            }
            const r2 = this.a.redDiv(this.field(e3)), n2 = this.b.redDiv(this.field(t2)), i2 = r2.redSqrt();
            r2.redMul(i2).eq(n2) || i2.redINeg(), N(r2.redMul(i2).eq(n2));
            const s2 = i2.redSqrt(), o2 = i2.redMul(s2);
            return N(!s2.isZero()), [i2, o2];
          }
          _scale1(e3, t2) {
            const r2 = this.g.x.redDiv(this.field(e3)), n2 = this.g.y.redDiv(this.field(t2)), i2 = r2.redSqrt();
            return r2.redMul(i2).eq(n2) || i2.redINeg(), N(r2.redMul(i2).eq(n2)), N(!i2.isZero()), [r2, n2];
          }
          _scaleShort(e3) {
            return N(e3 instanceof l), this.g.isInfinity() || e3.g.isInfinity() ? this._scale0(e3.a, e3.b) : this._scale1(e3.g.x, e3.g.y);
          }
          _scaleMont(e3) {
            if (N(e3 instanceof g), this.g.isInfinity() || e3.g.isInfinity()) {
              const [t3, r3] = e3._short();
              return this._scale0(t3, r3);
            }
            const {x: t2, y: r2} = e3.g, n2 = t2.redAdd(e3.a3).redMul(e3.bi), i2 = r2.redMul(e3.bi);
            return this._scale1(n2, i2);
          }
          _scaleEdwards(e3) {
            if (N(e3 instanceof v), this.g.isInfinity() || e3.g.isInfinity()) {
              const [t3, r3] = e3._short();
              return this._scale0(t3, r3);
            }
            const {x: t2, y: r2, z: n2} = e3.g, i2 = e3.a.redMuln(5), s2 = e3.d.redMuln(5), o2 = e3.d.redSub(e3.a), a2 = s2.redSub(e3.a), c2 = e3.d.redSub(i2), u2 = r2.redAdd(n2), h2 = r2.redSub(n2), f2 = a2.redMul(r2).redIAdd(c2.redMul(n2)), d2 = h2.redMuln(12), l2 = o2.redMul(u2).redMul(n2), p2 = h2.redMul(t2).redIMuln(4), y2 = d2.redMul(p2).redInvert(), g2 = f2.redMul(p2).redMul(y2), b2 = l2.redMul(d2).redMul(y2);
            return this._scale1(g2, b2);
          }
          _getEndomorphism(e3 = 0) {
            if (this.n.isZero() || this.g.isInfinity())
              return null;
            if (!this.zeroA || this.p.modrn(3) !== 1 || this.n.modrn(3) !== 1)
              return null;
            const [t2, r2] = this._getEndoRoots(this.p), n2 = [t2, r2][1 & e3].toRed(this.red), [i2, s2] = this._getEndoRoots(this.n), o2 = this.point(this.g.x.redMul(n2), this.g.y);
            let a2;
            this.g.mul(i2).eq(o2) ? a2 = i2 : (N(this.g.mul(s2).eq(o2)), a2 = s2);
            const c2 = this._getEndoBasis(a2), u2 = this._getEndoPrecomp(c2);
            return new k(n2, a2, c2, u2);
          }
          _getEndoRoots(e3) {
            const t2 = e3 === this.p ? this.red : i.mont(e3), r2 = new i(2).toRed(t2), n2 = new i(3).toRed(t2), s2 = r2.redInvert(), o2 = n2.redNeg().redSqrt().redMul(s2), a2 = o2.redNeg();
            return [o2.redSub(s2).fromRed(), a2.redSub(s2).fromRed()].sort(i.cmp);
          }
          _getEndoBasis(e3) {
            const [t2, r2, n2, i2, s2, o2] = this._egcdSqrt(e3), a2 = n2, c2 = i2.neg(), u2 = t2.sqr().iadd(r2.sqr()), h2 = s2.sqr().iadd(o2.sqr());
            let f2, d2;
            return u2.cmp(h2) <= 0 ? (f2 = t2, d2 = r2.neg()) : (f2 = s2, d2 = o2.neg()), [new R(a2, c2), new R(f2, d2)];
          }
          _egcdSqrt(e3) {
            N(e3 instanceof i), N(!e3.red), N(e3.sign() > 0), N(this.n.sign() > 0);
            const t2 = this.n.ushrn(this.n.bitLength() >>> 1);
            let r2, n2, s2, o2, a2, c2 = e3, u2 = this.n.clone(), h2 = new i(1), f2 = new i(0), d2 = new i(0), l2 = new i(1), p2 = 0, y2 = 0;
            for (; !c2.isZero() && p2 < 2; ) {
              const e4 = u2.quo(c2), i2 = u2.sub(e4.mul(c2)), g2 = d2.sub(e4.mul(h2)), b2 = l2.sub(e4.mul(f2));
              y2 === 0 && i2.cmp(t2) < 0 && (r2 = a2, n2 = h2, s2 = i2, o2 = g2, y2 = 1), a2 = i2, u2 = c2, c2 = i2, d2 = h2, h2 = g2, l2 = f2, f2 = b2, p2 += y2;
            }
            N(y2 !== 0, "Could not find r < sqrt(n).");
            return [r2, n2, s2, o2, d2, h2];
          }
          _getEndoPrecomp(e3) {
            N(Array.isArray(e3)), N(e3.length === 2), N(e3[0] instanceof R), N(e3[1] instanceof R);
            const [t2, r2] = e3, n2 = t2.a.mul(r2.b).isub(t2.b.mul(r2.a)), s2 = n2.bitLength() + 16, o2 = i.shift(1, s2), a2 = o2.mul(r2.b).divRound(n2), c2 = o2.mul(t2.b).divRound(n2);
            return N(n2.eq(this.n)), [a2, c2];
          }
          _endoSplit(e3) {
            N(e3 instanceof i), N(!e3.red), N(!this.n.isZero());
            const [t2, r2] = this.endo.basis, n2 = r2.b.mul(e3).divRound(this.n), s2 = t2.b.neg().mul(e3).divRound(this.n), o2 = n2.mul(t2.a), a2 = s2.mul(r2.a), c2 = n2.ineg().mul(t2.b), u2 = s2.mul(r2.b);
            return [e3.sub(o2).isub(a2), c2.isub(u2)];
          }
          _endoBeta(e3) {
            return N(e3 instanceof p), [e3, e3._getBeta()];
          }
          _endoWnafMulAdd(e3, t2) {
            N(Array.isArray(e3)), N(Array.isArray(t2)), N(e3.length === t2.length), N(this.endo != null);
            const r2 = e3.length, n2 = new Array(2 * r2), i2 = new Array(2 * r2);
            for (let s2 = 0; s2 < r2; s2++) {
              const [r3, o2] = this._endoBeta(e3[s2]), [a2, c2] = this._endoSplit(t2[s2]);
              n2[2 * s2 + 0] = r3, i2[2 * s2 + 0] = a2, n2[2 * s2 + 1] = o2, i2[2 * s2 + 1] = c2;
            }
            return this._wnafMulAdd(5, n2, i2);
          }
          _icart(e3) {
            const {a: t2, b: r2, i3: n2, one: i2} = this, s2 = n2.redSqr().redMul(n2), o2 = this.p.ushln(1).isubn(1).idivn(3), a2 = e3.clone();
            a2.cinject(i2, a2.czero());
            const c2 = a2.redSqr(), u2 = c2.redSqr(), h2 = u2.redMul(c2), f2 = a2.redMuln(6).redFermat(), d2 = t2.redMuln(3).redISub(u2).redMul(f2), l2 = d2.redSqr(), p2 = h2.redMul(s2), y2 = c2.redMul(n2), g2 = l2.redISub(r2).redISub(p2).redPow(o2).redIAdd(y2), b2 = a2.redMul(g2).redIAdd(d2);
            return this.point(g2, b2);
          }
          _sswu(e3) {
            const {b: t2, z: r2, ai: n2, zi: i2, one: s2} = this, o2 = this.p.subn(2), a2 = r2.redSqr(), c2 = t2.redNeg().redMul(n2), u2 = t2.redMul(i2).redMul(n2), h2 = e3.redSqr(), f2 = h2.redSqr(), d2 = a2.redMul(f2).redIAdd(r2.redMul(h2)).redPow(o2), l2 = c2.redMul(s2.redAdd(d2));
            l2.cinject(u2, d2.czero());
            const p2 = r2.redMul(h2).redMul(l2), y2 = this.solveY2(l2), g2 = this.solveY2(p2), b2 = 0 | y2.redIsSquare(), m2 = l2.cinject(p2, 1 ^ b2), v2 = y2.cinject(g2, 1 ^ b2).redSqrt();
            return v2.cinject(v2.redNeg(), v2.redIsOdd() ^ e3.redIsOdd()), this.point(m2, v2);
          }
          _sswui(e3, t2) {
            const {a: r2, b: n2, z: i2} = this, {x: s2, y: o2} = e3, a2 = 3 & t2, c2 = r2.redSqr().redMul(s2.redSqr()), u2 = r2.redMul(n2).redMul(s2).redIMuln(2), h2 = n2.redSqr().redMuln(3), f2 = r2.redMul(s2).redIAdd(n2), [d2, l2] = P(c2.redISub(u2).redISub(h2)), p2 = f2.redSub(l2).redINeg(), y2 = f2.redAdd(l2).redINeg(), g2 = f2.redMul(i2).redIMuln(2), b2 = n2.redMul(i2).redIMuln(2);
            p2.cinject(y2, 1 & a2), g2.cinject(b2, a2 >>> 1);
            const [m2, v2] = B(p2, g2);
            if (v2.cinject(v2.redNeg(), v2.redIsOdd() ^ o2.redIsOdd()), !(d2 & m2))
              throw new Error("Invalid point.");
            return v2;
          }
          _svdwf(e3) {
            const {c: t2, z: r2, zi: n2, i2, i3: s2} = this, o2 = this.p.subn(2), a2 = this.solveY2(r2), c2 = s2.redMul(n2.redSqr()), u2 = e3.redSqr(), h2 = u2.redSqr(), f2 = u2.redAdd(a2), d2 = u2.redMul(f2).redPow(o2), l2 = h2.redMul(d2).redMul(t2), p2 = f2.redSqr().redMul(f2), y2 = t2.redSub(r2).redMul(i2).redISub(l2), g2 = l2.redSub(t2.redAdd(r2).redMul(i2)), b2 = r2.redSub(p2.redMul(d2).redMul(c2)), m2 = this.solveY2(y2), v2 = this.solveY2(g2), w2 = this.solveY2(b2), _2 = 0 | m2.redIsSquare(), E2 = 0 | v2.redIsSquare();
            return y2.cinject(g2, (1 ^ _2) & E2), m2.cinject(v2, (1 ^ _2) & E2), y2.cinject(b2, (1 ^ _2) & (1 ^ E2)), m2.cinject(w2, (1 ^ _2) & (1 ^ E2)), [y2, m2];
          }
          _svdw(e3) {
            const [t2, r2] = this._svdwf(e3), n2 = r2.redSqrt();
            return n2.cinject(n2.redNeg(), n2.redIsOdd() ^ e3.redIsOdd()), this.point(t2, n2);
          }
          _svdwi(e3, t2) {
            const {b: r2, c: n2, z: i2, two: s2} = this, {x: o2, y: a2} = e3, c2 = 3 & t2, u2 = i2.redSqr(), h2 = u2.redMul(i2), f2 = u2.redSqr(), d2 = h2.redAdd(r2), l2 = d2.redMuln(2), p2 = o2.redSqr(), y2 = o2.redMuln(2).redIAdd(i2), g2 = o2.redMul(u2), b2 = n2.redSub(y2), m2 = n2.redAdd(y2), v2 = p2.redMul(u2).redIAdd(f2).redIMuln(9), w2 = o2.redMul(h2).redIMuln(18), _2 = d2.redMul(o2.redSub(i2)).redIMuln(12), [E2, S2] = P(v2.redISub(w2).redIAdd(_2)), A2 = c2 - 2 >>> 31 | E2, I2 = S2.redMul(i2), k2 = h2.redISub(g2).redIMuln(3).redISub(l2), R2 = d2.redMul(b2), T2 = d2.redMul(m2), C2 = k2.redAdd(I2), M2 = k2.redSub(I2), x2 = s2.clone();
            R2.cinject(T2, (1 ^ c2) - 1 >>> 31), R2.cinject(C2, (2 ^ c2) - 1 >>> 31), R2.cinject(M2, (3 ^ c2) - 1 >>> 31), x2.cinject(m2, (0 ^ c2) - 1 >>> 31), x2.cinject(b2, (1 ^ c2) - 1 >>> 31);
            const [N2, O2] = B(R2, x2), [D2] = this._svdwf(O2), L2 = D2.ceq(o2);
            if (O2.cinject(O2.redNeg(), O2.redIsOdd() ^ a2.redIsOdd()), !(A2 & N2 & L2))
              throw new Error("Invalid point.");
            return O2;
          }
          isElliptic() {
            const {a: e3, b: t2} = this, r2 = e3.redSqr().redMul(e3);
            return !t2.redSqr().redMuln(27).redIAdd(r2.redMuln(4)).isZero();
          }
          jinv() {
            const {a: e3, b: t2} = this, r2 = e3.redSqr().redMul(e3), n2 = t2.redSqr(), i2 = r2.redMuln(4), s2 = i2.redMuln(1728), o2 = n2.redMuln(27).redIAdd(i2);
            if (o2.isZero())
              throw new Error("Curve is not elliptic.");
            return s2.redDiv(o2).fromRed();
          }
          point(e3, t2, r2 = 0) {
            return new p(this, e3, t2, r2);
          }
          jpoint(e3, t2, r2) {
            return new y(this, e3, t2, r2);
          }
          solveX(e3) {
            if (N(e3 instanceof i), !this.a.isZero())
              throw new Error("Not implemented.");
            return O(e3.redSqr().redSub(this.b));
          }
          solveY2(e3) {
            N(e3 instanceof i);
            const t2 = e3.redSqr().redMul(e3).redIAdd(this.b);
            return this.zeroA || (this.threeA ? t2.redIAdd(e3.redMuln(-3)) : t2.redIAdd(this.a.redMul(e3))), t2;
          }
          validate(e3) {
            if (N(e3 instanceof p), e3.inf)
              return true;
            const {x: t2, y: r2} = e3, n2 = this.solveY2(t2);
            return r2.redSqr().eq(n2);
          }
          pointFromX(e3, t2 = null) {
            N(e3 instanceof i), N(t2 == null || typeof t2 == "boolean"), e3.red || (e3 = e3.toRed(this.red));
            const r2 = this.solveY(e3);
            if (t2 != null) {
              if (this.h.cmpn(1) > 0 && r2.isZero() && t2)
                throw new Error("Invalid point.");
              r2.redIsOdd() !== t2 && r2.redINeg();
            }
            return this.point(e3, r2);
          }
          pointFromY(e3, t2 = 0) {
            N(e3 instanceof i), N(t2 >>> 0 === t2), e3.red || (e3 = e3.toRed(this.red));
            const r2 = this.solveX(e3);
            if (t2 >= r2.length)
              throw new Error("Invalid X coordinate index.");
            const n2 = r2[t2];
            return this.point(n2, e3);
          }
          isIsomorphic(e3) {
            if (N(e3 instanceof f), !e3.p.eq(this.p))
              return false;
            let t2, r2;
            try {
              [t2, r2] = this._scale(e3);
            } catch (n2) {
              return false;
            }
            if (e3.type === "short") {
              const n2 = this.field(e3.a).redMul(t2.redSqr()), i2 = this.field(e3.b).redMul(r2.redSqr());
              return this.a.eq(n2) && this.b.eq(i2);
            }
            if (e3.type === "mont") {
              const {a3: r3, bi: n2} = e3, i2 = this.field(r3.redMul(n2)).redMul(t2);
              return this.solveY2(i2).isZero();
            }
            if (e3.type === "edwards") {
              const r3 = this.field(e3.ad6).redMul(t2);
              return this.solveY2(r3).isZero();
            }
            return false;
          }
          isIsogenous(e3) {
            return N(e3 instanceof f), false;
          }
          pointFromShort(e3) {
            if (N(e3 instanceof p), this.isIsomorphic(e3.curve)) {
              if (e3.isInfinity())
                return this.point();
              const [t2, r2] = this._scale(e3.curve), n2 = this.field(e3.x), i2 = this.field(e3.y), s2 = n2.redMul(t2), o2 = i2.redMul(r2);
              return this.point(s2, o2);
            }
            throw new Error("Not implemented.");
          }
          pointFromMont(e3) {
            if (N(e3 instanceof b), this.isIsomorphic(e3.curve)) {
              if (e3.isInfinity())
                return this.point();
              const {a3: t2, bi: r2} = e3.curve, [n2, i2] = this._scale(e3.curve), s2 = e3.x.redAdd(t2).redMul(r2), o2 = e3.y.redMul(r2);
              return this.point(this.field(s2).redMul(n2), this.field(o2).redMul(i2));
            }
            throw new Error("Not implemented.");
          }
          pointFromEdwards(e3) {
            if (N(e3 instanceof w), this.isIsomorphic(e3.curve)) {
              const {a: t2, d: r2, ad6: n2} = e3.curve, [i2, s2] = this._scale(e3.curve);
              if (e3.isInfinity())
                return this.point();
              if (e3.x.isZero()) {
                const e4 = this.field(n2).redMul(i2);
                return this.point(e4, this.zero);
              }
              const {x: o2, y: a2, z: c2} = e3, u2 = t2.redMuln(5), h2 = r2.redMuln(5), f2 = r2.redSub(t2), d2 = h2.redSub(t2), l2 = r2.redSub(u2), p2 = a2.redAdd(c2), y2 = a2.redSub(c2), g2 = d2.redMul(a2).redIAdd(l2.redMul(c2)), b2 = y2.redMuln(12), m2 = f2.redMul(p2).redMul(c2), v2 = y2.redMul(o2).redIMuln(4);
              return this.cpoint(this.field(g2).redMul(i2), this.field(b2), this.field(m2).redMul(s2), this.field(v2));
            }
            throw new Error("Not implemented.");
          }
          pointFromUniform(e3) {
            if (N(e3 instanceof i), this.z.isZero() || this.b.isZero())
              throw new Error("Not implemented.");
            if (!this.a.isZero())
              return this._sswu(e3);
            if (!this.c.isZero())
              return this._svdw(e3);
            throw new Error("Not implemented.");
          }
          pointToUniform(e3, t2) {
            if (N(e3 instanceof p), N(t2 >>> 0 === t2), this.z.isZero() || this.b.isZero())
              throw new Error("Not implemented.");
            if (e3.isInfinity())
              throw new Error("Invalid point.");
            const r2 = (t2 >>> 4 & 15) % this.torsion.length, n2 = e3.add(this.torsion[r2]);
            if (!this.a.isZero())
              return this._sswui(n2, t2);
            if (!this.c.isZero())
              return this._svdwi(n2, t2);
            throw new Error("Not implemented.");
          }
          mulAll(e3, t2) {
            return super.mulAll(e3, t2).toP();
          }
          mulAllSimple(e3, t2) {
            return super.mulAllSimple(e3, t2).toP();
          }
          decodePoint(e3) {
            return p.decode(this, e3);
          }
          encodeX(e3) {
            return N(e3 instanceof d), e3.encodeX();
          }
          decodeEven(e3) {
            return p.decodeEven(this, e3);
          }
          decodeSquare(e3) {
            return p.decodeSquare(this, e3);
          }
          toShort(e3, t2, r2 = null) {
            const [n2, i2] = this._short(e3, t2), s2 = new l({red: this.red, prime: this.prime, p: this.p, a: n2, b: i2, n: this.n, h: this.h});
            if (r2 != null) {
              const [, e4] = s2._scale(this);
              e4.redIsOdd() !== r2 && e4.redINeg();
            }
            this.g.isInfinity() || (s2.g = s2.pointFromShort(this.g));
            for (let o2 = 0; o2 < this.h.word(0); o2++)
              s2.torsion[o2] = s2.pointFromShort(this.torsion[o2]);
            return s2;
          }
          toMont(e3, t2, r2 = null) {
            const [n2, i2] = this._mont(e3, t2), s2 = new g({red: this.red, prime: this.prime, p: this.p, a: n2, b: i2, n: this.n, h: this.h});
            if (r2 != null) {
              const [, e4] = this._scale(s2);
              e4.redIsOdd() !== r2 && e4.redINeg();
            }
            this.g.isInfinity() || (s2.g = s2.pointFromShort(this.g));
            for (let o2 = 0; o2 < this.h.word(0); o2++)
              s2.torsion[o2] = s2.pointFromShort(this.torsion[o2]);
            return s2;
          }
          toEdwards(e3, t2, r2 = null) {
            const [n2, i2] = this._edwards(e3, t2), s2 = new v({red: this.red, prime: this.prime, p: this.p, a: n2, d: i2, n: this.n, h: this.h});
            if (r2 != null) {
              const [, e4] = this._scale(s2);
              e4.redIsOdd() !== r2 && e4.redINeg();
            }
            if (this.g.isInfinity() || (s2.g = s2.pointFromShort(this.g), s2.g.normalize()), s2.isComplete())
              for (let o2 = 0; o2 < this.h.word(0); o2++)
                s2.torsion[o2] = s2.pointFromShort(this.torsion[o2]), s2.torsion[o2].normalize();
            return s2;
          }
          pointFromJSON(e3) {
            return p.fromJSON(this, e3);
          }
          toJSON(e3) {
            const t2 = super.toJSON(e3);
            return t2.a = this.a.fromRed().toJSON(), t2.b = this.b.fromRed().toJSON(), this.c.isZero() || (t2.c = this.c.fromRed().toJSON()), t2;
          }
        }
        class p extends d {
          constructor(e3, t2, r2, n2) {
            N(e3 instanceof l), super(e3, s), this.x = this.curve.zero, this.y = this.curve.zero, this.inf = 1, t2 != null && this._init(t2, r2, n2);
          }
          _init(e3, t2, r2) {
            N(e3 instanceof i), N(t2 instanceof i), this.x = e3, this.y = t2, this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = 0 | r2;
          }
          _safeNAF(e3) {
            return N(e3 >>> 0 === e3), this.pre && this.pre.naf ? this.pre.naf : e3 > 1 ? this.toJ()._getNAF(e3) : this._getNAF(e3);
          }
          _getBeta() {
            if (!this.curve.endo)
              return null;
            if (this.pre && this.pre.beta)
              return this.pre.beta;
            const e3 = this.x.redMul(this.curve.endo.beta), t2 = this.curve.point(e3, this.y);
            return this.pre && (t2.pre = this.pre.map((e4) => {
              const t3 = e4.x.redMul(this.curve.endo.beta);
              return this.curve.point(t3, e4.y);
            }), this.pre.beta = t2), t2;
          }
          _getJNAF(e3) {
            if (N(e3 instanceof p), this.inf | e3.inf)
              return super._getJNAF(e3);
            const t2 = [this, null, null, e3];
            return this.y.eq(e3.y) ? (t2[1] = this.add(e3), t2[2] = this.toJ().sub(e3)) : this.y.eq(e3.y.redNeg()) ? (t2[1] = this.toJ().add(e3), t2[2] = this.sub(e3)) : (t2[1] = this.toJ().add(e3), t2[2] = this.toJ().sub(e3)), t2;
          }
          clone() {
            return this.curve.point(this.x.clone(), this.y.clone(), this.inf);
          }
          swap(e3, t2) {
            N(e3 instanceof p);
            const r2 = 1 & (t2 >> 31 | -t2 >> 31), n2 = this.inf, i2 = e3.inf;
            return this.x.cswap(e3.x, t2), this.y.cswap(e3.y, t2), this.inf = n2 & (1 ^ r2) | i2 & r2, e3.inf = i2 & (1 ^ r2) | n2 & r2, this;
          }
          scale(e3) {
            return this.toJ().scale(e3);
          }
          neg() {
            return this.inf ? this : this.curve.point(this.x, this.y.redNeg());
          }
          add(e3) {
            if (N(e3 instanceof p), this.inf)
              return e3;
            if (e3.inf)
              return this;
            if (this.x.eq(e3.x))
              return this.y.eq(e3.y) ? this.dbl() : this.curve.point();
            if (this.y.eq(e3.y)) {
              const t3 = this.x.redNeg().redISub(e3.x), r3 = this.y.redNeg();
              return this.curve.point(t3, r3);
            }
            const t2 = this.x.redSub(e3.x), r2 = this.y.redSub(e3.y).redDiv(t2), n2 = r2.redSqr().redISub(this.x).redISub(e3.x), i2 = r2.redMul(this.x.redSub(n2)).redISub(this.y);
            return this.curve.point(n2, i2);
          }
          dbl() {
            if (this.inf)
              return this;
            if (this.y.isZero())
              return this.curve.point();
            const e3 = this.x.redSqr().redIMuln(3).redIAdd(this.curve.a), t2 = this.y.redMuln(2), r2 = e3.redDiv(t2), n2 = r2.redSqr().redISub(this.x).redISub(this.x), i2 = r2.redMul(this.x.redSub(n2)).redISub(this.y);
            return this.curve.point(n2, i2);
          }
          dblp(e3) {
            return this.toJ().dblp(e3).toP();
          }
          uadd(e3) {
            N(e3 instanceof p);
            const t2 = this.y.redAdd(e3.y), r2 = this.x.redAdd(e3.x).redSqr(), n2 = this.x.redMul(e3.x), i2 = r2.redISub(n2).redIAdd(this.curve.a), s2 = t2.czero() & i2.czero();
            t2.cinject(this.x.redSub(e3.x), s2), i2.cinject(this.y.redSub(e3.y), s2);
            const o2 = t2.czero() & (1 ^ (this.inf | e3.inf));
            t2.cinject(this.curve.one, t2.czero());
            const a2 = i2.redMul(t2.redFermat()), c2 = a2.redSqr().redISub(this.x).redISub(e3.x), u2 = a2.redMul(this.x.redSub(c2)).redISub(this.y), h2 = o2 | this.inf & e3.inf;
            return c2.cinject(e3.x, this.inf), u2.cinject(e3.y, this.inf), c2.cinject(this.x, e3.inf), u2.cinject(this.y, e3.inf), c2.cinject(this.curve.zero, h2), u2.cinject(this.curve.zero, h2), this.curve.point(c2, u2, h2);
          }
          udbl() {
            return this.uadd(this);
          }
          recover(e3, t2, r2, n2) {
            if (N(e3 instanceof i), N(t2 instanceof i), N(r2 instanceof i), N(n2 instanceof i), this.inf)
              return this.curve.jpoint();
            const s2 = t2.redMul(n2), o2 = s2.redSqr(), a2 = o2.redMul(s2), c2 = this.x.redMul(s2), u2 = e3.redMul(n2), h2 = r2.redMul(t2), f2 = this.curve.b.redMul(a2).redIMuln(2), d2 = c2.redMul(u2).redIAdd(this.curve.a.redMul(o2)), l2 = c2.redAdd(u2), p2 = c2.redISub(u2), y2 = f2.redIAdd(d2.redMul(l2)), g2 = h2.redMul(p2.redSqr()), b2 = y2.redISub(g2), m2 = this.y.redMul(a2).redIMuln(2), v2 = e3.redMul(m2), w2 = b2.redMul(t2), _2 = t2.redMul(m2), E2 = v2.redMul(_2), S2 = w2.redMul(_2.redSqr()), A2 = _2;
            return this.curve.jpoint(E2, S2, A2);
          }
          getX() {
            if (this.inf)
              throw new Error("Invalid point.");
            return this.x.fromRed();
          }
          getY() {
            if (this.inf)
              throw new Error("Invalid point.");
            return this.y.fromRed();
          }
          eq(e3) {
            return N(e3 instanceof p), this === e3 || (this.inf ? e3.inf !== 0 : !e3.inf && (this.x.eq(e3.x) && this.y.eq(e3.y)));
          }
          cmp(e3) {
            return N(e3 instanceof p), this.inf && !e3.inf ? -1 : !this.inf && e3.inf ? 1 : this.inf && e3.inf ? 0 : this.order().cmp(e3.order()) || this.getX().cmp(e3.getX()) || this.getY().cmp(e3.getY());
          }
          isInfinity() {
            return this.inf !== 0;
          }
          isOrder2() {
            return !this.inf && this.y.isZero();
          }
          isOdd() {
            return !this.inf && this.y.redIsOdd();
          }
          isEven() {
            return !this.inf && this.y.redIsEven();
          }
          isSquare() {
            return !this.inf && this.y.redJacobi() !== -1;
          }
          eqX(e3) {
            return N(e3 instanceof i), N(!e3.red), !this.inf && this.getX().eq(e3);
          }
          eqR(e3) {
            return N(e3 instanceof i), N(!e3.red), N(!this.curve.n.isZero()), !this.inf && this.getX().imod(this.curve.n).eq(e3);
          }
          mul(e3) {
            return super.mul(e3).toP();
          }
          muln(e3) {
            return super.muln(e3).toP();
          }
          mulSimple(e3) {
            return super.mulSimple(e3).toP();
          }
          mulBlind(e3, t2) {
            return super.mulBlind(e3, t2).toP();
          }
          mulConst(e3, t2) {
            return super.mulConst(e3, t2).toP();
          }
          mulAdd(e3, t2, r2) {
            return super.mulAdd(e3, t2, r2).toP();
          }
          mulAddSimple(e3, t2, r2) {
            return super.mulAddSimple(e3, t2, r2).toP();
          }
          mulH() {
            return super.mulH().toP();
          }
          div(e3) {
            return super.div(e3).toP();
          }
          divn(e3) {
            return super.divn(e3).toP();
          }
          divH() {
            return super.divH().toP();
          }
          toP() {
            return this;
          }
          toJ() {
            return this.inf ? this.curve.jpoint() : this.curve.jpoint(this.x, this.y, this.curve.one);
          }
          encode(t2) {
            t2 == null && (t2 = true), N(typeof t2 == "boolean");
            const {fieldSize: r2} = this.curve;
            if (this.inf)
              throw new Error("Invalid point.");
            if (t2) {
              const t3 = e2.alloc(1 + r2), n3 = this.curve.encodeField(this.getX());
              return t3[0] = 2 | this.y.redIsOdd(), n3.copy(t3, 1), t3;
            }
            const n2 = e2.alloc(1 + 2 * r2), i2 = this.curve.encodeField(this.getX()), s2 = this.curve.encodeField(this.getY());
            return n2[0] = 4, i2.copy(n2, 1), s2.copy(n2, 1 + r2), n2;
          }
          static decode(t2, r2) {
            N(t2 instanceof l), N(e2.isBuffer(r2));
            const n2 = t2.fieldSize;
            if (r2.length < 1 + n2)
              throw new Error("Not a point.");
            const i2 = r2[0];
            switch (i2) {
              case 2:
              case 3: {
                if (r2.length !== 1 + n2)
                  throw new Error("Invalid point size for compressed.");
                const e3 = t2.decodeField(r2.slice(1, 1 + n2));
                if (e3.cmp(t2.p) >= 0)
                  throw new Error("Invalid point.");
                const s2 = t2.pointFromX(e3, i2 === 3);
                return N(!s2.isInfinity()), s2;
              }
              case 4:
              case 6:
              case 7: {
                if (r2.length !== 1 + 2 * n2)
                  throw new Error("Invalid point size for uncompressed.");
                const e3 = t2.decodeField(r2.slice(1, 1 + n2)), s2 = t2.decodeField(r2.slice(1 + n2, 1 + 2 * n2));
                if (e3.cmp(t2.p) >= 0 || s2.cmp(t2.p) >= 0)
                  throw new Error("Invalid point.");
                if (i2 !== 4 && i2 !== (6 | s2.isOdd()))
                  throw new Error("Invalid hybrid encoding.");
                const o2 = t2.point(e3, s2);
                if (!o2.validate())
                  throw new Error("Invalid point.");
                return N(!o2.isInfinity()), o2;
              }
              default:
                throw new Error("Unknown point format.");
            }
          }
          encodeX() {
            return this.curve.encodeField(this.getX());
          }
          static decodeEven(e3, t2) {
            N(e3 instanceof l);
            const r2 = e3.decodeField(t2);
            if (r2.cmp(e3.p) >= 0)
              throw new Error("Invalid point.");
            return e3.pointFromX(r2, false);
          }
          static decodeSquare(e3, t2) {
            N(e3 instanceof l);
            const r2 = e3.decodeField(t2);
            if (r2.cmp(e3.p) >= 0)
              throw new Error("Invalid point.");
            return e3.pointFromX(r2);
          }
          toJSON(e3) {
            if (this.inf)
              return [];
            const t2 = this.getX().toJSON(), r2 = this.getY().toJSON();
            return e3 === true && this.pre ? [t2, r2, this.pre.toJSON()] : [t2, r2];
          }
          toPretty() {
            if (this.inf)
              return [];
            const e3 = 2 * this.curve.fieldSize;
            return [j(this.getX(), e3), j(this.getY(), e3)];
          }
          static fromJSON(e3, t2) {
            if (N(e3 instanceof l), N(Array.isArray(t2)), N(t2.length === 0 || t2.length === 2 || t2.length === 3), t2.length === 0)
              return e3.point();
            const r2 = i.fromJSON(t2[0]), n2 = i.fromJSON(t2[1]), s2 = e3.point(r2, n2);
            return t2.length > 2 && t2[2] != null && (s2.pre = _.fromJSON(s2, t2[2])), s2;
          }
          [n]() {
            return this.inf ? "<ShortPoint: Infinity>" : "<ShortPoint: x=" + this.x.fromRed().toString(16, 2) + " y=" + this.y.fromRed().toString(16, 2) + ">";
          }
        }
        class y extends d {
          constructor(e3, t2, r2, n2) {
            N(e3 instanceof l), super(e3, o), this.x = this.curve.one, this.y = this.curve.one, this.z = this.curve.zero, this.zOne = 0, t2 != null && this._init(t2, r2, n2);
          }
          _init(e3, t2, r2) {
            N(e3 instanceof i), N(t2 instanceof i), N(r2 == null || r2 instanceof i), this.x = e3, this.y = t2, this.z = r2 || this.curve.one, this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = 0 | this.z.eq(this.curve.one);
          }
          clone() {
            return this.curve.jpoint(this.x.clone(), this.y.clone(), this.z.clone());
          }
          swap(e3, t2) {
            N(e3 instanceof y);
            const r2 = 1 & (t2 >> 31 | -t2 >> 31), n2 = this.zOne, i2 = e3.zOne;
            return this.x.cswap(e3.x, t2), this.y.cswap(e3.y, t2), this.z.cswap(e3.z, t2), this.zOne = n2 & (1 ^ r2) | i2 & r2, e3.zOne = i2 & (1 ^ r2) | n2 & r2, this;
          }
          validate() {
            const {a: e3, b: t2} = this.curve;
            if (this.isInfinity())
              return true;
            if (this.zOne)
              return this.curve.validate(this.toP());
            const r2 = this.y.redSqr(), n2 = this.x.redSqr().redMul(this.x), i2 = this.z.redSqr(), s2 = i2.redSqr(), o2 = s2.redMul(i2), a2 = n2.redIAdd(t2.redMul(o2));
            return this.curve.zeroA || (this.curve.threeA ? a2.redIAdd(s2.redIMuln(-3).redMul(this.x)) : a2.redIAdd(e3.redMul(s2).redMul(this.x))), r2.eq(a2);
          }
          normalize() {
            if (this.zOne)
              return this;
            if (this.isInfinity())
              return this;
            const e3 = this.z.redInvert(), t2 = e3.redSqr();
            return this.x = this.x.redMul(t2), this.y = this.y.redMul(t2).redMul(e3), this.z = this.curve.one, this.zOne = 1, this;
          }
          scale(e3) {
            if (N(e3 instanceof i), this.isInfinity())
              return this.curve.jpoint();
            const t2 = e3.redSqr(), r2 = this.x.redMul(t2), n2 = this.y.redMul(t2).redMul(e3), s2 = this.z.redMul(e3);
            return this.curve.jpoint(r2, n2, s2);
          }
          neg() {
            return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
          }
          add(e3) {
            return N(e3 instanceof d), e3.type === s ? this._mixedAdd(e3) : this._add(e3);
          }
          _add(e3) {
            return N(e3 instanceof y), this.isInfinity() ? e3 : e3.isInfinity() ? this : this.zOne && e3.zOne ? this._addAA(e3) : this.zOne ? e3._addJA(this) : e3.zOne ? this._addJA(e3) : this._addJJ(e3);
          }
          _mixedAdd(e3) {
            return N(e3 instanceof p), this.isInfinity() ? e3.toJ() : e3.isInfinity() ? this : this.zOne ? this._addAA(e3) : this._addJA(e3);
          }
          _addJJ(e3) {
            const t2 = this.z.redSqr(), r2 = e3.z.redSqr(), n2 = this.x.redMul(r2), i2 = e3.x.redMul(t2), s2 = this.y.redMul(e3.z).redMul(r2), o2 = e3.y.redMul(this.z).redMul(t2), a2 = i2.redISub(n2), c2 = o2.redISub(s2);
            if (a2.isZero())
              return c2.isZero() ? this.dbl() : this.curve.jpoint();
            const u2 = a2.redSqr(), h2 = a2.redMul(u2), f2 = n2.redMul(u2), d2 = c2.redSqr().redISub(h2).redISub(f2).redISub(f2), l2 = c2.redMul(f2.redISub(d2)).redISub(s2.redMul(h2)), p2 = this.z.redMul(e3.z).redMul(a2);
            return this.curve.jpoint(d2, l2, p2);
          }
          _addJA(e3) {
            const t2 = this.z.redSqr(), r2 = e3.x.redMul(t2), n2 = e3.y.redMul(this.z).redMul(t2), i2 = r2.redISub(this.x), s2 = n2.redISub(this.y).redIMuln(2);
            if (i2.isZero())
              return s2.isZero() ? this.dbl() : this.curve.jpoint();
            const o2 = i2.redMuln(2).redSqr(), a2 = i2.redMul(o2), c2 = this.x.redMul(o2), u2 = s2.redSqr().redISub(a2).redISub(c2).redISub(c2), h2 = s2.redMul(c2.redISub(u2)).redISub(this.y.redMul(a2).redIMuln(2)), f2 = this.z.redMul(i2).redIMuln(2);
            return this.curve.jpoint(u2, h2, f2);
          }
          _addAA(e3) {
            const t2 = e3.x.redSub(this.x), r2 = e3.y.redSub(this.y).redIMuln(2);
            if (t2.isZero())
              return r2.isZero() ? this.dbl() : this.curve.jpoint();
            const n2 = t2.redSqr().redIMuln(4), i2 = t2.redMul(n2), s2 = this.x.redMul(n2), o2 = r2.redSqr().redISub(i2).redISub(s2).redISub(s2), a2 = r2.redMul(s2.redISub(o2)).redISub(this.y.redMul(i2).redIMuln(2)), c2 = t2.redIMuln(2);
            return this.curve.jpoint(o2, a2, c2);
          }
          dbl() {
            return this.isInfinity() ? this : this.y.isZero() ? this.curve.jpoint() : this.zOne ? this._dblA() : this.curve.zeroA ? this._dbl0() : this.curve.threeA ? this._dbl3() : this._dblJ();
          }
          _dblJ() {
            const e3 = this.x.redSqr(), t2 = this.y.redSqr(), r2 = this.z.redSqr(), n2 = this.x.redMul(t2).redIMuln(4), i2 = e3.redIMuln(3).redIAdd(this.curve.a.redMul(r2.redSqr())), s2 = i2.redSqr().redISub(n2).redISub(n2), o2 = s2, a2 = i2.redMul(n2.redISub(s2)).redISub(t2.redSqr().redIMuln(8)), c2 = this.y.redMul(this.z).redIMuln(2);
            return this.curve.jpoint(o2, a2, c2);
          }
          _dblA() {
            const e3 = this.x.redSqr(), t2 = this.y.redSqr(), r2 = t2.redSqr(), n2 = t2.redIAdd(this.x).redSqr().redISub(e3).redISub(r2).redIMuln(2), i2 = e3.redIMuln(3).redIAdd(this.curve.a), s2 = i2.redSqr().redISub(n2).redISub(n2), o2 = s2, a2 = i2.redMul(n2.redISub(s2)).redISub(r2.redIMuln(8)), c2 = this.y.redMuln(2);
            return this.curve.jpoint(o2, a2, c2);
          }
          _dbl0() {
            const e3 = this.x.redSqr(), t2 = this.y.redSqr(), r2 = t2.redSqr(), n2 = t2.redIAdd(this.x).redSqr().redISub(e3).redISub(r2).redIMuln(2), i2 = e3.redIMuln(3), s2 = i2.redSqr().redISub(n2).redISub(n2), o2 = i2.redMul(n2.redISub(s2)).redISub(r2.redIMuln(8)), a2 = this.y.redMul(this.z).redIMuln(2);
            return this.curve.jpoint(s2, o2, a2);
          }
          _dbl3() {
            const e3 = this.z.redSqr(), t2 = this.y.redSqr(), r2 = this.x.redMul(t2), n2 = this.x.redSub(e3), i2 = this.x.redAdd(e3), s2 = n2.redMul(i2).redIMuln(3), o2 = r2.redIMuln(4), a2 = o2.redMuln(2), c2 = t2.redSqr().redIMuln(8), u2 = s2.redSqr().redISub(a2), h2 = this.y.redAdd(this.z).redSqr().redISub(t2).redISub(e3), f2 = s2.redMul(o2.redISub(u2)).redISub(c2);
            return this.curve.jpoint(u2, f2, h2);
          }
          dblp(e3) {
            return N(e3 >>> 0 === e3), this.curve.zeroA || this.curve.threeA ? super.dblp(e3) : e3 === 0 || this.isInfinity() ? this : this._dblp(e3);
          }
          _dblp(e3) {
            const {a: t2, i2: r2} = this.curve;
            let n2 = this.x, i2 = this.z, s2 = this.y.redMuln(2), o2 = i2.redPown(4);
            for (let a2 = 0; a2 < e3; a2++) {
              if (s2.isZero())
                return this.curve.jpoint();
              const r3 = n2.redSqr(), c2 = s2.redSqr(), u2 = c2.redSqr(), h2 = r3.redIMuln(3).redIAdd(t2.redMul(o2)), f2 = n2.redMul(c2), d2 = h2.redSqr().redISub(f2).redISub(f2), l2 = d2, p2 = h2.redMul(f2.redISub(d2)).redIMuln(2).redISub(u2), y2 = s2.redMul(i2);
              a2 + 1 < e3 && (o2 = o2.redMul(u2)), n2 = l2, s2 = p2, i2 = y2;
            }
            return this.curve.jpoint(n2, s2.redMul(r2), i2);
          }
          uadd(e3) {
            return N(e3 instanceof d), e3.type === s ? this._uadd(e3.toJ()) : this._uadd(e3);
          }
          _uadd(e3) {
            N(e3 instanceof y);
            const {zero: t2, one: r2} = this.curve, n2 = this.z.redSqr(), i2 = e3.z.redSqr(), s2 = this.x.redMul(i2), o2 = e3.x.redMul(n2), a2 = this.y.redMul(i2).redMul(e3.z), c2 = e3.y.redMul(n2).redMul(this.z), u2 = this.z.redMul(e3.z), h2 = s2.redAdd(o2), f2 = a2.redAdd(c2), d2 = h2.redSqr().redISub(s2.redMul(o2));
            if (!this.curve.zeroA) {
              const e4 = u2.redPown(4);
              this.curve.threeA ? d2.redIAdd(e4.redIMuln(-3)) : d2.redIAdd(this.curve.a.redMul(e4));
            }
            const l2 = f2.czero() & d2.czero();
            f2.cinject(s2.redSub(o2), l2), d2.cinject(a2.redSub(c2), l2);
            const p2 = f2.redSqr(), g2 = h2.redMul(p2), b2 = p2.redSqr();
            b2.cinject(t2, l2);
            const m2 = d2.redSqr(), v2 = u2.redMul(f2), w2 = g2.redMuln(3).redISub(m2).redISub(m2), _2 = m2.redISub(g2).redIMuln(4), E2 = d2.redMul(w2).redISub(b2).redIMuln(4), S2 = v2.redIMuln(2), A2 = this.z.czero(), I2 = e3.z.czero(), k2 = S2.czero() & (1 ^ (A2 | I2));
            return _2.cinject(e3.x, A2), E2.cinject(e3.y, A2), S2.cinject(e3.z, A2), _2.cinject(this.x, I2), E2.cinject(this.y, I2), S2.cinject(this.z, I2), _2.cinject(r2, k2), E2.cinject(r2, k2), S2.cinject(t2, k2), this.curve.jpoint(_2, E2, S2);
          }
          udbl() {
            const e3 = this._udbl(), t2 = this.z.czero() | this.y.czero();
            return e3.x.cinject(this.curve.one, t2), e3.y.cinject(this.curve.one, t2), e3.z.cinject(this.curve.zero, t2), e3;
          }
          _udbl() {
            return this.curve.zeroA ? this._dbl0() : this.curve.threeA ? this._dbl3() : this._dblJ();
          }
          zaddu(e3) {
            N(e3 instanceof y);
            const t2 = this.x.redSub(e3.x), r2 = this.y.redSub(e3.y), n2 = t2.redSqr(), i2 = this.x.redMul(n2), s2 = e3.x.redMul(n2), o2 = i2, a2 = r2.redSqr().redISub(i2).redISub(s2), c2 = this.y.redMul(i2.redSub(s2)), u2 = r2.redMul(o2.redSub(a2)).redISub(c2), h2 = this.z.redMul(t2), f2 = h2;
            return [this.curve.jpoint(a2, u2, f2), this.curve.jpoint(o2, c2, h2)];
          }
          zaddc(e3) {
            N(e3 instanceof y);
            const t2 = this.x.redSub(e3.x), r2 = this.y.redSub(e3.y), n2 = this.y.redAdd(e3.y), i2 = t2.redSqr(), s2 = this.x.redMul(i2), o2 = e3.x.redMul(i2), a2 = n2.redSqr().redISub(s2).redISub(o2), c2 = r2.redSqr().redISub(s2).redISub(o2), u2 = this.y.redMul(o2.redISub(s2)), h2 = e3.y.redMuln(2).redIAdd(r2), f2 = s2.redISub(a2), d2 = a2.redAdd(f2).redISub(c2), l2 = h2.redMul(f2).redIAdd(u2), p2 = r2.redMul(d2).redIAdd(u2), g2 = this.z.redMul(t2), b2 = g2;
            return [this.curve.jpoint(c2, p2, b2), this.curve.jpoint(a2, l2, g2)];
          }
          zdblu() {
            const e3 = this.x.redSqr(), t2 = this.y.redSqr(), r2 = t2.redSqr(), n2 = this.x.redAdd(t2).redSqr(), i2 = e3.redMuln(3);
            if (!this.curve.zeroA) {
              const e4 = this.z.redPown(4);
              this.curve.threeA ? i2.redIAdd(e4.redIMuln(-3)) : i2.redIAdd(this.curve.a.redMul(e4));
            }
            const s2 = n2.redISub(e3).redISub(r2).redIMuln(2), o2 = i2.redSqr().redISub(s2).redISub(s2), a2 = r2.redIMuln(8), c2 = s2.redSub(o2).redMul(i2).redISub(a2), u2 = this.y.redMul(this.z).redIMuln(2), h2 = u2;
            return [this.curve.jpoint(o2, c2, h2), this.curve.jpoint(s2, a2, u2)];
          }
          recover(e3, t2, r2, n2) {
            return this.toP().recover(e3, t2, r2, n2);
          }
          getX() {
            if (this.isInfinity())
              throw new Error("Invalid point.");
            return this.normalize(), this.x.fromRed();
          }
          getY() {
            if (this.isInfinity())
              throw new Error("Invalid point.");
            return this.normalize(), this.y.fromRed();
          }
          eq(e3) {
            if (N(e3 instanceof y), this === e3)
              return true;
            if (this.isInfinity())
              return e3.isInfinity();
            if (e3.isInfinity())
              return false;
            if (this.z.eq(e3.z))
              return this.x.eq(e3.x) && this.y.eq(e3.y);
            const t2 = this.z.redSqr(), r2 = e3.z.redSqr(), n2 = this.x.redMul(r2), i2 = e3.x.redMul(t2);
            if (!n2.eq(i2))
              return false;
            const s2 = t2.redMul(this.z), o2 = r2.redMul(e3.z), a2 = this.y.redMul(o2), c2 = e3.y.redMul(s2);
            return a2.eq(c2);
          }
          cmp(e3) {
            N(e3 instanceof y);
            const t2 = this.isInfinity(), r2 = e3.isInfinity();
            return t2 && !r2 ? -1 : !t2 && r2 ? 1 : t2 && r2 ? 0 : this.order().cmp(e3.order()) || this.getX().cmp(e3.getX()) || this.getY().cmp(e3.getY());
          }
          isInfinity() {
            return this.z.isZero();
          }
          isOrder2() {
            return !this.isInfinity() && this.y.isZero();
          }
          isOdd() {
            return !this.isInfinity() && (this.normalize(), this.y.redIsOdd());
          }
          isEven() {
            return !this.isInfinity() && (this.normalize(), this.y.redIsEven());
          }
          isSquare() {
            return !this.isInfinity() && this.y.redMul(this.z).redJacobi() !== -1;
          }
          eqX(e3) {
            if (N(e3 instanceof i), N(!e3.red), this.isInfinity())
              return false;
            const t2 = this.z.redSqr(), r2 = e3.toRed(this.curve.red).redMul(t2);
            return this.x.eq(r2);
          }
          eqR(e3) {
            if (N(e3 instanceof i), N(!e3.red), !this.curve.smallGap)
              return this.toP().eqR(e3);
            if (this.isInfinity())
              return false;
            if (e3.cmp(this.curve.p) >= 0)
              return false;
            const t2 = this.z.redSqr(), r2 = e3.toRed(this.curve.red).redMul(t2);
            if (this.x.eq(r2))
              return true;
            if (this.curve.highOrder)
              return false;
            if (e3.cmp(this.curve.pmodn) >= 0)
              return false;
            const n2 = this.curve.redN.redMul(t2);
            return r2.redIAdd(n2), this.x.eq(r2);
          }
          toP() {
            return this.isInfinity() ? this.curve.point() : (this.normalize(), this.curve.point(this.x, this.y));
          }
          toJ() {
            return this;
          }
          encode(e3) {
            return this.toP().encode(e3);
          }
          static decode(e3, t2) {
            return p.decode(e3, t2).toJ();
          }
          encodeX() {
            return this.toP().encodeX();
          }
          static decodeEven(e3, t2) {
            return p.decodeEven(e3, t2).toJ();
          }
          static decodeSquare(e3, t2) {
            return p.decodeSquare(e3, t2).toJ();
          }
          toJSON(e3) {
            return this.toP().toJSON(e3);
          }
          toPretty() {
            return this.toP().toPretty();
          }
          static fromJSON(e3, t2) {
            return p.fromJSON(e3, t2).toJ();
          }
          [n]() {
            return this.isInfinity() ? "<JPoint: Infinity>" : "<JPoint: x=" + this.x.fromRed().toString(16, 2) + " y=" + this.y.fromRed().toString(16, 2) + " z=" + this.z.fromRed().toString(16, 2) + ">";
          }
        }
        class g extends f {
          constructor(e3) {
            super(b, "mont", e3), this.a = i.fromJSON(e3.a).toRed(this.red), this.b = i.fromJSON(e3.b).toRed(this.red), this.bi = this.b.redInvert(), this.a2 = this.a.redAdd(this.two), this.a24 = this.a2.redMul(this.i4), this.a3 = this.a.redMul(this.i3), this.a0 = this.a.redMul(this.bi), this.b0 = this.bi.redSqr(), this._finalize(e3);
          }
          static _isomorphism(e3, t2, r2) {
            N(e3 instanceof i), N(t2 instanceof i), N(r2 instanceof i);
            const n2 = e3.clone(), s2 = r2.clone();
            if (t2.redDiv(r2).redJacobi() !== 1)
              throw new Error("Invalid `b` coefficient.");
            return [n2, s2];
          }
          _short(e3, t2) {
            const {a: r2, b: n2, three: i2} = this, s2 = r2.redSqr(), o2 = s2.redMul(r2), a2 = n2.redSqr(), c2 = a2.redMul(n2), u2 = i2.redSub(s2), h2 = a2.redMuln(3), f2 = o2.redMuln(2).redISub(r2.redMuln(9)), d2 = c2.redMuln(27), p2 = u2.redDiv(h2), y2 = f2.redDiv(d2);
            return e3 != null ? l._isomorphism(p2, y2, e3, t2) : [p2, y2];
          }
          _mont(e3) {
            return g._isomorphism(this.a, this.b, e3);
          }
          _edwards(e3, t2 = false) {
            N(typeof t2 == "boolean");
            const {two: r2, bi: n2} = this, i2 = this.a.redAdd(r2).redMul(n2), s2 = this.a.redSub(r2).redMul(n2);
            return t2 && i2.swap(s2), e3 != null ? v._isomorphism(i2, s2, e3) : [i2, s2];
          }
          _scaleShort(e3) {
            N(e3 instanceof l);
            const [t2, r2] = e3._scale(this);
            return [this.field(t2.redInvert()), this.field(r2.redInvert())];
          }
          _scaleMont(e3) {
            return N(e3 instanceof g), this.g.isInfinity() || e3.g.isInfinity() ? this.field(e3.b).redDivSqrt(this.b) : this.g.y.redDiv(this.field(e3.g.y));
          }
          _scaleEdwards(e3, t2) {
            N(e3 instanceof v);
            const r2 = e3._scale(this, t2);
            return this.field(r2);
          }
          _solveY0(e3) {
            N(e3 instanceof i);
            const t2 = this.a0, r2 = this.b0, n2 = e3.redSqr();
            return n2.redMul(e3).redIAdd(t2.redMul(n2)).redIAdd(r2.redMul(e3));
          }
          _elligator2(e3) {
            const t2 = this.a0.redNeg(), r2 = this.one.redAdd(this.z.redMul(e3.redSqr()));
            r2.cinject(this.one, r2.czero());
            const n2 = t2.redMul(r2.redFermat()), i2 = n2.redNeg().redISub(this.a0), s2 = this._solveY0(n2), o2 = this._solveY0(i2), a2 = 0 | s2.redIsSquare(), c2 = n2.cinject(i2, 1 ^ a2), u2 = s2.cinject(o2, 1 ^ a2).redSqrt();
            u2.cinject(u2.redNeg(), u2.redIsOdd() ^ e3.redIsOdd());
            const h2 = this.b.redMul(c2), f2 = this.b.redMul(u2);
            return this.point(h2, f2);
          }
          _invert2(e3, t2) {
            const {x: r2, y: n2} = e3, i2 = 1 & t2, s2 = r2.redMul(this.bi), o2 = n2.redMul(this.bi), a2 = s2.redAdd(this.a0), c2 = s2;
            a2.cswap(c2, i2);
            const u2 = a2.redINeg(), h2 = c2.redMul(this.z), [f2, d2] = B(u2, h2);
            if (d2.cinject(d2.redNeg(), d2.redIsOdd() ^ o2.redIsOdd()), !f2)
              throw new Error("Invalid point.");
            return d2;
          }
          _constMul(e3, t2, r2) {
            N(e3 instanceof b);
            const n2 = e3.toX(), [i2, s2] = n2.ladderConst(t2, r2), o2 = e3.recover(i2, s2);
            return t2.isNeg() ? o2.neg() : o2;
          }
          isElliptic() {
            const e3 = this.a.redSqr();
            return !this.b.redMul(e3.redSub(this.four)).isZero();
          }
          jinv() {
            const {a: e3, three: t2, four: r2} = this, n2 = e3.redSqr(), i2 = n2.redSub(t2).redPown(3).redIMuln(256), s2 = n2.redSub(r2);
            if (s2.isZero())
              throw new Error("Curve is not elliptic.");
            return i2.redDiv(s2).fromRed();
          }
          point(e3, t2, r2 = 0) {
            return new b(this, e3, t2, r2);
          }
          jpoint(e3, t2, r2) {
            return N(e3 == null && t2 == null && r2 == null), this.point();
          }
          xpoint(e3, t2) {
            return new m(this, e3, t2);
          }
          solveY2(e3) {
            N(e3 instanceof i);
            const t2 = e3.redSqr();
            return t2.redMul(e3).redIAdd(this.a.redMul(t2)).redIAdd(e3).redMul(this.bi);
          }
          validate(e3) {
            if (N(e3 instanceof b), e3.isInfinity())
              return true;
            const {x: t2, y: r2} = e3, n2 = this.solveY2(t2);
            return r2.redSqr().eq(n2);
          }
          pointFromX(e3, t2 = null) {
            N(e3 instanceof i), N(t2 == null || typeof t2 == "boolean"), e3.red || (e3 = e3.toRed(this.red));
            const r2 = this.solveY(e3);
            if (t2 != null) {
              if (r2.isZero() && t2)
                throw new Error("Invalid point.");
              r2.redIsOdd() !== t2 && r2.redINeg();
            }
            return this.point(e3, r2);
          }
          isIsomorphic(e3, t2) {
            if (N(e3 instanceof f), !e3.p.eq(this.p))
              return false;
            if (e3.type === "mont") {
              const t3 = this.field(e3.a), r2 = this.field(e3.b);
              if (!this.a.eq(t3))
                return false;
              if (this.b.isZero())
                return false;
              return r2.redDiv(this.b).redJacobi() === 1;
            }
            return e3.isIsomorphic(this, t2);
          }
          isIsogenous(e3) {
            return N(e3 instanceof f), e3.type !== "mont" && e3.isIsogenous(this);
          }
          pointFromShort(e3) {
            if (N(e3 instanceof p), this.isIsomorphic(e3.curve)) {
              if (e3.isInfinity())
                return this.point();
              const {a3: t2, b: r2} = this, [n2, i2] = this._scale(e3.curve), s2 = this.field(e3.x).redMul(n2), o2 = this.field(e3.y).redMul(i2), a2 = r2.redMul(s2).redISub(t2), c2 = r2.redMul(o2);
              return this.point(a2, c2);
            }
            throw new Error("Not implemented.");
          }
          pointFromMont(e3) {
            if (N(e3 instanceof b), this.isIsomorphic(e3.curve)) {
              if (e3.isInfinity())
                return this.point();
              const t2 = this._scale(e3.curve), r2 = this.field(e3.x), n2 = this.field(e3.y), i2 = r2, s2 = t2.redMul(n2);
              return this.point(i2, s2);
            }
            throw new Error("Not implemented.");
          }
          pointFromEdwards(e3) {
            N(e3 instanceof w), N(e3.curve.p.eq(this.p));
            const t2 = this.field(e3.x), r2 = this.field(e3.y), n2 = this.field(e3.z);
            if (this.isIsogenous(e3.curve)) {
              if (e3.isInfinity())
                return this.point();
              if (e3.x.isZero())
                return this.point(this.zero, this.zero);
              const i2 = n2.redSqr().redIMuln(2), s2 = r2.redSqr(), o2 = t2.redSqr(), a2 = i2.redISub(o2).redISub(s2).redMul(r2), c2 = o2.redMul(t2);
              return this.cpoint(s2, o2, a2, c2);
            }
            if (this.isIsomorphic(e3.curve, true)) {
              if (e3.isInfinity())
                return this.point();
              if (e3.x.isZero())
                return this.point(this.zero, this.zero);
              const i2 = this._scale(e3.curve, true), s2 = r2.redAdd(n2), o2 = r2.redSub(n2), a2 = i2.redMul(n2).redMul(s2), c2 = t2.redMul(o2);
              return this.cpoint(s2, o2, a2, c2);
            }
            if (this.isIsomorphic(e3.curve, false)) {
              if (e3.isInfinity())
                return this.point();
              if (e3.x.isZero())
                return this.point(this.zero, this.zero);
              const i2 = this._scale(e3.curve, false), s2 = n2.redAdd(r2), o2 = n2.redSub(r2), a2 = i2.redMul(n2).redMul(s2), c2 = t2.redMul(o2);
              return this.cpoint(s2, o2, a2, c2);
            }
            throw new Error("Not implemented.");
          }
          pointFromUniform(e3) {
            if (N(e3 instanceof i), this.z.isZero() || this.a.isZero())
              throw new Error("Not implemented.");
            return this._elligator2(e3);
          }
          pointToUniform(e3, t2) {
            if (N(e3 instanceof b), N(t2 >>> 0 === t2), this.z.isZero() || this.a.isZero())
              throw new Error("Not implemented.");
            if (e3.isInfinity())
              throw new Error("Invalid point.");
            const r2 = (t2 >>> 4 & 15) % this.torsion.length, n2 = e3.add(this.torsion[r2]);
            return this._invert2(n2, t2);
          }
          decodePoint(e3, t2) {
            return b.decode(this, e3, t2);
          }
          encodeX(e3) {
            return N(e3 instanceof m), e3.encode();
          }
          decodeX(e3) {
            return m.decode(this, e3);
          }
          toShort(e3, t2, r2 = null) {
            const [n2, i2] = this._short(e3, t2), s2 = new l({red: this.red, prime: this.prime, p: this.p, a: n2, b: i2, n: this.n, h: this.h});
            if (r2 != null) {
              const [, e4] = s2._scale(this);
              e4.redIsOdd() !== r2 && e4.redINeg();
            }
            this.g.isInfinity() || (s2.g = s2.pointFromMont(this.g));
            for (let o2 = 0; o2 < this.h.word(0); o2++)
              s2.torsion[o2] = s2.pointFromMont(this.torsion[o2]);
            return s2;
          }
          toMont(e3, t2 = null) {
            const [r2, n2] = this._mont(e3), i2 = new g({red: this.red, prime: this.prime, p: this.p, a: r2, b: n2, n: this.n, h: this.h, z: this.z});
            if (t2 != null) {
              const e4 = i2._scale(this);
              e4.redIsOdd() !== t2 && e4.redINeg();
            }
            this.g.isInfinity() || (i2.g = i2.pointFromMont(this.g));
            for (let s2 = 0; s2 < this.h.word(0); s2++)
              i2.torsion[s2] = i2.pointFromMont(this.torsion[s2]);
            return i2;
          }
          toEdwards(e3, t2, r2 = null) {
            const [n2, i2] = this._edwards(e3, t2), s2 = new v({red: this.red, prime: this.prime, p: this.p, a: n2, d: i2, n: this.n, h: this.h, z: this.z});
            if (r2 != null) {
              const e4 = s2._scale(this, t2);
              e4.redIsOdd() !== r2 && e4.redINeg();
            }
            if (this.g.isInfinity() || (s2.g = s2.pointFromMont(this.g), s2.g.normalize()), s2.isComplete())
              for (let o2 = 0; o2 < this.h.word(0); o2++)
                s2.torsion[o2] = s2.pointFromMont(this.torsion[o2]), s2.torsion[o2].normalize();
            return s2;
          }
          pointFromJSON(e3) {
            return b.fromJSON(this, e3);
          }
          toJSON(e3) {
            const t2 = super.toJSON(e3);
            return t2.a = this.a.fromRed().toJSON(), t2.b = this.b.fromRed().toJSON(), t2;
          }
        }
        class b extends d {
          constructor(e3, t2, r2, n2) {
            N(e3 instanceof g), super(e3, s), this.x = this.curve.zero, this.y = this.curve.zero, this.inf = 1, t2 != null && this._init(t2, r2, n2);
          }
          _init(e3, t2, r2) {
            N(e3 instanceof i), N(t2 instanceof i), this.x = e3, this.y = t2, this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = 0 | r2;
          }
          clone() {
            return this.curve.point(this.x.clone(), this.y.clone(), this.inf);
          }
          swap(e3, t2) {
            N(e3 instanceof b);
            const r2 = 1 & (t2 >> 31 | -t2 >> 31), n2 = this.inf, i2 = e3.inf;
            return this.x.cswap(e3.x, t2), this.y.cswap(e3.y, t2), this.inf = n2 & (1 ^ r2) | i2 & r2, e3.inf = i2 & (1 ^ r2) | n2 & r2, this;
          }
          scale(e3) {
            return this.clone();
          }
          randomize(e3) {
            return this.clone();
          }
          neg() {
            return this.inf ? this : this.curve.point(this.x, this.y.redNeg());
          }
          add(e3) {
            if (N(e3 instanceof b), this.inf)
              return e3;
            if (e3.inf)
              return this;
            if (this.x.eq(e3.x))
              return this.y.eq(e3.y) ? this.dbl() : this.curve.point();
            const t2 = e3.x.redSub(this.x), r2 = e3.y.redSub(this.y).redDiv(t2), n2 = this.curve.b.redMul(r2.redSqr()).redISub(this.curve.a).redISub(this.x).redISub(e3.x), i2 = r2.redMul(this.x.redSub(n2)).redISub(this.y);
            return this.curve.point(n2, i2);
          }
          dbl() {
            if (this.inf)
              return this;
            if (this.y.isZero())
              return this.curve.point();
            const e3 = this.x.redSqr().redIMuln(3), t2 = this.curve.a.redMul(this.x).redIMuln(2), r2 = e3.redIAdd(t2).redIAdd(this.curve.one), n2 = this.curve.b.redMul(this.y).redIMuln(2), i2 = r2.redDiv(n2), s2 = this.curve.b.redMul(i2.redSqr()).redISub(this.curve.a).redISub(this.x).redISub(this.x), o2 = i2.redMul(this.x.redSub(s2)).redISub(this.y);
            return this.curve.point(s2, o2);
          }
          uadd(e3) {
            N(e3 instanceof b);
            const t2 = e3.x.redSub(this.x), r2 = e3.y.redSub(this.y), n2 = this.x.redSqr().redIMuln(3), i2 = this.curve.a.redMul(this.x).redIMuln(2), s2 = n2.redIAdd(i2).redIAdd(this.curve.one), o2 = this.curve.b.redMul(this.y).redIMuln(2), a2 = t2.czero() & r2.czero();
            r2.cinject(s2, a2), t2.cinject(o2, a2);
            const c2 = t2.czero() & (1 ^ (this.inf | e3.inf));
            t2.cinject(this.curve.one, t2.czero());
            const u2 = r2.redMul(t2.redFermat()), h2 = this.curve.b.redMul(u2.redSqr()).redISub(this.curve.a).redISub(this.x).redISub(e3.x), f2 = u2.redMul(this.x.redSub(h2)).redISub(this.y), d2 = c2 | this.inf & e3.inf;
            return h2.cinject(e3.x, this.inf), f2.cinject(e3.y, this.inf), h2.cinject(this.x, e3.inf), f2.cinject(this.y, e3.inf), h2.cinject(this.curve.zero, d2), f2.cinject(this.curve.zero, d2), this.curve.point(h2, f2, d2);
          }
          udbl() {
            return this.uadd(this);
          }
          recover(e3, t2) {
            if (N(e3 instanceof m), N(t2 instanceof m), this.inf)
              return this.curve.point();
            const r2 = this.x.redMul(e3.z), n2 = e3.x.redAdd(r2), i2 = e3.x.redSub(r2).redSqr().redMul(t2.x), s2 = this.curve.a.redMul(e3.z).redIMuln(2), o2 = n2.redIAdd(s2), a2 = this.x.redMul(e3.x).redIAdd(e3.z), c2 = o2.redMul(a2), u2 = s2.redMul(e3.z), h2 = c2.redISub(u2).redMul(t2.z), f2 = this.curve.b.redMul(this.y).redIMuln(2).redMul(e3.z).redMul(t2.z), d2 = f2.redMul(e3.x), l2 = h2.redISub(i2), p2 = f2.redMul(e3.z);
            if (p2.isZero())
              return this.curve.point();
            const y2 = p2.redInvert(), g2 = d2.redMul(y2), b2 = l2.redMul(y2);
            return this.curve.point(g2, b2);
          }
          getX() {
            if (this.inf)
              throw new Error("Invalid point.");
            return this.x.fromRed();
          }
          getY() {
            if (this.inf)
              throw new Error("Invalid point.");
            return this.y.fromRed();
          }
          eq(e3) {
            return N(e3 instanceof b), this === e3 || (this.inf ? e3.inf !== 0 : !e3.inf && (this.x.eq(e3.x) && this.y.eq(e3.y)));
          }
          cmp(e3) {
            return N(e3 instanceof b), this.inf && !e3.inf ? -1 : !this.inf && e3.inf ? 1 : this.inf && e3.inf ? 0 : this.order().cmp(e3.order()) || this.getX().cmp(e3.getX()) || this.getY().cmp(e3.getY());
          }
          isInfinity() {
            return this.inf !== 0;
          }
          isOrder2() {
            return !this.inf && this.y.isZero();
          }
          isOdd() {
            return !this.inf && this.y.redIsOdd();
          }
          isEven() {
            return !this.inf && this.y.redIsEven();
          }
          toP() {
            return this;
          }
          toJ() {
            return this;
          }
          toX() {
            return this.inf ? this.curve.xpoint() : this.curve.xpoint(this.x, this.curve.one);
          }
          encode() {
            return this.toX().encode();
          }
          static decode(e3, t2, r2) {
            return N(e3 instanceof g), e3.decodeX(t2).toP(r2);
          }
          toJSON(e3) {
            if (this.inf)
              return [];
            return [this.getX().toJSON(), this.getY().toJSON()];
          }
          toPretty() {
            if (this.inf)
              return [];
            const e3 = 2 * this.curve.fieldSize;
            return [j(this.getX(), e3), j(this.getY(), e3)];
          }
          static fromJSON(e3, t2) {
            if (N(e3 instanceof g), N(Array.isArray(t2)), N(t2.length === 0 || t2.length === 2 || t2.length === 3), t2.length === 0)
              return e3.point();
            const r2 = i.fromJSON(t2[0]), n2 = i.fromJSON(t2[1]);
            return e3.point(r2, n2);
          }
          [n]() {
            return this.inf ? "<MontPoint: Infinity>" : "<MontPoint: x=" + this.x.fromRed().toString(16, 2) + " y=" + this.y.fromRed().toString(16, 2) + ">";
          }
        }
        class m extends d {
          constructor(e3, t2, r2) {
            N(e3 instanceof g), super(e3, a), this.x = this.curve.one, this.z = this.curve.zero, t2 != null && this._init(t2, r2);
          }
          _init(e3, t2) {
            N(e3 instanceof i), N(t2 == null || t2 instanceof i), this.x = e3, this.z = t2 || this.curve.one, this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red));
          }
          clone() {
            return this.curve.xpoint(this.x.clone(), this.z.clone());
          }
          swap(e3, t2) {
            return N(e3 instanceof m), this.x.cswap(e3.x, t2), this.z.cswap(e3.z, t2), this;
          }
          precompute(e3, t2) {
            return this;
          }
          validate() {
            if (this.isInfinity())
              return true;
            const {x: e3, z: t2} = this, r2 = e3.redSqr(), n2 = r2.redMul(e3), i2 = t2.redSqr(), s2 = this.curve.a.redMul(r2).redMul(t2);
            return n2.redIAdd(s2).redIAdd(e3.redMul(i2)).redMul(this.curve.bi).redMul(t2).redJacobi() !== -1;
          }
          normalize() {
            return this.isInfinity() || this.z.eq(this.curve.one) || (this.x = this.x.redDiv(this.z), this.z = this.curve.one), this;
          }
          scale(e3) {
            if (N(e3 instanceof i), this.isInfinity())
              return this.curve.xpoint();
            const t2 = this.x.redMul(e3), r2 = this.z.redMul(e3);
            return this.curve.xpoint(t2, r2);
          }
          neg() {
            return this;
          }
          dbl() {
            const e3 = this.x.redAdd(this.z).redSqr(), t2 = this.x.redSub(this.z).redSqr(), r2 = e3.redSub(t2), n2 = e3.redMul(t2), i2 = r2.redMul(t2.redIAdd(this.curve.a24.redMul(r2)));
            return this.curve.xpoint(n2, i2);
          }
          diffAdd(e3, t2) {
            N(e3 instanceof m), N(t2 instanceof m);
            const r2 = e3.x.redAdd(e3.z), n2 = e3.x.redSub(e3.z), i2 = t2.x.redAdd(t2.z), s2 = t2.x.redSub(t2.z).redMul(r2), o2 = i2.redMul(n2), a2 = this.z.redMul(s2.redAdd(o2).redSqr()), c2 = this.x.redMul(s2.redISub(o2).redSqr());
            return this.curve.xpoint(a2, c2);
          }
          diffAddDbl(e3, t2) {
            N(e3 instanceof m), N(t2 instanceof m);
            const r2 = e3.x.redAdd(e3.z), n2 = r2.redSqr(), i2 = e3.x.redSub(e3.z), s2 = i2.redSqr(), o2 = n2.redSub(s2), a2 = t2.x.redAdd(t2.z), c2 = t2.x.redSub(t2.z).redMul(r2), u2 = a2.redMul(i2), h2 = this.z.redMul(c2.redAdd(u2).redSqr()), f2 = this.x.redMul(c2.redISub(u2).redSqr()), d2 = n2.redMul(s2), l2 = o2.redMul(s2.redIAdd(this.curve.a24.redMul(o2)));
            return [this.curve.xpoint(d2, l2), this.curve.xpoint(h2, f2)];
          }
          getX() {
            if (this.isInfinity())
              throw new Error("Invalid point.");
            return this.normalize(), this.x.fromRed();
          }
          getY(e3) {
            return this.toP(e3).getY();
          }
          eq(e3) {
            if (N(e3 instanceof m), this === e3)
              return true;
            if (this.isInfinity())
              return e3.isInfinity();
            if (e3.isInfinity())
              return false;
            if (this.z.eq(e3.z))
              return this.x.eq(e3.x);
            const t2 = this.x.redMul(e3.z), r2 = e3.x.redMul(this.z);
            return t2.eq(r2);
          }
          cmp(e3) {
            N(e3 instanceof m);
            const t2 = this.isInfinity(), r2 = e3.isInfinity();
            return t2 && !r2 ? -1 : !t2 && r2 ? 1 : t2 && r2 ? 0 : this.order().cmp(e3.order()) || this.getX().cmp(e3.getX());
          }
          isInfinity() {
            return this.z.isZero();
          }
          isOrder2() {
            return !this.isInfinity() && this.x.isZero();
          }
          isOdd() {
            return false;
          }
          isEven() {
            return false;
          }
          hasTorsion() {
            return !this.isInfinity() && (!!this.x.isZero() || super.hasTorsion());
          }
          order() {
            try {
              return this.toP().order();
            } catch (e3) {
              return new i(1);
            }
          }
          jmul(e3) {
            return this.ladder(e3)[0];
          }
          jmulSimple(e3) {
            return this.ladderSimple(e3)[0];
          }
          jmulBlind(e3, t2) {
            return this.ladderBlind(e3, t2)[0];
          }
          jmulConst(e3, t2) {
            return this.ladderConst(e3, t2)[0];
          }
          jmulAdd(e3, t2, r2) {
            throw new Error("Not implemented.");
          }
          jmulAddSimple(e3, t2, r2) {
            throw new Error("Not implemented.");
          }
          ladder(e3) {
            N(e3 instanceof i), N(!e3.red);
            const t2 = e3.bitLength();
            let r2 = this.curve.xpoint(), n2 = this;
            for (let i2 = t2 - 1; i2 >= 0; i2--) {
              e3.bit(i2) === 0 ? [r2, n2] = this.diffAddDbl(r2, n2) : [n2, r2] = this.diffAddDbl(n2, r2);
            }
            return [r2, n2];
          }
          ladderSimple(e3) {
            N(e3 instanceof i), N(!e3.red);
            const t2 = e3.bitLength();
            let r2 = this.curve.xpoint(), n2 = this;
            for (let i2 = t2 - 1; i2 >= 0; i2--) {
              e3.bit(i2) === 0 ? (n2 = this.diffAdd(n2, r2), r2 = r2.dbl()) : (r2 = this.diffAdd(r2, n2), n2 = n2.dbl());
            }
            return [r2, n2];
          }
          ladderBlind(e3, t2) {
            return t2 ? this.randomize(t2).ladder(e3) : this.ladder(e3);
          }
          ladderConst(e3, t2) {
            N(e3 instanceof i), N(!e3.red);
            const r2 = Math.max(e3.bitLength(), this.curve.fieldBits), n2 = r2 + 7 >>> 3, s2 = e3.toArray("le", n2), o2 = t2 ? this.randomize(t2) : this;
            let a2 = this.curve.xpoint().clone(), c2 = o2.clone(), u2 = 0;
            for (let i2 = r2 - 1; i2 >= 0; i2--) {
              const e4 = s2[i2 >> 3] >> (7 & i2) & 1;
              a2.swap(c2, u2 ^ e4), [a2, c2] = o2.diffAddDbl(a2, c2), u2 = e4;
            }
            return a2.swap(c2, u2), [a2, c2];
          }
          toP(e3 = null) {
            return N(e3 == null || typeof e3 == "boolean"), this.isInfinity() ? this.curve.point() : (this.normalize(), this.curve.pointFromX(this.x, e3));
          }
          toJ() {
            return this;
          }
          toX() {
            return this;
          }
          key() {
            if (this.isInfinity())
              return this.curve.uid + ":oo";
            this.normalize();
            const e3 = this.getX().toString(16);
            return `${this.curve.uid}:${e3}`;
          }
          encode() {
            return this.curve.encodeField(this.getX());
          }
          static decode(e3, t2) {
            N(e3 instanceof g);
            const r2 = e3.decodeField(t2);
            r2.iumaskn(e3.fieldBits);
            const n2 = e3.xpoint(r2, e3.one);
            return N(!n2.isInfinity()), n2;
          }
          toJSON(e3) {
            return this.toP().toJSON(e3);
          }
          toPretty() {
            return this.toP().toPretty();
          }
          static fromJSON(e3, t2) {
            return b.fromJSON(e3, t2).toX();
          }
          [n]() {
            return this.isInfinity() ? "<XPoint: Infinity>" : "<XPoint: x=" + this.x.fromRed().toString(16, 2) + " z=" + this.z.fromRed().toString(16, 2) + ">";
          }
        }
        class v extends f {
          constructor(e3) {
            super(w, "edwards", e3), this.a = i.fromJSON(e3.a).toRed(this.red), this.d = i.fromJSON(e3.d).toRed(this.red), this.s = i.fromJSON(e3.s || "0").toRed(this.red), this.si = this.s.isZero() ? this.zero : this.s.redInvert(), this.k = this.d.redMuln(2), this.smi = -this.d.redNeg().word(0), this.ad6 = this.a.redAdd(this.d).redMul(this.i6), this.twisted = !this.a.eq(this.one), this.oneA = this.a.eq(this.one), this.mOneA = this.a.eq(this.one.redNeg()), this.smallD = this.prime != null && this.d.redNeg().length === 1, this.alt = null, this._finalize(e3);
          }
          static _isomorphism(e3, t2, r2) {
            N(e3 instanceof i), N(t2 instanceof i), N(r2 instanceof i);
            const n2 = r2.clone(), s2 = r2.redMul(t2).redDiv(e3);
            if (e3.redDiv(r2).redJacobi() !== 1)
              throw new Error("Invalid `a` coefficient.");
            return [n2, s2];
          }
          _short(e3, t2) {
            const {a: r2, d: n2} = this, i2 = r2.redSqr(), s2 = i2.redMul(r2), o2 = n2.redSqr(), a2 = o2.redMul(n2), c2 = r2.redMul(n2).redIMuln(14), u2 = i2.redMul(n2), h2 = r2.redMul(o2), f2 = u2.redIAdd(h2).redIMuln(33), d2 = i2.redAdd(c2).redIAdd(o2).redDivn(-48), p2 = f2.redISub(s2).redISub(a2).redDivn(864);
            return e3 != null ? l._isomorphism(d2, p2, e3, t2) : [d2, p2];
          }
          _mont(e3, t2 = false) {
            let r2, n2;
            N(typeof t2 == "boolean"), t2 ? (r2 = this.d.redAdd(this.a), n2 = this.d.redSub(this.a)) : (r2 = this.a.redAdd(this.d), n2 = this.a.redSub(this.d));
            const i2 = n2.redInvert(), s2 = r2.redMuln(2).redMul(i2), o2 = i2.redMuln(4);
            return e3 != null ? g._isomorphism(s2, o2, e3) : [s2, o2];
          }
          _edwards(e3) {
            return v._isomorphism(this.a, this.d, e3);
          }
          _scaleShort(e3) {
            N(e3 instanceof l);
            const [t2, r2] = e3._scale(this);
            return [this.field(t2.redInvert()), this.field(r2.redInvert())];
          }
          _scaleMont(e3, t2 = false) {
            if (N(e3 instanceof g), N(typeof t2 == "boolean"), this.g.isInfinity() || e3.g.isInfinity()) {
              const [r3] = e3._edwards(null, t2);
              return this.field(r3).redDivSqrt(this.a);
            }
            const r2 = e3.g.x.redDiv(e3.g.y);
            return this.g.x.redDiv(this.field(r2));
          }
          _scaleEdwards(e3) {
            return N(e3 instanceof v), this.g.isInfinity() || e3.g.isInfinity() ? this.field(e3.a).redDivSqrt(this.a) : this.g.x.redDiv(this.field(e3.g.x));
          }
          _mulA(e3) {
            return N(e3 instanceof i), this.oneA ? e3.clone() : this.mOneA ? e3.redNeg() : this.a.redMul(e3);
          }
          _mulD(e3) {
            return N(e3 instanceof i), this.smallD ? e3.redMuln(this.smi) : this.d.redMul(e3);
          }
          _elligator1(e3) {
            const {s: t2, si: r2, i2: n2, one: i2, two: s2} = this, o2 = r2.redSqr().redIMuln(2), a2 = t2.redSqr().redMul(n2), c2 = a2.redSqr(), u2 = o2.redAdd(a2), h2 = u2.redSqr().redISub(s2), f2 = o2.redSub(i2), d2 = this.p.subn(2), l2 = this.p.subn(1).iushrn(1), p2 = this.p.addn(1).iushrn(2), y2 = i2.redSub(e3), g2 = i2.redAdd(e3), b2 = y2.redMul(g2.redPow(d2)), m2 = b2.redSqr(), v2 = m2.redMul(b2), w2 = v2.redMul(m2).redAdd(h2.redMul(v2)).redIAdd(b2), _2 = w2.redPow(l2), E2 = m2.redAdd(c2).redPow(l2), S2 = _2.redMul(E2), A2 = _2.redMul(b2), I2 = _2.redMul(w2).redPow(p2).redMul(S2), k2 = i2.redAdd(A2), R2 = u2.redMul(A2), T2 = k2.redSqr(), C2 = f2.redMul(t2).redMul(A2).redMul(k2), M2 = I2.cinject(this.one, b2.czero()), x2 = R2.redSub(T2), N2 = R2.redAdd(T2);
            return this.cpoint(C2, M2, x2, N2);
          }
          _invert1(e3, t2) {
            const {s: r2, si: n2, i2, one: s2} = this, {x: o2, y: a2, z: c2} = e3, u2 = 1 & t2, h2 = n2.redSqr().redIMuln(2), f2 = r2.redSqr().redMul(i2), d2 = f2.redSqr(), l2 = h2.redAdd(f2), p2 = h2.redSub(s2), y2 = this.p.subn(2), g2 = this.p.subn(1).iushrn(1), b2 = this.p.addn(1).iushrn(2), m2 = a2.redSub(c2), v2 = a2.redAdd(c2).redIMuln(2), w2 = m2.redMul(v2.redPow(y2)), _2 = s2.redAdd(w2.redMul(l2)), E2 = _2.redSqr().redISub(s2), S2 = E2.redPow(b2), A2 = S2.redSqr().ceq(E2), I2 = S2.redSub(_2), k2 = s2.redAdd(I2), R2 = p2.redMul(r2).redMul(I2).redMul(k2).redMul(o2.redMul(c2)), T2 = I2.redSqr().redIAdd(d2), C2 = R2.redMul(T2).redPow(g2).redMul(I2), M2 = s2.redSub(C2), x2 = s2.redAdd(C2), N2 = M2.redMul(x2.redPow(y2));
            if (N2.cinject(N2.redNeg(), N2.redIsOdd() ^ u2), !A2)
              throw new Error("Invalid point.");
            return N2;
          }
          _alt() {
            return this.alt || (this.alt = this.toMont()), this.alt;
          }
          isElliptic() {
            const e3 = this.a.redMul(this.d), t2 = this.a.redSub(this.d);
            return !e3.redMul(t2).isZero();
          }
          jinv() {
            const {a: e3, d: t2} = this, r2 = e3.redMul(t2), n2 = e3.redSub(t2).redPown(4), i2 = e3.redSqr(), s2 = t2.redSqr(), o2 = i2.redAdd(r2.redMuln(14)).redIAdd(s2).redPown(3).redIMuln(16), a2 = r2.redMul(n2);
            if (a2.isZero())
              throw new Error("Curve is not elliptic.");
            return o2.redDiv(a2).fromRed();
          }
          isComplete() {
            return this.a.redJacobi() === 1 && this.d.redJacobi() === -1;
          }
          point(e3, t2, r2, n2) {
            return new w(this, e3, t2, r2, n2);
          }
          jpoint(e3, t2, r2) {
            return N(e3 == null && t2 == null && r2 == null), this.point();
          }
          cpoint(e3, t2, r2, n2) {
            N(e3 instanceof i), N(t2 instanceof i), N(r2 instanceof i), N(n2 instanceof i);
            const s2 = e3.redMul(n2), o2 = r2.redMul(t2), a2 = t2.redMul(n2), c2 = e3.redMul(r2);
            return this.point(s2, o2, a2, c2);
          }
          solveX2(e3) {
            N(e3 instanceof i);
            const t2 = e3.redSqr(), r2 = this._mulD(t2).redISub(this.a);
            return t2.redISub(this.one).redDiv(r2);
          }
          solveX(e3) {
            const t2 = e3.redSqr(), r2 = this._mulD(t2).redISub(this.a);
            return t2.redISub(this.one).redDivSqrt(r2);
          }
          solveY2(e3) {
            N(e3 instanceof i);
            const t2 = e3.redSqr(), r2 = this._mulA(t2).redISub(this.one), n2 = this._mulD(t2).redISub(this.one);
            return r2.redDiv(n2);
          }
          solveY(e3) {
            const t2 = e3.redSqr(), r2 = this._mulA(t2).redISub(this.one), n2 = this._mulD(t2).redISub(this.one);
            return r2.redDivSqrt(n2);
          }
          validate(e3) {
            if (N(e3 instanceof w), e3.zOne) {
              const t3 = e3.x.redSqr(), r3 = e3.y.redSqr(), n3 = this._mulD(t3).redMul(r3), i3 = this._mulA(t3).redIAdd(r3), s3 = this.one.redAdd(n3), o3 = e3.t, a3 = e3.x.redMul(e3.y);
              return i3.eq(s3) && o3.eq(a3);
            }
            const t2 = e3.x.redSqr(), r2 = e3.y.redSqr(), n2 = e3.z.redSqr(), i2 = n2.redSqr(), s2 = this._mulD(t2).redMul(r2), o2 = this._mulA(t2).redIAdd(r2).redMul(n2), a2 = i2.redIAdd(s2), c2 = e3.t.redMul(e3.z), u2 = e3.x.redMul(e3.y);
            return o2.eq(a2) && c2.eq(u2);
          }
          pointFromX(e3, t2 = null) {
            N(e3 instanceof i), N(t2 == null || typeof t2 == "boolean"), e3.red || (e3 = e3.toRed(this.red));
            const r2 = this.solveY(e3);
            if (t2 != null) {
              if (r2.isZero() && t2)
                throw new Error("Invalid point.");
              r2.redIsOdd() !== t2 && r2.redINeg();
            }
            return this.point(e3, r2);
          }
          pointFromY(e3, t2 = null) {
            N(e3 instanceof i), N(t2 == null || typeof t2 == "boolean"), e3.red || (e3 = e3.toRed(this.red));
            const r2 = this.solveX(e3);
            if (t2 != null) {
              if (r2.isZero() && t2)
                throw new Error("Invalid point.");
              r2.redIsOdd() !== t2 && r2.redINeg();
            }
            return this.point(r2, e3);
          }
          isIsomorphic(e3, t2 = false) {
            if (N(e3 instanceof f), N(typeof t2 == "boolean"), !e3.p.eq(this.p))
              return false;
            if (e3.type === "short")
              return e3.isIsomorphic(this);
            if (e3.type === "mont") {
              const r2 = this.field(e3.a);
              let n2, i2;
              return t2 ? (n2 = this.d.redAdd(this.a), i2 = this.d.redSub(this.a)) : (n2 = this.a.redAdd(this.d), i2 = this.a.redSub(this.d)), r2.redMul(i2).eq(n2.redIMuln(2));
            }
            if (e3.type === "edwards") {
              const t3 = this.field(e3.a), r2 = this.field(e3.d);
              return this.a.redMul(r2).eq(t3.redMul(this.d));
            }
            return false;
          }
          isIsogenous(e3) {
            if (N(e3 instanceof f), !e3.p.eq(this.p))
              return false;
            if (e3.type === "mont") {
              if (!this.a.eq(this.one))
                return false;
              const t2 = this.field(e3.a), r2 = this.field(e3.b), n2 = this.two.redSub(this.d.redMuln(4));
              return t2.eq(n2) && r2.eq(this.one);
            }
            if (e3.type === "edwards") {
              const t2 = this.field(e3.a), r2 = this.field(e3.d);
              return t2.eq(this.a.redNeg()) && r2.eq(this.d.redSub(this.a));
            }
            return false;
          }
          pointFromShort(e3) {
            if (N(e3 instanceof p), this.isIsomorphic(e3.curve)) {
              if (e3.isInfinity())
                return this.point();
              if (e3.y.isZero())
                return this.point(this.zero, this.one.redNeg());
              const {a: t2, d: r2} = this, [n2, i2] = this._scale(e3.curve), s2 = t2.redMuln(5), o2 = r2.redMuln(5), a2 = this.field(e3.x).redMul(n2), c2 = this.field(e3.y).redMul(i2), u2 = a2.redMuln(6), h2 = a2.redMuln(12), f2 = u2.redSub(t2).redISub(r2), d2 = c2.redMuln(6), l2 = h2.redSub(s2).redIAdd(r2), p2 = h2.redAdd(t2).redISub(o2);
              return this.cpoint(f2, d2, l2, p2);
            }
            throw new Error("Not implemented.");
          }
          pointFromMont(e3) {
            N(e3 instanceof b), N(e3.curve.p.eq(this.p));
            const t2 = this.field(e3.x), r2 = this.field(e3.y);
            if (this.isIsogenous(e3.curve)) {
              if (e3.isInfinity())
                return this.point();
              if (e3.x.isZero())
                return this.point();
              const n2 = t2.redSqr(), i2 = n2.redMul(t2), s2 = i2.redMul(t2), o2 = s2.redMul(t2), a2 = r2.redSqr(), c2 = r2.redMuln(4), u2 = n2.redSub(this.one), h2 = n2.redMuln(2), f2 = a2.redMuln(4), d2 = i2.redIMuln(2), l2 = t2.redMul(a2).redIMuln(4), p2 = n2.redMul(a2).redIMuln(2), y2 = a2.redIMuln(2), g2 = c2.redMul(u2), b2 = s2.redISub(h2).redIAdd(f2).redIAdd(this.one), m2 = o2.redSub(d2).redISub(l2).redIAdd(t2).redINeg(), v2 = o2.redISub(p2).redISub(d2).redISub(y2).redIAdd(t2);
              return this.cpoint(g2, b2, m2, v2).divn(4);
            }
            if (this.isIsomorphic(e3.curve, true)) {
              if (e3.isInfinity())
                return this.point();
              if (e3.x.isZero())
                return this.point(this.zero, this.one.redNeg());
              const n2 = this._scale(e3.curve, true).redMul(t2), i2 = r2, s2 = t2.redAdd(this.one), o2 = t2.redSub(this.one);
              return this.cpoint(n2, i2, s2, o2);
            }
            if (this.isIsomorphic(e3.curve, false)) {
              if (e3.isInfinity())
                return this.point();
              if (e3.x.isZero())
                return this.point(this.zero, this.one.redNeg());
              const n2 = this._scale(e3.curve, false).redMul(t2), i2 = r2, s2 = t2.redSub(this.one), o2 = t2.redAdd(this.one);
              return this.cpoint(n2, i2, s2, o2);
            }
            throw new Error("Not implemented.");
          }
          pointFromEdwards(e3) {
            N(e3 instanceof w), N(e3.curve.p.eq(this.p));
            const t2 = this.field(e3.curve.a), r2 = this.field(e3.x), n2 = this.field(e3.y), i2 = this.field(e3.z), s2 = this.field(e3.t);
            if (this.isIsogenous(e3.curve)) {
              const e4 = r2.redMul(n2), s3 = r2.redSqr(), o2 = n2.redSqr(), a2 = i2.redSqr(), c2 = t2.redMul(s3), u2 = e4.redIMuln(2), h2 = o2.redSub(c2), f2 = o2.redAdd(c2), d2 = a2.redIMuln(2).redISub(f2), l2 = this.cpoint(u2, h2, f2, d2);
              return this.twisted ? l2 : l2.divn(4);
            }
            if (this.isIsomorphic(e3.curve)) {
              const t3 = this._scale(e3.curve), o2 = t3.redMul(r2), a2 = n2, c2 = i2, u2 = t3.redMul(s2);
              return this.point(o2, a2, c2, u2);
            }
            throw new Error("Not implemented.");
          }
          pointFromUniform(e3, t2 = null) {
            N(e3 instanceof i), N(e3.red === this.red), N(t2 == null || t2 instanceof g), t2 || (t2 = this._alt());
            const r2 = t2.field(e3), n2 = t2.pointFromUniform(r2);
            return this.pointFromMont(n2);
          }
          pointToUniform(e3, t2, r2 = null) {
            N(e3 instanceof w), N(t2 >>> 0 === t2), N(r2 == null || r2 instanceof g), r2 || (r2 = this._alt());
            const n2 = (t2 >> 4 & 15) % this.torsion.length, i2 = e3.add(this.torsion[n2]), s2 = r2.pointFromEdwards(i2), o2 = r2.pointToUniform(s2, 15 & t2);
            return this.field(o2);
          }
          pointFromHash(e3, t2, r2 = null) {
            N(r2 == null || r2 instanceof g), r2 || (r2 = this._alt());
            const n2 = r2.pointFromHash(e3, t2);
            return this.pointFromMont(n2);
          }
          pointToHash(e3, t2, r2, n2 = null) {
            N(e3 instanceof w), N(t2 >>> 0 === t2), N(n2 == null || n2 instanceof g), n2 || (n2 = this._alt());
            const i2 = t2 % this.torsion.length, s2 = e3.add(this.torsion[i2]), o2 = n2.pointFromEdwards(s2);
            return n2.pointToHash(o2, 0, r2);
          }
          decodePoint(e3) {
            return w.decode(this, e3);
          }
          toShort(e3, t2, r2 = null) {
            const [n2, i2] = this._short(e3, t2), s2 = new l({red: this.red, prime: this.prime, p: this.p, a: n2, b: i2, n: this.n, h: this.h});
            if (r2 != null) {
              const [, e4] = s2._scale(this);
              e4.redIsOdd() !== r2 && e4.redINeg();
            }
            this.g.isInfinity() || (s2.g = s2.pointFromEdwards(this.g));
            for (let o2 = 0; o2 < this.h.word(0); o2++)
              s2.torsion[o2] = s2.pointFromEdwards(this.torsion[o2]);
            return s2;
          }
          toMont(e3, t2, r2 = null) {
            const [n2, i2] = this._mont(e3, t2), s2 = new g({red: this.red, prime: this.prime, p: this.p, a: n2, b: i2, n: this.n, h: this.h, z: this.z});
            if (r2 != null) {
              const e4 = this._scale(s2, t2);
              e4.redIsOdd() !== r2 && e4.redINeg();
            }
            this.g.isInfinity() || (s2.g = s2.pointFromEdwards(this.g));
            for (let o2 = 0; o2 < this.h.word(0); o2++)
              s2.torsion[o2] = s2.pointFromEdwards(this.torsion[o2]);
            return s2;
          }
          toEdwards(e3, t2 = null) {
            const [r2, n2] = this._edwards(e3), i2 = new v({red: this.red, prime: this.prime, p: this.p, a: r2, d: n2, n: this.n, h: this.h, z: this.z});
            if (t2 != null) {
              const e4 = i2._scale(this);
              e4.redIsOdd() !== t2 && e4.redINeg();
            }
            if (this.g.isInfinity() || (i2.g = i2.pointFromEdwards(this.g), i2.g.normalize()), i2.isComplete())
              for (let s2 = 0; s2 < this.h.word(0); s2++)
                i2.torsion[s2] = i2.pointFromEdwards(this.torsion[s2]), i2.torsion[s2].normalize();
            return i2;
          }
          pointFromJSON(e3) {
            return w.fromJSON(this, e3);
          }
          toJSON(e3) {
            const t2 = super.toJSON(e3);
            return t2.a = this.a.fromRed().toJSON(), t2.d = this.d.fromRed().toJSON(), this.s.isZero() || (t2.s = this.s.fromRed().toJSON()), t2;
          }
        }
        class w extends d {
          constructor(e3, t2, r2, n2, i2) {
            N(e3 instanceof v), super(e3, c), this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = 1, t2 != null && this._init(t2, r2, n2, i2);
          }
          _init(e3, t2, r2, n2) {
            N(e3 instanceof i), N(t2 instanceof i), N(r2 == null || r2 instanceof i), N(n2 == null || n2 instanceof i), this.x = e3, this.y = t2, this.z = r2 || this.curve.one, this.t = n2 || null, this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = 0 | this.z.eq(this.curve.one), this._check(), this.t || (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redDiv(this.z)));
          }
          _check() {
            if (this.z.isZero())
              throw new Error("Invalid point.");
          }
          clone() {
            return this.curve.point(this.x.clone(), this.y.clone(), this.z.clone(), this.t.clone());
          }
          swap(e3, t2) {
            N(e3 instanceof w);
            const r2 = 1 & (t2 >> 31 | -t2 >> 31), n2 = this.zOne, i2 = e3.zOne;
            return this.x.cswap(e3.x, t2), this.y.cswap(e3.y, t2), this.z.cswap(e3.z, t2), this.t.cswap(e3.t, t2), this.zOne = n2 & (1 ^ r2) | i2 & r2, e3.zOne = i2 & (1 ^ r2) | n2 & r2, this;
          }
          normalize() {
            if (this.zOne)
              return this;
            const e3 = this.z.redInvert();
            return this.x = this.x.redMul(e3), this.y = this.y.redMul(e3), this.t = this.t.redMul(e3), this.z = this.curve.one, this.zOne = 1, this;
          }
          scale(e3) {
            N(e3 instanceof i);
            const t2 = this.x.redMul(e3), r2 = this.y.redMul(e3), n2 = this.z.redMul(e3), s2 = this.t.redMul(e3);
            return this.curve.point(t2, r2, n2, s2);
          }
          neg() {
            const e3 = this.x.redNeg(), t2 = this.y, r2 = this.z, n2 = this.t.redNeg();
            return this.curve.point(e3, t2, r2, n2);
          }
          add(e3) {
            return N(e3 instanceof w), this.isInfinity() ? e3 : e3.isInfinity() ? this : this.zOne ? e3._add(this, 0) : this._add(e3, 0);
          }
          _add(e3, t2) {
            return this.curve.mOneA ? this._addM1(e3, t2) : this._addA(e3, t2);
          }
          _addM1(e3, t2) {
            const r2 = e3.zOne & (1 ^ t2), n2 = this.y.redSub(this.x).redMul(e3.y.redSub(e3.x)), i2 = this.y.redAdd(this.x).redMul(e3.y.redAdd(e3.x)), s2 = this.t.redMul(this.curve.k).redMul(e3.t), o2 = r2 ? this.z.redAdd(this.z) : this.z.redMul(e3.z).redIMuln(2), a2 = i2.redSub(n2), c2 = o2.redSub(s2), u2 = o2.redIAdd(s2), h2 = i2.redIAdd(n2), f2 = a2.redMul(c2), d2 = u2.redMul(h2), l2 = a2.redMul(h2), p2 = c2.redMul(u2);
            return this.curve.point(f2, d2, p2, l2);
          }
          _addA(e3, t2) {
            const r2 = e3.zOne & (1 ^ t2), n2 = this.x.redMul(e3.x), i2 = this.y.redMul(e3.y), s2 = this.curve._mulD(this.t).redMul(e3.t), o2 = r2 ? this.z.clone() : this.z.redMul(e3.z), a2 = this.x.redAdd(this.y).redMul(e3.x.redAdd(e3.y)).redISub(n2).redISub(i2), c2 = o2.redSub(s2), u2 = o2.redIAdd(s2), h2 = i2.redISub(this.curve._mulA(n2)), f2 = a2.redMul(c2), d2 = u2.redMul(h2), l2 = a2.redMul(h2), p2 = c2.redMul(u2);
            return this.curve.point(f2, d2, p2, l2);
          }
          dbl() {
            return this.isInfinity() ? this : this._dbl(0);
          }
          _dbl(e3) {
            const t2 = this.zOne & (1 ^ e3), r2 = this.x.redSqr(), n2 = this.y.redSqr(), i2 = t2 ? this.curve.two : this.z.redSqr().redIMuln(2), s2 = this.curve._mulA(r2), o2 = this.x.redAdd(this.y).redSqr().redISub(r2).redISub(n2), a2 = s2.redAdd(n2), c2 = a2.redSub(i2), u2 = s2.redISub(n2), h2 = o2.redMul(c2), f2 = a2.redMul(u2), d2 = o2.redMul(u2), l2 = c2.redMul(a2);
            return this.curve.point(h2, f2, l2, d2);
          }
          uadd(e3) {
            return N(e3 instanceof w), this._add(e3, 1);
          }
          udbl() {
            return this._dbl(1);
          }
          getX() {
            return this.normalize(), this.x.fromRed();
          }
          getY() {
            return this.normalize(), this.y.fromRed();
          }
          eq(e3) {
            if (N(e3 instanceof w), N(!this.z.isZero()), N(!e3.z.isZero()), this === e3)
              return true;
            if (this.z.eq(e3.z))
              return this.x.eq(e3.x) && this.y.eq(e3.y);
            const t2 = this.x.redMul(e3.z), r2 = e3.x.redMul(this.z);
            if (!t2.eq(r2))
              return false;
            const n2 = this.y.redMul(e3.z), i2 = e3.y.redMul(this.z);
            return n2.eq(i2);
          }
          cmp(e3) {
            return N(e3 instanceof w), this.order().cmp(e3.order()) || this.getY().cmp(e3.getY()) || this.getX().cmp(e3.getX());
          }
          isInfinity() {
            return N(!this.z.isZero()), !!this.x.isZero() && this.y.eq(this.z);
          }
          isOrder2() {
            return !this.isInfinity() && this.x.isZero();
          }
          isOdd() {
            return this.normalize(), this.x.redIsOdd();
          }
          isEven() {
            return this.normalize(), this.x.redIsEven();
          }
          toP() {
            return this.normalize();
          }
          toJ() {
            return this;
          }
          encode() {
            const e3 = this.getY();
            return e3.setn(this.curve.signBit, this.x.redIsOdd()), this.curve.encodeAdjusted(e3);
          }
          static decode(e3, t2) {
            N(e3 instanceof v);
            const r2 = e3.decodeAdjusted(t2), n2 = r2.testn(e3.signBit) !== 0;
            if (r2.setn(e3.signBit, 0), r2.cmp(e3.p) >= 0)
              throw new Error("Invalid point.");
            return e3.pointFromY(r2, n2);
          }
          toJSON(e3) {
            if (this.isInfinity())
              return [];
            const t2 = this.getX().toJSON(), r2 = this.getY().toJSON();
            return e3 === true && this.pre ? [t2, r2, this.pre.toJSON()] : [t2, r2];
          }
          toPretty() {
            const e3 = 2 * this.curve.fieldSize;
            return [j(this.getX(), e3), j(this.getY(), e3)];
          }
          static fromJSON(e3, t2) {
            if (N(e3 instanceof v), N(Array.isArray(t2)), N(t2.length === 0 || t2.length === 2 || t2.length === 3), t2.length === 0)
              return e3.point();
            const r2 = i.fromJSON(t2[0]), n2 = i.fromJSON(t2[1]), s2 = e3.point(r2, n2);
            return t2.length > 2 && t2[2] != null && (s2.pre = _.fromJSON(s2, t2[2])), s2;
          }
          [n]() {
            return this.isInfinity() ? "<EdwardsPoint: Infinity>" : "<EdwardsPoint: x=" + this.x.fromRed().toString(16, 2) + " y=" + this.y.fromRed().toString(16, 2) + " z=" + this.z.fromRed().toString(16, 2) + ">";
          }
        }
        class _ {
          constructor() {
            this.naf = null, this.windows = null, this.doubles = null, this.blinding = null, this.beta = null;
          }
          map(e3) {
            N(typeof e3 == "function");
            const t2 = new this.constructor();
            return this.naf && (t2.naf = this.naf.map(e3)), this.doubles && (t2.doubles = this.doubles.map(e3)), t2;
          }
          toJSON() {
            return {naf: this.naf ? this.naf.toJSON() : null, windows: this.windows ? this.windows.toJSON() : null, doubles: this.doubles ? this.doubles.toJSON() : null, blinding: this.blinding ? this.blinding.toJSON() : void 0};
          }
          fromJSON(e3, t2) {
            return N(e3 instanceof d), N(t2 && typeof t2 == "object"), t2.naf != null && (this.naf = E.fromJSON(e3, t2.naf)), t2.windows != null && (this.windows = S.fromJSON(e3, t2.windows)), t2.doubles != null && (this.doubles = A.fromJSON(e3, t2.doubles)), t2.blinding != null && (this.blinding = I.fromJSON(e3, t2.blinding)), this;
          }
          static fromJSON(e3, t2) {
            return new this().fromJSON(e3, t2);
          }
        }
        class E {
          constructor(e3, t2) {
            this.width = e3, this.points = t2;
          }
          map(e3) {
            N(typeof e3 == "function");
            const {width: t2} = this, r2 = [];
            for (const n2 of this.points)
              r2.push(e3(n2));
            return new this.constructor(t2, r2);
          }
          toJSON() {
            return {width: this.width, points: this.points.slice(1).map((e3) => e3.toJSON())};
          }
          static fromJSON(e3, t2) {
            N(e3 instanceof d), N(t2 && typeof t2 == "object"), N(t2.width >>> 0 === t2.width), N(Array.isArray(t2.points));
            const {curve: r2} = e3, {width: n2} = t2, i2 = [e3];
            for (const s2 of t2.points)
              i2.push(r2.pointFromJSON(s2));
            return new this(n2, i2);
          }
        }
        class S {
          constructor(e3, t2, r2) {
            this.width = e3, this.bits = t2, this.points = r2;
          }
          toJSON() {
            return {width: this.width, bits: this.bits, points: this.points.slice(1).map((e3) => e3.toJSON())};
          }
          static fromJSON(e3, t2) {
            N(e3 instanceof d), N(t2 && typeof t2 == "object"), N(t2.width >>> 0 === t2.width), N(t2.bits >>> 0 === t2.bits), N(Array.isArray(t2.points));
            const {curve: r2} = e3, {width: n2, bits: i2} = t2, s2 = [e3];
            for (const o2 of t2.points)
              s2.push(r2.pointFromJSON(o2));
            return new this(n2, i2, s2);
          }
        }
        class A {
          constructor(e3, t2) {
            this.step = e3, this.points = t2;
          }
          map(e3) {
            N(typeof e3 == "function");
            const {step: t2} = this, r2 = [];
            for (const n2 of this.points)
              r2.push(e3(n2));
            return new this.constructor(t2, r2);
          }
          toJSON() {
            return {step: this.step, points: this.points.slice(1).map((e3) => e3.toJSON())};
          }
          static fromJSON(e3, t2) {
            N(e3 instanceof d), N(t2 && typeof t2 == "object"), N(t2.step >>> 0 === t2.step), N(Array.isArray(t2.points));
            const {curve: r2} = e3, {step: n2} = t2, i2 = [e3];
            for (const s2 of t2.points)
              i2.push(r2.pointFromJSON(s2));
            return new this(n2, i2);
          }
        }
        class I {
          constructor(e3, t2) {
            this.blind = e3, this.unblind = t2;
          }
          toJSON() {
            return {blind: this.blind.toJSON(), unblind: this.unblind.toJSON()};
          }
          static fromJSON(e3, t2) {
            N(e3 instanceof d), N(t2 && typeof t2 == "object");
            const {curve: r2} = e3;
            return new this(i.fromJSON(t2.blind), r2.pointFromJSON(t2.unblind));
          }
        }
        class k {
          constructor(e3, t2, r2, n2) {
            this.beta = e3, this.lambda = t2, this.basis = r2, this.pre = n2;
          }
          toJSON() {
            return {beta: this.beta.fromRed().toJSON(), lambda: this.lambda.toJSON(), basis: [this.basis[0].toJSON(), this.basis[1].toJSON()], pre: [this.pre[0].toJSON(), this.pre[1].toJSON()]};
          }
          static fromJSON(e3, t2) {
            N(e3 instanceof f), N(t2 && typeof t2 == "object"), N(Array.isArray(t2.basis)), N(Array.isArray(t2.pre)), N(t2.basis.length === 2), N(t2.pre.length === 2);
            return new this(i.fromJSON(t2.beta).toRed(e3.red), i.fromJSON(t2.lambda), [R.fromJSON(t2.basis[0]), R.fromJSON(t2.basis[1])], [i.fromJSON(t2.pre[0]), i.fromJSON(t2.pre[1])]);
          }
        }
        class R {
          constructor(e3, t2) {
            this.a = e3, this.b = t2;
          }
          toJSON() {
            return {a: this.a.toJSON(), b: this.b.toJSON()};
          }
          static fromJSON(e3) {
            N(e3 && typeof e3 == "object");
            return new this(i.fromJSON(e3.a), i.fromJSON(e3.b));
          }
        }
        const T = {__proto__: null, P192: class extends l {
          constructor(e3) {
            super({id: "P192", ossl: "prime192v1", type: "short", endian: "be", hash: "SHA256", prime: "p192", p: ["ffffffff ffffffff ffffffff fffffffe", "ffffffff ffffffff"], a: ["ffffffff ffffffff ffffffff fffffffe", "ffffffff fffffffc"], b: ["64210519 e59c80e7 0fa7e9ab 72243049", "feb8deec c146b9b1"], n: ["ffffffff ffffffff ffffffff 99def836", "146bc9b1 b4d22831"], h: "1", z: "-5", g: [["188da80e b03090f6 7cbf20eb 43a18800", "f4ff0afd 82ff1012"], ["07192b95 ffc8da78 631011ed 6b24cdd5", "73f977a1 1e794811"], e3]});
          }
        }, P224: class extends l {
          constructor(e3) {
            super({id: "P224", ossl: "secp224r1", type: "short", endian: "be", hash: "SHA256", prime: "p224", p: ["ffffffff ffffffff ffffffff ffffffff", "00000000 00000000 00000001"], a: ["ffffffff ffffffff ffffffff fffffffe", "ffffffff ffffffff fffffffe"], b: ["b4050a85 0c04b3ab f5413256 5044b0b7", "d7bfd8ba 270b3943 2355ffb4"], n: ["ffffffff ffffffff ffffffff ffff16a2", "e0b8f03e 13dd2945 5c5c2a3d"], h: "1", z: "1f", g: [["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3", "56c21122 343280d6 115c1d21"], ["bd376388 b5f723fb 4c22dfe6 cd4375a0", "5a074764 44d58199 85007e34"], e3]});
          }
        }, P256: class extends l {
          constructor(e3) {
            super({id: "P256", ossl: "prime256v1", type: "short", endian: "be", hash: "SHA256", prime: null, p: ["ffffffff 00000001 00000000 00000000", "00000000 ffffffff ffffffff ffffffff"], a: ["ffffffff 00000001 00000000 00000000", "00000000 ffffffff ffffffff fffffffc"], b: ["5ac635d8 aa3a93e7 b3ebbd55 769886bc", "651d06b0 cc53b0f6 3bce3c3e 27d2604b"], n: ["ffffffff 00000000 ffffffff ffffffff", "bce6faad a7179e84 f3b9cac2 fc632551"], h: "1", z: "-a", g: [["6b17d1f2 e12c4247 f8bce6e5 63a440f2", "77037d81 2deb33a0 f4a13945 d898c296"], ["4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16", "2bce3357 6b315ece cbb64068 37bf51f5"], e3]});
          }
        }, P384: class extends l {
          constructor(e3) {
            super({id: "P384", ossl: "secp384r1", type: "short", endian: "be", hash: "SHA384", prime: null, p: ["ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff ffffffff fffffffe", "ffffffff 00000000 00000000 ffffffff"], a: ["ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff ffffffff fffffffe", "ffffffff 00000000 00000000 fffffffc"], b: ["b3312fa7 e23ee7e4 988e056b e3f82d19", "181d9c6e fe814112 0314088f 5013875a", "c656398d 8a2ed19d 2a85c8ed d3ec2aef"], n: ["ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff c7634d81 f4372ddf", "581a0db2 48b0a77a ecec196a ccc52973"], h: "1", z: "-c", g: [["aa87ca22 be8b0537 8eb1c71e f320ad74", "6e1d3b62 8ba79b98 59f741e0 82542a38", "5502f25d bf55296c 3a545e38 72760ab7"], ["3617de4a 96262c6f 5d9e98bf 9292dc29", "f8f41dbd 289a147c e9da3113 b5f0b8c0", "0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"], e3]});
          }
        }, P521: class extends l {
          constructor(e3) {
            super({id: "P521", ossl: "secp521r1", type: "short", endian: "be", hash: "SHA512", prime: "p521", p: ["000001ff ffffffff ffffffff ffffffff", "ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff ffffffff ffffffff", "ffffffff"], a: ["000001ff ffffffff ffffffff ffffffff", "ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff ffffffff ffffffff", "fffffffc"], b: ["00000051 953eb961 8e1c9a1f 929a21a0", "b68540ee a2da725b 99b315f3 b8b48991", "8ef109e1 56193951 ec7e937b 1652c0bd", "3bb1bf07 3573df88 3d2c34f1 ef451fd4", "6b503f00"], n: ["000001ff ffffffff ffffffff ffffffff", "ffffffff ffffffff ffffffff ffffffff", "fffffffa 51868783 bf2f966b 7fcc0148", "f709a5d0 3bb5c9b8 899c47ae bb6fb71e", "91386409"], h: "1", z: "-4", g: [["000000c6 858e06b7 0404e9cd 9e3ecb66", "2395b442 9c648139 053fb521 f828af60", "6b4d3dba a14b5e77 efe75928 fe1dc127", "a2ffa8de 3348b3c1 856a429b f97e7e31", "c2e5bd66"], ["00000118 39296a78 9a3bc004 5c8a5fb4", "2c7d1bd9 98f54449 579b4468 17afbd17", "273e662c 97ee7299 5ef42640 c550b901", "3fad0761 353c7086 a272c240 88be9476", "9fd16650"], e3]});
          }
        }, SECP256K1: class extends l {
          constructor(e3) {
            super({id: "SECP256K1", ossl: "secp256k1", type: "short", endian: "be", hash: "SHA256", prime: "k256", p: ["ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff fffffffe fffffc2f"], a: "0", b: "7", n: ["ffffffff ffffffff ffffffff fffffffe", "baaedce6 af48a03b bfd25e8c d0364141"], h: "1", z: "1", c: ["0a2d2ba9 3507f1df 233770c2 a797962c", "c61f6d15 da14ecd4 7d8d27ae 1cd5f852"], g: [["79be667e f9dcbbac 55a06295 ce870b07", "029bfcdb 2dce28d9 59f2815b 16f81798"], ["483ada77 26a3c465 5da4fbfc 0e1108a8", "fd17b448 a6855419 9c47d08f fb10d4b8"], e3], endo: {beta: ["7ae96a2b 657c0710 6e64479e ac3434e9", "9cf04975 12f58995 c1396c28 719501ee"], lambda: ["5363ad4c c05c30e0 a5261c02 8812645a", "122e22ea 20816678 df02967c 1b23bd72"], basis: [{a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3"}, {a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15"}], pre: ["3086d221a7d46bcde86c90e49284eb153dab", "-e4437ed6010e88286f547fa90abfe4c42212"]}});
          }
        }, BRAINPOOLP256: class extends l {
          constructor(e3) {
            super({id: "BRAINPOOLP256", ossl: "brainpoolP256r1", type: "short", endian: "be", hash: "SHA256", prime: null, p: ["a9fb57db a1eea9bc 3e660a90 9d838d72", "6e3bf623 d5262028 2013481d 1f6e5377"], a: ["7d5a0975 fc2c3057 eef67530 417affe7", "fb8055c1 26dc5c6c e94a4b44 f330b5d9"], b: ["26dc5c6c e94a4b44 f330b5d9 bbd77cbf", "95841629 5cf7e1ce 6bccdc18 ff8c07b6"], n: ["a9fb57db a1eea9bc 3e660a90 9d838d71", "8c397aa3 b561a6f7 901e0e82 974856a7"], h: "1", z: "-2", g: [["8bd2aeb9 cb7e57cb 2c4b482f fc81b7af", "b9de27e1 e3bd23c2 3a4453bd 9ace3262"], ["547ef835 c3dac4fd 97f8461a 14611dc9", "c2774513 2ded8e54 5c1d54c7 2f046997"], e3]});
          }
        }, BRAINPOOLP384: class extends l {
          constructor(e3) {
            super({id: "BRAINPOOLP384", ossl: "brainpoolP384r1", type: "short", endian: "be", hash: "SHA384", prime: null, p: ["8cb91e82 a3386d28 0f5d6f7e 50e641df", "152f7109 ed5456b4 12b1da19 7fb71123", "acd3a729 901d1a71 87470013 3107ec53"], a: ["7bc382c6 3d8c150c 3c72080a ce05afa0", "c2bea28e 4fb22787 139165ef ba91f90f", "8aa5814a 503ad4eb 04a8c7dd 22ce2826"], b: ["04a8c7dd 22ce2826 8b39b554 16f0447c", "2fb77de1 07dcd2a6 2e880ea5 3eeb62d5", "7cb43902 95dbc994 3ab78696 fa504c11"], n: ["8cb91e82 a3386d28 0f5d6f7e 50e641df", "152f7109 ed5456b3 1f166e6c ac0425a7", "cf3ab6af 6b7fc310 3b883202 e9046565"], h: "1", z: "-5", g: [["1d1c64f0 68cf45ff a2a63a81 b7c13f6b", "8847a3e7 7ef14fe3 db7fcafe 0cbd10e8", "e826e034 36d646aa ef87b2e2 47d4af1e"], ["8abe1d75 20f9c2a4 5cb1eb8e 95cfd552", "62b70b29 feec5864 e19c054f f9912928", "0e464621 77918111 42820341 263c5315"], e3]});
          }
        }, BRAINPOOLP512: class extends l {
          constructor(e3) {
            super({id: "BRAINPOOLP512", ossl: "brainpoolP512r1", type: "short", endian: "be", hash: "SHA512", prime: null, p: ["aadd9db8 dbe9c48b 3fd4e6ae 33c9fc07", "cb308db3 b3c9d20e d6639cca 70330871", "7d4d9b00 9bc66842 aecda12a e6a380e6", "2881ff2f 2d82c685 28aa6056 583a48f3"], a: ["7830a331 8b603b89 e2327145 ac234cc5", "94cbdd8d 3df91610 a83441ca ea9863bc", "2ded5d5a a8253aa1 0a2ef1c9 8b9ac8b5", "7f1117a7 2bf2c7b9 e7c1ac4d 77fc94ca"], b: ["3df91610 a83441ca ea9863bc 2ded5d5a", "a8253aa1 0a2ef1c9 8b9ac8b5 7f1117a7", "2bf2c7b9 e7c1ac4d 77fc94ca dc083e67", "984050b7 5ebae5dd 2809bd63 8016f723"], n: ["aadd9db8 dbe9c48b 3fd4e6ae 33c9fc07", "cb308db3 b3c9d20e d6639cca 70330870", "553e5c41 4ca92619 41866119 7fac1047", "1db1d381 085ddadd b5879682 9ca90069"], h: "1", z: "7", g: [["81aee4bd d82ed964 5a21322e 9c4c6a93", "85ed9f70 b5d916c1 b43b62ee f4d0098e", "ff3b1f78 e2d0d48d 50d1687b 93b97d5f", "7c6d5047 406a5e68 8b352209 bcb9f822"], ["7dde385d 566332ec c0eabfa9 cf7822fd", "f209f700 24a57b1a a000c55b 881f8111", "b2dcde49 4a5f485e 5bca4bd8 8a2763ae", "d1ca2b2f a8f05406 78cd1e0f 3ad80892"], e3]});
          }
        }, X25519: class extends g {
          constructor() {
            super({id: "X25519", ossl: "X25519", type: "mont", endian: "le", hash: "SHA512", prime: "p25519", p: ["7fffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff ffffffff ffffffed"], a: "76d06", b: "1", n: ["10000000 00000000 00000000 00000000", "14def9de a2f79cd6 5812631a 5cf5d3ed"], h: "8", z: "2", g: [["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000009"], ["5f51e65e 475f794b 1fe122d3 88b72eb3", "6dc2b281 92839e4d d6163a5d 81312c14"]], torsion: [[], [["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000"], ["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000"]], [["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000001"], ["6be4f497 f9a9c2af c21fa77a d7f4a6ef", "635a11c7 284a9363 e9a248ef 9c884415"]], [["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000001"], ["141b0b68 06563d50 3de05885 280b5910", "9ca5ee38 d7b56c9c 165db710 6377bbd8"]], [["57119fd0 dd4e22d8 868e1c58 c45c4404", "5bef839c 55b1d0b1 248c50a3 bc959c5f"], ["68c59389 3d458e64 31c6ca00 45fb5015", "20a44346 8eaa68dd 0f103842 048065b7"]], [["57119fd0 dd4e22d8 868e1c58 c45c4404", "5bef839c 55b1d0b1 248c50a3 bc959c5f"], ["173a6c76 c2ba719b ce3935ff ba04afea", "df5bbcb9 71559722 f0efc7bd fb7f9a36"]], [["00b8495f 16056286 fdb1329c eb8d09da", "6ac49ff1 fae35616 aeb8413b 7c7aebe0"], ["3931c129 569e83a5 29482c14 e628b457", "933bfc29 ed801b4d 68871483 92507b1a"]], [["00b8495f 16056286 fdb1329c eb8d09da", "6ac49ff1 fae35616 aeb8413b 7c7aebe0"], ["46ce3ed6 a9617c5a d6b7d3eb 19d74ba8", "6cc403d6 127fe4b2 9778eb7c 6daf84d3"]]]});
          }
        }, X448: class extends g {
          constructor() {
            super({id: "X448", ossl: "X448", type: "mont", endian: "le", hash: "SHAKE256", prime: "p448", p: ["ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff fffffffe ffffffff", "ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff"], a: "262a6", b: "1", n: ["3fffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff ffffffff 7cca23e9", "c44edb49 aed63690 216cc272 8dc58f55", "2378c292 ab5844f3"], h: "4", z: "-1", g: [["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000005"], ["7d235d12 95f5b1f6 6c98ab6e 58326fce", "cbae5d34 f55545d0 60f75dc2 8df3f6ed", "b8027e23 46430d21 1312c4b1 50677af7", "6fd7223d 457b5b1a"]], torsion: [[], [["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000"], ["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000"]], [["ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff fffffffe ffffffff", "ffffffff ffffffff ffffffff ffffffff", "ffffffff fffffffe"], ["ba4d3a08 29b6112f 8812e51b a0bb2abe", "bc1cb08e b48e5569 36ba50fd d2e7d68a", "f8cb3216 0522425b 3f990812 abbe635a", "d37a21e1 7551b193"]], [["ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff fffffffe ffffffff", "ffffffff ffffffff ffffffff ffffffff", "ffffffff fffffffe"], ["45b2c5f7 d649eed0 77ed1ae4 5f44d541", "43e34f71 4b71aa96 c945af01 2d182975", "0734cde9 faddbda4 c066f7ed 54419ca5", "2c85de1e 8aae4e6c"]]]});
          }
        }, MONT448: class extends g {
          constructor() {
            super({id: "MONT448", ossl: null, type: "mont", endian: "le", hash: "SHAKE256", prime: "p448", p: ["ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff fffffffe ffffffff", "ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff"], a: ["b2cf97d2 d43459a9 31ed36b1 fc4e3cb5", "5d93f8d2 22746997 60ccffc6 49961ed6", "c5b05fca c24864ed 6fb59697 931b78da", "84ddecd8 ca2b5cfb"], b: "1", n: ["3fffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff ffffffff 7cca23e9", "c44edb49 aed63690 216cc272 8dc58f55", "2378c292 ab5844f3"], h: "4", z: "-1", g: [["ac0d24cc c6c75cb0 eb71f81e 7a6edf51", "48e88aee 009a2a24 e795687e c28e125a", "3e6730a6 0d46367b aa7fe99d 152128dc", "41321bc7 7817f059"], ["5a4437f6 80c0d0db 9b061276 d5d0ffcc", "e786ff33 b6a53d30 98746425 82e66f09", "4433dae7 7244a6e2 6b11e905 7228f483", "556c41a5 913f55fe"]], torsion: [[], [["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000"], ["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000"]], [["ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff fffffffe ffffffff", "ffffffff ffffffff ffffffff ffffffff", "ffffffff fffffffe"], ["bec92fd0 6da2acf2 b4e261e8 7cef0d34", "22e75c18 3c589857 b71924e5 73c2f9ce", "e18da5f2 466e2f39 3c2eedf0 f105a60a", "b40c717d 4f1e1fd7"]], [["ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff fffffffe ffffffff", "ffffffff ffffffff ffffffff ffffffff", "ffffffff fffffffe"], ["4136d02f 925d530d 4b1d9e17 8310f2cb", "dd18a3e7 c3a767a8 48e6db19 8c3d0631", "1e725a0d b991d0c6 c3d1120f 0efa59f5", "4bf38e82 b0e1e028"]]]});
          }
        }, ED25519: class extends v {
          constructor(e3) {
            super({id: "ED25519", ossl: "ED25519", type: "edwards", endian: "le", hash: "SHA512", prefix: "SigEd25519 no Ed25519 collisions", context: false, prime: "p25519", p: ["7fffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff ffffffff ffffffed"], a: "-1", d: ["52036cee 2b6ffe73 8cc74079 7779e898", "00700a4d 4141d8ab 75eb4dca 135978a3"], n: ["10000000 00000000 00000000 00000000", "14def9de a2f79cd6 5812631a 5cf5d3ed"], h: "8", z: "2", g: [["216936d3 cd6e53fe c0a4e231 fdd6dc5c", "692cc760 9525a7b2 c9562d60 8f25d51a"], ["66666666 66666666 66666666 66666666", "66666666 66666666 66666666 66666658"], e3], torsion: [[["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000"], ["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000001"]], [["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000"], ["7fffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff ffffffff ffffffec"]], [["2b832480 4fc1df0b 2b4d0099 3dfbd7a7", "2f431806 ad2fe478 c4ee1b27 4a0ea0b0"], ["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000"]], [["547cdb7f b03e20f4 d4b2ff66 c2042858", "d0bce7f9 52d01b87 3b11e4d8 b5f15f3d"], ["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000"]], [["1fd5b9a0 06394a28 e9339932 38de4abb", "5c193c70 13e5e238 dea14646 c545d14a"], ["05fc536d 880238b1 3933c6d3 05acdfd5", "f098eff2 89f4c345 b027b2c2 8f95e826"]], [["602a465f f9c6b5d7 16cc66cd c721b544", "a3e6c38f ec1a1dc7 215eb9b9 3aba2ea3"], ["05fc536d 880238b1 3933c6d3 05acdfd5", "f098eff2 89f4c345 b027b2c2 8f95e826"]], [["1fd5b9a0 06394a28 e9339932 38de4abb", "5c193c70 13e5e238 dea14646 c545d14a"], ["7a03ac92 77fdc74e c6cc392c fa53202a", "0f67100d 760b3cba 4fd84d3d 706a17c7"]], [["602a465f f9c6b5d7 16cc66cd c721b544", "a3e6c38f ec1a1dc7 215eb9b9 3aba2ea3"], ["7a03ac92 77fdc74e c6cc392c fa53202a", "0f67100d 760b3cba 4fd84d3d 706a17c7"]]]});
          }
        }, ISO448: class extends v {
          constructor(e3) {
            super({id: "ISO448", ossl: null, type: "edwards", endian: "le", hash: "SHAKE256", prefix: "SigEd448", context: true, prime: "p448", p: ["ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff fffffffe ffffffff", "ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff"], a: "1", d: ["d78b4bdc 7f0daf19 f24f38c2 9373a2cc", "ad461572 42a50f37 809b1da3 412a12e7", "9ccc9c81 264cfe9a d0809970 58fb61c4", "243cc32d baa156b9"], n: ["3fffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff ffffffff 7cca23e9", "c44edb49 aed63690 216cc272 8dc58f55", "2378c292 ab5844f3"], h: "4", z: "-1", g: [["79a70b2b 70400553 ae7c9df4 16c792c6", "1128751a c9296924 0c25a07d 728bdc93", "e21f7787 ed697224 9de732f3 8496cd11", "69871309 3e9c04fc"], ["7fffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff ffffffff 80000000", "00000000 00000000 00000000 00000000", "00000000 00000001"], e3], torsion: [[["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000"], ["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000001"]], [["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000"], ["ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff fffffffe ffffffff", "ffffffff ffffffff ffffffff ffffffff", "ffffffff fffffffe"]], [["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000001"], ["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000"]], [["ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff fffffffe ffffffff", "ffffffff ffffffff ffffffff ffffffff", "ffffffff fffffffe"], ["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000"]]]});
          }
        }, ED448: class extends v {
          constructor(e3) {
            super({id: "ED448", ossl: "ED448", type: "edwards", endian: "le", hash: "SHAKE256", prefix: "SigEd448", context: true, prime: "p448", p: ["ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff fffffffe ffffffff", "ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff"], a: "1", d: ["ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff fffffffe ffffffff", "ffffffff ffffffff ffffffff ffffffff", "ffffffff ffff6756"], n: ["3fffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff ffffffff 7cca23e9", "c44edb49 aed63690 216cc272 8dc58f55", "2378c292 ab5844f3"], h: "4", z: "-1", g: [["4f1970c6 6bed0ded 221d15a6 22bf36da", "9e146570 470f1767 ea6de324 a3d3a464", "12ae1af7 2ab66511 433b80e1 8b00938e", "2626a82b c70cc05e"], ["693f4671 6eb6bc24 88762037 56c9c762", "4bea7373 6ca39840 87789c1e 05a0c2d7", "3ad3ff1c e67c39c4 fdbd132c 4ed7c8ad", "9808795b f230fa14"], e3], torsion: [[["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000"], ["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000001"]], [["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000"], ["ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff fffffffe ffffffff", "ffffffff ffffffff ffffffff ffffffff", "ffffffff fffffffe"]], [["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000001"], ["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000"]], [["ffffffff ffffffff ffffffff ffffffff", "ffffffff ffffffff fffffffe ffffffff", "ffffffff ffffffff ffffffff ffffffff", "ffffffff fffffffe"], ["00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000 00000000 00000000", "00000000 00000000"]]]});
          }
        }}, C = {__proto__: null, P192: null, P224: null, P256: null, P384: null, P521: null, SECP256K1: null, BRAINPOOLP256: null, BRAINPOOLP384: null, BRAINPOOLP512: null, X25519: null, X448: null, MONT448: null, ED25519: null, ISO448: null, ED448: null};
        function M(e3, t2, r2) {
          N(e3 instanceof i), N(!e3.red), N(t2 >>> 0 === t2), N(r2 >>> 0 === r2);
          const n2 = new Array(r2), s2 = e3.bitLength() + 1, o2 = 1 | e3.sign();
          N(s2 <= r2);
          for (let i2 = 0; i2 < r2; i2++)
            n2[i2] = 0;
          let a2, c2 = 0, u2 = 0;
          for (; c2 < s2; )
            e3.bit(c2) !== u2 ? (a2 = e3.bits(c2, t2) + u2, u2 = a2 >> t2 - 1 & 1, a2 -= u2 << t2, n2[c2] = o2 * a2, c2 += t2) : c2 += 1;
          return N(u2 === 0), n2;
        }
        function x(e3, t2, r2) {
          const n2 = function(e4, t3, r3) {
            N(e4 instanceof i), N(t3 instanceof i), N(!e4.red), N(!t3.red), N(r3 >>> 0 === r3);
            const n3 = [new Array(r3), new Array(r3)], s3 = Math.max(e4.bitLength(), t3.bitLength()) + 1, o2 = 1 | e4.sign(), a2 = 1 | t3.sign();
            N(s3 <= r3);
            let c2 = 0, u2 = 0;
            for (let i2 = 0; i2 < s3; i2++) {
              const r4 = e4.bits(i2, 3), s4 = t3.bits(i2, 3);
              let h2 = (3 & r4) + c2 & 3, f2 = (3 & s4) + u2 & 3, d2 = 0, l2 = 0;
              if (h2 === 3 && (h2 = -1), f2 === 3 && (f2 = -1), 1 & h2) {
                const e5 = (7 & r4) + c2 & 7;
                d2 = e5 !== 3 && e5 !== 5 || f2 !== 2 ? h2 : -h2;
              }
              if (1 & f2) {
                const e5 = (7 & s4) + u2 & 7;
                l2 = e5 !== 3 && e5 !== 5 || h2 !== 2 ? f2 : -f2;
              }
              n3[0][i2] = d2 * o2, n3[1][i2] = l2 * a2, 2 * c2 === d2 + 1 && (c2 = 1 - c2), 2 * u2 === l2 + 1 && (u2 = 1 - u2);
            }
            for (let i2 = s3; i2 < r3; i2++)
              n3[0][i2] = 0, n3[1][i2] = 0;
            return n3;
          }(e3, t2, r2), s2 = new Array(r2);
          for (let i2 = 0; i2 < r2; i2++) {
            const e4 = n2[0][i2], t3 = n2[1][i2];
            s2[i2] = u[3 * (e4 + 1) + (t3 + 1)];
          }
          return s2;
        }
        function N(e3, t2) {
          if (!e3) {
            const e4 = new Error(t2 || "Assertion failed");
            throw Error.captureStackTrace && Error.captureStackTrace(e4, N), e4;
          }
        }
        function P(e3) {
          N(e3 instanceof i);
          try {
            return [1, e3.redSqrt()];
          } catch (t2) {
            if (t2.message === "X is not a square mod P.")
              return [0, e3.clone()];
            throw t2;
          }
        }
        function B(e3, t2) {
          N(e3 instanceof i), N(t2 instanceof i);
          try {
            return [1, e3.redDivSqrt(t2)];
          } catch (r2) {
            if (r2.message === "Not invertible." || r2.message === "X is not a square mod P.")
              return [0, e3.clone()];
            throw r2;
          }
        }
        function O(e3) {
          const t2 = function(e4) {
            N(e4 instanceof i), N(e4.red);
            const t3 = e4.red.m;
            if (t3.cmpn(3) <= 0)
              return e4.clone();
            if (t3.modrn(3) === 2) {
              const r3 = t3.ushln(1).isubn(1).idivn(3);
              return e4.redPow(r3);
            }
            const r2 = t3.modrn(9);
            if (r2 === 4) {
              const r3 = t3.ushln(1).iaddn(1).idivn(9), n2 = e4.redPow(r3);
              if (!n2.redSqr().redMul(n2).eq(e4))
                throw new Error("X is not a cube mod P.");
              return n2;
            }
            if (r2 === 7) {
              const r3 = t3.addn(2).idivn(9), n2 = e4.redPow(r3);
              if (!n2.redSqr().redMul(n2).eq(e4))
                throw new Error("X is not a cube mod P.");
              return n2;
            }
            throw new Error("Not implemented.");
          }(e3);
          if (e3.red.m.modrn(3) === 1) {
            const r2 = new i(2).toRed(e3.red), n2 = new i(3).toRed(e3.red), s2 = r2.redInvert(), o2 = n2.redNeg().redSqrt().redMul(s2), a2 = o2.redNeg(), c2 = o2.redSub(s2), u2 = a2.redSub(s2), h2 = t2.redMul(c2), f2 = t2.redMul(u2);
            return [t2, h2, f2];
          }
          return [t2];
        }
        function D(e3) {
          for (const t2 of O(e3))
            if (t2.redJacobi() >= 0)
              return t2;
          throw new Error("X^(1/3) is not a square mod P.");
        }
        function L(e3) {
          return i.randomBits(e3, 32).toNumber();
        }
        function U(e3, t2) {
          const r2 = new WeakMap();
          return function(n2, i2) {
            const s2 = 1 & i2, o2 = r2.get(n2);
            if (o2 && o2[s2] !== null)
              return o2[s2];
            const a2 = e3.call(t2, n2, i2);
            return r2.has(n2) || r2.set(n2, [null, null]), r2.get(n2)[s2] = a2, a2;
          };
        }
        function j(e3, t2) {
          N(e3 instanceof i), N(t2 >>> 0 === t2), 7 & t2 && (t2 += 8 - (7 & t2));
          const r2 = e3.toString(16, t2), n2 = [], s2 = [];
          N((7 & r2.length) == 0);
          for (let i2 = 0; i2 < r2.length; i2 += 8)
            n2.push(r2.slice(i2, i2 + 8));
          for (let i2 = 0; i2 < n2.length; i2 += 4)
            s2.push(n2.slice(i2, i2 + 4).join(" "));
          return s2;
        }
        t.Curve = f, t.Point = d, t.ShortCurve = l, t.ShortPoint = p, t.JPoint = y, t.MontCurve = g, t.MontPoint = b, t.XPoint = m, t.EdwardsCurve = v, t.EdwardsPoint = w, t.curves = T, t.curve = function(e3, ...t2) {
          N(typeof e3 == "string");
          const r2 = e3.toUpperCase();
          let n2 = C[r2];
          if (!n2) {
            const i2 = T[r2];
            if (!i2)
              throw new Error(`Curve not found: "${e3}".`);
            n2 = new i2(...t2), C[r2] = n2;
          }
          return n2;
        }, t.register = function(e3, t2) {
          N(typeof e3 == "string"), N(typeof t2 == "function");
          const r2 = e3.toUpperCase();
          if (T[r2])
            throw new Error(`Curve already registered: "${e3}".`);
          T[r2] = t2, C[r2] = null;
        };
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      e.exports = r(1002);
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const {custom: n} = r(375), i = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], s = [0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], o = [0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176], a = {p192: null, p224: null, p521: null, k256: null, p251: null, p25519: null, p448: null}, c = 0, u = 1, h = 2, f = 3, d = 4, l = 7, p = typeof BigInt == "function";
        class y {
          constructor(e2, t3, r2) {
            this.words = [0], this.length = 1, this.negative = 0, this.red = null, this.from(e2, t3, r2);
          }
          _iadd(e2, t3) {
            let r2 = 0, n2 = 0;
            for (e2.length < t3.length && ([e2, t3] = [t3, e2]), e2 !== this && this._alloc(e2.length); n2 < t3.length; n2++) {
              const i2 = (0 | e2.words[n2]) + (0 | t3.words[n2]) + r2;
              this.words[n2] = 67108863 & i2, r2 = i2 >>> 26;
            }
            for (; r2 !== 0 && n2 < e2.length; n2++) {
              const t4 = (0 | e2.words[n2]) + r2;
              this.words[n2] = 67108863 & t4, r2 = t4 >>> 26;
            }
            if (this.length = e2.length, r2 !== 0)
              this._alloc(this.length + 1), this.words[this.length++] = r2;
            else if (e2 !== this)
              for (; n2 < e2.length; n2++)
                this.words[n2] = e2.words[n2];
            return this;
          }
          _iaddn(e2) {
            if (this.words[0] += e2, this.words[0] < 67108864)
              return this;
            let t3 = 0;
            for (this._alloc(this.length + 1), this.words[this.length] = 0; t3 < this.length && this.words[t3] >= 67108864; t3++)
              this.words[t3] -= 67108864, this.words[t3 + 1] += 1;
            return this.length = Math.max(this.length, t3 + 1), this;
          }
          iadd(e2) {
            if (C(y.isBN(e2), "num", "bignum"), this.negative === e2.negative)
              this._iadd(this, e2);
            else {
              const t3 = this.ucmp(e2);
              if (t3 === 0)
                return this.words[0] = 0, this.length = 1, this.negative = 0, this;
              t3 < 0 ? (this._isub(e2, this), this.negative ^= 1) : this._isub(this, e2);
            }
            return this;
          }
          iaddn(e2) {
            C(O(e2), "num", "smi");
            const t3 = e2 < 0 | 0;
            return t3 && (e2 = -e2), this.negative === t3 ? this._iaddn(e2) : this.length === 1 && this.words[0] < e2 ? (this.words[0] = e2 - this.words[0], this.negative ^= 1) : this._isubn(e2), this;
          }
          add(e2) {
            return C(y.isBN(e2), "num", "bignum"), e2.length > this.length ? e2.clone().iadd(this) : this.clone().iadd(e2);
          }
          addn(e2) {
            return this.clone().iaddn(e2);
          }
          _isub(e2, t3) {
            let r2 = 0, n2 = 0;
            for (T(e2.length >= t3.length), e2 !== this && this._alloc(e2.length); n2 < t3.length; n2++) {
              const i2 = (0 | e2.words[n2]) - (0 | t3.words[n2]) + r2;
              r2 = i2 >> 26, this.words[n2] = 67108863 & i2;
            }
            for (; r2 !== 0 && n2 < e2.length; n2++) {
              const t4 = (0 | e2.words[n2]) + r2;
              r2 = t4 >> 26, this.words[n2] = 67108863 & t4;
            }
            if (T(r2 === 0), e2 !== this)
              for (; n2 < e2.length; n2++)
                this.words[n2] = e2.words[n2];
            return this.length = Math.max(this.length, n2), this._strip();
          }
          _isubn(e2) {
            if (this.words[0] -= e2, this.words[0] >= 0)
              return this._normalize();
            T(this.length !== 1), this._alloc(this.length + 1);
            for (let t3 = 0; t3 < this.length && this.words[t3] < 0; t3++)
              this.words[t3] += 67108864, this.words[t3 + 1] -= 1;
            return this.words[this.length] = 0, this._strip();
          }
          isub(e2) {
            if (C(y.isBN(e2), "num", "bignum"), this.negative !== e2.negative)
              this._iadd(this, e2);
            else {
              const t3 = this.ucmp(e2);
              if (t3 === 0)
                return this.words[0] = 0, this.length = 1, this.negative = 0, this;
              t3 < 0 ? (this._isub(e2, this), this.negative ^= 1) : this._isub(this, e2);
            }
            return this;
          }
          isubn(e2) {
            C(O(e2), "num", "smi");
            const t3 = e2 < 0 | 0;
            return t3 && (e2 = -e2), this.negative !== t3 ? this._iaddn(e2) : this.length === 1 && this.words[0] < e2 ? (this.words[0] = e2 - this.words[0], this.negative ^= 1) : this._isubn(e2), this;
          }
          sub(e2) {
            return this.clone().isub(e2);
          }
          subn(e2) {
            return this.clone().isubn(e2);
          }
          _mul(e2, t3) {
            if (C(y.isBN(e2), "num", "bignum"), C(y.isBN(t3), "out", "bignum"), this.length === 10 && e2.length === 10)
              return V(this, e2, t3);
            const r2 = this.length + e2.length;
            return r2 < 63 ? q(this, e2, t3) : r2 < 1024 ? K(this, e2, t3) : function(e3, t4, r3) {
              if (!p || e3.length + t4.length > 82595519)
                return K(e3, t4, r3);
              const n2 = BigInt(0), i2 = BigInt(67108863), s2 = BigInt(26);
              let o2 = e3.toBigInt() * t4.toBigInt();
              const a2 = o2 < n2 | 0;
              a2 && (o2 = -o2);
              let c2 = 0;
              for (; o2 > n2; )
                r3.words[c2++] = Number(o2 & i2), o2 >>= s2;
              c2 === 0 && (r3.words[c2++] = 0);
              return r3.length = c2, r3.negative = a2, r3;
            }(this, e2, t3);
          }
          imul(e2) {
            return this.mul(e2)._move(this);
          }
          imuln(e2) {
            C(O(e2), "num", "smi");
            const t3 = e2 < 0 | 0;
            t3 && (e2 = -e2);
            let r2 = 0;
            for (let n2 = 0; n2 < this.length; n2++) {
              const t4 = this.words[n2] * e2, i2 = (67108863 & t4) + (67108863 & r2);
              r2 >>= 26, r2 += t4 / 67108864 | 0, r2 += i2 >>> 26, this.words[n2] = 67108863 & i2;
            }
            return this.negative ^= t3, r2 !== 0 ? (this._alloc(this.length + 1), this.words[this.length++] = r2) : this._strip(), this;
          }
          mul(e2) {
            C(y.isBN(e2), "num", "bignum");
            const t3 = this.length + e2.length, r2 = new y();
            r2.words = new Array(t3);
            for (let n2 = 0; n2 < t3; n2++)
              r2.words[n2] = 0;
            return this._mul(e2, r2);
          }
          muln(e2) {
            return this.clone().imuln(e2);
          }
          mulShift(e2, t3) {
            C(y.isBN(e2), "num", "bignum"), C(t3 >>> 0 === t3, "bits", "uint32");
            const r2 = this.mul(e2), n2 = r2.utestn(t3 - 1);
            return r2.iushrn(t3), this.negative ^ e2.negative ? r2.isubn(n2) : r2.iaddn(n2);
          }
          _div(e2, t3) {
            C(y.isBN(e2), "num", "bignum"), T((t3 & l) === t3), T(t3 !== c);
            const r2 = this, n2 = e2;
            if (P(!n2.isZero()), r2.isZero())
              return [new y(0), new y(0)];
            const i2 = r2.negative, s2 = n2.negative;
            r2.negative = 0, n2.negative = 0;
            let o2 = null, a2 = null;
            return r2.ucmp(n2) < 0 ? (t3 & u && (o2 = new y(0)), t3 & h && (a2 = r2.clone())) : n2.length === 1 ? (t3 & u && (o2 = r2.quon(n2.words[0])), t3 & h && (a2 = r2.remn(n2.words[0]))) : [o2, a2] = r2._wordDiv(n2, t3), r2.negative = i2, n2.negative = s2, t3 & u && (o2.negative = r2.negative ^ n2.negative, o2._normalize()), t3 & h && (a2.negative = r2.negative, a2._normalize()), t3 & d && (t3 & u && (T((t3 & h) != 0), a2.negative !== 0 && (n2.negative !== 0 ? o2.iaddn(1) : o2.isubn(1))), t3 & h && a2.negative !== 0 && (n2.negative !== 0 ? a2.isub(n2) : a2.iadd(n2))), [o2, a2];
          }
          _wordDiv(e2, t3) {
            let r2, n2 = this.clone(), i2 = e2, s2 = null;
            const o2 = 0 | i2.words[i2.length - 1], a2 = 26 - L(o2);
            a2 !== 0 ? (i2 = i2.clone(), n2.iushln(a2), i2.iushln(a2), r2 = 0 | i2.words[i2.length - 1]) : r2 = o2;
            const c2 = n2.length - i2.length;
            if (T(c2 >= 0), t3 & u) {
              s2 = new y(0), s2.length = c2 + 1, s2.words = new Array(s2.length);
              for (let e3 = 0; e3 < s2.length; e3++)
                s2.words[e3] = 0;
            }
            const f2 = n2.clone();
            f2._ishlnsubmul(i2, 1, c2), f2.negative === 0 && (s2 && (s2.words[c2] = 1), n2 = f2);
            for (let u2 = c2 - 1; u2 >= 0; u2--) {
              const e3 = (67108864 * n2.words[i2.length + u2] + n2.words[i2.length + u2 - 1]) / r2 | 0;
              let t4 = Math.min(e3, 67108863);
              for (n2._ishlnsubmul(i2, t4, u2); n2.negative !== 0; )
                t4 -= 1, n2.negative = 0, n2._ishlnsubmul(i2, 1, u2), n2.ineg();
              s2 && (s2.words[u2] = t4);
            }
            return s2 && s2._strip(), t3 & h && a2 !== 0 && n2.iushrn(a2), [s2, n2];
          }
          _ishlnsubmul(e2, t3, r2) {
            let n2 = 0, i2 = 0;
            for (this._expand(e2.length + r2); i2 < e2.length; i2++) {
              const s2 = (0 | this.words[i2 + r2]) + n2, o2 = e2.words[i2] * t3, a2 = s2 - (67108863 & o2);
              n2 = (a2 >> 26) - (o2 / 67108864 | 0), this.words[i2 + r2] = 67108863 & a2;
            }
            for (; i2 < this.length - r2; i2++) {
              const e3 = (0 | this.words[i2 + r2]) + n2;
              n2 = e3 >> 26, this.words[i2 + r2] = 67108863 & e3;
            }
            if (n2 === 0)
              return this._strip();
            T(n2 === -1), n2 = 0;
            for (let s2 = 0; s2 < this.length; s2++) {
              const e3 = -(0 | this.words[s2]) + n2;
              n2 = e3 >> 26, this.words[s2] = 67108863 & e3;
            }
            return this.negative = 1, this._strip();
          }
          quorem(e2) {
            return this._div(e2, f);
          }
          iquo(e2) {
            return this.quo(e2)._move(this);
          }
          iquon(e2) {
            C(O(e2), "num", "smi"), P(e2 !== 0);
            const t3 = e2 < 0 | 0;
            t3 && (e2 = -e2);
            let r2 = 0;
            for (let n2 = this.length - 1; n2 >= 0; n2--) {
              const t4 = (0 | this.words[n2]) + 67108864 * r2;
              this.words[n2] = t4 / e2 | 0, r2 = t4 % e2;
            }
            return this.negative ^= t3, this._strip();
          }
          quo(e2) {
            return this._div(e2, u)[0];
          }
          quon(e2) {
            return this.clone().iquon(e2);
          }
          irem(e2) {
            return this.rem(e2)._move(this);
          }
          iremn(e2) {
            let t3 = this.remrn(e2);
            return t3 < 0 && (t3 = -t3), this.words[0] = t3, this.length = 1, this._normalize();
          }
          rem(e2) {
            return this._div(e2, h)[1];
          }
          remn(e2) {
            return this.clone().iremn(e2);
          }
          remrn(e2) {
            C(O(e2), "num", "smi"), P(e2 !== 0), e2 < 0 && (e2 = -e2);
            const t3 = (1 << 26) % e2;
            let r2 = 0;
            for (let n2 = this.length - 1; n2 >= 0; n2--)
              r2 = (t3 * r2 + (0 | this.words[n2])) % e2;
            return this.negative !== 0 ? 0 | -r2 : r2;
          }
          divmod(e2) {
            return this._div(e2, f | d);
          }
          idiv(e2) {
            return this.div(e2)._move(this);
          }
          idivn(e2) {
            if (this.negative === 0)
              return this.iquon(e2);
            const t3 = this.remrn(e2);
            return this.iquon(e2), t3 < 0 && (e2 < 0 ? this.iaddn(1) : this.isubn(1)), this;
          }
          div(e2) {
            return this._div(e2, f | d)[0];
          }
          divn(e2) {
            return this.clone().idivn(e2);
          }
          imod(e2) {
            return this.ucmp(e2) < 0 ? (this.negative !== 0 && (this._isub(e2, this), this.negative = 0), this) : this.mod(e2)._move(this);
          }
          imodn(e2) {
            return this.words[0] = this.modrn(e2), this.length = 1, this.negative = 0, this;
          }
          mod(e2) {
            return this._div(e2, h | d)[1];
          }
          modn(e2) {
            return this.clone().imodn(e2);
          }
          modrn(e2) {
            C(O(e2), "num", "smi");
            let t3 = this.remrn(e2);
            return t3 < 0 && (e2 < 0 ? t3 -= e2 : t3 += e2), t3;
          }
          divRound(e2) {
            const [t3, r2] = this.quorem(e2);
            if (r2.isZero())
              return t3;
            const n2 = 1 & e2.words[0];
            e2.iushrn(1);
            const i2 = r2.ucmp(e2);
            return e2.iushln(1), e2.words[0] |= n2, i2 < 0 || e2.isOdd() && i2 === 0 ? t3 : this.negative ^ e2.negative ? t3.isubn(1) : t3.iaddn(1);
          }
          ipow(e2) {
            return this.pow(e2)._move(this);
          }
          ipown(e2) {
            return this.pown(e2)._move(this);
          }
          pow(e2) {
            C(y.isBN(e2), "num", "bignum");
            let t3 = L(e2.words[e2.length - 1]), r2 = new y(1);
            for (let n2 = e2.length - 1; n2 >= 0; n2--) {
              const i2 = e2.words[n2];
              for (let e3 = t3 - 1; e3 >= 0; e3--)
                r2 = r2.sqr(), i2 >> e3 & 1 && (r2 = r2.mul(this));
              t3 = 26;
            }
            return r2;
          }
          pown(e2) {
            if (C(O(e2), "num", "smi"), e2 < 0 && (e2 = -e2), e2 === 0)
              return new y(1);
            if (e2 === 1)
              return this.clone();
            let t3 = this;
            for (let r2 = L(e2) - 2; r2 >= 0; r2--)
              t3 = t3.sqr(), e2 >> r2 & 1 && (t3 = t3.mul(this));
            return t3;
          }
          isqr() {
            return this.imul(this);
          }
          sqr() {
            return this.mul(this);
          }
          _rootrem(e2, t3) {
            if (C(e2 >>> 0 === e2, "num", "uint32"), e2 === 0)
              throw new RangeError("Zeroth root.");
            if (~e2 & this.negative)
              throw new RangeError("Negative with even root.");
            if (this.ucmpn(1) <= 0)
              return [this.clone(), new y(0)];
            let r2, n2, i2 = new y(0), s2 = y.shift(1, this.bitLength() / e2 + 1 | 0);
            if (this.negative !== 0 && s2.ineg(), e2 === 2)
              do {
                i2 = s2, s2 = this.quo(i2), s2.iadd(i2), s2.iushrn(1);
              } while (s2.ucmp(i2) < 0);
            else
              do {
                i2 = s2, s2 = i2.pown(e2 - 1), s2 = this.quo(s2), r2 = i2.muln(e2 - 1), s2.iadd(r2), s2 = s2.quon(e2);
              } while (s2.ucmp(i2) < 0);
            return t3 && (s2 = i2.pown(e2), n2 = this.sub(s2)), [i2, n2];
          }
          rootrem(e2) {
            return this._rootrem(e2, 1);
          }
          iroot(e2) {
            return this.root(e2)._move(this);
          }
          root(e2) {
            return this._rootrem(e2, 0)[0];
          }
          isPower(e2) {
            if (C(e2 >>> 0 === e2, "num", "uint32"), e2 === 0 || ~e2 & this.negative)
              return false;
            const [, t3] = this.rootrem(e2);
            return t3.sign() === 0;
          }
          sqrtrem() {
            return this.rootrem(2);
          }
          isqrt() {
            return this.sqrt()._move(this);
          }
          sqrt() {
            return this.root(2);
          }
          isSquare() {
            return this.isPower(2);
          }
          iand(e2) {
            C(y.isBN(e2), "num", "bignum");
            let t3 = this, r2 = e2;
            if (t3 === r2)
              return t3;
            if ((t3.negative | r2.negative) == 0)
              return t3.iuand(r2);
            if ((t3.negative & r2.negative) == 1)
              return t3.iaddn(1), r2.iaddn(1), t3.iuor(r2), t3.isubn(1), r2.isubn(1), t3;
            t3.negative !== 0 && ([t3, r2] = [r2.clone(), t3]);
            const n2 = t3.bitLength();
            return r2.iaddn(1), r2.inotn(n2), t3.iuand(r2), r2.inotn(n2), r2.isubn(1), t3._move(this);
          }
          iandn(e2) {
            return C(O(e2), "num", "smi"), (this.negative | e2 < 0) != 0 ? this.iand(new y(e2)) : (this.words[0] &= e2, this.length = 1, this);
          }
          and(e2) {
            return this.clone().iand(e2);
          }
          andn(e2) {
            return this.clone().iandn(e2);
          }
          andrn(e2) {
            if (C(O(e2), "num", "smi"), (this.negative | e2 < 0) != 0) {
              const t3 = this.iand(new y(e2));
              if (t3.length > 1)
                throw new RangeError("Number exceeds 26 bits.");
              return t3.negative !== 0 ? -t3.words[0] : t3.words[0];
            }
            return this.words[0] & e2;
          }
          iuand(e2) {
            C(y.isBN(e2), "num", "bignum"), this.length = Math.min(this.length, e2.length);
            for (let t3 = 0; t3 < this.length; t3++)
              this.words[t3] &= e2.words[t3];
            return this._strip();
          }
          iuandn(e2) {
            return C(O(e2), "num", "smi"), this.words[0] &= Math.abs(e2), this.length = 1, this._normalize();
          }
          uand(e2) {
            return this.clone().iuand(e2);
          }
          uandn(e2) {
            return this.clone().iuandn(e2);
          }
          uandrn(e2) {
            C(O(e2), "num", "smi");
            const t3 = this.words[0] & Math.abs(e2);
            return this.negative !== 0 ? 0 | -t3 : t3;
          }
          ior(e2) {
            C(y.isBN(e2), "num", "bignum");
            let t3 = this, r2 = e2;
            return t3 === r2 ? t3 : (t3.negative | r2.negative) == 0 ? t3.iuor(r2) : (t3.negative & r2.negative) == 1 ? (t3.iaddn(1), r2.iaddn(1), t3.iuand(r2), t3.isubn(1), r2.isubn(1), t3) : (r2 = r2.clone(), t3.negative !== 0 && ([t3, r2] = [r2, t3]), r2.iaddn(1), t3.inotn(r2.bitLength()), r2.iuand(t3), r2.isubn(1), r2._move(this));
          }
          iorn(e2) {
            return C(O(e2), "num", "smi"), (this.negative | e2 < 0) != 0 ? this.ior(new y(e2)) : (this.words[0] |= e2, this);
          }
          or(e2) {
            return this.clone().ior(e2);
          }
          orn(e2) {
            return this.clone().iorn(e2);
          }
          iuor(e2) {
            C(y.isBN(e2), "num", "bignum"), this._expand(e2.length);
            for (let t3 = 0; t3 < e2.length; t3++)
              this.words[t3] |= e2.words[t3];
            return this;
          }
          iuorn(e2) {
            return C(O(e2), "num", "smi"), this.words[0] |= Math.abs(e2), this;
          }
          uor(e2) {
            return this.clone().iuor(e2);
          }
          uorn(e2) {
            return this.clone().iuorn(e2);
          }
          ixor(e2) {
            C(y.isBN(e2), "num", "bignum");
            let t3 = this, r2 = e2;
            return t3 === r2 ? (t3.words[0] = 0, t3.length = 1, t3.negative = 0, t3) : (t3.negative | r2.negative) == 0 ? t3.iuxor(r2) : (t3.negative & r2.negative) == 1 ? (t3.iaddn(1), r2.iaddn(1), t3.iuxor(r2), t3.ineg(), r2.isubn(1), t3) : (t3.negative !== 0 && ([t3, r2] = [r2.clone(), t3]), r2.iaddn(1), t3.iuxor(r2), t3.iaddn(1), t3.ineg(), r2.isubn(1), t3._move(this));
          }
          ixorn(e2) {
            return C(O(e2), "num", "smi"), (this.negative | e2 < 0) != 0 ? this.ixor(new y(e2)) : (this.words[0] ^= e2, this);
          }
          xor(e2) {
            return this.clone().ixor(e2);
          }
          xorn(e2) {
            return this.clone().ixorn(e2);
          }
          iuxor(e2) {
            C(y.isBN(e2), "num", "bignum");
            let t3 = this, r2 = e2;
            t3.length < r2.length && ([t3, r2] = [r2, t3]);
            let n2 = 0;
            for (; n2 < r2.length; n2++)
              this.words[n2] = t3.words[n2] ^ r2.words[n2];
            if (t3 !== this)
              for (this._alloc(t3.length); n2 < t3.length; n2++)
                this.words[n2] = t3.words[n2];
            return this.length = t3.length, this._strip();
          }
          iuxorn(e2) {
            return C(O(e2), "num", "smi"), this.words[0] ^= Math.abs(e2), this._normalize();
          }
          uxor(e2) {
            return this.clone().iuxor(e2);
          }
          uxorn(e2) {
            return this.clone().iuxorn(e2);
          }
          inot() {
            return this.negative !== 0 ? this.ineg().isubn(1) : this.iaddn(1).ineg(), this;
          }
          not() {
            return this.clone().inot();
          }
          inotn(e2) {
            C(e2 >>> 0 === e2, "width", "uint32");
            const t3 = e2 % 26;
            let r2 = Math.ceil(e2 / 26), n2 = 0;
            for (this._expand(r2), t3 > 0 && (r2 -= 1); n2 < r2; n2++)
              this.words[n2] ^= 67108863;
            return t3 > 0 && (this.words[n2] ^= (1 << t3) - 1), this._strip();
          }
          notn(e2) {
            return this.clone().inotn(e2);
          }
          ishl(e2) {
            return C(y.isBN(e2), "bits", "bignum"), C(e2.bitLength() <= 32, "bits", "uint32"), this.ishln(e2.toNumber());
          }
          ishln(e2) {
            return this.iushln(e2);
          }
          shl(e2) {
            return this.clone().ishl(e2);
          }
          shln(e2) {
            return this.clone().ishln(e2);
          }
          iushl(e2) {
            return C(y.isBN(e2), "bits", "bignum"), C(e2.bitLength() <= 32, "bits", "uint32"), this.iushln(e2.toNumber());
          }
          iushln(e2) {
            C(e2 >>> 0 === e2, "bits", "uint32");
            const t3 = e2 % 26, r2 = (e2 - t3) / 26, n2 = (1 << t3) - 1 << 26 - t3;
            if (t3 !== 0) {
              let e3 = 0;
              for (let r3 = 0; r3 < this.length; r3++) {
                const i2 = this.words[r3] & n2, s2 = (0 | this.words[r3]) - i2 << t3;
                this.words[r3] = s2 | e3, e3 = i2 >>> 26 - t3;
              }
              e3 !== 0 && (this._alloc(this.length + 1), this.words[this.length++] = e3);
            }
            if (r2 !== 0) {
              this._alloc(this.length + r2);
              for (let e3 = this.length - 1; e3 >= 0; e3--)
                this.words[e3 + r2] = this.words[e3];
              for (let e3 = 0; e3 < r2; e3++)
                this.words[e3] = 0;
              this.length += r2;
            }
            return this._strip();
          }
          ushl(e2) {
            return this.clone().iushl(e2);
          }
          ushln(e2) {
            return this.clone().iushln(e2);
          }
          _split(e2, t3) {
            const r2 = e2 % 26, n2 = Math.min((e2 - r2) / 26, this.length), i2 = (1 << r2) - 1;
            if (t3) {
              t3._alloc(n2);
              for (let e3 = 0; e3 < n2; e3++)
                t3.words[e3] = this.words[e3];
              t3.length = n2;
            }
            if (n2 === 0)
              ;
            else if (this.length > n2) {
              this.length -= n2;
              for (let e3 = 0; e3 < this.length; e3++)
                this.words[e3] = this.words[e3 + n2];
            } else
              this.words[0] = 0, this.length = 1;
            let s2 = 0;
            if (r2 !== 0)
              for (let o2 = this.length - 1; o2 >= 0; o2--) {
                const e3 = 0 | this.words[o2];
                this.words[o2] = s2 << 26 - r2 | e3 >>> r2, s2 = e3 & i2;
              }
            return t3 && (s2 !== 0 ? (t3._alloc(t3.length + 1), t3.words[t3.length++] = s2) : (t3.length === 0 && (t3.words[t3.length++] = 0), t3._strip())), this._strip();
          }
          ishr(e2) {
            return C(y.isBN(e2), "bits", "bignum"), C(e2.bitLength() <= 32, "bits", "uint32"), this.ishrn(e2.toNumber());
          }
          ishrn(e2) {
            return C(e2 >>> 0 === e2, "bits", "uint32"), this.negative !== 0 ? (this.iaddn(1), this.iushrn(e2), this.isubn(1), this) : this.iushrn(e2);
          }
          shr(e2) {
            return this.clone().ishr(e2);
          }
          shrn(e2) {
            return this.clone().ishrn(e2);
          }
          iushr(e2) {
            return C(y.isBN(e2), "bits", "bignum"), C(e2.bitLength() <= 32, "bits", "uint32"), this.iushrn(e2.toNumber());
          }
          iushrn(e2) {
            return C(e2 >>> 0 === e2, "bits", "uint32"), this._split(e2, null);
          }
          ushr(e2) {
            return this.clone().iushr(e2);
          }
          ushrn(e2) {
            return this.clone().iushrn(e2);
          }
          setn(e2, t3) {
            return C(e2 >>> 0 === e2, "bit", "uint32"), this.negative !== 0 ? (this.iaddn(1), this.usetn(e2, !t3), this.isubn(1), this) : this.usetn(e2, t3);
          }
          usetn(e2, t3) {
            C(e2 >>> 0 === e2, "bit", "uint32");
            const r2 = e2 % 26, n2 = (e2 - r2) / 26;
            return this._expand(n2 + 1), t3 ? this.words[n2] |= 1 << r2 : this.words[n2] &= ~(1 << r2), this._strip();
          }
          testn(e2) {
            C(e2 >>> 0 === e2, "bit", "uint32");
            const t3 = e2 % 26, r2 = (e2 - t3) / 26;
            if (this.length <= r2)
              return this.negative;
            const n2 = this.words[r2], i2 = n2 >> t3 & 1;
            if (this.negative !== 0) {
              if (t3 > 0 && n2 & (1 << t3) - 1)
                return 1 ^ i2;
              let e3 = r2;
              for (; e3--; )
                if (this.words[e3] > 0)
                  return 1 ^ i2;
            }
            return i2;
          }
          utestn(e2) {
            C(e2 >>> 0 === e2, "bit", "uint32");
            const t3 = e2 % 26, r2 = (e2 - t3) / 26;
            return this.length <= r2 ? 0 : this.words[r2] >> t3 & 1;
          }
          imaskn(e2) {
            return C(e2 >>> 0 === e2, "bits", "uint32"), this.negative !== 0 && (this.iaddn(1), this.inotn(e2 + 1), this.ineg()), this.iumaskn(e2);
          }
          maskn(e2) {
            return this.clone().imaskn(e2);
          }
          iumaskn(e2) {
            C(e2 >>> 0 === e2, "bits", "uint32");
            const t3 = e2 % 26;
            let r2 = (e2 - t3) / 26;
            return this.length <= r2 ? this : (t3 !== 0 && (r2 += 1), this.length = Math.min(r2, this.length), t3 !== 0 && (this.words[this.length - 1] &= (1 << t3) - 1), this.length === 0 && (this.words[this.length++] = 0), this._strip());
          }
          umaskn(e2) {
            return this.clone().iumaskn(e2);
          }
          andln(e2) {
            return this.words[0] & e2;
          }
          bit(e2) {
            return this.utestn(e2);
          }
          bits(e2, t3) {
            C(e2 >>> 0 === e2, "pos", "uint32"), C(t3 >>> 0 === t3, "width", "uint32"), C(t3 <= 26, "width", "width");
            const r2 = e2 % 26, n2 = (e2 - r2) / 26;
            if (n2 >= this.length)
              return 0;
            let i2 = this.words[n2] >> r2 & (1 << t3) - 1;
            if (r2 + t3 > 26 && n2 + 1 < this.length) {
              const e3 = r2 + t3 - 26;
              i2 |= (this.words[n2 + 1] & (1 << e3) - 1) << 26 - r2;
            }
            return i2;
          }
          ineg() {
            return this.isZero() || (this.negative ^= 1), this;
          }
          neg() {
            return this.clone().ineg();
          }
          iabs() {
            return this.negative = 0, this;
          }
          abs() {
            return this.clone().iabs();
          }
          cmp(e2) {
            if (C(y.isBN(e2), "num", "bignum"), this.negative !== e2.negative)
              return e2.negative - this.negative;
            const t3 = this.ucmp(e2);
            return this.negative !== 0 ? 0 | -t3 : t3;
          }
          cmpn(e2) {
            C(O(e2), "num", "smi");
            const t3 = e2 < 0 | 0;
            if (this.negative !== t3)
              return t3 - this.negative;
            const r2 = this.ucmpn(e2);
            return this.negative !== 0 ? 0 | -r2 : r2;
          }
          eq(e2) {
            return this.cmp(e2) === 0;
          }
          eqn(e2) {
            return this.cmpn(e2) === 0;
          }
          gt(e2) {
            return this.cmp(e2) > 0;
          }
          gtn(e2) {
            return this.cmpn(e2) > 0;
          }
          gte(e2) {
            return this.cmp(e2) >= 0;
          }
          gten(e2) {
            return this.cmpn(e2) >= 0;
          }
          lt(e2) {
            return this.cmp(e2) < 0;
          }
          ltn(e2) {
            return this.cmpn(e2) < 0;
          }
          lte(e2) {
            return this.cmp(e2) <= 0;
          }
          lten(e2) {
            return this.cmpn(e2) <= 0;
          }
          sign() {
            return this.negative !== 0 ? -1 : this.length === 1 && this.words[0] === 0 ? 0 : 1;
          }
          isZero() {
            return this.length === 1 && this.words[0] === 0;
          }
          isNeg() {
            return this.negative !== 0;
          }
          isPos() {
            return this.negative === 0;
          }
          isOdd() {
            return (1 & this.words[0]) == 1;
          }
          isEven() {
            return (1 & this.words[0]) == 0;
          }
          ucmp(e2) {
            if (C(y.isBN(e2), "num", "bignum"), this.length < e2.length)
              return -1;
            if (this.length > e2.length)
              return 1;
            for (let t3 = this.length - 1; t3 >= 0; t3--) {
              const r2 = 0 | this.words[t3], n2 = 0 | e2.words[t3];
              if (r2 !== n2)
                return (r2 > n2) - (r2 < n2);
            }
            return 0;
          }
          ucmpn(e2) {
            if (C(O(e2), "num", "smi"), this.length > 1)
              return 1;
            const t3 = 0 | this.words[0];
            return e2 < 0 && (e2 = -e2), (t3 > e2) - (t3 < e2);
          }
          legendre(e2) {
            const t3 = p ? y.red(e2) : y.mont(e2);
            return this.toRed(t3).redLegendre();
          }
          jacobi(e2) {
            if (C(y.isBN(e2), "num", "bignum"), e2.isZero() || e2.isEven())
              throw new Error("jacobi: `num` must be odd.");
            let t3 = this._cloneNormal(), r2 = e2.clone(), n2 = 1;
            for (r2.isNeg() && (t3.isNeg() && (n2 = -1), r2.ineg()), (t3.isNeg() || t3.ucmp(r2) >= 0) && t3.imod(r2); !t3.isZero(); ) {
              if (1 & t3._makeOdd()) {
                const e4 = r2.andln(7);
                e4 !== 3 && e4 !== 5 || (n2 = -n2);
              }
              t3.ucmp(r2) < 0 && ([t3, r2] = [r2, t3], t3.andln(3) === 3 && r2.andln(3) === 3 && (n2 = -n2)), t3._isub(t3, r2).iushrn(1);
              const e3 = r2.andln(7);
              e3 !== 3 && e3 !== 5 || (n2 = -n2);
            }
            return r2.cmpn(1) !== 0 ? 0 : n2;
          }
          kronecker(e2) {
            C(y.isBN(e2), "num", "bignum");
            const t3 = [0, 1, 0, -1, 0, -1, 0, 1];
            let r2 = this._cloneNormal(), n2 = e2.clone(), i2 = 1;
            if (n2.isZero())
              return r2.ucmpn(1) === 0 ? i2 : 0;
            if (!r2.isOdd() && !n2.isOdd())
              return 0;
            for (1 & n2._makeOdd() && (i2 = t3[r2.andln(7)]), n2.isNeg() && (r2.isNeg() && (i2 = -i2), n2.ineg()); !r2.isZero(); ) {
              1 & r2._makeOdd() && (i2 *= t3[n2.andln(7)]);
              (r2.words[0] ^ 67108863 * r2.negative) & n2.words[0] & 2 && (i2 = -i2), n2.imod(r2), [r2, n2] = [n2, r2], n2.negative = 0;
            }
            return n2.cmpn(1) !== 0 ? 0 : i2;
          }
          igcd(e2) {
            return this.gcd(e2)._move(this);
          }
          gcd(e2) {
            if (C(y.isBN(e2), "num", "bignum"), this.isZero())
              return e2.abs();
            if (e2.isZero())
              return this.abs();
            let t3 = this.clone(), r2 = e2.clone();
            t3.negative = 0, r2.negative = 0;
            const n2 = t3._factor2(r2);
            for (n2 !== 0 && (t3.iushrn(n2), r2.iushrn(n2)); ; ) {
              t3._makeOdd(), r2._makeOdd();
              const e3 = t3.ucmp(r2);
              if (e3 < 0)
                [t3, r2] = [r2, t3];
              else if (e3 === 0 || r2.ucmpn(1) === 0)
                break;
              t3._isub(t3, r2);
            }
            return r2.iushln(n2);
          }
          ilcm(e2) {
            return this.lcm(e2)._move(this);
          }
          lcm(e2) {
            return C(y.isBN(e2), "num", "bignum"), this.isZero() || e2.isZero() ? new y(0) : this.quo(this.gcd(e2)).mul(e2).iabs();
          }
          egcd(e2) {
            if (C(y.isBN(e2), "num", "bignum"), this.isZero())
              return [new y(0), new y(e2.sign()), e2.abs()];
            if (e2.isZero())
              return [new y(this.sign()), new y(0), this.abs()];
            const t3 = this.clone(), r2 = e2.clone();
            t3.negative = 0, r2.negative = 0;
            const n2 = new y(1), i2 = new y(0), s2 = new y(0), o2 = new y(1), a2 = t3._factor2(r2);
            a2 !== 0 && (t3.iushrn(a2), r2.iushrn(a2));
            const c2 = r2.clone(), u2 = t3.clone();
            for (; !t3.isZero(); ) {
              let e3 = t3._makeOdd(), a3 = r2._makeOdd();
              for (; e3--; )
                (n2.isOdd() || i2.isOdd()) && (n2.iadd(c2), i2.isub(u2)), n2.iushrn(1), i2.iushrn(1);
              for (; a3--; )
                (s2.isOdd() || o2.isOdd()) && (s2.iadd(c2), o2.isub(u2)), s2.iushrn(1), o2.iushrn(1);
              t3.cmp(r2) >= 0 ? (t3.isub(r2), n2.isub(s2), i2.isub(o2)) : (r2.isub(t3), s2.isub(n2), o2.isub(i2));
            }
            return this.negative !== 0 && s2.ineg(), e2.negative !== 0 && o2.ineg(), [s2, o2, r2.iushln(a2)];
          }
          iinvert(e2) {
            return this.invert(e2)._move(this);
          }
          invert(e2) {
            if (C(y.isBN(e2), "num", "bignum"), M(e2.sign() > 0, "invert"), e2.isOdd())
              return this._invertp(e2);
            if (e2.cmpn(1) === 0)
              throw new RangeError("Not invertible.");
            const [t3, , r2] = this.egcd(e2);
            if (r2.cmpn(1) !== 0)
              throw new RangeError("Not invertible.");
            return t3.imod(e2);
          }
          ifermat(e2) {
            return this.fermat(e2)._move(this);
          }
          fermat(e2) {
            const t3 = p ? y.red(e2) : y.mont(e2);
            return this.toRed(t3).redFermat().fromRed();
          }
          ipowm(e2, t3, r2) {
            return this.powm(e2, t3, r2)._move(this);
          }
          powm(e2, t3, r2) {
            const n2 = !p && r2 ? y.mont(t3) : y.red(t3);
            return this.toRed(n2).redPow(e2).fromRed();
          }
          ipowmn(e2, t3, r2) {
            return this.powmn(e2, t3, r2)._move(this);
          }
          powmn(e2, t3, r2) {
            const n2 = r2 ? y.mont(t3) : y.red(t3);
            return this.toRed(n2).redPown(e2).fromRed();
          }
          isqrtm(e2) {
            return this.sqrtm(e2)._move(this);
          }
          sqrtm(e2) {
            let t3;
            return C(y.isBN(e2), "p", "bignum"), t3 = e2.andln(3) === 3 || e2.andln(7) === 5 ? y.red(e2) : y.mont(e2), this.toRed(t3).redSqrt().fromRed();
          }
          isqrtpq(e2, t3) {
            return this.sqrtpq(e2, t3)._move(this);
          }
          sqrtpq(e2, t3) {
            const r2 = this.sqrtm(e2), n2 = this.sqrtm(t3), [i2, s2] = e2.egcd(t3), o2 = n2.mul(i2).mul(e2), a2 = r2.mul(s2).mul(t3), c2 = e2.mul(t3);
            return o2.iadd(a2).imod(c2);
          }
          isPrime(e2, t3, r2) {
            return C(t3 >>> 0 === t3, "reps", "uint32"), !!this.isPrimeMR(e2, t3 + 1, true) && !!this.isPrimeLucas(r2);
          }
          isPrimeMR(e2, t3, r2 = false) {
            C(t3 >>> 0 === t3, "reps", "uint32"), C(t3 > 0, "reps", "integer"), C(typeof r2 == "boolean", "force2", "boolean");
            const n2 = this;
            if (n2.cmpn(7) < 0)
              return n2.cmpn(2) === 0 || n2.cmpn(3) === 0 || n2.cmpn(5) === 0;
            if (n2.isEven())
              return false;
            const i2 = n2.subn(1), s2 = i2.subn(2), o2 = i2.zeroBits(), a2 = i2.ushrn(o2), c2 = y.red(n2), u2 = i2.toRed(c2), h2 = new y(1).toRed(c2);
            e:
              for (let f2 = 0; f2 < t3; f2++) {
                let n3;
                f2 === t3 - 1 && r2 ? n3 = new y(2) : (n3 = y.random(e2, 0, s2), n3.iaddn(2));
                let i3 = n3.toRed(c2).redPow(a2);
                if (i3.cmp(h2) !== 0 && i3.cmp(u2) !== 0) {
                  for (let e3 = 1; e3 < o2; e3++) {
                    if (i3 = i3.redSqr(), i3.cmp(u2) === 0)
                      continue e;
                    if (i3.cmp(h2) === 0)
                      return false;
                  }
                  return false;
                }
              }
            return true;
          }
          isPrimeLucas(e2 = 0) {
            C(e2 >>> 0 === e2, "limit", "uint32");
            const t3 = this;
            if (t3.cmpn(1) <= 0)
              return false;
            if (t3.isEven())
              return t3.cmpn(2) === 0;
            let r2 = 3;
            for (; ; ) {
              if (r2 > 1e4)
                throw new Error(`Cannot find (D/n) = -1 for ${t3.toString(10)}.`);
              if (e2 !== 0 && r2 > e2)
                return false;
              const n3 = new y(r2 * r2 - 4).jacobi(t3);
              if (n3 === -1)
                break;
              if (n3 === 0)
                return t3.cmpn(r2 + 2) === 0;
              if (r2 === 40 && t3.isSquare())
                return false;
              r2 += 1;
            }
            const n2 = t3.addn(1), i2 = n2._makeOdd(), s2 = t3.subn(2);
            let o2 = new y(2), a2 = new y(r2);
            for (let c2 = n2.bitLength(); c2 >= 0; c2--)
              n2.utestn(c2) ? (o2 = o2.mul(a2).iadd(t3).isubn(r2).imod(t3), a2 = a2.sqr().iadd(s2).imod(t3)) : (a2 = a2.mul(o2).iadd(t3).isubn(r2).imod(t3), o2 = o2.sqr().iadd(s2).imod(t3));
            if (o2.cmpn(2) === 0 || o2.cmp(s2) === 0) {
              let e3 = o2.muln(r2), n3 = a2.ushln(1);
              if (e3.cmp(n3) < 0 && ([e3, n3] = [n3, e3]), e3.isub(n3).imod(t3).isZero())
                return true;
            }
            for (let c2 = 0; c2 < i2 - 1; c2++) {
              if (o2.isZero())
                return true;
              if (o2.cmpn(2) === 0)
                return false;
              o2 = o2.sqr().isubn(2).imod(t3);
            }
            return false;
          }
          toTwos(e2) {
            return this.negative !== 0 ? this.abs().inotn(e2).iaddn(1) : this.clone();
          }
          fromTwos(e2) {
            return C(e2 >>> 0 === e2, "width", "uint32"), M(e2 > 0, "width"), this.testn(e2 - 1) ? this.notn(e2).iaddn(1).ineg() : this.clone();
          }
          toRed(e2) {
            if (C(e2 instanceof A, "ctx", "reduction context"), this.red)
              throw new Error("Already in reduction context.");
            return e2.convertTo(this);
          }
          fromRed() {
            return x(this.red, "fromRed"), this.red.convertFrom(this);
          }
          forceRed(e2) {
            if (C(e2 instanceof A, "ctx", "reduction context"), this.red) {
              if (!e2.m.eq(this.red.m) || e2.mont !== this.red.mont)
                throw new Error("Already in reduction context.");
            } else
              M(this.negative === 0, "red"), M(this.ucmp(e2.m) < 0, "red");
            return this.clone()._forceRed(e2);
          }
          redIAdd(e2) {
            return C(y.isBN(e2), "num", "bignum"), x(this.red, "redIAdd"), this.red.iadd(this, e2);
          }
          redAdd(e2) {
            return C(y.isBN(e2), "num", "bignum"), x(this.red, "redAdd"), this.red.add(this, e2);
          }
          redIAddn(e2) {
            return C(O(e2), "num", "smi"), x(this.red, "redIAddn"), this.red.iaddn(this, e2);
          }
          redAddn(e2) {
            return C(O(e2), "num", "smi"), x(this.red, "redAddn"), this.red.addn(this, e2);
          }
          redISub(e2) {
            return C(y.isBN(e2), "num", "bignum"), x(this.red, "redISub"), this.red.isub(this, e2);
          }
          redSub(e2) {
            return C(y.isBN(e2), "num", "bignum"), x(this.red, "redSub"), this.red.sub(this, e2);
          }
          redISubn(e2) {
            return C(O(e2), "num", "smi"), x(this.red, "redISubn"), this.red.isubn(this, e2);
          }
          redSubn(e2) {
            return C(O(e2), "num", "smi"), x(this.red, "redSubn"), this.red.subn(this, e2);
          }
          redIMul(e2) {
            return C(y.isBN(e2), "num", "bignum"), x(this.red, "redIMul"), this.red.imul(this, e2);
          }
          redMul(e2) {
            return C(y.isBN(e2), "num", "bignum"), x(this.red, "redMul"), this.red.mul(this, e2);
          }
          redIMuln(e2) {
            return C(O(e2), "num", "smi"), x(this.red, "redIMuln"), this.red.imuln(this, e2);
          }
          redMuln(e2) {
            return C(O(e2), "num", "smi"), x(this.red, "redMuln"), this.red.muln(this, e2);
          }
          redIDiv(e2) {
            return C(y.isBN(e2), "num", "bignum"), x(this.red, "redIDiv"), this.red.idiv(this, e2);
          }
          redDiv(e2) {
            return C(y.isBN(e2), "num", "bignum"), x(this.red, "redDiv"), this.red.div(this, e2);
          }
          redIDivn(e2) {
            return C(O(e2), "num", "smi"), x(this.red, "redIDivn"), this.red.idivn(this, e2);
          }
          redDivn(e2) {
            return C(O(e2), "num", "smi"), x(this.red, "redDivn"), this.red.divn(this, e2);
          }
          redIPow(e2) {
            return C(y.isBN(e2), "num", "bignum"), x(this.red, "redIPow"), N(!e2.red, "redIPow"), this.red.ipow(this, e2);
          }
          redPow(e2) {
            return C(y.isBN(e2), "num", "bignum"), x(this.red, "redPow"), N(!e2.red, "redPow"), this.red.pow(this, e2);
          }
          redIPown(e2) {
            return C(O(e2), "num", "smi"), x(this.red, "redIPown"), this.red.ipown(this, e2);
          }
          redPown(e2) {
            return C(O(e2), "num", "smi"), x(this.red, "redPown"), this.red.pown(this, e2);
          }
          redISqr() {
            return x(this.red, "redISqr"), this.red.isqr(this);
          }
          redSqr() {
            return x(this.red, "redSqr"), this.red.sqr(this);
          }
          redISqrt() {
            return x(this.red, "redISqrt"), this.red.isqrt(this);
          }
          redSqrt() {
            return x(this.red, "redSqrt"), this.red.sqrt(this);
          }
          redIDivSqrt(e2) {
            return x(this.red, "redIDivSqrt"), this.red.idivsqrt(this, e2);
          }
          redDivSqrt(e2) {
            return x(this.red, "redDivSqrt"), this.red.divsqrt(this, e2);
          }
          redIsSquare() {
            return x(this.red, "redIsSquare"), this.red.isSquare(this);
          }
          redIShl(e2) {
            return C(y.isBN(e2), "num", "bignum"), x(this.red, "redIShl"), N(!e2.red, "redIShl"), this.red.ishl(this, e2);
          }
          redShl(e2) {
            return C(y.isBN(e2), "num", "bignum"), x(this.red, "redShl"), N(!e2.red, "redShl"), this.red.shl(this, e2);
          }
          redIShln(e2) {
            return C(e2 >>> 0 === e2, "num", "uint32"), x(this.red, "redIShln"), this.red.ishln(this, e2);
          }
          redShln(e2) {
            return C(e2 >>> 0 === e2, "num", "uint32"), x(this.red, "redShln"), this.red.shln(this, e2);
          }
          redINeg() {
            return x(this.red, "redINeg"), this.red.ineg(this);
          }
          redNeg() {
            return x(this.red, "redNeg"), this.red.neg(this);
          }
          redEq(e2) {
            return C(y.isBN(e2), "num", "bignum"), x(this.red, "redEq"), this.red.eq(this, e2);
          }
          redEqn(e2) {
            return C(O(e2), "num", "smi"), x(this.red, "redEqn"), this.red.eqn(this, e2);
          }
          redIsHigh() {
            return x(this.red, "redIsHigh"), this.red.isHigh(this);
          }
          redIsLow() {
            return x(this.red, "redIsLow"), this.red.isLow(this);
          }
          redIsOdd() {
            return x(this.red, "redIsOdd"), this.red.isOdd(this);
          }
          redIsEven() {
            return x(this.red, "redIsEven"), this.red.isEven(this);
          }
          redLegendre() {
            return x(this.red, "redLegendre"), this.red.legendre(this);
          }
          redJacobi() {
            return x(this.red, "redJacobi"), this.red.jacobi(this);
          }
          redKronecker() {
            return x(this.red, "redKronecker"), this.red.kronecker(this);
          }
          redIInvert() {
            return x(this.red, "redIInvert"), this.red.iinvert(this);
          }
          redInvert() {
            return x(this.red, "redInvert"), this.red.invert(this);
          }
          redIFermat() {
            return x(this.red, "redIFermat"), this.red.ifermat(this);
          }
          redFermat() {
            return x(this.red, "redFermat"), this.red.fermat(this);
          }
          _move(e2) {
            return e2.words = this.words, e2.length = this.length, e2.negative = this.negative, e2.red = this.red, e2;
          }
          _alloc(e2) {
            for (; this.words.length < e2; )
              this.words.push(0);
            return this;
          }
          _expand(e2) {
            for (this._alloc(e2); this.length < e2; )
              this.words[this.length++] = 0;
            return this;
          }
          _strip() {
            for (; this.length > 1 && this.words[this.length - 1] === 0; )
              this.length -= 1;
            return this._normalize();
          }
          _normalize() {
            return T(this.length > 0), this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
          }
          _check() {
            return T(this.length > 0), T(this.length <= this.words.length), this.length === 1 ? (this.words[0] === 0 && T(this.negative === 0), this) : (T(this.words[this.length - 1] !== 0), this);
          }
          _invertp(e2) {
            if (C(y.isBN(e2), "p", "bignum"), M(e2.sign() > 0, "invert"), T(e2.isOdd()), e2.cmpn(1) === 0)
              throw new RangeError("Not invertible.");
            const t3 = this.clone(), r2 = e2.clone(), n2 = new y(1), i2 = new y(0);
            for ((t3.isNeg() || t3.ucmp(r2) >= 0) && t3.imod(r2); !t3.isZero(); ) {
              let s2 = t3._makeOdd(), o2 = r2._makeOdd();
              for (; s2--; )
                n2.isOdd() && n2._iadd(n2, e2), n2.iushrn(1);
              for (; o2--; )
                i2.isOdd() && i2._iadd(i2, e2), i2.iushrn(1);
              t3.ucmp(r2) >= 0 ? (t3._isub(t3, r2), n2.ucmp(i2) < 0 ? (n2._isub(i2, n2), n2._isub(e2, n2)) : n2._isub(n2, i2)) : (r2._isub(r2, t3), i2.ucmp(n2) < 0 ? (i2._isub(n2, i2), i2._isub(e2, i2)) : i2._isub(i2, n2));
            }
            if (r2.cmpn(1) !== 0)
              throw new RangeError("Not invertible.");
            return T(i2.negative === 0), T(i2.ucmp(e2) < 0), i2;
          }
          _makeOdd() {
            const e2 = this.zeroBits();
            return e2 > 0 && this.iushrn(e2), e2;
          }
          _factor2(e2) {
            if (1 & (this.words[0] | e2.words[0]))
              return 0;
            const t3 = Math.min(this.length, e2.length);
            let r2 = 0;
            for (let n2 = 0; n2 < t3; n2++) {
              const t4 = U(this.words[n2] | e2.words[n2]);
              if (r2 += t4, t4 !== 26)
                break;
            }
            return r2;
          }
          _cloneNormal() {
            return this.red ? this.fromRed() : this.clone();
          }
          _forceRed(e2) {
            return this.red = e2, this;
          }
          clone() {
            const e2 = new y();
            e2.words = new Array(this.length);
            for (let t3 = 0; t3 < this.length; t3++)
              e2.words[t3] = this.words[t3];
            return e2.length = this.length, e2.negative = this.negative, e2.red = this.red, e2;
          }
          inject(e2) {
            C(y.isBN(e2), "num", "bignum"), this._alloc(e2.length);
            for (let t3 = 0; t3 < e2.length; t3++)
              this.words[t3] = e2.words[t3];
            return this.length = e2.length, this.negative = e2.negative, this.red = e2.red, this;
          }
          set(e2, t3) {
            return this.fromNumber(e2, t3);
          }
          swap(e2) {
            C(y.isBN(e2), "num", "bignum");
            const t3 = this, r2 = e2;
            return [t3.words, r2.words] = [r2.words, t3.words], [t3.length, r2.length] = [r2.length, t3.length], [t3.negative, r2.negative] = [r2.negative, t3.negative], [t3.red, r2.red] = [r2.red, t3.red], t3;
          }
          reverse() {
            const e2 = this.negative;
            return this.fromBuffer(this.toBuffer("be"), "le"), this.negative = e2, this;
          }
          byteLength() {
            return Math.ceil(this.bitLength() / 8);
          }
          bitLength() {
            const e2 = L(this.words[this.length - 1]);
            return 26 * (this.length - 1) + e2;
          }
          zeroBits() {
            if (this.isZero())
              return 0;
            if (this.isOdd())
              return 0;
            let e2 = 0;
            for (let t3 = 0; t3 < this.length; t3++) {
              const r2 = U(this.words[t3]);
              if (e2 += r2, r2 !== 26)
                break;
            }
            return e2;
          }
          isSafe() {
            return this.length <= 2 || this.length === 3 && this.words[2] === 1;
          }
          word(e2) {
            return C(e2 >>> 0 === e2, "pos", "uint32"), e2 >= this.length ? 0 : this.words[e2];
          }
          [n]() {
            let e2 = "BN";
            return this.red && (e2 = "BN-R"), `<${e2}: ${this.toString(10)}>`;
          }
          csign() {
            return -2 * this.negative + 1 - this.czero();
          }
          czero() {
            const e2 = this.words[0] - 1 >>> 31;
            return this.length - 2 >>> 31 & e2;
          }
          cneg() {
            return this.negative;
          }
          cpos() {
            return 1 ^ this.negative;
          }
          ceq(e2) {
            C(y.isBN(e2), "num", "bignum");
            let t3 = 0;
            for (let r2 = 0; r2 < e2.length; r2++)
              t3 |= this.words[r2 % this.length] ^ e2.words[r2];
            return t3 |= this.length ^ e2.length, t3 |= this.negative ^ e2.negative, t3 - 1 >>> 31;
          }
          ceqn(e2) {
            const t3 = e2 >> 31 & 1, r2 = (0 | e2) * (1 | -t3) & 67108863;
            let n2 = 0;
            return n2 |= this.words[0] ^ r2, n2 |= 1 ^ this.length, n2 |= this.negative ^ t3, n2 - 1 >>> 31;
          }
          cswap(e2, t3) {
            C(y.isBN(e2), "num", "bignum");
            const r2 = this, n2 = e2, i2 = 67108863 & -(1 & (t3 >> 31 | -t3 >> 31));
            r2._alloc(n2.words.length), n2._alloc(r2.words.length);
            for (let a2 = 0; a2 < r2.words.length; a2++) {
              const e3 = (r2.words[a2] ^ n2.words[a2]) & i2;
              r2.words[a2] ^= e3, n2.words[a2] ^= e3;
            }
            const s2 = (r2.length ^ n2.length) & i2, o2 = (r2.negative ^ n2.negative) & i2;
            return r2.length ^= s2, n2.length ^= s2, r2.negative ^= o2, n2.negative ^= o2, this;
          }
          cinject(e2, t3) {
            C(y.isBN(e2), "num", "bignum");
            const r2 = this, n2 = e2, i2 = 1 & (t3 >> 31 | -t3 >> 31), s2 = i2 - 1 & 67108863, o2 = 67108863 & ~(i2 - 1);
            r2._alloc(n2.length);
            for (let a2 = 0; a2 < n2.length; a2++)
              r2.words[a2] = r2.words[a2] & s2 | n2.words[a2] & o2;
            return r2.length = r2.length & s2 | n2.length & o2, r2.negative = r2.negative & s2 | n2.negative & o2, this;
          }
          cset(e2, t3) {
            const r2 = 1 & (t3 >> 31 | -t3 >> 31), n2 = r2 - 1 & 67108863, i2 = 67108863 & ~(r2 - 1), s2 = e2 >> 31 & 1, o2 = (0 | e2) * (1 | -s2) & 67108863;
            return this.words[0] = this.words[0] & n2 | o2 & i2, this.length = this.length & n2 | 1 & i2, this.negative = this.negative & n2 | s2 & i2, this;
          }
          toNumber() {
            let e2 = this.words[0];
            if (this.length === 2)
              e2 += 67108864 * this.words[1];
            else if (this.length === 3 && this.words[2] === 1)
              e2 += 4503599627370496 + 67108864 * this.words[1];
            else if (this.length > 2)
              throw new RangeError("Number can only safely store up to 53 bits.");
            return this.negative !== 0 ? -e2 : e2;
          }
          toDouble() {
            let e2 = 0;
            for (let t3 = this.length - 1; t3 >= 0; t3--)
              e2 = 67108864 * e2 + this.words[t3];
            return this.negative !== 0 ? -e2 : e2;
          }
          valueOf() {
            return this.toDouble();
          }
          toBigInt() {
            if (!p)
              throw new Error("BigInt is not supported!");
            const e2 = BigInt(52), t3 = BigInt(26);
            let r2 = this.length - 1, n2 = BigInt(0);
            for (; r2 >= 1; r2 -= 2) {
              const t4 = 67108864 * this.words[r2], i2 = this.words[r2 - 1];
              n2 = n2 << e2 | BigInt(t4 + i2);
            }
            return r2 >= 0 && (n2 = n2 << t3 | BigInt(this.words[0])), this.negative !== 0 ? -n2 : n2;
          }
          toBool() {
            return !this.isZero();
          }
          toString(e2, t3) {
            if (t3 == null && (t3 = 0), t3 === 0 && (t3 = 1), C((e2 = D(e2)) >>> 0 === e2, "base", "uint32"), C(t3 >>> 0 === t3, "padding", "uint32"), e2 < 2 || e2 > 36)
              throw new RangeError("Base ranges between 2 and 36.");
            if (this._check(), e2 === 16) {
              let e3 = "", r3 = 0, n3 = 0;
              for (let t4 = 0; t4 < this.length; t4++) {
                const s2 = this.words[t4], o2 = (16777215 & (s2 << r3 | n3)).toString(16);
                n3 = s2 >>> 24 - r3 & 16777215, e3 = n3 !== 0 || t4 !== this.length - 1 ? i[6 - o2.length] + o2 + e3 : o2 + e3, r3 += 2, r3 >= 26 && (r3 -= 26, t4 -= 1);
              }
              for (n3 !== 0 && (e3 = n3.toString(16) + e3); e3.length % t3 != 0; )
                e3 = "0" + e3;
              return this.negative !== 0 && (e3 = "-" + e3), e3;
            }
            const r2 = s[e2 - 1], n2 = o[e2 - 1], a2 = this.clone();
            let c2 = "";
            for (a2.negative = 0; !a2.isZero(); ) {
              const t4 = a2.remrn(n2).toString(e2);
              a2.iquon(n2), c2 = a2.isZero() ? t4 + c2 : i[r2 - t4.length] + t4 + c2;
            }
            for (this.isZero() && (c2 = "0"); c2.length % t3 != 0; )
              c2 = "0" + c2;
            return this.negative !== 0 && (c2 = "-" + c2), c2;
          }
          toJSON() {
            return this.toString(16, 2);
          }
          toArray(e2, t3) {
            return this.toArrayLike(Array, e2, t3);
          }
          toBuffer(e2, r2) {
            return this.toArrayLike(t2, e2, r2);
          }
          toArrayLike(e2, t3, r2) {
            t3 == null && (t3 = "be"), r2 == null && (r2 = 0), C(typeof e2 == "function", "ArrayType", "function"), C(t3 === "be" || t3 === "le", "endian", "endianness"), C(r2 >>> 0 === r2, "length", "uint32"), this._check();
            const n2 = this.byteLength(), i2 = r2 || Math.max(1, n2);
            if (n2 > i2)
              throw new RangeError("Byte array longer than desired length.");
            const s2 = function(e3, t4) {
              return e3.allocUnsafeSlow ? e3.allocUnsafeSlow(t4) : new e3(t4);
            }(e2, i2);
            if (t3 === "be") {
              let e3 = s2.length - 1, t4 = 0;
              for (let r3 = 0; r3 < this.length; r3++) {
                const n3 = (3 & r3) << 1, i3 = this.words[r3] << n3 | t4;
                s2[e3--] = 255 & i3, e3 >= 0 && (s2[e3--] = i3 >>> 8 & 255), e3 >= 0 && (s2[e3--] = i3 >>> 16 & 255), n3 === 6 ? (e3 >= 0 && (s2[e3--] = i3 >>> 24 & 255), t4 = 0) : t4 = i3 >>> 24;
              }
              if (e3 >= 0) {
                for (s2[e3--] = t4; e3 >= 0; )
                  s2[e3--] = 0;
                t4 = 0;
              }
              T(t4 === 0);
            } else {
              let e3 = 0, t4 = 0;
              for (let r3 = 0; r3 < this.length; r3++) {
                const n3 = (3 & r3) << 1, i3 = this.words[r3] << n3 | t4;
                s2[e3++] = 255 & i3, e3 < s2.length && (s2[e3++] = i3 >>> 8 & 255), e3 < s2.length && (s2[e3++] = i3 >>> 16 & 255), n3 === 6 ? (e3 < s2.length && (s2[e3++] = i3 >>> 24 & 255), t4 = 0) : t4 = i3 >>> 24;
              }
              if (e3 < s2.length) {
                for (s2[e3++] = t4; e3 < s2.length; )
                  s2[e3++] = 0;
                t4 = 0;
              }
              T(t4 === 0);
            }
            return s2;
          }
          encode(e2, t3) {
            return this.toBuffer(e2, t3);
          }
          of(e2, t3) {
            return this.fromNumber(e2, t3);
          }
          fromNumber(e2, t3) {
            t3 == null && (t3 = "be"), C(B(e2), "num", "integer"), C(t3 === "be" || t3 === "le", "endian", "endianness");
            const r2 = e2 < 0 | 0;
            return r2 && (e2 = -e2), e2 < 67108864 ? (this.words[0] = 67108863 & e2, this.length = 1) : e2 < 4503599627370496 ? (this.words = [67108863 & e2, e2 / 67108864 & 67108863], this.length = 2) : (this.words = [67108863 & e2, e2 / 67108864 & 67108863, 1], this.length = 3), this.negative = r2, t3 === "le" && this.reverse(), this;
          }
          fromDouble(e2, t3) {
            t3 == null && (t3 = "be"), C(typeof e2 == "number", "num", "double"), C(t3 === "be" || t3 === "le", "endian", "endianness"), isFinite(e2) || (e2 = 0);
            const r2 = e2 <= -1 | 0;
            for (e2 < 0 && (e2 = -e2), e2 = Math.floor(e2), this.words = []; e2 > 0; ) {
              const t4 = e2 % 67108864, r3 = (e2 - t4) / 67108864;
              this.words.push(t4), e2 = r3;
            }
            return this.words.length === 0 && this.words.push(0), this.length = this.words.length, this.negative = r2, t3 === "le" && this.reverse(), this;
          }
          fromBigInt(e2, t3) {
            if (t3 == null && (t3 = "be"), C(typeof e2 == "bigint", "num", "bigint"), C(t3 === "be" || t3 === "le", "endian", "endianness"), !p)
              throw new Error("BigInt is not supported!");
            const r2 = e2 < BigInt(0) | 0;
            return this._fromHex(e2.toString(16), r2), this.negative = r2, t3 === "le" && this.reverse(), this;
          }
          fromBool(e2) {
            return C(typeof e2 == "boolean", "value", "boolean"), this.words[0] = 0 | e2, this.length = 1, this.negative = 0, this;
          }
          fromString(e2, t3, r2) {
            if (t3 !== "le" && t3 !== "be" || ([t3, r2] = [r2, t3]), t3 = D(t3), r2 == null && (r2 = "be"), C(typeof e2 == "string", "string", "string"), C(t3 >>> 0 === t3, "base", "uint32"), C(r2 === "be" || r2 === "le", "endian", "endianness"), t3 < 2 || t3 > 36)
              throw new Error("Base ranges between 2 and 36.");
            let n2 = 0;
            return (e2 = e2.replace(/\s+/g, "")).length > 0 && e2.charCodeAt(0) === 45 && (n2 = 1), t3 === 16 ? this._fromHex(e2, n2) : this._fromBase(e2, t3, n2), this.negative = n2, this._normalize(), r2 === "le" && this.reverse(), this;
          }
          _fromHex(e2, t3) {
            this.length = Math.max(2, Math.ceil((e2.length - t3) / 6)), this.words = new Array(this.length);
            for (let s2 = 0; s2 < this.length; s2++)
              this.words[s2] = 0;
            let r2 = 0, n2 = e2.length - 6, i2 = 0;
            for (; n2 >= t3; n2 -= 6) {
              const t4 = j(e2, n2, n2 + 6);
              this.words[i2] |= t4 << r2 & 67108863, this.words[i2 + 1] |= t4 >>> 26 - r2 & 4194303, r2 += 24, r2 >= 26 && (r2 -= 26, i2 += 1);
            }
            if (n2 + 6 !== t3) {
              const s2 = j(e2, t3, n2 + 6);
              this.words[i2] |= s2 << r2 & 67108863, this.words[i2 + 1] |= s2 >>> 26 - r2 & 4194303;
            }
            return this._strip();
          }
          _fromBase(e2, t3, r2) {
            this.words[0] = 0, this.length = 1, this.negative = 0;
            let n2 = 0, i2 = 1;
            for (; i2 <= 67108863; i2 *= t3)
              n2 += 1;
            n2 -= 1, i2 = i2 / t3 | 0;
            const s2 = e2.length - r2, o2 = s2 % n2, a2 = Math.min(s2, s2 - o2) + r2;
            let c2 = r2;
            for (; c2 < a2; c2 += n2) {
              const r3 = F(e2, c2, c2 + n2, t3);
              this.imuln(i2), this._iaddn(r3);
            }
            if (o2 !== 0) {
              const r3 = Math.pow(t3, o2), n3 = F(e2, c2, e2.length, t3);
              this.imuln(r3), this._iaddn(n3);
            }
            return this;
          }
          fromJSON(e2) {
            if (y.isBN(e2))
              return e2.red ? e2.fromRed() : e2.clone();
            if (Array.isArray(e2)) {
              for (const t3 of e2)
                C(typeof t3 == "string", "chunk", "string");
              e2 = e2.join("");
            }
            return this.fromString(e2, 16);
          }
          fromBN(e2) {
            return this.inject(e2);
          }
          fromArray(e2, t3) {
            return C(Array.isArray(e2), "data", "array"), this.fromArrayLike(e2, t3);
          }
          fromBuffer(e2, r2) {
            return C(t2.isBuffer(e2), "data", "buffer"), this.fromArrayLike(e2, r2);
          }
          fromArrayLike(e2, t3) {
            if (t3 == null && (t3 = "be"), C(e2 && e2.length >>> 0 === e2.length, "data", "array-like"), C(t3 === "be" || t3 === "le", "endian", "endianness"), e2.length === 0)
              return this.words[0] = 0, this.length = 1, this.negative = 0, this;
            this.length = Math.max(2, Math.ceil(e2.length / 3)), this.words = new Array(this.length), this.negative = 0;
            for (let o2 = 0; o2 < this.length; o2++)
              this.words[o2] = 0;
            const r2 = e2.length % 3;
            let n2 = 0, i2 = 0, s2 = 0;
            if (t3 === "be") {
              for (let t4 = e2.length - 1; t4 >= 2; t4 -= 3) {
                const r3 = e2[t4] | e2[t4 - 1] << 8 | e2[t4 - 2] << 16;
                this.words[i2] |= r3 << n2 & 67108863, this.words[i2 + 1] = r3 >>> 26 - n2 & 67108863, n2 += 24, n2 >= 26 && (n2 -= 26, i2 += 1);
              }
              switch (r2) {
                case 2:
                  s2 = e2[1] | e2[0] << 8;
                  break;
                case 1:
                  s2 = e2[0];
              }
            } else {
              const t4 = e2.length - r2;
              for (let r3 = 0; r3 < t4; r3 += 3) {
                const t5 = e2[r3] | e2[r3 + 1] << 8 | e2[r3 + 2] << 16;
                this.words[i2] |= t5 << n2 & 67108863, this.words[i2 + 1] = t5 >>> 26 - n2 & 67108863, n2 += 24, n2 >= 26 && (n2 -= 26, i2 += 1);
              }
              switch (r2) {
                case 2:
                  s2 = e2[t4] | e2[t4 + 1] << 8;
                  break;
                case 1:
                  s2 = e2[t4];
              }
            }
            return r2 > 0 && (this.words[i2] |= s2 << n2 & 67108863, this.words[i2 + 1] = s2 >>> 26 - n2 & 67108863), this._strip();
          }
          decode(e2, t3) {
            return this.fromBuffer(e2, t3);
          }
          from(e2, t3, r2) {
            if (e2 == null)
              return this;
            if (t3 !== "le" && t3 !== "be" || ([t3, r2] = [r2, t3]), typeof e2 == "number")
              return this.fromNumber(e2, r2);
            if (typeof e2 == "bigint")
              return this.fromBigInt(e2, r2);
            if (typeof e2 == "string")
              return this.fromString(e2, t3, r2);
            if (typeof e2 == "object") {
              if (y.isBN(e2))
                return this.fromBN(e2, r2);
              if (e2.length >>> 0 === e2.length)
                return this.fromArrayLike(e2, r2);
            }
            if (typeof e2 == "boolean")
              return this.fromBool(e2);
            throw new TypeError("Non-numeric object passed to BN.");
          }
          static min(...e2) {
            let t3 = null;
            for (const r2 of e2)
              C(y.isBN(r2), "num", "bignum"), (!t3 || r2.cmp(t3) < 0) && (t3 = r2);
            return t3 || new y(0);
          }
          static max(...e2) {
            let t3 = null;
            for (const r2 of e2)
              C(y.isBN(r2), "num", "bignum"), (!t3 || r2.cmp(t3) > 0) && (t3 = r2);
            return t3 || new y(0);
          }
          static cmp(e2, t3) {
            return C(y.isBN(e2), "a", "bignum"), e2.cmp(t3);
          }
          static ucmp(e2, t3) {
            return C(y.isBN(e2), "a", "bignum"), e2.ucmp(t3);
          }
          static red(e2) {
            return new A(e2);
          }
          static barrett(e2) {
            return new I(e2);
          }
          static mont(e2) {
            return new k(e2);
          }
          static _prime(e2) {
            if (a[e2])
              return a[e2];
            let t3;
            if (e2 === "p192")
              t3 = new b();
            else if (e2 === "p224")
              t3 = new m();
            else if (e2 === "p521")
              t3 = new v();
            else if (e2 === "k256")
              t3 = new w();
            else if (e2 === "p251")
              t3 = new _();
            else if (e2 === "p25519")
              t3 = new E();
            else {
              if (e2 !== "p448")
                throw new Error(`Unknown prime: "${e2}".`);
              t3 = new S();
            }
            return a[e2] = t3, t3;
          }
          static prime(e2) {
            return y._prime(e2).p.clone();
          }
          static pow(e2, t3) {
            return e2 === 2 ? y.shift(1, t3) : new y().fromNumber(e2).pown(t3);
          }
          static shift(e2, t3) {
            return e2 === 1 ? new y(0).usetn(t3, 1) : new y().fromNumber(e2).ishln(t3);
          }
          static mask(e2) {
            return y.shift(1, e2).isubn(1);
          }
          static randomBits(e2, r2) {
            if (C(e2 != null, "rng", "rng"), C(r2 >>> 0 === r2, "bits", "uint32"), typeof e2 == "object") {
              C(typeof e2.randomBytes == "function", "rng", "rng");
              const n3 = r2 + 7 >>> 3, i2 = 8 * n3, s2 = e2.randomBytes(n3);
              if (C(t2.isBuffer(s2), "bytes", "buffer"), s2.length !== n3)
                throw new RangeError("Invalid number of bytes returned from RNG.");
              const o2 = y.fromBuffer(s2);
              return i2 > r2 && o2.iushrn(i2 - r2), o2;
            }
            C(typeof e2 == "function", "rng", "rng");
            const n2 = e2(r2);
            if (C(y.isBN(n2), "num", "bignum"), M(n2.negative === 0, "RNG"), N(!n2.red, "RNG"), n2.bitLength() > r2)
              throw new RangeError("Invalid number of bits returned from RNG.");
            return n2;
          }
          static random(e2, t3, r2) {
            if (t3 = y.cast(t3, 16), r2 = y.cast(r2, 16), t3.cmp(r2) > 0)
              throw new RangeError("Minimum cannot be greater than maximum.");
            const n2 = r2.sub(t3).iabs(), i2 = n2.bitLength();
            if (i2 === 0)
              return t3.clone();
            for (; ; ) {
              const r3 = y.randomBits(e2, i2);
              if (!(r3.cmp(n2) >= 0))
                return r3.iadd(t3), r3;
            }
          }
          static of(e2, t3) {
            return new y().of(e2, t3);
          }
          static fromNumber(e2, t3) {
            return new y().fromNumber(e2, t3);
          }
          static fromDouble(e2, t3) {
            return new y().fromDouble(e2, t3);
          }
          static fromBigInt(e2, t3) {
            return new y().fromBigInt(e2, t3);
          }
          static fromBool(e2) {
            return new y().fromBool(e2);
          }
          static fromString(e2, t3, r2) {
            return new y().fromString(e2, t3, r2);
          }
          static fromJSON(e2) {
            return new y().fromJSON(e2);
          }
          static fromBN(e2) {
            return new y().fromBN(e2);
          }
          static fromArray(e2, t3) {
            return new y().fromArray(e2, t3);
          }
          static fromBuffer(e2, t3) {
            return new y().fromBuffer(e2, t3);
          }
          static fromArrayLike(e2, t3) {
            return new y().fromArrayLike(e2, t3);
          }
          static decode(e2, t3) {
            return new y().decode(e2, t3);
          }
          static from(e2, t3, r2) {
            return new y().from(e2, t3, r2);
          }
          static cast(e2, t3, r2) {
            return y.isBN(e2) ? e2 : new y(e2, t3, r2);
          }
          static isBN(e2) {
            return e2 instanceof y;
          }
        }
        y.BN = y, y.wordSize = 26, y.native = 0;
        class g {
          constructor(e2, t3) {
            this.name = e2, this.p = new y(t3, 16), this.n = this.p.bitLength(), this.k = y.shift(1, this.n).isub(this.p), this.lo = this.p.clone(), this.one = this.p.clone();
          }
          ireduce(e2) {
            const t3 = e2.negative !== 0;
            let r2 = e2.bitLength();
            for (T(r2 <= 2 * this.n), e2.negative = 0; r2 > this.n; )
              this.split(e2, this.lo), this.imulK(e2), e2._iadd(e2, this.lo), r2 = e2.bitLength();
            const n2 = r2 < this.n ? -1 : e2.ucmp(this.p);
            return n2 === 0 ? (e2.words[0] = 0, e2.length = 1) : n2 > 0 && e2._isub(e2, this.p), t3 && !e2.isZero() && e2._isub(this.p, e2), e2;
          }
          split(e2, t3) {
            e2._split(this.n, t3);
          }
          imulK(e2) {
            return e2.imul(this.k);
          }
        }
        class b extends g {
          constructor() {
            super("p192", "ffffffff ffffffff ffffffff fffffffeffffffff ffffffff");
          }
          imulK(e2) {
            const t3 = this.one.inject(e2);
            return e2.iushln(64)._iadd(e2, t3);
          }
        }
        class m extends g {
          constructor() {
            super("p224", "ffffffff ffffffff ffffffff ffffffff00000000 00000000 00000001");
          }
          imulK(e2) {
            const t3 = this.one.inject(e2);
            return e2.iushln(96)._isub(e2, t3);
          }
        }
        class v extends g {
          constructor() {
            super("p521", "000001ff ffffffff ffffffff ffffffffffffffff ffffffff ffffffff ffffffffffffffff ffffffff ffffffff ffffffffffffffff ffffffff ffffffff ffffffffffffffff");
          }
          imulK(e2) {
            return e2;
          }
        }
        class w extends g {
          constructor() {
            super("k256", "ffffffff ffffffff ffffffff ffffffffffffffff ffffffff fffffffe fffffc2f");
          }
          split(e2, t3) {
            const r2 = Math.min(e2.length, 9);
            t3._alloc(r2 + 1);
            for (let s2 = 0; s2 < r2; s2++)
              t3.words[s2] = e2.words[s2];
            if (t3.length = r2, e2.length <= 9)
              return t3._strip(), e2.words[0] = 0, void (e2.length = 1);
            let n2 = e2.words[9], i2 = 10;
            for (t3.words[t3.length++] = 4194303 & n2, t3._strip(); i2 < e2.length; i2++) {
              const t4 = 0 | e2.words[i2];
              e2.words[i2 - 10] = (4194303 & t4) << 4 | n2 >>> 22, n2 = t4;
            }
            n2 >>>= 22, e2.words[i2 - 10] = n2, n2 === 0 && e2.length > 10 ? e2.length -= 10 : e2.length -= 9, e2._strip();
          }
          imulK(e2) {
            e2._expand(e2.length + 2);
            let t3 = 0;
            for (let r2 = 0; r2 < e2.length; r2++) {
              const n2 = e2.words[r2];
              t3 += 977 * n2, e2.words[r2] = 67108863 & t3, t3 = 64 * n2 + Math.floor(t3 / 67108864);
            }
            return e2.words[e2.length - 1] === 0 && (e2.length -= 1, e2.words[e2.length - 1] === 0 && (e2.length -= 1)), e2;
          }
        }
        class _ extends g {
          constructor() {
            super("p251", "07ffffff ffffffff ffffffff ffffffffffffffff ffffffff ffffffff fffffff7");
          }
          imulK(e2) {
            if (e2.isZero())
              return e2;
            let t3 = 0;
            for (let r2 = 0; r2 < e2.length; r2++) {
              const n2 = 9 * e2.words[r2] + t3;
              t3 = n2 >>> 26, e2.words[r2] = 67108863 & n2;
            }
            return t3 !== 0 && (e2._alloc(e2.length + 1), e2.words[e2.length++] = t3), e2;
          }
        }
        class E extends g {
          constructor() {
            super("p25519", "7fffffff ffffffff ffffffff ffffffffffffffff ffffffff ffffffff ffffffed");
          }
          imulK(e2) {
            let t3 = 0;
            for (let r2 = 0; r2 < e2.length; r2++) {
              const n2 = 19 * e2.words[r2] + t3;
              t3 = n2 >>> 26, e2.words[r2] = 67108863 & n2;
            }
            return t3 !== 0 && (e2._alloc(e2.length + 1), e2.words[e2.length++] = t3), e2;
          }
        }
        class S extends g {
          constructor() {
            super("p448", "ffffffff ffffffff ffffffff ffffffffffffffff ffffffff fffffffe ffffffffffffffff ffffffff ffffffff ffffffffffffffff ffffffff");
          }
          imulK(e2) {
            const t3 = this.one.inject(e2);
            return e2.iushln(224)._iadd(e2, t3);
          }
        }
        class A {
          constructor(e2) {
            let t3 = null;
            typeof e2 == "string" && (t3 = y._prime(e2), e2 = t3.p), C(y.isBN(e2), "m", "bignum"), N(!e2.red, "reduction"), M(e2.sign() > 0, "reduction"), this.m = e2, this.prime = t3, this.mb = null, this.sm1 = null;
          }
          _verify1(e2) {
            M(e2.negative === 0, "red"), x(e2.red != null, "red");
          }
          _verify2(e2, t3) {
            M((e2.negative | t3.negative) == 0, "red"), x(e2.red != null && e2.red === t3.red, "red");
          }
          get mont() {
            return false;
          }
          precompute() {
            if (this.sm1 === null && this.m.andln(7) === 5) {
              const e2 = new y(2).toRed(this), t3 = this.m.subn(1).iushrn(2);
              this.sm1 = this.pow(e2, t3);
            }
            return this;
          }
          convertTo(e2) {
            const t3 = e2.mod(this.m);
            return t3.red = this, t3;
          }
          convertFrom(e2) {
            const t3 = e2.clone();
            return t3.red = null, t3;
          }
          intTo(e2) {
            return e2;
          }
          intFrom(e2) {
            return e2;
          }
          imod(e2) {
            return this.prime ? this.prime.ireduce(e2)._forceRed(this) : e2.imod(this.m)._forceRed(this);
          }
          iadd(e2, t3) {
            return this._verify2(e2, t3), e2._iadd(e2, t3), e2.ucmp(this.m) >= 0 && e2._isub(e2, this.m), e2;
          }
          add(e2, t3) {
            return e2.length < t3.length ? this.iadd(t3.clone(), e2) : this.iadd(e2.clone(), t3);
          }
          iaddn(e2, t3) {
            return this._verify1(e2), t3 < 0 ? this.isubn(e2, -t3) : (this.m.length === 1 && (t3 %= this.m.words[0]), e2._iaddn(t3), e2.ucmp(this.m) >= 0 && e2._isub(e2, this.m), e2);
          }
          addn(e2, t3) {
            return this.iaddn(e2.clone(), t3);
          }
          isub(e2, t3) {
            this._verify2(e2, t3);
            const r2 = e2.ucmp(t3);
            return r2 === 0 ? (e2.words[0] = 0, e2.length = 1, e2) : (r2 < 0 ? (e2._isub(t3, e2), e2._isub(this.m, e2)) : e2._isub(e2, t3), e2);
          }
          sub(e2, t3) {
            return this.isub(e2.clone(), t3);
          }
          isubn(e2, t3) {
            return this._verify1(e2), t3 < 0 ? this.iaddn(e2, -t3) : (this.m.length === 1 && (t3 %= this.m.words[0]), e2.length === 1 && e2.words[0] < t3 ? (e2.words[0] = t3 - e2.words[0], e2._isub(this.m, e2)) : e2._isubn(t3), e2);
          }
          subn(e2, t3) {
            return this.isubn(e2.clone(), t3);
          }
          imul(e2, t3) {
            return this._verify2(e2, t3), this.imod(e2.imul(t3));
          }
          mul(e2, t3) {
            return this._verify2(e2, t3), this.imod(e2.mul(t3));
          }
          imuln(e2, t3) {
            if (this._verify1(e2), e2.isZero())
              return e2;
            if (t3 === 0)
              return e2.words[0] = 0, e2.length = 1, e2;
            const r2 = t3 < 0;
            if (r2 && (t3 = -t3), this.m.length === 1 && (t3 %= this.m.words[0]), e2.imuln(t3), t3 <= 16)
              for (; e2.ucmp(this.m) >= 0; )
                e2._isub(e2, this.m);
            else
              this.imod(e2);
            return r2 && this.ineg(e2), e2;
          }
          muln(e2, t3) {
            return this.imuln(e2.clone(), t3);
          }
          idiv(e2, t3) {
            return this.div(e2, t3)._move(e2);
          }
          div(e2, t3) {
            return this.mul(e2, this.invert(t3));
          }
          idivn(e2, t3) {
            return this.divn(e2, t3)._move(e2);
          }
          divn(e2, t3) {
            return this.div(e2, this.convertTo(new y(t3)));
          }
          ipow(e2, t3) {
            return this.pow(e2, t3)._move(e2);
          }
          pow(e2, t3) {
            return this._verify1(e2), t3.isNeg() && (e2 = this.invert(e2)), t3.length === 1 ? this.pown(e2, t3.words[0]) : p && !this.prime ? this.powInt(e2, t3) : this.powNum(e2, t3);
          }
          powNum(e2, t3) {
            const r2 = new Array(8);
            r2[0] = this.sqrn(e2, 3);
            for (let s2 = 1; s2 < 8; s2++)
              r2[s2] = this.mul(r2[s2 - 1], e2);
            let n2 = t3.bitLength(), i2 = new y(1).toRed(this);
            for (; n2 >= 4; ) {
              const e3 = n2 - 4, s2 = t3.bits(e3, 4);
              s2 < 8 ? (i2 = this.sqr(i2), n2 -= 1) : (i2 = this.sqrn(i2, 4), i2 = this.mul(i2, r2[-9 & s2]), n2 = e3);
            }
            if (n2 > 0) {
              const r3 = t3.bits(0, n2);
              for (; n2--; )
                i2 = this.sqr(i2), r3 >> n2 & 1 && (i2 = this.mul(i2, e2));
            }
            return i2;
          }
          powInt(e2, t3) {
            this.mb === null && (this.mb = this.m.toBigInt());
            const r2 = function(e3, t4, r3) {
              const n3 = new Array(8);
              n3[0] = z(e3, 3, r3);
              for (let o2 = 1; o2 < 8; o2++)
                n3[o2] = n3[o2 - 1] * e3 % r3;
              let i2 = t4.bitLength(), s2 = BigInt(1);
              for (; i2 >= 4; ) {
                const e4 = i2 - 4, o2 = t4.bits(e4, 4);
                o2 < 8 ? (s2 = s2 * s2 % r3, i2 -= 1) : (s2 = z(s2, 4, r3), s2 = s2 * n3[-9 & o2] % r3, i2 = e4);
              }
              if (i2 > 0) {
                const n4 = t4.bits(0, i2);
                for (; i2--; )
                  s2 = s2 * s2 % r3, n4 >> i2 & 1 && (s2 = s2 * e3 % r3);
              }
              return s2;
            }(this.intFrom(e2.toBigInt()), t3, this.mb), n2 = this.intTo(r2);
            return y.fromBigInt(n2)._forceRed(this);
          }
          sqrn(e2, t3) {
            for (let r2 = 0; r2 < t3; r2++)
              e2 = this.sqr(e2);
            return e2;
          }
          ipown(e2, t3) {
            return this.pown(e2, t3)._move(e2);
          }
          pown(e2, t3) {
            if (this._verify1(e2), t3 < 0 && (e2 = this.invert(e2), t3 = -t3), t3 === 0)
              return new y(1).toRed(this);
            if (t3 === 1)
              return e2.clone();
            let r2 = e2;
            for (let n2 = L(t3) - 2; n2 >= 0; n2--)
              r2 = this.sqr(r2), t3 >> n2 & 1 && (r2 = this.mul(r2, e2));
            return r2;
          }
          isqr(e2) {
            return this.imul(e2, e2);
          }
          sqr(e2) {
            return this.mul(e2, e2);
          }
          isqrt(e2) {
            return this.sqrt(e2)._move(e2);
          }
          sqrt(e2) {
            return this._verify1(e2), this.m.andln(3) === 3 ? this.sqrt3mod4(e2) : this.m.andln(7) === 5 ? this.sm1 != null ? this.sqrt5mod8sm1(e2) : this.sqrt5mod8(e2) : this.sqrt0(e2);
          }
          sqrt3mod4(e2) {
            const t3 = this.m.addn(1).iushrn(2), r2 = this.pow(e2, t3);
            if (!this.sqr(r2).eq(e2))
              throw new Error("X is not a square mod P.");
            return r2;
          }
          sqrt5mod8(e2) {
            const t3 = new y(1).toRed(this), r2 = this.m.ushrn(3), n2 = this.add(e2, e2), i2 = this.pow(n2, r2), s2 = this.mul(n2, this.sqr(i2)), o2 = this.mul(this.mul(i2, e2), this.isub(s2, t3));
            if (!this.sqr(o2).eq(e2))
              throw new Error("X is not a square mod P.");
            return o2;
          }
          sqrt5mod8sm1(e2) {
            const t3 = this.m.addn(3).iushrn(3), r2 = this.pow(e2, t3);
            if (this.sqr(r2).eq(e2))
              return r2;
            const n2 = this.mul(r2, this.sm1);
            if (this.sqr(n2).eq(e2))
              return n2;
            throw new Error("X is not a square mod P.");
          }
          sqrt0(e2) {
            if (this.m.cmpn(1) === 0 || !this.m.isOdd())
              throw new Error("Invalid prime.");
            switch (this.jacobi(e2)) {
              case -1:
                throw new Error("X is not a square mod P.");
              case 0:
                return new y(0)._forceRed(this);
            }
            const t3 = new y(1).toRed(this), r2 = this.m.subn(1), n2 = r2._makeOdd(), i2 = new y(2).toRed(this);
            for (; this.jacobi(i2) !== -1; )
              this.iadd(i2, t3);
            let s2 = this.pow(e2, r2), o2 = this.pow(i2, r2), a2 = this.pow(e2, r2.iaddn(1).iushrn(1)), c2 = n2;
            for (; ; ) {
              let e3 = s2, r3 = 0;
              for (; e3.cmp(t3) !== 0 && r3 < c2; )
                e3 = this.sqr(e3), r3 += 1;
              if (r3 === 0)
                break;
              T(r3 < c2), e3 = this.sqrn(o2, c2 - r3 - 1), o2 = this.sqr(e3), a2 = this.mul(a2, e3), s2 = this.mul(s2, o2), c2 = r3;
            }
            return a2;
          }
          idivsqrt(e2, t3) {
            return this.divsqrt(e2, t3)._move(e2);
          }
          divsqrt(e2, t3) {
            if (this._verify2(e2, t3), t3.isZero())
              throw new RangeError("Not invertible.");
            return this.m.andln(3) === 3 ? this.divsqrt3mod4(e2, t3) : this.sm1 != null && this.m.andln(7) === 5 ? this.divsqrt5mod8(e2, t3) : this.sqrt(this.div(e2, t3));
          }
          divsqrt3mod4(e2, t3) {
            const r2 = this.m.subn(3).iushrn(2), n2 = this.sqr(e2), i2 = this.mul(n2, e2), s2 = this.mul(i2, n2), o2 = this.mul(this.sqr(t3), t3), a2 = this.pow(this.mul(s2, o2), r2), c2 = this.mul(this.mul(i2, t3), a2);
            if (this.mul(t3, this.sqr(c2)).cmp(e2) === 0)
              return c2;
            throw new Error("X is not a square mod P.");
          }
          divsqrt5mod8(e2, t3) {
            const r2 = this.m.subn(5).iushrn(3), n2 = this.mul(this.sqr(t3), t3), i2 = this.mul(this.sqr(n2), t3), s2 = this.pow(this.mul(e2, i2), r2), o2 = this.mul(this.mul(e2, n2), s2), a2 = this.mul(t3, this.sqr(o2));
            if (a2.cmp(e2) === 0)
              return o2;
            if (this.ineg(a2).cmp(e2) === 0)
              return this.mul(o2, this.sm1);
            throw new Error("X is not a square mod P.");
          }
          isSquare(e2) {
            let t3;
            return t3 = this.prime ? this.legendre(e2) : this.m.isOdd() ? this.jacobi(e2) : this.kronecker(e2), Boolean(~t3 >>> 31);
          }
          ishl(e2, t3) {
            return this._verify1(e2), this.imod(e2.iushl(t3));
          }
          shl(e2, t3) {
            return this.ishl(e2.clone(), t3);
          }
          ishln(e2, t3) {
            if (this._verify1(e2), e2.iushln(t3), t3 <= 4)
              for (; e2.ucmp(this.m) >= 0; )
                e2._isub(e2, this.m);
            else
              this.imod(e2);
            return e2;
          }
          shln(e2, t3) {
            return this.ishln(e2.clone(), t3);
          }
          ineg(e2) {
            return this._verify1(e2), e2.isZero() || e2._isub(this.m, e2), e2;
          }
          neg(e2) {
            return this.ineg(e2.clone());
          }
          eq(e2, t3) {
            return this._verify2(e2, t3), e2.ucmp(t3) === 0;
          }
          eqn(e2, t3) {
            if (this._verify1(e2), this.m.length === 1)
              return (t3 %= this.m.words[0]) < 0 && (t3 += this.m.words[0]), e2.ucmpn(t3) === 0;
            if (t3 < 0) {
              this.m._isubn(-t3);
              const r2 = e2.ucmp(this.m);
              return this.m._iaddn(-t3), r2 === 0;
            }
            return e2.ucmpn(t3) === 0;
          }
          isHigh(e2) {
            return !this.isLow(e2);
          }
          isLow(e2) {
            return this._verify1(e2), e2.ucmp(this.m.ushrn(1)) <= 0;
          }
          isOdd(e2) {
            return this._verify1(e2), e2.isOdd();
          }
          isEven(e2) {
            return this._verify1(e2), e2.isEven();
          }
          legendre(e2) {
            if (this._verify1(e2), this.m.isEven())
              throw new Error("legendre: `num` must be odd.");
            const t3 = this.m.subn(1).iushrn(1), r2 = this.pow(e2, t3), n2 = new y(1).toRed(this), i2 = r2.czero(), s2 = r2.ceq(n2), o2 = r2.ceq(this.ineg(n2));
            if ((i2 | s2 | o2) == 0)
              throw new Error("Invalid prime.");
            return T(i2 + s2 + o2 === 1), s2 - o2;
          }
          jacobi(e2) {
            return this._verify1(e2), e2.jacobi(this.m);
          }
          kronecker(e2) {
            return this._verify1(e2), e2.kronecker(this.m);
          }
          iinvert(e2) {
            return this.invert(e2)._move(e2);
          }
          invert(e2) {
            return this._verify1(e2), e2.invert(this.m)._forceRed(this);
          }
          ifermat(e2) {
            return this.fermat(e2)._move(e2);
          }
          fermat(e2) {
            if (this._verify1(e2), e2.isZero() || this.m.cmpn(1) === 0)
              throw new RangeError("Not invertible.");
            return this.pow(e2, this.m.subn(2));
          }
          [n]() {
            return this.prime ? `<Red: ${this.prime.name}>` : `<Red: ${this.m.toString(10)}>`;
          }
        }
        class I extends A {
          constructor(e2) {
            super(e2), this.prime = null, this.n = this.m.bitLength(), this.n % 26 != 0 && (this.n += 26 - this.n % 26), this.k = 2 * this.n, this.w = this.k / 26, this.b = y.shift(1, this.k).div(this.m);
          }
          convertTo(e2) {
            return e2.length > this.w ? super.convertTo(e2) : this.imod(e2.clone());
          }
          _shift(e2) {
            let t3 = 0, r2 = this.w;
            for (; r2 < e2.length; )
              e2.words[t3++] = e2.words[r2++];
            t3 === 0 && (e2.words[t3++] = 0), e2.length = t3;
          }
          imod(e2) {
            const t3 = e2.negative;
            T(e2.length <= this.w), e2.negative = 0;
            const r2 = e2.mul(this.b);
            return this._shift(r2), e2._isub(e2, r2.mul(this.m)), e2.ucmp(this.m) >= 0 && e2._isub(e2, this.m), t3 && !e2.isZero() && e2._isub(this.m, e2), e2.red = this, e2;
          }
        }
        class k extends A {
          constructor(e2) {
            super(e2), this.prime = null, this.n = 26 * this.m.length, this.r = y.shift(1, this.n), this.r2 = y.shift(1, 2 * this.n).imod(this.m), this.ri = this.r.invert(this.m), this.mi = this.r.mul(this.ri).isubn(1).div(this.m), this.rib = null;
          }
          get mont() {
            return true;
          }
          convertTo(e2) {
            return e2.isNeg() || e2.ucmp(this.m) >= 0 ? this.imod(e2.ushln(this.n)) : this.mul(e2, this.r2);
          }
          convertFrom(e2) {
            const t3 = this.mul(e2, new y(1));
            return t3.red = null, t3;
          }
          intTo(e2) {
            return (e2 << BigInt(this.n)) % this.mb;
          }
          intFrom(e2) {
            return this.rib === null && (this.rib = this.ri.toBigInt()), e2 * this.rib % this.mb;
          }
          iaddn(e2, t3) {
            return this.iadd(e2, this.convertTo(new y(t3)));
          }
          isubn(e2, t3) {
            return this.isub(e2, this.convertTo(new y(t3)));
          }
          imul(e2, t3) {
            return this.mul(e2, t3)._move(e2);
          }
          mul(e2, t3) {
            if (e2.isZero() || t3.isZero())
              return new y(0)._forceRed(this);
            const r2 = e2.mul(t3), n2 = r2.umaskn(this.n).mul(this.mi).iumaskn(this.n), i2 = r2.iadd(n2.mul(this.m)).iushrn(this.n);
            return i2.ucmp(this.m) >= 0 && i2._isub(i2, this.m), i2._forceRed(this);
          }
          imuln(e2, t3) {
            if (this._verify1(e2), e2.isZero())
              return e2;
            if (t3 === 0)
              return e2.words[0] = 0, e2.length = 1, e2;
            const r2 = t3 < 0;
            r2 && (t3 = -t3), this.m.length === 1 && (t3 %= this.m.words[0]);
            const n2 = L(t3);
            if (n2 > 5)
              this.imul(e2, this.convertTo(new y(t3)));
            else if ((t3 & t3 - 1) == 0)
              for (let i2 = 0; i2 < n2 - 1; i2++)
                this.iadd(e2, e2);
            else {
              const r3 = e2.clone();
              for (let i2 = n2 - 2; i2 >= 0; i2--)
                this.iadd(e2, e2), t3 >> i2 & 1 && this.iadd(e2, r3);
            }
            return r2 && this.ineg(e2), e2;
          }
          eqn(e2, t3) {
            return this._verify1(e2), t3 === 0 ? e2.isZero() : e2.ucmp(this.convertTo(new y(t3))) === 0;
          }
          isLow(e2) {
            return this._verify1(e2), this.convertFrom(e2).ucmp(this.m.ushrn(1)) <= 0;
          }
          isOdd(e2) {
            return this._verify1(e2), this.convertFrom(e2).isOdd();
          }
          isEven(e2) {
            return this._verify1(e2), this.convertFrom(e2).isEven();
          }
          invert(e2) {
            return this._verify1(e2), this.imod(e2.invert(this.m).mul(this.r2));
          }
        }
        function R(e2, t3, r2) {
          const n2 = new e2(t3);
          return e2.captureStackTrace && e2.captureStackTrace(n2, r2), n2;
        }
        function T(e2, t3) {
          if (!e2) {
            throw R(Error, t3 || "Assertion failed.", T);
          }
        }
        function C(e2, t3, r2) {
          if (!e2) {
            throw R(TypeError, `"${t3}" must be a(n) ${r2}.`, C);
          }
        }
        function M(e2, t3) {
          if (!e2) {
            throw R(RangeError, `"${t3}" only works with positive numbers.`, M);
          }
        }
        function x(e2, t3) {
          if (!e2) {
            throw R(TypeError, `"${t3}" only works with red numbers.`, x);
          }
        }
        function N(e2, t3) {
          if (!e2) {
            throw R(TypeError, `"${t3}" only works with normal numbers.`, N);
          }
        }
        function P(e2) {
          if (!e2) {
            throw R(RangeError, "Cannot divide by zero.", P);
          }
        }
        function B(e2) {
          return Number.isSafeInteger(e2);
        }
        function O(e2) {
          return B(e2) && e2 >= -67108863 && e2 <= 67108863;
        }
        function D(e2) {
          if (e2 == null)
            return 10;
          if (typeof e2 == "number")
            return e2;
          switch (e2) {
            case "bin":
              return 2;
            case "oct":
              return 8;
            case "dec":
              return 10;
            case "hex":
              return 16;
          }
          return 0;
        }
        function L(e2) {
          if (Math.clz32)
            return 32 - Math.clz32(e2);
          let t3 = e2, r2 = 0;
          return t3 >= 4096 && (r2 += 13, t3 >>>= 13), t3 >= 64 && (r2 += 7, t3 >>>= 7), t3 >= 8 && (r2 += 4, t3 >>>= 4), t3 >= 2 && (r2 += 2, t3 >>>= 2), r2 + t3;
        }
        function U(e2) {
          if (e2 === 0)
            return 26;
          let t3 = e2, r2 = 0;
          return (8191 & t3) == 0 && (r2 += 13, t3 >>>= 13), (127 & t3) == 0 && (r2 += 7, t3 >>>= 7), (15 & t3) == 0 && (r2 += 4, t3 >>>= 4), (3 & t3) == 0 && (r2 += 2, t3 >>>= 2), (1 & t3) == 0 && (r2 += 1), r2;
        }
        function j(e2, t3, r2) {
          const n2 = Math.min(e2.length, r2);
          let i2 = 0, s2 = 0;
          for (let o2 = t3; o2 < n2; o2++) {
            const t4 = e2.charCodeAt(o2) - 48;
            let r3;
            i2 <<= 4, r3 = t4 >= 49 && t4 <= 54 ? t4 - 49 + 10 : t4 >= 17 && t4 <= 22 ? t4 - 17 + 10 : t4, i2 |= r3, s2 |= r3;
          }
          if (-16 & s2)
            throw new Error("Invalid string.");
          return i2;
        }
        function F(e2, t3, r2, n2) {
          const i2 = Math.min(e2.length, r2);
          let s2 = 0;
          for (let o2 = t3; o2 < i2; o2++) {
            const t4 = e2.charCodeAt(o2) - 48;
            let r3;
            if (s2 *= n2, r3 = t4 >= 49 ? t4 - 49 + 10 : t4 >= 17 ? t4 - 17 + 10 : t4, t4 < 0 || t4 > 207 || r3 >= n2)
              throw new Error("Invalid string.");
            s2 += r3;
          }
          return s2;
        }
        function z(e2, t3, r2) {
          for (let n2 = 0; n2 < t3; n2++)
            e2 = e2 * e2 % r2;
          return e2;
        }
        function q(e2, t3, r2) {
          const n2 = e2.length + t3.length;
          r2.negative = e2.negative ^ t3.negative, r2._alloc(n2), r2.length = n2;
          const i2 = e2.words[0] * t3.words[0], s2 = 67108863 & i2;
          let o2 = i2 / 67108864 | 0, a2 = 1;
          for (r2.words[0] = s2; a2 < r2.length - 1; a2++) {
            let n3 = o2 >>> 26, i3 = 67108863 & o2;
            const s3 = Math.max(0, a2 - e2.length + 1), c2 = Math.min(a2, t3.length - 1);
            for (let r3 = s3; r3 <= c2; r3++) {
              const s4 = a2 - r3, o3 = e2.words[s4] * t3.words[r3] + i3;
              n3 += o3 / 67108864 | 0, i3 = 67108863 & o3;
            }
            r2.words[a2] = 0 | i3, o2 = 0 | n3;
          }
          return o2 !== 0 ? r2.words[a2] = 0 | o2 : r2.length -= 1, r2._strip();
        }
        function K(e2, t3, r2) {
          const n2 = e2.length + t3.length;
          r2.negative = e2.negative ^ t3.negative, r2._alloc(n2), r2.length = n2;
          let i2 = 0, s2 = 0, o2 = 0;
          for (; o2 < r2.length - 1; o2++) {
            let n3 = s2;
            s2 = 0;
            let a2 = 67108863 & i2;
            const c2 = Math.max(0, o2 - e2.length + 1), u2 = Math.min(o2, t3.length - 1);
            for (let r3 = c2; r3 <= u2; r3++) {
              const i3 = o2 - r3, c3 = e2.words[i3] * t3.words[r3];
              let u3 = 67108863 & c3;
              n3 = n3 + (c3 / 67108864 | 0) | 0, u3 = u3 + a2 | 0, a2 = 67108863 & u3, n3 = n3 + (u3 >>> 26) | 0, s2 += n3 >>> 26, n3 &= 67108863;
            }
            r2.words[o2] = a2, i2 = n3, n3 = s2;
          }
          return i2 !== 0 ? r2.words[o2] = i2 : r2.length -= 1, r2._strip();
        }
        function V(e2, t3, r2) {
          const n2 = e2.words, i2 = t3.words, s2 = r2.words, o2 = 0 | n2[0], a2 = 8191 & o2, c2 = o2 >>> 13, u2 = 0 | n2[1], h2 = 8191 & u2, f2 = u2 >>> 13, d2 = 0 | n2[2], l2 = 8191 & d2, p2 = d2 >>> 13, y2 = 0 | n2[3], g2 = 8191 & y2, b2 = y2 >>> 13, m2 = 0 | n2[4], v2 = 8191 & m2, w2 = m2 >>> 13, _2 = 0 | n2[5], E2 = 8191 & _2, S2 = _2 >>> 13, A2 = 0 | n2[6], I2 = 8191 & A2, k2 = A2 >>> 13, R2 = 0 | n2[7], T2 = 8191 & R2, C2 = R2 >>> 13, M2 = 0 | n2[8], x2 = 8191 & M2, N2 = M2 >>> 13, P2 = 0 | n2[9], B2 = 8191 & P2, O2 = P2 >>> 13, D2 = 0 | i2[0], L2 = 8191 & D2, U2 = D2 >>> 13, j2 = 0 | i2[1], F2 = 8191 & j2, z2 = j2 >>> 13, q2 = 0 | i2[2], K2 = 8191 & q2, V2 = q2 >>> 13, H = 0 | i2[3], G = 8191 & H, $ = H >>> 13, W = 0 | i2[4], Y = 8191 & W, X = W >>> 13, J = 0 | i2[5], Z = 8191 & J, Q = J >>> 13, ee = 0 | i2[6], te = 8191 & ee, re = ee >>> 13, ne = 0 | i2[7], ie = 8191 & ne, se = ne >>> 13, oe = 0 | i2[8], ae = 8191 & oe, ce = oe >>> 13, ue = 0 | i2[9], he = 8191 & ue, fe = ue >>> 13;
          let de, le, pe, ye = 0;
          r2.negative = e2.negative ^ t3.negative, r2._alloc(20), r2.length = 19, de = Math.imul(a2, L2), le = Math.imul(a2, U2), le = le + Math.imul(c2, L2) | 0, pe = Math.imul(c2, U2);
          let ge = (ye + de | 0) + ((8191 & le) << 13) | 0;
          ye = (pe + (le >>> 13) | 0) + (ge >>> 26) | 0, ge &= 67108863, de = Math.imul(h2, L2), le = Math.imul(h2, U2), le = le + Math.imul(f2, L2) | 0, pe = Math.imul(f2, U2), de = de + Math.imul(a2, F2) | 0, le = le + Math.imul(a2, z2) | 0, le = le + Math.imul(c2, F2) | 0, pe = pe + Math.imul(c2, z2) | 0;
          let be = (ye + de | 0) + ((8191 & le) << 13) | 0;
          ye = (pe + (le >>> 13) | 0) + (be >>> 26) | 0, be &= 67108863, de = Math.imul(l2, L2), le = Math.imul(l2, U2), le = le + Math.imul(p2, L2) | 0, pe = Math.imul(p2, U2), de = de + Math.imul(h2, F2) | 0, le = le + Math.imul(h2, z2) | 0, le = le + Math.imul(f2, F2) | 0, pe = pe + Math.imul(f2, z2) | 0, de = de + Math.imul(a2, K2) | 0, le = le + Math.imul(a2, V2) | 0, le = le + Math.imul(c2, K2) | 0, pe = pe + Math.imul(c2, V2) | 0;
          let me = (ye + de | 0) + ((8191 & le) << 13) | 0;
          ye = (pe + (le >>> 13) | 0) + (me >>> 26) | 0, me &= 67108863, de = Math.imul(g2, L2), le = Math.imul(g2, U2), le = le + Math.imul(b2, L2) | 0, pe = Math.imul(b2, U2), de = de + Math.imul(l2, F2) | 0, le = le + Math.imul(l2, z2) | 0, le = le + Math.imul(p2, F2) | 0, pe = pe + Math.imul(p2, z2) | 0, de = de + Math.imul(h2, K2) | 0, le = le + Math.imul(h2, V2) | 0, le = le + Math.imul(f2, K2) | 0, pe = pe + Math.imul(f2, V2) | 0, de = de + Math.imul(a2, G) | 0, le = le + Math.imul(a2, $) | 0, le = le + Math.imul(c2, G) | 0, pe = pe + Math.imul(c2, $) | 0;
          let ve = (ye + de | 0) + ((8191 & le) << 13) | 0;
          ye = (pe + (le >>> 13) | 0) + (ve >>> 26) | 0, ve &= 67108863, de = Math.imul(v2, L2), le = Math.imul(v2, U2), le = le + Math.imul(w2, L2) | 0, pe = Math.imul(w2, U2), de = de + Math.imul(g2, F2) | 0, le = le + Math.imul(g2, z2) | 0, le = le + Math.imul(b2, F2) | 0, pe = pe + Math.imul(b2, z2) | 0, de = de + Math.imul(l2, K2) | 0, le = le + Math.imul(l2, V2) | 0, le = le + Math.imul(p2, K2) | 0, pe = pe + Math.imul(p2, V2) | 0, de = de + Math.imul(h2, G) | 0, le = le + Math.imul(h2, $) | 0, le = le + Math.imul(f2, G) | 0, pe = pe + Math.imul(f2, $) | 0, de = de + Math.imul(a2, Y) | 0, le = le + Math.imul(a2, X) | 0, le = le + Math.imul(c2, Y) | 0, pe = pe + Math.imul(c2, X) | 0;
          let we = (ye + de | 0) + ((8191 & le) << 13) | 0;
          ye = (pe + (le >>> 13) | 0) + (we >>> 26) | 0, we &= 67108863, de = Math.imul(E2, L2), le = Math.imul(E2, U2), le = le + Math.imul(S2, L2) | 0, pe = Math.imul(S2, U2), de = de + Math.imul(v2, F2) | 0, le = le + Math.imul(v2, z2) | 0, le = le + Math.imul(w2, F2) | 0, pe = pe + Math.imul(w2, z2) | 0, de = de + Math.imul(g2, K2) | 0, le = le + Math.imul(g2, V2) | 0, le = le + Math.imul(b2, K2) | 0, pe = pe + Math.imul(b2, V2) | 0, de = de + Math.imul(l2, G) | 0, le = le + Math.imul(l2, $) | 0, le = le + Math.imul(p2, G) | 0, pe = pe + Math.imul(p2, $) | 0, de = de + Math.imul(h2, Y) | 0, le = le + Math.imul(h2, X) | 0, le = le + Math.imul(f2, Y) | 0, pe = pe + Math.imul(f2, X) | 0, de = de + Math.imul(a2, Z) | 0, le = le + Math.imul(a2, Q) | 0, le = le + Math.imul(c2, Z) | 0, pe = pe + Math.imul(c2, Q) | 0;
          let _e = (ye + de | 0) + ((8191 & le) << 13) | 0;
          ye = (pe + (le >>> 13) | 0) + (_e >>> 26) | 0, _e &= 67108863, de = Math.imul(I2, L2), le = Math.imul(I2, U2), le = le + Math.imul(k2, L2) | 0, pe = Math.imul(k2, U2), de = de + Math.imul(E2, F2) | 0, le = le + Math.imul(E2, z2) | 0, le = le + Math.imul(S2, F2) | 0, pe = pe + Math.imul(S2, z2) | 0, de = de + Math.imul(v2, K2) | 0, le = le + Math.imul(v2, V2) | 0, le = le + Math.imul(w2, K2) | 0, pe = pe + Math.imul(w2, V2) | 0, de = de + Math.imul(g2, G) | 0, le = le + Math.imul(g2, $) | 0, le = le + Math.imul(b2, G) | 0, pe = pe + Math.imul(b2, $) | 0, de = de + Math.imul(l2, Y) | 0, le = le + Math.imul(l2, X) | 0, le = le + Math.imul(p2, Y) | 0, pe = pe + Math.imul(p2, X) | 0, de = de + Math.imul(h2, Z) | 0, le = le + Math.imul(h2, Q) | 0, le = le + Math.imul(f2, Z) | 0, pe = pe + Math.imul(f2, Q) | 0, de = de + Math.imul(a2, te) | 0, le = le + Math.imul(a2, re) | 0, le = le + Math.imul(c2, te) | 0, pe = pe + Math.imul(c2, re) | 0;
          let Ee = (ye + de | 0) + ((8191 & le) << 13) | 0;
          ye = (pe + (le >>> 13) | 0) + (Ee >>> 26) | 0, Ee &= 67108863, de = Math.imul(T2, L2), le = Math.imul(T2, U2), le = le + Math.imul(C2, L2) | 0, pe = Math.imul(C2, U2), de = de + Math.imul(I2, F2) | 0, le = le + Math.imul(I2, z2) | 0, le = le + Math.imul(k2, F2) | 0, pe = pe + Math.imul(k2, z2) | 0, de = de + Math.imul(E2, K2) | 0, le = le + Math.imul(E2, V2) | 0, le = le + Math.imul(S2, K2) | 0, pe = pe + Math.imul(S2, V2) | 0, de = de + Math.imul(v2, G) | 0, le = le + Math.imul(v2, $) | 0, le = le + Math.imul(w2, G) | 0, pe = pe + Math.imul(w2, $) | 0, de = de + Math.imul(g2, Y) | 0, le = le + Math.imul(g2, X) | 0, le = le + Math.imul(b2, Y) | 0, pe = pe + Math.imul(b2, X) | 0, de = de + Math.imul(l2, Z) | 0, le = le + Math.imul(l2, Q) | 0, le = le + Math.imul(p2, Z) | 0, pe = pe + Math.imul(p2, Q) | 0, de = de + Math.imul(h2, te) | 0, le = le + Math.imul(h2, re) | 0, le = le + Math.imul(f2, te) | 0, pe = pe + Math.imul(f2, re) | 0, de = de + Math.imul(a2, ie) | 0, le = le + Math.imul(a2, se) | 0, le = le + Math.imul(c2, ie) | 0, pe = pe + Math.imul(c2, se) | 0;
          let Se = (ye + de | 0) + ((8191 & le) << 13) | 0;
          ye = (pe + (le >>> 13) | 0) + (Se >>> 26) | 0, Se &= 67108863, de = Math.imul(x2, L2), le = Math.imul(x2, U2), le = le + Math.imul(N2, L2) | 0, pe = Math.imul(N2, U2), de = de + Math.imul(T2, F2) | 0, le = le + Math.imul(T2, z2) | 0, le = le + Math.imul(C2, F2) | 0, pe = pe + Math.imul(C2, z2) | 0, de = de + Math.imul(I2, K2) | 0, le = le + Math.imul(I2, V2) | 0, le = le + Math.imul(k2, K2) | 0, pe = pe + Math.imul(k2, V2) | 0, de = de + Math.imul(E2, G) | 0, le = le + Math.imul(E2, $) | 0, le = le + Math.imul(S2, G) | 0, pe = pe + Math.imul(S2, $) | 0, de = de + Math.imul(v2, Y) | 0, le = le + Math.imul(v2, X) | 0, le = le + Math.imul(w2, Y) | 0, pe = pe + Math.imul(w2, X) | 0, de = de + Math.imul(g2, Z) | 0, le = le + Math.imul(g2, Q) | 0, le = le + Math.imul(b2, Z) | 0, pe = pe + Math.imul(b2, Q) | 0, de = de + Math.imul(l2, te) | 0, le = le + Math.imul(l2, re) | 0, le = le + Math.imul(p2, te) | 0, pe = pe + Math.imul(p2, re) | 0, de = de + Math.imul(h2, ie) | 0, le = le + Math.imul(h2, se) | 0, le = le + Math.imul(f2, ie) | 0, pe = pe + Math.imul(f2, se) | 0, de = de + Math.imul(a2, ae) | 0, le = le + Math.imul(a2, ce) | 0, le = le + Math.imul(c2, ae) | 0, pe = pe + Math.imul(c2, ce) | 0;
          let Ae = (ye + de | 0) + ((8191 & le) << 13) | 0;
          ye = (pe + (le >>> 13) | 0) + (Ae >>> 26) | 0, Ae &= 67108863, de = Math.imul(B2, L2), le = Math.imul(B2, U2), le = le + Math.imul(O2, L2) | 0, pe = Math.imul(O2, U2), de = de + Math.imul(x2, F2) | 0, le = le + Math.imul(x2, z2) | 0, le = le + Math.imul(N2, F2) | 0, pe = pe + Math.imul(N2, z2) | 0, de = de + Math.imul(T2, K2) | 0, le = le + Math.imul(T2, V2) | 0, le = le + Math.imul(C2, K2) | 0, pe = pe + Math.imul(C2, V2) | 0, de = de + Math.imul(I2, G) | 0, le = le + Math.imul(I2, $) | 0, le = le + Math.imul(k2, G) | 0, pe = pe + Math.imul(k2, $) | 0, de = de + Math.imul(E2, Y) | 0, le = le + Math.imul(E2, X) | 0, le = le + Math.imul(S2, Y) | 0, pe = pe + Math.imul(S2, X) | 0, de = de + Math.imul(v2, Z) | 0, le = le + Math.imul(v2, Q) | 0, le = le + Math.imul(w2, Z) | 0, pe = pe + Math.imul(w2, Q) | 0, de = de + Math.imul(g2, te) | 0, le = le + Math.imul(g2, re) | 0, le = le + Math.imul(b2, te) | 0, pe = pe + Math.imul(b2, re) | 0, de = de + Math.imul(l2, ie) | 0, le = le + Math.imul(l2, se) | 0, le = le + Math.imul(p2, ie) | 0, pe = pe + Math.imul(p2, se) | 0, de = de + Math.imul(h2, ae) | 0, le = le + Math.imul(h2, ce) | 0, le = le + Math.imul(f2, ae) | 0, pe = pe + Math.imul(f2, ce) | 0, de = de + Math.imul(a2, he) | 0, le = le + Math.imul(a2, fe) | 0, le = le + Math.imul(c2, he) | 0, pe = pe + Math.imul(c2, fe) | 0;
          let Ie = (ye + de | 0) + ((8191 & le) << 13) | 0;
          ye = (pe + (le >>> 13) | 0) + (Ie >>> 26) | 0, Ie &= 67108863, de = Math.imul(B2, F2), le = Math.imul(B2, z2), le = le + Math.imul(O2, F2) | 0, pe = Math.imul(O2, z2), de = de + Math.imul(x2, K2) | 0, le = le + Math.imul(x2, V2) | 0, le = le + Math.imul(N2, K2) | 0, pe = pe + Math.imul(N2, V2) | 0, de = de + Math.imul(T2, G) | 0, le = le + Math.imul(T2, $) | 0, le = le + Math.imul(C2, G) | 0, pe = pe + Math.imul(C2, $) | 0, de = de + Math.imul(I2, Y) | 0, le = le + Math.imul(I2, X) | 0, le = le + Math.imul(k2, Y) | 0, pe = pe + Math.imul(k2, X) | 0, de = de + Math.imul(E2, Z) | 0, le = le + Math.imul(E2, Q) | 0, le = le + Math.imul(S2, Z) | 0, pe = pe + Math.imul(S2, Q) | 0, de = de + Math.imul(v2, te) | 0, le = le + Math.imul(v2, re) | 0, le = le + Math.imul(w2, te) | 0, pe = pe + Math.imul(w2, re) | 0, de = de + Math.imul(g2, ie) | 0, le = le + Math.imul(g2, se) | 0, le = le + Math.imul(b2, ie) | 0, pe = pe + Math.imul(b2, se) | 0, de = de + Math.imul(l2, ae) | 0, le = le + Math.imul(l2, ce) | 0, le = le + Math.imul(p2, ae) | 0, pe = pe + Math.imul(p2, ce) | 0, de = de + Math.imul(h2, he) | 0, le = le + Math.imul(h2, fe) | 0, le = le + Math.imul(f2, he) | 0, pe = pe + Math.imul(f2, fe) | 0;
          let ke = (ye + de | 0) + ((8191 & le) << 13) | 0;
          ye = (pe + (le >>> 13) | 0) + (ke >>> 26) | 0, ke &= 67108863, de = Math.imul(B2, K2), le = Math.imul(B2, V2), le = le + Math.imul(O2, K2) | 0, pe = Math.imul(O2, V2), de = de + Math.imul(x2, G) | 0, le = le + Math.imul(x2, $) | 0, le = le + Math.imul(N2, G) | 0, pe = pe + Math.imul(N2, $) | 0, de = de + Math.imul(T2, Y) | 0, le = le + Math.imul(T2, X) | 0, le = le + Math.imul(C2, Y) | 0, pe = pe + Math.imul(C2, X) | 0, de = de + Math.imul(I2, Z) | 0, le = le + Math.imul(I2, Q) | 0, le = le + Math.imul(k2, Z) | 0, pe = pe + Math.imul(k2, Q) | 0, de = de + Math.imul(E2, te) | 0, le = le + Math.imul(E2, re) | 0, le = le + Math.imul(S2, te) | 0, pe = pe + Math.imul(S2, re) | 0, de = de + Math.imul(v2, ie) | 0, le = le + Math.imul(v2, se) | 0, le = le + Math.imul(w2, ie) | 0, pe = pe + Math.imul(w2, se) | 0, de = de + Math.imul(g2, ae) | 0, le = le + Math.imul(g2, ce) | 0, le = le + Math.imul(b2, ae) | 0, pe = pe + Math.imul(b2, ce) | 0, de = de + Math.imul(l2, he) | 0, le = le + Math.imul(l2, fe) | 0, le = le + Math.imul(p2, he) | 0, pe = pe + Math.imul(p2, fe) | 0;
          let Re = (ye + de | 0) + ((8191 & le) << 13) | 0;
          ye = (pe + (le >>> 13) | 0) + (Re >>> 26) | 0, Re &= 67108863, de = Math.imul(B2, G), le = Math.imul(B2, $), le = le + Math.imul(O2, G) | 0, pe = Math.imul(O2, $), de = de + Math.imul(x2, Y) | 0, le = le + Math.imul(x2, X) | 0, le = le + Math.imul(N2, Y) | 0, pe = pe + Math.imul(N2, X) | 0, de = de + Math.imul(T2, Z) | 0, le = le + Math.imul(T2, Q) | 0, le = le + Math.imul(C2, Z) | 0, pe = pe + Math.imul(C2, Q) | 0, de = de + Math.imul(I2, te) | 0, le = le + Math.imul(I2, re) | 0, le = le + Math.imul(k2, te) | 0, pe = pe + Math.imul(k2, re) | 0, de = de + Math.imul(E2, ie) | 0, le = le + Math.imul(E2, se) | 0, le = le + Math.imul(S2, ie) | 0, pe = pe + Math.imul(S2, se) | 0, de = de + Math.imul(v2, ae) | 0, le = le + Math.imul(v2, ce) | 0, le = le + Math.imul(w2, ae) | 0, pe = pe + Math.imul(w2, ce) | 0, de = de + Math.imul(g2, he) | 0, le = le + Math.imul(g2, fe) | 0, le = le + Math.imul(b2, he) | 0, pe = pe + Math.imul(b2, fe) | 0;
          let Te = (ye + de | 0) + ((8191 & le) << 13) | 0;
          ye = (pe + (le >>> 13) | 0) + (Te >>> 26) | 0, Te &= 67108863, de = Math.imul(B2, Y), le = Math.imul(B2, X), le = le + Math.imul(O2, Y) | 0, pe = Math.imul(O2, X), de = de + Math.imul(x2, Z) | 0, le = le + Math.imul(x2, Q) | 0, le = le + Math.imul(N2, Z) | 0, pe = pe + Math.imul(N2, Q) | 0, de = de + Math.imul(T2, te) | 0, le = le + Math.imul(T2, re) | 0, le = le + Math.imul(C2, te) | 0, pe = pe + Math.imul(C2, re) | 0, de = de + Math.imul(I2, ie) | 0, le = le + Math.imul(I2, se) | 0, le = le + Math.imul(k2, ie) | 0, pe = pe + Math.imul(k2, se) | 0, de = de + Math.imul(E2, ae) | 0, le = le + Math.imul(E2, ce) | 0, le = le + Math.imul(S2, ae) | 0, pe = pe + Math.imul(S2, ce) | 0, de = de + Math.imul(v2, he) | 0, le = le + Math.imul(v2, fe) | 0, le = le + Math.imul(w2, he) | 0, pe = pe + Math.imul(w2, fe) | 0;
          let Ce = (ye + de | 0) + ((8191 & le) << 13) | 0;
          ye = (pe + (le >>> 13) | 0) + (Ce >>> 26) | 0, Ce &= 67108863, de = Math.imul(B2, Z), le = Math.imul(B2, Q), le = le + Math.imul(O2, Z) | 0, pe = Math.imul(O2, Q), de = de + Math.imul(x2, te) | 0, le = le + Math.imul(x2, re) | 0, le = le + Math.imul(N2, te) | 0, pe = pe + Math.imul(N2, re) | 0, de = de + Math.imul(T2, ie) | 0, le = le + Math.imul(T2, se) | 0, le = le + Math.imul(C2, ie) | 0, pe = pe + Math.imul(C2, se) | 0, de = de + Math.imul(I2, ae) | 0, le = le + Math.imul(I2, ce) | 0, le = le + Math.imul(k2, ae) | 0, pe = pe + Math.imul(k2, ce) | 0, de = de + Math.imul(E2, he) | 0, le = le + Math.imul(E2, fe) | 0, le = le + Math.imul(S2, he) | 0, pe = pe + Math.imul(S2, fe) | 0;
          let Me = (ye + de | 0) + ((8191 & le) << 13) | 0;
          ye = (pe + (le >>> 13) | 0) + (Me >>> 26) | 0, Me &= 67108863, de = Math.imul(B2, te), le = Math.imul(B2, re), le = le + Math.imul(O2, te) | 0, pe = Math.imul(O2, re), de = de + Math.imul(x2, ie) | 0, le = le + Math.imul(x2, se) | 0, le = le + Math.imul(N2, ie) | 0, pe = pe + Math.imul(N2, se) | 0, de = de + Math.imul(T2, ae) | 0, le = le + Math.imul(T2, ce) | 0, le = le + Math.imul(C2, ae) | 0, pe = pe + Math.imul(C2, ce) | 0, de = de + Math.imul(I2, he) | 0, le = le + Math.imul(I2, fe) | 0, le = le + Math.imul(k2, he) | 0, pe = pe + Math.imul(k2, fe) | 0;
          let xe = (ye + de | 0) + ((8191 & le) << 13) | 0;
          ye = (pe + (le >>> 13) | 0) + (xe >>> 26) | 0, xe &= 67108863, de = Math.imul(B2, ie), le = Math.imul(B2, se), le = le + Math.imul(O2, ie) | 0, pe = Math.imul(O2, se), de = de + Math.imul(x2, ae) | 0, le = le + Math.imul(x2, ce) | 0, le = le + Math.imul(N2, ae) | 0, pe = pe + Math.imul(N2, ce) | 0, de = de + Math.imul(T2, he) | 0, le = le + Math.imul(T2, fe) | 0, le = le + Math.imul(C2, he) | 0, pe = pe + Math.imul(C2, fe) | 0;
          let Ne = (ye + de | 0) + ((8191 & le) << 13) | 0;
          ye = (pe + (le >>> 13) | 0) + (Ne >>> 26) | 0, Ne &= 67108863, de = Math.imul(B2, ae), le = Math.imul(B2, ce), le = le + Math.imul(O2, ae) | 0, pe = Math.imul(O2, ce), de = de + Math.imul(x2, he) | 0, le = le + Math.imul(x2, fe) | 0, le = le + Math.imul(N2, he) | 0, pe = pe + Math.imul(N2, fe) | 0;
          let Pe = (ye + de | 0) + ((8191 & le) << 13) | 0;
          ye = (pe + (le >>> 13) | 0) + (Pe >>> 26) | 0, Pe &= 67108863, de = Math.imul(B2, he), le = Math.imul(B2, fe), le = le + Math.imul(O2, he) | 0, pe = Math.imul(O2, fe);
          let Be = (ye + de | 0) + ((8191 & le) << 13) | 0;
          return ye = (pe + (le >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, s2[0] = ge, s2[1] = be, s2[2] = me, s2[3] = ve, s2[4] = we, s2[5] = _e, s2[6] = Ee, s2[7] = Se, s2[8] = Ae, s2[9] = Ie, s2[10] = ke, s2[11] = Re, s2[12] = Te, s2[13] = Ce, s2[14] = Me, s2[15] = xe, s2[16] = Ne, s2[17] = Pe, s2[18] = Be, ye !== 0 && (s2[19] = ye, r2.length += 1), r2;
        }
        Math.imul || (V = q), y.Red = A, e.exports = y;
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      e.exports = r(1004);
    }, function(e, t, r) {
      "use strict";
      (function(e2, n) {
        const i = r(42), s = e2.crypto || e2.msCrypto, o = s && typeof s.getRandomValues == "function", a = o ? s.getRandomValues.bind(s) : null, c = new Uint32Array(16);
        let u = 0;
        function h() {
          return (15 & u) == 0 && (f(c), u = 0), c[u++];
        }
        function f(e3) {
          if (!o)
            throw new Error("Entropy source not available.");
          return a(e3);
        }
        function d(e3, t2, r2) {
          if (i(n.isBuffer(e3)), i(e3.buffer instanceof ArrayBuffer), i(e3.byteOffset >>> 0 === e3.byteOffset), i(e3.byteLength >>> 0 === e3.byteLength), i(t2 >>> 0 === t2), i(r2 >>> 0 === r2), i(t2 + r2 <= e3.byteLength), r2 > 2 ** 31 - 1)
            throw new RangeError('The value "size" is out of range.');
          const s2 = e3.byteOffset + t2, o2 = new Uint8Array(e3.buffer, s2, r2);
          if (o2.length > 65536)
            for (let n2 = 0; n2 < o2.length; n2 += 65536) {
              let e4 = n2 + 65536;
              e4 > o2.length && (e4 = o2.length), f(o2.subarray(n2, e4));
            }
          else
            o2.length > 0 && f(o2);
        }
        t.native = 0, t.randomBytes = function(e3) {
          i(e3 >>> 0 === e3);
          const t2 = n.alloc(e3);
          return d(t2, 0, e3), t2;
        }, t.randomFill = function(e3, t2, r2) {
          return i(n.isBuffer(e3)), t2 == null && (t2 = 0), i(t2 >>> 0 === t2), r2 == null && (r2 = e3.length - t2), i(r2 >>> 0 === r2), i(t2 + r2 <= e3.length), d(e3, t2, r2), e3;
        }, t.randomInt = h, t.randomRange = function(e3, t2) {
          i(e3 >>> 0 === e3), i(t2 >>> 0 === t2), i(t2 >= e3);
          const r2 = t2 - e3;
          if (r2 === 0)
            return e3;
          const n2 = -r2 >>> 0;
          let s2, o2;
          do {
            s2 = h(), o2 = s2 % r2;
          } while (s2 - o2 > n2);
          return o2 + e3;
        };
      }).call(this, r(12), r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      (function(e2) {
        const n = r(42);
        function i(t2) {
          n(e2.isBuffer(t2));
          let r2 = 0;
          for (; r2 < t2.length && t2[r2] === 0; )
            r2 += 1;
          return t2.slice(r2);
        }
        function s(t2) {
          n(e2.isBuffer(t2));
          let r2 = t2.length;
          for (; r2 > 0 && t2[r2 - 1] === 0; )
            r2 -= 1;
          return t2.slice(0, r2);
        }
        t.countLeft = function(t2) {
          n(e2.isBuffer(t2));
          let r2 = 0;
          for (; r2 < t2.length && t2[r2] === 0; )
            r2 += 1;
          let i2 = 8 * (t2.length - r2);
          if (i2 === 0)
            return 0;
          i2 -= 8;
          let s2 = t2[r2];
          for (; s2; )
            i2 += 1, s2 >>>= 1;
          return i2;
        }, t.countRight = function(t2) {
          n(e2.isBuffer(t2));
          let r2 = t2.length;
          for (; r2 > 0 && t2[r2 - 1] === 0; )
            r2 -= 1;
          let i2 = 8 * r2;
          if (i2 === 0)
            return 0;
          i2 -= 8;
          let s2 = t2[r2 - 1];
          for (; s2; )
            i2 += 1, s2 >>>= 1;
          return i2;
        }, t.compareLeft = function(t2, r2) {
          n(e2.isBuffer(t2)), n(e2.isBuffer(r2));
          let i2 = 0, s2 = t2.length, o = 0, a = r2.length;
          for (; s2 > 0 && t2[i2] === 0; )
            i2 += 1, s2 -= 1;
          for (; a > 0 && r2[o] === 0; )
            o += 1, a -= 1;
          if (s2 < a)
            return -1;
          if (s2 > a)
            return 1;
          for (let e3 = 0; e3 < s2; e3++) {
            if (t2[i2 + e3] < r2[o + e3])
              return -1;
            if (t2[i2 + e3] > r2[o + e3])
              return 1;
          }
          return 0;
        }, t.compareRight = function(t2, r2) {
          n(e2.isBuffer(t2)), n(e2.isBuffer(r2));
          let i2 = t2.length, s2 = r2.length;
          for (; i2 > 0 && t2[i2 - 1] === 0; )
            i2 -= 1;
          for (; s2 > 0 && r2[s2 - 1] === 0; )
            s2 -= 1;
          if (i2 < s2)
            return -1;
          if (i2 > s2)
            return 1;
          for (let e3 = i2 - 1; e3 >= 0; e3--) {
            if (t2[e3] < r2[e3])
              return -1;
            if (t2[e3] > r2[e3])
              return 1;
          }
          return 0;
        }, t.trimLeft = i, t.trimRight = s, t.padLeft = function(t2, r2) {
          if (n(e2.isBuffer(t2)), n(r2 >>> 0 === r2), t2.length > r2 && (t2 = i(t2)), t2.length > r2)
            throw new RangeError(`Buffer expected to be ${r2} bytes in size.`);
          const s2 = e2.alloc(r2, 0);
          return t2.copy(s2, r2 - t2.length), s2;
        }, t.padRight = function(t2, r2) {
          if (n(e2.isBuffer(t2)), n(r2 >>> 0 === r2), t2.length > r2 && (t2 = s(t2)), t2.length > r2)
            throw new RangeError(`Buffer expected to be ${r2} bytes in size.`);
          const i2 = e2.alloc(r2, 0);
          return t2.copy(i2, 0), i2;
        };
      }).call(this, r(3).Buffer);
    }, function(e) {
      e.exports = JSON.parse('{"naf":{"width":9,"points":[["67ae9c4a22928f491ff4ae743edac83a6343981981624886ac62485fd3f8e25c","1267b1d177ee69aba126a18e60269ef79f16ec176724030402c3684878f5b4d4"],["49fda73eade3587bfcef7cf7d12da5de5c2819f93e1be1a591409cc0322ef233","5f4825b298feae6fe02c6e148992466631282eca89430b5d10d21f83d676c8ed"],["14568685fcf4bd4ee9e3ee194b1d810783e809f3bbf1ce955855981af50e4107","31c563e32b47d52f87ce6468dd36ad41f0882b46f7abf23d12c4c4b59f4062b8"],["357cc970c80071651bf336e06f9422b886d80e5c2e4e0294d3e023065185715c","7f3d23c2c2dd0df4b2befce956f2d2fd1f789013236e4430c74e44845522f1c0"],["14e528b1154be417b6cf078dd6712438d381a5b2c593d552ff2fd2c1207cf3cb","2d9082313f21ab975a6f7ce340ff0fce1258591c3c9c58d4308f2dc36a033713"],["107427e0d5f366ccdb33adf0282d304f8843e3e88d22b7b83780e073b7c05fed","12dbb00ded538b7478466022d2da89b83740cfb2289a272387efe1aeea401f80"],["4f162deaec2ec435dc5ac6f95d20419ed9631374770189cb90617f3e66a18dc1","12cbfb2d04ff22f55162f70164d29331ace5af18a19a9aa1946d4cc4ad2e5cdf"],["7dc52d5a7db816e9b850741ea2fd72918d94985b85a20b4dc5597853a876df6a","6f6d2bca60003ef9f24ac245cc919fb717b188723b34f901cd6cfe9bec97be04"],["1d81f74a5ba45c7022e8c140d763b9c1b0e281a5304696e74f791a3a04a94472","3f185a93d95a4347227c5bb6ddd65cf42e1830823f435f3083fe6102691d55b9"],["6f0ac78e5eb90e87958588f9d47541edf252cb1dde3d073cc45e3e7ef9365716","6628d116b7975ae5f323e5ddf4f8cc35ae06d5c5c7d8a56effc66051336d289e"],["2188ac423c67db5625915e05222a391bcaf91f05d9b7cc2cab5798b2d2e14d95","23240c559c57b79a4df69a23fc46e50504277b1fa49369ab663d79782b33c0ee"],["794241471ed9ceb009384b370cb8790fca98552ecb822dc06b19362c36353455","71e918c03cdfca7207772e8d18ee8f9d92d79a0a83f378912362bc68d311dcd0"],["163bc180c22dfc5da23c5c052107bba93a88b4360aa1d4e729611d8f5a7f8079","631107a6ba83f7458194b9766a0a54f638ca20daf800384dbae1498677501939"],["39a32a30f3eb1da0eb7e3903b8ace3da3890b24b61a3a9e79db663b5db0f7a5d","4d4c54675dc1f1c9a1af9ca0010045dc803c16af345823136dd203715d67c491"],["38085391a0e2831f59c33fcce7591515784d359925f11ff958e0e4658efac0e9","42918001a829f49b5634e34ab7fac21b30e24660669ed91955cc31944a19e62a"],["5e3573b049d6135ffbbbbd9a480617434f2455b4a591f719e91153eeb75a32a1","54bc665420c789da1105d53983c1a0fc33bcc2690cd9b37d6566e21a85892871"],["7ed068b25b82c05fdc0e46bd80a357f3acd2f5c3b9330bc8d474e5b28270f6eb","01da83a187da8ccca704d46557a462551d70df7f943a681c3b97b1db6a21b7d3"],["05ca3370e7516f6686111b72650aab4c5484407f14b515ade03951c6a14a0aa3","6f407fc537b95277966e7f0f5e64b86904bf7baee091cee6011a3611834c6903"],["624cb312b698bbd6dbca79b8d2b53cb5d8b3ab33c19306e87c18211f095ab9c3","5b3336b2751e97c793731ac9b9a2243b6229f6d0bbea6b619395d0e5200bd8a3"],["1ddf6ece608fe2901b34b7e4f47cfcb75e947e293c704d8121b11a31a051b5f9","5e2dc58e9a48a749ce5296d229cfb34f96a147a8246d2e9844d52b52112ea94e"],["396b384f3d61cfc060308fbb1c941ebc9418e2d9abd81316e08d625f48c0e101","7223e5f7b66d1ca24962bac273a7aa6618cc60cb8a64a8837e0261107e7ad644"],["53cc3dca3410277fb38d75e4ac0dde8e77a99c817170dbc9696cffe7890fbd50","2592a3aafce64d7c69f4de468d5d5aa19845f5ca08f64a0a40e37d23ececbbe1"],["34705fe600f5aed77b29d3eacdffcd45d886904156d43dc550bb7fc889cc1368","299153c141a8950ffbcc8e9352993e642fa39a476200dd4acf42e158dbe3b01e"],["5969255bd089181b991fce96b1792ba330a14f8a0b061f8118c9c336b8504618","680a805fa0ae93c2a12b193517fb1147d355547e4ab18a9d6ca21575bbb4d7a4"],["27d1d57fa8808d3d452df14bda4248b37902752163b1fd499a92456c59918ecb","0a42f1c0f4c5d7de9e82904f0b4ff63988d31fedb8aad9d8ae009c7a1dff09c3"],["0811d14bfdfdcf2144edd9cf55bce584a9ba17aec3eac8aaa82987ad703d9b8a","42bea70d46f3ee0df0ec77d24c5495ea56ada2e0415920470c4746b68306376e"],["4de090761b863cb0f0650297f154a8e66d00c5119c38e5dd05303d905d527a4a","5eef0efd105361ce198a30e09e7e7edffbe3d70189e63ca68cf6057b9772baa8"],["1d45517858ce45556aaee056ebab7e0ef3dc9ae3740aed570f3e76bfb4fc4817","0b5a9d8fe8b7ccb04c0a5ef77798a3ec6e1bc1138604eb05e83844f0d4c5c699"],["4285edbe9117f30aae1ef5ee419eb1d472106c6b3d7f3ce3701e39324b0eeafc","503aa6104a682bcf2c0a60c84f4c22b50b0caa0fed8db87dedc7173eae04bdbd"],["3ef830cbeff9b79039b1b6bd9bb52bbcfa56d008d91b9703ea1c80351f8687d6","62349ff5d8dbd216a874769eec152ef9734bea9240eed623992c7553dc8ee4c8"],["649a996e6d4d3b60ccb526939ed8929134107e03e2fd4648eaa2fa9830822c1a","1648311b942fe95d492a1ace5e5235c1aea860d036d2475cc8964cd1acedee9c"],["3a95596d97770d050d1ecc075d58a74f5fe6b4b8222740534ba22c8be73f9d56","15a80cdcc03317a830fa4a7461de6bac136993e0a797f83b405c161a34c98fd7"],["2d265d3fe1c88903ca93685209418deec5af886bf0d9fdb3f499d831cbb76ce1","08376fb0663d3aa220948612b519af4a6a1f956622b15a305fb2e60a84210b3c"],["642cb15498d8c6b25803f3e56b98e2ea185ac808cbeab5eb0a610ed5babb9385","21b5ca5020a9e5a2334c0bee15193ea16c909963ffa6e1d93df4b239abeaeb3e"],["38e576301ff6cdd0822a19c6d610d445d3967e2bada903abb6220f68c6e79bef","458fe689e31a24952d2817dda4349109c1b26ef31699fa36c4f8389eeb60eac0"],["372bec78d75011a0ef2233cd08790a7f15c1ec1e3a78cac8d6652678641780db","32e9e47cf2f48612ed3e2c2006ea0c0c8476d3562aa88cefb67ec97abdb538e8"],["1aa3756aabcc3eb65afee34e0a15dd67bfb9fb199eb131f4cc6a3ca9ec4d1c77","42333e27831add6eb49af80e17347c63c26dd684758096ee3dbdbe03a49159ae"],["38db16447d79d3590c4a36e20286beadfbae91a4eed2e5e7dd4f975ac0537dc5","1c48ccaed60ec12ce862ea71165bba7df1739845df2a857f4ef0a0f714f96daa"],["176b78984cddfddef90bae619c6a98e951d9a7ac7d6af218ae7e76b273212fb7","7b5b93eda77443f366e2a127abe12212aad8536767ec1c5861143f777db85852"],["042d154bf7b4a7bd73897ae528c6bc552ea58d74f8109e8e4052d3e9d38bb0f6","42d1831323e279f9f7ee9e3470ba20ca7edc3245eca5d8ffa182de120a71fc90"],["1f8d28dd4f286a8d0687b626b01204434bf5874a9550d6e375116490c154e108","1ce82e2360367e06f41757fd45239f9bc2c61609139446b09b55a9c43da98bb8"],["613eb914c015076e9ae8356bf508c289e50b1c87d9e2546f6e406362e248e5e5","3edbaafcd8c41ef4aa18b254137d201a2ef0ca4ca28807156bc949e920b97353"],["27bf43826bf0310b4b3e3a405eff790a1d77a8d48b04891246cff8e193cb03a9","16a24d749cc1d234fbe8af9cfd782c3aaa5869d6db0afa7b4d4c67037514f2ea"],["769a6a59746d7bead417bdd9c3b5f5ae1dbd924083ffd9e88df7714f57a675c2","22dc1267cfb2b41c590abb7dc3df45619af688d0421f2bdfb50748335ec5da25"],["795734ee4fcc24194219d25d41a2889cdb942f765848e9df63bff0b158c7224d","756420ab5c71127d39d2e79907634a177af0e483e08484ea4d7b76f7100669b5"],["644d12fc5e7fcac5aeb5911d8240971a99fc59fdd2903f46958e6896aefbcf46","173450789fcd40172e8124fea56f7aedad2ee13fa8fc5209cc8cb572175216dc"],["5deca767ef17b9e8d4f351f5c8ad1fcc50e97a2ed687516bf5210679fd6c1110","4ddf2207da12f700708089989da016f3307ce5721c9e27c952599d67898aa396"],["296dcb24cb3185d037a94bef93c97cacd09fc7050ba8472da59d4a689d9d2848","0b17dc85a4acf73833fab728f15abccac97cd09e57975bd996d3e1dd8b060f7b"],["408a3f1af2e77dfe94f8e225b40dfc146abb1002db7bcf15fde61c1a6cf1b93f","4f01ec38854c15a879e7c7924f048e2ec951dcdf04a614088b68fbcc0954e1c8"],["07d2d9234970cdc9483e0a7c5ec52c49077c440e0a993a1e624f90b8fafbbf07","6ac2190030c210ae3e07b9239f6ee7affba263866ee7831a564c511f703f2295"],["2982d553002082320aa899b9b6887e40dedf11868fa931689795d93d58452873","215e16ca447978624cad0ea6bf45aada4eca914425ee275db2a26e980dc349b6"],["1d8649515cb49e136d2895b6276569e5c711fe1a343eeb5a3daaa8d0e7b42d1a","5b21e2f2978f343a3e9ec3316cdc111af3b55f34afa5fc3fcbf6c26c1bb7fb6c"],["5460df4d607147939cdbc04dbdcbdffd37c5eafdd501b50a67213a23ee724a97","69dfc7004263ccb52487d34ab134b80bb3030273999739cb9cdc16d71b9abcd8"],["24623476f0af9f42ca15a0697ad23abeaf5ed9dc4d2b44f7e8175486598125bb","6aebe4a1a22d9e31194dcde6d33ff3af77dda15c22b2ecba9329849b8c042687"],["64e507a02bfd8a8413117bac253b17f94b2911681ebc07c92da0de6a651dd538","513ac992d72b463da110afb612fbae36590248a0507d845ee95fab2d1caa03a4"],["47f3bd11324f6bee230a22a5bb06a3ccddbc0473b810689efaeef894a654bf0e","7e05db9b3ff886bf32608dfc8d14eaa91e2e2ef230e7c75618060e4285c492be"],["4a6d22703a7045d02d656015ea2d168385d42963a739a895e4fd87b3e55c5e0f","4c58d7a8c6ded0451798e51f16ffa5b637a87aa5defb119ba868d8cccf61776d"],["3e22af70a548097244d7798964598172a90391f84c59b04cea7af283ba368eb5","689d8b7cda23b8dea197c5119fbbbd81dd4b59a36cc283dbe292b5b6519a2968"],["61a6ba2ca42d9d557b3a2ff0867c1b8bb8fc40192d31ff637431a302bc065a10","63d805f5a79f845ea2915a25cf0a8cab2e0255212a1bd3c8852b25579b63721d"],["03d963eeae48556e88305f91c478efcfd2168c346b9ba185884ec8621e8cb414","74b75cc839a944ad8c639719d20fd9d48d2099ef24c8633eabec7a9ec1e7e183"],["0f04da69e0202f7b44c58b103c88de09a0599951fedb17e7f2152d6b93a58ae9","1fbc1c9cd03c4cfd46e8e90019debf86e8036587eade038346f91070c800b8c4"],["797899e488353ed0c6666aff11913b33be0190833766e809b2a68cbc671a9cfe","5dd70a33ff94a84b3fe660f7070e6179e86b5c846689265bf985ce424b8909cc"],["735b64bb872606510e4e7d57833eb7ffdc4aa0dbaa242439806be68379f77cdd","384aaaee3ca7ba2436fcb65910859ca5ec30c10af11df7d777d287bc1a2bce2c"],["6f6ea532a62cf4766f55a0a72a86b55e73fe9d3328ee94bfc271e122f99dc1ac","61d8203ef6da5d0b584541c02331c7f58617cf8d4f26d11776236ce8b113ac10"],["5d99a2a3d4aed730b827b68ed836a9910dce4e7b93faf456981ad6cd85748773","7eeacf5680fb6108a8b7edb45f7134644111b08e17c236469685af5a79474b9e"],["31d0b4bb57bd7b69363c064a49bf3c3b9d7635bcc287e7b3059d3d99fd8382e8","1592e581034e13d47d02b8966f5359097e652391be8fb1e803f4219a22aba2c0"],["424cf5c498bbbe8fa7e5c3247049cc3f45946d0e5f38c44a36a6c84b60a84aa0","34acd712d334a2315dc8fd00c5c9b7c5c9f29bca27380a018882a5ab4a0fcb43"],["33a6ae0522936ba774837aa7959972f9804e3ef02ae84c8039be6595598be247","37022798cc08be9b4ded34c1c5062ab3a26081d375cadf517972fb48135a6602"],["5939635b72aeba595b5f6e376d11a3e07d4b1153ab4d0a7ab267b8bcc47cc3cb","382162eb33db2322cbe01a38fa4d13720b6d8edfaf8116a628725ef4293a6c27"],["3649e78d2ae9fb0ee86b691c27386efce4f3e383790e3cfee2bd59c2e85c4036","09b0d9e0dd82e697b9be9d61ce0d1410e281122b483125c48f7942b22f5d5be4"],["62c7585d1677b7619d8200175346ec99118416d8fdf0103730d165934e96a973","5fef7955ee07304429995433a468d68dec4ecf6b08bbe8cd06869080094044de"],["0c94537d311e17f5b0c58989b5be7e40c88b978a8c074a1e9bb07a713f77f6d3","6deaaa5001bcbbbe9ae436fe42f7042ce74fbf83c14058427fad4587ed33c4e2"],["6f5c6894a8d3877312e608c11809c15dffec3df551711095c8cfc810533e1b3e","74eadab9389b40d6ac6cc0d6e333d628ced60a9ef7617751c20630d23477af7b"],["4e16e88e171f9a07e11f97bba65c0fe5483501f255343afb3335ed47fbcee08f","41bcd7dd328871247cb7995bc6bd2e1961e94b0fb12e5fb2f264f9ad2cf47d4c"],["65d8484cef146e6c232fb262c2ac8200a52c63ccec26ff6f038aa5c74982c741","67283346bbae9391952b141e57ca8e3a36f0363d3b81b1c0f2b3c30a92c74235"],["1c588485b64be8cb99bf97f065e75a82138ea2e035ba90b63745354e9cf729f8","7c9a18d6ebf5465a197989cfb9b5b2a66a5402f46c4708ac04187c6b157a0d77"],["2c80c4ad0aebcafab7e9d2519a329f8a1c7df21cb6b1acec7403c0204d6dce71","7f8e62983160756e35356df95d44467e621c7274372997ca74a9fb760b4db36f"],["1e1e5fc87fa2c49e2c44d5718e3d73c73a91a64ac1374652080bd9004291b9c6","153828e90ed8d94c0f86e0eb54ccb31073cd29ed62c34cd9f2dbc5d98872e597"],["0ce0488a30ed446d445efb1bd21ba32ec3d05d538e6393bc0e58e0849ad57129","7278074ac66ac779136f4d6a334b27633645dea0fc98d137e3dbd4015d12b5a1"],["01a6b81f7285f293f19ba019b009aed8280ce285af42fab91e87fb0bbfa6dea4","60f910dc7c9a82e7836f36acfe7ec26b9babfa8bf26b2945b3c1a43b0c19b4dc"],["79b4ce3c6990023859646690c9ea800174902acfa1aad7ff34eca032dbde7150","53a1053d3fc6c749bf8a928854f392d09fa851ba963ca661bffbe74f012ba45b"],["220ee355b5c39c1901ed34c0f50f7778ad1bedcd7259ae167c16514ffe333498","05fd9374986e1e06035dbfada0117035b96b159354262f2b2695af1256d6aa2a"],["1e2f97d2cb4a19ca40403b364253da71f65d2d4665894267e3c6a9db8b4a3a18","22804fb035acb519210ff99ed7a974a725d896a77933789b4dd45a37dea3466d"],["35b8699fa20987876ac3b3086965b05f8cc809d71cab45e017c68ac96e24ed5b","155079de21981778dc438353bf2c6a65967a1a33ebb74c866fb42f4e3cce3e39"],["3cb40c55f5f19c52958e8c4ecd9c459b1d3268b3971b2286d3e58d1fc6b6a6bd","379e1f1f59df05c74485615b87441ba6203f0cdddc6873a883d4cc6dd1b75921"],["6ad916290e0d003ce5c961679f77704dcd768589d7cb728c60f56852031803bf","1e602b4a6725832a56944234f84c4f85f79911b55beef903549089925f2ccbea"],["7c0162492ae668160aa56a60e8bd43ec088555f750d2223cc37362dead5de123","34e60b446eae100d4c3abc6cb02e4ca559457fb5a9030a290a2568fa4cbf118f"],["354c25bf7b3e83dd0c5e1f39b82e3567edeb5337634056c1091cd6a016caacdf","7abb271ef121630f85a9a1049b3ad78d5b889f533b37a713b8801de46770fc3a"],["1e581a4bcf7504f33f4342b2097504d13f9b5a27f4790a6cdde1242209862850","2164d56564360fd2b5dba2f2c6ef1045ab448c3b60b2f2196c2f74625fc39e07"],["533b56f18283ee79b9a180b887c298961bd9aaa6fa3ef97fcb0d5688e694bc3d","6011366753812df2bce83634a92dbac18dd1cffdbf9a97fa1b1d5b49e0026764"],["4b508b94e6e2e6cd260a20664ea7d727ad20587b63ebe826032e0d20cdc6627b","1e8ecd6ff5aabae78172a0214d07a5013992d133af58afa74049de726df2a6c4"],["3398c0c0219f5ac87a8c73fcd17b89311d120a53f5231cb761030c194fed4265","025b234a1dc8662c068c4ba903939c2f79f3f7a3ae64e5edbf667b13599142d9"],["5941a17b04cd3465031cb6745cb94eed24e1ff8d38a6e832f1637ae8e89c78e6","5309792c546b6cda458be331957763b5adb5d535d54a4a61023678faa2ee02ee"],["2cb490d2c0047fcbaffe1df26640bee73c158af6fec91343d606ce9d124a20c9","2e2952ebf089200aebfa3947f241e2fe85797afebdc1ea06d9d26de1b446a964"],["79305236b583232a91c63c7d9ca3750be7ee21711e4d6d257c39ae398212bde1","6f9ecdfa953e302c2014fd8512405e4be0d48302acd15e93936e8dba7d01053b"],["57d9fcb884b94664f35387fa6665cd9bc8136f90d804d77416ea99c3c653ee63","14197e65f0a3599c0b9fcef75b5fbb93580d1b2457b59fb70ce7b9bac88d0fbc"],["6d99df2c28c9fa1e38acddefd3e0931109143d873f3330377a9926bdacdd6523","2f21987905f397f092fc56c5ccd301a1e6afa3c4611627e25017b2e68d07c150"],["749d19591f1755bd481fa12a288166aac42911654c8c551395b265116269ceb9","7ec145aa7558d0342cd87b1750933cb6f3717e727a86a1cc1f2b0c274213688d"],["340f7f5ae19292957902635a5786d14fa38036b324ae759da501e32b8c4073f1","64e231a413f1379a26f4e8223ff91fe2ccd865549571d3c6c28871964b40a0ea"],["4aa33e00bf6e92cac4e84384e5dde0727394233afd5d24d357a8afeb94b08109","3385bb4fbc441937ee01b671d506227a654fd6c1c532cf5221710c6c56ec7e21"],["34b2ffca05f01088de266306c5cc122661e9308eab16929774e58565afc0e4eb","7662faf0f70e82c062c2b835fc6da3353d3cb20b80611ffa6ef2982cf62fa605"],["820fcb51326f1536ddb8dc1052aa198406c7e48f2c81e7664d15f8f9d3715e","756574c23bb01170b97d9fa1663a8ff2f5b97eaa5cd53f34140c1bcec8c262d9"],["0861d7e84cec6d6e33641ff6c85202fc0e9160797809ddc2193802499caf05d3","34936e0a5dc7e2a6217d475fbb8c1c607fb8b3565908a04fd5948abdd399c59f"],["5b4a1dc887ef684d7b4b165b70acb70842a2fa105935af15ecb4a097e33b8f2b","54d21511c05805e5298a72372b8289e9d59c46dc8b5c368bbfda620b68aa652c"],["755493ed60b13f03f9c019362a5af73fb49842dd6916e2572b1b6a312cd20cfc","0750bcbf7e449cec422b93ace1489e1b177d4dbbaa781d315c74d54bb444e9a9"],["5f1c341065b6a81ed2edb6bc38ba81b4c2e3fe2058e5baa13e1406eb2c5b4b4b","6179ebfa7f8086f26820fc99ca2f94c1be19bca672d79cea5b02a836119e06ba"],["1915024ee86acfba3f61ced9707521197195166fb1c4639bf3b3fcf0bf0ded46","5f2e0547032221d2b00937cf524590e3d90901ef0286ea0b032c1a81461b6d92"],["4e942d95930f38c8786ff4a8e576e7a29fb7627afe1fff91cda5006ba0624f5d","45902f695d512d70ce4c1e0520c0060896b94e14d2960b2fcf2ed5e138e0217b"],["63e45f3d91ab915d412bbaa17d1d249e1a1445077fbfaa6be7d35041c5116a91","46dad5a4ec2ad0b86938f5e09f1c03b53b660fc5137648b08527cd20708003da"],["5e2ddd2175417f72c9962c503ac5adf94ed11f28b9d41fccb6a4512886f3cc87","3523b218478911145af1dc431feb7db0a04066eb6e2ade3c7b67d11bc55323aa"],["62ff30a6b179a26e7247a8312cb3af3289e5d722f76a29f203aa623889aa05ec","562beb7999019346beaa80dfd5b95d614e1ff96c1cb1037f65c44997b797d066"],["14988b5d62084fb8335c2f261cdeddc1b634b09cedfce713ff5f0a0bb588a556","447068731fb98e821b8e413b3b48f2d1c8bea308f05aac877006b0f4c3b0cab3"],["1ac777f708a5942cc434236920e82ccc6af920c0a0676712255aa7082b37a5b6","52a6f88d92af1887c781501c6e3a88169a2831b74aefd416f22b47e8335ce317"],["5959792833b71bd5042b78e42212af671f5f87a08eafd8cdde2dcec8140e4bb3","41ce94633eabb8a1b08fac66f762997ed8c9e2af3558e1f6586ad6a5bf5b7b64"],["4464a7962e6722b457336fe98c91765b1ff178f9e892e90129e65fa7688a0607","3d1510b92fd33c501f058a7a86bddedf1b83f9b6e4f04829d321117013f891fe"],["62906d81e7f800e662519f4324ab4c8aac197661c729eed3e744d09efe721c08","4b68efb5b1b709ab86e3253d70bee87ba07875c04a64ecf7e35cd8cdc6c0f7d8"],["4300ff025ac78ef36e58ee7d0d732cf76cd0929fe265b3a093a57f23fc326757","2f92880570846ff2e90d91f16bce3705c9c3ca8011cc543091463b623e4b3c01"],["5427ba28d94652527a9b0c76f57a451e46bdc06cbc8a2481df17f66ffb1524e3","547a97c4afc8d1f74a5d51f7e524f68472f589cc0b396b21368628721537d722"],["424c4493810bfd5e3ffa21776326d8ff62bf8fe74504d7a2db5d3f74e5ce1015","74d0daa832d40405d01551a58b330ffc5abd5356230d6d7cabeb5b1a55046f32"],["54e10980d81b4ae8778896684295fa5c5475e8d68ec2a26e1b0a65383507b3cd","6b1eb48da6886c4d88cea720e9dc8b0d8c51a8f0e1943afa31a40eeb553c0676"],["732eb9e9ebb556e9f024c5574166738f4707b0fd005f568212ab575c1db71ddb","1fc6b00c89e48114d6b13d9920a0c78093994f2b08df147bdbb56bead2cea165"],["74029c04b34b7f314855fee42a04d0ddfdeb92ef3bf7cff629928a97733d96fb","501f63a252dfbc090733b5a208bfe08f81c91419ce3d2d6c0de8cdc5a5625014"],["04524402ebb71a60bf1055001000203a6d4917f112e50dd766cdd7b718a6edd7","71c9e2d15cdc47c565a696ffbe55277570930ed7ade13b9a254059365d5bf338"],["2555c620a50f2bbeeacac66228a96941fa733aa6070855331613578ed7c12794","2b3c1bc5cda7f93242561dbf7572237ac43bf013553230633a5e18b7e71597e5"],["555ea607b0ad18afaf70d7450543d7ffb5b883a3cad3e2778826ca97bf3211a6","6df903158f51aa530d411720a760f8ad0ce9904d54955fda74a349be58eddf5f"],["4db3cfa284207a250a9c83e1fec07e804d70065da586ff2c2a7d2bcb92e6fca6","2a4fbf1c51dc0b2a7783db2be3bd35c2d6462470c88c8b73ae3ce8503fa07154"],["5174e33ffdf28a87184a4d6427d821cbaa3b88ac293a90ca7e1eeae8c5050b16","315ca6bc8e35e4a3d06f89e1db1575b16197963ee8e64746fa998ccd403561cc"]]},"doubles":{"step":4,"points":[["23a4860627e53aeeb8e22b1508249c9109578d33e7bf237459b2596d6c28f9f8","709696f2827fc3729f980f2e3aad6e78b06a11ff8e079c27d87aab37c16727eb"],["5e7e07ed4e1decbfe6e9cbc126905449d4b578fbb561576d20b8bcdd0cc2a556","0f55755c51f102796bf5ebaa81d3260e7d1b3d9ac127d9a80e142031566cf6c7"],["7d13c0248b891b47eb524f2692008e2f97b199bac426cb5902b9003a29ded6ea","59a976ab2c01a81a91f1a56c75ccc77a9e1e9e878e9fe9c3952080a6805b20d5"],["5de7faa2ee4e70132f541f79ca07cd54a39fe1347a6844d19e9d678a8411a565","2c9f23641e1c2e0aab8ea9926b432d92c0e8bc08901d6ff6df85e4cef854ec36"],["06b349eebfed4dad4a805b63a6ed2231a565cda752d9477ff427dd9a8c9ab5ed","07a09289ff3e1f9aab68aa374c48df65f550c2323607b97744dee990608b64f8"],["0af367956af630266b1cc760154256ed79da960dddca9d72a1e8cf27d8d43a77","21108d900134d3b3708dd28ace96b0b23dda9100e4b6a62a8131bd2f2ba408c5"],["1e45a60140a3b2dee9b8dc6ff307154a1b410bcd38e0e38fb10b2f6da1afbe2b","0e730da473dffd60d2f3241a85e68acb47d26e5043ad047d893f072c8dda0a76"],["4d1e116d136158c5ddabd4276832800f2c081c1072de6f2d931797a46abc0cbb","6d415be49d4e35b65cc51354b5008f8c43e84b7b5e8a4b84f44e1efb10c9b91a"],["2b6b892ae94b454b2c2d92bb947fc4d506d173d281779c2c153c001ded42d3d0","7f1cf64e0e180fc4d6e12c1b5c5285f376e979616a52c94a0dea4d48c5880cd2"],["0f6c3a96e0032a9394337a02ffb2c83ba70efb8f566feab530fc90fa3b4710e5","3d4e97e286378675038a4b58e84224ee515e1d6697ac79389f78479be167635a"],["52ee53b981dfbc41ddaa5ddc2754c4175f4811aa45f8e2b19a425657c238a83e","7eb0a1be3400dec87b388cad51613957643cdf0595b891cc6f925fb36da7f1c3"],["52a837bc7a7bc9459bcc2ecf80f74d9ed99def0342e18cfbe8e799fbc504fd52","50d6460185d8924e5485f23f36a98c86053514d163547adab6fe91478a411196"],["6b2bd5d00fab38ceca21a27d6aaec82626b14b555d859527718f8ca404eba4","727340c27a15f6ab3d80547f0827c56ab1ba33bc30d1ef3909ea9a3af10c67e5"],["71dd75fe35761c01a48597ec730bc33237902fd4ad8612cbed1031eebdf40de4","39674a4532078e34378667beae5cb55f814ead9bbaf7e01b3b69533e9f88a411"],["57426aefc21be9ccf162e23d25ac3002ba8534351e65613f870f690f2fd46cf5","6b45b002fb4e8a6f59a6ffb006ed71f75434217333b266325204c7d1ac2e1f34"],["6222bd88bf2df9d5d44b60cfb4a08a960078db7ed51a35eb3e0b6b8ff4eda202","0325bb42ea4ed025dd6bdaed261b7c4f5410b608ba902b068f1efa5782e45313"],["71ac99647b61b9eca6f0c23432a518f738aee708d5932d4ef0f172240250a226","3a96c2c028ebe5f48913be30147e41bc5e1cab9595d5404138a9aa1b5574cf25"],["1f6a1fd8cc0e05b2742ba0fc0369b5247670543637dd033e64dbce90b2f23e9f","779964401ee869a9b31c0ef874a86440ba85d25c2ce932bd31a0865869605e19"],["22e2c039067920c42980dcb3a905fc91601c2b34e819ce1532ada4a5fc39d5cc","631cf9945a09bf26d7e595b3f8e3390696870512820df63c5418577089e1a8bb"],["608de273a9f6a534219d7aaede3cf65a81e4dc03d7a2765eced1d2b7be4610f4","3b31d0113f98d81ab1312fb2837aa9c8dcc7960f84eb371358c6d841f67144fa"],["3f748617ca63ab3e44c6e34f63e7328ea56a2a146da34368a57dca181254fe02","0fed89e6420fc47b3938a2891ba9acee4cbb2899ee4e9ca15a13dc527dc1641e"],["69d98b5ecc35d56c97c0bf312955d199befe116b417d70f5f57e2dfd0af81ce5","3e26d487fbfe36ab44e0ca3b248fe94bce92a69b8154d50e2d5481f8259f4e8e"],["1e34443347f9e627b3531157faab6eaca1bc3114df4a1423cc12bf8417b5d622","295955a5ed061eca7f87b9485666ba9489ec20a9c484224dc920350bb4a6fc79"],["51f4ff8c599b1c96da82941520a9f5abf4a31eb8b84fc95056145ceb3b5775d0","35ac9588d46e41f3f6f99aee3852eeb4b12e807807d4bd1b7f8406b0d7863ac1"],["3faa2a093a19a02424f65a10955101f4dc015c43b2dfce8e001507abd741b845","7a1de10dacfda389ca663b15574bdc8ae8c5b6e7cee647e77b11ddbfc6eb8edc"],["1924416956ea2c1269062588569b18178011ea7cba1a3266284f48aa01d5a90f","0c8e28127b7dcdd206fb6fee96eb88cfc7db7319826ac8cdb8b1fb8adaf021de"],["49761c57ce3c8c4f1435d495903e2f536f3be3712e76af8d0b5a8b7d1ebc8fac","3225035e1065094ef32d7f3e7a6f8ff2748025f96e0c0b44eb35576b61e150a8"],["4339fa86a23242851a16afc3ab05b352a7b4bf53599a49dd7e29d364fc3a757b","6d07cc3462bae9160bbebb997510817040767faa9dbd13f158a5fe8a63a34b0e"],["6bda13918dcbaf8529d6326ae7a9c278b72417c2188c5ea4f062fc50639295fb","2c3fa803b162ee887d0d97a6734866f992f846625f314117075da54bb6c20a36"],["4da4821314574d4fed4dcf692c8b15b99b73f13633210333ce7871359b6e6424","314016034673d2d20529bc93a2dab6e462bcb5f66e1f4a6bf2170759a40a6e65"],["0b2cea0029ee963c0034b61bf19e384435f14554a7d297b5144838c38e375586","47ea95da28d39aaade5edb8ed941c687603cfdd1508776e96d6683199e99daea"],["4c27afff3c45f32c952d3984e14e29a098e685c9c2e723e5fc8047ae60b7e824","5f2c99e6526dc87d95f11eb626c29c3a90d0be1e51a4c49e5bbabd114bf5a66b"],["53e2a4ed1bbb48bd016c524a02f797654cfc969849f867681da94e341f377534","5a2334fdda642732a3c9520ce06581aa7f0f082882554c37b8d390a25a9bd559"],["7b8d2c823baafe0d878a55e8af1db150dec85b1424a4901f9beffd3a6196e3d6","1c45a557b3624f9b89ed15b3c3e1a065f1b453d948f7cf45d9494483f8af0c85"],["78877b5d8777410997dacaeea59400fc9db4421fac02c4282301c67d35fb7ffe","0341b46c328333e4484ce8607619014d41775c408c88856d2f9e19812d90fbf5"],["2b556bbc070b5c4bae9e575836d1d68ee9fbe800448c0d2c233f78185eed3f91","7ba01332807ebd892e00ddb368c0fa1b3f19b5b32efd90b178d984e1d7174d6f"],["0f72556998b0044799f0fd03210ded3d984e3843bbaf3c1d5d692bc94d43c4e7","16c19c5037c103d447caef4efe6bd81a490e7c668f6870f1b080863b5315df5e"],["1cd96ef237b213cd446f13b3ec40d32ecc593bc6ea71e77efc284341a5f3da1a","7a626aeb91efcb5f9777264f5e17ced8b411f68c713673ef0f184a5ccd60dbe3"],["31a75b21cb532622a7caf9e29e652ac4e47b1450edf6655acaf3797b55a7ca46","77006e7cf104982f8865081a2ff8a6911546755e31c3586353b0bd0826c5d790"],["543d84cb04fb2bf787b7aa382eaab5cd8d050ad8ee52aa8a285b945652014031","0358fdc5b63ed49e693d838f182b275846f42dd49a42ec2e6e932ba4de59ef20"],["0a2818f5f5d8937800c30ac6b847db2cdef655b864126302249144a5a15b205a","187c76a49af10851bb049ba97c0fbbb14b2621522a4e8d9670ea46e56c9a1bd6"],["7efb45d3a2851109d7a8d50ddb08fe308bbf674c019b965cdad4570a141e648a","0fe1198b11a1bf56867091c69d71f8b7792257dda321d43652e818acd0c28cda"],["472e960dd122a534f52377235350549df4a1dd7a08cfc580bff5fb4b0a70aa7b","10585d04fc529fef4c0c0776154fc7ebbaedbae8a99937e47598d0578932b7cc"],["04892cfff7f94ff7f07c1241e3ac4945bc46ea9d6a3c1c3adbce109a9afceb6a","3ae2aa25e2555135a7a3251c11a3f8eebe81758bc1c3e2cbc6e6ca461a543130"],["2401d311a3abfd2583f1c6aa519c1f18ff730a0abf730ddcc9c9739b04d8a85e","653224f3488cae1ae19a414a9932035a2bf2c46803b5532bbb645e62387ee34d"],["0ea2c846a535a115972161612a192588d92d68a3c9050eae91b2817b94e68325","3b82a8337b05f11bbac176a113be183a50a0331f3d3116f24b971b5a8b0d031b"],["0fb3f87c2c6c89c65b74299b77f3736546a8b9e41b19197476bff27354e1c128","1034d42c15a2bfe3e682fad49dbc2812caadf0c584bc30b51625b85d74e9d5f7"],["1bc7af1e38185e7c2d8d04371c7e177d7a9ddee1b81d7d26db7ad644c7dad28d","61d909d855661f2f7a5eef87795dc0491d027e12631b270fcaf2f65900314833"],["469d0960dbd0ef9c91c4597ccf7c209549b187ff63bd378b7dac577198d74a4d","0b5f21c7f86832241f2157c288bdc9394f83f8d57457f6d9f6b345e4909478cb"],["5e9ac4ab2f4a3c3526e1317f913d69e3826fe862efd0c80d9310319170c5cbeb","505f00fa8aee03ccbd2f33529ae1e4e4bcf2644fe673d0b0290ec32be5b51bab"],["11cd80e1fdcbc565efed81d17f3f54643ffeed1cff38f3825e115adbd82759f1","43f11943f7ef3fa68b980fee45e98134f1df22263b2d14419d61ffe62822dbe0"],["3328bc121616a9477165ed282053d203c24f4826076c638a2c6723d42c9bfadb","2bbf3f26c21b5cb273e5f4f0114c6718c5eb7291939b7697c74333cdfafac039"],["0ba774bb605dd804cae6887e81f6bd2c59e024fac8bf5f5c48a841a037c28398","54ba013ad2d04dcdfb5a151b7347ee9a10067ddd0a3907e9bc337a77bf911321"],["1074ff0267662dc2b4ce65aaa0229c375a3d0d843ce9349233949581c869b64c","299be0decb680ec28923da4d049770107d42c180b460da13a7b1efc7e6d5b022"],["25ed76d78c87c3bd64b4331902c5a853734283e25f19f320295667b80a340d35","179b5f92f545c7b326b3a63fb0b32a0f52b4159988436d5af50c1d0d76373947"],["75d942c04210dcde5d1bd4fabfc732d3f95568e399382c0423c83c41cb05dc3f","696cc14856cdc13c8fd7e2c5771731cbf38e3fad47a424679765c4874e35ab2d"],["5d9324f56975477d5945599eeeccec67708c996cd3f3f2818bf2591507e3502a","10985a3cfd573205281aec24e2c8b41f5cd8cdfc9d7be34675cf306bbe1b4f6a"],["7511066c0e12105a7b937c7ecef367d5afe6e621e5cabf4e490b09b7ada7ee07","604df365b8391cbca8848f88daa700b770da5bb136f70bfb0a3ea33ba386fcd5"],["2596e5b3cf5494e60d2a750d03c66abc2e0183af53620b893f9cf9fc3b76dc26","68a0a7ac9a0cc093884a6b84f45a2cde595194e0f48dbd566fa78a3174b182fe"],["28bd38d44030dd9ca028b2a2f31a795f4c7a5e85a785df7847e3d525e99d4787","552dd7405c4183733ad3c4e7ccb999b4fed81b7a4444aab499d41d6d78d5bbfc"],["59233a3346f61135f431f96cf0197e24ad38240b222c010a6ce538cf4c24347b","3cce55908611d2b93f221613f09cfc4dbcd2e2b609233eea5439ad1908a10b20"],["5830f025f1078d408948f73096af97de1e9e70b3be85890acb21132c34ff961f","67d451752c2433ffe66e47242e301e56db2b2f8203553cab9de717e25793d41e"],["6a0c8b194571e874b82d904da36d43096bbe36d512e24ff8dcb2b00b57ffd3ec","5f85adb7749cc735ec838bcccfe7d4b52902c6132998d7ac8e032cad031c42b8"],["53b3f967bff8760948dec5e9282f35d1434a5503790b9012e17faefbe7c4d699","404462283c8664a17daa5b4059dcd10e2699fd86d0140de9f3e8ad0566098ae5"]]}}');
    }, function(e, t, r) {
      "use strict";
      const n = r(1008), i = r(95), s = r(34);
      e.exports = (e2, t2 = {}) => {
        const r2 = i(e2), o = s.decode.fromReader(r2.reader, t2);
        let a = false;
        const c = {read: async (e3) => {
          const {value: t3, done: n2} = await r2.reader.next(e3);
          if (n2 && t3.length < e3)
            throw new Error("Couldn't read enough bytes");
          if (a = n2, !t3)
            throw new Error("Value is null");
          return t3;
        }, readLP: async () => {
          const {value: e3, done: t3} = await o.next();
          if (a = t3, !e3)
            throw new Error("Value is null");
          return e3;
        }, readPB: async (e3) => {
          const t3 = await c.readLP();
          if (!t3)
            throw new Error("Value is null");
          const r3 = n(t3) ? t3 : t3.slice();
          return e3.decode(r3);
        }, write: (e3) => {
          r2.writer.push(e3);
        }, writeLP: (e3) => {
          c.write(s.encode.single(e3, t2));
        }, writePB: (e3, t3) => {
          c.writeLP(t3.encode(e3));
        }, pb: (e3) => ({read: () => c.readPB(e3), write: (t3) => c.writePB(t3, e3)}), unwrap: () => (r2.rest(), r2.stream)};
        return c;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2) {
        return e2 != null && e2.constructor != null && typeof e2.constructor.isBuffer == "function" && e2.constructor.isBuffer(e2);
      };
    }, function(e, t, r) {
      "use strict";
      var n = r(1010);
      e.exports = function() {
        var e2 = n(), t2 = n();
        return [{source: e2.source, sink: t2.sink}, {source: t2.source, sink: e2.sink}];
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(190);
      e.exports = function() {
        let e2, t2;
        return {sink: async (r2) => {
          if (e2)
            throw new Error("already piped");
          e2 = n(r2), t2 && t2(e2);
        }, source: {[Symbol.asyncIterator]() {
          return this;
        }, next: () => e2 ? e2.next() : new Promise((e3) => {
          t2 = (r2) => {
            t2 = null, e3(r2.next());
          };
        })}};
      };
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.XX = void 0;
      const n = r(3), i = r(57), s = r(380);
      class o extends s.AbstractHandshake {
        initializeInitiator(e2, t2, r2, i2) {
          const s2 = this.initializeSymmetric("Noise_XX_25519_ChaChaPoly_SHA256");
          this.mixHash(s2, e2);
          return {ss: s2, s: t2, rs: r2, psk: i2, re: n.Buffer.alloc(32)};
        }
        initializeResponder(e2, t2, r2, i2) {
          const s2 = this.initializeSymmetric("Noise_XX_25519_ChaChaPoly_SHA256");
          this.mixHash(s2, e2);
          return {ss: s2, s: t2, rs: r2, psk: i2, re: n.Buffer.alloc(32)};
        }
        writeMessageA(e2, t2, r2) {
          const s2 = n.Buffer.alloc(0);
          e2.e = r2 || i.generateKeypair();
          const o3 = e2.e.publicKey;
          this.mixHash(e2.ss, o3);
          return {ne: o3, ns: s2, ciphertext: this.encryptAndHash(e2.ss, t2)};
        }
        writeMessageB(e2, t2) {
          e2.e = i.generateKeypair();
          const r2 = e2.e.publicKey;
          this.mixHash(e2.ss, r2), this.mixKey(e2.ss, this.dh(e2.e.privateKey, e2.re));
          const s2 = n.Buffer.from(e2.s.publicKey), o3 = this.encryptAndHash(e2.ss, s2);
          this.mixKey(e2.ss, this.dh(e2.s.privateKey, e2.re));
          return {ne: r2, ns: o3, ciphertext: this.encryptAndHash(e2.ss, t2)};
        }
        writeMessageC(e2, t2) {
          const r2 = n.Buffer.from(e2.s.publicKey), i2 = this.encryptAndHash(e2.ss, r2);
          this.mixKey(e2.ss, this.dh(e2.s.privateKey, e2.re));
          const s2 = this.encryptAndHash(e2.ss, t2), o3 = {ne: this.createEmptyKey(), ns: i2, ciphertext: s2}, {cs1: a, cs2: c} = this.split(e2.ss);
          return {h: e2.ss.h, messageBuffer: o3, cs1: a, cs2: c};
        }
        readMessageA(e2, t2) {
          return i.isValidPublicKey(t2.ne) && (e2.re = t2.ne), this.mixHash(e2.ss, e2.re), this.decryptAndHash(e2.ss, t2.ciphertext);
        }
        readMessageB(e2, t2) {
          if (i.isValidPublicKey(t2.ne) && (e2.re = t2.ne), this.mixHash(e2.ss, e2.re), !e2.e)
            throw new Error("Handshake state `e` param is missing.");
          this.mixKey(e2.ss, this.dh(e2.e.privateKey, e2.re));
          const {plaintext: r2, valid: n2} = this.decryptAndHash(e2.ss, t2.ns);
          n2 && r2.length === 32 && i.isValidPublicKey(r2) && (e2.rs = r2), this.mixKey(e2.ss, this.dh(e2.e.privateKey, e2.rs));
          const {plaintext: s2, valid: o3} = this.decryptAndHash(e2.ss, t2.ciphertext);
          return {plaintext: s2, valid: n2 && o3};
        }
        readMessageC(e2, t2) {
          const {plaintext: r2, valid: n2} = this.decryptAndHash(e2.ss, t2.ns);
          if (n2 && r2.length === 32 && i.isValidPublicKey(r2) && (e2.rs = r2), !e2.e)
            throw new Error("Handshake state `e` param is missing.");
          this.mixKey(e2.ss, this.dh(e2.e.privateKey, e2.rs));
          const {plaintext: s2, valid: o3} = this.decryptAndHash(e2.ss, t2.ciphertext), {cs1: a, cs2: c} = this.split(e2.ss);
          return {h: e2.ss.h, plaintext: s2, valid: n2 && o3, cs1: a, cs2: c};
        }
        initSession(e2, t2, r2) {
          const i2 = this.createEmptyKey(), s2 = n.Buffer.alloc(32);
          let o3;
          return o3 = e2 ? this.initializeInitiator(t2, r2, s2, i2) : this.initializeResponder(t2, r2, s2, i2), {hs: o3, i: e2, mc: 0};
        }
        sendMessage(e2, t2, r2) {
          let n2;
          if (e2.mc === 0)
            n2 = this.writeMessageA(e2.hs, t2, r2);
          else if (e2.mc === 1)
            n2 = this.writeMessageB(e2.hs, t2);
          else if (e2.mc === 2) {
            const {h: r3, messageBuffer: i2, cs1: s2, cs2: o3} = this.writeMessageC(e2.hs, t2);
            n2 = i2, e2.h = r3, e2.cs1 = s2, e2.cs2 = o3;
          } else {
            if (!(e2.mc > 2))
              throw new Error("Session invalid.");
            if (e2.i) {
              if (!e2.cs1)
                throw new Error("CS1 (cipher state) is not defined");
              n2 = this.writeMessageRegular(e2.cs1, t2);
            } else {
              if (!e2.cs2)
                throw new Error("CS2 (cipher state) is not defined");
              n2 = this.writeMessageRegular(e2.cs2, t2);
            }
          }
          return e2.mc++, n2;
        }
        recvMessage(e2, t2) {
          let r2 = n.Buffer.alloc(0), i2 = false;
          if (e2.mc === 0)
            ({plaintext: r2, valid: i2} = this.readMessageA(e2.hs, t2));
          else if (e2.mc === 1)
            ({plaintext: r2, valid: i2} = this.readMessageB(e2.hs, t2));
          else if (e2.mc === 2) {
            const {h: n2, plaintext: s2, valid: o3, cs1: a, cs2: c} = this.readMessageC(e2.hs, t2);
            r2 = s2, i2 = o3, e2.h = n2, e2.cs1 = a, e2.cs2 = c;
          }
          return e2.mc++, {plaintext: r2, valid: i2};
        }
      }
      t.XX = o;
    }, function(e, t, r) {
      "use strict";
      e.exports = r(1013);
    }, function(e, t, r) {
      "use strict";
      (function(e2) {
        const n = r(42);
        function i(t2, r2, i2) {
          return n(t2 && typeof t2.id == "string"), r2 == null && (r2 = e2.alloc(0)), i2 == null && (i2 = e2.alloc(t2.size, 0)), t2.mac(r2, i2);
        }
        function s(t2, r2, i2, s2) {
          if (i2 == null && (i2 = e2.alloc(0)), n(t2 && typeof t2.id == "string"), n(e2.isBuffer(r2)), n(e2.isBuffer(i2)), n(s2 >>> 0 === s2), r2.length !== t2.size)
            throw new RangeError("Invalid PRK length.");
          const o = Math.ceil(s2 / t2.size);
          if (o > 255)
            throw new RangeError("Invalid output length.");
          const a = e2.alloc(o * t2.size), c = e2.from([0]), u = t2.hmac();
          let h = e2.alloc(0), f = 0;
          for (let e3 = 0; e3 < o; e3++)
            c[0] += 1, u.init(r2), u.update(h), u.update(i2), u.update(c), h = u.final(), f += h.copy(a, f);
          return a.slice(0, s2);
        }
        t.native = 0, t.extract = i, t.expand = s, t.derive = function(e3, t2, r2, n2, o) {
          return s(e3, i(e3, t2, r2), n2, o);
        };
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const n = r(42);
        e.exports = class {
          constructor(e2, t3, r2 = [], i = []) {
            n(typeof e2 == "function"), n(t3 >>> 0 === t3), n(Array.isArray(r2)), n(Array.isArray(i)), this.hash = e2, this.size = t3, this.x = r2, this.y = i, this.inner = new e2(), this.outer = new e2();
          }
          init(e2) {
            if (n(t2.isBuffer(e2)), e2.length > this.size) {
              const t3 = new (0, this.hash)();
              t3.init(...this.x), t3.update(e2), e2 = t3.final(...this.y), n(e2.length <= this.size);
            }
            const r2 = t2.alloc(this.size);
            for (let t3 = 0; t3 < e2.length; t3++)
              r2[t3] = 54 ^ e2[t3];
            for (let t3 = e2.length; t3 < r2.length; t3++)
              r2[t3] = 54;
            this.inner.init(...this.x), this.inner.update(r2);
            for (let t3 = 0; t3 < e2.length; t3++)
              r2[t3] = 92 ^ e2[t3];
            for (let t3 = e2.length; t3 < r2.length; t3++)
              r2[t3] = 92;
            return this.outer.init(...this.x), this.outer.update(r2), this;
          }
          update(e2) {
            return this.inner.update(e2), this;
          }
          final() {
            return this.outer.update(this.inner.final(...this.y)), this.outer.final(...this.y);
          }
        };
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      var n, i, s;
      i = [r(1016)], (s = typeof (n = function(e2) {
        var t2, r2 = e2.Reader, n2 = e2.Writer, i2 = e2.util, s2 = e2.roots.default || (e2.roots.default = {});
        return s2.pb = ((t2 = {}).NoiseHandshakePayload = function() {
          function t3(e3) {
            if (e3)
              for (var t4 = Object.keys(e3), r3 = 0; r3 < t4.length; ++r3)
                e3[t4[r3]] != null && (this[t4[r3]] = e3[t4[r3]]);
          }
          return t3.prototype.identityKey = i2.newBuffer([]), t3.prototype.identitySig = i2.newBuffer([]), t3.prototype.data = i2.newBuffer([]), t3.create = function(e3) {
            return new t3(e3);
          }, t3.encode = function(e3, t4) {
            return t4 || (t4 = n2.create()), e3.identityKey != null && e3.hasOwnProperty("identityKey") && t4.uint32(10).bytes(e3.identityKey), e3.identitySig != null && e3.hasOwnProperty("identitySig") && t4.uint32(18).bytes(e3.identitySig), e3.data != null && e3.hasOwnProperty("data") && t4.uint32(26).bytes(e3.data), t4;
          }, t3.encodeDelimited = function(e3, t4) {
            return this.encode(e3, t4).ldelim();
          }, t3.decode = function(e3, t4) {
            e3 instanceof r2 || (e3 = r2.create(e3));
            for (var n3 = t4 === void 0 ? e3.len : e3.pos + t4, i3 = new s2.pb.NoiseHandshakePayload(); e3.pos < n3; ) {
              var o = e3.uint32();
              switch (o >>> 3) {
                case 1:
                  i3.identityKey = e3.bytes();
                  break;
                case 2:
                  i3.identitySig = e3.bytes();
                  break;
                case 3:
                  i3.data = e3.bytes();
                  break;
                default:
                  e3.skipType(7 & o);
              }
            }
            return i3;
          }, t3.decodeDelimited = function(e3) {
            return e3 instanceof r2 || (e3 = new r2(e3)), this.decode(e3, e3.uint32());
          }, t3.verify = function(e3) {
            return typeof e3 != "object" || e3 === null ? "object expected" : e3.identityKey != null && e3.hasOwnProperty("identityKey") && !(e3.identityKey && typeof e3.identityKey.length == "number" || i2.isString(e3.identityKey)) ? "identityKey: buffer expected" : e3.identitySig != null && e3.hasOwnProperty("identitySig") && !(e3.identitySig && typeof e3.identitySig.length == "number" || i2.isString(e3.identitySig)) ? "identitySig: buffer expected" : e3.data != null && e3.hasOwnProperty("data") && !(e3.data && typeof e3.data.length == "number" || i2.isString(e3.data)) ? "data: buffer expected" : null;
          }, t3.fromObject = function(e3) {
            if (e3 instanceof s2.pb.NoiseHandshakePayload)
              return e3;
            var t4 = new s2.pb.NoiseHandshakePayload();
            return e3.identityKey != null && (typeof e3.identityKey == "string" ? i2.base64.decode(e3.identityKey, t4.identityKey = i2.newBuffer(i2.base64.length(e3.identityKey)), 0) : e3.identityKey.length && (t4.identityKey = e3.identityKey)), e3.identitySig != null && (typeof e3.identitySig == "string" ? i2.base64.decode(e3.identitySig, t4.identitySig = i2.newBuffer(i2.base64.length(e3.identitySig)), 0) : e3.identitySig.length && (t4.identitySig = e3.identitySig)), e3.data != null && (typeof e3.data == "string" ? i2.base64.decode(e3.data, t4.data = i2.newBuffer(i2.base64.length(e3.data)), 0) : e3.data.length && (t4.data = e3.data)), t4;
          }, t3.toObject = function(e3, t4) {
            t4 || (t4 = {});
            var r3 = {};
            return t4.defaults && (t4.bytes === String ? r3.identityKey = "" : (r3.identityKey = [], t4.bytes !== Array && (r3.identityKey = i2.newBuffer(r3.identityKey))), t4.bytes === String ? r3.identitySig = "" : (r3.identitySig = [], t4.bytes !== Array && (r3.identitySig = i2.newBuffer(r3.identitySig))), t4.bytes === String ? r3.data = "" : (r3.data = [], t4.bytes !== Array && (r3.data = i2.newBuffer(r3.data)))), e3.identityKey != null && e3.hasOwnProperty("identityKey") && (r3.identityKey = t4.bytes === String ? i2.base64.encode(e3.identityKey, 0, e3.identityKey.length) : t4.bytes === Array ? Array.prototype.slice.call(e3.identityKey) : e3.identityKey), e3.identitySig != null && e3.hasOwnProperty("identitySig") && (r3.identitySig = t4.bytes === String ? i2.base64.encode(e3.identitySig, 0, e3.identitySig.length) : t4.bytes === Array ? Array.prototype.slice.call(e3.identitySig) : e3.identitySig), e3.data != null && e3.hasOwnProperty("data") && (r3.data = t4.bytes === String ? i2.base64.encode(e3.data, 0, e3.data.length) : t4.bytes === Array ? Array.prototype.slice.call(e3.data) : e3.data), r3;
          }, t3.prototype.toJSON = function() {
            return this.constructor.toObject(this, e2.util.toJSONOptions);
          }, t3;
        }(), t2), s2;
      }) == "function" ? n.apply(t, i) : n) === void 0 || (e.exports = s);
    }, function(e, t, r) {
      "use strict";
      e.exports = r(1017);
    }, function(e, t, r) {
      "use strict";
      var n = t;
      function i() {
        n.util._configure(), n.Writer._configure(n.BufferWriter), n.Reader._configure(n.BufferReader);
      }
      n.build = "minimal", n.Writer = r(378), n.BufferWriter = r(1026), n.Reader = r(379), n.BufferReader = r(1027), n.util = r(58), n.rpc = r(1028), n.roots = r(1030), n.configure = i, i();
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2) {
        var r2 = new Array(arguments.length - 1), n = 0, i = 2, s = true;
        for (; i < arguments.length; )
          r2[n++] = arguments[i++];
        return new Promise(function(i2, o) {
          r2[n] = function(e3) {
            if (s)
              if (s = false, e3)
                o(e3);
              else {
                for (var t3 = new Array(arguments.length - 1), r3 = 0; r3 < t3.length; )
                  t3[r3++] = arguments[r3];
                i2.apply(null, t3);
              }
          };
          try {
            e2.apply(t2 || null, r2);
          } catch (a) {
            s && (s = false, o(a));
          }
        });
      };
    }, function(e, t, r) {
      "use strict";
      var n = t;
      n.length = function(e2) {
        var t2 = e2.length;
        if (!t2)
          return 0;
        for (var r2 = 0; --t2 % 4 > 1 && e2.charAt(t2) === "="; )
          ++r2;
        return Math.ceil(3 * e2.length) / 4 - r2;
      };
      for (var i = new Array(64), s = new Array(123), o = 0; o < 64; )
        s[i[o] = o < 26 ? o + 65 : o < 52 ? o + 71 : o < 62 ? o - 4 : o - 59 | 43] = o++;
      n.encode = function(e2, t2, r2) {
        for (var n2, s2 = null, o2 = [], a = 0, c = 0; t2 < r2; ) {
          var u = e2[t2++];
          switch (c) {
            case 0:
              o2[a++] = i[u >> 2], n2 = (3 & u) << 4, c = 1;
              break;
            case 1:
              o2[a++] = i[n2 | u >> 4], n2 = (15 & u) << 2, c = 2;
              break;
            case 2:
              o2[a++] = i[n2 | u >> 6], o2[a++] = i[63 & u], c = 0;
          }
          a > 8191 && ((s2 || (s2 = [])).push(String.fromCharCode.apply(String, o2)), a = 0);
        }
        return c && (o2[a++] = i[n2], o2[a++] = 61, c === 1 && (o2[a++] = 61)), s2 ? (a && s2.push(String.fromCharCode.apply(String, o2.slice(0, a))), s2.join("")) : String.fromCharCode.apply(String, o2.slice(0, a));
      };
      n.decode = function(e2, t2, r2) {
        for (var n2, i2 = r2, o2 = 0, a = 0; a < e2.length; ) {
          var c = e2.charCodeAt(a++);
          if (c === 61 && o2 > 1)
            break;
          if ((c = s[c]) === void 0)
            throw Error("invalid encoding");
          switch (o2) {
            case 0:
              n2 = c, o2 = 1;
              break;
            case 1:
              t2[r2++] = n2 << 2 | (48 & c) >> 4, n2 = c, o2 = 2;
              break;
            case 2:
              t2[r2++] = (15 & n2) << 4 | (60 & c) >> 2, n2 = c, o2 = 3;
              break;
            case 3:
              t2[r2++] = (3 & n2) << 6 | c, o2 = 0;
          }
        }
        if (o2 === 1)
          throw Error("invalid encoding");
        return r2 - i2;
      }, n.test = function(e2) {
        return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e2);
      };
    }, function(e, t, r) {
      "use strict";
      function n() {
        this._listeners = {};
      }
      e.exports = n, n.prototype.on = function(e2, t2, r2) {
        return (this._listeners[e2] || (this._listeners[e2] = [])).push({fn: t2, ctx: r2 || this}), this;
      }, n.prototype.off = function(e2, t2) {
        if (e2 === void 0)
          this._listeners = {};
        else if (t2 === void 0)
          this._listeners[e2] = [];
        else
          for (var r2 = this._listeners[e2], n2 = 0; n2 < r2.length; )
            r2[n2].fn === t2 ? r2.splice(n2, 1) : ++n2;
        return this;
      }, n.prototype.emit = function(e2) {
        var t2 = this._listeners[e2];
        if (t2) {
          for (var r2 = [], n2 = 1; n2 < arguments.length; )
            r2.push(arguments[n2++]);
          for (n2 = 0; n2 < t2.length; )
            t2[n2].fn.apply(t2[n2++].ctx, r2);
        }
        return this;
      };
    }, function(e, t, r) {
      "use strict";
      function n(e2) {
        return typeof Float32Array != "undefined" ? function() {
          var t2 = new Float32Array([-0]), r2 = new Uint8Array(t2.buffer), n2 = r2[3] === 128;
          function i2(e3, n3, i3) {
            t2[0] = e3, n3[i3] = r2[0], n3[i3 + 1] = r2[1], n3[i3 + 2] = r2[2], n3[i3 + 3] = r2[3];
          }
          function s2(e3, n3, i3) {
            t2[0] = e3, n3[i3] = r2[3], n3[i3 + 1] = r2[2], n3[i3 + 2] = r2[1], n3[i3 + 3] = r2[0];
          }
          function o2(e3, n3) {
            return r2[0] = e3[n3], r2[1] = e3[n3 + 1], r2[2] = e3[n3 + 2], r2[3] = e3[n3 + 3], t2[0];
          }
          function a2(e3, n3) {
            return r2[3] = e3[n3], r2[2] = e3[n3 + 1], r2[1] = e3[n3 + 2], r2[0] = e3[n3 + 3], t2[0];
          }
          e2.writeFloatLE = n2 ? i2 : s2, e2.writeFloatBE = n2 ? s2 : i2, e2.readFloatLE = n2 ? o2 : a2, e2.readFloatBE = n2 ? a2 : o2;
        }() : function() {
          function t2(e3, t3, r3, n2) {
            var i2 = t3 < 0 ? 1 : 0;
            if (i2 && (t3 = -t3), t3 === 0)
              e3(1 / t3 > 0 ? 0 : 2147483648, r3, n2);
            else if (isNaN(t3))
              e3(2143289344, r3, n2);
            else if (t3 > 34028234663852886e22)
              e3((i2 << 31 | 2139095040) >>> 0, r3, n2);
            else if (t3 < 11754943508222875e-54)
              e3((i2 << 31 | Math.round(t3 / 1401298464324817e-60)) >>> 0, r3, n2);
            else {
              var s2 = Math.floor(Math.log(t3) / Math.LN2);
              e3((i2 << 31 | s2 + 127 << 23 | 8388607 & Math.round(t3 * Math.pow(2, -s2) * 8388608)) >>> 0, r3, n2);
            }
          }
          function r2(e3, t3, r3) {
            var n2 = e3(t3, r3), i2 = 2 * (n2 >> 31) + 1, s2 = n2 >>> 23 & 255, o2 = 8388607 & n2;
            return s2 === 255 ? o2 ? NaN : i2 * (1 / 0) : s2 === 0 ? 1401298464324817e-60 * i2 * o2 : i2 * Math.pow(2, s2 - 150) * (o2 + 8388608);
          }
          e2.writeFloatLE = t2.bind(null, i), e2.writeFloatBE = t2.bind(null, s), e2.readFloatLE = r2.bind(null, o), e2.readFloatBE = r2.bind(null, a);
        }(), typeof Float64Array != "undefined" ? function() {
          var t2 = new Float64Array([-0]), r2 = new Uint8Array(t2.buffer), n2 = r2[7] === 128;
          function i2(e3, n3, i3) {
            t2[0] = e3, n3[i3] = r2[0], n3[i3 + 1] = r2[1], n3[i3 + 2] = r2[2], n3[i3 + 3] = r2[3], n3[i3 + 4] = r2[4], n3[i3 + 5] = r2[5], n3[i3 + 6] = r2[6], n3[i3 + 7] = r2[7];
          }
          function s2(e3, n3, i3) {
            t2[0] = e3, n3[i3] = r2[7], n3[i3 + 1] = r2[6], n3[i3 + 2] = r2[5], n3[i3 + 3] = r2[4], n3[i3 + 4] = r2[3], n3[i3 + 5] = r2[2], n3[i3 + 6] = r2[1], n3[i3 + 7] = r2[0];
          }
          function o2(e3, n3) {
            return r2[0] = e3[n3], r2[1] = e3[n3 + 1], r2[2] = e3[n3 + 2], r2[3] = e3[n3 + 3], r2[4] = e3[n3 + 4], r2[5] = e3[n3 + 5], r2[6] = e3[n3 + 6], r2[7] = e3[n3 + 7], t2[0];
          }
          function a2(e3, n3) {
            return r2[7] = e3[n3], r2[6] = e3[n3 + 1], r2[5] = e3[n3 + 2], r2[4] = e3[n3 + 3], r2[3] = e3[n3 + 4], r2[2] = e3[n3 + 5], r2[1] = e3[n3 + 6], r2[0] = e3[n3 + 7], t2[0];
          }
          e2.writeDoubleLE = n2 ? i2 : s2, e2.writeDoubleBE = n2 ? s2 : i2, e2.readDoubleLE = n2 ? o2 : a2, e2.readDoubleBE = n2 ? a2 : o2;
        }() : function() {
          function t2(e3, t3, r3, n2, i2, s2) {
            var o2 = n2 < 0 ? 1 : 0;
            if (o2 && (n2 = -n2), n2 === 0)
              e3(0, i2, s2 + t3), e3(1 / n2 > 0 ? 0 : 2147483648, i2, s2 + r3);
            else if (isNaN(n2))
              e3(0, i2, s2 + t3), e3(2146959360, i2, s2 + r3);
            else if (n2 > 17976931348623157e292)
              e3(0, i2, s2 + t3), e3((o2 << 31 | 2146435072) >>> 0, i2, s2 + r3);
            else {
              var a2;
              if (n2 < 22250738585072014e-324)
                e3((a2 = n2 / 5e-324) >>> 0, i2, s2 + t3), e3((o2 << 31 | a2 / 4294967296) >>> 0, i2, s2 + r3);
              else {
                var c = Math.floor(Math.log(n2) / Math.LN2);
                c === 1024 && (c = 1023), e3(4503599627370496 * (a2 = n2 * Math.pow(2, -c)) >>> 0, i2, s2 + t3), e3((o2 << 31 | c + 1023 << 20 | 1048576 * a2 & 1048575) >>> 0, i2, s2 + r3);
              }
            }
          }
          function r2(e3, t3, r3, n2, i2) {
            var s2 = e3(n2, i2 + t3), o2 = e3(n2, i2 + r3), a2 = 2 * (o2 >> 31) + 1, c = o2 >>> 20 & 2047, u = 4294967296 * (1048575 & o2) + s2;
            return c === 2047 ? u ? NaN : a2 * (1 / 0) : c === 0 ? 5e-324 * a2 * u : a2 * Math.pow(2, c - 1075) * (u + 4503599627370496);
          }
          e2.writeDoubleLE = t2.bind(null, i, 0, 4), e2.writeDoubleBE = t2.bind(null, s, 4, 0), e2.readDoubleLE = r2.bind(null, o, 0, 4), e2.readDoubleBE = r2.bind(null, a, 4, 0);
        }(), e2;
      }
      function i(e2, t2, r2) {
        t2[r2] = 255 & e2, t2[r2 + 1] = e2 >>> 8 & 255, t2[r2 + 2] = e2 >>> 16 & 255, t2[r2 + 3] = e2 >>> 24;
      }
      function s(e2, t2, r2) {
        t2[r2] = e2 >>> 24, t2[r2 + 1] = e2 >>> 16 & 255, t2[r2 + 2] = e2 >>> 8 & 255, t2[r2 + 3] = 255 & e2;
      }
      function o(e2, t2) {
        return (e2[t2] | e2[t2 + 1] << 8 | e2[t2 + 2] << 16 | e2[t2 + 3] << 24) >>> 0;
      }
      function a(e2, t2) {
        return (e2[t2] << 24 | e2[t2 + 1] << 16 | e2[t2 + 2] << 8 | e2[t2 + 3]) >>> 0;
      }
      e.exports = n(n);
    }, function(module, exports, __webpack_require__) {
      "use strict";
      function inquire(moduleName) {
        try {
          var mod = eval("quire".replace(/^/, "re"))(moduleName);
          if (mod && (mod.length || Object.keys(mod).length))
            return mod;
        } catch (e) {
        }
        return null;
      }
      module.exports = inquire;
    }, function(e, t, r) {
      "use strict";
      var n = t;
      n.length = function(e2) {
        for (var t2 = 0, r2 = 0, n2 = 0; n2 < e2.length; ++n2)
          (r2 = e2.charCodeAt(n2)) < 128 ? t2 += 1 : r2 < 2048 ? t2 += 2 : (64512 & r2) == 55296 && (64512 & e2.charCodeAt(n2 + 1)) == 56320 ? (++n2, t2 += 4) : t2 += 3;
        return t2;
      }, n.read = function(e2, t2, r2) {
        if (r2 - t2 < 1)
          return "";
        for (var n2, i = null, s = [], o = 0; t2 < r2; )
          (n2 = e2[t2++]) < 128 ? s[o++] = n2 : n2 > 191 && n2 < 224 ? s[o++] = (31 & n2) << 6 | 63 & e2[t2++] : n2 > 239 && n2 < 365 ? (n2 = ((7 & n2) << 18 | (63 & e2[t2++]) << 12 | (63 & e2[t2++]) << 6 | 63 & e2[t2++]) - 65536, s[o++] = 55296 + (n2 >> 10), s[o++] = 56320 + (1023 & n2)) : s[o++] = (15 & n2) << 12 | (63 & e2[t2++]) << 6 | 63 & e2[t2++], o > 8191 && ((i || (i = [])).push(String.fromCharCode.apply(String, s)), o = 0);
        return i ? (o && i.push(String.fromCharCode.apply(String, s.slice(0, o))), i.join("")) : String.fromCharCode.apply(String, s.slice(0, o));
      }, n.write = function(e2, t2, r2) {
        for (var n2, i, s = r2, o = 0; o < e2.length; ++o)
          (n2 = e2.charCodeAt(o)) < 128 ? t2[r2++] = n2 : n2 < 2048 ? (t2[r2++] = n2 >> 6 | 192, t2[r2++] = 63 & n2 | 128) : (64512 & n2) == 55296 && (64512 & (i = e2.charCodeAt(o + 1))) == 56320 ? (n2 = 65536 + ((1023 & n2) << 10) + (1023 & i), ++o, t2[r2++] = n2 >> 18 | 240, t2[r2++] = n2 >> 12 & 63 | 128, t2[r2++] = n2 >> 6 & 63 | 128, t2[r2++] = 63 & n2 | 128) : (t2[r2++] = n2 >> 12 | 224, t2[r2++] = n2 >> 6 & 63 | 128, t2[r2++] = 63 & n2 | 128);
        return r2 - s;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2, r2) {
        var n = r2 || 8192, i = n >>> 1, s = null, o = n;
        return function(r3) {
          if (r3 < 1 || r3 > i)
            return e2(r3);
          o + r3 > n && (s = e2(n), o = 0);
          var a = t2.call(s, o, o += r3);
          return 7 & o && (o = 1 + (7 | o)), a;
        };
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = i;
      var n = r(58);
      function i(e2, t2) {
        this.lo = e2 >>> 0, this.hi = t2 >>> 0;
      }
      var s = i.zero = new i(0, 0);
      s.toNumber = function() {
        return 0;
      }, s.zzEncode = s.zzDecode = function() {
        return this;
      }, s.length = function() {
        return 1;
      };
      var o = i.zeroHash = "\0\0\0\0\0\0\0\0";
      i.fromNumber = function(e2) {
        if (e2 === 0)
          return s;
        var t2 = e2 < 0;
        t2 && (e2 = -e2);
        var r2 = e2 >>> 0, n2 = (e2 - r2) / 4294967296 >>> 0;
        return t2 && (n2 = ~n2 >>> 0, r2 = ~r2 >>> 0, ++r2 > 4294967295 && (r2 = 0, ++n2 > 4294967295 && (n2 = 0))), new i(r2, n2);
      }, i.from = function(e2) {
        if (typeof e2 == "number")
          return i.fromNumber(e2);
        if (n.isString(e2)) {
          if (!n.Long)
            return i.fromNumber(parseInt(e2, 10));
          e2 = n.Long.fromString(e2);
        }
        return e2.low || e2.high ? new i(e2.low >>> 0, e2.high >>> 0) : s;
      }, i.prototype.toNumber = function(e2) {
        if (!e2 && this.hi >>> 31) {
          var t2 = 1 + ~this.lo >>> 0, r2 = ~this.hi >>> 0;
          return t2 || (r2 = r2 + 1 >>> 0), -(t2 + 4294967296 * r2);
        }
        return this.lo + 4294967296 * this.hi;
      }, i.prototype.toLong = function(e2) {
        return n.Long ? new n.Long(0 | this.lo, 0 | this.hi, Boolean(e2)) : {low: 0 | this.lo, high: 0 | this.hi, unsigned: Boolean(e2)};
      };
      var a = String.prototype.charCodeAt;
      i.fromHash = function(e2) {
        return e2 === o ? s : new i((a.call(e2, 0) | a.call(e2, 1) << 8 | a.call(e2, 2) << 16 | a.call(e2, 3) << 24) >>> 0, (a.call(e2, 4) | a.call(e2, 5) << 8 | a.call(e2, 6) << 16 | a.call(e2, 7) << 24) >>> 0);
      }, i.prototype.toHash = function() {
        return String.fromCharCode(255 & this.lo, this.lo >>> 8 & 255, this.lo >>> 16 & 255, this.lo >>> 24, 255 & this.hi, this.hi >>> 8 & 255, this.hi >>> 16 & 255, this.hi >>> 24);
      }, i.prototype.zzEncode = function() {
        var e2 = this.hi >> 31;
        return this.hi = ((this.hi << 1 | this.lo >>> 31) ^ e2) >>> 0, this.lo = (this.lo << 1 ^ e2) >>> 0, this;
      }, i.prototype.zzDecode = function() {
        var e2 = -(1 & this.lo);
        return this.lo = ((this.lo >>> 1 | this.hi << 31) ^ e2) >>> 0, this.hi = (this.hi >>> 1 ^ e2) >>> 0, this;
      }, i.prototype.length = function() {
        var e2 = this.lo, t2 = (this.lo >>> 28 | this.hi << 4) >>> 0, r2 = this.hi >>> 24;
        return r2 === 0 ? t2 === 0 ? e2 < 16384 ? e2 < 128 ? 1 : 2 : e2 < 2097152 ? 3 : 4 : t2 < 16384 ? t2 < 128 ? 5 : 6 : t2 < 2097152 ? 7 : 8 : r2 < 128 ? 9 : 10;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = s;
      var n = r(378);
      (s.prototype = Object.create(n.prototype)).constructor = s;
      var i = r(58);
      function s() {
        n.call(this);
      }
      function o(e2, t2, r2) {
        e2.length < 40 ? i.utf8.write(e2, t2, r2) : t2.utf8Write ? t2.utf8Write(e2, r2) : t2.write(e2, r2);
      }
      s._configure = function() {
        s.alloc = i._Buffer_allocUnsafe, s.writeBytesBuffer = i.Buffer && i.Buffer.prototype instanceof Uint8Array && i.Buffer.prototype.set.name === "set" ? function(e2, t2, r2) {
          t2.set(e2, r2);
        } : function(e2, t2, r2) {
          if (e2.copy)
            e2.copy(t2, r2, 0, e2.length);
          else
            for (var n2 = 0; n2 < e2.length; )
              t2[r2++] = e2[n2++];
        };
      }, s.prototype.bytes = function(e2) {
        i.isString(e2) && (e2 = i._Buffer_from(e2, "base64"));
        var t2 = e2.length >>> 0;
        return this.uint32(t2), t2 && this._push(s.writeBytesBuffer, t2, e2), this;
      }, s.prototype.string = function(e2) {
        var t2 = i.Buffer.byteLength(e2);
        return this.uint32(t2), t2 && this._push(o, t2, e2), this;
      }, s._configure();
    }, function(e, t, r) {
      "use strict";
      e.exports = s;
      var n = r(379);
      (s.prototype = Object.create(n.prototype)).constructor = s;
      var i = r(58);
      function s(e2) {
        n.call(this, e2);
      }
      s._configure = function() {
        i.Buffer && (s.prototype._slice = i.Buffer.prototype.slice);
      }, s.prototype.string = function() {
        var e2 = this.uint32();
        return this.buf.utf8Slice ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + e2, this.len)) : this.buf.toString("utf-8", this.pos, this.pos = Math.min(this.pos + e2, this.len));
      }, s._configure();
    }, function(e, t, r) {
      "use strict";
      t.Service = r(1029);
    }, function(e, t, r) {
      "use strict";
      e.exports = i;
      var n = r(58);
      function i(e2, t2, r2) {
        if (typeof e2 != "function")
          throw TypeError("rpcImpl must be a function");
        n.EventEmitter.call(this), this.rpcImpl = e2, this.requestDelimited = Boolean(t2), this.responseDelimited = Boolean(r2);
      }
      (i.prototype = Object.create(n.EventEmitter.prototype)).constructor = i, i.prototype.rpcCall = function e2(t2, r2, i2, s, o) {
        if (!s)
          throw TypeError("request must be specified");
        var a = this;
        if (!o)
          return n.asPromise(e2, a, t2, r2, i2, s);
        if (a.rpcImpl)
          try {
            return a.rpcImpl(t2, r2[a.requestDelimited ? "encodeDelimited" : "encode"](s).finish(), function(e3, r3) {
              if (e3)
                return a.emit("error", e3, t2), o(e3);
              if (r3 !== null) {
                if (!(r3 instanceof i2))
                  try {
                    r3 = i2[a.responseDelimited ? "decodeDelimited" : "decode"](r3);
                  } catch (e4) {
                    return a.emit("error", e4, t2), o(e4);
                  }
                return a.emit("data", r3, t2), o(null, r3);
              }
              a.end(true);
            });
          } catch (c) {
            return a.emit("error", c, t2), void setTimeout(function() {
              o(c);
            }, 0);
          }
        else
          setTimeout(function() {
            o(Error("already ended"));
          }, 0);
      }, i.prototype.end = function(e2) {
        return this.rpcImpl && (e2 || this.rpcImpl(null, null, null), this.rpcImpl = null, this.emit("end").off()), this;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = {};
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const n = r(42), i = r(1032), s = r(1033), o = t2.alloc(16, 0);
        class a {
          constructor() {
            this.chacha = new i(), this.poly = new s(), this.key = t2.alloc(64), this.mode = -1, this.aadLen = 0, this.cipherLen = 0;
          }
          init(e2, r2) {
            return n(t2.isBuffer(e2)), n(t2.isBuffer(r2)), this.key.fill(0), this.chacha.init(e2, r2, 0), this.chacha.encrypt(this.key), this.poly.init(this.key), this.mode = 0, this.aadLen = 0, this.cipherLen = 0, this;
          }
          aad(e2) {
            if (this.mode === -1)
              throw new Error("Context is not initialized.");
            if (this.mode !== 0)
              throw new Error("Invalid state for aad.");
            return this.poly.update(e2), this.aadLen += e2.length, this;
          }
          encrypt(e2) {
            if (this.mode === -1)
              throw new Error("Context is not initialized.");
            if (this.mode !== 0 && this.mode !== 1)
              throw new Error("Invalid state for encrypt.");
            return this.mode === 0 && (this._pad16(this.aadLen), this.mode = 1), this.chacha.encrypt(e2), this.poly.update(e2), this.cipherLen += e2.length, e2;
          }
          decrypt(e2) {
            if (n(t2.isBuffer(e2)), this.mode === -1)
              throw new Error("Context is not initialized.");
            if (this.mode !== 0 && this.mode !== 2)
              throw new Error("Invalid state for decrypt.");
            return this.mode === 0 && (this._pad16(this.aadLen), this.mode = 2), this.cipherLen += e2.length, this.poly.update(e2), this.chacha.encrypt(e2), e2;
          }
          auth(e2) {
            if (n(t2.isBuffer(e2)), this.mode === -1)
              throw new Error("Context is not initialized.");
            if (this.mode !== 0 && this.mode !== 3)
              throw new Error("Invalid state for auth.");
            return this.mode === 0 && (this._pad16(this.aadLen), this.mode = 3), this.cipherLen += e2.length, this.poly.update(e2), e2;
          }
          final() {
            if (this.mode === -1)
              throw new Error("Context is not initialized.");
            const e2 = t2.alloc(16);
            u(e2, this.aadLen, 0), u(e2, this.cipherLen, 8), this.mode === 0 && this._pad16(this.aadLen), this._pad16(this.cipherLen), this.poly.update(e2);
            const r2 = this.poly.final();
            return this.destroy(), r2;
          }
          destroy() {
            this.chacha.destroy(), this.poly.destroy();
            for (let e2 = 0; e2 < 64; e2++)
              this.key[e2] = 0;
            return this.mode = -1, this.aadLen = 0, this.cipherLen = 0, this;
          }
          verify(e2) {
            n(t2.isBuffer(e2)), n(e2.length === 16);
            const r2 = this.final();
            let i2 = 0;
            for (let t3 = 0; t3 < 16; t3++)
              i2 |= r2[t3] ^ e2[t3];
            return i2 - 1 >>> 31 != 0;
          }
          _pad16(e2) {
            const t3 = 15 & e2;
            t3 > 0 && this.poly.update(o.slice(0, 16 - t3));
          }
          static encrypt(e2, t3, r2, n2) {
            const i2 = new a();
            return i2.init(e2, t3), n2 && i2.aad(n2), i2.encrypt(r2), i2.final();
          }
          static decrypt(e2, t3, r2, n2, i2) {
            const s2 = new a();
            return s2.init(e2, t3), i2 && s2.aad(i2), s2.decrypt(r2), s2.verify(n2);
          }
          static auth(e2, t3, r2, n2, i2) {
            const s2 = new a();
            return s2.init(e2, t3), i2 && s2.aad(i2), s2.auth(r2), s2.verify(n2);
          }
        }
        function c(e2, t3, r2) {
          return e2[r2++] = t3, t3 >>>= 8, e2[r2++] = t3, t3 >>>= 8, e2[r2++] = t3, t3 >>>= 8, e2[r2++] = t3, r2;
        }
        function u(e2, t3, r2) {
          const n2 = t3 * (1 / 4294967296) >>> 0;
          return c(e2, t3 >>> 0, r2 + 0), c(e2, n2, r2 + 4), r2 + 8;
        }
        a.native = i.native, e.exports = a;
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const n = r(42), i = new Int8Array(new Int16Array([1]).buffer)[0] === 0;
        class s {
          constructor() {
            this.state = new Uint32Array(16), this.stream = new Uint32Array(16), this.bytes = new Uint8Array(this.stream.buffer), this.pos = -1, i && (this.bytes = t2.alloc(64));
          }
          init(e2, r2, i2) {
            if (i2 == null && (i2 = 0), n(t2.isBuffer(e2)), n(t2.isBuffer(r2)), n(Number.isSafeInteger(i2)), e2.length !== 16 && e2.length !== 32)
              throw new RangeError("Invalid key size.");
            if (r2.length >= 24 && (e2 = s.derive(e2, r2.slice(0, 16)), r2 = r2.slice(16)), this.state[0] = 1634760805, this.state[1] = e2.length < 32 ? 824206446 : 857760878, this.state[2] = e2.length < 32 ? 2036477238 : 2036477234, this.state[3] = 1797285236, this.state[4] = c(e2, 0), this.state[5] = c(e2, 4), this.state[6] = c(e2, 8), this.state[7] = c(e2, 12), this.state[8] = c(e2, 16 % e2.length), this.state[9] = c(e2, 20 % e2.length), this.state[10] = c(e2, 24 % e2.length), this.state[11] = c(e2, 28 % e2.length), this.state[12] = i2 >>> 0, r2.length === 8)
              this.state[13] = i2 / 4294967296 >>> 0, this.state[14] = c(r2, 0), this.state[15] = c(r2, 4);
            else if (r2.length === 12)
              this.state[13] = c(r2, 0), this.state[14] = c(r2, 4), this.state[15] = c(r2, 8);
            else {
              if (r2.length !== 16)
                throw new RangeError("Invalid nonce size.");
              this.state[12] = c(r2, 0), this.state[13] = c(r2, 4), this.state[14] = c(r2, 8), this.state[15] = c(r2, 12);
            }
            return this.pos = 0, this;
          }
          encrypt(e2) {
            if (n(t2.isBuffer(e2)), this.pos === -1)
              throw new Error("Context is not initialized.");
            for (let t3 = 0; t3 < e2.length; t3++)
              (63 & this.pos) == 0 && (this._block(), this.pos = 0), e2[t3] ^= this.bytes[this.pos++];
            return e2;
          }
          _block() {
            for (let e2 = 0; e2 < 16; e2++)
              this.stream[e2] = this.state[e2];
            for (let e2 = 0; e2 < 10; e2++)
              o(this.stream, 0, 4, 8, 12), o(this.stream, 1, 5, 9, 13), o(this.stream, 2, 6, 10, 14), o(this.stream, 3, 7, 11, 15), o(this.stream, 0, 5, 10, 15), o(this.stream, 1, 6, 11, 12), o(this.stream, 2, 7, 8, 13), o(this.stream, 3, 4, 9, 14);
            for (let e2 = 0; e2 < 16; e2++)
              this.stream[e2] += this.state[e2];
            if (i)
              for (let e2 = 0; e2 < 16; e2++)
                u(this.bytes, this.stream[e2], 4 * e2);
            this.state[12] += 1, this.state[12] === 0 && (this.state[13] += 1);
          }
          destroy() {
            for (let e2 = 0; e2 < 16; e2++)
              this.state[e2] = 0, this.stream[e2] = 0;
            if (i)
              for (let e2 = 0; e2 < 64; e2++)
                this.bytes[e2] = 0;
            return this.pos = -1, this;
          }
          static derive(e2, r2) {
            if (n(t2.isBuffer(e2)), n(t2.isBuffer(r2)), e2.length !== 16 && e2.length !== 32)
              throw new RangeError("Invalid key size.");
            if (r2.length !== 16)
              throw new RangeError("Invalid nonce size.");
            const i2 = new Uint32Array(16);
            i2[0] = 1634760805, i2[1] = e2.length < 32 ? 824206446 : 857760878, i2[2] = e2.length < 32 ? 2036477238 : 2036477234, i2[3] = 1797285236, i2[4] = c(e2, 0), i2[5] = c(e2, 4), i2[6] = c(e2, 8), i2[7] = c(e2, 12), i2[8] = c(e2, 16 % e2.length), i2[9] = c(e2, 20 % e2.length), i2[10] = c(e2, 24 % e2.length), i2[11] = c(e2, 28 % e2.length), i2[12] = c(r2, 0), i2[13] = c(r2, 4), i2[14] = c(r2, 8), i2[15] = c(r2, 12);
            for (let t3 = 0; t3 < 10; t3++)
              o(i2, 0, 4, 8, 12), o(i2, 1, 5, 9, 13), o(i2, 2, 6, 10, 14), o(i2, 3, 7, 11, 15), o(i2, 0, 5, 10, 15), o(i2, 1, 6, 11, 12), o(i2, 2, 7, 8, 13), o(i2, 3, 4, 9, 14);
            const s2 = t2.alloc(32);
            return u(s2, i2[0], 0), u(s2, i2[1], 4), u(s2, i2[2], 8), u(s2, i2[3], 12), u(s2, i2[12], 16), u(s2, i2[13], 20), u(s2, i2[14], 24), u(s2, i2[15], 28), s2;
          }
        }
        function o(e2, t3, r2, n2, i2) {
          e2[t3] += e2[r2], e2[i2] = a(e2[i2] ^ e2[t3], 16), e2[n2] += e2[i2], e2[r2] = a(e2[r2] ^ e2[n2], 12), e2[t3] += e2[r2], e2[i2] = a(e2[i2] ^ e2[t3], 8), e2[n2] += e2[i2], e2[r2] = a(e2[r2] ^ e2[n2], 7);
        }
        function a(e2, t3) {
          return e2 << t3 | e2 >>> 32 - t3;
        }
        function c(e2, t3) {
          return e2[t3++] + 256 * e2[t3++] + 65536 * e2[t3++] + 16777216 * e2[t3];
        }
        function u(e2, t3, r2) {
          return e2[r2++] = t3, t3 >>>= 8, e2[r2++] = t3, t3 >>>= 8, e2[r2++] = t3, t3 >>>= 8, e2[r2++] = t3, r2;
        }
        s.native = 0, e.exports = s;
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      (function(t2) {
        const n = r(42);
        class i {
          constructor() {
            this.r = new Uint16Array(10), this.h = new Uint16Array(10), this.pad = new Uint16Array(8), this.buffer = t2.alloc(16), this.fin = -1, this.leftover = 0;
          }
          init(e2) {
            n(t2.isBuffer(e2) && e2.length >= 32);
            const r2 = s(e2, 0), i3 = s(e2, 2), o2 = s(e2, 4), a = s(e2, 6), c = s(e2, 8), u = s(e2, 10), h = s(e2, 12), f = s(e2, 14);
            this.r[0] = 8191 & r2, this.r[1] = 8191 & (r2 >>> 13 | i3 << 3), this.r[2] = 7939 & (i3 >>> 10 | o2 << 6), this.r[3] = 8191 & (o2 >>> 7 | a << 9), this.r[4] = 255 & (a >>> 4 | c << 12), this.r[5] = c >>> 1 & 8190, this.r[6] = 8191 & (c >>> 14 | u << 2), this.r[7] = 8065 & (u >>> 11 | h << 5), this.r[8] = 8191 & (h >>> 8 | f << 8), this.r[9] = f >>> 5 & 127;
            for (let t3 = 0; t3 < 10; t3++)
              this.h[t3] = 0;
            for (let t3 = 0; t3 < 8; t3++)
              this.pad[t3] = s(e2, 16 + 2 * t3);
            return this.fin = 0, this.leftover = 0, this;
          }
          _blocks(e2, t3, r2) {
            const n2 = this.fin ? 0 : 2048, i3 = new Uint32Array(10);
            for (; t3 >= 16; ) {
              const o2 = s(e2, r2 + 0), a = s(e2, r2 + 2), c = s(e2, r2 + 4), u = s(e2, r2 + 6), h = s(e2, r2 + 8), f = s(e2, r2 + 10), d = s(e2, r2 + 12), l = s(e2, r2 + 14);
              this.h[0] += 8191 & o2, this.h[1] += 8191 & (o2 >>> 13 | a << 3), this.h[2] += 8191 & (a >>> 10 | c << 6), this.h[3] += 8191 & (c >>> 7 | u << 9), this.h[4] += 8191 & (u >>> 4 | h << 12), this.h[5] += h >>> 1 & 8191, this.h[6] += 8191 & (h >>> 14 | f << 2), this.h[7] += 8191 & (f >>> 11 | d << 5), this.h[8] += 8191 & (d >>> 8 | l << 8), this.h[9] += l >>> 5 | n2;
              let p = 0;
              for (let e3 = 0; e3 < 10; e3++) {
                i3[e3] = p;
                for (let t4 = 0; t4 < 10; t4++) {
                  let r3 = this.h[t4];
                  r3 *= t4 <= e3 ? this.r[e3 - t4] : 5 * this.r[e3 + 10 - t4], i3[e3] += r3, t4 === 4 && (p = i3[e3] >>> 13, i3[e3] &= 8191);
                }
                p += i3[e3] >>> 13, i3[e3] &= 8191;
              }
              p = (p << 2) + p, p += i3[0], i3[0] = 8191 & p, p >>>= 13, i3[1] += p;
              for (let e3 = 0; e3 < 10; e3++)
                this.h[e3] = i3[e3];
              r2 += 16, t3 -= 16;
            }
          }
          update(e2) {
            if (n(t2.isBuffer(e2)), this.fin === -1)
              throw new Error("Context is not initialized.");
            let r2 = e2.length, i3 = 0;
            if (this.leftover) {
              let t3 = 16 - this.leftover;
              t3 > r2 && (t3 = r2);
              for (let r3 = 0; r3 < t3; r3++)
                this.buffer[this.leftover + r3] = e2[i3 + r3];
              if (r2 -= t3, i3 += t3, this.leftover += t3, this.leftover < 16)
                return this;
              this._blocks(this.buffer, 16, 0), this.leftover = 0;
            }
            if (r2 >= 16) {
              const t3 = -16 & r2;
              this._blocks(e2, t3, i3), i3 += t3, r2 -= t3;
            }
            if (r2) {
              for (let t3 = 0; t3 < r2; t3++)
                this.buffer[this.leftover + t3] = e2[i3 + t3];
              this.leftover += r2;
            }
            return this;
          }
          final() {
            if (this.fin === -1)
              throw new Error("Context is not initialized.");
            const e2 = t2.alloc(16), r2 = new Uint16Array(10);
            if (this.leftover) {
              let e3 = this.leftover;
              for (this.buffer[e3++] = 1; e3 < 16; e3++)
                this.buffer[e3] = 0;
              this.fin = 1, this._blocks(this.buffer, 16, 0);
            }
            let n2 = this.h[1] >>> 13;
            this.h[1] &= 8191;
            for (let t3 = 2; t3 < 10; t3++)
              this.h[t3] += n2, n2 = this.h[t3] >>> 13, this.h[t3] &= 8191;
            this.h[0] += 5 * n2, n2 = this.h[0] >>> 13, this.h[0] &= 8191, this.h[1] += n2, n2 = this.h[1] >>> 13, this.h[1] &= 8191, this.h[2] += n2, r2[0] = this.h[0] + 5, n2 = r2[0] >>> 13, r2[0] &= 8191;
            for (let t3 = 1; t3 < 10; t3++)
              r2[t3] = this.h[t3] + n2, n2 = r2[t3] >>> 13, r2[t3] &= 8191;
            let i3 = (1 ^ n2) - 1;
            for (let t3 = 0; t3 < 10; t3++)
              r2[t3] &= i3;
            i3 = ~i3;
            for (let t3 = 0; t3 < 10; t3++)
              this.h[t3] = this.h[t3] & i3 | r2[t3];
            this.h[0] = 65535 & (this.h[0] | this.h[1] << 13), this.h[1] = 65535 & (this.h[1] >>> 3 | this.h[2] << 10), this.h[2] = 65535 & (this.h[2] >>> 6 | this.h[3] << 7), this.h[3] = 65535 & (this.h[3] >>> 9 | this.h[4] << 4), this.h[4] = 65535 & (this.h[4] >>> 12 | this.h[5] << 1 | this.h[6] << 14), this.h[5] = 65535 & (this.h[6] >>> 2 | this.h[7] << 11), this.h[6] = 65535 & (this.h[7] >>> 5 | this.h[8] << 8), this.h[7] = 65535 & (this.h[8] >>> 8 | this.h[9] << 5);
            let s2 = this.h[0] + this.pad[0];
            this.h[0] = s2;
            for (let t3 = 1; t3 < 8; t3++)
              s2 = this.h[t3] + this.pad[t3] + (s2 >>> 16), this.h[t3] = s2;
            for (let t3 = 0; t3 < 8; t3++)
              o(e2, this.h[t3], 2 * t3);
            return this.destroy(), e2;
          }
          destroy() {
            for (let e2 = 0; e2 < 10; e2++)
              this.r[e2] = 0, this.h[e2] = 0;
            for (let e2 = 0; e2 < 8; e2++)
              this.pad[e2] = 0;
            for (let e2 = 0; e2 < 16; e2++)
              this.buffer[e2] = 0;
            this.fin = -1, this.leftover = 0;
          }
          verify(e2) {
            n(t2.isBuffer(e2)), n(e2.length === 16);
            const r2 = this.final();
            let i3 = 0;
            for (let t3 = 0; t3 < 16; t3++)
              i3 |= r2[t3] ^ e2[t3];
            return i3 - 1 >>> 31 != 0;
          }
        }
        function s(e2, t3) {
          return e2[t3++] + 256 * e2[t3];
        }
        function o(e2, t3, r2) {
          return e2[r2++] = t3, e2[r2++] = t3 >>> 8, r2;
        }
        i.native = 0, e.exports = i;
      }).call(this, r(3).Buffer);
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.IKHandshake = void 0;
      const n = r(1035), i = r(3), s = r(123), o = r(57), a = r(1036), c = r(97);
      t.IKHandshake = class {
        constructor(e2, t2, r2, s2, o2, a2, c2, u) {
          this.isInitiator = e2, this.payload = i.Buffer.from(t2), this.prologue = r2, this.staticKeypair = s2, this.connection = o2, c2 && (this.remotePeer = c2), this.ik = u || new n.IK(), this.session = this.ik.initSession(this.isInitiator, this.prologue, this.staticKeypair, a2), this.remoteEarlyData = i.Buffer.alloc(0);
        }
        async stage0() {
          if (c.logLocalStaticKeys(this.session.hs.s), c.logRemoteStaticKey(this.session.hs.rs), this.isInitiator) {
            c.logger("IK Stage 0 - Initiator sending message...");
            const e2 = this.ik.sendMessage(this.session, this.payload);
            this.connection.writeLP(s.encode1(e2)), c.logger("IK Stage 0 - Initiator sent message."), c.logLocalEphemeralKeys(this.session.hs.e);
          } else {
            c.logger("IK Stage 0 - Responder receiving message...");
            const t2 = await this.connection.readLP();
            try {
              const e2 = s.decode1(t2.slice()), {plaintext: r2, valid: n2} = this.ik.recvMessage(this.session, e2);
              if (!n2)
                throw new Error("ik handshake stage 0 decryption validation fail");
              c.logger("IK Stage 0 - Responder got message, going to verify payload.");
              const i2 = await o.decodePayload(r2);
              this.remotePeer = this.remotePeer || await o.getPeerIdFromPayload(i2), await o.verifySignedPayload(this.session.hs.rs, i2, this.remotePeer), this.setRemoteEarlyData(i2.data), c.logger("IK Stage 0 - Responder successfully verified payload!"), c.logRemoteEphemeralKey(this.session.hs.re);
            } catch (e2) {
              throw c.logger("Responder breaking up with IK handshake in stage 0."), new a.FailedIKError(t2, "Error occurred while verifying initiator's signed payload: " + e2.message);
            }
          }
        }
        async stage1() {
          if (this.isInitiator) {
            c.logger("IK Stage 1 - Initiator receiving message...");
            const t2 = (await this.connection.readLP()).slice(), r2 = s.decode0(i.Buffer.from(t2)), {plaintext: n2, valid: u} = this.ik.recvMessage(this.session, r2);
            c.logger("IK Stage 1 - Initiator got message, going to verify payload.");
            try {
              if (!u)
                throw new Error("ik stage 1 decryption validation fail");
              const e2 = await o.decodePayload(n2);
              this.remotePeer = this.remotePeer || await o.getPeerIdFromPayload(e2), await o.verifySignedPayload(r2.ns.slice(0, 32), e2, this.remotePeer), this.setRemoteEarlyData(e2.data), c.logger("IK Stage 1 - Initiator successfully verified payload!"), c.logRemoteEphemeralKey(this.session.hs.re);
            } catch (e2) {
              throw c.logger("Initiator breaking up with IK handshake in stage 1."), new a.FailedIKError(t2, "Error occurred while verifying responder's signed payload: " + e2.message);
            }
          } else {
            c.logger("IK Stage 1 - Responder sending message...");
            const e2 = this.ik.sendMessage(this.session, this.payload);
            this.connection.writeLP(s.encode0(e2)), c.logger("IK Stage 1 - Responder sent message..."), c.logLocalEphemeralKeys(this.session.hs.e);
          }
          c.logCipherState(this.session);
        }
        decrypt(e2, t2) {
          const r2 = this.getCS(t2, false);
          return this.ik.decryptWithAd(r2, i.Buffer.alloc(0), e2);
        }
        encrypt(e2, t2) {
          const r2 = this.getCS(t2);
          return this.ik.encryptWithAd(r2, i.Buffer.alloc(0), e2);
        }
        getLocalEphemeralKeys() {
          if (!this.session.hs.e)
            throw new Error("Ephemeral keys do not exist.");
          return this.session.hs.e;
        }
        getCS(e2, t2 = true) {
          if (!e2.cs1 || !e2.cs2)
            throw new Error("Handshake not completed properly, cipher state does not exist.");
          return this.isInitiator ? t2 ? e2.cs1 : e2.cs2 : t2 ? e2.cs2 : e2.cs1;
        }
        setRemoteEarlyData(e2) {
          e2 && (this.remoteEarlyData = i.Buffer.from(e2.buffer, e2.byteOffset, e2.length));
        }
      };
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.IK = void 0;
      const n = r(3), i = r(57), s = r(380);
      class o extends s.AbstractHandshake {
        initSession(e2, t2, r2, n2) {
          const i2 = this.createEmptyKey();
          let s2;
          return s2 = e2 ? this.initializeInitiator(t2, r2, n2, i2) : this.initializeResponder(t2, r2, n2, i2), {hs: s2, i: e2, mc: 0};
        }
        sendMessage(e2, t2) {
          let r2;
          if (e2.mc === 0)
            r2 = this.writeMessageA(e2.hs, t2);
          else if (e2.mc === 1) {
            const {messageBuffer: n2, h: i2, cs1: s2, cs2: o3} = this.writeMessageB(e2.hs, t2);
            r2 = n2, e2.h = i2, e2.cs1 = s2, e2.cs2 = o3;
          } else {
            if (!(e2.mc > 1))
              throw new Error("Session invalid.");
            if (e2.i) {
              if (!e2.cs1)
                throw new Error("CS1 (cipher state) is not defined");
              r2 = this.writeMessageRegular(e2.cs1, t2);
            } else {
              if (!e2.cs2)
                throw new Error("CS2 (cipher state) is not defined");
              r2 = this.writeMessageRegular(e2.cs2, t2);
            }
          }
          return e2.mc++, r2;
        }
        recvMessage(e2, t2) {
          let r2 = n.Buffer.alloc(0), i2 = false;
          if (e2.mc === 0 && ({plaintext: r2, valid: i2} = this.readMessageA(e2.hs, t2)), e2.mc === 1) {
            const {plaintext: n2, valid: s2, h: o3, cs1: a, cs2: c} = this.readMessageB(e2.hs, t2);
            r2 = n2, i2 = s2, e2.h = o3, e2.cs1 = a, e2.cs2 = c;
          }
          return e2.mc++, {plaintext: r2, valid: i2};
        }
        writeMessageA(e2, t2) {
          e2.e = i.generateKeypair();
          const r2 = e2.e.publicKey;
          this.mixHash(e2.ss, r2), this.mixKey(e2.ss, this.dh(e2.e.privateKey, e2.rs));
          const s2 = n.Buffer.from(e2.s.publicKey), o3 = this.encryptAndHash(e2.ss, s2);
          this.mixKey(e2.ss, this.dh(e2.s.privateKey, e2.rs));
          return {ne: r2, ns: o3, ciphertext: this.encryptAndHash(e2.ss, t2)};
        }
        writeMessageB(e2, t2) {
          e2.e = i.generateKeypair();
          const r2 = e2.e.publicKey;
          this.mixHash(e2.ss, r2), this.mixKey(e2.ss, this.dh(e2.e.privateKey, e2.re)), this.mixKey(e2.ss, this.dh(e2.e.privateKey, e2.rs));
          const n2 = this.encryptAndHash(e2.ss, t2), s2 = {ne: r2, ns: this.createEmptyKey(), ciphertext: n2}, {cs1: o3, cs2: a} = this.split(e2.ss);
          return {messageBuffer: s2, cs1: o3, cs2: a, h: e2.ss.h};
        }
        readMessageA(e2, t2) {
          i.isValidPublicKey(t2.ne) && (e2.re = t2.ne), this.mixHash(e2.ss, e2.re), this.mixKey(e2.ss, this.dh(e2.s.privateKey, e2.re));
          const {plaintext: r2, valid: n2} = this.decryptAndHash(e2.ss, t2.ns);
          n2 && r2.length === 32 && i.isValidPublicKey(r2) && (e2.rs = r2), this.mixKey(e2.ss, this.dh(e2.s.privateKey, e2.rs));
          const {plaintext: s2, valid: o3} = this.decryptAndHash(e2.ss, t2.ciphertext);
          return {plaintext: s2, valid: n2 && o3};
        }
        readMessageB(e2, t2) {
          if (i.isValidPublicKey(t2.ne) && (e2.re = t2.ne), this.mixHash(e2.ss, e2.re), !e2.e)
            throw new Error("Handshake state should contain ephemeral key by now.");
          this.mixKey(e2.ss, this.dh(e2.e.privateKey, e2.re)), this.mixKey(e2.ss, this.dh(e2.s.privateKey, e2.re));
          const {plaintext: r2, valid: n2} = this.decryptAndHash(e2.ss, t2.ciphertext), {cs1: s2, cs2: o3} = this.split(e2.ss);
          return {h: e2.ss.h, valid: n2, plaintext: r2, cs1: s2, cs2: o3};
        }
        initializeInitiator(e2, t2, r2, i2) {
          const s2 = this.initializeSymmetric("Noise_IK_25519_ChaChaPoly_SHA256");
          this.mixHash(s2, e2), this.mixHash(s2, r2);
          return {ss: s2, s: t2, rs: r2, re: n.Buffer.alloc(32), psk: i2};
        }
        initializeResponder(e2, t2, r2, i2) {
          const s2 = this.initializeSymmetric("Noise_IK_25519_ChaChaPoly_SHA256");
          this.mixHash(s2, e2), this.mixHash(s2, t2.publicKey);
          return {ss: s2, s: t2, rs: r2, re: n.Buffer.alloc(32), psk: i2};
        }
      }
      t.IK = o;
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.FailedIKError = void 0;
      class n extends Error {
        constructor(e2, t2) {
          super(t2), this.initialMsg = e2, this.name = "FailedIKhandshake";
        }
      }
      t.FailedIKError = n;
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.XXFallbackHandshake = void 0;
      const n = r(3), i = r(376), s = r(57), o = r(97), a = r(123);
      class c extends i.XXHandshake {
        constructor(e2, t2, r2, n2, i2, s2, o2, a2, c3) {
          super(e2, t2, r2, n2, i2, o2, c3), a2 && (this.ephemeralKeys = a2), this.initialMsg = s2;
        }
        async propose() {
          if (this.isInitiator)
            this.xx.sendMessage(this.session, n.Buffer.alloc(0), this.ephemeralKeys), o.logger("XX Fallback Stage 0 - Initialized state as the first message was sent by initiator."), o.logLocalEphemeralKeys(this.session.hs.e);
          else {
            o.logger("XX Fallback Stage 0 - Responder decoding initial msg from IK.");
            const e2 = a.decode0(this.initialMsg), {valid: t2} = this.xx.recvMessage(this.session, {ne: e2.ne, ns: n.Buffer.alloc(0), ciphertext: n.Buffer.alloc(0)});
            if (!t2)
              throw new Error("xx fallback stage 0 decryption validation fail");
            o.logger("XX Fallback Stage 0 - Responder used received message from IK."), o.logRemoteEphemeralKey(this.session.hs.re);
          }
        }
        async exchange() {
          if (this.isInitiator) {
            const t2 = a.decode1(this.initialMsg), {plaintext: r2, valid: n2} = this.xx.recvMessage(this.session, t2);
            if (!n2)
              throw new Error("xx fallback stage 1 decryption validation fail");
            o.logger("XX Fallback Stage 1 - Initiator used received message from IK."), o.logRemoteEphemeralKey(this.session.hs.re), o.logRemoteStaticKey(this.session.hs.rs), o.logger("Initiator going to check remote's signature...");
            try {
              const e2 = await s.decodePayload(r2);
              this.remotePeer = this.remotePeer || await s.getPeerIdFromPayload(e2), await s.verifySignedPayload(this.session.hs.rs, e2, this.remotePeer), this.setRemoteEarlyData(e2.data);
            } catch (e2) {
              throw new Error("Error occurred while verifying signed payload from responder: " + e2.message);
            }
            o.logger("All good with the signature!");
          } else
            o.logger("XX Fallback Stage 1 - Responder start"), await super.exchange(), o.logger("XX Fallback Stage 1 - Responder end");
        }
      }
      t.XXFallbackHandshake = c;
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.decryptStream = t.encryptStream = void 0;
      const n = r(3), i = r(210);
      t.encryptStream = function(e2) {
        return async function* (t2) {
          for await (const r2 of t2) {
            const t3 = n.Buffer.from(r2.buffer, r2.byteOffset, r2.length);
            for (let r3 = 0; r3 < t3.length; r3 += i.NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG) {
              let n2 = r3 + i.NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG;
              n2 > t3.length && (n2 = t3.length);
              const s = e2.encrypt(t3.slice(r3, n2), e2.session);
              yield s;
            }
          }
        };
      }, t.decryptStream = function(e2) {
        return async function* (t2) {
          for await (const r2 of t2) {
            const t3 = n.Buffer.from(r2.buffer, r2.byteOffset, r2.length);
            for (let r3 = 0; r3 < t3.length; r3 += i.NOISE_MSG_MAX_LENGTH_BYTES) {
              let n2 = r3 + i.NOISE_MSG_MAX_LENGTH_BYTES;
              n2 > t3.length && (n2 = t3.length);
              const s = t3.slice(r3, n2), {plaintext: o, valid: a} = await e2.decrypt(s, e2.session);
              if (!a)
                throw new Error("Failed to validate decrypted chunk");
              yield o;
            }
          }
        };
      };
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.KeyCache = void 0;
      const n = new class {
        constructor() {
          this.storage = new Map();
        }
        store(e2, t2) {
          this.storage.set(e2.id, t2);
        }
        load(e2) {
          return e2 && this.storage.get(e2.id) || null;
        }
        resetStorage() {
          this.storage.clear();
        }
      }();
      t.KeyCache = n;
    }, function(e, t, r) {
      "use strict";
      const {EventEmitter: n} = r(14), i = r(0), s = r(66), {MemoryDatastore: o} = r(9), a = r(19), c = r(1041), u = r(21), h = r(59), f = r(1044), d = r(1056), l = r(1080), p = r(1083), y = r(43), g = r(1084), b = r(1089), m = r(1091), v = s.Record;
      e.exports = class extends n {
        constructor({libp2p: e2, dialer: t2, peerId: r2, peerStore: n2, registrar: i2, protocolPrefix: a2 = "/ipfs", forceProtocolLegacy: y2 = false, datastore: v2 = new o(), kBucketSize: w = h.K, clientMode: _ = false, concurrency: E = h.ALPHA, validators: S = {}, selectors: A = {}, randomWalk: I = {}, onPut: k = () => {
        }, onRemove: R = () => {
        }}) {
          if (super(), !t2)
            throw new Error("libp2p-kad-dht requires an instance of Dialer");
          this.libp2p = e2, this.dialer = t2, this.peerId = r2, this.peerStore = n2, this.registrar = i2, this.protocol = a2 + (y2 ? "" : h.PROTOCOL_DHT), this.kBucketSize = w, this._clientMode = _, this.concurrency = E, this.disjointPaths = Math.ceil(this.kBucketSize / 2), this.routingTable = new c(this.peerId, this.kBucketSize), this.datastore = v2, this.providers = new g(this.datastore, this.peerId), this.validators = {pk: s.validator.validators.pk, ...S}, this.selectors = {pk: s.selection.selectors.pk, ...A}, this.network = new f(this), this._log = u.logger(this.peerId), this.randomWalk = new b(this, I), this._queryManager = new m(), this._running = false, this.contentFetching = d(this), this.contentRouting = l(this), this.peerRouting = p(this), this.onPut = k, this.onRemove = R;
        }
        get isStarted() {
          return this._running;
        }
        async start() {
          this._running = true, this.providers.start(), this._queryManager.start(), await this.network.start(), this.randomWalk.start();
        }
        stop() {
          return this._running = false, this.randomWalk.stop(), this.providers.stop(), this._queryManager.stop(), this.network.stop();
        }
        async put(e2, t2, r2 = {}) {
          return this.contentFetching.put(e2, t2, r2);
        }
        async get(e2, t2 = {}) {
          return this.contentFetching.get(e2, t2);
        }
        async getMany(e2, t2, r2 = {}) {
          return this.contentFetching.getMany(e2, t2, r2);
        }
        async provide(e2) {
          return this.contentRouting.provide(e2);
        }
        async *findProviders(e2, t2 = {}) {
          for await (const r2 of this.contentRouting.findProviders(e2, t2))
            yield r2;
        }
        async findPeer(e2, t2 = {}) {
          return this.peerRouting.findPeer(e2, t2);
        }
        async *getClosestPeers(e2, t2 = {shallow: false}) {
          for await (const r2 of this.peerRouting.getClosestPeers(e2, t2))
            yield r2;
        }
        async getPublicKey(e2) {
          return this.peerRouting.getPublicKey(e2);
        }
        _peerDiscovered(e2, t2) {
          this.emit("peer", {id: e2, multiaddrs: t2});
        }
        async _nearestPeersToQuery(e2) {
          const t2 = await u.convertBuffer(e2.key);
          return this.routingTable.closestPeers(t2, this.kBucketSize).map((e3) => {
            const t3 = this.peerStore.get(e3);
            return {id: e3, multiaddrs: t3 ? t3.addresses.map((e4) => e4.multiaddr) : []};
          });
        }
        async _betterPeersToQuery(e2, t2) {
          this._log("betterPeersToQuery");
          return (await this._nearestPeersToQuery(e2)).filter((e3) => this._isSelf(e3.id) ? (this._log.error("trying to return self as closer"), false) : !e3.id.isEqual(t2));
        }
        async _checkLocalDatastore(e2) {
          this._log("checkLocalDatastore: %b", e2);
          const t2 = u.bufferToKey(e2);
          let r2;
          try {
            r2 = await this.datastore.get(t2);
          } catch (s2) {
            if (s2.code === "ERR_NOT_FOUND")
              return;
            throw s2;
          }
          const n2 = v.deserialize(r2);
          if (!n2)
            throw i("Invalid record", "ERR_INVALID_RECORD");
          return n2.timeReceived == null || u.now() - n2.timeReceived > h.MAX_RECORD_AGE ? (await this.datastore.delete(t2), void this.onRemove(n2)) : n2;
        }
        async _add(e2) {
          await this.routingTable.add(e2);
        }
        async _verifyRecordLocally(e2) {
          this._log("verifyRecordLocally"), await s.validator.verifyRecord(this.validators, e2);
        }
        _isSelf(e2) {
          return e2 && a(this.peerId.id, e2.id);
        }
        async _putValueToPeer(e2, t2, r2) {
          const n2 = new y(y.TYPES.PUT_VALUE, e2, 0);
          n2.record = t2;
          if (!(await this.network.sendRequest(r2, n2)).record.value.equals(v.deserialize(t2).value))
            throw i(new Error("value not put correctly"), "ERR_PUT_VALUE_INVALID");
        }
        async _getValueOrPeers(e2, t2) {
          const r2 = await this._getValueSingle(e2, t2), n2 = r2.closerPeers, s2 = r2.record;
          if (s2) {
            try {
              await this._verifyRecordOnline(s2);
            } catch (o2) {
              const e3 = "invalid record received, discarded";
              throw this._log(e3), i(new Error(e3), "ERR_INVALID_RECORD");
            }
            return {record: s2, peers: n2};
          }
          if (n2.length > 0)
            return {peers: n2};
          throw i(new Error("Not found"), "ERR_NOT_FOUND");
        }
        async _getValueSingle(e2, t2) {
          const r2 = new y(y.TYPES.GET_VALUE, t2, 0);
          return this.network.sendRequest(e2, r2);
        }
        async _verifyRecordOnline(e2) {
          await s.validator.verifyRecord(this.validators, e2);
        }
      }, e.exports.multicodec = "/ipfs" + h.PROTOCOL_DHT;
    }, function(e, t, r) {
      "use strict";
      const n = r(1042), i = r(21);
      e.exports = class {
        constructor(e2, t2) {
          this.self = e2, this._onPing = this._onPing.bind(this), this._onInit(t2);
        }
        async _onInit(e2) {
          const t2 = await i.convertPeerId(this.self);
          this.kb = new n({localNodeId: t2, numberOfNodesPerKBucket: e2, numberOfNodesToPing: 1}), this.kb.on("ping", this._onPing);
        }
        _onPing(e2, t2) {
          const r2 = e2[0];
          this.kb.remove(r2.id), this.kb.add(t2);
        }
        get size() {
          return this.kb.count();
        }
        async find(e2) {
          const t2 = await i.convertPeerId(e2), r2 = this.closestPeer(t2);
          if (r2 && r2.isEqual(e2))
            return r2;
        }
        closestPeer(e2) {
          const t2 = this.closestPeers(e2, 1);
          if (t2.length > 0)
            return t2[0];
        }
        closestPeers(e2, t2) {
          return this.kb.closest(e2, t2).map((e3) => e3.peer);
        }
        async add(e2) {
          const t2 = await i.convertPeerId(e2);
          this.kb.add({id: t2, peer: e2});
        }
        async remove(e2) {
          const t2 = await i.convertPeerId(e2);
          this.kb.remove(t2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(354), {EventEmitter: i} = r(14);
      function s(e2, t2) {
        if (e2 === t2)
          return true;
        if (e2.length !== t2.length)
          return false;
        for (let r2 = 0, n2 = e2.length; r2 < n2; ++r2)
          if (e2[r2] !== t2[r2])
            return false;
        return true;
      }
      function o(e2, t2) {
        if (!(t2 instanceof Uint8Array))
          throw new TypeError(e2 + " is not a Uint8Array");
      }
      class a extends i {
        constructor(e2 = {}) {
          super(), this.localNodeId = e2.localNodeId || n(20), this.numberOfNodesPerKBucket = e2.numberOfNodesPerKBucket || 20, this.numberOfNodesToPing = e2.numberOfNodesToPing || 3, this.distance = e2.distance || a.distance, this.arbiter = e2.arbiter || a.arbiter, this.metadata = Object.assign({}, e2.metadata), o("option.localNodeId as parameter 1", this.localNodeId), this.root = {contacts: [], dontSplit: false, left: null, right: null};
        }
        static arbiter(e2, t2) {
          return e2.vectorClock > t2.vectorClock ? e2 : t2;
        }
        static distance(e2, t2) {
          let r2 = 0, n2 = 0;
          const i2 = Math.min(e2.length, t2.length), s2 = Math.max(e2.length, t2.length);
          for (; n2 < i2; ++n2)
            r2 = 256 * r2 + (e2[n2] ^ t2[n2]);
          for (; n2 < s2; ++n2)
            r2 = 256 * r2 + 255;
          return r2;
        }
        add(e2) {
          o("contact.id", (e2 || {}).id);
          let t2 = 0, r2 = this.root;
          for (; r2.contacts === null; )
            r2 = this._determineNode(r2, e2.id, t2++);
          const n2 = this._indexOf(r2, e2.id);
          return n2 >= 0 ? (this._update(r2, n2, e2), this) : r2.contacts.length < this.numberOfNodesPerKBucket ? (r2.contacts.push(e2), this.emit("added", e2), this) : r2.dontSplit ? (this.emit("ping", r2.contacts.slice(0, this.numberOfNodesToPing), e2), this) : (this._split(r2, t2), this.add(e2));
        }
        closest(e2, t2 = 1 / 0) {
          if (o("id", e2), !Number.isInteger(t2) && t2 !== 1 / 0 || t2 <= 0)
            throw new TypeError("n is not positive number");
          let r2 = [];
          for (let n2 = [this.root], i2 = 0; n2.length > 0 && r2.length < t2; ) {
            const t3 = n2.pop();
            if (t3.contacts === null) {
              const r3 = this._determineNode(t3, e2, i2++);
              n2.push(t3.left === r3 ? t3.right : t3.left), n2.push(r3);
            } else
              r2 = r2.concat(t3.contacts);
          }
          return r2.map((t3) => [this.distance(t3.id, e2), t3]).sort((e3, t3) => e3[0] - t3[0]).slice(0, t2).map((e3) => e3[1]);
        }
        count() {
          let e2 = 0;
          for (const t2 = [this.root]; t2.length > 0; ) {
            const r2 = t2.pop();
            r2.contacts === null ? t2.push(r2.right, r2.left) : e2 += r2.contacts.length;
          }
          return e2;
        }
        _determineNode(e2, t2, r2) {
          const n2 = r2 >> 3, i2 = r2 % 8;
          if (t2.length <= n2 && i2 !== 0)
            return e2.left;
          return t2[n2] & 1 << 7 - i2 ? e2.right : e2.left;
        }
        get(e2) {
          o("id", e2);
          let t2 = 0, r2 = this.root;
          for (; r2.contacts === null; )
            r2 = this._determineNode(r2, e2, t2++);
          const n2 = this._indexOf(r2, e2);
          return n2 >= 0 ? r2.contacts[n2] : null;
        }
        _indexOf(e2, t2) {
          for (let r2 = 0; r2 < e2.contacts.length; ++r2)
            if (s(e2.contacts[r2].id, t2))
              return r2;
          return -1;
        }
        remove(e2) {
          o("the id as parameter 1", e2);
          let t2 = 0, r2 = this.root;
          for (; r2.contacts === null; )
            r2 = this._determineNode(r2, e2, t2++);
          const n2 = this._indexOf(r2, e2);
          if (n2 >= 0) {
            const e3 = r2.contacts.splice(n2, 1)[0];
            this.emit("removed", e3);
          }
          return this;
        }
        _split(e2, t2) {
          e2.left = {contacts: [], dontSplit: false, left: null, right: null}, e2.right = {contacts: [], dontSplit: false, left: null, right: null};
          for (const n2 of e2.contacts)
            this._determineNode(e2, n2.id, t2).contacts.push(n2);
          e2.contacts = null;
          const r2 = this._determineNode(e2, this.localNodeId, t2);
          (e2.left === r2 ? e2.right : e2.left).dontSplit = true;
        }
        toArray() {
          let e2 = [];
          for (const t2 = [this.root]; t2.length > 0; ) {
            const r2 = t2.pop();
            r2.contacts === null ? t2.push(r2.right, r2.left) : e2 = e2.concat(r2.contacts);
          }
          return e2;
        }
        _update(e2, t2, r2) {
          if (!s(e2.contacts[t2].id, r2.id))
            throw new Error("wrong index for _update");
          const n2 = e2.contacts[t2], i2 = this.arbiter(n2, r2);
          i2 === n2 && n2 !== r2 || (e2.contacts.splice(t2, 1), e2.contacts.push(i2), this.emit("updated", n2, i2));
        }
      }
      e.exports = a;
    }, function(e, t, r) {
      "use strict";
      var n = function(e2, t2) {
        return t2 || (t2 = {}), e2.split("").forEach(function(e3, r2) {
          e3 in t2 || (t2[e3] = r2);
        }), t2;
      }, i = {alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", charmap: {0: 14, 1: 8}};
      i.charmap = n(i.alphabet, i.charmap);
      var s = {alphabet: "0123456789ABCDEFGHJKMNPQRSTVWXYZ", charmap: {O: 0, I: 1, L: 1}};
      s.charmap = n(s.alphabet, s.charmap);
      var o = {alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", charmap: {}};
      function a(e2) {
        if (this.buf = [], this.shift = 8, this.carry = 0, e2) {
          switch (e2.type) {
            case "rfc4648":
              this.charmap = t.rfc4648.charmap;
              break;
            case "crockford":
              this.charmap = t.crockford.charmap;
              break;
            case "base32hex":
              this.charmap = t.base32hex.charmap;
              break;
            default:
              throw new Error("invalid type");
          }
          e2.charmap && (this.charmap = e2.charmap);
        }
      }
      function c(e2) {
        if (this.buf = "", this.shift = 3, this.carry = 0, e2) {
          switch (e2.type) {
            case "rfc4648":
              this.alphabet = t.rfc4648.alphabet;
              break;
            case "crockford":
              this.alphabet = t.crockford.alphabet;
              break;
            case "base32hex":
              this.alphabet = t.base32hex.alphabet;
              break;
            default:
              throw new Error("invalid type");
          }
          e2.alphabet ? this.alphabet = e2.alphabet : e2.lc && (this.alphabet = this.alphabet.toLowerCase());
        }
      }
      o.charmap = n(o.alphabet, o.charmap), a.prototype.charmap = i.charmap, a.prototype.write = function(e2) {
        var t2 = this.charmap, r2 = this.buf, n2 = this.shift, i2 = this.carry;
        return e2.toUpperCase().split("").forEach(function(e3) {
          if (e3 != "=") {
            var s2 = 255 & t2[e3];
            (n2 -= 5) > 0 ? i2 |= s2 << n2 : n2 < 0 ? (r2.push(i2 | s2 >> -n2), i2 = s2 << (n2 += 8) & 255) : (r2.push(i2 | s2), n2 = 8, i2 = 0);
          }
        }), this.shift = n2, this.carry = i2, this;
      }, a.prototype.finalize = function(e2) {
        return e2 && this.write(e2), this.shift !== 8 && this.carry !== 0 && (this.buf.push(this.carry), this.shift = 8, this.carry = 0), this.buf;
      }, c.prototype.alphabet = i.alphabet, c.prototype.write = function(e2) {
        var t2, r2, n2, i2 = this.shift, s2 = this.carry;
        for (n2 = 0; n2 < e2.length; n2++)
          t2 = s2 | (r2 = e2[n2]) >> i2, this.buf += this.alphabet[31 & t2], i2 > 5 && (t2 = r2 >> (i2 -= 5), this.buf += this.alphabet[31 & t2]), s2 = r2 << (i2 = 5 - i2), i2 = 8 - i2;
        return this.shift = i2, this.carry = s2, this;
      }, c.prototype.finalize = function(e2) {
        return e2 && this.write(e2), this.shift !== 3 && (this.buf += this.alphabet[31 & this.carry], this.shift = 3, this.carry = 0), this.buf;
      }, t.encode = function(e2, t2) {
        return new c(t2).finalize(e2);
      }, t.decode = function(e2, t2) {
        return new a(t2).finalize(e2);
      }, t.Decoder = a, t.Encoder = c, t.charmap = n, t.crockford = s, t.rfc4648 = i, t.base32hex = o;
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(25), s = r(34), o = r(124), {consume: a} = r(55), c = r(1045), u = r(1047), h = r(59), f = r(43), d = r(21);
      e.exports = class {
        constructor(e2) {
          this.dht = e2, this.readMessageTimeout = h.READ_MESSAGE_TIMEOUT, this._log = d.logger(this.dht.peerId, "net"), this._rpc = u(this.dht), this._onPeerConnected = this._onPeerConnected.bind(this), this._running = false;
        }
        async start() {
          if (this._running)
            return;
          if (!this.dht.isStarted)
            throw n(new Error("Can not start network"), "ERR_CANNOT_START_NETWORK");
          this._running = true, this.dht._clientMode === false && this.dht.registrar.handle(this.dht.protocol, this._rpc);
          const e2 = new c({multicodecs: [this.dht.protocol], handlers: {onConnect: this._onPeerConnected, onDisconnect: () => {
          }}});
          this._registrarId = await this.dht.registrar.register(e2);
        }
        async stop() {
          (this.dht.isStarted || this.isStarted) && (this._running = false, await this.dht.registrar.unregister(this._registrarId));
        }
        get isStarted() {
          return this._running;
        }
        get isConnected() {
          return this.dht.isStarted && this.isStarted;
        }
        async _onPeerConnected(e2) {
          await this.dht._add(e2), this._log("added to the routing table: %s", e2.toB58String());
        }
        async sendRequest(e2, t2) {
          if (!this.isConnected)
            throw n(new Error("Network is offline"), "ERR_NETWORK_OFFLINE");
          const r2 = e2.toB58String();
          this._log("sending to: %s", r2);
          let i2 = this.dht.registrar.connectionManager.get(e2);
          i2 || (i2 = await this.dht.dialer.connectToPeer(e2));
          const {stream: s2} = await i2.newStream(this.dht.protocol);
          return this._writeReadMessage(s2, t2.serialize());
        }
        async sendMessage(e2, t2) {
          if (!this.isConnected)
            throw n(new Error("Network is offline"), "ERR_NETWORK_OFFLINE");
          const r2 = e2.toB58String();
          this._log("sending to: %s", r2);
          let i2 = this.dht.registrar.connectionManager.get(e2);
          i2 || (i2 = await this.dht.dialer.connectToPeer(e2));
          const {stream: s2} = await i2.newStream(this.dht.protocol);
          return this._writeMessage(s2, t2.serialize());
        }
        async _writeReadMessage(e2, t2) {
          return o(async function(e3, t3) {
            const r2 = await i([t3], s.encode(), e3, s.decode(), async (e4) => {
              for await (const t4 of e4)
                return t4.slice();
            });
            if (r2.length === 0)
              throw n(new Error("No message received"), "ERR_NO_MESSAGE_RECEIVED");
            return f.deserialize(r2);
          }(e2, t2), this.readMessageTimeout);
        }
        _writeMessage(e2, t2) {
          return i([t2], s.encode(), e2, a);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(24), i = r(1046);
      e.exports = n(class extends i {
        constructor({min: e2, max: t2, multicodecs: r2, handlers: n2}) {
          if (super({min: e2, max: t2, handlers: n2}), !r2)
            throw new Error("one or more multicodec should be provided");
          if (!n2)
            throw new Error("the handlers should be provided");
          if (typeof n2.onConnect != "function")
            throw new Error("the 'onConnect' handler must be provided");
          if (typeof n2.onDisconnect != "function")
            throw new Error("the 'onDisconnect' handler must be provided");
          this.multicodecs = Array.isArray(r2) ? r2 : [r2], this._registrar = void 0, this._onProtocolChange = this._onProtocolChange.bind(this), this._onPeerConnect = this._onPeerConnect.bind(this);
        }
        set registrar(e2) {
          this._registrar = e2, this._registrar.peerStore.on("change:protocols", this._onProtocolChange), this._registrar.connectionManager.on("peer:connect", this._onPeerConnect), this._updatePeers(this._registrar.peerStore.peers.values());
        }
        _updatePeers(e2) {
          for (const {id: t2, protocols: r2} of e2)
            if (this.multicodecs.filter((e3) => r2.includes(e3)).length) {
              this.peers.add(t2.toB58String());
              const e3 = this._registrar.getConnection(t2);
              e3 && this._onConnect(t2, e3);
            } else
              this.peers.delete(t2.toB58String());
        }
        _onProtocolChange({peerId: e2, protocols: t2}) {
          const r2 = this.peers.has(e2.toB58String()), n2 = t2.filter((e3) => this.multicodecs.includes(e3));
          r2 && n2.length === 0 && this._onDisconnect(e2);
          for (const i2 of t2)
            if (this.multicodecs.includes(i2)) {
              const t3 = this._registrar.peerStore.get(e2);
              return void this._updatePeers([t3]);
            }
        }
        _onPeerConnect(e2) {
          const t2 = e2.remotePeer, r2 = this._registrar.peerStore.protoBook.get(t2);
          r2 && this.multicodecs.find((e3) => r2.includes(e3)) && (this.peers.add(t2.toB58String()), this._onConnect(t2, e2));
        }
      }, {className: "MulticodecTopology", symbolName: "@libp2p/js-interfaces/topology/multicodec-topology"});
    }, function(e, t, r) {
      "use strict";
      const n = r(24), i = () => {
      };
      e.exports = n(class {
        constructor({min: e2 = 0, max: t2 = 1 / 0, handlers: r2 = {}}) {
          this.min = e2, this.max = t2, this._onConnect = r2.onConnect || i, this._onDisconnect = r2.onDisconnect || i, this.peers = new Set();
        }
        set registrar(e2) {
          this._registrar = e2;
        }
        disconnect(e2) {
          this._onDisconnect(e2);
        }
      }, {className: "Topology", symbolName: "@libp2p/js-interfaces/topology"});
    }, function(e, t, r) {
      "use strict";
      const n = r(25), i = r(34), s = r(43), o = r(1049), a = r(21);
      e.exports = (e2) => {
        const t2 = a.logger(e2.peerId, "rpc"), r2 = o(e2);
        async function c(n2, i2) {
          const s2 = r2(i2.type);
          try {
            await e2._add(n2);
          } catch (o2) {
            t2.error("Failed to update the kbucket store", o2);
          }
          if (s2)
            return s2(n2, i2);
          t2.error("no handler found for message type: " + i2.type);
        }
        return async function({stream: r3, connection: o2}) {
          const a2 = o2.remotePeer;
          try {
            await e2._add(a2);
          } catch (h) {
            t2.error(h);
          }
          const u = a2.toB58String();
          t2("from: %s", u), await n(r3.source, i.decode(), (e3) => async function* () {
            for await (const t3 of e3) {
              const e4 = s.deserialize(t3.slice()), r4 = await c(a2, e4);
              r4 && (yield r4.serialize());
            }
          }(), i.encode(), r3.sink);
        };
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = `// can't use, because protocol-buffers doesn't support imports
// so we have to duplicate for now :(
// import "record.proto";

message Record {
  // adjusted for javascript
  optional bytes key = 1;
  optional bytes value = 2;
  optional bytes author = 3;
  optional bytes signature = 4;
  optional string timeReceived = 5;
}

message Message {
  enum MessageType {
    PUT_VALUE = 0;
    GET_VALUE = 1;
    ADD_PROVIDER = 2;
    GET_PROVIDERS = 3;
    FIND_NODE = 4;
    PING = 5;
  }

  enum ConnectionType {
    // sender does not have a connection to peer, and no extra information (default)
    NOT_CONNECTED = 0;

    // sender has a live connection to peer
    CONNECTED = 1;

    // sender recently connected to peer
    CAN_CONNECT = 2;

    // sender recently tried to connect to peer repeatedly but failed to connect
    // ("try" here is loose, but this should signal "made strong effort, failed")
    CANNOT_CONNECT = 3;
  }

  message Peer {
    // ID of a given peer.
    optional bytes id = 1;

    // multiaddrs for a given peer
    repeated bytes addrs = 2;

    // used to signal the sender's connection capabilities to the peer
    optional ConnectionType connection = 3;
  }

  // defines what type of message it is.
  optional MessageType type = 1;

  // defines what coral cluster level this query/response belongs to.
  // in case we want to implement coral's cluster rings in the future.
  optional int32 clusterLevelRaw = 10;

  // Used to specify the key associated with this message.
  // PUT_VALUE, GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
  // adjusted for javascript
  optional bytes key = 2;

  // Used to return a value
  // PUT_VALUE, GET_VALUE
  // adjusted Record to bytes for js
  optional bytes record = 3;

  // Used to return peers closer to a key in a query
  // GET_VALUE, GET_PROVIDERS, FIND_NODE
  repeated Peer closerPeers = 8;

  // Used to return Providers
  // GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
  repeated Peer providerPeers = 9;
}`;
    }, function(e, t, r) {
      "use strict";
      const n = r(43).TYPES;
      e.exports = (e2) => {
        const t2 = {[n.GET_VALUE]: r(1050)(e2), [n.PUT_VALUE]: r(1051)(e2), [n.FIND_NODE]: r(1052)(e2), [n.ADD_PROVIDER]: r(1053)(e2), [n.GET_PROVIDERS]: r(1054)(e2), [n.PING]: r(1055)(e2)};
        return function(e3) {
          return t2[e3];
        };
      };
    }, function(e, t, r) {
      "use strict";
      const {Record: n} = r(66), i = r(0), s = r(43), o = r(21);
      e.exports = (e2) => {
        const t2 = o.logger(e2.peerId, "rpc:get-value");
        return async function(r2, a) {
          const c = a.key;
          if (t2("key: %b", c), !c || c.length === 0)
            throw i(new Error("Invalid key"), "ERR_INVALID_KEY");
          const u = new s(s.TYPES.GET_VALUE, c, a.clusterLevel);
          if (o.isPublicKeyKey(c)) {
            t2("is public key");
            const r3 = o.fromPublicKeyKey(c);
            let i2;
            if (e2._isSelf(r3))
              i2 = e2.peerId;
            else {
              const t3 = e2.peerStore.get(r3);
              i2 = t3 && t3.id;
            }
            if (i2 && i2.pubKey)
              return t2("returning found public key"), u.record = new n(c, i2.pubKey.bytes), u;
          }
          const [h, f] = await Promise.all([e2._checkLocalDatastore(c), e2._betterPeersToQuery(a, r2)]);
          return h && (t2("got record"), u.record = h), f.length > 0 && (t2("got closer %s", f.length), u.closerPeers = f), u;
        };
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(21), i = r(0);
      e.exports = (e2) => {
        const t2 = n.logger(e2.peerId, "rpc:put-value");
        return async function(r2, s) {
          const o = s.key;
          t2("key: %b", o);
          const a = s.record;
          if (!a) {
            const e3 = "Empty record from: " + r2.toB58String();
            throw t2.error(e3), i(new Error(e3), "ERR_EMPTY_RECORD");
          }
          await e2._verifyRecordLocally(a), a.timeReceived = new Date();
          const c = n.bufferToKey(a.key);
          return await e2.datastore.put(c, a.serialize()), e2.onPut(a, r2), s;
        };
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(19), i = r(43), s = r(21);
      e.exports = (e2) => {
        const t2 = s.logger(e2.peerId, "rpc:find-node");
        return async function(r2, s2) {
          let o;
          t2("start"), o = n(s2.key, e2.peerId.id) ? [{id: e2.peerId}] : await e2._betterPeersToQuery(s2, r2);
          const a = new i(s2.type, new Uint8Array(0), s2.clusterLevel);
          return o.length > 0 ? a.closerPeers = o : t2("handle FindNode %s: could not find anything", r2.toB58String()), a;
        };
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(0), s = r(21);
      e.exports = (e2) => {
        const t2 = s.logger(e2.peerId, "rpc:add-provider");
        return async function(r2, s2) {
          if (t2("start"), !s2.key || s2.key.length === 0)
            throw i(new Error("Missing key"), "ERR_MISSING_KEY");
          let o;
          try {
            o = new n(s2.key);
          } catch (a) {
            const e3 = "Invalid CID: " + a.message;
            throw i(new Error(e3), "ERR_INVALID_CID");
          }
          return s2.providerPeers.forEach((n2) => {
            if (n2.id.isEqual(r2)) {
              if (!(n2.multiaddrs.length < 1))
                return t2("received provider %s for %s (addrs %s)", r2.toB58String(), o.toBaseEncodedString(), n2.multiaddrs.map((e3) => e3.toString())), e2._isSelf(n2.id) ? void 0 : (e2.peerStore.addressBook.add(n2.id, n2.multiaddrs), e2.providers.addProvider(o, n2.id));
              t2("no valid addresses for provider %s. Ignore", r2.toB58String());
            } else
              t2("invalid provider peer %s from %s", n2.id.toB58String(), r2.toB58String());
          }), e2.providers.addProvider(o, r2);
        };
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(0), s = r(43), o = r(21);
      e.exports = (e2) => {
        const t2 = o.logger(e2.peerId, "rpc:get-providers");
        return async function(r2, a) {
          let c;
          try {
            c = new n(a.key);
          } catch (g) {
            throw i(new Error("Invalid CID: " + g.message), "ERR_INVALID_CID");
          }
          t2("%s", c.toBaseEncodedString());
          const u = o.bufferToKey(c.bytes), [h, f, d] = await Promise.all([e2.datastore.has(u), e2.providers.getProviders(c), e2._betterPeersToQuery(a, r2)]), l = f.map((e3) => ({id: e3})), p = d.map((e3) => ({id: e3.id}));
          h && l.push({id: e2.peerId});
          const y = new s(a.type, a.key, a.clusterLevel);
          return l.length > 0 && (y.providerPeers = l), p.length > 0 && (y.closerPeers = p), t2("got %s providers %s closerPeers", l.length, p.length), y;
        };
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(21);
      e.exports = (e2) => {
        const t2 = n.logger(e2.peerId, "rpc:ping");
        return function(e3, r2) {
          return t2("from %s", e3.toB58String()), r2;
        };
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(124), s = r(19), o = r(66), a = r(59), c = r(213), u = r(21), h = o.Record;
      e.exports = (e2) => {
        const t2 = async (t3, r2) => e2.datastore.put(u.bufferToKey(t3), r2);
        return {_putLocal: async (e3, r2) => t2(e3, r2), async put(r2, i2, s2 = {}) {
          e2._log("PutValue %b", r2);
          const o2 = await u.createPutRecord(r2, i2);
          await t2(r2, o2);
          let a2 = 0, c2 = 0;
          await u.mapParallel(e2.getClosestPeers(r2, {shallow: true}), async (t3) => {
            try {
              a2 += 1, await e2._putValueToPeer(r2, o2, t3), c2 += 1;
            } catch (n2) {
              e2._log.error("Failed to put to peer (%b): %s", t3.id, n2);
            }
          });
          const h2 = s2.minPeers || a2;
          if (h2 > c2) {
            const t3 = n(new Error(`Failed to put value to enough peers: ${c2}/${h2}`), "ERR_NOT_ENOUGH_PUT_PEERS");
            throw e2._log.error(t3), t3;
          }
        }, async get(t3, r2 = {}) {
          r2.timeout = r2.timeout || a.minute, e2._log("_get %b", t3);
          const i2 = await e2.getMany(t3, a.GET_MANY_RECORD_COUNT, r2), c2 = i2.map((e3) => e3.val);
          let h2 = 0;
          try {
            h2 = o.selection.bestRecord(e2.selectors, t3, c2);
          } catch (d) {
            if (d.code !== "ERR_NO_SELECTOR_FUNCTION_FOR_RECORD_KEY")
              throw d;
          }
          const f = c2[h2];
          if (e2._log("GetValue %b %s", t3, f), !f)
            throw n(new Error("best value was not found"), "ERR_NOT_FOUND");
          return await (async (t4, r3, n2) => {
            const i3 = await u.createPutRecord(t4, n2);
            return Promise.all(r3.map(async (r4) => {
              if (!s(r4.val, n2))
                if (e2._isSelf(r4.from))
                  try {
                    await e2._putLocal(t4, i3);
                  } catch (d) {
                    e2._log.error("Failed error correcting self", d);
                  }
                else
                  try {
                    await e2._putValueToPeer(t4, i3, r4.from);
                  } catch (d) {
                    e2._log.error("Failed error correcting entry", d);
                  }
            }));
          })(t3, i2, f), f;
        }, async getMany(t3, r2, s2 = {}) {
          s2.timeout = s2.timeout || a.minute, e2._log("getMany %b (%s)", t3, r2);
          let o2, f = [];
          try {
            o2 = await (async (t4) => {
              e2._log("getLocal %b", t4);
              const r3 = await e2.datastore.get(u.bufferToKey(t4));
              e2._log("found %b in local datastore", t4);
              const n2 = h.deserialize(r3);
              return await e2._verifyRecordLocally(n2), n2;
            })(t3);
          } catch (b) {
            if (r2 === 0)
              throw b;
          }
          if (o2 && f.push({val: o2.value, from: e2.peerId}), f.length >= r2)
            return f;
          const d = [], l = await u.convertBuffer(t3), p = e2.routingTable.closestPeers(l, this.kBucketSize);
          if (e2._log("peers in rt: %d", p.length), p.length === 0) {
            const t4 = "Failed to lookup key! No peers from routing table!";
            if (e2._log.error(t4), f.length === 0)
              throw n(new Error(t4), "ERR_NO_PEERS_IN_ROUTING_TABLE");
            return f;
          }
          const y = new c(e2, t3, (n2, i2) => {
            const s3 = u.pathSize(r2 - f.length, i2), o3 = [];
            return d.push(o3), async (r3) => {
              let n3, i3, a2;
              try {
                const s4 = await e2._getValueOrPeers(r3, t3);
                n3 = s4.record, i3 = s4.peers;
              } catch (b) {
                if (b.code !== "ERR_INVALID_RECORD")
                  throw b;
                a2 = b;
              }
              const c2 = {closerPeers: i3};
              return (n3 && n3.value || a2) && o3.push({val: n3 && n3.value, from: r3}), o3.length >= s3 && (c2.pathComplete = true), c2;
            };
          });
          let g;
          try {
            await i(y.run(p), s2.timeout);
          } catch (b) {
            g = b;
          }
          if (y.stop(), f = [].concat.apply(f, d).slice(0, r2), g && f.length === 0)
            throw g;
          return f;
        }};
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(1058), i = r(14), s = r(1059), o = r(1063), a = r(21);
      e.exports = class extends i {
        constructor(e2) {
          super(), this.query = e2, this.running = false, this.workers = [], this.peersSeen = new Set(), this.errors = [], this.peersQueried = null;
        }
        stop() {
          if (this.running) {
            this.running = false;
            for (const e2 of this.workers)
              e2.stop();
          }
        }
        async execute(e2) {
          const t2 = [], r2 = Math.min(this.query.dht.disjointPaths, e2.length);
          for (let i2 = 0; i2 < r2; i2++)
            t2.push(new s(this, this.query.makePath(i2, r2)));
          e2.forEach((e3, n3) => {
            t2[n3 % r2].addInitialPeer(e3);
          }), await this.executePaths(t2);
          const n2 = {finalSet: new Set(this.peersQueried.peers), paths: []};
          for (const i2 of t2)
            i2.res && (i2.res.pathComplete || i2.res.queryComplete) && (i2.res.success = true, n2.paths.push(i2.res));
          return n2;
        }
        async executePaths(e2) {
          this.running = true, this.emit("start");
          try {
            await Promise.all(e2.map((e3) => e3.execute()));
          } finally {
            this.stop(), this.emit("complete");
          }
          if (this.errors.length === this.peersSeen.size)
            throw this.errors[0];
        }
        async workerQueue(e2) {
          await this.init(), await this.startWorker(e2);
        }
        async startWorker(e2) {
          const t2 = new o(this.query.dht, this, e2, this.query._log);
          this.workers.push(t2), await t2.execute();
        }
        async init() {
          this.peersQueried || (this.peersQueriedPromise ? await this.peersQueriedPromise : (this.peersQueriedPromise = (async () => {
            const e2 = await a.convertBuffer(this.query.key);
            this.peersQueried = new n(e2, this.query.dht.kBucketSize);
          })(), await this.peersQueriedPromise, delete this.peersQueriedPromise));
        }
        async continueQuerying(e2) {
          if (this.peersQueried.length < this.peersQueried.capacity)
            return true;
          const t2 = e2.queue.workersList().map((e3) => e3.data);
          return !!await this.peersQueried.anyCloser(t2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(211), i = r(21), s = r(212), o = r(19);
      e.exports = class {
        constructor(e2, t2) {
          this.originDhtKey = e2, this.capacity = t2, this.peerDistances = [];
        }
        get length() {
          return this.peerDistances.length;
        }
        get peers() {
          return this.peerDistances.map((e2) => e2.peerId);
        }
        async add(e2) {
          if (this.peerDistances.find((t3) => o(t3.peerId.id, e2.id)))
            return;
          const t2 = await i.convertPeerId(e2), r2 = {peerId: e2, distance: n(this.originDhtKey, t2)};
          this.peerDistances.push(r2), this.peerDistances.sort((e3, t3) => n.compare(e3.distance, t3.distance)), this.peerDistances = this.peerDistances.slice(0, this.capacity);
        }
        async anyCloser(e2) {
          if (!e2.length)
            return false;
          if (!this.length)
            return true;
          const t2 = await s(e2, (e3) => i.convertPeerId(e3)), r2 = this.peerDistances[this.peerDistances.length - 1].distance;
          for (const i2 of t2) {
            const e3 = n(this.originDhtKey, i2);
            if (n.compare(e3, r2) < 0)
              return true;
          }
          return false;
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(1060), i = r(21);
      e.exports = class {
        constructor(e2, t2) {
          if (this.run = e2, this.queryFunc = i.withTimeout(t2, 3e4), !this.queryFunc)
            throw new Error("Path requires a `queryFn` to be specified");
          if (typeof this.queryFunc != "function")
            throw new Error("Path expected `queryFn` to be a function. Got " + typeof this.queryFunc);
          this.initialPeers = [], this.peersToQuery = null;
        }
        addInitialPeer(e2) {
          this.initialPeers.push(e2);
        }
        async execute() {
          const e2 = await n.fromKey(this.run.query.key);
          this.peersToQuery = e2, await Promise.all(this.initialPeers.map((e3) => this.addPeerToQuery(e3))), await this.run.workerQueue(this);
        }
        async addPeerToQuery(e2) {
          this.run.query.dht._isSelf(e2) || this.run.peersSeen.has(e2.toB58String()) || await this.peersToQuery.enqueue(e2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(1061), i = r(211), s = r(1), o = r(21), a = s("libp2p:dht:peer-queue");
      class c {
        static async fromPeerId(e2) {
          const t2 = await o.convertPeerId(e2);
          return new c(t2);
        }
        static async fromKey(e2) {
          const t2 = await o.convertBuffer(e2);
          return new c(t2);
        }
        constructor(e2) {
          a("create: %b", e2), this.from = e2, this.heap = new n(o.xorCompare);
        }
        async enqueue(e2) {
          a("enqueue %s", e2.toB58String());
          const t2 = await o.convertPeerId(e2), r2 = {id: e2, distance: i(this.from, t2)};
          this.heap.push(r2);
        }
        dequeue() {
          const e2 = this.heap.pop();
          return a("dequeue %s", e2.id.toB58String()), e2.id;
        }
        get length() {
          return this.heap.size();
        }
      }
      e.exports = c;
    }, function(e, t, r) {
      "use strict";
      e.exports = r(1062);
    }, function(e, t, r) {
      "use strict";
      var n, i, s;
      (function() {
        var r2, o, a, c, u, h, f, d, l, p, y, g, b, m, v;
        a = Math.floor, p = Math.min, o = function(e2, t2) {
          return e2 < t2 ? -1 : e2 > t2 ? 1 : 0;
        }, l = function(e2, t2, r3, n2, i2) {
          var s2;
          if (r3 == null && (r3 = 0), i2 == null && (i2 = o), r3 < 0)
            throw new Error("lo must be non-negative");
          for (n2 == null && (n2 = e2.length); r3 < n2; )
            i2(t2, e2[s2 = a((r3 + n2) / 2)]) < 0 ? n2 = s2 : r3 = s2 + 1;
          return [].splice.apply(e2, [r3, r3 - r3].concat(t2)), t2;
        }, h = function(e2, t2, r3) {
          return r3 == null && (r3 = o), e2.push(t2), m(e2, 0, e2.length - 1, r3);
        }, u = function(e2, t2) {
          var r3, n2;
          return t2 == null && (t2 = o), r3 = e2.pop(), e2.length ? (n2 = e2[0], e2[0] = r3, v(e2, 0, t2)) : n2 = r3, n2;
        }, d = function(e2, t2, r3) {
          var n2;
          return r3 == null && (r3 = o), n2 = e2[0], e2[0] = t2, v(e2, 0, r3), n2;
        }, f = function(e2, t2, r3) {
          var n2;
          return r3 == null && (r3 = o), e2.length && r3(e2[0], t2) < 0 && (t2 = (n2 = [e2[0], t2])[0], e2[0] = n2[1], v(e2, 0, r3)), t2;
        }, c = function(e2, t2) {
          var r3, n2, i2, s2, c2, u2;
          for (t2 == null && (t2 = o), c2 = [], n2 = 0, i2 = (s2 = function() {
            u2 = [];
            for (var t3 = 0, r4 = a(e2.length / 2); 0 <= r4 ? t3 < r4 : t3 > r4; 0 <= r4 ? t3++ : t3--)
              u2.push(t3);
            return u2;
          }.apply(this).reverse()).length; n2 < i2; n2++)
            r3 = s2[n2], c2.push(v(e2, r3, t2));
          return c2;
        }, b = function(e2, t2, r3) {
          var n2;
          if (r3 == null && (r3 = o), (n2 = e2.indexOf(t2)) !== -1)
            return m(e2, 0, n2, r3), v(e2, n2, r3);
        }, y = function(e2, t2, r3) {
          var n2, i2, s2, a2, u2;
          if (r3 == null && (r3 = o), !(i2 = e2.slice(0, t2)).length)
            return i2;
          for (c(i2, r3), s2 = 0, a2 = (u2 = e2.slice(t2)).length; s2 < a2; s2++)
            n2 = u2[s2], f(i2, n2, r3);
          return i2.sort(r3).reverse();
        }, g = function(e2, t2, r3) {
          var n2, i2, s2, a2, h2, f2, d2, y2, g2;
          if (r3 == null && (r3 = o), 10 * t2 <= e2.length) {
            if (!(s2 = e2.slice(0, t2).sort(r3)).length)
              return s2;
            for (i2 = s2[s2.length - 1], a2 = 0, f2 = (d2 = e2.slice(t2)).length; a2 < f2; a2++)
              r3(n2 = d2[a2], i2) < 0 && (l(s2, n2, 0, null, r3), s2.pop(), i2 = s2[s2.length - 1]);
            return s2;
          }
          for (c(e2, r3), g2 = [], h2 = 0, y2 = p(t2, e2.length); 0 <= y2 ? h2 < y2 : h2 > y2; 0 <= y2 ? ++h2 : --h2)
            g2.push(u(e2, r3));
          return g2;
        }, m = function(e2, t2, r3, n2) {
          var i2, s2, a2;
          for (n2 == null && (n2 = o), i2 = e2[r3]; r3 > t2 && n2(i2, s2 = e2[a2 = r3 - 1 >> 1]) < 0; )
            e2[r3] = s2, r3 = a2;
          return e2[r3] = i2;
        }, v = function(e2, t2, r3) {
          var n2, i2, s2, a2, c2;
          for (r3 == null && (r3 = o), i2 = e2.length, c2 = t2, s2 = e2[t2], n2 = 2 * t2 + 1; n2 < i2; )
            (a2 = n2 + 1) < i2 && !(r3(e2[n2], e2[a2]) < 0) && (n2 = a2), e2[t2] = e2[n2], n2 = 2 * (t2 = n2) + 1;
          return e2[t2] = s2, m(e2, c2, t2, r3);
        }, r2 = function() {
          function e2(e3) {
            this.cmp = e3 != null ? e3 : o, this.nodes = [];
          }
          return e2.push = h, e2.pop = u, e2.replace = d, e2.pushpop = f, e2.heapify = c, e2.updateItem = b, e2.nlargest = y, e2.nsmallest = g, e2.prototype.push = function(e3) {
            return h(this.nodes, e3, this.cmp);
          }, e2.prototype.pop = function() {
            return u(this.nodes, this.cmp);
          }, e2.prototype.peek = function() {
            return this.nodes[0];
          }, e2.prototype.contains = function(e3) {
            return this.nodes.indexOf(e3) !== -1;
          }, e2.prototype.replace = function(e3) {
            return d(this.nodes, e3, this.cmp);
          }, e2.prototype.pushpop = function(e3) {
            return f(this.nodes, e3, this.cmp);
          }, e2.prototype.heapify = function() {
            return c(this.nodes, this.cmp);
          }, e2.prototype.updateItem = function(e3) {
            return b(this.nodes, e3, this.cmp);
          }, e2.prototype.clear = function() {
            return this.nodes = [];
          }, e2.prototype.empty = function() {
            return this.nodes.length === 0;
          }, e2.prototype.size = function() {
            return this.nodes.length;
          }, e2.prototype.clone = function() {
            var t2;
            return (t2 = new e2()).nodes = this.nodes.slice(0), t2;
          }, e2.prototype.toArray = function() {
            return this.nodes.slice(0);
          }, e2.prototype.insert = e2.prototype.push, e2.prototype.top = e2.prototype.peek, e2.prototype.front = e2.prototype.peek, e2.prototype.has = e2.prototype.contains, e2.prototype.copy = e2.prototype.clone, e2;
        }(), i = [], (s = typeof (n = function() {
          return r2;
        }) == "function" ? n.apply(t, i) : n) === void 0 || (e.exports = s);
      }).call(void 0);
    }, function(e, t, r) {
      "use strict";
      const n = r(1064), i = r(1077);
      e.exports = class {
        constructor(e2, t2, r2, n2) {
          this.dht = e2, this.run = t2, this.path = r2, this.log = n2, this.concurrency = this.dht.concurrency, this.queue = this.setupQueue(), this.execution = null;
        }
        setupQueue() {
          const e2 = n((e3, t2) => {
            i(this.processNext(e3))(t2);
          }, this.concurrency);
          return e2.error = (e3) => {
            this.log.error("queue", e3), this.stop(e3);
          }, e2.drain = () => {
            this.log("queue:drain"), this.stop();
          }, e2.unsaturated = () => {
            this.running && this.fill();
          }, e2.buffer = 0, e2;
        }
        stop(e2) {
          this.running && (this.running = false, this.queue.kill(), this.log("worker:stop, %d workers still running", this.run.workers.filter((e3) => e3.running).length), e2 ? this.execution.reject(e2) : this.execution.resolve());
        }
        async execute() {
          this.running = true, this.execution = {};
          const e2 = new Promise((e3, t2) => Object.assign(this.execution, {resolve: e3, reject: t2}));
          this.fill(), await e2;
        }
        fill() {
          for (; this.queue.running() + this.queue.length() < this.concurrency && this.path.peersToQuery.length > 0; )
            this.queue.push(this.path.peersToQuery.dequeue());
        }
        async processNext(e2) {
          if (!this.running)
            return;
          if (this.run.peersSeen.has(e2.toB58String()))
            return;
          let t2, r2, n2, i2;
          try {
            t2 = await this.run.continueQuerying(this);
          } catch (s) {
            r2 = s;
          }
          if (this.running) {
            if (r2)
              throw r2;
            if (t2) {
              if (!this.run.peersSeen.has(e2.toB58String())) {
                this.run.peersSeen.add(e2.toB58String()), this.log("queue:work");
                try {
                  n2 = await this.execQuery(e2);
                } catch (s) {
                  i2 = s;
                }
                if (this.running) {
                  if (this.log("queue:work:done", i2, n2), i2)
                    throw i2;
                  if (n2 && n2.queryComplete)
                    return this.log("query:complete"), void this.run.stop();
                  n2 && n2.pathComplete && this.stop();
                }
              }
            } else
              this.stop();
          }
        }
        async execQuery(e2) {
          let t2, r2;
          try {
            t2 = await this.path.queryFunc(e2);
          } catch (n2) {
            r2 = n2;
          }
          if (this.running)
            if (r2)
              this.run.errors.push(r2);
            else {
              if (await this.run.peersQueried.add(e2), t2.pathComplete || t2.queryComplete)
                return this.path.res = t2, {pathComplete: t2.pathComplete, queryComplete: t2.queryComplete};
              t2.closerPeers && t2.closerPeers.length > 0 && await Promise.all(t2.closerPeers.map(async (e3) => {
                this.dht._isSelf(e3.id) || (this.dht._peerDiscovered(e3.id, e3.multiaddrs), await this.path.addPeerToQuery(e3.id));
              }));
            }
        }
      };
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.default = function(e2, t2) {
        var r2 = (0, i.default)(e2);
        return (0, n.default)(function(e3, t3) {
          r2(e3[0], t3);
        }, t2, 1);
      };
      var n = s(r(1065)), i = s(r(383));
      function s(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      }
      e.exports = t.default;
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.default = function(e2, t2, r2) {
        if (t2 == null)
          t2 = 1;
        else if (t2 === 0)
          throw new Error("Concurrency must not be zero");
        var h2 = (0, u.default)(e2), f = 0, d = [], l = false;
        function p(e3, t3, r3) {
          if (r3 != null && typeof r3 != "function")
            throw new Error("task callback must be a function");
          if (b.started = true, (0, i.default)(e3) || (e3 = [e3]), e3.length === 0 && b.idle())
            return (0, a.default)(function() {
              b.drain();
            });
          for (var n2 = 0, o2 = e3.length; n2 < o2; n2++) {
            var c2 = {data: e3[n2], callback: r3 || s.default};
            t3 ? b._tasks.unshift(c2) : b._tasks.push(c2);
          }
          l || (l = true, (0, a.default)(function() {
            l = false, b.process();
          }));
        }
        function y(e3) {
          return function(t3) {
            f -= 1;
            for (var r3 = 0, i2 = e3.length; r3 < i2; r3++) {
              var s2 = e3[r3], o2 = (0, n.default)(d, s2, 0);
              o2 === 0 ? d.shift() : o2 > 0 && d.splice(o2, 1), s2.callback.apply(s2, arguments), t3 != null && b.error(t3, s2.data);
            }
            f <= b.concurrency - b.buffer && b.unsaturated(), b.idle() && b.drain(), b.process();
          };
        }
        var g = false, b = {_tasks: new c.default(), concurrency: t2, payload: r2, saturated: s.default, unsaturated: s.default, buffer: t2 / 4, empty: s.default, drain: s.default, error: s.default, started: false, paused: false, push: function(e3, t3) {
          p(e3, false, t3);
        }, kill: function() {
          b.drain = s.default, b._tasks.empty();
        }, unshift: function(e3, t3) {
          p(e3, true, t3);
        }, remove: function(e3) {
          b._tasks.remove(e3);
        }, process: function() {
          if (!g) {
            for (g = true; !b.paused && f < b.concurrency && b._tasks.length; ) {
              var e3 = [], t3 = [], r3 = b._tasks.length;
              b.payload && (r3 = Math.min(r3, b.payload));
              for (var n2 = 0; n2 < r3; n2++) {
                var i2 = b._tasks.shift();
                e3.push(i2), d.push(i2), t3.push(i2.data);
              }
              f += 1, b._tasks.length === 0 && b.empty(), f === b.concurrency && b.saturated();
              var s2 = (0, o.default)(y(e3));
              h2(t3, s2);
            }
            g = false;
          }
        }, length: function() {
          return b._tasks.length;
        }, running: function() {
          return f;
        }, workersList: function() {
          return d;
        }, idle: function() {
          return b._tasks.length + f === 0;
        }, pause: function() {
          b.paused = true;
        }, resume: function() {
          b.paused !== false && (b.paused = false, (0, a.default)(b.process));
        }};
        return b;
      };
      var n = h(r(1066)), i = h(r(1070)), s = h(r(1071)), o = h(r(1072)), a = h(r(381)), c = h(r(1073)), u = h(r(383));
      function h(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      }
      e.exports = t.default;
    }, function(e, t, r) {
      "use strict";
      var n = r(1067), i = r(1068), s = r(1069);
      e.exports = function(e2, t2, r2) {
        return t2 == t2 ? s(e2, t2, r2) : n(e2, i, r2);
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2, r2, n) {
        for (var i = e2.length, s = r2 + (n ? 1 : -1); n ? s-- : ++s < i; )
          if (t2(e2[s], s, e2))
            return s;
        return -1;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2) {
        return e2 != e2;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2, r2) {
        for (var n = r2 - 1, i = e2.length; ++n < i; )
          if (e2[n] === t2)
            return n;
        return -1;
      };
    }, function(e, t, r) {
      "use strict";
      var n = Array.isArray;
      e.exports = n;
    }, function(e, t, r) {
      "use strict";
      e.exports = function() {
      };
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.default = function(e2) {
        return function() {
          if (e2 === null)
            throw new Error("Callback was already called.");
          var t2 = e2;
          e2 = null, t2.apply(this, arguments);
        };
      }, e.exports = t.default;
    }, function(e, t, r) {
      "use strict";
      function n() {
        this.head = this.tail = null, this.length = 0;
      }
      function i(e2, t2) {
        e2.length = 1, e2.head = e2.tail = t2;
      }
      Object.defineProperty(t, "__esModule", {value: true}), t.default = n, n.prototype.removeLink = function(e2) {
        return e2.prev ? e2.prev.next = e2.next : this.head = e2.next, e2.next ? e2.next.prev = e2.prev : this.tail = e2.prev, e2.prev = e2.next = null, this.length -= 1, e2;
      }, n.prototype.empty = function() {
        for (; this.head; )
          this.shift();
        return this;
      }, n.prototype.insertAfter = function(e2, t2) {
        t2.prev = e2, t2.next = e2.next, e2.next ? e2.next.prev = t2 : this.tail = t2, e2.next = t2, this.length += 1;
      }, n.prototype.insertBefore = function(e2, t2) {
        t2.prev = e2.prev, t2.next = e2, e2.prev ? e2.prev.next = t2 : this.head = t2, e2.prev = t2, this.length += 1;
      }, n.prototype.unshift = function(e2) {
        this.head ? this.insertBefore(this.head, e2) : i(this, e2);
      }, n.prototype.push = function(e2) {
        this.tail ? this.insertAfter(this.tail, e2) : i(this, e2);
      }, n.prototype.shift = function() {
        return this.head && this.removeLink(this.head);
      }, n.prototype.pop = function() {
        return this.tail && this.removeLink(this.tail);
      }, n.prototype.toArray = function() {
        for (var e2 = Array(this.length), t2 = this.head, r2 = 0; r2 < this.length; r2++)
          e2[r2] = t2.data, t2 = t2.next;
        return e2;
      }, n.prototype.remove = function(e2) {
        for (var t2 = this.head; t2; ) {
          var r2 = t2.next;
          e2(t2) && this.removeLink(t2), t2 = r2;
        }
        return this;
      }, e.exports = t.default;
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.default = function(e2) {
        return (0, i.default)(function(t2, r2) {
          var i2;
          try {
            i2 = e2.apply(this, t2);
          } catch (s2) {
            return r2(s2);
          }
          (0, n.default)(i2) && typeof i2.then == "function" ? i2.then(function(e3) {
            a(r2, null, e3);
          }, function(e3) {
            a(r2, e3.message ? e3 : new Error(e3));
          }) : r2(null, i2);
        });
      };
      var n = o(r(1075)), i = o(r(1076)), s = o(r(381));
      function o(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      }
      function a(e2, t2, r2) {
        try {
          e2(t2, r2);
        } catch (n2) {
          (0, s.default)(c, n2);
        }
      }
      function c(e2) {
        throw e2;
      }
      e.exports = t.default;
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2) {
        var t2 = typeof e2;
        return e2 != null && (t2 == "object" || t2 == "function");
      };
    }, function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", {value: true}), t.default = function(e2) {
        return function() {
          var t2 = (0, s.default)(arguments), r2 = t2.pop();
          e2.call(this, t2, r2);
        };
      };
      var n, i = r(382), s = (n = i) && n.__esModule ? n : {default: n};
      e.exports = t.default;
    }, function(e, t, r) {
      "use strict";
      var n = r(1078), i = r(1079);
      e.exports = function(e2) {
        if (!n(e2.then))
          throw new TypeError("Expected a promise");
        return function(t2) {
          e2.then(function(e3) {
            i(t2, null, e3);
          }, function(e3) {
            i(t2, e3);
          });
        };
      };
    }, function(e, t, r) {
      "use strict";
      var n = Object.prototype.toString;
      e.exports = function(e2) {
        return n.call(e2) === "[object Function]";
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = typeof setImmediate == "function" ? setImmediate : function() {
        var e2 = [].slice.apply(arguments);
        e2.splice(1, 0, 0), setTimeout.apply(null, e2);
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(124), s = r(59), o = r(1081), a = r(43), c = r(213), u = r(21);
      e.exports = (e2) => ({async provide(t2) {
        e2._log("provide: %s", t2.toBaseEncodedString());
        const r2 = [];
        await e2.providers.addProvider(t2, e2.peerId);
        const i2 = e2.libp2p ? e2.libp2p.multiaddrs : [], s2 = new a(a.TYPES.ADD_PROVIDER, t2.bytes, 0);
        if (s2.providerPeers = [{id: e2.peerId, multiaddrs: i2}], await u.mapParallel(e2.getClosestPeers(t2.bytes), async (n2) => {
          e2._log("putProvider %s to %s", t2.toBaseEncodedString(), n2.toB58String());
          try {
            await e2.network.sendMessage(n2, s2);
          } catch (i3) {
            r2.push(i3);
          }
        }), r2.length)
          throw n(new Error(`Failed to provide to ${r2.length} of ${e2.kBucketSize} peers`, "ERR_SOME_PROVIDES_FAILED"), {errors: r2});
      }, async *findProviders(t2, r2 = {}) {
        const h = r2.timeout || s.minute, f = r2.maxNumProviders || s.K;
        e2._log("findProviders %s", t2.toBaseEncodedString());
        const d = new o(f);
        if ((await e2.providers.getProviders(t2)).forEach((t3) => {
          const r3 = e2.peerStore.get(t3) || {};
          d.push({id: r3.id || t3, multiaddrs: (r3.addresses || []).map((e3) => e3.multiaddr)});
        }), d.length >= f) {
          for (const e3 of d.toArray())
            yield e3;
          return;
        }
        const l = [], p = new c(e2, t2.bytes, (r3, n2) => {
          const i2 = u.pathSize(f - d.length, n2), s2 = new o(i2);
          return l.push(s2), async (r4) => {
            const n3 = await (async (t3, r5) => {
              const n4 = new a(a.TYPES.GET_PROVIDERS, r5.bytes, 0);
              return e2.network.sendRequest(t3, n4);
            })(r4, t2), o2 = n3.providerPeers;
            return e2._log("(%s) found %s provider entries", e2.peerId.toB58String(), o2.length), o2.forEach((e3) => {
              s2.push({id: e3.id});
            }), s2.length >= i2 ? {pathComplete: true} : {closerPeers: n3.closerPeers};
          };
        }), y = e2.routingTable.closestPeers(t2.bytes, e2.kBucketSize);
        try {
          await i(p.run(y), h);
        } catch (g) {
          if (g.name !== i.TimeoutError.name)
            throw g;
        } finally {
          p.stop();
        }
        if (l.forEach((e3) => {
          e3.toArray().forEach((e4) => {
            d.push(e4);
          });
        }), d.length === 0)
          throw n(new Error("no providers found"), "ERR_NOT_FOUND");
        for (const e3 of d.toArray())
          yield e3;
      }});
    }, function(e, t, r) {
      "use strict";
      const n = r(1082);
      e.exports = class extends n {
        constructor(e2) {
          super(), this.limit = e2;
        }
        push(e2) {
          return this.length < this.limit && super.push(e2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = class {
        constructor() {
          this.list = [];
        }
        push(e2) {
          return !this.has(e2.id) && (this.list.push(e2), true);
        }
        has(e2) {
          const t2 = this.list.find((t3) => t3.id.isEqual(e2));
          return Boolean(t2);
        }
        toArray() {
          return this.list.slice();
        }
        pop() {
          return this.list.pop();
        }
        get length() {
          return this.list.length;
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(0), i = r(124), s = r(7), o = r(39), a = r(59), c = r(43), u = r(213), h = r(21);
      e.exports = (e2) => {
        const t2 = async (t3) => {
          const r2 = h.keyForPublicKey(t3), i2 = await (async (t4, r3) => {
            const n2 = new c(c.TYPES.GET_VALUE, r3, 0);
            return e2.network.sendRequest(t4, n2);
          })(t3, r2);
          if (!i2.record || !i2.record.value)
            throw n("Node not responding with its public key: " + t3.toB58String(), "ERR_INVALID_RECORD");
          const o2 = s.createFromPubKey(i2.record.value);
          if (!o2.isEqual(t3))
            throw n("public key does not match id", "ERR_PUBLIC_KEY_DOES_NOT_MATCH_ID");
          return o2.pubKey;
        };
        return {async _findPeerSingle(t3, r2) {
          e2._log("findPeerSingle %s", t3.toB58String());
          const n2 = new c(c.TYPES.FIND_NODE, r2.id, 0);
          return e2.network.sendRequest(t3, n2);
        }, async findPeer(t3, r2 = {}) {
          r2.timeout = r2.timeout || a.minute, e2._log("findPeer %s", t3.toB58String());
          const s2 = await (async (t4) => {
            e2._log("findPeerLocal %s", t4.toB58String());
            const r3 = await e2.routingTable.find(t4), n2 = r3 && e2.peerStore.get(r3);
            if (n2)
              return {id: n2.id, multiaddrs: n2.addresses.map((e3) => e3.multiaddr)};
          })(t3);
          if (s2 != null)
            return e2._log("found local"), s2;
          const o2 = await h.convertPeerId(t3), c2 = e2.routingTable.closestPeers(o2, e2.kBucketSize);
          if (c2.length === 0)
            throw n(new Error("Peer lookup failed"), "ERR_LOOKUP_FAILED");
          if (c2.find((e3) => e3.isEqual(t3))) {
            const r3 = e2.peerStore.get(t3);
            if (r3)
              return e2._log("found in peerStore"), {id: r3.id, multiaddrs: r3.addresses.map((e3) => e3.multiaddr)};
          }
          const f = new u(e2, t3.id, () => async (e3) => {
            const r3 = await this._findPeerSingle(e3, t3), n2 = r3.closerPeers.find((e4) => e4.id.isEqual(t3));
            return n2 ? {peer: n2, queryComplete: true} : {closerPeers: r3.closerPeers};
          });
          let d, l;
          try {
            l = await i(f.run(c2), r2.timeout);
          } catch (g) {
            d = g;
          }
          if (f.stop(), d)
            throw d;
          let p = false;
          if (l.paths.forEach((t4) => {
            t4.success && (p = true, e2.peerStore.addressBook.add(t4.peer.id, t4.peer.multiaddrs));
          }), e2._log("findPeer %s: %s", t3.toB58String(), p), !p)
            throw n(new Error("No peer found"), "ERR_NOT_FOUND");
          const y = e2.peerStore.get(t3);
          return {id: y.id, multiaddrs: y.addresses.map((e3) => e3.multiaddr)};
        }, async *getClosestPeers(t3, r2 = {shallow: false}) {
          e2._log("getClosestPeers to %b", t3);
          const n2 = await h.convertBuffer(t3), i2 = e2.routingTable.closestPeers(n2, e2.kBucketSize), o2 = new u(e2, t3, () => async (n3) => ({closerPeers: await (async (t4, r3) => {
            e2._log("closerPeersSingle %b from %s", t4, r3.toB58String());
            return (await e2.peerRouting._findPeerSingle(r3, new s(t4))).closerPeers.filter((t5) => !e2._isSelf(t5.id)).map((t5) => (e2.peerStore.addressBook.add(t5.id, t5.multiaddrs), t5));
          })(t3, n3), pathComplete: !!r2.shallow || void 0})), a2 = await o2.run(i2);
          if (!a2 || !a2.finalSet)
            return [];
          const c2 = await h.sortClosestPeers(Array.from(a2.finalSet), n2);
          for (const s2 of c2.slice(0, e2.kBucketSize))
            yield s2;
        }, async getPublicKey(r2) {
          e2._log("getPublicKey %s", r2.toB58String());
          const n2 = e2.peerStore.get(r2);
          if (n2 && n2.id.pubKey)
            return e2._log("getPublicKey: found local copy"), n2.id.pubKey;
          let i2;
          try {
            i2 = await t2(r2);
          } catch (c2) {
            const t3 = h.keyForPublicKey(r2), n3 = await e2.get(t3);
            i2 = o.keys.unmarshalPublicKey(n3);
          }
          n2.id = new s(r2.id, null, i2);
          const a2 = n2.addresses.map((e3) => e3.multiaddr);
          return e2.peerStore.addressBook.add(n2.id, a2), e2.peerStore.keyBook.set(n2.id, i2), i2;
        }};
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(107), i = r(1085), s = r(7), {Key: o} = r(9), {default: a} = r(82), c = r(59), u = r(21);
      function h(e2) {
        return e2 = typeof e2 == "string" ? e2 : u.encodeBase32(e2.bytes), c.PROVIDERS_KEY_PREFIX + e2;
      }
      function f(e2) {
        const t2 = e2.toString().split("/");
        if (t2.length !== 4)
          throw new Error("incorrectly formatted provider entry key in datastore: " + e2);
        return {cid: t2[2], peerId: t2[3]};
      }
      function d(e2) {
        return i.decode(e2);
      }
      e.exports = class {
        constructor(e2, t2, r2) {
          this.datastore = e2, this._log = u.logger(t2, "providers"), this.cleanupInterval = c.PROVIDERS_CLEANUP_INTERVAL, this.provideValidity = c.PROVIDERS_VALIDITY, this.lruCacheSize = r2 || c.PROVIDERS_LRU_CACHE_SIZE, this.providers = n(this.lruCacheSize), this.syncQueue = new a({concurrency: 1});
        }
        start() {
          this._cleaner = setInterval(() => this._cleanup(), this.cleanupInterval);
        }
        stop() {
          clearInterval(this._cleaner), this._cleaner = null;
        }
        _cleanup() {
          return this.syncQueue.add(async () => {
            this._log("start cleanup");
            const e2 = Date.now();
            let t2 = 0, r2 = 0;
            const n2 = new Map(), i2 = this.datastore.batch(), s2 = this.datastore.query({prefix: c.PROVIDERS_KEY_PREFIX});
            for await (const a2 of s2)
              try {
                const {cid: e3, peerId: s3} = f(a2.key), o2 = d(a2.value), c2 = Date.now(), u2 = c2 - o2, h2 = u2 > this.provideValidity;
                if (this._log("comparing: %d - %d = %d > %d %s", c2, o2, u2, this.provideValidity, h2 ? "(expired)" : ""), h2) {
                  r2++, i2.delete(a2.key);
                  const t3 = n2.get(e3) || new Set();
                  t3.add(s3), n2.set(e3, t3);
                }
                t2++;
              } catch (o2) {
                this._log.error(o2.message);
              }
            this._log("deleting %d / %d entries", r2, t2), n2.size && await i2.commit();
            for (const [a2, c2] of n2) {
              const e3 = h(a2), t3 = this.providers.get(e3);
              if (t3) {
                for (const e4 of c2)
                  t3.delete(e4);
                t3.size === 0 ? this.providers.remove(e3) : this.providers.set(e3, t3);
              }
            }
            this._log("Cleanup successful (%dms)", Date.now() - e2);
          });
        }
        async _getProvidersMap(e2) {
          const t2 = h(e2);
          let r2 = this.providers.get(t2);
          return r2 || (r2 = await async function(e3, t3) {
            const r3 = new Map(), n2 = e3.query({prefix: h(t3)});
            for await (const i2 of n2) {
              const {peerId: e4} = f(i2.key);
              r3.set(e4, d(i2.value));
            }
            return r3;
          }(this.datastore, e2), this.providers.set(t2, r2)), r2;
        }
        async addProvider(e2, t2) {
          return this.syncQueue.add(async () => {
            this._log("addProvider %s", e2.toBaseEncodedString());
            const r2 = await this._getProvidersMap(e2);
            this._log("loaded %s provs", r2.size);
            const n2 = Date.now();
            r2.set(u.encodeBase32(t2.id), n2);
            const s2 = h(e2);
            return this.providers.set(s2, r2), async function(e3, t3, r3, n3) {
              const s3 = [h(t3), "/", u.encodeBase32(r3.id)].join(""), a2 = new o(s3), c2 = Uint8Array.from(i.encode(n3));
              return e3.put(a2, c2);
            }(this.datastore, e2, t2, n2);
          });
        }
        async getProviders(e2) {
          return this.syncQueue.add(async () => {
            this._log("getProviders %s", e2.toBaseEncodedString());
            return [...(await this._getProvidersMap(e2)).keys()].map((e3) => new s(u.decodeBase32(e3)));
          });
        }
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = {encode: r(1086), decode: r(1087), encodingLength: r(1088)};
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2, i) {
        r2 = r2 || [];
        var s = i = i || 0;
        for (; t2 >= n; )
          r2[i++] = 255 & t2 | 128, t2 /= 128;
        for (; -128 & t2; )
          r2[i++] = 255 & t2 | 128, t2 >>>= 7;
        return r2[i] = 0 | t2, e2.bytes = i - s + 1, r2;
      };
      var n = Math.pow(2, 31);
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2) {
        var n, i = 0, s = 0, o = r2 = r2 || 0, a = t2.length;
        do {
          if (o >= a)
            throw e2.bytes = 0, new RangeError("Could not decode varint");
          n = t2[o++], i += s < 28 ? (127 & n) << s : (127 & n) * Math.pow(2, s), s += 7;
        } while (n >= 128);
        return e2.bytes = o - r2, i;
      };
    }, function(e, t, r) {
      "use strict";
      var n = Math.pow(2, 7), i = Math.pow(2, 14), s = Math.pow(2, 21), o = Math.pow(2, 28), a = Math.pow(2, 35), c = Math.pow(2, 42), u = Math.pow(2, 49), h = Math.pow(2, 56), f = Math.pow(2, 63);
      e.exports = function(e2) {
        return e2 < n ? 1 : e2 < i ? 2 : e2 < s ? 3 : e2 < o ? 4 : e2 < a ? 5 : e2 < c ? 6 : e2 < u ? 7 : e2 < h ? 8 : e2 < f ? 9 : 10;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(39), i = r(15), s = r(7), o = r(47), a = r(0), c = r(1090), u = r(59), {logger: h} = r(21);
      e.exports = class {
        constructor(e2, t2) {
          if (!e2)
            throw new Error("Random Walk needs an instance of the Kademlia DHT");
          this._kadDHT = e2, this._options = {...u.defaultRandomWalk, ...t2}, this.log = h(e2.peerId, "random-walk"), this._timeoutId = void 0;
        }
        start() {
          !this._timeoutId && this._options.enabled && (this._timeoutId = setTimeout(() => {
            this._runPeriodically();
          }, this._options.delay));
        }
        stop() {
          this._timeoutId && (clearTimeout(this._timeoutId), this._timeoutId = void 0), this._controller && this._controller.abort();
        }
        async _runPeriodically() {
          for (; this._timeoutId; ) {
            try {
              await this._walk(this._options.queriesPerPeriod, this._options.timeout);
            } catch (e2) {
              this._kadDHT._log.error("random-walk:error", e2);
            }
            await new Promise((e2) => {
              this._timeoutId = setTimeout(e2, this._options.interval);
            });
          }
        }
        async _walk(e2, t2) {
          this.log("start"), this._controller = new o();
          try {
            await c(e2, async (e3) => {
              this.log("running query %d", e3);
              try {
                const e4 = await this._randomPeerId();
                if (!this._controller)
                  return;
                await this._query(e4, {timeout: t2, signal: this._controller.signal});
              } catch (r2) {
                if (r2 && r2.code !== "ETIMEDOUT")
                  throw this.log.error("query %d finished with error", e3, r2), r2;
              }
              this.log("finished query %d", e3);
            });
          } finally {
            this._controller = null, this.log("finished queries");
          }
        }
        async _query(e2, t2) {
          let r2;
          this.log("query:%s", e2.toB58String());
          try {
            r2 = await this._kadDHT.findPeer(e2, t2);
          } catch (n2) {
            if (n2 && n2.code === "ERR_NOT_FOUND")
              return;
            throw n2;
          }
          throw this.log("query:found", r2), a(`random-walk: ACTUALLY FOUND PEER: ${r2}, ${e2.toB58String()}`, "ERR_FOUND_RANDOM_PEER");
        }
        async _randomPeerId() {
          const e2 = await i(n.randomBytes(16), "sha2-256");
          return new s(e2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(212), i = async (e2, t2, r2) => n(new Array(e2).fill(), (e3, r3) => t2(r3), r2);
      e.exports = i, e.exports.default = i;
    }, function(e, t, r) {
      "use strict";
      e.exports = class {
        constructor() {
          this.queries = new Set(), this.running = false;
        }
        queryStarted(e2) {
          this.queries.add(e2);
        }
        queryCompleted(e2) {
          this.queries.delete(e2);
        }
        start() {
          this.running = true;
        }
        stop() {
          this.running = false;
          for (const e2 of this.queries)
            e2.stop();
          this.queries.clear();
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(7), i = r(11), s = r(60), {EventEmitter: o} = r(14), a = r(1), c = a("libp2p:bootstrap");
      c.error = a("libp2p:bootstrap:error");
      (e.exports = class extends o {
        constructor(e2 = {}) {
          if (!e2.list || !e2.list.length)
            throw new Error("Bootstrap requires a list of peer addresses");
          super(), this._list = e2.list, this._interval = e2.interval || 1e4, this._timer = null;
        }
        start() {
          this._timer || (this._timer = setInterval(() => this._discoverBootstrapPeers(), this._interval), this._discoverBootstrapPeers());
        }
        _discoverBootstrapPeers() {
          this._timer && this._list.forEach((e2) => {
            if (!s.P2P.matches(e2))
              return c.error("Invalid multiaddr");
            const t2 = i(e2), r2 = n.createFromB58String(t2.getPeerId());
            try {
              this.emit("peer", {id: r2, multiaddrs: [t2]});
            } catch (o2) {
              c.error("Invalid bootstrap peer id", o2);
            }
          });
        }
        stop() {
          clearInterval(this._timer), this._timer = null;
        }
      }).tag = "bootstrap";
    }, function(e, t, r) {
      "use strict";
      const n = r(1094), i = r(321), s = r(11), o = r(0);
      class a {
        constructor(e2, t2, r2) {
          this.peerId = e2, this.libp2p = t2, this.bitswap = r2;
        }
        static async start({peerId: e2, repo: t2, print: r2, options: s2}) {
          t2.closed && await t2.open();
          const o2 = await t2.config.getAll(), u2 = i({options: s2, repo: t2, peerId: e2, multiaddrs: c(e2, o2), config: o2, keychainConfig: void 0});
          u2.keychain && await u2.loadKeychain(), await u2.start();
          for (const n2 of u2.transportManager.getAddrs())
            r2(`Swarm listening on ${n2}/p2p/${e2.toB58String()}`);
          const h = new n(u2, t2.blocks, {statsEnabled: true});
          return await h.start(), new a(e2, u2, h);
        }
        static async stop(e2) {
          await Promise.all([e2.bitswap.stop(), e2.libp2p.stop()]);
        }
      }
      e.exports = a;
      const c = (e2, t2) => {
        const r2 = e2.toB58String(), n2 = [], i2 = t2.Addresses && t2.Addresses.Swarm || [];
        for (const a2 of i2) {
          let e3 = s(a2);
          if (e3.protoCodes().includes(u))
            throw o(new Error("websocket-star swarm addresses are not supported. See https://github.com/ipfs/js-ipfs/issues/2779"), "ERR_WEBSOCKET_STAR_SWARM_ADDR_NOT_SUPPORTED");
          const t3 = e3.getPeerId();
          t3 && t3 !== r2 && (e3 = e3.encapsulate("/p2p/" + r2)), n2.push(e3);
        }
        return n2;
      }, u = 479;
    }, function(e, t, r) {
      "use strict";
      const n = r(1095), i = r(1106), s = r(1109), o = r(1114), a = r(46).logger, c = r(1115), u = r(47), h = r(131), f = {statsEnabled: false, statsComputeThrottleTimeout: 1e3, statsComputeThrottleMaxQueueSize: 1e3}, d = ["blocksReceived", "dataReceived", "dupBlksReceived", "dupDataReceived", "blocksSent", "dataSent", "providesBufferLength", "wantListLength", "peerCount"];
      e.exports = class {
        constructor(e2, t2, r2) {
          this._libp2p = e2, this._log = a(this.peerId), this._options = Object.assign({}, f, r2), this._stats = new c(d, {enabled: this._options.statsEnabled, computeThrottleTimeout: this._options.statsComputeThrottleTimeout, computeThrottleMaxQueueSize: this._options.statsComputeThrottleMaxQueueSize}), this.network = new i(e2, this, {}, this._stats), this.blockstore = t2, this.engine = new s(this.peerId, t2, this.network, this._stats), this.wm = new n(this.peerId, this.network, this._stats), this.notifications = new o(this.peerId);
        }
        get peerId() {
          return this._libp2p.peerId;
        }
        async _receiveMessage(e2, t2) {
          try {
            await this.engine.messageReceived(e2, t2);
          } catch (i2) {
            this._log("failed to receive message", t2);
          }
          if (t2.blocks.size === 0)
            return;
          const r2 = Array.from(t2.blocks.values()), n2 = r2.filter((e3) => this.wm.wantlist.contains(e3.cid)).map((e3) => e3.cid);
          this.wm.cancelWants(n2), await Promise.all(r2.map(async (t3) => {
            const r3 = n2.includes(t3.cid);
            await this._handleReceivedBlock(e2, t3, r3);
          }));
        }
        async _handleReceivedBlock(e2, t2, r2) {
          this._log("received block");
          const n2 = await this.blockstore.has(t2.cid);
          this._updateReceiveCounters(e2.toB58String(), t2, n2), r2 && await this.put(t2);
        }
        _updateReceiveCounters(e2, t2, r2) {
          this._stats.push(e2, "blocksReceived", 1), this._stats.push(e2, "dataReceived", t2.data.length), r2 && (this._stats.push(e2, "dupBlksReceived", 1), this._stats.push(e2, "dupDataReceived", t2.data.length));
        }
        _receiveError(e2) {
          this._log.error("ReceiveError: %s", e2.message);
        }
        _onPeerConnected(e2) {
          this.wm.connected(e2);
        }
        _onPeerDisconnected(e2) {
          this.wm.disconnected(e2), this.engine.peerDisconnected(e2), this._stats.disconnected(e2);
        }
        enableStats() {
          this._stats.enable();
        }
        disableStats() {
          this._stats.disable();
        }
        wantlistForPeer(e2) {
          return this.engine.wantlistForPeer(e2);
        }
        ledgerForPeer(e2) {
          return this.engine.ledgerForPeer(e2);
        }
        async get(e2, t2 = {}) {
          const r2 = (e3, t3) => (this.wm.wantBlocks([e3], t3), this.notifications.wantBlock(e3, t3));
          let n2 = false;
          const i2 = new u(), s2 = h([t2.signal, i2.signal]), o2 = await Promise.race([this.notifications.wantBlock(e2, {signal: s2}), (async (e3, t3) => {
            try {
              return await this.blockstore.get(e3, t3);
            } catch (i3) {
              if (i3.code !== "ERR_NOT_FOUND")
                throw i3;
              return n2 || (n2 = true, this.network.findAndConnect(e3).catch((e4) => this._log.error(e4))), r2(e3, t3);
            }
          })(e2, {signal: s2})]);
          return i2.abort(), o2;
        }
        async *getMany(e2, t2 = {}) {
          for await (const r2 of e2)
            yield this.get(r2, t2);
        }
        unwant(e2) {
          Array.isArray(e2) || (e2 = [e2]), this.wm.unwantBlocks(e2), e2.forEach((e3) => this.notifications.unwantBlock(e3));
        }
        cancelWants(e2) {
          Array.isArray(e2) || (e2 = [e2]), this.wm.cancelWants(e2);
        }
        async put(e2) {
          await this.blockstore.put(e2), this._sendHaveBlockNotifications(e2);
        }
        async *putMany(e2) {
          for await (const t2 of this.blockstore.putMany(e2))
            this._sendHaveBlockNotifications(t2), yield t2;
        }
        _sendHaveBlockNotifications(e2) {
          this.notifications.hasBlock(e2), this.engine.receivedBlocks([e2]), this.network.provide(e2.cid).catch((e3) => {
            this._log.error("Failed to provide: %s", e3.message);
          });
        }
        getWantlist() {
          return this.wm.wantlist.entries();
        }
        peers() {
          return this.engine.peers();
        }
        stat() {
          return this._stats;
        }
        start() {
          this.wm.start(), this.network.start(), this.engine.start();
        }
        stop() {
          this._stats.stop(), this.wm.stop(), this.network.stop(), this.engine.stop();
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(98), i = r(125), s = r(126), o = r(1104), a = r(46).logger;
      e.exports = class {
        constructor(e2, t2, r2) {
          this.peers = new Map(), this.wantlist = new i(r2), this.network = t2, this._stats = r2, this._peerId = e2, this._log = a(e2, "want");
        }
        _addEntries(e2, t2, r2) {
          const i2 = e2.map((e3, r3) => new n.Entry(e3, s.kMaxPriority - r3, n.WantType.Block, t2));
          i2.forEach((e3) => {
            e3.cancel ? r2 ? this.wantlist.removeForce(e3.cid) : this.wantlist.remove(e3.cid) : (this._log("adding to wl"), this.wantlist.add(e3.cid, e3.priority));
          });
          for (const n2 of this.peers.values())
            n2.addEntries(i2);
        }
        _startPeerHandler(e2) {
          let t2 = this.peers.get(e2.toB58String());
          if (t2)
            return void t2.refcnt++;
          t2 = new o(this._peerId, e2, this.network);
          const r2 = new n(true);
          for (const n2 of this.wantlist.entries())
            r2.addEntry(n2[1].cid, n2[1].priority);
          return t2.addMessage(r2), this.peers.set(e2.toB58String(), t2), t2;
        }
        _stopPeerHandler(e2) {
          const t2 = this.peers.get(e2.toB58String());
          t2 && (t2.refcnt--, t2.refcnt > 0 || this.peers.delete(e2.toB58String()));
        }
        wantBlocks(e2, t2 = {}) {
          this._addEntries(e2, false), t2 && t2.signal && t2.signal.addEventListener("abort", () => {
            this.cancelWants(e2);
          });
        }
        unwantBlocks(e2) {
          this._log("unwant blocks: %s", e2.length), this._addEntries(e2, true, true);
        }
        cancelWants(e2) {
          this._log("cancel wants: %s", e2.length), this._addEntries(e2, true);
        }
        connectedPeers() {
          return Array.from(this.peers.keys());
        }
        connected(e2) {
          this._startPeerHandler(e2);
        }
        disconnected(e2) {
          this._stopPeerHandler(e2);
        }
        start() {
        }
        stop() {
          this.peers.forEach((e2) => this.disconnected(e2.peerId)), clearInterval(this.timer);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(1097);
      e.exports = (e2) => {
        if (!(e2 instanceof Uint8Array))
          throw new Error("arg needs to be a Uint8Array");
        const t2 = [];
        for (; e2.length > 0; ) {
          const r2 = n.decode(e2);
          t2.push(r2), e2 = e2.slice(n.decode.bytes);
        }
        return t2;
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = {encode: r(1098), decode: r(1099), encodingLength: r(1100)};
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2, i) {
        r2 = r2 || [];
        var s = i = i || 0;
        for (; t2 >= n; )
          r2[i++] = 255 & t2 | 128, t2 /= 128;
        for (; -128 & t2; )
          r2[i++] = 255 & t2 | 128, t2 >>>= 7;
        return r2[i] = 0 | t2, e2.bytes = i - s + 1, r2;
      };
      var n = Math.pow(2, 31);
    }, function(e, t, r) {
      "use strict";
      e.exports = function e2(t2, r2) {
        var n, i = 0, s = 0, o = r2 = r2 || 0, a = t2.length;
        do {
          if (o >= a)
            throw e2.bytes = 0, new RangeError("Could not decode varint");
          n = t2[o++], i += s < 28 ? (127 & n) << s : (127 & n) * Math.pow(2, s), s += 7;
        } while (n >= 128);
        return e2.bytes = o - r2, i;
      };
    }, function(e, t, r) {
      "use strict";
      var n = Math.pow(2, 7), i = Math.pow(2, 14), s = Math.pow(2, 21), o = Math.pow(2, 28), a = Math.pow(2, 35), c = Math.pow(2, 42), u = Math.pow(2, 49), h = Math.pow(2, 56), f = Math.pow(2, 63);
      e.exports = function(e2) {
        return e2 < n ? 1 : e2 < i ? 2 : e2 < s ? 3 : e2 < o ? 4 : e2 < a ? 5 : e2 < c ? 6 : e2 < u ? 7 : e2 < h ? 8 : e2 < f ? 9 : 10;
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(20);
      e.exports = n("\n  message Message {\n    message Wantlist {\n      enum WantType {\n        Block = 0;\n        Have = 1;\n      }\n\n      message Entry {\n        // changed from string to bytes, it makes a difference in JavaScript\n        optional bytes block = 1;      // the block cid (cidV0 in bitswap 1.0.0, cidV1 in bitswap 1.1.0)\n        optional int32 priority = 2;    // the priority (normalized). default to 1\n        optional bool cancel = 3;       // whether this revokes an entry\n        WantType wantType = 4;         // Note: defaults to enum 0, ie Block\n        bool sendDontHave = 5;        // Note: defaults to false\n      }\n\n      repeated Entry entries = 1;       // a list of wantlist entries\n      optional bool full = 2;           // whether this is the full wantlist. default to false\n    }\n\n    message Block {\n      optional bytes prefix = 1;        // CID prefix (cid version, multicodec and multihash prefix (type + length)\n      optional bytes data = 2;\n    }\n\n    enum BlockPresenceType {\n      Have = 0;\n      DontHave = 1;\n    }\n    message BlockPresence {\n      bytes cid = 1;\n      BlockPresenceType type = 2;\n    }\n\n    optional Wantlist wantlist = 1;\n    repeated bytes blocks = 2;          // used to send Blocks in bitswap 1.0.0\n    repeated Block payload = 3;         // used to send Blocks in bitswap 1.1.0\n    repeated BlockPresence blockPresences = 4;\n    int32 pendingBytes = 5;\n  }\n");
    }, function(e, t, r) {
      "use strict";
      const n = r(125).Entry;
      e.exports = class {
        constructor(e2, t2, r2, i, s) {
          this.entry = new n(e2, t2, r2), this.cancel = Boolean(i), this.sendDontHave = Boolean(s);
        }
        get cid() {
          return this.entry.cid;
        }
        set cid(e2) {
          this.entry.cid = e2;
        }
        get priority() {
          return this.entry.priority;
        }
        set priority(e2) {
          this.entry.priority = e2;
        }
        get wantType() {
          return this.entry.wantType;
        }
        set wantType(e2) {
          this.entry.wantType = e2;
        }
        get [Symbol.toStringTag]() {
          return `BitswapMessageEntry ${this.cid.toString("base58btc")} <cancel: ${this.cancel}, priority: ${this.priority}>`;
        }
        equals(e2) {
          return this.cancel === e2.cancel && this.sendDontHave === e2.sendDontHave && this.wantType === e2.wantType && this.entry.equals(e2.entry);
        }
      };
    }, function(e, t, r) {
      "use strict";
      class n {
        constructor(e2, t2, r2) {
          this._refCounter = 1, this.cid = e2, this.priority = t2 || 1, this.wantType = r2;
        }
        inc() {
          this._refCounter += 1;
        }
        dec() {
          this._refCounter = Math.max(0, this._refCounter - 1);
        }
        hasRefs() {
          return this._refCounter > 0;
        }
        get [Symbol.toStringTag]() {
          return `WantlistEntry <key: ${this.cid.toString("base58btc")}, priority: ${this.priority}, refs: ${this._refCounter}>`;
        }
        equals(e2) {
          return this._refCounter === e2._refCounter && this.cid.equals(e2.cid) && this.priority === e2.priority && this.wantType === e2.wantType;
        }
      }
      e.exports = n;
    }, function(e, t, r) {
      "use strict";
      const n = r(1105), i = r(98), s = r(46).logger, {wantlistSendDebounceMs: o} = r(126);
      e.exports = class {
        constructor(e2, t2, r2) {
          this.peerId = t2, this.network = r2, this.refcnt = 1, this._entries = [], this._log = s(e2, "msgqueue", t2.toB58String().slice(0, 8)), this.sendEntries = n(this._sendEntries.bind(this), o);
        }
        addMessage(e2) {
          e2.empty || this.send(e2);
        }
        addEntries(e2) {
          this._entries = this._entries.concat(e2), this.sendEntries();
        }
        _sendEntries() {
          if (!this._entries.length)
            return;
          const e2 = new i(false);
          this._entries.forEach((t2) => {
            t2.cancel ? e2.cancel(t2.cid) : e2.addEntry(t2.cid, t2.priority);
          }), this._entries = [], this.addMessage(e2);
        }
        async send(e2) {
          try {
            await this.network.connectTo(this.peerId);
          } catch (t2) {
            return void this._log.error("cant connect to peer %s: %s", this.peerId.toB58String(), t2.message);
          }
          this._log("sending message to peer %s", this.peerId.toB58String()), this.network.sendMessage(this.peerId, e2).catch((e3) => {
            this._log.error("send error: %s", e3.message);
          });
        }
      };
    }, function(e, t, r) {
      "use strict";
      e.exports = function(e2, t2, r2) {
        var n;
        return function() {
          if (!t2)
            return e2.apply(this, arguments);
          var i = this, s = arguments, o = r2 && !n;
          return clearTimeout(n), n = setTimeout(function() {
            if (n = null, !o)
              return e2.apply(i, s);
          }, t2), o ? e2.apply(this, arguments) : void 0;
        };
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(34), i = r(25), s = r(1107), o = r(98), a = r(126), c = r(46).logger;
      e.exports = class {
        constructor(e2, t2, r2, n2) {
          this._log = c(e2.peerId, "network"), r2 = r2 || {}, this.libp2p = e2, this.bitswap = t2, this.protocols = ["/ipfs/bitswap/1.0.0"], r2.b100Only || (this.protocols.unshift("/ipfs/bitswap/1.1.0"), this.protocols.unshift("/ipfs/bitswap/1.2.0")), this._stats = n2, this._running = false, this._onPeerConnect = this._onPeerConnect.bind(this), this._onPeerDisconnect = this._onPeerDisconnect.bind(this), this._onConnection = this._onConnection.bind(this);
        }
        start() {
          this._running = true, this.libp2p.handle(this.protocols, this._onConnection);
          const e2 = new s({multicodecs: this.protocols, handlers: {onConnect: this._onPeerConnect, onDisconnect: this._onPeerDisconnect}});
          this._registrarId = this.libp2p.registrar.register(e2);
          for (const t2 of this.libp2p.peerStore.peers.values()) {
            const e3 = this.libp2p.connectionManager.get(t2.id);
            e3 && this._onPeerConnect(e3.remotePeer);
          }
        }
        stop() {
          this._running = false, this.libp2p.unhandle(this.protocols), this.libp2p.registrar.unregister(this._registrarId);
        }
        async _onConnection({protocol: e2, stream: t2, connection: r2}) {
          if (this._running) {
            this._log("incoming new bitswap %s connection from %s", e2, r2.remotePeer.toB58String());
            try {
              await i(t2, n.decode(), async (e3) => {
                for await (const n2 of e3)
                  try {
                    const e4 = await o.deserialize(n2.slice());
                    await this.bitswap._receiveMessage(r2.remotePeer, e4);
                  } catch (t3) {
                    this.bitswap._receiveError(t3);
                    break;
                  }
              });
            } catch (s2) {
              this._log(s2);
            }
          }
        }
        _onPeerConnect(e2) {
          this.bitswap._onPeerConnected(e2);
        }
        _onPeerDisconnect(e2) {
          this.bitswap._onPeerDisconnected(e2);
        }
        findProviders(e2, t2, r2 = {}) {
          return this.libp2p.contentRouting.findProviders(e2, {maxTimeout: a.providerRequestTimeout, maxNumProviders: t2, signal: r2.signal});
        }
        async findAndConnect(e2, t2) {
          const r2 = [];
          for await (const n2 of this.findProviders(e2, a.maxProvidersPerRequest, t2))
            this._log("connecting to providers", n2.id.toB58String()), r2.push(this.connectTo(n2, t2));
          await Promise.all(r2);
        }
        async provide(e2, t2) {
          await this.libp2p.contentRouting.provide(e2, t2);
        }
        async sendMessage(e2, t2) {
          if (!this._running)
            throw new Error("network isn't running");
          const r2 = e2.toB58String();
          this._log("sendMessage to %s", r2, t2);
          const {stream: s2, protocol: o2} = await this._dialPeer(e2);
          let a2;
          switch (o2) {
            case "/ipfs/bitswap/1.0.0":
              a2 = t2.serializeToBitswap100();
              break;
            case "/ipfs/bitswap/1.1.0":
            case "/ipfs/bitswap/1.2.0":
              a2 = t2.serializeToBitswap110();
              break;
            default:
              throw new Error("Unknown protocol: " + o2);
          }
          !async function(e3, t3, r3) {
            try {
              await i([t3], n.encode(), e3);
            } catch (s3) {
              r3(s3);
            }
          }(s2, a2, this._log), this._updateSentStats(e2, t2.blocks);
        }
        async connectTo(e2, t2) {
          if (!this._running)
            throw new Error("network isn't running");
          return this.libp2p.dial(e2, t2);
        }
        _dialPeer(e2) {
          return this.libp2p.dialProtocol(e2, ["/ipfs/bitswap/1.2.0", "/ipfs/bitswap/1.1.0", "/ipfs/bitswap/1.0.0"]);
        }
        _updateSentStats(e2, t2) {
          const r2 = e2.toB58String();
          this._stats && (t2.forEach((e3) => this._stats.push(r2, "dataSent", e3.data.length)), this._stats.push(r2, "blocksSent", t2.size));
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(24), i = r(1108);
      e.exports = n(class extends i {
        constructor({min: e2, max: t2, multicodecs: r2, handlers: n2}) {
          if (super({min: e2, max: t2, handlers: n2}), !r2)
            throw new Error("one or more multicodec should be provided");
          if (!n2)
            throw new Error("the handlers should be provided");
          if (typeof n2.onConnect != "function")
            throw new Error("the 'onConnect' handler must be provided");
          if (typeof n2.onDisconnect != "function")
            throw new Error("the 'onDisconnect' handler must be provided");
          this.multicodecs = Array.isArray(r2) ? r2 : [r2], this._registrar = void 0, this._onProtocolChange = this._onProtocolChange.bind(this), this._onPeerConnect = this._onPeerConnect.bind(this);
        }
        set registrar(e2) {
          this._registrar = e2, this._registrar.peerStore.on("change:protocols", this._onProtocolChange), this._registrar.connectionManager.on("peer:connect", this._onPeerConnect), this._updatePeers(this._registrar.peerStore.peers.values());
        }
        _updatePeers(e2) {
          for (const {id: t2, protocols: r2} of e2)
            if (this.multicodecs.filter((e3) => r2.includes(e3)).length) {
              this.peers.add(t2.toB58String());
              const e3 = this._registrar.getConnection(t2);
              e3 && this._onConnect(t2, e3);
            } else
              this.peers.delete(t2.toB58String());
        }
        _onProtocolChange({peerId: e2, protocols: t2}) {
          const r2 = this.peers.has(e2.toB58String()), n2 = t2.filter((e3) => this.multicodecs.includes(e3));
          r2 && n2.length === 0 && this._onDisconnect(e2);
          for (const i2 of t2)
            if (this.multicodecs.includes(i2)) {
              const t3 = this._registrar.peerStore.get(e2);
              return void this._updatePeers([t3]);
            }
        }
        _onPeerConnect(e2) {
          const t2 = e2.remotePeer, r2 = this._registrar.peerStore.protoBook.get(t2);
          r2 && this.multicodecs.find((e3) => r2.includes(e3)) && (this.peers.add(t2.toB58String()), this._onConnect(t2, e2));
        }
      }, {className: "MulticodecTopology", symbolName: "@libp2p/js-interfaces/topology/multicodec-topology"});
    }, function(e, t, r) {
      "use strict";
      const n = r(24), i = () => {
      };
      e.exports = n(class {
        constructor({min: e2 = 0, max: t2 = 1 / 0, handlers: r2 = {}}) {
          this.min = e2, this.max = t2, this._onConnect = r2.onConnect || i, this._onDisconnect = r2.onDisconnect || i, this.peers = new Set();
        }
        set registrar(e2) {
          this._registrar = e2;
        }
        disconnect(e2) {
          this._onDisconnect(e2);
        }
      }, {className: "Topology", symbolName: "@libp2p/js-interfaces/topology"});
    }, function(e, t, r) {
      "use strict";
      const n = r(4), i = r(98), s = i.WantType, o = r(125), a = r(1110), c = r(1111), u = r(1113), {logger: h} = r(46);
      e.exports = class {
        constructor(e2, t2, r2, n2, i2) {
          this._log = h(e2, "engine"), this.blockstore = t2, this.network = r2, this._stats = n2, this._opts = this._processOpts(i2), this.ledgerMap = new Map(), this._running = false, this._requestQueue = new c(u);
        }
        _processOpts(e2) {
          return {maxSizeReplaceHasWithBlock: 1024, targetMessageSize: 16384, ...e2};
        }
        _scheduleProcessTasks() {
          setTimeout(() => {
            this._processTasks();
          });
        }
        async _processTasks() {
          if (!this._running)
            return;
          const {peerId: e2, tasks: t2, pendingSize: r2} = this._requestQueue.popTasks(this._opts.targetMessageSize);
          if (t2.length === 0)
            return;
          const s2 = new i(false);
          s2.setPendingBytes(r2);
          const o2 = [], a2 = new Map();
          for (const i2 of t2) {
            const e3 = new n(i2.topic);
            i2.data.haveBlock ? i2.data.isWantBlock ? (o2.push(e3), a2.set(i2.topic, i2.data)) : s2.addHave(e3) : s2.addDontHave(e3);
          }
          const c2 = await this._getBlocks(o2);
          for (const [i2, h2] of a2) {
            const e3 = c2.get(i2);
            if (e3)
              s2.addBlock(e3);
            else if (h2.sendDontHave) {
              const e4 = new n(i2);
              s2.addDontHave(e4);
            }
          }
          if (s2.empty)
            return this._requestQueue.tasksDone(e2, t2), void this._scheduleProcessTasks();
          try {
            await this.network.sendMessage(e2, s2);
            for (const t3 of c2.values())
              this.messageSent(e2, t3);
          } catch (u2) {
            this._log.error(u2);
          }
          this._requestQueue.tasksDone(e2, t2), this._scheduleProcessTasks();
        }
        wantlistForPeer(e2) {
          const t2 = e2.toB58String();
          return this.ledgerMap.has(t2) ? this.ledgerMap.get(t2).wantlist.sortedEntries() : new Map();
        }
        ledgerForPeer(e2) {
          const t2 = e2.toB58String(), r2 = this.ledgerMap.get(t2);
          return r2 ? {peer: r2.partner.toPrint(), value: r2.debtRatio(), sent: r2.accounting.bytesSent, recv: r2.accounting.bytesRecv, exchanged: r2.exchangeCount} : null;
        }
        peers() {
          return Array.from(this.ledgerMap.values()).map((e2) => e2.partner);
        }
        receivedBlocks(e2) {
          e2.length && (this.ledgerMap.forEach((t2) => {
            e2.forEach((e3) => {
              const r2 = t2.wantlistContains(e3.cid);
              if (!r2)
                return;
              const n2 = e3.data.length, s2 = this._sendAsBlock(r2.wantType, n2);
              let o2 = n2;
              s2 || (o2 = i.blockPresenceSize(r2.cid)), this._requestQueue.pushTasks(t2.partner, [{topic: r2.cid.toString(), priority: r2.priority, size: o2, data: {blockSize: n2, isWantBlock: s2, haveBlock: true, sendDontHave: false}}]);
            });
          }), this._scheduleProcessTasks());
        }
        async messageReceived(e2, t2) {
          const r2 = this._findOrCreate(e2);
          if (t2.empty)
            return;
          if (t2.full && (r2.wantlist = new o()), this._updateBlockAccounting(t2.blocks, r2), t2.wantlist.size === 0)
            return void this._scheduleProcessTasks();
          const n2 = [], i2 = [];
          t2.wantlist.forEach((e3) => {
            e3.cancel ? (r2.cancelWant(e3.cid), n2.push(e3.cid)) : (r2.wants(e3.cid, e3.priority, e3.wantType), i2.push(e3));
          }), this._cancelWants(e2, n2), await this._addWants(e2, i2), this._scheduleProcessTasks();
        }
        _cancelWants(e2, t2) {
          for (const r2 of t2)
            this._requestQueue.remove(r2.toString(), e2);
        }
        async _addWants(e2, t2) {
          const r2 = await this._getBlockSizes(t2.map((e3) => e3.cid)), n2 = [];
          for (const o2 of t2) {
            const t3 = o2.cid.toString(), a2 = r2.get(t3);
            if (a2 == null)
              o2.sendDontHave && n2.push({topic: t3, priority: o2.priority, size: i.blockPresenceSize(o2.cid), data: {isWantBlock: o2.wantType === s.Block, blockSize: 0, haveBlock: false, sendDontHave: o2.sendDontHave}});
            else {
              const e3 = this._sendAsBlock(o2.wantType, a2);
              let r3 = a2;
              e3 || (r3 = i.blockPresenceSize(o2.cid)), n2.push({topic: t3, priority: o2.priority, size: r3, data: {isWantBlock: e3, blockSize: a2, haveBlock: true, sendDontHave: o2.sendDontHave}});
            }
            this._requestQueue.pushTasks(e2, n2);
          }
        }
        _sendAsBlock(e2, t2) {
          return e2 === s.Block || t2 <= this._opts.maxSizeReplaceHasWithBlock;
        }
        async _getBlockSizes(e2) {
          const t2 = await this._getBlocks(e2);
          return new Map([...t2].map(([e3, t3]) => [e3, t3.data.length]));
        }
        async _getBlocks(e2) {
          const t2 = new Map();
          return await Promise.all(e2.map(async (e3) => {
            try {
              const r2 = await this.blockstore.get(e3);
              t2.set(e3.toString(), r2);
            } catch (r2) {
              r2.code !== "ERR_NOT_FOUND" && this._log.error("failed to query blockstore for %s: %s", e3, r2);
            }
          })), t2;
        }
        _updateBlockAccounting(e2, t2) {
          e2.forEach((e3) => {
            this._log("got block (%s bytes)", e3.data.length), t2.receivedBytes(e3.data.length);
          });
        }
        messageSent(e2, t2) {
          const r2 = this._findOrCreate(e2);
          r2.sentBytes(t2 ? t2.data.length : 0), t2 && t2.cid && r2.wantlist.remove(t2.cid);
        }
        numBytesSentTo(e2) {
          return this._findOrCreate(e2).accounting.bytesSent;
        }
        numBytesReceivedFrom(e2) {
          return this._findOrCreate(e2).accounting.bytesRecv;
        }
        peerDisconnected(e2) {
        }
        _findOrCreate(e2) {
          const t2 = e2.toB58String();
          if (this.ledgerMap.has(t2))
            return this.ledgerMap.get(t2);
          const r2 = new a(e2);
          return this.ledgerMap.set(t2, r2), this._stats && this._stats.push(t2, "peerCount", 1), r2;
        }
        start() {
          this._running = true;
        }
        stop() {
          this._running = false;
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(125);
      e.exports = class {
        constructor(e2) {
          this.partner = e2, this.wantlist = new n(), this.exchangeCount = 0, this.sentToPeer = new Map(), this.accounting = {bytesSent: 0, bytesRecv: 0};
        }
        sentBytes(e2) {
          this.exchangeCount++, this.lastExchange = new Date().getTime(), this.accounting.bytesSent += e2;
        }
        receivedBytes(e2) {
          this.exchangeCount++, this.lastExchange = new Date().getTime(), this.accounting.bytesRecv += e2;
        }
        wants(e2, t2, r2) {
          this.wantlist.add(e2, t2, r2);
        }
        cancelWant(e2) {
          this.wantlist.remove(e2);
        }
        wantlistContains(e2) {
          return this.wantlist.contains(e2);
        }
        debtRatio() {
          return this.accounting.bytesSent / (this.accounting.bytesRecv + 1);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(1112), i = {hasNewInfo: () => false, merge() {
      }};
      class s {
        constructor(e2, t2) {
          this.peerId = e2, this._taskMerger = t2, this._activeTotalSize = 0, this._pending = new o(), this._active = new Set();
        }
        pushTasks(e2) {
          for (const t2 of e2)
            this._pushTask(t2);
        }
        _pushTask(e2) {
          if (!this._taskHasMoreInfoThanActiveTasks(e2))
            return;
          const t2 = this._pending.get(e2.topic);
          if (t2)
            return e2.priority > t2.priority && this._pending.updatePriority(e2.topic, e2.priority), void this._taskMerger.merge(e2, t2);
          this._pending.add(e2);
        }
        _taskHasMoreInfoThanActiveTasks(e2) {
          const t2 = [];
          for (const r2 of this._active)
            r2.topic === e2.topic && t2.push(r2);
          return t2.length === 0 || this._taskMerger.hasNewInfo(e2, t2);
        }
        popTasks(e2) {
          let t2 = 0;
          const r2 = [], n2 = this._pending.tasks();
          for (let i2 = 0; i2 < n2.length && t2 < e2; i2++) {
            const e3 = n2[i2];
            r2.push(e3), t2 += e3.size, this._pending.delete(e3.topic), this._activeTotalSize += e3.size, this._active.add(e3);
          }
          return {tasks: r2, pendingSize: this._pending.totalSize};
        }
        taskDone(e2) {
          this._active.has(e2) && (this._activeTotalSize -= e2.size, this._active.delete(e2));
        }
        remove(e2) {
          this._pending.delete(e2);
        }
        isIdle() {
          return this._pending.length === 0 && this._active.length === 0;
        }
        static compare(e2, t2) {
          return e2[1]._pending.length === 0 ? 1 : t2[1]._pending.length === 0 ? -1 : e2[1]._activeTotalSize === t2[1]._activeTotalSize ? t2[1]._pending.length - e2[1]._pending.length : e2[1]._activeTotalSize - t2[1]._activeTotalSize;
        }
      }
      class o {
        constructor() {
          this._tasks = new n([], this._compare);
        }
        get length() {
          return this._tasks.size;
        }
        get totalSize() {
          return [...this._tasks.values()].reduce((e2, t2) => e2 + t2.task.size, 0);
        }
        get(e2) {
          return (this._tasks.get(e2) || {}).task;
        }
        add(e2) {
          this._tasks.set(e2.topic, {created: Date.now(), task: e2});
        }
        delete(e2) {
          this._tasks.delete(e2);
        }
        tasks() {
          return [...this._tasks.values()].map((e2) => e2.task);
        }
        updatePriority(e2, t2) {
          const r2 = this._tasks.get(e2);
          if (!r2)
            return;
          const n2 = this._tasks.indexOf(e2);
          r2.task.priority = t2, this._tasks.update(n2);
        }
        _compare(e2, t2) {
          return e2[1].task.priority === t2[1].task.priority ? e2[1].created - t2[1].created : t2[1].task.priority - e2[1].task.priority;
        }
      }
      e.exports = class {
        constructor(e2) {
          this._taskMerger = e2 || i, this._byPeer = new n([], s.compare, true);
        }
        pushTasks(e2, t2) {
          let r2 = this._byPeer.get(e2.toB58String());
          r2 || (r2 = new s(e2, this._taskMerger)), r2.pushTasks(t2), this._byPeer.set(e2.toB58String(), r2);
        }
        popTasks(e2) {
          if (this._byPeer.size === 0)
            return {tasks: [], pendingSize: 0};
          const t2 = this._head(), {tasks: r2, pendingSize: n2} = t2.popTasks(e2);
          if (r2.length === 0)
            return {tasks: r2, pendingSize: n2};
          const i2 = t2.peerId;
          return t2.isIdle() ? this._byPeer.delete(i2.toB58String()) : this._byPeer.update(0), {peerId: i2, tasks: r2, pendingSize: n2};
        }
        _head() {
          for (const [, e2] of this._byPeer)
            return e2;
        }
        remove(e2, t2) {
          const r2 = this._byPeer.get(t2.toB58String());
          r2 && r2.remove(e2);
        }
        tasksDone(e2, t2) {
          const r2 = this._byPeer.get(e2.toB58String());
          if (!r2)
            return;
          const n2 = this._byPeer.indexOf(e2.toB58String());
          for (const i2 of t2)
            r2.taskDone(i2);
          this._byPeer.update(n2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      class n extends Map {
        constructor(e2, t2) {
          super(), this._cmp = t2 || this._defaultSort, this._keys = [];
          for (const [r2, n3] of e2 || [])
            this.set(r2, n3);
        }
        update(e2) {
          if (e2 < 0 || e2 >= this._keys.length)
            return;
          const t2 = this._keys[e2];
          this._keys.splice(e2, 1);
          const r2 = this._find(t2);
          this._keys.splice(r2, 0, t2);
        }
        set(e2, t2) {
          if (this.has(e2)) {
            const t3 = this.indexOf(e2);
            this._keys.splice(t3, 1);
          }
          super.set(e2, t2);
          const r2 = this._find(e2);
          this._keys.splice(r2, 0, e2);
        }
        clear() {
          super.clear(), this._keys = [];
        }
        delete(e2) {
          if (!this.has(e2))
            return;
          const t2 = this.indexOf(e2);
          this._keys.splice(t2, 1), super.delete(e2);
        }
        indexOf(e2) {
          if (!this.has(e2))
            return -1;
          const t2 = this._find(e2);
          if (this._keys[t2] === e2)
            return t2;
          for (let r2 = 1; r2 < this._keys.length; r2++) {
            if (this._keys[t2 + r2] === e2)
              return t2 + r2;
            if (this._keys[t2 - r2] === e2)
              return t2 - r2;
          }
          return -1;
        }
        _find(e2) {
          let t2 = 0, r2 = this._keys.length;
          for (; t2 < r2; ) {
            const n3 = t2 + r2 >>> 1, i = this._kCmp(this._keys[n3], e2);
            if (i < 0)
              t2 = n3 + 1;
            else {
              if (!(i > 0))
                return n3;
              r2 = n3;
            }
          }
          return t2;
        }
        *keys() {
          for (const e2 of this._keys)
            yield e2;
        }
        *values() {
          for (const e2 of this._keys)
            yield this.get(e2);
        }
        *entries() {
          for (const e2 of this._keys)
            yield [e2, this.get(e2)];
        }
        *[Symbol.iterator]() {
          yield* this.entries();
        }
        forEach(e2, t2) {
          if (e2)
            for (const r2 of this._keys)
              e2.apply(t2, [[r2, this.get(r2)]]);
        }
        _defaultSort(e2, t2) {
          return e2[0] < t2[0] ? -1 : t2[0] < e2[0] ? 1 : 0;
        }
        _kCmp(e2, t2) {
          return this._cmp([e2, this.get(e2)], [t2, this.get(t2)]);
        }
      }
      e.exports = n;
    }, function(e, t, r) {
      "use strict";
      const n = {hasNewInfo(e2, t2) {
        let r2 = false, n2 = false;
        for (const i of t2)
          i.data.haveBlock && (r2 = true), i.data.isWantBlock && (n2 = true);
        return !(n2 || !e2.data.isWantBlock) || !(r2 || !e2.data.haveBlock);
      }, merge(e2, t2) {
        const r2 = e2.data, n2 = t2.data;
        !n2.haveBlock && r2.haveBlock && (n2.haveBlock = r2.haveBlock, n2.blockSize = r2.blockSize), !n2.isWantBlock && r2.isWantBlock && (n2.isWantBlock = true, n2.haveBlock && !r2.haveBlock || (n2.haveBlock = r2.haveBlock, t2.size = e2.size)), n2.isWantBlock && n2.haveBlock && (t2.size = n2.blockSize);
      }};
      e.exports = n;
    }, function(e, t, r) {
      "use strict";
      const n = r(14).EventEmitter, i = r(89), s = r(19), o = r(5), a = r(126), c = r(46).logger, u = (e2) => "unwant:" + o(e2.multihash, "base64"), h = (e2) => "block:" + o(e2.multihash, "base64");
      e.exports = class extends n {
        constructor(e2) {
          super(), this.setMaxListeners(a.maxListeners), this._log = c(e2, "notif");
        }
        hasBlock(e2) {
          const t2 = h(e2.cid);
          this._log(t2), this.emit(t2, e2);
        }
        wantBlock(e2, t2 = {}) {
          if (!e2)
            throw new Error("Not a valid cid");
          const r2 = h(e2), n2 = u(e2);
          return this._log("wantBlock:" + e2), new Promise((o2, a2) => {
            const c2 = () => {
              this.removeListener(r2, u2), a2(new Error(`Block for ${e2} unwanted`));
            }, u2 = (t3) => {
              if (this.removeListener(n2, c2), !s(e2.multihash, t3.cid.multihash))
                return a2(new Error("Incorrect block received for " + e2));
              e2.version === t3.cid.version && e2.codec === t3.cid.codec || (t3 = new i(t3.data, e2)), o2(t3);
            };
            this.once(n2, c2), this.once(r2, u2), t2 && t2.signal && t2.signal.addEventListener("abort", () => {
              this.removeListener(r2, u2), this.removeListener(n2, c2), a2(new Error(`Want for ${e2} aborted`));
            });
          });
        }
        unwantBlock(e2) {
          const t2 = u(e2);
          this._log(t2), this.emit(t2);
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(14), i = r(1116), s = {movingAverageIntervals: [6e4, 3e5, 9e5]};
      e.exports = class extends n {
        constructor(e2, t2) {
          super();
          const r2 = Object.assign({}, s, t2);
          if (typeof r2.computeThrottleTimeout != "number")
            throw new Error("need computeThrottleTimeout");
          if (typeof r2.computeThrottleMaxQueueSize != "number")
            throw new Error("need computeThrottleMaxQueueSize");
          this._initialCounters = e2, this._options = r2, this._enabled = this._options.enabled, this._global = new i(e2, r2), this._global.on("update", (e3) => this.emit("update", e3)), this._peers = new Map();
        }
        enable() {
          this._enabled = true, this._options.enabled = true, this._global.enable();
        }
        disable() {
          this._enabled = false, this._options.enabled = false, this._global.disable();
        }
        stop() {
          this._enabled = false, this._global.stop();
          for (const e2 of this._peers)
            e2[1].stop();
        }
        get snapshot() {
          return this._global.snapshot;
        }
        get movingAverages() {
          return this._global.movingAverages;
        }
        forPeer(e2) {
          return e2.toB58String && (e2 = e2.toB58String()), this._peers.get(e2);
        }
        push(e2, t2, r2) {
          if (this._enabled && (this._global.push(t2, r2), e2)) {
            let n2 = this._peers.get(e2);
            n2 || (n2 = new i(this._initialCounters, this._options), this._peers.set(e2, n2)), n2.push(t2, r2);
          }
        }
        disconnected(e2) {
          const t2 = e2.toB58String(), r2 = this._peers.get(t2);
          r2 && (r2.stop(), this._peers.delete(t2));
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(14), i = r(29), s = r(340);
      e.exports = class extends n {
        constructor(e2, t2) {
          super(), this._options = t2, this._queue = [], this._stats = {}, this._frequencyLastTime = Date.now(), this._frequencyAccumulators = {}, this._movingAverages = {}, this._update = this._update.bind(this), e2.forEach((e3) => {
            this._stats[e3] = i(0), this._movingAverages[e3] = {}, this._options.movingAverageIntervals.forEach((t3) => {
              (this._movingAverages[e3][t3] = s(t3)).push(this._frequencyLastTime, 0);
            });
          }), this._enabled = this._options.enabled;
        }
        enable() {
          this._enabled = true;
        }
        disable() {
          this._disabled = true;
        }
        stop() {
          this._timeout && clearTimeout(this._timeout);
        }
        get snapshot() {
          return Object.assign({}, this._stats);
        }
        get movingAverages() {
          return Object.assign({}, this._movingAverages);
        }
        push(e2, t2) {
          this._enabled && (this._queue.push([e2, t2, Date.now()]), this._resetComputeTimeout());
        }
        _resetComputeTimeout() {
          this._timeout && clearTimeout(this._timeout), this._timeout = setTimeout(this._update, this._nextTimeout());
        }
        _nextTimeout() {
          const e2 = this._queue.length / this._options.computeThrottleMaxQueueSize;
          return Math.max(this._options.computeThrottleTimeout * (1 - e2), 0);
        }
        _update() {
          if (this._timeout = null, this._queue.length) {
            let e2;
            for (; this._queue.length; ) {
              const t2 = e2 = this._queue.shift();
              this._applyOp(t2);
            }
            this._updateFrequency(e2[2]), this.emit("update", this._stats);
          }
        }
        _updateFrequency(e2) {
          const t2 = e2 - this._frequencyLastTime;
          t2 && Object.keys(this._stats).forEach((r2) => {
            this._updateFrequencyFor(r2, t2, e2);
          }), this._frequencyLastTime = e2;
        }
        _updateFrequencyFor(e2, t2, r2) {
          const n2 = this._frequencyAccumulators[e2] || 0;
          this._frequencyAccumulators[e2] = 0;
          const i2 = n2 / t2 * 1e3;
          let o = this._movingAverages[e2];
          o || (o = this._movingAverages[e2] = {}), this._options.movingAverageIntervals.forEach((e3) => {
            let t3 = o[e3];
            t3 || (t3 = o[e3] = s(e3)), t3.push(r2, i2);
          });
        }
        _applyOp(e2) {
          const t2 = e2[0], r2 = e2[1];
          if (typeof r2 != "number")
            throw new Error("invalid increment number:", r2);
          let n2;
          n2 = Object.prototype.hasOwnProperty.call(this._stats, t2) ? this._stats[t2] : this._stats[t2] = i(0), this._stats[t2] = n2.plus(r2), this._frequencyAccumulators[t2] || (this._frequencyAccumulators[t2] = 0), this._frequencyAccumulators[t2] += r2;
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(1118), i = r(1119), s = r(1120), o = r(1121), a = r(1122);
      e.exports = class {
        constructor({network: e2}) {
          this.addrs = n({network: e2}), this.connect = i({network: e2}), this.disconnect = s({network: e2}), this.localAddrs = o({network: e2}), this.peers = a({network: e2});
        }
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(2);
      e.exports = ({network: e2}) => n(async function(t2) {
        const r2 = [], {libp2p: n2} = await e2.use(t2);
        for (const [e3, i] of n2.peerStore.peers.entries(t2))
          r2.push({id: e3, addrs: i.addresses.map((e4) => e4.multiaddr)});
        return r2;
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(2);
      e.exports = ({network: e2}) => n(async function(t2, r2) {
        const {libp2p: n2} = await e2.use(r2);
        return n2.dial(t2, r2);
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(2);
      e.exports = ({network: e2}) => n(async function(t2, r2) {
        const {libp2p: n2} = await e2.use(r2);
        return n2.hangUp(t2, r2);
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(2);
      e.exports = ({network: e2}) => n(async function(t2) {
        const {libp2p: r2} = await e2.use(t2);
        return r2.multiaddrs;
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(2);
      e.exports = ({network: e2}) => n(async function(t2 = {}) {
        const {libp2p: r2} = await e2.use(t2), n2 = t2.v || t2.verbose, i = [];
        for (const [e3, s] of r2.connections)
          for (const r3 of s) {
            const s2 = {addr: r3.remoteAddr, peer: e3};
            (n2 || t2.direction) && (s2.direction = r3.stat.direction), n2 && (s2.muxer = r3.stat.multiplexer, s2.latency = "n/a"), i.push(s2);
          }
        return i;
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(289);
      e.exports = ({path: e2, repoOwner: t2}) => n(e2, {singleProcess: t2 !== false});
    }, function(e, t, r) {
      "use strict";
      const n = r(7), i = {success: true, time: 0, text: ""}, s = r(2);
      e.exports = ({network: e2}) => s(async function* (t2, r2 = {}) {
        const {libp2p: s2} = await e2.use();
        r2.count = r2.count || 10, n.isPeerId(t2) || (t2 = n.createFromCID(t2));
        let o = s2.peerStore.get(t2);
        o || (yield {...i, text: "Looking up peer " + t2}, o = await s2.peerRouting.findPeer(t2)), yield {...i, text: "PING " + o.id.toB58String()};
        let a = 0, c = 0;
        for (let e3 = 0; e3 < r2.count; e3++)
          try {
            const e4 = await s2.ping(o.id);
            c += e4, a++, yield {...i, time: e4};
          } catch (u) {
            yield {...i, success: false, text: u.toString()};
          }
        if (a) {
          const e3 = c / a;
          yield {...i, text: `Average latency: ${e3}ms`};
        }
      });
    }, function(e, t, r) {
      "use strict";
      const n = r(7), i = r(4), s = r(0), {NotEnabledError: o} = r(62), a = r(113), c = r(2);
      e.exports = ({network: e2, repo: t2}) => {
        const {get: r2, put: o2, findProvs: a2, findPeer: f, provide: d, query: l} = {async get(t3, r3 = {}) {
          const {libp2p: n2} = await h(e2, r3);
          return n2._dht.get(u(t3), r3);
        }, async *put(t3, r3, n2) {
          const {libp2p: i2} = await h(e2, n2);
          yield* i2._dht.put(u(t3), r3);
        }, async *findProvs(t3, r3 = {}) {
          const {libp2p: n2} = await h(e2, r3);
          r3.numProviders && (r3.maxNumProviders = r3.numProviders);
          for await (const e3 of n2._dht.findProviders(u(t3), r3))
            yield {id: e3.id.toB58String(), addrs: e3.addrs};
        }, async findPeer(t3, r3) {
          const {libp2p: i2} = await h(e2, r3);
          typeof t3 == "string" && (t3 = n.createFromCID(t3));
          const s2 = await i2._dht.findPeer(t3);
          return {id: s2.id.toB58String(), addrs: s2.multiaddrs};
        }, async *provide(r3, n2 = {}) {
          const {libp2p: o3} = await h(e2, n2);
          for (var a3 in r3 = Array.isArray(r3) ? r3 : [r3])
            if (typeof r3[a3] == "string")
              try {
                r3[a3] = new i(r3[a3]);
              } catch (c2) {
                throw s(c2, "ERR_INVALID_CID");
              }
          if (!(await Promise.all(r3.map((e3) => t2.blocks.has(e3)))).every((e3) => e3))
            throw s(new Error("block(s) not found locally, cannot provide"), "ERR_BLOCK_NOT_FOUND");
          if (n2.recursive)
            throw s(new Error("not implemented yet"), "ERR_NOT_IMPLEMENTED_YET");
          for (const e3 of r3)
            yield o3._dht.provide(e3);
        }, async *query(t3, r3) {
          const {libp2p: i2} = await h(e2, r3);
          typeof t3 == "string" && (t3 = n.createFromCID(t3));
          for await (const e3 of i2._dht.getClosestPeers(t3.toBytes()))
            yield {id: e3.toB58String(), addrs: []};
        }};
        return {get: c(r2), put: c(o2), findProvs: c(a2), findPeer: c(f), provide: c(d), query: c(l)};
      };
      const u = (e2) => e2 instanceof Uint8Array ? e2 : ((e3) => {
        try {
          const t2 = e3.toString().split("/").filter((e4) => e4 && e4 !== "ipfs" && e4 !== "ipns")[0];
          return new i(t2).bytes;
        } catch (t2) {
          throw s(t2, "ERR_INVALID_CID");
        }
      })(e2), h = async (e2, t2) => {
        const r2 = await e2.use(t2);
        if (a(r2.libp2p, "_config.dht.enabled", false))
          return r2;
        throw new o("dht not enabled");
      };
    }, function(e, t, r) {
      "use strict";
      const n = r(2), i = r(0), {NotEnabledError: s} = r(62), o = r(113);
      e.exports = ({network: e2, config: t2}) => {
        const r2 = o(t2, "Pubsub.Enabled", true);
        return {subscribe: r2 ? n(async function(t3, r3, n2) {
          const {libp2p: i2} = await e2.use(n2);
          return i2.pubsub.subscribe(t3, r3, n2);
        }) : a, unsubscribe: r2 ? n(async function(t3, r3, n2) {
          const {libp2p: i2} = await e2.use(n2);
          i2.pubsub.unsubscribe(t3, r3, n2);
        }) : a, publish: r2 ? n(async function(t3, r3, n2) {
          const {libp2p: s2} = await e2.use(n2);
          if (!r3)
            throw i(new Error('argument "data" is required'), "ERR_ARG_REQUIRED");
          await s2.pubsub.publish(t3, r3);
        }) : a, ls: r2 ? n(async function(t3) {
          const {libp2p: r3} = await e2.use(t3);
          return r3.pubsub.getTopics(t3);
        }) : a, peers: r2 ? n(async function(t3, r3) {
          const {libp2p: n2} = await e2.use(r3);
          return n2.pubsub.getSubscribers(t3, r3);
        }) : a};
      };
      const a = async () => {
        throw new s("pubsub not enabled");
      };
    }]);
  });
});
export default require_index_min();
