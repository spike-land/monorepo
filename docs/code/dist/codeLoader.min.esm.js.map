{"version":3,"file":"codeLoader.min.esm.js","sources":["../src/DraggableWindow.js","../src/db.js","../src/transpile.js","../src/ipfsKV.js","../src/sha256.js","../src/data.js","../src/share.js","../src/codeLoader.js"],"sourcesContent":["\n\nexport default async ({ ReactDOM, onShare }) => {\n const { css, jsx } = await import( \"https://cdn.skypack.dev/@emotion/react@11.1.4\");\n\n  ReactDOM.render(\n    jsx(DraggableWindow, {\n      onShare,\n    }),\n    window.document.getElementById(\"dragabbleWindow\"),\n  );\n\n  function DraggableWindow({ onShare }) {\n    return jsx(\n      \"div\",\n      null,\n      jsx(\n        \"div\",\n        {\n          css: css`\n            background: red;\n            border: 4px solid red;\n            border-radius: 8px;\n          `,\n          animate: {\n            scale: 1,\n            top: 1,\n            left: 600,\n          },\n          dragElastic: 0.5,\n          dragMomentum: false,\n          initial: {\n            top: 1,\n            left: 0,\n            scale: 0.7,\n          },\n          transition: {\n            duration: 0.5,\n          },\n          drag: true,\n          dragConstraints: {\n            left: -window.innerWidth + 200,\n            right: 0,\n            bottom: window.innerHeight - 200,\n            top: 0,\n          },\n        },\n        jsx(\n          \"div\",\n          {\n            css: `\n      display: block;\n      with: 100%;\n      text-align: right;\n      background: linear-gradient(0deg, darkred, red);\n    `,\n          },\n          jsx(\"button\", {\n            css: `\n              background: darkred;\n              margin-top: -4px;\n              margin-right: -4px;\n              color: white;\n              cursor: pointer;\n              font-weight: bold;\n              font-family: Roboto;\n              padding: 8px 16px;\n              outline: none;\n              border: none;\n              border-radius: 0px 8px 0px 0px;\n            `,\n            onClick: () => onShare(),\n          }, \"ðŸŒŽ SHARE\"),\n        ),\n        jsx(\"div\", {\n          css: `\n      min-width: 200px;\n      padding: 30px;\n      max-width: 600px;\n      background: white;\n      max-height: 800px;\n      border-radius: 0px 0px 8px 8px;\n      overflow-y: overlay;\n    `,\n          id: \"zbody\",\n        }),\n      ),\n      null,\n    );\n  }\n};\n","import { getDB } from \"https://unpkg.com/@zedvision/shadb@8.7.2/dist/shaDB.js\";\n\nlet db;\n\nexport const shaDB = {\n  get: async (...args) => {\n    db = db || await getDB();\n    return db.get(...args);\n  },\n  put: async (...args) => {\n    db = db || await getDB();\n    return db.put(...args);\n  },\n};\n","import * as Comlink from \"https://unpkg.com/comlink/dist/esm/comlink.mjs\";\nimport { shaDB } from \"./db.js\";\n// import * as Comlink from \"../../../dist/esm/comlink.mjs\";\n\nlet transform;\nexport async function transpileCode(code, hasToReport) {\n  transform = transform || await init();\n\n  return await transform(code, hasToReport);\n}\n\nlet node = null;\n\nexport async function getIpfsiD() {\n  if (node) return node;\n\n  let ipfsId = await shaDB.get(\"ipfs\");\n  if (!ipfsId) {\n    ipfsId = v4();\n\n    await shaDB.put(\"ipfs\", ipfsId);\n  }\n\n  return ipfsId;\n}\n\nlet ipfsNode;\nexport async function ipfsAdd(code, hasToReport) {\n  ipfsNode = ipfsNode || await Ipfs.create({ repo: await getIpfsiD() });\n\n  return await transform(code, hasToReport);\n}\n\nfunction init() {\n  const worker = new Worker(\n    \"./src/transpile.worker.js\",\n  );\n  // WebWorkers use `postMessage` and therefore work with Comlink.\n  transform = Comlink.wrap(worker);\n  return transform;\n}\ninit();\n","import * as Comlink from \"https://unpkg.com/comlink/dist/esm/comlink.mjs\";\n// import * as Comlink from \"../../../dist/esm/comlink.mjs\";\n\nlet ipfsWorker;\n\nexport const ipfsKV = {\n  add: async (data) => (ipfsWorker || await initIpfsKV()).add(data),\n};\n\nfunction initIpfsKV() {\n  const worker = new Worker(\n    \"./src/ipfsKV.worker.js\",\n  );\n\n  ipfsWorker = Comlink.wrap(worker);\n  return ipfsWorker;\n}\ninitIpfsKV();\n","export const sha256 = async (x) =>\n  Array.from(\n    new Uint8Array(\n      await crypto.subtle.digest(\n        \"SHA-256\",\n        typeof x === \"string\" ? new TextEncoder().encode(x) : x,\n      ),\n    ).slice(0, 4),\n  ).map((b) => (\"00\" + b.toString(16)).slice(-2)).join(\"\");\n","import { shaDB } from \"./db.js\";\nimport v4 from \"https://unpkg.com/uuid@8.3.2/dist/esm-browser/v4.js\";\nimport { sha256 } from \"./sha256.js\";\n\nexport async function getZkey(hash) {\n  const uuid = await getUserId();\n  const uKey = await sha256(uuid);\n  const gKey = await sha256(hash + uKey);\n  const vKey = await sha256(hash + uuid);\n  return `${hash}${uKey}${gKey}${vKey}`;\n}\n\nexport async function getUserId() {\n  const uuid = await shaDB.get(\"uuid\");\n  if (!uuid) {\n    const resp = await fetch(\"https://code.zed.vision/register\");\n    const data = await resp.json();\n    await shaDB.put(\"uuid\", data.uuid);\n    return data.uuid;\n  }\n  return uuid;\n}\n\nexport const getProjects = async () => {\n  const uuid = await getUserId();\n  const projects = await shaDB.get(uuid, \"json\");\n\n  if (typeof projects === \"string\" || projects === null || !projects.list) {\n    const projectId = v4();\n\n    await shaDB.put(\n      uuid,\n      JSON.stringify({\n        list: [projectId],\n        [projectId]: {\n          created: Date.now(),\n          lastOpen: Date.now(),\n        },\n      }),\n    );\n\n    return [projectId];\n  }\n\n  // const search = new URLSearchParams(window.location.search);\n\n  // const keyToLoad = search.get(\"h\") || await db.get(projectName);\n  // if(keyToLoad){\n  //   projects.map(p=>shaDB.get())\n  // }\n\n  return projects.list;\n};\n\nexport const saveCode = async (code) => {\n  const hash = await sha256(code);\n\n  const projects = await getProjects();\n  const projectName = projects[0];\n\n  try {\n    const prevHash = await shaDB.get(projectName);\n\n    if (prevHash !== hash) {\n      await shaDB.put(hash, code);\n      await shaDB.put(projectName, hash);\n      // setQueryStringParameter(\"h\", hash);\n      //const response = fetch(request);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n\n  // lets not save now - we will save the diff only\n  // await response;\n};\n","import { importScript } from \"./importScript.js\";\nimport { sha256 } from \"./sha256.js\";\nimport { getZkey } from \"./data.js\";\nimport { ipfsKV } from \"./ipfsKV.js\";\n\nexport const shareItAsHtml = async ({ code, HTML, jsExport }) => {\n  const mod = createJsBlob(code);\n\n  const Element = (await import(mod)).default;\n\n  const css = Array.from(\n    window.document.querySelector(\"head > style[data-emotion=css]\").sheet\n      .cssRules,\n  ).map((x) => x.cssText).filter((cssRule) =>\n    HTML.includes(cssRule.substring(3, 8))\n  ).join(\"\\n  \");\n\n  const { getHtml, getCodeForImport } = await import(\"./templates.js\");\n\n  const linkToCode = await saveToIPFS(code, \"application/html\");\n\n  console.log({\n    HTML,\n    linkToCode,\n    css,\n    code,\n  });\n\n  const link = await saveHtml(\n    getHtml({ HTML, css, js: getCodeForImport(linkToCode) }),\n  );\n\n  return link;\n};\n\nfunction saveHtml(html) {\n  return saveToIPFS(html, \"text/html\");\n}\n\nfunction saveJs(js) {\n  return save(js, \"application/javascript\");\n}\nasync function saveToIPFS(content, type) {\n  const cid = await ipfsKV.add(\n    URL.createObjectURL(new Blob([content], { type })),\n  );\n  return `https://ipfs.io/ipfs/${cid}`;\n}\n\nasync function save(content, type) {\n  const hash = await sha256(content);\n  const request = new Request(\n    \"https://code.zed.vision\",\n    {\n      body: content,\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": type + \";charset=UTF-8\",\n        \"ZKEY\": await getZkey(hash),\n      },\n    },\n  );\n\n  await fetch(request);\n\n  return `https://code.zed.vision/${hash}`;\n}\n\nexport function createJsBlob(code) {\n  const blob = new Blob([code], { type: \"application/javascript\" });\n\n  return URL.createObjectURL(blob);\n}\n","import startMonaco from \"https://unpkg.com/@zedvision/smart-monaco-editor@10.11.4/dist/smart-monaco-editor.modern.js\";\nimport { diff } from \"https://unpkg.com/@zedvision/diff@8.6.10/dist/diff.min.js\";\n\nimport prettier from \"https://unpkg.com/prettier@2.2.1/esm/standalone.mjs\";\nimport parserBabel from \"https://unpkg.com/prettier@2.2.1/esm/parser-babel.mjs\";\nimport parserHtml from \"https://unpkg.com/prettier@2.2.1/esm/parser-html.mjs\";\nimport renderDraggableWindow from \"./DraggableWindow.js\";\n\nimport { getProjects, saveCode } from \"./data.js\";\nimport { shaDB } from \"./db.js\";\nimport { starter } from \"./starterNoFramerMotion.js\";\nimport { transpileCode } from \"./transpile.js\";\nimport { createJsBlob, shareItAsHtml } from \"./share.js\";\n\nconst session = {\n  hydrated: false,\n  preRendered: false,\n  lastErrors: 0,\n  HTML: \"\",\n  ipfs: 0,\n  transpiled: \"\",\n  code: \"\",\n};\n\nfunction formatter(code) {\n  try {\n    return prettier.format(code, {\n      \"arrowParens\": \"always\",\n      \"bracketSpacing\": true,\n      \"embeddedLanguageFormatting\": \"auto\",\n      \"htmlWhitespaceSensitivity\": \"css\",\n      \"insertPragma\": false,\n      \"jsxBracketSameLine\": true,\n      \"jsxSingleQuote\": false,\n      \"printWidth\": 80,\n      \"proseWrap\": \"preserve\",\n      \"quoteProps\": \"as-needed\",\n      \"requirePragma\": false,\n      \"semi\": true,\n      \"singleQuote\": true,\n      \"tabWidth\": 2,\n      \"trailingComma\": \"all\",\n      \"useTabs\": false,\n      parser: \"babel-ts\",\n      plugins: [parserBabel, parserHtml],\n    });\n  } catch {\n    return code;\n  }\n}\n\nexport async function run(mode = \"window\", { React, ReactDOM }) {\n  console.log(\"Runnnner\");\n  session.code = formatter(await getCodeToLoad());\n  session.transpiled = await transpileCode(session.code);\n\n  if (mode === \"editor\") {\n    const { renderDraggableEditor } = await import(\"./DraggableEditor.js\");\n\n    await renderDraggableEditor();\n  }\n\n  if (mode === \"window\") {\n    const onShare = async () => {\n      const link = await shareItAsHtml(\n        { code: session.transpiled, HTML: session.HTML },\n      );\n      window.open(link);\n    };\n\n    await renderDraggableWindow({ ReactDOM, React, onShare });\n  }\n\n  const transpiled = await transpileCode(session.code);\n  restartCode(transpiled);\n\n  const modules = await startMonaco({\n    language: \"typescript\",\n    code: formatter(session.code),\n    onChange: (c) => runner(formatter(c)),\n  });\n\n  async function runner(cd) {\n    try {\n      const transpiled = await transpileCode(cd, session.lastErrors);\n      if (session.transpiled === transpiled) return;\n      let restartError = false;\n      ///yellow\n      if (transpiled.length && session.lastErrors === 0) {\n        restartError = restartCode(transpiled);\n      }\n\n      const err = [\n        ...(restartError\n          ? [\n            { messageText: \"Error while starting the app. Check the console!\" },\n          ]\n          : []),\n        ...(await getErrors(cd)),\n      ];\n      if (session.lastErrors && err.length === 0) restartCode(transpiled);\n      session.lastErrors = err.length;\n      const errorDiv = window.document.getElementById(\"error\");\n      if (err.length === 0 && transpiled.length) {\n        session.code = cd;\n        if (session.transpiled !== transpiled) {\n          session.transpiled = transpiled;\n\n          await saveCode(formatter(cd), session.transpiled);\n        }\n\n        await saveCode(cd);\n      } else {\n        session.error = cd;\n\n        const slices = await diff(session.code, cd);\n\n        if (slices.c.length <= 3) {\n          session.lastErrors = 0;\n\n          return;\n        }\n\n        if (slices.c.length == 4) {\n          session.lastErrors = 0;\n          modules.monaco.editor.setTheme(\"hc-black\");\n\n          return;\n        }\n\n        errorDiv.innerHTML = err[0].messageText.toString();\n\n        errorDiv.style.display = \"block\";\n\n        return;\n      }\n\n      errorDiv.style.display = \"none\";\n\n      modules.monaco.editor.setTheme(\"vs-dark\");\n    } catch (err) {\n      modules.monaco.editor.setTheme(\"vs-light\");\n      setTimeout(() => {\n        modules.monaco.editor.setTheme(\"hc-black\");\n      }, 50);\n      console.error(err);\n    }\n  }\n\n  async function getErrors(code) {\n    if (!modules || !modules.monaco) return;\n    const { monaco } = modules;\n    const { sha256 } = await import(\"./sha256.js\");\n    const shaCode = await sha256(code);\n    const filename = `file:///${shaCode}.tsx`;\n    const uri = monaco.Uri.parse(filename);\n    const model = monaco.editor.getModel(uri) ||\n      await monaco.editor.createModel(code, \"typescript\", uri);\n    const worker = await monaco.languages.typescript.getTypeScriptWorker();\n    const client = await worker(model.uri);\n\n    const diag = client.getSemanticDiagnostics(filename);\n    const comp = client.getCompilerOptionsDiagnostics(filename);\n    const syntax = client.getSyntacticDiagnostics(filename);\n    const fastError = await Promise.race([diag, comp, syntax]);\n\n    model.dispose();\n\n    return [\n      ...fastError,\n    ];\n  }\n\n  async function restartCode(transpiled) {\n    if (typeof transpiled !== \"string\" || transpiled === \"\") {\n      // console.log(transpiled.error);\n      return 1;\n    }\n\n    const codeToHydrate = mode === \"window\"\n      ? transpiled.replace(\"body{\", \"#zbody{\")\n      : transpiled;\n\n    const root = window.document.createElement(\"div\");\n    \n\n      \n    const Element = (await import(createJsBlob(codeToHydrate))).default;\n\n\n    ReactDOM.render(Element(), root);\n\n    document.getElementById(\"zbody\").removeChild()\n    document.getElementById(\"zbody\").appendChild(root);\n\n    session.HTML = root.innerHTML;\n\n\n    return !session.preRendered;\n  }\n\n  async function getCodeToLoad() {\n    const projects = await getProjects();\n    const projectName = projects[0];\n\n    const search = new URLSearchParams(window.location.search);\n    const keyToLoad = search.get(\"h\") || await shaDB.get(projectName);\n\n    if (keyToLoad) {\n      let code;\n      try {\n        code = await shaDB.get(keyToLoad);\n      } catch {\n        console.error(\"error load key: \" + keyToLoad);\n      }\n\n      if (code) return code;\n\n      let text;\n      try {\n        const resp = await fetch(\"https://code.zed.vision/?h=\" + keyToLoad);\n        text = await resp.json();\n      } catch (e) {\n        const { sha256 } = await import(\"./sha256.js\");\n        const shaHash = await sha256(starter);\n\n        shaDB.put(shaHash, starter);\n        await shaDB.put(projectName, shaHash);\n        return starter;\n      }\n\n      return text;\n    }\n\n    return starter;\n  }\n\n  function setQueryStringParameter(name, value) {\n    const params = new URLSearchParams(window.location.search);\n    params.set(name, value);\n    window.history.replaceState(\n      {},\n      \"\",\n      decodeURIComponent(`${window.location.pathname}?${params}`),\n    );\n  }\n}\n"],"names":["db","transform","ipfsWorker","shaDB","get","getDB","put","sha256","x","crypto","subtle","digest","TextEncoder","encode","Array","from","Uint8Array","slice","map","b","toString","join","saveCode","code","hash","uuid","fetch","resp","json","data","getUserId","projects","list","projectId","v4","JSON","stringify","created","Date","now","lastOpen","getProjects","projectName","body","recover","result","prevHash","e","then","console","error","transpileCode","hasToReport","init","worker","Worker","Comlink","initIpfsKV","saveToIPFS","content","type","add","ipfsKV","URL","createObjectURL","Blob","cid","createJsBlob","blob","run","mode","React","ReactDOM","log","getCodeToLoad","session","formatter","transpiled","restartCode","codeToHydrate","replace","root","window","document","createElement","import","render","Element","_import","getElementById","removeChild","appendChild","HTML","innerHTML","preRendered","startMonaco","language","onChange","c","cd","lastErrors","restartError","length","messageText","modules","monaco","Promise","shaCode","model","languages","typescript","getTypeScriptWorker","uri","client","diag","getSemanticDiagnostics","filename","comp","getCompilerOptionsDiagnostics","syntax","getSyntacticDiagnostics","race","fastError","dispose","Uri","parse","editor","getModel","createModel","getErrors","errorDiv","style","display","setTheme","err","diff","slices","_exit","setTimeout","runner","onShare","css","jsx","animate","scale","top","left","dragElastic","dragMomentum","initial","transition","duration","drag","dragConstraints","innerWidth","right","bottom","innerHeight","onClick","id","renderDraggableWindow","mod","querySelector","sheet","cssRules","cssText","filter","cssRule","includes","substring","getHtml","getCodeForImport","linkToCode","html","js","shareItAsHtml","link","open","renderDraggableEditor","hydrated","ipfs","prettier","format","arrowParens","bracketSpacing","embeddedLanguageFormatting","htmlWhitespaceSensitivity","insertPragma","jsxBracketSameLine","jsxSingleQuote","printWidth","proseWrap","quoteProps","requirePragma","semi","singleQuote","tabWidth","trailingComma","useTabs","parser","plugins","parserBabel","parserHtml"],"mappings":"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"}