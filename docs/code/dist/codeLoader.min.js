import{renderPreviewWindow as S}from"./renderPreviewWindow.js";import{sendSignalToQrCode as W}from"./sendSignalToQrCode.js";import{v as m}from"./versions.js";import{getCodeToLoad as z,saveCode as B}from"./data.js";import{transpileCode as g}from"./transpile.js";function D(){return{unmount:()=>{},hydrated:!1,preRendered:!1,lastErrors:0,rootElement:null,div:window.document.createElement("div"),HTML:"",devtoolHash:"",ipfs:0,transpiled:"",code:""}}export async function run(d="window",p,h=""){await W();const{formatter:u}=await import("./formatter.js");if(d==="window"){const{openWindows:e}=await import("./openWindows.js");await e(m)}const{open:T}=p,t=D();if(t.code=h,!h)try{const{code:e,transpiled:r,html:o,versions:a}=await z();t.code=e,t.transpiled=await g(e)||r,t.div.innerHTML=o}catch(e){console.error({e,message:"couldn't start"});return}if(t.transpiled===""){const e=await g(t.code);console.log(e),t.transpiled=e}const{renderEmotion:f,jsx:v,DraggableWindow:E}=await import(m.emotionRenderer);await S(d,t,T,f,v,E),await P(w,t);const b=(await import(m.editor)).default,j=window.document.getElementById("editor"),s=await b({language:"typescript",container:j,code:t.code,onChange:e=>C(e)});async function C(e){const r=await u(e);try{const o=await g(r);if(t.transpiled===o&&o!=="")return;let a=!1;o.length&&t.lastErrors===0&&(a=await w(o));const n=await k(r);if(a&&n.push({messageText:"Error while starting the app. Check the console!"}),n.length&&console.log({err:n}),t.lastErrors&&n.length===0&&w(o),t.lastErrors=n.length,n.length===0&&o.length)t.code=await u(r),t.transpiled!==o&&(t.transpiled=o,B({code:t.code,transpiled:t.transpiled,html:t.HTML,versions:t.devtoolHash}));else{const{diff:i}=await import(`https://unpkg.com/@zedvision/shadb@${m.shadb}/src/diff.js`),c=await i(t.code,r);if(c.c.length<=3){t.lastErrors=0;return}if(c.c.length==4){t.lastErrors=0,s.monaco.editor.setTheme("hc-black");return}console.error(n[0].messageText.toString());return}s.monaco.editor.setTheme("vs-dark")}catch(o){s.monaco.editor.setTheme("vs-light"),setTimeout(()=>{s.monaco.editor.setTheme("hc-black")},50),console.error(o)}}async function k(e){if(!s||!s.monaco)return[{messageText:"Error with the error checking. Try to reload!"}];const{monaco:r}=s,{sha256:o}=await import(`https://unpkg.com/@zedvision/shadb@${m.shadb}/src/sha256.js`),n=`file:///${await o(e)}.tsx`,i=r.Uri.parse(n),c=r.editor.getModel(i)||await r.editor.createModel(e,"typescript",i),l=await(await r.languages.typescript.getTypeScriptWorker())(c.uri),H=l.getSemanticDiagnostics(n),L=l.getCompilerOptionsDiagnostics(n),M=l.getSyntacticDiagnostics(n),x=await Promise.race([H,L,M]);return c.dispose(),[...x]}async function w(e){t.HTML="";let r=!1;if(typeof e!="string"||e==="")return r=!0,r;const o=d==="window"?e.replace("body{","#zbody{"):e,a=window.document.createElement("div"),n=(await import(c(o))).default;t.unmount(),t.unmount=f(n(),a);const i=window.document.getElementById("zbody");return i&&i.children[0].replaceWith(a),t.HTML=t.div.innerHTML,!!t.HTML;function c(y){const l=new Blob([y],{type:"application/javascript"});return URL.createObjectURL(l)}}}async function P(d,p){await d(p.transpiled)}
