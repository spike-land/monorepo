{"version":3,"sources":["webpack:///../shadb/dist/vendor/idb.js","webpack:///../shadb/dist/diff.js","webpack:///../shadb/dist/getDbObj.js","webpack:///../shadb/dist/shaDB.js","webpack:///../shadb/dist/sha256.js"],"names":["instanceOfAny","object","constructors","some","c","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","IDBDatabase","IDBObjectStore","IDBIndex","IDBCursor","IDBTransaction","getCursorAdvanceMethods","prototype","advance","continue","continuePrimaryKey","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","request","promise","Promise","resolve","reject","unlisten","removeEventListener","success","error","wrap1","result","addEventListener","then","value","set","catch","cacheDonePromiseForTransaction","tx","has","done","complete","DOMException","idbProxyTraps","get","target","prop","receiver","objectStoreNames","undefined","objectStore","replaceTraps","callback","wrapFunction","func","transaction","storeNames","args","call","unwrap1","sort","includes","apply","transformCachableValue","Proxy","IDBRequest","newValue","u","w","openDB1","name","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","db","deleteDB1","deleteDatabase","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","method","storeName","target1","store","index","shift","all","oldTraps","diff","str1","str2","diffChars","sha256","sha1Str1","res","map","x","added","removed","count","b","isDiff","str","length","isKey","slice","filter","maybeInst","JSON","parse","_a","assemble","oldValue","instructions","instArr","old","ret","forEach","element","Number","absNum","Math","abs","currentString","String","getDbObj","dbObj","key","format","data","json","allData","text","keyOfDiff","TextDecoder","decode","put","val","oldKey","actualValue","prevValue","prevSha","diffObj","diffAsStr","stringify","prev","delete","clear","keys","getAllKeys","getDB","dbPromise","openDB","createObjectStore","keyVal","Array","Uint8Array","crypto","subtle","digest","TextEncoder","encode","from","toString","join"],"mappings":"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","file":"4-d676bd25c3dbdda3ae5c.js","sourcesContent":["const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\nfunction getIdbProxyableTypes() {\n    return idbProxyableTypes || (idbProxyableTypes = [\n        IDBDatabase,\n        IDBObjectStore,\n        IDBIndex,\n        IDBCursor,\n        IDBTransaction,\n    ]);\n}\nfunction getCursorAdvanceMethods() {\n    return cursorAdvanceMethods || (cursorAdvanceMethods = [\n        IDBCursor.prototype.advance,\n        IDBCursor.prototype.continue,\n        IDBCursor.prototype.continuePrimaryKey,\n    ]);\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener(\"success\", success);\n            request.removeEventListener(\"error\", error);\n        };\n        const success = () => {\n            resolve(wrap1(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener(\"success\", success);\n        request.addEventListener(\"error\", error);\n    });\n    promise.then((value) => {\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n    }).catch(() => {\n    });\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener(\"complete\", complete);\n            tx.removeEventListener(\"error\", error);\n            tx.removeEventListener(\"abort\", error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException(\"AbortError\", \"AbortError\"));\n            unlisten();\n        };\n        tx.addEventListener(\"complete\", complete);\n        tx.addEventListener(\"error\", error);\n        tx.addEventListener(\"abort\", error);\n    });\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            if (prop === \"done\")\n                return transactionDoneMap.get(target);\n            if (prop === \"objectStoreNames\") {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            if (prop === \"store\") {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        return wrap1(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction && (prop === \"done\" || prop === \"store\")) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    if (func === IDBDatabase.prototype.transaction &&\n        !(\"objectStoreNames\" in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap1(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [\n                storeNames,\n            ]);\n            return wrap1(tx);\n        };\n    }\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            func.apply(unwrap1(this), args);\n            return wrap1(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        return wrap1(func.apply(unwrap1(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === \"function\")\n        return wrapFunction(value);\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes())) {\n        return new Proxy(value, idbProxyTraps);\n    }\n    return value;\n}\nfunction wrap1(value) {\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap1 = (value) => reverseTransformCache.get(value);\nconst u = unwrap1, w = wrap1;\nexport { u as unwrap, w as wrap };\nfunction openDB1(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap1(request);\n    if (upgrade) {\n        request.addEventListener(\"upgradeneeded\", (event) => {\n            upgrade(wrap1(request.result), event.oldVersion, event.newVersion, wrap1(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener(\"blocked\", () => blocked());\n    openPromise.then((db) => {\n        if (terminated)\n            db.addEventListener(\"close\", () => terminated());\n        if (blocking)\n            db.addEventListener(\"versionchange\", () => blocking());\n    }).catch(() => {\n    });\n    return openPromise;\n}\nfunction deleteDB1(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener(\"blocked\", () => blocked());\n    return wrap1(request).then(() => undefined);\n}\nconst readMethods = [\n    \"get\",\n    \"getKey\",\n    \"getAll\",\n    \"getAllKeys\",\n    \"count\",\n];\nconst writeMethods = [\n    \"put\",\n    \"add\",\n    \"delete\",\n    \"clear\",\n];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase && !(prop in target) &&\n        typeof prop === \"string\")) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, \"\");\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (!(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        const tx = this.transaction(storeName, isWrite ? \"readwrite\" : \"readonly\");\n        let target1 = tx.store;\n        if (useIndex)\n            target1 = target1.index(args.shift());\n        return (await Promise.all([\n            target1[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\nexport { deleteDB1 as deleteDB, openDB1 as openDB };\n","export const diff = async (str1, str2) => {\n    const { diffChars } = await import(\"./vendor/diff.min.js\");\n    const { sha256 } = await import(\"./sha256.js\");\n    const sha1Str1 = sha256(str1);\n    const res = diffChars(str1, str2);\n    return {\n        b: await sha1Str1,\n        c: res.map((x) => x.added ? x.value : x.removed ? -x.count : x.count),\n    };\n};\nexport const isDiff = (str) => {\n    if (str.length < 10) {\n        return false;\n    }\n    const isKey = [...(str.slice(0, 8))].filter((x) => x < \"0\" || x > \"f\").length === 0;\n    const maybeInst = str.slice(8);\n    if (isKey && maybeInst[0] === \"[\" && maybeInst[maybeInst.length - 1] === \"]\") {\n        try {\n            return JSON.parse(maybeInst).length > 1;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    return false;\n};\nexport const assemble = (oldValue, instructions) => {\n    const instArr = JSON.parse(instructions);\n    let old = oldValue.slice();\n    let ret = \"\";\n    instArr.forEach((element) => {\n        if (Number(element) === element) {\n            const absNum = Math.abs(element);\n            const currentString = old.slice(0, absNum);\n            old = old.slice(absNum);\n            if (element > 0) {\n                ret += String(currentString);\n            }\n        }\n        else {\n            ret += String(element);\n        }\n    });\n    return ret;\n};\n","import { assemble, diff, isDiff } from \"./diff.js\";\nimport { sha256 } from \"./sha256.js\";\nexport const getDbObj = (db) => {\n    const dbObj = {\n        async get(key, format = \"string\") {\n            let data;\n            try {\n                data = await db.get(key);\n                if (!data) {\n                    return null;\n                }\n            }\n            catch (_) {\n                return null;\n                //key not found that we write - its ok.\n            }\n            if (format === \"json\") {\n                try {\n                    const json = JSON.parse(data);\n                    return json;\n                }\n                catch (_a) {\n                    return data;\n                }\n            }\n            const allData = await data;\n            if (format === \"string\") {\n                if (typeof allData === \"string\" && format === \"string\") {\n                    const text = allData;\n                    if (isDiff(text)) {\n                        const keyOfDiff = text.slice(0, 8);\n                        const instructions = text.slice(8);\n                        const oldValue = await dbObj.get(keyOfDiff);\n                        return assemble(oldValue, instructions);\n                    }\n                    return allData;\n                }\n                return new TextDecoder().decode(allData);\n            }\n            return data;\n        },\n        async put(key, val) {\n            let prev;\n            try {\n                const oldKey = await dbObj.get(key);\n                // console.log(realKey);\n                if (typeof oldKey === \"string\" && typeof val === \"string\" &&\n                    oldKey.length === 8 && oldKey !== val) {\n                    const actualValue = await dbObj.get(val);\n                    const prevValue = await dbObj.get(oldKey);\n                    if (typeof prevValue === \"string\") {\n                        const prevSha = await sha256(prevValue);\n                        if (prevSha === oldKey) {\n                            const diffObj = await diff(actualValue, prevValue);\n                            const diffAsStr = diffObj.b + JSON.stringify(diffObj.c);\n                            await dbObj.put(prevSha, diffAsStr);\n                        }\n                    }\n                }\n            }\n            catch (_a) {\n                prev = \"\";\n            }\n            if (prev !== \"\" && val === prev) {\n                return val;\n            }\n            let str;\n            if (typeof val !== \"string\") {\n                str = new TextDecoder().decode(val);\n            }\n            else {\n                str = val;\n            }\n            return await db.put(key, str);\n        },\n        async delete(key) {\n            return await db.delete(key);\n        },\n        async clear() {\n            return await db.clear();\n        },\n        async keys() {\n            return await db.getAllKeys();\n        },\n    };\n    return dbObj;\n};\n","import { openDB } from \"./vendor/idb.js\";\nimport { getDbObj } from \"./getDbObj.js\";\nexport function getDB(storeName = \"defaultStore\") {\n    return async () => {\n        const dbPromise = openDB(\"zed-vision-alpha\", 1, {\n            upgrade(db) {\n                db.createObjectStore(storeName);\n            },\n            blocked() {\n            },\n            blocking() {\n            },\n            terminated() {\n            },\n        });\n        const keyVal = {\n            async get(key) {\n                return (await dbPromise).get(storeName, key);\n            },\n            async put(key, val) {\n                return (await dbPromise).put(storeName, val, key);\n            },\n            async delete(key) {\n                return (await dbPromise).delete(storeName, key);\n            },\n            async clear() {\n                return (await dbPromise).clear(storeName);\n            },\n            async keys() {\n                return (await dbPromise).getAllKeys(storeName);\n            },\n        };\n        return getDbObj(keyVal);\n    };\n}\n","export const sha256 = async (x) => Array.from(new Uint8Array(await crypto.subtle.digest(\"SHA-256\", typeof x === \"string\" ? new TextEncoder().encode(x) : x)).slice(0, 4)).map((b) => (\"00\" + b.toString(16)).slice(-2)).join(\"\");\n"],"sourceRoot":""}