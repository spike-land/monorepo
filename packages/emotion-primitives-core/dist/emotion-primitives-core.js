var r=require("css-to-react-native"),e=require("react"),t=require("@zedvision/emotion-react");function n(r){return r&&"object"==typeof r&&"default"in r?r:{default:r}}var a,o=n(r);function i(r){for(var e=r[0],t=[e[0]],n=1,a=r.length;n<a;n++)t.push(r[n]),void 0!==e[n]&&t.push(e[n]);return t}var s,l={},c="";function u(r,e,t){var n=typeof r;if("string"===n&&(r=r.replace(/\/\*[\s\S]*?\*\/|\/\/.*$/gm,"")),"function"!==n){var o=null==r||"boolean"===n,i="object"===n&&!Array.isArray(r)||"number"===n;if("string"===s&&(i||o)){var l=v(c);void 0!==l&&a.push(l),c=""}if(!o){if("string"===n&&(c+=r,t.length-1===e)){var p=v(c);void 0!==p&&a.push(p),c=""}i&&a.push(r),Array.isArray(r)&&r.forEach(u,this),s=n}}else void 0===this?"production"!==process.env.NODE_ENV&&console.error("Interpolating functions in css calls is not allowed.\nIf you want to have a css call based on props, create a function that returns a css call like this\nlet dynamicStyle = (props) => css`color: ${props.color}`\nIt can be called directly with props or interpolated in a styled call like this\nlet SomeComponent = styled.View`${dynamicStyle}`"):u.call(this,r(this),e,t)}function p(r){return function(){var e,t=[].slice.call(arguments),n=c;a=[],c="",s=void 0,e=null==t[0]||void 0===t[0].raw?t:i(t);try{e.forEach(u,this)}finally{c=n}var o=JSON.stringify(a);if(!l[o]){var p=r.create({generated:r.flatten(a)});l[o]=p.generated}return l[o]}}var f=/\s*([^\s]+)\s*:\s*(.+?)\s*$/;function d(r){var e=f.exec(r);null!==e&&" "!==e[2]&&(e.shift(),this.push(e))}function v(r){if(""!==r.trim()){var e=[];r.split(";").forEach(d,e);try{return o.default(e)}catch(r){var t=r.message;if(t.includes("Failed to parse declaration")){var n=t.replace("Failed to parse declaration ","").replace(/"/g,"").trim().split(":");console.error("'"+n[0]+"' shorthand property requires units for example - "+n[0]+": 20px or "+n[0]+": 10px 20px 40px 50px")}}}}var h=function(r){return"theme"!==r&&"as"!==r},y=function(r){return"string"==typeof r?r:r.displayName||r.name||"Styled"};exports.createCss=p,exports.createStyled=function(r,n){var a=(void 0===n?{}:n).getShouldForwardProp,o=void 0===a?function(){return h}:a,s=p(r);return function r(n,a){var l=a&&a.shouldForwardProp?a.shouldForwardProp:void 0,c=l||o(n),u=!c("as");return function(){var a,p=[].slice.call(arguments);a=null==p[0]||void 0===p[0].raw?p:i(p);var f=e.forwardRef(function(r,i){var p=u&&r.as||n,f=r;if(null==r.theme){for(var d in f={},r)f[d]=r[d];f.theme=e.useContext(t.ThemeContext)}var v=u&&void 0===l?o(p):c,h={};for(var y in r)u&&"as"===y||v(y)&&(h[y]=r[y]);return h.style=[s.apply(f,a),r.style],h.ref=i,e.createElement(p,h)});return f.withComponent=function(e){return r(e).apply(void 0,a)},f.displayName="emotion("+y(n)+")",f}}};
//# sourceMappingURL=emotion-primitives-core.js.map
