{"version":3,"file":"emotion-server.esm.js","sources":["../src/create-instance/extract-critical.js","../src/create-instance/inline.js","../src/create-instance/stream.js","../../emotion-css/dist/emotion-css.esm.js","../src/create-instance/index.js","../src/index.js"],"sourcesContent":["// @flow\nimport type { EmotionCache } from '@zedvision/emotion-utils'\n\nconst createExtractCritical = (cache: EmotionCache) => (html: string) => {\n  // parse out ids from html\n  // reconstruct css/rules/cache to pass\n  let RGX = new RegExp(`${cache.key}-([a-zA-Z0-9-_]+)`, 'gm')\n\n  let o = { html, ids: [], css: '' }\n  let match\n  let ids = {}\n  while ((match = RGX.exec(html)) !== null) {\n    // $FlowFixMe\n    if (ids[match[1]] === undefined) {\n      // $FlowFixMe\n      ids[match[1]] = true\n    }\n  }\n\n  o.ids = Object.keys(cache.inserted).filter((id) => {\n    if (\n      (ids[id] !== undefined ||\n        cache.registered[`${cache.key}-${id}`] === undefined) &&\n      cache.inserted[id] !== true\n    ) {\n      o.css += cache.inserted[id]\n      return true\n    }\n  })\n\n  return o\n}\n\nexport default createExtractCritical\n","// @flow\nimport type { EmotionCache } from '@zedvision/emotion-utils'\n\nfunction generateStyleTag(\n  cssKey: string,\n  ids: string,\n  styles: string,\n  nonceString: string\n) {\n  return `<style data-emotion=\"${cssKey} ${ids.substring(\n    1\n  )}\"${nonceString}>${styles}</style>`\n}\n\nconst createRenderStylesToString = (\n  cache: EmotionCache,\n  nonceString: string\n) => (html: string): string => {\n  const { inserted, key: cssKey, registered } = cache\n  const regex = new RegExp(`<|${cssKey}-([a-zA-Z0-9-_]+)`, 'gm')\n\n  const seen = {}\n\n  let result = ''\n  let globalIds = ''\n  let globalStyles = ''\n\n  for (const id in inserted) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (inserted.hasOwnProperty(id)) {\n      const style = inserted[id]\n      const key = `${cssKey}-${id}`\n      if (style !== true && registered[key] === undefined) {\n        globalStyles += style\n        globalIds += ` ${id}`\n      }\n    }\n  }\n\n  if (globalStyles !== '') {\n    result = generateStyleTag(cssKey, globalIds, globalStyles, nonceString)\n  }\n\n  let ids = ''\n  let styles = ''\n  let lastInsertionPoint = 0\n  let match\n\n  while ((match = regex.exec(html)) !== null) {\n    // $FlowFixMe\n    if (match[0] === '<') {\n      if (ids !== '') {\n        result += generateStyleTag(cssKey, ids, styles, nonceString)\n        ids = ''\n        styles = ''\n      }\n      // $FlowFixMe\n      result += html.substring(lastInsertionPoint, match.index)\n      // $FlowFixMe\n      lastInsertionPoint = match.index\n      continue\n    }\n    // $FlowFixMe\n    const id = match[1]\n    const style = inserted[id]\n    if (style === true || style === undefined || seen[id]) {\n      continue\n    }\n\n    seen[id] = true\n    styles += style\n    ids += ` ${id}`\n  }\n\n  result += html.substring(lastInsertionPoint)\n\n  return result\n}\n\nexport default createRenderStylesToString\n","// @flow\nimport type { EmotionCache } from '@zedvision/emotion-utils'\nimport through from 'through'\nimport tokenize from 'html-tokenize'\nimport pipe from 'multipipe'\n\nconst createRenderStylesToNodeStream = (\n  cache: EmotionCache,\n  nonceString: string\n) => () => {\n  let insed = {}\n  const tokenStream = tokenize()\n\n  const inlineStream = through(\n    function write(thing) {\n      let [type, data] = thing\n      if (type === 'open') {\n        let css = ''\n        let ids = {}\n\n        let match\n        let fragment = data.toString()\n        let regex = new RegExp(`${cache.key}-([a-zA-Z0-9-_]+)`, 'gm')\n        while ((match = regex.exec(fragment)) !== null) {\n          if (match !== null && insed[match[1]] === undefined) {\n            ids[match[1]] = true\n          }\n        }\n        Object.keys(cache.inserted).forEach((id) => {\n          if (\n            cache.inserted[id] !== true &&\n            insed[id] === undefined &&\n            (ids[id] === true ||\n              (cache.registered[`${cache.key}-${id}`] === undefined &&\n                (ids[id] = true)))\n          ) {\n            insed[id] = true\n            // $FlowFixMe flow thinks emotion.caches.inserted[id] can be true even though it's checked earlier\n            css += cache.inserted[id]\n          }\n        })\n\n        if (css !== '') {\n          this.queue(\n            `<style data-emotion=\"${cache.key} ${Object.keys(ids).join(\n              ' '\n            )}\"${nonceString}>${css}</style>`\n          )\n        }\n      }\n      this.queue(data)\n    },\n    function end() {\n      this.queue(null)\n    }\n  )\n\n  return pipe(tokenStream, inlineStream)\n}\n\nexport default createRenderStylesToNodeStream\n","import e from\"@zedvision/emotion-cache\";import{serializeStyles as r}from\"@zedvision/emotion-serialize\";import{getRegisteredStyles as t,insertStyles as i}from\"@zedvision/emotion-utils\";function n(e,r){if(void 0===e.inserted[r.name])return e.insert(\"\",r,e.sheet,!0)}function s(e,r,i){var n=[],s=t(e,n,i);return n.length<2?i:s+r(n)}var a=function e(r){for(var t=\"\",i=0;i<r.length;i++){var n=r[i];if(null!=n){var s=void 0;switch(typeof n){case\"boolean\":break;case\"object\":if(Array.isArray(n))s=e(n);else for(var a in s=\"\",n)n[a]&&a&&(s&&(s+=\" \"),s+=a);break;default:s=n}s&&(t&&(t+=\" \"),t+=s)}}return t},o=function(o){var c=e({key:\"css\"});c.sheet.speedy=function(e){if(\"production\"!==process.env.NODE_ENV&&0!==this.ctr)throw new Error(\"speedy must be changed before any rules are inserted\");this.isSpeedy=e},c.compat=!0;var l=function(){var e=r([].slice.call(arguments),c.registered,void 0);return i(c,e,!1),c.key+\"-\"+e.name};return{css:l,cx:function(){return s(c.registered,l,a([].slice.call(arguments)))},injectGlobal:function(){var e=r([].slice.call(arguments),c.registered);n(c,e)},keyframes:function(){var e=r([].slice.call(arguments),c.registered),t=\"animation-\"+e.name;return n(c,{name:e.name,styles:\"@keyframes \"+t+\"{\"+e.styles+\"}\"}),t},hydrate:function(e){e.forEach(function(e){c.inserted[e]=!0})},flush:function(){c.registered={},c.inserted={},c.sheet.flush()},sheet:c.sheet,cache:c,getRegisteredStyles:t.bind(null,c.registered),merge:s.bind(null,c.registered,l)}}(),c=o.flush,l=o.hydrate,f=o.cx,d=o.merge,u=o.getRegisteredStyles,m=o.injectGlobal,h=o.keyframes,g=o.css,y=o.sheet,v=o.cache;export{v as cache,g as css,f as cx,c as flush,u as getRegisteredStyles,l as hydrate,m as injectGlobal,h as keyframes,d as merge,y as sheet};\n//# sourceMappingURL=emotion-css.esm.js.map\n","// @flow\nimport type { EmotionCache } from '@zedvision/emotion-utils'\nimport createExtractCritical from './extract-critical'\nimport createRenderStylesToString from './inline'\nimport createRenderStylesToStream from './stream'\n\nexport default function (cache: EmotionCache) {\n  if (cache.compat !== true) {\n    // is this good? should we do this automatically?\n    // this is only for when using the new apis (not emotion or create-emotion)\n    cache.compat = true\n  }\n  const nonceString = cache.nonce !== undefined ? ` nonce=\"${cache.nonce}\"` : ''\n  return {\n    extractCritical: createExtractCritical(cache),\n    renderStylesToString: createRenderStylesToString(cache, nonceString),\n    renderStylesToNodeStream: createRenderStylesToStream(cache, nonceString),\n  }\n}\n","// @flow\nimport createEmotionServer from './create-instance'\nimport { cache } from '@zedvision/emotion-css'\n\nexport const {\n  extractCritical,\n  renderStylesToString,\n  renderStylesToNodeStream,\n} = createEmotionServer(cache)\n"],"names":["createExtractCritical","cache","html","match","RGX","RegExp","key","o","ids","css","exec","undefined","Object","keys","inserted","filter","id","registered","generateStyleTag","cssKey","styles","nonceString","substring","createRenderStylesToString","regex","seen","result","globalIds","globalStyles","hasOwnProperty","style","lastInsertionPoint","index","createRenderStylesToNodeStream","insed","tokenStream","tokenize","inlineStream","through","thing","data","fragment","toString","forEach","this","queue","join","pipe","insertWithoutScoping","serialized","name","insert","sheet","merge","className","registeredStyles","rawClassName","getRegisteredStyles","length","classnames","args","cls","i","arg","toAdd","Array","isArray","k","compat","nonce","extractCritical","renderStylesToString","renderStylesToNodeStream","createRenderStylesToStream","createEmotionServer","options","createCache","speedy","value","process","env","NODE_ENV","ctr","Error","isSpeedy","serializeStyles","insertStyles","cx","injectGlobal","keyframes","animation","hydrate","flush","bind"],"mappings":"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"}