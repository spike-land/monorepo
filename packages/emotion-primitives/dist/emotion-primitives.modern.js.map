{"version":3,"file":"emotion-primitives.modern.js","sources":["../src/test-props.js","../src/styled.js","../src/index.js"],"sourcesContent":["// @flow\nimport isPropValid from '@zedvision/emotion-is-prop-valid'\n\nconst forwardableProps = {\n  // primitive props\n  abortPrefetch: true,\n  accessibilityComponentType: true,\n  accessibilityElementsHidden: true,\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityStates: true,\n  accessibilityTraits: true,\n  accessibilityViewIsModal: true,\n  accessible: true,\n  adjustsFontSizeToFit: true,\n  allowFontScaling: true,\n  blurRadius: true,\n  capInsets: true,\n  collapsable: true,\n  defaultSource: true,\n  disabled: true,\n  ellipsizeMode: true,\n  fadeDuration: true,\n  getSize: true,\n  hitSlop: true,\n  importantForAccessibility: true,\n  loadingIndicatorSource: true,\n  Methods: true,\n  minimumFontScale: true,\n  nativeID: true,\n  needsOffscreenAlphaCompositing: true,\n  numberOfLines: true,\n  pointerEvents: true,\n  prefetch: true,\n  pressRetentionOffset: true,\n  queryCache: true,\n  removeClippedSubviews: true,\n  renderToHardwareTextureAndroid: true,\n  resizeMethod: true,\n  resizeMode: true,\n  resolveAssetSource: true,\n  selectable: true,\n  selectionColor: true,\n  shouldRasterizeIOS: true,\n  source: true,\n  suppressHighlighting: true,\n  testID: true,\n  textBreakStrategy: true,\n}\n\nexport function testPickPropsOnPrimitiveComponent(prop: string) {\n  return (\n    forwardableProps[prop] === true ||\n    // This will allow the standard react props\n    // and dom props since people could\n    // be using it on the web\n    isPropValid(prop)\n  )\n}\n\nexport function testPickPropsOnOtherComponent(prop: string) {\n  return prop !== 'theme'\n}\n","// @flow\nimport * as React from 'react'\nimport { StyleSheet, View, Text, Image } from 'react-primitives'\nimport { createStyled } from '@zedvision/emotion-primitives-core'\nimport {\n  testPickPropsOnPrimitiveComponent,\n  testPickPropsOnOtherComponent,\n} from './test-props'\n\nfunction getShouldForwardProp(component: React.ElementType) {\n  switch (component) {\n    case View:\n    case Text:\n    case Image: {\n      return testPickPropsOnPrimitiveComponent\n    }\n  }\n  return testPickPropsOnOtherComponent\n}\n\n/**\n * a function that returns a styled component which render styles on multiple targets with same code\n */\n\ntype CreateStyledComponent = (\n  ...styles: any\n) => React.StatelessFunctionalComponent<any> & {\n  withComponent: (component: any) => React.StatelessFunctionalComponent<any>,\n}\n\ntype BaseStyled = (tag: React.ElementType) => CreateStyledComponent\n\nexport type Styled = BaseStyled & {\n  View: CreateStyledComponent,\n  Text: CreateStyledComponent,\n  Image: CreateStyledComponent,\n}\n\nlet styled: Styled = createStyled(StyleSheet, { getShouldForwardProp })\n\nexport { styled }\n","// @flow\nimport { StyleSheet, Text, View, Image } from 'react-primitives'\nimport { createCss } from '@zedvision/emotion-primitives-core'\n\nimport { styled as createStyled } from './styled'\n\nconst css = createCss(StyleSheet)\n\nconst assignPrimitives = (styled) => {\n  createStyled.Text = createStyled(Text)\n  createStyled.View = createStyled(View)\n  createStyled.Image = createStyled(Image)\n\n  return styled\n}\n\nexport { css }\n\nexport default /* #__PURE__ */ assignPrimitives(createStyled)\n"],"names":["forwardableProps","abortPrefetch","accessibilityComponentType","accessibilityElementsHidden","accessibilityLabel","accessibilityLiveRegion","accessibilityRole","accessibilityStates","accessibilityTraits","accessibilityViewIsModal","accessible","adjustsFontSizeToFit","allowFontScaling","blurRadius","capInsets","collapsable","defaultSource","disabled","ellipsizeMode","fadeDuration","getSize","hitSlop","importantForAccessibility","loadingIndicatorSource","Methods","minimumFontScale","nativeID","needsOffscreenAlphaCompositing","numberOfLines","pointerEvents","prefetch","pressRetentionOffset","queryCache","removeClippedSubviews","renderToHardwareTextureAndroid","resizeMethod","resizeMode","resolveAssetSource","selectable","selectionColor","shouldRasterizeIOS","source","suppressHighlighting","testID","textBreakStrategy","testPickPropsOnPrimitiveComponent","prop","isPropValid","testPickPropsOnOtherComponent","styled","createStyled","StyleSheet","getShouldForwardProp","component","View","Text","Image","css","createCss","assignPrimitives"],"mappings":"4NAGA,IAAMA,EAAmB,CAEvBC,eAAe,EACfC,4BAA4B,EAC5BC,6BAA6B,EAC7BC,oBAAoB,EACpBC,yBAAyB,EACzBC,mBAAmB,EACnBC,qBAAqB,EACrBC,qBAAqB,EACrBC,0BAA0B,EAC1BC,YAAY,EACZC,sBAAsB,EACtBC,kBAAkB,EAClBC,YAAY,EACZC,WAAW,EACXC,aAAa,EACbC,eAAe,EACfC,UAAU,EACVC,eAAe,EACfC,cAAc,EACdC,SAAS,EACTC,SAAS,EACTC,2BAA2B,EAC3BC,wBAAwB,EACxBC,SAAS,EACTC,kBAAkB,EAClBC,UAAU,EACVC,gCAAgC,EAChCC,eAAe,EACfC,eAAe,EACfC,UAAU,EACVC,sBAAsB,EACtBC,YAAY,EACZC,uBAAuB,EACvBC,gCAAgC,EAChCC,cAAc,EACdC,YAAY,EACZC,oBAAoB,EACpBC,YAAY,EACZC,gBAAgB,EAChBC,oBAAoB,EACpBC,QAAQ,EACRC,sBAAsB,EACtBC,QAAQ,EACRC,mBAAmB,YAGLC,EAAkCC,GAChD,OAC6B,IAA3B9C,EAAiB8C,IAIjBC,EAAYD,YAIAE,EAA8BF,GAC5C,MAAgB,UAATA,ECxBT,IAAIG,EAAiBC,EAAaC,EAAY,CAAEC,qBA7BhD,SAA8BC,GAC5B,OAAQA,GACN,KAAKC,EACL,KAAKC,EACL,KAAKC,EACH,OAAOX,EAGX,OAAOG,KCXHS,EAAMC,EAAUP,KAEG,SAACF,GAKxB,OAJAC,EAAaK,KAAOL,EAAaK,GACjCL,EAAaI,KAAOJ,EAAaI,GACjCJ,EAAaM,MAAQN,EAAaM,GAE3BP,EAKsBU,CAAiBT"}