const diff=async(e,t)=>{const{Diff:a}=await import("https://unpkg.com/diff@5.0.0/lib/index.es6.js"),{sha256:o}=await import("https://unpkg.com/@zedvision/sha256@10.12.14/sha256.js"),c=o(e),l=new a().diff(e,t);return{b:await c,c:l.map(u=>u.added?u.value:u.removed?-u.count:u.count)}},corsHeaders={"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET,HEAD,POST,OPTIONS","Access-Control-Max-Age":"86400"},isDiff=e=>{if(e.length<10)return!1;const t=[...e.slice(0,8)].filter(o=>o<"0"||o>"f").length===0,a=e.slice(8);if(t&&a[0]==="["&&a[a.length-1]==="]")try{return JSON.parse(a).length>1}catch{return!1}return!1},assemble=(e,t)=>{const a=JSON.parse(t);let o=e.slice(),c="";return a.forEach(s=>{if(Number(s)===s){const l=Math.abs(s),u=o.slice(0,l);o=o.slice(l),s>0&&(c+=String(u))}else c+=String(s)}),c},sha256=async e=>Array.from(new Uint8Array(await crypto.subtle.digest("SHA-256",typeof e=="string"?new TextEncoder().encode(e):e)).slice(0,4)).map(t=>("00"+t.toString(16)).slice(-2)).join(""),getDbObj=e=>{const t={async get(a,o="string"){let c;try{if(c=await e.get(a),!c)return null}catch(l){return null}if(o==="json")return JSON.parse(c);const s=await c;if(o==="string"){if(typeof s=="string"&&o==="string"){const l=s;if(isDiff(s)){const u=s.slice(0,8),r=s.slice(8),n=await t.get(u);return assemble(n,r)}return s}return new TextDecoder().decode(s)}return c},async put(a,o){let c;try{const l=await t.get(a);if(typeof l=="string"&&typeof o=="string"&&l.length===8&&l!==o){const u=await t.get(o),r=await t.get(l);if(typeof r=="string"){const n=await sha256(r);if(n===l){const d=await diff(u,r),g=d.b+JSON.stringify(d.c);await t.put(n,g)}}}}catch{c=""}if(c!==""&&o===c)return o;let s;return typeof o!="string"?s=new TextDecoder().decode(o):s=o,await e.put(a,s)},async delete(a){return await e.delete(a)},async clear(){return await e.clear()},async keys(){return await e.getAllKeys()}};return t};function json(e){return new Response(JSON.stringify(e),{headers:{...corsHeaders,"Content-Type":"application/json;charset=UTF-8"}})}function text(e){return new Response(e,{headers:{...corsHeaders,"Content-Type":"text/html;charset=UTF-8"}})}function js(e){return new Response(e,{headers:{...corsHeaders,"Content-Type":"application/javascript;charset=UTF-8"}})}function handleOptions(e){const t=e.headers;if(t.get("Origin")!==null&&t.get("Access-Control-Request-Method")!==null&&t.get("Access-Control-Request-Headers")!==null){const a={...corsHeaders,"Access-Control-Allow-Headers":e.headers.get("Access-Control-Request-Headers")};return new Response(null,{headers:a})}else return new Response(null,{headers:{Allow:corsHeaders["Access-Control-Allow-Methods"]}})}let now=0;var LOGS;async function handleAdmin(e,t,a,o){if(a==="/keys/"){const c=t.get("prefix"),s=await o.list({prefix:c});return json(s)}if(a==="/keys/delete/"){const c=t.get("hash"),s=await o.delete(c);return json(s)}return json({error:"not implemented"})}var getRandomValues,rnds8=new Uint8Array(16);function rng(){if(!getRandomValues&&(getRandomValues=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto!="undefined"&&typeof msCrypto.getRandomValues=="function"&&msCrypto.getRandomValues.bind(msCrypto),!getRandomValues))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return getRandomValues(rnds8)}const __default=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function validate(e){return typeof e=="string"&&__default.test(e)}for(var byteToHex=[],i=0;i<256;++i)byteToHex.push((i+256).toString(16).substr(1));function stringify(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,a=(byteToHex[e[t+0]]+byteToHex[e[t+1]]+byteToHex[e[t+2]]+byteToHex[e[t+3]]+"-"+byteToHex[e[t+4]]+byteToHex[e[t+5]]+"-"+byteToHex[e[t+6]]+byteToHex[e[t+7]]+"-"+byteToHex[e[t+8]]+byteToHex[e[t+9]]+"-"+byteToHex[e[t+10]]+byteToHex[e[t+11]]+byteToHex[e[t+12]]+byteToHex[e[t+13]]+byteToHex[e[t+14]]+byteToHex[e[t+15]]).toLowerCase();if(!validate(a))throw TypeError("Stringified UUID is invalid");return a}function v4(e,t,a){e=e||{};var o=e.random||(e.rng||rng)();if(o[6]=o[6]&15|64,o[8]=o[8]&63|128,t){a=a||0;for(var c=0;c<16;++c)t[a+c]=o[c];return t}return stringify(o)}const v41=()=>v4();var SHAKV,USERS,USERKEYS,API_KEY;function log(e,t={}){now=now||Date.now();const[a,o]=new Date().toLocaleTimeString("en-US").split(/:| /);return LOGS.put(String(2e12-now++),JSON.stringify({message:e,time:`${a}:${o}`,data:t}),{expirationTtl:86400*7})}async function handleCloudRequest(e){const{country:t,colo:a}=e.cf||{country:"",colo:""},o=new URL(e.url),{searchParams:c,pathname:s}=o,l=String(e.headers.get("API_KEY")||"");if(log("request",{searchParams:c,pathname:s,country:t,colo:a}),e.method==="GET"&&l&&l==API_KEY)return handleAdmin(e,c,s,SHAKV);if(e.method==="GET"){if(s==="/robots.txt")return text("User-agent: * Disallow: /");if(s==="/connect"&&c.get("key")){const r=c.get("key"),n=r.slice(0,8),d=r.slice(8,16),g=r.slice(16,24),p=r.slice(24,32),w=await sha256(n+d);if(!n||!d||!g||w!==p)return json({error:"auth error"});const h=await USERKEYS.get(d);if(h===null)return json({error:401});const f=await USERKEYS.get(n);if(f===null)return json({error:404,message:"token not found"});const y=await sha256(n+h),m=await sha256(f+h);return y===g?(await USERS.put(f,JSON.stringify({uuid:h,connected:d}),{expirationTtl:60}),json({success:!0})):json(m===g?{success:!0}:{error:401})}if(s==="/check"){const r=c.get("key");if(r===null)return new Response("500");const d=await(async()=>{const g=await USERKEYS.get(r);if(!g)return null;const p=await USERS.get(g,"json");return!p||p.connected?p:new Promise(w=>{const h=setInterval(async()=>{const f=await USERS.get(g,"json");(!f||f.connected)&&(clearInterval(h),w(f))},1e3)})})();return json({expired:d===null})}if(s==="/register"){const r=v41(),n=await sha256(r);return await USERS.put(r,JSON.stringify({uuid:r,uuidHash:n,registered:Date.now(),country:t,colo:a})),await log("register",{uuidHash:n}),await USERKEYS.put(n,r),json({uuid:r})}if(s==="/token"){const r=v41(),n=await sha256(r);return await USERS.put(r,JSON.stringify({uuid:r,registered:Date.now(),country:t,colo:a}),{expirationTtl:60}),await USERKEYS.put(n,r,{expirationTtl:60}),json({uuid:r,key:n})}if(s==="/create-project"){const r=e.headers.get("TOKEN"),n=v41();return await USERS.put(n,JSON.stringify({uuid:n,registered:Date.now(),country:t,colo:a})),json({uuid:n})}const u=s.substr(1);if(u){const n=await getDbObj(SHAKV).get(u);return n!==null?n.indexOf("export")===0?js(n):text(n):Response.redirect(`https://code.zed.vision/${u}`,301)}if(s.slice(0,6)==="/ipfs/"){const r=caches.default;let n=await r.match(e);return n||(n=await fetch(`https://ipfs.io/${s}`),await r.put(e,n.clone())),n.status>399&&(n=new Response(n.statusText,{status:n.status})),n}return s==="/"?Response.redirect("https://blog.zed.vision",301):s==="/code"||s==="/code/"?Response.redirect("https://code.zed.vision",301):text(s)}else if(e.method==="POST"){const u=String(e.headers.get("ZKEY")||""),r=u.slice(0,8),n=u.slice(8,16),d=u.slice(16,24),g=u.slice(24,32);if(!r||!n||!d||!g)return json({error:401,message:"not matching keys"});if(await sha256(r+n)!==d)return json({error:401,message:"content and userkeys are not a pain"});const w=await e.arrayBuffer(),f=(await sha256(w)).substring(0,8);if(f!==r)return json({error:401,message:`body hash not matching with the sent hash: ${f} -- ${u}`});const y=await USERKEYS.get(n);if(!y)return json({error:500,message:"user not found"});if(await sha256(r+y)!==g)return json({error:401,message:"user not verified"});await log("new html",{sha:r,uKey:n});const S=s.substr(1);if(await SHAKV.put(f,w),S){const R=await getDbObj(SHAKV).put(S,f)}return json({hash:f})}return new Response("404")}addEventListener("fetch",e=>{e.request.method==="OPTIONS"?e.respondWith(handleOptions(e.request)):e.respondWith(handleCloudRequest(e.request))});
