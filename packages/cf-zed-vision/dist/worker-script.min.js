const diff=async(t,e)=>{const{diffChars:a}=await import("./vendor/diff.min.js"),{sha256:n}=await import("./sha256.js"),c=n(t),s=a(t,e);return{b:await c,c:s.map(h=>h.added?h.value:h.removed?-h.count:h.count)}},corsHeaders={"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET,HEAD,POST,OPTIONS","Access-Control-Max-Age":"86400"},isDiff=t=>{if(t.length<10)return!1;const e=[...t.slice(0,8)].filter(n=>n<"0"||n>"f").length===0,a=t.slice(8);if(e&&a[0]==="["&&a[a.length-1]==="]")try{return JSON.parse(a).length>1}catch{return!1}return!1},assemble=(t,e)=>{const a=JSON.parse(e);let n=t.slice(),c="";return a.forEach(s=>{if(Number(s)===s){const h=Math.abs(s),u=n.slice(0,h);n=n.slice(h),s>0&&(c+=String(u))}else c+=String(s)}),c},sha256=async t=>Array.from(new Uint8Array(await crypto.subtle.digest("SHA-256",typeof t=="string"?new TextEncoder().encode(t):t)).slice(0,4)).map(e=>("00"+e.toString(16)).slice(-2)).join(""),getDbObj=t=>{const e={async get(a,n="string"){let c;try{if(c=await t.get(a),!c)return null}catch(h){return null}if(n==="json")return JSON.parse(c);const s=await c;if(n==="string"){if(typeof s=="string"&&n==="string"){const h=s;if(isDiff(s)){const u=s.slice(0,8),f=s.slice(8),r=await e.get(u);return assemble(r,f)}return s}return new TextDecoder().decode(s)}return c},async put(a,n){let c;try{const h=await e.get(a);if(typeof h=="string"&&typeof n=="string"&&h.length===8&&h!==n){const u=await e.get(n),f=await e.get(h);if(typeof f=="string"){const r=await sha256(f);if(r===h){const o=await diff(u,f),p=o.b+JSON.stringify(o.c);await e.put(r,p)}}}}catch{c=""}if(c!==""&&n===c)return n;let s;return typeof n!="string"?s=new TextDecoder().decode(n):s=n,await t.put(a,s)},async delete(a){return await t.delete(a)},async clear(){return await t.clear()},async keys(){return await t.getAllKeys()}};return e};function json(t){return new Response(JSON.stringify(t),{headers:{...corsHeaders,"Content-Type":"application/json;charset=UTF-8"}})}function text(t){return new Response(t,{headers:{...corsHeaders,"Content-Type":"text/html;charset=UTF-8"}})}function js(t){return new Response(t,{headers:{...corsHeaders,"Content-Type":"application/javascript;charset=UTF-8"}})}function handleOptions(t){const e=t.headers;if(e.get("Origin")!==null&&e.get("Access-Control-Request-Method")!==null&&e.get("Access-Control-Request-Headers")!==null){const a={...corsHeaders,"Access-Control-Allow-Headers":t.headers.get("Access-Control-Request-Headers")};return new Response(null,{headers:a})}else return new Response(null,{headers:{Allow:corsHeaders["Access-Control-Allow-Methods"]}})}let now=0;var LOGS;async function handleAdmin(t,e,a,n){if(a==="/keys/"){const c=e.get("prefix"),s=await n.list({prefix:c});return json(s)}if(a==="/keys/delete/"){const c=e.get("hash"),s=await n.delete(c);return json(s)}return json({error:"not implemented"})}var getRandomValues,rnds8=new Uint8Array(16);function rng(){if(!getRandomValues&&(getRandomValues=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto!="undefined"&&typeof msCrypto.getRandomValues=="function"&&msCrypto.getRandomValues.bind(msCrypto),!getRandomValues))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return getRandomValues(rnds8)}const __default=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function validate(t){return typeof t=="string"&&__default.test(t)}for(var byteToHex=[],i=0;i<256;++i)byteToHex.push((i+256).toString(16).substr(1));function stringify(t){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,a=(byteToHex[t[e+0]]+byteToHex[t[e+1]]+byteToHex[t[e+2]]+byteToHex[t[e+3]]+"-"+byteToHex[t[e+4]]+byteToHex[t[e+5]]+"-"+byteToHex[t[e+6]]+byteToHex[t[e+7]]+"-"+byteToHex[t[e+8]]+byteToHex[t[e+9]]+"-"+byteToHex[t[e+10]]+byteToHex[t[e+11]]+byteToHex[t[e+12]]+byteToHex[t[e+13]]+byteToHex[t[e+14]]+byteToHex[t[e+15]]).toLowerCase();if(!validate(a))throw TypeError("Stringified UUID is invalid");return a}function v4(t,e,a){t=t||{};var n=t.random||(t.rng||rng)();if(n[6]=n[6]&15|64,n[8]=n[8]&63|128,e){a=a||0;for(var c=0;c<16;++c)e[a+c]=n[c];return e}return stringify(n)}const v41=()=>v4();var SHAKV,USERS,USERKEYS,API_KEY;function log(t,e={}){now=now||Date.now();const[a,n]=new Date().toLocaleTimeString("en-US").split(/:| /);return LOGS.put(String(2e12-now++),JSON.stringify({message:t,time:`${a}:${n}`,data:e}),{expirationTtl:86400*7})}async function handleCloudRequest(t){const{country:e,colo:a}=t.cf||{country:"",colo:""},n=new URL(t.url),{searchParams:c,pathname:s}=n,h=String(t.headers.get("API_KEY")||"");if(log("request",{searchParams:c,pathname:s,country:e,colo:a}),t.method==="GET"&&h&&h==API_KEY)return handleAdmin(t,c,s,SHAKV);if(t.method==="GET"){if(s==="/robots.txt")return text("User-agent: * Disallow: /");if(s==="/connect"&&c.get("key")){const r=c.get("key"),o=r.slice(0,8),p=r.slice(8,16),l=r.slice(16,24),g=r.slice(24,32),y=await sha256(o+p);if(!o||!p||!l||y!==g)return json({error:"auth error"});const d=await USERKEYS.get(p);if(d===null)return json({error:401});const w=await USERKEYS.get(o);if(w===null)return json({error:404,message:"token not found"});const k=await sha256(o+d),m=await sha256(w+d);return k===l?(await USERS.put(w,JSON.stringify({uuid:d,connected:p}),{expirationTtl:60}),json({success:!0})):json(m===l?{success:!0}:{error:401})}if(s==="/check"){const r=c.get("key");if(r===null)return new Response("500");const p=await(async()=>{const l=await USERKEYS.get(r);if(!l)return null;const g=await USERS.get(l,"json");return!g||g.connected?g:new Promise(y=>{const d=setInterval(async()=>{const w=await USERS.get(l,"json");(!w||w.connected)&&(clearInterval(d),y(w))},1e3)})})();return json({expired:p===null})}if(s==="/register"){const r=v41(),o=await sha256(r);return await USERS.put(r,JSON.stringify({uuid:r,uuidHash:o,registered:Date.now(),country:e,colo:a})),await log("register",{uuidHash:o}),await USERKEYS.put(o,r),json({uuid:r})}if(s==="/token"){const r=v41(),o=await sha256(r);return await USERS.put(r,JSON.stringify({uuid:r,registered:Date.now(),country:e,colo:a}),{expirationTtl:60}),await USERKEYS.put(o,r,{expirationTtl:60}),json({uuid:r,key:o})}if(s==="/create-project"){const r=t.headers.get("TOKEN"),o=v41();return await USERS.put(o,JSON.stringify({uuid:o,registered:Date.now(),country:e,colo:a})),json({uuid:o})}const u=s.substr(1),f=[...u].filter(r=>r<"0"||r>"f").length===0;if(u&&f){const o=await getDbObj(SHAKV).get(u);return o!==null?o.indexOf("export")===0?js(o):text(o):Response.redirect(`https://code.zed.vision/${u}`,301)}if(s.slice(0,6)==="/ipfs/"){const r=caches.default;let o=await r.match(t);if(!o){const p=publicIpfsGateways.sort(()=>.5-Math.random()).slice(0,5).map(l=>l.replace("/ipfs/:hash",s)).map(l=>fetch(l).then(g=>g.status===200?g:(()=>{throw new Error("Not found")})()));o=await raceToSuccess(p),await r.put(t,o.clone())}return o.status>399&&(o=new Response(o.statusText,{status:o.status})),o}return s==="/"?Response.redirect("https://blog.zed.vision",301):s==="/code"||s==="/code/"?Response.redirect("https://code.zed.vision",301):text(s)}else if(t.method==="POST"){const u=String(t.headers.get("ZKEY")||""),f=u.slice(0,8),r=u.slice(8,16),o=u.slice(16,24),p=u.slice(24,32);if(!f||!r||!o||!p)return json({error:401,message:"not matching keys"});if(await sha256(f+r)!==o)return json({error:401,message:"content and userkeys are not a pain"});const g=await t.arrayBuffer(),d=(await sha256(g)).substring(0,8);if(d!==f)return json({error:401,message:`body hash not matching with the sent hash: ${d} -- ${u}`});const w=await USERKEYS.get(r);if(!w)return json({error:500,message:"user not found"});if(await sha256(f+w)!==p)return json({error:401,message:"user not verified"});await log("new html",{sha:f,uKey:r});const m=s.substr(1);if(await SHAKV.put(d,g),m){const b=await getDbObj(SHAKV).put(m,d)}return json({hash:d})}return new Response("404")}function raceToSuccess(t){let e=0;return new Promise((a,n)=>t.forEach(c=>c.then(a).catch(()=>{++e===t.length&&n()})))}const publicIpfsGateways=["https://ipfs.io/ipfs/:hash","https://dweb.link/ipfs/:hash","https://gateway.ipfs.io/ipfs/:hash","https://ipfs.infura.io/ipfs/:hash","https://ninetailed.ninja/ipfs/:hash","https://10.via0.com/ipfs/:hash","https://ipfs.eternum.io/ipfs/:hash","https://hardbin.com/ipfs/:hash","https://cloudflare-ipfs.com/ipfs/:hash","https://cf-ipfs.com/ipfs/:hash","https://gateway.pinata.cloud/ipfs/:hash","https://ipfs.sloppyta.co/ipfs/:hash","https://ipfs.greyh.at/ipfs/:hash","https://jorropo.ovh/ipfs/:hash","https://jorropo.net/ipfs/:hash","https://gateway.temporal.cloud/ipfs/:hash","https://ipfs.runfission.com/ipfs/:hash","https://trusti.id/ipfs/:hash","https://ipfs.overpi.com/ipfs/:hash","https://ipfs.ink/ipfs/:hash","https://gateway.ravenland.org/ipfs/:hash","https://ipfs.smartsignature.io/ipfs/:hash","https://ipfs.telos.miami/ipfs/:hash","https://robotizing.net/ipfs/:hash","https://ipfs.mttk.net/ipfs/:hash","https://ipfs.fleek.co/ipfs/:hash","https://ipfs.jbb.one/ipfs/:hash","https://jacl.tech/ipfs/:hash","https://ipfs.k1ic.com/ipfs/:hash","https://ipfs.drink.cafe/ipfs/:hash","https://ipfs.azurewebsites.net/ipfs/:hash","https://gw.ipfspin.com/ipfs/:hash","https://ipfs.denarius.io/ipfs/:hash"];addEventListener("fetch",t=>{t.request.method==="OPTIONS"?t.respondWith(handleOptions(t.request)):t.respondWith(handleCloudRequest(t.request))});
