const diff=async(t,e)=>{const{Diff:a}=await import("https://unpkg.com/diff@5.0.0/lib/index.es6.js"),{sha256:o}=await import("https://unpkg.com/@zedvision/sha256@10.12.14/sha256.js"),c=o(t),r=new a,l=r.diff(t,e);return{b:await c,c:l.map(u=>u.added?u.value:u.removed?-u.count:u.count)}},corsHeaders={"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET,HEAD,POST,OPTIONS","Access-Control-Max-Age":"86400"},isDiff=t=>{if(t.length<10)return!1;const e=[...t.slice(0,8)].filter(o=>o<"0"||o>"f").length===0,a=t.slice(8);if(e&&a[0]==="["&&a[a.length-1]==="]")try{return JSON.parse(a).length>1}catch{return!1}return!1},assemble=(t,e)=>{const a=JSON.parse(e);let o=t.slice(),c="";return a.forEach(r=>{if(Number(r)===r){const l=Math.abs(r),u=o.slice(0,l);o=o.slice(l),r>0&&(c+=String(u))}else c+=String(r)}),c},sha256=async t=>Array.from(new Uint8Array(await crypto.subtle.digest("SHA-256",typeof t=="string"?new TextEncoder().encode(t):t)).slice(0,4)).map(e=>("00"+e.toString(16)).slice(-2)).join(""),getDbObj=t=>{const e={async get(a,o="string"){let c;try{if(c=await t.get(a),!c)return null}catch(l){return null}if(o==="json")return JSON.parse(c);const r=await c;if(o==="string"){if(typeof r=="string"&&o==="string"){const l=r;if(isDiff(r)){const u=r.slice(0,8),s=r.slice(8),n=await e.get(u);return assemble(n,s)}return r}return new TextDecoder().decode(r)}return c},async put(a,o){let c;try{const l=await e.get(a);if(typeof l=="string"&&typeof o=="string"&&l.length===8&&l!==o){const u=await e.get(o),s=await e.get(l);if(typeof s=="string"){const n=await sha256(s);if(n===l){const f=await diff(u,s),g=f.b+JSON.stringify(f.c);await e.put(n,g)}}}}catch{c=""}if(c!==""&&o===c)return o;let r;return typeof o!="string"?r=new TextDecoder().decode(o):r=o,await t.put(a,r)},async delete(a){return await t.delete(a)},async clear(){return await t.clear()},async keys(){return await t.getAllKeys()}};return e};function json(t){return new Response(JSON.stringify(t),{headers:{...corsHeaders,"Content-Type":"application/json;charset=UTF-8"}})}function text(t){return new Response(t,{headers:{...corsHeaders,"Content-Type":"text/html;charset=UTF-8"}})}function js(t){return new Response(t,{headers:{...corsHeaders,"Content-Type":"application/javascript;charset=UTF-8"}})}function handleOptions(t){const e=t.headers;if(e.get("Origin")!==null&&e.get("Access-Control-Request-Method")!==null&&e.get("Access-Control-Request-Headers")!==null){const a={...corsHeaders,"Access-Control-Allow-Headers":t.headers.get("Access-Control-Request-Headers")};return new Response(null,{headers:a})}else return new Response(null,{headers:{Allow:corsHeaders["Access-Control-Allow-Methods"]}})}let now=0;var LOGS;async function handleAdmin(t,e,a,o){if(a==="/keys/"){const c=e.get("prefix"),r=await o.list({prefix:c});return json(r)}if(a==="/keys/delete/"){const c=e.get("hash"),r=await o.delete(c);return json(r)}return json({error:"not implemented"})}var getRandomValues,rnds8=new Uint8Array(16);function rng(){if(!getRandomValues&&(getRandomValues=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto!="undefined"&&typeof msCrypto.getRandomValues=="function"&&msCrypto.getRandomValues.bind(msCrypto),!getRandomValues))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return getRandomValues(rnds8)}const __default=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function validate(t){return typeof t=="string"&&__default.test(t)}for(var byteToHex=[],i=0;i<256;++i)byteToHex.push((i+256).toString(16).substr(1));function stringify(t){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,a=(byteToHex[t[e+0]]+byteToHex[t[e+1]]+byteToHex[t[e+2]]+byteToHex[t[e+3]]+"-"+byteToHex[t[e+4]]+byteToHex[t[e+5]]+"-"+byteToHex[t[e+6]]+byteToHex[t[e+7]]+"-"+byteToHex[t[e+8]]+byteToHex[t[e+9]]+"-"+byteToHex[t[e+10]]+byteToHex[t[e+11]]+byteToHex[t[e+12]]+byteToHex[t[e+13]]+byteToHex[t[e+14]]+byteToHex[t[e+15]]).toLowerCase();if(!validate(a))throw TypeError("Stringified UUID is invalid");return a}function v4(t,e,a){t=t||{};var o=t.random||(t.rng||rng)();if(o[6]=o[6]&15|64,o[8]=o[8]&63|128,e){a=a||0;for(var c=0;c<16;++c)e[a+c]=o[c];return e}return stringify(o)}const v41=()=>v4();var SHAKV,USERS,USERKEYS,API_KEY;function log(t,e={}){now=now||Date.now();const[a,o]=new Date().toLocaleTimeString("en-US").split(/:| /);return LOGS.put(String(2e12-now++),JSON.stringify({message:t,time:`${a}:${o}`,data:e}),{expirationTtl:86400*7})}async function handleCloudRequest(t){const{country:e,colo:a}=t.cf||{country:"",colo:""},o=new URL(t.url),{searchParams:c,pathname:r}=o,l=String(t.headers.get("API_KEY")||"");if(log("request",{searchParams:c,pathname:r,country:e,colo:a}),t.method==="GET"&&l&&l==API_KEY)return handleAdmin(t,c,r,SHAKV);if(t.method==="GET"){if(r==="/robots.txt")return text("User-agent: * Disallow: /");if(r==="/connect"&&c.get("key")){const s=c.get("key"),n=s.slice(0,8),f=s.slice(8,16),g=s.slice(16,24),h=s.slice(24,32),w=await sha256(n+f);if(!n||!f||!g||w!==h)return json({error:"auth error"});const p=await USERKEYS.get(f);if(p===null)return json({error:401});const d=await USERKEYS.get(n);if(d===null)return json({error:404,message:"token not found"});const y=await sha256(n+p),m=await sha256(d+p);return y===g?(await USERS.put(d,JSON.stringify({uuid:p,connected:f}),{expirationTtl:60}),json({success:!0})):m===g?json({success:!0}):json({error:401})}if(r==="/check"){const s=c.get("key");if(s===null)return new Response("500");const n=async()=>{const g=await USERKEYS.get(s);if(!g)return null;const h=await USERS.get(g,"json");return!h||h.connected?h:new Promise(w=>{const p=setInterval(async()=>{const d=await USERS.get(g,"json");(!d||d.connected)&&(clearInterval(p),w(d))},1e3)})},f=await n();return json({expired:f===null})}if(r==="/register"){const s=v41(),n=await sha256(s);return await USERS.put(s,JSON.stringify({uuid:s,uuidHash:n,registered:Date.now(),country:e,colo:a})),await log("register",{uuidHash:n}),await USERKEYS.put(n,s),json({uuid:s})}if(r==="/token"){const s=v41(),n=await sha256(s);return await USERS.put(s,JSON.stringify({uuid:s,registered:Date.now(),country:e,colo:a}),{expirationTtl:60}),await USERKEYS.put(n,s,{expirationTtl:60}),json({uuid:s,key:n})}if(r==="/create-project"){const s=t.headers.get("TOKEN"),n=v41();return await USERS.put(n,JSON.stringify({uuid:n,registered:Date.now(),country:e,colo:a})),json({uuid:n})}const u=r.substr(1);if(u){const s=getDbObj(SHAKV),n=await s.get(u);if(n!==null)return n.indexOf("export")===0?js(n):text(n)}if(r.slice(0,6)==="/ipfs/"){const s=caches.default;let n=await s.match(t);if(!n){n=await fetch(`https://ipfs.io/${r}`);const f={"Cache-Control":"public, max-age=604800, immutable"};n=new Response(n.body,{...n,headers:f}),await s.put(t,n.clone())}return n.status>399&&(n=new Response(n.statusText,{status:n.status})),n}return Response.redirect("https://blog.zed.vision",301)}else if(t.method==="POST"){const u=String(t.headers.get("ZKEY")||""),s=u.slice(0,8),n=u.slice(8,16),f=u.slice(16,24),g=u.slice(24,32);if(!s||!n||!f||!g)return json({error:401,message:"not matching keys"});const h=await sha256(s+n);if(h!==f)return json({error:401,message:"content and userkeys are not a pain"});const w=await t.arrayBuffer(),p=await sha256(w),d=p.substring(0,8);if(d!==s)return json({error:401,message:`body hash not matching with the sent hash: ${d} -- ${u}`});const y=await USERKEYS.get(n);if(!y)return json({error:500,message:"user not found"});const m=await sha256(s+y);if(m!==g)return json({error:401,message:"user not verified"});await log("new html",{sha:s,uKey:n});const S=r.substr(1);if(await SHAKV.put(d,w),S){const k=getDbObj(SHAKV),T=await k.put(S,d)}return json({hash:d})}return new Response("404")}addEventListener("fetch",t=>{t.request.method==="OPTIONS"?t.respondWith(handleOptions(t.request)):t.respondWith(handleCloudRequest(t.request))});
