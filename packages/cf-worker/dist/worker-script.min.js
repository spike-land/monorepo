async function arrBuffSha256(a){const t=await crypto.subtle.digest("SHA-256",a),s=Array.from(new Uint8Array(t)),n=s.map(r=>("00"+r.toString(16)).slice(-2)).join("");return n}const HEX_CHARS="0123456789abcdef".split(""),EXTRA=[-2147483648,8388608,32768,128],SHIFT=[24,16,8,0],blocks=[];class Sha1{#a;#h;#o;#t;#l;#f;#c;#e=1732584193;#s=4023233417;#n=2562383102;#i=271733878;#r=3285377520;#u=0;constructor(t=!1){this.init(t)}init(t){t?(blocks[0]=blocks[16]=blocks[1]=blocks[2]=blocks[3]=blocks[4]=blocks[5]=blocks[6]=blocks[7]=blocks[8]=blocks[9]=blocks[10]=blocks[11]=blocks[12]=blocks[13]=blocks[14]=blocks[15]=0,this.#a=blocks):this.#a=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],this.#e=1732584193,this.#s=4023233417,this.#n=2562383102,this.#i=271733878,this.#r=3285377520,this.#h=this.#o=this.#t=this.#l=0,this.#f=this.#c=!1}update(t){if(this.#f)return this;let s;t instanceof ArrayBuffer?s=new Uint8Array(t):s=t;let n=0;const r=s.length,e=this.#a;for(;n<r;){let i;if(this.#c&&(this.#c=!1,e[0]=this.#h,e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),typeof s!="string")for(i=this.#o;n<r&&i<64;++n)e[i>>2]|=s[n]<<SHIFT[i++&3];else for(i=this.#o;n<r&&i<64;++n){let h=s.charCodeAt(n);h<128?e[i>>2]|=h<<SHIFT[i++&3]:h<2048?(e[i>>2]|=(192|h>>6)<<SHIFT[i++&3],e[i>>2]|=(128|h&63)<<SHIFT[i++&3]):h<55296||h>=57344?(e[i>>2]|=(224|h>>12)<<SHIFT[i++&3],e[i>>2]|=(128|h>>6&63)<<SHIFT[i++&3],e[i>>2]|=(128|h&63)<<SHIFT[i++&3]):(h=65536+((h&1023)<<10|s.charCodeAt(++n)&1023),e[i>>2]|=(240|h>>18)<<SHIFT[i++&3],e[i>>2]|=(128|h>>12&63)<<SHIFT[i++&3],e[i>>2]|=(128|h>>6&63)<<SHIFT[i++&3],e[i>>2]|=(128|h&63)<<SHIFT[i++&3])}this.#u=i,this.#t+=i-this.#o,i>=64?(this.#h=e[16],this.#o=i-64,this.hash(),this.#c=!0):this.#o=i}return this.#t>4294967295&&(this.#l+=this.#t/4294967296>>>0,this.#t=this.#t>>>0),this}finalize(){if(this.#f)return;this.#f=!0;const t=this.#a,s=this.#u;t[16]=this.#h,t[s>>2]|=EXTRA[s&3],this.#h=t[16],s>=56&&(this.#c||this.hash(),t[0]=this.#h,t[16]=t[1]=t[2]=t[3]=t[4]=t[5]=t[6]=t[7]=t[8]=t[9]=t[10]=t[11]=t[12]=t[13]=t[14]=t[15]=0),t[14]=this.#l<<3|this.#t>>>29,t[15]=this.#t<<3,this.hash()}hash(){let t=this.#e,s=this.#s,n=this.#n,r=this.#i,e=this.#r,i,h,o;const c=this.#a;for(h=16;h<80;++h)o=c[h-3]^c[h-8]^c[h-14]^c[h-16],c[h]=o<<1|o>>>31;for(h=0;h<20;h+=5)i=s&n|~s&r,o=t<<5|t>>>27,e=o+i+e+1518500249+c[h]>>>0,s=s<<30|s>>>2,i=t&s|~t&n,o=e<<5|e>>>27,r=o+i+r+1518500249+c[h+1]>>>0,t=t<<30|t>>>2,i=e&t|~e&s,o=r<<5|r>>>27,n=o+i+n+1518500249+c[h+2]>>>0,e=e<<30|e>>>2,i=r&e|~r&t,o=n<<5|n>>>27,s=o+i+s+1518500249+c[h+3]>>>0,r=r<<30|r>>>2,i=n&r|~n&e,o=s<<5|s>>>27,t=o+i+t+1518500249+c[h+4]>>>0,n=n<<30|n>>>2;for(;h<40;h+=5)i=s^n^r,o=t<<5|t>>>27,e=o+i+e+1859775393+c[h]>>>0,s=s<<30|s>>>2,i=t^s^n,o=e<<5|e>>>27,r=o+i+r+1859775393+c[h+1]>>>0,t=t<<30|t>>>2,i=e^t^s,o=r<<5|r>>>27,n=o+i+n+1859775393+c[h+2]>>>0,e=e<<30|e>>>2,i=r^e^t,o=n<<5|n>>>27,s=o+i+s+1859775393+c[h+3]>>>0,r=r<<30|r>>>2,i=n^r^e,o=s<<5|s>>>27,t=o+i+t+1859775393+c[h+4]>>>0,n=n<<30|n>>>2;for(;h<60;h+=5)i=s&n|s&r|n&r,o=t<<5|t>>>27,e=o+i+e-1894007588+c[h]>>>0,s=s<<30|s>>>2,i=t&s|t&n|s&n,o=e<<5|e>>>27,r=o+i+r-1894007588+c[h+1]>>>0,t=t<<30|t>>>2,i=e&t|e&s|t&s,o=r<<5|r>>>27,n=o+i+n-1894007588+c[h+2]>>>0,e=e<<30|e>>>2,i=r&e|r&t|e&t,o=n<<5|n>>>27,s=o+i+s-1894007588+c[h+3]>>>0,r=r<<30|r>>>2,i=n&r|n&e|r&e,o=s<<5|s>>>27,t=o+i+t-1894007588+c[h+4]>>>0,n=n<<30|n>>>2;for(;h<80;h+=5)i=s^n^r,o=t<<5|t>>>27,e=o+i+e-899497514+c[h]>>>0,s=s<<30|s>>>2,i=t^s^n,o=e<<5|e>>>27,r=o+i+r-899497514+c[h+1]>>>0,t=t<<30|t>>>2,i=e^t^s,o=r<<5|r>>>27,n=o+i+n-899497514+c[h+2]>>>0,e=e<<30|e>>>2,i=r^e^t,o=n<<5|n>>>27,s=o+i+s-899497514+c[h+3]>>>0,r=r<<30|r>>>2,i=n^r^e,o=s<<5|s>>>27,t=o+i+t-899497514+c[h+4]>>>0,n=n<<30|n>>>2;this.#e=this.#e+t>>>0,this.#s=this.#s+s>>>0,this.#n=this.#n+n>>>0,this.#i=this.#i+r>>>0,this.#r=this.#r+e>>>0}hex(){this.finalize();const t=this.#e,s=this.#s,n=this.#n,r=this.#i,e=this.#r;return HEX_CHARS[t>>28&15]+HEX_CHARS[t>>24&15]+HEX_CHARS[t>>20&15]+HEX_CHARS[t>>16&15]+HEX_CHARS[t>>12&15]+HEX_CHARS[t>>8&15]+HEX_CHARS[t>>4&15]+HEX_CHARS[t&15]+HEX_CHARS[s>>28&15]+HEX_CHARS[s>>24&15]+HEX_CHARS[s>>20&15]+HEX_CHARS[s>>16&15]+HEX_CHARS[s>>12&15]+HEX_CHARS[s>>8&15]+HEX_CHARS[s>>4&15]+HEX_CHARS[s&15]+HEX_CHARS[n>>28&15]+HEX_CHARS[n>>24&15]+HEX_CHARS[n>>20&15]+HEX_CHARS[n>>16&15]+HEX_CHARS[n>>12&15]+HEX_CHARS[n>>8&15]+HEX_CHARS[n>>4&15]+HEX_CHARS[n&15]+HEX_CHARS[r>>28&15]+HEX_CHARS[r>>24&15]+HEX_CHARS[r>>20&15]+HEX_CHARS[r>>16&15]+HEX_CHARS[r>>12&15]+HEX_CHARS[r>>8&15]+HEX_CHARS[r>>4&15]+HEX_CHARS[r&15]+HEX_CHARS[e>>28&15]+HEX_CHARS[e>>24&15]+HEX_CHARS[e>>20&15]+HEX_CHARS[e>>16&15]+HEX_CHARS[e>>12&15]+HEX_CHARS[e>>8&15]+HEX_CHARS[e>>4&15]+HEX_CHARS[e&15]}toString(){return this.hex()}digest(){this.finalize();const t=this.#e,s=this.#s,n=this.#n,r=this.#i,e=this.#r;return[t>>24&255,t>>16&255,t>>8&255,t&255,s>>24&255,s>>16&255,s>>8&255,s&255,n>>24&255,n>>16&255,n>>8&255,n&255,r>>24&255,r>>16&255,r>>8&255,r&255,e>>24&255,e>>16&255,e>>8&255,e&255]}array(){return this.digest()}arrayBuffer(){this.finalize();const t=new ArrayBuffer(20),s=new DataView(t);return s.setUint32(0,this.#e),s.setUint32(4,this.#s),s.setUint32(8,this.#n),s.setUint32(12,this.#i),s.setUint32(16,this.#r),t}}function assert(a,t=""){if(!a)throw new DenoStdInternalError(t)}const NIL_UUID="00000000-0000-0000-0000-000000000000";var SHATEST,USERS,API_KEY;const corsHeaders={"Access-Control-Allow-Origin":"https://zed.vision","Access-Control-Allow-Methods":"GET,HEAD,POST,OPTIONS","Access-Control-Max-Age":"86400"};function handleOptions(a){const t=a.headers;let s={...t,...corsHeaders,"Access-Control-Allow-Headers":a.headers.get("Access-Control-Request-Headers")};return new Response(a.body,{headers:s})}function bytesToUuid(a){const t=[...a].map(s=>{const n=s.toString(16);return s<16?"0"+n:n});return[...t.slice(0,4),"-",...t.slice(4,6),"-",...t.slice(6,8),"-",...t.slice(8,10),"-",...t.slice(10,16)].join("")}function uuidToBytes(a){const t=[];return a.replace(/[a-fA-F0-9]{2}/g,s=>(t.push(parseInt(s,16)),"")),t}function stringToBytes(a){a=unescape(encodeURIComponent(a));const t=new Array(a.length);for(let s=0;s<a.length;s++)t[s]=a.charCodeAt(s);return t}function createBuffer(a){const t=new ArrayBuffer(a.length),s=new Uint8Array(t);for(let n=0;n<a.length;n++)s[n]=a[n];return t}const mod=function(){const a=new RegExp("^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$","i");function t(n){return a.test(n)}function s(){const n=crypto.getRandomValues(new Uint8Array(16));return n[6]=n[6]&15|64,n[8]=n[8]&63|128,bytesToUuid(n)}return{validate:t,generate:s}}();async function handleCloudRequest(a){const t=String(a.headers.get("API_KEY")||""),s=new URL(a.url),{searchParams:n,pathname:r}=s;if(a.method==="GET"&&t&&t===API_KEY){if(r==="/keys/"){const e=n.get("prefix"),i=await SHATEST.list({prefix:e});return new Response(JSON.stringify(i),{headers:{...corsHeaders,"content-type":"application/json;charset=UTF-8"}})}if(r==="/keys/delete/"){const e=n.get("hash"),i=await SHATEST.delete(e);return new Response(JSON.stringify(i),{headers:{...corsHeaders,"content-type":"application/json;charset=UTF-8"}})}}if(a.method==="GET"){const e=n.get("h");if(r==="/register"){const o=mod.generate();return await USERS.put(o,JSON.stringify({uuid:o,registered:Date.now(),cf:a.cf})),new Response(JSON.stringify({uuid:o}),{headers:{...corsHeaders,"content-type":"application/json;charset=UTF-8"}})}if(e){const o=await SHATEST.get(e,"stream");return o===null?new Response(JSON.stringify({error:"Not found"}),{headers:{...corsHeaders,"content-type":"application/json;charset=UTF-8"}}):new Response(o,{headers:{...corsHeaders,"content-type":"application/json;charset=UTF-8"}})}const i=s.searchParams.get("r");if(i){const o=await SHATEST.get(i,"stream");if(o!==null)return new Response(o,{headers:{...corsHeaders,"Content-Type":"text/html; charset=UTF-8"}})}const h=r.substr(1);if(h){const o=await SHATEST.get(h,"stream");if(o!==null)return new Response(o,{headers:{...corsHeaders,"Content-Type":"text/html; charset=UTF-8"}})}return Response.redirect("https://zed.vision/code",301)}else if(a.method==="POST"){const e=await a.arrayBuffer(),i=await arrBuffSha256(e),h=i.substring(0,8);return await SHATEST.put(h,e),new Response(JSON.stringify({hash:h}),{headers:{...corsHeaders,"content-type":"application/json;charset=UTF-8"}})}return handleOptions(a)}addEventListener("fetch",a=>{a.respondWith(handleCloudRequest(a.request))});
