async function arrBuffSha256(e){const t=await crypto.subtle.digest("SHA-256",e),o=Array.from(new Uint8Array(t)),s=o.map(a=>("00"+a.toString(16)).slice(-2)).join("");return s}var getRandomValues,rnds8=new Uint8Array(16);function rng(){if(!getRandomValues&&(getRandomValues=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto!="undefined"&&typeof msCrypto.getRandomValues=="function"&&msCrypto.getRandomValues.bind(msCrypto),!getRandomValues))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return getRandomValues(rnds8)}const __default=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function validate(e){return typeof e=="string"&&__default.test(e)}for(var byteToHex=[],i=0;i<256;++i)byteToHex.push((i+256).toString(16).substr(1));function stringify(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,o=(byteToHex[e[t+0]]+byteToHex[e[t+1]]+byteToHex[e[t+2]]+byteToHex[e[t+3]]+"-"+byteToHex[e[t+4]]+byteToHex[e[t+5]]+"-"+byteToHex[e[t+6]]+byteToHex[e[t+7]]+"-"+byteToHex[e[t+8]]+byteToHex[e[t+9]]+"-"+byteToHex[e[t+10]]+byteToHex[e[t+11]]+byteToHex[e[t+12]]+byteToHex[e[t+13]]+byteToHex[e[t+14]]+byteToHex[e[t+15]]).toLowerCase();if(!validate(o))throw TypeError("Stringified UUID is invalid");return o}function v4(e,t,o){e=e||{};var s=e.random||(e.rng||rng)();if(s[6]=s[6]&15|64,s[8]=s[8]&63|128,t){o=o||0;for(var a=0;a<16;++a)t[o+a]=s[a];return t}return stringify(s)}var SHAKV,USERS,API_KEY;const corsHeaders={"Access-Control-Allow-Origin":"https://zed.vision","Access-Control-Allow-Methods":"GET,HEAD,POST,OPTIONS","Access-Control-Max-Age":"86400"};async function sha256(e){const t=new TextEncoder().encode(e),o=await arrBuffSha256(t);return o.substr(0,8)}async function handleCloudRequest(e){const t=String(e.headers.get("API_KEY")||""),o=new URL(e.url),{searchParams:s,pathname:a}=o;if(e.method==="GET"&&t&&t===API_KEY){if(a==="/keys/"){const r=s.get("prefix"),c=await SHAKV.list({prefix:r});return new Response(JSON.stringify(c),{headers:{...corsHeaders,"content-type":"application/json;charset=UTF-8"}})}if(a==="/keys/delete/"){const r=s.get("hash"),c=await SHAKV.delete(r);return new Response(JSON.stringify(c),{headers:{...corsHeaders,"content-type":"application/json;charset=UTF-8"}})}}if(e.method==="GET"){const r=s.get("h");if(a==="/robots.txt")return new Response("User-agent: * Disallow: /",{headers:{...corsHeaders,"content-type":"text/html;charset=UTF-8"}});if(a==="/connect"){const n=s.get("uuid")||v4(),d=await sha256(n);return await SHAKV.put(d,JSON.stringify({uuid:n,registered:Date.now(),cf:e.cf,connected:s.get("uuid")}),{expirationTtl:60}),new Response(JSON.stringify({uuid:d}),{headers:{...corsHeaders,"content-type":"application/json;charset=UTF-8"}})}if(a==="/check"){const n=s.get("uuid"),d=async()=>{const p=await SHAKV.get(n,"json");return!p||p.connected?p:new Promise(l=>{const g=setInterval(async()=>{const h=await USERS.get(n,"json");(!h||h.connected)&&(clearInterval(g),l(h))},3e3)})},f=await d();return new Response(JSON.stringify({expired:f===null}),{headers:{...corsHeaders,"content-type":"application/json;charset=UTF-8"}})}if(a==="/register"){const n=v4();return await USERS.put(n,JSON.stringify({uuid:n,registered:Date.now(),cf:e.cf})),new Response(JSON.stringify({uuid:n}),{headers:{...corsHeaders,"content-type":"application/json;charset=UTF-8"}})}if(r){const n=await SHAKV.get(r,"stream");return n===null?new Response(JSON.stringify({error:"Not found"}),{headers:{...corsHeaders,"content-type":"application/json;charset=UTF-8"}}):new Response(n,{headers:{...corsHeaders,"content-type":"application/json;charset=UTF-8"}})}const c=o.searchParams.get("r");if(c){const n=await SHAKV.get(c,"stream");if(n!==null)return new Response(n,{headers:{...corsHeaders,"Content-Type":"text/html; charset=UTF-8"}})}const u=a.substr(1);if(u){const n=await SHAKV.get(u,"stream");if(n!==null)return new Response(n,{headers:{...corsHeaders,"Content-Type":"text/html; charset=UTF-8"}})}return Response.redirect("https://zed.vision/code",301)}else if(e.method==="POST"){const r=await e.arrayBuffer(),c=await arrBuffSha256(r),u=c.substring(0,8);return await SHAKV.put(u,r),new Response(JSON.stringify({hash:u}),{headers:{...corsHeaders,"content-type":"application/json;charset=UTF-8"}})}return new Response(e.body,{headers:{...e.headers,...corsHeaders,"Access-Control-Allow-Headers":e.headers.get("Access-Control-Request-Headers")}})}addEventListener("fetch",e=>{e.respondWith(handleCloudRequest(e.request))});
