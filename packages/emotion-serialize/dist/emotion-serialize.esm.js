var e={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1};function o(e){var o=Object.create(null);return function(n){return void 0===o[n]&&(o[n]=e(n)),o[n]}}var n="You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\00d7';\" should become \"content: '\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences",t=/[A-Z]|^ms/g,r=/_EMO_([^_]+?)_([^]*?)_EMO_/g,i=function(e){return 45===e.charCodeAt(1)},a=function(e){return null!=e&&"boolean"!=typeof e},s=o(function(e){return i(e)?e:e.replace(t,"-$&").toLowerCase()}),c=function(o,n){switch(o){case"animation":case"animationName":if("string"==typeof n)return n.replace(r,function(e,o,n){return y={name:o,styles:n,next:y},o})}return 1===e[o]||i(o)||"number"!=typeof n||0===n?n:n+"px"};if("production"!==process.env.NODE_ENV){var l=/(attr|calc|counters?|url)\(/,u=["normal","none","counter","open-quote","close-quote","no-open-quote","no-close-quote","initial","inherit","unset"],p=c,d=/^-ms-/,f=/-(.)/g,m={};c=function(e,o){if("content"===e&&("string"!=typeof o||-1===u.indexOf(o)&&!l.test(o)&&(o.charAt(0)!==o.charAt(o.length-1)||'"'!==o.charAt(0)&&"'"!==o.charAt(0))))throw new Error("You seem to be using a value for 'content' without quotes, try replacing it with `content: '\""+o+"\"'`");var n=p(e,o);return""===n||i(e)||-1===e.indexOf("-")||void 0!==m[e]||(m[e]=!0,console.error("Using kebab-case for css properties in objects is not supported. Did you mean "+e.replace(d,"ms-").replace(f,function(e,o){return o.toUpperCase()})+"?")),n}}function v(e,o,n){if(null==n)return"";if(void 0!==n.__emotion_styles){if("production"!==process.env.NODE_ENV&&"NO_COMPONENT_SELECTOR"===n.toString())throw new Error("Component selectors can only be used in conjunction with @emotion/babel-plugin.");return n}switch(typeof n){case"boolean":return"";case"object":if(1===n.anim)return y={name:n.name,styles:n.styles,next:y},n.name;if(void 0!==n.styles){var t=n.next;if(void 0!==t)for(;void 0!==t;)y={name:t.name,styles:t.styles,next:y},t=t.next;var i=n.styles+";";return"production"!==process.env.NODE_ENV&&void 0!==n.map&&(i+=n.map),i}return function(e,o,n){var t="";if(Array.isArray(n))for(var r=0;r<n.length;r++)t+=v(e,o,n[r])+";";else for(var i in n){var l=n[i];if("object"!=typeof l)null!=o&&void 0!==o[l]?t+=i+"{"+o[l]+"}":a(l)&&(t+=s(i)+":"+c(i,l)+";");else{if("NO_COMPONENT_SELECTOR"===i&&"production"!==process.env.NODE_ENV)throw new Error("Component selectors can only be used in conjunction with @emotion/babel-plugin.");if(!Array.isArray(l)||"string"!=typeof l[0]||null!=o&&void 0!==o[l[0]]){var u=v(e,o,l);switch(i){case"animation":case"animationName":t+=s(i)+":"+u+";";break;default:"production"!==process.env.NODE_ENV&&"undefined"===i&&console.error("You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key)."),t+=i+"{"+u+"}"}}else for(var p=0;p<l.length;p++)a(l[p])&&(t+=s(i)+":"+c(i,l[p])+";")}}return t}(e,o,n);case"function":if(void 0!==e){var l=y,u=n(e);return y=l,v(e,o,u)}"production"!==process.env.NODE_ENV&&console.error("Functions that are interpolated in css calls will be stringified.\nIf you want to have a css call based on props, create a function that returns a css call like this\nlet dynamicStyle = (props) => css`color: ${props.color}`\nIt can be called directly with props or interpolated in a styled call like this\nlet SomeComponent = styled('div')`${dynamicStyle}`");break;case"string":if("production"!==process.env.NODE_ENV){var p=[],d=n.replace(r,function(e,o,n){var t="animation"+p.length;return p.push("const "+t+" = keyframes`"+n.replace(/^@keyframes animation-\w+/,"")+"`"),"${"+t+"}"});p.length&&console.error("`keyframes` output got interpolated into plain string, please wrap it with `css`.\n\nInstead of doing this:\n\n"+[].concat(p,["`"+d+"`"]).join("\n")+"\n\nYou should wrap it with `css` like this:\n\ncss`"+d+"`")}}if(null==o)return n;var f=o[n];return void 0!==f?f:n}var h,y,g=/label:\s*([^\s;\n{]+)\s*;/g;"production"!==process.env.NODE_ENV&&(h=/\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//g);var b=function(e,o,t){if(1===e.length&&"object"==typeof e[0]&&null!==e[0]&&void 0!==e[0].styles)return e[0];var r=!0,i="";y=void 0;var a,s=e[0];null==s||void 0===s.raw?(r=!1,i+=v(t,o,s)):("production"!==process.env.NODE_ENV&&void 0===s[0]&&console.error(n),i+=s[0]);for(var c=1;c<e.length;c++)i+=v(t,o,e[c]),r&&("production"!==process.env.NODE_ENV&&void 0===s[c]&&console.error(n),i+=s[c]);"production"!==process.env.NODE_ENV&&(i=i.replace(h,function(e){return a=e,""})),g.lastIndex=0;for(var l,u="";null!==(l=g.exec(i));)u+="-"+l[1];var p=function(e){for(var o,n=0,t=0,r=e.length;r>=4;++t,r-=4)o=1540483477*(65535&(o=255&e.charCodeAt(t)|(255&e.charCodeAt(++t))<<8|(255&e.charCodeAt(++t))<<16|(255&e.charCodeAt(++t))<<24))+(59797*(o>>>16)<<16),n=1540483477*(65535&(o^=o>>>24))+(59797*(o>>>16)<<16)^1540483477*(65535&n)+(59797*(n>>>16)<<16);switch(r){case 3:n^=(255&e.charCodeAt(t+2))<<16;case 2:n^=(255&e.charCodeAt(t+1))<<8;case 1:n=1540483477*(65535&(n^=255&e.charCodeAt(t)))+(59797*(n>>>16)<<16)}return(((n=1540483477*(65535&(n^=n>>>13))+(59797*(n>>>16)<<16))^n>>>15)>>>0).toString(36)}(i)+u;return"production"!==process.env.NODE_ENV?{name:p,styles:i,map:a,next:y,toString:function(){return"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."}}:{name:p,styles:i,next:y}};export{b as serializeStyles};
//# sourceMappingURL=emotion-serialize.esm.js.map
