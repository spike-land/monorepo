{"version":3,"file":"emotion-serialize.umd.js","sources":["../../../node_modules/@emotion/unitless/dist/unitless.browser.esm.js","../../../node_modules/@emotion/memoize/dist/emotion-memoize.browser.esm.js","../src/index.js","../../../node_modules/@emotion/hash/dist/hash.browser.esm.js"],"sourcesContent":["var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","// @flow\nimport type {\n  Interpolation,\n  SerializedStyles,\n  RegisteredCache,\n} from '@zedvision/emotion-utils'\nimport hashString from '@zedvision/emotion-hash'\nimport unitless from '@zedvision/emotion-unitless'\nimport memoize from '@zedvision/emotion-memoize'\n\nconst ILLEGAL_ESCAPE_SEQUENCE_ERROR = `You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\\\00d7';\" should become \"content: '\\\\\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`\n\nconst UNDEFINED_AS_OBJECT_KEY_ERROR =\n  \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\"\n\nlet hyphenateRegex = /[A-Z]|^ms/g\nlet animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g\n\nconst isCustomProperty = (property: string) => property.charCodeAt(1) === 45\nconst isProcessableValue = (value) =>\n  value != null && typeof value !== 'boolean'\n\nconst processStyleName = /* #__PURE__ */ memoize((styleName: string) =>\n  isCustomProperty(styleName)\n    ? styleName\n    : styleName.replace(hyphenateRegex, '-$&').toLowerCase()\n)\n\nlet processStyleValue = (\n  key: string,\n  value: string | number\n): string | number => {\n  switch (key) {\n    case 'animation':\n    case 'animationName': {\n      if (typeof value === 'string') {\n        return value.replace(animationRegex, (match, p1, p2) => {\n          cursor = {\n            name: p1,\n            styles: p2,\n            next: cursor,\n          }\n          return p1\n        })\n      }\n    }\n  }\n\n  if (\n    unitless[key] !== 1 &&\n    !isCustomProperty(key) &&\n    typeof value === 'number' &&\n    value !== 0\n  ) {\n    return value + 'px'\n  }\n  return value\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  let contentValuePattern = /(attr|calc|counters?|url)\\(/\n  let contentValues = [\n    'normal',\n    'none',\n    'counter',\n    'open-quote',\n    'close-quote',\n    'no-open-quote',\n    'no-close-quote',\n    'initial',\n    'inherit',\n    'unset',\n  ]\n\n  let oldProcessStyleValue = processStyleValue\n\n  let msPattern = /^-ms-/\n  let hyphenPattern = /-(.)/g\n\n  let hyphenatedCache = {}\n\n  processStyleValue = (key: string, value: string) => {\n    if (key === 'content') {\n      if (\n        typeof value !== 'string' ||\n        (contentValues.indexOf(value) === -1 &&\n          !contentValuePattern.test(value) &&\n          (value.charAt(0) !== value.charAt(value.length - 1) ||\n            (value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")))\n      ) {\n        throw new Error(\n          `You seem to be using a value for 'content' without quotes, try replacing it with \\`content: '\"${value}\"'\\``\n        )\n      }\n    }\n\n    const processed = oldProcessStyleValue(key, value)\n\n    if (\n      processed !== '' &&\n      !isCustomProperty(key) &&\n      key.indexOf('-') !== -1 &&\n      hyphenatedCache[key] === undefined\n    ) {\n      hyphenatedCache[key] = true\n      console.error(\n        `Using kebab-case for css properties in objects is not supported. Did you mean ${key\n          .replace(msPattern, 'ms-')\n          .replace(hyphenPattern, (str, char) => char.toUpperCase())}?`\n      )\n    }\n\n    return processed\n  }\n}\n\nfunction handleInterpolation(\n  mergedProps: void | Object,\n  registered: RegisteredCache | void,\n  interpolation: Interpolation\n): string | number {\n  if (interpolation == null) {\n    return ''\n  }\n  if (interpolation.__emotion_styles !== undefined) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      interpolation.toString() === 'NO_COMPONENT_SELECTOR'\n    ) {\n      throw new Error(\n        'Component selectors can only be used in conjunction with @emotion/babel-plugin.'\n      )\n    }\n    return interpolation\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean': {\n      return ''\n    }\n    case 'object': {\n      if (interpolation.anim === 1) {\n        cursor = {\n          name: interpolation.name,\n          styles: interpolation.styles,\n          next: cursor,\n        }\n\n        return interpolation.name\n      }\n      if (interpolation.styles !== undefined) {\n        let next = interpolation.next\n        if (next !== undefined) {\n          // not the most efficient thing ever but this is a pretty rare case\n          // and there will be very few iterations of this generally\n          while (next !== undefined) {\n            cursor = {\n              name: next.name,\n              styles: next.styles,\n              next: cursor,\n            }\n            next = next.next\n          }\n        }\n        let styles = `${interpolation.styles};`\n        if (\n          process.env.NODE_ENV !== 'production' &&\n          interpolation.map !== undefined\n        ) {\n          styles += interpolation.map\n        }\n\n        return styles\n      }\n\n      return createStringFromObject(mergedProps, registered, interpolation)\n    }\n    case 'function': {\n      if (mergedProps !== undefined) {\n        let previousCursor = cursor\n        let result = interpolation(mergedProps)\n        cursor = previousCursor\n\n        return handleInterpolation(mergedProps, registered, result)\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error(\n          'Functions that are interpolated in css calls will be stringified.\\n' +\n            'If you want to have a css call based on props, create a function that returns a css call like this\\n' +\n            'let dynamicStyle = (props) => css`color: ${props.color}`\\n' +\n            'It can be called directly with props or interpolated in a styled call like this\\n' +\n            \"let SomeComponent = styled('div')`${dynamicStyle}`\"\n        )\n      }\n      break\n    }\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        const matched = []\n        const replaced = interpolation.replace(\n          animationRegex,\n          (match, p1, p2) => {\n            const fakeVarName = `animation${matched.length}`\n            matched.push(\n              `const ${fakeVarName} = keyframes\\`${p2.replace(\n                /^@keyframes animation-\\w+/,\n                ''\n              )}\\``\n            )\n            return `\\${${fakeVarName}}`\n          }\n        )\n        if (matched.length) {\n          console.error(\n            '`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' +\n              'Instead of doing this:\\n\\n' +\n              [...matched, `\\`${replaced}\\``].join('\\n') +\n              '\\n\\nYou should wrap it with `css` like this:\\n\\n' +\n              `css\\`${replaced}\\``\n          )\n        }\n      }\n      break\n  }\n\n  // finalize string values (regular strings and functions interpolated into css calls)\n  if (registered == null) {\n    return interpolation\n  }\n  const cached = registered[interpolation]\n  return cached !== undefined ? cached : interpolation\n}\n\nfunction createStringFromObject(\n  mergedProps: void | Object,\n  registered: RegisteredCache | void,\n  obj: { [key: string]: Interpolation }\n): string {\n  let string = ''\n\n  if (Array.isArray(obj)) {\n    for (let i = 0; i < obj.length; i++) {\n      string += `${handleInterpolation(mergedProps, registered, obj[i])};`\n    }\n  } else {\n    for (let key in obj) {\n      let value = obj[key]\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += `${key}{${registered[value]}}`\n        } else if (isProcessableValue(value)) {\n          string += `${processStyleName(key)}:${processStyleValue(key, value)};`\n        }\n      } else {\n        if (\n          key === 'NO_COMPONENT_SELECTOR' &&\n          process.env.NODE_ENV !== 'production'\n        ) {\n          throw new Error(\n            'Component selectors can only be used in conjunction with @emotion/babel-plugin.'\n          )\n        }\n        if (\n          Array.isArray(value) &&\n          typeof value[0] === 'string' &&\n          (registered == null || registered[value[0]] === undefined)\n        ) {\n          for (let i = 0; i < value.length; i++) {\n            if (isProcessableValue(value[i])) {\n              string += `${processStyleName(key)}:${processStyleValue(\n                key,\n                value[i]\n              )};`\n            }\n          }\n        } else {\n          const interpolated = handleInterpolation(\n            mergedProps,\n            registered,\n            value\n          )\n          switch (key) {\n            case 'animation':\n            case 'animationName': {\n              string += `${processStyleName(key)}:${interpolated};`\n              break\n            }\n            default: {\n              if (\n                process.env.NODE_ENV !== 'production' &&\n                key === 'undefined'\n              ) {\n                console.error(UNDEFINED_AS_OBJECT_KEY_ERROR)\n              }\n              string += `${key}{${interpolated}}`\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return string\n}\n\nlet labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g\n\nlet sourceMapPattern\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//g\n}\n\n// this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\nlet cursor\n\nexport const serializeStyles = function (\n  args: Array<Interpolation>,\n  registered: RegisteredCache | void,\n  mergedProps: void | Object\n): SerializedStyles {\n  if (\n    args.length === 1 &&\n    typeof args[0] === 'object' &&\n    args[0] !== null &&\n    args[0].styles !== undefined\n  ) {\n    return args[0]\n  }\n  let stringMode = true\n  let styles = ''\n\n  cursor = undefined\n  let strings = args[0]\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false\n    styles += handleInterpolation(mergedProps, registered, strings)\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR)\n    }\n    styles += strings[0]\n  }\n  // we start at 1 since we've already handled the first arg\n  for (let i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i])\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR)\n      }\n      styles += strings[i]\n    }\n  }\n  let sourceMap\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, (match) => {\n      sourceMap = match\n      return ''\n    })\n  }\n\n  // using a global regex with .exec is stateful so lastIndex has to be reset each time\n  labelPattern.lastIndex = 0\n  let identifierName = ''\n\n  let match\n  // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName +=\n      '-' +\n      // $FlowFixMe we know it's not null\n      match[1]\n  }\n\n  let name = hashString(styles) + identifierName\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name,\n      styles,\n      map: sourceMap,\n      next: cursor,\n      toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"\n      },\n    }\n  }\n  return {\n    name,\n    styles,\n    next: cursor,\n  }\n}\n","/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport default murmur2;\n"],"names":["unitlessKeys","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","fontWeight","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","memoize","fn","cache","Object","create","arg","undefined","ILLEGAL_ESCAPE_SEQUENCE_ERROR","hyphenateRegex","animationRegex","isCustomProperty","property","charCodeAt","isProcessableValue","value","processStyleName","styleName","replace","toLowerCase","processStyleValue","key","match","p1","p2","cursor","name","styles","next","unitless","process","env","NODE_ENV","contentValuePattern","contentValues","oldProcessStyleValue","msPattern","hyphenPattern","hyphenatedCache","indexOf","test","charAt","length","Error","processed","console","error","str","char","toUpperCase","handleInterpolation","mergedProps","registered","interpolation","__emotion_styles","toString","anim","map","obj","string","Array","isArray","i","interpolated","createStringFromObject","previousCursor","result","matched","replaced","fakeVarName","push","join","cached","sourceMapPattern","labelPattern","args","stringMode","sourceMap","strings","raw","lastIndex","identifierName","exec","k","h","len","hashString"],"mappings":"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"}