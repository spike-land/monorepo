{
  "version": 3,
  "sources": ["(disabled):os", "../js/startMonaco.ts", "../../../.yarn/global/cache/p-map-npm-5.5.0-9758eb14ee-9.zip/node_modules/p-map/index.js", "../../../.yarn/global/cache/aggregate-error-npm-4.0.1-12d0501fb7-9.zip/node_modules/aggregate-error/index.js", "../../../.yarn/global/cache/indent-string-npm-5.0.0-35eaa3b052-9.zip/node_modules/indent-string/index.js", "../../../.yarn/global/cache/clean-stack-npm-4.2.0-bb0dff47b2-9.zip/node_modules/clean-stack/index.js", "../../../.yarn/global/cache/escape-string-regexp-npm-5.0.0-a663e825ce-9.zip/node_modules/escape-string-regexp/index.js"],
  "sourcesContent": ["", "import { dependencies } from \"../package.json\";\nimport type monaco from \"monaco-editor\";\n\nimport { Uri } from \"monaco-editor\";\nimport pMap from \"p-map\";\nconst version = dependencies[\"monaco-editor\"];\n// import codion from \"monaco-editor/esm/vs/base/browser/ui/codicons/codicon/codicon.ttf\"\n// import * as editorCss from \"monaco-editor/min/vs/editor/editor.main.css\"\n\n// import { createJsBlob } from \"./starter\";\nimport editorWorker from \"monaco-editor/esm/vs/editor/editor.worker?worker\";\n// vs/language/typescript/ts.worker\n//                   \"./monaco-editor/editor/editor.worker.monaco.worker.js?url\";\nimport tsWorker from \"monaco-editor/esm/vs/language/typescript/ts.worker?worker\";\n\n// import wfile from \"monaco-editor/min/vs/language/typescript/tsWorker.js\";\n// import efile from \"monaco-editor/min/vs/editor/editor.main.js\";\n\n//@ts-ignore\n//@ts-ignore\n\n// import { MonacoJsxSyntaxHighlight } from \"monaco-jsx-syntax-highlight\";\n\n// import { parse } from \"@babel/parser\";\n// import traverse from \"@babel/traverse\";\n// import MonacoJSXHighlighter from \"monaco-jsx-highlighter\";\n// import Buffer from \"buffer\";\n\n// globalThis.Buffer = Buffer;\n\nlet started = false;\n\nconst monacoContribution = async (\n  typescript: typeof monaco.languages.typescript,\n  editor: typeof monaco.editor,\n  code: string,\n) => {\n  // const {typescript} = languages;\n  typescript.typescriptDefaults\n    .setDiagnosticsOptions({\n      noSuggestionDiagnostics: true,\n      noSemanticValidation: true,\n      noSyntaxValidation: true,\n    });\n\n  typescript.typescriptDefaults.setCompilerOptions({\n    baseUrl: location.origin + \"/live/\",\n    target: typescript.ScriptTarget.ESNext,\n    lib: [\n      \"dom\",\n      \"dom.iterable\",\n      \"esnext\",\n    ],\n    allowJs: true,\n    skipLibCheck: true,\n    esModuleInterop: true,\n    allowSyntheticDefaultImports: true,\n    strict: true,\n    forceConsistentCasingInFileNames: true,\n    noFallthroughCasesInSwitch: true,\n    resolveJsonModule: true,\n    isolatedModules: true,\n    noEmit: true,\n\n    allowNonTsExtensions: true,\n    moduleResolution: typescript.ModuleResolutionKind.NodeJs,\n    declaration: false,\n    module: typescript.ModuleKind.ESNext,\n    noEmitOnError: true,\n    maxNodeModuleJsDepth: 10,\n\n    jsxImportSource: \"@emotion/react\",\n    jsx: typescript.JsxEmit.ReactJSX,\n    allowUmdGlobalAccess: true,\n  });\n\n  const regex1 = / from \\'\\.\\./ig;\n\n  const regex2 = / from \\'\\./ig;\n\n  const search = new RegExp(` from '${origin}/live/[a-zA-Z]+`, \"gm\");\n  const replaced = code.replaceAll(regex1, ` from '${location.origin}/live`)\n    .replaceAll(regex2, ` from '${location.origin}/live`);\n\n  const models = replaced.matchAll(search);\n  // console.log(\"load more models\", replaced, models);\n\n  for (const match of models) {\n    console.log(\"***** EXTRA MODELS *****\");\n\n    const extraModel = match[0].slice(7) + \".tsx\";\n    console.log(extraModel);\n    editor.createModel(\n      await fetch(extraModel).then((res) => res.text()),\n      \"typescript\",\n      Uri.parse(extraModel),\n    );\n  }\n\n  (async () => {\n    const { dtsFiles } = await import(\"./types.mjs\");\n    const {\n      reactDts,\n      // jsxDevRuntimeDts,\n      jsxRuntimeDts,\n      // reactExpDts,\n      // globalDts,\n      propTypesDts,\n      cssTypeDts,\n      framerDts,\n      emotionStyled,\n      emotionStyleBase,\n      emotionCache,\n      emotionJSXNameSpaceDTS,\n      emotionJSXRuntimeDTS,\n      emotionReactDts,\n      emotionReactCssPropDts,\n      emotionReactHelperDts,\n      emotionThemingDts,\n      emotionSerializeDts,\n      emotionUtilsDts,\n    } = dtsFiles;\n    const importHelper = [\n      {\n        name: \"react\",\n        url: reactDts,\n        depend: [\"global\", \"csstype\", \"prop-types\"],\n      },\n      {\n        name: \"react/jsx-runtime\",\n        url: jsxRuntimeDts,\n        depend: [\"global\", \"csstype\", \"prop-types\"],\n      },\n      {\n        name: \"react/jsx-dev-runtime\",\n        url: jsxRuntimeDts,\n        depend: [\"global\", \"csstype\", \"prop-types\"],\n      },\n      // {\n      // name: \"react-exp\",\n      // url: reactExpDts,\n      // depend: [],\n      // },\n      // {\n      // name: \"global\",\n      // url: globalDts,\n      // depend: [],\n      // },\n      {\n        name: \"prop-types\",\n        url: propTypesDts,\n        depend: [],\n      },\n      {\n        name: \"csstype\",\n        url: cssTypeDts,\n        depend: [],\n      },\n      {\n        name: \"@emotion/base\",\n        url: emotionStyleBase,\n        depend: [\n          \"@emotion/react\",\n          \"@emotion/serialize\",\n          \"react\",\n        ],\n      },\n      {\n        name: \"@emotion/styled\",\n        url: emotionStyled,\n        depend: [\n          \"@emotion/react\",\n          \"@emotion/serialize\",\n          \"react\",\n        ],\n      },\n      {\n        name: \"@emotion/cache\",\n        url: emotionCache,\n        depend: [\"@emotion/utils\"],\n      },\n      {\n        name: \"@emotion/react\",\n        url: emotionReactDts,\n        depend: [\"@emotion/cache\"],\n      },\n      {\n        name: \"@emotion/react/jsx-runtime\",\n        url: emotionJSXRuntimeDTS,\n        depend: [\"@emotion/cache\"],\n      },\n      {\n        name: \"@emotion/react/jsx-dev-runtime\",\n        url: emotionJSXRuntimeDTS,\n        depend: [\"@emotion/cache\"],\n      },\n      {\n        name: \"@emotion/react/jsx-namespace\",\n        url: emotionJSXNameSpaceDTS,\n        depend: [\"@emotion/utils\", \"type\"],\n      },\n      {\n        name: \"@emotion/react/theming\",\n        url: emotionThemingDts,\n        depend: [\"@emotion/utils\", \"type\"],\n      },\n      {\n        name: \"@emotion/react/css-prop\",\n        url: emotionReactCssPropDts,\n        depend: [\"@emotion/utils\", \"csstype\"],\n      },\n      {\n        name: \"@emotion/react/helper\",\n        url: emotionReactHelperDts,\n        depend: [\"@emotion/utils\", \"csstype\"],\n      },\n      {\n        name: \"@emotion/serialize\",\n        url: emotionSerializeDts,\n\n        depend: [\"@emotion/utils\", \"csstype\"],\n      },\n      {\n        name: \"@emotion/utils\",\n        url: emotionUtilsDts,\n        depend: [],\n      },\n      {\n        name: \"framer-motion\",\n        url: framerDts,\n        depend: [\"popmotion\"],\n      },\n    ];\n\n    try {\n      const mapper = async ({ name, url }: { name: string; url: string }) =>\n        typescript.typescriptDefaults.addExtraLib(\n          await (await fetch(\n            url,\n          )).text(),\n          location.origin + `/live/${name}.d.ts`,\n        );\n\n      await pMap(importHelper, mapper, { concurrency: 2 });\n    } catch {\n      console.error(\"Error in loading d.td\");\n    }\n    typescript.typescriptDefaults.setEagerModelSync(true);\n    typescript.typescriptDefaults.setDiagnosticsOptions({\n      noSuggestionDiagnostics: false,\n      noSemanticValidation: false,\n      noSyntaxValidation: false,\n    });\n  })();\n};\n\nwindow.MonacoEnvironment = {\n  getWorker: function (_workerId: string, label: string) {\n    if (label === \"typescript\" || label === \"javascript\") {\n      return tsWorker();\n    }\n    return editorWorker();\n  },\n};\n\nexport const startMonaco = async (\n  { code, container, name }: {\n    code: string;\n    container: HTMLDivElement;\n    name: string;\n  },\n) => {\n  const { languages, editor } = await import(\"monaco-editor\");\n\n  const returnModules = {\n    editor: {} as unknown as ReturnType<typeof editor.create>,\n    monaco: { editor, languages, Uri },\n  };\n\n  console.log(\"monaco-editor\");\n  if (!started) started = true;\n  else return returnModules;\n  // const shadowRoot = container.attachShadow({\n  //   mode: \"open\",\n  // });\n  // const innerContainer = document.createElement(\"div\");\n  // // shadowRoot.appendChild(innerContainer);\n  // innerContainer.style.width = \"100%\";\n  // innerContainer.style.height = \"100%\";\n\n  //   const outerStyle = document.createElement(\"style\");\n  //   outerStyle.innerText = ` @font-face {\n  //      font-family: codicon;\n  //      font-display: block;\n  //       src: url(/npm:monaco-editor@${version}/esm/vs/base/browser/ui/codicons/codicon/codicon.ttf) format(\"truetype\");\n\n  // // }`;\n\n  const innerStyle = document.createElement(\"style\");\n\n  innerStyle.innerText = `@import url(/npm:/monaco-editor@${version}/?css);`;\n  container.appendChild(innerStyle);\n\n  // innerStyle.innerText = `@import url(/npm:monaco-editor@${version}/?css);`;\n  // shadowRoot.appendChild(innerStyle);\n\n  await monacoContribution(languages.typescript, editor, code);\n\n  returnModules.editor = editor.create(container, {\n    model: editor.createModel(\n      code,\n      \"typescript\",\n      Uri.parse(location.origin + \"/live/\" + name + \".tsx\"),\n    ),\n    language: \"typescript\",\n\n    scrollbar: {\n      scrollByPage: false,\n      alwaysConsumeMouseWheel: false,\n    },\n    scrollBeyondLastLine: false,\n    scrollPredominantAxis: false,\n\n    smoothScrolling: true,\n\n    suggest: {\n      /**\n       * Overwrite word ends on accept. Default to false.\n       */\n      insertMode: \"replace\",\n      /**\n       * Enable graceful matching. Defaults to true.\n       */\n      filterGraceful: true,\n      /**\n       * Prevent quick suggestions when a snippet is active. Defaults to true.\n       */\n      snippetsPreventQuickSuggestions: true,\n      /**\n       * Favors words that appear close to the cursor.\n       */\n      localityBonus: true,\n      /**\n       * Enable using global storage for remembering suggestions.\n       */\n      shareSuggestSelections: true,\n      /**\n       * Enable or disable icons in suggestions. Defaults to true.\n       */\n      showIcons: true,\n      /**\n       * Enable or disable the suggest status bar.\n       */\n      showStatusBar: false,\n      /**\n       * Enable or disable the rendering of the suggestion preview.\n       */\n      preview: true,\n      /**\n       * Configures the mode of the preview.\n       */\n      previewMode: \"prefix\",\n      /**\n       * Show details inline with the label. Defaults to true.\n       */\n      showInlineDetails: true,\n\n      /**\n       * Show method-suggestions.\n       */\n      showMethods: true,\n      /**\n       * Show function-suggestions.\n       */\n      showFunctions: true,\n      /**\n       * Show constructor-suggestions.\n       */\n      showConstructors: true,\n      /**\n       * Show deprecated-suggestions.\n       */\n\n      /**\n       * Show field-suggestions.\n       */\n\n      /**\n       * Show color-suggestions.\n       */\n      showColors: true,\n      /**\n       * Show file-suggestions.\n       */\n      showFiles: true,\n      /**\n       * Show reference-suggestions.\n       */\n      showReferences: true,\n      /**\n       * Show folder-suggestions.\n       */\n      showFolders: true,\n      /**\n       * Show typeParameter-suggestions.\n       */\n      showTypeParameters: true,\n      /**\n       * Show issue-suggestions.\n       */\n      showIssues: true,\n      /**\n       * Show user-suggestions.\n       */\n      showUsers: true,\n      /**\n       * Show snippet-suggestions.\n       */\n      showSnippets: true,\n    },\n\n    automaticLayout: true,\n    definitionLinkOpensInPeek: true,\n\n    theme: \"vs-dark\",\n\n    autoClosingBrackets: \"beforeWhitespace\",\n  });\n\n  return returnModules;\n};\n", "import AggregateError from 'aggregate-error';\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined\n\t? new AbortError(errorMessage)\n\t: new DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n\tconst reason = signal.reason === undefined\n\t\t? getDOMException('This operation was aborted.')\n\t\t: signal.reason;\n\n\treturn reason instanceof Error ? reason : getDOMException(reason);\n};\n\nexport default async function pMap(\n\titerable,\n\tmapper,\n\t{\n\t\tconcurrency = Number.POSITIVE_INFINITY,\n\t\tstopOnError = true,\n\t\tsignal,\n\t} = {},\n) {\n\treturn new Promise((resolve, reject_) => {\n\t\tif (iterable[Symbol.iterator] === undefined && iterable[Symbol.asyncIterator] === undefined) {\n\t\t\tthrow new TypeError(`Expected \\`input\\` to be either an \\`Iterable\\` or \\`AsyncIterable\\`, got (${typeof iterable})`);\n\t\t}\n\n\t\tif (typeof mapper !== 'function') {\n\t\t\tthrow new TypeError('Mapper function is required');\n\t\t}\n\n\t\tif (!((Number.isSafeInteger(concurrency) || concurrency === Number.POSITIVE_INFINITY) && concurrency >= 1)) {\n\t\t\tthrow new TypeError(`Expected \\`concurrency\\` to be an integer from 1 and up or \\`Infinity\\`, got \\`${concurrency}\\` (${typeof concurrency})`);\n\t\t}\n\n\t\tconst result = [];\n\t\tconst errors = [];\n\t\tconst skippedIndexesMap = new Map();\n\t\tlet isRejected = false;\n\t\tlet isResolved = false;\n\t\tlet isIterableDone = false;\n\t\tlet resolvingCount = 0;\n\t\tlet currentIndex = 0;\n\t\tconst iterator = iterable[Symbol.iterator] === undefined ? iterable[Symbol.asyncIterator]() : iterable[Symbol.iterator]();\n\n\t\tconst reject = reason => {\n\t\t\tisRejected = true;\n\t\t\tisResolved = true;\n\t\t\treject_(reason);\n\t\t};\n\n\t\tif (signal) {\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t}\n\n\t\t\tsignal.addEventListener('abort', () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t});\n\t\t}\n\n\t\tconst next = async () => {\n\t\t\tif (isResolved) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextItem = await iterator.next();\n\n\t\t\tconst index = currentIndex;\n\t\t\tcurrentIndex++;\n\n\t\t\t// Note: `iterator.next()` can be called many times in parallel.\n\t\t\t// This can cause multiple calls to this `next()` function to\n\t\t\t// receive a `nextItem` with `done === true`.\n\t\t\t// The shutdown logic that rejects/resolves must be protected\n\t\t\t// so it runs only one time as the `skippedIndex` logic is\n\t\t\t// non-idempotent.\n\t\t\tif (nextItem.done) {\n\t\t\t\tisIterableDone = true;\n\n\t\t\t\tif (resolvingCount === 0 && !isResolved) {\n\t\t\t\t\tif (!stopOnError && errors.length > 0) {\n\t\t\t\t\t\treject(new AggregateError(errors));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tisResolved = true;\n\n\t\t\t\t\tif (skippedIndexesMap.size === 0) {\n\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst pureResult = [];\n\n\t\t\t\t\t// Support multiple `pMapSkip`'s.\n\t\t\t\t\tfor (const [index, value] of result.entries()) {\n\t\t\t\t\t\tif (skippedIndexesMap.get(index) === pMapSkip) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpureResult.push(value);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(pureResult);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolvingCount++;\n\n\t\t\t// Intentionally detached\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst element = await nextItem.value;\n\n\t\t\t\t\tif (isResolved) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst value = await mapper(element, index);\n\n\t\t\t\t\t// Use Map to stage the index of the element.\n\t\t\t\t\tif (value === pMapSkip) {\n\t\t\t\t\t\tskippedIndexesMap.set(index, value);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult[index] = value;\n\n\t\t\t\t\tresolvingCount--;\n\t\t\t\t\tawait next();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (stopOnError) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors.push(error);\n\t\t\t\t\t\tresolvingCount--;\n\n\t\t\t\t\t\t// In that case we can't really continue regardless of `stopOnError` state\n\t\t\t\t\t\t// since an iterable is likely to continue throwing after it throws once.\n\t\t\t\t\t\t// If we continue calling `next()` indefinitely we will likely end up\n\t\t\t\t\t\t// in an infinite loop of failed iteration.\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait next();\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})();\n\t\t};\n\n\t\t// Create the concurrent runners in a detached (non-awaited)\n\t\t// promise. We need this so we can await the `next()` calls\n\t\t// to stop creating runners before hitting the concurrency limit\n\t\t// if the iterable has already been marked as done.\n\t\t// NOTE: We *must* do this for async iterators otherwise we'll spin up\n\t\t// infinite `next()` calls by default and never start the event loop.\n\t\t(async () => {\n\t\t\tfor (let index = 0; index < concurrency; index++) {\n\t\t\t\ttry {\n\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\tawait next();\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (isIterableDone || isRejected) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t});\n}\n\nexport const pMapSkip = Symbol('skip');\n", "import indentString from 'indent-string';\nimport cleanStack from 'clean-stack';\n\nconst cleanInternalStack = stack => stack.replace(/\\s+at .*aggregate-error\\/index.js:\\d+:\\d+\\)?/g, '');\n\nexport default class AggregateError extends Error {\n\t#errors;\n\n\tname = 'AggregateError';\n\n\tconstructor(errors) {\n\t\tif (!Array.isArray(errors)) {\n\t\t\tthrow new TypeError(`Expected input to be an Array, got ${typeof errors}`);\n\t\t}\n\n\t\terrors = errors.map(error => {\n\t\t\tif (error instanceof Error) {\n\t\t\t\treturn error;\n\t\t\t}\n\n\t\t\tif (error !== null && typeof error === 'object') {\n\t\t\t\t// Handle plain error objects with message property and/or possibly other metadata\n\t\t\t\treturn Object.assign(new Error(error.message), error);\n\t\t\t}\n\n\t\t\treturn new Error(error);\n\t\t});\n\n\t\tlet message = errors\n\t\t\t.map(error => {\n\t\t\t\t// The `stack` property is not standardized, so we can't assume it exists\n\t\t\t\treturn typeof error.stack === 'string' && error.stack.length > 0 ? cleanInternalStack(cleanStack(error.stack)) : String(error);\n\t\t\t})\n\t\t\t.join('\\n');\n\t\tmessage = '\\n' + indentString(message, 4);\n\t\tsuper(message);\n\n\t\tthis.#errors = errors;\n\t}\n\n\tget errors() {\n\t\treturn this.#errors.slice();\n\t}\n}\n", "export default function indentString(string, count = 1, options = {}) {\n\tconst {\n\t\tindent = ' ',\n\t\tincludeEmptyLines = false\n\t} = options;\n\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`input\\` to be a \\`string\\`, got \\`${typeof string}\\``\n\t\t);\n\t}\n\n\tif (typeof count !== 'number') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`count\\` to be a \\`number\\`, got \\`${typeof count}\\``\n\t\t);\n\t}\n\n\tif (count < 0) {\n\t\tthrow new RangeError(\n\t\t\t`Expected \\`count\\` to be at least 0, got \\`${count}\\``\n\t\t);\n\t}\n\n\tif (typeof indent !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`options.indent\\` to be a \\`string\\`, got \\`${typeof indent}\\``\n\t\t);\n\t}\n\n\tif (count === 0) {\n\t\treturn string;\n\t}\n\n\tconst regex = includeEmptyLines ? /^/gm : /^(?!\\s*$)/gm;\n\n\treturn string.replace(regex, indent.repeat(count));\n}\n", "import os from 'os';\nimport escapeStringRegexp from 'escape-string-regexp';\n\nconst extractPathRegex = /\\s+at.*[(\\s](.*)\\)?/;\nconst pathRegex = /^(?:(?:(?:node|node:[\\w/]+|(?:(?:node:)?internal\\/[\\w/]*|.*node_modules\\/(?:babel-polyfill|pirates)\\/.*)?\\w+)(?:\\.js)?:\\d+:\\d+)|native)/;\nconst homeDir = typeof os.homedir === 'undefined' ? '' : os.homedir().replace(/\\\\/g, '/');\n\nexport default function cleanStack(stack, {pretty = false, basePath} = {}) {\n\tconst basePathRegex = basePath && new RegExp(`(at | \\\\()${escapeStringRegexp(basePath.replace(/\\\\/g, '/'))}`, 'g');\n\n\tif (typeof stack !== 'string') {\n\t\treturn undefined;\n\t}\n\n\treturn stack.replace(/\\\\/g, '/')\n\t\t.split('\\n')\n\t\t.filter(line => {\n\t\t\tconst pathMatches = line.match(extractPathRegex);\n\t\t\tif (pathMatches === null || !pathMatches[1]) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst match = pathMatches[1];\n\n\t\t\t// Electron\n\t\t\tif (\n\t\t\t\tmatch.includes('.app/Contents/Resources/electron.asar') ||\n\t\t\t\tmatch.includes('.app/Contents/Resources/default_app.asar') ||\n\t\t\t\tmatch.includes('node_modules/electron/dist/resources/electron.asar') ||\n\t\t\t\tmatch.includes('node_modules/electron/dist/resources/default_app.asar')\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn !pathRegex.test(match);\n\t\t})\n\t\t.filter(line => line.trim() !== '')\n\t\t.map(line => {\n\t\t\tif (basePathRegex) {\n\t\t\t\tline = line.replace(basePathRegex, '$1');\n\t\t\t}\n\n\t\t\tif (pretty) {\n\t\t\t\tline = line.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')));\n\t\t\t}\n\n\t\t\treturn line;\n\t\t})\n\t\t.join('\\n');\n}\n", "export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it\u2019s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns\u2019 stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n"],
  "mappings": "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",
  "names": ["require_os", "__commonJSMin", "init_define_process", "init_define_process", "Uri", "init_define_process", "init_define_process", "init_define_process", "indentString", "string", "count", "options", "indent", "includeEmptyLines", "regex", "init_define_process", "import_os", "init_define_process", "escapeStringRegexp", "string", "extractPathRegex", "pathRegex", "homeDir", "os", "cleanStack", "stack", "pretty", "basePath", "basePathRegex", "escapeStringRegexp", "line", "pathMatches", "match", "m", "p1", "cleanInternalStack", "stack", "_errors", "AggregateError", "errors", "error", "message", "cleanStack", "indentString", "__privateAdd", "__publicField", "__privateSet", "__privateGet", "AbortError", "message", "getDOMException", "errorMessage", "getAbortedReason", "signal", "reason", "pMap", "iterable", "mapper", "concurrency", "stopOnError", "resolve", "reject_", "result", "errors", "skippedIndexesMap", "isRejected", "isResolved", "isIterableDone", "resolvingCount", "currentIndex", "iterator", "reject", "next", "nextItem", "index", "AggregateError", "pureResult", "value", "pMapSkip", "element", "error", "editorWorker", "tsWorker", "version", "dependencies", "started", "monacoContribution", "typescript", "editor", "code", "regex1", "regex2", "search", "models", "match", "extraModel", "res", "Uri", "dtsFiles", "reactDts", "jsxRuntimeDts", "propTypesDts", "cssTypeDts", "framerDts", "emotionStyled", "emotionStyleBase", "emotionCache", "emotionJSXNameSpaceDTS", "emotionJSXRuntimeDTS", "emotionReactDts", "emotionReactCssPropDts", "emotionReactHelperDts", "emotionThemingDts", "emotionSerializeDts", "emotionUtilsDts", "importHelper", "pMap", "name", "url", "_workerId", "label", "startMonaco", "container", "languages", "returnModules", "innerStyle"]
}
