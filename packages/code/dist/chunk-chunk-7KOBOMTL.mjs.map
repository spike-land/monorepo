{
  "version": 3,
  "sources": ["../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/src/constants.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/src/util.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/src/options.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/src/create-element.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/src/component.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/src/create-context.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/src/diff/children.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/src/diff/props.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/src/diff/index.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/src/render.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/src/clone-element.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/src/diff/catch-error.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/hooks/src/index.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/compat/src/util.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/compat/src/PureComponent.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/compat/src/memo.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/compat/src/forwardRef.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/compat/src/Children.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/compat/src/suspense.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/compat/src/suspense-list.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/compat/src/portals.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/compat/src/render.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/compat/src/index.js", "../.yarn/__virtual__/preact-render-to-string-virtual-01f41805c5/3/.yarn/global/cache/preact-render-to-string-npm-5.2.2-b8f2c0c74e-9.zip/node_modules/preact-render-to-string/src/util.js", "../.yarn/__virtual__/preact-render-to-string-virtual-01f41805c5/3/.yarn/global/cache/preact-render-to-string-npm-5.2.2-b8f2c0c74e-9.zip/node_modules/preact-render-to-string/src/index.js", "../../../.yarn/global/cache/preact-npm-10.10.6-e3746adb94-9.zip/node_modules/preact/jsx-runtime/src/index.js", "../react.ts"],
  "sourcesContent": ["export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || setTimeout)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tc,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n", "import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(r[i], parentVNode, typeof vnode.type != 'function');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) removeNode(vnode._dom);\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tconst prevScu = currentComponent.shouldComponentUpdate;\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\tcurrentComponent.shouldComponentUpdate = function(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t};\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n", "/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Check if two objects have a different shape\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nexport function shallowDiffers(a, b) {\n\tfor (let i in a) if (i !== '__source' && !(i in b)) return true;\n\tfor (let i in b) if (i !== '__source' && a[i] !== b[i]) return true;\n\treturn false;\n}\n\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n", "import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport function PureComponent(p) {\n\tthis.props = p;\n}\nPureComponent.prototype = new Component();\n// Some third-party libraries check if this property is present\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function(props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n", "import { createElement } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Memoize a component, so that it only updates when the props actually have\n * changed. This was previously known as `React.pure`.\n * @param {import('./internal').FunctionComponent} c functional component\n * @param {(prev: object, next: object) => boolean} [comparer] Custom equality function\n * @returns {import('./internal').FunctionComponent}\n */\nexport function memo(c, comparer) {\n\tfunction shouldUpdate(nextProps) {\n\t\tlet ref = this.props.ref;\n\t\tlet updateRef = ref == nextProps.ref;\n\t\tif (!updateRef && ref) {\n\t\t\tref.call ? ref(null) : (ref.current = null);\n\t\t}\n\n\t\tif (!comparer) {\n\t\t\treturn shallowDiffers(this.props, nextProps);\n\t\t}\n\n\t\treturn !comparer(this.props, nextProps) || !updateRef;\n\t}\n\n\tfunction Memoed(props) {\n\t\tthis.shouldComponentUpdate = shouldUpdate;\n\t\treturn createElement(c, props);\n\t}\n\tMemoed.displayName = 'Memo(' + (c.displayName || c.name) + ')';\n\tMemoed.prototype.isReactComponent = true;\n\tMemoed._forwarded = true;\n\treturn Memoed;\n}\n", "import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldDiffHook = options._diff;\noptions._diff = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\tif (oldDiffHook) oldDiffHook(vnode);\n};\n\nexport const REACT_FORWARD_SYMBOL =\n\t(typeof Symbol != 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.forward_ref')) ||\n\t0xf47;\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionComponent}\n */\nexport function forwardRef(fn) {\n\tfunction Forwarded(props) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\treturn fn(clone, props.ref || null);\n\t}\n\n\t// mobx-react checks for this being present\n\tForwarded.$$typeof = REACT_FORWARD_SYMBOL;\n\t// mobx-react heavily relies on implementation details.\n\t// It expects an object here with a `render` property,\n\t// and prototype.render will fail. Without this\n\t// mobx-react throws.\n\tForwarded.render = Forwarded;\n\n\tForwarded.prototype.isReactComponent = Forwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n", "import { toChildArray } from 'preact';\n\nconst mapFn = (children, fn) => {\n\tif (children == null) return null;\n\treturn toChildArray(toChildArray(children).map(fn));\n};\n\n// This API is completely unnecessary for Preact, so it's basically passthrough.\nexport const Children = {\n\tmap: mapFn,\n\tforEach: mapFn,\n\tcount(children) {\n\t\treturn children ? toChildArray(children).length : 0;\n\t},\n\tonly(children) {\n\t\tconst normalized = toChildArray(children);\n\t\tif (normalized.length !== 1) throw 'Children.only';\n\t\treturn normalized[0];\n\t},\n\ttoArray: toChildArray\n};\n", "import { Component, createElement, options, Fragment } from 'preact';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function(error, newVNode, oldVNode, errorInfo) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\tif (newVNode._dom == null) {\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t}\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode, errorInfo);\n};\n\nconst oldUnmount = options.unmount;\noptions.unmount = function(vnode) {\n\t/** @type {import('./internal').Component} */\n\tconst component = vnode._component;\n\tif (component && component._onResolve) {\n\t\tcomponent._onResolve();\n\t}\n\n\t// if the component is still hydrating\n\t// most likely it is because the component is suspended\n\t// we set the vnode.type as `null` so that it is not a typeof function\n\t// so the unmount will remove the vnode._dom\n\tif (component && vnode._hydrating === true) {\n\t\tvnode.type = null;\n\t}\n\n\tif (oldUnmount) oldUnmount(vnode);\n};\n\nfunction detachedClone(vnode, detachedParent, parentDom) {\n\tif (vnode) {\n\t\tif (vnode._component && vnode._component.__hooks) {\n\t\t\tvnode._component.__hooks._list.forEach(effect => {\n\t\t\t\tif (typeof effect._cleanup == 'function') effect._cleanup();\n\t\t\t});\n\n\t\t\tvnode._component.__hooks = null;\n\t\t}\n\n\t\tvnode = assign({}, vnode);\n\t\tif (vnode._component != null) {\n\t\t\tif (vnode._component._parentDom === parentDom) {\n\t\t\t\tvnode._component._parentDom = detachedParent;\n\t\t\t}\n\t\t\tvnode._component = null;\n\t\t}\n\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tdetachedClone(child, detachedParent, parentDom)\n\t\t\t);\n\t}\n\n\treturn vnode;\n}\n\nfunction removeOriginal(vnode, detachedParent, originalParent) {\n\tif (vnode) {\n\t\tvnode._original = null;\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tremoveOriginal(child, detachedParent, originalParent)\n\t\t\t);\n\n\t\tif (vnode._component) {\n\t\t\tif (vnode._component._parentDom === detachedParent) {\n\t\t\t\tif (vnode._dom) {\n\t\t\t\t\toriginalParent.insertBefore(vnode._dom, vnode._nextDom);\n\t\t\t\t}\n\t\t\t\tvnode._component._force = true;\n\t\t\t\tvnode._component._parentDom = originalParent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense() {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {Promise} promise The thrown promise\n * @param {import('./internal').VNode<any, any>} suspendingVNode The suspending component\n */\nSuspense.prototype._childDidSuspend = function(promise, suspendingVNode) {\n\tconst suspendingComponent = suspendingVNode._component;\n\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\t\tsuspendingComponent._onResolve = null;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._onResolve = onResolved;\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\t// If the suspension was during hydration we don't need to restore the\n\t\t\t// suspended children into the _children array\n\t\t\tif (c.state._suspended) {\n\t\t\t\tconst suspendedVNode = c.state._suspended;\n\t\t\t\tc._vnode._children[0] = removeOriginal(\n\t\t\t\t\tsuspendedVNode,\n\t\t\t\t\tsuspendedVNode._component._parentDom,\n\t\t\t\t\tsuspendedVNode._component._originalParentDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * We do not set `suspended: true` during hydration because we want the actual markup\n\t * to remain on screen and hydrate it when the suspense actually gets resolved.\n\t * While in non-hydration cases the usual fallback -> component flow would occour.\n\t */\n\tconst wasHydrating = suspendingVNode._hydrating === true;\n\tif (!c._pendingSuspensionCount++ && !wasHydrating) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.componentWillUnmount = function() {\n\tthis._suspenders = [];\n};\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {import('./internal').SuspenseComponent[\"props\"]} props\n * @param {import('./internal').SuspenseState} state\n */\nSuspense.prototype.render = function(props, state) {\n\tif (this._detachOnNextRender) {\n\t\t// When the Suspense's _vnode was created by a call to createVNode\n\t\t// (i.e. due to a setState further up in the tree)\n\t\t// it's _children prop is null, in this case we \"forget\" about the parked vnodes to detach\n\t\tif (this._vnode._children) {\n\t\t\tconst detachedParent = document.createElement('div');\n\t\t\tconst detachedComponent = this._vnode._children[0]._component;\n\t\t\tthis._vnode._children[0] = detachedClone(\n\t\t\t\tthis._detachOnNextRender,\n\t\t\t\tdetachedParent,\n\t\t\t\t(detachedComponent._originalParentDom = detachedComponent._parentDom)\n\t\t\t);\n\t\t}\n\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\t// Wrap fallback tree in a VNode that prevents itself from being marked as aborting mid-hydration:\n\t/** @type {import('./internal').VNode} */\n\tconst fallback =\n\t\tstate._suspended && createElement(Fragment, null, props.fallback);\n\tif (fallback) fallback._hydrating = null;\n\n\treturn [\n\t\tcreateElement(Fragment, null, state._suspended ? null : props.children),\n\t\tfallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('./internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\t/** @type {import('./internal').Component} */\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n", "import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function(child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function(props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate = SuspenseList.prototype.componentDidMount = function() {\n\t// Iterate through all children after mounting for two reasons:\n\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t//    The nodes can now be completely consumed from the linked list.\n\t// 2. Handle nodes that might have gotten resolved between render and\n\t//    componentDidMount.\n\tthis._map.forEach((node, child) => {\n\t\tresolve(this, child, node);\n\t});\n};\n", "import { createElement, render } from 'preact';\n\n/**\n * @param {import('../../src/index').RenderableProps<{ context: any }>} props\n */\nfunction ContextProvider(props) {\n\tthis.getChildContext = () => props.context;\n\treturn props.children;\n}\n\n/**\n * Portal component\n * @this {import('./internal').Component}\n * @param {object | null | undefined} props\n *\n * TODO: use createRoot() instead of fake root\n */\nfunction Portal(props) {\n\tconst _this = this;\n\tlet container = props._container;\n\n\t_this.componentWillUnmount = function() {\n\t\trender(null, _this._temp);\n\t\t_this._temp = null;\n\t\t_this._container = null;\n\t};\n\n\t// When we change container we should clear our old container and\n\t// indicate a new mount.\n\tif (_this._container && _this._container !== container) {\n\t\t_this.componentWillUnmount();\n\t}\n\n\t// When props.vnode is undefined/false/null we are dealing with some kind of\n\t// conditional vnode. This should not trigger a render.\n\tif (props._vnode) {\n\t\tif (!_this._temp) {\n\t\t\t_this._container = container;\n\n\t\t\t// Create a fake DOM parent node that manages a subset of `container`'s children:\n\t\t\t_this._temp = {\n\t\t\t\tnodeType: 1,\n\t\t\t\tparentNode: container,\n\t\t\t\tchildNodes: [],\n\t\t\t\tappendChild(child) {\n\t\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t\t_this._container.appendChild(child);\n\t\t\t\t},\n\t\t\t\tinsertBefore(child, before) {\n\t\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t\t_this._container.appendChild(child);\n\t\t\t\t},\n\t\t\t\tremoveChild(child) {\n\t\t\t\t\tthis.childNodes.splice(this.childNodes.indexOf(child) >>> 1, 1);\n\t\t\t\t\t_this._container.removeChild(child);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t// Render our wrapping element into temp.\n\t\trender(\n\t\t\tcreateElement(ContextProvider, { context: _this.context }, props._vnode),\n\t\t\t_this._temp\n\t\t);\n\t}\n\t// When we come from a conditional render, on a mounted\n\t// portal we should clear the DOM.\n\telse if (_this._temp) {\n\t\t_this.componentWillUnmount();\n\t}\n}\n\n/**\n * Create a `Portal` to continue rendering the vnode tree at a different DOM node\n * @param {import('./internal').VNode} vnode The vnode to render\n * @param {import('./internal').PreactElement} container The DOM node to continue rendering in to.\n */\nexport function createPortal(vnode, container) {\n\tconst el = createElement(Portal, { _vnode: vnode, _container: container });\n\tel.containerInfo = container;\n\treturn el;\n}\n", "import {\n\trender as preactRender,\n\thydrate as preactHydrate,\n\toptions,\n\ttoChildArray,\n\tComponent\n} from 'preact';\n\nexport const REACT_ELEMENT_TYPE =\n\t(typeof Symbol != 'undefined' && Symbol.for && Symbol.for('react.element')) ||\n\t0xeac7;\n\nconst CAMEL_PROPS = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;\n\nconst IS_DOM = typeof document !== 'undefined';\n\n// Input types for which onchange should not be converted to oninput.\n// type=\"file|checkbox|radio\", plus \"range\" in IE11.\n// (IE11 doesn't support Symbol, which we use here to turn `rad` into `ra` which matches \"range\")\nconst onChangeInputType = type =>\n\t(typeof Symbol != 'undefined' && typeof Symbol() == 'symbol'\n\t\t? /fil|che|rad/i\n\t\t: /fil|che|ra/i\n\t).test(type);\n\n// Some libraries like `react-virtualized` explicitly check for this.\nComponent.prototype.isReactComponent = {};\n\n// `UNSAFE_*` lifecycle hooks\n// Preact only ever invokes the unprefixed methods.\n// Here we provide a base \"fallback\" implementation that calls any defined UNSAFE_ prefixed method.\n// - If a component defines its own `componentDidMount()` (including via defineProperty), use that.\n// - If a component defines `UNSAFE_componentDidMount()`, `componentDidMount` is the alias getter/setter.\n// - If anything assigns to an `UNSAFE_*` property, the assignment is forwarded to the unprefixed property.\n// See https://github.com/preactjs/preact/issues/1941\n[\n\t'componentWillMount',\n\t'componentWillReceiveProps',\n\t'componentWillUpdate'\n].forEach(key => {\n\tObject.defineProperty(Component.prototype, key, {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn this['UNSAFE_' + key];\n\t\t},\n\t\tset(v) {\n\t\t\tObject.defineProperty(this, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: v\n\t\t\t});\n\t\t}\n\t});\n});\n\n/**\n * Proxy render() since React returns a Component reference.\n * @param {import('./internal').VNode} vnode VNode tree to render\n * @param {import('./internal').PreactElement} parent DOM node to render vnode tree into\n * @param {() => void} [callback] Optional callback that will be called after rendering\n * @returns {import('./internal').Component | null} The root component reference or null\n */\nexport function render(vnode, parent, callback) {\n\t// React destroys any existing DOM nodes, see #1727\n\t// ...but only on the first render, see #1828\n\tif (parent._children == null) {\n\t\tparent.textContent = '';\n\t}\n\n\tpreactRender(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nexport function hydrate(vnode, parent, callback) {\n\tpreactHydrate(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nlet oldEventHook = options.event;\noptions.event = e => {\n\tif (oldEventHook) e = oldEventHook(e);\n\te.persist = empty;\n\te.isPropagationStopped = isPropagationStopped;\n\te.isDefaultPrevented = isDefaultPrevented;\n\treturn (e.nativeEvent = e);\n};\n\nfunction empty() {}\n\nfunction isPropagationStopped() {\n\treturn this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n\treturn this.defaultPrevented;\n}\n\nlet classNameDescriptor = {\n\tconfigurable: true,\n\tget() {\n\t\treturn this.class;\n\t}\n};\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\tlet type = vnode.type;\n\tlet props = vnode.props;\n\tlet normalizedProps = props;\n\n\t// only normalize props on Element nodes\n\tif (typeof type === 'string') {\n\t\tconst nonCustomElement = type.indexOf('-') === -1;\n\t\tnormalizedProps = {};\n\n\t\tfor (let i in props) {\n\t\t\tlet value = props[i];\n\n\t\t\tif (IS_DOM && i === 'children' && type === 'noscript') {\n\t\t\t\t// Emulate React's behavior of not rendering the contents of noscript tags on the client.\n\t\t\t\tcontinue;\n\t\t\t} else if (i === 'value' && 'defaultValue' in props && value == null) {\n\t\t\t\t// Skip applying value if it is null/undefined and we already set\n\t\t\t\t// a default value\n\t\t\t\tcontinue;\n\t\t\t} else if (\n\t\t\t\ti === 'defaultValue' &&\n\t\t\t\t'value' in props &&\n\t\t\t\tprops.value == null\n\t\t\t) {\n\t\t\t\t// `defaultValue` is treated as a fallback `value` when a value prop is present but null/undefined.\n\t\t\t\t// `defaultValue` for Elements with no value prop is the same as the DOM defaultValue property.\n\t\t\t\ti = 'value';\n\t\t\t} else if (i === 'download' && value === true) {\n\t\t\t\t// Calling `setAttribute` with a truthy value will lead to it being\n\t\t\t\t// passed as a stringified value, e.g. `download=\"true\"`. React\n\t\t\t\t// converts it to an empty string instead, otherwise the attribute\n\t\t\t\t// value will be used as the file name and the file will be called\n\t\t\t\t// \"true\" upon downloading it.\n\t\t\t\tvalue = '';\n\t\t\t} else if (/ondoubleclick/i.test(i)) {\n\t\t\t\ti = 'ondblclick';\n\t\t\t} else if (\n\t\t\t\t/^onchange(textarea|input)/i.test(i + type) &&\n\t\t\t\t!onChangeInputType(props.type)\n\t\t\t) {\n\t\t\t\ti = 'oninput';\n\t\t\t} else if (/^onfocus$/i.test(i)) {\n\t\t\t\ti = 'onfocusin';\n\t\t\t} else if (/^onblur$/i.test(i)) {\n\t\t\t\ti = 'onfocusout';\n\t\t\t} else if (/^on(Ani|Tra|Tou|BeforeInp|Compo)/.test(i)) {\n\t\t\t\ti = i.toLowerCase();\n\t\t\t} else if (nonCustomElement && CAMEL_PROPS.test(i)) {\n\t\t\t\ti = i.replace(/[A-Z0-9]/g, '-$&').toLowerCase();\n\t\t\t} else if (value === null) {\n\t\t\t\tvalue = undefined;\n\t\t\t}\n\n\t\t\t// Add support for onInput and onChange, see #3561\n\t\t\t// if we have an oninput prop already change it to oninputCapture\n\t\t\tif (/^oninput$/i.test(i)) {\n\t\t\t\ti = i.toLowerCase();\n\t\t\t\tif (normalizedProps[i]) {\n\t\t\t\t\ti = 'oninputCapture';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnormalizedProps[i] = value;\n\t\t}\n\n\t\t// Add support for array select values: <select multiple value={[]} />\n\t\tif (\n\t\t\ttype == 'select' &&\n\t\t\tnormalizedProps.multiple &&\n\t\t\tArray.isArray(normalizedProps.value)\n\t\t) {\n\t\t\t// forEach() always returns undefined, which we abuse here to unset the value prop.\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.value.indexOf(child.props.value) != -1;\n\t\t\t});\n\t\t}\n\n\t\t// Adding support for defaultValue in select tag\n\t\tif (type == 'select' && normalizedProps.defaultValue != null) {\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tif (normalizedProps.multiple) {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue.indexOf(child.props.value) != -1;\n\t\t\t\t} else {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue == child.props.value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvnode.props = normalizedProps;\n\n\t\tif (props.class != props.className) {\n\t\t\tclassNameDescriptor.enumerable = 'className' in props;\n\t\t\tif (props.className != null) normalizedProps.class = props.className;\n\t\t\tObject.defineProperty(normalizedProps, 'className', classNameDescriptor);\n\t\t}\n\t}\n\n\tvnode.$$typeof = REACT_ELEMENT_TYPE;\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n\n// Only needed for react-relay\nlet currentComponent;\nconst oldBeforeRender = options._render;\noptions._render = function(vnode) {\n\tif (oldBeforeRender) {\n\t\toldBeforeRender(vnode);\n\t}\n\tcurrentComponent = vnode._component;\n};\n\n// This is a very very private internal function for React it\n// is used to sort-of do runtime dependency injection. So far\n// only `react-relay` makes use of it. It uses it to read the\n// context value.\nexport const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {\n\tReactCurrentDispatcher: {\n\t\tcurrent: {\n\t\t\treadContext(context) {\n\t\t\t\treturn currentComponent._globalContext[context._id].props.value;\n\t\t\t}\n\t\t}\n\t}\n};\n", "import {\n\tcreateElement,\n\trender as preactRender,\n\tcloneElement as preactCloneElement,\n\tcreateRef,\n\tComponent,\n\tcreateContext,\n\tFragment\n} from 'preact';\nimport {\n\tuseState,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue\n} from 'preact/hooks';\nimport { PureComponent } from './PureComponent';\nimport { memo } from './memo';\nimport { forwardRef } from './forwardRef';\nimport { Children } from './Children';\nimport { Suspense, lazy } from './suspense';\nimport { SuspenseList } from './suspense-list';\nimport { createPortal } from './portals';\nimport {\n\thydrate,\n\trender,\n\tREACT_ELEMENT_TYPE,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n} from './render';\n\nconst version = '17.0.2'; // trick libraries to think we are react\n\n/**\n * Legacy version of createElement.\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor\n */\nfunction createFactory(type) {\n\treturn createElement.bind(null, type);\n}\n\n/**\n * Check if the passed element is a valid (p)react node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isValidElement(element) {\n\treturn !!element && element.$$typeof === REACT_ELEMENT_TYPE;\n}\n\n/**\n * Wrap `cloneElement` to abort if the passed element is not a valid element and apply\n * all vnode normalizations.\n * @param {import('./internal').VNode} element The vnode to clone\n * @param {object} props Props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Optional component children\n */\nfunction cloneElement(element) {\n\tif (!isValidElement(element)) return element;\n\treturn preactCloneElement.apply(null, arguments);\n}\n\n/**\n * Remove a component tree from the DOM, including state and event handlers.\n * @param {import('./internal').PreactElement} container\n * @returns {boolean}\n */\nfunction unmountComponentAtNode(container) {\n\tif (container._children) {\n\t\tpreactRender(null, container);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Get the matching DOM node for a component\n * @param {import('./internal').Component} component\n * @returns {import('./internal').PreactElement | null}\n */\nfunction findDOMNode(component) {\n\treturn (\n\t\t(component &&\n\t\t\t(component.base || (component.nodeType === 1 && component))) ||\n\t\tnull\n\t);\n}\n\n/**\n * Deprecated way to control batched rendering inside the reconciler, but we\n * already schedule in batches inside our rendering code\n * @template Arg\n * @param {(arg: Arg) => void} callback function that triggers the updated\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n */\n// eslint-disable-next-line camelcase\nconst unstable_batchedUpdates = (callback, arg) => callback(arg);\n\n/**\n * In React, `flushSync` flushes the entire tree and forces a rerender. It's\n * implmented here as a no-op.\n * @template Arg\n * @template Result\n * @param {(arg: Arg) => Result} callback function that runs before the flush\n * @param {Arg} [arg] Optional arugment that can be passed to the callback\n * @returns\n */\nconst flushSync = (callback, arg) => callback(arg);\n\n/**\n * Strict Mode is not implemented in Preact, so we provide a stand-in for it\n * that just renders its children without imposing any restrictions.\n */\nconst StrictMode = Fragment;\n\nexport function startTransition(cb) {\n\tcb();\n}\n\nexport function useDeferredValue(val) {\n\treturn val;\n}\n\nexport function useTransition() {\n\treturn [false, startTransition];\n}\n\n// TODO: in theory this should be done after a VNode is diffed as we want to insert\n// styles/... before it attaches\nexport const useInsertionEffect = useLayoutEffect;\n\n/**\n * This is taken from https://github.com/facebook/react/blob/main/packages/use-sync-external-store/src/useSyncExternalStoreShimClient.js#L84\n * on a high level this cuts out the warnings, ... and attempts a smaller implementation\n */\nexport function useSyncExternalStore(subscribe, getSnapshot) {\n\tconst value = getSnapshot();\n\n\tconst [{ _instance }, forceUpdate] = useState({\n\t\t_instance: { _value: value, _getSnapshot: getSnapshot }\n\t});\n\n\tuseLayoutEffect(() => {\n\t\t_instance._value = value;\n\t\t_instance._getSnapshot = getSnapshot;\n\n\t\tif (_instance._value !== getSnapshot()) {\n\t\t\tforceUpdate({ _instance });\n\t\t}\n\t}, [subscribe, value, getSnapshot]);\n\n\tuseEffect(() => {\n\t\tif (_instance._value !== _instance._getSnapshot()) {\n\t\t\tforceUpdate({ _instance });\n\t\t}\n\n\t\treturn subscribe(() => {\n\t\t\tif (_instance._value !== _instance._getSnapshot()) {\n\t\t\t\tforceUpdate({ _instance });\n\t\t\t}\n\t\t});\n\t}, [subscribe]);\n\n\treturn value;\n}\n\nexport * from 'preact/hooks';\nexport {\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\t// eslint-disable-next-line camelcase\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n\n// React copies the named exports to the default one.\nexport default {\n\tuseState,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseInsertionEffect,\n\tuseTransition,\n\tuseDeferredValue,\n\tuseSyncExternalStore,\n\tstartTransition,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n", "// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;\n\nconst ENCODED_ENTITIES = /[&<>\"]/;\n\nexport function encodeEntities(str) {\n\t// Ensure we're always parsing and returning a string:\n\tstr += '';\n\n\t// Skip all work for strings with no entities needing encoding:\n\tif (ENCODED_ENTITIES.test(str) === false) return str;\n\n\tlet last = 0,\n\t\ti = 0,\n\t\tout = '',\n\t\tch = '';\n\n\t// Seek forward in str until the next entity char:\n\tfor (; i<str.length; i++) {\n\t\tswitch (str.charCodeAt(i)) {\n\t\t\tcase 60: ch = '&lt;'; break;\n\t\t\tcase 62: ch = '&gt;'; break;\n\t\t\tcase 34: ch = '&quot;'; break;\n\t\t\tcase 38: ch = '&amp;'; break;\n\t\t\tdefault: continue;\n\t\t}\n\t\t// Append skipped/buffered characters and the encoded entity:\n\t\tif (i > last) out += str.slice(last, i);\n\t\tout += ch;\n\t\t// Start the next seek/buffer after the entity's offset:\n\t\tlast = i + 1;\n\t}\n\treturn out + str.slice(last, i);\n}\n\nexport let indent = (s, char) =>\n\tString(s).replace(/(\\n+)/g, '$1' + (char || '\\t'));\n\nexport let isLargeString = (s, length, ignoreLines) =>\n\tString(s).length > (length || 40) ||\n\t(!ignoreLines && String(s).indexOf('\\n') !== -1) ||\n\tString(s).indexOf('<') !== -1;\n\nconst JS_TO_CSS = {};\n\n// Convert an Object style to a CSSText string\nexport function styleObjToCss(s) {\n\tlet str = '';\n\tfor (let prop in s) {\n\t\tlet val = s[prop];\n\t\tif (val != null && val !== '') {\n\t\t\tif (str) str += ' ';\n\t\t\t// str += jsToCss(prop);\n\t\t\tstr +=\n\t\t\t\tprop[0] == '-'\n\t\t\t\t\t? prop\n\t\t\t\t\t: JS_TO_CSS[prop] ||\n\t\t\t\t\t  (JS_TO_CSS[prop] = prop.replace(/([A-Z])/g, '-$1').toLowerCase());\n\t\t\tstr += ': ';\n\t\t\tstr += val;\n\t\t\tif (typeof val === 'number' && IS_NON_DIMENSIONAL.test(prop) === false) {\n\t\t\t\tstr += 'px';\n\t\t\t}\n\t\t\tstr += ';';\n\t\t}\n\t}\n\treturn str || undefined;\n}\n\n/**\n * Copy all properties from `props` onto `obj`.\n * @param {object} obj Object onto which properties should be copied.\n * @param {object} props Object from which to copy properties.\n * @returns {object}\n * @private\n */\nexport function assign(obj, props) {\n\treturn Object.assign(obj, props);\n}\n\n/**\n * Get flattened children from the children prop\n * @param {Array} accumulator\n * @param {any} children A `props.children` opaque object.\n * @returns {Array} accumulator\n * @private\n */\nexport function getChildren(accumulator, children) {\n\tif (Array.isArray(children)) {\n\t\tchildren.reduce(getChildren, accumulator);\n\t} else if (children != null && children !== false) {\n\t\taccumulator.push(children);\n\t}\n\treturn accumulator;\n}\n", "import {\n\tencodeEntities,\n\tindent,\n\tisLargeString,\n\tstyleObjToCss,\n\tgetChildren\n} from './util';\nimport { options, Fragment } from 'preact';\n\n/** @typedef {import('preact').VNode} VNode */\n\nconst SHALLOW = { shallow: true };\n\n// components without names, kept as a hash for later comparison to return consistent UnnamedComponentXX names.\nconst UNNAMED = [];\n\nconst VOID_ELEMENTS = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/;\n\nconst UNSAFE_NAME = /[\\s\\n\\\\/='\"\\0<>]/;\nconst XLINK = /^xlink:?./;\n\nfunction markAsDirty() {\n\tthis.__d = true;\n}\n\n/** Render Preact JSX + Components to an HTML string.\n *\t@name render\n *\t@function\n *\t@param {VNode} vnode\tJSX VNode to render.\n *\t@param {Object} [context={}]\tOptionally pass an initial context object through the render path.\n *\t@param {Object} [options={}]\tRendering options\n *\t@param {Boolean} [options.shallow=false]\tIf `true`, renders nested Components as HTML elements (`<Foo a=\"b\" />`).\n *\t@param {Boolean} [options.xml=false]\t\tIf `true`, uses self-closing tags for elements without children.\n *\t@param {Boolean} [options.pretty=false]\t\tIf `true`, adds whitespace for readability\n *\t@param {RegExp|undefined} [options.voidElements]       RegeEx that matches elements that are considered void (self-closing)\n */\nrenderToString.render = renderToString;\n\n/** Only render elements, leaving Components inline as `<ComponentName ... />`.\n *\tThis method is just a convenience alias for `render(vnode, context, { shallow:true })`\n *\t@name shallow\n *\t@function\n *\t@param {VNode} vnode\tJSX VNode to render.\n *\t@param {Object} [context={}]\tOptionally pass an initial context object through the render path.\n */\nlet shallowRender = (vnode, context) => renderToString(vnode, context, SHALLOW);\n\nconst EMPTY_ARR = [];\nfunction renderToString(vnode, context, opts) {\n\tcontext = context || {};\n\topts = opts || {};\n\n\t// Performance optimization: `renderToString` is synchronous and we\n\t// therefore don't execute any effects. To do that we pass an empty\n\t// array to `options._commit` (`__c`). But we can go one step further\n\t// and avoid a lot of dirty checks and allocations by setting\n\t// `options._skipEffects` (`__s`) too.\n\tconst previousSkipEffects = options.__s;\n\toptions.__s = true;\n\n\tlet res;\n\tif (opts.pretty || opts.sortAttributes) {\n\t\tres = _renderToStringPretty(vnode, context, opts);\n\t} else {\n\t\tres = _renderToString(vnode, context, opts);\n\t}\n\n\t// options._commit, we don't schedule any effects in this library right now,\n\t// so we can pass an empty queue to this hook.\n\tif (options.__c) options.__c(vnode, EMPTY_ARR);\n\tEMPTY_ARR.length = 0;\n\toptions.__s = previousSkipEffects;\n\treturn res;\n}\n\nfunction createComponent(vnode, context) {\n\treturn {\n\t\t__v: vnode,\n\t\tcontext,\n\t\tprops: vnode.props,\n\t\t// silently drop state updates\n\t\tsetState: markAsDirty,\n\t\tforceUpdate: markAsDirty,\n\t\t__d: true,\n\t\t// hooks\n\t\t__h: []\n\t};\n}\n\n// Necessary for createContext api. Setting this property will pass\n// the context value as `this.context` just for this component.\nfunction getContext(nodeName, context) {\n\tlet cxType = nodeName.contextType;\n\tlet provider = cxType && context[cxType.__c];\n\treturn cxType != null\n\t\t? provider\n\t\t\t? provider.props.value\n\t\t\t: cxType.__\n\t\t: context;\n}\n\n/** The default export is an alias of `render()`. */\nfunction _renderToString(vnode, context, opts, inner, isSvgMode, selectValue) {\n\tif (vnode == null || typeof vnode === 'boolean') {\n\t\treturn '';\n\t}\n\n\t// #text nodes\n\tif (typeof vnode !== 'object') {\n\t\treturn encodeEntities(vnode);\n\t}\n\n\tif (Array.isArray(vnode)) {\n\t\tconst rendered = [];\n\t\tfor (let i = 0; i < vnode.length; i++) {\n\t\t\trendered.push(\n\t\t\t\t_renderToString(vnode[i], context, opts, inner, isSvgMode, selectValue)\n\t\t\t);\n\t\t}\n\t\treturn rendered.join('');\n\t}\n\n\tlet nodeName = vnode.type,\n\t\tprops = vnode.props,\n\t\tisComponent = false;\n\n\t// components\n\tif (typeof nodeName === 'function') {\n\t\tisComponent = true;\n\t\tif (opts.shallow && (inner || opts.renderRootComponent === false)) {\n\t\t\tnodeName = getComponentName(nodeName);\n\t\t} else if (nodeName === Fragment) {\n\t\t\tconst children = [];\n\t\t\tgetChildren(children, vnode.props.children);\n\t\t\treturn _renderToString(\n\t\t\t\tchildren,\n\t\t\t\tcontext,\n\t\t\t\topts,\n\t\t\t\topts.shallowHighOrder !== false,\n\t\t\t\tisSvgMode,\n\t\t\t\tselectValue\n\t\t\t);\n\t\t} else {\n\t\t\tlet rendered;\n\n\t\t\tlet c = (vnode.__c = createComponent(vnode, context));\n\n\t\t\t// options._diff\n\t\t\tif (options.__b) options.__b(vnode);\n\n\t\t\t// options._render\n\t\t\tlet renderHook = options.__r;\n\n\t\t\tif (\n\t\t\t\t!nodeName.prototype ||\n\t\t\t\ttypeof nodeName.prototype.render !== 'function'\n\t\t\t) {\n\t\t\t\tlet cctx = getContext(nodeName, context);\n\n\t\t\t\t// If a hook invokes setState() to invalidate the component during rendering,\n\t\t\t\t// re-render it up to 25 times to allow \"settling\" of memoized states.\n\t\t\t\t// Note:\n\t\t\t\t//   This will need to be updated for Preact 11 to use internal.flags rather than component._dirty:\n\t\t\t\t//   https://github.com/preactjs/preact/blob/d4ca6fdb19bc715e49fd144e69f7296b2f4daa40/src/diff/component.js#L35-L44\n\t\t\t\tlet count = 0;\n\t\t\t\twhile (c.__d && count++ < 25) {\n\t\t\t\t\tc.__d = false;\n\n\t\t\t\t\tif (renderHook) renderHook(vnode);\n\n\t\t\t\t\t// stateless functional components\n\t\t\t\t\trendered = nodeName.call(vnode.__c, props, cctx);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet cctx = getContext(nodeName, context);\n\n\t\t\t\t// c = new nodeName(props, context);\n\t\t\t\tc = vnode.__c = new nodeName(props, cctx);\n\t\t\t\tc.__v = vnode;\n\t\t\t\t// turn off stateful re-rendering:\n\t\t\t\tc._dirty = c.__d = true;\n\t\t\t\tc.props = props;\n\t\t\t\tif (c.state == null) c.state = {};\n\n\t\t\t\tif (c._nextState == null && c.__s == null) {\n\t\t\t\t\tc._nextState = c.__s = c.state;\n\t\t\t\t}\n\n\t\t\t\tc.context = cctx;\n\t\t\t\tif (nodeName.getDerivedStateFromProps)\n\t\t\t\t\tc.state = Object.assign(\n\t\t\t\t\t\t{},\n\t\t\t\t\t\tc.state,\n\t\t\t\t\t\tnodeName.getDerivedStateFromProps(c.props, c.state)\n\t\t\t\t\t);\n\t\t\t\telse if (c.componentWillMount) {\n\t\t\t\t\tc.componentWillMount();\n\n\t\t\t\t\t// If the user called setState in cWM we need to flush pending,\n\t\t\t\t\t// state updates. This is the same behaviour in React.\n\t\t\t\t\tc.state =\n\t\t\t\t\t\tc._nextState !== c.state\n\t\t\t\t\t\t\t? c._nextState\n\t\t\t\t\t\t\t: c.__s !== c.state\n\t\t\t\t\t\t\t? c.__s\n\t\t\t\t\t\t\t: c.state;\n\t\t\t\t}\n\n\t\t\t\tif (renderHook) renderHook(vnode);\n\n\t\t\t\trendered = c.render(c.props, c.state, c.context);\n\t\t\t}\n\n\t\t\tif (c.getChildContext) {\n\t\t\t\tcontext = Object.assign({}, context, c.getChildContext());\n\t\t\t}\n\n\t\t\tif (options.diffed) options.diffed(vnode);\n\t\t\treturn _renderToString(\n\t\t\t\trendered,\n\t\t\t\tcontext,\n\t\t\t\topts,\n\t\t\t\topts.shallowHighOrder !== false,\n\t\t\t\tisSvgMode,\n\t\t\t\tselectValue\n\t\t\t);\n\t\t}\n\t}\n\n\t// render JSX to HTML\n\tlet s = `<${nodeName}`,\n\t\tpropChildren,\n\t\thtml;\n\n\tif (props) {\n\t\tfor (let name in props) {\n\t\t\tlet v = props[name];\n\t\t\tif (name === 'children') {\n\t\t\t\tpropChildren = v;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (UNSAFE_NAME.test(name)) continue;\n\n\t\t\tif (\n\t\t\t\t!(opts && opts.allAttributes) &&\n\t\t\t\t(name === 'key' ||\n\t\t\t\t\tname === 'ref' ||\n\t\t\t\t\tname === '__self' ||\n\t\t\t\t\tname === '__source')\n\t\t\t)\n\t\t\t\tcontinue;\n\n\t\t\tif (name === 'defaultValue') {\n\t\t\t\tname = 'value';\n\t\t\t} else if (name === 'defaultChecked') {\n\t\t\t\tname = 'checked';\n\t\t\t} else if (name === 'defaultSelected') {\n\t\t\t\tname = 'selected';\n\t\t\t} else if (name === 'className') {\n\t\t\t\tif (typeof props.class !== 'undefined') continue;\n\t\t\t\tname = 'class';\n\t\t\t} else if (isSvgMode && XLINK.test(name)) {\n\t\t\t\tname = name.toLowerCase().replace(/^xlink:?/, 'xlink:');\n\t\t\t}\n\n\t\t\tif (name === 'htmlFor') {\n\t\t\t\tif (props.for) continue;\n\t\t\t\tname = 'for';\n\t\t\t}\n\n\t\t\tif (name === 'style' && v && typeof v === 'object') {\n\t\t\t\tv = styleObjToCss(v);\n\t\t\t}\n\n\t\t\t// always use string values instead of booleans for aria attributes\n\t\t\t// also see https://github.com/preactjs/preact/pull/2347/files\n\t\t\tif (name[0] === 'a' && name['1'] === 'r' && typeof v === 'boolean') {\n\t\t\t\tv = String(v);\n\t\t\t}\n\n\t\t\tlet hooked =\n\t\t\t\topts.attributeHook &&\n\t\t\t\topts.attributeHook(name, v, context, opts, isComponent);\n\t\t\tif (hooked || hooked === '') {\n\t\t\t\ts = s + hooked;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (name === 'dangerouslySetInnerHTML') {\n\t\t\t\thtml = v && v.__html;\n\t\t\t} else if (nodeName === 'textarea' && name === 'value') {\n\t\t\t\t// <textarea value=\"a&b\"> --> <textarea>a&amp;b</textarea>\n\t\t\t\tpropChildren = v;\n\t\t\t} else if ((v || v === 0 || v === '') && typeof v !== 'function') {\n\t\t\t\tif (v === true || v === '') {\n\t\t\t\t\tv = name;\n\t\t\t\t\t// in non-xml mode, allow boolean attributes\n\t\t\t\t\tif (!opts || !opts.xml) {\n\t\t\t\t\t\ts = s + ' ' + name;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (name === 'value') {\n\t\t\t\t\tif (nodeName === 'select') {\n\t\t\t\t\t\tselectValue = v;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t// If we're looking at an <option> and it's the currently selected one\n\t\t\t\t\t\tnodeName === 'option' &&\n\t\t\t\t\t\tselectValue == v &&\n\t\t\t\t\t\t// and the <option> doesn't already have a selected attribute on it\n\t\t\t\t\t\ttypeof props.selected === 'undefined'\n\t\t\t\t\t) {\n\t\t\t\t\t\ts = `${s} selected`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ts = s + ` ${name}=\"${encodeEntities(v)}\"`;\n\t\t\t}\n\t\t}\n\t}\n\n\ts = s + '>';\n\n\tif (UNSAFE_NAME.test(nodeName))\n\t\tthrow new Error(`${nodeName} is not a valid HTML tag name in ${s}`);\n\n\tlet isVoid =\n\t\tVOID_ELEMENTS.test(nodeName) ||\n\t\t(opts.voidElements && opts.voidElements.test(nodeName));\n\tlet pieces = '';\n\n\tlet children;\n\tif (html) {\n\t\ts = s + html;\n\t} else if (\n\t\tpropChildren != null &&\n\t\tgetChildren((children = []), propChildren).length\n\t) {\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tlet child = children[i];\n\n\t\t\tif (child != null && child !== false) {\n\t\t\t\tlet childSvgMode =\n\t\t\t\t\t\tnodeName === 'svg'\n\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t: nodeName === 'foreignObject'\n\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t: isSvgMode,\n\t\t\t\t\tret = _renderToString(\n\t\t\t\t\t\tchild,\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\topts,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tchildSvgMode,\n\t\t\t\t\t\tselectValue\n\t\t\t\t\t);\n\n\t\t\t\t// Skip if we received an empty string\n\t\t\t\tif (ret) {\n\t\t\t\t\tpieces = pieces + ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (pieces.length || html) {\n\t\ts = s + pieces;\n\t} else if (opts && opts.xml) {\n\t\treturn s.substring(0, s.length - 1) + ' />';\n\t}\n\n\tif (isVoid && !children && !html) {\n\t\treturn s.replace(/>$/, ' />');\n\t}\n\n\treturn `${s}</${nodeName}>`;\n}\n\n/** The default export is an alias of `render()`. */\nfunction _renderToStringPretty(\n\tvnode,\n\tcontext,\n\topts,\n\tinner,\n\tisSvgMode,\n\tselectValue\n) {\n\tif (vnode == null || typeof vnode === 'boolean') {\n\t\treturn '';\n\t}\n\n\t// #text nodes\n\tif (typeof vnode !== 'object') {\n\t\treturn encodeEntities(vnode);\n\t}\n\n\tlet pretty = opts.pretty,\n\t\tindentChar = pretty && typeof pretty === 'string' ? pretty : '\\t';\n\n\tif (Array.isArray(vnode)) {\n\t\tlet rendered = '';\n\t\tfor (let i = 0; i < vnode.length; i++) {\n\t\t\tif (pretty && i > 0) rendered = rendered + '\\n';\n\t\t\trendered =\n\t\t\t\trendered +\n\t\t\t\t_renderToStringPretty(\n\t\t\t\t\tvnode[i],\n\t\t\t\t\tcontext,\n\t\t\t\t\topts,\n\t\t\t\t\tinner,\n\t\t\t\t\tisSvgMode,\n\t\t\t\t\tselectValue\n\t\t\t\t);\n\t\t}\n\t\treturn rendered;\n\t}\n\n\tlet nodeName = vnode.type,\n\t\tprops = vnode.props,\n\t\tisComponent = false;\n\n\t// components\n\tif (typeof nodeName === 'function') {\n\t\tisComponent = true;\n\t\tif (opts.shallow && (inner || opts.renderRootComponent === false)) {\n\t\t\tnodeName = getComponentName(nodeName);\n\t\t} else if (nodeName === Fragment) {\n\t\t\tconst children = [];\n\t\t\tgetChildren(children, vnode.props.children);\n\t\t\treturn _renderToStringPretty(\n\t\t\t\tchildren,\n\t\t\t\tcontext,\n\t\t\t\topts,\n\t\t\t\topts.shallowHighOrder !== false,\n\t\t\t\tisSvgMode,\n\t\t\t\tselectValue\n\t\t\t);\n\t\t} else {\n\t\t\tlet rendered;\n\n\t\t\tlet c = (vnode.__c = createComponent(vnode, context));\n\n\t\t\t// options._diff\n\t\t\tif (options.__b) options.__b(vnode);\n\n\t\t\t// options._render\n\t\t\tlet renderHook = options.__r;\n\n\t\t\tif (\n\t\t\t\t!nodeName.prototype ||\n\t\t\t\ttypeof nodeName.prototype.render !== 'function'\n\t\t\t) {\n\t\t\t\tlet cctx = getContext(nodeName, context);\n\n\t\t\t\t// If a hook invokes setState() to invalidate the component during rendering,\n\t\t\t\t// re-render it up to 25 times to allow \"settling\" of memoized states.\n\t\t\t\t// Note:\n\t\t\t\t//   This will need to be updated for Preact 11 to use internal.flags rather than component._dirty:\n\t\t\t\t//   https://github.com/preactjs/preact/blob/d4ca6fdb19bc715e49fd144e69f7296b2f4daa40/src/diff/component.js#L35-L44\n\t\t\t\tlet count = 0;\n\t\t\t\twhile (c.__d && count++ < 25) {\n\t\t\t\t\tc.__d = false;\n\n\t\t\t\t\tif (renderHook) renderHook(vnode);\n\n\t\t\t\t\t// stateless functional components\n\t\t\t\t\trendered = nodeName.call(vnode.__c, props, cctx);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet cctx = getContext(nodeName, context);\n\n\t\t\t\t// c = new nodeName(props, context);\n\t\t\t\tc = vnode.__c = new nodeName(props, cctx);\n\t\t\t\tc.__v = vnode;\n\t\t\t\t// turn off stateful re-rendering:\n\t\t\t\tc._dirty = c.__d = true;\n\t\t\t\tc.props = props;\n\t\t\t\tif (c.state == null) c.state = {};\n\n\t\t\t\tif (c._nextState == null && c.__s == null) {\n\t\t\t\t\tc._nextState = c.__s = c.state;\n\t\t\t\t}\n\n\t\t\t\tc.context = cctx;\n\t\t\t\tif (nodeName.getDerivedStateFromProps)\n\t\t\t\t\tc.state = Object.assign(\n\t\t\t\t\t\t{},\n\t\t\t\t\t\tc.state,\n\t\t\t\t\t\tnodeName.getDerivedStateFromProps(c.props, c.state)\n\t\t\t\t\t);\n\t\t\t\telse if (c.componentWillMount) {\n\t\t\t\t\tc.componentWillMount();\n\n\t\t\t\t\t// If the user called setState in cWM we need to flush pending,\n\t\t\t\t\t// state updates. This is the same behaviour in React.\n\t\t\t\t\tc.state =\n\t\t\t\t\t\tc._nextState !== c.state\n\t\t\t\t\t\t\t? c._nextState\n\t\t\t\t\t\t\t: c.__s !== c.state\n\t\t\t\t\t\t\t? c.__s\n\t\t\t\t\t\t\t: c.state;\n\t\t\t\t}\n\n\t\t\t\tif (renderHook) renderHook(vnode);\n\n\t\t\t\trendered = c.render(c.props, c.state, c.context);\n\t\t\t}\n\n\t\t\tif (c.getChildContext) {\n\t\t\t\tcontext = Object.assign({}, context, c.getChildContext());\n\t\t\t}\n\n\t\t\tif (options.diffed) options.diffed(vnode);\n\t\t\treturn _renderToStringPretty(\n\t\t\t\trendered,\n\t\t\t\tcontext,\n\t\t\t\topts,\n\t\t\t\topts.shallowHighOrder !== false,\n\t\t\t\tisSvgMode,\n\t\t\t\tselectValue\n\t\t\t);\n\t\t}\n\t}\n\n\t// render JSX to HTML\n\tlet s = '<' + nodeName,\n\t\tpropChildren,\n\t\thtml;\n\n\tif (props) {\n\t\tlet attrs = Object.keys(props);\n\n\t\t// allow sorting lexicographically for more determinism (useful for tests, such as via preact-jsx-chai)\n\t\tif (opts && opts.sortAttributes === true) attrs.sort();\n\n\t\tfor (let i = 0; i < attrs.length; i++) {\n\t\t\tlet name = attrs[i],\n\t\t\t\tv = props[name];\n\t\t\tif (name === 'children') {\n\t\t\t\tpropChildren = v;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (UNSAFE_NAME.test(name)) continue;\n\n\t\t\tif (\n\t\t\t\t!(opts && opts.allAttributes) &&\n\t\t\t\t(name === 'key' ||\n\t\t\t\t\tname === 'ref' ||\n\t\t\t\t\tname === '__self' ||\n\t\t\t\t\tname === '__source')\n\t\t\t)\n\t\t\t\tcontinue;\n\n\t\t\tif (name === 'defaultValue') {\n\t\t\t\tname = 'value';\n\t\t\t} else if (name === 'defaultChecked') {\n\t\t\t\tname = 'checked';\n\t\t\t} else if (name === 'defaultSelected') {\n\t\t\t\tname = 'selected';\n\t\t\t} else if (name === 'className') {\n\t\t\t\tif (typeof props.class !== 'undefined') continue;\n\t\t\t\tname = 'class';\n\t\t\t} else if (isSvgMode && XLINK.test(name)) {\n\t\t\t\tname = name.toLowerCase().replace(/^xlink:?/, 'xlink:');\n\t\t\t}\n\n\t\t\tif (name === 'htmlFor') {\n\t\t\t\tif (props.for) continue;\n\t\t\t\tname = 'for';\n\t\t\t}\n\n\t\t\tif (name === 'style' && v && typeof v === 'object') {\n\t\t\t\tv = styleObjToCss(v);\n\t\t\t}\n\n\t\t\t// always use string values instead of booleans for aria attributes\n\t\t\t// also see https://github.com/preactjs/preact/pull/2347/files\n\t\t\tif (name[0] === 'a' && name['1'] === 'r' && typeof v === 'boolean') {\n\t\t\t\tv = String(v);\n\t\t\t}\n\n\t\t\tlet hooked =\n\t\t\t\topts.attributeHook &&\n\t\t\t\topts.attributeHook(name, v, context, opts, isComponent);\n\t\t\tif (hooked || hooked === '') {\n\t\t\t\ts = s + hooked;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (name === 'dangerouslySetInnerHTML') {\n\t\t\t\thtml = v && v.__html;\n\t\t\t} else if (nodeName === 'textarea' && name === 'value') {\n\t\t\t\t// <textarea value=\"a&b\"> --> <textarea>a&amp;b</textarea>\n\t\t\t\tpropChildren = v;\n\t\t\t} else if ((v || v === 0 || v === '') && typeof v !== 'function') {\n\t\t\t\tif (v === true || v === '') {\n\t\t\t\t\tv = name;\n\t\t\t\t\t// in non-xml mode, allow boolean attributes\n\t\t\t\t\tif (!opts || !opts.xml) {\n\t\t\t\t\t\ts = s + ' ' + name;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (name === 'value') {\n\t\t\t\t\tif (nodeName === 'select') {\n\t\t\t\t\t\tselectValue = v;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t// If we're looking at an <option> and it's the currently selected one\n\t\t\t\t\t\tnodeName === 'option' &&\n\t\t\t\t\t\tselectValue == v &&\n\t\t\t\t\t\t// and the <option> doesn't already have a selected attribute on it\n\t\t\t\t\t\ttypeof props.selected === 'undefined'\n\t\t\t\t\t) {\n\t\t\t\t\t\ts = s + ` selected`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ts = s + ` ${name}=\"${encodeEntities(v)}\"`;\n\t\t\t}\n\t\t}\n\t}\n\n\t// account for >1 multiline attribute\n\tif (pretty) {\n\t\tlet sub = s.replace(/\\n\\s*/, ' ');\n\t\tif (sub !== s && !~sub.indexOf('\\n')) s = sub;\n\t\telse if (pretty && ~s.indexOf('\\n')) s = s + '\\n';\n\t}\n\n\ts = s + '>';\n\n\tif (UNSAFE_NAME.test(nodeName))\n\t\tthrow new Error(`${nodeName} is not a valid HTML tag name in ${s}`);\n\n\tlet isVoid =\n\t\tVOID_ELEMENTS.test(nodeName) ||\n\t\t(opts.voidElements && opts.voidElements.test(nodeName));\n\tlet pieces = [];\n\n\tlet children;\n\tif (html) {\n\t\t// if multiline, indent.\n\t\tif (pretty && isLargeString(html)) {\n\t\t\thtml = '\\n' + indentChar + indent(html, indentChar);\n\t\t}\n\t\ts = s + html;\n\t} else if (\n\t\tpropChildren != null &&\n\t\tgetChildren((children = []), propChildren).length\n\t) {\n\t\tlet hasLarge = pretty && ~s.indexOf('\\n');\n\t\tlet lastWasText = false;\n\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tlet child = children[i];\n\n\t\t\tif (child != null && child !== false) {\n\t\t\t\tlet childSvgMode =\n\t\t\t\t\t\tnodeName === 'svg'\n\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t: nodeName === 'foreignObject'\n\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t: isSvgMode,\n\t\t\t\t\tret = _renderToStringPretty(\n\t\t\t\t\t\tchild,\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\topts,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tchildSvgMode,\n\t\t\t\t\t\tselectValue\n\t\t\t\t\t);\n\n\t\t\t\tif (pretty && !hasLarge && isLargeString(ret)) hasLarge = true;\n\n\t\t\t\t// Skip if we received an empty string\n\t\t\t\tif (ret) {\n\t\t\t\t\tif (pretty) {\n\t\t\t\t\t\tlet isText = ret.length > 0 && ret[0] != '<';\n\n\t\t\t\t\t\t// We merge adjacent text nodes, otherwise each piece would be printed\n\t\t\t\t\t\t// on a new line.\n\t\t\t\t\t\tif (lastWasText && isText) {\n\t\t\t\t\t\t\tpieces[pieces.length - 1] += ret;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpieces.push(ret);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlastWasText = isText;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpieces.push(ret);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (pretty && hasLarge) {\n\t\t\tfor (let i = pieces.length; i--; ) {\n\t\t\t\tpieces[i] = '\\n' + indentChar + indent(pieces[i], indentChar);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (pieces.length || html) {\n\t\ts = s + pieces.join('');\n\t} else if (opts && opts.xml) {\n\t\treturn s.substring(0, s.length - 1) + ' />';\n\t}\n\n\tif (isVoid && !children && !html) {\n\t\ts = s.replace(/>$/, ' />');\n\t} else {\n\t\tif (pretty && ~s.indexOf('\\n')) s = s + '\\n';\n\t\ts = s + `</${nodeName}>`;\n\t}\n\n\treturn s;\n}\n\nfunction getComponentName(component) {\n\treturn (\n\t\tcomponent.displayName ||\n\t\t(component !== Function && component.name) ||\n\t\tgetFallbackComponentName(component)\n\t);\n}\n\nfunction getFallbackComponentName(component) {\n\tlet str = Function.prototype.toString.call(component),\n\t\tname = (str.match(/^\\s*function\\s+([^( ]+)/) || '')[1];\n\tif (!name) {\n\t\t// search for an existing indexed name for the given component:\n\t\tlet index = -1;\n\t\tfor (let i = UNNAMED.length; i--; ) {\n\t\t\tif (UNNAMED[i] === component) {\n\t\t\t\tindex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// not found, create a new indexed name:\n\t\tif (index < 0) {\n\t\t\tindex = UNNAMED.push(component) - 1;\n\t\t}\n\t\tname = `UnnamedComponent${index}`;\n\t}\n\treturn name;\n}\nrenderToString.shallowRender = shallowRender;\n\nexport default renderToString;\n\nexport {\n\trenderToString as render,\n\trenderToString as renderToStaticMarkup,\n\trenderToString,\n\tshallowRender\n};\n", "import { options, Fragment } from 'preact';\n\n/** @typedef {import('preact').VNode} VNode */\n\nlet vnodeId = 0;\n\n/**\n * @fileoverview\n * This file exports various methods that implement Babel's \"automatic\" JSX runtime API:\n * - jsx(type, props, key)\n * - jsxs(type, props, key)\n * - jsxDEV(type, props, key, __source, __self)\n *\n * The implementation of createVNode here is optimized for performance.\n * Benchmarks: https://esbench.com/bench/5f6b54a0b4632100a7dcd2b3\n */\n\n/**\n * JSX.Element factory used by Babel's {runtime:\"automatic\"} JSX transform\n * @param {VNode['type']} type\n * @param {VNode['props']} props\n * @param {VNode['key']} [key]\n * @param {string} [__self]\n * @param {string} [__source]\n */\nfunction createVNode(type, props, key, __self, __source) {\n\t// We'll want to preserve `ref` in props to get rid of the need for\n\t// forwardRef components in the future, but that should happen via\n\t// a separate PR.\n\tlet normalizedProps = {},\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'ref') {\n\t\t\tref = props[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tconst vnode = {\n\t\ttype,\n\t\tprops: normalizedProps,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: --vnodeId,\n\t\t__source,\n\t\t__self\n\t};\n\n\t// If a Component VNode, check for and apply defaultProps.\n\t// Note: `type` is often a String, and can be `undefined` in development.\n\tif (typeof type === 'function' && (ref = type.defaultProps)) {\n\t\tfor (i in ref)\n\t\t\tif (typeof normalizedProps[i] === 'undefined') {\n\t\t\t\tnormalizedProps[i] = ref[i];\n\t\t\t}\n\t}\n\n\tif (options.vnode) options.vnode(vnode);\n\treturn vnode;\n}\n\nexport {\n\tcreateVNode as jsx,\n\tcreateVNode as jsxs,\n\tcreateVNode as jsxDEV,\n\tFragment\n};\n", "import * as Preact from \"preact\";\n\nimport { Fragment, options } from \"preact\";\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = (vnode) => {\n  if (vnode.type === Fragment) {\n    // Skip so we don't have to ensure wrapping fragments in RTS and prepass\n    vnode._mask = \"\";\n  } else if (typeof vnode.type === \"function\" && !vnode._mask) {\n    const parentMask = vnode._parent && vnode._parent._mask\n      ? vnode._parent._mask\n      : \"\";\n    const position = vnode._parent && vnode._parent._children\n      ? vnode._parent._children.indexOf(vnode)\n      : 0;\n    vnode._mask = parentMask + position;\n  } else if (!vnode._mask) {\n    vnode._mask = vnode._parent._mask;\n  }\n  currentComponent = null;\n  if (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\nfunction hash(str) {\n  let i = 0,\n    out = 11;\n  while (i < str.length) out = (101 * out + str.charCodeAt(i++)) >>> 0;\n  return out;\n}\n\nfunction getHookState(index, type) {\n  if (options._hook) {\n    options._hook(currentComponent, index, currentHook || type);\n  }\n  currentHook = 0;\n\n  // Largely inspired by:\n  // * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n  // * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n  // Other implementations to look at:\n  // * https://codesandbox.io/s/mnox05qp8\n  const hooks = currentComponent.__hooks ||\n    (currentComponent.__hooks = {\n      _list: [],\n      _pendingEffects: [],\n    });\n\n  if (index >= hooks._list.length) {\n    hooks._list.push({ _pendingValue: EMPTY });\n  }\n  return hooks._list[index];\n}\n\nexport function useId() {\n  const state = getHookState(currentIndex++, 11);\n  if (!state._value) {\n    state._value = \"P\" + hash(currentComponent._vnode._mask + currentIndex);\n  }\n\n  return state._value;\n}\n\nexport { Fragment };\n\n// import { createContext  } from \"preact/compat\"\n\nimport { createPortal, findDOMNode, SuspenseList } from \"preact/compat\";\n\nimport PreactCompat from \"preact/compat\";\n\nconst React = window.React = window.React ||\n  { ...Preact, ...PreactCompat, createPortal, SuspenseList, findDOMNode };\n\nexport const { createContext } = React;\n\nimport { renderToString } from \"preact-render-to-string\";\n\nimport { JSX, jsx, jsxDEV, jsxs } from \"preact/jsx-runtime\";\n\n// window.PreactJSX = window.PreactJSX || { jsx: j, jsxDEV: jd, jsxs: js };\n// window.renderToString = window.renderToString || renderToStr;\n\nexport { jsx, jsxDEV, jsxs };\n\nexport const { hydrate, render, unmountComponentAtNode } = React;\n// @ts-ignore\nexport { renderToString };\n\n// export const { toChildArray } = PreactCompat;\nexport default React;\n\nexport { createPortal, findDOMNode, SuspenseList };\n\nexport const {\n  createElement,\n  cloneElement,\n  createFactory,\n  useInsertionEffect,\n  unstable_batchedUpdates,\n  createRef,\n  useCallback,\n  useContext,\n  useDebugValue,\n  isValidElement,\n  useEffect,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  lazy,\n  Suspense,\n  StrictMode,\n  forwardRef,\n  memo,\n  Children,\n  PureComponent,\n  Component,\n  version,\n} = React;\n\nexport const flushSync = (callback: (arg: boolean) => void, arg: boolean) =>\n  callback(arg);\n\nexport function createRoot(container: HTMLDivElement) {\n  return {\n    render(children: preact.VNode<any>) {\n      render(children, container);\n    },\n    unmount() {\n      unmountComponentAtNode(container);\n    },\n  };\n}\n\nexport function hydrateRoot(\n  container: HTMLDivElement,\n  children: preact.VNode<any>,\n) {\n  hydrate(children, container);\n  return createRoot(container);\n}\n"],
  "mappings": "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",
  "names": ["assign", "obj", "props", "i", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "slice", "call", "defaultProps", "createVNode", "original", "vnode", "undefined", "constructor", "vnodeId", "options", "createRef", "current", "Fragment", "Component", "context", "getDomSibling", "childIndex", "indexOf", "sibling", "updateParentDomPointers", "child", "base", "enqueueRender", "c", "rerenderQueue", "push", "process", "prevDebounce", "debounceRendering", "setTimeout", "queue", "sort", "a", "b", "some", "component", "commitQueue", "oldVNode", "oldDom", "parentDom", "diff", "ownerSVGElement", "commitRoot", "diffChildren", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "isSvg", "excessDomChildren", "isHydrating", "j", "childVNode", "newDom", "firstChildDom", "refs", "oldChildren", "EMPTY_ARR", "oldChildrenLength", "Array", "isArray", "EMPTY_OBJ", "reorderChildren", "placeChild", "unmount", "applyRef", "tmp", "toChildArray", "out", "nextDom", "sibDom", "outer", "appendChild", "nextSibling", "insertBefore", "diffProps", "dom", "newProps", "oldProps", "hydrate", "setProperty", "setStyle", "style", "value", "IS_NON_DIMENSIONAL", "test", "name", "oldValue", "useCapture", "o", "cssText", "replace", "toLowerCase", "_listeners", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "setAttribute", "removeAttribute", "event", "newVNode", "isNew", "oldState", "snapshot", "clearProcessingException", "provider", "componentContext", "renderHook", "count", "newType", "contextType", "prototype", "render", "doRender", "sub", "state", "getDerivedStateFromProps", "componentWillMount", "componentDidMount", "componentWillReceiveProps", "shouldComponentUpdate", "forEach", "componentWillUpdate", "componentDidUpdate", "getChildContext", "getSnapshotBeforeUpdate", "diffElementNodes", "diffed", "root", "cb", "oldHtml", "newHtml", "nodeType", "localName", "document", "createTextNode", "createElementNS", "is", "data", "childNodes", "dangerouslySetInnerHTML", "attributes", "innerHTML", "checked", "parentVNode", "skipRemove", "r", "componentWillUnmount", "this", "replaceNode", "firstChild", "cloneElement", "createContext", "defaultValue", "contextId", "Consumer", "contextValue", "Provider", "subs", "ctx", "_props", "old", "splice", "isValidElement", "error", "errorInfo", "ctor", "handled", "getDerivedStateFromError", "setState", "componentDidCatch", "update", "callback", "s", "forceUpdate", "getHookState", "index", "type", "options", "currentComponent", "currentHook", "hooks", "length", "push", "EMPTY", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "currentIndex", "_reducer", "action", "currentValue", "nextValue", "setState", "_hasScuFromHooks", "prevScu", "shouldComponentUpdate", "p", "s", "c", "stateHooks", "filter", "x", "every", "call", "this", "shouldUpdate", "forEach", "hookItem", "useEffect", "callback", "args", "state", "argsChanged", "_pendingArgs", "useLayoutEffect", "useRef", "initialValue", "useMemo", "current", "useImperativeHandle", "ref", "createHandle", "concat", "factory", "useCallback", "useContext", "context", "provider", "sub", "props", "value", "useDebugValue", "formatter", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "invokeCleanup", "invokeEffect", "e", "hook", "comp", "cleanup", "oldArgs", "newArgs", "some", "arg", "f", "previousComponent", "prevRaf", "oldBeforeDiff", "oldBeforeRender", "oldAfterDiff", "oldCommit", "oldBeforeUnmount", "HAS_RAF", "diffed", "unmount", "vnode", "undefined", "requestAnimationFrame", "raf", "done", "clearTimeout", "timeout", "cancelAnimationFrame", "setTimeout", "commitQueue", "cb", "hasErrored", "assign", "obj", "props", "i", "shallowDiffers", "a", "b", "PureComponent", "p", "memo", "c", "comparer", "shouldUpdate", "nextProps", "ref", "this", "updateRef", "call", "current", "Memoed", "shouldComponentUpdate", "createElement", "displayName", "name", "prototype", "isReactComponent", "forwardRef", "fn", "Forwarded", "clone", "$$typeof", "REACT_FORWARD_SYMBOL", "render", "Suspense", "_suspenders", "suspended", "vnode", "component", "lazy", "loader", "prom", "error", "Lazy", "then", "exports", "default", "e", "SuspenseList", "_next", "_map", "ContextProvider", "getChildContext", "context", "children", "Portal", "_this", "container", "_container", "componentWillUnmount", "_temp", "nodeType", "parentNode", "childNodes", "appendChild", "child", "push", "insertBefore", "before", "removeChild", "splice", "indexOf", "createPortal", "el", "containerInfo", "parent", "callback", "textContent", "preactRender", "hydrate", "preactHydrate", "empty", "isPropagationStopped", "cancelBubble", "isDefaultPrevented", "defaultPrevented", "createFactory", "type", "bind", "isValidElement", "element", "REACT_ELEMENT_TYPE", "cloneElement", "preactCloneElement", "apply", "arguments", "unmountComponentAtNode", "findDOMNode", "base", "startTransition", "cb", "useDeferredValue", "val", "useTransition", "useSyncExternalStore", "subscribe", "getSnapshot", "value", "useState", "_instance", "_getSnapshot", "forceUpdate", "useLayoutEffect", "useEffect", "oldDiffHook", "mapFn", "Children", "oldCatchError", "oldUnmount", "resolve", "CAMEL_PROPS", "IS_DOM", "onChangeInputType", "oldEventHook", "currentComponent", "classNameDescriptor", "oldVNodeHook", "oldBeforeRender", "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", "unstable_batchedUpdates", "flushSync", "Component", "isPureReactComponent", "state", "options", "Symbol", "for", "toChildArray", "map", "forEach", "count", "length", "only", "normalized", "toArray", "newVNode", "oldVNode", "errorInfo", "unmount", "promise", "suspendingVNode", "suspendingComponent", "resolved", "onResolved", "onSuspensionComplete", "suspendedVNode", "removeOriginal", "detachedParent", "originalParent", "setState", "pop", "wasHydrating", "document", "detachedComponent", "detachedClone", "parentDom", "effect", "fallback", "Fragment", "list", "node", "delete", "revealOrder", "size", "delegated", "get", "unsuspend", "wrappedUnsuspend", "Map", "reverse", "set", "componentDidUpdate", "componentDidMount", "n", "test", "key", "Object", "defineProperty", "configurable", "v", "writable", "event", "persist", "nativeEvent", "class", "normalizedProps", "nonCustomElement", "toLowerCase", "replace", "multiple", "Array", "isArray", "selected", "defaultValue", "className", "enumerable", "ReactCurrentDispatcher", "readContext", "arg", "useReducer", "useInsertionEffect", "useRef", "useImperativeHandle", "useMemo", "useCallback", "useContext", "useDebugValue", "version", "createContext", "createRef", "StrictMode", "encodeEntities", "str", "ENCODED_ENTITIES", "test", "last", "i", "out", "ch", "length", "charCodeAt", "slice", "styleObjToCss", "s", "prop", "val", "JS_TO_CSS", "replace", "toLowerCase", "IS_NON_DIMENSIONAL", "undefined", "getChildren", "accumulator", "children", "Array", "isArray", "reduce", "push", "markAsDirty", "this", "__d", "renderToString", "vnode", "context", "opts", "res", "previousSkipEffects", "options", "__s", "pretty", "sortAttributes", "_renderToStringPretty", "_renderToString", "__c", "EMPTY_ARR", "createComponent", "__v", "props", "setState", "forceUpdate", "__h", "getContext", "nodeName", "cxType", "contextType", "provider", "value", "__", "inner", "isSvgMode", "selectValue", "rendered", "join", "type", "isComponent", "shallow", "renderRootComponent", "Fragment", "shallowHighOrder", "c", "__b", "renderHook", "__r", "prototype", "render", "cctx", "_dirty", "state", "_nextState", "getDerivedStateFromProps", "Object", "assign", "componentWillMount", "count", "call", "getChildContext", "diffed", "getComponentName", "propChildren", "html", "name", "v", "UNSAFE_NAME", "allAttributes", "XLINK", "String", "hooked", "attributeHook", "__html", "xml", "selected", "Error", "isVoid", "VOID_ELEMENTS", "voidElements", "pieces", "child", "ret", "substring", "indentChar", "attrs", "keys", "sort", "sub", "indexOf", "isLargeString", "indent", "hasLarge", "lastWasText", "isText", "component", "displayName", "Function", "toString", "match", "index", "UNNAMED", "SHALLOW", "shallowRender", "char", "ignoreLines", "createVNode", "type", "props", "key", "__self", "__source", "ref", "i", "normalizedProps", "vnode", "undefined", "constructor", "vnodeId", "defaultProps", "options", "e", "y", "i"]
}
