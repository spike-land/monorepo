{
  "version": 3,
  "sources": ["../../../.yarn/global/cache/@emotion-memoize-npm-0.7.4-5648cf11b8-9.zip/node_modules/@emotion/memoize/dist/memoize.browser.cjs.js", "../../../.yarn/global/cache/@emotion-is-prop-valid-npm-0.8.8-261a0f2426-9.zip/node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.cjs.js", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/context/MotionContext/index.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/context/PresenceContext.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/is-browser.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/use-reduced-motion.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/motion/index.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/motion/features/use-features.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/process.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/motion/features/definitions.mjs", "../../../.yarn/global/cache/hey-listen-npm-1.0.8-adb7dae9da-9.zip/node_modules/hey-listen/dist/hey-listen.es.js", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/context/LazyContext.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/is-ref-object.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/context/MotionContext/create.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/utils/variants.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/node/id.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/use-constant.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/node/state.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/motion/features/use-projection.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/resolve-value.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/utils/types.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/events/use-dom-event.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/events/event-info.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/events/use-pointer-event.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/events/utils.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/value/index.mjs", "../../../.yarn/global/cache/framesync-npm-6.1.2-3eeffdf40f-9.zip/node_modules/framesync/dist/es/index.mjs", "../../../.yarn/global/cache/framesync-npm-6.1.2-3eeffdf40f-9.zip/node_modules/framesync/dist/es/on-next-frame.mjs", "../../../.yarn/global/cache/framesync-npm-6.1.2-3eeffdf40f-9.zip/node_modules/framesync/dist/es/create-render-step.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/index.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/animations/index.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/animations/utils/detect-animation-from-options.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/animations/generators/spring.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/animations/utils/find-spring.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/clamp.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/animations/generators/keyframes.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/interpolate.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/progress.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/mix.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/mix-color.mjs", "../../../.yarn/global/cache/style-value-types-npm-5.1.2-f9d7bb50ee-9.zip/node_modules/style-value-types/dist/es/index.mjs", "../../../.yarn/global/cache/style-value-types-npm-5.1.2-f9d7bb50ee-9.zip/node_modules/style-value-types/dist/es/numbers/index.mjs", "../../../.yarn/global/cache/style-value-types-npm-5.1.2-f9d7bb50ee-9.zip/node_modules/style-value-types/dist/es/utils.mjs", "../../../.yarn/global/cache/style-value-types-npm-5.1.2-f9d7bb50ee-9.zip/node_modules/style-value-types/dist/es/numbers/units.mjs", "../../../.yarn/global/cache/style-value-types-npm-5.1.2-f9d7bb50ee-9.zip/node_modules/style-value-types/dist/es/color/hsla.mjs", "../../../.yarn/global/cache/style-value-types-npm-5.1.2-f9d7bb50ee-9.zip/node_modules/style-value-types/dist/es/color/utils.mjs", "../../../.yarn/global/cache/style-value-types-npm-5.1.2-f9d7bb50ee-9.zip/node_modules/style-value-types/dist/es/color/rgba.mjs", "../../../.yarn/global/cache/style-value-types-npm-5.1.2-f9d7bb50ee-9.zip/node_modules/style-value-types/dist/es/color/hex.mjs", "../../../.yarn/global/cache/style-value-types-npm-5.1.2-f9d7bb50ee-9.zip/node_modules/style-value-types/dist/es/color/index.mjs", "../../../.yarn/global/cache/style-value-types-npm-5.1.2-f9d7bb50ee-9.zip/node_modules/style-value-types/dist/es/complex/index.mjs", "../../../.yarn/global/cache/style-value-types-npm-5.1.2-f9d7bb50ee-9.zip/node_modules/style-value-types/dist/es/complex/filter.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/hsla-to-rgba.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/mix-complex.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/inc.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/pipe.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/easing/index.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/easing/utils.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/animations/generators/decay.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/animations/utils/elapsed.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/animations/inertia.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/velocity-per-second.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/angle.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/radians-to-degrees.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/apply-offset.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/attract.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/degrees-to-radians.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/distance.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/is-point.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/is-point-3d.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/point-from-vector.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/smooth-frame.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/to-decimal.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/smooth.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/snap.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/velocity-per-frame.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/utils/wrap.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/easing/cubic-bezier.mjs", "../../../.yarn/global/cache/popmotion-npm-11.0.5-3c551ada08-9.zip/node_modules/popmotion/dist/es/easing/steps.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/subscription-manager.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/array.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/utils/setters.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/utils/animation.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/animation/utils/transitions.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/time-conversion.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/animation/utils/easing.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/html/utils/transform.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/value/use-will-change/is.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/motion/features/animations.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/utils/animation-state.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/shallow-compare.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/geometry/models.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/index.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/utils/lifecycles.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/utils/motion-values.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/warn-once.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/animation/animate.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/motion.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/use-render.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/html/use-props.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/svg/use-props.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/svg/utils/path.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/svg/config-motion.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/svg/utils/render.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/html/utils/render.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/html/config-motion.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/motion/features/gestures.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/motion/features/drag.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/gestures/PanSession.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/utils/measure.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/html/visual-element.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/svg/visual-element.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/motion/features/layout/index.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/geometry/copy.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/geometry/utils.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/shared/stack.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/styles/transform.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/motion-minimal.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/use-force-update.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/context/DeprecatedLayoutGroupContext.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/components/LayoutGroup/index.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/node/group.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/components/AnimateSharedLayout.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/components/MotionConfig/index.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/components/LazyMotion/index.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/value/use-motion-value.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/transform.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/value/use-transform.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/value/use-combine-values.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/value/use-on-change.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/components/Reorder/index.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/components/Reorder/Group.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/context/ReorderContext.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/components/Reorder/utils/check-reorder.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/components/Reorder/Item.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/features-animation.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/render/dom/features-max.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/value/use-motion-template.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/value/use-spring.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/value/use-velocity.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/value/use-scroll.mjs", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/index.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/animate/index.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/animate/animate-style.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/animate/data.es.js", "../../../.yarn/global/cache/@motionone-types-npm-10.14.0-209a936e66-9.zip/node_modules/@motionone/types/dist/index.es.js", "../../../.yarn/global/cache/@motionone-types-npm-10.14.0-209a936e66-9.zip/node_modules/@motionone/types/dist/MotionValue.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/animate/utils/css-var.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/animate/utils/transforms.es.js", "../../../.yarn/global/cache/@motionone-utils-npm-10.14.0-0281934633-9.zip/node_modules/@motionone/utils/dist/index.es.js", "../../../.yarn/global/cache/@motionone-utils-npm-10.14.0-0281934633-9.zip/node_modules/@motionone/utils/dist/array.es.js", "../../../.yarn/global/cache/@motionone-utils-npm-10.14.0-0281934633-9.zip/node_modules/@motionone/utils/dist/clamp.es.js", "../../../.yarn/global/cache/@motionone-utils-npm-10.14.0-0281934633-9.zip/node_modules/@motionone/utils/dist/defaults.es.js", "../../../.yarn/global/cache/@motionone-utils-npm-10.14.0-0281934633-9.zip/node_modules/@motionone/utils/dist/easing.es.js", "../../../.yarn/global/cache/@motionone-utils-npm-10.14.0-0281934633-9.zip/node_modules/@motionone/utils/dist/is-easing-list.es.js", "../../../.yarn/global/cache/@motionone-utils-npm-10.14.0-0281934633-9.zip/node_modules/@motionone/utils/dist/is-number.es.js", "../../../.yarn/global/cache/@motionone-utils-npm-10.14.0-0281934633-9.zip/node_modules/@motionone/utils/dist/wrap.es.js", "../../../.yarn/global/cache/@motionone-utils-npm-10.14.0-0281934633-9.zip/node_modules/@motionone/utils/dist/interpolate.es.js", "../../../.yarn/global/cache/@motionone-utils-npm-10.14.0-0281934633-9.zip/node_modules/@motionone/utils/dist/mix.es.js", "../../../.yarn/global/cache/@motionone-utils-npm-10.14.0-0281934633-9.zip/node_modules/@motionone/utils/dist/noop.es.js", "../../../.yarn/global/cache/@motionone-utils-npm-10.14.0-0281934633-9.zip/node_modules/@motionone/utils/dist/offset.es.js", "../../../.yarn/global/cache/@motionone-utils-npm-10.14.0-0281934633-9.zip/node_modules/@motionone/utils/dist/progress.es.js", "../../../.yarn/global/cache/@motionone-utils-npm-10.14.0-0281934633-9.zip/node_modules/@motionone/utils/dist/is-cubic-bezier.es.js", "../../../.yarn/global/cache/@motionone-utils-npm-10.14.0-0281934633-9.zip/node_modules/@motionone/utils/dist/is-easing-generator.es.js", "../../../.yarn/global/cache/@motionone-utils-npm-10.14.0-0281934633-9.zip/node_modules/@motionone/utils/dist/is-function.es.js", "../../../.yarn/global/cache/@motionone-utils-npm-10.14.0-0281934633-9.zip/node_modules/@motionone/utils/dist/is-string.es.js", "../../../.yarn/global/cache/@motionone-utils-npm-10.14.0-0281934633-9.zip/node_modules/@motionone/utils/dist/time.es.js", "../../../.yarn/global/cache/@motionone-utils-npm-10.14.0-0281934633-9.zip/node_modules/@motionone/utils/dist/velocity.es.js", "../../../.yarn/global/cache/@motionone-animation-npm-10.14.0-26ae26acd7-9.zip/node_modules/@motionone/animation/dist/index.es.js", "../../../.yarn/global/cache/@motionone-animation-npm-10.14.0-26ae26acd7-9.zip/node_modules/@motionone/animation/dist/Animation.es.js", "../../../.yarn/global/cache/@motionone-animation-npm-10.14.0-26ae26acd7-9.zip/node_modules/@motionone/animation/dist/utils/easing.es.js", "../../../.yarn/global/cache/@motionone-easing-npm-10.14.0-97af278bce-9.zip/node_modules/@motionone/easing/dist/index.es.js", "../../../.yarn/global/cache/@motionone-easing-npm-10.14.0-97af278bce-9.zip/node_modules/@motionone/easing/dist/cubic-bezier.es.js", "../../../.yarn/global/cache/@motionone-easing-npm-10.14.0-97af278bce-9.zip/node_modules/@motionone/easing/dist/steps.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/animate/utils/easing.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/animate/utils/feature-detection.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/animate/utils/keyframes.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/animate/style.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/animate/utils/get-style-name.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/animate/utils/stop-animation.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/animate/utils/options.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/utils/resolve-elements.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/animate/utils/controls.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/utils/stagger.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/timeline/index.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/timeline/utils/calc-time.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/timeline/utils/edit.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/timeline/utils/sort.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/easing/spring/index.es.js", "../../../.yarn/global/cache/@motionone-generators-npm-10.14.0-ffd261b86d-9.zip/node_modules/@motionone/generators/dist/index.es.js", "../../../.yarn/global/cache/@motionone-generators-npm-10.14.0-ffd261b86d-9.zip/node_modules/@motionone/generators/dist/glide/index.es.js", "../../../.yarn/global/cache/@motionone-generators-npm-10.14.0-ffd261b86d-9.zip/node_modules/@motionone/generators/dist/utils/velocity.es.js", "../../../.yarn/global/cache/@motionone-generators-npm-10.14.0-ffd261b86d-9.zip/node_modules/@motionone/generators/dist/spring/index.es.js", "../../../.yarn/global/cache/@motionone-generators-npm-10.14.0-ffd261b86d-9.zip/node_modules/@motionone/generators/dist/spring/defaults.es.js", "../../../.yarn/global/cache/@motionone-generators-npm-10.14.0-ffd261b86d-9.zip/node_modules/@motionone/generators/dist/spring/utils.es.js", "../../../.yarn/global/cache/@motionone-generators-npm-10.14.0-ffd261b86d-9.zip/node_modules/@motionone/generators/dist/utils/has-reached-target.es.js", "../../../.yarn/global/cache/@motionone-generators-npm-10.14.0-ffd261b86d-9.zip/node_modules/@motionone/generators/dist/utils/pregenerate-keyframes.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/easing/create-generator-easing.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/easing/glide/index.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/gestures/in-view.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/gestures/resize/index.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/gestures/resize/handle-element.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/gestures/resize/handle-window.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/gestures/scroll/index.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/gestures/scroll/info.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/gestures/scroll/on-scroll-handler.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/gestures/scroll/offsets/index.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/gestures/scroll/offsets/inset.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/gestures/scroll/offsets/presets.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/gestures/scroll/offsets/offset.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/gestures/scroll/offsets/edge.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/state/index.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/state/utils/has-changed.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/state/utils/resolve-variant.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/state/utils/is-variant.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/state/utils/schedule.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/state/gestures/in-view.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/state/utils/events.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/state/gestures/hover.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/state/gestures/press.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/animate/utils/style-object.es.js", "../../../.yarn/global/cache/@motionone-dom-npm-10.13.1-2b54608f7c-9.zip/node_modules/@motionone/dom/dist/animate/utils/style-string.es.js", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/value/scroll/use-element-scroll.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/value/scroll/use-viewport-scroll.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/use-animation-frame.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/value/use-time.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/value/use-will-change/index.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/animation/animation-controls.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/animation/use-animation.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/use-cycle.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/use-in-view.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/gestures/drag/use-drag-controls.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/use-instant-layout-transition.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/utils/use-instant-transition.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/projection/use-reset-projection.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/animation/use-animated-state.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/value/use-inverted-scale.mjs", "../.yarn/__virtual__/framer-motion-virtual-e14b5156bc/3/.yarn/global/cache/framer-motion-npm-7.2.0-06e61f87ae-9.zip/node_modules/framer-motion/dist/es/index.mjs"],
  "sourcesContent": ["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexports.default = memoize;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar memoize = _interopDefault(require('@emotion/memoize'));\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar index = memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexports.default = index;\n", "import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n", "import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n", "import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n", "const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n", "import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n", "import { useState, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { isBrowser } from './is-browser.mjs';\n\n// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nlet hasDetected = false;\nfunction initPrefersReducedMotion() {\n    hasDetected = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n/**\n * A hook that returns `true` if we should be using reduced motion based on the current device's Reduced Motion setting.\n *\n * This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing\n * `x`/`y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.\n *\n * It will actively respond to changes and re-render your components with the latest setting.\n *\n * ```jsx\n * export function Sidebar({ isOpen }) {\n *   const shouldReduceMotion = useReducedMotion()\n *   const closedX = shouldReduceMotion ? 0 : \"-100%\"\n *\n *   return (\n *     <motion.div animate={{\n *       opacity: isOpen ? 1 : 0,\n *       x: isOpen ? 0 : closedX\n *     }} />\n *   )\n * }\n * ```\n *\n * @return boolean\n *\n * @public\n */\nfunction useReducedMotion() {\n    /**\n     * Lazy initialisation of prefersReducedMotion\n     */\n    !hasDetected && initPrefersReducedMotion();\n    const [shouldReduceMotion] = useState(prefersReducedMotion.current);\n    /**\n     * TODO See if people miss automatically updating shouldReduceMotion setting\n     */\n    return shouldReduceMotion;\n}\nfunction useReducedMotionConfig() {\n    const reducedMotionPreference = useReducedMotion();\n    const { reducedMotion } = useContext(MotionConfigContext);\n    if (reducedMotion === \"never\") {\n        return false;\n    }\n    else if (reducedMotion === \"always\") {\n        return true;\n    }\n    else {\n        return reducedMotionPreference;\n    }\n}\n\nexport { useReducedMotion, useReducedMotionConfig };\n", "import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n", "import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n", "import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { useFeatures } from './features/use-features.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures, featureDefinitions } from './features/definitions.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { useProjection } from './features/use-projection.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const layoutId = useLayoutId(props);\n        props = Object.assign(Object.assign({}, props), { layoutId });\n        /**\n         * If we're rendering in a static environment, we only visually update the component\n         * as a result of a React-rerender rather than interactions or animations. This\n         * means we don't need to load additional memory structures like VisualElement,\n         * or any gesture/animation features.\n         */\n        const config = useContext(MotionConfigContext);\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = config.isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, config.isStatic);\n        if (!config.isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, Object.assign(Object.assign({}, config), props), createVisualElement);\n            useProjection(projectionId, props, context.visualElement, projectionNodeConstructor ||\n                featureDefinitions.projectionNodeConstructor);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            features = useFeatures(props, context.visualElement, preloadedFeatures);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: Object.assign(Object.assign({}, config), props) },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, config.isStatic, context.visualElement))));\n    }\n    return forwardRef(MotionComponent);\n}\nfunction useLayoutId({ layoutId }) {\n    var _a;\n    const layoutGroupId = (_a = useContext(LayoutGroupContext)) === null || _a === void 0 ? void 0 : _a.id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n", "import * as React from 'react';\nimport { useContext } from 'react';\nimport { env } from '../../utils/process.mjs';\nimport { featureDefinitions } from './definitions.mjs';\nimport { invariant } from 'hey-listen';\nimport { LazyContext } from '../../context/LazyContext.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\n/**\n * Load features via renderless components based on the provided MotionProps.\n */\nfunction useFeatures(props, visualElement, preloadedFeatures) {\n    const features = [];\n    const lazyContext = useContext(LazyContext);\n    if (!visualElement)\n        return null;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (env !== \"production\" && preloadedFeatures && lazyContext.strict) {\n        invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n    }\n    for (let i = 0; i < numFeatures; i++) {\n        const name = featureNames[i];\n        const { isEnabled, Component } = featureDefinitions[name];\n        /**\n         * It might be possible in the future to use this moment to\n         * dynamically request functionality. In initial tests this\n         * was producing a lot of duplication amongst bundles.\n         */\n        if (isEnabled(props) && Component) {\n            features.push(React.createElement(Component, Object.assign({ key: name }, props, { visualElement: visualElement })));\n        }\n    }\n    return features;\n}\n\nexport { useFeatures };\n", "/**\n * Browser-safe usage of process\n */\nconst defaultEnvironment = \"production\";\nconst env = typeof process === \"undefined\" || process.env === undefined\n    ? defaultEnvironment\n    : process.env.NODE_ENV || defaultEnvironment;\n\nexport { env };\n", "const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (features[key] === null)\n            continue;\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { featureDefinitions, loadFeatures };\n", "var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n", "import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n", "import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { useReducedMotionConfig } from '../../utils/use-reduced-motion.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const lazyContext = useContext(LazyContext);\n    const parent = useVisualElementContext();\n    const presenceContext = useContext(PresenceContext);\n    const shouldReduceMotion = useReducedMotionConfig();\n    const visualElementRef = useRef(undefined);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    if (!createVisualElement)\n        createVisualElement = lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,\n            blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false,\n            shouldReduceMotion,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender();\n    });\n    useEffect(() => {\n        var _a;\n        (_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement === null || visualElement === void 0 ? void 0 : visualElement.notifyUnmount(), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n", "import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        var _a;\n        instance && ((_a = visualState.mount) === null || _a === void 0 ? void 0 : _a.call(visualState, instance));\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n", "function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n", "import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n", "import { checkIfControllingVariants, isVariantLabel } from '../../render/utils/variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (checkIfControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n", "/**\n * Decides if the supplied variable is an array of variant labels\n */\nfunction isVariantLabels(v) {\n    return Array.isArray(v);\n}\n/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || isVariantLabels(v);\n}\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.forEachValue((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.forEachValue((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    var _a;\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\nfunction checkIfControllingVariants(props) {\n    var _a;\n    return (typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === \"function\" ||\n        isVariantLabel(props.initial) ||\n        isVariantLabel(props.animate) ||\n        isVariantLabel(props.whileHover) ||\n        isVariantLabel(props.whileDrag) ||\n        isVariantLabel(props.whileTap) ||\n        isVariantLabel(props.whileFocus) ||\n        isVariantLabel(props.exit));\n}\nfunction checkIfVariantNode(props) {\n    return Boolean(checkIfControllingVariants(props) || props.variants);\n}\n\nexport { checkIfControllingVariants, checkIfVariantNode, isVariantLabel, isVariantLabels, resolveVariant, resolveVariantFromProps };\n", "import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n", "import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n", "/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n", "import { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useContext } from 'react';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useProjection(projectionId, { layoutId, layout, drag, dragConstraints, layoutScroll }, visualElement, ProjectionNodeConstructor) {\n    var _a;\n    const initialPromotionConfig = useContext(SwitchLayoutGroupContext);\n    if (!ProjectionNodeConstructor ||\n        !visualElement ||\n        (visualElement === null || visualElement === void 0 ? void 0 : visualElement.projection)) {\n        return;\n    }\n    visualElement.projection = new ProjectionNodeConstructor(projectionId, visualElement.getLatestValues(), (_a = visualElement.parent) === null || _a === void 0 ? void 0 : _a.projection);\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        scheduleRender: () => visualElement.scheduleRender(),\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n    });\n}\n\nexport { useProjection };\n", "import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        this.updateProps();\n        return null;\n    }\n    componentDidUpdate() { }\n    updateProps() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n    }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n", "const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n", "const isMotionValue = (value) => {\n    return Boolean(value !== null && typeof value === \"object\" && value.getVelocity);\n};\n\nexport { isMotionValue };\n", "/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"style\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"whileDrag\",\n    \"onPan\",\n    \"onPanStart\",\n    \"onPanEnd\",\n    \"onPanSessionStart\",\n    \"onTap\",\n    \"onTapStart\",\n    \"onTapCancel\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"whileFocus\",\n    \"whileTap\",\n    \"whileHover\",\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n    \"layoutScroll\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n", "import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n", "import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n", "import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n", "const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n", "import { __rest } from 'tslib';\nimport { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { checkIfControllingVariants, checkIfVariantNode, resolveVariantFromProps } from '../../render/utils/variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    return isStatic\n        ? makeState(config, props, context, presenceContext)\n        : useConstant(() => makeState(config, props, context, presenceContext));\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants = checkIfControllingVariants(props);\n    const isVariantNode = checkIfVariantNode(props);\n    if (context &&\n        isVariantNode &&\n        !isControllingVariants &&\n        props.inherit !== false) {\n        initial !== null && initial !== void 0 ? initial : (initial = context.initial);\n        animate !== null && animate !== void 0 ? animate : (animate = context.animate);\n    }\n    const initialAnimationIsBlocked = blockInitialAnimation || initial === false;\n    const variantToSet = initialAnimationIsBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition } = resolved, target = __rest(resolved, [\"transitionEnd\", \"transition\"]);\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = initialAnimationIsBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n", "function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n", "var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n", "import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n", "import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n", "function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n", "import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n", "import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n", "function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n", "import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n", "import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n", "import sync, { getFrameData } from 'framesync';\nimport { velocityPerSecond } from 'popmotion';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.2.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = getFrameData();\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current) {\n                this.updateSubscribers.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.velocityUpdateSubscribers.getSize()) {\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                this.renderSubscribers.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    onChange(subscription) {\n        return this.updateSubscribers.add(subscription);\n    }\n    clearListeners() {\n        this.updateSubscribers.clear();\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    onRenderRequest(subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n        }).then(() => this.clearAnimation());\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    }\n}\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\nexport { MotionValue, motionValue };\n", "import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst frame = {\n    delta: 0,\n    timestamp: 0,\n};\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frame);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frame);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frame.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\nconst getFrameData = () => frame;\n\nexport default sync;\nexport { cancelSync, flushSync, getFrameData };\n", "const defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n", "function createRenderStep(runNextFrame) {\n    let toRun = [];\n    let toRunNextFrame = [];\n    let numToRun = 0;\n    let isProcessing = false;\n    let flushNextFrame = false;\n    const toKeepAlive = new WeakSet();\n    const step = {\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        process: (frameData) => {\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            toRunNextFrame.length = 0;\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n", "export { animate } from './animations/index.mjs';\nexport { inertia } from './animations/inertia.mjs';\nexport { decay } from './animations/generators/decay.mjs';\nexport { spring } from './animations/generators/spring.mjs';\nexport { keyframes } from './animations/generators/keyframes.mjs';\nexport { angle } from './utils/angle.mjs';\nexport { applyOffset } from './utils/apply-offset.mjs';\nexport { attract, attractExpo, createAttractor } from './utils/attract.mjs';\nexport { clamp } from './utils/clamp.mjs';\nexport { degreesToRadians } from './utils/degrees-to-radians.mjs';\nexport { distance } from './utils/distance.mjs';\nexport { interpolate } from './utils/interpolate.mjs';\nexport { isPoint3D } from './utils/is-point-3d.mjs';\nexport { isPoint } from './utils/is-point.mjs';\nexport { mixColor } from './utils/mix-color.mjs';\nexport { mixComplex } from './utils/mix-complex.mjs';\nexport { mix } from './utils/mix.mjs';\nexport { pipe } from './utils/pipe.mjs';\nexport { pointFromVector } from './utils/point-from-vector.mjs';\nexport { progress } from './utils/progress.mjs';\nexport { radiansToDegrees } from './utils/radians-to-degrees.mjs';\nexport { smoothFrame } from './utils/smooth-frame.mjs';\nexport { smooth } from './utils/smooth.mjs';\nexport { snap } from './utils/snap.mjs';\nexport { toDecimal } from './utils/to-decimal.mjs';\nexport { velocityPerFrame } from './utils/velocity-per-frame.mjs';\nexport { velocityPerSecond } from './utils/velocity-per-second.mjs';\nexport { wrap } from './utils/wrap.mjs';\nexport { anticipate, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, easeIn, easeInOut, easeOut, linear } from './easing/index.mjs';\nexport { cubicBezier } from './easing/cubic-bezier.mjs';\nexport { steps } from './easing/steps.mjs';\nexport { createAnticipate, createBackIn, createExpoIn, mirrorEasing, reverseEasing } from './easing/utils.mjs';\n", "import { __rest } from 'tslib';\nimport { detectAnimationFromOptions } from './utils/detect-animation-from-options.mjs';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../utils/interpolate.mjs';\nimport { hasRepeatDelayElapsed, reverseElapsed, loopElapsed } from './utils/elapsed.mjs';\n\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate(_a) {\n    var _b, _c;\n    var { from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate } = _a, options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n    let { to } = options;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = options.duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = detectAnimationFromOptions(options);\n    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    const animation = animator(Object.assign(Object.assign({}, options), { from, to }));\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate };\n", "import { spring } from '../generators/spring.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { decay } from '../generators/decay.mjs';\n\nconst types = { keyframes, spring, decay };\nfunction detectAnimationFromOptions(config) {\n    if (Array.isArray(config.to)) {\n        return keyframes;\n    }\n    else if (types[config.type]) {\n        return types[config.type];\n    }\n    const keys = new Set(Object.keys(config));\n    if (keys.has(\"ease\") ||\n        (keys.has(\"duration\") && !keys.has(\"dampingRatio\"))) {\n        return keyframes;\n    }\n    else if (keys.has(\"dampingRatio\") ||\n        keys.has(\"stiffness\") ||\n        keys.has(\"mass\") ||\n        keys.has(\"damping\") ||\n        keys.has(\"restSpeed\") ||\n        keys.has(\"restDelta\")) {\n        return spring;\n    }\n    return keyframes;\n}\n\nexport { detectAnimationFromOptions };\n", "import { __rest } from 'tslib';\nimport { findSpring, calcAngularFreq } from '../utils/find-spring.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = Object.assign({ velocity: 0.0, stiffness: 100, damping: 10, mass: 1.0, isResolvedFromDuration: false }, options);\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = Object.assign(Object.assign(Object.assign({}, springOptions), derived), { velocity: 0.0, mass: 1.0 });\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring(_a) {\n    var { from = 0.0, to = 1.0, restSpeed = 2, restDelta } = _a, options = __rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n    const state = { done: false, value: from };\n    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let resolveVelocity = zero;\n    function createSpring() {\n        const initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        const initialDelta = to - from;\n        const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(to - from) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n            resolveVelocity = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq +\n                        initialDelta * Math.cos(angularFreq * t)) -\n                    envelope *\n                        (Math.cos(angularFreq * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq *\n                                initialDelta *\n                                Math.sin(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            resolveSpring = (t) => to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                const currentVelocity = resolveVelocity(t) * 1000;\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: () => {\n            velocity = -velocity;\n            [from, to] = [to, from];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n", "import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n", "const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n", "import { interpolate } from '../../utils/interpolate.mjs';\nimport { easeInOut } from '../../easing/index.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ from = 0, to = 1, ease, offset, duration = 300, }) {\n    const state = { done: false, value: from };\n    const values = Array.isArray(to) ? to : [from, to];\n    const times = convertOffsetToTimes(offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n", "import { progress } from './progress.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { color } from 'style-value-types';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { invariant } from 'hey-listen';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === 'number') {\n        return mixNumber;\n    }\n    else if (typeof v === 'string') {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === 'object') {\n        return mixObject;\n    }\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\nfunction fastInterpolate([from, to], [mixer]) {\n    return (v) => mixer(progress(from, to, v));\n}\nfunction slowInterpolate(input, mixers) {\n    const inputLength = input.length;\n    const lastInputIndex = inputLength - 1;\n    return (v) => {\n        let mixerIndex = 0;\n        let foundMixerIndex = false;\n        if (v <= input[0]) {\n            foundMixerIndex = true;\n        }\n        else if (v >= input[lastInputIndex]) {\n            mixerIndex = lastInputIndex - 1;\n            foundMixerIndex = true;\n        }\n        if (!foundMixerIndex) {\n            let i = 1;\n            for (; i < inputLength; i++) {\n                if (input[i] > v || i === lastInputIndex) {\n                    break;\n                }\n            }\n            mixerIndex = i - 1;\n        }\n        const progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n        return mixers[mixerIndex](progressInRange);\n    };\n}\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n    if (input[0] > input[inputLength - 1]) {\n        input = [].concat(input);\n        output = [].concat(output);\n        input.reverse();\n        output.reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const interpolator = inputLength === 2\n        ? fastInterpolate(input, mixers)\n        : slowInterpolate(input, mixers);\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n", "const progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n", "const mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n", "import { mix } from './mix.mjs';\nimport { hsla, rgba, hex } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\n\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const toExpo = to * to;\n    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nconst notAnimatable = (color) => `'${color}' is not an animatable color. Use the equivalent color code instead.`;\nconst mixColor = (from, to) => {\n    let fromColorType = getColorType(from);\n    let toColorType = getColorType(to);\n    invariant(!!fromColorType, notAnimatable(from));\n    invariant(!!toColorType, notAnimatable(to));\n    let fromColor = fromColorType.parse(from);\n    let toColor = toColorType.parse(to);\n    if (fromColorType === hsla) {\n        fromColor = hslaToRgba(fromColor);\n        fromColorType = rgba;\n    }\n    if (toColorType === hsla) {\n        toColor = hslaToRgba(toColor);\n        toColorType = rgba;\n    }\n    const blended = Object.assign({}, fromColor);\n    return (v) => {\n        for (const key in blended) {\n            if (key !== \"alpha\") {\n                blended[key] = mixLinearColor(fromColor[key], toColor[key], v);\n            }\n        }\n        blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n        return fromColorType.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n", "export { alpha, number, scale } from './numbers/index.mjs';\nexport { degrees, percent, progressPercentage, px, vh, vw } from './numbers/units.mjs';\nexport { hsla } from './color/hsla.mjs';\nexport { rgbUnit, rgba } from './color/rgba.mjs';\nexport { hex } from './color/hex.mjs';\nexport { color } from './color/index.mjs';\nexport { complex } from './complex/index.mjs';\nexport { filter } from './complex/filter.mjs';\n", "import { clamp } from '../utils.mjs';\n\nconst number = {\n    test: (v) => typeof v === 'number',\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = Object.assign(Object.assign({}, number), { transform: clamp(0, 1) });\nconst scale = Object.assign(Object.assign({}, number), { default: 1 });\n\nexport { alpha, number, scale };\n", "const clamp = (min, max) => (v) => Math.max(Math.min(v, max), min);\nconst sanitize = (v) => (v % 1 ? Number(v.toFixed(5)) : v);\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === 'string';\n}\n\nexport { clamp, colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n", "import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(' ').length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType('deg');\nconst percent = createUnitType('%');\nconst px = createUnitType('px');\nconst vh = createUnitType('vh');\nconst vw = createUnitType('vw');\nconst progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v) => percent.parse(v) / 100, transform: (v) => percent.transform(v * 100) });\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n", "import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString('hsl', 'hue'),\n    parse: splitColor('hue', 'saturation', 'lightness'),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return ('hsla(' +\n            Math.round(hue) +\n            ', ' +\n            percent.transform(sanitize(saturation)) +\n            ', ' +\n            percent.transform(sanitize(lightness)) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')');\n    },\n};\n\nexport { hsla };\n", "import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n", "import { number, alpha } from '../numbers/index.mjs';\nimport { sanitize, clamp } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = clamp(0, 255);\nconst rgbUnit = Object.assign(Object.assign({}, number), { transform: (v) => Math.round(clampRgbUnit(v)) });\nconst rgba = {\n    test: isColorString('rgb', 'red'),\n    parse: splitColor('red', 'green', 'blue'),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => 'rgba(' +\n        rgbUnit.transform(red) +\n        ', ' +\n        rgbUnit.transform(green) +\n        ', ' +\n        rgbUnit.transform(blue) +\n        ', ' +\n        sanitize(alpha.transform(alpha$1)) +\n        ')',\n};\n\nexport { rgbUnit, rgba };\n", "import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = '';\n    let g = '';\n    let b = '';\n    let a = '';\n    if (v.length > 5) {\n        r = v.substr(1, 2);\n        g = v.substr(3, 2);\n        b = v.substr(5, 2);\n        a = v.substr(7, 2);\n    }\n    else {\n        r = v.substr(1, 1);\n        g = v.substr(2, 1);\n        b = v.substr(3, 1);\n        a = v.substr(4, 1);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString('#'),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n", "import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty('red')\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n", "import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = '${c}';\nconst numberToken = '${n}';\nfunction test(v) {\n    var _a, _b, _c, _d;\n    return (isNaN(v) &&\n        isString(v) &&\n        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);\n}\nfunction analyse(v) {\n    if (typeof v === 'number')\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, tokenised: v };\n}\nfunction parse(v) {\n    return analyse(v).values;\n}\nfunction createTransformer(v) {\n    const { values, numColors, tokenised } = analyse(v);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === 'number' ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { complex };\n", "import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\nconst maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\nfunction applyDefaultFilter(v) {\n    let [name, value] = v.slice(0, -1).split('(');\n    if (name === 'drop-shadow')\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, '');\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + '(' + defaultValue + unit + ')';\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(' ') : v;\n    } });\n\nexport { filter };\n", "function hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n", "import { complex, color } from 'style-value-types';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { isNum } from './inc.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\n\nfunction getMixer(origin, target) {\n    if (isNum(origin)) {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = Object.assign(Object.assign({}, origin), target);\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nfunction analyse(value) {\n    const parsed = complex.parse(value);\n    const numValues = parsed.length;\n    let numNumbers = 0;\n    let numRGB = 0;\n    let numHSL = 0;\n    for (let i = 0; i < numValues; i++) {\n        if (numNumbers || typeof parsed[i] === \"number\") {\n            numNumbers++;\n        }\n        else {\n            if (parsed[i].hue !== undefined) {\n                numHSL++;\n            }\n            else {\n                numRGB++;\n            }\n        }\n    }\n    return { parsed, numNumbers, numRGB, numHSL };\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyse(origin);\n    const targetStats = analyse(target);\n    const canInterpolate = originStats.numHSL === targetStats.numHSL &&\n        originStats.numRGB === targetStats.numRGB &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n", "const zeroPoint = {\n    x: 0,\n    y: 0,\n    z: 0\n};\nconst isNum = (v) => typeof v === 'number';\n\nexport { isNum, zeroPoint };\n", "const combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n", "import { createExpoIn, reverseEasing, mirrorEasing, createBackIn, createAnticipate } from './utils.mjs';\n\nconst DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nconst BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nconst BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nconst BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\nconst linear = p => p;\nconst easeIn = createExpoIn(2);\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\nconst circIn = p => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\nconst backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nconst backOut = reverseEasing(backIn);\nconst backInOut = mirrorEasing(backIn);\nconst anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nconst ca = 4356.0 / 361.0;\nconst cb = 35442.0 / 1805.0;\nconst cc = 16061.0 / 1805.0;\nconst bounceOut = (p) => {\n    if (p === 1 || p === 0)\n        return p;\n    const p2 = p * p;\n    return p < BOUNCE_FIRST_THRESHOLD\n        ? 7.5625 * p2\n        : p < BOUNCE_SECOND_THRESHOLD\n            ? 9.075 * p2 - 9.9 * p + 3.4\n            : p < BOUNCE_THIRD_THRESHOLD\n                ? ca * p2 - cb * p + cc\n                : 10.8 * p * p - 20.52 * p + 10.72;\n};\nconst bounceIn = reverseEasing(bounceOut);\nconst bounceInOut = (p) => p < 0.5\n    ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0))\n    : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n\nexport { anticipate, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, easeIn, easeInOut, easeOut, linear };\n", "const reverseEasing = easing => p => 1 - easing(1 - p);\nconst mirrorEasing = easing => p => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\nconst createExpoIn = (power) => p => Math.pow(p, power);\nconst createBackIn = (power) => p => p * p * ((power + 1) * p - power);\nconst createAnticipate = (power) => {\n    const backEasing = createBackIn(power);\n    return p => (p *= 2) < 1\n        ? 0.5 * backEasing(p)\n        : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n};\n\nexport { createAnticipate, createBackIn, createExpoIn, mirrorEasing, reverseEasing };\n", "function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const state = { done: false, value: from };\n    let amplitude = power * velocity;\n    const ideal = from + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    if (target !== ideal)\n        amplitude = target - from;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n", "function loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\nexport { hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n", "import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { getFrameData } from 'framesync';\n\nfunction inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate(Object.assign(Object.assign({}, options), { driver, onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            }, onComplete,\n            onStop }));\n    }\n    function startSpring(options) {\n        startAnimation(Object.assign({ type: \"spring\", stiffness: bounceStiffness, damping: bounceDamping, restDelta }, options));\n    }\n    if (isOutOfBounds(from)) {\n        startSpring({ from, velocity, to: boundaryNearest(from) });\n    }\n    else {\n        let target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = boundaryNearest(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, getFrameData().delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ from: v, to: boundary, velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from,\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n", "function velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n", "import { radiansToDegrees } from './radians-to-degrees.mjs';\nimport { zeroPoint } from './inc.mjs';\n\nconst angle = (a, b = zeroPoint) => radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\n\nexport { angle };\n", "const radiansToDegrees = (radians) => (radians * 180) / Math.PI;\n\nexport { radiansToDegrees };\n", "const applyOffset = (from, to) => {\n    let hasReceivedFrom = true;\n    if (to === undefined) {\n        to = from;\n        hasReceivedFrom = false;\n    }\n    return (v) => {\n        if (hasReceivedFrom) {\n            return v - from + to;\n        }\n        else {\n            from = v;\n            hasReceivedFrom = true;\n            return to;\n        }\n    };\n};\n\nexport { applyOffset };\n", "const identity = (v) => v;\nconst createAttractor = (alterDisplacement = identity) => (constant, origin, v) => {\n    const displacement = origin - v;\n    const springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\n    return displacement <= 0\n        ? origin + springModifiedDisplacement\n        : origin - springModifiedDisplacement;\n};\nconst attract = createAttractor();\nconst attractExpo = createAttractor(Math.sqrt);\n\nexport { attract, attractExpo, createAttractor };\n", "const degreesToRadians = (degrees) => (degrees * Math.PI) / 180;\n\nexport { degreesToRadians };\n", "import { isPoint } from './is-point.mjs';\nimport { isPoint3D } from './is-point-3d.mjs';\nimport { isNum } from './inc.mjs';\n\nconst distance1D = (a, b) => Math.abs(a - b);\nfunction distance(a, b) {\n    if (isNum(a) && isNum(b)) {\n        return distance1D(a, b);\n    }\n    else if (isPoint(a) && isPoint(b)) {\n        const xDelta = distance1D(a.x, b.x);\n        const yDelta = distance1D(a.y, b.y);\n        const zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n    }\n}\n\nexport { distance };\n", "const isPoint = (point) => point.hasOwnProperty('x') && point.hasOwnProperty('y');\n\nexport { isPoint };\n", "import { isPoint } from './is-point.mjs';\n\nconst isPoint3D = (point) => isPoint(point) && point.hasOwnProperty('z');\n\nexport { isPoint3D };\n", "import { degreesToRadians } from './degrees-to-radians.mjs';\n\nconst pointFromVector = (origin, angle, distance) => {\n    angle = degreesToRadians(angle);\n    return {\n        x: distance * Math.cos(angle) + origin.x,\n        y: distance * Math.sin(angle) + origin.y\n    };\n};\n\nexport { pointFromVector };\n", "import { toDecimal } from './to-decimal.mjs';\n\nconst smoothFrame = (prevValue, nextValue, duration, smoothing = 0) => toDecimal(prevValue +\n    (duration * (nextValue - prevValue)) / Math.max(smoothing, duration));\n\nexport { smoothFrame };\n", "const toDecimal = (num, precision = 2) => {\n    precision = Math.pow(10, precision);\n    return Math.round(num * precision) / precision;\n};\n\nexport { toDecimal };\n", "import { smoothFrame } from './smooth-frame.mjs';\nimport { getFrameData } from 'framesync';\n\nconst smooth = (strength = 50) => {\n    let previousValue = 0;\n    let lastUpdated = 0;\n    return (v) => {\n        const currentFramestamp = getFrameData().timestamp;\n        const timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\n        const newValue = timeDelta\n            ? smoothFrame(previousValue, v, timeDelta, strength)\n            : previousValue;\n        lastUpdated = currentFramestamp;\n        previousValue = newValue;\n        return newValue;\n    };\n};\n\nexport { smooth };\n", "const snap = (points) => {\n    if (typeof points === 'number') {\n        return (v) => Math.round(v / points) * points;\n    }\n    else {\n        let i = 0;\n        const numPoints = points.length;\n        return (v) => {\n            let lastDistance = Math.abs(points[0] - v);\n            for (i = 1; i < numPoints; i++) {\n                const point = points[i];\n                const distance = Math.abs(point - v);\n                if (distance === 0)\n                    return point;\n                if (distance > lastDistance)\n                    return points[i - 1];\n                if (i === numPoints - 1)\n                    return point;\n                lastDistance = distance;\n            }\n        };\n    }\n};\n\nexport { snap };\n", "function velocityPerFrame(xps, frameDuration) {\n    return xps / (1000 / frameDuration);\n}\n\nexport { velocityPerFrame };\n", "const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n", "import { linear } from './index.mjs';\n\nconst a = (a1, a2) => 1.0 - 3.0 * a2 + 3.0 * a1;\nconst b = (a1, a2) => 3.0 * a2 - 6.0 * a1;\nconst c = (a1) => 3.0 * a1;\nconst calcBezier = (t, a1, a2) => ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\nconst getSlope = (t, a1, a2) => 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 10;\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0.0) {\n            aB = currentT;\n        }\n        else {\n            aA = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nconst newtonIterations = 8;\nconst newtonMinSlope = 0.001;\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (let i = 0; i < newtonIterations; ++i) {\n        const currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) {\n            return aGuessT;\n        }\n        const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n}\nconst kSplineTableSize = 11;\nconst kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    if (mX1 === mY1 && mX2 === mY2)\n        return linear;\n    const sampleValues = new Float32Array(kSplineTableSize);\n    for (let i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    function getTForX(aX) {\n        let intervalStart = 0.0;\n        let currentSample = 1;\n        const lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        const dist = (aX - sampleValues[currentSample]) /\n            (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        const guessForT = intervalStart + dist * kSampleStepSize;\n        const initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= newtonMinSlope) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n        else if (initialSlope === 0.0) {\n            return guessForT;\n        }\n        else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n    }\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n", "import { clamp } from '../utils/clamp.mjs';\n\nconst steps = (steps, direction = 'end') => (progress) => {\n    progress =\n        direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\n    const expanded = progress * steps;\n    const rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\n    return clamp(0, 1, rounded / steps);\n};\n\nexport { steps };\n", "import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n", "function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n", "import { __rest } from 'tslib';\nimport { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let _a = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {}, { transitionEnd = {}, transition = {} } = _a, target = __rest(_a, [\"transitionEnd\", \"transition\"]);\n    target = Object.assign(Object.assign({}, target), transitionEnd);\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b, _c;\n    var _d;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : (_d[key] = value);\n        visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a, _b;\n    const origin = {};\n    for (const key in target) {\n        origin[key] =\n            (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n", "/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n", "/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n", "import { filter, complex } from 'style-value-types';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n", "import { color, filter } from 'style-value-types';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = Object.assign(Object.assign({}, numberValueTypes), { \n    // Color props\n    color, backgroundColor: color, outlineColor: color, fill: color, stroke: color, \n    // Border props\n    borderColor: color, borderTopColor: color, borderRightColor: color, borderBottomColor: color, borderLeftColor: color, filter, WebkitFilter: filter });\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n", "import { px, degrees, scale, alpha, progressPercentage } from 'style-value-types';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n", "import { number } from 'style-value-types';\n\nconst int = Object.assign(Object.assign({}, number), { transform: Math.round });\n\nexport { int };\n", "import { color, complex } from 'style-value-types';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n", "import { number, px, percent, degrees, vw, vh } from 'style-value-types';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n", "/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n", "/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n", "import { __rest } from 'tslib';\nimport { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { setTarget } from './setters.mjs';\nimport { resolveVariant } from './variants.mjs';\nimport { isTransformProp } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notifyAnimationStart(definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notifyAnimationComplete(definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let _b = visualElement.makeTargetAnimatable(definition), { transition = visualElement.getDefaultTransition(), transitionEnd } = _b, target = __rest(_b, [\"transition\", \"transitionEnd\"]);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = Object.assign({ delay }, transition);\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && isTransformProp(key)) {\n            valueTransition = Object.assign(Object.assign({}, valueTransition), { type: false, delay: 0 });\n        }\n        let animation = startAnimation(key, value, valueTarget, valueTransition);\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, Object.assign(Object.assign({}, options), { delay: delayChildren + generateStaggerDuration(i) })).then(() => child.notifyAnimationComplete(variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.forEachValue((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n", "import { __rest } from 'tslib';\nimport { inertia, animate } from 'popmotion';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from './easing.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { getDefaultTransition } from './default-transitions.mjs';\nimport { warning } from 'hey-listen';\nimport { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined(_a) {\n    var transition = __rest(_a, [\"when\", \"delay\", \"delayChildren\", \"staggerChildren\", \"staggerDirection\", \"repeat\", \"repeatType\", \"repeatDelay\", \"from\"]);\n    return !!Object.keys(transition).length;\n}\nlet legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions(_a) {\n    var { ease, times, yoyo, flip, loop } = _a, transition = __rest(_a, [\"ease\", \"times\", \"yoyo\", \"flip\", \"loop\"]);\n    const options = Object.assign({}, transition);\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a, _b;\n    const valueTransition = getValueTransition(transition, key) || {};\n    return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = [...options.to];\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    var _a;\n    if (Array.isArray(options.to)) {\n        (_a = transition.duration) !== null && _a !== void 0 ? _a : (transition.duration = 0.8);\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = Object.assign(Object.assign({}, transition), getDefaultTransition(key, options.to));\n    }\n    return Object.assign(Object.assign({}, options), convertTransitionToAnimationOptions(transition));\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    var _a;\n    const valueTransition = getValueTransition(transition, key);\n    let origin = (_a = valueTransition.from) !== null && _a !== void 0 ? _a : value.get();\n    const isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    const isOriginAnimatable = isAnimatable(key, origin);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${key} from \"${origin}\" to \"${target}\". ${origin} is not an animatable value - to enable this animation set ${origin} to a value animatable to ${target} via the \\`style\\` property.`);\n    function start() {\n        const options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete,\n            onUpdate: (v) => value.set(v),\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? inertia(Object.assign(Object.assign({}, options), valueTransition))\n            : animate(Object.assign(Object.assign({}, getPopmotionAnimationOptions(valueTransition, options, key)), { onUpdate: (v) => {\n                    var _a;\n                    options.onUpdate(v);\n                    (_a = valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, v);\n                }, onComplete: () => {\n                    var _a;\n                    options.onComplete();\n                    (_a = valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);\n                } }));\n    }\n    function set() {\n        var _a, _b;\n        const finalTarget = resolveFinalValueInKeyframes(target);\n        value.set(finalTarget);\n        onComplete();\n        (_a = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, finalTarget);\n        (_b = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _b === void 0 ? void 0 : _b.call(valueTransition);\n        return { stop: () => { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n */\nfunction startAnimation(key, value, target, transition = {}) {\n    if (instantAnimationState.current) {\n        transition = { type: false };\n    }\n    return value.start((onComplete) => {\n        let delayTimer;\n        let controls;\n        const animation = getAnimation(key, value, target, transition, onComplete);\n        const delay = getDelayFromTransition(transition, key);\n        const start = () => (controls = animation());\n        if (delay) {\n            delayTimer = window.setTimeout(start, secondsToMilliseconds(delay));\n        }\n        else {\n            start();\n        }\n        return () => {\n            clearTimeout(delayTimer);\n            controls === null || controls === void 0 ? void 0 : controls.stop();\n        };\n    });\n}\n\nexport { convertTransitionToAnimationOptions, getDelayFromTransition, getPopmotionAnimationOptions, getValueTransition, getZeroUnit, hydrateKeyframes, isTransitionDefined, isZero, startAnimation };\n", "/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n", "import { invariant } from 'hey-listen';\nimport { cubicBezier, linear, easeIn, easeInOut, easeOut, circIn, circInOut, circOut, backIn, backInOut, backOut, anticipate, bounceIn, bounceInOut, bounceOut } from 'popmotion';\n\nconst easingLookup = {\n    linear,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n    bounceIn,\n    bounceInOut,\n    bounceOut,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n", "import { complex } from 'style-value-types';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * \u2705: 100, \"100px\", \"#fff\"\n * \u274C: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n", "import { isKeyframesTarget } from './is-keyframes-target.mjs';\n\nconst underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (to) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframes = (values) => ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values,\n});\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, to) => {\n    let transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return Object.assign({ to }, transitionFactory(to));\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n", "const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n", "/**\n * A list of all transformable axes. We'll use this list to generated a version\n * of each axes for each transform.\n */\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * An ordered array of each transformable value. By default, transform values\n * will be sorted to this order.\n */\nconst order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\n/**\n * Generate a list of every possible transform key.\n */\nconst transformProps = [\"transformPerspective\", \"x\", \"y\", \"z\"];\norder.forEach((operationKey) => transformAxes.forEach((axesKey) => transformProps.push(operationKey + axesKey)));\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nfunction sortTransformProps(a, b) {\n    return transformProps.indexOf(a) - transformProps.indexOf(b);\n}\n/**\n * A quick lookup for transform props.\n */\nconst transformPropSet = new Set(transformProps);\nfunction isTransformProp(key) {\n    return transformPropSet.has(key);\n}\n/**\n * A quick lookup for transform origin props\n */\nconst transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\nfunction isTransformOriginProp(key) {\n    return transformOriginProps.has(key);\n}\n\nexport { isTransformOriginProp, isTransformProp, sortTransformProps, transformAxes, transformProps };\n", "import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n", "import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            var _a, _b;\n            visualElement.isPresent = isPresent;\n            const animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Exit, !isPresent, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });\n            !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(safeToRemove));\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n", "import { __rest } from 'tslib';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { AnimationType } from './types.mjs';\nimport { isVariantLabels, resolveVariant, isVariantLabel } from './variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd } = resolved, target = __rest(resolved, [\"transition\", \"transitionEnd\"]);\n            acc = Object.assign(Object.assign(Object.assign({}, acc), target), transitionEnd);\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = Object.assign({}, encounteredKeys);\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = Object.assign(Object.assign({}, prevResolvedValues), resolvedValues);\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = Object.assign(Object.assign({}, encounteredKeys), resolvedValues);\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: Object.assign({ type }, options),\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (isVariantLabels(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n", "function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n", "const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n", "import { mix, distance } from 'popmotion';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return distance(value, target) < maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n", "const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n", "import { __rest } from 'tslib';\nimport sync, { cancelSync } from 'framesync';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { createLifecycles } from './utils/lifecycles.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { checkIfControllingVariants, checkIfVariantNode, isVariantLabel } from './utils/variants.mjs';\n\nconst visualElement = ({ treeType = \"\", build, getBaseTarget, makeTargetAnimatable, measureViewportBox, render: renderInstance, readValueFromInstance, removeValueFromRenderState, sortNodePosition, scrapeMotionValuesFromProps, }) => ({ parent, props, presenceId, blockInitialAnimation, visualState, shouldReduceMotion, }, options = {}) => {\n    let isMounted = false;\n    const { latestValues, renderState } = visualState;\n    /**\n     * The instance of the render-specific node that will be hydrated by the\n     * exposed React ref. So for example, this visual element can host a\n     * HTMLElement, plain object, or Three.js object. The functions provided\n     * in VisualElementConfig allow us to interface with this instance.\n     */\n    let instance;\n    /**\n     * Manages the subscriptions for a visual element's lifecycle, for instance\n     * onRender\n     */\n    const lifecycles = createLifecycles();\n    /**\n     * A map of all motion values attached to this visual element. Motion\n     * values are source of truth for any given animated value. A motion\n     * value might be provided externally by the component via props.\n     */\n    const values = new Map();\n    /**\n     * A map of every subscription that binds the provided or generated\n     * motion values onChange listeners to this visual element.\n     */\n    const valueSubscriptions = new Map();\n    /**\n     * A reference to the previously-provided motion values as returned\n     * from scrapeMotionValuesFromProps. We use the keys in here to determine\n     * if any motion values need to be removed after props are updated.\n     */\n    let prevMotionValues = {};\n    /**\n     * When values are removed from all animation props we need to search\n     * for a fallback value to animate to. These values are tracked in baseTarget.\n     */\n    const baseTarget = Object.assign({}, latestValues);\n    // Internal methods ========================\n    /**\n     * On mount, this will be hydrated with a callback to disconnect\n     * this visual element from its parent on unmount.\n     */\n    let removeFromVariantTree;\n    /**\n     * Render the element with the latest styles outside of the React\n     * render lifecycle\n     */\n    function render() {\n        if (!instance || !isMounted)\n            return;\n        triggerBuild();\n        renderInstance(instance, renderState, props.style, element.projection);\n    }\n    function triggerBuild() {\n        build(element, renderState, latestValues, options, props);\n    }\n    function update() {\n        lifecycles.notifyUpdate(latestValues);\n    }\n    /**\n     *\n     */\n    function bindToMotionValue(key, value) {\n        const removeOnChange = value.onChange((latestValue) => {\n            latestValues[key] = latestValue;\n            props.onUpdate && sync.update(update, false, true);\n        });\n        const removeOnRenderRequest = value.onRenderRequest(element.scheduleRender);\n        valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    /**\n     * Any motion values that are provided to the element when created\n     * aren't yet bound to the element, as this would technically be impure.\n     * However, we iterate through the motion values and set them to the\n     * initial values for this component.\n     *\n     * TODO: This is impure and we should look at changing this to run on mount.\n     * Doing so will break some tests but this isn't neccessarily a breaking change,\n     * more a reflection of the test.\n     */\n    const _a = scrapeMotionValuesFromProps(props), { willChange } = _a, initialMotionValues = __rest(_a, [\"willChange\"]);\n    for (const key in initialMotionValues) {\n        const value = initialMotionValues[key];\n        if (latestValues[key] !== undefined && isMotionValue(value)) {\n            value.set(latestValues[key], false);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n        }\n    }\n    /**\n     * Determine what role this visual element should take in the variant tree.\n     */\n    const isControllingVariants = checkIfControllingVariants(props);\n    const isVariantNode = checkIfVariantNode(props);\n    const element = Object.assign(Object.assign({ treeType, \n        /**\n         * This is a mirror of the internal instance prop, which keeps\n         * VisualElement type-compatible with React's RefObject.\n         */\n        current: null, \n        /**\n         * The depth of this visual element within the visual element tree.\n         */\n        depth: parent ? parent.depth + 1 : 0, parent, children: new Set(), \n        /**\n         *\n         */\n        presenceId,\n        shouldReduceMotion, \n        /**\n         * If this component is part of the variant tree, it should track\n         * any children that are also part of the tree. This is essentially\n         * a shadow tree to simplify logic around how to stagger over children.\n         */\n        variantChildren: isVariantNode ? new Set() : undefined, \n        /**\n         * Whether this instance is visible. This can be changed imperatively\n         * by the projection tree, is analogous to CSS's visibility in that\n         * hidden elements should take up layout, and needs enacting by the configured\n         * render function.\n         */\n        isVisible: undefined, \n        /**\n         * Normally, if a component is controlled by a parent's variants, it can\n         * rely on that ancestor to trigger animations further down the tree.\n         * However, if a component is created after its parent is mounted, the parent\n         * won't trigger that mount animation so the child needs to.\n         *\n         * TODO: This might be better replaced with a method isParentMounted\n         */\n        manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()), \n        /**\n         * This can be set by AnimatePresence to force components that mount\n         * at the same time as it to mount as if they have initial={false} set.\n         */\n        blockInitialAnimation, \n        /**\n         * Determine whether this component has mounted yet. This is mostly used\n         * by variant children to determine whether they need to trigger their\n         * own animations on mount.\n         */\n        isMounted: () => Boolean(instance), mount(newInstance) {\n            isMounted = true;\n            instance = element.current = newInstance;\n            if (element.projection) {\n                element.projection.mount(newInstance);\n            }\n            if (isVariantNode && parent && !isControllingVariants) {\n                removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);\n            }\n            values.forEach((value, key) => bindToMotionValue(key, value));\n            parent === null || parent === void 0 ? void 0 : parent.children.add(element);\n            element.setProps(props);\n        },\n        /**\n         *\n         */\n        unmount() {\n            var _a;\n            (_a = element.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n            cancelSync.update(update);\n            cancelSync.render(render);\n            valueSubscriptions.forEach((remove) => remove());\n            removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();\n            parent === null || parent === void 0 ? void 0 : parent.children.delete(element);\n            lifecycles.clearAllListeners();\n            instance = undefined;\n            isMounted = false;\n        },\n        /**\n         * Add a child visual element to our set of children.\n         */\n        addVariantChild(child) {\n            var _a;\n            const closestVariantNode = element.getClosestVariantNode();\n            if (closestVariantNode) {\n                (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n                return () => closestVariantNode.variantChildren.delete(child);\n            }\n        },\n        sortNodePosition(other) {\n            /**\n             * If these nodes aren't even of the same type we can't compare their depth.\n             */\n            if (!sortNodePosition || treeType !== other.treeType)\n                return 0;\n            return sortNodePosition(element.getInstance(), other.getInstance());\n        }, \n        /**\n         * Returns the closest variant node in the tree starting from\n         * this visual element.\n         */\n        getClosestVariantNode: () => isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode(), \n        /**\n         * Expose the latest layoutId prop.\n         */\n        getLayoutId: () => props.layoutId, \n        /**\n         * Returns the current instance.\n         */\n        getInstance: () => instance, \n        /**\n         * Get/set the latest static values.\n         */\n        getStaticValue: (key) => latestValues[key], setStaticValue: (key, value) => (latestValues[key] = value), \n        /**\n         * Returns the latest motion value state. Currently only used to take\n         * a snapshot of the visual element - perhaps this can return the whole\n         * visual state\n         */\n        getLatestValues: () => latestValues, \n        /**\n         * Set the visiblity of the visual element. If it's changed, schedule\n         * a render to reflect these changes.\n         */\n        setVisibility(visibility) {\n            if (element.isVisible === visibility)\n                return;\n            element.isVisible = visibility;\n            element.scheduleRender();\n        },\n        /**\n         * Make a target animatable by Popmotion. For instance, if we're\n         * trying to animate width from 100px to 100vw we need to measure 100vw\n         * in pixels to determine what we really need to animate to. This is also\n         * pluggable to support Framer's custom value types like Color,\n         * and CSS variables.\n         */\n        makeTargetAnimatable(target, canMutate = true) {\n            return makeTargetAnimatable(element, target, props, canMutate);\n        },\n        /**\n         * Measure the current viewport box with or without transforms.\n         * Only measures axis-aligned boxes, rotate and skew must be manually\n         * removed with a re-render to work.\n         */\n        measureViewportBox() {\n            return measureViewportBox(instance, props);\n        },\n        // Motion values ========================\n        /**\n         * Add a motion value and bind it to this visual element.\n         */\n        addValue(key, value) {\n            // Remove existing value if it exists\n            if (element.hasValue(key))\n                element.removeValue(key);\n            values.set(key, value);\n            latestValues[key] = value.get();\n            bindToMotionValue(key, value);\n        },\n        /**\n         * Remove a motion value and unbind any active subscriptions.\n         */\n        removeValue(key) {\n            var _a;\n            values.delete(key);\n            (_a = valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n            valueSubscriptions.delete(key);\n            delete latestValues[key];\n            removeValueFromRenderState(key, renderState);\n        }, \n        /**\n         * Check whether we have a motion value for this key\n         */\n        hasValue: (key) => values.has(key), \n        /**\n         * Get a motion value for this key. If called with a default\n         * value, we'll create one if none exists.\n         */\n        getValue(key, defaultValue) {\n            let value = values.get(key);\n            if (value === undefined && defaultValue !== undefined) {\n                value = motionValue(defaultValue);\n                element.addValue(key, value);\n            }\n            return value;\n        }, \n        /**\n         * Iterate over our motion values.\n         */\n        forEachValue: (callback) => values.forEach(callback), \n        /**\n         * If we're trying to animate to a previously unencountered value,\n         * we need to check for it in our state and as a last resort read it\n         * directly from the instance (which might have performance implications).\n         */\n        readValue: (key) => {\n            var _a;\n            return (_a = latestValues[key]) !== null && _a !== void 0 ? _a : readValueFromInstance(instance, key, options);\n        }, \n        /**\n         * Set the base target to later animate back to. This is currently\n         * only hydrated on creation and when we first read a value.\n         */\n        setBaseTarget(key, value) {\n            baseTarget[key] = value;\n        },\n        /**\n         * Find the base target for a value thats been removed from all animation\n         * props.\n         */\n        getBaseTarget(key) {\n            if (getBaseTarget) {\n                const target = getBaseTarget(props, key);\n                if (target !== undefined && !isMotionValue(target))\n                    return target;\n            }\n            return baseTarget[key];\n        } }, lifecycles), { \n        /**\n         * Build the renderer state based on the latest visual state.\n         */\n        build() {\n            triggerBuild();\n            return renderState;\n        },\n        /**\n         * Schedule a render on the next animation frame.\n         */\n        scheduleRender() {\n            sync.render(render, false, true);\n        }, \n        /**\n         * Synchronously fire render. It's prefered that we batch renders but\n         * in many circumstances, like layout measurement, we need to run this\n         * synchronously. However in those instances other measures should be taken\n         * to batch reads/writes.\n         */\n        syncRender: render, \n        /**\n         * Update the provided props. Ensure any newly-added motion values are\n         * added to our map, old ones removed, and listeners updated.\n         */\n        setProps(newProps) {\n            if (newProps.transformTemplate || props.transformTemplate) {\n                element.scheduleRender();\n            }\n            props = newProps;\n            lifecycles.updatePropListeners(newProps);\n            prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps(props), prevMotionValues);\n        }, getProps: () => props, \n        // Variants ==============================\n        /**\n         * Returns the variant definition with a given name.\n         */\n        getVariant: (name) => { var _a; return (_a = props.variants) === null || _a === void 0 ? void 0 : _a[name]; }, \n        /**\n         * Returns the defined default transition on this component.\n         */\n        getDefaultTransition: () => props.transition, getTransformPagePoint: () => {\n            return props.transformPagePoint;\n        }, \n        /**\n         * Used by child variant nodes to get the closest ancestor variant props.\n         */\n        getVariantContext(startAtParent = false) {\n            if (startAtParent)\n                return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\n            if (!isControllingVariants) {\n                const context = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};\n                if (props.initial !== undefined) {\n                    context.initial = props.initial;\n                }\n                return context;\n            }\n            const context = {};\n            for (let i = 0; i < numVariantProps; i++) {\n                const name = variantProps[i];\n                const prop = props[name];\n                if (isVariantLabel(prop) || prop === false) {\n                    context[name] = prop;\n                }\n            }\n            return context;\n        } });\n    return element;\n};\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { visualElement };\n", "import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\n\nconst names = [\n    \"LayoutMeasure\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutUpdate\",\n    \"ViewportBoxUpdate\",\n    \"Update\",\n    \"Render\",\n    \"AnimationComplete\",\n    \"LayoutAnimationComplete\",\n    \"AnimationStart\",\n    \"LayoutAnimationStart\",\n    \"SetAxisTarget\",\n    \"Unmount\",\n];\nfunction createLifecycles() {\n    const managers = names.map(() => new SubscriptionManager());\n    const propSubscriptions = {};\n    const lifecycles = {\n        clearAllListeners: () => managers.forEach((manager) => manager.clear()),\n        updatePropListeners: (props) => {\n            names.forEach((name) => {\n                var _a;\n                const on = \"on\" + name;\n                const propListener = props[on];\n                // Unsubscribe existing subscription\n                (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);\n                // Add new subscription\n                if (propListener) {\n                    propSubscriptions[name] = lifecycles[on](propListener);\n                }\n            });\n        },\n    };\n    managers.forEach((manager, i) => {\n        lifecycles[\"on\" + names[i]] = (handler) => manager.add(handler);\n        lifecycles[\"notify\" + names[i]] = (...args) => manager.notify(...args);\n    });\n    return lifecycles;\n}\n\nexport { createLifecycles };\n", "import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    var _a;\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.2.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.2.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n", "const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n", "import { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { startAnimation } from './utils/transitions.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n", "import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n", "const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n", "import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = Object.assign(Object.assign(Object.assign(Object.assign({}, animations), gestureAnimations), drag), layoutFeatures);\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n", "import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n", "import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return Object.assign(Object.assign({}, baseConfig), { preloadedFeatures, useRender: createUseRender(forwardMotionProps), createVisualElement,\n        projectionNodeConstructor,\n        Component });\n}\n\nexport { createDomMotionConfig };\n", "import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n", "/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"svg\",\n    \"switch\",\n    \"symbol\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n", "import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Object.assign(Object.assign(Object.assign({}, filteredProps), visualProps), { ref });\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n", "import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        const { vars, style } = state;\n        return Object.assign(Object.assign({}, vars), style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    let style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    if (props.transformValues) {\n        style = props.transformValues(style);\n    }\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (Boolean(props.drag) && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps, useStyle };\n", "import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { isTransformProp, isTransformOriginProp } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (isTransformProp(key) ||\n        isTransformOriginProp(key) ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n", "import { buildTransform, buildTransformOrigin } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { isTransformProp, isTransformOriginProp } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    var _a;\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    // Empty the transformKeys array. As we're throwing out refs to its items\n    // this might not be as cheap as suspected. Maybe using the array as a buffer\n    // with a manual incrementation would be better.\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (isTransformProp(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0))\n                transformIsNone = false;\n        }\n        else if (isTransformOriginProp(key)) {\n            transformOrigin[key] = valueAsType;\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (hasTransform) {\n        style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n    }\n    else if (transformTemplate) {\n        style.transform = transformTemplate({}, \"\");\n    }\n    else if (!latestValues.transform && style.transform) {\n        style.transform = \"none\";\n    }\n    if (hasTransformOrigin) {\n        style.transformOrigin = buildTransformOrigin(transformOrigin);\n    }\n}\n\nexport { buildHTMLStyles };\n", "import { sortTransformProps } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Track whether the defined transform has a defined z so we don't add a\n    // second to enable hardware acceleration\n    let transformHasZ = false;\n    // Loop over each transform and build them into transformString\n    const numTransformKeys = transformKeys.length;\n    for (let i = 0; i < numTransformKeys; i++) {\n        const key = transformKeys[i];\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n        if (key === \"z\")\n            transformHasZ = true;\n    }\n    if (!transformHasZ && enableHardwareAcceleration) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n/**\n * Build a transformOrigin style. Uses the same defaults as the browser for\n * undefined origins.\n */\nfunction buildTransformOrigin({ originX = \"50%\", originY = \"50%\", originZ = 0, }) {\n    return `${originX} ${originY} ${originZ}`;\n}\n\nexport { buildTransform, buildTransformOrigin };\n", "/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n", "/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n", "const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n", "import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\n\nfunction useSVGProps(props, visualState) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, props.transformTemplate);\n        return Object.assign(Object.assign({}, state.attrs), { style: Object.assign({}, state.style) });\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = Object.assign(Object.assign({}, rawStyles), visualProps.style);\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n", "import { __rest } from 'tslib';\nimport { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, _a, options, transformTemplate) {\n    var { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0 } = _a, \n    // This is object creation, which we try to avoid per-frame.\n    latest = __rest(_a, [\"attrX\", \"attrY\", \"originX\", \"originY\", \"pathLength\", \"pathSpacing\", \"pathOffset\"]);\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n", "import { px } from 'style-value-types';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n", "import { px } from 'style-value-types';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n", "import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => (Object.assign(Object.assign({}, createHtmlRenderState()), { attrs: {} }));\n\nexport { createSvgRenderState };\n", "import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n", "import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n", "const CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;\nconst REPLACE_TEMPLATE = \"$1-$2\";\n/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();\n\nexport { camelToDash };\n", "function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n", "/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n]);\n\nexport { camelCaseAttributes };\n", "import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n", "import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n", "import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n", "import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n", "import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement }) {\n    const onFocus = () => {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n", "import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        var _a;\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Hover, isActive);\n        callback === null || callback === void 0 ? void 0 : callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n", "import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { pipe } from 'popmotion';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        var _a;\n        (_a = cancelPointerEndListeners.current) === null || _a === void 0 ? void 0 : _a.call(cancelPointerEndListeners);\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        var _a;\n        removePointerEndListener();\n        isPressing.current = false;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.getInstance(), event.target)\n            ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info)\n            : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, true);\n        onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n", "/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n", "import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            var _a;\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.InView, isIntersecting);\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback === null || callback === void 0 ? void 0 : callback(entry);\n        };\n        return observeIntersection(visualElement.getInstance(), options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            var _a;\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter === null || onViewportEnter === void 0 ? void 0 : onViewportEnter(null);\n            (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.InView, true);\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n", "import { __rest } from 'tslib';\n\n/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    var _a;\n    (_a = observerCallbacks.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver(_a) {\n    var { root } = _a, options = __rest(_a, [\"root\"]);\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, Object.assign({ root }, options));\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n", "import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n", "import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n", "import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { mix } from 'popmotion';\nimport { percent } from 'style-value-types';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.actual[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.syncRender();\n            /**\n             * This must fire after the syncRender call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.actual, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.actual[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.actual, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            var _a;\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = Object.assign(Object.assign({ type: \"inertia\", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness,\n                bounceDamping, timeConstant: 750, restDelta: 1, restSpeed: 10 }, dragTransition), transition);\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return startAnimation(axis, axisValue, 0, transition);\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a, _b;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.actual[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.getInstance().style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.getInstance();\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.syncRender();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return Object.assign(Object.assign({}, props), { drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum });\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n", "import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { distance, pipe } from 'popmotion';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = getFrameData();\n            this.history.push(Object.assign(Object.assign({}, point), { timestamp }));\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = getFrameData();\n        this.history = [Object.assign(Object.assign({}, point), { timestamp })];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n", "import { mix, progress, clamp } from 'popmotion';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n", "function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n", "import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.x);\n        translateAxis(viewportBox.y, scroll.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n", "/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n", "import { mix } from 'popmotion';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, { x: -node.scroll.x, y: -node.scroll.y });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n", "function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        hasTranslate(values.x) ||\n        hasTranslate(values.y) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction hasTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { hasScale, hasTransform };\n", "import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n", "import { htmlVisualElement } from '../html/visual-element.mjs';\nimport { svgVisualElement } from '../svg/visual-element.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? svgVisualElement(options, { enableHardwareAcceleration: false })\n        : htmlVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n", "import { __rest } from 'tslib';\nimport { visualElement } from '../index.mjs';\nimport { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { parseDomVariant } from '../dom/utils/parse-dom-variant.mjs';\nimport { isTransformProp } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nconst htmlConfig = {\n    treeType: \"dom\",\n    readValueFromInstance(domElement, key) {\n        if (isTransformProp(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(domElement);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    },\n    sortNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    },\n    getBaseTarget(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    },\n    measureViewportBox(element, { transformPagePoint }) {\n        return measureViewportBox(element, transformPagePoint);\n    },\n    /**\n     * Reset the transform on the current Element. This is called as part\n     * of a batched process across the entire layout tree. To remove this write\n     * cycle it'd be interesting to see if it's possible to \"undo\" all the current\n     * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\n     * works\n     */\n    resetTransform(element, domElement, props) {\n        const { transformTemplate } = props;\n        domElement.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        // Ensure that whatever happens next, we restore our transform on the next frame\n        element.scheduleRender();\n    },\n    restoreTransform(instance, mutableState) {\n        instance.style.transform = mutableState.style.transform;\n    },\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    },\n    /**\n     * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\n     * can be animated by Motion.\n     */\n    makeTargetAnimatable(element, _a, _b, isMounted) {\n        var { transition, transitionEnd } = _a, target = __rest(_a, [\"transition\", \"transitionEnd\"]);\n        var transformValues = _b.transformValues;\n        if (isMounted === void 0) { isMounted = true; }\n        let origin = getOrigin(target, transition || {}, element);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(element, target, origin);\n            const parsed = parseDomVariant(element, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return Object.assign({ transition,\n            transitionEnd }, target);\n    },\n    scrapeMotionValuesFromProps,\n    build(element, renderState, latestValues, options, props) {\n        if (element.isVisible !== undefined) {\n            renderState.style.visibility = element.isVisible\n                ? \"visible\"\n                : \"hidden\";\n        }\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    },\n    render: renderHTML,\n};\nconst htmlVisualElement = visualElement(htmlConfig);\n\nexport { getComputedStyle, htmlConfig, htmlVisualElement };\n", "import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n", "import { __rest } from 'tslib';\nimport { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, _a, transitionEnd) {\n    var _b;\n    var target = __rest(_a, []);\n    const element = visualElement.getInstance();\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = Object.assign({}, transitionEnd);\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.forEachValue((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd)\n            (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : (transitionEnd[key] = current);\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n", "import { px, number } from 'style-value-types';\nimport { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformProps } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformProps.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.syncRender();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.getInstance();\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.syncRender();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = Object.assign({}, target);\n    transitionEnd = Object.assign({}, transitionEnd);\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.syncRender();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n", "import { visualElement } from '../index.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { htmlConfig } from '../html/visual-element.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isTransformProp } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\n\nconst svgVisualElement = visualElement(Object.assign(Object.assign({}, htmlConfig), { getBaseTarget(props, key) {\n        return props[key];\n    },\n    readValueFromInstance(domElement, key) {\n        var _a;\n        if (isTransformProp(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return domElement.getAttribute(key);\n    },\n    scrapeMotionValuesFromProps,\n    build(_element, renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);\n    }, render: renderSVG }));\n\nexport { svgVisualElement };\n", "import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n", "import sync from 'framesync';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if ((switchLayoutGroup === null || switchLayoutGroup === void 0 ? void 0 : switchLayoutGroup.register) && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions(Object.assign(Object.assign({}, projection.options), { onExitComplete: () => this.safeToRemove() }));\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, Object.assign({}, props, { layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove })));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: Object.assign(Object.assign({}, correctBorderRadius), { applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ] }),\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n", "import { px } from 'style-value-types';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n", "import { mix } from 'popmotion';\nimport { complex } from 'style-value-types';\nimport { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n", "import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== null && value !== void 0 ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n", "import sync, { cancelSync, flushSync } from 'framesync';\nimport { mix } from 'popmotion';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale } from '../utils/has-transform.mjs';\nimport { transformAxes } from '../../render/html/utils/transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\n\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(id, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to actually\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            this.updateProjection = () => {\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.id = id;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            id && this.root.registerPotentialNode(id, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(id, node) {\n            this.potentialNodes.set(id, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.getInstance()) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.id && this.root.potentialNodes.delete(this.id);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let unblockTimeout;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    clearTimeout(unblockTimeout);\n                    unblockTimeout = window.setTimeout(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = Object.assign(Object.assign({}, getValueTransition(layoutTransition, \"layout\")), { onPlay: onLayoutAnimationStart, onComplete: onLayoutAnimationComplete });\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            this.finishAnimation();\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                /**\n                 * TODO: Check we haven't updated the scroll\n                 * since the last didUpdate\n                 */\n                node.updateScroll();\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            const measured = this.measure();\n            const layout = this.removeTransform(this.removeElementScroll(measured));\n            roundBox(layout);\n            this.snapshot = {\n                measured,\n                layout,\n                latestValues: {},\n            };\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const measured = this.measure();\n            roundBox(measured);\n            const prevLayout = this.layout;\n            this.layout = {\n                measured,\n                actual: this.removeElementScroll(measured),\n            };\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.actual);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notifyLayoutMeasure(this.layout.actual, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.actual);\n        }\n        updateScroll() {\n            if (this.options.layoutScroll && this.instance) {\n                this.isScrollRoot = checkIsScrollRoot(this.instance);\n                this.scroll = measureScroll(this.instance);\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.x);\n                translateAxis(box.y, scroll.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options, isScrollRoot } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (isScrollRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.x);\n                    translateAxis(boxWithoutScroll.y, scroll.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.x,\n                        y: -node.scroll.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measure();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layout, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            var _a;\n            this.options = Object.assign(Object.assign(Object.assign({}, this.options), options), { crossfade: (_a = options.crossfade) !== null && _a !== void 0 ? _a : true });\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                this.relativeParent = this.getClosestProjectingParent();\n                if (this.relativeParent && this.relativeParent.layout) {\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.actual, this.relativeParent.layout.actual);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.actual);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.actual);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.actual);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                this.relativeParent = this.getClosestProjectingParent();\n                if (this.relativeParent &&\n                    Boolean(this.relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !this.relativeParent.options.layoutScroll &&\n                    this.relativeParent.target) {\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, this.relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent || hasTransform(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            const lead = this.getLead();\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.actual);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, Boolean(this.resumingFrom) || this !== lead);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = Object.assign({}, this.latestValues);\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = snapshot === null || snapshot === void 0 ? void 0 : snapshot.isShared;\n            const isOnlyMember = (((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.actual, this.relativeParent.layout.actual);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, Object.assign(Object.assign({}, options), { onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    }, onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    } }));\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const { targetWithTransforms, target, layout, latestValues } = this.getLead();\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its actual layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            // Keep a record of all the values we've reset\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const axis = transformAxes[i];\n                const key = \"rotate\" + axis;\n                // If this rotation doesn't exist as a motion value, then we don't\n                // need to reset it\n                if (!visualElement.getStaticValue(key)) {\n                    continue;\n                }\n                hasRotate = true;\n                // Record the rotation and then temporarily set it to 0\n                resetValues[key] = visualElement.getStaticValue(key);\n                visualElement.setStaticValue(key, 0);\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c, _d, _e, _f;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity = (_b = this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_d = (_c = valuesToRender.opacity) !== null && _c !== void 0 ? _c : this.latestValues.opacity) !== null && _d !== void 0 ? _d : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its actual\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_e = valuesToRender.opacity) !== null && _e !== void 0 ? _e : \"\"\n                        : (_f = valuesToRender.opacityExit) !== null && _f !== void 0 ? _f : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c, _d;\n    const snapshot = (_b = (_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) !== null && _b !== void 0 ? _b : node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { actual: layout, measured: measuredLayout } = node.layout;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (node.options.animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = snapshot.isShared\n                    ? snapshot.measured[axis]\n                    : snapshot.layout[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (node.options.animationType === \"position\") {\n            eachAxis((axis) => {\n                const axisSnapshot = snapshot.isShared\n                    ? snapshot.measured[axis]\n                    : snapshot.layout[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layout);\n        const visualDelta = createDelta();\n        if (snapshot.isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measured);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layout);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            node.relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (node.relativeParent && !node.relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = node.relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layout, parentSnapshot.layout);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.actual);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_d = (_c = node.options).onExitComplete) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notifyBeforeLayoutMeasure();\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, id) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${id}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox };\n", "import { mix, progress, circOut, linear } from 'popmotion';\nimport { percent, px } from 'style-value-types';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    var _a, _b, _c, _d;\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // (follow?.opacity as number) ?? 0,\n        // TODO Reinstate this if only child\n        (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, linear);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n", "/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n", "import { mix } from 'popmotion';\nimport { percent } from 'style-value-types';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n", "function isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\n\nexport { boxEquals, isDeltaZero };\n", "import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n                node.snapshot.isShared = true;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n", "const identityProjection = \"translate3d(0px, 0px, 0) scale(1, 1) scale(1, 1)\";\nfunction buildProjectionTransform(delta, treeScale, latestTransform) {\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    let transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    return transform === identityProjection ? \"none\" : transform;\n}\n\nexport { buildProjectionTransform, identityProjection };\n", "import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n", "import { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\n\n/**\n * @public\n */\nconst m = createMotionProxy(createDomMotionConfig);\n\nexport { m };\n", "import sync from 'framesync';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => sync.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n", "import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n", "import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { env } from '../../utils/process.mjs';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    // Support deprecated exitBeforeEnter prop\n    if (exitBeforeEnter) {\n        mode = \"wait\";\n        warnOnce(false, \"Replace exitBeforeEnter with mode='wait'\");\n    }\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (env !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n", "import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n", "import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        var _a;\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        (_a = style.sheet) === null || _a === void 0 ? void 0 : _a.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n", "import { createContext } from 'react';\n\n/**\n * @deprecated\n */\nconst DeprecatedLayoutGroupContext = createContext(null);\n\nexport { DeprecatedLayoutGroupContext };\n", "import * as React from 'react';\nimport { useContext, useRef, useMemo } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { DeprecatedLayoutGroupContext } from '../../context/DeprecatedLayoutGroupContext.mjs';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { nodeGroup } from '../../projection/node/group.mjs';\n\nconst shouldInheritGroup = (inherit) => inherit === true;\nconst shouldInheritId = (inherit) => shouldInheritGroup(inherit === true) || inherit === \"id\";\nconst LayoutGroup = ({ children, id, inheritId, inherit = true, }) => {\n    var _a, _b;\n    // Maintain backwards-compatibility with inheritId until 7.0\n    if (inheritId !== undefined)\n        inherit = inheritId;\n    const layoutGroupContext = useContext(LayoutGroupContext);\n    const deprecatedLayoutGroupContext = useContext(DeprecatedLayoutGroupContext);\n    const [forceRender, key] = useForceUpdate();\n    const context = useRef(null);\n    const upstreamId = (_a = layoutGroupContext.id) !== null && _a !== void 0 ? _a : deprecatedLayoutGroupContext;\n    if (context.current === null) {\n        if (shouldInheritId(inherit) && upstreamId) {\n            id = id ? upstreamId + \"-\" + id : upstreamId;\n        }\n        context.current = {\n            id,\n            group: shouldInheritGroup(inherit)\n                ? (_b = layoutGroupContext === null || layoutGroupContext === void 0 ? void 0 : layoutGroupContext.group) !== null && _b !== void 0 ? _b : nodeGroup()\n                : nodeGroup(),\n        };\n    }\n    const memoizedContext = useMemo(() => (Object.assign(Object.assign({}, context.current), { forceRender })), [key]);\n    return (React.createElement(LayoutGroupContext.Provider, { value: memoizedContext }, children));\n};\n\nexport { LayoutGroup };\n", "const notify = (node) => !node.isLayoutDirty && node.willUpdate(false);\nfunction nodeGroup() {\n    const nodes = new Set();\n    const subscriptions = new WeakMap();\n    const dirtyAll = () => nodes.forEach(notify);\n    return {\n        add: (node) => {\n            nodes.add(node);\n            subscriptions.set(node, node.addEventListener(\"willUpdate\", dirtyAll));\n        },\n        remove: (node) => {\n            var _a;\n            nodes.delete(node);\n            (_a = subscriptions.get(node)) === null || _a === void 0 ? void 0 : _a();\n            subscriptions.delete(node);\n            dirtyAll();\n        },\n        dirty: dirtyAll,\n    };\n}\n\nexport { nodeGroup };\n", "import { warning } from 'hey-listen';\nimport * as React from 'react';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { LayoutGroup } from './LayoutGroup/index.mjs';\n\nlet id = 0;\nconst AnimateSharedLayout = ({ children, }) => {\n    React.useEffect(() => {\n        warning(false, \"AnimateSharedLayout is deprecated: https://www.framer.com/docs/guide-upgrade/##shared-layout-animations\");\n    }, []);\n    return (React.createElement(LayoutGroup, { id: useConstant(() => `asl-${id++}`) }, children));\n};\n\nexport { AnimateSharedLayout };\n", "import { __rest } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { loadExternalIsValidProp } from '../../render/dom/utils/filter-props.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction MotionConfig(_a) {\n    var { children, isValidProp } = _a, config = __rest(_a, [\"children\", \"isValidProp\"]);\n    isValidProp && loadExternalIsValidProp(isValidProp);\n    /**\n     * Inherit props from any parent MotionConfig components\n     */\n    config = Object.assign(Object.assign({}, useContext(MotionConfigContext)), config);\n    /**\n     * Don't allow isStatic to change between renders as it affects how many hooks\n     * motion components fire.\n     */\n    config.isStatic = useConstant(() => config.isStatic);\n    /**\n     * Creating a new config context object will re-render every `motion` component\n     * every time it renders. So we only want to create a new one sparingly.\n     */\n    const context = useMemo(() => config, [JSON.stringify(config.transition), config.transformPagePoint, config.reducedMotion]);\n    return (React.createElement(MotionConfigContext.Provider, { value: context }, children));\n}\n\nexport { MotionConfig };\n", "import { __rest } from 'tslib';\nimport * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { loadFeatures } from '../../motion/features/definitions.mjs';\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimations } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimations}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimations')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion({ children, features, strict = false }) {\n    const [, setIsLoaded] = useState(!isLazyBundle(features));\n    const loadedRenderer = useRef(undefined);\n    /**\n     * If this is a synchronous load, load features immediately\n     */\n    if (!isLazyBundle(features)) {\n        const { renderer } = features, loadedFeatures = __rest(features, [\"renderer\"]);\n        loadedRenderer.current = renderer;\n        loadFeatures(loadedFeatures);\n    }\n    useEffect(() => {\n        if (isLazyBundle(features)) {\n            features().then((_a) => {\n                var { renderer } = _a, loadedFeatures = __rest(_a, [\"renderer\"]);\n                loadFeatures(loadedFeatures);\n                loadedRenderer.current = renderer;\n                setIsLoaded(true);\n            });\n        }\n    }, []);\n    return (React.createElement(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict } }, children));\n}\nfunction isLazyBundle(features) {\n    return typeof features === \"function\";\n}\n\nexport { LazyMotion };\n", "import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.onChange(setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n", "import { interpolate } from 'popmotion';\n\nconst isCustomValueType = (v) => {\n    return typeof v === \"object\" && v.mix;\n};\nconst getMixer = (v) => (isCustomValueType(v) ? v.mix : undefined);\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, Object.assign({ mixer: getMixer(outputRange[0]) }, options));\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n", "import { transform } from '../utils/transform.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n", "import { useMotionValue } from './use-motion-value.mjs';\nimport { useMultiOnChange } from './use-on-change.mjs';\nimport sync from 'framesync';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useMultiOnChange(values, () => sync.update(updateValue, false, true));\n    return value;\n}\n\nexport { useCombineMotionValues };\n", "import { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nfunction useOnChange(value, callback) {\n    useIsomorphicLayoutEffect(() => {\n        if (isMotionValue(value))\n            return value.onChange(callback);\n    }, [callback]);\n}\nfunction useMultiOnChange(values, handler) {\n    useIsomorphicLayoutEffect(() => {\n        const subscriptions = values.map((value) => value.onChange(handler));\n        return () => subscriptions.forEach((unsubscribe) => unsubscribe());\n    });\n}\n\nexport { useMultiOnChange, useOnChange };\n", "import { Group } from './Group.mjs';\nimport { Item } from './Item.mjs';\n\nconst Reorder = {\n    Group,\n    Item,\n};\n\nexport { Reorder };\n", "import { __rest } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport * as React from 'react';\nimport { forwardRef, useRef, useEffect } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/dom/motion.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { checkReorder } from './utils/check-reorder.mjs';\n\nfunction ReorderGroup(_a, externalRef) {\n    var { children, as = \"ul\", axis = \"y\", onReorder, values } = _a, props = __rest(_a, [\"children\", \"as\", \"axis\", \"onReorder\", \"values\"]);\n    const Component = useConstant(() => motion(as));\n    const order = [];\n    const isReordering = useRef(false);\n    invariant(Boolean(values), \"Reorder.Group must be provided a values prop\");\n    const context = {\n        axis,\n        registerItem: (value, layout) => {\n            /**\n             * Ensure entries can't add themselves more than once\n             */\n            if (layout &&\n                order.findIndex((entry) => value === entry.value) === -1) {\n                order.push({ value, layout: layout[axis] });\n                order.sort(compareMin);\n            }\n        },\n        updateOrder: (id, offset, velocity) => {\n            if (isReordering.current)\n                return;\n            const newOrder = checkReorder(order, id, offset, velocity);\n            if (order !== newOrder) {\n                isReordering.current = true;\n                onReorder(newOrder\n                    .map(getValue)\n                    .filter((value) => values.indexOf(value) !== -1));\n            }\n        },\n    };\n    useEffect(() => {\n        isReordering.current = false;\n    });\n    return (React.createElement(Component, Object.assign({}, props, { ref: externalRef }),\n        React.createElement(ReorderContext.Provider, { value: context }, children)));\n}\nconst Group = forwardRef(ReorderGroup);\nfunction getValue(item) {\n    return item.value;\n}\nfunction compareMin(a, b) {\n    return a.layout.min - b.layout.min;\n}\n\nexport { Group, ReorderGroup };\n", "import { createContext } from 'react';\n\nconst ReorderContext = createContext(null);\n\nexport { ReorderContext };\n", "import { mix } from 'popmotion';\nimport { moveItem } from '../../../utils/array.mjs';\n\nfunction checkReorder(order, value, offset, velocity) {\n    if (!velocity)\n        return order;\n    const index = order.findIndex((item) => item.value === value);\n    if (index === -1)\n        return order;\n    const nextOffset = velocity > 0 ? 1 : -1;\n    const nextItem = order[index + nextOffset];\n    if (!nextItem)\n        return order;\n    const item = order[index];\n    const nextLayout = nextItem.layout;\n    const nextItemCenter = mix(nextLayout.min, nextLayout.max, 0.5);\n    if ((nextOffset === 1 && item.layout.max + offset > nextItemCenter) ||\n        (nextOffset === -1 && item.layout.min + offset < nextItemCenter)) {\n        return moveItem(order, index, index + nextOffset);\n    }\n    return order;\n}\n\nexport { checkReorder };\n", "import { __rest } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport * as React from 'react';\nimport { forwardRef, useContext, useRef, useEffect } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/dom/motion.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useMotionValue } from '../../value/use-motion-value.mjs';\nimport { useTransform } from '../../value/use-transform.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction useDefaultMotionValue(value, defaultValue = 0) {\n    return isMotionValue(value) ? value : useMotionValue(defaultValue);\n}\nfunction ReorderItem(_a, externalRef) {\n    var { children, style, value, as = \"li\", onDrag, layout = true } = _a, props = __rest(_a, [\"children\", \"style\", \"value\", \"as\", \"onDrag\", \"layout\"]);\n    const Component = useConstant(() => motion(as));\n    const context = useContext(ReorderContext);\n    const point = {\n        x: useDefaultMotionValue(style === null || style === void 0 ? void 0 : style.x),\n        y: useDefaultMotionValue(style === null || style === void 0 ? void 0 : style.y),\n    };\n    const zIndex = useTransform([point.x, point.y], ([latestX, latestY]) => latestX || latestY ? 1 : \"unset\");\n    const measuredLayout = useRef(null);\n    invariant(Boolean(context), \"Reorder.Item must be a child of Reorder.Group\");\n    const { axis, registerItem, updateOrder } = context;\n    useEffect(() => {\n        registerItem(value, measuredLayout.current);\n    }, [context]);\n    return (React.createElement(Component, Object.assign({ drag: axis }, props, { dragSnapToOrigin: true, style: Object.assign(Object.assign({}, style), { x: point.x, y: point.y, zIndex }), layout: layout, onDrag: (event, gesturePoint) => {\n            const { velocity } = gesturePoint;\n            velocity[axis] &&\n                updateOrder(value, point[axis].get(), velocity[axis]);\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, gesturePoint);\n        }, onLayoutMeasure: (measured) => {\n            measuredLayout.current = measured;\n        }, ref: externalRef }), children));\n}\nconst Item = forwardRef(ReorderItem);\n\nexport { Item, ReorderItem };\n", "import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = Object.assign(Object.assign({ renderer: createDomVisualElement }, animations), gestureAnimations);\n\nexport { domAnimation };\n", "import { drag } from '../../motion/features/drag.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { domAnimation } from './features-animation.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\n/**\n * @public\n */\nconst domMax = Object.assign(Object.assign(Object.assign(Object.assign({}, domAnimation), drag), layoutFeatures), { projectionNodeConstructor: HTMLProjectionNode });\n\nexport { domMax };\n", "import { useCombineMotionValues } from './use-combine-values.mjs';\n\n/**\n * Combine multiple motion values into a new one using a string template literal.\n *\n * ```jsx\n * import {\n *   motion,\n *   useSpring,\n *   useMotionValue,\n *   useMotionTemplate\n * } from \"framer-motion\"\n *\n * function Component() {\n *   const shadowX = useSpring(0)\n *   const shadowY = useMotionValue(0)\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\n *\n *   return <motion.div style={{ filter: shadow }} />\n * }\n * ```\n *\n * @public\n */\nfunction useMotionTemplate(fragments, ...values) {\n    /**\n     * Create a function that will build a string from the latest motion values.\n     */\n    const numFragments = fragments.length;\n    function buildValue() {\n        let output = ``;\n        for (let i = 0; i < numFragments; i++) {\n            output += fragments[i];\n            const value = values[i];\n            if (value)\n                output += values[i].get();\n        }\n        return output;\n    }\n    return useCombineMotionValues(values, buildValue);\n}\n\nexport { useMotionTemplate };\n", "import { useContext, useRef, useMemo } from 'react';\nimport { animate } from 'popmotion';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { useOnChange } from './use-on-change.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source, config = {}) {\n    const { isStatic } = useContext(MotionConfigContext);\n    const activeSpringAnimation = useRef(null);\n    const value = useMotionValue(isMotionValue(source) ? source.get() : source);\n    useMemo(() => {\n        return value.attach((v, set) => {\n            /**\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n             * at that level, but this will work for now\n             */\n            if (isStatic)\n                return set(v);\n            if (activeSpringAnimation.current) {\n                activeSpringAnimation.current.stop();\n            }\n            activeSpringAnimation.current = animate(Object.assign(Object.assign({ from: value.get(), to: v, velocity: value.getVelocity() }, config), { onUpdate: set }));\n            return value.get();\n        });\n    }, [JSON.stringify(config)]);\n    useOnChange(source, (v) => value.set(parseFloat(v)));\n    return value;\n}\n\nexport { useSpring };\n", "import { useEffect } from 'react';\nimport { useMotionValue } from './use-motion-value.mjs';\n\n/**\n * Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.\n *\n * ```javascript\n * const x = useMotionValue(0)\n * const xVelocity = useVelocity(x)\n * const xAcceleration = useVelocity(xVelocity)\n * ```\n *\n * @public\n */\nfunction useVelocity(value) {\n    const velocity = useMotionValue(value.getVelocity());\n    useEffect(() => {\n        return value.velocityUpdateSubscribers.add((newVelocity) => {\n            velocity.set(newVelocity);\n        });\n    }, [value]);\n    return velocity;\n}\n\nexport { useVelocity };\n", "import { __rest } from 'tslib';\nimport { scroll } from '@motionone/dom';\nimport { motionValue } from './index.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nconst createScrollMotionValues = () => ({\n    scrollX: motionValue(0),\n    scrollY: motionValue(0),\n    scrollXProgress: motionValue(0),\n    scrollYProgress: motionValue(0),\n});\nfunction useScroll(_a = {}) {\n    var { container, target } = _a, options = __rest(_a, [\"container\", \"target\"]);\n    const values = useConstant(createScrollMotionValues);\n    useIsomorphicLayoutEffect(() => {\n        return scroll(({ x, y }) => {\n            values.scrollX.set(x.current);\n            values.scrollXProgress.set(x.progress);\n            values.scrollY.set(y.current);\n            values.scrollYProgress.set(y.progress);\n        }, Object.assign(Object.assign({}, options), { container: (container === null || container === void 0 ? void 0 : container.current) || undefined, target: (target === null || target === void 0 ? void 0 : target.current) || undefined }));\n    }, []);\n    return values;\n}\n\nexport { useScroll };\n", "export { animate } from './animate/index.es.js';\nexport { animateStyle } from './animate/animate-style.es.js';\nexport { timeline } from './timeline/index.es.js';\nexport { stagger } from './utils/stagger.es.js';\nexport { spring } from './easing/spring/index.es.js';\nexport { glide } from './easing/glide/index.es.js';\nexport { style } from './animate/style.es.js';\nexport { inView } from './gestures/in-view.es.js';\nexport { resize } from './gestures/resize/index.es.js';\nexport { scroll } from './gestures/scroll/index.es.js';\nexport { ScrollOffset } from './gestures/scroll/offsets/presets.es.js';\nexport { withControls } from './animate/utils/controls.es.js';\nexport { getAnimationData } from './animate/data.es.js';\nexport { getStyleName } from './animate/utils/get-style-name.es.js';\nexport { createMotionState, mountedStates } from './state/index.es.js';\nexport { createStyles } from './animate/utils/style-object.es.js';\nexport { createStyleString } from './animate/utils/style-string.es.js';\n", "import { animateStyle } from './animate-style.es.js';\nimport { getOptions } from './utils/options.es.js';\nimport { resolveElements } from '../utils/resolve-elements.es.js';\nimport { withControls } from './utils/controls.es.js';\nimport { resolveOption } from '../utils/stagger.es.js';\n\nfunction animate(elements, keyframes, options = {}) {\n    elements = resolveElements(elements);\n    const numElements = elements.length;\n    /**\n     * Create and start new animations\n     */\n    const animationFactories = [];\n    for (let i = 0; i < numElements; i++) {\n        const element = elements[i];\n        for (const key in keyframes) {\n            const valueOptions = getOptions(options, key);\n            valueOptions.delay = resolveOption(valueOptions.delay, i, numElements);\n            const animation = animateStyle(element, key, keyframes[key], valueOptions);\n            animationFactories.push(animation);\n        }\n    }\n    return withControls(animationFactories, options, \n    /**\n     * TODO:\n     * If easing is set to spring or glide, duration will be dynamically\n     * generated. Ideally we would dynamically generate this from\n     * animation.effect.getComputedTiming().duration but this isn't\n     * supported in iOS13 or our number polyfill. Perhaps it's possible\n     * to Proxy animations returned from animateStyle that has duration\n     * as a getter.\n     */\n    options.duration);\n}\n\nexport { animate };\n", "import { getAnimationData, getMotionValue } from './data.es.js';\nimport { isCssVar, registerCssVariable } from './utils/css-var.es.js';\nimport { Animation } from '@motionone/animation';\nimport { defaults, isEasingGenerator, isFunction, isEasingList, isNumber, time, noop } from '@motionone/utils';\nimport { isTransform, addTransformToElement, transformDefinitions } from './utils/transforms.es.js';\nimport { convertEasing } from './utils/easing.es.js';\nimport { supports } from './utils/feature-detection.es.js';\nimport { hydrateKeyframes, keyframesList } from './utils/keyframes.es.js';\nimport { style } from './style.es.js';\nimport { getStyleName } from './utils/get-style-name.es.js';\nimport { stopAnimation } from './utils/stop-animation.es.js';\n\nfunction getDevToolsRecord() {\n    return window.__MOTION_DEV_TOOLS_RECORD;\n}\nfunction animateStyle(element, key, keyframesDefinition, options = {}) {\n    const record = getDevToolsRecord();\n    const isRecording = options.record !== false && record;\n    let animation;\n    let { duration = defaults.duration, delay = defaults.delay, endDelay = defaults.endDelay, repeat = defaults.repeat, easing = defaults.easing, direction, offset, allowWebkitAcceleration = false, } = options;\n    const data = getAnimationData(element);\n    const valueIsTransform = isTransform(key);\n    let canAnimateNatively = supports.waapi();\n    /**\n     * If this is an individual transform, we need to map its\n     * key to a CSS variable and update the element's transform style\n     */\n    valueIsTransform && addTransformToElement(element, key);\n    const name = getStyleName(key);\n    const motionValue = getMotionValue(data.values, name);\n    /**\n     * Get definition of value, this will be used to convert numerical\n     * keyframes into the default value type.\n     */\n    const definition = transformDefinitions.get(name);\n    /**\n     * Stop the current animation, if any. Because this will trigger\n     * commitStyles (DOM writes) and we might later trigger DOM reads,\n     * this is fired now and we return a factory function to create\n     * the actual animation that can get called in batch,\n     */\n    stopAnimation(motionValue.animation, !(isEasingGenerator(easing) && motionValue.generator) &&\n        options.record !== false);\n    /**\n     * Batchable factory function containing all DOM reads.\n     */\n    return () => {\n        const readInitialValue = () => { var _a, _b; return (_b = (_a = style.get(element, name)) !== null && _a !== void 0 ? _a : definition === null || definition === void 0 ? void 0 : definition.initialValue) !== null && _b !== void 0 ? _b : 0; };\n        /**\n         * Replace null values with the previous keyframe value, or read\n         * it from the DOM if it's the first keyframe.\n         */\n        let keyframes = hydrateKeyframes(keyframesList(keyframesDefinition), readInitialValue);\n        if (isEasingGenerator(easing)) {\n            const custom = easing.createAnimation(keyframes, readInitialValue, valueIsTransform, name, motionValue);\n            easing = custom.easing;\n            if (custom.keyframes !== undefined)\n                keyframes = custom.keyframes;\n            if (custom.duration !== undefined)\n                duration = custom.duration;\n        }\n        /**\n         * If this is a CSS variable we need to register it with the browser\n         * before it can be animated natively. We also set it with setProperty\n         * rather than directly onto the element.style object.\n         */\n        if (isCssVar(name)) {\n            if (supports.cssRegisterProperty()) {\n                registerCssVariable(name);\n            }\n            else {\n                canAnimateNatively = false;\n            }\n        }\n        /**\n         * If we've been passed a custom easing function, and this browser\n         * does **not** support linear() easing, and the value is a transform\n         * (and thus a pure number) we can still support the custom easing\n         * by falling back to the animation polyfill.\n         */\n        if (valueIsTransform &&\n            !supports.linearEasing() &&\n            (isFunction(easing) || (isEasingList(easing) && easing.some(isFunction)))) {\n            canAnimateNatively = false;\n        }\n        /**\n         * If we can animate this value with WAAPI, do so.\n         */\n        if (canAnimateNatively) {\n            /**\n             * Convert numbers to default value types. Currently this only supports\n             * transforms but it could also support other value types.\n             */\n            if (definition) {\n                keyframes = keyframes.map((value) => isNumber(value) ? definition.toDefaultUnit(value) : value);\n            }\n            /**\n             * If this browser doesn't support partial/implicit keyframes we need to\n             * explicitly provide one.\n             */\n            if (keyframes.length === 1 &&\n                (!supports.partialKeyframes() || isRecording)) {\n                keyframes.unshift(readInitialValue());\n            }\n            const animationOptions = {\n                delay: time.ms(delay),\n                duration: time.ms(duration),\n                endDelay: time.ms(endDelay),\n                easing: !isEasingList(easing)\n                    ? convertEasing(easing, duration)\n                    : undefined,\n                direction,\n                iterations: repeat + 1,\n                fill: \"both\",\n            };\n            animation = element.animate({\n                [name]: keyframes,\n                offset,\n                easing: isEasingList(easing)\n                    ? easing.map((thisEasing) => convertEasing(thisEasing, duration))\n                    : undefined,\n            }, animationOptions);\n            /**\n             * Polyfill finished Promise in browsers that don't support it\n             */\n            if (!animation.finished) {\n                animation.finished = new Promise((resolve, reject) => {\n                    animation.onfinish = resolve;\n                    animation.oncancel = reject;\n                });\n            }\n            const target = keyframes[keyframes.length - 1];\n            animation.finished\n                .then(() => {\n                // Apply styles to target\n                style.set(element, name, target);\n                // Ensure fill modes don't persist\n                animation.cancel();\n            })\n                .catch(noop);\n            /**\n             * This forces Webkit to run animations on the main thread by exploiting\n             * this condition:\n             * https://trac.webkit.org/browser/webkit/trunk/Source/WebCore/platform/graphics/ca/GraphicsLayerCA.cpp?rev=281238#L1099\n             *\n             * This fixes Webkit's timing bugs, like accelerated animations falling\n             * out of sync with main thread animations and massive delays in starting\n             * accelerated animations in WKWebView.\n             */\n            if (!allowWebkitAcceleration)\n                animation.playbackRate = 1.000001;\n            /**\n             * If we can't animate the value natively then we can fallback to the numbers-only\n             * polyfill for transforms.\n             */\n        }\n        else if (valueIsTransform) {\n            /**\n             * If any keyframe is a string (because we measured it from the DOM), we need to convert\n             * it into a number before passing to the Animation polyfill.\n             */\n            keyframes = keyframes.map((value) => typeof value === \"string\" ? parseFloat(value) : value);\n            /**\n             * If we only have a single keyframe, we need to create an initial keyframe by reading\n             * the current value from the DOM.\n             */\n            if (keyframes.length === 1) {\n                keyframes.unshift(parseFloat(readInitialValue()));\n            }\n            const render = (latest) => {\n                if (definition)\n                    latest = definition.toDefaultUnit(latest);\n                style.set(element, name, latest);\n            };\n            animation = new Animation(render, keyframes, Object.assign(Object.assign({}, options), { duration,\n                easing }));\n        }\n        else {\n            const target = keyframes[keyframes.length - 1];\n            style.set(element, name, definition && isNumber(target)\n                ? definition.toDefaultUnit(target)\n                : target);\n        }\n        if (isRecording) {\n            record(element, key, keyframes, {\n                duration,\n                delay: delay,\n                easing,\n                repeat,\n                offset,\n            }, \"motion-one\");\n        }\n        motionValue.setAnimation(animation);\n        return animation;\n    };\n}\n\nexport { animateStyle };\n", "import { MotionValue } from '@motionone/types';\n\nconst data = new WeakMap();\nfunction getAnimationData(element) {\n    if (!data.has(element)) {\n        data.set(element, {\n            transforms: [],\n            values: new Map(),\n        });\n    }\n    return data.get(element);\n}\nfunction getMotionValue(motionValues, name) {\n    if (!motionValues.has(name)) {\n        motionValues.set(name, new MotionValue());\n    }\n    return motionValues.get(name);\n}\n\nexport { getAnimationData, getMotionValue };\n", "export { MotionValue } from './MotionValue.es.js';\n", "/**\n * The MotionValue tracks the state of a single animatable\n * value. Currently, updatedAt and current are unused. The\n * long term idea is to use this to minimise the number\n * of DOM reads, and to abstract the DOM interactions here.\n */\nclass MotionValue {\n    setAnimation(animation) {\n        this.animation = animation;\n        animation === null || animation === void 0 ? void 0 : animation.finished.then(() => this.clearAnimation()).catch(() => { });\n    }\n    clearAnimation() {\n        this.animation = this.generator = undefined;\n    }\n}\n\nexport { MotionValue };\n", "import { transformDefinitions } from './transforms.es.js';\n\nconst isCssVar = (name) => name.startsWith(\"--\");\nconst registeredProperties = new Set();\nfunction registerCssVariable(name) {\n    if (registeredProperties.has(name))\n        return;\n    registeredProperties.add(name);\n    try {\n        const { syntax, initialValue } = transformDefinitions.has(name)\n            ? transformDefinitions.get(name)\n            : {};\n        CSS.registerProperty({\n            name,\n            inherits: false,\n            syntax,\n            initialValue,\n        });\n    }\n    catch (e) { }\n}\n\nexport { isCssVar, registerCssVariable, registeredProperties };\n", "import { noopReturn, addUniqueItem } from '@motionone/utils';\nimport { getAnimationData } from '../data.es.js';\n\n/**\n * A list of all transformable axes. We'll use this list to generated a version\n * of each axes for each transform.\n */\nconst axes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * An ordered array of each transformable value. By default, transform values\n * will be sorted to this order.\n */\nconst order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\nconst transformAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n};\nconst rotation = {\n    syntax: \"<angle>\",\n    initialValue: \"0deg\",\n    toDefaultUnit: (v) => v + \"deg\",\n};\nconst baseTransformProperties = {\n    translate: {\n        syntax: \"<length-percentage>\",\n        initialValue: \"0px\",\n        toDefaultUnit: (v) => v + \"px\",\n    },\n    rotate: rotation,\n    scale: {\n        syntax: \"<number>\",\n        initialValue: 1,\n        toDefaultUnit: noopReturn,\n    },\n    skew: rotation,\n};\nconst transformDefinitions = new Map();\nconst asTransformCssVar = (name) => `--motion-${name}`;\n/**\n * Generate a list of every possible transform key\n */\nconst transforms = [\"x\", \"y\", \"z\"];\norder.forEach((name) => {\n    axes.forEach((axis) => {\n        transforms.push(name + axis);\n        transformDefinitions.set(asTransformCssVar(name + axis), baseTransformProperties[name]);\n    });\n});\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst compareTransformOrder = (a, b) => transforms.indexOf(a) - transforms.indexOf(b);\n/**\n * Provide a quick way to check if a string is the name of a transform\n */\nconst transformLookup = new Set(transforms);\nconst isTransform = (name) => transformLookup.has(name);\nconst addTransformToElement = (element, name) => {\n    // Map x to translateX etc\n    if (transformAlias[name])\n        name = transformAlias[name];\n    const { transforms } = getAnimationData(element);\n    addUniqueItem(transforms, name);\n    /**\n     * TODO: An optimisation here could be to cache the transform in element data\n     * and only update if this has changed.\n     */\n    element.style.transform = buildTransformTemplate(transforms);\n};\nconst buildTransformTemplate = (transforms) => transforms\n    .sort(compareTransformOrder)\n    .reduce(transformListToString, \"\")\n    .trim();\nconst transformListToString = (template, name) => `${template} ${name}(var(${asTransformCssVar(name)}))`;\n\nexport { addTransformToElement, asTransformCssVar, axes, buildTransformTemplate, compareTransformOrder, isTransform, transformAlias, transformDefinitions };\n", "export { addUniqueItem, removeItem } from './array.es.js';\nexport { clamp } from './clamp.es.js';\nexport { defaults } from './defaults.es.js';\nexport { getEasingForSegment } from './easing.es.js';\nexport { interpolate } from './interpolate.es.js';\nexport { isCubicBezier } from './is-cubic-bezier.es.js';\nexport { isEasingGenerator } from './is-easing-generator.es.js';\nexport { isEasingList } from './is-easing-list.es.js';\nexport { isFunction } from './is-function.es.js';\nexport { isNumber } from './is-number.es.js';\nexport { isString } from './is-string.es.js';\nexport { mix } from './mix.es.js';\nexport { noop, noopReturn } from './noop.es.js';\nexport { defaultOffset, fillOffset } from './offset.es.js';\nexport { progress } from './progress.es.js';\nexport { time } from './time.es.js';\nexport { velocityPerSecond } from './velocity.es.js';\nexport { wrap } from './wrap.es.js';\n", "function addUniqueItem(array, item) {\n    array.indexOf(item) === -1 && array.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    index > -1 && arr.splice(index, 1);\n}\n\nexport { addUniqueItem, removeItem };\n", "const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n", "const defaults = {\n    duration: 0.3,\n    delay: 0,\n    endDelay: 0,\n    repeat: 0,\n    easing: \"ease\",\n};\n\nexport { defaults };\n", "import { isEasingList } from './is-easing-list.es.js';\nimport { wrap } from './wrap.es.js';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingList(easing)\n        ? easing[wrap(0, easing.length, i)]\n        : easing;\n}\n\nexport { getEasingForSegment };\n", "import { isNumber } from './is-number.es.js';\n\nconst isEasingList = (easing) => Array.isArray(easing) && !isNumber(easing[0]);\n\nexport { isEasingList };\n", "const isNumber = (value) => typeof value === \"number\";\n\nexport { isNumber };\n", "const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n", "import { mix } from './mix.es.js';\nimport { noopReturn } from './noop.es.js';\nimport { fillOffset, defaultOffset } from './offset.es.js';\nimport { progress } from './progress.es.js';\nimport { getEasingForSegment } from './easing.es.js';\nimport { clamp } from './clamp.es.js';\n\nfunction interpolate(output, input = defaultOffset(output.length), easing = noopReturn) {\n    const length = output.length;\n    /**\n     * If the input length is lower than the output we\n     * fill the input to match. This currently assumes the input\n     * is an animation progress value so is a good candidate for\n     * moving outside the function.\n     */\n    const remainder = length - input.length;\n    remainder > 0 && fillOffset(input, remainder);\n    return (t) => {\n        let i = 0;\n        for (; i < length - 2; i++) {\n            if (t < input[i + 1])\n                break;\n        }\n        let progressInRange = clamp(0, 1, progress(input[i], input[i + 1], t));\n        const segmentEasing = getEasingForSegment(easing, i);\n        progressInRange = segmentEasing(progressInRange);\n        return mix(output[i], output[i + 1], progressInRange);\n    };\n}\n\nexport { interpolate };\n", "const mix = (min, max, progress) => -progress * min + progress * max + min;\n\nexport { mix };\n", "const noop = () => { };\nconst noopReturn = (v) => v;\n\nexport { noop, noopReturn };\n", "import { mix } from './mix.es.js';\nimport { progress } from './progress.es.js';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\nfunction defaultOffset(length) {\n    const offset = [0];\n    fillOffset(offset, length - 1);\n    return offset;\n}\n\nexport { defaultOffset, fillOffset };\n", "const progress = (min, max, value) => max - min === 0 ? 1 : (value - min) / (max - min);\n\nexport { progress };\n", "import { isNumber } from './is-number.es.js';\n\nconst isCubicBezier = (easing) => Array.isArray(easing) && isNumber(easing[0]);\n\nexport { isCubicBezier };\n", "const isEasingGenerator = (easing) => typeof easing === \"object\" &&\n    Boolean(easing.createAnimation);\n\nexport { isEasingGenerator };\n", "const isFunction = (value) => typeof value === \"function\";\n\nexport { isFunction };\n", "const isString = (value) => typeof value === \"string\";\n\nexport { isString };\n", "const time = {\n    ms: (seconds) => seconds * 1000,\n    s: (milliseconds) => milliseconds / 1000,\n};\n\nexport { time };\n", "/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n", "export { Animation } from './Animation.es.js';\nexport { getEasingFunction } from './utils/easing.es.js';\n", "import { noopReturn, defaults, isEasingGenerator, isEasingList, interpolate } from '@motionone/utils';\nimport { getEasingFunction } from './utils/easing.es.js';\n\nclass Animation {\n    constructor(output, keyframes = [0, 1], { easing, duration: initialDuration = defaults.duration, delay = defaults.delay, endDelay = defaults.endDelay, repeat = defaults.repeat, offset, direction = \"normal\", } = {}) {\n        this.startTime = null;\n        this.rate = 1;\n        this.t = 0;\n        this.cancelTimestamp = null;\n        this.easing = noopReturn;\n        this.duration = 0;\n        this.totalDuration = 0;\n        this.repeat = 0;\n        this.playState = \"idle\";\n        this.finished = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n        easing = easing || defaults.easing;\n        if (isEasingGenerator(easing)) {\n            const custom = easing.createAnimation(keyframes);\n            easing = custom.easing;\n            keyframes = custom.keyframes || keyframes;\n            initialDuration = custom.duration || initialDuration;\n        }\n        this.repeat = repeat;\n        this.easing = isEasingList(easing) ? noopReturn : getEasingFunction(easing);\n        this.updateDuration(initialDuration);\n        const interpolate$1 = interpolate(keyframes, offset, isEasingList(easing) ? easing.map(getEasingFunction) : noopReturn);\n        this.tick = (timestamp) => {\n            var _a;\n            // TODO: Temporary fix for OptionsResolver typing\n            delay = delay;\n            let t = 0;\n            if (this.pauseTime !== undefined) {\n                t = this.pauseTime;\n            }\n            else {\n                t = (timestamp - this.startTime) * this.rate;\n            }\n            this.t = t;\n            // Convert to seconds\n            t /= 1000;\n            // Rebase on delay\n            t = Math.max(t - delay, 0);\n            /**\n             * If this animation has finished, set the current time\n             * to the total duration.\n             */\n            if (this.playState === \"finished\" && this.pauseTime === undefined) {\n                t = this.totalDuration;\n            }\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = t / this.duration;\n            // TODO progress += iterationStart\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            iterationProgress === 1 && currentIteration--;\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = currentIteration % 2;\n            if (direction === \"reverse\" ||\n                (direction === \"alternate\" && iterationIsOdd) ||\n                (direction === \"alternate-reverse\" && !iterationIsOdd)) {\n                iterationProgress = 1 - iterationProgress;\n            }\n            const p = t >= this.totalDuration ? 1 : Math.min(iterationProgress, 1);\n            const latest = interpolate$1(this.easing(p));\n            output(latest);\n            const isAnimationFinished = this.pauseTime === undefined &&\n                (this.playState === \"finished\" || t >= this.totalDuration + endDelay);\n            if (isAnimationFinished) {\n                this.playState = \"finished\";\n                (_a = this.resolve) === null || _a === void 0 ? void 0 : _a.call(this, latest);\n            }\n            else if (this.playState !== \"idle\") {\n                this.frameRequestId = requestAnimationFrame(this.tick);\n            }\n        };\n        this.play();\n    }\n    play() {\n        const now = performance.now();\n        this.playState = \"running\";\n        if (this.pauseTime !== undefined) {\n            this.startTime = now - this.pauseTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = now;\n        }\n        this.cancelTimestamp = this.startTime;\n        this.pauseTime = undefined;\n        this.frameRequestId = requestAnimationFrame(this.tick);\n    }\n    pause() {\n        this.playState = \"paused\";\n        this.pauseTime = this.t;\n    }\n    finish() {\n        this.playState = \"finished\";\n        this.tick(0);\n    }\n    stop() {\n        var _a;\n        this.playState = \"idle\";\n        if (this.frameRequestId !== undefined) {\n            cancelAnimationFrame(this.frameRequestId);\n        }\n        (_a = this.reject) === null || _a === void 0 ? void 0 : _a.call(this, false);\n    }\n    cancel() {\n        this.stop();\n        this.tick(this.cancelTimestamp);\n    }\n    reverse() {\n        this.rate *= -1;\n    }\n    commitStyles() { }\n    updateDuration(duration) {\n        this.duration = duration;\n        this.totalDuration = duration * (this.repeat + 1);\n    }\n    get currentTime() {\n        return this.t;\n    }\n    set currentTime(t) {\n        if (this.pauseTime !== undefined || this.rate === 0) {\n            this.pauseTime = t;\n        }\n        else {\n            this.startTime = performance.now() - t / this.rate;\n        }\n    }\n    get playbackRate() {\n        return this.rate;\n    }\n    set playbackRate(rate) {\n        this.rate = rate;\n    }\n}\n\nexport { Animation };\n", "import { cubicBezier, steps } from '@motionone/easing';\nimport { isFunction, isCubicBezier, noopReturn } from '@motionone/utils';\n\nconst namedEasings = {\n    ease: cubicBezier(0.25, 0.1, 0.25, 1.0),\n    \"ease-in\": cubicBezier(0.42, 0.0, 1.0, 1.0),\n    \"ease-in-out\": cubicBezier(0.42, 0.0, 0.58, 1.0),\n    \"ease-out\": cubicBezier(0.0, 0.0, 0.58, 1.0),\n};\nconst functionArgsRegex = /\\((.*?)\\)/;\nfunction getEasingFunction(definition) {\n    // If already an easing function, return\n    if (isFunction(definition))\n        return definition;\n    // If an easing curve definition, return bezier function\n    if (isCubicBezier(definition))\n        return cubicBezier(...definition);\n    // If we have a predefined easing function, return\n    if (namedEasings[definition])\n        return namedEasings[definition];\n    // If this is a steps function, attempt to create easing curve\n    if (definition.startsWith(\"steps\")) {\n        const args = functionArgsRegex.exec(definition);\n        if (args) {\n            const argsArray = args[1].split(\",\");\n            return steps(parseFloat(argsArray[0]), argsArray[1].trim());\n        }\n    }\n    return noopReturn;\n}\n\nexport { getEasingFunction };\n", "export { cubicBezier } from './cubic-bezier.es.js';\nexport { steps } from './steps.es.js';\n", "import { noopReturn } from '@motionone/utils';\n\n/*\n  Bezier function generator\n\n  This has been modified from Ga\u00EBtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) * t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noopReturn;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n", "import { clamp } from '@motionone/utils';\n\nconst steps = (steps, direction = \"end\") => (progress) => {\n    progress =\n        direction === \"end\"\n            ? Math.min(progress, 0.999)\n            : Math.max(progress, 0.001);\n    const expanded = progress * steps;\n    const rounded = direction === \"end\" ? Math.floor(expanded) : Math.ceil(expanded);\n    return clamp(0, 1, rounded / steps);\n};\n\nexport { steps };\n", "import { isFunction, defaults, isCubicBezier, progress } from '@motionone/utils';\nimport { supports } from './feature-detection.es.js';\n\n// Create a linear easing point for every x second\nconst resolution = 0.015;\nconst generateLinearEasingPoints = (easing, duration) => {\n    let points = \"\";\n    const numPoints = Math.round(duration / resolution);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return points.substring(0, points.length - 2);\n};\nconst convertEasing = (easing, duration) => {\n    if (isFunction(easing)) {\n        return supports.linearEasing()\n            ? `linear(${generateLinearEasingPoints(easing, duration)})`\n            : defaults.easing;\n    }\n    else {\n        return isCubicBezier(easing) ? cubicBezierAsString(easing) : easing;\n    }\n};\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { convertEasing, cubicBezierAsString, generateLinearEasingPoints };\n", "const testAnimation = (keyframes, options) => document.createElement(\"div\").animate(keyframes, options);\nconst featureTests = {\n    cssRegisterProperty: () => typeof CSS !== \"undefined\" &&\n        Object.hasOwnProperty.call(CSS, \"registerProperty\"),\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n    partialKeyframes: () => {\n        try {\n            testAnimation({ opacity: [1] });\n        }\n        catch (e) {\n            return false;\n        }\n        return true;\n    },\n    finished: () => Boolean(testAnimation({ opacity: [0, 1] }, { duration: 0.001 }).finished),\n    linearEasing: () => {\n        try {\n            testAnimation({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n        }\n        catch (e) {\n            return false;\n        }\n        return true;\n    },\n};\nconst results = {};\nconst supports = {};\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n", "function hydrateKeyframes(keyframes, readInitialValue) {\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i ? keyframes[i - 1] : readInitialValue();\n        }\n    }\n    return keyframes;\n}\nconst keyframesList = (keyframes) => Array.isArray(keyframes) ? keyframes : [keyframes];\n\nexport { hydrateKeyframes, keyframesList };\n", "import { isCssVar } from './utils/css-var.es.js';\nimport { getStyleName } from './utils/get-style-name.es.js';\nimport { transformDefinitions } from './utils/transforms.es.js';\n\nconst style = {\n    get: (element, name) => {\n        name = getStyleName(name);\n        let value = isCssVar(name)\n            ? element.style.getPropertyValue(name)\n            : getComputedStyle(element)[name];\n        if (!value && value !== 0) {\n            const definition = transformDefinitions.get(name);\n            if (definition)\n                value = definition.initialValue;\n        }\n        return value;\n    },\n    set: (element, name, value) => {\n        name = getStyleName(name);\n        if (isCssVar(name)) {\n            element.style.setProperty(name, value);\n        }\n        else {\n            element.style[name] = value;\n        }\n    },\n};\n\nexport { style };\n", "import { isTransform, asTransformCssVar, transformAlias } from './transforms.es.js';\n\nfunction getStyleName(key) {\n    if (transformAlias[key])\n        key = transformAlias[key];\n    return isTransform(key) ? asTransformCssVar(key) : key;\n}\n\nexport { getStyleName };\n", "function stopAnimation(animation, needsCommit = true) {\n    if (!animation || animation.playState === \"finished\")\n        return;\n    // Suppress error thrown by WAAPI\n    try {\n        if (animation.stop) {\n            animation.stop();\n        }\n        else {\n            needsCommit && animation.commitStyles();\n            animation.cancel();\n        }\n    }\n    catch (e) { }\n}\n\nexport { stopAnimation };\n", "const getOptions = (options, key) => \n/**\n * TODO: Make test for this\n * Always return a new object otherwise delay is overwritten by results of stagger\n * and this results in no stagger\n */\noptions[key] ? Object.assign(Object.assign({}, options), options[key]) : Object.assign({}, options);\n\nexport { getOptions };\n", "function resolveElements(elements, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = document.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = document.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n", "import { defaults, noop, time } from '@motionone/utils';\nimport { stopAnimation } from './stop-animation.es.js';\n\nconst createAnimation = (factory) => factory();\nconst withControls = (animationFactory, options, duration = defaults.duration) => {\n    return new Proxy({\n        animations: animationFactory.map(createAnimation).filter(Boolean),\n        duration,\n        options,\n    }, controls);\n};\n/**\n * TODO:\n * Currently this returns the first animation, ideally it would return\n * the first active animation.\n */\nconst getActiveAnimation = (state) => state.animations[0];\nconst controls = {\n    get: (target, key) => {\n        const activeAnimation = getActiveAnimation(target);\n        switch (key) {\n            case \"duration\":\n                return target.duration;\n            case \"currentTime\":\n                return time.s((activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key]) || 0);\n            case \"playbackRate\":\n            case \"playState\":\n                return activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key];\n            case \"finished\":\n                if (!target.finished) {\n                    target.finished = Promise.all(target.animations.map(selectFinished)).catch(noop);\n                }\n                return target.finished;\n            case \"stop\":\n                return () => {\n                    target.animations.forEach((animation) => stopAnimation(animation));\n                };\n            case \"forEachNative\":\n                /**\n                 * This is for internal use only, fire a callback for each\n                 * underlying animation.\n                 */\n                return (callback) => {\n                    target.animations.forEach((animation) => callback(animation, target));\n                };\n            default:\n                return typeof (activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key]) === \"undefined\"\n                    ? undefined\n                    : () => target.animations.forEach((animation) => animation[key]());\n        }\n    },\n    set: (target, key, value) => {\n        switch (key) {\n            case \"currentTime\":\n                value = time.ms(value);\n            case \"currentTime\":\n            case \"playbackRate\":\n                for (let i = 0; i < target.animations.length; i++) {\n                    target.animations[i][key] = value;\n                }\n                return true;\n        }\n        return false;\n    },\n};\nconst selectFinished = (animation) => animation.finished;\n\nexport { controls, withControls };\n", "import { isNumber, isFunction } from '@motionone/utils';\nimport { getEasingFunction } from '@motionone/animation';\n\nfunction stagger(duration = 0.1, { start = 0, from = 0, easing } = {}) {\n    return (i, total) => {\n        const fromIndex = isNumber(from) ? from : getFromIndex(from, total);\n        const distance = Math.abs(fromIndex - i);\n        let delay = duration * distance;\n        if (easing) {\n            const maxDelay = total * duration;\n            const easingFunction = getEasingFunction(easing);\n            delay = easingFunction(delay / maxDelay) * maxDelay;\n        }\n        return start + delay;\n    };\n}\nfunction getFromIndex(from, total) {\n    if (from === \"first\") {\n        return 0;\n    }\n    else {\n        const lastIndex = total - 1;\n        return from === \"last\" ? lastIndex : lastIndex / 2;\n    }\n}\nfunction resolveOption(option, i, total) {\n    return isFunction(option) ? option(i, total) : option;\n}\n\nexport { getFromIndex, resolveOption, stagger };\n", "import { __rest } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport { isString, defaults, isEasingGenerator, defaultOffset, fillOffset, progress } from '@motionone/utils';\nimport { resolveOption } from '../utils/stagger.es.js';\nimport { animateStyle } from '../animate/animate-style.es.js';\nimport { withControls } from '../animate/utils/controls.es.js';\nimport { keyframesList } from '../animate/utils/keyframes.es.js';\nimport { getOptions } from '../animate/utils/options.es.js';\nimport { resolveElements } from '../utils/resolve-elements.es.js';\nimport { isTransform } from '../animate/utils/transforms.es.js';\nimport { calcNextTime } from './utils/calc-time.es.js';\nimport { addKeyframes } from './utils/edit.es.js';\nimport { compareByTime } from './utils/sort.es.js';\n\nfunction timeline(definition, options = {}) {\n    var _a;\n    const animationDefinitions = createAnimationsFromTimeline(definition, options);\n    /**\n     * Create and start animations\n     */\n    const animationFactories = animationDefinitions\n        .map((definition) => animateStyle(...definition))\n        .filter(Boolean);\n    return withControls(animationFactories, options, \n    // Get the duration from the first animation definition\n    (_a = animationDefinitions[0]) === null || _a === void 0 ? void 0 : _a[3].duration);\n}\nfunction createAnimationsFromTimeline(definition, _a = {}) {\n    var { defaultOptions = {} } = _a, timelineOptions = __rest(_a, [\"defaultOptions\"]);\n    const animationDefinitions = [];\n    const elementSequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the definition array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (let i = 0; i < definition.length; i++) {\n        const segment = definition[i];\n        /**\n         * If this is a timeline label, mark it and skip the rest of this iteration.\n         */\n        if (isString(segment)) {\n            timeLabels.set(segment, currentTime);\n            continue;\n        }\n        else if (!Array.isArray(segment)) {\n            timeLabels.set(segment.name, calcNextTime(currentTime, segment.at, prevTime, timeLabels));\n            continue;\n        }\n        const [elementDefinition, keyframes, options = {}] = segment;\n        /**\n         * If a relative or absolute time value has been specified we need to resolve\n         * it in relation to the currentTime.\n         */\n        if (options.at !== undefined) {\n            currentTime = calcNextTime(currentTime, options.at, prevTime, timeLabels);\n        }\n        /**\n         * Keep track of the maximum duration in this definition. This will be\n         * applied to currentTime once the definition has been parsed.\n         */\n        let maxDuration = 0;\n        /**\n         * Find all the elements specified in the definition and parse value\n         * keyframes from their timeline definitions.\n         */\n        const elements = resolveElements(elementDefinition, elementCache);\n        const numElements = elements.length;\n        for (let elementIndex = 0; elementIndex < numElements; elementIndex++) {\n            const element = elements[elementIndex];\n            const elementSequence = getElementSequence(element, elementSequences);\n            for (const key in keyframes) {\n                const valueSequence = getValueSequence(key, elementSequence);\n                let valueKeyframes = keyframesList(keyframes[key]);\n                const valueOptions = getOptions(options, key);\n                let { duration = defaultOptions.duration || defaults.duration, easing = defaultOptions.easing || defaults.easing, } = valueOptions;\n                if (isEasingGenerator(easing)) {\n                    const valueIsTransform = isTransform(key);\n                    invariant(valueKeyframes.length === 2 || !valueIsTransform, \"spring must be provided 2 keyframes within timeline\");\n                    const custom = easing.createAnimation(valueKeyframes, \n                    // TODO We currently only support explicit keyframes\n                    // so this doesn't currently read from the DOM\n                    () => \"0\", valueIsTransform);\n                    easing = custom.easing;\n                    if (custom.keyframes !== undefined)\n                        valueKeyframes = custom.keyframes;\n                    if (custom.duration !== undefined)\n                        duration = custom.duration;\n                }\n                const delay = resolveOption(options.delay, elementIndex, numElements) || 0;\n                const startTime = currentTime + delay;\n                const targetTime = startTime + duration;\n                /**\n                 *\n                 */\n                let { offset = defaultOffset(valueKeyframes.length) } = valueOptions;\n                /**\n                 * If there's only one offset of 0, fill in a second with length 1\n                 *\n                 * TODO: Ensure there's a test that covers this removal\n                 */\n                if (offset.length === 1 && offset[0] === 0) {\n                    offset[1] = 1;\n                }\n                /**\n                 * Fill out if offset if fewer offsets than keyframes\n                 */\n                const remainder = length - valueKeyframes.length;\n                remainder > 0 && fillOffset(offset, remainder);\n                /**\n                 * If only one value has been set, ie [1], push a null to the start of\n                 * the keyframe array. This will let us mark a keyframe at this point\n                 * that will later be hydrated with the previous value.\n                 */\n                valueKeyframes.length === 1 && valueKeyframes.unshift(null);\n                /**\n                 * Add keyframes, mapping offsets to absolute time.\n                 */\n                addKeyframes(valueSequence, valueKeyframes, easing, offset, startTime, targetTime);\n                maxDuration = Math.max(delay + duration, maxDuration);\n                totalDuration = Math.max(targetTime, totalDuration);\n            }\n        }\n        prevTime = currentTime;\n        currentTime += maxDuration;\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    elementSequences.forEach((valueSequences, element) => {\n        for (const key in valueSequences) {\n            const valueSequence = valueSequences[key];\n            /**\n             * Arrange all the keyframes in ascending time order.\n             */\n            valueSequence.sort(compareByTime);\n            const keyframes = [];\n            const valueOffset = [];\n            const valueEasing = [];\n            /**\n             * For each keyframe, translate absolute times into\n             * relative offsets based on the total duration of the timeline.\n             */\n            for (let i = 0; i < valueSequence.length; i++) {\n                const { at, value, easing } = valueSequence[i];\n                keyframes.push(value);\n                valueOffset.push(progress(0, totalDuration, at));\n                valueEasing.push(easing || defaults.easing);\n            }\n            /**\n             * If the first keyframe doesn't land on offset: 0\n             * provide one by duplicating the initial keyframe. This ensures\n             * it snaps to the first keyframe when the animation starts.\n             */\n            if (valueOffset[0] !== 0) {\n                valueOffset.unshift(0);\n                keyframes.unshift(keyframes[0]);\n                valueEasing.unshift(\"linear\");\n            }\n            /**\n             * If the last keyframe doesn't land on offset: 1\n             * provide one with a null wildcard value. This will ensure it\n             * stays static until the end of the animation.\n             */\n            if (valueOffset[valueOffset.length - 1] !== 1) {\n                valueOffset.push(1);\n                keyframes.push(null);\n            }\n            animationDefinitions.push([\n                element,\n                key,\n                keyframes,\n                Object.assign(Object.assign(Object.assign({}, defaultOptions), { duration: totalDuration, easing: valueEasing, offset: valueOffset }), timelineOptions),\n            ]);\n        }\n    });\n    return animationDefinitions;\n}\nfunction getElementSequence(element, sequences) {\n    !sequences.has(element) && sequences.set(element, {});\n    return sequences.get(element);\n}\nfunction getValueSequence(name, sequences) {\n    if (!sequences[name])\n        sequences[name] = [];\n    return sequences[name];\n}\n\nexport { createAnimationsFromTimeline, timeline };\n", "import { isNumber } from '@motionone/utils';\n\nfunction calcNextTime(current, next, prev, labels) {\n    var _a;\n    if (isNumber(next)) {\n        return next;\n    }\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) {\n        return Math.max(0, current + parseFloat(next));\n    }\n    else if (next === \"<\") {\n        return prev;\n    }\n    else {\n        return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n    }\n}\n\nexport { calcNextTime };\n", "import { mix, getEasingForSegment, removeItem } from '@motionone/utils';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mix(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nexport { addKeyframes, eraseKeyframes };\n", "function compareByTime(a, b) {\n    if (a.at === b.at) {\n        return a.value === null ? 1 : -1;\n    }\n    else {\n        return a.at - b.at;\n    }\n}\n\nexport { compareByTime };\n", "import { spring as spring$1 } from '@motionone/generators';\nimport { createGeneratorEasing } from '../create-generator-easing.es.js';\n\nconst spring = createGeneratorEasing(spring$1);\n\nexport { spring };\n", "export { glide } from './glide/index.es.js';\nexport { spring } from './spring/index.es.js';\nexport { pregenerateKeyframes } from './utils/pregenerate-keyframes.es.js';\nexport { calcGeneratorVelocity } from './utils/velocity.es.js';\n", "import { time } from '@motionone/utils';\nimport { calcGeneratorVelocity } from '../utils/velocity.es.js';\nimport { spring } from '../spring/index.es.js';\n\nconst glide = ({ from = 0, velocity = 0.0, power = 0.8, decay = 0.325, bounceDamping, bounceStiffness, changeTarget, min, max, restDistance = 0.5, restSpeed, }) => {\n    decay = time.ms(decay);\n    const state = {\n        hasReachedTarget: false,\n        done: false,\n        current: from,\n        target: from,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = from + amplitude;\n    const target = changeTarget === undefined ? ideal : changeTarget(ideal);\n    state.target = target;\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - from;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / decay);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDistance;\n        state.current = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.current))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            from: state.current,\n            to: nearestBoundary(state.current),\n            velocity: calcGeneratorVelocity(calcLatest, t, state.current),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDistance,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return (t) => {\n        /**\n         * We need to resolve the friction to figure out if we need a\n         * spring but we don't want to do this twice per frame. So here\n         * we flag if we updated for this frame and later if we did\n         * we can skip doing it again.\n         */\n        let hasUpdatedFrame = false;\n        if (!spring$1 && timeReachedBoundary === undefined) {\n            hasUpdatedFrame = true;\n            applyFriction(t);\n            checkCatchBoundary(t);\n        }\n        /**\n         * If we have a spring and the provided t is beyond the moment the friction\n         * animation crossed the min/max boundary, use the spring.\n         */\n        if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n            state.hasReachedTarget = true;\n            return spring$1(t - timeReachedBoundary);\n        }\n        else {\n            state.hasReachedTarget = false;\n            !hasUpdatedFrame && applyFriction(t);\n            return state;\n        }\n    };\n};\n\nexport { glide };\n", "import { velocityPerSecond } from '@motionone/utils';\n\nconst sampleT = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - sampleT, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n", "import { time } from '@motionone/utils';\nimport { defaults } from './defaults.es.js';\nimport { calcDampingRatio } from './utils.es.js';\nimport { hasReachedTarget } from '../utils/has-reached-target.es.js';\nimport { calcGeneratorVelocity } from '../utils/velocity.es.js';\n\nconst spring = ({ stiffness = defaults.stiffness, damping = defaults.damping, mass = defaults.mass, from = 0, to = 1, velocity = 0.0, restSpeed = 2, restDistance = 0.5, } = {}) => {\n    velocity = velocity ? time.s(velocity) : 0.0;\n    const state = {\n        done: false,\n        hasReachedTarget: false,\n        current: from,\n        target: to,\n    };\n    const initialDelta = to - from;\n    const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n    const dampingRatio = calcDampingRatio(stiffness, damping, mass);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = undampedAngularFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n        // Underdamped spring (bouncy)\n        resolveSpring = (t) => to -\n            Math.exp(-dampingRatio * undampedAngularFreq * t) *\n                (((-velocity + dampingRatio * undampedAngularFreq * initialDelta) /\n                    angularFreq) *\n                    Math.sin(angularFreq * t) +\n                    initialDelta * Math.cos(angularFreq * t));\n    }\n    else {\n        // Critically damped spring\n        resolveSpring = (t) => {\n            return (to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta + (-velocity + undampedAngularFreq * initialDelta) * t));\n        };\n    }\n    return (t) => {\n        state.current = resolveSpring(t);\n        const currentVelocity = t === 0\n            ? velocity\n            : calcGeneratorVelocity(resolveSpring, t, state.current);\n        const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n        const isBelowDisplacementThreshold = Math.abs(to - state.current) <= restDistance;\n        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n        state.hasReachedTarget = hasReachedTarget(from, to, state.current);\n        return state;\n    };\n};\n\nexport { spring };\n", "const defaults = {\n    stiffness: 100.0,\n    damping: 10.0,\n    mass: 1.0,\n};\n\nexport { defaults };\n", "import { defaults } from './defaults.es.js';\n\nconst calcDampingRatio = (stiffness = defaults.stiffness, damping = defaults.damping, mass = defaults.mass) => damping / (2 * Math.sqrt(stiffness * mass));\n\nexport { calcDampingRatio };\n", "function hasReachedTarget(origin, target, current) {\n    return ((origin < target && current >= target) ||\n        (origin > target && current <= target));\n}\n\nexport { hasReachedTarget };\n", "import { noopReturn } from '@motionone/utils';\n\nconst timeStep = 10;\nconst maxDuration = 10000;\nfunction pregenerateKeyframes(generator, toUnit = noopReturn) {\n    let overshootDuration = undefined;\n    let timestamp = timeStep;\n    let state = generator(0);\n    const keyframes = [toUnit(state.current)];\n    while (!state.done && timestamp < maxDuration) {\n        state = generator(timestamp);\n        keyframes.push(toUnit(state.done ? state.target : state.current));\n        if (overshootDuration === undefined && state.hasReachedTarget) {\n            overshootDuration = timestamp;\n        }\n        timestamp += timeStep;\n    }\n    const duration = timestamp - timeStep;\n    /**\n     * If generating an animation that didn't actually move,\n     * generate a second keyframe so we have an origin and target.\n     */\n    if (keyframes.length === 1)\n        keyframes.push(state.current);\n    return {\n        keyframes,\n        duration: duration / 1000,\n        overshootDuration: (overshootDuration !== null && overshootDuration !== void 0 ? overshootDuration : duration) / 1000,\n    };\n}\n\nexport { pregenerateKeyframes };\n", "import { calcGeneratorVelocity, pregenerateKeyframes } from '@motionone/generators';\n\nfunction createGeneratorEasing(createGenerator) {\n    const keyframesCache = new WeakMap();\n    return (options = {}) => {\n        const generatorCache = new Map();\n        const getGenerator = (from = 0, to = 100, velocity = 0, isScale = false) => {\n            const key = `${from}-${to}-${velocity}-${isScale}`;\n            if (!generatorCache.has(key)) {\n                generatorCache.set(key, createGenerator(Object.assign({ from,\n                    to,\n                    velocity, restSpeed: isScale ? 0.05 : 2, restDistance: isScale ? 0.01 : 0.5 }, options)));\n            }\n            return generatorCache.get(key);\n        };\n        const getKeyframes = (generator) => {\n            if (!keyframesCache.has(generator)) {\n                keyframesCache.set(generator, pregenerateKeyframes(generator));\n            }\n            return keyframesCache.get(generator);\n        };\n        return {\n            createAnimation: (keyframes, getOrigin, canUseGenerator, name, motionValue) => {\n                var _a, _b;\n                let settings;\n                const numKeyframes = keyframes.length;\n                let shouldUseGenerator = canUseGenerator &&\n                    numKeyframes <= 2 &&\n                    keyframes.every(isNumberOrNull);\n                if (shouldUseGenerator) {\n                    const target = keyframes[numKeyframes - 1];\n                    const unresolvedOrigin = numKeyframes === 1 ? null : keyframes[0];\n                    let velocity = 0;\n                    let origin = 0;\n                    const prevGenerator = motionValue === null || motionValue === void 0 ? void 0 : motionValue.generator;\n                    if (prevGenerator) {\n                        /**\n                         * If we have a generator for this value we can use it to resolve\n                         * the animations's current value and velocity.\n                         */\n                        const { animation, generatorStartTime } = motionValue;\n                        const startTime = (animation === null || animation === void 0 ? void 0 : animation.startTime) || generatorStartTime || 0;\n                        const currentTime = (animation === null || animation === void 0 ? void 0 : animation.currentTime) || performance.now() - startTime;\n                        const prevGeneratorCurrent = prevGenerator(currentTime).current;\n                        origin = (_a = unresolvedOrigin) !== null && _a !== void 0 ? _a : prevGeneratorCurrent;\n                        if (numKeyframes === 1 ||\n                            (numKeyframes === 2 && keyframes[0] === null)) {\n                            velocity = calcGeneratorVelocity((t) => prevGenerator(t).current, currentTime, prevGeneratorCurrent);\n                        }\n                    }\n                    else {\n                        origin = (_b = unresolvedOrigin) !== null && _b !== void 0 ? _b : parseFloat(getOrigin());\n                    }\n                    const generator = getGenerator(origin, target, velocity, name === null || name === void 0 ? void 0 : name.includes(\"scale\"));\n                    const keyframesMetadata = getKeyframes(generator);\n                    settings = Object.assign(Object.assign({}, keyframesMetadata), { easing: \"linear\" });\n                    // TODO Add test for this\n                    if (motionValue) {\n                        motionValue.generator = generator;\n                        motionValue.generatorStartTime = performance.now();\n                    }\n                }\n                else {\n                    const keyframesMetadata = getKeyframes(getGenerator(0, 100));\n                    settings = {\n                        easing: \"ease\",\n                        duration: keyframesMetadata.overshootDuration,\n                    };\n                }\n                return settings;\n            },\n        };\n    };\n}\nconst isNumberOrNull = (value) => typeof value !== \"string\";\n\nexport { createGeneratorEasing };\n", "import { glide as glide$1 } from '@motionone/generators';\nimport { createGeneratorEasing } from '../create-generator-easing.es.js';\n\nconst glide = createGeneratorEasing(glide$1);\n\nexport { glide };\n", "import { resolveElements } from '../utils/resolve-elements.es.js';\nimport { isFunction } from '@motionone/utils';\n\nconst thresholds = {\n    any: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"any\" } = {}) {\n    /**\n     * If this browser doesn't support IntersectionObserver, return a dummy stop function.\n     * Default triggering of onStart is tricky - it could be used for starting/stopping\n     * videos, lazy loading content etc. We could provide an option to enable a fallback, or\n     * provide a fallback callback option.\n     */\n    if (typeof IntersectionObserver === \"undefined\") {\n        return () => { };\n    }\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (isFunction(newOnEnd)) {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (onEnd) {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n", "import { resizeElement } from './handle-element.es.js';\nimport { resizeWindow } from './handle-window.es.js';\nimport { isFunction } from '@motionone/utils';\n\nfunction resize(a, b) {\n    return isFunction(a) ? resizeWindow(a) : resizeElement(a, b);\n}\n\nexport { resize };\n", "import { resolveElements } from '../../utils/resolve-elements.es.js';\n\nconst resizeHandlers = new WeakMap();\nlet observer;\nfunction getElementSize(target, borderBoxSize) {\n    if (borderBoxSize) {\n        const { inlineSize, blockSize } = borderBoxSize[0];\n        return { width: inlineSize, height: blockSize };\n    }\n    else if (target instanceof SVGElement && \"getBBox\" in target) {\n        return target.getBBox();\n    }\n    else {\n        return {\n            width: target.offsetWidth,\n            height: target.offsetHeight,\n        };\n    }\n}\nfunction notifyTarget({ target, contentRect, borderBoxSize, }) {\n    var _a;\n    (_a = resizeHandlers.get(target)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => {\n        handler({\n            target,\n            contentSize: contentRect,\n            get size() {\n                return getElementSize(target, borderBoxSize);\n            },\n        });\n    });\n}\nfunction notifyAll(entries) {\n    entries.forEach(notifyTarget);\n}\nfunction createResizeObserver() {\n    if (typeof ResizeObserver === \"undefined\")\n        return;\n    observer = new ResizeObserver(notifyAll);\n}\nfunction resizeElement(target, handler) {\n    if (!observer)\n        createResizeObserver();\n    const elements = resolveElements(target);\n    elements.forEach((element) => {\n        let elementHandlers = resizeHandlers.get(element);\n        if (!elementHandlers) {\n            elementHandlers = new Set();\n            resizeHandlers.set(element, elementHandlers);\n        }\n        elementHandlers.add(handler);\n        observer === null || observer === void 0 ? void 0 : observer.observe(element);\n    });\n    return () => {\n        elements.forEach((element) => {\n            const elementHandlers = resizeHandlers.get(element);\n            elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.delete(handler);\n            if (!(elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.size)) {\n                observer === null || observer === void 0 ? void 0 : observer.unobserve(element);\n            }\n        });\n    };\n}\n\nexport { resizeElement };\n", "const windowCallbacks = new Set();\nlet windowResizeHandler;\nfunction createWindowResizeHandler() {\n    windowResizeHandler = () => {\n        const size = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n        const info = {\n            target: window,\n            size,\n            contentSize: size,\n        };\n        windowCallbacks.forEach((callback) => callback(info));\n    };\n    window.addEventListener(\"resize\", windowResizeHandler);\n}\nfunction resizeWindow(callback) {\n    windowCallbacks.add(callback);\n    if (!windowResizeHandler)\n        createWindowResizeHandler();\n    return () => {\n        windowCallbacks.delete(callback);\n        if (!windowCallbacks.size && windowResizeHandler) {\n            windowResizeHandler = undefined;\n        }\n    };\n}\n\nexport { resizeWindow };\n", "import { __rest } from 'tslib';\nimport { resize } from '../resize/index.es.js';\nimport { createScrollInfo } from './info.es.js';\nimport { createOnScrollHandler } from './on-scroll-handler.es.js';\n\nconst scrollListeners = new WeakMap();\nconst resizeListeners = new WeakMap();\nconst onScrollHandlers = new WeakMap();\nconst getEventTarget = (element) => element === document.documentElement ? window : element;\nfunction scroll(onScroll, _a = {}) {\n    var { container = document.documentElement } = _a, options = __rest(_a, [\"container\"]);\n    let containerHandlers = onScrollHandlers.get(container);\n    /**\n     * Get the onScroll handlers for this container.\n     * If one isn't found, create a new one.\n     */\n    if (!containerHandlers) {\n        containerHandlers = new Set();\n        onScrollHandlers.set(container, containerHandlers);\n    }\n    /**\n     * Create a new onScroll handler for the provided callback.\n     */\n    const info = createScrollInfo();\n    const containerHandler = createOnScrollHandler(container, onScroll, info, options);\n    containerHandlers.add(containerHandler);\n    /**\n     * Check if there's a scroll event listener for this container.\n     * If not, create one.\n     */\n    if (!scrollListeners.has(container)) {\n        const listener = () => {\n            const time = performance.now();\n            for (const handler of containerHandlers)\n                handler.measure();\n            for (const handler of containerHandlers)\n                handler.update(time);\n            for (const handler of containerHandlers)\n                handler.notify();\n        };\n        scrollListeners.set(container, listener);\n        const target = getEventTarget(container);\n        window.addEventListener(\"resize\", listener, { passive: true });\n        if (container !== document.documentElement) {\n            resizeListeners.set(container, resize(container, listener));\n        }\n        target.addEventListener(\"scroll\", listener, { passive: true });\n    }\n    const listener = scrollListeners.get(container);\n    const onLoadProcesss = requestAnimationFrame(listener);\n    return () => {\n        var _a;\n        if (typeof onScroll !== \"function\")\n            onScroll.stop();\n        cancelAnimationFrame(onLoadProcesss);\n        /**\n         * Check if we even have any handlers for this container.\n         */\n        const containerHandlers = onScrollHandlers.get(container);\n        if (!containerHandlers)\n            return;\n        containerHandlers.delete(containerHandler);\n        if (containerHandlers.size)\n            return;\n        /**\n         * If no more handlers, remove the scroll listener too.\n         */\n        const listener = scrollListeners.get(container);\n        scrollListeners.delete(container);\n        if (listener) {\n            getEventTarget(container).removeEventListener(\"scroll\", listener);\n            (_a = resizeListeners.get(container)) === null || _a === void 0 ? void 0 : _a();\n            window.removeEventListener(\"resize\", listener);\n        }\n    };\n}\n\nexport { scroll };\n", "import { progress, velocityPerSecond } from '@motionone/utils';\n\n/**\n * A time in milliseconds, beyond which we consider the scroll velocity to be 0.\n */\nconst maxElapsed = 50;\nconst createAxisInfo = () => ({\n    current: 0,\n    offset: [],\n    progress: 0,\n    scrollLength: 0,\n    targetOffset: 0,\n    targetLength: 0,\n    containerLength: 0,\n    velocity: 0,\n});\nconst createScrollInfo = () => ({\n    time: 0,\n    x: createAxisInfo(),\n    y: createAxisInfo(),\n});\nconst keys = {\n    x: {\n        length: \"Width\",\n        position: \"Left\",\n    },\n    y: {\n        length: \"Height\",\n        position: \"Top\",\n    },\n};\nfunction updateAxisInfo(element, axisName, info, time) {\n    const axis = info[axisName];\n    const { length, position } = keys[axisName];\n    const prev = axis.current;\n    const prevTime = info.time;\n    axis.current = element[\"scroll\" + position];\n    axis.scrollLength = element[\"scroll\" + length] - element[\"client\" + length];\n    axis.offset.length = 0;\n    axis.offset[0] = 0;\n    axis.offset[1] = axis.scrollLength;\n    axis.progress = progress(0, axis.scrollLength, axis.current);\n    const elapsed = time - prevTime;\n    axis.velocity =\n        elapsed > maxElapsed ? 0 : velocityPerSecond(axis.current - prev, elapsed);\n}\nfunction updateScrollInfo(element, info, time) {\n    updateAxisInfo(element, \"x\", info, time);\n    updateAxisInfo(element, \"y\", info, time);\n    info.time = time;\n}\n\nexport { createScrollInfo, updateScrollInfo };\n", "import { isFunction, noopReturn } from '@motionone/utils';\nimport { updateScrollInfo } from './info.es.js';\nimport { resolveOffsets } from './offsets/index.es.js';\n\nfunction measure(container, target = container, info) {\n    /**\n     * Find inset of target within scrollable container\n     */\n    info.x.targetOffset = 0;\n    info.y.targetOffset = 0;\n    if (target !== container) {\n        let node = target;\n        while (node && node != container) {\n            info.x.targetOffset += node.offsetLeft;\n            info.y.targetOffset += node.offsetTop;\n            node = node.offsetParent;\n        }\n    }\n    info.x.targetLength =\n        target === container ? target.scrollWidth : target.clientWidth;\n    info.y.targetLength =\n        target === container ? target.scrollHeight : target.clientHeight;\n    info.x.containerLength = container.clientWidth;\n    info.y.containerLength = container.clientHeight;\n}\nfunction createOnScrollHandler(element, onScroll, info, options = {}) {\n    const axis = options.axis || \"y\";\n    return {\n        measure: () => measure(element, options.target, info),\n        update: (time) => {\n            updateScrollInfo(element, info, time);\n            if (options.offset || options.target) {\n                resolveOffsets(element, info, options);\n            }\n        },\n        notify: isFunction(onScroll)\n            ? () => onScroll(info)\n            : scrubAnimation(onScroll, info[axis]),\n    };\n}\nfunction scrubAnimation(controls, axisInfo) {\n    controls.pause();\n    controls.forEachNative((animation, { easing }) => {\n        var _a, _b;\n        if (animation.updateDuration) {\n            if (!easing)\n                animation.easing = noopReturn;\n            animation.updateDuration(1);\n        }\n        else {\n            const timingOptions = { duration: 1000 };\n            if (!easing)\n                timingOptions.easing = \"linear\";\n            (_b = (_a = animation.effect) === null || _a === void 0 ? void 0 : _a.updateTiming) === null || _b === void 0 ? void 0 : _b.call(_a, timingOptions);\n        }\n    });\n    return () => {\n        controls.currentTime = axisInfo.progress;\n    };\n}\n\nexport { createOnScrollHandler };\n", "import { interpolate, defaultOffset } from '@motionone/utils';\nimport { calcInset } from './inset.es.js';\nimport { ScrollOffset } from './presets.es.js';\nimport { resolveOffset } from './offset.es.js';\n\nconst point = { x: 0, y: 0 };\nfunction resolveOffsets(container, info, options) {\n    let { offset: offsetDefinition = ScrollOffset.All } = options;\n    const { target = container, axis = \"y\" } = options;\n    const lengthLabel = axis === \"y\" ? \"height\" : \"width\";\n    const inset = target !== container ? calcInset(target, container) : point;\n    /**\n     * Measure the target and container. If they're the same thing then we\n     * use the container's scrollWidth/Height as the target, from there\n     * all other calculations can remain the same.\n     */\n    const targetSize = target === container\n        ? { width: container.scrollWidth, height: container.scrollHeight }\n        : { width: target.clientWidth, height: target.clientHeight };\n    const containerSize = {\n        width: container.clientWidth,\n        height: container.clientHeight,\n    };\n    /**\n     * Reset the length of the resolved offset array rather than creating a new one.\n     * TODO: More reusable data structures for targetSize/containerSize would also be good.\n     */\n    info[axis].offset.length = 0;\n    /**\n     * Populate the offset array by resolving the user's offset definition into\n     * a list of pixel scroll offets.\n     */\n    let hasChanged = !info[axis].interpolate;\n    const numOffsets = offsetDefinition.length;\n    for (let i = 0; i < numOffsets; i++) {\n        const offset = resolveOffset(offsetDefinition[i], containerSize[lengthLabel], targetSize[lengthLabel], inset[axis]);\n        if (!hasChanged && offset !== info[axis].interpolatorOffsets[i]) {\n            hasChanged = true;\n        }\n        info[axis].offset[i] = offset;\n    }\n    /**\n     * If the pixel scroll offsets have changed, create a new interpolator function\n     * to map scroll value into a progress.\n     */\n    if (hasChanged) {\n        info[axis].interpolate = interpolate(defaultOffset(numOffsets), info[axis].offset);\n        info[axis].interpolatorOffsets = [...info[axis].offset];\n    }\n    info[axis].progress = info[axis].interpolate(info[axis].current);\n}\n\nexport { resolveOffsets };\n", "function calcInset(element, container) {\n    let inset = { x: 0, y: 0 };\n    let current = element;\n    while (current && current !== container) {\n        if (current instanceof HTMLElement) {\n            inset.x += current.offsetLeft;\n            inset.y += current.offsetTop;\n            current = current.offsetParent;\n        }\n        else if (current instanceof SVGGraphicsElement && \"getBBox\" in current) {\n            const { top, left } = current.getBBox();\n            inset.x += left;\n            inset.y += top;\n            /**\n             * Assign the next parent element as the <svg /> tag.\n             */\n            while (current && current.tagName !== \"svg\") {\n                current = current.parentNode;\n            }\n        }\n    }\n    return inset;\n}\n\nexport { calcInset };\n", "const ScrollOffset = {\n    Enter: [\n        [0, 1],\n        [1, 1],\n    ],\n    Exit: [\n        [0, 0],\n        [1, 0],\n    ],\n    Any: [\n        [1, 0],\n        [0, 1],\n    ],\n    All: [\n        [0, 0],\n        [1, 1],\n    ],\n};\n\nexport { ScrollOffset };\n", "import { isNumber, isString } from '@motionone/utils';\nimport { resolveEdge, namedEdges } from './edge.es.js';\n\nconst defaultOffset = [0, 0];\nfunction resolveOffset(offset, containerLength, targetLength, targetInset) {\n    let offsetDefinition = Array.isArray(offset) ? offset : defaultOffset;\n    let targetPoint = 0;\n    let containerPoint = 0;\n    if (isNumber(offset)) {\n        /**\n         * If we're provided offset: [0, 0.5, 1] then each number x should become\n         * [x, x], so we default to the behaviour of mapping 0 => 0 of both target\n         * and container etc.\n         */\n        offsetDefinition = [offset, offset];\n    }\n    else if (isString(offset)) {\n        offset = offset.trim();\n        if (offset.includes(\" \")) {\n            offsetDefinition = offset.split(\" \");\n        }\n        else {\n            /**\n             * If we're provided a definition like \"100px\" then we want to apply\n             * that only to the top of the target point, leaving the container at 0.\n             * Whereas a named offset like \"end\" should be applied to both.\n             */\n            offsetDefinition = [offset, namedEdges[offset] ? offset : `0`];\n        }\n    }\n    targetPoint = resolveEdge(offsetDefinition[0], targetLength, targetInset);\n    containerPoint = resolveEdge(offsetDefinition[1], containerLength);\n    return targetPoint - containerPoint;\n}\n\nexport { resolveOffset };\n", "import { isString, isNumber } from '@motionone/utils';\n\nconst namedEdges = {\n    start: 0,\n    center: 0.5,\n    end: 1,\n};\nfunction resolveEdge(edge, length, inset = 0) {\n    let delta = 0;\n    /**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */\n    if (namedEdges[edge] !== undefined) {\n        edge = namedEdges[edge];\n    }\n    /**\n     * Handle unit values\n     */\n    if (isString(edge)) {\n        const asNumber = parseFloat(edge);\n        if (edge.endsWith(\"px\")) {\n            delta = asNumber;\n        }\n        else if (edge.endsWith(\"%\")) {\n            edge = asNumber / 100;\n        }\n        else if (edge.endsWith(\"vw\")) {\n            delta = (asNumber / 100) * document.documentElement.clientWidth;\n        }\n        else if (edge.endsWith(\"vh\")) {\n            delta = (asNumber / 100) * document.documentElement.clientHeight;\n        }\n        else {\n            edge = asNumber;\n        }\n    }\n    /**\n     * If the edge is defined as a number, handle as a progress value.\n     */\n    if (isNumber(edge)) {\n        delta = length * edge;\n    }\n    return inset + delta;\n}\n\nexport { namedEdges, resolveEdge };\n", "import { __rest } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport { noop } from '@motionone/utils';\nimport { animateStyle } from '../animate/animate-style.es.js';\nimport { style } from '../animate/style.es.js';\nimport { getOptions } from '../animate/utils/options.es.js';\nimport { hasChanged } from './utils/has-changed.es.js';\nimport { resolveVariant } from './utils/resolve-variant.es.js';\nimport { scheduleAnimation, unscheduleAnimation } from './utils/schedule.es.js';\nimport { inView } from './gestures/in-view.es.js';\nimport { hover } from './gestures/hover.es.js';\nimport { press } from './gestures/press.es.js';\nimport { motionEvent } from './utils/events.es.js';\n\nconst gestures = { inView, hover, press };\n/**\n * A list of state types, in priority order. If a value is defined in\n * a righter-most type, it will override any definition in a lefter-most.\n */\nconst stateTypes = [\"initial\", \"animate\", ...Object.keys(gestures), \"exit\"];\n/**\n * A global store of all generated motion states. This can be used to lookup\n * a motion state for a given Element.\n */\nconst mountedStates = new WeakMap();\nfunction createMotionState(options = {}, parent) {\n    /**\n     * The element represented by the motion state. This is an empty reference\n     * when we create the state to support SSR and allow for later mounting\n     * in view libraries.\n     *\n     * @ts-ignore\n     */\n    let element;\n    /**\n     * Calculate a depth that we can use to order motion states by tree depth.\n     */\n    let depth = parent ? parent.getDepth() + 1 : 0;\n    /**\n     * Track which states are currently active.\n     */\n    const activeStates = { initial: true, animate: true };\n    /**\n     * A map of functions that, when called, will remove event listeners for\n     * a given gesture.\n     */\n    const gestureSubscriptions = {};\n    /**\n     * Initialise a context to share through motion states. This\n     * will be populated by variant names (if any).\n     */\n    const context = {};\n    for (const name of stateTypes) {\n        context[name] =\n            typeof options[name] === \"string\"\n                ? options[name]\n                : parent === null || parent === void 0 ? void 0 : parent.getContext()[name];\n    }\n    /**\n     * If initial is set to false we use the animate prop as the initial\n     * animation state.\n     */\n    const initialVariantSource = options.initial === false ? \"animate\" : \"initial\";\n    /**\n     * Destructure an initial target out from the resolved initial variant.\n     */\n    let _a = resolveVariant(options[initialVariantSource] || context[initialVariantSource], options.variants) || {}, target = __rest(_a, [\"transition\"]);\n    /**\n     * The base target is a cached map of values that we'll use to animate\n     * back to if a value is removed from all active state types. This\n     * is usually the initial value as read from the DOM, for instance if\n     * it hasn't been defined in initial.\n     */\n    const baseTarget = Object.assign({}, target);\n    /**\n     * A generator that will be processed by the global animation scheduler.\n     * This yeilds when it switches from reading the DOM to writing to it\n     * to prevent layout thrashing.\n     */\n    function* animateUpdates() {\n        var _a, _b;\n        const prevTarget = target;\n        target = {};\n        const animationOptions = {};\n        for (const name of stateTypes) {\n            if (!activeStates[name])\n                continue;\n            const variant = resolveVariant(options[name]);\n            if (!variant)\n                continue;\n            for (const key in variant) {\n                if (key === \"transition\")\n                    continue;\n                target[key] = variant[key];\n                animationOptions[key] = getOptions((_b = (_a = variant.transition) !== null && _a !== void 0 ? _a : options.transition) !== null && _b !== void 0 ? _b : {}, key);\n            }\n        }\n        const allTargetKeys = new Set([\n            ...Object.keys(target),\n            ...Object.keys(prevTarget),\n        ]);\n        const animationFactories = [];\n        allTargetKeys.forEach((key) => {\n            var _a;\n            if (target[key] === undefined) {\n                target[key] = baseTarget[key];\n            }\n            if (hasChanged(prevTarget[key], target[key])) {\n                (_a = baseTarget[key]) !== null && _a !== void 0 ? _a : (baseTarget[key] = style.get(element, key));\n                animationFactories.push(animateStyle(element, key, target[key], animationOptions[key]));\n            }\n        });\n        // Wait for all animation states to read from the DOM\n        yield;\n        const animations = animationFactories\n            .map((factory) => factory())\n            .filter(Boolean);\n        if (!animations.length)\n            return;\n        const animationTarget = target;\n        element.dispatchEvent(motionEvent(\"motionstart\", animationTarget));\n        Promise.all(animations.map((animation) => animation.finished))\n            .then(() => {\n            element.dispatchEvent(motionEvent(\"motioncomplete\", animationTarget));\n        })\n            .catch(noop);\n    }\n    const setGesture = (name, isActive) => () => {\n        activeStates[name] = isActive;\n        scheduleAnimation(state);\n    };\n    const updateGestureSubscriptions = () => {\n        for (const name in gestures) {\n            const isGestureActive = gestures[name].isActive(options);\n            const remove = gestureSubscriptions[name];\n            if (isGestureActive && !remove) {\n                gestureSubscriptions[name] = gestures[name].subscribe(element, {\n                    enable: setGesture(name, true),\n                    disable: setGesture(name, false),\n                }, options);\n            }\n            else if (!isGestureActive && remove) {\n                remove();\n                delete gestureSubscriptions[name];\n            }\n        }\n    };\n    const state = {\n        update: (newOptions) => {\n            if (!element)\n                return;\n            options = newOptions;\n            updateGestureSubscriptions();\n            scheduleAnimation(state);\n        },\n        setActive: (name, isActive) => {\n            if (!element)\n                return;\n            activeStates[name] = isActive;\n            scheduleAnimation(state);\n        },\n        animateUpdates,\n        getDepth: () => depth,\n        getTarget: () => target,\n        getOptions: () => options,\n        getContext: () => context,\n        mount: (newElement) => {\n            invariant(Boolean(newElement), \"Animation state must be mounted with valid Element\");\n            element = newElement;\n            mountedStates.set(element, state);\n            updateGestureSubscriptions();\n            return () => {\n                mountedStates.delete(element);\n                unscheduleAnimation(state);\n                for (const key in gestureSubscriptions) {\n                    gestureSubscriptions[key]();\n                }\n            };\n        },\n        isMounted: () => Boolean(element),\n    };\n    return state;\n}\n\nexport { createMotionState, mountedStates };\n", "function hasChanged(a, b) {\n    if (typeof a !== typeof b)\n        return true;\n    if (Array.isArray(a) && Array.isArray(b))\n        return !shallowCompare(a, b);\n    return a !== b;\n}\nfunction shallowCompare(next, prev) {\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { hasChanged, shallowCompare };\n", "import { isVariant } from './is-variant.es.js';\n\nfunction resolveVariant(definition, variants) {\n    if (isVariant(definition)) {\n        return definition;\n    }\n    else if (definition && variants) {\n        return variants[definition];\n    }\n}\n\nexport { resolveVariant };\n", "function isVariant(definition) {\n    return typeof definition === \"object\";\n}\n\nexport { isVariant };\n", "import { addUniqueItem, removeItem } from '@motionone/utils';\n\nlet scheduled = undefined;\nfunction processScheduledAnimations() {\n    if (!scheduled)\n        return;\n    const generators = scheduled.sort(compareByDepth).map(fireAnimateUpdates);\n    generators.forEach(fireNext);\n    generators.forEach(fireNext);\n    scheduled = undefined;\n}\nfunction scheduleAnimation(state) {\n    if (!scheduled) {\n        scheduled = [state];\n        requestAnimationFrame(processScheduledAnimations);\n    }\n    else {\n        addUniqueItem(scheduled, state);\n    }\n}\nfunction unscheduleAnimation(state) {\n    scheduled && removeItem(scheduled, state);\n}\nconst compareByDepth = (a, b) => a.getDepth() - b.getDepth();\nconst fireAnimateUpdates = (state) => state.animateUpdates();\nconst fireNext = (iterator) => iterator.next();\n\nexport { scheduleAnimation, unscheduleAnimation };\n", "import { __rest } from 'tslib';\nimport { dispatchViewEvent } from '../utils/events.es.js';\nimport { inView as inView$1 } from '../../gestures/in-view.es.js';\n\nconst inView = {\n    isActive: (options) => Boolean(options.inView),\n    subscribe: (element, { enable, disable }, { inViewOptions = {} }) => {\n        const { once } = inViewOptions, viewOptions = __rest(inViewOptions, [\"once\"]);\n        return inView$1(element, (enterEntry) => {\n            enable();\n            dispatchViewEvent(element, \"viewenter\", enterEntry);\n            if (!once) {\n                return (leaveEntry) => {\n                    disable();\n                    dispatchViewEvent(element, \"viewleave\", leaveEntry);\n                };\n            }\n        }, viewOptions);\n    },\n};\n\nexport { inView };\n", "const motionEvent = (name, target) => new CustomEvent(name, { detail: { target } });\nfunction dispatchPointerEvent(element, name, event) {\n    element.dispatchEvent(new CustomEvent(name, { detail: { originalEvent: event } }));\n}\nfunction dispatchViewEvent(element, name, entry) {\n    element.dispatchEvent(new CustomEvent(name, { detail: { originalEntry: entry } }));\n}\n\nexport { dispatchPointerEvent, dispatchViewEvent, motionEvent };\n", "import { dispatchPointerEvent } from '../utils/events.es.js';\n\nconst mouseEvent = (element, name, action) => (event) => {\n    if (event.pointerType && event.pointerType !== \"mouse\")\n        return;\n    action();\n    dispatchPointerEvent(element, name, event);\n};\nconst hover = {\n    isActive: (options) => Boolean(options.hover),\n    subscribe: (element, { enable, disable }) => {\n        const onEnter = mouseEvent(element, \"hoverstart\", enable);\n        const onLeave = mouseEvent(element, \"hoverend\", disable);\n        element.addEventListener(\"pointerenter\", onEnter);\n        element.addEventListener(\"pointerleave\", onLeave);\n        return () => {\n            element.removeEventListener(\"pointerenter\", onEnter);\n            element.removeEventListener(\"pointerleave\", onLeave);\n        };\n    },\n};\n\nexport { hover };\n", "import { dispatchPointerEvent } from '../utils/events.es.js';\n\nconst press = {\n    isActive: (options) => Boolean(options.press),\n    subscribe: (element, { enable, disable }) => {\n        const onPointerUp = (event) => {\n            disable();\n            dispatchPointerEvent(element, \"pressend\", event);\n            window.removeEventListener(\"pointerup\", onPointerUp);\n        };\n        const onPointerDown = (event) => {\n            enable();\n            dispatchPointerEvent(element, \"pressstart\", event);\n            window.addEventListener(\"pointerup\", onPointerUp);\n        };\n        element.addEventListener(\"pointerdown\", onPointerDown);\n        return () => {\n            element.removeEventListener(\"pointerdown\", onPointerDown);\n            window.removeEventListener(\"pointerup\", onPointerUp);\n        };\n    },\n};\n\nexport { press };\n", "import { isNumber } from '@motionone/utils';\nimport { isTransform, transformAlias, asTransformCssVar, transformDefinitions, buildTransformTemplate } from './transforms.es.js';\n\nfunction createStyles(keyframes) {\n    const initialKeyframes = {};\n    const transformKeys = [];\n    for (let key in keyframes) {\n        const value = keyframes[key];\n        if (isTransform(key)) {\n            if (transformAlias[key])\n                key = transformAlias[key];\n            transformKeys.push(key);\n            key = asTransformCssVar(key);\n        }\n        let initialKeyframe = Array.isArray(value) ? value[0] : value;\n        /**\n         * If this is a number and we have a default value type, convert the number\n         * to this type.\n         */\n        const definition = transformDefinitions.get(key);\n        if (definition) {\n            initialKeyframe = isNumber(value)\n                ? definition.toDefaultUnit(value)\n                : value;\n        }\n        initialKeyframes[key] = initialKeyframe;\n    }\n    if (transformKeys.length) {\n        initialKeyframes.transform = buildTransformTemplate(transformKeys);\n    }\n    return initialKeyframes;\n}\n\nexport { createStyles };\n", "import { createStyles } from './style-object.es.js';\n\nconst camelLetterToPipeLetter = (letter) => `-${letter.toLowerCase()}`;\nconst camelToPipeCase = (str) => str.replace(/[A-Z]/g, camelLetterToPipeLetter);\nfunction createStyleString(target = {}) {\n    const styles = createStyles(target);\n    let style = \"\";\n    for (const key in styles) {\n        style += key.startsWith(\"--\") ? key : camelToPipeCase(key);\n        style += `: ${styles[key]}; `;\n    }\n    return style;\n}\n\nexport { createStyleString };\n", "import { warnOnce } from '../../utils/warn-once.mjs';\nimport { useScroll } from '../use-scroll.mjs';\n\n/**\n * @deprecated useElementScroll is deprecated. Convert to useScroll({ container: ref })\n */\nfunction useElementScroll(ref) {\n    warnOnce(false, \"useElementScroll is deprecated. Convert to useScroll({ container: ref }).\");\n    return useScroll({ container: ref });\n}\n\nexport { useElementScroll };\n", "import { warnOnce } from '../../utils/warn-once.mjs';\nimport { useScroll } from '../use-scroll.mjs';\n\n/**\n * @deprecated useViewportScroll is deprecated. Convert to useScroll()\n */\nfunction useViewportScroll() {\n    warnOnce(false, \"useViewportScroll is deprecated. Convert to useScroll().\");\n    return useScroll();\n}\n\nexport { useViewportScroll };\n", "import sync, { cancelSync } from 'framesync';\nimport { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\n\nfunction useAnimationFrame(callback) {\n    const initialTimestamp = useRef(0);\n    const { isStatic } = useContext(MotionConfigContext);\n    useEffect(() => {\n        if (isStatic)\n            return;\n        const provideTimeSinceStart = ({ timestamp }) => {\n            if (!initialTimestamp.current)\n                initialTimestamp.current = timestamp;\n            callback(timestamp - initialTimestamp.current);\n        };\n        sync.update(provideTimeSinceStart, true);\n        return () => cancelSync.update(provideTimeSinceStart);\n    }, [callback]);\n}\n\nexport { useAnimationFrame };\n", "import { useAnimationFrame } from '../utils/use-animation-frame.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\n\nfunction useTime() {\n    const time = useMotionValue(0);\n    useAnimationFrame((t) => time.set(t));\n    return time;\n}\n\nexport { useTime };\n", "import { isCSSVariable } from '../../render/dom/utils/is-css-variable.mjs';\nimport { isTransformProp, isTransformOriginProp } from '../../render/html/utils/transform.mjs';\nimport { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { MotionValue } from '../index.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.members = [];\n        this.transforms = new Set();\n    }\n    add(name) {\n        let memberName;\n        if (isTransformProp(name)) {\n            this.transforms.add(name);\n            memberName = \"transform\";\n        }\n        else if (!isTransformOriginProp(name) &&\n            !isCSSVariable(name) &&\n            name !== \"willChange\") {\n            memberName = camelToDash(name);\n        }\n        if (memberName) {\n            addUniqueItem(this.members, memberName);\n            this.update();\n        }\n    }\n    remove(name) {\n        if (isTransformProp(name)) {\n            this.transforms.delete(name);\n            if (!this.transforms.size) {\n                removeItem(this.members, \"transform\");\n            }\n        }\n        else {\n            removeItem(this.members, camelToDash(name));\n        }\n        this.update();\n    }\n    update() {\n        this.set(this.members.length ? this.members.join(\", \") : \"auto\");\n    }\n}\nfunction useWillChange() {\n    return useConstant(() => new WillChangeMotionValue(\"auto\"));\n}\n\nexport { WillChangeMotionValue, useWillChange };\n", "import { invariant } from 'hey-listen';\nimport { stopAnimation, animateVisualElement } from '../render/utils/animation.mjs';\nimport { setValues } from '../render/utils/setters.mjs';\n\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * Pending animations that are started before a component is mounted.\n     * TODO: Remove this as animations should only run in effects\n     */\n    const pendingAnimations = [];\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            /**\n             * TODO: We only perform this hasMounted check because in Framer we used to\n             * encourage the ability to start an animation within the render phase. This\n             * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n             * we can ditch this.\n             */\n            if (hasMounted) {\n                const animations = [];\n                subscribers.forEach((visualElement) => {\n                    animations.push(animateVisualElement(visualElement, definition, {\n                        transitionOverride,\n                    }));\n                });\n                return Promise.all(animations);\n            }\n            else {\n                return new Promise((resolve) => {\n                    pendingAnimations.push({\n                        animation: [definition, transitionOverride],\n                        resolve,\n                    });\n                });\n            }\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            pendingAnimations.forEach(({ animation, resolve }) => {\n                controls.start(...animation).then(resolve);\n            });\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls };\n", "import { animationControls } from './animation-controls.mjs';\nimport { useEffect } from 'react';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n", "import { wrap } from 'popmotion';\nimport { useRef, useState, useCallback } from 'react';\n\n/**\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\n *\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\n *\n * ```jsx\n * import * as React from \"react\"\n * import { motion, useCycle } from \"framer-motion\"\n *\n * export const MyComponent = () => {\n *   const [x, cycleX] = useCycle(0, 50, 100)\n *\n *   return (\n *     <motion.div\n *       animate={{ x: x }}\n *       onTap={() => cycleX()}\n *      />\n *    )\n * }\n * ```\n *\n * @param items - items to cycle through\n * @returns [currentState, cycleState]\n *\n * @public\n */\nfunction useCycle(...items) {\n    const index = useRef(0);\n    const [item, setItem] = useState(items[index.current]);\n    const runCycle = useCallback((next) => {\n        index.current =\n            typeof next !== \"number\"\n                ? wrap(0, items.length, index.current + 1)\n                : next;\n        setItem(items[index.current]);\n    }, \n    // The array will change on each call, but by putting items.length at\n    // the front of this array, we guarantee the dependency comparison will match up\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [items.length, ...items]);\n    return [item, runCycle];\n}\n\nexport { useCycle };\n", "import { useState, useEffect } from 'react';\nimport { inView } from '@motionone/dom';\n\nfunction useInView(ref, { root, margin, amount, once = false } = {}) {\n    const [isInView, setInView] = useState(false);\n    useEffect(() => {\n        var _a;\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (_a = root === null || root === void 0 ? void 0 : root.current) !== null && _a !== void 0 ? _a : undefined,\n            margin,\n            amount: amount === \"some\" ? \"any\" : amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once]);\n    return isInView;\n}\n\nexport { useInView };\n", "import { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nclass DragControls {\n    constructor() {\n        this.componentControls = new Set();\n    }\n    /**\n     * Subscribe a component's internal `VisualElementDragControls` to the user-facing API.\n     *\n     * @internal\n     */\n    subscribe(controls) {\n        this.componentControls.add(controls);\n        return () => this.componentControls.delete(controls);\n    }\n    /**\n     * Start a drag gesture on every `motion` component that has this set of drag controls\n     * passed into it via the `dragControls` prop.\n     *\n     * ```jsx\n     * dragControls.start(e, {\n     *   snapToCursor: true\n     * })\n     * ```\n     *\n     * @param event - PointerEvent\n     * @param options - Options\n     *\n     * @public\n     */\n    start(event, options) {\n        this.componentControls.forEach((controls) => {\n            controls.start(event.nativeEvent || event, options);\n        });\n    }\n}\nconst createDragControls = () => new DragControls();\n/**\n * Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop\n * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we\n * might want to initiate that dragging from a different component than the draggable one.\n *\n * By creating a `dragControls` using the `useDragControls` hook, we can pass this into\n * the draggable component's `dragControls` prop. It exposes a `start` method\n * that can start dragging from pointer events on other components.\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nfunction useDragControls() {\n    return useConstant(createDragControls);\n}\n\nexport { DragControls, useDragControls };\n", "import { rootProjectionNode } from './node/HTMLProjectionNode.mjs';\n\nfunction useInstantLayoutTransition() {\n    return startTransition;\n}\nfunction startTransition(cb) {\n    if (!rootProjectionNode.current)\n        return;\n    rootProjectionNode.current.isUpdating = false;\n    rootProjectionNode.current.blockUpdate();\n    cb === null || cb === void 0 ? void 0 : cb();\n}\n\nexport { useInstantLayoutTransition };\n", "import sync from 'framesync';\nimport { useEffect } from 'react';\nimport { useInstantLayoutTransition } from '../projection/use-instant-layout-transition.mjs';\nimport { useForceUpdate } from './use-force-update.mjs';\nimport { instantAnimationState } from './use-instant-transition-state.mjs';\n\nfunction useInstantTransition() {\n    const [forceUpdate, forcedRenderCount] = useForceUpdate();\n    const startInstantLayoutTransition = useInstantLayoutTransition();\n    useEffect(() => {\n        /**\n         * Unblock after two animation frames, otherwise this will unblock too soon.\n         */\n        sync.postRender(() => sync.postRender(() => (instantAnimationState.current = false)));\n    }, [forcedRenderCount]);\n    return (callback) => {\n        startInstantLayoutTransition(() => {\n            instantAnimationState.current = true;\n            forceUpdate();\n            callback();\n        });\n    };\n}\n\nexport { useInstantTransition };\n", "import * as React from 'react';\nimport { rootProjectionNode } from './node/HTMLProjectionNode.mjs';\n\nfunction useResetProjection() {\n    const reset = React.useCallback(() => {\n        const root = rootProjectionNode.current;\n        if (!root)\n            return;\n        root.resetTree();\n    }, []);\n    return reset;\n}\n\nexport { useResetProjection };\n", "import { __rest } from 'tslib';\nimport { useState, useEffect } from 'react';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { getOrigin, checkTargetForNewValues } from '../render/utils/setters.mjs';\nimport { visualElement } from '../render/index.mjs';\nimport { animateVisualElement } from '../render/utils/animation.mjs';\nimport { makeUseVisualState } from '../motion/utils/use-visual-state.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\n\nconst createObject = () => ({});\nconst stateVisualElement = visualElement({\n    build() { },\n    measureViewportBox: createBox,\n    resetTransform() { },\n    restoreTransform() { },\n    removeValueFromRenderState() { },\n    render() { },\n    scrapeMotionValuesFromProps: createObject,\n    readValueFromInstance(_state, key, options) {\n        return options.initialState[key] || 0;\n    },\n    makeTargetAnimatable(element, _a) {\n        var { transition, transitionEnd } = _a, target = __rest(_a, [\"transition\", \"transitionEnd\"]);\n        const origin = getOrigin(target, transition || {}, element);\n        checkTargetForNewValues(element, target, origin);\n        return Object.assign({ transition, transitionEnd }, target);\n    },\n});\nconst useVisualState = makeUseVisualState({\n    scrapeMotionValuesFromProps: createObject,\n    createRenderState: createObject,\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n */\nfunction useAnimatedState(initialState) {\n    const [animationState, setAnimationState] = useState(initialState);\n    const visualState = useVisualState({}, false);\n    const element = useConstant(() => stateVisualElement({ props: {}, visualState }, { initialState }));\n    useEffect(() => {\n        element.mount({});\n        return element.unmount;\n    }, [element]);\n    useEffect(() => {\n        element.setProps({\n            onUpdate: (v) => {\n                setAnimationState(Object.assign({}, v));\n            },\n        });\n    }, [setAnimationState, element]);\n    const startAnimation = useConstant(() => (animationDefinition) => {\n        return animateVisualElement(element, animationDefinition);\n    });\n    return [animationState, startAnimation];\n}\n\nexport { useAnimatedState };\n", "import { useTransform } from './use-transform.mjs';\nimport { invariant, warning } from 'hey-listen';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { useVisualElementContext } from '../context/MotionContext/index.mjs';\n\n// Keep things reasonable and avoid scale: Infinity. In practise we might need\n// to add another value, opacity, that could interpolate scaleX/Y [0,0.01] => [0,1]\n// to simply hide content at unreasonable scales.\nconst maxScale = 100000;\nconst invertScale = (scale) => scale > 0.001 ? 1 / scale : maxScale;\nlet hasWarned = false;\n/**\n * Returns a `MotionValue` each for `scaleX` and `scaleY` that update with the inverse\n * of their respective parent scales.\n *\n * This is useful for undoing the distortion of content when scaling a parent component.\n *\n * By default, `useInvertedScale` will automatically fetch `scaleX` and `scaleY` from the nearest parent.\n * By passing other `MotionValue`s in as `useInvertedScale({ scaleX, scaleY })`, it will invert the output\n * of those instead.\n *\n * ```jsx\n * const MyComponent = () => {\n *   const { scaleX, scaleY } = useInvertedScale()\n *   return <motion.div style={{ scaleX, scaleY }} />\n * }\n * ```\n *\n * @deprecated\n */\nfunction useInvertedScale(scale) {\n    let parentScaleX = useMotionValue(1);\n    let parentScaleY = useMotionValue(1);\n    const visualElement = useVisualElementContext();\n    invariant(!!(scale || visualElement), \"If no scale values are provided, useInvertedScale must be used within a child of another motion component.\");\n    warning(hasWarned, \"useInvertedScale is deprecated and will be removed in 3.0. Use the layout prop instead.\");\n    hasWarned = true;\n    if (scale) {\n        parentScaleX = scale.scaleX || parentScaleX;\n        parentScaleY = scale.scaleY || parentScaleY;\n    }\n    else if (visualElement) {\n        parentScaleX = visualElement.getValue(\"scaleX\", 1);\n        parentScaleY = visualElement.getValue(\"scaleY\", 1);\n    }\n    const scaleX = useTransform(parentScaleX, invertScale);\n    const scaleY = useTransform(parentScaleY, invertScale);\n    return { scaleX, scaleY };\n}\n\nexport { invertScale, useInvertedScale };\n", "export { createDomMotionComponent, motion } from './render/dom/motion.mjs';\nexport { m } from './render/dom/motion-minimal.mjs';\nexport { AnimatePresence } from './components/AnimatePresence/index.mjs';\nexport { AnimateSharedLayout } from './components/AnimateSharedLayout.mjs';\nexport { MotionConfig } from './components/MotionConfig/index.mjs';\nexport { LazyMotion } from './components/LazyMotion/index.mjs';\nexport { LayoutGroup } from './components/LayoutGroup/index.mjs';\nexport { Reorder } from './components/Reorder/index.mjs';\nexport { domAnimation } from './render/dom/features-animation.mjs';\nexport { domMax } from './render/dom/features-max.mjs';\nexport { useMotionValue } from './value/use-motion-value.mjs';\nexport { useMotionTemplate } from './value/use-motion-template.mjs';\nexport { MotionValue, motionValue } from './value/index.mjs';\nexport { resolveMotionValue } from './value/utils/resolve-motion-value.mjs';\nexport { useTransform } from './value/use-transform.mjs';\nexport { useSpring } from './value/use-spring.mjs';\nexport { useVelocity } from './value/use-velocity.mjs';\nexport { useScroll } from './value/use-scroll.mjs';\nexport { useElementScroll } from './value/scroll/use-element-scroll.mjs';\nexport { useViewportScroll } from './value/scroll/use-viewport-scroll.mjs';\nexport { useTime } from './value/use-time.mjs';\nexport { useWillChange } from './value/use-will-change/index.mjs';\nexport { useReducedMotion, useReducedMotionConfig } from './utils/use-reduced-motion.mjs';\nexport { animationControls } from './animation/animation-controls.mjs';\nexport { useAnimation, useAnimationControls } from './animation/use-animation.mjs';\nexport { useAnimationFrame } from './utils/use-animation-frame.mjs';\nexport { animate } from './animation/animate.mjs';\nexport { animateVisualElement } from './render/utils/animation.mjs';\nexport { useCycle } from './utils/use-cycle.mjs';\nexport { transform } from './utils/transform.mjs';\nexport { isValidMotionProp } from './motion/utils/valid-prop.mjs';\nexport { useIsPresent, usePresence } from './components/AnimatePresence/use-presence.mjs';\nexport { useInView } from './utils/use-in-view.mjs';\nexport { DragControls, useDragControls } from './gestures/drag/use-drag-controls.mjs';\nexport { useDomEvent } from './events/use-dom-event.mjs';\nexport { createMotionComponent } from './motion/index.mjs';\nexport { visualElement } from './render/index.mjs';\nexport { addScaleCorrector } from './projection/styles/scale-correction.mjs';\nexport { useInstantTransition } from './utils/use-instant-transition.mjs';\nexport { useInstantLayoutTransition } from './projection/use-instant-layout-transition.mjs';\nexport { useResetProjection } from './projection/use-reset-projection.mjs';\nexport { MotionContext, useVisualElementContext } from './context/MotionContext/index.mjs';\nexport { MotionConfigContext } from './context/MotionConfigContext.mjs';\nexport { PresenceContext } from './context/PresenceContext.mjs';\nexport { LayoutGroupContext } from './context/LayoutGroupContext.mjs';\nexport { DeprecatedLayoutGroupContext } from './context/DeprecatedLayoutGroupContext.mjs';\nexport { SwitchLayoutGroupContext } from './context/SwitchLayoutGroupContext.mjs';\nexport { FlatTree } from './render/utils/flat-tree.mjs';\nexport { useAnimatedState as useDeprecatedAnimatedState } from './animation/use-animated-state.mjs';\nexport { useInvertedScale as useDeprecatedInvertedScale } from './value/use-inverted-scale.mjs';\nexport { AnimationType } from './render/utils/types.mjs';\nexport { animations } from './motion/features/animations.mjs';\nexport { checkTargetForNewValues } from './render/utils/setters.mjs';\nexport { createBox } from './projection/geometry/models.mjs';\nexport { calcLength } from './projection/geometry/delta-calc.mjs';\nexport { filterProps } from './render/dom/utils/filter-props.mjs';\nexport { makeUseVisualState } from './motion/utils/use-visual-state.mjs';\nexport { isDragActive } from './gestures/drag/utils/lock.mjs';\nexport { addPointerEvent } from './events/use-pointer-event.mjs';\nexport { wrapHandler } from './events/event-info.mjs';\nexport { isMotionValue } from './value/utils/is-motion-value.mjs';\nexport { isBrowser } from './utils/is-browser.mjs';\nexport { useUnmountEffect } from './utils/use-unmount-effect.mjs';\nexport { useIsomorphicLayoutEffect } from './utils/use-isomorphic-effect.mjs';\nexport { useForceUpdate } from './utils/use-force-update.mjs';\n"],
  "mappings": "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",
  "names": ["require_memoize_browser_cjs", "__commonJSMin", "exports", "init_define_process", "memoize", "fn", "cache", "arg", "require_is_prop_valid_browser_cjs", "__commonJSMin", "exports", "init_define_process", "_interopDefault", "ex", "memoize", "reactPropsRegex", "index", "prop", "init_define_process", "init_react_preact", "MotionConfigContext", "createContext", "p", "init_define_process", "init_react_preact", "MotionContext", "createContext", "useVisualElementContext", "useContext", "init_define_process", "init_react_preact", "PresenceContext", "createContext", "init_define_process", "isBrowser", "init_define_process", "init_react_preact", "useIsomorphicLayoutEffect", "isBrowser", "useLayoutEffect", "useEffect", "init_define_process", "init_react_preact", "prefersReducedMotion", "hasDetected", "initPrefersReducedMotion", "isBrowser", "motionMediaQuery", "setReducedMotionPreferences", "useReducedMotion", "shouldReduceMotion", "useState", "useReducedMotionConfig", "reducedMotionPreference", "reducedMotion", "useContext", "MotionConfigContext", "init_define_process", "init_react_preact", "LayoutGroupContext", "createContext", "init_define_process", "init_react_preact", "SwitchLayoutGroupContext", "createContext", "init_define_process", "init_react_preact", "init_define_process", "init_react_preact", "init_define_process", "defaultEnvironment", "env", "define_process_default", "init_define_process", "createDefinition", "propNames", "props", "name", "featureDefinitions", "loadFeatures", "features", "key", "init_define_process", "warning", "invariant", "init_define_process", "init_react_preact", "LazyContext", "createContext", "featureNames", "featureDefinitions", "numFeatures", "useFeatures", "props", "visualElement", "preloadedFeatures", "features", "lazyContext", "useContext", "LazyContext", "env", "invariant", "i", "name", "isEnabled", "Component", "createElement", "init_define_process", "init_react_preact", "useVisualElement", "Component", "visualState", "props", "createVisualElement", "lazyContext", "useContext", "LazyContext", "parent", "useVisualElementContext", "presenceContext", "PresenceContext", "shouldReduceMotion", "useReducedMotionConfig", "visualElementRef", "useRef", "visualElement", "useIsomorphicLayoutEffect", "useEffect", "_a", "init_define_process", "init_react_preact", "init_define_process", "isRefObject", "ref", "useMotionRef", "visualState", "visualElement", "externalRef", "useCallback", "instance", "_a", "isRefObject", "init_define_process", "init_react_preact", "init_define_process", "init_define_process", "isVariantLabels", "v", "isVariantLabel", "getCurrent", "visualElement", "current", "value", "key", "getVelocity", "velocity", "resolveVariantFromProps", "props", "definition", "custom", "currentValues", "currentVelocity", "_a", "resolveVariant", "checkIfControllingVariants", "checkIfVariantNode", "getCurrentTreeVariants", "props", "context", "checkIfControllingVariants", "initial", "animate", "isVariantLabel", "useCreateMotionContext", "props", "initial", "animate", "getCurrentTreeVariants", "useContext", "MotionContext", "useMemo", "variantLabelsAsDependency", "prop", "init_define_process", "init_define_process", "init_react_preact", "useConstant", "init", "ref", "useRef", "init_define_process", "globalProjectionState", "id", "useProjectionId", "useConstant", "globalProjectionState", "init_define_process", "init_react_preact", "useProjection", "projectionId", "layoutId", "layout", "drag", "dragConstraints", "layoutScroll", "visualElement", "ProjectionNodeConstructor", "_a", "initialPromotionConfig", "useContext", "SwitchLayoutGroupContext", "isRefObject", "init_define_process", "init_react_preact", "VisualElementHandler", "react_preact_default", "visualElement", "props", "createMotionComponent", "preloadedFeatures", "createVisualElement", "projectionNodeConstructor", "useRender", "useVisualState", "Component", "loadFeatures", "MotionComponent", "props", "externalRef", "layoutId", "useLayoutId", "config", "useContext", "MotionConfigContext", "features", "context", "useCreateMotionContext", "projectionId", "useProjectionId", "visualState", "isBrowser", "useVisualElement", "useProjection", "featureDefinitions", "useFeatures", "createElement", "VisualElementHandler", "MotionContext", "useMotionRef", "forwardRef", "_a", "layoutGroupId", "LayoutGroupContext", "init_define_process", "scaleCorrectors", "addScaleCorrector", "correctors", "init_define_process", "isMotionValue", "value", "init_define_process", "validMotionProps", "isValidMotionProp", "key", "init_define_process", "shouldForward", "key", "isValidMotionProp", "loadExternalIsValidProp", "isValidProp", "filterProps", "props", "isDom", "forwardMotionProps", "filteredProps", "init_define_process", "init_define_process", "init_define_process", "isKeyframesTarget", "v", "isCustomValue", "v", "resolveFinalValueInKeyframes", "isKeyframesTarget", "resolveMotionValue", "value", "unwrappedValue", "isMotionValue", "isCustomValue", "init_define_process", "init_react_preact", "__rest", "init_define_process", "isAnimationControls", "v", "makeState", "scrapeMotionValuesFromProps", "createRenderState", "onMount", "props", "context", "presenceContext", "state", "makeLatestValues", "instance", "makeUseVisualState", "config", "isStatic", "useContext", "MotionContext", "PresenceContext", "useConstant", "scrapeMotionValues", "values", "blockInitialAnimation", "motionValues", "key", "resolveMotionValue", "initial", "animate", "isControllingVariants", "checkIfControllingVariants", "isVariantNode", "checkIfVariantNode", "initialAnimationIsBlocked", "variantToSet", "isAnimationControls", "definition", "resolved", "resolveVariantFromProps", "transitionEnd", "transition", "target", "__rest", "valueTarget", "index", "init_define_process", "AnimationType", "init_define_process", "init_react_preact", "addDomEvent", "target", "eventName", "handler", "options", "useDomEvent", "ref", "useEffect", "element", "init_define_process", "init_define_process", "isMouseEvent", "event", "isTouchEvent", "filterPrimaryPointer", "eventHandler", "event", "isMouseEvent", "defaultPagePoint", "pointFromTouch", "e", "pointType", "point", "pointFromMouse", "extractEventInfo", "isTouchEvent", "wrapHandler", "handler", "shouldFilterPrimaryPointer", "listener", "init_define_process", "init_define_process", "supportsPointerEvents", "isBrowser", "supportsTouchEvents", "supportsMouseEvents", "mouseEventNames", "touchEventNames", "getPointerEventName", "name", "supportsPointerEvents", "supportsTouchEvents", "supportsMouseEvents", "addPointerEvent", "target", "eventName", "handler", "options", "addDomEvent", "wrapHandler", "usePointerEvent", "ref", "useDomEvent", "init_define_process", "createLock", "name", "lock", "openLock", "globalHorizontalLock", "globalVerticalLock", "getGlobalLock", "drag", "openHorizontal", "openVertical", "isDragActive", "openGestureLock", "init_define_process", "init_react_preact", "useUnmountEffect", "callback", "useEffect", "init_define_process", "init_react_preact", "usePresence", "context", "useContext", "PresenceContext", "isPresent", "onExitComplete", "register", "id", "useId", "useEffect", "useIsPresent", "init_define_process", "init_define_process", "init_define_process", "defaultTimestep", "getCurrentTime", "onNextFrame", "callback", "init_define_process", "createRenderStep", "runNextFrame", "toRun", "toRunNextFrame", "numToRun", "isProcessing", "flushNextFrame", "toKeepAlive", "step", "callback", "keepAlive", "immediate", "addToCurrentFrame", "buffer", "index", "frameData", "i", "maxElapsed", "useDefaultElapsed", "runNextFrame", "isProcessing", "frame", "stepsOrder", "steps", "acc", "key", "createRenderStep", "sync", "step", "process", "keepAlive", "immediate", "startLoop", "cancelSync", "flushSync", "processStep", "stepId", "processFrame", "timestamp", "defaultTimestep", "onNextFrame", "getFrameData", "es_default", "init_define_process", "init_define_process", "__rest", "init_define_process", "init_define_process", "__rest", "init_define_process", "init_define_process", "clamp", "min", "max", "v", "safeMin", "minDuration", "maxDuration", "minDamping", "maxDamping", "findSpring", "duration", "bounce", "velocity", "mass", "envelope", "derivative", "warning", "dampingRatio", "clamp", "undampedFreq", "exponentialDecay", "delta", "a", "b", "calcAngularFreq", "c", "e", "f", "g", "initialGuess", "approximateRoot", "stiffness", "rootIterations", "result", "durationKeys", "physicsKeys", "isSpringType", "options", "keys", "key", "getSpringOptions", "springOptions", "derived", "findSpring", "spring", "_a", "from", "to", "restSpeed", "restDelta", "__rest", "state", "stiffness", "damping", "mass", "velocity", "duration", "isResolvedFromDuration", "resolveSpring", "zero", "resolveVelocity", "createSpring", "initialVelocity", "initialDelta", "dampingRatio", "undampedAngularFreq", "angularFreq", "calcAngularFreq", "t", "envelope", "dampedAngularFreq", "freqForT", "current", "currentVelocity", "isBelowVelocityThreshold", "isBelowDisplacementThreshold", "a", "b", "_t", "init_define_process", "init_define_process", "init_define_process", "progress", "from", "to", "value", "toFromDifference", "init_define_process", "mix", "from", "to", "progress", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "clamp", "min", "max", "v", "sanitize", "floatRegex", "colorRegex", "singleColorRegex", "isString", "number", "v", "alpha", "clamp", "scale", "init_define_process", "createUnitType", "unit", "v", "isString", "degrees", "percent", "px", "vh", "vw", "progressPercentage", "init_define_process", "init_define_process", "isColorString", "type", "testProp", "v", "isString", "singleColorRegex", "splitColor", "aName", "bName", "cName", "a", "b", "c", "alpha", "floatRegex", "hsla", "isColorString", "splitColor", "hue", "saturation", "lightness", "alpha$1", "percent", "sanitize", "alpha", "init_define_process", "clampRgbUnit", "clamp", "rgbUnit", "number", "v", "rgba", "isColorString", "splitColor", "red", "green", "blue", "alpha$1", "sanitize", "alpha", "init_define_process", "parseHex", "v", "r", "g", "b", "a", "hex", "isColorString", "rgba", "init_define_process", "color", "v", "rgba", "hex", "hsla", "isString", "init_define_process", "colorToken", "numberToken", "test", "v", "_a", "_b", "_c", "_d", "isString", "floatRegex", "colorRegex", "analyse", "values", "numColors", "colors", "color", "numbers", "number", "parse", "createTransformer", "tokenised", "numValues", "output", "i", "sanitize", "convertNumbersToZero", "getAnimatableNone", "parsed", "complex", "init_define_process", "maxDefaults", "applyDefaultFilter", "v", "name", "value", "number", "floatRegex", "unit", "defaultValue", "functionRegex", "filter", "complex", "functions", "init_define_process", "hueToRgb", "p", "q", "t", "hslaToRgba", "hue", "saturation", "lightness", "alpha", "red", "green", "blue", "mixLinearColor", "from", "to", "v", "fromExpo", "toExpo", "colorTypes", "hex", "rgba", "hsla", "getColorType", "type", "notAnimatable", "color", "mixColor", "fromColorType", "toColorType", "invariant", "fromColor", "toColor", "hslaToRgba", "blended", "key", "mix", "init_define_process", "init_define_process", "isNum", "v", "init_define_process", "combineFunctions", "a", "b", "v", "pipe", "transformers", "getMixer", "origin", "target", "isNum", "v", "mix", "color", "mixColor", "mixComplex", "mixArray", "from", "to", "output", "numValues", "blendValue", "fromThis", "i", "mixObject", "key", "analyse", "value", "parsed", "complex", "numNumbers", "numRGB", "numHSL", "template", "originStats", "targetStats", "pipe", "warning", "p", "mixNumber", "from", "to", "p", "mix", "detectMixerFactory", "v", "color", "mixColor", "mixComplex", "mixArray", "mixObject", "createMixers", "output", "ease", "customMixer", "mixers", "mixerFactory", "numMixers", "i", "mixer", "easingFunction", "pipe", "fastInterpolate", "progress", "slowInterpolate", "input", "inputLength", "lastInputIndex", "mixerIndex", "foundMixerIndex", "progressInRange", "interpolate", "isClamp", "invariant", "interpolator", "clamp", "init_define_process", "init_define_process", "reverseEasing", "easing", "p", "mirrorEasing", "createExpoIn", "power", "createBackIn", "createAnticipate", "backEasing", "DEFAULT_OVERSHOOT_STRENGTH", "BOUNCE_FIRST_THRESHOLD", "BOUNCE_SECOND_THRESHOLD", "BOUNCE_THIRD_THRESHOLD", "linear", "p", "easeIn", "createExpoIn", "easeOut", "reverseEasing", "easeInOut", "mirrorEasing", "circIn", "circOut", "circInOut", "backIn", "createBackIn", "backOut", "backInOut", "anticipate", "createAnticipate", "ca", "cb", "cc", "bounceOut", "p2", "bounceIn", "bounceInOut", "defaultEasing", "values", "easing", "easeInOut", "defaultOffset", "numValues", "_value", "i", "convertOffsetToTimes", "offset", "duration", "keyframes", "from", "to", "ease", "state", "times", "createInterpolator", "interpolate", "interpolator", "t", "init_define_process", "decay", "velocity", "from", "power", "timeConstant", "restDelta", "modifyTarget", "state", "amplitude", "ideal", "target", "t", "delta", "types", "keyframes", "spring", "decay", "detectAnimationFromOptions", "config", "keys", "init_define_process", "loopElapsed", "elapsed", "duration", "delay", "reverseElapsed", "isForwardPlayback", "hasRepeatDelayElapsed", "framesync", "update", "passTimestamp", "delta", "es_default", "cancelSync", "animate", "_a", "_b", "_c", "from", "autoplay", "driver", "elapsed", "repeatMax", "repeatType", "repeatDelay", "onPlay", "onStop", "onComplete", "onRepeat", "onUpdate", "options", "__rest", "to", "driverControls", "repeatCount", "computedDuration", "latest", "isComplete", "isForwardPlayback", "interpolateFromNumber", "animator", "detectAnimationFromOptions", "interpolate", "animation", "repeat", "reverseElapsed", "loopElapsed", "complete", "state", "hasRepeatDelayElapsed", "play", "init_define_process", "init_define_process", "velocityPerSecond", "velocity", "frameDuration", "inertia", "from", "velocity", "min", "max", "power", "timeConstant", "bounceStiffness", "bounceDamping", "restDelta", "modifyTarget", "driver", "onUpdate", "onComplete", "onStop", "currentAnimation", "isOutOfBounds", "boundaryNearest", "startAnimation", "options", "animate", "v", "_a", "startSpring", "target", "boundary", "heading", "prev", "current", "checkBoundary", "velocityPerSecond", "getFrameData", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "identity", "v", "createAttractor", "alterDisplacement", "constant", "origin", "displacement", "springModifiedDisplacement", "attract", "attractExpo", "init_define_process", "init_define_process", "init_define_process", "isPoint", "point", "init_define_process", "isPoint3D", "point", "isPoint", "distance1D", "a", "b", "distance", "isNum", "isPoint", "xDelta", "yDelta", "zDelta", "isPoint3D", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "wrap", "min", "max", "v", "rangeSize", "init_define_process", "a", "a1", "a2", "b", "c", "calcBezier", "getSlope", "subdivisionPrecision", "subdivisionMaxIterations", "binarySubdivide", "aX", "aA", "aB", "mX1", "mX2", "currentX", "currentT", "i", "newtonIterations", "newtonMinSlope", "newtonRaphsonIterate", "aGuessT", "currentSlope", "kSplineTableSize", "kSampleStepSize", "cubicBezier", "mY1", "mY2", "linear", "sampleValues", "getTForX", "intervalStart", "currentSample", "lastSample", "dist", "guessForT", "initialSlope", "t", "init_define_process", "init_define_process", "init_define_process", "addUniqueItem", "arr", "item", "removeItem", "index", "moveItem", "fromIndex", "toIndex", "startIndex", "endIndex", "SubscriptionManager", "handler", "addUniqueItem", "removeItem", "a", "b", "c", "numSubscriptions", "i", "isFloat", "value", "MotionValue", "init", "SubscriptionManager", "v", "render", "delta", "timestamp", "getFrameData", "es_default", "subscription", "passiveEffect", "velocityPerSecond", "animation", "resolve", "motionValue", "init_define_process", "__rest", "init_define_process", "isNumericalString", "v", "init_define_process", "isZeroValueString", "v", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "int", "number", "numberValueTypes", "px", "degrees", "scale", "alpha", "progressPercentage", "int", "defaultValueTypes", "numberValueTypes", "color", "filter", "getDefaultValueType", "key", "getAnimatableNone", "key", "value", "_a", "defaultValueType", "getDefaultValueType", "filter", "complex", "init_define_process", "init_define_process", "init_define_process", "testValueType", "v", "type", "init_define_process", "auto", "v", "dimensionValueTypes", "number", "px", "percent", "degrees", "vw", "vh", "auto", "findDimensionValueType", "v", "testValueType", "valueTypes", "dimensionValueTypes", "color", "complex", "findValueType", "v", "testValueType", "setMotionValue", "visualElement", "key", "value", "motionValue", "setTarget", "definition", "resolved", "resolveVariant", "_a", "transitionEnd", "transition", "target", "__rest", "resolveFinalValueInKeyframes", "setVariants", "variantLabels", "variant", "child", "setValues", "checkTargetForNewValues", "origin", "_b", "_c", "_d", "newValueKeys", "numNewValues", "i", "targetValue", "isNumericalString", "isZeroValueString", "findValueType", "complex", "getAnimatableNone", "getOriginFromTransition", "getOrigin", "init_define_process", "__rest", "init_define_process", "__rest", "init_define_process", "secondsToMilliseconds", "seconds", "init_define_process", "easingLookup", "linear", "easeIn", "easeInOut", "easeOut", "circIn", "circInOut", "circOut", "backIn", "backInOut", "backOut", "anticipate", "bounceIn", "bounceInOut", "bounceOut", "easingDefinitionToFunction", "definition", "invariant", "x1", "y1", "x2", "y2", "cubicBezier", "isEasingArray", "ease", "init_define_process", "isAnimatable", "key", "value", "complex", "init_define_process", "underDampedSpring", "criticallyDampedSpring", "to", "linearTween", "keyframes", "values", "defaultTransitions", "getDefaultTransition", "valueKey", "transitionFactory", "isKeyframesTarget", "init_define_process", "instantAnimationState", "isTransitionDefined", "_a", "transition", "__rest", "legacyRepeatWarning", "convertTransitionToAnimationOptions", "ease", "times", "yoyo", "flip", "loop", "options", "secondsToMilliseconds", "isEasingArray", "easingDefinitionToFunction", "warning", "getDelayFromTransition", "key", "_b", "getValueTransition", "hydrateKeyframes", "getPopmotionAnimationOptions", "getDefaultTransition", "getAnimation", "value", "target", "onComplete", "valueTransition", "origin", "isTargetAnimatable", "isAnimatable", "getAnimatableNone", "isZero", "getZeroUnit", "isOriginAnimatable", "start", "v", "inertia", "animate", "set", "finalTarget", "resolveFinalValueInKeyframes", "potentialUnitType", "startAnimation", "instantAnimationState", "delayTimer", "controls", "animation", "delay", "init_define_process", "transformAxes", "order", "transformProps", "operationKey", "axesKey", "sortTransformProps", "a", "b", "transformPropSet", "isTransformProp", "key", "transformOriginProps", "isTransformOriginProp", "init_define_process", "isWillChangeMotionValue", "value", "isMotionValue", "animateVisualElement", "visualElement", "definition", "options", "animation", "animations", "variant", "animateVariant", "resolvedDefinition", "resolveVariant", "animateTarget", "_a", "resolved", "transition", "getAnimation", "getChildAnimations", "forwardDelay", "delayChildren", "staggerChildren", "staggerDirection", "animateChildren", "when", "first", "last", "delay", "transitionOverride", "type", "_b", "transitionEnd", "target", "__rest", "willChange", "animationTypeState", "key", "value", "valueTarget", "shouldBlockAnimation", "valueTransition", "isTransformProp", "startAnimation", "isWillChangeMotionValue", "setTarget", "maxStaggerDuration", "generateStaggerDuration", "i", "sortByTreeOrder", "child", "stopAnimation", "a", "b", "protectedKeys", "needsAnimating", "shouldBlock", "init_define_process", "init_react_preact", "init_define_process", "__rest", "init_define_process", "shallowCompare", "next", "prev", "prevLength", "i", "variantPriorityOrder", "AnimationType", "reversePriorityOrder", "numAnimationTypes", "animateList", "visualElement", "animations", "animation", "options", "animateVisualElement", "createAnimationState", "animate", "state", "createState", "isInitialRender", "buildResolvedTypeValues", "acc", "definition", "resolved", "resolveVariant", "transition", "transitionEnd", "target", "__rest", "setAnimateFunction", "makeAnimator", "animateChanges", "changedActiveType", "_a", "props", "context", "removedKeys", "encounteredKeys", "removedVariantIndex", "i", "type", "typeState", "prop", "propIsVariant", "isVariantLabel", "activeDelta", "isInherited", "isAnimationControls", "variantDidChange", "checkVariantsDidChange", "shouldAnimateType", "definitionList", "resolvedValues", "prevResolvedValues", "allKeys", "markToAnimate", "key", "next", "prev", "isKeyframesTarget", "shallowCompare", "fallbackAnimation", "fallbackTarget", "shouldAnimate", "setActive", "isActive", "child", "isVariantLabels", "createTypeState", "init_define_process", "makeRenderlessComponent", "hook", "props", "animations", "makeRenderlessComponent", "visualElement", "animate", "createAnimationState", "isAnimationControls", "useEffect", "props", "custom", "isPresent", "safeToRemove", "usePresence", "presenceContext", "useContext", "PresenceContext", "_a", "_b", "animation", "AnimationType", "init_define_process", "calcLength", "axis", "isNear", "value", "target", "maxDistance", "distance", "calcAxisDelta", "delta", "source", "origin", "mix", "calcBoxDelta", "calcRelativeAxis", "relative", "parent", "calcRelativeBox", "calcRelativeAxisPosition", "layout", "calcRelativePosition", "init_define_process", "createAxisDelta", "createDelta", "createAxis", "createBox", "init_define_process", "__rest", "init_define_process", "names", "createLifecycles", "managers", "SubscriptionManager", "propSubscriptions", "lifecycles", "manager", "props", "name", "_a", "on", "propListener", "handler", "args", "init_define_process", "init_define_process", "warned", "warnOnce", "condition", "message", "element", "updateMotionValuesFromProps", "element", "next", "prev", "_a", "willChange", "key", "nextValue", "prevValue", "isMotionValue", "isWillChangeMotionValue", "motionValue", "existingValue", "visualElement", "treeType", "build", "getBaseTarget", "makeTargetAnimatable", "measureViewportBox", "renderInstance", "readValueFromInstance", "removeValueFromRenderState", "sortNodePosition", "scrapeMotionValuesFromProps", "parent", "props", "presenceId", "blockInitialAnimation", "visualState", "shouldReduceMotion", "options", "isMounted", "latestValues", "renderState", "instance", "lifecycles", "createLifecycles", "values", "valueSubscriptions", "prevMotionValues", "baseTarget", "removeFromVariantTree", "render", "triggerBuild", "element", "update", "bindToMotionValue", "key", "value", "removeOnChange", "latestValue", "es_default", "removeOnRenderRequest", "_a", "willChange", "initialMotionValues", "__rest", "isMotionValue", "isWillChangeMotionValue", "isControllingVariants", "checkIfControllingVariants", "isVariantNode", "checkIfVariantNode", "newInstance", "cancelSync", "remove", "child", "closestVariantNode", "other", "visibility", "target", "canMutate", "defaultValue", "motionValue", "callback", "newProps", "updateMotionValuesFromProps", "name", "startAtParent", "context", "i", "numVariantProps", "variantProps", "prop", "isVariantLabel", "variantPriorityOrder", "init_define_process", "animate", "from", "to", "transition", "value", "isMotionValue", "motionValue", "startAnimation", "init_define_process", "init_define_process", "compareByDepth", "a", "b", "FlatTree", "child", "addUniqueItem", "removeItem", "callback", "compareByDepth", "init_define_process", "init_define_process", "createMotionProxy", "createConfig", "custom", "Component", "customMotionComponentConfig", "createMotionComponent", "componentCache", "_target", "key", "init_define_process", "init_define_process", "init_define_process", "lowercaseSVGElements", "isSVGComponent", "Component", "lowercaseSVGElements", "init_define_process", "init_react_preact", "init_define_process", "init_react_preact", "init_define_process", "isForcedMotionValue", "key", "layout", "layoutId", "isTransformProp", "isTransformOriginProp", "scaleCorrectors", "init_define_process", "init_define_process", "translateAlias", "buildTransform", "transform", "transformKeys", "enableHardwareAcceleration", "allowTransformNone", "transformIsDefault", "transformTemplate", "transformString", "sortTransformProps", "transformHasZ", "numTransformKeys", "i", "key", "buildTransformOrigin", "originX", "originY", "originZ", "init_define_process", "isCSSVariable", "key", "init_define_process", "getValueAsType", "value", "type", "buildHTMLStyles", "state", "latestValues", "options", "transformTemplate", "_a", "style", "vars", "transform", "transformKeys", "transformOrigin", "hasTransform", "hasTransformOrigin", "transformIsNone", "key", "value", "isCSSVariable", "valueType", "numberValueTypes", "valueAsType", "getValueAsType", "isTransformProp", "isTransformOriginProp", "buildTransform", "buildTransformOrigin", "init_define_process", "createHtmlRenderState", "copyRawValuesOnly", "target", "source", "props", "key", "isMotionValue", "isForcedMotionValue", "useInitialMotionValues", "transformTemplate", "visualState", "isStatic", "useMemo", "state", "createHtmlRenderState", "buildHTMLStyles", "vars", "style", "useStyle", "styleProp", "useHTMLProps", "htmlProps", "init_define_process", "init_react_preact", "init_define_process", "__rest", "init_define_process", "calcOrigin", "origin", "offset", "size", "px", "calcSVGTransformOrigin", "dimensions", "originX", "originY", "pxOriginX", "pxOriginY", "init_define_process", "dashKeys", "camelKeys", "buildSVGPath", "attrs", "length", "spacing", "offset", "useDashCase", "keys", "px", "pathLength", "pathSpacing", "buildSVGAttrs", "state", "_a", "options", "transformTemplate", "attrX", "attrY", "originX", "originY", "pathLength", "pathSpacing", "pathOffset", "latest", "__rest", "buildHTMLStyles", "attrs", "style", "dimensions", "calcSVGTransformOrigin", "buildSVGPath", "init_define_process", "createSvgRenderState", "createHtmlRenderState", "useSVGProps", "props", "visualState", "visualProps", "useMemo", "state", "createSvgRenderState", "buildSVGAttrs", "rawStyles", "copyRawValuesOnly", "createUseRender", "forwardMotionProps", "Component", "props", "projectionId", "ref", "latestValues", "isStatic", "visualProps", "isSVGComponent", "useSVGProps", "useHTMLProps", "filteredProps", "filterProps", "elementProps", "createElement", "init_define_process", "init_define_process", "init_define_process", "CAMEL_CASE_PATTERN", "REPLACE_TEMPLATE", "camelToDash", "str", "init_define_process", "renderHTML", "element", "style", "vars", "styleProp", "projection", "key", "init_define_process", "camelCaseAttributes", "renderSVG", "element", "renderState", "_styleProp", "projection", "renderHTML", "key", "camelCaseAttributes", "camelToDash", "init_define_process", "init_define_process", "scrapeMotionValuesFromProps", "props", "style", "newValues", "key", "isMotionValue", "isForcedMotionValue", "scrapeMotionValuesFromProps", "props", "newValues", "key", "isMotionValue", "targetKey", "svgMotionConfig", "makeUseVisualState", "scrapeMotionValuesFromProps", "createSvgRenderState", "props", "instance", "renderState", "latestValues", "buildSVGAttrs", "renderSVG", "init_define_process", "htmlMotionConfig", "makeUseVisualState", "scrapeMotionValuesFromProps", "createHtmlRenderState", "createDomMotionConfig", "Component", "forwardMotionProps", "preloadedFeatures", "createVisualElement", "projectionNodeConstructor", "baseConfig", "isSVGComponent", "svgMotionConfig", "htmlMotionConfig", "createUseRender", "init_define_process", "init_define_process", "useFocusGesture", "whileFocus", "visualElement", "onFocus", "_a", "AnimationType", "onBlur", "useDomEvent", "init_define_process", "createHoverEvent", "visualElement", "isActive", "callback", "event", "info", "_a", "isMouseEvent", "isDragActive", "AnimationType", "useHoverGesture", "onHoverStart", "onHoverEnd", "whileHover", "usePointerEvent", "init_define_process", "init_react_preact", "init_define_process", "isNodeOrChild", "parent", "child", "useTapGesture", "onTap", "onTapStart", "onTapCancel", "whileTap", "visualElement", "hasPressListeners", "isPressing", "useRef", "cancelPointerEndListeners", "eventOptions", "onPointerDown", "removePointerEndListener", "_a", "checkPointerEnd", "AnimationType", "isDragActive", "onPointerUp", "event", "info", "isNodeOrChild", "onPointerCancel", "pipe", "addPointerEvent", "usePointerEvent", "useUnmountEffect", "init_define_process", "init_react_preact", "init_define_process", "__rest", "observerCallbacks", "observers", "fireObserverCallback", "entry", "_a", "fireAllObserverCallbacks", "entries", "initIntersectionObserver", "root", "options", "lookupRoot", "rootObservers", "key", "observeIntersection", "element", "callback", "rootInteresectionObserver", "useViewport", "visualElement", "whileInView", "onViewportEnter", "onViewportLeave", "viewport", "state", "useRef", "shouldObserve", "useMissingIntersectionObserver", "useIntersectionObserver", "thresholdNames", "root", "rootMargin", "amount", "once", "useEffect", "options", "intersectionCallback", "entry", "_a", "isIntersecting", "AnimationType", "props", "callback", "observeIntersection", "fallback", "env", "warnOnce", "gestureAnimations", "makeRenderlessComponent", "useViewport", "useTapGesture", "useFocusGesture", "useHoverGesture", "init_define_process", "init_define_process", "init_react_preact", "init_define_process", "init_define_process", "PanSession", "event", "handlers", "transformPagePoint", "info", "getPanInfo", "isPanStarted", "isDistancePastThreshold", "distance", "point", "timestamp", "getFrameData", "onStart", "onMove", "transformPoint", "isMouseEvent", "es_default", "onEnd", "onSessionEnd", "panInfo", "isTouchEvent", "extractEventInfo", "initialInfo", "onSessionStart", "pipe", "addPointerEvent", "cancelSync", "subtractPoint", "a", "b", "history", "lastDevicePoint", "startDevicePoint", "getVelocity", "timeDelta", "i", "timestampedPoint", "lastPoint", "secondsToMilliseconds", "time", "currentVelocity", "init_define_process", "applyConstraints", "point", "min", "max", "elastic", "mix", "calcRelativeAxisConstraints", "axis", "calcRelativeConstraints", "layoutBox", "top", "left", "bottom", "right", "calcViewportAxisConstraints", "layoutAxis", "constraintsAxis", "calcViewportConstraints", "constraintsBox", "calcOrigin", "source", "target", "origin", "sourceLength", "calcLength", "targetLength", "progress", "clamp", "rebaseAxisConstraints", "layout", "constraints", "relativeConstraints", "defaultElastic", "resolveDragElastic", "dragElastic", "resolveAxisElastic", "minLabel", "maxLabel", "resolvePointElastic", "label", "_a", "init_define_process", "eachAxis", "callback", "init_define_process", "init_define_process", "convertBoundingBoxToBox", "top", "left", "right", "bottom", "convertBoxToBoundingBox", "x", "y", "transformBoxPoints", "point", "transformPoint", "topLeft", "bottomRight", "init_define_process", "init_define_process", "isIdentityScale", "scale", "hasScale", "scaleX", "scaleY", "hasTransform", "values", "hasTranslate", "value", "scalePoint", "point", "scale", "originPoint", "distanceFromOrigin", "scaled", "applyPointDelta", "translate", "boxScale", "applyAxisDelta", "axis", "applyBoxDelta", "box", "x", "y", "applyTreeDeltas", "treeScale", "treePath", "isSharedTransition", "_a", "_b", "treeLength", "node", "delta", "i", "transformBox", "hasTransform", "translateAxis", "distance", "transformAxis", "transforms", "key", "scaleKey", "originKey", "axisOrigin", "mix", "xKeys", "yKeys", "transform", "measureViewportBox", "instance", "transformPoint", "convertBoundingBoxToBox", "transformBoxPoints", "measurePageBox", "element", "rootProjectionNode", "transformPagePoint", "viewportBox", "scroll", "translateAxis", "elementDragControls", "VisualElementDragControls", "visualElement", "createBox", "originEvent", "snapToCursor", "onSessionStart", "event", "extractEventInfo", "onStart", "info", "_a", "drag", "dragPropagation", "onDragStart", "getGlobalLock", "eachAxis", "axis", "_b", "current", "percent", "measuredAxis", "calcLength", "AnimationType", "onMove", "dragDirectionLock", "onDirectionLock", "onDrag", "offset", "getCurrentDirection", "onSessionEnd", "PanSession", "isDragging", "velocity", "onDragEnd", "_point", "shouldDrag", "axisValue", "next", "applyConstraints", "dragConstraints", "dragElastic", "layout", "prevConstraints", "isRefObject", "calcRelativeConstraints", "resolveDragElastic", "rebaseAxisConstraints", "constraints", "onMeasureDragConstraints", "constraintsElement", "invariant", "projection", "constraintsBox", "measurePageBox", "measuredConstraints", "calcViewportConstraints", "userConstraints", "convertBoxToBoundingBox", "convertBoundingBoxToBox", "dragMomentum", "dragTransition", "dragSnapToOrigin", "onDragTransitionEnd", "momentumAnimations", "transition", "bounceStiffness", "bounceDamping", "inertia", "startAnimation", "dragKey", "externalMotionValue", "point", "min", "max", "mix", "boxProgress", "latest", "calcOrigin", "transformTemplate", "element", "stopPointerListener", "addPointerEvent", "dragListener", "measureDragConstraints", "stopMeasureLayoutListener", "stopResizeListener", "addDomEvent", "stopLayoutUpdateListener", "delta", "hasLayoutChanged", "motionValue", "props", "defaultElastic", "direction", "currentDirection", "lockThreshold", "useDrag", "props", "groupDragControls", "visualElement", "dragControls", "useConstant", "VisualElementDragControls", "useEffect", "init_define_process", "init_react_preact", "usePanGesture", "onPan", "onPanStart", "onPanEnd", "onPanSessionStart", "visualElement", "hasPanEvents", "panSession", "useRef", "transformPagePoint", "useContext", "MotionConfigContext", "handlers", "event", "info", "useEffect", "onPointerDown", "PanSession", "usePointerEvent", "useUnmountEffect", "drag", "makeRenderlessComponent", "usePanGesture", "useDrag", "init_define_process", "init_define_process", "__rest", "init_define_process", "init_define_process", "__rest", "isCSSVariable", "value", "cssVariableRegex", "parseCSSVariable", "current", "match", "token", "fallback", "maxDepth", "getVariableValue", "element", "depth", "invariant", "resolved", "resolveCSSVariables", "visualElement", "_a", "transitionEnd", "_b", "target", "__rest", "key", "init_define_process", "positionalKeys", "isPositionalKey", "key", "hasPositionalKey", "target", "setAndResetVelocity", "value", "to", "isNumOrPxType", "v", "number", "px", "BoundingBoxDimension", "getPosFromMatrix", "matrix", "pos", "getTranslateFromMatrix", "pos2", "pos3", "_bbox", "transform", "matrix3d", "transformKeys", "nonTranslationalTransformKeys", "transformProps", "removeNonTranslationalTransform", "visualElement", "removedTransforms", "positionalValues", "x", "paddingLeft", "paddingRight", "y", "paddingTop", "paddingBottom", "top", "left", "convertChangedValueTypes", "changedKeys", "originBbox", "element", "elementComputedStyle", "display", "origin", "targetBbox", "checkAndConvertChangedValueTypes", "transitionEnd", "targetPositionalKeys", "removedTransformValues", "hasAttemptedToRemoveTransformValues", "changedValueTypeKeys", "from", "fromType", "findDimensionValueType", "toType", "isKeyframesTarget", "numKeyframes", "fromIndex", "i", "invariant", "current", "scrollY", "convertedTarget", "isBrowser", "unitConversion", "parseDomVariant", "visualElement", "target", "origin", "transitionEnd", "resolved", "resolveCSSVariables", "unitConversion", "getComputedStyle", "element", "htmlConfig", "domElement", "key", "isTransformProp", "defaultType", "getDefaultValueType", "computedStyle", "value", "isCSSVariable", "a", "b", "props", "_a", "transformPagePoint", "measureViewportBox", "transformTemplate", "instance", "mutableState", "vars", "style", "_b", "isMounted", "transition", "transitionEnd", "target", "__rest", "transformValues", "origin", "getOrigin", "checkTargetForNewValues", "parsed", "parseDomVariant", "scrapeMotionValuesFromProps", "renderState", "latestValues", "options", "buildHTMLStyles", "renderHTML", "htmlVisualElement", "visualElement", "init_define_process", "svgVisualElement", "visualElement", "htmlConfig", "props", "key", "domElement", "_a", "isTransformProp", "getDefaultValueType", "camelCaseAttributes", "camelToDash", "scrapeMotionValuesFromProps", "_element", "renderState", "latestValues", "options", "buildSVGAttrs", "renderSVG", "createDomVisualElement", "Component", "options", "isSVGComponent", "svgVisualElement", "htmlVisualElement", "init_define_process", "init_define_process", "init_react_preact", "init_define_process", "pixelsToPercent", "pixels", "axis", "correctBorderRadius", "latest", "node", "px", "x", "y", "init_define_process", "varToken", "correctBoxShadow", "latest", "treeScale", "projectionDelta", "original", "containsCSSVariables", "cssVariables", "cssVariableRegex", "match", "shadow", "complex", "template", "offset", "xScale", "yScale", "averageScale", "mix", "output", "i", "cssVariable", "MeasureLayoutWithContext", "react_preact_default", "visualElement", "layoutGroup", "switchLayoutGroup", "layoutId", "projection", "addScaleCorrector", "defaultScaleCorrectors", "globalProjectionState", "prevProps", "layoutDependency", "drag", "isPresent", "es_default", "_a", "promoteContext", "safeToRemove", "MeasureLayout", "props", "usePresence", "useContext", "LayoutGroupContext", "SwitchLayoutGroupContext", "correctBorderRadius", "correctBoxShadow", "layoutFeatures", "MeasureLayout", "init_define_process", "init_define_process", "init_define_process", "borders", "numBorders", "asNumber", "value", "isPx", "px", "mixValues", "target", "follow", "lead", "progress", "shouldCrossfadeOpacity", "isOnlyMember", "_a", "_b", "_c", "_d", "mix", "easeCrossfadeIn", "easeCrossfadeOut", "i", "borderLabel", "followRadius", "getRadius", "leadRadius", "percent", "values", "radiusName", "compress", "circOut", "linear", "min", "max", "easing", "p", "init_define_process", "copyAxisInto", "axis", "originAxis", "copyBoxInto", "box", "originBox", "init_define_process", "removePointDelta", "point", "translate", "scale", "originPoint", "boxScale", "scalePoint", "removeAxisDelta", "axis", "origin", "originAxis", "sourceAxis", "percent", "mix", "removeAxisTransforms", "transforms", "key", "scaleKey", "originKey", "xKeys", "yKeys", "removeBoxTransforms", "box", "originBox", "sourceBox", "init_define_process", "isAxisDeltaZero", "delta", "isDeltaZero", "boxEquals", "a", "b", "init_define_process", "NodeStack", "node", "addUniqueItem", "removeItem", "prevLead", "indexOfNode", "member", "preserveFollowOpacity", "_a", "crossfade", "_b", "_c", "_d", "_e", "init_define_process", "identityProjection", "buildProjectionTransform", "delta", "treeScale", "latestTransform", "xTranslate", "yTranslate", "transform", "rotate", "rotateX", "rotateY", "elementScaleX", "elementScaleY", "animationTarget", "createProjectionNode", "attachResizeListener", "defaultParent", "measureScroll", "checkIsScrollRoot", "resetTransform", "id", "latestValues", "parent", "resolveTargetDelta", "calcProjection", "i", "FlatTree", "name", "handler", "SubscriptionManager", "args", "subscriptionManager", "node", "instance", "isLayoutDirty", "_a", "layoutId", "layout", "visualElement", "unblockTimeout", "resizeUnblockUpdate", "globalProjectionState", "finishAnimation", "delta", "hasLayoutChanged", "hasRelativeTargetChanged", "newLayout", "_b", "_c", "_d", "_e", "layoutTransition", "defaultLayoutTransition", "onLayoutAnimationStart", "onLayoutAnimationComplete", "targetChanged", "boxEquals", "hasOnlyRelativeTargetChanged", "animationOptions", "getValueTransition", "cancelSync", "resetRotation", "shouldNotifyListeners", "transformTemplate", "clearMeasurements", "mountNodeEarly", "resetTransformStyle", "updateLayout", "notifyLayoutUpdate", "flushSync", "clearSnapshot", "removeLeadSnapshots", "es_default", "measured", "roundBox", "prevLayout", "createBox", "isResetRequested", "hasProjection", "isDeltaZero", "transformTemplateValue", "transformTemplateHasChanged", "hasTransform", "box", "scroll", "translateAxis", "boxWithoutScroll", "copyBoxInto", "options", "isScrollRoot", "rootScroll", "transformOnly", "withTransforms", "transformBox", "boxWithoutTransform", "hasScale", "sourceBox", "nodeBox", "removeBoxTransforms", "calcRelativePosition", "calcRelativeBox", "applyBoxDelta", "lead", "applyTreeDeltas", "target", "createDelta", "prevTreeScaleX", "prevTreeScaleY", "prevProjectionTransform", "calcBoxDelta", "buildProjectionTransform", "notifyAll", "snapshot", "snapshotLatestValues", "mixedValues", "targetDelta", "relativeLayout", "isSharedLayoutAnimation", "isOnlyMember", "shouldCrossfadeOpacity", "hasOpacityCrossfade", "latest", "progress", "mixAxisDelta", "mixBox", "mixValues", "animate", "targetWithTransforms", "NodeStack", "stack", "needsReset", "transition", "preserveFollowOpacity", "hasRotate", "resetValues", "transformAxes", "axis", "key", "styleProp", "_f", "styles", "resolveMotionValue", "emptyStyles", "valuesToRender", "x", "y", "scaleCorrectors", "correct", "applyTo", "corrected", "num", "measuredLayout", "eachAxis", "axisSnapshot", "length", "calcLength", "layoutDelta", "visualDelta", "parentSnapshot", "parentLayout", "relativeSnapshot", "output", "p", "mix", "mixAxis", "from", "to", "searchNode", "element", "roundAxis", "init_define_process", "DocumentProjectionNode", "createProjectionNode", "ref", "notify", "addDomEvent", "rootProjectionNode", "HTMLProjectionNode", "createProjectionNode", "instance", "documentNode", "DocumentProjectionNode", "value", "featureBundle", "animations", "gestureAnimations", "drag", "layoutFeatures", "motion", "createMotionProxy", "Component", "config", "createDomMotionConfig", "createDomVisualElement", "HTMLProjectionNode", "createDomMotionComponent", "key", "createMotionComponent", "init_define_process", "m", "createMotionProxy", "createDomMotionConfig", "init_define_process", "init_react_preact", "init_define_process", "init_react_preact", "useIsMounted", "isMounted", "useRef", "useIsomorphicLayoutEffect", "useForceUpdate", "isMounted", "useIsMounted", "forcedRenderCount", "setForcedRenderCount", "useState", "forceRender", "useCallback", "es_default", "init_define_process", "init_react_preact", "init_define_process", "init_react_preact", "init_define_process", "init_react_preact", "PopChildMeasure", "Component", "prevProps", "element", "size", "PopChild", "children", "isPresent", "id", "useId", "ref", "useRef", "useInsertionEffect", "_a", "width", "height", "top", "left", "style", "createElement", "cloneElement", "PresenceChild", "children", "initial", "isPresent", "onExitComplete", "custom", "presenceAffectsLayout", "mode", "presenceChildren", "useConstant", "newChildrenMap", "id", "useId", "context", "useMemo", "childId", "isComplete", "_", "key", "useEffect", "createElement", "PopChild", "PresenceContext", "getChildKey", "child", "updateChildLookup", "children", "allChildren", "key", "onlyElements", "filtered", "Children", "isValidElement", "AnimatePresence", "custom", "initial", "onExitComplete", "exitBeforeEnter", "presenceAffectsLayout", "mode", "warnOnce", "forceRender", "useForceUpdate", "forceRenderLayoutGroup", "useContext", "LayoutGroupContext", "isMounted", "useIsMounted", "filteredChildren", "childrenToRender", "exiting", "presentChildren", "useRef", "isInitialRender", "useIsomorphicLayoutEffect", "useUnmountEffect", "createElement", "p", "PresenceChild", "presentKeys", "targetKeys", "numPresent", "i", "insertionIndex", "onExit", "removeIndex", "presentChild", "env", "cloneElement", "init_define_process", "init_react_preact", "DeprecatedLayoutGroupContext", "createContext", "init_define_process", "init_react_preact", "init_define_process", "notify", "node", "nodeGroup", "nodes", "subscriptions", "dirtyAll", "_a", "shouldInheritGroup", "inherit", "shouldInheritId", "LayoutGroup", "children", "id", "inheritId", "_a", "_b", "layoutGroupContext", "useContext", "LayoutGroupContext", "deprecatedLayoutGroupContext", "DeprecatedLayoutGroupContext", "forceRender", "key", "useForceUpdate", "context", "useRef", "upstreamId", "nodeGroup", "memoizedContext", "useMemo", "createElement", "init_define_process", "init_react_preact", "id", "AnimateSharedLayout", "children", "useEffect", "warning", "createElement", "LayoutGroup", "useConstant", "init_define_process", "init_react_preact", "__rest", "MotionConfig", "_a", "children", "isValidProp", "config", "__rest", "loadExternalIsValidProp", "useContext", "MotionConfigContext", "useConstant", "context", "useMemo", "createElement", "init_define_process", "init_react_preact", "__rest", "LazyMotion", "children", "features", "strict", "setIsLoaded", "useState", "isLazyBundle", "loadedRenderer", "useRef", "renderer", "loadedFeatures", "__rest", "loadFeatures", "useEffect", "_a", "createElement", "LazyContext", "init_define_process", "init_react_preact", "useMotionValue", "initial", "value", "useConstant", "motionValue", "isStatic", "useContext", "MotionConfigContext", "setLatest", "useState", "useEffect", "init_define_process", "isCustomValueType", "v", "getMixer", "transform", "args", "useImmediate", "argOffset", "inputValue", "inputRange", "outputRange", "options", "interpolator", "interpolate", "init_define_process", "init_define_process", "init_define_process", "useOnChange", "value", "callback", "useIsomorphicLayoutEffect", "isMotionValue", "useMultiOnChange", "values", "handler", "subscriptions", "unsubscribe", "useCombineMotionValues", "values", "combineValues", "value", "useMotionValue", "updateValue", "useMultiOnChange", "es_default", "useTransform", "input", "inputRangeOrTransformer", "outputRange", "options", "transformer", "transform", "useListTransform", "latest", "values", "useConstant", "useCombineMotionValues", "numValues", "init_define_process", "init_define_process", "__rest", "init_react_preact", "init_define_process", "init_react_preact", "ReorderContext", "createContext", "init_define_process", "checkReorder", "order", "value", "offset", "velocity", "index", "item", "nextOffset", "nextItem", "nextLayout", "nextItemCenter", "mix", "moveItem", "ReorderGroup", "_a", "externalRef", "children", "as", "axis", "onReorder", "values", "props", "__rest", "Component", "useConstant", "motion", "order", "isReordering", "useRef", "invariant", "context", "value", "layout", "entry", "compareMin", "id", "offset", "velocity", "newOrder", "checkReorder", "getValue", "useEffect", "createElement", "ReorderContext", "Group", "forwardRef", "item", "a", "b", "init_define_process", "__rest", "init_react_preact", "useDefaultMotionValue", "value", "defaultValue", "isMotionValue", "useMotionValue", "ReorderItem", "_a", "externalRef", "children", "style", "as", "onDrag", "layout", "props", "__rest", "Component", "useConstant", "motion", "context", "useContext", "ReorderContext", "point", "zIndex", "useTransform", "latestX", "latestY", "measuredLayout", "useRef", "invariant", "axis", "registerItem", "updateOrder", "useEffect", "createElement", "event", "gesturePoint", "velocity", "measured", "Item", "forwardRef", "Reorder", "Group", "Item", "init_define_process", "domAnimation", "createDomVisualElement", "animations", "gestureAnimations", "init_define_process", "domMax", "domAnimation", "drag", "layoutFeatures", "HTMLProjectionNode", "init_define_process", "useMotionTemplate", "fragments", "values", "numFragments", "buildValue", "output", "i", "useCombineMotionValues", "init_define_process", "init_react_preact", "useSpring", "source", "config", "isStatic", "useContext", "MotionConfigContext", "activeSpringAnimation", "useRef", "value", "useMotionValue", "isMotionValue", "useMemo", "v", "set", "animate", "useOnChange", "init_define_process", "init_react_preact", "useVelocity", "value", "velocity", "useMotionValue", "useEffect", "newVelocity", "init_define_process", "__rest", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "clamp", "min", "max", "v", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "isNumber", "value", "isEasingList", "easing", "isNumber", "init_define_process", "wrap", "min", "max", "v", "rangeSize", "getEasingForSegment", "easing", "i", "isEasingList", "wrap", "init_define_process", "init_define_process", "mix", "min", "max", "progress", "init_define_process", "noopReturn", "v", "init_define_process", "init_define_process", "progress", "min", "max", "value", "fillOffset", "offset", "remaining", "min", "i", "offsetProgress", "progress", "mix", "defaultOffset", "length", "interpolate", "output", "input", "defaultOffset", "easing", "noopReturn", "length", "remainder", "fillOffset", "t", "i", "progressInRange", "clamp", "progress", "getEasingForSegment", "mix", "init_define_process", "init_define_process", "init_define_process", "isFunction", "value", "init_define_process", "isString", "value", "init_define_process", "time", "seconds", "milliseconds", "init_define_process", "velocityPerSecond", "velocity", "frameDuration", "axes", "order", "rotation", "v", "baseTransformProperties", "noopReturn", "transformDefinitions", "asTransformCssVar", "name", "transforms", "order", "axes", "axis", "transformLookup", "transforms", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "calcBezier", "a1", "a2", "subdivisionPrecision", "subdivisionMaxIterations", "binarySubdivide", "x", "lowerBound", "upperBound", "mX1", "mX2", "currentX", "currentT", "i", "cubicBezier", "mY1", "mY2", "noopReturn", "getTForX", "aX", "t", "init_define_process", "namedEasings", "cubicBezier", "init_define_process", "init_define_process", "testAnimation", "keyframes", "options", "featureTests", "results", "supports", "key", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "resolveElements", "elements", "selectorCache", "_a", "init_define_process", "init_define_process", "init_define_process", "__rest", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "sampleT", "calcGeneratorVelocity", "resolveValue", "t", "current", "prevT", "velocityPerSecond", "init_define_process", "init_define_process", "defaults", "init_define_process", "calcDampingRatio", "stiffness", "defaults", "damping", "mass", "init_define_process", "hasReachedTarget", "origin", "target", "current", "spring", "stiffness", "defaults", "damping", "mass", "from", "to", "velocity", "restSpeed", "restDistance", "time", "state", "initialDelta", "undampedAngularFreq", "dampingRatio", "calcDampingRatio", "resolveSpring", "angularFreq", "t", "currentVelocity", "calcGeneratorVelocity", "isBelowVelocityThreshold", "isBelowDisplacementThreshold", "hasReachedTarget", "glide", "from", "velocity", "power", "decay", "bounceDamping", "bounceStiffness", "changeTarget", "min", "max", "restDistance", "restSpeed", "time", "state", "isOutOfBounds", "v", "nearestBoundary", "amplitude", "ideal", "target", "calcDelta", "t", "calcLatest", "applyFriction", "delta", "latest", "timeReachedBoundary", "spring$1", "checkCatchBoundary", "spring", "calcGeneratorVelocity", "hasUpdatedFrame", "init_define_process", "timeStep", "maxDuration", "pregenerateKeyframes", "generator", "toUnit", "noopReturn", "overshootDuration", "timestamp", "state", "keyframes", "duration", "init_define_process", "createGeneratorEasing", "createGenerator", "keyframesCache", "options", "generatorCache", "getGenerator", "from", "to", "velocity", "isScale", "key", "getKeyframes", "generator", "pregenerateKeyframes", "keyframes", "getOrigin", "canUseGenerator", "name", "motionValue", "_a", "_b", "settings", "numKeyframes", "isNumberOrNull", "target", "unresolvedOrigin", "origin", "prevGenerator", "animation", "generatorStartTime", "startTime", "currentTime", "prevGeneratorCurrent", "calcGeneratorVelocity", "t", "keyframesMetadata", "value", "spring", "createGeneratorEasing", "init_define_process", "glide", "createGeneratorEasing", "init_define_process", "thresholds", "inView", "elementOrSelector", "onStart", "root", "rootMargin", "amount", "elements", "resolveElements", "activeIntersections", "onIntersectionChange", "entries", "entry", "onEnd", "newOnEnd", "isFunction", "observer", "element", "init_define_process", "init_define_process", "resizeHandlers", "observer", "getElementSize", "target", "borderBoxSize", "inlineSize", "blockSize", "notifyTarget", "contentRect", "_a", "handler", "notifyAll", "entries", "createResizeObserver", "resizeElement", "elements", "resolveElements", "element", "elementHandlers", "init_define_process", "windowCallbacks", "windowResizeHandler", "createWindowResizeHandler", "size", "info", "callback", "resizeWindow", "resize", "a", "b", "isFunction", "resizeWindow", "resizeElement", "init_define_process", "__rest", "init_define_process", "maxElapsed", "createAxisInfo", "createScrollInfo", "keys", "updateAxisInfo", "element", "axisName", "info", "time", "axis", "length", "position", "prev", "prevTime", "progress", "elapsed", "velocityPerSecond", "updateScrollInfo", "init_define_process", "init_define_process", "init_define_process", "calcInset", "element", "container", "inset", "current", "top", "left", "init_define_process", "ScrollOffset", "init_define_process", "init_define_process", "namedEdges", "resolveEdge", "edge", "length", "inset", "delta", "isString", "asNumber", "isNumber", "defaultOffset", "resolveOffset", "offset", "containerLength", "targetLength", "targetInset", "offsetDefinition", "targetPoint", "containerPoint", "isNumber", "isString", "namedEdges", "resolveEdge", "point", "resolveOffsets", "container", "info", "options", "offsetDefinition", "ScrollOffset", "target", "axis", "lengthLabel", "inset", "calcInset", "targetSize", "containerSize", "hasChanged", "numOffsets", "i", "offset", "resolveOffset", "interpolate", "defaultOffset", "measure", "container", "target", "info", "node", "createOnScrollHandler", "element", "onScroll", "options", "axis", "time", "updateScrollInfo", "resolveOffsets", "isFunction", "scrubAnimation", "controls", "axisInfo", "animation", "easing", "_a", "_b", "noopReturn", "timingOptions", "scrollListeners", "resizeListeners", "onScrollHandlers", "getEventTarget", "element", "scroll", "onScroll", "_a", "container", "options", "__rest", "containerHandlers", "info", "createScrollInfo", "containerHandler", "createOnScrollHandler", "listener", "time", "handler", "target", "resize", "onLoadProcesss", "init_define_process", "__rest", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "init_define_process", "__rest", "init_define_process", "dispatchPointerEvent", "element", "name", "event", "dispatchViewEvent", "entry", "inView", "options", "element", "enable", "disable", "inViewOptions", "once", "viewOptions", "__rest", "enterEntry", "dispatchViewEvent", "leaveEntry", "init_define_process", "mouseEvent", "element", "name", "action", "event", "dispatchPointerEvent", "hover", "options", "enable", "disable", "onEnter", "onLeave", "init_define_process", "press", "options", "element", "enable", "disable", "onPointerUp", "event", "dispatchPointerEvent", "onPointerDown", "gestures", "inView", "hover", "press", "stateTypes", "init_define_process", "init_define_process", "createScrollMotionValues", "motionValue", "useScroll", "_a", "container", "target", "options", "__rest", "values", "useConstant", "useIsomorphicLayoutEffect", "scroll", "x", "y", "init_define_process", "useElementScroll", "ref", "warnOnce", "useScroll", "init_define_process", "useViewportScroll", "warnOnce", "useScroll", "init_define_process", "init_react_preact", "useAnimationFrame", "callback", "initialTimestamp", "useRef", "isStatic", "useContext", "MotionConfigContext", "useEffect", "provideTimeSinceStart", "timestamp", "es_default", "cancelSync", "init_define_process", "useTime", "time", "useMotionValue", "useAnimationFrame", "t", "init_define_process", "WillChangeMotionValue", "MotionValue", "name", "memberName", "isTransformProp", "isTransformOriginProp", "isCSSVariable", "camelToDash", "addUniqueItem", "removeItem", "useWillChange", "useConstant", "init_define_process", "animationControls", "hasMounted", "pendingAnimations", "subscribers", "controls", "visualElement", "definition", "transitionOverride", "animations", "animateVisualElement", "resolve", "invariant", "setValues", "stopAnimation", "animation", "init_define_process", "init_react_preact", "useAnimationControls", "controls", "useConstant", "animationControls", "useEffect", "useAnimation", "init_define_process", "init_react_preact", "useCycle", "items", "index", "useRef", "item", "setItem", "useState", "runCycle", "useCallback", "next", "wrap", "init_define_process", "init_react_preact", "useInView", "ref", "root", "margin", "amount", "once", "isInView", "setInView", "useState", "useEffect", "_a", "onEnter", "options", "inView", "init_define_process", "DragControls", "controls", "event", "options", "createDragControls", "useDragControls", "useConstant", "init_define_process", "useInstantLayoutTransition", "startTransition", "cb", "rootProjectionNode", "init_define_process", "init_react_preact", "useInstantTransition", "forceUpdate", "forcedRenderCount", "useForceUpdate", "startInstantLayoutTransition", "useInstantLayoutTransition", "useEffect", "es_default", "instantAnimationState", "callback", "init_define_process", "init_react_preact", "useResetProjection", "useCallback", "root", "rootProjectionNode", "init_define_process", "init_react_preact", "__rest", "createObject", "stateVisualElement", "visualElement", "createBox", "_state", "key", "options", "element", "_a", "transition", "transitionEnd", "target", "__rest", "origin", "getOrigin", "checkTargetForNewValues", "useVisualState", "makeUseVisualState", "useAnimatedState", "initialState", "animationState", "setAnimationState", "useState", "visualState", "useConstant", "useEffect", "v", "startAnimation", "animationDefinition", "animateVisualElement", "init_define_process", "maxScale", "invertScale", "scale", "hasWarned", "useInvertedScale", "parentScaleX", "useMotionValue", "parentScaleY", "visualElement", "useVisualElementContext", "invariant", "warning", "scaleX", "useTransform", "scaleY", "init_define_process"]
}
