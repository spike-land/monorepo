import{importScript as g}from"../dist/importScript.js";import{starter as j}from"./starterNoFramerMotion.js";const s={firstLoad:!0,errorCode:"",code:""};function T(n){return window.prettier.format(n,{arrowParens:"always",bracketSpacing:!0,embeddedLanguageFormatting:"auto",htmlWhitespaceSensitivity:"css",insertPragma:!1,jsxBracketSameLine:!0,jsxSingleQuote:!1,printWidth:80,proseWrap:"preserve",quoteProps:"as-needed",requirePragma:!1,semi:!0,singleQuote:!0,tabWidth:2,trailingComma:"all",useTabs:!1,vueIndentScriptAndStyle:!1,parser:"babel",plugins:window.prettierPlugins})}function x(n="zbody",l){try{const m=window.document.getElementById(n),b=m.innerHTML;b.length>0&&(ReactDOM.unmountComponentAtNode(l),m.innerHTML=b)}catch(m){console.error("Error in un-mount",m)}}export async function run(n="window"){const{transpileCode:l}=await import("./transpile.js");if(s.code=await B(),n==="editor"){const{renderDraggableEditor:t}=await import("./DraggableEditor.js");await t()}if(n==="window"){const{renderDraggableWindow:t}=await import("./DraggableWindow.js"),{shareItAsHtml:e}=await import("./share.js");await t({onShare:async()=>{const a=await e({code:await l(s.code)});window.open(a)}})}const{getDB:m}=await import("../dist/shaDB.min.js"),{getUserId:b,getProjects:H,saveCode:k}=await import("./data.js"),C=await l(s.code);S(C);const{startMonaco:v}=await import("../dist/editor.min.js");let D=0;await g("https://unpkg.com/prettier@2.2.1/standalone.js"),await g("https://unpkg.com/prettier@2.2.1/parser-babel.js"),await g("https://unpkg.com/prettier@2.2.1/parser-html.js");const i=await v({language:"typescript",code:T(s.code),onChange:L});async function L(t){try{const e=await l(t);let a=!1;e.length&&D===0&&(a=await S(e));const r=[...a?[a]:[],...await M(t)];D&&r.length===0&&S(e),D=r.length;const o=window.document.getElementById("error");if(r.length===0&&e.length)s.code=t,await k(T(t));else{s.error=t;const{diff:p}=await import("../dist/diff.min.js"),c=await p(s.code,t);if(c.c.length<=3){i.monaco.editor.setTheme("hc-black");return}o.innerHTML=r[0].messageText.toString(),o.style.display="block";return}o.style.display="none",i.monaco.editor.setTheme("vs-dark")}catch(e){i.monaco.editor.setTheme("vs-light"),setTimeout(()=>{i.monaco.editor.setTheme("hc-black")},50),console.error(e)}}async function M(t){if(!i||!i.monaco)return;const{monaco:e}=i,{sha256:a}=await import("./sha256.js"),r=await a(t),o=`file:///${r}.tsx`,p=e.Uri.parse(o),c=e.editor.getModel(p)||await e.editor.createModel(t,"typescript",p),h=await e.languages.typescript.getTypeScriptWorker(),w=await h(c.uri),d=w.getSemanticDiagnostics(o),u=w.getCompilerOptionsDiagnostics(o),f=w.getSyntacticDiagnostics(o),y=await Promise.race([d,u,f]);return c.dispose(),[...y]}await g("https://unpkg.com/react-dom@17.0.1/umd/react-dom.production.min.js");function S(t){if(typeof t!="string"||t==="")return;let e=!1;const a=()=>{const r=n==="window"?t.replace("body{","#root{"):t;e&&(x("zbody",e),e=!1);const o=new Function("importScript",`return function(){  
          let DefaultElement;
          const root = document.createElement("div");

          try{

                ${r}

                
                root.innerHTML = ReactDOMServer.renderToString(jsx(DefaultElement));

                hydrated = DefaultElement;
                setTimeout(async()=>{
                  if (hydrated === DefaultElement){
                    ReactDOM.hydrate(jsx(DefaultElement), root);
                  }
                }, 500);

          } catch (e){
            root.innerHTML = e.message;
          }

          if(document.getElementById("zbody").children.length) {
            document.getElementById("zbody").children[0].remove();
          }
          
          document.getElementById("zbody").appendChild(root);
      }`)(g);o()};a()}async function B(){const{getUserId:t,getProjects:e,saveCode:a}=await import("./data.js"),{getDB:r}=await import("../dist/shaDB.min.js"),o=await r(),p=await t(),c=await e(),h=c[0],w=new URLSearchParams(window.location.search),d=w.get("h")||await o.get(h);if(d){let u;try{u=await o.get(d)}catch{console.error("error load key: "+d)}if(u)return u;let f;try{const y=await fetch("https://code.zed.vision/?h="+d);f=await y.json()}catch(y){const{sha256:I}=await import("./sha256.js"),E=await I(j);return o.put(E,j),await o.put(h,E),j}return f}return j}function P(t,e){const a=new URLSearchParams(window.location.search);a.set(t,e),window.history.replaceState({},"",decodeURIComponent(`${window.location.pathname}?${a}`))}}
