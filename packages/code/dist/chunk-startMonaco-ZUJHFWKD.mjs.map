{
  "version": 3,
  "sources": ["(disabled):os", "../js/startMonaco.ts", "../../../.yarn/global/cache/p-map-npm-5.5.0-9758eb14ee-9.zip/node_modules/p-map/index.js", "../../../.yarn/global/cache/aggregate-error-npm-4.0.1-12d0501fb7-9.zip/node_modules/aggregate-error/index.js", "../../../.yarn/global/cache/indent-string-npm-5.0.0-35eaa3b052-9.zip/node_modules/indent-string/index.js", "../../../.yarn/global/cache/clean-stack-npm-4.2.0-bb0dff47b2-9.zip/node_modules/clean-stack/index.js", "../../../.yarn/global/cache/escape-string-regexp-npm-5.0.0-a663e825ce-9.zip/node_modules/escape-string-regexp/index.js"],
  "sourcesContent": ["", "import { dependencies } from \"../package.json\";\nimport type monaco from \"monaco-editor\";\n\nimport { Uri } from \"monaco-editor\";\nimport pMap from \"p-map\";\nconst version = dependencies[\"monaco-editor\"];\n// import codion from \"monaco-editor/esm/vs/base/browser/ui/codicons/codicon/codicon.ttf\"\n// import * as editorCss from \"monaco-editor/min/vs/editor/editor.main.css\"\n\n// import { createJsBlob } from \"./starter\";\nimport editorWorker from \"./monaco-editor/editor/editor.worker.monaco.worker.js?url\";\nimport tsWorker from \"./monaco-editor/language/typescript/ts.worker.monaco.worker.js?url\";\n\n// import wfile from \"monaco-editor/min/vs/language/typescript/tsWorker.js\";\n// import efile from \"monaco-editor/min/vs/editor/editor.main.js\";\n\n//@ts-ignore\n//@ts-ignore\n\n// import { MonacoJsxSyntaxHighlight } from \"monaco-jsx-syntax-highlight\";\n\n// import { parse } from \"@babel/parser\";\n// import traverse from \"@babel/traverse\";\n// import MonacoJSXHighlighter from \"monaco-jsx-highlighter\";\n// import Buffer from \"buffer\";\n\n// globalThis.Buffer = Buffer;\n\nlet started = false;\n\nconst monacoContribution = async (\n  typescript: typeof monaco.languages.typescript,\n  editor: typeof monaco.editor,\n  code: string,\n) => {\n  // const {typescript} = languages;\n  typescript.typescriptDefaults\n    .setDiagnosticsOptions({\n      noSuggestionDiagnostics: true,\n      noSemanticValidation: true,\n      noSyntaxValidation: true,\n    });\n\n  typescript.typescriptDefaults.setCompilerOptions({\n    baseUrl: location.origin + \"/live/\",\n    target: typescript.ScriptTarget.ESNext,\n    lib: [\n      \"dom\",\n      \"dom.iterable\",\n      \"esnext\",\n    ],\n    allowJs: true,\n    skipLibCheck: true,\n    esModuleInterop: true,\n    allowSyntheticDefaultImports: true,\n    strict: true,\n    forceConsistentCasingInFileNames: true,\n    noFallthroughCasesInSwitch: true,\n    resolveJsonModule: true,\n    isolatedModules: true,\n    noEmit: true,\n\n    allowNonTsExtensions: true,\n    moduleResolution: typescript.ModuleResolutionKind.NodeJs,\n    declaration: false,\n    module: typescript.ModuleKind.ESNext,\n    noEmitOnError: true,\n    maxNodeModuleJsDepth: 10,\n\n    jsxImportSource: \"@emotion/react\",\n    jsx: typescript.JsxEmit.ReactJSX,\n    allowUmdGlobalAccess: true,\n  });\n\n  const regex1 = / from \\'\\.\\./ig;\n\n  const regex2 = / from \\'\\./ig;\n\n  const search = new RegExp(` from '${origin}/live/[a-zA-Z]+`, \"gm\");\n  const replaced = code.replaceAll(regex1, ` from '${location.origin}/live`)\n    .replaceAll(regex2, ` from '${location.origin}/live`);\n\n  const models = replaced.matchAll(search);\n  // console.log(\"load more models\", replaced, models);\n\n  for (const match of models) {\n    console.log(\"***** EXTRA MODELS *****\");\n\n    const extraModel = match[0].slice(7) + \".tsx\";\n    console.log(extraModel);\n    editor.createModel(\n      await fetch(extraModel).then((res) => res.text()),\n      \"typescript\",\n      Uri.parse(extraModel),\n    );\n  }\n\n  (async () => {\n    const { dtsFiles } = await import(\"./types.mjs\");\n    const {\n      reactDts,\n      // jsxDevRuntimeDts,\n      jsxRuntimeDts,\n      // reactExpDts,\n      // globalDts,\n      propTypesDts,\n      cssTypeDts,\n      framerDts,\n      emotionStyled,\n      emotionStyleBase,\n      emotionCache,\n      emotionJSXNameSpaceDTS,\n      emotionJSXRuntimeDTS,\n      emotionReactDts,\n      emotionReactCssPropDts,\n      emotionReactHelperDts,\n      emotionThemingDts,\n      emotionSerializeDts,\n      emotionUtilsDts,\n    } = dtsFiles;\n    const importHelper = [\n      {\n        name: \"react\",\n        url: reactDts,\n        depend: [\"global\", \"csstype\", \"prop-types\"],\n      },\n      {\n        name: \"react/jsx-runtime\",\n        url: jsxRuntimeDts,\n        depend: [\"global\", \"csstype\", \"prop-types\"],\n      },\n      {\n        name: \"react/jsx-dev-runtime\",\n        url: jsxRuntimeDts,\n        depend: [\"global\", \"csstype\", \"prop-types\"],\n      },\n      // {\n      // name: \"react-exp\",\n      // url: reactExpDts,\n      // depend: [],\n      // },\n      // {\n      // name: \"global\",\n      // url: globalDts,\n      // depend: [],\n      // },\n      {\n        name: \"prop-types\",\n        url: propTypesDts,\n        depend: [],\n      },\n      {\n        name: \"csstype\",\n        url: cssTypeDts,\n        depend: [],\n      },\n      {\n        name: \"@emotion/base\",\n        url: emotionStyleBase,\n        depend: [\n          \"@emotion/react\",\n          \"@emotion/serialize\",\n          \"react\",\n        ],\n      },\n      {\n        name: \"@emotion/styled\",\n        url: emotionStyled,\n        depend: [\n          \"@emotion/react\",\n          \"@emotion/serialize\",\n          \"react\",\n        ],\n      },\n      {\n        name: \"@emotion/cache\",\n        url: emotionCache,\n        depend: [\"@emotion/utils\"],\n      },\n      {\n        name: \"@emotion/react\",\n        url: emotionReactDts,\n        depend: [\"@emotion/cache\"],\n      },\n      {\n        name: \"@emotion/react/jsx-runtime\",\n        url: emotionJSXRuntimeDTS,\n        depend: [\"@emotion/cache\"],\n      },\n      {\n        name: \"@emotion/react/jsx-dev-runtime\",\n        url: emotionJSXRuntimeDTS,\n        depend: [\"@emotion/cache\"],\n      },\n      {\n        name: \"@emotion/react/jsx-namespace\",\n        url: emotionJSXNameSpaceDTS,\n        depend: [\"@emotion/utils\", \"type\"],\n      },\n      {\n        name: \"@emotion/react/theming\",\n        url: emotionThemingDts,\n        depend: [\"@emotion/utils\", \"type\"],\n      },\n      {\n        name: \"@emotion/react/css-prop\",\n        url: emotionReactCssPropDts,\n        depend: [\"@emotion/utils\", \"csstype\"],\n      },\n      {\n        name: \"@emotion/react/helper\",\n        url: emotionReactHelperDts,\n        depend: [\"@emotion/utils\", \"csstype\"],\n      },\n      {\n        name: \"@emotion/serialize\",\n        url: emotionSerializeDts,\n\n        depend: [\"@emotion/utils\", \"csstype\"],\n      },\n      {\n        name: \"@emotion/utils\",\n        url: emotionUtilsDts,\n        depend: [],\n      },\n      {\n        name: \"framer-motion\",\n        url: framerDts,\n        depend: [\"popmotion\"],\n      },\n    ];\n\n    try {\n      const mapper = async ({ name, url }: { name: string; url: string }) =>\n        typescript.typescriptDefaults.addExtraLib(\n          await (await fetch(\n            url,\n          )).text(),\n          location.origin + `/live/${name}.d.ts`,\n        );\n\n      await pMap(importHelper, mapper, { concurrency: 2 });\n    } catch {\n      console.error(\"Error in loading d.td\");\n    }\n    typescript.typescriptDefaults.setEagerModelSync(true);\n    typescript.typescriptDefaults.setDiagnosticsOptions({\n      noSuggestionDiagnostics: false,\n      noSemanticValidation: false,\n      noSyntaxValidation: false,\n    });\n  })();\n};\n\nwindow.MonacoEnvironment = {\n  getWorker: function (_workerId: string, label: string) {\n    if (label === \"typescript\" || label === \"javascript\") {\n      return new Worker(tsWorker);\n    }\n    return new Worker(editorWorker);\n  },\n};\n\nexport const startMonaco = async (\n  { code, container, name }: {\n    code: string;\n    container: HTMLDivElement;\n    name: string;\n  },\n) => {\n  const { languages, editor } = await import(\"monaco-editor\");\n\n  const returnModules = {\n    editor: {} as unknown as ReturnType<typeof editor.create>,\n    monaco: { editor, languages, Uri },\n  };\n\n  console.log(\"monaco-editor\");\n  if (!started) started = true;\n  else return returnModules;\n  // const shadowRoot = container.attachShadow({\n  //   mode: \"open\",\n  // });\n  // const innerContainer = document.createElement(\"div\");\n  // // shadowRoot.appendChild(innerContainer);\n  // innerContainer.style.width = \"100%\";\n  // innerContainer.style.height = \"100%\";\n\n//   const outerStyle = document.createElement(\"style\");\n//   outerStyle.innerText = ` @font-face {\n//      font-family: codicon;\n//      font-display: block;\n//       src: url(/npm:monaco-editor@${version}/esm/vs/base/browser/ui/codicons/codicon/codicon.ttf) format(\"truetype\");\n\n// // }`;\n\n  const innerStyle = document.createElement(\"style\");\n\n  innerStyle.innerText = `@import url(/npm:monaco-editor@${version}/?css);`;\n  container.appendChild(innerStyle);\n\n  // innerStyle.innerText = `@import url(/npm:monaco-editor@${version}/?css);`;\n  // shadowRoot.appendChild(innerStyle);\n\n  await monacoContribution(languages.typescript, editor, code);\n\n  returnModules.editor = editor.create( container, {\n    model: editor.createModel(\n      code,\n      \"typescript\",\n      Uri.parse(location.origin + \"/live/\" + name + \".tsx\"),\n    ),\n    language: \"typescript\",\n\n    scrollbar: {\n      scrollByPage: false,\n      alwaysConsumeMouseWheel: false,\n    },\n    scrollBeyondLastLine: false,\n    scrollPredominantAxis: false,\n\n    smoothScrolling: true,\n\n    suggest: {\n      /**\n       * Overwrite word ends on accept. Default to false.\n       */\n      insertMode: \"replace\",\n      /**\n       * Enable graceful matching. Defaults to true.\n       */\n      filterGraceful: true,\n      /**\n       * Prevent quick suggestions when a snippet is active. Defaults to true.\n       */\n      snippetsPreventQuickSuggestions: true,\n      /**\n       * Favors words that appear close to the cursor.\n       */\n      localityBonus: true,\n      /**\n       * Enable using global storage for remembering suggestions.\n       */\n      shareSuggestSelections: true,\n      /**\n       * Enable or disable icons in suggestions. Defaults to true.\n       */\n      showIcons: true,\n      /**\n       * Enable or disable the suggest status bar.\n       */\n      showStatusBar: false,\n      /**\n       * Enable or disable the rendering of the suggestion preview.\n       */\n      preview: true,\n      /**\n       * Configures the mode of the preview.\n       */\n      previewMode: \"prefix\",\n      /**\n       * Show details inline with the label. Defaults to true.\n       */\n      showInlineDetails: true,\n\n      /**\n       * Show method-suggestions.\n       */\n      showMethods: true,\n      /**\n       * Show function-suggestions.\n       */\n      showFunctions: true,\n      /**\n       * Show constructor-suggestions.\n       */\n      showConstructors: true,\n      /**\n       * Show deprecated-suggestions.\n       */\n\n      /**\n       * Show field-suggestions.\n       */\n\n      /**\n       * Show color-suggestions.\n       */\n      showColors: true,\n      /**\n       * Show file-suggestions.\n       */\n      showFiles: true,\n      /**\n       * Show reference-suggestions.\n       */\n      showReferences: true,\n      /**\n       * Show folder-suggestions.\n       */\n      showFolders: true,\n      /**\n       * Show typeParameter-suggestions.\n       */\n      showTypeParameters: true,\n      /**\n       * Show issue-suggestions.\n       */\n      showIssues: true,\n      /**\n       * Show user-suggestions.\n       */\n      showUsers: true,\n      /**\n       * Show snippet-suggestions.\n       */\n      showSnippets: true,\n    },\n\n    automaticLayout: true,\n    definitionLinkOpensInPeek: true,\n\n    theme: \"vs-dark\",\n\n    autoClosingBrackets: \"beforeWhitespace\",\n  });\n\n  return returnModules;\n};\n", "import AggregateError from 'aggregate-error';\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined\n\t? new AbortError(errorMessage)\n\t: new DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n\tconst reason = signal.reason === undefined\n\t\t? getDOMException('This operation was aborted.')\n\t\t: signal.reason;\n\n\treturn reason instanceof Error ? reason : getDOMException(reason);\n};\n\nexport default async function pMap(\n\titerable,\n\tmapper,\n\t{\n\t\tconcurrency = Number.POSITIVE_INFINITY,\n\t\tstopOnError = true,\n\t\tsignal,\n\t} = {},\n) {\n\treturn new Promise((resolve, reject_) => {\n\t\tif (iterable[Symbol.iterator] === undefined && iterable[Symbol.asyncIterator] === undefined) {\n\t\t\tthrow new TypeError(`Expected \\`input\\` to be either an \\`Iterable\\` or \\`AsyncIterable\\`, got (${typeof iterable})`);\n\t\t}\n\n\t\tif (typeof mapper !== 'function') {\n\t\t\tthrow new TypeError('Mapper function is required');\n\t\t}\n\n\t\tif (!((Number.isSafeInteger(concurrency) || concurrency === Number.POSITIVE_INFINITY) && concurrency >= 1)) {\n\t\t\tthrow new TypeError(`Expected \\`concurrency\\` to be an integer from 1 and up or \\`Infinity\\`, got \\`${concurrency}\\` (${typeof concurrency})`);\n\t\t}\n\n\t\tconst result = [];\n\t\tconst errors = [];\n\t\tconst skippedIndexesMap = new Map();\n\t\tlet isRejected = false;\n\t\tlet isResolved = false;\n\t\tlet isIterableDone = false;\n\t\tlet resolvingCount = 0;\n\t\tlet currentIndex = 0;\n\t\tconst iterator = iterable[Symbol.iterator] === undefined ? iterable[Symbol.asyncIterator]() : iterable[Symbol.iterator]();\n\n\t\tconst reject = reason => {\n\t\t\tisRejected = true;\n\t\t\tisResolved = true;\n\t\t\treject_(reason);\n\t\t};\n\n\t\tif (signal) {\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t}\n\n\t\t\tsignal.addEventListener('abort', () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t});\n\t\t}\n\n\t\tconst next = async () => {\n\t\t\tif (isResolved) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextItem = await iterator.next();\n\n\t\t\tconst index = currentIndex;\n\t\t\tcurrentIndex++;\n\n\t\t\t// Note: `iterator.next()` can be called many times in parallel.\n\t\t\t// This can cause multiple calls to this `next()` function to\n\t\t\t// receive a `nextItem` with `done === true`.\n\t\t\t// The shutdown logic that rejects/resolves must be protected\n\t\t\t// so it runs only one time as the `skippedIndex` logic is\n\t\t\t// non-idempotent.\n\t\t\tif (nextItem.done) {\n\t\t\t\tisIterableDone = true;\n\n\t\t\t\tif (resolvingCount === 0 && !isResolved) {\n\t\t\t\t\tif (!stopOnError && errors.length > 0) {\n\t\t\t\t\t\treject(new AggregateError(errors));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tisResolved = true;\n\n\t\t\t\t\tif (skippedIndexesMap.size === 0) {\n\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst pureResult = [];\n\n\t\t\t\t\t// Support multiple `pMapSkip`'s.\n\t\t\t\t\tfor (const [index, value] of result.entries()) {\n\t\t\t\t\t\tif (skippedIndexesMap.get(index) === pMapSkip) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpureResult.push(value);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(pureResult);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolvingCount++;\n\n\t\t\t// Intentionally detached\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst element = await nextItem.value;\n\n\t\t\t\t\tif (isResolved) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst value = await mapper(element, index);\n\n\t\t\t\t\t// Use Map to stage the index of the element.\n\t\t\t\t\tif (value === pMapSkip) {\n\t\t\t\t\t\tskippedIndexesMap.set(index, value);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult[index] = value;\n\n\t\t\t\t\tresolvingCount--;\n\t\t\t\t\tawait next();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (stopOnError) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors.push(error);\n\t\t\t\t\t\tresolvingCount--;\n\n\t\t\t\t\t\t// In that case we can't really continue regardless of `stopOnError` state\n\t\t\t\t\t\t// since an iterable is likely to continue throwing after it throws once.\n\t\t\t\t\t\t// If we continue calling `next()` indefinitely we will likely end up\n\t\t\t\t\t\t// in an infinite loop of failed iteration.\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait next();\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})();\n\t\t};\n\n\t\t// Create the concurrent runners in a detached (non-awaited)\n\t\t// promise. We need this so we can await the `next()` calls\n\t\t// to stop creating runners before hitting the concurrency limit\n\t\t// if the iterable has already been marked as done.\n\t\t// NOTE: We *must* do this for async iterators otherwise we'll spin up\n\t\t// infinite `next()` calls by default and never start the event loop.\n\t\t(async () => {\n\t\t\tfor (let index = 0; index < concurrency; index++) {\n\t\t\t\ttry {\n\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\tawait next();\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (isIterableDone || isRejected) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t});\n}\n\nexport const pMapSkip = Symbol('skip');\n", "import indentString from 'indent-string';\nimport cleanStack from 'clean-stack';\n\nconst cleanInternalStack = stack => stack.replace(/\\s+at .*aggregate-error\\/index.js:\\d+:\\d+\\)?/g, '');\n\nexport default class AggregateError extends Error {\n\t#errors;\n\n\tname = 'AggregateError';\n\n\tconstructor(errors) {\n\t\tif (!Array.isArray(errors)) {\n\t\t\tthrow new TypeError(`Expected input to be an Array, got ${typeof errors}`);\n\t\t}\n\n\t\terrors = errors.map(error => {\n\t\t\tif (error instanceof Error) {\n\t\t\t\treturn error;\n\t\t\t}\n\n\t\t\tif (error !== null && typeof error === 'object') {\n\t\t\t\t// Handle plain error objects with message property and/or possibly other metadata\n\t\t\t\treturn Object.assign(new Error(error.message), error);\n\t\t\t}\n\n\t\t\treturn new Error(error);\n\t\t});\n\n\t\tlet message = errors\n\t\t\t.map(error => {\n\t\t\t\t// The `stack` property is not standardized, so we can't assume it exists\n\t\t\t\treturn typeof error.stack === 'string' && error.stack.length > 0 ? cleanInternalStack(cleanStack(error.stack)) : String(error);\n\t\t\t})\n\t\t\t.join('\\n');\n\t\tmessage = '\\n' + indentString(message, 4);\n\t\tsuper(message);\n\n\t\tthis.#errors = errors;\n\t}\n\n\tget errors() {\n\t\treturn this.#errors.slice();\n\t}\n}\n", "export default function indentString(string, count = 1, options = {}) {\n\tconst {\n\t\tindent = ' ',\n\t\tincludeEmptyLines = false\n\t} = options;\n\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`input\\` to be a \\`string\\`, got \\`${typeof string}\\``\n\t\t);\n\t}\n\n\tif (typeof count !== 'number') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`count\\` to be a \\`number\\`, got \\`${typeof count}\\``\n\t\t);\n\t}\n\n\tif (count < 0) {\n\t\tthrow new RangeError(\n\t\t\t`Expected \\`count\\` to be at least 0, got \\`${count}\\``\n\t\t);\n\t}\n\n\tif (typeof indent !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`options.indent\\` to be a \\`string\\`, got \\`${typeof indent}\\``\n\t\t);\n\t}\n\n\tif (count === 0) {\n\t\treturn string;\n\t}\n\n\tconst regex = includeEmptyLines ? /^/gm : /^(?!\\s*$)/gm;\n\n\treturn string.replace(regex, indent.repeat(count));\n}\n", "import os from 'os';\nimport escapeStringRegexp from 'escape-string-regexp';\n\nconst extractPathRegex = /\\s+at.*[(\\s](.*)\\)?/;\nconst pathRegex = /^(?:(?:(?:node|node:[\\w/]+|(?:(?:node:)?internal\\/[\\w/]*|.*node_modules\\/(?:babel-polyfill|pirates)\\/.*)?\\w+)(?:\\.js)?:\\d+:\\d+)|native)/;\nconst homeDir = typeof os.homedir === 'undefined' ? '' : os.homedir().replace(/\\\\/g, '/');\n\nexport default function cleanStack(stack, {pretty = false, basePath} = {}) {\n\tconst basePathRegex = basePath && new RegExp(`(at | \\\\()${escapeStringRegexp(basePath.replace(/\\\\/g, '/'))}`, 'g');\n\n\tif (typeof stack !== 'string') {\n\t\treturn undefined;\n\t}\n\n\treturn stack.replace(/\\\\/g, '/')\n\t\t.split('\\n')\n\t\t.filter(line => {\n\t\t\tconst pathMatches = line.match(extractPathRegex);\n\t\t\tif (pathMatches === null || !pathMatches[1]) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst match = pathMatches[1];\n\n\t\t\t// Electron\n\t\t\tif (\n\t\t\t\tmatch.includes('.app/Contents/Resources/electron.asar') ||\n\t\t\t\tmatch.includes('.app/Contents/Resources/default_app.asar') ||\n\t\t\t\tmatch.includes('node_modules/electron/dist/resources/electron.asar') ||\n\t\t\t\tmatch.includes('node_modules/electron/dist/resources/default_app.asar')\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn !pathRegex.test(match);\n\t\t})\n\t\t.filter(line => line.trim() !== '')\n\t\t.map(line => {\n\t\t\tif (basePathRegex) {\n\t\t\t\tline = line.replace(basePathRegex, '$1');\n\t\t\t}\n\n\t\t\tif (pretty) {\n\t\t\t\tline = line.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')));\n\t\t\t}\n\n\t\t\treturn line;\n\t\t})\n\t\t.join('\\n');\n}\n", "export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it\u2019s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns\u2019 stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n"],
  "mappings": "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",
  "names": ["os", "index", "error"]
}
