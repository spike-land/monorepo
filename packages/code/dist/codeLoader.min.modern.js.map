{"version":3,"file":"codeLoader.min.modern.js","sources":["../../smart-monaco-editor/dist/smart-monaco-editor.modern.js","../src/DraggableWindow.js","../src/db.js","../src/sha256.js","../src/data.js","../src/starterNoFramerMotion.js","../src/transpile.js","../src/ipfsKV.js","../src/share.js","../src/codeLoader.js"],"sourcesContent":["function e(){return(e=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n])}return e}).apply(this,arguments)}const t=(e,t=[])=>{if(\"https://\"===e.slice(0,8))return window.document.head.querySelector(`script[src=\"${e}\"]`)||new Promise(function(o,n){const s=window.document.createElement(\"script\");s.src=e,s.type=\"application/javascript\",s.onload=()=>{0===t.length&&o(window);const e={};t.forEach(t=>Object.assign(e,window[t])),o(e)},s.onerror=n,window.document.head.appendChild(s)})};export default async({onChange:o,code:n,language:s,options:i})=>{const{document:a}=window;let d=a.getElementById(\"container\");d||(d=a.createElement(\"container\"),d.id=\"container\",a.body.appendChild(d));const c=\"typescript\"===s?\"file:///main.tsx\":\"file:///main.html\";if(\"undefined\"!=typeof window&&/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(window.navigator.userAgent)){const e=window.document.createElement(\"div\");e.id=\"ace\",window.document.body.appendChild(e),await t(\"https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/ace.min.js\"),\"typescript\"===s?await t(\"https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/mode-typescript.min.js\"):await t(\"https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/mode-html.min.js\"),await t(\"https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/theme-monokai.min.js\"),window.document.getElementById(\"ace\").style.setProperty(\"display\",\"block\"),d.style.setProperty(\"display\",\"none\");const o=window.ace.edit(\"ace\");o.getSession().setMode(\"ace/mode/typescript\");const i=e=>setTimeout(()=>{const t=ace.edit(\"ace\");\"ace/theme/monokai \"!==t.getTheme()&&(t.setOptions({fontSize:\"14pt\"}),t.setTheme(\"ace/theme/monokai\"),i(2*e))},e);i(100),o.setValue(n),o.blur()}const r=await(async()=>{const{require:e}=await t(\"https://unpkg.com/monaco-editor@0.21.2/min/vs/loader.js\");return e.config({paths:{vs:\"https://unpkg.com/monaco-editor@0.21.2/min/vs\"}}),await new Promise(t=>e([\"vs/editor/editor.main\"],e=>t(e)))})();let p;try{p=r.editor.getModel(c),p.getValue()!==n&&p.setValue(n)}catch(e){p=await r.editor.createModel(n,s,r.Uri.parse(c))}const l={monaco:r,editor:r.editor.create(window.document.getElementById(\"container\"),e({formatOnType:!1,scrollbar:{horizontal:\"hidden\",verticalHasArrows:!0,verticalScrollbarSize:20},minimap:{enabled:!1},folding:!1,glyphMargin:!1,wordWrap:\"off\",mouseWheelZoom:!1,wordWrapColumn:80,useTabStops:!1,dragAndDrop:!1,disableLayerHinting:!0,formatOnPaste:!1,disableMonospaceOptimizations:!0,showUnused:!0,automaticLayout:!0,scrollBeyondLastLine:!1,autoIndent:\"full\",accessibilitySupport:\"off\",autoClosingQuotes:\"beforeWhitespace\",padding:{bottom:300},lineNumbers:\"on\",autoClosingBrackets:\"beforeWhitespace\",autoClosingOvertype:\"auto\",suggest:{},codeLens:!0,autoSurround:\"languageDefined\",trimAutoWhitespace:!1,codeActionsOnSaveTimeout:100,model:p,value:n,language:s,theme:\"vs-dark\"},i))};if(l.editor.onDidChangeModelContent(()=>o(l.editor.getValue())),aceEditor&&aceEditor.session.on(\"change\",function(){const e=aceEditor.getValue();l.editor.setValue(e),o(e)}),aceEditor&&a.getElementById(\"container\").replaceWith(a.getElementById(\"ace\")),l.monaco.languages.typescript.typescriptDefaults.setDiagnosticsOptions({noSuggestionDiagnostics:!0,noSemanticValidation:!0,noSyntaxValidation:!0}),\"typescript\"===s){const e=[{name:\"react\",url:\"https://unpkg.com/@types/react@17.0.0/index.d.ts\",depend:[\"global\",\"csstype\",\"react-dom\",\"prop-types\"]},{name:\"global\",url:\"https://unpkg.com/@types/react@17.0.0/global.d.ts\",depend:[]},{name:\"prop-types\",url:\"https://unpkg.com/@types/prop-types@15.7.3/index.d.ts\",depend:[]},{name:\"react-dom\",url:\"https://unpkg.com/@types/react-dom@17.0.0/index.d.ts\",depend:[]},{name:\"csstype\",url:\"https://unpkg.com/csstype@3.0.5/index.d.ts\",depend:[]},{name:\"@emotion/styled/base.d.ts\",url:\"https://unpkg.com/@emotion/styled@11.0.0/types/base.d.ts\",depend:[\"@emotion/react\",\"@emotion/serialize\",\"react\"]},{name:\"@emotion/styled/index.d.ts\",url:\"https://unpkg.com/@emotion/styled@11.0.0/types/index.d.ts\",depend:[\"@emotion/react\",\"@emotion/serialize\",\"react\"]},{name:\"@emotion/cache/index.d.ts\",url:\"https://unpkg.com/@emotion/cache@11.0.0/types/index.d.ts\",depend:[\"@emotion/utils\"]},{name:\"@emotion/react/index.d.ts\",url:\"https://unpkg.com/@emotion/react@11.1.3/types/index.d.ts\",depend:[\"@emotion/cache\"]},{name:\"@emotion/react/jsx-namespace.d.ts\",url:\"https://unpkg.com/@emotion/react@11.1.3/types/jsx-namespace.d.ts\",depend:[\"@emotion/utils\",\"csstype\"]},{name:\"@emotion/react/css-prop.d.ts\",url:\"https://unpkg.com/@emotion/react@11.1.3/types/css-prop.d.ts\",depend:[\"@emotion/utils\",\"csstype\"]},{name:\"@emotion/react/helper.d.ts\",url:\"https://unpkg.com/@emotion/react@11.1.3/types/helper.d.ts\",depend:[\"@emotion/utils\",\"csstype\"]},{name:\"@emotion/react/theming.d.ts\",url:\"https://unpkg.com/@emotion/react@11.1.3/types/theming.d.ts\",depend:[\"@emotion/utils\",\"csstype\"]},{name:\"@emotion/serialize/index.d.ts\",url:\"https://unpkg.com/@emotion/serialize@1.0.0/types/index.d.ts\",depend:[\"@emotion/utils\",\"csstype\"]},{name:\"@emotion/utils/index.d.ts\",url:\"https://unpkg.com/@emotion/utils@1.0.0/types/index.d.ts\",depend:[]},{name:\"framer-motion\",url:\"https://unpkg.com/framer-motion@3.1.1/dist/framer-motion.d.ts\",depend:[]},{name:\"popmotion\",url:\"https://unpkg.com/popmotion@9.0.2/lib/index.d.ts\"},{name:\"@zedvision/qrious/index.d.ts\",url:\"https://unpkg.com/@zedvision/qrious@8.5.7/dist/qrious.d.ts\"}].map(({name:e,url:t})=>(async()=>l.monaco.languages.typescript.typescriptDefaults.addExtraLib(await(await fetch(t)).text(),e.includes(\"@\")?`file:///node_modules/${e}`:`file:///node_modules/@types/${e}/index.d.ts`))());return l.monaco.languages.typescript.typescriptDefaults.setCompilerOptions({target:l.monaco.languages.typescript.ScriptTarget.ESNext,allowNonTsExtensions:!0,allowUmdGlobalAccess:!0,strict:!0,allowJs:!0,noEmitOnError:!0,allowSyntheticDefaultImports:!0,moduleResolution:l.monaco.languages.typescript.ModuleResolutionKind.Nodejs,module:l.monaco.languages.typescript.ModuleKind.CommonJS,noEmit:!0,typeRoots:[\"node_modules/@types\"],jsx:\"react-jsx\",esModuleInterop:!0}),await Promise.all(e),l.monaco.languages.typescript.typescriptDefaults.setDiagnosticsOptions({noSuggestionDiagnostics:!1,noSemanticValidation:!1,noSyntaxValidation:!1}),l}};\n//# sourceMappingURL=smart-monaco-editor.modern.js.map\n","/** @jsx jsx */\n\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { css, jsx } from \"@emotion/react\"\n;\nimport { motion } from \"framer-motion\"\n\nexport { jsx };\n\nexport { ReactDOM };\n\nexport const DraggableWindow = ({ onShare }) => {\n  return jsx(\n    React.Fragment,\n    null,\n    jsx(\n      motion.div,\n      {\n        css: css`\n            background: red;\n            border: 4px solid red;\n            border-radius: 8px;\n          `,\n        animate: {\n          scale: 1,\n          top: 1,\n          left: 600,\n        },\n        dragElastic: 0.5,\n        dragMomentum: false,\n        initial: {\n          top: 1,\n          left: 0,\n          scale: 0.7,\n        },\n        transition: {\n          duration: 0.5,\n        },\n        drag: true,\n        dragConstraints: {\n          left: -window.innerWidth + 200,\n          right: 0,\n          bottom: window.innerHeight - 200,\n          top: 0,\n        },\n      },\n      jsx(\n        \"div\",\n        {\n          css: `\n      display: block;\n      with: 100%;\n      text-align: right;\n      background: linear-gradient(0deg, darkred, red);\n    `,\n        },\n        jsx(\"button\", {\n          css: `\n              background: darkred;\n              margin-top: -4px;\n              margin-right: -4px;\n              color: white;\n              cursor: pointer;\n              font-weight: bold;\n              font-family: Roboto;\n              padding: 8px 16px;\n              outline: none;\n              border: none;\n              border-radius: 0px 8px 0px 0px;\n            `,\n          onClick: () => onShare(),\n        }, \"ðŸŒŽ SHARE\"),\n      ),\n      jsx(\"div\", {\n        css: `\n      min-width: 200px;\n      padding: 30px;\n      max-width: 600px;\n      background: white;\n      max-height: 800px;\n      border-radius: 0px 0px 8px 8px;\n      overflow-y: overlay;\n    `,\n        id: \"zbody\",\n      }),\n    ),\n  );\n};\n","import { getDB } from \"https://unpkg.com/@zedvision/shadb@8.7.2/dist/shaDB.js\";\n\nlet db;\n\nexport const shaDB = {\n  get: async (...args) => {\n    db = db || await getDB();\n    return db.get(...args);\n  },\n  put: async (...args) => {\n    db = db || await getDB();\n    return db.put(...args);\n  },\n};\n","export const sha256 = async (x) =>\n  Array.from(\n    new Uint8Array(\n      await crypto.subtle.digest(\n        \"SHA-256\",\n        typeof x === \"string\" ? new TextEncoder().encode(x) : x,\n      ),\n    ).slice(0, 4),\n  ).map((b) => (\"00\" + b.toString(16)).slice(-2)).join(\"\");\n","import { shaDB } from \"./db.js\";\nimport v4 from \"https://unpkg.com/uuid@8.3.2/dist/esm-browser/v4.js\";\nimport { sha256 } from \"./sha256.js\";\n\nexport async function getZkey(hash) {\n  const uuid = await getUserId();\n  const uKey = await sha256(uuid);\n  const gKey = await sha256(hash + uKey);\n  const vKey = await sha256(hash + uuid);\n  return `${hash}${uKey}${gKey}${vKey}`;\n}\n\nexport async function getUserId() {\n  const uuid = await shaDB.get(\"uuid\");\n  if (!uuid) {\n    const resp = await fetch(\"https://code.zed.vision/register\");\n    const data = await resp.json();\n    await shaDB.put(\"uuid\", data.uuid);\n    return data.uuid;\n  }\n  return uuid;\n}\n\nexport const getProjects = async () => {\n  const uuid = await getUserId();\n  const projects = await shaDB.get(uuid, \"json\");\n\n  if (typeof projects === \"string\" || projects === null || !projects.list) {\n    const projectId = v4();\n\n    await shaDB.put(\n      uuid,\n      JSON.stringify({\n        list: [projectId],\n        [projectId]: {\n          created: Date.now(),\n          lastOpen: Date.now(),\n        },\n      }),\n    );\n\n    return [projectId];\n  }\n\n  // const search = new URLSearchParams(window.location.search);\n\n  // const keyToLoad = search.get(\"h\") || await db.get(projectName);\n  // if(keyToLoad){\n  //   projects.map(p=>shaDB.get())\n  // }\n\n  return projects.list;\n};\n\nexport const saveCode = async (code) => {\n  const hash = await sha256(code);\n\n  const projects = await getProjects();\n  const projectName = projects[0];\n\n  try {\n    const prevHash = await shaDB.get(projectName);\n\n    if (prevHash !== hash) {\n      await shaDB.put(hash, code);\n      await shaDB.put(projectName, hash);\n      // setQueryStringParameter(\"h\", hash);\n      //const response = fetch(request);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n\n  // lets not save now - we will save the diff only\n  // await response;\n};\n","export const starter = `import { useState } from \"react\";\nimport { css, Global } from \"@zedvision/emotion-react\";\n\nconst Slider = () => {\n  const steps = 128;\n  const [sliderValue, setSlider] = useState(steps / 2);\n  return <>\n    <input max={steps}\n      css={\\`\n        appearance: none;\n        width: 100%;\n        height: 40px; \n        background: rgb(\\${255 / steps * sliderValue} \\${255 / steps * (steps - sliderValue)} 0); \n        outline: none; \n    \\`} type=\"range\"\n      aria-label=\"font size changer\"\n      value={sliderValue}\n      step=\"1\"\n      onChangeCapture={(e) => setSlider(Number(e.currentTarget.value))}>\n    </input>\n    <p\n      css={css\\`\n        font-size: \\${72 / steps * sliderValue}px\n        \\`}>\n      Example when the text gets bigger...\n    </p>\n    <p css={css\\`\n        font-size: \\${72 / steps * (steps - sliderValue)}px\n        \\`}>\n      ...or smaller\n    </p>\n  </>\n}\n\nexport default () => <>\n  <Global styles={css\\`\n      body{\n          margin: 0;\n          overflow: overlay;\n        }  \n    \\`} />\n  <Slider />\n</>\n`;\n","import * as Comlink from \"https://unpkg.com/comlink/dist/esm/comlink.mjs\";\nimport { shaDB } from \"./db.js\";\n// import * as Comlink from \"../../../dist/esm/comlink.mjs\";\n\nlet transform;\nexport async function transpileCode(code, hasToReport) {\n  transform = transform || await init();\n\n  return await transform(code, hasToReport);\n}\n\nlet node = null;\n\nexport async function getIpfsiD() {\n  if (node) return node;\n\n  let ipfsId = await shaDB.get(\"ipfs\");\n  if (!ipfsId) {\n    ipfsId = v4();\n\n    await shaDB.put(\"ipfs\", ipfsId);\n  }\n\n  return ipfsId;\n}\n\nlet ipfsNode;\nexport async function ipfsAdd(code, hasToReport) {\n  ipfsNode = ipfsNode || await Ipfs.create({ repo: await getIpfsiD() });\n\n  return await transform(code, hasToReport);\n}\n\nfunction init() {\n  const worker = new Worker(\n    \"./src/transpile.worker.js\",\n  );\n  // WebWorkers use `postMessage` and therefore work with Comlink.\n  transform = Comlink.wrap(worker);\n  return transform;\n}\ninit();\n","import * as Comlink from \"https://unpkg.com/comlink/dist/esm/comlink.mjs\";\n// import * as Comlink from \"../../../dist/esm/comlink.mjs\";\n\nlet ipfsWorker;\n\nexport const ipfsKV = {\n  add: async (data) => (ipfsWorker || await initIpfsKV()).add(data),\n};\n\nfunction initIpfsKV() {\n  const worker = new Worker(\n    \"./src/ipfsKV.worker.js\",\n  );\n\n  ipfsWorker = Comlink.wrap(worker);\n  return ipfsWorker;\n}\ninitIpfsKV();\n","import { importScript } from \"./importScript.js\";\nimport { sha256 } from \"./sha256.js\";\nimport { getZkey } from \"./data.js\";\nimport { ipfsKV } from \"./ipfsKV.js\";\n\nexport const shareItAsHtml = async ({ code, HTML, jsExport }) => {\n  const mod = createJsBlob(code);\n\n  const Element = (await import(mod)).default;\n\n  const css = Array.from(\n    window.document.querySelector(\"head > style[data-emotion=css]\").sheet\n      .cssRules,\n  ).map((x) => x.cssText).filter((cssRule) =>\n    HTML.includes(cssRule.substring(3, 8))\n  ).join(\"\\n  \");\n\n  const { getHtml, getCodeForImport } = await import(\"./templates.js\");\n\n  const linkToCode = await saveToIPFS(code, \"application/html\");\n\n  console.log({\n    HTML,\n    linkToCode,\n    css,\n    code,\n  });\n\n  const link = await saveHtml(\n    getHtml({ HTML, css, js: getCodeForImport(linkToCode) }),\n  );\n\n  return link;\n};\n\nfunction saveHtml(html) {\n  return saveToIPFS(html, \"text/html\");\n}\n\nfunction saveJs(js) {\n  return save(js, \"application/javascript\");\n}\nasync function saveToIPFS(content, type) {\n  const cid = await ipfsKV.add(\n    URL.createObjectURL(new Blob([content], { type })),\n  );\n  return `https://ipfs.io/ipfs/${cid}`;\n}\n\nasync function save(content, type) {\n  const hash = await sha256(content);\n  const request = new Request(\n    \"https://code.zed.vision\",\n    {\n      body: content,\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": type + \";charset=UTF-8\",\n        \"ZKEY\": await getZkey(hash),\n      },\n    },\n  );\n\n  await fetch(request);\n\n  return `https://code.zed.vision/${hash}`;\n}\n\nexport function createJsBlob(code) {\n  const blob = new Blob([code], { type: \"application/javascript\" });\n\n  return URL.createObjectURL(blob);\n}\n","import startMonaco from \"@zedvision/smart-monaco-editor\";\nimport { diff } from \"https://unpkg.com/@zedvision/diff@8.6.10/dist/diff.min.js\";\nimport prettier from \"https://unpkg.com/prettier@2.2.1/esm/standalone.mjs\";\nimport parserBabel from \"https://unpkg.com/prettier@2.2.1/esm/parser-babel.mjs\";\nimport parserHtml from \"https://unpkg.com/prettier@2.2.1/esm/parser-html.mjs\";\n\nimport { DraggableWindow, jsx, ReactDOM } from \"./DraggableWindow.js\";\n\nimport { getProjects, saveCode } from \"./data.js\";\nimport { shaDB } from \"./db.js\";\nimport { starter } from \"./starterNoFramerMotion.js\";\nimport { transpileCode } from \"./transpile.js\";\nimport { createJsBlob, shareItAsHtml } from \"./share.js\";\n\n\nconst session = {\n  hydrated: false,\n  preRendered: false,\n  lastErrors: 0,\n  HTML: \"\",\n  ipfs: 0,\n  transpiled: \"\",\n  code: \"\",\n};\n\nfunction formatter(code) {\n  try {\n    return prettier.format(code, {\n      \"arrowParens\": \"always\",\n      \"bracketSpacing\": true,\n      \"embeddedLanguageFormatting\": \"auto\",\n      \"htmlWhitespaceSensitivity\": \"css\",\n      \"insertPragma\": false,\n      \"jsxBracketSameLine\": true,\n      \"jsxSingleQuote\": false,\n      \"printWidth\": 80,\n      \"proseWrap\": \"preserve\",\n      \"quoteProps\": \"as-needed\",\n      \"requirePragma\": false,\n      \"semi\": true,\n      \"singleQuote\": true,\n      \"tabWidth\": 2,\n      \"trailingComma\": \"all\",\n      \"useTabs\": false,\n      parser: \"babel-ts\",\n      plugins: [parserBabel, parserHtml],\n    });\n  } catch {\n    return code;\n  }\n}\n\nexport async function run(mode = \"window\") {\n  session.code = formatter(await getCodeToLoad());\n  session.transpiled = await transpileCode(session.code);\n\n  if (mode === \"editor\") {\n    const { renderDraggableEditor } = await import(\"./DraggableEditor.js\");\n\n    await renderDraggableEditor();\n  }\n\n  if (mode === \"window\") {\n    const onShare = async () => {\n      const link = await shareItAsHtml(\n        { code: session.transpiled, HTML: session.HTML },\n      );\n      window.open(link);\n    };\n\n    ReactDOM.render(\n      jsx(DraggableWindow, {\n        onShare,\n      }),\n      window.document.getElementById(\"dragabbleWindow\"),\n    );\n  }\n\n  const transpiled = await transpileCode(session.code);\n  restartCode(transpiled);\n\n  const modules = await startMonaco({\n    language: \"typescript\",\n    code: formatter(session.code),\n    onChange: (c) => runner(formatter(c)),\n  });\n\n  async function runner(cd) {\n    try {\n      const transpiled = await transpileCode(cd, session.lastErrors);\n      if (session.transpiled === transpiled) return;\n      let restartError = false;\n      ///yellow\n      if (transpiled.length && session.lastErrors === 0) {\n        restartError = restartCode(transpiled);\n      }\n\n      const err = [\n        ...(restartError\n          ? [\n            { messageText: \"Error while starting the app. Check the console!\" },\n          ]\n          : []),\n        ...(await getErrors(cd)),\n      ];\n      if (session.lastErrors && err.length === 0) restartCode(transpiled);\n      session.lastErrors = err.length;\n      const errorDiv = window.document.getElementById(\"error\");\n      if (err.length === 0 && transpiled.length) {\n        session.code = cd;\n        if (session.transpiled !== transpiled) {\n          session.transpiled = transpiled;\n\n          await saveCode(formatter(cd), session.transpiled);\n        }\n\n        await saveCode(cd);\n      } else {\n        session.error = cd;\n\n        const slices = await diff(session.code, cd);\n\n        if (slices.c.length <= 3) {\n          session.lastErrors = 0;\n\n          return;\n        }\n\n        if (slices.c.length == 4) {\n          session.lastErrors = 0;\n          modules.monaco.editor.setTheme(\"hc-black\");\n\n          return;\n        }\n\n        errorDiv.innerHTML = err[0].messageText.toString();\n\n        errorDiv.style.display = \"block\";\n\n        return;\n      }\n\n      errorDiv.style.display = \"none\";\n\n      modules.monaco.editor.setTheme(\"vs-dark\");\n    } catch (err) {\n      modules.monaco.editor.setTheme(\"vs-light\");\n      setTimeout(() => {\n        modules.monaco.editor.setTheme(\"hc-black\");\n      }, 50);\n      console.error(err);\n    }\n  }\n\n  async function getErrors(code) {\n    if (!modules || !modules.monaco) return;\n    const { monaco } = modules;\n    const { sha256 } = await import(\"./sha256.js\");\n    const shaCode = await sha256(code);\n    const filename = `file:///${shaCode}.tsx`;\n    const uri = monaco.Uri.parse(filename);\n    const model = monaco.editor.getModel(uri) ||\n      await monaco.editor.createModel(code, \"typescript\", uri);\n    const worker = await monaco.languages.typescript.getTypeScriptWorker();\n    const client = await worker(model.uri);\n\n    const diag = client.getSemanticDiagnostics(filename);\n    const comp = client.getCompilerOptionsDiagnostics(filename);\n    const syntax = client.getSyntacticDiagnostics(filename);\n    const fastError = await Promise.race([diag, comp, syntax]);\n\n    model.dispose();\n\n    return [\n      ...fastError,\n    ];\n  }\n\n  async function restartCode(transpiled) {\n    if (typeof transpiled !== \"string\" || transpiled === \"\") {\n      // console.log(transpiled.error);\n      return 1;\n    }\n\n    const codeToHydrate = mode === \"window\"\n      ? transpiled.replace(\"body{\", \"#zbody{\")\n      : transpiled;\n\n    const root = window.document.getElementById(\"zbody\");\n\n    const Element = (await import(createJsBlob(codeToHydrate))).default;\n\n    ReactDOM.render(Element(), root);\n    session.HTML = root.innerHTML;\n\n    return !session.preRendered;\n  }\n\n  async function getCodeToLoad() {\n    const projects = await getProjects();\n    const projectName = projects[0];\n\n    const search = new URLSearchParams(window.location.search);\n    const keyToLoad = search.get(\"h\") || await shaDB.get(projectName);\n\n    if (keyToLoad) {\n      let code;\n      try {\n        code = await shaDB.get(keyToLoad);\n      } catch {\n        console.error(\"error load key: \" + keyToLoad);\n      }\n\n      if (code) return code;\n\n      let text;\n      try {\n        const resp = await fetch(\"https://code.zed.vision/?h=\" + keyToLoad);\n        text = await resp.json();\n      } catch (e) {\n        const { sha256 } = await import(\"./sha256.js\");\n        const shaHash = await sha256(starter);\n\n        shaDB.put(shaHash, starter);\n        await shaDB.put(projectName, shaHash);\n        return starter;\n      }\n\n      return text;\n    }\n\n    return starter;\n  }\n\n  function setQueryStringParameter(name, value) {\n    const params = new URLSearchParams(window.location.search);\n    params.set(name, value);\n    window.history.replaceState(\n      {},\n      \"\",\n      decodeURIComponent(`${window.location.pathname}?${params}`),\n    );\n  }\n}\n"],"names":["importScript","src","res","slice","window","document","head","querySelector","Promise","resolve","reject","s","createElement","type","onload","length","ret","forEach","x","Object","assign","onerror","appendChild","DraggableWindow","onShare","jsx","React","Fragment","motion","div","css","animate","scale","top","left","dragElastic","dragMomentum","initial","transition","duration","drag","dragConstraints","innerWidth","right","bottom","innerHeight","onClick","id","db","shaDB","async","args","getDB","get","put","sha256","Array","from","Uint8Array","crypto","subtle","digest","TextEncoder","encode","map","b","toString","join","getProjects","uuid","resp","fetch","data","json","getUserId","projects","list","projectId","v4","JSON","stringify","[object Object]","created","Date","now","lastOpen","saveCode","hash","code","projectName","e","console","error","starter","transform","ipfsWorker","transpileCode","hasToReport","init","worker","Worker","Comlink","initIpfsKV","saveToIPFS","content","add","ipfsKV","URL","createObjectURL","Blob","createJsBlob","blob","session","hydrated","preRendered","lastErrors","HTML","ipfs","transpiled","formatter","prettier","format","arrowParens","bracketSpacing","embeddedLanguageFormatting","htmlWhitespaceSensitivity","insertPragma","jsxBracketSameLine","jsxSingleQuote","printWidth","proseWrap","quoteProps","requirePragma","semi","singleQuote","tabWidth","trailingComma","useTabs","parser","plugins","parserBabel","parserHtml","run","mode","keyToLoad","URLSearchParams","location","search","text","shaHash","getCodeToLoad","renderDraggableEditor","ReactDOM","render","link","mod","sheet","cssRules","cssText","filter","cssRule","includes","substring","getHtml","getCodeForImport","linkToCode","html","log","js","shareItAsHtml","open","getElementById","restartCode","modules","startMonaco","language","onChange","c","cd","restartError","err","messageText","getErrors","errorDiv","slices","diff","monaco","editor","setTheme","innerHTML","style","display","setTimeout","runner","filename","uri","Uri","parse","model","getModel","createModel","languages","typescript","getTypeScriptWorker","client","diag","getSemanticDiagnostics","comp","getCompilerOptionsDiagnostics","syntax","getSyntacticDiagnostics","fastError","race","dispose","codeToHydrate","replace","root","Element","default"],"mappings":"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"}