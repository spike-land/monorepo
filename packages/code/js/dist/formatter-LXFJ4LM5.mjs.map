{
  "version": 3,
  "sources": ["../workers/getWorker.mjs", "../formatter.mjs"],
  "sourcesContent": ["import { wrap } from \"comlink\";\n\nexport const getWorker = (file) => {\n  let workerSrc;\n  let forceNormalWorker = false;\n  const { pathname } = window.location;\n  if (pathname.indexOf(\"/ipfs/\") !== -1) {\n    const cid = pathname.slice(6, 52);\n    forceNormalWorker = true;\n    workerSrc = `/ipfs/${cid}/js/workers/${file}`;\n  } else if (location.origin !== \"https://code.spike.land\") {\n    forceNormalWorker = true;\n    workerSrc = window.URL.createObjectURL(\n      new Blob([\n        `self.importScripts(\"https://code.spike.land/workers/${file}\");`,\n      ]),\n    );\n  } else {\n    workerSrc = `https://code.spike.land/workers/${file}`;\n  }\n\n  return {\n    workerSrc,\n    forceNormalWorker,\n  };\n};\n\nconst wrapped = {};\nexport const getWrapped = (file) => {\n  if (wrapped[file]) return wrapped[file];\n\n  let workerSrc;\n  let forceNormalWorker = false;\n  const { pathname } = window.location;\n  if (pathname.indexOf(\"/ipfs/\") !== -1) {\n    const cid = pathname.slice(6, 52);\n    forceNormalWorker = true;\n    workerSrc = `/ipfs/${cid}/js/workers/${file}`;\n  } else if (location.origin !== \"https://code.spike.land\") {\n    forceNormalWorker = true;\n    workerSrc = window.URL.createObjectURL(\n      new Blob([\n        `self.importScripts(\"https://code.spike.land/workers/${file}\");`,\n      ]),\n    );\n  } else {\n    workerSrc = `https://code.spike.land/workers/${file}`;\n  }\n\n  wrapped[file] = wrapped[workerSrc] = wrapped[workerSrc] ||\n    init(workerSrc, forceNormalWorker);\n\n  return wrapped[workerSrc];\n};\n\nfunction init(workerSrc, forceNormalWorker) {\n  if (forceNormalWorker || typeof SharedWorker === \"undefined\") {\n    const worker = new Worker(workerSrc);\n    const { port1, port2 } = new MessageChannel();\n    const msg = {\n      comlinkInit: true,\n      port: port1,\n    };\n\n    worker.postMessage(msg, [port1]);\n\n    return wrap(port2);\n  }\n  const worker = new SharedWorker(workerSrc);\n  worker.port.start();\n\n  return wrap(worker.port);\n}\n", "import { getWrapped } from \"./workers/getWorker.mjs\";\n\n/**\n * @param {string} code\n * @returns {Promise<string>}\n */\nexport async function formatter(code) {\n  const format = await getWrapped(\"prettierWorker.js\");\n\n  const formatted = await (format)(\n    code,\n  );\n  return formatted;\n}\n"],
  "mappings": "6BAAA,gFA2BA,GAAM,GAAU,GACH,EAAa,AAAC,GAAS,CAClC,GAAI,EAAQ,GAAO,MAAO,GAAQ,GAElC,GAAI,GACA,EAAoB,GAClB,CAAE,YAAa,OAAO,SAC5B,GAAI,EAAS,QAAQ,YAAc,GAAI,CACrC,GAAM,GAAM,EAAS,MAAM,EAAG,IAC9B,EAAoB,GACpB,EAAY,SAAS,gBAAkB,QAClC,AAAI,UAAS,SAAW,0BAC7B,GAAoB,GACpB,EAAY,OAAO,IAAI,gBACrB,GAAI,MAAK,CACP,uDAAuD,WAI3D,EAAY,mCAAmC,IAGjD,SAAQ,GAAQ,EAAQ,GAAa,EAAQ,IAC3C,EAAK,EAAW,GAEX,EAAQ,IAGjB,WAAc,EAAW,EAAmB,CAC1C,GAAI,GAAqB,MAAO,eAAiB,YAAa,CAC5D,GAAM,GAAS,GAAI,QAAO,GACpB,CAAE,QAAO,SAAU,GAAI,gBACvB,EAAM,CACV,YAAa,GACb,KAAM,GAGR,SAAO,YAAY,EAAK,CAAC,IAElB,EAAK,GAEd,GAAM,GAAS,GAAI,cAAa,GAChC,SAAO,KAAK,QAEL,EAAK,EAAO,MCjErB,iBAAgC,EAAM,CAMpC,MAHkB,MAAO,AAFV,MAAM,GAAW,sBAG9B",
  "names": []
}
