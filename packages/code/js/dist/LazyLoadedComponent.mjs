var L=({name:n,html:i,hash:l,transpiled:o})=>{let[s,p]=React.useState(l);React.useEffect(()=>{let t=setInterval(async()=>{let a=await(await fetch(`https://code.spike.land/api/room/${n}/hashCodeSession`)).text();p(Number(a))},69e3);return()=>{console.log("INTERVAL CLEARED"),clearInterval(t)}},[]),React.useEffect(()=>{(async()=>{let t=await fetch(`https://code.spike.land/api/room/${n}/session`),{html:e,css:a,transpiled:y}=await t.json();m({html:`<div id="root"><style>${a}</style><div id="zbody">${e}</div></div>`,LazyComponent:await r(y)})})()},[s]);let d=()=>o?React.lazy(()=>r(o)):React.createElement("div",null),[c,m]=React.useState({html:i,LazyComponent:d}),{LazyComponent:h}=c;return React.createElement(React.Suspense,{key:s,fallback:React.createElement("div",{dangerouslySetInnerHTML:{__html:c.html}})},React.createElement(h,{key:s}));function u(t){let e=new Blob([t],{type:"application/javascript"});return URL.createObjectURL(e)}async function r(t){let e=u(t),a=(await import(e)).default;return URL.revokeObjectURL(e),a}},f=n=>React.createElement(L,{...n});export{L as LazySpikeLandComponent,f as default};
//# sourceMappingURL=LazyLoadedComponent.mjs.map
