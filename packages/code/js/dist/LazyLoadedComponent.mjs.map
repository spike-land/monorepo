{
  "version": 3,
  "sources": ["../LazyLoadedComponent.tsx"],
  "sourcesContent": ["const { React } = window;\nconst { Suspense } = React;\ninterface ILaztCom {\n  name: string;\n  html: string;\n  transpiled: string;\n  hash: number;\n}\n\nconst LazySpikeLandComponent = (\n  { name, html, hash, transpiled }: ILaztCom,\n) => {\n  const [hashCode, setHash] = React.useState(hash);\n\n  React.useEffect(() => {\n    const intervalHandler = setInterval(async () => {\n      const resp = await fetch(\n        `https://code.spike.land/api/room/${name}/hashCodeSession`,\n      );\n      const text = await resp.text();\n      setHash(Number(text));\n    }, 69_000);\n    return () => {\n      console.log(\"INTERVAL CLEARED\");\n      clearInterval(intervalHandler);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      const resp = await fetch(\n        `https://code.spike.land/api/room/${name}/session`,\n      );\n      const { html, css, transpiled } = await resp.json();\n      setHtmlCss({\n        htmlContent:\n          `<div id=\"root\"><style>${css}</style><div id=\"zbody\">${html}</div></div>`,\n        LazyComponent: await getApp(transpiled),\n      });\n    })();\n  }, [hashCode]);\n\n  // const LazyStarter = () => React.lazy(() => getApp(transpiled)) : <div></div>;\n\n  const LazyComponentInit = React.lazy(() => import(createJsBlob(transpiled)));\n\n  const [{ htmlContent, LazyComponent }, setHtmlCss] = React.useState({\n    htmlContent: html,\n    LazyComponent: LazyComponentInit, // transpiled?  ,\n  });\n\n  // const { LazyComponent } = fallCont;\n\n  // const LazyComponentInit = React.lazy(()=>import(createJsBlob(transpiled)))\n\n  return (\n    <Suspense\n      key={hashCode}\n      fallback={<div dangerouslySetInnerHTML={{ __html: htmlContent }}></div>}\n    >\n      <LazyComponent key={hash} />\n    </Suspense>\n  );\n\n  function createJsBlob(code: string) {\n    const blob = new Blob([code], { type: \"application/javascript\" });\n\n    return URL.createObjectURL(blob);\n  }\n\n  async function getApp(transpiled: string) {\n    const objUrl = createJsBlob(transpiled);\n\n    const App = (await import(objUrl)).default;\n\n    URL.revokeObjectURL(objUrl);\n\n    return App;\n  }\n};\n\nexport default (\n  props: { transpiled: string; hash: number; html: string; name: string },\n) => <LazySpikeLandComponent {...props}></LazySpikeLandComponent>;\n"],
  "mappings": "AAAA,GAAM,CAAE,SAAU,OACZ,CAAE,YAAa,EAQf,EAAyB,CAC7B,CAAE,OAAM,OAAM,OAAM,gBACjB,CACH,GAAM,CAAC,EAAU,GAAW,EAAM,SAAS,GAE3C,EAAM,UAAU,IAAM,CACpB,GAAM,GAAkB,YAAY,SAAY,CAI9C,GAAM,GAAO,KAAM,AAHN,MAAM,OACjB,oCAAoC,sBAEd,OACxB,EAAQ,OAAO,KACd,MACH,MAAO,IAAM,CACX,QAAQ,IAAI,oBACZ,cAAc,KAEf,IAEH,EAAM,UAAU,IAAM,CACpB,AAAC,UAAY,CACX,GAAM,GAAO,KAAM,OACjB,oCAAoC,aAEhC,CAAE,OAAM,MAAK,cAAe,KAAM,GAAK,OAC7C,EAAW,CACT,YACE,yBAAyB,4BAA8B,gBACzD,cAAe,KAAM,GAAO,UAG/B,CAAC,IAIJ,GAAM,GAAoB,EAAM,KAAK,IAAM,OAAO,EAAa,KAEzD,CAAC,CAAE,cAAa,iBAAiB,GAAc,EAAM,SAAS,CAClE,YAAa,EACb,cAAe,IAOjB,MACE,iBAAC,EAAD,CACE,IAAK,EACL,SAAU,gBAAC,MAAD,CAAK,wBAAyB,CAAE,OAAQ,MAElD,gBAAC,EAAD,CAAe,IAAK,KAIxB,WAAsB,EAAc,CAClC,GAAM,GAAO,GAAI,MAAK,CAAC,GAAO,CAAE,KAAM,2BAEtC,MAAO,KAAI,gBAAgB,GAG7B,iBAAsB,EAAoB,CACxC,GAAM,GAAS,EAAa,GAEtB,EAAO,MAAM,QAAO,IAAS,QAEnC,WAAI,gBAAgB,GAEb,IAIJ,EAAQ,AACb,GACG,gBAAC,EAAD,IAA4B",
  "names": []
}
