{
  "version": 3,
  "sources": ["../LazyLoadedComponent.tsx"],
  "sourcesContent": ["const { React } = window;\nconst { Suspense } = React;\ninterface ILaztCom {\n  name: string;\n  html: string;\n  transpiled: string;\n  hash: number;\n}\n\nconst LazySpikeLandComponent = (\n  { name, html, hash, transpiled }: ILaztCom,\n) => {\n  const [hashCode, setHash] = React.useState(hash);\n\n  React.useEffect(() => {\n    const intervalHandler = setInterval(async () => {\n      const resp = await fetch(\n        `https://code.spike.land/api/room/${name}/hashCodeSession`,\n      );\n      const text = await resp.text();\n      setHash(Number(text));\n    }, 69_000);\n    return () => {\n      console.log(\"INTERVAL CLEARED\");\n      clearInterval(intervalHandler);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      const resp = await fetch(\n        `https://code.spike.land/api/room/${name}/session`,\n      );\n      const { html, css, transpiled } = await resp.json();\n      setHtmlCss({\n        htmlContent:\n          `<div id=\"root\"><style>${css}</style><div id=\"zbody\">${html}</div></div>`,\n        LazyComponent: await getApp(transpiled),\n      });\n    })();\n  }, [hashCode]);\n\n  // const LazyStarter = () => React.lazy(() => getApp(transpiled)) : <div></div>;\n\n  const LazyComponentInit = React.lazy(() => import(createJsBlob(transpiled)));\n\n  const [{ htmlContent, LazyComponent }, setHtmlCss] = React.useState({\n    htmlContent: html,\n    LazyComponent: LazyComponentInit, // transpiled?  ,\n  });\n\n  // const { LazyComponent } = fallCont;\n\n  // const LazyComponentInit = React.lazy(()=>import(createJsBlob(transpiled)))\n\n  return (\n    <Suspense\n      key={hashCode}\n      fallback={<div dangerouslySetInnerHTML={{ __html: htmlContent }}></div>}\n    >\n      <LazyComponent key={hash} />\n    </Suspense>\n  );\n\n  function createJsBlob(code: string) {\n    const blob = new Blob([code], { type: \"application/javascript\" });\n\n    return URL.createObjectURL(blob);\n  }\n\n  async function getApp(transpiled: string) {\n    const objUrl = createJsBlob(transpiled);\n\n    const App = (await import(objUrl)).default;\n\n    URL.revokeObjectURL(objUrl);\n\n    return App;\n  }\n};\n\nexport default (\n  props: { transpiled: string; hash: number; html: string; name: string },\n) => <LazySpikeLandComponent {...props}></LazySpikeLandComponent>;\n"],
  "mappings": ";AAAA,IAAM,EAAE,UAAU;AAClB,IAAM,EAAE,aAAa;AAQrB,IAAM,yBAAyB,CAC7B,EAAE,MAAM,MAAM,MAAM,iBACjB;AACH,QAAM,CAAC,UAAU,WAAW,MAAM,SAAS;AAE3C,QAAM,UAAU,MAAM;AACpB,UAAM,kBAAkB,YAAY,YAAY;AAC9C,YAAM,OAAO,MAAM,MACjB,oCAAoC;AAEtC,YAAM,OAAO,MAAM,KAAK;AACxB,cAAQ,OAAO;AAAA,OACd;AACH,WAAO,MAAM;AACX,cAAQ,IAAI;AACZ,oBAAc;AAAA;AAAA,KAEf;AAEH,QAAM,UAAU,MAAM;AACpB,IAAC,aAAY;AACX,YAAM,OAAO,MAAM,MACjB,oCAAoC;AAEtC,YAAM,EAAE,aAAM,KAAK,4BAAe,MAAM,KAAK;AAC7C,iBAAW;AAAA,QACT,aACE,yBAAyB,8BAA8B;AAAA,QACzD,eAAe,MAAM,OAAO;AAAA;AAAA;AAAA,KAG/B,CAAC;AAIJ,QAAM,oBAAoB,MAAM,KAAK,MAAM,OAAO,aAAa;AAE/D,QAAM,CAAC,EAAE,aAAa,iBAAiB,cAAc,MAAM,SAAS;AAAA,IAClE,aAAa;AAAA,IACb,eAAe;AAAA;AAOjB,SACE,oCAAC,UAAD;AAAA,IACE,KAAK;AAAA,IACL,UAAU,oCAAC,OAAD;AAAA,MAAK,yBAAyB,EAAE,QAAQ;AAAA;AAAA,KAElD,oCAAC,eAAD;AAAA,IAAe,KAAK;AAAA;AAIxB,wBAAsB,MAAc;AAClC,UAAM,OAAO,IAAI,KAAK,CAAC,OAAO,EAAE,MAAM;AAEtC,WAAO,IAAI,gBAAgB;AAAA;AAG7B,wBAAsB,aAAoB;AACxC,UAAM,SAAS,aAAa;AAE5B,UAAM,MAAO,OAAM,OAAO,SAAS;AAEnC,QAAI,gBAAgB;AAEpB,WAAO;AAAA;AAAA;AAIX,IAAO,8BAAQ,CACb,UACG,oCAAC,wBAAD;AAAA,KAA4B;AAAA;",
  "names": []
}
