{
  "version": 3,
  "sources": ["../uidV4.mjs"],
  "sourcesContent": ["var getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  if (!getRandomValues) {\n    getRandomValues = typeof crypto !== \"undefined\" && crypto.getRandomValues &&\n        crypto.getRandomValues.bind(crypto) ||\n      typeof msCrypto !== \"undefined\" &&\n        typeof msCrypto.getRandomValues === \"function\" &&\n        msCrypto.getRandomValues.bind(msCrypto);\n    if (!getRandomValues) {\n      throw new Error(\n        \"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\",\n      );\n    }\n  }\n  return getRandomValues(rnds8);\n}\nconst __default =\n  /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nfunction validate(uuid) {\n  return typeof uuid === \"string\" && __default.test(uuid);\n}\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 256).toString(16).substr(1));\n}\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined\n    ? arguments[1]\n    : 0;\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] +\n    byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + \"-\" +\n    byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + \"-\" +\n    byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + \"-\" +\n    byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + \"-\" +\n    byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] +\n    byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] +\n    byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n  if (!validate(uuid)) {\n    throw TypeError(\"Stringified UUID is invalid\");\n  }\n  return uuid;\n}\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)();\n  rnds[6] = rnds[6] & 15 | 64;\n  rnds[8] = rnds[8] & 63 | 128;\n  if (buf) {\n    offset = offset || 0;\n    for (var i1 = 0; i1 < 16; ++i1) {\n      buf[offset + i1] = rnds[i1];\n    }\n    return buf;\n  }\n  return stringify(rnds);\n}\nexport { v4 as default };\n"],
  "mappings": "AAAA,GAAI,GACA,EAAQ,GAAI,YAAW,IAC3B,YAAe,CACb,GAAI,CAAC,GACH,GAAkB,MAAO,SAAW,aAAe,OAAO,iBACtD,OAAO,gBAAgB,KAAK,SAC9B,MAAO,WAAa,aAClB,MAAO,UAAS,iBAAoB,YACpC,SAAS,gBAAgB,KAAK,UAC9B,CAAC,GACH,KAAM,IAAI,OACR,4GAIN,MAAO,GAAgB,GAEzB,GAAM,GACJ,sHACF,WAAkB,EAAM,CACtB,MAAO,OAAO,IAAS,UAAY,EAAU,KAAK,GAEpD,GAAI,GAAY,GAChB,IAAS,EAAI,EAAG,EAAI,IAAK,EAAE,EACzB,EAAU,KAAM,GAAI,KAAK,SAAS,IAAI,OAAO,IADtC,MAGT,WAAmB,EAAK,CACtB,GAAI,GAAS,UAAU,OAAS,GAAK,UAAU,KAAO,OAClD,UAAU,GACV,EACA,EAAQ,GAAU,EAAI,EAAS,IAAM,EAAU,EAAI,EAAS,IAC9D,EAAU,EAAI,EAAS,IAAM,EAAU,EAAI,EAAS,IAAM,IAC1D,EAAU,EAAI,EAAS,IAAM,EAAU,EAAI,EAAS,IAAM,IAC1D,EAAU,EAAI,EAAS,IAAM,EAAU,EAAI,EAAS,IAAM,IAC1D,EAAU,EAAI,EAAS,IAAM,EAAU,EAAI,EAAS,IAAM,IAC1D,EAAU,EAAI,EAAS,KAAO,EAAU,EAAI,EAAS,KACrD,EAAU,EAAI,EAAS,KAAO,EAAU,EAAI,EAAS,KACrD,EAAU,EAAI,EAAS,KAAO,EAAU,EAAI,EAAS,MAAM,cAC7D,GAAI,CAAC,EAAS,GACZ,KAAM,WAAU,+BAElB,MAAO,GAET,WAAY,EAAS,EAAK,EAAQ,CAChC,EAAU,GAAW,GACrB,GAAI,GAAO,EAAQ,QAAW,GAAQ,KAAO,KAG7C,GAFA,EAAK,GAAK,EAAK,GAAK,GAAK,GACzB,EAAK,GAAK,EAAK,GAAK,GAAK,IACrB,EAAK,CACP,EAAS,GAAU,EACnB,OAAS,GAAK,EAAG,EAAK,GAAI,EAAE,EAC1B,EAAI,EAAS,GAAM,EAAK,GAE1B,MAAO,GAET,MAAO,GAAU",
  "names": []
}
