{"version":3,"file":"components.js","sourceRoot":"","sources":["components.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Fragment,\n  h,\n  Host,\n  qComponent,\n  qHook,\n  useHostElement,\n  useEvent,\n  notifyRender,\n} from '@builder.io/qwik';\nimport {\n  addItem,\n  clearCompleted,\n  FilterStates,\n  getFilteredCount,\n  getFilteredItems,\n  removeItem,\n  TodoItem,\n  Todos,\n  toggleItem,\n  updateFilter,\n} from './state';\n/* eslint no-console: [\"off\"] */\n\n// TODO(misko): APIs for better debugger experience: qProps\n// TODO(misko): APIs for better debugger experience: dehydrate\n// TODO(misko): APIs to have a global way of notifying which events are being fired, so we can console out render events in the demo applications\n// TODO(misko): Place breakpoint in DOM modification and notice that too many writes are happening.\n// TODO(misko): <item> renders twice on toggle. 1) Due to state change, 2) due to <main> somehow triggering render.\n\n////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Overall application component.\n *\n * This component is static (meaning it will never change). Because of this\n * Qwik knows that it should never need to be rerendered, and its code will never\n * download to the client.\n */\nexport const ToDoApp = qComponent<{ todos: Todos }>({\n  tagName: 'todo', // optional\n  onRender: qHook(({ todos }) => {\n    console.log('on:qRender => <ToDoApp/>');\n    return (\n      <section class=\"todoapp\">\n        <Header todos={todos} />\n        <Main todos={todos} />\n        <Footer todos={todos} />\n      </section>\n    );\n  }),\n});\n\n/**\n * Header component which is responsible for providing UI to ender new todo item.\n *\n * This component only rerenders if the user interacts with it through the input.\n */\nexport const Header = qComponent<{ todos: Todos }, { text: string }>({\n  tagName: 'header', // optional\n  onMount: qHook(() => ({ text: '' })),\n  onRender: qHook((_, { text }) => {\n    console.log('on:qRender => <Header/>');\n    return (\n      <>\n        <h1>todos</h1>\n        <input\n          class=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          autoFocus\n          value={text}\n          on:keyup={qHook<typeof Header>(({ todos }, state) => {\n            const event = useEvent<KeyboardEvent>();\n            const inputValue = (event.target as HTMLInputElement).value;\n            state.text = inputValue;\n            if (event.key === 'Enter' && inputValue) {\n              addItem(todos, state.text);\n              state.text = '';\n            }\n          })}\n        />\n      </>\n    );\n  }),\n});\n\n/**\n * Main body of the application which contains the list of todo items.\n *\n * This component only rerenders/hydrates/downloads if the list of todos changes.\n */\nexport const Main = qComponent<{ todos: Todos }>({\n  tagName: 'main', // optional\n  onRender: qHook(({ todos }) => {\n    console.log('on:qRender => <Main/>');\n    return (\n      <Host class=\"main\">\n        <ul class=\"todo-list\">\n          {getFilteredItems(todos).map((key) => (\n            <Item item={key} todos={todos} />\n          ))}\n        </ul>\n      </Host>\n    );\n  }),\n});\n\n/**\n * Individual items of the component.\n *\n * It only rerenders if the user infarcts with it or if the item itself changes.\n */\nexport const Item = qComponent<{ item: TodoItem; todos: Todos }, { editing: boolean }>({\n  tagName: 'li', // optional\n  onMount: qHook(() => ({ editing: false })),\n  onRender: qHook(({ item }, { editing }) => {\n    console.log(\n      'on:qRender => <Item item=\"' +\n        JSON.stringify(item, (key, value) => (key.startsWith('__') ? undefined : value)) +\n        '\"/>'\n    );\n    return (\n      <Host class={{ completed: item.completed, editing: editing }}>\n        <div class=\"view\">\n          <input\n            class=\"toggle\"\n            type=\"checkbox\"\n            checked={item.completed}\n            on:click={qHook<typeof Item>(({ item, todos }) => toggleItem(todos, item))}\n          />\n          <label\n            on:dblclick={qHook<typeof Item>(async (props, state) => {\n              state.editing = true;\n              const hostElement = useHostElement()!;\n              await notifyRender(hostElement);\n              const inputEl = hostElement.querySelector('input.edit') as HTMLInputElement;\n              inputEl.focus();\n              inputEl.selectionStart = inputEl.selectionEnd = inputEl.value.length;\n            })}\n          >\n            {item.title}\n          </label>\n          <button\n            class=\"destroy\"\n            on:click={qHook<typeof Item>(({ item, todos }) => removeItem(todos, item))}\n          ></button>\n        </div>\n        {editing ? (\n          <input\n            class=\"edit\"\n            value={item.title}\n            on:blur={qHook<typeof Item>((_, state) => (state.editing = false))}\n            on:keyup={qHook<typeof Item>(({ item }, state) => {\n              const event = useEvent<KeyboardEvent>();\n              const inputValue = (event.target as HTMLInputElement).value;\n              item.title = inputValue;\n              if (event.key === 'Enter') {\n                state.editing = false;\n              }\n            })}\n          />\n        ) : null}\n      </Host>\n    );\n  }),\n});\n\n/**\n * Footer showing items remaining and filtering options\n *\n * It only rerenders if the todos count changes or filters are reset.\n */\nexport const Footer = qComponent<{ todos: Todos }>({\n  tagName: 'footer', // optional\n  onRender: qHook(({ todos }) => {\n    console.log('on:qRender => <Footer/>');\n    /**\n     * Example of lite-component (it will always be included with the parent component)\n     */\n    function Filter({ filter }: { filter: FilterStates }) {\n      const lMode = filter.toLowerCase();\n      return (\n        <li>\n          <a\n            class={{ selected: todos.filter == lMode }}\n            on:click={qHook<typeof Footer, { filter: FilterStates }>((props, _, { filter }) =>\n              updateFilter(props.todos, filter)\n            ).with({ filter })}\n          >\n            {filter[0].toUpperCase() + filter.substr(1)}\n          </a>\n        </li>\n      );\n    }\n    const remaining = getFilteredCount(todos);\n    return (\n      <Host class=\"footer\">\n        {todos.items.length > 0 ? (\n          <>\n            <span class=\"todo-count\">\n              <strong>{remaining}</strong>\n              {remaining == 1 ? ' item' : ' items'} left\n            </span>\n            <ul class=\"filters\">\n              {FilterStates.map((f) => (\n                <Filter filter={f} />\n              ))}\n            </ul>\n            {remaining > 0 ? (\n              <button\n                class=\"clear-completed\"\n                on:click={qHook<typeof Footer>(({ todos }) => clearCompleted(todos))}\n              >\n                Clear completed\n              </button>\n            ) : null}\n          </>\n        ) : null}\n      </Host>\n    );\n  }),\n});\n"]}