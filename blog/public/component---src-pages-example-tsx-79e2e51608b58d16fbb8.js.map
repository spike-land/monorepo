{"version":3,"file":"component---src-pages-example-tsx-79e2e51608b58d16fbb8.js","mappings":";;;;;;;;;;uEAAA,eAKA,GAAMK,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,GAAMC,CAAAA,KAAK,CAAG,GAAd,CACA,cAAiCL,+CAAQ,CAACK,KAAK,CAAG,CAAT,CAAzC,CAAOC,WAAP,cAAoBC,SAApB,cACA,MAAO,gHACL,uEACE,GAAG,CAAEF,KADP,CAEE,GAAG,CAAEJ,6DAAF,gSAIiB,IAAMI,KAAN,CAAcC,WAJ/B,CAI8C,IAAMD,KAAN,EAC9CA,KAAK,CAAGC,WADsC,CAJ9C,CAFL,CAUE,IAAI,CAAC,OAVP,CAWE,aAAW,mBAXb,CAYE,KAAK,CAAEA,WAZT,CAaE,IAAI,CAAC,GAbP,CAcE,eAAe,CAAE,yBAACE,CAAD,QAAOD,CAAAA,SAAS,CAACE,MAAM,CAACD,CAAC,CAACE,aAAF,CAAgBC,KAAjB,CAAP,CAAhB,EAdnB,EADK,CAkBL,mEACE,GAAG,CAAEV,6DAAF,wLACY,GAAKI,KAAL,CAAaC,WADzB,CADL,yCAlBK,CAyBL,mEACE,GAAG,CAAEL,6DAAF,wLACY,GAAKI,KAAL,EAAcA,KAAK,CAAGC,WAAtB,CADZ,CADL,kBAzBK,CAAP,CAiCD,CApCD,CAsCA,+DAAe,iBACb,gHACE,8DAAC,4DAAD,EACE,MAAM,CAAEL,6DAAF,wOADR,EADF,CASE,8DAAC,MAAD,MATF,CADa,EAAf","sources":["webpack://@zedvision/blog/./src/pages/example.tsx"],"sourcesContent":["/** @jsx jsx */\n\nimport React, { useState } from \"react\";\nimport { css, Global, jsx } from \"@emotion/react\";\n\nconst Slider = () => {\n  const steps = 128;\n  const [sliderValue, setSlider] = useState(steps / 2);\n  return <>\n    <input\n      max={steps}\n      css={css`\n        appearance: none;\n        width: 100%;\n        height: 40px; \n        background: rgb(${255 / steps * sliderValue} ${255 / steps *\n        (steps - sliderValue)} 0); \n        outline: none; \n    `}\n      type=\"range\"\n      aria-label=\"font size changer\"\n      value={sliderValue}\n      step=\"1\"\n      onChangeCapture={(e) => setSlider(Number(e.currentTarget.value))}\n    >\n    </input>\n    <p\n      css={css`\n        font-size: ${72 / steps * sliderValue}px\n        `}\n    >\n      Example when the text gets bigger...\n    </p>\n    <p\n      css={css`\n        font-size: ${72 / steps * (steps - sliderValue)}px\n        `}\n    >\n      ...or smaller\n    </p>\n  </>;\n};\n\nexport default () =>\n  <>\n    <Global\n      styles={css`\n      body{\n          margin: 0;\n          overflow: overlay;\n        }  \n    `}\n    />\n    <Slider />\n  </>;\n"],"names":["React","useState","css","Global","jsx","Slider","steps","sliderValue","setSlider","e","Number","currentTarget","value"],"sourceRoot":""}