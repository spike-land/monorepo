{
  "version": 3,
  "sources": ["../starter.mjs"],
  "sourcesContent": ["export default function (injectedRoom = \"\") {\n  run(injectedRoom);\n}\n\nexport const run = async (injectedRoom) => {\n  const path = location.pathname.split(\"/\");\n  window.aniStart = Date.now();\n\n  const room = injectedRoom ||\n    ((path[1] === \"api\" && path[2] === \"room\")\n      ? path[3]\n      : (path.pop() || path.pop()).slice(-12)) ||\n    \"code-main\";\n  const user = ((self && self.crypto && self.crypto.randomUUID &&\n    self.crypto.randomUUID()) || (await import(\"./uidV4.mjs\")).default()).slice(\n      0,\n      8,\n    );\n\n  if (location.pathname.includes(\"hydrate\")) {\n    const App = (await import(\n      `https://spike.land/api/room/${room}/js`\n    )).default;\n\n    const createDelta = (await import(\"textdiff-create\")).default;\n    // const applyDelta = (await import(\"textdiff-patch\")).default;\n\n    const { jsx } = await import(\"@emotion/react\");\n    const { ReactDOM } = window;\n\n    const container = document.querySelector(\"#zbody\");\n\n    window.aniStart = Date.now();\n    const root = ReactDOM.hydrateRoot(container, jsx(App));\n\n    // const outers = [];\n    const deltas = [];\n\n    let first = document.getElementById(\"zbody\").innerHTML;\n    const html = first;\n\n    const interV = setInterval(() => {\n      const el = container.innerHTML;\n      deltas.push(createDelta(first, el));\n\n      first = el;\n      //      deltas.push()\n      // outers.push(el);\n    }, 1000 / 60);\n\n    window.deltas = deltas;\n\n    // const compressed = compress(JSON.stringify(deltas));\n\n    // setTimeout(async () => {\n    //   clearInterval(interV);\n\n    //   // const deltaStr = JSON.stringify(deltas);\n    //   const user = ((self && self.crypto && self.crypto.randomUUID &&\n    //     self.crypto.randomUUID()) || (await import(\"./uidV4.mjs\")).default())\n    //     .slice(\n    //       0,\n    //       8,\n    //     );\n\n    const { join } = await import(\"./ws.mjs\");\n    join(room, user, deltas);\n    return;\n    //   //s\n\n    //   // console.log(deltaStr);\n    //   // root.unmount();\n    //   // // const compressed = compress(JSON.stringify(deltas));\n    //   // console.log(\n    //   //   JSON.stringify(deltas).length,\n    //   //   // JSON.stringify(compressed).length,\n    //   // );\n\n    //   // let i = 0;\n    //   // const deltasLength = deltas.length;\n    //   // let last = html;\n\n    //   // setInterval(() => {\n    //   //   const index = i % deltasLength;\n    //   //   if (index === 0) last = html;\n\n    //   //   i++;\n    //   //   const delta = deltas[index];\n    //   //   if (!delta) return;\n    //   //   const next = applyDelta(last, delta);\n    //   //   last = next;\n    //   //   container.innerHTML = next;\n    //   // }, 1000 / 60);\n    // }, 2000);\n\n    return;\n  } else {\n    (async () => {\n      // const App = (await import(\n      //   `https://spike.land/api/room/zoli/js`,\n      // )).default;\n\n      const applyDelta = (await import(\n        \"https://unpkg.com/@spike.land/esm@0.4.33/dist/textdiff-patch.mjs\"\n      )).default;\n\n      const resp = await fetch(\n        `https://spike.land/api/room/${room}/delta`,\n      );\n      const deltas = await resp.json();\n\n      //   const { jsx } = emotionReact;\n\n      //   const { ReactDOM } = window;\n\n      //  const container = document.createElement(\"div\");\n      //  container.id = \"upgrade-me\";\n      // document.body.appendChild(container);\n\n      let container = document.getElementById(\"zbody\");\n\n      if (!container) {\n        const respS = await fetch(\n          `https://spike.land/api/room/${room}/session`,\n        );\n        const session = await respS.json();\n        container = document.getElementById(\"root\");\n        container.innerHTML =\n          `<style>${session.css}</style><div id=\"zbody\">${session.html}</div>`;\n        container = document.getElementById(\"zbody\");\n      }\n\n      if (deltas && deltas.length) {\n        //   const st = document.createElement(\"style\");\n        //   st.innerHTML = session.css;\n\n        const html = container.innerHTML;\n\n        //   const applied = applyDelta(html, deltas[0]);\n        //   container.innerHTML = session.html;\n        // `<style>${session.css}</style><div>${session.html}</div>`;\n\n        //  const root = ReactDOM.createRoot(target);\n\n        //   root.render(jsx(App));\n\n        //   document.body.appendChild(st);\n\n        //  document.body.appendChild(container);\n\n        //   const zBody = container;\n\n        let i = 0;\n        let last = html;\n        const deltasLength = deltas.length;\n        const animationLength = (2000 - (Date.now() - window.aniStart)) /\n          deltas.length;\n        console.log({ animationLength });\n        const clInt = setInterval(() => {\n          if (i >= deltas.length) {\n            clearInterval(clInt);\n            return;\n          }\n          const index = i % deltasLength;\n          if (index === 0) last = html;\n          //\n          i++;\n          const delta = deltas[index];\n          if (!delta) return;\n          const next = applyDelta(last, delta);\n          last = next;\n\n          // const newDiv = document.createElement(\"div\");\n          // newDiv.id = \"zbodyw\";\n          // newDiv.setAttribute(\"id\", \"zbodyw\");\n\n          // newDiv.innerHTML = `<div>${next}</div>`;\n\n          container.innerHTML = next;\n\n          // console.log(next);\n          //    document.removeChild(container);\n          // console.log(next);\n          // zbod\n        }, animationLength);\n        //  document.appendChild(container);\n      } else {\n        const App = (await import(\n          `https://spike.land/api/room/${room}/js`\n        )).default;\n\n        const { jsx } = await import(\"@emotion/react\");\n\n        let container = document.querySelector(\"#zbody\");\n\n        if (!container) {\n          container = document.getElementById(\"root\");\n          container.innerHTML =\n            `<style>${session.css}</style><div id=\"zbody\">${session.html}</div>`;\n          let container = document.querySelector(\"#zbody\");\n        }\n\n        ReactDOM.hydrateRoot(container, jsx(App));\n      }\n    })();\n  }\n\n  /// For local dev\n  // if (document.getElementById(\"root\").innerHTML.length === 0) {\n  //   const cacheKey = `state-${room}`;\n  //   const savedStateStr = localStorage.getItem(cacheKey);\n  //   if (!savedStateStr) {\n  //     const savedState = JSON.parse(savedStateStr);\n  //     const preRenderContainer = document.getElementById(\"root\");\n  //     if (\n  //       preRenderContainer && savedState &&\n  //       preRenderContainer.innerHTML.length === 0\n  //     ) {\n  //       preRenderContainer.innerHTML = `<style>${savedState.css}</style>\n  //         <div id=\"zbody\">${savedState.html}</div>`;\n  //       console.log(`<style>${savedState.css}</style>\n  //       ${savedState.html}\n  //       `);\n  //     }\n  //   }\n  // }\n\n  const { join } = await import(\"./ws.mjs\");\n  join(room, user);\n  // Console.log({ r\n};\n"],
  "mappings": ";;;AAAe,yBAAU,eAAe,IAAI;AAC1C,MAAI;AAAA;AAGC,IAAM,MAAM,OAAO,iBAAiB;AACzC,QAAM,OAAO,SAAS,SAAS,MAAM;AACrC,SAAO,WAAW,KAAK;AAEvB,QAAM,OAAO,gBACT,MAAK,OAAO,SAAS,KAAK,OAAO,SAC/B,KAAK,KACJ,MAAK,SAAS,KAAK,OAAO,MAAM,SACrC;AACF,QAAM,OAAS,SAAQ,KAAK,UAAU,KAAK,OAAO,cAChD,KAAK,OAAO,gBAAkB,OAAM,OAAO,gCAAgB,WAAW,MACpE,GACA;AAGJ,MAAI,SAAS,SAAS,SAAS,YAAY;AACzC,UAAM,MAAO,OAAM,OACjB,+BAA+B,YAC9B;AAEH,UAAM,cAAe,OAAM,OAAO,sEAAoB;AAGtD,UAAM,EAAE,QAAQ,MAAM,OAAO;AAC7B,UAAM,EAAE,wBAAa;AAErB,UAAM,YAAY,SAAS,cAAc;AAEzC,WAAO,WAAW,KAAK;AACvB,UAAM,OAAO,UAAS,YAAY,WAAW,IAAI;AAGjD,UAAM,SAAS;AAEf,QAAI,QAAQ,SAAS,eAAe,SAAS;AAC7C,UAAM,OAAO;AAEb,UAAM,SAAS,YAAY,MAAM;AAC/B,YAAM,KAAK,UAAU;AACrB,aAAO,KAAK,YAAY,OAAO;AAE/B,cAAQ;AAAA,OAGP,MAAO;AAEV,WAAO,SAAS;AAehB,UAAM,EAAE,gBAAS,MAAM,OAAO;AAC9B,UAAK,MAAM,MAAM;AACjB;AA4BA;AAAA,SACK;AACL,IAAC,aAAY;AAKX,YAAM,aAAc,OAAM,OACxB,qEACC;AAEH,YAAM,OAAO,MAAM,MACjB,+BAA+B;AAEjC,YAAM,SAAS,MAAM,KAAK;AAU1B,UAAI,YAAY,SAAS,eAAe;AAExC,UAAI,CAAC,WAAW;AACd,cAAM,QAAQ,MAAM,MAClB,+BAA+B;AAEjC,cAAM,WAAU,MAAM,MAAM;AAC5B,oBAAY,SAAS,eAAe;AACpC,kBAAU,YACR,UAAU,SAAQ,8BAA8B,SAAQ;AAC1D,oBAAY,SAAS,eAAe;AAAA;AAGtC,UAAI,UAAU,OAAO,QAAQ;AAI3B,cAAM,OAAO,UAAU;AAgBvB,YAAI,IAAI;AACR,YAAI,OAAO;AACX,cAAM,eAAe,OAAO;AAC5B,cAAM,kBAAmB,OAAQ,MAAK,QAAQ,OAAO,aACnD,OAAO;AACT,gBAAQ,IAAI,EAAE;AACd,cAAM,QAAQ,YAAY,MAAM;AAC9B,cAAI,KAAK,OAAO,QAAQ;AACtB,0BAAc;AACd;AAAA;AAEF,gBAAM,QAAQ,IAAI;AAClB,cAAI,UAAU;AAAG,mBAAO;AAExB;AACA,gBAAM,QAAQ,OAAO;AACrB,cAAI,CAAC;AAAO;AACZ,gBAAM,OAAO,WAAW,MAAM;AAC9B,iBAAO;AAQP,oBAAU,YAAY;AAAA,WAMrB;AAAA,aAEE;AACL,cAAM,MAAO,OAAM,OACjB,+BAA+B,YAC9B;AAEH,cAAM,EAAE,QAAQ,MAAM,OAAO;AAE7B,YAAI,aAAY,SAAS,cAAc;AAEvC,YAAI,CAAC,YAAW;AACd,uBAAY,SAAS,eAAe;AACpC,qBAAU,YACR,UAAU,QAAQ,8BAA8B,QAAQ;AAC1D,cAAI,aAAY,SAAS,cAAc;AAAA;AAGzC,iBAAS,YAAY,YAAW,IAAI;AAAA;AAAA;AAAA;AAyB1C,QAAM,EAAE,SAAS,MAAM,OAAO;AAC9B,OAAK,MAAM;AAAA;",
  "names": []
}
