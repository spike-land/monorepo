{
  "version": 3,
  "sources": ["../esbuildEsm.mjs", "../wait.ts"],
  "sourcesContent": ["import { Mutex } from \"async-mutex\";\nimport * as esbuild from \"https://unpkg.com/esbuild-wasm@0.14.10/esm/browser.min.js\";\nimport { wait } from \"./wait\";\n\nconst init = esbuild.initialize({\n  wasmURL: \"https://unpkg.com/esbuild-wasm@0.14.10/esbuild.wasm\",\n});\n\nlet initFinished = false;\nconst mutex = new Mutex();\n\nexport const transform = async (code, retry = 4) => {\n  const startTime = performance.now();\n\n  if (initFinished || await init) {\n    initFinished = true;\n  }\n\n  let result;\n  try {\n    await mutex.waitForUnlock();\n    result = await esbuild.transform(code, {\n      loader: \"tsx\",\n      target: \"es2018\",\n    });\n  } catch (e) {\n    if (retry > 0) {\n      await wait(100);\n      return transform(code, retry - 1);\n    }\n    throw e;\n  }\n\n  const endTime = performance.now();\n\n  console.log(`esbuildEsmTransform: took ${endTime - startTime} milliseconds`);\n  return result.code;\n};\n", "export async function wait(delay: number): Promise<void> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve();\n    }, delay);\n  });\n}\n"],
  "mappings": ";AAAA;AACA;;;ACDA,oBAA2B,OAA8B;AACvD,SAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,eAAW,MAAM;AACf;AAAA,OACC;AAAA;AAAA;;;ADAP,IAAM,OAAO,AAAQ,mBAAW;AAAA,EAC9B,SAAS;AAAA;AAGX,IAAI,eAAe;AACnB,IAAM,QAAQ,IAAI;AAEX,IAAM,aAAY,OAAO,MAAM,QAAQ,MAAM;AAClD,QAAM,YAAY,YAAY;AAE9B,MAAI,gBAAgB,MAAM,MAAM;AAC9B,mBAAe;AAAA;AAGjB,MAAI;AACJ,MAAI;AACF,UAAM,MAAM;AACZ,aAAS,MAAM,AAAQ,kBAAU,MAAM;AAAA,MACrC,QAAQ;AAAA,MACR,QAAQ;AAAA;AAAA,WAEH,GAAP;AACA,QAAI,QAAQ,GAAG;AACb,YAAM,KAAK;AACX,aAAO,WAAU,MAAM,QAAQ;AAAA;AAEjC,UAAM;AAAA;AAGR,QAAM,UAAU,YAAY;AAE5B,UAAQ,IAAI,6BAA6B,UAAU;AACnD,SAAO,OAAO;AAAA;",
  "names": []
}
