{
  "version": 3,
  "sources": ["../../../../../node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.js"],
  "sourcesContent": ["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.1(337587859b1c171314b40503171188b6cea6a32a)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/markdown/markdown.ts\nvar conf = {\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"<\", close: \">\", notIn: [\"string\"] }\n  ],\n  surroundingPairs: [\n    { open: \"(\", close: \")\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"`\", close: \"`\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*<!--\\\\s*#?region\\\\b.*-->\"),\n      end: new RegExp(\"^\\\\s*<!--\\\\s*#?endregion\\\\b.*-->\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".md\",\n  control: /[\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n  noncontrol: /[^\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n  escapes: /\\\\(?:@control)/,\n  jsescapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,\n  empty: [\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"link\",\n    \"meta\",\n    \"param\"\n  ],\n  tokenizer: {\n    root: [\n      [/^\\s*\\|/, \"@rematch\", \"@table_header\"],\n      [/^(\\s{0,3})(#+)((?:[^\\\\#]|@escapes)+)((?:#+)?)/, [\"white\", \"keyword\", \"keyword\", \"keyword\"]],\n      [/^\\s*(=+|\\-+)\\s*$/, \"keyword\"],\n      [/^\\s*((\\*[ ]?)+)\\s*$/, \"meta.separator\"],\n      [/^\\s*>+/, \"comment\"],\n      [/^\\s*([\\*\\-+:]|\\d+\\.)\\s/, \"keyword\"],\n      [/^(\\t|[ ]{4})[^ ].*$/, \"string\"],\n      [/^\\s*~~~\\s*((?:\\w|[\\/\\-#])+)?\\s*$/, { token: \"string\", next: \"@codeblock\" }],\n      [\n        /^\\s*```\\s*((?:\\w|[\\/\\-#])+).*$/,\n        { token: \"string\", next: \"@codeblockgh\", nextEmbedded: \"$1\" }\n      ],\n      [/^\\s*```\\s*$/, { token: \"string\", next: \"@codeblock\" }],\n      { include: \"@linecontent\" }\n    ],\n    table_header: [\n      { include: \"@table_common\" },\n      [/[^\\|]+/, \"keyword.table.header\"]\n    ],\n    table_body: [{ include: \"@table_common\" }, { include: \"@linecontent\" }],\n    table_common: [\n      [/\\s*[\\-:]+\\s*/, { token: \"keyword\", switchTo: \"table_body\" }],\n      [/^\\s*\\|/, \"keyword.table.left\"],\n      [/^\\s*[^\\|]/, \"@rematch\", \"@pop\"],\n      [/^\\s*$/, \"@rematch\", \"@pop\"],\n      [\n        /\\|/,\n        {\n          cases: {\n            \"@eos\": \"keyword.table.right\",\n            \"@default\": \"keyword.table.middle\"\n          }\n        }\n      ]\n    ],\n    codeblock: [\n      [/^\\s*~~~\\s*$/, { token: \"string\", next: \"@pop\" }],\n      [/^\\s*```\\s*$/, { token: \"string\", next: \"@pop\" }],\n      [/.*$/, \"variable.source\"]\n    ],\n    codeblockgh: [\n      [/```\\s*$/, { token: \"string\", next: \"@pop\", nextEmbedded: \"@pop\" }],\n      [/[^`]+/, \"variable.source\"]\n    ],\n    linecontent: [\n      [/&\\w+;/, \"string.escape\"],\n      [/@escapes/, \"escape\"],\n      [/\\b__([^\\\\_]|@escapes|_(?!_))+__\\b/, \"strong\"],\n      [/\\*\\*([^\\\\*]|@escapes|\\*(?!\\*))+\\*\\*/, \"strong\"],\n      [/\\b_[^_]+_\\b/, \"emphasis\"],\n      [/\\*([^\\\\*]|@escapes)+\\*/, \"emphasis\"],\n      [/`([^\\\\`]|@escapes)+`/, \"variable\"],\n      [/\\{+[^}]+\\}+/, \"string.target\"],\n      [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\]\\([^\\)]+\\))/, [\"string.link\", \"\", \"string.link\"]],\n      [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\])/, \"string.link\"],\n      { include: \"html\" }\n    ],\n    html: [\n      [/<(\\w+)\\/>/, \"tag\"],\n      [\n        /<(\\w+)/,\n        {\n          cases: {\n            \"@empty\": { token: \"tag\", next: \"@tag.$1\" },\n            \"@default\": { token: \"tag\", next: \"@tag.$1\" }\n          }\n        }\n      ],\n      [/<\\/(\\w+)\\s*>/, { token: \"tag\" }],\n      [/<!--/, \"comment\", \"@comment\"]\n    ],\n    comment: [\n      [/[^<\\-]+/, \"comment.content\"],\n      [/-->/, \"comment\", \"@pop\"],\n      [/<!--/, \"comment.content.invalid\"],\n      [/[<\\-]/, \"comment.content\"]\n    ],\n    tag: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [\n        /(type)(\\s*=\\s*)(\")([^\"]+)(\")/,\n        [\n          \"attribute.name.html\",\n          \"delimiter.html\",\n          \"string.html\",\n          { token: \"string.html\", switchTo: \"@tag.$S2.$4\" },\n          \"string.html\"\n        ]\n      ],\n      [\n        /(type)(\\s*=\\s*)(')([^']+)(')/,\n        [\n          \"attribute.name.html\",\n          \"delimiter.html\",\n          \"string.html\",\n          { token: \"string.html\", switchTo: \"@tag.$S2.$4\" },\n          \"string.html\"\n        ]\n      ],\n      [/(\\w+)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, [\"attribute.name.html\", \"delimiter.html\", \"string.html\"]],\n      [/\\w+/, \"attribute.name.html\"],\n      [/\\/>/, \"tag\", \"@pop\"],\n      [\n        />/,\n        {\n          cases: {\n            \"$S2==style\": {\n              token: \"tag\",\n              switchTo: \"embeddedStyle\",\n              nextEmbedded: \"text/css\"\n            },\n            \"$S2==script\": {\n              cases: {\n                $S3: {\n                  token: \"tag\",\n                  switchTo: \"embeddedScript\",\n                  nextEmbedded: \"$S3\"\n                },\n                \"@default\": {\n                  token: \"tag\",\n                  switchTo: \"embeddedScript\",\n                  nextEmbedded: \"text/javascript\"\n                }\n              }\n            },\n            \"@default\": { token: \"tag\", next: \"@pop\" }\n          }\n        }\n      ]\n    ],\n    embeddedStyle: [\n      [/[^<]+/, \"\"],\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }],\n      [/</, \"\"]\n    ],\n    embeddedScript: [\n      [/[^<]+/, \"\"],\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }],\n      [/</, \"\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],
  "mappings": "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",
  "names": []
}
