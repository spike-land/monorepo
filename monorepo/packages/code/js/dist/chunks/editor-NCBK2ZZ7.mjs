import"./chunk-5FA7AVAW.mjs";import{$ as WL,$a as zr,$b as zv,$c as rb,$d as Sb,$e as rc,$f as Yb,$g as sD,$h as va,$i as Ft,$j as gD,A as pu,Aa as z,Ab as Gv,Ac as Er,Ad as zm,Ae as oe,Af as Ib,Ag as d1,Ah as Ps,Ai as G1,Aj as mS,B as fu,Ba as tt,Bb as zn,Bc as Xl,Bd as ub,Be as Xn,Bf as kb,Bg as u1,Bh as uc,Bi as _t,Bj as gc,C as Cm,Ca as y,Cb as hs,Cc as KL,Cd as pb,Ce as Gr,Cf as Nb,Cg as or,Ch as pc,Ci as B1,Cj as Sp,D as Fl,Da as ee,Db as q,Dc as Yv,Dd as Nu,De as Mu,Df as Rb,Dg as $u,Dh as ya,Di as lh,Dj as ph,E as Je,Ea as X,Eb as Tu,Ec as qL,Ed as lt,Ee as fa,Ef as Pb,Eg as mt,Eh as op,Ei as V1,Ej as fh,F as Gl,Fa as kt,Fb as Sr,Fc as rt,Fd as fb,Fe as ar,Ff as Mb,Fg as Qu,Fh as v,Fi as ch,Fj as mh,G as kr,Ga as Nr,Gb as gs,Gc as wn,Gd as mb,Ge as $t,Gf as Ob,Gg as p1,Gh as Be,Gi as mp,Gj as hS,H as Jt,Ha as _i,Hb as Wl,Hc as gt,Hd as nr,He as Zl,Hf as Fb,Hg as rD,Hh as Ms,Hi as H1,Hj as ei,I as fv,Ia as Hl,Ib as Pr,Ic as an,Id as qn,Ie as Yn,If as Gb,Ig as eh,Ih as Cr,Ii as Sa,Ij as Vr,J as mv,Ja as ds,Jb as Ln,Jc as Or,Jd as hb,Je as ec,Jf as Bb,Jg as f1,Jh as lo,Ji as U1,Jj as Ep,K as ls,Ka as Ge,Kb as xu,Kc as ro,Kd as gb,Ke as Ou,Kf as Vb,Kg as m1,Kh as N1,Ki as W1,Kj as gS,L as mu,La as us,Lb as Bv,Lc as Nt,Ld as _b,Le as dt,Lf as Hb,Lg as Zu,Lh as Os,Li as j1,Lj as lr,M as hv,Ma as Cn,Mb as Vv,Mc as rr,Md as yb,Me as M,Mf as so,Mg as h1,Mh as R1,Mi as z1,Mj as Tp,N as hu,Na as ps,Nb as jl,Nc as on,Nd as Km,Ne as Jm,Nf as Ub,Ng as g1,Nh as dD,Ni as K1,Nj as xp,O as Wn,Oa as Qa,Ob as Hv,Oc as $v,Od as Kr,Oe as xr,Of as xs,Og as _1,Oh as Fs,Oi as q1,Oj as _c,P as sa,Pa as Su,Pb as Rm,Pc as Qv,Pd as sn,Pe as Cb,Pf as ju,Pg as y1,Ph as nh,Pi as mo,Pj as _S,Q as Bl,Qa as Rr,Qb as Uv,Qc as Zv,Qd as qm,Qe as K,Qf as dn,Qg as ep,Qh as P1,Qi as ho,Qj as yc,R as ce,Ra as Ke,Rb as Wv,Rc as JL,Rd as B,Re as D,Rf as Cs,Rg as v1,Rh as ih,Ri as hp,Rj as hh,S as ze,Sa as Sv,Sb as vi,Sc as Yt,Sd as vb,Se as Xm,Sf as Ls,Sg as ks,Sh as ah,Si as J1,Sj as yS,T as jn,Ta as fs,Tb as Pm,Tc as da,Td as io,Te as Fu,Tf as Wb,Tg as nD,Th as oh,Ti as X1,Tj as Cp,U as gv,Ua as Ev,Ub as _s,Uc as Iu,Ud as V,Ue as Q,Uf as Qm,Ug as b1,Uh as Li,Ui as Y1,Uj as gh,V as gu,Va as vr,Vb as ys,Vc as eb,Vd as ir,Ve as Lb,Vf as jb,Vg as iD,Vh as sp,Vi as $1,Vj as vS,W as xn,Wa as Tv,Wb as Dn,Wc as tb,Wd as Ut,We as pe,Wf as zb,Wg as S1,Wh as $e,Wi as Q1,Wj as hD,X as Ae,Xa as we,Xb as zl,Xc as bi,Xd as $l,Xe as Ym,Xf as Kb,Xg as aD,Xh as M1,Xi as Z1,Xj as bS,Y as _u,Ya as Za,Yb as Cu,Yc as Bm,Yd as bb,Ye as tD,Yf as qb,Yg as E1,Yh as co,Yi as yt,Yj as _h,Z as _v,Za as wm,Zb as Lu,Zc as ua,Zd as Pe,Ze as Gu,Zf as Jb,Zg as oD,Zh as sh,Zi as eS,Zj as SS,_ as Lm,_a as xv,_b as jv,_c as XL,_d as Tt,_e as tc,_f as Xb,_g as T1,_h as Di,_i as Jr,_j as ES,a as p,aa as yu,ab as Cv,ac as Kv,ad as YL,ae as An,af as Ts,ag as $b,ah as x1,ai as lp,aj as dh,ak as _D,b as Z,ba as St,bb as yi,bc as ca,bd as Vm,be as Eb,bf as $m,bg as Qb,bh as th,bi as fc,bj as hc,bk as yD,c as hi,ca as Dm,cb as Lv,cc as vs,cd as nb,ce as Wt,cf as nc,cg as xi,ch as tp,ci as uo,cj as tS,ck as vD,d as yr,da as Ve,db as Dv,dc as Kn,dd as $L,de as Si,df as ic,dg as Ds,dh as rp,di as Rt,dj as pD,dk as bD,e as Ol,ea as P,eb as eo,ec as Mm,ed as pa,ee as Ei,ef as Ti,eg as ws,eh as Qt,ei as cp,ej as rS,ek as SD,f as oa,fa as F,fb as Ul,fc as Om,fd as ku,fe as Ql,ff as ac,fg as Zb,fh as C1,fi as wi,fj as nS,fk as ED,g as ou,ga as et,gb as ft,gc as Kl,gd as ib,ge as Jn,gf as xe,gg as As,gh as Ns,gi as dp,gj as fD,gk as TD,h as su,ha as W,hb as ms,hc as to,hd as QL,he as Ru,hf as $n,hg as e1,hh as L1,hi as up,hj as iS,hk as xD,i as av,ia as vu,ib as Am,ic as Du,id as Hm,ie as ao,if as J,ig as t1,ih as rh,ii as Ai,ij as aS,ik as CD,j as ov,ja as yv,jb as wv,jc as wu,jd as ab,je as ct,jf as ne,jg as r1,jh as cc,ji as po,jj as mD,jk as LD,k as Ir,ka as nn,kb as Im,kc as Fm,kd as ob,ke as Ie,kf as Db,kg as n1,kh as Br,ki as Qn,kj as gp,kk as yh,l as $a,la as Vl,lb as km,lc as bs,ld as Um,le as xt,lf as Bu,lg as i1,lh as dc,li as Ii,lj as oS,lk as DD,m as lu,ma as ut,mb as la,mc as Re,md as ZL,me as G,mf as wb,mg as a1,mh as D1,mi as fo,mj as sS,mk as Lp,n as cu,na as j,nb as Eu,nc as qv,nd as no,ne as fe,nf as cn,ng as o1,nh as w1,ni as Gs,nj as _p,nk as In,o as sv,oa as Ne,ob as Av,oc as Jv,od as Wm,oe as re,of as oo,og as s1,oh as lD,oi as O1,oj as lS,ok as Ta,p as xm,pa as he,pb as Iv,pc as Au,pd as sb,pe as Le,pf as ma,pg as _a,ph as A1,pi as uD,pj as cS,q as Un,qa as Mt,qb as kv,qc as Xv,qd as eD,qe as ln,qf as ha,qg as zu,qh as cD,qi as Zn,qj as dS,r as lv,ra as pt,rb as Nv,rc as ql,rd as Et,re as Es,rf as Vu,rg as Ku,rh as Rs,ri as mc,rj as yp,s as It,sa as Xe,sb as Rv,sc as Gm,sd as lb,se as Pu,sf as ga,sg as qu,sh as np,si as pp,sj as uS,t as du,ta as gi,tb as Pv,tc as zL,td as Yl,te as Tb,tf as Hu,tg as Ju,th as Se,ti as fp,tj as sr,u as uu,ua as vv,ub as Nm,uc as Jl,ud as Tr,ue as Ot,uf as Uu,ug as l1,uh as jt,ui as We,uj as Ea,v as cv,va as cs,vb as Ye,vc as Ss,vd as cb,ve as nt,vf as Wu,vg as Xu,vh as I1,vi as ki,vj as vp,w as dv,wa as bu,wb as Mv,wc as le,wd as qe,we as it,wf as oc,wg as Yu,wh as Ci,wi as at,wj as pS,x as uv,xa as bv,xb as Ov,xc as Mr,xd as Fr,xe as ke,xf as sc,xg as Zm,xh as k1,xi as qr,xj as bp,y as bt,ya as Te,yb as jL,yc as He,yd as db,ye as Oe,yf as lc,yg as Is,yh as ip,yi as F1,yj as fS,z as pv,za as Xt,zb as Fv,zc as Ue,zd as jm,ze as xb,zf as Ab,zg as c1,zh as ap,zi as ba,zj as uh}from"./chunk-IJDARVB7.mjs";import{a as tv,d as Ml,e as Xa,f as UL,g as Ya,h as vt,i as rv,j as nv,k as iv}from"./chunk-AH6KKUH7.mjs";var Qx=Xa(Uo=>{bt();pt();Ae();gi();W();pe();Er();Bm();ee();Be();Re();dp();gD();hD();Z();xt();Le();He();fo();var Jx=Uo&&Uo.__decorate||function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Xx=Uo&&Uo.__param||function(o,e){return function(t,r){e(t,r,o)}},iy=Uo&&Uo.__awaiter||function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},wd=class{constructor(e,t){this._editor=e,this._workerService=t,this._disposables=new P,this._sessionDisposables=new P,this._disposables.add(Om.onDidChange(this._update,this)),this._disposables.add(e.onDidChangeModel(()=>this._update())),this._disposables.add(e.onDidChangeModelLanguage(()=>this._update())),this._disposables.add(e.onDidChangeConfiguration(r=>{r.hasChanged(49)&&this._update()}))}dispose(){this._disposables.dispose(),this._sessionDisposables.dispose()}_update(){if(this._sessionDisposables.clear(),!this._editor.getOption(49)||!this._editor.hasModel())return;let e=this._editor.getModel(),[t]=Om.ordered(e);if(!t||!t.autoFormatTriggerCharacters)return;let r=new bi;for(let n of t.autoFormatTriggerCharacters)r.add(n.charCodeAt(0));this._sessionDisposables.add(this._editor.onDidType(n=>{let i=n.charCodeAt(n.length-1);r.has(i)&&this._trigger(String.fromCharCode(i))}))}_trigger(e){if(!this._editor.hasModel()||this._editor.getSelections().length>1||!this._editor.getSelection().isEmpty())return;let t=this._editor.getModel(),r=this._editor.getPosition(),n=new Mt,i=this._editor.onDidChangeModelContent(a=>{if(a.isFlush){n.cancel(),i.dispose();return}for(let s=0,l=a.changes.length;s<l;s++)if(a.changes[s].range.endLineNumber<=r.lineNumber){n.cancel(),i.dispose();return}});ES(this._workerService,t,r,e,t.getFormattingOptions(),n.token).then(a=>{n.token.isCancellationRequested||It(a)&&(vS.execute(this._editor,a,!0),bS(a))}).finally(()=>{i.dispose()})}};wd.ID="editor.contrib.autoFormat";wd=Jx([Xx(1,wi)],wd);var Ad=class{constructor(e,t){this.editor=e,this._instantiationService=t,this._callOnDispose=new P,this._callOnModel=new P,this._callOnDispose.add(e.onDidChangeConfiguration(()=>this._update())),this._callOnDispose.add(e.onDidChangeModel(()=>this._update())),this._callOnDispose.add(e.onDidChangeModelLanguage(()=>this._update())),this._callOnDispose.add(Mm.onDidChange(this._update,this))}dispose(){this._callOnDispose.dispose(),this._callOnModel.dispose()}_update(){this._callOnModel.clear(),!!this.editor.getOption(48)&&(!this.editor.hasModel()||!Mm.has(this.editor.getModel())||this._callOnModel.add(this.editor.onDidPaste(({range:e})=>this._trigger(e))))}_trigger(e){!this.editor.hasModel()||this.editor.getSelections().length>1||this._instantiationService.invokeFunction(_h,this.editor,e,2,Qn.None,he.None).catch(ce)}};Ad.ID="editor.contrib.formatOnPaste";Ad=Jx([Xx(1,le)],Ad);var Yx=class extends M{constructor(){super({id:"editor.action.formatDocument",label:p("formatDocument.label","Format Document"),alias:"Format Document",precondition:G.and(v.notInCompositeEditor,v.writable,v.hasDocumentFormattingProvider),kbOpts:{kbExpr:v.editorTextFocus,primary:1572,linux:{primary:3111},weight:100},contextMenuOpts:{group:"1_modification",order:1.3}})}run(e,t){return iy(this,void 0,void 0,function*(){if(t.hasModel()){let r=e.get(le);yield e.get(Ii).showWhile(r.invokeFunction(SS,t,1,Qn.None,he.None),250)}})}},$x=class extends M{constructor(){super({id:"editor.action.formatSelection",label:p("formatSelection.label","Format Selection"),alias:"Format Selection",precondition:G.and(v.writable,v.hasDocumentSelectionFormattingProvider),kbOpts:{kbExpr:v.editorTextFocus,primary:Xe(2089,2084),weight:100},contextMenuOpts:{when:v.hasNonEmptySelection,group:"1_modification",order:1.31}})}run(e,t){return iy(this,void 0,void 0,function*(){if(!t.hasModel())return;let r=e.get(le),n=t.getModel(),i=t.getSelections().map(s=>s.isEmpty()?new y(s.startLineNumber,1,s.startLineNumber,n.getLineMaxColumn(s.startLineNumber)):s);yield e.get(Ii).showWhile(r.invokeFunction(_h,t,i,1,Qn.None,he.None),250)})}};Q(wd.ID,wd);Q(Ad.ID,Ad);D(Yx);D($x);Ie.registerCommand("editor.action.format",o=>iy(void 0,void 0,void 0,function*(){let e=o.get(Ue).getFocusedCodeEditor();if(!e||!e.hasModel())return;let t=o.get(ct);e.getSelection().isEmpty()?yield t.executeCommand("editor.action.formatDocument"):yield t.executeCommand("editor.action.formatSelection")}))});var cN,Zx,dN,Wo,ay,eC,Ji,jo,oy,im=Ml(()=>{bt();pt();Ae();WL();hs();tt();ee();Re();mc();He();ro();da();W();cN=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Zx=function(o,e){return function(t,r){e(t,r,o)}},dN=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},Wo=class{remove(){this.parent&&this.parent.children.delete(this.id)}static findId(e,t){let r;typeof e=="string"?r=`${t.id}/${e}`:(r=`${t.id}/${e.name}`,t.children.get(r)!==void 0&&(r=`${t.id}/${e.name}_${e.range.startLineNumber}_${e.range.startColumn}`));let n=r;for(let i=0;t.children.get(n)!==void 0;i++)n=`${r}_${i}`;return n}static empty(e){return e.children.size===0}},ay=class extends Wo{constructor(e,t,r){super();this.id=e,this.parent=t,this.symbol=r,this.children=new Map}},eC=class extends Wo{constructor(e,t,r,n){super();this.id=e,this.parent=t,this.label=r,this.order=n,this.children=new Map}},Ji=class extends Wo{constructor(e){super();this.uri=e,this.id="root",this.parent=void 0,this._groups=new Map,this.children=new Map,this.id="root",this.parent=void 0}static create(e,t){let r=new Mt(t),n=new Ji(e.uri),i=Dn.ordered(e),a=i.map((l,d)=>{var c;let u=Wo.findId(`provider_${d}`,n),f=new eC(u,n,(c=l.displayName)!==null&&c!==void 0?c:"Unknown Outline Provider",d);return Promise.resolve(l.provideDocumentSymbols(e,r.token)).then(m=>{for(let g of m||[])Ji._makeOutlineElement(g,f);return f},m=>(ze(m),f)).then(m=>{Wo.empty(m)?m.remove():n._groups.set(u,m)})}),s=Dn.onDidChange(()=>{let l=Dn.ordered(e);$a(l,i)||r.cancel()});return Promise.all(a).then(()=>r.token.isCancellationRequested&&!t.isCancellationRequested?Ji.create(e,t):n._compact()).finally(()=>{s.dispose()})}static _makeOutlineElement(e,t){let r=Wo.findId(e,t),n=new ay(r,t,e);if(e.children)for(let i of e.children)Ji._makeOutlineElement(i,n);t.children.set(n.id,n)}_compact(){let e=0;for(let[t,r]of this._groups)r.children.size===0?this._groups.delete(t):e+=1;if(e!==1)this.children=this._groups;else{let t=Lm.first(this._groups.values());for(let[,r]of t.children)r.parent=this,this.children.set(r.id,r)}return this}getTopLevelSymbols(){let e=[];for(let t of this.children.values())t instanceof ay?e.push(t.symbol):e.push(...Lm.map(t.children.values(),r=>r.symbol));return e.sort((t,r)=>y.compareRangesUsingStarts(t.range,r.range))}asListOfDocumentSymbols(){let e=this.getTopLevelSymbols(),t=[];return Ji._flattenDocumentSymbols(t,e,""),t.sort((r,n)=>z.compare(y.getStartPosition(r.range),y.getStartPosition(n.range))||z.compare(y.getEndPosition(n.range),y.getEndPosition(r.range)))}static _flattenDocumentSymbols(e,t,r){for(let n of t)e.push({kind:n.kind,tags:n.tags,name:n.name,detail:n.detail,containerName:n.containerName||r,range:n.range,selectionRange:n.selectionRange,children:void 0}),n.children&&Ji._flattenDocumentSymbols(e,n.children,n.name)}},jo=Mr("IOutlineModelService"),oy=class{constructor(e,t){this._disposables=new P,this._cache=new zn(10,.7),this._debounceInformation=e.for(Dn,"DocumentSymbols",{min:350}),this._disposables.add(t.onModelRemoved(r=>{this._cache.delete(r.id)}))}dispose(){this._disposables.dispose()}getOrCreate(e,t){return dN(this,void 0,void 0,function*(){let r=Dn.ordered(e),n=this._cache.get(e.id);if(!n||n.versionId!==e.getVersionId()||!$a(n.provider,r)){let a=new Mt;n={versionId:e.getVersionId(),provider:r,promiseCnt:0,source:a,promise:Ji.create(e,a.token),model:void 0},this._cache.set(e.id,n);let s=Date.now();n.promise.then(l=>{n.model=l,this._debounceInformation.update(e,Date.now()-s)}).catch(l=>{this._cache.delete(e.id)})}if(n.model)return n.model;n.promiseCnt+=1;let i=t.onCancellationRequested(()=>{--n.promiseCnt===0&&(n.source.cancel(),this._cache.delete(e.id))});try{return yield n.promise}finally{i.dispose()}})}};oy=cN([Zx(0,Zn),Zx(1,Yt)],oy);Or(jo,oy,!0)});var tC=Xa(sy=>{pt();Jt();Xt();Si();im();xt();var uN=sy&&sy.__awaiter||function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})};Ie.registerCommand("_executeDocumentSymbolProvider",function(o,...e){return uN(this,void 0,void 0,function*(){let[t]=e;Je(Te.isUri(t));let r=o.get(jo),i=yield o.get(Wt).createModelReference(t);try{return(yield r.getOrCreate(i.object.textEditorModel,he.None)).getTopLevelSymbols()}finally{i.dispose()}})})});var cy,dC=Ml(()=>{kt();cy=class{constructor(e,t,r){this._editRange=e,this._originalSelection=t,this._text=r}getEditOperations(e,t){t.addTrackedEditOperation(this._editRange,this._text)}computeCursorState(e,t){let n=t.getInverseEditOperations()[0].range;return this._originalSelection.isEmpty()?new X(n.endLineNumber,Math.min(this._originalSelection.positionColumn,n.endColumn),n.endLineNumber,Math.min(this._originalSelection.positionColumn,n.endColumn)):new X(n.endLineNumber,n.endColumn-this._text.length,n.endLineNumber,n.endColumn)}}});var fC=Xa(Md=>{we();Ae();yc();pe();ee();kt();Be();jt();dp();ep();Z();Oe();dC();var pN=Md&&Md.__decorate||function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},fN=Md&&Md.__param||function(o,e){return function(t,r){e(t,r,o)}},Va=class dy{constructor(e,t){this.decorationIds=[],this.editor=e,this.editorWorkerService=t}static get(e){return e.getContribution(dy.ID)}dispose(){}run(e,t){this.currentRequest&&this.currentRequest.cancel();let r=this.editor.getSelection(),n=this.editor.getModel();if(!n||!r)return;let i=r;if(i.startLineNumber!==i.endLineNumber)return;let a=new xp(this.editor,5),s=n.uri;return this.editorWorkerService.canNavigateValueSet(s)?(this.currentRequest=Ge(l=>this.editorWorkerService.navigateValueSet(s,i,t)),this.currentRequest.then(l=>{if(!l||!l.range||!l.value||!a.validate(this.editor))return;let d=y.lift(l.range),c=l.range,u=l.value.length-(i.endColumn-i.startColumn);c={startLineNumber:c.startLineNumber,startColumn:c.startColumn,endLineNumber:c.endLineNumber,endColumn:c.startColumn+l.value.length},u>1&&(i=new X(i.startLineNumber,i.startColumn,i.endLineNumber,i.endColumn+u-1));let f=new cy(d,i,l.value);this.editor.pushUndoStop(),this.editor.executeCommand(e,f),this.editor.pushUndoStop(),this.decorationIds=this.editor.deltaDecorations(this.decorationIds,[{range:c,options:dy.DECORATION}]),this.decorationRemover&&this.decorationRemover.cancel(),this.decorationRemover=ps(350),this.decorationRemover.then(()=>this.decorationIds=this.editor.deltaDecorations(this.decorationIds,[])).catch(ce)}).catch(ce)):Promise.resolve(void 0)}};Va.ID="editor.contrib.inPlaceReplaceController";Va.DECORATION=Se.register({description:"in-place-replace",className:"valueSetReplacement"});Va=pN([fN(1,wi)],Va);var uC=class extends M{constructor(){super({id:"editor.action.inPlaceReplace.up",label:p("InPlaceReplaceAction.previous.label","Replace with Previous Value"),alias:"Replace with Previous Value",precondition:v.writable,kbOpts:{kbExpr:v.editorTextFocus,primary:3154,weight:100}})}run(e,t){let r=Va.get(t);return r?r.run(this.id,!0):Promise.resolve(void 0)}},pC=class extends M{constructor(){super({id:"editor.action.inPlaceReplace.down",label:p("InPlaceReplaceAction.next.label","Replace with Next Value"),alias:"Replace with Next Value",precondition:v.writable,kbOpts:{kbExpr:v.editorTextFocus,primary:3156,weight:100}})}run(e,t){let r=Va.get(t);return r?r.run(this.id,!1):Promise.resolve(void 0)}};Q(Va.ID,Va);D(uC);D(pC);ke((o,e)=>{let t=o.getColor(Zu);t&&e.addRule(`.monaco-editor.vs .valueSetReplacement { outline: solid 2px ${t}; }`)})});var ja,ky=Ml(()=>{An();tD();pe();Z();ja=class extends M{constructor(){super({id:ja.ID,label:p({key:"toggle.tabMovesFocus",comment:["Turn on/off use of tab key for moving focus around VS Code"]},"Toggle Tab Key Moves Focus"),alias:"Toggle Tab Key Moves Focus",precondition:void 0,kbOpts:{kbExpr:null,primary:2091,mac:{primary:1323},weight:100}})}run(e,t){let n=!Ym.getTabFocusMode();Ym.setTabFocusMode(n),n?Tt(p("toggle.tabMovesFocus.on","Pressing Tab will now move focus to the next focusable element")):Tt(p("toggle.tabMovesFocus.off","Pressing Tab will now insert the tab character"))}};ja.ID="editor.action.toggleTabFocusMode";D(ja)});var _2=Xa(jd=>{we();W();pe();Re();fD();da();mD();pD();wn();Oe();mc();Vl();var FN=jd&&jd.__decorate||function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},um=jd&&jd.__param||function(o,e){return function(t,r){e(t,r,o)}},Wd=class extends F{constructor(e,t,r,n,i){super();this._modelService=t,this._themeService=r,this._configurationService=n,this._editor=e,this._debounceInformation=i.for(Fm,"DocumentRangeSemanticTokens",{min:100,max:500}),this._tokenizeViewport=new Ke(()=>this._tokenizeViewportNow(),100),this._outstandingRequests=[];let a=()=>{this._editor.hasModel()&&this._tokenizeViewport.schedule(this._debounceInformation.get(this._editor.getModel()))};this._register(this._editor.onDidScrollChange(()=>{a()})),this._register(this._editor.onDidChangeModel(()=>{this._cancelAll(),a()})),this._register(this._editor.onDidChangeModelContent(s=>{this._cancelAll(),a()})),this._register(Fm.onDidChange(()=>{this._cancelAll(),a()})),this._register(this._configurationService.onDidChangeConfiguration(s=>{s.affectsConfiguration(iS)&&(this._cancelAll(),a())})),this._register(this._themeService.onDidColorThemeChange(()=>{this._cancelAll(),a()}))}_cancelAll(){for(let e of this._outstandingRequests)e.cancel();this._outstandingRequests=[]}_removeOutstandingRequest(e){for(let t=0,r=this._outstandingRequests.length;t<r;t++)if(this._outstandingRequests[t]===e){this._outstandingRequests.splice(t,1);return}}_tokenizeViewportNow(){if(!this._editor.hasModel())return;let e=this._editor.getModel();if(e.hasCompleteSemanticTokens())return;if(!aS(e,this._themeService,this._configurationService)){e.hasSomeSemanticTokens()&&e.setSemanticTokens(null,!1);return}if(!rS(e)){e.hasSomeSemanticTokens()&&e.setSemanticTokens(null,!1);return}let t=this._editor.getVisibleRangesPlusViewportAboveBelow();this._outstandingRequests=this._outstandingRequests.concat(t.map(r=>this._requestRange(e,r)))}_requestRange(e,t){let r=e.getVersionId(),n=Ge(a=>Promise.resolve(nS(e,t,a))),i=new nn(!1);return n.then(a=>{if(this._debounceInformation.update(e,i.elapsed()),!a||!a.tokens||e.isDisposed()||e.getVersionId()!==r)return;let{provider:s,tokens:l}=a,d=this._modelService.getSemanticTokensProviderStyling(s);e.setPartialSemanticTokens(t,tS(l,d,e.getLanguageId()))}).then(()=>this._removeOutstandingRequest(n),()=>this._removeOutstandingRequest(n)),n}};Wd.ID="editor.contrib.viewportSemanticTokens";Wd=FN([um(1,Yt),um(2,Ot),um(3,rt),um(4,Zn)],Wd);Q(Wd.ID,Wd)});var eL=Ml(()=>{});var aL=Xa(zd=>{eL();Pe();zL();dS();An();lo();W();Ir();Ye();Xt();pe();Be();ky();Le();He();qr();Jr();mt();Oe();Sa();var tL=zd&&zd.__decorate||function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},hm=zd&&zd.__param||function(o,e){return function(t,r){e(t,r,o)}},rL=new fe("accessibilityHelpWidgetVisible",!1),ts=class nL extends F{constructor(e,t){super();this._editor=e,this._widget=this._register(t.createInstance(El,this._editor))}static get(e){return e.getContribution(nL.ID)}show(){this._widget.show()}hide(){this._widget.hide()}};ts.ID="editor.contrib.accessibilityHelpController";ts=tL([hm(1,le)],ts);function qN(o,e){return!o||o.length===0?_t.noSelection:o.length===1?e?zr(_t.singleSelectionRange,o[0].positionLineNumber,o[0].positionColumn,e):zr(_t.singleSelection,o[0].positionLineNumber,o[0].positionColumn):e?zr(_t.multiSelectionRange,o.length,e):o.length>0?zr(_t.multiSelection,o.length):""}var El=class gm extends Cr{constructor(e,t,r,n){super();this._contextKeyService=t,this._keybindingService=r,this._openerService=n,this._editor=e,this._isVisibleKey=rL.bindTo(this._contextKeyService),this._domNode=Gm(document.createElement("div")),this._domNode.setClassName("accessibilityHelpWidget"),this._domNode.setDisplay("none"),this._domNode.setAttribute("role","dialog"),this._domNode.setAttribute("aria-hidden","true"),this._contentDomNode=Gm(document.createElement("div")),this._contentDomNode.setAttribute("role","document"),this._domNode.appendChild(this._contentDomNode),this._isVisible=!1,this._register(this._editor.onDidLayoutChange(()=>{this._isVisible&&this._layout()})),this._register(Fr(this._contentDomNode.domNode,"keydown",i=>{if(!!this._isVisible&&(i.equals(2083)&&(Tt(_t.emergencyConfOn),this._editor.updateOptions({accessibilitySupport:"on"}),Tr(this._contentDomNode.domNode),this._buildContent(),this._contentDomNode.domNode.focus(),i.preventDefault(),i.stopPropagation()),i.equals(2086))){Tt(_t.openingDocs);let a=this._editor.getRawOptions().accessibilityHelpUrl;typeof a=="undefined"&&(a="https://go.microsoft.com/fwlink/?linkid=852450"),this._openerService.open(Te.parse(a)),i.preventDefault(),i.stopPropagation()}})),this.onblur(this._contentDomNode.domNode,()=>{this.hide()}),this._editor.addOverlayWidget(this)}dispose(){this._editor.removeOverlayWidget(this),super.dispose()}getId(){return gm.ID}getDomNode(){return this._domNode.domNode}getPosition(){return{preference:null}}show(){this._isVisible||(this._isVisible=!0,this._isVisibleKey.set(!0),this._layout(),this._domNode.setDisplay("block"),this._domNode.setAttribute("aria-hidden","false"),this._contentDomNode.domNode.tabIndex=0,this._buildContent(),this._contentDomNode.domNode.focus())}_descriptionForCommand(e,t,r){let n=this._keybindingService.lookupKeybinding(e);return n?zr(t,n.getAriaLabel()):zr(r,e)}_buildContent(){let e=this._editor.getOptions(),t=this._editor.getSelections(),r=0;if(t){let s=this._editor.getModel();s&&t.forEach(l=>{r+=s.getValueLengthInRange(l)})}let n=qN(t,r);e.get(54)?e.get(81)?n+=_t.readonlyDiffEditor:n+=_t.editableDiffEditor:e.get(81)?n+=_t.readonlyEditor:n+=_t.editableEditor;let i=yr?_t.changeConfigToOnMac:_t.changeConfigToOnWinLinux;switch(e.get(2)){case 0:n+=`

 - `+i;break;case 2:n+=`

 - `+_t.auto_on;break;case 1:n+=`

 - `+_t.auto_off,n+=" "+i;break}e.get(130)?n+=`

 - `+this._descriptionForCommand(ja.ID,_t.tabFocusModeOnMsg,_t.tabFocusModeOnMsgNoKb):n+=`

 - `+this._descriptionForCommand(ja.ID,_t.tabFocusModeOffMsg,_t.tabFocusModeOffMsgNoKb);let a=yr?_t.openDocMac:_t.openDocWinLinux;n+=`

 - `+a,n+=`

`+_t.outroMsg,this._contentDomNode.domNode.appendChild(lS(n)),this._contentDomNode.domNode.setAttribute("aria-label",n)}hide(){!this._isVisible||(this._isVisible=!1,this._isVisibleKey.reset(),this._domNode.setDisplay("none"),this._domNode.setAttribute("aria-hidden","true"),this._contentDomNode.domNode.tabIndex=-1,Tr(this._contentDomNode.domNode),this._editor.focus())}_layout(){let e=this._editor.getLayoutInfo(),t=Math.max(5,Math.min(gm.WIDTH,e.width-40)),r=Math.max(5,Math.min(gm.HEIGHT,e.height-40));this._domNode.setWidth(t),this._domNode.setHeight(r);let n=Math.round((e.height-r)/2);this._domNode.setTop(n);let i=Math.round((e.width-t)/2);this._domNode.setLeft(i)}};El.ID="editor.contrib.accessibilityHelpWidget";El.WIDTH=500;El.HEIGHT=300;El=tL([hm(1,re),hm(2,at),hm(3,yt)],El);var iL=class extends M{constructor(){super({id:"editor.action.showAccessibilityHelp",label:_t.showAccessibilityHelpAction,alias:"Show Accessibility Help",precondition:void 0,kbOpts:{primary:571,weight:100,linux:{primary:1595,secondary:[571]}}})}run(e,t){let r=ts.get(t);r&&r.show()}};Q(ts.ID,ts);D(iL);var JN=dt.bindToContribution(ts.get);K(new JN({id:"closeAccessibilityHelp",precondition:rL,handler:o=>o.hide(),kbOpts:{weight:100+100,kbExpr:v.focus,primary:9,secondary:[1033]}}));ke((o,e)=>{let t=o.getColor(dn);t&&e.addRule(`.monaco-editor .accessibilityHelpWidget { background-color: ${t}; }`);let r=o.getColor(Cs);r&&e.addRule(`.monaco-editor .accessibilityHelpWidget { color: ${r}; }`);let n=o.getColor(ga);n&&e.addRule(`.monaco-editor .accessibilityHelpWidget { box-shadow: 0 2px 8px ${n}; }`);let i=o.getColor(cn);i&&e.addRule(`.monaco-editor .accessibilityHelpWidget { border: 2px solid ${i}; }`)})});var oL=Ml(()=>{});var dL=Xa(qd=>{oL();Pe();$n();W();pe();Re();JL();an();gS();mt();Oe();Sa();Tb();var XN=qd&&qd.__decorate||function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},sL=qd&&qd.__param||function(o,e){return function(t,r){e(t,r,o)}},Tl=class lL extends F{constructor(e,t,r){super();this._editor=e,this._languageService=r,this._widget=null,this._register(this._editor.onDidChangeModel(n=>this.stop())),this._register(this._editor.onDidChangeModelLanguage(n=>this.stop())),this._register(bs.onDidChange(n=>this.stop())),this._register(this._editor.onKeyUp(n=>n.keyCode===9&&this.stop()))}static get(e){return e.getContribution(lL.ID)}dispose(){this.stop(),super.dispose()}launch(){this._widget||!this._editor.hasModel()||(this._widget=new Jd(this._editor,this._languageService))}stop(){this._widget&&(this._widget.dispose(),this._widget=null)}};Tl.ID="editor.contrib.inspectTokens";Tl=XN([sL(1,Ep),sL(2,gt)],Tl);var cL=class extends M{constructor(){super({id:"editor.action.inspectTokens",label:B1.inspectTokensAction,alias:"Developer: Inspect Tokens",precondition:void 0})}run(e,t){let r=Tl.get(t);r&&r.launch()}};function YN(o){let e="";for(let t=0,r=o.length;t<r;t++){let n=o.charCodeAt(t);switch(n){case 9:e+="\u2192";break;case 32:e+="\xB7";break;default:e+=String.fromCharCode(n)}}return e}function $N(o,e){let t=bs.get(e);if(t)return t;let r=o.encodeLanguageId(e);return{getInitialState:()=>$v,tokenize:(n,i,a)=>Qv(e,a),tokenizeEncoded:(n,i,a)=>Zv(r,a)}}var Jd=class extends F{constructor(e,t){super();this.allowEditorOverflow=!0,this._editor=e,this._languageService=t,this._model=this._editor.getModel(),this._domNode=document.createElement("div"),this._domNode.className="tokens-inspect-widget",this._tokenizationSupport=$N(this._languageService.languageIdCodec,this._model.getLanguageId()),this._compute(this._editor.getPosition()),this._register(this._editor.onDidChangeCursorPosition(r=>this._compute(this._editor.getPosition()))),this._editor.addContentWidget(this)}dispose(){this._editor.removeContentWidget(this),super.dispose()}getId(){return Jd._ID}_compute(e){let t=this._getTokensAtLine(e.lineNumber),r=0;for(let l=t.tokens1.length-1;l>=0;l--){let d=t.tokens1[l];if(e.column-1>=d.offset){r=l;break}}let n=0;for(let l=t.tokens2.length>>>1;l>=0;l--)if(e.column-1>=t.tokens2[l<<1]){n=l;break}let i=this._model.getLineContent(e.lineNumber),a="";if(r<t.tokens1.length){let l=t.tokens1[r].offset,d=r+1<t.tokens1.length?t.tokens1[r+1].offset:i.length;a=i.substring(l,d)}io(this._domNode,V("h2.tm-token",void 0,YN(a),V("span.tm-token-length",void 0,`${a.length} ${a.length===1?"char":"chars"}`))),B(this._domNode,V("hr.tokens-inspect-separator",{style:"clear:both"}));let s=(n<<1)+1<t.tokens2.length?this._decodeMetadata(t.tokens2[(n<<1)+1]):null;B(this._domNode,V("table.tm-metadata-table",void 0,V("tbody",void 0,V("tr",void 0,V("td.tm-metadata-key",void 0,"language"),V("td.tm-metadata-value",void 0,`${s?s.languageId:"-?-"}`)),V("tr",void 0,V("td.tm-metadata-key",void 0,"token type"),V("td.tm-metadata-value",void 0,`${s?this._tokenTypeToString(s.tokenType):"-?-"}`)),V("tr",void 0,V("td.tm-metadata-key",void 0,"font style"),V("td.tm-metadata-value",void 0,`${s?this._fontStyleToString(s.fontStyle):"-?-"}`)),V("tr",void 0,V("td.tm-metadata-key",void 0,"foreground"),V("td.tm-metadata-value",void 0,`${s?xe.Format.CSS.formatHex(s.foreground):"-?-"}`)),V("tr",void 0,V("td.tm-metadata-key",void 0,"background"),V("td.tm-metadata-value",void 0,`${s?xe.Format.CSS.formatHex(s.background):"-?-"}`))))),B(this._domNode,V("hr.tokens-inspect-separator")),r<t.tokens1.length&&B(this._domNode,V("span.tm-token-type",void 0,t.tokens1[r].type)),this._editor.layoutContentWidget(this)}_decodeMetadata(e){let t=bs.getColorMap(),r=gs.getLanguageId(e),n=gs.getTokenType(e),i=gs.getFontStyle(e),a=gs.getForeground(e),s=gs.getBackground(e);return{languageId:this._languageService.languageIdCodec.decodeLanguageId(r),tokenType:n,fontStyle:i,foreground:t[a],background:t[s]}}_tokenTypeToString(e){switch(e){case 0:return"Other";case 1:return"Comment";case 2:return"String";case 3:return"RegEx";default:return"??"}}_fontStyleToString(e){let t="";return e&1&&(t+="italic "),e&2&&(t+="bold "),e&4&&(t+="underline "),e&8&&(t+="strikethrough "),t.length===0&&(t="---"),t}_getTokensAtLine(e){let t=this._getStateBeforeLine(e),r=this._tokenizationSupport.tokenize(this._model.getLineContent(e),!0,t),n=this._tokenizationSupport.tokenizeEncoded(this._model.getLineContent(e),!0,t);return{startState:t,tokens1:r.tokens,tokens2:n.tokens,endState:r.endState}}_getStateBeforeLine(e){let t=this._tokenizationSupport.getInitialState();for(let r=1;r<e;r++)t=this._tokenizationSupport.tokenize(this._model.getLineContent(r),!0,t).endState;return t}getDomNode(){return this._domNode}getPosition(){return{position:this._editor.getPosition(),preference:[2,1]}}};Jd._ID="editor.contrib.inspectTokensWidget";Q(Tl.ID,Tl);D(cL);ke((o,e)=>{let t=o.getColor(ws);if(t){let i=o.type===Pu.HIGH_CONTRAST?2:1;e.addRule(`.monaco-editor .tokens-inspect-widget { border: ${i}px solid ${t}; }`),e.addRule(`.monaco-editor .tokens-inspect-widget .tokens-inspect-separator { background-color: ${t}; }`)}let r=o.getColor(xi);r&&e.addRule(`.monaco-editor .tokens-inspect-widget { background-color: ${r}; }`);let n=o.getColor(Ds);n&&e.addRule(`.monaco-editor .tokens-inspect-widget { color: ${n}; }`)})});var OL=Xa(()=>{});var Ky={};UL(Ky,{CancellationTokenSource:()=>_D,Emitter:()=>yD,KeyCode:()=>vD,KeyMod:()=>bD,MarkerSeverity:()=>CD,MarkerTag:()=>LD,Position:()=>SD,Range:()=>ED,Selection:()=>TD,SelectionDirection:()=>xD,Token:()=>DD,Uri:()=>yh,editor:()=>Lp,languages:()=>In});var wD=Object.defineProperty,AD=Object.getOwnPropertyDescriptor,ID=Object.getOwnPropertyNames,kD=Object.prototype.hasOwnProperty,ND=(o,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of ID(e))!kD.call(o,n)&&(t||n!=="default")&&wD(o,n,{get:()=>e[n],enumerable:!(r=AD(e,n))||r.enumerable});return o},vc={};ND(vc,Ta);var TS={},vh={},xS=class{constructor(o){vt(this,"_languageId");vt(this,"_loadingTriggered");vt(this,"_lazyLoadPromise");vt(this,"_lazyLoadPromiseResolve");vt(this,"_lazyLoadPromiseReject");this._languageId=o,this._loadingTriggered=!1,this._lazyLoadPromise=new Promise((e,t)=>{this._lazyLoadPromiseResolve=e,this._lazyLoadPromiseReject=t})}static getOrCreate(o){return vh[o]||(vh[o]=new xS(o)),vh[o]}load(){return this._loadingTriggered||(this._loadingTriggered=!0,TS[this._languageId].loader().then(o=>this._lazyLoadPromiseResolve(o),o=>this._lazyLoadPromiseReject(o))),this._lazyLoadPromise}};function w(o){let e=o.id;TS[e]=o,vc.languages.register(o);let t=xS.getOrCreate(e);vc.languages.registerTokensProviderFactory(e,{create:async()=>(await t.load()).language}),vc.languages.onLanguage(e,async()=>{let r=await t.load();vc.languages.setLanguageConfiguration(e,r.conf)})}w({id:"abap",extensions:[".abap"],aliases:["abap","ABAP"],loader:()=>import("./abap-S3OEKAT5.mjs")});w({id:"apex",extensions:[".cls"],aliases:["Apex","apex"],mimetypes:["text/x-apex-source","text/x-apex"],loader:()=>import("./apex-M4SFKP7M.mjs")});w({id:"azcli",extensions:[".azcli"],aliases:["Azure CLI","azcli"],loader:()=>import("./azcli-QLUNRANF.mjs")});w({id:"bat",extensions:[".bat",".cmd"],aliases:["Batch","bat"],loader:()=>import("./bat-YXSQRZ62.mjs")});w({id:"bicep",extensions:[".bicep"],aliases:["Bicep"],loader:()=>import("./bicep-4TR2SSK7.mjs")});w({id:"cameligo",extensions:[".mligo"],aliases:["Cameligo"],loader:()=>import("./cameligo-ULSDO4QJ.mjs")});w({id:"clojure",extensions:[".clj",".cljs",".cljc",".edn"],aliases:["clojure","Clojure"],loader:()=>import("./clojure-QJTY2HRK.mjs")});w({id:"coffeescript",extensions:[".coffee"],aliases:["CoffeeScript","coffeescript","coffee"],mimetypes:["text/x-coffeescript","text/coffeescript"],loader:()=>import("./coffee-UPWTESV5.mjs")});w({id:"c",extensions:[".c",".h"],aliases:["C","c"],loader:()=>import("./cpp-2K35256B.mjs")});w({id:"cpp",extensions:[".cpp",".cc",".cxx",".hpp",".hh",".hxx"],aliases:["C++","Cpp","cpp"],loader:()=>import("./cpp-2K35256B.mjs")});w({id:"csharp",extensions:[".cs",".csx",".cake"],aliases:["C#","csharp"],loader:()=>import("./csharp-AC3O5WV3.mjs")});w({id:"csp",extensions:[],aliases:["CSP","csp"],loader:()=>import("./csp-VQFYXPUC.mjs")});w({id:"css",extensions:[".css"],aliases:["CSS","css"],mimetypes:["text/css"],loader:()=>import("./css-QAEG5ZAB.mjs")});w({id:"dart",extensions:[".dart"],aliases:["Dart","dart"],mimetypes:["text/x-dart-source","text/x-dart"],loader:()=>import("./dart-RCCXJGRJ.mjs")});w({id:"dockerfile",extensions:[".dockerfile"],filenames:["Dockerfile"],aliases:["Dockerfile"],loader:()=>import("./dockerfile-QXXPI3Y3.mjs")});w({id:"ecl",extensions:[".ecl"],aliases:["ECL","Ecl","ecl"],loader:()=>import("./ecl-P36SUXQB.mjs")});w({id:"elixir",extensions:[".ex",".exs"],aliases:["Elixir","elixir","ex"],loader:()=>import("./elixir-W46NPTYJ.mjs")});w({id:"flow9",extensions:[".flow"],aliases:["Flow9","Flow","flow9","flow"],loader:()=>import("./flow9-REUG3SGK.mjs")});w({id:"fsharp",extensions:[".fs",".fsi",".ml",".mli",".fsx",".fsscript"],aliases:["F#","FSharp","fsharp"],loader:()=>import("./fsharp-SSCEE4CJ.mjs")});w({id:"freemarker2",extensions:[".ftl",".ftlh",".ftlx"],aliases:["FreeMarker2","Apache FreeMarker2"],loader:()=>import("./freemarker2-WZG4ZXKB.mjs").then(o=>o.TagAutoInterpolationDollar)});w({id:"freemarker2.tag-angle.interpolation-dollar",aliases:["FreeMarker2 (Angle/Dollar)","Apache FreeMarker2 (Angle/Dollar)"],loader:()=>import("./freemarker2-WZG4ZXKB.mjs").then(o=>o.TagAngleInterpolationDollar)});w({id:"freemarker2.tag-bracket.interpolation-dollar",aliases:["FreeMarker2 (Bracket/Dollar)","Apache FreeMarker2 (Bracket/Dollar)"],loader:()=>import("./freemarker2-WZG4ZXKB.mjs").then(o=>o.TagBracketInterpolationDollar)});w({id:"freemarker2.tag-angle.interpolation-bracket",aliases:["FreeMarker2 (Angle/Bracket)","Apache FreeMarker2 (Angle/Bracket)"],loader:()=>import("./freemarker2-WZG4ZXKB.mjs").then(o=>o.TagAngleInterpolationBracket)});w({id:"freemarker2.tag-bracket.interpolation-bracket",aliases:["FreeMarker2 (Bracket/Bracket)","Apache FreeMarker2 (Bracket/Bracket)"],loader:()=>import("./freemarker2-WZG4ZXKB.mjs").then(o=>o.TagBracketInterpolationBracket)});w({id:"freemarker2.tag-auto.interpolation-dollar",aliases:["FreeMarker2 (Auto/Dollar)","Apache FreeMarker2 (Auto/Dollar)"],loader:()=>import("./freemarker2-WZG4ZXKB.mjs").then(o=>o.TagAutoInterpolationDollar)});w({id:"freemarker2.tag-auto.interpolation-bracket",aliases:["FreeMarker2 (Auto/Bracket)","Apache FreeMarker2 (Auto/Bracket)"],loader:()=>import("./freemarker2-WZG4ZXKB.mjs").then(o=>o.TagAutoInterpolationBracket)});w({id:"go",extensions:[".go"],aliases:["Go"],loader:()=>import("./go-PWS6H4OD.mjs")});w({id:"graphql",extensions:[".graphql",".gql"],aliases:["GraphQL","graphql","gql"],mimetypes:["application/graphql"],loader:()=>import("./graphql-TSX2OS3D.mjs")});w({id:"handlebars",extensions:[".handlebars",".hbs"],aliases:["Handlebars","handlebars","hbs"],mimetypes:["text/x-handlebars-template"],loader:()=>import("./handlebars-46YCGFXN.mjs")});w({id:"hcl",extensions:[".tf",".tfvars",".hcl"],aliases:["Terraform","tf","HCL","hcl"],loader:()=>import("./hcl-M3SO6DY3.mjs")});w({id:"html",extensions:[".html",".htm",".shtml",".xhtml",".mdoc",".jsp",".asp",".aspx",".jshtm"],aliases:["HTML","htm","html","xhtml"],mimetypes:["text/html","text/x-jshtm","text/template","text/ng-template"],loader:()=>import("./html-V6KDFF2D.mjs")});w({id:"ini",extensions:[".ini",".properties",".gitconfig"],filenames:["config",".gitattributes",".gitconfig",".editorconfig"],aliases:["Ini","ini"],loader:()=>import("./ini-QJXKWBZM.mjs")});w({id:"java",extensions:[".java",".jav"],aliases:["Java","java"],mimetypes:["text/x-java-source","text/x-java"],loader:()=>import("./java-4SEZROBX.mjs")});w({id:"javascript",extensions:[".js",".es6",".jsx",".mjs",".cjs"],firstLine:"^#!.*\\bnode",filenames:["jakefile"],aliases:["JavaScript","javascript","js"],mimetypes:["text/javascript"],loader:()=>import("./javascript-35JQ3EYW.mjs")});w({id:"julia",extensions:[".jl"],aliases:["julia","Julia"],loader:()=>import("./julia-GGKS2LXE.mjs")});w({id:"kotlin",extensions:[".kt"],aliases:["Kotlin","kotlin"],mimetypes:["text/x-kotlin-source","text/x-kotlin"],loader:()=>import("./kotlin-LOW7LZAE.mjs")});w({id:"less",extensions:[".less"],aliases:["Less","less"],mimetypes:["text/x-less","text/less"],loader:()=>import("./less-XXO7EFEW.mjs")});w({id:"lexon",extensions:[".lex"],aliases:["Lexon"],loader:()=>import("./lexon-PA3AJXCQ.mjs")});w({id:"lua",extensions:[".lua"],aliases:["Lua","lua"],loader:()=>import("./lua-4XBMVTFQ.mjs")});w({id:"liquid",extensions:[".liquid",".html.liquid"],aliases:["Liquid","liquid"],mimetypes:["application/liquid"],loader:()=>import("./liquid-T2JE3EL3.mjs")});w({id:"m3",extensions:[".m3",".i3",".mg",".ig"],aliases:["Modula-3","Modula3","modula3","m3"],loader:()=>import("./m3-MLRMI7T4.mjs")});w({id:"markdown",extensions:[".md",".markdown",".mdown",".mkdn",".mkd",".mdwn",".mdtxt",".mdtext"],aliases:["Markdown","markdown"],loader:()=>import("./markdown-NNFXC7L3.mjs")});w({id:"mips",extensions:[".s"],aliases:["MIPS","MIPS-V"],mimetypes:["text/x-mips","text/mips","text/plaintext"],loader:()=>import("./mips-AKXZT5PS.mjs")});w({id:"msdax",extensions:[".dax",".msdax"],aliases:["DAX","MSDAX"],loader:()=>import("./msdax-AQ7GAPP3.mjs")});w({id:"mysql",extensions:[],aliases:["MySQL","mysql"],loader:()=>import("./mysql-UZJQDP7Q.mjs")});w({id:"objective-c",extensions:[".m"],aliases:["Objective-C"],loader:()=>import("./objective-c-VGB47DIN.mjs")});w({id:"pascal",extensions:[".pas",".p",".pp"],aliases:["Pascal","pas"],mimetypes:["text/x-pascal-source","text/x-pascal"],loader:()=>import("./pascal-EFJHYKJQ.mjs")});w({id:"pascaligo",extensions:[".ligo"],aliases:["Pascaligo","ligo"],loader:()=>import("./pascaligo-ZZEN6QCV.mjs")});w({id:"perl",extensions:[".pl"],aliases:["Perl","pl"],loader:()=>import("./perl-BMTJFPZ4.mjs")});w({id:"pgsql",extensions:[],aliases:["PostgreSQL","postgres","pg","postgre"],loader:()=>import("./pgsql-XOAP2GZY.mjs")});w({id:"php",extensions:[".php",".php4",".php5",".phtml",".ctp"],aliases:["PHP","php"],mimetypes:["application/x-php"],loader:()=>import("./php-PUW23O37.mjs")});w({id:"pla",extensions:[".pla"],loader:()=>import("./pla-HUMLE5VY.mjs")});w({id:"postiats",extensions:[".dats",".sats",".hats"],aliases:["ATS","ATS/Postiats"],loader:()=>import("./postiats-UGOSBUUD.mjs")});w({id:"powerquery",extensions:[".pq",".pqm"],aliases:["PQ","M","Power Query","Power Query M"],loader:()=>import("./powerquery-VFA43CSO.mjs")});w({id:"powershell",extensions:[".ps1",".psm1",".psd1"],aliases:["PowerShell","powershell","ps","ps1"],loader:()=>import("./powershell-WYHXLCWK.mjs")});w({id:"proto",extensions:[".proto"],aliases:["protobuf","Protocol Buffers"],loader:()=>import("./protobuf-GZWLIKTJ.mjs")});w({id:"pug",extensions:[".jade",".pug"],aliases:["Pug","Jade","jade"],loader:()=>import("./pug-YU3PWWQZ.mjs")});w({id:"python",extensions:[".py",".rpy",".pyw",".cpy",".gyp",".gypi"],aliases:["Python","py"],firstLine:"^#!/.*\\bpython[0-9.-]*\\b",loader:()=>import("./python-7AHLAHAX.mjs")});w({id:"qsharp",extensions:[".qs"],aliases:["Q#","qsharp"],loader:()=>import("./qsharp-YDMFLIZD.mjs")});w({id:"r",extensions:[".r",".rhistory",".rmd",".rprofile",".rt"],aliases:["R","r"],loader:()=>import("./r-4OCUVCRR.mjs")});w({id:"razor",extensions:[".cshtml"],aliases:["Razor","razor"],mimetypes:["text/x-cshtml"],loader:()=>import("./razor-KSN3W3ZH.mjs")});w({id:"redis",extensions:[".redis"],aliases:["redis"],loader:()=>import("./redis-3DJHM2EC.mjs")});w({id:"redshift",extensions:[],aliases:["Redshift","redshift"],loader:()=>import("./redshift-7YCFLHQI.mjs")});w({id:"restructuredtext",extensions:[".rst"],aliases:["reStructuredText","restructuredtext"],loader:()=>import("./restructuredtext-ELNII65C.mjs")});w({id:"ruby",extensions:[".rb",".rbx",".rjs",".gemspec",".pp"],filenames:["rakefile","Gemfile"],aliases:["Ruby","rb"],loader:()=>import("./ruby-MTJHOUON.mjs")});w({id:"rust",extensions:[".rs",".rlib"],aliases:["Rust","rust"],loader:()=>import("./rust-CJCP3XP2.mjs")});w({id:"sb",extensions:[".sb"],aliases:["Small Basic","sb"],loader:()=>import("./sb-MBCSCWTV.mjs")});w({id:"scala",extensions:[".scala",".sc",".sbt"],aliases:["Scala","scala","SBT","Sbt","sbt","Dotty","dotty"],mimetypes:["text/x-scala-source","text/x-scala","text/x-sbt","text/x-dotty"],loader:()=>import("./scala-VYDUWTUA.mjs")});w({id:"scheme",extensions:[".scm",".ss",".sch",".rkt"],aliases:["scheme","Scheme"],loader:()=>import("./scheme-6GNFPKM3.mjs")});w({id:"scss",extensions:[".scss"],aliases:["Sass","sass","scss"],mimetypes:["text/x-scss","text/scss"],loader:()=>import("./scss-BA6Q7IVC.mjs")});w({id:"shell",extensions:[".sh",".bash"],aliases:["Shell","sh"],loader:()=>import("./shell-MB2XWQLO.mjs")});w({id:"sol",extensions:[".sol"],aliases:["sol","solidity","Solidity"],loader:()=>import("./solidity-74L6U5ZX.mjs")});w({id:"aes",extensions:[".aes"],aliases:["aes","sophia","Sophia"],loader:()=>import("./sophia-EWJLA4NC.mjs")});w({id:"sparql",extensions:[".rq"],aliases:["sparql","SPARQL"],loader:()=>import("./sparql-GSTSTRCO.mjs")});w({id:"sql",extensions:[".sql"],aliases:["SQL"],loader:()=>import("./sql-T4G5FQEH.mjs")});w({id:"st",extensions:[".st",".iecst",".iecplc",".lc3lib"],aliases:["StructuredText","scl","stl"],loader:()=>import("./st-3B7CJ2H6.mjs")});w({id:"swift",aliases:["Swift","swift"],extensions:[".swift"],mimetypes:["text/swift"],loader:()=>import("./swift-63OOMEOS.mjs")});w({id:"systemverilog",extensions:[".sv",".svh"],aliases:["SV","sv","SystemVerilog","systemverilog"],loader:()=>import("./systemverilog-6HE57IU4.mjs")});w({id:"verilog",extensions:[".v",".vh"],aliases:["V","v","Verilog","verilog"],loader:()=>import("./systemverilog-6HE57IU4.mjs")});w({id:"tcl",extensions:[".tcl"],aliases:["tcl","Tcl","tcltk","TclTk","tcl/tk","Tcl/Tk"],loader:()=>import("./tcl-BGKPJKP2.mjs")});w({id:"twig",extensions:[".twig"],aliases:["Twig","twig"],mimetypes:["text/x-twig"],loader:()=>import("./twig-6JRIPINY.mjs")});w({id:"typescript",extensions:[".ts",".tsx"],aliases:["TypeScript","ts","typescript"],mimetypes:["text/typescript"],loader:()=>import("./typescript-THWDXOPY.mjs")});w({id:"vb",extensions:[".vb"],aliases:["Visual Basic","vb"],loader:()=>import("./vb-LMHZRR3N.mjs")});w({id:"xml",extensions:[".xml",".dtd",".ascx",".csproj",".config",".wxi",".wxl",".wxs",".xaml",".svg",".svgz",".opf",".xsl"],firstLine:"(\\<\\?xml.*)|(\\<svg)|(\\<\\!doctype\\s+svg)",aliases:["XML","xml"],mimetypes:["text/xml","application/xml","application/xaml+xml","application/xml-dtd"],loader:()=>import("./xml-AJKKMSGB.mjs")});w({id:"yaml",extensions:[".yaml",".yml"],aliases:["YAML","yaml","YML","yml"],mimetypes:["application/x-yaml","text/x-yaml"],loader:()=>import("./yaml-XXBQG5LP.mjs")});var RD=Object.defineProperty,PD=Object.getOwnPropertyDescriptor,MD=Object.getOwnPropertyNames,OD=Object.prototype.hasOwnProperty,FD=(o,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of MD(e))!OD.call(o,n)&&(t||n!=="default")&&RD(o,n,{get:()=>e[n],enumerable:!(r=PD(e,n))||r.enumerable});return o},Bs={};FD(Bs,Ta);var bh=class{constructor(o,e,t){vt(this,"_onDidChange",new Bs.Emitter);vt(this,"_options");vt(this,"_modeConfiguration");vt(this,"_languageId");this._languageId=o,this.setOptions(e),this.setModeConfiguration(t)}get onDidChange(){return this._onDidChange.event}get languageId(){return this._languageId}get modeConfiguration(){return this._modeConfiguration}get diagnosticsOptions(){return this.options}get options(){return this._options}setOptions(o){this._options=o||Object.create(null),this._onDidChange.fire(this)}setDiagnosticsOptions(o){this.setOptions(o)}setModeConfiguration(o){this._modeConfiguration=o||Object.create(null),this._onDidChange.fire(this)}},Sh={validate:!0,lint:{compatibleVendorPrefixes:"ignore",vendorPrefix:"warning",duplicateProperties:"warning",emptyRules:"warning",importStatement:"ignore",boxModel:"ignore",universalSelector:"ignore",zeroUnits:"ignore",fontFaceProperties:"warning",hexColorLength:"error",argumentsInColorFunction:"error",unknownProperties:"warning",ieHack:"ignore",unknownVendorSpecificProperties:"ignore",propertyIgnoredDueToDisplay:"warning",important:"ignore",float:"ignore",idSelector:"ignore"},data:{useDefaultDataProvider:!0}},Eh={completionItems:!0,hovers:!0,documentSymbols:!0,definitions:!0,references:!0,documentHighlights:!0,rename:!0,colors:!0,foldingRanges:!0,diagnostics:!0,selectionRanges:!0},CS=new bh("css",Sh,Eh),LS=new bh("scss",Sh,Eh),DS=new bh("less",Sh,Eh);Bs.languages.css={cssDefaults:CS,lessDefaults:DS,scssDefaults:LS};function Th(){return import("./cssMode-5IR7VHEX.mjs")}Bs.languages.onLanguage("less",()=>{Th().then(o=>o.setupMode(DS))});Bs.languages.onLanguage("scss",()=>{Th().then(o=>o.setupMode(LS))});Bs.languages.onLanguage("css",()=>{Th().then(o=>o.setupMode(CS))});var GD=Object.defineProperty,BD=Object.getOwnPropertyDescriptor,VD=Object.getOwnPropertyNames,HD=Object.prototype.hasOwnProperty,UD=(o,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of VD(e))!HD.call(o,n)&&(t||n!=="default")&&GD(o,n,{get:()=>e[n],enumerable:!(r=BD(e,n))||r.enumerable});return o},Dp={};UD(Dp,Ta);var WD=class{constructor(o,e,t){vt(this,"_onDidChange",new Dp.Emitter);vt(this,"_options");vt(this,"_modeConfiguration");vt(this,"_languageId");this._languageId=o,this.setOptions(e),this.setModeConfiguration(t)}get onDidChange(){return this._onDidChange.event}get languageId(){return this._languageId}get options(){return this._options}get modeConfiguration(){return this._modeConfiguration}setOptions(o){this._options=o||Object.create(null),this._onDidChange.fire(this)}setModeConfiguration(o){this._modeConfiguration=o||Object.create(null),this._onDidChange.fire(this)}},jD={tabSize:4,insertSpaces:!1,wrapLineLength:120,unformatted:'default": "a, abbr, acronym, b, bdo, big, br, button, cite, code, dfn, em, i, img, input, kbd, label, map, object, q, samp, select, small, span, strong, sub, sup, textarea, tt, var',contentUnformatted:"pre",indentInnerHtml:!1,preserveNewLines:!0,maxPreserveNewLines:void 0,indentHandlebars:!1,endWithNewline:!1,extraLiners:"head, body, /html",wrapAttributes:"auto"},wp={format:jD,suggest:{},data:{useDefaultDataProvider:!0}};function Ap(o){return{completionItems:!0,hovers:!0,documentSymbols:!0,links:!0,documentHighlights:!0,rename:!0,colors:!0,foldingRanges:!0,selectionRanges:!0,diagnostics:o===bc,documentFormattingEdits:o===bc,documentRangeFormattingEdits:o===bc}}var bc="html",wS="handlebars",AS="razor",IS=Ip(bc,wp,Ap(bc)),zD=IS.defaults,kS=Ip(wS,wp,Ap(wS)),KD=kS.defaults,NS=Ip(AS,wp,Ap(AS)),qD=NS.defaults;Dp.languages.html={htmlDefaults:zD,razorDefaults:qD,handlebarDefaults:KD,htmlLanguageService:IS,handlebarLanguageService:kS,razorLanguageService:NS,registerHTMLLanguageService:Ip};function JD(){return import("./htmlMode-KJ5MUOHM.mjs")}function Ip(o,e=wp,t=Ap(o)){let r=new WD(o,e,t),n,i=Dp.languages.onLanguage(o,async()=>{n=(await JD()).setupMode(r)});return{defaults:r,dispose(){i.dispose(),n==null||n.dispose(),n=void 0}}}var XD=Object.defineProperty,YD=Object.getOwnPropertyDescriptor,$D=Object.getOwnPropertyNames,QD=Object.prototype.hasOwnProperty,ZD=(o,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of $D(e))!QD.call(o,n)&&(t||n!=="default")&&XD(o,n,{get:()=>e[n],enumerable:!(r=YD(e,n))||r.enumerable});return o},Sc={};ZD(Sc,Ta);var ew=class{constructor(o,e,t){vt(this,"_onDidChange",new Sc.Emitter);vt(this,"_diagnosticsOptions");vt(this,"_modeConfiguration");vt(this,"_languageId");this._languageId=o,this.setDiagnosticsOptions(e),this.setModeConfiguration(t)}get onDidChange(){return this._onDidChange.event}get languageId(){return this._languageId}get modeConfiguration(){return this._modeConfiguration}get diagnosticsOptions(){return this._diagnosticsOptions}setDiagnosticsOptions(o){this._diagnosticsOptions=o||Object.create(null),this._onDidChange.fire(this)}setModeConfiguration(o){this._modeConfiguration=o||Object.create(null),this._onDidChange.fire(this)}},tw={validate:!0,allowComments:!0,schemas:[],enableSchemaRequest:!1,schemaRequest:"warning",schemaValidation:"warning",comments:"error",trailingCommas:"error"},rw={documentFormattingEdits:!0,documentRangeFormattingEdits:!0,completionItems:!0,hovers:!0,documentSymbols:!0,tokens:!0,colors:!0,foldingRanges:!0,diagnostics:!0,selectionRanges:!0},RS=new ew("json",tw,rw);Sc.languages.json={jsonDefaults:RS};function nw(){return import("./jsonMode-HYKVVNYK.mjs")}Sc.languages.register({id:"json",extensions:[".json",".bowerrc",".jshintrc",".jscsrc",".eslintrc",".babelrc",".har"],aliases:["JSON","json"],mimetypes:["application/json"]});Sc.languages.onLanguage("json",()=>{nw().then(o=>o.setupMode(RS))});An();gi();pe();kt();Be();Z();Le();var iw=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},aw=function(o,e){return function(t,r){e(t,r,o)}},kp=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},Np=new fe("selectionAnchorSet",!1),Ni=class PS{constructor(e,t){this.editor=e,this.selectionAnchorSetContextKey=Np.bindTo(t),this.modelChangeListener=e.onDidChangeModel(()=>this.selectionAnchorSetContextKey.reset())}static get(e){return e.getContribution(PS.ID)}setSelectionAnchor(){if(this.editor.hasModel()){let e=this.editor.getPosition(),t=this.decorationId?[this.decorationId]:[],r=this.editor.deltaDecorations(t,[{range:X.fromPositions(e,e),options:{description:"selection-anchor",stickiness:1,hoverMessage:new sr().appendText(p("selectionAnchor","Selection Anchor")),className:"selection-anchor"}}]);this.decorationId=r[0],this.selectionAnchorSetContextKey.set(!!this.decorationId),Tt(p("anchorSet","Anchor set at {0}:{1}",e.lineNumber,e.column))}}goToSelectionAnchor(){if(this.editor.hasModel()&&this.decorationId){let e=this.editor.getModel().getDecorationRange(this.decorationId);e&&this.editor.setPosition(e.getStartPosition())}}selectFromAnchorToCursor(){if(this.editor.hasModel()&&this.decorationId){let e=this.editor.getModel().getDecorationRange(this.decorationId);if(e){let t=this.editor.getPosition();this.editor.setSelection(X.fromPositions(e.getStartPosition(),t)),this.cancelSelectionAnchor()}}}cancelSelectionAnchor(){this.decorationId&&(this.editor.deltaDecorations([this.decorationId],[]),this.decorationId=void 0,this.selectionAnchorSetContextKey.set(!1))}dispose(){this.cancelSelectionAnchor(),this.modelChangeListener.dispose()}};Ni.ID="editor.contrib.selectionAnchorController";Ni=iw([aw(1,re)],Ni);var MS=class extends M{constructor(){super({id:"editor.action.setSelectionAnchor",label:p("setSelectionAnchor","Set Selection Anchor"),alias:"Set Selection Anchor",precondition:void 0,kbOpts:{kbExpr:v.editorTextFocus,primary:Xe(2089,2080),weight:100}})}run(e,t){var r;return kp(this,void 0,void 0,function*(){(r=Ni.get(t))===null||r===void 0||r.setSelectionAnchor()})}},OS=class extends M{constructor(){super({id:"editor.action.goToSelectionAnchor",label:p("goToSelectionAnchor","Go to Selection Anchor"),alias:"Go to Selection Anchor",precondition:Np})}run(e,t){var r;return kp(this,void 0,void 0,function*(){(r=Ni.get(t))===null||r===void 0||r.goToSelectionAnchor()})}},FS=class extends M{constructor(){super({id:"editor.action.selectFromAnchorToCursor",label:p("selectFromAnchorToCursor","Select from Anchor to Cursor"),alias:"Select from Anchor to Cursor",precondition:Np,kbOpts:{kbExpr:v.editorTextFocus,primary:Xe(2089,2089),weight:100}})}run(e,t){var r;return kp(this,void 0,void 0,function*(){(r=Ni.get(t))===null||r===void 0||r.selectFromAnchorToCursor()})}},GS=class extends M{constructor(){super({id:"editor.action.cancelSelectionAnchor",label:p("cancelSelectionAnchor","Cancel Selection Anchor"),alias:"Cancel Selection Anchor",precondition:Np,kbOpts:{kbExpr:v.editorTextFocus,primary:9,weight:100}})}run(e,t){var r;return kp(this,void 0,void 0,function*(){(r=Ni.get(t))===null||r===void 0||r.cancelSelectionAnchor()})}};Q(Ni.ID,Ni);D(MS);D(OS);D(FS);D(GS);we();W();pe();tt();ee();kt();Be();ds();jt();ep();Z();ar();mt();Oe();var ow=J("editorOverviewRuler.bracketMatchForeground",{dark:"#A0A0A0",light:"#A0A0A0",hc:"#A0A0A0"},p("overviewRulerBracketMatchForeground","Overview ruler marker color for matching brackets.")),BS=class extends M{constructor(){super({id:"editor.action.jumpToBracket",label:p("smartSelect.jumpBracket","Go to Bracket"),alias:"Go to Bracket",precondition:void 0,kbOpts:{kbExpr:v.editorTextFocus,primary:3160,weight:100}})}run(e,t){var r;(r=un.get(t))===null||r===void 0||r.jumpToBracket()}},VS=class extends M{constructor(){super({id:"editor.action.selectToBracket",label:p("smartSelect.selectToBracket","Select to Bracket"),alias:"Select to Bracket",precondition:void 0,description:{description:"Select to Bracket",args:[{name:"args",schema:{type:"object",properties:{selectBrackets:{type:"boolean",default:!0}}}}]}})}run(e,t,r){var n;let i=!0;r&&r.selectBrackets===!1&&(i=!1),(n=un.get(t))===null||n===void 0||n.selectToBracket(i)}},HS=class{constructor(e,t,r){this.position=e,this.brackets=t,this.options=r}},un=class extends F{constructor(e){super();this._editor=e,this._lastBracketsData=[],this._lastVersionId=0,this._decorations=[],this._updateBracketsSoon=this._register(new Ke(()=>this._updateBrackets(),50)),this._matchBrackets=this._editor.getOption(64),this._updateBracketsSoon.schedule(),this._register(e.onDidChangeCursorPosition(t=>{this._matchBrackets!=="never"&&this._updateBracketsSoon.schedule()})),this._register(e.onDidChangeModelContent(t=>{this._updateBracketsSoon.schedule()})),this._register(e.onDidChangeModel(t=>{this._lastBracketsData=[],this._decorations=[],this._updateBracketsSoon.schedule()})),this._register(e.onDidChangeModelLanguageConfiguration(t=>{this._lastBracketsData=[],this._updateBracketsSoon.schedule()})),this._register(e.onDidChangeConfiguration(t=>{t.hasChanged(64)&&(this._matchBrackets=this._editor.getOption(64),this._decorations=this._editor.deltaDecorations(this._decorations,[]),this._lastBracketsData=[],this._lastVersionId=0,this._updateBracketsSoon.schedule())})),this._register(e.onDidBlurEditorWidget(()=>{this._updateBracketsSoon.schedule()})),this._register(e.onDidFocusEditorWidget(()=>{this._updateBracketsSoon.schedule()}))}static get(e){return e.getContribution(un.ID)}jumpToBracket(){if(!this._editor.hasModel())return;let e=this._editor.getModel(),t=this._editor.getSelections().map(r=>{let n=r.getStartPosition(),i=e.bracketPairs.matchBracket(n),a=null;if(i)i[0].containsPosition(n)?a=i[1].getStartPosition():i[1].containsPosition(n)&&(a=i[0].getStartPosition());else{let s=e.bracketPairs.findEnclosingBrackets(n);if(s)a=s[0].getStartPosition();else{let l=e.bracketPairs.findNextBracket(n);l&&l.range&&(a=l.range.getStartPosition())}}return a?new X(a.lineNumber,a.column,a.lineNumber,a.column):new X(n.lineNumber,n.column,n.lineNumber,n.column)});this._editor.setSelections(t),this._editor.revealRange(t[0])}selectToBracket(e){if(!this._editor.hasModel())return;let t=this._editor.getModel(),r=[];this._editor.getSelections().forEach(n=>{let i=n.getStartPosition(),a=t.bracketPairs.matchBracket(i);if(!a&&(a=t.bracketPairs.findEnclosingBrackets(i),!a)){let d=t.bracketPairs.findNextBracket(i);d&&d.range&&(a=t.bracketPairs.matchBracket(d.range.getStartPosition()))}let s=null,l=null;if(a){a.sort(y.compareRangesUsingStarts);let[d,c]=a;if(s=e?d.getStartPosition():d.getEndPosition(),l=e?c.getEndPosition():c.getStartPosition(),c.containsPosition(i)){let u=s;s=l,l=u}}s&&l&&r.push(new X(s.lineNumber,s.column,l.lineNumber,l.column))}),r.length>0&&(this._editor.setSelections(r),this._editor.revealRange(r[0]))}_updateBrackets(){if(this._matchBrackets==="never")return;this._recomputeBrackets();let e=[],t=0;for(let r of this._lastBracketsData){let n=r.brackets;n&&(e[t++]={range:n[0],options:r.options},e[t++]={range:n[1],options:r.options})}this._decorations=this._editor.deltaDecorations(this._decorations,e)}_recomputeBrackets(){if(!this._editor.hasModel()||!this._editor.hasWidgetFocus()){this._lastBracketsData=[],this._lastVersionId=0;return}let e=this._editor.getSelections();if(e.length>100){this._lastBracketsData=[],this._lastVersionId=0;return}let t=this._editor.getModel(),r=t.getVersionId(),n=[];this._lastVersionId===r&&(n=this._lastBracketsData);let i=[],a=0;for(let u=0,f=e.length;u<f;u++){let m=e[u];m.isEmpty()&&(i[a++]=m.getStartPosition())}i.length>1&&i.sort(z.compare);let s=[],l=0,d=0,c=n.length;for(let u=0,f=i.length;u<f;u++){let m=i[u];for(;d<c&&n[d].position.isBefore(m);)d++;if(d<c&&n[d].position.equals(m))s[l++]=n[d];else{let g=t.bracketPairs.matchBracket(m),b=un._DECORATION_OPTIONS_WITH_OVERVIEW_RULER;!g&&this._matchBrackets==="always"&&(g=t.bracketPairs.findEnclosingBrackets(m,20),b=un._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER),s[l++]=new HS(m,g,b)}}this._lastBracketsData=s,this._lastVersionId=r}};un.ID="editor.contrib.bracketMatchingController";un._DECORATION_OPTIONS_WITH_OVERVIEW_RULER=Se.register({description:"bracket-match-overview",stickiness:1,className:"bracket-match",overviewRuler:{color:nt(ow),position:Nr.Center}});un._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER=Se.register({description:"bracket-match-no-overview",stickiness:1,className:"bracket-match"});Q(un.ID,un);D(VS);D(BS);ke((o,e)=>{let t=o.getColor(m1);t&&e.addRule(`.monaco-editor .bracket-match { background-color: ${t}; }`);let r=o.getColor(Zu);r&&e.addRule(`.monaco-editor .bracket-match { border: 1px solid ${r}; }`)});Gr.appendMenuItem(oe.MenubarGoMenu,{group:"5_infile_nav",command:{id:"editor.action.jumpToBracket",title:p({key:"miGoToBracket",comment:["&& denotes a mnemonic"]},"Go to &&Bracket")},order:2});pe();Be();ee();kt();var xh=class{constructor(e,t){this._selection=e,this._isMovingLeft=t}getEditOperations(e,t){if(this._selection.startLineNumber!==this._selection.endLineNumber||this._selection.isEmpty())return;let r=this._selection.startLineNumber,n=this._selection.startColumn,i=this._selection.endColumn;if(!(this._isMovingLeft&&n===1)&&!(!this._isMovingLeft&&i===e.getLineMaxColumn(r)))if(this._isMovingLeft){let a=new y(r,n-1,r,n),s=e.getValueInRange(a);t.addEditOperation(a,null),t.addEditOperation(new y(r,i,r,i),s)}else{let a=new y(r,i,r,i+1),s=e.getValueInRange(a);t.addEditOperation(a,null),t.addEditOperation(new y(r,n,r,n),s)}}computeCursorState(e,t){return this._isMovingLeft?new X(this._selection.startLineNumber,this._selection.startColumn-1,this._selection.endLineNumber,this._selection.endColumn-1):new X(this._selection.startLineNumber,this._selection.startColumn+1,this._selection.endLineNumber,this._selection.endColumn+1)}};Z();var Ch=class extends M{constructor(e,t){super(t);this.left=e}run(e,t){if(!t.hasModel())return;let r=[],n=t.getSelections();for(let i of n)r.push(new xh(i,this.left));t.pushUndoStop(),t.executeCommands(this.id,r),t.pushUndoStop()}},US=class extends Ch{constructor(){super(!0,{id:"editor.action.moveCarretLeftAction",label:p("caret.moveLeft","Move Selected Text Left"),alias:"Move Selected Text Left",precondition:v.writable})}},WS=class extends Ch{constructor(){super(!1,{id:"editor.action.moveCarretRightAction",label:p("caret.moveRight","Move Selected Text Right"),alias:"Move Selected Text Right",precondition:v.writable})}};D(US);D(WS);pe();ee();Be();Z();var jS=class extends M{constructor(){super({id:"editor.action.transposeLetters",label:p("transposeLetters.label","Transpose Letters"),alias:"Transpose Letters",precondition:v.writable,kbOpts:{kbExpr:v.textInputFocus,primary:0,mac:{primary:306},weight:100}})}run(e,t){if(!t.hasModel())return;let r=t.getModel(),n=[],i=t.getSelections();for(let a of i){if(!a.isEmpty())continue;let s=a.startLineNumber,l=a.startColumn,d=r.getLineMaxColumn(s);if(s===1&&(l===1||l===2&&d===2))continue;let c=l===d?a.getPosition():ap.rightPosition(r,a.getPosition().lineNumber,a.getPosition().column),u=ap.leftPosition(r,c),f=ap.leftPosition(r,u),m=r.getValueInRange(y.fromPositions(f,u)),g=r.getValueInRange(y.fromPositions(u,c)),b=y.fromPositions(f,c);n.push(new Ci(b,g+m))}n.length>0&&(t.pushUndoStop(),t.executeCommands(this.id,n),t.pushUndoStop())}};D(jS);ql();Ir();pe();Er();Be();Z();ar();var sw=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},go="9_cutcopypaste",lw=oa||document.queryCommandSupported("cut"),zS=oa||document.queryCommandSupported("copy"),cw=typeof navigator.clipboard=="undefined"||Jv?document.queryCommandSupported("paste"):!0;function Dh(o){return o.register(),o}var dw=lw?Dh(new Ou({id:"editor.action.clipboardCutAction",precondition:void 0,kbOpts:oa?{primary:2102,win:{primary:2102,secondary:[1044]},weight:100}:void 0,menuOpts:[{menuId:oe.MenubarEditMenu,group:"2_ccp",title:p({key:"miCut",comment:["&& denotes a mnemonic"]},"Cu&&t"),order:1},{menuId:oe.EditorContext,group:go,title:p("actions.clipboard.cutLabel","Cut"),when:v.writable,order:1},{menuId:oe.CommandPalette,group:"",title:p("actions.clipboard.cutLabel","Cut"),order:1},{menuId:oe.SimpleEditorContext,group:go,title:p("actions.clipboard.cutLabel","Cut"),when:v.writable,order:1}]})):void 0,uw=zS?Dh(new Ou({id:"editor.action.clipboardCopyAction",precondition:void 0,kbOpts:oa?{primary:2081,win:{primary:2081,secondary:[2067]},weight:100}:void 0,menuOpts:[{menuId:oe.MenubarEditMenu,group:"2_ccp",title:p({key:"miCopy",comment:["&& denotes a mnemonic"]},"&&Copy"),order:2},{menuId:oe.EditorContext,group:go,title:p("actions.clipboard.copyLabel","Copy"),order:2},{menuId:oe.CommandPalette,group:"",title:p("actions.clipboard.copyLabel","Copy"),order:1},{menuId:oe.SimpleEditorContext,group:go,title:p("actions.clipboard.copyLabel","Copy"),order:2}]})):void 0;Gr.appendMenuItem(oe.MenubarEditMenu,{submenu:oe.MenubarCopy,title:{value:p("copy as","Copy As"),original:"Copy As"},group:"2_ccp",order:3});Gr.appendMenuItem(oe.EditorContext,{submenu:oe.EditorContextCopy,title:{value:p("copy as","Copy As"),original:"Copy As"},group:go,order:3});var Lh=cw?Dh(new Ou({id:"editor.action.clipboardPasteAction",precondition:void 0,kbOpts:oa?{primary:2100,win:{primary:2100,secondary:[1043]},linux:{primary:2100,secondary:[1043]},weight:100}:void 0,menuOpts:[{menuId:oe.MenubarEditMenu,group:"2_ccp",title:p({key:"miPaste",comment:["&& denotes a mnemonic"]},"&&Paste"),order:4},{menuId:oe.EditorContext,group:go,title:p("actions.clipboard.pasteLabel","Paste"),when:v.writable,order:4},{menuId:oe.CommandPalette,group:"",title:p("actions.clipboard.pasteLabel","Paste"),order:1},{menuId:oe.SimpleEditorContext,group:go,title:p("actions.clipboard.pasteLabel","Paste"),when:v.writable,order:4}]})):void 0,KS=class extends M{constructor(){super({id:"editor.action.clipboardCopyWithSyntaxHighlightingAction",label:p("actions.clipboard.copyWithSyntaxHighlightingLabel","Copy With Syntax Highlighting"),alias:"Copy With Syntax Highlighting",precondition:void 0,kbOpts:{kbExpr:v.textInputFocus,primary:0,weight:100}})}run(e,t){!t.hasModel()||!t.getOption(32)&&t.getSelection().isEmpty()||(eh.forceCopyWithSyntaxHighlighting=!0,t.focus(),document.execCommand("copy"),eh.forceCopyWithSyntaxHighlighting=!1)}};function qS(o,e){!o||(o.addImplementation(1e4,"code-editor",(t,r)=>{let n=t.get(Ue).getFocusedCodeEditor();if(n&&n.hasTextFocus()){let i=n.getOption(32),a=n.getSelection();return a&&a.isEmpty()&&!i||document.execCommand(e),!0}return!1}),o.addImplementation(0,"generic-dom",(t,r)=>(document.execCommand(e),!0)))}qS(dw,"cut");qS(uw,"copy");Lh&&(Lh.addImplementation(1e4,"code-editor",(o,e)=>{let t=o.get(Ue),r=o.get(po),n=t.getFocusedCodeEditor();return n&&n.hasTextFocus()?!document.execCommand("paste")&&ou?(()=>sw(void 0,void 0,void 0,function*(){let a=yield r.readText();if(a!==""){let s=f1.INSTANCE.get(a),l=!1,d=null,c=null;s&&(l=n.getOption(32)&&!!s.isFromEmptySelection,d=typeof s.multicursorText!="undefined"?s.multicursorText:null,c=s.mode),n.trigger("keyboard","paste",{text:a,pasteOnNewLine:l,multicursorText:d,mode:c})}}))():!0:!1}),Lh.addImplementation(0,"generic-dom",(o,e)=>(document.execCommand("paste"),!0)));zS&&D(KS);pe();pt();wm();W();Ye();pe();Be();bt();pt();Ae();W();Xt();yc();ee();kt();Re();da();xt();fo();var ge=class{constructor(e){this.value=e}equals(e){return this.value===e.value}contains(e){return this.equals(e)||this.value===""||e.value.startsWith(this.value+ge.sep)}intersects(e){return this.contains(e)||e.contains(this)}append(e){return new ge(this.value+ge.sep+e)}};ge.sep=".";ge.None=new ge("@@none@@");ge.Empty=new ge("");ge.QuickFix=new ge("quickfix");ge.Refactor=new ge("refactor");ge.Source=new ge("source");ge.SourceOrganizeImports=ge.Source.append("organizeImports");ge.SourceFixAll=ge.Source.append("fixAll");function JS(o,e){return!(o.include&&!o.include.intersects(e)||o.excludes&&o.excludes.some(t=>YS(e,t,o.include))||!o.includeSourceActions&&ge.Source.contains(e))}function XS(o,e){let t=e.kind?new ge(e.kind):void 0;return!(o.include&&(!t||!o.include.contains(t))||o.excludes&&t&&o.excludes.some(r=>YS(t,r,o.include))||!o.includeSourceActions&&t&&ge.Source.contains(t)||o.onlyIncludePreferredActions&&!e.isPreferred)}function YS(o,e,t){return!(!e.contains(o)||t&&e.contains(t))}var Xr=class{constructor(e,t,r){this.kind=e,this.apply=t,this.preferred=r}static fromUser(e,t){return!e||typeof e!="object"?new Xr(t.kind,t.apply,!1):new Xr(Xr.getKindFromUser(e,t.kind),Xr.getApplyFromUser(e,t.apply),Xr.getPreferredUser(e))}static getApplyFromUser(e,t){switch(typeof e.apply=="string"?e.apply.toLowerCase():""){case"first":return"first";case"never":return"never";case"ifsingle":return"ifSingle";default:return t}}static getKindFromUser(e,t){return typeof e.kind=="string"?new ge(e.kind):t}static getPreferredUser(e){return typeof e.preferred=="boolean"?e.preferred:!1}};var wh=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},Rp="editor.action.codeAction",Pp="editor.action.refactor",Mp="editor.action.sourceAction",Ec="editor.action.organizeImports",Tc="editor.action.fixAll",Op=class{constructor(e,t){this.action=e,this.provider=t}resolve(e){var t;return wh(this,void 0,void 0,function*(){if(((t=this.provider)===null||t===void 0?void 0:t.resolveCodeAction)&&!this.action.edit){let r;try{r=yield this.provider.resolveCodeAction(this.action,e)}catch(n){ze(n)}r&&(this.action.edit=r.edit)}return this})}},Fp=class extends F{constructor(e,t,r){super();this.documentation=t,this._register(r),this.allActions=[...e].sort(Fp.codeActionsComparator),this.validActions=this.allActions.filter(({action:n})=>!n.disabled)}static codeActionsComparator({action:e},{action:t}){return e.isPreferred&&!t.isPreferred?-1:!e.isPreferred&&t.isPreferred?1:It(e.diagnostics)?It(t.diagnostics)?e.diagnostics[0].message.localeCompare(t.diagnostics[0].message):-1:It(t.diagnostics)?1:0}get hasAutoFix(){return this.validActions.some(({action:e})=>!!e.kind&&ge.QuickFix.contains(new ge(e.kind))&&!!e.isPreferred)}},$S={actions:[],documentation:void 0};function xc(o,e,t,r,n){var i;let a=t.filter||{},s={only:(i=a.include)===null||i===void 0?void 0:i.value,trigger:t.type},l=new _S(o,n),d=pw(o,a),c=new P,u=d.map(m=>wh(this,void 0,void 0,function*(){try{r.report(m);let g=yield m.provideCodeActions(o,e,s,l.token);if(g&&c.add(g),l.token.isCancellationRequested)return $S;let b=((g==null?void 0:g.actions)||[]).filter(x=>x&&XS(a,x)),T=fw(m,b,a.include);return{actions:b.map(x=>new Op(x,m)),documentation:T}}catch(g){if(jn(g))throw g;return ze(g),$S}})),f=Kn.onDidChange(()=>{let m=Kn.all(o);$a(m,d)||l.cancel()});return Promise.all(u).then(m=>{let g=du(m.map(T=>T.actions)),b=Un(m.map(T=>T.documentation));return new Fp(g,b,c)}).finally(()=>{f.dispose(),l.dispose()})}function pw(o,e){return Kn.all(o).filter(t=>t.providedCodeActionKinds?t.providedCodeActionKinds.some(r=>JS(e,new ge(r))):!0)}function fw(o,e,t){if(!o.documentation)return;let r=o.documentation.map(n=>({kind:new ge(n.kind),command:n.command}));if(t){let n;for(let i of r)i.kind.contains(t)&&(n?n.kind.contains(i.kind)&&(n=i):n=i);if(n)return n==null?void 0:n.command}for(let n of e)if(!!n.kind){for(let i of r)if(i.kind.contains(new ge(n.kind)))return i.command}}Ie.registerCommand("_executeCodeActionProvider",function(o,e,t,r,n){return wh(this,void 0,void 0,function*(){if(!(e instanceof Te))throw xn();let i=o.get(Yt).getModel(e);if(!i)throw xn();let a=X.isISelection(t)?X.liftSelection(t):y.isIRange(t)?i.validateRange(t):void 0;if(!a)throw xn();let s=typeof r=="string"?new ge(r):void 0,l=yield xc(i,a,{type:1,filter:{includeSourceActions:!0,include:s}},Qn.None,he.None),d=[],c=Math.min(l.validActions.length,typeof n=="number"?n:0);for(let u=0;u<c;u++)d.push(l.validActions[u].resolve(he.None));try{return yield Promise.all(d),l.validActions.map(u=>u.action)}finally{setTimeout(()=>l.dispose(),100)}})});Ae();wm();W();An();we();W();pe();ee();Z();Le();var mw=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},hw=function(o,e){return function(t,r){e(t,r,o)}},Zt=class Ah{constructor(e,t){this._messageWidget=new et,this._messageListeners=new P,this._editor=e,this._visible=Ah.MESSAGE_VISIBLE.bindTo(t),this._editorListener=this._editor.onDidAttemptReadOnlyEdit(()=>this._onDidAttemptReadOnlyEdit())}static get(e){return e.getContribution(Ah.ID)}dispose(){this._editorListener.dispose(),this._messageListeners.dispose(),this._messageWidget.dispose(),this._visible.reset()}showMessage(e,t){Tt(e),this._visible.set(!0),this._messageWidget.clear(),this._messageListeners.clear(),this._messageWidget.value=new Ih(this._editor,t,e),this._messageListeners.add(this._editor.onDidBlurEditorText(()=>this.closeMessage())),this._messageListeners.add(this._editor.onDidChangeCursorPosition(()=>this.closeMessage())),this._messageListeners.add(this._editor.onDidDispose(()=>this.closeMessage())),this._messageListeners.add(this._editor.onDidChangeModel(()=>this.closeMessage())),this._messageListeners.add(new Rr(()=>this.closeMessage(),3e3));let r;this._messageListeners.add(this._editor.onMouseMove(n=>{!n.target.position||(r?r.containsPosition(n.target.position)||this.closeMessage():r=new y(t.lineNumber-3,1,n.target.position.lineNumber+3,1))}))}closeMessage(){this._visible.reset(),this._messageListeners.clear(),this._messageWidget.value&&this._messageListeners.add(Ih.fadeOut(this._messageWidget.value))}_onDidAttemptReadOnlyEdit(){this._editor.hasModel()&&this.showMessage(p("editor.readonly","Cannot edit in read-only editor"),this._editor.getPosition())}};Zt.ID="editor.contrib.messageController";Zt.MESSAGE_VISIBLE=new fe("messageVisible",!1,p("messageVisible","Whether the editor is currently showing an inline message"));Zt=mw([hw(1,re)],Zt);var gw=dt.bindToContribution(Zt.get);K(new gw({id:"leaveEditorMessage",precondition:Zt.MESSAGE_VISIBLE,handler:o=>o.closeMessage(),kbOpts:{weight:100+30,primary:9}}));var Ih=class{constructor(e,{lineNumber:t,column:r},n){this.allowEditorOverflow=!0,this.suppressMouseDown=!1,this._editor=e,this._editor.revealLinesInCenterIfOutsideViewport(t,t,0),this._position={lineNumber:t,column:r-1},this._domNode=document.createElement("div"),this._domNode.classList.add("monaco-editor-overlaymessage");let i=document.createElement("div");i.classList.add("anchor","top"),this._domNode.appendChild(i);let a=document.createElement("div");a.classList.add("message"),a.textContent=n,this._domNode.appendChild(a);let s=document.createElement("div");s.classList.add("anchor","below"),this._domNode.appendChild(s),this._editor.addContentWidget(this),this._domNode.classList.add("fadeIn")}static fadeOut(e){let t,r=()=>{e.dispose(),clearTimeout(t),e.getDomNode().removeEventListener("animationend",r)};return t=setTimeout(r,110),e.getDomNode().addEventListener("animationend",r),e.getDomNode().classList.add("fadeOut"),{dispose:r}}dispose(){this._editor.removeContentWidget(this)}getId(){return"messageoverlay"}getDomNode(){return this._domNode}getPosition(){return{position:this._position,preference:[1,2]}}afterRender(e){this._domNode.classList.toggle("below",e===2)}};Q(Zt.ID,Zt);He();Pe();ao();Ae();wm();W();tt();Re();qr();var _w=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},QS=function(o,e){return function(t,r){e(t,r,o)}},yw=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},kh=class extends Ei{constructor(e,t){super(e.command?e.command.id:e.title,vw(e.title),void 0,!e.disabled,t);this.action=e}};function vw(o){return o.replace(/\r\n|\r|\n/g," ")}var Gp=class extends F{constructor(e,t,r,n){super();this._editor=e,this._delegate=t,this._contextMenuService=r,this._visible=!1,this._showingActions=this._register(new et),this._keybindingResolver=new Cc({getKeybindings:()=>n.getKeybindings()})}get isVisible(){return this._visible}show(e,t,r,n){return yw(this,void 0,void 0,function*(){let i=n.includeDisabledActions?t.allActions:t.validActions;if(!i.length){this._visible=!1;return}if(!this._editor.getDomNode())throw this._visible=!1,gu();this._visible=!0,this._showingActions.value=t;let a=this.getMenuActions(e,i,t.documentation),s=z.isIPosition(r)?this._toCoords(r):r||{x:0,y:0},l=this._keybindingResolver.getResolver(),d=this._editor.getOption(115);this._contextMenuService.showContextMenu({domForShadowRoot:d?this._editor.getDomNode():void 0,getAnchor:()=>s,getActions:()=>a,onHide:()=>{this._visible=!1,this._editor.focus()},autoSelectFirstItem:!0,getKeyBinding:c=>c instanceof kh?l(c.action):void 0})})}getMenuActions(e,t,r){var n,i;let a=c=>new kh(c.action,()=>this._delegate.onSelectCodeAction(c)),s=t.map(a),l=[...r],d=this._editor.getModel();if(d&&s.length)for(let c of Kn.all(d))c._getAdditionalMenuItems&&l.push(...c._getAdditionalMenuItems({trigger:e.type,only:(i=(n=e.filter)===null||n===void 0?void 0:n.include)===null||i===void 0?void 0:i.value},t.map(u=>u.action)));return l.length&&s.push(new Jn,...l.map(c=>a(new Op({title:c.title,command:c},void 0)))),s}_toCoords(e){if(!this._editor.hasModel())return{x:0,y:0};this._editor.revealPosition(e,1),this._editor.render();let t=this._editor.getScrolledVisiblePosition(e),r=nr(this._editor.getDomNode()),n=r.left+t.left,i=r.top+t.top+t.height;return{x:n,y:i}}};Gp=_w([QS(2,Ai),QS(3,at)],Gp);var Cc=class{constructor(e){this._keybindingProvider=e}getResolver(){let e=new Za(()=>this._keybindingProvider.getKeybindings().filter(t=>Cc.codeActionCommands.indexOf(t.command)>=0).filter(t=>t.resolvedKeybinding).map(t=>{let r=t.commandArgs;return t.command===Ec?r={kind:ge.SourceOrganizeImports.value}:t.command===Tc&&(r={kind:ge.SourceFixAll.value}),Object.assign({resolvedKeybinding:t.resolvedKeybinding},Xr.fromUser(r,{kind:ge.None,apply:"never"}))}));return t=>{if(t.kind){let r=this.bestKeybindingForCodeAction(t,e.getValue());return r==null?void 0:r.resolvedKeybinding}}}bestKeybindingForCodeAction(e,t){if(!e.kind)return;let r=new ge(e.kind);return t.filter(n=>n.kind.contains(r)).filter(n=>n.preferred?e.isPreferred:!0).reduceRight((n,i)=>n?n.kind.contains(i.kind)?i:n:i,void 0)}};Cc.codeActionCommands=[Pp,Rp,Mp,Ec,Tc];Pe();$m();Sr();Ne();W();D1();Z();qr();mt();Oe();var bw=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Sw=function(o,e){return function(t,r){e(t,r,o)}},Lc;(function(o){o.Hidden={type:0};class e{constructor(r,n,i,a){this.actions=r,this.trigger=n,this.editorPosition=i,this.widgetPosition=a,this.type=1}}o.Showing=e})(Lc||(Lc={}));var Dc=class ZS extends F{constructor(e,t,r,n){super();this._editor=e,this._quickFixActionId=t,this._preferredFixActionId=r,this._keybindingService=n,this._onClick=this._register(new j),this.onClick=this._onClick.event,this._state=Lc.Hidden,this._domNode=document.createElement("div"),this._domNode.className=q.lightBulb.classNames,this._editor.addContentWidget(this),this._register(this._editor.onDidChangeModelContent(i=>{let a=this._editor.getModel();(this.state.type!==1||!a||this.state.editorPosition.lineNumber>=a.getLineCount())&&this.hide()})),Ts.ignoreTarget(this._domNode),this._register(db(this._domNode,i=>{if(this.state.type!==1)return;this._editor.focus(),i.preventDefault();let{top:a,height:s}=nr(this._domNode),l=this._editor.getOption(59),d=Math.floor(l/3);this.state.widgetPosition.position!==null&&this.state.widgetPosition.position.lineNumber<this.state.editorPosition.lineNumber&&(d+=l),this._onClick.fire({x:i.posx,y:a+s+d,actions:this.state.actions,trigger:this.state.trigger})})),this._register(qe(this._domNode,"mouseenter",i=>{if((i.buttons&1)!==1)return;this.hide();let a=new ic;a.startMonitoring(i.target,i.buttons,nc,()=>{},()=>{a.dispose()})})),this._register(this._editor.onDidChangeConfiguration(i=>{i.hasChanged(57)&&!this._editor.getOption(57).enabled&&this.hide()})),this._updateLightBulbTitleAndIcon(),this._register(this._keybindingService.onDidUpdateKeybindings(this._updateLightBulbTitleAndIcon,this))}dispose(){super.dispose(),this._editor.removeContentWidget(this)}getId(){return"LightBulbWidget"}getDomNode(){return this._domNode}getPosition(){return this._state.type===1?this._state.widgetPosition:null}update(e,t,r){if(e.validActions.length<=0)return this.hide();let n=this._editor.getOptions();if(!n.get(57).enabled)return this.hide();let i=this._editor.getModel();if(!i)return this.hide();let{lineNumber:a,column:s}=i.validatePosition(r),l=i.getOptions().tabSize,d=n.get(44),c=i.getLineContent(a),u=dc(c,l),f=d.spaceWidth*u>22,m=b=>b>2&&this._editor.getTopForLineNumber(b)===this._editor.getTopForLineNumber(b-1),g=a;if(!f){if(a>1&&!m(a-1))g-=1;else if(!m(a+1))g+=1;else if(s*d.spaceWidth<22)return this.hide()}this.state=new Lc.Showing(e,t,r,{position:{lineNumber:g,column:1},preference:ZS._posPref}),this._editor.layoutContentWidget(this)}hide(){this.state=Lc.Hidden,this._editor.layoutContentWidget(this)}get state(){return this._state}set state(e){this._state=e,this._updateLightBulbTitleAndIcon()}_updateLightBulbTitleAndIcon(){if(this.state.type===1&&this.state.actions.hasAutoFix){this._domNode.classList.remove(...q.lightBulb.classNamesArray),this._domNode.classList.add(...q.lightbulbAutofix.classNamesArray);let t=this._keybindingService.lookupKeybinding(this._preferredFixActionId);if(t){this.title=p("preferredcodeActionWithKb","Show Code Actions. Preferred Quick Fix Available ({0})",t.getLabel());return}}this._domNode.classList.remove(...q.lightbulbAutofix.classNamesArray),this._domNode.classList.add(...q.lightBulb.classNamesArray);let e=this._keybindingService.lookupKeybinding(this._quickFixActionId);e?this.title=p("codeActionWithKb","Show Code Actions ({0})",e.getLabel()):this.title=p("codeAction","Show Code Actions")}set title(e){this._domNode.title=e}};Dc._posPref=[0];Dc=bw([Sw(3,at)],Dc);ke((o,e)=>{var t;let r=(t=o.getColor(xs))===null||t===void 0?void 0:t.transparent(.7),n=o.getColor(o1);n&&e.addRule(`
		.monaco-editor .contentWidgets ${q.lightBulb.cssSelector} {
			color: ${n};
			background-color: ${r};
		}`);let i=o.getColor(s1);i&&e.addRule(`
		.monaco-editor .contentWidgets ${q.lightbulbAutofix.cssSelector} {
			color: ${i};
			background-color: ${r};
		}`)});var Ew=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Tw=function(o,e){return function(t,r){e(t,r,o)}},Nh=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},xw=function(o,e,t,r,n){if(r==="m")throw new TypeError("Private method is not writable");if(r==="a"&&!n)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?o!==e||!n:!e.has(o))throw new TypeError("Cannot write private member to an object whose class did not declare it");return r==="a"?n.call(o,t):n?n.value=t:e.set(o,t),t},Cw=function(o,e,t,r){if(t==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?o!==e||!r:!e.has(o))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?r:t==="a"?r.call(o):r?r.value:e.get(o)},Bp,Vp=class extends F{constructor(e,t,r,n,i){super();this._editor=e,this.delegate=n,this._activeCodeActions=this._register(new et),Bp.set(this,!1),this._codeActionWidget=new Za(()=>this._register(i.createInstance(Gp,this._editor,{onSelectCodeAction:a=>Nh(this,void 0,void 0,function*(){this.delegate.applyCodeAction(a,!0)})}))),this._lightBulbWidget=new Za(()=>{let a=this._register(i.createInstance(Dc,this._editor,t,r));return this._register(a.onClick(s=>this.showCodeActionList(s.trigger,s.actions,s,{includeDisabledActions:!1}))),a})}dispose(){xw(this,Bp,!0,"f"),super.dispose()}update(e){var t,r,n,i,a;return Nh(this,void 0,void 0,function*(){if(e.type!==1){(t=this._lightBulbWidget.rawValue)===null||t===void 0||t.hide();return}let s;try{s=yield e.actions}catch(l){ce(l);return}if(!Cw(this,Bp,"f"))if(this._lightBulbWidget.getValue().update(s,e.trigger,e.position),e.trigger.type===1){if((r=e.trigger.filter)===null||r===void 0?void 0:r.include){let d=this.tryGetValidActionToApply(e.trigger,s);if(d){try{this._lightBulbWidget.getValue().hide(),yield this.delegate.applyCodeAction(d,!1)}finally{s.dispose()}return}if(e.trigger.context){let c=this.getInvalidActionThatWouldHaveBeenApplied(e.trigger,s);if(c&&c.action.disabled){(n=Zt.get(this._editor))===null||n===void 0||n.showMessage(c.action.disabled,e.trigger.context.position),s.dispose();return}}}let l=!!((i=e.trigger.filter)===null||i===void 0?void 0:i.include);if(e.trigger.context&&(!s.allActions.length||!l&&!s.validActions.length)){(a=Zt.get(this._editor))===null||a===void 0||a.showMessage(e.trigger.context.notAvailableMessage,e.trigger.context.position),this._activeCodeActions.value=s,s.dispose();return}this._activeCodeActions.value=s,this._codeActionWidget.getValue().show(e.trigger,s,e.position,{includeDisabledActions:l})}else this._codeActionWidget.getValue().isVisible?s.dispose():this._activeCodeActions.value=s})}getInvalidActionThatWouldHaveBeenApplied(e,t){if(!!t.allActions.length&&(e.autoApply==="first"&&t.validActions.length===0||e.autoApply==="ifSingle"&&t.allActions.length===1))return t.allActions.find(({action:r})=>r.disabled)}tryGetValidActionToApply(e,t){if(!!t.validActions.length&&(e.autoApply==="first"&&t.validActions.length>0||e.autoApply==="ifSingle"&&t.validActions.length===1))return t.validActions[0]}showCodeActionList(e,t,r,n){return Nh(this,void 0,void 0,function*(){this._codeActionWidget.getValue().show(e,t,r,n)})}};Bp=new WeakMap;Vp=Ew([Tw(4,le)],Vp);Z();xt();Le();He();fo();ec();we();Ae();Ne();W();Br();ee();Re();Le();fo();var Rh=function(o,e,t,r){if(t==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?o!==e||!r:!e.has(o))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?r:t==="a"?r.call(o):r?r.value:e.get(o)},Lw=function(o,e,t,r,n){if(r==="m")throw new TypeError("Private method is not writable");if(r==="a"&&!n)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?o!==e||!n:!e.has(o))throw new TypeError("Cannot write private member to an object whose class did not declare it");return r==="a"?n.call(o,t):n?n.value=t:e.set(o,t),t},Us,Ph=new fe("supportedCodeAction",""),e0=class extends F{constructor(e,t,r,n=250){super();this._editor=e,this._markerService=t,this._signalChange=r,this._delay=n,this._autoTriggerTimer=this._register(new Rr),this._register(this._markerService.onMarkerChanged(i=>this._onMarkerChanges(i))),this._register(this._editor.onDidChangeCursorPosition(()=>this._onCursorChange()))}trigger(e){let t=this._getRangeOfSelectionUnlessWhitespaceEnclosed(e);return this._createEventAndSignalChange(e,t)}_onMarkerChanges(e){let t=this._editor.getModel();!t||e.some(r=>tp(r,t.uri))&&this._autoTriggerTimer.cancelAndSet(()=>{this.trigger({type:2})},this._delay)}_onCursorChange(){this._autoTriggerTimer.cancelAndSet(()=>{this.trigger({type:2})},this._delay)}_getRangeOfMarker(e){let t=this._editor.getModel();if(!!t)for(let r of this._markerService.read({resource:t.uri})){let n=t.validateRange(r);if(y.intersectRanges(n,e))return y.lift(n)}}_getRangeOfSelectionUnlessWhitespaceEnclosed(e){if(!this._editor.hasModel())return;let t=this._editor.getModel(),r=this._editor.getSelection();if(r.isEmpty()&&e.type===2){let{lineNumber:n,column:i}=r.getPosition(),a=t.getLineContent(n);if(a.length===0)return;if(i===1){if(/\s/.test(a[0]))return}else if(i===t.getLineMaxColumn(n)){if(/\s/.test(a[a.length-1]))return}else if(/\s/.test(a[i-2])&&/\s/.test(a[i-1]))return}return r}_createEventAndSignalChange(e,t){let r=this._editor.getModel();if(!t||!r){this._signalChange(void 0);return}let n=this._getRangeOfMarker(t),i=n?n.getStartPosition():t.getStartPosition(),a={trigger:e,selection:t,position:i};return this._signalChange(a),a}},_o;(function(o){o.Empty={type:0};class e{constructor(r,n,i,a){this.trigger=r,this.rangeOrSelection=n,this.position=i,this._cancellablePromise=a,this.type=1,this.actions=a.catch(s=>{if(jn(s))return Dw;throw s})}cancel(){this._cancellablePromise.cancel()}}o.Triggered=e})(_o||(_o={}));var Dw={allActions:[],validActions:[],dispose:()=>{},documentation:[],hasAutoFix:!1},Mh=class extends F{constructor(e,t,r,n){super();this._editor=e,this._markerService=t,this._progressService=n,this._codeActionOracle=this._register(new et),this._state=_o.Empty,this._onDidChangeState=this._register(new j),this.onDidChangeState=this._onDidChangeState.event,Us.set(this,!1),this._supportedCodeActions=Ph.bindTo(r),this._register(this._editor.onDidChangeModel(()=>this._update())),this._register(this._editor.onDidChangeModelLanguage(()=>this._update())),this._register(Kn.onDidChange(()=>this._update())),this._update()}dispose(){Rh(this,Us,"f")||(Lw(this,Us,!0,"f"),super.dispose(),this.setState(_o.Empty,!0))}_update(){if(Rh(this,Us,"f"))return;this._codeActionOracle.value=void 0,this.setState(_o.Empty);let e=this._editor.getModel();if(e&&Kn.has(e)&&!this._editor.getOption(81)){let t=[];for(let r of Kn.all(e))Array.isArray(r.providedCodeActionKinds)&&t.push(...r.providedCodeActionKinds);this._supportedCodeActions.set(t.join(" ")),this._codeActionOracle.value=new e0(this._editor,this._markerService,r=>{var n;if(!r){this.setState(_o.Empty);return}let i=Ge(a=>xc(e,r.selection,r.trigger,Qn.None,a));r.trigger.type===1&&((n=this._progressService)===null||n===void 0||n.showWhile(i,250)),this.setState(new _o.Triggered(r.trigger,r.selection,r.position,i))},void 0),this._codeActionOracle.value.trigger({type:2})}else this._supportedCodeActions.reset()}trigger(e){this._codeActionOracle.value&&this._codeActionOracle.value.trigger(e)}setState(e,t){e!==this._state&&(this._state.type===1&&this._state.cancel(),this._state=e,!t&&!Rh(this,Us,"f")&&this._onDidChangeState.fire(e))}};Us=new WeakMap;var ww=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Hp=function(o,e){return function(t,r){e(t,r,o)}},t0=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})};function wc(o){return G.regex(Ph.keys()[0],new RegExp("(\\s|^)"+yi(o.value)+"\\b"))}var Oh={type:"object",defaultSnippets:[{body:{kind:""}}],properties:{kind:{type:"string",description:p("args.schema.kind","Kind of the code action to run.")},apply:{type:"string",description:p("args.schema.apply","Controls when the returned actions are applied."),default:"ifSingle",enum:["first","ifSingle","never"],enumDescriptions:[p("args.schema.apply.first","Always apply the first returned code action."),p("args.schema.apply.ifSingle","Apply the first returned code action if it is the only one."),p("args.schema.apply.never","Do not apply the returned code actions.")]},preferred:{type:"boolean",default:!1,description:p("args.schema.preferred","Controls if only preferred code actions should be returned.")}}},Ri=class r0 extends F{constructor(e,t,r,n,i){super();this._instantiationService=i,this._editor=e,this._model=this._register(new Mh(this._editor,t,r,n)),this._register(this._model.onDidChangeState(a=>this.update(a))),this._ui=new Za(()=>this._register(new Vp(e,Pi.Id,vo.Id,{applyCodeAction:(a,s)=>t0(this,void 0,void 0,function*(){try{yield this._applyCodeAction(a)}finally{s&&this._trigger({type:2,filter:{}})}})},this._instantiationService)))}static get(e){return e.getContribution(r0.ID)}update(e){this._ui.getValue().update(e)}showCodeActions(e,t,r){return this._ui.getValue().showCodeActionList(e,t,r,{includeDisabledActions:!1})}manualTriggerAtCurrentPosition(e,t,r){var n;if(!this._editor.hasModel())return;(n=Zt.get(this._editor))===null||n===void 0||n.closeMessage();let i=this._editor.getPosition();this._trigger({type:1,filter:t,autoApply:r,context:{notAvailableMessage:e,position:i}})}_trigger(e){return this._model.trigger(e)}_applyCodeAction(e){return this._instantiationService.invokeFunction(Aw,e,this._editor)}};Ri.ID="editor.contrib.quickFixController";Ri=ww([Hp(1,hc),Hp(2,re),Hp(3,Ii),Hp(4,le)],Ri);function Aw(o,e,t){return t0(this,void 0,void 0,function*(){let r=o.get(pp),n=o.get(ct),i=o.get(Yn),a=o.get($e);if(i.publicLog2("codeAction.applyCodeAction",{codeActionTitle:e.action.title,codeActionKind:e.action.kind,codeActionIsPreferred:!!e.action.isPreferred}),yield e.resolve(he.None),e.action.edit&&(yield r.apply(fp.convert(e.action.edit),{editor:t,label:e.action.title})),e.action.command)try{yield n.executeCommand(e.action.command.id,...e.action.command.arguments||[])}catch(s){let l=Iw(s);a.error(typeof l=="string"?l:p("applyCodeActionFailed","An unknown error occurred while applying the code action"))}})}function Iw(o){return typeof o=="string"?o:o instanceof Error&&typeof o.message=="string"?o.message:void 0}function yo(o,e,t,r){if(o.hasModel()){let n=Ri.get(o);n&&n.manualTriggerAtCurrentPosition(e,t,r)}}var Pi=class extends M{constructor(){super({id:Pi.Id,label:p("quickfix.trigger.label","Quick Fix..."),alias:"Quick Fix...",precondition:G.and(v.writable,v.hasCodeActionsProvider),kbOpts:{kbExpr:v.editorTextFocus,primary:2132,weight:100}})}run(e,t){return yo(t,p("editor.action.quickFix.noneMessage","No code actions available"),void 0,void 0)}};Pi.Id="editor.action.quickFix";var Fh=class extends dt{constructor(){super({id:Rp,precondition:G.and(v.writable,v.hasCodeActionsProvider),description:{description:"Trigger a code action",args:[{name:"args",schema:Oh}]}})}runEditorCommand(e,t,r){let n=Xr.fromUser(r,{kind:ge.Empty,apply:"ifSingle"});return yo(t,typeof(r==null?void 0:r.kind)=="string"?n.preferred?p("editor.action.codeAction.noneMessage.preferred.kind","No preferred code actions for '{0}' available",r.kind):p("editor.action.codeAction.noneMessage.kind","No code actions for '{0}' available",r.kind):n.preferred?p("editor.action.codeAction.noneMessage.preferred","No preferred code actions available"):p("editor.action.codeAction.noneMessage","No code actions available"),{include:n.kind,includeSourceActions:!0,onlyIncludePreferredActions:n.preferred},n.apply)}},Gh=class extends M{constructor(){super({id:Pp,label:p("refactor.label","Refactor..."),alias:"Refactor...",precondition:G.and(v.writable,v.hasCodeActionsProvider),kbOpts:{kbExpr:v.editorTextFocus,primary:3120,mac:{primary:1328},weight:100},contextMenuOpts:{group:"1_modification",order:2,when:G.and(v.writable,wc(ge.Refactor))},description:{description:"Refactor...",args:[{name:"args",schema:Oh}]}})}run(e,t,r){let n=Xr.fromUser(r,{kind:ge.Refactor,apply:"never"});return yo(t,typeof(r==null?void 0:r.kind)=="string"?n.preferred?p("editor.action.refactor.noneMessage.preferred.kind","No preferred refactorings for '{0}' available",r.kind):p("editor.action.refactor.noneMessage.kind","No refactorings for '{0}' available",r.kind):n.preferred?p("editor.action.refactor.noneMessage.preferred","No preferred refactorings available"):p("editor.action.refactor.noneMessage","No refactorings available"),{include:ge.Refactor.contains(n.kind)?n.kind:ge.None,onlyIncludePreferredActions:n.preferred},n.apply)}},Bh=class extends M{constructor(){super({id:Mp,label:p("source.label","Source Action..."),alias:"Source Action...",precondition:G.and(v.writable,v.hasCodeActionsProvider),contextMenuOpts:{group:"1_modification",order:2.1,when:G.and(v.writable,wc(ge.Source))},description:{description:"Source Action...",args:[{name:"args",schema:Oh}]}})}run(e,t,r){let n=Xr.fromUser(r,{kind:ge.Source,apply:"never"});return yo(t,typeof(r==null?void 0:r.kind)=="string"?n.preferred?p("editor.action.source.noneMessage.preferred.kind","No preferred source actions for '{0}' available",r.kind):p("editor.action.source.noneMessage.kind","No source actions for '{0}' available",r.kind):n.preferred?p("editor.action.source.noneMessage.preferred","No preferred source actions available"):p("editor.action.source.noneMessage","No source actions available"),{include:ge.Source.contains(n.kind)?n.kind:ge.None,includeSourceActions:!0,onlyIncludePreferredActions:n.preferred},n.apply)}},Vh=class extends M{constructor(){super({id:Ec,label:p("organizeImports.label","Organize Imports"),alias:"Organize Imports",precondition:G.and(v.writable,wc(ge.SourceOrganizeImports)),kbOpts:{kbExpr:v.editorTextFocus,primary:1581,weight:100}})}run(e,t){return yo(t,p("editor.action.organize.noneMessage","No organize imports action available"),{include:ge.SourceOrganizeImports,includeSourceActions:!0},"ifSingle")}},Hh=class extends M{constructor(){super({id:Tc,label:p("fixAll.label","Fix All"),alias:"Fix All",precondition:G.and(v.writable,wc(ge.SourceFixAll))})}run(e,t){return yo(t,p("fixAll.noneMessage","No fix all action available"),{include:ge.SourceFixAll,includeSourceActions:!0},"ifSingle")}},vo=class extends M{constructor(){super({id:vo.Id,label:p("autoFix.label","Auto Fix..."),alias:"Auto Fix...",precondition:G.and(v.writable,wc(ge.QuickFix)),kbOpts:{kbExpr:v.editorTextFocus,primary:1620,mac:{primary:2644},weight:100}})}run(e,t){return yo(t,p("editor.action.autoFix.noneMessage","No auto fixes available"),{include:ge.QuickFix,onlyIncludePreferredActions:!0},"ifSingle")}};vo.Id="editor.action.autoFix";Q(Ri.ID,Ri);D(Pi);D(Gh);D(Bh);D(Vh);D(vo);D(Hh);K(new Fh);Pe();we();Ae();eb();W();pe();Be();Re();pt();Ae();W();Jt();Xt();Re();da();xt();var n0=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},Ac=class{constructor(){this.lenses=[],this._disposables=new P}dispose(){this._disposables.dispose()}get isDisposed(){return this._disposables.isDisposed}add(e,t){this._disposables.add(e);for(let r of e.lenses)this.lenses.push({symbol:r,provider:t})}};function Uh(o,e){return n0(this,void 0,void 0,function*(){let t=ca.ordered(o),r=new Map,n=new Ac,i=t.map((a,s)=>n0(this,void 0,void 0,function*(){r.set(a,s);try{let l=yield Promise.resolve(a.provideCodeLenses(o,e));l&&n.add(l,a)}catch(l){ze(l)}}));return yield Promise.all(i),n.lenses=n.lenses.sort((a,s)=>a.symbol.range.startLineNumber<s.symbol.range.startLineNumber?-1:a.symbol.range.startLineNumber>s.symbol.range.startLineNumber?1:r.get(a.provider)<r.get(s.provider)?-1:r.get(a.provider)>r.get(s.provider)?1:a.symbol.range.startColumn<s.symbol.range.startColumn?-1:a.symbol.range.startColumn>s.symbol.range.startColumn?1:0),n})}Ie.registerCommand("_executeCodeLensProvider",function(o,...e){let[t,r]=e;Je(Te.isUri(t)),Je(typeof r=="number"||!r);let n=o.get(Yt).getModel(t);if(!n)throw xn();let i=[],a=new P;return Uh(n,he.None).then(s=>{a.add(s);let l=[];for(let d of s.lenses)r==null||Boolean(d.symbol.command)?i.push(d.symbol):r-- >0&&d.provider.resolveCodeLens&&l.push(Promise.resolve(d.provider.resolveCodeLens(n,d.symbol,he.None)).then(c=>i.push(c||d.symbol)));return Promise.all(l)}).then(()=>i).finally(()=>{setTimeout(()=>a.dispose(),100)})});we();_v();hs();ee();ro();He();var kw=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Nw=function(o,e){return function(t,r){e(t,r,o)}},zh=Mr("ICodeLensCache"),Wh=class{constructor(e,t){this.lineCount=e,this.data=t}},jh=class{constructor(e){this._fakeProvider=new class{provideCodeLenses(){throw new Error("not supported")}},this._cache=new zn(20,.75);let t="codelens/cache";Sv(()=>e.remove(t,1));let r="codelens/cache2",n=e.get(r,1,"{}");this._deserialize(n),_u(e.onWillSaveState)(i=>{i.reason===Tp.SHUTDOWN&&e.store(r,this._serialize(),1,1)})}put(e,t){let r=t.lenses.map(a=>{var s;return{range:a.symbol.range,command:a.symbol.command&&{id:"",title:(s=a.symbol.command)===null||s===void 0?void 0:s.title}}}),n=new Ac;n.add({lenses:r,dispose:()=>{}},this._fakeProvider);let i=new Wh(e.getLineCount(),n);this._cache.set(e.uri.toString(),i)}get(e){let t=this._cache.get(e.uri.toString());return t&&t.lineCount===e.getLineCount()?t.data:void 0}delete(e){this._cache.delete(e.uri.toString())}_serialize(){let e=Object.create(null);for(let[t,r]of this._cache){let n=new Set;for(let i of r.data.lenses)n.add(i.symbol.range.startLineNumber);e[t]={lineCount:r.lineCount,lines:[...n.values()]}}return JSON.stringify(e)}_deserialize(e){try{let t=JSON.parse(e);for(let r in t){let n=t[r],i=[];for(let s of n.lines)i.push({range:new y(s,1,s,11)});let a=new Ac;a.add({lenses:i,dispose(){}},this._fakeProvider),this._cache.set(r,new Wh(n.lineCount,a))}}catch(t){}}};jh=kw([Nw(0,lr)],jh);Or(zh,jh);Pe();ee();jt();var i0=class{constructor(e,t,r){this.afterColumn=1073741824,this.afterLineNumber=e,this.heightInPx=t,this._onHeight=r,this.suppressMouseDown=!0,this.domNode=document.createElement("div")}onComputedHeight(e){this._lastHeight===void 0?this._lastHeight=e:this._lastHeight!==e&&(this._lastHeight=e,this._onHeight())}isVisible(){return this._lastHeight!==0&&this.domNode.hasAttribute("monaco-visible-view-zone")}},Ic=class{constructor(e,t,r){this.allowEditorOverflow=!1,this.suppressMouseDown=!0,this._commands=new Map,this._isEmpty=!0,this._editor=e,this._id=`codelens.widget-${Ic._idPool++}`,this.updatePosition(r),this._domNode=document.createElement("span"),this._domNode.className=`codelens-decoration ${t}`}withCommands(e,t){this._commands.clear();let r=[],n=!1;for(let i=0;i<e.length;i++){let a=e[i];if(!!a&&(n=!0,a.command)){let s=gp(a.command.title.trim());a.command.id?(r.push(V("a",{id:String(i),title:a.command.tooltip},...s)),this._commands.set(String(i),a.command)):r.push(V("span",{title:a.command.tooltip},...s)),i+1<e.length&&r.push(V("span",void 0,"\xA0|\xA0"))}}n?(io(this._domNode,...r),this._isEmpty&&t&&this._domNode.classList.add("fadein"),this._isEmpty=!1):io(this._domNode,V("span",void 0,"no commands"))}getCommand(e){return e.parentElement===this._domNode?this._commands.get(e.id):void 0}getId(){return this._id}getDomNode(){return this._domNode}updatePosition(e){let t=this._editor.getModel().getLineFirstNonWhitespaceColumn(e);this._widgetPosition={position:{lineNumber:e,column:t},preference:[1]}}getPosition(){return this._widgetPosition||null}};Ic._idPool=0;var kc=class{constructor(){this._removeDecorations=[],this._addDecorations=[],this._addDecorationsCallbacks=[]}addDecoration(e,t){this._addDecorations.push(e),this._addDecorationsCallbacks.push(t)}removeDecoration(e){this._removeDecorations.push(e)}commit(e){let t=e.deltaDecorations(this._removeDecorations,this._addDecorations);for(let r=0,n=t.length;r<n;r++)this._addDecorationsCallbacks[r](t[r])}},Up=class{constructor(e,t,r,n,i,a,s){this._isDisposed=!1,this._editor=t,this._className=r,this._data=e,this._decorationIds=[];let l,d=[];this._data.forEach((c,u)=>{c.symbol.command&&d.push(c.symbol),n.addDecoration({range:c.symbol.range,options:Se.EMPTY},f=>this._decorationIds[u]=f),l?l=y.plusRange(l,c.symbol.range):l=y.lift(c.symbol.range)}),this._viewZone=new i0(l.startLineNumber-1,a,s),this._viewZoneId=i.addZone(this._viewZone),d.length>0&&(this._createContentWidgetIfNecessary(),this._contentWidget.withCommands(d,!1))}_createContentWidgetIfNecessary(){this._contentWidget?this._editor.layoutContentWidget(this._contentWidget):(this._contentWidget=new Ic(this._editor,this._className,this._viewZone.afterLineNumber+1),this._editor.addContentWidget(this._contentWidget))}dispose(e,t){this._decorationIds.forEach(e.removeDecoration,e),this._decorationIds=[],t&&t.removeZone(this._viewZoneId),this._contentWidget&&(this._editor.removeContentWidget(this._contentWidget),this._contentWidget=void 0),this._isDisposed=!0}isDisposed(){return this._isDisposed}isValid(){return this._decorationIds.some((e,t)=>{let r=this._editor.getModel().getDecorationRange(e),n=this._data[t].symbol;return!!(r&&y.isEmpty(n.range)===r.isEmpty())})}updateCodeLensSymbols(e,t){this._decorationIds.forEach(t.removeDecoration,t),this._decorationIds=[],this._data=e,this._data.forEach((r,n)=>{t.addDecoration({range:r.symbol.range,options:Se.EMPTY},i=>this._decorationIds[n]=i)})}updateHeight(e,t){this._viewZone.heightInPx=e,t.layoutZone(this._viewZoneId),this._contentWidget&&this._editor.layoutContentWidget(this._contentWidget)}computeIfNecessary(e){if(!this._viewZone.isVisible())return null;for(let t=0;t<this._decorationIds.length;t++){let r=e.getDecorationRange(this._decorationIds[t]);r&&(this._data[t].symbol.range=r)}return this._data}updateCommands(e){this._createContentWidgetIfNecessary(),this._contentWidget.withCommands(e,!0);for(let t=0;t<this._data.length;t++){let r=e[t];if(r){let{symbol:n}=this._data[t];n.command=r.command||n.command}}}getCommand(e){var t;return(t=this._contentWidget)===null||t===void 0?void 0:t.getCommand(e)}getLineNumber(){let e=this._editor.getModel().getDecorationRange(this._decorationIds[0]);return e?e.startLineNumber:-1}update(e){if(this.isValid()){let t=this._editor.getModel().getDecorationRange(this._decorationIds[0]);t&&(this._viewZone.afterLineNumber=t.startLineNumber-1,e.layoutZone(this._viewZoneId),this._contentWidget&&(this._contentWidget.updatePosition(t.startLineNumber),this._editor.layoutContentWidget(this._contentWidget)))}}};Z();xt();mc();var Rw=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Wp=function(o,e){return function(t,r){e(t,r,o)}},Pw=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},Ws=class{constructor(e,t,r,n,i){this._editor=e,this._commandService=r,this._notificationService=n,this._codeLensCache=i,this._disposables=new P,this._localToDispose=new P,this._lenses=[],this._oldCodeLensModels=new P,this._provideCodeLensDebounce=t.for(ca,"CodeLensProvide",{min:250}),this._resolveCodeLensesDebounce=t.for(ca,"CodeLensResolve",{min:250,salt:"resolve"}),this._resolveCodeLensesScheduler=new Ke(()=>this._resolveCodeLensesInViewport(),this._resolveCodeLensesDebounce.default()),this._disposables.add(this._editor.onDidChangeModel(()=>this._onModelChange())),this._disposables.add(this._editor.onDidChangeModelLanguage(()=>this._onModelChange())),this._disposables.add(this._editor.onDidChangeConfiguration(a=>{(a.hasChanged(44)||a.hasChanged(16)||a.hasChanged(15))&&this._updateLensStyle(),a.hasChanged(14)&&this._onModelChange()})),this._disposables.add(ca.onDidChange(this._onModelChange,this)),this._onModelChange(),this._styleClassName="_"+Iu(this._editor.getId()).toString(16),this._styleElement=_b(hb(this._editor.getContainerDomNode())?this._editor.getContainerDomNode():void 0),this._updateLensStyle()}dispose(){var e;this._localDispose(),this._disposables.dispose(),this._oldCodeLensModels.dispose(),(e=this._currentCodeLensModel)===null||e===void 0||e.dispose(),this._styleElement.remove()}_getLayoutInfo(){let e=this._editor.getOption(16),t;return!e||e<5?(e=this._editor.getOption(46)*.9|0,t=this._editor.getOption(59)):t=e*Math.max(1.3,this._editor.getOption(59)/this._editor.getOption(46))|0,{codeLensHeight:t,fontSize:e}}_updateLensStyle(){let{codeLensHeight:e,fontSize:t}=this._getLayoutInfo(),r=this._editor.getOption(15),n=this._editor.getOption(44),i=`--codelens-font-family${this._styleClassName}`,a=`--codelens-font-features${this._styleClassName}`,s=`
		.monaco-editor .codelens-decoration.${this._styleClassName} { line-height: ${e}px; font-size: ${t}px; padding-right: ${Math.round(t*.5)}px; font-feature-settings: var(${a}) }
		.monaco-editor .codelens-decoration.${this._styleClassName} span.codicon { line-height: ${e}px; font-size: ${t}px; }
		`;r&&(s+=`.monaco-editor .codelens-decoration.${this._styleClassName} { font-family: var(${i}), ${sa.fontFamily}}`),this._styleElement.textContent=s,this._editor.getContainerDomNode().style.setProperty(i,r!=null?r:"inherit"),this._editor.getContainerDomNode().style.setProperty(a,n.fontFeatureSettings),this._editor.changeViewZones(l=>{for(let d of this._lenses)d.updateHeight(e,l)})}_localDispose(){var e,t,r;(e=this._getCodeLensModelPromise)===null||e===void 0||e.cancel(),this._getCodeLensModelPromise=void 0,(t=this._resolveCodeLensesPromise)===null||t===void 0||t.cancel(),this._resolveCodeLensesPromise=void 0,this._localToDispose.clear(),this._oldCodeLensModels.clear(),(r=this._currentCodeLensModel)===null||r===void 0||r.dispose()}_onModelChange(){this._localDispose();let e=this._editor.getModel();if(!e||!this._editor.getOption(14))return;let t=this._codeLensCache.get(e);if(t&&this._renderCodeLensSymbols(t),!ca.has(e)){t&&this._localToDispose.add(Qa(()=>{let n=this._codeLensCache.get(e);t===n&&(this._codeLensCache.delete(e),this._onModelChange())},30*1e3));return}for(let n of ca.all(e))if(typeof n.onDidChange=="function"){let i=n.onDidChange(()=>r.schedule());this._localToDispose.add(i)}let r=new Ke(()=>{var n;let i=Date.now();(n=this._getCodeLensModelPromise)===null||n===void 0||n.cancel(),this._getCodeLensModelPromise=Ge(a=>Uh(e,a)),this._getCodeLensModelPromise.then(a=>{this._currentCodeLensModel&&this._oldCodeLensModels.add(this._currentCodeLensModel),this._currentCodeLensModel=a,this._codeLensCache.put(e,a);let s=this._provideCodeLensDebounce.update(e,Date.now()-i);r.delay=s,this._renderCodeLensSymbols(a),this._resolveCodeLensesInViewportSoon()},ce)},this._provideCodeLensDebounce.get(e));this._localToDispose.add(r),this._localToDispose.add(Ve(()=>this._resolveCodeLensesScheduler.cancel())),this._localToDispose.add(this._editor.onDidChangeModelContent(()=>{this._editor.changeDecorations(n=>{this._editor.changeViewZones(i=>{let a=[],s=-1;this._lenses.forEach(d=>{!d.isValid()||s===d.getLineNumber()?a.push(d):(d.update(i),s=d.getLineNumber())});let l=new kc;a.forEach(d=>{d.dispose(l,i),this._lenses.splice(this._lenses.indexOf(d),1)}),l.commit(n)})}),r.schedule()})),this._localToDispose.add(this._editor.onDidFocusEditorWidget(()=>{r.schedule()})),this._localToDispose.add(this._editor.onDidScrollChange(n=>{n.scrollTopChanged&&this._lenses.length>0&&this._resolveCodeLensesInViewportSoon()})),this._localToDispose.add(this._editor.onDidLayoutChange(()=>{this._resolveCodeLensesInViewportSoon()})),this._localToDispose.add(Ve(()=>{if(this._editor.getModel()){let n=va.capture(this._editor);this._editor.changeDecorations(i=>{this._editor.changeViewZones(a=>{this._disposeAllLenses(i,a)})}),n.restore(this._editor)}else this._disposeAllLenses(void 0,void 0)})),this._localToDispose.add(this._editor.onMouseDown(n=>{if(n.target.type!==9)return;let i=n.target.element;if((i==null?void 0:i.tagName)==="SPAN"&&(i=i.parentElement),(i==null?void 0:i.tagName)==="A")for(let a of this._lenses){let s=a.getCommand(i);if(s){this._commandService.executeCommand(s.id,...s.arguments||[]).catch(l=>this._notificationService.error(l));break}}})),r.schedule()}_disposeAllLenses(e,t){let r=new kc;for(let n of this._lenses)n.dispose(r,t);e&&r.commit(e),this._lenses.length=0}_renderCodeLensSymbols(e){if(!this._editor.hasModel())return;let t=this._editor.getModel().getLineCount(),r=[],n;for(let s of e.lenses){let l=s.symbol.range.startLineNumber;l<1||l>t||(n&&n[n.length-1].symbol.range.startLineNumber===l?n.push(s):(n=[s],r.push(n)))}let i=va.capture(this._editor),a=this._getLayoutInfo();this._editor.changeDecorations(s=>{this._editor.changeViewZones(l=>{let d=new kc,c=0,u=0;for(;u<r.length&&c<this._lenses.length;){let f=r[u][0].symbol.range.startLineNumber,m=this._lenses[c].getLineNumber();m<f?(this._lenses[c].dispose(d,l),this._lenses.splice(c,1)):m===f?(this._lenses[c].updateCodeLensSymbols(r[u],d),u++,c++):(this._lenses.splice(c,0,new Up(r[u],this._editor,this._styleClassName,d,l,a.codeLensHeight,()=>this._resolveCodeLensesInViewportSoon())),c++,u++)}for(;c<this._lenses.length;)this._lenses[c].dispose(d,l),this._lenses.splice(c,1);for(;u<r.length;)this._lenses.push(new Up(r[u],this._editor,this._styleClassName,d,l,a.codeLensHeight,()=>this._resolveCodeLensesInViewportSoon())),u++;d.commit(s)})}),i.restore(this._editor)}_resolveCodeLensesInViewportSoon(){this._editor.getModel()&&this._resolveCodeLensesScheduler.schedule()}_resolveCodeLensesInViewport(){var e;(e=this._resolveCodeLensesPromise)===null||e===void 0||e.cancel(),this._resolveCodeLensesPromise=void 0;let t=this._editor.getModel();if(!t)return;let r=[],n=[];if(this._lenses.forEach(s=>{let l=s.computeIfNecessary(t);l&&(r.push(l),n.push(s))}),r.length===0)return;let i=Date.now(),a=Ge(s=>{let l=r.map((d,c)=>{let u=new Array(d.length),f=d.map((m,g)=>!m.symbol.command&&typeof m.provider.resolveCodeLens=="function"?Promise.resolve(m.provider.resolveCodeLens(t,m.symbol,s)).then(b=>{u[g]=b},ze):(u[g]=m.symbol,Promise.resolve(void 0)));return Promise.all(f).then(()=>{!s.isCancellationRequested&&!n[c].isDisposed()&&n[c].updateCommands(u)})});return Promise.all(l)});this._resolveCodeLensesPromise=a,this._resolveCodeLensesPromise.then(()=>{let s=this._resolveCodeLensesDebounce.update(t,Date.now()-i);this._resolveCodeLensesScheduler.delay=s,this._currentCodeLensModel&&this._codeLensCache.put(t,this._currentCodeLensModel),this._oldCodeLensModels.clear(),a===this._resolveCodeLensesPromise&&(this._resolveCodeLensesPromise=void 0)},s=>{ce(s),a===this._resolveCodeLensesPromise&&(this._resolveCodeLensesPromise=void 0)})}getModel(){return this._currentCodeLensModel}};Ws.ID="css.editor.codeLens";Ws=Rw([Wp(1,Zn),Wp(2,ct),Wp(3,$e),Wp(4,zh)],Ws);Q(Ws.ID,Ws);D(class extends M{constructor(){super({id:"codelens.showLensesInCurrentLine",precondition:v.hasCodeLensProvider,label:p("showLensOnLine","Show CodeLens Commands For Current Line"),alias:"Show CodeLens Commands For Current Line"})}run(e,t){return Pw(this,void 0,void 0,function*(){if(!t.hasModel())return;let r=e.get(Vr),n=e.get(ct),i=e.get($e),a=t.getSelection().positionLineNumber,s=t.getContribution(Ws.ID);if(!s)return;let l=s.getModel();if(!l)return;let d=[];for(let u of l.lenses)u.symbol.command&&u.symbol.range.startLineNumber===a&&d.push({label:u.symbol.command.title,command:u.symbol.command});if(d.length===0)return;let c=yield r.pick(d,{canPickMany:!1});if(!!c){if(l.isDisposed)return yield n.executeCommand(this.id);try{yield n.executeCommand(c.command.id,...c.command.arguments||[])}catch(u){i.error(u)}}})}});W();pe();ee();we();$n();Ae();W();Ye();pe();ee();jt();Re();pt();Ae();Xt();ee();Re();da();xt();function a0(o,e){let t=[],n=to.ordered(o).reverse().map(i=>Promise.resolve(i.provideDocumentColors(o,e)).then(a=>{if(Array.isArray(a))for(let s of a)t.push({colorInfo:s,provider:i})}));return Promise.all(n).then(()=>t)}function Kh(o,e,t,r){return Promise.resolve(t.provideColorPresentations(o,e,r))}Ie.registerCommand("_executeDocumentColorProvider",function(o,...e){let[t]=e;if(!(t instanceof Te))throw xn();let r=o.get(Yt).getModel(t);if(!r)throw xn();let n=[],a=to.ordered(r).reverse().map(s=>Promise.resolve(s.provideDocumentColors(r,he.None)).then(l=>{if(Array.isArray(l))for(let d of l)n.push({range:d.range,color:[d.color.red,d.color.green,d.color.blue,d.color.alpha]})}));return Promise.all(a).then(()=>n)});Ie.registerCommand("_executeColorPresentationProvider",function(o,...e){let[t,r]=e,{uri:n,range:i}=r;if(!(n instanceof Te)||!Array.isArray(t)||t.length!==4||!y.isIRange(i))throw xn();let[a,s,l,d]=t,c=o.get(Yt).getModel(n);if(!c)throw xn();let u={range:i,color:{red:a,green:s,blue:l,alpha:d}},f=[],g=to.ordered(c).reverse().map(b=>Promise.resolve(b.provideColorPresentations(c,u,he.None)).then(T=>{Array.isArray(T)&&f.push(...T)}));return Promise.all(g).then(()=>f)});wn();var Mw=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Ow=function(o,e){return function(t,r){e(t,r,o)}},qh=Object.create({}),Fw=500,xa=class o0 extends F{constructor(e,t){super();this._editor=e,this._configurationService=t,this._localToDispose=this._register(new P),this._decorationsIds=[],this._colorDatas=new Map,this._colorDecoratorIds=new Set,this._ruleFactory=new Qu(this._editor),this._colorDecorationClassRefs=this._register(new P),this._register(e.onDidChangeModel(()=>{this._isEnabled=this.isEnabled(),this.onModelChanged()})),this._register(e.onDidChangeModelLanguage(()=>this.onModelChanged())),this._register(to.onDidChange(()=>this.onModelChanged())),this._register(e.onDidChangeConfiguration(()=>{let r=this._isEnabled;this._isEnabled=this.isEnabled(),r!==this._isEnabled&&(this._isEnabled?this.onModelChanged():this.removeAllDecorations())})),this._timeoutTimer=null,this._computePromise=null,this._isEnabled=this.isEnabled(),this.onModelChanged()}isEnabled(){let e=this._editor.getModel();if(!e)return!1;let t=e.getLanguageId(),r=this._configurationService.getValue(t);if(r&&typeof r=="object"){let n=r.colorDecorators;if(n&&n.enable!==void 0&&!n.enable)return n.enable}return this._editor.getOption(17)}static get(e){return e.getContribution(this.ID)}dispose(){this.stop(),this.removeAllDecorations(),super.dispose()}onModelChanged(){if(this.stop(),!this._isEnabled)return;let e=this._editor.getModel();!e||!to.has(e)||(this._localToDispose.add(this._editor.onDidChangeModelContent(()=>{this._timeoutTimer||(this._timeoutTimer=new Rr,this._timeoutTimer.cancelAndSet(()=>{this._timeoutTimer=null,this.beginCompute()},o0.RECOMPUTE_TIME))})),this.beginCompute())}beginCompute(){this._computePromise=Ge(e=>{let t=this._editor.getModel();return t?a0(t,e):Promise.resolve([])}),this._computePromise.then(e=>{this.updateDecorations(e),this.updateColorDecorators(e),this._computePromise=null},ce)}stop(){this._timeoutTimer&&(this._timeoutTimer.cancel(),this._timeoutTimer=null),this._computePromise&&(this._computePromise.cancel(),this._computePromise=null),this._localToDispose.clear()}updateDecorations(e){let t=e.map(r=>({range:{startLineNumber:r.colorInfo.range.startLineNumber,startColumn:r.colorInfo.range.startColumn,endLineNumber:r.colorInfo.range.endLineNumber,endColumn:r.colorInfo.range.endColumn},options:Se.EMPTY}));this._decorationsIds=this._editor.deltaDecorations(this._decorationsIds,t),this._colorDatas=new Map,this._decorationsIds.forEach((r,n)=>this._colorDatas.set(r,e[n]))}updateColorDecorators(e){this._colorDecorationClassRefs.clear();let t=[];for(let r=0;r<e.length&&t.length<Fw;r++){let{red:n,green:i,blue:a,alpha:s}=e[r].colorInfo.color,l=new Ti(Math.round(n*255),Math.round(i*255),Math.round(a*255),s),d=`rgba(${l.r}, ${l.g}, ${l.b}, ${l.a})`,c=this._colorDecorationClassRefs.add(this._ruleFactory.createClassNameRef({backgroundColor:d}));t.push({range:{startLineNumber:e[r].colorInfo.range.startLineNumber,startColumn:e[r].colorInfo.range.startColumn,endLineNumber:e[r].colorInfo.range.endLineNumber,endColumn:e[r].colorInfo.range.endColumn},options:{description:"colorDetector",before:{content:Pv,inlineClassName:`${c.className} colorpicker-color-decoration`,inlineClassNameAffectsLetterSpacing:!0,attachedData:qh}}})}this._colorDecoratorIds=new Set(this._editor.deltaDecorations([...this._colorDecoratorIds],t))}removeAllDecorations(){this._decorationsIds=this._editor.deltaDecorations(this._decorationsIds,[]),this._colorDecoratorIds=new Set(this._editor.deltaDecorations([...this._colorDecoratorIds],[])),this._colorDecorationClassRefs.clear()}getColorData(e){let t=this._editor.getModel();if(!t)return null;let r=t.getDecorationsInRange(y.fromPositions(e,e)).filter(n=>this._colorDatas.has(n.id));return r.length===0?null:this._colorDatas.get(r[0].id)}isColorDecorationId(e){return this._colorDecoratorIds.has(e)}};xa.ID="editor.contrib.colorDetector";xa.RECOMPUTE_TIME=1e3;xa=Mw([Ow(1,rt)],xa);Q(xa.ID,xa);gi();W();pe();ee();Be();an();we();Ae();W();Jt();yc();pe();tt();ee();Re();an();Si();Ne();W();Ir();function Jh(o,e){return!!o[e]}var jp=class{constructor(e,t){this.target=e.target,this.hasTriggerModifier=Jh(e.event,t.triggerModifier),this.hasSideBySideModifier=Jh(e.event,t.triggerSideBySideModifier),this.isNoneOrSingleMouseDown=e.event.detail<=1}},Xh=class{constructor(e,t){this.keyCodeIsTriggerKey=e.keyCode===t.triggerKey,this.keyCodeIsSideBySideKey=e.keyCode===t.triggerSideBySideKey,this.hasTriggerModifier=Jh(e,t.triggerModifier)}},Nc=class{constructor(e,t,r,n){this.triggerKey=e,this.triggerModifier=t,this.triggerSideBySideKey=r,this.triggerSideBySideModifier=n}equals(e){return this.triggerKey===e.triggerKey&&this.triggerModifier===e.triggerModifier&&this.triggerSideBySideKey===e.triggerSideBySideKey&&this.triggerSideBySideModifier===e.triggerSideBySideModifier}};function s0(o){return o==="altKey"?yr?new Nc(57,"metaKey",6,"altKey"):new Nc(5,"ctrlKey",6,"altKey"):yr?new Nc(6,"altKey",57,"metaKey"):new Nc(6,"altKey",5,"ctrlKey")}var bo=class extends F{constructor(e){super();this._onMouseMoveOrRelevantKeyDown=this._register(new j),this.onMouseMoveOrRelevantKeyDown=this._onMouseMoveOrRelevantKeyDown.event,this._onExecute=this._register(new j),this.onExecute=this._onExecute.event,this._onCancel=this._register(new j),this.onCancel=this._onCancel.event,this._editor=e,this._opts=s0(this._editor.getOption(70)),this._lastMouseMoveEvent=null,this._hasTriggerKeyOnMouseDown=!1,this._lineNumberOnMouseDown=0,this._register(this._editor.onDidChangeConfiguration(t=>{if(t.hasChanged(70)){let r=s0(this._editor.getOption(70));if(this._opts.equals(r))return;this._opts=r,this._lastMouseMoveEvent=null,this._hasTriggerKeyOnMouseDown=!1,this._lineNumberOnMouseDown=0,this._onCancel.fire()}})),this._register(this._editor.onMouseMove(t=>this._onEditorMouseMove(new jp(t,this._opts)))),this._register(this._editor.onMouseDown(t=>this._onEditorMouseDown(new jp(t,this._opts)))),this._register(this._editor.onMouseUp(t=>this._onEditorMouseUp(new jp(t,this._opts)))),this._register(this._editor.onKeyDown(t=>this._onEditorKeyDown(new Xh(t,this._opts)))),this._register(this._editor.onKeyUp(t=>this._onEditorKeyUp(new Xh(t,this._opts)))),this._register(this._editor.onMouseDrag(()=>this._resetHandler())),this._register(this._editor.onDidChangeCursorSelection(t=>this._onDidChangeCursorSelection(t))),this._register(this._editor.onDidChangeModel(t=>this._resetHandler())),this._register(this._editor.onDidChangeModelContent(()=>this._resetHandler())),this._register(this._editor.onDidScrollChange(t=>{(t.scrollTopChanged||t.scrollLeftChanged)&&this._resetHandler()}))}_onDidChangeCursorSelection(e){e.selection&&e.selection.startColumn!==e.selection.endColumn&&this._resetHandler()}_onEditorMouseMove(e){this._lastMouseMoveEvent=e,this._onMouseMoveOrRelevantKeyDown.fire([e,null])}_onEditorMouseDown(e){this._hasTriggerKeyOnMouseDown=e.hasTriggerModifier,this._lineNumberOnMouseDown=e.target.position?e.target.position.lineNumber:0}_onEditorMouseUp(e){let t=e.target.position?e.target.position.lineNumber:0;this._hasTriggerKeyOnMouseDown&&this._lineNumberOnMouseDown&&this._lineNumberOnMouseDown===t&&this._onExecute.fire(e)}_onEditorKeyDown(e){this._lastMouseMoveEvent&&(e.keyCodeIsTriggerKey||e.keyCodeIsSideBySideKey&&e.hasTriggerModifier)?this._onMouseMoveOrRelevantKeyDown.fire([this._lastMouseMoveEvent,e]):e.hasTriggerModifier&&this._onCancel.fire()}_onEditorKeyUp(e){e.keyCodeIsTriggerKey&&this._onCancel.fire()}_resetHandler(){this._lastMouseMoveEvent=null,this._hasTriggerKeyOnMouseDown=!1,this._onCancel.fire()}};Pe();ao();Sr();$n();Ne();mu();pe();Er();mu();Er();xt();Le();He();Oe();on();var Gw=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Ca=function(o,e){return function(t,r){e(t,r,o)}},kn=class extends M1{constructor(e,t,r,n,i,a,s,l,d,c,u){super(e,Object.assign(Object.assign({},r.getRawOptions()),{overflowWidgetsDomNode:r.getOverflowWidgetsDomNode()}),{},n,i,a,s,l,d,c,u);this._parentEditor=r,this._overwriteOptions=t,super.updateOptions(this._overwriteOptions),this._register(r.onDidChangeConfiguration(f=>this._onParentConfigurationChanged(f)))}getParentEditor(){return this._parentEditor}_onParentConfigurationChanged(e){super.updateOptions(this._parentEditor.getRawOptions()),super.updateOptions(this._overwriteOptions)}updateOptions(e){ls(this._overwriteOptions,e,!0),super.updateOptions(this._overwriteOptions)}};kn=Gw([Ca(3,le),Ca(4,Ue),Ca(5,ct),Ca(6,re),Ca(7,Ot),Ca(8,$e),Ca(9,Gu),Ca(10,Nt)],kn);Pe();$n();W();mu();ee();jt();var c0=new xe(new Ti(0,122,204)),Bw={showArrow:!0,showFrame:!0,className:"",frameColor:c0,arrowColor:c0,keepEditorSelection:!1},Vw="vs.editor.contrib.zoneWidget",d0=class{constructor(e,t,r,n,i,a){this.id="",this.domNode=e,this.afterLineNumber=t,this.afterColumn=r,this.heightInLines=n,this._onDomNodeTop=i,this._onComputedHeight=a}onDomNodeTop(e){this._onDomNodeTop(e)}onComputedHeight(e){this._onComputedHeight(e)}},u0=class{constructor(e,t){this._id=e,this._domNode=t}getId(){return this._id}getDomNode(){return this._domNode}getPosition(){return null}},Rc=class{constructor(e){this._editor=e,this._ruleName=Rc._IdGenerator.nextId(),this._decorations=[],this._color=null,this._height=-1}dispose(){this.hide(),Km(this._ruleName)}set color(e){this._color!==e&&(this._color=e,this._updateStyle())}set height(e){this._height!==e&&(this._height=e,this._updateStyle())}_updateStyle(){Km(this._ruleName),yb(`.monaco-editor ${this._ruleName}`,`border-style: solid; border-color: transparent; border-bottom-color: ${this._color}; border-width: ${this._height}px; bottom: -${this._height}px; margin-left: -${this._height}px; `)}show(e){e.column===1&&(e={lineNumber:e.lineNumber,column:2}),this._decorations=this._editor.deltaDecorations(this._decorations,[{range:y.fromPositions(e),options:{description:"zone-widget-arrow",className:this._ruleName,stickiness:1}}])}hide(){this._editor.deltaDecorations(this._decorations,[])}};Rc._IdGenerator=new sS(".arrow-decoration-");var Yh=class{constructor(e,t={}){this._arrow=null,this._overlayWidget=null,this._resizeSash=null,this._positionMarkerId=[],this._viewZone=null,this._disposables=new P,this.container=null,this._isShowing=!1,this.editor=e,this.options=fv(t),ls(this.options,Bw,!1),this.domNode=document.createElement("div"),this.options.isAccessible||(this.domNode.setAttribute("aria-hidden","true"),this.domNode.setAttribute("role","presentation")),this._disposables.add(this.editor.onDidLayoutChange(r=>{let n=this._getWidth(r);this.domNode.style.width=n+"px",this.domNode.style.left=this._getLeft(r)+"px",this._onWidth(n)}))}dispose(){this._overlayWidget&&(this.editor.removeOverlayWidget(this._overlayWidget),this._overlayWidget=null),this._viewZone&&this.editor.changeViewZones(e=>{this._viewZone&&e.removeZone(this._viewZone.id),this._viewZone=null}),this.editor.deltaDecorations(this._positionMarkerId,[]),this._positionMarkerId=[],this._disposables.dispose()}create(){this.domNode.classList.add("zone-widget"),this.options.className&&this.domNode.classList.add(this.options.className),this.container=document.createElement("div"),this.container.classList.add("zone-widget-container"),this.domNode.appendChild(this.container),this.options.showArrow&&(this._arrow=new Rc(this.editor),this._disposables.add(this._arrow)),this._fillContainer(this.container),this._initSash(),this._applyStyles()}style(e){e.frameColor&&(this.options.frameColor=e.frameColor),e.arrowColor&&(this.options.arrowColor=e.arrowColor),this._applyStyles()}_applyStyles(){if(this.container&&this.options.frameColor){let e=this.options.frameColor.toString();this.container.style.borderTopColor=e,this.container.style.borderBottomColor=e}if(this._arrow&&this.options.arrowColor){let e=this.options.arrowColor.toString();this._arrow.color=e}}_getWidth(e){return e.width-e.minimap.minimapWidth-e.verticalScrollbarWidth}_getLeft(e){return e.minimap.minimapWidth>0&&e.minimap.minimapLeft===0?e.minimap.minimapWidth:0}_onViewZoneTop(e){this.domNode.style.top=e+"px"}_onViewZoneHeight(e){if(this.domNode.style.height=`${e}px`,this.container){let t=e-this._decoratingElementsHeight();this.container.style.height=`${t}px`;let r=this.editor.getLayoutInfo();this._doLayout(t,this._getWidth(r))}this._resizeSash&&this._resizeSash.layout()}get position(){let[e]=this._positionMarkerId;if(!e)return;let t=this.editor.getModel();if(!t)return;let r=t.getDecorationRange(e);if(!!r)return r.getStartPosition()}show(e,t){let r=y.isIRange(e)?y.lift(e):y.fromPositions(e);this._isShowing=!0,this._showImpl(r,t),this._isShowing=!1,this._positionMarkerId=this.editor.deltaDecorations(this._positionMarkerId,[{range:r,options:Se.EMPTY}])}hide(){this._viewZone&&(this.editor.changeViewZones(e=>{this._viewZone&&e.removeZone(this._viewZone.id)}),this._viewZone=null),this._overlayWidget&&(this.editor.removeOverlayWidget(this._overlayWidget),this._overlayWidget=null),this._arrow&&this._arrow.hide()}_decoratingElementsHeight(){let e=this.editor.getOption(59),t=0;if(this.options.showArrow){let r=Math.round(e/3);t+=2*r}if(this.options.showFrame){let r=Math.round(e/9);t+=2*r}return t}_showImpl(e,t){let r=e.getStartPosition(),n=this.editor.getLayoutInfo(),i=this._getWidth(n);this.domNode.style.width=`${i}px`,this.domNode.style.left=this._getLeft(n)+"px";let a=document.createElement("div");a.style.overflow="hidden";let s=this.editor.getOption(59),l=Math.max(12,this.editor.getLayoutInfo().height/s*.8);t=Math.min(t,l);let d=0,c=0;if(this._arrow&&this.options.showArrow&&(d=Math.round(s/3),this._arrow.height=d,this._arrow.show(r)),this.options.showFrame&&(c=Math.round(s/9)),this.editor.changeViewZones(m=>{this._viewZone&&m.removeZone(this._viewZone.id),this._overlayWidget&&(this.editor.removeOverlayWidget(this._overlayWidget),this._overlayWidget=null),this.domNode.style.top="-1000px",this._viewZone=new d0(a,r.lineNumber,r.column,t,g=>this._onViewZoneTop(g),g=>this._onViewZoneHeight(g)),this._viewZone.id=m.addZone(this._viewZone),this._overlayWidget=new u0(Vw+this._viewZone.id,this.domNode),this.editor.addOverlayWidget(this._overlayWidget)}),this.container&&this.options.showFrame){let m=this.options.frameWidth?this.options.frameWidth:c;this.container.style.borderTopWidth=m+"px",this.container.style.borderBottomWidth=m+"px"}let u=t*s-this._decoratingElementsHeight();this.container&&(this.container.style.top=d+"px",this.container.style.height=u+"px",this.container.style.overflow="hidden"),this._doLayout(u,i),this.options.keepEditorSelection||this.editor.setSelection(e);let f=this.editor.getModel();if(f){let m=e.endLineNumber+1;m<=f.getLineCount()?this.revealLine(m,!1):this.revealLine(f.getLineCount(),!0)}}revealLine(e,t){t?this.editor.revealLineInCenter(e,0):this.editor.revealLine(e,0)}setCssClass(e,t){!this.container||(t&&this.container.classList.remove(t),this.container.classList.add(e))}_onWidth(e){}_doLayout(e,t){}_relayout(e){this._viewZone&&this._viewZone.heightInLines!==e&&this.editor.changeViewZones(t=>{this._viewZone&&(this._viewZone.heightInLines=e,t.layoutZone(this._viewZone.id))})}_initSash(){if(this._resizeSash)return;this._resizeSash=this._disposables.add(new Di(this.domNode,this,{orientation:1})),this.options.isResizeable||(this._resizeSash.state=0);let e;this._disposables.add(this._resizeSash.onDidStart(t=>{this._viewZone&&(e={startY:t.startY,heightInLines:this._viewZone.heightInLines})})),this._disposables.add(this._resizeSash.onDidEnd(()=>{e=void 0})),this._disposables.add(this._resizeSash.onDidChange(t=>{if(e){let r=(t.currentY-e.startY)/this.editor.getOption(59),n=r<0?Math.ceil(r):Math.floor(r),i=e.heightInLines+n;i>5&&i<35&&this._relayout(i)}}))}getHorizontalSashLeft(){return 0}getHorizontalSashTop(){return(this.domNode.style.height===null?0:parseInt(this.domNode.style.height))-this._decoratingElementsHeight()/2}getHorizontalSashWidth(){let e=this.editor.getLayoutInfo();return e.width-e.minimap.minimapWidth}};Z();Pe();Wm();Pe();Pe();Wm();$m();ao();Ne();var p0=class extends Ql{constructor(e,t){super();this._onDidChangeVisibility=this._register(new j),this.onDidChangeVisibility=this._onDidChangeVisibility.event,this._element=B(e,V(".monaco-dropdown")),this._label=B(this._element,V(".dropdown-label"));let r=t.labelRenderer;r||(r=i=>(i.textContent=t.label||"",null));for(let i of[Kr.CLICK,Kr.MOUSE_DOWN,rc.Tap])this._register(qe(this.element,i,a=>sn.stop(a,!0)));for(let i of[Kr.MOUSE_DOWN,rc.Tap])this._register(qe(this._label,i,a=>{a instanceof MouseEvent&&a.detail>1||(this.visible?this.hide():this.show())}));this._register(qe(this._label,Kr.KEY_UP,i=>{let a=new no(i);(a.equals(3)||a.equals(10))&&(sn.stop(i,!0),this.visible?this.hide():this.show())}));let n=r(this._label);n&&this._register(n),this._register(Ts.addTarget(this._label))}get element(){return this._element}show(){this.visible||(this.visible=!0,this._onDidChangeVisibility.fire(!0))}hide(){this.visible&&(this.visible=!1,this._onDidChangeVisibility.fire(!1))}dispose(){super.dispose(),this.hide(),this.boxContainer&&(this.boxContainer.remove(),this.boxContainer=void 0),this.contents&&(this.contents.remove(),this.contents=void 0),this._label&&(this._label.remove(),this._label=void 0)}},$h=class extends p0{constructor(e,t){super(e,t);this._actions=[],this._contextMenuProvider=t.contextMenuProvider,this.actions=t.actions||[],this.actionProvider=t.actionProvider,this.menuClassName=t.menuClassName||"",this.menuAsChild=!!t.menuAsChild}set menuOptions(e){this._menuOptions=e}get menuOptions(){return this._menuOptions}get actions(){return this.actionProvider?this.actionProvider.getActions():this._actions}set actions(e){this._actions=e}show(){super.show(),this.element.classList.add("active"),this._contextMenuProvider.showContextMenu({getAnchor:()=>this.element,getActions:()=>this.actions,getActionsContext:()=>this.menuOptions?this.menuOptions.context:null,getActionViewItem:e=>this.menuOptions&&this.menuOptions.actionViewItemProvider?this.menuOptions.actionViewItemProvider(e):void 0,getKeyBinding:e=>this.menuOptions&&this.menuOptions.getKeyBinding?this.menuOptions.getKeyBinding(e):void 0,getMenuClassName:()=>this.menuClassName,onHide:()=>this.onHide(),actionRunner:this.menuOptions?this.menuOptions.actionRunner:void 0,anchorAlignment:this.menuOptions?this.menuOptions.anchorAlignment:0,domForShadowRoot:this.menuAsChild?this.element:void 0})}hide(){super.hide()}onHide(){this.hide(),this.element.classList.remove("active")}};Ne();var zp=class extends lp{constructor(e,t,r,n=Object.create(null)){super(null,e,n);this.actionItem=null,this._onDidChangeVisibility=this._register(new j),this.menuActionsOrProvider=t,this.contextMenuProvider=r,this.options=n,this.options.actionRunner&&(this.actionRunner=this.options.actionRunner)}render(e){this.actionItem=e;let t=i=>{this.element=B(i,V("a.action-label"));let a=[];return typeof this.options.classNames=="string"?a=this.options.classNames.split(/\s+/g).filter(s=>!!s):this.options.classNames&&(a=this.options.classNames),a.find(s=>s==="icon")||a.push("codicon"),this.element.classList.add(...a),this.element.setAttribute("role","button"),this.element.setAttribute("aria-haspopup","true"),this.element.setAttribute("aria-expanded","false"),this.element.title=this._action.label||"",null},r=Array.isArray(this.menuActionsOrProvider),n={contextMenuProvider:this.contextMenuProvider,labelRenderer:t,menuAsChild:this.options.menuAsChild,actions:r?this.menuActionsOrProvider:void 0,actionProvider:r?void 0:this.menuActionsOrProvider};if(this.dropdownMenu=this._register(new $h(e,n)),this._register(this.dropdownMenu.onDidChangeVisibility(i=>{var a;(a=this.element)===null||a===void 0||a.setAttribute("aria-expanded",`${i}`),this._onDidChangeVisibility.fire(i)})),this.dropdownMenu.menuOptions={actionViewItemProvider:this.options.actionViewItemProvider,actionRunner:this.actionRunner,getKeyBinding:this.options.keybindingProvider,context:this._context},this.options.anchorAlignmentProvider){let i=this;this.dropdownMenu.menuOptions=Object.assign(Object.assign({},this.dropdownMenu.menuOptions),{get anchorAlignment(){return i.options.anchorAlignmentProvider()}})}this.updateEnabled()}setActionContext(e){super.setActionContext(e),this.dropdownMenu&&(this.dropdownMenu.menuOptions?this.dropdownMenu.menuOptions.context=e:this.dropdownMenu.menuOptions={context:e})}updateEnabled(){var e,t;let r=!this.getAction().enabled;(e=this.actionItem)===null||e===void 0||e.classList.toggle("disabled",r),(t=this.element)===null||t===void 0||t.classList.toggle("disabled",r)}};ao();W();Ir();Z();ar();Le();He();qr();Oe();var eg=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},ti=function(o,e){return function(t,r){e(t,r,o)}},f0=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})};function m0(o,e,t,r,n,i,a){let s=o.getActions(e);return Uw(s,t,!1,typeof r=="string"?d=>d===r:r,n,i,a),Hw(s)}function Hw(o){let e=new P;for(let[,t]of o)for(let r of t)e.add(r);return e}function Uw(o,e,t,r=s=>s==="navigation",n=Number.MAX_SAFE_INTEGER,i=()=>!1,a=!1){let s,l;Array.isArray(e)?(s=e,l=e):(s=e.primary,l=e.secondary);let d=new Set;for(let[c,u]of o){let f;r(c)?(f=s,f.length>0&&a&&f.push(new Jn)):(f=l,f.length>0&&f.push(new Jn));for(let m of u){t&&(m=m instanceof fa&&m.alt?m.alt:m);let g=f.push(m);m instanceof Ru&&d.add({group:c,action:m,index:g-1})}}for(let{group:c,action:u,index:f}of d){let m=r(c)?s:l,g=u.actions;(g.length<=1||m.length+g.length-2<=n)&&i(u,c,m.length)&&m.splice(f,1,...g)}if(s!==l&&s.length>n){let c=s.splice(n,s.length-n);l.unshift(...c,new Jn)}}var So=class extends fc{constructor(e,t,r,n,i){super(void 0,e,{icon:!!(e.class||e.item.icon),label:!e.class&&!e.item.icon,draggable:t==null?void 0:t.draggable});this._keybindingService=r,this._notificationService=n,this._contextKeyService=i,this._wantsAltCommand=!1,this._itemClassDispose=this._register(new et),this._altKey=bb.getInstance()}get _menuItemAction(){return this._action}get _commandAction(){return this._wantsAltCommand&&this._menuItemAction.alt||this._menuItemAction}onClick(e){return f0(this,void 0,void 0,function*(){e.preventDefault(),e.stopPropagation();try{yield this.actionRunner.run(this._commandAction,this._context)}catch(t){this._notificationService.error(t)}})}render(e){super.render(e),e.classList.add("menu-entry"),this._updateItemClass(this._menuItemAction.item);let t=!1,r=this._altKey.keyStatus.altKey||(hi||Ol)&&this._altKey.keyStatus.shiftKey,n=()=>{let i=t&&r;i!==this._wantsAltCommand&&(this._wantsAltCommand=i,this.updateLabel(),this.updateTooltip(),this.updateClass())};this._menuItemAction.alt&&this._register(this._altKey.event(i=>{r=i.altKey||(hi||Ol)&&i.shiftKey,n()})),this._register(qe(e,"mouseleave",i=>{t=!1,n()})),this._register(qe(e,"mouseenter",i=>{t=!0,n()}))}updateLabel(){this.options.label&&this.label&&(this.label.textContent=this._commandAction.label)}updateTooltip(){if(this.label){let e=this._keybindingService.lookupKeybinding(this._commandAction.id,this._contextKeyService),t=e&&e.getLabel(),r=this._commandAction.tooltip||this._commandAction.label,n=t?p("titleAndKb","{0} ({1})",r,t):r;if(!this._wantsAltCommand&&this._menuItemAction.alt){let i=this._menuItemAction.alt.tooltip||this._menuItemAction.alt.label,a=this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id,this._contextKeyService),s=a&&a.getLabel(),l=s?p("titleAndKb","{0} ({1})",i,s):i;n+=`
[${F1.modifierLabels[ov].altKey}] ${l}`}this.label.title=n}}updateClass(){this.options.icon&&(this._commandAction!==this._menuItemAction?this._menuItemAction.alt&&this._updateItemClass(this._menuItemAction.alt.item):this._menuItemAction.alt&&this._updateItemClass(this._menuItemAction.item))}_updateItemClass(e){var t;this._itemClassDispose.value=void 0;let{element:r,label:n}=this;if(!r||!n)return;let i=this._commandAction.checked&&((t=e.toggled)===null||t===void 0?void 0:t.icon)?e.toggled.icon:e.icon;if(!!i)if(it.isThemeIcon(i)){let a=it.asClassNameArray(i);n.classList.add(...a),this._itemClassDispose.value=Ve(()=>{n.classList.remove(...a)})}else i.light&&n.style.setProperty("--menu-entry-icon-light",$l(i.light)),i.dark&&n.style.setProperty("--menu-entry-icon-dark",$l(i.dark)),n.classList.add("icon"),this._itemClassDispose.value=Ve(()=>{n.classList.remove("icon"),n.style.removeProperty("--menu-entry-icon-light"),n.style.removeProperty("--menu-entry-icon-dark")})}};So=eg([ti(2,at),ti(3,$e),ti(4,re)],So);var Qh=class extends zp{constructor(e,t,r){var n,i;let a=Object.assign({},t!=null?t:Object.create(null),{menuAsChild:(n=t==null?void 0:t.menuAsChild)!==null&&n!==void 0?n:!1,classNames:(i=t==null?void 0:t.classNames)!==null&&i!==void 0?i:it.isThemeIcon(e.item.icon)?it.asClassName(e.item.icon):void 0});super(e,{getActions:()=>e.actions},r,a)}render(e){if(super.render(e),this.element){e.classList.add("menu-entry");let{icon:t}=this._action.item;t&&!it.isThemeIcon(t)&&(this.element.classList.add("icon"),t.light&&this.element.style.setProperty("--menu-entry-icon-light",$l(t.light)),t.dark&&this.element.style.setProperty("--menu-entry-icon-dark",$l(t.dark)))}}};Qh=eg([ti(2,Ai)],Qh);var Zh=class extends lp{constructor(e,t,r,n,i,a,s,l){var d,c,u;super(null,e);this._keybindingService=r,this._notificationService=n,this._contextMenuService=i,this._menuService=a,this._instaService=s,this._storageService=l,this._container=null,this._storageKey=`${e.item.submenu._debugName}_lastActionId`;let f,m=l.get(this._storageKey,1);m&&(f=e.actions.find(b=>m===b.id)),f||(f=e.actions[0]),this._defaultAction=this._instaService.createInstance(So,f,void 0);let g=Object.assign({},t!=null?t:Object.create(null),{menuAsChild:(d=t==null?void 0:t.menuAsChild)!==null&&d!==void 0?d:!0,classNames:(c=t==null?void 0:t.classNames)!==null&&c!==void 0?c:["codicon","codicon-chevron-down"],actionRunner:(u=t==null?void 0:t.actionRunner)!==null&&u!==void 0?u:new Ql});this._dropdown=new zp(e,e.actions,this._contextMenuService,g),this._dropdown.actionRunner.onDidRun(b=>{b.action instanceof fa&&this.update(b.action)})}update(e){this._storageService.store(this._storageKey,e.id,1,0),this._defaultAction.dispose(),this._defaultAction=this._instaService.createInstance(So,e,void 0),this._defaultAction.actionRunner=new class extends Ql{runAction(t,r){return f0(this,void 0,void 0,function*(){yield t.run(void 0)})}},this._container&&this._defaultAction.render(vb(this._container,V(".action-container")))}setActionContext(e){super.setActionContext(e),this._defaultAction.setActionContext(e),this._dropdown.setActionContext(e)}render(e){this._container=e,super.render(this._container),this._container.classList.add("monaco-dropdown-with-default");let t=V(".action-container");this._defaultAction.render(B(this._container,t)),this._register(qe(t,Kr.KEY_DOWN,n=>{let i=new no(n);i.equals(17)&&(this._defaultAction.element.tabIndex=-1,this._dropdown.focus(),i.stopPropagation())}));let r=V(".dropdown-action-container");this._dropdown.render(B(this._container,r)),this._register(qe(r,Kr.KEY_DOWN,n=>{var i;let a=new no(n);a.equals(15)&&(this._defaultAction.element.tabIndex=0,this._dropdown.setFocusable(!1),(i=this._defaultAction.element)===null||i===void 0||i.focus(),a.stopPropagation())}))}focus(e){e?this._dropdown.focus():(this._defaultAction.element.tabIndex=0,this._defaultAction.element.focus())}blur(){this._defaultAction.element.tabIndex=-1,this._dropdown.blur(),this._container.blur()}setFocusable(e){e?this._defaultAction.element.tabIndex=0:(this._defaultAction.element.tabIndex=-1,this._dropdown.setFocusable(!1))}dispose(){this._defaultAction.dispose(),this._dropdown.dispose(),super.dispose()}};Zh=eg([ti(2,at),ti(3,$e),ti(4,Ai),ti(5,Xn),ti(6,le),ti(7,lr)],Zh);function h0(o,e,t){return e instanceof fa?o.createInstance(So,e,void 0):e instanceof Mu?e.item.rememberDefaultAction?o.createInstance(Zh,e,t):o.createInstance(Qh,e,t):void 0}Le();ro();He();mt();var g0=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},_0=function(o,e){return function(t,r){e(t,r,o)}},rg=Mr("IPeekViewService");Or(rg,class{constructor(){this._widgets=new Map}addExclusiveWidget(o,e){let t=this._widgets.get(o);t&&(t.listener.dispose(),t.widget.dispose());let r=()=>{let n=this._widgets.get(o);n&&n.widget===e&&(n.listener.dispose(),this._widgets.delete(o))};this._widgets.set(o,{widget:e,listener:e.onDidClose(r)})}});var Gt;(function(o){o.inPeekEditor=new fe("inReferenceSearchEditor",!0,p("inReferenceSearchEditor","Whether the current code editor is embedded inside peek")),o.notInPeekEditor=o.inPeekEditor.toNegated()})(Gt||(Gt={}));var Pc=class{constructor(e,t){e instanceof kn&&Gt.inPeekEditor.bindTo(t)}dispose(){}};Pc.ID="editor.contrib.referenceController";Pc=g0([_0(1,re)],Pc);Q(Pc.ID,Pc);function y0(o){let e=o.get(Ue).getFocusedCodeEditor();return e instanceof kn?e.getParentEditor():e}var Ww={headerBackgroundColor:xe.white,primaryHeadingColor:xe.fromHex("#333333"),secondaryHeadingColor:xe.fromHex("#6c6c6cb3")},js=class extends Yh{constructor(e,t,r){super(e,t);this.instantiationService=r,this._onDidClose=new j,this.onDidClose=this._onDidClose.event,ls(this.options,Ww,!1)}dispose(){this.disposed||(this.disposed=!0,super.dispose(),this._onDidClose.fire(this))}style(e){let t=this.options;e.headerBackgroundColor&&(t.headerBackgroundColor=e.headerBackgroundColor),e.primaryHeadingColor&&(t.primaryHeadingColor=e.primaryHeadingColor),e.secondaryHeadingColor&&(t.secondaryHeadingColor=e.secondaryHeadingColor),super.style(e)}_applyStyles(){super._applyStyles();let e=this.options;this._headElement&&e.headerBackgroundColor&&(this._headElement.style.backgroundColor=e.headerBackgroundColor.toString()),this._primaryHeading&&e.primaryHeadingColor&&(this._primaryHeading.style.color=e.primaryHeadingColor.toString()),this._secondaryHeading&&e.secondaryHeadingColor&&(this._secondaryHeading.style.color=e.secondaryHeadingColor.toString()),this._bodyElement&&e.frameColor&&(this._bodyElement.style.borderColor=e.frameColor.toString())}_fillContainer(e){this.setCssClass("peekview-widget"),this._headElement=V(".head"),this._bodyElement=V(".body"),this._fillHead(this._headElement),this._fillBody(this._bodyElement),e.appendChild(this._headElement),e.appendChild(this._bodyElement)}_fillHead(e,t){let r=V(".peekview-title");this.options.supportOnTitleClick&&(r.classList.add("clickable"),Fr(r,"click",a=>this._onTitleClick(a))),B(this._headElement,r),this._fillTitleIcon(r),this._primaryHeading=V("span.filename"),this._secondaryHeading=V("span.dirname"),this._metaHeading=V("span.meta"),B(r,this._primaryHeading,this._secondaryHeading,this._metaHeading);let n=V(".peekview-actions");B(this._headElement,n);let i=this._getActionBarOptions();this._actionbarWidget=new uo(n,i),this._disposables.add(this._actionbarWidget),t||this._actionbarWidget.push(new Ei("peekview.close",p("label.close","Close"),q.close.classNames,!0,()=>(this.dispose(),Promise.resolve())),{label:!1,icon:!0})}_fillTitleIcon(e){}_getActionBarOptions(){return{actionViewItemProvider:h0.bind(void 0,this.instantiationService),orientation:0}}_onTitleClick(e){}setTitle(e,t){this._primaryHeading&&this._secondaryHeading&&(this._primaryHeading.innerText=e,this._primaryHeading.setAttribute("title",e),t?this._secondaryHeading.innerText=t:Tr(this._secondaryHeading))}setMetaTitle(e){this._metaHeading&&(e?(this._metaHeading.innerText=e,ir(this._metaHeading)):Ut(this._metaHeading))}_doLayout(e,t){if(!this._isShowing&&e<0){this.dispose();return}let r=Math.ceil(this.editor.getOption(59)*1.2),n=Math.round(e-(r+2));this._doLayoutHead(r,t),this._doLayoutBody(n,t)}_doLayoutHead(e,t){this._headElement&&(this._headElement.style.height=`${e}px`,this._headElement.style.lineHeight=this._headElement.style.height)}_doLayoutBody(e,t){this._bodyElement&&(this._bodyElement.style.height=`${e}px`)}};js=g0([_0(2,le)],js);var v0=J("peekViewTitle.background",{dark:or(so,.1),light:or(so,.1),hc:null},p("peekViewTitleBackground","Background color of the peek view title area.")),Kp=J("peekViewTitleLabel.foreground",{dark:xe.white,light:xe.black,hc:xe.white},p("peekViewTitleForeground","Color of the peek view title.")),qp=J("peekViewTitleDescription.foreground",{dark:"#ccccccb3",light:"#616161",hc:"#FFFFFF99"},p("peekViewTitleInfoForeground","Color of the peek view title info.")),b0=J("peekView.border",{dark:so,light:so,hc:cn},p("peekViewBorder","Color of the peek view borders and arrow.")),S0=J("peekViewResult.background",{dark:"#252526",light:"#F3F3F3",hc:xe.black},p("peekViewResultsBackground","Background color of the peek view result list.")),t7=J("peekViewResult.lineForeground",{dark:"#bbbbbb",light:"#646465",hc:xe.white},p("peekViewResultsMatchForeground","Foreground color for line nodes in the peek view result list.")),r7=J("peekViewResult.fileForeground",{dark:xe.white,light:"#1E1E1E",hc:xe.white},p("peekViewResultsFileForeground","Foreground color for file nodes in the peek view result list.")),n7=J("peekViewResult.selectionBackground",{dark:"#3399ff33",light:"#3399ff33",hc:null},p("peekViewResultsSelectionBackground","Background color of the selected entry in the peek view result list.")),i7=J("peekViewResult.selectionForeground",{dark:xe.white,light:"#6C6C6C",hc:xe.white},p("peekViewResultsSelectionForeground","Foreground color of the selected entry in the peek view result list.")),tg=J("peekViewEditor.background",{dark:"#001F33",light:"#F2F8FC",hc:xe.black},p("peekViewEditorBackground","Background color of the peek view editor.")),a7=J("peekViewEditorGutter.background",{dark:tg,light:tg,hc:tg},p("peekViewEditorGutterBackground","Background color of the gutter in the peek view editor.")),o7=J("peekViewResult.matchHighlightBackground",{dark:"#ea5c004d",light:"#ea5c004d",hc:null},p("peekViewResultsMatchHighlight","Match highlight color in the peek view result list.")),s7=J("peekViewEditor.matchHighlightBackground",{dark:"#ff8f0099",light:"#f5d802de",hc:null},p("peekViewEditorMatchHighlight","Match highlight color in the peek view editor.")),l7=J("peekViewEditor.matchHighlightBorder",{dark:null,light:null,hc:oo},p("peekViewEditorMatchHighlightBorder","Match highlight border in the peek view editor."));Z();Le();mt();Oe();ql();An();we();gi();Ir();Jt();Xt();yc();gh();pe();Er();tt();ee();Be();Re();we();Ae();gi();W();Er();tt();ee();Z();xt();wn();Le();He();Zl();Ae();Ne();W();hs();Br();Ye();ee();Z();var zw=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},fn=class{constructor(e,t,r,n){this.isProviderFirst=e,this.parent=t,this.link=r,this._rangeCallback=n,this.id=_p.nextId()}get uri(){return this.link.uri}get range(){var e,t;return(t=(e=this._range)!==null&&e!==void 0?e:this.link.targetSelectionRange)!==null&&t!==void 0?t:this.link.range}set range(e){this._range=e,this._rangeCallback(this)}get ariaMessage(){var e;let t=(e=this.parent.getPreview(this))===null||e===void 0?void 0:e.preview(this.range);return t?p({key:"aria.oneReference.preview",comment:["Placeholders are: 0: filename, 1:line number, 2: column number, 3: preview snippet of source code"]},"symbol in {0} on line {1} at column {2}, {3}",Qt(this.uri),this.range.startLineNumber,this.range.startColumn,t.value):p("aria.oneReference","symbol in {0} on line {1} at column {2}",Qt(this.uri),this.range.startLineNumber,this.range.startColumn)}},E0=class{constructor(e){this._modelReference=e}dispose(){this._modelReference.dispose()}preview(e,t=8){let r=this._modelReference.object.textEditorModel;if(!r)return;let{startLineNumber:n,startColumn:i,endLineNumber:a,endColumn:s}=e,l=r.getWordUntilPosition({lineNumber:n,column:i-t}),d=new y(n,l.startColumn,n,i),c=new y(a,s,a,1073741824),u=r.getValueInRange(d).replace(/^\s+/,""),f=r.getValueInRange(e),m=r.getValueInRange(c).replace(/\s+$/,"");return{value:u+f+m,highlight:{start:u.length,end:u.length+f.length}}}},La=class{constructor(e,t){this.parent=e,this.uri=t,this.children=[],this._previews=new Gv}dispose(){St(this._previews.values()),this._previews.clear()}getPreview(e){return this._previews.get(e.uri)}get ariaMessage(){let e=this.children.length;return e===1?p("aria.fileReferences.1","1 symbol in {0}, full path {1}",Qt(this.uri),this.uri.fsPath):p("aria.fileReferences.N","{0} symbols in {1}, full path {2}",e,Qt(this.uri),this.uri.fsPath)}resolve(e){return zw(this,void 0,void 0,function*(){if(this._previews.size!==0)return this;for(let t of this.children)if(!this._previews.has(t.uri))try{let r=yield e.createModelReference(t.uri);this._previews.set(t.uri,new E0(r))}catch(r){ce(r)}return this})}},zt=class{constructor(e,t){this.groups=[],this.references=[],this._onDidChangeReferenceRange=new j,this.onDidChangeReferenceRange=this._onDidChangeReferenceRange.event,this._links=e,this._title=t;let[r]=e;e.sort(zt._compareReferences);let n;for(let i of e)if((!n||!th.isEqual(n.uri,i.uri,!0))&&(n=new La(this,i.uri),this.groups.push(n)),n.children.length===0||zt._compareReferences(i,n.children[n.children.length-1])!==0){let a=new fn(r===i,n,i,s=>this._onDidChangeReferenceRange.fire(s));this.references.push(a),n.children.push(a)}}dispose(){St(this.groups),this._onDidChangeReferenceRange.dispose(),this.groups.length=0}clone(){return new zt(this._links,this._title)}get title(){return this._title}get isEmpty(){return this.groups.length===0}get ariaMessage(){return this.isEmpty?p("aria.result.0","No results found"):this.references.length===1?p("aria.result.1","Found 1 symbol in {0}",this.references[0].uri.fsPath):this.groups.length===1?p("aria.result.n1","Found {0} symbols in {1}",this.references.length,this.groups[0].uri.fsPath):p("aria.result.nm","Found {0} symbols in {1} files",this.references.length,this.groups.length)}nextOrPreviousReference(e,t){let{parent:r}=e,n=r.children.indexOf(e),i=r.children.length,a=r.parent.groups.length;return a===1||t&&n+1<i||!t&&n>0?(t?n=(n+1)%i:n=(n+i-1)%i,r.children[n]):(n=r.parent.groups.indexOf(r),t?(n=(n+1)%a,r.parent.groups[n].children[0]):(n=(n+a-1)%a,r.parent.groups[n].children[r.parent.groups[n].children.length-1]))}nearestReference(e,t){let r=this.references.map((n,i)=>({idx:i,prefixLen:la(n.uri.toString(),e.toString()),offsetDist:Math.abs(n.range.startLineNumber-t.lineNumber)*100+Math.abs(n.range.startColumn-t.column)})).sort((n,i)=>n.prefixLen>i.prefixLen?-1:n.prefixLen<i.prefixLen?1:n.offsetDist<i.offsetDist?-1:n.offsetDist>i.offsetDist?1:0)[0];if(r)return this.references[r.idx]}referenceAt(e,t){for(let r of this.references)if(r.uri.toString()===e.toString()&&y.containsPosition(r.range,t))return r}firstReference(){for(let e of this.references)if(e.isProviderFirst)return e;return this.references[0]}static _compareReferences(e,t){return th.compare(e.uri,t.uri)||y.compareRangesUsingStarts(e.range,t.range)}};Pe();$n();Ne();W();Yl();Br();ee();jt();on();nh();an();Si();Pe();jL();Yl();Ir();Br();Xt();function Jp(o){if(!o)return;typeof o=="string"&&(o=Te.file(o));let e=Qt(o)||(o.scheme===Et.file?o.fsPath:o.path);return hi&&Mv(e)?Xp(e):e}function Xp(o,e){return Ov(o,e)?o.charAt(0).toUpperCase()+o.slice(1):o}W();Br();Si();Z();He();qr();Oe();var Qp=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Mc=function(o,e){return function(t,r){e(t,r,o)}},Yp=class{constructor(e){this._resolverService=e}hasChildren(e){return e instanceof zt||e instanceof La}getChildren(e){if(e instanceof zt)return e.groups;if(e instanceof La)return e.resolve(this._resolverService).then(t=>t.children);throw new Error("bad tree")}};Yp=Qp([Mc(0,Wt)],Yp);var ig=class{getHeight(){return 23}getTemplateId(e){return e instanceof La?zs.id:Eo.id}},$p=class{constructor(e){this._keybindingService=e}getKeyboardNavigationLabel(e){var t;if(e instanceof fn){let r=(t=e.parent.getPreview(e))===null||t===void 0?void 0:t.preview(e.range);if(r)return r.value}return Qt(e.uri)}};$p=Qp([Mc(0,at)],$p);var ag=class{getId(e){return e instanceof fn?e.id:e.uri}},ng=class extends F{constructor(e,t,r){super();this._uriLabel=t;let n=document.createElement("div");n.classList.add("reference-file"),this.file=this._register(new bp(n,{supportHighlights:!0})),this.badge=new oS(B(n,V(".count"))),this._register($1(this.badge,r)),e.appendChild(n)}set(e,t){let r=Ns(e.uri);this.file.setLabel(Jp(e.uri),this._uriLabel.getUriLabel(r,{relative:!0}),{title:this._uriLabel.getUriLabel(e.uri),matches:t});let n=e.children.length;this.badge.setCount(n),n>1?this.badge.setTitleFormat(p("referencesCount","{0} references",n)):this.badge.setTitleFormat(p("referenceCount","{0} reference",n))}};ng=Qp([Mc(1,ba),Mc(2,Ot)],ng);var zs=class T0{constructor(e){this._instantiationService=e,this.templateId=T0.id}renderTemplate(e){return this._instantiationService.createInstance(ng,e)}renderElement(e,t,r){r.set(e.element,mo(e.filterData))}disposeTemplate(e){e.dispose()}};zs.id="FileReferencesRenderer";zs=Qp([Mc(0,le)],zs);var x0=class{constructor(e){this.label=new uS(e)}set(e,t){var r;let n=(r=e.parent.getPreview(e))===null||r===void 0?void 0:r.preview(e.range);if(!n||!n.value)this.label.set(`${Qt(e.uri)}:${e.range.startLineNumber+1}:${e.range.startColumn+1}`);else{let{value:i,highlight:a}=n;t&&!ho.isDefault(t)?(this.label.element.classList.toggle("referenceMatch",!1),this.label.set(i,mo(t))):(this.label.element.classList.toggle("referenceMatch",!0),this.label.set(i,[a]))}}},Eo=class{constructor(){this.templateId=Eo.id}renderTemplate(e){return new x0(e)}renderElement(e,t,r){r.set(e.element,e.filterData)}disposeTemplate(){}};Eo.id="OneReferenceRenderer";var og=class{getWidgetAriaLabel(){return p("treeAriaLabel","References")}getAriaLabel(e){return e.ariaMessage}};Z();He();qr();Oe();cD();var Kw=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Mi=function(o,e){return function(t,r){e(t,r,o)}},C0=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},Oc=class{constructor(e,t){this._editor=e,this._model=t,this._decorations=new Map,this._decorationIgnoreSet=new Set,this._callOnDispose=new P,this._callOnModelChange=new P,this._callOnDispose.add(this._editor.onDidChangeModel(()=>this._onModelChanged())),this._onModelChanged()}dispose(){this._callOnModelChange.dispose(),this._callOnDispose.dispose(),this.removeDecorations()}_onModelChanged(){this._callOnModelChange.clear();let e=this._editor.getModel();if(!!e){for(let t of this._model.references)if(t.uri.toString()===e.uri.toString()){this._addDecorations(t.parent);return}}}_addDecorations(e){if(!this._editor.hasModel())return;this._callOnModelChange.add(this._editor.getModel().onDidChangeDecorations(()=>this._onDecorationChanged()));let t=[],r=[];for(let i=0,a=e.children.length;i<a;i++){let s=e.children[i];this._decorationIgnoreSet.has(s.id)||s.uri.toString()===this._editor.getModel().uri.toString()&&(t.push({range:s.range,options:Oc.DecorationOptions}),r.push(i))}let n=this._editor.deltaDecorations([],t);for(let i=0;i<n.length;i++)this._decorations.set(n[i],e.children[r[i]])}_onDecorationChanged(){let e=[],t=this._editor.getModel();if(!!t){for(let[r,n]of this._decorations){let i=t.getDecorationRange(r);if(!i)continue;let a=!1;if(!y.equalsRange(i,n.range)){if(y.spansMultipleLines(i))a=!0;else{let s=n.range.endColumn-n.range.startColumn,l=i.endColumn-i.startColumn;s!==l&&(a=!0)}a?(this._decorationIgnoreSet.add(n.id),e.push(r)):n.range=i}}for(let r=0,n=e.length;r<n;r++)this._decorations.delete(e[r]);this._editor.deltaDecorations(e,[])}}removeDecorations(){this._editor.deltaDecorations([...this._decorations.keys()],[]),this._decorations.clear()}};Oc.DecorationOptions=Se.register({description:"reference-decoration",stickiness:1,className:"reference-decoration"});var sg=class{constructor(){this.ratio=.7,this.heightInLines=18}static fromJSON(e){let t,r;try{let n=JSON.parse(e);t=n.ratio,r=n.heightInLines}catch(n){}return{ratio:t||.7,heightInLines:r||18}}},L0=class extends hS{},Zp=class extends js{constructor(e,t,r,n,i,a,s,l,d,c,u,f){super(e,{showFrame:!1,showArrow:!0,isResizeable:!0,isAccessible:!0,supportOnTitleClick:!0},a);this._defaultTreeKeyboardSupport=t,this.layoutData=r,this._textModelResolverService=i,this._instantiationService=a,this._peekViewService=s,this._uriLabel=l,this._undoRedoService=d,this._keybindingService=c,this._languageService=u,this._languageConfigurationService=f,this._disposeOnNewModel=new P,this._callOnDispose=new P,this._onDidSelectReference=new j,this.onDidSelectReference=this._onDidSelectReference.event,this._dim=new lt(0,0),this._applyTheme(n.getColorTheme()),this._callOnDispose.add(n.onDidColorThemeChange(this._applyTheme.bind(this))),this._peekViewService.addExclusiveWidget(e,this),this.create()}dispose(){this.setModel(void 0),this._callOnDispose.dispose(),this._disposeOnNewModel.dispose(),St(this._preview),St(this._previewNotAvailableMessage),St(this._tree),St(this._previewModelReference),this._splitView.dispose(),super.dispose()}_applyTheme(e){let t=e.getColor(b0)||xe.transparent;this.style({arrowColor:t,frameColor:t,headerBackgroundColor:e.getColor(v0)||xe.transparent,primaryHeadingColor:e.getColor(Kp),secondaryHeadingColor:e.getColor(qp)})}show(e){this.editor.revealRangeInCenterIfOutsideViewport(e,0),super.show(e,this.layoutData.heightInLines||18)}focusOnReferenceTree(){this._tree.domFocus()}focusOnPreviewEditor(){this._preview.focus()}isPreviewEditorFocused(){return this._preview.hasTextFocus()}_onTitleClick(e){this._preview&&this._preview.getModel()&&this._onDidSelectReference.fire({element:this._getFocusedReference(),kind:e.ctrlKey||e.metaKey||e.altKey?"side":"open",source:"title"})}_fillBody(e){this.setCssClass("reference-zone-widget"),this._messageContainer=B(e,V("div.messages")),Ut(this._messageContainer),this._splitView=new mS(e,{orientation:1}),this._previewContainer=B(e,V("div.preview.inline"));let t={scrollBeyondLastLine:!1,scrollbar:{verticalScrollbarSize:14,horizontal:"auto",useShadows:!0,verticalHasArrows:!1,horizontalHasArrows:!1,alwaysConsumeMouseWheel:!1},overviewRulerLanes:2,fixedOverflowWidgets:!0,minimap:{enabled:!1}};this._preview=this._instantiationService.createInstance(kn,this._previewContainer,t,this.editor),Ut(this._previewContainer),this._previewNotAvailableMessage=new Rs(p("missingPreviewMessage","no preview available"),Fs,Rs.DEFAULT_CREATION_OPTIONS,null,this._undoRedoService,this._languageService,this._languageConfigurationService),this._treeContainer=B(e,V("div.ref-tree.inline"));let r={keyboardSupport:this._defaultTreeKeyboardSupport,accessibilityProvider:new og,keyboardNavigationLabelProvider:this._instantiationService.createInstance($p),identityProvider:new ag,openOnSingleClick:!0,selectionNavigation:!0,overrideStyles:{listBackground:S0}};this._defaultTreeKeyboardSupport&&this._callOnDispose.add(Fr(this._treeContainer,"keydown",i=>{i.equals(9)&&(this._keybindingService.dispatchEvent(i,i.target),i.stopPropagation())},!0)),this._tree=this._instantiationService.createInstance(L0,"ReferencesWidget",this._treeContainer,new ig,[this._instantiationService.createInstance(zs),this._instantiationService.createInstance(Eo)],this._instantiationService.createInstance(Yp),r),this._splitView.addView({onDidChange:ut.None,element:this._previewContainer,minimumSize:200,maximumSize:Number.MAX_VALUE,layout:i=>{this._preview.layout({height:this._dim.height,width:i})}},uh.Distribute),this._splitView.addView({onDidChange:ut.None,element:this._treeContainer,minimumSize:100,maximumSize:Number.MAX_VALUE,layout:i=>{this._treeContainer.style.height=`${this._dim.height}px`,this._treeContainer.style.width=`${i}px`,this._tree.layout(this._dim.height,i)}},uh.Distribute),this._disposables.add(this._splitView.onDidSashChange(()=>{this._dim.width&&(this.layoutData.ratio=this._splitView.getViewSize(0)/this._dim.width)},void 0));let n=(i,a)=>{i instanceof fn&&(a==="show"&&this._revealReference(i,!1),this._onDidSelectReference.fire({element:i,kind:a,source:"tree"}))};this._tree.onDidOpen(i=>{i.sideBySide?n(i.element,"side"):i.editorOptions.pinned?n(i.element,"goto"):n(i.element,"show")}),Ut(this._treeContainer)}_onWidth(e){this._dim&&this._doLayoutBody(this._dim.height,e)}_doLayoutBody(e,t){super._doLayoutBody(e,t),this._dim=new lt(t,e),this.layoutData.heightInLines=this._viewZone?this._viewZone.heightInLines:this.layoutData.heightInLines,this._splitView.layout(t),this._splitView.resizeView(0,t*this.layoutData.ratio)}setSelection(e){return this._revealReference(e,!0).then(()=>{!this._model||(this._tree.setSelection([e]),this._tree.setFocus([e]))})}setModel(e){return this._disposeOnNewModel.clear(),this._model=e,this._model?this._onNewModel():Promise.resolve()}_onNewModel(){return this._model?this._model.isEmpty?(this.setTitle(""),this._messageContainer.innerText=p("noResults","No results"),ir(this._messageContainer),Promise.resolve(void 0)):(Ut(this._messageContainer),this._decorationsManager=new Oc(this._preview,this._model),this._disposeOnNewModel.add(this._decorationsManager),this._disposeOnNewModel.add(this._model.onDidChangeReferenceRange(e=>this._tree.rerender(e))),this._disposeOnNewModel.add(this._preview.onMouseDown(e=>{let{event:t,target:r}=e;if(t.detail!==2)return;let n=this._getFocusedReference();!n||this._onDidSelectReference.fire({element:{uri:n.uri,range:r.range},kind:t.ctrlKey||t.metaKey||t.altKey?"side":"open",source:"editor"})})),this.container.classList.add("results-loaded"),ir(this._treeContainer),ir(this._previewContainer),this._splitView.layout(this._dim.width),this.focusOnReferenceTree(),this._tree.setInput(this._model.groups.length===1?this._model.groups[0]:this._model)):Promise.resolve(void 0)}_getFocusedReference(){let[e]=this._tree.getFocus();if(e instanceof fn)return e;if(e instanceof La&&e.children.length>0)return e.children[0]}revealReference(e){return C0(this,void 0,void 0,function*(){yield this._revealReference(e,!1),this._onDidSelectReference.fire({element:e,kind:"goto",source:"tree"})})}_revealReference(e,t){return C0(this,void 0,void 0,function*(){if(this._revealedReference===e)return;this._revealedReference=e,e.uri.scheme!==Et.inMemory?this.setTitle(rp(e.uri),this._uriLabel.getUriLabel(Ns(e.uri))):this.setTitle(p("peekView.alternateTitle","References"));let r=this._textModelResolverService.createModelReference(e.uri);this._tree.getInput()===e.parent?this._tree.reveal(e):(t&&this._tree.reveal(e.parent),yield this._tree.expand(e.parent),this._tree.reveal(e));let n=yield r;if(!this._model){n.dispose();return}St(this._previewModelReference);let i=n.object;if(i){let a=this._preview.getModel()===i.textEditorModel?0:1,s=y.lift(e.range).collapseToStart();this._previewModelReference=n,this._preview.setModel(i.textEditorModel),this._preview.setSelection(s),this._preview.revealRangeInCenter(s,a)}else this._preview.setModel(this._previewNotAvailableMessage),n.dispose()})}};Zp=Kw([Mi(3,Ot),Mi(4,Wt),Mi(5,le),Mi(6,rg),Mi(7,ba),Mi(8,A1),Mi(9,at),Mi(10,gt),Mi(11,Nt)],Zp);var qw=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Ks=function(o,e){return function(t,r){e(t,r,o)}},D0=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},To=new fe("referenceSearchVisible",!1,p("referenceSearchVisible","Whether reference peek is visible, like 'Peek References' or 'Peek Definition'")),ri=class lg{constructor(e,t,r,n,i,a,s,l){this._defaultTreeKeyboardSupport=e,this._editor=t,this._editorService=n,this._notificationService=i,this._instantiationService=a,this._storageService=s,this._configurationService=l,this._disposables=new P,this._requestIdPool=0,this._ignoreModelChangeEvent=!1,this._referenceSearchVisible=To.bindTo(r)}static get(e){return e.getContribution(lg.ID)}dispose(){var e,t;this._referenceSearchVisible.reset(),this._disposables.dispose(),(e=this._widget)===null||e===void 0||e.dispose(),(t=this._model)===null||t===void 0||t.dispose(),this._widget=void 0,this._model=void 0}toggleWidget(e,t,r){let n;if(this._widget&&(n=this._widget.position),this.closeWidget(),!!n&&e.containsPosition(n))return;this._peekMode=r,this._referenceSearchVisible.set(!0),this._disposables.add(this._editor.onDidChangeModelLanguage(()=>{this.closeWidget()})),this._disposables.add(this._editor.onDidChangeModel(()=>{this._ignoreModelChangeEvent||this.closeWidget()}));let i="peekViewLayout",a=sg.fromJSON(this._storageService.get(i,0,"{}"));this._widget=this._instantiationService.createInstance(Zp,this._editor,this._defaultTreeKeyboardSupport,a),this._widget.setTitle(p("labelLoading","Loading...")),this._widget.show(e),this._disposables.add(this._widget.onDidClose(()=>{t.cancel(),this._widget&&(this._storageService.store(i,JSON.stringify(this._widget.layoutData),0,1),this._widget=void 0),this.closeWidget()})),this._disposables.add(this._widget.onDidSelectReference(l=>{let{element:d,kind:c}=l;if(!!d)switch(c){case"open":(l.source!=="editor"||!this._configurationService.getValue("editor.stablePeek"))&&this.openReference(d,!1,!1);break;case"side":this.openReference(d,!0,!1);break;case"goto":r?this._gotoReference(d):this.openReference(d,!1,!0);break}}));let s=++this._requestIdPool;t.then(l=>{var d;if(s!==this._requestIdPool||!this._widget){l.dispose();return}return(d=this._model)===null||d===void 0||d.dispose(),this._model=l,this._widget.setModel(this._model).then(()=>{if(this._widget&&this._model&&this._editor.hasModel()){this._model.isEmpty?this._widget.setMetaTitle(""):this._widget.setMetaTitle(p("metaTitle.N","{0} ({1})",this._model.title,this._model.references.length));let c=this._editor.getModel().uri,u=new z(e.startLineNumber,e.startColumn),f=this._model.nearestReference(c,u);if(f)return this._widget.setSelection(f).then(()=>{this._widget&&this._editor.getOption(77)==="editor"&&this._widget.focusOnPreviewEditor()})}})},l=>{this._notificationService.error(l)})}changeFocusBetweenPreviewAndReferences(){!this._widget||(this._widget.isPreviewEditorFocused()?this._widget.focusOnReferenceTree():this._widget.focusOnPreviewEditor())}goToNextOrPreviousReference(e){return D0(this,void 0,void 0,function*(){if(!this._editor.hasModel()||!this._model||!this._widget)return;let t=this._widget.position;if(!t)return;let r=this._model.nearestReference(this._editor.getModel().uri,t);if(!r)return;let n=this._model.nextOrPreviousReference(r,e),i=this._editor.hasTextFocus(),a=this._widget.isPreviewEditorFocused();yield this._widget.setSelection(n),yield this._gotoReference(n),i?this._editor.focus():this._widget&&a&&this._widget.focusOnPreviewEditor()})}revealReference(e){return D0(this,void 0,void 0,function*(){!this._editor.hasModel()||!this._model||!this._widget||(yield this._widget.revealReference(e))})}closeWidget(e=!0){var t,r;(t=this._widget)===null||t===void 0||t.dispose(),(r=this._model)===null||r===void 0||r.dispose(),this._referenceSearchVisible.reset(),this._disposables.clear(),this._widget=void 0,this._model=void 0,e&&this._editor.focus(),this._requestIdPool+=1}_gotoReference(e){this._widget&&this._widget.hide(),this._ignoreModelChangeEvent=!0;let t=y.lift(e.range).collapseToStart();return this._editorService.openCodeEditor({resource:e.uri,options:{selection:t}},this._editor).then(r=>{var n;if(this._ignoreModelChangeEvent=!1,!r||!this._widget){this.closeWidget();return}if(this._editor===r)this._widget.show(t),this._widget.focusOnReferenceTree();else{let i=lg.get(r),a=this._model.clone();this.closeWidget(),r.focus(),i==null||i.toggleWidget(t,Ge(s=>Promise.resolve(a)),(n=this._peekMode)!==null&&n!==void 0?n:!1)}},r=>{this._ignoreModelChangeEvent=!1,ce(r)})}openReference(e,t,r){t||this.closeWidget();let{uri:n,range:i}=e;this._editorService.openCodeEditor({resource:n,options:{selection:i,pinned:r}},this._editor,t)}};ri.ID="editor.contrib.referencesController";ri=qw([Ks(2,re),Ks(3,Ue),Ks(4,$e),Ks(5,le),Ks(6,lr),Ks(7,rt)],ri);function xo(o,e){let t=y0(o);if(!t)return;let r=ri.get(t);r&&e(r)}$t.registerCommandAndKeybindingRule({id:"togglePeekWidgetFocus",weight:100,primary:Xe(2089,60),when:G.or(To,Gt.inPeekEditor),handler(o){xo(o,e=>{e.changeFocusBetweenPreviewAndReferences()})}});$t.registerCommandAndKeybindingRule({id:"goToNextReference",weight:100-10,primary:62,secondary:[70],when:G.or(To,Gt.inPeekEditor),handler(o){xo(o,e=>{e.goToNextOrPreviousReference(!0)})}});$t.registerCommandAndKeybindingRule({id:"goToPreviousReference",weight:100-10,primary:1086,secondary:[1094],when:G.or(To,Gt.inPeekEditor),handler(o){xo(o,e=>{e.goToNextOrPreviousReference(!1)})}});Ie.registerCommandAlias("goToNextReferenceFromEmbeddedEditor","goToNextReference");Ie.registerCommandAlias("goToPreviousReferenceFromEmbeddedEditor","goToPreviousReference");Ie.registerCommandAlias("closeReferenceSearchEditor","closeReferenceSearch");Ie.registerCommand("closeReferenceSearch",o=>xo(o,e=>e.closeWidget()));$t.registerKeybindingRule({id:"closeReferenceSearch",weight:100-101,primary:9,secondary:[1033],when:G.and(Gt.inPeekEditor,G.not("config.editor.stablePeek"))});$t.registerKeybindingRule({id:"closeReferenceSearch",weight:200+50,primary:9,secondary:[1033],when:G.and(To,G.not("config.editor.stablePeek"))});$t.registerCommandAndKeybindingRule({id:"revealReference",weight:200,primary:3,mac:{primary:3,secondary:[2066]},when:G.and(To,ph,fh.negate(),mh.negate()),handler(o){var e;let r=(e=o.get(Sp).lastFocusedList)===null||e===void 0?void 0:e.getFocus();Array.isArray(r)&&r[0]instanceof fn&&xo(o,n=>n.revealReference(r[0]))}});$t.registerCommandAndKeybindingRule({id:"openReferenceToSide",weight:100,primary:2051,mac:{primary:259},when:G.and(To,ph,fh.negate(),mh.negate()),handler(o){var e;let r=(e=o.get(Sp).lastFocusedList)===null||e===void 0?void 0:e.getFocus();Array.isArray(r)&&r[0]instanceof fn&&xo(o,n=>n.openReference(r[0],!0,!0))}});Ie.registerCommand("openReference",o=>{var e;let r=(e=o.get(Sp).lastFocusedList)===null||e===void 0?void 0:e.getFocus();Array.isArray(r)&&r[0]instanceof fn&&xo(o,n=>n.openReference(r[0],!1,!0))});Ne();W();Br();pe();Er();ee();Z();Le();ro();He();qr();Zl();var w0=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Fc=function(o,e){return function(t,r){e(t,r,o)}},ug=new fe("hasSymbols",!1,p("hasSymbols","Whether there are symbol locations that can be navigated via keyboard-only.")),Gc=Mr("ISymbolNavigationService"),cg=class{constructor(e,t,r,n){this._editorService=t,this._notificationService=r,this._keybindingService=n,this._currentModel=void 0,this._currentIdx=-1,this._ignoreEditorChange=!1,this._ctxHasSymbols=ug.bindTo(e)}reset(){var e,t;this._ctxHasSymbols.reset(),(e=this._currentState)===null||e===void 0||e.dispose(),(t=this._currentMessage)===null||t===void 0||t.dispose(),this._currentModel=void 0,this._currentIdx=-1}put(e){let t=e.parent.parent;if(t.references.length<=1){this.reset();return}this._currentModel=t,this._currentIdx=t.references.indexOf(e),this._ctxHasSymbols.set(!0),this._showMessage();let r=new dg(this._editorService),n=r.onDidChange(i=>{if(this._ignoreEditorChange)return;let a=this._editorService.getActiveCodeEditor();if(!a)return;let s=a.getModel(),l=a.getPosition();if(!s||!l)return;let d=!1,c=!1;for(let u of t.references)if(tp(u.uri,s.uri))d=!0,c=c||y.containsPosition(u.range,l);else if(d)break;(!d||!c)&&this.reset()});this._currentState=Dm(r,n)}revealNext(e){if(!this._currentModel)return Promise.resolve();this._currentIdx+=1,this._currentIdx%=this._currentModel.references.length;let t=this._currentModel.references[this._currentIdx];return this._showMessage(),this._ignoreEditorChange=!0,this._editorService.openCodeEditor({resource:t.uri,options:{selection:y.collapseToStart(t.range),selectionRevealType:3}},e).finally(()=>{this._ignoreEditorChange=!1})}_showMessage(){var e;(e=this._currentMessage)===null||e===void 0||e.dispose();let t=this._keybindingService.lookupKeybinding("editor.gotoNextSymbolFromResult"),r=t?p("location.kb","Symbol {0} of {1}, {2} for next",this._currentIdx+1,this._currentModel.references.length,t.getLabel()):p("location","Symbol {0} of {1}",this._currentIdx+1,this._currentModel.references.length);this._currentMessage=this._notificationService.status(r)}};cg=w0([Fc(0,re),Fc(1,Ue),Fc(2,$e),Fc(3,at)],cg);Or(Gc,cg,!0);K(new class extends dt{constructor(){super({id:"editor.gotoNextSymbolFromResult",precondition:ug,kbOpts:{weight:100,primary:70}})}runEditorCommand(o,e){return o.get(Gc).revealNext(e)}});$t.registerCommandAndKeybindingRule({id:"editor.gotoNextSymbolFromResult.cancel",weight:100,when:ug,primary:9,handler(o){o.get(Gc).reset()}});var dg=class{constructor(e){this._listener=new Map,this._disposables=new P,this._onDidChange=new j,this.onDidChange=this._onDidChange.event,this._disposables.add(e.onCodeEditorRemove(this._onDidRemoveEditor,this)),this._disposables.add(e.onCodeEditorAdd(this._onDidAddEditor,this)),e.listCodeEditors().forEach(this._onDidAddEditor,this)}dispose(){this._disposables.dispose(),this._onDidChange.dispose(),St(this._listener.values())}_onDidAddEditor(e){this._listener.set(e,Dm(e.onDidChangeCursorPosition(t=>this._onDidChange.fire({editor:e})),e.onDidChangeModelContent(t=>this._onDidChange.fire({editor:e}))))}_onDidRemoveEditor(e){var t;(t=this._listener.get(e))===null||t===void 0||t.dispose(),this._listener.delete(e)}};dg=w0([Fc(0,Ue)],dg);Z();ar();xt();Le();He();fo();pt();Ae();pe();Re();var A0=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})};function Bc(o,e,t,r){let i=t.ordered(o).map(a=>Promise.resolve(r(a,o,e)).then(void 0,s=>{ze(s)}));return Promise.all(i).then(a=>{let s=[];for(let l of a)Array.isArray(l)?s.push(...l):l&&s.push(l);return s})}function Vc(o,e,t){return Bc(o,e,Lu,(r,n,i)=>r.provideDefinition(n,i,t))}function pg(o,e,t){return Bc(o,e,jv,(r,n,i)=>r.provideDeclaration(n,i,t))}function fg(o,e,t){return Bc(o,e,zv,(r,n,i)=>r.provideImplementation(n,i,t))}function mg(o,e,t){return Bc(o,e,Kv,(r,n,i)=>r.provideTypeDefinition(n,i,t))}function Hc(o,e,t,r){return Bc(o,e,Uv,(n,i,a)=>A0(this,void 0,void 0,function*(){let s=yield n.provideReferences(i,a,{includeDeclaration:!0},r);if(!t||!s||s.length!==2)return s;let l=yield n.provideReferences(i,a,{includeDeclaration:!1},r);return l&&l.length===1?l:s}))}function Uc(o){return A0(this,void 0,void 0,function*(){let e=yield o(),t=new zt(e,""),r=t.references.map(n=>n.link);return t.dispose(),r})}xr("_executeDefinitionProvider",(o,e)=>Uc(()=>Vc(o,e,he.None)));xr("_executeDeclarationProvider",(o,e)=>Uc(()=>pg(o,e,he.None)));xr("_executeImplementationProvider",(o,e)=>Uc(()=>fg(o,e,he.None)));xr("_executeTypeDefinitionProvider",(o,e)=>Uc(()=>mg(o,e,he.None)));xr("_executeReferenceProvider",(o,e)=>Uc(()=>Hc(o,e,!1,he.None)));var mn=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},hg,gg,_g,yg,vg,bg,Sg,Eg;Gr.appendMenuItem(oe.EditorContext,{submenu:oe.EditorContextPeek,title:p("peek.submenu","Peek"),group:"navigation",order:100});var I0=new Set;function Nn(o){let e=new o;return Fu(e),I0.add(e.id),e}var Co=class{constructor(e,t){this.model=e,this.position=t}static is(e){return!e||typeof e!="object"?!1:!!(e instanceof Co||z.isIPosition(e.position)&&e.model)}},Oi=class extends M{constructor(e,t){super(t);this.configuration=e}run(e,t,r){if(!t.hasModel())return Promise.resolve(void 0);let n=e.get($e),i=e.get(Ue),a=e.get(Ii),s=e.get(Gc),l=t.getModel(),d=t.getPosition(),c=Co.is(r)?r:new Co(l,d),u=new _c(t,5),f=us(this._getLocationModel(c.model,c.position,u.token),u.token).then(m=>mn(this,void 0,void 0,function*(){var g;if(!m||u.token.isCancellationRequested)return;Tt(m.ariaMessage);let b;if(m.referenceAt(l.uri,d)){let x=this._getAlternativeCommand(t);x!==this.id&&I0.has(x)&&(b=t.getAction(x))}let T=m.references.length;if(T===0){if(!this.configuration.muteMessage){let x=l.getWordAtPosition(d);(g=Zt.get(t))===null||g===void 0||g.showMessage(this._getNoResultFoundMessage(x),d)}}else if(T===1&&b)b.run();else return this._onResult(i,s,t,m)}),m=>{n.error(m)}).finally(()=>{u.dispose()});return a.showWhile(f,250),f}_onResult(e,t,r,n){return mn(this,void 0,void 0,function*(){let i=this._getGoToPreference(r);if(!(r instanceof kn)&&(this.configuration.openInPeek||i==="peek"&&n.references.length>1))this._openInPeek(r,n);else{let a=n.firstReference(),s=n.references.length>1&&i==="gotoAndPeek",l=yield this._openReference(r,e,a,this.configuration.openToSide,!s);s&&l?this._openInPeek(l,n):n.dispose(),i==="goto"&&t.put(a)}})}_openReference(e,t,r,n,i){return mn(this,void 0,void 0,function*(){let a;if(Bv(r)&&(a=r.targetSelectionRange),a||(a=r.range),!a)return;let s=yield t.openCodeEditor({resource:r.uri,options:{selection:y.collapseToStart(a),selectionRevealType:3}},e,n);if(!!s){if(i){let l=s.getModel(),d=s.deltaDecorations([],[{range:a,options:{description:"symbol-navigate-action-highlight",className:"symbolHighlight"}}]);setTimeout(()=>{s.getModel()===l&&s.deltaDecorations(d,[])},350)}return s}})}_openInPeek(e,t){let r=ri.get(e);r&&e.hasModel()?r.toggleWidget(e.getSelection(),Ge(n=>Promise.resolve(t)),this.configuration.openInPeek):t.dispose()}},Da=class extends Oi{_getLocationModel(e,t,r){return mn(this,void 0,void 0,function*(){return new zt(yield Vc(e,t,r),p("def.title","Definitions"))})}_getNoResultFoundMessage(e){return e&&e.word?p("noResultWord","No definition found for '{0}'",e.word):p("generic.noResults","No definition found")}_getAlternativeCommand(e){return e.getOption(51).alternativeDefinitionCommand}_getGoToPreference(e){return e.getOption(51).multipleDefinitions}},k0=ou&&!Xv?2118:70;Nn((hg=class Tg extends Da{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:Tg.id,label:p("actions.goToDecl.label","Go to Definition"),alias:"Go to Definition",precondition:G.and(v.hasDefinitionProvider,v.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:v.editorTextFocus,primary:k0,weight:100},contextMenuOpts:{group:"navigation",order:1.1}});Ie.registerCommandAlias("editor.action.goToDeclaration",Tg.id)}},hg.id="editor.action.revealDefinition",hg));Nn((gg=class xg extends Da{constructor(){super({openToSide:!0,openInPeek:!1,muteMessage:!1},{id:xg.id,label:p("actions.goToDeclToSide.label","Open Definition to the Side"),alias:"Open Definition to the Side",precondition:G.and(v.hasDefinitionProvider,v.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:v.editorTextFocus,primary:Xe(2089,k0),weight:100}});Ie.registerCommandAlias("editor.action.openDeclarationToTheSide",xg.id)}},gg.id="editor.action.revealDefinitionAside",gg));Nn((_g=class Cg extends Da{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:Cg.id,label:p("actions.previewDecl.label","Peek Definition"),alias:"Peek Definition",precondition:G.and(v.hasDefinitionProvider,Gt.notInPeekEditor,v.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:v.editorTextFocus,primary:582,linux:{primary:3140},weight:100},contextMenuOpts:{menuId:oe.EditorContextPeek,group:"peek",order:2}});Ie.registerCommandAlias("editor.action.previewDeclaration",Cg.id)}},_g.id="editor.action.peekDefinition",_g));var Lg=class extends Oi{_getLocationModel(e,t,r){return mn(this,void 0,void 0,function*(){return new zt(yield pg(e,t,r),p("decl.title","Declarations"))})}_getNoResultFoundMessage(e){return e&&e.word?p("decl.noResultWord","No declaration found for '{0}'",e.word):p("decl.generic.noResults","No declaration found")}_getAlternativeCommand(e){return e.getOption(51).alternativeDeclarationCommand}_getGoToPreference(e){return e.getOption(51).multipleDeclarations}};Nn((yg=class N0 extends Lg{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:N0.id,label:p("actions.goToDeclaration.label","Go to Declaration"),alias:"Go to Declaration",precondition:G.and(v.hasDeclarationProvider,v.isInWalkThroughSnippet.toNegated()),contextMenuOpts:{group:"navigation",order:1.3}})}_getNoResultFoundMessage(e){return e&&e.word?p("decl.noResultWord","No declaration found for '{0}'",e.word):p("decl.generic.noResults","No declaration found")}},yg.id="editor.action.revealDeclaration",yg));Nn(class extends Lg{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:"editor.action.peekDeclaration",label:p("actions.peekDecl.label","Peek Declaration"),alias:"Peek Declaration",precondition:G.and(v.hasDeclarationProvider,Gt.notInPeekEditor,v.isInWalkThroughSnippet.toNegated()),contextMenuOpts:{menuId:oe.EditorContextPeek,group:"peek",order:3}})}});var Dg=class extends Oi{_getLocationModel(e,t,r){return mn(this,void 0,void 0,function*(){return new zt(yield mg(e,t,r),p("typedef.title","Type Definitions"))})}_getNoResultFoundMessage(e){return e&&e.word?p("goToTypeDefinition.noResultWord","No type definition found for '{0}'",e.word):p("goToTypeDefinition.generic.noResults","No type definition found")}_getAlternativeCommand(e){return e.getOption(51).alternativeTypeDefinitionCommand}_getGoToPreference(e){return e.getOption(51).multipleTypeDefinitions}};Nn((vg=class R0 extends Dg{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:R0.ID,label:p("actions.goToTypeDefinition.label","Go to Type Definition"),alias:"Go to Type Definition",precondition:G.and(v.hasTypeDefinitionProvider,v.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:v.editorTextFocus,primary:0,weight:100},contextMenuOpts:{group:"navigation",order:1.4}})}},vg.ID="editor.action.goToTypeDefinition",vg));Nn((bg=class P0 extends Dg{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:P0.ID,label:p("actions.peekTypeDefinition.label","Peek Type Definition"),alias:"Peek Type Definition",precondition:G.and(v.hasTypeDefinitionProvider,Gt.notInPeekEditor,v.isInWalkThroughSnippet.toNegated()),contextMenuOpts:{menuId:oe.EditorContextPeek,group:"peek",order:4}})}},bg.ID="editor.action.peekTypeDefinition",bg));var wg=class extends Oi{_getLocationModel(e,t,r){return mn(this,void 0,void 0,function*(){return new zt(yield fg(e,t,r),p("impl.title","Implementations"))})}_getNoResultFoundMessage(e){return e&&e.word?p("goToImplementation.noResultWord","No implementation found for '{0}'",e.word):p("goToImplementation.generic.noResults","No implementation found")}_getAlternativeCommand(e){return e.getOption(51).alternativeImplementationCommand}_getGoToPreference(e){return e.getOption(51).multipleImplementations}};Nn((Sg=class M0 extends wg{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:M0.ID,label:p("actions.goToImplementation.label","Go to Implementations"),alias:"Go to Implementations",precondition:G.and(v.hasImplementationProvider,v.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:v.editorTextFocus,primary:2118,weight:100},contextMenuOpts:{group:"navigation",order:1.45}})}},Sg.ID="editor.action.goToImplementation",Sg));Nn((Eg=class O0 extends wg{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:O0.ID,label:p("actions.peekImplementation.label","Peek Implementations"),alias:"Peek Implementations",precondition:G.and(v.hasImplementationProvider,Gt.notInPeekEditor,v.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:v.editorTextFocus,primary:3142,weight:100},contextMenuOpts:{menuId:oe.EditorContextPeek,group:"peek",order:5}})}},Eg.ID="editor.action.peekImplementation",Eg));var Ag=class extends Oi{_getNoResultFoundMessage(e){return e?p("references.no","No references found for '{0}'",e.word):p("references.noGeneric","No references found")}_getAlternativeCommand(e){return e.getOption(51).alternativeReferenceCommand}_getGoToPreference(e){return e.getOption(51).multipleReferences}};Nn(class extends Ag{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:"editor.action.goToReferences",label:p("goToReferences.label","Go to References"),alias:"Go to References",precondition:G.and(v.hasReferenceProvider,Gt.notInPeekEditor,v.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:v.editorTextFocus,primary:1094,weight:100},contextMenuOpts:{group:"navigation",order:1.45}})}_getLocationModel(e,t,r){return mn(this,void 0,void 0,function*(){return new zt(yield Hc(e,t,!0,r),p("ref.title","References"))})}});Nn(class extends Ag{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:"editor.action.referenceSearch.trigger",label:p("references.action.label","Peek References"),alias:"Peek References",precondition:G.and(v.hasReferenceProvider,Gt.notInPeekEditor,v.isInWalkThroughSnippet.toNegated()),contextMenuOpts:{menuId:oe.EditorContextPeek,group:"peek",order:6}})}_getLocationModel(e,t,r){return mn(this,void 0,void 0,function*(){return new zt(yield Hc(e,t,!1,r),p("ref.title","References"))})}});var F0=class extends Oi{constructor(e,t,r){super(e,{id:"editor.action.goToLocation",label:p("label.generic","Go to Any Symbol"),alias:"Go to Any Symbol",precondition:G.and(Gt.notInPeekEditor,v.isInWalkThroughSnippet.toNegated())});this._references=t,this._gotoMultipleBehaviour=r}_getLocationModel(e,t,r){return mn(this,void 0,void 0,function*(){return new zt(this._references,p("generic.title","Locations"))})}_getNoResultFoundMessage(e){return e&&p("generic.noResult","No results for '{0}'",e.word)||""}_getGoToPreference(e){var t;return(t=this._gotoMultipleBehaviour)!==null&&t!==void 0?t:e.getOption(51).multipleReferences}_getAlternativeCommand(){return""}};Ie.registerCommand({id:"editor.action.goToLocations",description:{description:"Go to locations from a position in a file",args:[{name:"uri",description:"The text document in which to start",constraint:Te},{name:"position",description:"The position at which to start",constraint:z.isIPosition},{name:"locations",description:"An array of locations.",constraint:Array},{name:"multiple",description:"Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto"},{name:"noResultsMessage",description:"Human readable message that shows when locations is empty."}]},handler:(o,e,t,r,n,i,a)=>mn(void 0,void 0,void 0,function*(){Je(Te.isUri(e)),Je(z.isIPosition(t)),Je(Array.isArray(r)),Je(typeof n=="undefined"||typeof n=="string"),Je(typeof a=="undefined"||typeof a=="boolean");let s=o.get(Ue),l=yield s.openCodeEditor({resource:e},s.getFocusedCodeEditor());if(hh(l))return l.setPosition(t),l.revealPositionInCenterIfOutsideViewport(t,0),l.invokeWithinContext(d=>{let c=new class extends F0{_getNoResultFoundMessage(u){return i||super._getNoResultFoundMessage(u)}}({muteMessage:!Boolean(i),openInPeek:Boolean(a),openToSide:!1},r,n);d.get(le).invokeFunction(c.run.bind(c),l)})})});Ie.registerCommand({id:"editor.action.peekLocations",description:{description:"Peek locations from a position in a file",args:[{name:"uri",description:"The text document in which to start",constraint:Te},{name:"position",description:"The position at which to start",constraint:z.isIPosition},{name:"locations",description:"An array of locations.",constraint:Array},{name:"multiple",description:"Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto"}]},handler:(o,e,t,r,n)=>mn(void 0,void 0,void 0,function*(){o.get(ct).executeCommand("editor.action.goToLocations",e,t,r,n,void 0,!0)})});Ie.registerCommand({id:"editor.action.findReferences",handler:(o,e,t)=>{Je(Te.isUri(e)),Je(z.isIPosition(t));let r=o.get(Ue);return r.openCodeEditor({resource:e},r.getFocusedCodeEditor()).then(n=>{if(!hh(n)||!n.hasModel())return;let i=ri.get(n);if(!i)return;let a=Ge(l=>Hc(n.getModel(),z.lift(t),!1,l).then(d=>new zt(d,p("ref.title","References")))),s=new y(t.lineNumber,t.column,t.lineNumber,t.column);return Promise.resolve(i.toggleWidget(s,a,!1))})}});Ie.registerCommandAlias("editor.action.showReferences","editor.action.peekLocations");Gr.appendMenuItems([{id:oe.MenubarGoMenu,item:{command:{id:"editor.action.revealDefinition",title:p({key:"miGotoDefinition",comment:["&& denotes a mnemonic"]},"Go to &&Definition")},group:"4_symbol_nav",order:2}},{id:oe.MenubarGoMenu,item:{command:{id:"editor.action.revealDeclaration",title:p({key:"miGotoDeclaration",comment:["&& denotes a mnemonic"]},"Go to &&Declaration")},group:"4_symbol_nav",order:3}},{id:oe.MenubarGoMenu,item:{command:{id:"editor.action.goToTypeDefinition",title:p({key:"miGotoTypeDefinition",comment:["&& denotes a mnemonic"]},"Go to &&Type Definition")},group:"4_symbol_nav",order:3}},{id:oe.MenubarGoMenu,item:{command:{id:"editor.action.goToImplementation",title:p({key:"miGotoImplementation",comment:["&& denotes a mnemonic"]},"Go to &&Implementations")},group:"4_symbol_nav",order:4}},{id:oe.MenubarGoMenu,item:{command:{id:"editor.action.goToReferences",title:p({key:"miGotoReference",comment:["&& denotes a mnemonic"]},"Go to &&References")},group:"4_symbol_nav",order:5}}]);var Jw=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},G0=function(o,e){return function(t,r){e(t,r,o)}},wa=class Wc{constructor(e,t,r){this.textModelResolverService=t,this.languageService=r,this.toUnhook=new P,this.toUnhookForKeyboard=new P,this.linkDecorations=[],this.currentWordAtPosition=null,this.previousPromise=null,this.editor=e;let n=new bo(e);this.toUnhook.add(n),this.toUnhook.add(n.onMouseMoveOrRelevantKeyDown(([i,a])=>{this.startFindDefinitionFromMouse(i,kr(a))})),this.toUnhook.add(n.onExecute(i=>{this.isEnabled(i)&&this.gotoDefinition(i.target.position,i.hasSideBySideModifier).then(()=>{this.removeLinkDecorations()},a=>{this.removeLinkDecorations(),ce(a)})})),this.toUnhook.add(n.onCancel(()=>{this.removeLinkDecorations(),this.currentWordAtPosition=null}))}static get(e){return e.getContribution(Wc.ID)}startFindDefinitionFromCursor(e){return this.startFindDefinition(e).then(()=>{this.toUnhookForKeyboard.add(this.editor.onDidChangeCursorPosition(()=>{this.currentWordAtPosition=null,this.removeLinkDecorations(),this.toUnhookForKeyboard.clear()})),this.toUnhookForKeyboard.add(this.editor.onKeyDown(t=>{t&&(this.currentWordAtPosition=null,this.removeLinkDecorations(),this.toUnhookForKeyboard.clear())}))})}startFindDefinitionFromMouse(e,t){if(e.target.type===9&&this.linkDecorations.length>0)return;if(!this.editor.hasModel()||!this.isEnabled(e,t)){this.currentWordAtPosition=null,this.removeLinkDecorations();return}let r=e.target.position;this.startFindDefinition(r)}startFindDefinition(e){var t;this.toUnhookForKeyboard.clear();let r=e?(t=this.editor.getModel())===null||t===void 0?void 0:t.getWordAtPosition(e):null;if(!r)return this.currentWordAtPosition=null,this.removeLinkDecorations(),Promise.resolve(0);if(this.currentWordAtPosition&&this.currentWordAtPosition.startColumn===r.startColumn&&this.currentWordAtPosition.endColumn===r.endColumn&&this.currentWordAtPosition.word===r.word)return Promise.resolve(0);this.currentWordAtPosition=r;let n=new xp(this.editor,15);return this.previousPromise&&(this.previousPromise.cancel(),this.previousPromise=null),this.previousPromise=Ge(i=>this.findDefinition(e,i)),this.previousPromise.then(i=>{if(!i||!i.length||!n.validate(this.editor)){this.removeLinkDecorations();return}if(i.length>1)this.addDecoration(new y(e.lineNumber,r.startColumn,e.lineNumber,r.endColumn),new sr().appendText(p("multipleResults","Click to show {0} definitions.",i.length)));else{let a=i[0];if(!a.uri)return;this.textModelResolverService.createModelReference(a.uri).then(s=>{if(!s.object||!s.object.textEditorModel){s.dispose();return}let{object:{textEditorModel:l}}=s,{startLineNumber:d}=a.range;if(d<1||d>l.getLineCount()){s.dispose();return}let c=this.getPreviewValue(l,d,a),u;a.originSelectionRange?u=y.lift(a.originSelectionRange):u=new y(e.lineNumber,r.startColumn,e.lineNumber,r.endColumn);let f=this.languageService.guessLanguageIdByFilepathOrFirstLine(l.uri);this.addDecoration(u,new sr().appendCodeblock(f||"",c)),s.dispose()})}}).then(void 0,ce)}getPreviewValue(e,t,r){let n=r.targetSelectionRange?r.range:this.getPreviewRangeBasedOnBrackets(e,t);return n.endLineNumber-n.startLineNumber>=Wc.MAX_SOURCE_PREVIEW_LINES&&(n=this.getPreviewRangeBasedOnIndentation(e,t)),this.stripIndentationFromPreviewRange(e,t,n)}stripIndentationFromPreviewRange(e,t,r){let i=e.getLineFirstNonWhitespaceColumn(t);for(let s=t+1;s<r.endLineNumber;s++){let l=e.getLineFirstNonWhitespaceColumn(s);i=Math.min(i,l)}return e.getValueInRange(r).replace(new RegExp(`^\\s{${i-1}}`,"gm"),"").trim()}getPreviewRangeBasedOnIndentation(e,t){let r=e.getLineFirstNonWhitespaceColumn(t),n=Math.min(e.getLineCount(),t+Wc.MAX_SOURCE_PREVIEW_LINES),i=t+1;for(;i<n;i++){let a=e.getLineFirstNonWhitespaceColumn(i);if(r===a)break}return new y(t,1,i+1,1)}getPreviewRangeBasedOnBrackets(e,t){let r=Math.min(e.getLineCount(),t+Wc.MAX_SOURCE_PREVIEW_LINES),n=[],i=!0,a=e.bracketPairs.findNextBracket(new z(t,1));for(;a!==null;){if(n.length===0)n.push(a);else{let c=n[n.length-1];if(c.open[0]===a.open[0]&&c.isOpen&&!a.isOpen?n.pop():n.push(a),n.length===0)if(i)i=!1;else return new y(t,1,a.range.endLineNumber+1,1)}let s=e.getLineMaxColumn(t),l=a.range.endLineNumber,d=a.range.endColumn;if(s===a.range.endColumn&&(l++,d=1),l>r)return new y(t,1,r+1,1);a=e.bracketPairs.findNextBracket(new z(l,d))}return new y(t,1,r+1,1)}addDecoration(e,t){let r={range:e,options:{description:"goto-definition-link",inlineClassName:"goto-definition-link",hoverMessage:t}};this.linkDecorations=this.editor.deltaDecorations(this.linkDecorations,[r])}removeLinkDecorations(){this.linkDecorations.length>0&&(this.linkDecorations=this.editor.deltaDecorations(this.linkDecorations,[]))}isEnabled(e,t){return this.editor.hasModel()&&e.isNoneOrSingleMouseDown&&e.target.type===6&&(e.hasTriggerModifier||(t?t.keyCodeIsTriggerKey:!1))&&Lu.has(this.editor.getModel())}findDefinition(e,t){let r=this.editor.getModel();return r?Vc(r,e,t):Promise.resolve(null)}gotoDefinition(e,t){return this.editor.setPosition(e),this.editor.invokeWithinContext(r=>{let n=!t&&this.editor.getOption(78)&&!this.isInPeekEditor(r);return new Da({openToSide:t,openInPeek:n,muteMessage:!0},{alias:"",label:"",id:"",precondition:void 0}).run(r,this.editor)})}isInPeekEditor(e){let t=e.get(re);return Gt.inPeekEditor.getValue(t)}dispose(){this.toUnhook.dispose()}};wa.ID="editor.contrib.gotodefinitionatposition";wa.MAX_SOURCE_PREVIEW_LINES=8;wa=Jw([G0(1,Wt),G0(2,gt)],wa);Q(wa.ID,wa);ke((o,e)=>{let t=o.getColor(As);t&&e.addRule(`.monaco-editor .goto-definition-link { color: ${t} !important; }`)});Pe();Pe();W();var ef=V,jc=class extends F{constructor(){super();this.containerDomNode=document.createElement("div"),this.containerDomNode.className="monaco-hover",this.containerDomNode.tabIndex=0,this.containerDomNode.setAttribute("role","tooltip"),this.contentsDomNode=document.createElement("div"),this.contentsDomNode.className="monaco-hover-content",this.scrollbar=this._register(new Os(this.contentsDomNode,{consumeMouseWheelIfScrollbarIsNeeded:!0})),this.containerDomNode.appendChild(this.scrollbar.getDomNode())}onContentsChanged(){this.scrollbar.scanDomNode()}},zc=class extends F{constructor(e,t,r){super();this.actionContainer=B(e,ef("div.action-container")),this.action=B(this.actionContainer,ef("a.action")),this.action.setAttribute("role","button"),t.iconClass&&B(this.action,ef(`span.icon.${t.iconClass}`));let n=B(this.action,ef("span"));n.textContent=r?`${t.label} (${r})`:t.label,this._register(qe(this.actionContainer,Kr.MOUSE_DOWN,i=>{i.stopPropagation(),i.preventDefault(),t.run(this.actionContainer)})),this.setEnabled(!0)}static render(e,t,r){return new zc(e,t,r)}setEnabled(e){e?(this.actionContainer.classList.remove("disabled"),this.actionContainer.removeAttribute("aria-disabled")):(this.actionContainer.classList.add("disabled"),this.actionContainer.setAttribute("aria-disabled","true"))}};bt();W();tt();ee();jt();Re();we();pt();$n();W();ee();Ne();var Ig=class{constructor(e,t,r){this.presentationIndex=r,this._onColorFlushed=new j,this.onColorFlushed=this._onColorFlushed.event,this._onDidChangeColor=new j,this.onDidChangeColor=this._onDidChangeColor.event,this._onDidChangePresentation=new j,this.onDidChangePresentation=this._onDidChangePresentation.event,this.originalColor=e,this._color=e,this._colorPresentations=t}get color(){return this._color}set color(e){this._color.equals(e)||(this._color=e,this._onDidChangeColor.fire(e))}get presentation(){return this.colorPresentations[this.presentationIndex]}get colorPresentations(){return this._colorPresentations}set colorPresentations(e){this._colorPresentations=e,this.presentationIndex>e.length-1&&(this.presentationIndex=0),this._onDidChangePresentation.fire(this.presentation)}selectNextColorPresentation(){this.presentationIndex=(this.presentationIndex+1)%this.colorPresentations.length,this.flushColor(),this._onDidChangePresentation.fire(this.presentation)}guessColorPresentation(e,t){for(let r=0;r<this.colorPresentations.length;r++)if(t.toLowerCase()===this.colorPresentations[r].label){this.presentationIndex=r,this._onDidChangePresentation.fire(this.presentation);break}}flushColor(){this._onColorFlushed.fire(this._color)}};ql();Pe();lo();$n();Ne();W();Z();mt();Oe();var Rn=V,B0=class extends F{constructor(e,t,r){super();this.model=t,this.domNode=Rn(".colorpicker-header"),B(e,this.domNode),this.pickedColorNode=B(this.domNode,Rn(".picked-color"));let n=p("clickToToggleColorOptions","Click to toggle color options (rgb/hsl/hex)");this.pickedColorNode.setAttribute("title",n);let i=B(this.domNode,Rn(".original-color"));i.style.backgroundColor=xe.Format.CSS.format(this.model.originalColor)||"",this.backgroundColor=r.getColorTheme().getColor(xi)||xe.white,this._register(ke((a,s)=>{this.backgroundColor=a.getColor(xi)||xe.white})),this._register(qe(this.pickedColorNode,Kr.CLICK,()=>this.model.selectNextColorPresentation())),this._register(qe(i,Kr.CLICK,()=>{this.model.color=this.model.originalColor,this.model.flushColor()})),this._register(t.onDidChangeColor(this.onDidChangeColor,this)),this._register(t.onDidChangePresentation(this.onDidChangePresentation,this)),this.pickedColorNode.style.backgroundColor=xe.Format.CSS.format(t.color)||"",this.pickedColorNode.classList.toggle("light",t.color.rgba.a<.5?this.backgroundColor.isLighter():t.color.isLighter()),this.onDidChangeColor(this.model.color)}onDidChangeColor(e){this.pickedColorNode.style.backgroundColor=xe.Format.CSS.format(e)||"",this.pickedColorNode.classList.toggle("light",e.rgba.a<.5?this.backgroundColor.isLighter():e.isLighter()),this.onDidChangePresentation()}onDidChangePresentation(){this.pickedColorNode.textContent=this.model.presentation?this.model.presentation.label:"",this.pickedColorNode.prepend(Rn(".codicon.codicon-color-mode"))}},V0=class extends F{constructor(e,t,r){super();this.model=t,this.pixelRatio=r,this.domNode=Rn(".colorpicker-body"),B(e,this.domNode),this.saturationBox=new H0(this.domNode,this.model,this.pixelRatio),this._register(this.saturationBox),this._register(this.saturationBox.onDidChange(this.onDidSaturationValueChange,this)),this._register(this.saturationBox.onColorFlushed(this.flushColor,this)),this.opacityStrip=new U0(this.domNode,this.model),this._register(this.opacityStrip),this._register(this.opacityStrip.onDidChange(this.onDidOpacityChange,this)),this._register(this.opacityStrip.onColorFlushed(this.flushColor,this)),this.hueStrip=new W0(this.domNode,this.model),this._register(this.hueStrip),this._register(this.hueStrip.onDidChange(this.onDidHueChange,this)),this._register(this.hueStrip.onColorFlushed(this.flushColor,this))}flushColor(){this.model.flushColor()}onDidSaturationValueChange({s:e,v:t}){let r=this.model.color.hsva;this.model.color=new xe(new ac(r.h,e,t,r.a))}onDidOpacityChange(e){let t=this.model.color.hsva;this.model.color=new xe(new ac(t.h,t.s,t.v,e))}onDidHueChange(e){let t=this.model.color.hsva,r=(1-e)*360;this.model.color=new xe(new ac(r===360?0:r,t.s,t.v,t.a))}layout(){this.saturationBox.layout(),this.opacityStrip.layout(),this.hueStrip.layout()}},H0=class extends F{constructor(e,t,r){super();this.model=t,this.pixelRatio=r,this._onDidChange=new j,this.onDidChange=this._onDidChange.event,this._onColorFlushed=new j,this.onColorFlushed=this._onColorFlushed.event,this.domNode=Rn(".saturation-wrap"),B(e,this.domNode),this.canvas=document.createElement("canvas"),this.canvas.className="saturation-box",B(this.domNode,this.canvas),this.selection=Rn(".saturation-selection"),B(this.domNode,this.selection),this.layout(),this._register(jm(this.domNode,n=>this.onMouseDown(n))),this._register(this.model.onDidChangeColor(this.onDidChangeColor,this)),this.monitor=null}onMouseDown(e){this.monitor=this._register(new ic);let t=nr(this.domNode);e.target!==this.selection&&this.onDidChangePosition(e.offsetX,e.offsetY),this.monitor.startMonitoring(e.target,e.buttons,nc,n=>this.onDidChangePosition(n.posx-t.left,n.posy-t.top),()=>null);let r=zm(document,()=>{this._onColorFlushed.fire(),r.dispose(),this.monitor&&(this.monitor.stopMonitoring(!0),this.monitor=null)},!0)}onDidChangePosition(e,t){let r=Math.max(0,Math.min(1,e/this.width)),n=Math.max(0,Math.min(1,1-t/this.height));this.paintSelection(r,n),this._onDidChange.fire({s:r,v:n})}layout(){this.width=this.domNode.offsetWidth,this.height=this.domNode.offsetHeight,this.canvas.width=this.width*this.pixelRatio,this.canvas.height=this.height*this.pixelRatio,this.paint();let e=this.model.color.hsva;this.paintSelection(e.s,e.v)}paint(){let e=this.model.color.hsva,t=new xe(new ac(e.h,1,1,1)),r=this.canvas.getContext("2d"),n=r.createLinearGradient(0,0,this.canvas.width,0);n.addColorStop(0,"rgba(255, 255, 255, 1)"),n.addColorStop(.5,"rgba(255, 255, 255, 0.5)"),n.addColorStop(1,"rgba(255, 255, 255, 0)");let i=r.createLinearGradient(0,0,0,this.canvas.height);i.addColorStop(0,"rgba(0, 0, 0, 0)"),i.addColorStop(1,"rgba(0, 0, 0, 1)"),r.rect(0,0,this.canvas.width,this.canvas.height),r.fillStyle=xe.Format.CSS.format(t),r.fill(),r.fillStyle=n,r.fill(),r.fillStyle=i,r.fill()}paintSelection(e,t){this.selection.style.left=`${e*this.width}px`,this.selection.style.top=`${this.height-t*this.height}px`}onDidChangeColor(){this.monitor&&this.monitor.isMonitoring()||this.paint()}},kg=class extends F{constructor(e,t){super();this.model=t,this._onDidChange=new j,this.onDidChange=this._onDidChange.event,this._onColorFlushed=new j,this.onColorFlushed=this._onColorFlushed.event,this.domNode=B(e,Rn(".strip")),this.overlay=B(this.domNode,Rn(".overlay")),this.slider=B(this.domNode,Rn(".slider")),this.slider.style.top="0px",this._register(jm(this.domNode,r=>this.onMouseDown(r))),this.layout()}layout(){this.height=this.domNode.offsetHeight-this.slider.offsetHeight;let e=this.getValue(this.model.color);this.updateSliderPosition(e)}onMouseDown(e){let t=this._register(new ic),r=nr(this.domNode);this.domNode.classList.add("grabbing"),e.target!==this.slider&&this.onDidChangeTop(e.offsetY),t.startMonitoring(e.target,e.buttons,nc,i=>this.onDidChangeTop(i.posy-r.top),()=>null);let n=zm(document,()=>{this._onColorFlushed.fire(),n.dispose(),t.stopMonitoring(!0),this.domNode.classList.remove("grabbing")},!0)}onDidChangeTop(e){let t=Math.max(0,Math.min(1,1-e/this.height));this.updateSliderPosition(t),this._onDidChange.fire(t)}updateSliderPosition(e){this.slider.style.top=`${(1-e)*this.height}px`}},U0=class extends kg{constructor(e,t){super(e,t);this.domNode.classList.add("opacity-strip"),this._register(t.onDidChangeColor(this.onDidChangeColor,this)),this.onDidChangeColor(this.model.color)}onDidChangeColor(e){let{r:t,g:r,b:n}=e.rgba,i=new xe(new Ti(t,r,n,1)),a=new xe(new Ti(t,r,n,0));this.overlay.style.background=`linear-gradient(to bottom, ${i} 0%, ${a} 100%)`}getValue(e){return e.hsva.a}},W0=class extends kg{constructor(e,t){super(e,t);this.domNode.classList.add("hue-strip")}getValue(e){return 1-e.hsva.h/360}},Ng=class extends Cr{constructor(e,t,r,n){super();this.model=t,this.pixelRatio=r,this._register(qv.onDidChange(()=>this.layout()));let i=Rn(".colorpicker-widget");e.appendChild(i);let a=new B0(i,this.model,n);this.body=new V0(i,this.model,this.pixelRatio),this._register(a),this._register(this.body)}layout(){this.body.layout()}};Oe();var Xw=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Yw=function(o,e){return function(t,r){e(t,r,o)}},j0=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},z0=class{constructor(e,t,r,n){this.owner=e,this.range=t,this.model=r,this.provider=n,this.forceShowAtRange=!0}isValidForHoverAnchor(e){return e.type===1&&this.range.startColumn<=e.range.startColumn&&this.range.endColumn>=e.range.endColumn}},tf=class{constructor(e,t){this._editor=e,this._themeService=t}computeSync(e,t){return[]}computeAsync(e,t,r){return vr.fromPromise(this._computeAsync(e,t,r))}_computeAsync(e,t,r){return j0(this,void 0,void 0,function*(){if(!this._editor.hasModel())return[];let n=xa.get(this._editor);if(!n)return[];for(let i of t){if(!n.isColorDecorationId(i.id))continue;let a=n.getColorData(i.range.getStartPosition());if(a)return[yield this._createColorHover(this._editor.getModel(),a.colorInfo,a.provider)]}return[]})}_createColorHover(e,t,r){return j0(this,void 0,void 0,function*(){let n=e.getValueInRange(t.range),{red:i,green:a,blue:s,alpha:l}=t.color,d=new Ti(Math.round(i*255),Math.round(a*255),Math.round(s*255),l),c=new xe(d),u=yield Kh(e,t,r,he.None),f=new Ig(c,[],0);return f.colorPresentations=u||[],f.guessColorPresentation(c,n),new z0(this,y.lift(t.range),f,r)})}renderHoverParts(e,t){if(t.length===0||!this._editor.hasModel())return F.None;let r=new P,n=t[0],i=this._editor.getModel(),a=n.model,s=r.add(new Ng(e.fragment,a,this._editor.getOption(129),this._themeService));e.setColorPicker(s);let l=new y(n.range.startLineNumber,n.range.startColumn,n.range.endLineNumber,n.range.endColumn),d=()=>{let u,f;if(a.presentation.textEdit){u=[a.presentation.textEdit],f=new y(a.presentation.textEdit.range.startLineNumber,a.presentation.textEdit.range.startColumn,a.presentation.textEdit.range.endLineNumber,a.presentation.textEdit.range.endColumn);let m=this._editor.getModel()._setTrackedRange(null,f,3);this._editor.pushUndoStop(),this._editor.executeEdits("colorpicker",u),f=this._editor.getModel()._getTrackedRange(m)||f}else u=[{identifier:null,range:l,text:a.presentation.label,forceMoveMarkers:!1}],f=l.setEndPosition(l.endLineNumber,l.startColumn+a.presentation.label.length),this._editor.pushUndoStop(),this._editor.executeEdits("colorpicker",u);a.presentation.additionalTextEdits&&(u=[...a.presentation.additionalTextEdits],this._editor.executeEdits("colorpicker",u),e.hide()),this._editor.pushUndoStop(),l=f},c=u=>Kh(i,{range:l,color:{red:u.rgba.r/255,green:u.rgba.g/255,blue:u.rgba.b/255,alpha:u.rgba.a}},n.provider,he.None).then(f=>{a.colorPresentations=f||[]});return r.add(a.onColorFlushed(u=>{c(u).then(d)})),r.add(a.onDidChangeColor(c)),r}};tf=Xw([Yw(1,Ot)],tf);we();Ae();Ne();W();var $w=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},Qw=function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=o[Symbol.asyncIterator],t;return e?e.call(o):(o=typeof __values=="function"?__values(o):o[Symbol.iterator](),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(i){t[i]=o[i]&&function(a){return new Promise(function(s,l){a=o[i](a),n(s,l,a.done,a.value)})}}function n(i,a,s,l){Promise.resolve(l).then(function(d){i({value:d,done:s})},a)}},K0=class{constructor(e,t,r){this.value=e,this.isComplete=t,this.hasLoadingMessage=r}},Kc=class extends F{constructor(e,t){super();this._editor=e,this._computer=t,this._onResult=this._register(new j),this.onResult=this._onResult.event,this._firstWaitScheduler=this._register(new Ke(()=>this._triggerAsyncComputation(),0)),this._secondWaitScheduler=this._register(new Ke(()=>this._triggerSyncComputation(),0)),this._loadingMessageScheduler=this._register(new Ke(()=>this._triggerLoadingMessage(),0)),this._state=0,this._asyncIterable=null,this._asyncIterableDone=!1,this._result=[]}dispose(){this._asyncIterable&&(this._asyncIterable.cancel(),this._asyncIterable=null),super.dispose()}get _hoverTime(){return this._editor.getOption(53).delay}get _firstWaitTime(){return this._hoverTime/2}get _secondWaitTime(){return this._hoverTime-this._firstWaitTime}get _loadingMessageTime(){return 3*this._hoverTime}_setState(e,t=!0){this._state=e,t&&this._fireResult()}_triggerAsyncComputation(){this._setState(2),this._secondWaitScheduler.schedule(this._secondWaitTime),this._computer.computeAsync?(this._asyncIterableDone=!1,this._asyncIterable=Tv(e=>this._computer.computeAsync(e)),$w(this,void 0,void 0,function*(){var e,t;try{try{for(var r=Qw(this._asyncIterable),n;n=yield r.next(),!n.done;){let i=n.value;i&&(this._result.push(i),this._fireResult())}}catch(i){e={error:i}}finally{try{n&&!n.done&&(t=r.return)&&(yield t.call(r))}finally{if(e)throw e.error}}this._asyncIterableDone=!0,(this._state===3||this._state===4)&&this._setState(0)}catch(i){ce(i)}})):this._asyncIterableDone=!0}_triggerSyncComputation(){this._computer.computeSync&&(this._result=this._result.concat(this._computer.computeSync())),this._setState(this._asyncIterableDone?0:3)}_triggerLoadingMessage(){this._state===3&&this._setState(4)}_fireResult(){if(this._state===1||this._state===2)return;let e=this._state===0,t=this._state===4;this._onResult.fire(new K0(this._result.slice(0),e,t))}start(e){if(e===0)this._state===0&&(this._setState(1),this._firstWaitScheduler.schedule(this._firstWaitTime),this._loadingMessageScheduler.schedule(this._loadingMessageTime));else switch(this._state){case 0:this._triggerAsyncComputation(),this._secondWaitScheduler.cancel(),this._triggerSyncComputation();break;case 2:this._secondWaitScheduler.cancel(),this._triggerSyncComputation();break}}cancel(){this._firstWaitScheduler.cancel(),this._secondWaitScheduler.cancel(),this._loadingMessageScheduler.cancel(),this._asyncIterable&&(this._asyncIterable.cancel(),this._asyncIterable=null),this._result=[],this._setState(0,!1)}};var qc=class{constructor(e,t){this.priority=e,this.range=t,this.type=1}equals(e){return e.type===1&&this.range.equalsRange(e.range)}canAdoptVisibleHover(e,t){return e.type===1&&t.lineNumber===this.range.startLineNumber}},Lo=class{constructor(e,t,r){this.priority=e,this.owner=t,this.range=r,this.type=2}equals(e){return e.type===2&&this.owner===e.owner}canAdoptVisibleHover(e,t){return e.type===2&&this.owner===e.owner}};Pe();bt();we();W();Pe();function Zw(o){if(Array.isArray(o)){for(var e=0,t=Array(o.length);e<o.length;e++)t[e]=o[e];return t}else return Array.from(o)}var eA=Object.hasOwnProperty,q0=Object.setPrototypeOf,tA=Object.isFrozen,rA=Object.getPrototypeOf,nA=Object.getOwnPropertyDescriptor,Lr=Object.freeze,Gi=Object.seal,iA=Object.create,tE=typeof Reflect!="undefined"&&Reflect,af=tE.apply,Fg=tE.construct;af||(af=function(e,t,r){return e.apply(t,r)});Lr||(Lr=function(e){return e});Gi||(Gi=function(e){return e});Fg||(Fg=function(e,t){return new(Function.prototype.bind.apply(e,[null].concat(Zw(t))))});var aA=Pn(Array.prototype.forEach),J0=Pn(Array.prototype.pop),Jc=Pn(Array.prototype.push),wo=Pn(String.prototype.toLowerCase),X0=Pn(String.prototype.match),Aa=Pn(String.prototype.replace),oA=Pn(String.prototype.indexOf),sA=Pn(String.prototype.trim),Fi=Pn(RegExp.prototype.test),Y0=lA(TypeError);function Pn(o){return function(e){for(var t=arguments.length,r=Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];return af(o,e,r)}}function lA(o){return function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return Fg(o,t)}}function Me(o,e){q0&&q0(o,null);for(var t=e.length;t--;){var r=e[t];if(typeof r=="string"){var n=wo(r);n!==r&&(tA(e)||(e[t]=n),r=n)}o[r]=!0}return o}function Do(o){var e=iA(null),t=void 0;for(t in o)af(eA,o,[t])&&(e[t]=o[t]);return e}function rf(o,e){for(;o!==null;){var t=nA(o,e);if(t){if(t.get)return Pn(t.get);if(typeof t.value=="function")return Pn(t.value)}o=rA(o)}function r(n){return console.warn("fallback value for",n),null}return r}var $0=Lr(["a","abbr","acronym","address","area","article","aside","audio","b","bdi","bdo","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","content","data","datalist","dd","decorator","del","details","dfn","dialog","dir","div","dl","dt","element","em","fieldset","figcaption","figure","font","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","img","input","ins","kbd","label","legend","li","main","map","mark","marquee","menu","menuitem","meter","nav","nobr","ol","optgroup","option","output","p","picture","pre","progress","q","rp","rt","ruby","s","samp","section","select","shadow","small","source","spacer","span","strike","strong","style","sub","summary","sup","table","tbody","td","template","textarea","tfoot","th","thead","time","tr","track","tt","u","ul","var","video","wbr"]),Rg=Lr(["svg","a","altglyph","altglyphdef","altglyphitem","animatecolor","animatemotion","animatetransform","circle","clippath","defs","desc","ellipse","filter","font","g","glyph","glyphref","hkern","image","line","lineargradient","marker","mask","metadata","mpath","path","pattern","polygon","polyline","radialgradient","rect","stop","style","switch","symbol","text","textpath","title","tref","tspan","view","vkern"]),Pg=Lr(["feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence"]),cA=Lr(["animate","color-profile","cursor","discard","fedropshadow","feimage","font-face","font-face-format","font-face-name","font-face-src","font-face-uri","foreignobject","hatch","hatchpath","mesh","meshgradient","meshpatch","meshrow","missing-glyph","script","set","solidcolor","unknown","use"]),Mg=Lr(["math","menclose","merror","mfenced","mfrac","mglyph","mi","mlabeledtr","mmultiscripts","mn","mo","mover","mpadded","mphantom","mroot","mrow","ms","mspace","msqrt","mstyle","msub","msup","msubsup","mtable","mtd","mtext","mtr","munder","munderover"]),dA=Lr(["maction","maligngroup","malignmark","mlongdiv","mscarries","mscarry","msgroup","mstack","msline","msrow","semantics","annotation","annotation-xml","mprescripts","none"]),Q0=Lr(["#text"]),Z0=Lr(["accept","action","align","alt","autocapitalize","autocomplete","autopictureinpicture","autoplay","background","bgcolor","border","capture","cellpadding","cellspacing","checked","cite","class","clear","color","cols","colspan","controls","controlslist","coords","crossorigin","datetime","decoding","default","dir","disabled","disablepictureinpicture","disableremoteplayback","download","draggable","enctype","enterkeyhint","face","for","headers","height","hidden","high","href","hreflang","id","inputmode","integrity","ismap","kind","label","lang","list","loading","loop","low","max","maxlength","media","method","min","minlength","multiple","muted","name","noshade","novalidate","nowrap","open","optimum","pattern","placeholder","playsinline","poster","preload","pubdate","radiogroup","readonly","rel","required","rev","reversed","role","rows","rowspan","spellcheck","scope","selected","shape","size","sizes","span","srclang","start","src","srcset","step","style","summary","tabindex","title","translate","type","usemap","valign","value","width","xmlns","slot"]),Og=Lr(["accent-height","accumulate","additive","alignment-baseline","ascent","attributename","attributetype","azimuth","basefrequency","baseline-shift","begin","bias","by","class","clip","clippathunits","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cx","cy","d","dx","dy","diffuseconstant","direction","display","divisor","dur","edgemode","elevation","end","fill","fill-opacity","fill-rule","filter","filterunits","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","fx","fy","g1","g2","glyph-name","glyphref","gradientunits","gradienttransform","height","href","id","image-rendering","in","in2","k","k1","k2","k3","k4","kerning","keypoints","keysplines","keytimes","lang","lengthadjust","letter-spacing","kernelmatrix","kernelunitlength","lighting-color","local","marker-end","marker-mid","marker-start","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","max","mask","media","method","mode","min","name","numoctaves","offset","operator","opacity","order","orient","orientation","origin","overflow","paint-order","path","pathlength","patterncontentunits","patterntransform","patternunits","points","preservealpha","preserveaspectratio","primitiveunits","r","rx","ry","radius","refx","refy","repeatcount","repeatdur","restart","result","rotate","scale","seed","shape-rendering","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","stop-color","stop-opacity","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke","stroke-width","style","surfacescale","systemlanguage","tabindex","targetx","targety","transform","text-anchor","text-decoration","text-rendering","textlength","type","u1","u2","unicode","values","viewbox","visibility","version","vert-adv-y","vert-origin-x","vert-origin-y","width","word-spacing","wrap","writing-mode","xchannelselector","ychannelselector","x","x1","x2","xmlns","y","y1","y2","z","zoomandpan"]),eE=Lr(["accent","accentunder","align","bevelled","close","columnsalign","columnlines","columnspan","denomalign","depth","dir","display","displaystyle","encoding","fence","frame","height","href","id","largeop","length","linethickness","lspace","lquote","mathbackground","mathcolor","mathsize","mathvariant","maxsize","minsize","movablelimits","notation","numalign","open","rowalign","rowlines","rowspacing","rowspan","rspace","rquote","scriptlevel","scriptminsize","scriptsizemultiplier","selection","separator","separators","stretchy","subscriptshift","supscriptshift","symmetric","voffset","width","xmlns"]),nf=Lr(["xlink:href","xml:id","xlink:title","xml:space","xmlns:xlink"]),uA=Gi(/\{\{[\s\S]*|[\s\S]*\}\}/gm),pA=Gi(/<%[\s\S]*|[\s\S]*%>/gm),fA=Gi(/^data-[\-\w.\u00B7-\uFFFF]/),mA=Gi(/^aria-[\-\w]+$/),hA=Gi(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i),gA=Gi(/^(?:\w+script|data):/i),_A=Gi(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g),Xc=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(o){return typeof o}:function(o){return o&&typeof Symbol=="function"&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o};function ni(o){if(Array.isArray(o)){for(var e=0,t=Array(o.length);e<o.length;e++)t[e]=o[e];return t}else return Array.from(o)}var yA=function(){return typeof window=="undefined"?null:window},vA=function(e,t){if((typeof e=="undefined"?"undefined":Xc(e))!=="object"||typeof e.createPolicy!="function")return null;var r=null,n="data-tt-policy-suffix";t.currentScript&&t.currentScript.hasAttribute(n)&&(r=t.currentScript.getAttribute(n));var i="dompurify"+(r?"#"+r:"");try{return e.createPolicy(i,{createHTML:function(s){return s}})}catch(a){return console.warn("TrustedTypes policy "+i+" could not be created."),null}};function rE(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:yA(),e=function(A){return rE(A)};if(e.version="2.3.1",e.removed=[],!o||!o.document||o.document.nodeType!==9)return e.isSupported=!1,e;var t=o.document,r=o.document,n=o.DocumentFragment,i=o.HTMLTemplateElement,a=o.Node,s=o.Element,l=o.NodeFilter,d=o.NamedNodeMap,c=d===void 0?o.NamedNodeMap||o.MozNamedAttrMap:d,u=o.Text,f=o.Comment,m=o.DOMParser,g=o.trustedTypes,b=s.prototype,T=rf(b,"cloneNode"),x=rf(b,"nextSibling"),R=rf(b,"childNodes"),I=rf(b,"parentNode");if(typeof i=="function"){var H=r.createElement("template");H.content&&H.content.ownerDocument&&(r=H.content.ownerDocument)}var U=vA(g,t),de=U&&os?U.createHTML(""):"",Ce=r,wt=Ce.implementation,Vt=Ce.createNodeIterator,Ht=Ce.createDocumentFragment,rn=Ce.getElementsByTagName,vn=t.importNode,tr={};try{tr=Do(r).documentMode?r.documentMode:{}}catch(ve){}var mr={};e.isSupported=typeof I=="function"&&wt&&typeof wt.createHTMLDocument!="undefined"&&tr!==9;var bn=uA,Zi=pA,za=fA,Ka=mA,tu=gA,ru=_A,ea=hA,ie=null,ae=Me({},[].concat(ni($0),ni(Rg),ni(Pg),ni(Mg),ni(Q0))),qt=null,Il=Me({},[].concat(ni(Z0),ni(Og),ni(eE),ni(nf))),Sn=null,ta=null,is=!0,qa=!0,Hn=!1,me=!1,ra=!1,kl=!1,Nl=!1,na=!1,as=!1,nu=!0,os=!1,iu=!0,k=!0,C=!1,L={},h=null,_=Me({},["annotation-xml","audio","colgroup","desc","foreignobject","head","iframe","math","mi","mn","mo","ms","mtext","noembed","noframes","noscript","plaintext","script","style","svg","template","thead","title","video","xmp"]),E=null,S=Me({},["audio","video","img","source","image","track"]),N=null,O=Me({},["alt","class","for","id","label","name","pattern","placeholder","role","summary","title","value","style","xmlns"]),te="http://www.w3.org/1998/Math/MathML",$="http://www.w3.org/2000/svg",_e="http://www.w3.org/1999/xhtml",ye=_e,je=!1,De=null,se=r.createElement("form"),ht=function(A){De&&De===A||((!A||(typeof A=="undefined"?"undefined":Xc(A))!=="object")&&(A={}),A=Do(A),ie="ALLOWED_TAGS"in A?Me({},A.ALLOWED_TAGS):ae,qt="ALLOWED_ATTR"in A?Me({},A.ALLOWED_ATTR):Il,N="ADD_URI_SAFE_ATTR"in A?Me(Do(O),A.ADD_URI_SAFE_ATTR):O,E="ADD_DATA_URI_TAGS"in A?Me(Do(S),A.ADD_DATA_URI_TAGS):S,h="FORBID_CONTENTS"in A?Me({},A.FORBID_CONTENTS):_,Sn="FORBID_TAGS"in A?Me({},A.FORBID_TAGS):{},ta="FORBID_ATTR"in A?Me({},A.FORBID_ATTR):{},L="USE_PROFILES"in A?A.USE_PROFILES:!1,is=A.ALLOW_ARIA_ATTR!==!1,qa=A.ALLOW_DATA_ATTR!==!1,Hn=A.ALLOW_UNKNOWN_PROTOCOLS||!1,me=A.SAFE_FOR_TEMPLATES||!1,ra=A.WHOLE_DOCUMENT||!1,na=A.RETURN_DOM||!1,as=A.RETURN_DOM_FRAGMENT||!1,nu=A.RETURN_DOM_IMPORT!==!1,os=A.RETURN_TRUSTED_TYPE||!1,Nl=A.FORCE_BODY||!1,iu=A.SANITIZE_DOM!==!1,k=A.KEEP_CONTENT!==!1,C=A.IN_PLACE||!1,ea=A.ALLOWED_URI_REGEXP||ea,ye=A.NAMESPACE||_e,me&&(qa=!1),as&&(na=!0),L&&(ie=Me({},[].concat(ni(Q0))),qt=[],L.html===!0&&(Me(ie,$0),Me(qt,Z0)),L.svg===!0&&(Me(ie,Rg),Me(qt,Og),Me(qt,nf)),L.svgFilters===!0&&(Me(ie,Pg),Me(qt,Og),Me(qt,nf)),L.mathMl===!0&&(Me(ie,Mg),Me(qt,eE),Me(qt,nf))),A.ADD_TAGS&&(ie===ae&&(ie=Do(ie)),Me(ie,A.ADD_TAGS)),A.ADD_ATTR&&(qt===Il&&(qt=Do(qt)),Me(qt,A.ADD_ATTR)),A.ADD_URI_SAFE_ATTR&&Me(N,A.ADD_URI_SAFE_ATTR),A.FORBID_CONTENTS&&(h===_&&(h=Do(h)),Me(h,A.FORBID_CONTENTS)),k&&(ie["#text"]=!0),ra&&Me(ie,["html","head","body"]),ie.table&&(Me(ie,["tbody"]),delete Sn.tbody),Lr&&Lr(A),De=A)},st=Me({},["mi","mo","mn","ms","mtext"]),jr=Me({},["foreignobject","desc","title","annotation-xml"]),Qe=Me({},Rg);Me(Qe,Pg),Me(Qe,cA);var At=Me({},Mg);Me(At,dA);var Ja=function(A){var Y=I(A);(!Y||!Y.tagName)&&(Y={namespaceURI:_e,tagName:"template"});var ue=wo(A.tagName),Ze=wo(Y.tagName);if(A.namespaceURI===$)return Y.namespaceURI===_e?ue==="svg":Y.namespaceURI===te?ue==="svg"&&(Ze==="annotation-xml"||st[Ze]):Boolean(Qe[ue]);if(A.namespaceURI===te)return Y.namespaceURI===_e?ue==="math":Y.namespaceURI===$?ue==="math"&&jr[Ze]:Boolean(At[ue]);if(A.namespaceURI===_e){if(Y.namespaceURI===$&&!jr[Ze]||Y.namespaceURI===te&&!st[Ze])return!1;var hr=Me({},["title","style","font","a","script"]);return!At[ue]&&(hr[ue]||!Qe[ue])}return!1},Ar=function(A){Jc(e.removed,{element:A});try{A.parentNode.removeChild(A)}catch(Y){try{A.outerHTML=de}catch(ue){A.remove()}}},En=function(A,Y){try{Jc(e.removed,{attribute:Y.getAttributeNode(A),from:Y})}catch(ue){Jc(e.removed,{attribute:null,from:Y})}if(Y.removeAttribute(A),A==="is"&&!qt[A])if(na||as)try{Ar(Y)}catch(ue){}else try{Y.setAttribute(A,"")}catch(ue){}},ia=function(A){var Y=void 0,ue=void 0;if(Nl)A="<remove></remove>"+A;else{var Ze=X0(A,/^[\r\n\t ]+/);ue=Ze&&Ze[0]}var hr=U?U.createHTML(A):A;if(ye===_e)try{Y=new m().parseFromString(hr,"text/html")}catch(_r){}if(!Y||!Y.documentElement){Y=wt.createDocument(ye,"template",null);try{Y.documentElement.innerHTML=je?"":hr}catch(_r){}}var gr=Y.body||Y.documentElement;return A&&ue&&gr.insertBefore(r.createTextNode(ue),gr.childNodes[0]||null),ye===_e?rn.call(Y,ra?"html":"body")[0]:ra?Y.documentElement:gr},fi=function(A){return Vt.call(A.ownerDocument||A,A,l.SHOW_ELEMENT|l.SHOW_COMMENT|l.SHOW_TEXT,null,!1)},ss=function(A){return A instanceof u||A instanceof f?!1:typeof A.nodeName!="string"||typeof A.textContent!="string"||typeof A.removeChild!="function"||!(A.attributes instanceof c)||typeof A.removeAttribute!="function"||typeof A.setAttribute!="function"||typeof A.namespaceURI!="string"||typeof A.insertBefore!="function"},aa=function(A){return(typeof a=="undefined"?"undefined":Xc(a))==="object"?A instanceof a:A&&(typeof A=="undefined"?"undefined":Xc(A))==="object"&&typeof A.nodeType=="number"&&typeof A.nodeName=="string"},Tn=function(A,Y,ue){!mr[A]||aA(mr[A],function(Ze){Ze.call(e,Y,ue,De)})},Rl=function(A){var Y=void 0;if(Tn("beforeSanitizeElements",A,null),ss(A)||X0(A.nodeName,/[\u0080-\uFFFF]/))return Ar(A),!0;var ue=wo(A.nodeName);if(Tn("uponSanitizeElement",A,{tagName:ue,allowedTags:ie}),!aa(A.firstElementChild)&&(!aa(A.content)||!aa(A.content.firstElementChild))&&Fi(/<[/\w]/g,A.innerHTML)&&Fi(/<[/\w]/g,A.textContent)||ue==="select"&&Fi(/<template/i,A.innerHTML))return Ar(A),!0;if(!ie[ue]||Sn[ue]){if(k&&!h[ue]){var Ze=I(A)||A.parentNode,hr=R(A)||A.childNodes;if(hr&&Ze)for(var gr=hr.length,_r=gr-1;_r>=0;--_r)Ze.insertBefore(T(hr[_r],!0),x(A))}return Ar(A),!0}return A instanceof s&&!Ja(A)||(ue==="noscript"||ue==="noembed")&&Fi(/<\/no(script|embed)/i,A.innerHTML)?(Ar(A),!0):(me&&A.nodeType===3&&(Y=A.textContent,Y=Aa(Y,bn," "),Y=Aa(Y,Zi," "),A.textContent!==Y&&(Jc(e.removed,{element:A.cloneNode()}),A.textContent=Y)),Tn("afterSanitizeElements",A,null),!1)},au=function(A,Y,ue){if(iu&&(Y==="id"||Y==="name")&&(ue in r||ue in se))return!1;if(!(qa&&!ta[Y]&&Fi(za,Y))){if(!(is&&Fi(Ka,Y))){if(!qt[Y]||ta[Y])return!1;if(!N[Y]){if(!Fi(ea,Aa(ue,ru,""))){if(!((Y==="src"||Y==="xlink:href"||Y==="href")&&A!=="script"&&oA(ue,"data:")===0&&E[A])){if(!(Hn&&!Fi(tu,Aa(ue,ru,"")))){if(ue)return!1}}}}}}return!0},Zy=function(A){var Y=void 0,ue=void 0,Ze=void 0,hr=void 0;Tn("beforeSanitizeAttributes",A,null);var gr=A.attributes;if(!!gr){var _r={attrName:"",attrValue:"",keepAttr:!0,allowedAttributes:qt};for(hr=gr.length;hr--;){Y=gr[hr];var mi=Y,Pl=mi.name,ev=mi.namespaceURI;if(ue=sA(Y.value),Ze=wo(Pl),_r.attrName=Ze,_r.attrValue=ue,_r.keepAttr=!0,_r.forceKeepAttr=void 0,Tn("uponSanitizeAttribute",A,_r),ue=_r.attrValue,!_r.forceKeepAttr&&(En(Pl,A),!!_r.keepAttr)){if(Fi(/\/>/i,ue)){En(Pl,A);continue}me&&(ue=Aa(ue,bn," "),ue=Aa(ue,Zi," "));var HL=A.nodeName.toLowerCase();if(!!au(HL,Ze,ue))try{ev?A.setAttributeNS(ev,Pl,ue):A.setAttribute(Pl,ue),J0(e.removed)}catch(RR){}}}Tn("afterSanitizeAttributes",A,null)}},VL=function ve(A){var Y=void 0,ue=fi(A);for(Tn("beforeSanitizeShadowDOM",A,null);Y=ue.nextNode();)Tn("uponSanitizeShadowNode",Y,null),!Rl(Y)&&(Y.content instanceof n&&ve(Y.content),Zy(Y));Tn("afterSanitizeShadowDOM",A,null)};return e.sanitize=function(ve,A){var Y=void 0,ue=void 0,Ze=void 0,hr=void 0,gr=void 0;if(je=!ve,je&&(ve="<!-->"),typeof ve!="string"&&!aa(ve)){if(typeof ve.toString!="function")throw Y0("toString is not a function");if(ve=ve.toString(),typeof ve!="string")throw Y0("dirty is not a string, aborting")}if(!e.isSupported){if(Xc(o.toStaticHTML)==="object"||typeof o.toStaticHTML=="function"){if(typeof ve=="string")return o.toStaticHTML(ve);if(aa(ve))return o.toStaticHTML(ve.outerHTML)}return ve}if(kl||ht(A),e.removed=[],typeof ve=="string"&&(C=!1),!C)if(ve instanceof a)Y=ia("<!---->"),ue=Y.ownerDocument.importNode(ve,!0),ue.nodeType===1&&ue.nodeName==="BODY"||ue.nodeName==="HTML"?Y=ue:Y.appendChild(ue);else{if(!na&&!me&&!ra&&ve.indexOf("<")===-1)return U&&os?U.createHTML(ve):ve;if(Y=ia(ve),!Y)return na?null:de}Y&&Nl&&Ar(Y.firstChild);for(var _r=fi(C?ve:Y);Ze=_r.nextNode();)Ze.nodeType===3&&Ze===hr||Rl(Ze)||(Ze.content instanceof n&&VL(Ze.content),Zy(Ze),hr=Ze);if(hr=null,C)return ve;if(na){if(as)for(gr=Ht.call(Y.ownerDocument);Y.firstChild;)gr.appendChild(Y.firstChild);else gr=Y;return nu&&(gr=vn.call(t,gr,!0)),gr}var mi=ra?Y.outerHTML:Y.innerHTML;return me&&(mi=Aa(mi,bn," "),mi=Aa(mi,Zi," ")),U&&os?U.createHTML(mi):mi},e.setConfig=function(ve){ht(ve),kl=!0},e.clearConfig=function(){De=null,kl=!1},e.isValidAttribute=function(ve,A,Y){De||ht({});var ue=wo(ve),Ze=wo(A);return au(ue,Ze,Y)},e.addHook=function(ve,A){typeof A=="function"&&(mr[ve]=mr[ve]||[],Jc(mr[ve],A))},e.removeHook=function(ve){mr[ve]&&J0(mr[ve])},e.removeHooks=function(ve){mr[ve]&&(mr[ve]=[])},e.removeAllHooks=function(){mr={}},e}var ii=rE();var VG=ii.version,HG=ii.isSupported,nE=ii.sanitize,UG=ii.setConfig,WG=ii.clearConfig,jG=ii.isValidAttribute,Gg=ii.addHook,Bg=ii.removeHook,zG=ii.removeHooks,KG=ii.removeAllHooks;dS();eD();we();pt();Ae();Ne();W();var iE={};(function(){function o(e,t){t(iE)}o.amd=!0,function(e,t){typeof exports=="object"&&typeof module!="undefined"?t(exports):typeof o=="function"&&o.amd?o(["exports"],t):(e=typeof globalThis!="undefined"?globalThis:e||self,t(e.marked={}))}(this,function(e){"use strict";function t(k,C){for(var L=0;L<C.length;L++){var h=C[L];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(k,h.key,h)}}function r(k,C,L){return C&&t(k.prototype,C),L&&t(k,L),Object.defineProperty(k,"prototype",{writable:!1}),k}function n(k,C){if(!!k){if(typeof k=="string")return i(k,C);var L=Object.prototype.toString.call(k).slice(8,-1);if(L==="Object"&&k.constructor&&(L=k.constructor.name),L==="Map"||L==="Set")return Array.from(k);if(L==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(L))return i(k,C)}}function i(k,C){(C==null||C>k.length)&&(C=k.length);for(var L=0,h=new Array(C);L<C;L++)h[L]=k[L];return h}function a(k,C){var L=typeof Symbol!="undefined"&&k[Symbol.iterator]||k["@@iterator"];if(L)return(L=L.call(k)).next.bind(L);if(Array.isArray(k)||(L=n(k))||C&&k&&typeof k.length=="number"){L&&(k=L);var h=0;return function(){return h>=k.length?{done:!0}:{done:!1,value:k[h++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function s(){return{baseUrl:null,breaks:!1,extensions:null,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tokenizer:null,walkTokens:null,xhtml:!1}}e.defaults=s();function l(k){e.defaults=k}var d=/[&<>"']/,c=/[&<>"']/g,u=/[<>"']|&(?!#?\w+;)/,f=/[<>"']|&(?!#?\w+;)/g,m={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},g=function(C){return m[C]};function b(k,C){if(C){if(d.test(k))return k.replace(c,g)}else if(u.test(k))return k.replace(f,g);return k}var T=/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig;function x(k){return k.replace(T,function(C,L){return L=L.toLowerCase(),L==="colon"?":":L.charAt(0)==="#"?L.charAt(1)==="x"?String.fromCharCode(parseInt(L.substring(2),16)):String.fromCharCode(+L.substring(1)):""})}var R=/(^|[^\[])\^/g;function I(k,C){k=k.source||k,C=C||"";var L={replace:function(_,E){return E=E.source||E,E=E.replace(R,"$1"),k=k.replace(_,E),L},getRegex:function(){return new RegExp(k,C)}};return L}var H=/[^\w:]/g,U=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;function de(k,C,L){if(k){var h;try{h=decodeURIComponent(x(L)).replace(H,"").toLowerCase()}catch(_){return null}if(h.indexOf("javascript:")===0||h.indexOf("vbscript:")===0||h.indexOf("data:")===0)return null}C&&!U.test(L)&&(L=rn(C,L));try{L=encodeURI(L).replace(/%25/g,"%")}catch(_){return null}return L}var Ce={},wt=/^[^:]+:\/*[^/]*$/,Vt=/^([^:]+:)[\s\S]*$/,Ht=/^([^:]+:\/*[^/]*)[\s\S]*$/;function rn(k,C){Ce[" "+k]||(wt.test(k)?Ce[" "+k]=k+"/":Ce[" "+k]=bn(k,"/",!0)),k=Ce[" "+k];var L=k.indexOf(":")===-1;return C.substring(0,2)==="//"?L?C:k.replace(Vt,"$1")+C:C.charAt(0)==="/"?L?C:k.replace(Ht,"$1")+C:k+C}var vn={exec:function(){}};function tr(k){for(var C=1,L,h;C<arguments.length;C++){L=arguments[C];for(h in L)Object.prototype.hasOwnProperty.call(L,h)&&(k[h]=L[h])}return k}function mr(k,C){var L=k.replace(/\|/g,function(E,S,N){for(var O=!1,te=S;--te>=0&&N[te]==="\\";)O=!O;return O?"|":" |"}),h=L.split(/ \|/),_=0;if(h[0].trim()||h.shift(),h[h.length-1].trim()||h.pop(),h.length>C)h.splice(C);else for(;h.length<C;)h.push("");for(;_<h.length;_++)h[_]=h[_].trim().replace(/\\\|/g,"|");return h}function bn(k,C,L){var h=k.length;if(h===0)return"";for(var _=0;_<h;){var E=k.charAt(h-_-1);if(E===C&&!L)_++;else if(E!==C&&L)_++;else break}return k.substr(0,h-_)}function Zi(k,C){if(k.indexOf(C[1])===-1)return-1;for(var L=k.length,h=0,_=0;_<L;_++)if(k[_]==="\\")_++;else if(k[_]===C[0])h++;else if(k[_]===C[1]&&(h--,h<0))return _;return-1}function za(k){k&&k.sanitize&&!k.silent&&console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options")}function Ka(k,C){if(C<1)return"";for(var L="";C>1;)C&1&&(L+=k),C>>=1,k+=k;return L+k}function tu(k,C,L,h){var _=C.href,E=C.title?b(C.title):null,S=k[1].replace(/\\([\[\]])/g,"$1");if(k[0].charAt(0)!=="!"){h.state.inLink=!0;var N={type:"link",raw:L,href:_,title:E,text:S,tokens:h.inlineTokens(S,[])};return h.state.inLink=!1,N}else return{type:"image",raw:L,href:_,title:E,text:b(S)}}function ru(k,C){var L=k.match(/^(\s+)(?:```)/);if(L===null)return C;var h=L[1];return C.split(`
`).map(function(_){var E=_.match(/^\s+/);if(E===null)return _;var S=E[0];return S.length>=h.length?_.slice(h.length):_}).join(`
`)}var ea=function(){function k(L){this.options=L||e.defaults}var C=k.prototype;return C.space=function(h){var _=this.rules.block.newline.exec(h);if(_&&_[0].length>0)return{type:"space",raw:_[0]}},C.code=function(h){var _=this.rules.block.code.exec(h);if(_){var E=_[0].replace(/^ {1,4}/gm,"");return{type:"code",raw:_[0],codeBlockStyle:"indented",text:this.options.pedantic?E:bn(E,`
`)}}},C.fences=function(h){var _=this.rules.block.fences.exec(h);if(_){var E=_[0],S=ru(E,_[3]||"");return{type:"code",raw:E,lang:_[2]?_[2].trim():_[2],text:S}}},C.heading=function(h){var _=this.rules.block.heading.exec(h);if(_){var E=_[2].trim();if(/#$/.test(E)){var S=bn(E,"#");(this.options.pedantic||!S||/ $/.test(S))&&(E=S.trim())}var N={type:"heading",raw:_[0],depth:_[1].length,text:E,tokens:[]};return this.lexer.inline(N.text,N.tokens),N}},C.hr=function(h){var _=this.rules.block.hr.exec(h);if(_)return{type:"hr",raw:_[0]}},C.blockquote=function(h){var _=this.rules.block.blockquote.exec(h);if(_){var E=_[0].replace(/^ *> ?/gm,"");return{type:"blockquote",raw:_[0],tokens:this.lexer.blockTokens(E,[]),text:E}}},C.list=function(h){var _=this.rules.block.list.exec(h);if(_){var E,S,N,O,te,$,_e,ye,je,De,se,ht,st=_[1].trim(),jr=st.length>1,Qe={type:"list",raw:"",ordered:jr,start:jr?+st.slice(0,-1):"",loose:!1,items:[]};st=jr?"\\d{1,9}\\"+st.slice(-1):"\\"+st,this.options.pedantic&&(st=jr?st:"[*+-]");for(var At=new RegExp("^( {0,3}"+st+")((?: [^\\n]*)?(?:\\n|$))");h&&(ht=!1,!(!(_=At.exec(h))||this.rules.block.hr.test(h)));){if(E=_[0],h=h.substring(E.length),ye=_[2].split(`
`,1)[0],je=h.split(`
`,1)[0],this.options.pedantic?(O=2,se=ye.trimLeft()):(O=_[2].search(/[^ ]/),O=O>4?1:O,se=ye.slice(O),O+=_[1].length),$=!1,!ye&&/^ *$/.test(je)&&(E+=je+`
`,h=h.substring(je.length+1),ht=!0),!ht)for(var Ja=new RegExp("^ {0,"+Math.min(3,O-1)+"}(?:[*+-]|\\d{1,9}[.)])");h&&(De=h.split(`
`,1)[0],ye=De,this.options.pedantic&&(ye=ye.replace(/^ {1,4}(?=( {4})*[^ ])/g,"  ")),!Ja.test(ye));){if(ye.search(/[^ ]/)>=O||!ye.trim())se+=`
`+ye.slice(O);else if(!$)se+=`
`+ye;else break;!$&&!ye.trim()&&($=!0),E+=De+`
`,h=h.substring(De.length+1)}Qe.loose||(_e?Qe.loose=!0:/\n *\n *$/.test(E)&&(_e=!0)),this.options.gfm&&(S=/^\[[ xX]\] /.exec(se),S&&(N=S[0]!=="[ ] ",se=se.replace(/^\[[ xX]\] +/,""))),Qe.items.push({type:"list_item",raw:E,task:!!S,checked:N,loose:!1,text:se}),Qe.raw+=E}Qe.items[Qe.items.length-1].raw=E.trimRight(),Qe.items[Qe.items.length-1].text=se.trimRight(),Qe.raw=Qe.raw.trimRight();var Ar=Qe.items.length;for(te=0;te<Ar;te++){this.lexer.state.top=!1,Qe.items[te].tokens=this.lexer.blockTokens(Qe.items[te].text,[]);var En=Qe.items[te].tokens.filter(function(fi){return fi.type==="space"}),ia=En.every(function(fi){for(var ss=fi.raw.split(""),aa=0,Tn=a(ss),Rl;!(Rl=Tn()).done;){var au=Rl.value;if(au===`
`&&(aa+=1),aa>1)return!0}return!1});!Qe.loose&&En.length&&ia&&(Qe.loose=!0,Qe.items[te].loose=!0)}return Qe}},C.html=function(h){var _=this.rules.block.html.exec(h);if(_){var E={type:"html",raw:_[0],pre:!this.options.sanitizer&&(_[1]==="pre"||_[1]==="script"||_[1]==="style"),text:_[0]};return this.options.sanitize&&(E.type="paragraph",E.text=this.options.sanitizer?this.options.sanitizer(_[0]):b(_[0]),E.tokens=[],this.lexer.inline(E.text,E.tokens)),E}},C.def=function(h){var _=this.rules.block.def.exec(h);if(_){_[3]&&(_[3]=_[3].substring(1,_[3].length-1));var E=_[1].toLowerCase().replace(/\s+/g," ");return{type:"def",tag:E,raw:_[0],href:_[2],title:_[3]}}},C.table=function(h){var _=this.rules.block.table.exec(h);if(_){var E={type:"table",header:mr(_[1]).map(function(_e){return{text:_e}}),align:_[2].replace(/^ *|\| *$/g,"").split(/ *\| */),rows:_[3]?_[3].replace(/\n[ \t]*$/,"").split(`
`):[]};if(E.header.length===E.align.length){E.raw=_[0];var S=E.align.length,N,O,te,$;for(N=0;N<S;N++)/^ *-+: *$/.test(E.align[N])?E.align[N]="right":/^ *:-+: *$/.test(E.align[N])?E.align[N]="center":/^ *:-+ *$/.test(E.align[N])?E.align[N]="left":E.align[N]=null;for(S=E.rows.length,N=0;N<S;N++)E.rows[N]=mr(E.rows[N],E.header.length).map(function(_e){return{text:_e}});for(S=E.header.length,O=0;O<S;O++)E.header[O].tokens=[],this.lexer.inlineTokens(E.header[O].text,E.header[O].tokens);for(S=E.rows.length,O=0;O<S;O++)for($=E.rows[O],te=0;te<$.length;te++)$[te].tokens=[],this.lexer.inlineTokens($[te].text,$[te].tokens);return E}}},C.lheading=function(h){var _=this.rules.block.lheading.exec(h);if(_){var E={type:"heading",raw:_[0],depth:_[2].charAt(0)==="="?1:2,text:_[1],tokens:[]};return this.lexer.inline(E.text,E.tokens),E}},C.paragraph=function(h){var _=this.rules.block.paragraph.exec(h);if(_){var E={type:"paragraph",raw:_[0],text:_[1].charAt(_[1].length-1)===`
`?_[1].slice(0,-1):_[1],tokens:[]};return this.lexer.inline(E.text,E.tokens),E}},C.text=function(h){var _=this.rules.block.text.exec(h);if(_){var E={type:"text",raw:_[0],text:_[0],tokens:[]};return this.lexer.inline(E.text,E.tokens),E}},C.escape=function(h){var _=this.rules.inline.escape.exec(h);if(_)return{type:"escape",raw:_[0],text:b(_[1])}},C.tag=function(h){var _=this.rules.inline.tag.exec(h);if(_)return!this.lexer.state.inLink&&/^<a /i.test(_[0])?this.lexer.state.inLink=!0:this.lexer.state.inLink&&/^<\/a>/i.test(_[0])&&(this.lexer.state.inLink=!1),!this.lexer.state.inRawBlock&&/^<(pre|code|kbd|script)(\s|>)/i.test(_[0])?this.lexer.state.inRawBlock=!0:this.lexer.state.inRawBlock&&/^<\/(pre|code|kbd|script)(\s|>)/i.test(_[0])&&(this.lexer.state.inRawBlock=!1),{type:this.options.sanitize?"text":"html",raw:_[0],inLink:this.lexer.state.inLink,inRawBlock:this.lexer.state.inRawBlock,text:this.options.sanitize?this.options.sanitizer?this.options.sanitizer(_[0]):b(_[0]):_[0]}},C.link=function(h){var _=this.rules.inline.link.exec(h);if(_){var E=_[2].trim();if(!this.options.pedantic&&/^</.test(E)){if(!/>$/.test(E))return;var S=bn(E.slice(0,-1),"\\");if((E.length-S.length)%2===0)return}else{var N=Zi(_[2],"()");if(N>-1){var O=_[0].indexOf("!")===0?5:4,te=O+_[1].length+N;_[2]=_[2].substring(0,N),_[0]=_[0].substring(0,te).trim(),_[3]=""}}var $=_[2],_e="";if(this.options.pedantic){var ye=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec($);ye&&($=ye[1],_e=ye[3])}else _e=_[3]?_[3].slice(1,-1):"";return $=$.trim(),/^</.test($)&&(this.options.pedantic&&!/>$/.test(E)?$=$.slice(1):$=$.slice(1,-1)),tu(_,{href:$&&$.replace(this.rules.inline._escapes,"$1"),title:_e&&_e.replace(this.rules.inline._escapes,"$1")},_[0],this.lexer)}},C.reflink=function(h,_){var E;if((E=this.rules.inline.reflink.exec(h))||(E=this.rules.inline.nolink.exec(h))){var S=(E[2]||E[1]).replace(/\s+/g," ");if(S=_[S.toLowerCase()],!S||!S.href){var N=E[0].charAt(0);return{type:"text",raw:N,text:N}}return tu(E,S,E[0],this.lexer)}},C.emStrong=function(h,_,E){E===void 0&&(E="");var S=this.rules.inline.emStrong.lDelim.exec(h);if(!!S&&!(S[3]&&E.match(/(?:[0-9A-Za-z\xAA\xB2\xB3\xB5\xB9\xBA\xBC-\xBE\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u0660-\u0669\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07C0-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0966-\u096F\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09E6-\u09F1\u09F4-\u09F9\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A66-\u0A6F\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AE6-\u0AEF\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B66-\u0B6F\u0B71-\u0B77\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0BE6-\u0BF2\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C66-\u0C6F\u0C78-\u0C7E\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CE6-\u0CEF\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D58-\u0D61\u0D66-\u0D78\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DE6-\u0DEF\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F20-\u0F33\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F-\u1049\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u1090-\u1099\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1369-\u137C\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A16\u1A20-\u1A54\u1A80-\u1A89\u1A90-\u1A99\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B50-\u1B59\u1B83-\u1BA0\u1BAE-\u1BE5\u1C00-\u1C23\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2070\u2071\u2074-\u2079\u207F-\u2089\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2150-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2CFD\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u3192-\u3195\u31A0-\u31BF\u31F0-\u31FF\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA830-\uA835\uA840-\uA873\uA882-\uA8B3\uA8D0-\uA8D9\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA900-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF-\uA9D9\uA9E0-\uA9E4\uA9E6-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA50-\uAA59\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD07-\uDD33\uDD40-\uDD78\uDD8A\uDD8B\uDE80-\uDE9C\uDEA0-\uDED0\uDEE1-\uDEFB\uDF00-\uDF23\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC58-\uDC76\uDC79-\uDC9E\uDCA7-\uDCAF\uDCE0-\uDCF2\uDCF4\uDCF5\uDCFB-\uDD1B\uDD20-\uDD39\uDD80-\uDDB7\uDDBC-\uDDCF\uDDD2-\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE40-\uDE48\uDE60-\uDE7E\uDE80-\uDE9F\uDEC0-\uDEC7\uDEC9-\uDEE4\uDEEB-\uDEEF\uDF00-\uDF35\uDF40-\uDF55\uDF58-\uDF72\uDF78-\uDF91\uDFA9-\uDFAF]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDCFA-\uDD23\uDD30-\uDD39\uDE60-\uDE7E\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF27\uDF30-\uDF45\uDF51-\uDF54\uDF70-\uDF81\uDFB0-\uDFCB\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC52-\uDC6F\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD03-\uDD26\uDD36-\uDD3F\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDD0-\uDDDA\uDDDC\uDDE1-\uDDF4\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDEF0-\uDEF9\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC50-\uDC59\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE50-\uDE59\uDE80-\uDEAA\uDEB8\uDEC0-\uDEC9\uDF00-\uDF1A\uDF30-\uDF3B\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCF2\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDD50-\uDD59\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC50-\uDC6C\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD50-\uDD59\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDDA0-\uDDA9\uDEE0-\uDEF2\uDFB0\uDFC0-\uDFD4]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDE70-\uDEBE\uDEC0-\uDEC9\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF50-\uDF59\uDF5B-\uDF61\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE96\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD834[\uDEE0-\uDEF3\uDF60-\uDF78]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD837[\uDF00-\uDF1E]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD40-\uDD49\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB\uDEF0-\uDEF9]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDCC7-\uDCCF\uDD00-\uDD43\uDD4B\uDD50-\uDD59]|\uD83B[\uDC71-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDCB4\uDD01-\uDD2D\uDD2F-\uDD3D\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD83C[\uDD00-\uDD0C]|\uD83E[\uDFF0-\uDFF9]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])/))){var N=S[1]||S[2]||"";if(!N||N&&(E===""||this.rules.inline.punctuation.exec(E))){var O=S[0].length-1,te,$,_e=O,ye=0,je=S[0][0]==="*"?this.rules.inline.emStrong.rDelimAst:this.rules.inline.emStrong.rDelimUnd;for(je.lastIndex=0,_=_.slice(-1*h.length+O);(S=je.exec(_))!=null;)if(te=S[1]||S[2]||S[3]||S[4]||S[5]||S[6],!!te){if($=te.length,S[3]||S[4]){_e+=$;continue}else if((S[5]||S[6])&&O%3&&!((O+$)%3)){ye+=$;continue}if(_e-=$,!(_e>0)){if($=Math.min($,$+_e+ye),Math.min(O,$)%2){var De=h.slice(1,O+S.index+$);return{type:"em",raw:h.slice(0,O+S.index+$+1),text:De,tokens:this.lexer.inlineTokens(De,[])}}var se=h.slice(2,O+S.index+$-1);return{type:"strong",raw:h.slice(0,O+S.index+$+1),text:se,tokens:this.lexer.inlineTokens(se,[])}}}}}},C.codespan=function(h){var _=this.rules.inline.code.exec(h);if(_){var E=_[2].replace(/\n/g," "),S=/[^ ]/.test(E),N=/^ /.test(E)&&/ $/.test(E);return S&&N&&(E=E.substring(1,E.length-1)),E=b(E,!0),{type:"codespan",raw:_[0],text:E}}},C.br=function(h){var _=this.rules.inline.br.exec(h);if(_)return{type:"br",raw:_[0]}},C.del=function(h){var _=this.rules.inline.del.exec(h);if(_)return{type:"del",raw:_[0],text:_[2],tokens:this.lexer.inlineTokens(_[2],[])}},C.autolink=function(h,_){var E=this.rules.inline.autolink.exec(h);if(E){var S,N;return E[2]==="@"?(S=b(this.options.mangle?_(E[1]):E[1]),N="mailto:"+S):(S=b(E[1]),N=S),{type:"link",raw:E[0],text:S,href:N,tokens:[{type:"text",raw:S,text:S}]}}},C.url=function(h,_){var E;if(E=this.rules.inline.url.exec(h)){var S,N;if(E[2]==="@")S=b(this.options.mangle?_(E[0]):E[0]),N="mailto:"+S;else{var O;do O=E[0],E[0]=this.rules.inline._backpedal.exec(E[0])[0];while(O!==E[0]);S=b(E[0]),E[1]==="www."?N="http://"+S:N=S}return{type:"link",raw:E[0],text:S,href:N,tokens:[{type:"text",raw:S,text:S}]}}},C.inlineText=function(h,_){var E=this.rules.inline.text.exec(h);if(E){var S;return this.lexer.state.inRawBlock?S=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(E[0]):b(E[0]):E[0]:S=b(this.options.smartypants?_(E[0]):E[0]),{type:"text",raw:E[0],text:S}}},k}(),ie={newline:/^(?: *(?:\n|$))+/,code:/^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,fences:/^ {0,3}(`{3,}(?=[^`\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?=\n|$)|$)/,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,heading:/^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( {0,3}bull)( [^\n]+?)?(?:\n|$)/,html:"^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))",def:/^ {0,3}\[(label)\]: *(?:\n *)?<?([^\s>]+)>?(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/,table:vn,lheading:/^([^\n]+)\n {0,3}(=+|-+) *(?:\n+|$)/,_paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,text:/^[^\n]+/};ie._label=/(?!\s*\])(?:\\.|[^\[\]\\])+/,ie._title=/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/,ie.def=I(ie.def).replace("label",ie._label).replace("title",ie._title).getRegex(),ie.bullet=/(?:[*+-]|\d{1,9}[.)])/,ie.listItemStart=I(/^( *)(bull) */).replace("bull",ie.bullet).getRegex(),ie.list=I(ie.list).replace(/bull/g,ie.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+ie.def.source+")").getRegex(),ie._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",ie._comment=/<!--(?!-?>)[\s\S]*?(?:-->|$)/,ie.html=I(ie.html,"i").replace("comment",ie._comment).replace("tag",ie._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),ie.paragraph=I(ie._paragraph).replace("hr",ie.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("|table","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",ie._tag).getRegex(),ie.blockquote=I(ie.blockquote).replace("paragraph",ie.paragraph).getRegex(),ie.normal=tr({},ie),ie.gfm=tr({},ie.normal,{table:"^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)(?:\\| *)?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"}),ie.gfm.table=I(ie.gfm.table).replace("hr",ie.hr).replace("heading"," {0,3}#{1,6} ").replace("blockquote"," {0,3}>").replace("code"," {4}[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",ie._tag).getRegex(),ie.gfm.paragraph=I(ie._paragraph).replace("hr",ie.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("table",ie.gfm.table).replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",ie._tag).getRegex(),ie.pedantic=tr({},ie.normal,{html:I(`^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`).replace("comment",ie._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^(#{1,6})(.*)(?:\n+|$)/,fences:vn,paragraph:I(ie.normal._paragraph).replace("hr",ie.hr).replace("heading",` *#{1,6} *[^
]`).replace("lheading",ie.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").getRegex()});var ae={escape:/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:vn,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(ref)\]/,nolink:/^!?\[(ref)\](?:\[\])?/,reflinkSearch:"reflink|nolink(?!\\()",emStrong:{lDelim:/^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,rDelimAst:/^[^_*]*?\_\_[^_*]*?\*[^_*]*?(?=\_\_)|[punct_](\*+)(?=[\s]|$)|[^punct*_\s](\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|[^punct*_\s](\*+)(?=[^punct*_\s])/,rDelimUnd:/^[^_*]*?\*\*[^_*]*?\_[^_*]*?(?=\*\*)|[punct*](\_+)(?=[\s]|$)|[^punct*_\s](\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/},code:/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,br:/^( {2,}|\\)\n(?!\s*$)/,del:vn,text:/^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,punctuation:/^([\spunctuation])/};ae._punctuation="!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~",ae.punctuation=I(ae.punctuation).replace(/punctuation/g,ae._punctuation).getRegex(),ae.blockSkip=/\[[^\]]*?\]\([^\)]*?\)|`[^`]*?`|<[^>]*?>/g,ae.escapedEmSt=/\\\*|\\_/g,ae._comment=I(ie._comment).replace("(?:-->|$)","-->").getRegex(),ae.emStrong.lDelim=I(ae.emStrong.lDelim).replace(/punct/g,ae._punctuation).getRegex(),ae.emStrong.rDelimAst=I(ae.emStrong.rDelimAst,"g").replace(/punct/g,ae._punctuation).getRegex(),ae.emStrong.rDelimUnd=I(ae.emStrong.rDelimUnd,"g").replace(/punct/g,ae._punctuation).getRegex(),ae._escapes=/\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g,ae._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,ae._email=/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,ae.autolink=I(ae.autolink).replace("scheme",ae._scheme).replace("email",ae._email).getRegex(),ae._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,ae.tag=I(ae.tag).replace("comment",ae._comment).replace("attribute",ae._attribute).getRegex(),ae._label=/(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,ae._href=/<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/,ae._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,ae.link=I(ae.link).replace("label",ae._label).replace("href",ae._href).replace("title",ae._title).getRegex(),ae.reflink=I(ae.reflink).replace("label",ae._label).replace("ref",ie._label).getRegex(),ae.nolink=I(ae.nolink).replace("ref",ie._label).getRegex(),ae.reflinkSearch=I(ae.reflinkSearch,"g").replace("reflink",ae.reflink).replace("nolink",ae.nolink).getRegex(),ae.normal=tr({},ae),ae.pedantic=tr({},ae.normal,{strong:{start:/^__|\*\*/,middle:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,endAst:/\*\*(?!\*)/g,endUnd:/__(?!_)/g},em:{start:/^_|\*/,middle:/^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,endAst:/\*(?!\*)/g,endUnd:/_(?!_)/g},link:I(/^!?\[(label)\]\((.*?)\)/).replace("label",ae._label).getRegex(),reflink:I(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",ae._label).getRegex()}),ae.gfm=tr({},ae.normal,{escape:I(ae.escape).replace("])","~|])").getRegex(),_extended_email:/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,url:/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,_backpedal:/(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/}),ae.gfm.url=I(ae.gfm.url,"i").replace("email",ae.gfm._extended_email).getRegex(),ae.breaks=tr({},ae.gfm,{br:I(ae.br).replace("{2,}","*").getRegex(),text:I(ae.gfm.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()});function qt(k){return k.replace(/---/g,"\u2014").replace(/--/g,"\u2013").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1\u2018").replace(/'/g,"\u2019").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1\u201C").replace(/"/g,"\u201D").replace(/\.{3}/g,"\u2026")}function Il(k){var C="",L,h,_=k.length;for(L=0;L<_;L++)h=k.charCodeAt(L),Math.random()>.5&&(h="x"+h.toString(16)),C+="&#"+h+";";return C}var Sn=function(){function k(L){this.tokens=[],this.tokens.links=Object.create(null),this.options=L||e.defaults,this.options.tokenizer=this.options.tokenizer||new ea,this.tokenizer=this.options.tokenizer,this.tokenizer.options=this.options,this.tokenizer.lexer=this,this.inlineQueue=[],this.state={inLink:!1,inRawBlock:!1,top:!0};var h={block:ie.normal,inline:ae.normal};this.options.pedantic?(h.block=ie.pedantic,h.inline=ae.pedantic):this.options.gfm&&(h.block=ie.gfm,this.options.breaks?h.inline=ae.breaks:h.inline=ae.gfm),this.tokenizer.rules=h}k.lex=function(h,_){var E=new k(_);return E.lex(h)},k.lexInline=function(h,_){var E=new k(_);return E.inlineTokens(h)};var C=k.prototype;return C.lex=function(h){h=h.replace(/\r\n|\r/g,`
`).replace(/\t/g,"    "),this.blockTokens(h,this.tokens);for(var _;_=this.inlineQueue.shift();)this.inlineTokens(_.src,_.tokens);return this.tokens},C.blockTokens=function(h,_){var E=this;_===void 0&&(_=[]),this.options.pedantic&&(h=h.replace(/^ +$/gm,""));for(var S,N,O,te;h;)if(!(this.options.extensions&&this.options.extensions.block&&this.options.extensions.block.some(function(_e){return(S=_e.call({lexer:E},h,_))?(h=h.substring(S.raw.length),_.push(S),!0):!1}))){if(S=this.tokenizer.space(h)){h=h.substring(S.raw.length),S.raw.length===1&&_.length>0?_[_.length-1].raw+=`
`:_.push(S);continue}if(S=this.tokenizer.code(h)){h=h.substring(S.raw.length),N=_[_.length-1],N&&(N.type==="paragraph"||N.type==="text")?(N.raw+=`
`+S.raw,N.text+=`
`+S.text,this.inlineQueue[this.inlineQueue.length-1].src=N.text):_.push(S);continue}if(S=this.tokenizer.fences(h)){h=h.substring(S.raw.length),_.push(S);continue}if(S=this.tokenizer.heading(h)){h=h.substring(S.raw.length),_.push(S);continue}if(S=this.tokenizer.hr(h)){h=h.substring(S.raw.length),_.push(S);continue}if(S=this.tokenizer.blockquote(h)){h=h.substring(S.raw.length),_.push(S);continue}if(S=this.tokenizer.list(h)){h=h.substring(S.raw.length),_.push(S);continue}if(S=this.tokenizer.html(h)){h=h.substring(S.raw.length),_.push(S);continue}if(S=this.tokenizer.def(h)){h=h.substring(S.raw.length),N=_[_.length-1],N&&(N.type==="paragraph"||N.type==="text")?(N.raw+=`
`+S.raw,N.text+=`
`+S.raw,this.inlineQueue[this.inlineQueue.length-1].src=N.text):this.tokens.links[S.tag]||(this.tokens.links[S.tag]={href:S.href,title:S.title});continue}if(S=this.tokenizer.table(h)){h=h.substring(S.raw.length),_.push(S);continue}if(S=this.tokenizer.lheading(h)){h=h.substring(S.raw.length),_.push(S);continue}if(O=h,this.options.extensions&&this.options.extensions.startBlock&&function(){var _e=1/0,ye=h.slice(1),je=void 0;E.options.extensions.startBlock.forEach(function(De){je=De.call({lexer:this},ye),typeof je=="number"&&je>=0&&(_e=Math.min(_e,je))}),_e<1/0&&_e>=0&&(O=h.substring(0,_e+1))}(),this.state.top&&(S=this.tokenizer.paragraph(O))){N=_[_.length-1],te&&N.type==="paragraph"?(N.raw+=`
`+S.raw,N.text+=`
`+S.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=N.text):_.push(S),te=O.length!==h.length,h=h.substring(S.raw.length);continue}if(S=this.tokenizer.text(h)){h=h.substring(S.raw.length),N=_[_.length-1],N&&N.type==="text"?(N.raw+=`
`+S.raw,N.text+=`
`+S.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=N.text):_.push(S);continue}if(h){var $="Infinite loop on byte: "+h.charCodeAt(0);if(this.options.silent){console.error($);break}else throw new Error($)}}return this.state.top=!0,_},C.inline=function(h,_){this.inlineQueue.push({src:h,tokens:_})},C.inlineTokens=function(h,_){var E=this;_===void 0&&(_=[]);var S,N,O,te=h,$,_e,ye;if(this.tokens.links){var je=Object.keys(this.tokens.links);if(je.length>0)for(;($=this.tokenizer.rules.inline.reflinkSearch.exec(te))!=null;)je.includes($[0].slice($[0].lastIndexOf("[")+1,-1))&&(te=te.slice(0,$.index)+"["+Ka("a",$[0].length-2)+"]"+te.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))}for(;($=this.tokenizer.rules.inline.blockSkip.exec(te))!=null;)te=te.slice(0,$.index)+"["+Ka("a",$[0].length-2)+"]"+te.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);for(;($=this.tokenizer.rules.inline.escapedEmSt.exec(te))!=null;)te=te.slice(0,$.index)+"++"+te.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);for(;h;)if(_e||(ye=""),_e=!1,!(this.options.extensions&&this.options.extensions.inline&&this.options.extensions.inline.some(function(se){return(S=se.call({lexer:E},h,_))?(h=h.substring(S.raw.length),_.push(S),!0):!1}))){if(S=this.tokenizer.escape(h)){h=h.substring(S.raw.length),_.push(S);continue}if(S=this.tokenizer.tag(h)){h=h.substring(S.raw.length),N=_[_.length-1],N&&S.type==="text"&&N.type==="text"?(N.raw+=S.raw,N.text+=S.text):_.push(S);continue}if(S=this.tokenizer.link(h)){h=h.substring(S.raw.length),_.push(S);continue}if(S=this.tokenizer.reflink(h,this.tokens.links)){h=h.substring(S.raw.length),N=_[_.length-1],N&&S.type==="text"&&N.type==="text"?(N.raw+=S.raw,N.text+=S.text):_.push(S);continue}if(S=this.tokenizer.emStrong(h,te,ye)){h=h.substring(S.raw.length),_.push(S);continue}if(S=this.tokenizer.codespan(h)){h=h.substring(S.raw.length),_.push(S);continue}if(S=this.tokenizer.br(h)){h=h.substring(S.raw.length),_.push(S);continue}if(S=this.tokenizer.del(h)){h=h.substring(S.raw.length),_.push(S);continue}if(S=this.tokenizer.autolink(h,Il)){h=h.substring(S.raw.length),_.push(S);continue}if(!this.state.inLink&&(S=this.tokenizer.url(h,Il))){h=h.substring(S.raw.length),_.push(S);continue}if(O=h,this.options.extensions&&this.options.extensions.startInline&&function(){var se=1/0,ht=h.slice(1),st=void 0;E.options.extensions.startInline.forEach(function(jr){st=jr.call({lexer:this},ht),typeof st=="number"&&st>=0&&(se=Math.min(se,st))}),se<1/0&&se>=0&&(O=h.substring(0,se+1))}(),S=this.tokenizer.inlineText(O,qt)){h=h.substring(S.raw.length),S.raw.slice(-1)!=="_"&&(ye=S.raw.slice(-1)),_e=!0,N=_[_.length-1],N&&N.type==="text"?(N.raw+=S.raw,N.text+=S.text):_.push(S);continue}if(h){var De="Infinite loop on byte: "+h.charCodeAt(0);if(this.options.silent){console.error(De);break}else throw new Error(De)}}return _},r(k,null,[{key:"rules",get:function(){return{block:ie,inline:ae}}}]),k}(),ta=function(){function k(L){this.options=L||e.defaults}var C=k.prototype;return C.code=function(h,_,E){var S=(_||"").match(/\S*/)[0];if(this.options.highlight){var N=this.options.highlight(h,S);N!=null&&N!==h&&(E=!0,h=N)}return h=h.replace(/\n$/,"")+`
`,S?'<pre><code class="'+this.options.langPrefix+b(S,!0)+'">'+(E?h:b(h,!0))+`</code></pre>
`:"<pre><code>"+(E?h:b(h,!0))+`</code></pre>
`},C.blockquote=function(h){return`<blockquote>
`+h+`</blockquote>
`},C.html=function(h){return h},C.heading=function(h,_,E,S){return this.options.headerIds?"<h"+_+' id="'+this.options.headerPrefix+S.slug(E)+'">'+h+"</h"+_+`>
`:"<h"+_+">"+h+"</h"+_+`>
`},C.hr=function(){return this.options.xhtml?`<hr/>
`:`<hr>
`},C.list=function(h,_,E){var S=_?"ol":"ul",N=_&&E!==1?' start="'+E+'"':"";return"<"+S+N+`>
`+h+"</"+S+`>
`},C.listitem=function(h){return"<li>"+h+`</li>
`},C.checkbox=function(h){return"<input "+(h?'checked="" ':"")+'disabled="" type="checkbox"'+(this.options.xhtml?" /":"")+"> "},C.paragraph=function(h){return"<p>"+h+`</p>
`},C.table=function(h,_){return _&&(_="<tbody>"+_+"</tbody>"),`<table>
<thead>
`+h+`</thead>
`+_+`</table>
`},C.tablerow=function(h){return`<tr>
`+h+`</tr>
`},C.tablecell=function(h,_){var E=_.header?"th":"td",S=_.align?"<"+E+' align="'+_.align+'">':"<"+E+">";return S+h+"</"+E+`>
`},C.strong=function(h){return"<strong>"+h+"</strong>"},C.em=function(h){return"<em>"+h+"</em>"},C.codespan=function(h){return"<code>"+h+"</code>"},C.br=function(){return this.options.xhtml?"<br/>":"<br>"},C.del=function(h){return"<del>"+h+"</del>"},C.link=function(h,_,E){if(h=de(this.options.sanitize,this.options.baseUrl,h),h===null)return E;var S='<a href="'+b(h)+'"';return _&&(S+=' title="'+_+'"'),S+=">"+E+"</a>",S},C.image=function(h,_,E){if(h=de(this.options.sanitize,this.options.baseUrl,h),h===null)return E;var S='<img src="'+h+'" alt="'+E+'"';return _&&(S+=' title="'+_+'"'),S+=this.options.xhtml?"/>":">",S},C.text=function(h){return h},k}(),is=function(){function k(){}var C=k.prototype;return C.strong=function(h){return h},C.em=function(h){return h},C.codespan=function(h){return h},C.del=function(h){return h},C.html=function(h){return h},C.text=function(h){return h},C.link=function(h,_,E){return""+E},C.image=function(h,_,E){return""+E},C.br=function(){return""},k}(),qa=function(){function k(){this.seen={}}var C=k.prototype;return C.serialize=function(h){return h.toLowerCase().trim().replace(/<[!\/a-z].*?>/ig,"").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g,"").replace(/\s/g,"-")},C.getNextSafeSlug=function(h,_){var E=h,S=0;if(this.seen.hasOwnProperty(E)){S=this.seen[h];do S++,E=h+"-"+S;while(this.seen.hasOwnProperty(E))}return _||(this.seen[h]=S,this.seen[E]=0),E},C.slug=function(h,_){_===void 0&&(_={});var E=this.serialize(h);return this.getNextSafeSlug(E,_.dryrun)},k}(),Hn=function(){function k(L){this.options=L||e.defaults,this.options.renderer=this.options.renderer||new ta,this.renderer=this.options.renderer,this.renderer.options=this.options,this.textRenderer=new is,this.slugger=new qa}k.parse=function(h,_){var E=new k(_);return E.parse(h)},k.parseInline=function(h,_){var E=new k(_);return E.parseInline(h)};var C=k.prototype;return C.parse=function(h,_){_===void 0&&(_=!0);var E="",S,N,O,te,$,_e,ye,je,De,se,ht,st,jr,Qe,At,Ja,Ar,En,ia,fi=h.length;for(S=0;S<fi;S++){if(se=h[S],this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[se.type]&&(ia=this.options.extensions.renderers[se.type].call({parser:this},se),ia!==!1||!["space","hr","heading","code","table","blockquote","list","html","paragraph","text"].includes(se.type))){E+=ia||"";continue}switch(se.type){case"space":continue;case"hr":{E+=this.renderer.hr();continue}case"heading":{E+=this.renderer.heading(this.parseInline(se.tokens),se.depth,x(this.parseInline(se.tokens,this.textRenderer)),this.slugger);continue}case"code":{E+=this.renderer.code(se.text,se.lang,se.escaped);continue}case"table":{for(je="",ye="",te=se.header.length,N=0;N<te;N++)ye+=this.renderer.tablecell(this.parseInline(se.header[N].tokens),{header:!0,align:se.align[N]});for(je+=this.renderer.tablerow(ye),De="",te=se.rows.length,N=0;N<te;N++){for(_e=se.rows[N],ye="",$=_e.length,O=0;O<$;O++)ye+=this.renderer.tablecell(this.parseInline(_e[O].tokens),{header:!1,align:se.align[O]});De+=this.renderer.tablerow(ye)}E+=this.renderer.table(je,De);continue}case"blockquote":{De=this.parse(se.tokens),E+=this.renderer.blockquote(De);continue}case"list":{for(ht=se.ordered,st=se.start,jr=se.loose,te=se.items.length,De="",N=0;N<te;N++)At=se.items[N],Ja=At.checked,Ar=At.task,Qe="",At.task&&(En=this.renderer.checkbox(Ja),jr?At.tokens.length>0&&At.tokens[0].type==="paragraph"?(At.tokens[0].text=En+" "+At.tokens[0].text,At.tokens[0].tokens&&At.tokens[0].tokens.length>0&&At.tokens[0].tokens[0].type==="text"&&(At.tokens[0].tokens[0].text=En+" "+At.tokens[0].tokens[0].text)):At.tokens.unshift({type:"text",text:En}):Qe+=En),Qe+=this.parse(At.tokens,jr),De+=this.renderer.listitem(Qe,Ar,Ja);E+=this.renderer.list(De,ht,st);continue}case"html":{E+=this.renderer.html(se.text);continue}case"paragraph":{E+=this.renderer.paragraph(this.parseInline(se.tokens));continue}case"text":{for(De=se.tokens?this.parseInline(se.tokens):se.text;S+1<fi&&h[S+1].type==="text";)se=h[++S],De+=`
`+(se.tokens?this.parseInline(se.tokens):se.text);E+=_?this.renderer.paragraph(De):De;continue}default:{var ss='Token with "'+se.type+'" type was not found.';if(this.options.silent){console.error(ss);return}else throw new Error(ss)}}}return E},C.parseInline=function(h,_){_=_||this.renderer;var E="",S,N,O,te=h.length;for(S=0;S<te;S++){if(N=h[S],this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[N.type]&&(O=this.options.extensions.renderers[N.type].call({parser:this},N),O!==!1||!["escape","html","link","image","strong","em","codespan","br","del","text"].includes(N.type))){E+=O||"";continue}switch(N.type){case"escape":{E+=_.text(N.text);break}case"html":{E+=_.html(N.text);break}case"link":{E+=_.link(N.href,N.title,this.parseInline(N.tokens,_));break}case"image":{E+=_.image(N.href,N.title,N.text);break}case"strong":{E+=_.strong(this.parseInline(N.tokens,_));break}case"em":{E+=_.em(this.parseInline(N.tokens,_));break}case"codespan":{E+=_.codespan(N.text);break}case"br":{E+=_.br();break}case"del":{E+=_.del(this.parseInline(N.tokens,_));break}case"text":{E+=_.text(N.text);break}default:{var $='Token with "'+N.type+'" type was not found.';if(this.options.silent){console.error($);return}else throw new Error($)}}}return E},k}();function me(k,C,L){if(typeof k=="undefined"||k===null)throw new Error("marked(): input parameter is undefined or null");if(typeof k!="string")throw new Error("marked(): input parameter is of type "+Object.prototype.toString.call(k)+", string expected");if(typeof C=="function"&&(L=C,C=null),C=tr({},me.defaults,C||{}),za(C),L){var h=C.highlight,_;try{_=Sn.lex(k,C)}catch(O){return L(O)}var E=function(te){var $;if(!te)try{C.walkTokens&&me.walkTokens(_,C.walkTokens),$=Hn.parse(_,C)}catch(_e){te=_e}return C.highlight=h,te?L(te):L(null,$)};if(!h||h.length<3||(delete C.highlight,!_.length))return E();var S=0;me.walkTokens(_,function(O){O.type==="code"&&(S++,setTimeout(function(){h(O.text,O.lang,function(te,$){if(te)return E(te);$!=null&&$!==O.text&&(O.text=$,O.escaped=!0),S--,S===0&&E()})},0))}),S===0&&E();return}try{var N=Sn.lex(k,C);return C.walkTokens&&me.walkTokens(N,C.walkTokens),Hn.parse(N,C)}catch(O){if(O.message+=`
Please report this to https://github.com/markedjs/marked.`,C.silent)return"<p>An error occurred:</p><pre>"+b(O.message+"",!0)+"</pre>";throw O}}me.options=me.setOptions=function(k){return tr(me.defaults,k),l(me.defaults),me},me.getDefaults=s,me.defaults=e.defaults,me.use=function(){for(var k=arguments.length,C=new Array(k),L=0;L<k;L++)C[L]=arguments[L];var h=tr.apply(void 0,[{}].concat(C)),_=me.defaults.extensions||{renderers:{},childTokens:{}},E;C.forEach(function(S){if(S.extensions&&(E=!0,S.extensions.forEach(function(O){if(!O.name)throw new Error("extension name required");if(O.renderer){var te=_.renderers?_.renderers[O.name]:null;te?_.renderers[O.name]=function(){for(var $=arguments.length,_e=new Array($),ye=0;ye<$;ye++)_e[ye]=arguments[ye];var je=O.renderer.apply(this,_e);return je===!1&&(je=te.apply(this,_e)),je}:_.renderers[O.name]=O.renderer}if(O.tokenizer){if(!O.level||O.level!=="block"&&O.level!=="inline")throw new Error("extension level must be 'block' or 'inline'");_[O.level]?_[O.level].unshift(O.tokenizer):_[O.level]=[O.tokenizer],O.start&&(O.level==="block"?_.startBlock?_.startBlock.push(O.start):_.startBlock=[O.start]:O.level==="inline"&&(_.startInline?_.startInline.push(O.start):_.startInline=[O.start]))}O.childTokens&&(_.childTokens[O.name]=O.childTokens)})),S.renderer&&function(){var O=me.defaults.renderer||new ta,te=function(ye){var je=O[ye];O[ye]=function(){for(var De=arguments.length,se=new Array(De),ht=0;ht<De;ht++)se[ht]=arguments[ht];var st=S.renderer[ye].apply(O,se);return st===!1&&(st=je.apply(O,se)),st}};for(var $ in S.renderer)te($);h.renderer=O}(),S.tokenizer&&function(){var O=me.defaults.tokenizer||new ea,te=function(ye){var je=O[ye];O[ye]=function(){for(var De=arguments.length,se=new Array(De),ht=0;ht<De;ht++)se[ht]=arguments[ht];var st=S.tokenizer[ye].apply(O,se);return st===!1&&(st=je.apply(O,se)),st}};for(var $ in S.tokenizer)te($);h.tokenizer=O}(),S.walkTokens){var N=me.defaults.walkTokens;h.walkTokens=function(O){S.walkTokens.call(this,O),N&&N.call(this,O)}}E&&(h.extensions=_),me.setOptions(h)})},me.walkTokens=function(k,C){for(var L=function(){var S=_.value;switch(C.call(me,S),S.type){case"table":{for(var N=a(S.header),O;!(O=N()).done;){var te=O.value;me.walkTokens(te.tokens,C)}for(var $=a(S.rows),_e;!(_e=$()).done;)for(var ye=_e.value,je=a(ye),De;!(De=je()).done;){var se=De.value;me.walkTokens(se.tokens,C)}break}case"list":{me.walkTokens(S.items,C);break}default:me.defaults.extensions&&me.defaults.extensions.childTokens&&me.defaults.extensions.childTokens[S.type]?me.defaults.extensions.childTokens[S.type].forEach(function(ht){me.walkTokens(S[ht],C)}):S.tokens&&me.walkTokens(S.tokens,C)}},h=a(k),_;!(_=h()).done;)L()},me.parseInline=function(k,C){if(typeof k=="undefined"||k===null)throw new Error("marked.parseInline(): input parameter is undefined or null");if(typeof k!="string")throw new Error("marked.parseInline(): input parameter is of type "+Object.prototype.toString.call(k)+", string expected");C=tr({},me.defaults,C||{}),za(C);try{var L=Sn.lexInline(k,C);return C.walkTokens&&me.walkTokens(L,C.walkTokens),Hn.parseInline(L,C)}catch(h){if(h.message+=`
Please report this to https://github.com/markedjs/marked.`,C.silent)return"<p>An error occurred:</p><pre>"+b(h.message+"",!0)+"</pre>";throw h}},me.Parser=Hn,me.parser=Hn.parse,me.Renderer=ta,me.TextRenderer=is,me.Lexer=Sn,me.lexer=Sn.lex,me.Tokenizer=ea,me.Slugger=qa,me.parse=me;var ra=me.options,kl=me.setOptions,Nl=me.use,na=me.walkTokens,as=me.parseInline,nu=me,os=Hn.parse,iu=Sn.lex;e.Lexer=Sn,e.Parser=Hn,e.Renderer=ta,e.Slugger=qa,e.TextRenderer=is,e.Tokenizer=ea,e.getDefaults=s,e.lexer=iu,e.marked=me,e.options=ra,e.parse=nu,e.parseInline=as,e.parser=os,e.setOptions=kl,e.use=Nl,e.walkTokens=na,Object.defineProperty(e,"__esModule",{value:!0})})})();var Vg=iE||exports;Yl();mu();Br();Ye();Xt();function oE(o,e={},t={}){var r;let n=new P,i=!1,a=n.add(new Mt),s=cS(e),l=function(x){let R;try{R=Z1(decodeURIComponent(x))}catch(I){}return R?(R=mv(R,I=>{if(o.uris&&o.uris[I])return Te.revive(o.uris[I])}),encodeURIComponent(JSON.stringify(R))):x},d=function(x,R){let I=o.uris&&o.uris[x],H=Te.revive(I);return R?x.startsWith(Et.data+":")?x:(H||(H=Te.parse(x)),lb.asBrowserUri(H).toString(!0)):!H||Te.parse(x).toString()===H.toString()?x:(H.query&&(H=H.with({query:l(H.query)})),H.toString())},c,u=new Promise(x=>c=x),f=new Vg.Renderer;if(f.image=(x,R,I)=>{let H=[],U=[];return x&&({href:x,dimensions:H}=pS(x),U.push(`src="${x}"`)),I&&U.push(`alt="${I}"`),R&&U.push(`title="${R}"`),H.length&&(U=U.concat(H)),"<img "+U.join(" ")+">"},f.link=(x,R,I)=>typeof x!="string"?"":(x===I&&(I=vp(I)),x=d(x,!1),e.baseUrl&&(/^\w[\w\d+.-]*:/.test(x)||(x=rh(e.baseUrl,x).toString())),R=typeof R=="string"?vp(R):"",x=vp(x),!x||x.match(/^data:|javascript:/i)||x.match(/^command:/i)&&!o.isTrusted||x.match(/^command:(\/\/\/)?_workbench\.downloadResource/i)?I:(x=x.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;"),`<a data-href="${x}" title="${R||x}">${I}</a>`)),f.paragraph=x=>`<p>${x}</p>`,e.codeBlockRenderer&&(f.code=(x,R)=>{if(typeof R!="string")return"";let I=e.codeBlockRenderer(R,x),H=_p.nextId();return us(Promise.all([I,u]),a.token).then(U=>{var de;if(!i&&U){let Ce=s.querySelector(`div[data-code="${H}"]`);Ce&&io(Ce,U[0]),(de=e.asyncRenderCallback)===null||de===void 0||de.call(e)}}).catch(()=>{}),`<div class="code" data-code="${H}">${Cv(x)}</div>`}),e.actionHandler){let x=e.actionHandler.disposables.add(new co(s,"click")),R=e.actionHandler.disposables.add(new co(s,"auxclick"));e.actionHandler.disposables.add(ut.any(x.event,R.event)(I=>{let H=new sb(I);if(!H.leftButton&&!H.middleButton)return;let U=H.target;if(!(U.tagName!=="A"&&(U=U.parentElement,!U||U.tagName!=="A")))try{let de=U.dataset.href;de&&e.actionHandler.callback(de,H)}catch(de){ce(de)}finally{H.preventDefault()}}))}o.supportHtml||(t.sanitizer=x=>(o.isTrusted?x.match(/^(<span[^>]+>)|(<\/\s*span>)$/):void 0)?x:"",t.sanitize=!0,t.silent=!0),t.renderer=f;let m=(r=o.value)!==null&&r!==void 0?r:"";m.length>1e5&&(m=`${m.substr(0,1e5)}\u2026`),o.supportThemeIcons&&(m=X1(m));let g=Vg.parse(m,t);o.supportThemeIcons&&(g=gp(g).map(R=>typeof R=="string"?R:R.outerHTML).join(""));let T=new DOMParser().parseFromString(aE(o,g),"text/html");if(T.body.querySelectorAll("img").forEach(x=>{if(x.src){let R=d(x.src,!0);try{let I=Te.parse(R);e.baseUrl&&I.scheme===Et.file&&(R=rh(e.baseUrl,R).toString())}catch(I){}x.src=R}}),s.innerHTML=aE(o,T.body.innerHTML),c(),e.asyncRenderCallback)for(let x of s.getElementsByTagName("img")){let R=n.add(qe(x,"load",()=>{R.dispose(),e.asyncRenderCallback()}))}return{element:s,dispose:()=>{i=!0,a.cancel(),n.dispose()}}}function aE(o,e){let{config:t,allowedSchemes:r}=SA(o);Gg("uponSanitizeAttribute",(i,a)=>{if(a.attrName==="style"||a.attrName==="class"){if(i.tagName==="SPAN"){if(a.attrName==="style"){a.keepAttr=/^(color\:#[0-9a-fA-F]+;)?(background-color\:#[0-9a-fA-F]+;)?$/.test(a.attrValue);return}else if(a.attrName==="class"){a.keepAttr=/^codicon codicon-[a-z\-]+( codicon-modifier-[a-z\-]+)?$/.test(a.attrValue);return}}a.keepAttr=!1;return}});let n=document.createElement("a");Gg("afterSanitizeAttributes",i=>{for(let a of["href","src"])i.hasAttribute(a)&&(n.href=i.getAttribute(a),r.includes(n.protocol.replace(/:$/,""))||i.removeAttribute(a))});try{return nE(e,Object.assign(Object.assign({},t),{RETURN_TRUSTED_TYPE:!0}))}finally{Bg("uponSanitizeAttribute"),Bg("afterSanitizeAttributes")}}function SA(o){let e=[Et.http,Et.https,Et.mailto,Et.data,Et.file,Et.vscodeFileResource,Et.vscodeRemote,Et.vscodeRemoteResource];return o.isTrusted&&e.push(Et.command),{config:{ALLOWED_TAGS:["ul","li","p","b","i","code","blockquote","ol","h1","h2","h3","h4","h5","h6","hr","em","pre","table","thead","tbody","tr","th","td","div","del","a","strong","br","img","span"],ALLOWED_ATTR:["href","data-href","target","title","src","alt","class","style","data-code","width","height","align"],ALLOW_UNKNOWN_PROTOCOLS:!0},allowedSchemes:e}}Jr();an();Ae();Ne();W();nh();var EA=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},sE=function(o,e){return function(t,r){e(t,r,o)}},TA=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},Hg,Dr=class lE{constructor(e,t,r){this._options=e,this._languageService=t,this._openerService=r,this._onDidRenderAsync=new j,this.onDidRenderAsync=this._onDidRenderAsync.event}dispose(){this._onDidRenderAsync.dispose()}render(e,t,r){if(!e)return{element:document.createElement("span"),dispose:()=>{}};let n=new P;return{element:n.add(oE(e,Object.assign(Object.assign({},this._getRenderOptions(e,n)),t),r)).element,dispose:()=>n.dispose()}}_getRenderOptions(e,t){return{baseUrl:this._options.baseUrl,codeBlockRenderer:(r,n)=>TA(this,void 0,void 0,function*(){var i,a,s;let l;r?l=this._languageService.getLanguageIdByLanguageName(r):this._options.editor&&(l=(i=this._options.editor.getModel())===null||i===void 0?void 0:i.getLanguageId()),l||(l=Fs);let d=yield P1(this._languageService,n,l),c=document.createElement("span");if(c.innerHTML=(s=(a=lE._ttpTokenizer)===null||a===void 0?void 0:a.createHTML(d))!==null&&s!==void 0?s:d,this._options.editor){let u=this._options.editor.getOption(44);Jl(c,u)}else this._options.codeBlockFontFamily&&(c.style.fontFamily=this._options.codeBlockFontFamily);return c}),asyncRenderCallback:()=>this._onDidRenderAsync.fire(),actionHandler:{callback:r=>this._openerService.open(r,{fromUserGesture:!0,allowContributedOpeners:!0,allowCommands:e.isTrusted}).catch(ce),disposables:t}}}};Dr._ttpTokenizer=(Hg=window.trustedTypes)===null||Hg===void 0?void 0:Hg.createPolicy("tokenizeToString",{createHTML(o){return o}});Dr=EA([sE(1,gt),sE(2,yt)],Dr);tt();ee();Re();an();we();pt();Ae();pe();Re();var xA=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},cE=class{constructor(e,t,r){this.provider=e,this.hover=t,this.ordinal=r}};function CA(o,e,t,r,n){return xA(this,void 0,void 0,function*(){try{let i=yield Promise.resolve(o.provideHover(t,r,n));if(i&&DA(i))return new cE(o,i,e)}catch(i){ze(i)}})}function Yc(o,e,t){let n=ys.ordered(o).map((i,a)=>CA(i,a,o,e,t));return vr.fromPromises(n).coalesce()}function LA(o,e,t){return Yc(o,e,t).map(r=>r.hover).toPromise()}xr("_executeHoverProvider",(o,e)=>LA(o,e,he.None));function DA(o){let e=typeof o.range!="undefined",t=typeof o.contents!="undefined"&&o.contents&&o.contents.length>0;return e&&t}Z();wn();Jr();var wA=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Ug=function(o,e){return function(t,r){e(t,r,o)}},dE=V,Mn=class{constructor(e,t,r,n){this.owner=e,this.range=t,this.contents=r,this.ordinal=n}isValidForHoverAnchor(e){return e.type===1&&this.range.startColumn<=e.range.startColumn&&this.range.endColumn>=e.range.endColumn}},qs=class{constructor(e,t,r,n){this._editor=e,this._languageService=t,this._openerService=r,this._configurationService=n}createLoadingMessage(e){return new Mn(this,e.range,[new sr().appendText(p("modesContentHover.loading","Loading..."))],2e3)}computeSync(e,t){if(!this._editor.hasModel()||e.type!==1)return[];let r=this._editor.getModel(),n=e.range.startLineNumber,i=r.getLineMaxColumn(n),a=[],s=1e3,l=r.getLineLength(n),d=r.getLanguageIdAtPosition(e.range.startLineNumber,e.range.startColumn),c=this._configurationService.getValue("editor.maxTokenizationLineLength",{overrideIdentifier:d});typeof c=="number"&&l>=c&&a.push(new Mn(this,e.range,[{value:p("too many characters","Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.")}],s++));for(let u of t){let f=u.range.startLineNumber===n?u.range.startColumn:1,m=u.range.endLineNumber===n?u.range.endColumn:i,g=u.options.hoverMessage;if(!g||Ea(g))continue;let b=new y(e.range.startLineNumber,f,e.range.startLineNumber,m);a.push(new Mn(this,b,uu(g),s++))}return a}computeAsync(e,t,r){if(!this._editor.hasModel()||e.type!==1)return vr.EMPTY;let n=this._editor.getModel();if(!ys.has(n))return vr.EMPTY;let i=new z(e.range.startLineNumber,e.range.startColumn);return Yc(n,i,r).filter(a=>!Ea(a.hover.contents)).map(a=>{let s=a.hover.range?y.lift(a.hover.range):e.range;return new Mn(this,s,a.hover.contents,a.ordinal)})}renderHoverParts(e,t){return Wg(e,t,this._editor,this._languageService,this._openerService)}};qs=wA([Ug(1,gt),Ug(2,yt),Ug(3,rt)],qs);function Wg(o,e,t,r,n){e.sort((a,s)=>a.ordinal-s.ordinal);let i=new P;for(let a of e)for(let s of a.contents){if(Ea(s))continue;let l=dE("div.hover-row.markdown-hover"),d=B(l,dE("div.hover-contents")),c=i.add(new Dr({editor:t},r,n));i.add(c.onDidRenderAsync(()=>{d.className="hover-contents code-hover-contents",o.onContentsChanged()}));let u=i.add(c.render(s));d.appendChild(u.element),o.fragment.appendChild(l)}return i}Pe();bt();we();Ae();W();Br();ee();Sr();W();pe();Er();tt();ee();Be();bt();Ne();W();yv();Ye();Xt();ee();ro();He();wn();var uE=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},of=function(o,e){return function(t,r){e(t,r,o)}},jg=class{constructor(e,t,r){this.marker=e,this.index=t,this.total=r}},zg=class{constructor(e,t,r){this._markerService=t,this._configService=r,this._onDidChange=new j,this.onDidChange=this._onDidChange.event,this._dispoables=new P,this._markers=[],this._nextIdx=-1,Te.isUri(e)?this._resourceFilter=s=>s.toString()===e.toString():e&&(this._resourceFilter=e);let n=this._configService.getValue("problems.sortOrder"),i=(s,l)=>{let d=Am(s.resource.toString(),l.resource.toString());return n==="position"?d=y.compareRangesUsingStarts(s,l)||Ft.compare(s.severity,l.severity):d=Ft.compare(s.severity,l.severity)||y.compareRangesUsingStarts(s,l),d},a=()=>{this._markers=this._markerService.read({resource:Te.isUri(e)?e:void 0,severities:Ft.Error|Ft.Warning|Ft.Info}),typeof e=="function"&&(this._markers=this._markers.filter(s=>this._resourceFilter(s.resource))),this._markers.sort(i)};a(),this._dispoables.add(t.onMarkerChanged(s=>{(!this._resourceFilter||s.some(l=>this._resourceFilter(l)))&&(a(),this._nextIdx=-1,this._onDidChange.fire())}))}dispose(){this._dispoables.dispose(),this._onDidChange.dispose()}matches(e){return!this._resourceFilter&&!e?!0:!this._resourceFilter||!e?!1:this._resourceFilter(e)}get selected(){let e=this._markers[this._nextIdx];return e&&new jg(e,this._nextIdx+1,this._markers.length)}_initIdx(e,t,r){let n=!1,i=this._markers.findIndex(a=>a.resource.toString()===e.uri.toString());i<0&&(i=lu(this._markers,{resource:e.uri},(a,s)=>Am(a.resource.toString(),s.resource.toString())),i<0&&(i=~i));for(let a=i;a<this._markers.length;a++){let s=y.lift(this._markers[a]);if(s.isEmpty()){let l=e.getWordAtPosition(s.getStartPosition());l&&(s=new y(s.startLineNumber,l.startColumn,s.startLineNumber,l.endColumn))}if(t&&(s.containsPosition(t)||t.isBeforeOrEqual(s.getStartPosition()))){this._nextIdx=a,n=!0;break}if(this._markers[a].resource.toString()!==e.uri.toString())break}n||(this._nextIdx=r?0:this._markers.length-1),this._nextIdx<0&&(this._nextIdx=this._markers.length-1)}resetIndex(){this._nextIdx=-1}move(e,t,r){if(this._markers.length===0)return!1;let n=this._nextIdx;return this._nextIdx===-1?this._initIdx(t,r,e):e?this._nextIdx=(this._nextIdx+1)%this._markers.length:e||(this._nextIdx=(this._nextIdx-1+this._markers.length)%this._markers.length),n!==this._nextIdx}find(e,t){let r=this._markers.findIndex(n=>n.resource.toString()===e.toString());if(!(r<0)){for(;r<this._markers.length;r++)if(y.containsPosition(this._markers[r],t))return new jg(this._markers[r],r+1,this._markers.length)}}};zg=uE([of(1,hc),of(2,rt)],zg);var qg=Mr("IMarkerNavigationService"),Kg=class{constructor(e,t){this._markerService=e,this._configService=t,this._provider=new vu}getMarkerList(e){for(let t of this._provider){let r=t.getMarkerList(e);if(r)return r}return new zg(e,this._markerService,this._configService)}};Kg=uE([of(0,hc),of(1,rt)],Kg);Or(qg,Kg,!0);Z();ar();Le();He();Pe();bt();$n();Ne();W();Br();Ye();ee();Z();ar();Le();He();Jr();Sr();mt();Oe();var sf;(function(o){function e(t){switch(t){case Li.Ignore:return"severity-ignore "+q.info.classNames;case Li.Info:return q.info.classNames;case Li.Warning:return q.warning.classNames;case Li.Error:return q.error.classNames;default:return""}}o.className=e})(sf||(sf={}));ke((o,e)=>{let t=o.getColor(c1);if(t){let i=q.error.cssSelector;e.addRule(`
			.monaco-editor .zone-widget ${i},
			.markers-panel .marker-icon${i},
			.text-search-provider-messages .providerMessage ${i},
			.extensions-viewlet > .extensions ${i} {
				color: ${t};
			}
		`)}let r=o.getColor(d1);if(r){let i=q.warning.cssSelector;e.addRule(`
			.monaco-editor .zone-widget ${i},
			.markers-panel .marker-icon${i},
			.extensions-viewlet > .extensions ${i},
			.extension-editor ${i},
			.text-search-provider-messages .providerMessage ${i},
			.preferences-editor ${i} {
				color: ${r};
			}
		`)}let n=o.getColor(u1);if(n){let i=q.info.cssSelector;e.addRule(`
			.monaco-editor .zone-widget ${i},
			.markers-panel .marker-icon${i},
			.extensions-viewlet > .extensions ${i},
			.text-search-provider-messages .providerMessage ${i},
			.extension-editor ${i} {
				color: ${n};
			}
		`)}});mt();Oe();var AA=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Js=function(o,e){return function(t,r){e(t,r,o)}},hE=class{constructor(e,t,r,n,i){this._openerService=n,this._labelService=i,this._lines=0,this._longestLineLength=0,this._relatedDiagnostics=new WeakMap,this._disposables=new P,this._editor=t;let a=document.createElement("div");a.className="descriptioncontainer",this._messageBlock=document.createElement("div"),this._messageBlock.classList.add("message"),this._messageBlock.setAttribute("aria-live","assertive"),this._messageBlock.setAttribute("role","alert"),a.appendChild(this._messageBlock),this._relatedBlock=document.createElement("div"),a.appendChild(this._relatedBlock),this._disposables.add(Fr(this._relatedBlock,"click",s=>{s.preventDefault();let l=this._relatedDiagnostics.get(s.target);l&&r(l)})),this._scrollable=new N1(a,{horizontal:1,vertical:1,useShadows:!1,horizontalScrollbarSize:6,verticalScrollbarSize:6}),e.appendChild(this._scrollable.getDomNode()),this._disposables.add(this._scrollable.onScroll(s=>{a.style.left=`-${s.scrollLeft}px`,a.style.top=`-${s.scrollTop}px`})),this._disposables.add(this._scrollable)}dispose(){St(this._disposables)}update(e){let{source:t,message:r,relatedInformation:n,code:i}=e,a=((t==null?void 0:t.length)||0)+2;i&&(typeof i=="string"?a+=i.length:a+=i.value.length);let s=eo(r);this._lines=s.length,this._longestLineLength=0;for(let f of s)this._longestLineLength=Math.max(f.length+a,this._longestLineLength);Tr(this._messageBlock),this._messageBlock.setAttribute("aria-label",this.getAriaLabel(e)),this._editor.applyFontInfo(this._messageBlock);let l=this._messageBlock;for(let f of s)l=document.createElement("div"),l.innerText=f,f===""&&(l.style.height=this._messageBlock.style.lineHeight),this._messageBlock.appendChild(l);if(t||i){let f=document.createElement("span");if(f.classList.add("details"),l.appendChild(f),t){let m=document.createElement("span");m.innerText=t,m.classList.add("source"),f.appendChild(m)}if(i)if(typeof i=="string"){let m=document.createElement("span");m.innerText=`(${i})`,m.classList.add("code"),f.appendChild(m)}else{this._codeLink=V("a.code-link"),this._codeLink.setAttribute("href",`${i.target.toString()}`),this._codeLink.onclick=g=>{this._openerService.open(i.target,{allowCommands:!0}),g.preventDefault(),g.stopPropagation()};let m=B(this._codeLink,V("span"));m.innerText=i.value,f.appendChild(this._codeLink)}}if(Tr(this._relatedBlock),this._editor.applyFontInfo(this._relatedBlock),It(n)){let f=this._relatedBlock.appendChild(document.createElement("div"));f.style.paddingTop=`${Math.floor(this._editor.getOption(59)*.66)}px`,this._lines+=1;for(let m of n){let g=document.createElement("div"),b=document.createElement("a");b.classList.add("filename"),b.innerText=`${Jp(m.resource)}(${m.startLineNumber}, ${m.startColumn}): `,b.title=this._labelService.getUriLabel(m.resource),this._relatedDiagnostics.set(b,m);let T=document.createElement("span");T.innerText=m.message,g.appendChild(b),g.appendChild(T),this._lines+=1,f.appendChild(g)}}let d=this._editor.getOption(44),c=Math.ceil(d.typicalFullwidthCharacterWidth*this._longestLineLength*.75),u=d.lineHeight*this._lines;this._scrollable.setScrollDimensions({scrollWidth:c,scrollHeight:u})}layout(e,t){this._scrollable.getDomNode().style.height=`${e}px`,this._scrollable.getDomNode().style.width=`${t}px`,this._scrollable.setScrollDimensions({width:t,height:e})}getHeightInLines(){return Math.min(17,this._lines)}getAriaLabel(e){let t="";switch(e.severity){case Ft.Error:t=p("Error","Error");break;case Ft.Warning:t=p("Warning","Warning");break;case Ft.Info:t=p("Info","Info");break;case Ft.Hint:t=p("Hint","Hint");break}let r=p("marker aria","{0} at {1}. ",t,e.startLineNumber+":"+e.startColumn),n=this._editor.getModel();return n&&e.startLineNumber<=n.getLineCount()&&e.startLineNumber>=1&&(r=`${n.getLineContent(e.startLineNumber)}, ${r}`),r}},Ao=class gE extends js{constructor(e,t,r,n,i,a,s){super(e,{showArrow:!0,showFrame:!0,isAccessible:!0,frameWidth:1},i);this._themeService=t,this._openerService=r,this._menuService=n,this._contextKeyService=a,this._labelService=s,this._callOnDispose=new P,this._onDidSelectRelatedInformation=new j,this.onDidSelectRelatedInformation=this._onDidSelectRelatedInformation.event,this._severity=Ft.Warning,this._backgroundColor=xe.white,this._applyTheme(t.getColorTheme()),this._callOnDispose.add(t.onDidColorThemeChange(this._applyTheme.bind(this))),this.create()}_applyTheme(e){this._backgroundColor=e.getColor(RA);let t=Jg,r=IA;this._severity===Ft.Warning?(t=Xg,r=kA):this._severity===Ft.Info&&(t=Yg,r=NA);let n=e.getColor(t),i=e.getColor(r);this.style({arrowColor:n,frameColor:n,headerBackgroundColor:i,primaryHeadingColor:e.getColor(Kp),secondaryHeadingColor:e.getColor(qp)})}_applyStyles(){this._parentContainer&&(this._parentContainer.style.backgroundColor=this._backgroundColor?this._backgroundColor.toString():""),super._applyStyles()}dispose(){this._callOnDispose.dispose(),super.dispose()}_fillHead(e){super._fillHead(e),this._disposables.add(this._actionbarWidget.actionRunner.onBeforeRun(n=>this.editor.focus()));let t=[],r=this._menuService.createMenu(gE.TitleMenu,this._contextKeyService);m0(r,void 0,t),this._actionbarWidget.push(t,{label:!1,icon:!0,index:0}),r.dispose()}_fillTitleIcon(e){this._icon=B(e,V(""))}_fillBody(e){this._parentContainer=e,e.classList.add("marker-widget"),this._parentContainer.tabIndex=0,this._parentContainer.setAttribute("role","tooltip"),this._container=document.createElement("div"),e.appendChild(this._container),this._message=new hE(this._container,this.editor,t=>this._onDidSelectRelatedInformation.fire(t),this._openerService,this._labelService),this._disposables.add(this._message)}show(){throw new Error("call showAtMarker")}showAtMarker(e,t,r){this._container.classList.remove("stale"),this._message.update(e),this._severity=e.severity,this._applyTheme(this._themeService.getColorTheme());let n=y.lift(e),i=this.editor.getPosition(),a=i&&n.containsPosition(i)?i:n.getStartPosition();super.show(a,this.computeRequiredHeight());let s=this.editor.getModel();if(s){let l=r>1?p("problems","{0} of {1} problems",t,r):p("change","{0} of {1} problem",t,r);this.setTitle(Qt(s.uri),l)}this._icon.className=`codicon ${sf.className(Ft.toSeverity(this._severity))}`,this.editor.revealPositionNearTop(a,0),this.editor.focus()}updateMarker(e){this._container.classList.remove("stale"),this._message.update(e)}showStale(){this._container.classList.add("stale"),this._relayout()}_doLayoutBody(e,t){super._doLayoutBody(e,t),this._heightInPixel=e,this._message.layout(e,t),this._container.style.height=`${e}px`}_onWidth(e){this._message.layout(this._heightInPixel,e)}_relayout(){super._relayout(this.computeRequiredHeight())}computeRequiredHeight(){return 3+this._message.getHeightInLines()}};Ao.TitleMenu=new oe("gotoErrorTitleMenu");Ao=AA([Js(1,Ot),Js(2,yt),Js(3,Xn),Js(4,le),Js(5,re),Js(6,ba)],Ao);var pE=$u(Gb,Bb),fE=$u(Vb,Hb),mE=$u(so,Ub),Jg=J("editorMarkerNavigationError.background",{dark:pE,light:pE,hc:cn},p("editorMarkerNavigationError","Editor marker navigation widget error color.")),IA=J("editorMarkerNavigationError.headerBackground",{dark:or(Jg,.1),light:or(Jg,.1),hc:null},p("editorMarkerNavigationErrorHeaderBackground","Editor marker navigation widget error heading background.")),Xg=J("editorMarkerNavigationWarning.background",{dark:fE,light:fE,hc:cn},p("editorMarkerNavigationWarning","Editor marker navigation widget warning color.")),kA=J("editorMarkerNavigationWarning.headerBackground",{dark:or(Xg,.1),light:or(Xg,.1),hc:"#0C141F"},p("editorMarkerNavigationWarningBackground","Editor marker navigation widget warning heading background.")),Yg=J("editorMarkerNavigationInfo.background",{dark:mE,light:mE,hc:cn},p("editorMarkerNavigationInfo","Editor marker navigation widget info color.")),NA=J("editorMarkerNavigationInfo.headerBackground",{dark:or(Yg,.1),light:or(Yg,.1),hc:null},p("editorMarkerNavigationInfoHeaderBackground","Editor marker navigation widget info heading background.")),RA=J("editorMarkerNavigation.background",{dark:xs,light:xs,hc:xs},p("editorMarkerNavigationBackground","Editor marker navigation widget background."));var PA=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},lf=function(o,e){return function(t,r){e(t,r,o)}},_E=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},Bi=class cf{constructor(e,t,r,n,i){this._markerNavigationService=t,this._contextKeyService=r,this._editorService=n,this._instantiationService=i,this._sessionDispoables=new P,this._editor=e,this._widgetVisible=bE.bindTo(this._contextKeyService)}static get(e){return e.getContribution(cf.ID)}dispose(){this._cleanUp(),this._sessionDispoables.dispose()}_cleanUp(){this._widgetVisible.reset(),this._sessionDispoables.clear(),this._widget=void 0,this._model=void 0}_getOrCreateModel(e){if(this._model&&this._model.matches(e))return this._model;let t=!1;return this._model&&(t=!0,this._cleanUp()),this._model=this._markerNavigationService.getMarkerList(e),t&&this._model.move(!0,this._editor.getModel(),this._editor.getPosition()),this._widget=this._instantiationService.createInstance(Ao,this._editor),this._widget.onDidClose(()=>this.close(),this,this._sessionDispoables),this._widgetVisible.set(!0),this._sessionDispoables.add(this._model),this._sessionDispoables.add(this._widget),this._sessionDispoables.add(this._editor.onDidChangeCursorPosition(r=>{var n,i,a;(!((n=this._model)===null||n===void 0?void 0:n.selected)||!y.containsPosition((i=this._model)===null||i===void 0?void 0:i.selected.marker,r.position))&&((a=this._model)===null||a===void 0||a.resetIndex())})),this._sessionDispoables.add(this._model.onDidChange(()=>{if(!this._widget||!this._widget.position||!this._model)return;let r=this._model.find(this._editor.getModel().uri,this._widget.position);r?this._widget.updateMarker(r.marker):this._widget.showStale()})),this._sessionDispoables.add(this._widget.onDidSelectRelatedInformation(r=>{this._editorService.openCodeEditor({resource:r.resource,options:{pinned:!0,revealIfOpened:!0,selection:y.lift(r).collapseToStart()}},this._editor),this.close(!1)})),this._sessionDispoables.add(this._editor.onDidChangeModel(()=>this._cleanUp())),this._model}close(e=!0){this._cleanUp(),e&&this._editor.focus()}showAtMarker(e){if(this._editor.hasModel()){let t=this._getOrCreateModel(this._editor.getModel().uri);t.resetIndex(),t.move(!0,this._editor.getModel(),new z(e.startLineNumber,e.startColumn)),t.selected&&this._widget.showAtMarker(t.selected.marker,t.selected.index,t.selected.total)}}nagivate(e,t){var r,n;return _E(this,void 0,void 0,function*(){if(this._editor.hasModel()){let i=this._getOrCreateModel(t?void 0:this._editor.getModel().uri);if(i.move(e,this._editor.getModel(),this._editor.getPosition()),!i.selected)return;if(i.selected.marker.resource.toString()!==this._editor.getModel().uri.toString()){this._cleanUp();let a=yield this._editorService.openCodeEditor({resource:i.selected.marker.resource,options:{pinned:!1,revealIfOpened:!0,selectionRevealType:2,selection:i.selected.marker}},this._editor);a&&((r=cf.get(a))===null||r===void 0||r.close(),(n=cf.get(a))===null||n===void 0||n.nagivate(e,t))}else this._widget.showAtMarker(i.selected.marker,i.selected.index,i.selected.total)}})}};Bi.ID="editor.contrib.markerController";Bi=PA([lf(1,qg),lf(2,re),lf(3,Ue),lf(4,le)],Bi);var $c=class extends M{constructor(e,t,r){super(r);this._next=e,this._multiFile=t}run(e,t){var r;return _E(this,void 0,void 0,function*(){t.hasModel()&&((r=Bi.get(t))===null||r===void 0||r.nagivate(this._next,this._multiFile))})}},On=class extends $c{constructor(){super(!0,!1,{id:On.ID,label:On.LABEL,alias:"Go to Next Problem (Error, Warning, Info)",precondition:void 0,kbOpts:{kbExpr:v.focus,primary:578,weight:100},menuOpts:{menuId:Ao.TitleMenu,title:On.LABEL,icon:Rt("marker-navigation-next",q.arrowDown,p("nextMarkerIcon","Icon for goto next marker.")),group:"navigation",order:1}})}};On.ID="editor.action.marker.next";On.LABEL=p("markerAction.next.label","Go to Next Problem (Error, Warning, Info)");var Io=class extends $c{constructor(){super(!1,!1,{id:Io.ID,label:Io.LABEL,alias:"Go to Previous Problem (Error, Warning, Info)",precondition:void 0,kbOpts:{kbExpr:v.focus,primary:1602,weight:100},menuOpts:{menuId:Ao.TitleMenu,title:On.LABEL,icon:Rt("marker-navigation-previous",q.arrowUp,p("previousMarkerIcon","Icon for goto previous marker.")),group:"navigation",order:2}})}};Io.ID="editor.action.marker.prev";Io.LABEL=p("markerAction.previous.label","Go to Previous Problem (Error, Warning, Info)");var yE=class extends $c{constructor(){super(!0,!0,{id:"editor.action.marker.nextInFiles",label:p("markerAction.nextInFiles.label","Go to Next Problem in Files (Error, Warning, Info)"),alias:"Go to Next Problem in Files (Error, Warning, Info)",precondition:void 0,kbOpts:{kbExpr:v.focus,primary:66,weight:100},menuOpts:{menuId:oe.MenubarGoMenu,title:p({key:"miGotoNextProblem",comment:["&& denotes a mnemonic"]},"Next &&Problem"),group:"6_problem_nav",order:1}})}},vE=class extends $c{constructor(){super(!1,!0,{id:"editor.action.marker.prevInFiles",label:p("markerAction.previousInFiles.label","Go to Previous Problem in Files (Error, Warning, Info)"),alias:"Go to Previous Problem in Files (Error, Warning, Info)",precondition:void 0,kbOpts:{kbExpr:v.focus,primary:1090,weight:100},menuOpts:{menuId:oe.MenubarGoMenu,title:p({key:"miGotoPreviousProblem",comment:["&& denotes a mnemonic"]},"Previous &&Problem"),group:"6_problem_nav",order:2}})}};Q(Bi.ID,Bi);D(On);D(Io);D(yE);D(vE);var bE=new fe("markersNavigationVisible",!1),MA=dt.bindToContribution(Bi.get);K(new MA({id:"closeMarkersNavigation",precondition:bE,handler:o=>o.close(),kbOpts:{weight:100+50,kbExpr:v.focus,primary:9,secondary:[1033]}}));Z();Jr();fo();mt();Oe();var OA=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},SE=function(o,e){return function(t,r){e(t,r,o)}},hn=V,TE=class{constructor(e,t,r){this.owner=e,this.range=t,this.marker=r}isValidForHoverAnchor(e){return e.type===1&&this.range.startColumn<=e.range.startColumn&&this.range.endColumn>=e.range.endColumn}},EE={type:1,filter:{include:ge.QuickFix}},df=class{constructor(e,t,r){this._editor=e,this._markerDecorationsService=t,this._openerService=r,this.recentMarkerCodeActionsInfo=void 0}computeSync(e,t){if(!this._editor.hasModel()||e.type!==1)return[];let r=this._editor.getModel(),n=e.range.startLineNumber,i=r.getLineMaxColumn(n),a=[];for(let s of t){let l=s.range.startLineNumber===n?s.range.startColumn:1,d=s.range.endLineNumber===n?s.range.endColumn:i,c=this._markerDecorationsService.getMarker(r.uri,s);if(!c)continue;let u=new y(e.range.startLineNumber,l,e.range.startLineNumber,d);a.push(new TE(this,u,c))}return a}renderHoverParts(e,t){if(!t.length)return F.None;let r=new P;t.forEach(i=>e.fragment.appendChild(this.renderMarkerHover(i,r)));let n=t.length===1?t[0]:t.sort((i,a)=>Ft.compare(i.marker.severity,a.marker.severity))[0];return this.renderMarkerStatusbar(e,n,r),r}renderMarkerHover(e,t){let r=hn("div.hover-row"),n=B(r,hn("div.marker.hover-contents")),{source:i,message:a,code:s,relatedInformation:l}=e.marker;this._editor.applyFontInfo(n);let d=B(n,hn("span"));if(d.style.whiteSpace="pre-wrap",d.innerText=a,i||s)if(s&&typeof s!="string"){let c=hn("span");if(i){let g=B(c,hn("span"));g.innerText=i}let u=B(c,hn("a.code-link"));u.setAttribute("href",s.target.toString()),t.add(qe(u,"click",g=>{this._openerService.open(s.target,{allowCommands:!0}),g.preventDefault(),g.stopPropagation()}));let f=B(u,hn("span"));f.innerText=s.value;let m=B(n,c);m.style.opacity="0.6",m.style.paddingLeft="6px"}else{let c=B(n,hn("span"));c.style.opacity="0.6",c.style.paddingLeft="6px",c.innerText=i&&s?`${i}(${s})`:i||`(${s})`}if(It(l))for(let{message:c,resource:u,startLineNumber:f,startColumn:m}of l){let g=B(n,hn("div"));g.style.marginTop="8px";let b=B(g,hn("a"));b.innerText=`${Qt(u)}(${f}, ${m}): `,b.style.cursor="pointer",t.add(qe(b,"click",x=>{x.stopPropagation(),x.preventDefault(),this._openerService&&this._openerService.open(u,{fromUserGesture:!0,editorOptions:{selection:{startLineNumber:f,startColumn:m}}}).catch(ce)}));let T=B(g,hn("span"));T.innerText=c,this._editor.applyFontInfo(T)}return r}renderMarkerStatusbar(e,t,r){if((t.marker.severity===Ft.Error||t.marker.severity===Ft.Warning||t.marker.severity===Ft.Info)&&e.statusBar.addAction({label:p("view problem","View Problem"),commandId:On.ID,run:()=>{var n;e.hide(),(n=Bi.get(this._editor))===null||n===void 0||n.showAtMarker(t.marker),this._editor.focus()}}),!this._editor.getOption(81)){let n=e.statusBar.append(hn("div"));this.recentMarkerCodeActionsInfo&&(dh.makeKey(this.recentMarkerCodeActionsInfo.marker)===dh.makeKey(t.marker)?this.recentMarkerCodeActionsInfo.hasCodeActions||(n.textContent=p("noQuickFixes","No quick fixes available")):this.recentMarkerCodeActionsInfo=void 0);let i=this.recentMarkerCodeActionsInfo&&!this.recentMarkerCodeActionsInfo.hasCodeActions?F.None:r.add(Qa(()=>n.textContent=p("checkingForQuickFixes","Checking for quick fixes..."),200));n.textContent||(n.textContent=String.fromCharCode(160));let a=this.getCodeActions(t.marker);r.add(Ve(()=>a.cancel())),a.then(s=>{if(i.dispose(),this.recentMarkerCodeActionsInfo={marker:t.marker,hasCodeActions:s.validActions.length>0},!this.recentMarkerCodeActionsInfo.hasCodeActions){s.dispose(),n.textContent=p("noQuickFixes","No quick fixes available");return}n.style.display="none";let l=!1;r.add(Ve(()=>{l||s.dispose()})),e.statusBar.addAction({label:p("quick fixes","Quick Fix..."),commandId:Pi.Id,run:d=>{l=!0;let c=Ri.get(this._editor),u=nr(d);e.hide(),c==null||c.showCodeActions(EE,s,{x:u.left+6,y:u.top+u.height+6})}})},ce)}}getCodeActions(e){return Ge(t=>xc(this._editor.getModel(),new y(e.startLineNumber,e.startColumn,e.endLineNumber,e.endColumn),EE,Qn.None,t))}};df=OA([SE(1,Eb),SE(2,yt)],df);ke((o,e)=>{let t=o.getColor(ma);t&&e.addRule(`.monaco-hover .hover-contents a.code-link span { color: ${t}; }`);let r=o.getColor(ha);r&&e.addRule(`.monaco-hover .hover-contents a.code-link span:hover { color: ${r}; }`)});Pe();W();ee();an();W();Ye();pe();rD();Be();var uf="editor.action.inlineSuggest.commit";Ne();W();tt();Re();on();we();pt();Ae();Ne();W();Ye();ki();ee();Re();Ne();W();ee();var Qc=class{constructor(e,t,r=0){this.lineNumber=e,this.parts=t,this.additionalReservedLineCount=r}renderForScreenReader(e){if(this.parts.length===0)return"";let t=this.parts[this.parts.length-1],r=e.substr(0,t.column-1);return FA(r,this.parts.map(i=>({range:{startLineNumber:1,endLineNumber:1,startColumn:i.column,endColumn:i.column},text:i.lines.join(`
`)}))).substring(this.parts[0].column-1)}},xE=class{constructor(e){this.lineStartOffsetByLineIdx=[],this.lineStartOffsetByLineIdx.push(0);for(let t=0;t<e.length;t++)e.charAt(t)===`
`&&this.lineStartOffsetByLineIdx.push(t+1)}getOffset(e){return this.lineStartOffsetByLineIdx[e.lineNumber-1]+e.column-1}};function FA(o,e){let t=new xE(o),r=e.map(n=>{let i=y.lift(n.range);return{startOffset:t.getOffset(i.getStartPosition()),endOffset:t.getOffset(i.getEndPosition()),text:n.text}});r.sort((n,i)=>i.startOffset-n.startOffset);for(let n of r)o=o.substring(0,n.startOffset)+n.text+o.substring(n.endOffset);return o}var pf=class{constructor(e,t,r){this.column=e,this.lines=t,this.preview=r}},Zc=class extends F{constructor(e){super();this.editor=e,this._expanded=void 0,this.onDidChangeEmitter=new j,this.onDidChange=this.onDidChangeEmitter.event,this._register(e.onDidChangeConfiguration(t=>{t.hasChanged(106)&&this._expanded===void 0&&this.onDidChangeEmitter.fire()}))}setExpanded(e){this._expanded=!0,this.onDidChangeEmitter.fire()}};xt();Ye();ee();function CE(o,e){return o===e?!0:!o||!e?!1:o.range.equalsRange(e.range)&&o.text===e.text&&o.command===e.command}function ff(o,e,t,r,n=0){if(o.range.startLineNumber!==o.range.endLineNumber)return;let i=e.getLineContent(o.range.startLineNumber),a=ft(i).length;if(o.range.startColumn-1<=a){let m=ft(o.text).length,g=i.substring(o.range.startColumn-1,a),b=y.fromPositions(o.range.getStartPosition().delta(0,g.length),o.range.getEndPosition()),T=o.text.startsWith(g)?o.text.substring(g.length):o.text.substring(m);o={range:b,text:T,command:o.command}}let l=e.getValueInRange(o.range),d=GA(l,o.text);if(!d)return;let c=o.range.startLineNumber,u=new Array;if(t==="prefix"){let m=d.filter(g=>g.originalLength===0);if(m.length>1||m.length===1&&m[0].originalStart!==l.length)return}let f=o.text.length-n;for(let m of d){let g=o.range.startColumn+m.originalStart+m.originalLength;if(t==="subwordSmart"&&r&&r.lineNumber===o.range.startLineNumber&&g<r.column||m.originalLength>0)return;if(m.modifiedLength===0)continue;let b=m.modifiedStart+m.modifiedLength,T=Math.max(m.modifiedStart,Math.min(b,f)),x=o.text.substring(m.modifiedStart,T),R=o.text.substring(T,Math.max(m.modifiedStart,b));if(x.length>0){let I=eo(x);u.push(new pf(g,I,!1))}if(R.length>0){let I=eo(R);u.push(new pf(g,I,!0))}}return new Qc(c,u,0)}var ai;function GA(o,e){if((ai==null?void 0:ai.originalValue)===o&&(ai==null?void 0:ai.newValue)===e)return ai==null?void 0:ai.changes;{let t=BA(o,e);return ai={originalValue:o,newValue:e,changes:t},t}}function BA(o,e){if(o.length>5e3||e.length>5e3)return;function t(l){let d=0;for(let c=0,u=l.length;c<u;c++){let f=l.charCodeAt(c);f>d&&(d=f)}return d}let r=Math.max(t(o),t(e));function n(l){if(l<0)throw new Error("unexpected");return r+l+1}function i(l){let d=0,c=0,u=new Int32Array(l.length);for(let f=0,m=l.length;f<m;f++){let g=c*100+d;l[f]==="("?(u[f]=n(2*g),d++):l[f]===")"?(u[f]=n(2*g+1),d===1&&c++,d=Math.max(d-1,0)):u[f]=l.charCodeAt(f)}return u}let a=i(o),s=i(e);return new tb({getElements:()=>a},{getElements:()=>s}).ComputeDiff(!1).changes}on();oD();nD();sD();iD();aD();function LE(o,e){let t=new b1,r=new E1(t,d=>e.getLanguageConfiguration(d)),n=new S1(new DE([o]),r),i=T1(n,[],void 0,!0),a="",s=o.getLineContent();function l(d,c){if(d.kind===2)l(d.openingBracket,c),c=ks(c,d.openingBracket.length),d.child&&(l(d.child,c),c=ks(c,d.child.length)),d.closingBracket?(l(d.closingBracket,c),c=ks(c,d.closingBracket.length)):a+=r.getSingleLanguageBracketTokens(d.openingBracket.languageId).findClosingTokenText(d.openingBracket.bracketIds);else if(d.kind!==3){if(d.kind===0||d.kind===1)a+=s.substring(c,ks(c,d.length));else if(d.kind===4)for(let u of d.children)l(u,c),c=ks(c,u.length)}}return l(i,v1),a}var DE=class{constructor(e){this.lines=e}getLineCount(){return this.lines.length}getLineLength(e){return this.lines[e-1].getLineContent().length}getLineTokens(e){return this.lines[e-1]}};var VA=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},wE=function(o,e){return function(t,r){e(t,r,o)}},Vi=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},mf=class extends F{constructor(e,t,r,n){super();this.editor=e,this.cache=t,this.commandService=r,this.languageConfigurationService=n,this.onDidChangeEmitter=new j,this.onDidChange=this.onDidChangeEmitter.event,this.completionSession=this._register(new et),this.active=!1,this.disposed=!1,this._register(r.onDidExecuteCommand(i=>{new Set([Ms.Tab.id,Ms.DeleteLeft.id,Ms.DeleteRight.id,uf,"acceptSelectedSuggestion"]).has(i.commandId)&&e.hasTextFocus()&&this.handleUserInput()})),this._register(this.editor.onDidType(i=>{this.handleUserInput()})),this._register(this.editor.onDidChangeCursorPosition(i=>{this.session&&!this.session.isValid&&this.hide()})),this._register(Ve(()=>{this.disposed=!0})),this._register(this.editor.onDidBlurEditorWidget(()=>{this.hide()}))}handleUserInput(){this.session&&!this.session.isValid&&this.hide(),setTimeout(()=>{this.disposed||this.startSessionIfTriggered()},0)}get session(){return this.completionSession.value}get ghostText(){var e;return(e=this.session)===null||e===void 0?void 0:e.ghostText}get minReservedLineCount(){return this.session?this.session.minReservedLineCount:0}setExpanded(e){var t;(t=this.session)===null||t===void 0||t.setExpanded(e)}setActive(e){var t;this.active=e,e&&((t=this.session)===null||t===void 0||t.scheduleAutomaticUpdate())}startSessionIfTriggered(){!this.editor.getOption(55).enabled||this.session&&this.session.isValid||this.trigger(Pr.Automatic)}trigger(e){if(this.completionSession.value){e===Pr.Explicit&&this.completionSession.value.ensureUpdateWithExplicitContext();return}this.completionSession.value=new AE(this.editor,this.editor.getPosition(),()=>this.active,this.commandService,this.cache,e,this.languageConfigurationService),this.completionSession.value.takeOwnership(this.completionSession.value.onDidChange(()=>{this.onDidChangeEmitter.fire()}))}hide(){this.completionSession.clear(),this.onDidChangeEmitter.fire()}commitCurrentSuggestion(){var e;(e=this.session)===null||e===void 0||e.commitCurrentCompletion()}showNext(){var e;(e=this.session)===null||e===void 0||e.showNextInlineCompletion()}showPrevious(){var e;(e=this.session)===null||e===void 0||e.showPreviousInlineCompletion()}hasMultipleInlineCompletions(){var e;return Vi(this,void 0,void 0,function*(){let t=yield(e=this.session)===null||e===void 0?void 0:e.hasMultipleInlineCompletions();return t!==void 0?t:!1})}};mf=VA([wE(2,ct),wE(3,Nt)],mf);var AE=class extends Zc{constructor(e,t,r,n,i,a,s){super(e);this.triggerPosition=t,this.shouldUpdate=r,this.commandService=n,this.cache=i,this.initialTriggerKind=a,this.languageConfigurationService=s,this.minReservedLineCount=0,this.updateOperation=this._register(new et),this.updateSoon=this._register(new Ke(()=>{let d=this.initialTriggerKind;return this.initialTriggerKind=Pr.Automatic,this.update(d)},50)),this.currentlySelectedCompletionId=void 0;let l;this._register(this.onDidChange(()=>{let d=this.currentCompletion;if(d&&d.sourceInlineCompletion!==l){l=d.sourceInlineCompletion;let c=d.sourceProvider;c.handleItemDidShow&&c.handleItemDidShow(d.sourceInlineCompletions,l)}})),this._register(Ve(()=>{this.cache.clear()})),this._register(this.editor.onDidChangeCursorPosition(d=>{this.cache.value&&this.onDidChangeEmitter.fire()})),this._register(this.editor.onDidChangeModelContent(d=>{this.scheduleAutomaticUpdate()})),this._register(Pm.onDidChange(()=>{this.updateSoon.schedule()})),this.scheduleAutomaticUpdate()}fixAndGetIndexOfCurrentSelection(){if(!this.currentlySelectedCompletionId||!this.cache.value||this.cache.value.completions.length===0)return 0;let e=this.cache.value.completions.findIndex(t=>t.semanticId===this.currentlySelectedCompletionId);return e===-1?(this.currentlySelectedCompletionId=void 0,0):e}get currentCachedCompletion(){if(!!this.cache.value)return this.cache.value.completions[this.fixAndGetIndexOfCurrentSelection()]}showNextInlineCompletion(){var e;return Vi(this,void 0,void 0,function*(){yield this.ensureUpdateWithExplicitContext();let t=((e=this.cache.value)===null||e===void 0?void 0:e.completions)||[];if(t.length>0){let r=(this.fixAndGetIndexOfCurrentSelection()+1)%t.length;this.currentlySelectedCompletionId=t[r].semanticId}else this.currentlySelectedCompletionId=void 0;this.onDidChangeEmitter.fire()})}showPreviousInlineCompletion(){var e;return Vi(this,void 0,void 0,function*(){yield this.ensureUpdateWithExplicitContext();let t=((e=this.cache.value)===null||e===void 0?void 0:e.completions)||[];if(t.length>0){let r=(this.fixAndGetIndexOfCurrentSelection()+t.length-1)%t.length;this.currentlySelectedCompletionId=t[r].semanticId}else this.currentlySelectedCompletionId=void 0;this.onDidChangeEmitter.fire()})}ensureUpdateWithExplicitContext(){var e;return Vi(this,void 0,void 0,function*(){this.updateOperation.value?this.updateOperation.value.triggerKind===Pr.Explicit?yield this.updateOperation.value.promise:yield this.update(Pr.Explicit):((e=this.cache.value)===null||e===void 0?void 0:e.triggerKind)!==Pr.Explicit&&(yield this.update(Pr.Explicit))})}hasMultipleInlineCompletions(){var e;return Vi(this,void 0,void 0,function*(){return yield this.ensureUpdateWithExplicitContext(),(((e=this.cache.value)===null||e===void 0?void 0:e.completions.length)||0)>1})}get ghostText(){let e=this.currentCompletion,t=this.editor.getOptions().get(55).mode;return e?ff(e,this.editor.getModel(),t,this.editor.getPosition()):void 0}get currentCompletion(){let e=this.currentCachedCompletion;if(!!e)return e.toLiveInlineCompletion()}get isValid(){return this.editor.getPosition().lineNumber===this.triggerPosition.lineNumber}scheduleAutomaticUpdate(){this.updateOperation.clear(),this.updateSoon.schedule()}update(e){return Vi(this,void 0,void 0,function*(){if(!this.shouldUpdate())return;let t=this.editor.getPosition(),r=Ge(i=>Vi(this,void 0,void 0,function*(){let a;try{a=yield Qg(t,this.editor.getModel(),{triggerKind:e,selectedSuggestionInfo:void 0},i,this.languageConfigurationService)}catch(s){ce(s);return}i.isCancellationRequested||(this.cache.setValue(this.editor,a,e),this.onDidChangeEmitter.fire())})),n=new hf(r,e);this.updateOperation.value=n,yield r,this.updateOperation.value===n&&this.updateOperation.clear()})}takeOwnership(e){this._register(e)}commitCurrentCompletion(){if(!this.ghostText)return;let e=this.currentCompletion;e&&this.commit(e)}commit(e){let t=this.cache.clearAndLeak();this.editor.executeEdits("inlineSuggestion.accept",[We.replaceMove(e.range,e.text)]),e.command?this.commandService.executeCommand(e.command.id,...e.command.arguments||[]).finally(()=>{t==null||t.dispose()}).then(void 0,ze):t==null||t.dispose(),this.onDidChangeEmitter.fire()}},hf=class{constructor(e,t){this.promise=e,this.triggerKind=t}dispose(){this.promise.cancel()}},$g=class extends F{constructor(e,t,r,n){super();this.triggerKind=n;let i=e.deltaDecorations([],t.items.map(a=>({range:a.range,options:{description:"inline-completion-tracking-range"}})));this._register(Ve(()=>{e.deltaDecorations(i,[])})),this.completions=t.items.map((a,s)=>new IE(a,i[s])),this._register(e.onDidChangeModelContent(()=>{let a=!1,s=e.getModel();for(let l of this.completions){let d=s.getDecorationRange(l.decorationId);if(!d){ce(new Error("Decoration has no range"));continue}l.synchronizedRange.equalsRange(d)||(a=!0,l.synchronizedRange=d)}a&&r()})),this._register(t)}},IE=class{constructor(e,t){this.inlineCompletion=e,this.decorationId=t,this.semanticId=JSON.stringify({text:this.inlineCompletion.text,startLine:this.inlineCompletion.range.startLineNumber,startColumn:this.inlineCompletion.range.startColumn,command:this.inlineCompletion.command}),this.synchronizedRange=e.range}toLiveInlineCompletion(){return{text:this.inlineCompletion.text,range:this.synchronizedRange,command:this.inlineCompletion.command,sourceProvider:this.inlineCompletion.sourceProvider,sourceInlineCompletions:this.inlineCompletion.sourceInlineCompletions,sourceInlineCompletion:this.inlineCompletion.sourceInlineCompletion}}};function HA(o,e){let t=e.getWordAtPosition(o),r=e.getLineMaxColumn(o.lineNumber);return t?new y(o.lineNumber,t.startColumn,o.lineNumber,r):y.fromPositions(o,o.with(void 0,r))}function Qg(o,e,t,r=he.None,n){return Vi(this,void 0,void 0,function*(){let i=HA(o,e),a=Pm.all(e),s=yield Promise.all(a.map(d=>Vi(this,void 0,void 0,function*(){let c=yield d.provideInlineCompletions(e,o,t,r);return{completions:c,provider:d,dispose:()=>{c&&d.freeInlineCompletions(c)}}}))),l=new Map;for(let d of s){let c=d.completions;if(c)for(let u of c.items){let f=u.range?y.lift(u.range):i;if(f.startLineNumber!==f.endLineNumber)continue;let m=n&&u.completeBracketPairs?UA(u.text,f.getStartPosition(),e,n):u.text,g={text:m,range:f,command:u.command,sourceProvider:d.provider,sourceInlineCompletions:c,sourceInlineCompletion:u};l.set(JSON.stringify({text:m,range:u.range}),g)}}return{items:[...l.values()],dispose:()=>{for(let d of s)d.dispose()}}})}function UA(o,e,t,r){let i=t.getLineContent(e.lineNumber).substring(0,e.column-1)+o,a=t.tokenizeLineWithEdit(e,i.length-(e.column-1),o),s=a==null?void 0:a.sliceAndInflate(e.column-1,i.length,0);return s?(console.log(s),LE(s,r)):o}function Xs(o,e){if(!e)return e;let t=o.getValueInRange(e.range),r=la(t,e.text),n=o.getOffsetAt(e.range.getStartPosition())+r,i=o.getPositionAt(n),a=t.substr(r),s=Eu(a,e.text),l=o.getPositionAt(Math.max(n,o.getOffsetAt(e.range.getEndPosition())-s));return{range:y.fromPositions(i,l),text:e.text.substr(r,e.text.length-r-s)}}we();Ae();W();Re();bt();we();Ne();W();tt();ee();var Yr=class{constructor(){this.value="",this.pos=0}static isDigitCharacter(e){return e>=48&&e<=57}static isVariableCharacter(e){return e===95||e>=97&&e<=122||e>=65&&e<=90}text(e){this.value=e,this.pos=0}tokenText(e){return this.value.substr(e.pos,e.len)}next(){if(this.pos>=this.value.length)return{type:14,pos:this.pos,len:0};let e=this.pos,t=0,r=this.value.charCodeAt(e),n;if(n=Yr._table[r],typeof n=="number")return this.pos+=1,{type:n,pos:e,len:1};if(Yr.isDigitCharacter(r)){n=8;do t+=1,r=this.value.charCodeAt(e+t);while(Yr.isDigitCharacter(r));return this.pos+=t,{type:n,pos:e,len:t}}if(Yr.isVariableCharacter(r)){n=9;do r=this.value.charCodeAt(e+ ++t);while(Yr.isVariableCharacter(r)||Yr.isDigitCharacter(r));return this.pos+=t,{type:n,pos:e,len:t}}n=10;do t+=1,r=this.value.charCodeAt(e+t);while(!isNaN(r)&&typeof Yr._table[r]=="undefined"&&!Yr.isDigitCharacter(r)&&!Yr.isVariableCharacter(r));return this.pos+=t,{type:n,pos:e,len:t}}};Yr._table={[36]:0,[58]:1,[44]:2,[123]:3,[125]:4,[92]:5,[47]:6,[124]:7,[43]:11,[45]:12,[63]:13};var ko=class{constructor(){this._children=[]}appendChild(e){return e instanceof er&&this._children[this._children.length-1]instanceof er?this._children[this._children.length-1].value+=e.value:(e.parent=this,this._children.push(e)),this}replace(e,t){let{parent:r}=e,n=r.children.indexOf(e),i=r.children.slice(0);i.splice(n,1,...t),r._children=i,function a(s,l){for(let d of s)d.parent=l,a(d.children,d)}(t,r)}get children(){return this._children}get snippet(){let e=this;for(;;){if(!e)return;if(e instanceof ed)return e;e=e.parent}}toString(){return this.children.reduce((e,t)=>e+t.toString(),"")}len(){return 0}},er=class extends ko{constructor(e){super();this.value=e}toString(){return this.value}len(){return this.value.length}clone(){return new er(this.value)}},Zg=class extends ko{},Hr=class extends Zg{constructor(e){super();this.index=e}static compareByIndex(e,t){return e.index===t.index?0:e.isFinalTabstop?1:t.isFinalTabstop||e.index<t.index?-1:e.index>t.index?1:0}get isFinalTabstop(){return this.index===0}get choice(){return this._children.length===1&&this._children[0]instanceof No?this._children[0]:void 0}clone(){let e=new Hr(this.index);return this.transform&&(e.transform=this.transform.clone()),e._children=this.children.map(t=>t.clone()),e}},No=class extends ko{constructor(){super(...arguments);this.options=[]}appendChild(e){return e instanceof er&&(e.parent=this,this.options.push(e)),this}toString(){return this.options[0].value}len(){return this.options[0].len()}clone(){let e=new No;return this.options.forEach(e.appendChild,e),e}},gf=class extends ko{constructor(){super(...arguments);this.regexp=new RegExp("")}resolve(e){let t=this,r=!1,n=e.replace(this.regexp,function(){return r=!0,t._replace(Array.prototype.slice.call(arguments,0,-2))});return!r&&this._children.some(i=>i instanceof gn&&Boolean(i.elseValue))&&(n=this._replace([])),n}_replace(e){let t="";for(let r of this._children)if(r instanceof gn){let n=e[r.index]||"";n=r.resolve(n),t+=n}else t+=r.toString();return t}toString(){return""}clone(){let e=new gf;return e.regexp=new RegExp(this.regexp.source,(this.regexp.ignoreCase?"i":"")+(this.regexp.global?"g":"")),e._children=this.children.map(t=>t.clone()),e}},gn=class extends ko{constructor(e,t,r,n){super();this.index=e,this.shorthandName=t,this.ifValue=r,this.elseValue=n}resolve(e){return this.shorthandName==="upcase"?e?e.toLocaleUpperCase():"":this.shorthandName==="downcase"?e?e.toLocaleLowerCase():"":this.shorthandName==="capitalize"?e?e[0].toLocaleUpperCase()+e.substr(1):"":this.shorthandName==="pascalcase"?e?this._toPascalCase(e):"":this.shorthandName==="camelcase"?e?this._toCamelCase(e):"":Boolean(e)&&typeof this.ifValue=="string"?this.ifValue:!Boolean(e)&&typeof this.elseValue=="string"?this.elseValue:e||""}_toPascalCase(e){let t=e.match(/[a-z0-9]+/gi);return t?t.map(r=>r.charAt(0).toUpperCase()+r.substr(1).toLowerCase()).join(""):e}_toCamelCase(e){let t=e.match(/[a-z0-9]+/gi);return t?t.map((r,n)=>n===0?r.toLowerCase():r.charAt(0).toUpperCase()+r.substr(1).toLowerCase()).join(""):e}clone(){return new gn(this.index,this.shorthandName,this.ifValue,this.elseValue)}},Ys=class extends Zg{constructor(e){super();this.name=e}resolve(e){let t=e.resolve(this);return this.transform&&(t=this.transform.resolve(t||"")),t!==void 0?(this._children=[new er(t)],!0):!1}clone(){let e=new Ys(this.name);return this.transform&&(e.transform=this.transform.clone()),e._children=this.children.map(t=>t.clone()),e}};function kE(o,e){let t=[...o];for(;t.length>0;){let r=t.shift();if(!e(r))break;t.unshift(...r.children)}}var ed=class extends ko{get placeholderInfo(){if(!this._placeholders){let e=[],t;this.walk(function(r){return r instanceof Hr&&(e.push(r),t=!t||t.index<r.index?r:t),!0}),this._placeholders={all:e,last:t}}return this._placeholders}get placeholders(){let{all:e}=this.placeholderInfo;return e}offset(e){let t=0,r=!1;return this.walk(n=>n===e?(r=!0,!1):(t+=n.len(),!0)),r?t:-1}fullLen(e){let t=0;return kE([e],r=>(t+=r.len(),!0)),t}enclosingPlaceholders(e){let t=[],{parent:r}=e;for(;r;)r instanceof Hr&&t.push(r),r=r.parent;return t}resolveVariables(e){return this.walk(t=>(t instanceof Ys&&t.resolve(e)&&(this._placeholders=void 0),!0)),this}appendChild(e){return this._placeholders=void 0,super.appendChild(e)}replace(e,t){return this._placeholders=void 0,super.replace(e,t)}clone(){let e=new ed;return this._children=this.children.map(t=>t.clone()),e}walk(e){kE(this.children,e)}},Hi=class{constructor(){this._scanner=new Yr,this._token={type:14,pos:0,len:0}}static escape(e){return e.replace(/\$|}|\\/g,"\\$&")}static guessNeedsClipboard(e){return/\${?CLIPBOARD/.test(e)}parse(e,t,r){this._scanner.text(e),this._token=this._scanner.next();let n=new ed;for(;this._parse(n););let i=new Map,a=[],s=0;n.walk(l=>(l instanceof Hr&&(s+=1,l.isFinalTabstop?i.set(0,void 0):!i.has(l.index)&&l.children.length>0?i.set(l.index,l.children):a.push(l)),!0));for(let l of a){let d=i.get(l.index);if(d){let c=new Hr(l.index);c.transform=l.transform;for(let u of d)c.appendChild(u.clone());n.replace(l,[c])}}return r||(r=s>0&&t),!i.has(0)&&r&&n.appendChild(new Hr(0)),n}_accept(e,t){if(e===void 0||this._token.type===e){let r=t?this._scanner.tokenText(this._token):!0;return this._token=this._scanner.next(),r}return!1}_backTo(e){return this._scanner.pos=e.pos+e.len,this._token=e,!1}_until(e){let t=this._token;for(;this._token.type!==e;){if(this._token.type===14)return!1;if(this._token.type===5){let n=this._scanner.next();if(n.type!==0&&n.type!==4&&n.type!==5)return!1}this._token=this._scanner.next()}let r=this._scanner.value.substring(t.pos,this._token.pos).replace(/\\(\$|}|\\)/g,"$1");return this._token=this._scanner.next(),r}_parse(e){return this._parseEscaped(e)||this._parseTabstopOrVariableName(e)||this._parseComplexPlaceholder(e)||this._parseComplexVariable(e)||this._parseAnything(e)}_parseEscaped(e){let t;return(t=this._accept(5,!0))?(t=this._accept(0,!0)||this._accept(4,!0)||this._accept(5,!0)||t,e.appendChild(new er(t)),!0):!1}_parseTabstopOrVariableName(e){let t,r=this._token;return this._accept(0)&&(t=this._accept(9,!0)||this._accept(8,!0))?(e.appendChild(/^\d+$/.test(t)?new Hr(Number(t)):new Ys(t)),!0):this._backTo(r)}_parseComplexPlaceholder(e){let t,r=this._token;if(!(this._accept(0)&&this._accept(3)&&(t=this._accept(8,!0))))return this._backTo(r);let i=new Hr(Number(t));if(this._accept(1))for(;;){if(this._accept(4))return e.appendChild(i),!0;if(!this._parse(i))return e.appendChild(new er("${"+t+":")),i.children.forEach(e.appendChild,e),!0}else if(i.index>0&&this._accept(7)){let a=new No;for(;;){if(this._parseChoiceElement(a)){if(this._accept(2))continue;if(this._accept(7)&&(i.appendChild(a),this._accept(4)))return e.appendChild(i),!0}return this._backTo(r),!1}}else return this._accept(6)?this._parseTransform(i)?(e.appendChild(i),!0):(this._backTo(r),!1):this._accept(4)?(e.appendChild(i),!0):this._backTo(r)}_parseChoiceElement(e){let t=this._token,r=[];for(;!(this._token.type===2||this._token.type===7);){let n;if((n=this._accept(5,!0))?n=this._accept(2,!0)||this._accept(7,!0)||this._accept(5,!0)||n:n=this._accept(void 0,!0),!n)return this._backTo(t),!1;r.push(n)}return r.length===0?(this._backTo(t),!1):(e.appendChild(new er(r.join(""))),!0)}_parseComplexVariable(e){let t,r=this._token;if(!(this._accept(0)&&this._accept(3)&&(t=this._accept(9,!0))))return this._backTo(r);let i=new Ys(t);if(this._accept(1))for(;;){if(this._accept(4))return e.appendChild(i),!0;if(!this._parse(i))return e.appendChild(new er("${"+t+":")),i.children.forEach(e.appendChild,e),!0}else return this._accept(6)?this._parseTransform(i)?(e.appendChild(i),!0):(this._backTo(r),!1):this._accept(4)?(e.appendChild(i),!0):this._backTo(r)}_parseTransform(e){let t=new gf,r="",n="";for(;!this._accept(6);){let i;if(i=this._accept(5,!0)){i=this._accept(6,!0)||i,r+=i;continue}if(this._token.type!==14){r+=this._accept(void 0,!0);continue}return!1}for(;!this._accept(6);){let i;if(i=this._accept(5,!0)){i=this._accept(5,!0)||this._accept(6,!0)||i,t.appendChild(new er(i));continue}if(!(this._parseFormatString(t)||this._parseAnything(t)))return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!0);continue}return!1}try{t.regexp=new RegExp(r,n)}catch(i){return!1}return e.transform=t,!0}_parseFormatString(e){let t=this._token;if(!this._accept(0))return!1;let r=!1;this._accept(3)&&(r=!0);let n=this._accept(8,!0);if(n)if(r){if(this._accept(4))return e.appendChild(new gn(Number(n))),!0;if(!this._accept(1))return this._backTo(t),!1}else return e.appendChild(new gn(Number(n))),!0;else return this._backTo(t),!1;if(this._accept(6)){let i=this._accept(9,!0);return!i||!this._accept(4)?(this._backTo(t),!1):(e.appendChild(new gn(Number(n),i)),!0)}else if(this._accept(11)){let i=this._until(4);if(i)return e.appendChild(new gn(Number(n),void 0,i,void 0)),!0}else if(this._accept(12)){let i=this._until(4);if(i)return e.appendChild(new gn(Number(n),void 0,void 0,i)),!0}else if(this._accept(13)){let i=this._until(1);if(i){let a=this._until(4);if(a)return e.appendChild(new gn(Number(n),void 0,i,a)),!0}}else{let i=this._until(4);if(i)return e.appendChild(new gn(Number(n),void 0,void 0,i)),!0}return this._backTo(t),!1}_parseAnything(e){return this._token.type!==14?(e.appendChild(new er(this._scanner.tokenText(this._token))),this._accept(void 0),!0):!1}};bt();W();Ye();ki();ee();kt();jt();bv();Br();Ye();var Pt=new Uint8Array(16),cr=[];for(let o=0;o<256;o++)cr.push(o.toString(16).padStart(2,"0"));var e_;typeof crypto=="object"&&typeof crypto.getRandomValues=="function"?e_=crypto.getRandomValues.bind(crypto):e_=function(o){for(let e=0;e<o.length;e++)o[e]=Math.floor(Math.random()*256);return o};function NE(){e_(Pt),Pt[6]=Pt[6]&15|64,Pt[8]=Pt[8]&63|128;let o=0,e="";return e+=cr[Pt[o++]],e+=cr[Pt[o++]],e+=cr[Pt[o++]],e+=cr[Pt[o++]],e+="-",e+=cr[Pt[o++]],e+=cr[Pt[o++]],e+="-",e+=cr[Pt[o++]],e+=cr[Pt[o++]],e+="-",e+=cr[Pt[o++]],e+=cr[Pt[o++]],e+="-",e+=cr[Pt[o++]],e+=cr[Pt[o++]],e+=cr[Pt[o++]],e+=cr[Pt[o++]],e+=cr[Pt[o++]],e+=cr[Pt[o++]],e}on();Z();Xt();Z();var _f="code-workspace",$H=[{name:p("codeWorkspace","Code Workspace"),extensions:[_f]}];function t_(o){let e=o;return typeof(e==null?void 0:e.id)=="string"&&Te.isUri(e.uri)}function RE(o){if(o.configuration)return{id:o.id,configPath:o.configuration};if(o.folders.length===1)return{id:o.id,uri:o.folders[0].uri}}var sU=Object.freeze({CURRENT_YEAR:!0,CURRENT_YEAR_SHORT:!0,CURRENT_MONTH:!0,CURRENT_DATE:!0,CURRENT_HOUR:!0,CURRENT_MINUTE:!0,CURRENT_SECOND:!0,CURRENT_DAY_NAME:!0,CURRENT_DAY_NAME_SHORT:!0,CURRENT_MONTH_NAME:!0,CURRENT_MONTH_NAME_SHORT:!0,CURRENT_SECONDS_UNIX:!0,SELECTION:!0,CLIPBOARD:!0,TM_SELECTED_TEXT:!0,TM_CURRENT_LINE:!0,TM_CURRENT_WORD:!0,TM_LINE_INDEX:!0,TM_LINE_NUMBER:!0,TM_FILENAME:!0,TM_FILENAME_BASE:!0,TM_DIRECTORY:!0,TM_FILEPATH:!0,RELATIVE_FILEPATH:!0,BLOCK_COMMENT_START:!0,BLOCK_COMMENT_END:!0,LINE_COMMENT:!0,WORKSPACE_NAME:!0,WORKSPACE_FOLDER:!0,RANDOM:!0,RANDOM_HEX:!0,UUID:!0}),r_=class{constructor(e){this._delegates=e}resolve(e){for(let t of this._delegates){let r=t.resolve(e);if(r!==void 0)return r}}},n_=class{constructor(e,t,r,n){this._model=e,this._selection=t,this._selectionIdx=r,this._overtypingCapturer=n}resolve(e){let{name:t}=e;if(t==="SELECTION"||t==="TM_SELECTED_TEXT"){let r=this._model.getValueInRange(this._selection)||void 0,n=this._selection.startLineNumber!==this._selection.endLineNumber;if(!r&&this._overtypingCapturer){let i=this._overtypingCapturer.getLastOvertypedInfo(this._selectionIdx);i&&(r=i.value,n=i.multiline)}if(r&&n&&e.snippet){let i=this._model.getLineContent(this._selection.startLineNumber),a=ft(i,0,this._selection.startColumn-1),s=a;e.snippet.walk(d=>d===e?!1:(d instanceof er&&(s=ft(eo(d.value).pop())),!0));let l=la(s,a);r=r.replace(/(\r\n|\r|\n)(.*)/g,(d,c,u)=>`${c}${s.substr(l)}${u}`)}return r}else{if(t==="TM_CURRENT_LINE")return this._model.getLineContent(this._selection.positionLineNumber);if(t==="TM_CURRENT_WORD"){let r=this._model.getWordAtPosition({lineNumber:this._selection.positionLineNumber,column:this._selection.positionColumn});return r&&r.word||void 0}else{if(t==="TM_LINE_INDEX")return String(this._selection.positionLineNumber-1);if(t==="TM_LINE_NUMBER")return String(this._selection.positionLineNumber)}}}},i_=class{constructor(e,t){this._labelService=e,this._model=t}resolve(e){let{name:t}=e;if(t==="TM_FILENAME")return cs(this._model.uri.fsPath);if(t==="TM_FILENAME_BASE"){let r=cs(this._model.uri.fsPath),n=r.lastIndexOf(".");return n<=0?r:r.slice(0,n)}else{if(t==="TM_DIRECTORY")return vv(this._model.uri.fsPath)==="."?"":this._labelService.getUriLabel(Ns(this._model.uri));if(t==="TM_FILEPATH")return this._labelService.getUriLabel(this._model.uri);if(t==="RELATIVE_FILEPATH")return this._labelService.getUriLabel(this._model.uri,{relative:!0,noPrefix:!0})}}},a_=class{constructor(e,t,r,n){this._readClipboardText=e,this._selectionIdx=t,this._selectionCount=r,this._spread=n}resolve(e){if(e.name!=="CLIPBOARD")return;let t=this._readClipboardText();if(!!t){if(this._spread){let r=t.split(/\r\n|\n|\r/).filter(n=>!xv(n));if(r.length===this._selectionCount)return r[this._selectionIdx]}return t}}},o_=class{constructor(e,t){this._model=e,this._selection=t}resolve(e){let{name:t}=e,r=this._model.getLanguageIdAtPosition(this._selection.selectionStartLineNumber,this._selection.selectionStartColumn),n=rr.getComments(r);if(!!n){if(t==="LINE_COMMENT")return n.lineCommentToken||void 0;if(t==="BLOCK_COMMENT_START")return n.blockCommentStartToken||void 0;if(t==="BLOCK_COMMENT_END")return n.blockCommentEndToken||void 0}}},_n=class{constructor(){this._date=new Date}resolve(e){let{name:t}=e;if(t==="CURRENT_YEAR")return String(this._date.getFullYear());if(t==="CURRENT_YEAR_SHORT")return String(this._date.getFullYear()).slice(-2);if(t==="CURRENT_MONTH")return String(this._date.getMonth().valueOf()+1).padStart(2,"0");if(t==="CURRENT_DATE")return String(this._date.getDate().valueOf()).padStart(2,"0");if(t==="CURRENT_HOUR")return String(this._date.getHours().valueOf()).padStart(2,"0");if(t==="CURRENT_MINUTE")return String(this._date.getMinutes().valueOf()).padStart(2,"0");if(t==="CURRENT_SECOND")return String(this._date.getSeconds().valueOf()).padStart(2,"0");if(t==="CURRENT_DAY_NAME")return _n.dayNames[this._date.getDay()];if(t==="CURRENT_DAY_NAME_SHORT")return _n.dayNamesShort[this._date.getDay()];if(t==="CURRENT_MONTH_NAME")return _n.monthNames[this._date.getMonth()];if(t==="CURRENT_MONTH_NAME_SHORT")return _n.monthNamesShort[this._date.getMonth()];if(t==="CURRENT_SECONDS_UNIX")return String(Math.floor(this._date.getTime()/1e3))}};_n.dayNames=[p("Sunday","Sunday"),p("Monday","Monday"),p("Tuesday","Tuesday"),p("Wednesday","Wednesday"),p("Thursday","Thursday"),p("Friday","Friday"),p("Saturday","Saturday")];_n.dayNamesShort=[p("SundayShort","Sun"),p("MondayShort","Mon"),p("TuesdayShort","Tue"),p("WednesdayShort","Wed"),p("ThursdayShort","Thu"),p("FridayShort","Fri"),p("SaturdayShort","Sat")];_n.monthNames=[p("January","January"),p("February","February"),p("March","March"),p("April","April"),p("May","May"),p("June","June"),p("July","July"),p("August","August"),p("September","September"),p("October","October"),p("November","November"),p("December","December")];_n.monthNamesShort=[p("JanuaryShort","Jan"),p("FebruaryShort","Feb"),p("MarchShort","Mar"),p("AprilShort","Apr"),p("MayShort","May"),p("JuneShort","Jun"),p("JulyShort","Jul"),p("AugustShort","Aug"),p("SeptemberShort","Sep"),p("OctoberShort","Oct"),p("NovemberShort","Nov"),p("DecemberShort","Dec")];var s_=class{constructor(e){this._workspaceService=e}resolve(e){if(!this._workspaceService)return;let t=RE(this._workspaceService.getWorkspace());if(!!t){if(e.name==="WORKSPACE_NAME")return this._resolveWorkspaceName(t);if(e.name==="WORKSPACE_FOLDER")return this._resoveWorkspacePath(t)}}_resolveWorkspaceName(e){if(t_(e))return cs(e.uri.path);let t=cs(e.configPath.path);return t.endsWith(_f)&&(t=t.substr(0,t.length-_f.length-1)),t}_resoveWorkspacePath(e){if(t_(e))return Xp(e.uri.fsPath);let t=cs(e.configPath.path),r=e.configPath.fsPath;return r.endsWith(t)&&(r=r.substr(0,r.length-t.length-1)),r?Xp(r):"/"}},l_=class{resolve(e){let{name:t}=e;if(t==="RANDOM")return Math.random().toString().slice(-6);if(t==="RANDOM_HEX")return Math.random().toString(16).slice(-6);if(t==="UUID")return NE()}};var $r=class{constructor(e,t,r,n){this._editor=e,this._snippet=t,this._offset=r,this._snippetLineLeadingWhitespace=n,this._nestingLevel=1,this._placeholderGroups=xm(t.placeholders,Hr.compareByIndex),this._placeholderGroupsIdx=-1}dispose(){this._placeholderDecorations&&this._editor.deltaDecorations([...this._placeholderDecorations.values()],[]),this._placeholderGroups.length=0}_initDecorations(){if(this._placeholderDecorations)return;this._placeholderDecorations=new Map;let e=this._editor.getModel();this._editor.changeDecorations(t=>{for(let r of this._snippet.placeholders){let n=this._snippet.offset(r),i=this._snippet.fullLen(r),a=y.fromPositions(e.getPositionAt(this._offset+n),e.getPositionAt(this._offset+n+i)),s=r.isFinalTabstop?$r._decor.inactiveFinal:$r._decor.inactive,l=t.addDecoration(a,s);this._placeholderDecorations.set(r,l)}})}move(e){if(!this._editor.hasModel())return[];if(this._initDecorations(),this._placeholderGroupsIdx>=0){let n=[];for(let i of this._placeholderGroups[this._placeholderGroupsIdx])if(i.transform){let a=this._placeholderDecorations.get(i),s=this._editor.getModel().getDecorationRange(a),l=this._editor.getModel().getValueInRange(s),d=i.transform.resolve(l).split(/\r\n|\r|\n/);for(let c=1;c<d.length;c++)d[c]=this._editor.getModel().normalizeIndentation(this._snippetLineLeadingWhitespace+d[c]);n.push(We.replace(s,d.join(this._editor.getModel().getEOL())))}n.length>0&&this._editor.executeEdits("snippet.placeholderTransform",n)}let t=!1;e===!0&&this._placeholderGroupsIdx<this._placeholderGroups.length-1?(this._placeholderGroupsIdx+=1,t=!0):e===!1&&this._placeholderGroupsIdx>0&&(this._placeholderGroupsIdx-=1,t=!0);let r=this._editor.getModel().changeDecorations(n=>{let i=new Set,a=[];for(let s of this._placeholderGroups[this._placeholderGroupsIdx]){let l=this._placeholderDecorations.get(s),d=this._editor.getModel().getDecorationRange(l);a.push(new X(d.startLineNumber,d.startColumn,d.endLineNumber,d.endColumn)),t=t&&this._hasPlaceholderBeenCollapsed(s),n.changeDecorationOptions(l,s.isFinalTabstop?$r._decor.activeFinal:$r._decor.active),i.add(s);for(let c of this._snippet.enclosingPlaceholders(s)){let u=this._placeholderDecorations.get(c);n.changeDecorationOptions(u,c.isFinalTabstop?$r._decor.activeFinal:$r._decor.active),i.add(c)}}for(let[s,l]of this._placeholderDecorations)i.has(s)||n.changeDecorationOptions(l,s.isFinalTabstop?$r._decor.inactiveFinal:$r._decor.inactive);return a});return t?this.move(e):r!=null?r:[]}_hasPlaceholderBeenCollapsed(e){let t=e;for(;t;){if(t instanceof Hr){let r=this._placeholderDecorations.get(t);if(this._editor.getModel().getDecorationRange(r).isEmpty()&&t.toString().length>0)return!0}t=t.parent}return!1}get isAtFirstPlaceholder(){return this._placeholderGroupsIdx<=0||this._placeholderGroups.length===0}get isAtLastPlaceholder(){return this._placeholderGroupsIdx===this._placeholderGroups.length-1}get hasPlaceholder(){return this._snippet.placeholders.length>0}computePossibleSelections(){let e=new Map;for(let t of this._placeholderGroups){let r;for(let n of t){if(n.isFinalTabstop)break;r||(r=[],e.set(n.index,r));let i=this._placeholderDecorations.get(n),a=this._editor.getModel().getDecorationRange(i);if(!a){e.delete(n.index);break}r.push(a)}}return e}get choice(){return this._placeholderGroups[this._placeholderGroupsIdx][0].choice}merge(e){let t=this._editor.getModel();this._nestingLevel*=10,this._editor.changeDecorations(r=>{for(let n of this._placeholderGroups[this._placeholderGroupsIdx]){let i=e.shift();console.assert(!i._placeholderDecorations);let a=i._snippet.placeholderInfo.last.index;for(let l of i._snippet.placeholderInfo.all)l.isFinalTabstop?l.index=n.index+(a+1)/this._nestingLevel:l.index=n.index+l.index/this._nestingLevel;this._snippet.replace(n,i._snippet.children);let s=this._placeholderDecorations.get(n);r.removeDecoration(s),this._placeholderDecorations.delete(n);for(let l of i._snippet.placeholders){let d=i._snippet.offset(l),c=i._snippet.fullLen(l),u=y.fromPositions(t.getPositionAt(i._offset+d),t.getPositionAt(i._offset+d+c)),f=r.addDecoration(u,$r._decor.inactive);this._placeholderDecorations.set(l,f)}}this._placeholderGroups=xm(this._snippet.placeholders,Hr.compareByIndex)})}};$r._decor={active:Se.register({description:"snippet-placeholder-1",stickiness:0,className:"snippet-placeholder"}),inactive:Se.register({description:"snippet-placeholder-2",stickiness:1,className:"snippet-placeholder"}),activeFinal:Se.register({description:"snippet-placeholder-3",stickiness:1,className:"finish-snippet-placeholder"}),inactiveFinal:Se.register({description:"snippet-placeholder-4",stickiness:1,className:"finish-snippet-placeholder"})};var PE={overwriteBefore:0,overwriteAfter:0,adjustWhitespace:!0,clipboardText:void 0,overtypingCapturer:void 0},Qr=class{constructor(e,t,r=PE){this._templateMerges=[],this._snippets=[],this._editor=e,this._template=t,this._options=r}static adjustWhitespace(e,t,r,n,i){let a=e.getLineContent(t.lineNumber),s=ft(a,0,t.column-1),l;return r.walk(d=>{if(!(d instanceof er)||d.parent instanceof No)return!0;let c=d.value.split(/\r\n|\r|\n/);if(n){let f=r.offset(d);if(f===0)c[0]=e.normalizeIndentation(c[0]);else{l=l!=null?l:r.toString();let m=l.charCodeAt(f-1);(m===10||m===13)&&(c[0]=e.normalizeIndentation(s+c[0]))}for(let m=1;m<c.length;m++)c[m]=e.normalizeIndentation(s+c[m])}let u=c.join(e.getEOL());return u!==d.value&&(d.parent.replace(d,[new er(u)]),l=void 0),!0}),s}static adjustSelection(e,t,r,n){if(r!==0||n!==0){let{positionLineNumber:i,positionColumn:a}=t,s=a-r,l=a+n,d=e.validateRange({startLineNumber:i,startColumn:s,endLineNumber:i,endColumn:l});t=X.createWithDirection(d.startLineNumber,d.startColumn,d.endLineNumber,d.endColumn,t.getDirection())}return t}static createEditsAndSnippets(e,t,r,n,i,a,s,l){let d=[],c=[];if(!e.hasModel())return{edits:d,snippets:c};let u=e.getModel(),f=e.invokeWithinContext(H=>H.get(G1)),m=e.invokeWithinContext(H=>new i_(H.get(ba),u)),g=()=>s,b=0,T=u.getValueInRange(Qr.adjustSelection(u,e.getSelection(),r,0)),x=u.getValueInRange(Qr.adjustSelection(u,e.getSelection(),0,n)),R=u.getLineFirstNonWhitespaceColumn(e.getSelection().positionLineNumber),I=e.getSelections().map((H,U)=>({selection:H,idx:U})).sort((H,U)=>y.compareRangesUsingStarts(H.selection,U.selection));for(let{selection:H,idx:U}of I){let de=Qr.adjustSelection(u,H,r,0),Ce=Qr.adjustSelection(u,H,0,n);T!==u.getValueInRange(de)&&(de=H),x!==u.getValueInRange(Ce)&&(Ce=H);let wt=H.setStartPosition(de.startLineNumber,de.startColumn).setEndPosition(Ce.endLineNumber,Ce.endColumn),Vt=new Hi().parse(t,!0,i),Ht=wt.getStartPosition(),rn=Qr.adjustWhitespace(u,Ht,Vt,a||U>0&&R!==u.getLineFirstNonWhitespaceColumn(H.positionLineNumber),!0);Vt.resolveVariables(new r_([m,new a_(g,U,I.length,e.getOption(71)==="spread"),new n_(u,H,U,l),new o_(u,H),new _n,new s_(f),new l_]));let vn=u.getOffsetAt(Ht)+b;b+=Vt.toString().length-u.getValueLengthInRange(wt),d[U]=We.replace(wt,Vt.toString()),d[U].identifier={major:U,minor:0},c[U]=new $r(e,Vt,vn,rn)}return{edits:d,snippets:c}}dispose(){St(this._snippets)}_logInfo(){return`template="${this._template}", merged_templates="${this._templateMerges.join(" -> ")}"`}insert(){if(!this._editor.hasModel())return;let{edits:e,snippets:t}=Qr.createEditsAndSnippets(this._editor,this._template,this._options.overwriteBefore,this._options.overwriteAfter,!1,this._options.adjustWhitespace,this._options.clipboardText,this._options.overtypingCapturer);this._snippets=t,this._editor.executeEdits("snippet",e,r=>this._snippets[0].hasPlaceholder?this._move(!0):r.filter(n=>!!n.identifier).map(n=>X.fromPositions(n.range.getEndPosition()))),this._editor.revealRange(this._editor.getSelections()[0])}merge(e,t=PE){if(!this._editor.hasModel())return;this._templateMerges.push([this._snippets[0]._nestingLevel,this._snippets[0]._placeholderGroupsIdx,e]);let{edits:r,snippets:n}=Qr.createEditsAndSnippets(this._editor,e,t.overwriteBefore,t.overwriteAfter,!0,t.adjustWhitespace,t.clipboardText,t.overtypingCapturer);this._editor.executeEdits("snippet",r,i=>{for(let a of this._snippets)a.merge(n);return console.assert(n.length===0),this._snippets[0].hasPlaceholder?this._move(void 0):i.filter(a=>!!a.identifier).map(a=>X.fromPositions(a.range.getEndPosition()))})}next(){let e=this._move(!0);this._editor.setSelections(e),this._editor.revealPositionInCenterIfOutsideViewport(e[0].getPosition())}prev(){let e=this._move(!1);this._editor.setSelections(e),this._editor.revealPositionInCenterIfOutsideViewport(e[0].getPosition())}_move(e){let t=[];for(let r of this._snippets){let n=r.move(e);t.push(...n)}return t}get isAtFirstPlaceholder(){return this._snippets[0].isAtFirstPlaceholder}get isAtLastPlaceholder(){return this._snippets[0].isAtLastPlaceholder}get hasPlaceholder(){return this._snippets[0].hasPlaceholder}get choice(){return this._snippets[0].choice}isSelectionWithinPlaceholders(){if(!this.hasPlaceholder)return!1;let e=this._editor.getSelections();if(e.length<this._snippets.length)return!1;let t=new Map;for(let r of this._snippets){let n=r.computePossibleSelections();if(t.size===0)for(let[i,a]of n){a.sort(y.compareRangesUsingStarts);for(let s of e)if(a[0].containsRange(s)){t.set(i,[]);break}}if(t.size===0)return!1;t.forEach((i,a)=>{i.push(...n.get(a))})}e.sort(y.compareRangesUsingStarts);for(let[r,n]of t){if(n.length!==e.length){t.delete(r);continue}n.sort(y.compareRangesUsingStarts);for(let i=0;i<n.length;i++)if(!n[i].containsRange(e[i])){t.delete(r);continue}}return t.size>0}};An();bt();we();pt();Ae();Ne();ZL();W();Ir();Vl();Jt();pe();ki();tt();ee();Be();W();pe();ee();kt();Be();pt();Ae();W();Vl();Jt();Xt();tt();ee();Re();Si();Z();ar();xt();Le();var rd=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},Ee={Visible:new fe("suggestWidgetVisible",!1,p("suggestWidgetVisible","Whether suggestion are visible")),DetailsVisible:new fe("suggestWidgetDetailsVisible",!1,p("suggestWidgetDetailsVisible","Whether suggestion details are visible")),MultipleSuggestions:new fe("suggestWidgetMultipleSuggestions",!1,p("suggestWidgetMultipleSuggestions","Whether there are multiple suggestions to pick from")),MakesTextEdit:new fe("suggestionMakesTextEdit",!0,p("suggestionMakesTextEdit","Whether inserting the current suggestion yields in a change or has everything already been typed")),AcceptSuggestionsOnEnter:new fe("acceptSuggestionOnEnter",!0,p("acceptSuggestionOnEnter","Whether suggestions are inserted when pressing Enter")),HasInsertAndReplaceRange:new fe("suggestionHasInsertAndReplaceRange",!1,p("suggestionHasInsertAndReplaceRange","Whether the current suggestion has insert and replace behaviour")),InsertMode:new fe("suggestionInsertMode",void 0,{type:"string",description:p("suggestionInsertMode","Whether the default behaviour is to insert or replace")}),CanResolve:new fe("suggestionCanResolve",!1,p("suggestionCanResolve","Whether the current suggestion supports to resolve further details"))},oi=new oe("suggestWidgetStatusBar"),ME=class{constructor(e,t,r,n){this.position=e,this.completion=t,this.container=r,this.provider=n,this.isInvalid=!1,this.score=ho.Default,this.distance=0,this.textLabel=typeof t.label=="string"?t.label:t.label.label,this.labelLow=this.textLabel.toLowerCase(),this.isInvalid=!this.textLabel,this.sortTextLow=t.sortText&&t.sortText.toLowerCase(),this.filterTextLow=t.filterText&&t.filterText.toLowerCase(),y.isIRange(t.range)?(this.editStart=new z(t.range.startLineNumber,t.range.startColumn),this.editInsertEnd=new z(t.range.endLineNumber,t.range.endColumn),this.editReplaceEnd=new z(t.range.endLineNumber,t.range.endColumn),this.isInvalid=this.isInvalid||y.spansMultipleLines(t.range)||t.range.startLineNumber!==e.lineNumber):(this.editStart=new z(t.range.insert.startLineNumber,t.range.insert.startColumn),this.editInsertEnd=new z(t.range.insert.endLineNumber,t.range.insert.endColumn),this.editReplaceEnd=new z(t.range.replace.endLineNumber,t.range.replace.endColumn),this.isInvalid=this.isInvalid||y.spansMultipleLines(t.range.insert)||y.spansMultipleLines(t.range.replace)||t.range.insert.startLineNumber!==e.lineNumber||t.range.replace.startLineNumber!==e.lineNumber||t.range.insert.startColumn!==t.range.replace.startColumn),typeof n.resolveCompletionItem!="function"&&(this._resolveCache=Promise.resolve(),this._isResolved=!0)}get isResolved(){return!!this._isResolved}resolve(e){return rd(this,void 0,void 0,function*(){if(!this._resolveCache){let t=e.onCancellationRequested(()=>{this._resolveCache=void 0,this._isResolved=!1});this._resolveCache=Promise.resolve(this.provider.resolveCompletionItem(this.completion,e)).then(r=>{Object.assign(this.completion,r),this._isResolved=!0,t.dispose()},r=>{jn(r)&&(this._resolveCache=void 0,this._isResolved=!1)})}return this._resolveCache})}},$s=class{constructor(e=2,t=new Set,r=new Set,n=!0){this.snippetSortOrder=e,this.kindFilter=t,this.providerFilter=r,this.showDeprecated=n}};$s.default=new $s;var td;function OE(){return td}var FE=class{constructor(e,t,r,n){this.items=e,this.needsClipboard=t,this.durations=r,this.disposable=n}};function d_(o,e,t=$s.default,r={triggerKind:0},n=he.None){return rd(this,void 0,void 0,function*(){let i=new nn(!0);e=e.clone();let a=o.getWordAtPosition(e),s=a?new y(e.lineNumber,a.startColumn,e.lineNumber,a.endColumn):y.fromPositions(e),l={replace:s,insert:s.setEndPosition(e.lineNumber,e.column)},d=[],c=new P,u=[],f=!1,m=(b,T,x)=>{var R,I,H;let U=!1;if(!T)return U;for(let de of T.suggestions)if(!t.kindFilter.has(de.kind)){if(!t.showDeprecated&&((R=de==null?void 0:de.tags)===null||R===void 0?void 0:R.includes(1)))continue;de.range||(de.range=l),de.sortText||(de.sortText=typeof de.label=="string"?de.label:de.label.label),!f&&de.insertTextRules&&de.insertTextRules&4&&(f=Hi.guessNeedsClipboard(de.insertText)),d.push(new ME(e,de,T,b)),U=!0}return yu(T)&&c.add(T),u.push({providerName:(I=b._debugDisplayName)!==null&&I!==void 0?I:"unkown_provider",elapsedProvider:(H=T.duration)!==null&&H!==void 0?H:-1,elapsedOverall:x.elapsed()}),U},g=(()=>rd(this,void 0,void 0,function*(){if(!td||t.kindFilter.has(27)||t.providerFilter.size>0&&!t.providerFilter.has(td))return;let b=new nn(!0),T=yield td.provideCompletionItems(o,e,r,n);m(td,T,b)}))();for(let b of vi.orderedGroups(o)){let T=!1;if(yield Promise.all(b.map(x=>rd(this,void 0,void 0,function*(){if(!(t.providerFilter.size>0&&!t.providerFilter.has(x)))try{let R=new nn(!0),I=yield x.provideCompletionItems(o,e,r,n);T=m(x,I,R)||T}catch(R){ze(R)}}))),T||n.isCancellationRequested)break}return yield g,n.isCancellationRequested?(c.dispose(),Promise.reject(gu())):new FE(d.sort(p_(t.snippetSortOrder)),f,{entries:u,elapsed:i.elapsed()},c)})}function u_(o,e){if(o.sortTextLow&&e.sortTextLow){if(o.sortTextLow<e.sortTextLow)return-1;if(o.sortTextLow>e.sortTextLow)return 1}return o.completion.label<e.completion.label?-1:o.completion.label>e.completion.label?1:o.completion.kind-e.completion.kind}function WA(o,e){if(o.completion.kind!==e.completion.kind){if(o.completion.kind===27)return-1;if(e.completion.kind===27)return 1}return u_(o,e)}function jA(o,e){if(o.completion.kind!==e.completion.kind){if(o.completion.kind===27)return 1;if(e.completion.kind===27)return-1}return u_(o,e)}var yf=new Map;yf.set(0,WA);yf.set(2,jA);yf.set(1,u_);function p_(o){return yf.get(o)}Ie.registerCommand("_executeCompletionItemProvider",(o,...e)=>rd(void 0,void 0,void 0,function*(){let[t,r,n,i]=e;Je(Te.isUri(t)),Je(z.isIPosition(r)),Je(typeof n=="string"||!n),Je(typeof i=="number"||!i);let a=yield o.get(Wt).createModelReference(t);try{let s={incomplete:!1,suggestions:[]},l=[],d=yield d_(a.object.textEditorModel,z.lift(r),void 0,{triggerCharacter:n,triggerKind:n?1:0});for(let c of d.items)l.length<(i!=null?i:0)&&l.push(c.resolve(he.None)),s.incomplete=s.incomplete||c.container.incomplete,s.suggestions.push(c.completion);try{return yield Promise.all(l),s}finally{setTimeout(()=>d.disposable.dispose(),100)}}finally{a.dispose()}}));var c_=new class{constructor(){this.onlyOnceSuggestions=[]}provideCompletionItems(){let e={suggestions:this.onlyOnceSuggestions.slice(0)};return this.onlyOnceSuggestions.length=0,e}};vi.register("*",c_);function GE(o,e){setTimeout(()=>{var t;c_.onlyOnceSuggestions.push(...e),(t=o.getContribution("editor.contrib.suggestController"))===null||t===void 0||t.triggerSuggest(new Set().add(c_))},0)}Z();Le();ku();var zA=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},BE=function(o,e){return function(t,r){e(t,r,o)}},VE={overwriteBefore:0,overwriteAfter:0,undoStopBefore:!0,undoStopAfter:!0,adjustWhitespace:!0,clipboardText:void 0,overtypingCapturer:void 0},Lt=class nd{constructor(e,t,r){this._editor=e,this._logService=t,this._snippetListener=new P,this._modelVersionId=-1,this._inSnippet=nd.InSnippetMode.bindTo(r),this._hasNextTabstop=nd.HasNextTabstop.bindTo(r),this._hasPrevTabstop=nd.HasPrevTabstop.bindTo(r)}static get(e){return e.getContribution(nd.ID)}dispose(){var e;this._inSnippet.reset(),this._hasPrevTabstop.reset(),this._hasNextTabstop.reset(),(e=this._session)===null||e===void 0||e.dispose(),this._snippetListener.dispose()}insert(e,t){try{this._doInsert(e,typeof t=="undefined"?VE:Object.assign(Object.assign({},VE),t))}catch(r){this.cancel(),this._logService.error(r),this._logService.error("snippet_error"),this._logService.error("insert_template=",e),this._logService.error("existing_template=",this._session?this._session._logInfo():"<no_session>")}}_doInsert(e,t){!this._editor.hasModel()||(this._snippetListener.clear(),t.undoStopBefore&&this._editor.getModel().pushStackElement(),this._session?this._session.merge(e,t):(this._modelVersionId=this._editor.getModel().getAlternativeVersionId(),this._session=new Qr(this._editor,e,t),this._session.insert()),t.undoStopAfter&&this._editor.getModel().pushStackElement(),this._updateState(),this._snippetListener.add(this._editor.onDidChangeModelContent(r=>r.isFlush&&this.cancel())),this._snippetListener.add(this._editor.onDidChangeModel(()=>this.cancel())),this._snippetListener.add(this._editor.onDidChangeCursorSelection(()=>this._updateState())))}_updateState(){if(!(!this._session||!this._editor.hasModel())){if(this._modelVersionId===this._editor.getModel().getAlternativeVersionId())return this.cancel();if(!this._session.hasPlaceholder)return this.cancel();if(this._session.isAtLastPlaceholder||!this._session.isSelectionWithinPlaceholders())return this._editor.getModel().pushStackElement(),this.cancel();this._inSnippet.set(!0),this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder),this._hasNextTabstop.set(!this._session.isAtLastPlaceholder),this._handleChoice()}}_handleChoice(){if(!this._session||!this._editor.hasModel()){this._currentChoice=void 0;return}let{choice:e}=this._session;if(!e){this._currentChoice=void 0;return}if(this._currentChoice!==e){this._currentChoice=e,this._editor.setSelections(this._editor.getSelections().map(r=>X.fromPositions(r.getStartPosition())));let[t]=e.options;GE(this._editor,e.options.map((r,n)=>({kind:13,label:r.value,insertText:r.value,sortText:"a".repeat(n+1),range:y.fromPositions(this._editor.getPosition(),this._editor.getPosition().delta(0,t.value.length))})))}}finish(){for(;this._inSnippet.get();)this.next()}cancel(e=!1){var t;this._inSnippet.reset(),this._hasPrevTabstop.reset(),this._hasNextTabstop.reset(),this._snippetListener.clear(),(t=this._session)===null||t===void 0||t.dispose(),this._session=void 0,this._modelVersionId=-1,e&&this._editor.setSelections([this._editor.getSelection()])}prev(){this._session&&this._session.prev(),this._updateState()}next(){this._session&&this._session.next(),this._updateState()}isInSnippet(){return Boolean(this._inSnippet.get())}};Lt.ID="snippetController2";Lt.InSnippetMode=new fe("inSnippetMode",!1,p("inSnippetMode","Whether the editor in current in snippet mode"));Lt.HasNextTabstop=new fe("hasNextTabstop",!1,p("hasNextTabstop","Whether there is a next tab stop when in snippet mode"));Lt.HasPrevTabstop=new fe("hasPrevTabstop",!1,p("hasPrevTabstop","Whether there is a previous tab stop when in snippet mode"));Lt=zA([BE(1,pa),BE(2,re)],Lt);Q(Lt.ID,Lt);var vf=dt.bindToContribution(Lt.get);K(new vf({id:"jumpToNextSnippetPlaceholder",precondition:G.and(Lt.InSnippetMode,Lt.HasNextTabstop),handler:o=>o.next(),kbOpts:{weight:100+30,kbExpr:v.editorTextFocus,primary:2}}));K(new vf({id:"jumpToPrevSnippetPlaceholder",precondition:G.and(Lt.InSnippetMode,Lt.HasPrevTabstop),handler:o=>o.prev(),kbOpts:{weight:100+30,kbExpr:v.editorTextFocus,primary:1026}}));K(new vf({id:"leaveSnippet",precondition:Lt.InSnippetMode,handler:o=>o.cancel(!0),kbOpts:{weight:100+30,kbExpr:v.editorTextFocus,primary:9,secondary:[1033]}}));K(new vf({id:"acceptSnippet",precondition:Lt.InSnippetMode,handler:o=>o.finish()}));we();W();hs();Re();wn();ro();He();var KA=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},HE=function(o,e){return function(t,r){e(t,r,o)}},Sf=class{constructor(e){this.name=e}select(e,t,r){if(r.length===0)return 0;let n=r[0].score[0];for(let i=0;i<r.length;i++){let{score:a,completion:s}=r[i];if(a[0]!==n)break;if(s.preselect)return i}return 0}},f_=class extends Sf{constructor(){super("first")}memorize(e,t,r){}toJSON(){}fromJSON(){}},UE=class extends Sf{constructor(){super("recentlyUsed");this._cache=new zn(300,.66),this._seq=0}memorize(e,t,r){let n=`${e.getLanguageId()}/${r.textLabel}`;this._cache.set(n,{touch:this._seq++,type:r.completion.kind,insertText:r.completion.insertText})}select(e,t,r){if(r.length===0)return 0;let n=e.getLineContent(t.lineNumber).substr(t.column-10,t.column-1);if(/\s$/.test(n))return super.select(e,t,r);let i=r[0].score[0],a=-1,s=-1,l=-1;for(let d=0;d<r.length&&r[d].score[0]===i;d++){let c=`${e.getLanguageId()}/${r[d].textLabel}`,u=this._cache.peek(c);if(u&&u.touch>l&&u.type===r[d].completion.kind&&u.insertText===r[d].completion.insertText&&(l=u.touch,s=d),r[d].completion.preselect&&a===-1)return a=d}return s!==-1?s:a!==-1?a:0}toJSON(){return this._cache.toJSON()}fromJSON(e){this._cache.clear();let t=0;for(let[r,n]of e)n.touch=t,n.type=typeof n.type=="number"?n.type:Wl.fromString(n.type),this._cache.set(r,n);this._seq=this._cache.size}},WE=class extends Sf{constructor(){super("recentlyUsedByPrefix");this._trie=Fv.forStrings(),this._seq=0}memorize(e,t,r){let{word:n}=e.getWordUntilPosition(t),i=`${e.getLanguageId()}/${n}`;this._trie.set(i,{type:r.completion.kind,insertText:r.completion.insertText,touch:this._seq++})}select(e,t,r){let{word:n}=e.getWordUntilPosition(t);if(!n)return super.select(e,t,r);let i=`${e.getLanguageId()}/${n}`,a=this._trie.get(i);if(a||(a=this._trie.findSubstr(i)),a)for(let s=0;s<r.length;s++){let{kind:l,insertText:d}=r[s].completion;if(l===a.type&&d===a.insertText)return s}return super.select(e,t,r)}toJSON(){let e=[];return this._trie.forEach((t,r)=>e.push([r,t])),e.sort((t,r)=>-(t[1].touch-r[1].touch)).forEach((t,r)=>t[1].touch=r),e.slice(0,200)}fromJSON(e){if(this._trie.clear(),e.length>0){this._seq=e[0][1].touch+1;for(let[t,r]of e)r.type=typeof r.type=="number"?r.type:Wl.fromString(r.type),this._trie.set(t,r)}}},id=class bf{constructor(e,t){this._storageService=e,this._configService=t,this._disposables=new P,this._persistSoon=new Ke(()=>this._saveState(),500),this._disposables.add(e.onWillSaveState(r=>{r.reason===Tp.SHUTDOWN&&this._saveState()}))}dispose(){this._disposables.dispose(),this._persistSoon.dispose()}memorize(e,t,r){this._withStrategy(e,t).memorize(e,t,r),this._persistSoon.schedule()}select(e,t,r){return this._withStrategy(e,t).select(e,t,r)}_withStrategy(e,t){var r;let n=this._configService.getValue("editor.suggestSelection",{overrideIdentifier:e.getLanguageIdAtPosition(t.lineNumber,t.column),resource:e.uri});if(((r=this._strategy)===null||r===void 0?void 0:r.name)!==n){this._saveState();let i=bf._strategyCtors.get(n)||f_;this._strategy=new i;try{let s=this._configService.getValue("editor.suggest.shareSuggestSelections")?0:1,l=this._storageService.get(`${bf._storagePrefix}/${n}`,s);l&&this._strategy.fromJSON(JSON.parse(l))}catch(a){}}return this._strategy}_saveState(){if(this._strategy){let t=this._configService.getValue("editor.suggest.shareSuggestSelections")?0:1,r=JSON.stringify(this._strategy);this._storageService.store(`${bf._storagePrefix}/${this._strategy.name}`,r,t,1)}}};id._strategyCtors=new Map([["recentlyUsedByPrefix",WE],["recentlyUsed",UE],["first",f_]]);id._storagePrefix="suggest/memories";id=KA([HE(0,lr),HE(1,rt)],id);var m_=Mr("ISuggestMemories");Or(m_,id,!0);Le();var qA=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},JA=function(o,e){return function(t,r){e(t,r,o)}},Qs=class jE{constructor(e,t){this._editor=e,this._enabled=!1,this._ckAtEnd=jE.AtEnd.bindTo(t),this._configListener=this._editor.onDidChangeConfiguration(r=>r.hasChanged(111)&&this._update()),this._update()}dispose(){var e;this._configListener.dispose(),(e=this._selectionListener)===null||e===void 0||e.dispose(),this._ckAtEnd.reset()}_update(){let e=this._editor.getOption(111)==="on";if(this._enabled!==e)if(this._enabled=e,this._enabled){let t=()=>{if(!this._editor.hasModel()){this._ckAtEnd.set(!1);return}let r=this._editor.getModel(),n=this._editor.getSelection(),i=r.getWordAtPosition(n.getStartPosition());if(!i){this._ckAtEnd.set(!1);return}this._ckAtEnd.set(i.endColumn===n.getStartPosition().column)};this._selectionListener=this._editor.onDidChangeCursorSelection(t),t()}else this._selectionListener&&(this._ckAtEnd.reset(),this._selectionListener.dispose(),this._selectionListener=void 0)}};Qs.AtEnd=new fe("atEndOfWord",!1);Qs=qA([JA(1,re)],Qs);Z();ar();xt();Le();He();Zl();ku();Le();var XA=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},YA=function(o,e){return function(t,r){e(t,r,o)}},Ia=class Ef{constructor(e,t){this._editor=e,this._index=0,this._ckOtherSuggestions=Ef.OtherSuggestions.bindTo(t)}dispose(){this.reset()}reset(){var e;this._ckOtherSuggestions.reset(),(e=this._listener)===null||e===void 0||e.dispose(),this._model=void 0,this._acceptNext=void 0,this._ignore=!1}set({model:e,index:t},r){if(e.items.length===0){this.reset();return}if(Ef._moveIndex(!0,e,t)===t){this.reset();return}this._acceptNext=r,this._model=e,this._index=t,this._listener=this._editor.onDidChangeCursorPosition(()=>{this._ignore||this.reset()}),this._ckOtherSuggestions.set(!0)}static _moveIndex(e,t,r){let n=r;for(;n=(n+t.items.length+(e?1:-1))%t.items.length,!(n===r||!t.items[n].completion.additionalTextEdits););return n}next(){this._move(!0)}prev(){this._move(!1)}_move(e){if(!!this._model)try{this._ignore=!0,this._index=Ef._moveIndex(e,this._model,this._index),this._acceptNext({index:this._index,item:this._model.items[this._index],model:this._model})}finally{this._ignore=!1}}};Ia.OtherSuggestions=new fe("hasOtherSuggestions",!1);Ia=XA([YA(1,re)],Ia);bt();W();Bm();var h_=class{constructor(e,t,r){this._disposables=new P,this._disposables.add(t.onDidShow(()=>this._onItem(t.getFocusedItem()))),this._disposables.add(t.onDidFocus(this._onItem,this)),this._disposables.add(t.onDidHide(this.reset,this)),this._disposables.add(e.onWillType(n=>{if(this._active&&!t.isFrozen()){let i=n.charCodeAt(n.length-1);this._active.acceptCharacters.has(i)&&e.getOption(0)&&r(this._active.item)}}))}_onItem(e){if(!e||!It(e.item.completion.commitCharacters)){this.reset();return}if(this._active&&this._active.item.item===e.item)return;let t=new bi;for(let r of e.item.completion.commitCharacters)r.length>0&&t.add(r.charCodeAt(0));this._active={acceptCharacters:t,item:e}}reset(){this._active=void 0}dispose(){this._disposables.dispose()}};we();pt();Ae();Ne();W();Ye();kt();Re();dp();bt();ee();yv();tt();ee();var $A=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},dr=class{provideSelectionRanges(e,t){return $A(this,void 0,void 0,function*(){let r=[];for(let n of t){let i=[];r.push(i);let a=new Map;yield new Promise(s=>dr._bracketsRightYield(s,0,e,n,a)),yield new Promise(s=>dr._bracketsLeftYield(s,0,e,n,a,i))}return r})}static _bracketsRightYield(e,t,r,n,i){let a=new Map,s=Date.now();for(;;){if(t>=dr._maxRounds){e();break}if(!n){e();break}let l=r.bracketPairs.findNextBracket(n);if(!l){e();break}if(Date.now()-s>dr._maxDuration){setTimeout(()=>dr._bracketsRightYield(e,t+1,r,n,i));break}let c=l.close[0];if(l.isOpen){let u=a.has(c)?a.get(c):0;a.set(c,u+1)}else{let u=a.has(c)?a.get(c):0;if(u-=1,a.set(c,Math.max(0,u)),u<0){let f=i.get(c);f||(f=new vu,i.set(c,f)),f.push(l.range)}}n=l.range.getEndPosition()}}static _bracketsLeftYield(e,t,r,n,i,a){let s=new Map,l=Date.now();for(;;){if(t>=dr._maxRounds&&i.size===0){e();break}if(!n){e();break}let d=r.bracketPairs.findPrevBracket(n);if(!d){e();break}if(Date.now()-l>dr._maxDuration){setTimeout(()=>dr._bracketsLeftYield(e,t+1,r,n,i,a));break}let u=d.close[0];if(d.isOpen){let f=s.has(u)?s.get(u):0;if(f-=1,s.set(u,Math.max(0,f)),f<0){let m=i.get(u);if(m){let g=m.shift();m.size===0&&i.delete(u);let b=y.fromPositions(d.range.getEndPosition(),g.getStartPosition()),T=y.fromPositions(d.range.getStartPosition(),g.getEndPosition());a.push({range:b}),a.push({range:T}),dr._addBracketLeading(r,T,a)}}}else{let f=s.has(u)?s.get(u):0;s.set(u,f+1)}n=d.range.getStartPosition()}}static _addBracketLeading(e,t,r){if(t.startLineNumber===t.endLineNumber)return;let n=t.startLineNumber,i=e.getLineFirstNonWhitespaceColumn(n);i!==0&&i!==t.startColumn&&(r.push({range:y.fromPositions(new z(n,i),t.getEndPosition())}),r.push({range:y.fromPositions(new z(n,1),t.getEndPosition())}));let a=n-1;if(a>0){let s=e.getLineFirstNonWhitespaceColumn(a);s===t.startColumn&&s!==e.getLineLastNonWhitespaceColumn(a)&&(r.push({range:y.fromPositions(new z(a,s),t.getEndPosition())}),r.push({range:y.fromPositions(new z(a,1),t.getEndPosition())}))}}};dr._maxDuration=30;dr._maxRounds=2;var QA=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},yn=class{static create(e,t){return QA(this,void 0,void 0,function*(){if(!t.getOption(106).localityBonus||!t.hasModel())return yn.None;let r=t.getModel(),n=t.getPosition();if(!e.canComputeWordRanges(r.uri))return yn.None;let[i]=yield new dr().provideSelectionRanges(r,[n]);if(i.length===0)return yn.None;let a=yield e.computeWordRanges(r.uri,i[0].range);if(!a)return yn.None;let s=r.getWordUntilPosition(n);return delete a[s.word],new class extends yn{distance(l,d){if(!n.equals(t.getPosition()))return 0;if(d.kind===17)return 2<<20;let c=typeof d.label=="string"?d.label:d.label.label,u=a[c];if(lv(u))return 2<<20;let f=lu(u,y.fromPositions(l),y.compareRangesUsingStarts),m=f>=0?u[f]:u[Math.max(0,~f-1)],g=i.length;for(let b of i){if(!y.containsRange(b.range,m))break;g-=1}return g}}})}};yn.None=new class extends yn{distance(){return 0}};wn();Le();ku();ec();bt();Ye();var Ui=class{constructor(e,t,r,n,i,a,s){this.clipboardText=s,this._snippetCompareFn=Ui._compareCompletionItems,this._items=e,this._column=t,this._wordDistance=n,this._options=i,this._refilterKind=1,this._lineContext=r,a==="top"?this._snippetCompareFn=Ui._compareCompletionItemsSnippetsUp:a==="bottom"&&(this._snippetCompareFn=Ui._compareCompletionItemsSnippetsDown)}get lineContext(){return this._lineContext}set lineContext(e){(this._lineContext.leadingLineContent!==e.leadingLineContent||this._lineContext.characterCountDelta!==e.characterCountDelta)&&(this._refilterKind=this._lineContext.characterCountDelta<e.characterCountDelta&&this._filteredItems?2:1,this._lineContext=e)}get items(){return this._ensureCachedState(),this._filteredItems}get allProvider(){return this._ensureCachedState(),this._providerInfo.keys()}get incomplete(){this._ensureCachedState();let e=new Set;for(let[t,r]of this._providerInfo)r&&e.add(t);return e}adopt(e){let t=[];for(let r=0;r<this._items.length;)e.has(this._items[r].provider)?r++:(t.push(this._items[r]),this._items[r]=this._items[this._items.length-1],this._items.pop());return this._refilterKind=1,t}get stats(){return this._ensureCachedState(),this._stats}_ensureCachedState(){this._refilterKind!==0&&this._createCachedState()}_createCachedState(){this._providerInfo=new Map;let e=[],{leadingLineContent:t,characterCountDelta:r}=this._lineContext,n="",i="",a=this._refilterKind===1?this._items:this._filteredItems,s=[],l=!this._options.filterGraceful||a.length>2e3?hp:J1;for(let d=0;d<a.length;d++){let c=a[d];if(c.isInvalid)continue;this._providerInfo.set(c.provider,Boolean(c.container.incomplete));let u=c.position.column-c.editStart.column,f=u+r-(c.position.column-this._column);if(n.length!==f&&(n=f===0?"":t.slice(-f),i=n.toLowerCase()),c.word=n,f===0)c.score=ho.Default;else{let m=0;for(;m<u;){let g=n.charCodeAt(m);if(g===32||g===9)m+=1;else break}if(m>=f)c.score=ho.Default;else if(typeof c.completion.filterText=="string"){let g=l(n,i,m,c.completion.filterText,c.filterTextLow,0,!1);if(!g)continue;wv(c.completion.filterText,c.textLabel)===0?c.score=g:(c.score=q1(n,i,m,c.textLabel,c.labelLow,0),c.score[0]=g[0])}else{let g=l(n,i,m,c.textLabel,c.labelLow,0,!1);if(!g)continue;c.score=g}}c.idx=d,c.distance=this._wordDistance.distance(c.position,c.completion),s.push(c),e.push(c.textLabel.length)}this._filteredItems=s.sort(this._snippetCompareFn),this._refilterKind=0,this._stats={pLabelLen:e.length?sv(e.length-.85,e,(d,c)=>d-c):0}}static _compareCompletionItems(e,t){return e.score[0]>t.score[0]?-1:e.score[0]<t.score[0]?1:e.distance<t.distance?-1:e.distance>t.distance?1:e.idx<t.idx?-1:e.idx>t.idx?1:0}static _compareCompletionItemsSnippetsDown(e,t){if(e.completion.kind!==t.completion.kind){if(e.completion.kind===27)return 1;if(t.completion.kind===27)return-1}return Ui._compareCompletionItems(e,t)}static _compareCompletionItemsSnippetsUp(e,t){if(e.completion.kind!==t.completion.kind){if(e.completion.kind===27)return-1;if(t.completion.kind===27)return 1}return Ui._compareCompletionItems(e,t)}};var ZA=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Zs=function(o,e){return function(t,r){e(t,r,o)}},eI=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},Ro=class{constructor(e,t,r,n){this.leadingLineContent=e.getLineContent(t.lineNumber).substr(0,t.column-1),this.leadingWord=e.getWordUntilPosition(t),this.lineNumber=t.lineNumber,this.column=t.column,this.auto=r,this.shy=n}static shouldAutoTrigger(e){if(!e.hasModel())return!1;let t=e.getModel(),r=e.getPosition();t.tokenizeIfCheap(r.lineNumber);let n=t.getWordAtPosition(r);return!(!n||n.endColumn!==r.column||!isNaN(Number(n.word)))}};function tI(o,e,t){if(!Boolean(e.getContextKeyValue("inlineSuggestionVisible")))return!0;let r=t.getValue("editor.inlineSuggest.allowQuickSuggestions");return r!==void 0?Boolean(r):!1}function rI(o,e,t){if(!Boolean(e.getContextKeyValue("inlineSuggestionVisible")))return!0;let r=t.getValue("editor.inlineSuggest.allowSuggestOnTriggerCharacters");return r!==void 0?Boolean(r):!1}var Tf=class zE{constructor(e,t,r,n,i,a,s){this._editor=e,this._editorWorkerService=t,this._clipboardService=r,this._telemetryService=n,this._logService=i,this._contextKeyService=a,this._configurationService=s,this._toDispose=new P,this._quickSuggestDelay=10,this._triggerCharacterListener=new P,this._triggerQuickSuggest=new Rr,this._state=0,this._completionDisposables=new P,this._onDidCancel=new j,this._onDidTrigger=new j,this._onDidSuggest=new j,this.onDidCancel=this._onDidCancel.event,this.onDidTrigger=this._onDidTrigger.event,this.onDidSuggest=this._onDidSuggest.event,this._telemetryGate=0,this._currentSelection=this._editor.getSelection()||new X(1,1,1,1),this._toDispose.add(this._editor.onDidChangeModel(()=>{this._updateTriggerCharacters(),this.cancel()})),this._toDispose.add(this._editor.onDidChangeModelLanguage(()=>{this._updateTriggerCharacters(),this.cancel()})),this._toDispose.add(this._editor.onDidChangeConfiguration(()=>{this._updateTriggerCharacters(),this._updateQuickSuggest()})),this._toDispose.add(vi.onDidChange(()=>{this._updateTriggerCharacters(),this._updateActiveSuggestSession()}));let l=!1;this._toDispose.add(this._editor.onDidCompositionStart(()=>{l=!0})),this._toDispose.add(this._editor.onDidCompositionEnd(()=>{l=!1,this._onCompositionEnd()})),this._toDispose.add(this._editor.onDidChangeCursorSelection(d=>{l||this._onCursorChange(d)})),this._toDispose.add(this._editor.onDidChangeModelContent(()=>{l||this._refilterCompletionItems()})),this._updateTriggerCharacters(),this._updateQuickSuggest()}dispose(){St(this._triggerCharacterListener),St([this._onDidCancel,this._onDidSuggest,this._onDidTrigger,this._triggerQuickSuggest]),this._toDispose.dispose(),this._completionDisposables.dispose(),this.cancel()}_updateQuickSuggest(){this._quickSuggestDelay=this._editor.getOption(80),(isNaN(this._quickSuggestDelay)||!this._quickSuggestDelay&&this._quickSuggestDelay!==0||this._quickSuggestDelay<0)&&(this._quickSuggestDelay=10)}_updateTriggerCharacters(){if(this._triggerCharacterListener.clear(),this._editor.getOption(81)||!this._editor.hasModel()||!this._editor.getOption(109))return;let e=new Map;for(let r of vi.all(this._editor.getModel()))for(let n of r.triggerCharacters||[]){let i=e.get(n);i||(i=new Set,i.add(OE()),e.set(n,i)),i.add(r)}let t=r=>{if(!rI(this._editor,this._contextKeyService,this._configurationService)||Ro.shouldAutoTrigger(this._editor))return;if(!r){let a=this._editor.getPosition();r=this._editor.getModel().getLineContent(a.lineNumber).substr(0,a.column-1)}let n="";Iv(r.charCodeAt(r.length-1))?Av(r.charCodeAt(r.length-2))&&(n=r.substr(r.length-2)):n=r.charAt(r.length-1);let i=e.get(n);if(i){let a=this._completionModel?{items:this._completionModel.adopt(i),clipboardText:this._completionModel.clipboardText}:void 0;this.trigger({auto:!0,shy:!1,triggerCharacter:n},Boolean(this._completionModel),i,a)}};this._triggerCharacterListener.add(this._editor.onDidType(t)),this._triggerCharacterListener.add(this._editor.onDidCompositionEnd(()=>t()))}get state(){return this._state}cancel(e=!1){var t;this._state!==0&&(this._triggerQuickSuggest.cancel(),(t=this._requestToken)===null||t===void 0||t.cancel(),this._requestToken=void 0,this._state=0,this._completionModel=void 0,this._context=void 0,this._onDidCancel.fire({retrigger:e}))}clear(){this._completionDisposables.clear()}_updateActiveSuggestSession(){this._state!==0&&(!this._editor.hasModel()||!vi.has(this._editor.getModel())?this.cancel():this.trigger({auto:this._state===2,shy:!1},!0))}_onCursorChange(e){if(!this._editor.hasModel())return;let t=this._currentSelection;if(this._currentSelection=this._editor.getSelection(),!e.selection.isEmpty()||e.reason!==0&&e.reason!==3||e.source!=="keyboard"&&e.source!=="deleteLeft"){this.cancel();return}this._state===0&&e.reason===0?(t.containsRange(this._currentSelection)||t.getEndPosition().isBeforeOrEqual(this._currentSelection.getPosition()))&&this._doTriggerQuickSuggest():this._state!==0&&e.reason===3&&this._refilterCompletionItems()}_onCompositionEnd(){this._state===0?this._doTriggerQuickSuggest():this._refilterCompletionItems()}_doTriggerQuickSuggest(){var e;this._editor.getOption(79)!==!1&&(this._editor.getOption(106).snippetsPreventQuickSuggestions&&((e=Lt.get(this._editor))===null||e===void 0?void 0:e.isInSnippet())||(this.cancel(),this._triggerQuickSuggest.cancelAndSet(()=>{if(this._state!==0||!Ro.shouldAutoTrigger(this._editor)||!this._editor.hasModel())return;let t=this._editor.getModel(),r=this._editor.getPosition(),n=this._editor.getOption(79);if(n!==!1){if(n!==!0){t.tokenizeIfCheap(r.lineNumber);let i=t.getLineTokens(r.lineNumber),a=i.getStandardTokenType(i.findTokenIndexAtOffset(Math.max(r.column-1-1,0)));if(!(n.other&&a===0||n.comments&&a===1||n.strings&&a===2))return}!tI(this._editor,this._contextKeyService,this._configurationService)||!vi.has(t)||this.trigger({auto:!0,shy:!1})}},this._quickSuggestDelay)))}_refilterCompletionItems(){Promise.resolve().then(()=>{if(this._state===0||!this._editor.hasModel())return;let e=this._editor.getModel(),t=this._editor.getPosition(),r=new Ro(e,t,this._state===2,!1);this._onNewContext(r)})}trigger(e,t=!1,r,n){var i;if(!this._editor.hasModel())return;let a=this._editor.getModel(),s=e.auto,l=new Ro(a,this._editor.getPosition(),s,e.shy);this.cancel(t),this._state=s?2:1,this._onDidTrigger.fire({auto:s,shy:e.shy,position:this._editor.getPosition()}),this._context=l;let d={triggerKind:(i=e.triggerKind)!==null&&i!==void 0?i:0};e.triggerCharacter&&(d={triggerKind:1,triggerCharacter:e.triggerCharacter}),this._requestToken=new Mt;let c=this._editor.getOption(101),u=1;switch(c){case"top":u=0;break;case"bottom":u=2;break}let{itemKind:f,showDeprecated:m}=zE._createSuggestFilter(this._editor),g=yn.create(this._editorWorkerService,this._editor),b=d_(a,this._editor.getPosition(),new $s(u,f,r,m),d,this._requestToken.token);Promise.all([b,g]).then(([T,x])=>eI(this,void 0,void 0,function*(){var R;if((R=this._requestToken)===null||R===void 0||R.dispose(),!this._editor.hasModel())return;let I=n==null?void 0:n.clipboardText;if(!I&&T.needsClipboard&&(I=yield this._clipboardService.readText()),this._state===0)return;let H=this._editor.getModel(),U=T.items;if(n){let Ce=p_(u);U=U.concat(n.items).sort(Ce)}let de=new Ro(H,this._editor.getPosition(),s,e.shy);this._completionModel=new Ui(U,this._context.column,{leadingLineContent:de.leadingLineContent,characterCountDelta:de.column-this._context.column},x,this._editor.getOption(106),this._editor.getOption(101),I),this._completionDisposables.add(T.disposable),this._onNewContext(de),this._reportDurationsTelemetry(T.durations)})).catch(ce)}_reportDurationsTelemetry(e){this._telemetryGate++%230===0&&setTimeout(()=>{this._telemetryService.publicLog2("suggest.durations.json",{data:JSON.stringify(e)}),this._logService.debug("suggest.durations.json",e)})}static _createSuggestFilter(e){let t=new Set;e.getOption(101)==="none"&&t.add(27);let n=e.getOption(106);return n.showMethods||t.add(0),n.showFunctions||t.add(1),n.showConstructors||t.add(2),n.showFields||t.add(3),n.showVariables||t.add(4),n.showClasses||t.add(5),n.showStructs||t.add(6),n.showInterfaces||t.add(7),n.showModules||t.add(8),n.showProperties||t.add(9),n.showEvents||t.add(10),n.showOperators||t.add(11),n.showUnits||t.add(12),n.showValues||t.add(13),n.showConstants||t.add(14),n.showEnums||t.add(15),n.showEnumMembers||t.add(16),n.showKeywords||t.add(17),n.showWords||t.add(18),n.showColors||t.add(19),n.showFiles||t.add(20),n.showReferences||t.add(21),n.showColors||t.add(22),n.showFolders||t.add(23),n.showTypeParameters||t.add(24),n.showSnippets||t.add(27),n.showUsers||t.add(25),n.showIssues||t.add(26),{itemKind:t,showDeprecated:n.showDeprecated}}_onNewContext(e){if(!!this._context){if(e.lineNumber!==this._context.lineNumber){this.cancel();return}if(ft(e.leadingLineContent)!==ft(this._context.leadingLineContent)){this.cancel();return}if(e.column<this._context.column){e.leadingWord.word?this.trigger({auto:this._context.auto,shy:!1},!0):this.cancel();return}if(!!this._completionModel){if(e.leadingWord.word.length!==0&&e.leadingWord.startColumn>this._context.leadingWord.startColumn){let t=new Set(vi.all(this._editor.getModel()));for(let n of this._completionModel.allProvider)t.delete(n);let r=this._completionModel.adopt(new Set);this.trigger({auto:this._context.auto,shy:!1},!0,t,{items:r,clipboardText:this._completionModel.clipboardText});return}if(e.column>this._context.column&&this._completionModel.incomplete.size>0&&e.leadingWord.word.length!==0){let{incomplete:t}=this._completionModel,r=this._completionModel.adopt(t);this.trigger({auto:this._state===2,shy:!1,triggerKind:2},!0,t,{items:r,clipboardText:this._completionModel.clipboardText})}else{let t=this._completionModel.lineContext,r=!1;if(this._completionModel.lineContext={leadingLineContent:e.leadingLineContent,characterCountDelta:e.column-this._context.column},this._completionModel.items.length===0){if(Ro.shouldAutoTrigger(this._editor)&&this._context.leadingWord.endColumn<e.leadingWord.startColumn){this.trigger({auto:this._context.auto,shy:!1},!0);return}if(this._context.auto){this.cancel();return}else if(this._completionModel.lineContext=t,r=this._completionModel.items.length>0,r&&e.leadingWord.word.length===0){this.cancel();return}}this._onDidSuggest.fire({completionModel:this._completionModel,auto:this._context.auto,shy:this._context.shy,isFrozen:r})}}}}};Tf=ZA([Zs(1,wi),Zs(2,po),Zs(3,Yn),Zs(4,pa),Zs(5,re),Zs(6,rt)],Tf);W();var el=class{constructor(e,t){this._disposables=new P,this._lastOvertyped=[],this._empty=!0,this._disposables.add(e.onWillType(()=>{if(!this._empty||!e.hasModel())return;let r=e.getSelections(),n=r.length,i=!1;for(let s=0;s<n;s++)if(!r[s].isEmpty()){i=!0;break}if(!i)return;this._lastOvertyped=[];let a=e.getModel();for(let s=0;s<n;s++){let l=r[s];if(a.getValueLengthInRange(l)>el._maxSelectionLength)return;this._lastOvertyped[s]={value:a.getValueInRange(l),multiline:l.startLineNumber!==l.endLineNumber}}this._empty=!1})),this._disposables.add(t.onDidCancel(r=>{!this._empty&&!r.retrigger&&(this._empty=!0)}))}getLastOvertypedInfo(e){if(!this._empty&&e>=0&&e<this._lastOvertyped.length)return this._lastOvertyped[e]}dispose(){this._disposables.dispose()}};el._maxSelectionLength=51200;Pe();we();Ae();Ne();W();uD();Ye();Pe();W();Z();ar();Le();He();var nI=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},g_=function(o,e){return function(t,r){e(t,r,o)}},Cf=class extends So{updateLabel(){let e=this._keybindingService.lookupKeybinding(this._action.id,this._contextKeyService);if(!e)return super.updateLabel();this.label&&(this.label.textContent=p("ddd","{0} ({1})",this._action.label,Cf.symbolPrintEnter(e)))}static symbolPrintEnter(e){var t;return(t=e.getLabel())===null||t===void 0?void 0:t.replace(/\benter\b/gi,"\u23CE")}},xf=class{constructor(e,t,r,n){this._menuService=r,this._contextKeyService=n,this._menuDisposables=new P,this.element=B(e,V(".suggest-status-bar"));let i=a=>a instanceof fa?t.createInstance(Cf,a,void 0):void 0;this._leftActions=new uo(this.element,{actionViewItemProvider:i}),this._rightActions=new uo(this.element,{actionViewItemProvider:i}),this._leftActions.domNode.classList.add("left"),this._rightActions.domNode.classList.add("right")}dispose(){this._menuDisposables.dispose(),this.element.remove()}show(){let e=this._menuService.createMenu(oi,this._contextKeyService),t=()=>{let r=[],n=[];for(let[i,a]of e.getActions())i==="left"?r.push(...a):n.push(...a);this._leftActions.clear(),this._leftActions.push(r),this._rightActions.clear(),this._rightActions.push(n)};this._menuDisposables.add(e.onDidChange(()=>t())),this._menuDisposables.add(e)}hide(){this._menuDisposables.clear()}};xf=nI([g_(1,le),g_(2,Xn),g_(3,re)],xf);Sr();Z();mt();Oe();var iI=J("symbolIcon.arrayForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.arrayForeground","The foreground color for array symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),aI=J("symbolIcon.booleanForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.booleanForeground","The foreground color for boolean symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),oI=J("symbolIcon.classForeground",{dark:"#EE9D28",light:"#D67E00",hc:"#EE9D28"},p("symbolIcon.classForeground","The foreground color for class symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),sI=J("symbolIcon.colorForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.colorForeground","The foreground color for color symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),lI=J("symbolIcon.constantForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.constantForeground","The foreground color for constant symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),cI=J("symbolIcon.constructorForeground",{dark:"#B180D7",light:"#652D90",hc:"#B180D7"},p("symbolIcon.constructorForeground","The foreground color for constructor symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),dI=J("symbolIcon.enumeratorForeground",{dark:"#EE9D28",light:"#D67E00",hc:"#EE9D28"},p("symbolIcon.enumeratorForeground","The foreground color for enumerator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),uI=J("symbolIcon.enumeratorMemberForeground",{dark:"#75BEFF",light:"#007ACC",hc:"#75BEFF"},p("symbolIcon.enumeratorMemberForeground","The foreground color for enumerator member symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),pI=J("symbolIcon.eventForeground",{dark:"#EE9D28",light:"#D67E00",hc:"#EE9D28"},p("symbolIcon.eventForeground","The foreground color for event symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),fI=J("symbolIcon.fieldForeground",{dark:"#75BEFF",light:"#007ACC",hc:"#75BEFF"},p("symbolIcon.fieldForeground","The foreground color for field symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),mI=J("symbolIcon.fileForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.fileForeground","The foreground color for file symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),hI=J("symbolIcon.folderForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.folderForeground","The foreground color for folder symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),gI=J("symbolIcon.functionForeground",{dark:"#B180D7",light:"#652D90",hc:"#B180D7"},p("symbolIcon.functionForeground","The foreground color for function symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),_I=J("symbolIcon.interfaceForeground",{dark:"#75BEFF",light:"#007ACC",hc:"#75BEFF"},p("symbolIcon.interfaceForeground","The foreground color for interface symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),yI=J("symbolIcon.keyForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.keyForeground","The foreground color for key symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),vI=J("symbolIcon.keywordForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.keywordForeground","The foreground color for keyword symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),bI=J("symbolIcon.methodForeground",{dark:"#B180D7",light:"#652D90",hc:"#B180D7"},p("symbolIcon.methodForeground","The foreground color for method symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),SI=J("symbolIcon.moduleForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.moduleForeground","The foreground color for module symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),EI=J("symbolIcon.namespaceForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.namespaceForeground","The foreground color for namespace symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),TI=J("symbolIcon.nullForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.nullForeground","The foreground color for null symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),xI=J("symbolIcon.numberForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.numberForeground","The foreground color for number symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),CI=J("symbolIcon.objectForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.objectForeground","The foreground color for object symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),LI=J("symbolIcon.operatorForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.operatorForeground","The foreground color for operator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),DI=J("symbolIcon.packageForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.packageForeground","The foreground color for package symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),wI=J("symbolIcon.propertyForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.propertyForeground","The foreground color for property symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),AI=J("symbolIcon.referenceForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.referenceForeground","The foreground color for reference symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),II=J("symbolIcon.snippetForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.snippetForeground","The foreground color for snippet symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),kI=J("symbolIcon.stringForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.stringForeground","The foreground color for string symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),NI=J("symbolIcon.structForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.structForeground","The foreground color for struct symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),RI=J("symbolIcon.textForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.textForeground","The foreground color for text symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),PI=J("symbolIcon.typeParameterForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.typeParameterForeground","The foreground color for type parameter symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),MI=J("symbolIcon.unitForeground",{dark:ne,light:ne,hc:ne},p("symbolIcon.unitForeground","The foreground color for unit symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),OI=J("symbolIcon.variableForeground",{dark:"#75BEFF",light:"#007ACC",hc:"#75BEFF"},p("symbolIcon.variableForeground","The foreground color for variable symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));ke((o,e)=>{let t=o.getColor(iI);t&&e.addRule(`${q.symbolArray.cssSelector} { color: ${t}; }`);let r=o.getColor(aI);r&&e.addRule(`${q.symbolBoolean.cssSelector} { color: ${r}; }`);let n=o.getColor(oI);n&&e.addRule(`${q.symbolClass.cssSelector} { color: ${n}; }`);let i=o.getColor(bI);i&&e.addRule(`${q.symbolMethod.cssSelector} { color: ${i}; }`);let a=o.getColor(sI);a&&e.addRule(`${q.symbolColor.cssSelector} { color: ${a}; }`);let s=o.getColor(lI);s&&e.addRule(`${q.symbolConstant.cssSelector} { color: ${s}; }`);let l=o.getColor(cI);l&&e.addRule(`${q.symbolConstructor.cssSelector} { color: ${l}; }`);let d=o.getColor(dI);d&&e.addRule(`
			${q.symbolValue.cssSelector},${q.symbolEnum.cssSelector} { color: ${d}; }`);let c=o.getColor(uI);c&&e.addRule(`${q.symbolEnumMember.cssSelector} { color: ${c}; }`);let u=o.getColor(pI);u&&e.addRule(`${q.symbolEvent.cssSelector} { color: ${u}; }`);let f=o.getColor(fI);f&&e.addRule(`${q.symbolField.cssSelector} { color: ${f}; }`);let m=o.getColor(mI);m&&e.addRule(`${q.symbolFile.cssSelector} { color: ${m}; }`);let g=o.getColor(hI);g&&e.addRule(`${q.symbolFolder.cssSelector} { color: ${g}; }`);let b=o.getColor(gI);b&&e.addRule(`${q.symbolFunction.cssSelector} { color: ${b}; }`);let T=o.getColor(_I);T&&e.addRule(`${q.symbolInterface.cssSelector} { color: ${T}; }`);let x=o.getColor(yI);x&&e.addRule(`${q.symbolKey.cssSelector} { color: ${x}; }`);let R=o.getColor(vI);R&&e.addRule(`${q.symbolKeyword.cssSelector} { color: ${R}; }`);let I=o.getColor(SI);I&&e.addRule(`${q.symbolModule.cssSelector} { color: ${I}; }`);let H=o.getColor(EI);H&&e.addRule(`${q.symbolNamespace.cssSelector} { color: ${H}; }`);let U=o.getColor(TI);U&&e.addRule(`${q.symbolNull.cssSelector} { color: ${U}; }`);let de=o.getColor(xI);de&&e.addRule(`${q.symbolNumber.cssSelector} { color: ${de}; }`);let Ce=o.getColor(CI);Ce&&e.addRule(`${q.symbolObject.cssSelector} { color: ${Ce}; }`);let wt=o.getColor(LI);wt&&e.addRule(`${q.symbolOperator.cssSelector} { color: ${wt}; }`);let Vt=o.getColor(DI);Vt&&e.addRule(`${q.symbolPackage.cssSelector} { color: ${Vt}; }`);let Ht=o.getColor(wI);Ht&&e.addRule(`${q.symbolProperty.cssSelector} { color: ${Ht}; }`);let rn=o.getColor(AI);rn&&e.addRule(`${q.symbolReference.cssSelector} { color: ${rn}; }`);let vn=o.getColor(II);vn&&e.addRule(`${q.symbolSnippet.cssSelector} { color: ${vn}; }`);let tr=o.getColor(kI);tr&&e.addRule(`${q.symbolString.cssSelector} { color: ${tr}; }`);let mr=o.getColor(NI);mr&&e.addRule(`${q.symbolStruct.cssSelector} { color: ${mr}; }`);let bn=o.getColor(RI);bn&&e.addRule(`${q.symbolText.cssSelector} { color: ${bn}; }`);let Zi=o.getColor(PI);Zi&&e.addRule(`${q.symbolTypeParameter.cssSelector} { color: ${Zi}; }`);let za=o.getColor(MI);za&&e.addRule(`${q.symbolUnit.cssSelector} { color: ${za}; }`);let Ka=o.getColor(OI);Ka&&e.addRule(`${q.symbolVariable.cssSelector} { color: ${Ka}; }`)});Z();Le();He();mt();Oe();Pe();Ne();W();var ad=class{constructor(){this._onDidWillResize=new j,this.onDidWillResize=this._onDidWillResize.event,this._onDidResize=new j,this.onDidResize=this._onDidResize.event,this._sashListener=new P,this._size=new lt(0,0),this._minSize=new lt(0,0),this._maxSize=new lt(Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER),this.domNode=document.createElement("div"),this._eastSash=new Di(this.domNode,{getVerticalSashLeft:()=>this._size.width},{orientation:0}),this._westSash=new Di(this.domNode,{getVerticalSashLeft:()=>0},{orientation:0}),this._northSash=new Di(this.domNode,{getHorizontalSashTop:()=>0},{orientation:1,orthogonalEdge:sh.North}),this._southSash=new Di(this.domNode,{getHorizontalSashTop:()=>this._size.height},{orientation:1,orthogonalEdge:sh.South}),this._northSash.orthogonalStartSash=this._westSash,this._northSash.orthogonalEndSash=this._eastSash,this._southSash.orthogonalStartSash=this._westSash,this._southSash.orthogonalEndSash=this._eastSash;let e,t=0,r=0;this._sashListener.add(ut.any(this._northSash.onDidStart,this._eastSash.onDidStart,this._southSash.onDidStart,this._westSash.onDidStart)(()=>{e===void 0&&(this._onDidWillResize.fire(),e=this._size,t=0,r=0)})),this._sashListener.add(ut.any(this._northSash.onDidEnd,this._eastSash.onDidEnd,this._southSash.onDidEnd,this._westSash.onDidEnd)(()=>{e!==void 0&&(e=void 0,t=0,r=0,this._onDidResize.fire({dimension:this._size,done:!0}))})),this._sashListener.add(this._eastSash.onDidChange(n=>{e&&(r=n.currentX-n.startX,this.layout(e.height+t,e.width+r),this._onDidResize.fire({dimension:this._size,done:!1,east:!0}))})),this._sashListener.add(this._westSash.onDidChange(n=>{e&&(r=-(n.currentX-n.startX),this.layout(e.height+t,e.width+r),this._onDidResize.fire({dimension:this._size,done:!1,west:!0}))})),this._sashListener.add(this._northSash.onDidChange(n=>{e&&(t=-(n.currentY-n.startY),this.layout(e.height+t,e.width+r),this._onDidResize.fire({dimension:this._size,done:!1,north:!0}))})),this._sashListener.add(this._southSash.onDidChange(n=>{e&&(t=n.currentY-n.startY,this.layout(e.height+t,e.width+r),this._onDidResize.fire({dimension:this._size,done:!1,south:!0}))})),this._sashListener.add(ut.any(this._eastSash.onDidReset,this._westSash.onDidReset)(n=>{this._preferredSize&&(this.layout(this._size.height,this._preferredSize.width),this._onDidResize.fire({dimension:this._size,done:!0}))})),this._sashListener.add(ut.any(this._northSash.onDidReset,this._southSash.onDidReset)(n=>{this._preferredSize&&(this.layout(this._preferredSize.height,this._size.width),this._onDidResize.fire({dimension:this._size,done:!0}))}))}dispose(){this._northSash.dispose(),this._southSash.dispose(),this._eastSash.dispose(),this._westSash.dispose(),this._sashListener.dispose(),this._onDidResize.dispose(),this._onDidWillResize.dispose(),this.domNode.remove()}enableSashes(e,t,r,n){this._northSash.state=e?3:0,this._eastSash.state=t?3:0,this._southSash.state=r?3:0,this._westSash.state=n?3:0}layout(e=this.size.height,t=this.size.width){let{height:r,width:n}=this._minSize,{height:i,width:a}=this._maxSize;e=Math.max(r,Math.min(i,e)),t=Math.max(n,Math.min(a,t));let s=new lt(t,e);lt.equals(s,this._size)||(this.domNode.style.height=e+"px",this.domNode.style.width=t+"px",this._size=s,this._northSash.layout(),this._eastSash.layout(),this._southSash.layout(),this._westSash.layout())}clearSashHoverState(){this._eastSash.clearSashHoverState(),this._westSash.clearSashHoverState(),this._northSash.clearSashHoverState(),this._southSash.clearSashHoverState()}get size(){return this._size}set maxSize(e){this._maxSize=e}get maxSize(){return this._maxSize}set minSize(e){this._minSize=e}get minSize(){return this._minSize}set preferredSize(e){this._preferredSize=e}get preferredSize(){return this._preferredSize}};ql();Pe();Sr();Ne();W();Z();He();var FI=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},GI=function(o,e){return function(t,r){e(t,r,o)}};function od(o){return!!o&&Boolean(o.completion.documentation||o.completion.detail&&o.completion.detail!==o.completion.label)}var Lf=class{constructor(e,t){this._editor=e,this._onDidClose=new j,this.onDidClose=this._onDidClose.event,this._onDidChangeContents=new j,this.onDidChangeContents=this._onDidChangeContents.event,this._disposables=new P,this._renderDisposeable=new P,this._borderWidth=1,this._size=new lt(330,0),this.domNode=V(".suggest-details"),this.domNode.classList.add("no-docs"),this._markdownRenderer=t.createInstance(Dr,{editor:e}),this._body=V(".body"),this._scrollbar=new Os(this._body,{}),B(this.domNode,this._scrollbar.getDomNode()),this._disposables.add(this._scrollbar),this._header=B(this._body,V(".header")),this._close=B(this._header,V("span"+q.close.cssSelector)),this._close.title=p("details.close","Close"),this._type=B(this._header,V("p.type")),this._docs=B(this._body,V("p.docs")),this._configureFont(),this._disposables.add(this._editor.onDidChangeConfiguration(r=>{r.hasChanged(44)&&this._configureFont()}))}dispose(){this._disposables.dispose(),this._renderDisposeable.dispose()}_configureFont(){let e=this._editor.getOptions(),t=e.get(44),r=t.getMassagedFontFamily(Au?sa.fontFamily:null),n=e.get(107)||t.fontSize,i=e.get(108)||t.lineHeight,a=t.fontWeight,s=`${n}px`,l=`${i}px`;this.domNode.style.fontSize=s,this.domNode.style.lineHeight=`${i/n}`,this.domNode.style.fontWeight=a,this.domNode.style.fontFeatureSettings=t.fontFeatureSettings,this._type.style.fontFamily=r,this._close.style.height=l,this._close.style.width=l}getLayoutInfo(){let e=this._editor.getOption(108)||this._editor.getOption(44).lineHeight,t=this._borderWidth,r=t*2;return{lineHeight:e,borderWidth:t,borderHeight:r,verticalPadding:22,horizontalPadding:14}}renderLoading(){this._type.textContent=p("loading","Loading..."),this._docs.textContent="",this.domNode.classList.remove("no-docs","no-type"),this.layout(this.size.width,this.getLayoutInfo().lineHeight*2),this._onDidChangeContents.fire(this)}renderItem(e,t){var r,n;this._renderDisposeable.clear();let{detail:i,documentation:a}=e.completion;if(t){let s="";s+=`score: ${e.score[0]}
`,s+=`prefix: ${(r=e.word)!==null&&r!==void 0?r:"(no prefix)"}
`,s+=`word: ${e.completion.filterText?e.completion.filterText+" (filterText)":e.textLabel}
`,s+=`distance: ${e.distance} (localityBonus-setting)
`,s+=`index: ${e.idx}, based on ${e.completion.sortText&&`sortText: "${e.completion.sortText}"`||"label"}
`,s+=`commit_chars: ${(n=e.completion.commitCharacters)===null||n===void 0?void 0:n.join("")}
`,a=new sr().appendCodeblock("empty",s),i=`Provider: ${e.provider._debugDisplayName}`}if(!t&&!od(e)){this.clearContents();return}if(this.domNode.classList.remove("no-docs","no-type"),i){let s=i.length>1e5?`${i.substr(0,1e5)}\u2026`:i;this._type.textContent=s,this._type.title=s,ir(this._type),this._type.classList.toggle("auto-wrap",!/\r?\n^\s+/gmi.test(s))}else Tr(this._type),this._type.title="",Ut(this._type),this.domNode.classList.add("no-type");if(Tr(this._docs),typeof a=="string")this._docs.classList.remove("markdown-docs"),this._docs.textContent=a;else if(a){this._docs.classList.add("markdown-docs"),Tr(this._docs);let s=this._markdownRenderer.render(a);this._docs.appendChild(s.element),this._renderDisposeable.add(s),this._renderDisposeable.add(this._markdownRenderer.onDidRenderAsync(()=>{this.layout(this._size.width,this._type.clientHeight+this._docs.clientHeight),this._onDidChangeContents.fire(this)}))}this.domNode.style.userSelect="text",this.domNode.tabIndex=-1,this._close.onmousedown=s=>{s.preventDefault(),s.stopPropagation()},this._close.onclick=s=>{s.preventDefault(),s.stopPropagation(),this._onDidClose.fire()},this._body.scrollTop=0,this.layout(this._size.width,this._type.clientHeight+this._docs.clientHeight),this._onDidChangeContents.fire(this)}clearContents(){this.domNode.classList.add("no-docs"),this._type.textContent="",this._docs.textContent=""}get size(){return this._size}layout(e,t){let r=new lt(e,t);lt.equals(r,this._size)||(this._size=r,mb(this.domNode,e,t)),this._scrollbar.scanDomNode()}scrollDown(e=8){this._body.scrollTop+=e}scrollUp(e=8){this._body.scrollTop-=e}scrollTop(){this._body.scrollTop=0}scrollBottom(){this._body.scrollTop=this._body.scrollHeight}pageDown(){this.scrollDown(80)}pageUp(){this.scrollUp(80)}set borderWidth(e){this._borderWidth=e}get borderWidth(){return this._borderWidth}};Lf=FI([GI(1,le)],Lf);var __=class{constructor(e,t){this.widget=e,this._editor=t,this._disposables=new P,this._added=!1,this._preferAlignAtTop=!0,this._resizable=new ad,this._resizable.domNode.classList.add("suggest-details-container"),this._resizable.domNode.appendChild(e.domNode),this._resizable.enableSashes(!1,!0,!0,!1);let r,n,i=0,a=0;this._disposables.add(this._resizable.onDidWillResize(()=>{r=this._topLeft,n=this._resizable.size})),this._disposables.add(this._resizable.onDidResize(s=>{if(r&&n){this.widget.layout(s.dimension.width,s.dimension.height);let l=!1;s.west&&(a=n.width-s.dimension.width,l=!0),s.north&&(i=n.height-s.dimension.height,l=!0),l&&this._applyTopLeft({top:r.top+i,left:r.left+a})}s.done&&(r=void 0,n=void 0,i=0,a=0,this._userSize=s.dimension)})),this._disposables.add(this.widget.onDidChangeContents(()=>{var s;this._anchorBox&&this._placeAtAnchor(this._anchorBox,(s=this._userSize)!==null&&s!==void 0?s:this.widget.size,this._preferAlignAtTop)}))}dispose(){this._resizable.dispose(),this._disposables.dispose(),this.hide()}getId(){return"suggest.details"}getDomNode(){return this._resizable.domNode}getPosition(){return null}show(){this._added||(this._editor.addOverlayWidget(this),this.getDomNode().style.position="fixed",this._added=!0)}hide(e=!1){this._resizable.clearSashHoverState(),this._added&&(this._editor.removeOverlayWidget(this),this._added=!1,this._anchorBox=void 0,this._topLeft=void 0),e&&(this._userSize=void 0,this.widget.clearContents())}placeAtAnchor(e,t){var r;let n=e.getBoundingClientRect();this._anchorBox=n,this._preferAlignAtTop=t,this._placeAtAnchor(this._anchorBox,(r=this._userSize)!==null&&r!==void 0?r:this.widget.size,t)}_placeAtAnchor(e,t,r){var n;let i=Nu(document.body),a=this.widget.getLayoutInfo(),s=new lt(220,2*a.lineHeight),l=e.top,d=function(){let I=i.width-(e.left+e.width+a.borderWidth+a.horizontalPadding),H=-a.borderWidth+e.left+e.width,U=new lt(I,i.height-e.top-a.borderHeight-a.verticalPadding),de=U.with(void 0,e.top+e.height-a.borderHeight-a.verticalPadding);return{top:l,left:H,fit:I-t.width,maxSizeTop:U,maxSizeBottom:de,minSize:s.with(Math.min(I,s.width))}}(),c=function(){let I=e.left-a.borderWidth-a.horizontalPadding,H=Math.max(a.horizontalPadding,e.left-t.width-a.borderWidth),U=new lt(I,i.height-e.top-a.borderHeight-a.verticalPadding),de=U.with(void 0,e.top+e.height-a.borderHeight-a.verticalPadding);return{top:l,left:H,fit:I-t.width,maxSizeTop:U,maxSizeBottom:de,minSize:s.with(Math.min(I,s.width))}}(),u=function(){let I=e.left,H=-a.borderWidth+e.top+e.height,U=new lt(e.width-a.borderHeight,i.height-e.top-e.height-a.verticalPadding);return{top:H,left:I,fit:U.height-t.height,maxSizeBottom:U,maxSizeTop:U,minSize:s.with(U.width)}}(),f=[d,c,u],m=(n=f.find(I=>I.fit>=0))!==null&&n!==void 0?n:f.sort((I,H)=>H.fit-I.fit)[0],g=e.top+e.height-a.borderHeight,b,T=t.height,x=Math.max(m.maxSizeTop.height,m.maxSizeBottom.height);T>x&&(T=x);let R;r?T<=m.maxSizeTop.height?(b=!0,R=m.maxSizeTop):(b=!1,R=m.maxSizeBottom):T<=m.maxSizeBottom.height?(b=!1,R=m.maxSizeBottom):(b=!0,R=m.maxSizeTop),this._applyTopLeft({left:m.left,top:b?m.top:g-T}),this.getDomNode().style.position="fixed",this._resizable.enableSashes(!b,m===d,b,m!==d),this._resizable.minSize=m.minSize,this._resizable.maxSize=R,this._resizable.layout(T,Math.min(R.width,t.width)),this.widget.layout(this._resizable.size.width,this._resizable.size.height)}_applyTopLeft(e){this._topLeft=e,this.getDomNode().style.left=`${this._topLeft.left}px`,this.getDomNode().style.top=`${this._topLeft.top}px`}};ql();Pe();bt();Sr();Ne();W();Xt();Re();Yl();Br();nh();var Fn;(function(o){o[o.FILE=0]="FILE",o[o.FOLDER=1]="FOLDER",o[o.ROOT_FOLDER=2]="ROOT_FOLDER"})(Fn||(Fn={}));function sd(o,e,t,r){let n=r===Fn.ROOT_FOLDER?["rootfolder-icon"]:r===Fn.FOLDER?["folder-icon"]:["file-icon"];if(t){let i;if(t.scheme===Et.data?i=cc.parseMetaData(t).get(cc.META_DATA_LABEL):i=KE(rp(t).toLowerCase()),r===Fn.FOLDER)n.push(`${i}-name-folder-icon`);else{if(i){if(n.push(`${i}-name-file-icon`),i.length<=255){let s=i.split(".");for(let l=1;l<s.length;l++)n.push(`${s.slice(l).join(".")}-ext-file-icon`)}n.push("ext-file-icon")}let a=BI(o,e,t);a&&n.push(`${KE(a)}-lang-file-icon`)}}return n}function BI(o,e,t){if(!t)return null;let r=null;if(t.scheme===Et.data){let i=cc.parseMetaData(t).get(cc.META_DATA_MIME);i&&(r=e.getLanguageIdByMimeType(i))}else{let n=o.getModel(t);n&&(r=n.getLanguageId())}return r&&r!==Fs?r:e.guessLanguageIdByFilepathOrFirstLine(t)}function KE(o){return o.replace(/[\11\12\14\15\40]/g,"/")}da();an();Z();Oe();var VI=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},y_=function(o,e){return function(t,r){e(t,r,o)}},ld;function b_(o){return`suggest-aria-id:${o}`}var HI=Rt("suggest-more-info",q.chevronRight,p("suggestMoreInfoIcon","Icon for more information in the suggest widget.")),UI=new(ld=class Df{extract(e,t){if(e.textLabel.match(Df._regexStrict))return t[0]=e.textLabel,!0;if(e.completion.detail&&e.completion.detail.match(Df._regexStrict))return t[0]=e.completion.detail,!0;if(typeof e.completion.documentation=="string"){let r=Df._regexRelaxed.exec(e.completion.documentation);if(r&&(r.index===0||r.index+r[0].length===e.completion.documentation.length))return t[0]=r[0],!0}return!1}},ld._regexRelaxed=/(#([\da-fA-F]{3}){1,2}|(rgb|hsl)a\(\s*(\d{1,3}%?\s*,\s*){3}(1|0?\.\d+)\)|(rgb|hsl)\(\s*\d{1,3}%?(\s*,\s*\d{1,3}%?){2}\s*\))/,ld._regexStrict=new RegExp(`^${ld._regexRelaxed.source}$`,"i"),ld),wf=class{constructor(e,t,r,n){this._editor=e,this._modelService=t,this._languageService=r,this._themeService=n,this._onDidToggleDetails=new j,this.onDidToggleDetails=this._onDidToggleDetails.event,this.templateId="suggestion"}dispose(){this._onDidToggleDetails.dispose()}renderTemplate(e){let t=Object.create(null);t.disposables=new P,t.root=e,t.root.classList.add("show-file-icons"),t.icon=B(e,V(".icon")),t.colorspan=B(t.icon,V("span.colorspan"));let r=B(e,V(".contents")),n=B(r,V(".main"));t.iconContainer=B(n,V(".icon-label.codicon")),t.left=B(n,V("span.left")),t.right=B(n,V("span.right")),t.iconLabel=new bp(t.left,{supportHighlights:!0,supportIcons:!0}),t.disposables.add(t.iconLabel),t.parametersLabel=B(t.left,V("span.signature-label")),t.qualifierLabel=B(t.left,V("span.qualifier-label")),t.detailsLabel=B(t.right,V("span.details-label")),t.readMore=B(t.right,V("span.readMore"+it.asCSSSelector(HI))),t.readMore.title=p("readMore","Read More");let i=()=>{let a=this._editor.getOptions(),s=a.get(44),l=s.getMassagedFontFamily(Au?sa.fontFamily:null),d=s.fontFeatureSettings,c=a.get(107)||s.fontSize,u=a.get(108)||s.lineHeight,f=s.fontWeight,m=`${c}px`,g=`${u}px`;t.root.style.fontSize=m,t.root.style.fontWeight=f,n.style.fontFamily=l,n.style.fontFeatureSettings=d,n.style.lineHeight=g,t.icon.style.height=g,t.icon.style.width=g,t.readMore.style.height=g,t.readMore.style.width=g};return i(),t.disposables.add(this._editor.onDidChangeConfiguration(a=>{(a.hasChanged(44)||a.hasChanged(107)||a.hasChanged(108))&&i()})),t}renderElement(e,t,r){let{completion:n}=e;r.root.id=b_(t),r.colorspan.style.backgroundColor="";let i={labelEscapeNewLines:!0,matches:mo(e.score)},a=[];if(n.kind===19&&UI.extract(e,a))r.icon.className="icon customcolor",r.iconContainer.className="icon hide",r.colorspan.style.backgroundColor=a[0];else if(n.kind===20&&this._themeService.getFileIconTheme().hasFileIcons){r.icon.className="icon hide",r.iconContainer.className="icon hide";let s=sd(this._modelService,this._languageService,Te.from({scheme:"fake",path:e.textLabel}),Fn.FILE),l=sd(this._modelService,this._languageService,Te.from({scheme:"fake",path:n.detail}),Fn.FILE);i.extraClasses=s.length>l.length?s:l}else n.kind===23&&this._themeService.getFileIconTheme().hasFolderIcons?(r.icon.className="icon hide",r.iconContainer.className="icon hide",i.extraClasses=du([sd(this._modelService,this._languageService,Te.from({scheme:"fake",path:e.textLabel}),Fn.FOLDER),sd(this._modelService,this._languageService,Te.from({scheme:"fake",path:n.detail}),Fn.FOLDER)])):(r.icon.className="icon hide",r.iconContainer.className="",r.iconContainer.classList.add("suggest-icon",...Tu.asClassNameArray(Wl.toIcon(n.kind))));n.tags&&n.tags.indexOf(1)>=0&&(i.extraClasses=(i.extraClasses||[]).concat(["deprecated"]),i.matches=[]),r.iconLabel.setLabel(e.textLabel,void 0,i),typeof n.label=="string"?(r.parametersLabel.textContent="",r.detailsLabel.textContent=v_(n.detail||""),r.root.classList.add("string-label")):(r.parametersLabel.textContent=v_(n.label.detail||""),r.detailsLabel.textContent=v_(n.label.description||""),r.root.classList.remove("string-label")),this._editor.getOption(106).showInlineDetails?ir(r.detailsLabel):Ut(r.detailsLabel),od(e)?(r.right.classList.add("can-expand-details"),ir(r.readMore),r.readMore.onmousedown=s=>{s.stopPropagation(),s.preventDefault()},r.readMore.onclick=s=>{s.stopPropagation(),s.preventDefault(),this._onDidToggleDetails.fire()}):(r.right.classList.remove("can-expand-details"),Ut(r.readMore),r.readMore.onmousedown=null,r.readMore.onclick=null)}disposeTemplate(e){e.disposables.dispose()}};wf=VI([y_(1,Yt),y_(2,gt),y_(3,Ot)],wf);function v_(o){return o.replace(/\r\n|\r|\n/g,"")}var WI=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Af=function(o,e){return function(t,r){e(t,r,o)}},jI=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},yz=J("editorSuggestWidget.background",{dark:dn,light:dn,hc:dn},p("editorSuggestWidgetBackground","Background color of the suggest widget.")),vz=J("editorSuggestWidget.border",{dark:Ls,light:Ls,hc:Ls},p("editorSuggestWidgetBorder","Border color of the suggest widget.")),S_=J("editorSuggestWidget.foreground",{dark:ju,light:ju,hc:ju},p("editorSuggestWidgetForeground","Foreground color of the suggest widget.")),bz=J("editorSuggestWidget.selectedForeground",{dark:Ku,light:Ku,hc:Ku},p("editorSuggestWidgetSelectedForeground","Foreground color of the selected entry in the suggest widget.")),Sz=J("editorSuggestWidget.selectedIconForeground",{dark:qu,light:qu,hc:qu},p("editorSuggestWidgetSelectedIconForeground","Icon foreground color of the selected entry in the suggest widget.")),zI=J("editorSuggestWidget.selectedBackground",{dark:Ju,light:Ju,hc:Ju},p("editorSuggestWidgetSelectedBackground","Background color of the selected entry in the suggest widget.")),Ez=J("editorSuggestWidget.highlightForeground",{dark:_a,light:_a,hc:_a},p("editorSuggestWidgetHighlightForeground","Color of the match highlights in the suggest widget.")),Tz=J("editorSuggestWidget.focusHighlightForeground",{dark:zu,light:zu,hc:zu},p("editorSuggestWidgetFocusHighlightForeground","Color of the match highlights in the suggest widget when an item is focused.")),xz=J("editorSuggestWidgetStatus.foreground",{dark:or(S_,.5),light:or(S_,.5),hc:or(S_,.5)},p("editorSuggestWidgetStatusForeground","Foreground color of the suggest widget status.")),qE=class{constructor(e,t){this._service=e,this._key=`suggestWidget.size/${t.getEditorType()}/${t instanceof kn}`}restore(){var e;let t=(e=this._service.get(this._key,0))!==null&&e!==void 0?e:"";try{let r=JSON.parse(t);if(lt.is(r))return lt.lift(r)}catch(r){}}store(e){this._service.store(this._key,JSON.stringify(e),0,1)}reset(){this._service.remove(this._key,0)}},tl=class E_{constructor(e,t,r,n,i){this.editor=e,this._storageService=t,this._state=0,this._isAuto=!1,this._ignoreFocusEvents=!1,this._forceRenderingAbove=!1,this._explainMode=!1,this._showTimeout=new Rr,this._disposables=new P,this._onDidSelect=new j,this._onDidFocus=new j,this._onDidHide=new j,this._onDidShow=new j,this.onDidSelect=this._onDidSelect.event,this.onDidFocus=this._onDidFocus.event,this.onDidHide=this._onDidHide.event,this.onDidShow=this._onDidShow.event,this._onDetailsKeydown=new j,this.onDetailsKeyDown=this._onDetailsKeydown.event,this.element=new ad,this.element.domNode.classList.add("editor-widget","suggest-widget"),this._contentWidget=new JE(this,e),this._persistedSize=new qE(t,e);class a{constructor(m,g,b=!1,T=!1){this.persistedSize=m,this.currentSize=g,this.persistHeight=b,this.persistWidth=T}}let s;this._disposables.add(this.element.onDidWillResize(()=>{this._contentWidget.lockPreference(),s=new a(this._persistedSize.restore(),this.element.size)})),this._disposables.add(this.element.onDidResize(f=>{var m,g,b,T;if(this._resize(f.dimension.width,f.dimension.height),s&&(s.persistHeight=s.persistHeight||!!f.north||!!f.south,s.persistWidth=s.persistWidth||!!f.east||!!f.west),!!f.done){if(s){let{itemHeight:x,defaultSize:R}=this.getLayoutInfo(),I=Math.round(x/2),{width:H,height:U}=this.element.size;(!s.persistHeight||Math.abs(s.currentSize.height-U)<=I)&&(U=(g=(m=s.persistedSize)===null||m===void 0?void 0:m.height)!==null&&g!==void 0?g:R.height),(!s.persistWidth||Math.abs(s.currentSize.width-H)<=I)&&(H=(T=(b=s.persistedSize)===null||b===void 0?void 0:b.width)!==null&&T!==void 0?T:R.width),this._persistedSize.store(new lt(H,U))}this._contentWidget.unlockPreference(),s=void 0}})),this._messageElement=B(this.element.domNode,V(".message")),this._listElement=B(this.element.domNode,V(".tree"));let l=i.createInstance(Lf,this.editor);l.onDidClose(this.toggleDetails,this,this._disposables),this._details=new __(l,this.editor);let d=()=>this.element.domNode.classList.toggle("no-icons",!this.editor.getOption(106).showIcons);d();let c=i.createInstance(wf,this.editor);this._disposables.add(c),this._disposables.add(c.onDidToggleDetails(()=>this.toggleDetails())),this._list=new fS("SuggestWidget",this._listElement,{getHeight:f=>this.getLayoutInfo().itemHeight,getTemplateId:f=>"suggestion"},[c],{alwaysConsumeMouseWheel:!0,useShadows:!1,mouseSupport:!1,accessibilityProvider:{getRole:()=>"option",getWidgetAriaLabel:()=>p("suggest","Suggest"),getWidgetRole:()=>"listbox",getAriaLabel:f=>{let m=f.textLabel;if(typeof f.completion.label!="string"){let{detail:x,description:R}=f.completion.label;x&&R?m=p("label.full","{0}{1}, {2}",m,x,R):x?m=p("label.detail","{0}{1}",m,x):R&&(m=p("label.desc","{0}, {1}",m,R))}if(!f.isResolved||!this._isDetailsVisible())return m;let{documentation:g,detail:b}=f.completion,T=zr("{0}{1}",b||"",g?typeof g=="string"?g:g.value:"");return p("ariaCurrenttSuggestionReadDetails","{0}, docs: {1}",m,T)}}}),this._status=i.createInstance(xf,this.element.domNode);let u=()=>this.element.domNode.classList.toggle("with-status-bar",this.editor.getOption(106).showStatusBar);u(),this._disposables.add(Q1(this._list,n,{listInactiveFocusBackground:zI,listInactiveFocusOutline:oo})),this._disposables.add(n.onDidColorThemeChange(f=>this._onThemeChange(f))),this._onThemeChange(n.getColorTheme()),this._disposables.add(this._list.onMouseDown(f=>this._onListMouseDownOrTap(f))),this._disposables.add(this._list.onTap(f=>this._onListMouseDownOrTap(f))),this._disposables.add(this._list.onDidChangeSelection(f=>this._onListSelection(f))),this._disposables.add(this._list.onDidChangeFocus(f=>this._onListFocus(f))),this._disposables.add(this.editor.onDidChangeCursorSelection(()=>this._onCursorSelectionChanged())),this._disposables.add(this.editor.onDidChangeConfiguration(f=>{f.hasChanged(106)&&(u(),d())})),this._ctxSuggestWidgetVisible=Ee.Visible.bindTo(r),this._ctxSuggestWidgetDetailsVisible=Ee.DetailsVisible.bindTo(r),this._ctxSuggestWidgetMultipleSuggestions=Ee.MultipleSuggestions.bindTo(r),this._disposables.add(Fr(this._details.widget.domNode,"keydown",f=>{this._onDetailsKeydown.fire(f)})),this._disposables.add(this.editor.onMouseDown(f=>this._onEditorMouseDown(f)))}dispose(){var e;this._details.widget.dispose(),this._details.dispose(),this._list.dispose(),this._status.dispose(),this._disposables.dispose(),(e=this._loadingTimeout)===null||e===void 0||e.dispose(),this._showTimeout.dispose(),this._contentWidget.dispose(),this.element.dispose()}_onEditorMouseDown(e){this._details.widget.domNode.contains(e.target.element)?this._details.widget.domNode.focus():this.element.domNode.contains(e.target.element)&&this.editor.focus()}_onCursorSelectionChanged(){this._state!==0&&this._contentWidget.layout()}_onListMouseDownOrTap(e){typeof e.element=="undefined"||typeof e.index=="undefined"||(e.browserEvent.preventDefault(),e.browserEvent.stopPropagation(),this._select(e.element,e.index))}_onListSelection(e){e.elements.length&&this._select(e.elements[0],e.indexes[0])}_select(e,t){let r=this._completionModel;r&&(this._onDidSelect.fire({item:e,index:t,model:r}),this.editor.focus())}_onThemeChange(e){this._details.widget.borderWidth=e.type==="hc"?2:1}_onListFocus(e){var t;if(this._ignoreFocusEvents)return;if(!e.elements.length){this._currentSuggestionDetails&&(this._currentSuggestionDetails.cancel(),this._currentSuggestionDetails=void 0,this._focusedItem=void 0),this.editor.setAriaOptions({activeDescendant:void 0});return}if(!this._completionModel)return;let r=e.elements[0],n=e.indexes[0];r!==this._focusedItem&&((t=this._currentSuggestionDetails)===null||t===void 0||t.cancel(),this._currentSuggestionDetails=void 0,this._focusedItem=r,this._list.reveal(n),this._currentSuggestionDetails=Ge(i=>jI(this,void 0,void 0,function*(){let a=Qa(()=>{this._isDetailsVisible()&&this.showDetails(!0)},250);i.onCancellationRequested(()=>a.dispose());let s=yield r.resolve(i);return a.dispose(),s})),this._currentSuggestionDetails.then(()=>{n>=this._list.length||r!==this._list.element(n)||(this._ignoreFocusEvents=!0,this._list.splice(n,1,[r]),this._list.setFocus([n]),this._ignoreFocusEvents=!1,this._isDetailsVisible()?this.showDetails(!1):this.element.domNode.classList.remove("docs-side"),this.editor.setAriaOptions({activeDescendant:b_(n)}))}).catch(ce)),this._onDidFocus.fire({item:r,index:n,model:this._completionModel})}_setState(e){if(this._state!==e)switch(this._state=e,this.element.domNode.classList.toggle("frozen",e===4),this.element.domNode.classList.remove("message"),e){case 0:Ut(this._messageElement,this._listElement,this._status.element),this._details.hide(!0),this._status.hide(),this._contentWidget.hide(),this._ctxSuggestWidgetVisible.reset(),this._ctxSuggestWidgetMultipleSuggestions.reset(),this._showTimeout.cancel(),this.element.domNode.classList.remove("visible"),this._list.splice(0,this._list.length),this._focusedItem=void 0,this._cappedHeight=void 0,this._explainMode=!1;break;case 1:this.element.domNode.classList.add("message"),this._messageElement.textContent=E_.LOADING_MESSAGE,Ut(this._listElement,this._status.element),ir(this._messageElement),this._details.hide(),this._show(),this._focusedItem=void 0;break;case 2:this.element.domNode.classList.add("message"),this._messageElement.textContent=E_.NO_SUGGESTIONS_MESSAGE,Ut(this._listElement,this._status.element),ir(this._messageElement),this._details.hide(),this._show(),this._focusedItem=void 0;break;case 3:Ut(this._messageElement),ir(this._listElement,this._status.element),this._show();break;case 4:Ut(this._messageElement),ir(this._listElement,this._status.element),this._show();break;case 5:Ut(this._messageElement),ir(this._listElement,this._status.element),this._details.show(),this._show();break}}_show(){this._status.show(),this._contentWidget.show(),this._layout(this._persistedSize.restore()),this._ctxSuggestWidgetVisible.set(!0),this._showTimeout.cancelAndSet(()=>{this.element.domNode.classList.add("visible"),this._onDidShow.fire(this)},100)}showTriggered(e,t){this._state===0&&(this._contentWidget.setPosition(this.editor.getPosition()),this._isAuto=!!e,this._isAuto||(this._loadingTimeout=Qa(()=>this._setState(1),t)))}showSuggestions(e,t,r,n){var i,a;if(this._contentWidget.setPosition(this.editor.getPosition()),(i=this._loadingTimeout)===null||i===void 0||i.dispose(),(a=this._currentSuggestionDetails)===null||a===void 0||a.cancel(),this._currentSuggestionDetails=void 0,this._completionModel!==e&&(this._completionModel=e),r&&this._state!==2&&this._state!==0){this._setState(4);return}let s=this._completionModel.items.length,l=s===0;if(this._ctxSuggestWidgetMultipleSuggestions.set(s>1),l){this._setState(n?0:2),this._completionModel=void 0;return}this._focusedItem=void 0,this._list.splice(0,this._list.length,this._completionModel.items),this._setState(r?4:3),this._list.reveal(t,0),this._list.setFocus([t]),this._layout(this.element.size),this._details.widget.domNode.classList.remove("focused")}selectNextPage(){switch(this._state){case 0:return!1;case 5:return this._details.widget.pageDown(),!0;case 1:return!this._isAuto;default:return this._list.focusNextPage(),!0}}selectNext(){switch(this._state){case 0:return!1;case 1:return!this._isAuto;default:return this._list.focusNext(1,!0),!0}}selectLast(){switch(this._state){case 0:return!1;case 5:return this._details.widget.scrollBottom(),!0;case 1:return!this._isAuto;default:return this._list.focusLast(),!0}}selectPreviousPage(){switch(this._state){case 0:return!1;case 5:return this._details.widget.pageUp(),!0;case 1:return!this._isAuto;default:return this._list.focusPreviousPage(),!0}}selectPrevious(){switch(this._state){case 0:return!1;case 1:return!this._isAuto;default:return this._list.focusPrevious(1,!0),!1}}selectFirst(){switch(this._state){case 0:return!1;case 5:return this._details.widget.scrollTop(),!0;case 1:return!this._isAuto;default:return this._list.focusFirst(),!0}}getFocusedItem(){if(this._state!==0&&this._state!==2&&this._state!==1&&this._completionModel)return{item:this._list.getFocusedElements()[0],index:this._list.getFocus()[0],model:this._completionModel}}toggleDetailsFocus(){this._state===5?(this._setState(3),this._details.widget.domNode.classList.remove("focused")):this._state===3&&this._isDetailsVisible()&&(this._setState(5),this._details.widget.domNode.classList.add("focused"))}toggleDetails(){this._isDetailsVisible()?(this._ctxSuggestWidgetDetailsVisible.set(!1),this._setDetailsVisible(!1),this._details.hide(),this.element.domNode.classList.remove("shows-details")):(od(this._list.getFocusedElements()[0])||this._explainMode)&&(this._state===3||this._state===5||this._state===4)&&(this._ctxSuggestWidgetDetailsVisible.set(!0),this._setDetailsVisible(!0),this.showDetails(!1))}showDetails(e){this._details.show(),e?this._details.widget.renderLoading():this._details.widget.renderItem(this._list.getFocusedElements()[0],this._explainMode),this._positionDetails(),this.editor.focus(),this.element.domNode.classList.add("shows-details")}toggleExplainMode(){this._list.getFocusedElements()[0]&&(this._explainMode=!this._explainMode,this._isDetailsVisible()?this.showDetails(!1):this.toggleDetails())}resetPersistedSize(){this._persistedSize.reset()}hideWidget(){var e;(e=this._loadingTimeout)===null||e===void 0||e.dispose(),this._setState(0),this._onDidHide.fire(this),this.element.clearSashHoverState();let t=this._persistedSize.restore(),r=Math.ceil(this.getLayoutInfo().itemHeight*4.3);t&&t.height<r&&this._persistedSize.store(t.with(void 0,r))}isFrozen(){return this._state===4}_afterRender(e){if(e===null){this._isDetailsVisible()&&this._details.hide();return}this._state===2||this._state===1||(this._isDetailsVisible()&&this._details.show(),this._positionDetails())}_layout(e){var t,r,n;if(!this.editor.hasModel()||!this.editor.getDomNode())return;let i=Nu(document.body),a=this.getLayoutInfo();e||(e=a.defaultSize);let s=e.height,l=e.width;if(this._status.element.style.lineHeight=`${a.itemHeight}px`,this._state===2||this._state===1)s=a.itemHeight+a.borderHeight,l=a.defaultSize.width/2,this.element.enableSashes(!1,!1,!1,!1),this.element.minSize=this.element.maxSize=new lt(l,s),this._contentWidget.setPreference(2);else{let d=i.width-a.borderHeight-2*a.horizontalPadding;l>d&&(l=d);let c=this._completionModel?this._completionModel.stats.pLabelLen*a.typicalHalfwidthCharacterWidth:l,u=a.statusBarHeight+this._list.contentHeight+a.borderHeight,f=a.itemHeight+a.statusBarHeight,m=nr(this.editor.getDomNode()),g=this.editor.getScrolledVisiblePosition(this.editor.getPosition()),b=m.top+g.top+g.height,T=Math.min(i.height-b-a.verticalPadding,u),x=m.top+g.top-a.verticalPadding,R=Math.min(x,u),I=Math.min(Math.max(R,T)+a.borderHeight,u);s===((t=this._cappedHeight)===null||t===void 0?void 0:t.capped)&&(s=this._cappedHeight.wanted),s<f&&(s=f),s>I&&(s=I);let H=150;s>T||this._forceRenderingAbove&&x>H?(this._contentWidget.setPreference(1),this.element.enableSashes(!0,!0,!1,!1),I=R):(this._contentWidget.setPreference(2),this.element.enableSashes(!1,!0,!0,!1),I=T),this.element.preferredSize=new lt(c,a.defaultSize.height),this.element.maxSize=new lt(d,I),this.element.minSize=new lt(220,f),this._cappedHeight=s===u?{wanted:(n=(r=this._cappedHeight)===null||r===void 0?void 0:r.wanted)!==null&&n!==void 0?n:e.height,capped:s}:void 0}this._resize(l,s)}_resize(e,t){let{width:r,height:n}=this.element.maxSize;e=Math.min(r,e),t=Math.min(n,t);let{statusBarHeight:i}=this.getLayoutInfo();this._list.layout(t-i,e),this._listElement.style.height=`${t-i}px`,this.element.layout(t,e),this._contentWidget.layout(),this._positionDetails()}_positionDetails(){var e;this._isDetailsVisible()&&this._details.placeAtAnchor(this.element.domNode,((e=this._contentWidget.getPosition())===null||e===void 0?void 0:e.preference[0])===2)}getLayoutInfo(){let e=this.editor.getOption(44),t=O1(this.editor.getOption(108)||e.lineHeight,8,1e3),r=!this.editor.getOption(106).showStatusBar||this._state===2||this._state===1?0:t,n=this._details.widget.borderWidth,i=2*n;return{itemHeight:t,statusBarHeight:r,borderWidth:n,borderHeight:i,typicalHalfwidthCharacterWidth:e.typicalHalfwidthCharacterWidth,verticalPadding:22,horizontalPadding:14,defaultSize:new lt(430,r+12*t+i)}}_isDetailsVisible(){return this._storageService.getBoolean("expandSuggestionDocs",0,!1)}_setDetailsVisible(e){this._storageService.store("expandSuggestionDocs",e,0,0)}forceRenderingAbove(){this._forceRenderingAbove||(this._forceRenderingAbove=!0,this._layout(this._persistedSize.restore()))}stopForceRenderingAbove(){this._forceRenderingAbove=!1}};tl.LOADING_MESSAGE=p("suggestWidget.loading","Loading...");tl.NO_SUGGESTIONS_MESSAGE=p("suggestWidget.noSuggestions","No suggestions.");tl=WI([Af(1,lr),Af(2,re),Af(3,Ot),Af(4,le)],tl);var JE=class{constructor(e,t){this._widget=e,this._editor=t,this.allowEditorOverflow=!0,this.suppressMouseDown=!1,this._preferenceLocked=!1,this._added=!1,this._hidden=!1}dispose(){this._added&&(this._added=!1,this._editor.removeContentWidget(this))}getId(){return"editor.widget.suggestWidget"}getDomNode(){return this._widget.element.domNode}show(){this._hidden=!1,this._added||(this._added=!0,this._editor.addContentWidget(this))}hide(){this._hidden||(this._hidden=!0,this.layout())}layout(){this._editor.layoutContentWidget(this)}getPosition(){return this._hidden||!this._position||!this._preference?null:{position:this._position,preference:[this._preference]}}beforeRender(){let{height:e,width:t}=this._widget.element.size,{borderWidth:r,horizontalPadding:n}=this._widget.getLayoutInfo();return new lt(t+2*r+n,e+2*r)}afterRender(e){this._widget._afterRender(e)}setPreference(e){this._preferenceLocked||(this._preference=e)}lockPreference(){this._preferenceLocked=!0}unlockPreference(){this._preferenceLocked=!1}setPosition(e){this._position=e}};ec();Br();eb();var KI=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},rl=function(o,e){return function(t,r){e(t,r,o)}},qI=!1,XE=class{constructor(e,t){if(this._model=e,this._position=t,e.getLineMaxColumn(t.lineNumber)!==t.column){let n=e.getOffsetAt(t),i=e.getPositionAt(n+1);this._marker=e.deltaDecorations([],[{range:y.fromPositions(t,i),options:{description:"suggest-line-suffix",stickiness:1}}])}}dispose(){this._marker&&!this._model.isDisposed()&&this._model.deltaDecorations(this._marker,[])}delta(e){if(this._model.isDisposed()||this._position.lineNumber!==e.lineNumber)return 0;if(this._marker){let t=this._model.getDecorationRange(this._marker[0]);return this._model.getOffsetAt(t.getStartPosition())-this._model.getOffsetAt(e)}else return this._model.getLineMaxColumn(e.lineNumber)-e.column}},Zr=class YE{constructor(e,t,r,n,i,a,s){this._memoryService=t,this._commandService=r,this._contextKeyService=n,this._instantiationService=i,this._logService=a,this._telemetryService=s,this._lineSuffix=new et,this._toDispose=new P,this._selectors=new $E(u=>u.priority),this._telemetryGate=0,this.editor=e,this.model=i.createInstance(Tf,this.editor);let l=Ee.InsertMode.bindTo(n);l.set(e.getOption(106).insertMode),this.model.onDidTrigger(()=>l.set(e.getOption(106).insertMode)),this.widget=this._toDispose.add(new fs(()=>{let u=this._instantiationService.createInstance(tl,this.editor);this._toDispose.add(u),this._toDispose.add(u.onDidSelect(T=>this._insertSuggestion(T,0),this));let f=new h_(this.editor,u,T=>this._insertSuggestion(T,2));this._toDispose.add(f),this._toDispose.add(this.model.onDidSuggest(T=>{T.completionModel.items.length===0&&f.reset()}));let m=Ee.MakesTextEdit.bindTo(this._contextKeyService),g=Ee.HasInsertAndReplaceRange.bindTo(this._contextKeyService),b=Ee.CanResolve.bindTo(this._contextKeyService);return this._toDispose.add(Ve(()=>{m.reset(),g.reset(),b.reset()})),this._toDispose.add(u.onDidFocus(({item:T})=>{let x=this.editor.getPosition(),R=T.editStart.column,I=x.column,H=!0;this.editor.getOption(1)==="smart"&&this.model.state===2&&!T.completion.additionalTextEdits&&!(T.completion.insertTextRules&4)&&I-R===T.completion.insertText.length&&(H=this.editor.getModel().getValueInRange({startLineNumber:x.lineNumber,startColumn:R,endLineNumber:x.lineNumber,endColumn:I})!==T.completion.insertText),m.set(H),g.set(!z.equals(T.editInsertEnd,T.editReplaceEnd)),b.set(Boolean(T.provider.resolveCompletionItem)||Boolean(T.completion.documentation)||T.completion.detail!==T.completion.label)})),this._toDispose.add(u.onDetailsKeyDown(T=>{if(T.toKeybinding().equals(new Um(!0,!1,!1,!1,33))||yr&&T.toKeybinding().equals(new Um(!1,!1,!1,!0,33))){T.stopPropagation();return}T.toKeybinding().isModifierKey()||this.editor.focus()})),u})),this._overtypingCapturer=this._toDispose.add(new fs(()=>this._toDispose.add(new el(this.editor,this.model)))),this._alternatives=this._toDispose.add(new fs(()=>this._toDispose.add(new Ia(this.editor,this._contextKeyService)))),this._toDispose.add(i.createInstance(Qs,e)),this._toDispose.add(this.model.onDidTrigger(u=>{this.widget.value.showTriggered(u.auto,u.shy?250:50),this._lineSuffix.value=new XE(this.editor.getModel(),u.position)})),this._toDispose.add(this.model.onDidSuggest(u=>{if(!u.shy){let f=-1;for(let m of this._selectors.itemsOrderedByPriorityDesc)if(f=m.select(this.editor.getModel(),this.editor.getPosition(),u.completionModel.items),f!==-1)break;f===-1&&(f=this._memoryService.select(this.editor.getModel(),this.editor.getPosition(),u.completionModel.items)),this.widget.value.showSuggestions(u.completionModel,f,u.isFrozen,u.auto)}})),this._toDispose.add(this.model.onDidCancel(u=>{u.retrigger||this.widget.value.hideWidget()})),this._toDispose.add(this.editor.onDidBlurEditorWidget(()=>{qI||(this.model.cancel(),this.model.clear())}));let d=Ee.AcceptSuggestionsOnEnter.bindTo(n),c=()=>{let u=this.editor.getOption(1);d.set(u==="on"||u==="smart")};this._toDispose.add(this.editor.onDidChangeConfiguration(()=>c())),c()}static get(e){return e.getContribution(YE.ID)}dispose(){this._alternatives.dispose(),this._toDispose.dispose(),this.widget.dispose(),this.model.dispose(),this._lineSuffix.dispose()}_insertSuggestion(e,t){if(!e||!e.item){this._alternatives.value.reset(),this.model.cancel(),this.model.clear();return}if(!this.editor.hasModel())return;let r=Lt.get(this.editor);if(!r)return;let n=this.editor.getModel(),i=n.getAlternativeVersionId(),{item:a}=e,s=[],l=new Mt;t&1||this.editor.pushUndoStop();let d=this.getOverwriteInfo(a,Boolean(t&8));if(this._memoryService.memorize(n,this.editor.getPosition(),a),Array.isArray(a.completion.additionalTextEdits)){let u=va.capture(this.editor);this.editor.executeEdits("suggestController.additionalTextEdits.sync",a.completion.additionalTextEdits.map(f=>We.replace(y.lift(f.range),f.text))),u.restoreRelativeVerticalPositionOfCursor(this.editor)}else if(!a.isResolved){let u=new nn(!0),f,m=n.onDidChangeContent(x=>{if(x.isFlush){l.cancel(),m.dispose();return}for(let R of x.changes){let I=y.getEndPosition(R.range);(!f||z.isBefore(I,f))&&(f=I)}}),g=t;t|=2;let b=!1,T=this.editor.onWillType(()=>{T.dispose(),b=!0,g&2||this.editor.pushUndoStop()});s.push(a.resolve(l.token).then(()=>{if(!a.completion.additionalTextEdits||l.token.isCancellationRequested||f&&a.completion.additionalTextEdits.some(R=>z.isBefore(f,y.getStartPosition(R.range))))return!1;b&&this.editor.pushUndoStop();let x=va.capture(this.editor);return this.editor.executeEdits("suggestController.additionalTextEdits.async",a.completion.additionalTextEdits.map(R=>We.replace(y.lift(R.range),R.text))),x.restoreRelativeVerticalPositionOfCursor(this.editor),(b||!(g&2))&&this.editor.pushUndoStop(),!0}).then(x=>{this._logService.trace("[suggest] async resolving of edits DONE (ms, applied?)",u.elapsed(),x),m.dispose(),T.dispose()}))}let{insertText:c}=a.completion;a.completion.insertTextRules&4||(c=Hi.escape(c)),r.insert(c,{overwriteBefore:d.overwriteBefore,overwriteAfter:d.overwriteAfter,undoStopBefore:!1,undoStopAfter:!1,adjustWhitespace:!(a.completion.insertTextRules&1),clipboardText:e.model.clipboardText,overtypingCapturer:this._overtypingCapturer.value}),t&2||this.editor.pushUndoStop(),a.completion.command?a.completion.command.id===nl.id?this.model.trigger({auto:!0,shy:!1},!0):(s.push(this._commandService.executeCommand(a.completion.command.id,...a.completion.command.arguments?[...a.completion.command.arguments]:[]).catch(ce)),this.model.cancel()):this.model.cancel(),t&4&&this._alternatives.value.set(e,u=>{for(l.cancel();n.canUndo();){i!==n.getAlternativeVersionId()&&n.undo(),this._insertSuggestion(u,3|(t&8?8:0));break}}),this._alertCompletionItem(a),Promise.all(s).finally(()=>{this._reportSuggestionAcceptedTelemetry(n,e),this.model.clear(),l.dispose()})}_reportSuggestionAcceptedTelemetry(e,t){var r;if(this._telemetryGate++%100!==0)return;let n=((r=t.item.provider._debugDisplayName)!==null&&r!==void 0?r:"unknown").split("(",1)[0].toLowerCase();this._telemetryService.publicLog2("suggest.acceptedSuggestion",{providerId:n,basenameHash:Iu(Qt(e.uri)).toString(16),languageId:e.getLanguageId(),fileExtension:C1(e.uri)})}getOverwriteInfo(e,t){Je(this.editor.hasModel());let r=this.editor.getOption(106).insertMode==="replace";t&&(r=!r);let n=e.position.column-e.editStart.column,i=(r?e.editReplaceEnd.column:e.editInsertEnd.column)-e.position.column,a=this.editor.getPosition().column-e.position.column,s=this._lineSuffix.value?this._lineSuffix.value.delta(this.editor.getPosition()):0;return{overwriteBefore:n+a,overwriteAfter:i+s}}_alertCompletionItem(e){if(It(e.completion.additionalTextEdits)){let t=p("aria.alert.snippet","Accepting '{0}' made {1} additional edits",e.textLabel,e.completion.additionalTextEdits.length);Tt(t)}}triggerSuggest(e,t){this.editor.hasModel()&&(this.model.trigger({auto:t!=null?t:!1,shy:!1},!1,e),this.editor.revealPosition(this.editor.getPosition(),0),this.editor.focus())}triggerSuggestAndAcceptBest(e){if(!this.editor.hasModel())return;let t=this.editor.getPosition(),r=()=>{t.equals(this.editor.getPosition())&&this._commandService.executeCommand(e.fallback)},n=i=>{if(i.completion.insertTextRules&4||i.completion.additionalTextEdits)return!0;let a=this.editor.getPosition(),s=i.editStart.column,l=a.column;return l-s!==i.completion.insertText.length?!0:this.editor.getModel().getValueInRange({startLineNumber:a.lineNumber,startColumn:s,endLineNumber:a.lineNumber,endColumn:l})!==i.completion.insertText};ut.once(this.model.onDidTrigger)(i=>{let a=[];ut.any(this.model.onDidTrigger,this.model.onDidCancel)(()=>{St(a),r()},void 0,a),this.model.onDidSuggest(({completionModel:s})=>{if(St(a),s.items.length===0){r();return}let l=this._memoryService.select(this.editor.getModel(),this.editor.getPosition(),s.items),d=s.items[l];if(!n(d)){r();return}this.editor.pushUndoStop(),this._insertSuggestion({index:l,item:d,model:s},7)},void 0,a)}),this.model.trigger({auto:!1,shy:!0}),this.editor.revealPosition(t,0),this.editor.focus()}acceptSelectedSuggestion(e,t){let r=this.widget.value.getFocusedItem(),n=0;e&&(n|=4),t&&(n|=8),this._insertSuggestion(r,n)}acceptNextSuggestion(){this._alternatives.value.next()}acceptPrevSuggestion(){this._alternatives.value.prev()}cancelSuggestWidget(){this.model.cancel(),this.model.clear(),this.widget.value.hideWidget()}selectNextSuggestion(){this.widget.value.selectNext()}selectNextPageSuggestion(){this.widget.value.selectNextPage()}selectLastSuggestion(){this.widget.value.selectLast()}selectPrevSuggestion(){this.widget.value.selectPrevious()}selectPrevPageSuggestion(){this.widget.value.selectPreviousPage()}selectFirstSuggestion(){this.widget.value.selectFirst()}toggleSuggestionDetails(){this.widget.value.toggleDetails()}toggleExplainMode(){this.widget.value.toggleExplainMode()}toggleSuggestionFocus(){this.widget.value.toggleDetailsFocus()}resetWidgetSize(){this.widget.value.resetPersistedSize()}forceRenderingAbove(){this.widget.value.forceRenderingAbove()}stopForceRenderingAbove(){!this.widget.isInitialized||this.widget.value.stopForceRenderingAbove()}registerSelector(e){return this._selectors.register(e)}};Zr.ID="editor.contrib.suggestController";Zr=KI([rl(1,m_),rl(2,ct),rl(3,re),rl(4,le),rl(5,pa),rl(6,Yn)],Zr);var $E=class{constructor(e){this.prioritySelector=e,this._items=new Array}register(e){if(this._items.indexOf(e)!==-1)throw new Error("Value is already registered");return this._items.push(e),this._items.sort((t,r)=>this.prioritySelector(r)-this.prioritySelector(t)),{dispose:()=>{let t=this._items.indexOf(e);t>=0&&this._items.splice(t,1)}}}get itemsOrderedByPriorityDesc(){return this._items}},nl=class extends M{constructor(){super({id:nl.id,label:p("suggest.trigger.label","Trigger Suggest"),alias:"Trigger Suggest",precondition:G.and(v.writable,v.hasCompletionItemProvider),kbOpts:{kbExpr:v.textInputFocus,primary:2058,secondary:[2087],mac:{primary:266,secondary:[521,2087]},weight:100}})}run(e,t,r){let n=Zr.get(t);if(!n)return;let i;r&&typeof r=="object"&&r.auto===!0&&(i=!0),n.triggerSuggest(void 0,i)}};nl.id="editor.action.triggerSuggest";Q(Zr.ID,Zr);D(nl);var en=100+90,wr=dt.bindToContribution(Zr.get);K(new wr({id:"acceptSelectedSuggestion",precondition:Ee.Visible,handler(o){o.acceptSelectedSuggestion(!0,!1)}}));$t.registerKeybindingRule({id:"acceptSelectedSuggestion",when:G.and(Ee.Visible,v.textInputFocus),primary:2,weight:en});$t.registerKeybindingRule({id:"acceptSelectedSuggestion",when:G.and(Ee.Visible,v.textInputFocus,Ee.AcceptSuggestionsOnEnter,Ee.MakesTextEdit),primary:3,weight:en});Gr.appendMenuItem(oi,{command:{id:"acceptSelectedSuggestion",title:p("accept.insert","Insert")},group:"left",order:1,when:Ee.HasInsertAndReplaceRange.toNegated()});Gr.appendMenuItem(oi,{command:{id:"acceptSelectedSuggestion",title:p("accept.insert","Insert")},group:"left",order:1,when:G.and(Ee.HasInsertAndReplaceRange,Ee.InsertMode.isEqualTo("insert"))});Gr.appendMenuItem(oi,{command:{id:"acceptSelectedSuggestion",title:p("accept.replace","Replace")},group:"left",order:1,when:G.and(Ee.HasInsertAndReplaceRange,Ee.InsertMode.isEqualTo("replace"))});K(new wr({id:"acceptAlternativeSelectedSuggestion",precondition:G.and(Ee.Visible,v.textInputFocus),kbOpts:{weight:en,kbExpr:v.textInputFocus,primary:1027,secondary:[1026]},handler(o){o.acceptSelectedSuggestion(!1,!0)},menuOpts:[{menuId:oi,group:"left",order:2,when:G.and(Ee.HasInsertAndReplaceRange,Ee.InsertMode.isEqualTo("insert")),title:p("accept.replace","Replace")},{menuId:oi,group:"left",order:2,when:G.and(Ee.HasInsertAndReplaceRange,Ee.InsertMode.isEqualTo("replace")),title:p("accept.insert","Insert")}]}));Ie.registerCommandAlias("acceptSelectedSuggestionOnEnter","acceptSelectedSuggestion");K(new wr({id:"hideSuggestWidget",precondition:Ee.Visible,handler:o=>o.cancelSuggestWidget(),kbOpts:{weight:en,kbExpr:v.textInputFocus,primary:9,secondary:[1033]}}));K(new wr({id:"selectNextSuggestion",precondition:G.and(Ee.Visible,Ee.MultipleSuggestions),handler:o=>o.selectNextSuggestion(),kbOpts:{weight:en,kbExpr:v.textInputFocus,primary:18,secondary:[2066],mac:{primary:18,secondary:[2066,300]}}}));K(new wr({id:"selectNextPageSuggestion",precondition:G.and(Ee.Visible,Ee.MultipleSuggestions),handler:o=>o.selectNextPageSuggestion(),kbOpts:{weight:en,kbExpr:v.textInputFocus,primary:12,secondary:[2060]}}));K(new wr({id:"selectLastSuggestion",precondition:G.and(Ee.Visible,Ee.MultipleSuggestions),handler:o=>o.selectLastSuggestion()}));K(new wr({id:"selectPrevSuggestion",precondition:G.and(Ee.Visible,Ee.MultipleSuggestions),handler:o=>o.selectPrevSuggestion(),kbOpts:{weight:en,kbExpr:v.textInputFocus,primary:16,secondary:[2064],mac:{primary:16,secondary:[2064,302]}}}));K(new wr({id:"selectPrevPageSuggestion",precondition:G.and(Ee.Visible,Ee.MultipleSuggestions),handler:o=>o.selectPrevPageSuggestion(),kbOpts:{weight:en,kbExpr:v.textInputFocus,primary:11,secondary:[2059]}}));K(new wr({id:"selectFirstSuggestion",precondition:G.and(Ee.Visible,Ee.MultipleSuggestions),handler:o=>o.selectFirstSuggestion()}));K(new wr({id:"toggleSuggestionDetails",precondition:Ee.Visible,handler:o=>o.toggleSuggestionDetails(),kbOpts:{weight:en,kbExpr:v.textInputFocus,primary:2058,secondary:[2087],mac:{primary:266,secondary:[2087]}},menuOpts:[{menuId:oi,group:"right",order:1,when:G.and(Ee.DetailsVisible,Ee.CanResolve),title:p("detail.more","show less")},{menuId:oi,group:"right",order:1,when:G.and(Ee.DetailsVisible.toNegated(),Ee.CanResolve),title:p("detail.less","show more")}]}));K(new wr({id:"toggleExplainMode",precondition:Ee.Visible,handler:o=>o.toggleExplainMode(),kbOpts:{weight:100,primary:2133}}));K(new wr({id:"toggleSuggestionFocus",precondition:Ee.Visible,handler:o=>o.toggleSuggestionFocus(),kbOpts:{weight:en,kbExpr:v.textInputFocus,primary:2570,mac:{primary:778}}}));K(new wr({id:"insertBestCompletion",precondition:G.and(v.textInputFocus,G.equals("config.editor.tabCompletion","on"),Qs.AtEnd,Ee.Visible.toNegated(),Ia.OtherSuggestions.toNegated(),Lt.InSnippetMode.toNegated()),handler:(o,e)=>{o.triggerSuggestAndAcceptBest(fu(e)?Object.assign({fallback:"tab"},e):{fallback:"tab"})},kbOpts:{weight:en,primary:2}}));K(new wr({id:"insertNextSuggestion",precondition:G.and(v.textInputFocus,G.equals("config.editor.tabCompletion","on"),Ia.OtherSuggestions,Ee.Visible.toNegated(),Lt.InSnippetMode.toNegated()),handler:o=>o.acceptNextSuggestion(),kbOpts:{weight:en,kbExpr:v.textInputFocus,primary:2}}));K(new wr({id:"insertPrevSuggestion",precondition:G.and(v.textInputFocus,G.equals("config.editor.tabCompletion","on"),Ia.OtherSuggestions,Ee.Visible.toNegated(),Lt.InSnippetMode.toNegated()),handler:o=>o.acceptPrevSuggestion(),kbOpts:{weight:en,kbExpr:v.textInputFocus,primary:1026}}));D(class extends M{constructor(){super({id:"editor.action.resetSuggestSize",label:p("suggest.reset.label","Reset Suggest Widget Size"),alias:"Reset Suggest Widget Size",precondition:void 0})}run(o,e){var t;(t=Zr.get(e))===null||t===void 0||t.resetWidgetSize()}});var T_=class extends F{constructor(e,t){super();this.editor=e,this.suggestControllerPreselector=t,this.isSuggestWidgetVisible=!1,this.isShiftKeyPressed=!1,this._isActive=!1,this._currentSuggestItemInfo=void 0,this.onDidChangeEmitter=new j,this.onDidChange=this.onDidChangeEmitter.event,this.setInactiveDelayed=this._register(new Ke(()=>{this.isSuggestWidgetVisible||this._isActive&&(this._isActive=!1,this.onDidChangeEmitter.fire())},100)),this._register(e.onKeyDown(n=>{n.shiftKey&&!this.isShiftKeyPressed&&(this.isShiftKeyPressed=!0,this.update(this._isActive))})),this._register(e.onKeyUp(n=>{n.shiftKey&&this.isShiftKeyPressed&&(this.isShiftKeyPressed=!1,this.update(this._isActive))}));let r=Zr.get(this.editor);if(r){this._register(r.registerSelector({priority:100,select:(a,s,l)=>{let d=this.editor.getModel(),c=Xs(d,this.suggestControllerPreselector());if(!c)return-1;let u=z.lift(s),f=l.map((g,b)=>{let T=QE(r,u,g,this.isShiftKeyPressed),x=Xs(d,T==null?void 0:T.normalizedInlineCompletion);if(!x)return;let R=JI(c.range,x.range)&&c.text.startsWith(x.text);return{index:b,valid:R,prefixLength:x.text.length,suggestItem:g}}).filter(g=>g&&g.valid),m=uv(f,cv(g=>g.prefixLength,dv));return m?m.index:-1}}));let n=!1,i=()=>{n||(n=!0,this._register(r.widget.value.onDidShow(()=>{this.isSuggestWidgetVisible=!0,this.update(!0)})),this._register(r.widget.value.onDidHide(()=>{this.isSuggestWidgetVisible=!1,this.setInactiveDelayed.schedule(),this.update(this._isActive)})),this._register(r.widget.value.onDidFocus(()=>{this.isSuggestWidgetVisible=!0,this.update(!0)})))};this._register(ut.once(r.model.onDidTrigger)(a=>{i()}))}this.update(this._isActive)}get state(){if(!!this._isActive)return{selectedItem:this._currentSuggestItemInfo}}update(e){let t=this.getSuggestItemInfo(),r=!1;XI(this._currentSuggestItemInfo,t)||(this._currentSuggestItemInfo=t,r=!0),this._isActive!==e&&(this._isActive=e,r=!0),r&&this.onDidChangeEmitter.fire()}getSuggestItemInfo(){let e=Zr.get(this.editor);if(!e||!this.isSuggestWidgetVisible)return;let t=e.widget.value.getFocusedItem();if(!!t)return QE(e,this.editor.getPosition(),t.item,this.isShiftKeyPressed)}stopForceRenderingAbove(){let e=Zr.get(this.editor);e&&e.stopForceRenderingAbove()}forceRenderingAbove(){let e=Zr.get(this.editor);e&&e.forceRenderingAbove()}};function JI(o,e){return e.startLineNumber===o.startLineNumber&&e.startColumn===o.startColumn&&(e.endLineNumber<o.endLineNumber||e.endLineNumber===o.endLineNumber&&e.endColumn<=o.endColumn)}function XI(o,e){return o===e?!0:!o||!e?!1:o.completionItemKind===e.completionItemKind&&o.isSnippetText===e.isSnippetText&&CE(o.normalizedInlineCompletion,e.normalizedInlineCompletion)}function QE(o,e,t,r){if(Array.isArray(t.completion.additionalTextEdits)&&t.completion.additionalTextEdits.length>0)return{completionItemKind:t.completion.kind,isSnippetText:!1,normalizedInlineCompletion:{range:y.fromPositions(e,e),text:""}};let{insertText:n}=t.completion,i=!1;if(t.completion.insertTextRules&4){let s=new Hi().parse(n),l=o.editor.getModel();if(s.children.length>100)return;Qr.adjustWhitespace(l,e,s,!0,!0),n=s.toString(),i=!0}let a=o.getOverwriteInfo(t,r);return{isSnippetText:i,completionItemKind:t.completion.kind,normalizedInlineCompletion:{text:n,range:y.fromPositions(e.delta(0,-a.overwriteBefore),e.delta(0,Math.max(a.overwriteAfter,0)))}}}var ZE=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},x_=class extends Zc{constructor(e,t){super(e);this.cache=t,this.suggestionInlineCompletionSource=this._register(new T_(this.editor,()=>{var r,n;return(n=(r=this.cache.value)===null||r===void 0?void 0:r.completions[0])===null||n===void 0?void 0:n.toLiveInlineCompletion()})),this.updateOperation=this._register(new et),this.updateCacheSoon=this._register(new Ke(()=>this.updateCache(),50)),this.minReservedLineCount=0,this._register(this.suggestionInlineCompletionSource.onDidChange(()=>{this.updateCacheSoon.schedule(),this.suggestionInlineCompletionSource.state||(this.minReservedLineCount=0);let n=this.ghostText;n&&(this.minReservedLineCount=Math.max(this.minReservedLineCount,YI(n.parts.map(i=>i.lines.length-1)))),this.minReservedLineCount>=1?this.suggestionInlineCompletionSource.forceRenderingAbove():this.suggestionInlineCompletionSource.stopForceRenderingAbove(),this.onDidChangeEmitter.fire()})),this._register(this.cache.onDidChange(()=>{this.onDidChangeEmitter.fire()})),this._register(this.editor.onDidChangeCursorPosition(r=>{this.minReservedLineCount=0,this.updateCacheSoon.schedule(),this.onDidChangeEmitter.fire()})),this._register(Ve(()=>this.suggestionInlineCompletionSource.stopForceRenderingAbove()))}get isActive(){return this.suggestionInlineCompletionSource.state!==void 0}isSuggestionPreviewEnabled(){return this.editor.getOption(106).preview}updateCache(){return ZE(this,void 0,void 0,function*(){let e=this.suggestionInlineCompletionSource.state;if(!e||!e.selectedItem)return;let t={text:e.selectedItem.normalizedInlineCompletion.text,range:e.selectedItem.normalizedInlineCompletion.range,isSnippetText:e.selectedItem.isSnippetText,completionKind:e.selectedItem.completionItemKind},r=this.editor.getPosition(),n=Ge(a=>ZE(this,void 0,void 0,function*(){let s;try{s=yield Qg(r,this.editor.getModel(),{triggerKind:Pr.Automatic,selectedSuggestionInfo:t},a)}catch(l){ce(l);return}a.isCancellationRequested||(this.cache.setValue(this.editor,s,Pr.Automatic),this.onDidChangeEmitter.fire())})),i=new hf(n,Pr.Automatic);this.updateOperation.value=i,yield n,this.updateOperation.value===i&&this.updateOperation.clear()})}get ghostText(){var e,t,r;let n=this.isSuggestionPreviewEnabled(),i=Xs(this.editor.getModel(),(t=(e=this.cache.value)===null||e===void 0?void 0:e.completions[0])===null||t===void 0?void 0:t.toLiveInlineCompletion()),a=this.suggestionInlineCompletionSource.state,s=Xs(this.editor.getModel(),(r=a==null?void 0:a.selectedItem)===null||r===void 0?void 0:r.normalizedInlineCompletion),l=i&&s&&i.text.startsWith(s.text)&&i.range.equalsRange(s.range);if(!n&&!l)return;let d=l?i:s||i,c=l?d.text.length-s.text.length:0;return this.toGhostText(d,c)}toGhostText(e,t){let r=this.editor.getOptions().get(106).previewMode;return e?ff(e,this.editor.getModel(),r,this.editor.getPosition(),t)||new Qc(e.range.endLineNumber,[],this.minReservedLineCount):void 0}};function YI(o){return o.reduce((e,t)=>e+t,0)}function eT(o,e){return{object:o,dispose:()=>e==null?void 0:e.dispose()}}xt();var $I=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},tT=function(o,e){return function(t,r){e(t,r,o)}},QI=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},rT=class extends F{constructor(){super(...arguments);this.onDidChangeEmitter=new j,this.onDidChange=this.onDidChangeEmitter.event,this.hasCachedGhostText=!1,this.currentModelRef=this._register(new et)}get targetModel(){var e;return(e=this.currentModelRef.value)===null||e===void 0?void 0:e.object}setTargetModel(e){var t;((t=this.currentModelRef.value)===null||t===void 0?void 0:t.object)!==e&&(this.currentModelRef.clear(),this.currentModelRef.value=e?eT(e,e.onDidChange(()=>{this.hasCachedGhostText=!1,this.onDidChangeEmitter.fire()})):void 0,this.hasCachedGhostText=!1,this.onDidChangeEmitter.fire())}get ghostText(){var e,t;return this.hasCachedGhostText||(this.cachedGhostText=(t=(e=this.currentModelRef.value)===null||e===void 0?void 0:e.object)===null||t===void 0?void 0:t.ghostText,this.hasCachedGhostText=!0),this.cachedGhostText}setExpanded(e){var t;(t=this.targetModel)===null||t===void 0||t.setExpanded(e)}get minReservedLineCount(){return this.targetModel?this.targetModel.minReservedLineCount:0}},If=class extends rT{constructor(e,t,r){super();this.editor=e,this.commandService=t,this.languageConfigurationService=r,this.sharedCache=this._register(new nT),this.suggestWidgetAdapterModel=this._register(new x_(this.editor,this.sharedCache)),this.inlineCompletionsModel=this._register(new mf(this.editor,this.sharedCache,this.commandService,this.languageConfigurationService)),this._register(this.suggestWidgetAdapterModel.onDidChange(()=>{this.updateModel()})),this.updateModel()}get activeInlineCompletionsModel(){if(this.targetModel===this.inlineCompletionsModel)return this.inlineCompletionsModel}updateModel(){this.setTargetModel(this.suggestWidgetAdapterModel.isActive?this.suggestWidgetAdapterModel:this.inlineCompletionsModel),this.inlineCompletionsModel.setActive(this.targetModel===this.inlineCompletionsModel)}shouldShowHoverAt(e){var t;let r=(t=this.activeInlineCompletionsModel)===null||t===void 0?void 0:t.ghostText;return r?r.parts.some(n=>e.containsPosition(new z(r.lineNumber,n.column))):!1}triggerInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.trigger(Pr.Explicit)}commitInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.commitCurrentSuggestion()}hideInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.hide()}showNextInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.showNext()}showPreviousInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.showPrevious()}hasMultipleInlineCompletions(){var e;return QI(this,void 0,void 0,function*(){let t=yield(e=this.activeInlineCompletionsModel)===null||e===void 0?void 0:e.hasMultipleInlineCompletions();return t!==void 0?t:!1})}};If=$I([tT(1,ct),tT(2,Nt)],If);var nT=class extends F{constructor(){super(...arguments);this.onDidChangeEmitter=new j,this.onDidChange=this.onDidChangeEmitter.event,this.cache=this._register(new et)}get value(){return this.cache.value}setValue(e,t,r){this.cache.value=new $g(e,t,()=>this.onDidChangeEmitter.fire(),r)}clearAndLeak(){return this.cache.clearAndLeak()}clear(){this.cache.clear()}};Pe();W();Ye();QL();tt();ee();qL();an();ep();He();Oe();var ZI=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},iT=function(o,e){return function(t,r){e(t,r,o)}},C_,aT=(C_=window.trustedTypes)===null||C_===void 0?void 0:C_.createPolicy("editorGhostText",{createHTML:o=>o}),kf=class extends F{constructor(e,t,r,n){super();this.editor=e,this.model=t,this.instantiationService=r,this.languageService=n,this.disposed=!1,this.partsWidget=this._register(this.instantiationService.createInstance(oT,this.editor)),this.additionalLinesWidget=this._register(new sT(this.editor,this.languageService.languageIdCodec)),this.viewMoreContentWidget=void 0,this._register(this.editor.onDidChangeConfiguration(i=>{(i.hasChanged(29)||i.hasChanged(105)||i.hasChanged(88)||i.hasChanged(83)||i.hasChanged(45)||i.hasChanged(44)||i.hasChanged(59))&&this.update()})),this._register(Ve(()=>{var i;this.disposed=!0,this.update(),(i=this.viewMoreContentWidget)===null||i===void 0||i.dispose(),this.viewMoreContentWidget=void 0})),this._register(t.onDidChange(()=>{this.update()})),this.update()}shouldShowHoverAtViewZone(e){return this.additionalLinesWidget.viewZoneId===e}update(){var e;let t=this.model.ghostText;if(!this.editor.hasModel()||!t||this.disposed){this.partsWidget.clear(),this.additionalLinesWidget.clear();return}let r=new Array,n=new Array;function i(d,c){if(n.length>0){let u=n[n.length-1];c&&u.decorations.push(new Hm(u.content.length+1,u.content.length+1+d[0].length,c,0)),u.content+=d[0],d=d.slice(1)}for(let u of d)n.push({content:u,decorations:c?[new Hm(1,u.length+1,c,0)]:[]})}let a=this.editor.getModel().getLineContent(t.lineNumber);this.editor.getModel().getLineTokens(t.lineNumber);let s,l=0;for(let d of t.parts){let c=d.lines;s===void 0?(r.push({column:d.column,text:c[0],preview:d.preview}),c=c.slice(1)):i([a.substring(l,d.column-1)],void 0),c.length>0&&(i(c,"ghost-text"),s===void 0&&d.column<=a.length&&(s=d.column)),l=d.column-1}s!==void 0&&i([a.substring(l)],void 0),this.partsWidget.setParts(t.lineNumber,r,s!==void 0?{column:s,length:a.length+1-s}:void 0),this.additionalLinesWidget.updateLines(t.lineNumber,n,t.additionalReservedLineCount),t.parts.some(d=>d.lines.length<0)?this.viewMoreContentWidget=this.renderViewMoreLines(new z(t.lineNumber,this.editor.getModel().getLineMaxColumn(t.lineNumber)),"",0):((e=this.viewMoreContentWidget)===null||e===void 0||e.dispose(),this.viewMoreContentWidget=void 0)}renderViewMoreLines(e,t,r){let n=this.editor.getOption(44),i=document.createElement("div");i.className="suggest-preview-additional-widget",Jl(i,n);let a=document.createElement("span");a.className="content-spacer",a.append(t),i.append(a);let s=document.createElement("span");s.className="content-newline suggest-preview-text",s.append("\u23CE  "),i.append(s);let l=new P,d=document.createElement("div");return d.className="button suggest-preview-text",d.append(`+${r} lines\u2026`),l.add(Fr(d,"mousedown",c=>{var u;(u=this.model)===null||u===void 0||u.setExpanded(!0),c.preventDefault(),this.editor.focus()})),i.append(d),new lT(this.editor,e,i,l)}};kf=ZI([iT(2,le),iT(3,gt)],kf);var oT=class{constructor(e){this.editor=e,this.decorationIds=[],this.disposableStore=new P}dispose(){this.clear(),this.disposableStore.dispose()}clear(){this.editor.deltaDecorations(this.decorationIds,[]),this.disposableStore.clear()}setParts(e,t,r){if(this.disposableStore.clear(),!this.editor.getModel())return;let i=new Array;r&&i.push({range:y.fromPositions(new z(e,r.column),new z(e,r.column+r.length)),options:{inlineClassName:"ghost-text-hidden",description:"ghost-text-hidden"}}),this.decorationIds=this.editor.deltaDecorations(this.decorationIds,t.map(a=>({range:y.fromPositions(new z(e,a.column)),options:{description:"ghost-text",after:{content:a.text,inlineClassName:a.preview?"ghost-text-decoration-preview":"ghost-text-decoration"},showIfCollapsed:!0}})).concat(i))}},sT=class{constructor(e,t){this.editor=e,this.languageIdCodec=t,this._viewZoneId=void 0}get viewZoneId(){return this._viewZoneId}dispose(){this.clear()}clear(){this.editor.changeViewZones(e=>{this._viewZoneId&&(e.removeZone(this._viewZoneId),this._viewZoneId=void 0)})}updateLines(e,t,r){let n=this.editor.getModel();if(!n)return;let{tabSize:i}=n.getOptions();this.editor.changeViewZones(a=>{this._viewZoneId&&(a.removeZone(this._viewZoneId),this._viewZoneId=void 0);let s=Math.max(t.length,r);if(s>0){let l=document.createElement("div");ek(l,i,t,this.editor.getOptions(),this.languageIdCodec),this._viewZoneId=a.addZone({afterLineNumber:e,heightInLines:s,domNode:l,afterColumnAffinity:1})}})}};function ek(o,e,t,r,n){let i=r.get(29),a=r.get(105),s="none",l=r.get(83),d=r.get(45),c=r.get(44),u=r.get(59),f=Yv(1e4);f.appendASCIIString('<div class="suggest-preview-text">');for(let b=0,T=t.length;b<T;b++){let x=t[b],R=x.content;f.appendASCIIString('<div class="view-line'),f.appendASCIIString('" style="top:'),f.appendASCIIString(String(b*u)),f.appendASCIIString('px;width:1000000px;">');let I=Nv(R),H=kv(R),U=ib.createEmpty(R,n);ob(new ab(c.isMonospace&&!i,c.canUseHalfwidthRightwardsArrow,R,!1,I,H,0,U,x.decorations,e,0,c.spaceWidth,c.middotWidth,c.wsmiddotWidth,a,s,l,d!==hv.OFF,null),f),f.appendASCIIString("</div>")}f.appendASCIIString("</div>"),Jl(o,c);let m=f.build(),g=aT?aT.createHTML(m):m;o.innerHTML=g}var lT=class extends F{constructor(e,t,r,n){super();this.editor=e,this.position=t,this.domNode=r,this.allowEditorOverflow=!1,this.suppressMouseDown=!1,this._register(n),this._register(Ve(()=>{this.editor.removeContentWidget(this)})),this.editor.addContentWidget(this)}getId(){return"editor.widget.viewMoreLinesWidget"}getDomNode(){return this.domNode}getPosition(){return{position:this.position,preference:[0]}}};ke((o,e)=>{let t=o.getColor(g1);t&&(e.addRule(`.monaco-editor .ghost-text-decoration { color: ${t.toString()} !important; }`),e.addRule(`.monaco-editor .ghost-text-decoration-preview { color: ${t.toString()} !important; }`),e.addRule(`.monaco-editor .suggest-preview-text .ghost-text { color: ${t.toString()} !important; }`));let r=o.getColor(_1);r&&(e.addRule(`.monaco-editor .ghost-text-decoration { background-color: ${r.toString()}; }`),e.addRule(`.monaco-editor .ghost-text-decoration-preview { background-color: ${r.toString()}; }`),e.addRule(`.monaco-editor .suggest-preview-text .ghost-text { background-color: ${r.toString()}; }`));let n=o.getColor(h1);n&&(e.addRule(`.monaco-editor .suggest-preview-text .ghost-text { border: 1px solid ${n}; }`),e.addRule(`.monaco-editor .ghost-text-decoration { border: 1px solid ${n}; }`),e.addRule(`.monaco-editor .ghost-text-decoration-preview { border: 1px solid ${n}; }`))});Z();Le();He();Zl();var cT=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},L_=function(o,e){return function(t,r){e(t,r,o)}},Nf=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},Ct=class dT extends F{constructor(e,t){super();this.editor=e,this.instantiationService=t,this.triggeredExplicitly=!1,this.activeController=this._register(new et),this._register(this.editor.onDidChangeModel(()=>{this.updateModelController()})),this._register(this.editor.onDidChangeConfiguration(r=>{r.hasChanged(106)&&this.updateModelController(),r.hasChanged(55)&&this.updateModelController()})),this.updateModelController()}static get(e){return e.getContribution(dT.ID)}get activeModel(){var e;return(e=this.activeController.value)===null||e===void 0?void 0:e.model}updateModelController(){let e=this.editor.getOption(106),t=this.editor.getOption(55);this.activeController.value=void 0,this.activeController.value=this.editor.hasModel()&&(e.preview||t.enabled||this.triggeredExplicitly)?this.instantiationService.createInstance(D_,this.editor):void 0}shouldShowHoverAt(e){var t;return((t=this.activeModel)===null||t===void 0?void 0:t.shouldShowHoverAt(e))||!1}shouldShowHoverAtViewZone(e){var t,r;return((r=(t=this.activeController.value)===null||t===void 0?void 0:t.widget)===null||r===void 0?void 0:r.shouldShowHoverAtViewZone(e))||!1}trigger(){var e;this.triggeredExplicitly=!0,this.activeController.value||this.updateModelController(),(e=this.activeModel)===null||e===void 0||e.triggerInlineCompletion()}commit(){var e;(e=this.activeModel)===null||e===void 0||e.commitInlineCompletion()}hide(){var e;(e=this.activeModel)===null||e===void 0||e.hideInlineCompletion()}showNextInlineCompletion(){var e;(e=this.activeModel)===null||e===void 0||e.showNextInlineCompletion()}showPreviousInlineCompletion(){var e;(e=this.activeModel)===null||e===void 0||e.showPreviousInlineCompletion()}hasMultipleInlineCompletions(){var e;return Nf(this,void 0,void 0,function*(){let t=yield(e=this.activeModel)===null||e===void 0?void 0:e.hasMultipleInlineCompletions();return t!==void 0?t:!1})}};Ct.inlineSuggestionVisible=new fe("inlineSuggestionVisible",!1,p("inlineSuggestionVisible","Whether an inline suggestion is visible"));Ct.inlineSuggestionHasIndentation=new fe("inlineSuggestionHasIndentation",!1,p("inlineSuggestionHasIndentation","Whether the inline suggestion starts with whitespace"));Ct.inlineSuggestionHasIndentationLessThanTabSize=new fe("inlineSuggestionHasIndentationLessThanTabSize",!0,p("inlineSuggestionHasIndentationLessThanTabSize","Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab"));Ct.ID="editor.contrib.ghostTextController";Ct=cT([L_(1,le)],Ct);var uT=class{constructor(e){this.contextKeyService=e,this.inlineCompletionVisible=Ct.inlineSuggestionVisible.bindTo(this.contextKeyService),this.inlineCompletionSuggestsIndentation=Ct.inlineSuggestionHasIndentation.bindTo(this.contextKeyService),this.inlineCompletionSuggestsIndentationLessThanTabSize=Ct.inlineSuggestionHasIndentationLessThanTabSize.bindTo(this.contextKeyService)}},D_=class extends F{constructor(e,t,r){super();this.editor=e,this.instantiationService=t,this.contextKeyService=r,this.contextKeys=new uT(this.contextKeyService),this.model=this._register(this.instantiationService.createInstance(If,this.editor)),this.widget=this._register(this.instantiationService.createInstance(kf,this.editor,this.model)),this._register(Ve(()=>{this.contextKeys.inlineCompletionVisible.set(!1),this.contextKeys.inlineCompletionSuggestsIndentation.set(!1),this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(!0)})),this._register(this.model.onDidChange(()=>{this.updateContextKeys()})),this.updateContextKeys()}updateContextKeys(){var e;this.contextKeys.inlineCompletionVisible.set(((e=this.model.activeInlineCompletionsModel)===null||e===void 0?void 0:e.ghostText)!==void 0);let t=!1,r=!0,n=this.model.inlineCompletionsModel.ghostText;if(!!this.model.activeInlineCompletionsModel&&n&&n.parts.length>0){let{column:i,lines:a}=n.parts[0],s=a[0],l=this.editor.getModel().getLineIndentColumn(n.lineNumber);if(i<=l){let c=Ul(s);c===-1&&(c=s.length-1),t=c>0;let u=this.editor.getModel().getOptions().tabSize;r=p1.visibleColumnFromColumn(s,c+1,u)<u}}this.contextKeys.inlineCompletionSuggestsIndentation.set(t),this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(r)}};D_=cT([L_(1,le),L_(2,re)],D_);var pT=dt.bindToContribution(Ct.get),il=new pT({id:uf,precondition:Ct.inlineSuggestionVisible,handler(o){o.commit(),o.editor.focus()}});K(il);$t.registerKeybindingRule({primary:2,weight:200,id:il.id,when:G.and(il.precondition,v.tabMovesFocus.toNegated(),Ct.inlineSuggestionHasIndentationLessThanTabSize)});K(new pT({id:"editor.action.inlineSuggest.hide",precondition:Ct.inlineSuggestionVisible,kbOpts:{weight:100,primary:9},handler(o){o.hide()}}));var ka=class extends M{constructor(){super({id:ka.ID,label:p("action.inlineSuggest.showNext","Show Next Inline Suggestion"),alias:"Show Next Inline Suggestion",precondition:G.and(v.writable,Ct.inlineSuggestionVisible),kbOpts:{weight:100,primary:601}})}run(e,t){return Nf(this,void 0,void 0,function*(){let r=Ct.get(t);r&&(r.showNextInlineCompletion(),t.focus())})}};ka.ID="editor.action.inlineSuggest.showNext";var Na=class extends M{constructor(){super({id:Na.ID,label:p("action.inlineSuggest.showPrevious","Show Previous Inline Suggestion"),alias:"Show Previous Inline Suggestion",precondition:G.and(v.writable,Ct.inlineSuggestionVisible),kbOpts:{weight:100,primary:599}})}run(e,t){return Nf(this,void 0,void 0,function*(){let r=Ct.get(t);r&&(r.showPreviousInlineCompletion(),t.focus())})}};Na.ID="editor.action.inlineSuggest.showPrevious";var fT=class extends M{constructor(){super({id:"editor.action.inlineSuggest.trigger",label:p("action.inlineSuggest.trigger","Trigger Inline Suggestion"),alias:"Trigger Inline Suggestion",precondition:v.writable})}run(e,t){return Nf(this,void 0,void 0,function*(){let r=Ct.get(t);r&&r.trigger()})}};Q(Ct.ID,Ct);D(fT);D(ka);D(Na);Z();ar();xt();Le();Jr();var tk=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},al=function(o,e){return function(t,r){e(t,r,o)}},mT=class{constructor(e,t,r){this.owner=e,this.range=t,this.controller=r}isValidForHoverAnchor(e){return e.type===1&&this.range.startColumn<=e.range.startColumn&&this.range.endColumn>=e.range.endColumn}hasMultipleSuggestions(){return this.controller.hasMultipleInlineCompletions()}},Rf=class{constructor(e,t,r,n,i,a,s){this._editor=e,this._commandService=t,this._menuService=r,this._contextKeyService=n,this._languageService=i,this._openerService=a,this.accessibilityService=s}suggestHoverAnchor(e){let t=Ct.get(this._editor);if(!t)return null;let r=e.target;if(r.type===8){let n=r.detail;if(t.shouldShowHoverAtViewZone(n.viewZoneId))return new Lo(1e3,this,y.fromPositions(n.positionBefore||n.position,n.positionBefore||n.position))}return r.type===7&&t.shouldShowHoverAt(r.range)?new Lo(1e3,this,r.range):r.type===6&&r.detail.mightBeForeignElement&&t.shouldShowHoverAt(r.range)?new Lo(1e3,this,r.range):null}computeSync(e,t){let r=Ct.get(this._editor);return r&&r.shouldShowHoverAt(e.range)?[new mT(this,e.range,r)]:[]}renderHoverParts(e,t){let r=new P,n=t[0];this.accessibilityService.isScreenReaderOptimized()&&this.renderScreenReaderText(e,n,r);let i=r.add(this._menuService.createMenu(oe.InlineCompletionsActions,this._contextKeyService)),a=e.statusBar.addAction({label:p("showNextInlineSuggestion","Next"),commandId:ka.ID,run:()=>this._commandService.executeCommand(ka.ID)}),s=e.statusBar.addAction({label:p("showPreviousInlineSuggestion","Previous"),commandId:Na.ID,run:()=>this._commandService.executeCommand(Na.ID)});e.statusBar.addAction({label:p("acceptInlineSuggestion","Accept"),commandId:il.id,run:()=>this._commandService.executeCommand(il.id)});let l=[a,s];for(let d of l)d.setEnabled(!1);n.hasMultipleSuggestions().then(d=>{for(let c of l)c.setEnabled(d)});for(let[d,c]of i.getActions())for(let u of c)u instanceof fa&&e.statusBar.addAction({label:u.label,commandId:u.item.id,run:()=>this._commandService.executeCommand(u.item.id)});return r}renderScreenReaderText(e,t,r){var n,i;let a=V,s=a("div.hover-row.markdown-hover"),l=B(s,a("div.hover-contents")),d=r.add(new Dr({editor:this._editor},this._languageService,this._openerService)),c=f=>{r.add(d.onDidRenderAsync(()=>{l.className="hover-contents code-hover-contents",e.onContentsChanged()}));let m=p("inlineSuggestionFollows","Suggestion:"),g=r.add(d.render(new sr().appendText(m).appendCodeblock("text",f)));l.replaceChildren(g.element)},u=(i=(n=t.controller.activeModel)===null||n===void 0?void 0:n.inlineCompletionsModel)===null||i===void 0?void 0:i.ghostText;if(u){let f=this._editor.getModel().getLineContent(u.lineNumber);c(u.renderForScreenReader(f))}e.fragment.appendChild(s)}};Rf=tk([al(1,ct),al(2,Xn),al(3,re),al(4,gt),al(5,yt),al(6,Gu)],Rf);Le();He();qr();we();Sr();W();Ir();Ye();pe();jt();dp();an();Pe();ao();W();He();Pe();Wm();$m();Ne();W();Jr();mt();Oe();var rk=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},nk=function(o,e){return function(t,r){e(t,r,o)}},Pf=class extends F{constructor(e,t,r={},n){var i;super();this._link=t,this._enabled=!0,this.el=B(e,V("a.monaco-link",{tabIndex:(i=t.tabIndex)!==null&&i!==void 0?i:0,href:t.href,title:t.title},t.label)),this.el.setAttribute("role","button");let a=this._register(new co(this.el,"click")),s=this._register(new co(this.el,"keypress")),l=ut.chain(s.event).map(u=>new no(u)).filter(u=>u.keyCode===3).event,d=this._register(new co(this.el,rc.Tap)).event;this._register(Ts.addTarget(this.el));let c=ut.any(a.event,l,d);this._register(c(u=>{!this.enabled||(sn.stop(u,!0),(r==null?void 0:r.opener)?r.opener(this._link.href):n.open(this._link.href,{allowCommands:!0}))})),this.enabled=!0}get enabled(){return this._enabled}set enabled(e){e?(this.el.setAttribute("aria-disabled","false"),this.el.tabIndex=0,this.el.style.pointerEvents="auto",this.el.style.opacity="1",this.el.style.cursor="pointer",this._enabled=!1):(this.el.setAttribute("aria-disabled","true"),this.el.tabIndex=-1,this.el.style.pointerEvents="none",this.el.style.opacity="0.4",this.el.style.cursor="default",this._enabled=!0),this._enabled=e}};Pf=rk([nk(3,yt)],Pf);ke((o,e)=>{let t=o.getColor(ma);t&&e.addRule(`.monaco-link { color: ${t}; }`);let r=o.getColor(ha);r&&e.addRule(`.monaco-link:hover { color: ${r}; }`)});Oe();var hT=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},gT=function(o,e){return function(t,r){e(t,r,o)}},ik=26,Mf=class extends F{constructor(e,t){super();this._editor=e,this.instantiationService=t,this.banner=this._register(this.instantiationService.createInstance(w_))}hide(){this._editor.setBanner(null,0),this.banner.clear()}show(e){this.banner.show(Object.assign(Object.assign({},e),{onClose:()=>{this.hide(),e.onClose&&e.onClose()}})),this._editor.setBanner(this.banner.element,ik)}};Mf=hT([gT(1,le)],Mf);var w_=class extends F{constructor(e){super();this.instantiationService=e,this.markdownRenderer=this.instantiationService.createInstance(Dr,{}),this.element=V("div.editor-banner"),this.element.tabIndex=0}getAriaLabel(e){if(e.ariaLabel)return e.ariaLabel;if(typeof e.message=="string")return e.message}getBannerMessage(e){if(typeof e=="string"){let t=V("span");return t.innerText=e,t}return this.markdownRenderer.render(e).element}clear(){Tr(this.element)}show(e){Tr(this.element);let t=this.getAriaLabel(e);t&&this.element.setAttribute("aria-label",t);let r=B(this.element,V("div.icon-container"));r.setAttribute("aria-hidden","true"),e.icon&&r.appendChild(V(`div${it.asCSSSelector(e.icon)}`));let n=B(this.element,V("div.message-container"));if(n.setAttribute("aria-hidden","true"),n.appendChild(this.getBannerMessage(e.message)),this.messageActionsContainer=B(this.element,V("div.message-actions-container")),e.actions)for(let a of e.actions)this._register(this.instantiationService.createInstance(Pf,this.messageActionsContainer,Object.assign(Object.assign({},a),{tabIndex:-1}),{}));let i=B(this.element,V("div.action-container"));this.actionBar=this._register(new uo(i)),this.actionBar.push(this._register(new Ei("banner.close","Close Banner",it.asClassName(cp),!0,()=>{typeof e.onClose=="function"&&e.onClose()})),{icon:!0,label:!1}),this.actionBar.setFocusable(!1)}};w_=hT([gT(0,le)],w_);Z();wn();He();Jr();var k_=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},ol=function(o,e){return function(t,r){e(t,r,o)}},Kt=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},ak=Rt("extensions-warning-message",q.warning,p("warningIcon","Icon shown with a warning message in the extensions editor.")),sl=class extends F{constructor(e,t,r,n){super();this._editor=e,this._editorWorkerService=t,this._workspaceTrustService=r,this._highlighter=null,this._bannerClosed=!1,this._updateState=i=>{if(i&&i.hasMore){if(this._bannerClosed)return;let a=Math.max(i.ambiguousCharacterCount,i.nonBasicAsciiCharacterCount,i.invisibleCharacterCount),s;if(i.nonBasicAsciiCharacterCount>=a)s={message:p("unicodeHighlighting.thisDocumentHasManyNonBasicAsciiUnicodeCharacters","This document contains many non-basic ASCII unicode characters"),command:new Oo};else if(i.ambiguousCharacterCount>=a)s={message:p("unicodeHighlighting.thisDocumentHasManyAmbiguousUnicodeCharacters","This document contains many ambiguous unicode characters"),command:new Wi};else if(i.invisibleCharacterCount>=a)s={message:p("unicodeHighlighting.thisDocumentHasManyInvisibleUnicodeCharacters","This document contains many invisible unicode characters"),command:new Mo};else throw new Error("Unreachable");this._bannerController.show({id:"unicodeHighlightBanner",message:s.message,icon:ak,actions:[{label:s.command.shortLabel,href:`command:${s.command.id}`}],onClose:()=>{this._bannerClosed=!0}})}else this._bannerController.hide()},this._bannerController=this._register(n.createInstance(Mf,e)),this._register(this._editor.onDidChangeModel(()=>{this._bannerClosed=!1,this._updateHighlighter()})),this._options=e.getOption(113),this._register(r.onDidChangeTrust(i=>{this._updateHighlighter()})),this._register(e.onDidChangeConfiguration(i=>{i.hasChanged(113)&&(this._options=e.getOption(113),this._updateHighlighter())})),this._updateHighlighter()}dispose(){this._highlighter&&(this._highlighter.dispose(),this._highlighter=null),super.dispose()}_updateHighlighter(){if(this._updateState(null),this._highlighter&&(this._highlighter.dispose(),this._highlighter=null),!this._editor.hasModel())return;let e=ok(this._workspaceTrustService.isWorkspaceTrusted(),this._options);if([e.nonBasicASCII,e.ambiguousCharacters,e.invisibleCharacters].every(r=>r===!1))return;let t={nonBasicASCII:e.nonBasicASCII,ambiguousCharacters:e.ambiguousCharacters,invisibleCharacters:e.invisibleCharacters,includeComments:e.includeComments,includeStrings:e.includeStrings,allowedCodePoints:Object.keys(e.allowedCharacters).map(r=>r.codePointAt(0)),allowedLocales:Object.keys(e.allowedLocales).map(r=>r==="_os"?new Intl.NumberFormat().resolvedOptions().locale:r==="_vscode"?av:r)};this._editorWorkerService.canComputeUnicodeHighlights(this._editor.getModel().uri)?this._highlighter=new A_(this._editor,t,this._updateState,this._editorWorkerService):this._highlighter=new yT(this._editor,t,this._updateState)}getDecorationInfo(e){return this._highlighter?this._highlighter.getDecorationInfo(e):null}};sl.ID="editor.contrib.unicodeHighlighter";sl=k_([ol(1,wi),ol(2,U1),ol(3,le)],sl);function ok(o,e){return{nonBasicASCII:e.nonBasicASCII===hu?!o:e.nonBasicASCII,ambiguousCharacters:e.ambiguousCharacters,invisibleCharacters:e.invisibleCharacters,includeComments:e.includeComments===hu?!o:e.includeComments,includeStrings:e.includeStrings===hu?!o:e.includeStrings,allowedCharacters:e.allowedCharacters,allowedLocales:e.allowedLocales}}var A_=class extends F{constructor(e,t,r,n){super();this._editor=e,this._options=t,this._updateState=r,this._editorWorkerService=n,this._model=this._editor.getModel(),this._decorationIds=new Set,this._updateSoon=this._register(new Ke(()=>this._update(),250)),this._register(this._editor.onDidChangeModelContent(()=>{this._updateSoon.schedule()})),this._updateSoon.schedule()}dispose(){this._decorationIds=new Set(this._model.deltaDecorations(Array.from(this._decorationIds),[])),super.dispose()}_update(){if(this._model.isDisposed())return;if(!this._model.mightContainNonBasicASCII()){this._decorationIds=new Set(this._editor.deltaDecorations(Array.from(this._decorationIds),[]));return}let e=this._model.getVersionId();this._editorWorkerService.computedUnicodeHighlights(this._model.uri,this._options).then(t=>{if(this._model.isDisposed()||this._model.getVersionId()!==e)return;this._updateState(t);let r=[];if(!t.hasMore)for(let n of t.ranges)r.push({range:n,options:Po.instance.getDecorationFromOptions(this._options)});this._decorationIds=new Set(this._editor.deltaDecorations(Array.from(this._decorationIds),r))})}getDecorationInfo(e){if(!this._decorationIds.has(e))return null;let t=this._editor.getModel(),r=t.getDecorationRange(e),n={range:r,options:Po.instance.getDecorationFromOptions(this._options),id:e,ownerId:0};if(!ih(t,n))return null;let i=t.getValueInRange(r);return{reason:vT(i,this._options),inComment:ah(t,n),inString:oh(t,n)}}};A_=k_([ol(3,wi)],A_);var yT=class extends F{constructor(e,t,r){super();this._editor=e,this._options=t,this._updateState=r,this._model=this._editor.getModel(),this._decorationIds=new Set,this._updateSoon=this._register(new Ke(()=>this._update(),250)),this._register(this._editor.onDidLayoutChange(()=>{this._updateSoon.schedule()})),this._register(this._editor.onDidScrollChange(()=>{this._updateSoon.schedule()})),this._register(this._editor.onDidChangeHiddenAreas(()=>{this._updateSoon.schedule()})),this._register(this._editor.onDidChangeModelContent(()=>{this._updateSoon.schedule()})),this._updateSoon.schedule()}dispose(){this._decorationIds=new Set(this._model.deltaDecorations(Array.from(this._decorationIds),[])),super.dispose()}_update(){if(this._model.isDisposed())return;if(!this._model.mightContainNonBasicASCII()){this._decorationIds=new Set(this._editor.deltaDecorations(Array.from(this._decorationIds),[]));return}let e=this._editor.getVisibleRanges(),t=[],r={ranges:[],ambiguousCharacterCount:0,invisibleCharacterCount:0,nonBasicAsciiCharacterCount:0,hasMore:!1};for(let n of e){let i=Vm.computeUnicodeHighlights(this._model,this._options,n);for(let a of i.ranges)r.ranges.push(a);r.ambiguousCharacterCount+=r.ambiguousCharacterCount,r.invisibleCharacterCount+=r.invisibleCharacterCount,r.nonBasicAsciiCharacterCount+=r.nonBasicAsciiCharacterCount,r.hasMore=r.hasMore||i.hasMore}if(!r.hasMore)for(let n of r.ranges)t.push({range:n,options:Po.instance.getDecorationFromOptions(this._options)});this._updateState(r),this._decorationIds=new Set(this._editor.deltaDecorations(Array.from(this._decorationIds),t))}getDecorationInfo(e){if(!this._decorationIds.has(e))return null;let t=this._editor.getModel(),r=t.getDecorationRange(e),n=t.getValueInRange(r),i={range:r,options:Po.instance.getDecorationFromOptions(this._options),id:e,ownerId:0};return ih(t,i)?{reason:vT(n,this._options),inComment:ah(t,i),inString:oh(t,i)}:null}},Of=class{constructor(e,t,r){this._editor=e,this._languageService=t,this._openerService=r}computeSync(e,t){if(!this._editor.hasModel()||e.type!==1)return[];let r=this._editor.getModel(),n=this._editor.getContribution(sl.ID);if(!n)return[];let i=[],a=300;for(let s of t){let l=n.getDecorationInfo(s.id);if(!l)continue;let c=r.getValueInRange(s.range).codePointAt(0),u=_T(c),f;switch(l.reason.kind){case 0:f=p("unicodeHighlight.characterIsAmbiguous","The character {0} could be confused with the character {1}, which is more common in source code.",u,_T(l.reason.confusableWith.codePointAt(0)));break;case 1:f=p("unicodeHighlight.characterIsInvisible","The character {0} is invisible.",u);break;case 2:f=p("unicodeHighlight.characterIsNonBasicAscii","The character {0} is not a basic ASCII character.",u);break}let m={codePoint:c,reason:l.reason,inComment:l.inComment,inString:l.inString},g=p("unicodeHighlight.adjustSettings","Adjust settings"),b=[{value:`${f} [${g}](command:${ll.ID}?${encodeURIComponent(JSON.stringify(m))})`,isTrusted:!0}];i.push(new Mn(this,s.range,b,a++))}return i}renderHoverParts(e,t){return Wg(e,t,this._editor,this._languageService,this._openerService)}};Of=k_([ol(1,gt),ol(2,yt)],Of);function I_(o){return`U+${o.toString(16).padStart(4,"0")}`}function _T(o){let e=`\`${I_(o)}\``;return Nm.isInvisibleCharacter(o)||(e+=` "${`${sk(o)}`}"`),e}function sk(o){return o===96?"`` ` ``":"`"+String.fromCodePoint(o)+"`"}function vT(o,e){return Vm.computeUnicodeHighlightReason(o,e)}var Po=class{constructor(){this.map=new Map}getDecorationFromOptions(e){return this.getDecoration(!e.includeComments,!e.includeStrings)}getDecoration(e,t){let r=`${e}${t}`,n=this.map.get(r);return n||(n=Se.createDynamic({description:"unicode-highlight",stickiness:1,className:"unicode-highlight",showIfCollapsed:!0,overviewRuler:null,minimap:null,hideInCommentTokens:e,hideInStringTokens:t}),this.map.set(r,n)),n}};Po.instance=new Po;var bT=class extends M{constructor(){super({id:Wi.ID,label:p("action.unicodeHighlight.disableHighlightingInComments","Disable highlighting of characters in comments"),alias:"Disable highlighting of characters in comments",precondition:void 0});this.shortLabel=p("unicodeHighlight.disableHighlightingInComments.shortLabel","Disable Highlight In Comments")}run(e,t,r){return Kt(this,void 0,void 0,function*(){let n=e==null?void 0:e.get(rt);n&&this.runAction(n)})}runAction(e){return Kt(this,void 0,void 0,function*(){yield e.updateValue(Wn.includeComments,!1,1)})}},ST=class extends M{constructor(){super({id:Wi.ID,label:p("action.unicodeHighlight.disableHighlightingInStrings","Disable highlighting of characters in strings"),alias:"Disable highlighting of characters in strings",precondition:void 0});this.shortLabel=p("unicodeHighlight.disableHighlightingInStrings.shortLabel","Disable Highlight In Strings")}run(e,t,r){return Kt(this,void 0,void 0,function*(){let n=e==null?void 0:e.get(rt);n&&this.runAction(n)})}runAction(e){return Kt(this,void 0,void 0,function*(){yield e.updateValue(Wn.includeStrings,!1,1)})}},Wi=class extends M{constructor(){super({id:Wi.ID,label:p("action.unicodeHighlight.disableHighlightingOfAmbiguousCharacters","Disable highlighting of ambiguous characters"),alias:"Disable highlighting of ambiguous characters",precondition:void 0});this.shortLabel=p("unicodeHighlight.disableHighlightingOfAmbiguousCharacters.shortLabel","Disable Ambiguous Highlight")}run(e,t,r){return Kt(this,void 0,void 0,function*(){let n=e==null?void 0:e.get(rt);n&&this.runAction(n)})}runAction(e){return Kt(this,void 0,void 0,function*(){yield e.updateValue(Wn.ambiguousCharacters,!1,1)})}};Wi.ID="editor.action.unicodeHighlight.disableHighlightingOfAmbiguousCharacters";var Mo=class extends M{constructor(){super({id:Mo.ID,label:p("action.unicodeHighlight.disableHighlightingOfInvisibleCharacters","Disable highlighting of invisible characters"),alias:"Disable highlighting of invisible characters",precondition:void 0});this.shortLabel=p("unicodeHighlight.disableHighlightingOfInvisibleCharacters.shortLabel","Disable Invisible Highlight")}run(e,t,r){return Kt(this,void 0,void 0,function*(){let n=e==null?void 0:e.get(rt);n&&this.runAction(n)})}runAction(e){return Kt(this,void 0,void 0,function*(){yield e.updateValue(Wn.invisibleCharacters,!1,1)})}};Mo.ID="editor.action.unicodeHighlight.disableHighlightingOfInvisibleCharacters";var Oo=class extends M{constructor(){super({id:Oo.ID,label:p("action.unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters","Disable highlighting of non basic ASCII characters"),alias:"Disable highlighting of non basic ASCII characters",precondition:void 0});this.shortLabel=p("unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters.shortLabel","Disable Non ASCII Highlight")}run(e,t,r){return Kt(this,void 0,void 0,function*(){let n=e==null?void 0:e.get(rt);n&&this.runAction(n)})}runAction(e){return Kt(this,void 0,void 0,function*(){yield e.updateValue(Wn.nonBasicASCII,!1,1)})}};Oo.ID="editor.action.unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters";var ll=class extends M{constructor(){super({id:ll.ID,label:p("action.unicodeHighlight.showExcludeOptions","Show Exclude Options"),alias:"Show Exclude Options",precondition:void 0})}run(e,t,r){return Kt(this,void 0,void 0,function*(){let{codePoint:n,reason:i,inString:a,inComment:s}=r,l=String.fromCodePoint(n),d=e.get(Vr),c=e.get(rt);function u(g){return Nm.isInvisibleCharacter(g)?p("unicodeHighlight.excludeInvisibleCharFromBeingHighlighted","Exclude {0} (invisible character) from being highlighted",I_(g)):p("unicodeHighlight.excludeCharFromBeingHighlighted","Exclude {0} from being highlighted",`${I_(g)} "${l}"`)}let f=[];if(i.kind===0)for(let g of i.notAmbiguousInLocales)f.push({label:p("unicodeHighlight.allowCommonCharactersInLanguage",'Allow unicode characters that are more common in the language "{0}".',g),run:()=>Kt(this,void 0,void 0,function*(){ck(c,[g])})});if(f.push({label:u(n),run:()=>lk(c,[n])}),s){let g=new bT;f.push({label:g.label,run:()=>Kt(this,void 0,void 0,function*(){return g.runAction(c)})})}else if(a){let g=new ST;f.push({label:g.label,run:()=>Kt(this,void 0,void 0,function*(){return g.runAction(c)})})}if(i.kind===0){let g=new Wi;f.push({label:g.label,run:()=>Kt(this,void 0,void 0,function*(){return g.runAction(c)})})}else if(i.kind===1){let g=new Mo;f.push({label:g.label,run:()=>Kt(this,void 0,void 0,function*(){return g.runAction(c)})})}else if(i.kind===2){let g=new Oo;f.push({label:g.label,run:()=>Kt(this,void 0,void 0,function*(){return g.runAction(c)})})}else dk(i);let m=yield d.pick(f,{title:p("unicodeHighlight.configureUnicodeHighlightOptions","Configure Unicode Highlight Options")});m&&(yield m.run())})}};ll.ID="editor.action.unicodeHighlight.showExcludeOptions";function lk(o,e){return Kt(this,void 0,void 0,function*(){let t=o.getValue(Wn.allowedCharacters),r;typeof t=="object"&&t?r=t:r={};for(let n of e)r[String.fromCodePoint(n)]=!0;yield o.updateValue(Wn.allowedCharacters,r,1)})}function ck(o,e){var t;return Kt(this,void 0,void 0,function*(){let r=(t=o.inspect(Wn.allowedLocales).user)===null||t===void 0?void 0:t.value,n;typeof r=="object"&&r?n=Object.assign({},r):n={};for(let i of e)n[i]=!0;yield o.updateValue(Wn.allowedLocales,n,1)})}function dk(o){throw new Error(`Unexpected value: ${o}`)}D(Wi);D(Mo);D(Oo);D(ll);Q(sl.ID,sl);we();we();tt();Re();jt();an();Si();we();pt();Ae();W();hs();Jt();Xt();pe();ee();Re();ds();jt();mc();Si();Ae();W();tt();ee();Re();var Ff=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},Gf=class{constructor(e,t){this.range=e,this.direction=t}},Bf=class{constructor(e,t,r){this.hint=e,this.anchor=t,this.provider=r,this._isResolved=!1}with(e){let t=new Bf(this.hint,e.anchor,this.provider);return t._isResolved=this._isResolved,t._currentResolve=this._currentResolve,t}resolve(e){return Ff(this,void 0,void 0,function*(){if(typeof this.provider.resolveInlayHint=="function"){if(this._currentResolve)return yield this._currentResolve,e.isCancellationRequested?void 0:this.resolve(e);this._isResolved||(this._currentResolve=this._doResolve(e).finally(()=>this._currentResolve=void 0)),yield this._currentResolve}})}_doResolve(e){var t,r;return Ff(this,void 0,void 0,function*(){try{let n=yield Promise.resolve(this.provider.resolveInlayHint(this.hint,e));this.hint.tooltip=(t=n==null?void 0:n.tooltip)!==null&&t!==void 0?t:this.hint.tooltip,this.hint.label=(r=n==null?void 0:n.label)!==null&&r!==void 0?r:this.hint.label,this._isResolved=!0}catch(n){ze(n),this._isResolved=!1}})}},Fo=class{constructor(e,t,r){this._disposables=new P,this.ranges=e,this.provider=new Set;let n=[];for(let[i,a]of t){this._disposables.add(i),this.provider.add(a);for(let s of i.hints){let l=r.validatePosition(s.position),d="before",c=Fo._getRangeAtPosition(r,l),u;c.getStartPosition().isBefore(l)?(u=y.fromPositions(c.getStartPosition(),l),d="after"):(u=y.fromPositions(l,c.getEndPosition()),d="before"),n.push(new Bf(s,new Gf(u,d),a))}}this.items=n.sort((i,a)=>z.compare(i.hint.position,a.hint.position))}static create(e,t,r){return Ff(this,void 0,void 0,function*(){let n=[],i=vs.ordered(e).reverse().map(a=>t.map(s=>Ff(this,void 0,void 0,function*(){try{let l=yield a.provideInlayHints(e,s,r);(l==null?void 0:l.hints.length)&&n.push([l,a])}catch(l){ze(l)}})));if(yield Promise.all(i.flat()),r.isCancellationRequested||e.isDisposed())throw new gv;return new Fo(t,n,e)})}dispose(){this._disposables.dispose()}static _getRangeAtPosition(e,t){let r=t.lineNumber,n=e.getWordAtPosition(t);if(n)return new y(r,n.startColumn,r,n.endColumn);e.tokenizeIfCheap(r);let i=e.getLineTokens(r),a=t.column-1,s=i.findTokenIndexAtOffset(a),l=i.getStartOffset(s),d=i.getEndOffset(s);return d-l===1&&(l===a&&s>1?(l=i.getStartOffset(s-1),d=i.getEndOffset(s-1)):d===a&&s<i.getCount()-1&&(l=i.getStartOffset(s+1),d=i.getEndOffset(s+1))),new y(r,l+1,r,d+1)}};Pe();ao();pt();pe();ee();Si();ar();xt();Le();He();var cd=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})};function ET(o,e,t,r){var n;return cd(this,void 0,void 0,function*(){let i=o.get(Wt),a=o.get(Ai),s=o.get(ct),l=o.get(le),d=o.get($e);if(yield r.item.resolve(he.None),!r.part.location)return;let c=r.part.location,u=[],f=new Set(Gr.getMenuItems(oe.EditorContext).map(g=>xb(g)?g.command.id:""));for(let g of Lb.getEditorActions())g instanceof Oi&&f.has(g.id)&&u.push(new Ei(g.id,g.label,void 0,!0,()=>cd(this,void 0,void 0,function*(){let b=yield i.createModelReference(c.uri);try{yield l.invokeFunction(g.run.bind(g),e,new Co(b.object.textEditorModel,y.getStartPosition(c.range)))}finally{b.dispose()}})));if(r.part.command){let{command:g}=r.part;u.push(new Jn),u.push(new Ei(g.id,g.title,void 0,!0,()=>cd(this,void 0,void 0,function*(){var b;try{yield s.executeCommand(g.id,...(b=g.arguments)!==null&&b!==void 0?b:[])}catch(T){d.notify({severity:sp.Error,source:r.item.provider.displayName,message:T})}})))}let m=e.getOption(115);a.showContextMenu({domForShadowRoot:m&&(n=e.getDomNode())!==null&&n!==void 0?n:void 0,getAnchor:()=>{let g=nr(t);return{x:g.left,y:g.top+g.height+8}},getActions:()=>u,onHide:()=>{e.focus()},autoSelectFirstItem:!0})})}function TT(o,e,t,r){return cd(this,void 0,void 0,function*(){let i=yield o.get(Wt).createModelReference(r.uri);yield t.invokeWithinContext(a=>cd(this,void 0,void 0,function*(){let s=e.hasSideBySideModifier,l=a.get(re),d=Gt.inPeekEditor.getValue(l),c=!s&&t.getOption(78)&&!d;return new Da({openToSide:s,openInPeek:c,muteMessage:!0},{alias:"",label:"",id:"",precondition:void 0}).run(a,t,{model:i.object.textEditorModel,position:y.getStartPosition(r.range)})})),i.dispose()})}xt();ro();He();mt();Oe();var uk=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},dd=function(o,e){return function(t,r){e(t,r,o)}},Vf=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},ud=class{constructor(){this._entries=new zn(50)}get(e){let t=ud._key(e);return this._entries.get(t)}set(e,t){let r=ud._key(e);this._entries.set(r,t)}static _key(e){return`${e.uri.toString()}/${e.getVersionId()}`}},xT=Mr("IInlayHintsCache");Or(xT,ud,!0);var pd=class{constructor(e,t){this.item=e,this.index=t}get part(){let e=this.item.hint.label;return typeof e=="string"?{label:e}:e[this.index]}},Ra=class N_{constructor(e,t,r,n,i,a){this._editor=e,this._inlayHintsCache=r,this._commandService=n,this._notificationService=i,this._instaService=a,this._disposables=new P,this._sessionDisposables=new P,this._decorationsMetadata=new Map,this._ruleFactory=new Qu(this._editor),this._debounceInfo=t.for(vs,"InlayHint",{min:25}),this._disposables.add(vs.onDidChange(()=>this._update())),this._disposables.add(e.onDidChangeModel(()=>this._update())),this._disposables.add(e.onDidChangeModelLanguage(()=>this._update())),this._disposables.add(e.onDidChangeConfiguration(s=>{s.hasChanged(127)&&this._update()})),this._update()}static get(e){var t;return(t=e.getContribution(N_.ID))!==null&&t!==void 0?t:void 0}dispose(){this._sessionDisposables.dispose(),this._removeAllDecorations(),this._disposables.dispose()}_update(){if(this._sessionDisposables.clear(),this._removeAllDecorations(),!this._editor.getOption(127).enabled)return;let e=this._editor.getModel();if(!e||!vs.has(e))return;let t=this._inlayHintsCache.get(e);t&&this._updateHintsDecorators([e.getFullModelRange()],t),this._sessionDisposables.add(Ve(()=>{e.isDisposed()||this._cacheHintsForFastRestore(e)}));let r,n=new Set,i=new Ke(()=>Vf(this,void 0,void 0,function*(){let a=Date.now();r==null||r.dispose(!0),r=new Mt;let s=e.onWillDispose(()=>r==null?void 0:r.cancel());try{let l=r.token,d=yield Fo.create(e,this._getHintsRanges(),l);if(i.delay=this._debounceInfo.update(e,Date.now()-a),l.isCancellationRequested){d.dispose();return}for(let c of d.provider)typeof c.onDidChangeInlayHints=="function"&&!n.has(c)&&(n.add(c),this._sessionDisposables.add(c.onDidChangeInlayHints(()=>{i.isScheduled()||i.schedule()})));this._sessionDisposables.add(d),this._updateHintsDecorators(d.ranges,d.items),this._cacheHintsForFastRestore(e)}catch(l){ce(l)}finally{r.dispose(),s.dispose()}}),this._debounceInfo.get(e));this._sessionDisposables.add(i),this._sessionDisposables.add(Ve(()=>r==null?void 0:r.dispose(!0))),i.schedule(0),this._sessionDisposables.add(this._editor.onDidScrollChange(a=>{(a.scrollTopChanged||!i.isScheduled())&&i.schedule()})),this._sessionDisposables.add(this._editor.onDidChangeModelContent(a=>{let s=Math.max(i.delay,1250);i.schedule(s)})),this._sessionDisposables.add(this._installLinkGesture()),this._sessionDisposables.add(this._installContextMenu())}_installLinkGesture(){let e=()=>{},t=new bo(this._editor);return t.onMouseMoveOrRelevantKeyDown(r=>{let[n]=r,i=this._getInlayHintLabelPart(n),a=this._editor.getModel();if(!i||!n.hasTriggerModifier||!a){e();return}if(n.hasTriggerModifier&&(i.part.command||i.part.location)){let s=new Mt;i.item.resolve(s.token),this._activeInlayHintPart=i;let l=this._activeInlayHintPart.item.hint.position.lineNumber,d=new y(l,1,l,a.getLineMaxColumn(l)),c=new Set;for(let u of this._decorationsMetadata.values())d.containsRange(u.item.anchor.range)&&c.add(u.item);this._updateHintsDecorators([d],Array.from(c)),e=()=>{s.dispose(!0),this._activeInlayHintPart=void 0,this._updateHintsDecorators([d],Array.from(c))}}}),t.onCancel(e),t.onExecute(r=>Vf(this,void 0,void 0,function*(){var n;let i=this._getInlayHintLabelPart(r);if(i){let a=i.part;if(a.location)this._instaService.invokeFunction(TT,r,this._editor,a.location);else if(Hv.is(a.command))try{yield this._commandService.executeCommand(a.command.id,...(n=a.command.arguments)!==null&&n!==void 0?n:[])}catch(s){this._notificationService.notify({severity:sp.Error,source:i.item.provider.displayName,message:s})}}})),t}_installContextMenu(){return this._editor.onContextMenu(e=>Vf(this,void 0,void 0,function*(){if(!(e.event.target instanceof HTMLElement))return;let t=this._getInlayHintLabelPart(e);t&&(yield this._instaService.invokeFunction(ET,this._editor,e.event.target,t))}))}_getInlayHintLabelPart(e){var t;if(e.target.type!==6)return;let r=(t=e.target.detail.injectedText)===null||t===void 0?void 0:t.options;if(r instanceof np&&(r==null?void 0:r.attachedData)instanceof pd)return r.attachedData}_cacheHintsForFastRestore(e){let t=new Map;for(let[r,n]of this._decorationsMetadata){if(t.has(n.item))continue;let i=n.item,a=e.getDecorationRange(r);if(a){let s=new Gf(a,n.item.anchor.direction);i=n.item.with({anchor:s})}t.set(n.item,i)}this._inlayHintsCache.set(e,Array.from(t.values()))}_getHintsRanges(){let t=this._editor.getModel(),r=this._editor.getVisibleRangesPlusViewportAboveBelow(),n=[];for(let i of r.sort(y.compareRangesUsingStarts)){let a=t.validateRange(new y(i.startLineNumber-30,i.startColumn,i.endLineNumber+30,i.endColumn));n.length===0||!y.areIntersectingOrTouching(n[n.length-1],a)?n.push(a):n[n.length-1]=y.plusRange(n[n.length-1],a)}return n}_updateHintsDecorators(e,t){var r,n;let i=[],a=(m,g,b,T,x)=>{i.push({item:m,classNameRef:g,decoration:{range:m.anchor.range,options:{description:"InlayHint",showIfCollapsed:m.anchor.range.isEmpty(),collapseOnReplaceEdit:!m.anchor.range.isEmpty(),stickiness:0,[m.anchor.direction]:{content:b,inlineClassNameAffectsLetterSpacing:!0,inlineClassName:g.className,cursorStops:T,attachedData:x}}}})},s=(m,g)=>{let b=this._ruleFactory.createClassNameRef({width:`${l/3|0}px`,display:"inline-block"});a(m,b,"\u200A",g?Hl.Right:Hl.None)},{fontSize:l,fontFamily:d}=this._getLayoutInfo(),c="--code-editorInlayHintsFontFamily";this._editor.getContainerDomNode().style.setProperty(c,d);for(let m of t){m.hint.paddingLeft&&s(m,!1);let g=typeof m.hint.label=="string"?[{label:m.hint.label}]:m.hint.label;for(let b=0;b<g.length;b++){let T=g[b],x=b===0,R=b===g.length-1,I={fontSize:`${l}px`,fontFamily:`var(${c}), ${sa.fontFamily}`,verticalAlign:"middle"};this._fillInColors(I,m.hint),(T.command||T.location)&&((r=this._activeInlayHintPart)===null||r===void 0?void 0:r.item)===m&&this._activeInlayHintPart.index===b&&(I.textDecoration="underline",I.cursor="pointer",I.color=nt(As)),x&&R?(I.padding=`1px ${Math.max(1,l/4)|0}px`,I.borderRadius=`${l/4|0}px`):x?(I.padding=`1px 0 1px ${Math.max(1,l/4)|0}px`,I.borderRadius=`${l/4|0}px 0 0 ${l/4|0}px`):R?(I.padding=`1px ${Math.max(1,l/4)|0}px 1px 0`,I.borderRadius=`0 ${l/4|0}px ${l/4|0}px 0`):I.padding="1px 0 1px 0",a(m,this._ruleFactory.createClassNameRef(I),pk(T.label),R&&!m.hint.paddingRight?Hl.Right:Hl.None,new pd(m,b))}if(m.hint.paddingRight&&s(m,!0),i.length>N_._MAX_DECORATORS)break}let u=[];for(let m of e)for(let{id:g}of(n=this._editor.getDecorationsInRange(m))!==null&&n!==void 0?n:[]){let b=this._decorationsMetadata.get(g);b&&(u.push(g),b.classNameRef.dispose(),this._decorationsMetadata.delete(g))}let f=this._editor.deltaDecorations(u,i.map(m=>m.decoration));for(let m=0;m<f.length;m++){let g=i[m];this._decorationsMetadata.set(f[m],{item:g.item,classNameRef:g.classNameRef})}}_fillInColors(e,t){t.kind===Rm.Parameter?(e.backgroundColor=nt(a1),e.color=nt(i1)):t.kind===Rm.Type?(e.backgroundColor=nt(n1),e.color=nt(r1)):(e.backgroundColor=nt(t1),e.color=nt(e1))}_getLayoutInfo(){let e=this._editor.getOption(127),t=this._editor.getOption(46),r=e.fontSize;(!r||r<5||r>t)&&(r=t*.9|0);let n=e.fontFamily||this._editor.getOption(43);return{fontSize:r,fontFamily:n}}_removeAllDecorations(){this._editor.deltaDecorations(Array.from(this._decorationsMetadata.keys()),[]);for(let e of this._decorationsMetadata.values())e.classNameRef.dispose();this._decorationsMetadata.clear()}};Ra.ID="editor.contrib.InlayHints";Ra._MAX_DECORATORS=1500;Ra=uk([dd(1,Zn),dd(2,xT),dd(3,ct),dd(4,$e),dd(5,le)],Ra);function pk(o){let e="\xA0";return o.replace(/[ \t]/g,e)}Q(Ra.ID,Ra);Ie.registerCommand("_executeInlayHintProvider",(o,...e)=>Vf(void 0,void 0,void 0,function*(){let[t,r]=e;Je(Te.isUri(t)),Je(y.isIRange(r));let n=yield o.get(Wt).createModelReference(t);try{let i=yield Fo.create(n.object.textEditorModel,[y.lift(r)],he.None),a=i.items.map(s=>s.hint);return setTimeout(()=>i.dispose(),0),a}finally{n.dispose()}}));wn();Jr();var fk=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Hf=function(o,e){return function(t,r){e(t,r,o)}},CT=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},mk=function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=o[Symbol.asyncIterator],t;return e?e.call(o):(o=typeof __values=="function"?__values(o):o[Symbol.iterator](),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(i){t[i]=o[i]&&function(a){return new Promise(function(s,l){a=o[i](a),n(s,l,a.done,a.value)})}}function n(i,a,s,l){Promise.resolve(l).then(function(d){i({value:d,done:s})},a)}},R_=class extends Lo{constructor(e,t){super(10,t,e.item.anchor.range);this.part=e}},Uf=class extends qs{constructor(e,t,r,n,i){super(e,t,r,n);this._resolverService=i}suggestHoverAnchor(e){var t;if(!Ra.get(this._editor)||e.target.type!==6)return null;let n=(t=e.target.detail.injectedText)===null||t===void 0?void 0:t.options;return n instanceof np&&n.attachedData instanceof pd?new R_(n.attachedData,this):null}computeSync(){return[]}computeAsync(e,t,r){return e instanceof R_?new vr(n=>CT(this,void 0,void 0,function*(){var i,a;let{part:s}=e;if(yield s.item.resolve(r),r.isCancellationRequested)return;let l;typeof s.item.hint.tooltip=="string"?l=new sr().appendText(s.item.hint.tooltip):s.item.hint.tooltip&&(l=s.item.hint.tooltip),l&&n.emitOne(new Mn(this,e.range,[l],0));let d;typeof s.part.tooltip=="string"?d=new sr().appendText(s.part.tooltip):s.part.tooltip&&(d=s.part.tooltip),d&&n.emitOne(new Mn(this,e.range,[d],1));let c=yield this._resolveInlayHintLabelPartHover(s,r);try{for(var u=mk(c),f;f=yield u.next(),!f.done;){let m=f.value;n.emitOne(m)}}catch(m){i={error:m}}finally{try{f&&!f.done&&(a=u.return)&&(yield a.call(u))}finally{if(i)throw i.error}}})):vr.EMPTY}_resolveInlayHintLabelPartHover(e,t){return CT(this,void 0,void 0,function*(){if(!e.part.location)return vr.EMPTY;let{uri:r,range:n}=e.part.location,i=yield this._resolverService.createModelReference(r);try{let a=i.object.textEditorModel;return ys.has(a)?Yc(a,new z(n.startLineNumber,n.startColumn),t).filter(s=>!Ea(s.hover.contents)).map(s=>new Mn(this,e.item.anchor.range,s.hover.contents,2+s.ordinal)):vr.EMPTY}finally{i.dispose()}})}};Uf=fk([Hf(1,gt),Hf(2,yt),Hf(3,rt),Hf(4,Wt)],Uf);Be();Ne();var M_=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Wf=function(o,e){return function(t,r){e(t,r,o)}},LT=V,fd=class DT extends F{constructor(e,t,r){super();this._editor=e,this._instantiationService=t,this._keybindingService=r,this._participants=[this._instantiationService.createInstance(tf,this._editor),this._instantiationService.createInstance(qs,this._editor),this._instantiationService.createInstance(Rf,this._editor),this._instantiationService.createInstance(Of,this._editor),this._instantiationService.createInstance(df,this._editor),this._instantiationService.createInstance(Uf,this._editor)],this._widget=this._register(this._instantiationService.createInstance(Pa,this._editor)),this._decorationsChangerListener=this._register(new wT(this._editor)),this._computer=new md(this._editor,this._participants),this._hoverOperation=this._register(new Kc(this._editor,this._computer)),this._messages=[],this._messagesAreComplete=!1,this._register(this._hoverOperation.onResult(n=>{this._withResult(n.value,n.isComplete,n.hasLoadingMessage)})),this._register(this._decorationsChangerListener.onDidChangeModelDecorations(()=>this._onModelDecorationsChanged())),this._register(Fr(this._widget.getDomNode(),"keydown",n=>{n.equals(9)&&this.hide()})),this._register(bs.onDidChange(()=>{this._widget.position&&this._computer.anchor&&this._messages.length>0&&(this._widget.clear(),this._renderMessages(this._computer.anchor,this._messages))}))}_onModelDecorationsChanged(){this._widget.position&&(this._hoverOperation.cancel(),this._widget.colorPicker||this._hoverOperation.start(0))}maybeShowAt(e){let t=[];for(let n of this._participants)if(n.suggestHoverAnchor){let i=n.suggestHoverAnchor(e);i&&t.push(i)}let r=e.target;if(r.type===6&&t.push(new qc(0,r.range)),r.type===7){let n=this._editor.getOption(44).typicalHalfwidthCharacterWidth/2;!r.detail.isAfterLines&&typeof r.detail.horizontalDistanceToText=="number"&&r.detail.horizontalDistanceToText<n&&t.push(new qc(0,r.range))}return t.length===0?!1:(t.sort((n,i)=>i.priority-n.priority),this._startShowingAt(t[0],0,!1),!0)}startShowingAtRange(e,t,r){this._startShowingAt(new qc(0,e),t,r)}_startShowingAt(e,t,r){if(!(this._computer.anchor&&this._computer.anchor.equals(e))){if(this._hoverOperation.cancel(),this._widget.position)if(!this._computer.anchor||!e.canAdoptVisibleHover(this._computer.anchor,this._widget.position))this.hide();else{let n=this._messages.filter(i=>i.isValidForHoverAnchor(e));if(n.length===0)this.hide();else{if(n.length===this._messages.length&&this._messagesAreComplete)return;this._renderMessages(e,n)}}this._computer.anchor=e,this._computer.shouldFocus=r,this._hoverOperation.start(t)}}hide(){this._computer.anchor=null,this._hoverOperation.cancel(),this._widget.hide()}isColorPickerVisible(){return!!this._widget.colorPicker}_addLoadingMessage(e){if(this._computer.anchor){for(let t of this._participants)if(t.createLoadingMessage){let r=t.createLoadingMessage(this._computer.anchor);if(r)return e.slice(0).concat([r])}}return e}_withResult(e,t,r){this._messages=r?this._addLoadingMessage(e):e,this._messagesAreComplete=t,this._computer.anchor&&this._messages.length>0?this._renderMessages(this._computer.anchor,this._messages):t&&this.hide()}_renderMessages(e,t){let r=1073741824,n=t[0].range,i=null;for(let u of t)r=Math.min(r,u.range.startColumn),n=y.plusRange(n,u.range),u.forceShowAtRange&&(i=u.range);let a=new P,s=a.add(new P_(this._keybindingService)),l=document.createDocumentFragment(),d=null,c={fragment:l,statusBar:s,setColorPicker:u=>d=u,onContentsChanged:()=>this._widget.onContentsChanged(),hide:()=>this.hide()};for(let u of this._participants){let f=t.filter(m=>m.owner===u);f.length>0&&a.add(u.renderHoverParts(c,f))}if(s.hasContent&&l.appendChild(s.hoverElement),l.hasChildNodes()){if(n){let u=this._decorationsChangerListener.deltaDecorations([],[{range:n,options:DT._DECORATION_OPTIONS}]);a.add(Ve(()=>{this._decorationsChangerListener.deltaDecorations(u,[])}))}this._widget.showAt(l,new AT(d,i?i.getStartPosition():new z(e.range.startLineNumber,r),i||n,this._editor.getOption(53).above,this._computer.shouldFocus,a))}else a.dispose()}};fd._DECORATION_OPTIONS=Se.register({description:"content-hover-highlight",className:"hoverHighlight"});fd=M_([Wf(1,le),Wf(2,at)],fd);var wT=class extends F{constructor(e){super();this._editor=e,this._onDidChangeModelDecorations=this._register(new j),this.onDidChangeModelDecorations=this._onDidChangeModelDecorations.event,this._isChangingDecorations=!1,this._register(this._editor.onDidChangeModelDecorations(t=>{this._isChangingDecorations||this._onDidChangeModelDecorations.fire(t)}))}deltaDecorations(e,t){try{return this._isChangingDecorations=!0,this._editor.deltaDecorations(e,t)}finally{this._isChangingDecorations=!1}}},AT=class{constructor(e,t,r,n,i,a){this.colorPicker=e,this.showAtPosition=t,this.showAtRange=r,this.preferAbove=n,this.stoleFocus=i,this.disposables=a}},Pa=class IT extends F{constructor(e,t){super();this._editor=e,this._contextKeyService=t,this.allowEditorOverflow=!0,this._hoverVisibleKey=v.hoverVisible.bindTo(this._contextKeyService),this._hover=this._register(new jc),this._visibleData=null,this._register(this._editor.onDidLayoutChange(()=>this._layout())),this._register(this._editor.onDidChangeConfiguration(r=>{r.hasChanged(44)&&this._updateFont()})),this._setVisibleData(null),this._layout(),this._editor.addContentWidget(this)}get position(){var e,t;return(t=(e=this._visibleData)===null||e===void 0?void 0:e.showAtPosition)!==null&&t!==void 0?t:null}get colorPicker(){var e,t;return(t=(e=this._visibleData)===null||e===void 0?void 0:e.colorPicker)!==null&&t!==void 0?t:null}dispose(){this._editor.removeContentWidget(this),this._visibleData&&this._visibleData.disposables.dispose(),super.dispose()}getId(){return IT.ID}getDomNode(){return this._hover.containerDomNode}getPosition(){if(!this._visibleData)return null;let e=this._visibleData.preferAbove;return!e&&this._contextKeyService.getContextKeyValue(Ee.Visible.key)&&(e=!0),{position:this._visibleData.showAtPosition,range:this._visibleData.showAtRange,preference:e?[1,2]:[2,1]}}_setVisibleData(e){this._visibleData&&this._visibleData.disposables.dispose(),this._visibleData=e,this._hoverVisibleKey.set(!!this._visibleData),this._hover.containerDomNode.classList.toggle("hidden",!this._visibleData)}_layout(){let e=Math.max(this._editor.getLayoutInfo().height/4,250),{fontSize:t,lineHeight:r}=this._editor.getOption(44);this._hover.contentsDomNode.style.fontSize=`${t}px`,this._hover.contentsDomNode.style.lineHeight=`${r/t}`,this._hover.contentsDomNode.style.maxHeight=`${e}px`,this._hover.contentsDomNode.style.maxWidth=`${Math.max(this._editor.getLayoutInfo().width*.66,500)}px`}_updateFont(){Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName("code")).forEach(t=>this._editor.applyFontInfo(t))}showAt(e,t){this._setVisibleData(t),this._hover.contentsDomNode.textContent="",this._hover.contentsDomNode.appendChild(e),this._hover.contentsDomNode.style.paddingBottom="",this._updateFont(),this._editor.layoutContentWidget(this),this.onContentsChanged(),this._editor.render(),this._editor.layoutContentWidget(this),this.onContentsChanged(),t.stoleFocus&&this._hover.containerDomNode.focus(),t.colorPicker&&t.colorPicker.layout()}hide(){if(this._visibleData){let e=this._visibleData.stoleFocus;this._setVisibleData(null),this._editor.layoutContentWidget(this),e&&this._editor.focus()}}onContentsChanged(){this._hover.onContentsChanged();let e=this._hover.scrollbar.getScrollDimensions();if(e.scrollWidth>e.width){let r=`${this._hover.scrollbar.options.horizontalScrollbarSize}px`;this._hover.contentsDomNode.style.paddingBottom!==r&&(this._hover.contentsDomNode.style.paddingBottom=r,this._editor.layoutContentWidget(this),this._hover.onContentsChanged())}}clear(){this._hover.contentsDomNode.textContent=""}};Pa.ID="editor.contrib.contentHoverWidget";Pa=M_([Wf(1,re)],Pa);var P_=class extends F{constructor(e){super();this._keybindingService=e,this._hasContent=!1,this.hoverElement=LT("div.hover-row.status-bar"),this.actionsElement=B(this.hoverElement,LT("div.actions"))}get hasContent(){return this._hasContent}addAction(e){let t=this._keybindingService.lookupKeybinding(e.commandId),r=t?t.getLabel():null;return this._hasContent=!0,this._register(zc.render(this.actionsElement,e,r))}append(e){let t=B(this.actionsElement,e);return this._hasContent=!0,t}};P_=M_([Wf(0,at)],P_);var md=class{constructor(e,t){this._editor=e,this._participants=t,this._anchor=null,this._shouldFocus=!1}get anchor(){return this._anchor}set anchor(e){this._anchor=e}get shouldFocus(){return this._shouldFocus}set shouldFocus(e){this._shouldFocus=e}static _getLineDecorations(e,t){if(t.type!==1)return[];let r=e.getModel(),n=t.range.startLineNumber,i=r.getLineMaxColumn(n);return e.getLineDecorations(n).filter(a=>{if(a.options.isWholeLine)return!0;let s=a.range.startLineNumber===n?a.range.startColumn:1,l=a.range.endLineNumber===n?a.range.endColumn:i;if(a.options.showIfCollapsed){if(s>t.range.startColumn+1||t.range.endColumn-1>l)return!1}else if(s>t.range.startColumn||t.range.endColumn>l)return!1;return!0})}computeAsync(e){let t=this._anchor;if(!this._editor.hasModel()||!t)return vr.EMPTY;let r=md._getLineDecorations(this._editor,t);return vr.merge(this._participants.map(n=>n.computeAsync?n.computeAsync(t,r,e):vr.EMPTY))}computeSync(){if(!this._editor.hasModel()||!this._anchor)return[];let e=md._getLineDecorations(this._editor,this._anchor),t=[];for(let r of this._participants)t=t.concat(r.computeSync(this._anchor,e));return Un(t)}};Pe();bt();W();Jr();var kT=V,Ma=class extends F{constructor(e,t,r=eS){super();this._renderDisposeables=this._register(new P),this._editor=e,this._isVisible=!1,this._messages=[],this._hover=this._register(new jc),this._hover.containerDomNode.classList.toggle("hidden",!this._isVisible),this._markdownRenderer=this._register(new Dr({editor:this._editor},t,r)),this._computer=new NT(this._editor),this._hoverOperation=this._register(new Kc(this._editor,this._computer)),this._register(this._hoverOperation.onResult(n=>{this._withResult(n.value)})),this._register(this._editor.onDidChangeModelDecorations(()=>this._onModelDecorationsChanged())),this._register(this._editor.onDidChangeConfiguration(n=>{n.hasChanged(44)&&this._updateFont()})),this._editor.addOverlayWidget(this)}dispose(){this._editor.removeOverlayWidget(this),super.dispose()}getId(){return Ma.ID}getDomNode(){return this._hover.containerDomNode}getPosition(){return null}_updateFont(){Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName("code")).forEach(t=>this._editor.applyFontInfo(t))}_onModelDecorationsChanged(){this._isVisible&&(this._hoverOperation.cancel(),this._hoverOperation.start(0))}startShowingAt(e){this._computer.lineNumber!==e&&(this._hoverOperation.cancel(),this.hide(),this._computer.lineNumber=e,this._hoverOperation.start(0))}hide(){this._computer.lineNumber=-1,this._hoverOperation.cancel(),!!this._isVisible&&(this._isVisible=!1,this._hover.containerDomNode.classList.toggle("hidden",!this._isVisible))}_withResult(e){this._messages=e,this._messages.length>0?this._renderMessages(this._computer.lineNumber,this._messages):this.hide()}_renderMessages(e,t){this._renderDisposeables.clear();let r=document.createDocumentFragment();for(let n of t){let i=kT("div.hover-row.markdown-hover"),a=B(i,kT("div.hover-contents")),s=this._renderDisposeables.add(this._markdownRenderer.render(n.value));a.appendChild(s.element),r.appendChild(i)}this._updateContents(r),this._showAt(e)}_updateContents(e){this._hover.contentsDomNode.textContent="",this._hover.contentsDomNode.appendChild(e),this._updateFont()}_showAt(e){this._isVisible||(this._isVisible=!0,this._hover.containerDomNode.classList.toggle("hidden",!this._isVisible));let t=this._editor.getLayoutInfo(),r=this._editor.getTopForLineNumber(e),n=this._editor.getScrollTop(),i=this._editor.getOption(59),a=this._hover.containerDomNode.clientHeight,s=r-n-(a-i)/2;this._hover.containerDomNode.style.left=`${t.glyphMarginLeft+t.glyphMarginWidth}px`,this._hover.containerDomNode.style.top=`${Math.max(Math.round(s),0)}px`}};Ma.ID="editor.contrib.modesGlyphHoverWidget";var NT=class{constructor(e){this._editor=e,this._lineNumber=-1}get lineNumber(){return this._lineNumber}set lineNumber(e){this._lineNumber=e}computeSync(){let e=n=>({value:n}),t=this._editor.getLineDecorations(this._lineNumber),r=[];if(!t)return r;for(let n of t){if(!n.options.glyphMarginClassName)continue;let i=n.options.glyphMarginHoverMessage;!i||Ea(i)||r.push(...uu(i).map(e))}return r}};Z();Le();He();Jr();mt();Oe();var hk=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},jf=function(o,e){return function(t,r){e(t,r,o)}},ji=class RT{constructor(e,t,r,n,i){this._editor=e,this._instantiationService=t,this._openerService=r,this._languageService=n,this._toUnhook=new P,this._isMouseDown=!1,this._hoverClicked=!1,this._contentWidget=null,this._glyphWidget=null,this._hookEvents(),this._didChangeConfigurationHandler=this._editor.onDidChangeConfiguration(a=>{a.hasChanged(53)&&(this._unhookEvents(),this._hookEvents())})}static get(e){return e.getContribution(RT.ID)}_hookEvents(){let e=()=>this._hideWidgets(),t=this._editor.getOption(53);this._isHoverEnabled=t.enabled,this._isHoverSticky=t.sticky,this._isHoverEnabled?(this._toUnhook.add(this._editor.onMouseDown(r=>this._onEditorMouseDown(r))),this._toUnhook.add(this._editor.onMouseUp(r=>this._onEditorMouseUp(r))),this._toUnhook.add(this._editor.onMouseMove(r=>this._onEditorMouseMove(r))),this._toUnhook.add(this._editor.onKeyDown(r=>this._onKeyDown(r)))):(this._toUnhook.add(this._editor.onMouseMove(r=>this._onEditorMouseMove(r))),this._toUnhook.add(this._editor.onKeyDown(r=>this._onKeyDown(r)))),this._toUnhook.add(this._editor.onMouseLeave(e)),this._toUnhook.add(this._editor.onDidChangeModel(e)),this._toUnhook.add(this._editor.onDidScrollChange(r=>this._onEditorScrollChanged(r)))}_unhookEvents(){this._toUnhook.clear()}_onEditorScrollChanged(e){(e.scrollTopChanged||e.scrollLeftChanged)&&this._hideWidgets()}_onEditorMouseDown(e){this._isMouseDown=!0;let t=e.target;if(t.type===9&&t.detail===Pa.ID){this._hoverClicked=!0;return}t.type===12&&t.detail===Ma.ID||(t.type!==12&&(this._hoverClicked=!1),this._hideWidgets())}_onEditorMouseUp(e){this._isMouseDown=!1}_onEditorMouseMove(e){var t,r,n,i,a;let s=e.target;if(this._isMouseDown&&this._hoverClicked||this._isHoverSticky&&s.type===9&&s.detail===Pa.ID||this._isHoverSticky&&!((r=(t=e.event.browserEvent.view)===null||t===void 0?void 0:t.getSelection())===null||r===void 0?void 0:r.isCollapsed)||!this._isHoverSticky&&s.type===9&&s.detail===Pa.ID&&((n=this._contentWidget)===null||n===void 0?void 0:n.isColorPickerVisible())||this._isHoverSticky&&s.type===12&&s.detail===Ma.ID)return;if(!this._isHoverEnabled){this._hideWidgets();return}if(this._getOrCreateContentWidget().maybeShowAt(e)){(i=this._glyphWidget)===null||i===void 0||i.hide();return}if(s.type===2&&s.position){(a=this._contentWidget)===null||a===void 0||a.hide(),this._glyphWidget||(this._glyphWidget=new Ma(this._editor,this._languageService,this._openerService)),this._glyphWidget.startShowingAt(s.position.lineNumber);return}this._hideWidgets()}_onKeyDown(e){e.keyCode!==5&&e.keyCode!==6&&e.keyCode!==57&&e.keyCode!==4&&this._hideWidgets()}_hideWidgets(){var e,t,r;this._isMouseDown&&this._hoverClicked&&((e=this._contentWidget)===null||e===void 0?void 0:e.isColorPickerVisible())||(this._hoverClicked=!1,(t=this._glyphWidget)===null||t===void 0||t.hide(),(r=this._contentWidget)===null||r===void 0||r.hide())}_getOrCreateContentWidget(){return this._contentWidget||(this._contentWidget=this._instantiationService.createInstance(fd,this._editor)),this._contentWidget}isColorPickerVisible(){var e;return((e=this._contentWidget)===null||e===void 0?void 0:e.isColorPickerVisible())||!1}showContentHover(e,t,r){this._getOrCreateContentWidget().startShowingAtRange(e,t,r)}dispose(){var e,t;this._unhookEvents(),this._toUnhook.dispose(),this._didChangeConfigurationHandler.dispose(),(e=this._glyphWidget)===null||e===void 0||e.dispose(),(t=this._contentWidget)===null||t===void 0||t.dispose()}};ji.ID="editor.contrib.hover";ji=hk([jf(1,le),jf(2,yt),jf(3,gt),jf(4,re)],ji);var PT=class extends M{constructor(){super({id:"editor.action.showHover",label:p({key:"showHover",comment:["Label for action that will trigger the showing of a hover in the editor.","This allows for users to show the hover without using the mouse."]},"Show Hover"),alias:"Show Hover",precondition:void 0,kbOpts:{kbExpr:v.editorTextFocus,primary:Xe(2089,2087),weight:100}})}run(e,t){if(!t.hasModel())return;let r=ji.get(t);if(!r)return;let n=t.getPosition(),i=new y(n.lineNumber,n.column,n.lineNumber,n.column),a=t.getOption(2)===2;r.showContentHover(i,1,a)}},MT=class extends M{constructor(){super({id:"editor.action.showDefinitionPreviewHover",label:p({key:"showDefinitionPreviewHover",comment:["Label for action that will trigger the showing of definition preview hover in the editor.","This allows for users to show the definition preview hover without using the mouse."]},"Show Definition Preview Hover"),alias:"Show Definition Preview Hover",precondition:void 0})}run(e,t){let r=ji.get(t);if(!r)return;let n=t.getPosition();if(!n)return;let i=new y(n.lineNumber,n.column,n.lineNumber,n.column),a=wa.get(t);if(!a)return;a.startFindDefinitionFromCursor(n).then(()=>{r.showContentHover(i,1,!0)})}};Q(ji.ID,ji);D(PT);D(MT);ke((o,e)=>{let t=o.getColor(Qb);t&&e.addRule(`.monaco-editor .hoverHighlight { background-color: ${t}; }`);let r=o.getColor(xi);r&&e.addRule(`.monaco-editor .monaco-hover { background-color: ${r}; }`);let n=o.getColor(ws);n&&(e.addRule(`.monaco-editor .monaco-hover { border: 1px solid ${n}; }`),e.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${n.transparent(.5)}; }`),e.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${n.transparent(.5)}; }`),e.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${n.transparent(.5)}; }`));let i=o.getColor(ma);i&&e.addRule(`.monaco-editor .monaco-hover a { color: ${i}; }`);let a=o.getColor(ha);a&&e.addRule(`.monaco-editor .monaco-hover a:hover { color: ${a}; }`);let s=o.getColor(Ds);s&&e.addRule(`.monaco-editor .monaco-hover { color: ${s}; }`);let l=o.getColor(Zb);l&&e.addRule(`.monaco-editor .monaco-hover .hover-row .actions { background-color: ${l}; }`);let d=o.getColor(Vu);d&&e.addRule(`.monaco-editor .monaco-hover code { background-color: ${d}; }`)});var zf=class extends F{constructor(e){super();this._editor=e,this._register(e.onMouseDown(t=>this.onMouseDown(t)))}dispose(){super.dispose()}onMouseDown(e){let t=e.target;if(t.type!==6||!t.detail.injectedText||t.detail.injectedText.options.attachedData!==qh||!t.range)return;let r=this._editor.getContribution(ji.ID);if(!!r&&!r.isColorPickerVisible()){let n=new y(t.range.startLineNumber,t.range.startColumn+1,t.range.endLineNumber,t.range.endColumn+1);r.showContentHover(n,1,!1)}}};zf.ID="editor.contrib.colorContribution";Q(zf.ID,zf);gi();pe();ee();Be();on();ki();tt();ee();kt();var Gn=class{constructor(e,t,r){this.languageConfigurationService=r,this._selection=e,this._insertSpace=t,this._usedEndToken=null}static _haystackHasNeedleAtOffset(e,t,r){if(r<0)return!1;let n=t.length,i=e.length;if(r+n>i)return!1;for(let a=0;a<n;a++){let s=e.charCodeAt(r+a),l=t.charCodeAt(a);if(s!==l&&!(s>=65&&s<=90&&s+32===l)&&!(l>=65&&l<=90&&l+32===s))return!1}return!0}_createOperationsForBlockComment(e,t,r,n,i,a){let s=e.startLineNumber,l=e.startColumn,d=e.endLineNumber,c=e.endColumn,u=i.getLineContent(s),f=i.getLineContent(d),m=u.lastIndexOf(t,l-1+t.length),g=f.indexOf(r,c-1-r.length);if(m!==-1&&g!==-1)if(s===d)u.substring(m+t.length,g).indexOf(r)>=0&&(m=-1,g=-1);else{let T=u.substring(m+t.length),x=f.substring(0,g);(T.indexOf(r)>=0||x.indexOf(r)>=0)&&(m=-1,g=-1)}let b;m!==-1&&g!==-1?(n&&m+t.length<u.length&&u.charCodeAt(m+t.length)===32&&(t=t+" "),n&&g>0&&f.charCodeAt(g-1)===32&&(r=" "+r,g-=1),b=Gn._createRemoveBlockCommentOperations(new y(s,m+t.length+1,d,g+1),t,r)):(b=Gn._createAddBlockCommentOperations(e,t,r,this._insertSpace),this._usedEndToken=b.length===1?r:null);for(let T of b)a.addTrackedEditOperation(T.range,T.text)}static _createRemoveBlockCommentOperations(e,t,r){let n=[];return y.isEmpty(e)?n.push(We.delete(new y(e.startLineNumber,e.startColumn-t.length,e.endLineNumber,e.endColumn+r.length))):(n.push(We.delete(new y(e.startLineNumber,e.startColumn-t.length,e.startLineNumber,e.startColumn))),n.push(We.delete(new y(e.endLineNumber,e.endColumn,e.endLineNumber,e.endColumn+r.length)))),n}static _createAddBlockCommentOperations(e,t,r,n){let i=[];return y.isEmpty(e)?i.push(We.replace(new y(e.startLineNumber,e.startColumn,e.endLineNumber,e.endColumn),t+"  "+r)):(i.push(We.insert(new z(e.startLineNumber,e.startColumn),t+(n?" ":""))),i.push(We.insert(new z(e.endLineNumber,e.endColumn),(n?" ":"")+r))),i}getEditOperations(e,t){let r=this._selection.startLineNumber,n=this._selection.startColumn;e.tokenizeIfCheap(r);let i=e.getLanguageIdAtPosition(r,n),a=this.languageConfigurationService.getLanguageConfiguration(i).comments;!a||!a.blockCommentStartToken||!a.blockCommentEndToken||this._createOperationsForBlockComment(this._selection,a.blockCommentStartToken,a.blockCommentEndToken,this._insertSpace,e,t)}computeCursorState(e,t){let r=t.getInverseEditOperations();if(r.length===2){let n=r[0],i=r[1];return new X(n.range.endLineNumber,n.range.endColumn,i.range.startLineNumber,i.range.startColumn)}else{let n=r[0].range,i=this._usedEndToken?-this._usedEndToken.length-1:0;return new X(n.endLineNumber,n.endColumn+i,n.endLineNumber,n.endColumn+i)}}};Ye();ki();tt();ee();kt();on();var Bn=class{constructor(e,t,r,n,i,a,s){this.languageConfigurationService=e,this._selection=t,this._tabSize=r,this._type=n,this._insertSpace=i,this._selectionId=null,this._deltaColumn=0,this._moveEndPositionDown=!1,this._ignoreEmptyLines=a,this._ignoreFirstLine=s||!1}static _gatherPreflightCommentStrings(e,t,r,n){e.tokenizeIfCheap(t);let i=e.getLanguageIdAtPosition(t,1),a=n.getLanguageConfiguration(i).comments,s=a?a.lineCommentToken:null;if(!s)return null;let l=[];for(let d=0,c=r-t+1;d<c;d++)l[d]={ignore:!1,commentStr:s,commentStrOffset:0,commentStrLength:s.length};return l}static _analyzeLines(e,t,r,n,i,a,s,l){let d=!0,c;e===0?c=!0:e===1?c=!1:c=!0;for(let u=0,f=n.length;u<f;u++){let m=n[u],g=i+u;if(g===i&&s){m.ignore=!0;continue}let b=r.getLineContent(g),T=Ul(b);if(T===-1){m.ignore=a,m.commentStrOffset=b.length;continue}if(d=!1,m.ignore=!1,m.commentStrOffset=T,c&&!Gn._haystackHasNeedleAtOffset(b,m.commentStr,T)&&(e===0?c=!1:e===1||(m.ignore=!0)),c&&t){let x=T+m.commentStrLength;x<b.length&&b.charCodeAt(x)===32&&(m.commentStrLength+=1)}}if(e===0&&d){c=!1;for(let u=0,f=n.length;u<f;u++)n[u].ignore=!1}return{supported:!0,shouldRemoveComments:c,lines:n}}static _gatherPreflightData(e,t,r,n,i,a,s,l){let d=Bn._gatherPreflightCommentStrings(r,n,i,l);return d===null?{supported:!1}:Bn._analyzeLines(e,t,r,d,n,a,s,l)}_executeLineComments(e,t,r,n){let i;r.shouldRemoveComments?i=Bn._createRemoveLineCommentsOperations(r.lines,n.startLineNumber):(Bn._normalizeInsertionPoint(e,r.lines,n.startLineNumber,this._tabSize),i=this._createAddLineCommentsOperations(r.lines,n.startLineNumber));let a=new z(n.positionLineNumber,n.positionColumn);for(let s=0,l=i.length;s<l;s++)t.addEditOperation(i[s].range,i[s].text),y.isEmpty(i[s].range)&&y.getStartPosition(i[s].range).equals(a)&&e.getLineContent(a.lineNumber).length+1===a.column&&(this._deltaColumn=(i[s].text||"").length);this._selectionId=t.trackSelection(n)}_attemptRemoveBlockComment(e,t,r,n){let i=t.startLineNumber,a=t.endLineNumber,s=n.length+Math.max(e.getLineFirstNonWhitespaceColumn(t.startLineNumber),t.startColumn),l=e.getLineContent(i).lastIndexOf(r,s-1),d=e.getLineContent(a).indexOf(n,t.endColumn-1-r.length);return l!==-1&&d===-1&&(d=e.getLineContent(i).indexOf(n,l+r.length),a=i),l===-1&&d!==-1&&(l=e.getLineContent(a).lastIndexOf(r,d),i=a),t.isEmpty()&&(l===-1||d===-1)&&(l=e.getLineContent(i).indexOf(r),l!==-1&&(d=e.getLineContent(i).indexOf(n,l+r.length))),l!==-1&&e.getLineContent(i).charCodeAt(l+r.length)===32&&(r+=" "),d!==-1&&e.getLineContent(a).charCodeAt(d-1)===32&&(n=" "+n,d-=1),l!==-1&&d!==-1?Gn._createRemoveBlockCommentOperations(new y(i,l+r.length+1,a,d+1),r,n):null}_executeBlockComment(e,t,r){e.tokenizeIfCheap(r.startLineNumber);let n=e.getLanguageIdAtPosition(r.startLineNumber,1),i=rr.getComments(n);if(!i||!i.blockCommentStartToken||!i.blockCommentEndToken)return;let a=i.blockCommentStartToken,s=i.blockCommentEndToken,l=this._attemptRemoveBlockComment(e,r,a,s);if(!l){if(r.isEmpty()){let d=e.getLineContent(r.startLineNumber),c=Ul(d);c===-1&&(c=d.length),l=Gn._createAddBlockCommentOperations(new y(r.startLineNumber,c+1,r.startLineNumber,d.length+1),a,s,this._insertSpace)}else l=Gn._createAddBlockCommentOperations(new y(r.startLineNumber,e.getLineFirstNonWhitespaceColumn(r.startLineNumber),r.endLineNumber,e.getLineMaxColumn(r.endLineNumber)),a,s,this._insertSpace);l.length===1&&(this._deltaColumn=a.length+1)}this._selectionId=t.trackSelection(r);for(let d of l)t.addEditOperation(d.range,d.text)}getEditOperations(e,t){let r=this._selection;if(this._moveEndPositionDown=!1,r.startLineNumber===r.endLineNumber&&this._ignoreFirstLine){t.addEditOperation(new y(r.startLineNumber,e.getLineMaxColumn(r.startLineNumber),r.startLineNumber+1,1),r.startLineNumber===e.getLineCount()?"":`
`),this._selectionId=t.trackSelection(r);return}r.startLineNumber<r.endLineNumber&&r.endColumn===1&&(this._moveEndPositionDown=!0,r=r.setEndPosition(r.endLineNumber-1,e.getLineMaxColumn(r.endLineNumber-1)));let n=Bn._gatherPreflightData(this._type,this._insertSpace,e,r.startLineNumber,r.endLineNumber,this._ignoreEmptyLines,this._ignoreFirstLine,this.languageConfigurationService);return n.supported?this._executeLineComments(e,t,n,r):this._executeBlockComment(e,t,r)}computeCursorState(e,t){let r=t.getTrackedSelection(this._selectionId);return this._moveEndPositionDown&&(r=r.setEndPosition(r.endLineNumber+1,1)),new X(r.selectionStartLineNumber,r.selectionStartColumn+this._deltaColumn,r.positionLineNumber,r.positionColumn+this._deltaColumn)}static _createRemoveLineCommentsOperations(e,t){let r=[];for(let n=0,i=e.length;n<i;n++){let a=e[n];a.ignore||r.push(We.delete(new y(t+n,a.commentStrOffset+1,t+n,a.commentStrOffset+a.commentStrLength+1)))}return r}_createAddLineCommentsOperations(e,t){let r=[],n=this._insertSpace?" ":"";for(let i=0,a=e.length;i<a;i++){let s=e[i];s.ignore||r.push(We.insert(new z(t+i,s.commentStrOffset+1),s.commentStr+n))}return r}static nextVisibleColumn(e,t,r,n){return r?e+(t-e%t):e+n}static _normalizeInsertionPoint(e,t,r,n){let i=1073741824,a,s;for(let l=0,d=t.length;l<d;l++){if(t[l].ignore)continue;let c=e.getLineContent(r+l),u=0;for(let f=0,m=t[l].commentStrOffset;u<i&&f<m;f++)u=Bn.nextVisibleColumn(u,n,c.charCodeAt(f)===9,1);u<i&&(i=u)}i=Math.floor(i/n)*n;for(let l=0,d=t.length;l<d;l++){if(t[l].ignore)continue;let c=e.getLineContent(r+l),u=0;for(a=0,s=t[l].commentStrOffset;u<i&&a<s;a++)u=Bn.nextVisibleColumn(u,n,c.charCodeAt(a)===9,1);u>i?t[l].commentStrOffset=a-1:t[l].commentStrOffset=a}}};Z();ar();var Kf=class extends M{constructor(e,t){super(t);this._type=e}run(e,t){let r=e.get(Nt);if(!t.hasModel())return;let n=t.getModel(),i=[],a=n.getOptions(),s=t.getOption(19),l=t.getSelections().map((c,u)=>({selection:c,index:u,ignoreFirstLine:!1}));l.sort((c,u)=>y.compareRangesUsingStarts(c.selection,u.selection));let d=l[0];for(let c=1;c<l.length;c++){let u=l[c];d.selection.endLineNumber===u.selection.startLineNumber&&(d.index<u.index?u.ignoreFirstLine=!0:(d.ignoreFirstLine=!0,d=u))}for(let c of l)i.push(new Bn(r,c.selection,a.tabSize,this._type,s.insertSpace,s.ignoreEmptyLines,c.ignoreFirstLine));t.pushUndoStop(),t.executeCommands(this.id,i),t.pushUndoStop()}},OT=class extends Kf{constructor(){super(0,{id:"editor.action.commentLine",label:p("comment.line","Toggle Line Comment"),alias:"Toggle Line Comment",precondition:v.writable,kbOpts:{kbExpr:v.editorTextFocus,primary:2133,weight:100},menuOpts:{menuId:oe.MenubarEditMenu,group:"5_insert",title:p({key:"miToggleLineComment",comment:["&& denotes a mnemonic"]},"&&Toggle Line Comment"),order:1}})}},FT=class extends Kf{constructor(){super(1,{id:"editor.action.addCommentLine",label:p("comment.line.add","Add Line Comment"),alias:"Add Line Comment",precondition:v.writable,kbOpts:{kbExpr:v.editorTextFocus,primary:Xe(2089,2081),weight:100}})}},GT=class extends Kf{constructor(){super(2,{id:"editor.action.removeCommentLine",label:p("comment.line.remove","Remove Line Comment"),alias:"Remove Line Comment",precondition:v.writable,kbOpts:{kbExpr:v.editorTextFocus,primary:Xe(2089,2099),weight:100}})}},BT=class extends M{constructor(){super({id:"editor.action.blockComment",label:p("comment.block","Toggle Block Comment"),alias:"Toggle Block Comment",precondition:v.writable,kbOpts:{kbExpr:v.editorTextFocus,primary:1567,linux:{primary:3103},weight:100},menuOpts:{menuId:oe.MenubarEditMenu,group:"5_insert",title:p({key:"miToggleBlockComment",comment:["&& denotes a mnemonic"]},"Toggle &&Block Comment"),order:2}})}run(e,t){let r=e.get(Nt);if(!t.hasModel())return;let n=t.getOption(19),i=[],a=t.getSelections();for(let s of a)i.push(new Gn(s,n.insertSpace,r));t.pushUndoStop(),t.executeCommands(this.id,i),t.pushUndoStop()}};D(OT);D(FT);D(GT);D(BT);Pe();ao();W();Ir();pe();Be();Z();ar();Le();qr();var gk=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},hd=function(o,e){return function(t,r){e(t,r,o)}},cl=class VT{constructor(e,t,r,n,i,a){this._contextMenuService=t,this._contextViewService=r,this._contextKeyService=n,this._keybindingService=i,this._menuService=a,this._toDispose=new P,this._contextMenuIsBeingShownCount=0,this._editor=e,this._toDispose.add(this._editor.onContextMenu(s=>this._onContextMenu(s))),this._toDispose.add(this._editor.onMouseWheel(s=>{if(this._contextMenuIsBeingShownCount>0){let l=this._contextViewService.getContextViewElement(),d=s.srcElement;d.shadowRoot&&gb(l)===d.shadowRoot||this._contextViewService.hideContextView()}})),this._toDispose.add(this._editor.onKeyDown(s=>{s.keyCode===58&&(s.preventDefault(),s.stopPropagation(),this.showContextMenu())}))}static get(e){return e.getContribution(VT.ID)}_onContextMenu(e){if(!this._editor.hasModel())return;if(!this._editor.getOption(20)){this._editor.focus(),e.target.position&&!this._editor.getSelection().containsPosition(e.target.position)&&this._editor.setPosition(e.target.position);return}if(e.target.type===12||e.target.type===6&&e.target.detail.injectedText||(e.event.preventDefault(),e.event.stopPropagation(),e.target.type!==6&&e.target.type!==7&&e.target.type!==1))return;if(this._editor.focus(),e.target.position){let r=!1;for(let n of this._editor.getSelections())if(n.containsPosition(e.target.position)){r=!0;break}r||this._editor.setPosition(e.target.position)}let t=null;e.target.type!==1&&(t={x:e.event.posx-1,width:2,y:e.event.posy-1,height:2}),this.showContextMenu(t)}showContextMenu(e){if(!this._editor.getOption(20)||!this._editor.hasModel())return;if(!this._contextMenuService){this._editor.focus();return}let t=this._getMenuActions(this._editor.getModel(),this._editor.isSimpleWidget?oe.SimpleEditorContext:oe.EditorContext);t.length>0&&this._doShowContextMenu(t,e)}_getMenuActions(e,t){let r=[],n=this._menuService.createMenu(t,this._contextKeyService),i=n.getActions({arg:e.uri});n.dispose();for(let a of i){let[,s]=a,l=0;for(let d of s)if(d instanceof Mu){let c=this._getMenuActions(e,d.item.submenu);c.length>0&&(r.push(new Ru(d.id,d.label,c)),l++)}else r.push(d),l++;l&&r.push(new Jn)}return r.length&&r.pop(),r}_doShowContextMenu(e,t=null){if(!this._editor.hasModel())return;let r=this._editor.getOption(53);if(this._editor.updateOptions({hover:{enabled:!1}}),!t){this._editor.revealPosition(this._editor.getPosition(),1),this._editor.render();let i=this._editor.getScrolledVisiblePosition(this._editor.getPosition()),a=nr(this._editor.getDomNode()),s=a.left+i.left,l=a.top+i.top+i.height;t={x:s,y:l}}let n=this._editor.getOption(115)&&!su;this._contextMenuIsBeingShownCount++,this._contextMenuService.showContextMenu({domForShadowRoot:n?this._editor.getDomNode():void 0,getAnchor:()=>t,getActions:()=>e,getActionViewItem:i=>{let a=this._keybindingFor(i);if(a)return new fc(i,i,{label:!0,keybinding:a.getLabel(),isMenu:!0});let s=i;return typeof s.getActionViewItem=="function"?s.getActionViewItem():new fc(i,i,{icon:!0,label:!0,isMenu:!0})},getKeyBinding:i=>this._keybindingFor(i),onHide:i=>{this._contextMenuIsBeingShownCount--,this._editor.focus(),this._editor.updateOptions({hover:r})}})}_keybindingFor(e){return this._keybindingService.lookupKeybinding(e.id)}dispose(){this._contextMenuIsBeingShownCount>0&&this._contextViewService.hideContextView(),this._toDispose.dispose()}};cl.ID="editor.contrib.contextmenu";cl=gk([hd(1,Ai),hd(2,up),hd(3,re),hd(4,at),hd(5,Xn)],cl);var HT=class extends M{constructor(){super({id:"editor.action.showContextMenu",label:p("action.showContextMenu.label","Show Editor Context Menu"),alias:"Show Editor Context Menu",precondition:void 0,kbOpts:{kbExpr:v.textInputFocus,primary:1092,weight:100}})}run(e,t){var r;(r=cl.get(t))===null||r===void 0||r.showContextMenu()}};Q(cl.ID,cl);D(HT);W();pe();Be();Z();var qf=class{constructor(e){this.selections=e}equals(e){let t=this.selections.length,r=e.selections.length;if(t!==r)return!1;for(let n=0;n<t;n++)if(!this.selections[n].equalsSelection(e.selections[n]))return!1;return!0}},Jf=class{constructor(e,t,r){this.cursorState=e,this.scrollTop=t,this.scrollLeft=r}},Oa=class extends F{constructor(e){super();this._editor=e,this._isCursorUndoRedo=!1,this._undoStack=[],this._redoStack=[],this._register(e.onDidChangeModel(t=>{this._undoStack=[],this._redoStack=[]})),this._register(e.onDidChangeModelContent(t=>{this._undoStack=[],this._redoStack=[]})),this._register(e.onDidChangeCursorSelection(t=>{if(this._isCursorUndoRedo||!t.oldSelections||t.oldModelVersionId!==t.modelVersionId)return;let r=new qf(t.oldSelections);this._undoStack.length>0&&this._undoStack[this._undoStack.length-1].cursorState.equals(r)||(this._undoStack.push(new Jf(r,e.getScrollTop(),e.getScrollLeft())),this._redoStack=[],this._undoStack.length>50&&this._undoStack.shift())}))}static get(e){return e.getContribution(Oa.ID)}cursorUndo(){!this._editor.hasModel()||this._undoStack.length===0||(this._redoStack.push(new Jf(new qf(this._editor.getSelections()),this._editor.getScrollTop(),this._editor.getScrollLeft())),this._applyState(this._undoStack.pop()))}cursorRedo(){!this._editor.hasModel()||this._redoStack.length===0||(this._undoStack.push(new Jf(new qf(this._editor.getSelections()),this._editor.getScrollTop(),this._editor.getScrollLeft())),this._applyState(this._redoStack.pop()))}_applyState(e){this._isCursorUndoRedo=!0,this._editor.setSelections(e.cursorState.selections),this._editor.setScrollPosition({scrollTop:e.scrollTop,scrollLeft:e.scrollLeft}),this._isCursorUndoRedo=!1}};Oa.ID="editor.contrib.cursorUndoRedoController";var UT=class extends M{constructor(){super({id:"cursorUndo",label:p("cursor.undo","Cursor Undo"),alias:"Cursor Undo",precondition:void 0,kbOpts:{kbExpr:v.textInputFocus,primary:2099,weight:100}})}run(e,t,r){var n;(n=Oa.get(t))===null||n===void 0||n.cursorUndo()}},WT=class extends M{constructor(){super({id:"cursorRedo",label:p("cursor.redo","Cursor Redo"),alias:"Cursor Redo",precondition:void 0})}run(e,t,r){var n;(n=Oa.get(t))===null||n===void 0||n.cursorRedo()}};Q(Oa.ID,Oa);D(UT);D(WT);W();Ir();pe();tt();ee();kt();jt();ee();kt();var O_=class{constructor(e,t,r){this.selection=e,this.targetPosition=t,this.copy=r,this.targetSelection=null}getEditOperations(e,t){let r=e.getValueInRange(this.selection);if(this.copy||t.addEditOperation(this.selection,null),t.addEditOperation(new y(this.targetPosition.lineNumber,this.targetPosition.column,this.targetPosition.lineNumber,this.targetPosition.column),r),this.selection.containsPosition(this.targetPosition)&&!(this.copy&&(this.selection.getEndPosition().equals(this.targetPosition)||this.selection.getStartPosition().equals(this.targetPosition)))){this.targetSelection=this.selection;return}if(this.copy){this.targetSelection=new X(this.targetPosition.lineNumber,this.targetPosition.column,this.selection.endLineNumber-this.selection.startLineNumber+this.targetPosition.lineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column+this.selection.endColumn-this.selection.startColumn:this.selection.endColumn);return}if(this.targetPosition.lineNumber>this.selection.endLineNumber){this.targetSelection=new X(this.targetPosition.lineNumber-this.selection.endLineNumber+this.selection.startLineNumber,this.targetPosition.column,this.targetPosition.lineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column+this.selection.endColumn-this.selection.startColumn:this.selection.endColumn);return}if(this.targetPosition.lineNumber<this.selection.endLineNumber){this.targetSelection=new X(this.targetPosition.lineNumber,this.targetPosition.column,this.targetPosition.lineNumber+this.selection.endLineNumber-this.selection.startLineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column+this.selection.endColumn-this.selection.startColumn:this.selection.endColumn);return}this.selection.endColumn<=this.targetPosition.column?this.targetSelection=new X(this.targetPosition.lineNumber-this.selection.endLineNumber+this.selection.startLineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column-this.selection.endColumn+this.selection.startColumn:this.targetPosition.column-this.selection.endColumn+this.selection.startColumn,this.targetPosition.lineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column:this.selection.endColumn):this.targetSelection=new X(this.targetPosition.lineNumber-this.selection.endLineNumber+this.selection.startLineNumber,this.targetPosition.column,this.targetPosition.lineNumber,this.targetPosition.column+this.selection.endColumn-this.selection.startColumn)}computeCursorState(e,t){return this.targetSelection}};function dl(o){return yr?o.altKey:o.ctrlKey}var si=class extends F{constructor(e){super();this._editor=e,this._register(this._editor.onMouseDown(t=>this._onEditorMouseDown(t))),this._register(this._editor.onMouseUp(t=>this._onEditorMouseUp(t))),this._register(this._editor.onMouseDrag(t=>this._onEditorMouseDrag(t))),this._register(this._editor.onMouseDrop(t=>this._onEditorMouseDrop(t))),this._register(this._editor.onMouseDropCanceled(()=>this._onEditorMouseDropCanceled())),this._register(this._editor.onKeyDown(t=>this.onEditorKeyDown(t))),this._register(this._editor.onKeyUp(t=>this.onEditorKeyUp(t))),this._register(this._editor.onDidBlurEditorWidget(()=>this.onEditorBlur())),this._register(this._editor.onDidBlurEditorText(()=>this.onEditorBlur())),this._dndDecorationIds=[],this._mouseDown=!1,this._modifierPressed=!1,this._dragSelection=null}onEditorBlur(){this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1,this._modifierPressed=!1}onEditorKeyDown(e){!this._editor.getOption(31)||this._editor.getOption(18)||(dl(e)&&(this._modifierPressed=!0),this._mouseDown&&dl(e)&&this._editor.updateOptions({mouseStyle:"copy"}))}onEditorKeyUp(e){!this._editor.getOption(31)||this._editor.getOption(18)||(dl(e)&&(this._modifierPressed=!1),this._mouseDown&&e.keyCode===si.TRIGGER_KEY_VALUE&&this._editor.updateOptions({mouseStyle:"default"}))}_onEditorMouseDown(e){this._mouseDown=!0}_onEditorMouseUp(e){this._mouseDown=!1,this._editor.updateOptions({mouseStyle:"text"})}_onEditorMouseDrag(e){let t=e.target;if(this._dragSelection===null){let n=(this._editor.getSelections()||[]).filter(i=>t.position&&i.containsPosition(t.position));if(n.length===1)this._dragSelection=n[0];else return}dl(e.event)?this._editor.updateOptions({mouseStyle:"copy"}):this._editor.updateOptions({mouseStyle:"default"}),t.position&&(this._dragSelection.containsPosition(t.position)?this._removeDecoration():this.showAt(t.position))}_onEditorMouseDropCanceled(){this._editor.updateOptions({mouseStyle:"text"}),this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1}_onEditorMouseDrop(e){if(e.target&&(this._hitContent(e.target)||this._hitMargin(e.target))&&e.target.position){let t=new z(e.target.position.lineNumber,e.target.position.column);if(this._dragSelection===null){let r=null;if(e.event.shiftKey){let n=this._editor.getSelection();if(n){let{selectionStartLineNumber:i,selectionStartColumn:a}=n;r=[new X(i,a,t.lineNumber,t.column)]}}else r=(this._editor.getSelections()||[]).map(n=>n.containsPosition(t)?new X(t.lineNumber,t.column,t.lineNumber,t.column):n);this._editor.setSelections(r||[],"mouse",3)}else(!this._dragSelection.containsPosition(t)||(dl(e.event)||this._modifierPressed)&&(this._dragSelection.getEndPosition().equals(t)||this._dragSelection.getStartPosition().equals(t)))&&(this._editor.pushUndoStop(),this._editor.executeCommand(si.ID,new O_(this._dragSelection,t,dl(e.event)||this._modifierPressed)),this._editor.pushUndoStop())}this._editor.updateOptions({mouseStyle:"text"}),this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1}showAt(e){let t=[{range:new y(e.lineNumber,e.column,e.lineNumber,e.column),options:si._DECORATION_OPTIONS}];this._dndDecorationIds=this._editor.deltaDecorations(this._dndDecorationIds,t),this._editor.revealPosition(e,1)}_removeDecoration(){this._dndDecorationIds=this._editor.deltaDecorations(this._dndDecorationIds,[])}_hitContent(e){return e.type===6||e.type===7}_hitMargin(e){return e.type===2||e.type===3||e.type===4}dispose(){this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1,this._modifierPressed=!1,super.dispose()}};si.ID="editor.contrib.dragAndDrop";si.TRIGGER_KEY_VALUE=yr?6:5;si._DECORATION_OPTIONS=Se.register({description:"dnd-target",className:"dnd-target"});Q(si.ID,si);we();W();Ye();pe();Be();bt();we();W();tt();ee();kt();YL();ee();ds();jt();mt();Oe();var Bt=class{constructor(e){this._editor=e,this._decorations=[],this._overviewRulerApproximateDecorations=[],this._findScopeDecorationIds=[],this._rangeHighlightDecorationId=null,this._highlightedDecorationId=null,this._startPosition=this._editor.getPosition()}dispose(){this._editor.deltaDecorations(this._allDecorations(),[]),this._decorations=[],this._overviewRulerApproximateDecorations=[],this._findScopeDecorationIds=[],this._rangeHighlightDecorationId=null,this._highlightedDecorationId=null}reset(){this._decorations=[],this._overviewRulerApproximateDecorations=[],this._findScopeDecorationIds=[],this._rangeHighlightDecorationId=null,this._highlightedDecorationId=null}getCount(){return this._decorations.length}getFindScope(){return this._findScopeDecorationIds[0]?this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]):null}getFindScopes(){if(this._findScopeDecorationIds.length){let e=this._findScopeDecorationIds.map(t=>this._editor.getModel().getDecorationRange(t)).filter(t=>!!t);if(e.length)return e}return null}getStartPosition(){return this._startPosition}setStartPosition(e){this._startPosition=e,this.setCurrentFindMatch(null)}_getDecorationIndex(e){let t=this._decorations.indexOf(e);return t>=0?t+1:1}getCurrentMatchesPosition(e){let t=this._editor.getModel().getDecorationsInRange(e);for(let r of t){let n=r.options;if(n===Bt._FIND_MATCH_DECORATION||n===Bt._CURRENT_FIND_MATCH_DECORATION)return this._getDecorationIndex(r.id)}return 0}setCurrentFindMatch(e){let t=null,r=0;if(e)for(let n=0,i=this._decorations.length;n<i;n++){let a=this._editor.getModel().getDecorationRange(this._decorations[n]);if(e.equalsRange(a)){t=this._decorations[n],r=n+1;break}}return(this._highlightedDecorationId!==null||t!==null)&&this._editor.changeDecorations(n=>{if(this._highlightedDecorationId!==null&&(n.changeDecorationOptions(this._highlightedDecorationId,Bt._FIND_MATCH_DECORATION),this._highlightedDecorationId=null),t!==null&&(this._highlightedDecorationId=t,n.changeDecorationOptions(this._highlightedDecorationId,Bt._CURRENT_FIND_MATCH_DECORATION)),this._rangeHighlightDecorationId!==null&&(n.removeDecoration(this._rangeHighlightDecorationId),this._rangeHighlightDecorationId=null),t!==null){let i=this._editor.getModel().getDecorationRange(t);if(i.startLineNumber!==i.endLineNumber&&i.endColumn===1){let a=i.endLineNumber-1,s=this._editor.getModel().getLineMaxColumn(a);i=new y(i.startLineNumber,i.startColumn,a,s)}this._rangeHighlightDecorationId=n.addDecoration(i,Bt._RANGE_HIGHLIGHT_DECORATION)}}),r}set(e,t){this._editor.changeDecorations(r=>{let n=Bt._FIND_MATCH_DECORATION,i=[];if(e.length>1e3){n=Bt._FIND_MATCH_NO_OVERVIEW_DECORATION;let s=this._editor.getModel().getLineCount(),d=this._editor.getLayoutInfo().height/s,c=Math.max(2,Math.ceil(3/d)),u=e[0].range.startLineNumber,f=e[0].range.endLineNumber;for(let m=1,g=e.length;m<g;m++){let b=e[m].range;f+c>=b.startLineNumber?b.endLineNumber>f&&(f=b.endLineNumber):(i.push({range:new y(u,1,f,1),options:Bt._FIND_MATCH_ONLY_OVERVIEW_DECORATION}),u=b.startLineNumber,f=b.endLineNumber)}i.push({range:new y(u,1,f,1),options:Bt._FIND_MATCH_ONLY_OVERVIEW_DECORATION})}let a=new Array(e.length);for(let s=0,l=e.length;s<l;s++)a[s]={range:e[s].range,options:n};this._decorations=r.deltaDecorations(this._decorations,a),this._overviewRulerApproximateDecorations=r.deltaDecorations(this._overviewRulerApproximateDecorations,i),this._rangeHighlightDecorationId&&(r.removeDecoration(this._rangeHighlightDecorationId),this._rangeHighlightDecorationId=null),this._findScopeDecorationIds.length&&(this._findScopeDecorationIds.forEach(s=>r.removeDecoration(s)),this._findScopeDecorationIds=[]),(t==null?void 0:t.length)&&(this._findScopeDecorationIds=t.map(s=>r.addDecoration(s,Bt._FIND_SCOPE_DECORATION)))})}matchBeforePosition(e){if(this._decorations.length===0)return null;for(let t=this._decorations.length-1;t>=0;t--){let r=this._decorations[t],n=this._editor.getModel().getDecorationRange(r);if(!(!n||n.endLineNumber>e.lineNumber)){if(n.endLineNumber<e.lineNumber)return n;if(!(n.endColumn>e.column))return n}}return this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length-1])}matchAfterPosition(e){if(this._decorations.length===0)return null;for(let t=0,r=this._decorations.length;t<r;t++){let n=this._decorations[t],i=this._editor.getModel().getDecorationRange(n);if(!(!i||i.startLineNumber<e.lineNumber)){if(i.startLineNumber>e.lineNumber)return i;if(!(i.startColumn<e.column))return i}}return this._editor.getModel().getDecorationRange(this._decorations[0])}_allDecorations(){let e=[];return e=e.concat(this._decorations),e=e.concat(this._overviewRulerApproximateDecorations),this._findScopeDecorationIds.length&&e.push(...this._findScopeDecorationIds),this._rangeHighlightDecorationId&&e.push(this._rangeHighlightDecorationId),e}};Bt._CURRENT_FIND_MATCH_DECORATION=Se.register({description:"current-find-match",stickiness:1,zIndex:13,className:"currentFindMatch",showIfCollapsed:!0,overviewRuler:{color:nt(Xu),position:Nr.Center},minimap:{color:nt(Zm),position:_i.Inline}});Bt._FIND_MATCH_DECORATION=Se.register({description:"find-match",stickiness:1,zIndex:10,className:"findMatch",showIfCollapsed:!0,overviewRuler:{color:nt(Xu),position:Nr.Center},minimap:{color:nt(Zm),position:_i.Inline}});Bt._FIND_MATCH_NO_OVERVIEW_DECORATION=Se.register({description:"find-match-no-overview",stickiness:1,className:"findMatch",showIfCollapsed:!0});Bt._FIND_MATCH_ONLY_OVERVIEW_DECORATION=Se.register({description:"find-match-only-overview",stickiness:1,overviewRuler:{color:nt(Xu),position:Nr.Center}});Bt._RANGE_HIGHLIGHT_DECORATION=Se.register({description:"find-range-highlight",stickiness:1,className:"rangeHighlight",isWholeLine:!0});Bt._FIND_SCOPE_DECORATION=Se.register({description:"find-scope",className:"findScope",isWholeLine:!0});ee();var F_=class{constructor(e,t,r){this._editorSelection=e,this._ranges=t,this._replaceStrings=r,this._trackedEditorSelectionId=null}getEditOperations(e,t){if(this._ranges.length>0){let r=[];for(let a=0;a<this._ranges.length;a++)r.push({range:this._ranges[a],text:this._replaceStrings[a]});r.sort((a,s)=>y.compareRangesUsingStarts(a.range,s.range));let n=[],i=r[0];for(let a=1;a<r.length;a++)i.range.endLineNumber===r[a].range.startLineNumber&&i.range.endColumn===r[a].range.startColumn?(i.range=i.range.plusRange(r[a].range),i.text=i.text+r[a].text):(n.push(i),i=r[a]);n.push(i);for(let a of n)t.addEditOperation(a.range,a.text)}this._trackedEditorSelectionId=t.trackSelection(this._editorSelection)}computeCursorState(e,t){return t.getTrackedSelection(this._trackedEditorSelectionId)}};Ye();function G_(o,e){if(o&&o[0]!==""){let t=jT(o,e,"-"),r=jT(o,e,"_");return t&&!r?zT(o,e,"-"):!t&&r?zT(o,e,"_"):o[0].toUpperCase()===o[0]?e.toUpperCase():o[0].toLowerCase()===o[0]?e.toLowerCase():Rv(o[0][0])&&e.length>0?e[0].toUpperCase()+e.substr(1):o[0][0].toUpperCase()!==o[0][0]&&e.length>0?e[0].toLowerCase()+e.substr(1):e}else return e}function jT(o,e,t){return o[0].indexOf(t)!==-1&&e.indexOf(t)!==-1&&o[0].split(t).length===e.split(t).length}function zT(o,e,t){let r=e.split(t),n=o[0].split(t),i="";return r.forEach((a,s)=>{i+=G_([n[s]],a)+t}),i.slice(0,-1)}var B_=class{constructor(e){this.staticValue=e,this.kind=0}},KT=class{constructor(e){this.pieces=e,this.kind=1}},Ga=class{constructor(e){!e||e.length===0?this._state=new B_(""):e.length===1&&e[0].staticValue!==null?this._state=new B_(e[0].staticValue):this._state=new KT(e)}static fromStaticValue(e){return new Ga([Fa.staticValue(e)])}get hasReplacementPatterns(){return this._state.kind===1}buildReplaceString(e,t){if(this._state.kind===0)return t?G_(e,this._state.staticValue):this._state.staticValue;let r="";for(let n=0,i=this._state.pieces.length;n<i;n++){let a=this._state.pieces[n];if(a.staticValue!==null){r+=a.staticValue;continue}let s=Ga._substitute(a.matchIndex,e);if(a.caseOps!==null&&a.caseOps.length>0){let l=[],d=a.caseOps.length,c=0;for(let u=0,f=s.length;u<f;u++){if(c>=d){l.push(s.slice(u));break}switch(a.caseOps[c]){case"U":l.push(s[u].toUpperCase());break;case"u":l.push(s[u].toUpperCase()),c++;break;case"L":l.push(s[u].toLowerCase());break;case"l":l.push(s[u].toLowerCase()),c++;break;default:l.push(s[u])}}s=l.join("")}r+=s}return r}static _substitute(e,t){if(t===null)return"";if(e===0)return t[0];let r="";for(;e>0;){if(e<t.length)return(t[e]||"")+r;r=String(e%10)+r,e=Math.floor(e/10)}return"$"+r}},Fa=class{constructor(e,t,r){this.staticValue=e,this.matchIndex=t,!r||r.length===0?this.caseOps=null:this.caseOps=r.slice(0)}static staticValue(e){return new Fa(e,-1,null)}static caseOps(e,t){return new Fa(null,e,t)}},qT=class{constructor(e){this._source=e,this._lastCharIndex=0,this._result=[],this._resultLen=0,this._currentStaticPiece=""}emitUnchanged(e){this._emitStatic(this._source.substring(this._lastCharIndex,e)),this._lastCharIndex=e}emitStatic(e,t){this._emitStatic(e),this._lastCharIndex=t}_emitStatic(e){e.length!==0&&(this._currentStaticPiece+=e)}emitMatchIndex(e,t,r){this._currentStaticPiece.length!==0&&(this._result[this._resultLen++]=Fa.staticValue(this._currentStaticPiece),this._currentStaticPiece=""),this._result[this._resultLen++]=Fa.caseOps(e,r),this._lastCharIndex=t}finalize(){return this.emitUnchanged(this._source.length),this._currentStaticPiece.length!==0&&(this._result[this._resultLen++]=Fa.staticValue(this._currentStaticPiece),this._currentStaticPiece=""),new Ga(this._result)}};function JT(o){if(!o||o.length===0)return new Ga(null);let e=[],t=new qT(o);for(let r=0,n=o.length;r<n;r++){let i=o.charCodeAt(r);if(i===92){if(r++,r>=n)break;let a=o.charCodeAt(r);switch(a){case 92:t.emitUnchanged(r-1),t.emitStatic("\\",r+1);break;case 110:t.emitUnchanged(r-1),t.emitStatic(`
`,r+1);break;case 116:t.emitUnchanged(r-1),t.emitStatic("	",r+1);break;case 117:case 85:case 108:case 76:t.emitUnchanged(r-1),t.emitStatic("",r+1),e.push(String.fromCharCode(a));break}continue}if(i===36){if(r++,r>=n)break;let a=o.charCodeAt(r);if(a===36){t.emitUnchanged(r-1),t.emitStatic("$",r+1);continue}if(a===48||a===38){t.emitUnchanged(r-1),t.emitMatchIndex(0,r+1,e),e.length=0;continue}if(49<=a&&a<=57){let s=a-48;if(r+1<n){let l=o.charCodeAt(r+1);if(48<=l&&l<=57){r++,s=s*10+(l-48),t.emitUnchanged(r-2),t.emitMatchIndex(s,r+1,e),e.length=0;continue}}t.emitUnchanged(r-1),t.emitMatchIndex(s,r+1,e),e.length=0;continue}}}return t.finalize()}Le();var zi=new fe("findWidgetVisible",!1),eQ=zi.toNegated(),ul=new fe("findInputFocussed",!1),gd=new fe("replaceInputFocussed",!1),_d={primary:545,mac:{primary:2593}},yd={primary:565,mac:{primary:2613}},vd={primary:560,mac:{primary:2608}},bd={primary:554,mac:{primary:2602}},Sd={primary:558,mac:{primary:2606}},Fe={StartFindAction:"actions.find",StartFindWithSelection:"actions.findWithSelection",StartFindWithArgs:"editor.actions.findWithArgs",NextMatchFindAction:"editor.action.nextMatchFindAction",PreviousMatchFindAction:"editor.action.previousMatchFindAction",NextSelectionMatchFindAction:"editor.action.nextSelectionMatchFindAction",PreviousSelectionMatchFindAction:"editor.action.previousSelectionMatchFindAction",StartFindReplaceAction:"editor.action.startFindReplaceAction",CloseFindWidgetCommand:"closeFindWidget",ToggleCaseSensitiveCommand:"toggleFindCaseSensitive",ToggleWholeWordCommand:"toggleFindWholeWord",ToggleRegexCommand:"toggleFindRegex",ToggleSearchScopeCommand:"toggleFindInSelection",TogglePreserveCaseCommand:"togglePreserveCase",ReplaceOneAction:"editor.action.replaceOne",ReplaceAllAction:"editor.action.replaceAll",SelectAllMatchesAction:"editor.action.selectAllMatches"},li=19999,_k=240,Go=class{constructor(e,t){this._toDispose=new P,this._editor=e,this._state=t,this._isDisposed=!1,this._startSearchingTimer=new Rr,this._decorations=new Bt(e),this._toDispose.add(this._decorations),this._updateDecorationsScheduler=new Ke(()=>this.research(!1),100),this._toDispose.add(this._updateDecorationsScheduler),this._toDispose.add(this._editor.onDidChangeCursorPosition(r=>{(r.reason===3||r.reason===5||r.reason===6)&&this._decorations.setStartPosition(this._editor.getPosition())})),this._ignoreModelContentChanged=!1,this._toDispose.add(this._editor.onDidChangeModelContent(r=>{this._ignoreModelContentChanged||(r.isFlush&&this._decorations.reset(),this._decorations.setStartPosition(this._editor.getPosition()),this._updateDecorationsScheduler.schedule())})),this._toDispose.add(this._state.onFindReplaceStateChange(r=>this._onStateChanged(r))),this.research(!1,this._state.searchScope)}dispose(){this._isDisposed=!0,St(this._startSearchingTimer),this._toDispose.dispose()}_onStateChanged(e){this._isDisposed||!this._editor.hasModel()||(e.searchString||e.isReplaceRevealed||e.isRegex||e.wholeWord||e.matchCase||e.searchScope)&&(this._editor.getModel().isTooLargeForSyncing()?(this._startSearchingTimer.cancel(),this._startSearchingTimer.setIfNotSet(()=>{e.searchScope?this.research(e.moveCursor,this._state.searchScope):this.research(e.moveCursor)},_k)):e.searchScope?this.research(e.moveCursor,this._state.searchScope):this.research(e.moveCursor))}static _getSearchRange(e,t){return t||e.getFullModelRange()}research(e,t){let r=null;typeof t!="undefined"?t!==null&&(Array.isArray(t)?r=t:r=[t]):r=this._decorations.getFindScopes(),r!==null&&(r=r.map(s=>{if(s.startLineNumber!==s.endLineNumber){let l=s.endLineNumber;return s.endColumn===1&&(l=l-1),new y(s.startLineNumber,1,l,this._editor.getModel().getLineMaxColumn(l))}return s}));let n=this._findMatches(r,!1,li);this._decorations.set(n,r);let i=this._editor.getSelection(),a=this._decorations.getCurrentMatchesPosition(i);if(a===0&&n.length>0){let s=cu(n.map(l=>l.range),l=>y.compareRangesUsingStarts(l,i)>=0);a=s>0?s-1+1:a}this._state.changeMatchInfo(a,this._decorations.getCount(),void 0),e&&this._editor.getOption(35).cursorMoveOnType&&this._moveToNextMatch(this._decorations.getStartPosition())}_hasMatches(){return this._state.matchesCount>0}_cannotFind(){if(!this._hasMatches()){let e=this._decorations.getFindScope();return e&&this._editor.revealRangeInCenterIfOutsideViewport(e,0),!0}return!1}_setCurrentFindMatch(e){let t=this._decorations.setCurrentFindMatch(e);this._state.changeMatchInfo(t,this._decorations.getCount(),e),this._editor.setSelection(e),this._editor.revealRangeInCenterIfOutsideViewport(e,0)}_prevSearchPosition(e){let t=this._state.isRegex&&(this._state.searchString.indexOf("^")>=0||this._state.searchString.indexOf("$")>=0),{lineNumber:r,column:n}=e,i=this._editor.getModel();return t||n===1?(r===1?r=i.getLineCount():r--,n=i.getLineMaxColumn(r)):n--,new z(r,n)}_moveToPrevMatch(e,t=!1){if(!this._state.canNavigateBack()){let c=this._decorations.matchAfterPosition(e);c&&this._setCurrentFindMatch(c);return}if(this._decorations.getCount()<li){let c=this._decorations.matchBeforePosition(e);c&&c.isEmpty()&&c.getStartPosition().equals(e)&&(e=this._prevSearchPosition(e),c=this._decorations.matchBeforePosition(e)),c&&this._setCurrentFindMatch(c);return}if(this._cannotFind())return;let r=this._decorations.getFindScope(),n=Go._getSearchRange(this._editor.getModel(),r);n.getEndPosition().isBefore(e)&&(e=n.getEndPosition()),e.isBefore(n.getStartPosition())&&(e=n.getEndPosition());let{lineNumber:i,column:a}=e,s=this._editor.getModel(),l=new z(i,a),d=s.findPreviousMatch(this._state.searchString,l,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(117):null,!1);if(d&&d.range.isEmpty()&&d.range.getStartPosition().equals(l)&&(l=this._prevSearchPosition(l),d=s.findPreviousMatch(this._state.searchString,l,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(117):null,!1)),!!d){if(!t&&!n.containsRange(d.range))return this._moveToPrevMatch(d.range.getStartPosition(),!0);this._setCurrentFindMatch(d.range)}}moveToPrevMatch(){this._moveToPrevMatch(this._editor.getSelection().getStartPosition())}_nextSearchPosition(e){let t=this._state.isRegex&&(this._state.searchString.indexOf("^")>=0||this._state.searchString.indexOf("$")>=0),{lineNumber:r,column:n}=e,i=this._editor.getModel();return t||n===i.getLineMaxColumn(r)?(r===i.getLineCount()?r=1:r++,n=1):n++,new z(r,n)}_moveToNextMatch(e){if(!this._state.canNavigateForward()){let r=this._decorations.matchBeforePosition(e);r&&this._setCurrentFindMatch(r);return}if(this._decorations.getCount()<li){let r=this._decorations.matchAfterPosition(e);r&&r.isEmpty()&&r.getStartPosition().equals(e)&&(e=this._nextSearchPosition(e),r=this._decorations.matchAfterPosition(e)),r&&this._setCurrentFindMatch(r);return}let t=this._getNextMatch(e,!1,!0);t&&this._setCurrentFindMatch(t.range)}_getNextMatch(e,t,r,n=!1){if(this._cannotFind())return null;let i=this._decorations.getFindScope(),a=Go._getSearchRange(this._editor.getModel(),i);a.getEndPosition().isBefore(e)&&(e=a.getStartPosition()),e.isBefore(a.getStartPosition())&&(e=a.getStartPosition());let{lineNumber:s,column:l}=e,d=this._editor.getModel(),c=new z(s,l),u=d.findNextMatch(this._state.searchString,c,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(117):null,t);return r&&u&&u.range.isEmpty()&&u.range.getStartPosition().equals(c)&&(c=this._nextSearchPosition(c),u=d.findNextMatch(this._state.searchString,c,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(117):null,t)),u?!n&&!a.containsRange(u.range)?this._getNextMatch(u.range.getEndPosition(),t,r,!0):u:null}moveToNextMatch(){this._moveToNextMatch(this._editor.getSelection().getEndPosition())}_getReplacePattern(){return this._state.isRegex?JT(this._state.replaceString):Ga.fromStaticValue(this._state.replaceString)}replace(){if(!this._hasMatches())return;let e=this._getReplacePattern(),t=this._editor.getSelection(),r=this._getNextMatch(t.getStartPosition(),!0,!1);if(r)if(t.equalsRange(r.range)){let n=e.buildReplaceString(r.matches,this._state.preserveCase),i=new Ci(t,n);this._executeEditorCommand("replace",i),this._decorations.setStartPosition(new z(t.startLineNumber,t.startColumn+n.length)),this.research(!0)}else this._decorations.setStartPosition(this._editor.getPosition()),this._setCurrentFindMatch(r.range)}_findMatches(e,t,r){let n=(e||[null]).map(i=>Go._getSearchRange(this._editor.getModel(),i));return this._editor.getModel().findMatches(this._state.searchString,n,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(117):null,t,r)}replaceAll(){if(!this._hasMatches())return;let e=this._decorations.getFindScopes();e===null&&this._state.matchesCount>=li?this._largeReplaceAll():this._regularReplaceAll(e),this.research(!1)}_largeReplaceAll(){let t=new rb(this._state.searchString,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(117):null).parseSearchRequest();if(!t)return;let r=t.regex;if(!r.multiline){let u="mu";r.ignoreCase&&(u+="i"),r.global&&(u+="g"),r=new RegExp(r.source,u)}let n=this._editor.getModel(),i=n.getValue(1),a=n.getFullModelRange(),s=this._getReplacePattern(),l,d=this._state.preserveCase;s.hasReplacementPatterns||d?l=i.replace(r,function(){return s.buildReplaceString(arguments,d)}):l=i.replace(r,s.buildReplaceString(null,d));let c=new ip(a,l,this._editor.getSelection());this._executeEditorCommand("replaceAll",c)}_regularReplaceAll(e){let t=this._getReplacePattern(),r=this._findMatches(e,t.hasReplacementPatterns||this._state.preserveCase,1073741824),n=[];for(let a=0,s=r.length;a<s;a++)n[a]=t.buildReplaceString(r[a].matches,this._state.preserveCase);let i=new F_(this._editor.getSelection(),r.map(a=>a.range),n);this._executeEditorCommand("replaceAll",i)}selectAllMatches(){if(!this._hasMatches())return;let e=this._decorations.getFindScopes(),r=this._findMatches(e,!1,1073741824).map(i=>new X(i.range.startLineNumber,i.range.startColumn,i.range.endLineNumber,i.range.endColumn)),n=this._editor.getSelection();for(let i=0,a=r.length;i<a;i++)if(r[i].equalsRange(n)){r=[n].concat(r.slice(0,i)).concat(r.slice(i+1));break}this._editor.setSelections(r)}_executeEditorCommand(e,t){try{this._ignoreModelContentChanged=!0,this._editor.pushUndoStop(),this._editor.executeCommand(e,t),this._editor.pushUndoStop()}finally{this._ignoreModelContentChanged=!1}}};Pe();lo();Sr();$n();Ne();var yk={inputActiveOptionBorder:xe.fromHex("#007ACC00"),inputActiveOptionForeground:xe.fromHex("#FFFFFF"),inputActiveOptionBackground:xe.fromHex("#0E639C50")},Ki=class extends Cr{constructor(e){super();this._onChange=this._register(new j),this.onChange=this._onChange.event,this._onKeyDown=this._register(new j),this.onKeyDown=this._onKeyDown.event,this._opts=Object.assign(Object.assign({},yk),e),this._checked=this._opts.isChecked;let t=["monaco-custom-checkbox"];this._opts.icon&&t.push(...Tu.asClassNameArray(this._opts.icon)),this._opts.actionClassName&&t.push(...this._opts.actionClassName.split(" ")),this._checked&&t.push("checked"),this.domNode=document.createElement("div"),this.domNode.title=this._opts.title,this.domNode.classList.add(...t),this._opts.notFocusable||(this.domNode.tabIndex=0),this.domNode.setAttribute("role","checkbox"),this.domNode.setAttribute("aria-checked",String(this._checked)),this.domNode.setAttribute("aria-label",this._opts.title),this.applyStyles(),this.onclick(this.domNode,r=>{this.enabled&&(this.checked=!this._checked,this._onChange.fire(!1),r.preventDefault())}),this.ignoreGesture(this.domNode),this.onkeydown(this.domNode,r=>{if(r.keyCode===10||r.keyCode===3){this.checked=!this._checked,this._onChange.fire(!0),r.preventDefault();return}this._onKeyDown.fire(r)})}get enabled(){return this.domNode.getAttribute("aria-disabled")!=="true"}focus(){this.domNode.focus()}get checked(){return this._checked}set checked(e){this._checked=e,this.domNode.setAttribute("aria-checked",String(this._checked)),this.domNode.classList.toggle("checked",this._checked),this.applyStyles()}width(){return 2+2+2+16}style(e){e.inputActiveOptionBorder&&(this._opts.inputActiveOptionBorder=e.inputActiveOptionBorder),e.inputActiveOptionForeground&&(this._opts.inputActiveOptionForeground=e.inputActiveOptionForeground),e.inputActiveOptionBackground&&(this._opts.inputActiveOptionBackground=e.inputActiveOptionBackground),this.applyStyles()}applyStyles(){this.domNode&&(this.domNode.style.borderColor=this._checked&&this._opts.inputActiveOptionBorder?this._opts.inputActiveOptionBorder.toString():"",this.domNode.style.color=this._checked&&this._opts.inputActiveOptionForeground?this._opts.inputActiveOptionForeground.toString():"inherit",this.domNode.style.backgroundColor=this._checked&&this._opts.inputActiveOptionBackground?this._opts.inputActiveOptionBackground.toString():"")}enable(){this.domNode.setAttribute("aria-disabled",String(!1))}disable(){this.domNode.setAttribute("aria-disabled",String(!0))}};Sr();Z();var vk=p("caseDescription","Match Case"),bk=p("wordsDescription","Match Whole Word"),Sk=p("regexDescription","Use Regular Expression"),Ed=class extends Ki{constructor(e){super({icon:q.caseSensitive,title:vk+e.appendTitle,isChecked:e.isChecked,inputActiveOptionBorder:e.inputActiveOptionBorder,inputActiveOptionForeground:e.inputActiveOptionForeground,inputActiveOptionBackground:e.inputActiveOptionBackground})}},Td=class extends Ki{constructor(e){super({icon:q.wholeWord,title:bk+e.appendTitle,isChecked:e.isChecked,inputActiveOptionBorder:e.inputActiveOptionBorder,inputActiveOptionForeground:e.inputActiveOptionForeground,inputActiveOptionBackground:e.inputActiveOptionBackground})}},xd=class extends Ki{constructor(e){super({icon:q.regex,title:Sk+e.appendTitle,isChecked:e.isChecked,inputActiveOptionBorder:e.inputActiveOptionBorder,inputActiveOptionForeground:e.inputActiveOptionForeground,inputActiveOptionBackground:e.inputActiveOptionBackground})}};lo();we();mt();Oe();var pl=class extends Cr{constructor(e,t,r,n){super();this._hideSoon=this._register(new Ke(()=>this._hide(),2e3)),this._isVisible=!1,this._editor=e,this._state=t,this._keybindingService=r,this._domNode=document.createElement("div"),this._domNode.className="findOptionsWidget",this._domNode.style.display="none",this._domNode.style.top="10px",this._domNode.setAttribute("role","presentation"),this._domNode.setAttribute("aria-hidden","true");let i=n.getColorTheme().getColor(oc),a=n.getColorTheme().getColor(lc),s=n.getColorTheme().getColor(sc);this.caseSensitive=this._register(new Ed({appendTitle:this._keybindingLabelFor(Fe.ToggleCaseSensitiveCommand),isChecked:this._state.matchCase,inputActiveOptionBorder:i,inputActiveOptionForeground:a,inputActiveOptionBackground:s})),this._domNode.appendChild(this.caseSensitive.domNode),this._register(this.caseSensitive.onChange(()=>{this._state.change({matchCase:this.caseSensitive.checked},!1)})),this.wholeWords=this._register(new Td({appendTitle:this._keybindingLabelFor(Fe.ToggleWholeWordCommand),isChecked:this._state.wholeWord,inputActiveOptionBorder:i,inputActiveOptionForeground:a,inputActiveOptionBackground:s})),this._domNode.appendChild(this.wholeWords.domNode),this._register(this.wholeWords.onChange(()=>{this._state.change({wholeWord:this.wholeWords.checked},!1)})),this.regex=this._register(new xd({appendTitle:this._keybindingLabelFor(Fe.ToggleRegexCommand),isChecked:this._state.isRegex,inputActiveOptionBorder:i,inputActiveOptionForeground:a,inputActiveOptionBackground:s})),this._domNode.appendChild(this.regex.domNode),this._register(this.regex.onChange(()=>{this._state.change({isRegex:this.regex.checked},!1)})),this._editor.addOverlayWidget(this),this._register(this._state.onFindReplaceStateChange(l=>{let d=!1;l.isRegex&&(this.regex.checked=this._state.isRegex,d=!0),l.wholeWord&&(this.wholeWords.checked=this._state.wholeWord,d=!0),l.matchCase&&(this.caseSensitive.checked=this._state.matchCase,d=!0),!this._state.isRevealed&&d&&this._revealTemporarily()})),this._register(ub(this._domNode,l=>this._onMouseOut())),this._register(qe(this._domNode,"mouseover",l=>this._onMouseOver())),this._applyTheme(n.getColorTheme()),this._register(n.onDidColorThemeChange(this._applyTheme.bind(this)))}_keybindingLabelFor(e){let t=this._keybindingService.lookupKeybinding(e);return t?` (${t.getLabel()})`:""}dispose(){this._editor.removeOverlayWidget(this),super.dispose()}getId(){return pl.ID}getDomNode(){return this._domNode}getPosition(){return{preference:0}}highlightFindOptions(){this._revealTemporarily()}_revealTemporarily(){this._show(),this._hideSoon.schedule()}_onMouseOut(){this._hideSoon.schedule()}_onMouseOver(){this._hideSoon.cancel()}_show(){this._isVisible||(this._isVisible=!0,this._domNode.style.display="block")}_hide(){!this._isVisible||(this._isVisible=!1,this._domNode.style.display="none")}_applyTheme(e){let t={inputActiveOptionBorder:e.getColor(oc),inputActiveOptionForeground:e.getColor(lc),inputActiveOptionBackground:e.getColor(sc)};this.caseSensitive.style(t),this.wholeWords.style(t),this.regex.style(t)}};pl.ID="editor.contrib.findOptionsWidget";ke((o,e)=>{let t=o.getColor(dn);t&&e.addRule(`.monaco-editor .findOptionsWidget { background-color: ${t}; }`);let r=o.getColor(Cs);r&&e.addRule(`.monaco-editor .findOptionsWidget { color: ${r}; }`);let n=o.getColor(ga);n&&e.addRule(`.monaco-editor .findOptionsWidget { box-shadow: 0 0 8px 2px ${n}; }`);let i=o.getColor(cn);i&&e.addRule(`.monaco-editor .findOptionsWidget { border: 2px solid ${i}; }`)});Ne();W();ee();function Xf(o,e){return o===1?!0:o===2?!1:e}var V_=class extends F{constructor(){super();this._onFindReplaceStateChange=this._register(new j),this.onFindReplaceStateChange=this._onFindReplaceStateChange.event,this._searchString="",this._replaceString="",this._isRevealed=!1,this._isReplaceRevealed=!1,this._isRegex=!1,this._isRegexOverride=0,this._wholeWord=!1,this._wholeWordOverride=0,this._matchCase=!1,this._matchCaseOverride=0,this._preserveCase=!1,this._preserveCaseOverride=0,this._searchScope=null,this._matchesPosition=0,this._matchesCount=0,this._currentMatch=null,this._loop=!0,this._isSearching=!1,this._filters=null}get searchString(){return this._searchString}get replaceString(){return this._replaceString}get isRevealed(){return this._isRevealed}get isReplaceRevealed(){return this._isReplaceRevealed}get isRegex(){return Xf(this._isRegexOverride,this._isRegex)}get wholeWord(){return Xf(this._wholeWordOverride,this._wholeWord)}get matchCase(){return Xf(this._matchCaseOverride,this._matchCase)}get preserveCase(){return Xf(this._preserveCaseOverride,this._preserveCase)}get actualIsRegex(){return this._isRegex}get actualWholeWord(){return this._wholeWord}get actualMatchCase(){return this._matchCase}get actualPreserveCase(){return this._preserveCase}get searchScope(){return this._searchScope}get matchesPosition(){return this._matchesPosition}get matchesCount(){return this._matchesCount}get currentMatch(){return this._currentMatch}changeMatchInfo(e,t,r){let n={moveCursor:!1,updateHistory:!1,searchString:!1,replaceString:!1,isRevealed:!1,isReplaceRevealed:!1,isRegex:!1,wholeWord:!1,matchCase:!1,preserveCase:!1,searchScope:!1,matchesPosition:!1,matchesCount:!1,currentMatch:!1,loop:!1,isSearching:!1,filters:!1},i=!1;t===0&&(e=0),e>t&&(e=t),this._matchesPosition!==e&&(this._matchesPosition=e,n.matchesPosition=!0,i=!0),this._matchesCount!==t&&(this._matchesCount=t,n.matchesCount=!0,i=!0),typeof r!="undefined"&&(y.equalsRange(this._currentMatch,r)||(this._currentMatch=r,n.currentMatch=!0,i=!0)),i&&this._onFindReplaceStateChange.fire(n)}change(e,t,r=!0){var n;let i={moveCursor:t,updateHistory:r,searchString:!1,replaceString:!1,isRevealed:!1,isReplaceRevealed:!1,isRegex:!1,wholeWord:!1,matchCase:!1,preserveCase:!1,searchScope:!1,matchesPosition:!1,matchesCount:!1,currentMatch:!1,loop:!1,isSearching:!1,filters:!1},a=!1,s=this.isRegex,l=this.wholeWord,d=this.matchCase,c=this.preserveCase;typeof e.searchString!="undefined"&&this._searchString!==e.searchString&&(this._searchString=e.searchString,i.searchString=!0,a=!0),typeof e.replaceString!="undefined"&&this._replaceString!==e.replaceString&&(this._replaceString=e.replaceString,i.replaceString=!0,a=!0),typeof e.isRevealed!="undefined"&&this._isRevealed!==e.isRevealed&&(this._isRevealed=e.isRevealed,i.isRevealed=!0,a=!0),typeof e.isReplaceRevealed!="undefined"&&this._isReplaceRevealed!==e.isReplaceRevealed&&(this._isReplaceRevealed=e.isReplaceRevealed,i.isReplaceRevealed=!0,a=!0),typeof e.isRegex!="undefined"&&(this._isRegex=e.isRegex),typeof e.wholeWord!="undefined"&&(this._wholeWord=e.wholeWord),typeof e.matchCase!="undefined"&&(this._matchCase=e.matchCase),typeof e.preserveCase!="undefined"&&(this._preserveCase=e.preserveCase),typeof e.searchScope!="undefined"&&(((n=e.searchScope)===null||n===void 0?void 0:n.every(u=>{var f;return(f=this._searchScope)===null||f===void 0?void 0:f.some(m=>!y.equalsRange(m,u))}))||(this._searchScope=e.searchScope,i.searchScope=!0,a=!0)),typeof e.loop!="undefined"&&this._loop!==e.loop&&(this._loop=e.loop,i.loop=!0,a=!0),typeof e.isSearching!="undefined"&&this._isSearching!==e.isSearching&&(this._isSearching=e.isSearching,i.isSearching=!0,a=!0),typeof e.filters!="undefined"&&(this._filters?this._filters.update(e.filters):this._filters=e.filters,i.filters=!0,a=!0),this._isRegexOverride=typeof e.isRegexOverride!="undefined"?e.isRegexOverride:0,this._wholeWordOverride=typeof e.wholeWordOverride!="undefined"?e.wholeWordOverride:0,this._matchCaseOverride=typeof e.matchCaseOverride!="undefined"?e.matchCaseOverride:0,this._preserveCaseOverride=typeof e.preserveCaseOverride!="undefined"?e.preserveCaseOverride:0,s!==this.isRegex&&(a=!0,i.isRegex=!0),l!==this.wholeWord&&(a=!0,i.wholeWord=!0),d!==this.matchCase&&(a=!0,i.matchCase=!0),c!==this.preserveCase&&(a=!0,i.preserveCase=!0),a&&this._onFindReplaceStateChange.fire(i)}canNavigateBack(){return this.canNavigateInLoop()||this.matchesPosition!==1}canNavigateForward(){return this.canNavigateInLoop()||this.matchesPosition<this.matchesCount}canNavigateInLoop(){return this._loop||this.matchesCount>=li}};Pe();An();lo();we();Sr();Ae();W();Ir();Ye();ee();Z();Pe();lo();Ne();Z();var Ek=p("defaultLabel","input"),H_=class extends Cr{constructor(e,t,r,n){super();this._showOptionButtons=r,this.fixFocusOnOptionClickEnabled=!0,this.imeSessionInProgress=!1,this._onDidOptionChange=this._register(new j),this.onDidOptionChange=this._onDidOptionChange.event,this._onKeyDown=this._register(new j),this.onKeyDown=this._onKeyDown.event,this._onMouseDown=this._register(new j),this.onMouseDown=this._onMouseDown.event,this._onInput=this._register(new j),this._onKeyUp=this._register(new j),this._onCaseSensitiveKeyDown=this._register(new j),this.onCaseSensitiveKeyDown=this._onCaseSensitiveKeyDown.event,this._onRegexKeyDown=this._register(new j),this.onRegexKeyDown=this._onRegexKeyDown.event,this._lastHighlightFindOptions=0,this.contextViewProvider=t,this.placeholder=n.placeholder||"",this.validation=n.validation,this.label=n.label||Ek,this.inputActiveOptionBorder=n.inputActiveOptionBorder,this.inputActiveOptionForeground=n.inputActiveOptionForeground,this.inputActiveOptionBackground=n.inputActiveOptionBackground,this.inputBackground=n.inputBackground,this.inputForeground=n.inputForeground,this.inputBorder=n.inputBorder,this.inputValidationInfoBorder=n.inputValidationInfoBorder,this.inputValidationInfoBackground=n.inputValidationInfoBackground,this.inputValidationInfoForeground=n.inputValidationInfoForeground,this.inputValidationWarningBorder=n.inputValidationWarningBorder,this.inputValidationWarningBackground=n.inputValidationWarningBackground,this.inputValidationWarningForeground=n.inputValidationWarningForeground,this.inputValidationErrorBorder=n.inputValidationErrorBorder,this.inputValidationErrorBackground=n.inputValidationErrorBackground,this.inputValidationErrorForeground=n.inputValidationErrorForeground;let i=n.appendCaseSensitiveLabel||"",a=n.appendWholeWordsLabel||"",s=n.appendRegexLabel||"",l=n.history||[],d=!!n.flexibleHeight,c=!!n.flexibleWidth,u=n.flexibleMaxHeight;this.domNode=document.createElement("div"),this.domNode.classList.add("monaco-findInput"),this.inputBox=this._register(new yp(this.domNode,this.contextViewProvider,{placeholder:this.placeholder||"",ariaLabel:this.label||"",validationOptions:{validation:this.validation},inputBackground:this.inputBackground,inputForeground:this.inputForeground,inputBorder:this.inputBorder,inputValidationInfoBackground:this.inputValidationInfoBackground,inputValidationInfoForeground:this.inputValidationInfoForeground,inputValidationInfoBorder:this.inputValidationInfoBorder,inputValidationWarningBackground:this.inputValidationWarningBackground,inputValidationWarningForeground:this.inputValidationWarningForeground,inputValidationWarningBorder:this.inputValidationWarningBorder,inputValidationErrorBackground:this.inputValidationErrorBackground,inputValidationErrorForeground:this.inputValidationErrorForeground,inputValidationErrorBorder:this.inputValidationErrorBorder,history:l,showHistoryHint:n.showHistoryHint,flexibleHeight:d,flexibleWidth:c,flexibleMaxHeight:u})),this.regex=this._register(new xd({appendTitle:s,isChecked:!1,inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground})),this._register(this.regex.onChange(m=>{this._onDidOptionChange.fire(m),!m&&this.fixFocusOnOptionClickEnabled&&this.inputBox.focus(),this.validate()})),this._register(this.regex.onKeyDown(m=>{this._onRegexKeyDown.fire(m)})),this.wholeWords=this._register(new Td({appendTitle:a,isChecked:!1,inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground})),this._register(this.wholeWords.onChange(m=>{this._onDidOptionChange.fire(m),!m&&this.fixFocusOnOptionClickEnabled&&this.inputBox.focus(),this.validate()})),this.caseSensitive=this._register(new Ed({appendTitle:i,isChecked:!1,inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground})),this._register(this.caseSensitive.onChange(m=>{this._onDidOptionChange.fire(m),!m&&this.fixFocusOnOptionClickEnabled&&this.inputBox.focus(),this.validate()})),this._register(this.caseSensitive.onKeyDown(m=>{this._onCaseSensitiveKeyDown.fire(m)})),this._showOptionButtons&&(this.inputBox.paddingRight=this.caseSensitive.width()+this.wholeWords.width()+this.regex.width());let f=[this.caseSensitive.domNode,this.wholeWords.domNode,this.regex.domNode];this.onkeydown(this.domNode,m=>{if(m.equals(15)||m.equals(17)||m.equals(9)){let g=f.indexOf(document.activeElement);if(g>=0){let b=-1;m.equals(17)?b=(g+1)%f.length:m.equals(15)&&(g===0?b=f.length-1:b=g-1),m.equals(9)?(f[g].blur(),this.inputBox.focus()):b>=0&&f[b].focus(),sn.stop(m,!0)}}}),this.controls=document.createElement("div"),this.controls.className="controls",this.controls.style.display=this._showOptionButtons?"block":"none",this.controls.appendChild(this.caseSensitive.domNode),this.controls.appendChild(this.wholeWords.domNode),this.controls.appendChild(this.regex.domNode),this.domNode.appendChild(this.controls),e&&e.appendChild(this.domNode),this._register(qe(this.inputBox.inputElement,"compositionstart",m=>{this.imeSessionInProgress=!0})),this._register(qe(this.inputBox.inputElement,"compositionend",m=>{this.imeSessionInProgress=!1,this._onInput.fire()})),this.onkeydown(this.inputBox.inputElement,m=>this._onKeyDown.fire(m)),this.onkeyup(this.inputBox.inputElement,m=>this._onKeyUp.fire(m)),this.oninput(this.inputBox.inputElement,m=>this._onInput.fire()),this.onmousedown(this.inputBox.inputElement,m=>this._onMouseDown.fire(m))}enable(){this.domNode.classList.remove("disabled"),this.inputBox.enable(),this.regex.enable(),this.wholeWords.enable(),this.caseSensitive.enable()}disable(){this.domNode.classList.add("disabled"),this.inputBox.disable(),this.regex.disable(),this.wholeWords.disable(),this.caseSensitive.disable()}setFocusInputOnOptionClick(e){this.fixFocusOnOptionClickEnabled=e}setEnabled(e){e?this.enable():this.disable()}getValue(){return this.inputBox.value}setValue(e){this.inputBox.value!==e&&(this.inputBox.value=e)}style(e){this.inputActiveOptionBorder=e.inputActiveOptionBorder,this.inputActiveOptionForeground=e.inputActiveOptionForeground,this.inputActiveOptionBackground=e.inputActiveOptionBackground,this.inputBackground=e.inputBackground,this.inputForeground=e.inputForeground,this.inputBorder=e.inputBorder,this.inputValidationInfoBackground=e.inputValidationInfoBackground,this.inputValidationInfoForeground=e.inputValidationInfoForeground,this.inputValidationInfoBorder=e.inputValidationInfoBorder,this.inputValidationWarningBackground=e.inputValidationWarningBackground,this.inputValidationWarningForeground=e.inputValidationWarningForeground,this.inputValidationWarningBorder=e.inputValidationWarningBorder,this.inputValidationErrorBackground=e.inputValidationErrorBackground,this.inputValidationErrorForeground=e.inputValidationErrorForeground,this.inputValidationErrorBorder=e.inputValidationErrorBorder,this.applyStyles()}applyStyles(){if(this.domNode){let e={inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground};this.regex.style(e),this.wholeWords.style(e),this.caseSensitive.style(e);let t={inputBackground:this.inputBackground,inputForeground:this.inputForeground,inputBorder:this.inputBorder,inputValidationInfoBackground:this.inputValidationInfoBackground,inputValidationInfoForeground:this.inputValidationInfoForeground,inputValidationInfoBorder:this.inputValidationInfoBorder,inputValidationWarningBackground:this.inputValidationWarningBackground,inputValidationWarningForeground:this.inputValidationWarningForeground,inputValidationWarningBorder:this.inputValidationWarningBorder,inputValidationErrorBackground:this.inputValidationErrorBackground,inputValidationErrorForeground:this.inputValidationErrorForeground,inputValidationErrorBorder:this.inputValidationErrorBorder};this.inputBox.style(t)}}select(){this.inputBox.select()}focus(){this.inputBox.focus()}getCaseSensitive(){return this.caseSensitive.checked}setCaseSensitive(e){this.caseSensitive.checked=e}getWholeWords(){return this.wholeWords.checked}setWholeWords(e){this.wholeWords.checked=e}getRegex(){return this.regex.checked}setRegex(e){this.regex.checked=e,this.validate()}focusOnCaseSensitive(){this.caseSensitive.focus()}highlightFindOptions(){this.domNode.classList.remove("highlight-"+this._lastHighlightFindOptions),this._lastHighlightFindOptions=1-this._lastHighlightFindOptions,this.domNode.classList.add("highlight-"+this._lastHighlightFindOptions)}validate(){this.inputBox.validate()}clearMessage(){this.inputBox.hideMessage()}};Pe();lo();Sr();Ne();Z();var Tk=p("defaultLabel","input"),xk=p("label.preserveCaseCheckbox","Preserve Case"),XT=class extends Ki{constructor(e){super({icon:q.preserveCase,title:xk+e.appendTitle,isChecked:e.isChecked,inputActiveOptionBorder:e.inputActiveOptionBorder,inputActiveOptionForeground:e.inputActiveOptionForeground,inputActiveOptionBackground:e.inputActiveOptionBackground})}},U_=class extends Cr{constructor(e,t,r,n){super();this._showOptionButtons=r,this.fixFocusOnOptionClickEnabled=!0,this.cachedOptionsWidth=0,this._onDidOptionChange=this._register(new j),this.onDidOptionChange=this._onDidOptionChange.event,this._onKeyDown=this._register(new j),this.onKeyDown=this._onKeyDown.event,this._onMouseDown=this._register(new j),this._onInput=this._register(new j),this._onKeyUp=this._register(new j),this._onPreserveCaseKeyDown=this._register(new j),this.onPreserveCaseKeyDown=this._onPreserveCaseKeyDown.event,this.contextViewProvider=t,this.placeholder=n.placeholder||"",this.validation=n.validation,this.label=n.label||Tk,this.inputActiveOptionBorder=n.inputActiveOptionBorder,this.inputActiveOptionForeground=n.inputActiveOptionForeground,this.inputActiveOptionBackground=n.inputActiveOptionBackground,this.inputBackground=n.inputBackground,this.inputForeground=n.inputForeground,this.inputBorder=n.inputBorder,this.inputValidationInfoBorder=n.inputValidationInfoBorder,this.inputValidationInfoBackground=n.inputValidationInfoBackground,this.inputValidationInfoForeground=n.inputValidationInfoForeground,this.inputValidationWarningBorder=n.inputValidationWarningBorder,this.inputValidationWarningBackground=n.inputValidationWarningBackground,this.inputValidationWarningForeground=n.inputValidationWarningForeground,this.inputValidationErrorBorder=n.inputValidationErrorBorder,this.inputValidationErrorBackground=n.inputValidationErrorBackground,this.inputValidationErrorForeground=n.inputValidationErrorForeground;let i=n.appendPreserveCaseLabel||"",a=n.history||[],s=!!n.flexibleHeight,l=!!n.flexibleWidth,d=n.flexibleMaxHeight;this.domNode=document.createElement("div"),this.domNode.classList.add("monaco-findInput"),this.inputBox=this._register(new yp(this.domNode,this.contextViewProvider,{ariaLabel:this.label||"",placeholder:this.placeholder||"",validationOptions:{validation:this.validation},inputBackground:this.inputBackground,inputForeground:this.inputForeground,inputBorder:this.inputBorder,inputValidationInfoBackground:this.inputValidationInfoBackground,inputValidationInfoForeground:this.inputValidationInfoForeground,inputValidationInfoBorder:this.inputValidationInfoBorder,inputValidationWarningBackground:this.inputValidationWarningBackground,inputValidationWarningForeground:this.inputValidationWarningForeground,inputValidationWarningBorder:this.inputValidationWarningBorder,inputValidationErrorBackground:this.inputValidationErrorBackground,inputValidationErrorForeground:this.inputValidationErrorForeground,inputValidationErrorBorder:this.inputValidationErrorBorder,history:a,showHistoryHint:n.showHistoryHint,flexibleHeight:s,flexibleWidth:l,flexibleMaxHeight:d})),this.preserveCase=this._register(new XT({appendTitle:i,isChecked:!1,inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground})),this._register(this.preserveCase.onChange(f=>{this._onDidOptionChange.fire(f),!f&&this.fixFocusOnOptionClickEnabled&&this.inputBox.focus(),this.validate()})),this._register(this.preserveCase.onKeyDown(f=>{this._onPreserveCaseKeyDown.fire(f)})),this._showOptionButtons?this.cachedOptionsWidth=this.preserveCase.width():this.cachedOptionsWidth=0;let c=[this.preserveCase.domNode];this.onkeydown(this.domNode,f=>{if(f.equals(15)||f.equals(17)||f.equals(9)){let m=c.indexOf(document.activeElement);if(m>=0){let g=-1;f.equals(17)?g=(m+1)%c.length:f.equals(15)&&(m===0?g=c.length-1:g=m-1),f.equals(9)?(c[m].blur(),this.inputBox.focus()):g>=0&&c[g].focus(),sn.stop(f,!0)}}});let u=document.createElement("div");u.className="controls",u.style.display=this._showOptionButtons?"block":"none",u.appendChild(this.preserveCase.domNode),this.domNode.appendChild(u),e&&e.appendChild(this.domNode),this.onkeydown(this.inputBox.inputElement,f=>this._onKeyDown.fire(f)),this.onkeyup(this.inputBox.inputElement,f=>this._onKeyUp.fire(f)),this.oninput(this.inputBox.inputElement,f=>this._onInput.fire()),this.onmousedown(this.inputBox.inputElement,f=>this._onMouseDown.fire(f))}enable(){this.domNode.classList.remove("disabled"),this.inputBox.enable(),this.preserveCase.enable()}disable(){this.domNode.classList.add("disabled"),this.inputBox.disable(),this.preserveCase.disable()}setEnabled(e){e?this.enable():this.disable()}style(e){this.inputActiveOptionBorder=e.inputActiveOptionBorder,this.inputActiveOptionForeground=e.inputActiveOptionForeground,this.inputActiveOptionBackground=e.inputActiveOptionBackground,this.inputBackground=e.inputBackground,this.inputForeground=e.inputForeground,this.inputBorder=e.inputBorder,this.inputValidationInfoBackground=e.inputValidationInfoBackground,this.inputValidationInfoForeground=e.inputValidationInfoForeground,this.inputValidationInfoBorder=e.inputValidationInfoBorder,this.inputValidationWarningBackground=e.inputValidationWarningBackground,this.inputValidationWarningForeground=e.inputValidationWarningForeground,this.inputValidationWarningBorder=e.inputValidationWarningBorder,this.inputValidationErrorBackground=e.inputValidationErrorBackground,this.inputValidationErrorForeground=e.inputValidationErrorForeground,this.inputValidationErrorBorder=e.inputValidationErrorBorder,this.applyStyles()}applyStyles(){if(this.domNode){let e={inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground};this.preserveCase.style(e);let t={inputBackground:this.inputBackground,inputForeground:this.inputForeground,inputBorder:this.inputBorder,inputValidationInfoBackground:this.inputValidationInfoBackground,inputValidationInfoForeground:this.inputValidationInfoForeground,inputValidationInfoBorder:this.inputValidationInfoBorder,inputValidationWarningBackground:this.inputValidationWarningBackground,inputValidationWarningForeground:this.inputValidationWarningForeground,inputValidationWarningBorder:this.inputValidationWarningBorder,inputValidationErrorBackground:this.inputValidationErrorBackground,inputValidationErrorForeground:this.inputValidationErrorForeground,inputValidationErrorBorder:this.inputValidationErrorBorder};this.inputBox.style(t)}}select(){this.inputBox.select()}focus(){this.inputBox.focus()}getPreserveCase(){return this.preserveCase.checked}setPreserveCase(e){this.preserveCase.checked=e}focusOnPreserve(){this.preserveCase.focus()}validate(){this.inputBox&&this.inputBox.validate()}set width(e){this.inputBox.paddingRight=this.cachedOptionsWidth,this.inputBox.width=e,this.domNode.style.width=e+"px"}dispose(){super.dispose()}};Le();Zl();var YT=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},$T=function(o,e){return function(t,r){e(t,r,o)}},QT="suggestWidgetVisible",Cd="historyNavigationWidget",ZT="historyNavigationForwardsEnabled",ex="historyNavigationBackwardsEnabled";function Ck(o,e,t){new fe(t,e).bindTo(o)}function Lk(o,e){return o.createScoped(e.target)}function tx(o,e){return o.getContext(document.activeElement).getValue(e)}function rx(o,e){let t=Lk(o,e);Ck(t,e,Cd);let r=new fe(ZT,!0).bindTo(t),n=new fe(ex,!0).bindTo(t);return{scopedContextKeyService:t,historyNavigationForwardsEnablement:r,historyNavigationBackwardsEnablement:n}}var Yf=class extends H_{constructor(e,t,r,n,i=!1){super(e,t,i,r);this._register(rx(n,{target:this.inputBox.element,historyNavigator:this.inputBox}).scopedContextKeyService)}};Yf=YT([$T(3,re)],Yf);var $f=class extends U_{constructor(e,t,r,n,i=!1){super(e,t,i,r);this._register(rx(n,{target:this.inputBox.element,historyNavigator:this.inputBox}).scopedContextKeyService)}};$f=YT([$T(3,re)],$f);$t.registerCommandAndKeybindingRule({id:"history.showPrevious",weight:200,when:G.and(G.has(Cd),G.equals(ex,!0),G.equals(QT,!1)),primary:16,secondary:[528],handler:o=>{let e=tx(o.get(re),Cd);e&&e.historyNavigator.showPreviousValue()}});$t.registerCommandAndKeybindingRule({id:"history.showNext",weight:200,when:G.and(G.has(Cd),G.equals(ZT,!0),G.equals(QT,!1)),primary:18,secondary:[530],handler:o=>{let e=tx(o.get(re),Cd);e&&e.historyNavigator.showNextValue()}});function W_(o){var e,t;return((e=o.lookupKeybinding("history.showPrevious"))===null||e===void 0?void 0:e.getElectronAccelerator())==="Up"&&((t=o.lookupKeybinding("history.showNext"))===null||t===void 0?void 0:t.getElectronAccelerator())==="Down"}mt();Oe();var Dk=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},wk=Rt("find-selection",q.selection,p("findSelectionIcon","Icon for 'Find in Selection' in the editor find widget.")),nx=Rt("find-collapsed",q.chevronRight,p("findCollapsedIcon","Icon to indicate that the editor find widget is collapsed.")),ix=Rt("find-expanded",q.chevronDown,p("findExpandedIcon","Icon to indicate that the editor find widget is expanded.")),Ak=Rt("find-replace",q.replace,p("findReplaceIcon","Icon for 'Replace' in the editor find widget.")),Ik=Rt("find-replace-all",q.replaceAll,p("findReplaceAllIcon","Icon for 'Replace All' in the editor find widget.")),kk=Rt("find-previous-match",q.arrowUp,p("findPreviousMatchIcon","Icon for 'Find Previous' in the editor find widget.")),Nk=Rt("find-next-match",q.arrowDown,p("findNextMatchIcon","Icon for 'Find Next' in the editor find widget.")),Rk=p("label.find","Find"),Pk=p("placeholder.find","Find"),Mk=p("label.previousMatchButton","Previous Match"),Ok=p("label.nextMatchButton","Next Match"),Fk=p("label.toggleSelectionFind","Find in Selection"),Gk=p("label.closeButton","Close"),Bk=p("label.replace","Replace"),Vk=p("placeholder.replace","Replace"),Hk=p("label.replaceButton","Replace"),Uk=p("label.replaceAllButton","Replace All"),Wk=p("label.toggleReplaceButton","Toggle Replace"),jk=p("title.matchesCountLimit","Only the first {0} results are highlighted, but all find operations work on the entire text.",li),zk=p("label.matchesLocation","{0} of {1}"),ax=p("label.noResults","No results"),ci=419,Kk=275,qk=Kk-54,Ld=69,Jk=33,ox="ctrlEnterReplaceAll.windows.donotask",sx=yr?256:2048,Qf=class{constructor(e){this.afterLineNumber=e,this.heightInPx=Jk,this.suppressMouseDown=!1,this.domNode=document.createElement("div"),this.domNode.className="dock-find-viewzone"}};function lx(o,e,t){let r=!!e.match(/\n/);if(t&&r&&t.selectionStart>0){o.stopPropagation();return}}function cx(o,e,t){let r=!!e.match(/\n/);if(t&&r&&t.selectionEnd<t.value.length){o.stopPropagation();return}}var fl=class extends Cr{constructor(e,t,r,n,i,a,s,l,d){super();this._cachedHeight=null,this._revealTimeouts=[],this._codeEditor=e,this._controller=t,this._state=r,this._contextViewProvider=n,this._keybindingService=i,this._contextKeyService=a,this._storageService=l,this._notificationService=d,this._ctrlEnterReplaceAllWarningPrompted=!!l.getBoolean(ox,0),this._isVisible=!1,this._isReplaceVisible=!1,this._ignoreChangeEvent=!1,this._updateHistoryDelayer=new Cn(500),this._register(Ve(()=>this._updateHistoryDelayer.cancel())),this._register(this._state.onFindReplaceStateChange(c=>this._onStateChanged(c))),this._buildDomNode(),this._updateButtons(),this._tryUpdateWidgetWidth(),this._findInput.inputBox.layout(),this._register(this._codeEditor.onDidChangeConfiguration(c=>{if(c.hasChanged(81)&&(this._codeEditor.getOption(81)&&this._state.change({isReplaceRevealed:!1},!1),this._updateButtons()),c.hasChanged(131)&&this._tryUpdateWidgetWidth(),c.hasChanged(2)&&this.updateAccessibilitySupport(),c.hasChanged(35)){let u=this._codeEditor.getOption(35).addExtraSpaceOnTop;u&&!this._viewZone&&(this._viewZone=new Qf(0),this._showViewZone()),!u&&this._viewZone&&this._removeViewZone()}})),this.updateAccessibilitySupport(),this._register(this._codeEditor.onDidChangeCursorSelection(()=>{this._isVisible&&this._updateToggleSelectionFindButton()})),this._register(this._codeEditor.onDidFocusEditorWidget(()=>Dk(this,void 0,void 0,function*(){if(this._isVisible){let c=yield this._controller.getGlobalBufferTerm();c&&c!==this._state.searchString&&(this._state.change({searchString:c},!1),this._findInput.select())}}))),this._findInputFocused=ul.bindTo(a),this._findFocusTracker=this._register(qm(this._findInput.inputBox.inputElement)),this._register(this._findFocusTracker.onDidFocus(()=>{this._findInputFocused.set(!0),this._updateSearchScope()})),this._register(this._findFocusTracker.onDidBlur(()=>{this._findInputFocused.set(!1)})),this._replaceInputFocused=gd.bindTo(a),this._replaceFocusTracker=this._register(qm(this._replaceInput.inputBox.inputElement)),this._register(this._replaceFocusTracker.onDidFocus(()=>{this._replaceInputFocused.set(!0),this._updateSearchScope()})),this._register(this._replaceFocusTracker.onDidBlur(()=>{this._replaceInputFocused.set(!1)})),this._codeEditor.addOverlayWidget(this),this._codeEditor.getOption(35).addExtraSpaceOnTop&&(this._viewZone=new Qf(0)),this._applyTheme(s.getColorTheme()),this._register(s.onDidColorThemeChange(this._applyTheme.bind(this))),this._register(this._codeEditor.onDidChangeModel(()=>{!this._isVisible||(this._viewZoneId=void 0)})),this._register(this._codeEditor.onDidScrollChange(c=>{if(c.scrollTopChanged){this._layoutViewZone();return}setTimeout(()=>{this._layoutViewZone()},0)}))}getId(){return fl.ID}getDomNode(){return this._domNode}getPosition(){return this._isVisible?{preference:0}:null}_onStateChanged(e){if(e.searchString){try{this._ignoreChangeEvent=!0,this._findInput.setValue(this._state.searchString)}finally{this._ignoreChangeEvent=!1}this._updateButtons()}if(e.replaceString&&(this._replaceInput.inputBox.value=this._state.replaceString),e.isRevealed&&(this._state.isRevealed?this._reveal():this._hide(!0)),e.isReplaceRevealed&&(this._state.isReplaceRevealed?!this._codeEditor.getOption(81)&&!this._isReplaceVisible&&(this._isReplaceVisible=!0,this._replaceInput.width=qn(this._findInput.domNode),this._updateButtons(),this._replaceInput.inputBox.layout()):this._isReplaceVisible&&(this._isReplaceVisible=!1,this._updateButtons())),(e.isRevealed||e.isReplaceRevealed)&&(this._state.isRevealed||this._state.isReplaceRevealed)&&this._tryUpdateHeight()&&this._showViewZone(),e.isRegex&&this._findInput.setRegex(this._state.isRegex),e.wholeWord&&this._findInput.setWholeWords(this._state.wholeWord),e.matchCase&&this._findInput.setCaseSensitive(this._state.matchCase),e.preserveCase&&this._replaceInput.setPreserveCase(this._state.preserveCase),e.searchScope&&(this._state.searchScope?this._toggleSelectionFind.checked=!0:this._toggleSelectionFind.checked=!1,this._updateToggleSelectionFindButton()),e.searchString||e.matchesCount||e.matchesPosition){let t=this._state.searchString.length>0&&this._state.matchesCount===0;this._domNode.classList.toggle("no-results",t),this._updateMatchesCount(),this._updateButtons()}(e.searchString||e.currentMatch)&&this._layoutViewZone(),e.updateHistory&&this._delayedUpdateHistory(),e.loop&&this._updateButtons()}_delayedUpdateHistory(){this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(void 0,ce)}_updateHistory(){this._state.searchString&&this._findInput.inputBox.addToHistory(),this._state.replaceString&&this._replaceInput.inputBox.addToHistory()}_updateMatchesCount(){this._matchesCount.style.minWidth=Ld+"px",this._state.matchesCount>=li?this._matchesCount.title=jk:this._matchesCount.title="",this._matchesCount.firstChild&&this._matchesCount.removeChild(this._matchesCount.firstChild);let e;if(this._state.matchesCount>0){let t=String(this._state.matchesCount);this._state.matchesCount>=li&&(t+="+");let r=String(this._state.matchesPosition);r==="0"&&(r="?"),e=zr(zk,r,t)}else e=ax;this._matchesCount.appendChild(document.createTextNode(e)),Tt(this._getAriaLabel(e,this._state.currentMatch,this._state.searchString)),Ld=Math.max(Ld,this._matchesCount.clientWidth)}_getAriaLabel(e,t,r){if(e===ax)return r===""?p("ariaSearchNoResultEmpty","{0} found",e):p("ariaSearchNoResult","{0} found for '{1}'",e,r);if(t){let n=p("ariaSearchNoResultWithLineNum","{0} found for '{1}', at {2}",e,r,t.startLineNumber+":"+t.startColumn),i=this._codeEditor.getModel();return i&&t.startLineNumber<=i.getLineCount()&&t.startLineNumber>=1?`${i.getLineContent(t.startLineNumber)}, ${n}`:n}return p("ariaSearchNoResultWithLineNumNoCurrentMatch","{0} found for '{1}'",e,r)}_updateToggleSelectionFindButton(){let e=this._codeEditor.getSelection(),t=e?e.startLineNumber!==e.endLineNumber||e.startColumn!==e.endColumn:!1,r=this._toggleSelectionFind.checked;this._isVisible&&(r||t)?this._toggleSelectionFind.enable():this._toggleSelectionFind.disable()}_updateButtons(){this._findInput.setEnabled(this._isVisible),this._replaceInput.setEnabled(this._isVisible&&this._isReplaceVisible),this._updateToggleSelectionFindButton(),this._closeBtn.setEnabled(this._isVisible);let e=this._state.searchString.length>0,t=!!this._state.matchesCount;this._prevBtn.setEnabled(this._isVisible&&e&&t&&this._state.canNavigateBack()),this._nextBtn.setEnabled(this._isVisible&&e&&t&&this._state.canNavigateForward()),this._replaceBtn.setEnabled(this._isVisible&&this._isReplaceVisible&&e),this._replaceAllBtn.setEnabled(this._isVisible&&this._isReplaceVisible&&e),this._domNode.classList.toggle("replaceToggled",this._isReplaceVisible),this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);let r=!this._codeEditor.getOption(81);this._toggleReplaceBtn.setEnabled(this._isVisible&&r)}_reveal(){if(this._revealTimeouts.forEach(e=>{clearTimeout(e)}),this._revealTimeouts=[],!this._isVisible){this._isVisible=!0;let e=this._codeEditor.getSelection();switch(this._codeEditor.getOption(35).autoFindInSelection){case"always":this._toggleSelectionFind.checked=!0;break;case"never":this._toggleSelectionFind.checked=!1;break;case"multiline":{let r=!!e&&e.startLineNumber!==e.endLineNumber;this._toggleSelectionFind.checked=r;break}default:break}this._tryUpdateWidgetWidth(),this._updateButtons(),this._revealTimeouts.push(setTimeout(()=>{this._domNode.classList.add("visible"),this._domNode.setAttribute("aria-hidden","false")},0)),this._revealTimeouts.push(setTimeout(()=>{this._findInput.validate()},200)),this._codeEditor.layoutOverlayWidget(this);let t=!0;if(this._codeEditor.getOption(35).seedSearchStringFromSelection&&e){let r=this._codeEditor.getDomNode();if(r){let n=nr(r),i=this._codeEditor.getScrolledVisiblePosition(e.getStartPosition()),a=n.left+(i?i.left:0),s=i?i.top:0;if(this._viewZone&&s<this._viewZone.heightInPx){e.endLineNumber>e.startLineNumber&&(t=!1);let l=fb(this._domNode).left;a>l&&(t=!1);let d=this._codeEditor.getScrolledVisiblePosition(e.getEndPosition());n.left+(d?d.left:0)>l&&(t=!1)}}}this._showViewZone(t)}}_hide(e){this._revealTimeouts.forEach(t=>{clearTimeout(t)}),this._revealTimeouts=[],this._isVisible&&(this._isVisible=!1,this._updateButtons(),this._domNode.classList.remove("visible"),this._domNode.setAttribute("aria-hidden","true"),this._findInput.clearMessage(),e&&this._codeEditor.focus(),this._codeEditor.layoutOverlayWidget(this),this._removeViewZone())}_layoutViewZone(e){if(!this._codeEditor.getOption(35).addExtraSpaceOnTop){this._removeViewZone();return}if(!this._isVisible)return;let r=this._viewZone;this._viewZoneId!==void 0||!r||this._codeEditor.changeViewZones(n=>{r.heightInPx=this._getHeight(),this._viewZoneId=n.addZone(r),this._codeEditor.setScrollTop(e||this._codeEditor.getScrollTop()+r.heightInPx)})}_showViewZone(e=!0){if(!this._isVisible||!this._codeEditor.getOption(35).addExtraSpaceOnTop)return;this._viewZone===void 0&&(this._viewZone=new Qf(0));let r=this._viewZone;this._codeEditor.changeViewZones(n=>{if(this._viewZoneId!==void 0){let i=this._getHeight();if(i===r.heightInPx)return;let a=i-r.heightInPx;r.heightInPx=i,n.layoutZone(this._viewZoneId),e&&this._codeEditor.setScrollTop(this._codeEditor.getScrollTop()+a);return}else{let i=this._getHeight();if(i-=this._codeEditor.getOption(75).top,i<=0)return;r.heightInPx=i,this._viewZoneId=n.addZone(r),e&&this._codeEditor.setScrollTop(this._codeEditor.getScrollTop()+i)}})}_removeViewZone(){this._codeEditor.changeViewZones(e=>{this._viewZoneId!==void 0&&(e.removeZone(this._viewZoneId),this._viewZoneId=void 0,this._viewZone&&(this._codeEditor.setScrollTop(this._codeEditor.getScrollTop()-this._viewZone.heightInPx),this._viewZone=void 0))})}_applyTheme(e){let t={inputActiveOptionBorder:e.getColor(oc),inputActiveOptionBackground:e.getColor(sc),inputActiveOptionForeground:e.getColor(lc),inputBackground:e.getColor(Hu),inputForeground:e.getColor(Uu),inputBorder:e.getColor(Wu),inputValidationInfoBackground:e.getColor(Ab),inputValidationInfoForeground:e.getColor(Ib),inputValidationInfoBorder:e.getColor(kb),inputValidationWarningBackground:e.getColor(Nb),inputValidationWarningForeground:e.getColor(Rb),inputValidationWarningBorder:e.getColor(Pb),inputValidationErrorBackground:e.getColor(Mb),inputValidationErrorForeground:e.getColor(Ob),inputValidationErrorBorder:e.getColor(Fb)};this._findInput.style(t),this._replaceInput.style(t),this._toggleSelectionFind.style(t)}_tryUpdateWidgetWidth(){if(!this._isVisible||!cb(this._domNode))return;let e=this._codeEditor.getLayoutInfo();if(e.contentWidth<=0){this._domNode.classList.add("hiddenEditor");return}else this._domNode.classList.contains("hiddenEditor")&&this._domNode.classList.remove("hiddenEditor");let r=e.width,n=e.minimap.minimapWidth,i=!1,a=!1,s=!1;if(this._resized&&qn(this._domNode)>ci){this._domNode.style.maxWidth=`${r-28-n-15}px`,this._replaceInput.width=qn(this._findInput.domNode);return}if(ci+28+n>=r&&(a=!0),ci+28+n-Ld>=r&&(s=!0),ci+28+n-Ld>=r+50&&(i=!0),this._domNode.classList.toggle("collapsed-find-widget",i),this._domNode.classList.toggle("narrow-find-widget",s),this._domNode.classList.toggle("reduced-find-widget",a),!s&&!i&&(this._domNode.style.maxWidth=`${r-28-n-15}px`),this._resized){this._findInput.inputBox.layout();let l=this._findInput.inputBox.element.clientWidth;l>0&&(this._replaceInput.width=l)}else this._isReplaceVisible&&(this._replaceInput.width=qn(this._findInput.domNode))}_getHeight(){let e=0;return e+=4,e+=this._findInput.inputBox.height+2,this._isReplaceVisible&&(e+=4,e+=this._replaceInput.inputBox.height+2),e+=4,e}_tryUpdateHeight(){let e=this._getHeight();return this._cachedHeight!==null&&this._cachedHeight===e?!1:(this._cachedHeight=e,this._domNode.style.height=`${e}px`,!0)}focusFindInput(){this._findInput.select(),this._findInput.focus()}focusReplaceInput(){this._replaceInput.select(),this._replaceInput.focus()}highlightFindOptions(){this._findInput.highlightFindOptions()}_updateSearchScope(){if(!!this._codeEditor.hasModel()&&this._toggleSelectionFind.checked){let e=this._codeEditor.getSelections();e.map(t=>{t.endColumn===1&&t.endLineNumber>t.startLineNumber&&(t=t.setEndPosition(t.endLineNumber-1,this._codeEditor.getModel().getLineMaxColumn(t.endLineNumber-1)));let r=this._state.currentMatch;return t.startLineNumber!==t.endLineNumber&&!y.equalsRange(t,r)?t:null}).filter(t=>!!t),e.length&&this._state.change({searchScope:e},!0)}}_onFindInputMouseDown(e){e.middleButton&&e.stopPropagation()}_onFindInputKeyDown(e){if(e.equals(sx|3))if(this._keybindingService.dispatchEvent(e,e.target)){e.preventDefault();return}else{this._findInput.inputBox.insertAtCursor(`
`),e.preventDefault();return}if(e.equals(2)){this._isReplaceVisible?this._replaceInput.focus():this._findInput.focusOnCaseSensitive(),e.preventDefault();return}if(e.equals(2066)){this._codeEditor.focus(),e.preventDefault();return}if(e.equals(16))return lx(e,this._findInput.getValue(),this._findInput.domNode.querySelector("textarea"));if(e.equals(18))return cx(e,this._findInput.getValue(),this._findInput.domNode.querySelector("textarea"))}_onReplaceInputKeyDown(e){if(e.equals(sx|3))if(this._keybindingService.dispatchEvent(e,e.target)){e.preventDefault();return}else{hi&&oa&&!this._ctrlEnterReplaceAllWarningPrompted&&(this._notificationService.info(p("ctrlEnter.keybindingChanged","Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.")),this._ctrlEnterReplaceAllWarningPrompted=!0,this._storageService.store(ox,!0,0,0)),this._replaceInput.inputBox.insertAtCursor(`
`),e.preventDefault();return}if(e.equals(2)){this._findInput.focusOnCaseSensitive(),e.preventDefault();return}if(e.equals(1026)){this._findInput.focus(),e.preventDefault();return}if(e.equals(2066)){this._codeEditor.focus(),e.preventDefault();return}if(e.equals(16))return lx(e,this._replaceInput.inputBox.value,this._replaceInput.inputBox.element.querySelector("textarea"));if(e.equals(18))return cx(e,this._replaceInput.inputBox.value,this._replaceInput.inputBox.element.querySelector("textarea"))}getVerticalSashLeft(e){return 0}_keybindingLabelFor(e){let t=this._keybindingService.lookupKeybinding(e);return t?` (${t.getLabel()})`:""}_buildDomNode(){this._findInput=this._register(new Yf(null,this._contextViewProvider,{width:qk,label:Rk,placeholder:Pk,appendCaseSensitiveLabel:this._keybindingLabelFor(Fe.ToggleCaseSensitiveCommand),appendWholeWordsLabel:this._keybindingLabelFor(Fe.ToggleWholeWordCommand),appendRegexLabel:this._keybindingLabelFor(Fe.ToggleRegexCommand),validation:l=>{if(l.length===0||!this._findInput.getRegex())return null;try{return new RegExp(l,"gu"),null}catch(d){return{content:d.message}}},flexibleHeight:!0,flexibleWidth:!0,flexibleMaxHeight:118,showHistoryHint:()=>W_(this._keybindingService)},this._contextKeyService,!0)),this._findInput.setRegex(!!this._state.isRegex),this._findInput.setCaseSensitive(!!this._state.matchCase),this._findInput.setWholeWords(!!this._state.wholeWord),this._register(this._findInput.onKeyDown(l=>this._onFindInputKeyDown(l))),this._register(this._findInput.inputBox.onDidChange(()=>{this._ignoreChangeEvent||this._state.change({searchString:this._findInput.getValue()},!0)})),this._register(this._findInput.onDidOptionChange(()=>{this._state.change({isRegex:this._findInput.getRegex(),wholeWord:this._findInput.getWholeWords(),matchCase:this._findInput.getCaseSensitive()},!0)})),this._register(this._findInput.onCaseSensitiveKeyDown(l=>{l.equals(1026)&&this._isReplaceVisible&&(this._replaceInput.focus(),l.preventDefault())})),this._register(this._findInput.onRegexKeyDown(l=>{l.equals(2)&&this._isReplaceVisible&&(this._replaceInput.focusOnPreserve(),l.preventDefault())})),this._register(this._findInput.inputBox.onDidHeightChange(l=>{this._tryUpdateHeight()&&this._showViewZone()})),Ol&&this._register(this._findInput.onMouseDown(l=>this._onFindInputMouseDown(l))),this._matchesCount=document.createElement("div"),this._matchesCount.className="matchesCount",this._updateMatchesCount(),this._prevBtn=this._register(new Bo({label:Mk+this._keybindingLabelFor(Fe.PreviousMatchFindAction),icon:kk,onTrigger:()=>{this._codeEditor.getAction(Fe.PreviousMatchFindAction).run().then(void 0,ce)}})),this._nextBtn=this._register(new Bo({label:Ok+this._keybindingLabelFor(Fe.NextMatchFindAction),icon:Nk,onTrigger:()=>{this._codeEditor.getAction(Fe.NextMatchFindAction).run().then(void 0,ce)}}));let r=document.createElement("div");r.className="find-part",r.appendChild(this._findInput.domNode);let n=document.createElement("div");n.className="find-actions",r.appendChild(n),n.appendChild(this._matchesCount),n.appendChild(this._prevBtn.domNode),n.appendChild(this._nextBtn.domNode),this._toggleSelectionFind=this._register(new Ki({icon:wk,title:Fk+this._keybindingLabelFor(Fe.ToggleSearchScopeCommand),isChecked:!1})),this._register(this._toggleSelectionFind.onChange(()=>{if(this._toggleSelectionFind.checked){if(this._codeEditor.hasModel()){let l=this._codeEditor.getSelections();l.map(d=>(d.endColumn===1&&d.endLineNumber>d.startLineNumber&&(d=d.setEndPosition(d.endLineNumber-1,this._codeEditor.getModel().getLineMaxColumn(d.endLineNumber-1))),d.isEmpty()?null:d)).filter(d=>!!d),l.length&&this._state.change({searchScope:l},!0)}}else this._state.change({searchScope:null},!0)})),n.appendChild(this._toggleSelectionFind.domNode),this._closeBtn=this._register(new Bo({label:Gk+this._keybindingLabelFor(Fe.CloseFindWidgetCommand),icon:cp,onTrigger:()=>{this._state.change({isRevealed:!1,searchScope:null},!1)},onKeyDown:l=>{l.equals(2)&&this._isReplaceVisible&&(this._replaceBtn.isEnabled()?this._replaceBtn.focus():this._codeEditor.focus(),l.preventDefault())}})),n.appendChild(this._closeBtn.domNode),this._replaceInput=this._register(new $f(null,void 0,{label:Bk,placeholder:Vk,appendPreserveCaseLabel:this._keybindingLabelFor(Fe.TogglePreserveCaseCommand),history:[],flexibleHeight:!0,flexibleWidth:!0,flexibleMaxHeight:118,showHistoryHint:()=>W_(this._keybindingService)},this._contextKeyService,!0)),this._replaceInput.setPreserveCase(!!this._state.preserveCase),this._register(this._replaceInput.onKeyDown(l=>this._onReplaceInputKeyDown(l))),this._register(this._replaceInput.inputBox.onDidChange(()=>{this._state.change({replaceString:this._replaceInput.inputBox.value},!1)})),this._register(this._replaceInput.inputBox.onDidHeightChange(l=>{this._isReplaceVisible&&this._tryUpdateHeight()&&this._showViewZone()})),this._register(this._replaceInput.onDidOptionChange(()=>{this._state.change({preserveCase:this._replaceInput.getPreserveCase()},!0)})),this._register(this._replaceInput.onPreserveCaseKeyDown(l=>{l.equals(2)&&(this._prevBtn.isEnabled()?this._prevBtn.focus():this._nextBtn.isEnabled()?this._nextBtn.focus():this._toggleSelectionFind.enabled?this._toggleSelectionFind.focus():this._closeBtn.isEnabled()&&this._closeBtn.focus(),l.preventDefault())})),this._replaceBtn=this._register(new Bo({label:Hk+this._keybindingLabelFor(Fe.ReplaceOneAction),icon:Ak,onTrigger:()=>{this._controller.replace()},onKeyDown:l=>{l.equals(1026)&&(this._closeBtn.focus(),l.preventDefault())}})),this._replaceAllBtn=this._register(new Bo({label:Uk+this._keybindingLabelFor(Fe.ReplaceAllAction),icon:Ik,onTrigger:()=>{this._controller.replaceAll()}}));let i=document.createElement("div");i.className="replace-part",i.appendChild(this._replaceInput.domNode);let a=document.createElement("div");a.className="replace-actions",i.appendChild(a),a.appendChild(this._replaceBtn.domNode),a.appendChild(this._replaceAllBtn.domNode),this._toggleReplaceBtn=this._register(new Bo({label:Wk,className:"codicon toggle left",onTrigger:()=>{this._state.change({isReplaceRevealed:!this._isReplaceVisible},!1),this._isReplaceVisible&&(this._replaceInput.width=qn(this._findInput.domNode),this._replaceInput.inputBox.layout()),this._showViewZone()}})),this._toggleReplaceBtn.setExpanded(this._isReplaceVisible),this._domNode=document.createElement("div"),this._domNode.className="editor-widget find-widget",this._domNode.setAttribute("aria-hidden","true"),this._domNode.style.width=`${ci}px`,this._domNode.appendChild(this._toggleReplaceBtn.domNode),this._domNode.appendChild(r),this._domNode.appendChild(i),this._resizeSash=new Di(this._domNode,this,{orientation:0,size:2}),this._resized=!1;let s=ci;this._register(this._resizeSash.onDidStart(()=>{s=qn(this._domNode)})),this._register(this._resizeSash.onDidChange(l=>{this._resized=!0;let d=s+l.startX-l.currentX;if(d<ci)return;let c=parseFloat(pb(this._domNode).maxWidth)||0;d>c||(this._domNode.style.width=`${d}px`,this._isReplaceVisible&&(this._replaceInput.width=qn(this._findInput.domNode)),this._findInput.inputBox.layout(),this._tryUpdateHeight())})),this._register(this._resizeSash.onDidReset(()=>{let l=qn(this._domNode);if(l<ci)return;let d=ci;if(!this._resized||l===ci){let c=this._codeEditor.getLayoutInfo();d=c.width-28-c.minimap.minimapWidth-15,this._resized=!0}this._domNode.style.width=`${d}px`,this._isReplaceVisible&&(this._replaceInput.width=qn(this._findInput.domNode)),this._findInput.inputBox.layout()}))}updateAccessibilitySupport(){let e=this._codeEditor.getOption(2);this._findInput.setFocusInputOnOptionClick(e!==2)}};fl.ID="editor.contrib.findWidget";var Bo=class extends Cr{constructor(e){super();this._opts=e;let t="button";this._opts.className&&(t=t+" "+this._opts.className),this._opts.icon&&(t=t+" "+it.asClassName(this._opts.icon)),this._domNode=document.createElement("div"),this._domNode.title=this._opts.label,this._domNode.tabIndex=0,this._domNode.className=t,this._domNode.setAttribute("role","button"),this._domNode.setAttribute("aria-label",this._opts.label),this.onclick(this._domNode,r=>{this._opts.onTrigger(),r.preventDefault()}),this.onkeydown(this._domNode,r=>{if(r.equals(10)||r.equals(3)){this._opts.onTrigger(),r.preventDefault();return}this._opts.onKeyDown&&this._opts.onKeyDown(r)})}get domNode(){return this._domNode}isEnabled(){return this._domNode.tabIndex>=0}focus(){this._domNode.focus()}setEnabled(e){this._domNode.classList.toggle("disabled",!e),this._domNode.setAttribute("aria-disabled",String(!e)),this._domNode.tabIndex=e?0:-1}setExpanded(e){this._domNode.setAttribute("aria-expanded",String(!!e)),e?(this._domNode.classList.remove(...it.asClassNameArray(nx)),this._domNode.classList.add(...it.asClassNameArray(ix))):(this._domNode.classList.remove(...it.asClassNameArray(ix)),this._domNode.classList.add(...it.asClassNameArray(nx)))}};ke((o,e)=>{let t=(g,b)=>{b&&e.addRule(`.monaco-editor ${g} { background-color: ${b}; }`)};t(".findMatch",o.getColor(qb)),t(".currentFindMatch",o.getColor(Kb)),t(".findScope",o.getColor(Jb));let r=o.getColor(dn);t(".find-widget",r);let n=o.getColor(ga);n&&e.addRule(`.monaco-editor .find-widget { box-shadow: 0 0 8px 2px ${n}; }`);let i=o.getColor(Yb);i&&e.addRule(`.monaco-editor .findMatch { border: 1px ${o.type==="hc"?"dotted":"solid"} ${i}; box-sizing: border-box; }`);let a=o.getColor(Xb);a&&e.addRule(`.monaco-editor .currentFindMatch { border: 2px solid ${a}; padding: 1px; box-sizing: border-box; }`);let s=o.getColor($b);s&&e.addRule(`.monaco-editor .findScope { border: 1px ${o.type==="hc"?"dashed":"solid"} ${s}; }`);let l=o.getColor(cn);l&&e.addRule(`.monaco-editor .find-widget { border: 1px solid ${l}; }`);let d=o.getColor(Cs);d&&e.addRule(`.monaco-editor .find-widget { color: ${d}; }`);let c=o.getColor(Db);c&&e.addRule(`.monaco-editor .find-widget.no-results .matchesCount { color: ${c}; }`);let u=o.getColor(Wb);if(u)e.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${u}; }`);else{let g=o.getColor(Ls);g&&e.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${g}; }`)}let f=o.getColor(l1);f&&e.addRule(`
		.monaco-editor .find-widget .button:not(.disabled):hover,
		.monaco-editor .find-widget .codicon-find-selection:hover {
			background-color: ${f} !important;
		}
	`);let m=o.getColor(wb);m&&e.addRule(`.monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: ${m}; }`)});Z();ar();Le();qr();Oe();var dx=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},di=function(o,e){return function(t,r){e(t,r,o)}},Vo=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},Xk=524288;function j_(o,e="single",t=!1){if(!o.hasModel())return null;let r=o.getSelection();if(e==="single"&&r.startLineNumber===r.endLineNumber||e==="multiple"){if(r.isEmpty()){let n=o.getConfiguredWordAtPosition(r.getStartPosition());if(n&&t===!1)return n.word}else if(o.getModel().getValueLengthInRange(r)<Xk)return o.getModel().getValueInRange(r)}return null}var br=class ux extends F{constructor(e,t,r,n){super();this._editor=e,this._findWidgetVisible=zi.bindTo(t),this._contextKeyService=t,this._storageService=r,this._clipboardService=n,this._updateHistoryDelayer=new Cn(500),this._state=this._register(new V_),this.loadQueryState(),this._register(this._state.onFindReplaceStateChange(i=>this._onStateChanged(i))),this._model=null,this._register(this._editor.onDidChangeModel(()=>{let i=this._editor.getModel()&&this._state.isRevealed;this.disposeModel(),this._state.change({searchScope:null,matchCase:this._storageService.getBoolean("editor.matchCase",1,!1),wholeWord:this._storageService.getBoolean("editor.wholeWord",1,!1),isRegex:this._storageService.getBoolean("editor.isRegex",1,!1),preserveCase:this._storageService.getBoolean("editor.preserveCase",1,!1)},!1),i&&this._start({forceRevealReplace:!1,seedSearchStringFromSelection:"none",seedSearchStringFromNonEmptySelection:!1,seedSearchStringFromGlobalClipboard:!1,shouldFocus:0,shouldAnimate:!1,updateSearchScope:!1,loop:this._editor.getOption(35).loop})}))}get editor(){return this._editor}static get(e){return e.getContribution(ux.ID)}dispose(){this.disposeModel(),super.dispose()}disposeModel(){this._model&&(this._model.dispose(),this._model=null)}_onStateChanged(e){this.saveQueryState(e),e.isRevealed&&(this._state.isRevealed?this._findWidgetVisible.set(!0):(this._findWidgetVisible.reset(),this.disposeModel())),e.searchString&&this.setGlobalBufferTerm(this._state.searchString)}saveQueryState(e){e.isRegex&&this._storageService.store("editor.isRegex",this._state.actualIsRegex,1,0),e.wholeWord&&this._storageService.store("editor.wholeWord",this._state.actualWholeWord,1,0),e.matchCase&&this._storageService.store("editor.matchCase",this._state.actualMatchCase,1,0),e.preserveCase&&this._storageService.store("editor.preserveCase",this._state.actualPreserveCase,1,0)}loadQueryState(){this._state.change({matchCase:this._storageService.getBoolean("editor.matchCase",1,this._state.matchCase),wholeWord:this._storageService.getBoolean("editor.wholeWord",1,this._state.wholeWord),isRegex:this._storageService.getBoolean("editor.isRegex",1,this._state.isRegex),preserveCase:this._storageService.getBoolean("editor.preserveCase",1,this._state.preserveCase)},!1)}isFindInputFocused(){return!!ul.getValue(this._contextKeyService)}getState(){return this._state}closeFindWidget(){this._state.change({isRevealed:!1,searchScope:null},!1),this._editor.focus()}toggleCaseSensitive(){this._state.change({matchCase:!this._state.matchCase},!1),this._state.isRevealed||this.highlightFindOptions()}toggleWholeWords(){this._state.change({wholeWord:!this._state.wholeWord},!1),this._state.isRevealed||this.highlightFindOptions()}toggleRegex(){this._state.change({isRegex:!this._state.isRegex},!1),this._state.isRevealed||this.highlightFindOptions()}togglePreserveCase(){this._state.change({preserveCase:!this._state.preserveCase},!1),this._state.isRevealed||this.highlightFindOptions()}toggleSearchScope(){if(this._state.searchScope)this._state.change({searchScope:null},!0);else if(this._editor.hasModel()){let e=this._editor.getSelections();e.map(t=>(t.endColumn===1&&t.endLineNumber>t.startLineNumber&&(t=t.setEndPosition(t.endLineNumber-1,this._editor.getModel().getLineMaxColumn(t.endLineNumber-1))),t.isEmpty()?null:t)).filter(t=>!!t),e.length&&this._state.change({searchScope:e},!0)}}setSearchString(e){this._state.isRegex&&(e=yi(e)),this._state.change({searchString:e},!1)}highlightFindOptions(e=!1){}_start(e,t){return Vo(this,void 0,void 0,function*(){if(this.disposeModel(),!this._editor.hasModel())return;let r=Object.assign(Object.assign({},t),{isRevealed:!0});if(e.seedSearchStringFromSelection==="single"){let n=j_(this._editor,e.seedSearchStringFromSelection,e.seedSearchStringFromNonEmptySelection);n&&(this._state.isRegex?r.searchString=yi(n):r.searchString=n)}else if(e.seedSearchStringFromSelection==="multiple"&&!e.updateSearchScope){let n=j_(this._editor,e.seedSearchStringFromSelection);n&&(r.searchString=n)}if(!r.searchString&&e.seedSearchStringFromGlobalClipboard){let n=yield this.getGlobalBufferTerm();if(!this._editor.hasModel())return;n&&(r.searchString=n)}if(e.forceRevealReplace||r.isReplaceRevealed?r.isReplaceRevealed=!0:this._findWidgetVisible.get()||(r.isReplaceRevealed=!1),e.updateSearchScope){let n=this._editor.getSelections();n.some(i=>!i.isEmpty())&&(r.searchScope=n)}r.loop=e.loop,this._state.change(r,!1),this._model||(this._model=new Go(this._editor,this._state))})}start(e,t){return this._start(e,t)}moveToNextMatch(){return this._model?(this._model.moveToNextMatch(),!0):!1}moveToPrevMatch(){return this._model?(this._model.moveToPrevMatch(),!0):!1}replace(){return this._model?(this._model.replace(),!0):!1}replaceAll(){return this._model?(this._model.replaceAll(),!0):!1}selectAllMatches(){return this._model?(this._model.selectAllMatches(),this._editor.focus(),!0):!1}getGlobalBufferTerm(){return Vo(this,void 0,void 0,function*(){return this._editor.getOption(35).globalFindClipboard&&this._editor.hasModel()&&!this._editor.getModel().isTooLargeForSyncing()?this._clipboardService.readFindText():""})}setGlobalBufferTerm(e){this._editor.getOption(35).globalFindClipboard&&this._editor.hasModel()&&!this._editor.getModel().isTooLargeForSyncing()&&this._clipboardService.writeFindText(e)}};br.ID="editor.contrib.findController";br=dx([di(1,re),di(2,lr),di(3,po)],br);var z_=class extends br{constructor(e,t,r,n,i,a,s,l){super(e,r,s,l);this._contextViewService=t,this._keybindingService=n,this._themeService=i,this._notificationService=a,this._widget=null,this._findOptionsWidget=null}_start(e,t){let r=Object.create(null,{_start:{get:()=>super._start}});return Vo(this,void 0,void 0,function*(){this._widget||this._createFindWidget();let n=this._editor.getSelection(),i=!1;switch(this._editor.getOption(35).autoFindInSelection){case"always":i=!0;break;case"never":i=!1;break;case"multiline":{i=!!n&&n.startLineNumber!==n.endLineNumber;break}default:break}e.updateSearchScope=e.updateSearchScope||i,yield r._start.call(this,e,t),this._widget&&(e.shouldFocus===2?this._widget.focusReplaceInput():e.shouldFocus===1&&this._widget.focusFindInput())})}highlightFindOptions(e=!1){this._widget||this._createFindWidget(),this._state.isRevealed&&!e?this._widget.highlightFindOptions():this._findOptionsWidget.highlightFindOptions()}_createFindWidget(){this._widget=this._register(new fl(this._editor,this,this._state,this._contextViewService,this._keybindingService,this._contextKeyService,this._themeService,this._storageService,this._notificationService)),this._findOptionsWidget=this._register(new pl(this._editor,this._state,this._keybindingService,this._themeService))}};z_=dx([di(1,up),di(2,re),di(3,at),di(4,Ot),di(5,$e),di(6,lr),di(7,po)],z_);var Yk=Xm(new Jm({id:Fe.StartFindAction,label:p("startFindAction","Find"),alias:"Find",precondition:G.or(v.focus,G.has("editorIsOpen")),kbOpts:{kbExpr:null,primary:2084,weight:100},menuOpts:{menuId:oe.MenubarEditMenu,group:"3_find",title:p({key:"miFind",comment:["&& denotes a mnemonic"]},"&&Find"),order:1}}));Yk.addImplementation(0,(o,e,t)=>{let r=br.get(e);return r?r.start({forceRevealReplace:!1,seedSearchStringFromSelection:e.getOption(35).seedSearchStringFromSelection!=="never"?"single":"none",seedSearchStringFromNonEmptySelection:e.getOption(35).seedSearchStringFromSelection==="selection",seedSearchStringFromGlobalClipboard:e.getOption(35).globalFindClipboard,shouldFocus:1,shouldAnimate:!0,updateSearchScope:!1,loop:e.getOption(35).loop}):!1});var $k={description:"Open a new In-Editor Find Widget.",args:[{name:"Open a new In-Editor Find Widget args",schema:{properties:{searchString:{type:"string"},replaceString:{type:"string"},regex:{type:"boolean"},regexOverride:{type:"number",description:p("actions.find.isRegexOverride",`Overrides "Use Regular Expression" flag.
The flag will not be saved for the future.
0: Do Nothing
1: True
2: False`)},wholeWord:{type:"boolean"},wholeWordOverride:{type:"number",description:p("actions.find.wholeWordOverride",`Overrides "Match Whole Word" flag.
The flag will not be saved for the future.
0: Do Nothing
1: True
2: False`)},matchCase:{type:"boolean"},matchCaseOverride:{type:"number",description:p("actions.find.matchCaseOverride",`Overrides "Math Case" flag.
The flag will not be saved for the future.
0: Do Nothing
1: True
2: False`)},preserveCase:{type:"boolean"},preserveCaseOverride:{type:"number",description:p("actions.find.preserveCaseOverride",`Overrides "Preserve Case" flag.
The flag will not be saved for the future.
0: Do Nothing
1: True
2: False`)},findInSelection:{type:"boolean"}}}}]},px=class extends M{constructor(){super({id:Fe.StartFindWithArgs,label:p("startFindWithArgsAction","Find With Arguments"),alias:"Find With Arguments",precondition:void 0,kbOpts:{kbExpr:null,primary:0,weight:100},description:$k})}run(e,t,r){return Vo(this,void 0,void 0,function*(){let n=br.get(t);if(n){let i=r?{searchString:r.searchString,replaceString:r.replaceString,isReplaceRevealed:r.replaceString!==void 0,isRegex:r.isRegex,wholeWord:r.matchWholeWord,matchCase:r.isCaseSensitive,preserveCase:r.preserveCase}:{};yield n.start({forceRevealReplace:!1,seedSearchStringFromSelection:n.getState().searchString.length===0&&t.getOption(35).seedSearchStringFromSelection!=="never"?"single":"none",seedSearchStringFromNonEmptySelection:t.getOption(35).seedSearchStringFromSelection==="selection",seedSearchStringFromGlobalClipboard:!0,shouldFocus:1,shouldAnimate:!0,updateSearchScope:(r==null?void 0:r.findInSelection)||!1,loop:t.getOption(35).loop},i),n.setGlobalBufferTerm(n.getState().searchString)}})}},fx=class extends M{constructor(){super({id:Fe.StartFindWithSelection,label:p("startFindWithSelectionAction","Find With Selection"),alias:"Find With Selection",precondition:void 0,kbOpts:{kbExpr:null,primary:0,mac:{primary:2083},weight:100}})}run(e,t){return Vo(this,void 0,void 0,function*(){let r=br.get(t);r&&(yield r.start({forceRevealReplace:!1,seedSearchStringFromSelection:"multiple",seedSearchStringFromNonEmptySelection:!1,seedSearchStringFromGlobalClipboard:!1,shouldFocus:0,shouldAnimate:!0,updateSearchScope:!1,loop:t.getOption(35).loop}),r.setGlobalBufferTerm(r.getState().searchString))})}},K_=class extends M{run(e,t){return Vo(this,void 0,void 0,function*(){let r=br.get(t);r&&!this._run(r)&&(yield r.start({forceRevealReplace:!1,seedSearchStringFromSelection:r.getState().searchString.length===0&&t.getOption(35).seedSearchStringFromSelection!=="never"?"single":"none",seedSearchStringFromNonEmptySelection:t.getOption(35).seedSearchStringFromSelection==="selection",seedSearchStringFromGlobalClipboard:!0,shouldFocus:0,shouldAnimate:!0,updateSearchScope:!1,loop:t.getOption(35).loop}),this._run(r))})}},mx=class extends K_{constructor(){super({id:Fe.NextMatchFindAction,label:p("findNextMatchAction","Find Next"),alias:"Find Next",precondition:void 0,kbOpts:[{kbExpr:v.focus,primary:61,mac:{primary:2085,secondary:[61]},weight:100},{kbExpr:G.and(v.focus,ul),primary:3,weight:100}]})}_run(e){return e.moveToNextMatch()?(e.editor.pushUndoStop(),!0):!1}},hx=class extends K_{constructor(){super({id:Fe.PreviousMatchFindAction,label:p("findPreviousMatchAction","Find Previous"),alias:"Find Previous",precondition:void 0,kbOpts:[{kbExpr:v.focus,primary:1085,mac:{primary:3109,secondary:[1085]},weight:100},{kbExpr:G.and(v.focus,ul),primary:1027,weight:100}]})}_run(e){return e.moveToPrevMatch()}},q_=class extends M{run(e,t){return Vo(this,void 0,void 0,function*(){let r=br.get(t);if(!r)return;let n=t.getOption(35).seedSearchStringFromSelection==="selection",i=null;t.getOption(35).seedSearchStringFromSelection!=="never"&&(i=j_(t,"single",n)),i&&r.setSearchString(i),this._run(r)||(yield r.start({forceRevealReplace:!1,seedSearchStringFromSelection:t.getOption(35).seedSearchStringFromSelection!=="never"?"single":"none",seedSearchStringFromNonEmptySelection:n,seedSearchStringFromGlobalClipboard:!1,shouldFocus:0,shouldAnimate:!0,updateSearchScope:!1,loop:t.getOption(35).loop}),this._run(r))})}},gx=class extends q_{constructor(){super({id:Fe.NextSelectionMatchFindAction,label:p("nextSelectionMatchFindAction","Find Next Selection"),alias:"Find Next Selection",precondition:void 0,kbOpts:{kbExpr:v.focus,primary:2109,weight:100}})}_run(e){return e.moveToNextMatch()}},_x=class extends q_{constructor(){super({id:Fe.PreviousSelectionMatchFindAction,label:p("previousSelectionMatchFindAction","Find Previous Selection"),alias:"Find Previous Selection",precondition:void 0,kbOpts:{kbExpr:v.focus,primary:3133,weight:100}})}_run(e){return e.moveToPrevMatch()}},Qk=Xm(new Jm({id:Fe.StartFindReplaceAction,label:p("startReplace","Replace"),alias:"Replace",precondition:G.or(v.focus,G.has("editorIsOpen")),kbOpts:{kbExpr:null,primary:2086,mac:{primary:2596},weight:100},menuOpts:{menuId:oe.MenubarEditMenu,group:"3_find",title:p({key:"miReplace",comment:["&& denotes a mnemonic"]},"&&Replace"),order:2}}));Qk.addImplementation(0,(o,e,t)=>{if(!e.hasModel()||e.getOption(81))return!1;let r=br.get(e);if(!r)return!1;let n=e.getSelection(),i=r.isFindInputFocused(),a=!n.isEmpty()&&n.startLineNumber===n.endLineNumber&&e.getOption(35).seedSearchStringFromSelection!=="never"&&!i,s=i||a?2:1;return r.start({forceRevealReplace:!0,seedSearchStringFromSelection:a?"single":"none",seedSearchStringFromNonEmptySelection:e.getOption(35).seedSearchStringFromSelection==="selection",seedSearchStringFromGlobalClipboard:e.getOption(35).seedSearchStringFromSelection!=="never",shouldFocus:s,shouldAnimate:!0,updateSearchScope:!1,loop:e.getOption(35).loop})});Q(br.ID,z_);D(px);D(fx);D(mx);D(hx);D(gx);D(_x);var Vn=dt.bindToContribution(br.get);K(new Vn({id:Fe.CloseFindWidgetCommand,precondition:zi,handler:o=>o.closeFindWidget(),kbOpts:{weight:100+5,kbExpr:G.and(v.focus,G.not("isComposing")),primary:9,secondary:[1033]}}));K(new Vn({id:Fe.ToggleCaseSensitiveCommand,precondition:void 0,handler:o=>o.toggleCaseSensitive(),kbOpts:{weight:100+5,kbExpr:v.focus,primary:_d.primary,mac:_d.mac,win:_d.win,linux:_d.linux}}));K(new Vn({id:Fe.ToggleWholeWordCommand,precondition:void 0,handler:o=>o.toggleWholeWords(),kbOpts:{weight:100+5,kbExpr:v.focus,primary:yd.primary,mac:yd.mac,win:yd.win,linux:yd.linux}}));K(new Vn({id:Fe.ToggleRegexCommand,precondition:void 0,handler:o=>o.toggleRegex(),kbOpts:{weight:100+5,kbExpr:v.focus,primary:vd.primary,mac:vd.mac,win:vd.win,linux:vd.linux}}));K(new Vn({id:Fe.ToggleSearchScopeCommand,precondition:void 0,handler:o=>o.toggleSearchScope(),kbOpts:{weight:100+5,kbExpr:v.focus,primary:bd.primary,mac:bd.mac,win:bd.win,linux:bd.linux}}));K(new Vn({id:Fe.TogglePreserveCaseCommand,precondition:void 0,handler:o=>o.togglePreserveCase(),kbOpts:{weight:100+5,kbExpr:v.focus,primary:Sd.primary,mac:Sd.mac,win:Sd.win,linux:Sd.linux}}));K(new Vn({id:Fe.ReplaceOneAction,precondition:zi,handler:o=>o.replace(),kbOpts:{weight:100+5,kbExpr:v.focus,primary:3094}}));K(new Vn({id:Fe.ReplaceOneAction,precondition:zi,handler:o=>o.replace(),kbOpts:{weight:100+5,kbExpr:G.and(v.focus,gd),primary:3}}));K(new Vn({id:Fe.ReplaceAllAction,precondition:zi,handler:o=>o.replaceAll(),kbOpts:{weight:100+5,kbExpr:v.focus,primary:2563}}));K(new Vn({id:Fe.ReplaceAllAction,precondition:zi,handler:o=>o.replaceAll(),kbOpts:{weight:100+5,kbExpr:G.and(v.focus,gd),primary:void 0,mac:{primary:2051}}}));K(new Vn({id:Fe.SelectAllMatchesAction,precondition:zi,handler:o=>o.selectAllMatches(),kbOpts:{weight:100+5,kbExpr:v.focus,primary:515}}));we();Ae();gi();W();Ye();Jt();pe();Be();Re();on();Ne();var qi=class{constructor(e,t,r){if(e.length!==t.length||e.length>65535)throw new Error("invalid startIndexes or endIndexes size");this._startIndexes=e,this._endIndexes=t,this._collapseStates=new Uint32Array(Math.ceil(e.length/32)),this._types=r,this._parentsComputed=!1}ensureParentIndices(){if(!this._parentsComputed){this._parentsComputed=!0;let e=[],t=(r,n)=>{let i=e[e.length-1];return this.getStartLineNumber(i)<=r&&this.getEndLineNumber(i)>=n};for(let r=0,n=this._startIndexes.length;r<n;r++){let i=this._startIndexes[r],a=this._endIndexes[r];if(i>16777215||a>16777215)throw new Error("startLineNumber or endLineNumber must not exceed "+16777215);for(;e.length>0&&!t(i,a);)e.pop();let s=e.length>0?e[e.length-1]:-1;e.push(r),this._startIndexes[r]=i+((s&255)<<24),this._endIndexes[r]=a+((s&65280)<<16)}}}get length(){return this._startIndexes.length}getStartLineNumber(e){return this._startIndexes[e]&16777215}getEndLineNumber(e){return this._endIndexes[e]&16777215}getType(e){return this._types?this._types[e]:void 0}hasTypes(){return!!this._types}isCollapsed(e){let t=e/32|0,r=e%32;return(this._collapseStates[t]&1<<r)!==0}setCollapsed(e,t){let r=e/32|0,n=e%32,i=this._collapseStates[r];t?this._collapseStates[r]=i|1<<n:this._collapseStates[r]=i&~(1<<n)}setCollapsedAllOfType(e,t){let r=!1;if(this._types)for(let n=0;n<this._types.length;n++)this._types[n]===e&&(this.setCollapsed(n,t),r=!0);return r}toRegion(e){return new yx(this,e)}getParentIndex(e){this.ensureParentIndices();let t=((this._startIndexes[e]&4278190080)>>>24)+((this._endIndexes[e]&4278190080)>>>16);return t===65535?-1:t}contains(e,t){return this.getStartLineNumber(e)<=t&&this.getEndLineNumber(e)>=t}findIndex(e){let t=0,r=this._startIndexes.length;if(r===0)return-1;for(;t<r;){let n=Math.floor((t+r)/2);e<this.getStartLineNumber(n)?r=n:t=n+1}return t-1}findRange(e){let t=this.findIndex(e);if(t>=0){if(this.getEndLineNumber(t)>=e)return t;for(t=this.getParentIndex(t);t!==-1;){if(this.contains(t,e))return t;t=this.getParentIndex(t)}}return-1}toString(){let e=[];for(let t=0;t<this.length;t++)e[t]=`[${this.isCollapsed(t)?"+":"-"}] ${this.getStartLineNumber(t)}/${this.getEndLineNumber(t)}`;return e.join(", ")}},yx=class{constructor(e,t){this.ranges=e,this.index=t}get startLineNumber(){return this.ranges.getStartLineNumber(this.index)}get endLineNumber(){return this.ranges.getEndLineNumber(this.index)}get regionIndex(){return this.index}get parentIndex(){return this.ranges.getParentIndex(this.index)}get isCollapsed(){return this.ranges.isCollapsed(this.index)}containedBy(e){return e.startLineNumber<=this.startLineNumber&&e.endLineNumber>=this.endLineNumber}containsLine(e){return this.startLineNumber<=e&&e<=this.endLineNumber}};var J_=class{constructor(e,t){this._updateEventEmitter=new j,this.onDidChange=this._updateEventEmitter.event,this._textModel=e,this._decorationProvider=t,this._regions=new qi(new Uint32Array(0),new Uint32Array(0)),this._editorDecorationIds=[],this._isInitialized=!1}get regions(){return this._regions}get textModel(){return this._textModel}get isInitialized(){return this._isInitialized}toggleCollapseState(e){if(!e.length)return;e=e.sort((r,n)=>r.regionIndex-n.regionIndex);let t={};this._decorationProvider.changeDecorations(r=>{let n=0,i=-1,a=-1,s=l=>{for(;n<l;){let d=this._regions.getEndLineNumber(n),c=this._regions.isCollapsed(n);d<=i&&r.changeDecorationOptions(this._editorDecorationIds[n],this._decorationProvider.getDecorationOption(c,d<=a)),c&&d>a&&(a=d),n++}};for(let l of e){let d=l.regionIndex,c=this._editorDecorationIds[d];if(c&&!t[c]){t[c]=!0,s(d);let u=!this._regions.isCollapsed(d);this._regions.setCollapsed(d,u),i=Math.max(i,this._regions.getEndLineNumber(d))}}s(this._regions.length)}),this._updateEventEmitter.fire({model:this,collapseStateChanged:e})}update(e,t=[]){let r=[],n=(u,f)=>{for(let m of t)if(u<m&&m<=f)return!0;return!1},i=-1,a=(u,f)=>{let m=e.getStartLineNumber(u),g=e.getEndLineNumber(u);f||(f=e.isCollapsed(u)),f&&n(m,g)&&(f=!1),e.setCollapsed(u,f);let b=this._textModel.getLineMaxColumn(m),T={startLineNumber:m,startColumn:Math.max(b-1,1),endLineNumber:m,endColumn:b};r.push({range:T,options:this._decorationProvider.getDecorationOption(f,g<=i)}),f&&g>i&&(i=g)},s=0,l=()=>{for(;s<this._regions.length;){let u=this._regions.isCollapsed(s);if(s++,u)return s-1}return-1},d=0,c=l();for(;c!==-1&&d<e.length;){let u=this._textModel.getDecorationRange(this._editorDecorationIds[c]);if(u){let f=u.startLineNumber;if(u.startColumn===Math.max(u.endColumn-1,1)&&this._textModel.getLineMaxColumn(f)===u.endColumn)for(;d<e.length;){let m=e.getStartLineNumber(d);if(f>=m)a(d,f===m),d++;else break}}c=l()}for(;d<e.length;)a(d,!1),d++;this._editorDecorationIds=this._decorationProvider.deltaDecorations(this._editorDecorationIds,r),this._regions=e,this._isInitialized=!0,this._updateEventEmitter.fire({model:this})}getMemento(){let e=[];for(let t=0;t<this._regions.length;t++)if(this._regions.isCollapsed(t)){let r=this._textModel.getDecorationRange(this._editorDecorationIds[t]);if(r){let n=r.startLineNumber,i=r.endLineNumber+this._regions.getEndLineNumber(t)-this._regions.getStartLineNumber(t);e.push({startLineNumber:n,endLineNumber:i})}}if(e.length>0)return e}applyMemento(e){if(!Array.isArray(e))return;let t=[];for(let r of e){let n=this.getRegionAtLine(r.startLineNumber);n&&!n.isCollapsed&&t.push(n)}this.toggleCollapseState(t)}dispose(){this._decorationProvider.deltaDecorations(this._editorDecorationIds,[])}getAllRegionsAtLine(e,t){let r=[];if(this._regions){let n=this._regions.findRange(e),i=1;for(;n>=0;){let a=this._regions.toRegion(n);(!t||t(a,i))&&r.push(a),i++,n=a.parentIndex}}return r}getRegionAtLine(e){if(this._regions){let t=this._regions.findRange(e);if(t>=0)return this._regions.toRegion(t)}return null}getRegionsInside(e,t){let r=[],n=e?e.regionIndex+1:0,i=e?e.endLineNumber:Number.MAX_VALUE;if(t&&t.length===2){let a=[];for(let s=n,l=this._regions.length;s<l;s++){let d=this._regions.toRegion(s);if(this._regions.getStartLineNumber(s)<i){for(;a.length>0&&!d.containedBy(a[a.length-1]);)a.pop();a.push(d),t(d,a.length)&&r.push(d)}else break}}else for(let a=n,s=this._regions.length;a<s;a++){let l=this._regions.toRegion(a);if(this._regions.getStartLineNumber(a)<i)(!t||t(l))&&r.push(l);else break}return r}};function vx(o,e,t){let r=[];for(let n of t){let i=o.getRegionAtLine(n);if(i){let a=!i.isCollapsed;if(r.push(i),e>1){let s=o.getRegionsInside(i,(l,d)=>l.isCollapsed!==a&&d<e);r.push(...s)}}}o.toggleCollapseState(r)}function Ho(o,e,t=Number.MAX_VALUE,r){let n=[];if(r&&r.length>0)for(let i of r){let a=o.getRegionAtLine(i);if(a&&(a.isCollapsed!==e&&n.push(a),t>1)){let s=o.getRegionsInside(a,(l,d)=>l.isCollapsed!==e&&d<t);n.push(...s)}}else{let i=o.getRegionsInside(null,(a,s)=>a.isCollapsed!==e&&s<t);n.push(...i)}o.toggleCollapseState(n)}function X_(o,e,t,r){let n=[];for(let i of r){let a=o.getAllRegionsAtLine(i,(s,l)=>s.isCollapsed!==e&&l<=t);n.push(...a)}o.toggleCollapseState(n)}function bx(o,e,t){let r=[];for(let n of t){let i=o.getAllRegionsAtLine(n,a=>a.isCollapsed!==e);i.length>0&&r.push(i[0])}o.toggleCollapseState(r)}function Sx(o,e,t,r){let n=(a,s)=>s===e&&a.isCollapsed!==t&&!r.some(l=>a.containsLine(l)),i=o.getRegionsInside(null,n);o.toggleCollapseState(i)}function Y_(o,e,t){let r=[];for(let a of t){let s=o.getAllRegionsAtLine(a,void 0);s.length>0&&r.push(s[0])}let n=a=>r.every(s=>!s.containedBy(a)&&!a.containedBy(s))&&a.isCollapsed!==e,i=o.getRegionsInside(null,n);o.toggleCollapseState(i)}function Zf(o,e,t){let r=o.textModel,n=o.regions,i=[];for(let a=n.length-1;a>=0;a--)if(t!==n.isCollapsed(a)){let s=n.getStartLineNumber(a);e.test(r.getLineContent(s))&&i.push(n.toRegion(a))}o.toggleCollapseState(i)}function em(o,e,t){let r=o.regions,n=[];for(let i=r.length-1;i>=0;i--)t!==r.isCollapsed(i)&&e===r.getType(i)&&n.push(r.toRegion(i));o.toggleCollapseState(n)}function Ex(o,e){let t=null,r=e.getRegionAtLine(o);if(r!==null&&(t=r.startLineNumber,o===t)){let n=r.parentIndex;n!==-1?t=e.regions.getStartLineNumber(n):t=null}return t}function Tx(o,e){let t=e.getRegionAtLine(o);if(t!==null&&t.startLineNumber===o){if(o!==t.startLineNumber)return t.startLineNumber;{let r=t.parentIndex,n=0;for(r!==-1&&(n=e.regions.getStartLineNumber(t.parentIndex));t!==null;)if(t.regionIndex>0){if(t=e.regions.toRegion(t.regionIndex-1),t.startLineNumber<=n)return null;if(t.parentIndex===r)return t.startLineNumber}else return null}}else if(e.regions.length>0)for(t=e.regions.toRegion(e.regions.length-1);t!==null;){if(t.startLineNumber<o)return t.startLineNumber;t.regionIndex>0?t=e.regions.toRegion(t.regionIndex-1):t=null}return null}function xx(o,e){let t=e.getRegionAtLine(o);if(t!==null&&t.startLineNumber===o){let r=t.parentIndex,n=0;if(r!==-1)n=e.regions.getEndLineNumber(t.parentIndex);else{if(e.regions.length===0)return null;n=e.regions.getEndLineNumber(e.regions.length-1)}for(;t!==null;)if(t.regionIndex<e.regions.length){if(t=e.regions.toRegion(t.regionIndex+1),t.startLineNumber>=n)return null;if(t.parentIndex===r)return t.startLineNumber}else return null}else if(e.regions.length>0)for(t=e.regions.toRegion(0);t!==null;){if(t.startLineNumber>o)return t.startLineNumber;t.regionIndex<e.regions.length?t=e.regions.toRegion(t.regionIndex+1):t=null}return null}bt();Ne();ee();lD();var $_=class{constructor(e){this._updateEventEmitter=new j,this._hasLineChanges=!1,this._foldingModel=e,this._foldingModelListener=e.onDidChange(t=>this.updateHiddenRanges()),this._hiddenRanges=[],e.regions.length&&this.updateHiddenRanges()}get onDidChange(){return this._updateEventEmitter.event}get hiddenRanges(){return this._hiddenRanges}notifyChangeModelContent(e){this._hiddenRanges.length&&!this._hasLineChanges&&(this._hasLineChanges=e.changes.some(t=>t.range.endLineNumber!==t.range.startLineNumber||w1(t.text)[0]!==0))}updateHiddenRanges(){let e=!1,t=[],r=0,n=0,i=Number.MAX_VALUE,a=-1,s=this._foldingModel.regions;for(;r<s.length;r++){if(!s.isCollapsed(r))continue;let l=s.getStartLineNumber(r)+1,d=s.getEndLineNumber(r);i<=l&&d<=a||(!e&&n<this._hiddenRanges.length&&this._hiddenRanges[n].startLineNumber===l&&this._hiddenRanges[n].endLineNumber===d?(t.push(this._hiddenRanges[n]),n++):(e=!0,t.push(new y(l,1,d,1))),i=l,a=d)}(this._hasLineChanges||e||n<this._hiddenRanges.length)&&this.applyHiddenRanges(t)}applyMemento(e){if(!Array.isArray(e)||e.length===0)return!1;let t=[];for(let r of e){if(!r.startLineNumber||!r.endLineNumber)return!1;t.push(new y(r.startLineNumber+1,1,r.endLineNumber,1))}return this.applyHiddenRanges(t),!0}getMemento(){return this._hiddenRanges.map(e=>({startLineNumber:e.startLineNumber-1,endLineNumber:e.endLineNumber}))}applyHiddenRanges(e){this._hiddenRanges=e,this._hasLineChanges=!1,this._updateEventEmitter.fire(e)}hasRanges(){return this._hiddenRanges.length>0}isHidden(e){return Cx(this._hiddenRanges,e)!==null}adjustSelections(e){let t=!1,r=this._foldingModel.textModel,n=null,i=a=>((!n||!Zk(a,n))&&(n=Cx(this._hiddenRanges,a)),n?n.startLineNumber-1:null);for(let a=0,s=e.length;a<s;a++){let l=e[a],d=i(l.startLineNumber);d&&(l=l.setStartPosition(d,r.getLineMaxColumn(d)),t=!0);let c=i(l.endLineNumber);c&&(l=l.setEndPosition(c,r.getLineMaxColumn(c)),t=!0),e[a]=l}return t}dispose(){this.hiddenRanges.length>0&&(this._hiddenRanges=[],this._updateEventEmitter.fire(this._hiddenRanges)),this._foldingModelListener&&(this._foldingModelListener.dispose(),this._foldingModelListener=null)}};function Zk(o,e){return o>=e.startLineNumber&&o<=e.endLineNumber}function Cx(o,e){let t=cu(o,r=>e<r.startLineNumber)-1;return t>=0&&o[t].endLineNumber>=e?o[t]:null}D1();var eN=5e3,tN="indent",Q_=class{constructor(e,t,r){this.editorModel=e,this.languageConfigurationService=t,this.maxFoldingRegions=r,this.id=tN}dispose(){}compute(e,t){let r=this.languageConfigurationService.getLanguageConfiguration(this.editorModel.getLanguageId()).foldingRules,n=r&&!!r.offSide,i=r&&r.markers;return Promise.resolve(rN(this.editorModel,n,i,this.maxFoldingRegions,t))}},Lx=class{constructor(e,t){this._notifyTooManyRegions=t,this._startIndexes=[],this._endIndexes=[],this._indentOccurrences=[],this._length=0,this._foldingRangesLimit=e}insertFirst(e,t,r){if(e>16777215||t>16777215)return;let n=this._length;this._startIndexes[n]=e,this._endIndexes[n]=t,this._length++,r<1e3&&(this._indentOccurrences[r]=(this._indentOccurrences[r]||0)+1)}toIndentRanges(e){if(this._length<=this._foldingRangesLimit){let t=new Uint32Array(this._length),r=new Uint32Array(this._length);for(let n=this._length-1,i=0;n>=0;n--,i++)t[i]=this._startIndexes[n],r[i]=this._endIndexes[n];return new qi(t,r)}else{this._notifyTooManyRegions&&this._notifyTooManyRegions(this._foldingRangesLimit);let t=0,r=this._indentOccurrences.length;for(let s=0;s<this._indentOccurrences.length;s++){let l=this._indentOccurrences[s];if(l){if(l+t>this._foldingRangesLimit){r=s;break}t+=l}}let n=e.getOptions().tabSize,i=new Uint32Array(this._foldingRangesLimit),a=new Uint32Array(this._foldingRangesLimit);for(let s=this._length-1,l=0;s>=0;s--){let d=this._startIndexes[s],c=e.getLineContent(d),u=dc(c,n);(u<r||u===r&&t++<this._foldingRangesLimit)&&(i[l]=d,a[l]=this._endIndexes[s],l++)}return new qi(i,a)}}};function rN(o,e,t,r,n){let i=o.getOptions().tabSize;r=r!=null?r:eN;let a=new Lx(r,n),s;t&&(s=new RegExp(`(${t.start.source})|(?:${t.end.source})`));let l=[],d=o.getLineCount()+1;l.push({indent:-1,endAbove:d,line:d});for(let c=o.getLineCount();c>0;c--){let u=o.getLineContent(c),f=dc(u,i),m=l[l.length-1];if(f===-1){e&&(m.endAbove=c);continue}let g;if(s&&(g=u.match(s)))if(g[1]){let b=l.length-1;for(;b>0&&l[b].indent!==-2;)b--;if(b>0){l.length=b+1,m=l[b],a.insertFirst(c,m.line,f),m.line=c,m.indent=f,m.endAbove=c;continue}}else{l.push({indent:-2,endAbove:c,line:c});continue}if(m.indent>f){do l.pop(),m=l[l.length-1];while(m.indent>f);let b=m.endAbove-1;b-c>=1&&a.insertFirst(c,b,f)}m.indent===f?m.endAbove=c:l.push({indent:f,endAbove:c,line:c})}return a.toIndentRanges(o)}Ae();W();var nN={},Z_="syntax",ey=class{constructor(e,t,r,n){this.editorModel=e,this.providers=t,this.limit=n,this.id=Z_;for(let i of t)typeof i.onDidChange=="function"&&(this.disposables||(this.disposables=new P),this.disposables.add(i.onDidChange(r)))}compute(e,t){return iN(this.providers,this.editorModel,e).then(r=>r?ty(r,this.limit,t):null)}dispose(){var e;(e=this.disposables)===null||e===void 0||e.dispose()}};function iN(o,e,t){let r=null,n=o.map((i,a)=>Promise.resolve(i.provideFoldingRanges(e,nN,t)).then(s=>{if(!t.isCancellationRequested&&Array.isArray(s)){Array.isArray(r)||(r=[]);let l=e.getLineCount();for(let d of s)d.start>0&&d.end>d.start&&d.end<=l&&r.push({start:d.start,end:d.end,rank:a,kind:d.kind})}},ze));return Promise.all(n).then(i=>r)}var Dx=class{constructor(e,t){this._notifyTooManyRegions=t,this._startIndexes=[],this._endIndexes=[],this._nestingLevels=[],this._nestingLevelCounts=[],this._types=[],this._length=0,this._foldingRangesLimit=e}add(e,t,r,n){if(e>16777215||t>16777215)return;let i=this._length;this._startIndexes[i]=e,this._endIndexes[i]=t,this._nestingLevels[i]=n,this._types[i]=r,this._length++,n<30&&(this._nestingLevelCounts[n]=(this._nestingLevelCounts[n]||0)+1)}toIndentRanges(){if(this._length<=this._foldingRangesLimit){let e=new Uint32Array(this._length),t=new Uint32Array(this._length);for(let r=0;r<this._length;r++)e[r]=this._startIndexes[r],t[r]=this._endIndexes[r];return new qi(e,t,this._types)}else{this._notifyTooManyRegions&&this._notifyTooManyRegions(this._foldingRangesLimit);let e=0,t=this._nestingLevelCounts.length;for(let a=0;a<this._nestingLevelCounts.length;a++){let s=this._nestingLevelCounts[a];if(s){if(s+e>this._foldingRangesLimit){t=a;break}e+=s}}let r=new Uint32Array(this._foldingRangesLimit),n=new Uint32Array(this._foldingRangesLimit),i=[];for(let a=0,s=0;a<this._length;a++){let l=this._nestingLevels[a];(l<t||l===t&&e++<this._foldingRangesLimit)&&(r[s]=this._startIndexes[a],n[s]=this._endIndexes[a],i[s]=this._types[a],s++)}return new qi(r,n,i)}}};function ty(o,e,t){let r=o.sort((s,l)=>{let d=s.start-l.start;return d===0&&(d=s.rank-l.rank),d}),n=new Dx(e,t),i,a=[];for(let s of r)if(!i)i=s,n.add(s.start,s.end,s.kind&&s.kind.value,a.length);else if(s.start>i.start)if(s.end<=i.end)a.push(i),i=s,n.add(s.start,s.end,s.kind&&s.kind.value,a.length);else{if(s.start>i.end){do i=a.pop();while(i&&s.start>i.end);i&&a.push(i),i=s}n.add(s.start,s.end,s.kind&&s.kind.value,a.length)}return n.toIndentRanges()}var ry="init",ny=class{constructor(e,t,r,n){if(this.editorModel=e,this.id=ry,t.length){let i=a=>({range:{startLineNumber:a.startLineNumber,startColumn:0,endLineNumber:a.endLineNumber,endColumn:e.getLineLength(a.endLineNumber)},options:{description:"folding-initializing-range-provider",stickiness:1}});this.decorationIds=e.deltaDecorations([],t.map(i)),this.timeout=setTimeout(r,n)}}dispose(){this.decorationIds&&(this.editorModel.deltaDecorations(this.decorationIds,[]),this.decorationIds=void 0),typeof this.timeout=="number"&&(clearTimeout(this.timeout),this.timeout=void 0)}compute(e){let t=[];if(this.decorationIds)for(let r of this.decorationIds){let n=this.editorModel.getDecorationRange(r);n&&t.push({start:n.startLineNumber,end:n.endLineNumber,rank:1})}return Promise.resolve(ty(t,Number.MAX_VALUE))}};Z();Le();mt();Oe();Sr();jt();Z();Oe();var tm=Rt("folding-expanded",q.chevronDown,p("foldingExpandedIcon","Icon for expanded ranges in the editor glyph margin.")),rm=Rt("folding-collapsed",q.chevronRight,p("foldingCollapsedIcon","Icon for collapsed ranges in the editor glyph margin.")),Ur=class{constructor(e){this.editor=e,this.autoHideFoldingControls=!0,this.showFoldingHighlights=!0}getDecorationOption(e,t){return t?Ur.HIDDEN_RANGE_DECORATION:e?this.showFoldingHighlights?Ur.COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION:Ur.COLLAPSED_VISUAL_DECORATION:this.autoHideFoldingControls?Ur.EXPANDED_AUTO_HIDE_VISUAL_DECORATION:Ur.EXPANDED_VISUAL_DECORATION}deltaDecorations(e,t){return this.editor.deltaDecorations(e,t)}changeDecorations(e){return this.editor.changeDecorations(e)}};Ur.COLLAPSED_VISUAL_DECORATION=Se.register({description:"folding-collapsed-visual-decoration",stickiness:1,afterContentClassName:"inline-folded",isWholeLine:!0,firstLineDecorationClassName:it.asClassName(rm)});Ur.COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION=Se.register({description:"folding-collapsed-highlighted-visual-decoration",stickiness:1,afterContentClassName:"inline-folded",className:"folded-background",isWholeLine:!0,firstLineDecorationClassName:it.asClassName(rm)});Ur.EXPANDED_AUTO_HIDE_VISUAL_DECORATION=Se.register({description:"folding-expanded-auto-hide-visual-decoration",stickiness:1,isWholeLine:!0,firstLineDecorationClassName:it.asClassName(tm)});Ur.EXPANDED_VISUAL_DECORATION=Se.register({description:"folding-expanded-visual-decoration",stickiness:1,isWholeLine:!0,firstLineDecorationClassName:"alwaysShowFoldIcons "+it.asClassName(tm)});Ur.HIDDEN_RANGE_DECORATION=Se.register({description:"folding-hidden-range-decoration",stickiness:1});mc();Vl();var oN=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},nm=function(o,e){return function(t,r){e(t,r,o)}},ur=new fe("foldingEnabled",!1),ml=class wx extends F{constructor(e,t,r,n,i){super();this.contextKeyService=t,this.languageConfigurationService=r,this._tooManyRegionsNotified=!1,this.localToDispose=this._register(new P),this.editor=e;let a=this.editor.getOptions();this._isEnabled=a.get(37),this._useFoldingProviders=a.get(38)!=="indentation",this._unfoldOnClickAfterEndOfLine=a.get(42),this._restoringViewState=!1,this._currentModelHasFoldedImports=!1,this._foldingImportsByDefault=a.get(40),this._maxFoldingRegions=a.get(41),this.updateDebounceInfo=i.for(wu,"Folding",{min:200}),this.foldingModel=null,this.hiddenRangeModel=null,this.rangeProvider=null,this.foldingRegionPromise=null,this.foldingStateMemento=null,this.foldingModelPromise=null,this.updateScheduler=null,this.cursorChangedScheduler=null,this.mouseDownInfo=null,this.foldingDecorationProvider=new Ur(e),this.foldingDecorationProvider.autoHideFoldingControls=a.get(99)==="mouseover",this.foldingDecorationProvider.showFoldingHighlights=a.get(39),this.foldingEnabled=ur.bindTo(this.contextKeyService),this.foldingEnabled.set(this._isEnabled),this._notifyTooManyRegions=s=>{this._tooManyRegionsNotified||(n.notify({severity:Li.Warning,sticky:!0,message:p("maximum fold ranges",`The number of foldable regions is limited to a maximum of {0}. Increase configuration option ['Folding Maximum Regions'](command:workbench.action.openSettings?["editor.foldingMaximumRegions"]) to enable more.`,s)}),this._tooManyRegionsNotified=!0)},this._register(this.editor.onDidChangeModel(()=>this.onModelChanged())),this._register(this.editor.onDidChangeConfiguration(s=>{if(s.hasChanged(37)&&(this._isEnabled=this.editor.getOptions().get(37),this.foldingEnabled.set(this._isEnabled),this.onModelChanged()),s.hasChanged(41)&&(this._maxFoldingRegions=this.editor.getOptions().get(41),this._tooManyRegionsNotified=!1,this.onModelChanged()),s.hasChanged(99)||s.hasChanged(39)){let l=this.editor.getOptions();this.foldingDecorationProvider.autoHideFoldingControls=l.get(99)==="mouseover",this.foldingDecorationProvider.showFoldingHighlights=l.get(39),this.triggerFoldingModelChanged()}s.hasChanged(38)&&(this._useFoldingProviders=this.editor.getOptions().get(38)!=="indentation",this.onFoldingStrategyChanged()),s.hasChanged(42)&&(this._unfoldOnClickAfterEndOfLine=this.editor.getOptions().get(42)),s.hasChanged(40)&&(this._foldingImportsByDefault=this.editor.getOptions().get(40))})),this.onModelChanged()}static get(e){return e.getContribution(wx.ID)}saveViewState(){let e=this.editor.getModel();if(!e||!this._isEnabled||e.isTooLargeForTokenization())return{};if(this.foldingModel){let t=this.foldingModel.isInitialized?this.foldingModel.getMemento():this.hiddenRangeModel.getMemento(),r=this.rangeProvider?this.rangeProvider.id:void 0;return{collapsedRegions:t,lineCount:e.getLineCount(),provider:r,foldedImports:this._currentModelHasFoldedImports}}}restoreViewState(e){let t=this.editor.getModel();if(!t||!this._isEnabled||t.isTooLargeForTokenization()||!this.hiddenRangeModel||!e||e.lineCount!==t.getLineCount()||(this._currentModelHasFoldedImports=!!e.foldedImports,!e.collapsedRegions))return;(e.provider===Z_||e.provider===ry)&&(this.foldingStateMemento=e);let r=e.collapsedRegions;if(this.hiddenRangeModel.applyMemento(r)){let n=this.getFoldingModel();n&&n.then(i=>{if(i){this._restoringViewState=!0;try{i.applyMemento(r)}finally{this._restoringViewState=!1}}}).then(void 0,ce)}}onModelChanged(){this.localToDispose.clear();let e=this.editor.getModel();!this._isEnabled||!e||e.isTooLargeForTokenization()||(this._currentModelHasFoldedImports=!1,this.foldingModel=new J_(e,this.foldingDecorationProvider),this.localToDispose.add(this.foldingModel),this.hiddenRangeModel=new $_(this.foldingModel),this.localToDispose.add(this.hiddenRangeModel),this.localToDispose.add(this.hiddenRangeModel.onDidChange(t=>this.onHiddenRangesChanges(t))),this.updateScheduler=new Cn(this.updateDebounceInfo.get(e)),this.cursorChangedScheduler=new Ke(()=>this.revealCursor(),200),this.localToDispose.add(this.cursorChangedScheduler),this.localToDispose.add(wu.onDidChange(()=>this.onFoldingStrategyChanged())),this.localToDispose.add(this.editor.onDidChangeModelLanguageConfiguration(()=>this.onFoldingStrategyChanged())),this.localToDispose.add(this.editor.onDidChangeModelContent(t=>this.onDidChangeModelContent(t))),this.localToDispose.add(this.editor.onDidChangeCursorPosition(()=>this.onCursorPositionChanged())),this.localToDispose.add(this.editor.onMouseDown(t=>this.onEditorMouseDown(t))),this.localToDispose.add(this.editor.onMouseUp(t=>this.onEditorMouseUp(t))),this.localToDispose.add({dispose:()=>{this.foldingRegionPromise&&(this.foldingRegionPromise.cancel(),this.foldingRegionPromise=null),this.updateScheduler&&this.updateScheduler.cancel(),this.updateScheduler=null,this.foldingModel=null,this.foldingModelPromise=null,this.hiddenRangeModel=null,this.cursorChangedScheduler=null,this.foldingStateMemento=null,this.rangeProvider&&this.rangeProvider.dispose(),this.rangeProvider=null}}),this.triggerFoldingModelChanged())}onFoldingStrategyChanged(){this.rangeProvider&&this.rangeProvider.dispose(),this.rangeProvider=null,this.triggerFoldingModelChanged()}getRangeProvider(e){if(this.rangeProvider)return this.rangeProvider;if(this.rangeProvider=new Q_(e,this.languageConfigurationService,this._maxFoldingRegions),this._useFoldingProviders&&this.foldingModel){let t=wu.ordered(this.foldingModel.textModel);if(t.length===0&&this.foldingStateMemento&&this.foldingStateMemento.collapsedRegions)return this.rangeProvider=new ny(e,this.foldingStateMemento.collapsedRegions,()=>{this.foldingStateMemento=null,this.onFoldingStrategyChanged()},3e4);t.length>0&&(this.rangeProvider=new ey(e,t,()=>this.triggerFoldingModelChanged(),this._maxFoldingRegions))}return this.foldingStateMemento=null,this.rangeProvider}getFoldingModel(){return this.foldingModelPromise}onDidChangeModelContent(e){var t;(t=this.hiddenRangeModel)===null||t===void 0||t.notifyChangeModelContent(e),this.triggerFoldingModelChanged()}triggerFoldingModelChanged(){this.updateScheduler&&(this.foldingRegionPromise&&(this.foldingRegionPromise.cancel(),this.foldingRegionPromise=null),this.foldingModelPromise=this.updateScheduler.trigger(()=>{let e=this.foldingModel;if(!e)return null;let t=new nn(!0),r=this.getRangeProvider(e.textModel),n=this.foldingRegionPromise=Ge(i=>r.compute(i,this._notifyTooManyRegions));return n.then(i=>{if(i&&n===this.foldingRegionPromise){let a;if(this._foldingImportsByDefault&&!this._currentModelHasFoldedImports){let c=i.setCollapsedAllOfType(jl.Imports.value,!0);c&&(a=va.capture(this.editor),this._currentModelHasFoldedImports=c)}let s=this.editor.getSelections(),l=s?s.map(c=>c.startLineNumber):[];e.update(i,l),a&&a.restore(this.editor);let d=this.updateDebounceInfo.update(e.textModel,t.elapsed());this.updateScheduler&&(this.updateScheduler.defaultDelay=d)}return e})}).then(void 0,e=>(ce(e),null)))}onHiddenRangesChanges(e){if(this.hiddenRangeModel&&e.length&&!this._restoringViewState){let t=this.editor.getSelections();t&&this.hiddenRangeModel.adjustSelections(t)&&this.editor.setSelections(t)}this.editor.setHiddenAreas(e)}onCursorPositionChanged(){this.hiddenRangeModel&&this.hiddenRangeModel.hasRanges()&&this.cursorChangedScheduler.schedule()}revealCursor(){let e=this.getFoldingModel();!e||e.then(t=>{if(t){let r=this.editor.getSelections();if(r&&r.length>0){let n=[];for(let i of r){let a=i.selectionStartLineNumber;this.hiddenRangeModel&&this.hiddenRangeModel.isHidden(a)&&n.push(...t.getAllRegionsAtLine(a,s=>s.isCollapsed&&a>s.startLineNumber))}n.length&&(t.toggleCollapseState(n),this.reveal(r[0].getPosition()))}}}).then(void 0,ce)}onEditorMouseDown(e){if(this.mouseDownInfo=null,!this.hiddenRangeModel||!e.target||!e.target.range||!e.event.leftButton&&!e.event.middleButton)return;let t=e.target.range,r=!1;switch(e.target.type){case 4:{let n=e.target.detail,i=e.target.element.offsetLeft;if(n.offsetX-i<5)return;r=!0;break}case 7:{if(this._unfoldOnClickAfterEndOfLine&&this.hiddenRangeModel.hasRanges()&&!e.target.detail.isAfterLines)break;return}case 6:{if(this.hiddenRangeModel.hasRanges()){let n=this.editor.getModel();if(n&&t.startColumn===n.getLineMaxColumn(t.startLineNumber))break}return}default:return}this.mouseDownInfo={lineNumber:t.startLineNumber,iconClicked:r}}onEditorMouseUp(e){let t=this.getFoldingModel();if(!t||!this.mouseDownInfo||!e.target)return;let r=this.mouseDownInfo.lineNumber,n=this.mouseDownInfo.iconClicked,i=e.target.range;if(!(!i||i.startLineNumber!==r)){if(n){if(e.target.type!==4)return}else{let a=this.editor.getModel();if(!a||i.startColumn!==a.getLineMaxColumn(r))return}t.then(a=>{if(a){let s=a.getRegionAtLine(r);if(s&&s.startLineNumber===r){let l=s.isCollapsed;if(n||l){let d=e.event.altKey,c=[];if(d){let u=m=>!m.containedBy(s)&&!s.containedBy(m),f=a.getRegionsInside(null,u);for(let m of f)m.isCollapsed&&c.push(m);c.length===0&&(c=f)}else{let u=e.event.middleButton||e.event.shiftKey;if(u)for(let f of a.getRegionsInside(s))f.isCollapsed===l&&c.push(f);(l||!u||c.length===0)&&c.push(s)}a.toggleCollapseState(c),this.reveal({lineNumber:r,column:1})}}}}).then(void 0,ce)}}reveal(e){this.editor.revealPositionInCenterIfOutsideViewport(e,0)}};ml.ID="editor.contrib.folding";ml=oN([nm(1,re),nm(2,Nt),nm(3,$e),nm(4,Zn)],ml);var pr=class extends M{runEditorCommand(e,t,r){let n=e.get(Nt),i=ml.get(t);if(!i)return;let a=i.getFoldingModel();if(a)return this.reportTelemetry(e,t),a.then(s=>{if(s){this.invoke(i,s,t,r,n);let l=t.getSelection();l&&i.reveal(l.getStartPosition())}})}getSelectedLines(e){let t=e.getSelections();return t?t.map(r=>r.startLineNumber):[]}getLineNumbers(e,t){return e&&e.selectionLines?e.selectionLines.map(r=>r+1):this.getSelectedLines(t)}run(e,t){}};function Ax(o){if(!Fl(o)){if(!fu(o))return!1;let e=o;if(!Fl(e.levels)&&!Cm(e.levels)||!Fl(e.direction)&&!pu(e.direction)||!Fl(e.selectionLines)&&(!pv(e.selectionLines)||!e.selectionLines.every(Cm)))return!1}return!0}var Ix=class extends pr{constructor(){super({id:"editor.unfold",label:p("unfoldAction.label","Unfold"),alias:"Unfold",precondition:ur,kbOpts:{kbExpr:v.editorTextFocus,primary:3161,mac:{primary:2649},weight:100},description:{description:"Unfold the content in the editor",args:[{name:"Unfold editor argument",description:`Property-value pairs that can be passed through this argument:
						* 'levels': Number of levels to unfold. If not set, defaults to 1.
						* 'direction': If 'up', unfold given number of levels up otherwise unfolds down.
						* 'selectionLines': The start lines (0-based) of the editor selections to apply the unfold action to. If not set, the active selection(s) will be used.
						`,constraint:Ax,schema:{type:"object",properties:{levels:{type:"number",default:1},direction:{type:"string",enum:["up","down"],default:"down"},selectionLines:{type:"array",items:{type:"number"}}}}}]}})}invoke(e,t,r,n){let i=n&&n.levels||1,a=this.getLineNumbers(n,r);n&&n.direction==="up"?X_(t,!1,i,a):Ho(t,!1,i,a)}},kx=class extends pr{constructor(){super({id:"editor.unfoldRecursively",label:p("unFoldRecursivelyAction.label","Unfold Recursively"),alias:"Unfold Recursively",precondition:ur,kbOpts:{kbExpr:v.editorTextFocus,primary:Xe(2089,2137),weight:100}})}invoke(e,t,r,n){Ho(t,!1,Number.MAX_VALUE,this.getSelectedLines(r))}},Nx=class extends pr{constructor(){super({id:"editor.fold",label:p("foldAction.label","Fold"),alias:"Fold",precondition:ur,kbOpts:{kbExpr:v.editorTextFocus,primary:3159,mac:{primary:2647},weight:100},description:{description:"Fold the content in the editor",args:[{name:"Fold editor argument",description:`Property-value pairs that can be passed through this argument:
							* 'levels': Number of levels to fold.
							* 'direction': If 'up', folds given number of levels up otherwise folds down.
							* 'selectionLines': The start lines (0-based) of the editor selections to apply the fold action to. If not set, the active selection(s) will be used.
							If no levels or direction is set, folds the region at the locations or if already collapsed, the first uncollapsed parent instead.
						`,constraint:Ax,schema:{type:"object",properties:{levels:{type:"number"},direction:{type:"string",enum:["up","down"]},selectionLines:{type:"array",items:{type:"number"}}}}}]}})}invoke(e,t,r,n){let i=this.getLineNumbers(n,r),a=n&&n.levels,s=n&&n.direction;typeof a!="number"&&typeof s!="string"?bx(t,!0,i):s==="up"?X_(t,!0,a||1,i):Ho(t,!0,a||1,i)}},Rx=class extends pr{constructor(){super({id:"editor.toggleFold",label:p("toggleFoldAction.label","Toggle Fold"),alias:"Toggle Fold",precondition:ur,kbOpts:{kbExpr:v.editorTextFocus,primary:Xe(2089,2090),weight:100}})}invoke(e,t,r){let n=this.getSelectedLines(r);vx(t,1,n)}},Px=class extends pr{constructor(){super({id:"editor.foldRecursively",label:p("foldRecursivelyAction.label","Fold Recursively"),alias:"Fold Recursively",precondition:ur,kbOpts:{kbExpr:v.editorTextFocus,primary:Xe(2089,2135),weight:100}})}invoke(e,t,r){let n=this.getSelectedLines(r);Ho(t,!0,Number.MAX_VALUE,n)}},Mx=class extends pr{constructor(){super({id:"editor.foldAllBlockComments",label:p("foldAllBlockComments.label","Fold All Block Comments"),alias:"Fold All Block Comments",precondition:ur,kbOpts:{kbExpr:v.editorTextFocus,primary:Xe(2089,2133),weight:100}})}invoke(e,t,r,n,i){if(t.regions.hasTypes())em(t,jl.Comment.value,!0);else{let a=r.getModel();if(!a)return;let s=i.getLanguageConfiguration(a.getLanguageId()).comments;if(s&&s.blockCommentStartToken){let l=new RegExp("^\\s*"+yi(s.blockCommentStartToken));Zf(t,l,!0)}}}},Ox=class extends pr{constructor(){super({id:"editor.foldAllMarkerRegions",label:p("foldAllMarkerRegions.label","Fold All Regions"),alias:"Fold All Regions",precondition:ur,kbOpts:{kbExpr:v.editorTextFocus,primary:Xe(2089,2077),weight:100}})}invoke(e,t,r,n,i){if(t.regions.hasTypes())em(t,jl.Region.value,!0);else{let a=r.getModel();if(!a)return;let s=i.getLanguageConfiguration(a.getLanguageId()).foldingRules;if(s&&s.markers&&s.markers.start){let l=new RegExp(s.markers.start);Zf(t,l,!0)}}}},Fx=class extends pr{constructor(){super({id:"editor.unfoldAllMarkerRegions",label:p("unfoldAllMarkerRegions.label","Unfold All Regions"),alias:"Unfold All Regions",precondition:ur,kbOpts:{kbExpr:v.editorTextFocus,primary:Xe(2089,2078),weight:100}})}invoke(e,t,r,n,i){if(t.regions.hasTypes())em(t,jl.Region.value,!1);else{let a=r.getModel();if(!a)return;let s=i.getLanguageConfiguration(a.getLanguageId()).foldingRules;if(s&&s.markers&&s.markers.start){let l=new RegExp(s.markers.start);Zf(t,l,!1)}}}},Gx=class extends pr{constructor(){super({id:"editor.foldAllExcept",label:p("foldAllExcept.label","Fold All Regions Except Selected"),alias:"Fold All Regions Except Selected",precondition:ur,kbOpts:{kbExpr:v.editorTextFocus,primary:Xe(2089,2131),weight:100}})}invoke(e,t,r){let n=this.getSelectedLines(r);Y_(t,!0,n)}},Bx=class extends pr{constructor(){super({id:"editor.unfoldAllExcept",label:p("unfoldAllExcept.label","Unfold All Regions Except Selected"),alias:"Unfold All Regions Except Selected",precondition:ur,kbOpts:{kbExpr:v.editorTextFocus,primary:Xe(2089,2129),weight:100}})}invoke(e,t,r){let n=this.getSelectedLines(r);Y_(t,!1,n)}},Vx=class extends pr{constructor(){super({id:"editor.foldAll",label:p("foldAllAction.label","Fold All"),alias:"Fold All",precondition:ur,kbOpts:{kbExpr:v.editorTextFocus,primary:Xe(2089,2069),weight:100}})}invoke(e,t,r){Ho(t,!0)}},Hx=class extends pr{constructor(){super({id:"editor.unfoldAll",label:p("unfoldAllAction.label","Unfold All"),alias:"Unfold All",precondition:ur,kbOpts:{kbExpr:v.editorTextFocus,primary:Xe(2089,2088),weight:100}})}invoke(e,t,r){Ho(t,!1)}},Ba=class extends pr{getFoldingLevel(){return parseInt(this.id.substr(Ba.ID_PREFIX.length))}invoke(e,t,r){Sx(t,this.getFoldingLevel(),!0,this.getSelectedLines(r))}};Ba.ID_PREFIX="editor.foldLevel";Ba.ID=o=>Ba.ID_PREFIX+o;var Ux=class extends pr{constructor(){super({id:"editor.gotoParentFold",label:p("gotoParentFold.label","Go to Parent Fold"),alias:"Go to Parent Fold",precondition:ur,kbOpts:{kbExpr:v.editorTextFocus,weight:100}})}invoke(e,t,r){let n=this.getSelectedLines(r);if(n.length>0){let i=Ex(n[0],t);i!==null&&r.setSelection({startLineNumber:i,startColumn:1,endLineNumber:i,endColumn:1})}}},Wx=class extends pr{constructor(){super({id:"editor.gotoPreviousFold",label:p("gotoPreviousFold.label","Go to Previous Folding Range"),alias:"Go to Previous Folding Range",precondition:ur,kbOpts:{kbExpr:v.editorTextFocus,weight:100}})}invoke(e,t,r){let n=this.getSelectedLines(r);if(n.length>0){let i=Tx(n[0],t);i!==null&&r.setSelection({startLineNumber:i,startColumn:1,endLineNumber:i,endColumn:1})}}},jx=class extends pr{constructor(){super({id:"editor.gotoNextFold",label:p("gotoNextFold.label","Go to Next Folding Range"),alias:"Go to Next Folding Range",precondition:ur,kbOpts:{kbExpr:v.editorTextFocus,weight:100}})}invoke(e,t,r){let n=this.getSelectedLines(r);if(n.length>0){let i=xx(n[0],t);i!==null&&r.setSelection({startLineNumber:i,startColumn:1,endLineNumber:i,endColumn:1})}}};Q(ml.ID,ml);D(Ix);D(kx);D(Nx);D(Px);D(Vx);D(Hx);D(Mx);D(Ox);D(Fx);D(Gx);D(Bx);D(Rx);D(Ux);D(Wx);D(jx);for(let o=1;o<=7;o++)Fu(new Ba({id:Ba.ID(o),label:p("foldLevelAction.label","Fold Level {0}",o),alias:`Fold Level ${o}`,precondition:ur,kbOpts:{kbExpr:v.editorTextFocus,primary:Xe(2089,2048|21+o),weight:100}}));var sN=J("editor.foldBackground",{light:or(Qm,.3),dark:or(Qm,.3),hc:null},p("foldBackgroundBackground","Background color behind folded ranges. The color must not be opaque so as not to hide underlying decorations."),!0),lN=J("editorGutter.foldingControlForeground",{dark:Bu,light:Bu,hc:Bu},p("editorGutter.foldingControlForeground","Color of the folding control in the editor gutter."));ke((o,e)=>{let t=o.getColor(sN);t&&e.addRule(`.monaco-editor .folded-background { background-color: ${t}; }`);let r=o.getColor(lN);r&&e.addRule(`
		.monaco-editor .cldr${it.asCSSSelector(tm)},
		.monaco-editor .cldr${it.asCSSSelector(rm)} {
			color: ${r} !important;
		}
		`)});pe();Z();var zx=class extends M{constructor(){super({id:"editor.action.fontZoomIn",label:p("EditorFontZoomIn.label","Editor Font Zoom In"),alias:"Editor Font Zoom In",precondition:void 0})}run(e,t){Ss.setZoomLevel(Ss.getZoomLevel()+1)}},Kx=class extends M{constructor(){super({id:"editor.action.fontZoomOut",label:p("EditorFontZoomOut.label","Editor Font Zoom Out"),alias:"Editor Font Zoom Out",precondition:void 0})}run(e,t){Ss.setZoomLevel(Ss.getZoomLevel()-1)}},qx=class extends M{constructor(){super({id:"editor.action.fontZoomReset",label:p("EditorFontZoomReset.label","Editor Font Zoom Reset"),alias:"Editor Font Zoom Reset",precondition:void 0})}run(e,t){Ss.setZoomLevel(0)}};D(zx);D(Kx);D(qx);var sse=Ya(Qx()),lse=Ya(tC());W();Ye();pe();ki();ee();kt();Be();jt();on();da();function fr(o,e){let t=0;for(let r=0;r<o.length;r++)o.charAt(r)==="	"?t+=e:t++;return t}function zo(o,e,t){o=o<0?0:o;let r="";if(!t){let n=Math.floor(o/e);o=o%e;for(let i=0;i<n;i++)r+="	"}for(let n=0;n<o;n++)r+=" ";return r}Z();function nC(o,e,t,r,n){if(o.getLineCount()===1&&o.getLineMaxColumn(1)===1)return[];let i=e.getLanguageConfiguration(o.getLanguageId()).indentationRules;if(!i)return[];for(r=Math.min(r,o.getLineCount());t<=r&&i.unIndentedLinePattern;){let T=o.getLineContent(t);if(!i.unIndentedLinePattern.test(T))break;t++}if(t>r-1)return[];let{tabSize:a,indentSize:s,insertSpaces:l}=o.getOptions(),d=(T,x)=>(x=x||1,ya.shiftIndent(T,T.length+x,a,s,l)),c=(T,x)=>(x=x||1,ya.unshiftIndent(T,T.length+x,a,s,l)),u=[],f,m=o.getLineContent(t),g=m;if(n!=null){f=n;let T=ft(m);g=f+m.substring(T.length),i.decreaseIndentPattern&&i.decreaseIndentPattern.test(g)&&(f=c(f),g=f+m.substring(T.length)),m!==g&&u.push(We.replaceMove(new X(t,1,t,T.length+1),Rs.normalizeIndentation(f,s,l)))}else f=ft(m);let b=f;i.increaseIndentPattern&&i.increaseIndentPattern.test(g)?(b=d(b),f=d(f)):i.indentNextLinePattern&&i.indentNextLinePattern.test(g)&&(b=d(b)),t++;for(let T=t;T<=r;T++){let x=o.getLineContent(T),R=ft(x),I=b+x.substring(R.length);i.decreaseIndentPattern&&i.decreaseIndentPattern.test(I)&&(b=c(b),f=c(f)),R!==b&&u.push(We.replaceMove(new X(T,1,T,R.length+1),Rs.normalizeIndentation(b,s,l))),!(i.unIndentedLinePattern&&i.unIndentedLinePattern.test(x))&&(i.increaseIndentPattern&&i.increaseIndentPattern.test(I)?(f=d(f),b=f):i.indentNextLinePattern&&i.indentNextLinePattern.test(I)?b=d(b):b=f)}return u}var Id=class extends M{constructor(){super({id:Id.ID,label:p("indentationToSpaces","Convert Indentation to Spaces"),alias:"Convert Indentation to Spaces",precondition:v.writable})}run(e,t){let r=t.getModel();if(!r)return;let n=r.getOptions(),i=t.getSelection();if(!i)return;let a=new lC(i,n.tabSize);t.pushUndoStop(),t.executeCommands(this.id,[a]),t.pushUndoStop(),r.updateOptions({insertSpaces:!0})}};Id.ID="editor.action.indentationToSpaces";var kd=class extends M{constructor(){super({id:kd.ID,label:p("indentationToTabs","Convert Indentation to Tabs"),alias:"Convert Indentation to Tabs",precondition:v.writable})}run(e,t){let r=t.getModel();if(!r)return;let n=r.getOptions(),i=t.getSelection();if(!i)return;let a=new cC(i,n.tabSize);t.pushUndoStop(),t.executeCommands(this.id,[a]),t.pushUndoStop(),r.updateOptions({insertSpaces:!1})}};kd.ID="editor.action.indentationToTabs";var ly=class extends M{constructor(e,t){super(t);this.insertSpaces=e}run(e,t){let r=e.get(Vr),n=e.get(Yt),i=t.getModel();if(!i)return;let a=n.getCreationOptions(i.getLanguageId(),i.uri,i.isForSimpleWidget),s=[1,2,3,4,5,6,7,8].map(d=>({id:d.toString(),label:d.toString(),description:d===a.tabSize?p("configuredTabSize","Configured Tab Size"):void 0})),l=Math.min(i.getOptions().tabSize-1,7);setTimeout(()=>{r.pick(s,{placeHolder:p({key:"selectTabWidth",comment:["Tab corresponds to the tab key"]},"Select Tab Size for Current File"),activeItem:s[l]}).then(d=>{d&&i&&!i.isDisposed()&&i.updateOptions({tabSize:parseInt(d.label,10),insertSpaces:this.insertSpaces})})},50)}},Nd=class extends ly{constructor(){super(!1,{id:Nd.ID,label:p("indentUsingTabs","Indent Using Tabs"),alias:"Indent Using Tabs",precondition:void 0})}};Nd.ID="editor.action.indentUsingTabs";var Rd=class extends ly{constructor(){super(!0,{id:Rd.ID,label:p("indentUsingSpaces","Indent Using Spaces"),alias:"Indent Using Spaces",precondition:void 0})}};Rd.ID="editor.action.indentUsingSpaces";var Pd=class extends M{constructor(){super({id:Pd.ID,label:p("detectIndentation","Detect Indentation from Content"),alias:"Detect Indentation from Content",precondition:void 0})}run(e,t){let r=e.get(Yt),n=t.getModel();if(!n)return;let i=r.getCreationOptions(n.getLanguageId(),n.uri,n.isForSimpleWidget);n.detectIndentation(i.insertSpaces,i.tabSize)}};Pd.ID="editor.action.detectIndentation";var iC=class extends M{constructor(){super({id:"editor.action.reindentlines",label:p("editor.reindentlines","Reindent Lines"),alias:"Reindent Lines",precondition:v.writable})}run(e,t){let r=e.get(Nt),n=t.getModel();if(!n)return;let i=nC(n,r,1,n.getLineCount());i.length>0&&(t.pushUndoStop(),t.executeEdits(this.id,i),t.pushUndoStop())}},aC=class extends M{constructor(){super({id:"editor.action.reindentselectedlines",label:p("editor.reindentselectedlines","Reindent Selected Lines"),alias:"Reindent Selected Lines",precondition:v.writable})}run(e,t){let r=e.get(Nt),n=t.getModel();if(!n)return;let i=t.getSelections();if(i===null)return;let a=[];for(let s of i){let l=s.startLineNumber,d=s.endLineNumber;if(l!==d&&s.endColumn===1&&d--,l===1){if(l===d)continue}else l--;let c=nC(n,r,l,d);a.push(...c)}a.length>0&&(t.pushUndoStop(),t.executeEdits(this.id,a),t.pushUndoStop())}},oC=class{constructor(e,t){this._initialSelection=t,this._edits=[],this._selectionId=null;for(let r of e)r.range&&typeof r.text=="string"&&this._edits.push(r)}getEditOperations(e,t){for(let n of this._edits)t.addEditOperation(y.lift(n.range),n.text);let r=!1;Array.isArray(this._edits)&&this._edits.length===1&&this._initialSelection.isEmpty()&&(this._edits[0].range.startColumn===this._initialSelection.endColumn&&this._edits[0].range.startLineNumber===this._initialSelection.endLineNumber?(r=!0,this._selectionId=t.trackSelection(this._initialSelection,!0)):this._edits[0].range.endColumn===this._initialSelection.startColumn&&this._edits[0].range.endLineNumber===this._initialSelection.startLineNumber&&(r=!0,this._selectionId=t.trackSelection(this._initialSelection,!1))),r||(this._selectionId=t.trackSelection(this._initialSelection))}computeCursorState(e,t){return t.getTrackedSelection(this._selectionId)}},am=class{constructor(e){this.callOnDispose=new P,this.callOnModel=new P,this.editor=e,this.callOnDispose.add(e.onDidChangeConfiguration(()=>this.update())),this.callOnDispose.add(e.onDidChangeModel(()=>this.update())),this.callOnDispose.add(e.onDidChangeModelLanguage(()=>this.update()))}update(){this.callOnModel.clear(),!(this.editor.getOption(9)<4||this.editor.getOption(48))&&(!this.editor.hasModel()||this.callOnModel.add(this.editor.onDidPaste(({range:e})=>{this.trigger(e)})))}trigger(e){let t=this.editor.getSelections();if(t===null||t.length>1)return;let r=this.editor.getModel();if(!r||!r.isCheapToTokenize(e.getStartPosition().lineNumber))return;let n=this.editor.getOption(9),{tabSize:i,indentSize:a,insertSpaces:s}=r.getOptions(),l=[],d={shiftIndent:m=>ya.shiftIndent(m,m.length+1,i,a,s),unshiftIndent:m=>ya.unshiftIndent(m,m.length+1,i,a,s)},c=e.startLineNumber;for(;c<=e.endLineNumber;){if(this.shouldIgnoreLine(r,c)){c++;continue}break}if(c>e.endLineNumber)return;let u=r.getLineContent(c);if(!/\S/.test(u.substring(0,e.startColumn-1))){let m=rr.getGoodIndentForLine(n,r,r.getLanguageId(),c,d);if(m!==null){let g=ft(u),b=fr(m,i),T=fr(g,i);if(b!==T){let x=zo(b,i,s);l.push({range:new y(c,1,c,g.length+1),text:x}),u=x+u.substr(g.length)}else{let x=rr.getIndentMetadata(r,c);if(x===0||x===8)return}}}let f=c;for(;c<e.endLineNumber;){if(!/\S/.test(r.getLineContent(c+1))){c++;continue}break}if(c!==e.endLineNumber){let m={getLineTokens:b=>r.getLineTokens(b),getLanguageId:()=>r.getLanguageId(),getLanguageIdAtPosition:(b,T)=>r.getLanguageIdAtPosition(b,T),getLineContent:b=>b===f?u:r.getLineContent(b)},g=rr.getGoodIndentForLine(n,m,r.getLanguageId(),c+1,d);if(g!==null){let b=fr(g,i),T=fr(ft(r.getLineContent(c+1)),i);if(b!==T){let x=b-T;for(let R=c+1;R<=e.endLineNumber;R++){let I=r.getLineContent(R),H=ft(I),de=fr(H,i)+x,Ce=zo(de,i,s);Ce!==H&&l.push({range:new y(R,1,R,H.length+1),text:Ce})}}}}if(l.length>0){this.editor.pushUndoStop();let m=new oC(l,this.editor.getSelection());this.editor.executeCommand("autoIndentOnPaste",m),this.editor.pushUndoStop()}}shouldIgnoreLine(e,t){e.forceTokenization(t);let r=e.getLineFirstNonWhitespaceColumn(t);if(r===0)return!0;let n=e.getLineTokens(t);if(n.getCount()>0){let i=n.findTokenIndexAtOffset(r);if(i>=0&&n.getStandardTokenType(i)===1)return!0}return!1}dispose(){this.callOnDispose.dispose(),this.callOnModel.dispose()}};am.ID="editor.contrib.autoIndentOnPaste";function sC(o,e,t,r){if(o.getLineCount()===1&&o.getLineMaxColumn(1)===1)return;let n="";for(let a=0;a<t;a++)n+=" ";let i=new RegExp(n,"gi");for(let a=1,s=o.getLineCount();a<=s;a++){let l=o.getLineFirstNonWhitespaceColumn(a);if(l===0&&(l=o.getLineMaxColumn(a)),l===1)continue;let d=new y(a,1,a,l),c=o.getValueInRange(d),u=r?c.replace(/\t/ig,n):c.replace(i,"	");e.addEditOperation(d,u)}}var lC=class{constructor(e,t){this.selection=e,this.tabSize=t,this.selectionId=null}getEditOperations(e,t){this.selectionId=t.trackSelection(this.selection),sC(e,t,this.tabSize,!0)}computeCursorState(e,t){return t.getTrackedSelection(this.selectionId)}},cC=class{constructor(e,t){this.selection=e,this.tabSize=t,this.selectionId=null}getEditOperations(e,t){this.selectionId=t.trackSelection(this.selection),sC(e,t,this.tabSize,!1)}computeCursorState(e,t){return t.getTrackedSelection(this.selectionId)}};Q(am.ID,am);D(Id);D(kd);D(Nd);D(Rd);D(Pd);D(iC);D(aC);var gse=Ya(fC());pe();Be();Z();var mC=class extends M{constructor(){super({id:"expandLineSelection",label:p("expandLineSelection","Expand Line Selection"),alias:"Expand Line Selection",precondition:void 0,kbOpts:{weight:0,kbExpr:v.textInputFocus,primary:2090}})}run(e,t,r){if(r=r||{},!t.hasModel())return;let n=t._getViewModel();n.model.pushStackElement(),n.setCursorStates(r.source,3,pc.expandLineSelection(n,n.getCursorStates())),n.revealPrimaryCursor(r.source,!0)}};D(mC);gi();pe();Ye();ki();ee();var uy=class{constructor(e,t){this._selection=e,this._cursors=t,this._selectionId=null}getEditOperations(e,t){let r=mN(e,this._cursors);for(let n=0,i=r.length;n<i;n++){let a=r[n];t.addEditOperation(a.range,a.text)}this._selectionId=t.trackSelection(this._selection)}computeCursorState(e,t){return t.getTrackedSelection(this._selectionId)}};function mN(o,e){e.sort((a,s)=>a.lineNumber===s.lineNumber?a.column-s.column:a.lineNumber-s.lineNumber);for(let a=e.length-2;a>=0;a--)e[a].lineNumber===e[a+1].lineNumber&&e.splice(a,1);let t=[],r=0,n=0,i=e.length;for(let a=1,s=o.getLineCount();a<=s;a++){let l=o.getLineContent(a),d=l.length+1,c=0;if(n<i&&e[n].lineNumber===a&&(c=e[n].column,n++,c===d)||l.length===0)continue;let u=ms(l),f=0;if(u===-1)f=1;else if(u!==l.length-1)f=u+2;else continue;f=Math.max(c,f),t[r++]=We.delete(new y(a,f,a,d))}return t}ki();tt();ee();kt();Be();ee();kt();var om=class{constructor(e,t,r){this._selection=e,this._isCopyingDown=t,this._noop=r||!1,this._selectionDirection=0,this._selectionId=null,this._startLineNumberDelta=0,this._endLineNumberDelta=0}getEditOperations(e,t){let r=this._selection;this._startLineNumberDelta=0,this._endLineNumberDelta=0,r.startLineNumber<r.endLineNumber&&r.endColumn===1&&(this._endLineNumberDelta=1,r=r.setEndPosition(r.endLineNumber-1,e.getLineMaxColumn(r.endLineNumber-1)));let n=[];for(let a=r.startLineNumber;a<=r.endLineNumber;a++)n.push(e.getLineContent(a));let i=n.join(`
`);i===""&&this._isCopyingDown&&(this._startLineNumberDelta++,this._endLineNumberDelta++),this._noop?t.addEditOperation(new y(r.endLineNumber,e.getLineMaxColumn(r.endLineNumber),r.endLineNumber+1,1),r.endLineNumber===e.getLineCount()?"":`
`):this._isCopyingDown?t.addEditOperation(new y(r.startLineNumber,1,r.startLineNumber,1),i+`
`):t.addEditOperation(new y(r.endLineNumber,e.getLineMaxColumn(r.endLineNumber),r.endLineNumber,e.getLineMaxColumn(r.endLineNumber)),`
`+i),this._selectionId=t.trackSelection(r),this._selectionDirection=this._selection.getDirection()}computeCursorState(e,t){let r=t.getTrackedSelection(this._selectionId);if(this._startLineNumberDelta!==0||this._endLineNumberDelta!==0){let n=r.startLineNumber,i=r.startColumn,a=r.endLineNumber,s=r.endColumn;this._startLineNumberDelta!==0&&(n=n+this._startLineNumberDelta,i=1),this._endLineNumberDelta!==0&&(a=a+this._endLineNumberDelta,s=1),r=X.createWithDirection(n,i,a,s,this._selectionDirection)}return r}};Ye();ee();kt();KL();on();var py=class{constructor(e,t,r){this._selection=e,this._isMovingDown=t,this._autoIndent=r,this._selectionId=null,this._moveEndLineSelectionShrink=!1}getEditOperations(e,t){let r=e.getLineCount();if(this._isMovingDown&&this._selection.endLineNumber===r){this._selectionId=t.trackSelection(this._selection);return}if(!this._isMovingDown&&this._selection.startLineNumber===1){this._selectionId=t.trackSelection(this._selection);return}this._moveEndPositionDown=!1;let n=this._selection;n.startLineNumber<n.endLineNumber&&n.endColumn===1&&(this._moveEndPositionDown=!0,n=n.setEndPosition(n.endLineNumber-1,e.getLineMaxColumn(n.endLineNumber-1)));let{tabSize:i,indentSize:a,insertSpaces:s}=e.getOptions(),l=this.buildIndentConverter(i,a,s),d={getLineTokens:c=>e.getLineTokens(c),getLanguageId:()=>e.getLanguageId(),getLanguageIdAtPosition:(c,u)=>e.getLanguageIdAtPosition(c,u),getLineContent:null};if(n.startLineNumber===n.endLineNumber&&e.getLineMaxColumn(n.startLineNumber)===1){let c=n.startLineNumber,u=this._isMovingDown?c+1:c-1;e.getLineMaxColumn(u)===1?t.addEditOperation(new y(1,1,1,1),null):(t.addEditOperation(new y(c,1,c,1),e.getLineContent(u)),t.addEditOperation(new y(u,1,u,e.getLineMaxColumn(u)),null)),n=new X(u,1,u,1)}else{let c,u;if(this._isMovingDown){c=n.endLineNumber+1,u=e.getLineContent(c),t.addEditOperation(new y(c-1,e.getLineMaxColumn(c-1),c,e.getLineMaxColumn(c)),null);let f=u;if(this.shouldAutoIndent(e,n)){let m=this.matchEnterRule(e,l,i,c,n.startLineNumber-1);if(m!==null){let b=ft(e.getLineContent(c)),T=m+fr(b,i);f=zo(T,i,s)+this.trimLeft(u)}else{d.getLineContent=T=>T===n.startLineNumber?e.getLineContent(c):e.getLineContent(T);let b=rr.getGoodIndentForLine(this._autoIndent,d,e.getLanguageIdAtPosition(c,1),n.startLineNumber,l);if(b!==null){let T=ft(e.getLineContent(c)),x=fr(b,i),R=fr(T,i);x!==R&&(f=zo(x,i,s)+this.trimLeft(u))}}t.addEditOperation(new y(n.startLineNumber,1,n.startLineNumber,1),f+`
`);let g=this.matchEnterRuleMovingDown(e,l,i,n.startLineNumber,c,f);if(g!==null)g!==0&&this.getIndentEditsOfMovingBlock(e,t,n,i,s,g);else{d.getLineContent=T=>T===n.startLineNumber?f:T>=n.startLineNumber+1&&T<=n.endLineNumber+1?e.getLineContent(T-1):e.getLineContent(T);let b=rr.getGoodIndentForLine(this._autoIndent,d,e.getLanguageIdAtPosition(c,1),n.startLineNumber+1,l);if(b!==null){let T=ft(e.getLineContent(n.startLineNumber)),x=fr(b,i),R=fr(T,i);if(x!==R){let I=x-R;this.getIndentEditsOfMovingBlock(e,t,n,i,s,I)}}}}else t.addEditOperation(new y(n.startLineNumber,1,n.startLineNumber,1),f+`
`)}else if(c=n.startLineNumber-1,u=e.getLineContent(c),t.addEditOperation(new y(c,1,c+1,1),null),t.addEditOperation(new y(n.endLineNumber,e.getLineMaxColumn(n.endLineNumber),n.endLineNumber,e.getLineMaxColumn(n.endLineNumber)),`
`+u),this.shouldAutoIndent(e,n)){d.getLineContent=m=>m===c?e.getLineContent(n.startLineNumber):e.getLineContent(m);let f=this.matchEnterRule(e,l,i,n.startLineNumber,n.startLineNumber-2);if(f!==null)f!==0&&this.getIndentEditsOfMovingBlock(e,t,n,i,s,f);else{let m=rr.getGoodIndentForLine(this._autoIndent,d,e.getLanguageIdAtPosition(n.startLineNumber,1),c,l);if(m!==null){let g=ft(e.getLineContent(n.startLineNumber)),b=fr(m,i),T=fr(g,i);if(b!==T){let x=b-T;this.getIndentEditsOfMovingBlock(e,t,n,i,s,x)}}}}}this._selectionId=t.trackSelection(n)}buildIndentConverter(e,t,r){return{shiftIndent:n=>ya.shiftIndent(n,n.length+1,e,t,r),unshiftIndent:n=>ya.unshiftIndent(n,n.length+1,e,t,r)}}parseEnterResult(e,t,r,n,i){if(i){let a=i.indentation;i.indentAction===Xl.None||i.indentAction===Xl.Indent?a=i.indentation+i.appendText:i.indentAction===Xl.IndentOutdent?a=i.indentation:i.indentAction===Xl.Outdent&&(a=t.unshiftIndent(i.indentation)+i.appendText);let s=e.getLineContent(n);if(this.trimLeft(s).indexOf(this.trimLeft(a))>=0){let l=ft(e.getLineContent(n)),d=ft(a),c=rr.getIndentMetadata(e,n);c!==null&&c&2&&(d=t.unshiftIndent(d));let u=fr(d,r),f=fr(l,r);return u-f}}return null}matchEnterRuleMovingDown(e,t,r,n,i,a){if(ms(a)>=0){let s=e.getLineMaxColumn(i),l=rr.getEnterAction(this._autoIndent,e,new y(i,s,i,s));return this.parseEnterResult(e,t,r,n,l)}else{let s=n-1;for(;s>=1;){let c=e.getLineContent(s);if(ms(c)>=0)break;s--}if(s<1||n>e.getLineCount())return null;let l=e.getLineMaxColumn(s),d=rr.getEnterAction(this._autoIndent,e,new y(s,l,s,l));return this.parseEnterResult(e,t,r,n,d)}}matchEnterRule(e,t,r,n,i,a){let s=i;for(;s>=1;){let c;if(s===i&&a!==void 0?c=a:c=e.getLineContent(s),ms(c)>=0)break;s--}if(s<1||n>e.getLineCount())return null;let l=e.getLineMaxColumn(s),d=rr.getEnterAction(this._autoIndent,e,new y(s,l,s,l));return this.parseEnterResult(e,t,r,n,d)}trimLeft(e){return e.replace(/^\s+/,"")}shouldAutoIndent(e,t){if(this._autoIndent<4||!e.isCheapToTokenize(t.startLineNumber))return!1;let r=e.getLanguageIdAtPosition(t.startLineNumber,1),n=e.getLanguageIdAtPosition(t.endLineNumber,1);return!(r!==n||rr.getIndentRulesSupport(r)===null)}getIndentEditsOfMovingBlock(e,t,r,n,i,a){for(let s=r.startLineNumber;s<=r.endLineNumber;s++){let l=e.getLineContent(s),d=ft(l),u=fr(d,n)+a,f=zo(u,n,i);f!==d&&(t.addEditOperation(new y(s,1,s,d.length+1),f),s===r.endLineNumber&&r.endColumn<=d.length+1&&f===""&&(this._moveEndLineSelectionShrink=!0))}}computeCursorState(e,t){let r=t.getTrackedSelection(this._selectionId);return this._moveEndPositionDown&&(r=r.setEndPosition(r.endLineNumber+1,1)),this._moveEndLineSelectionShrink&&r.startLineNumber<r.endLineNumber&&(r=r.setEndPosition(r.endLineNumber,2)),r}};ki();ee();var ui=class{constructor(e,t){this.selection=e,this.descending=t,this.selectionId=null}static getCollator(){return ui._COLLATOR||(ui._COLLATOR=new Intl.Collator),ui._COLLATOR}getEditOperations(e,t){let r=hN(e,this.selection,this.descending);r&&t.addEditOperation(r.range,r.text),this.selectionId=t.trackSelection(this.selection)}computeCursorState(e,t){return t.getTrackedSelection(this.selectionId)}static canRun(e,t,r){if(e===null)return!1;let n=hC(e,t,r);if(!n)return!1;for(let i=0,a=n.before.length;i<a;i++)if(n.before[i]!==n.after[i])return!0;return!1}};ui._COLLATOR=null;function hC(o,e,t){let r=e.startLineNumber,n=e.endLineNumber;if(e.endColumn===1&&n--,r>=n)return null;let i=[];for(let s=r;s<=n;s++)i.push(o.getLineContent(s));let a=i.slice(0);return a.sort(ui.getCollator().compare),t===!0&&(a=a.reverse()),{startLineNumber:r,endLineNumber:n,before:i,after:a}}function hN(o,e,t){let r=hC(o,e,t);return r?We.replace(new y(r.startLineNumber,1,r.endLineNumber,o.getLineMaxColumn(r.endLineNumber)),r.after.join(`
`)):null}Z();ar();var fy=class extends M{constructor(e,t){super(t);this.down=e}run(e,t){if(!t.hasModel())return;let r=t.getSelections().map((a,s)=>({selection:a,index:s,ignore:!1}));r.sort((a,s)=>y.compareRangesUsingStarts(a.selection,s.selection));let n=r[0];for(let a=1;a<r.length;a++){let s=r[a];n.selection.endLineNumber===s.selection.startLineNumber&&(n.index<s.index?s.ignore=!0:(n.ignore=!0,n=s))}let i=[];for(let a of r)i.push(new om(a.selection,this.down,a.ignore));t.pushUndoStop(),t.executeCommands(this.id,i),t.pushUndoStop()}},gC=class extends fy{constructor(){super(!1,{id:"editor.action.copyLinesUpAction",label:p("lines.copyUp","Copy Line Up"),alias:"Copy Line Up",precondition:v.writable,kbOpts:{kbExpr:v.editorTextFocus,primary:1552,linux:{primary:3600},weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"2_line",title:p({key:"miCopyLinesUp",comment:["&& denotes a mnemonic"]},"&&Copy Line Up"),order:1}})}},_C=class extends fy{constructor(){super(!0,{id:"editor.action.copyLinesDownAction",label:p("lines.copyDown","Copy Line Down"),alias:"Copy Line Down",precondition:v.writable,kbOpts:{kbExpr:v.editorTextFocus,primary:1554,linux:{primary:3602},weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"2_line",title:p({key:"miCopyLinesDown",comment:["&& denotes a mnemonic"]},"Co&&py Line Down"),order:2}})}},yC=class extends M{constructor(){super({id:"editor.action.duplicateSelection",label:p("duplicateSelection","Duplicate Selection"),alias:"Duplicate Selection",precondition:v.writable,menuOpts:{menuId:oe.MenubarSelectionMenu,group:"2_line",title:p({key:"miDuplicateSelection",comment:["&& denotes a mnemonic"]},"&&Duplicate Selection"),order:5}})}run(e,t,r){if(!t.hasModel())return;let n=[],i=t.getSelections(),a=t.getModel();for(let s of i)if(s.isEmpty())n.push(new om(s,!0));else{let l=new X(s.endLineNumber,s.endColumn,s.endLineNumber,s.endColumn);n.push(new k1(l,a.getValueInRange(s)))}t.pushUndoStop(),t.executeCommands(this.id,n),t.pushUndoStop()}},my=class extends M{constructor(e,t){super(t);this.down=e}run(e,t){let r=[],n=t.getSelections()||[],i=t.getOption(9);for(let a of n)r.push(new py(a,this.down,i));t.pushUndoStop(),t.executeCommands(this.id,r),t.pushUndoStop()}},vC=class extends my{constructor(){super(!1,{id:"editor.action.moveLinesUpAction",label:p("lines.moveUp","Move Line Up"),alias:"Move Line Up",precondition:v.writable,kbOpts:{kbExpr:v.editorTextFocus,primary:528,linux:{primary:528},weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"2_line",title:p({key:"miMoveLinesUp",comment:["&& denotes a mnemonic"]},"Mo&&ve Line Up"),order:3}})}},bC=class extends my{constructor(){super(!0,{id:"editor.action.moveLinesDownAction",label:p("lines.moveDown","Move Line Down"),alias:"Move Line Down",precondition:v.writable,kbOpts:{kbExpr:v.editorTextFocus,primary:530,linux:{primary:530},weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"2_line",title:p({key:"miMoveLinesDown",comment:["&& denotes a mnemonic"]},"Move &&Line Down"),order:4}})}},hy=class extends M{constructor(e,t){super(t);this.descending=e}run(e,t){let r=t.getSelections()||[];for(let i of r)if(!ui.canRun(t.getModel(),i,this.descending))return;let n=[];for(let i=0,a=r.length;i<a;i++)n[i]=new ui(r[i],this.descending);t.pushUndoStop(),t.executeCommands(this.id,n),t.pushUndoStop()}},SC=class extends hy{constructor(){super(!1,{id:"editor.action.sortLinesAscending",label:p("lines.sortAscending","Sort Lines Ascending"),alias:"Sort Lines Ascending",precondition:v.writable})}},EC=class extends hy{constructor(){super(!0,{id:"editor.action.sortLinesDescending",label:p("lines.sortDescending","Sort Lines Descending"),alias:"Sort Lines Descending",precondition:v.writable})}},TC=class extends M{constructor(){super({id:"editor.action.removeDuplicateLines",label:p("lines.deleteDuplicates","Delete Duplicate Lines"),alias:"Delete Duplicate Lines",precondition:v.writable})}run(e,t){if(!t.hasModel())return;let r=t.getModel();if(r.getLineCount()===1&&r.getLineMaxColumn(1)===1)return;let n=[],i=[],a=0;for(let s of t.getSelections()){let l=new Set,d=[];for(let m=s.startLineNumber;m<=s.endLineNumber;m++){let g=r.getLineContent(m);l.has(g)||(d.push(g),l.add(g))}let c=new X(s.startLineNumber,1,s.endLineNumber,r.getLineMaxColumn(s.endLineNumber)),u=s.startLineNumber-a,f=new X(u,1,u+d.length-1,d[d.length-1].length);n.push(We.replace(c,d.join(`
`))),i.push(f),a+=s.endLineNumber-s.startLineNumber+1-d.length}t.pushUndoStop(),t.executeEdits(this.id,n,i),t.pushUndoStop()}},Od=class extends M{constructor(){super({id:Od.ID,label:p("lines.trimTrailingWhitespace","Trim Trailing Whitespace"),alias:"Trim Trailing Whitespace",precondition:v.writable,kbOpts:{kbExpr:v.editorTextFocus,primary:Xe(2089,2102),weight:100}})}run(e,t,r){let n=[];r.reason==="auto-save"&&(n=(t.getSelections()||[]).map(s=>new z(s.positionLineNumber,s.positionColumn)));let i=t.getSelection();if(i===null)return;let a=new uy(i,n);t.pushUndoStop(),t.executeCommands(this.id,[a]),t.pushUndoStop()}};Od.ID="editor.action.trimTrailingWhitespace";var xC=class extends M{constructor(){super({id:"editor.action.deleteLines",label:p("lines.delete","Delete Line"),alias:"Delete Line",precondition:v.writable,kbOpts:{kbExpr:v.textInputFocus,primary:3113,weight:100}})}run(e,t){if(!t.hasModel())return;let r=this._getLinesToRemove(t),n=t.getModel();if(n.getLineCount()===1&&n.getLineMaxColumn(1)===1)return;let i=0,a=[],s=[];for(let l=0,d=r.length;l<d;l++){let c=r[l],u=c.startLineNumber,f=c.endLineNumber,m=1,g=n.getLineMaxColumn(f);f<n.getLineCount()?(f+=1,g=1):u>1&&(u-=1,m=n.getLineMaxColumn(u)),a.push(We.replace(new X(u,m,f,g),"")),s.push(new X(u-i,c.positionColumn,u-i,c.positionColumn)),i+=c.endLineNumber-c.startLineNumber+1}t.pushUndoStop(),t.executeEdits(this.id,a,s),t.pushUndoStop()}_getLinesToRemove(e){let t=e.getSelections().map(i=>{let a=i.endLineNumber;return i.startLineNumber<i.endLineNumber&&i.endColumn===1&&(a-=1),{startLineNumber:i.startLineNumber,selectionStartColumn:i.selectionStartColumn,endLineNumber:a,positionColumn:i.positionColumn}});t.sort((i,a)=>i.startLineNumber===a.startLineNumber?i.endLineNumber-a.endLineNumber:i.startLineNumber-a.startLineNumber);let r=[],n=t[0];for(let i=1;i<t.length;i++)n.endLineNumber+1>=t[i].startLineNumber?n.endLineNumber=t[i].endLineNumber:(r.push(n),n=t[i]);return r.push(n),r}},CC=class extends M{constructor(){super({id:"editor.action.indentLines",label:p("lines.indent","Indent Line"),alias:"Indent Line",precondition:v.writable,kbOpts:{kbExpr:v.editorTextFocus,primary:2137,weight:100}})}run(e,t){let r=t._getViewModel();!r||(t.pushUndoStop(),t.executeCommands(this.id,op.indent(r.cursorConfig,t.getModel(),t.getSelections())),t.pushUndoStop())}},LC=class extends M{constructor(){super({id:"editor.action.outdentLines",label:p("lines.outdent","Outdent Line"),alias:"Outdent Line",precondition:v.writable,kbOpts:{kbExpr:v.editorTextFocus,primary:2135,weight:100}})}run(e,t){Ms.Outdent.runEditorCommand(e,t,null)}},DC=class extends M{constructor(){super({id:"editor.action.insertLineBefore",label:p("lines.insertBefore","Insert Line Above"),alias:"Insert Line Above",precondition:v.writable,kbOpts:{kbExpr:v.editorTextFocus,primary:3075,weight:100}})}run(e,t){let r=t._getViewModel();!r||(t.pushUndoStop(),t.executeCommands(this.id,op.lineInsertBefore(r.cursorConfig,t.getModel(),t.getSelections())))}},wC=class extends M{constructor(){super({id:"editor.action.insertLineAfter",label:p("lines.insertAfter","Insert Line Below"),alias:"Insert Line Below",precondition:v.writable,kbOpts:{kbExpr:v.editorTextFocus,primary:2051,weight:100}})}run(e,t){let r=t._getViewModel();!r||(t.pushUndoStop(),t.executeCommands(this.id,op.lineInsertAfter(r.cursorConfig,t.getModel(),t.getSelections())))}},gy=class extends M{run(e,t){if(!t.hasModel())return;let r=t.getSelection(),n=this._getRangesToDelete(t),i=[];for(let l=0,d=n.length-1;l<d;l++){let c=n[l],u=n[l+1];y.intersectRanges(c,u)===null?i.push(c):n[l+1]=y.plusRange(c,u)}i.push(n[n.length-1]);let a=this._getEndCursorState(r,i),s=i.map(l=>We.replace(l,""));t.pushUndoStop(),t.executeEdits(this.id,s,a),t.pushUndoStop()}},AC=class extends gy{constructor(){super({id:"deleteAllLeft",label:p("lines.deleteAllLeft","Delete All Left"),alias:"Delete All Left",precondition:v.writable,kbOpts:{kbExpr:v.textInputFocus,primary:0,mac:{primary:2049},weight:100}})}_getEndCursorState(e,t){let r=null,n=[],i=0;return t.forEach(a=>{let s;if(a.endColumn===1&&i>0){let l=a.startLineNumber-i;s=new X(l,a.startColumn,l,a.startColumn)}else s=new X(a.startLineNumber,a.startColumn,a.startLineNumber,a.startColumn);i+=a.endLineNumber-a.startLineNumber,a.intersectRanges(e)?r=s:n.push(s)}),r&&n.unshift(r),n}_getRangesToDelete(e){let t=e.getSelections();if(t===null)return[];let r=t,n=e.getModel();return n===null?[]:(r.sort(y.compareRangesUsingStarts),r=r.map(i=>{if(i.isEmpty())if(i.startColumn===1){let a=Math.max(1,i.startLineNumber-1),s=i.startLineNumber===1?1:n.getLineContent(a).length+1;return new y(a,s,i.startLineNumber,1)}else return new y(i.startLineNumber,1,i.startLineNumber,i.startColumn);else return new y(i.startLineNumber,1,i.endLineNumber,i.endColumn)}),r)}},IC=class extends gy{constructor(){super({id:"deleteAllRight",label:p("lines.deleteAllRight","Delete All Right"),alias:"Delete All Right",precondition:v.writable,kbOpts:{kbExpr:v.textInputFocus,primary:0,mac:{primary:297,secondary:[2068]},weight:100}})}_getEndCursorState(e,t){let r=null,n=[];for(let i=0,a=t.length,s=0;i<a;i++){let l=t[i],d=new X(l.startLineNumber-s,l.startColumn,l.startLineNumber-s,l.startColumn);l.intersectRanges(e)?r=d:n.push(d)}return r&&n.unshift(r),n}_getRangesToDelete(e){let t=e.getModel();if(t===null)return[];let r=e.getSelections();if(r===null)return[];let n=r.map(i=>{if(i.isEmpty()){let a=t.getLineMaxColumn(i.startLineNumber);return i.startColumn===a?new y(i.startLineNumber,i.startColumn,i.startLineNumber+1,1):new y(i.startLineNumber,i.startColumn,i.startLineNumber,a)}return i});return n.sort(y.compareRangesUsingStarts),n}},kC=class extends M{constructor(){super({id:"editor.action.joinLines",label:p("lines.joinLines","Join Lines"),alias:"Join Lines",precondition:v.writable,kbOpts:{kbExpr:v.editorTextFocus,primary:0,mac:{primary:296},weight:100}})}run(e,t){let r=t.getSelections();if(r===null)return;let n=t.getSelection();if(n===null)return;r.sort(y.compareRangesUsingStarts);let i=[],a=r.reduce((f,m)=>f.isEmpty()?f.endLineNumber===m.startLineNumber?(n.equalsSelection(f)&&(n=m),m):m.startLineNumber>f.endLineNumber+1?(i.push(f),m):new X(f.startLineNumber,f.startColumn,m.endLineNumber,m.endColumn):m.startLineNumber>f.endLineNumber?(i.push(f),m):new X(f.startLineNumber,f.startColumn,m.endLineNumber,m.endColumn));i.push(a);let s=t.getModel();if(s===null)return;let l=[],d=[],c=n,u=0;for(let f=0,m=i.length;f<m;f++){let g=i[f],b=g.startLineNumber,T=1,x=0,R,I,H=s.getLineContent(g.endLineNumber).length-g.endColumn;if(g.isEmpty()||g.startLineNumber===g.endLineNumber){let Ce=g.getStartPosition();Ce.lineNumber<s.getLineCount()?(R=b+1,I=s.getLineMaxColumn(R)):(R=Ce.lineNumber,I=s.getLineMaxColumn(Ce.lineNumber))}else R=g.endLineNumber,I=s.getLineMaxColumn(R);let U=s.getLineContent(b);for(let Ce=b+1;Ce<=R;Ce++){let wt=s.getLineContent(Ce),Vt=s.getLineFirstNonWhitespaceColumn(Ce);if(Vt>=1){let Ht=!0;U===""&&(Ht=!1),Ht&&(U.charAt(U.length-1)===" "||U.charAt(U.length-1)==="	")&&(Ht=!1,U=U.replace(/[\s\uFEFF\xA0]+$/g," "));let rn=wt.substr(Vt-1);U+=(Ht?" ":"")+rn,Ht?x=rn.length+1:x=rn.length}else x=0}let de=new y(b,T,R,I);if(!de.isEmpty()){let Ce;g.isEmpty()?(l.push(We.replace(de,U)),Ce=new X(de.startLineNumber-u,U.length-x+1,b-u,U.length-x+1)):g.startLineNumber===g.endLineNumber?(l.push(We.replace(de,U)),Ce=new X(g.startLineNumber-u,g.startColumn,g.endLineNumber-u,g.endColumn)):(l.push(We.replace(de,U)),Ce=new X(g.startLineNumber-u,g.startColumn,g.startLineNumber-u,U.length-H)),y.intersectRanges(de,n)!==null?c=Ce:d.push(Ce)}u+=de.endLineNumber-de.startLineNumber}d.unshift(c),t.pushUndoStop(),t.executeEdits(this.id,l,d),t.pushUndoStop()}},NC=class extends M{constructor(){super({id:"editor.action.transpose",label:p("editor.transpose","Transpose characters around the cursor"),alias:"Transpose characters around the cursor",precondition:v.writable})}run(e,t){let r=t.getSelections();if(r===null)return;let n=t.getModel();if(n===null)return;let i=[];for(let a=0,s=r.length;a<s;a++){let l=r[a];if(!l.isEmpty())continue;let d=l.getStartPosition(),c=n.getLineMaxColumn(d.lineNumber);if(d.column>=c){if(d.lineNumber===n.getLineCount())continue;let u=new y(d.lineNumber,Math.max(1,d.column-1),d.lineNumber+1,1),f=n.getValueInRange(u).split("").reverse().join("");i.push(new Ci(new X(d.lineNumber,Math.max(1,d.column-1),d.lineNumber+1,1),f))}else{let u=new y(d.lineNumber,Math.max(1,d.column-1),d.lineNumber,d.column+1),f=n.getValueInRange(u).split("").reverse().join("");i.push(new ip(u,f,new X(d.lineNumber,d.column+1,d.lineNumber,d.column+1)))}}t.pushUndoStop(),t.executeCommands(this.id,i),t.pushUndoStop()}},Fd=class extends M{run(e,t){let r=t.getSelections();if(r===null)return;let n=t.getModel();if(n===null)return;let i=t.getOption(117),a=[];for(let s of r)if(s.isEmpty()){let l=s.getStartPosition(),d=t.getConfiguredWordAtPosition(l);if(!d)continue;let c=new y(l.lineNumber,d.startColumn,l.lineNumber,d.endColumn),u=n.getValueInRange(c);a.push(We.replace(c,this._modifyText(u,i)))}else{let l=n.getValueInRange(s);a.push(We.replace(s,this._modifyText(l,i)))}t.pushUndoStop(),t.executeEdits(this.id,a),t.pushUndoStop()}},RC=class extends Fd{constructor(){super({id:"editor.action.transformToUppercase",label:p("editor.transformToUppercase","Transform to Uppercase"),alias:"Transform to Uppercase",precondition:v.writable})}_modifyText(e,t){return e.toLocaleUpperCase()}},PC=class extends Fd{constructor(){super({id:"editor.action.transformToLowercase",label:p("editor.transformToLowercase","Transform to Lowercase"),alias:"Transform to Lowercase",precondition:v.writable})}_modifyText(e,t){return e.toLocaleLowerCase()}},sm=class{constructor(e,t){this._pattern=e,this._flags=t,this._actual=null,this._evaluated=!1}get(){if(!this._evaluated){this._evaluated=!0;try{this._actual=new RegExp(this._pattern,this._flags)}catch(e){}}return this._actual}isSupported(){return this.get()!==null}},hl=class extends Fd{constructor(){super({id:"editor.action.transformToTitlecase",label:p("editor.transformToTitlecase","Transform to Title Case"),alias:"Transform to Title Case",precondition:v.writable})}_modifyText(e,t){let r=hl.titleBoundary.get();return r?e.toLocaleLowerCase().replace(r,n=>n.toLocaleUpperCase()):e}};hl.titleBoundary=new sm("(^|[^\\p{L}\\p{N}']|((^|\\P{L})'))\\p{L}","gmu");var Xi=class extends Fd{constructor(){super({id:"editor.action.transformToSnakecase",label:p("editor.transformToSnakecase","Transform to Snake Case"),alias:"Transform to Snake Case",precondition:v.writable})}_modifyText(e,t){let r=Xi.caseBoundary.get(),n=Xi.singleLetters.get();return!r||!n?e:e.replace(r,"$1_$2").replace(n,"$1_$2$3").toLocaleLowerCase()}};Xi.caseBoundary=new sm("(\\p{Ll})(\\p{Lu})","gmu");Xi.singleLetters=new sm("(\\p{Lu}|\\p{N})(\\p{Lu})(\\p{Ll})","gmu");D(gC);D(_C);D(yC);D(vC);D(bC);D(SC);D(EC);D(TC);D(Od);D(xC);D(CC);D(LC);D(DC);D(wC);D(AC);D(IC);D(kC);D(NC);D(RC);D(PC);Xi.caseBoundary.isSupported()&&Xi.singleLetters.isSupported()&&D(Xi);hl.titleBoundary.isSupported()&&D(hl);bt();we();pt();$n();Ae();Ne();W();Ye();Xt();pe();Er();tt();ee();Be();jt();Re();on();Z();Le();mt();Oe();var gN=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},MC=function(o,e){return function(t,r){e(t,r,o)}},_y=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},OC=new fe("LinkedEditingInputVisible",!1),FC="linked-editing-decoration",Ha=class yy extends F{constructor(e,t,r){super();this.languageConfigurationService=r,this._debounceDuration=200,this._localToDispose=this._register(new P),this._editor=e,this._enabled=!1,this._visibleContextKey=OC.bindTo(t),this._currentDecorations=[],this._languageWordPattern=null,this._currentWordPattern=null,this._ignoreChangeEvent=!1,this._localToDispose=this._register(new P),this._rangeUpdateTriggerPromise=null,this._rangeSyncTriggerPromise=null,this._currentRequest=null,this._currentRequestPosition=null,this._currentRequestModelVersion=null,this._register(this._editor.onDidChangeModel(()=>this.reinitialize(!0))),this._register(this._editor.onDidChangeConfiguration(n=>{(n.hasChanged(62)||n.hasChanged(82))&&this.reinitialize(!1)})),this._register(Cu.onDidChange(()=>this.reinitialize(!1))),this._register(this._editor.onDidChangeModelLanguage(()=>this.reinitialize(!0))),this.reinitialize(!0)}static get(e){return e.getContribution(yy.ID)}reinitialize(e){let t=this._editor.getModel(),r=t!==null&&(this._editor.getOption(62)||this._editor.getOption(82))&&Cu.has(t);if(r===this._enabled&&!e||(this._enabled=r,this.clearRanges(),this._localToDispose.clear(),!r||t===null))return;this._localToDispose.add(ut.runAndSubscribe(t.onDidChangeLanguageConfiguration,()=>{this._languageWordPattern=this.languageConfigurationService.getLanguageConfiguration(t.getLanguageId()).getWordDefinition()}));let n=new Cn(this._debounceDuration),i=()=>{this._rangeUpdateTriggerPromise=n.trigger(()=>this.updateRanges(),this._debounceDuration)},a=new Cn(0),s=l=>{this._rangeSyncTriggerPromise=a.trigger(()=>this._syncRanges(l))};this._localToDispose.add(this._editor.onDidChangeCursorPosition(()=>{i()})),this._localToDispose.add(this._editor.onDidChangeModelContent(l=>{if(!this._ignoreChangeEvent&&this._currentDecorations.length>0){let d=t.getDecorationRange(this._currentDecorations[0]);if(d&&l.changes.every(c=>d.intersectRanges(c.range))){s(this._currentDecorations);return}}i()})),this._localToDispose.add({dispose:()=>{n.cancel(),a.cancel()}}),this.updateRanges()}_syncRanges(e){if(!this._editor.hasModel()||e!==this._currentDecorations||e.length===0)return;let t=this._editor.getModel(),r=t.getDecorationRange(e[0]);if(!r||r.startLineNumber!==r.endLineNumber)return this.clearRanges();let n=t.getValueInRange(r);if(this._currentWordPattern){let a=n.match(this._currentWordPattern);if((a?a[0].length:0)!==n.length)return this.clearRanges()}let i=[];for(let a=1,s=e.length;a<s;a++){let l=t.getDecorationRange(e[a]);if(!!l)if(l.startLineNumber!==l.endLineNumber)i.push({range:l,text:n});else{let d=t.getValueInRange(l),c=n,u=l.startColumn,f=l.endColumn,m=la(d,c);u+=m,d=d.substr(m),c=c.substr(m);let g=Eu(d,c);f-=g,d=d.substr(0,d.length-g),c=c.substr(0,c.length-g),(u!==f||c.length!==0)&&i.push({range:new y(l.startLineNumber,u,l.endLineNumber,f),text:c})}}if(i.length!==0)try{this._editor.popUndoStop(),this._ignoreChangeEvent=!0;let a=this._editor._getViewModel().getPrevEditOperationType();this._editor.executeEdits("linkedEditing",i),this._editor._getViewModel().setPrevEditOperationType(a)}finally{this._ignoreChangeEvent=!1}}dispose(){this.clearRanges(),super.dispose()}clearRanges(){this._visibleContextKey.set(!1),this._currentDecorations=this._editor.deltaDecorations(this._currentDecorations,[]),this._currentRequest&&(this._currentRequest.cancel(),this._currentRequest=null,this._currentRequestPosition=null)}updateRanges(e=!1){return _y(this,void 0,void 0,function*(){if(!this._editor.hasModel()){this.clearRanges();return}let t=this._editor.getPosition();if(!this._enabled&&!e||this._editor.getSelections().length>1){this.clearRanges();return}let r=this._editor.getModel(),n=r.getVersionId();if(this._currentRequestPosition&&this._currentRequestModelVersion===n){if(t.equals(this._currentRequestPosition))return;if(this._currentDecorations&&this._currentDecorations.length>0){let a=r.getDecorationRange(this._currentDecorations[0]);if(a&&a.containsPosition(t))return}}this._currentRequestPosition=t,this._currentRequestModelVersion=n;let i=Ge(a=>_y(this,void 0,void 0,function*(){try{let s=yield BC(r,t,a);if(i!==this._currentRequest||(this._currentRequest=null,n!==r.getVersionId()))return;let l=[];(s==null?void 0:s.ranges)&&(l=s.ranges),this._currentWordPattern=(s==null?void 0:s.wordPattern)||this._languageWordPattern;let d=!1;for(let u=0,f=l.length;u<f;u++)if(y.containsPosition(l[u],t)){if(d=!0,u!==0){let m=l[u];l.splice(u,1),l.unshift(m)}break}if(!d){this.clearRanges();return}let c=l.map(u=>({range:u,options:yy.DECORATION}));this._visibleContextKey.set(!0),this._currentDecorations=this._editor.deltaDecorations(this._currentDecorations,c)}catch(s){jn(s)||ce(s),(this._currentRequest===i||!this._currentRequest)&&this.clearRanges()}}));return this._currentRequest=i,i})}};Ha.ID="editor.contrib.linkedEditing";Ha.DECORATION=Se.register({description:"linked-editing",stickiness:0,className:FC});Ha=gN([MC(1,re),MC(2,Nt)],Ha);var GC=class extends M{constructor(){super({id:"editor.action.linkedEditing",label:p("linkedEditing.label","Start Linked Editing"),alias:"Start Linked Editing",precondition:G.and(v.writable,v.hasRenameProvider),kbOpts:{kbExpr:v.editorTextFocus,primary:3132,weight:100}})}runCommand(e,t){let r=e.get(Ue),[n,i]=Array.isArray(t)&&t||[void 0,void 0];return Te.isUri(n)&&z.isIPosition(i)?r.openCodeEditor({resource:n},r.getActiveCodeEditor()).then(a=>{!a||(a.setPosition(i),a.invokeWithinContext(s=>(this.reportTelemetry(s,a),this.run(s,a))))},ce):super.runCommand(e,t)}run(e,t){let r=Ha.get(t);return r?Promise.resolve(r.updateRanges(!0)):Promise.resolve()}},_N=dt.bindToContribution(Ha.get);K(new _N({id:"cancelLinkedEditingInput",precondition:OC,handler:o=>o.clearRanges(),kbOpts:{kbExpr:v.editorTextFocus,weight:100+99,primary:9,secondary:[1033]}}));function BC(o,e,t){let r=Cu.ordered(o);return Su(r.map(n=>()=>_y(this,void 0,void 0,function*(){try{return yield n.provideLinkedEditingRanges(o,e,t)}catch(i){ze(i);return}})),n=>!!n&&It(n==null?void 0:n.ranges))}var yN=J("editor.linkedEditingBackground",{dark:xe.fromHex("#f00").transparent(.3),light:xe.fromHex("#f00").transparent(.3),hc:xe.fromHex("#f00").transparent(.3)},p("editorLinkedEditingBackground","Background color when the editor auto renames on type."));ke((o,e)=>{let t=o.getColor(yN);t&&e.addRule(`.monaco-editor .${FC} { background: ${t}; border-left-color: ${t}; }`)});xr("_executeLinkedEditingProvider",(o,e)=>BC(o,e,he.None));Q(Ha.ID,Ha);D(GC);we();pt();Ae();W();Yl();Ir();Br();Xt();pe();jt();Re();bt();pt();Ae();W();Jt();Xt();ee();Re();da();xt();var VC=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},HC=class{constructor(e,t){this._link=e,this._provider=t}toJSON(){return{range:this.range,url:this.url,tooltip:this.tooltip}}get range(){return this._link.range}get url(){return this._link.url}get tooltip(){return this._link.tooltip}resolve(e){return VC(this,void 0,void 0,function*(){return this._link.url?this._link.url:typeof this._provider.resolveLink=="function"?Promise.resolve(this._provider.resolveLink(this._link,e)).then(t=>(this._link=t||this._link,this._link.url?this.resolve(e):Promise.reject(new Error("missing")))):Promise.reject(new Error("missing"))})}},Gd=class{constructor(e){this._disposables=new P;let t=[];for(let[r,n]of e){let i=r.links.map(a=>new HC(a,n));t=Gd._union(t,i),yu(r)&&this._disposables.add(r)}this.links=t}dispose(){this._disposables.dispose(),this.links.length=0}static _union(e,t){let r=[],n,i,a,s;for(n=0,a=0,i=e.length,s=t.length;n<i&&a<s;){let l=e[n],d=t[a];if(y.areIntersectingOrTouching(l.range,d.range)){n++;continue}y.compareRangesUsingStarts(l.range,d.range)<0?(r.push(l),n++):(r.push(d),a++)}for(;n<i;n++)r.push(e[n]);for(;a<s;a++)r.push(t[a]);return r}};function by(o,e){let t=[],r=Kl.ordered(o).reverse().map((n,i)=>Promise.resolve(n.provideLinks(o,e)).then(a=>{a&&(t[i]=[a,n])},ze));return Promise.all(r).then(()=>{let n=new Gd(Un(t));return e.isCancellationRequested?(n.dispose(),new Gd([])):n})}Ie.registerCommand("_executeLinkProvider",(o,...e)=>VC(void 0,void 0,void 0,function*(){let[t,r]=e;Je(t instanceof Te),typeof r!="number"&&(r=0);let n=o.get(Yt).getModel(t);if(!n)return[];let i=yield by(n,he.None);if(!i)return[];for(let s=0;s<Math.min(r,i.links.length);s++)yield i.links[s].resolve(he.None);let a=i.links.slice(0);return i.dispose(),a}));Z();Jr();mt();Oe();var vN=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},UC=function(o,e){return function(t,r){e(t,r,o)}},bN=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})};function SN(o,e){let t=o.url&&/^command:/i.test(o.url.toString()),r=o.tooltip?o.tooltip:t?p("links.navigate.executeCmd","Execute command"):p("links.navigate.follow","Follow link"),n=e?yr?p("links.navigate.kb.meta.mac","cmd + click"):p("links.navigate.kb.meta","ctrl + click"):yr?p("links.navigate.kb.alt.mac","option + click"):p("links.navigate.kb.alt","alt + click");if(o.url){let i="";if(/^command:/i.test(o.url.toString())){let s=o.url.toString().match(/^command:([^?#]+)/);if(s){let l=s[1];i=` "${p("tooltip.explanation","Execute command {0}",l)}"`}}return new sr("",!0).appendMarkdown(`[${r}](${o.url.toString(!0).replace(/ /g,"%20")}${i}) (${n})`)}else return new sr().appendText(`${r} (${n})`)}var WC={general:Se.register({description:"detected-link",stickiness:1,collapseOnReplaceEdit:!0,inlineClassName:"detected-link"}),active:Se.register({description:"detected-link-active",stickiness:1,collapseOnReplaceEdit:!0,inlineClassName:"detected-link-active"})},Ko=class{constructor(e,t){this.link=e,this.decorationId=t}static decoration(e,t){return{range:e.range,options:Ko._getOptions(e,t,!1)}}static _getOptions(e,t,r){let n=Object.assign({},r?WC.active:WC.general);return n.hoverMessage=SN(e,t),n}activate(e,t){e.changeDecorationOptions(this.decorationId,Ko._getOptions(this.link,t,!0))}deactivate(e,t){e.changeDecorationOptions(this.decorationId,Ko._getOptions(this.link,t,!1))}},qo=class Sy{constructor(e,t,r){this.listenersToRemove=new P,this.editor=e,this.openerService=t,this.notificationService=r;let n=new bo(e);this.listenersToRemove.add(n),this.listenersToRemove.add(n.onMouseMoveOrRelevantKeyDown(([i,a])=>{this._onEditorMouseMove(i,a)})),this.listenersToRemove.add(n.onExecute(i=>{this.onEditorMouseUp(i)})),this.listenersToRemove.add(n.onCancel(i=>{this.cleanUpActiveLinkDecoration()})),this.enabled=e.getOption(63),this.listenersToRemove.add(e.onDidChangeConfiguration(i=>{let a=e.getOption(63);this.enabled!==a&&(this.enabled=a,this.updateDecorations([]),this.stop(),this.beginCompute())})),this.listenersToRemove.add(e.onDidChangeModelContent(i=>this.onChange())),this.listenersToRemove.add(e.onDidChangeModel(i=>this.onModelChanged())),this.listenersToRemove.add(e.onDidChangeModelLanguage(i=>this.onModelLanguageChanged())),this.listenersToRemove.add(Kl.onDidChange(i=>this.onModelLanguageChanged())),this.timeout=new Rr,this.computePromise=null,this.activeLinksList=null,this.currentOccurrences={},this.activeLinkDecorationId=null,this.beginCompute()}static get(e){return e.getContribution(Sy.ID)}onModelChanged(){this.currentOccurrences={},this.activeLinkDecorationId=null,this.stop(),this.beginCompute()}onModelLanguageChanged(){this.stop(),this.beginCompute()}onChange(){this.timeout.setIfNotSet(()=>this.beginCompute(),Sy.RECOMPUTE_TIME)}beginCompute(){return bN(this,void 0,void 0,function*(){if(!this.editor.hasModel()||!this.enabled)return;let e=this.editor.getModel();if(!!Kl.has(e)){this.activeLinksList&&(this.activeLinksList.dispose(),this.activeLinksList=null),this.computePromise=Ge(t=>by(e,t));try{this.activeLinksList=yield this.computePromise,this.updateDecorations(this.activeLinksList.links)}catch(t){ce(t)}finally{this.computePromise=null}}})}updateDecorations(e){let t=this.editor.getOption(70)==="altKey",r=[],n=Object.keys(this.currentOccurrences);for(let s=0,l=n.length;s<l;s++){let d=n[s],c=this.currentOccurrences[d];r.push(c.decorationId)}let i=[];if(e)for(let s of e)i.push(Ko.decoration(s,t));let a=this.editor.deltaDecorations(r,i);this.currentOccurrences={},this.activeLinkDecorationId=null;for(let s=0,l=a.length;s<l;s++){let d=new Ko(e[s],a[s]);this.currentOccurrences[d.decorationId]=d}}_onEditorMouseMove(e,t){let r=this.editor.getOption(70)==="altKey";if(this.isEnabled(e,t)){this.cleanUpActiveLinkDecoration();let n=this.getLinkOccurrence(e.target.position);n&&this.editor.changeDecorations(i=>{n.activate(i,r),this.activeLinkDecorationId=n.decorationId})}else this.cleanUpActiveLinkDecoration()}cleanUpActiveLinkDecoration(){let e=this.editor.getOption(70)==="altKey";if(this.activeLinkDecorationId){let t=this.currentOccurrences[this.activeLinkDecorationId];t&&this.editor.changeDecorations(r=>{t.deactivate(r,e)}),this.activeLinkDecorationId=null}}onEditorMouseUp(e){if(!this.isEnabled(e))return;let t=this.getLinkOccurrence(e.target.position);!t||this.openLinkOccurrence(t,e.hasSideBySideModifier,!0)}openLinkOccurrence(e,t,r=!1){if(!this.openerService)return;let{link:n}=e;n.resolve(he.None).then(i=>{if(typeof i=="string"&&this.editor.hasModel()){let a=this.editor.getModel().uri;if(a.scheme===Et.file&&i.startsWith(`${Et.file}:`)){let s=Te.parse(i);if(s.scheme===Et.file){let l=x1(s),d=null;l.startsWith("/./")?d=`.${l.substr(1)}`:l.startsWith("//./")&&(d=`.${l.substr(2)}`),d&&(i=L1(a,d))}}}return this.openerService.open(i,{openToSide:t,fromUserGesture:r,allowContributedOpeners:!0,allowCommands:!0})},i=>{let a=i instanceof Error?i.message:i;a==="invalid"?this.notificationService.warn(p("invalid.url","Failed to open this link because it is not well-formed: {0}",n.url.toString())):a==="missing"?this.notificationService.warn(p("missing.url","Failed to open this link because its target is missing.")):ce(i)})}getLinkOccurrence(e){if(!this.editor.hasModel()||!e)return null;let t=this.editor.getModel().getDecorationsInRange({startLineNumber:e.lineNumber,startColumn:e.column,endLineNumber:e.lineNumber,endColumn:e.column},0,!0);for(let r of t){let n=this.currentOccurrences[r.id];if(n)return n}return null}isEnabled(e,t){return Boolean(e.target.type===6&&(e.hasTriggerModifier||t&&t.keyCodeIsTriggerKey))}stop(){var e;this.timeout.cancel(),this.activeLinksList&&((e=this.activeLinksList)===null||e===void 0||e.dispose(),this.activeLinksList=null),this.computePromise&&(this.computePromise.cancel(),this.computePromise=null)}dispose(){this.listenersToRemove.dispose(),this.stop(),this.timeout.dispose()}};qo.ID="editor.linkDetector";qo.RECOMPUTE_TIME=1e3;qo=vN([UC(1,yt),UC(2,$e)],qo);var jC=class extends M{constructor(){super({id:"editor.action.openLink",label:p("label","Open Link"),alias:"Open Link",precondition:void 0})}run(e,t){let r=qo.get(t);if(!r||!t.hasModel())return;let n=t.getSelections();for(let i of n){let a=r.getLinkOccurrence(i.getEndPosition());a&&r.openLinkOccurrence(a,!1)}}};Q(qo.ID,qo);D(jC);ke((o,e)=>{let t=o.getColor(As);t&&e.addRule(`.monaco-editor .detected-link-active { color: ${t} !important; }`)});An();we();gi();W();pe();ee();kt();Be();ds();jt();Re();Z();ar();Le();mt();Oe();function _l(o,e){let t=e.filter(r=>!o.find(n=>n.equals(r)));if(t.length>=1){let r=t.map(i=>`line ${i.viewState.position.lineNumber} column ${i.viewState.position.column}`).join(", "),n=t.length===1?p("cursorAdded","Cursor added: {0}",r):p("cursorsAdded","Cursors added: {0}",r);Sb(n)}}var KC=class extends M{constructor(){super({id:"editor.action.insertCursorAbove",label:p("mutlicursor.insertAbove","Add Cursor Above"),alias:"Add Cursor Above",precondition:void 0,kbOpts:{kbExpr:v.editorTextFocus,primary:2576,linux:{primary:1552,secondary:[3088]},weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"3_multi",title:p({key:"miInsertCursorAbove",comment:["&& denotes a mnemonic"]},"&&Add Cursor Above"),order:2}})}run(e,t,r){if(!t.hasModel())return;let n=!0;r&&r.logicalLine===!1&&(n=!1);let i=t._getViewModel();if(i.cursorConfig.readOnly)return;i.pushStackElement();let a=i.getCursorStates();i.setCursorStates(r.source,3,pc.addCursorUp(i,a,n)),i.revealTopMostCursor(r.source),_l(a,i.getCursorStates())}},qC=class extends M{constructor(){super({id:"editor.action.insertCursorBelow",label:p("mutlicursor.insertBelow","Add Cursor Below"),alias:"Add Cursor Below",precondition:void 0,kbOpts:{kbExpr:v.editorTextFocus,primary:2578,linux:{primary:1554,secondary:[3090]},weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"3_multi",title:p({key:"miInsertCursorBelow",comment:["&& denotes a mnemonic"]},"A&&dd Cursor Below"),order:3}})}run(e,t,r){if(!t.hasModel())return;let n=!0;r&&r.logicalLine===!1&&(n=!1);let i=t._getViewModel();if(i.cursorConfig.readOnly)return;i.pushStackElement();let a=i.getCursorStates();i.setCursorStates(r.source,3,pc.addCursorDown(i,a,n)),i.revealBottomMostCursor(r.source),_l(a,i.getCursorStates())}},JC=class extends M{constructor(){super({id:"editor.action.insertCursorAtEndOfEachLineSelected",label:p("mutlicursor.insertAtEndOfEachLineSelected","Add Cursors to Line Ends"),alias:"Add Cursors to Line Ends",precondition:void 0,kbOpts:{kbExpr:v.editorTextFocus,primary:1575,weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"3_multi",title:p({key:"miInsertCursorAtEndOfEachLineSelected",comment:["&& denotes a mnemonic"]},"Add C&&ursors to Line Ends"),order:4}})}getCursorsForSelection(e,t,r){if(!e.isEmpty()){for(let n=e.startLineNumber;n<e.endLineNumber;n++){let i=t.getLineMaxColumn(n);r.push(new X(n,i,n,i))}e.endColumn>1&&r.push(new X(e.endLineNumber,e.endColumn,e.endLineNumber,e.endColumn))}}run(e,t){if(!t.hasModel())return;let r=t.getModel(),n=t.getSelections(),i=t._getViewModel(),a=i.getCursorStates(),s=[];n.forEach(l=>this.getCursorsForSelection(l,r,s)),s.length>0&&t.setSelections(s),_l(a,i.getCursorStates())}},XC=class extends M{constructor(){super({id:"editor.action.addCursorsToBottom",label:p("mutlicursor.addCursorsToBottom","Add Cursors To Bottom"),alias:"Add Cursors To Bottom",precondition:void 0})}run(e,t){if(!t.hasModel())return;let r=t.getSelections(),n=t.getModel().getLineCount(),i=[];for(let l=r[0].startLineNumber;l<=n;l++)i.push(new X(l,r[0].startColumn,l,r[0].endColumn));let a=t._getViewModel(),s=a.getCursorStates();i.length>0&&t.setSelections(i),_l(s,a.getCursorStates())}},YC=class extends M{constructor(){super({id:"editor.action.addCursorsToTop",label:p("mutlicursor.addCursorsToTop","Add Cursors To Top"),alias:"Add Cursors To Top",precondition:void 0})}run(e,t){if(!t.hasModel())return;let r=t.getSelections(),n=[];for(let s=r[0].startLineNumber;s>=1;s--)n.push(new X(s,r[0].startColumn,s,r[0].endColumn));let i=t._getViewModel(),a=i.getCursorStates();n.length>0&&t.setSelections(n),_l(a,i.getCursorStates())}},Bd=class{constructor(e,t,r){this.selections=e,this.revealRange=t,this.revealScrollType=r}},gl=class{constructor(e,t,r,n,i,a,s){this._editor=e,this.findController=t,this.isDisconnectedFromFindController=r,this.searchText=n,this.wholeWord=i,this.matchCase=a,this.currentMatch=s}static create(e,t){if(!e.hasModel())return null;let r=t.getState();if(!e.hasTextFocus()&&r.isRevealed&&r.searchString.length>0)return new gl(e,t,!1,r.searchString,r.wholeWord,r.matchCase,null);let n=!1,i,a,s=e.getSelections();s.length===1&&s[0].isEmpty()?(n=!0,i=!0,a=!0):(i=r.wholeWord,a=r.matchCase);let l=e.getSelection(),d,c=null;if(l.isEmpty()){let u=e.getConfiguredWordAtPosition(l.getStartPosition());if(!u)return null;d=u.word,c=new X(l.startLineNumber,u.startColumn,l.startLineNumber,u.endColumn)}else d=e.getModel().getValueInRange(l).replace(/\r\n/g,`
`);return new gl(e,t,n,d,i,a,c)}addSelectionToNextFindMatch(){if(!this._editor.hasModel())return null;let e=this._getNextMatch();if(!e)return null;let t=this._editor.getSelections();return new Bd(t.concat(e),e,0)}moveSelectionToNextFindMatch(){if(!this._editor.hasModel())return null;let e=this._getNextMatch();if(!e)return null;let t=this._editor.getSelections();return new Bd(t.slice(0,t.length-1).concat(e),e,0)}_getNextMatch(){if(!this._editor.hasModel())return null;if(this.currentMatch){let n=this.currentMatch;return this.currentMatch=null,n}this.findController.highlightFindOptions();let e=this._editor.getSelections(),t=e[e.length-1],r=this._editor.getModel().findNextMatch(this.searchText,t.getEndPosition(),!1,this.matchCase,this.wholeWord?this._editor.getOption(117):null,!1);return r?new X(r.range.startLineNumber,r.range.startColumn,r.range.endLineNumber,r.range.endColumn):null}addSelectionToPreviousFindMatch(){if(!this._editor.hasModel())return null;let e=this._getPreviousMatch();if(!e)return null;let t=this._editor.getSelections();return new Bd(t.concat(e),e,0)}moveSelectionToPreviousFindMatch(){if(!this._editor.hasModel())return null;let e=this._getPreviousMatch();if(!e)return null;let t=this._editor.getSelections();return new Bd(t.slice(0,t.length-1).concat(e),e,0)}_getPreviousMatch(){if(!this._editor.hasModel())return null;if(this.currentMatch){let n=this.currentMatch;return this.currentMatch=null,n}this.findController.highlightFindOptions();let e=this._editor.getSelections(),t=e[e.length-1],r=this._editor.getModel().findPreviousMatch(this.searchText,t.getStartPosition(),!1,this.matchCase,this.wholeWord?this._editor.getOption(117):null,!1);return r?new X(r.range.startLineNumber,r.range.startColumn,r.range.endLineNumber,r.range.endColumn):null}selectAll(){return this._editor.hasModel()?(this.findController.highlightFindOptions(),this._editor.getModel().findMatches(this.searchText,!0,!1,this.matchCase,this.wholeWord?this._editor.getOption(117):null,!1,1073741824)):[]}},Ua=class extends F{constructor(e){super();this._sessionDispose=this._register(new P),this._editor=e,this._ignoreSelectionChange=!1,this._session=null}static get(e){return e.getContribution(Ua.ID)}dispose(){this._endSession(),super.dispose()}_beginSessionIfNeeded(e){if(!this._session){let t=gl.create(this._editor,e);if(!t)return;this._session=t;let r={searchString:this._session.searchText};this._session.isDisconnectedFromFindController&&(r.wholeWordOverride=1,r.matchCaseOverride=1,r.isRegexOverride=2),e.getState().change(r,!1),this._sessionDispose.add(this._editor.onDidChangeCursorSelection(n=>{this._ignoreSelectionChange||this._endSession()})),this._sessionDispose.add(this._editor.onDidBlurEditorText(()=>{this._endSession()})),this._sessionDispose.add(e.getState().onFindReplaceStateChange(n=>{(n.matchCase||n.wholeWord)&&this._endSession()}))}}_endSession(){if(this._sessionDispose.clear(),this._session&&this._session.isDisconnectedFromFindController){let e={wholeWordOverride:0,matchCaseOverride:0,isRegexOverride:0};this._session.findController.getState().change(e,!1)}this._session=null}_setSelections(e){this._ignoreSelectionChange=!0,this._editor.setSelections(e),this._ignoreSelectionChange=!1}_expandEmptyToWord(e,t){if(!t.isEmpty())return t;let r=this._editor.getConfiguredWordAtPosition(t.getStartPosition());return r?new X(t.startLineNumber,r.startColumn,t.startLineNumber,r.endColumn):t}_applySessionResult(e){!e||(this._setSelections(e.selections),e.revealRange&&this._editor.revealRangeInCenterIfOutsideViewport(e.revealRange,e.revealScrollType))}getSession(e){return this._session}addSelectionToNextFindMatch(e){if(!!this._editor.hasModel()){if(!this._session){let t=this._editor.getSelections();if(t.length>1){let n=e.getState().matchCase;if(!i2(this._editor.getModel(),t,n)){let a=this._editor.getModel(),s=[];for(let l=0,d=t.length;l<d;l++)s[l]=this._expandEmptyToWord(a,t[l]);this._editor.setSelections(s);return}}}this._beginSessionIfNeeded(e),this._session&&this._applySessionResult(this._session.addSelectionToNextFindMatch())}}addSelectionToPreviousFindMatch(e){this._beginSessionIfNeeded(e),this._session&&this._applySessionResult(this._session.addSelectionToPreviousFindMatch())}moveSelectionToNextFindMatch(e){this._beginSessionIfNeeded(e),this._session&&this._applySessionResult(this._session.moveSelectionToNextFindMatch())}moveSelectionToPreviousFindMatch(e){this._beginSessionIfNeeded(e),this._session&&this._applySessionResult(this._session.moveSelectionToPreviousFindMatch())}selectAll(e){if(!this._editor.hasModel())return;let t=null,r=e.getState();if(r.isRevealed&&r.searchString.length>0&&r.isRegex)t=this._editor.getModel().findMatches(r.searchString,!0,r.isRegex,r.matchCase,r.wholeWord?this._editor.getOption(117):null,!1,1073741824);else{if(this._beginSessionIfNeeded(e),!this._session)return;t=this._session.selectAll()}if(r.searchScope){let n=r.searchScope,i=[];t.forEach(a=>{n.forEach(s=>{a.range.endLineNumber<=s.endLineNumber&&a.range.startLineNumber>=s.startLineNumber&&i.push(a)})}),t=i}if(t.length>0){let n=this._editor.getSelection();for(let i=0,a=t.length;i<a;i++){let s=t[i];if(s.range.intersectRanges(n)){t[i]=t[0],t[0]=s;break}}this._setSelections(t.map(i=>new X(i.range.startLineNumber,i.range.startColumn,i.range.endLineNumber,i.range.endColumn)))}}};Ua.ID="editor.contrib.multiCursorController";var Jo=class extends M{run(e,t){let r=Ua.get(t);if(!r)return;let n=br.get(t);if(!n)return;let i=t._getViewModel();if(i){let a=i.getCursorStates();this._run(r,n),_l(a,i.getCursorStates())}}},$C=class extends Jo{constructor(){super({id:"editor.action.addSelectionToNextFindMatch",label:p("addSelectionToNextFindMatch","Add Selection To Next Find Match"),alias:"Add Selection To Next Find Match",precondition:void 0,kbOpts:{kbExpr:v.focus,primary:2082,weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"3_multi",title:p({key:"miAddSelectionToNextFindMatch",comment:["&& denotes a mnemonic"]},"Add &&Next Occurrence"),order:5}})}_run(e,t){e.addSelectionToNextFindMatch(t)}},QC=class extends Jo{constructor(){super({id:"editor.action.addSelectionToPreviousFindMatch",label:p("addSelectionToPreviousFindMatch","Add Selection To Previous Find Match"),alias:"Add Selection To Previous Find Match",precondition:void 0,menuOpts:{menuId:oe.MenubarSelectionMenu,group:"3_multi",title:p({key:"miAddSelectionToPreviousFindMatch",comment:["&& denotes a mnemonic"]},"Add P&&revious Occurrence"),order:6}})}_run(e,t){e.addSelectionToPreviousFindMatch(t)}},ZC=class extends Jo{constructor(){super({id:"editor.action.moveSelectionToNextFindMatch",label:p("moveSelectionToNextFindMatch","Move Last Selection To Next Find Match"),alias:"Move Last Selection To Next Find Match",precondition:void 0,kbOpts:{kbExpr:v.focus,primary:Xe(2089,2082),weight:100}})}_run(e,t){e.moveSelectionToNextFindMatch(t)}},e2=class extends Jo{constructor(){super({id:"editor.action.moveSelectionToPreviousFindMatch",label:p("moveSelectionToPreviousFindMatch","Move Last Selection To Previous Find Match"),alias:"Move Last Selection To Previous Find Match",precondition:void 0})}_run(e,t){e.moveSelectionToPreviousFindMatch(t)}},t2=class extends Jo{constructor(){super({id:"editor.action.selectHighlights",label:p("selectAllOccurrencesOfFindMatch","Select All Occurrences of Find Match"),alias:"Select All Occurrences of Find Match",precondition:void 0,kbOpts:{kbExpr:v.focus,primary:3114,weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"3_multi",title:p({key:"miSelectHighlights",comment:["&& denotes a mnemonic"]},"Select All &&Occurrences"),order:7}})}_run(e,t){e.selectAll(t)}},r2=class extends Jo{constructor(){super({id:"editor.action.changeAll",label:p("changeAll.label","Change All Occurrences"),alias:"Change All Occurrences",precondition:G.and(v.writable,v.editorTextFocus),kbOpts:{kbExpr:v.editorTextFocus,primary:2108,weight:100},contextMenuOpts:{group:"1_modification",order:1.2}})}_run(e,t){e.selectAll(t)}},n2=class{constructor(e,t,r,n,i){this._model=e,this._searchText=t,this._matchCase=r,this._wordSeparators=n,this._modelVersionId=this._model.getVersionId(),this._cachedFindMatches=null,i&&this._model===i._model&&this._searchText===i._searchText&&this._matchCase===i._matchCase&&this._wordSeparators===i._wordSeparators&&this._modelVersionId===i._modelVersionId&&(this._cachedFindMatches=i._cachedFindMatches)}findMatches(){return this._cachedFindMatches===null&&(this._cachedFindMatches=this._model.findMatches(this._searchText,!0,!1,this._matchCase,this._wordSeparators,!1).map(e=>e.range),this._cachedFindMatches.sort(y.compareRangesUsingStarts)),this._cachedFindMatches}},pi=class extends F{constructor(e){super();this.editor=e,this._isEnabled=e.getOption(97),this.decorations=[],this.updateSoon=this._register(new Ke(()=>this._update(),300)),this.state=null,this._register(e.onDidChangeConfiguration(r=>{this._isEnabled=e.getOption(97)})),this._register(e.onDidChangeCursorSelection(r=>{!this._isEnabled||(r.selection.isEmpty()?r.reason===3?(this.state&&this._setState(null),this.updateSoon.schedule()):this._setState(null):this._update())})),this._register(e.onDidChangeModel(r=>{this._setState(null)})),this._register(e.onDidChangeModelContent(r=>{this._isEnabled&&this.updateSoon.schedule()}));let t=br.get(e);t&&this._register(t.getState().onFindReplaceStateChange(r=>{this._update()}))}_update(){this._setState(pi._createState(this.state,this._isEnabled,this.editor))}static _createState(e,t,r){if(!t||!r.hasModel())return null;let n=r.getSelection();if(n.startLineNumber!==n.endLineNumber)return null;let i=Ua.get(r);if(!i)return null;let a=br.get(r);if(!a)return null;let s=i.getSession(a);if(!s){let c=r.getSelections();if(c.length>1){let f=a.getState().matchCase;if(!i2(r.getModel(),c,f))return null}s=gl.create(r,a)}if(!s||s.currentMatch||/^[ \t]+$/.test(s.searchText)||s.searchText.length>200)return null;let l=a.getState(),d=l.matchCase;if(l.isRevealed){let c=l.searchString;d||(c=c.toLowerCase());let u=s.searchText;if(d||(u=u.toLowerCase()),c===u&&s.matchCase===l.matchCase&&s.wholeWord===l.wholeWord&&!l.isRegex)return null}return new n2(r.getModel(),s.searchText,s.matchCase,s.wholeWord?r.getOption(117):null,e)}_setState(e){if(this.state=e,!this.state){this.decorations=this.editor.deltaDecorations(this.decorations,[]);return}if(!this.editor.hasModel())return;let t=this.editor.getModel();if(t.isTooLargeForTokenization())return;let r=this.state.findMatches(),n=this.editor.getSelections();n.sort(y.compareRangesUsingStarts);let i=[];for(let l=0,d=0,c=r.length,u=n.length;l<c;){let f=r[l];if(d>=u)i.push(f),l++;else{let m=y.compareRangesUsingStarts(f,n[d]);m<0?((n[d].isEmpty()||!y.areIntersecting(f,n[d]))&&i.push(f),l++):(m>0||l++,d++)}}let a=zl.has(t)&&this.editor.getOption(72),s=i.map(l=>({range:l,options:a?pi._SELECTION_HIGHLIGHT:pi._SELECTION_HIGHLIGHT_OVERVIEW}));this.decorations=this.editor.deltaDecorations(this.decorations,s)}dispose(){this._setState(null),super.dispose()}};pi.ID="editor.contrib.selectionHighlighter";pi._SELECTION_HIGHLIGHT_OVERVIEW=Se.register({description:"selection-highlight-overview",stickiness:1,className:"selectionHighlight",minimap:{color:nt(Is),position:_i.Inline},overviewRuler:{color:nt(Yu),position:Nr.Center}});pi._SELECTION_HIGHLIGHT=Se.register({description:"selection-highlight",stickiness:1,className:"selectionHighlight"});function i2(o,e,t){let r=zC(o,e[0],!t);for(let n=1,i=e.length;n<i;n++){let a=e[n];if(a.isEmpty())return!1;let s=zC(o,a,!t);if(r!==s)return!1}return!0}function zC(o,e,t){let r=o.getValueInRange(e);return t?r.toLowerCase():r}Q(Ua.ID,Ua);Q(pi.ID,pi);D(KC);D(qC);D(JC);D($C);D(QC);D(ZC);D(e2);D(t2);D(r2);D(XC);D(YC);W();pe();Be();Re();pt();Ae();Jt();Xt();tt();Re();Si();xt();Le();var a2=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},Yi={Visible:new fe("parameterHintsVisible",!1),MultipleSignatures:new fe("parameterHintsMultipleSignatures",!1)};function Ey(o,e,t,r){return a2(this,void 0,void 0,function*(){let n=_s.ordered(o);for(let i of n)try{let a=yield i.provideSignatureHelp(o,e,r,t);if(a)return a}catch(a){ze(a)}})}Ie.registerCommand("_executeSignatureHelpProvider",(o,...e)=>a2(void 0,void 0,void 0,function*(){let[t,r,n]=e;Je(Te.isUri(t)),Je(z.isIPosition(r)),Je(typeof n=="string"||!n);let i=yield o.get(Wt).createModelReference(t);try{let a=yield Ey(i.object.textEditorModel,z.lift(r),{triggerKind:Ln.Invoke,isRetrigger:!1,triggerCharacter:n},he.None);return a?(setTimeout(()=>a.dispose(),0),a.value):void 0}finally{i.dispose()}}));Z();Le();He();Pe();An();Sr();Ne();W();Ye();Jt();an();we();Ae();Ne();W();Bm();Re();var EN=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},Wa;(function(o){o.Default={type:0};class e{constructor(n,i){this.request=n,this.previouslyActiveHints=i,this.type=2}}o.Pending=e;class t{constructor(n){this.hints=n,this.type=1}}o.Active=t})(Wa||(Wa={}));var yl=class extends F{constructor(e,t=yl.DEFAULT_DELAY){super();this._onChangedHints=this._register(new j),this.onChangedHints=this._onChangedHints.event,this.triggerOnType=!1,this._state=Wa.Default,this._pendingTriggers=[],this._lastSignatureHelpResult=this._register(new et),this.triggerChars=new bi,this.retriggerChars=new bi,this.triggerId=0,this.editor=e,this.throttledDelayer=new Cn(t),this._register(this.editor.onDidBlurEditorWidget(()=>this.cancel())),this._register(this.editor.onDidChangeConfiguration(()=>this.onEditorConfigurationChange())),this._register(this.editor.onDidChangeModel(r=>this.onModelChanged())),this._register(this.editor.onDidChangeModelLanguage(r=>this.onModelChanged())),this._register(this.editor.onDidChangeCursorSelection(r=>this.onCursorChange(r))),this._register(this.editor.onDidChangeModelContent(r=>this.onModelContentChange())),this._register(_s.onDidChange(this.onModelChanged,this)),this._register(this.editor.onDidType(r=>this.onDidType(r))),this.onEditorConfigurationChange(),this.onModelChanged()}get state(){return this._state}set state(e){this._state.type===2&&this._state.request.cancel(),this._state=e}cancel(e=!1){this.state=Wa.Default,this.throttledDelayer.cancel(),e||this._onChangedHints.fire(void 0)}trigger(e,t){let r=this.editor.getModel();if(!r||!_s.has(r))return;let n=++this.triggerId;this._pendingTriggers.push(e),this.throttledDelayer.trigger(()=>this.doTrigger(n),t).catch(ce)}next(){if(this.state.type!==1)return;let e=this.state.hints.signatures.length,t=this.state.hints.activeSignature,r=t%e===e-1,n=this.editor.getOption(76).cycle;if((e<2||r)&&!n){this.cancel();return}this.updateActiveSignature(r&&n?0:t+1)}previous(){if(this.state.type!==1)return;let e=this.state.hints.signatures.length,t=this.state.hints.activeSignature,r=t===0,n=this.editor.getOption(76).cycle;if((e<2||r)&&!n){this.cancel();return}this.updateActiveSignature(r&&n?e-1:t-1)}updateActiveSignature(e){this.state.type===1&&(this.state=new Wa.Active(Object.assign(Object.assign({},this.state.hints),{activeSignature:e})),this._onChangedHints.fire(this.state.hints))}doTrigger(e){return EN(this,void 0,void 0,function*(){let t=this.state.type===1||this.state.type===2,r=this.getLastActiveHints();if(this.cancel(!0),this._pendingTriggers.length===0)return!1;let n=this._pendingTriggers.reduce(TN);this._pendingTriggers=[];let i={triggerKind:n.triggerKind,triggerCharacter:n.triggerCharacter,isRetrigger:t,activeSignatureHelp:r};if(!this.editor.hasModel())return!1;let a=this.editor.getModel(),s=this.editor.getPosition();this.state=new Wa.Pending(Ge(l=>Ey(a,s,i,l)),r);try{let l=yield this.state.request;return e!==this.triggerId?(l==null||l.dispose(),!1):!l||!l.value.signatures||l.value.signatures.length===0?(l==null||l.dispose(),this._lastSignatureHelpResult.clear(),this.cancel(),!1):(this.state=new Wa.Active(l.value),this._lastSignatureHelpResult.value=l,this._onChangedHints.fire(this.state.hints),!0)}catch(l){return e===this.triggerId&&(this.state=Wa.Default),ce(l),!1}})}getLastActiveHints(){switch(this.state.type){case 1:return this.state.hints;case 2:return this.state.previouslyActiveHints;default:return}}get isTriggered(){return this.state.type===1||this.state.type===2||this.throttledDelayer.isTriggered()}onModelChanged(){this.cancel(),this.triggerChars=new bi,this.retriggerChars=new bi;let e=this.editor.getModel();if(!!e)for(let t of _s.ordered(e)){for(let r of t.signatureHelpTriggerCharacters||[])this.triggerChars.add(r.charCodeAt(0)),this.retriggerChars.add(r.charCodeAt(0));for(let r of t.signatureHelpRetriggerCharacters||[])this.retriggerChars.add(r.charCodeAt(0))}}onDidType(e){if(!this.triggerOnType)return;let t=e.length-1,r=e.charCodeAt(t);(this.triggerChars.has(r)||this.isTriggered&&this.retriggerChars.has(r))&&this.trigger({triggerKind:Ln.TriggerCharacter,triggerCharacter:e.charAt(t)})}onCursorChange(e){e.source==="mouse"?this.cancel():this.isTriggered&&this.trigger({triggerKind:Ln.ContentChange})}onModelContentChange(){this.isTriggered&&this.trigger({triggerKind:Ln.ContentChange})}onEditorConfigurationChange(){this.triggerOnType=this.editor.getOption(76).enabled,this.triggerOnType||this.cancel()}dispose(){this.cancel(!0),super.dispose()}};yl.DEFAULT_DELAY=120;function TN(o,e){switch(e.triggerKind){case Ln.Invoke:return e;case Ln.ContentChange:return o;case Ln.TriggerCharacter:default:return e}}Z();Le();Jr();mt();Tb();Oe();var xN=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Ty=function(o,e){return function(t,r){e(t,r,o)}},Wr=V,CN=Rt("parameter-hints-next",q.chevronDown,p("parameterHintsNextIcon","Icon for show next parameter hint.")),LN=Rt("parameter-hints-previous",q.chevronUp,p("parameterHintsPreviousIcon","Icon for show previous parameter hint.")),Vd=class o2 extends F{constructor(e,t,r,n){super();this.editor=e,this.renderDisposeables=this._register(new P),this.visible=!1,this.announcedLabel=null,this.allowEditorOverflow=!0,this.markdownRenderer=this._register(new Dr({editor:e},n,r)),this.model=this._register(new yl(e)),this.keyVisible=Yi.Visible.bindTo(t),this.keyMultipleSignatures=Yi.MultipleSignatures.bindTo(t),this._register(this.model.onChangedHints(i=>{i?(this.show(),this.render(i)):this.hide()}))}createParameterHintDOMNodes(){let e=Wr(".editor-widget.parameter-hints-widget"),t=B(e,Wr(".phwrapper"));t.tabIndex=-1;let r=B(t,Wr(".controls")),n=B(r,Wr(".button"+it.asCSSSelector(LN))),i=B(r,Wr(".overloads")),a=B(r,Wr(".button"+it.asCSSSelector(CN)));this._register(qe(n,"click",f=>{sn.stop(f),this.previous()})),this._register(qe(a,"click",f=>{sn.stop(f),this.next()}));let s=Wr(".body"),l=new Os(s,{});this._register(l),t.appendChild(l.getDomNode());let d=B(s,Wr(".signature")),c=B(s,Wr(".docs"));e.style.userSelect="text",this.domNodes={element:e,signature:d,overloads:i,docs:c,scrollbar:l},this.editor.addContentWidget(this),this.hide(),this._register(this.editor.onDidChangeCursorSelection(f=>{this.visible&&this.editor.layoutContentWidget(this)}));let u=()=>{if(!this.domNodes)return;let f=this.editor.getOption(44);this.domNodes.element.style.fontSize=`${f.fontSize}px`,this.domNodes.element.style.lineHeight=`${f.lineHeight/f.fontSize}`};u(),this._register(ut.chain(this.editor.onDidChangeConfiguration.bind(this.editor)).filter(f=>f.hasChanged(44)).on(u,null)),this._register(this.editor.onDidLayoutChange(f=>this.updateMaxHeight())),this.updateMaxHeight()}show(){this.visible||(this.domNodes||this.createParameterHintDOMNodes(),this.keyVisible.set(!0),this.visible=!0,setTimeout(()=>{this.domNodes&&this.domNodes.element.classList.add("visible")},100),this.editor.layoutContentWidget(this))}hide(){this.renderDisposeables.clear(),!!this.visible&&(this.keyVisible.reset(),this.visible=!1,this.announcedLabel=null,this.domNodes&&this.domNodes.element.classList.remove("visible"),this.editor.layoutContentWidget(this))}getPosition(){return this.visible?{position:this.editor.getPosition(),preference:[1,2]}:null}render(e){var t;if(this.renderDisposeables.clear(),!this.domNodes)return;let r=e.signatures.length>1;this.domNodes.element.classList.toggle("multiple",r),this.keyMultipleSignatures.set(r),this.domNodes.signature.innerText="",this.domNodes.docs.innerText="";let n=e.signatures[e.activeSignature];if(!n)return;let i=B(this.domNodes.signature,Wr(".code")),a=this.editor.getOption(44);i.style.fontSize=`${a.fontSize}px`,i.style.fontFamily=a.fontFamily;let s=n.parameters.length>0,l=(t=n.activeParameter)!==null&&t!==void 0?t:e.activeParameter;if(s)this.renderParameters(i,n,l);else{let u=B(i,Wr("span"));u.textContent=n.label}let d=n.parameters[l];if(d==null?void 0:d.documentation){let u=Wr("span.documentation");if(typeof d.documentation=="string")u.textContent=d.documentation;else{let f=this.renderMarkdownDocs(d.documentation);u.appendChild(f.element)}B(this.domNodes.docs,Wr("p",{},u))}if(n.documentation!==void 0)if(typeof n.documentation=="string")B(this.domNodes.docs,Wr("p",{},n.documentation));else{let u=this.renderMarkdownDocs(n.documentation);B(this.domNodes.docs,u.element)}let c=this.hasDocs(n,d);if(this.domNodes.signature.classList.toggle("has-docs",c),this.domNodes.docs.classList.toggle("empty",!c),this.domNodes.overloads.textContent=String(e.activeSignature+1).padStart(e.signatures.length.toString().length,"0")+"/"+e.signatures.length,d){let u="",f=n.parameters[l];Array.isArray(f.label)?u=n.label.substring(f.label[0],f.label[1]):u=f.label,f.documentation&&(u+=typeof f.documentation=="string"?`, ${f.documentation}`:`, ${f.documentation.value}`),n.documentation&&(u+=typeof n.documentation=="string"?`, ${n.documentation}`:`, ${n.documentation.value}`),this.announcedLabel!==u&&(Tt(p("hint","{0}, hint",u)),this.announcedLabel=u)}this.editor.layoutContentWidget(this),this.domNodes.scrollbar.scanDomNode()}renderMarkdownDocs(e){let t=this.renderDisposeables.add(this.markdownRenderer.render(e,{asyncRenderCallback:()=>{var r;(r=this.domNodes)===null||r===void 0||r.scrollbar.scanDomNode()}}));return t.element.classList.add("markdown-docs"),t}hasDocs(e,t){return!!(t&&typeof t.documentation=="string"&&Gl(t.documentation).length>0||t&&typeof t.documentation=="object"&&Gl(t.documentation).value.length>0||e.documentation&&typeof e.documentation=="string"&&Gl(e.documentation).length>0||e.documentation&&typeof e.documentation=="object"&&Gl(e.documentation.value).length>0)}renderParameters(e,t,r){let[n,i]=this.getParameterLabelOffsets(t,r),a=document.createElement("span");a.textContent=t.label.substring(0,n);let s=document.createElement("span");s.textContent=t.label.substring(n,i),s.className="parameter active";let l=document.createElement("span");l.textContent=t.label.substring(i),B(e,a,s,l)}getParameterLabelOffsets(e,t){let r=e.parameters[t];if(r){if(Array.isArray(r.label))return r.label;if(r.label.length){let n=new RegExp(`(\\W|^)${yi(r.label)}(?=\\W|$)`,"g");n.test(e.label);let i=n.lastIndex-r.label.length;return i>=0?[i,n.lastIndex]:[0,0]}else return[0,0]}else return[0,0]}next(){this.editor.focus(),this.model.next()}previous(){this.editor.focus(),this.model.previous()}cancel(){this.model.cancel()}getDomNode(){return this.domNodes||this.createParameterHintDOMNodes(),this.domNodes.element}getId(){return o2.ID}trigger(e){this.model.trigger(e,0)}updateMaxHeight(){if(!this.domNodes)return;let t=`${Math.max(this.editor.getLayoutInfo().height/4,250)}px`;this.domNodes.element.style.maxHeight=t;let r=this.domNodes.element.getElementsByClassName("phwrapper");r.length&&(r[0].style.maxHeight=t)}};Vd.ID="editor.widget.parameterHintsWidget";Vd=xN([Ty(1,re),Ty(2,yt),Ty(3,gt)],Vd);var DN=J("editorHoverWidget.highlightForeground",{dark:_a,light:_a,hc:_a},p("editorHoverWidgetHighlightForeground","Foreground color of the active item in the parameter hint."));ke((o,e)=>{let t=o.getColor(ws);if(t){let d=o.type===Pu.HIGH_CONTRAST?2:1;e.addRule(`.monaco-editor .parameter-hints-widget { border: ${d}px solid ${t}; }`),e.addRule(`.monaco-editor .parameter-hints-widget.multiple .body { border-left: 1px solid ${t.transparent(.5)}; }`),e.addRule(`.monaco-editor .parameter-hints-widget .signature.has-docs { border-bottom: 1px solid ${t.transparent(.5)}; }`)}let r=o.getColor(xi);r&&e.addRule(`.monaco-editor .parameter-hints-widget { background-color: ${r}; }`);let n=o.getColor(ma);n&&e.addRule(`.monaco-editor .parameter-hints-widget a { color: ${n}; }`);let i=o.getColor(ha);i&&e.addRule(`.monaco-editor .parameter-hints-widget a:hover { color: ${i}; }`);let a=o.getColor(Ds);a&&e.addRule(`.monaco-editor .parameter-hints-widget { color: ${a}; }`);let s=o.getColor(Vu);s&&e.addRule(`.monaco-editor .parameter-hints-widget code { background-color: ${s}; }`);let l=o.getColor(DN);l&&e.addRule(`.monaco-editor .parameter-hints-widget .parameter.active { color: ${l}}`)});var wN=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},AN=function(o,e){return function(t,r){e(t,r,o)}},Xo=class s2 extends F{constructor(e,t){super();this.editor=e,this.widget=this._register(t.createInstance(Vd,this.editor))}static get(e){return e.getContribution(s2.ID)}cancel(){this.widget.cancel()}previous(){this.widget.previous()}next(){this.widget.next()}trigger(e){this.widget.trigger(e)}};Xo.ID="editor.controller.parameterHints";Xo=wN([AN(1,le)],Xo);var l2=class extends M{constructor(){super({id:"editor.action.triggerParameterHints",label:p("parameterHints.trigger.label","Trigger Parameter Hints"),alias:"Trigger Parameter Hints",precondition:v.hasSignatureHelpProvider,kbOpts:{kbExpr:v.editorTextFocus,primary:3082,weight:100}})}run(e,t){let r=Xo.get(t);r&&r.trigger({triggerKind:Ln.Invoke})}};Q(Xo.ID,Xo);D(l2);var xy=100+75,Cy=dt.bindToContribution(Xo.get);K(new Cy({id:"closeParameterHints",precondition:Yi.Visible,handler:o=>o.cancel(),kbOpts:{weight:xy,kbExpr:v.focus,primary:9,secondary:[1033]}}));K(new Cy({id:"showPrevParameterHint",precondition:G.and(Yi.Visible,Yi.MultipleSignatures),handler:o=>o.previous(),kbOpts:{weight:xy,kbExpr:v.focus,primary:16,secondary:[528],mac:{primary:16,secondary:[528,302]}}}));K(new Cy({id:"showNextParameterHint",precondition:G.and(Yi.Visible,Yi.MultipleSignatures),handler:o=>o.next(),kbOpts:{weight:xy,kbExpr:v.focus,primary:18,secondary:[530],mac:{primary:18,secondary:[530,300]}}}));An();we();pt();Ae();W();Jt();Xt();yc();pe();Er();tt();ee();Be();Re();$L();Z();dD();Le();He();ku();fo();Es();W();tt();Z();Le();qr();mt();Oe();var IN=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Ly=function(o,e){return function(t,r){e(t,r,o)}},Hd=new fe("renameInputVisible",!1,p("renameInputVisible","Whether the rename input widget is visible")),lm=class{constructor(e,t,r,n,i){this._editor=e,this._acceptKeybindings=t,this._themeService=r,this._keybindingService=n,this._disposables=new P,this.allowEditorOverflow=!0,this._visibleContextKey=Hd.bindTo(i),this._editor.addContentWidget(this),this._disposables.add(this._editor.onDidChangeConfiguration(a=>{a.hasChanged(44)&&this._updateFont()})),this._disposables.add(r.onDidColorThemeChange(this._updateStyles,this))}dispose(){this._disposables.dispose(),this._editor.removeContentWidget(this)}getId(){return"__renameInputWidget"}getDomNode(){if(!this._domNode){this._domNode=document.createElement("div"),this._domNode.className="monaco-editor rename-box",this._input=document.createElement("input"),this._input.className="rename-input",this._input.type="text",this._input.setAttribute("aria-label",p("renameAriaLabel","Rename input. Type new name and press Enter to commit.")),this._domNode.appendChild(this._input),this._label=document.createElement("div"),this._label.className="rename-label",this._domNode.appendChild(this._label);let e=()=>{var t,r;let[n,i]=this._acceptKeybindings;this._keybindingService.lookupKeybinding(n),this._label.innerText=p({key:"label",comment:['placeholders are keybindings, e.g "F2 to Rename, Shift+F2 to Preview"']},"{0} to Rename, {1} to Preview",(t=this._keybindingService.lookupKeybinding(n))===null||t===void 0?void 0:t.getLabel(),(r=this._keybindingService.lookupKeybinding(i))===null||r===void 0?void 0:r.getLabel())};e(),this._disposables.add(this._keybindingService.onDidUpdateKeybindings(e)),this._updateFont(),this._updateStyles(this._themeService.getColorTheme())}return this._domNode}_updateStyles(e){var t,r,n,i;if(!this._input||!this._domNode)return;let a=e.getColor(ga);this._domNode.style.backgroundColor=String((t=e.getColor(dn))!==null&&t!==void 0?t:""),this._domNode.style.boxShadow=a?` 0 0 8px 2px ${a}`:"",this._domNode.style.color=String((r=e.getColor(Uu))!==null&&r!==void 0?r:""),this._input.style.backgroundColor=String((n=e.getColor(Hu))!==null&&n!==void 0?n:"");let s=e.getColor(Wu);this._input.style.borderWidth=s?"1px":"0px",this._input.style.borderStyle=s?"solid":"none",this._input.style.borderColor=(i=s==null?void 0:s.toString())!==null&&i!==void 0?i:"none"}_updateFont(){if(!this._input||!this._label)return;let e=this._editor.getOption(44);this._input.style.fontFamily=e.fontFamily,this._input.style.fontWeight=e.fontWeight,this._input.style.fontSize=`${e.fontSize}px`,this._label.style.fontSize=`${e.fontSize*.8}px`}getPosition(){return this._visible?{position:this._position,preference:[2,1]}:null}afterRender(e){e||this.cancelInput(!0)}acceptInput(e){this._currentAcceptInput&&this._currentAcceptInput(e)}cancelInput(e){this._currentCancelInput&&this._currentCancelInput(e)}getInput(e,t,r,n,i,a){this._domNode.classList.toggle("preview",i),this._position=new z(e.startLineNumber,e.startColumn),this._input.value=t,this._input.setAttribute("selectionStart",r.toString()),this._input.setAttribute("selectionEnd",n.toString()),this._input.size=Math.max((e.endColumn-e.startColumn)*1.1,20);let s=new P;return new Promise(l=>{this._currentCancelInput=d=>(this._currentAcceptInput=void 0,this._currentCancelInput=void 0,l(d),!0),this._currentAcceptInput=d=>{if(this._input.value.trim().length===0||this._input.value===t){this.cancelInput(!0);return}this._currentAcceptInput=void 0,this._currentCancelInput=void 0,l({newName:this._input.value,wantsPreview:i&&d})},a.onCancellationRequested(()=>this.cancelInput(!0)),s.add(this._editor.onDidBlurEditorWidget(()=>this.cancelInput(!1))),this._show()}).finally(()=>{s.dispose(),this._hide()})}_show(){this._editor.revealLineInCenterIfOutsideViewport(this._position.lineNumber,0),this._visible=!0,this._visibleContextKey.set(!0),this._editor.layoutContentWidget(this),setTimeout(()=>{this._input.focus(),this._input.setSelectionRange(parseInt(this._input.getAttribute("selectionStart")),parseInt(this._input.getAttribute("selectionEnd")))},100)}_hide(){this._visible=!1,this._visibleContextKey.reset(),this._editor.layoutContentWidget(this)}};lm=IN([Ly(2,Ot),Ly(3,at),Ly(4,re)],lm);var kN=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},vl=function(o,e){return function(t,r){e(t,r,o)}},Yo=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},cm=class{constructor(e,t){this.model=e,this.position=t,this._providerRenameIdx=0,this._providers=Wv.ordered(e)}hasProvider(){return this._providers.length>0}resolveRenameLocation(e){return Yo(this,void 0,void 0,function*(){let t=[];for(this._providerRenameIdx=0;this._providerRenameIdx<this._providers.length;this._providerRenameIdx++){let n=this._providers[this._providerRenameIdx];if(!n.resolveRenameLocation)break;let i=yield n.resolveRenameLocation(this.model,this.position,e);if(!!i){if(i.rejectReason){t.push(i.rejectReason);continue}return i}}let r=this.model.getWordAtPosition(this.position);return r?{range:new y(this.position.lineNumber,r.startColumn,this.position.lineNumber,r.endColumn),text:r.word,rejectReason:t.length>0?t.join(`
`):void 0}:{range:y.fromPositions(this.position),text:"",rejectReason:t.length>0?t.join(`
`):void 0}})}provideRenameEdits(e,t){return Yo(this,void 0,void 0,function*(){return this._provideRenameEdits(e,this._providerRenameIdx,[],t)})}_provideRenameEdits(e,t,r,n){return Yo(this,void 0,void 0,function*(){let i=this._providers[t];if(!i)return{edits:[],rejectReason:r.join(`
`)};let a=yield i.provideRenameEdits(this.model,this.position,e,n);if(a){if(a.rejectReason)return this._provideRenameEdits(e,t+1,r.concat(a.rejectReason),n)}else return this._provideRenameEdits(e,t+1,r.concat(p("no result","No result.")),n);return a})}};function NN(o,e,t){return Yo(this,void 0,void 0,function*(){let r=new cm(o,e),n=yield r.resolveRenameLocation(he.None);return(n==null?void 0:n.rejectReason)?{edits:[],rejectReason:n.rejectReason}:r.provideRenameEdits(t,he.None)})}var $o=class c2{constructor(e,t,r,n,i,a,s){this.editor=e,this._instaService=t,this._notificationService=r,this._bulkEditService=n,this._progressService=i,this._logService=a,this._configService=s,this._dispoableStore=new P,this._cts=new Mt,this._renameInputField=this._dispoableStore.add(new fs(()=>this._dispoableStore.add(this._instaService.createInstance(lm,this.editor,["acceptRenameInput","acceptRenameInputWithPreview"]))))}static get(e){return e.getContribution(c2.ID)}dispose(){this._dispoableStore.dispose(),this._cts.dispose(!0)}run(){var e,t;return Yo(this,void 0,void 0,function*(){if(this._cts.dispose(!0),!this.editor.hasModel())return;let r=this.editor.getPosition(),n=new cm(this.editor.getModel(),r);if(!n.hasProvider())return;this._cts=new _c(this.editor,5);let i;try{let f=n.resolveRenameLocation(this._cts.token);this._progressService.showWhile(f,250),i=yield f}catch(f){(e=Zt.get(this.editor))===null||e===void 0||e.showMessage(f||p("resolveRenameLocationFailed","An unknown error occurred while resolving rename location"),r);return}if(!i)return;if(i.rejectReason){(t=Zt.get(this.editor))===null||t===void 0||t.showMessage(i.rejectReason,r);return}if(this._cts.token.isCancellationRequested)return;this._cts.dispose(),this._cts=new _c(this.editor,5,i.range);let a=this.editor.getSelection(),s=0,l=i.text.length;!y.isEmpty(a)&&!y.spansMultipleLines(a)&&y.containsRange(i.range,a)&&(s=Math.max(0,a.startColumn-i.range.startColumn),l=Math.min(i.range.endColumn,a.endColumn)-i.range.startColumn);let d=this._bulkEditService.hasPreviewHandler()&&this._configService.getValue(this.editor.getModel().uri,"editor.rename.enablePreview"),c=yield this._renameInputField.value.getInput(i.range,i.text,s,l,d,this._cts.token);if(typeof c=="boolean"){c&&this.editor.focus();return}this.editor.focus();let u=us(n.provideRenameEdits(c.newName,this._cts.token),this._cts.token).then(f=>Yo(this,void 0,void 0,function*(){if(!(!f||!this.editor.hasModel())){if(f.rejectReason){this._notificationService.info(f.rejectReason);return}this.editor.setSelection(y.fromPositions(this.editor.getSelection().getPosition())),this._bulkEditService.apply(fp.convert(f),{editor:this.editor,showPreview:c.wantsPreview,label:p("label","Renaming '{0}'",i==null?void 0:i.text),quotableLabel:p("quotableLabel","Renaming {0}",i==null?void 0:i.text)}).then(m=>{m.ariaSummary&&Tt(p("aria","Successfully renamed '{0}' to '{1}'. Summary: {2}",i.text,c.newName,m.ariaSummary))}).catch(m=>{this._notificationService.error(p("rename.failedApply","Rename failed to apply edits")),this._logService.error(m)})}}),f=>{this._notificationService.error(p("rename.failed","Rename failed to compute edits")),this._logService.error(f)});return this._progressService.showWhile(u,250),u})}acceptRenameInput(e){this._renameInputField.value.acceptInput(e)}cancelRenameInput(){this._renameInputField.value.cancelInput(!0)}};$o.ID="editor.contrib.renameController";$o=kN([vl(1,le),vl(2,$e),vl(3,pp),vl(4,Ii),vl(5,pa),vl(6,nb)],$o);var d2=class extends M{constructor(){super({id:"editor.action.rename",label:p("rename.label","Rename Symbol"),alias:"Rename Symbol",precondition:G.and(v.writable,v.hasRenameProvider),kbOpts:{kbExpr:v.editorTextFocus,primary:60,weight:100},contextMenuOpts:{group:"1_modification",order:1.1}})}runCommand(e,t){let r=e.get(Ue),[n,i]=Array.isArray(t)&&t||[void 0,void 0];return Te.isUri(n)&&z.isIPosition(i)?r.openCodeEditor({resource:n},r.getActiveCodeEditor()).then(a=>{!a||(a.setPosition(i),a.invokeWithinContext(s=>(this.reportTelemetry(s,a),this.run(s,a))))},ce):super.runCommand(e,t)}run(e,t){let r=$o.get(t);return r?r.run():Promise.resolve()}};Q($o.ID,$o);D(d2);var Dy=dt.bindToContribution($o.get);K(new Dy({id:"acceptRenameInput",precondition:Hd,handler:o=>o.acceptRenameInput(!1),kbOpts:{weight:100+99,kbExpr:v.focus,primary:3}}));K(new Dy({id:"acceptRenameInputWithPreview",precondition:G.and(Hd,G.has("config.editor.rename.enablePreview")),handler:o=>o.acceptRenameInput(!0),kbOpts:{weight:100+99,kbExpr:v.focus,primary:1024+3}}));K(new Dy({id:"cancelRenameInput",precondition:Hd,handler:o=>o.cancelRenameInput(),kbOpts:{weight:100+99,kbExpr:v.focus,primary:9,secondary:[1033]}}));xr("_executeDocumentRenameProvider",function(o,e,...t){let[r]=t;return Je(typeof r=="string"),NN(o,e,r)});xr("_executePrepareRename",function(o,e){return Yo(this,void 0,void 0,function*(){let r=yield new cm(o,e).resolveRenameLocation(he.None);if(r==null?void 0:r.rejectReason)throw new Error(r.rejectReason);return r})});ln.as(R1.Configuration).registerConfiguration({id:"editor",properties:{"editor.rename.enablePreview":{scope:5,description:p("enablePreview","Enable/disable the ability to preview changes before renaming"),default:!0,type:"boolean"}}});bt();pt();Ae();pe();tt();ee();kt();Be();Re();Ye();ee();var wy=class{provideSelectionRanges(e,t){let r=[];for(let n of t){let i=[];r.push(i),this._addInWordRanges(i,e,n),this._addWordRanges(i,e,n),this._addWhitespaceLine(i,e,n),i.push({range:e.getFullModelRange()})}return r}_addInWordRanges(e,t,r){let n=t.getWordAtPosition(r);if(!n)return;let{word:i,startColumn:a}=n,s=r.column-a,l=s,d=s,c=0;for(;l>=0;l--){let u=i.charCodeAt(l);if(l!==s&&(u===95||u===45))break;if(Im(u)&&km(c))break;c=u}for(l+=1;d<i.length;d++){let u=i.charCodeAt(d);if(km(u)&&Im(c))break;if(u===95||u===45)break;c=u}l<d&&e.push({range:new y(r.lineNumber,a+l,r.lineNumber,a+d)})}_addWordRanges(e,t,r){let n=t.getWordAtPosition(r);n&&e.push({range:new y(r.lineNumber,n.startColumn,r.lineNumber,n.endColumn)})}_addWhitespaceLine(e,t,r){t.getLineLength(r.lineNumber)>0&&t.getLineFirstNonWhitespaceColumn(r.lineNumber)===0&&t.getLineLastNonWhitespaceColumn(r.lineNumber)===0&&e.push({range:new y(r.lineNumber,1,r.lineNumber,t.getLineMaxColumn(r.lineNumber))})}};Z();ar();xt();var Ay=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},dm=class{constructor(e,t){this.index=e,this.ranges=t}mov(e){let t=this.index+(e?1:-1);if(t<0||t>=this.ranges.length)return this;let r=new dm(t,this.ranges);return r.ranges[t].equalsRange(this.ranges[this.index])?r.mov(e):r}},Qo=class{constructor(e){this._editor=e,this._ignoreSelection=!1}static get(e){return e.getContribution(Qo.ID)}dispose(){var e;(e=this._selectionListener)===null||e===void 0||e.dispose()}run(e){return Ay(this,void 0,void 0,function*(){if(!this._editor.hasModel())return;let t=this._editor.getSelections(),r=this._editor.getModel();if(!Du.has(r)||(this._state||(yield f2(r,t.map(i=>i.getPosition()),this._editor.getOption(102),he.None).then(i=>{var a;if(!(!It(i)||i.length!==t.length)&&!(!this._editor.hasModel()||!$a(this._editor.getSelections(),t,(s,l)=>s.equalsSelection(l)))){for(let s=0;s<i.length;s++)i[s]=i[s].filter(l=>l.containsPosition(t[s].getStartPosition())&&l.containsPosition(t[s].getEndPosition())),i[s].unshift(t[s]);this._state=i.map(s=>new dm(0,s)),(a=this._selectionListener)===null||a===void 0||a.dispose(),this._selectionListener=this._editor.onDidChangeCursorPosition(()=>{var s;this._ignoreSelection||((s=this._selectionListener)===null||s===void 0||s.dispose(),this._state=void 0)})}})),!this._state))return;this._state=this._state.map(i=>i.mov(e));let n=this._state.map(i=>X.fromPositions(i.ranges[i.index].getStartPosition(),i.ranges[i.index].getEndPosition()));this._ignoreSelection=!0;try{this._editor.setSelections(n)}finally{this._ignoreSelection=!1}})}};Qo.ID="editor.contrib.smartSelectController";var Iy=class extends M{constructor(e,t){super(t);this._forward=e}run(e,t){return Ay(this,void 0,void 0,function*(){let r=Qo.get(t);r&&(yield r.run(this._forward))})}},u2=class extends Iy{constructor(){super(!0,{id:"editor.action.smartSelect.expand",label:p("smartSelect.expand","Expand Selection"),alias:"Expand Selection",precondition:void 0,kbOpts:{kbExpr:v.editorTextFocus,primary:1553,mac:{primary:3345,secondary:[1297]},weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"1_basic",title:p({key:"miSmartSelectGrow",comment:["&& denotes a mnemonic"]},"&&Expand Selection"),order:2}})}};Ie.registerCommandAlias("editor.action.smartSelect.grow","editor.action.smartSelect.expand");var p2=class extends Iy{constructor(){super(!1,{id:"editor.action.smartSelect.shrink",label:p("smartSelect.shrink","Shrink Selection"),alias:"Shrink Selection",precondition:void 0,kbOpts:{kbExpr:v.editorTextFocus,primary:1551,mac:{primary:3343,secondary:[1295]},weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"1_basic",title:p({key:"miSmartSelectShrink",comment:["&& denotes a mnemonic"]},"&&Shrink Selection"),order:3}})}};Q(Qo.ID,Qo);D(u2);D(p2);Du.register("*",new wy);function f2(o,e,t,r){return Ay(this,void 0,void 0,function*(){let n=Du.all(o);n.length===1&&n.unshift(new dr);let i=[],a=[];for(let s of n)i.push(Promise.resolve(s.provideSelectionRanges(o,e,r)).then(l=>{if(It(l)&&l.length===e.length)for(let d=0;d<e.length;d++){a[d]||(a[d]=[]);for(let c of l[d])y.isIRange(c.range)&&y.containsPosition(c.range,e[d])&&a[d].push(y.lift(c.range))}},ze));return yield Promise.all(i),a.map(s=>{if(s.length===0)return[];s.sort((u,f)=>z.isBefore(u.getStartPosition(),f.getStartPosition())?1:z.isBefore(f.getStartPosition(),u.getStartPosition())||z.isBefore(u.getEndPosition(),f.getEndPosition())?-1:z.isBefore(f.getEndPosition(),u.getEndPosition())?1:0);let l=[],d;for(let u of s)(!d||y.containsRange(u,d)&&!y.equalsRange(u,d))&&(l.push(u),d=u);if(!t.selectLeadingAndTrailingWhitespace)return l;let c=[l[0]];for(let u=1;u<l.length;u++){let f=l[u-1],m=l[u];if(m.startLineNumber!==f.startLineNumber||m.endLineNumber!==f.endLineNumber){let g=new y(f.startLineNumber,o.getLineFirstNonWhitespaceColumn(f.startLineNumber),f.endLineNumber,o.getLineLastNonWhitespaceColumn(f.endLineNumber));g.containsRange(f)&&!g.equalsRange(f)&&m.containsRange(g)&&!m.equalsRange(g)&&c.push(g);let b=new y(f.startLineNumber,1,f.endLineNumber,o.getLineMaxColumn(f.endLineNumber));b.containsRange(f)&&!b.equalsRange(g)&&m.containsRange(b)&&!m.equalsRange(b)&&c.push(b)}c.push(m)}return c})})}Cb("_executeSelectionRangeProvider",function(o,...e){let[t]=e;return f2(o,t,{selectLeadingAndTrailingWhitespace:!0},he.None)});Vl();pe();Z();var m2=class extends M{constructor(){super({id:"editor.action.forceRetokenize",label:p("forceRetokenize","Developer: Force Retokenize"),alias:"Developer: Force Retokenize",precondition:void 0})}run(e,t){if(!t.hasModel())return;let r=t.getModel();r.resetTokenization();let n=new nn(!0);r.forceTokenization(r.getLineCount()),n.stop(),console.log(`tokenization took ${n.elapsed()}`)}};D(m2);ky();W();Br();pe();Er();Z();var RN=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},h2=function(o,e){return function(t,r){e(t,r,o)}},PN=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},g2="ignoreUnusualLineTerminators";function MN(o,e,t){o.setModelProperty(e.uri,g2,t)}function ON(o,e){return o.getModelProperty(e.uri,g2)}var Ud=class extends F{constructor(e,t,r){super();this._editor=e,this._dialogService=t,this._codeEditorService=r,this._config=this._editor.getOption(114),this._register(this._editor.onDidChangeConfiguration(n=>{n.hasChanged(114)&&(this._config=this._editor.getOption(114),this._checkForUnusualLineTerminators())})),this._register(this._editor.onDidChangeModel(()=>{this._checkForUnusualLineTerminators()})),this._register(this._editor.onDidChangeModelContent(n=>{n.isUndoing||this._checkForUnusualLineTerminators()}))}_checkForUnusualLineTerminators(){return PN(this,void 0,void 0,function*(){if(this._config==="off"||!this._editor.hasModel())return;let e=this._editor.getModel();if(!e.mightContainUnusualLineTerminators()||ON(this._codeEditorService,e)===!0||this._editor.getOption(81))return;if(this._config==="auto"){e.removeUnusualLineTerminators(this._editor.getSelections());return}if(!(yield this._dialogService.confirm({title:p("unusualLineTerminators.title","Unusual Line Terminators"),message:p("unusualLineTerminators.message","Detected unusual line terminators"),detail:p("unusualLineTerminators.detail","The file '{0}' contains one or more unusual line terminator characters, like Line Separator (LS) or Paragraph Separator (PS).\n\nIt is recommended to remove them from the file. This can be configured via `editor.unusualLineTerminators`.",Qt(e.uri)),primaryButton:p("unusualLineTerminators.fix","Remove Unusual Line Terminators"),secondaryButton:p("unusualLineTerminators.ignore","Ignore")})).confirmed){MN(this._codeEditorService,e,!0);return}e.removeUnusualLineTerminators(this._editor.getSelections())})}};Ud.ID="editor.contrib.unusualLineTerminatorsDetector";Ud=RN([h2(1,Gs),h2(2,Ue)],Ud);Q(Ud.ID,Ud);var kse=Ya(_2());An();bt();we();pt();Ae();W();pe();ee();Be();ds();jt();Re();Z();Le();mt();Oe();var GN=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},BN=function(o,e){return function(t,r){e(t,r,o)}},VN=J("editor.wordHighlightBackground",{dark:"#575757B8",light:"#57575740",hc:null},p("wordHighlight","Background color of a symbol during read-access, like reading a variable. The color must not be opaque so as not to hide underlying decorations."),!0),HN=J("editor.wordHighlightStrongBackground",{dark:"#004972B8",light:"#0e639c40",hc:null},p("wordHighlightStrong","Background color of a symbol during write-access, like writing to a variable. The color must not be opaque so as not to hide underlying decorations."),!0),UN=J("editor.wordHighlightBorder",{light:null,dark:null,hc:oo},p("wordHighlightBorder","Border color of a symbol during read-access, like reading a variable.")),WN=J("editor.wordHighlightStrongBorder",{light:null,dark:null,hc:oo},p("wordHighlightStrongBorder","Border color of a symbol during write-access, like writing to a variable.")),jN=J("editorOverviewRuler.wordHighlightForeground",{dark:"#A0A0A0CC",light:"#A0A0A0CC",hc:"#A0A0A0CC"},p("overviewRulerWordHighlightForeground","Overview ruler marker color for symbol highlights. The color must not be opaque so as not to hide underlying decorations."),!0),zN=J("editorOverviewRuler.wordHighlightStrongForeground",{dark:"#C0A0C0CC",light:"#C0A0C0CC",hc:"#C0A0C0CC"},p("overviewRulerWordHighlightStrongForeground","Overview ruler marker color for write-access symbol highlights. The color must not be opaque so as not to hide underlying decorations."),!0),pm=new fe("hasWordHighlights",!1);function y2(o,e,t){let r=zl.ordered(o);return Su(r.map(n=>()=>Promise.resolve(n.provideDocumentHighlights(o,e,t)).then(void 0,ze)),It)}var Ny=class{constructor(e,t,r){this._wordRange=this._getCurrentWordRange(e,t),this.result=Ge(n=>this._compute(e,t,r,n))}_getCurrentWordRange(e,t){let r=e.getWordAtPosition(t.getPosition());return r?new y(t.startLineNumber,r.startColumn,t.startLineNumber,r.endColumn):null}isValid(e,t,r){let n=t.startLineNumber,i=t.startColumn,a=t.endColumn,s=this._getCurrentWordRange(e,t),l=Boolean(this._wordRange&&this._wordRange.equalsRange(s));for(let d=0,c=r.length;!l&&d<c;d++){let u=e.getDecorationRange(r[d]);u&&u.startLineNumber===n&&u.startColumn<=i&&u.endColumn>=a&&(l=!0)}return l}cancel(){this.result.cancel()}},v2=class extends Ny{_compute(e,t,r,n){return y2(e,t.getPosition(),n).then(i=>i||[])}},b2=class extends Ny{constructor(e,t,r){super(e,t,r);this._selectionIsEmpty=t.isEmpty()}_compute(e,t,r,n){return ps(250,n).then(()=>{if(!t.isEmpty())return[];let i=e.getWordAtPosition(t.getPosition());return!i||i.word.length>1e3?[]:e.findMatches(i.word,!0,!1,!0,r,!1).map(s=>({range:s.range,kind:xu.Text}))})}isValid(e,t,r){let n=t.isEmpty();return this._selectionIsEmpty!==n?!1:super.isValid(e,t,r)}};function KN(o,e,t){return zl.has(o)?new v2(o,e,t):new b2(o,e,t)}xr("_executeDocumentHighlights",(o,e)=>y2(o,e,he.None));var es=class{constructor(e,t){this.toUnhook=new P,this.workerRequestTokenId=0,this.workerRequestCompleted=!1,this.workerRequestValue=[],this.lastCursorPositionChangeTime=0,this.renderDecorationsTimer=-1,this.editor=e,this._hasWordHighlights=pm.bindTo(t),this._ignorePositionChangeEvent=!1,this.occurrencesHighlight=this.editor.getOption(72),this.model=this.editor.getModel(),this.toUnhook.add(e.onDidChangeCursorPosition(r=>{this._ignorePositionChangeEvent||!this.occurrencesHighlight||this._onPositionChanged(r)})),this.toUnhook.add(e.onDidChangeModelContent(r=>{this._stopAll()})),this.toUnhook.add(e.onDidChangeConfiguration(r=>{let n=this.editor.getOption(72);this.occurrencesHighlight!==n&&(this.occurrencesHighlight=n,this._stopAll())})),this._decorationIds=[],this.workerRequestTokenId=0,this.workerRequest=null,this.workerRequestCompleted=!1,this.lastCursorPositionChangeTime=0,this.renderDecorationsTimer=-1}hasDecorations(){return this._decorationIds.length>0}restore(){!this.occurrencesHighlight||this._run()}_getSortedHighlights(){return Un(this._decorationIds.map(e=>this.model.getDecorationRange(e)).sort(y.compareRangesUsingStarts))}moveNext(){let e=this._getSortedHighlights(),r=(e.findIndex(i=>i.containsPosition(this.editor.getPosition()))+1)%e.length,n=e[r];try{this._ignorePositionChangeEvent=!0,this.editor.setPosition(n.getStartPosition()),this.editor.revealRangeInCenterIfOutsideViewport(n);let i=this._getWord();if(i){let a=this.editor.getModel().getLineContent(n.startLineNumber);Tt(`${a}, ${r+1} of ${e.length} for '${i.word}'`)}}finally{this._ignorePositionChangeEvent=!1}}moveBack(){let e=this._getSortedHighlights(),r=(e.findIndex(i=>i.containsPosition(this.editor.getPosition()))-1+e.length)%e.length,n=e[r];try{this._ignorePositionChangeEvent=!0,this.editor.setPosition(n.getStartPosition()),this.editor.revealRangeInCenterIfOutsideViewport(n);let i=this._getWord();if(i){let a=this.editor.getModel().getLineContent(n.startLineNumber);Tt(`${a}, ${r+1} of ${e.length} for '${i.word}'`)}}finally{this._ignorePositionChangeEvent=!1}}_removeDecorations(){this._decorationIds.length>0&&(this._decorationIds=this.editor.deltaDecorations(this._decorationIds,[]),this._hasWordHighlights.set(!1))}_stopAll(){this._removeDecorations(),this.renderDecorationsTimer!==-1&&(clearTimeout(this.renderDecorationsTimer),this.renderDecorationsTimer=-1),this.workerRequest!==null&&(this.workerRequest.cancel(),this.workerRequest=null),this.workerRequestCompleted||(this.workerRequestTokenId++,this.workerRequestCompleted=!0)}_onPositionChanged(e){if(!this.occurrencesHighlight){this._stopAll();return}if(e.reason!==3){this._stopAll();return}this._run()}_getWord(){let e=this.editor.getSelection(),t=e.startLineNumber,r=e.startColumn;return this.model.getWordAtPosition({lineNumber:t,column:r})}_run(){let e=this.editor.getSelection();if(e.startLineNumber!==e.endLineNumber){this._stopAll();return}let t=e.startColumn,r=e.endColumn,n=this._getWord();if(!n||n.startColumn>t||n.endColumn<r){this._stopAll();return}let i=this.workerRequest&&this.workerRequest.isValid(this.model,e,this._decorationIds);if(this.lastCursorPositionChangeTime=new Date().getTime(),i)this.workerRequestCompleted&&this.renderDecorationsTimer!==-1&&(clearTimeout(this.renderDecorationsTimer),this.renderDecorationsTimer=-1,this._beginRenderDecorations());else{this._stopAll();let a=++this.workerRequestTokenId;this.workerRequestCompleted=!1,this.workerRequest=KN(this.model,this.editor.getSelection(),this.editor.getOption(117)),this.workerRequest.result.then(s=>{a===this.workerRequestTokenId&&(this.workerRequestCompleted=!0,this.workerRequestValue=s||[],this._beginRenderDecorations())},ce)}}_beginRenderDecorations(){let e=new Date().getTime(),t=this.lastCursorPositionChangeTime+250;e>=t?(this.renderDecorationsTimer=-1,this.renderDecorations()):this.renderDecorationsTimer=setTimeout(()=>{this.renderDecorations()},t-e)}renderDecorations(){this.renderDecorationsTimer=-1;let e=[];for(let t of this.workerRequestValue)t.range&&e.push({range:t.range,options:es._getDecorationOptions(t.kind)});this._decorationIds=this.editor.deltaDecorations(this._decorationIds,e),this._hasWordHighlights.set(this.hasDecorations())}static _getDecorationOptions(e){return e===xu.Write?this._WRITE_OPTIONS:e===xu.Text?this._TEXT_OPTIONS:this._REGULAR_OPTIONS}dispose(){this._stopAll(),this.toUnhook.dispose()}};es._WRITE_OPTIONS=Se.register({description:"word-highlight-strong",stickiness:1,className:"wordHighlightStrong",overviewRuler:{color:nt(zN),position:Nr.Center},minimap:{color:nt(Is),position:_i.Inline}});es._TEXT_OPTIONS=Se.register({description:"selection-highlight",stickiness:1,className:"selectionHighlight",overviewRuler:{color:nt(Yu),position:Nr.Center},minimap:{color:nt(Is),position:_i.Inline}});es._REGULAR_OPTIONS=Se.register({description:"word-highlight",stickiness:1,className:"wordHighlight",overviewRuler:{color:nt(jN),position:Nr.Center},minimap:{color:nt(Is),position:_i.Inline}});var Zo=class S2 extends F{constructor(e,t){super();this.wordHighlighter=null;let r=()=>{e.hasModel()&&(this.wordHighlighter=new es(e,t))};this._register(e.onDidChangeModel(n=>{this.wordHighlighter&&(this.wordHighlighter.dispose(),this.wordHighlighter=null),r()})),r()}static get(e){return e.getContribution(S2.ID)}saveViewState(){return!!(this.wordHighlighter&&this.wordHighlighter.hasDecorations())}moveNext(){this.wordHighlighter&&this.wordHighlighter.moveNext()}moveBack(){this.wordHighlighter&&this.wordHighlighter.moveBack()}restoreViewState(e){this.wordHighlighter&&e&&this.wordHighlighter.restore()}dispose(){this.wordHighlighter&&(this.wordHighlighter.dispose(),this.wordHighlighter=null),super.dispose()}};Zo.ID="editor.contrib.wordHighlighter";Zo=GN([BN(1,re)],Zo);var Ry=class extends M{constructor(e,t){super(t);this._isNext=e}run(e,t){let r=Zo.get(t);!r||(this._isNext?r.moveNext():r.moveBack())}},E2=class extends Ry{constructor(){super(!0,{id:"editor.action.wordHighlight.next",label:p("wordHighlight.next.label","Go to Next Symbol Highlight"),alias:"Go to Next Symbol Highlight",precondition:pm,kbOpts:{kbExpr:v.editorTextFocus,primary:65,weight:100}})}},T2=class extends Ry{constructor(){super(!1,{id:"editor.action.wordHighlight.prev",label:p("wordHighlight.previous.label","Go to Previous Symbol Highlight"),alias:"Go to Previous Symbol Highlight",precondition:pm,kbOpts:{kbExpr:v.editorTextFocus,primary:1089,weight:100}})}},x2=class extends M{constructor(){super({id:"editor.action.wordHighlight.trigger",label:p("wordHighlight.trigger.label","Trigger Symbol Highlight"),alias:"Trigger Symbol Highlight",precondition:pm.toNegated(),kbOpts:{kbExpr:v.editorTextFocus,primary:0,weight:100}})}run(e,t,r){let n=Zo.get(t);!n||n.restoreViewState(!0)}};Q(Zo.ID,Zo);D(E2);D(T2);D(x2);ke((o,e)=>{let t=o.getColor(jb);t&&(e.addRule(`.monaco-editor .focused .selectionHighlight { background-color: ${t}; }`),e.addRule(`.monaco-editor .selectionHighlight { background-color: ${t.transparent(.5)}; }`));let r=o.getColor(VN);r&&e.addRule(`.monaco-editor .wordHighlight { background-color: ${r}; }`);let n=o.getColor(HN);n&&e.addRule(`.monaco-editor .wordHighlightStrong { background-color: ${n}; }`);let i=o.getColor(zb);i&&e.addRule(`.monaco-editor .selectionHighlight { border: 1px ${o.type==="hc"?"dotted":"solid"} ${i}; box-sizing: border-box; }`);let a=o.getColor(UN);a&&e.addRule(`.monaco-editor .wordHighlight { border: 1px ${o.type==="hc"?"dashed":"solid"} ${a}; box-sizing: border-box; }`);let s=o.getColor(WN);s&&e.addRule(`.monaco-editor .wordHighlightStrong { border: 1px ${o.type==="hc"?"dashed":"solid"} ${s}; box-sizing: border-box; }`)});pe();XL();tt();ee();kt();Be();on();Z();Le();var bl=class extends dt{constructor(e){super(e);this._inSelectionMode=e.inSelectionMode,this._wordNavigationType=e.wordNavigationType}runEditorCommand(e,t,r){if(!t.hasModel())return;let n=ua(t.getOption(117)),i=t.getModel(),s=t.getSelections().map(l=>{let d=new z(l.positionLineNumber,l.positionColumn),c=this._move(n,i,d,this._wordNavigationType);return this._moveTo(l,c,this._inSelectionMode)});if(i.pushStackElement(),t._getViewModel().setCursorStates("moveWordCommand",3,s.map(l=>I1.fromModelSelection(l))),s.length===1){let l=new z(s[0].positionLineNumber,s[0].positionColumn);t.revealPosition(l,0)}}_moveTo(e,t,r){return r?new X(e.selectionStartLineNumber,e.selectionStartColumn,t.lineNumber,t.column):new X(t.lineNumber,t.column,t.lineNumber,t.column)}},$i=class extends bl{_move(e,t,r,n){return Ps.moveWordLeft(e,t,r,n)}},Qi=class extends bl{_move(e,t,r,n){return Ps.moveWordRight(e,t,r,n)}},C2=class extends $i{constructor(){super({inSelectionMode:!1,wordNavigationType:0,id:"cursorWordStartLeft",precondition:void 0})}},L2=class extends $i{constructor(){super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordEndLeft",precondition:void 0})}},D2=class extends $i{constructor(){var e;super({inSelectionMode:!1,wordNavigationType:1,id:"cursorWordLeft",precondition:void 0,kbOpts:{kbExpr:G.and(v.textInputFocus,(e=G.and(tc,gc))===null||e===void 0?void 0:e.negate()),primary:2063,mac:{primary:527},weight:100}})}},w2=class extends $i{constructor(){super({inSelectionMode:!0,wordNavigationType:0,id:"cursorWordStartLeftSelect",precondition:void 0})}},A2=class extends $i{constructor(){super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordEndLeftSelect",precondition:void 0})}},I2=class extends $i{constructor(){var e;super({inSelectionMode:!0,wordNavigationType:1,id:"cursorWordLeftSelect",precondition:void 0,kbOpts:{kbExpr:G.and(v.textInputFocus,(e=G.and(tc,gc))===null||e===void 0?void 0:e.negate()),primary:3087,mac:{primary:1551},weight:100}})}},k2=class extends $i{constructor(){super({inSelectionMode:!1,wordNavigationType:3,id:"cursorWordAccessibilityLeft",precondition:void 0})}_move(e,t,r,n){return super._move(ua(Bl.wordSeparators.defaultValue),t,r,n)}},N2=class extends $i{constructor(){super({inSelectionMode:!0,wordNavigationType:3,id:"cursorWordAccessibilityLeftSelect",precondition:void 0})}_move(e,t,r,n){return super._move(ua(Bl.wordSeparators.defaultValue),t,r,n)}},R2=class extends Qi{constructor(){super({inSelectionMode:!1,wordNavigationType:0,id:"cursorWordStartRight",precondition:void 0})}},P2=class extends Qi{constructor(){var e;super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordEndRight",precondition:void 0,kbOpts:{kbExpr:G.and(v.textInputFocus,(e=G.and(tc,gc))===null||e===void 0?void 0:e.negate()),primary:2065,mac:{primary:529},weight:100}})}},M2=class extends Qi{constructor(){super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordRight",precondition:void 0})}},O2=class extends Qi{constructor(){super({inSelectionMode:!0,wordNavigationType:0,id:"cursorWordStartRightSelect",precondition:void 0})}},F2=class extends Qi{constructor(){var e;super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordEndRightSelect",precondition:void 0,kbOpts:{kbExpr:G.and(v.textInputFocus,(e=G.and(tc,gc))===null||e===void 0?void 0:e.negate()),primary:3089,mac:{primary:1553},weight:100}})}},G2=class extends Qi{constructor(){super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordRightSelect",precondition:void 0})}},B2=class extends Qi{constructor(){super({inSelectionMode:!1,wordNavigationType:3,id:"cursorWordAccessibilityRight",precondition:void 0})}_move(e,t,r,n){return super._move(ua(Bl.wordSeparators.defaultValue),t,r,n)}},V2=class extends Qi{constructor(){super({inSelectionMode:!0,wordNavigationType:3,id:"cursorWordAccessibilityRightSelect",precondition:void 0})}_move(e,t,r,n){return super._move(ua(Bl.wordSeparators.defaultValue),t,r,n)}},Sl=class extends dt{constructor(e){super(e);this._whitespaceHeuristics=e.whitespaceHeuristics,this._wordNavigationType=e.wordNavigationType}runEditorCommand(e,t,r){let n=e.get(Nt);if(!t.hasModel())return;let i=ua(t.getOption(117)),a=t.getModel(),s=t.getSelections(),l=t.getOption(5),d=t.getOption(8),c=n.getLanguageConfiguration(a.getLanguageId()).getAutoClosingPairs(),u=t._getViewModel(),f=s.map(m=>{let g=this._delete({wordSeparators:i,model:a,selection:m,whitespaceHeuristics:this._whitespaceHeuristics,autoClosingDelete:t.getOption(6),autoClosingBrackets:l,autoClosingQuotes:d,autoClosingPairs:c,autoClosedCharacters:u.getCursorAutoClosedCharacters()},this._wordNavigationType);return new Ci(g,"")});t.pushUndoStop(),t.executeCommands(this.id,f),t.pushUndoStop()}},fm=class extends Sl{_delete(e,t){let r=Ps.deleteWordLeft(e,t);return r||new y(1,1,1,1)}},mm=class extends Sl{_delete(e,t){let r=Ps.deleteWordRight(e,t);if(r)return r;let n=e.model.getLineCount(),i=e.model.getLineMaxColumn(n);return new y(n,i,n,i)}},H2=class extends fm{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:0,id:"deleteWordStartLeft",precondition:v.writable})}},U2=class extends fm{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:2,id:"deleteWordEndLeft",precondition:v.writable})}},W2=class extends fm{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:0,id:"deleteWordLeft",precondition:v.writable,kbOpts:{kbExpr:v.textInputFocus,primary:2049,mac:{primary:513},weight:100}})}},j2=class extends mm{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:0,id:"deleteWordStartRight",precondition:v.writable})}},z2=class extends mm{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:2,id:"deleteWordEndRight",precondition:v.writable})}},K2=class extends mm{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:2,id:"deleteWordRight",precondition:v.writable,kbOpts:{kbExpr:v.textInputFocus,primary:2068,mac:{primary:532},weight:100}})}},q2=class extends M{constructor(){super({id:"deleteInsideWord",precondition:v.writable,label:p("deleteInsideWord","Delete Word"),alias:"Delete Word"})}run(e,t,r){if(!t.hasModel())return;let n=ua(t.getOption(117)),i=t.getModel(),s=t.getSelections().map(l=>{let d=Ps.deleteInsideWord(n,i,l);return new Ci(d,"")});t.pushUndoStop(),t.executeCommands(this.id,s),t.pushUndoStop()}};K(new C2);K(new L2);K(new D2);K(new w2);K(new A2);K(new I2);K(new R2);K(new P2);K(new M2);K(new O2);K(new F2);K(new G2);K(new k2);K(new N2);K(new B2);K(new V2);K(new H2);K(new U2);K(new W2);K(new j2);K(new z2);K(new K2);D(q2);pe();ee();Be();xt();var J2=class extends Sl{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:0,id:"deleteWordPartLeft",precondition:v.writable,kbOpts:{kbExpr:v.textInputFocus,primary:0,mac:{primary:769},weight:100}})}_delete(e,t){let r=uc.deleteWordPartLeft(e);return r||new y(1,1,1,1)}},X2=class extends Sl{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:2,id:"deleteWordPartRight",precondition:v.writable,kbOpts:{kbExpr:v.textInputFocus,primary:0,mac:{primary:788},weight:100}})}_delete(e,t){let r=uc.deleteWordPartRight(e);if(r)return r;let n=e.model.getLineCount(),i=e.model.getLineMaxColumn(n);return new y(n,i,n,i)}},Py=class extends bl{_move(e,t,r,n){return uc.moveWordPartLeft(e,t,r)}},Y2=class extends Py{constructor(){super({inSelectionMode:!1,wordNavigationType:0,id:"cursorWordPartLeft",precondition:void 0,kbOpts:{kbExpr:v.textInputFocus,primary:0,mac:{primary:783},weight:100}})}};Ie.registerCommandAlias("cursorWordPartStartLeft","cursorWordPartLeft");var $2=class extends Py{constructor(){super({inSelectionMode:!0,wordNavigationType:0,id:"cursorWordPartLeftSelect",precondition:void 0,kbOpts:{kbExpr:v.textInputFocus,primary:0,mac:{primary:1807},weight:100}})}};Ie.registerCommandAlias("cursorWordPartStartLeftSelect","cursorWordPartLeftSelect");var My=class extends bl{_move(e,t,r,n){return uc.moveWordPartRight(e,t,r)}},Q2=class extends My{constructor(){super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordPartRight",precondition:void 0,kbOpts:{kbExpr:v.textInputFocus,primary:0,mac:{primary:785},weight:100}})}},Z2=class extends My{constructor(){super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordPartRightSelect",precondition:void 0,kbOpts:{kbExpr:v.textInputFocus,primary:0,mac:{primary:1809},weight:100}})}};K(new J2);K(new X2);K(new Y2);K(new $2);K(new Q2);K(new Z2);Sa();var Hde=Ya(aL());Pe();W();pe();Ir();var _m=class extends F{constructor(e){super();this.editor=e,this.widget=null,su&&(this._register(e.onDidChangeConfiguration(()=>this.update())),this.update())}update(){let e=!this.editor.getOption(81);!this.widget&&e?this.widget=new Kd(this.editor):this.widget&&!e&&(this.widget.dispose(),this.widget=null)}dispose(){super.dispose(),this.widget&&(this.widget.dispose(),this.widget=null)}};_m.ID="editor.contrib.iPadShowKeyboard";var Kd=class extends F{constructor(e){super();this.editor=e,this._domNode=document.createElement("textarea"),this._domNode.className="iPadShowKeyboard",this._register(qe(this._domNode,"touchstart",t=>{this.editor.focus()})),this._register(qe(this._domNode,"focus",t=>{this.editor.focus()})),this.editor.addOverlayWidget(this)}dispose(){this.editor.removeOverlayWidget(this),super.dispose()}getId(){return Kd.ID}getDomNode(){return this._domNode}getPosition(){return{preference:1}}};Kd.ID="editor.contrib.ShowKeyboardWidget";Q(_m.ID,_m);var Wde=Ya(dL());Es();Sa();W();Z();Es();var QN=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},ZN=function(o,e){return function(t,r){e(t,r,o)}},Xd=class ym{constructor(e){this.quickInputService=e,this.registry=ln.as(ei.Quickaccess)}provide(e){let t=new P;t.add(e.onDidAccept(()=>{let[i]=e.selectedItems;i&&this.quickInputService.quickAccess.show(i.prefix,{preserveValue:!0})})),t.add(e.onDidChangeValue(i=>{let a=this.registry.getQuickAccessProvider(i.substr(ym.PREFIX.length));a&&a.prefix&&a.prefix!==ym.PREFIX&&this.quickInputService.quickAccess.show(a.prefix,{preserveValue:!0})}));let{editorProviders:r,globalProviders:n}=this.getQuickAccessProviders();return e.items=r.length===0||n.length===0?[...r.length===0?n:r]:[{label:p("globalCommands","global commands"),type:"separator"},...n,{label:p("editorCommands","editor commands"),type:"separator"},...r],t}getQuickAccessProviders(){let e=[],t=[];for(let r of this.registry.getQuickAccessProviders().sort((n,i)=>n.prefix.localeCompare(i.prefix)))if(r.prefix!==ym.PREFIX)for(let n of r.helpEntries){let i=n.prefix||r.prefix,a=i||"\u2026";(n.needsEditor?t:e).push({prefix:i,label:a,ariaLabel:p("helpPickAriaLabel","{0}, {1}",a,n.description),description:n.description})}return{editorProviders:t,globalProviders:e}}};Xd.PREFIX="?";Xd=QN([ZN(0,Vr)],Xd);ln.as(ei.Quickaccess).registerQuickAccessProvider({ctor:Xd,prefix:"",helpEntries:[{description:V1.helpQuickAccessActionLabel,needsEditor:!0}]});W();gh();_v();W();Jt();gh();ds();ep();Oe();var Yd=class{constructor(e){this.options=e,this.rangeHighlightDecorationId=void 0}provide(e,t){var r;let n=new P;e.canAcceptInBackground=!!((r=this.options)===null||r===void 0?void 0:r.canAcceptInBackground),e.matchOnLabel=e.matchOnDescription=e.matchOnDetail=e.sortByLabel=!1;let i=n.add(new et);return i.value=this.doProvide(e,t),n.add(this.onDidActiveTextEditorControlChange(()=>{i.value=void 0,i.value=this.doProvide(e,t)})),n}doProvide(e,t){let r=new P,n=this.activeTextEditorControl;if(n&&this.canProvideWithTextEditor(n)){let i={editor:n},a=Cp(n);if(a){let s=kr(n.saveViewState());r.add(a.onDidChangeCursorPosition(()=>{s=kr(n.saveViewState())})),i.restoreViewState=()=>{s&&n===this.activeTextEditorControl&&n.restoreViewState(s)},r.add(_u(t.onCancellationRequested)(()=>{var l;return(l=i.restoreViewState)===null||l===void 0?void 0:l.call(i)}))}r.add(Ve(()=>this.clearDecorations(n))),r.add(this.provideWithTextEditor(i,e,t))}else r.add(this.provideWithoutTextEditor(e,t));return r}canProvideWithTextEditor(e){return!0}gotoLocation({editor:e},t){e.setSelection(t.range),e.revealRangeInCenter(t.range,0),t.preserveFocus||e.focus()}getModel(e){var t;return yS(e)?(t=e.getModel())===null||t===void 0?void 0:t.modified:e.getModel()}addDecorations(e,t){e.changeDecorations(r=>{let n=[];this.rangeHighlightDecorationId&&(n.push(this.rangeHighlightDecorationId.overviewRulerDecorationId),n.push(this.rangeHighlightDecorationId.rangeHighlightId),this.rangeHighlightDecorationId=void 0);let i=[{range:t,options:{description:"quick-access-range-highlight",className:"rangeHighlight",isWholeLine:!0}},{range:t,options:{description:"quick-access-range-highlight-overview",overviewRuler:{color:nt(y1),position:Nr.Full}}}],[a,s]=r.deltaDecorations(n,i);this.rangeHighlightDecorationId={rangeHighlightId:a,overviewRulerDecorationId:s}})}clearDecorations(e){let t=this.rangeHighlightDecorationId;t&&(e.changeDecorations(r=>{r.deltaDecorations([t.overviewRulerDecorationId,t.rangeHighlightId],[])}),this.rangeHighlightDecorationId=void 0)}};Z();var xl=class extends Yd{constructor(){super({canAcceptInBackground:!0})}provideWithoutTextEditor(e){let t=p("cannotRunGotoLine","Open a text editor first to go to a line.");return e.items=[{label:t}],e.ariaLabel=t,F.None}provideWithTextEditor(e,t,r){let n=e.editor,i=new P;i.add(t.onDidAccept(l=>{let[d]=t.selectedItems;if(d){if(!this.isValidLineNumber(n,d.lineNumber))return;this.gotoLocation(e,{range:this.toRange(d.lineNumber,d.column),keyMods:t.keyMods,preserveFocus:l.inBackground}),l.inBackground||t.hide()}}));let a=()=>{let l=this.parsePosition(n,t.value.trim().substr(xl.PREFIX.length)),d=this.getPickLabel(n,l.lineNumber,l.column);if(t.items=[{lineNumber:l.lineNumber,column:l.column,label:d}],t.ariaLabel=d,!this.isValidLineNumber(n,l.lineNumber)){this.clearDecorations(n);return}let c=this.toRange(l.lineNumber,l.column);n.revealRangeInCenter(c,0),this.addDecorations(n,c)};a(),i.add(t.onDidChangeValue(()=>a()));let s=Cp(n);return s&&s.getOptions().get(60).renderType===2&&(s.updateOptions({lineNumbers:"on"}),i.add(Ve(()=>s.updateOptions({lineNumbers:"relative"})))),i}toRange(e=1,t=1){return{startLineNumber:e,startColumn:t,endLineNumber:e,endColumn:t}}parsePosition(e,t){let r=t.split(/,|:|#/).map(i=>parseInt(i,10)).filter(i=>!isNaN(i)),n=this.lineCount(e)+1;return{lineNumber:r[0]>0?r[0]:n+r[0],column:r[1]}}getPickLabel(e,t,r){if(this.isValidLineNumber(e,t))return this.isValidColumn(e,t,r)?p("gotoLineColumnLabel","Go to line {0} and character {1}.",t,r):p("gotoLineLabel","Go to line {0}.",t);let n=e.getPosition()||{lineNumber:1,column:1},i=this.lineCount(e);return i>1?p("gotoLineLabelEmptyWithLimit","Current Line: {0}, Character: {1}. Type a line number between 1 and {2} to navigate to.",n.lineNumber,n.column,i):p("gotoLineLabelEmpty","Current Line: {0}, Character: {1}. Type a line number to navigate to.",n.lineNumber,n.column)}isValidLineNumber(e,t){return!t||typeof t!="number"?!1:t>0&&t<=this.lineCount(e)}isValidColumn(e,t,r){if(!r||typeof r!="number")return!1;let n=this.getModel(e);if(!n)return!1;let i={lineNumber:t,column:r};return n.validatePosition(i).equals(i)}lineCount(e){var t,r;return(r=(t=this.getModel(e))===null||t===void 0?void 0:t.getLineCount())!==null&&r!==void 0?r:0}};xl.PREFIX=":";Es();Er();Jt();Sa();Ne();pe();Be();var eR=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},tR=function(o,e){return function(t,r){e(t,r,o)}},$d=class extends xl{constructor(e){super();this.editorService=e,this.onDidActiveTextEditorControlChange=ut.None}get activeTextEditorControl(){return kr(this.editorService.getFocusedCodeEditor())}};$d=eR([tR(0,Ue)],$d);ln.as(ei.Quickaccess).registerQuickAccessProvider({ctor:$d,prefix:$d.PREFIX,helpEntries:[{description:lh.gotoLineActionLabel,needsEditor:!0}]});var uL=class extends M{constructor(){super({id:"editor.action.gotoLine",label:lh.gotoLineActionLabel,alias:"Go to Line/Column...",precondition:void 0,kbOpts:{kbExpr:v.focus,primary:2085,mac:{primary:293},weight:100}})}run(e){e.get(Vr).quickAccess.show($d.PREFIX)}};D(uL);we();pt();Sr();bv();Ir();Ye();var mL=[void 0,[]];function bm(o,e,t=0,r=0){let n=e;return n.values&&n.values.length>1?rR(o,n.values,t,r):hL(o,e,t,r)}function rR(o,e,t,r){let n=0,i=[];for(let a of e){let[s,l]=hL(o,a,t,r);if(typeof s!="number")return mL;n+=s,i.push(...l)}return[n,nR(i)]}function hL(o,e,t,r){let n=hp(e.original,e.originalLowercase,t,o,o.toLowerCase(),r,!0);return n?[n[0],mo(n)]:mL}var uce=Object.freeze({score:0});function nR(o){let e=o.sort((n,i)=>n.start-i.start),t=[],r;for(let n of e)!r||!iR(r,n)?(r=n,t.push(n)):(r.start=Math.min(r.start,n.start),r.end=Math.max(r.end,n.end));return t}function iR(o,e){return!(o.end<e.start||e.end<o.start)}function pL(o){return o.startsWith('"')&&o.endsWith('"')}var gL=" ";function vm(o){typeof o!="string"&&(o="");let e=o.toLowerCase(),{pathNormalized:t,normalized:r,normalizedLowercase:n}=fL(o),i=t.indexOf(bu)>=0,a=pL(o),s,l=o.split(gL);if(l.length>1)for(let d of l){let c=pL(d),{pathNormalized:u,normalized:f,normalizedLowercase:m}=fL(d);f&&(s||(s=[]),s.push({original:d,originalLowercase:d.toLowerCase(),pathNormalized:u,normalized:f,normalizedLowercase:m,expectContiguousMatch:c}))}return{original:o,originalLowercase:e,pathNormalized:t,normalized:r,normalizedLowercase:n,values:s,containsPathSeparator:i,expectContiguousMatch:a}}function fL(o){let e;hi?e=o.replace(/\//g,bu):e=o.replace(/\\/g,bu);let t=Dv(e).replace(/\s|"/g,"");return{pathNormalized:e,normalized:t,normalizedLowercase:t.toLowerCase()}}function Oy(o){return Array.isArray(o)?vm(o.map(e=>e.original).join(gL)):vm(o.original)}W();Ye();ee();Re();im();Z();var aR=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},oR=function(o,e){return function(t,r){e(t,r,o)}},Qd=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},tn=class By extends Yd{constructor(e,t=Object.create(null)){super(t);this._outlineModelService=e,this.options=t,this.options.canAcceptInBackground=!0}provideWithoutTextEditor(e){return this.provideLabelPick(e,p("cannotRunGotoSymbolWithoutEditor","To go to a symbol, first open a text editor with symbol information.")),F.None}provideWithTextEditor(e,t,r){let n=e.editor,i=this.getModel(n);return i?Dn.has(i)?this.doProvideWithEditorSymbols(e,i,t,r):this.doProvideWithoutEditorSymbols(e,i,t,r):F.None}doProvideWithoutEditorSymbols(e,t,r,n){let i=new P;return this.provideLabelPick(r,p("cannotRunGotoSymbolWithoutSymbolProvider","The active text editor does not provide symbol information.")),Qd(this,void 0,void 0,function*(){!(yield this.waitForLanguageSymbolRegistry(t,i))||n.isCancellationRequested||i.add(this.doProvideWithEditorSymbols(e,t,r,n))}),i}provideLabelPick(e,t){e.items=[{label:t,index:0,kind:14}],e.ariaLabel=t}waitForLanguageSymbolRegistry(e,t){return Qd(this,void 0,void 0,function*(){if(Dn.has(e))return!0;let r=new Ev,n=t.add(Dn.onDidChange(()=>{Dn.has(e)&&(n.dispose(),r.complete(!0))}));return t.add(Ve(()=>r.complete(!1))),r.p})}doProvideWithEditorSymbols(e,t,r,n){let i=e.editor,a=new P;a.add(r.onDidAccept(u=>{let[f]=r.selectedItems;f&&f.range&&(this.gotoLocation(e,{range:f.range.selection,keyMods:r.keyMods,preserveFocus:u.inBackground}),u.inBackground||r.hide())})),a.add(r.onDidTriggerItemButton(({item:u})=>{u&&u.range&&(this.gotoLocation(e,{range:u.range.selection,keyMods:r.keyMods,forceSideBySide:!0}),r.hide())}));let s=this.getDocumentSymbols(t,n),l,d=()=>Qd(this,void 0,void 0,function*(){l==null||l.dispose(!0),r.busy=!1,l=new Mt(n),r.busy=!0;try{let u=vm(r.value.substr(By.PREFIX.length).trim()),f=yield this.doGetSymbolPicks(s,u,void 0,l.token);if(n.isCancellationRequested)return;f.length>0?r.items=f:u.original.length>0?this.provideLabelPick(r,p("noMatchingSymbolResults","No matching editor symbols")):this.provideLabelPick(r,p("noSymbolResults","No editor symbols"))}finally{n.isCancellationRequested||(r.busy=!1)}});a.add(r.onDidChangeValue(()=>d())),d();let c=!0;return a.add(r.onDidChangeActive(()=>{let[u]=r.activeItems;if(u&&u.range){if(c){c=!1;return}i.revealRangeInCenter(u.range.selection,0),this.addDecorations(i,u.range.decoration)}})),a}doGetSymbolPicks(e,t,r,n){return Qd(this,void 0,void 0,function*(){let i=yield e;if(n.isCancellationRequested)return[];let a=t.original.indexOf(By.SCOPE_PREFIX)===0,s=a?1:0,l,d;t.values&&t.values.length>1?(l=Oy(t.values[0]),d=Oy(t.values.slice(1))):l=t;let c=[];for(let m=0;m<i.length;m++){let g=i[m],b=Lv(g.name),T=`$(${Vv.toIcon(g.kind).id}) ${b}`,x=T.length-b.length,R=g.containerName;(r==null?void 0:r.extraContainerLabel)&&(R?R=`${r.extraContainerLabel} \u2022 ${R}`:R=r.extraContainerLabel);let I,H,U,de;if(t.original.length>s){let wt=!1;if(l!==t&&([I,H]=bm(T,Object.assign(Object.assign({},t),{values:void 0}),s,x),typeof I=="number"&&(wt=!0)),typeof I!="number"&&([I,H]=bm(T,l,s,x),typeof I!="number"))continue;if(!wt&&d){if(R&&d.original.length>0&&([U,de]=bm(R,d)),typeof U!="number")continue;typeof I=="number"&&(I+=U)}}let Ce=g.tags&&g.tags.indexOf(1)>=0;c.push({index:m,kind:g.kind,score:I,label:T,ariaLabel:b,description:R,highlights:Ce?void 0:{label:H,description:de},range:{selection:y.collapseToStart(g.selectionRange),decoration:g.range},strikethrough:Ce,buttons:(()=>{var wt,Vt;let Ht=((wt=this.options)===null||wt===void 0?void 0:wt.openSideBySideDirection)?(Vt=this.options)===null||Vt===void 0?void 0:Vt.openSideBySideDirection():void 0;if(!!Ht)return[{iconClass:Ht==="right"?q.splitHorizontal.classNames:q.splitVertical.classNames,tooltip:Ht==="right"?p("openToSide","Open to the Side"):p("openToBottom","Open to the Bottom")}]})()})}let u=c.sort((m,g)=>a?this.compareByKindAndScore(m,g):this.compareByScore(m,g)),f=[];if(a){let T=function(){g&&typeof m=="number"&&b>0&&(g.label=zr(Gy[m]||Fy,b))},m,g,b=0;for(let x of u)m!==x.kind?(T(),m=x.kind,b=1,g={type:"separator"},f.push(g)):b++,f.push(x);T()}else u.length>0&&(f=[{label:p("symbols","symbols ({0})",c.length),type:"separator"},...u]);return f})}compareByScore(e,t){if(typeof e.score!="number"&&typeof t.score=="number")return 1;if(typeof e.score=="number"&&typeof t.score!="number")return-1;if(typeof e.score=="number"&&typeof t.score=="number"){if(e.score>t.score)return-1;if(e.score<t.score)return 1}return e.index<t.index?-1:e.index>t.index?1:0}compareByKindAndScore(e,t){let r=Gy[e.kind]||Fy,n=Gy[t.kind]||Fy,i=r.localeCompare(n);return i===0?this.compareByScore(e,t):i}getDocumentSymbols(e,t){return Qd(this,void 0,void 0,function*(){let r=yield this._outlineModelService.getOrCreate(e,t);return t.isCancellationRequested?[]:r.asListOfDocumentSymbols()})}};tn.PREFIX="@";tn.SCOPE_PREFIX=":";tn.PREFIX_BY_CATEGORY=`${tn.PREFIX}${tn.SCOPE_PREFIX}`;tn=aR([oR(0,jo)],tn);var Fy=p("property","properties ({0})"),Gy={[5]:p("method","methods ({0})"),[11]:p("function","functions ({0})"),[8]:p("_constructor","constructors ({0})"),[12]:p("variable","variables ({0})"),[4]:p("class","classes ({0})"),[22]:p("struct","structs ({0})"),[23]:p("event","events ({0})"),[24]:p("operator","operators ({0})"),[10]:p("interface","interfaces ({0})"),[2]:p("namespace","namespaces ({0})"),[3]:p("package","packages ({0})"),[25]:p("typeParameter","type parameters ({0})"),[1]:p("modules","modules ({0})"),[6]:p("property","properties ({0})"),[9]:p("enum","enumerations ({0})"),[21]:p("enumMember","enumeration members ({0})"),[14]:p("string","strings ({0})"),[0]:p("file","files ({0})"),[17]:p("array","arrays ({0})"),[15]:p("number","numbers ({0})"),[16]:p("boolean","booleans ({0})"),[18]:p("object","objects ({0})"),[19]:p("key","keys ({0})"),[7]:p("field","fields ({0})"),[13]:p("constant","constants ({0})")};Es();Er();Jt();Sa();Ne();pe();Be();im();var sR=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},_L=function(o,e){return function(t,r){e(t,r,o)}},Vy=class extends tn{constructor(e,t){super(t);this.editorService=e,this.onDidActiveTextEditorControlChange=ut.None}get activeTextEditorControl(){return kr(this.editorService.getFocusedCodeEditor())}};Vy=sR([_L(0,Ue),_L(1,jo)],Vy);ln.as(ei.Quickaccess).registerQuickAccessProvider({ctor:Vy,prefix:tn.PREFIX,helpEntries:[{description:mp.quickOutlineActionLabel,prefix:tn.PREFIX,needsEditor:!0},{description:mp.quickOutlineByCategoryActionLabel,prefix:tn.PREFIX_BY_CATEGORY,needsEditor:!0}]});var yL=class extends M{constructor(){super({id:"editor.action.quickOutline",label:mp.quickOutlineActionLabel,alias:"Go to Symbol...",precondition:v.hasDocumentSymbolProvider,kbOpts:{kbExpr:v.focus,primary:3117,weight:100},contextMenuOpts:{group:"navigation",order:3}})}run(e){e.get(Vr).quickAccess.show(tn.PREFIX)}};D(yL);Es();Sa();Er();bt();Jt();Z();function Hy(o,e){return e&&(o.stack||o.stacktrace)?p("stackTrace.format","{0}: {1}",bL(o),vL(o.stack)||vL(o.stacktrace)):bL(o)}function vL(o){return Array.isArray(o)?o.join(`
`):o}function bL(o){return typeof o.code=="string"&&typeof o.errno=="number"&&typeof o.syscall=="string"?p("nodeExceptionMessage","A system error occurred ({0})",o.message):o.message||p("error.defaultMessage","An unknown error occurred. Please consult the log for more details.")}function Uy(o=null,e=!1){if(!o)return p("error.defaultMessage","An unknown error occurred. Please consult the log for more details.");if(Array.isArray(o)){let t=Un(o),r=Uy(t[0],e);return t.length>1?p("error.moreErrors","{0} ({1} errors in total)",r,t.length):r}if(pu(o))return o;if(o.detail){let t=o.detail;if(t.error)return Hy(t.error,e);if(t.exception)return Hy(t.exception,e)}return o.stack?Hy(o,e):o.message?o.message:p("error.defaultMessage","An unknown error occurred. Please consult the log for more details.")}Ae();W();hs();Jt();Z();xt();wn();He();qr();we();pt();W();var Sm=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},Cl;(function(o){o[o.NO_ACTION=0]="NO_ACTION",o[o.CLOSE_PICKER=1]="CLOSE_PICKER",o[o.REFRESH_PICKER=2]="REFRESH_PICKER",o[o.REMOVE_ITEM=3]="REMOVE_ITEM"})(Cl||(Cl={}));function Wy(o){let e=o;return Array.isArray(e.items)}function lR(o){let e=o;return!!e.picks&&e.additionalPicks instanceof Promise}var Ll=class extends F{constructor(e,t){super();this.prefix=e,this.options=t}provide(e,t){var r;let n=new P;e.canAcceptInBackground=!!((r=this.options)===null||r===void 0?void 0:r.canAcceptInBackground),e.matchOnLabel=e.matchOnDescription=e.matchOnDetail=e.sortByLabel=!1;let i,a=n.add(new et),s=()=>Sm(this,void 0,void 0,function*(){let l=a.value=new P;i==null||i.dispose(!0),e.busy=!1,i=new Mt(t);let d=i.token,c=e.value.substr(this.prefix.length).trim(),u=this._getPicks(c,l,d),f=(m,g)=>{var b;let T,x;if(Wy(m)?(T=m.items,x=m.active):T=m,T.length===0){if(g)return!1;c.length>0&&((b=this.options)===null||b===void 0?void 0:b.noResultsPick)&&(T=[this.options.noResultsPick])}return e.items=T,x&&(e.activeItems=[x]),!0};if(u!==null)if(lR(u)){let m=!1,g=!1;yield Promise.all([(()=>Sm(this,void 0,void 0,function*(){yield ps(Ll.FAST_PICKS_RACE_DELAY),!d.isCancellationRequested&&(g||(m=f(u.picks,!0)))}))(),(()=>Sm(this,void 0,void 0,function*(){e.busy=!0;try{let b=yield u.additionalPicks;if(d.isCancellationRequested)return;let T,x;Wy(u.picks)?(T=u.picks.items,x=u.picks.active):T=u.picks;let R,I;if(Wy(b)?(R=b.items,I=b.active):R=b,R.length>0||!m){let H;if(!x&&!I){let U=e.activeItems[0];U&&T.indexOf(U)!==-1&&(H=U)}f({items:[...T,...R],active:x||I||H})}}finally{d.isCancellationRequested||(e.busy=!1),g=!0}}))()])}else if(!(u instanceof Promise))f(u);else{e.busy=!0;try{let m=yield u;if(d.isCancellationRequested)return;f(m)}finally{d.isCancellationRequested||(e.busy=!1)}}});return n.add(e.onDidChangeValue(()=>s())),s(),n.add(e.onDidAccept(l=>{let[d]=e.selectedItems;typeof(d==null?void 0:d.accept)=="function"&&(l.inBackground||e.hide(),d.accept(e.keyMods,l))})),n.add(e.onDidTriggerItemButton(({button:l,item:d})=>Sm(this,void 0,void 0,function*(){var c,u;if(typeof d.trigger=="function"){let f=(u=(c=d.buttons)===null||c===void 0?void 0:c.indexOf(l))!==null&&u!==void 0?u:-1;if(f>=0){let m=d.trigger(f,e.keyMods),g=typeof m=="number"?m:yield m;if(t.isCancellationRequested)return;switch(g){case Cl.NO_ACTION:break;case Cl.CLOSE_PICKER:e.hide();break;case Cl.REFRESH_PICKER:s();break;case Cl.REMOVE_ITEM:{let b=e.items.indexOf(d);if(b!==-1){let T=e.items.slice(),x=T.splice(b,1),R=e.activeItems.filter(H=>H!==x[0]),I=e.keepScrollPosition;e.keepScrollPosition=!0,e.items=T,R&&(e.activeItems=R),e.keepScrollPosition=I}break}}}}}))),n}};Ll.FAST_PICKS_RACE_DELAY=200;ec();var EL=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},rs=function(o,e){return function(t,r){e(t,r,o)}},SL=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},Dl=class Em extends Ll{constructor(e,t,r,n,i,a){super(Em.PREFIX,e);this.instantiationService=t,this.keybindingService=r,this.commandService=n,this.telemetryService=i,this.dialogService=a,this.commandsHistory=this._register(this.instantiationService.createInstance(ns)),this.options=e}_getPicks(e,t,r){return SL(this,void 0,void 0,function*(){let n=yield this.getCommandPicks(t,r);if(r.isCancellationRequested)return[];let i=[];for(let d of n){let c=kr(Em.WORD_FILTER(e,d.label)),u=d.commandAlias?kr(Em.WORD_FILTER(e,d.commandAlias)):void 0;c||u?(d.highlights={label:c,detail:this.options.showAlias?u:void 0},i.push(d)):e===d.commandId&&i.push(d)}let a=new Map;for(let d of i){let c=a.get(d.label);c?(d.description=d.commandId,c.description=c.commandId):a.set(d.label,d)}i.sort((d,c)=>{let u=this.commandsHistory.peek(d.commandId),f=this.commandsHistory.peek(c.commandId);return u&&f?u>f?-1:1:u?-1:f?1:d.label.localeCompare(c.label)});let s=[],l=!1;for(let d=0;d<i.length;d++){let c=i[d],u=this.keybindingService.lookupKeybinding(c.commandId),f=u?p("commandPickAriaLabelWithKeybinding","{0}, {1}",c.label,u.getAriaLabel()):c.label;d===0&&this.commandsHistory.peek(c.commandId)&&(s.push({type:"separator",label:p("recentlyUsed","recently used")}),l=!0),d!==0&&l&&!this.commandsHistory.peek(c.commandId)&&(s.push({type:"separator",label:p("morecCommands","other commands")}),l=!1),s.push(Object.assign(Object.assign({},c),{ariaLabel:f,detail:this.options.showAlias&&c.commandAlias!==c.label?c.commandAlias:void 0,keybinding:u,accept:()=>SL(this,void 0,void 0,function*(){this.commandsHistory.push(c.commandId),this.telemetryService.publicLog2("workbenchActionExecuted",{id:c.commandId,from:"quick open"});try{yield this.commandService.executeCommand(c.commandId)}catch(m){jn(m)||this.dialogService.show(Li.Error,p("canNotRun","Command '{0}' resulted in an error ({1})",c.label,Uy(m)))}})}))}return s})}};Dl.PREFIX=">";Dl.WORD_FILTER=W1(j1,K1,z1);Dl=EL([rs(1,le),rs(2,at),rs(3,ct),rs(4,Yn),rs(5,Gs)],Dl);var ns=class Dt extends F{constructor(e,t){super();this.storageService=e,this.configurationService=t,this.configuredCommandsHistoryLength=0,this.updateConfiguration(),this.load(),this.registerListeners()}registerListeners(){this._register(this.configurationService.onDidChangeConfiguration(()=>this.updateConfiguration()))}updateConfiguration(){this.configuredCommandsHistoryLength=Dt.getConfiguredCommandHistoryLength(this.configurationService),Dt.cache&&Dt.cache.limit!==this.configuredCommandsHistoryLength&&(Dt.cache.limit=this.configuredCommandsHistoryLength,Dt.saveState(this.storageService))}load(){let e=this.storageService.get(Dt.PREF_KEY_CACHE,0),t;if(e)try{t=JSON.parse(e)}catch(n){}let r=Dt.cache=new zn(this.configuredCommandsHistoryLength,1);if(t){let n;t.usesLRU?n=t.entries:n=t.entries.sort((i,a)=>i.value-a.value),n.forEach(i=>r.set(i.key,i.value))}Dt.counter=this.storageService.getNumber(Dt.PREF_KEY_COUNTER,0,Dt.counter)}push(e){!Dt.cache||(Dt.cache.set(e,Dt.counter++),Dt.saveState(this.storageService))}peek(e){var t;return(t=Dt.cache)===null||t===void 0?void 0:t.peek(e)}static saveState(e){if(!Dt.cache)return;let t={usesLRU:!0,entries:[]};Dt.cache.forEach((r,n)=>t.entries.push({key:n,value:r})),e.store(Dt.PREF_KEY_CACHE,JSON.stringify(t),0,0),e.store(Dt.PREF_KEY_COUNTER,Dt.counter,0,0)}static getConfiguredCommandHistoryLength(e){var t,r;let i=(r=(t=e.getValue().workbench)===null||t===void 0?void 0:t.commandPalette)===null||r===void 0?void 0:r.history;return typeof i=="number"?i:Dt.DEFAULT_COMMANDS_HISTORY_LENGTH}};ns.DEFAULT_COMMANDS_HISTORY_LENGTH=50;ns.PREF_KEY_CACHE="commandPalette.mru.cache";ns.PREF_KEY_COUNTER="commandPalette.mru.counter";ns.counter=1;ns=EL([rs(0,lr),rs(1,rt)],ns);var jy=class extends Dl{constructor(e,t,r,n,i,a){super(e,t,r,n,i,a)}getCodeEditorCommandPicks(){let e=this.activeTextEditorControl;if(!e)return[];let t=[];for(let r of e.getSupportedActions())t.push({commandId:r.id,commandAlias:r.alias,label:Y1(r.label)||r.id});return t}};Jt();He();qr();xt();ec();pe();Be();var cR=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},wl=function(o,e){return function(t,r){e(t,r,o)}},dR=function(o,e,t,r){function n(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function s(c){try{d(r.next(c))}catch(u){a(u)}}function l(c){try{d(r.throw(c))}catch(u){a(u)}}function d(c){c.done?i(c.value):n(c.value).then(s,l)}d((r=r.apply(o,e||[])).next())})},Zd=class extends jy{constructor(e,t,r,n,i,a){super({showAlias:!1},e,r,n,i,a);this.codeEditorService=t}get activeTextEditorControl(){return kr(this.codeEditorService.getFocusedCodeEditor())}getCommandPicks(){return dR(this,void 0,void 0,function*(){return this.getCodeEditorCommandPicks()})}};Zd=cR([wl(0,le),wl(1,Ue),wl(2,at),wl(3,ct),wl(4,Yn),wl(5,Gs)],Zd);ln.as(ei.Quickaccess).registerQuickAccessProvider({ctor:Zd,prefix:Zd.PREFIX,helpEntries:[{description:ch.quickCommandHelp,needsEditor:!0}]});var TL=class extends M{constructor(){super({id:"editor.action.quickCommand",label:ch.quickCommandActionLabel,alias:"Command Palette",precondition:void 0,kbOpts:{kbExpr:v.focus,primary:59,weight:100},contextMenuOpts:{group:"z_commands",order:1}})}run(e){e.get(Vr).quickAccess.show(Zd.PREFIX)}};D(TL);pe();Er();wn();Le();He();var uR=function(o,e,t,r){var n=arguments.length,i=n<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,e,t,r);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(i=(n<3?a(i):n>3?a(e,t,i):a(e,t))||i);return n>3&&i&&Object.defineProperty(e,t,i),i},Al=function(o,e){return function(t,r){e(t,r,o)}},zy=class extends ri{constructor(e,t,r,n,i,a,s){super(!0,e,t,r,n,i,a,s)}};zy=uR([Al(1,re),Al(2,Ue),Al(3,$e),Al(4,le),Al(5,lr),Al(6,rt)],zy);Q(ri.ID,zy);pe();gS();Sa();var xL=class extends M{constructor(){super({id:"editor.action.toggleHighContrast",label:H1.toggleHighContrast,alias:"Toggle High Contrast Theme",precondition:void 0});this._originalThemeName=null}run(e,t){let r=e.get(Ep);this._originalThemeName?(r.setTheme(this._originalThemeName),this._originalThemeName=null):(this._originalThemeName=r.getColorTheme().themeName,r.setTheme("hc-black"))}};D(xL);var CL="data:text/plain;charset=utf-8;base64,";var LL="data:text/plain;charset=utf-8;base64,Ly8gRXhwb3NlIGBKU1hgIG5hbWVzcGFjZSBpbiBgZ2xvYmFsYCBuYW1lc3BhY2UKaW1wb3J0ICcuLyc7Cg==";var DL="data:text/plain;charset=utf-8;base64,Ly8gRXhwb3NlIGBKU1hgIG5hbWVzcGFjZSBpbiBgZ2xvYmFsYCBuYW1lc3BhY2UKaW1wb3J0ICcuLyc7Cg==";var wL="data:text/plain;charset=utf-8;base64,LyoqCiAqIFRoZXNlIGFyZSB0eXBlcyBmb3IgdGhpbmdzIHRoYXQgYXJlIHByZXNlbnQgaW4gdGhlIGBleHBlcmltZW50YWxgIGJ1aWxkcyBvZiBSZWFjdCBidXQgbm90IHlldAogKiBvbiBhIHN0YWJsZSBidWlsZC4KICoKICogT25jZSB0aGV5IGFyZSBwcm9tb3RlZCB0byBzdGFibGUgdGhleSBjYW4ganVzdCBiZSBtb3ZlZCB0byB0aGUgbWFpbiBpbmRleCBmaWxlLgogKgogKiBUbyBsb2FkIHRoZSB0eXBlcyBkZWNsYXJlZCBoZXJlIGluIGFuIGFjdHVhbCBwcm9qZWN0LCB0aGVyZSBhcmUgdGhyZWUgd2F5cy4gVGhlIGVhc2llc3Qgb25lLAogKiBpZiB5b3VyIGB0c2NvbmZpZy5qc29uYCBhbHJlYWR5IGhhcyBhIGAidHlwZXMiYCBhcnJheSBpbiB0aGUgYCJjb21waWxlck9wdGlvbnMiYCBzZWN0aW9uLAogKiBpcyB0byBhZGQgYCJyZWFjdC9leHBlcmltZW50YWwiYCB0byB0aGUgYCJ0eXBlcyJgIGFycmF5LgogKgogKiBBbHRlcm5hdGl2ZWx5LCBhIHNwZWNpZmljIGltcG9ydCBzeW50YXggY2FuIHRvIGJlIHVzZWQgZnJvbSBhIHR5cGVzY3JpcHQgZmlsZS4KICogVGhpcyBtb2R1bGUgZG9lcyBub3QgZXhpc3QgaW4gcmVhbGl0eSwgd2hpY2ggaXMgd2h5IHRoZSB7fSBpcyBpbXBvcnRhbnQ6CiAqCiAqIGBgYHRzCiAqIGltcG9ydCB7fSBmcm9tICdyZWFjdC9leHBlcmltZW50YWwnCiAqIGBgYAogKgogKiBJdCBpcyBhbHNvIHBvc3NpYmxlIHRvIGluY2x1ZGUgaXQgdGhyb3VnaCBhIHRyaXBsZS1zbGFzaCByZWZlcmVuY2U6CiAqCiAqIGBgYHRzCiAqIC8vLyA8cmVmZXJlbmNlIHR5cGVzPSJyZWFjdC9leHBlcmltZW50YWwiIC8+CiAqIGBgYAogKgogKiBFaXRoZXIgdGhlIGltcG9ydCBvciB0aGUgcmVmZXJlbmNlIG9ubHkgbmVlZHMgdG8gYXBwZWFyIG9uY2UsIGFueXdoZXJlIGluIHRoZSBwcm9qZWN0LgogKi8KCi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvYmxvYi9tYXN0ZXIvcGFja2FnZXMvcmVhY3Qvc3JjL1JlYWN0LmpzIHRvIHNlZSBob3cgdGhlIGV4cG9ydHMgYXJlIGRlY2xhcmVkLAovLyBhbmQgaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2Jsb2IvbWFzdGVyL3BhY2thZ2VzL3NoYXJlZC9SZWFjdEZlYXR1cmVGbGFncy5qcyB0byB2ZXJpZnkgd2hpY2ggQVBJcyBhcmUKLy8gZmxhZ2dlZCBleHBlcmltZW50YWwgb3Igbm90LiBFeHBlcmltZW50YWwgQVBJcyB3aWxsIGJlIHRhZ2dlZCB3aXRoIGBfX0VYUEVSSU1FTlRBTF9fYC4KLy8KLy8gRm9yIHRoZSBpbnB1dHMgb2YgdHlwZXMgZXhwb3J0ZWQgYXMgc2ltcGx5IGEgZmliZXIgdGFnLCB0aGUgYGJlZ2luV29ya2AgZnVuY3Rpb24gb2YgUmVhY3RGaWJlckJlZ2luV29yay5qcwovLyBpcyBhIGdvb2QgcGxhY2UgdG8gc3RhcnQgbG9va2luZyBmb3IgZGV0YWlsczsgaXQgZ2VuZXJhbGx5IGNhbGxzIHByb3AgdmFsaWRhdGlvbiBmdW5jdGlvbnMgb3IgZGVsZWdhdGVzCi8vIGFsbCB0YXNrcyBkb25lIGFzIHBhcnQgb2YgdGhlIHJlbmRlciBwaGFzZSAodGhlIGNvbmN1cnJlbnQgcGFydCBvZiB0aGUgUmVhY3QgdXBkYXRlIGN5Y2xlKS4KLy8KLy8gU3VzcGVuc2UtcmVsYXRlZCBoYW5kbGluZyBjYW4gYmUgZm91bmQgaW4gUmVhY3RGaWJlclRocm93LmpzLgoKaW1wb3J0IFJlYWN0ID0gcmVxdWlyZSgnLi9uZXh0Jyk7CgpleHBvcnQge307CgpkZWNsYXJlIG1vZHVsZSAnLicgewogICAgZXhwb3J0IHR5cGUgU3VzcGVuc2VMaXN0UmV2ZWFsT3JkZXIgPSAnZm9yd2FyZHMnIHwgJ2JhY2t3YXJkcycgfCAndG9nZXRoZXInOwogICAgZXhwb3J0IHR5cGUgU3VzcGVuc2VMaXN0VGFpbE1vZGUgPSAnY29sbGFwc2VkJyB8ICdoaWRkZW4nOwoKICAgIGV4cG9ydCBpbnRlcmZhY2UgU3VzcGVuc2VMaXN0Q29tbW9uUHJvcHMgewogICAgICAgIC8qKgogICAgICAgICAqIE5vdGUgdGhhdCBTdXNwZW5zZUxpc3QgcmVxdWlyZSBtb3JlIHRoYW4gb25lIGNoaWxkOwogICAgICAgICAqIGl0IGlzIGEgcnVudGltZSB3YXJuaW5nIHRvIHByb3ZpZGUgb25seSBhIHNpbmdsZSBjaGlsZC4KICAgICAgICAgKgogICAgICAgICAqIEl0IGRvZXMsIGhvd2V2ZXIsIGFsbG93IHRob3NlIGNoaWxkcmVuIHRvIGJlIHdyYXBwZWQgaW5zaWRlIGEgc2luZ2xlCiAgICAgICAgICogbGV2ZWwgb2YgYDxSZWFjdC5GcmFnbWVudD5gLgogICAgICAgICAqLwogICAgICAgIGNoaWxkcmVuOiBSZWFjdEVsZW1lbnQgfCBJdGVyYWJsZTxSZWFjdEVsZW1lbnQ+OwogICAgfQoKICAgIGludGVyZmFjZSBEaXJlY3Rpb25hbFN1c3BlbnNlTGlzdFByb3BzIGV4dGVuZHMgU3VzcGVuc2VMaXN0Q29tbW9uUHJvcHMgewogICAgICAgIC8qKgogICAgICAgICAqIERlZmluZXMgdGhlIG9yZGVyIGluIHdoaWNoIHRoZSBgU3VzcGVuc2VMaXN0YCBjaGlsZHJlbiBzaG91bGQgYmUgcmV2ZWFsZWQuCiAgICAgICAgICovCiAgICAgICAgcmV2ZWFsT3JkZXI6ICdmb3J3YXJkcycgfCAnYmFja3dhcmRzJzsKICAgICAgICAvKioKICAgICAgICAgKiBEaWN0YXRlcyBob3cgdW5sb2FkZWQgaXRlbXMgaW4gYSBTdXNwZW5zZUxpc3QgaXMgc2hvd24uCiAgICAgICAgICoKICAgICAgICAgKiAtIEJ5IGRlZmF1bHQsIGBTdXNwZW5zZUxpc3RgIHdpbGwgc2hvdyBhbGwgZmFsbGJhY2tzIGluIHRoZSBsaXN0LgogICAgICAgICAqIC0gYGNvbGxhcHNlZGAgc2hvd3Mgb25seSB0aGUgbmV4dCBmYWxsYmFjayBpbiB0aGUgbGlzdC4KICAgICAgICAgKiAtIGBoaWRkZW5gIGRvZXNu4oCZdCBzaG93IGFueSB1bmxvYWRlZCBpdGVtcy4KICAgICAgICAgKi8KICAgICAgICB0YWlsPzogU3VzcGVuc2VMaXN0VGFpbE1vZGUgfCB1bmRlZmluZWQ7CiAgICB9CgogICAgaW50ZXJmYWNlIE5vbkRpcmVjdGlvbmFsU3VzcGVuc2VMaXN0UHJvcHMgZXh0ZW5kcyBTdXNwZW5zZUxpc3RDb21tb25Qcm9wcyB7CiAgICAgICAgLyoqCiAgICAgICAgICogRGVmaW5lcyB0aGUgb3JkZXIgaW4gd2hpY2ggdGhlIGBTdXNwZW5zZUxpc3RgIGNoaWxkcmVuIHNob3VsZCBiZSByZXZlYWxlZC4KICAgICAgICAgKi8KICAgICAgICByZXZlYWxPcmRlcj86IEV4Y2x1ZGU8U3VzcGVuc2VMaXN0UmV2ZWFsT3JkZXIsIERpcmVjdGlvbmFsU3VzcGVuc2VMaXN0UHJvcHNbJ3JldmVhbE9yZGVyJ10+IHwgdW5kZWZpbmVkOwogICAgICAgIC8qKgogICAgICAgICAqIFRoZSB0YWlsIHByb3BlcnR5IGlzIGludmFsaWQgd2hlbiBub3QgdXNpbmcgdGhlIGBmb3J3YXJkc2Agb3IgYGJhY2t3YXJkc2AgcmV2ZWFsIG9yZGVycy4KICAgICAgICAgKi8KICAgICAgICB0YWlsPzogbmV2ZXIgfCB1bmRlZmluZWQ7CiAgICB9CgogICAgZXhwb3J0IHR5cGUgU3VzcGVuc2VMaXN0UHJvcHMgPSBEaXJlY3Rpb25hbFN1c3BlbnNlTGlzdFByb3BzIHwgTm9uRGlyZWN0aW9uYWxTdXNwZW5zZUxpc3RQcm9wczsKCiAgICAvKioKICAgICAqIGBTdXNwZW5zZUxpc3RgIGhlbHBzIGNvb3JkaW5hdGUgbWFueSBjb21wb25lbnRzIHRoYXQgY2FuIHN1c3BlbmQgYnkgb3JjaGVzdHJhdGluZyB0aGUgb3JkZXIKICAgICAqIGluIHdoaWNoIHRoZXNlIGNvbXBvbmVudHMgYXJlIHJldmVhbGVkIHRvIHRoZSB1c2VyLgogICAgICoKICAgICAqIFdoZW4gbXVsdGlwbGUgY29tcG9uZW50cyBuZWVkIHRvIGZldGNoIGRhdGEsIHRoaXMgZGF0YSBtYXkgYXJyaXZlIGluIGFuIHVucHJlZGljdGFibGUgb3JkZXIuCiAgICAgKiBIb3dldmVyLCBpZiB5b3Ugd3JhcCB0aGVzZSBpdGVtcyBpbiBhIGBTdXNwZW5zZUxpc3RgLCBSZWFjdCB3aWxsIG5vdCBzaG93IGFuIGl0ZW0gaW4gdGhlIGxpc3QKICAgICAqIHVudGlsIHByZXZpb3VzIGl0ZW1zIGhhdmUgYmVlbiBkaXNwbGF5ZWQgKHRoaXMgYmVoYXZpb3IgaXMgYWRqdXN0YWJsZSkuCiAgICAgKgogICAgICogQHNlZSBodHRwczovL3JlYWN0anMub3JnL2RvY3MvY29uY3VycmVudC1tb2RlLXJlZmVyZW5jZS5odG1sI3N1c3BlbnNlbGlzdAogICAgICogQHNlZSBodHRwczovL3JlYWN0anMub3JnL2RvY3MvY29uY3VycmVudC1tb2RlLXBhdHRlcm5zLmh0bWwjc3VzcGVuc2VsaXN0CiAgICAgKi8KICAgIGV4cG9ydCBjb25zdCBTdXNwZW5zZUxpc3Q6IEV4b3RpY0NvbXBvbmVudDxTdXNwZW5zZUxpc3RQcm9wcz47Cn0K";var AL="data:text/plain;charset=utf-8;base64,";var IL="data:text/plain;charset=utf-8;base64,Ly8gVHlwZSBkZWZpbml0aW9ucyBmb3IgcHJvcC10eXBlcyAxNS43Ci8vIFByb2plY3Q6IGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3Byb3AtdHlwZXMsIGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0Ci8vIERlZmluaXRpb25zIGJ5OiBEb3Z5ZGFzTmF2aWNrYXMgPGh0dHBzOi8vZ2l0aHViLmNvbS9Eb3Z5ZGFzTmF2aWNrYXM+Ci8vICAgICAgICAgICAgICAgICBGZXJkeSBCdWRoaWRoYXJtYSA8aHR0cHM6Ly9naXRodWIuY29tL2ZlcmRhYmVyPgovLyAgICAgICAgICAgICAgICAgU2ViYXN0aWFuIFNpbGJlcm1hbm4gPGh0dHBzOi8vZ2l0aHViLmNvbS9lcHMxbG9uPgovLyBEZWZpbml0aW9uczogaHR0cHM6Ly9naXRodWIuY29tL0RlZmluaXRlbHlUeXBlZC9EZWZpbml0ZWx5VHlwZWQKLy8gVHlwZVNjcmlwdCBWZXJzaW9uOiAyLjgKCmV4cG9ydCB0eXBlIFJlYWN0Q29tcG9uZW50TGlrZSA9CiAgICB8IHN0cmluZwogICAgfCAoKHByb3BzOiBhbnksIGNvbnRleHQ/OiBhbnkpID0+IGFueSkKICAgIHwgKG5ldyAocHJvcHM6IGFueSwgY29udGV4dD86IGFueSkgPT4gYW55KTsKCmV4cG9ydCBpbnRlcmZhY2UgUmVhY3RFbGVtZW50TGlrZSB7CiAgICB0eXBlOiBSZWFjdENvbXBvbmVudExpa2U7CiAgICBwcm9wczogYW55OwogICAga2V5OiBzdHJpbmcgfCBudW1iZXIgfCBudWxsOwp9CgpleHBvcnQgaW50ZXJmYWNlIFJlYWN0Tm9kZUFycmF5IGV4dGVuZHMgQXJyYXk8UmVhY3ROb2RlTGlrZT4ge30KCmV4cG9ydCB0eXBlIFJlYWN0Tm9kZUxpa2UgPQogICAgfCB7fQogICAgfCBSZWFjdEVsZW1lbnRMaWtlCiAgICB8IFJlYWN0Tm9kZUFycmF5CiAgICB8IHN0cmluZwogICAgfCBudW1iZXIKICAgIHwgYm9vbGVhbgogICAgfCBudWxsCiAgICB8IHVuZGVmaW5lZDsKCmV4cG9ydCBjb25zdCBub21pbmFsVHlwZUhhY2s6IHVuaXF1ZSBzeW1ib2w7CgpleHBvcnQgdHlwZSBJc09wdGlvbmFsPFQ+ID0gdW5kZWZpbmVkIGV4dGVuZHMgVCA/IHRydWUgOiBmYWxzZTsKCmV4cG9ydCB0eXBlIFJlcXVpcmVkS2V5czxWPiA9IHsgW0sgaW4ga2V5b2YgVl0tPzogRXhjbHVkZTxWW0tdLCB1bmRlZmluZWQ+IGV4dGVuZHMgVmFsaWRhdG9yPGluZmVyIFQ+ID8gSXNPcHRpb25hbDxUPiBleHRlbmRzIHRydWUgPyBuZXZlciA6IEsgOiBuZXZlciB9W2tleW9mIFZdOwpleHBvcnQgdHlwZSBPcHRpb25hbEtleXM8Vj4gPSBFeGNsdWRlPGtleW9mIFYsIFJlcXVpcmVkS2V5czxWPj47CmV4cG9ydCB0eXBlIEluZmVyUHJvcHNJbm5lcjxWPiA9IHsgW0sgaW4ga2V5b2YgVl0tPzogSW5mZXJUeXBlPFZbS10+OyB9OwoKZXhwb3J0IGludGVyZmFjZSBWYWxpZGF0b3I8VD4gewogICAgKHByb3BzOiB7IFtrZXk6IHN0cmluZ106IGFueSB9LCBwcm9wTmFtZTogc3RyaW5nLCBjb21wb25lbnROYW1lOiBzdHJpbmcsIGxvY2F0aW9uOiBzdHJpbmcsIHByb3BGdWxsTmFtZTogc3RyaW5nKTogRXJyb3IgfCBudWxsOwogICAgW25vbWluYWxUeXBlSGFja10/OiB7CiAgICAgICAgdHlwZTogVDsKICAgIH0gfCB1bmRlZmluZWQ7Cn0KCmV4cG9ydCBpbnRlcmZhY2UgUmVxdWlyZWFibGU8VD4gZXh0ZW5kcyBWYWxpZGF0b3I8VCB8IHVuZGVmaW5lZCB8IG51bGw+IHsKICAgIGlzUmVxdWlyZWQ6IFZhbGlkYXRvcjxOb25OdWxsYWJsZTxUPj47Cn0KCmV4cG9ydCB0eXBlIFZhbGlkYXRpb25NYXA8VD4gPSB7IFtLIGluIGtleW9mIFRdPzogVmFsaWRhdG9yPFRbS10+IH07CgpleHBvcnQgdHlwZSBJbmZlclR5cGU8Vj4gPSBWIGV4dGVuZHMgVmFsaWRhdG9yPGluZmVyIFQ+ID8gVCA6IGFueTsKZXhwb3J0IHR5cGUgSW5mZXJQcm9wczxWPiA9CiAgICAmIEluZmVyUHJvcHNJbm5lcjxQaWNrPFYsIFJlcXVpcmVkS2V5czxWPj4+CiAgICAmIFBhcnRpYWw8SW5mZXJQcm9wc0lubmVyPFBpY2s8ViwgT3B0aW9uYWxLZXlzPFY+Pj4+OwoKZXhwb3J0IGNvbnN0IGFueTogUmVxdWlyZWFibGU8YW55PjsKZXhwb3J0IGNvbnN0IGFycmF5OiBSZXF1aXJlYWJsZTxhbnlbXT47CmV4cG9ydCBjb25zdCBib29sOiBSZXF1aXJlYWJsZTxib29sZWFuPjsKZXhwb3J0IGNvbnN0IGZ1bmM6IFJlcXVpcmVhYmxlPCguLi5hcmdzOiBhbnlbXSkgPT4gYW55PjsKZXhwb3J0IGNvbnN0IG51bWJlcjogUmVxdWlyZWFibGU8bnVtYmVyPjsKZXhwb3J0IGNvbnN0IG9iamVjdDogUmVxdWlyZWFibGU8b2JqZWN0PjsKZXhwb3J0IGNvbnN0IHN0cmluZzogUmVxdWlyZWFibGU8c3RyaW5nPjsKZXhwb3J0IGNvbnN0IG5vZGU6IFJlcXVpcmVhYmxlPFJlYWN0Tm9kZUxpa2U+OwpleHBvcnQgY29uc3QgZWxlbWVudDogUmVxdWlyZWFibGU8UmVhY3RFbGVtZW50TGlrZT47CmV4cG9ydCBjb25zdCBzeW1ib2w6IFJlcXVpcmVhYmxlPHN5bWJvbD47CmV4cG9ydCBjb25zdCBlbGVtZW50VHlwZTogUmVxdWlyZWFibGU8UmVhY3RDb21wb25lbnRMaWtlPjsKZXhwb3J0IGZ1bmN0aW9uIGluc3RhbmNlT2Y8VD4oZXhwZWN0ZWRDbGFzczogbmV3ICguLi5hcmdzOiBhbnlbXSkgPT4gVCk6IFJlcXVpcmVhYmxlPFQ+OwpleHBvcnQgZnVuY3Rpb24gb25lT2Y8VD4odHlwZXM6IFJlYWRvbmx5QXJyYXk8VD4pOiBSZXF1aXJlYWJsZTxUPjsKZXhwb3J0IGZ1bmN0aW9uIG9uZU9mVHlwZTxUIGV4dGVuZHMgVmFsaWRhdG9yPGFueT4+KHR5cGVzOiBUW10pOiBSZXF1aXJlYWJsZTxOb25OdWxsYWJsZTxJbmZlclR5cGU8VD4+PjsKZXhwb3J0IGZ1bmN0aW9uIGFycmF5T2Y8VD4odHlwZTogVmFsaWRhdG9yPFQ+KTogUmVxdWlyZWFibGU8VFtdPjsKZXhwb3J0IGZ1bmN0aW9uIG9iamVjdE9mPFQ+KHR5cGU6IFZhbGlkYXRvcjxUPik6IFJlcXVpcmVhYmxlPHsgW0sgaW4ga2V5b2YgYW55XTogVDsgfT47CmV4cG9ydCBmdW5jdGlvbiBzaGFwZTxQIGV4dGVuZHMgVmFsaWRhdGlvbk1hcDxhbnk+Pih0eXBlOiBQKTogUmVxdWlyZWFibGU8SW5mZXJQcm9wczxQPj47CmV4cG9ydCBmdW5jdGlvbiBleGFjdDxQIGV4dGVuZHMgVmFsaWRhdGlvbk1hcDxhbnk+Pih0eXBlOiBQKTogUmVxdWlyZWFibGU8UmVxdWlyZWQ8SW5mZXJQcm9wczxQPj4+OwoKLyoqCiAqIEFzc2VydCB0aGF0IHRoZSB2YWx1ZXMgbWF0Y2ggd2l0aCB0aGUgdHlwZSBzcGVjcy4KICogRXJyb3IgbWVzc2FnZXMgYXJlIG1lbW9yaXplZCBhbmQgd2lsbCBvbmx5IGJlIHNob3duIG9uY2UuCiAqCiAqIEBwYXJhbSB0eXBlU3BlY3MgTWFwIG9mIG5hbWUgdG8gYSBSZWFjdFByb3BUeXBlCiAqIEBwYXJhbSB2YWx1ZXMgUnVudGltZSB2YWx1ZXMgdGhhdCBuZWVkIHRvIGJlIHR5cGUtY2hlY2tlZAogKiBAcGFyYW0gbG9jYXRpb24gZS5nLiAicHJvcCIsICJjb250ZXh0IiwgImNoaWxkIGNvbnRleHQiCiAqIEBwYXJhbSBjb21wb25lbnROYW1lIE5hbWUgb2YgdGhlIGNvbXBvbmVudCBmb3IgZXJyb3IgbWVzc2FnZXMKICogQHBhcmFtIGdldFN0YWNrIFJldHVybnMgdGhlIGNvbXBvbmVudCBzdGFjawogKi8KZXhwb3J0IGZ1bmN0aW9uIGNoZWNrUHJvcFR5cGVzKHR5cGVTcGVjczogYW55LCB2YWx1ZXM6IGFueSwgbG9jYXRpb246IHN0cmluZywgY29tcG9uZW50TmFtZTogc3RyaW5nLCBnZXRTdGFjaz86ICgpID0+IGFueSk6IHZvaWQ7CgovKioKICogT25seSBhdmFpbGFibGUgaWYgTk9ERV9FTlY9cHJvZHVjdGlvbgogKi8KZXhwb3J0IGZ1bmN0aW9uIHJlc2V0V2FybmluZ0NhY2hlKCk6IHZvaWQ7Cg==";var kL="data:text/plain;charset=utf-8;base64,";var NL="data:text/plain;charset=utf-8;base64,";var RL={reactDts:CL,jsxDevRuntimeDts:DL,jsxRuntimeDts:LL,reactExpDts:wL,globalDts:AL,propTypesDts:IL,cssTypeDts:kL,framerDts:NL};var PL="../ts.worker-5TZYK77V.workerJS";var ML="../editor.worker-XZDM3OUB.workerJS";function qy(o,e=1,t={}){let{indent:r=" ",includeEmptyLines:n=!1}=t;if(typeof o!="string")throw new TypeError(`Expected \`input\` to be a \`string\`, got \`${typeof o}\``);if(typeof e!="number")throw new TypeError(`Expected \`count\` to be a \`number\`, got \`${typeof e}\``);if(e<0)throw new RangeError(`Expected \`count\` to be at least 0, got \`${e}\``);if(typeof r!="string")throw new TypeError(`Expected \`options.indent\` to be a \`string\`, got \`${typeof r}\``);if(e===0)return o;let i=n?/^/gm:/^(?!\s*$)/gm;return o.replace(i,r.repeat(e))}var Xy=Ya(OL(),1);function Jy(o){if(typeof o!="string")throw new TypeError("Expected a string");return o.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")}var FL=/\s+at.*[(\s](.*)\)?/,ER=/^(?:(?:(?:node|node:[\w/]+|(?:(?:node:)?internal\/[\w/]*|.*node_modules\/(?:babel-polyfill|pirates)\/.*)?\w+)(?:\.js)?:\d+:\d+)|native)/,TR=typeof Xy.default.homedir=="undefined"?"":Xy.default.homedir().replace(/\\/g,"/");function Yy(o,{pretty:e=!1,basePath:t}={}){let r=t&&new RegExp(`(at | \\()${Jy(t.replace(/\\/g,"/"))}`,"g");if(typeof o=="string")return o.replace(/\\/g,"/").split(`
`).filter(n=>{let i=n.match(FL);if(i===null||!i[1])return!0;let a=i[1];return a.includes(".app/Contents/Resources/electron.asar")||a.includes(".app/Contents/Resources/default_app.asar")?!1:!ER.test(a)}).filter(n=>n.trim()!=="").map(n=>(r&&(n=n.replace(r,"$1")),e&&(n=n.replace(FL,(i,a)=>i.replace(a,a.replace(TR,"~")))),n)).join(`
`)}var xR=o=>o.replace(/\s+at .*aggregate-error\/index.js:\d+:\d+\)?/g,""),eu,Tm=class extends Error{constructor(e){if(!Array.isArray(e))throw new TypeError(`Expected input to be an Array, got ${typeof e}`);e=e.map(r=>r instanceof Error?r:r!==null&&typeof r=="object"?Object.assign(new Error(r.message),r):new Error(r));let t=e.map(r=>typeof r.stack=="string"?xR(Yy(r.stack)):String(r)).join(`
`);t=`
`+qy(t,4);super(t);nv(this,eu,void 0);vt(this,"name","AggregateError");iv(this,eu,e)}get errors(){return rv(this,eu).slice()}};eu=new WeakMap;async function $y(o,e,{concurrency:t=Number.POSITIVE_INFINITY,stopOnError:r=!0}={}){return new Promise((n,i)=>{if(o[Symbol.iterator]===void 0&&o[Symbol.asyncIterator]===void 0)throw new TypeError(`Expected \`input\` to be either an \`Iterable\` or \`AsyncIterable\`, got (${typeof o})`);if(typeof e!="function")throw new TypeError("Mapper function is required");if(!((Number.isSafeInteger(t)||t===Number.POSITIVE_INFINITY)&&t>=1))throw new TypeError(`Expected \`concurrency\` to be an integer from 1 and up or \`Infinity\`, got \`${t}\` (${typeof t})`);let a=[],s=[],l=new Map,d=!1,c=!1,u=!1,f=0,m=0,g=o[Symbol.iterator]===void 0?o[Symbol.asyncIterator]():o[Symbol.iterator](),b=x=>{d=!0,c=!0,i(x)},T=async()=>{if(c)return;let x=await g.next(),R=m;if(m++,x.done){if(u=!0,f===0&&!c){if(!r&&s.length>0){b(new Tm(s));return}if(c=!0,!l.size){n(a);return}let I=[];for(let[H,U]of a.entries())l.get(H)!==GL&&I.push(U);n(I)}return}f++,(async()=>{try{let I=await x.value;if(c)return;let H=await e(I,R);H===GL&&l.set(R,H),a[R]=H,f--,await T()}catch(I){if(r)b(I);else{s.push(I),f--;try{await T()}catch(H){b(H)}}}})()};(async()=>{for(let x=0;x<t;x++){try{await T()}catch(R){b(R);break}if(u||d)break}})()})}var GL=Symbol("skip");async function Qy(o,e){return $y(o,t=>t(),e)}var{reactDts:CR,jsxDevRuntimeDts:LR,jsxRuntimeDts:DR,reactExpDts:wR,globalDts:AR,propTypesDts:IR,cssTypeDts:kR,framerDts:NR}=RL;self.MonacoEnvironment={getWorkerUrl:function(o,e){return e==="typescript"||e==="javascript"?PL:ML}};var BL=!1,Wue=async({code:o,container:e})=>{if(console.log("monaco-editor"),!BL)BL=!0;else return;let t=e.attachShadow({mode:"open"}),r=document.createElement("div");t.appendChild(r),r.style.width="100%",r.style.height="100%";let n=document.createElement("style");n.innerText=` @font-face {
    font-family: codicon;
    font-display: block;
    src: url(./base/browser/ui/codicons/codicon/codicon.ttf) format("truetype");
}`,document.head.appendChild(n);let i=document.createElement("style");i.innerText=`@import url("dist/starter.css");
  @font-face {
    font-family: codicon;
    font-display: block;
    src: url(./base/browser/ui/codicons/codicon/codicon.ttf) format("truetype");
}
  
  `,t.appendChild(i),In.typescript.typescriptDefaults.setCompilerOptions({target:In.typescript.ScriptTarget.ES5,lib:["dom","dom.iterable","esnext"],allowJs:!0,skipLibCheck:!0,esModuleInterop:!0,allowSyntheticDefaultImports:!0,strict:!0,forceConsistentCasingInFileNames:!0,noFallthroughCasesInSwitch:!0,resolveJsonModule:!0,isolatedModules:!0,noEmit:!0,allowNonTsExtensions:!0,moduleResolution:In.typescript.ModuleResolutionKind.NodeJs,declaration:!1,module:In.typescript.ModuleKind.ESNext,noEmitOnError:!0,maxNodeModuleJsDepth:10,jsxImportSource:"@emotion/react",jsx:In.typescript.JsxEmit.ReactJSX,allowUmdGlobalAccess:!0}),In.typescript.typescriptDefaults.setDiagnosticsOptions({noSuggestionDiagnostics:!0,noSemanticValidation:!0,noSyntaxValidation:!0});let a=Lp.create(r,{model:Lp.createModel(o,"typescript",yh.parse("file:///app/index.tsx")),language:"typescript",useShadowDOM:!1,theme:"vs-dark",autoClosingBrackets:"languageDefined"});return window.addEventListener("resize",()=>{a.layout()}),(async()=>{let l=[{name:"react",url:CR,depend:["global","csstype","prop-types"]},{name:"react/jsx-runtime",url:DR,depend:["global","csstype","prop-types"]},{name:"react/jsx-dev-runtime",url:LR,depend:["global","csstype","prop-types"]},{name:"react-exp",url:wR,depend:[]},{name:"global",url:AR,depend:[]},{name:"prop-types",url:IR,depend:[]},{name:"csstype",url:kR,depend:[]},{name:"@emotion/base",url:"https://unpkg.com/@emotion/styled@11.6.0/types/base.d.ts",depend:["@emotion/react","@emotion/serialize","react"]},{name:"@emotion/styled",url:"https://unpkg.com/@emotion/styled@11.6.0/types/index.d.ts",depend:["@emotion/react","@emotion/serialize","react"]},{name:"@emotion/cache",url:"https://unpkg.com/@emotion/cache@11.6.0/types/index.d.ts",depend:["@emotion/utils"]},{name:"@emotion/react",url:"https://unpkg.com/@emotion/react@11.7.1/types/index.d.ts",depend:["@emotion/cache"]},{name:"@emotion/react/jsx-runtime",url:"https://unpkg.com/@emotion/react@11.7.1/types/jsx-runtime.d.ts",depend:["@emotion/cache"]},{name:"@emotion/react/jsx-dev-runtime",url:"https://unpkg.com/@emotion/react@11.7.1/types/jsx-dev-runtime.d.ts",depend:["@emotion/cache"]},{name:"@emotion/react/jsx-namespace",url:"https://unpkg.com/@emotion/react@11.7.1/types/jsx-namespace.d.ts",depend:["@emotion/utils","type"]},{name:"@emotion/react/theming",url:"https://unpkg.com/@emotion/react@11.7.1/types/theming.d.ts",depend:["@emotion/utils","type"]},{name:"@emotion/react/css-prop",url:"https://unpkg.com/@emotion/react@11.7.1/types/css-prop.d.ts",depend:["@emotion/utils","type"]},{name:"@emotion/react/helper",url:"https://unpkg.com/@emotion/react@11.7.1/types/helper.d.ts",depend:["@emotion/utils","type"]},{name:"@emotion/react/css-prop",url:"https://unpkg.com/@emotion/react@11.7.1/types/css-prop.d.ts",depend:["@emotion/utils","csstype"]},{name:"@emotion/react/helper",url:"https://unpkg.com/@emotion/react@11.7.1/types/helper.d.ts",depend:["@emotion/utils","csstype"]},{name:"@emotion/theming",url:"https://unpkg.com/@emotion/react@11.7.1/types/theming.d.ts",depend:["@emotion/utils","csstype"]},{name:"@emotion/serialize",url:"https://unpkg.com/@emotion/serialize@1.0.2/types/index.d.ts",depend:["@emotion/utils","csstype"]},{name:"@emotion/utils",url:"https://unpkg.com/@emotion/utils@1.0.0/types/index.d.ts",depend:[]},{name:"framer-motion",url:NR,depend:["popmotion"]},{name:"popmotion",url:"https://unpkg.com/popmotion@11.0.3/lib/index.d.ts"}].map(({name:d,url:c})=>async()=>In.typescript.typescriptDefaults.addExtraLib(await(await fetch(c)).text(),`file:///node_modules/${d}/index.d.ts`));await Qy(l,{concurrency:2}),In.typescript.typescriptDefaults.setEagerModelSync(!0),In.typescript.typescriptDefaults.setDiagnosticsOptions({noSuggestionDiagnostics:!1,noSemanticValidation:!1,noSyntaxValidation:!1})})(),{editor:a,monaco:tv({},Ky)}};export{Wue as startMonaco};
/*! @license DOMPurify 2.3.1 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.3.1/LICENSE */
/*!-----------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)
 * Released under the MIT license
 * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt
 *-----------------------------------------------------------------------------*/
