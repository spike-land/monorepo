import{a as F}from"./chunk-CWAIQPIX.mjs";import{a as v,b as E,g as q}from"./chunk-R25N5FFR.mjs";var _=q(F()),L=!1,O=[],G=window.location.hostname||"spike.land",x="",T="",m="",f="",I=0,b=0,a=null,j,u=!1,p=null;var l=null,R=()=>l.session.get("state"),N=null;setInterval(()=>{Date.now()-b>4e4?(u=!1,S()):console.log("no_need_to_rejoin")},3e4);var P=async(e,t)=>{if(!!e&&!(t<window.sess.i)&&e!==window.sess.code)try{window.sess&&window.sess.editor?window.sess.editor.getModel().setValue(e):window.sess.update(e)}catch(n){console.error({e:n})}};async function S(){if(!u||a===null){a=null;let e=Date.now()-j;return e<1e4&&await new Promise(t=>setTimeout(t,1e4-e)),a||(a=await V(),a)}return a}var X=(0,_.default)(B,100);async function B(e){let{i:t,code:n,transpiled:h,html:g,css:C}=e;if((async()=>{try{if(p){let s=R().toJSON();s.html=g,s.css=C,s.transpiled=h,s.code=n,s.i=t;let r=T?l.createPatchFromHashCode(T,s):l.createPatch(s);r&&r.patch!==""&&p.send(r)}}catch(s){console.error("Error sending RTC...",{e:s})}})(),a){let s=Date.now(),r=R().toJSON();r.html=g,r.css=C,r.transpiled=h,r.code=n,r.i=t;let w=x?l.createPatchFromHashCode(x,r):l.createPatch(r);if(!w)return;let y=JSON.stringify(E(v({},w),{name:f}));w.patch!==""&&currentWebSocket.send(y)}else u=!1,await S()}var V=async(e,t,n)=>{if(m=m||e||"code-main",window.room=e,t&&(f=t),a!==null)return a;u=!0;let g=await(await fetch(`https://spike.land/api/room/${m}/session`)).json(),{startSession:C}=await import("./session-BO4AL4K3.mjs");if(l=l||await C(m,{name:f,room:m,state:g,events:[]}),window.mySession=l,!n&&!window.sess){let s=E(v({},R().toJSON()),{setChild:()=>{},changes:[],children:[globalThis.App],errorText:""}),r=(await import("./throttle-UJQ536PU.mjs")).default,w=location.pathname.endsWith("public"),{quickStart:y}=await import("./quickStart-DAMRQKDZ.mjs");y(s,m,w),window.sess=s}L||(L=!0,setTimeout(()=>{L=!1},1e4),a=new WebSocket("wss://"+G+"/api/room/"+m+"/websocket"),u=!1,j=Date.now(),a.addEventListener("open",()=>(N?clearInterval(N):N=setInterval(()=>{let s=Date.now(),r=s-b;if(s-b>3e4)try{a.send(JSON.stringify({name:f,time:I+r}))}catch(w){u=!1,S()}},3e4),a.send(JSON.stringify({name:f})),a)),a.addEventListener("message",s=>J(s,"ws")),a.addEventListener("close",s=>{console.log("WebSocket closed, reconnecting:",s.code,s.reason),u=!1,S()}),a.addEventListener("error",s=>{console.log("WebSocket error, reconnecting:",s),u=!1,S()}))},H=window.location.hostname;H||(H="localhost");c("Hostname: "+H);var o={};function c(e){let t=new Date;console.log("["+t.toLocaleTimeString()+"] "+e)}function z(e){let t=new Date;console.trace("["+t.toLocaleTimeString()+"] "+e)}var W={iceServers:["stun3.l.google.com:19302"].map(e=>({urls:`stun:${e}`}))};W.iceServers=[{urls:"stun:stun.stunprotocol.org:3478"},{urls:"stun:stun.l.google.com:19302"}];async function A(e){if(c(`Setting up a connection with ${e}`),o[e]){c(`Aborting, since we have connection with this ${e}`);return}o[e]=new RTCPeerConnection(W),o[e].onicecandidate=r,o[e].oniceconnectionstatechange=w,o[e].onicegatheringstatechange=M,o[e].onsignalingstatechange=y,o[e].onnegotiationneeded=C,o[e].ontrack=s,o[e].addEventListener("datachannel",h);let t={ordered:!0,reliable:!0,maxPacketLifeTime:3e3},n=o[e].createDataChannel(e,t);return n.binaryType="arraybuffer",n.addEventListener("message",i=>{console.log("***********RTC***",{msg:i});let d=JSON.parse(i.data);return d&&d.hashCode&&(T=d.hashCode),d&&d.newHash&&(T=d.newHash),J(i,"rtc")}),n.addEventListener("error",i=>{console.log("xxxxxx-  Data Channel Error:",i)}),n.addEventListener("open",()=>{console.log("@@@@@@@@RTC IS OPEN&&&&&&&&"),n.target=e,O.push(n),o[e].sendChannel=n,p=p={send:i=>{let d=i.target,D=JSON.stringify(E(v({},i),{name:i.name||f}));O.map(k=>{try{if(k.readyState!=="open")return;(!d||k.target===d)&&k.send(D)}catch($){console.error("Error in broadcasting event",{e:$})}})}}}),n.addEventListener("close",()=>{console.log("xxxxxxxx- The Data Channel is Closed")}),o[e];function h(i){console.log("Receive Channel Callback");let d=i.channel;d.binaryType="arraybuffer",d.addEventListener("close",g),d.addEventListener("message",D=>J(D,"rtc")),O.push(d)}function g(){console.log("Receive channel is closed"),o[e].close(),o[e]=null,console.log("Closed remote peer connection")}async function C(){c("*** Negotiation needed");try{c("---> Creating offer");let i=await o[e].createOffer();if(o[e].signalingState!="stable"){c("     -- The connection isn't stable yet; postponing...");return}c("---> Setting local description to the offer"),await o[e].setLocalDescription(i),c("---> Sending the offer to the remote peer"),a.send(JSON.stringify({target:e,name:f,type:"offer",sdp:o[e].localDescription}))}catch(i){c("*** The following error occurred while handling the negotiationneeded event:")}}function s(i){c("*** Track event"),document.querySelector("#received_video").srcObject=i.streams[0],document.querySelector("#hangup-button").disabled=!1}function r(i){i.candidate&&(c("*** Outgoing ICE candidate: "+i.candidate),a.send(JSON.stringify({type:"new-ice-candidate",target:e,name:f,candidate:i.candidate})))}function w(){switch(c("*** ICE connection state changed to "+o[e].iceConnectionState),o[e].iceConnectionState){case"closed":case"failed":case"disconnected":break}}function y(){switch(c("*** connections[target].signalingState  changed to: "+o[e].signalingState),o[e].signalingState){case"closed":break}}function M(){c("*** connections[target].iceGatheringState changed to: "+o[e].iceGatheringState)}}async function K(e,t){c("*** Adding received ICE candidate: "+JSON.stringify(e.candidate));let n=new RTCIceCandidate(e.candidate);console.log(o[t]),await o[t].addIceCandidate(n)}async function Q(e,t){c("*** Call recipient has accepted our call");let n=new RTCSessionDescription(e.sdp);await o[t].setRemoteDescription(n).catch(console.error)}async function U(e,t){if(o[t]||await A(t),!e.sdp)return;let n=new RTCSessionDescription(e.sdp);if(o[t].signalingState!="stable"){c("  - But the signaling state isn't stable, so triggering rollback"),await Promise.all([o[t].setLocalDescription({type:"rollback"}),o[t].setRemoteDescription(n)]);return}c("  - Setting remote description"),await o[t].setRemoteDescription(n),c("---> Creating and sending answer to caller"),await o[t].setLocalDescription(await o[t].createAnswer());let h=a||await S();h!==null&&h.send(JSON.stringify({target:t,name:f,type:"answer",sdp:o[t].localDescription}))}async function J(e,t){console.log(t,{event:e}),b=Date.now();let n=JSON.parse(e.data);if(n.name&&n.name!==f&&!o[n.name])try{await A(n.name)}catch(h){console.log({e:h}),z("Error with p2p")}if(console.log(t,n.name),n.type==="new-ice-candidate"){await K(n,n.name);return}if(n.type==="offer"){await U(n,n.name);return}if(n.type==="answer"){await Q(n,n.name);return}if(t==="ws"&&n.hashCode&&(x=n.hashCode),n.patch&&t==="ws"||n.name!==f){if(n.newHash===l.hashCode())return;if(n.oldHash===l.hashCode()){l.applyPatch(n),P(l.session.get("state").code,l.session.get("state").i),p&&p.send({hashCode:n.newHash});return}if(n.newHash===l.hashCode())return;if(n.code&&n.transpiled){let h=l.createPatch(n);l.applyPatch(h),P(n.code,n.i),p&&p.send({hashCode:h.newHash});return}return}n.timestamp&&(b=Date.now(),I=n.timestamp),n.name!==f&&(I=n.timestamp)}export{V as join,X as saveCode};
