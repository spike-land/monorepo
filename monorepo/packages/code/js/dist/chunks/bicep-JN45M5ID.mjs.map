{
  "version": 3,
  "sources": ["../../../../../node_modules/monaco-editor/esm/vs/basic-languages/bicep/bicep.js"],
  "sourcesContent": ["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.1(337587859b1c171314b40503171188b6cea6a32a)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/bicep/bicep.ts\nvar bounded = (text) => `\\\\b${text}\\\\b`;\nvar identifierStart = \"[_a-zA-Z]\";\nvar identifierContinue = \"[_a-zA-Z0-9]\";\nvar identifier = bounded(`${identifierStart}${identifierContinue}*`);\nvar keywords = [\n  \"targetScope\",\n  \"resource\",\n  \"module\",\n  \"param\",\n  \"var\",\n  \"output\",\n  \"for\",\n  \"in\",\n  \"if\",\n  \"existing\"\n];\nvar namedLiterals = [\"true\", \"false\", \"null\"];\nvar nonCommentWs = `[ \\\\t\\\\r\\\\n]`;\nvar numericLiteral = `[0-9]+`;\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"'\", close: \"'\" },\n    { open: \"'''\", close: \"'''\" }\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] },\n    { open: \"'''\", close: \"'''\", notIn: [\"string\", \"comment\"] }\n  ],\n  autoCloseBefore: \":.,=}])' \\n\t\",\n  indentationRules: {\n    increaseIndentPattern: new RegExp(\"^((?!\\\\/\\\\/).)*(\\\\{[^}\\\"'`]*|\\\\([^)\\\"'`]*|\\\\[[^\\\\]\\\"'`]*)$\"),\n    decreaseIndentPattern: new RegExp(\"^((?!.*?\\\\/\\\\*).*\\\\*/)?\\\\s*[\\\\}\\\\]].*$\")\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".bicep\",\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\n  ],\n  symbols: /[=><!~?:&|+\\-*/^%]+/,\n  keywords,\n  namedLiterals,\n  escapes: `\\\\\\\\(u{[0-9A-Fa-f]+}|n|r|t|\\\\\\\\|'|\\\\\\${)`,\n  tokenizer: {\n    root: [{ include: \"@expression\" }, { include: \"@whitespace\" }],\n    stringVerbatim: [\n      { regex: `(|'|'')[^']`, action: { token: \"string\" } },\n      { regex: `'''`, action: { token: \"string.quote\", next: \"@pop\" } }\n    ],\n    stringLiteral: [\n      { regex: `\\\\\\${`, action: { token: \"delimiter.bracket\", next: \"@bracketCounting\" } },\n      { regex: `[^\\\\\\\\'$]+`, action: { token: \"string\" } },\n      { regex: \"@escapes\", action: { token: \"string.escape\" } },\n      { regex: `\\\\\\\\.`, action: { token: \"string.escape.invalid\" } },\n      { regex: `'`, action: { token: \"string\", next: \"@pop\" } }\n    ],\n    bracketCounting: [\n      { regex: `{`, action: { token: \"delimiter.bracket\", next: \"@bracketCounting\" } },\n      { regex: `}`, action: { token: \"delimiter.bracket\", next: \"@pop\" } },\n      { include: \"expression\" }\n    ],\n    comment: [\n      { regex: `[^\\\\*]+`, action: { token: \"comment\" } },\n      { regex: `\\\\*\\\\/`, action: { token: \"comment\", next: \"@pop\" } },\n      { regex: `[\\\\/*]`, action: { token: \"comment\" } }\n    ],\n    whitespace: [\n      { regex: nonCommentWs },\n      { regex: `\\\\/\\\\*`, action: { token: \"comment\", next: \"@comment\" } },\n      { regex: `\\\\/\\\\/.*$`, action: { token: \"comment\" } }\n    ],\n    expression: [\n      { regex: `'''`, action: { token: \"string.quote\", next: \"@stringVerbatim\" } },\n      { regex: `'`, action: { token: \"string.quote\", next: \"@stringLiteral\" } },\n      { regex: numericLiteral, action: { token: \"number\" } },\n      {\n        regex: identifier,\n        action: {\n          cases: {\n            \"@keywords\": { token: \"keyword\" },\n            \"@namedLiterals\": { token: \"keyword\" },\n            \"@default\": { token: \"identifier\" }\n          }\n        }\n      }\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],
  "mappings": ";;;AAAA,AAQA,IAAI,UAAU,CAAC,SAAS,MAAM;AAC9B,IAAI,kBAAkB;AACtB,IAAI,qBAAqB;AACzB,IAAI,aAAa,QAAQ,GAAG,kBAAkB;AAC9C,IAAI,WAAW;AAAA,EACb;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAEF,IAAI,gBAAgB,CAAC,QAAQ,SAAS;AACtC,IAAI,eAAe;AACnB,IAAI,iBAAiB;AACrB,IAAI,OAAO;AAAA,EACT,UAAU;AAAA,IACR,aAAa;AAAA,IACb,cAAc,CAAC,MAAM;AAAA;AAAA,EAEvB,UAAU;AAAA,IACR,CAAC,KAAK;AAAA,IACN,CAAC,KAAK;AAAA,IACN,CAAC,KAAK;AAAA;AAAA,EAER,kBAAkB;AAAA,IAChB,EAAE,MAAM,KAAK,OAAO;AAAA,IACpB,EAAE,MAAM,KAAK,OAAO;AAAA,IACpB,EAAE,MAAM,KAAK,OAAO;AAAA,IACpB,EAAE,MAAM,KAAK,OAAO;AAAA,IACpB,EAAE,MAAM,OAAO,OAAO;AAAA;AAAA,EAExB,kBAAkB;AAAA,IAChB,EAAE,MAAM,KAAK,OAAO;AAAA,IACpB,EAAE,MAAM,KAAK,OAAO;AAAA,IACpB,EAAE,MAAM,KAAK,OAAO;AAAA,IACpB,EAAE,MAAM,KAAK,OAAO,KAAK,OAAO,CAAC,UAAU;AAAA,IAC3C,EAAE,MAAM,OAAO,OAAO,OAAO,OAAO,CAAC,UAAU;AAAA;AAAA,EAEjD,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,IAChB,uBAAuB,IAAI,OAAO;AAAA,IAClC,uBAAuB,IAAI,OAAO;AAAA;AAAA;AAGtC,IAAI,WAAW;AAAA,EACb,cAAc;AAAA,EACd,cAAc;AAAA,EACd,UAAU;AAAA,IACR,EAAE,MAAM,KAAK,OAAO,KAAK,OAAO;AAAA,IAChC,EAAE,MAAM,KAAK,OAAO,KAAK,OAAO;AAAA,IAChC,EAAE,MAAM,KAAK,OAAO,KAAK,OAAO;AAAA;AAAA,EAElC,SAAS;AAAA,EACT;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,WAAW;AAAA,IACT,MAAM,CAAC,EAAE,SAAS,iBAAiB,EAAE,SAAS;AAAA,IAC9C,gBAAgB;AAAA,MACd,EAAE,OAAO,eAAe,QAAQ,EAAE,OAAO;AAAA,MACzC,EAAE,OAAO,OAAO,QAAQ,EAAE,OAAO,gBAAgB,MAAM;AAAA;AAAA,IAEzD,eAAe;AAAA,MACb,EAAE,OAAO,SAAS,QAAQ,EAAE,OAAO,qBAAqB,MAAM;AAAA,MAC9D,EAAE,OAAO,cAAc,QAAQ,EAAE,OAAO;AAAA,MACxC,EAAE,OAAO,YAAY,QAAQ,EAAE,OAAO;AAAA,MACtC,EAAE,OAAO,SAAS,QAAQ,EAAE,OAAO;AAAA,MACnC,EAAE,OAAO,KAAK,QAAQ,EAAE,OAAO,UAAU,MAAM;AAAA;AAAA,IAEjD,iBAAiB;AAAA,MACf,EAAE,OAAO,KAAK,QAAQ,EAAE,OAAO,qBAAqB,MAAM;AAAA,MAC1D,EAAE,OAAO,KAAK,QAAQ,EAAE,OAAO,qBAAqB,MAAM;AAAA,MAC1D,EAAE,SAAS;AAAA;AAAA,IAEb,SAAS;AAAA,MACP,EAAE,OAAO,WAAW,QAAQ,EAAE,OAAO;AAAA,MACrC,EAAE,OAAO,UAAU,QAAQ,EAAE,OAAO,WAAW,MAAM;AAAA,MACrD,EAAE,OAAO,UAAU,QAAQ,EAAE,OAAO;AAAA;AAAA,IAEtC,YAAY;AAAA,MACV,EAAE,OAAO;AAAA,MACT,EAAE,OAAO,UAAU,QAAQ,EAAE,OAAO,WAAW,MAAM;AAAA,MACrD,EAAE,OAAO,aAAa,QAAQ,EAAE,OAAO;AAAA;AAAA,IAEzC,YAAY;AAAA,MACV,EAAE,OAAO,OAAO,QAAQ,EAAE,OAAO,gBAAgB,MAAM;AAAA,MACvD,EAAE,OAAO,KAAK,QAAQ,EAAE,OAAO,gBAAgB,MAAM;AAAA,MACrD,EAAE,OAAO,gBAAgB,QAAQ,EAAE,OAAO;AAAA,MAC1C;AAAA,QACE,OAAO;AAAA,QACP,QAAQ;AAAA,UACN,OAAO;AAAA,YACL,aAAa,EAAE,OAAO;AAAA,YACtB,kBAAkB,EAAE,OAAO;AAAA,YAC3B,YAAY,EAAE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
