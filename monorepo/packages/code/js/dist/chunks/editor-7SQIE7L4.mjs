import"./chunk-PBSSLK5A.mjs";import"./chunk-WQQY6DE5.mjs";import"./chunk-ANDJS4U7.mjs";import"./chunk-6NWKAIDL.mjs";import"./chunk-2P2Y3LY7.mjs";import{$ as te,$a as Di,$b as xm,$c as ZS,$d as ir,$e as Rh,$f as Ql,$g as sx,$h as pr,$i as mu,A as dm,Aa as lS,Ab as IS,Ac as $r,Ad as Xn,Ae as ct,Af as lr,Ag as Vv,Ah as nu,Ai as Mx,Aj as h0,B as We,Ba as ea,Bb as kS,Bc as _m,Bd as ha,Be as gv,Bf as XL,Bg as Gv,Bh as iu,Bi as Dx,Bj as u0,C as R,Ca as Oe,Cb as LS,Cc as X,Cd as iv,Ce as zm,Cf as wv,Cg as jv,Ch as _a,Ci as es,Cj as p0,D as B,Da as ut,Db as PS,Dc as GS,Dd as jL,De as fv,Df as YL,Dg as Uv,Dh as nd,Di as ts,Dj as ig,E as Ye,Ea as dS,Eb as MS,Ec as Tn,Ed as hn,Ee as Om,Ef as gi,Eg as $v,Eh as Xm,Ei as cu,Ej as m0,F as U,Fa as Rl,Fb as Ze,Fc as aa,Fd as nr,Fe as Ph,Ff as Zl,Fg as Kv,Fh as hr,Fi as Rx,Fj as bu,G as sh,Ga as qn,Gb as DS,Gc as jS,Gd as zi,Ge as yv,Gf as fe,Gg as bo,Gh as ou,Gi as Fx,Gj as et,H as eS,Ha as cS,Hb as uh,Hc as wm,Hd as jl,He as or,Hf as fi,Hg as Sa,Hh as x,Hi as Ax,I as Zo,Ia as Ve,Ib as Ri,Ic as En,Id as ov,Ie as gt,If as Tv,Ig as va,Ih as Be,Ii as Nx,J as cm,Ja as fn,Jb as na,Jc as ui,Jd as Ge,Je as bv,Jf as ZL,Jg as qv,Jh as wa,Ji as zx,K as _t,Ka as hS,Kb as RS,Kc as bh,Kd as Oi,Ke as mi,Kf as Oh,Kg as xa,Kh as Ft,Ki as Ea,L as $,La as um,Lb as FS,Lc as US,Ld as rv,Le as Sv,Lf as JL,Lg as Xv,Lh as vo,Li as mr,M as Ae,Ma as pm,Mb as AS,Mc as $S,Md as go,Me as Mh,Mf as Y,Mg as Yv,Mh as yx,Mi as Ox,N as ue,Na as uS,Nb as OL,Nc as Bl,Nd as Mm,Ne as $l,Nf as ee,Ng as Zv,Nh as Ta,Ni as Qm,O as Zt,Oa as pS,Ob as NS,Oc as Tm,Od as sv,Oe as rr,Of as Ev,Og as Jv,Oh as Ym,Oi as Hx,P as at,Pa as ch,Pb as Sm,Pc as KS,Pd as UL,Pe as Dh,Pf as Hh,Pg as Qv,Ph as bx,Pi as ad,Q as $e,Qa as tt,Qb as ph,Qc as qS,Qd as ua,Qe as Kl,Qf as Bh,Qg as ex,Qh as QL,Qi as hu,R as ho,Ra as mS,Rb as mh,Rc as mo,Rd as _h,Re as ma,Rf as Jn,Rg as tx,Rh as ru,Ri as eg,S as tS,Sa as gS,Sb as cn,Sc as Em,Sd as wh,Se as Hm,Sf as yo,Sg as nx,Sh as id,Si as Bx,T as Zs,Ta as Jt,Tb as ia,Tc as la,Td as av,Te as St,Tf as Bi,Tg as cr,Th as Sx,Ti as Nt,U as ah,Ua as Mi,Ub as zS,Uc as Sh,Ud as Dm,Ue as nt,Uf as Wi,Ug as qh,Uh as Zm,Ui as tg,V as nS,Va as fS,Vb as vm,Vc as pi,Vd as Yn,Ve as lt,Vf as ga,Vg as Xh,Vh as Jm,Vi as ld,W as Ce,Wa as yS,Wb as Nl,Wc as Wl,Wd as lv,We as ye,Wf as dr,Wg as Yh,Wh as xo,Wi as en,X as Ht,Xa as bS,Xb as Nn,Xc as vh,Xd as Tt,Xe as Me,Xf as Wh,Xg as Zh,Xh as su,Xi as uu,Y as q,Ya as SS,Yb as OS,Yc as xh,Yd as pa,Ye as oe,Yf as Vh,Yg as ix,Yh as od,Yi as pu,Z as rt,Za as mm,Zb as gh,Zc as XS,Zd as Th,Ze as Hi,Zf as Gh,Zg as ox,Zh as vx,Zi as Wx,_ as C,_a as dn,_b as fh,_c as YS,_d as mt,_e as Zn,_f as Jl,_g as rx,_h as ur,_i as Vx,a as u,aa as Z,ab as gm,ac as zl,ad as er,ae as Eh,af as sr,ag as ed,ah as ax,ai as au,aj as Gx,b as ne,ba as wt,bb as H,bc as Ue,bd as da,be as dv,bf as un,bg as jh,bh as Jh,bi as rd,bj as jx,c as co,ca as he,cb as vS,cc as Ol,cd as Ai,ce as $L,cf as ar,cg as Uh,ch as Qh,ci as sd,cj as Ux,d as ln,da as Pi,db as jr,dc as _n,dd as Im,de as Rm,df as Fh,dg as $h,dh as Um,di as At,dj as gu,e as Ll,ea as Ke,eb as W,ec as Wt,ed as km,ee as cv,ef as Ah,eg as Iv,eh as Ca,ei as xx,ej as $x,f as Xo,fa as Ee,fb as Qt,fc as pt,fd as Vl,fe as hv,ff as it,fg as kv,fh as lx,fi as lu,fj as kn,g as th,ga as Bt,gb as Rt,gc as Ie,gd as Kr,ge as Xr,gf as N,gg as Lv,gh as dx,gi as Zr,gj as Ia,h as nh,ha as iS,hb as Fl,hc as bt,hd as Ch,he as Fm,hf as Bm,hg as Pv,hh as cx,hi as Jr,hj as fu,i as Zb,ia as oS,ib as xS,ic as Vt,id as Lm,ie as uv,if as yn,ig as Mv,ih as zn,ii as Vi,ij as Kx,j as Fn,ja as lh,jb as Ne,jc as HS,jd as JS,je as Ih,jf as vv,jg as Dv,jh as eu,ji as Co,jj as yu,k as Jb,ka as rS,kb as CS,kc as Fi,kd as tr,ke as Am,kf as K,kg as Rv,kh as Je,ki as Qr,kj as Gi,l as Yo,la as Ml,lb as An,lc as BS,ld as Pe,le as kh,lf as I,lg as Fv,lh as hx,li as du,lj as ei,m as Pl,ma as hm,mb as _S,mc as WS,md as QS,me as Lh,mf as Wm,mg as Av,mh as ux,mi as Cx,mj as qx,n as Ys,na as NL,nb as uo,nc as oa,nd as ev,ne as Nm,nf as Nh,ng as Nv,nh as tu,ni as Qe,nj as i0,o as ae,oa as Dl,ob as wS,oc as yh,od as tv,oe as KL,of as J,og as Yr,oh as $m,oi as On,oj as Xx,p as je,pa as sS,pb as TS,pc as ra,pd as WL,pe as He,pf as xv,pg as zv,ph as Km,pi as _x,pj as ng,q as Li,qa as aS,qb as Ur,qc as HL,qd as ca,qe as fo,qf as Cv,qg as fa,qh as px,qi as e0,qj as Yx,r as ih,ra as zL,rb as Al,rc as wn,rd as Pm,re as O,rf as ce,rg as Kh,rh as td,ri as wx,rj as Zx,s as ci,sa as Le,sb as st,sc as po,sd as It,se as de,sf as ql,sg as Qn,sh as yi,si as Tx,sj as o0,t as ke,ta as Js,tb as ta,tc as Hl,td as Ni,te as Q,tf as Vm,tg as ya,th as xe,ti as t0,tj as r0,u as oh,ua as hi,ub as fm,uc as sa,ud as In,ue as Te,uf as qL,ug as ba,uh as Ut,ui as Ex,uj as ns,v as Qb,va as Qs,vb as ES,vc as Cm,vd as qr,ve as jt,vf as Gm,vg as Ov,vh as mx,vi as Ix,vj as s0,w as lm,wa as Gr,wb as ym,wc as VS,wd as Gl,we as Ul,wf as zh,wg as jm,wh as qm,wi as n0,wj as a0,x as AL,xa as dh,xb as bm,xc as BL,xd as VL,xe as pv,xf as _v,xg as Hv,xh as gx,xi as kx,xj as l0,y as rh,ya as Cn,yb as Jo,yc as Gt,yd as nv,ye as dt,yf as Xl,yg as Bv,yh as So,yi as Lx,yj as d0,z as ht,za as Xe,zb as hh,zc as Qo,zd as GL,ze as mv,zf as Yl,zg as Wv,zh as fx,zi as Px,zj as c0}from"./chunk-NJBT372R.mjs";import{a as $b,d as eh,e as lo,f as FL,g as Vr,h as Kb,i as qb,j as Xb,k as Yb}from"./chunk-AH6KKUH7.mjs";var bE=lo(_s=>{mt();at();ke();ho();U();ce();Bt();Mm();te();Be();Pe();Pm();o0();i0();ne();bt();Te();Ke();Qr();var mE=_s&&_s.__decorate||function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},gE=_s&&_s.__param||function(r,e){return function(t,n){e(t,n,r)}},Oy=_s&&_s.__awaiter||function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},yc=class{constructor(e,t){this._workerService=t,this._callOnDispose=new R,this._callOnModel=new R,this._editor=e,this._callOnDispose.add(e.onDidChangeConfiguration(()=>this._update())),this._callOnDispose.add(e.onDidChangeModel(()=>this._update())),this._callOnDispose.add(e.onDidChangeModelLanguage(()=>this._update())),this._callOnDispose.add(km.onDidChange(this._update,this))}dispose(){this._callOnDispose.dispose(),this._callOnModel.dispose()}_update(){if(this._callOnModel.clear(),!this._editor.getOption(48)||!this._editor.hasModel())return;let e=this._editor.getModel(),[t]=km.ordered(e);if(!t||!t.autoFormatTriggerCharacters)return;let n=new go;for(let i of t.autoFormatTriggerCharacters)n.add(i.charCodeAt(0));this._callOnModel.add(this._editor.onDidType(i=>{let o=i.charCodeAt(i.length-1);n.has(o)&&this._trigger(String.fromCharCode(o))}))}_trigger(e){if(!this._editor.hasModel()||this._editor.getSelections().length>1||!this._editor.getSelection().isEmpty())return;let t=this._editor.getModel(),n=this._editor.getPosition(),i=!1,o=this._editor.onDidChangeModelContent(s=>{if(s.isFlush){i=!0,o.dispose();return}for(let a=0,l=s.changes.length;a<l;a++)if(s.changes[a].range.endLineNumber<=n.lineNumber){i=!0,o.dispose();return}});Zx(this._workerService,t,n,e,t.getFormattingOptions()).then(s=>{o.dispose(),!i&&Tt(s)&&(qx.execute(this._editor,s,!0),Xx(s))},s=>{throw o.dispose(),s})}};yc.ID="editor.contrib.autoFormat";yc=mE([gE(1,ca)],yc);var bc=class{constructor(e,t){this.editor=e,this._instantiationService=t,this._callOnDispose=new R,this._callOnModel=new R,this._callOnDispose.add(e.onDidChangeConfiguration(()=>this._update())),this._callOnDispose.add(e.onDidChangeModel(()=>this._update())),this._callOnDispose.add(e.onDidChangeModelLanguage(()=>this._update())),this._callOnDispose.add(Im.onDidChange(this._update,this))}dispose(){this._callOnDispose.dispose(),this._callOnModel.dispose()}_update(){this._callOnModel.clear(),this.editor.getOption(47)&&(!this.editor.hasModel()||!Im.has(this.editor.getModel())||this._callOnModel.add(this.editor.onDidPaste(({range:e})=>this._trigger(e))))}_trigger(e){!this.editor.hasModel()||this.editor.getSelections().length>1||this._instantiationService.invokeFunction(ng,this.editor,e,2,Vi.None,ue.None).catch(ae)}};bc.ID="editor.contrib.formatOnPaste";bc=mE([gE(1,he)],bc);var fE=class extends N{constructor(){super({id:"editor.action.formatDocument",label:u("formatDocument.label","Format Document"),alias:"Format Document",precondition:O.and(x.notInCompositeEditor,x.writable,x.hasDocumentFormattingProvider),kbOpts:{kbExpr:x.editorTextFocus,primary:1572,linux:{primary:3111},weight:100},contextMenuOpts:{group:"1_modification",order:1.3}})}run(e,t){return Oy(this,void 0,void 0,function*(){if(t.hasModel()){let n=e.get(he);yield e.get(Co).showWhile(n.invokeFunction(Yx,t,1,Vi.None,ue.None),250)}})}},yE=class extends N{constructor(){super({id:"editor.action.formatSelection",label:u("formatSelection.label","Format Selection"),alias:"Format Selection",precondition:O.and(x.writable,x.hasDocumentSelectionFormattingProvider),kbOpts:{kbExpr:x.editorTextFocus,primary:$e(2089,2084),weight:100},contextMenuOpts:{when:x.hasNonEmptySelection,group:"1_modification",order:1.31}})}run(e,t){return Oy(this,void 0,void 0,function*(){if(!t.hasModel())return;let n=e.get(he),i=t.getModel(),o=t.getSelections().map(a=>a.isEmpty()?new C(a.startLineNumber,1,a.startLineNumber,i.getLineMaxColumn(a.startLineNumber)):a);yield e.get(Co).showWhile(n.invokeFunction(ng,t,o,1,Vi.None,ue.None),250)})}};J(yc.ID,yc);J(bc.ID,bc);I(fE);I(yE);Ie.registerCommand("editor.action.format",r=>Oy(void 0,void 0,void 0,function*(){let e=r.get(Ee).getFocusedCodeEditor();if(!e||!e.hasModel())return;let t=r.get(pt);e.getSelection().isEmpty()?yield t.executeCommand("editor.action.formatDocument"):yield t.executeCommand("editor.action.formatSelection")}))});var Vy,RE=eh(()=>{wt();Vy=class{constructor(e,t,n){this._editRange=e,this._originalSelection=t,this._text=n}getEditOperations(e,t){t.addTrackedEditOperation(this._editRange,this._text)}computeCursorState(e,t){let i=t.getInverseEditOperations()[0].range;return this._originalSelection.isEmpty()?new Z(i.endLineNumber,Math.min(this._originalSelection.positionColumn,i.endColumn),i.endLineNumber,Math.min(this._originalSelection.positionColumn,i.endColumn)):new Z(i.endLineNumber,i.endColumn-this._text.length,i.endLineNumber,i.endColumn)}}});var NE=lo(Tc=>{Oe();ke();pr();ce();te();wt();Be();Ut();Pm();td();ne();Me();RE();var PD=Tc&&Tc.__decorate||function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},MD=Tc&&Tc.__param||function(r,e){return function(t,n){e(t,n,r)}},kr=class Gy{constructor(e,t){this.decorationIds=[],this.editor=e,this.editorWorkerService=t}static get(e){return e.getContribution(Gy.ID)}dispose(){}run(e,t){this.currentRequest&&this.currentRequest.cancel();let n=this.editor.getSelection(),i=this.editor.getModel();if(!i||!n)return;let o=n;if(o.startLineNumber!==o.endLineNumber)return;let s=new su(this.editor,5),a=i.uri;return this.editorWorkerService.canNavigateValueSet(a)?(this.currentRequest=Le(l=>this.editorWorkerService.navigateValueSet(a,o,t)),this.currentRequest.then(l=>{if(!l||!l.range||!l.value||!s.validate(this.editor))return;let c=C.lift(l.range),d=l.range,h=l.value.length-(o.endColumn-o.startColumn);d={startLineNumber:d.startLineNumber,startColumn:d.startColumn,endLineNumber:d.endLineNumber,endColumn:d.startColumn+l.value.length},h>1&&(o=new Z(o.startLineNumber,o.startColumn,o.endLineNumber,o.endColumn+h-1));let p=new Vy(c,o,l.value);this.editor.pushUndoStop(),this.editor.executeCommand(e,p),this.editor.pushUndoStop(),this.decorationIds=this.editor.deltaDecorations(this.decorationIds,[{range:d,options:Gy.DECORATION}]),this.decorationRemover&&this.decorationRemover.cancel(),this.decorationRemover=Qs(350),this.decorationRemover.then(()=>this.decorationIds=this.editor.deltaDecorations(this.decorationIds,[])).catch(ae)}).catch(ae)):Promise.resolve(void 0)}};kr.ID="editor.contrib.inPlaceReplaceController";kr.DECORATION=xe.register({description:"in-place-replace",className:"valueSetReplacement"});kr=PD([MD(1,ca)],kr);var FE=class extends N{constructor(){super({id:"editor.action.inPlaceReplace.up",label:u("InPlaceReplaceAction.previous.label","Replace with Previous Value"),alias:"Replace with Previous Value",precondition:x.writable,kbOpts:{kbExpr:x.editorTextFocus,primary:3154,weight:100}})}run(e,t){let n=kr.get(t);return n?n.run(this.id,!0):Promise.resolve(void 0)}},AE=class extends N{constructor(){super({id:"editor.action.inPlaceReplace.down",label:u("InPlaceReplaceAction.next.label","Replace with Next Value"),alias:"Replace with Next Value",precondition:x.writable,kbOpts:{kbExpr:x.editorTextFocus,primary:3156,weight:100}})}run(e,t){let n=kr.get(t);return n?n.run(this.id,!1):Promise.resolve(void 0)}};J(kr.ID,kr);I(FE);I(AE);ye((r,e)=>{let t=r.getColor(tu);t&&e.addRule(`.monaco-editor.vs .valueSetReplacement { outline: solid 2px ${t}; }`)})});var Dr,hb=eh(()=>{mi();ce();KL();ne();Dr=class extends N{constructor(){super({id:Dr.ID,label:u({key:"toggle.tabMovesFocus",comment:["Turn on/off use of tab key for moving focus around VS Code"]},"Toggle Tab Key Moves Focus"),alias:"Toggle Tab Key Moves Focus",precondition:void 0,kbOpts:{kbExpr:null,primary:2091,mac:{primary:1323},weight:100}})}run(e,t){let i=!Nm.getTabFocusMode();Nm.setTabFocusMode(i),i?gt(u("toggle.tabMovesFocus.on","Pressing Tab will now move focus to the next focusable element")):gt(u("toggle.tabMovesFocus.off","Pressing Tab will now insert the tab character"))}};Dr.ID="editor.action.toggleTabFocusMode";I(Dr)});var zI=lo(Fc=>{Oe();U();ce();Pe();t0();Qo();n0();e0();nr();Me();var nR=Fc&&Fc.__decorate||function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},ub=Fc&&Fc.__param||function(r,e){return function(t,n){e(t,n,r)}},Rc=class extends B{constructor(e,t,n,i){super();this._modelService=t,this._themeService=n,this._configurationService=i,this._editor=e,this._tokenizeViewport=new Xe(()=>this._tokenizeViewportNow(),100),this._outstandingRequests=[],this._register(this._editor.onDidScrollChange(()=>{this._tokenizeViewport.schedule()})),this._register(this._editor.onDidChangeModel(()=>{this._cancelAll(),this._tokenizeViewport.schedule()})),this._register(this._editor.onDidChangeModelContent(o=>{this._cancelAll(),this._tokenizeViewport.schedule()})),this._register(JS.onDidChange(()=>{this._cancelAll(),this._tokenizeViewport.schedule()})),this._register(this._configurationService.onDidChangeConfiguration(o=>{o.affectsConfiguration(Ex)&&(this._cancelAll(),this._tokenizeViewport.schedule())})),this._register(this._themeService.onDidColorThemeChange(()=>{this._cancelAll(),this._tokenizeViewport.schedule()}))}_cancelAll(){for(let e of this._outstandingRequests)e.cancel();this._outstandingRequests=[]}_removeOutstandingRequest(e){for(let t=0,n=this._outstandingRequests.length;t<n;t++)if(this._outstandingRequests[t]===e){this._outstandingRequests.splice(t,1);return}}_tokenizeViewportNow(){if(!this._editor.hasModel())return;let e=this._editor.getModel();if(e.hasCompleteSemanticTokens())return;if(!Ix(e,this._themeService,this._configurationService)){e.hasSomeSemanticTokens()&&e.setSemanticTokens(null,!1);return}if(!wx(e)){e.hasSomeSemanticTokens()&&e.setSemanticTokens(null,!1);return}let t=this._editor.getVisibleRangesPlusViewportAboveBelow();this._outstandingRequests=this._outstandingRequests.concat(t.map(n=>this._requestRange(e,n)))}_requestRange(e,t){let n=e.getVersionId(),i=Le(o=>Promise.resolve(Tx(e,t,o)));return i.then(o=>{if(!o||!o.tokens||e.isDisposed()||e.getVersionId()!==n)return;let{provider:s,tokens:a}=o,l=this._modelService.getSemanticTokensProviderStyling(s);e.setPartialSemanticTokens(t,_x(a,l,e.getLanguageId()))}).then(()=>this._removeOutstandingRequest(i),()=>this._removeOutstandingRequest(i)),i}};Rc.ID="editor.contrib.viewportSemanticTokens";Rc=nR([ub(1,Gt),ub(2,St),ub(3,hn)],Rc);J(Rc.ID,Rc)});var vk=eh(()=>{});var Tk=lo(Ac=>{vk();Ne();qL();Ux();mi();vo();U();Fn();Ze();Ht();ce();Be();hb();Te();Ke();On();Fi();Je();Me();or();var xk=Ac&&Ac.__decorate||function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},Kp=Ac&&Ac.__param||function(r,e){return function(t,n){e(t,n,r)}},Ck=new de("accessibilityHelpWidgetVisible",!1),As=class _k extends B{constructor(e,t){super();this._editor=e,this._widget=this._register(t.createInstance(sl,this._editor))}static get(e){return e.getContribution(_k.ID)}show(){this._widget.show()}hide(){this._widget.hide()}};As.ID="editor.contrib.accessibilityHelpController";As=xk([Kp(1,he)],As);function uR(r,e){return!r||r.length===0?ct.noSelection:r.length===1?e?An(ct.singleSelectionRange,r[0].positionLineNumber,r[0].positionColumn,e):An(ct.singleSelection,r[0].positionLineNumber,r[0].positionColumn):e?An(ct.multiSelectionRange,r.length,e):r.length>0?An(ct.multiSelection,r.length):""}var sl=class qp extends Ft{constructor(e,t,n,i){super();this._contextKeyService=t,this._keybindingService=n,this._openerService=i,this._editor=e,this._isVisibleKey=Ck.bindTo(this._contextKeyService),this._domNode=Vm(document.createElement("div")),this._domNode.setClassName("accessibilityHelpWidget"),this._domNode.setDisplay("none"),this._domNode.setAttribute("role","dialog"),this._domNode.setAttribute("aria-hidden","true"),this._contentDomNode=Vm(document.createElement("div")),this._contentDomNode.setAttribute("role","document"),this._domNode.appendChild(this._contentDomNode),this._isVisible=!1,this._register(this._editor.onDidLayoutChange(()=>{this._isVisible&&this._layout()})),this._register(fn(this._contentDomNode.domNode,"keydown",o=>{if(!!this._isVisible&&(o.equals(2083)&&(gt(ct.emergencyConfOn),this._editor.updateOptions({accessibilitySupport:"on"}),qn(this._contentDomNode.domNode),this._buildContent(),this._contentDomNode.domNode.focus(),o.preventDefault(),o.stopPropagation()),o.equals(2086))){gt(ct.openingDocs);let s=this._editor.getRawOptions().accessibilityHelpUrl;typeof s=="undefined"&&(s="https://go.microsoft.com/fwlink/?linkid=852450"),this._openerService.open(Ce.parse(s)),o.preventDefault(),o.stopPropagation()}})),this.onblur(this._contentDomNode.domNode,()=>{this.hide()}),this._editor.addOverlayWidget(this)}dispose(){this._editor.removeOverlayWidget(this),super.dispose()}getId(){return qp.ID}getDomNode(){return this._domNode.domNode}getPosition(){return{preference:null}}show(){this._isVisible||(this._isVisible=!0,this._isVisibleKey.set(!0),this._layout(),this._domNode.setDisplay("block"),this._domNode.setAttribute("aria-hidden","false"),this._contentDomNode.domNode.tabIndex=0,this._buildContent(),this._contentDomNode.domNode.focus())}_descriptionForCommand(e,t,n){let i=this._keybindingService.lookupKeybinding(e);return i?An(t,i.getAriaLabel()):An(n,e)}_buildContent(){let e=this._editor.getOptions(),t=this._editor.getSelections(),n=0;if(t){let a=this._editor.getModel();a&&t.forEach(l=>{n+=a.getValueLengthInRange(l)})}let i=uR(t,n);e.get(53)?e.get(80)?i+=ct.readonlyDiffEditor:i+=ct.editableDiffEditor:e.get(80)?i+=ct.readonlyEditor:i+=ct.editableEditor;let o=ln?ct.changeConfigToOnMac:ct.changeConfigToOnWinLinux;switch(e.get(2)){case 0:i+=`

 - `+o;break;case 2:i+=`

 - `+ct.auto_on;break;case 1:i+=`

 - `+ct.auto_off,i+=" "+o;break}e.get(128)?i+=`

 - `+this._descriptionForCommand(Dr.ID,ct.tabFocusModeOnMsg,ct.tabFocusModeOnMsgNoKb):i+=`

 - `+this._descriptionForCommand(Dr.ID,ct.tabFocusModeOffMsg,ct.tabFocusModeOffMsgNoKb);let s=ln?ct.openDocMac:ct.openDocWinLinux;i+=`

 - `+s,i+=`

`+ct.outroMsg,this._contentDomNode.domNode.appendChild(Gx(i)),this._contentDomNode.domNode.setAttribute("aria-label",i)}hide(){!this._isVisible||(this._isVisible=!1,this._isVisibleKey.reset(),this._domNode.setDisplay("none"),this._domNode.setAttribute("aria-hidden","true"),this._contentDomNode.domNode.tabIndex=-1,qn(this._contentDomNode.domNode),this._editor.focus())}_layout(){let e=this._editor.getLayoutInfo(),t=Math.max(5,Math.min(qp.WIDTH,e.width-40)),n=Math.max(5,Math.min(qp.HEIGHT,e.height-40));this._domNode.setWidth(t),this._domNode.setHeight(n);let i=Math.round((e.height-n)/2);this._domNode.setTop(i);let o=Math.round((e.width-t)/2);this._domNode.setLeft(o)}};sl.ID="editor.contrib.accessibilityHelpWidget";sl.WIDTH=500;sl.HEIGHT=300;sl=xk([Kp(1,Q),Kp(2,Qe),Kp(3,Vt)],sl);var wk=class extends N{constructor(){super({id:"editor.action.showAccessibilityHelp",label:ct.showAccessibilityHelpAction,alias:"Show Accessibility Help",precondition:void 0,kbOpts:{primary:571,weight:100,linux:{primary:1595,secondary:[571]}}})}run(e,t){let n=As.get(t);n&&n.show()}};J(As.ID,As);I(wk);var pR=it.bindToContribution(As.get);K(new pR({id:"closeAccessibilityHelp",precondition:Ck,handler:r=>r.hide(),kbOpts:{weight:100+100,kbExpr:x.focus,primary:9,secondary:[1033]}}));ye((r,e)=>{let t=r.getColor(Qn);t&&e.addRule(`.monaco-editor .accessibilityHelpWidget { background-color: ${t}; }`);let n=r.getColor(ya);n&&e.addRule(`.monaco-editor .accessibilityHelpWidget { color: ${n}; }`);let i=r.getColor(dr);i&&e.addRule(`.monaco-editor .accessibilityHelpWidget { box-shadow: 0 2px 8px ${i}; }`);let o=r.getColor(Jn);o&&e.addRule(`.monaco-editor .accessibilityHelpWidget { border: 2px solid ${o}; }`)})});var Ek=eh(()=>{});var Pk=lo(zc=>{Ek();Ne();fi();U();ce();Pe();WL();Ni();Cx();Je();Me();or();Hm();var mR=zc&&zc.__decorate||function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},Ik=zc&&zc.__param||function(r,e){return function(t,n){e(t,n,r)}},al=class kk extends B{constructor(e,t,n){super();this._editor=e,this._modeService=n,this._widget=null,this._register(this._editor.onDidChangeModel(i=>this.stop())),this._register(this._editor.onDidChangeModelLanguage(i=>this.stop())),this._register(tr.onDidChange(i=>this.stop())),this._register(this._editor.onKeyUp(i=>i.keyCode===9&&this.stop()))}static get(e){return e.getContribution(kk.ID)}dispose(){this.stop(),super.dispose()}launch(){this._widget||!this._editor.hasModel()||(this._widget=new Oc(this._editor,this._modeService))}stop(){this._widget&&(this._widget.dispose(),this._widget=null)}};al.ID="editor.contrib.inspectTokens";al=mR([Ik(1,du),Ik(2,It)],al);var Lk=class extends N{constructor(){super({id:"editor.action.inspectTokens",label:gv.inspectTokensAction,alias:"Developer: Inspect Tokens",precondition:void 0})}run(e,t){let n=al.get(t);n&&n.launch()}};function gR(r){let e="";for(let t=0,n=r.length;t<n;t++){let i=r.charCodeAt(t);switch(i){case 9:e+="\u2192";break;case 32:e+="\xB7";break;default:e+=String.fromCharCode(i)}}return e}function fR(r,e){let t=tr.get(e);if(t)return t;let n=r.encodeLanguageId(e);return{getInitialState:()=>QS,tokenize:(i,o,s,a)=>ev(e,i,s,a),tokenize2:(i,o,s,a)=>tv(n,i,s,a)}}var Oc=class extends B{constructor(e,t){super();this.allowEditorOverflow=!0,this._editor=e,this._modeService=t,this._model=this._editor.getModel(),this._domNode=document.createElement("div"),this._domNode.className="tokens-inspect-widget",this._tokenizationSupport=fR(this._modeService.languageIdCodec,this._model.getLanguageId()),this._compute(this._editor.getPosition()),this._register(this._editor.onDidChangeCursorPosition(n=>this._compute(this._editor.getPosition()))),this._editor.addContentWidget(this)}dispose(){this._editor.removeContentWidget(this),super.dispose()}getId(){return Oc._ID}_compute(e){let t=this._getTokensAtLine(e.lineNumber),n=0;for(let l=t.tokens1.length-1;l>=0;l--){let c=t.tokens1[l];if(e.column-1>=c.offset){n=l;break}}let i=0;for(let l=t.tokens2.length>>>1;l>=0;l--)if(e.column-1>=t.tokens2[l<<1]){i=l;break}let o=this._model.getLineContent(e.lineNumber),s="";if(n<t.tokens1.length){let l=t.tokens1[n].offset,c=n+1<t.tokens1.length?t.tokens1[n+1].offset:o.length;s=o.substring(l,c)}jr(this._domNode,W("h2.tm-token",void 0,gR(s),W("span.tm-token-length",void 0,`${s.length} ${s.length===1?"char":"chars"}`))),H(this._domNode,W("hr.tokens-inspect-separator",{style:"clear:both"}));let a=(i<<1)+1<t.tokens2.length?this._decodeMetadata(t.tokens2[(i<<1)+1]):null;H(this._domNode,W("table.tm-metadata-table",void 0,W("tbody",void 0,W("tr",void 0,W("td.tm-metadata-key",void 0,"language"),W("td.tm-metadata-value",void 0,`${a?a.languageId:"-?-"}`)),W("tr",void 0,W("td.tm-metadata-key",void 0,"token type"),W("td.tm-metadata-value",void 0,`${a?this._tokenTypeToString(a.tokenType):"-?-"}`)),W("tr",void 0,W("td.tm-metadata-key",void 0,"font style"),W("td.tm-metadata-value",void 0,`${a?this._fontStyleToString(a.fontStyle):"-?-"}`)),W("tr",void 0,W("td.tm-metadata-key",void 0,"foreground"),W("td.tm-metadata-value",void 0,`${a?fe.Format.CSS.formatHex(a.foreground):"-?-"}`)),W("tr",void 0,W("td.tm-metadata-key",void 0,"background"),W("td.tm-metadata-value",void 0,`${a?fe.Format.CSS.formatHex(a.background):"-?-"}`))))),H(this._domNode,W("hr.tokens-inspect-separator")),n<t.tokens1.length&&H(this._domNode,W("span.tm-token-type",void 0,t.tokens1[n].type)),this._editor.layoutContentWidget(this)}_decodeMetadata(e){let t=tr.getColorMap(),n=aa.getLanguageId(e),i=aa.getTokenType(e),o=aa.getFontStyle(e),s=aa.getForeground(e),a=aa.getBackground(e);return{languageId:this._modeService.languageIdCodec.decodeLanguageId(n),tokenType:i,fontStyle:o,foreground:t[s],background:t[a]}}_tokenTypeToString(e){switch(e){case 0:return"Other";case 1:return"Comment";case 2:return"String";case 4:return"RegEx";default:return"??"}}_fontStyleToString(e){let t="";return e&1&&(t+="italic "),e&2&&(t+="bold "),e&4&&(t+="underline "),t.length===0&&(t="---"),t}_getTokensAtLine(e){let t=this._getStateBeforeLine(e),n=this._tokenizationSupport.tokenize(this._model.getLineContent(e),!0,t,0),i=this._tokenizationSupport.tokenize2(this._model.getLineContent(e),!0,t,0);return{startState:t,tokens1:n.tokens,tokens2:i.tokens,endState:n.endState}}_getStateBeforeLine(e){let t=this._tokenizationSupport.getInitialState();for(let n=1;n<e;n++)t=this._tokenizationSupport.tokenize(this._model.getLineContent(n),!0,t,0).endState;return t}getDomNode(){return this._domNode}getPosition(){return{position:this._editor.getPosition(),preference:[2,1]}}};Oc._ID="editor.contrib.inspectTokensWidget";J(al.ID,al);I(Lk);ye((r,e)=>{let t=r.getColor(va);if(t){let o=r.type===ma.HIGH_CONTRAST?2:1;e.addRule(`.monaco-editor .tokens-inspect-widget { border: ${o}px solid ${t}; }`),e.addRule(`.monaco-editor .tokens-inspect-widget .tokens-inspect-separator { background-color: ${t}; }`)}let n=r.getColor(bo);n&&e.addRule(`.monaco-editor .tokens-inspect-widget { background-color: ${n}; }`);let i=r.getColor(Sa);i&&e.addRule(`.monaco-editor .tokens-inspect-widget { color: ${i}; }`)})});var cL=lo(im=>{"use strict";im.byteLength=YR;im.toByteArray=JR;im.fromByteArray=tF;var io=[],di=[],XR=typeof Uint8Array!="undefined"?Uint8Array:Array,Ib="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(Os=0,lL=Ib.length;Os<lL;++Os)io[Os]=Ib[Os],di[Ib.charCodeAt(Os)]=Os;var Os,lL;di["-".charCodeAt(0)]=62;di["_".charCodeAt(0)]=63;function dL(r){var e=r.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var t=r.indexOf("=");t===-1&&(t=e);var n=t===e?0:4-t%4;return[t,n]}function YR(r){var e=dL(r),t=e[0],n=e[1];return(t+n)*3/4-n}function ZR(r,e,t){return(e+t)*3/4-t}function JR(r){var e,t=dL(r),n=t[0],i=t[1],o=new XR(ZR(r,n,i)),s=0,a=i>0?n-4:n,l;for(l=0;l<a;l+=4)e=di[r.charCodeAt(l)]<<18|di[r.charCodeAt(l+1)]<<12|di[r.charCodeAt(l+2)]<<6|di[r.charCodeAt(l+3)],o[s++]=e>>16&255,o[s++]=e>>8&255,o[s++]=e&255;return i===2&&(e=di[r.charCodeAt(l)]<<2|di[r.charCodeAt(l+1)]>>4,o[s++]=e&255),i===1&&(e=di[r.charCodeAt(l)]<<10|di[r.charCodeAt(l+1)]<<4|di[r.charCodeAt(l+2)]>>2,o[s++]=e>>8&255,o[s++]=e&255),o}function QR(r){return io[r>>18&63]+io[r>>12&63]+io[r>>6&63]+io[r&63]}function eF(r,e,t){for(var n,i=[],o=e;o<t;o+=3)n=(r[o]<<16&16711680)+(r[o+1]<<8&65280)+(r[o+2]&255),i.push(QR(n));return i.join("")}function tF(r){for(var e,t=r.length,n=t%3,i=[],o=16383,s=0,a=t-n;s<a;s+=o)i.push(eF(r,s,s+o>a?a:s+o));return n===1?(e=r[t-1],i.push(io[e>>2]+io[e<<4&63]+"==")):n===2&&(e=(r[t-2]<<8)+r[t-1],i.push(io[e>>10]+io[e>>4&63]+io[e<<2&63]+"=")),i.join("")}});var hL=lo(kb=>{kb.read=function(r,e,t,n,i){var o,s,a=i*8-n-1,l=(1<<a)-1,c=l>>1,d=-7,h=t?i-1:0,p=t?-1:1,g=r[e+h];for(h+=p,o=g&(1<<-d)-1,g>>=-d,d+=a;d>0;o=o*256+r[e+h],h+=p,d-=8);for(s=o&(1<<-d)-1,o>>=-d,d+=n;d>0;s=s*256+r[e+h],h+=p,d-=8);if(o===0)o=1-c;else{if(o===l)return s?NaN:(g?-1:1)*(1/0);s=s+Math.pow(2,n),o=o-c}return(g?-1:1)*s*Math.pow(2,o-n)};kb.write=function(r,e,t,n,i,o){var s,a,l,c=o*8-i-1,d=(1<<c)-1,h=d>>1,p=i===23?Math.pow(2,-24)-Math.pow(2,-77):0,g=n?0:o-1,y=n?1:-1,v=e<0||e===0&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,s=d):(s=Math.floor(Math.log(e)/Math.LN2),e*(l=Math.pow(2,-s))<1&&(s--,l*=2),s+h>=1?e+=p/l:e+=p*Math.pow(2,1-h),e*l>=2&&(s++,l/=2),s+h>=d?(a=0,s=d):s+h>=1?(a=(e*l-1)*Math.pow(2,i),s=s+h):(a=e*Math.pow(2,h-1)*Math.pow(2,i),s=0));i>=8;r[t+g]=a&255,g+=y,a/=256,i-=8);for(s=s<<i|a,c+=i;c>0;r[t+g]=s&255,g+=y,s/=256,c-=8);r[t+g-y]|=v*128}});var kL=lo(yl=>{"use strict";var Lb=cL(),gl=hL(),uL=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;yl.Buffer=A;yl.SlowBuffer=aF;yl.INSPECT_MAX_BYTES=50;var om=2147483647;yl.kMaxLength=om;A.TYPED_ARRAY_SUPPORT=nF();!A.TYPED_ARRAY_SUPPORT&&typeof console!="undefined"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function nF(){try{let r=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(r,e),r.foo()===42}catch(r){return!1}}Object.defineProperty(A.prototype,"parent",{enumerable:!0,get:function(){if(!!A.isBuffer(this))return this.buffer}});Object.defineProperty(A.prototype,"offset",{enumerable:!0,get:function(){if(!!A.isBuffer(this))return this.byteOffset}});function Vo(r){if(r>om)throw new RangeError('The value "'+r+'" is invalid for option "size"');let e=new Uint8Array(r);return Object.setPrototypeOf(e,A.prototype),e}function A(r,e,t){if(typeof r=="number"){if(typeof e=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return Rb(r)}return fL(r,e,t)}A.poolSize=8192;function fL(r,e,t){if(typeof r=="string")return oF(r,e);if(ArrayBuffer.isView(r))return rF(r);if(r==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof r);if(oo(r,ArrayBuffer)||r&&oo(r.buffer,ArrayBuffer)||typeof SharedArrayBuffer!="undefined"&&(oo(r,SharedArrayBuffer)||r&&oo(r.buffer,SharedArrayBuffer)))return Mb(r,e,t);if(typeof r=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');let n=r.valueOf&&r.valueOf();if(n!=null&&n!==r)return A.from(n,e,t);let i=sF(r);if(i)return i;if(typeof Symbol!="undefined"&&Symbol.toPrimitive!=null&&typeof r[Symbol.toPrimitive]=="function")return A.from(r[Symbol.toPrimitive]("string"),e,t);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof r)}A.from=function(r,e,t){return fL(r,e,t)};Object.setPrototypeOf(A.prototype,Uint8Array.prototype);Object.setPrototypeOf(A,Uint8Array);function yL(r){if(typeof r!="number")throw new TypeError('"size" argument must be of type number');if(r<0)throw new RangeError('The value "'+r+'" is invalid for option "size"')}function iF(r,e,t){return yL(r),r<=0?Vo(r):e!==void 0?typeof t=="string"?Vo(r).fill(e,t):Vo(r).fill(e):Vo(r)}A.alloc=function(r,e,t){return iF(r,e,t)};function Rb(r){return yL(r),Vo(r<0?0:Fb(r)|0)}A.allocUnsafe=function(r){return Rb(r)};A.allocUnsafeSlow=function(r){return Rb(r)};function oF(r,e){if((typeof e!="string"||e==="")&&(e="utf8"),!A.isEncoding(e))throw new TypeError("Unknown encoding: "+e);let t=bL(r,e)|0,n=Vo(t),i=n.write(r,e);return i!==t&&(n=n.slice(0,i)),n}function Pb(r){let e=r.length<0?0:Fb(r.length)|0,t=Vo(e);for(let n=0;n<e;n+=1)t[n]=r[n]&255;return t}function rF(r){if(oo(r,Uint8Array)){let e=new Uint8Array(r);return Mb(e.buffer,e.byteOffset,e.byteLength)}return Pb(r)}function Mb(r,e,t){if(e<0||r.byteLength<e)throw new RangeError('"offset" is outside of buffer bounds');if(r.byteLength<e+(t||0))throw new RangeError('"length" is outside of buffer bounds');let n;return e===void 0&&t===void 0?n=new Uint8Array(r):t===void 0?n=new Uint8Array(r,e):n=new Uint8Array(r,e,t),Object.setPrototypeOf(n,A.prototype),n}function sF(r){if(A.isBuffer(r)){let e=Fb(r.length)|0,t=Vo(e);return t.length===0||r.copy(t,0,0,e),t}if(r.length!==void 0)return typeof r.length!="number"||Nb(r.length)?Vo(0):Pb(r);if(r.type==="Buffer"&&Array.isArray(r.data))return Pb(r.data)}function Fb(r){if(r>=om)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+om.toString(16)+" bytes");return r|0}function aF(r){return+r!=r&&(r=0),A.alloc(+r)}A.isBuffer=function(e){return e!=null&&e._isBuffer===!0&&e!==A.prototype};A.compare=function(e,t){if(oo(e,Uint8Array)&&(e=A.from(e,e.offset,e.byteLength)),oo(t,Uint8Array)&&(t=A.from(t,t.offset,t.byteLength)),!A.isBuffer(e)||!A.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let n=e.length,i=t.length;for(let o=0,s=Math.min(n,i);o<s;++o)if(e[o]!==t[o]){n=e[o],i=t[o];break}return n<i?-1:i<n?1:0};A.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}};A.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(e.length===0)return A.alloc(0);let n;if(t===void 0)for(t=0,n=0;n<e.length;++n)t+=e[n].length;let i=A.allocUnsafe(t),o=0;for(n=0;n<e.length;++n){let s=e[n];if(oo(s,Uint8Array))o+s.length>i.length?(A.isBuffer(s)||(s=A.from(s)),s.copy(i,o)):Uint8Array.prototype.set.call(i,s,o);else if(A.isBuffer(s))s.copy(i,o);else throw new TypeError('"list" argument must be an Array of Buffers');o+=s.length}return i};function bL(r,e){if(A.isBuffer(r))return r.length;if(ArrayBuffer.isView(r)||oo(r,ArrayBuffer))return r.byteLength;if(typeof r!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof r);let t=r.length,n=arguments.length>2&&arguments[2]===!0;if(!n&&t===0)return 0;let i=!1;for(;;)switch(e){case"ascii":case"latin1":case"binary":return t;case"utf8":case"utf-8":return Db(r).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return t*2;case"hex":return t>>>1;case"base64":return IL(r).length;default:if(i)return n?-1:Db(r).length;e=(""+e).toLowerCase(),i=!0}}A.byteLength=bL;function lF(r,e,t){let n=!1;if((e===void 0||e<0)&&(e=0),e>this.length||((t===void 0||t>this.length)&&(t=this.length),t<=0)||(t>>>=0,e>>>=0,t<=e))return"";for(r||(r="utf8");;)switch(r){case"hex":return bF(this,e,t);case"utf8":case"utf-8":return vL(this,e,t);case"ascii":return fF(this,e,t);case"latin1":case"binary":return yF(this,e,t);case"base64":return mF(this,e,t);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return SF(this,e,t);default:if(n)throw new TypeError("Unknown encoding: "+r);r=(r+"").toLowerCase(),n=!0}}A.prototype._isBuffer=!0;function Hs(r,e,t){let n=r[e];r[e]=r[t],r[t]=n}A.prototype.swap16=function(){let e=this.length;if(e%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)Hs(this,t,t+1);return this};A.prototype.swap32=function(){let e=this.length;if(e%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)Hs(this,t,t+3),Hs(this,t+1,t+2);return this};A.prototype.swap64=function(){let e=this.length;if(e%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)Hs(this,t,t+7),Hs(this,t+1,t+6),Hs(this,t+2,t+5),Hs(this,t+3,t+4);return this};A.prototype.toString=function(){let e=this.length;return e===0?"":arguments.length===0?vL(this,0,e):lF.apply(this,arguments)};A.prototype.toLocaleString=A.prototype.toString;A.prototype.equals=function(e){if(!A.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e?!0:A.compare(this,e)===0};A.prototype.inspect=function(){let e="",t=yl.INSPECT_MAX_BYTES;return e=this.toString("hex",0,t).replace(/(.{2})/g,"$1 ").trim(),this.length>t&&(e+=" ... "),"<Buffer "+e+">"};uL&&(A.prototype[uL]=A.prototype.inspect);A.prototype.compare=function(e,t,n,i,o){if(oo(e,Uint8Array)&&(e=A.from(e,e.offset,e.byteLength)),!A.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(t===void 0&&(t=0),n===void 0&&(n=e?e.length:0),i===void 0&&(i=0),o===void 0&&(o=this.length),t<0||n>e.length||i<0||o>this.length)throw new RangeError("out of range index");if(i>=o&&t>=n)return 0;if(i>=o)return-1;if(t>=n)return 1;if(t>>>=0,n>>>=0,i>>>=0,o>>>=0,this===e)return 0;let s=o-i,a=n-t,l=Math.min(s,a),c=this.slice(i,o),d=e.slice(t,n);for(let h=0;h<l;++h)if(c[h]!==d[h]){s=c[h],a=d[h];break}return s<a?-1:a<s?1:0};function SL(r,e,t,n,i){if(r.length===0)return-1;if(typeof t=="string"?(n=t,t=0):t>2147483647?t=2147483647:t<-2147483648&&(t=-2147483648),t=+t,Nb(t)&&(t=i?0:r.length-1),t<0&&(t=r.length+t),t>=r.length){if(i)return-1;t=r.length-1}else if(t<0)if(i)t=0;else return-1;if(typeof e=="string"&&(e=A.from(e,n)),A.isBuffer(e))return e.length===0?-1:pL(r,e,t,n,i);if(typeof e=="number")return e=e&255,typeof Uint8Array.prototype.indexOf=="function"?i?Uint8Array.prototype.indexOf.call(r,e,t):Uint8Array.prototype.lastIndexOf.call(r,e,t):pL(r,[e],t,n,i);throw new TypeError("val must be string, number or Buffer")}function pL(r,e,t,n,i){let o=1,s=r.length,a=e.length;if(n!==void 0&&(n=String(n).toLowerCase(),n==="ucs2"||n==="ucs-2"||n==="utf16le"||n==="utf-16le")){if(r.length<2||e.length<2)return-1;o=2,s/=2,a/=2,t/=2}function l(d,h){return o===1?d[h]:d.readUInt16BE(h*o)}let c;if(i){let d=-1;for(c=t;c<s;c++)if(l(r,c)===l(e,d===-1?0:c-d)){if(d===-1&&(d=c),c-d+1===a)return d*o}else d!==-1&&(c-=c-d),d=-1}else for(t+a>s&&(t=s-a),c=t;c>=0;c--){let d=!0;for(let h=0;h<a;h++)if(l(r,c+h)!==l(e,h)){d=!1;break}if(d)return c}return-1}A.prototype.includes=function(e,t,n){return this.indexOf(e,t,n)!==-1};A.prototype.indexOf=function(e,t,n){return SL(this,e,t,n,!0)};A.prototype.lastIndexOf=function(e,t,n){return SL(this,e,t,n,!1)};function dF(r,e,t,n){t=Number(t)||0;let i=r.length-t;n?(n=Number(n),n>i&&(n=i)):n=i;let o=e.length;n>o/2&&(n=o/2);let s;for(s=0;s<n;++s){let a=parseInt(e.substr(s*2,2),16);if(Nb(a))return s;r[t+s]=a}return s}function cF(r,e,t,n){return rm(Db(e,r.length-t),r,t,n)}function hF(r,e,t,n){return rm(_F(e),r,t,n)}function uF(r,e,t,n){return rm(IL(e),r,t,n)}function pF(r,e,t,n){return rm(wF(e,r.length-t),r,t,n)}A.prototype.write=function(e,t,n,i){if(t===void 0)i="utf8",n=this.length,t=0;else if(n===void 0&&typeof t=="string")i=t,n=this.length,t=0;else if(isFinite(t))t=t>>>0,isFinite(n)?(n=n>>>0,i===void 0&&(i="utf8")):(i=n,n=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");let o=this.length-t;if((n===void 0||n>o)&&(n=o),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");i||(i="utf8");let s=!1;for(;;)switch(i){case"hex":return dF(this,e,t,n);case"utf8":case"utf-8":return cF(this,e,t,n);case"ascii":case"latin1":case"binary":return hF(this,e,t,n);case"base64":return uF(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return pF(this,e,t,n);default:if(s)throw new TypeError("Unknown encoding: "+i);i=(""+i).toLowerCase(),s=!0}};A.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function mF(r,e,t){return e===0&&t===r.length?Lb.fromByteArray(r):Lb.fromByteArray(r.slice(e,t))}function vL(r,e,t){t=Math.min(r.length,t);let n=[],i=e;for(;i<t;){let o=r[i],s=null,a=o>239?4:o>223?3:o>191?2:1;if(i+a<=t){let l,c,d,h;switch(a){case 1:o<128&&(s=o);break;case 2:l=r[i+1],(l&192)===128&&(h=(o&31)<<6|l&63,h>127&&(s=h));break;case 3:l=r[i+1],c=r[i+2],(l&192)===128&&(c&192)===128&&(h=(o&15)<<12|(l&63)<<6|c&63,h>2047&&(h<55296||h>57343)&&(s=h));break;case 4:l=r[i+1],c=r[i+2],d=r[i+3],(l&192)===128&&(c&192)===128&&(d&192)===128&&(h=(o&15)<<18|(l&63)<<12|(c&63)<<6|d&63,h>65535&&h<1114112&&(s=h))}}s===null?(s=65533,a=1):s>65535&&(s-=65536,n.push(s>>>10&1023|55296),s=56320|s&1023),n.push(s),i+=a}return gF(n)}var mL=4096;function gF(r){let e=r.length;if(e<=mL)return String.fromCharCode.apply(String,r);let t="",n=0;for(;n<e;)t+=String.fromCharCode.apply(String,r.slice(n,n+=mL));return t}function fF(r,e,t){let n="";t=Math.min(r.length,t);for(let i=e;i<t;++i)n+=String.fromCharCode(r[i]&127);return n}function yF(r,e,t){let n="";t=Math.min(r.length,t);for(let i=e;i<t;++i)n+=String.fromCharCode(r[i]);return n}function bF(r,e,t){let n=r.length;(!e||e<0)&&(e=0),(!t||t<0||t>n)&&(t=n);let i="";for(let o=e;o<t;++o)i+=TF[r[o]];return i}function SF(r,e,t){let n=r.slice(e,t),i="";for(let o=0;o<n.length-1;o+=2)i+=String.fromCharCode(n[o]+n[o+1]*256);return i}A.prototype.slice=function(e,t){let n=this.length;e=~~e,t=t===void 0?n:~~t,e<0?(e+=n,e<0&&(e=0)):e>n&&(e=n),t<0?(t+=n,t<0&&(t=0)):t>n&&(t=n),t<e&&(t=e);let i=this.subarray(e,t);return Object.setPrototypeOf(i,A.prototype),i};function Xt(r,e,t){if(r%1!==0||r<0)throw new RangeError("offset is not uint");if(r+e>t)throw new RangeError("Trying to access beyond buffer length")}A.prototype.readUintLE=A.prototype.readUIntLE=function(e,t,n){e=e>>>0,t=t>>>0,n||Xt(e,t,this.length);let i=this[e],o=1,s=0;for(;++s<t&&(o*=256);)i+=this[e+s]*o;return i};A.prototype.readUintBE=A.prototype.readUIntBE=function(e,t,n){e=e>>>0,t=t>>>0,n||Xt(e,t,this.length);let i=this[e+--t],o=1;for(;t>0&&(o*=256);)i+=this[e+--t]*o;return i};A.prototype.readUint8=A.prototype.readUInt8=function(e,t){return e=e>>>0,t||Xt(e,1,this.length),this[e]};A.prototype.readUint16LE=A.prototype.readUInt16LE=function(e,t){return e=e>>>0,t||Xt(e,2,this.length),this[e]|this[e+1]<<8};A.prototype.readUint16BE=A.prototype.readUInt16BE=function(e,t){return e=e>>>0,t||Xt(e,2,this.length),this[e]<<8|this[e+1]};A.prototype.readUint32LE=A.prototype.readUInt32LE=function(e,t){return e=e>>>0,t||Xt(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};A.prototype.readUint32BE=A.prototype.readUInt32BE=function(e,t){return e=e>>>0,t||Xt(e,4,this.length),this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};A.prototype.readBigUInt64LE=Rr(function(e){e=e>>>0,fl(e,"offset");let t=this[e],n=this[e+7];(t===void 0||n===void 0)&&jc(e,this.length-8);let i=t+this[++e]*2**8+this[++e]*2**16+this[++e]*2**24,o=this[++e]+this[++e]*2**8+this[++e]*2**16+n*2**24;return BigInt(i)+(BigInt(o)<<BigInt(32))});A.prototype.readBigUInt64BE=Rr(function(e){e=e>>>0,fl(e,"offset");let t=this[e],n=this[e+7];(t===void 0||n===void 0)&&jc(e,this.length-8);let i=t*2**24+this[++e]*2**16+this[++e]*2**8+this[++e],o=this[++e]*2**24+this[++e]*2**16+this[++e]*2**8+n;return(BigInt(i)<<BigInt(32))+BigInt(o)});A.prototype.readIntLE=function(e,t,n){e=e>>>0,t=t>>>0,n||Xt(e,t,this.length);let i=this[e],o=1,s=0;for(;++s<t&&(o*=256);)i+=this[e+s]*o;return o*=128,i>=o&&(i-=Math.pow(2,8*t)),i};A.prototype.readIntBE=function(e,t,n){e=e>>>0,t=t>>>0,n||Xt(e,t,this.length);let i=t,o=1,s=this[e+--i];for(;i>0&&(o*=256);)s+=this[e+--i]*o;return o*=128,s>=o&&(s-=Math.pow(2,8*t)),s};A.prototype.readInt8=function(e,t){return e=e>>>0,t||Xt(e,1,this.length),this[e]&128?(255-this[e]+1)*-1:this[e]};A.prototype.readInt16LE=function(e,t){e=e>>>0,t||Xt(e,2,this.length);let n=this[e]|this[e+1]<<8;return n&32768?n|4294901760:n};A.prototype.readInt16BE=function(e,t){e=e>>>0,t||Xt(e,2,this.length);let n=this[e+1]|this[e]<<8;return n&32768?n|4294901760:n};A.prototype.readInt32LE=function(e,t){return e=e>>>0,t||Xt(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};A.prototype.readInt32BE=function(e,t){return e=e>>>0,t||Xt(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};A.prototype.readBigInt64LE=Rr(function(e){e=e>>>0,fl(e,"offset");let t=this[e],n=this[e+7];(t===void 0||n===void 0)&&jc(e,this.length-8);let i=this[e+4]+this[e+5]*2**8+this[e+6]*2**16+(n<<24);return(BigInt(i)<<BigInt(32))+BigInt(t+this[++e]*2**8+this[++e]*2**16+this[++e]*2**24)});A.prototype.readBigInt64BE=Rr(function(e){e=e>>>0,fl(e,"offset");let t=this[e],n=this[e+7];(t===void 0||n===void 0)&&jc(e,this.length-8);let i=(t<<24)+this[++e]*2**16+this[++e]*2**8+this[++e];return(BigInt(i)<<BigInt(32))+BigInt(this[++e]*2**24+this[++e]*2**16+this[++e]*2**8+n)});A.prototype.readFloatLE=function(e,t){return e=e>>>0,t||Xt(e,4,this.length),gl.read(this,e,!0,23,4)};A.prototype.readFloatBE=function(e,t){return e=e>>>0,t||Xt(e,4,this.length),gl.read(this,e,!1,23,4)};A.prototype.readDoubleLE=function(e,t){return e=e>>>0,t||Xt(e,8,this.length),gl.read(this,e,!0,52,8)};A.prototype.readDoubleBE=function(e,t){return e=e>>>0,t||Xt(e,8,this.length),gl.read(this,e,!1,52,8)};function Dn(r,e,t,n,i,o){if(!A.isBuffer(r))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>i||e<o)throw new RangeError('"value" argument is out of bounds');if(t+n>r.length)throw new RangeError("Index out of range")}A.prototype.writeUintLE=A.prototype.writeUIntLE=function(e,t,n,i){if(e=+e,t=t>>>0,n=n>>>0,!i){let a=Math.pow(2,8*n)-1;Dn(this,e,t,n,a,0)}let o=1,s=0;for(this[t]=e&255;++s<n&&(o*=256);)this[t+s]=e/o&255;return t+n};A.prototype.writeUintBE=A.prototype.writeUIntBE=function(e,t,n,i){if(e=+e,t=t>>>0,n=n>>>0,!i){let a=Math.pow(2,8*n)-1;Dn(this,e,t,n,a,0)}let o=n-1,s=1;for(this[t+o]=e&255;--o>=0&&(s*=256);)this[t+o]=e/s&255;return t+n};A.prototype.writeUint8=A.prototype.writeUInt8=function(e,t,n){return e=+e,t=t>>>0,n||Dn(this,e,t,1,255,0),this[t]=e&255,t+1};A.prototype.writeUint16LE=A.prototype.writeUInt16LE=function(e,t,n){return e=+e,t=t>>>0,n||Dn(this,e,t,2,65535,0),this[t]=e&255,this[t+1]=e>>>8,t+2};A.prototype.writeUint16BE=A.prototype.writeUInt16BE=function(e,t,n){return e=+e,t=t>>>0,n||Dn(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=e&255,t+2};A.prototype.writeUint32LE=A.prototype.writeUInt32LE=function(e,t,n){return e=+e,t=t>>>0,n||Dn(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=e&255,t+4};A.prototype.writeUint32BE=A.prototype.writeUInt32BE=function(e,t,n){return e=+e,t=t>>>0,n||Dn(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=e&255,t+4};function xL(r,e,t,n,i){EL(e,n,i,r,t,7);let o=Number(e&BigInt(4294967295));r[t++]=o,o=o>>8,r[t++]=o,o=o>>8,r[t++]=o,o=o>>8,r[t++]=o;let s=Number(e>>BigInt(32)&BigInt(4294967295));return r[t++]=s,s=s>>8,r[t++]=s,s=s>>8,r[t++]=s,s=s>>8,r[t++]=s,t}function CL(r,e,t,n,i){EL(e,n,i,r,t,7);let o=Number(e&BigInt(4294967295));r[t+7]=o,o=o>>8,r[t+6]=o,o=o>>8,r[t+5]=o,o=o>>8,r[t+4]=o;let s=Number(e>>BigInt(32)&BigInt(4294967295));return r[t+3]=s,s=s>>8,r[t+2]=s,s=s>>8,r[t+1]=s,s=s>>8,r[t]=s,t+8}A.prototype.writeBigUInt64LE=Rr(function(e,t=0){return xL(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))});A.prototype.writeBigUInt64BE=Rr(function(e,t=0){return CL(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))});A.prototype.writeIntLE=function(e,t,n,i){if(e=+e,t=t>>>0,!i){let l=Math.pow(2,8*n-1);Dn(this,e,t,n,l-1,-l)}let o=0,s=1,a=0;for(this[t]=e&255;++o<n&&(s*=256);)e<0&&a===0&&this[t+o-1]!==0&&(a=1),this[t+o]=(e/s>>0)-a&255;return t+n};A.prototype.writeIntBE=function(e,t,n,i){if(e=+e,t=t>>>0,!i){let l=Math.pow(2,8*n-1);Dn(this,e,t,n,l-1,-l)}let o=n-1,s=1,a=0;for(this[t+o]=e&255;--o>=0&&(s*=256);)e<0&&a===0&&this[t+o+1]!==0&&(a=1),this[t+o]=(e/s>>0)-a&255;return t+n};A.prototype.writeInt8=function(e,t,n){return e=+e,t=t>>>0,n||Dn(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=e&255,t+1};A.prototype.writeInt16LE=function(e,t,n){return e=+e,t=t>>>0,n||Dn(this,e,t,2,32767,-32768),this[t]=e&255,this[t+1]=e>>>8,t+2};A.prototype.writeInt16BE=function(e,t,n){return e=+e,t=t>>>0,n||Dn(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=e&255,t+2};A.prototype.writeInt32LE=function(e,t,n){return e=+e,t=t>>>0,n||Dn(this,e,t,4,2147483647,-2147483648),this[t]=e&255,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4};A.prototype.writeInt32BE=function(e,t,n){return e=+e,t=t>>>0,n||Dn(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=e&255,t+4};A.prototype.writeBigInt64LE=Rr(function(e,t=0){return xL(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});A.prototype.writeBigInt64BE=Rr(function(e,t=0){return CL(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});function _L(r,e,t,n,i,o){if(t+n>r.length)throw new RangeError("Index out of range");if(t<0)throw new RangeError("Index out of range")}function wL(r,e,t,n,i){return e=+e,t=t>>>0,i||_L(r,e,t,4,34028234663852886e22,-34028234663852886e22),gl.write(r,e,t,n,23,4),t+4}A.prototype.writeFloatLE=function(e,t,n){return wL(this,e,t,!0,n)};A.prototype.writeFloatBE=function(e,t,n){return wL(this,e,t,!1,n)};function TL(r,e,t,n,i){return e=+e,t=t>>>0,i||_L(r,e,t,8,17976931348623157e292,-17976931348623157e292),gl.write(r,e,t,n,52,8),t+8}A.prototype.writeDoubleLE=function(e,t,n){return TL(this,e,t,!0,n)};A.prototype.writeDoubleBE=function(e,t,n){return TL(this,e,t,!1,n)};A.prototype.copy=function(e,t,n,i){if(!A.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),!i&&i!==0&&(i=this.length),t>=e.length&&(t=e.length),t||(t=0),i>0&&i<n&&(i=n),i===n||e.length===0||this.length===0)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(i<0)throw new RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),e.length-t<i-n&&(i=e.length-t+n);let o=i-n;return this===e&&typeof Uint8Array.prototype.copyWithin=="function"?this.copyWithin(t,n,i):Uint8Array.prototype.set.call(e,this.subarray(n,i),t),o};A.prototype.fill=function(e,t,n,i){if(typeof e=="string"){if(typeof t=="string"?(i=t,t=0,n=this.length):typeof n=="string"&&(i=n,n=this.length),i!==void 0&&typeof i!="string")throw new TypeError("encoding must be a string");if(typeof i=="string"&&!A.isEncoding(i))throw new TypeError("Unknown encoding: "+i);if(e.length===1){let s=e.charCodeAt(0);(i==="utf8"&&s<128||i==="latin1")&&(e=s)}}else typeof e=="number"?e=e&255:typeof e=="boolean"&&(e=Number(e));if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;t=t>>>0,n=n===void 0?this.length:n>>>0,e||(e=0);let o;if(typeof e=="number")for(o=t;o<n;++o)this[o]=e;else{let s=A.isBuffer(e)?e:A.from(e,i),a=s.length;if(a===0)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(o=0;o<n-t;++o)this[o+t]=s[o%a]}return this};var ml={};function Ab(r,e,t){ml[r]=class extends t{constructor(){super();Object.defineProperty(this,"message",{value:e.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${r}]`,this.stack,delete this.name}get code(){return r}set code(i){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:i,writable:!0})}toString(){return`${this.name} [${r}]: ${this.message}`}}}Ab("ERR_BUFFER_OUT_OF_BOUNDS",function(r){return r?`${r} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError);Ab("ERR_INVALID_ARG_TYPE",function(r,e){return`The "${r}" argument must be of type number. Received type ${typeof e}`},TypeError);Ab("ERR_OUT_OF_RANGE",function(r,e,t){let n=`The value of "${r}" is out of range.`,i=t;return Number.isInteger(t)&&Math.abs(t)>2**32?i=gL(String(t)):typeof t=="bigint"&&(i=String(t),(t>BigInt(2)**BigInt(32)||t<-(BigInt(2)**BigInt(32)))&&(i=gL(i)),i+="n"),n+=` It must be ${e}. Received ${i}`,n},RangeError);function gL(r){let e="",t=r.length,n=r[0]==="-"?1:0;for(;t>=n+4;t-=3)e=`_${r.slice(t-3,t)}${e}`;return`${r.slice(0,t)}${e}`}function vF(r,e,t){fl(e,"offset"),(r[e]===void 0||r[e+t]===void 0)&&jc(e,r.length-(t+1))}function EL(r,e,t,n,i,o){if(r>t||r<e){let s=typeof e=="bigint"?"n":"",a;throw o>3?e===0||e===BigInt(0)?a=`>= 0${s} and < 2${s} ** ${(o+1)*8}${s}`:a=`>= -(2${s} ** ${(o+1)*8-1}${s}) and < 2 ** ${(o+1)*8-1}${s}`:a=`>= ${e}${s} and <= ${t}${s}`,new ml.ERR_OUT_OF_RANGE("value",a,r)}vF(n,i,o)}function fl(r,e){if(typeof r!="number")throw new ml.ERR_INVALID_ARG_TYPE(e,"number",r)}function jc(r,e,t){throw Math.floor(r)!==r?(fl(r,t),new ml.ERR_OUT_OF_RANGE(t||"offset","an integer",r)):e<0?new ml.ERR_BUFFER_OUT_OF_BOUNDS:new ml.ERR_OUT_OF_RANGE(t||"offset",`>= ${t?1:0} and <= ${e}`,r)}var xF=/[^+/0-9A-Za-z-_]/g;function CF(r){if(r=r.split("=")[0],r=r.trim().replace(xF,""),r.length<2)return"";for(;r.length%4!==0;)r=r+"=";return r}function Db(r,e){e=e||1/0;let t,n=r.length,i=null,o=[];for(let s=0;s<n;++s){if(t=r.charCodeAt(s),t>55295&&t<57344){if(!i){if(t>56319){(e-=3)>-1&&o.push(239,191,189);continue}else if(s+1===n){(e-=3)>-1&&o.push(239,191,189);continue}i=t;continue}if(t<56320){(e-=3)>-1&&o.push(239,191,189),i=t;continue}t=(i-55296<<10|t-56320)+65536}else i&&(e-=3)>-1&&o.push(239,191,189);if(i=null,t<128){if((e-=1)<0)break;o.push(t)}else if(t<2048){if((e-=2)<0)break;o.push(t>>6|192,t&63|128)}else if(t<65536){if((e-=3)<0)break;o.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((e-=4)<0)break;o.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else throw new Error("Invalid code point")}return o}function _F(r){let e=[];for(let t=0;t<r.length;++t)e.push(r.charCodeAt(t)&255);return e}function wF(r,e){let t,n,i,o=[];for(let s=0;s<r.length&&!((e-=2)<0);++s)t=r.charCodeAt(s),n=t>>8,i=t%256,o.push(i),o.push(n);return o}function IL(r){return Lb.toByteArray(CF(r))}function rm(r,e,t,n){let i;for(i=0;i<n&&!(i+t>=e.length||i>=r.length);++i)e[i+t]=r[i];return i}function oo(r,e){return r instanceof e||r!=null&&r.constructor!=null&&r.constructor.name!=null&&r.constructor.name===e.name}function Nb(r){return r!==r}var TF=function(){let r="0123456789abcdef",e=new Array(256);for(let t=0;t<16;++t){let n=t*16;for(let i=0;i<16;++i)e[n+i]=r[t]+r[i]}return e}();function Rr(r){return typeof BigInt=="undefined"?EF:r}function EF(){throw new Error("BigInt not supported")}});var LL=lo(()=>{});var Eb={};FL(Eb,{CancellationTokenSource:()=>r0,Emitter:()=>ns,KeyCode:()=>s0,KeyMod:()=>a0,MarkerSeverity:()=>u0,MarkerTag:()=>p0,Position:()=>l0,Range:()=>d0,Selection:()=>c0,SelectionDirection:()=>h0,Token:()=>m0,Uri:()=>ig,editor:()=>bu,languages:()=>et});var og=function(){function r(e,t,n){this._onDidChange=new ns,this._languageId=e,this.setOptions(t),this.setModeConfiguration(n)}return Object.defineProperty(r.prototype,"onDidChange",{get:function(){return this._onDidChange.event},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"languageId",{get:function(){return this._languageId},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"modeConfiguration",{get:function(){return this._modeConfiguration},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"diagnosticsOptions",{get:function(){return this.options},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"options",{get:function(){return this._options},enumerable:!1,configurable:!0}),r.prototype.setOptions=function(e){this._options=e||Object.create(null),this._onDidChange.fire(this)},r.prototype.setDiagnosticsOptions=function(e){this.setOptions(e)},r.prototype.setModeConfiguration=function(e){this._modeConfiguration=e||Object.create(null),this._onDidChange.fire(this)},r}(),rg={validate:!0,lint:{compatibleVendorPrefixes:"ignore",vendorPrefix:"warning",duplicateProperties:"warning",emptyRules:"warning",importStatement:"ignore",boxModel:"ignore",universalSelector:"ignore",zeroUnits:"ignore",fontFaceProperties:"warning",hexColorLength:"error",argumentsInColorFunction:"error",unknownProperties:"warning",ieHack:"ignore",unknownVendorSpecificProperties:"ignore",propertyIgnoredDueToDisplay:"warning",important:"ignore",float:"ignore",idSelector:"ignore"},data:{useDefaultDataProvider:!0}},sg={completionItems:!0,hovers:!0,documentSymbols:!0,definitions:!0,references:!0,documentHighlights:!0,rename:!0,colors:!0,foldingRanges:!0,diagnostics:!0,selectionRanges:!0},Jx=new og("css",rg,sg),Qx=new og("scss",rg,sg),eC=new og("less",rg,sg);et.css={cssDefaults:Jx,lessDefaults:eC,scssDefaults:Qx};function ag(){return import("./cssMode-32TQMK3J.mjs")}et.onLanguage("less",function(){ag().then(function(r){return r.setupMode(eC)})});et.onLanguage("scss",function(){ag().then(function(r){return r.setupMode(Qx)})});et.onLanguage("css",function(){ag().then(function(r){return r.setupMode(Jx)})});var g0=function(){function r(e,t,n){this._onDidChange=new ns,this._languageId=e,this.setDiagnosticsOptions(t),this.setModeConfiguration(n)}return Object.defineProperty(r.prototype,"onDidChange",{get:function(){return this._onDidChange.event},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"languageId",{get:function(){return this._languageId},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"modeConfiguration",{get:function(){return this._modeConfiguration},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"diagnosticsOptions",{get:function(){return this._diagnosticsOptions},enumerable:!1,configurable:!0}),r.prototype.setDiagnosticsOptions=function(e){this._diagnosticsOptions=e||Object.create(null),this._onDidChange.fire(this)},r.prototype.setModeConfiguration=function(e){this._modeConfiguration=e||Object.create(null),this._onDidChange.fire(this)},r}(),f0={validate:!0,allowComments:!0,schemas:[],enableSchemaRequest:!1,schemaRequest:"warning",schemaValidation:"warning",comments:"error",trailingCommas:"error"},y0={documentFormattingEdits:!0,documentRangeFormattingEdits:!0,completionItems:!0,hovers:!0,documentSymbols:!0,tokens:!0,colors:!0,foldingRanges:!0,diagnostics:!0,selectionRanges:!0},tC=new g0("json",f0,y0);et.json={jsonDefaults:tC};function b0(){return import("./jsonMode-Y4JAGR7J.mjs")}et.register({id:"json",extensions:[".json",".bowerrc",".jshintrc",".jscsrc",".eslintrc",".babelrc",".har"],aliases:["JSON","json"],mimetypes:["application/json"]});et.onLanguage("json",function(){b0().then(function(r){return r.setupMode(tC)})});var S0=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},v0=function(r,e){var t={label:0,sent:function(){if(o[0]&1)throw o[1];return o[1]},trys:[],ops:[]},n,i,o,s;return s={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(s[Symbol.iterator]=function(){return this}),s;function a(c){return function(d){return l([c,d])}}function l(c){if(n)throw new TypeError("Generator is already executing.");for(;t;)try{if(n=1,i&&(o=c[0]&2?i.return:c[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,c[1])).done)return o;switch(i=0,o&&(c=[c[0]&2,o.value]),c[0]){case 0:case 1:o=c;break;case 4:return t.label++,{value:c[1],done:!1};case 5:t.label++,i=c[1],c=[0];continue;case 7:c=t.ops.pop(),t.trys.pop();continue;default:if(o=t.trys,!(o=o.length>0&&o[o.length-1])&&(c[0]===6||c[0]===2)){t=0;continue}if(c[0]===3&&(!o||c[1]>o[0]&&c[1]<o[3])){t.label=c[1];break}if(c[0]===6&&t.label<o[1]){t.label=o[1],o=c;break}if(o&&t.label<o[2]){t.label=o[2],t.ops.push(c);break}o[2]&&t.ops.pop(),t.trys.pop();continue}c=e.call(r,t)}catch(d){c=[6,d],i=0}finally{n=o=0}if(c[0]&5)throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}},x0=function(){function r(e,t,n){this._onDidChange=new ns,this._languageId=e,this.setOptions(t),this.setModeConfiguration(n)}return Object.defineProperty(r.prototype,"onDidChange",{get:function(){return this._onDidChange.event},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"languageId",{get:function(){return this._languageId},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"options",{get:function(){return this._options},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"modeConfiguration",{get:function(){return this._modeConfiguration},enumerable:!1,configurable:!0}),r.prototype.setOptions=function(e){this._options=e||Object.create(null),this._onDidChange.fire(this)},r.prototype.setModeConfiguration=function(e){this._modeConfiguration=e||Object.create(null),this._onDidChange.fire(this)},r}(),C0={tabSize:4,insertSpaces:!1,wrapLineLength:120,unformatted:'default": "a, abbr, acronym, b, bdo, big, br, button, cite, code, dfn, em, i, img, input, kbd, label, map, object, q, samp, select, small, span, strong, sub, sup, textarea, tt, var',contentUnformatted:"pre",indentInnerHtml:!1,preserveNewLines:!0,maxPreserveNewLines:null,indentHandlebars:!1,endWithNewline:!1,extraLiners:"head, body, /html",wrapAttributes:"auto"},Su={format:C0,suggest:{},data:{useDefaultDataProvider:!0}};function vu(r){return{completionItems:!0,hovers:!0,documentSymbols:!0,links:!0,documentHighlights:!0,rename:!0,colors:!0,foldingRanges:!0,selectionRanges:!0,diagnostics:r===dd,documentFormattingEdits:r===dd,documentRangeFormattingEdits:r===dd}}var dd="html",nC="handlebars",iC="razor",oC=xu(dd,Su,vu(dd)),_0=oC.defaults,rC=xu(nC,Su,vu(nC)),w0=rC.defaults,sC=xu(iC,Su,vu(iC)),T0=sC.defaults;et.html={htmlDefaults:_0,razorDefaults:T0,handlebarDefaults:w0,htmlLanguageService:oC,handlebarLanguageService:rC,razorLanguageService:sC,registerHTMLLanguageService:xu};function E0(){return import("./htmlMode-TZMB67QO.mjs")}function xu(r,e,t){var n=this;e===void 0&&(e=Su),t===void 0&&(t=vu(r));var i=new x0(r,e,t),o,s=et.onLanguage(r,function(){return S0(n,void 0,void 0,function(){return v0(this,function(a){switch(a.label){case 0:return[4,E0()];case 1:return o=a.sent().setupMode(i),[2]}})})});return{defaults:i,dispose:function(){s.dispose(),o==null||o.dispose(),o=void 0}}}var aC={},lg={},I0=function(){function r(e){var t=this;this._languageId=e,this._loadingTriggered=!1,this._lazyLoadPromise=new Promise(function(n,i){t._lazyLoadPromiseResolve=n,t._lazyLoadPromiseReject=i})}return r.getOrCreate=function(e){return lg[e]||(lg[e]=new r(e)),lg[e]},r.prototype.whenLoaded=function(){return this._lazyLoadPromise},r.prototype.load=function(){var e=this;return this._loadingTriggered||(this._loadingTriggered=!0,aC[this._languageId].loader().then(function(t){return e._lazyLoadPromiseResolve(t)},function(t){return e._lazyLoadPromiseReject(t)})),this._lazyLoadPromise},r}();function k(r){var e=r.id;aC[e]=r,et.register(r);var t=I0.getOrCreate(e);et.setMonarchTokensProvider(e,t.whenLoaded().then(function(n){return n.language})),et.onLanguage(e,function(){t.load().then(function(n){et.setLanguageConfiguration(e,n.conf)})})}k({id:"abap",extensions:[".abap"],aliases:["abap","ABAP"],loader:function(){return import("./abap-CZHYDMZP.mjs")}});k({id:"apex",extensions:[".cls"],aliases:["Apex","apex"],mimetypes:["text/x-apex-source","text/x-apex"],loader:function(){return import("./apex-PVF5KN66.mjs")}});k({id:"azcli",extensions:[".azcli"],aliases:["Azure CLI","azcli"],loader:function(){return import("./azcli-F25VRGE5.mjs")}});k({id:"bat",extensions:[".bat",".cmd"],aliases:["Batch","bat"],loader:function(){return import("./bat-ODGFMDWA.mjs")}});k({id:"bicep",extensions:[".bicep"],aliases:["Bicep"],loader:function(){return import("./bicep-ZWZDHBFZ.mjs")}});k({id:"cameligo",extensions:[".mligo"],aliases:["Cameligo"],loader:function(){return import("./cameligo-JYUGOXO7.mjs")}});k({id:"clojure",extensions:[".clj",".cljs",".cljc",".edn"],aliases:["clojure","Clojure"],loader:function(){return import("./clojure-4LMMK5S2.mjs")}});k({id:"coffeescript",extensions:[".coffee"],aliases:["CoffeeScript","coffeescript","coffee"],mimetypes:["text/x-coffeescript","text/coffeescript"],loader:function(){return import("./coffee-TCNESIFS.mjs")}});k({id:"c",extensions:[".c",".h"],aliases:["C","c"],loader:function(){return import("./cpp-2WBQ7GLH.mjs")}});k({id:"cpp",extensions:[".cpp",".cc",".cxx",".hpp",".hh",".hxx"],aliases:["C++","Cpp","cpp"],loader:function(){return import("./cpp-2WBQ7GLH.mjs")}});k({id:"csharp",extensions:[".cs",".csx",".cake"],aliases:["C#","csharp"],loader:function(){return import("./csharp-V4XPXHOS.mjs")}});k({id:"csp",extensions:[],aliases:["CSP","csp"],loader:function(){return import("./csp-KGOQWOKI.mjs")}});k({id:"css",extensions:[".css"],aliases:["CSS","css"],mimetypes:["text/css"],loader:function(){return import("./css-HQ3SO4T4.mjs")}});k({id:"dart",extensions:[".dart"],aliases:["Dart","dart"],mimetypes:["text/x-dart-source","text/x-dart"],loader:function(){return import("./dart-CMZWDR4T.mjs")}});k({id:"dockerfile",extensions:[".dockerfile"],filenames:["Dockerfile"],aliases:["Dockerfile"],loader:function(){return import("./dockerfile-M4HH3OHT.mjs")}});k({id:"ecl",extensions:[".ecl"],aliases:["ECL","Ecl","ecl"],loader:function(){return import("./ecl-MHAGUGFV.mjs")}});k({id:"elixir",extensions:[".ex",".exs"],aliases:["Elixir","elixir","ex"],loader:function(){return import("./elixir-ZYQSVQ7L.mjs")}});k({id:"flow9",extensions:[".flow"],aliases:["Flow9","Flow","flow9","flow"],loader:function(){return import("./flow9-56CZYS2L.mjs")}});k({id:"fsharp",extensions:[".fs",".fsi",".ml",".mli",".fsx",".fsscript"],aliases:["F#","FSharp","fsharp"],loader:function(){return import("./fsharp-W5FITXT2.mjs")}});k({id:"go",extensions:[".go"],aliases:["Go"],loader:function(){return import("./go-KWUX26A4.mjs")}});k({id:"graphql",extensions:[".graphql",".gql"],aliases:["GraphQL","graphql","gql"],mimetypes:["application/graphql"],loader:function(){return import("./graphql-762HJB7C.mjs")}});k({id:"handlebars",extensions:[".handlebars",".hbs"],aliases:["Handlebars","handlebars","hbs"],mimetypes:["text/x-handlebars-template"],loader:function(){return import("./handlebars-27WQOGW4.mjs")}});k({id:"hcl",extensions:[".tf",".tfvars",".hcl"],aliases:["Terraform","tf","HCL","hcl"],loader:function(){return import("./hcl-H75UL73B.mjs")}});k({id:"html",extensions:[".html",".htm",".shtml",".xhtml",".mdoc",".jsp",".asp",".aspx",".jshtm"],aliases:["HTML","htm","html","xhtml"],mimetypes:["text/html","text/x-jshtm","text/template","text/ng-template"],loader:function(){return import("./html-F7X62SML.mjs")}});k({id:"ini",extensions:[".ini",".properties",".gitconfig"],filenames:["config",".gitattributes",".gitconfig",".editorconfig"],aliases:["Ini","ini"],loader:function(){return import("./ini-NBXISNM5.mjs")}});k({id:"java",extensions:[".java",".jav"],aliases:["Java","java"],mimetypes:["text/x-java-source","text/x-java"],loader:function(){return import("./java-IQMWMIJ3.mjs")}});k({id:"javascript",extensions:[".js",".es6",".jsx",".mjs"],firstLine:"^#!.*\\bnode",filenames:["jakefile"],aliases:["JavaScript","javascript","js"],mimetypes:["text/javascript"],loader:function(){return import("./javascript-7T6PN4FD.mjs")}});k({id:"julia",extensions:[".jl"],aliases:["julia","Julia"],loader:function(){return import("./julia-FSBZELC7.mjs")}});k({id:"kotlin",extensions:[".kt"],aliases:["Kotlin","kotlin"],mimetypes:["text/x-kotlin-source","text/x-kotlin"],loader:function(){return import("./kotlin-NDV3YM35.mjs")}});k({id:"less",extensions:[".less"],aliases:["Less","less"],mimetypes:["text/x-less","text/less"],loader:function(){return import("./less-W7ONCS25.mjs")}});k({id:"lexon",extensions:[".lex"],aliases:["Lexon"],loader:function(){return import("./lexon-BJ67HKJ6.mjs")}});k({id:"lua",extensions:[".lua"],aliases:["Lua","lua"],loader:function(){return import("./lua-7LEBTSGD.mjs")}});k({id:"liquid",extensions:[".liquid",".html.liquid"],aliases:["Liquid","liquid"],mimetypes:["application/liquid"],loader:function(){return import("./liquid-33DYZ2NT.mjs")}});k({id:"m3",extensions:[".m3",".i3",".mg",".ig"],aliases:["Modula-3","Modula3","modula3","m3"],loader:function(){return import("./m3-6NLFSR5S.mjs")}});k({id:"markdown",extensions:[".md",".markdown",".mdown",".mkdn",".mkd",".mdwn",".mdtxt",".mdtext"],aliases:["Markdown","markdown"],loader:function(){return import("./markdown-M5J2WCPI.mjs")}});k({id:"mips",extensions:[".s"],aliases:["MIPS","MIPS-V"],mimetypes:["text/x-mips","text/mips","text/plaintext"],loader:function(){return import("./mips-VJ5MXIPB.mjs")}});k({id:"msdax",extensions:[".dax",".msdax"],aliases:["DAX","MSDAX"],loader:function(){return import("./msdax-UBE35LTZ.mjs")}});k({id:"mysql",extensions:[],aliases:["MySQL","mysql"],loader:function(){return import("./mysql-SPEUPIOB.mjs")}});k({id:"objective-c",extensions:[".m"],aliases:["Objective-C"],loader:function(){return import("./objective-c-MILD76DP.mjs")}});k({id:"pascal",extensions:[".pas",".p",".pp"],aliases:["Pascal","pas"],mimetypes:["text/x-pascal-source","text/x-pascal"],loader:function(){return import("./pascal-6FHLQZJM.mjs")}});k({id:"pascaligo",extensions:[".ligo"],aliases:["Pascaligo","ligo"],loader:function(){return import("./pascaligo-F5OUUEQU.mjs")}});k({id:"perl",extensions:[".pl"],aliases:["Perl","pl"],loader:function(){return import("./perl-6FPBNCYY.mjs")}});k({id:"pgsql",extensions:[],aliases:["PostgreSQL","postgres","pg","postgre"],loader:function(){return import("./pgsql-AJGTH6HT.mjs")}});k({id:"php",extensions:[".php",".php4",".php5",".phtml",".ctp"],aliases:["PHP","php"],mimetypes:["application/x-php"],loader:function(){return import("./php-PXLFIFMG.mjs")}});k({id:"pla",extensions:[".pla"],loader:function(){return import("./pla-B5PIH32D.mjs")}});k({id:"postiats",extensions:[".dats",".sats",".hats"],aliases:["ATS","ATS/Postiats"],loader:function(){return import("./postiats-N6AZDJ7O.mjs")}});k({id:"powerquery",extensions:[".pq",".pqm"],aliases:["PQ","M","Power Query","Power Query M"],loader:function(){return import("./powerquery-Y2BARTJC.mjs")}});k({id:"powershell",extensions:[".ps1",".psm1",".psd1"],aliases:["PowerShell","powershell","ps","ps1"],loader:function(){return import("./powershell-INLJSQ4V.mjs")}});k({id:"proto",extensions:[".proto"],aliases:["protobuf","Protocol Buffers"],loader:function(){return import("./protobuf-YAUJAIXZ.mjs")}});k({id:"pug",extensions:[".jade",".pug"],aliases:["Pug","Jade","jade"],loader:function(){return import("./pug-UD37TKYV.mjs")}});k({id:"python",extensions:[".py",".rpy",".pyw",".cpy",".gyp",".gypi"],aliases:["Python","py"],firstLine:"^#!/.*\\bpython[0-9.-]*\\b",loader:function(){return import("./python-24OVSUS5.mjs")}});k({id:"qsharp",extensions:[".qs"],aliases:["Q#","qsharp"],loader:function(){return import("./qsharp-ZFU3GOGU.mjs")}});k({id:"r",extensions:[".r",".rhistory",".rmd",".rprofile",".rt"],aliases:["R","r"],loader:function(){return import("./r-5P7BR24S.mjs")}});k({id:"razor",extensions:[".cshtml"],aliases:["Razor","razor"],mimetypes:["text/x-cshtml"],loader:function(){return import("./razor-Z7EY6MIR.mjs")}});k({id:"redis",extensions:[".redis"],aliases:["redis"],loader:function(){return import("./redis-RCOVJRVI.mjs")}});k({id:"redshift",extensions:[],aliases:["Redshift","redshift"],loader:function(){return import("./redshift-KYYAEXWR.mjs")}});k({id:"restructuredtext",extensions:[".rst"],aliases:["reStructuredText","restructuredtext"],loader:function(){return import("./restructuredtext-AQAR65FU.mjs")}});k({id:"ruby",extensions:[".rb",".rbx",".rjs",".gemspec",".pp"],filenames:["rakefile","Gemfile"],aliases:["Ruby","rb"],loader:function(){return import("./ruby-VEB3EVVK.mjs")}});k({id:"rust",extensions:[".rs",".rlib"],aliases:["Rust","rust"],loader:function(){return import("./rust-CWRNP4GK.mjs")}});k({id:"sb",extensions:[".sb"],aliases:["Small Basic","sb"],loader:function(){return import("./sb-NLVGFH64.mjs")}});k({id:"scala",extensions:[".scala",".sc",".sbt"],aliases:["Scala","scala","SBT","Sbt","sbt","Dotty","dotty"],mimetypes:["text/x-scala-source","text/x-scala","text/x-sbt","text/x-dotty"],loader:function(){return import("./scala-BQBPL4CI.mjs")}});k({id:"scheme",extensions:[".scm",".ss",".sch",".rkt"],aliases:["scheme","Scheme"],loader:function(){return import("./scheme-K53BRSRP.mjs")}});k({id:"scss",extensions:[".scss"],aliases:["Sass","sass","scss"],mimetypes:["text/x-scss","text/scss"],loader:function(){return import("./scss-DBVUG6JO.mjs")}});k({id:"shell",extensions:[".sh",".bash"],aliases:["Shell","sh"],loader:function(){return import("./shell-TZ537FJB.mjs")}});k({id:"sol",extensions:[".sol"],aliases:["sol","solidity","Solidity"],loader:function(){return import("./solidity-SJEZ3EJR.mjs")}});k({id:"aes",extensions:[".aes"],aliases:["aes","sophia","Sophia"],loader:function(){return import("./sophia-H3DTLYFU.mjs")}});k({id:"sparql",extensions:[".rq"],aliases:["sparql","SPARQL"],loader:function(){return import("./sparql-MDMIZONA.mjs")}});k({id:"sql",extensions:[".sql"],aliases:["SQL"],loader:function(){return import("./sql-SVDLEP7J.mjs")}});k({id:"st",extensions:[".st",".iecst",".iecplc",".lc3lib"],aliases:["StructuredText","scl","stl"],loader:function(){return import("./st-M6T2OHBB.mjs")}});k({id:"swift",aliases:["Swift","swift"],extensions:[".swift"],mimetypes:["text/swift"],loader:function(){return import("./swift-MF5XJSJW.mjs")}});k({id:"systemverilog",extensions:[".sv",".svh"],aliases:["SV","sv","SystemVerilog","systemverilog"],loader:function(){return import("./systemverilog-JBOO5KFF.mjs")}});k({id:"verilog",extensions:[".v",".vh"],aliases:["V","v","Verilog","verilog"],loader:function(){return import("./systemverilog-JBOO5KFF.mjs")}});k({id:"tcl",extensions:[".tcl"],aliases:["tcl","Tcl","tcltk","TclTk","tcl/tk","Tcl/Tk"],loader:function(){return import("./tcl-V65SBX2G.mjs")}});k({id:"twig",extensions:[".twig"],aliases:["Twig","twig"],mimetypes:["text/x-twig"],loader:function(){return import("./twig-L7QBRDKH.mjs")}});k({id:"typescript",extensions:[".ts",".tsx"],aliases:["TypeScript","ts","typescript"],mimetypes:["text/typescript"],loader:function(){return import("./typescript-UFSTO3VZ.mjs")}});k({id:"vb",extensions:[".vb"],aliases:["Visual Basic","vb"],loader:function(){return import("./vb-BS7CNK3D.mjs")}});k({id:"xml",extensions:[".xml",".dtd",".ascx",".csproj",".config",".wxi",".wxl",".wxs",".xaml",".svg",".svgz",".opf",".xsl"],firstLine:"(\\<\\?xml.*)|(\\<svg)|(\\<\\!doctype\\s+svg)",aliases:["XML","xml"],mimetypes:["text/xml","application/xml","application/xaml+xml","application/xml-dtd"],loader:function(){return import("./xml-FAT32EHS.mjs")}});k({id:"yaml",extensions:[".yaml",".yml"],aliases:["YAML","yaml","YML","yml"],mimetypes:["application/x-yaml","text/x-yaml"],loader:function(){return import("./yaml-QI2XNWOV.mjs")}});mi();ho();ce();wt();Be();ne();Te();var k0=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},L0=function(r,e){return function(t,n){e(t,n,r)}},Cu=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},_u=new de("selectionAnchorSet",!1),_o=class lC{constructor(e,t){this.editor=e,this.selectionAnchorSetContextKey=_u.bindTo(t),this.modelChangeListener=e.onDidChangeModel(()=>this.selectionAnchorSetContextKey.reset())}static get(e){return e.getContribution(lC.ID)}setSelectionAnchor(){if(this.editor.hasModel()){let e=this.editor.getPosition(),t=this.decorationId?[this.decorationId]:[],n=this.editor.deltaDecorations(t,[{range:Z.fromPositions(e,e),options:{description:"selection-anchor",stickiness:1,hoverMessage:new kn().appendText(u("selectionAnchor","Selection Anchor")),className:"selection-anchor"}}]);this.decorationId=n[0],this.selectionAnchorSetContextKey.set(!!this.decorationId),gt(u("anchorSet","Anchor set at {0}:{1}",e.lineNumber,e.column))}}goToSelectionAnchor(){if(this.editor.hasModel()&&this.decorationId){let e=this.editor.getModel().getDecorationRange(this.decorationId);e&&this.editor.setPosition(e.getStartPosition())}}selectFromAnchorToCursor(){if(this.editor.hasModel()&&this.decorationId){let e=this.editor.getModel().getDecorationRange(this.decorationId);if(e){let t=this.editor.getPosition();this.editor.setSelection(Z.fromPositions(e.getStartPosition(),t)),this.cancelSelectionAnchor()}}}cancelSelectionAnchor(){this.decorationId&&(this.editor.deltaDecorations([this.decorationId],[]),this.decorationId=void 0,this.selectionAnchorSetContextKey.set(!1))}dispose(){this.cancelSelectionAnchor(),this.modelChangeListener.dispose()}};_o.ID="editor.contrib.selectionAnchorController";_o=k0([L0(1,Q)],_o);var dC=class extends N{constructor(){super({id:"editor.action.setSelectionAnchor",label:u("setSelectionAnchor","Set Selection Anchor"),alias:"Set Selection Anchor",precondition:void 0,kbOpts:{kbExpr:x.editorTextFocus,primary:$e(2089,2080),weight:100}})}run(e,t){return Cu(this,void 0,void 0,function*(){_o.get(t).setSelectionAnchor()})}},cC=class extends N{constructor(){super({id:"editor.action.goToSelectionAnchor",label:u("goToSelectionAnchor","Go to Selection Anchor"),alias:"Go to Selection Anchor",precondition:_u})}run(e,t){return Cu(this,void 0,void 0,function*(){_o.get(t).goToSelectionAnchor()})}},hC=class extends N{constructor(){super({id:"editor.action.selectFromAnchorToCursor",label:u("selectFromAnchorToCursor","Select from Anchor to Cursor"),alias:"Select from Anchor to Cursor",precondition:_u,kbOpts:{kbExpr:x.editorTextFocus,primary:$e(2089,2089),weight:100}})}run(e,t){return Cu(this,void 0,void 0,function*(){_o.get(t).selectFromAnchorToCursor()})}},uC=class extends N{constructor(){super({id:"editor.action.cancelSelectionAnchor",label:u("cancelSelectionAnchor","Cancel Selection Anchor"),alias:"Cancel Selection Anchor",precondition:_u,kbOpts:{kbExpr:x.editorTextFocus,primary:9,weight:100}})}run(e,t){return Cu(this,void 0,void 0,function*(){_o.get(t).cancelSelectionAnchor()})}};J(_o.ID,_o);I(dC);I(cC);I(hC);I(uC);Oe();U();ce();rt();te();wt();Be();Hl();Ut();td();ne();un();Je();Me();var P0=Y("editorOverviewRuler.bracketMatchForeground",{dark:"#A0A0A0",light:"#A0A0A0",hc:"#A0A0A0"},u("overviewRulerBracketMatchForeground","Overview ruler marker color for matching brackets.")),pC=class extends N{constructor(){super({id:"editor.action.jumpToBracket",label:u("smartSelect.jumpBracket","Go to Bracket"),alias:"Go to Bracket",precondition:void 0,kbOpts:{kbExpr:x.editorTextFocus,primary:3160,weight:100}})}run(e,t){let n=ti.get(t);!n||n.jumpToBracket()}},mC=class extends N{constructor(){super({id:"editor.action.selectToBracket",label:u("smartSelect.selectToBracket","Select to Bracket"),alias:"Select to Bracket",precondition:void 0,description:{description:"Select to Bracket",args:[{name:"args",schema:{type:"object",properties:{selectBrackets:{type:"boolean",default:!0}}}}]}})}run(e,t,n){let i=ti.get(t);if(!i)return;let o=!0;n&&n.selectBrackets===!1&&(o=!1),i.selectToBracket(o)}},gC=class{constructor(e,t,n){this.position=e,this.brackets=t,this.options=n}},ti=class extends B{constructor(e){super();this._editor=e,this._lastBracketsData=[],this._lastVersionId=0,this._decorations=[],this._updateBracketsSoon=this._register(new Xe(()=>this._updateBrackets(),50)),this._matchBrackets=this._editor.getOption(63),this._updateBracketsSoon.schedule(),this._register(e.onDidChangeCursorPosition(t=>{this._matchBrackets!=="never"&&this._updateBracketsSoon.schedule()})),this._register(e.onDidChangeModelContent(t=>{this._updateBracketsSoon.schedule()})),this._register(e.onDidChangeModel(t=>{this._lastBracketsData=[],this._decorations=[],this._updateBracketsSoon.schedule()})),this._register(e.onDidChangeModelLanguageConfiguration(t=>{this._lastBracketsData=[],this._updateBracketsSoon.schedule()})),this._register(e.onDidChangeConfiguration(t=>{t.hasChanged(63)&&(this._matchBrackets=this._editor.getOption(63),this._decorations=this._editor.deltaDecorations(this._decorations,[]),this._lastBracketsData=[],this._lastVersionId=0,this._updateBracketsSoon.schedule())})),this._register(e.onDidBlurEditorWidget(()=>{this._updateBracketsSoon.schedule()})),this._register(e.onDidFocusEditorWidget(()=>{this._updateBracketsSoon.schedule()}))}static get(e){return e.getContribution(ti.ID)}jumpToBracket(){if(!this._editor.hasModel())return;let e=this._editor.getModel(),t=this._editor.getSelections().map(n=>{let i=n.getStartPosition(),o=e.matchBracket(i),s=null;if(o)o[0].containsPosition(i)?s=o[1].getStartPosition():o[1].containsPosition(i)&&(s=o[0].getStartPosition());else{let a=e.findEnclosingBrackets(i);if(a)s=a[0].getStartPosition();else{let l=e.findNextBracket(i);l&&l.range&&(s=l.range.getStartPosition())}}return s?new Z(s.lineNumber,s.column,s.lineNumber,s.column):new Z(i.lineNumber,i.column,i.lineNumber,i.column)});this._editor.setSelections(t),this._editor.revealRange(t[0])}selectToBracket(e){if(!this._editor.hasModel())return;let t=this._editor.getModel(),n=[];this._editor.getSelections().forEach(i=>{let o=i.getStartPosition(),s=t.matchBracket(o);if(!s&&(s=t.findEnclosingBrackets(o),!s)){let c=t.findNextBracket(o);c&&c.range&&(s=t.matchBracket(c.range.getStartPosition()))}let a=null,l=null;if(s){s.sort(C.compareRangesUsingStarts);let[c,d]=s;if(a=e?c.getStartPosition():c.getEndPosition(),l=e?d.getEndPosition():d.getStartPosition(),d.containsPosition(o)){let h=a;a=l,l=h}}a&&l&&n.push(new Z(a.lineNumber,a.column,l.lineNumber,l.column))}),n.length>0&&(this._editor.setSelections(n),this._editor.revealRange(n[0]))}_updateBrackets(){if(this._matchBrackets==="never")return;this._recomputeBrackets();let e=[],t=0;for(let n of this._lastBracketsData){let i=n.brackets;i&&(e[t++]={range:i[0],options:n.options},e[t++]={range:i[1],options:n.options})}this._decorations=this._editor.deltaDecorations(this._decorations,e)}_recomputeBrackets(){if(!this._editor.hasModel()||!this._editor.hasWidgetFocus()){this._lastBracketsData=[],this._lastVersionId=0;return}let e=this._editor.getSelections();if(e.length>100){this._lastBracketsData=[],this._lastVersionId=0;return}let t=this._editor.getModel(),n=t.getVersionId(),i=[];this._lastVersionId===n&&(i=this._lastBracketsData);let o=[],s=0;for(let h=0,p=e.length;h<p;h++){let g=e[h];g.isEmpty()&&(o[s++]=g.getStartPosition())}o.length>1&&o.sort(q.compare);let a=[],l=0,c=0,d=i.length;for(let h=0,p=o.length;h<p;h++){let g=o[h];for(;c<d&&i[c].position.isBefore(g);)c++;if(c<d&&i[c].position.equals(g))a[l++]=i[c];else{let y=t.matchBracket(g),v=ti._DECORATION_OPTIONS_WITH_OVERVIEW_RULER;!y&&this._matchBrackets==="always"&&(y=t.findEnclosingBrackets(g,20),v=ti._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER),a[l++]=new gC(g,y,v)}}this._lastBracketsData=a,this._lastVersionId=n}};ti.ID="editor.contrib.bracketMatchingController";ti._DECORATION_OPTIONS_WITH_OVERVIEW_RULER=xe.register({description:"bracket-match-overview",stickiness:1,className:"bracket-match",overviewRuler:{color:nt(P0),position:wn.Center}});ti._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER=xe.register({description:"bracket-match-no-overview",stickiness:1,className:"bracket-match"});J(ti.ID,ti);I(mC);I(pC);ye((r,e)=>{let t=r.getColor(ux);t&&e.addRule(`.monaco-editor .bracket-match { background-color: ${t}; }`);let n=r.getColor(tu);n&&e.addRule(`.monaco-editor .bracket-match { border: 1px solid ${n}; }`)});Zn.appendMenuItem(oe.MenubarGoMenu,{group:"5_infile_nav",command:{id:"editor.action.jumpToBracket",title:u({key:"miGoToBracket",comment:["&& denotes a mnemonic"]},"Go to &&Bracket")},order:2});ce();Be();te();wt();var dg=class{constructor(e,t){this._selection=e,this._isMovingLeft=t}getEditOperations(e,t){if(this._selection.startLineNumber!==this._selection.endLineNumber||this._selection.isEmpty())return;let n=this._selection.startLineNumber,i=this._selection.startColumn,o=this._selection.endColumn;if(!(this._isMovingLeft&&i===1)&&!(!this._isMovingLeft&&o===e.getLineMaxColumn(n)))if(this._isMovingLeft){let s=new C(n,i-1,n,i),a=e.getValueInRange(s);t.addEditOperation(s,null),t.addEditOperation(new C(n,o,n,o),a)}else{let s=new C(n,o,n,o+1),a=e.getValueInRange(s);t.addEditOperation(s,null),t.addEditOperation(new C(n,i,n,i),a)}}computeCursorState(e,t){return this._isMovingLeft?new Z(this._selection.startLineNumber,this._selection.startColumn-1,this._selection.endLineNumber,this._selection.endColumn-1):new Z(this._selection.startLineNumber,this._selection.startColumn+1,this._selection.endLineNumber,this._selection.endColumn+1)}};ne();var cg=class extends N{constructor(e,t){super(t);this.left=e}run(e,t){if(!t.hasModel())return;let n=[],i=t.getSelections();for(let o of i)n.push(new dg(o,this.left));t.pushUndoStop(),t.executeCommands(this.id,n),t.pushUndoStop()}},fC=class extends cg{constructor(){super(!0,{id:"editor.action.moveCarretLeftAction",label:u("caret.moveLeft","Move Selected Text Left"),alias:"Move Selected Text Left",precondition:x.writable})}},yC=class extends cg{constructor(){super(!1,{id:"editor.action.moveCarretRightAction",label:u("caret.moveRight","Move Selected Text Right"),alias:"Move Selected Text Right",precondition:x.writable})}};I(fC);I(yC);ce();te();Be();ne();var bC=class extends N{constructor(){super({id:"editor.action.transposeLetters",label:u("transposeLetters.label","Transpose Letters"),alias:"Transpose Letters",precondition:x.writable,kbOpts:{kbExpr:x.textInputFocus,primary:0,mac:{primary:306},weight:100}})}run(e,t){if(!t.hasModel())return;let n=t.getModel(),i=[],o=t.getSelections();for(let s of o){if(!s.isEmpty())continue;let a=s.startLineNumber,l=s.startColumn,c=n.getLineMaxColumn(a);if(a===1&&(l===1||l===2&&c===2))continue;let d=l===c?s.getPosition():iu.rightPosition(n,s.getPosition().lineNumber,s.getPosition().column),h=iu.leftPosition(n,d),p=iu.leftPosition(n,h),g=n.getValueInRange(C.fromPositions(p,h)),y=n.getValueInRange(C.fromPositions(h,d)),v=C.fromPositions(p,d);i.push(new So(v,y+g))}i.length>0&&(t.pushUndoStop(),t.executeCommands(this.id,i),t.pushUndoStop())}};I(bC);Ml();Fn();ce();Bt();Be();ne();un();var M0=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},is="9_cutcopypaste",D0=Xo||document.queryCommandSupported("cut"),SC=Xo||document.queryCommandSupported("copy"),R0=typeof navigator.clipboard=="undefined"||oS?document.queryCommandSupported("paste"):!0;function ug(r){return r.register(),r}var F0=D0?ug(new Ah({id:"editor.action.clipboardCutAction",precondition:void 0,kbOpts:Xo?{primary:2102,win:{primary:2102,secondary:[1044]},weight:100}:void 0,menuOpts:[{menuId:oe.MenubarEditMenu,group:"2_ccp",title:u({key:"miCut",comment:["&& denotes a mnemonic"]},"Cu&&t"),order:1},{menuId:oe.EditorContext,group:is,title:u("actions.clipboard.cutLabel","Cut"),when:x.writable,order:1},{menuId:oe.CommandPalette,group:"",title:u("actions.clipboard.cutLabel","Cut"),order:1},{menuId:oe.SimpleEditorContext,group:is,title:u("actions.clipboard.cutLabel","Cut"),when:x.writable,order:1}]})):void 0,A0=SC?ug(new Ah({id:"editor.action.clipboardCopyAction",precondition:void 0,kbOpts:Xo?{primary:2081,win:{primary:2081,secondary:[2067]},weight:100}:void 0,menuOpts:[{menuId:oe.MenubarEditMenu,group:"2_ccp",title:u({key:"miCopy",comment:["&& denotes a mnemonic"]},"&&Copy"),order:2},{menuId:oe.EditorContext,group:is,title:u("actions.clipboard.copyLabel","Copy"),order:2},{menuId:oe.CommandPalette,group:"",title:u("actions.clipboard.copyLabel","Copy"),order:1},{menuId:oe.SimpleEditorContext,group:is,title:u("actions.clipboard.copyLabel","Copy"),order:2}]})):void 0;Zn.appendMenuItem(oe.MenubarEditMenu,{submenu:oe.MenubarCopy,title:{value:u("copy as","Copy As"),original:"Copy As"},group:"2_ccp",order:3});Zn.appendMenuItem(oe.EditorContext,{submenu:oe.EditorContextCopy,title:{value:u("copy as","Copy As"),original:"Copy As"},group:is,order:3});var hg=R0?ug(new Ah({id:"editor.action.clipboardPasteAction",precondition:void 0,kbOpts:Xo?{primary:2100,win:{primary:2100,secondary:[1043]},linux:{primary:2100,secondary:[1043]},weight:100}:void 0,menuOpts:[{menuId:oe.MenubarEditMenu,group:"2_ccp",title:u({key:"miPaste",comment:["&& denotes a mnemonic"]},"&&Paste"),order:4},{menuId:oe.EditorContext,group:is,title:u("actions.clipboard.pasteLabel","Paste"),when:x.writable,order:4},{menuId:oe.CommandPalette,group:"",title:u("actions.clipboard.pasteLabel","Paste"),order:1},{menuId:oe.SimpleEditorContext,group:is,title:u("actions.clipboard.pasteLabel","Paste"),when:x.writable,order:4}]})):void 0,vC=class extends N{constructor(){super({id:"editor.action.clipboardCopyWithSyntaxHighlightingAction",label:u("actions.clipboard.copyWithSyntaxHighlightingLabel","Copy With Syntax Highlighting"),alias:"Copy With Syntax Highlighting",precondition:void 0,kbOpts:{kbExpr:x.textInputFocus,primary:0,weight:100}})}run(e,t){!t.hasModel()||!t.getOption(32)&&t.getSelection().isEmpty()||(qm.forceCopyWithSyntaxHighlighting=!0,t.focus(),document.execCommand("copy"),qm.forceCopyWithSyntaxHighlighting=!1)}};function xC(r,e){!r||(r.addImplementation(1e4,"code-editor",(t,n)=>{let i=t.get(Ee).getFocusedCodeEditor();if(i&&i.hasTextFocus()){let o=i.getOption(32),s=i.getSelection();return s&&s.isEmpty()&&!o||document.execCommand(e),!0}return!1}),r.addImplementation(0,"generic-dom",(t,n)=>(document.execCommand(e),!0)))}xC(F0,"cut");xC(A0,"copy");hg&&(hg.addImplementation(1e4,"code-editor",(r,e)=>{let t=r.get(Ee),n=r.get(Jr),i=t.getFocusedCodeEditor();return i&&i.hasTextFocus()?!document.execCommand("paste")&&th?(()=>M0(void 0,void 0,void 0,function*(){let s=yield n.readText();if(s!==""){let a=gx.INSTANCE.get(s),l=!1,c=null,d=null;a&&(l=i.getOption(32)&&!!a.isFromEmptySelection,c=typeof a.multicursorText!="undefined"?a.multicursorText:null,d=a.mode),i.trigger("keyboard","paste",{text:s,pasteOnNewLine:l,multicursorText:c,mode:d})}}))():!0:!1}),hg.addImplementation(0,"generic-dom",(r,e)=>(document.execCommand("paste"),!0)));SC&&I(vC);ce();at();var gr=class{constructor(e){this.executor=e,this._didRun=!1}getValue(){if(!this._didRun)try{this._value=this.executor()}catch(e){this._error=e}finally{this._didRun=!0}if(this._error)throw this._error;return this._value}get rawValue(){return this._value}};U();Ze();ce();Be();mt();at();ke();U();Ht();pr();te();wt();Pe();Qo();bt();Qr();var pe=class{constructor(e){this.value=e}equals(e){return this.value===e.value}contains(e){return this.equals(e)||this.value===""||e.value.startsWith(this.value+pe.sep)}intersects(e){return this.contains(e)||e.contains(this)}append(e){return new pe(this.value+pe.sep+e)}};pe.sep=".";pe.None=new pe("@@none@@");pe.Empty=new pe("");pe.QuickFix=new pe("quickfix");pe.Refactor=new pe("refactor");pe.Source=new pe("source");pe.SourceOrganizeImports=pe.Source.append("organizeImports");pe.SourceFixAll=pe.Source.append("fixAll");function CC(r,e){return!(r.include&&!r.include.intersects(e)||r.excludes&&r.excludes.some(t=>wC(e,t,r.include))||!r.includeSourceActions&&pe.Source.contains(e))}function _C(r,e){let t=e.kind?new pe(e.kind):void 0;return!(r.include&&(!t||!r.include.contains(t))||r.excludes&&t&&r.excludes.some(n=>wC(t,n,r.include))||!r.includeSourceActions&&t&&pe.Source.contains(t)||r.onlyIncludePreferredActions&&!e.isPreferred)}function wC(r,e,t){return!(!e.contains(r)||t&&e.contains(t))}var Hn=class{constructor(e,t,n){this.kind=e,this.apply=t,this.preferred=n}static fromUser(e,t){return!e||typeof e!="object"?new Hn(t.kind,t.apply,!1):new Hn(Hn.getKindFromUser(e,t.kind),Hn.getApplyFromUser(e,t.apply),Hn.getPreferredUser(e))}static getApplyFromUser(e,t){switch(typeof e.apply=="string"?e.apply.toLowerCase():""){case"first":return"first";case"never":return"never";case"ifsingle":return"ifSingle";default:return t}}static getKindFromUser(e,t){return typeof e.kind=="string"?new pe(e.kind):t}static getPreferredUser(e){return typeof e.preferred=="boolean"?e.preferred:!1}};var pg=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},wu="editor.action.codeAction",Tu="editor.action.refactor",Eu="editor.action.sourceAction",ud="editor.action.organizeImports",pd="editor.action.fixAll",Iu=class{constructor(e,t){this.action=e,this.provider=t}resolve(e){var t;return pg(this,void 0,void 0,function*(){if(((t=this.provider)===null||t===void 0?void 0:t.resolveCodeAction)&&!this.action.edit){let n;try{n=yield this.provider.resolveCodeAction(this.action,e)}catch(i){je(i)}n&&(this.action.edit=n.edit)}return this})}},ku=class extends B{constructor(e,t,n){super();this.documentation=t,this._register(n),this.allActions=[...e].sort(ku.codeActionsComparator),this.validActions=this.allActions.filter(({action:i})=>!i.disabled)}static codeActionsComparator({action:e},{action:t}){return e.isPreferred&&!t.isPreferred?-1:!e.isPreferred&&t.isPreferred?1:Tt(e.diagnostics)?Tt(t.diagnostics)?e.diagnostics[0].message.localeCompare(t.diagnostics[0].message):-1:Tt(t.diagnostics)?1:0}get hasAutoFix(){return this.validActions.some(({action:e})=>!!e.kind&&pe.QuickFix.contains(new pe(e.kind))&&!!e.isPreferred)}},TC={actions:[],documentation:void 0};function md(r,e,t,n,i){var o;let s=t.filter||{},a={only:(o=s.include)===null||o===void 0?void 0:o.value,trigger:t.type},l=new vx(r,i),c=N0(r,s),d=new R,h=c.map(g=>pg(this,void 0,void 0,function*(){try{n.report(g);let y=yield g.provideCodeActions(r,e,a,l.token);if(y&&d.add(y),l.token.isCancellationRequested)return TC;let v=((y==null?void 0:y.actions)||[]).filter(F=>F&&_C(s,F)),w=z0(g,v,s.include);return{actions:v.map(F=>new Iu(F,g)),documentation:w}}catch(y){if(Li(y))throw y;return je(y),TC}})),p=Ai.onDidChange(()=>{let g=Ai.all(r);ua(g,c)||l.cancel()});return Promise.all(h).then(g=>{let y=pa(g.map(w=>w.actions)),v=Yn(g.map(w=>w.documentation));return new ku(y,v,d)}).finally(()=>{p.dispose(),l.dispose()})}function N0(r,e){return Ai.all(r).filter(t=>t.providedCodeActionKinds?t.providedCodeActionKinds.some(n=>CC(e,new pe(n))):!0)}function z0(r,e,t){if(!r.documentation)return;let n=r.documentation.map(i=>({kind:new pe(i.kind),command:i.command}));if(t){let i;for(let o of n)o.kind.contains(t)&&(i?i.kind.contains(o.kind)&&(i=o):i=o);if(i)return i==null?void 0:i.command}for(let i of e)if(!!i.kind){for(let o of n)if(o.kind.contains(new pe(i.kind)))return o.command}}Ie.registerCommand("_executeCodeActionProvider",function(r,e,t,n,i){return pg(this,void 0,void 0,function*(){if(!(e instanceof Ce))throw ci();let o=r.get(Gt).getModel(e);if(!o)throw ci();let s=Z.isISelection(t)?Z.liftSelection(t):C.isIRange(t)?o.validateRange(t):void 0;if(!s)throw ci();let a=typeof n=="string"?new pe(n):void 0,l=yield md(o,s,{type:1,filter:{includeSourceActions:!0,include:a}},Vi.None,ue.None),c=[],d=Math.min(l.validActions.length,typeof i=="number"?i:0);for(let h=0;h<d;h++)c.push(l.validActions[h].resolve(ue.None));try{return yield Promise.all(c),l.validActions.map(h=>h.action)}finally{setTimeout(()=>l.dispose(),100)}})});ke();U();mi();Oe();U();ce();te();ne();Te();Je();Hm();Me();var O0=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},H0=function(r,e){return function(t,n){e(t,n,r)}},$t=class mg{constructor(e,t){this._messageWidget=new Ye,this._messageListeners=new R,this._editor=e,this._visible=mg.MESSAGE_VISIBLE.bindTo(t),this._editorListener=this._editor.onDidAttemptReadOnlyEdit(()=>this._onDidAttemptReadOnlyEdit())}static get(e){return e.getContribution(mg.ID)}dispose(){this._editorListener.dispose(),this._messageListeners.dispose(),this._messageWidget.dispose(),this._visible.reset()}showMessage(e,t){gt(e),this._visible.set(!0),this._messageWidget.clear(),this._messageListeners.clear(),this._messageWidget.value=new gg(this._editor,t,e),this._messageListeners.add(this._editor.onDidBlurEditorText(()=>this.closeMessage())),this._messageListeners.add(this._editor.onDidChangeCursorPosition(()=>this.closeMessage())),this._messageListeners.add(this._editor.onDidDispose(()=>this.closeMessage())),this._messageListeners.add(this._editor.onDidChangeModel(()=>this.closeMessage())),this._messageListeners.add(new Cn(()=>this.closeMessage(),3e3));let n;this._messageListeners.add(this._editor.onMouseMove(i=>{!i.target.position||(n?n.containsPosition(i.target.position)||this.closeMessage():n=new C(t.lineNumber-3,1,i.target.position.lineNumber+3,1))}))}closeMessage(){this._visible.reset(),this._messageListeners.clear(),this._messageWidget.value&&this._messageListeners.add(gg.fadeOut(this._messageWidget.value))}_onDidAttemptReadOnlyEdit(){this._editor.hasModel()&&this.showMessage(u("editor.readonly","Cannot edit in read-only editor"),this._editor.getPosition())}};$t.ID="editor.contrib.messageController";$t.MESSAGE_VISIBLE=new de("messageVisible",!1,u("messageVisible","Whether the editor is currently showing an inline message"));$t=O0([H0(1,Q)],$t);var B0=it.bindToContribution($t.get);K(new B0({id:"leaveEditorMessage",precondition:$t.MESSAGE_VISIBLE,handler:r=>r.closeMessage(),kbOpts:{weight:100+30,primary:9}}));var gg=class{constructor(e,{lineNumber:t,column:n},i){this.allowEditorOverflow=!0,this.suppressMouseDown=!1,this._editor=e,this._editor.revealLinesInCenterIfOutsideViewport(t,t,0),this._position={lineNumber:t,column:n-1},this._domNode=document.createElement("div"),this._domNode.classList.add("monaco-editor-overlaymessage");let o=document.createElement("div");o.classList.add("anchor","top"),this._domNode.appendChild(o);let s=document.createElement("div");s.classList.add("message"),s.textContent=i,this._domNode.appendChild(s);let a=document.createElement("div");a.classList.add("anchor","below"),this._domNode.appendChild(a),this._editor.addContentWidget(this),this._domNode.classList.add("fadeIn")}static fadeOut(e){let t,n=()=>{e.dispose(),clearTimeout(t),e.getDomNode().removeEventListener("animationend",n)};return t=setTimeout(n,110),e.getDomNode().addEventListener("animationend",n),e.getDomNode().classList.add("fadeOut"),{dispose:n}}dispose(){this._editor.removeContentWidget(this)}getId(){return"messageoverlay"}getDomNode(){return this._domNode}getPosition(){return{position:this._position,preference:[1,2]}}afterRender(e){this._domNode.classList.toggle("below",e===2)}};J($t.ID,$t);ye((r,e)=>{let t=r.getColor($h);if(t){let o=r.type===ma.HIGH_CONTRAST?2:1;e.addRule(`.monaco-editor .monaco-editor-overlaymessage .anchor.below { border-top-color: ${t}; }`),e.addRule(`.monaco-editor .monaco-editor-overlaymessage .anchor.top { border-bottom-color: ${t}; }`),e.addRule(`.monaco-editor .monaco-editor-overlaymessage .message { border: ${o}px solid ${t}; }`)}let n=r.getColor(jh);n&&e.addRule(`.monaco-editor .monaco-editor-overlaymessage .message { background-color: ${n}; }`);let i=r.getColor(Uh);i&&e.addRule(`.monaco-editor .monaco-editor-overlaymessage .message { color: ${i}; }`)});Ke();Ne();Kl();ke();U();rt();Pe();On();var W0=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},EC=function(r,e){return function(t,n){e(t,n,r)}},V0=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},fg=class extends Mh{constructor(e,t){super(e.command?e.command.id:e.title,G0(e.title),void 0,!e.disabled,t);this.action=e}};function G0(r){return r.replace(/\r\n|\r|\n/g," ")}var Lu=class extends B{constructor(e,t,n,i){super();this._editor=e,this._delegate=t,this._contextMenuService=n,this._visible=!1,this._showingActions=this._register(new Ye),this._keybindingResolver=new gd({getKeybindings:()=>i.getKeybindings()})}get isVisible(){return this._visible}show(e,t,n,i){return V0(this,void 0,void 0,function*(){let o=i.includeDisabledActions?t.allActions:t.validActions;if(!o.length){this._visible=!1;return}if(!this._editor.getDomNode())throw this._visible=!1,ih();this._visible=!0,this._showingActions.value=t;let s=this.getMenuActions(e,o,t.documentation),a=q.isIPosition(n)?this._toCoords(n):n||{x:0,y:0},l=this._keybindingResolver.getResolver(),c=this._editor.getOption(113);this._contextMenuService.showContextMenu({domForShadowRoot:c?this._editor.getDomNode():void 0,getAnchor:()=>a,getActions:()=>s,onHide:()=>{this._visible=!1,this._editor.focus()},autoSelectFirstItem:!0,getKeyBinding:d=>d instanceof fg?l(d.action):void 0})})}getMenuActions(e,t,n){var i,o;let s=d=>new fg(d.action,()=>this._delegate.onSelectCodeAction(d)),a=t.map(s),l=[...n],c=this._editor.getModel();if(c&&a.length)for(let d of Ai.all(c))d._getAdditionalMenuItems&&l.push(...d._getAdditionalMenuItems({trigger:e.type,only:(o=(i=e.filter)===null||i===void 0?void 0:i.include)===null||o===void 0?void 0:o.value},t.map(h=>h.action)));return l.length&&a.push(new rr,...l.map(d=>s(new Iu({title:d.title,command:d},void 0)))),a}_toCoords(e){if(!this._editor.hasModel())return{x:0,y:0};this._editor.revealPosition(e,1),this._editor.render();let t=this._editor.getScrolledVisiblePosition(e),n=Jt(this._editor.getDomNode()),i=n.left+t.left,o=n.top+t.top+t.height;return{x:i,y:o}}};Lu=W0([EC(2,Zr),EC(3,Qe)],Lu);var gd=class{constructor(e){this._keybindingProvider=e}getResolver(){let e=new gr(()=>this._keybindingProvider.getKeybindings().filter(t=>gd.codeActionCommands.indexOf(t.command)>=0).filter(t=>t.resolvedKeybinding).map(t=>{let n=t.commandArgs;return t.command===ud?n={kind:pe.SourceOrganizeImports.value}:t.command===pd&&(n={kind:pe.SourceFixAll.value}),Object.assign({resolvedKeybinding:t.resolvedKeybinding},Hn.fromUser(n,{kind:pe.None,apply:"never"}))}));return t=>{if(t.kind){let n=this.bestKeybindingForCodeAction(t,e.getValue());return n==null?void 0:n.resolvedKeybinding}}}bestKeybindingForCodeAction(e,t){if(!e.kind)return;let n=new pe(e.kind);return t.filter(i=>i.kind.contains(n)).filter(i=>i.preferred?e.isPreferred:!0).reduceRight((i,o)=>i?i.kind.contains(o.kind)?o:i:o,void 0)}};gd.codeActionCommands=[Tu,wu,Eu,ud,pd];Ne();_v();Tn();Ae();U();Ut();ne();On();Je();Me();var j0=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},U0=function(r,e){return function(t,n){e(t,n,r)}},fd;(function(r){r.Hidden={type:0};class e{constructor(n,i,o,s){this.actions=n,this.trigger=i,this.editorPosition=o,this.widgetPosition=s,this.type=1}}r.Showing=e})(fd||(fd={}));var yd=class IC extends B{constructor(e,t,n,i){super();this._editor=e,this._quickFixActionId=t,this._preferredFixActionId=n,this._keybindingService=i,this._onClick=this._register(new $),this.onClick=this._onClick.event,this._state=fd.Hidden,this._domNode=document.createElement("div"),this._domNode.className=X.lightBulb.classNames,this._editor.addContentWidget(this),this._register(this._editor.onDidChangeModelContent(o=>{let s=this._editor.getModel();(this.state.type!==1||!s||this.state.editorPosition.lineNumber>=s.getLineCount())&&this.hide()})),zh.ignoreTarget(this._domNode),this._register(hS(this._domNode,o=>{if(this.state.type!==1)return;this._editor.focus(),o.preventDefault();let{top:s,height:a}=Jt(this._domNode),l=this._editor.getOption(58),c=Math.floor(l/3);this.state.widgetPosition.position!==null&&this.state.widgetPosition.position.lineNumber<this.state.editorPosition.lineNumber&&(c+=l),this._onClick.fire({x:o.posx,y:s+a+c,actions:this.state.actions,trigger:this.state.trigger})})),this._register(Ve(this._domNode,"mouseenter",o=>{if((o.buttons&1)!==1)return;this.hide();let s=new Yl;s.startMonitoring(o.target,o.buttons,Xl,()=>{},()=>{s.dispose()})})),this._register(this._editor.onDidChangeConfiguration(o=>{o.hasChanged(56)&&!this._editor.getOption(56).enabled&&this.hide()})),this._updateLightBulbTitleAndIcon(),this._register(this._keybindingService.onDidUpdateKeybindings(this._updateLightBulbTitleAndIcon,this))}dispose(){super.dispose(),this._editor.removeContentWidget(this)}getId(){return"LightBulbWidget"}getDomNode(){return this._domNode}getPosition(){return this._state.type===1?this._state.widgetPosition:null}update(e,t,n){if(e.validActions.length<=0)return this.hide();let i=this._editor.getOptions();if(!i.get(56).enabled)return this.hide();let o=this._editor.getModel();if(!o)return this.hide();let{lineNumber:s,column:a}=o.validatePosition(n),l=o.getOptions().tabSize,c=i.get(43),d=o.getLineContent(s),h=yi.computeIndentLevel(d,l),p=c.spaceWidth*h>22,g=v=>v>2&&this._editor.getTopForLineNumber(v)===this._editor.getTopForLineNumber(v-1),y=s;if(!p){if(s>1&&!g(s-1))y-=1;else if(!g(s+1))y+=1;else if(a*c.spaceWidth<22)return this.hide()}this.state=new fd.Showing(e,t,n,{position:{lineNumber:y,column:1},preference:IC._posPref}),this._editor.layoutContentWidget(this)}hide(){this.state=fd.Hidden,this._editor.layoutContentWidget(this)}get state(){return this._state}set state(e){this._state=e,this._updateLightBulbTitleAndIcon()}_updateLightBulbTitleAndIcon(){if(this.state.type===1&&this.state.actions.hasAutoFix){this._domNode.classList.remove(...X.lightBulb.classNamesArray),this._domNode.classList.add(...X.lightbulbAutofix.classNamesArray);let t=this._keybindingService.lookupKeybinding(this._preferredFixActionId);if(t){this.title=u("preferredcodeActionWithKb","Show Code Actions. Preferred Quick Fix Available ({0})",t.getLabel());return}}this._domNode.classList.remove(...X.lightbulbAutofix.classNamesArray),this._domNode.classList.add(...X.lightBulb.classNamesArray);let e=this._keybindingService.lookupKeybinding(this._quickFixActionId);e?this.title=u("codeActionWithKb","Show Code Actions ({0})",e.getLabel()):this.title=u("codeAction","Show Code Actions")}set title(e){this._domNode.title=e}};yd._posPref=[0];yd=j0([U0(3,Qe)],yd);ye((r,e)=>{var t;let n=(t=r.getColor(fa))===null||t===void 0?void 0:t.transparent(.7),i=r.getColor(tx);i&&e.addRule(`
		.monaco-editor .contentWidgets ${X.lightBulb.cssSelector} {
			color: ${i};
			background-color: ${n};
		}`);let o=r.getColor(nx);o&&e.addRule(`
		.monaco-editor .contentWidgets ${X.lightbulbAutofix.cssSelector} {
			color: ${o};
			background-color: ${n};
		}`)});var $0=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},K0=function(r,e){return function(t,n){e(t,n,r)}},yg=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},q0=function(r,e,t,n,i){if(n==="m")throw new TypeError("Private method is not writable");if(n==="a"&&!i)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?r!==e||!i:!e.has(r))throw new TypeError("Cannot write private member to an object whose class did not declare it");return n==="a"?i.call(r,t):i?i.value=t:e.set(r,t),t},X0=function(r,e,t,n){if(t==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?r!==e||!n:!e.has(r))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?n:t==="a"?n.call(r):n?n.value:e.get(r)},Pu,Mu=class extends B{constructor(e,t,n,i,o){super();this._editor=e,this.delegate=i,this._activeCodeActions=this._register(new Ye),Pu.set(this,!1),this._codeActionWidget=new gr(()=>this._register(o.createInstance(Lu,this._editor,{onSelectCodeAction:s=>yg(this,void 0,void 0,function*(){this.delegate.applyCodeAction(s,!0)})}))),this._lightBulbWidget=new gr(()=>{let s=this._register(o.createInstance(yd,this._editor,t,n));return this._register(s.onClick(a=>this.showCodeActionList(a.trigger,a.actions,a,{includeDisabledActions:!1}))),s})}dispose(){q0(this,Pu,!0,"f"),super.dispose()}update(e){var t,n,i;return yg(this,void 0,void 0,function*(){if(e.type!==1){(t=this._lightBulbWidget.rawValue)===null||t===void 0||t.hide();return}let o;try{o=yield e.actions}catch(s){ae(s);return}if(!X0(this,Pu,"f"))if(this._lightBulbWidget.getValue().update(o,e.trigger,e.position),e.trigger.type===1){if(!((n=e.trigger.filter)===null||n===void 0)&&n.include){let a=this.tryGetValidActionToApply(e.trigger,o);if(a){try{this._lightBulbWidget.getValue().hide(),yield this.delegate.applyCodeAction(a,!1)}finally{o.dispose()}return}if(e.trigger.context){let l=this.getInvalidActionThatWouldHaveBeenApplied(e.trigger,o);if(l&&l.action.disabled){$t.get(this._editor).showMessage(l.action.disabled,e.trigger.context.position),o.dispose();return}}}let s=!!(!((i=e.trigger.filter)===null||i===void 0)&&i.include);if(e.trigger.context&&(!o.allActions.length||!s&&!o.validActions.length)){$t.get(this._editor).showMessage(e.trigger.context.notAvailableMessage,e.trigger.context.position),this._activeCodeActions.value=o,o.dispose();return}this._activeCodeActions.value=o,this._codeActionWidget.getValue().show(e.trigger,o,e.position,{includeDisabledActions:s})}else this._codeActionWidget.getValue().isVisible?o.dispose():this._activeCodeActions.value=o})}getInvalidActionThatWouldHaveBeenApplied(e,t){if(!!t.allActions.length&&(e.autoApply==="first"&&t.validActions.length===0||e.autoApply==="ifSingle"&&t.allActions.length===1))return t.allActions.find(({action:n})=>n.disabled)}tryGetValidActionToApply(e,t){if(!!t.validActions.length&&(e.autoApply==="first"&&t.validActions.length>0||e.autoApply==="ifSingle"&&t.validActions.length===1))return t.validActions[0]}showCodeActionList(e,t,n,i){return yg(this,void 0,void 0,function*(){this._codeActionWidget.getValue().show(e,t,n,i)})}};Pu=new WeakMap;Mu=$0([K0(4,he)],Mu);ne();bt();Te();Ke();Qr();Fh();Oe();ke();Ae();U();Nn();te();Pe();Te();Qr();var bg=function(r,e,t,n){if(t==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?r!==e||!n:!e.has(r))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?n:t==="a"?n.call(r):n?n.value:e.get(r)},Y0=function(r,e,t,n,i){if(n==="m")throw new TypeError("Private method is not writable");if(n==="a"&&!i)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?r!==e||!i:!e.has(r))throw new TypeError("Cannot write private member to an object whose class did not declare it");return n==="a"?i.call(r,t):i?i.value=t:e.set(r,t),t},ka,Sg=new de("supportedCodeAction",""),kC=class extends B{constructor(e,t,n,i=250){super();this._editor=e,this._markerService=t,this._signalChange=n,this._delay=i,this._autoTriggerTimer=this._register(new Cn),this._register(this._markerService.onMarkerChanged(o=>this._onMarkerChanges(o))),this._register(this._editor.onDidChangeCursorPosition(()=>this._onCursorChange()))}trigger(e){let t=this._getRangeOfSelectionUnlessWhitespaceEnclosed(e);return this._createEventAndSignalChange(e,t)}_onMarkerChanges(e){let t=this._editor.getModel();!t||e.some(n=>ph(n,t.uri))&&this._autoTriggerTimer.cancelAndSet(()=>{this.trigger({type:2})},this._delay)}_onCursorChange(){this._autoTriggerTimer.cancelAndSet(()=>{this.trigger({type:2})},this._delay)}_getRangeOfMarker(e){let t=this._editor.getModel();if(!!t)for(let n of this._markerService.read({resource:t.uri})){let i=t.validateRange(n);if(C.intersectRanges(i,e))return C.lift(i)}}_getRangeOfSelectionUnlessWhitespaceEnclosed(e){if(!this._editor.hasModel())return;let t=this._editor.getModel(),n=this._editor.getSelection();if(n.isEmpty()&&e.type===2){let{lineNumber:i,column:o}=n.getPosition(),s=t.getLineContent(i);if(s.length===0)return;if(o===1){if(/\s/.test(s[0]))return}else if(o===t.getLineMaxColumn(i)){if(/\s/.test(s[s.length-1]))return}else if(/\s/.test(s[o-2])&&/\s/.test(s[o-1]))return}return n}_createEventAndSignalChange(e,t){let n=this._editor.getModel();if(!t||!n){this._signalChange(void 0);return}let i=this._getRangeOfMarker(t),o=i?i.getStartPosition():t.getStartPosition(),s={trigger:e,selection:t,position:o};return this._signalChange(s),s}},os;(function(r){r.Empty={type:0};class e{constructor(n,i,o,s){this.trigger=n,this.rangeOrSelection=i,this.position=o,this._cancellablePromise=s,this.type=1,this.actions=s.catch(a=>{if(Li(a))return Z0;throw a})}cancel(){this._cancellablePromise.cancel()}}r.Triggered=e})(os||(os={}));var Z0={allActions:[],validActions:[],dispose:()=>{},documentation:[],hasAutoFix:!1},vg=class extends B{constructor(e,t,n,i){super();this._editor=e,this._markerService=t,this._progressService=i,this._codeActionOracle=this._register(new Ye),this._state=os.Empty,this._onDidChangeState=this._register(new $),this.onDidChangeState=this._onDidChangeState.event,ka.set(this,!1),this._supportedCodeActions=Sg.bindTo(n),this._register(this._editor.onDidChangeModel(()=>this._update())),this._register(this._editor.onDidChangeModelLanguage(()=>this._update())),this._register(Ai.onDidChange(()=>this._update())),this._update()}dispose(){bg(this,ka,"f")||(Y0(this,ka,!0,"f"),super.dispose(),this.setState(os.Empty,!0))}_update(){if(bg(this,ka,"f"))return;this._codeActionOracle.value=void 0,this.setState(os.Empty);let e=this._editor.getModel();if(e&&Ai.has(e)&&!this._editor.getOption(80)){let t=[];for(let n of Ai.all(e))Array.isArray(n.providedCodeActionKinds)&&t.push(...n.providedCodeActionKinds);this._supportedCodeActions.set(t.join(" ")),this._codeActionOracle.value=new kC(this._editor,this._markerService,n=>{var i;if(!n){this.setState(os.Empty);return}let o=Le(s=>md(e,n.selection,n.trigger,Vi.None,s));n.trigger.type===1&&((i=this._progressService)===null||i===void 0||i.showWhile(o,250)),this.setState(new os.Triggered(n.trigger,n.selection,n.position,o))},void 0),this._codeActionOracle.value.trigger({type:2})}else this._supportedCodeActions.reset()}trigger(e){this._codeActionOracle.value&&this._codeActionOracle.value.trigger(e)}setState(e,t){e!==this._state&&(this._state.type===1&&this._state.cancel(),this._state=e,!t&&!bg(this,ka,"f")&&this._onDidChangeState.fire(e))}};ka=new WeakMap;var J0=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},Du=function(r,e){return function(t,n){e(t,n,r)}},LC=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})};function bd(r){return O.regex(Sg.keys()[0],new RegExp("(\\s|^)"+uo(r.value)+"\\b"))}var xg={type:"object",defaultSnippets:[{body:{kind:""}}],properties:{kind:{type:"string",description:u("args.schema.kind","Kind of the code action to run.")},apply:{type:"string",description:u("args.schema.apply","Controls when the returned actions are applied."),default:"ifSingle",enum:["first","ifSingle","never"],enumDescriptions:[u("args.schema.apply.first","Always apply the first returned code action."),u("args.schema.apply.ifSingle","Apply the first returned code action if it is the only one."),u("args.schema.apply.never","Do not apply the returned code actions.")]},preferred:{type:"boolean",default:!1,description:u("args.schema.preferred","Controls if only preferred code actions should be returned.")}}},wo=class PC extends B{constructor(e,t,n,i,o){super();this._instantiationService=o,this._editor=e,this._model=this._register(new vg(this._editor,t,n,i)),this._register(this._model.onDidChangeState(s=>this.update(s))),this._ui=new gr(()=>this._register(new Mu(e,To.Id,ss.Id,{applyCodeAction:(s,a)=>LC(this,void 0,void 0,function*(){try{yield this._applyCodeAction(s)}finally{a&&this._trigger({type:2,filter:{}})}})},this._instantiationService)))}static get(e){return e.getContribution(PC.ID)}update(e){this._ui.getValue().update(e)}showCodeActions(e,t,n){return this._ui.getValue().showCodeActionList(e,t,n,{includeDisabledActions:!1})}manualTriggerAtCurrentPosition(e,t,n){if(!this._editor.hasModel())return;$t.get(this._editor).closeMessage();let i=this._editor.getPosition();this._trigger({type:1,filter:t,autoApply:n,context:{notAvailableMessage:e,position:i}})}_trigger(e){return this._model.trigger(e)}_applyCodeAction(e){return this._instantiationService.invokeFunction(Q0,e,this._editor)}};wo.ID="editor.contrib.quickFixController";wo=J0([Du(1,ld),Du(2,Q),Du(3,Co),Du(4,he)],wo);function Q0(r,e,t){return LC(this,void 0,void 0,function*(){let n=r.get(kh),i=r.get(pt),o=r.get(ar),s=r.get(dt);if(o.publicLog2("codeAction.applyCodeAction",{codeActionTitle:e.action.title,codeActionKind:e.action.kind,codeActionIsPreferred:!!e.action.isPreferred}),yield e.resolve(ue.None),e.action.edit&&(yield n.apply(Lh.convert(e.action.edit),{editor:t,label:e.action.title})),e.action.command)try{yield i.executeCommand(e.action.command.id,...e.action.command.arguments||[])}catch(a){let l=e1(a);s.error(typeof l=="string"?l:u("applyCodeActionFailed","An unknown error occurred while applying the code action"))}})}function e1(r){return typeof r=="string"?r:r instanceof Error&&typeof r.message=="string"?r.message:void 0}function rs(r,e,t,n){if(r.hasModel()){let i=wo.get(r);i&&i.manualTriggerAtCurrentPosition(e,t,n)}}var To=class extends N{constructor(){super({id:To.Id,label:u("quickfix.trigger.label","Quick Fix..."),alias:"Quick Fix...",precondition:O.and(x.writable,x.hasCodeActionsProvider),kbOpts:{kbExpr:x.editorTextFocus,primary:2132,weight:100}})}run(e,t){return rs(t,u("editor.action.quickFix.noneMessage","No code actions available"),void 0,void 0)}};To.Id="editor.action.quickFix";var Cg=class extends it{constructor(){super({id:wu,precondition:O.and(x.writable,x.hasCodeActionsProvider),description:{description:"Trigger a code action",args:[{name:"args",schema:xg}]}})}runEditorCommand(e,t,n){let i=Hn.fromUser(n,{kind:pe.Empty,apply:"ifSingle"});return rs(t,typeof(n==null?void 0:n.kind)=="string"?i.preferred?u("editor.action.codeAction.noneMessage.preferred.kind","No preferred code actions for '{0}' available",n.kind):u("editor.action.codeAction.noneMessage.kind","No code actions for '{0}' available",n.kind):i.preferred?u("editor.action.codeAction.noneMessage.preferred","No preferred code actions available"):u("editor.action.codeAction.noneMessage","No code actions available"),{include:i.kind,includeSourceActions:!0,onlyIncludePreferredActions:i.preferred},i.apply)}},_g=class extends N{constructor(){super({id:Tu,label:u("refactor.label","Refactor..."),alias:"Refactor...",precondition:O.and(x.writable,x.hasCodeActionsProvider),kbOpts:{kbExpr:x.editorTextFocus,primary:3120,mac:{primary:1328},weight:100},contextMenuOpts:{group:"1_modification",order:2,when:O.and(x.writable,bd(pe.Refactor))},description:{description:"Refactor...",args:[{name:"args",schema:xg}]}})}run(e,t,n){let i=Hn.fromUser(n,{kind:pe.Refactor,apply:"never"});return rs(t,typeof(n==null?void 0:n.kind)=="string"?i.preferred?u("editor.action.refactor.noneMessage.preferred.kind","No preferred refactorings for '{0}' available",n.kind):u("editor.action.refactor.noneMessage.kind","No refactorings for '{0}' available",n.kind):i.preferred?u("editor.action.refactor.noneMessage.preferred","No preferred refactorings available"):u("editor.action.refactor.noneMessage","No refactorings available"),{include:pe.Refactor.contains(i.kind)?i.kind:pe.None,onlyIncludePreferredActions:i.preferred},i.apply)}},wg=class extends N{constructor(){super({id:Eu,label:u("source.label","Source Action..."),alias:"Source Action...",precondition:O.and(x.writable,x.hasCodeActionsProvider),contextMenuOpts:{group:"1_modification",order:2.1,when:O.and(x.writable,bd(pe.Source))},description:{description:"Source Action...",args:[{name:"args",schema:xg}]}})}run(e,t,n){let i=Hn.fromUser(n,{kind:pe.Source,apply:"never"});return rs(t,typeof(n==null?void 0:n.kind)=="string"?i.preferred?u("editor.action.source.noneMessage.preferred.kind","No preferred source actions for '{0}' available",n.kind):u("editor.action.source.noneMessage.kind","No source actions for '{0}' available",n.kind):i.preferred?u("editor.action.source.noneMessage.preferred","No preferred source actions available"):u("editor.action.source.noneMessage","No source actions available"),{include:pe.Source.contains(i.kind)?i.kind:pe.None,includeSourceActions:!0,onlyIncludePreferredActions:i.preferred},i.apply)}},Tg=class extends N{constructor(){super({id:ud,label:u("organizeImports.label","Organize Imports"),alias:"Organize Imports",precondition:O.and(x.writable,bd(pe.SourceOrganizeImports)),kbOpts:{kbExpr:x.editorTextFocus,primary:1581,weight:100}})}run(e,t){return rs(t,u("editor.action.organize.noneMessage","No organize imports action available"),{include:pe.SourceOrganizeImports,includeSourceActions:!0},"ifSingle")}},Eg=class extends N{constructor(){super({id:pd,label:u("fixAll.label","Fix All"),alias:"Fix All",precondition:O.and(x.writable,bd(pe.SourceFixAll))})}run(e,t){return rs(t,u("fixAll.noneMessage","No fix all action available"),{include:pe.SourceFixAll,includeSourceActions:!0},"ifSingle")}},ss=class extends N{constructor(){super({id:ss.Id,label:u("autoFix.label","Auto Fix..."),alias:"Auto Fix...",precondition:O.and(x.writable,bd(pe.QuickFix)),kbOpts:{kbExpr:x.editorTextFocus,primary:1620,mac:{primary:2644},weight:100}})}run(e,t){return rs(t,u("editor.action.autoFix.noneMessage","No auto fixes available"),{include:pe.QuickFix,onlyIncludePreferredActions:!0},"ifSingle")}};ss.Id="editor.action.autoFix";J(wo.ID,wo);I(To);I(_g);I(wg);I(Tg);I(ss);I(Eg);K(new Cg);Ne();Oe();ke();Cm();U();pr();ce();Ys();Be();Pe();_m();at();ke();U();Wt();Ht();Pe();Qo();bt();var MC=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},Sd=class{constructor(){this.lenses=[],this._disposables=new R}dispose(){this._disposables.dispose()}add(e,t){this._disposables.add(e);for(let n of e.lenses)this.lenses.push({symbol:n,provider:t})}};function Ig(r,e){return MC(this,void 0,void 0,function*(){let t=er.ordered(r),n=new Map,i=new Sd,o=t.map((s,a)=>MC(this,void 0,void 0,function*(){n.set(s,a);try{let l=yield Promise.resolve(s.provideCodeLenses(r,e));l&&i.add(l,s)}catch(l){je(l)}}));return yield Promise.all(o),i.lenses=i.lenses.sort((s,a)=>s.symbol.range.startLineNumber<a.symbol.range.startLineNumber?-1:s.symbol.range.startLineNumber>a.symbol.range.startLineNumber?1:n.get(s.provider)<n.get(a.provider)?-1:n.get(s.provider)>n.get(a.provider)?1:s.symbol.range.startColumn<a.symbol.range.startColumn?-1:s.symbol.range.startColumn>a.symbol.range.startColumn?1:0),i})}Ie.registerCommand("_executeCodeLensProvider",function(r,...e){let[t,n]=e;Ue(Ce.isUri(t)),Ue(typeof n=="number"||!n);let i=r.get(Gt).getModel(t);if(!i)throw ci();let o=[],s=new R;return Ig(i,ue.None).then(a=>{s.add(a);let l=[];for(let c of a.lenses)n==null||Boolean(c.symbol.command)?o.push(c.symbol):n-- >0&&c.provider.resolveCodeLens&&l.push(Promise.resolve(c.provider.resolveCodeLens(i,c.symbol,ue.None)).then(d=>o.push(d||c.symbol)));return Promise.all(l)}).then(()=>o).finally(()=>{setTimeout(()=>s.dispose(),100)})});Oe();Qb();na();te();jl();Ke();var t1=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},n1=function(r,e){return function(t,n){e(t,n,r)}},Pg=Pi("ICodeLensCache"),kg=class{constructor(e,t){this.lineCount=e,this.data=t}},Lg=class{constructor(e){this._fakeProvider=new class{provideCodeLenses(){throw new Error("not supported")}},this._cache=new Ri(20,.75);let t="codelens/cache";lS(()=>e.remove(t,1));let n="codelens/cache2",i=e.get(n,1,"{}");this._deserialize(i),oh(e.onWillSaveState)(o=>{o.reason===uu.SHUTDOWN&&e.store(n,this._serialize(),1,1)})}put(e,t){let n=t.lenses.map(s=>{var a;return{range:s.symbol.range,command:s.symbol.command&&{id:"",title:(a=s.symbol.command)===null||a===void 0?void 0:a.title}}}),i=new Sd;i.add({lenses:n,dispose:()=>{}},this._fakeProvider);let o=new kg(e.getLineCount(),i);this._cache.set(e.uri.toString(),o)}get(e){let t=this._cache.get(e.uri.toString());return t&&t.lineCount===e.getLineCount()?t.data:void 0}delete(e){this._cache.delete(e.uri.toString())}_serialize(){let e=Object.create(null);for(let[t,n]of this._cache){let i=new Set;for(let o of n.data.lenses)i.add(o.symbol.range.startLineNumber);e[t]={lineCount:n.lineCount,lines:[...i.values()]}}return JSON.stringify(e)}_deserialize(e){try{let t=JSON.parse(e);for(let n in t){let i=t[n],o=[];for(let a of i.lines)o.push({range:new C(a,1,a,11)});let s=new Sd;s.add({lenses:o,dispose(){}},this._fakeProvider),this._cache.set(n,new kg(i.lineCount,s))}}catch(t){}}};Lg=t1([n1(0,en)],Lg);zi(Pg,Lg);Ne();te();Ut();td();Je();Me();var DC=class{constructor(e,t,n){this.afterLineNumber=e,this.heightInPx=t,this._onHeight=n,this.suppressMouseDown=!0,this.domNode=document.createElement("div")}onComputedHeight(e){this._lastHeight===void 0?this._lastHeight=e:this._lastHeight!==e&&(this._lastHeight=e,this._onHeight())}isVisible(){return this._lastHeight!==0&&this.domNode.hasAttribute("monaco-visible-view-zone")}},vd=class{constructor(e,t,n){this.allowEditorOverflow=!1,this.suppressMouseDown=!0,this._commands=new Map,this._isEmpty=!0,this._editor=e,this._id=`codelens.widget-${vd._idPool++}`,this.updatePosition(n),this._domNode=document.createElement("span"),this._domNode.className=`codelens-decoration ${t}`}withCommands(e,t){this._commands.clear();let n=[],i=!1;for(let o=0;o<e.length;o++){let s=e[o];if(!!s&&(i=!0,s.command)){let a=pu(s.command.title.trim());s.command.id?(n.push(W("a",{id:String(o),title:s.command.tooltip},...a)),this._commands.set(String(o),s.command)):n.push(W("span",{title:s.command.tooltip},...a)),o+1<e.length&&n.push(W("span",void 0,"\xA0|\xA0"))}}i?(jr(this._domNode,...n),this._isEmpty&&t&&this._domNode.classList.add("fadein"),this._isEmpty=!1):jr(this._domNode,W("span",void 0,"no commands"))}getCommand(e){return e.parentElement===this._domNode?this._commands.get(e.id):void 0}getId(){return this._id}getDomNode(){return this._domNode}updatePosition(e){let t=this._editor.getModel().getLineFirstNonWhitespaceColumn(e);this._widgetPosition={position:{lineNumber:e,column:t},preference:[1]}}getPosition(){return this._widgetPosition||null}};vd._idPool=0;var xd=class{constructor(){this._removeDecorations=[],this._addDecorations=[],this._addDecorationsCallbacks=[]}addDecoration(e,t){this._addDecorations.push(e),this._addDecorationsCallbacks.push(t)}removeDecoration(e){this._removeDecorations.push(e)}commit(e){let t=e.deltaDecorations(this._removeDecorations,this._addDecorations);for(let n=0,i=t.length;n<i;n++)this._addDecorationsCallbacks[n](t[n])}},Ru=class{constructor(e,t,n,i,o,s,a){this._isDisposed=!1,this._editor=t,this._className=n,this._data=e,this._decorationIds=[];let l,c=[];this._data.forEach((d,h)=>{d.symbol.command&&c.push(d.symbol),i.addDecoration({range:d.symbol.range,options:xe.EMPTY},p=>this._decorationIds[h]=p),l?l=C.plusRange(l,d.symbol.range):l=C.lift(d.symbol.range)}),this._viewZone=new DC(l.startLineNumber-1,s,a),this._viewZoneId=o.addZone(this._viewZone),c.length>0&&(this._createContentWidgetIfNecessary(),this._contentWidget.withCommands(c,!1))}_createContentWidgetIfNecessary(){this._contentWidget?this._editor.layoutContentWidget(this._contentWidget):(this._contentWidget=new vd(this._editor,this._className,this._viewZone.afterLineNumber+1),this._editor.addContentWidget(this._contentWidget))}dispose(e,t){this._decorationIds.forEach(e.removeDecoration,e),this._decorationIds=[],t&&t.removeZone(this._viewZoneId),this._contentWidget&&(this._editor.removeContentWidget(this._contentWidget),this._contentWidget=void 0),this._isDisposed=!0}isDisposed(){return this._isDisposed}isValid(){return this._decorationIds.some((e,t)=>{let n=this._editor.getModel().getDecorationRange(e),i=this._data[t].symbol;return!!(n&&C.isEmpty(i.range)===n.isEmpty())})}updateCodeLensSymbols(e,t){this._decorationIds.forEach(t.removeDecoration,t),this._decorationIds=[],this._data=e,this._data.forEach((n,i)=>{t.addDecoration({range:n.symbol.range,options:xe.EMPTY},o=>this._decorationIds[i]=o)})}updateHeight(e,t){this._viewZone.heightInPx=e,t.layoutZone(this._viewZoneId),this._contentWidget&&this._editor.layoutContentWidget(this._contentWidget)}computeIfNecessary(e){if(!this._viewZone.isVisible())return null;for(let t=0;t<this._decorationIds.length;t++){let n=e.getDecorationRange(this._decorationIds[t]);n&&(this._data[t].symbol.range=n)}return this._data}updateCommands(e){this._createContentWidgetIfNecessary(),this._contentWidget.withCommands(e,!0);for(let t=0;t<this._data.length;t++){let n=e[t];if(n){let{symbol:i}=this._data[t];i.command=n.command||i.command}}}getCommand(e){var t;return(t=this._contentWidget)===null||t===void 0?void 0:t.getCommand(e)}getLineNumber(){let e=this._editor.getModel().getDecorationRange(this._decorationIds[0]);return e?e.startLineNumber:-1}update(e){if(this.isValid()){let t=this._editor.getModel().getDecorationRange(this._decorationIds[0]);t&&(this._viewZone.afterLineNumber=t.startLineNumber-1,e.layoutZone(this._viewZoneId),this._contentWidget&&(this._contentWidget.updatePosition(t.startLineNumber),this._editor.layoutContentWidget(this._contentWidget)))}}getItems(){return this._data}};ye((r,e)=>{let t=r.getColor(hx);t&&(e.addRule(`.monaco-editor .codelens-decoration { color: ${t}; }`),e.addRule(`.monaco-editor .codelens-decoration .codicon { color: ${t}; }`));let n=r.getColor(xa);n&&(e.addRule(`.monaco-editor .codelens-decoration > a:hover { color: ${n} !important; }`),e.addRule(`.monaco-editor .codelens-decoration > a:hover .codicon { color: ${n} !important; }`))});ne();bt();var i1=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},Mg=function(r,e){return function(t,n){e(t,n,r)}},o1=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},La=class{constructor(e,t,n,i){this._editor=e,this._commandService=t,this._notificationService=n,this._codeLensCache=i,this._disposables=new R,this._localToDispose=new R,this._lenses=[],this._getCodeLensModelDelays=new $r(er,250,2500),this._oldCodeLensModels=new R,this._resolveCodeLensesDelays=new $r(er,250,2500),this._resolveCodeLensesScheduler=new Xe(()=>this._resolveCodeLensesInViewport(),this._resolveCodeLensesDelays.min),this._disposables.add(this._editor.onDidChangeModel(()=>this._onModelChange())),this._disposables.add(this._editor.onDidChangeModelLanguage(()=>this._onModelChange())),this._disposables.add(this._editor.onDidChangeConfiguration(o=>{(o.hasChanged(43)||o.hasChanged(16)||o.hasChanged(15))&&this._updateLensStyle(),o.hasChanged(14)&&this._onModelChange()})),this._disposables.add(er.onDidChange(this._onModelChange,this)),this._onModelChange(),this._styleClassName="_"+sa(this._editor.getId()).toString(16),this._styleElement=bS(fS(this._editor.getContainerDomNode())?this._editor.getContainerDomNode():void 0),this._updateLensStyle()}dispose(){var e;this._localDispose(),this._disposables.dispose(),this._oldCodeLensModels.dispose(),(e=this._currentCodeLensModel)===null||e===void 0||e.dispose(),this._styleElement.remove()}_getLayoutInfo(){let e=this._editor.getOption(16),t;return!e||e<5?(e=this._editor.getOption(45)*.9|0,t=this._editor.getOption(58)):t=e*Math.max(1.3,this._editor.getOption(58)/this._editor.getOption(45))|0,{codeLensHeight:t,fontSize:e}}_updateLensStyle(){let{codeLensHeight:e,fontSize:t}=this._getLayoutInfo(),n=this._editor.getOption(15),i=this._editor.getOption(43),o=`--codelens-font-family${this._styleClassName}`,s=`--codelens-font-features${this._styleClassName}`,a=`
		.monaco-editor .codelens-decoration.${this._styleClassName} { line-height: ${e}px; font-size: ${t}px; padding-right: ${Math.round(t*.5)}px; font-feature-settings: var(${s}) }
		.monaco-editor .codelens-decoration.${this._styleClassName} span.codicon { line-height: ${e}px; font-size: ${t}px; }
		`;n&&(a+=`.monaco-editor .codelens-decoration.${this._styleClassName} { font-family: var(${o}), ${Yo.fontFamily}}`),this._styleElement.textContent=a,this._editor.getContainerDomNode().style.setProperty(o,n!=null?n:"inherit"),this._editor.getContainerDomNode().style.setProperty(s,i.fontFeatureSettings),this._editor.changeViewZones(l=>{for(let c of this._lenses)c.updateHeight(e,l)})}_localDispose(){var e,t,n;(e=this._getCodeLensModelPromise)===null||e===void 0||e.cancel(),this._getCodeLensModelPromise=void 0,(t=this._resolveCodeLensesPromise)===null||t===void 0||t.cancel(),this._resolveCodeLensesPromise=void 0,this._localToDispose.clear(),this._oldCodeLensModels.clear(),(n=this._currentCodeLensModel)===null||n===void 0||n.dispose()}_onModelChange(){this._localDispose();let e=this._editor.getModel();if(!e||!this._editor.getOption(14))return;let t=this._codeLensCache.get(e);if(t&&this._renderCodeLensSymbols(t),!er.has(e)){t&&this._localToDispose.add(Gr(()=>{let i=this._codeLensCache.get(e);t===i&&(this._codeLensCache.delete(e),this._onModelChange())},30*1e3));return}for(let i of er.all(e))if(typeof i.onDidChange=="function"){let o=i.onDidChange(()=>n.schedule());this._localToDispose.add(o)}let n=new Xe(()=>{var i;let o=Date.now();(i=this._getCodeLensModelPromise)===null||i===void 0||i.cancel(),this._getCodeLensModelPromise=Le(s=>Ig(e,s)),this._getCodeLensModelPromise.then(s=>{this._currentCodeLensModel&&this._oldCodeLensModels.add(this._currentCodeLensModel),this._currentCodeLensModel=s,this._codeLensCache.put(e,s);let a=this._getCodeLensModelDelays.update(e,Date.now()-o);n.delay=a,this._renderCodeLensSymbols(s),this._resolveCodeLensesInViewportSoon()},ae)},this._getCodeLensModelDelays.get(e));this._localToDispose.add(n),this._localToDispose.add(We(()=>this._resolveCodeLensesScheduler.cancel())),this._localToDispose.add(this._editor.onDidChangeModelContent(()=>{this._editor.changeDecorations(i=>{this._editor.changeViewZones(o=>{let s=[],a=-1;this._lenses.forEach(c=>{!c.isValid()||a===c.getLineNumber()?s.push(c):(c.update(o),a=c.getLineNumber())});let l=new xd;s.forEach(c=>{c.dispose(l,o),this._lenses.splice(this._lenses.indexOf(c),1)}),l.commit(i)})}),n.schedule()})),this._localToDispose.add(this._editor.onDidFocusEditorWidget(()=>{n.schedule()})),this._localToDispose.add(this._editor.onDidScrollChange(i=>{i.scrollTopChanged&&this._lenses.length>0&&this._resolveCodeLensesInViewportSoon()})),this._localToDispose.add(this._editor.onDidLayoutChange(()=>{this._resolveCodeLensesInViewportSoon()})),this._localToDispose.add(We(()=>{if(this._editor.getModel()){let i=ur.capture(this._editor);this._editor.changeDecorations(o=>{this._editor.changeViewZones(s=>{this._disposeAllLenses(o,s)})}),i.restore(this._editor)}else this._disposeAllLenses(void 0,void 0)})),this._localToDispose.add(this._editor.onMouseDown(i=>{if(i.target.type!==9)return;let o=i.target.element;if((o==null?void 0:o.tagName)==="SPAN"&&(o=o.parentElement),(o==null?void 0:o.tagName)==="A")for(let s of this._lenses){let a=s.getCommand(o);if(a){this._commandService.executeCommand(a.id,...a.arguments||[]).catch(l=>this._notificationService.error(l));break}}})),n.schedule()}_disposeAllLenses(e,t){let n=new xd;for(let i of this._lenses)i.dispose(n,t);e&&n.commit(e),this._lenses.length=0}_renderCodeLensSymbols(e){if(!this._editor.hasModel())return;let t=this._editor.getModel().getLineCount(),n=[],i;for(let a of e.lenses){let l=a.symbol.range.startLineNumber;l<1||l>t||(i&&i[i.length-1].symbol.range.startLineNumber===l?i.push(a):(i=[a],n.push(i)))}let o=ur.capture(this._editor),s=this._getLayoutInfo();this._editor.changeDecorations(a=>{this._editor.changeViewZones(l=>{let c=new xd,d=0,h=0;for(;h<n.length&&d<this._lenses.length;){let p=n[h][0].symbol.range.startLineNumber,g=this._lenses[d].getLineNumber();g<p?(this._lenses[d].dispose(c,l),this._lenses.splice(d,1)):g===p?(this._lenses[d].updateCodeLensSymbols(n[h],c),h++,d++):(this._lenses.splice(d,0,new Ru(n[h],this._editor,this._styleClassName,c,l,s.codeLensHeight,()=>this._resolveCodeLensesInViewportSoon())),d++,h++)}for(;d<this._lenses.length;)this._lenses[d].dispose(c,l),this._lenses.splice(d,1);for(;h<n.length;)this._lenses.push(new Ru(n[h],this._editor,this._styleClassName,c,l,s.codeLensHeight,()=>this._resolveCodeLensesInViewportSoon())),h++;c.commit(a)})}),o.restore(this._editor)}_resolveCodeLensesInViewportSoon(){this._editor.getModel()&&this._resolveCodeLensesScheduler.schedule()}_resolveCodeLensesInViewport(){var e;(e=this._resolveCodeLensesPromise)===null||e===void 0||e.cancel(),this._resolveCodeLensesPromise=void 0;let t=this._editor.getModel();if(!t)return;let n=[],i=[];if(this._lenses.forEach(a=>{let l=a.computeIfNecessary(t);l&&(n.push(l),i.push(a))}),n.length===0)return;let o=Date.now(),s=Le(a=>{let l=n.map((c,d)=>{let h=new Array(c.length),p=c.map((g,y)=>!g.symbol.command&&typeof g.provider.resolveCodeLens=="function"?Promise.resolve(g.provider.resolveCodeLens(t,g.symbol,a)).then(v=>{h[y]=v},je):(h[y]=g.symbol,Promise.resolve(void 0)));return Promise.all(p).then(()=>{!a.isCancellationRequested&&!i[d].isDisposed()&&i[d].updateCommands(h)})});return Promise.all(l)});this._resolveCodeLensesPromise=s,this._resolveCodeLensesPromise.then(()=>{let a=this._resolveCodeLensesDelays.update(t,Date.now()-o);this._resolveCodeLensesScheduler.delay=a,this._currentCodeLensModel&&this._codeLensCache.put(t,this._currentCodeLensModel),this._oldCodeLensModels.clear(),s===this._resolveCodeLensesPromise&&(this._resolveCodeLensesPromise=void 0)},a=>{ae(a),s===this._resolveCodeLensesPromise&&(this._resolveCodeLensesPromise=void 0)})}getLenses(){return this._lenses}};La.ID="css.editor.codeLens";La=i1([Mg(1,pt),Mg(2,dt),Mg(3,Pg)],La);J(La.ID,La);I(class extends N{constructor(){super({id:"codelens.showLensesInCurrentLine",precondition:x.hasCodeLensProvider,label:u("showLensOnLine","Show CodeLens Commands For Current Line"),alias:"Show CodeLens Commands For Current Line"})}run(e,t){return o1(this,void 0,void 0,function*(){if(!t.hasModel())return;let n=e.get(ei),i=e.get(pt),o=e.get(dt),s=t.getSelection().positionLineNumber,a=t.getContribution(La.ID),l=[];for(let d of a.getLenses())if(d.getLineNumber()===s)for(let h of d.getItems()){let{command:p}=h.symbol;p&&l.push({label:p.title,command:p})}if(l.length===0)return;let c=yield n.pick(l,{canPickMany:!1});if(!!c)try{yield i.executeCommand(c.command.id,...c.command.arguments||[])}catch(d){o.error(d)}})}});U();ce();te();Oe();fi();ke();Cm();U();ce();Bt();te();Ut();Pe();at();ke();Ht();te();Pe();Qo();bt();function RC(r,e){let t=[],i=Kr.ordered(r).reverse().map(o=>Promise.resolve(o.provideDocumentColors(r,e)).then(s=>{if(Array.isArray(s))for(let a of s)t.push({colorInfo:a,provider:o})}));return Promise.all(i).then(()=>t)}function Dg(r,e,t,n){return Promise.resolve(t.provideColorPresentations(r,e,n))}Ie.registerCommand("_executeDocumentColorProvider",function(r,...e){let[t]=e;if(!(t instanceof Ce))throw ci();let n=r.get(Gt).getModel(t);if(!n)throw ci();let i=[],s=Kr.ordered(n).reverse().map(a=>Promise.resolve(a.provideDocumentColors(n,ue.None)).then(l=>{if(Array.isArray(l))for(let c of l)i.push({range:c.range,color:[c.color.red,c.color.green,c.color.blue,c.color.alpha]})}));return Promise.all(s).then(()=>i)});Ie.registerCommand("_executeColorPresentationProvider",function(r,...e){let[t,n]=e,{uri:i,range:o}=n;if(!(i instanceof Ce)||!Array.isArray(t)||t.length!==4||!C.isIRange(o))throw ci();let[s,a,l,c]=t,d=r.get(Gt).getModel(i);if(!d)throw ci();let h={range:o,color:{red:s,green:a,blue:l,alpha:c}},p=[],y=Kr.ordered(d).reverse().map(v=>Promise.resolve(v.provideColorPresentations(d,h,ue.None)).then(w=>{Array.isArray(w)&&p.push(...w)}));return Promise.all(y).then(()=>p)});nr();var r1=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},FC=function(r,e){return function(t,n){e(t,n,r)}},s1=500,fr=class AC extends B{constructor(e,t,n){super();this._editor=e,this._codeEditorService=t,this._configurationService=n,this._localToDispose=this._register(new R),this._decorationsIds=[],this._colorDatas=new Map,this._colorDecoratorIds=[],this._decorationsTypes=new Set,this._register(e.onDidChangeModel(()=>{this._isEnabled=this.isEnabled(),this.onModelChanged()})),this._register(e.onDidChangeModelLanguage(()=>this.onModelChanged())),this._register(Kr.onDidChange(()=>this.onModelChanged())),this._register(e.onDidChangeConfiguration(()=>{let i=this._isEnabled;this._isEnabled=this.isEnabled(),i!==this._isEnabled&&(this._isEnabled?this.onModelChanged():this.removeAllDecorations())})),this._timeoutTimer=null,this._computePromise=null,this._isEnabled=this.isEnabled(),this.onModelChanged()}isEnabled(){let e=this._editor.getModel();if(!e)return!1;let t=e.getLanguageId(),n=this._configurationService.getValue(t);if(n&&typeof n=="object"){let i=n.colorDecorators;if(i&&i.enable!==void 0&&!i.enable)return i.enable}return this._editor.getOption(17)}static get(e){return e.getContribution(this.ID)}dispose(){this.stop(),this.removeAllDecorations(),super.dispose()}onModelChanged(){if(this.stop(),!this._isEnabled)return;let e=this._editor.getModel();!e||!Kr.has(e)||(this._localToDispose.add(this._editor.onDidChangeModelContent(()=>{this._timeoutTimer||(this._timeoutTimer=new Cn,this._timeoutTimer.cancelAndSet(()=>{this._timeoutTimer=null,this.beginCompute()},AC.RECOMPUTE_TIME))})),this.beginCompute())}beginCompute(){this._computePromise=Le(e=>{let t=this._editor.getModel();return t?RC(t,e):Promise.resolve([])}),this._computePromise.then(e=>{this.updateDecorations(e),this.updateColorDecorators(e),this._computePromise=null},ae)}stop(){this._timeoutTimer&&(this._timeoutTimer.cancel(),this._timeoutTimer=null),this._computePromise&&(this._computePromise.cancel(),this._computePromise=null),this._localToDispose.clear()}updateDecorations(e){let t=e.map(n=>({range:{startLineNumber:n.colorInfo.range.startLineNumber,startColumn:n.colorInfo.range.startColumn,endLineNumber:n.colorInfo.range.endLineNumber,endColumn:n.colorInfo.range.endColumn},options:xe.EMPTY}));this._decorationsIds=this._editor.deltaDecorations(this._decorationsIds,t),this._colorDatas=new Map,this._decorationsIds.forEach((n,i)=>this._colorDatas.set(n,e[i]))}updateColorDecorators(e){let t=[],n={};for(let i=0;i<e.length&&t.length<s1;i++){let{red:o,green:s,blue:a,alpha:l}=e[i].colorInfo.color,c=new gi(Math.round(o*255),Math.round(s*255),Math.round(a*255),l),d=sa(`rgba(${c.r},${c.g},${c.b},${c.a})`).toString(16),h=`rgba(${c.r}, ${c.g}, ${c.b}, ${c.a})`,p="colorBox-"+d;!this._decorationsTypes.has(p)&&!n[p]&&this._codeEditorService.registerDecorationType("color-detector-color",p,{before:{contentText:" ",border:"solid 0.1em #000",margin:"0.1em 0.2em 0 0.2em",width:"0.8em",height:"0.8em",backgroundColor:h},dark:{before:{border:"solid 0.1em #eee"}}},void 0,this._editor),n[p]=!0,t.push({range:{startLineNumber:e[i].colorInfo.range.startLineNumber,startColumn:e[i].colorInfo.range.startColumn,endLineNumber:e[i].colorInfo.range.endLineNumber,endColumn:e[i].colorInfo.range.endColumn},options:this._codeEditorService.resolveDecorationOptions(p,!0)})}this._decorationsTypes.forEach(i=>{n[i]||this._codeEditorService.removeDecorationType(i)}),this._colorDecoratorIds=this._editor.deltaDecorations(this._colorDecoratorIds,t)}removeAllDecorations(){this._decorationsIds=this._editor.deltaDecorations(this._decorationsIds,[]),this._colorDecoratorIds=this._editor.deltaDecorations(this._colorDecoratorIds,[]),this._decorationsTypes.forEach(e=>{this._codeEditorService.removeDecorationType(e)})}getColorData(e){let t=this._editor.getModel();if(!t)return null;let n=t.getDecorationsInRange(C.fromPositions(e,e)).filter(i=>this._colorDatas.has(i.id));return n.length===0?null:this._colorDatas.get(n[0].id)}};fr.ID="editor.contrib.colorDetector";fr.RECOMPUTE_TIME=1e3;fr=r1([FC(1,Ee),FC(2,hn)],fr);J(fr.ID,fr);ho();U();ce();te();Be();Ni();Oe();ke();U();Wt();pr();ce();rt();te();Pe();Ni();qr();Ae();U();Fn();function Rg(r,e){return!!r[e]}var Fu=class{constructor(e,t){this.target=e.target,this.hasTriggerModifier=Rg(e.event,t.triggerModifier),this.hasSideBySideModifier=Rg(e.event,t.triggerSideBySideModifier),this.isNoneOrSingleMouseDown=e.event.detail<=1}},Fg=class{constructor(e,t){this.keyCodeIsTriggerKey=e.keyCode===t.triggerKey,this.keyCodeIsSideBySideKey=e.keyCode===t.triggerSideBySideKey,this.hasTriggerModifier=Rg(e,t.triggerModifier)}},Cd=class{constructor(e,t,n,i){this.triggerKey=e,this.triggerModifier=t,this.triggerSideBySideKey=n,this.triggerSideBySideModifier=i}equals(e){return this.triggerKey===e.triggerKey&&this.triggerModifier===e.triggerModifier&&this.triggerSideBySideKey===e.triggerSideBySideKey&&this.triggerSideBySideModifier===e.triggerSideBySideModifier}};function NC(r){return r==="altKey"?ln?new Cd(57,"metaKey",6,"altKey"):new Cd(5,"ctrlKey",6,"altKey"):ln?new Cd(6,"altKey",57,"metaKey"):new Cd(6,"altKey",5,"ctrlKey")}var _d=class extends B{constructor(e){super();this._onMouseMoveOrRelevantKeyDown=this._register(new $),this.onMouseMoveOrRelevantKeyDown=this._onMouseMoveOrRelevantKeyDown.event,this._onExecute=this._register(new $),this.onExecute=this._onExecute.event,this._onCancel=this._register(new $),this.onCancel=this._onCancel.event,this._editor=e,this._opts=NC(this._editor.getOption(69)),this._lastMouseMoveEvent=null,this._hasTriggerKeyOnMouseDown=!1,this._lineNumberOnMouseDown=0,this._register(this._editor.onDidChangeConfiguration(t=>{if(t.hasChanged(69)){let n=NC(this._editor.getOption(69));if(this._opts.equals(n))return;this._opts=n,this._lastMouseMoveEvent=null,this._hasTriggerKeyOnMouseDown=!1,this._lineNumberOnMouseDown=0,this._onCancel.fire()}})),this._register(this._editor.onMouseMove(t=>this._onEditorMouseMove(new Fu(t,this._opts)))),this._register(this._editor.onMouseDown(t=>this._onEditorMouseDown(new Fu(t,this._opts)))),this._register(this._editor.onMouseUp(t=>this._onEditorMouseUp(new Fu(t,this._opts)))),this._register(this._editor.onKeyDown(t=>this._onEditorKeyDown(new Fg(t,this._opts)))),this._register(this._editor.onKeyUp(t=>this._onEditorKeyUp(new Fg(t,this._opts)))),this._register(this._editor.onMouseDrag(()=>this._resetHandler())),this._register(this._editor.onDidChangeCursorSelection(t=>this._onDidChangeCursorSelection(t))),this._register(this._editor.onDidChangeModel(t=>this._resetHandler())),this._register(this._editor.onDidChangeModelContent(()=>this._resetHandler())),this._register(this._editor.onDidScrollChange(t=>{(t.scrollTopChanged||t.scrollLeftChanged)&&this._resetHandler()}))}_onDidChangeCursorSelection(e){e.selection&&e.selection.startColumn!==e.selection.endColumn&&this._resetHandler()}_onEditorMouseMove(e){this._lastMouseMoveEvent=e,this._onMouseMoveOrRelevantKeyDown.fire([e,null])}_onEditorMouseDown(e){this._hasTriggerKeyOnMouseDown=e.hasTriggerModifier,this._lineNumberOnMouseDown=e.target.position?e.target.position.lineNumber:0}_onEditorMouseUp(e){let t=e.target.position?e.target.position.lineNumber:0;this._hasTriggerKeyOnMouseDown&&this._lineNumberOnMouseDown&&this._lineNumberOnMouseDown===t&&this._onExecute.fire(e)}_onEditorKeyDown(e){this._lastMouseMoveEvent&&(e.keyCodeIsTriggerKey||e.keyCodeIsSideBySideKey&&e.hasTriggerModifier)?this._onMouseMoveOrRelevantKeyDown.fire([this._lastMouseMoveEvent,e]):e.hasTriggerModifier&&this._onCancel.fire()}_onEditorKeyUp(e){e.keyCodeIsTriggerKey&&this._onCancel.fire()}_resetHandler(){this._lastMouseMoveEvent=null,this._hasTriggerKeyOnMouseDown=!1,this._onCancel.fire()}};Ne();Kl();Tn();fi();Ae();yh();ce();Bt();yh();Bt();bt();Te();Ke();Me();var a1=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},as=function(r,e){return function(t,n){e(t,n,r)}},bi=class extends Sx{constructor(e,t,n,i,o,s,a,l,c,d){super(e,Object.assign(Object.assign({},n.getRawOptions()),{overflowWidgetsDomNode:n.getOverflowWidgetsDomNode()}),{},i,o,s,a,l,c,d);this._parentEditor=n,this._overwriteOptions=t,super.updateOptions(this._overwriteOptions),this._register(n.onDidChangeConfiguration(h=>this._onParentConfigurationChanged(h)))}getParentEditor(){return this._parentEditor}_onParentConfigurationChanged(e){super.updateOptions(this._parentEditor.getRawOptions()),super.updateOptions(this._overwriteOptions)}updateOptions(e){oa(this._overwriteOptions,e,!0),super.updateOptions(this._overwriteOptions)}};bi=a1([as(3,he),as(4,Ee),as(5,pt),as(6,Q),as(7,St),as(8,dt),as(9,ru)],bi);Ne();fi();U();yh();te();Ut();var OC=new fe(new gi(0,122,204)),l1={showArrow:!0,showFrame:!0,className:"",frameColor:OC,arrowColor:OC,keepEditorSelection:!1},d1="vs.editor.contrib.zoneWidget",HC=class{constructor(e,t,n,i,o,s){this.id="",this.domNode=e,this.afterLineNumber=t,this.afterColumn=n,this.heightInLines=i,this._onDomNodeTop=o,this._onComputedHeight=s}onDomNodeTop(e){this._onDomNodeTop(e)}onComputedHeight(e){this._onComputedHeight(e)}},BC=class{constructor(e,t){this._id=e,this._domNode=t}getId(){return this._id}getDomNode(){return this._domNode}getPosition(){return null}},wd=class{constructor(e){this._editor=e,this._ruleName=wd._IdGenerator.nextId(),this._decorations=[],this._color=null,this._height=-1}dispose(){this.hide(),mm(this._ruleName)}set color(e){this._color!==e&&(this._color=e,this._updateStyle())}set height(e){this._height!==e&&(this._height=e,this._updateStyle())}_updateStyle(){mm(this._ruleName),SS(`.monaco-editor ${this._ruleName}`,`border-style: solid; border-color: transparent; border-bottom-color: ${this._color}; border-width: ${this._height}px; bottom: -${this._height}px; margin-left: -${this._height}px; `)}show(e){this._decorations=this._editor.deltaDecorations(this._decorations,[{range:C.fromPositions(e),options:{description:"zone-widget-arrow",className:this._ruleName,stickiness:1}}])}hide(){this._editor.deltaDecorations(this._decorations,[])}};wd._IdGenerator=new Vx(".arrow-decoration-");var Ag=class{constructor(e,t={}){this._arrow=null,this._overlayWidget=null,this._resizeSash=null,this._positionMarkerId=[],this._viewZone=null,this._disposables=new R,this.container=null,this._isShowing=!1,this.editor=e,this.options=BS(t),oa(this.options,l1,!1),this.domNode=document.createElement("div"),this.options.isAccessible||(this.domNode.setAttribute("aria-hidden","true"),this.domNode.setAttribute("role","presentation")),this._disposables.add(this.editor.onDidLayoutChange(n=>{let i=this._getWidth(n);this.domNode.style.width=i+"px",this.domNode.style.left=this._getLeft(n)+"px",this._onWidth(i)}))}dispose(){this._overlayWidget&&(this.editor.removeOverlayWidget(this._overlayWidget),this._overlayWidget=null),this._viewZone&&this.editor.changeViewZones(e=>{this._viewZone&&e.removeZone(this._viewZone.id),this._viewZone=null}),this.editor.deltaDecorations(this._positionMarkerId,[]),this._positionMarkerId=[],this._disposables.dispose()}create(){this.domNode.classList.add("zone-widget"),this.options.className&&this.domNode.classList.add(this.options.className),this.container=document.createElement("div"),this.container.classList.add("zone-widget-container"),this.domNode.appendChild(this.container),this.options.showArrow&&(this._arrow=new wd(this.editor),this._disposables.add(this._arrow)),this._fillContainer(this.container),this._initSash(),this._applyStyles()}style(e){e.frameColor&&(this.options.frameColor=e.frameColor),e.arrowColor&&(this.options.arrowColor=e.arrowColor),this._applyStyles()}_applyStyles(){if(this.container&&this.options.frameColor){let e=this.options.frameColor.toString();this.container.style.borderTopColor=e,this.container.style.borderBottomColor=e}if(this._arrow&&this.options.arrowColor){let e=this.options.arrowColor.toString();this._arrow.color=e}}_getWidth(e){return e.width-e.minimap.minimapWidth-e.verticalScrollbarWidth}_getLeft(e){return e.minimap.minimapWidth>0&&e.minimap.minimapLeft===0?e.minimap.minimapWidth:0}_onViewZoneTop(e){this.domNode.style.top=e+"px"}_onViewZoneHeight(e){if(this.domNode.style.height=`${e}px`,this.container){let t=e-this._decoratingElementsHeight();this.container.style.height=`${t}px`;let n=this.editor.getLayoutInfo();this._doLayout(t,this._getWidth(n))}this._resizeSash&&this._resizeSash.layout()}get position(){let[e]=this._positionMarkerId;if(!e)return;let t=this.editor.getModel();if(!t)return;let n=t.getDecorationRange(e);if(!!n)return n.getStartPosition()}show(e,t){let n=C.isIRange(e)?C.lift(e):C.fromPositions(e);this._isShowing=!0,this._showImpl(n,t),this._isShowing=!1,this._positionMarkerId=this.editor.deltaDecorations(this._positionMarkerId,[{range:n,options:xe.EMPTY}])}hide(){this._viewZone&&(this.editor.changeViewZones(e=>{this._viewZone&&e.removeZone(this._viewZone.id)}),this._viewZone=null),this._overlayWidget&&(this.editor.removeOverlayWidget(this._overlayWidget),this._overlayWidget=null),this._arrow&&this._arrow.hide()}_decoratingElementsHeight(){let e=this.editor.getOption(58),t=0;if(this.options.showArrow){let n=Math.round(e/3);t+=2*n}if(this.options.showFrame){let n=Math.round(e/9);t+=2*n}return t}_showImpl(e,t){let n=e.getStartPosition(),i=this.editor.getLayoutInfo(),o=this._getWidth(i);this.domNode.style.width=`${o}px`,this.domNode.style.left=this._getLeft(i)+"px";let s=document.createElement("div");s.style.overflow="hidden";let a=this.editor.getOption(58),l=Math.max(12,this.editor.getLayoutInfo().height/a*.8);t=Math.min(t,l);let c=0,d=0;if(this._arrow&&this.options.showArrow&&(c=Math.round(a/3),this._arrow.height=c,this._arrow.show(n)),this.options.showFrame&&(d=Math.round(a/9)),this.editor.changeViewZones(g=>{this._viewZone&&g.removeZone(this._viewZone.id),this._overlayWidget&&(this.editor.removeOverlayWidget(this._overlayWidget),this._overlayWidget=null),this.domNode.style.top="-1000px",this._viewZone=new HC(s,n.lineNumber,n.column,t,y=>this._onViewZoneTop(y),y=>this._onViewZoneHeight(y)),this._viewZone.id=g.addZone(this._viewZone),this._overlayWidget=new BC(d1+this._viewZone.id,this.domNode),this.editor.addOverlayWidget(this._overlayWidget)}),this.container&&this.options.showFrame){let g=this.options.frameWidth?this.options.frameWidth:d;this.container.style.borderTopWidth=g+"px",this.container.style.borderBottomWidth=g+"px"}let h=t*a-this._decoratingElementsHeight();this.container&&(this.container.style.top=c+"px",this.container.style.height=h+"px",this.container.style.overflow="hidden"),this._doLayout(h,o),this.options.keepEditorSelection||this.editor.setSelection(e);let p=this.editor.getModel();if(p){let g=e.endLineNumber+1;g<=p.getLineCount()?this.revealLine(g,!1):this.revealLine(p.getLineCount(),!0)}}revealLine(e,t){t?this.editor.revealLineInCenter(e,0):this.editor.revealLine(e,0)}setCssClass(e,t){!this.container||(t&&this.container.classList.remove(t),this.container.classList.add(e))}_onWidth(e){}_doLayout(e,t){}_relayout(e){this._viewZone&&this._viewZone.heightInLines!==e&&this.editor.changeViewZones(t=>{this._viewZone&&(this._viewZone.heightInLines=e,t.layoutZone(this._viewZone.id))})}_initSash(){if(this._resizeSash)return;this._resizeSash=this._disposables.add(new xo(this.domNode,this,{orientation:1})),this.options.isResizeable||(this._resizeSash.hide(),this._resizeSash.state=0);let e;this._disposables.add(this._resizeSash.onDidStart(t=>{this._viewZone&&(e={startY:t.startY,heightInLines:this._viewZone.heightInLines})})),this._disposables.add(this._resizeSash.onDidEnd(()=>{e=void 0})),this._disposables.add(this._resizeSash.onDidChange(t=>{if(e){let n=(t.currentY-e.startY)/this.editor.getOption(58),i=n<0?Math.ceil(n):Math.floor(n),o=e.heightInLines+i;o>5&&o<35&&this._relayout(o)}}))}getHorizontalSashLeft(){return 0}getHorizontalSashTop(){return(this.domNode.style.height===null?0:parseInt(this.domNode.style.height))-this._decoratingElementsHeight()/2}getHorizontalSashWidth(){let e=this.editor.getLayoutInfo();return e.width-e.minimap.minimapWidth}};ne();Ne();sS();Ne();Ne();sS();_v();Kl();Ae();var WC=class extends $l{constructor(e,t){super();this._onDidChangeVisibility=this._register(new $),this.onDidChangeVisibility=this._onDidChangeVisibility.event,this._element=H(e,W(".monaco-dropdown")),this._label=H(this._element,W(".dropdown-label"));let n=t.labelRenderer;n||(n=o=>(o.textContent=t.label||"",null));for(let o of[dn.CLICK,dn.MOUSE_DOWN,Gm.Tap])this._register(Ve(this.element,o,s=>Di.stop(s,!0)));for(let o of[dn.MOUSE_DOWN,Gm.Tap])this._register(Ve(this._label,o,s=>{s instanceof MouseEvent&&s.detail>1||(this.visible?this.hide():this.show())}));this._register(Ve(this._label,dn.KEY_UP,o=>{let s=new Dl(o);(s.equals(3)||s.equals(10))&&(Di.stop(o,!0),this.visible?this.hide():this.show())}));let i=n(this._label);i&&this._register(i),this._register(zh.addTarget(this._label))}get element(){return this._element}show(){this.visible||(this.visible=!0,this._onDidChangeVisibility.fire(!0))}hide(){this.visible&&(this.visible=!1,this._onDidChangeVisibility.fire(!1))}dispose(){super.dispose(),this.hide(),this.boxContainer&&(this.boxContainer.remove(),this.boxContainer=void 0),this.contents&&(this.contents.remove(),this.contents=void 0),this._label&&(this._label.remove(),this._label=void 0)}},Ng=class extends WC{constructor(e,t){super(e,t);this._actions=[],this._contextMenuProvider=t.contextMenuProvider,this.actions=t.actions||[],this.actionProvider=t.actionProvider,this.menuClassName=t.menuClassName||"",this.menuAsChild=!!t.menuAsChild}set menuOptions(e){this._menuOptions=e}get menuOptions(){return this._menuOptions}get actions(){return this.actionProvider?this.actionProvider.getActions():this._actions}set actions(e){this._actions=e}show(){super.show(),this.element.classList.add("active"),this._contextMenuProvider.showContextMenu({getAnchor:()=>this.element,getActions:()=>this.actions,getActionsContext:()=>this.menuOptions?this.menuOptions.context:null,getActionViewItem:e=>this.menuOptions&&this.menuOptions.actionViewItemProvider?this.menuOptions.actionViewItemProvider(e):void 0,getKeyBinding:e=>this.menuOptions&&this.menuOptions.getKeyBinding?this.menuOptions.getKeyBinding(e):void 0,getMenuClassName:()=>this.menuClassName,onHide:()=>this.onHide(),actionRunner:this.menuOptions?this.menuOptions.actionRunner:void 0,anchorAlignment:this.menuOptions?this.menuOptions.anchorAlignment:0,domForShadowRoot:this.menuAsChild?this.element:void 0})}hide(){super.hide()}onHide(){this.hide(),this.element.classList.remove("active")}};Ae();var Au=class extends au{constructor(e,t,n,i=Object.create(null)){super(null,e,i);this.actionItem=null,this._onDidChangeVisibility=this._register(new $),this.menuActionsOrProvider=t,this.contextMenuProvider=n,this.options=i,this.options.actionRunner&&(this.actionRunner=this.options.actionRunner)}render(e){this.actionItem=e;let t=o=>{this.element=H(o,W("a.action-label"));let s=[];return typeof this.options.classNames=="string"?s=this.options.classNames.split(/\s+/g).filter(a=>!!a):this.options.classNames&&(s=this.options.classNames),s.find(a=>a==="icon")||s.push("codicon"),this.element.classList.add(...s),this.element.setAttribute("role","button"),this.element.setAttribute("aria-haspopup","true"),this.element.setAttribute("aria-expanded","false"),this.element.title=this._action.label||"",null},n=Array.isArray(this.menuActionsOrProvider),i={contextMenuProvider:this.contextMenuProvider,labelRenderer:t,menuAsChild:this.options.menuAsChild,actions:n?this.menuActionsOrProvider:void 0,actionProvider:n?void 0:this.menuActionsOrProvider};if(this.dropdownMenu=this._register(new Ng(e,i)),this._register(this.dropdownMenu.onDidChangeVisibility(o=>{var s;(s=this.element)===null||s===void 0||s.setAttribute("aria-expanded",`${o}`),this._onDidChangeVisibility.fire(o)})),this.dropdownMenu.menuOptions={actionViewItemProvider:this.options.actionViewItemProvider,actionRunner:this.actionRunner,getKeyBinding:this.options.keybindingProvider,context:this._context},this.options.anchorAlignmentProvider){let o=this;this.dropdownMenu.menuOptions=Object.assign(Object.assign({},this.dropdownMenu.menuOptions),{get anchorAlignment(){return o.options.anchorAlignmentProvider()}})}this.updateEnabled()}setActionContext(e){super.setActionContext(e),this.dropdownMenu&&(this.dropdownMenu.menuOptions?this.dropdownMenu.menuOptions.context=e:this.dropdownMenu.menuOptions={context:e})}updateEnabled(){var e,t;let n=!this.getAction().enabled;(e=this.actionItem)===null||e===void 0||e.classList.toggle("disabled",n),(t=this.element)===null||t===void 0||t.classList.toggle("disabled",n)}};Kl();U();Fn();ne();un();Te();Ke();On();Me();var Hg=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},ji=function(r,e){return function(t,n){e(t,n,r)}},VC=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})};function GC(r,e,t,n,i,o,s){let a=r.getActions(e);return h1(a,t,!1,typeof n=="string"?c=>c===n:n,i,o,s),c1(a)}function c1(r){let e=new R;for(let[,t]of r)for(let n of t)e.add(n);return e}function h1(r,e,t,n=a=>a==="navigation",i=Number.MAX_SAFE_INTEGER,o=()=>!1,s=!1){let a,l;Array.isArray(e)?(a=e,l=e):(a=e.primary,l=e.secondary);let c=new Set;for(let[d,h]of r){let p;n(d)?(p=a,p.length>0&&s&&p.push(new rr)):(p=l,p.length>0&&p.push(new rr));for(let g of h){t&&(g=g instanceof sr&&g.alt?g.alt:g);let y=p.push(g);g instanceof Dh&&c.add({group:d,action:g,index:y-1})}}for(let{group:d,action:h,index:p}of c){let g=n(d)?a:l,y=h.actions;(y.length<=1||g.length+y.length-2<=i)&&o(h,d,g.length)&&g.splice(p,1,...y)}if(a!==l&&a.length>i){let d=a.splice(i,a.length-i);l.unshift(...d,new rr)}}var ls=class extends rd{constructor(e,t,n,i,o){super(void 0,e,{icon:!!(e.class||e.item.icon),label:!e.class&&!e.item.icon,draggable:t==null?void 0:t.draggable});this._keybindingService=n,this._notificationService=i,this._contextKeyService=o,this._wantsAltCommand=!1,this._itemClassDispose=this._register(new Ye),this._altKey=xS.getInstance()}get _menuItemAction(){return this._action}get _commandAction(){return this._wantsAltCommand&&this._menuItemAction.alt||this._menuItemAction}onClick(e){return VC(this,void 0,void 0,function*(){e.preventDefault(),e.stopPropagation();try{yield this.actionRunner.run(this._commandAction,this._context)}catch(t){this._notificationService.error(t)}})}render(e){super.render(e),e.classList.add("menu-entry"),this._updateItemClass(this._menuItemAction.item);let t=!1,n=this._altKey.keyStatus.altKey||(co||Ll)&&this._altKey.keyStatus.shiftKey,i=()=>{let o=t&&n;o!==this._wantsAltCommand&&(this._wantsAltCommand=o,this.updateLabel(),this.updateTooltip(),this.updateClass())};this._menuItemAction.alt&&this._register(this._altKey.event(o=>{n=o.altKey||(co||Ll)&&o.shiftKey,i()})),this._register(Ve(e,"mouseleave",o=>{t=!1,i()})),this._register(Ve(e,"mouseenter",o=>{t=!0,i()}))}updateLabel(){this.options.label&&this.label&&(this.label.textContent=this._commandAction.label)}updateTooltip(){if(this.label){let e=this._keybindingService.lookupKeybinding(this._commandAction.id,this._contextKeyService),t=e&&e.getLabel(),n=this._commandAction.tooltip||this._commandAction.label,i=t?u("titleAndKb","{0} ({1})",n,t):n;if(!this._wantsAltCommand&&this._menuItemAction.alt){let o=this._menuItemAction.alt.tooltip||this._menuItemAction.alt.label,s=this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id,this._contextKeyService),a=s&&s.getLabel(),l=a?u("titleAndKb","{0} ({1})",o,a):o;i+=`
[${pv.modifierLabels[Zb].altKey}] ${l}`}this.label.title=i}}updateClass(){this.options.icon&&(this._commandAction!==this._menuItemAction?this._menuItemAction.alt&&this._updateItemClass(this._menuItemAction.alt.item):this._menuItemAction.alt&&this._updateItemClass(this._menuItemAction.item))}_updateItemClass(e){var t;this._itemClassDispose.value=void 0;let{element:n,label:i}=this;if(!n||!i)return;let o=this._commandAction.checked&&((t=e.toggled)===null||t===void 0?void 0:t.icon)?e.toggled.icon:e.icon;if(!!o)if(lt.isThemeIcon(o)){let s=lt.asClassNameArray(o);i.classList.add(...s),this._itemClassDispose.value=We(()=>{i.classList.remove(...s)})}else o.light&&i.style.setProperty("--menu-entry-icon-light",Fl(o.light)),o.dark&&i.style.setProperty("--menu-entry-icon-dark",Fl(o.dark)),i.classList.add("icon"),this._itemClassDispose.value=We(()=>{i.classList.remove("icon"),i.style.removeProperty("--menu-entry-icon-light"),i.style.removeProperty("--menu-entry-icon-dark")})}};ls=Hg([ji(2,Qe),ji(3,dt),ji(4,Q)],ls);var zg=class extends Au{constructor(e,t,n){var i,o;let s=Object.assign({},t!=null?t:Object.create(null),{menuAsChild:(i=t==null?void 0:t.menuAsChild)!==null&&i!==void 0?i:!1,classNames:(o=t==null?void 0:t.classNames)!==null&&o!==void 0?o:lt.isThemeIcon(e.item.icon)?lt.asClassName(e.item.icon):void 0});super(e,{getActions:()=>e.actions},n,s)}render(e){if(super.render(e),this.element){e.classList.add("menu-entry");let{icon:t}=this._action.item;t&&!lt.isThemeIcon(t)&&(this.element.classList.add("icon"),t.light&&this.element.style.setProperty("--menu-entry-icon-light",Fl(t.light)),t.dark&&this.element.style.setProperty("--menu-entry-icon-dark",Fl(t.dark)))}}};zg=Hg([ji(2,Zr)],zg);var Og=class extends au{constructor(e,t,n,i,o,s,a,l){var c,d,h;super(null,e);this._keybindingService=n,this._notificationService=i,this._contextMenuService=o,this._menuService=s,this._instaService=a,this._storageService=l,this._container=null,this._storageKey=`${e.item.submenu._debugName}_lastActionId`;let p,g=l.get(this._storageKey,1);g&&(p=e.actions.find(v=>g===v.id)),p||(p=e.actions[0]),this._defaultAction=this._instaService.createInstance(ls,p,void 0);let y=Object.assign({},t!=null?t:Object.create(null),{menuAsChild:(c=t==null?void 0:t.menuAsChild)!==null&&c!==void 0?c:!0,classNames:(d=t==null?void 0:t.classNames)!==null&&d!==void 0?d:["codicon","codicon-chevron-down"],actionRunner:(h=t==null?void 0:t.actionRunner)!==null&&h!==void 0?h:new $l});this._dropdown=new Au(e,e.actions,this._contextMenuService,y),this._dropdown.actionRunner.onDidRun(v=>{v.action instanceof sr&&this.update(v.action)})}update(e){this._storageService.store(this._storageKey,e.id,1,0),this._defaultAction.dispose(),this._defaultAction=this._instaService.createInstance(ls,e,void 0),this._defaultAction.actionRunner=new class extends $l{runAction(t,n){return VC(this,void 0,void 0,function*(){yield t.run(void 0)})}},this._container&&this._defaultAction.render(vS(this._container,W(".action-container")))}setActionContext(e){super.setActionContext(e),this._defaultAction.setActionContext(e),this._dropdown.setActionContext(e)}render(e){this._container=e,super.render(this._container),this._container.classList.add("monaco-dropdown-with-default");let t=W(".action-container");this._defaultAction.render(H(this._container,t)),this._register(Ve(t,dn.KEY_DOWN,i=>{let o=new Dl(i);o.equals(17)&&(this._defaultAction.element.tabIndex=-1,this._dropdown.focus(),o.stopPropagation())}));let n=W(".dropdown-action-container");this._dropdown.render(H(this._container,n)),this._register(Ve(n,dn.KEY_DOWN,i=>{var o;let s=new Dl(i);s.equals(15)&&(this._defaultAction.element.tabIndex=0,this._dropdown.setFocusable(!1),(o=this._defaultAction.element)===null||o===void 0||o.focus(),s.stopPropagation())}))}focus(e){e?this._dropdown.focus():(this._defaultAction.element.tabIndex=0,this._defaultAction.element.focus())}blur(){this._defaultAction.element.tabIndex=-1,this._dropdown.blur(),this._container.blur()}setFocusable(e){e?this._defaultAction.element.tabIndex=0:(this._defaultAction.element.tabIndex=-1,this._dropdown.setFocusable(!1))}dispose(){this._defaultAction.dispose(),this._dropdown.dispose(),super.dispose()}};Og=Hg([ji(2,Qe),ji(3,dt),ji(4,Zr),ji(5,Hi),ji(6,he),ji(7,en)],Og);function jC(r,e,t){return e instanceof sr?r.createInstance(ls,e,void 0):e instanceof Rh?e.item.rememberDefaultAction?r.createInstance(Og,e,t):r.createInstance(zg,e,t):void 0}Te();jl();Ke();Je();var UC=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},$C=function(r,e){return function(t,n){e(t,n,r)}},Bg=Pi("IPeekViewService");zi(Bg,class{constructor(){this._widgets=new Map}addExclusiveWidget(r,e){let t=this._widgets.get(r);t&&(t.listener.dispose(),t.widget.dispose());let n=()=>{let i=this._widgets.get(r);i&&i.widget===e&&(i.listener.dispose(),this._widgets.delete(r))};this._widgets.set(r,{widget:e,listener:e.onDidClose(n)})}});var Kt;(function(r){r.inPeekEditor=new de("inReferenceSearchEditor",!0,u("inReferenceSearchEditor","Whether the current code editor is embedded inside peek")),r.notInPeekEditor=r.inPeekEditor.toNegated()})(Kt||(Kt={}));var Ed=class{constructor(e,t){e instanceof bi&&Kt.inPeekEditor.bindTo(t)}dispose(){}};Ed.ID="editor.contrib.referenceController";Ed=UC([$C(1,Q)],Ed);J(Ed.ID,Ed);function KC(r){let e=r.get(Ee).getFocusedCodeEditor();return e instanceof bi?e.getParentEditor():e}var u1={headerBackgroundColor:fe.white,primaryHeadingColor:fe.fromHex("#333333"),secondaryHeadingColor:fe.fromHex("#6c6c6cb3")},Pa=class extends Ag{constructor(e,t,n){super(e,t);this.instantiationService=n,this._onDidClose=new $,this.onDidClose=this._onDidClose.event,oa(this.options,u1,!1)}dispose(){this.disposed||(this.disposed=!0,super.dispose(),this._onDidClose.fire(this))}style(e){let t=this.options;e.headerBackgroundColor&&(t.headerBackgroundColor=e.headerBackgroundColor),e.primaryHeadingColor&&(t.primaryHeadingColor=e.primaryHeadingColor),e.secondaryHeadingColor&&(t.secondaryHeadingColor=e.secondaryHeadingColor),super.style(e)}_applyStyles(){super._applyStyles();let e=this.options;this._headElement&&e.headerBackgroundColor&&(this._headElement.style.backgroundColor=e.headerBackgroundColor.toString()),this._primaryHeading&&e.primaryHeadingColor&&(this._primaryHeading.style.color=e.primaryHeadingColor.toString()),this._secondaryHeading&&e.secondaryHeadingColor&&(this._secondaryHeading.style.color=e.secondaryHeadingColor.toString()),this._bodyElement&&e.frameColor&&(this._bodyElement.style.borderColor=e.frameColor.toString())}_fillContainer(e){this.setCssClass("peekview-widget"),this._headElement=W(".head"),this._bodyElement=W(".body"),this._fillHead(this._headElement),this._fillBody(this._bodyElement),e.appendChild(this._headElement),e.appendChild(this._bodyElement)}_fillHead(e,t){let n=W(".peekview-title");this.options.supportOnTitleClick&&(n.classList.add("clickable"),fn(n,"click",s=>this._onTitleClick(s))),H(this._headElement,n),this._fillTitleIcon(n),this._primaryHeading=W("span.filename"),this._secondaryHeading=W("span.dirname"),this._metaHeading=W("span.meta"),H(n,this._primaryHeading,this._secondaryHeading,this._metaHeading);let i=W(".peekview-actions");H(this._headElement,i);let o=this._getActionBarOptions();this._actionbarWidget=new sd(i,o),this._disposables.add(this._actionbarWidget),t||this._actionbarWidget.push(new Mh("peekview.close",u("label.close","Close"),X.close.classNames,!0,()=>(this.dispose(),Promise.resolve())),{label:!1,icon:!0})}_fillTitleIcon(e){}_getActionBarOptions(){return{actionViewItemProvider:jC.bind(void 0,this.instantiationService),orientation:0}}_onTitleClick(e){}setTitle(e,t){this._primaryHeading&&this._secondaryHeading&&(this._primaryHeading.innerText=e,this._primaryHeading.setAttribute("title",e),t?this._secondaryHeading.innerText=t:qn(this._secondaryHeading))}setMetaTitle(e){this._metaHeading&&(e?(this._metaHeading.innerText=e,Qt(this._metaHeading)):Rt(this._metaHeading))}_doLayout(e,t){if(!this._isShowing&&e<0){this.dispose();return}let n=Math.ceil(this.editor.getOption(58)*1.2),i=Math.round(e-(n+2));this._doLayoutHead(n,t),this._doLayoutBody(i,t)}_doLayoutHead(e,t){this._headElement&&(this._headElement.style.height=`${e}px`,this._headElement.style.lineHeight=this._headElement.style.height)}_doLayoutBody(e,t){this._bodyElement&&(this._bodyElement.style.height=`${e}px`)}};Pa=UC([$C(2,he)],Pa);var qC=Y("peekViewTitle.background",{dark:zn(Yr,.1),light:zn(Yr,.1),hc:null},u("peekViewTitleBackground","Background color of the peek view title area.")),Nu=Y("peekViewTitleLabel.foreground",{dark:fe.white,light:fe.black,hc:fe.white},u("peekViewTitleForeground","Color of the peek view title.")),zu=Y("peekViewTitleDescription.foreground",{dark:"#ccccccb3",light:"#616161",hc:"#FFFFFF99"},u("peekViewTitleInfoForeground","Color of the peek view title info.")),XC=Y("peekView.border",{dark:Yr,light:Yr,hc:Jn},u("peekViewBorder","Color of the peek view borders and arrow.")),Wg=Y("peekViewResult.background",{dark:"#252526",light:"#F3F3F3",hc:fe.black},u("peekViewResultsBackground","Background color of the peek view result list.")),YC=Y("peekViewResult.lineForeground",{dark:"#bbbbbb",light:"#646465",hc:fe.white},u("peekViewResultsMatchForeground","Foreground color for line nodes in the peek view result list.")),ZC=Y("peekViewResult.fileForeground",{dark:fe.white,light:"#1E1E1E",hc:fe.white},u("peekViewResultsFileForeground","Foreground color for file nodes in the peek view result list.")),JC=Y("peekViewResult.selectionBackground",{dark:"#3399ff33",light:"#3399ff33",hc:null},u("peekViewResultsSelectionBackground","Background color of the selected entry in the peek view result list.")),QC=Y("peekViewResult.selectionForeground",{dark:fe.white,light:"#6C6C6C",hc:fe.white},u("peekViewResultsSelectionForeground","Foreground color of the selected entry in the peek view result list.")),Td=Y("peekViewEditor.background",{dark:"#001F33",light:"#F2F8FC",hc:fe.black},u("peekViewEditorBackground","Background color of the peek view editor.")),e_=Y("peekViewEditorGutter.background",{dark:Td,light:Td,hc:Td},u("peekViewEditorGutterBackground","Background color of the gutter in the peek view editor.")),t_=Y("peekViewResult.matchHighlightBackground",{dark:"#ea5c004d",light:"#ea5c004d",hc:null},u("peekViewResultsMatchHighlight","Match highlight color in the peek view result list.")),n_=Y("peekViewEditor.matchHighlightBackground",{dark:"#ff8f0099",light:"#f5d802de",hc:null},u("peekViewEditorMatchHighlight","Match highlight color in the peek view editor.")),i_=Y("peekViewEditor.matchHighlightBorder",{dark:null,light:null,hc:yo},u("peekViewEditorMatchHighlightBorder","Match highlight border in the peek view editor."));ne();Te();Je();Me();Ml();mi();Oe();ho();Fn();Wt();Ht();pr();Am();ce();Bt();rt();te();Be();Pe();Oe();ke();ho();U();Bt();rt();te();ne();bt();nr();Te();Ke();Ul();ke();Ae();U();na();Nn();Ze();te();ne();var m1=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},ii=class{constructor(e,t,n,i){this.isProviderFirst=e,this.parent=t,this.link=n,this._rangeCallback=i,this.id=mu.nextId()}get uri(){return this.link.uri}get range(){var e,t;return(t=(e=this._range)!==null&&e!==void 0?e:this.link.targetSelectionRange)!==null&&t!==void 0?t:this.link.range}set range(e){this._range=e,this._rangeCallback(this)}get ariaMessage(){var e;let t=(e=this.parent.getPreview(this))===null||e===void 0?void 0:e.preview(this.range);return t?u({key:"aria.oneReference.preview",comment:["Placeholders are: 0: filename, 1:line number, 2: column number, 3: preview snippet of source code"]},"symbol in {0} on line {1} at column {2}, {3}",cn(this.uri),this.range.startLineNumber,this.range.startColumn,t.value):u("aria.oneReference","symbol in {0} on line {1} at column {2}",cn(this.uri),this.range.startLineNumber,this.range.startColumn)}},o_=class{constructor(e){this._modelReference=e}dispose(){this._modelReference.dispose()}preview(e,t=8){let n=this._modelReference.object.textEditorModel;if(!n)return;let{startLineNumber:i,startColumn:o,endLineNumber:s,endColumn:a}=e,l=n.getWordUntilPosition({lineNumber:i,column:o-t}),c=new C(i,l.startColumn,i,o),d=new C(s,a,s,1073741824),h=n.getValueInRange(c).replace(/^\s+/,""),p=n.getValueInRange(e),g=n.getValueInRange(d).replace(/\s+$/,"");return{value:h+p+g,highlight:{start:h.length,end:h.length+p.length}}}},yr=class{constructor(e,t){this.parent=e,this.uri=t,this.children=[],this._previews=new uh}dispose(){ht(this._previews.values()),this._previews.clear()}getPreview(e){return this._previews.get(e.uri)}get ariaMessage(){let e=this.children.length;return e===1?u("aria.fileReferences.1","1 symbol in {0}, full path {1}",cn(this.uri),this.uri.fsPath):u("aria.fileReferences.N","{0} symbols in {1}, full path {2}",e,cn(this.uri),this.uri.fsPath)}resolve(e){return m1(this,void 0,void 0,function*(){if(this._previews.size!==0)return this;for(let t of this.children)if(!this._previews.has(t.uri))try{let n=yield e.createModelReference(t.uri);this._previews.set(t.uri,new o_(n))}catch(n){ae(n)}return this})}},zt=class{constructor(e,t){this.groups=[],this.references=[],this._onDidChangeReferenceRange=new $,this.onDidChangeReferenceRange=this._onDidChangeReferenceRange.event,this._links=e,this._title=t;let[n]=e;e.sort(zt._compareReferences);let i;for(let o of e)if((!i||!Sm.isEqual(i.uri,o.uri,!0))&&(i=new yr(this,o.uri),this.groups.push(i)),i.children.length===0||zt._compareReferences(o,i.children[i.children.length-1])!==0){let s=new ii(n===o,i,o,a=>this._onDidChangeReferenceRange.fire(a));this.references.push(s),i.children.push(s)}}dispose(){ht(this.groups),this._onDidChangeReferenceRange.dispose(),this.groups.length=0}clone(){return new zt(this._links,this._title)}get title(){return this._title}get isEmpty(){return this.groups.length===0}get ariaMessage(){return this.isEmpty?u("aria.result.0","No results found"):this.references.length===1?u("aria.result.1","Found 1 symbol in {0}",this.references[0].uri.fsPath):this.groups.length===1?u("aria.result.n1","Found {0} symbols in {1}",this.references.length,this.groups[0].uri.fsPath):u("aria.result.nm","Found {0} symbols in {1} files",this.references.length,this.groups.length)}nextOrPreviousReference(e,t){let{parent:n}=e,i=n.children.indexOf(e),o=n.children.length,s=n.parent.groups.length;return s===1||t&&i+1<o||!t&&i>0?(t?i=(i+1)%o:i=(i+o-1)%o,n.children[i]):(i=n.parent.groups.indexOf(n),t?(i=(i+1)%s,n.parent.groups[i].children[0]):(i=(i+s-1)%s,n.parent.groups[i].children[n.parent.groups[i].children.length-1]))}nearestReference(e,t){let n=this.references.map((i,o)=>({idx:o,prefixLen:Jo(i.uri.toString(),e.toString()),offsetDist:Math.abs(i.range.startLineNumber-t.lineNumber)*100+Math.abs(i.range.startColumn-t.column)})).sort((i,o)=>i.prefixLen>o.prefixLen?-1:i.prefixLen<o.prefixLen?1:i.offsetDist<o.offsetDist?-1:i.offsetDist>o.offsetDist?1:0)[0];if(n)return this.references[n.idx]}referenceAt(e,t){for(let n of this.references)if(n.uri.toString()===e.toString()&&C.containsPosition(n.range,t))return n}firstReference(){for(let e of this.references)if(e.isProviderFirst)return e;return this.references[0]}static _compareReferences(e,t){return Sm.compare(e.uri,t.uri)||C.compareRangesUsingStarts(e.range,t.range)}};Ne();fi();Ae();U();Rl();Nn();te();Ut();Oi();Ni();qr();Ne();OL();Rl();Fn();Nn();Ht();function Ou(r){if(!r)return;typeof r=="string"&&(r=Ce.file(r));let e=cn(r)||(r.scheme===ut.file?r.fsPath:r.path);return co&&FS(e)?Hu(e):e}function Hu(r){return AS(r)?r.charAt(0).toUpperCase()+r.slice(1):r}U();Nn();qr();ne();Ke();On();Me();var Vu=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},Id=function(r,e){return function(t,n){e(t,n,r)}},Bu=class{constructor(e){this._resolverService=e}hasChildren(e){return e instanceof zt||e instanceof yr}getChildren(e){if(e instanceof zt)return e.groups;if(e instanceof yr)return e.resolve(this._resolverService).then(t=>t.children);throw new Error("bad tree")}};Bu=Vu([Id(0,In)],Bu);var Gg=class{getHeight(){return 23}getTemplateId(e){return e instanceof yr?Ma.id:ds.id}},Wu=class{constructor(e){this._keybindingService=e}getKeyboardNavigationLabel(e){var t;if(e instanceof ii){let n=(t=e.parent.getPreview(e))===null||t===void 0?void 0:t.preview(e.range);if(n)return n.value}return cn(e.uri)}};Wu=Vu([Id(0,Qe)],Wu);var jg=class{getId(e){return e instanceof ii?e.id:e.uri}},Vg=class extends B{constructor(e,t,n){super();this._uriLabel=t;let i=document.createElement("div");i.classList.add("reference-file"),this.file=this._register(new yu(i,{supportHighlights:!0})),this.badge=new Wx(H(i,W(".count"))),this._register(Nx(this.badge,n)),e.appendChild(i)}set(e,t){let n=ia(e.uri);this.file.setLabel(Ou(e.uri),this._uriLabel.getUriLabel(n,{relative:!0}),{title:this._uriLabel.getUriLabel(e.uri),matches:t});let i=e.children.length;this.badge.setCount(i),i>1?this.badge.setTitleFormat(u("referencesCount","{0} references",i)):this.badge.setTitleFormat(u("referenceCount","{0} reference",i))}};Vg=Vu([Id(1,mr),Id(2,St)],Vg);var Ma=class r_{constructor(e){this._instantiationService=e,this.templateId=r_.id}renderTemplate(e){return this._instantiationService.createInstance(Vg,e)}renderElement(e,t,n){n.set(e.element,es(e.filterData))}disposeTemplate(e){e.dispose()}};Ma.id="FileReferencesRenderer";Ma=Vu([Id(0,he)],Ma);var s_=class{constructor(e){this.label=new $x(e,!1)}set(e,t){var n;let i=(n=e.parent.getPreview(e))===null||n===void 0?void 0:n.preview(e.range);if(!i||!i.value)this.label.set(`${cn(e.uri)}:${e.range.startLineNumber+1}:${e.range.startColumn+1}`);else{let{value:o,highlight:s}=i;t&&!ts.isDefault(t)?(this.label.element.classList.toggle("referenceMatch",!1),this.label.set(o,es(t))):(this.label.element.classList.toggle("referenceMatch",!0),this.label.set(o,[s]))}}},ds=class{constructor(){this.templateId=ds.id}renderTemplate(e){return new s_(e)}renderElement(e,t,n){n.set(e.element,e.filterData)}disposeTemplate(){}};ds.id="OneReferenceRenderer";var Ug=class{getWidgetAriaLabel(){return u("treeAriaLabel","References")}getAriaLabel(e){return e.ariaMessage}};ne();Ke();On();Je();Me();ZL();var g1=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},Eo=function(r,e){return function(t,n){e(t,n,r)}},a_=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},kd=class{constructor(e,t){this._editor=e,this._model=t,this._decorations=new Map,this._decorationIgnoreSet=new Set,this._callOnDispose=new R,this._callOnModelChange=new R,this._callOnDispose.add(this._editor.onDidChangeModel(()=>this._onModelChanged())),this._onModelChanged()}dispose(){this._callOnModelChange.dispose(),this._callOnDispose.dispose(),this.removeDecorations()}_onModelChanged(){this._callOnModelChange.clear();let e=this._editor.getModel();if(!!e){for(let t of this._model.references)if(t.uri.toString()===e.uri.toString()){this._addDecorations(t.parent);return}}}_addDecorations(e){if(!this._editor.hasModel())return;this._callOnModelChange.add(this._editor.getModel().onDidChangeDecorations(()=>this._onDecorationChanged()));let t=[],n=[];for(let o=0,s=e.children.length;o<s;o++){let a=e.children[o];this._decorationIgnoreSet.has(a.id)||a.uri.toString()===this._editor.getModel().uri.toString()&&(t.push({range:a.range,options:kd.DecorationOptions}),n.push(o))}let i=this._editor.deltaDecorations([],t);for(let o=0;o<i.length;o++)this._decorations.set(i[o],e.children[n[o]])}_onDecorationChanged(){let e=[],t=this._editor.getModel();if(!!t){for(let[n,i]of this._decorations){let o=t.getDecorationRange(n);if(!o)continue;let s=!1;if(!C.equalsRange(o,i.range)){if(C.spansMultipleLines(o))s=!0;else{let a=i.range.endColumn-i.range.startColumn,l=o.endColumn-o.startColumn;a!==l&&(s=!0)}s?(this._decorationIgnoreSet.add(i.id),e.push(n)):i.range=o}}for(let n=0,i=e.length;n<i;n++)this._decorations.delete(e[n]);this._editor.deltaDecorations(e,[])}}removeDecorations(){this._editor.deltaDecorations([...this._decorations.keys()],[]),this._decorations.clear()}};kd.DecorationOptions=xe.register({description:"reference-decoration",stickiness:1,className:"reference-decoration"});var $g=class{constructor(){this.ratio=.7,this.heightInLines=18}static fromJSON(e){let t,n;try{let i=JSON.parse(e);t=i.ratio,n=i.heightInLines}catch(i){}return{ratio:t||.7,heightInLines:n||18}}},l_=class extends Bx{},Gu=class extends Pa{constructor(e,t,n,i,o,s,a,l,c,d,h,p){super(e,{showFrame:!1,showArrow:!0,isResizeable:!0,isAccessible:!0,supportOnTitleClick:!0},s);this._defaultTreeKeyboardSupport=t,this.layoutData=n,this._textModelResolverService=o,this._instantiationService=s,this._peekViewService=a,this._uriLabel=l,this._undoRedoService=c,this._keybindingService=d,this._modeService=h,this._languageConfigurationService=p,this._disposeOnNewModel=new R,this._callOnDispose=new R,this._onDidSelectReference=new $,this.onDidSelectReference=this._onDidSelectReference.event,this._dim=new tt(0,0),this._applyTheme(i.getColorTheme()),this._callOnDispose.add(i.onDidColorThemeChange(this._applyTheme.bind(this))),this._peekViewService.addExclusiveWidget(e,this),this.create()}dispose(){this.setModel(void 0),this._callOnDispose.dispose(),this._disposeOnNewModel.dispose(),ht(this._preview),ht(this._previewNotAvailableMessage),ht(this._tree),ht(this._previewModelReference),this._splitView.dispose(),super.dispose()}_applyTheme(e){let t=e.getColor(XC)||fe.transparent;this.style({arrowColor:t,frameColor:t,headerBackgroundColor:e.getColor(qC)||fe.transparent,primaryHeadingColor:e.getColor(Nu),secondaryHeadingColor:e.getColor(zu)})}show(e){this.editor.revealRangeInCenterIfOutsideViewport(e,0),super.show(e,this.layoutData.heightInLines||18)}focusOnReferenceTree(){this._tree.domFocus()}focusOnPreviewEditor(){this._preview.focus()}isPreviewEditorFocused(){return this._preview.hasTextFocus()}_onTitleClick(e){this._preview&&this._preview.getModel()&&this._onDidSelectReference.fire({element:this._getFocusedReference(),kind:e.ctrlKey||e.metaKey||e.altKey?"side":"open",source:"title"})}_fillBody(e){this.setCssClass("reference-zone-widget"),this._messageContainer=H(e,W("div.messages")),Rt(this._messageContainer),this._splitView=new Hx(e,{orientation:1}),this._previewContainer=H(e,W("div.preview.inline"));let t={scrollBeyondLastLine:!1,scrollbar:{verticalScrollbarSize:14,horizontal:"auto",useShadows:!0,verticalHasArrows:!1,horizontalHasArrows:!1,alwaysConsumeMouseWheel:!1},overviewRulerLanes:2,fixedOverflowWidgets:!0,minimap:{enabled:!1}};this._preview=this._instantiationService.createInstance(bi,this._previewContainer,t,this.editor),Rt(this._previewContainer),this._previewNotAvailableMessage=new yi(u("missingPreviewMessage","no preview available"),yi.DEFAULT_CREATION_OPTIONS,null,null,this._undoRedoService,this._modeService,this._languageConfigurationService),this._treeContainer=H(e,W("div.ref-tree.inline"));let n={keyboardSupport:this._defaultTreeKeyboardSupport,accessibilityProvider:new Ug,keyboardNavigationLabelProvider:this._instantiationService.createInstance(Wu),identityProvider:new jg,openOnSingleClick:!0,selectionNavigation:!0,overrideStyles:{listBackground:Wg}};this._defaultTreeKeyboardSupport&&this._callOnDispose.add(fn(this._treeContainer,"keydown",o=>{o.equals(9)&&(this._keybindingService.dispatchEvent(o,o.target),o.stopPropagation())},!0)),this._tree=this._instantiationService.createInstance(l_,"ReferencesWidget",this._treeContainer,new Gg,[this._instantiationService.createInstance(Ma),this._instantiationService.createInstance(ds)],this._instantiationService.createInstance(Bu),n),this._splitView.addView({onDidChange:_t.None,element:this._previewContainer,minimumSize:200,maximumSize:Number.MAX_VALUE,layout:o=>{this._preview.layout({height:this._dim.height,width:o})}},Qm.Distribute),this._splitView.addView({onDidChange:_t.None,element:this._treeContainer,minimumSize:100,maximumSize:Number.MAX_VALUE,layout:o=>{this._treeContainer.style.height=`${this._dim.height}px`,this._treeContainer.style.width=`${o}px`,this._tree.layout(this._dim.height,o)}},Qm.Distribute),this._disposables.add(this._splitView.onDidSashChange(()=>{this._dim.width&&(this.layoutData.ratio=this._splitView.getViewSize(0)/this._dim.width)},void 0));let i=(o,s)=>{o instanceof ii&&(s==="show"&&this._revealReference(o,!1),this._onDidSelectReference.fire({element:o,kind:s,source:"tree"}))};this._tree.onDidOpen(o=>{o.sideBySide?i(o.element,"side"):o.editorOptions.pinned?i(o.element,"goto"):i(o.element,"show")}),Rt(this._treeContainer)}_onWidth(e){this._dim&&this._doLayoutBody(this._dim.height,e)}_doLayoutBody(e,t){super._doLayoutBody(e,t),this._dim=new tt(t,e),this.layoutData.heightInLines=this._viewZone?this._viewZone.heightInLines:this.layoutData.heightInLines,this._splitView.layout(t),this._splitView.resizeView(0,t*this.layoutData.ratio)}setSelection(e){return this._revealReference(e,!0).then(()=>{!this._model||(this._tree.setSelection([e]),this._tree.setFocus([e]))})}setModel(e){return this._disposeOnNewModel.clear(),this._model=e,this._model?this._onNewModel():Promise.resolve()}_onNewModel(){return this._model?this._model.isEmpty?(this.setTitle(""),this._messageContainer.innerText=u("noResults","No results"),Qt(this._messageContainer),Promise.resolve(void 0)):(Rt(this._messageContainer),this._decorationsManager=new kd(this._preview,this._model),this._disposeOnNewModel.add(this._decorationsManager),this._disposeOnNewModel.add(this._model.onDidChangeReferenceRange(e=>this._tree.rerender(e))),this._disposeOnNewModel.add(this._preview.onMouseDown(e=>{let{event:t,target:n}=e;if(t.detail!==2)return;let i=this._getFocusedReference();!i||this._onDidSelectReference.fire({element:{uri:i.uri,range:n.range},kind:t.ctrlKey||t.metaKey||t.altKey?"side":"open",source:"editor"})})),this.container.classList.add("results-loaded"),Qt(this._treeContainer),Qt(this._previewContainer),this._splitView.layout(this._dim.width),this.focusOnReferenceTree(),this._tree.setInput(this._model.groups.length===1?this._model.groups[0]:this._model)):Promise.resolve(void 0)}_getFocusedReference(){let[e]=this._tree.getFocus();if(e instanceof ii)return e;if(e instanceof yr&&e.children.length>0)return e.children[0]}revealReference(e){return a_(this,void 0,void 0,function*(){yield this._revealReference(e,!1),this._onDidSelectReference.fire({element:e,kind:"goto",source:"tree"})})}_revealReference(e,t){return a_(this,void 0,void 0,function*(){if(this._revealedReference===e)return;this._revealedReference=e,e.uri.scheme!==ut.inMemory?this.setTitle(mh(e.uri),this._uriLabel.getUriLabel(ia(e.uri))):this.setTitle(u("peekView.alternateTitle","References"));let n=this._textModelResolverService.createModelReference(e.uri);this._tree.getInput()===e.parent?this._tree.reveal(e):(t&&this._tree.reveal(e.parent),yield this._tree.expand(e.parent),this._tree.reveal(e));let i=yield n;if(!this._model){i.dispose();return}ht(this._previewModelReference);let o=i.object;if(o){let s=this._preview.getModel()===o.textEditorModel?0:1,a=C.lift(e.range).collapseToStart();this._previewModelReference=i,this._preview.setModel(o.textEditorModel),this._preview.setSelection(a),this._preview.revealRangeInCenter(a,s)}else this._preview.setModel(this._previewNotAvailableMessage),i.dispose()})}};Gu=g1([Eo(3,St),Eo(4,In),Eo(5,he),Eo(6,Bg),Eo(7,mr),Eo(8,Tv),Eo(9,Qe),Eo(10,It),Eo(11,ov)],Gu);ye((r,e)=>{let t=r.getColor(t_);t&&e.addRule(`.monaco-editor .reference-zone-widget .ref-tree .referenceMatch .highlight { background-color: ${t}; }`);let n=r.getColor(n_);n&&e.addRule(`.monaco-editor .reference-zone-widget .preview .reference-decoration { background-color: ${n}; }`);let i=r.getColor(i_);i&&e.addRule(`.monaco-editor .reference-zone-widget .preview .reference-decoration { border: 2px solid ${i}; box-sizing: border-box; }`);let o=r.getColor(yo);o&&e.addRule(`.monaco-editor .reference-zone-widget .ref-tree .referenceMatch .highlight { border: 1px dotted ${o}; box-sizing: border-box; }`);let s=r.getColor(Wg);s&&e.addRule(`.monaco-editor .reference-zone-widget .ref-tree { background-color: ${s}; }`);let a=r.getColor(YC);a&&e.addRule(`.monaco-editor .reference-zone-widget .ref-tree { color: ${a}; }`);let l=r.getColor(ZC);l&&e.addRule(`.monaco-editor .reference-zone-widget .ref-tree .reference-file { color: ${l}; }`);let c=r.getColor(JC);c&&e.addRule(`.monaco-editor .reference-zone-widget .ref-tree .monaco-list:focus .monaco-list-rows > .monaco-list-row.selected:not(.highlighted) { background-color: ${c}; }`);let d=r.getColor(QC);d&&e.addRule(`.monaco-editor .reference-zone-widget .ref-tree .monaco-list:focus .monaco-list-rows > .monaco-list-row.selected:not(.highlighted) { color: ${d} !important; }`);let h=r.getColor(Td);h&&e.addRule(`.monaco-editor .reference-zone-widget .preview .monaco-editor .monaco-editor-background,.monaco-editor .reference-zone-widget .preview .monaco-editor .inputarea.ime-input {	background-color: ${h};}`);let p=r.getColor(e_);p&&e.addRule(`.monaco-editor .reference-zone-widget .preview .monaco-editor .margin {	background-color: ${p};}`)});var f1=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},Da=function(r,e){return function(t,n){e(t,n,r)}},d_=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},cs=new de("referenceSearchVisible",!1,u("referenceSearchVisible","Whether reference peek is visible, like 'Peek References' or 'Peek Definition'")),Ui=class Kg{constructor(e,t,n,i,o,s,a,l){this._defaultTreeKeyboardSupport=e,this._editor=t,this._editorService=i,this._notificationService=o,this._instantiationService=s,this._storageService=a,this._configurationService=l,this._disposables=new R,this._requestIdPool=0,this._ignoreModelChangeEvent=!1,this._referenceSearchVisible=cs.bindTo(n)}static get(e){return e.getContribution(Kg.ID)}dispose(){var e,t;this._referenceSearchVisible.reset(),this._disposables.dispose(),(e=this._widget)===null||e===void 0||e.dispose(),(t=this._model)===null||t===void 0||t.dispose(),this._widget=void 0,this._model=void 0}toggleWidget(e,t,n){let i;if(this._widget&&(i=this._widget.position),this.closeWidget(),!!i&&e.containsPosition(i))return;this._peekMode=n,this._referenceSearchVisible.set(!0),this._disposables.add(this._editor.onDidChangeModelLanguage(()=>{this.closeWidget()})),this._disposables.add(this._editor.onDidChangeModel(()=>{this._ignoreModelChangeEvent||this.closeWidget()}));let o="peekViewLayout",s=$g.fromJSON(this._storageService.get(o,0,"{}"));this._widget=this._instantiationService.createInstance(Gu,this._editor,this._defaultTreeKeyboardSupport,s),this._widget.setTitle(u("labelLoading","Loading...")),this._widget.show(e),this._disposables.add(this._widget.onDidClose(()=>{t.cancel(),this._widget&&(this._storageService.store(o,JSON.stringify(this._widget.layoutData),0,1),this._widget=void 0),this.closeWidget()})),this._disposables.add(this._widget.onDidSelectReference(l=>{let{element:c,kind:d}=l;if(!!c)switch(d){case"open":(l.source!=="editor"||!this._configurationService.getValue("editor.stablePeek"))&&this.openReference(c,!1,!1);break;case"side":this.openReference(c,!0,!1);break;case"goto":n?this._gotoReference(c):this.openReference(c,!1,!0);break}}));let a=++this._requestIdPool;t.then(l=>{var c;if(a!==this._requestIdPool||!this._widget){l.dispose();return}return(c=this._model)===null||c===void 0||c.dispose(),this._model=l,this._widget.setModel(this._model).then(()=>{if(this._widget&&this._model&&this._editor.hasModel()){this._model.isEmpty?this._widget.setMetaTitle(""):this._widget.setMetaTitle(u("metaTitle.N","{0} ({1})",this._model.title,this._model.references.length));let d=this._editor.getModel().uri,h=new q(e.startLineNumber,e.startColumn),p=this._model.nearestReference(d,h);if(p)return this._widget.setSelection(p).then(()=>{this._widget&&this._editor.getOption(76)==="editor"&&this._widget.focusOnPreviewEditor()})}})},l=>{this._notificationService.error(l)})}changeFocusBetweenPreviewAndReferences(){!this._widget||(this._widget.isPreviewEditorFocused()?this._widget.focusOnReferenceTree():this._widget.focusOnPreviewEditor())}goToNextOrPreviousReference(e){return d_(this,void 0,void 0,function*(){if(!this._editor.hasModel()||!this._model||!this._widget)return;let t=this._widget.position;if(!t)return;let n=this._model.nearestReference(this._editor.getModel().uri,t);if(!n)return;let i=this._model.nextOrPreviousReference(n,e),o=this._editor.hasTextFocus(),s=this._widget.isPreviewEditorFocused();yield this._widget.setSelection(i),yield this._gotoReference(i),o?this._editor.focus():this._widget&&s&&this._widget.focusOnPreviewEditor()})}revealReference(e){return d_(this,void 0,void 0,function*(){!this._editor.hasModel()||!this._model||!this._widget||(yield this._widget.revealReference(e))})}closeWidget(e=!0){var t,n;(t=this._widget)===null||t===void 0||t.dispose(),(n=this._model)===null||n===void 0||n.dispose(),this._referenceSearchVisible.reset(),this._disposables.clear(),this._widget=void 0,this._model=void 0,e&&this._editor.focus(),this._requestIdPool+=1}_gotoReference(e){this._widget&&this._widget.hide(),this._ignoreModelChangeEvent=!0;let t=C.lift(e.range).collapseToStart();return this._editorService.openCodeEditor({resource:e.uri,options:{selection:t}},this._editor).then(n=>{var i;if(this._ignoreModelChangeEvent=!1,!n||!this._widget){this.closeWidget();return}if(this._editor===n)this._widget.show(t),this._widget.focusOnReferenceTree();else{let o=Kg.get(n),s=this._model.clone();this.closeWidget(),n.focus(),o.toggleWidget(t,Le(a=>Promise.resolve(s)),(i=this._peekMode)!==null&&i!==void 0?i:!1)}},n=>{this._ignoreModelChangeEvent=!1,ae(n)})}openReference(e,t,n){t||this.closeWidget();let{uri:i,range:o}=e;this._editorService.openCodeEditor({resource:i,options:{selection:o,pinned:n}},this._editor,t)}};Ui.ID="editor.contrib.referencesController";Ui=f1([Da(2,Q),Da(3,Ee),Da(4,dt),Da(5,he),Da(6,en),Da(7,hn)],Ui);function hs(r,e){let t=KC(r);if(!t)return;let n=Ui.get(t);n&&e(n)}jt.registerCommandAndKeybindingRule({id:"togglePeekWidgetFocus",weight:100,primary:$e(2089,60),when:O.or(cs,Kt.inPeekEditor),handler(r){hs(r,e=>{e.changeFocusBetweenPreviewAndReferences()})}});jt.registerCommandAndKeybindingRule({id:"goToNextReference",weight:100-10,primary:62,secondary:[70],when:O.or(cs,Kt.inPeekEditor),handler(r){hs(r,e=>{e.goToNextOrPreviousReference(!0)})}});jt.registerCommandAndKeybindingRule({id:"goToPreviousReference",weight:100-10,primary:1086,secondary:[1094],when:O.or(cs,Kt.inPeekEditor),handler(r){hs(r,e=>{e.goToNextOrPreviousReference(!1)})}});Ie.registerCommandAlias("goToNextReferenceFromEmbeddedEditor","goToNextReference");Ie.registerCommandAlias("goToPreviousReferenceFromEmbeddedEditor","goToPreviousReference");Ie.registerCommandAlias("closeReferenceSearchEditor","closeReferenceSearch");Ie.registerCommand("closeReferenceSearch",r=>hs(r,e=>e.closeWidget()));jt.registerKeybindingRule({id:"closeReferenceSearch",weight:100-101,primary:9,secondary:[1033],when:O.and(Kt.inPeekEditor,O.not("config.editor.stablePeek"))});jt.registerKeybindingRule({id:"closeReferenceSearch",weight:200+50,primary:9,secondary:[1033],when:O.and(cs,O.not("config.editor.stablePeek"))});jt.registerCommandAndKeybindingRule({id:"revealReference",weight:200,primary:3,mac:{primary:3,secondary:[2066]},when:O.and(cs,eg),handler(r){var e;let n=(e=r.get(hu).lastFocusedList)===null||e===void 0?void 0:e.getFocus();Array.isArray(n)&&n[0]instanceof ii&&hs(r,i=>i.revealReference(n[0]))}});jt.registerCommandAndKeybindingRule({id:"openReferenceToSide",weight:100,primary:2051,mac:{primary:259},when:O.and(cs,eg),handler(r){var e;let n=(e=r.get(hu).lastFocusedList)===null||e===void 0?void 0:e.getFocus();Array.isArray(n)&&n[0]instanceof ii&&hs(r,i=>i.openReference(n[0],!0,!0))}});Ie.registerCommand("openReference",r=>{var e;let n=(e=r.get(hu).lastFocusedList)===null||e===void 0?void 0:e.getFocus();Array.isArray(n)&&n[0]instanceof ii&&hs(r,i=>i.openReference(n[0],!1,!0))});Ae();U();Nn();ce();Bt();te();ne();Te();jl();Ke();On();Ul();var c_=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},Ld=function(r,e){return function(t,n){e(t,n,r)}},Yg=new de("hasSymbols",!1,u("hasSymbols","Whether there are symbol locations that can be navigated via keyboard-only.")),Pd=Pi("ISymbolNavigationService"),qg=class{constructor(e,t,n,i){this._editorService=t,this._notificationService=n,this._keybindingService=i,this._currentModel=void 0,this._currentIdx=-1,this._ignoreEditorChange=!1,this._ctxHasSymbols=Yg.bindTo(e)}reset(){var e,t;this._ctxHasSymbols.reset(),(e=this._currentState)===null||e===void 0||e.dispose(),(t=this._currentMessage)===null||t===void 0||t.dispose(),this._currentModel=void 0,this._currentIdx=-1}put(e){let t=e.parent.parent;if(t.references.length<=1){this.reset();return}this._currentModel=t,this._currentIdx=t.references.indexOf(e),this._ctxHasSymbols.set(!0),this._showMessage();let n=new Xg(this._editorService),i=n.onDidChange(o=>{if(this._ignoreEditorChange)return;let s=this._editorService.getActiveCodeEditor();if(!s)return;let a=s.getModel(),l=s.getPosition();if(!a||!l)return;let c=!1,d=!1;for(let h of t.references)if(ph(h.uri,a.uri))c=!0,d=d||C.containsPosition(h.range,l);else if(c)break;(!c||!d)&&this.reset()});this._currentState=dm(n,i)}revealNext(e){if(!this._currentModel)return Promise.resolve();this._currentIdx+=1,this._currentIdx%=this._currentModel.references.length;let t=this._currentModel.references[this._currentIdx];return this._showMessage(),this._ignoreEditorChange=!0,this._editorService.openCodeEditor({resource:t.uri,options:{selection:C.collapseToStart(t.range),selectionRevealType:3}},e).finally(()=>{this._ignoreEditorChange=!1})}_showMessage(){var e;(e=this._currentMessage)===null||e===void 0||e.dispose();let t=this._keybindingService.lookupKeybinding("editor.gotoNextSymbolFromResult"),n=t?u("location.kb","Symbol {0} of {1}, {2} for next",this._currentIdx+1,this._currentModel.references.length,t.getLabel()):u("location","Symbol {0} of {1}",this._currentIdx+1,this._currentModel.references.length);this._currentMessage=this._notificationService.status(n)}};qg=c_([Ld(0,Q),Ld(1,Ee),Ld(2,dt),Ld(3,Qe)],qg);zi(Pd,qg,!0);K(new class extends it{constructor(){super({id:"editor.gotoNextSymbolFromResult",precondition:Yg,kbOpts:{weight:100,primary:70}})}runEditorCommand(r,e){return r.get(Pd).revealNext(e)}});jt.registerCommandAndKeybindingRule({id:"editor.gotoNextSymbolFromResult.cancel",weight:100,when:Yg,primary:9,handler(r){r.get(Pd).reset()}});var Xg=class{constructor(e){this._listener=new Map,this._disposables=new R,this._onDidChange=new $,this.onDidChange=this._onDidChange.event,this._disposables.add(e.onCodeEditorRemove(this._onDidRemoveEditor,this)),this._disposables.add(e.onCodeEditorAdd(this._onDidAddEditor,this)),e.listCodeEditors().forEach(this._onDidAddEditor,this)}dispose(){this._disposables.dispose(),this._onDidChange.dispose(),ht(this._listener.values())}_onDidAddEditor(e){this._listener.set(e,dm(e.onDidChangeCursorPosition(t=>this._onDidChange.fire({editor:e})),e.onDidChangeModelContent(t=>this._onDidChange.fire({editor:e}))))}_onDidRemoveEditor(e){var t;(t=this._listener.get(e))===null||t===void 0||t.dispose(),this._listener.delete(e)}};Xg=c_([Ld(0,Ee)],Xg);ne();un();bt();Te();Ke();Qr();at();ke();ce();Pe();var h_=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})};function Md(r,e,t,n){let o=t.ordered(r).map(s=>Promise.resolve(n(s,r,e)).then(void 0,a=>{je(a)}));return Promise.all(o).then(s=>{let a=[];for(let l of s)Array.isArray(l)?a.push(...l):l&&a.push(l);return a})}function Dd(r,e,t){return Md(r,e,xh,(n,i,o)=>n.provideDefinition(i,o,t))}function Zg(r,e,t){return Md(r,e,XS,(n,i,o)=>n.provideDeclaration(i,o,t))}function Jg(r,e,t){return Md(r,e,YS,(n,i,o)=>n.provideImplementation(i,o,t))}function Qg(r,e,t){return Md(r,e,ZS,(n,i,o)=>n.provideTypeDefinition(i,o,t))}function Rd(r,e,t,n){return Md(r,e,KS,(i,o,s)=>h_(this,void 0,void 0,function*(){let a=yield i.provideReferences(o,s,{includeDeclaration:!0},n);if(!t||!a||a.length!==2)return a;let l=yield i.provideReferences(o,s,{includeDeclaration:!1},n);return l&&l.length===1?l:a}))}function Fd(r){return h_(this,void 0,void 0,function*(){let e=yield r(),t=new zt(e,""),n=t.references.map(i=>i.link);return t.dispose(),n})}yn("_executeDefinitionProvider",(r,e)=>Fd(()=>Dd(r,e,ue.None)));yn("_executeDeclarationProvider",(r,e)=>Fd(()=>Zg(r,e,ue.None)));yn("_executeImplementationProvider",(r,e)=>Fd(()=>Jg(r,e,ue.None)));yn("_executeTypeDefinitionProvider",(r,e)=>Fd(()=>Qg(r,e,ue.None)));yn("_executeReferenceProvider",(r,e)=>Fd(()=>Rd(r,e,!1,ue.None)));var oi=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},ef,tf,nf,of,rf,sf,af,lf;Zn.appendMenuItem(oe.EditorContext,{submenu:oe.EditorContextPeek,title:u("peek.submenu","Peek"),group:"navigation",order:100});var u_=new Set;function Si(r){let e=new r;return Nh(e),u_.add(e.id),e}var us=class extends N{constructor(e,t){super(t);this._configuration=e}run(e,t){if(!t.hasModel())return Promise.resolve(void 0);let n=e.get(dt),i=e.get(Ee),o=e.get(Co),s=e.get(Pd),a=t.getModel(),l=t.getPosition(),c=new od(t,5),d=Js(this._getLocationModel(a,l,c.token),c.token).then(h=>oi(this,void 0,void 0,function*(){if(!h||c.token.isCancellationRequested)return;gt(h.ariaMessage);let p;if(h.referenceAt(a.uri,l)){let y=this._getAlternativeCommand(t);y!==this.id&&u_.has(y)&&(p=t.getAction(y))}let g=h.references.length;if(g===0){if(!this._configuration.muteMessage){let y=a.getWordAtPosition(l);$t.get(t).showMessage(this._getNoResultFoundMessage(y),l)}}else if(g===1&&p)p.run();else return this._onResult(i,s,t,h)}),h=>{n.error(h)}).finally(()=>{c.dispose()});return o.showWhile(d,250),d}_onResult(e,t,n,i){return oi(this,void 0,void 0,function*(){let o=this._getGoToPreference(n);if(!(n instanceof bi)&&(this._configuration.openInPeek||o==="peek"&&i.references.length>1))this._openInPeek(n,i);else{let s=i.firstReference(),a=i.references.length>1&&o==="gotoAndPeek",l=yield this._openReference(n,e,s,this._configuration.openToSide,!a);a&&l?this._openInPeek(l,i):i.dispose(),o==="goto"&&t.put(s)}})}_openReference(e,t,n,i,o){return oi(this,void 0,void 0,function*(){let s;if(US(n)&&(s=n.targetSelectionRange),s||(s=n.range),!s)return;let a=yield t.openCodeEditor({resource:n.uri,options:{selection:C.collapseToStart(s),selectionRevealType:3}},e,i);if(!!a){if(o){let l=a.getModel(),c=a.deltaDecorations([],[{range:s,options:{description:"symbol-navigate-action-highlight",className:"symbolHighlight"}}]);setTimeout(()=>{a.getModel()===l&&a.deltaDecorations(c,[])},350)}return a}})}_openInPeek(e,t){let n=Ui.get(e);n&&e.hasModel()?n.toggleWidget(e.getSelection(),Le(i=>Promise.resolve(t)),this._configuration.openInPeek):t.dispose()}},Ra=class extends us{_getLocationModel(e,t,n){return oi(this,void 0,void 0,function*(){return new zt(yield Dd(e,t,n),u("def.title","Definitions"))})}_getNoResultFoundMessage(e){return e&&e.word?u("noResultWord","No definition found for '{0}'",e.word):u("generic.noResults","No definition found")}_getAlternativeCommand(e){return e.getOption(50).alternativeDefinitionCommand}_getGoToPreference(e){return e.getOption(50).multipleDefinitions}},p_=th&&!rS?2118:70;Si((ef=class df extends Ra{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:df.id,label:u("actions.goToDecl.label","Go to Definition"),alias:"Go to Definition",precondition:O.and(x.hasDefinitionProvider,x.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:x.editorTextFocus,primary:p_,weight:100},contextMenuOpts:{group:"navigation",order:1.1}});Ie.registerCommandAlias("editor.action.goToDeclaration",df.id)}},ef.id="editor.action.revealDefinition",ef));Si((tf=class cf extends Ra{constructor(){super({openToSide:!0,openInPeek:!1,muteMessage:!1},{id:cf.id,label:u("actions.goToDeclToSide.label","Open Definition to the Side"),alias:"Open Definition to the Side",precondition:O.and(x.hasDefinitionProvider,x.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:x.editorTextFocus,primary:$e(2089,p_),weight:100}});Ie.registerCommandAlias("editor.action.openDeclarationToTheSide",cf.id)}},tf.id="editor.action.revealDefinitionAside",tf));Si((nf=class hf extends Ra{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:hf.id,label:u("actions.previewDecl.label","Peek Definition"),alias:"Peek Definition",precondition:O.and(x.hasDefinitionProvider,Kt.notInPeekEditor,x.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:x.editorTextFocus,primary:582,linux:{primary:3140},weight:100},contextMenuOpts:{menuId:oe.EditorContextPeek,group:"peek",order:2}});Ie.registerCommandAlias("editor.action.previewDeclaration",hf.id)}},nf.id="editor.action.peekDefinition",nf));var uf=class extends us{_getLocationModel(e,t,n){return oi(this,void 0,void 0,function*(){return new zt(yield Zg(e,t,n),u("decl.title","Declarations"))})}_getNoResultFoundMessage(e){return e&&e.word?u("decl.noResultWord","No declaration found for '{0}'",e.word):u("decl.generic.noResults","No declaration found")}_getAlternativeCommand(e){return e.getOption(50).alternativeDeclarationCommand}_getGoToPreference(e){return e.getOption(50).multipleDeclarations}};Si((of=class m_ extends uf{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:m_.id,label:u("actions.goToDeclaration.label","Go to Declaration"),alias:"Go to Declaration",precondition:O.and(x.hasDeclarationProvider,x.isInWalkThroughSnippet.toNegated()),contextMenuOpts:{group:"navigation",order:1.3}})}_getNoResultFoundMessage(e){return e&&e.word?u("decl.noResultWord","No declaration found for '{0}'",e.word):u("decl.generic.noResults","No declaration found")}},of.id="editor.action.revealDeclaration",of));Si(class extends uf{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:"editor.action.peekDeclaration",label:u("actions.peekDecl.label","Peek Declaration"),alias:"Peek Declaration",precondition:O.and(x.hasDeclarationProvider,Kt.notInPeekEditor,x.isInWalkThroughSnippet.toNegated()),contextMenuOpts:{menuId:oe.EditorContextPeek,group:"peek",order:3}})}});var pf=class extends us{_getLocationModel(e,t,n){return oi(this,void 0,void 0,function*(){return new zt(yield Qg(e,t,n),u("typedef.title","Type Definitions"))})}_getNoResultFoundMessage(e){return e&&e.word?u("goToTypeDefinition.noResultWord","No type definition found for '{0}'",e.word):u("goToTypeDefinition.generic.noResults","No type definition found")}_getAlternativeCommand(e){return e.getOption(50).alternativeTypeDefinitionCommand}_getGoToPreference(e){return e.getOption(50).multipleTypeDefinitions}};Si((rf=class g_ extends pf{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:g_.ID,label:u("actions.goToTypeDefinition.label","Go to Type Definition"),alias:"Go to Type Definition",precondition:O.and(x.hasTypeDefinitionProvider,x.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:x.editorTextFocus,primary:0,weight:100},contextMenuOpts:{group:"navigation",order:1.4}})}},rf.ID="editor.action.goToTypeDefinition",rf));Si((sf=class f_ extends pf{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:f_.ID,label:u("actions.peekTypeDefinition.label","Peek Type Definition"),alias:"Peek Type Definition",precondition:O.and(x.hasTypeDefinitionProvider,Kt.notInPeekEditor,x.isInWalkThroughSnippet.toNegated()),contextMenuOpts:{menuId:oe.EditorContextPeek,group:"peek",order:4}})}},sf.ID="editor.action.peekTypeDefinition",sf));var mf=class extends us{_getLocationModel(e,t,n){return oi(this,void 0,void 0,function*(){return new zt(yield Jg(e,t,n),u("impl.title","Implementations"))})}_getNoResultFoundMessage(e){return e&&e.word?u("goToImplementation.noResultWord","No implementation found for '{0}'",e.word):u("goToImplementation.generic.noResults","No implementation found")}_getAlternativeCommand(e){return e.getOption(50).alternativeImplementationCommand}_getGoToPreference(e){return e.getOption(50).multipleImplementations}};Si((af=class y_ extends mf{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:y_.ID,label:u("actions.goToImplementation.label","Go to Implementations"),alias:"Go to Implementations",precondition:O.and(x.hasImplementationProvider,x.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:x.editorTextFocus,primary:2118,weight:100},contextMenuOpts:{group:"navigation",order:1.45}})}},af.ID="editor.action.goToImplementation",af));Si((lf=class b_ extends mf{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:b_.ID,label:u("actions.peekImplementation.label","Peek Implementations"),alias:"Peek Implementations",precondition:O.and(x.hasImplementationProvider,Kt.notInPeekEditor,x.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:x.editorTextFocus,primary:3142,weight:100},contextMenuOpts:{menuId:oe.EditorContextPeek,group:"peek",order:5}})}},lf.ID="editor.action.peekImplementation",lf));var gf=class extends us{_getNoResultFoundMessage(e){return e?u("references.no","No references found for '{0}'",e.word):u("references.noGeneric","No references found")}_getAlternativeCommand(e){return e.getOption(50).alternativeReferenceCommand}_getGoToPreference(e){return e.getOption(50).multipleReferences}};Si(class extends gf{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:"editor.action.goToReferences",label:u("goToReferences.label","Go to References"),alias:"Go to References",precondition:O.and(x.hasReferenceProvider,Kt.notInPeekEditor,x.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:x.editorTextFocus,primary:1094,weight:100},contextMenuOpts:{group:"navigation",order:1.45}})}_getLocationModel(e,t,n){return oi(this,void 0,void 0,function*(){return new zt(yield Rd(e,t,!0,n),u("ref.title","References"))})}});Si(class extends gf{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:"editor.action.referenceSearch.trigger",label:u("references.action.label","Peek References"),alias:"Peek References",precondition:O.and(x.hasReferenceProvider,Kt.notInPeekEditor,x.isInWalkThroughSnippet.toNegated()),contextMenuOpts:{menuId:oe.EditorContextPeek,group:"peek",order:6}})}_getLocationModel(e,t,n){return oi(this,void 0,void 0,function*(){return new zt(yield Rd(e,t,!1,n),u("ref.title","References"))})}});var S_=class extends us{constructor(e,t,n){super(e,{id:"editor.action.goToLocation",label:u("label.generic","Go to Any Symbol"),alias:"Go to Any Symbol",precondition:O.and(Kt.notInPeekEditor,x.isInWalkThroughSnippet.toNegated())});this._references=t,this._gotoMultipleBehaviour=n}_getLocationModel(e,t,n){return oi(this,void 0,void 0,function*(){return new zt(this._references,u("generic.title","Locations"))})}_getNoResultFoundMessage(e){return e&&u("generic.noResult","No results for '{0}'",e.word)||""}_getGoToPreference(e){var t;return(t=this._gotoMultipleBehaviour)!==null&&t!==void 0?t:e.getOption(50).multipleReferences}_getAlternativeCommand(){return""}};Ie.registerCommand({id:"editor.action.goToLocations",description:{description:"Go to locations from a position in a file",args:[{name:"uri",description:"The text document in which to start",constraint:Ce},{name:"position",description:"The position at which to start",constraint:q.isIPosition},{name:"locations",description:"An array of locations.",constraint:Array},{name:"multiple",description:"Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto"},{name:"noResultsMessage",description:"Human readable message that shows when locations is empty."}]},handler:(r,e,t,n,i,o,s)=>oi(void 0,void 0,void 0,function*(){Ue(Ce.isUri(e)),Ue(q.isIPosition(t)),Ue(Array.isArray(n)),Ue(typeof i=="undefined"||typeof i=="string"),Ue(typeof s=="undefined"||typeof s=="boolean");let a=r.get(Ee),l=yield a.openCodeEditor({resource:e},a.getFocusedCodeEditor());if(Fm(l))return l.setPosition(t),l.revealPositionInCenterIfOutsideViewport(t,0),l.invokeWithinContext(c=>{let d=new class extends S_{_getNoResultFoundMessage(h){return o||super._getNoResultFoundMessage(h)}}({muteMessage:!Boolean(o),openInPeek:Boolean(s),openToSide:!1},n,i);c.get(he).invokeFunction(d.run.bind(d),l)})})});Ie.registerCommand({id:"editor.action.peekLocations",description:{description:"Peek locations from a position in a file",args:[{name:"uri",description:"The text document in which to start",constraint:Ce},{name:"position",description:"The position at which to start",constraint:q.isIPosition},{name:"locations",description:"An array of locations.",constraint:Array},{name:"multiple",description:"Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto"}]},handler:(r,e,t,n,i)=>oi(void 0,void 0,void 0,function*(){r.get(pt).executeCommand("editor.action.goToLocations",e,t,n,i,void 0,!0)})});Ie.registerCommand({id:"editor.action.findReferences",handler:(r,e,t)=>{Ue(Ce.isUri(e)),Ue(q.isIPosition(t));let n=r.get(Ee);return n.openCodeEditor({resource:e},n.getFocusedCodeEditor()).then(i=>{if(!Fm(i)||!i.hasModel())return;let o=Ui.get(i);if(!o)return;let s=Le(l=>Rd(i.getModel(),q.lift(t),!1,l).then(c=>new zt(c,u("ref.title","References")))),a=new C(t.lineNumber,t.column,t.lineNumber,t.column);return Promise.resolve(o.toggleWidget(a,s,!1))})}});Ie.registerCommandAlias("editor.action.showReferences","editor.action.peekLocations");Zn.appendMenuItems([{id:oe.MenubarGoMenu,item:{command:{id:"editor.action.revealDefinition",title:u({key:"miGotoDefinition",comment:["&& denotes a mnemonic"]},"Go to &&Definition")},group:"4_symbol_nav",order:2}},{id:oe.MenubarGoMenu,item:{command:{id:"editor.action.revealDeclaration",title:u({key:"miGotoDeclaration",comment:["&& denotes a mnemonic"]},"Go to &&Declaration")},group:"4_symbol_nav",order:3}},{id:oe.MenubarGoMenu,item:{command:{id:"editor.action.goToTypeDefinition",title:u({key:"miGotoTypeDefinition",comment:["&& denotes a mnemonic"]},"Go to &&Type Definition")},group:"4_symbol_nav",order:3}},{id:oe.MenubarGoMenu,item:{command:{id:"editor.action.goToImplementation",title:u({key:"miGotoImplementation",comment:["&& denotes a mnemonic"]},"Go to &&Implementations")},group:"4_symbol_nav",order:4}},{id:oe.MenubarGoMenu,item:{command:{id:"editor.action.goToReferences",title:u({key:"miGotoReference",comment:["&& denotes a mnemonic"]},"Go to &&References")},group:"4_symbol_nav",order:5}}]);var y1=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},v_=function(r,e){return function(t,n){e(t,n,r)}},br=class Ad{constructor(e,t,n){this.textModelResolverService=t,this.modeService=n,this.toUnhook=new R,this.toUnhookForKeyboard=new R,this.linkDecorations=[],this.currentWordAtPosition=null,this.previousPromise=null,this.editor=e;let i=new _d(e);this.toUnhook.add(i),this.toUnhook.add(i.onMouseMoveOrRelevantKeyDown(([o,s])=>{this.startFindDefinitionFromMouse(o,_n(s))})),this.toUnhook.add(i.onExecute(o=>{this.isEnabled(o)&&this.gotoDefinition(o.target.position,o.hasSideBySideModifier).then(()=>{this.removeLinkDecorations()},s=>{this.removeLinkDecorations(),ae(s)})})),this.toUnhook.add(i.onCancel(()=>{this.removeLinkDecorations(),this.currentWordAtPosition=null}))}static get(e){return e.getContribution(Ad.ID)}startFindDefinitionFromCursor(e){return this.startFindDefinition(e).then(()=>{this.toUnhookForKeyboard.add(this.editor.onDidChangeCursorPosition(()=>{this.currentWordAtPosition=null,this.removeLinkDecorations(),this.toUnhookForKeyboard.clear()})),this.toUnhookForKeyboard.add(this.editor.onKeyDown(t=>{t&&(this.currentWordAtPosition=null,this.removeLinkDecorations(),this.toUnhookForKeyboard.clear())}))})}startFindDefinitionFromMouse(e,t){if(e.target.type===9&&this.linkDecorations.length>0)return;if(!this.editor.hasModel()||!this.isEnabled(e,t)){this.currentWordAtPosition=null,this.removeLinkDecorations();return}let n=e.target.position;this.startFindDefinition(n)}startFindDefinition(e){var t;this.toUnhookForKeyboard.clear();let n=e?(t=this.editor.getModel())===null||t===void 0?void 0:t.getWordAtPosition(e):null;if(!n)return this.currentWordAtPosition=null,this.removeLinkDecorations(),Promise.resolve(0);if(this.currentWordAtPosition&&this.currentWordAtPosition.startColumn===n.startColumn&&this.currentWordAtPosition.endColumn===n.endColumn&&this.currentWordAtPosition.word===n.word)return Promise.resolve(0);this.currentWordAtPosition=n;let i=new su(this.editor,15);return this.previousPromise&&(this.previousPromise.cancel(),this.previousPromise=null),this.previousPromise=Le(o=>this.findDefinition(e,o)),this.previousPromise.then(o=>{if(!o||!o.length||!i.validate(this.editor)){this.removeLinkDecorations();return}if(o.length>1)this.addDecoration(new C(e.lineNumber,n.startColumn,e.lineNumber,n.endColumn),new kn().appendText(u("multipleResults","Click to show {0} definitions.",o.length)));else{let s=o[0];if(!s.uri)return;this.textModelResolverService.createModelReference(s.uri).then(a=>{if(!a.object||!a.object.textEditorModel){a.dispose();return}let{object:{textEditorModel:l}}=a,{startLineNumber:c}=s.range;if(c<1||c>l.getLineCount()){a.dispose();return}let d=this.getPreviewValue(l,c,s),h;s.originSelectionRange?h=C.lift(s.originSelectionRange):h=new C(e.lineNumber,n.startColumn,e.lineNumber,n.endColumn);let p=this.modeService.getModeIdByFilepathOrFirstLine(l.uri);this.addDecoration(h,new kn().appendCodeblock(p||"",d)),a.dispose()})}}).then(void 0,ae)}getPreviewValue(e,t,n){let i=n.targetSelectionRange?n.range:this.getPreviewRangeBasedOnBrackets(e,t);return i.endLineNumber-i.startLineNumber>=Ad.MAX_SOURCE_PREVIEW_LINES&&(i=this.getPreviewRangeBasedOnIndentation(e,t)),this.stripIndentationFromPreviewRange(e,t,i)}stripIndentationFromPreviewRange(e,t,n){let o=e.getLineFirstNonWhitespaceColumn(t);for(let a=t+1;a<n.endLineNumber;a++){let l=e.getLineFirstNonWhitespaceColumn(a);o=Math.min(o,l)}return e.getValueInRange(n).replace(new RegExp(`^\\s{${o-1}}`,"gm"),"").trim()}getPreviewRangeBasedOnIndentation(e,t){let n=e.getLineFirstNonWhitespaceColumn(t),i=Math.min(e.getLineCount(),t+Ad.MAX_SOURCE_PREVIEW_LINES),o=t+1;for(;o<i;o++){let s=e.getLineFirstNonWhitespaceColumn(o);if(n===s)break}return new C(t,1,o+1,1)}getPreviewRangeBasedOnBrackets(e,t){let n=Math.min(e.getLineCount(),t+Ad.MAX_SOURCE_PREVIEW_LINES),i=[],o=!0,s=e.findNextBracket(new q(t,1));for(;s!==null;){if(i.length===0)i.push(s);else{let d=i[i.length-1];if(d.open[0]===s.open[0]&&d.isOpen&&!s.isOpen?i.pop():i.push(s),i.length===0)if(o)o=!1;else return new C(t,1,s.range.endLineNumber+1,1)}let a=e.getLineMaxColumn(t),l=s.range.endLineNumber,c=s.range.endColumn;if(a===s.range.endColumn&&(l++,c=1),l>n)return new C(t,1,n+1,1);s=e.findNextBracket(new q(l,c))}return new C(t,1,n+1,1)}addDecoration(e,t){let n={range:e,options:{description:"goto-definition-link",inlineClassName:"goto-definition-link",hoverMessage:t}};this.linkDecorations=this.editor.deltaDecorations(this.linkDecorations,[n])}removeLinkDecorations(){this.linkDecorations.length>0&&(this.linkDecorations=this.editor.deltaDecorations(this.linkDecorations,[]))}isEnabled(e,t){return this.editor.hasModel()&&e.isNoneOrSingleMouseDown&&e.target.type===6&&(e.hasTriggerModifier||(t?t.keyCodeIsTriggerKey:!1))&&xh.has(this.editor.getModel())}findDefinition(e,t){let n=this.editor.getModel();return n?Dd(n,e,t):Promise.resolve(null)}gotoDefinition(e,t){return this.editor.setPosition(e),this.editor.invokeWithinContext(n=>{let i=!t&&this.editor.getOption(77)&&!this.isInPeekEditor(n);return new Ra({openToSide:t,openInPeek:i,muteMessage:!0},{alias:"",label:"",id:"",precondition:void 0}).run(n,this.editor)})}isInPeekEditor(e){let t=e.get(Q);return Kt.inPeekEditor.getValue(t)}dispose(){this.toUnhook.dispose()}};br.ID="editor.contrib.gotodefinitionatposition";br.MAX_SOURCE_PREVIEW_LINES=8;br=y1([v_(1,In),v_(2,It)],br);J(br.ID,br);ye((r,e)=>{let t=r.getColor(xa);t&&e.addRule(`.monaco-editor .goto-definition-link { color: ${t} !important; }`)});Ne();Ne();U();var ju=W,Nd=class extends B{constructor(){super();this.containerDomNode=document.createElement("div"),this.containerDomNode.className="monaco-hover",this.containerDomNode.tabIndex=0,this.containerDomNode.setAttribute("role","tooltip"),this.contentsDomNode=document.createElement("div"),this.contentsDomNode.className="monaco-hover-content",this._scrollbar=this._register(new Ta(this.contentsDomNode,{consumeMouseWheelIfScrollbarIsNeeded:!0})),this.containerDomNode.appendChild(this._scrollbar.getDomNode())}onContentsChanged(){this._scrollbar.scanDomNode()}},zd=class extends B{constructor(e,t,n){super();this.actionContainer=H(e,ju("div.action-container")),this.action=H(this.actionContainer,ju("a.action")),this.action.setAttribute("href","#"),this.action.setAttribute("role","button"),t.iconClass&&H(this.action,ju(`span.icon.${t.iconClass}`));let i=H(this.action,ju("span"));i.textContent=n?`${t.label} (${n})`:t.label,this._register(Ve(this.actionContainer,dn.MOUSE_DOWN,o=>{o.stopPropagation(),o.preventDefault(),t.run(this.actionContainer)})),this.setEnabled(!0)}static render(e,t,n){return new zd(e,t,n)}setEnabled(e){e?(this.actionContainer.classList.remove("disabled"),this.actionContainer.removeAttribute("aria-disabled")):(this.actionContainer.classList.add("disabled"),this.actionContainer.setAttribute("aria-disabled","true"))}};vo();mt();U();rt();te();Ut();Pe();at();fi();U();te();Ae();var ff=class{constructor(e,t,n){this.presentationIndex=n,this._onColorFlushed=new $,this.onColorFlushed=this._onColorFlushed.event,this._onDidChangeColor=new $,this.onDidChangeColor=this._onDidChangeColor.event,this._onDidChangePresentation=new $,this.onDidChangePresentation=this._onDidChangePresentation.event,this.originalColor=e,this._color=e,this._colorPresentations=t}get color(){return this._color}set color(e){this._color.equals(e)||(this._color=e,this._onDidChangeColor.fire(e))}get presentation(){return this.colorPresentations[this.presentationIndex]}get colorPresentations(){return this._colorPresentations}set colorPresentations(e){this._colorPresentations=e,this.presentationIndex>e.length-1&&(this.presentationIndex=0),this._onDidChangePresentation.fire(this.presentation)}selectNextColorPresentation(){this.presentationIndex=(this.presentationIndex+1)%this.colorPresentations.length,this.flushColor(),this._onDidChangePresentation.fire(this.presentation)}guessColorPresentation(e,t){for(let n=0;n<this.colorPresentations.length;n++)if(t.toLowerCase()===this.colorPresentations[n].label){this.presentationIndex=n,this._onDidChangePresentation.fire(this.presentation);break}}flushColor(){this._onColorFlushed.fire(this._color)}};Ml();Ne();vo();fi();Ae();U();ne();Je();Me();var vi=W,x_=class extends B{constructor(e,t,n){super();this.model=t,this.domNode=vi(".colorpicker-header"),H(e,this.domNode),this.pickedColorNode=H(this.domNode,vi(".picked-color"));let i=u("clickToToggleColorOptions","Click to toggle color options (rgb/hsl/hex)");this.pickedColorNode.setAttribute("title",i);let o=H(this.domNode,vi(".original-color"));o.style.backgroundColor=fe.Format.CSS.format(this.model.originalColor)||"",this.backgroundColor=n.getColorTheme().getColor(bo)||fe.white,this._register(ye((s,a)=>{this.backgroundColor=s.getColor(bo)||fe.white})),this._register(Ve(this.pickedColorNode,dn.CLICK,()=>this.model.selectNextColorPresentation())),this._register(Ve(o,dn.CLICK,()=>{this.model.color=this.model.originalColor,this.model.flushColor()})),this._register(t.onDidChangeColor(this.onDidChangeColor,this)),this._register(t.onDidChangePresentation(this.onDidChangePresentation,this)),this.pickedColorNode.style.backgroundColor=fe.Format.CSS.format(t.color)||"",this.pickedColorNode.classList.toggle("light",t.color.rgba.a<.5?this.backgroundColor.isLighter():t.color.isLighter())}onDidChangeColor(e){this.pickedColorNode.style.backgroundColor=fe.Format.CSS.format(e)||"",this.pickedColorNode.classList.toggle("light",e.rgba.a<.5?this.backgroundColor.isLighter():e.isLighter()),this.onDidChangePresentation()}onDidChangePresentation(){this.pickedColorNode.textContent=this.model.presentation?this.model.presentation.label:"",this.pickedColorNode.prepend(vi(".codicon.codicon-color-mode"))}},C_=class extends B{constructor(e,t,n){super();this.model=t,this.pixelRatio=n,this.domNode=vi(".colorpicker-body"),H(e,this.domNode),this.saturationBox=new __(this.domNode,this.model,this.pixelRatio),this._register(this.saturationBox),this._register(this.saturationBox.onDidChange(this.onDidSaturationValueChange,this)),this._register(this.saturationBox.onColorFlushed(this.flushColor,this)),this.opacityStrip=new w_(this.domNode,this.model),this._register(this.opacityStrip),this._register(this.opacityStrip.onDidChange(this.onDidOpacityChange,this)),this._register(this.opacityStrip.onColorFlushed(this.flushColor,this)),this.hueStrip=new T_(this.domNode,this.model),this._register(this.hueStrip),this._register(this.hueStrip.onDidChange(this.onDidHueChange,this)),this._register(this.hueStrip.onColorFlushed(this.flushColor,this))}flushColor(){this.model.flushColor()}onDidSaturationValueChange({s:e,v:t}){let n=this.model.color.hsva;this.model.color=new fe(new Zl(n.h,e,t,n.a))}onDidOpacityChange(e){let t=this.model.color.hsva;this.model.color=new fe(new Zl(t.h,t.s,t.v,e))}onDidHueChange(e){let t=this.model.color.hsva,n=(1-e)*360;this.model.color=new fe(new Zl(n===360?0:n,t.s,t.v,t.a))}layout(){this.saturationBox.layout(),this.opacityStrip.layout(),this.hueStrip.layout()}},__=class extends B{constructor(e,t,n){super();this.model=t,this.pixelRatio=n,this._onDidChange=new $,this.onDidChange=this._onDidChange.event,this._onColorFlushed=new $,this.onColorFlushed=this._onColorFlushed.event,this.domNode=vi(".saturation-wrap"),H(e,this.domNode),this.canvas=document.createElement("canvas"),this.canvas.className="saturation-box",H(this.domNode,this.canvas),this.selection=vi(".saturation-selection"),H(this.domNode,this.selection),this.layout(),this._register(um(this.domNode,i=>this.onMouseDown(i))),this._register(this.model.onDidChangeColor(this.onDidChangeColor,this)),this.monitor=null}onMouseDown(e){this.monitor=this._register(new Yl);let t=Jt(this.domNode);e.target!==this.selection&&this.onDidChangePosition(e.offsetX,e.offsetY),this.monitor.startMonitoring(e.target,e.buttons,Xl,i=>this.onDidChangePosition(i.posx-t.left,i.posy-t.top),()=>null);let n=pm(document,()=>{this._onColorFlushed.fire(),n.dispose(),this.monitor&&(this.monitor.stopMonitoring(!0),this.monitor=null)},!0)}onDidChangePosition(e,t){let n=Math.max(0,Math.min(1,e/this.width)),i=Math.max(0,Math.min(1,1-t/this.height));this.paintSelection(n,i),this._onDidChange.fire({s:n,v:i})}layout(){this.width=this.domNode.offsetWidth,this.height=this.domNode.offsetHeight,this.canvas.width=this.width*this.pixelRatio,this.canvas.height=this.height*this.pixelRatio,this.paint();let e=this.model.color.hsva;this.paintSelection(e.s,e.v)}paint(){let e=this.model.color.hsva,t=new fe(new Zl(e.h,1,1,1)),n=this.canvas.getContext("2d"),i=n.createLinearGradient(0,0,this.canvas.width,0);i.addColorStop(0,"rgba(255, 255, 255, 1)"),i.addColorStop(.5,"rgba(255, 255, 255, 0.5)"),i.addColorStop(1,"rgba(255, 255, 255, 0)");let o=n.createLinearGradient(0,0,0,this.canvas.height);o.addColorStop(0,"rgba(0, 0, 0, 0)"),o.addColorStop(1,"rgba(0, 0, 0, 1)"),n.rect(0,0,this.canvas.width,this.canvas.height),n.fillStyle=fe.Format.CSS.format(t),n.fill(),n.fillStyle=i,n.fill(),n.fillStyle=o,n.fill()}paintSelection(e,t){this.selection.style.left=`${e*this.width}px`,this.selection.style.top=`${this.height-t*this.height}px`}onDidChangeColor(){this.monitor&&this.monitor.isMonitoring()||this.paint()}},yf=class extends B{constructor(e,t){super();this.model=t,this._onDidChange=new $,this.onDidChange=this._onDidChange.event,this._onColorFlushed=new $,this.onColorFlushed=this._onColorFlushed.event,this.domNode=H(e,vi(".strip")),this.overlay=H(this.domNode,vi(".overlay")),this.slider=H(this.domNode,vi(".slider")),this.slider.style.top="0px",this._register(um(this.domNode,n=>this.onMouseDown(n))),this.layout()}layout(){this.height=this.domNode.offsetHeight-this.slider.offsetHeight;let e=this.getValue(this.model.color);this.updateSliderPosition(e)}onMouseDown(e){let t=this._register(new Yl),n=Jt(this.domNode);this.domNode.classList.add("grabbing"),e.target!==this.slider&&this.onDidChangeTop(e.offsetY),t.startMonitoring(e.target,e.buttons,Xl,o=>this.onDidChangeTop(o.posy-n.top),()=>null);let i=pm(document,()=>{this._onColorFlushed.fire(),i.dispose(),t.stopMonitoring(!0),this.domNode.classList.remove("grabbing")},!0)}onDidChangeTop(e){let t=Math.max(0,Math.min(1,1-e/this.height));this.updateSliderPosition(t),this._onDidChange.fire(t)}updateSliderPosition(e){this.slider.style.top=`${(1-e)*this.height}px`}},w_=class extends yf{constructor(e,t){super(e,t);this.domNode.classList.add("opacity-strip"),this._register(t.onDidChangeColor(this.onDidChangeColor,this)),this.onDidChangeColor(this.model.color)}onDidChangeColor(e){let{r:t,g:n,b:i}=e.rgba,o=new fe(new gi(t,n,i,1)),s=new fe(new gi(t,n,i,0));this.overlay.style.background=`linear-gradient(to bottom, ${o} 0%, ${s} 100%)`}getValue(e){return e.hsva.a}},T_=class extends yf{constructor(e,t){super(e,t);this.domNode.classList.add("hue-strip")}getValue(e){return 1-e.hsva.h/360}},bf=class extends Ft{constructor(e,t,n,i){super();this.model=t,this.pixelRatio=n,this._register(iS(()=>this.layout()));let o=vi(".colorpicker-widget");e.appendChild(o);let s=new x_(o,this.model,i);this.body=new C_(o,this.model,this.pixelRatio),this._register(s),this._register(this.body)}layout(){this.body.layout()}};Me();var b1=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},S1=function(r,e){return function(t,n){e(t,n,r)}},E_=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},I_=class{constructor(e,t,n,i){this.owner=e,this.range=t,this.model=n,this.provider=i,this.forceShowAtRange=!0}isValidForHoverAnchor(e){return e.type===1&&this.range.startColumn<=e.range.startColumn&&this.range.endColumn>=e.range.endColumn}},Uu=class{constructor(e,t,n){this._editor=e,this._hover=t,this._themeService=n}computeSync(e,t){return[]}computeAsync(e,t,n){return E_(this,void 0,void 0,function*(){if(!this._editor.hasModel())return[];let i=fr.get(this._editor);for(let o of t){if(o.options.description!=="color-detector-color")continue;let s=i.getColorData(o.range.getStartPosition());if(s)return[yield this._createColorHover(this._editor.getModel(),s.colorInfo,s.provider)]}return[]})}_createColorHover(e,t,n){return E_(this,void 0,void 0,function*(){let i=e.getValueInRange(t.range),{red:o,green:s,blue:a,alpha:l}=t.color,c=new gi(Math.round(o*255),Math.round(s*255),Math.round(a*255),l),d=new fe(c),h=yield Dg(e,t,n,ue.None),p=new ff(d,[],0);return p.colorPresentations=h||[],p.guessColorPresentation(d,i),new I_(this,C.lift(t.range),p,n)})}renderHoverParts(e,t,n){if(e.length===0||!this._editor.hasModel())return B.None;let i=new R,o=e[0],s=this._editor.getModel(),a=o.model,l=i.add(new bf(t,a,this._editor.getOption(127),this._themeService)),c=new C(o.range.startLineNumber,o.range.startColumn,o.range.endLineNumber,o.range.endColumn),d=()=>{let p,g;if(a.presentation.textEdit){p=[a.presentation.textEdit],g=new C(a.presentation.textEdit.range.startLineNumber,a.presentation.textEdit.range.startColumn,a.presentation.textEdit.range.endLineNumber,a.presentation.textEdit.range.endColumn);let y=this._editor.getModel()._setTrackedRange(null,g,3);this._editor.pushUndoStop(),this._editor.executeEdits("colorpicker",p),g=this._editor.getModel()._getTrackedRange(y)||g}else p=[{identifier:null,range:c,text:a.presentation.label,forceMoveMarkers:!1}],g=c.setEndPosition(c.endLineNumber,c.startColumn+a.presentation.label.length),this._editor.pushUndoStop(),this._editor.executeEdits("colorpicker",p);a.presentation.additionalTextEdits&&(p=[...a.presentation.additionalTextEdits],this._editor.executeEdits("colorpicker",p),this._hover.hide()),this._editor.pushUndoStop(),c=g},h=p=>Dg(s,{range:c,color:{red:p.rgba.r/255,green:p.rgba.g/255,blue:p.rgba.b/255,alpha:p.rgba.a}},o.provider,ue.None).then(g=>{a.colorPresentations=g||[]});return i.add(a.onColorFlushed(p=>{h(p).then(d)})),i.add(a.onDidChangeColor(h)),this._hover.setColorPicker(l),i}};Uu=b1([S1(2,St)],Uu);Oe();ke();var Od=class{constructor(e,t,n,i,o){this._computer=e,this._state=0,this._hoverTime=o,this._firstWaitScheduler=new Xe(()=>this._triggerAsyncComputation(),0),this._secondWaitScheduler=new Xe(()=>this._triggerSyncComputation(),0),this._loadingMessageScheduler=new Xe(()=>this._showLoadingMessage(),0),this._asyncComputationPromise=null,this._asyncComputationPromiseDone=!1,this._completeCallback=t,this._errorCallback=n,this._progressCallback=i}setHoverTime(e){this._hoverTime=e}_firstWaitTime(){return this._hoverTime/2}_secondWaitTime(){return this._hoverTime/2}_loadingMessageTime(){return 3*this._hoverTime}_triggerAsyncComputation(){this._state=2,this._secondWaitScheduler.schedule(this._secondWaitTime()),this._computer.computeAsync?(this._asyncComputationPromiseDone=!1,this._asyncComputationPromise=Le(e=>this._computer.computeAsync(e)),this._asyncComputationPromise.then(e=>{this._asyncComputationPromiseDone=!0,this._withAsyncResult(e)},e=>this._onError(e))):this._asyncComputationPromiseDone=!0}_triggerSyncComputation(){this._computer.computeSync&&this._computer.onResult(this._computer.computeSync(),!0),this._asyncComputationPromiseDone?(this._state=0,this._onComplete(this._computer.getResult())):(this._state=3,this._onProgress(this._computer.getResult()))}_showLoadingMessage(){this._state===3&&this._onProgress(this._computer.getResultWithLoadingMessage())}_withAsyncResult(e){e&&this._computer.onResult(e,!1),this._state===3&&(this._state=0,this._onComplete(this._computer.getResult()))}_onComplete(e){this._completeCallback(e)}_onError(e){this._errorCallback?this._errorCallback(e):ae(e)}_onProgress(e){this._progressCallback(e)}start(e){if(e===0)this._state===0&&(this._state=1,this._firstWaitScheduler.schedule(this._firstWaitTime()),this._loadingMessageScheduler.schedule(this._loadingMessageTime()));else switch(this._state){case 0:this._triggerAsyncComputation(),this._secondWaitScheduler.cancel(),this._triggerSyncComputation();break;case 2:this._secondWaitScheduler.cancel(),this._triggerSyncComputation();break}}cancel(){this._loadingMessageScheduler.cancel(),this._state===1&&this._firstWaitScheduler.cancel(),this._state===2&&(this._secondWaitScheduler.cancel(),this._asyncComputationPromise&&(this._asyncComputationPromise.cancel(),this._asyncComputationPromise=null)),this._state===3&&this._asyncComputationPromise&&(this._asyncComputationPromise.cancel(),this._asyncComputationPromise=null),this._state=0}};var $u=class{constructor(e,t){this.priority=e,this.range=t,this.type=1}equals(e){return e.type===1&&this.range.equalsRange(e.range)}canAdoptVisibleHover(e,t){return e.type===1&&t.lineNumber===this.range.startLineNumber}},Hd=class{constructor(e,t,n){this.priority=e,this.owner=t,this.range=n,this.type=2}equals(e){return e.type===2&&this.owner===e.owner}canAdoptVisibleHover(e,t){return e.type===2&&this.owner===e.owner}};Ne();mt();U();Ne();function v1(r){if(Array.isArray(r)){for(var e=0,t=Array(r.length);e<r.length;e++)t[e]=r[e];return t}else return Array.from(r)}var x1=Object.hasOwnProperty,k_=Object.setPrototypeOf,C1=Object.isFrozen,_1=Object.getPrototypeOf,w1=Object.getOwnPropertyDescriptor,bn=Object.freeze,ko=Object.seal,T1=Object.create,N_=typeof Reflect!="undefined"&&Reflect,Xu=N_.apply,_f=N_.construct;Xu||(Xu=function(e,t,n){return e.apply(t,n)});bn||(bn=function(e){return e});ko||(ko=function(e){return e});_f||(_f=function(e,t){return new(Function.prototype.bind.apply(e,[null].concat(v1(t))))});var E1=xi(Array.prototype.forEach),L_=xi(Array.prototype.pop),Bd=xi(Array.prototype.push),ms=xi(String.prototype.toLowerCase),P_=xi(String.prototype.match),Sr=xi(String.prototype.replace),I1=xi(String.prototype.indexOf),k1=xi(String.prototype.trim),Io=xi(RegExp.prototype.test),M_=L1(TypeError);function xi(r){return function(e){for(var t=arguments.length,n=Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return Xu(r,e,n)}}function L1(r){return function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return _f(r,t)}}function De(r,e){k_&&k_(r,null);for(var t=e.length;t--;){var n=e[t];if(typeof n=="string"){var i=ms(n);i!==n&&(C1(e)||(e[t]=i),n=i)}r[n]=!0}return r}function ps(r){var e=T1(null),t=void 0;for(t in r)Xu(x1,r,[t])&&(e[t]=r[t]);return e}function Ku(r,e){for(;r!==null;){var t=w1(r,e);if(t){if(t.get)return xi(t.get);if(typeof t.value=="function")return xi(t.value)}r=_1(r)}function n(i){return console.warn("fallback value for",i),null}return n}var D_=bn(["a","abbr","acronym","address","area","article","aside","audio","b","bdi","bdo","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","content","data","datalist","dd","decorator","del","details","dfn","dialog","dir","div","dl","dt","element","em","fieldset","figcaption","figure","font","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","img","input","ins","kbd","label","legend","li","main","map","mark","marquee","menu","menuitem","meter","nav","nobr","ol","optgroup","option","output","p","picture","pre","progress","q","rp","rt","ruby","s","samp","section","select","shadow","small","source","spacer","span","strike","strong","style","sub","summary","sup","table","tbody","td","template","textarea","tfoot","th","thead","time","tr","track","tt","u","ul","var","video","wbr"]),Sf=bn(["svg","a","altglyph","altglyphdef","altglyphitem","animatecolor","animatemotion","animatetransform","circle","clippath","defs","desc","ellipse","filter","font","g","glyph","glyphref","hkern","image","line","lineargradient","marker","mask","metadata","mpath","path","pattern","polygon","polyline","radialgradient","rect","stop","style","switch","symbol","text","textpath","title","tref","tspan","view","vkern"]),vf=bn(["feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence"]),P1=bn(["animate","color-profile","cursor","discard","fedropshadow","feimage","font-face","font-face-format","font-face-name","font-face-src","font-face-uri","foreignobject","hatch","hatchpath","mesh","meshgradient","meshpatch","meshrow","missing-glyph","script","set","solidcolor","unknown","use"]),xf=bn(["math","menclose","merror","mfenced","mfrac","mglyph","mi","mlabeledtr","mmultiscripts","mn","mo","mover","mpadded","mphantom","mroot","mrow","ms","mspace","msqrt","mstyle","msub","msup","msubsup","mtable","mtd","mtext","mtr","munder","munderover"]),M1=bn(["maction","maligngroup","malignmark","mlongdiv","mscarries","mscarry","msgroup","mstack","msline","msrow","semantics","annotation","annotation-xml","mprescripts","none"]),R_=bn(["#text"]),F_=bn(["accept","action","align","alt","autocapitalize","autocomplete","autopictureinpicture","autoplay","background","bgcolor","border","capture","cellpadding","cellspacing","checked","cite","class","clear","color","cols","colspan","controls","controlslist","coords","crossorigin","datetime","decoding","default","dir","disabled","disablepictureinpicture","disableremoteplayback","download","draggable","enctype","enterkeyhint","face","for","headers","height","hidden","high","href","hreflang","id","inputmode","integrity","ismap","kind","label","lang","list","loading","loop","low","max","maxlength","media","method","min","minlength","multiple","muted","name","noshade","novalidate","nowrap","open","optimum","pattern","placeholder","playsinline","poster","preload","pubdate","radiogroup","readonly","rel","required","rev","reversed","role","rows","rowspan","spellcheck","scope","selected","shape","size","sizes","span","srclang","start","src","srcset","step","style","summary","tabindex","title","translate","type","usemap","valign","value","width","xmlns","slot"]),Cf=bn(["accent-height","accumulate","additive","alignment-baseline","ascent","attributename","attributetype","azimuth","basefrequency","baseline-shift","begin","bias","by","class","clip","clippathunits","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cx","cy","d","dx","dy","diffuseconstant","direction","display","divisor","dur","edgemode","elevation","end","fill","fill-opacity","fill-rule","filter","filterunits","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","fx","fy","g1","g2","glyph-name","glyphref","gradientunits","gradienttransform","height","href","id","image-rendering","in","in2","k","k1","k2","k3","k4","kerning","keypoints","keysplines","keytimes","lang","lengthadjust","letter-spacing","kernelmatrix","kernelunitlength","lighting-color","local","marker-end","marker-mid","marker-start","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","max","mask","media","method","mode","min","name","numoctaves","offset","operator","opacity","order","orient","orientation","origin","overflow","paint-order","path","pathlength","patterncontentunits","patterntransform","patternunits","points","preservealpha","preserveaspectratio","primitiveunits","r","rx","ry","radius","refx","refy","repeatcount","repeatdur","restart","result","rotate","scale","seed","shape-rendering","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","stop-color","stop-opacity","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke","stroke-width","style","surfacescale","systemlanguage","tabindex","targetx","targety","transform","text-anchor","text-decoration","text-rendering","textlength","type","u1","u2","unicode","values","viewbox","visibility","version","vert-adv-y","vert-origin-x","vert-origin-y","width","word-spacing","wrap","writing-mode","xchannelselector","ychannelselector","x","x1","x2","xmlns","y","y1","y2","z","zoomandpan"]),A_=bn(["accent","accentunder","align","bevelled","close","columnsalign","columnlines","columnspan","denomalign","depth","dir","display","displaystyle","encoding","fence","frame","height","href","id","largeop","length","linethickness","lspace","lquote","mathbackground","mathcolor","mathsize","mathvariant","maxsize","minsize","movablelimits","notation","numalign","open","rowalign","rowlines","rowspacing","rowspan","rspace","rquote","scriptlevel","scriptminsize","scriptsizemultiplier","selection","separator","separators","stretchy","subscriptshift","supscriptshift","symmetric","voffset","width","xmlns"]),qu=bn(["xlink:href","xml:id","xlink:title","xml:space","xmlns:xlink"]),D1=ko(/\{\{[\s\S]*|[\s\S]*\}\}/gm),R1=ko(/<%[\s\S]*|[\s\S]*%>/gm),F1=ko(/^data-[\-\w.\u00B7-\uFFFF]/),A1=ko(/^aria-[\-\w]+$/),N1=ko(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i),z1=ko(/^(?:\w+script|data):/i),O1=ko(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g),Wd=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(r){return typeof r}:function(r){return r&&typeof Symbol=="function"&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r};function $i(r){if(Array.isArray(r)){for(var e=0,t=Array(r.length);e<r.length;e++)t[e]=r[e];return t}else return Array.from(r)}var H1=function(){return typeof window=="undefined"?null:window},B1=function(e,t){if((typeof e=="undefined"?"undefined":Wd(e))!=="object"||typeof e.createPolicy!="function")return null;var n=null,i="data-tt-policy-suffix";t.currentScript&&t.currentScript.hasAttribute(i)&&(n=t.currentScript.getAttribute(i));var o="dompurify"+(n?"#"+n:"");try{return e.createPolicy(o,{createHTML:function(a){return a}})}catch(s){return console.warn("TrustedTypes policy "+o+" could not be created."),null}};function z_(){var r=arguments.length>0&&arguments[0]!==void 0?arguments[0]:H1(),e=function(m){return z_(m)};if(e.version="2.3.1",e.removed=[],!r||!r.document||r.document.nodeType!==9)return e.isSupported=!1,e;var t=r.document,n=r.document,i=r.DocumentFragment,o=r.HTMLTemplateElement,s=r.Node,a=r.Element,l=r.NodeFilter,c=r.NamedNodeMap,d=c===void 0?r.NamedNodeMap||r.MozNamedAttrMap:c,h=r.Text,p=r.Comment,g=r.DOMParser,y=r.trustedTypes,v=a.prototype,w=Ku(v,"cloneNode"),F=Ku(v,"nextSibling"),M=Ku(v,"childNodes"),z=Ku(v,"parentNode");if(typeof o=="function"){var V=n.createElement("template");V.content&&V.content.ownerDocument&&(n=V.content.ownerDocument)}var G=B1(y,t),ze=G&&zr?G.createHTML(""):"",_e=n,yt=_e.implementation,Pt=_e.createNodeIterator,Mt=_e.createDocumentFragment,Rn=_e.getElementsByTagName,Go=t.importNode,Fr={};try{Fr=ps(n).documentMode?n.documentMode:{}}catch(S){}var pn={};e.isSupported=typeof z=="function"&&yt&&typeof yt.createHTMLDocument!="undefined"&&Fr!==9;var ro=D1,jo=R1,Bs=F1,Ws=A1,an=z1,$c=O1,Ar=N1,Dt=null,mn=De({},[].concat($i(D_),$i(Sf),$i(vf),$i(xf),$i(R_))),Ot=null,bl=De({},[].concat($i(F_),$i(Cf),$i(A_),$i(qu))),Sl=null,Vs=null,Nr=!0,qe=!0,Ii=!1,Se=!1,ie=!1,Gs=!1,vl=!1,Uo=!1,so=!1,$o=!0,zr=!1,Kc=!0,js=!0,Or=!1,Ko={},ao=null,Hr=De({},["annotation-xml","audio","colgroup","desc","foreignobject","head","iframe","math","mi","mn","mo","ms","mtext","noembed","noframes","noscript","plaintext","script","style","svg","template","thead","title","video","xmp"]),xl=null,Cl=De({},["audio","video","img","source","image","track"]),Us=null,qc=De({},["alt","class","for","id","label","name","pattern","placeholder","role","summary","title","value","style","xmlns"]),_l="http://www.w3.org/1998/Math/MathML",wl="http://www.w3.org/2000/svg",ki="http://www.w3.org/1999/xhtml",$s=ki,Tl=!1,$n=null,Br=n.createElement("form"),Ks=function(m){$n&&$n===m||((!m||(typeof m=="undefined"?"undefined":Wd(m))!=="object")&&(m={}),m=ps(m),Dt="ALLOWED_TAGS"in m?De({},m.ALLOWED_TAGS):mn,Ot="ALLOWED_ATTR"in m?De({},m.ALLOWED_ATTR):bl,Us="ADD_URI_SAFE_ATTR"in m?De(ps(qc),m.ADD_URI_SAFE_ATTR):qc,xl="ADD_DATA_URI_TAGS"in m?De(ps(Cl),m.ADD_DATA_URI_TAGS):Cl,ao="FORBID_CONTENTS"in m?De({},m.FORBID_CONTENTS):Hr,Sl="FORBID_TAGS"in m?De({},m.FORBID_TAGS):{},Vs="FORBID_ATTR"in m?De({},m.FORBID_ATTR):{},Ko="USE_PROFILES"in m?m.USE_PROFILES:!1,Nr=m.ALLOW_ARIA_ATTR!==!1,qe=m.ALLOW_DATA_ATTR!==!1,Ii=m.ALLOW_UNKNOWN_PROTOCOLS||!1,Se=m.SAFE_FOR_TEMPLATES||!1,ie=m.WHOLE_DOCUMENT||!1,Uo=m.RETURN_DOM||!1,so=m.RETURN_DOM_FRAGMENT||!1,$o=m.RETURN_DOM_IMPORT!==!1,zr=m.RETURN_TRUSTED_TYPE||!1,vl=m.FORCE_BODY||!1,Kc=m.SANITIZE_DOM!==!1,js=m.KEEP_CONTENT!==!1,Or=m.IN_PLACE||!1,Ar=m.ALLOWED_URI_REGEXP||Ar,$s=m.NAMESPACE||ki,Se&&(qe=!1),so&&(Uo=!0),Ko&&(Dt=De({},[].concat($i(R_))),Ot=[],Ko.html===!0&&(De(Dt,D_),De(Ot,F_)),Ko.svg===!0&&(De(Dt,Sf),De(Ot,Cf),De(Ot,qu)),Ko.svgFilters===!0&&(De(Dt,vf),De(Ot,Cf),De(Ot,qu)),Ko.mathMl===!0&&(De(Dt,xf),De(Ot,A_),De(Ot,qu))),m.ADD_TAGS&&(Dt===mn&&(Dt=ps(Dt)),De(Dt,m.ADD_TAGS)),m.ADD_ATTR&&(Ot===bl&&(Ot=ps(Ot)),De(Ot,m.ADD_ATTR)),m.ADD_URI_SAFE_ATTR&&De(Us,m.ADD_URI_SAFE_ATTR),m.FORBID_CONTENTS&&(ao===Hr&&(ao=ps(ao)),De(ao,m.FORBID_CONTENTS)),js&&(Dt["#text"]=!0),ie&&De(Dt,["html","head","body"]),Dt.table&&(De(Dt,["tbody"]),delete Sl.tbody),bn&&bn(m),$n=m)},El=De({},["mi","mo","mn","ms","mtext"]),Xc=De({},["foreignobject","desc","title","annotation-xml"]),qs=De({},Sf);De(qs,vf),De(qs,P1);var qo=De({},xf);De(qo,M1);var Yc=function(m){var _=z(m);(!_||!_.tagName)&&(_={namespaceURI:ki,tagName:"template"});var P=ms(m.tagName),D=ms(_.tagName);if(m.namespaceURI===wl)return _.namespaceURI===ki?P==="svg":_.namespaceURI===_l?P==="svg"&&(D==="annotation-xml"||El[D]):Boolean(qs[P]);if(m.namespaceURI===_l)return _.namespaceURI===ki?P==="math":_.namespaceURI===wl?P==="math"&&Xc[D]:Boolean(qo[P]);if(m.namespaceURI===ki){if(_.namespaceURI===wl&&!Xc[D]||_.namespaceURI===_l&&!El[D])return!1;var j=De({},["title","style","font","a","script"]);return!qo[P]&&(j[P]||!qs[P])}return!1},Kn=function(m){Bd(e.removed,{element:m});try{m.parentNode.removeChild(m)}catch(_){try{m.outerHTML=ze}catch(P){m.remove()}}},Zc=function(m,_){try{Bd(e.removed,{attribute:_.getAttributeNode(m),from:_})}catch(P){Bd(e.removed,{attribute:null,from:_})}if(_.removeAttribute(m),m==="is"&&!Ot[m])if(Uo||so)try{Kn(_)}catch(P){}else try{_.setAttribute(m,"")}catch(P){}},Jc=function(m){var _=void 0,P=void 0;if(vl)m="<remove></remove>"+m;else{var D=P_(m,/^[\r\n\t ]+/);P=D&&D[0]}var j=G?G.createHTML(m):m;if($s===ki)try{_=new g().parseFromString(j,"text/html")}catch(le){}if(!_||!_.documentElement){_=yt.createDocument($s,"template",null);try{_.documentElement.innerHTML=Tl?"":j}catch(le){}}var se=_.body||_.documentElement;return m&&P&&se.insertBefore(n.createTextNode(P),se.childNodes[0]||null),$s===ki?Rn.call(_,ie?"html":"body")[0]:ie?_.documentElement:se},Qc=function(m){return Pt.call(m.ownerDocument||m,m,l.SHOW_ELEMENT|l.SHOW_COMMENT|l.SHOW_TEXT,null,!1)},we=function(m){return m instanceof h||m instanceof p?!1:typeof m.nodeName!="string"||typeof m.textContent!="string"||typeof m.removeChild!="function"||!(m.attributes instanceof d)||typeof m.removeAttribute!="function"||typeof m.setAttribute!="function"||typeof m.namespaceURI!="string"||typeof m.insertBefore!="function"},Wr=function(m){return(typeof s=="undefined"?"undefined":Wd(s))==="object"?m instanceof s:m&&(typeof m=="undefined"?"undefined":Wd(m))==="object"&&typeof m.nodeType=="number"&&typeof m.nodeName=="string"},L=function(m,_,P){!pn[m]||E1(pn[m],function(D){D.call(e,_,P,$n)})},T=function(m){var _=void 0;if(L("beforeSanitizeElements",m,null),we(m)||P_(m.nodeName,/[\u0080-\uFFFF]/))return Kn(m),!0;var P=ms(m.nodeName);if(L("uponSanitizeElement",m,{tagName:P,allowedTags:Dt}),!Wr(m.firstElementChild)&&(!Wr(m.content)||!Wr(m.content.firstElementChild))&&Io(/<[/\w]/g,m.innerHTML)&&Io(/<[/\w]/g,m.textContent)||P==="select"&&Io(/<template/i,m.innerHTML))return Kn(m),!0;if(!Dt[P]||Sl[P]){if(js&&!ao[P]){var D=z(m)||m.parentNode,j=M(m)||m.childNodes;if(j&&D)for(var se=j.length,le=se-1;le>=0;--le)D.insertBefore(w(j[le],!0),F(m))}return Kn(m),!0}return m instanceof a&&!Yc(m)||(P==="noscript"||P==="noembed")&&Io(/<\/no(script|embed)/i,m.innerHTML)?(Kn(m),!0):(Se&&m.nodeType===3&&(_=m.textContent,_=Sr(_,ro," "),_=Sr(_,jo," "),m.textContent!==_&&(Bd(e.removed,{element:m.cloneNode()}),m.textContent=_)),L("afterSanitizeElements",m,null),!1)},E=function(m,_,P){if(Kc&&(_==="id"||_==="name")&&(P in n||P in Br))return!1;if(!(qe&&!Vs[_]&&Io(Bs,_))){if(!(Nr&&Io(Ws,_))){if(!Ot[_]||Vs[_])return!1;if(!Us[_]){if(!Io(Ar,Sr(P,$c,""))){if(!((_==="src"||_==="xlink:href"||_==="href")&&m!=="script"&&I1(P,"data:")===0&&xl[m])){if(!(Ii&&!Io(an,Sr(P,$c,"")))){if(P)return!1}}}}}}return!0},f=function(m){var _=void 0,P=void 0,D=void 0,j=void 0;L("beforeSanitizeAttributes",m,null);var se=m.attributes;if(!!se){var le={attrName:"",attrValue:"",keepAttr:!0,allowedAttributes:Ot};for(j=se.length;j--;){_=se[j];var ge=_,ve=ge.name,re=ge.namespaceURI;if(P=k1(_.value),D=ms(ve),le.attrName=D,le.attrValue=P,le.keepAttr=!0,le.forceKeepAttr=void 0,L("uponSanitizeAttribute",m,le),P=le.attrValue,!le.forceKeepAttr&&(Zc(ve,m),!!le.keepAttr)){if(Io(/\/>/i,P)){Zc(ve,m);continue}Se&&(P=Sr(P,ro," "),P=Sr(P,jo," "));var Ct=m.nodeName.toLowerCase();if(!!E(Ct,D,P))try{re?m.setAttributeNS(re,ve,P):m.setAttribute(ve,P),L_(e.removed)}catch(Re){}}}L("afterSanitizeAttributes",m,null)}},b=function S(m){var _=void 0,P=Qc(m);for(L("beforeSanitizeShadowDOM",m,null);_=P.nextNode();)L("uponSanitizeShadowNode",_,null),!T(_)&&(_.content instanceof i&&S(_.content),f(_));L("afterSanitizeShadowDOM",m,null)};return e.sanitize=function(S,m){var _=void 0,P=void 0,D=void 0,j=void 0,se=void 0;if(Tl=!S,Tl&&(S="<!-->"),typeof S!="string"&&!Wr(S)){if(typeof S.toString!="function")throw M_("toString is not a function");if(S=S.toString(),typeof S!="string")throw M_("dirty is not a string, aborting")}if(!e.isSupported){if(Wd(r.toStaticHTML)==="object"||typeof r.toStaticHTML=="function"){if(typeof S=="string")return r.toStaticHTML(S);if(Wr(S))return r.toStaticHTML(S.outerHTML)}return S}if(Gs||Ks(m),e.removed=[],typeof S=="string"&&(Or=!1),!Or)if(S instanceof s)_=Jc("<!---->"),P=_.ownerDocument.importNode(S,!0),P.nodeType===1&&P.nodeName==="BODY"||P.nodeName==="HTML"?_=P:_.appendChild(P);else{if(!Uo&&!Se&&!ie&&S.indexOf("<")===-1)return G&&zr?G.createHTML(S):S;if(_=Jc(S),!_)return Uo?null:ze}_&&vl&&Kn(_.firstChild);for(var le=Qc(Or?S:_);D=le.nextNode();)D.nodeType===3&&D===j||T(D)||(D.content instanceof i&&b(D.content),f(D),j=D);if(j=null,Or)return S;if(Uo){if(so)for(se=Mt.call(_.ownerDocument);_.firstChild;)se.appendChild(_.firstChild);else se=_;return $o&&(se=Go.call(t,se,!0)),se}var ge=ie?_.outerHTML:_.innerHTML;return Se&&(ge=Sr(ge,ro," "),ge=Sr(ge,jo," ")),G&&zr?G.createHTML(ge):ge},e.setConfig=function(S){Ks(S),Gs=!0},e.clearConfig=function(){$n=null,Gs=!1},e.isValidAttribute=function(S,m,_){$n||Ks({});var P=ms(S),D=ms(m);return E(P,D,_)},e.addHook=function(S,m){typeof m=="function"&&(pn[S]=pn[S]||[],Bd(pn[S],m))},e.removeHook=function(S){pn[S]&&L_(pn[S])},e.removeHooks=function(S){pn[S]&&(pn[S]=[])},e.removeAllHooks=function(){pn={}},e}var Ki=z_();var G4=Ki.version,j4=Ki.isSupported,O_=Ki.sanitize,U4=Ki.setConfig,$4=Ki.clearConfig,K4=Ki.isValidAttribute,wf=Ki.addHook,Tf=Ki.removeHook,q4=Ki.removeHooks,X4=Ki.removeAllHooks;Ux();zL();Oe();at();ke();Ae();U();var qi;(function(){function r(e){qi=e()}r.amd=!0,function(e,t){typeof exports=="object"&&typeof module!="undefined"?module.exports=t():typeof r=="function"&&r.amd?r(t):(e=typeof globalThis!="undefined"?globalThis:e||self,e.marked=t())}(this,function(){"use strict";function e(L,T){for(var E=0;E<T.length;E++){var f=T[E];f.enumerable=f.enumerable||!1,f.configurable=!0,"value"in f&&(f.writable=!0),Object.defineProperty(L,f.key,f)}}function t(L,T,E){return T&&e(L.prototype,T),E&&e(L,E),L}function n(L,T){if(!!L){if(typeof L=="string")return i(L,T);var E=Object.prototype.toString.call(L).slice(8,-1);if(E==="Object"&&L.constructor&&(E=L.constructor.name),E==="Map"||E==="Set")return Array.from(L);if(E==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(E))return i(L,T)}}function i(L,T){(T==null||T>L.length)&&(T=L.length);for(var E=0,f=new Array(T);E<T;E++)f[E]=L[E];return f}function o(L,T){var E=typeof Symbol!="undefined"&&L[Symbol.iterator]||L["@@iterator"];if(E)return(E=E.call(L)).next.bind(E);if(Array.isArray(L)||(E=n(L))||T&&L&&typeof L.length=="number"){E&&(L=E);var f=0;return function(){return f>=L.length?{done:!0}:{done:!1,value:L[f++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var s={exports:{}};function a(){return{baseUrl:null,breaks:!1,extensions:null,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tokenizer:null,walkTokens:null,xhtml:!1}}function l(L){s.exports.defaults=L}s.exports={defaults:a(),getDefaults:a,changeDefaults:l};var c=/[&<>"']/,d=/[&<>"']/g,h=/[<>"']|&(?!#?\w+;)/,p=/[<>"']|&(?!#?\w+;)/g,g={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},y=function(T){return g[T]};function v(L,T){if(T){if(c.test(L))return L.replace(d,y)}else if(h.test(L))return L.replace(p,y);return L}var w=/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig;function F(L){return L.replace(w,function(T,E){return E=E.toLowerCase(),E==="colon"?":":E.charAt(0)==="#"?E.charAt(1)==="x"?String.fromCharCode(parseInt(E.substring(2),16)):String.fromCharCode(+E.substring(1)):""})}var M=/(^|[^\[])\^/g;function z(L,T){L=L.source||L,T=T||"";var E={replace:function(b,S){return S=S.source||S,S=S.replace(M,"$1"),L=L.replace(b,S),E},getRegex:function(){return new RegExp(L,T)}};return E}var V=/[^\w:]/g,G=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;function ze(L,T,E){if(L){var f;try{f=decodeURIComponent(F(E)).replace(V,"").toLowerCase()}catch(b){return null}if(f.indexOf("javascript:")===0||f.indexOf("vbscript:")===0||f.indexOf("data:")===0)return null}T&&!G.test(E)&&(E=Rn(T,E));try{E=encodeURI(E).replace(/%25/g,"%")}catch(b){return null}return E}var _e={},yt=/^[^:]+:\/*[^/]*$/,Pt=/^([^:]+:)[\s\S]*$/,Mt=/^([^:]+:\/*[^/]*)[\s\S]*$/;function Rn(L,T){_e[" "+L]||(yt.test(L)?_e[" "+L]=L+"/":_e[" "+L]=ro(L,"/",!0)),L=_e[" "+L];var E=L.indexOf(":")===-1;return T.substring(0,2)==="//"?E?T:L.replace(Pt,"$1")+T:T.charAt(0)==="/"?E?T:L.replace(Mt,"$1")+T:L+T}var Go={exec:function(){}};function Fr(L){for(var T=1,E,f;T<arguments.length;T++){E=arguments[T];for(f in E)Object.prototype.hasOwnProperty.call(E,f)&&(L[f]=E[f])}return L}function pn(L,T){var E=L.replace(/\|/g,function(S,m,_){for(var P=!1,D=m;--D>=0&&_[D]==="\\";)P=!P;return P?"|":" |"}),f=E.split(/ \|/),b=0;if(f[0].trim()||f.shift(),f[f.length-1].trim()||f.pop(),f.length>T)f.splice(T);else for(;f.length<T;)f.push("");for(;b<f.length;b++)f[b]=f[b].trim().replace(/\\\|/g,"|");return f}function ro(L,T,E){var f=L.length;if(f===0)return"";for(var b=0;b<f;){var S=L.charAt(f-b-1);if(S===T&&!E)b++;else if(S!==T&&E)b++;else break}return L.substr(0,f-b)}function jo(L,T){if(L.indexOf(T[1])===-1)return-1;for(var E=L.length,f=0,b=0;b<E;b++)if(L[b]==="\\")b++;else if(L[b]===T[0])f++;else if(L[b]===T[1]&&(f--,f<0))return b;return-1}function Bs(L){L&&L.sanitize&&!L.silent&&console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options")}function Ws(L,T){if(T<1)return"";for(var E="";T>1;)T&1&&(E+=L),T>>=1,L+=L;return E+L}var an={escape:v,unescape:F,edit:z,cleanUrl:ze,resolveUrl:Rn,noopTest:Go,merge:Fr,splitCells:pn,rtrim:ro,findClosingBracket:jo,checkSanitizeDeprecation:Bs,repeatString:Ws},$c=s.exports.defaults,Ar=an.rtrim,Dt=an.splitCells,mn=an.escape,Ot=an.findClosingBracket;function bl(L,T,E,f){var b=T.href,S=T.title?mn(T.title):null,m=L[1].replace(/\\([\[\]])/g,"$1");if(L[0].charAt(0)!=="!"){f.state.inLink=!0;var _={type:"link",raw:E,href:b,title:S,text:m,tokens:f.inlineTokens(m,[])};return f.state.inLink=!1,_}else return{type:"image",raw:E,href:b,title:S,text:mn(m)}}function Sl(L,T){var E=L.match(/^(\s+)(?:```)/);if(E===null)return T;var f=E[1];return T.split(`
`).map(function(b){var S=b.match(/^\s+/);if(S===null)return b;var m=S[0];return m.length>=f.length?b.slice(f.length):b}).join(`
`)}var Vs=function(){function L(E){this.options=E||$c}var T=L.prototype;return T.space=function(f){var b=this.rules.block.newline.exec(f);if(b)return b[0].length>1?{type:"space",raw:b[0]}:{raw:`
`}},T.code=function(f){var b=this.rules.block.code.exec(f);if(b){var S=b[0].replace(/^ {1,4}/gm,"");return{type:"code",raw:b[0],codeBlockStyle:"indented",text:this.options.pedantic?S:Ar(S,`
`)}}},T.fences=function(f){var b=this.rules.block.fences.exec(f);if(b){var S=b[0],m=Sl(S,b[3]||"");return{type:"code",raw:S,lang:b[2]?b[2].trim():b[2],text:m}}},T.heading=function(f){var b=this.rules.block.heading.exec(f);if(b){var S=b[2].trim();if(/#$/.test(S)){var m=Ar(S,"#");(this.options.pedantic||!m||/ $/.test(m))&&(S=m.trim())}var _={type:"heading",raw:b[0],depth:b[1].length,text:S,tokens:[]};return this.lexer.inline(_.text,_.tokens),_}},T.hr=function(f){var b=this.rules.block.hr.exec(f);if(b)return{type:"hr",raw:b[0]}},T.blockquote=function(f){var b=this.rules.block.blockquote.exec(f);if(b){var S=b[0].replace(/^ *> ?/gm,"");return{type:"blockquote",raw:b[0],tokens:this.lexer.blockTokens(S,[]),text:S}}},T.list=function(f){var b=this.rules.block.list.exec(f);if(b){var S,m,_,P,D,j,se,le,ge,ve,re=b[1].trim(),Ct=re.length>1,Re={type:"list",raw:"",ordered:Ct,start:Ct?+re.slice(0,-1):"",loose:!1,items:[]};re=Ct?"\\d{1,9}\\"+re.slice(-1):"\\"+re,this.options.pedantic&&(re=Ct?re:"[*+-]");for(var gn=new RegExp("^( {0,3}"+re+")((?: [^\\n]*| *)(?:\\n[^\\n]*)*(?:\\n|$))");f&&!(this.rules.block.hr.test(f)||!(b=gn.exec(f)));){ge=b[2].split(`
`),this.options.pedantic?(P=2,ve=ge[0].trimLeft()):(P=b[2].search(/[^ ]/),P=b[1].length+(P>4?1:P),ve=ge[0].slice(P-b[1].length)),j=!1,S=b[0],!ge[0]&&/^ *$/.test(ge[1])&&(S=b[1]+ge.slice(0,2).join(`
`)+`
`,Re.loose=!0,ge=[]);var Xs=new RegExp("^ {0,"+Math.min(3,P-1)+"}(?:[*+-]|\\d{1,9}[.)])");for(D=1;D<ge.length;D++){if(le=ge[D],this.options.pedantic&&(le=le.replace(/^ {1,4}(?=( {4})*[^ ])/g,"  ")),Xs.test(le)){S=b[1]+ge.slice(0,D).join(`
`)+`
`;break}if(!j){le.trim()||(j=!0),le.search(/[^ ]/)>=P?ve+=`
`+le.slice(P):ve+=`
`+le;continue}if(le.search(/[^ ]/)>=P||!le.trim()){ve+=`
`+le.slice(P);continue}else{S=b[1]+ge.slice(0,D).join(`
`)+`
`;break}}Re.loose||(se?Re.loose=!0:/\n *\n *$/.test(S)&&(se=!0)),this.options.gfm&&(m=/^\[[ xX]\] /.exec(ve),m&&(_=m[0]!=="[ ] ",ve=ve.replace(/^\[[ xX]\] +/,""))),Re.items.push({type:"list_item",raw:S,task:!!m,checked:_,loose:!1,text:ve}),Re.raw+=S,f=f.slice(S.length)}Re.items[Re.items.length-1].raw=S.trimRight(),Re.items[Re.items.length-1].text=ve.trimRight(),Re.raw=Re.raw.trimRight();var Yt=Re.items.length;for(D=0;D<Yt;D++)this.lexer.state.top=!1,Re.items[D].tokens=this.lexer.blockTokens(Re.items[D].text,[]),Re.items[D].tokens.some(function(Il){return Il.type==="space"})&&(Re.loose=!0,Re.items[D].loose=!0);return Re}},T.html=function(f){var b=this.rules.block.html.exec(f);if(b){var S={type:"html",raw:b[0],pre:!this.options.sanitizer&&(b[1]==="pre"||b[1]==="script"||b[1]==="style"),text:b[0]};return this.options.sanitize&&(S.type="paragraph",S.text=this.options.sanitizer?this.options.sanitizer(b[0]):mn(b[0]),S.tokens=[],this.lexer.inline(S.text,S.tokens)),S}},T.def=function(f){var b=this.rules.block.def.exec(f);if(b){b[3]&&(b[3]=b[3].substring(1,b[3].length-1));var S=b[1].toLowerCase().replace(/\s+/g," ");return{type:"def",tag:S,raw:b[0],href:b[2],title:b[3]}}},T.table=function(f){var b=this.rules.block.table.exec(f);if(b){var S={type:"table",header:Dt(b[1]).map(function(se){return{text:se}}),align:b[2].replace(/^ *|\| *$/g,"").split(/ *\| */),rows:b[3]?b[3].replace(/\n$/,"").split(`
`):[]};if(S.header.length===S.align.length){S.raw=b[0];var m=S.align.length,_,P,D,j;for(_=0;_<m;_++)/^ *-+: *$/.test(S.align[_])?S.align[_]="right":/^ *:-+: *$/.test(S.align[_])?S.align[_]="center":/^ *:-+ *$/.test(S.align[_])?S.align[_]="left":S.align[_]=null;for(m=S.rows.length,_=0;_<m;_++)S.rows[_]=Dt(S.rows[_],S.header.length).map(function(se){return{text:se}});for(m=S.header.length,P=0;P<m;P++)S.header[P].tokens=[],this.lexer.inlineTokens(S.header[P].text,S.header[P].tokens);for(m=S.rows.length,P=0;P<m;P++)for(j=S.rows[P],D=0;D<j.length;D++)j[D].tokens=[],this.lexer.inlineTokens(j[D].text,j[D].tokens);return S}}},T.lheading=function(f){var b=this.rules.block.lheading.exec(f);if(b){var S={type:"heading",raw:b[0],depth:b[2].charAt(0)==="="?1:2,text:b[1],tokens:[]};return this.lexer.inline(S.text,S.tokens),S}},T.paragraph=function(f){var b=this.rules.block.paragraph.exec(f);if(b){var S={type:"paragraph",raw:b[0],text:b[1].charAt(b[1].length-1)===`
`?b[1].slice(0,-1):b[1],tokens:[]};return this.lexer.inline(S.text,S.tokens),S}},T.text=function(f){var b=this.rules.block.text.exec(f);if(b){var S={type:"text",raw:b[0],text:b[0],tokens:[]};return this.lexer.inline(S.text,S.tokens),S}},T.escape=function(f){var b=this.rules.inline.escape.exec(f);if(b)return{type:"escape",raw:b[0],text:mn(b[1])}},T.tag=function(f){var b=this.rules.inline.tag.exec(f);if(b)return!this.lexer.state.inLink&&/^<a /i.test(b[0])?this.lexer.state.inLink=!0:this.lexer.state.inLink&&/^<\/a>/i.test(b[0])&&(this.lexer.state.inLink=!1),!this.lexer.state.inRawBlock&&/^<(pre|code|kbd|script)(\s|>)/i.test(b[0])?this.lexer.state.inRawBlock=!0:this.lexer.state.inRawBlock&&/^<\/(pre|code|kbd|script)(\s|>)/i.test(b[0])&&(this.lexer.state.inRawBlock=!1),{type:this.options.sanitize?"text":"html",raw:b[0],inLink:this.lexer.state.inLink,inRawBlock:this.lexer.state.inRawBlock,text:this.options.sanitize?this.options.sanitizer?this.options.sanitizer(b[0]):mn(b[0]):b[0]}},T.link=function(f){var b=this.rules.inline.link.exec(f);if(b){var S=b[2].trim();if(!this.options.pedantic&&/^</.test(S)){if(!/>$/.test(S))return;var m=Ar(S.slice(0,-1),"\\");if((S.length-m.length)%2===0)return}else{var _=Ot(b[2],"()");if(_>-1){var P=b[0].indexOf("!")===0?5:4,D=P+b[1].length+_;b[2]=b[2].substring(0,_),b[0]=b[0].substring(0,D).trim(),b[3]=""}}var j=b[2],se="";if(this.options.pedantic){var le=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(j);le&&(j=le[1],se=le[3])}else se=b[3]?b[3].slice(1,-1):"";return j=j.trim(),/^</.test(j)&&(this.options.pedantic&&!/>$/.test(S)?j=j.slice(1):j=j.slice(1,-1)),bl(b,{href:j&&j.replace(this.rules.inline._escapes,"$1"),title:se&&se.replace(this.rules.inline._escapes,"$1")},b[0],this.lexer)}},T.reflink=function(f,b){var S;if((S=this.rules.inline.reflink.exec(f))||(S=this.rules.inline.nolink.exec(f))){var m=(S[2]||S[1]).replace(/\s+/g," ");if(m=b[m.toLowerCase()],!m||!m.href){var _=S[0].charAt(0);return{type:"text",raw:_,text:_}}return bl(S,m,S[0],this.lexer)}},T.emStrong=function(f,b,S){S===void 0&&(S="");var m=this.rules.inline.emStrong.lDelim.exec(f);if(!!m&&!(m[3]&&S.match(/(?:[0-9A-Za-z\xAA\xB2\xB3\xB5\xB9\xBA\xBC-\xBE\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u0660-\u0669\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07C0-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08C7\u0904-\u0939\u093D\u0950\u0958-\u0961\u0966-\u096F\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09E6-\u09F1\u09F4-\u09F9\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A66-\u0A6F\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AE6-\u0AEF\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B66-\u0B6F\u0B71-\u0B77\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0BE6-\u0BF2\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C66-\u0C6F\u0C78-\u0C7E\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CE6-\u0CEF\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D58-\u0D61\u0D66-\u0D78\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DE6-\u0DEF\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F20-\u0F33\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F-\u1049\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u1090-\u1099\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1369-\u137C\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A16\u1A20-\u1A54\u1A80-\u1A89\u1A90-\u1A99\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B50-\u1B59\u1B83-\u1BA0\u1BAE-\u1BE5\u1C00-\u1C23\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2070\u2071\u2074-\u2079\u207F-\u2089\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2150-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2CFD\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u3192-\u3195\u31A0-\u31BF\u31F0-\u31FF\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\u3400-\u4DBF\u4E00-\u9FFC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7BF\uA7C2-\uA7CA\uA7F5-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA830-\uA835\uA840-\uA873\uA882-\uA8B3\uA8D0-\uA8D9\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA900-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF-\uA9D9\uA9E0-\uA9E4\uA9E6-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA50-\uAA59\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD07-\uDD33\uDD40-\uDD78\uDD8A\uDD8B\uDE80-\uDE9C\uDEA0-\uDED0\uDEE1-\uDEFB\uDF00-\uDF23\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC58-\uDC76\uDC79-\uDC9E\uDCA7-\uDCAF\uDCE0-\uDCF2\uDCF4\uDCF5\uDCFB-\uDD1B\uDD20-\uDD39\uDD80-\uDDB7\uDDBC-\uDDCF\uDDD2-\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE40-\uDE48\uDE60-\uDE7E\uDE80-\uDE9F\uDEC0-\uDEC7\uDEC9-\uDEE4\uDEEB-\uDEEF\uDF00-\uDF35\uDF40-\uDF55\uDF58-\uDF72\uDF78-\uDF91\uDFA9-\uDFAF]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDCFA-\uDD23\uDD30-\uDD39\uDE60-\uDE7E\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF27\uDF30-\uDF45\uDF51-\uDF54\uDFB0-\uDFCB\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC52-\uDC6F\uDC83-\uDCAF\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD03-\uDD26\uDD36-\uDD3F\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDD0-\uDDDA\uDDDC\uDDE1-\uDDF4\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDEF0-\uDEF9\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC50-\uDC59\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE50-\uDE59\uDE80-\uDEAA\uDEB8\uDEC0-\uDEC9\uDF00-\uDF1A\uDF30-\uDF3B]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCF2\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDD50-\uDD59\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC50-\uDC6C\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD50-\uDD59\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDDA0-\uDDA9\uDEE0-\uDEF2\uDFB0\uDFC0-\uDFD4]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF50-\uDF59\uDF5B-\uDF61\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE96\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82C[\uDC00-\uDD1E\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD834[\uDEE0-\uDEF3\uDF60-\uDF78]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD40-\uDD49\uDD4E\uDEC0-\uDEEB\uDEF0-\uDEF9]|\uD83A[\uDC00-\uDCC4\uDCC7-\uDCCF\uDD00-\uDD43\uDD4B\uDD50-\uDD59]|\uD83B[\uDC71-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDCB4\uDD01-\uDD2D\uDD2F-\uDD3D\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD83C[\uDD00-\uDD0C]|\uD83E[\uDFF0-\uDFF9]|\uD869[\uDC00-\uDEDD\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])/))){var _=m[1]||m[2]||"";if(!_||_&&(S===""||this.rules.inline.punctuation.exec(S))){var P=m[0].length-1,D,j,se=P,le=0,ge=m[0][0]==="*"?this.rules.inline.emStrong.rDelimAst:this.rules.inline.emStrong.rDelimUnd;for(ge.lastIndex=0,b=b.slice(-1*f.length+P);(m=ge.exec(b))!=null;)if(D=m[1]||m[2]||m[3]||m[4]||m[5]||m[6],!!D){if(j=D.length,m[3]||m[4]){se+=j;continue}else if((m[5]||m[6])&&P%3&&!((P+j)%3)){le+=j;continue}if(se-=j,!(se>0)){if(j=Math.min(j,j+se+le),Math.min(P,j)%2){var ve=f.slice(1,P+m.index+j);return{type:"em",raw:f.slice(0,P+m.index+j+1),text:ve,tokens:this.lexer.inlineTokens(ve,[])}}var re=f.slice(2,P+m.index+j-1);return{type:"strong",raw:f.slice(0,P+m.index+j+1),text:re,tokens:this.lexer.inlineTokens(re,[])}}}}}},T.codespan=function(f){var b=this.rules.inline.code.exec(f);if(b){var S=b[2].replace(/\n/g," "),m=/[^ ]/.test(S),_=/^ /.test(S)&&/ $/.test(S);return m&&_&&(S=S.substring(1,S.length-1)),S=mn(S,!0),{type:"codespan",raw:b[0],text:S}}},T.br=function(f){var b=this.rules.inline.br.exec(f);if(b)return{type:"br",raw:b[0]}},T.del=function(f){var b=this.rules.inline.del.exec(f);if(b)return{type:"del",raw:b[0],text:b[2],tokens:this.lexer.inlineTokens(b[2],[])}},T.autolink=function(f,b){var S=this.rules.inline.autolink.exec(f);if(S){var m,_;return S[2]==="@"?(m=mn(this.options.mangle?b(S[1]):S[1]),_="mailto:"+m):(m=mn(S[1]),_=m),{type:"link",raw:S[0],text:m,href:_,tokens:[{type:"text",raw:m,text:m}]}}},T.url=function(f,b){var S;if(S=this.rules.inline.url.exec(f)){var m,_;if(S[2]==="@")m=mn(this.options.mangle?b(S[0]):S[0]),_="mailto:"+m;else{var P;do P=S[0],S[0]=this.rules.inline._backpedal.exec(S[0])[0];while(P!==S[0]);m=mn(S[0]),S[1]==="www."?_="http://"+m:_=m}return{type:"link",raw:S[0],text:m,href:_,tokens:[{type:"text",raw:m,text:m}]}}},T.inlineText=function(f,b){var S=this.rules.inline.text.exec(f);if(S){var m;return this.lexer.state.inRawBlock?m=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(S[0]):mn(S[0]):S[0]:m=mn(this.options.smartypants?b(S[0]):S[0]),{type:"text",raw:S[0],text:m}}},L}(),Nr=an.noopTest,qe=an.edit,Ii=an.merge,Se={newline:/^(?: *(?:\n|$))+/,code:/^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,fences:/^ {0,3}(`{3,}(?=[^`\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?=\n|$)|$)/,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,heading:/^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( {0,3}bull)( [^\n]+?)?(?:\n|$)/,html:"^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))",def:/^ {0,3}\[(label)\]: *\n? *<?([^\s>]+)>?(?:(?: +\n? *| *\n *)(title))? *(?:\n+|$)/,table:Nr,lheading:/^([^\n]+)\n {0,3}(=+|-+) *(?:\n+|$)/,_paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html| +\n)[^\n]+)*)/,text:/^[^\n]+/};Se._label=/(?!\s*\])(?:\\[\[\]]|[^\[\]])+/,Se._title=/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/,Se.def=qe(Se.def).replace("label",Se._label).replace("title",Se._title).getRegex(),Se.bullet=/(?:[*+-]|\d{1,9}[.)])/,Se.listItemStart=qe(/^( *)(bull) */).replace("bull",Se.bullet).getRegex(),Se.list=qe(Se.list).replace(/bull/g,Se.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+Se.def.source+")").getRegex(),Se._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",Se._comment=/<!--(?!-?>)[\s\S]*?(?:-->|$)/,Se.html=qe(Se.html,"i").replace("comment",Se._comment).replace("tag",Se._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),Se.paragraph=qe(Se._paragraph).replace("hr",Se.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",Se._tag).getRegex(),Se.blockquote=qe(Se.blockquote).replace("paragraph",Se.paragraph).getRegex(),Se.normal=Ii({},Se),Se.gfm=Ii({},Se.normal,{table:"^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)\\|?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"}),Se.gfm.table=qe(Se.gfm.table).replace("hr",Se.hr).replace("heading"," {0,3}#{1,6} ").replace("blockquote"," {0,3}>").replace("code"," {4}[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",Se._tag).getRegex(),Se.pedantic=Ii({},Se.normal,{html:qe(`^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`).replace("comment",Se._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^(#{1,6})(.*)(?:\n+|$)/,fences:Nr,paragraph:qe(Se.normal._paragraph).replace("hr",Se.hr).replace("heading",` *#{1,6} *[^
]`).replace("lheading",Se.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").getRegex()});var ie={escape:/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:Nr,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(?!\s*\])((?:\\[\[\]]?|[^\[\]\\])+)\]/,nolink:/^!?\[(?!\s*\])((?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]])*)\](?:\[\])?/,reflinkSearch:"reflink|nolink(?!\\()",emStrong:{lDelim:/^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,rDelimAst:/\_\_[^_*]*?\*[^_*]*?\_\_|[punct_](\*+)(?=[\s]|$)|[^punct*_\s](\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|[^punct*_\s](\*+)(?=[^punct*_\s])/,rDelimUnd:/\*\*[^_*]*?\_[^_*]*?\*\*|[punct*](\_+)(?=[\s]|$)|[^punct*_\s](\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/},code:/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,br:/^( {2,}|\\)\n(?!\s*$)/,del:Nr,text:/^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,punctuation:/^([\spunctuation])/};ie._punctuation="!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~",ie.punctuation=qe(ie.punctuation).replace(/punctuation/g,ie._punctuation).getRegex(),ie.blockSkip=/\[[^\]]*?\]\([^\)]*?\)|`[^`]*?`|<[^>]*?>/g,ie.escapedEmSt=/\\\*|\\_/g,ie._comment=qe(Se._comment).replace("(?:-->|$)","-->").getRegex(),ie.emStrong.lDelim=qe(ie.emStrong.lDelim).replace(/punct/g,ie._punctuation).getRegex(),ie.emStrong.rDelimAst=qe(ie.emStrong.rDelimAst,"g").replace(/punct/g,ie._punctuation).getRegex(),ie.emStrong.rDelimUnd=qe(ie.emStrong.rDelimUnd,"g").replace(/punct/g,ie._punctuation).getRegex(),ie._escapes=/\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g,ie._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,ie._email=/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,ie.autolink=qe(ie.autolink).replace("scheme",ie._scheme).replace("email",ie._email).getRegex(),ie._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,ie.tag=qe(ie.tag).replace("comment",ie._comment).replace("attribute",ie._attribute).getRegex(),ie._label=/(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,ie._href=/<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/,ie._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,ie.link=qe(ie.link).replace("label",ie._label).replace("href",ie._href).replace("title",ie._title).getRegex(),ie.reflink=qe(ie.reflink).replace("label",ie._label).getRegex(),ie.reflinkSearch=qe(ie.reflinkSearch,"g").replace("reflink",ie.reflink).replace("nolink",ie.nolink).getRegex(),ie.normal=Ii({},ie),ie.pedantic=Ii({},ie.normal,{strong:{start:/^__|\*\*/,middle:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,endAst:/\*\*(?!\*)/g,endUnd:/__(?!_)/g},em:{start:/^_|\*/,middle:/^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,endAst:/\*(?!\*)/g,endUnd:/_(?!_)/g},link:qe(/^!?\[(label)\]\((.*?)\)/).replace("label",ie._label).getRegex(),reflink:qe(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",ie._label).getRegex()}),ie.gfm=Ii({},ie.normal,{escape:qe(ie.escape).replace("])","~|])").getRegex(),_extended_email:/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,url:/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,_backpedal:/(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/}),ie.gfm.url=qe(ie.gfm.url,"i").replace("email",ie.gfm._extended_email).getRegex(),ie.breaks=Ii({},ie.gfm,{br:qe(ie.br).replace("{2,}","*").getRegex(),text:qe(ie.gfm.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()});var Gs={block:Se,inline:ie},vl=Vs,Uo=s.exports.defaults,so=Gs.block,$o=Gs.inline,zr=an.repeatString;function Kc(L){return L.replace(/---/g,"\u2014").replace(/--/g,"\u2013").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1\u2018").replace(/'/g,"\u2019").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1\u201C").replace(/"/g,"\u201D").replace(/\.{3}/g,"\u2026")}function js(L){var T="",E,f,b=L.length;for(E=0;E<b;E++)f=L.charCodeAt(E),Math.random()>.5&&(f="x"+f.toString(16)),T+="&#"+f+";";return T}var Or=function(){function L(E){this.tokens=[],this.tokens.links=Object.create(null),this.options=E||Uo,this.options.tokenizer=this.options.tokenizer||new vl,this.tokenizer=this.options.tokenizer,this.tokenizer.options=this.options,this.tokenizer.lexer=this,this.inlineQueue=[],this.state={inLink:!1,inRawBlock:!1,top:!0};var f={block:so.normal,inline:$o.normal};this.options.pedantic?(f.block=so.pedantic,f.inline=$o.pedantic):this.options.gfm&&(f.block=so.gfm,this.options.breaks?f.inline=$o.breaks:f.inline=$o.gfm),this.tokenizer.rules=f}L.lex=function(f,b){var S=new L(b);return S.lex(f)},L.lexInline=function(f,b){var S=new L(b);return S.inlineTokens(f)};var T=L.prototype;return T.lex=function(f){f=f.replace(/\r\n|\r/g,`
`).replace(/\t/g,"    "),this.blockTokens(f,this.tokens);for(var b;b=this.inlineQueue.shift();)this.inlineTokens(b.src,b.tokens);return this.tokens},T.blockTokens=function(f,b){var S=this;b===void 0&&(b=[]),this.options.pedantic&&(f=f.replace(/^ +$/gm,""));for(var m,_,P,D;f;)if(!(this.options.extensions&&this.options.extensions.block&&this.options.extensions.block.some(function(se){return(m=se.call({lexer:S},f,b))?(f=f.substring(m.raw.length),b.push(m),!0):!1}))){if(m=this.tokenizer.space(f)){f=f.substring(m.raw.length),m.type&&b.push(m);continue}if(m=this.tokenizer.code(f)){f=f.substring(m.raw.length),_=b[b.length-1],_&&(_.type==="paragraph"||_.type==="text")?(_.raw+=`
`+m.raw,_.text+=`
`+m.text,this.inlineQueue[this.inlineQueue.length-1].src=_.text):b.push(m);continue}if(m=this.tokenizer.fences(f)){f=f.substring(m.raw.length),b.push(m);continue}if(m=this.tokenizer.heading(f)){f=f.substring(m.raw.length),b.push(m);continue}if(m=this.tokenizer.hr(f)){f=f.substring(m.raw.length),b.push(m);continue}if(m=this.tokenizer.blockquote(f)){f=f.substring(m.raw.length),b.push(m);continue}if(m=this.tokenizer.list(f)){f=f.substring(m.raw.length),b.push(m);continue}if(m=this.tokenizer.html(f)){f=f.substring(m.raw.length),b.push(m);continue}if(m=this.tokenizer.def(f)){f=f.substring(m.raw.length),_=b[b.length-1],_&&(_.type==="paragraph"||_.type==="text")?(_.raw+=`
`+m.raw,_.text+=`
`+m.raw,this.inlineQueue[this.inlineQueue.length-1].src=_.text):this.tokens.links[m.tag]||(this.tokens.links[m.tag]={href:m.href,title:m.title});continue}if(m=this.tokenizer.table(f)){f=f.substring(m.raw.length),b.push(m);continue}if(m=this.tokenizer.lheading(f)){f=f.substring(m.raw.length),b.push(m);continue}if(P=f,this.options.extensions&&this.options.extensions.startBlock&&function(){var se=1/0,le=f.slice(1),ge=void 0;S.options.extensions.startBlock.forEach(function(ve){ge=ve.call({lexer:this},le),typeof ge=="number"&&ge>=0&&(se=Math.min(se,ge))}),se<1/0&&se>=0&&(P=f.substring(0,se+1))}(),this.state.top&&(m=this.tokenizer.paragraph(P))){_=b[b.length-1],D&&_.type==="paragraph"?(_.raw+=`
`+m.raw,_.text+=`
`+m.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=_.text):b.push(m),D=P.length!==f.length,f=f.substring(m.raw.length);continue}if(m=this.tokenizer.text(f)){f=f.substring(m.raw.length),_=b[b.length-1],_&&_.type==="text"?(_.raw+=`
`+m.raw,_.text+=`
`+m.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=_.text):b.push(m);continue}if(f){var j="Infinite loop on byte: "+f.charCodeAt(0);if(this.options.silent){console.error(j);break}else throw new Error(j)}}return this.state.top=!0,b},T.inline=function(f,b){this.inlineQueue.push({src:f,tokens:b})},T.inlineTokens=function(f,b){var S=this;b===void 0&&(b=[]);var m,_,P,D=f,j,se,le;if(this.tokens.links){var ge=Object.keys(this.tokens.links);if(ge.length>0)for(;(j=this.tokenizer.rules.inline.reflinkSearch.exec(D))!=null;)ge.includes(j[0].slice(j[0].lastIndexOf("[")+1,-1))&&(D=D.slice(0,j.index)+"["+zr("a",j[0].length-2)+"]"+D.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))}for(;(j=this.tokenizer.rules.inline.blockSkip.exec(D))!=null;)D=D.slice(0,j.index)+"["+zr("a",j[0].length-2)+"]"+D.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);for(;(j=this.tokenizer.rules.inline.escapedEmSt.exec(D))!=null;)D=D.slice(0,j.index)+"++"+D.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);for(;f;)if(se||(le=""),se=!1,!(this.options.extensions&&this.options.extensions.inline&&this.options.extensions.inline.some(function(re){return(m=re.call({lexer:S},f,b))?(f=f.substring(m.raw.length),b.push(m),!0):!1}))){if(m=this.tokenizer.escape(f)){f=f.substring(m.raw.length),b.push(m);continue}if(m=this.tokenizer.tag(f)){f=f.substring(m.raw.length),_=b[b.length-1],_&&m.type==="text"&&_.type==="text"?(_.raw+=m.raw,_.text+=m.text):b.push(m);continue}if(m=this.tokenizer.link(f)){f=f.substring(m.raw.length),b.push(m);continue}if(m=this.tokenizer.reflink(f,this.tokens.links)){f=f.substring(m.raw.length),_=b[b.length-1],_&&m.type==="text"&&_.type==="text"?(_.raw+=m.raw,_.text+=m.text):b.push(m);continue}if(m=this.tokenizer.emStrong(f,D,le)){f=f.substring(m.raw.length),b.push(m);continue}if(m=this.tokenizer.codespan(f)){f=f.substring(m.raw.length),b.push(m);continue}if(m=this.tokenizer.br(f)){f=f.substring(m.raw.length),b.push(m);continue}if(m=this.tokenizer.del(f)){f=f.substring(m.raw.length),b.push(m);continue}if(m=this.tokenizer.autolink(f,js)){f=f.substring(m.raw.length),b.push(m);continue}if(!this.state.inLink&&(m=this.tokenizer.url(f,js))){f=f.substring(m.raw.length),b.push(m);continue}if(P=f,this.options.extensions&&this.options.extensions.startInline&&function(){var re=1/0,Ct=f.slice(1),Re=void 0;S.options.extensions.startInline.forEach(function(gn){Re=gn.call({lexer:this},Ct),typeof Re=="number"&&Re>=0&&(re=Math.min(re,Re))}),re<1/0&&re>=0&&(P=f.substring(0,re+1))}(),m=this.tokenizer.inlineText(P,Kc)){f=f.substring(m.raw.length),m.raw.slice(-1)!=="_"&&(le=m.raw.slice(-1)),se=!0,_=b[b.length-1],_&&_.type==="text"?(_.raw+=m.raw,_.text+=m.text):b.push(m);continue}if(f){var ve="Infinite loop on byte: "+f.charCodeAt(0);if(this.options.silent){console.error(ve);break}else throw new Error(ve)}}return b},t(L,null,[{key:"rules",get:function(){return{block:so,inline:$o}}}]),L}(),Ko=s.exports.defaults,ao=an.cleanUrl,Hr=an.escape,xl=function(){function L(E){this.options=E||Ko}var T=L.prototype;return T.code=function(f,b,S){var m=(b||"").match(/\S*/)[0];if(this.options.highlight){var _=this.options.highlight(f,m);_!=null&&_!==f&&(S=!0,f=_)}return f=f.replace(/\n$/,"")+`
`,m?'<pre><code class="'+this.options.langPrefix+Hr(m,!0)+'">'+(S?f:Hr(f,!0))+`</code></pre>
`:"<pre><code>"+(S?f:Hr(f,!0))+`</code></pre>
`},T.blockquote=function(f){return`<blockquote>
`+f+`</blockquote>
`},T.html=function(f){return f},T.heading=function(f,b,S,m){return this.options.headerIds?"<h"+b+' id="'+this.options.headerPrefix+m.slug(S)+'">'+f+"</h"+b+`>
`:"<h"+b+">"+f+"</h"+b+`>
`},T.hr=function(){return this.options.xhtml?`<hr/>
`:`<hr>
`},T.list=function(f,b,S){var m=b?"ol":"ul",_=b&&S!==1?' start="'+S+'"':"";return"<"+m+_+`>
`+f+"</"+m+`>
`},T.listitem=function(f){return"<li>"+f+`</li>
`},T.checkbox=function(f){return"<input "+(f?'checked="" ':"")+'disabled="" type="checkbox"'+(this.options.xhtml?" /":"")+"> "},T.paragraph=function(f){return"<p>"+f+`</p>
`},T.table=function(f,b){return b&&(b="<tbody>"+b+"</tbody>"),`<table>
<thead>
`+f+`</thead>
`+b+`</table>
`},T.tablerow=function(f){return`<tr>
`+f+`</tr>
`},T.tablecell=function(f,b){var S=b.header?"th":"td",m=b.align?"<"+S+' align="'+b.align+'">':"<"+S+">";return m+f+"</"+S+`>
`},T.strong=function(f){return"<strong>"+f+"</strong>"},T.em=function(f){return"<em>"+f+"</em>"},T.codespan=function(f){return"<code>"+f+"</code>"},T.br=function(){return this.options.xhtml?"<br/>":"<br>"},T.del=function(f){return"<del>"+f+"</del>"},T.link=function(f,b,S){if(f=ao(this.options.sanitize,this.options.baseUrl,f),f===null)return S;var m='<a href="'+Hr(f)+'"';return b&&(m+=' title="'+b+'"'),m+=">"+S+"</a>",m},T.image=function(f,b,S){if(f=ao(this.options.sanitize,this.options.baseUrl,f),f===null)return S;var m='<img src="'+f+'" alt="'+S+'"';return b&&(m+=' title="'+b+'"'),m+=this.options.xhtml?"/>":">",m},T.text=function(f){return f},L}(),Cl=function(){function L(){}var T=L.prototype;return T.strong=function(f){return f},T.em=function(f){return f},T.codespan=function(f){return f},T.del=function(f){return f},T.html=function(f){return f},T.text=function(f){return f},T.link=function(f,b,S){return""+S},T.image=function(f,b,S){return""+S},T.br=function(){return""},L}(),Us=function(){function L(){this.seen={}}var T=L.prototype;return T.serialize=function(f){return f.toLowerCase().trim().replace(/<[!\/a-z].*?>/ig,"").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g,"").replace(/\s/g,"-")},T.getNextSafeSlug=function(f,b){var S=f,m=0;if(this.seen.hasOwnProperty(S)){m=this.seen[f];do m++,S=f+"-"+m;while(this.seen.hasOwnProperty(S))}return b||(this.seen[f]=m,this.seen[S]=0),S},T.slug=function(f,b){b===void 0&&(b={});var S=this.serialize(f);return this.getNextSafeSlug(S,b.dryrun)},L}(),qc=xl,_l=Cl,wl=Us,ki=s.exports.defaults,$s=an.unescape,Tl=function(){function L(E){this.options=E||ki,this.options.renderer=this.options.renderer||new qc,this.renderer=this.options.renderer,this.renderer.options=this.options,this.textRenderer=new _l,this.slugger=new wl}L.parse=function(f,b){var S=new L(b);return S.parse(f)},L.parseInline=function(f,b){var S=new L(b);return S.parseInline(f)};var T=L.prototype;return T.parse=function(f,b){b===void 0&&(b=!0);var S="",m,_,P,D,j,se,le,ge,ve,re,Ct,Re,gn,Xs,Yt,Il,Gb,kl,am,jb=f.length;for(m=0;m<jb;m++){if(re=f[m],this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[re.type]&&(am=this.options.extensions.renderers[re.type].call({parser:this},re),am!==!1||!["space","hr","heading","code","table","blockquote","list","html","paragraph","text"].includes(re.type))){S+=am||"";continue}switch(re.type){case"space":continue;case"hr":{S+=this.renderer.hr();continue}case"heading":{S+=this.renderer.heading(this.parseInline(re.tokens),re.depth,$s(this.parseInline(re.tokens,this.textRenderer)),this.slugger);continue}case"code":{S+=this.renderer.code(re.text,re.lang,re.escaped);continue}case"table":{for(ge="",le="",D=re.header.length,_=0;_<D;_++)le+=this.renderer.tablecell(this.parseInline(re.header[_].tokens),{header:!0,align:re.align[_]});for(ge+=this.renderer.tablerow(le),ve="",D=re.rows.length,_=0;_<D;_++){for(se=re.rows[_],le="",j=se.length,P=0;P<j;P++)le+=this.renderer.tablecell(this.parseInline(se[P].tokens),{header:!1,align:re.align[P]});ve+=this.renderer.tablerow(le)}S+=this.renderer.table(ge,ve);continue}case"blockquote":{ve=this.parse(re.tokens),S+=this.renderer.blockquote(ve);continue}case"list":{for(Ct=re.ordered,Re=re.start,gn=re.loose,D=re.items.length,ve="",_=0;_<D;_++)Yt=re.items[_],Il=Yt.checked,Gb=Yt.task,Xs="",Yt.task&&(kl=this.renderer.checkbox(Il),gn?Yt.tokens.length>0&&Yt.tokens[0].type==="paragraph"?(Yt.tokens[0].text=kl+" "+Yt.tokens[0].text,Yt.tokens[0].tokens&&Yt.tokens[0].tokens.length>0&&Yt.tokens[0].tokens[0].type==="text"&&(Yt.tokens[0].tokens[0].text=kl+" "+Yt.tokens[0].tokens[0].text)):Yt.tokens.unshift({type:"text",text:kl}):Xs+=kl),Xs+=this.parse(Yt.tokens,gn),ve+=this.renderer.listitem(Xs,Gb,Il);S+=this.renderer.list(ve,Ct,Re);continue}case"html":{S+=this.renderer.html(re.text);continue}case"paragraph":{S+=this.renderer.paragraph(this.parseInline(re.tokens));continue}case"text":{for(ve=re.tokens?this.parseInline(re.tokens):re.text;m+1<jb&&f[m+1].type==="text";)re=f[++m],ve+=`
`+(re.tokens?this.parseInline(re.tokens):re.text);S+=b?this.renderer.paragraph(ve):ve;continue}default:{var Ub='Token with "'+re.type+'" type was not found.';if(this.options.silent){console.error(Ub);return}else throw new Error(Ub)}}}return S},T.parseInline=function(f,b){b=b||this.renderer;var S="",m,_,P,D=f.length;for(m=0;m<D;m++){if(_=f[m],this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[_.type]&&(P=this.options.extensions.renderers[_.type].call({parser:this},_),P!==!1||!["escape","html","link","image","strong","em","codespan","br","del","text"].includes(_.type))){S+=P||"";continue}switch(_.type){case"escape":{S+=b.text(_.text);break}case"html":{S+=b.html(_.text);break}case"link":{S+=b.link(_.href,_.title,this.parseInline(_.tokens,b));break}case"image":{S+=b.image(_.href,_.title,_.text);break}case"strong":{S+=b.strong(this.parseInline(_.tokens,b));break}case"em":{S+=b.em(this.parseInline(_.tokens,b));break}case"codespan":{S+=b.codespan(_.text);break}case"br":{S+=b.br();break}case"del":{S+=b.del(this.parseInline(_.tokens,b));break}case"text":{S+=b.text(_.text);break}default:{var j='Token with "'+_.type+'" type was not found.';if(this.options.silent){console.error(j);return}else throw new Error(j)}}}return S},L}(),$n=Or,Br=Tl,Ks=Vs,El=xl,Xc=Cl,qs=Us,qo=an.merge,Yc=an.checkSanitizeDeprecation,Kn=an.escape,Zc=s.exports.getDefaults,Jc=s.exports.changeDefaults,Qc=s.exports.defaults;function we(L,T,E){if(typeof L=="undefined"||L===null)throw new Error("marked(): input parameter is undefined or null");if(typeof L!="string")throw new Error("marked(): input parameter is of type "+Object.prototype.toString.call(L)+", string expected");if(typeof T=="function"&&(E=T,T=null),T=qo({},we.defaults,T||{}),Yc(T),E){var f=T.highlight,b;try{b=$n.lex(L,T)}catch(P){return E(P)}var S=function(D){var j;if(!D)try{T.walkTokens&&we.walkTokens(b,T.walkTokens),j=Br.parse(b,T)}catch(se){D=se}return T.highlight=f,D?E(D):E(null,j)};if(!f||f.length<3||(delete T.highlight,!b.length))return S();var m=0;we.walkTokens(b,function(P){P.type==="code"&&(m++,setTimeout(function(){f(P.text,P.lang,function(D,j){if(D)return S(D);j!=null&&j!==P.text&&(P.text=j,P.escaped=!0),m--,m===0&&S()})},0))}),m===0&&S();return}try{var _=$n.lex(L,T);return T.walkTokens&&we.walkTokens(_,T.walkTokens),Br.parse(_,T)}catch(P){if(P.message+=`
Please report this to https://github.com/markedjs/marked.`,T.silent)return"<p>An error occurred:</p><pre>"+Kn(P.message+"",!0)+"</pre>";throw P}}we.options=we.setOptions=function(L){return qo(we.defaults,L),Jc(we.defaults),we},we.getDefaults=Zc,we.defaults=Qc,we.use=function(){for(var L=this,T=arguments.length,E=new Array(T),f=0;f<T;f++)E[f]=arguments[f];var b=qo.apply(void 0,[{}].concat(E)),S=we.defaults.extensions||{renderers:{},childTokens:{}},m;E.forEach(function(_){if(_.extensions&&(m=!0,_.extensions.forEach(function(D){if(!D.name)throw new Error("extension name required");if(D.renderer){var j=S.renderers?S.renderers[D.name]:null;j?S.renderers[D.name]=function(){for(var se=arguments.length,le=new Array(se),ge=0;ge<se;ge++)le[ge]=arguments[ge];var ve=D.renderer.apply(this,le);return ve===!1&&(ve=j.apply(this,le)),ve}:S.renderers[D.name]=D.renderer}if(D.tokenizer){if(!D.level||D.level!=="block"&&D.level!=="inline")throw new Error("extension level must be 'block' or 'inline'");S[D.level]?S[D.level].unshift(D.tokenizer):S[D.level]=[D.tokenizer],D.start&&(D.level==="block"?S.startBlock?S.startBlock.push(D.start):S.startBlock=[D.start]:D.level==="inline"&&(S.startInline?S.startInline.push(D.start):S.startInline=[D.start]))}D.childTokens&&(S.childTokens[D.name]=D.childTokens)})),_.renderer&&function(){var D=we.defaults.renderer||new El,j=function(ge){var ve=D[ge];D[ge]=function(){for(var re=arguments.length,Ct=new Array(re),Re=0;Re<re;Re++)Ct[Re]=arguments[Re];var gn=_.renderer[ge].apply(D,Ct);return gn===!1&&(gn=ve.apply(D,Ct)),gn}};for(var se in _.renderer)j(se);b.renderer=D}(),_.tokenizer&&function(){var D=we.defaults.tokenizer||new Ks,j=function(ge){var ve=D[ge];D[ge]=function(){for(var re=arguments.length,Ct=new Array(re),Re=0;Re<re;Re++)Ct[Re]=arguments[Re];var gn=_.tokenizer[ge].apply(D,Ct);return gn===!1&&(gn=ve.apply(D,Ct)),gn}};for(var se in _.tokenizer)j(se);b.tokenizer=D}(),_.walkTokens){var P=we.defaults.walkTokens;b.walkTokens=function(D){_.walkTokens.call(L,D),P&&P(D)}}m&&(b.extensions=S),we.setOptions(b)})},we.walkTokens=function(L,T){for(var E=function(){var m=b.value;switch(T(m),m.type){case"table":{for(var _=o(m.header),P;!(P=_()).done;){var D=P.value;we.walkTokens(D.tokens,T)}for(var j=o(m.rows),se;!(se=j()).done;)for(var le=se.value,ge=o(le),ve;!(ve=ge()).done;){var re=ve.value;we.walkTokens(re.tokens,T)}break}case"list":{we.walkTokens(m.items,T);break}default:we.defaults.extensions&&we.defaults.extensions.childTokens&&we.defaults.extensions.childTokens[m.type]?we.defaults.extensions.childTokens[m.type].forEach(function(Ct){we.walkTokens(m[Ct],T)}):m.tokens&&we.walkTokens(m.tokens,T)}},f=o(L),b;!(b=f()).done;)E()},we.parseInline=function(L,T){if(typeof L=="undefined"||L===null)throw new Error("marked.parseInline(): input parameter is undefined or null");if(typeof L!="string")throw new Error("marked.parseInline(): input parameter is of type "+Object.prototype.toString.call(L)+", string expected");T=qo({},we.defaults,T||{}),Yc(T);try{var E=$n.lexInline(L,T);return T.walkTokens&&we.walkTokens(E,T.walkTokens),Br.parseInline(E,T)}catch(f){if(f.message+=`
Please report this to https://github.com/markedjs/marked.`,T.silent)return"<p>An error occurred:</p><pre>"+Kn(f.message+"",!0)+"</pre>";throw f}},we.Parser=Br,we.parser=Br.parse,we.Renderer=El,we.TextRenderer=Xc,we.Lexer=$n,we.lexer=$n.lex,we.Tokenizer=Ks,we.Slugger=qs,we.parse=we;var Wr=we;return Wr})})();var Y4=qi.Parser,Z4=qi.parser,H_=qi.Renderer,J4=qi.TextRenderer,Q4=qi.Lexer,e5=qi.lexer,t5=qi.Tokenizer,n5=qi.Slugger,B_=qi.parse;Rl();yh();Nn();Ze();Ht();function W_(r,e={},t={}){var n;let i=new R,o=!1,s=i.add(new Zt),a=jx(e),l=function(v){let w;try{w=RS(decodeURIComponent(v))}catch(F){}return w?(w=WS(w,F=>{if(r.uris&&r.uris[F])return Ce.revive(r.uris[F])}),encodeURIComponent(JSON.stringify(w))):v},c=function(v,w){let F=r.uris&&r.uris[v];if(!F)return v;let M=Ce.revive(F);return w?v.startsWith(ut.data+":")?v:dS.asBrowserUri(M).toString(!0):Ce.parse(v).toString()===M.toString()?v:(M.query&&(M=M.with({query:l(M.query)})),M.toString())},d,h=new Promise(v=>d=v),p=new H_;if(p.image=(v,w,F)=>{let M=[],z=[];if(v){({href:v,dimensions:M}=Kx(v)),v=c(v,!0);try{let V=Ce.parse(v);e.baseUrl&&V.scheme===ut.file&&(v=vm(e.baseUrl,v).toString())}catch(V){}z.push(`src="${v}"`)}return F&&z.push(`alt="${F}"`),w&&z.push(`title="${w}"`),M.length&&(z=z.concat(M)),"<img "+z.join(" ")+">"},p.link=(v,w,F)=>(v===F&&(F=fu(F)),v=c(v,!1),e.baseUrl&&(/^\w[\w\d+.-]*:/.test(v)||(v=vm(e.baseUrl,v).toString())),w=fu(w),v=fu(v),!v||v.match(/^data:|javascript:/i)||v.match(/^command:/i)&&!r.isTrusted||v.match(/^command:(\/\/\/)?_workbench\.downloadResource/i)?F:(v=v.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;"),`<a href="#" data-href="${v}" title="${w||v}">${F}</a>`)),p.paragraph=v=>`<p>${v}</p>`,e.codeBlockRenderer&&(p.code=(v,w)=>{let F=e.codeBlockRenderer(w,v),M=mu.nextId();return Js(Promise.all([F,h]),s.token).then(z=>{var V;if(!o&&z){let G=a.querySelector(`div[data-code="${M}"]`);G&&jr(G,z[0]),(V=e.asyncRenderCallback)===null||V===void 0||V.call(e)}}).catch(()=>{}),`<div class="code" data-code="${M}">${_S(v)}</div>`}),e.actionHandler){let v=e.actionHandler.disposables.add(new Zm(a,"click")),w=e.actionHandler.disposables.add(new Zm(a,"auxclick"));e.actionHandler.disposables.add(_t.any(v.event,w.event)(F=>{let M=new aS(F);if(!M.leftButton&&!M.middleButton)return;let z=M.target;if(!(z.tagName!=="A"&&(z=z.parentElement,!z||z.tagName!=="A")))try{let V=z.dataset.href;V&&e.actionHandler.callback(V,M)}catch(V){ae(V)}finally{M.preventDefault()}}))}r.supportHtml||(t.sanitizer=v=>(r.isTrusted?v.match(/^(<span[^>]+>)|(<\/\s*span>)$/):void 0)?v:"",t.sanitize=!0,t.silent=!0),t.renderer=p;let g=(n=r.value)!==null&&n!==void 0?n:"";g.length>1e5&&(g=`${g.substr(0,1e5)}\u2026`),r.supportThemeIcons&&(g=Fx(g));let y=B_(g,t);if(r.supportThemeIcons&&(y=pu(y).map(w=>typeof w=="string"?w:w.outerHTML).join("")),a.innerHTML=G1(r,y),d(),e.asyncRenderCallback)for(let v of a.getElementsByTagName("img")){let w=i.add(Ve(v,"load",()=>{w.dispose(),e.asyncRenderCallback()}))}return{element:a,dispose:()=>{o=!0,s.cancel(),i.dispose()}}}function G1(r,e){let{config:t,allowedSchemes:n}=j1(r);wf("uponSanitizeAttribute",(o,s)=>{if(s.attrName==="style"||s.attrName==="class"){if(o.tagName==="SPAN"){if(s.attrName==="style"){s.keepAttr=/^(color\:#[0-9a-fA-F]+;)?(background-color\:#[0-9a-fA-F]+;)?$/.test(s.attrValue);return}else if(s.attrName==="class"){s.keepAttr=/^codicon codicon-[a-z\-]+( codicon-modifier-[a-z\-]+)?$/.test(s.attrValue);return}}s.keepAttr=!1;return}});let i=document.createElement("a");wf("afterSanitizeAttributes",o=>{for(let s of["href","src"])o.hasAttribute(s)&&(i.href=o.getAttribute(s),n.includes(i.protocol.replace(/:$/,""))||o.removeAttribute(s))});try{return O_(e,Object.assign(Object.assign({},t),{RETURN_TRUSTED_TYPE:!0}))}finally{Tf("uponSanitizeAttribute"),Tf("afterSanitizeAttributes")}}function j1(r){let e=[ut.http,ut.https,ut.mailto,ut.data,ut.file,ut.vscodeFileResource,ut.vscodeRemote,ut.vscodeRemoteResource];return r.isTrusted&&e.push(ut.command),{config:{ALLOWED_TAGS:["ul","li","p","b","i","code","blockquote","ol","h1","h2","h3","h4","h5","h6","hr","em","pre","table","thead","tbody","tr","th","td","div","del","a","strong","br","img","span"],ALLOWED_ATTR:["href","data-href","target","title","src","alt","class","style","data-code","width","height","align"],ALLOW_UNKNOWN_PROTOCOLS:!0},allowedSchemes:e}}Fi();Ni();ke();Ae();U();Pe();var U1=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},V_=function(r,e){return function(t,n){e(t,n,r)}},$1=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},Ef,Bn=class G_{constructor(e,t,n){this._options=e,this._modeService=t,this._openerService=n,this._onDidRenderAsync=new $,this.onDidRenderAsync=this._onDidRenderAsync.event}dispose(){this._onDidRenderAsync.dispose()}render(e,t,n){if(!e)return{element:document.createElement("span"),dispose:()=>{}};let i=new R;return{element:i.add(W_(e,Object.assign(Object.assign({},this._getRenderOptions(e,i)),t),n)).element,dispose:()=>i.dispose()}}_getRenderOptions(e,t){return{baseUrl:this._options.baseUrl,codeBlockRenderer:(n,i)=>$1(this,void 0,void 0,function*(){var o,s,a,l;let c;n?c=this._modeService.getModeIdForLanguageName(n):this._options.editor&&(c=(o=this._options.editor.getModel())===null||o===void 0?void 0:o.getLanguageId()),c||(c="plaintext"),this._modeService.triggerMode(c);let d=(s=yield tr.getPromise(c))!==null&&s!==void 0?s:void 0,h=document.createElement("span");if(h.innerHTML=(l=(a=G_._ttpTokenizer)===null||a===void 0?void 0:a.createHTML(i,this._modeService.languageIdCodec,d))!==null&&l!==void 0?l:Ym(i,this._modeService.languageIdCodec,d),this._options.editor){let p=this._options.editor.getOption(43);ql.applyFontInfoSlow(h,p)}else this._options.codeBlockFontFamily&&(h.style.fontFamily=this._options.codeBlockFontFamily);return h}),asyncRenderCallback:()=>this._onDidRenderAsync.fire(),actionHandler:{callback:n=>this._openerService.open(n,{fromUserGesture:!0,allowContributedOpeners:!0,allowCommands:e.isTrusted}).catch(ae),disposables:t}}}};Bn._ttpTokenizer=(Ef=window.trustedTypes)===null||Ef===void 0?void 0:Ef.createPolicy("tokenizeToString",{createHTML(r,e,t){return Ym(r,e,t)}});Bn=U1([V_(1,It),V_(2,Vt)],Bn);rt();te();Pe();Ni();mt();at();ke();ce();Pe();function If(r,e,t){let i=Sh.ordered(r).map(o=>Promise.resolve(o.provideHover(r,e,t)).then(s=>s&&K1(s)?s:void 0,s=>{je(s)}));return Promise.all(i).then(Yn)}yn("_executeHoverProvider",(r,e)=>If(r,e,ue.None));function K1(r){let e=typeof r.range!="undefined",t=typeof r.contents!="undefined"&&r.contents&&r.contents.length>0;return e&&t}ne();nr();Fi();var q1=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},kf=function(r,e){return function(t,n){e(t,n,r)}},X1=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},j_=W,Vd=class{constructor(e,t,n){this.owner=e,this.range=t,this.contents=n}isValidForHoverAnchor(e){return e.type===1&&this.range.startColumn<=e.range.startColumn&&this.range.endColumn>=e.range.endColumn}},Yu=class{constructor(e,t,n,i,o){this._editor=e,this._hover=t,this._modeService=n,this._openerService=i,this._configurationService=o}createLoadingMessage(e){return new Vd(this,e.range,[new kn().appendText(u("modesContentHover.loading","Loading..."))])}computeSync(e,t){if(!this._editor.hasModel()||e.type!==1)return[];let n=this._editor.getModel(),i=e.range.startLineNumber,o=n.getLineMaxColumn(i),s=[];for(let d of t){let h=d.range.startLineNumber===i?d.range.startColumn:1,p=d.range.endLineNumber===i?d.range.endColumn:o,g=d.options.hoverMessage;if(!g||Ia(g))continue;let y=new C(e.range.startLineNumber,h,e.range.startLineNumber,p);s.push(new Vd(this,y,Th(g)))}let a=n.getLineLength(i),l=n.getLanguageIdAtPosition(e.range.startLineNumber,e.range.startColumn),c=this._configurationService.getValue("editor.maxTokenizationLineLength",{overrideIdentifier:l});return typeof c=="number"&&a>=c&&s.push(new Vd(this,e.range,[{value:u("too many characters","Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.")}])),s}computeAsync(e,t,n){return X1(this,void 0,void 0,function*(){if(!this._editor.hasModel()||e.type!==1)return Promise.resolve([]);let i=this._editor.getModel();if(!Sh.has(i))return Promise.resolve([]);let o=yield If(i,new q(e.range.startLineNumber,e.range.startColumn),n),s=[];for(let a of o){if(Ia(a.contents))continue;let l=a.range?C.lift(a.range):e.range;s.push(new Vd(this,l,a.contents))}return s})}renderHoverParts(e,t,n){let i=new R;for(let o of e)for(let s of o.contents){if(Ia(s))continue;let a=j_("div.hover-row.markdown-hover"),l=H(a,j_("div.hover-contents")),c=i.add(new Bn({editor:this._editor},this._modeService,this._openerService));i.add(c.onDidRenderAsync(()=>{l.className="hover-contents code-hover-contents",this._hover.onContentsChanged()}));let d=i.add(c.render(s));l.appendChild(d.element),t.appendChild(a)}return i}};Yu=q1([kf(2,It),kf(3,Vt),kf(4,hn)],Yu);Ne();mt();Oe();ke();U();Nn();te();Tn();U();ce();Bt();rt();te();Be();mt();Ae();U();eS();Ze();Ht();te();jl();Ke();var U_=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},$_=function(r,e){return function(t,n){e(t,n,r)}},Lf=class{constructor(e,t,n){this.marker=e,this.index=t,this.total=n}},Pf=class K_{constructor(e,t){this._markerService=t,this._onDidChange=new $,this.onDidChange=this._onDidChange.event,this._dispoables=new R,this._markers=[],this._nextIdx=-1,Ce.isUri(e)?this._resourceFilter=i=>i.toString()===e.toString():e&&(this._resourceFilter=e);let n=()=>{this._markers=this._markerService.read({resource:Ce.isUri(e)?e:void 0,severities:Nt.Error|Nt.Warning|Nt.Info}),typeof e=="function"&&(this._markers=this._markers.filter(i=>this._resourceFilter(i.resource))),this._markers.sort(K_._compareMarker)};n(),this._dispoables.add(t.onMarkerChanged(i=>{(!this._resourceFilter||i.some(o=>this._resourceFilter(o)))&&(n(),this._nextIdx=-1,this._onDidChange.fire())}))}dispose(){this._dispoables.dispose(),this._onDidChange.dispose()}matches(e){return!this._resourceFilter&&!e?!0:!this._resourceFilter||!e?!1:this._resourceFilter(e)}get selected(){let e=this._markers[this._nextIdx];return e&&new Lf(e,this._nextIdx+1,this._markers.length)}_initIdx(e,t,n){let i=!1,o=this._markers.findIndex(s=>s.resource.toString()===e.uri.toString());o<0&&(o=_h(this._markers,{resource:e.uri},(s,a)=>fm(s.resource.toString(),a.resource.toString())),o<0&&(o=~o));for(let s=o;s<this._markers.length;s++){let a=C.lift(this._markers[s]);if(a.isEmpty()){let l=e.getWordAtPosition(a.getStartPosition());l&&(a=new C(a.startLineNumber,l.startColumn,a.startLineNumber,l.endColumn))}if(t&&(a.containsPosition(t)||t.isBeforeOrEqual(a.getStartPosition()))){this._nextIdx=s,i=!0;break}if(this._markers[s].resource.toString()!==e.uri.toString())break}i||(this._nextIdx=n?0:this._markers.length-1),this._nextIdx<0&&(this._nextIdx=this._markers.length-1)}resetIndex(){this._nextIdx=-1}move(e,t,n){if(this._markers.length===0)return!1;let i=this._nextIdx;return this._nextIdx===-1?this._initIdx(t,n,e):e?this._nextIdx=(this._nextIdx+1)%this._markers.length:e||(this._nextIdx=(this._nextIdx-1+this._markers.length)%this._markers.length),i!==this._nextIdx}find(e,t){let n=this._markers.findIndex(i=>i.resource.toString()===e.toString());if(!(n<0)){for(;n<this._markers.length;n++)if(C.containsPosition(this._markers[n],t))return new Lf(this._markers[n],n+1,this._markers.length)}}static _compareMarker(e,t){let n=fm(e.resource.toString(),t.resource.toString());return n===0&&(n=Nt.compare(e.severity,t.severity)),n===0&&(n=C.compareRangesUsingStarts(e,t)),n}};Pf=U_([$_(1,ld)],Pf);var Df=Pi("IMarkerNavigationService"),Mf=class{constructor(e){this._markerService=e,this._provider=new sh}getMarkerList(e){for(let t of this._provider){let n=t.getMarkerList(e);if(n)return n}return new Pf(e,this._markerService)}};Mf=U_([$_(0,ld)],Mf);zi(Df,Mf,!0);ne();un();Te();Ke();Ne();mt();fi();Ae();U();Nn();Ze();te();ne();un();Te();Ke();Fi();Tn();Je();Me();var Zu;(function(r){function e(t){switch(t){case Xr.Ignore:return"severity-ignore "+X.info.classNames;case Xr.Info:return X.info.classNames;case Xr.Warning:return X.warning.classNames;case Xr.Error:return X.error.classNames;default:return""}}r.className=e})(Zu||(Zu={}));ye((r,e)=>{let t=r.getColor(lx);if(t){let o=X.error.cssSelector;e.addRule(`
			.monaco-editor .zone-widget ${o},
			.markers-panel .marker-icon${o},
			.text-search-provider-messages .providerMessage ${o},
			.extensions-viewlet > .extensions ${o} {
				color: ${t};
			}
		`)}let n=r.getColor(dx);if(n){let o=X.warning.cssSelector;e.addRule(`
			.monaco-editor .zone-widget ${o},
			.markers-panel .marker-icon${o},
			.extensions-viewlet > .extensions ${o},
			.extension-editor ${o},
			.text-search-provider-messages .providerMessage ${o},
			.preferences-editor ${o} {
				color: ${n};
			}
		`)}let i=r.getColor(cx);if(i){let o=X.info.cssSelector;e.addRule(`
			.monaco-editor .zone-widget ${o},
			.markers-panel .marker-icon${o},
			.extensions-viewlet > .extensions ${o},
			.text-search-provider-messages .providerMessage ${o},
			.extension-editor ${o} {
				color: ${i};
			}
		`)}});Je();Me();var Y1=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},Fa=function(r,e){return function(t,n){e(t,n,r)}},Z_=class{constructor(e,t,n,i,o){this._openerService=i,this._labelService=o,this._lines=0,this._longestLineLength=0,this._relatedDiagnostics=new WeakMap,this._disposables=new R,this._editor=t;let s=document.createElement("div");s.className="descriptioncontainer",this._messageBlock=document.createElement("div"),this._messageBlock.classList.add("message"),this._messageBlock.setAttribute("aria-live","assertive"),this._messageBlock.setAttribute("role","alert"),s.appendChild(this._messageBlock),this._relatedBlock=document.createElement("div"),s.appendChild(this._relatedBlock),this._disposables.add(fn(this._relatedBlock,"click",a=>{a.preventDefault();let l=this._relatedDiagnostics.get(a.target);l&&n(l)})),this._scrollable=new yx(s,{horizontal:1,vertical:1,useShadows:!1,horizontalScrollbarSize:3,verticalScrollbarSize:3}),e.appendChild(this._scrollable.getDomNode()),this._disposables.add(this._scrollable.onScroll(a=>{s.style.left=`-${a.scrollLeft}px`,s.style.top=`-${a.scrollTop}px`})),this._disposables.add(this._scrollable)}dispose(){ht(this._disposables)}update(e){let{source:t,message:n,relatedInformation:i,code:o}=e,s=((t==null?void 0:t.length)||0)+2;o&&(typeof o=="string"?s+=o.length:s+=o.value.length);let a=Ur(n);this._lines=a.length,this._longestLineLength=0;for(let p of a)this._longestLineLength=Math.max(p.length+s,this._longestLineLength);qn(this._messageBlock),this._messageBlock.setAttribute("aria-label",this.getAriaLabel(e)),this._editor.applyFontInfo(this._messageBlock);let l=this._messageBlock;for(let p of a)l=document.createElement("div"),l.innerText=p,p===""&&(l.style.height=this._messageBlock.style.lineHeight),this._messageBlock.appendChild(l);if(t||o){let p=document.createElement("span");if(p.classList.add("details"),l.appendChild(p),t){let g=document.createElement("span");g.innerText=t,g.classList.add("source"),p.appendChild(g)}if(o)if(typeof o=="string"){let g=document.createElement("span");g.innerText=`(${o})`,g.classList.add("code"),p.appendChild(g)}else{this._codeLink=W("a.code-link"),this._codeLink.setAttribute("href",`${o.target.toString()}`),this._codeLink.onclick=y=>{this._openerService.open(o.target,{allowCommands:!0}),y.preventDefault(),y.stopPropagation()};let g=H(this._codeLink,W("span"));g.innerText=o.value,p.appendChild(this._codeLink)}}if(qn(this._relatedBlock),this._editor.applyFontInfo(this._relatedBlock),Tt(i)){let p=this._relatedBlock.appendChild(document.createElement("div"));p.style.paddingTop=`${Math.floor(this._editor.getOption(58)*.66)}px`,this._lines+=1;for(let g of i){let y=document.createElement("div"),v=document.createElement("a");v.classList.add("filename"),v.innerText=`${Ou(g.resource)}(${g.startLineNumber}, ${g.startColumn}): `,v.title=this._labelService.getUriLabel(g.resource),this._relatedDiagnostics.set(v,g);let w=document.createElement("span");w.innerText=g.message,y.appendChild(v),y.appendChild(w),this._lines+=1,p.appendChild(y)}}let c=this._editor.getOption(43),d=Math.ceil(c.typicalFullwidthCharacterWidth*this._longestLineLength*.75),h=c.lineHeight*this._lines;this._scrollable.setScrollDimensions({scrollWidth:d,scrollHeight:h})}layout(e,t){this._scrollable.getDomNode().style.height=`${e}px`,this._scrollable.getDomNode().style.width=`${t}px`,this._scrollable.setScrollDimensions({width:t,height:e})}getHeightInLines(){return Math.min(17,this._lines)}getAriaLabel(e){let t="";switch(e.severity){case Nt.Error:t=u("Error","Error");break;case Nt.Warning:t=u("Warning","Warning");break;case Nt.Info:t=u("Info","Info");break;case Nt.Hint:t=u("Hint","Hint");break}let n=u("marker aria","{0} at {1}. ",t,e.startLineNumber+":"+e.startColumn),i=this._editor.getModel();return i&&e.startLineNumber<=i.getLineCount()&&e.startLineNumber>=1&&(n=`${i.getLineContent(e.startLineNumber)}, ${n}`),n}},gs=class J_ extends Pa{constructor(e,t,n,i,o,s,a){super(e,{showArrow:!0,showFrame:!0,isAccessible:!0,frameWidth:1},o);this._themeService=t,this._openerService=n,this._menuService=i,this._contextKeyService=s,this._labelService=a,this._callOnDispose=new R,this._onDidSelectRelatedInformation=new $,this.onDidSelectRelatedInformation=this._onDidSelectRelatedInformation.event,this._severity=Nt.Warning,this._backgroundColor=fe.white,this._applyTheme(t.getColorTheme()),this._callOnDispose.add(t.onDidColorThemeChange(this._applyTheme.bind(this))),this.create()}_applyTheme(e){this._backgroundColor=e.getColor(eP);let t=Rf,n=Z1;this._severity===Nt.Warning?(t=Ff,n=J1):this._severity===Nt.Info&&(t=Af,n=Q1);let i=e.getColor(t),o=e.getColor(n);this.style({arrowColor:i,frameColor:i,headerBackgroundColor:o,primaryHeadingColor:e.getColor(Nu),secondaryHeadingColor:e.getColor(zu)})}_applyStyles(){this._parentContainer&&(this._parentContainer.style.backgroundColor=this._backgroundColor?this._backgroundColor.toString():""),super._applyStyles()}dispose(){this._callOnDispose.dispose(),super.dispose()}_fillHead(e){super._fillHead(e),this._disposables.add(this._actionbarWidget.actionRunner.onBeforeRun(i=>this.editor.focus()));let t=[],n=this._menuService.createMenu(J_.TitleMenu,this._contextKeyService);GC(n,void 0,t),this._actionbarWidget.push(t,{label:!1,icon:!0,index:0}),n.dispose()}_fillTitleIcon(e){this._icon=H(e,W(""))}_fillBody(e){this._parentContainer=e,e.classList.add("marker-widget"),this._parentContainer.tabIndex=0,this._parentContainer.setAttribute("role","tooltip"),this._container=document.createElement("div"),e.appendChild(this._container),this._message=new Z_(this._container,this.editor,t=>this._onDidSelectRelatedInformation.fire(t),this._openerService,this._labelService),this._disposables.add(this._message)}show(){throw new Error("call showAtMarker")}showAtMarker(e,t,n){this._container.classList.remove("stale"),this._message.update(e),this._severity=e.severity,this._applyTheme(this._themeService.getColorTheme());let i=C.lift(e),o=this.editor.getPosition(),s=o&&i.containsPosition(o)?o:i.getStartPosition();super.show(s,this.computeRequiredHeight());let a=this.editor.getModel();if(a){let l=n>1?u("problems","{0} of {1} problems",t,n):u("change","{0} of {1} problem",t,n);this.setTitle(cn(a.uri),l)}this._icon.className=`codicon ${Zu.className(Nt.toSeverity(this._severity))}`,this.editor.revealPositionNearTop(s,0),this.editor.focus()}updateMarker(e){this._container.classList.remove("stale"),this._message.update(e)}showStale(){this._container.classList.add("stale"),this._relayout()}_doLayoutBody(e,t){super._doLayoutBody(e,t),this._heightInPixel=e,this._message.layout(e,t),this._container.style.height=`${e}px`}_onWidth(e){this._message.layout(this._heightInPixel,e)}_relayout(){super._relayout(this.computeRequiredHeight())}computeRequiredHeight(){return 3+this._message.getHeightInLines()}};gs.TitleMenu=new oe("gotoErrorTitleMenu");gs=Y1([Fa(1,St),Fa(2,Vt),Fa(3,Hi),Fa(4,he),Fa(5,Q),Fa(6,mr)],gs);var q_=eu(Rv,Fv),X_=eu(Av,Nv),Y_=eu(Yr,zv),Rf=Y("editorMarkerNavigationError.background",{dark:q_,light:q_,hc:Jn},u("editorMarkerNavigationError","Editor marker navigation widget error color.")),Z1=Y("editorMarkerNavigationError.headerBackground",{dark:zn(Rf,.1),light:zn(Rf,.1),hc:null},u("editorMarkerNavigationErrorHeaderBackground","Editor marker navigation widget error heading background.")),Ff=Y("editorMarkerNavigationWarning.background",{dark:X_,light:X_,hc:Jn},u("editorMarkerNavigationWarning","Editor marker navigation widget warning color.")),J1=Y("editorMarkerNavigationWarning.headerBackground",{dark:zn(Ff,.1),light:zn(Ff,.1),hc:"#0C141F"},u("editorMarkerNavigationWarningBackground","Editor marker navigation widget warning heading background.")),Af=Y("editorMarkerNavigationInfo.background",{dark:Y_,light:Y_,hc:Jn},u("editorMarkerNavigationInfo","Editor marker navigation widget info color.")),Q1=Y("editorMarkerNavigationInfo.headerBackground",{dark:zn(Af,.1),light:zn(Af,.1),hc:null},u("editorMarkerNavigationInfoHeaderBackground","Editor marker navigation widget info heading background.")),eP=Y("editorMarkerNavigation.background",{dark:fa,light:fa,hc:fa},u("editorMarkerNavigationBackground","Editor marker navigation widget background."));ye((r,e)=>{let t=r.getColor(Bi);t&&e.addRule(`.monaco-editor .marker-widget a.code-link span { color: ${t}; }`);let n=r.getColor(Wi);n&&e.addRule(`.monaco-editor .marker-widget a.code-link span:hover { color: ${n}; }`)});var tP=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},Ju=function(r,e){return function(t,n){e(t,n,r)}},Q_=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},Lo=class Qu{constructor(e,t,n,i,o){this._markerNavigationService=t,this._contextKeyService=n,this._editorService=i,this._instantiationService=o,this._sessionDispoables=new R,this._editor=e,this._widgetVisible=nw.bindTo(this._contextKeyService)}static get(e){return e.getContribution(Qu.ID)}dispose(){this._cleanUp(),this._sessionDispoables.dispose()}_cleanUp(){this._widgetVisible.reset(),this._sessionDispoables.clear(),this._widget=void 0,this._model=void 0}_getOrCreateModel(e){if(this._model&&this._model.matches(e))return this._model;let t=!1;return this._model&&(t=!0,this._cleanUp()),this._model=this._markerNavigationService.getMarkerList(e),t&&this._model.move(!0,this._editor.getModel(),this._editor.getPosition()),this._widget=this._instantiationService.createInstance(gs,this._editor),this._widget.onDidClose(()=>this.close(),this,this._sessionDispoables),this._widgetVisible.set(!0),this._sessionDispoables.add(this._model),this._sessionDispoables.add(this._widget),this._sessionDispoables.add(this._editor.onDidChangeCursorPosition(n=>{var i,o,s;(!(!((i=this._model)===null||i===void 0)&&i.selected)||!C.containsPosition((o=this._model)===null||o===void 0?void 0:o.selected.marker,n.position))&&((s=this._model)===null||s===void 0||s.resetIndex())})),this._sessionDispoables.add(this._model.onDidChange(()=>{if(!this._widget||!this._widget.position||!this._model)return;let n=this._model.find(this._editor.getModel().uri,this._widget.position);n?this._widget.updateMarker(n.marker):this._widget.showStale()})),this._sessionDispoables.add(this._widget.onDidSelectRelatedInformation(n=>{this._editorService.openCodeEditor({resource:n.resource,options:{pinned:!0,revealIfOpened:!0,selection:C.lift(n).collapseToStart()}},this._editor),this.close(!1)})),this._sessionDispoables.add(this._editor.onDidChangeModel(()=>this._cleanUp())),this._model}close(e=!0){this._cleanUp(),e&&this._editor.focus()}showAtMarker(e){if(this._editor.hasModel()){let t=this._getOrCreateModel(this._editor.getModel().uri);t.resetIndex(),t.move(!0,this._editor.getModel(),new q(e.startLineNumber,e.startColumn)),t.selected&&this._widget.showAtMarker(t.selected.marker,t.selected.index,t.selected.total)}}nagivate(e,t){return Q_(this,void 0,void 0,function*(){if(this._editor.hasModel()){let n=this._getOrCreateModel(t?void 0:this._editor.getModel().uri);if(n.move(e,this._editor.getModel(),this._editor.getPosition()),!n.selected)return;if(n.selected.marker.resource.toString()!==this._editor.getModel().uri.toString()){this._cleanUp();let i=yield this._editorService.openCodeEditor({resource:n.selected.marker.resource,options:{pinned:!1,revealIfOpened:!0,selectionRevealType:2,selection:n.selected.marker}},this._editor);i&&(Qu.get(i).close(),Qu.get(i).nagivate(e,t))}else this._widget.showAtMarker(n.selected.marker,n.selected.index,n.selected.total)}})}};Lo.ID="editor.contrib.markerController";Lo=tP([Ju(1,Df),Ju(2,Q),Ju(3,Ee),Ju(4,he)],Lo);var Gd=class extends N{constructor(e,t,n){super(n);this._next=e,this._multiFile=t}run(e,t){return Q_(this,void 0,void 0,function*(){t.hasModel()&&Lo.get(t).nagivate(this._next,this._multiFile)})}},Ci=class extends Gd{constructor(){super(!0,!1,{id:Ci.ID,label:Ci.LABEL,alias:"Go to Next Problem (Error, Warning, Info)",precondition:void 0,kbOpts:{kbExpr:x.focus,primary:578,weight:100},menuOpts:{menuId:gs.TitleMenu,title:Ci.LABEL,icon:At("marker-navigation-next",X.arrowDown,u("nextMarkerIcon","Icon for goto next marker.")),group:"navigation",order:1}})}};Ci.ID="editor.action.marker.next";Ci.LABEL=u("markerAction.next.label","Go to Next Problem (Error, Warning, Info)");var fs=class extends Gd{constructor(){super(!1,!1,{id:fs.ID,label:fs.LABEL,alias:"Go to Previous Problem (Error, Warning, Info)",precondition:void 0,kbOpts:{kbExpr:x.focus,primary:1602,weight:100},menuOpts:{menuId:gs.TitleMenu,title:Ci.LABEL,icon:At("marker-navigation-previous",X.arrowUp,u("previousMarkerIcon","Icon for goto previous marker.")),group:"navigation",order:2}})}};fs.ID="editor.action.marker.prev";fs.LABEL=u("markerAction.previous.label","Go to Previous Problem (Error, Warning, Info)");var ew=class extends Gd{constructor(){super(!0,!0,{id:"editor.action.marker.nextInFiles",label:u("markerAction.nextInFiles.label","Go to Next Problem in Files (Error, Warning, Info)"),alias:"Go to Next Problem in Files (Error, Warning, Info)",precondition:void 0,kbOpts:{kbExpr:x.focus,primary:66,weight:100},menuOpts:{menuId:oe.MenubarGoMenu,title:u({key:"miGotoNextProblem",comment:["&& denotes a mnemonic"]},"Next &&Problem"),group:"6_problem_nav",order:1}})}},tw=class extends Gd{constructor(){super(!1,!0,{id:"editor.action.marker.prevInFiles",label:u("markerAction.previousInFiles.label","Go to Previous Problem in Files (Error, Warning, Info)"),alias:"Go to Previous Problem in Files (Error, Warning, Info)",precondition:void 0,kbOpts:{kbExpr:x.focus,primary:1090,weight:100},menuOpts:{menuId:oe.MenubarGoMenu,title:u({key:"miGotoPreviousProblem",comment:["&& denotes a mnemonic"]},"Previous &&Problem"),group:"6_problem_nav",order:2}})}};J(Lo.ID,Lo);I(Ci);I(fs);I(ew);I(tw);var nw=new de("markersNavigationVisible",!1),nP=it.bindToContribution(Lo.get);K(new nP({id:"closeMarkersNavigation",precondition:nw,handler:r=>r.close(),kbOpts:{weight:100+50,kbExpr:x.focus,primary:9,secondary:[1033]}}));ne();Fi();Qr();Je();Me();var iP=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},iw=function(r,e){return function(t,n){e(t,n,r)}},ri=W,rw=class{constructor(e,t,n){this.owner=e,this.range=t,this.marker=n}isValidForHoverAnchor(e){return e.type===1&&this.range.startColumn<=e.range.startColumn&&this.range.endColumn>=e.range.endColumn}},ow={type:1,filter:{include:pe.QuickFix}},ep=class{constructor(e,t,n,i){this._editor=e,this._hover=t,this._markerDecorationsService=n,this._openerService=i,this.recentMarkerCodeActionsInfo=void 0}computeSync(e,t){if(!this._editor.hasModel()||e.type!==1)return[];let n=this._editor.getModel(),i=e.range.startLineNumber,o=n.getLineMaxColumn(i),s=[];for(let a of t){let l=a.range.startLineNumber===i?a.range.startColumn:1,c=a.range.endLineNumber===i?a.range.endColumn:o,d=this._markerDecorationsService.getMarker(n.uri,a);if(!d)continue;let h=new C(e.range.startLineNumber,l,e.range.startLineNumber,c);s.push(new rw(this,h,d))}return s}renderHoverParts(e,t,n){if(!e.length)return B.None;let i=new R;e.forEach(s=>t.appendChild(this.renderMarkerHover(s,i)));let o=e.length===1?e[0]:e.sort((s,a)=>Nt.compare(s.marker.severity,a.marker.severity))[0];return this.renderMarkerStatusbar(o,n,i),i}renderMarkerHover(e,t){let n=ri("div.hover-row"),i=H(n,ri("div.marker.hover-contents")),{source:o,message:s,code:a,relatedInformation:l}=e.marker;this._editor.applyFontInfo(i);let c=H(i,ri("span"));if(c.style.whiteSpace="pre-wrap",c.innerText=s,o||a)if(a&&typeof a!="string"){let d=ri("span");if(o){let y=H(d,ri("span"));y.innerText=o}let h=H(d,ri("a.code-link"));h.setAttribute("href",a.target.toString()),t.add(Ve(h,"click",y=>{this._openerService.open(a.target,{allowCommands:!0}),y.preventDefault(),y.stopPropagation()}));let p=H(h,ri("span"));p.innerText=a.value;let g=H(i,d);g.style.opacity="0.6",g.style.paddingLeft="6px"}else{let d=H(i,ri("span"));d.style.opacity="0.6",d.style.paddingLeft="6px",d.innerText=o&&a?`${o}(${a})`:o||`(${a})`}if(Tt(l))for(let{message:d,resource:h,startLineNumber:p,startColumn:g}of l){let y=H(i,ri("div"));y.style.marginTop="8px";let v=H(y,ri("a"));v.innerText=`${cn(h)}(${p}, ${g}): `,v.style.cursor="pointer",t.add(Ve(v,"click",F=>{F.stopPropagation(),F.preventDefault(),this._openerService&&this._openerService.open(h,{fromUserGesture:!0,editorOptions:{selection:{startLineNumber:p,startColumn:g}}}).catch(ae)}));let w=H(y,ri("span"));w.innerText=d,this._editor.applyFontInfo(w)}return n}renderMarkerStatusbar(e,t,n){if((e.marker.severity===Nt.Error||e.marker.severity===Nt.Warning||e.marker.severity===Nt.Info)&&t.addAction({label:u("view problem","View Problem"),commandId:Ci.ID,run:()=>{this._hover.hide(),Lo.get(this._editor).showAtMarker(e.marker),this._editor.focus()}}),!this._editor.getOption(80)){let i=t.append(ri("div"));this.recentMarkerCodeActionsInfo&&(tg.makeKey(this.recentMarkerCodeActionsInfo.marker)===tg.makeKey(e.marker)?this.recentMarkerCodeActionsInfo.hasCodeActions||(i.textContent=u("noQuickFixes","No quick fixes available")):this.recentMarkerCodeActionsInfo=void 0);let o=this.recentMarkerCodeActionsInfo&&!this.recentMarkerCodeActionsInfo.hasCodeActions?B.None:n.add(Gr(()=>i.textContent=u("checkingForQuickFixes","Checking for quick fixes..."),200));i.textContent||(i.textContent=String.fromCharCode(160));let s=this.getCodeActions(e.marker);n.add(We(()=>s.cancel())),s.then(a=>{if(o.dispose(),this.recentMarkerCodeActionsInfo={marker:e.marker,hasCodeActions:a.validActions.length>0},!this.recentMarkerCodeActionsInfo.hasCodeActions){a.dispose(),i.textContent=u("noQuickFixes","No quick fixes available");return}i.style.display="none";let l=!1;n.add(We(()=>{l||a.dispose()})),t.addAction({label:u("quick fixes","Quick Fix..."),commandId:To.Id,run:c=>{l=!0;let d=wo.get(this._editor),h=Jt(c);this._hover.hide(),d.showCodeActions(ow,a,{x:h.left+6,y:h.top+h.height+6})}})},ae)}}getCodeActions(e){return Le(t=>md(this._editor.getModel(),new C(e.startLineNumber,e.startColumn,e.endLineNumber,e.endColumn),ow,Vi.None,t))}};ep=iP([iw(2,Sv),iw(3,Vt)],ep);ye((r,e)=>{let t=r.getColor(Bi);t&&e.addRule(`.monaco-hover .hover-contents a.code-link span { color: ${t}; }`);let n=r.getColor(Wi);n&&e.addRule(`.monaco-hover .hover-contents a.code-link span:hover { color: ${n}; }`)});Ne();U();te();Ni();U();Ze();ce();JL();Be();var tp="editor.action.inlineSuggest.commit";Ae();U();rt();Pe();Oe();at();ke();Ae();U();Ze();ce();fo();te();Pe();Ae();U();te();var jd=class{constructor(e,t,n=0){this.lineNumber=e,this.parts=t,this.additionalReservedLineCount=n}renderForScreenReader(e){if(this.parts.length===0)return"";let t=this.parts[this.parts.length-1],n=e.substr(0,t.column-1);return oP(n,this.parts.map(o=>({range:{startLineNumber:1,endLineNumber:1,startColumn:o.column,endColumn:o.column},text:o.lines.join(`
`)}))).substring(this.parts[0].column-1)}},sw=class{constructor(e){this.lineStartOffsetByLineIdx=[],this.lineStartOffsetByLineIdx.push(0);for(let t=0;t<e.length;t++)e.charAt(t)===`
`&&this.lineStartOffsetByLineIdx.push(t+1)}getOffset(e){return this.lineStartOffsetByLineIdx[e.lineNumber-1]+e.column-1}};function oP(r,e){let t=new sw(r),n=e.map(i=>{let o=C.lift(i.range);return{startOffset:t.getOffset(o.getStartPosition()),endOffset:t.getOffset(o.getEndPosition()),text:i.text}});n.sort((i,o)=>o.startOffset-i.startOffset);for(let i of n)r=r.substring(0,i.startOffset)+i.text+r.substring(i.endOffset);return r}var np=class{constructor(e,t,n){this.column=e,this.lines=t,this.preview=n}},Ud=class extends B{constructor(e){super();this.editor=e,this._expanded=void 0,this.onDidChangeEmitter=new $,this.onDidChange=this.onDidChangeEmitter.event,this._register(e.onDidChangeConfiguration(t=>{t.hasChanged(105)&&this._expanded===void 0&&this.onDidChangeEmitter.fire()}))}setExpanded(e){this._expanded=!0,this.onDidChangeEmitter.fire()}};bt();Ze();te();function aw(r,e){return r===e?!0:!r||!e?!1:r.range.equalsRange(e.range)&&r.text===e.text&&r.command===e.command}function ip(r,e,t,n,i=0){if(r.range.startLineNumber!==r.range.endLineNumber)return;let o=e.getLineContent(r.range.startLineNumber),s=st(o).length;if(r.range.startColumn-1<=s){let g=st(r.text).length,y=o.substring(r.range.startColumn-1,s),v=C.fromPositions(r.range.getStartPosition().delta(0,y.length),r.range.getEndPosition()),w=r.text.startsWith(y)?r.text.substring(y.length):r.text.substring(g);r={range:v,text:w,command:r.command}}let l=e.getValueInRange(r.range),c=rP(l,r.text);if(!c)return;let d=r.range.startLineNumber,h=new Array;if(t==="prefix"){let g=c.filter(y=>y.originalLength===0);if(g.length>1||g.length===1&&g[0].originalStart!==l.length)return}let p=r.text.length-i;for(let g of c){let y=r.range.startColumn+g.originalStart+g.originalLength;if(t==="subwordSmart"&&n&&n.lineNumber===r.range.startLineNumber&&y<n.column||g.originalLength>0)return;if(g.modifiedLength===0)continue;let v=g.modifiedStart+g.modifiedLength,w=Math.max(g.modifiedStart,Math.min(v,p)),F=r.text.substring(g.modifiedStart,w),M=r.text.substring(w,Math.max(g.modifiedStart,v));if(F.length>0){let z=Ur(F);h.push(new np(y,z,!1))}if(M.length>0){let z=Ur(M);h.push(new np(y,z,!0))}}return new jd(d,h,0)}var Xi;function rP(r,e){if((Xi==null?void 0:Xi.originalValue)===r&&(Xi==null?void 0:Xi.newValue)===e)return Xi==null?void 0:Xi.changes;{let t=sP(r,e);return Xi={originalValue:r,newValue:e,changes:t},t}}function sP(r,e){if(r.length>5e3||e.length>5e3)return;function t(l){let c=0;for(let d=0,h=l.length;d<h;d++){let p=l.charCodeAt(d);p>c&&(c=p)}return c}let n=Math.max(t(r),t(e));function i(l){if(l<0)throw new Error("unexpected");return n+l+1}function o(l){let c=0,d=0,h=new Int32Array(l.length);for(let p=0,g=l.length;p<g;p++){let y=d*100+c;l[p]==="("?(h[p]=i(2*y),c++):l[p]===")"?(h[p]=i(2*y+1),c===1&&d++,c=Math.max(c-1,0)):h[p]=l.charCodeAt(p)}return h}let s=o(r),a=o(e);return new rv({getElements:()=>s},{getElements:()=>a}).ComputeDiff(!1).changes}var aP=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},lP=function(r,e){return function(t,n){e(t,n,r)}},Po=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},op=class extends B{constructor(e,t,n){super();this.editor=e,this.cache=t,this.commandService=n,this.onDidChangeEmitter=new $,this.onDidChange=this.onDidChangeEmitter.event,this.completionSession=this._register(new Ye),this.active=!1,this.disposed=!1,this._register(n.onDidExecuteCommand(i=>{new Set([xv.id,Cv.id,wa.Tab.id,wa.DeleteLeft.id,wa.DeleteRight.id,tp,"acceptSelectedSuggestion"]).has(i.commandId)&&e.hasTextFocus()&&this.handleUserInput()})),this._register(this.editor.onDidType(i=>{this.handleUserInput()})),this._register(this.editor.onDidChangeCursorPosition(i=>{this.session&&!this.session.isValid&&this.hide()})),this._register(We(()=>{this.disposed=!0})),this._register(this.editor.onDidBlurEditorWidget(()=>{this.hide()}))}handleUserInput(){this.session&&!this.session.isValid&&this.hide(),setTimeout(()=>{this.disposed||this.startSessionIfTriggered()},0)}get session(){return this.completionSession.value}get ghostText(){var e;return(e=this.session)===null||e===void 0?void 0:e.ghostText}get minReservedLineCount(){return this.session?this.session.minReservedLineCount:0}setExpanded(e){var t;(t=this.session)===null||t===void 0||t.setExpanded(e)}setActive(e){var t;this.active=e,e&&((t=this.session)===null||t===void 0||t.scheduleAutomaticUpdate())}startSessionIfTriggered(){!this.editor.getOption(54).enabled||this.session&&this.session.isValid||this.trigger(En.Automatic)}trigger(e){if(this.completionSession.value){e===En.Explicit&&this.completionSession.value.ensureUpdateWithExplicitContext();return}this.completionSession.value=new lw(this.editor,this.editor.getPosition(),()=>this.active,this.commandService,this.cache,e),this.completionSession.value.takeOwnership(this.completionSession.value.onDidChange(()=>{this.onDidChangeEmitter.fire()}))}hide(){this.completionSession.clear(),this.onDidChangeEmitter.fire()}commitCurrentSuggestion(){var e;(e=this.session)===null||e===void 0||e.commitCurrentCompletion()}showNext(){var e;(e=this.session)===null||e===void 0||e.showNextInlineCompletion()}showPrevious(){var e;(e=this.session)===null||e===void 0||e.showPreviousInlineCompletion()}hasMultipleInlineCompletions(){var e;return Po(this,void 0,void 0,function*(){let t=yield(e=this.session)===null||e===void 0?void 0:e.hasMultipleInlineCompletions();return t!==void 0?t:!1})}};op=aP([lP(2,pt)],op);var lw=class extends Ud{constructor(e,t,n,i,o,s){super(e);this.triggerPosition=t,this.shouldUpdate=n,this.commandService=i,this.cache=o,this.initialTriggerKind=s,this.minReservedLineCount=0,this.updateOperation=this._register(new Ye),this.updateSoon=this._register(new Xe(()=>{let l=this.initialTriggerKind;return this.initialTriggerKind=En.Automatic,this.update(l)},50)),this.currentlySelectedCompletionId=void 0;let a;this._register(this.onDidChange(()=>{let l=this.currentCompletion;if(l&&l.sourceInlineCompletion!==a){a=l.sourceInlineCompletion;let c=l.sourceProvider;c.handleItemDidShow&&c.handleItemDidShow(l.sourceInlineCompletions,a)}})),this._register(We(()=>{this.cache.clear()})),this._register(this.editor.onDidChangeCursorPosition(l=>{this.cache.value&&this.onDidChangeEmitter.fire()})),this._register(this.editor.onDidChangeModelContent(l=>{this.scheduleAutomaticUpdate()})),this._register(Em.onDidChange(()=>{this.updateSoon.schedule()})),this.scheduleAutomaticUpdate()}fixAndGetIndexOfCurrentSelection(){if(!this.currentlySelectedCompletionId||!this.cache.value||this.cache.value.completions.length===0)return 0;let e=this.cache.value.completions.findIndex(t=>t.semanticId===this.currentlySelectedCompletionId);return e===-1?(this.currentlySelectedCompletionId=void 0,0):e}get currentCachedCompletion(){if(!!this.cache.value)return this.cache.value.completions[this.fixAndGetIndexOfCurrentSelection()]}showNextInlineCompletion(){var e;return Po(this,void 0,void 0,function*(){yield this.ensureUpdateWithExplicitContext();let t=((e=this.cache.value)===null||e===void 0?void 0:e.completions)||[];if(t.length>0){let n=(this.fixAndGetIndexOfCurrentSelection()+1)%t.length;this.currentlySelectedCompletionId=t[n].semanticId}else this.currentlySelectedCompletionId=void 0;this.onDidChangeEmitter.fire()})}showPreviousInlineCompletion(){var e;return Po(this,void 0,void 0,function*(){yield this.ensureUpdateWithExplicitContext();let t=((e=this.cache.value)===null||e===void 0?void 0:e.completions)||[];if(t.length>0){let n=(this.fixAndGetIndexOfCurrentSelection()+t.length-1)%t.length;this.currentlySelectedCompletionId=t[n].semanticId}else this.currentlySelectedCompletionId=void 0;this.onDidChangeEmitter.fire()})}ensureUpdateWithExplicitContext(){var e;return Po(this,void 0,void 0,function*(){this.updateOperation.value?this.updateOperation.value.triggerKind===En.Explicit?yield this.updateOperation.value.promise:yield this.update(En.Explicit):((e=this.cache.value)===null||e===void 0?void 0:e.triggerKind)!==En.Explicit&&(yield this.update(En.Explicit))})}hasMultipleInlineCompletions(){var e;return Po(this,void 0,void 0,function*(){return yield this.ensureUpdateWithExplicitContext(),(((e=this.cache.value)===null||e===void 0?void 0:e.completions.length)||0)>1})}get ghostText(){let e=this.currentCompletion,t=this.editor.getOptions().get(54).mode;return e?ip(e,this.editor.getModel(),t,this.editor.getPosition()):void 0}get currentCompletion(){let e=this.currentCachedCompletion;if(!!e)return e.toLiveInlineCompletion()}get isValid(){return this.editor.getPosition().lineNumber===this.triggerPosition.lineNumber}scheduleAutomaticUpdate(){this.updateOperation.clear(),this.updateSoon.schedule()}update(e){return Po(this,void 0,void 0,function*(){if(!this.shouldUpdate())return;let t=this.editor.getPosition(),n=Le(o=>Po(this,void 0,void 0,function*(){let s;try{s=yield zf(t,this.editor.getModel(),{triggerKind:e,selectedSuggestionInfo:void 0},o)}catch(a){ae(a);return}o.isCancellationRequested||(this.cache.setValue(this.editor,s,e),this.onDidChangeEmitter.fire())})),i=new rp(n,e);this.updateOperation.value=i,yield n,this.updateOperation.value===i&&this.updateOperation.clear()})}takeOwnership(e){this._register(e)}commitCurrentCompletion(){if(!this.ghostText)return;let e=this.currentCompletion;e&&this.commit(e)}commit(e){let t=this.cache.clearAndLeak();this.editor.executeEdits("inlineSuggestion.accept",[He.replaceMove(e.range,e.text)]),e.command?this.commandService.executeCommand(e.command.id,...e.command.arguments||[]).finally(()=>{t==null||t.dispose()}).then(void 0,je):t==null||t.dispose(),this.onDidChangeEmitter.fire()}},rp=class{constructor(e,t){this.promise=e,this.triggerKind=t}dispose(){this.promise.cancel()}},Nf=class extends B{constructor(e,t,n,i){super();this.triggerKind=i;let o=e.deltaDecorations([],t.items.map(s=>({range:s.range,options:{description:"inline-completion-tracking-range"}})));this._register(We(()=>{e.deltaDecorations(o,[])})),this.completions=t.items.map((s,a)=>new dw(s,o[a])),this._register(e.onDidChangeModelContent(()=>{let s=!1,a=e.getModel();for(let l of this.completions){let c=a.getDecorationRange(l.decorationId);if(!c){ae(new Error("Decoration has no range"));continue}l.synchronizedRange.equalsRange(c)||(s=!0,l.synchronizedRange=c)}s&&n()})),this._register(t)}},dw=class{constructor(e,t){this.inlineCompletion=e,this.decorationId=t,this.semanticId=JSON.stringify({text:this.inlineCompletion.text,startLine:this.inlineCompletion.range.startLineNumber,startColumn:this.inlineCompletion.range.startColumn,command:this.inlineCompletion.command}),this.synchronizedRange=e.range}toLiveInlineCompletion(){return{text:this.inlineCompletion.text,range:this.synchronizedRange,command:this.inlineCompletion.command,sourceProvider:this.inlineCompletion.sourceProvider,sourceInlineCompletions:this.inlineCompletion.sourceInlineCompletions,sourceInlineCompletion:this.inlineCompletion.sourceInlineCompletion}}};function dP(r,e){let t=e.getWordAtPosition(r),n=e.getLineMaxColumn(r.lineNumber);return t?new C(r.lineNumber,t.startColumn,r.lineNumber,n):C.fromPositions(r,r.with(void 0,n))}function zf(r,e,t,n=ue.None){return Po(this,void 0,void 0,function*(){let i=dP(r,e),o=Em.all(e),s=yield Promise.all(o.map(l=>Po(this,void 0,void 0,function*(){let c=yield l.provideInlineCompletions(e,r,t,n);return{completions:c,provider:l,dispose:()=>{c&&l.freeInlineCompletions(c)}}}))),a=new Map;for(let l of s){let c=l.completions;if(c)for(let d of c.items.map(h=>({text:h.text,range:h.range?C.lift(h.range):i,command:h.command,sourceProvider:l.provider,sourceInlineCompletions:c,sourceInlineCompletion:h})))d.range.startLineNumber===d.range.endLineNumber&&a.set(JSON.stringify({text:d.text,range:d.range}),d)}return{items:[...a.values()],dispose:()=>{for(let l of s)l.dispose()}}})}function Aa(r,e){if(!e)return e;let t=r.getValueInRange(e.range),n=Jo(t,e.text),i=r.getOffsetAt(e.range.getStartPosition())+n,o=r.getPositionAt(i),s=t.substr(n),a=hh(s,e.text),l=r.getPositionAt(Math.max(i,r.getOffsetAt(e.range.getEndPosition())-a));return{range:C.fromPositions(o,l),text:e.text.substr(n,e.text.length-n-a)}}Oe();ke();U();Pe();Oe();Ae();U();rt();te();var Wn=class{constructor(){this.value="",this.pos=0}static isDigitCharacter(e){return e>=48&&e<=57}static isVariableCharacter(e){return e===95||e>=97&&e<=122||e>=65&&e<=90}text(e){this.value=e,this.pos=0}tokenText(e){return this.value.substr(e.pos,e.len)}next(){if(this.pos>=this.value.length)return{type:14,pos:this.pos,len:0};let e=this.pos,t=0,n=this.value.charCodeAt(e),i;if(i=Wn._table[n],typeof i=="number")return this.pos+=1,{type:i,pos:e,len:1};if(Wn.isDigitCharacter(n)){i=8;do t+=1,n=this.value.charCodeAt(e+t);while(Wn.isDigitCharacter(n));return this.pos+=t,{type:i,pos:e,len:t}}if(Wn.isVariableCharacter(n)){i=9;do n=this.value.charCodeAt(e+ ++t);while(Wn.isVariableCharacter(n)||Wn.isDigitCharacter(n));return this.pos+=t,{type:i,pos:e,len:t}}i=10;do t+=1,n=this.value.charCodeAt(e+t);while(!isNaN(n)&&typeof Wn._table[n]=="undefined"&&!Wn.isDigitCharacter(n)&&!Wn.isVariableCharacter(n));return this.pos+=t,{type:i,pos:e,len:t}}};Wn._table={[36]:0,[58]:1,[44]:2,[123]:3,[125]:4,[92]:5,[47]:6,[124]:7,[43]:11,[45]:12,[63]:13};var ys=class{constructor(){this._children=[]}appendChild(e){return e instanceof qt&&this._children[this._children.length-1]instanceof qt?this._children[this._children.length-1].value+=e.value:(e.parent=this,this._children.push(e)),this}replace(e,t){let{parent:n}=e,i=n.children.indexOf(e),o=n.children.slice(0);o.splice(i,1,...t),n._children=o,function s(a,l){for(let c of a)c.parent=l,s(c.children,c)}(t,n)}get children(){return this._children}get snippet(){let e=this;for(;;){if(!e)return;if(e instanceof $d)return e;e=e.parent}}toString(){return this.children.reduce((e,t)=>e+t.toString(),"")}len(){return 0}},qt=class extends ys{constructor(e){super();this.value=e}toString(){return this.value}len(){return this.value.length}clone(){return new qt(this.value)}},Of=class extends ys{},Ln=class extends Of{constructor(e){super();this.index=e}static compareByIndex(e,t){return e.index===t.index?0:e.isFinalTabstop?1:t.isFinalTabstop||e.index<t.index?-1:e.index>t.index?1:0}get isFinalTabstop(){return this.index===0}get choice(){return this._children.length===1&&this._children[0]instanceof bs?this._children[0]:void 0}clone(){let e=new Ln(this.index);return this.transform&&(e.transform=this.transform.clone()),e._children=this.children.map(t=>t.clone()),e}},bs=class extends ys{constructor(){super(...arguments);this.options=[]}appendChild(e){return e instanceof qt&&(e.parent=this,this.options.push(e)),this}toString(){return this.options[0].value}len(){return this.options[0].len()}clone(){let e=new bs;return this.options.forEach(e.appendChild,e),e}},sp=class extends ys{constructor(){super(...arguments);this.regexp=new RegExp("")}resolve(e){let t=this,n=!1,i=e.replace(this.regexp,function(){return n=!0,t._replace(Array.prototype.slice.call(arguments,0,-2))});return!n&&this._children.some(o=>o instanceof si&&Boolean(o.elseValue))&&(i=this._replace([])),i}_replace(e){let t="";for(let n of this._children)if(n instanceof si){let i=e[n.index]||"";i=n.resolve(i),t+=i}else t+=n.toString();return t}toString(){return""}clone(){let e=new sp;return e.regexp=new RegExp(this.regexp.source,(this.regexp.ignoreCase?"i":"")+(this.regexp.global?"g":"")),e._children=this.children.map(t=>t.clone()),e}},si=class extends ys{constructor(e,t,n,i){super();this.index=e,this.shorthandName=t,this.ifValue=n,this.elseValue=i}resolve(e){return this.shorthandName==="upcase"?e?e.toLocaleUpperCase():"":this.shorthandName==="downcase"?e?e.toLocaleLowerCase():"":this.shorthandName==="capitalize"?e?e[0].toLocaleUpperCase()+e.substr(1):"":this.shorthandName==="pascalcase"?e?this._toPascalCase(e):"":this.shorthandName==="camelcase"?e?this._toCamelCase(e):"":Boolean(e)&&typeof this.ifValue=="string"?this.ifValue:!Boolean(e)&&typeof this.elseValue=="string"?this.elseValue:e||""}_toPascalCase(e){let t=e.match(/[a-z0-9]+/gi);return t?t.map(n=>n.charAt(0).toUpperCase()+n.substr(1).toLowerCase()).join(""):e}_toCamelCase(e){let t=e.match(/[a-z0-9]+/gi);return t?t.map((n,i)=>i===0?n.toLowerCase():n.charAt(0).toUpperCase()+n.substr(1).toLowerCase()).join(""):e}clone(){return new si(this.index,this.shorthandName,this.ifValue,this.elseValue)}},Na=class extends Of{constructor(e){super();this.name=e}resolve(e){let t=e.resolve(this);return this.transform&&(t=this.transform.resolve(t||"")),t!==void 0?(this._children=[new qt(t)],!0):!1}clone(){let e=new Na(this.name);return this.transform&&(e.transform=this.transform.clone()),e._children=this.children.map(t=>t.clone()),e}};function cw(r,e){let t=[...r];for(;t.length>0;){let n=t.shift();if(!e(n))break;t.unshift(...n.children)}}var $d=class extends ys{get placeholderInfo(){if(!this._placeholders){let e=[],t;this.walk(function(n){return n instanceof Ln&&(e.push(n),t=!t||t.index<n.index?n:t),!0}),this._placeholders={all:e,last:t}}return this._placeholders}get placeholders(){let{all:e}=this.placeholderInfo;return e}offset(e){let t=0,n=!1;return this.walk(i=>i===e?(n=!0,!1):(t+=i.len(),!0)),n?t:-1}fullLen(e){let t=0;return cw([e],n=>(t+=n.len(),!0)),t}enclosingPlaceholders(e){let t=[],{parent:n}=e;for(;n;)n instanceof Ln&&t.push(n),n=n.parent;return t}resolveVariables(e){return this.walk(t=>(t instanceof Na&&t.resolve(e)&&(this._placeholders=void 0),!0)),this}appendChild(e){return this._placeholders=void 0,super.appendChild(e)}replace(e,t){return this._placeholders=void 0,super.replace(e,t)}clone(){let e=new $d;return this._children=this.children.map(t=>t.clone()),e}walk(e){cw(this.children,e)}},Mo=class{constructor(){this._scanner=new Wn,this._token={type:14,pos:0,len:0}}static escape(e){return e.replace(/\$|}|\\/g,"\\$&")}static guessNeedsClipboard(e){return/\${?CLIPBOARD/.test(e)}parse(e,t,n){this._scanner.text(e),this._token=this._scanner.next();let i=new $d;for(;this._parse(i););let o=new Map,s=[],a=0;i.walk(l=>(l instanceof Ln&&(a+=1,l.isFinalTabstop?o.set(0,void 0):!o.has(l.index)&&l.children.length>0?o.set(l.index,l.children):s.push(l)),!0));for(let l of s){let c=o.get(l.index);if(c){let d=new Ln(l.index);d.transform=l.transform;for(let h of c)d.appendChild(h.clone());i.replace(l,[d])}}return n||(n=a>0&&t),!o.has(0)&&n&&i.appendChild(new Ln(0)),i}_accept(e,t){if(e===void 0||this._token.type===e){let n=t?this._scanner.tokenText(this._token):!0;return this._token=this._scanner.next(),n}return!1}_backTo(e){return this._scanner.pos=e.pos+e.len,this._token=e,!1}_until(e){let t=this._token;for(;this._token.type!==e;){if(this._token.type===14)return!1;if(this._token.type===5){let i=this._scanner.next();if(i.type!==0&&i.type!==4&&i.type!==5)return!1}this._token=this._scanner.next()}let n=this._scanner.value.substring(t.pos,this._token.pos).replace(/\\(\$|}|\\)/g,"$1");return this._token=this._scanner.next(),n}_parse(e){return this._parseEscaped(e)||this._parseTabstopOrVariableName(e)||this._parseComplexPlaceholder(e)||this._parseComplexVariable(e)||this._parseAnything(e)}_parseEscaped(e){let t;return(t=this._accept(5,!0))?(t=this._accept(0,!0)||this._accept(4,!0)||this._accept(5,!0)||t,e.appendChild(new qt(t)),!0):!1}_parseTabstopOrVariableName(e){let t,n=this._token;return this._accept(0)&&(t=this._accept(9,!0)||this._accept(8,!0))?(e.appendChild(/^\d+$/.test(t)?new Ln(Number(t)):new Na(t)),!0):this._backTo(n)}_parseComplexPlaceholder(e){let t,n=this._token;if(!(this._accept(0)&&this._accept(3)&&(t=this._accept(8,!0))))return this._backTo(n);let o=new Ln(Number(t));if(this._accept(1))for(;;){if(this._accept(4))return e.appendChild(o),!0;if(!this._parse(o))return e.appendChild(new qt("${"+t+":")),o.children.forEach(e.appendChild,e),!0}else if(o.index>0&&this._accept(7)){let s=new bs;for(;;){if(this._parseChoiceElement(s)){if(this._accept(2))continue;if(this._accept(7)&&(o.appendChild(s),this._accept(4)))return e.appendChild(o),!0}return this._backTo(n),!1}}else return this._accept(6)?this._parseTransform(o)?(e.appendChild(o),!0):(this._backTo(n),!1):this._accept(4)?(e.appendChild(o),!0):this._backTo(n)}_parseChoiceElement(e){let t=this._token,n=[];for(;!(this._token.type===2||this._token.type===7);){let i;if((i=this._accept(5,!0))?i=this._accept(2,!0)||this._accept(7,!0)||this._accept(5,!0)||i:i=this._accept(void 0,!0),!i)return this._backTo(t),!1;n.push(i)}return n.length===0?(this._backTo(t),!1):(e.appendChild(new qt(n.join(""))),!0)}_parseComplexVariable(e){let t,n=this._token;if(!(this._accept(0)&&this._accept(3)&&(t=this._accept(9,!0))))return this._backTo(n);let o=new Na(t);if(this._accept(1))for(;;){if(this._accept(4))return e.appendChild(o),!0;if(!this._parse(o))return e.appendChild(new qt("${"+t+":")),o.children.forEach(e.appendChild,e),!0}else return this._accept(6)?this._parseTransform(o)?(e.appendChild(o),!0):(this._backTo(n),!1):this._accept(4)?(e.appendChild(o),!0):this._backTo(n)}_parseTransform(e){let t=new sp,n="",i="";for(;!this._accept(6);){let o;if(o=this._accept(5,!0)){o=this._accept(6,!0)||o,n+=o;continue}if(this._token.type!==14){n+=this._accept(void 0,!0);continue}return!1}for(;!this._accept(6);){let o;if(o=this._accept(5,!0)){o=this._accept(5,!0)||this._accept(6,!0)||o,t.appendChild(new qt(o));continue}if(!(this._parseFormatString(t)||this._parseAnything(t)))return!1}for(;!this._accept(4);){if(this._token.type!==14){i+=this._accept(void 0,!0);continue}return!1}try{t.regexp=new RegExp(n,i)}catch(o){return!1}return e.transform=t,!0}_parseFormatString(e){let t=this._token;if(!this._accept(0))return!1;let n=!1;this._accept(3)&&(n=!0);let i=this._accept(8,!0);if(i)if(n){if(this._accept(4))return e.appendChild(new si(Number(i))),!0;if(!this._accept(1))return this._backTo(t),!1}else return e.appendChild(new si(Number(i))),!0;else return this._backTo(t),!1;if(this._accept(6)){let o=this._accept(9,!0);return!o||!this._accept(4)?(this._backTo(t),!1):(e.appendChild(new si(Number(i),o)),!0)}else if(this._accept(11)){let o=this._until(4);if(o)return e.appendChild(new si(Number(i),void 0,o,void 0)),!0}else if(this._accept(12)){let o=this._until(4);if(o)return e.appendChild(new si(Number(i),void 0,void 0,o)),!0}else if(this._accept(13)){let o=this._until(1);if(o){let s=this._until(4);if(s)return e.appendChild(new si(Number(i),void 0,o,s)),!0}}else{let o=this._until(4);if(o)return e.appendChild(new si(Number(i),void 0,void 0,o)),!0}return this._backTo(t),!1}_parseAnything(e){return this._token.type!==14?(e.appendChild(new qt(this._scanner.tokenText(this._token))),this._accept(void 0),!0):!1}};mt();U();Ze();fo();te();wt();Ut();Je();Me();nS();Nn();Ze();var Et=new Uint8Array(16),tn=[];for(let r=0;r<256;r++)tn.push(r.toString(16).padStart(2,"0"));var Hf;typeof crypto=="object"&&typeof crypto.getRandomValues=="function"?Hf=crypto.getRandomValues.bind(crypto):Hf=function(r){for(let e=0;e<r.length;e++)r[e]=Math.floor(Math.random()*256);return r};function hw(){Hf(Et),Et[6]=Et[6]&15|64,Et[8]=Et[8]&63|128;let r=0,e="";return e+=tn[Et[r++]],e+=tn[Et[r++]],e+=tn[Et[r++]],e+=tn[Et[r++]],e+="-",e+=tn[Et[r++]],e+=tn[Et[r++]],e+="-",e+=tn[Et[r++]],e+=tn[Et[r++]],e+="-",e+=tn[Et[r++]],e+=tn[Et[r++]],e+="-",e+=tn[Et[r++]],e+=tn[Et[r++]],e+=tn[Et[r++]],e+=tn[Et[r++]],e+=tn[Et[r++]],e+=tn[Et[r++]],e}Oi();ne();Ht();var Bf="code-workspace";function Wf(r){let e=r;return typeof(e==null?void 0:e.id)=="string"&&Ce.isUri(e.uri)}function uw(r){if(r.configuration)return{id:r.id,configPath:r.configuration};if(r.folders.length===1)return{id:r.id,uri:r.folders[0].uri}}var Vf=class{constructor(e){this._delegates=e}resolve(e){for(let t of this._delegates){let n=t.resolve(e);if(n!==void 0)return n}}},Gf=class{constructor(e,t,n,i){this._model=e,this._selection=t,this._selectionIdx=n,this._overtypingCapturer=i}resolve(e){let{name:t}=e;if(t==="SELECTION"||t==="TM_SELECTED_TEXT"){let n=this._model.getValueInRange(this._selection)||void 0,i=this._selection.startLineNumber!==this._selection.endLineNumber;if(!n&&this._overtypingCapturer){let o=this._overtypingCapturer.getLastOvertypedInfo(this._selectionIdx);o&&(n=o.value,i=o.multiline)}if(n&&i&&e.snippet){let o=this._model.getLineContent(this._selection.startLineNumber),s=st(o,0,this._selection.startColumn-1),a=s;e.snippet.walk(c=>c===e?!1:(c instanceof qt&&(a=st(Ur(c.value).pop())),!0));let l=Jo(a,s);n=n.replace(/(\r\n|\r|\n)(.*)/g,(c,d,h)=>`${d}${a.substr(l)}${h}`)}return n}else{if(t==="TM_CURRENT_LINE")return this._model.getLineContent(this._selection.positionLineNumber);if(t==="TM_CURRENT_WORD"){let n=this._model.getWordAtPosition({lineNumber:this._selection.positionLineNumber,column:this._selection.positionColumn});return n&&n.word||void 0}else{if(t==="TM_LINE_INDEX")return String(this._selection.positionLineNumber-1);if(t==="TM_LINE_NUMBER")return String(this._selection.positionLineNumber)}}}},jf=class{constructor(e,t){this._labelService=e,this._model=t}resolve(e){let{name:t}=e;if(t==="TM_FILENAME")return Zs(this._model.uri.fsPath);if(t==="TM_FILENAME_BASE"){let n=Zs(this._model.uri.fsPath),i=n.lastIndexOf(".");return i<=0?n:n.slice(0,i)}else{if(t==="TM_DIRECTORY")return tS(this._model.uri.fsPath)==="."?"":this._labelService.getUriLabel(ia(this._model.uri));if(t==="TM_FILEPATH")return this._labelService.getUriLabel(this._model.uri);if(t==="RELATIVE_FILEPATH")return this._labelService.getUriLabel(this._model.uri,{relative:!0,noPrefix:!0})}}},Uf=class{constructor(e,t,n,i){this._readClipboardText=e,this._selectionIdx=t,this._selectionCount=n,this._spread=i}resolve(e){if(e.name!=="CLIPBOARD")return;let t=this._readClipboardText();if(!!t){if(this._spread){let n=t.split(/\r\n|\n|\r/).filter(i=>!CS(i));if(n.length===this._selectionCount)return n[this._selectionIdx]}return t}}},$f=class{constructor(e,t){this._model=e,this._selection=t}resolve(e){let{name:t}=e,n=this._model.getLanguageIdAtPosition(this._selection.selectionStartLineNumber,this._selection.selectionStartColumn),i=Ge.getComments(n);if(!!i){if(t==="LINE_COMMENT")return i.lineCommentToken||void 0;if(t==="BLOCK_COMMENT_START")return i.blockCommentStartToken||void 0;if(t==="BLOCK_COMMENT_END")return i.blockCommentEndToken||void 0}}},ai=class{constructor(){this._date=new Date}resolve(e){let{name:t}=e;if(t==="CURRENT_YEAR")return String(this._date.getFullYear());if(t==="CURRENT_YEAR_SHORT")return String(this._date.getFullYear()).slice(-2);if(t==="CURRENT_MONTH")return String(this._date.getMonth().valueOf()+1).padStart(2,"0");if(t==="CURRENT_DATE")return String(this._date.getDate().valueOf()).padStart(2,"0");if(t==="CURRENT_HOUR")return String(this._date.getHours().valueOf()).padStart(2,"0");if(t==="CURRENT_MINUTE")return String(this._date.getMinutes().valueOf()).padStart(2,"0");if(t==="CURRENT_SECOND")return String(this._date.getSeconds().valueOf()).padStart(2,"0");if(t==="CURRENT_DAY_NAME")return ai.dayNames[this._date.getDay()];if(t==="CURRENT_DAY_NAME_SHORT")return ai.dayNamesShort[this._date.getDay()];if(t==="CURRENT_MONTH_NAME")return ai.monthNames[this._date.getMonth()];if(t==="CURRENT_MONTH_NAME_SHORT")return ai.monthNamesShort[this._date.getMonth()];if(t==="CURRENT_SECONDS_UNIX")return String(Math.floor(this._date.getTime()/1e3))}};ai.dayNames=[u("Sunday","Sunday"),u("Monday","Monday"),u("Tuesday","Tuesday"),u("Wednesday","Wednesday"),u("Thursday","Thursday"),u("Friday","Friday"),u("Saturday","Saturday")];ai.dayNamesShort=[u("SundayShort","Sun"),u("MondayShort","Mon"),u("TuesdayShort","Tue"),u("WednesdayShort","Wed"),u("ThursdayShort","Thu"),u("FridayShort","Fri"),u("SaturdayShort","Sat")];ai.monthNames=[u("January","January"),u("February","February"),u("March","March"),u("April","April"),u("May","May"),u("June","June"),u("July","July"),u("August","August"),u("September","September"),u("October","October"),u("November","November"),u("December","December")];ai.monthNamesShort=[u("JanuaryShort","Jan"),u("FebruaryShort","Feb"),u("MarchShort","Mar"),u("AprilShort","Apr"),u("MayShort","May"),u("JuneShort","Jun"),u("JulyShort","Jul"),u("AugustShort","Aug"),u("SeptemberShort","Sep"),u("OctoberShort","Oct"),u("NovemberShort","Nov"),u("DecemberShort","Dec")];var Kf=class{constructor(e){this._workspaceService=e}resolve(e){if(!this._workspaceService)return;let t=uw(this._workspaceService.getWorkspace());if(!!t){if(e.name==="WORKSPACE_NAME")return this._resolveWorkspaceName(t);if(e.name==="WORKSPACE_FOLDER")return this._resoveWorkspacePath(t)}}_resolveWorkspaceName(e){if(Wf(e))return Zs(e.uri.path);let t=Zs(e.configPath.path);return t.endsWith(Bf)&&(t=t.substr(0,t.length-Bf.length-1)),t}_resoveWorkspacePath(e){if(Wf(e))return Hu(e.uri.fsPath);let t=Zs(e.configPath.path),n=e.configPath.fsPath;return n.endsWith(t)&&(n=n.substr(0,n.length-t.length-1)),n?Hu(n):"/"}},qf=class{resolve(e){let{name:t}=e;if(t==="RANDOM")return Math.random().toString().slice(-6);if(t==="RANDOM_HEX")return Math.random().toString(16).slice(-6);if(t==="UUID")return hw()}};ye((r,e)=>{function t(n){let i=r.getColor(n);return i?i.toString():"transparent"}e.addRule(`.monaco-editor .snippet-placeholder { background-color: ${t(ox)}; outline-color: ${t(rx)}; }`),e.addRule(`.monaco-editor .finish-snippet-placeholder { background-color: ${t(sx)}; outline-color: ${t(ax)}; }`)});var Vn=class{constructor(e,t,n,i){this._editor=e,this._snippet=t,this._offset=n,this._snippetLineLeadingWhitespace=i,this._nestingLevel=1,this._placeholderGroups=Dm(t.placeholders,Ln.compareByIndex),this._placeholderGroupsIdx=-1}dispose(){this._placeholderDecorations&&this._editor.deltaDecorations([...this._placeholderDecorations.values()],[]),this._placeholderGroups.length=0}_initDecorations(){if(this._placeholderDecorations)return;this._placeholderDecorations=new Map;let e=this._editor.getModel();this._editor.changeDecorations(t=>{for(let n of this._snippet.placeholders){let i=this._snippet.offset(n),o=this._snippet.fullLen(n),s=C.fromPositions(e.getPositionAt(this._offset+i),e.getPositionAt(this._offset+i+o)),a=n.isFinalTabstop?Vn._decor.inactiveFinal:Vn._decor.inactive,l=t.addDecoration(s,a);this._placeholderDecorations.set(n,l)}})}move(e){if(!this._editor.hasModel())return[];if(this._initDecorations(),this._placeholderGroupsIdx>=0){let i=[];for(let o of this._placeholderGroups[this._placeholderGroupsIdx])if(o.transform){let s=this._placeholderDecorations.get(o),a=this._editor.getModel().getDecorationRange(s),l=this._editor.getModel().getValueInRange(a),c=o.transform.resolve(l).split(/\r\n|\r|\n/);for(let d=1;d<c.length;d++)c[d]=this._editor.getModel().normalizeIndentation(this._snippetLineLeadingWhitespace+c[d]);i.push(He.replace(a,c.join(this._editor.getModel().getEOL())))}i.length>0&&this._editor.executeEdits("snippet.placeholderTransform",i)}let t=!1;e===!0&&this._placeholderGroupsIdx<this._placeholderGroups.length-1?(this._placeholderGroupsIdx+=1,t=!0):e===!1&&this._placeholderGroupsIdx>0&&(this._placeholderGroupsIdx-=1,t=!0);let n=this._editor.getModel().changeDecorations(i=>{let o=new Set,s=[];for(let a of this._placeholderGroups[this._placeholderGroupsIdx]){let l=this._placeholderDecorations.get(a),c=this._editor.getModel().getDecorationRange(l);s.push(new Z(c.startLineNumber,c.startColumn,c.endLineNumber,c.endColumn)),t=t&&this._hasPlaceholderBeenCollapsed(a),i.changeDecorationOptions(l,a.isFinalTabstop?Vn._decor.activeFinal:Vn._decor.active),o.add(a);for(let d of this._snippet.enclosingPlaceholders(a)){let h=this._placeholderDecorations.get(d);i.changeDecorationOptions(h,d.isFinalTabstop?Vn._decor.activeFinal:Vn._decor.active),o.add(d)}}for(let[a,l]of this._placeholderDecorations)o.has(a)||i.changeDecorationOptions(l,a.isFinalTabstop?Vn._decor.inactiveFinal:Vn._decor.inactive);return s});return t?this.move(e):n!=null?n:[]}_hasPlaceholderBeenCollapsed(e){let t=e;for(;t;){if(t instanceof Ln){let n=this._placeholderDecorations.get(t);if(this._editor.getModel().getDecorationRange(n).isEmpty()&&t.toString().length>0)return!0}t=t.parent}return!1}get isAtFirstPlaceholder(){return this._placeholderGroupsIdx<=0||this._placeholderGroups.length===0}get isAtLastPlaceholder(){return this._placeholderGroupsIdx===this._placeholderGroups.length-1}get hasPlaceholder(){return this._snippet.placeholders.length>0}computePossibleSelections(){let e=new Map;for(let t of this._placeholderGroups){let n;for(let i of t){if(i.isFinalTabstop)break;n||(n=[],e.set(i.index,n));let o=this._placeholderDecorations.get(i),s=this._editor.getModel().getDecorationRange(o);if(!s){e.delete(i.index);break}n.push(s)}}return e}get choice(){return this._placeholderGroups[this._placeholderGroupsIdx][0].choice}merge(e){let t=this._editor.getModel();this._nestingLevel*=10,this._editor.changeDecorations(n=>{for(let i of this._placeholderGroups[this._placeholderGroupsIdx]){let o=e.shift();console.assert(!o._placeholderDecorations);let s=o._snippet.placeholderInfo.last.index;for(let l of o._snippet.placeholderInfo.all)l.isFinalTabstop?l.index=i.index+(s+1)/this._nestingLevel:l.index=i.index+l.index/this._nestingLevel;this._snippet.replace(i,o._snippet.children);let a=this._placeholderDecorations.get(i);n.removeDecoration(a),this._placeholderDecorations.delete(i);for(let l of o._snippet.placeholders){let c=o._snippet.offset(l),d=o._snippet.fullLen(l),h=C.fromPositions(t.getPositionAt(o._offset+c),t.getPositionAt(o._offset+c+d)),p=n.addDecoration(h,Vn._decor.inactive);this._placeholderDecorations.set(l,p)}}this._placeholderGroups=Dm(this._snippet.placeholders,Ln.compareByIndex)})}};Vn._decor={active:xe.register({description:"snippet-placeholder-1",stickiness:0,className:"snippet-placeholder"}),inactive:xe.register({description:"snippet-placeholder-2",stickiness:1,className:"snippet-placeholder"}),activeFinal:xe.register({description:"snippet-placeholder-3",stickiness:1,className:"finish-snippet-placeholder"}),inactiveFinal:xe.register({description:"snippet-placeholder-4",stickiness:1,className:"finish-snippet-placeholder"})};var pw={overwriteBefore:0,overwriteAfter:0,adjustWhitespace:!0,clipboardText:void 0,overtypingCapturer:void 0},Gn=class{constructor(e,t,n=pw){this._templateMerges=[],this._snippets=[],this._editor=e,this._template=t,this._options=n}static adjustWhitespace(e,t,n,i,o){let s=e.getLineContent(t.lineNumber),a=st(s,0,t.column-1),l;return n.walk(c=>{if(!(c instanceof qt)||c.parent instanceof bs)return!0;let d=c.value.split(/\r\n|\r|\n/);if(i){let p=n.offset(c);if(p===0)d[0]=e.normalizeIndentation(d[0]);else{l=l!=null?l:n.toString();let g=l.charCodeAt(p-1);(g===10||g===13)&&(d[0]=e.normalizeIndentation(a+d[0]))}for(let g=1;g<d.length;g++)d[g]=e.normalizeIndentation(a+d[g])}let h=d.join(e.getEOL());return h!==c.value&&(c.parent.replace(c,[new qt(h)]),l=void 0),!0}),a}static adjustSelection(e,t,n,i){if(n!==0||i!==0){let{positionLineNumber:o,positionColumn:s}=t,a=s-n,l=s+i,c=e.validateRange({startLineNumber:o,startColumn:a,endLineNumber:o,endColumn:l});t=Z.createWithDirection(c.startLineNumber,c.startColumn,c.endLineNumber,c.endColumn,t.getDirection())}return t}static createEditsAndSnippets(e,t,n,i,o,s,a,l){let c=[],d=[];if(!e.hasModel())return{edits:c,snippets:d};let h=e.getModel(),p=e.invokeWithinContext(V=>V.get(mv)),g=e.invokeWithinContext(V=>new jf(V.get(mr),h)),y=()=>a,v=0,w=h.getValueInRange(Gn.adjustSelection(h,e.getSelection(),n,0)),F=h.getValueInRange(Gn.adjustSelection(h,e.getSelection(),0,i)),M=h.getLineFirstNonWhitespaceColumn(e.getSelection().positionLineNumber),z=e.getSelections().map((V,G)=>({selection:V,idx:G})).sort((V,G)=>C.compareRangesUsingStarts(V.selection,G.selection));for(let{selection:V,idx:G}of z){let ze=Gn.adjustSelection(h,V,n,0),_e=Gn.adjustSelection(h,V,0,i);w!==h.getValueInRange(ze)&&(ze=V),F!==h.getValueInRange(_e)&&(_e=V);let yt=V.setStartPosition(ze.startLineNumber,ze.startColumn).setEndPosition(_e.endLineNumber,_e.endColumn),Pt=new Mo().parse(t,!0,o),Mt=yt.getStartPosition(),Rn=Gn.adjustWhitespace(h,Mt,Pt,s||G>0&&M!==h.getLineFirstNonWhitespaceColumn(V.positionLineNumber),!0);Pt.resolveVariables(new Vf([g,new Uf(y,G,z.length,e.getOption(70)==="spread"),new Gf(h,V,G,l),new $f(h,V),new ai,new Kf(p),new qf]));let Go=h.getOffsetAt(Mt)+v;v+=Pt.toString().length-h.getValueLengthInRange(yt),c[G]=He.replace(yt,Pt.toString()),c[G].identifier={major:G,minor:0},d[G]=new Vn(e,Pt,Go,Rn)}return{edits:c,snippets:d}}dispose(){ht(this._snippets)}_logInfo(){return`template="${this._template}", merged_templates="${this._templateMerges.join(" -> ")}"`}insert(){if(!this._editor.hasModel())return;let{edits:e,snippets:t}=Gn.createEditsAndSnippets(this._editor,this._template,this._options.overwriteBefore,this._options.overwriteAfter,!1,this._options.adjustWhitespace,this._options.clipboardText,this._options.overtypingCapturer);this._snippets=t,this._editor.executeEdits("snippet",e,n=>this._snippets[0].hasPlaceholder?this._move(!0):n.filter(i=>!!i.identifier).map(i=>Z.fromPositions(i.range.getEndPosition()))),this._editor.revealRange(this._editor.getSelections()[0])}merge(e,t=pw){if(!this._editor.hasModel())return;this._templateMerges.push([this._snippets[0]._nestingLevel,this._snippets[0]._placeholderGroupsIdx,e]);let{edits:n,snippets:i}=Gn.createEditsAndSnippets(this._editor,e,t.overwriteBefore,t.overwriteAfter,!0,t.adjustWhitespace,t.clipboardText,t.overtypingCapturer);this._editor.executeEdits("snippet",n,o=>{for(let s of this._snippets)s.merge(i);return console.assert(i.length===0),this._snippets[0].hasPlaceholder?this._move(void 0):o.filter(s=>!!s.identifier).map(s=>Z.fromPositions(s.range.getEndPosition()))})}next(){let e=this._move(!0);this._editor.setSelections(e),this._editor.revealPositionInCenterIfOutsideViewport(e[0].getPosition())}prev(){let e=this._move(!1);this._editor.setSelections(e),this._editor.revealPositionInCenterIfOutsideViewport(e[0].getPosition())}_move(e){let t=[];for(let n of this._snippets){let i=n.move(e);t.push(...i)}return t}get isAtFirstPlaceholder(){return this._snippets[0].isAtFirstPlaceholder}get isAtLastPlaceholder(){return this._snippets[0].isAtLastPlaceholder}get hasPlaceholder(){return this._snippets[0].hasPlaceholder}get choice(){return this._snippets[0].choice}isSelectionWithinPlaceholders(){if(!this.hasPlaceholder)return!1;let e=this._editor.getSelections();if(e.length<this._snippets.length)return!1;let t=new Map;for(let n of this._snippets){let i=n.computePossibleSelections();if(t.size===0)for(let[o,s]of i){s.sort(C.compareRangesUsingStarts);for(let a of e)if(s[0].containsRange(a)){t.set(o,[]);break}}if(t.size===0)return!1;t.forEach((o,s)=>{o.push(...i.get(s))})}e.sort(C.compareRangesUsingStarts);for(let[n,i]of t){if(i.length!==e.length){t.delete(n);continue}i.sort(C.compareRangesUsingStarts);for(let o=0;o<i.length;o++)if(!i[o].containsRange(e[o])){t.delete(n);continue}}return t.size>0}};mi();mt();Oe();at();ke();Ae();NL();U();Fn();cm();Wt();pr();ce();fo();rt();te();Be();U();ce();te();wt();Be();at();ke();U();cm();Wt();Ht();rt();te();Pe();qr();ne();un();bt();Te();var qd=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},me={Visible:new de("suggestWidgetVisible",!1,u("suggestWidgetVisible","Whether suggestion are visible")),DetailsVisible:new de("suggestWidgetDetailsVisible",!1,u("suggestWidgetDetailsVisible","Whether suggestion details are visible")),MultipleSuggestions:new de("suggestWidgetMultipleSuggestions",!1,u("suggestWidgetMultipleSuggestions","Whether there are multiple suggestions to pick from")),MakesTextEdit:new de("suggestionMakesTextEdit",!0,u("suggestionMakesTextEdit","Whether inserting the current suggestion yields in a change or has everything already been typed")),AcceptSuggestionsOnEnter:new de("acceptSuggestionOnEnter",!0,u("acceptSuggestionOnEnter","Whether suggestions are inserted when pressing Enter")),HasInsertAndReplaceRange:new de("suggestionHasInsertAndReplaceRange",!1,u("suggestionHasInsertAndReplaceRange","Whether the current suggestion has insert and replace behaviour")),InsertMode:new de("suggestionInsertMode",void 0,{type:"string",description:u("suggestionInsertMode","Whether the default behaviour is to insert or replace")}),CanResolve:new de("suggestionCanResolve",!1,u("suggestionCanResolve","Whether the current suggestion supports to resolve further details"))},Yi=new oe("suggestWidgetStatusBar"),mw=class{constructor(e,t,n,i){this.position=e,this.completion=t,this.container=n,this.provider=i,this.isInvalid=!1,this.score=ts.Default,this.distance=0,this.textLabel=typeof t.label=="string"?t.label:t.label.label,this.labelLow=this.textLabel.toLowerCase(),this.isInvalid=!this.textLabel,this.sortTextLow=t.sortText&&t.sortText.toLowerCase(),this.filterTextLow=t.filterText&&t.filterText.toLowerCase(),C.isIRange(t.range)?(this.editStart=new q(t.range.startLineNumber,t.range.startColumn),this.editInsertEnd=new q(t.range.endLineNumber,t.range.endColumn),this.editReplaceEnd=new q(t.range.endLineNumber,t.range.endColumn),this.isInvalid=this.isInvalid||C.spansMultipleLines(t.range)||t.range.startLineNumber!==e.lineNumber):(this.editStart=new q(t.range.insert.startLineNumber,t.range.insert.startColumn),this.editInsertEnd=new q(t.range.insert.endLineNumber,t.range.insert.endColumn),this.editReplaceEnd=new q(t.range.replace.endLineNumber,t.range.replace.endColumn),this.isInvalid=this.isInvalid||C.spansMultipleLines(t.range.insert)||C.spansMultipleLines(t.range.replace)||t.range.insert.startLineNumber!==e.lineNumber||t.range.replace.startLineNumber!==e.lineNumber||t.range.insert.startColumn!==t.range.replace.startColumn),typeof i.resolveCompletionItem!="function"&&(this._resolveCache=Promise.resolve(),this._isResolved=!0)}get isResolved(){return!!this._isResolved}resolve(e){return qd(this,void 0,void 0,function*(){if(!this._resolveCache){let t=e.onCancellationRequested(()=>{this._resolveCache=void 0,this._isResolved=!1});this._resolveCache=Promise.resolve(this.provider.resolveCompletionItem(this.completion,e)).then(n=>{Object.assign(this.completion,n),this._isResolved=!0,t.dispose()},n=>{Li(n)&&(this._resolveCache=void 0,this._isResolved=!1)})}return this._resolveCache})}},za=class{constructor(e=2,t=new Set,n=new Set,i=!0){this.snippetSortOrder=e,this.kindFilter=t,this.providerFilter=n,this.showDeprecated=i}};za.default=new za;var Kd;function gw(){return Kd}var fw=class{constructor(e,t,n,i){this.items=e,this.needsClipboard=t,this.durations=n,this.disposable=i}};function Yf(r,e,t=za.default,n={triggerKind:0},i=ue.None){return qd(this,void 0,void 0,function*(){let o=new Zo(!0);e=e.clone();let s=r.getWordAtPosition(e),a=s?new C(e.lineNumber,s.startColumn,e.lineNumber,s.endColumn):C.fromPositions(e),l={replace:a,insert:a.setEndPosition(e.lineNumber,e.column)},c=[],d=new R,h=[],p=!1,g=(v,w,F)=>{var M,z,V;if(!!w){for(let G of w.suggestions)if(!t.kindFilter.has(G.kind)){if(!t.showDeprecated&&((M=G==null?void 0:G.tags)===null||M===void 0?void 0:M.includes(1)))continue;G.range||(G.range=l),G.sortText||(G.sortText=typeof G.label=="string"?G.label:G.label.label),!p&&G.insertTextRules&&G.insertTextRules&4&&(p=Mo.guessNeedsClipboard(G.insertText)),c.push(new mw(e,G,w,v))}rh(w)&&d.add(w),h.push({providerName:(z=v._debugDisplayName)!==null&&z!==void 0?z:"unkown_provider",elapsedProvider:(V=w.duration)!==null&&V!==void 0?V:-1,elapsedOverall:F.elapsed()})}},y=(()=>qd(this,void 0,void 0,function*(){if(!Kd||t.kindFilter.has(27)||t.providerFilter.size>0&&!t.providerFilter.has(Kd))return;let v=new Zo(!0),w=yield Kd.provideCompletionItems(r,e,n,i);g(Kd,w,v)}))();for(let v of mo.orderedGroups(r)){let w=c.length;if(yield Promise.all(v.map(F=>qd(this,void 0,void 0,function*(){if(!(t.providerFilter.size>0&&!t.providerFilter.has(F)))try{let M=new Zo(!0),z=yield F.provideCompletionItems(r,e,n,i);g(F,z,M)}catch(M){je(M)}}))),w!==c.length||i.isCancellationRequested)break}return yield y,i.isCancellationRequested?(d.dispose(),Promise.reject(ih())):new fw(c.sort(Jf(t.snippetSortOrder)),p,{entries:h,elapsed:o.elapsed()},d)})}function Zf(r,e){if(r.sortTextLow&&e.sortTextLow){if(r.sortTextLow<e.sortTextLow)return-1;if(r.sortTextLow>e.sortTextLow)return 1}return r.completion.label<e.completion.label?-1:r.completion.label>e.completion.label?1:r.completion.kind-e.completion.kind}function cP(r,e){if(r.completion.kind!==e.completion.kind){if(r.completion.kind===27)return-1;if(e.completion.kind===27)return 1}return Zf(r,e)}function hP(r,e){if(r.completion.kind!==e.completion.kind){if(r.completion.kind===27)return 1;if(e.completion.kind===27)return-1}return Zf(r,e)}var ap=new Map;ap.set(0,cP);ap.set(2,hP);ap.set(1,Zf);function Jf(r){return ap.get(r)}Ie.registerCommand("_executeCompletionItemProvider",(r,...e)=>qd(void 0,void 0,void 0,function*(){let[t,n,i,o]=e;Ue(Ce.isUri(t)),Ue(q.isIPosition(n)),Ue(typeof i=="string"||!i),Ue(typeof o=="number"||!o);let s=yield r.get(In).createModelReference(t);try{let a={incomplete:!1,suggestions:[]},l=[],c=yield Yf(s.object.textEditorModel,q.lift(n),void 0,{triggerCharacter:i,triggerKind:i?1:0});for(let d of c.items)l.length<(o!=null?o:0)&&l.push(d.resolve(ue.None)),a.incomplete=a.incomplete||d.container.incomplete,a.suggestions.push(d.completion);try{return yield Promise.all(l),a}finally{setTimeout(()=>c.disposable.dispose(),100)}}finally{s.dispose()}}));var Xf=new class{constructor(){this.onlyOnceSuggestions=[]}provideCompletionItems(){let e={suggestions:this.onlyOnceSuggestions.slice(0)};return this.onlyOnceSuggestions.length=0,e}};mo.register("*",Xf);function yw(r,e){setTimeout(()=>{Xf.onlyOnceSuggestions.push(...e),r.getContribution("editor.contrib.suggestController").triggerSuggest(new Set().add(Xf))},0)}ne();Te();Eh();var uP=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},bw=function(r,e){return function(t,n){e(t,n,r)}},Sw={overwriteBefore:0,overwriteAfter:0,undoStopBefore:!0,undoStopAfter:!0,adjustWhitespace:!0,clipboardText:void 0,overtypingCapturer:void 0},vt=class Xd{constructor(e,t,n){this._editor=e,this._logService=t,this._snippetListener=new R,this._modelVersionId=-1,this._inSnippet=Xd.InSnippetMode.bindTo(n),this._hasNextTabstop=Xd.HasNextTabstop.bindTo(n),this._hasPrevTabstop=Xd.HasPrevTabstop.bindTo(n)}static get(e){return e.getContribution(Xd.ID)}dispose(){var e;this._inSnippet.reset(),this._hasPrevTabstop.reset(),this._hasNextTabstop.reset(),(e=this._session)===null||e===void 0||e.dispose(),this._snippetListener.dispose()}insert(e,t){try{this._doInsert(e,typeof t=="undefined"?Sw:Object.assign(Object.assign({},Sw),t))}catch(n){this.cancel(),this._logService.error(n),this._logService.error("snippet_error"),this._logService.error("insert_template=",e),this._logService.error("existing_template=",this._session?this._session._logInfo():"<no_session>")}}_doInsert(e,t){!this._editor.hasModel()||(this._snippetListener.clear(),t.undoStopBefore&&this._editor.getModel().pushStackElement(),this._session?this._session.merge(e,t):(this._modelVersionId=this._editor.getModel().getAlternativeVersionId(),this._session=new Gn(this._editor,e,t),this._session.insert()),t.undoStopAfter&&this._editor.getModel().pushStackElement(),this._updateState(),this._snippetListener.add(this._editor.onDidChangeModelContent(n=>n.isFlush&&this.cancel())),this._snippetListener.add(this._editor.onDidChangeModel(()=>this.cancel())),this._snippetListener.add(this._editor.onDidChangeCursorSelection(()=>this._updateState())))}_updateState(){if(!(!this._session||!this._editor.hasModel())){if(this._modelVersionId===this._editor.getModel().getAlternativeVersionId())return this.cancel();if(!this._session.hasPlaceholder)return this.cancel();if(this._session.isAtLastPlaceholder||!this._session.isSelectionWithinPlaceholders())return this.cancel();this._inSnippet.set(!0),this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder),this._hasNextTabstop.set(!this._session.isAtLastPlaceholder),this._handleChoice()}}_handleChoice(){if(!this._session||!this._editor.hasModel()){this._currentChoice=void 0;return}let{choice:e}=this._session;if(!e){this._currentChoice=void 0;return}if(this._currentChoice!==e){this._currentChoice=e,this._editor.setSelections(this._editor.getSelections().map(n=>Z.fromPositions(n.getStartPosition())));let[t]=e.options;yw(this._editor,e.options.map((n,i)=>({kind:13,label:n.value,insertText:n.value,sortText:"a".repeat(i+1),range:C.fromPositions(this._editor.getPosition(),this._editor.getPosition().delta(0,t.value.length))})))}}finish(){for(;this._inSnippet.get();)this.next()}cancel(e=!1){var t;this._inSnippet.reset(),this._hasPrevTabstop.reset(),this._hasNextTabstop.reset(),this._snippetListener.clear(),(t=this._session)===null||t===void 0||t.dispose(),this._session=void 0,this._modelVersionId=-1,e&&this._editor.setSelections([this._editor.getSelection()])}prev(){this._session&&this._session.prev(),this._updateState()}next(){this._session&&this._session.next(),this._updateState()}isInSnippet(){return Boolean(this._inSnippet.get())}};vt.ID="snippetController2";vt.InSnippetMode=new de("inSnippetMode",!1,u("inSnippetMode","Whether the editor in current in snippet mode"));vt.HasNextTabstop=new de("hasNextTabstop",!1,u("hasNextTabstop","Whether there is a next tab stop when in snippet mode"));vt.HasPrevTabstop=new de("hasPrevTabstop",!1,u("hasPrevTabstop","Whether there is a previous tab stop when in snippet mode"));vt=uP([bw(1,ir),bw(2,Q)],vt);J(vt.ID,vt);var lp=it.bindToContribution(vt.get);K(new lp({id:"jumpToNextSnippetPlaceholder",precondition:O.and(vt.InSnippetMode,vt.HasNextTabstop),handler:r=>r.next(),kbOpts:{weight:100+30,kbExpr:x.editorTextFocus,primary:2}}));K(new lp({id:"jumpToPrevSnippetPlaceholder",precondition:O.and(vt.InSnippetMode,vt.HasPrevTabstop),handler:r=>r.prev(),kbOpts:{weight:100+30,kbExpr:x.editorTextFocus,primary:1026}}));K(new lp({id:"leaveSnippet",precondition:vt.InSnippetMode,handler:r=>r.cancel(!0),kbOpts:{weight:100+30,kbExpr:x.editorTextFocus,primary:9,secondary:[1033]}}));K(new lp({id:"acceptSnippet",precondition:vt.InSnippetMode,handler:r=>r.finish()}));Oe();U();na();Pe();nr();jl();Ke();var pP=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},vw=function(r,e){return function(t,n){e(t,n,r)}},cp=class{constructor(e){this.name=e}select(e,t,n){if(n.length===0)return 0;let i=n[0].score[0];for(let o=0;o<n.length;o++){let{score:s,completion:a}=n[o];if(s[0]!==i)break;if(a.preselect)return o}return 0}},Qf=class extends cp{constructor(){super("first")}memorize(e,t,n){}toJSON(){}fromJSON(){}},xw=class extends cp{constructor(){super("recentlyUsed");this._cache=new Ri(300,.66),this._seq=0}memorize(e,t,n){let i=`${e.getLanguageId()}/${n.textLabel}`;this._cache.set(i,{touch:this._seq++,type:n.completion.kind,insertText:n.completion.insertText})}select(e,t,n){if(n.length===0)return 0;let i=e.getLineContent(t.lineNumber).substr(t.column-10,t.column-1);if(/\s$/.test(i))return super.select(e,t,n);let o=n[0].score[0],s=-1,a=-1,l=-1;for(let c=0;c<n.length&&n[c].score[0]===o;c++){let d=`${e.getLanguageId()}/${n[c].textLabel}`,h=this._cache.peek(d);if(h&&h.touch>l&&h.type===n[c].completion.kind&&h.insertText===n[c].completion.insertText&&(l=h.touch,a=c),n[c].completion.preselect&&s===-1)return s=c}return a!==-1?a:s!==-1?s:0}toJSON(){return this._cache.toJSON()}fromJSON(e){this._cache.clear();let t=0;for(let[n,i]of e)i.touch=t,i.type=typeof i.type=="number"?i.type:wm(i.type),this._cache.set(n,i);this._seq=this._cache.size}},Cw=class extends cp{constructor(){super("recentlyUsedByPrefix");this._trie=DS.forStrings(),this._seq=0}memorize(e,t,n){let{word:i}=e.getWordUntilPosition(t),o=`${e.getLanguageId()}/${i}`;this._trie.set(o,{type:n.completion.kind,insertText:n.completion.insertText,touch:this._seq++})}select(e,t,n){let{word:i}=e.getWordUntilPosition(t);if(!i)return super.select(e,t,n);let o=`${e.getLanguageId()}/${i}`,s=this._trie.get(o);if(s||(s=this._trie.findSubstr(o)),s)for(let a=0;a<n.length;a++){let{kind:l,insertText:c}=n[a].completion;if(l===s.type&&c===s.insertText)return a}return super.select(e,t,n)}toJSON(){let e=[];return this._trie.forEach((t,n)=>e.push([n,t])),e.sort((t,n)=>-(t[1].touch-n[1].touch)).forEach((t,n)=>t[1].touch=n),e.slice(0,200)}fromJSON(e){if(this._trie.clear(),e.length>0){this._seq=e[0][1].touch+1;for(let[t,n]of e)n.type=typeof n.type=="number"?n.type:wm(n.type),this._trie.set(t,n)}}},Yd=class dp{constructor(e,t){this._storageService=e,this._configService=t,this._disposables=new R,this._persistSoon=new Xe(()=>this._saveState(),500),this._disposables.add(e.onWillSaveState(n=>{n.reason===uu.SHUTDOWN&&this._saveState()}))}dispose(){this._disposables.dispose(),this._persistSoon.dispose()}memorize(e,t,n){this._withStrategy(e,t).memorize(e,t,n),this._persistSoon.schedule()}select(e,t,n){return this._withStrategy(e,t).select(e,t,n)}_withStrategy(e,t){var n;let i=this._configService.getValue("editor.suggestSelection",{overrideIdentifier:e.getLanguageIdAtPosition(t.lineNumber,t.column),resource:e.uri});if(((n=this._strategy)===null||n===void 0?void 0:n.name)!==i){this._saveState();let o=dp._strategyCtors.get(i)||Qf;this._strategy=new o;try{let a=this._configService.getValue("editor.suggest.shareSuggestSelections")?0:1,l=this._storageService.get(`${dp._storagePrefix}/${i}`,a);l&&this._strategy.fromJSON(JSON.parse(l))}catch(s){}}return this._strategy}_saveState(){if(this._strategy){let t=this._configService.getValue("editor.suggest.shareSuggestSelections")?0:1,n=JSON.stringify(this._strategy);this._storageService.store(`${dp._storagePrefix}/${this._strategy.name}`,n,t,1)}}};Yd._strategyCtors=new Map([["recentlyUsedByPrefix",Cw],["recentlyUsed",xw],["first",Qf]]);Yd._storagePrefix="suggest/memories";Yd=pP([vw(0,en),vw(1,hn)],Yd);var ey=Pi("ISuggestMemories");zi(ey,Yd,!0);Te();var mP=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},gP=function(r,e){return function(t,n){e(t,n,r)}},Oa=class _w{constructor(e,t){this._editor=e,this._enabled=!1,this._ckAtEnd=_w.AtEnd.bindTo(t),this._configListener=this._editor.onDidChangeConfiguration(n=>n.hasChanged(110)&&this._update()),this._update()}dispose(){var e;this._configListener.dispose(),(e=this._selectionListener)===null||e===void 0||e.dispose(),this._ckAtEnd.reset()}_update(){let e=this._editor.getOption(110)==="on";if(this._enabled!==e)if(this._enabled=e,this._enabled){let t=()=>{if(!this._editor.hasModel()){this._ckAtEnd.set(!1);return}let n=this._editor.getModel(),i=this._editor.getSelection(),o=n.getWordAtPosition(i.getStartPosition());if(!o){this._ckAtEnd.set(!1);return}this._ckAtEnd.set(o.endColumn===i.getStartPosition().column)};this._selectionListener=this._editor.onDidChangeCursorSelection(t),t()}else this._selectionListener&&(this._ckAtEnd.reset(),this._selectionListener.dispose(),this._selectionListener=void 0)}};Oa.AtEnd=new de("atEndOfWord",!1);Oa=mP([gP(1,Q)],Oa);ne();un();bt();Te();Ke();Ul();Eh();Te();var fP=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},yP=function(r,e){return function(t,n){e(t,n,r)}},vr=class hp{constructor(e,t){this._editor=e,this._index=0,this._ckOtherSuggestions=hp.OtherSuggestions.bindTo(t)}dispose(){this.reset()}reset(){var e;this._ckOtherSuggestions.reset(),(e=this._listener)===null||e===void 0||e.dispose(),this._model=void 0,this._acceptNext=void 0,this._ignore=!1}set({model:e,index:t},n){if(e.items.length===0){this.reset();return}if(hp._moveIndex(!0,e,t)===t){this.reset();return}this._acceptNext=n,this._model=e,this._index=t,this._listener=this._editor.onDidChangeCursorPosition(()=>{this._ignore||this.reset()}),this._ckOtherSuggestions.set(!0)}static _moveIndex(e,t,n){let i=n;for(;i=(i+t.items.length+(e?1:-1))%t.items.length,!(i===n||!t.items[i].completion.additionalTextEdits););return i}next(){this._move(!0)}prev(){this._move(!1)}_move(e){if(!!this._model)try{this._ignore=!0,this._index=hp._moveIndex(e,this._model,this._index),this._acceptNext({index:this._index,item:this._model.items[this._index],model:this._model})}finally{this._ignore=!1}}};vr.OtherSuggestions=new de("hasOtherSuggestions",!1);vr=fP([yP(1,Q)],vr);mt();U();Mm();var ty=class{constructor(e,t,n){this._disposables=new R,this._disposables.add(t.onDidShow(()=>this._onItem(t.getFocusedItem()))),this._disposables.add(t.onDidFocus(this._onItem,this)),this._disposables.add(t.onDidHide(this.reset,this)),this._disposables.add(e.onWillType(i=>{if(this._active&&!t.isFrozen()){let o=i.charCodeAt(i.length-1);this._active.acceptCharacters.has(o)&&e.getOption(0)&&n(this._active.item)}}))}_onItem(e){if(!e||!Tt(e.item.completion.commitCharacters)){this.reset();return}if(this._active&&this._active.item.item===e.item)return;let t=new go;for(let n of e.item.completion.commitCharacters)n.length>0&&t.add(n.charCodeAt(0));this._active={acceptCharacters:t,item:e}}reset(){this._active=void 0}dispose(){this._disposables.dispose()}};Oe();at();ke();Ae();U();Ze();wt();Pe();Pm();mt();te();eS();rt();te();var bP=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},nn=class{provideSelectionRanges(e,t){return bP(this,void 0,void 0,function*(){let n=[];for(let i of t){let o=[];n.push(o);let s=new Map;yield new Promise(a=>nn._bracketsRightYield(a,0,e,i,s)),yield new Promise(a=>nn._bracketsLeftYield(a,0,e,i,s,o))}return n})}static _bracketsRightYield(e,t,n,i,o){let s=new Map,a=Date.now();for(;;){if(t>=nn._maxRounds){e();break}if(!i){e();break}let l=n.findNextBracket(i);if(!l){e();break}if(Date.now()-a>nn._maxDuration){setTimeout(()=>nn._bracketsRightYield(e,t+1,n,i,o));break}let d=l.close[0];if(l.isOpen){let h=s.has(d)?s.get(d):0;s.set(d,h+1)}else{let h=s.has(d)?s.get(d):0;if(h-=1,s.set(d,Math.max(0,h)),h<0){let p=o.get(d);p||(p=new sh,o.set(d,p)),p.push(l.range)}}i=l.range.getEndPosition()}}static _bracketsLeftYield(e,t,n,i,o,s){let a=new Map,l=Date.now();for(;;){if(t>=nn._maxRounds&&o.size===0){e();break}if(!i){e();break}let c=n.findPrevBracket(i);if(!c){e();break}if(Date.now()-l>nn._maxDuration){setTimeout(()=>nn._bracketsLeftYield(e,t+1,n,i,o,s));break}let h=c.close[0];if(c.isOpen){let p=a.has(h)?a.get(h):0;if(p-=1,a.set(h,Math.max(0,p)),p<0){let g=o.get(h);if(g){let y=g.shift();g.size===0&&o.delete(h);let v=C.fromPositions(c.range.getEndPosition(),y.getStartPosition()),w=C.fromPositions(c.range.getStartPosition(),y.getEndPosition());s.push({range:v}),s.push({range:w}),nn._addBracketLeading(n,w,s)}}}else{let p=a.has(h)?a.get(h):0;a.set(h,p+1)}i=c.range.getStartPosition()}}static _addBracketLeading(e,t,n){if(t.startLineNumber===t.endLineNumber)return;let i=t.startLineNumber,o=e.getLineFirstNonWhitespaceColumn(i);o!==0&&o!==t.startColumn&&(n.push({range:C.fromPositions(new q(i,o),t.getEndPosition())}),n.push({range:C.fromPositions(new q(i,1),t.getEndPosition())}));let s=i-1;if(s>0){let a=e.getLineFirstNonWhitespaceColumn(s);a===t.startColumn&&a!==e.getLineLastNonWhitespaceColumn(s)&&(n.push({range:C.fromPositions(new q(s,a),t.getEndPosition())}),n.push({range:C.fromPositions(new q(s,1),t.getEndPosition())}))}}};nn._maxDuration=30;nn._maxRounds=2;var SP=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},li=class{static create(e,t){return SP(this,void 0,void 0,function*(){if(!t.getOption(105).localityBonus||!t.hasModel())return li.None;let n=t.getModel(),i=t.getPosition();if(!e.canComputeWordRanges(n.uri))return li.None;let[o]=yield new nn().provideSelectionRanges(n,[i]);if(o.length===0)return li.None;let s=yield e.computeWordRanges(n.uri,o[0].range);if(!s)return li.None;let a=n.getWordUntilPosition(i);return delete s[a.word],new class extends li{distance(l,c){if(!i.equals(t.getPosition()))return 0;if(c.kind===17)return 2<<20;let d=typeof c.label=="string"?c.label:c.label.label,h=s[d];if(lv(h))return 2<<20;let p=_h(h,C.fromPositions(l),C.compareRangesUsingStarts),g=p>=0?h[p]:h[Math.max(0,~p-1)],y=o.length;for(let v of o){if(!C.containsRange(v.range,g))break;y-=1}return y}}})}};li.None=new class extends li{distance(){return 0}};nr();Te();Eh();Fh();mt();Ze();var Do=class{constructor(e,t,n,i,o,s,a){this.clipboardText=a,this._snippetCompareFn=Do._compareCompletionItems,this._items=e,this._column=t,this._wordDistance=i,this._options=o,this._refilterKind=1,this._lineContext=n,s==="top"?this._snippetCompareFn=Do._compareCompletionItemsSnippetsUp:s==="bottom"&&(this._snippetCompareFn=Do._compareCompletionItemsSnippetsDown)}get lineContext(){return this._lineContext}set lineContext(e){(this._lineContext.leadingLineContent!==e.leadingLineContent||this._lineContext.characterCountDelta!==e.characterCountDelta)&&(this._refilterKind=this._lineContext.characterCountDelta<e.characterCountDelta&&this._filteredItems?2:1,this._lineContext=e)}get items(){return this._ensureCachedState(),this._filteredItems}get allProvider(){return this._ensureCachedState(),this._providerInfo.keys()}get incomplete(){this._ensureCachedState();let e=new Set;for(let[t,n]of this._providerInfo)n&&e.add(t);return e}adopt(e){let t=[];for(let n=0;n<this._items.length;)e.has(this._items[n].provider)?n++:(t.push(this._items[n]),this._items[n]=this._items[this._items.length-1],this._items.pop());return this._refilterKind=1,t}get stats(){return this._ensureCachedState(),this._stats}_ensureCachedState(){this._refilterKind!==0&&this._createCachedState()}_createCachedState(){this._providerInfo=new Map;let e=[],{leadingLineContent:t,characterCountDelta:n}=this._lineContext,i="",o="",s=this._refilterKind===1?this._items:this._filteredItems,a=[],l=!this._options.filterGraceful||s.length>2e3?cu:Rx;for(let c=0;c<s.length;c++){let d=s[c];if(d.isInvalid)continue;this._providerInfo.set(d.provider,Boolean(d.container.incomplete));let h=d.position.column-d.editStart.column,p=h+n-(d.position.column-this._column);if(i.length!==p&&(i=p===0?"":t.slice(-p),o=i.toLowerCase()),d.word=i,p===0)d.score=ts.Default;else{let g=0;for(;g<h;){let y=i.charCodeAt(g);if(y===32||y===9)g+=1;else break}if(g>=p)d.score=ts.Default;else if(typeof d.completion.filterText=="string"){let y=l(i,o,g,d.completion.filterText,d.filterTextLow,0,!1);if(!y)continue;ES(d.completion.filterText,d.textLabel)===0?d.score=y:(d.score=Dx(i,o,g,d.textLabel,d.labelLow,0),d.score[0]=y[0])}else{let y=l(i,o,g,d.textLabel,d.labelLow,0,!1);if(!y)continue;d.score=y}}d.idx=c,d.distance=this._wordDistance.distance(d.position,d.completion),a.push(d),e.push(d.textLabel.length)}this._filteredItems=a.sort(this._snippetCompareFn),this._refilterKind=0,this._stats={pLabelLen:e.length?av(e.length-.85,e,(c,d)=>c-d):0}}static _compareCompletionItems(e,t){return e.score[0]>t.score[0]?-1:e.score[0]<t.score[0]?1:e.distance<t.distance?-1:e.distance>t.distance?1:e.idx<t.idx?-1:e.idx>t.idx?1:0}static _compareCompletionItemsSnippetsDown(e,t){if(e.completion.kind!==t.completion.kind){if(e.completion.kind===27)return 1;if(t.completion.kind===27)return-1}return Do._compareCompletionItems(e,t)}static _compareCompletionItemsSnippetsUp(e,t){if(e.completion.kind!==t.completion.kind){if(e.completion.kind===27)return-1;if(t.completion.kind===27)return 1}return Do._compareCompletionItems(e,t)}};var vP=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},Ha=function(r,e){return function(t,n){e(t,n,r)}},xP=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},Ss=class{constructor(e,t,n,i){this.leadingLineContent=e.getLineContent(t.lineNumber).substr(0,t.column-1),this.leadingWord=e.getWordUntilPosition(t),this.lineNumber=t.lineNumber,this.column=t.column,this.auto=n,this.shy=i}static shouldAutoTrigger(e){if(!e.hasModel())return!1;let t=e.getModel(),n=e.getPosition();t.tokenizeIfCheap(n.lineNumber);let i=t.getWordAtPosition(n);return!(!i||i.endColumn!==n.column||!isNaN(Number(i.word)))}};function CP(r,e,t){if(!Boolean(e.getContextKeyValue("inlineSuggestionVisible")))return!0;let n=t.getValue("editor.inlineSuggest.allowQuickSuggestions");return n!==void 0?Boolean(n):!1}function _P(r,e,t){if(!Boolean(e.getContextKeyValue("inlineSuggestionVisible")))return!0;let n=t.getValue("editor.inlineSuggest.allowSuggestOnTriggerCharacters");return n!==void 0?Boolean(n):!1}var up=class ww{constructor(e,t,n,i,o,s,a){this._editor=e,this._editorWorkerService=t,this._clipboardService=n,this._telemetryService=i,this._logService=o,this._contextKeyService=s,this._configurationService=a,this._toDispose=new R,this._quickSuggestDelay=10,this._triggerCharacterListener=new R,this._triggerQuickSuggest=new Cn,this._state=0,this._completionDisposables=new R,this._onDidCancel=new $,this._onDidTrigger=new $,this._onDidSuggest=new $,this.onDidCancel=this._onDidCancel.event,this.onDidTrigger=this._onDidTrigger.event,this.onDidSuggest=this._onDidSuggest.event,this._telemetryGate=0,this._currentSelection=this._editor.getSelection()||new Z(1,1,1,1),this._toDispose.add(this._editor.onDidChangeModel(()=>{this._updateTriggerCharacters(),this.cancel()})),this._toDispose.add(this._editor.onDidChangeModelLanguage(()=>{this._updateTriggerCharacters(),this.cancel()})),this._toDispose.add(this._editor.onDidChangeConfiguration(()=>{this._updateTriggerCharacters(),this._updateQuickSuggest()})),this._toDispose.add(mo.onDidChange(()=>{this._updateTriggerCharacters(),this._updateActiveSuggestSession()})),this._toDispose.add(this._editor.onDidChangeCursorSelection(c=>{this._onCursorChange(c)}));let l=!1;this._toDispose.add(this._editor.onDidCompositionStart(()=>{l=!0})),this._toDispose.add(this._editor.onDidCompositionEnd(()=>{l=!1,this._onCompositionEnd()})),this._toDispose.add(this._editor.onDidChangeModelContent(()=>{l||this._refilterCompletionItems()})),this._updateTriggerCharacters(),this._updateQuickSuggest()}dispose(){ht(this._triggerCharacterListener),ht([this._onDidCancel,this._onDidSuggest,this._onDidTrigger,this._triggerQuickSuggest]),this._toDispose.dispose(),this._completionDisposables.dispose(),this.cancel()}_updateQuickSuggest(){this._quickSuggestDelay=this._editor.getOption(79),(isNaN(this._quickSuggestDelay)||!this._quickSuggestDelay&&this._quickSuggestDelay!==0||this._quickSuggestDelay<0)&&(this._quickSuggestDelay=10)}_updateTriggerCharacters(){if(this._triggerCharacterListener.clear(),this._editor.getOption(80)||!this._editor.hasModel()||!this._editor.getOption(108))return;let e=new Map;for(let n of mo.all(this._editor.getModel()))for(let i of n.triggerCharacters||[]){let o=e.get(i);o||(o=new Set,o.add(gw()),e.set(i,o)),o.add(n)}let t=n=>{if(!_P(this._editor,this._contextKeyService,this._configurationService)||Ss.shouldAutoTrigger(this._editor))return;if(!n){let s=this._editor.getPosition();n=this._editor.getModel().getLineContent(s.lineNumber).substr(0,s.column-1)}let i="";kS(n.charCodeAt(n.length-1))?IS(n.charCodeAt(n.length-2))&&(i=n.substr(n.length-2)):i=n.charAt(n.length-1);let o=e.get(i);if(o){let s=this._completionModel?{items:this._completionModel.adopt(o),clipboardText:this._completionModel.clipboardText}:void 0;this.trigger({auto:!0,shy:!1,triggerCharacter:i},Boolean(this._completionModel),o,s)}};this._triggerCharacterListener.add(this._editor.onDidType(t)),this._triggerCharacterListener.add(this._editor.onDidCompositionEnd(t))}get state(){return this._state}cancel(e=!1){var t;this._state!==0&&(this._triggerQuickSuggest.cancel(),(t=this._requestToken)===null||t===void 0||t.cancel(),this._requestToken=void 0,this._state=0,this._completionModel=void 0,this._context=void 0,this._onDidCancel.fire({retrigger:e}))}clear(){this._completionDisposables.clear()}_updateActiveSuggestSession(){this._state!==0&&(!this._editor.hasModel()||!mo.has(this._editor.getModel())?this.cancel():this.trigger({auto:this._state===2,shy:!1},!0))}_onCursorChange(e){if(!this._editor.hasModel())return;let t=this._currentSelection;if(this._currentSelection=this._editor.getSelection(),!e.selection.isEmpty()||e.reason!==0&&e.reason!==3||e.source!=="keyboard"&&e.source!=="deleteLeft"){this.cancel();return}this._state===0&&e.reason===0?(t.containsRange(this._currentSelection)||t.getEndPosition().isBeforeOrEqual(this._currentSelection.getPosition()))&&this._doTriggerQuickSuggest():this._state!==0&&e.reason===3&&this._refilterCompletionItems()}_onCompositionEnd(){this._state===0?this._doTriggerQuickSuggest():this._refilterCompletionItems()}_doTriggerQuickSuggest(){this._editor.getOption(78)!==!1&&(this._editor.getOption(105).snippetsPreventQuickSuggestions&&vt.get(this._editor).isInSnippet()||(this.cancel(),this._triggerQuickSuggest.cancelAndSet(()=>{if(this._state!==0||!Ss.shouldAutoTrigger(this._editor)||!this._editor.hasModel())return;let e=this._editor.getModel(),t=this._editor.getPosition(),n=this._editor.getOption(78);if(n!==!1){if(n!==!0){e.tokenizeIfCheap(t.lineNumber);let i=e.getLineTokens(t.lineNumber),o=i.getStandardTokenType(i.findTokenIndexAtOffset(Math.max(t.column-1-1,0)));if(!(n.other&&o===0||n.comments&&o===1||n.strings&&o===2))return}!CP(this._editor,this._contextKeyService,this._configurationService)||!mo.has(e)||this.trigger({auto:!0,shy:!1})}},this._quickSuggestDelay)))}_refilterCompletionItems(){Promise.resolve().then(()=>{if(this._state===0||!this._editor.hasModel())return;let e=this._editor.getModel(),t=this._editor.getPosition(),n=new Ss(e,t,this._state===2,!1);this._onNewContext(n)})}trigger(e,t=!1,n,i){var o;if(!this._editor.hasModel())return;let s=this._editor.getModel(),a=e.auto,l=new Ss(s,this._editor.getPosition(),a,e.shy);this.cancel(t),this._state=a?2:1,this._onDidTrigger.fire({auto:a,shy:e.shy,position:this._editor.getPosition()}),this._context=l;let c={triggerKind:(o=e.triggerKind)!==null&&o!==void 0?o:0};e.triggerCharacter&&(c={triggerKind:1,triggerCharacter:e.triggerCharacter}),this._requestToken=new Zt;let d=this._editor.getOption(100),h=1;switch(d){case"top":h=0;break;case"bottom":h=2;break}let{itemKind:p,showDeprecated:g}=ww._createSuggestFilter(this._editor),y=li.create(this._editorWorkerService,this._editor),v=Yf(s,this._editor.getPosition(),new za(h,p,n,g),c,this._requestToken.token);Promise.all([v,y]).then(([w,F])=>xP(this,void 0,void 0,function*(){var M;if((M=this._requestToken)===null||M===void 0||M.dispose(),!this._editor.hasModel())return;let z=i==null?void 0:i.clipboardText;if(!z&&w.needsClipboard&&(z=yield this._clipboardService.readText()),this._state===0)return;let V=this._editor.getModel(),G=w.items;if(i){let _e=Jf(h);G=G.concat(i.items).sort(_e)}let ze=new Ss(V,this._editor.getPosition(),a,e.shy);this._completionModel=new Do(G,this._context.column,{leadingLineContent:ze.leadingLineContent,characterCountDelta:ze.column-this._context.column},F,this._editor.getOption(105),this._editor.getOption(100),z),this._completionDisposables.add(w.disposable),this._onNewContext(ze),this._reportDurationsTelemetry(w.durations)})).catch(ae)}_reportDurationsTelemetry(e){this._telemetryGate++%230===0&&setTimeout(()=>{this._telemetryService.publicLog2("suggest.durations.json",{data:JSON.stringify(e)}),this._logService.debug("suggest.durations.json",e)})}static _createSuggestFilter(e){let t=new Set;e.getOption(100)==="none"&&t.add(27);let i=e.getOption(105);return i.showMethods||t.add(0),i.showFunctions||t.add(1),i.showConstructors||t.add(2),i.showFields||t.add(3),i.showVariables||t.add(4),i.showClasses||t.add(5),i.showStructs||t.add(6),i.showInterfaces||t.add(7),i.showModules||t.add(8),i.showProperties||t.add(9),i.showEvents||t.add(10),i.showOperators||t.add(11),i.showUnits||t.add(12),i.showValues||t.add(13),i.showConstants||t.add(14),i.showEnums||t.add(15),i.showEnumMembers||t.add(16),i.showKeywords||t.add(17),i.showWords||t.add(18),i.showColors||t.add(19),i.showFiles||t.add(20),i.showReferences||t.add(21),i.showColors||t.add(22),i.showFolders||t.add(23),i.showTypeParameters||t.add(24),i.showSnippets||t.add(27),i.showUsers||t.add(25),i.showIssues||t.add(26),{itemKind:t,showDeprecated:i.showDeprecated}}_onNewContext(e){if(!!this._context){if(e.lineNumber!==this._context.lineNumber){this.cancel();return}if(st(e.leadingLineContent)!==st(this._context.leadingLineContent)){this.cancel();return}if(e.column<this._context.column){e.leadingWord.word?this.trigger({auto:this._context.auto,shy:!1},!0):this.cancel();return}if(!!this._completionModel){if(e.leadingWord.word.length!==0&&e.leadingWord.startColumn>this._context.leadingWord.startColumn){let t=new Set(mo.all(this._editor.getModel()));for(let i of this._completionModel.allProvider)t.delete(i);let n=this._completionModel.adopt(new Set);this.trigger({auto:this._context.auto,shy:!1},!0,t,{items:n,clipboardText:this._completionModel.clipboardText});return}if(e.column>this._context.column&&this._completionModel.incomplete.size>0&&e.leadingWord.word.length!==0){let{incomplete:t}=this._completionModel,n=this._completionModel.adopt(t);this.trigger({auto:this._state===2,shy:!1,triggerKind:2},!0,t,{items:n,clipboardText:this._completionModel.clipboardText})}else{let t=this._completionModel.lineContext,n=!1;if(this._completionModel.lineContext={leadingLineContent:e.leadingLineContent,characterCountDelta:e.column-this._context.column},this._completionModel.items.length===0){if(Ss.shouldAutoTrigger(this._editor)&&this._context.leadingWord.endColumn<e.leadingWord.startColumn){this.trigger({auto:this._context.auto,shy:!1},!0);return}if(this._context.auto){this.cancel();return}else if(this._completionModel.lineContext=t,n=this._completionModel.items.length>0,n&&e.leadingWord.word.length===0){this.cancel();return}}this._onDidSuggest.fire({completionModel:this._completionModel,auto:this._context.auto,shy:this._context.shy,isFrozen:n})}}}}};up=vP([Ha(1,ca),Ha(2,Jr),Ha(3,ar),Ha(4,ir),Ha(5,Q),Ha(6,hn)],up);U();var Ba=class{constructor(e,t){this._disposables=new R,this._lastOvertyped=[],this._empty=!0,this._disposables.add(e.onWillType(()=>{if(!this._empty||!e.hasModel())return;let n=e.getSelections(),i=n.length,o=!1;for(let a=0;a<i;a++)if(!n[a].isEmpty()){o=!0;break}if(!o)return;this._lastOvertyped=[];let s=e.getModel();for(let a=0;a<i;a++){let l=n[a];if(s.getValueLengthInRange(l)>Ba._maxSelectionLength)return;this._lastOvertyped[a]={value:s.getValueInRange(l),multiline:l.startLineNumber!==l.endLineNumber}}this._empty=!1})),this._disposables.add(t.onDidCancel(n=>{!this._empty&&!n.retrigger&&(this._empty=!0)}))}getLastOvertypedInfo(e){if(!this._empty&&e>=0&&e<this._lastOvertyped.length)return this._lastOvertyped[e]}dispose(){this._disposables.dispose()}};Ba._maxSelectionLength=51200;Ne();Oe();ke();Ae();U();BL();Ze();Ne();U();ne();un();Te();Ke();var wP=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},ny=function(r,e){return function(t,n){e(t,n,r)}},mp=class extends ls{updateLabel(){let e=this._keybindingService.lookupKeybinding(this._action.id,this._contextKeyService);if(!e)return super.updateLabel();this.label&&(this.label.textContent=u("ddd","{0} ({1})",this._action.label,mp.symbolPrintEnter(e)))}static symbolPrintEnter(e){var t;return(t=e.getLabel())===null||t===void 0?void 0:t.replace(/\benter\b/gi,"\u23CE")}},pp=class{constructor(e,t,n,i){this._menuService=n,this._contextKeyService=i,this._menuDisposables=new R,this.element=H(e,W(".suggest-status-bar"));let o=s=>s instanceof sr?t.createInstance(mp,s,void 0):void 0;this._leftActions=new sd(this.element,{actionViewItemProvider:o}),this._rightActions=new sd(this.element,{actionViewItemProvider:o}),this._leftActions.domNode.classList.add("left"),this._rightActions.domNode.classList.add("right")}dispose(){this._menuDisposables.dispose(),this.element.remove()}show(){let e=this._menuService.createMenu(Yi,this._contextKeyService),t=()=>{let n=[],i=[];for(let[o,s]of e.getActions())o==="left"?n.push(...s):i.push(...s);this._leftActions.clear(),this._leftActions.push(n),this._rightActions.clear(),this._rightActions.push(i)};this._menuDisposables.add(e.onDidChange(()=>t())),this._menuDisposables.add(e)}hide(){this._menuDisposables.clear()}};pp=wP([ny(1,he),ny(2,Hi),ny(3,Q)],pp);Tn();ne();Je();Me();var TP=Y("symbolIcon.arrayForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.arrayForeground","The foreground color for array symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),EP=Y("symbolIcon.booleanForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.booleanForeground","The foreground color for boolean symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),IP=Y("symbolIcon.classForeground",{dark:"#EE9D28",light:"#D67E00",hc:"#EE9D28"},u("symbolIcon.classForeground","The foreground color for class symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),kP=Y("symbolIcon.colorForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.colorForeground","The foreground color for color symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),LP=Y("symbolIcon.constantForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.constantForeground","The foreground color for constant symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),PP=Y("symbolIcon.constructorForeground",{dark:"#B180D7",light:"#652D90",hc:"#B180D7"},u("symbolIcon.constructorForeground","The foreground color for constructor symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),MP=Y("symbolIcon.enumeratorForeground",{dark:"#EE9D28",light:"#D67E00",hc:"#EE9D28"},u("symbolIcon.enumeratorForeground","The foreground color for enumerator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),DP=Y("symbolIcon.enumeratorMemberForeground",{dark:"#75BEFF",light:"#007ACC",hc:"#75BEFF"},u("symbolIcon.enumeratorMemberForeground","The foreground color for enumerator member symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),RP=Y("symbolIcon.eventForeground",{dark:"#EE9D28",light:"#D67E00",hc:"#EE9D28"},u("symbolIcon.eventForeground","The foreground color for event symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),FP=Y("symbolIcon.fieldForeground",{dark:"#75BEFF",light:"#007ACC",hc:"#75BEFF"},u("symbolIcon.fieldForeground","The foreground color for field symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),AP=Y("symbolIcon.fileForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.fileForeground","The foreground color for file symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),NP=Y("symbolIcon.folderForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.folderForeground","The foreground color for folder symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),zP=Y("symbolIcon.functionForeground",{dark:"#B180D7",light:"#652D90",hc:"#B180D7"},u("symbolIcon.functionForeground","The foreground color for function symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),OP=Y("symbolIcon.interfaceForeground",{dark:"#75BEFF",light:"#007ACC",hc:"#75BEFF"},u("symbolIcon.interfaceForeground","The foreground color for interface symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),HP=Y("symbolIcon.keyForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.keyForeground","The foreground color for key symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),BP=Y("symbolIcon.keywordForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.keywordForeground","The foreground color for keyword symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),WP=Y("symbolIcon.methodForeground",{dark:"#B180D7",light:"#652D90",hc:"#B180D7"},u("symbolIcon.methodForeground","The foreground color for method symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),VP=Y("symbolIcon.moduleForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.moduleForeground","The foreground color for module symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),GP=Y("symbolIcon.namespaceForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.namespaceForeground","The foreground color for namespace symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),jP=Y("symbolIcon.nullForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.nullForeground","The foreground color for null symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),UP=Y("symbolIcon.numberForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.numberForeground","The foreground color for number symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),$P=Y("symbolIcon.objectForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.objectForeground","The foreground color for object symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),KP=Y("symbolIcon.operatorForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.operatorForeground","The foreground color for operator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),qP=Y("symbolIcon.packageForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.packageForeground","The foreground color for package symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),XP=Y("symbolIcon.propertyForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.propertyForeground","The foreground color for property symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),YP=Y("symbolIcon.referenceForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.referenceForeground","The foreground color for reference symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),ZP=Y("symbolIcon.snippetForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.snippetForeground","The foreground color for snippet symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),JP=Y("symbolIcon.stringForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.stringForeground","The foreground color for string symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),QP=Y("symbolIcon.structForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.structForeground","The foreground color for struct symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),eM=Y("symbolIcon.textForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.textForeground","The foreground color for text symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),tM=Y("symbolIcon.typeParameterForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.typeParameterForeground","The foreground color for type parameter symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),nM=Y("symbolIcon.unitForeground",{dark:ee,light:ee,hc:ee},u("symbolIcon.unitForeground","The foreground color for unit symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),iM=Y("symbolIcon.variableForeground",{dark:"#75BEFF",light:"#007ACC",hc:"#75BEFF"},u("symbolIcon.variableForeground","The foreground color for variable symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));ye((r,e)=>{let t=r.getColor(TP);t&&e.addRule(`${X.symbolArray.cssSelector} { color: ${t}; }`);let n=r.getColor(EP);n&&e.addRule(`${X.symbolBoolean.cssSelector} { color: ${n}; }`);let i=r.getColor(IP);i&&e.addRule(`${X.symbolClass.cssSelector} { color: ${i}; }`);let o=r.getColor(WP);o&&e.addRule(`${X.symbolMethod.cssSelector} { color: ${o}; }`);let s=r.getColor(kP);s&&e.addRule(`${X.symbolColor.cssSelector} { color: ${s}; }`);let a=r.getColor(LP);a&&e.addRule(`${X.symbolConstant.cssSelector} { color: ${a}; }`);let l=r.getColor(PP);l&&e.addRule(`${X.symbolConstructor.cssSelector} { color: ${l}; }`);let c=r.getColor(MP);c&&e.addRule(`
			${X.symbolValue.cssSelector},${X.symbolEnum.cssSelector} { color: ${c}; }`);let d=r.getColor(DP);d&&e.addRule(`${X.symbolEnumMember.cssSelector} { color: ${d}; }`);let h=r.getColor(RP);h&&e.addRule(`${X.symbolEvent.cssSelector} { color: ${h}; }`);let p=r.getColor(FP);p&&e.addRule(`${X.symbolField.cssSelector} { color: ${p}; }`);let g=r.getColor(AP);g&&e.addRule(`${X.symbolFile.cssSelector} { color: ${g}; }`);let y=r.getColor(NP);y&&e.addRule(`${X.symbolFolder.cssSelector} { color: ${y}; }`);let v=r.getColor(zP);v&&e.addRule(`${X.symbolFunction.cssSelector} { color: ${v}; }`);let w=r.getColor(OP);w&&e.addRule(`${X.symbolInterface.cssSelector} { color: ${w}; }`);let F=r.getColor(HP);F&&e.addRule(`${X.symbolKey.cssSelector} { color: ${F}; }`);let M=r.getColor(BP);M&&e.addRule(`${X.symbolKeyword.cssSelector} { color: ${M}; }`);let z=r.getColor(VP);z&&e.addRule(`${X.symbolModule.cssSelector} { color: ${z}; }`);let V=r.getColor(GP);V&&e.addRule(`${X.symbolNamespace.cssSelector} { color: ${V}; }`);let G=r.getColor(jP);G&&e.addRule(`${X.symbolNull.cssSelector} { color: ${G}; }`);let ze=r.getColor(UP);ze&&e.addRule(`${X.symbolNumber.cssSelector} { color: ${ze}; }`);let _e=r.getColor($P);_e&&e.addRule(`${X.symbolObject.cssSelector} { color: ${_e}; }`);let yt=r.getColor(KP);yt&&e.addRule(`${X.symbolOperator.cssSelector} { color: ${yt}; }`);let Pt=r.getColor(qP);Pt&&e.addRule(`${X.symbolPackage.cssSelector} { color: ${Pt}; }`);let Mt=r.getColor(XP);Mt&&e.addRule(`${X.symbolProperty.cssSelector} { color: ${Mt}; }`);let Rn=r.getColor(YP);Rn&&e.addRule(`${X.symbolReference.cssSelector} { color: ${Rn}; }`);let Go=r.getColor(ZP);Go&&e.addRule(`${X.symbolSnippet.cssSelector} { color: ${Go}; }`);let Fr=r.getColor(JP);Fr&&e.addRule(`${X.symbolString.cssSelector} { color: ${Fr}; }`);let pn=r.getColor(QP);pn&&e.addRule(`${X.symbolStruct.cssSelector} { color: ${pn}; }`);let ro=r.getColor(eM);ro&&e.addRule(`${X.symbolText.cssSelector} { color: ${ro}; }`);let jo=r.getColor(tM);jo&&e.addRule(`${X.symbolTypeParameter.cssSelector} { color: ${jo}; }`);let Bs=r.getColor(nM);Bs&&e.addRule(`${X.symbolUnit.cssSelector} { color: ${Bs}; }`);let Ws=r.getColor(iM);Ws&&e.addRule(`${X.symbolVariable.cssSelector} { color: ${Ws}; }`)});ne();Te();Ke();Je();Me();Ne();Ae();U();var Zd=class{constructor(){this._onDidWillResize=new $,this.onDidWillResize=this._onDidWillResize.event,this._onDidResize=new $,this.onDidResize=this._onDidResize.event,this._sashListener=new R,this._size=new tt(0,0),this._minSize=new tt(0,0),this._maxSize=new tt(Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER),this.domNode=document.createElement("div"),this._eastSash=new xo(this.domNode,{getVerticalSashLeft:()=>this._size.width},{orientation:0}),this._westSash=new xo(this.domNode,{getVerticalSashLeft:()=>0},{orientation:0}),this._northSash=new xo(this.domNode,{getHorizontalSashTop:()=>0},{orientation:1,orthogonalEdge:Jm.North}),this._southSash=new xo(this.domNode,{getHorizontalSashTop:()=>this._size.height},{orientation:1,orthogonalEdge:Jm.South}),this._northSash.orthogonalStartSash=this._westSash,this._northSash.orthogonalEndSash=this._eastSash,this._southSash.orthogonalStartSash=this._westSash,this._southSash.orthogonalEndSash=this._eastSash;let e,t=0,n=0;this._sashListener.add(_t.any(this._northSash.onDidStart,this._eastSash.onDidStart,this._southSash.onDidStart,this._westSash.onDidStart)(()=>{e===void 0&&(this._onDidWillResize.fire(),e=this._size,t=0,n=0)})),this._sashListener.add(_t.any(this._northSash.onDidEnd,this._eastSash.onDidEnd,this._southSash.onDidEnd,this._westSash.onDidEnd)(()=>{e!==void 0&&(e=void 0,t=0,n=0,this._onDidResize.fire({dimension:this._size,done:!0}))})),this._sashListener.add(this._eastSash.onDidChange(i=>{e&&(n=i.currentX-i.startX,this.layout(e.height+t,e.width+n),this._onDidResize.fire({dimension:this._size,done:!1,east:!0}))})),this._sashListener.add(this._westSash.onDidChange(i=>{e&&(n=-(i.currentX-i.startX),this.layout(e.height+t,e.width+n),this._onDidResize.fire({dimension:this._size,done:!1,west:!0}))})),this._sashListener.add(this._northSash.onDidChange(i=>{e&&(t=-(i.currentY-i.startY),this.layout(e.height+t,e.width+n),this._onDidResize.fire({dimension:this._size,done:!1,north:!0}))})),this._sashListener.add(this._southSash.onDidChange(i=>{e&&(t=i.currentY-i.startY,this.layout(e.height+t,e.width+n),this._onDidResize.fire({dimension:this._size,done:!1,south:!0}))})),this._sashListener.add(_t.any(this._eastSash.onDidReset,this._westSash.onDidReset)(i=>{this._preferredSize&&(this.layout(this._size.height,this._preferredSize.width),this._onDidResize.fire({dimension:this._size,done:!0}))})),this._sashListener.add(_t.any(this._northSash.onDidReset,this._southSash.onDidReset)(i=>{this._preferredSize&&(this.layout(this._preferredSize.height,this._size.width),this._onDidResize.fire({dimension:this._size,done:!0}))}))}dispose(){this._northSash.dispose(),this._southSash.dispose(),this._eastSash.dispose(),this._westSash.dispose(),this._sashListener.dispose(),this._onDidResize.dispose(),this._onDidWillResize.dispose(),this.domNode.remove()}enableSashes(e,t,n,i){this._northSash.state=e?3:0,this._eastSash.state=t?3:0,this._southSash.state=n?3:0,this._westSash.state=i?3:0}layout(e=this.size.height,t=this.size.width){let{height:n,width:i}=this._minSize,{height:o,width:s}=this._maxSize;e=Math.max(n,Math.min(o,e)),t=Math.max(i,Math.min(s,t));let a=new tt(t,e);tt.equals(a,this._size)||(this.domNode.style.height=e+"px",this.domNode.style.width=t+"px",this._size=a,this._northSash.layout(),this._eastSash.layout(),this._southSash.layout(),this._westSash.layout())}clearSashHoverState(){this._eastSash.clearSashHoverState(),this._westSash.clearSashHoverState(),this._northSash.clearSashHoverState(),this._southSash.clearSashHoverState()}get size(){return this._size}set maxSize(e){this._maxSize=e}get maxSize(){return this._maxSize}set minSize(e){this._minSize=e}get minSize(){return this._minSize}set preferredSize(e){this._preferredSize=e}get preferredSize(){return this._preferredSize}};Ml();Ne();Tn();Ae();U();Ys();ne();Ke();var oM=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},rM=function(r,e){return function(t,n){e(t,n,r)}};function Jd(r){return!!r&&Boolean(r.completion.documentation||r.completion.detail&&r.completion.detail!==r.completion.label)}var gp=class{constructor(e,t){this._editor=e,this._onDidClose=new $,this.onDidClose=this._onDidClose.event,this._onDidChangeContents=new $,this.onDidChangeContents=this._onDidChangeContents.event,this._disposables=new R,this._renderDisposeable=new R,this._borderWidth=1,this._size=new tt(330,0),this.domNode=W(".suggest-details"),this.domNode.classList.add("no-docs"),this._markdownRenderer=t.createInstance(Bn,{editor:e}),this._body=W(".body"),this._scrollbar=new Ta(this._body,{}),H(this.domNode,this._scrollbar.getDomNode()),this._disposables.add(this._scrollbar),this._header=H(this._body,W(".header")),this._close=H(this._header,W("span"+X.close.cssSelector)),this._close.title=u("details.close","Close"),this._type=H(this._header,W("p.type")),this._docs=H(this._body,W("p.docs")),this._configureFont(),this._disposables.add(this._editor.onDidChangeConfiguration(n=>{n.hasChanged(43)&&this._configureFont()}))}dispose(){this._disposables.dispose(),this._renderDisposeable.dispose()}_configureFont(){let e=this._editor.getOptions(),t=e.get(43),n=t.getMassagedFontFamily(lh?Yo.fontFamily:null),i=e.get(106)||t.fontSize,o=e.get(107)||t.lineHeight,s=t.fontWeight,a=`${i}px`,l=`${o}px`;this.domNode.style.fontSize=a,this.domNode.style.lineHeight=`${o/i}`,this.domNode.style.fontWeight=s,this.domNode.style.fontFeatureSettings=t.fontFeatureSettings,this._type.style.fontFamily=n,this._close.style.height=l,this._close.style.width=l}getLayoutInfo(){let e=this._editor.getOption(107)||this._editor.getOption(43).lineHeight,t=this._borderWidth,n=t*2;return{lineHeight:e,borderWidth:t,borderHeight:n,verticalPadding:22,horizontalPadding:14}}renderLoading(){this._type.textContent=u("loading","Loading..."),this._docs.textContent="",this.domNode.classList.remove("no-docs","no-type"),this.layout(this.size.width,this.getLayoutInfo().lineHeight*2),this._onDidChangeContents.fire(this)}renderItem(e,t){var n,i;this._renderDisposeable.clear();let{detail:o,documentation:s}=e.completion;if(t){let a="";a+=`score: ${e.score[0]}
`,a+=`prefix: ${(n=e.word)!==null&&n!==void 0?n:"(no prefix)"}
`,a+=`word: ${e.completion.filterText?e.completion.filterText+" (filterText)":e.textLabel}
`,a+=`distance: ${e.distance} (localityBonus-setting)
`,a+=`index: ${e.idx}, based on ${e.completion.sortText&&`sortText: "${e.completion.sortText}"`||"label"}
`,a+=`commit_chars: ${(i=e.completion.commitCharacters)===null||i===void 0?void 0:i.join("")}
`,s=new kn().appendCodeblock("empty",a),o=`Provider: ${e.provider._debugDisplayName}`}if(!t&&!Jd(e)){this.clearContents();return}if(this.domNode.classList.remove("no-docs","no-type"),o){let a=o.length>1e5?`${o.substr(0,1e5)}\u2026`:o;this._type.textContent=a,this._type.title=a,Qt(this._type),this._type.classList.toggle("auto-wrap",!/\r?\n^\s+/gmi.test(a))}else qn(this._type),this._type.title="",Rt(this._type),this.domNode.classList.add("no-type");if(qn(this._docs),typeof s=="string")this._docs.classList.remove("markdown-docs"),this._docs.textContent=s;else if(s){this._docs.classList.add("markdown-docs"),qn(this._docs);let a=this._markdownRenderer.render(s);this._docs.appendChild(a.element),this._renderDisposeable.add(a),this._renderDisposeable.add(this._markdownRenderer.onDidRenderAsync(()=>{this.layout(this._size.width,this._type.clientHeight+this._docs.clientHeight),this._onDidChangeContents.fire(this)}))}this.domNode.style.userSelect="text",this.domNode.tabIndex=-1,this._close.onmousedown=a=>{a.preventDefault(),a.stopPropagation()},this._close.onclick=a=>{a.preventDefault(),a.stopPropagation(),this._onDidClose.fire()},this._body.scrollTop=0,this.layout(this._size.width,this._type.clientHeight+this._docs.clientHeight),this._onDidChangeContents.fire(this)}clearContents(){this.domNode.classList.add("no-docs"),this._type.textContent="",this._docs.textContent=""}get size(){return this._size}layout(e,t){let n=new tt(e,t);tt.equals(n,this._size)||(this._size=n,gS(this.domNode,e,t)),this._scrollbar.scanDomNode()}scrollDown(e=8){this._body.scrollTop+=e}scrollUp(e=8){this._body.scrollTop-=e}scrollTop(){this._body.scrollTop=0}scrollBottom(){this._body.scrollTop=this._body.scrollHeight}pageDown(){this.scrollDown(80)}pageUp(){this.scrollUp(80)}set borderWidth(e){this._borderWidth=e}get borderWidth(){return this._borderWidth}};gp=oM([rM(1,he)],gp);var iy=class{constructor(e,t){this.widget=e,this._editor=t,this._disposables=new R,this._added=!1,this._resizable=new Zd,this._resizable.domNode.classList.add("suggest-details-container"),this._resizable.domNode.appendChild(e.domNode),this._resizable.enableSashes(!1,!0,!0,!1);let n,i,o=0,s=0;this._disposables.add(this._resizable.onDidWillResize(()=>{n=this._topLeft,i=this._resizable.size})),this._disposables.add(this._resizable.onDidResize(a=>{if(n&&i){this.widget.layout(a.dimension.width,a.dimension.height);let l=!1;a.west&&(s=i.width-a.dimension.width,l=!0),a.north&&(o=i.height-a.dimension.height,l=!0),l&&this._applyTopLeft({top:n.top+o,left:n.left+s})}a.done&&(n=void 0,i=void 0,o=0,s=0,this._userSize=a.dimension)})),this._disposables.add(this.widget.onDidChangeContents(()=>{var a;this._anchorBox&&this._placeAtAnchor(this._anchorBox,(a=this._userSize)!==null&&a!==void 0?a:this.widget.size)}))}dispose(){this._resizable.dispose(),this._disposables.dispose(),this.hide()}getId(){return"suggest.details"}getDomNode(){return this._resizable.domNode}getPosition(){return null}show(){this._added||(this._editor.addOverlayWidget(this),this.getDomNode().style.position="fixed",this._added=!0)}hide(e=!1){this._resizable.clearSashHoverState(),this._added&&(this._editor.removeOverlayWidget(this),this._added=!1,this._anchorBox=void 0,this._topLeft=void 0),e&&(this._userSize=void 0,this.widget.clearContents())}placeAtAnchor(e){var t;let n=Jt(e);this._anchorBox=n,this._placeAtAnchor(this._anchorBox,(t=this._userSize)!==null&&t!==void 0?t:this.widget.size)}_placeAtAnchor(e,t){var n;let i=ch(document.body),o=this.widget.getLayoutInfo(),s=new tt(220,2*o.lineHeight),a=e.top,l=function(){let M=i.width-(e.left+e.width+o.borderWidth+o.horizontalPadding),z=-o.borderWidth+e.left+e.width,V=new tt(M,i.height-e.top-o.borderHeight-o.verticalPadding),G=V.with(void 0,e.top+e.height-o.borderHeight-o.verticalPadding);return{top:a,left:z,fit:M-t.width,maxSizeTop:V,maxSizeBottom:G,minSize:s.with(Math.min(M,s.width))}}(),c=function(){let M=e.left-o.borderWidth-o.horizontalPadding,z=Math.max(o.horizontalPadding,e.left-t.width-o.borderWidth),V=new tt(M,i.height-e.top-o.borderHeight-o.verticalPadding),G=V.with(void 0,e.top+e.height-o.borderHeight-o.verticalPadding);return{top:a,left:z,fit:M-t.width,maxSizeTop:V,maxSizeBottom:G,minSize:s.with(Math.min(M,s.width))}}(),d=function(){let M=e.left,z=-o.borderWidth+e.top+e.height,V=new tt(e.width-o.borderHeight,i.height-e.top-e.height-o.verticalPadding);return{top:z,left:M,fit:V.height-t.height,maxSizeBottom:V,maxSizeTop:V,minSize:s.with(V.width)}}(),h=[l,c,d],p=(n=h.find(M=>M.fit>=0))!==null&&n!==void 0?n:h.sort((M,z)=>z.fit-M.fit)[0],g=e.top+e.height-o.borderHeight,y,v=t.height,w=Math.max(p.maxSizeTop.height,p.maxSizeBottom.height);v>w&&(v=w);let F;v<=p.maxSizeTop.height?(y=!0,F=p.maxSizeTop):(y=!1,F=p.maxSizeBottom),this._applyTopLeft({left:p.left,top:y?p.top:g-v}),this.getDomNode().style.position="fixed",this._resizable.enableSashes(!y,p===l,y,p!==l),this._resizable.minSize=p.minSize,this._resizable.maxSize=F,this._resizable.layout(v,Math.min(F.width,t.width)),this.widget.layout(this._resizable.size.width,this._resizable.size.height)}_applyTopLeft(e){this._topLeft=e,this.getDomNode().style.left=`${this._topLeft.left}px`,this.getDomNode().style.top=`${this._topLeft.top}px`}};Ml();Ne();mt();Tn();Ae();U();Ht();Ys();Pe();Rl();Nn();QL();var _i;(function(r){r[r.FILE=0]="FILE",r[r.FOLDER=1]="FOLDER",r[r.ROOT_FOLDER=2]="ROOT_FOLDER"})(_i||(_i={}));function Qd(r,e,t,n){let i=n===_i.ROOT_FOLDER?["rootfolder-icon"]:n===_i.FOLDER?["folder-icon"]:["file-icon"];if(t){let o;if(t.scheme===ut.data?o=Nl.parseMetaData(t).get(Nl.META_DATA_LABEL):o=Tw(mh(t).toLowerCase()),n===_i.FOLDER)i.push(`${o}-name-folder-icon`);else{if(o){if(i.push(`${o}-name-file-icon`),o.length<=255){let a=o.split(".");for(let l=1;l<a.length;l++)i.push(`${a.slice(l).join(".")}-ext-file-icon`)}i.push("ext-file-icon")}let s=sM(r,e,t);s&&i.push(`${Tw(s)}-lang-file-icon`)}}return i}function sM(r,e,t){if(!t)return null;let n=null;if(t.scheme===ut.data){let o=Nl.parseMetaData(t).get(Nl.META_DATA_MIME);o&&(n=e.getModeId(o))}else{let i=r.getModel(t);i&&(n=i.getLanguageId())}return n&&n!==bx?n:e.getModeIdByFilepathOrFirstLine(t)}function Tw(r){return r.replace(/[\11\12\14\15\40]/g,"/")}Qo();Ni();ne();Me();var aM=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},oy=function(r,e){return function(t,n){e(t,n,r)}},ec;function sy(r){return`suggest-aria-id:${r}`}var lM=At("suggest-more-info",X.chevronRight,u("suggestMoreInfoIcon","Icon for more information in the suggest widget.")),dM=new(ec=class fp{extract(e,t){if(e.textLabel.match(fp._regexStrict))return t[0]=e.textLabel,!0;if(e.completion.detail&&e.completion.detail.match(fp._regexStrict))return t[0]=e.completion.detail,!0;if(typeof e.completion.documentation=="string"){let n=fp._regexRelaxed.exec(e.completion.documentation);if(n&&(n.index===0||n.index+n[0].length===e.completion.documentation.length))return t[0]=n[0],!0}return!1}},ec._regexRelaxed=/(#([\da-fA-F]{3}){1,2}|(rgb|hsl)a\(\s*(\d{1,3}%?\s*,\s*){3}(1|0?\.\d+)\)|(rgb|hsl)\(\s*\d{1,3}%?(\s*,\s*\d{1,3}%?){2}\s*\))/,ec._regexStrict=new RegExp(`^${ec._regexRelaxed.source}$`,"i"),ec),yp=class{constructor(e,t,n,i){this._editor=e,this._modelService=t,this._modeService=n,this._themeService=i,this._onDidToggleDetails=new $,this.onDidToggleDetails=this._onDidToggleDetails.event,this.templateId="suggestion"}dispose(){this._onDidToggleDetails.dispose()}renderTemplate(e){let t=Object.create(null);t.disposables=new R,t.root=e,t.root.classList.add("show-file-icons"),t.icon=H(e,W(".icon")),t.colorspan=H(t.icon,W("span.colorspan"));let n=H(e,W(".contents")),i=H(n,W(".main"));t.iconContainer=H(i,W(".icon-label.codicon")),t.left=H(i,W("span.left")),t.right=H(i,W("span.right")),t.iconLabel=new yu(t.left,{supportHighlights:!0,supportIcons:!0}),t.disposables.add(t.iconLabel),t.parametersLabel=H(t.left,W("span.signature-label")),t.qualifierLabel=H(t.left,W("span.qualifier-label")),t.detailsLabel=H(t.right,W("span.details-label")),t.readMore=H(t.right,W("span.readMore"+lt.asCSSSelector(lM))),t.readMore.title=u("readMore","Read More");let o=()=>{let s=this._editor.getOptions(),a=s.get(43),l=a.getMassagedFontFamily(lh?Yo.fontFamily:null),c=a.fontFeatureSettings,d=s.get(106)||a.fontSize,h=s.get(107)||a.lineHeight,p=a.fontWeight,g=`${d}px`,y=`${h}px`;t.root.style.fontSize=g,t.root.style.fontWeight=p,i.style.fontFamily=l,i.style.fontFeatureSettings=c,i.style.lineHeight=y,t.icon.style.height=y,t.icon.style.width=y,t.readMore.style.height=y,t.readMore.style.width=y};return o(),t.disposables.add(this._editor.onDidChangeConfiguration(s=>{(s.hasChanged(43)||s.hasChanged(106)||s.hasChanged(107))&&o()})),t}renderElement(e,t,n){let{completion:i}=e;n.root.id=sy(t),n.colorspan.style.backgroundColor="";let o={labelEscapeNewLines:!0,matches:es(e.score)},s=[];if(i.kind===19&&dM.extract(e,s))n.icon.className="icon customcolor",n.iconContainer.className="icon hide",n.colorspan.style.backgroundColor=s[0];else if(i.kind===20&&this._themeService.getFileIconTheme().hasFileIcons){n.icon.className="icon hide",n.iconContainer.className="icon hide";let a=Qd(this._modelService,this._modeService,Ce.from({scheme:"fake",path:e.textLabel}),_i.FILE),l=Qd(this._modelService,this._modeService,Ce.from({scheme:"fake",path:i.detail}),_i.FILE);o.extraClasses=a.length>l.length?a:l}else i.kind===23&&this._themeService.getFileIconTheme().hasFolderIcons?(n.icon.className="icon hide",n.iconContainer.className="icon hide",o.extraClasses=pa([Qd(this._modelService,this._modeService,Ce.from({scheme:"fake",path:e.textLabel}),_i.FOLDER),Qd(this._modelService,this._modeService,Ce.from({scheme:"fake",path:i.detail}),_i.FOLDER)])):(n.icon.className="icon hide",n.iconContainer.className="",n.iconContainer.classList.add("suggest-icon",...jS(i.kind).split(" ")));i.tags&&i.tags.indexOf(1)>=0&&(o.extraClasses=(o.extraClasses||[]).concat(["deprecated"]),o.matches=[]),n.iconLabel.setLabel(e.textLabel,void 0,o),typeof i.label=="string"?(n.parametersLabel.textContent="",n.detailsLabel.textContent=ry(i.detail||""),n.root.classList.add("string-label")):(n.parametersLabel.textContent=ry(i.label.detail||""),n.detailsLabel.textContent=ry(i.label.description||""),n.root.classList.remove("string-label")),this._editor.getOption(105).showInlineDetails?Qt(n.detailsLabel):Rt(n.detailsLabel),Jd(e)?(n.right.classList.add("can-expand-details"),Qt(n.readMore),n.readMore.onmousedown=a=>{a.stopPropagation(),a.preventDefault()},n.readMore.onclick=a=>{a.stopPropagation(),a.preventDefault(),this._onDidToggleDetails.fire()}):(n.right.classList.remove("can-expand-details"),Rt(n.readMore),n.readMore.onmousedown=null,n.readMore.onclick=null)}disposeTemplate(e){e.disposables.dispose()}};yp=aM([oy(1,Gt),oy(2,It),oy(3,St)],yp);function ry(r){return r.replace(/\r\n|\r|\n/g,"")}var cM=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},bp=function(r,e){return function(t,n){e(t,n,r)}},hM=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},uM=Y("editorSuggestWidget.background",{dark:Qn,light:Qn,hc:Qn},u("editorSuggestWidgetBackground","Background color of the suggest widget.")),pM=Y("editorSuggestWidget.border",{dark:ba,light:ba,hc:ba},u("editorSuggestWidgetBorder","Border color of the suggest widget.")),mM=Y("editorSuggestWidget.foreground",{dark:Kh,light:Kh,hc:Kh},u("editorSuggestWidgetForeground","Foreground color of the suggest widget.")),gM=Y("editorSuggestWidget.selectedForeground",{dark:Xh,light:Xh,hc:Xh},u("editorSuggestWidgetSelectedForeground","Foreground color of the selected entry in the suggest widget.")),fM=Y("editorSuggestWidget.selectedIconForeground",{dark:Yh,light:Yh,hc:Yh},u("editorSuggestWidgetSelectedIconForeground","Icon foreground color of the selected entry in the suggest widget.")),yM=Y("editorSuggestWidget.selectedBackground",{dark:Zh,light:Zh,hc:Zh},u("editorSuggestWidgetSelectedBackground","Background color of the selected entry in the suggest widget.")),bM=Y("editorSuggestWidget.highlightForeground",{dark:cr,light:cr,hc:cr},u("editorSuggestWidgetHighlightForeground","Color of the match highlights in the suggest widget.")),SM=Y("editorSuggestWidget.focusHighlightForeground",{dark:qh,light:qh,hc:qh},u("editorSuggestWidgetFocusHighlightForeground","Color of the match highlights in the suggest widget when an item is focused.")),Ew=class{constructor(e,t){this._service=e,this._key=`suggestWidget.size/${t.getEditorType()}/${t instanceof bi}`}restore(){var e;let t=(e=this._service.get(this._key,0))!==null&&e!==void 0?e:"";try{let n=JSON.parse(t);if(tt.is(n))return tt.lift(n)}catch(n){}}store(e){this._service.store(this._key,JSON.stringify(e),0,1)}reset(){this._service.remove(this._key,0)}},Wa=class ay{constructor(e,t,n,i,o){this.editor=e,this._storageService=t,this._state=0,this._isAuto=!1,this._ignoreFocusEvents=!1,this._forceRenderingAbove=!1,this._explainMode=!1,this._showTimeout=new Cn,this._disposables=new R,this._onDidSelect=new $,this._onDidFocus=new $,this._onDidHide=new $,this._onDidShow=new $,this.onDidSelect=this._onDidSelect.event,this.onDidFocus=this._onDidFocus.event,this.onDidHide=this._onDidHide.event,this.onDidShow=this._onDidShow.event,this._onDetailsKeydown=new $,this.onDetailsKeyDown=this._onDetailsKeydown.event,this.element=new Zd,this.element.domNode.classList.add("editor-widget","suggest-widget"),this._contentWidget=new Iw(this,e),this._persistedSize=new Ew(t,e);class s{constructor(g,y,v=!1,w=!1){this.persistedSize=g,this.currentSize=y,this.persistHeight=v,this.persistWidth=w}}let a;this._disposables.add(this.element.onDidWillResize(()=>{this._contentWidget.lockPreference(),a=new s(this._persistedSize.restore(),this.element.size)})),this._disposables.add(this.element.onDidResize(p=>{var g,y,v,w;if(this._resize(p.dimension.width,p.dimension.height),a&&(a.persistHeight=a.persistHeight||!!p.north||!!p.south,a.persistWidth=a.persistWidth||!!p.east||!!p.west),!!p.done){if(a){let{itemHeight:F,defaultSize:M}=this.getLayoutInfo(),z=Math.round(F/2),{width:V,height:G}=this.element.size;(!a.persistHeight||Math.abs(a.currentSize.height-G)<=z)&&(G=(y=(g=a.persistedSize)===null||g===void 0?void 0:g.height)!==null&&y!==void 0?y:M.height),(!a.persistWidth||Math.abs(a.currentSize.width-V)<=z)&&(V=(w=(v=a.persistedSize)===null||v===void 0?void 0:v.width)!==null&&w!==void 0?w:M.width),this._persistedSize.store(new tt(V,G))}this._contentWidget.unlockPreference(),a=void 0}})),this._messageElement=H(this.element.domNode,W(".message")),this._listElement=H(this.element.domNode,W(".tree"));let l=o.createInstance(gp,this.editor);l.onDidClose(this.toggleDetails,this,this._disposables),this._details=new iy(l,this.editor);let c=()=>this.element.domNode.classList.toggle("no-icons",!this.editor.getOption(105).showIcons);c();let d=o.createInstance(yp,this.editor);this._disposables.add(d),this._disposables.add(d.onDidToggleDetails(()=>this.toggleDetails())),this._list=new Ox("SuggestWidget",this._listElement,{getHeight:p=>this.getLayoutInfo().itemHeight,getTemplateId:p=>"suggestion"},[d],{alwaysConsumeMouseWheel:!0,useShadows:!1,mouseSupport:!1,accessibilityProvider:{getRole:()=>"option",getAriaLabel:p=>{if(p.isResolved&&this._isDetailsVisible()){let{documentation:g,detail:y}=p.completion,v=An("{0}{1}",y||"",g?typeof g=="string"?g:g.value:"");return u("ariaCurrenttSuggestionReadDetails","{0}, docs: {1}",p.textLabel,v)}else return p.textLabel},getWidgetAriaLabel:()=>u("suggest","Suggest"),getWidgetRole:()=>"listbox"}}),this._status=o.createInstance(pp,this.element.domNode);let h=()=>this.element.domNode.classList.toggle("with-status-bar",this.editor.getOption(105).showStatusBar);h(),this._disposables.add(zx(this._list,i,{listInactiveFocusBackground:yM,listInactiveFocusOutline:yo})),this._disposables.add(i.onDidColorThemeChange(p=>this._onThemeChange(p))),this._onThemeChange(i.getColorTheme()),this._disposables.add(this._list.onMouseDown(p=>this._onListMouseDownOrTap(p))),this._disposables.add(this._list.onTap(p=>this._onListMouseDownOrTap(p))),this._disposables.add(this._list.onDidChangeSelection(p=>this._onListSelection(p))),this._disposables.add(this._list.onDidChangeFocus(p=>this._onListFocus(p))),this._disposables.add(this.editor.onDidChangeCursorSelection(()=>this._onCursorSelectionChanged())),this._disposables.add(this.editor.onDidChangeConfiguration(p=>{p.hasChanged(105)&&(h(),c())})),this._ctxSuggestWidgetVisible=me.Visible.bindTo(n),this._ctxSuggestWidgetDetailsVisible=me.DetailsVisible.bindTo(n),this._ctxSuggestWidgetMultipleSuggestions=me.MultipleSuggestions.bindTo(n),this._disposables.add(fn(this._details.widget.domNode,"keydown",p=>{this._onDetailsKeydown.fire(p)})),this._disposables.add(this.editor.onMouseDown(p=>this._onEditorMouseDown(p)))}dispose(){var e;this._details.widget.dispose(),this._details.dispose(),this._list.dispose(),this._status.dispose(),this._disposables.dispose(),(e=this._loadingTimeout)===null||e===void 0||e.dispose(),this._showTimeout.dispose(),this._contentWidget.dispose(),this.element.dispose()}_onEditorMouseDown(e){this._details.widget.domNode.contains(e.target.element)?this._details.widget.domNode.focus():this.element.domNode.contains(e.target.element)&&this.editor.focus()}_onCursorSelectionChanged(){this._state!==0&&this._contentWidget.layout()}_onListMouseDownOrTap(e){typeof e.element=="undefined"||typeof e.index=="undefined"||(e.browserEvent.preventDefault(),e.browserEvent.stopPropagation(),this._select(e.element,e.index))}_onListSelection(e){e.elements.length&&this._select(e.elements[0],e.indexes[0])}_select(e,t){let n=this._completionModel;n&&(this._onDidSelect.fire({item:e,index:t,model:n}),this.editor.focus())}_onThemeChange(e){let t=e.getColor(uM);t&&(this.element.domNode.style.backgroundColor=t.toString(),this._messageElement.style.backgroundColor=t.toString(),this._details.widget.domNode.style.backgroundColor=t.toString());let n=e.getColor(pM);n&&(this.element.domNode.style.borderColor=n.toString(),this._messageElement.style.borderColor=n.toString(),this._status.element.style.borderTopColor=n.toString(),this._details.widget.domNode.style.borderColor=n.toString(),this._detailsBorderColor=n.toString());let i=e.getColor(Bh);i&&(this._detailsFocusBorderColor=i.toString()),this._details.widget.borderWidth=e.type==="hc"?2:1}_onListFocus(e){var t;if(this._ignoreFocusEvents)return;if(!e.elements.length){this._currentSuggestionDetails&&(this._currentSuggestionDetails.cancel(),this._currentSuggestionDetails=void 0,this._focusedItem=void 0),this.editor.setAriaOptions({activeDescendant:void 0});return}if(!this._completionModel)return;let n=e.elements[0],i=e.indexes[0];n!==this._focusedItem&&((t=this._currentSuggestionDetails)===null||t===void 0||t.cancel(),this._currentSuggestionDetails=void 0,this._focusedItem=n,this._list.reveal(i),this._currentSuggestionDetails=Le(o=>hM(this,void 0,void 0,function*(){let s=Gr(()=>{this._isDetailsVisible()&&this.showDetails(!0)},250);o.onCancellationRequested(()=>s.dispose());let a=yield n.resolve(o);return s.dispose(),a})),this._currentSuggestionDetails.then(()=>{i>=this._list.length||n!==this._list.element(i)||(this._ignoreFocusEvents=!0,this._list.splice(i,1,[n]),this._list.setFocus([i]),this._ignoreFocusEvents=!1,this._isDetailsVisible()?this.showDetails(!1):this.element.domNode.classList.remove("docs-side"),this.editor.setAriaOptions({activeDescendant:sy(i)}))}).catch(ae)),this._onDidFocus.fire({item:n,index:i,model:this._completionModel})}_setState(e){if(this._state!==e)switch(this._state=e,this.element.domNode.classList.toggle("frozen",e===4),this.element.domNode.classList.remove("message"),e){case 0:Rt(this._messageElement,this._listElement,this._status.element),this._details.hide(!0),this._status.hide(),this._contentWidget.hide(),this._ctxSuggestWidgetVisible.reset(),this._ctxSuggestWidgetMultipleSuggestions.reset(),this._showTimeout.cancel(),this.element.domNode.classList.remove("visible"),this._list.splice(0,this._list.length),this._focusedItem=void 0,this._cappedHeight=void 0,this._explainMode=!1;break;case 1:this.element.domNode.classList.add("message"),this._messageElement.textContent=ay.LOADING_MESSAGE,Rt(this._listElement,this._status.element),Qt(this._messageElement),this._details.hide(),this._show(),this._focusedItem=void 0;break;case 2:this.element.domNode.classList.add("message"),this._messageElement.textContent=ay.NO_SUGGESTIONS_MESSAGE,Rt(this._listElement,this._status.element),Qt(this._messageElement),this._details.hide(),this._show(),this._focusedItem=void 0;break;case 3:Rt(this._messageElement),Qt(this._listElement,this._status.element),this._show();break;case 4:Rt(this._messageElement),Qt(this._listElement,this._status.element),this._show();break;case 5:Rt(this._messageElement),Qt(this._listElement,this._status.element),this._details.show(),this._show();break}}_show(){this._status.show(),this._contentWidget.show(),this._layout(this._persistedSize.restore()),this._ctxSuggestWidgetVisible.set(!0),this._showTimeout.cancelAndSet(()=>{this.element.domNode.classList.add("visible"),this._onDidShow.fire(this)},100)}showTriggered(e,t){this._state===0&&(this._contentWidget.setPosition(this.editor.getPosition()),this._isAuto=!!e,this._isAuto||(this._loadingTimeout=Gr(()=>this._setState(1),t)))}showSuggestions(e,t,n,i){var o,s;if(this._contentWidget.setPosition(this.editor.getPosition()),(o=this._loadingTimeout)===null||o===void 0||o.dispose(),(s=this._currentSuggestionDetails)===null||s===void 0||s.cancel(),this._currentSuggestionDetails=void 0,this._completionModel!==e&&(this._completionModel=e),n&&this._state!==2&&this._state!==0){this._setState(4);return}let a=this._completionModel.items.length,l=a===0;if(this._ctxSuggestWidgetMultipleSuggestions.set(a>1),l){this._setState(i?0:2),this._completionModel=void 0;return}this._focusedItem=void 0,this._list.splice(0,this._list.length,this._completionModel.items),this._setState(n?4:3),this._list.reveal(t,0),this._list.setFocus([t]),this._layout(this.element.size),this._detailsBorderColor&&(this._details.widget.domNode.style.borderColor=this._detailsBorderColor)}selectNextPage(){switch(this._state){case 0:return!1;case 5:return this._details.widget.pageDown(),!0;case 1:return!this._isAuto;default:return this._list.focusNextPage(),!0}}selectNext(){switch(this._state){case 0:return!1;case 1:return!this._isAuto;default:return this._list.focusNext(1,!0),!0}}selectLast(){switch(this._state){case 0:return!1;case 5:return this._details.widget.scrollBottom(),!0;case 1:return!this._isAuto;default:return this._list.focusLast(),!0}}selectPreviousPage(){switch(this._state){case 0:return!1;case 5:return this._details.widget.pageUp(),!0;case 1:return!this._isAuto;default:return this._list.focusPreviousPage(),!0}}selectPrevious(){switch(this._state){case 0:return!1;case 1:return!this._isAuto;default:return this._list.focusPrevious(1,!0),!1}}selectFirst(){switch(this._state){case 0:return!1;case 5:return this._details.widget.scrollTop(),!0;case 1:return!this._isAuto;default:return this._list.focusFirst(),!0}}getFocusedItem(){if(this._state!==0&&this._state!==2&&this._state!==1&&this._completionModel)return{item:this._list.getFocusedElements()[0],index:this._list.getFocus()[0],model:this._completionModel}}toggleDetailsFocus(){this._state===5?(this._setState(3),this._detailsBorderColor&&(this._details.widget.domNode.style.borderColor=this._detailsBorderColor)):this._state===3&&this._isDetailsVisible()&&(this._setState(5),this._detailsFocusBorderColor&&(this._details.widget.domNode.style.borderColor=this._detailsFocusBorderColor))}toggleDetails(){this._isDetailsVisible()?(this._ctxSuggestWidgetDetailsVisible.set(!1),this._setDetailsVisible(!1),this._details.hide(),this.element.domNode.classList.remove("shows-details")):(Jd(this._list.getFocusedElements()[0])||this._explainMode)&&(this._state===3||this._state===5||this._state===4)&&(this._ctxSuggestWidgetDetailsVisible.set(!0),this._setDetailsVisible(!0),this.showDetails(!1))}showDetails(e){this._details.show(),e?this._details.widget.renderLoading():this._details.widget.renderItem(this._list.getFocusedElements()[0],this._explainMode),this._positionDetails(),this.editor.focus(),this.element.domNode.classList.add("shows-details")}toggleExplainMode(){this._list.getFocusedElements()[0]&&(this._explainMode=!this._explainMode,this._isDetailsVisible()?this.showDetails(!1):this.toggleDetails())}resetPersistedSize(){this._persistedSize.reset()}hideWidget(){var e;(e=this._loadingTimeout)===null||e===void 0||e.dispose(),this._setState(0),this._onDidHide.fire(this),this.element.clearSashHoverState();let t=this._persistedSize.restore(),n=Math.ceil(this.getLayoutInfo().itemHeight*4.3);t&&t.height<n&&this._persistedSize.store(t.with(void 0,n))}isFrozen(){return this._state===4}_afterRender(e){if(e===null){this._isDetailsVisible()&&this._details.hide();return}this._state===2||this._state===1||(this._isDetailsVisible()&&this._details.show(),this._positionDetails())}_layout(e){var t,n,i;if(!this.editor.hasModel()||!this.editor.getDomNode())return;let o=ch(document.body),s=this.getLayoutInfo();e||(e=s.defaultSize);let a=e.height,l=e.width;if(this._status.element.style.lineHeight=`${s.itemHeight}px`,this._state===2||this._state===1)a=s.itemHeight+s.borderHeight,l=s.defaultSize.width/2,this.element.enableSashes(!1,!1,!1,!1),this.element.minSize=this.element.maxSize=new tt(l,a),this._contentWidget.setPreference(2);else{let c=o.width-s.borderHeight-2*s.horizontalPadding;l>c&&(l=c);let d=this._completionModel?this._completionModel.stats.pLabelLen*s.typicalHalfwidthCharacterWidth:l,h=s.statusBarHeight+this._list.contentHeight+s.borderHeight,p=s.itemHeight+s.statusBarHeight,g=Jt(this.editor.getDomNode()),y=this.editor.getScrolledVisiblePosition(this.editor.getPosition()),v=g.top+y.top+y.height,w=Math.min(o.height-v-s.verticalPadding,h),F=g.top+y.top-s.verticalPadding,M=Math.min(F,h),z=Math.min(Math.max(M,w)+s.borderHeight,h);a===((t=this._cappedHeight)===null||t===void 0?void 0:t.capped)&&(a=this._cappedHeight.wanted),a<p&&(a=p),a>z&&(a=z);let V=150;a>w||this._forceRenderingAbove&&F>V?(this._contentWidget.setPreference(1),this.element.enableSashes(!0,!0,!1,!1),z=M):(this._contentWidget.setPreference(2),this.element.enableSashes(!1,!0,!0,!1),z=w),this.element.preferredSize=new tt(d,s.defaultSize.height),this.element.maxSize=new tt(c,z),this.element.minSize=new tt(220,p),this._cappedHeight=a===h?{wanted:(i=(n=this._cappedHeight)===null||n===void 0?void 0:n.wanted)!==null&&i!==void 0?i:e.height,capped:a}:void 0}this._resize(l,a)}_resize(e,t){let{width:n,height:i}=this.element.maxSize;e=Math.min(n,e),t=Math.min(i,t);let{statusBarHeight:o}=this.getLayoutInfo();this._list.layout(t-o,e),this._listElement.style.height=`${t-o}px`,this.element.layout(t,e),this._contentWidget.layout(),this._positionDetails()}_positionDetails(){this._isDetailsVisible()&&this._details.placeAtAnchor(this.element.domNode)}getLayoutInfo(){let e=this.editor.getOption(43),t=VS(this.editor.getOption(107)||e.lineHeight,8,1e3),n=!this.editor.getOption(105).showStatusBar||this._state===2||this._state===1?0:t,i=this._details.widget.borderWidth,o=2*i;return{itemHeight:t,statusBarHeight:n,borderWidth:i,borderHeight:o,typicalHalfwidthCharacterWidth:e.typicalHalfwidthCharacterWidth,verticalPadding:22,horizontalPadding:14,defaultSize:new tt(430,n+12*t+o)}}_isDetailsVisible(){return this._storageService.getBoolean("expandSuggestionDocs",0,!1)}_setDetailsVisible(e){this._storageService.store("expandSuggestionDocs",e,0,0)}forceRenderingAbove(){this._forceRenderingAbove||(this._forceRenderingAbove=!0,this._layout(this._persistedSize.restore()))}stopForceRenderingAbove(){this._forceRenderingAbove=!1}};Wa.LOADING_MESSAGE=u("suggestWidget.loading","Loading...");Wa.NO_SUGGESTIONS_MESSAGE=u("suggestWidget.noSuggestions","No suggestions.");Wa=cM([bp(1,en),bp(2,Q),bp(3,St),bp(4,he)],Wa);var Iw=class{constructor(e,t){this._widget=e,this._editor=t,this.allowEditorOverflow=!0,this.suppressMouseDown=!1,this._preferenceLocked=!1,this._added=!1,this._hidden=!1}dispose(){this._added&&(this._added=!1,this._editor.removeContentWidget(this))}getId(){return"editor.widget.suggestWidget"}getDomNode(){return this._widget.element.domNode}show(){this._hidden=!1,this._added||(this._added=!0,this._editor.addContentWidget(this))}hide(){this._hidden||(this._hidden=!0,this.layout())}layout(){this._editor.layoutContentWidget(this)}getPosition(){return this._hidden||!this._position||!this._preference?null:{position:this._position,preference:[this._preference]}}beforeRender(){let{height:e,width:t}=this._widget.element.size,{borderWidth:n,horizontalPadding:i}=this._widget.getLayoutInfo();return new tt(t+2*n+i,e+2*n)}afterRender(e){this._widget._afterRender(e)}setPreference(e){this._preferenceLocked||(this._preference=e)}lockPreference(){this._preferenceLocked=!0}unlockPreference(){this._preferenceLocked=!1}setPosition(e){this._position=e}};ye((r,e)=>{let t=r.getColor(bM);t&&e.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row .monaco-highlighted-label .highlight { color: ${t}; }`);let n=r.getColor(SM);t&&e.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused .monaco-highlighted-label .highlight { color: ${n}; }`);let i=r.getColor(mM);i&&e.addRule(`.monaco-editor .suggest-widget, .monaco-editor .suggest-details { color: ${i}; }`);let o=r.getColor(gM);o&&e.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused { color: ${o}; }`);let s=r.getColor(fM);s&&e.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused .codicon { color: ${s}; }`);let a=r.getColor(Bi);a&&e.addRule(`.monaco-editor .suggest-details a { color: ${a}; }`);let l=r.getColor(Wi);l&&e.addRule(`.monaco-editor .suggest-details a:hover { color: ${l}; }`);let c=r.getColor(ga);c&&e.addRule(`.monaco-editor .suggest-details code { background-color: ${c}; }`)});var vM=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},tc=function(r,e){return function(t,n){e(t,n,r)}},xM=!1,kw=class{constructor(e,t){if(this._model=e,this._position=t,e.getLineMaxColumn(t.lineNumber)!==t.column){let i=e.getOffsetAt(t),o=e.getPositionAt(i+1);this._marker=e.deltaDecorations([],[{range:C.fromPositions(t,o),options:{description:"suggest-line-suffix",stickiness:1}}])}}dispose(){this._marker&&!this._model.isDisposed()&&this._model.deltaDecorations(this._marker,[])}delta(e){if(this._model.isDisposed()||this._position.lineNumber!==e.lineNumber)return 0;if(this._marker){let t=this._model.getDecorationRange(this._marker[0]);return this._model.getOffsetAt(t.getStartPosition())-this._model.getOffsetAt(e)}else return this._model.getLineMaxColumn(e.lineNumber)-e.column}},jn=class Lw{constructor(e,t,n,i,o,s){this._memoryService=t,this._commandService=n,this._contextKeyService=i,this._instantiationService=o,this._logService=s,this._lineSuffix=new Ye,this._toDispose=new R,this._selectors=new Pw(d=>d.priority),this.editor=e,this.model=o.createInstance(up,this.editor);let a=me.InsertMode.bindTo(i);a.set(e.getOption(105).insertMode),this.model.onDidTrigger(()=>a.set(e.getOption(105).insertMode)),this.widget=this._toDispose.add(new ea(()=>{let d=this._instantiationService.createInstance(Wa,this.editor);this._toDispose.add(d),this._toDispose.add(d.onDidSelect(v=>this._insertSuggestion(v,0),this));let h=new ty(this.editor,d,v=>this._insertSuggestion(v,2));this._toDispose.add(h),this._toDispose.add(this.model.onDidSuggest(v=>{v.completionModel.items.length===0&&h.reset()}));let p=me.MakesTextEdit.bindTo(this._contextKeyService),g=me.HasInsertAndReplaceRange.bindTo(this._contextKeyService),y=me.CanResolve.bindTo(this._contextKeyService);return this._toDispose.add(We(()=>{p.reset(),g.reset(),y.reset()})),this._toDispose.add(d.onDidFocus(({item:v})=>{let w=this.editor.getPosition(),F=v.editStart.column,M=w.column,z=!0;this.editor.getOption(1)==="smart"&&this.model.state===2&&!v.completion.additionalTextEdits&&!(v.completion.insertTextRules&4)&&M-F===v.completion.insertText.length&&(z=this.editor.getModel().getValueInRange({startLineNumber:w.lineNumber,startColumn:F,endLineNumber:w.lineNumber,endColumn:M})!==v.completion.insertText),p.set(z),g.set(!q.equals(v.editInsertEnd,v.editReplaceEnd)),y.set(Boolean(v.provider.resolveCompletionItem)||Boolean(v.completion.documentation)||v.completion.detail!==v.completion.label)})),this._toDispose.add(d.onDetailsKeyDown(v=>{if(v.toKeybinding().equals(new hm(!0,!1,!1,!1,33))||ln&&v.toKeybinding().equals(new hm(!1,!1,!1,!0,33))){v.stopPropagation();return}v.toKeybinding().isModifierKey()||this.editor.focus()})),d})),this._overtypingCapturer=this._toDispose.add(new ea(()=>this._toDispose.add(new Ba(this.editor,this.model)))),this._alternatives=this._toDispose.add(new ea(()=>this._toDispose.add(new vr(this.editor,this._contextKeyService)))),this._toDispose.add(o.createInstance(Oa,e)),this._toDispose.add(this.model.onDidTrigger(d=>{this.widget.value.showTriggered(d.auto,d.shy?250:50),this._lineSuffix.value=new kw(this.editor.getModel(),d.position)})),this._toDispose.add(this.model.onDidSuggest(d=>{if(!d.shy){let h=-1;for(let p of this._selectors.itemsOrderedByPriorityDesc)if(h=p.select(this.editor.getModel(),this.editor.getPosition(),d.completionModel.items),h!==-1)break;h===-1&&(h=this._memoryService.select(this.editor.getModel(),this.editor.getPosition(),d.completionModel.items)),this.widget.value.showSuggestions(d.completionModel,h,d.isFrozen,d.auto)}})),this._toDispose.add(this.model.onDidCancel(d=>{d.retrigger||this.widget.value.hideWidget()})),this._toDispose.add(this.editor.onDidBlurEditorWidget(()=>{xM||(this.model.cancel(),this.model.clear())}));let l=me.AcceptSuggestionsOnEnter.bindTo(i),c=()=>{let d=this.editor.getOption(1);l.set(d==="on"||d==="smart")};this._toDispose.add(this.editor.onDidChangeConfiguration(()=>c())),c()}static get(e){return e.getContribution(Lw.ID)}dispose(){this._alternatives.dispose(),this._toDispose.dispose(),this.widget.dispose(),this.model.dispose(),this._lineSuffix.dispose()}_insertSuggestion(e,t){if(!e||!e.item){this._alternatives.value.reset(),this.model.cancel(),this.model.clear();return}if(!this.editor.hasModel())return;let n=this.editor.getModel(),i=n.getAlternativeVersionId(),{item:o}=e,s=[],a=new Zt;t&1||this.editor.pushUndoStop();let l=this.getOverwriteInfo(o,Boolean(t&8));if(this._memoryService.memorize(n,this.editor.getPosition(),o),Array.isArray(o.completion.additionalTextEdits)){let d=ur.capture(this.editor);this.editor.executeEdits("suggestController.additionalTextEdits.sync",o.completion.additionalTextEdits.map(h=>He.replace(C.lift(h.range),h.text))),d.restoreRelativeVerticalPositionOfCursor(this.editor)}else if(!o.isResolved){let d=new Zo(!0),h,p=n.onDidChangeContent(w=>{if(w.isFlush){a.cancel(),p.dispose();return}for(let F of w.changes){let M=C.getEndPosition(F.range);(!h||q.isBefore(M,h))&&(h=M)}}),g=t;t|=2;let y=!1,v=this.editor.onWillType(()=>{v.dispose(),y=!0,g&2||this.editor.pushUndoStop()});s.push(o.resolve(a.token).then(()=>{if(!o.completion.additionalTextEdits||a.token.isCancellationRequested||h&&o.completion.additionalTextEdits.some(F=>q.isBefore(h,C.getStartPosition(F.range))))return!1;y&&this.editor.pushUndoStop();let w=ur.capture(this.editor);return this.editor.executeEdits("suggestController.additionalTextEdits.async",o.completion.additionalTextEdits.map(F=>He.replace(C.lift(F.range),F.text))),w.restoreRelativeVerticalPositionOfCursor(this.editor),(y||!(g&2))&&this.editor.pushUndoStop(),!0}).then(w=>{this._logService.trace("[suggest] async resolving of edits DONE (ms, applied?)",d.elapsed(),w),p.dispose(),v.dispose()}))}let{insertText:c}=o.completion;o.completion.insertTextRules&4||(c=Mo.escape(c)),vt.get(this.editor).insert(c,{overwriteBefore:l.overwriteBefore,overwriteAfter:l.overwriteAfter,undoStopBefore:!1,undoStopAfter:!1,adjustWhitespace:!(o.completion.insertTextRules&1),clipboardText:e.model.clipboardText,overtypingCapturer:this._overtypingCapturer.value}),t&2||this.editor.pushUndoStop(),o.completion.command?o.completion.command.id===Va.id?this.model.trigger({auto:!0,shy:!1},!0):(s.push(this._commandService.executeCommand(o.completion.command.id,...o.completion.command.arguments?[...o.completion.command.arguments]:[]).catch(ae)),this.model.cancel()):this.model.cancel(),t&4&&this._alternatives.value.set(e,d=>{for(a.cancel();n.canUndo();){i!==n.getAlternativeVersionId()&&n.undo(),this._insertSuggestion(d,3|(t&8?8:0));break}}),this._alertCompletionItem(o),Promise.all(s).finally(()=>{this.model.clear(),a.dispose()})}getOverwriteInfo(e,t){Ue(this.editor.hasModel());let n=this.editor.getOption(105).insertMode==="replace";t&&(n=!n);let i=e.position.column-e.editStart.column,o=(n?e.editReplaceEnd.column:e.editInsertEnd.column)-e.position.column,s=this.editor.getPosition().column-e.position.column,a=this._lineSuffix.value?this._lineSuffix.value.delta(this.editor.getPosition()):0;return{overwriteBefore:i+s,overwriteAfter:o+a}}_alertCompletionItem(e){if(Tt(e.completion.additionalTextEdits)){let t=u("aria.alert.snippet","Accepting '{0}' made {1} additional edits",e.textLabel,e.completion.additionalTextEdits.length);gt(t)}}triggerSuggest(e){this.editor.hasModel()&&(this.model.trigger({auto:!1,shy:!1},!1,e),this.editor.revealPosition(this.editor.getPosition(),0),this.editor.focus())}triggerSuggestAndAcceptBest(e){if(!this.editor.hasModel())return;let t=this.editor.getPosition(),n=()=>{t.equals(this.editor.getPosition())&&this._commandService.executeCommand(e.fallback)},i=o=>{if(o.completion.insertTextRules&4||o.completion.additionalTextEdits)return!0;let s=this.editor.getPosition(),a=o.editStart.column,l=s.column;return l-a!==o.completion.insertText.length?!0:this.editor.getModel().getValueInRange({startLineNumber:s.lineNumber,startColumn:a,endLineNumber:s.lineNumber,endColumn:l})!==o.completion.insertText};_t.once(this.model.onDidTrigger)(o=>{let s=[];_t.any(this.model.onDidTrigger,this.model.onDidCancel)(()=>{ht(s),n()},void 0,s),this.model.onDidSuggest(({completionModel:a})=>{if(ht(s),a.items.length===0){n();return}let l=this._memoryService.select(this.editor.getModel(),this.editor.getPosition(),a.items),c=a.items[l];if(!i(c)){n();return}this.editor.pushUndoStop(),this._insertSuggestion({index:l,item:c,model:a},7)},void 0,s)}),this.model.trigger({auto:!1,shy:!0}),this.editor.revealPosition(t,0),this.editor.focus()}acceptSelectedSuggestion(e,t){let n=this.widget.value.getFocusedItem(),i=0;e&&(i|=4),t&&(i|=8),this._insertSuggestion(n,i)}acceptNextSuggestion(){this._alternatives.value.next()}acceptPrevSuggestion(){this._alternatives.value.prev()}cancelSuggestWidget(){this.model.cancel(),this.model.clear(),this.widget.value.hideWidget()}selectNextSuggestion(){this.widget.value.selectNext()}selectNextPageSuggestion(){this.widget.value.selectNextPage()}selectLastSuggestion(){this.widget.value.selectLast()}selectPrevSuggestion(){this.widget.value.selectPrevious()}selectPrevPageSuggestion(){this.widget.value.selectPreviousPage()}selectFirstSuggestion(){this.widget.value.selectFirst()}toggleSuggestionDetails(){this.widget.value.toggleDetails()}toggleExplainMode(){this.widget.value.toggleExplainMode()}toggleSuggestionFocus(){this.widget.value.toggleDetailsFocus()}resetWidgetSize(){this.widget.value.resetPersistedSize()}forceRenderingAbove(){this.widget.value.forceRenderingAbove()}stopForceRenderingAbove(){!this.widget.isInitialized||this.widget.value.stopForceRenderingAbove()}registerSelector(e){return this._selectors.register(e)}};jn.ID="editor.contrib.suggestController";jn=vM([tc(1,ey),tc(2,pt),tc(3,Q),tc(4,he),tc(5,ir)],jn);var Pw=class{constructor(e){this.prioritySelector=e,this._items=new Array}register(e){if(this._items.indexOf(e)!==-1)throw new Error("Value is already registered");return this._items.push(e),this._items.sort((t,n)=>this.prioritySelector(n)-this.prioritySelector(t)),{dispose:()=>{let t=this._items.indexOf(e);t>=0&&this._items.splice(t,1)}}}get itemsOrderedByPriorityDesc(){return this._items}},Va=class extends N{constructor(){super({id:Va.id,label:u("suggest.trigger.label","Trigger Suggest"),alias:"Trigger Suggest",precondition:O.and(x.writable,x.hasCompletionItemProvider),kbOpts:{kbExpr:x.textInputFocus,primary:2058,secondary:[2087],mac:{primary:266,secondary:[521,2087]},weight:100}})}run(e,t){let n=jn.get(t);!n||n.triggerSuggest()}};Va.id="editor.action.triggerSuggest";J(jn.ID,jn);I(Va);var Un=100+90,Sn=it.bindToContribution(jn.get);K(new Sn({id:"acceptSelectedSuggestion",precondition:me.Visible,handler(r){r.acceptSelectedSuggestion(!0,!1)}}));jt.registerKeybindingRule({id:"acceptSelectedSuggestion",when:O.and(me.Visible,x.textInputFocus),primary:2,weight:Un});jt.registerKeybindingRule({id:"acceptSelectedSuggestion",when:O.and(me.Visible,x.textInputFocus,me.AcceptSuggestionsOnEnter,me.MakesTextEdit),primary:3,weight:Un});Zn.appendMenuItem(Yi,{command:{id:"acceptSelectedSuggestion",title:u("accept.insert","Insert")},group:"left",order:1,when:me.HasInsertAndReplaceRange.toNegated()});Zn.appendMenuItem(Yi,{command:{id:"acceptSelectedSuggestion",title:u("accept.insert","Insert")},group:"left",order:1,when:O.and(me.HasInsertAndReplaceRange,me.InsertMode.isEqualTo("insert"))});Zn.appendMenuItem(Yi,{command:{id:"acceptSelectedSuggestion",title:u("accept.replace","Replace")},group:"left",order:1,when:O.and(me.HasInsertAndReplaceRange,me.InsertMode.isEqualTo("replace"))});K(new Sn({id:"acceptAlternativeSelectedSuggestion",precondition:O.and(me.Visible,x.textInputFocus),kbOpts:{weight:Un,kbExpr:x.textInputFocus,primary:1027,secondary:[1026]},handler(r){r.acceptSelectedSuggestion(!1,!0)},menuOpts:[{menuId:Yi,group:"left",order:2,when:O.and(me.HasInsertAndReplaceRange,me.InsertMode.isEqualTo("insert")),title:u("accept.replace","Replace")},{menuId:Yi,group:"left",order:2,when:O.and(me.HasInsertAndReplaceRange,me.InsertMode.isEqualTo("replace")),title:u("accept.insert","Insert")}]}));Ie.registerCommandAlias("acceptSelectedSuggestionOnEnter","acceptSelectedSuggestion");K(new Sn({id:"hideSuggestWidget",precondition:me.Visible,handler:r=>r.cancelSuggestWidget(),kbOpts:{weight:Un,kbExpr:x.textInputFocus,primary:9,secondary:[1033]}}));K(new Sn({id:"selectNextSuggestion",precondition:O.and(me.Visible,me.MultipleSuggestions),handler:r=>r.selectNextSuggestion(),kbOpts:{weight:Un,kbExpr:x.textInputFocus,primary:18,secondary:[2066],mac:{primary:18,secondary:[2066,300]}}}));K(new Sn({id:"selectNextPageSuggestion",precondition:O.and(me.Visible,me.MultipleSuggestions),handler:r=>r.selectNextPageSuggestion(),kbOpts:{weight:Un,kbExpr:x.textInputFocus,primary:12,secondary:[2060]}}));K(new Sn({id:"selectLastSuggestion",precondition:O.and(me.Visible,me.MultipleSuggestions),handler:r=>r.selectLastSuggestion()}));K(new Sn({id:"selectPrevSuggestion",precondition:O.and(me.Visible,me.MultipleSuggestions),handler:r=>r.selectPrevSuggestion(),kbOpts:{weight:Un,kbExpr:x.textInputFocus,primary:16,secondary:[2064],mac:{primary:16,secondary:[2064,302]}}}));K(new Sn({id:"selectPrevPageSuggestion",precondition:O.and(me.Visible,me.MultipleSuggestions),handler:r=>r.selectPrevPageSuggestion(),kbOpts:{weight:Un,kbExpr:x.textInputFocus,primary:11,secondary:[2059]}}));K(new Sn({id:"selectFirstSuggestion",precondition:O.and(me.Visible,me.MultipleSuggestions),handler:r=>r.selectFirstSuggestion()}));K(new Sn({id:"toggleSuggestionDetails",precondition:me.Visible,handler:r=>r.toggleSuggestionDetails(),kbOpts:{weight:Un,kbExpr:x.textInputFocus,primary:2058,secondary:[2087],mac:{primary:266,secondary:[2087]}},menuOpts:[{menuId:Yi,group:"right",order:1,when:O.and(me.DetailsVisible,me.CanResolve),title:u("detail.more","show less")},{menuId:Yi,group:"right",order:1,when:O.and(me.DetailsVisible.toNegated(),me.CanResolve),title:u("detail.less","show more")}]}));K(new Sn({id:"toggleExplainMode",precondition:me.Visible,handler:r=>r.toggleExplainMode(),kbOpts:{weight:100,primary:2133}}));K(new Sn({id:"toggleSuggestionFocus",precondition:me.Visible,handler:r=>r.toggleSuggestionFocus(),kbOpts:{weight:Un,kbExpr:x.textInputFocus,primary:2570,mac:{primary:778}}}));K(new Sn({id:"insertBestCompletion",precondition:O.and(x.textInputFocus,O.equals("config.editor.tabCompletion","on"),Oa.AtEnd,me.Visible.toNegated(),vr.OtherSuggestions.toNegated(),vt.InSnippetMode.toNegated()),handler:(r,e)=>{r.triggerSuggestAndAcceptBest(fh(e)?Object.assign({fallback:"tab"},e):{fallback:"tab"})},kbOpts:{weight:Un,primary:2}}));K(new Sn({id:"insertNextSuggestion",precondition:O.and(x.textInputFocus,O.equals("config.editor.tabCompletion","on"),vr.OtherSuggestions,me.Visible.toNegated(),vt.InSnippetMode.toNegated()),handler:r=>r.acceptNextSuggestion(),kbOpts:{weight:Un,kbExpr:x.textInputFocus,primary:2}}));K(new Sn({id:"insertPrevSuggestion",precondition:O.and(x.textInputFocus,O.equals("config.editor.tabCompletion","on"),vr.OtherSuggestions,me.Visible.toNegated(),vt.InSnippetMode.toNegated()),handler:r=>r.acceptPrevSuggestion(),kbOpts:{weight:Un,kbExpr:x.textInputFocus,primary:1026}}));I(class extends N{constructor(){super({id:"editor.action.resetSuggestSize",label:u("suggest.reset.label","Reset Suggest Widget Size"),alias:"Reset Suggest Widget Size",precondition:void 0})}run(r,e){jn.get(e).resetWidgetSize()}});function Mw(r,e){return{object:r,dispose:()=>e==null?void 0:e.dispose()}}function Dw(r,e){return(t,n)=>e(r(t),r(n))}function Rw(){return(r,e)=>r-e}function Fw(r,e){let t;for(let n of r)(t===void 0||e(n,t)>0)&&(t=n);return t}var ly=class extends B{constructor(e,t){super();this.editor=e,this.suggestControllerPreselector=t,this.isSuggestWidgetVisible=!1,this.isShiftKeyPressed=!1,this._isActive=!1,this._currentInlineCompletion=void 0,this.onDidChangeEmitter=new $,this.onDidChange=this.onDidChangeEmitter.event,this.setInactiveDelayed=this._register(new Xe(()=>{this.isSuggestWidgetVisible||this._isActive&&(this._isActive=!1,this.onDidChangeEmitter.fire())},100)),this._register(e.onKeyDown(i=>{i.shiftKey&&!this.isShiftKeyPressed&&(this.isShiftKeyPressed=!0,this.update(this._isActive))})),this._register(e.onKeyUp(i=>{i.shiftKey&&this.isShiftKeyPressed&&(this.isShiftKeyPressed=!1,this.update(this._isActive))}));let n=jn.get(this.editor);if(n){this._register(n.registerSelector({priority:100,select:(s,a,l)=>{let c=this.editor.getModel(),d=Aa(c,this.suggestControllerPreselector());if(!d)return-1;let h=q.lift(a),p=l.map((y,v)=>{let w=Aw(n,h,y,this.isShiftKeyPressed),F=Aa(c,w);if(!F)return;let M=CM(d.range,F.range)&&d.text.startsWith(F.text);return{index:v,valid:M,prefixLength:F.text.length,suggestItem:y}}).filter(y=>y&&y.valid),g=Fw(p,Dw(y=>y.prefixLength,Rw()));return g?g.index:-1}}));let i=!1,o=()=>{i||(i=!0,this._register(n.widget.value.onDidShow(()=>{this.isSuggestWidgetVisible=!0,this.update(!0)})),this._register(n.widget.value.onDidHide(()=>{this.isSuggestWidgetVisible=!1,this.setInactiveDelayed.schedule(),this.update(this._isActive)})),this._register(n.widget.value.onDidFocus(()=>{this.isSuggestWidgetVisible=!0,this.update(!0)})))};this._register(_t.once(n.model.onDidTrigger)(s=>{o()}))}this.update(this._isActive)}get state(){if(!!this._isActive)return{selectedItemAsInlineCompletion:this._currentInlineCompletion}}update(e){let t=this.getInlineCompletion(),n=!1;aw(this._currentInlineCompletion,t)||(this._currentInlineCompletion=t,n=!0),this._isActive!==e&&(this._isActive=e,n=!0),n&&this.onDidChangeEmitter.fire()}getInlineCompletion(){let e=jn.get(this.editor);if(!e||!this.isSuggestWidgetVisible)return;let t=e.widget.value.getFocusedItem();if(!!t)return Aw(e,this.editor.getPosition(),t.item,this.isShiftKeyPressed)}stopForceRenderingAbove(){let e=jn.get(this.editor);e&&e.stopForceRenderingAbove()}forceRenderingAbove(){let e=jn.get(this.editor);e&&e.forceRenderingAbove()}};function CM(r,e){return r.startLineNumber===e.startLineNumber&&r.startColumn===e.startColumn&&(r.endLineNumber<e.endLineNumber||r.endLineNumber===e.endLineNumber&&r.endColumn<=e.endColumn)}function Aw(r,e,t,n){if(Array.isArray(t.completion.additionalTextEdits)&&t.completion.additionalTextEdits.length>0)return{text:"",range:C.fromPositions(e,e)};let{insertText:i}=t.completion;if(t.completion.insertTextRules&4){let s=new Mo().parse(i),a=r.editor.getModel();if(s.children.length>100)return;Gn.adjustWhitespace(a,e,s,!0,!0),i=s.toString()}let o=r.getOverwriteInfo(t,n);return{text:i,range:C.fromPositions(e.delta(0,-o.overwriteBefore),e.delta(0,Math.max(o.overwriteAfter,0)))}}var Nw=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},dy=class extends Ud{constructor(e,t){super(e);this.cache=t,this.suggestionInlineCompletionSource=this._register(new ly(this.editor,()=>{var n,i;return(i=(n=this.cache.value)===null||n===void 0?void 0:n.completions[0])===null||i===void 0?void 0:i.toLiveInlineCompletion()})),this.updateOperation=this._register(new Ye),this.updateCacheSoon=this._register(new Xe(()=>this.updateCache(),50)),this.minReservedLineCount=0,this._register(this.suggestionInlineCompletionSource.onDidChange(()=>{this.updateCacheSoon.schedule(),this.suggestionInlineCompletionSource.state||(this.minReservedLineCount=0);let i=this.ghostText;i&&(this.minReservedLineCount=Math.max(this.minReservedLineCount,_M(i.parts.map(o=>o.lines.length-1)))),this.minReservedLineCount>=1&&this.isSuggestionPreviewEnabled()?this.suggestionInlineCompletionSource.forceRenderingAbove():this.suggestionInlineCompletionSource.stopForceRenderingAbove(),this.onDidChangeEmitter.fire()})),this._register(this.cache.onDidChange(()=>{this.onDidChangeEmitter.fire()})),this._register(this.editor.onDidChangeCursorPosition(n=>{this.isSuggestionPreviewEnabled()&&(this.minReservedLineCount=0,this.updateCacheSoon.schedule(),this.onDidChangeEmitter.fire())})),this._register(We(()=>this.suggestionInlineCompletionSource.stopForceRenderingAbove()))}get isActive(){return this.suggestionInlineCompletionSource.state!==void 0}isSuggestionPreviewEnabled(){return this.editor.getOption(105).preview}updateCache(){return Nw(this,void 0,void 0,function*(){let e=this.suggestionInlineCompletionSource.state;if(!e||!e.selectedItemAsInlineCompletion)return;let t={text:e.selectedItemAsInlineCompletion.text,range:e.selectedItemAsInlineCompletion.range},n=this.editor.getPosition(),i=Le(s=>Nw(this,void 0,void 0,function*(){let a;try{a=yield zf(n,this.editor.getModel(),{triggerKind:En.Automatic,selectedSuggestionInfo:t},s)}catch(l){ae(l);return}s.isCancellationRequested||(this.cache.setValue(this.editor,a,En.Automatic),this.onDidChangeEmitter.fire())})),o=new rp(i,En.Automatic);this.updateOperation.value=o,yield i,this.updateOperation.value===o&&this.updateOperation.clear()})}get ghostText(){var e,t;if(!this.isSuggestionPreviewEnabled())return;let n=this.suggestionInlineCompletionSource.state,i=Aa(this.editor.getModel(),n==null?void 0:n.selectedItemAsInlineCompletion),o=Aa(this.editor.getModel(),(t=(e=this.cache.value)===null||e===void 0?void 0:e.completions[0])===null||t===void 0?void 0:t.toLiveInlineCompletion()),s=o&&i&&o.text.startsWith(i.text)&&o.range.equalsRange(i.range)?o:i||o,a=i?((s==null?void 0:s.text.length)||0)-i.text.length:0;return(d=>{let h=this.editor.getOptions().get(105).previewMode;return d?ip(d,this.editor.getModel(),h,this.editor.getPosition(),a)||new jd(d.range.endLineNumber,[],this.minReservedLineCount):void 0})(s)}};function _M(r){return r.reduce((e,t)=>e+t,0)}bt();var wM=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},TM=function(r,e){return function(t,n){e(t,n,r)}},EM=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},zw=class extends B{constructor(){super(...arguments);this.onDidChangeEmitter=new $,this.onDidChange=this.onDidChangeEmitter.event,this.hasCachedGhostText=!1,this.currentModelRef=this._register(new Ye)}get targetModel(){var e;return(e=this.currentModelRef.value)===null||e===void 0?void 0:e.object}setTargetModel(e){var t;((t=this.currentModelRef.value)===null||t===void 0?void 0:t.object)!==e&&(this.currentModelRef.clear(),this.currentModelRef.value=e?Mw(e,e.onDidChange(()=>{this.hasCachedGhostText=!1,this.onDidChangeEmitter.fire()})):void 0,this.hasCachedGhostText=!1,this.onDidChangeEmitter.fire())}get ghostText(){var e,t;return this.hasCachedGhostText||(this.cachedGhostText=(t=(e=this.currentModelRef.value)===null||e===void 0?void 0:e.object)===null||t===void 0?void 0:t.ghostText,this.hasCachedGhostText=!0),this.cachedGhostText}setExpanded(e){var t;(t=this.targetModel)===null||t===void 0||t.setExpanded(e)}get minReservedLineCount(){return this.targetModel?this.targetModel.minReservedLineCount:0}},Sp=class extends zw{constructor(e,t){super();this.editor=e,this.commandService=t,this.sharedCache=this._register(new Ow),this.suggestWidgetAdapterModel=this._register(new dy(this.editor,this.sharedCache)),this.inlineCompletionsModel=this._register(new op(this.editor,this.sharedCache,this.commandService)),this._register(this.suggestWidgetAdapterModel.onDidChange(()=>{this.updateModel()})),this.updateModel()}get activeInlineCompletionsModel(){if(this.targetModel===this.inlineCompletionsModel)return this.inlineCompletionsModel}updateModel(){this.setTargetModel(this.suggestWidgetAdapterModel.isActive?this.suggestWidgetAdapterModel:this.inlineCompletionsModel),this.inlineCompletionsModel.setActive(this.targetModel===this.inlineCompletionsModel)}shouldShowHoverAt(e){var t;let n=(t=this.activeInlineCompletionsModel)===null||t===void 0?void 0:t.ghostText;return n?n.parts.some(i=>e.containsPosition(new q(n.lineNumber,i.column))):!1}triggerInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.trigger(En.Explicit)}commitInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.commitCurrentSuggestion()}hideInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.hide()}showNextInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.showNext()}showPreviousInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.showPrevious()}hasMultipleInlineCompletions(){var e;return EM(this,void 0,void 0,function*(){let t=yield(e=this.activeInlineCompletionsModel)===null||e===void 0?void 0:e.hasMultipleInlineCompletions();return t!==void 0?t:!1})}};Sp=wM([TM(1,pt)],Sp);var Ow=class extends B{constructor(){super(...arguments);this.onDidChangeEmitter=new $,this.onDidChange=this.onDidChangeEmitter.event,this.cache=this._register(new Ye)}get value(){return this.cache.value}setValue(e,t,n){this.cache.value=new Nf(e,t,()=>this.onDidChangeEmitter.fire(),n)}clearAndLeak(){return this.cache.clearAndLeak()}clear(){this.cache.clear()}};Ne();fi();U();Ze();Bt();Ys();$L();rt();te();GL();Ni();td();Te();Ke();Me();var Bw=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},nc=function(r,e){return function(t,n){e(t,n,r)}},cy,Hw=(cy=window.trustedTypes)===null||cy===void 0?void 0:cy.createPolicy("editorGhostText",{createHTML:r=>r}),vp=class extends B{constructor(e,t,n,i){super();this.editor=e,this.model=t,this.instantiationService=n,this.modeService=i,this.disposed=!1,this.partsWidget=this._register(this.instantiationService.createInstance(hy,this.editor)),this.additionalLinesWidget=this._register(new Vw(this.editor,this.modeService.languageIdCodec)),this.viewMoreContentWidget=void 0,this._register(this.editor.onDidChangeConfiguration(o=>{(o.hasChanged(29)||o.hasChanged(104)||o.hasChanged(87)||o.hasChanged(82)||o.hasChanged(44)||o.hasChanged(43)||o.hasChanged(58))&&this.update()})),this._register(We(()=>{var o;this.disposed=!0,this.update(),(o=this.viewMoreContentWidget)===null||o===void 0||o.dispose(),this.viewMoreContentWidget=void 0})),this._register(t.onDidChange(()=>{this.update()})),this.update()}shouldShowHoverAtViewZone(e){return this.additionalLinesWidget.viewZoneId===e}update(){var e;let t=this.model.ghostText;if(!this.editor.hasModel()||!t||this.disposed){this.partsWidget.clear(),this.additionalLinesWidget.clear();return}let n=new Array,i=new Array;function o(c,d){if(i.length>0){let h=i[i.length-1];d&&h.decorations.push(new Rm(h.content.length+1,h.content.length+1+c[0].length,d,0)),h.content+=c[0],c=c.slice(1)}for(let h of c)i.push({content:h,decorations:d?[new Rm(1,h.length+1,d,0)]:[]})}let s=this.editor.getModel().getLineContent(t.lineNumber);this.editor.getModel().getLineTokens(t.lineNumber);let a,l=0;for(let c of t.parts){let d=c.lines;a===void 0?(n.push({column:c.column,text:d[0],preview:c.preview}),d=d.slice(1)):o([s.substring(l,c.column-1)],void 0),d.length>0&&(o(d,"ghost-text"),a===void 0&&c.column<=s.length&&(a=c.column)),l=c.column-1}a!==void 0&&o([s.substring(l)],void 0),this.partsWidget.setParts(t.lineNumber,n,a!==void 0?{column:a,length:s.length+1-a}:void 0),this.additionalLinesWidget.updateLines(t.lineNumber,i,t.additionalReservedLineCount),t.parts.some(c=>c.lines.length<0)?this.viewMoreContentWidget=this.renderViewMoreLines(new q(t.lineNumber,this.editor.getModel().getLineMaxColumn(t.lineNumber)),"",0):((e=this.viewMoreContentWidget)===null||e===void 0||e.dispose(),this.viewMoreContentWidget=void 0)}renderViewMoreLines(e,t,n){let i=this.editor.getOption(43),o=document.createElement("div");o.className="suggest-preview-additional-widget",ql.applyFontInfoSlow(o,i);let s=document.createElement("span");s.className="content-spacer",s.append(t),o.append(s);let a=document.createElement("span");a.className="content-newline suggest-preview-text",a.append("\u23CE  "),o.append(a);let l=new R,c=document.createElement("div");return c.className="button suggest-preview-text",c.append(`+${n} lines\u2026`),l.add(fn(c,"mousedown",d=>{var h;(h=this.model)===null||h===void 0||h.setExpanded(!0),d.preventDefault(),this.editor.focus()})),o.append(c),new Gw(this.editor,e,o,l)}};vp=Bw([nc(2,he),nc(3,It)],vp);var hy=class{constructor(e,t,n,i){this.editor=e,this.codeEditorService=t,this.themeService=n,this.contextKeyService=i,this.decorationIds=[],this.disposableStore=new R}dispose(){this.clear(),this.disposableStore.dispose()}clear(){this.editor.deltaDecorations(this.decorationIds,[]),this.disposableStore.clear()}setParts(e,t,n){this.disposableStore.clear();let i=this.themeService.getColorTheme(),o=i.getColor(Km),s,a;o&&(s=String(o.rgba.a),a=fe.Format.CSS.format(Ww(o)));let l=i.getColor($m),c;l&&(c=`2px dashed ${l}`);let d=this.editor.getModel();if(!d)return;let{tabSize:h}=d.getOptions(),p=d.getLineContent(e)||"",g=0,y="",v=new Array;n&&v.push({range:C.fromPositions(new q(e,n.column),new q(e,n.column+n.length)),options:{inlineClassName:"ghost-text-hidden",description:"ghost-text-hidden"}});let w=this.contextKeyService.getContextKeyValue("config.editor.useInjectedText"),F=w===void 0?!0:!!w;this.decorationIds=this.editor.deltaDecorations(this.decorationIds,t.map(M=>{y+=p.substring(g,M.column-1),g=M.column-1;let z=F?M.text:this.renderSingleLineText(M.text,y,h,!1),V=this.disposableStore.add(LM(this.codeEditorService,"ghost-text","0-ghost-text-",{after:{contentText:z,opacity:s,color:a,border:c,fontWeight:M.preview?"bold":"normal"}}));return{range:C.fromPositions(new q(e,M.column)),options:F?{description:"ghost-text",after:{content:z,inlineClassName:M.preview?"ghost-text-decoration-preview":"ghost-text-decoration"},showIfCollapsed:!0}:Object.assign({},V.resolve())}}).concat(v))}renderSingleLineText(e,t,n,i){let o=t+e,s=Oh.visibleColumnsByColumns(o,n),a="",l=t.length+1;for(let c of e){if(c==="	"){let d=s[l+1]-s[l];if(i){a+="\u2192";for(let h=1;h<d;h++)a+="\xA0"}else for(let h=0;h<d;h++)a+="\xA0"}else c===" "?i?a+="\xB7":a+="\xA0":a+=c;l+=1}return a}};hy=Bw([nc(1,Ee),nc(2,St),nc(3,Q)],hy);function Ww(r){let{r:e,b:t,g:n}=r.rgba;return new fe(new gi(e,n,t,255))}var Vw=class{constructor(e,t){this.editor=e,this.languageIdCodec=t,this._viewZoneId=void 0}get viewZoneId(){return this._viewZoneId}dispose(){this.clear()}clear(){this.editor.changeViewZones(e=>{this._viewZoneId&&(e.removeZone(this._viewZoneId),this._viewZoneId=void 0)})}updateLines(e,t,n){let i=this.editor.getModel();if(!i)return;let{tabSize:o}=i.getOptions();this.editor.changeViewZones(s=>{this._viewZoneId&&(s.removeZone(this._viewZoneId),this._viewZoneId=void 0);let a=Math.max(t.length,n);if(a>0){let l=document.createElement("div");IM(l,o,t,this.editor.getOptions(),this.languageIdCodec),this._viewZoneId=s.addZone({afterLineNumber:e,heightInLines:a,domNode:l})}})}};function IM(r,e,t,n,i){let o=n.get(29),s=n.get(104),a="none",l=n.get(82),c=n.get(44),d=n.get(43),h=n.get(58),p=nv(1e4);p.appendASCIIString('<div class="suggest-preview-text">');for(let v=0,w=t.length;v<w;v++){let F=t[v],M=F.content;p.appendASCIIString('<div class="view-line'),p.appendASCIIString('" style="top:'),p.appendASCIIString(String(v*h)),p.appendASCIIString('px;width:1000000px;">');let z=PS(M),V=LS(M),G=dv.createEmpty(M,i);hv(new cv(d.isMonospace&&!o,d.canUseHalfwidthRightwardsArrow,M,!1,z,V,0,G,F.decorations,e,0,d.spaceWidth,d.middotWidth,d.wsmiddotWidth,s,a,l,c!==Jb.OFF,null),p),p.appendASCIIString("</div>")}p.appendASCIIString("</div>"),ql.applyFontInfoSlow(r,d);let g=p.build(),y=Hw?Hw.createHTML(g):g;r.innerHTML=y}var kM=0;function LM(r,e,t,n){let i=t+kM++;return r.registerDecorationType(e,i,n),{dispose(){r.removeDecorationType(i)},resolve(){return r.resolveDecorationOptions(i,!0)}}}var Gw=class extends B{constructor(e,t,n,i){super();this.editor=e,this.position=t,this.domNode=n,this.allowEditorOverflow=!1,this.suppressMouseDown=!1,this._register(i),this._register(We(()=>{this.editor.removeContentWidget(this)})),this.editor.addContentWidget(this)}getId(){return"editor.widget.viewMoreLinesWidget"}getDomNode(){return this.domNode}getPosition(){return{position:this.position,preference:[0]}}};ye((r,e)=>{let t=r.getColor(Km);if(t){let i=String(t.rgba.a),o=fe.Format.CSS.format(Ww(t));e.addRule(`.monaco-editor .ghost-text-decoration { opacity: ${i} !important; color: ${o} !important; }`),e.addRule(`.monaco-editor .ghost-text-decoration-preview { color: ${t.toString()} !important; }`),e.addRule(`.monaco-editor .suggest-preview-text .ghost-text { opacity: ${i} !important; color: ${o} !important; }`)}let n=r.getColor($m);n&&(e.addRule(`.monaco-editor .suggest-preview-text .ghost-text { border: 1px solid ${n}; }`),e.addRule(`.monaco-editor .ghost-text-decoration { border: 1px solid ${n}; }`),e.addRule(`.monaco-editor .ghost-text-decoration-preview { border: 1px solid ${n}; }`))});ne();Te();Ke();Ul();var jw=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},uy=function(r,e){return function(t,n){e(t,n,r)}},xp=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},ft=class Uw extends B{constructor(e,t){super();this.editor=e,this.instantiationService=t,this.triggeredExplicitly=!1,this.activeController=this._register(new Ye),this._register(this.editor.onDidChangeModel(()=>{this.updateModelController()})),this._register(this.editor.onDidChangeConfiguration(n=>{n.hasChanged(105)&&this.updateModelController(),n.hasChanged(54)&&this.updateModelController()})),this.updateModelController()}static get(e){return e.getContribution(Uw.ID)}get activeModel(){var e;return(e=this.activeController.value)===null||e===void 0?void 0:e.model}updateModelController(){let e=this.editor.getOption(105),t=this.editor.getOption(54);this.activeController.value=void 0,this.activeController.value=this.editor.hasModel()&&(e.preview||t.enabled||this.triggeredExplicitly)?this.instantiationService.createInstance(py,this.editor):void 0}shouldShowHoverAt(e){var t;return((t=this.activeModel)===null||t===void 0?void 0:t.shouldShowHoverAt(e))||!1}shouldShowHoverAtViewZone(e){var t,n;return((n=(t=this.activeController.value)===null||t===void 0?void 0:t.widget)===null||n===void 0?void 0:n.shouldShowHoverAtViewZone(e))||!1}trigger(){var e;this.triggeredExplicitly=!0,this.activeController.value||this.updateModelController(),(e=this.activeModel)===null||e===void 0||e.triggerInlineCompletion()}commit(){var e;(e=this.activeModel)===null||e===void 0||e.commitInlineCompletion()}hide(){var e;(e=this.activeModel)===null||e===void 0||e.hideInlineCompletion()}showNextInlineCompletion(){var e;(e=this.activeModel)===null||e===void 0||e.showNextInlineCompletion()}showPreviousInlineCompletion(){var e;(e=this.activeModel)===null||e===void 0||e.showPreviousInlineCompletion()}hasMultipleInlineCompletions(){var e;return xp(this,void 0,void 0,function*(){let t=yield(e=this.activeModel)===null||e===void 0?void 0:e.hasMultipleInlineCompletions();return t!==void 0?t:!1})}};ft.inlineSuggestionVisible=new de("inlineSuggestionVisible",!1,u("inlineSuggestionVisible","Whether an inline suggestion is visible"));ft.inlineSuggestionHasIndentation=new de("inlineSuggestionHasIndentation",!1,u("inlineSuggestionHasIndentation","Whether the inline suggestion starts with whitespace"));ft.inlineSuggestionHasIndentationLessThanTabSize=new de("inlineSuggestionHasIndentationLessThanTabSize",!0,u("inlineSuggestionHasIndentationLessThanTabSize","Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab"));ft.ID="editor.contrib.ghostTextController";ft=jw([uy(1,he)],ft);var $w=class{constructor(e){this.contextKeyService=e,this.inlineCompletionVisible=ft.inlineSuggestionVisible.bindTo(this.contextKeyService),this.inlineCompletionSuggestsIndentation=ft.inlineSuggestionHasIndentation.bindTo(this.contextKeyService),this.inlineCompletionSuggestsIndentationLessThanTabSize=ft.inlineSuggestionHasIndentationLessThanTabSize.bindTo(this.contextKeyService)}},py=class extends B{constructor(e,t,n){super();this.editor=e,this.instantiationService=t,this.contextKeyService=n,this.contextKeys=new $w(this.contextKeyService),this.model=this._register(this.instantiationService.createInstance(Sp,this.editor)),this.widget=this._register(this.instantiationService.createInstance(vp,this.editor,this.model)),this._register(We(()=>{this.contextKeys.inlineCompletionVisible.set(!1),this.contextKeys.inlineCompletionSuggestsIndentation.set(!1),this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(!0)})),this._register(this.model.onDidChange(()=>{this.updateContextKeys()})),this.updateContextKeys()}updateContextKeys(){var e;this.contextKeys.inlineCompletionVisible.set(((e=this.model.activeInlineCompletionsModel)===null||e===void 0?void 0:e.ghostText)!==void 0);let t=!1,n=!0,i=this.model.inlineCompletionsModel.ghostText;if(!!this.model.activeInlineCompletionsModel&&i&&i.parts.length>0){let{column:o,lines:s}=i.parts[0],a=s[0],l=this.editor.getModel().getLineIndentColumn(i.lineNumber);if(o<=l){let d=Al(a);d===-1&&(d=a.length-1),t=d>0;let h=this.editor.getModel().getOptions().tabSize;n=Oh.visibleColumnFromColumn(a,d+1,h)<h}}this.contextKeys.inlineCompletionSuggestsIndentation.set(t),this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(n)}};py=jw([uy(1,he),uy(2,Q)],py);var Kw=it.bindToContribution(ft.get),Ga=new Kw({id:tp,precondition:ft.inlineSuggestionVisible,handler(r){r.commit(),r.editor.focus()}});K(Ga);jt.registerKeybindingRule({primary:2,weight:200,id:Ga.id,when:O.and(Ga.precondition,x.tabMovesFocus.toNegated(),ft.inlineSuggestionHasIndentationLessThanTabSize)});K(new Kw({id:"editor.action.inlineSuggest.hide",precondition:ft.inlineSuggestionVisible,kbOpts:{weight:100,primary:9},handler(r){r.hide()}}));var xr=class extends N{constructor(){super({id:xr.ID,label:u("action.inlineSuggest.showNext","Show Next Inline Suggestion"),alias:"Show Next Inline Suggestion",precondition:O.and(x.writable,ft.inlineSuggestionVisible),kbOpts:{weight:100,primary:601}})}run(e,t){return xp(this,void 0,void 0,function*(){let n=ft.get(t);n&&(n.showNextInlineCompletion(),t.focus())})}};xr.ID="editor.action.inlineSuggest.showNext";var Cr=class extends N{constructor(){super({id:Cr.ID,label:u("action.inlineSuggest.showPrevious","Show Previous Inline Suggestion"),alias:"Show Previous Inline Suggestion",precondition:O.and(x.writable,ft.inlineSuggestionVisible),kbOpts:{weight:100,primary:599}})}run(e,t){return xp(this,void 0,void 0,function*(){let n=ft.get(t);n&&(n.showPreviousInlineCompletion(),t.focus())})}};Cr.ID="editor.action.inlineSuggest.showPrevious";var qw=class extends N{constructor(){super({id:"editor.action.inlineSuggest.trigger",label:u("action.inlineSuggest.trigger","Trigger Inline Suggestion"),alias:"Trigger Inline Suggestion",precondition:x.writable})}run(e,t){return xp(this,void 0,void 0,function*(){let n=ft.get(t);n&&n.trigger()})}};J(ft.ID,ft);I(qw);I(xr);I(Cr);ne();un();bt();Te();Fi();var PM=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},ja=function(r,e){return function(t,n){e(t,n,r)}},Xw=class{constructor(e,t,n){this.owner=e,this.range=t,this.controller=n}isValidForHoverAnchor(e){return e.type===1&&this.range.startColumn<=e.range.startColumn&&this.range.endColumn>=e.range.endColumn}hasMultipleSuggestions(){return this.controller.hasMultipleInlineCompletions()}},Cp=class{constructor(e,t,n,i,o,s,a,l){this._editor=e,this._hover=t,this._commandService=n,this._menuService=i,this._contextKeyService=o,this._modeService=s,this._openerService=a,this.accessibilityService=l}suggestHoverAnchor(e){let t=ft.get(this._editor);if(!t)return null;if(e.target.type===8){let n=e.target.detail;if(t.shouldShowHoverAtViewZone(n.viewZoneId))return new Hd(1e3,this,C.fromPositions(n.positionBefore||n.position,n.positionBefore||n.position))}return e.target.type===7&&e.target.range&&t.shouldShowHoverAt(e.target.range)?new Hd(1e3,this,e.target.range):e.target.type===6&&e.target.range&&e.target.detail&&e.target.detail.mightBeForeignElement&&t.shouldShowHoverAt(e.target.range)?new Hd(1e3,this,e.target.range):null}computeSync(e,t){let n=ft.get(this._editor);return n&&n.shouldShowHoverAt(e.range)?[new Xw(this,e.range,n)]:[]}renderHoverParts(e,t,n){let i=new R,o=e[0];this.accessibilityService.isScreenReaderOptimized()&&this.renderScreenReaderText(o,t,i);let s=i.add(this._menuService.createMenu(oe.InlineCompletionsActions,this._contextKeyService)),a=n.addAction({label:u("showNextInlineSuggestion","Next"),commandId:xr.ID,run:()=>this._commandService.executeCommand(xr.ID)}),l=n.addAction({label:u("showPreviousInlineSuggestion","Previous"),commandId:Cr.ID,run:()=>this._commandService.executeCommand(Cr.ID)});n.addAction({label:u("acceptInlineSuggestion","Accept"),commandId:Ga.id,run:()=>this._commandService.executeCommand(Ga.id)});let c=[a,l];for(let d of c)d.setEnabled(!1);o.hasMultipleSuggestions().then(d=>{for(let h of c)h.setEnabled(d)});for(let[d,h]of s.getActions())for(let p of h)p instanceof sr&&n.addAction({label:p.label,commandId:p.item.id,run:()=>this._commandService.executeCommand(p.item.id)});return i}renderScreenReaderText(e,t,n){var i,o;let s=W,a=s("div.hover-row.markdown-hover"),l=H(a,s("div.hover-contents")),c=n.add(new Bn({editor:this._editor},this._modeService,this._openerService)),d=p=>{n.add(c.onDidRenderAsync(()=>{l.className="hover-contents code-hover-contents",this._hover.onContentsChanged()}));let g=u("inlineSuggestionFollows","Suggestion:"),y=n.add(c.render(new kn().appendText(g).appendCodeblock("text",p)));l.replaceChildren(y.element)},h=(o=(i=e.controller.activeModel)===null||i===void 0?void 0:i.inlineCompletionsModel)===null||o===void 0?void 0:o.ghostText;if(h){let p=this._editor.getModel().getLineContent(h.lineNumber);d(h.renderForScreenReader(p))}t.appendChild(a)}};Cp=PM([ja(2,pt),ja(3,Hi),ja(4,Q),ja(5,It),ja(6,Vt),ja(7,ru)],Cp);Te();Ke();On();var Jw=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},_p=function(r,e){return function(t,n){e(t,n,r)}},Yw=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},Zw=W,my=class extends B{constructor(e){super();this._keybindingService=e,this._hasContent=!1,this.hoverElement=Zw("div.hover-row.status-bar"),this.actionsElement=H(this.hoverElement,Zw("div.actions"))}get hasContent(){return this._hasContent}addAction(e){let t=this._keybindingService.lookupKeybinding(e.commandId),n=t?t.getLabel():null;return this._hasContent=!0,this._register(zd.render(this.actionsElement,e,n))}append(e){let t=H(this.actionsElement,e);return this._hasContent=!0,t}};my=Jw([_p(0,Qe)],my);var ic=class{constructor(e,t){this._participants=t,this._editor=e,this._result=[],this._anchor=null}setAnchor(e){this._anchor=e,this._result=[]}clearResult(){this._result=[]}static _getLineDecorations(e,t){if(t.type!==1)return[];let n=e.getModel(),i=t.range.startLineNumber,o=n.getLineMaxColumn(i);return e.getLineDecorations(i).filter(s=>{if(s.options.isWholeLine)return!0;let a=s.range.startLineNumber===i?s.range.startColumn:1,l=s.range.endLineNumber===i?s.range.endColumn:o;return!(a>t.range.startColumn||t.range.endColumn>l)})}computeAsync(e){return Yw(this,void 0,void 0,function*(){let t=this._anchor;if(!this._editor.hasModel()||!t)return Promise.resolve([]);let n=ic._getLineDecorations(this._editor,t),i=yield Promise.all(this._participants.map(o=>this._computeAsync(o,n,t,e)));return pa(i)})}_computeAsync(e,t,n,i){return Yw(this,void 0,void 0,function*(){return e.computeAsync?e.computeAsync(n,t,i):[]})}computeSync(){if(!this._editor.hasModel()||!this._anchor)return[];let e=ic._getLineDecorations(this._editor,this._anchor),t=[];for(let n of this._participants)t=t.concat(n.computeSync(this._anchor,e));return Yn(t)}onResult(e,t){t?this._result=e.concat(this._result):this._result=this._result.concat(e)}getResult(){return this._result.slice(0)}getResultWithLoadingMessage(){if(this._anchor){for(let e of this._participants)if(e.createLoadingMessage){let t=e.createLoadingMessage(this._anchor);if(t)return this._result.slice(0).concat([t])}}return this._result.slice(0)}},Ro=class gy extends Ft{constructor(e,t,n,i,o){super();this._hoverVisibleKey=t,this._keybindingService=i,this._contextKeyService=o,this.allowEditorOverflow=!0,this._participants=[n.createInstance(Uu,e,this),n.createInstance(Yu,e,this),n.createInstance(Cp,e,this),n.createInstance(ep,e,this)],this._editor=e,this._isVisible=!1,this._stoleFocus=!1,this._renderDisposable=null,this._hover=this._register(new Nd),this._hover.containerDomNode.classList.toggle("hidden",!this._isVisible),this.onkeydown(this._hover.containerDomNode,s=>{s.equals(9)&&this.hide()}),this._register(this._editor.onDidChangeConfiguration(s=>{s.hasChanged(43)&&this._updateFont()})),this._editor.onDidLayoutChange(()=>this.layout()),this.layout(),this._editor.addContentWidget(this),this._showAtPosition=null,this._showAtRange=null,this._stoleFocus=!1,this._messages=[],this._lastAnchor=null,this._computer=new ic(this._editor,this._participants),this._highlightDecorations=[],this._isChangingDecorations=!1,this._shouldFocus=!1,this._colorPicker=null,this._preferAbove=this._editor.getOption(52).above,this._hoverOperation=new Od(this._computer,s=>this._withResult(s,!0),null,s=>this._withResult(s,!1),this._editor.getOption(52).delay),this._register(fn(this.getDomNode(),dn.FOCUS,()=>{this._colorPicker&&this.getDomNode().classList.add("colorpicker-hover")})),this._register(fn(this.getDomNode(),dn.BLUR,()=>{this.getDomNode().classList.remove("colorpicker-hover")})),this._register(e.onDidChangeConfiguration(()=>{this._hoverOperation.setHoverTime(this._editor.getOption(52).delay),this._preferAbove=this._editor.getOption(52).above})),this._register(tr.onDidChange(()=>{this._isVisible&&this._lastAnchor&&this._messages.length>0&&(this._hover.contentsDomNode.textContent="",this._renderMessages(this._lastAnchor,this._messages))}))}dispose(){this._hoverOperation.cancel(),this._editor.removeContentWidget(this),super.dispose()}getId(){return gy.ID}getDomNode(){return this._hover.containerDomNode}_shouldShowAt(e){let t=e.target.type;if(t===6)return!0;if(t===7){let n=this._editor.getOption(43).typicalHalfwidthCharacterWidth/2,i=e.target.detail;if(i&&!i.isAfterLines&&typeof i.horizontalDistanceToText=="number"&&i.horizontalDistanceToText<n)return!0}return!1}maybeShowAt(e){var t;let n=[];for(let i of this._participants)if(typeof i.suggestHoverAnchor=="function"){let o=i.suggestHoverAnchor(e);o&&n.push(o)}if(this._shouldShowAt(e)&&e.target.range){let o=[...((t=e.target.element)===null||t===void 0?void 0:t.classList.values())||[]].find(s=>s.startsWith("ced-colorBox"))&&e.target.range.endColumn-e.target.range.startColumn===1?new C(e.target.range.startLineNumber,e.target.range.startColumn+1,e.target.range.endLineNumber,e.target.range.endColumn+1):e.target.range;n.push(new $u(0,o))}return n.length===0?!1:(n.sort((i,o)=>o.priority-i.priority),this._startShowingAt(n[0],0,!1),!0)}_showAt(e,t,n){this._showAtPosition=e,this._showAtRange=t,this._hoverVisibleKey.set(!0),this._isVisible=!0,this._hover.containerDomNode.classList.toggle("hidden",!this._isVisible),this._editor.layoutContentWidget(this),this._editor.render(),this._stoleFocus=n,n&&this._hover.containerDomNode.focus()}getPosition(){if(this._isVisible){let e=this._preferAbove;return!e&&this._contextKeyService.getContextKeyValue(me.Visible.key)&&(e=!0),{position:this._showAtPosition,range:this._showAtRange,preference:e?[1,2]:[2,1]}}return null}_updateFont(){Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName("code")).forEach(t=>this._editor.applyFontInfo(t))}_updateContents(e){this._hover.contentsDomNode.textContent="",this._hover.contentsDomNode.appendChild(e),this._updateFont(),this._editor.layoutContentWidget(this),this._hover.onContentsChanged()}layout(){let e=Math.max(this._editor.getLayoutInfo().height/4,250),{fontSize:t,lineHeight:n}=this._editor.getOption(43);this._hover.contentsDomNode.style.fontSize=`${t}px`,this._hover.contentsDomNode.style.lineHeight=`${n/t}`,this._hover.contentsDomNode.style.maxHeight=`${e}px`,this._hover.contentsDomNode.style.maxWidth=`${Math.max(this._editor.getLayoutInfo().width*.66,500)}px`}onModelDecorationsChanged(){this._isChangingDecorations||this._isVisible&&(this._hoverOperation.cancel(),this._computer.clearResult(),this._colorPicker||this._hoverOperation.start(0))}startShowingAtRange(e,t,n){this._startShowingAt(new $u(0,e),t,n)}_startShowingAt(e,t,n){if(!(this._lastAnchor&&this._lastAnchor.equals(e))){if(this._hoverOperation.cancel(),this._isVisible)if(!this._showAtPosition||!this._lastAnchor||!e.canAdoptVisibleHover(this._lastAnchor,this._showAtPosition))this.hide();else{let i=this._messages.filter(o=>o.isValidForHoverAnchor(e));if(i.length===0)this.hide();else{if(i.length===this._messages.length)return;this._renderMessages(e,i)}}this._lastAnchor=e,this._computer.setAnchor(e),this._shouldFocus=n,this._hoverOperation.start(t)}}hide(){this._lastAnchor=null,this._hoverOperation.cancel(),this._isVisible&&(setTimeout(()=>{this._isVisible||this._hoverVisibleKey.set(!1)},0),this._isVisible=!1,this._hover.containerDomNode.classList.toggle("hidden",!this._isVisible),this._editor.layoutContentWidget(this),this._stoleFocus&&this._editor.focus()),this._isChangingDecorations=!0,this._highlightDecorations=this._editor.deltaDecorations(this._highlightDecorations,[]),this._isChangingDecorations=!1,this._renderDisposable&&(this._renderDisposable.dispose(),this._renderDisposable=null),this._colorPicker=null}isColorPickerVisible(){return!!this._colorPicker}setColorPicker(e){this._colorPicker=e}onContentsChanged(){this._hover.onContentsChanged()}_withResult(e,t){this._messages=e,this._lastAnchor&&this._messages.length>0?this._renderMessages(this._lastAnchor,this._messages):t&&this.hide()}_renderMessages(e,t){this._renderDisposable&&(this._renderDisposable.dispose(),this._renderDisposable=null),this._colorPicker=null;let n=1073741824,i=t[0].range,o=null,s=document.createDocumentFragment(),a=new R,l=new Map;for(let d of t)n=Math.min(n,d.range.startColumn),i=C.plusRange(i,d.range),d.forceShowAtRange&&(o=d.range),l.has(d.owner)||l.set(d.owner,[]),l.get(d.owner).push(d);let c=a.add(new my(this._keybindingService));for(let[d,h]of l)a.add(d.renderHoverParts(h,s,c));c.hasContent&&s.appendChild(c.hoverElement),this._renderDisposable=a,s.hasChildNodes()&&(o?this._showAt(o.getStartPosition(),o,this._shouldFocus):this._showAt(new q(e.range.startLineNumber,n),i,this._shouldFocus),this._updateContents(s)),this._colorPicker&&this._colorPicker.layout(),this._isChangingDecorations=!0,this._highlightDecorations=this._editor.deltaDecorations(this._highlightDecorations,i?[{range:i,options:gy._DECORATION_OPTIONS}]:[]),this._isChangingDecorations=!1}};Ro.ID="editor.contrib.modesContentHoverWidget";Ro._DECORATION_OPTIONS=xe.register({description:"content-hover-highlight",className:"hoverHighlight"});Ro=Jw([_p(2,he),_p(3,Qe),_p(4,Q)],Ro);Ne();mt();U();vo();Fi();var Qw=W,eT=class{constructor(e){this._editor=e,this._lineNumber=-1,this._result=[]}setLineNumber(e){this._lineNumber=e,this._result=[]}clearResult(){this._result=[]}computeSync(){let e=i=>({value:i}),t=this._editor.getLineDecorations(this._lineNumber),n=[];if(!t)return n;for(let i of t){if(!i.options.glyphMarginClassName)continue;let o=i.options.glyphMarginHoverMessage;!o||Ia(o)||n.push(...Th(o).map(e))}return n}onResult(e,t){this._result=this._result.concat(e)}getResult(){return this._result}getResultWithLoadingMessage(){return this.getResult()}},Fo=class extends Ft{constructor(e,t,n=HS){super();this._renderDisposeables=this._register(new R),this._editor=e,this._isVisible=!1,this._messages=[],this._lastLineNumber=-1,this._hover=this._register(new Nd),this._hover.containerDomNode.classList.toggle("hidden",!this._isVisible),this._markdownRenderer=this._register(new Bn({editor:this._editor},t,n)),this._computer=new eT(this._editor),this._hoverOperation=new Od(this._computer,i=>this._withResult(i),void 0,i=>this._withResult(i),300),this._register(this._editor.onDidChangeConfiguration(i=>{i.hasChanged(43)&&this._updateFont()})),this._editor.addOverlayWidget(this)}dispose(){this._hoverOperation.cancel(),this._editor.removeOverlayWidget(this),super.dispose()}getId(){return Fo.ID}getDomNode(){return this._hover.containerDomNode}getPosition(){return null}_showAt(e){this._isVisible||(this._isVisible=!0,this._hover.containerDomNode.classList.toggle("hidden",!this._isVisible));let t=this._editor.getLayoutInfo(),n=this._editor.getTopForLineNumber(e),i=this._editor.getScrollTop(),o=this._editor.getOption(58),s=this._hover.containerDomNode.clientHeight,a=n-i-(s-o)/2;this._hover.containerDomNode.style.left=`${t.glyphMarginLeft+t.glyphMarginWidth}px`,this._hover.containerDomNode.style.top=`${Math.max(Math.round(a),0)}px`}_updateFont(){Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName("code")).forEach(t=>this._editor.applyFontInfo(t))}_updateContents(e){this._hover.contentsDomNode.textContent="",this._hover.contentsDomNode.appendChild(e),this._updateFont()}onModelDecorationsChanged(){this._isVisible&&(this._hoverOperation.cancel(),this._computer.clearResult(),this._hoverOperation.start(0))}startShowingAt(e){this._lastLineNumber!==e&&(this._hoverOperation.cancel(),this.hide(),this._lastLineNumber=e,this._computer.setLineNumber(e),this._hoverOperation.start(0))}hide(){this._lastLineNumber=-1,this._hoverOperation.cancel(),this._isVisible&&(this._isVisible=!1,this._hover.containerDomNode.classList.toggle("hidden",!this._isVisible))}_withResult(e){this._messages=e,this._messages.length>0?this._renderMessages(this._lastLineNumber,this._messages):this.hide()}_renderMessages(e,t){this._renderDisposeables.clear();let n=document.createDocumentFragment();for(let i of t){let o=Qw("div.hover-row.markdown-hover"),s=H(o,Qw("div.hover-contents")),a=this._renderDisposeables.add(this._markdownRenderer.render(i.value));s.appendChild(a.element),n.appendChild(o)}this._updateContents(n),this._showAt(e)}};Fo.ID="editor.contrib.modesGlyphHoverWidget";ne();Te();Ke();Fi();Je();Me();var MM=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},wp=function(r,e){return function(t,n){e(t,n,r)}},Ao=class tT{constructor(e,t,n,i,o){this._editor=e,this._instantiationService=t,this._openerService=n,this._modeService=i,this._toUnhook=new R,this._isMouseDown=!1,this._hoverClicked=!1,this._contentWidget=null,this._glyphWidget=null,this._hookEvents(),this._didChangeConfigurationHandler=this._editor.onDidChangeConfiguration(s=>{s.hasChanged(52)&&(this._unhookEvents(),this._hookEvents())}),this._hoverVisibleKey=x.hoverVisible.bindTo(o)}static get(e){return e.getContribution(tT.ID)}_hookEvents(){let e=()=>this._hideWidgets(),t=this._editor.getOption(52);this._isHoverEnabled=t.enabled,this._isHoverSticky=t.sticky,this._isHoverEnabled?(this._toUnhook.add(this._editor.onMouseDown(n=>this._onEditorMouseDown(n))),this._toUnhook.add(this._editor.onMouseUp(n=>this._onEditorMouseUp(n))),this._toUnhook.add(this._editor.onMouseMove(n=>this._onEditorMouseMove(n))),this._toUnhook.add(this._editor.onKeyDown(n=>this._onKeyDown(n))),this._toUnhook.add(this._editor.onDidChangeModelDecorations(()=>this._onModelDecorationsChanged()))):(this._toUnhook.add(this._editor.onMouseMove(n=>this._onEditorMouseMove(n))),this._toUnhook.add(this._editor.onKeyDown(n=>this._onKeyDown(n)))),this._toUnhook.add(this._editor.onMouseLeave(e)),this._toUnhook.add(this._editor.onDidChangeModel(e)),this._toUnhook.add(this._editor.onDidScrollChange(n=>this._onEditorScrollChanged(n)))}_unhookEvents(){this._toUnhook.clear()}_onModelDecorationsChanged(){var e,t;(e=this._contentWidget)===null||e===void 0||e.onModelDecorationsChanged(),(t=this._glyphWidget)===null||t===void 0||t.onModelDecorationsChanged()}_onEditorScrollChanged(e){(e.scrollTopChanged||e.scrollLeftChanged)&&this._hideWidgets()}_onEditorMouseDown(e){this._isMouseDown=!0;let t=e.target.type;if(t===9&&e.target.detail===Ro.ID){this._hoverClicked=!0;return}t===12&&e.target.detail===Fo.ID||(t!==12&&e.target.detail!==Fo.ID&&(this._hoverClicked=!1),this._hideWidgets())}_onEditorMouseUp(e){this._isMouseDown=!1}_onEditorMouseMove(e){var t,n,i,o,s;let a=e.target.type;if(this._isMouseDown&&this._hoverClicked||this._isHoverSticky&&a===9&&e.target.detail===Ro.ID||this._isHoverSticky&&!(!((n=(t=e.event.browserEvent.view)===null||t===void 0?void 0:t.getSelection())===null||n===void 0)&&n.isCollapsed)||!this._isHoverSticky&&a===9&&e.target.detail===Ro.ID&&((i=this._contentWidget)===null||i===void 0?void 0:i.isColorPickerVisible())||this._isHoverSticky&&a===12&&e.target.detail===Fo.ID)return;if(!this._isHoverEnabled){this._hideWidgets();return}if(this._getOrCreateContentWidget().maybeShowAt(e)){(o=this._glyphWidget)===null||o===void 0||o.hide();return}if(a===2&&e.target.position){(s=this._contentWidget)===null||s===void 0||s.hide(),this._glyphWidget||(this._glyphWidget=new Fo(this._editor,this._modeService,this._openerService)),this._glyphWidget.startShowingAt(e.target.position.lineNumber);return}this._hideWidgets()}_onKeyDown(e){e.keyCode!==5&&e.keyCode!==6&&e.keyCode!==57&&e.keyCode!==4&&this._hideWidgets()}_hideWidgets(){var e,t,n;this._isMouseDown&&this._hoverClicked&&((e=this._contentWidget)===null||e===void 0?void 0:e.isColorPickerVisible())||(this._hoverClicked=!1,(t=this._glyphWidget)===null||t===void 0||t.hide(),(n=this._contentWidget)===null||n===void 0||n.hide())}_getOrCreateContentWidget(){return this._contentWidget||(this._contentWidget=this._instantiationService.createInstance(Ro,this._editor,this._hoverVisibleKey)),this._contentWidget}isColorPickerVisible(){var e;return((e=this._contentWidget)===null||e===void 0?void 0:e.isColorPickerVisible())||!1}showContentHover(e,t,n){this._getOrCreateContentWidget().startShowingAtRange(e,t,n)}dispose(){var e,t;this._unhookEvents(),this._toUnhook.dispose(),this._didChangeConfigurationHandler.dispose(),(e=this._glyphWidget)===null||e===void 0||e.dispose(),(t=this._contentWidget)===null||t===void 0||t.dispose()}};Ao.ID="editor.contrib.hover";Ao=MM([wp(1,he),wp(2,Vt),wp(3,It),wp(4,Q)],Ao);var nT=class extends N{constructor(){super({id:"editor.action.showHover",label:u({key:"showHover",comment:["Label for action that will trigger the showing of a hover in the editor.","This allows for users to show the hover without using the mouse."]},"Show Hover"),alias:"Show Hover",precondition:void 0,kbOpts:{kbExpr:x.editorTextFocus,primary:$e(2089,2087),weight:100}})}run(e,t){if(!t.hasModel())return;let n=Ao.get(t);if(!n)return;let i=t.getPosition(),o=new C(i.lineNumber,i.column,i.lineNumber,i.column),s=t.getOption(2)===2;n.showContentHover(o,1,s)}},iT=class extends N{constructor(){super({id:"editor.action.showDefinitionPreviewHover",label:u({key:"showDefinitionPreviewHover",comment:["Label for action that will trigger the showing of definition preview hover in the editor.","This allows for users to show the definition preview hover without using the mouse."]},"Show Definition Preview Hover"),alias:"Show Definition Preview Hover",precondition:void 0})}run(e,t){let n=Ao.get(t);if(!n)return;let i=t.getPosition();if(!i)return;let o=new C(i.lineNumber,i.column,i.lineNumber,i.column);br.get(t).startFindDefinitionFromCursor(i).then(()=>{n.showContentHover(o,1,!0)})}};J(Ao.ID,Ao);I(nT);I(iT);ye((r,e)=>{let t=r.getColor(Kv);t&&e.addRule(`.monaco-editor .hoverHighlight { background-color: ${t}; }`);let n=r.getColor(bo);n&&e.addRule(`.monaco-editor .monaco-hover { background-color: ${n}; }`);let i=r.getColor(va);i&&(e.addRule(`.monaco-editor .monaco-hover { border: 1px solid ${i}; }`),e.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${i.transparent(.5)}; }`),e.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${i.transparent(.5)}; }`),e.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${i.transparent(.5)}; }`));let o=r.getColor(Bi);o&&e.addRule(`.monaco-editor .monaco-hover a { color: ${o}; }`);let s=r.getColor(Wi);s&&e.addRule(`.monaco-editor .monaco-hover a:hover { color: ${s}; }`);let a=r.getColor(Sa);a&&e.addRule(`.monaco-editor .monaco-hover { color: ${a}; }`);let l=r.getColor(qv);l&&e.addRule(`.monaco-editor .monaco-hover .hover-row .actions { background-color: ${l}; }`);let c=r.getColor(ga);c&&e.addRule(`.monaco-editor .monaco-hover code { background-color: ${c}; }`)});var Tp=class extends B{constructor(e){super();this._editor=e,this._register(e.onMouseDown(t=>this.onMouseDown(t)))}dispose(){super.dispose()}onMouseDown(e){var t;if(e.target.type!==6||![...((t=e.target.element)===null||t===void 0?void 0:t.classList.values())||[]].find(s=>s.startsWith("ced-colorBox"))||!e.target.range)return;let o=this._editor.getContribution(Ao.ID);if(!o.isColorPickerVisible()){let s=new C(e.target.range.startLineNumber,e.target.range.startColumn+1,e.target.range.endLineNumber,e.target.range.endColumn+1);o.showContentHover(s,0,!1)}}};Tp.ID="editor.contrib.colorContribution";J(Tp.ID,Tp);ho();ce();te();Be();fo();rt();te();wt();Oi();var wi=class{constructor(e,t){this._selection=e,this._insertSpace=t,this._usedEndToken=null}static _haystackHasNeedleAtOffset(e,t,n){if(n<0)return!1;let i=t.length,o=e.length;if(n+i>o)return!1;for(let s=0;s<i;s++){let a=e.charCodeAt(n+s),l=t.charCodeAt(s);if(a!==l&&!(a>=65&&a<=90&&a+32===l)&&!(l>=65&&l<=90&&l+32===a))return!1}return!0}_createOperationsForBlockComment(e,t,n,i,o,s){let a=e.startLineNumber,l=e.startColumn,c=e.endLineNumber,d=e.endColumn,h=o.getLineContent(a),p=o.getLineContent(c),g=h.lastIndexOf(t,l-1+t.length),y=p.indexOf(n,d-1-n.length);if(g!==-1&&y!==-1)if(a===c)h.substring(g+t.length,y).indexOf(n)>=0&&(g=-1,y=-1);else{let w=h.substring(g+t.length),F=p.substring(0,y);(w.indexOf(n)>=0||F.indexOf(n)>=0)&&(g=-1,y=-1)}let v;g!==-1&&y!==-1?(i&&g+t.length<h.length&&h.charCodeAt(g+t.length)===32&&(t=t+" "),i&&y>0&&p.charCodeAt(y-1)===32&&(n=" "+n,y-=1),v=wi._createRemoveBlockCommentOperations(new C(a,g+t.length+1,c,y+1),t,n)):(v=wi._createAddBlockCommentOperations(e,t,n,this._insertSpace),this._usedEndToken=v.length===1?n:null);for(let w of v)s.addTrackedEditOperation(w.range,w.text)}static _createRemoveBlockCommentOperations(e,t,n){let i=[];return C.isEmpty(e)?i.push(He.delete(new C(e.startLineNumber,e.startColumn-t.length,e.endLineNumber,e.endColumn+n.length))):(i.push(He.delete(new C(e.startLineNumber,e.startColumn-t.length,e.startLineNumber,e.startColumn))),i.push(He.delete(new C(e.endLineNumber,e.endColumn,e.endLineNumber,e.endColumn+n.length)))),i}static _createAddBlockCommentOperations(e,t,n,i){let o=[];return C.isEmpty(e)?o.push(He.replace(new C(e.startLineNumber,e.startColumn,e.endLineNumber,e.endColumn),t+"  "+n)):(o.push(He.insert(new q(e.startLineNumber,e.startColumn),t+(i?" ":""))),o.push(He.insert(new q(e.endLineNumber,e.endColumn),(i?" ":"")+n))),o}getEditOperations(e,t){let n=this._selection.startLineNumber,i=this._selection.startColumn;e.tokenizeIfCheap(n);let o=e.getLanguageIdAtPosition(n,i),s=Ge.getComments(o);!s||!s.blockCommentStartToken||!s.blockCommentEndToken||this._createOperationsForBlockComment(this._selection,s.blockCommentStartToken,s.blockCommentEndToken,this._insertSpace,e,t)}computeCursorState(e,t){let n=t.getInverseEditOperations();if(n.length===2){let i=n[0],o=n[1];return new Z(i.range.endLineNumber,i.range.endColumn,o.range.startLineNumber,o.range.startColumn)}else{let i=n[0].range,o=this._usedEndToken?-this._usedEndToken.length-1:0;return new Z(i.endLineNumber,i.endColumn+o,i.endLineNumber,i.endColumn+o)}}};Ze();fo();rt();te();wt();Oi();var Ti=class{constructor(e,t,n,i,o,s){this._selection=e,this._tabSize=t,this._type=n,this._insertSpace=i,this._selectionId=null,this._deltaColumn=0,this._moveEndPositionDown=!1,this._ignoreEmptyLines=o,this._ignoreFirstLine=s||!1}static _gatherPreflightCommentStrings(e,t,n){e.tokenizeIfCheap(t);let i=e.getLanguageIdAtPosition(t,1),o=Ge.getComments(i),s=o?o.lineCommentToken:null;if(!s)return null;let a=[];for(let l=0,c=n-t+1;l<c;l++)a[l]={ignore:!1,commentStr:s,commentStrOffset:0,commentStrLength:s.length};return a}static _analyzeLines(e,t,n,i,o,s,a){let l=!0,c;e===0?c=!0:e===1?c=!1:c=!0;for(let d=0,h=i.length;d<h;d++){let p=i[d],g=o+d;if(g===o&&a){p.ignore=!0;continue}let y=n.getLineContent(g),v=Al(y);if(v===-1){p.ignore=s,p.commentStrOffset=y.length;continue}if(l=!1,p.ignore=!1,p.commentStrOffset=v,c&&!wi._haystackHasNeedleAtOffset(y,p.commentStr,v)&&(e===0?c=!1:e===1||(p.ignore=!0)),c&&t){let w=v+p.commentStrLength;w<y.length&&y.charCodeAt(w)===32&&(p.commentStrLength+=1)}}if(e===0&&l){c=!1;for(let d=0,h=i.length;d<h;d++)i[d].ignore=!1}return{supported:!0,shouldRemoveComments:c,lines:i}}static _gatherPreflightData(e,t,n,i,o,s,a){let l=Ti._gatherPreflightCommentStrings(n,i,o);return l===null?{supported:!1}:Ti._analyzeLines(e,t,n,l,i,s,a)}_executeLineComments(e,t,n,i){let o;n.shouldRemoveComments?o=Ti._createRemoveLineCommentsOperations(n.lines,i.startLineNumber):(Ti._normalizeInsertionPoint(e,n.lines,i.startLineNumber,this._tabSize),o=this._createAddLineCommentsOperations(n.lines,i.startLineNumber));let s=new q(i.positionLineNumber,i.positionColumn);for(let a=0,l=o.length;a<l;a++)t.addEditOperation(o[a].range,o[a].text),C.isEmpty(o[a].range)&&C.getStartPosition(o[a].range).equals(s)&&e.getLineContent(s.lineNumber).length+1===s.column&&(this._deltaColumn=(o[a].text||"").length);this._selectionId=t.trackSelection(i)}_attemptRemoveBlockComment(e,t,n,i){let o=t.startLineNumber,s=t.endLineNumber,a=i.length+Math.max(e.getLineFirstNonWhitespaceColumn(t.startLineNumber),t.startColumn),l=e.getLineContent(o).lastIndexOf(n,a-1),c=e.getLineContent(s).indexOf(i,t.endColumn-1-n.length);return l!==-1&&c===-1&&(c=e.getLineContent(o).indexOf(i,l+n.length),s=o),l===-1&&c!==-1&&(l=e.getLineContent(s).lastIndexOf(n,c),o=s),t.isEmpty()&&(l===-1||c===-1)&&(l=e.getLineContent(o).indexOf(n),l!==-1&&(c=e.getLineContent(o).indexOf(i,l+n.length))),l!==-1&&e.getLineContent(o).charCodeAt(l+n.length)===32&&(n+=" "),c!==-1&&e.getLineContent(s).charCodeAt(c-1)===32&&(i=" "+i,c-=1),l!==-1&&c!==-1?wi._createRemoveBlockCommentOperations(new C(o,l+n.length+1,s,c+1),n,i):null}_executeBlockComment(e,t,n){e.tokenizeIfCheap(n.startLineNumber);let i=e.getLanguageIdAtPosition(n.startLineNumber,1),o=Ge.getComments(i);if(!o||!o.blockCommentStartToken||!o.blockCommentEndToken)return;let s=o.blockCommentStartToken,a=o.blockCommentEndToken,l=this._attemptRemoveBlockComment(e,n,s,a);if(!l){if(n.isEmpty()){let c=e.getLineContent(n.startLineNumber),d=Al(c);d===-1&&(d=c.length),l=wi._createAddBlockCommentOperations(new C(n.startLineNumber,d+1,n.startLineNumber,c.length+1),s,a,this._insertSpace)}else l=wi._createAddBlockCommentOperations(new C(n.startLineNumber,e.getLineFirstNonWhitespaceColumn(n.startLineNumber),n.endLineNumber,e.getLineMaxColumn(n.endLineNumber)),s,a,this._insertSpace);l.length===1&&(this._deltaColumn=s.length+1)}this._selectionId=t.trackSelection(n);for(let c of l)t.addEditOperation(c.range,c.text)}getEditOperations(e,t){let n=this._selection;if(this._moveEndPositionDown=!1,n.startLineNumber===n.endLineNumber&&this._ignoreFirstLine){t.addEditOperation(new C(n.startLineNumber,e.getLineMaxColumn(n.startLineNumber),n.startLineNumber+1,1),n.startLineNumber===e.getLineCount()?"":`
`),this._selectionId=t.trackSelection(n);return}n.startLineNumber<n.endLineNumber&&n.endColumn===1&&(this._moveEndPositionDown=!0,n=n.setEndPosition(n.endLineNumber-1,e.getLineMaxColumn(n.endLineNumber-1)));let i=Ti._gatherPreflightData(this._type,this._insertSpace,e,n.startLineNumber,n.endLineNumber,this._ignoreEmptyLines,this._ignoreFirstLine);return i.supported?this._executeLineComments(e,t,i,n):this._executeBlockComment(e,t,n)}computeCursorState(e,t){let n=t.getTrackedSelection(this._selectionId);return this._moveEndPositionDown&&(n=n.setEndPosition(n.endLineNumber+1,1)),new Z(n.selectionStartLineNumber,n.selectionStartColumn+this._deltaColumn,n.positionLineNumber,n.positionColumn+this._deltaColumn)}static _createRemoveLineCommentsOperations(e,t){let n=[];for(let i=0,o=e.length;i<o;i++){let s=e[i];s.ignore||n.push(He.delete(new C(t+i,s.commentStrOffset+1,t+i,s.commentStrOffset+s.commentStrLength+1)))}return n}_createAddLineCommentsOperations(e,t){let n=[],i=this._insertSpace?" ":"";for(let o=0,s=e.length;o<s;o++){let a=e[o];a.ignore||n.push(He.insert(new q(t+o,a.commentStrOffset+1),a.commentStr+i))}return n}static nextVisibleColumn(e,t,n,i){return n?e+(t-e%t):e+i}static _normalizeInsertionPoint(e,t,n,i){let o=1073741824,s,a;for(let l=0,c=t.length;l<c;l++){if(t[l].ignore)continue;let d=e.getLineContent(n+l),h=0;for(let p=0,g=t[l].commentStrOffset;h<o&&p<g;p++)h=Ti.nextVisibleColumn(h,i,d.charCodeAt(p)===9,1);h<o&&(o=h)}o=Math.floor(o/i)*i;for(let l=0,c=t.length;l<c;l++){if(t[l].ignore)continue;let d=e.getLineContent(n+l),h=0;for(s=0,a=t[l].commentStrOffset;h<o&&s<a;s++)h=Ti.nextVisibleColumn(h,i,d.charCodeAt(s)===9,1);h>o?t[l].commentStrOffset=s-1:t[l].commentStrOffset=s}}};ne();un();var Ep=class extends N{constructor(e,t){super(t);this._type=e}run(e,t){if(!t.hasModel())return;let n=t.getModel(),i=[],o=n.getOptions(),s=t.getOption(19),a=t.getSelections().map((c,d)=>({selection:c,index:d,ignoreFirstLine:!1}));a.sort((c,d)=>C.compareRangesUsingStarts(c.selection,d.selection));let l=a[0];for(let c=1;c<a.length;c++){let d=a[c];l.selection.endLineNumber===d.selection.startLineNumber&&(l.index<d.index?d.ignoreFirstLine=!0:(l.ignoreFirstLine=!0,l=d))}for(let c of a)i.push(new Ti(c.selection,o.tabSize,this._type,s.insertSpace,s.ignoreEmptyLines,c.ignoreFirstLine));t.pushUndoStop(),t.executeCommands(this.id,i),t.pushUndoStop()}},oT=class extends Ep{constructor(){super(0,{id:"editor.action.commentLine",label:u("comment.line","Toggle Line Comment"),alias:"Toggle Line Comment",precondition:x.writable,kbOpts:{kbExpr:x.editorTextFocus,primary:2133,weight:100},menuOpts:{menuId:oe.MenubarEditMenu,group:"5_insert",title:u({key:"miToggleLineComment",comment:["&& denotes a mnemonic"]},"&&Toggle Line Comment"),order:1}})}},rT=class extends Ep{constructor(){super(1,{id:"editor.action.addCommentLine",label:u("comment.line.add","Add Line Comment"),alias:"Add Line Comment",precondition:x.writable,kbOpts:{kbExpr:x.editorTextFocus,primary:$e(2089,2081),weight:100}})}},sT=class extends Ep{constructor(){super(2,{id:"editor.action.removeCommentLine",label:u("comment.line.remove","Remove Line Comment"),alias:"Remove Line Comment",precondition:x.writable,kbOpts:{kbExpr:x.editorTextFocus,primary:$e(2089,2099),weight:100}})}},aT=class extends N{constructor(){super({id:"editor.action.blockComment",label:u("comment.block","Toggle Block Comment"),alias:"Toggle Block Comment",precondition:x.writable,kbOpts:{kbExpr:x.editorTextFocus,primary:1567,linux:{primary:3103},weight:100},menuOpts:{menuId:oe.MenubarEditMenu,group:"5_insert",title:u({key:"miToggleBlockComment",comment:["&& denotes a mnemonic"]},"Toggle &&Block Comment"),order:2}})}run(e,t){if(!t.hasModel())return;let n=t.getOption(19),i=[],o=t.getSelections();for(let s of o)i.push(new wi(s,n.insertSpace));t.pushUndoStop(),t.executeCommands(this.id,i),t.pushUndoStop()}};I(oT);I(rT);I(sT);I(aT);Ne();Kl();U();Fn();ce();Be();ne();un();Te();On();var DM=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},oc=function(r,e){return function(t,n){e(t,n,r)}},Ua=class lT{constructor(e,t,n,i,o,s){this._contextMenuService=t,this._contextViewService=n,this._contextKeyService=i,this._keybindingService=o,this._menuService=s,this._toDispose=new R,this._contextMenuIsBeingShownCount=0,this._editor=e,this._toDispose.add(this._editor.onContextMenu(a=>this._onContextMenu(a))),this._toDispose.add(this._editor.onMouseWheel(a=>{if(this._contextMenuIsBeingShownCount>0){let l=this._contextViewService.getContextViewElement(),c=a.srcElement;c.shadowRoot&&yS(l)===c.shadowRoot||this._contextViewService.hideContextView()}})),this._toDispose.add(this._editor.onKeyDown(a=>{a.keyCode===58&&(a.preventDefault(),a.stopPropagation(),this.showContextMenu())}))}static get(e){return e.getContribution(lT.ID)}_onContextMenu(e){if(!this._editor.hasModel())return;if(!this._editor.getOption(20)){this._editor.focus(),e.target.position&&!this._editor.getSelection().containsPosition(e.target.position)&&this._editor.setPosition(e.target.position);return}if(e.target.type===12||(e.event.preventDefault(),e.event.stopPropagation(),e.target.type!==6&&e.target.type!==7&&e.target.type!==1))return;if(this._editor.focus(),e.target.position){let n=!1;for(let i of this._editor.getSelections())if(i.containsPosition(e.target.position)){n=!0;break}n||this._editor.setPosition(e.target.position)}let t=null;e.target.type!==1&&(t={x:e.event.posx-1,width:2,y:e.event.posy-1,height:2}),this.showContextMenu(t)}showContextMenu(e){if(!this._editor.getOption(20)||!this._editor.hasModel())return;if(!this._contextMenuService){this._editor.focus();return}let t=this._getMenuActions(this._editor.getModel(),this._editor.isSimpleWidget?oe.SimpleEditorContext:oe.EditorContext);t.length>0&&this._doShowContextMenu(t,e)}_getMenuActions(e,t){let n=[],i=this._menuService.createMenu(t,this._contextKeyService),o=i.getActions({arg:e.uri});i.dispose();for(let s of o){let[,a]=s,l=0;for(let c of a)if(c instanceof Rh){let d=this._getMenuActions(e,c.item.submenu);d.length>0&&(n.push(new Dh(c.id,c.label,d)),l++)}else n.push(c),l++;l&&n.push(new rr)}return n.length&&n.pop(),n}_doShowContextMenu(e,t=null){if(!this._editor.hasModel())return;let n=this._editor.getOption(52);if(this._editor.updateOptions({hover:{enabled:!1}}),!t){this._editor.revealPosition(this._editor.getPosition(),1),this._editor.render();let o=this._editor.getScrolledVisiblePosition(this._editor.getPosition()),s=Jt(this._editor.getDomNode()),a=s.left+o.left,l=s.top+o.top+o.height;t={x:a,y:l}}let i=this._editor.getOption(113)&&!nh;this._contextMenuIsBeingShownCount++,this._contextMenuService.showContextMenu({domForShadowRoot:i?this._editor.getDomNode():void 0,getAnchor:()=>t,getActions:()=>e,getActionViewItem:o=>{let s=this._keybindingFor(o);if(s)return new rd(o,o,{label:!0,keybinding:s.getLabel(),isMenu:!0});let a=o;return typeof a.getActionViewItem=="function"?a.getActionViewItem():new rd(o,o,{icon:!0,label:!0,isMenu:!0})},getKeyBinding:o=>this._keybindingFor(o),onHide:o=>{this._contextMenuIsBeingShownCount--,this._editor.focus(),this._editor.updateOptions({hover:n})}})}_keybindingFor(e){return this._keybindingService.lookupKeybinding(e.id)}dispose(){this._contextMenuIsBeingShownCount>0&&this._contextViewService.hideContextView(),this._toDispose.dispose()}};Ua.ID="editor.contrib.contextmenu";Ua=DM([oc(1,Zr),oc(2,lu),oc(3,Q),oc(4,Qe),oc(5,Hi)],Ua);var dT=class extends N{constructor(){super({id:"editor.action.showContextMenu",label:u("action.showContextMenu.label","Show Editor Context Menu"),alias:"Show Editor Context Menu",precondition:void 0,kbOpts:{kbExpr:x.textInputFocus,primary:1092,weight:100}})}run(e,t){Ua.get(t).showContextMenu()}};J(Ua.ID,Ua);I(dT);U();ce();Be();ne();var Ip=class{constructor(e){this.selections=e}equals(e){let t=this.selections.length,n=e.selections.length;if(t!==n)return!1;for(let i=0;i<t;i++)if(!this.selections[i].equalsSelection(e.selections[i]))return!1;return!0}},kp=class{constructor(e,t,n){this.cursorState=e,this.scrollTop=t,this.scrollLeft=n}},_r=class extends B{constructor(e){super();this._editor=e,this._isCursorUndoRedo=!1,this._undoStack=[],this._redoStack=[],this._register(e.onDidChangeModel(t=>{this._undoStack=[],this._redoStack=[]})),this._register(e.onDidChangeModelContent(t=>{this._undoStack=[],this._redoStack=[]})),this._register(e.onDidChangeCursorSelection(t=>{if(this._isCursorUndoRedo||!t.oldSelections||t.oldModelVersionId!==t.modelVersionId)return;let n=new Ip(t.oldSelections);this._undoStack.length>0&&this._undoStack[this._undoStack.length-1].cursorState.equals(n)||(this._undoStack.push(new kp(n,e.getScrollTop(),e.getScrollLeft())),this._redoStack=[],this._undoStack.length>50&&this._undoStack.shift())}))}static get(e){return e.getContribution(_r.ID)}cursorUndo(){!this._editor.hasModel()||this._undoStack.length===0||(this._redoStack.push(new kp(new Ip(this._editor.getSelections()),this._editor.getScrollTop(),this._editor.getScrollLeft())),this._applyState(this._undoStack.pop()))}cursorRedo(){!this._editor.hasModel()||this._redoStack.length===0||(this._undoStack.push(new kp(new Ip(this._editor.getSelections()),this._editor.getScrollTop(),this._editor.getScrollLeft())),this._applyState(this._redoStack.pop()))}_applyState(e){this._isCursorUndoRedo=!0,this._editor.setSelections(e.cursorState.selections),this._editor.setScrollPosition({scrollTop:e.scrollTop,scrollLeft:e.scrollLeft}),this._isCursorUndoRedo=!1}};_r.ID="editor.contrib.cursorUndoRedoController";var cT=class extends N{constructor(){super({id:"cursorUndo",label:u("cursor.undo","Cursor Undo"),alias:"Cursor Undo",precondition:void 0,kbOpts:{kbExpr:x.textInputFocus,primary:2099,weight:100}})}run(e,t,n){_r.get(t).cursorUndo()}},hT=class extends N{constructor(){super({id:"cursorRedo",label:u("cursor.redo","Cursor Redo"),alias:"Cursor Redo",precondition:void 0})}run(e,t,n){_r.get(t).cursorRedo()}};J(_r.ID,_r);I(cT);I(hT);U();Fn();ce();rt();te();wt();Ut();te();wt();var fy=class{constructor(e,t,n){this.selection=e,this.targetPosition=t,this.copy=n,this.targetSelection=null}getEditOperations(e,t){let n=e.getValueInRange(this.selection);if(this.copy||t.addEditOperation(this.selection,null),t.addEditOperation(new C(this.targetPosition.lineNumber,this.targetPosition.column,this.targetPosition.lineNumber,this.targetPosition.column),n),this.selection.containsPosition(this.targetPosition)&&!(this.copy&&(this.selection.getEndPosition().equals(this.targetPosition)||this.selection.getStartPosition().equals(this.targetPosition)))){this.targetSelection=this.selection;return}if(this.copy){this.targetSelection=new Z(this.targetPosition.lineNumber,this.targetPosition.column,this.selection.endLineNumber-this.selection.startLineNumber+this.targetPosition.lineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column+this.selection.endColumn-this.selection.startColumn:this.selection.endColumn);return}if(this.targetPosition.lineNumber>this.selection.endLineNumber){this.targetSelection=new Z(this.targetPosition.lineNumber-this.selection.endLineNumber+this.selection.startLineNumber,this.targetPosition.column,this.targetPosition.lineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column+this.selection.endColumn-this.selection.startColumn:this.selection.endColumn);return}if(this.targetPosition.lineNumber<this.selection.endLineNumber){this.targetSelection=new Z(this.targetPosition.lineNumber,this.targetPosition.column,this.targetPosition.lineNumber+this.selection.endLineNumber-this.selection.startLineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column+this.selection.endColumn-this.selection.startColumn:this.selection.endColumn);return}this.selection.endColumn<=this.targetPosition.column?this.targetSelection=new Z(this.targetPosition.lineNumber-this.selection.endLineNumber+this.selection.startLineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column-this.selection.endColumn+this.selection.startColumn:this.targetPosition.column-this.selection.endColumn+this.selection.startColumn,this.targetPosition.lineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column:this.selection.endColumn):this.targetSelection=new Z(this.targetPosition.lineNumber-this.selection.endLineNumber+this.selection.startLineNumber,this.targetPosition.column,this.targetPosition.lineNumber,this.targetPosition.column+this.selection.endColumn-this.selection.startColumn)}computeCursorState(e,t){return this.targetSelection}};function $a(r){return ln?r.altKey:r.ctrlKey}var Zi=class extends B{constructor(e){super();this._editor=e,this._register(this._editor.onMouseDown(t=>this._onEditorMouseDown(t))),this._register(this._editor.onMouseUp(t=>this._onEditorMouseUp(t))),this._register(this._editor.onMouseDrag(t=>this._onEditorMouseDrag(t))),this._register(this._editor.onMouseDrop(t=>this._onEditorMouseDrop(t))),this._register(this._editor.onMouseDropCanceled(()=>this._onEditorMouseDropCanceled())),this._register(this._editor.onKeyDown(t=>this.onEditorKeyDown(t))),this._register(this._editor.onKeyUp(t=>this.onEditorKeyUp(t))),this._register(this._editor.onDidBlurEditorWidget(()=>this.onEditorBlur())),this._register(this._editor.onDidBlurEditorText(()=>this.onEditorBlur())),this._dndDecorationIds=[],this._mouseDown=!1,this._modifierPressed=!1,this._dragSelection=null}onEditorBlur(){this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1,this._modifierPressed=!1}onEditorKeyDown(e){!this._editor.getOption(31)||this._editor.getOption(18)||($a(e)&&(this._modifierPressed=!0),this._mouseDown&&$a(e)&&this._editor.updateOptions({mouseStyle:"copy"}))}onEditorKeyUp(e){!this._editor.getOption(31)||this._editor.getOption(18)||($a(e)&&(this._modifierPressed=!1),this._mouseDown&&e.keyCode===Zi.TRIGGER_KEY_VALUE&&this._editor.updateOptions({mouseStyle:"default"}))}_onEditorMouseDown(e){this._mouseDown=!0}_onEditorMouseUp(e){this._mouseDown=!1,this._editor.updateOptions({mouseStyle:"text"})}_onEditorMouseDrag(e){let t=e.target;if(this._dragSelection===null){let i=(this._editor.getSelections()||[]).filter(o=>t.position&&o.containsPosition(t.position));if(i.length===1)this._dragSelection=i[0];else return}$a(e.event)?this._editor.updateOptions({mouseStyle:"copy"}):this._editor.updateOptions({mouseStyle:"default"}),t.position&&(this._dragSelection.containsPosition(t.position)?this._removeDecoration():this.showAt(t.position))}_onEditorMouseDropCanceled(){this._editor.updateOptions({mouseStyle:"text"}),this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1}_onEditorMouseDrop(e){if(e.target&&(this._hitContent(e.target)||this._hitMargin(e.target))&&e.target.position){let t=new q(e.target.position.lineNumber,e.target.position.column);if(this._dragSelection===null){let n=null;if(e.event.shiftKey){let i=this._editor.getSelection();if(i){let{selectionStartLineNumber:o,selectionStartColumn:s}=i;n=[new Z(o,s,t.lineNumber,t.column)]}}else n=(this._editor.getSelections()||[]).map(i=>i.containsPosition(t)?new Z(t.lineNumber,t.column,t.lineNumber,t.column):i);this._editor.setSelections(n||[],"mouse",3)}else(!this._dragSelection.containsPosition(t)||($a(e.event)||this._modifierPressed)&&(this._dragSelection.getEndPosition().equals(t)||this._dragSelection.getStartPosition().equals(t)))&&(this._editor.pushUndoStop(),this._editor.executeCommand(Zi.ID,new fy(this._dragSelection,t,$a(e.event)||this._modifierPressed)),this._editor.pushUndoStop())}this._editor.updateOptions({mouseStyle:"text"}),this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1}showAt(e){let t=[{range:new C(e.lineNumber,e.column,e.lineNumber,e.column),options:Zi._DECORATION_OPTIONS}];this._dndDecorationIds=this._editor.deltaDecorations(this._dndDecorationIds,t),this._editor.revealPosition(e,1)}_removeDecoration(){this._dndDecorationIds=this._editor.deltaDecorations(this._dndDecorationIds,[])}_hitContent(e){return e.type===6||e.type===7}_hitMargin(e){return e.type===2||e.type===3||e.type===4}dispose(){this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1,this._modifierPressed=!1,super.dispose()}};Zi.ID="editor.contrib.dragAndDrop";Zi.TRIGGER_KEY_VALUE=ln?6:5;Zi._DECORATION_OPTIONS=xe.register({description:"dnd-target",className:"dnd-target"});J(Zi.ID,Zi);Oe();U();Ze();ce();Be();mt();Oe();U();rt();te();wt();YL();te();Hl();Ut();Je();Me();var kt=class{constructor(e){this._editor=e,this._decorations=[],this._overviewRulerApproximateDecorations=[],this._findScopeDecorationIds=[],this._rangeHighlightDecorationId=null,this._highlightedDecorationId=null,this._startPosition=this._editor.getPosition()}dispose(){this._editor.deltaDecorations(this._allDecorations(),[]),this._decorations=[],this._overviewRulerApproximateDecorations=[],this._findScopeDecorationIds=[],this._rangeHighlightDecorationId=null,this._highlightedDecorationId=null}reset(){this._decorations=[],this._overviewRulerApproximateDecorations=[],this._findScopeDecorationIds=[],this._rangeHighlightDecorationId=null,this._highlightedDecorationId=null}getCount(){return this._decorations.length}getFindScope(){return this._findScopeDecorationIds[0]?this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]):null}getFindScopes(){if(this._findScopeDecorationIds.length){let e=this._findScopeDecorationIds.map(t=>this._editor.getModel().getDecorationRange(t)).filter(t=>!!t);if(e.length)return e}return null}getStartPosition(){return this._startPosition}setStartPosition(e){this._startPosition=e,this.setCurrentFindMatch(null)}_getDecorationIndex(e){let t=this._decorations.indexOf(e);return t>=0?t+1:1}getCurrentMatchesPosition(e){let t=this._editor.getModel().getDecorationsInRange(e);for(let n of t){let i=n.options;if(i===kt._FIND_MATCH_DECORATION||i===kt._CURRENT_FIND_MATCH_DECORATION)return this._getDecorationIndex(n.id)}return 0}setCurrentFindMatch(e){let t=null,n=0;if(e)for(let i=0,o=this._decorations.length;i<o;i++){let s=this._editor.getModel().getDecorationRange(this._decorations[i]);if(e.equalsRange(s)){t=this._decorations[i],n=i+1;break}}return(this._highlightedDecorationId!==null||t!==null)&&this._editor.changeDecorations(i=>{if(this._highlightedDecorationId!==null&&(i.changeDecorationOptions(this._highlightedDecorationId,kt._FIND_MATCH_DECORATION),this._highlightedDecorationId=null),t!==null&&(this._highlightedDecorationId=t,i.changeDecorationOptions(this._highlightedDecorationId,kt._CURRENT_FIND_MATCH_DECORATION)),this._rangeHighlightDecorationId!==null&&(i.removeDecoration(this._rangeHighlightDecorationId),this._rangeHighlightDecorationId=null),t!==null){let o=this._editor.getModel().getDecorationRange(t);if(o.startLineNumber!==o.endLineNumber&&o.endColumn===1){let s=o.endLineNumber-1,a=this._editor.getModel().getLineMaxColumn(s);o=new C(o.startLineNumber,o.startColumn,s,a)}this._rangeHighlightDecorationId=i.addDecoration(o,kt._RANGE_HIGHLIGHT_DECORATION)}}),n}set(e,t){this._editor.changeDecorations(n=>{let i=kt._FIND_MATCH_DECORATION,o=[];if(e.length>1e3){i=kt._FIND_MATCH_NO_OVERVIEW_DECORATION;let a=this._editor.getModel().getLineCount(),c=this._editor.getLayoutInfo().height/a,d=Math.max(2,Math.ceil(3/c)),h=e[0].range.startLineNumber,p=e[0].range.endLineNumber;for(let g=1,y=e.length;g<y;g++){let v=e[g].range;p+d>=v.startLineNumber?v.endLineNumber>p&&(p=v.endLineNumber):(o.push({range:new C(h,1,p,1),options:kt._FIND_MATCH_ONLY_OVERVIEW_DECORATION}),h=v.startLineNumber,p=v.endLineNumber)}o.push({range:new C(h,1,p,1),options:kt._FIND_MATCH_ONLY_OVERVIEW_DECORATION})}let s=new Array(e.length);for(let a=0,l=e.length;a<l;a++)s[a]={range:e[a].range,options:i};this._decorations=n.deltaDecorations(this._decorations,s),this._overviewRulerApproximateDecorations=n.deltaDecorations(this._overviewRulerApproximateDecorations,o),this._rangeHighlightDecorationId&&(n.removeDecoration(this._rangeHighlightDecorationId),this._rangeHighlightDecorationId=null),this._findScopeDecorationIds.length&&(this._findScopeDecorationIds.forEach(a=>n.removeDecoration(a)),this._findScopeDecorationIds=[]),t!=null&&t.length&&(this._findScopeDecorationIds=t.map(a=>n.addDecoration(a,kt._FIND_SCOPE_DECORATION)))})}matchBeforePosition(e){if(this._decorations.length===0)return null;for(let t=this._decorations.length-1;t>=0;t--){let n=this._decorations[t],i=this._editor.getModel().getDecorationRange(n);if(!(!i||i.endLineNumber>e.lineNumber)){if(i.endLineNumber<e.lineNumber)return i;if(!(i.endColumn>e.column))return i}}return this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length-1])}matchAfterPosition(e){if(this._decorations.length===0)return null;for(let t=0,n=this._decorations.length;t<n;t++){let i=this._decorations[t],o=this._editor.getModel().getDecorationRange(i);if(!(!o||o.startLineNumber<e.lineNumber)){if(o.startLineNumber>e.lineNumber)return o;if(!(o.startColumn<e.column))return o}}return this._editor.getModel().getDecorationRange(this._decorations[0])}_allDecorations(){let e=[];return e=e.concat(this._decorations),e=e.concat(this._overviewRulerApproximateDecorations),this._findScopeDecorationIds.length&&e.push(...this._findScopeDecorationIds),this._rangeHighlightDecorationId&&e.push(this._rangeHighlightDecorationId),e}};kt._CURRENT_FIND_MATCH_DECORATION=xe.register({description:"current-find-match",stickiness:1,zIndex:13,className:"currentFindMatch",showIfCollapsed:!0,overviewRuler:{color:nt(Jh),position:wn.Center},minimap:{color:nt(Um),position:po.Inline}});kt._FIND_MATCH_DECORATION=xe.register({description:"find-match",stickiness:1,zIndex:10,className:"findMatch",showIfCollapsed:!0,overviewRuler:{color:nt(Jh),position:wn.Center},minimap:{color:nt(Um),position:po.Inline}});kt._FIND_MATCH_NO_OVERVIEW_DECORATION=xe.register({description:"find-match-no-overview",stickiness:1,className:"findMatch",showIfCollapsed:!0});kt._FIND_MATCH_ONLY_OVERVIEW_DECORATION=xe.register({description:"find-match-only-overview",stickiness:1,overviewRuler:{color:nt(Jh),position:wn.Center}});kt._RANGE_HIGHLIGHT_DECORATION=xe.register({description:"find-range-highlight",stickiness:1,className:"rangeHighlight",isWholeLine:!0});kt._FIND_SCOPE_DECORATION=xe.register({description:"find-scope",className:"findScope",isWholeLine:!0});te();var yy=class{constructor(e,t,n){this._editorSelection=e,this._ranges=t,this._replaceStrings=n,this._trackedEditorSelectionId=null}getEditOperations(e,t){if(this._ranges.length>0){let n=[];for(let s=0;s<this._ranges.length;s++)n.push({range:this._ranges[s],text:this._replaceStrings[s]});n.sort((s,a)=>C.compareRangesUsingStarts(s.range,a.range));let i=[],o=n[0];for(let s=1;s<n.length;s++)o.range.endLineNumber===n[s].range.startLineNumber&&o.range.endColumn===n[s].range.startColumn?(o.range=o.range.plusRange(n[s].range),o.text=o.text+n[s].text):(i.push(o),o=n[s]);i.push(o);for(let s of i)t.addEditOperation(s.range,s.text)}this._trackedEditorSelectionId=t.trackSelection(this._editorSelection)}computeCursorState(e,t){return t.getTrackedSelection(this._trackedEditorSelectionId)}};Ze();function by(r,e){if(r&&r[0]!==""){let t=uT(r,e,"-"),n=uT(r,e,"_");return t&&!n?pT(r,e,"-"):!t&&n?pT(r,e,"_"):r[0].toUpperCase()===r[0]?e.toUpperCase():r[0].toLowerCase()===r[0]?e.toLowerCase():MS(r[0][0])&&e.length>0?e[0].toUpperCase()+e.substr(1):r[0][0].toUpperCase()!==r[0][0]&&e.length>0?e[0].toLowerCase()+e.substr(1):e}else return e}function uT(r,e,t){return r[0].indexOf(t)!==-1&&e.indexOf(t)!==-1&&r[0].split(t).length===e.split(t).length}function pT(r,e,t){let n=e.split(t),i=r[0].split(t),o="";return n.forEach((s,a)=>{o+=by([i[a]],s)+t}),o.slice(0,-1)}var Sy=class{constructor(e){this.staticValue=e,this.kind=0}},mT=class{constructor(e){this.pieces=e,this.kind=1}},Tr=class{constructor(e){!e||e.length===0?this._state=new Sy(""):e.length===1&&e[0].staticValue!==null?this._state=new Sy(e[0].staticValue):this._state=new mT(e)}static fromStaticValue(e){return new Tr([wr.staticValue(e)])}get hasReplacementPatterns(){return this._state.kind===1}buildReplaceString(e,t){if(this._state.kind===0)return t?by(e,this._state.staticValue):this._state.staticValue;let n="";for(let i=0,o=this._state.pieces.length;i<o;i++){let s=this._state.pieces[i];if(s.staticValue!==null){n+=s.staticValue;continue}let a=Tr._substitute(s.matchIndex,e);if(s.caseOps!==null&&s.caseOps.length>0){let l=[],c=s.caseOps.length,d=0;for(let h=0,p=a.length;h<p;h++){if(d>=c){l.push(a.slice(h));break}switch(s.caseOps[d]){case"U":l.push(a[h].toUpperCase());break;case"u":l.push(a[h].toUpperCase()),d++;break;case"L":l.push(a[h].toLowerCase());break;case"l":l.push(a[h].toLowerCase()),d++;break;default:l.push(a[h])}}a=l.join("")}n+=a}return n}static _substitute(e,t){if(t===null)return"";if(e===0)return t[0];let n="";for(;e>0;){if(e<t.length)return(t[e]||"")+n;n=String(e%10)+n,e=Math.floor(e/10)}return"$"+n}},wr=class{constructor(e,t,n){this.staticValue=e,this.matchIndex=t,!n||n.length===0?this.caseOps=null:this.caseOps=n.slice(0)}static staticValue(e){return new wr(e,-1,null)}static caseOps(e,t){return new wr(null,e,t)}},gT=class{constructor(e){this._source=e,this._lastCharIndex=0,this._result=[],this._resultLen=0,this._currentStaticPiece=""}emitUnchanged(e){this._emitStatic(this._source.substring(this._lastCharIndex,e)),this._lastCharIndex=e}emitStatic(e,t){this._emitStatic(e),this._lastCharIndex=t}_emitStatic(e){e.length!==0&&(this._currentStaticPiece+=e)}emitMatchIndex(e,t,n){this._currentStaticPiece.length!==0&&(this._result[this._resultLen++]=wr.staticValue(this._currentStaticPiece),this._currentStaticPiece=""),this._result[this._resultLen++]=wr.caseOps(e,n),this._lastCharIndex=t}finalize(){return this.emitUnchanged(this._source.length),this._currentStaticPiece.length!==0&&(this._result[this._resultLen++]=wr.staticValue(this._currentStaticPiece),this._currentStaticPiece=""),new Tr(this._result)}};function fT(r){if(!r||r.length===0)return new Tr(null);let e=[],t=new gT(r);for(let n=0,i=r.length;n<i;n++){let o=r.charCodeAt(n);if(o===92){if(n++,n>=i)break;let s=r.charCodeAt(n);switch(s){case 92:t.emitUnchanged(n-1),t.emitStatic("\\",n+1);break;case 110:t.emitUnchanged(n-1),t.emitStatic(`
`,n+1);break;case 116:t.emitUnchanged(n-1),t.emitStatic("	",n+1);break;case 117:case 85:case 108:case 76:t.emitUnchanged(n-1),t.emitStatic("",n+1),e.push(String.fromCharCode(s));break}continue}if(o===36){if(n++,n>=i)break;let s=r.charCodeAt(n);if(s===36){t.emitUnchanged(n-1),t.emitStatic("$",n+1);continue}if(s===48||s===38){t.emitUnchanged(n-1),t.emitMatchIndex(0,n+1,e),e.length=0;continue}if(49<=s&&s<=57){let a=s-48;if(n+1<i){let l=r.charCodeAt(n+1);if(48<=l&&l<=57){n++,a=a*10+(l-48),t.emitUnchanged(n-2),t.emitMatchIndex(a,n+1,e),e.length=0;continue}}t.emitUnchanged(n-1),t.emitMatchIndex(a,n+1,e),e.length=0;continue}}}return t.finalize()}Te();var Er=new de("findWidgetVisible",!1),Ka=new de("findInputFocussed",!1),rc=new de("replaceInputFocussed",!1),sc={primary:545,mac:{primary:2593}},ac={primary:565,mac:{primary:2613}},lc={primary:560,mac:{primary:2608}},dc={primary:554,mac:{primary:2602}},cc={primary:558,mac:{primary:2606}},Fe={StartFindAction:"actions.find",StartFindWithSelection:"actions.findWithSelection",NextMatchFindAction:"editor.action.nextMatchFindAction",PreviousMatchFindAction:"editor.action.previousMatchFindAction",NextSelectionMatchFindAction:"editor.action.nextSelectionMatchFindAction",PreviousSelectionMatchFindAction:"editor.action.previousSelectionMatchFindAction",StartFindReplaceAction:"editor.action.startFindReplaceAction",CloseFindWidgetCommand:"closeFindWidget",ToggleCaseSensitiveCommand:"toggleFindCaseSensitive",ToggleWholeWordCommand:"toggleFindWholeWord",ToggleRegexCommand:"toggleFindRegex",ToggleSearchScopeCommand:"toggleFindInSelection",TogglePreserveCaseCommand:"togglePreserveCase",ReplaceOneAction:"editor.action.replaceOne",ReplaceAllAction:"editor.action.replaceAll",SelectAllMatchesAction:"editor.action.selectAllMatches"},Ji=19999,RM=240,vs=class{constructor(e,t){this._toDispose=new R,this._editor=e,this._state=t,this._isDisposed=!1,this._startSearchingTimer=new Cn,this._decorations=new kt(e),this._toDispose.add(this._decorations),this._updateDecorationsScheduler=new Xe(()=>this.research(!1),100),this._toDispose.add(this._updateDecorationsScheduler),this._toDispose.add(this._editor.onDidChangeCursorPosition(n=>{(n.reason===3||n.reason===5||n.reason===6)&&this._decorations.setStartPosition(this._editor.getPosition())})),this._ignoreModelContentChanged=!1,this._toDispose.add(this._editor.onDidChangeModelContent(n=>{this._ignoreModelContentChanged||(n.isFlush&&this._decorations.reset(),this._decorations.setStartPosition(this._editor.getPosition()),this._updateDecorationsScheduler.schedule())})),this._toDispose.add(this._state.onFindReplaceStateChange(n=>this._onStateChanged(n))),this.research(!1,this._state.searchScope)}dispose(){this._isDisposed=!0,ht(this._startSearchingTimer),this._toDispose.dispose()}_onStateChanged(e){this._isDisposed||!this._editor.hasModel()||(e.searchString||e.isReplaceRevealed||e.isRegex||e.wholeWord||e.matchCase||e.searchScope)&&(this._editor.getModel().isTooLargeForSyncing()?(this._startSearchingTimer.cancel(),this._startSearchingTimer.setIfNotSet(()=>{e.searchScope?this.research(e.moveCursor,this._state.searchScope):this.research(e.moveCursor)},RM)):e.searchScope?this.research(e.moveCursor,this._state.searchScope):this.research(e.moveCursor))}static _getSearchRange(e,t){return t||e.getFullModelRange()}research(e,t){let n=null;typeof t!="undefined"?t!==null&&(Array.isArray(t)?n=t:n=[t]):n=this._decorations.getFindScopes(),n!==null&&(n=n.map(a=>{if(a.startLineNumber!==a.endLineNumber){let l=a.endLineNumber;return a.endColumn===1&&(l=l-1),new C(a.startLineNumber,1,l,this._editor.getModel().getLineMaxColumn(l))}return a}));let i=this._findMatches(n,!1,Ji);this._decorations.set(i,n);let o=this._editor.getSelection(),s=this._decorations.getCurrentMatchesPosition(o);if(s===0&&i.length>0){let a=wh(i.map(l=>l.range),l=>C.compareRangesUsingStarts(l,o)>=0);s=a>0?a-1+1:s}this._state.changeMatchInfo(s,this._decorations.getCount(),void 0),e&&this._editor.getOption(35).cursorMoveOnType&&this._moveToNextMatch(this._decorations.getStartPosition())}_hasMatches(){return this._state.matchesCount>0}_cannotFind(){if(!this._hasMatches()){let e=this._decorations.getFindScope();return e&&this._editor.revealRangeInCenterIfOutsideViewport(e,0),!0}return!1}_setCurrentFindMatch(e){let t=this._decorations.setCurrentFindMatch(e);this._state.changeMatchInfo(t,this._decorations.getCount(),e),this._editor.setSelection(e),this._editor.revealRangeInCenterIfOutsideViewport(e,0)}_prevSearchPosition(e){let t=this._state.isRegex&&(this._state.searchString.indexOf("^")>=0||this._state.searchString.indexOf("$")>=0),{lineNumber:n,column:i}=e,o=this._editor.getModel();return t||i===1?(n===1?n=o.getLineCount():n--,i=o.getLineMaxColumn(n)):i--,new q(n,i)}_moveToPrevMatch(e,t=!1){if(!this._state.canNavigateBack()){let d=this._decorations.matchAfterPosition(e);d&&this._setCurrentFindMatch(d);return}if(this._decorations.getCount()<Ji){let d=this._decorations.matchBeforePosition(e);d&&d.isEmpty()&&d.getStartPosition().equals(e)&&(e=this._prevSearchPosition(e),d=this._decorations.matchBeforePosition(e)),d&&this._setCurrentFindMatch(d);return}if(this._cannotFind())return;let n=this._decorations.getFindScope(),i=vs._getSearchRange(this._editor.getModel(),n);i.getEndPosition().isBefore(e)&&(e=i.getEndPosition()),e.isBefore(i.getStartPosition())&&(e=i.getEndPosition());let{lineNumber:o,column:s}=e,a=this._editor.getModel(),l=new q(o,s),c=a.findPreviousMatch(this._state.searchString,l,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(115):null,!1);if(c&&c.range.isEmpty()&&c.range.getStartPosition().equals(l)&&(l=this._prevSearchPosition(l),c=a.findPreviousMatch(this._state.searchString,l,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(115):null,!1)),!!c){if(!t&&!i.containsRange(c.range))return this._moveToPrevMatch(c.range.getStartPosition(),!0);this._setCurrentFindMatch(c.range)}}moveToPrevMatch(){this._moveToPrevMatch(this._editor.getSelection().getStartPosition())}_nextSearchPosition(e){let t=this._state.isRegex&&(this._state.searchString.indexOf("^")>=0||this._state.searchString.indexOf("$")>=0),{lineNumber:n,column:i}=e,o=this._editor.getModel();return t||i===o.getLineMaxColumn(n)?(n===o.getLineCount()?n=1:n++,i=1):i++,new q(n,i)}_moveToNextMatch(e){if(!this._state.canNavigateForward()){let n=this._decorations.matchBeforePosition(e);n&&this._setCurrentFindMatch(n);return}if(this._decorations.getCount()<Ji){let n=this._decorations.matchAfterPosition(e);n&&n.isEmpty()&&n.getStartPosition().equals(e)&&(e=this._nextSearchPosition(e),n=this._decorations.matchAfterPosition(e)),n&&this._setCurrentFindMatch(n);return}let t=this._getNextMatch(e,!1,!0);t&&this._setCurrentFindMatch(t.range)}_getNextMatch(e,t,n,i=!1){if(this._cannotFind())return null;let o=this._decorations.getFindScope(),s=vs._getSearchRange(this._editor.getModel(),o);s.getEndPosition().isBefore(e)&&(e=s.getStartPosition()),e.isBefore(s.getStartPosition())&&(e=s.getStartPosition());let{lineNumber:a,column:l}=e,c=this._editor.getModel(),d=new q(a,l),h=c.findNextMatch(this._state.searchString,d,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(115):null,t);return n&&h&&h.range.isEmpty()&&h.range.getStartPosition().equals(d)&&(d=this._nextSearchPosition(d),h=c.findNextMatch(this._state.searchString,d,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(115):null,t)),h?!i&&!s.containsRange(h.range)?this._getNextMatch(h.range.getEndPosition(),t,n,!0):h:null}moveToNextMatch(){this._moveToNextMatch(this._editor.getSelection().getEndPosition())}_getReplacePattern(){return this._state.isRegex?fT(this._state.replaceString):Tr.fromStaticValue(this._state.replaceString)}replace(){if(!this._hasMatches())return;let e=this._getReplacePattern(),t=this._editor.getSelection(),n=this._getNextMatch(t.getStartPosition(),!0,!1);if(n)if(t.equalsRange(n.range)){let i=e.buildReplaceString(n.matches,this._state.preserveCase),o=new So(t,i);this._executeEditorCommand("replace",o),this._decorations.setStartPosition(new q(t.startLineNumber,t.startColumn+i.length)),this.research(!0)}else this._decorations.setStartPosition(this._editor.getPosition()),this._setCurrentFindMatch(n.range)}_findMatches(e,t,n){let i=(e||[null]).map(o=>vs._getSearchRange(this._editor.getModel(),o));return this._editor.getModel().findMatches(this._state.searchString,i,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(115):null,t,n)}replaceAll(){if(!this._hasMatches())return;let e=this._decorations.getFindScopes();e===null&&this._state.matchesCount>=Ji?this._largeReplaceAll():this._regularReplaceAll(e),this.research(!1)}_largeReplaceAll(){let t=new wv(this._state.searchString,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(115):null).parseSearchRequest();if(!t)return;let n=t.regex;if(!n.multiline){let h="mu";n.ignoreCase&&(h+="i"),n.global&&(h+="g"),n=new RegExp(n.source,h)}let i=this._editor.getModel(),o=i.getValue(1),s=i.getFullModelRange(),a=this._getReplacePattern(),l,c=this._state.preserveCase;a.hasReplacementPatterns||c?l=o.replace(n,function(){return a.buildReplaceString(arguments,c)}):l=o.replace(n,a.buildReplaceString(null,c));let d=new nu(s,l,this._editor.getSelection());this._executeEditorCommand("replaceAll",d)}_regularReplaceAll(e){let t=this._getReplacePattern(),n=this._findMatches(e,t.hasReplacementPatterns||this._state.preserveCase,1073741824),i=[];for(let s=0,a=n.length;s<a;s++)i[s]=t.buildReplaceString(n[s].matches,this._state.preserveCase);let o=new yy(this._editor.getSelection(),n.map(s=>s.range),i);this._executeEditorCommand("replaceAll",o)}selectAllMatches(){if(!this._hasMatches())return;let e=this._decorations.getFindScopes(),n=this._findMatches(e,!1,1073741824).map(o=>new Z(o.range.startLineNumber,o.range.startColumn,o.range.endLineNumber,o.range.endColumn)),i=this._editor.getSelection();for(let o=0,s=n.length;o<s;o++)if(n[o].equalsRange(i)){n=[i].concat(n.slice(0,o)).concat(n.slice(o+1));break}this._editor.setSelections(n)}_executeEditorCommand(e,t){try{this._ignoreModelContentChanged=!0,this._editor.pushUndoStop(),this._editor.executeCommand(e,t),this._editor.pushUndoStop()}finally{this._ignoreModelContentChanged=!1}}};Ne();vo();Tn();fi();Ae();var FM={inputActiveOptionBorder:fe.fromHex("#007ACC00"),inputActiveOptionForeground:fe.fromHex("#FFFFFF"),inputActiveOptionBackground:fe.fromHex("#0E639C50")},No=class extends Ft{constructor(e){super();this._onChange=this._register(new $),this.onChange=this._onChange.event,this._onKeyDown=this._register(new $),this.onKeyDown=this._onKeyDown.event,this._opts=Object.assign(Object.assign({},FM),e),this._checked=this._opts.isChecked;let t=["monaco-custom-checkbox"];this._opts.icon&&t.push(...GS.asClassNameArray(this._opts.icon)),this._opts.actionClassName&&t.push(...this._opts.actionClassName.split(" ")),this._checked&&t.push("checked"),this.domNode=document.createElement("div"),this.domNode.title=this._opts.title,this.domNode.classList.add(...t),this._opts.notFocusable||(this.domNode.tabIndex=0),this.domNode.setAttribute("role","checkbox"),this.domNode.setAttribute("aria-checked",String(this._checked)),this.domNode.setAttribute("aria-label",this._opts.title),this.applyStyles(),this.onclick(this.domNode,n=>{this.checked=!this._checked,this._onChange.fire(!1),n.preventDefault()}),this.ignoreGesture(this.domNode),this.onkeydown(this.domNode,n=>{if(n.keyCode===10||n.keyCode===3){this.checked=!this._checked,this._onChange.fire(!0),n.preventDefault();return}this._onKeyDown.fire(n)})}get enabled(){return this.domNode.getAttribute("aria-disabled")!=="true"}focus(){this.domNode.focus()}get checked(){return this._checked}set checked(e){this._checked=e,this.domNode.setAttribute("aria-checked",String(this._checked)),this.domNode.classList.toggle("checked",this._checked),this.applyStyles()}width(){return 2+2+2+16}style(e){e.inputActiveOptionBorder&&(this._opts.inputActiveOptionBorder=e.inputActiveOptionBorder),e.inputActiveOptionForeground&&(this._opts.inputActiveOptionForeground=e.inputActiveOptionForeground),e.inputActiveOptionBackground&&(this._opts.inputActiveOptionBackground=e.inputActiveOptionBackground),this.applyStyles()}applyStyles(){this.domNode&&(this.domNode.style.borderColor=this._checked&&this._opts.inputActiveOptionBorder?this._opts.inputActiveOptionBorder.toString():"transparent",this.domNode.style.color=this._checked&&this._opts.inputActiveOptionForeground?this._opts.inputActiveOptionForeground.toString():"inherit",this.domNode.style.backgroundColor=this._checked&&this._opts.inputActiveOptionBackground?this._opts.inputActiveOptionBackground.toString():"transparent")}enable(){this.domNode.setAttribute("aria-disabled",String(!1))}disable(){this.domNode.setAttribute("aria-disabled",String(!0))}};Tn();ne();var AM=u("caseDescription","Match Case"),NM=u("wordsDescription","Match Whole Word"),zM=u("regexDescription","Use Regular Expression"),hc=class extends No{constructor(e){super({icon:X.caseSensitive,title:AM+e.appendTitle,isChecked:e.isChecked,inputActiveOptionBorder:e.inputActiveOptionBorder,inputActiveOptionForeground:e.inputActiveOptionForeground,inputActiveOptionBackground:e.inputActiveOptionBackground})}},uc=class extends No{constructor(e){super({icon:X.wholeWord,title:NM+e.appendTitle,isChecked:e.isChecked,inputActiveOptionBorder:e.inputActiveOptionBorder,inputActiveOptionForeground:e.inputActiveOptionForeground,inputActiveOptionBackground:e.inputActiveOptionBackground})}},pc=class extends No{constructor(e){super({icon:X.regex,title:zM+e.appendTitle,isChecked:e.isChecked,inputActiveOptionBorder:e.inputActiveOptionBorder,inputActiveOptionForeground:e.inputActiveOptionForeground,inputActiveOptionBackground:e.inputActiveOptionBackground})}};vo();Oe();Je();Me();var qa=class extends Ft{constructor(e,t,n,i){super();this._hideSoon=this._register(new Xe(()=>this._hide(),2e3)),this._isVisible=!1,this._editor=e,this._state=t,this._keybindingService=n,this._domNode=document.createElement("div"),this._domNode.className="findOptionsWidget",this._domNode.style.display="none",this._domNode.style.top="10px",this._domNode.setAttribute("role","presentation"),this._domNode.setAttribute("aria-hidden","true");let o=i.getColorTheme().getColor(Jl),s=i.getColorTheme().getColor(ed),a=i.getColorTheme().getColor(Ql);this.caseSensitive=this._register(new hc({appendTitle:this._keybindingLabelFor(Fe.ToggleCaseSensitiveCommand),isChecked:this._state.matchCase,inputActiveOptionBorder:o,inputActiveOptionForeground:s,inputActiveOptionBackground:a})),this._domNode.appendChild(this.caseSensitive.domNode),this._register(this.caseSensitive.onChange(()=>{this._state.change({matchCase:this.caseSensitive.checked},!1)})),this.wholeWords=this._register(new uc({appendTitle:this._keybindingLabelFor(Fe.ToggleWholeWordCommand),isChecked:this._state.wholeWord,inputActiveOptionBorder:o,inputActiveOptionForeground:s,inputActiveOptionBackground:a})),this._domNode.appendChild(this.wholeWords.domNode),this._register(this.wholeWords.onChange(()=>{this._state.change({wholeWord:this.wholeWords.checked},!1)})),this.regex=this._register(new pc({appendTitle:this._keybindingLabelFor(Fe.ToggleRegexCommand),isChecked:this._state.isRegex,inputActiveOptionBorder:o,inputActiveOptionForeground:s,inputActiveOptionBackground:a})),this._domNode.appendChild(this.regex.domNode),this._register(this.regex.onChange(()=>{this._state.change({isRegex:this.regex.checked},!1)})),this._editor.addOverlayWidget(this),this._register(this._state.onFindReplaceStateChange(l=>{let c=!1;l.isRegex&&(this.regex.checked=this._state.isRegex,c=!0),l.wholeWord&&(this.wholeWords.checked=this._state.wholeWord,c=!0),l.matchCase&&(this.caseSensitive.checked=this._state.matchCase,c=!0),!this._state.isRevealed&&c&&this._revealTemporarily()})),this._register(uS(this._domNode,l=>this._onMouseOut())),this._register(Ve(this._domNode,"mouseover",l=>this._onMouseOver())),this._applyTheme(i.getColorTheme()),this._register(i.onDidColorThemeChange(this._applyTheme.bind(this)))}_keybindingLabelFor(e){let t=this._keybindingService.lookupKeybinding(e);return t?` (${t.getLabel()})`:""}dispose(){this._editor.removeOverlayWidget(this),super.dispose()}getId(){return qa.ID}getDomNode(){return this._domNode}getPosition(){return{preference:0}}highlightFindOptions(){this._revealTemporarily()}_revealTemporarily(){this._show(),this._hideSoon.schedule()}_onMouseOut(){this._hideSoon.schedule()}_onMouseOver(){this._hideSoon.cancel()}_show(){this._isVisible||(this._isVisible=!0,this._domNode.style.display="block")}_hide(){!this._isVisible||(this._isVisible=!1,this._domNode.style.display="none")}_applyTheme(e){let t={inputActiveOptionBorder:e.getColor(Jl),inputActiveOptionForeground:e.getColor(ed),inputActiveOptionBackground:e.getColor(Ql)};this.caseSensitive.style(t),this.wholeWords.style(t),this.regex.style(t)}};qa.ID="editor.contrib.findOptionsWidget";ye((r,e)=>{let t=r.getColor(Qn);t&&e.addRule(`.monaco-editor .findOptionsWidget { background-color: ${t}; }`);let n=r.getColor(ya);n&&e.addRule(`.monaco-editor .findOptionsWidget { color: ${n}; }`);let i=r.getColor(dr);i&&e.addRule(`.monaco-editor .findOptionsWidget { box-shadow: 0 0 8px 2px ${i}; }`);let o=r.getColor(Jn);o&&e.addRule(`.monaco-editor .findOptionsWidget { border: 2px solid ${o}; }`)});Ae();U();te();function Lp(r,e){return r===1?!0:r===2?!1:e}var vy=class extends B{constructor(){super();this._onFindReplaceStateChange=this._register(new $),this.onFindReplaceStateChange=this._onFindReplaceStateChange.event,this._searchString="",this._replaceString="",this._isRevealed=!1,this._isReplaceRevealed=!1,this._isRegex=!1,this._isRegexOverride=0,this._wholeWord=!1,this._wholeWordOverride=0,this._matchCase=!1,this._matchCaseOverride=0,this._preserveCase=!1,this._preserveCaseOverride=0,this._searchScope=null,this._matchesPosition=0,this._matchesCount=0,this._currentMatch=null,this._loop=!0}get searchString(){return this._searchString}get replaceString(){return this._replaceString}get isRevealed(){return this._isRevealed}get isReplaceRevealed(){return this._isReplaceRevealed}get isRegex(){return Lp(this._isRegexOverride,this._isRegex)}get wholeWord(){return Lp(this._wholeWordOverride,this._wholeWord)}get matchCase(){return Lp(this._matchCaseOverride,this._matchCase)}get preserveCase(){return Lp(this._preserveCaseOverride,this._preserveCase)}get actualIsRegex(){return this._isRegex}get actualWholeWord(){return this._wholeWord}get actualMatchCase(){return this._matchCase}get actualPreserveCase(){return this._preserveCase}get searchScope(){return this._searchScope}get matchesPosition(){return this._matchesPosition}get matchesCount(){return this._matchesCount}get currentMatch(){return this._currentMatch}changeMatchInfo(e,t,n){let i={moveCursor:!1,updateHistory:!1,searchString:!1,replaceString:!1,isRevealed:!1,isReplaceRevealed:!1,isRegex:!1,wholeWord:!1,matchCase:!1,preserveCase:!1,searchScope:!1,matchesPosition:!1,matchesCount:!1,currentMatch:!1,loop:!1},o=!1;t===0&&(e=0),e>t&&(e=t),this._matchesPosition!==e&&(this._matchesPosition=e,i.matchesPosition=!0,o=!0),this._matchesCount!==t&&(this._matchesCount=t,i.matchesCount=!0,o=!0),typeof n!="undefined"&&(C.equalsRange(this._currentMatch,n)||(this._currentMatch=n,i.currentMatch=!0,o=!0)),o&&this._onFindReplaceStateChange.fire(i)}change(e,t,n=!0){var i;let o={moveCursor:t,updateHistory:n,searchString:!1,replaceString:!1,isRevealed:!1,isReplaceRevealed:!1,isRegex:!1,wholeWord:!1,matchCase:!1,preserveCase:!1,searchScope:!1,matchesPosition:!1,matchesCount:!1,currentMatch:!1,loop:!1},s=!1,a=this.isRegex,l=this.wholeWord,c=this.matchCase,d=this.preserveCase;typeof e.searchString!="undefined"&&this._searchString!==e.searchString&&(this._searchString=e.searchString,o.searchString=!0,s=!0),typeof e.replaceString!="undefined"&&this._replaceString!==e.replaceString&&(this._replaceString=e.replaceString,o.replaceString=!0,s=!0),typeof e.isRevealed!="undefined"&&this._isRevealed!==e.isRevealed&&(this._isRevealed=e.isRevealed,o.isRevealed=!0,s=!0),typeof e.isReplaceRevealed!="undefined"&&this._isReplaceRevealed!==e.isReplaceRevealed&&(this._isReplaceRevealed=e.isReplaceRevealed,o.isReplaceRevealed=!0,s=!0),typeof e.isRegex!="undefined"&&(this._isRegex=e.isRegex),typeof e.wholeWord!="undefined"&&(this._wholeWord=e.wholeWord),typeof e.matchCase!="undefined"&&(this._matchCase=e.matchCase),typeof e.preserveCase!="undefined"&&(this._preserveCase=e.preserveCase),typeof e.searchScope!="undefined"&&(!((i=e.searchScope)===null||i===void 0)&&i.every(h=>{var p;return(p=this._searchScope)===null||p===void 0?void 0:p.some(g=>!C.equalsRange(g,h))})||(this._searchScope=e.searchScope,o.searchScope=!0,s=!0)),typeof e.loop!="undefined"&&this._loop!==e.loop&&(this._loop=e.loop,o.loop=!0,s=!0),this._isRegexOverride=typeof e.isRegexOverride!="undefined"?e.isRegexOverride:0,this._wholeWordOverride=typeof e.wholeWordOverride!="undefined"?e.wholeWordOverride:0,this._matchCaseOverride=typeof e.matchCaseOverride!="undefined"?e.matchCaseOverride:0,this._preserveCaseOverride=typeof e.preserveCaseOverride!="undefined"?e.preserveCaseOverride:0,a!==this.isRegex&&(s=!0,o.isRegex=!0),l!==this.wholeWord&&(s=!0,o.wholeWord=!0),c!==this.matchCase&&(s=!0,o.matchCase=!0),d!==this.preserveCase&&(s=!0,o.preserveCase=!0),s&&this._onFindReplaceStateChange.fire(o)}canNavigateBack(){return this.canNavigateInLoop()||this.matchesPosition!==1}canNavigateForward(){return this.canNavigateInLoop()||this.matchesPosition<this.matchesCount}canNavigateInLoop(){return this._loop||this.matchesCount>=Ji}};Ne();mi();vo();Oe();Tn();ke();U();Fn();Ze();te();ne();Ne();vo();Ae();ne();var OM=u("defaultLabel","input"),xy=class extends Ft{constructor(e,t,n,i){super();this._showOptionButtons=n,this.fixFocusOnOptionClickEnabled=!0,this.imeSessionInProgress=!1,this._onDidOptionChange=this._register(new $),this.onDidOptionChange=this._onDidOptionChange.event,this._onKeyDown=this._register(new $),this.onKeyDown=this._onKeyDown.event,this._onMouseDown=this._register(new $),this.onMouseDown=this._onMouseDown.event,this._onInput=this._register(new $),this._onKeyUp=this._register(new $),this._onCaseSensitiveKeyDown=this._register(new $),this.onCaseSensitiveKeyDown=this._onCaseSensitiveKeyDown.event,this._onRegexKeyDown=this._register(new $),this.onRegexKeyDown=this._onRegexKeyDown.event,this._lastHighlightFindOptions=0,this.contextViewProvider=t,this.placeholder=i.placeholder||"",this.validation=i.validation,this.label=i.label||OM,this.inputActiveOptionBorder=i.inputActiveOptionBorder,this.inputActiveOptionForeground=i.inputActiveOptionForeground,this.inputActiveOptionBackground=i.inputActiveOptionBackground,this.inputBackground=i.inputBackground,this.inputForeground=i.inputForeground,this.inputBorder=i.inputBorder,this.inputValidationInfoBorder=i.inputValidationInfoBorder,this.inputValidationInfoBackground=i.inputValidationInfoBackground,this.inputValidationInfoForeground=i.inputValidationInfoForeground,this.inputValidationWarningBorder=i.inputValidationWarningBorder,this.inputValidationWarningBackground=i.inputValidationWarningBackground,this.inputValidationWarningForeground=i.inputValidationWarningForeground,this.inputValidationErrorBorder=i.inputValidationErrorBorder,this.inputValidationErrorBackground=i.inputValidationErrorBackground,this.inputValidationErrorForeground=i.inputValidationErrorForeground;let o=i.appendCaseSensitiveLabel||"",s=i.appendWholeWordsLabel||"",a=i.appendRegexLabel||"",l=i.history||[],c=!!i.flexibleHeight,d=!!i.flexibleWidth,h=i.flexibleMaxHeight;this.domNode=document.createElement("div"),this.domNode.classList.add("monaco-findInput"),this.inputBox=this._register(new gu(this.domNode,this.contextViewProvider,{placeholder:this.placeholder||"",ariaLabel:this.label||"",validationOptions:{validation:this.validation},inputBackground:this.inputBackground,inputForeground:this.inputForeground,inputBorder:this.inputBorder,inputValidationInfoBackground:this.inputValidationInfoBackground,inputValidationInfoForeground:this.inputValidationInfoForeground,inputValidationInfoBorder:this.inputValidationInfoBorder,inputValidationWarningBackground:this.inputValidationWarningBackground,inputValidationWarningForeground:this.inputValidationWarningForeground,inputValidationWarningBorder:this.inputValidationWarningBorder,inputValidationErrorBackground:this.inputValidationErrorBackground,inputValidationErrorForeground:this.inputValidationErrorForeground,inputValidationErrorBorder:this.inputValidationErrorBorder,history:l,showHistoryHint:i.showHistoryHint,flexibleHeight:c,flexibleWidth:d,flexibleMaxHeight:h})),this.regex=this._register(new pc({appendTitle:a,isChecked:!1,inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground})),this._register(this.regex.onChange(y=>{this._onDidOptionChange.fire(y),!y&&this.fixFocusOnOptionClickEnabled&&this.inputBox.focus(),this.validate()})),this._register(this.regex.onKeyDown(y=>{this._onRegexKeyDown.fire(y)})),this.wholeWords=this._register(new uc({appendTitle:s,isChecked:!1,inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground})),this._register(this.wholeWords.onChange(y=>{this._onDidOptionChange.fire(y),!y&&this.fixFocusOnOptionClickEnabled&&this.inputBox.focus(),this.validate()})),this.caseSensitive=this._register(new hc({appendTitle:o,isChecked:!1,inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground})),this._register(this.caseSensitive.onChange(y=>{this._onDidOptionChange.fire(y),!y&&this.fixFocusOnOptionClickEnabled&&this.inputBox.focus(),this.validate()})),this._register(this.caseSensitive.onKeyDown(y=>{this._onCaseSensitiveKeyDown.fire(y)})),this._showOptionButtons&&(this.inputBox.paddingRight=this.caseSensitive.width()+this.wholeWords.width()+this.regex.width());let p=[this.caseSensitive.domNode,this.wholeWords.domNode,this.regex.domNode];this.onkeydown(this.domNode,y=>{if(y.equals(15)||y.equals(17)||y.equals(9)){let v=p.indexOf(document.activeElement);if(v>=0){let w=-1;y.equals(17)?w=(v+1)%p.length:y.equals(15)&&(v===0?w=p.length-1:w=v-1),y.equals(9)?(p[v].blur(),this.inputBox.focus()):w>=0&&p[w].focus(),Di.stop(y,!0)}}});let g=document.createElement("div");g.className="controls",g.style.display=this._showOptionButtons?"block":"none",g.appendChild(this.caseSensitive.domNode),g.appendChild(this.wholeWords.domNode),g.appendChild(this.regex.domNode),this.domNode.appendChild(g),e&&e.appendChild(this.domNode),this._register(Ve(this.inputBox.inputElement,"compositionstart",y=>{this.imeSessionInProgress=!0})),this._register(Ve(this.inputBox.inputElement,"compositionend",y=>{this.imeSessionInProgress=!1,this._onInput.fire()})),this.onkeydown(this.inputBox.inputElement,y=>this._onKeyDown.fire(y)),this.onkeyup(this.inputBox.inputElement,y=>this._onKeyUp.fire(y)),this.oninput(this.inputBox.inputElement,y=>this._onInput.fire()),this.onmousedown(this.inputBox.inputElement,y=>this._onMouseDown.fire(y))}enable(){this.domNode.classList.remove("disabled"),this.inputBox.enable(),this.regex.enable(),this.wholeWords.enable(),this.caseSensitive.enable()}disable(){this.domNode.classList.add("disabled"),this.inputBox.disable(),this.regex.disable(),this.wholeWords.disable(),this.caseSensitive.disable()}setFocusInputOnOptionClick(e){this.fixFocusOnOptionClickEnabled=e}setEnabled(e){e?this.enable():this.disable()}getValue(){return this.inputBox.value}setValue(e){this.inputBox.value!==e&&(this.inputBox.value=e)}style(e){this.inputActiveOptionBorder=e.inputActiveOptionBorder,this.inputActiveOptionForeground=e.inputActiveOptionForeground,this.inputActiveOptionBackground=e.inputActiveOptionBackground,this.inputBackground=e.inputBackground,this.inputForeground=e.inputForeground,this.inputBorder=e.inputBorder,this.inputValidationInfoBackground=e.inputValidationInfoBackground,this.inputValidationInfoForeground=e.inputValidationInfoForeground,this.inputValidationInfoBorder=e.inputValidationInfoBorder,this.inputValidationWarningBackground=e.inputValidationWarningBackground,this.inputValidationWarningForeground=e.inputValidationWarningForeground,this.inputValidationWarningBorder=e.inputValidationWarningBorder,this.inputValidationErrorBackground=e.inputValidationErrorBackground,this.inputValidationErrorForeground=e.inputValidationErrorForeground,this.inputValidationErrorBorder=e.inputValidationErrorBorder,this.applyStyles()}applyStyles(){if(this.domNode){let e={inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground};this.regex.style(e),this.wholeWords.style(e),this.caseSensitive.style(e);let t={inputBackground:this.inputBackground,inputForeground:this.inputForeground,inputBorder:this.inputBorder,inputValidationInfoBackground:this.inputValidationInfoBackground,inputValidationInfoForeground:this.inputValidationInfoForeground,inputValidationInfoBorder:this.inputValidationInfoBorder,inputValidationWarningBackground:this.inputValidationWarningBackground,inputValidationWarningForeground:this.inputValidationWarningForeground,inputValidationWarningBorder:this.inputValidationWarningBorder,inputValidationErrorBackground:this.inputValidationErrorBackground,inputValidationErrorForeground:this.inputValidationErrorForeground,inputValidationErrorBorder:this.inputValidationErrorBorder};this.inputBox.style(t)}}select(){this.inputBox.select()}focus(){this.inputBox.focus()}getCaseSensitive(){return this.caseSensitive.checked}setCaseSensitive(e){this.caseSensitive.checked=e}getWholeWords(){return this.wholeWords.checked}setWholeWords(e){this.wholeWords.checked=e}getRegex(){return this.regex.checked}setRegex(e){this.regex.checked=e,this.validate()}focusOnCaseSensitive(){this.caseSensitive.focus()}highlightFindOptions(){this.domNode.classList.remove("highlight-"+this._lastHighlightFindOptions),this._lastHighlightFindOptions=1-this._lastHighlightFindOptions,this.domNode.classList.add("highlight-"+this._lastHighlightFindOptions)}validate(){this.inputBox.validate()}clearMessage(){this.inputBox.hideMessage()}};Ne();vo();Tn();Ae();ne();var HM=u("defaultLabel","input"),BM=u("label.preserveCaseCheckbox","Preserve Case"),yT=class extends No{constructor(e){super({icon:X.preserveCase,title:BM+e.appendTitle,isChecked:e.isChecked,inputActiveOptionBorder:e.inputActiveOptionBorder,inputActiveOptionForeground:e.inputActiveOptionForeground,inputActiveOptionBackground:e.inputActiveOptionBackground})}},Cy=class extends Ft{constructor(e,t,n,i){super();this._showOptionButtons=n,this.fixFocusOnOptionClickEnabled=!0,this.cachedOptionsWidth=0,this._onDidOptionChange=this._register(new $),this.onDidOptionChange=this._onDidOptionChange.event,this._onKeyDown=this._register(new $),this.onKeyDown=this._onKeyDown.event,this._onMouseDown=this._register(new $),this._onInput=this._register(new $),this._onKeyUp=this._register(new $),this._onPreserveCaseKeyDown=this._register(new $),this.onPreserveCaseKeyDown=this._onPreserveCaseKeyDown.event,this.contextViewProvider=t,this.placeholder=i.placeholder||"",this.validation=i.validation,this.label=i.label||HM,this.inputActiveOptionBorder=i.inputActiveOptionBorder,this.inputActiveOptionForeground=i.inputActiveOptionForeground,this.inputActiveOptionBackground=i.inputActiveOptionBackground,this.inputBackground=i.inputBackground,this.inputForeground=i.inputForeground,this.inputBorder=i.inputBorder,this.inputValidationInfoBorder=i.inputValidationInfoBorder,this.inputValidationInfoBackground=i.inputValidationInfoBackground,this.inputValidationInfoForeground=i.inputValidationInfoForeground,this.inputValidationWarningBorder=i.inputValidationWarningBorder,this.inputValidationWarningBackground=i.inputValidationWarningBackground,this.inputValidationWarningForeground=i.inputValidationWarningForeground,this.inputValidationErrorBorder=i.inputValidationErrorBorder,this.inputValidationErrorBackground=i.inputValidationErrorBackground,this.inputValidationErrorForeground=i.inputValidationErrorForeground;let o=i.appendPreserveCaseLabel||"",s=i.history||[],a=!!i.flexibleHeight,l=!!i.flexibleWidth,c=i.flexibleMaxHeight;this.domNode=document.createElement("div"),this.domNode.classList.add("monaco-findInput"),this.inputBox=this._register(new gu(this.domNode,this.contextViewProvider,{ariaLabel:this.label||"",placeholder:this.placeholder||"",validationOptions:{validation:this.validation},inputBackground:this.inputBackground,inputForeground:this.inputForeground,inputBorder:this.inputBorder,inputValidationInfoBackground:this.inputValidationInfoBackground,inputValidationInfoForeground:this.inputValidationInfoForeground,inputValidationInfoBorder:this.inputValidationInfoBorder,inputValidationWarningBackground:this.inputValidationWarningBackground,inputValidationWarningForeground:this.inputValidationWarningForeground,inputValidationWarningBorder:this.inputValidationWarningBorder,inputValidationErrorBackground:this.inputValidationErrorBackground,inputValidationErrorForeground:this.inputValidationErrorForeground,inputValidationErrorBorder:this.inputValidationErrorBorder,history:s,showHistoryHint:i.showHistoryHint,flexibleHeight:a,flexibleWidth:l,flexibleMaxHeight:c})),this.preserveCase=this._register(new yT({appendTitle:o,isChecked:!1,inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground})),this._register(this.preserveCase.onChange(p=>{this._onDidOptionChange.fire(p),!p&&this.fixFocusOnOptionClickEnabled&&this.inputBox.focus(),this.validate()})),this._register(this.preserveCase.onKeyDown(p=>{this._onPreserveCaseKeyDown.fire(p)})),this._showOptionButtons?this.cachedOptionsWidth=this.preserveCase.width():this.cachedOptionsWidth=0;let d=[this.preserveCase.domNode];this.onkeydown(this.domNode,p=>{if(p.equals(15)||p.equals(17)||p.equals(9)){let g=d.indexOf(document.activeElement);if(g>=0){let y=-1;p.equals(17)?y=(g+1)%d.length:p.equals(15)&&(g===0?y=d.length-1:y=g-1),p.equals(9)?(d[g].blur(),this.inputBox.focus()):y>=0&&d[y].focus(),Di.stop(p,!0)}}});let h=document.createElement("div");h.className="controls",h.style.display=this._showOptionButtons?"block":"none",h.appendChild(this.preserveCase.domNode),this.domNode.appendChild(h),e&&e.appendChild(this.domNode),this.onkeydown(this.inputBox.inputElement,p=>this._onKeyDown.fire(p)),this.onkeyup(this.inputBox.inputElement,p=>this._onKeyUp.fire(p)),this.oninput(this.inputBox.inputElement,p=>this._onInput.fire()),this.onmousedown(this.inputBox.inputElement,p=>this._onMouseDown.fire(p))}enable(){this.domNode.classList.remove("disabled"),this.inputBox.enable(),this.preserveCase.enable()}disable(){this.domNode.classList.add("disabled"),this.inputBox.disable(),this.preserveCase.disable()}setEnabled(e){e?this.enable():this.disable()}style(e){this.inputActiveOptionBorder=e.inputActiveOptionBorder,this.inputActiveOptionForeground=e.inputActiveOptionForeground,this.inputActiveOptionBackground=e.inputActiveOptionBackground,this.inputBackground=e.inputBackground,this.inputForeground=e.inputForeground,this.inputBorder=e.inputBorder,this.inputValidationInfoBackground=e.inputValidationInfoBackground,this.inputValidationInfoForeground=e.inputValidationInfoForeground,this.inputValidationInfoBorder=e.inputValidationInfoBorder,this.inputValidationWarningBackground=e.inputValidationWarningBackground,this.inputValidationWarningForeground=e.inputValidationWarningForeground,this.inputValidationWarningBorder=e.inputValidationWarningBorder,this.inputValidationErrorBackground=e.inputValidationErrorBackground,this.inputValidationErrorForeground=e.inputValidationErrorForeground,this.inputValidationErrorBorder=e.inputValidationErrorBorder,this.applyStyles()}applyStyles(){if(this.domNode){let e={inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground};this.preserveCase.style(e);let t={inputBackground:this.inputBackground,inputForeground:this.inputForeground,inputBorder:this.inputBorder,inputValidationInfoBackground:this.inputValidationInfoBackground,inputValidationInfoForeground:this.inputValidationInfoForeground,inputValidationInfoBorder:this.inputValidationInfoBorder,inputValidationWarningBackground:this.inputValidationWarningBackground,inputValidationWarningForeground:this.inputValidationWarningForeground,inputValidationWarningBorder:this.inputValidationWarningBorder,inputValidationErrorBackground:this.inputValidationErrorBackground,inputValidationErrorForeground:this.inputValidationErrorForeground,inputValidationErrorBorder:this.inputValidationErrorBorder};this.inputBox.style(t)}}select(){this.inputBox.select()}focus(){this.inputBox.focus()}getPreserveCase(){return this.preserveCase.checked}setPreserveCase(e){this.preserveCase.checked=e}focusOnPreserve(){this.preserveCase.focus()}validate(){this.inputBox&&this.inputBox.validate()}set width(e){this.inputBox.paddingRight=this.cachedOptionsWidth,this.inputBox.width=e,this.domNode.style.width=e+"px"}dispose(){super.dispose()}};Te();Ul();var bT=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},ST=function(r,e){return function(t,n){e(t,n,r)}},mc="historyNavigationWidget",vT="historyNavigationForwardsEnabled",xT="historyNavigationBackwardsEnabled";function WM(r,e,t){new de(t,e).bindTo(r)}function VM(r,e){return r.createScoped(e.target)}function CT(r,e){return r.getContext(document.activeElement).getValue(e)}function _T(r,e){let t=VM(r,e);WM(t,e,mc);let n=new de(vT,!0).bindTo(t),i=new de(xT,!0).bindTo(t);return{scopedContextKeyService:t,historyNavigationForwardsEnablement:n,historyNavigationBackwardsEnablement:i}}var Pp=class extends xy{constructor(e,t,n,i,o=!1){super(e,t,o,n);this._register(_T(i,{target:this.inputBox.element,historyNavigator:this.inputBox}).scopedContextKeyService)}};Pp=bT([ST(3,Q)],Pp);var Mp=class extends Cy{constructor(e,t,n,i,o=!1){super(e,t,o,n);this._register(_T(i,{target:this.inputBox.element,historyNavigator:this.inputBox}).scopedContextKeyService)}};Mp=bT([ST(3,Q)],Mp);jt.registerCommandAndKeybindingRule({id:"history.showPrevious",weight:200,when:O.and(O.has(mc),O.equals(xT,!0),me.Visible.isEqualTo(!1)),primary:16,secondary:[528],handler:r=>{let e=CT(r.get(Q),mc);e&&e.historyNavigator.showPreviousValue()}});jt.registerCommandAndKeybindingRule({id:"history.showNext",weight:200,when:O.and(O.has(mc),O.equals(vT,!0),me.Visible.isEqualTo(!1)),primary:18,secondary:[530],handler:r=>{let e=CT(r.get(Q),mc);e&&e.historyNavigator.showNextValue()}});function _y(r){var e,t;return((e=r.lookupKeybinding("history.showPrevious"))===null||e===void 0?void 0:e.getElectronAccelerator())==="Up"&&((t=r.lookupKeybinding("history.showNext"))===null||t===void 0?void 0:t.getElectronAccelerator())==="Down"}Je();Me();var GM=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},jM=At("find-selection",X.selection,u("findSelectionIcon","Icon for 'Find in Selection' in the editor find widget.")),wT=At("find-collapsed",X.chevronRight,u("findCollapsedIcon","Icon to indicate that the editor find widget is collapsed.")),TT=At("find-expanded",X.chevronDown,u("findExpandedIcon","Icon to indicate that the editor find widget is expanded.")),UM=At("find-replace",X.replace,u("findReplaceIcon","Icon for 'Replace' in the editor find widget.")),$M=At("find-replace-all",X.replaceAll,u("findReplaceAllIcon","Icon for 'Replace All' in the editor find widget.")),KM=At("find-previous-match",X.arrowUp,u("findPreviousMatchIcon","Icon for 'Find Previous' in the editor find widget.")),qM=At("find-next-match",X.arrowDown,u("findNextMatchIcon","Icon for 'Find Next' in the editor find widget.")),XM=u("label.find","Find"),YM=u("placeholder.find","Find"),ZM=u("label.previousMatchButton","Previous Match"),JM=u("label.nextMatchButton","Next Match"),QM=u("label.toggleSelectionFind","Find in Selection"),eD=u("label.closeButton","Close"),tD=u("label.replace","Replace"),nD=u("placeholder.replace","Replace"),iD=u("label.replaceButton","Replace"),oD=u("label.replaceAllButton","Replace All"),rD=u("label.toggleReplaceButton","Toggle Replace"),sD=u("title.matchesCountLimit","Only the first {0} results are highlighted, but all find operations work on the entire text.",Ji),aD=u("label.matchesLocation","{0} of {1}"),ET=u("label.noResults","No results"),Qi=419,lD=275,dD=lD-54,gc=69,cD=33,IT="ctrlEnterReplaceAll.windows.donotask",kT=ln?256:2048,Dp=class{constructor(e){this.afterLineNumber=e,this.heightInPx=cD,this.suppressMouseDown=!1,this.domNode=document.createElement("div"),this.domNode.className="dock-find-viewzone"}};function LT(r,e,t){let n=!!e.match(/\n/);if(t&&n&&t.selectionStart>0){r.stopPropagation();return}}function PT(r,e,t){let n=!!e.match(/\n/);if(t&&n&&t.selectionEnd<t.value.length){r.stopPropagation();return}}var Xa=class extends Ft{constructor(e,t,n,i,o,s,a,l,c){super();this._cachedHeight=null,this._revealTimeouts=[],this._codeEditor=e,this._controller=t,this._state=n,this._contextViewProvider=i,this._keybindingService=o,this._contextKeyService=s,this._storageService=l,this._notificationService=c,this._ctrlEnterReplaceAllWarningPrompted=!!l.getBoolean(IT,0),this._isVisible=!1,this._isReplaceVisible=!1,this._ignoreChangeEvent=!1,this._updateHistoryDelayer=new hi(500),this._register(We(()=>this._updateHistoryDelayer.cancel())),this._register(this._state.onFindReplaceStateChange(d=>this._onStateChanged(d))),this._buildDomNode(),this._updateButtons(),this._tryUpdateWidgetWidth(),this._findInput.inputBox.layout(),this._register(this._codeEditor.onDidChangeConfiguration(d=>{if(d.hasChanged(80)&&(this._codeEditor.getOption(80)&&this._state.change({isReplaceRevealed:!1},!1),this._updateButtons()),d.hasChanged(129)&&this._tryUpdateWidgetWidth(),d.hasChanged(2)&&this.updateAccessibilitySupport(),d.hasChanged(35)){let h=this._codeEditor.getOption(35).addExtraSpaceOnTop;h&&!this._viewZone&&(this._viewZone=new Dp(0),this._showViewZone()),!h&&this._viewZone&&this._removeViewZone()}})),this.updateAccessibilitySupport(),this._register(this._codeEditor.onDidChangeCursorSelection(()=>{this._isVisible&&this._updateToggleSelectionFindButton()})),this._register(this._codeEditor.onDidFocusEditorWidget(()=>GM(this,void 0,void 0,function*(){if(this._isVisible){let d=yield this._controller.getGlobalBufferTerm();d&&d!==this._state.searchString&&(this._state.change({searchString:d},!1),this._findInput.select())}}))),this._findInputFocused=Ka.bindTo(s),this._findFocusTracker=this._register(gm(this._findInput.inputBox.inputElement)),this._register(this._findFocusTracker.onDidFocus(()=>{this._findInputFocused.set(!0),this._updateSearchScope()})),this._register(this._findFocusTracker.onDidBlur(()=>{this._findInputFocused.set(!1)})),this._replaceInputFocused=rc.bindTo(s),this._replaceFocusTracker=this._register(gm(this._replaceInput.inputBox.inputElement)),this._register(this._replaceFocusTracker.onDidFocus(()=>{this._replaceInputFocused.set(!0),this._updateSearchScope()})),this._register(this._replaceFocusTracker.onDidBlur(()=>{this._replaceInputFocused.set(!1)})),this._codeEditor.addOverlayWidget(this),this._codeEditor.getOption(35).addExtraSpaceOnTop&&(this._viewZone=new Dp(0)),this._applyTheme(a.getColorTheme()),this._register(a.onDidColorThemeChange(this._applyTheme.bind(this))),this._register(this._codeEditor.onDidChangeModel(()=>{!this._isVisible||(this._viewZoneId=void 0)})),this._register(this._codeEditor.onDidScrollChange(d=>{if(d.scrollTopChanged){this._layoutViewZone();return}setTimeout(()=>{this._layoutViewZone()},0)}))}getId(){return Xa.ID}getDomNode(){return this._domNode}getPosition(){return this._isVisible?{preference:0}:null}_onStateChanged(e){if(e.searchString){try{this._ignoreChangeEvent=!0,this._findInput.setValue(this._state.searchString)}finally{this._ignoreChangeEvent=!1}this._updateButtons()}if(e.replaceString&&(this._replaceInput.inputBox.value=this._state.replaceString),e.isRevealed&&(this._state.isRevealed?this._reveal():this._hide(!0)),e.isReplaceRevealed&&(this._state.isReplaceRevealed?!this._codeEditor.getOption(80)&&!this._isReplaceVisible&&(this._isReplaceVisible=!0,this._replaceInput.width=Mi(this._findInput.domNode),this._updateButtons(),this._replaceInput.inputBox.layout()):this._isReplaceVisible&&(this._isReplaceVisible=!1,this._updateButtons())),(e.isRevealed||e.isReplaceRevealed)&&(this._state.isRevealed||this._state.isReplaceRevealed)&&this._tryUpdateHeight()&&this._showViewZone(),e.isRegex&&this._findInput.setRegex(this._state.isRegex),e.wholeWord&&this._findInput.setWholeWords(this._state.wholeWord),e.matchCase&&this._findInput.setCaseSensitive(this._state.matchCase),e.preserveCase&&this._replaceInput.setPreserveCase(this._state.preserveCase),e.searchScope&&(this._state.searchScope?this._toggleSelectionFind.checked=!0:this._toggleSelectionFind.checked=!1,this._updateToggleSelectionFindButton()),e.searchString||e.matchesCount||e.matchesPosition){let t=this._state.searchString.length>0&&this._state.matchesCount===0;this._domNode.classList.toggle("no-results",t),this._updateMatchesCount(),this._updateButtons()}(e.searchString||e.currentMatch)&&this._layoutViewZone(),e.updateHistory&&this._delayedUpdateHistory(),e.loop&&this._updateButtons()}_delayedUpdateHistory(){this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(void 0,ae)}_updateHistory(){this._state.searchString&&this._findInput.inputBox.addToHistory(),this._state.replaceString&&this._replaceInput.inputBox.addToHistory()}_updateMatchesCount(){this._matchesCount.style.minWidth=gc+"px",this._state.matchesCount>=Ji?this._matchesCount.title=sD:this._matchesCount.title="",this._matchesCount.firstChild&&this._matchesCount.removeChild(this._matchesCount.firstChild);let e;if(this._state.matchesCount>0){let t=String(this._state.matchesCount);this._state.matchesCount>=Ji&&(t+="+");let n=String(this._state.matchesPosition);n==="0"&&(n="?"),e=An(aD,n,t)}else e=ET;this._matchesCount.appendChild(document.createTextNode(e)),gt(this._getAriaLabel(e,this._state.currentMatch,this._state.searchString)),gc=Math.max(gc,this._matchesCount.clientWidth)}_getAriaLabel(e,t,n){if(e===ET)return n===""?u("ariaSearchNoResultEmpty","{0} found",e):u("ariaSearchNoResult","{0} found for '{1}'",e,n);if(t){let i=u("ariaSearchNoResultWithLineNum","{0} found for '{1}', at {2}",e,n,t.startLineNumber+":"+t.startColumn),o=this._codeEditor.getModel();return o&&t.startLineNumber<=o.getLineCount()&&t.startLineNumber>=1?`${o.getLineContent(t.startLineNumber)}, ${i}`:i}return u("ariaSearchNoResultWithLineNumNoCurrentMatch","{0} found for '{1}'",e,n)}_updateToggleSelectionFindButton(){let e=this._codeEditor.getSelection(),t=e?e.startLineNumber!==e.endLineNumber||e.startColumn!==e.endColumn:!1,n=this._toggleSelectionFind.checked;this._isVisible&&(n||t)?this._toggleSelectionFind.enable():this._toggleSelectionFind.disable()}_updateButtons(){this._findInput.setEnabled(this._isVisible),this._replaceInput.setEnabled(this._isVisible&&this._isReplaceVisible),this._updateToggleSelectionFindButton(),this._closeBtn.setEnabled(this._isVisible);let e=this._state.searchString.length>0,t=!!this._state.matchesCount;this._prevBtn.setEnabled(this._isVisible&&e&&t&&this._state.canNavigateBack()),this._nextBtn.setEnabled(this._isVisible&&e&&t&&this._state.canNavigateForward()),this._replaceBtn.setEnabled(this._isVisible&&this._isReplaceVisible&&e),this._replaceAllBtn.setEnabled(this._isVisible&&this._isReplaceVisible&&e),this._domNode.classList.toggle("replaceToggled",this._isReplaceVisible),this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);let n=!this._codeEditor.getOption(80);this._toggleReplaceBtn.setEnabled(this._isVisible&&n)}_reveal(){if(this._revealTimeouts.forEach(e=>{clearTimeout(e)}),this._revealTimeouts=[],!this._isVisible){this._isVisible=!0;let e=this._codeEditor.getSelection();switch(this._codeEditor.getOption(35).autoFindInSelection){case"always":this._toggleSelectionFind.checked=!0;break;case"never":this._toggleSelectionFind.checked=!1;break;case"multiline":let n=!!e&&e.startLineNumber!==e.endLineNumber;this._toggleSelectionFind.checked=n;break;default:break}this._tryUpdateWidgetWidth(),this._updateButtons(),this._revealTimeouts.push(setTimeout(()=>{this._domNode.classList.add("visible"),this._domNode.setAttribute("aria-hidden","false")},0)),this._revealTimeouts.push(setTimeout(()=>{this._findInput.validate()},200)),this._codeEditor.layoutOverlayWidget(this);let t=!0;if(this._codeEditor.getOption(35).seedSearchStringFromSelection&&e){let n=this._codeEditor.getDomNode();if(n){let i=Jt(n),o=this._codeEditor.getScrolledVisiblePosition(e.getStartPosition()),s=i.left+(o?o.left:0),a=o?o.top:0;if(this._viewZone&&a<this._viewZone.heightInPx){e.endLineNumber>e.startLineNumber&&(t=!1);let l=mS(this._domNode).left;s>l&&(t=!1);let c=this._codeEditor.getScrolledVisiblePosition(e.getEndPosition());i.left+(c?c.left:0)>l&&(t=!1)}}}this._showViewZone(t)}}_hide(e){this._revealTimeouts.forEach(t=>{clearTimeout(t)}),this._revealTimeouts=[],this._isVisible&&(this._isVisible=!1,this._updateButtons(),this._domNode.classList.remove("visible"),this._domNode.setAttribute("aria-hidden","true"),this._findInput.clearMessage(),e&&this._codeEditor.focus(),this._codeEditor.layoutOverlayWidget(this),this._removeViewZone())}_layoutViewZone(e){if(!this._codeEditor.getOption(35).addExtraSpaceOnTop){this._removeViewZone();return}if(!this._isVisible)return;let n=this._viewZone;this._viewZoneId!==void 0||!n||this._codeEditor.changeViewZones(i=>{n.heightInPx=this._getHeight(),this._viewZoneId=i.addZone(n),this._codeEditor.setScrollTop(e||this._codeEditor.getScrollTop()+n.heightInPx)})}_showViewZone(e=!0){if(!this._isVisible||!this._codeEditor.getOption(35).addExtraSpaceOnTop)return;this._viewZone===void 0&&(this._viewZone=new Dp(0));let n=this._viewZone;this._codeEditor.changeViewZones(i=>{if(this._viewZoneId!==void 0){let o=this._getHeight();if(o===n.heightInPx)return;let s=o-n.heightInPx;n.heightInPx=o,i.layoutZone(this._viewZoneId),e&&this._codeEditor.setScrollTop(this._codeEditor.getScrollTop()+s);return}else{let o=this._getHeight();if(o-=this._codeEditor.getOption(74).top,o<=0)return;n.heightInPx=o,this._viewZoneId=i.addZone(n),e&&this._codeEditor.setScrollTop(this._codeEditor.getScrollTop()+o)}})}_removeViewZone(){this._codeEditor.changeViewZones(e=>{this._viewZoneId!==void 0&&(e.removeZone(this._viewZoneId),this._viewZoneId=void 0,this._viewZone&&(this._codeEditor.setScrollTop(this._codeEditor.getScrollTop()-this._viewZone.heightInPx),this._viewZone=void 0))})}_applyTheme(e){let t={inputActiveOptionBorder:e.getColor(Jl),inputActiveOptionBackground:e.getColor(Ql),inputActiveOptionForeground:e.getColor(ed),inputBackground:e.getColor(Wh),inputForeground:e.getColor(Vh),inputBorder:e.getColor(Gh),inputValidationInfoBackground:e.getColor(jh),inputValidationInfoForeground:e.getColor(Uh),inputValidationInfoBorder:e.getColor($h),inputValidationWarningBackground:e.getColor(Iv),inputValidationWarningForeground:e.getColor(kv),inputValidationWarningBorder:e.getColor(Lv),inputValidationErrorBackground:e.getColor(Pv),inputValidationErrorForeground:e.getColor(Mv),inputValidationErrorBorder:e.getColor(Dv)};this._findInput.style(t),this._replaceInput.style(t),this._toggleSelectionFind.style(t)}_tryUpdateWidgetWidth(){if(!this._isVisible||!cS(this._domNode))return;let e=this._codeEditor.getLayoutInfo();if(e.contentWidth<=0){this._domNode.classList.add("hiddenEditor");return}else this._domNode.classList.contains("hiddenEditor")&&this._domNode.classList.remove("hiddenEditor");let n=e.width,i=e.minimap.minimapWidth,o=!1,s=!1,a=!1;if(this._resized&&Mi(this._domNode)>Qi){this._domNode.style.maxWidth=`${n-28-i-15}px`,this._replaceInput.width=Mi(this._findInput.domNode);return}if(Qi+28+i>=n&&(s=!0),Qi+28+i-gc>=n&&(a=!0),Qi+28+i-gc>=n+50&&(o=!0),this._domNode.classList.toggle("collapsed-find-widget",o),this._domNode.classList.toggle("narrow-find-widget",a),this._domNode.classList.toggle("reduced-find-widget",s),!a&&!o&&(this._domNode.style.maxWidth=`${n-28-i-15}px`),this._resized){this._findInput.inputBox.layout();let l=this._findInput.inputBox.element.clientWidth;l>0&&(this._replaceInput.width=l)}else this._isReplaceVisible&&(this._replaceInput.width=Mi(this._findInput.domNode))}_getHeight(){let e=0;return e+=4,e+=this._findInput.inputBox.height+2,this._isReplaceVisible&&(e+=4,e+=this._replaceInput.inputBox.height+2),e+=4,e}_tryUpdateHeight(){let e=this._getHeight();return this._cachedHeight!==null&&this._cachedHeight===e?!1:(this._cachedHeight=e,this._domNode.style.height=`${e}px`,!0)}focusFindInput(){this._findInput.select(),this._findInput.focus()}focusReplaceInput(){this._replaceInput.select(),this._replaceInput.focus()}highlightFindOptions(){this._findInput.highlightFindOptions()}_updateSearchScope(){if(!!this._codeEditor.hasModel()&&this._toggleSelectionFind.checked){let e=this._codeEditor.getSelections();e.map(t=>{t.endColumn===1&&t.endLineNumber>t.startLineNumber&&(t=t.setEndPosition(t.endLineNumber-1,this._codeEditor.getModel().getLineMaxColumn(t.endLineNumber-1)));let n=this._state.currentMatch;return t.startLineNumber!==t.endLineNumber&&!C.equalsRange(t,n)?t:null}).filter(t=>!!t),e.length&&this._state.change({searchScope:e},!0)}}_onFindInputMouseDown(e){e.middleButton&&e.stopPropagation()}_onFindInputKeyDown(e){if(e.equals(kT|3))if(this._keybindingService.dispatchEvent(e,e.target)){e.preventDefault();return}else{this._findInput.inputBox.insertAtCursor(`
`),e.preventDefault();return}if(e.equals(2)){this._isReplaceVisible?this._replaceInput.focus():this._findInput.focusOnCaseSensitive(),e.preventDefault();return}if(e.equals(2066)){this._codeEditor.focus(),e.preventDefault();return}if(e.equals(16))return LT(e,this._findInput.getValue(),this._findInput.domNode.querySelector("textarea"));if(e.equals(18))return PT(e,this._findInput.getValue(),this._findInput.domNode.querySelector("textarea"))}_onReplaceInputKeyDown(e){if(e.equals(kT|3))if(this._keybindingService.dispatchEvent(e,e.target)){e.preventDefault();return}else{co&&Xo&&!this._ctrlEnterReplaceAllWarningPrompted&&(this._notificationService.info(u("ctrlEnter.keybindingChanged","Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.")),this._ctrlEnterReplaceAllWarningPrompted=!0,this._storageService.store(IT,!0,0,0)),this._replaceInput.inputBox.insertAtCursor(`
`),e.preventDefault();return}if(e.equals(2)){this._findInput.focusOnCaseSensitive(),e.preventDefault();return}if(e.equals(1026)){this._findInput.focus(),e.preventDefault();return}if(e.equals(2066)){this._codeEditor.focus(),e.preventDefault();return}if(e.equals(16))return LT(e,this._replaceInput.inputBox.value,this._replaceInput.inputBox.element.querySelector("textarea"));if(e.equals(18))return PT(e,this._replaceInput.inputBox.value,this._replaceInput.inputBox.element.querySelector("textarea"))}getVerticalSashLeft(e){return 0}_keybindingLabelFor(e){let t=this._keybindingService.lookupKeybinding(e);return t?` (${t.getLabel()})`:""}_buildDomNode(){this._findInput=this._register(new Pp(null,this._contextViewProvider,{width:dD,label:XM,placeholder:YM,appendCaseSensitiveLabel:this._keybindingLabelFor(Fe.ToggleCaseSensitiveCommand),appendWholeWordsLabel:this._keybindingLabelFor(Fe.ToggleWholeWordCommand),appendRegexLabel:this._keybindingLabelFor(Fe.ToggleRegexCommand),validation:l=>{if(l.length===0||!this._findInput.getRegex())return null;try{return new RegExp(l,"gu"),null}catch(c){return{content:c.message}}},flexibleHeight:!0,flexibleWidth:!0,flexibleMaxHeight:118,showHistoryHint:()=>_y(this._keybindingService)},this._contextKeyService,!0)),this._findInput.setRegex(!!this._state.isRegex),this._findInput.setCaseSensitive(!!this._state.matchCase),this._findInput.setWholeWords(!!this._state.wholeWord),this._register(this._findInput.onKeyDown(l=>this._onFindInputKeyDown(l))),this._register(this._findInput.inputBox.onDidChange(()=>{this._ignoreChangeEvent||this._state.change({searchString:this._findInput.getValue()},!0)})),this._register(this._findInput.onDidOptionChange(()=>{this._state.change({isRegex:this._findInput.getRegex(),wholeWord:this._findInput.getWholeWords(),matchCase:this._findInput.getCaseSensitive()},!0)})),this._register(this._findInput.onCaseSensitiveKeyDown(l=>{l.equals(1026)&&this._isReplaceVisible&&(this._replaceInput.focus(),l.preventDefault())})),this._register(this._findInput.onRegexKeyDown(l=>{l.equals(2)&&this._isReplaceVisible&&(this._replaceInput.focusOnPreserve(),l.preventDefault())})),this._register(this._findInput.inputBox.onDidHeightChange(l=>{this._tryUpdateHeight()&&this._showViewZone()})),Ll&&this._register(this._findInput.onMouseDown(l=>this._onFindInputMouseDown(l))),this._matchesCount=document.createElement("div"),this._matchesCount.className="matchesCount",this._updateMatchesCount(),this._prevBtn=this._register(new xs({label:ZM+this._keybindingLabelFor(Fe.PreviousMatchFindAction),icon:KM,onTrigger:()=>{this._codeEditor.getAction(Fe.PreviousMatchFindAction).run().then(void 0,ae)}})),this._nextBtn=this._register(new xs({label:JM+this._keybindingLabelFor(Fe.NextMatchFindAction),icon:qM,onTrigger:()=>{this._codeEditor.getAction(Fe.NextMatchFindAction).run().then(void 0,ae)}}));let n=document.createElement("div");n.className="find-part",n.appendChild(this._findInput.domNode);let i=document.createElement("div");i.className="find-actions",n.appendChild(i),i.appendChild(this._matchesCount),i.appendChild(this._prevBtn.domNode),i.appendChild(this._nextBtn.domNode),this._toggleSelectionFind=this._register(new No({icon:jM,title:QM+this._keybindingLabelFor(Fe.ToggleSearchScopeCommand),isChecked:!1})),this._register(this._toggleSelectionFind.onChange(()=>{if(this._toggleSelectionFind.checked){if(this._codeEditor.hasModel()){let l=this._codeEditor.getSelections();l.map(c=>(c.endColumn===1&&c.endLineNumber>c.startLineNumber&&(c=c.setEndPosition(c.endLineNumber-1,this._codeEditor.getModel().getLineMaxColumn(c.endLineNumber-1))),c.isEmpty()?null:c)).filter(c=>!!c),l.length&&this._state.change({searchScope:l},!0)}}else this._state.change({searchScope:null},!0)})),i.appendChild(this._toggleSelectionFind.domNode),this._closeBtn=this._register(new xs({label:eD+this._keybindingLabelFor(Fe.CloseFindWidgetCommand),icon:xx,onTrigger:()=>{this._state.change({isRevealed:!1,searchScope:null},!1)},onKeyDown:l=>{l.equals(2)&&this._isReplaceVisible&&(this._replaceBtn.isEnabled()?this._replaceBtn.focus():this._codeEditor.focus(),l.preventDefault())}})),i.appendChild(this._closeBtn.domNode),this._replaceInput=this._register(new Mp(null,void 0,{label:tD,placeholder:nD,appendPreserveCaseLabel:this._keybindingLabelFor(Fe.TogglePreserveCaseCommand),history:[],flexibleHeight:!0,flexibleWidth:!0,flexibleMaxHeight:118,showHistoryHint:()=>_y(this._keybindingService)},this._contextKeyService,!0)),this._replaceInput.setPreserveCase(!!this._state.preserveCase),this._register(this._replaceInput.onKeyDown(l=>this._onReplaceInputKeyDown(l))),this._register(this._replaceInput.inputBox.onDidChange(()=>{this._state.change({replaceString:this._replaceInput.inputBox.value},!1)})),this._register(this._replaceInput.inputBox.onDidHeightChange(l=>{this._isReplaceVisible&&this._tryUpdateHeight()&&this._showViewZone()})),this._register(this._replaceInput.onDidOptionChange(()=>{this._state.change({preserveCase:this._replaceInput.getPreserveCase()},!0)})),this._register(this._replaceInput.onPreserveCaseKeyDown(l=>{l.equals(2)&&(this._prevBtn.isEnabled()?this._prevBtn.focus():this._nextBtn.isEnabled()?this._nextBtn.focus():this._toggleSelectionFind.enabled?this._toggleSelectionFind.focus():this._closeBtn.isEnabled()&&this._closeBtn.focus(),l.preventDefault())})),this._replaceBtn=this._register(new xs({label:iD+this._keybindingLabelFor(Fe.ReplaceOneAction),icon:UM,onTrigger:()=>{this._controller.replace()},onKeyDown:l=>{l.equals(1026)&&(this._closeBtn.focus(),l.preventDefault())}})),this._replaceAllBtn=this._register(new xs({label:oD+this._keybindingLabelFor(Fe.ReplaceAllAction),icon:$M,onTrigger:()=>{this._controller.replaceAll()}}));let o=document.createElement("div");o.className="replace-part",o.appendChild(this._replaceInput.domNode);let s=document.createElement("div");s.className="replace-actions",o.appendChild(s),s.appendChild(this._replaceBtn.domNode),s.appendChild(this._replaceAllBtn.domNode),this._toggleReplaceBtn=this._register(new xs({label:rD,className:"codicon toggle left",onTrigger:()=>{this._state.change({isReplaceRevealed:!this._isReplaceVisible},!1),this._isReplaceVisible&&(this._replaceInput.width=Mi(this._findInput.domNode),this._replaceInput.inputBox.layout()),this._showViewZone()}})),this._toggleReplaceBtn.setExpanded(this._isReplaceVisible),this._domNode=document.createElement("div"),this._domNode.className="editor-widget find-widget",this._domNode.setAttribute("aria-hidden","true"),this._domNode.style.width=`${Qi}px`,this._domNode.appendChild(this._toggleReplaceBtn.domNode),this._domNode.appendChild(n),this._domNode.appendChild(o),this._resizeSash=new xo(this._domNode,this,{orientation:0,size:2}),this._resized=!1;let a=Qi;this._register(this._resizeSash.onDidStart(()=>{a=Mi(this._domNode)})),this._register(this._resizeSash.onDidChange(l=>{this._resized=!0;let c=a+l.startX-l.currentX;if(c<Qi)return;let d=parseFloat(pS(this._domNode).maxWidth)||0;c>d||(this._domNode.style.width=`${c}px`,this._isReplaceVisible&&(this._replaceInput.width=Mi(this._findInput.domNode)),this._findInput.inputBox.layout(),this._tryUpdateHeight())})),this._register(this._resizeSash.onDidReset(()=>{let l=Mi(this._domNode);if(l<Qi)return;let c=Qi;if(!this._resized||l===Qi){let d=this._codeEditor.getLayoutInfo();c=d.width-28-d.minimap.minimapWidth-15,this._resized=!0}this._domNode.style.width=`${c}px`,this._isReplaceVisible&&(this._replaceInput.width=Mi(this._findInput.domNode)),this._findInput.inputBox.layout()}))}updateAccessibilitySupport(){let e=this._codeEditor.getOption(2);this._findInput.setFocusInputOnOptionClick(e!==2)}};Xa.ID="editor.contrib.findWidget";var xs=class extends Ft{constructor(e){super();this._opts=e;let t="button";this._opts.className&&(t=t+" "+this._opts.className),this._opts.icon&&(t=t+" "+lt.asClassName(this._opts.icon)),this._domNode=document.createElement("div"),this._domNode.title=this._opts.label,this._domNode.tabIndex=0,this._domNode.className=t,this._domNode.setAttribute("role","button"),this._domNode.setAttribute("aria-label",this._opts.label),this.onclick(this._domNode,n=>{this._opts.onTrigger(),n.preventDefault()}),this.onkeydown(this._domNode,n=>{if(n.equals(10)||n.equals(3)){this._opts.onTrigger(),n.preventDefault();return}this._opts.onKeyDown&&this._opts.onKeyDown(n)})}get domNode(){return this._domNode}isEnabled(){return this._domNode.tabIndex>=0}focus(){this._domNode.focus()}setEnabled(e){this._domNode.classList.toggle("disabled",!e),this._domNode.setAttribute("aria-disabled",String(!e)),this._domNode.tabIndex=e?0:-1}setExpanded(e){this._domNode.setAttribute("aria-expanded",String(!!e)),e?(this._domNode.classList.remove(...lt.asClassNameArray(wT)),this._domNode.classList.add(...lt.asClassNameArray(TT))):(this._domNode.classList.remove(...lt.asClassNameArray(TT)),this._domNode.classList.add(...lt.asClassNameArray(wT)))}};ye((r,e)=>{let t=(y,v)=>{v&&e.addRule(`.monaco-editor ${y} { background-color: ${v}; }`)};t(".findMatch",r.getColor(Vv)),t(".currentFindMatch",r.getColor(Wv)),t(".findScope",r.getColor(Gv));let n=r.getColor(Qn);t(".find-widget",n);let i=r.getColor(dr);i&&e.addRule(`.monaco-editor .find-widget { box-shadow: 0 0 8px 2px ${i}; }`);let o=r.getColor(Uv);o&&e.addRule(`.monaco-editor .findMatch { border: 1px ${r.type==="hc"?"dotted":"solid"} ${o}; box-sizing: border-box; }`);let s=r.getColor(jv);s&&e.addRule(`.monaco-editor .currentFindMatch { border: 2px solid ${s}; padding: 1px; box-sizing: border-box; }`);let a=r.getColor($v);a&&e.addRule(`.monaco-editor .findScope { border: 1px ${r.type==="hc"?"dashed":"solid"} ${a}; }`);let l=r.getColor(Jn);l&&e.addRule(`.monaco-editor .find-widget { border: 1px solid ${l}; }`);let c=r.getColor(ya);c&&e.addRule(`.monaco-editor .find-widget { color: ${c}; }`);let d=r.getColor(Ev);d&&e.addRule(`.monaco-editor .find-widget.no-results .matchesCount { color: ${d}; }`);let h=r.getColor(Ov);if(h)e.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${h}; }`);else{let y=r.getColor(ba);y&&e.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${y}; }`)}let p=r.getColor(ix);p&&e.addRule(`
		.monaco-editor .find-widget .button:not(.disabled):hover,
		.monaco-editor .find-widget .codicon-find-selection:hover {
			background-color: ${p} !important;
		}
	`);let g=r.getColor(Bh);g&&e.addRule(`.monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: ${g}; }`)});ne();un();Te();On();Me();var MT=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},eo=function(r,e){return function(t,n){e(t,n,r)}},Ya=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},hD=524288;function wy(r,e="single",t=!1){if(!r.hasModel())return null;let n=r.getSelection();if(e==="single"&&n.startLineNumber===n.endLineNumber||e==="multiple"){if(n.isEmpty()){let i=r.getConfiguredWordAtPosition(n.getStartPosition());if(i&&t===!1)return i.word}else if(r.getModel().getValueLengthInRange(n)<hD)return r.getModel().getValueInRange(n)}return null}var vn=class DT extends B{constructor(e,t,n,i){super();this._editor=e,this._findWidgetVisible=Er.bindTo(t),this._contextKeyService=t,this._storageService=n,this._clipboardService=i,this._updateHistoryDelayer=new hi(500),this._state=this._register(new vy),this.loadQueryState(),this._register(this._state.onFindReplaceStateChange(o=>this._onStateChanged(o))),this._model=null,this._register(this._editor.onDidChangeModel(()=>{let o=this._editor.getModel()&&this._state.isRevealed;this.disposeModel(),this._state.change({searchScope:null,matchCase:this._storageService.getBoolean("editor.matchCase",1,!1),wholeWord:this._storageService.getBoolean("editor.wholeWord",1,!1),isRegex:this._storageService.getBoolean("editor.isRegex",1,!1),preserveCase:this._storageService.getBoolean("editor.preserveCase",1,!1)},!1),o&&this._start({forceRevealReplace:!1,seedSearchStringFromSelection:"none",seedSearchStringFromNonEmptySelection:!1,seedSearchStringFromGlobalClipboard:!1,shouldFocus:0,shouldAnimate:!1,updateSearchScope:!1,loop:this._editor.getOption(35).loop})}))}get editor(){return this._editor}static get(e){return e.getContribution(DT.ID)}dispose(){this.disposeModel(),super.dispose()}disposeModel(){this._model&&(this._model.dispose(),this._model=null)}_onStateChanged(e){this.saveQueryState(e),e.isRevealed&&(this._state.isRevealed?this._findWidgetVisible.set(!0):(this._findWidgetVisible.reset(),this.disposeModel())),e.searchString&&this.setGlobalBufferTerm(this._state.searchString)}saveQueryState(e){e.isRegex&&this._storageService.store("editor.isRegex",this._state.actualIsRegex,1,0),e.wholeWord&&this._storageService.store("editor.wholeWord",this._state.actualWholeWord,1,0),e.matchCase&&this._storageService.store("editor.matchCase",this._state.actualMatchCase,1,0),e.preserveCase&&this._storageService.store("editor.preserveCase",this._state.actualPreserveCase,1,0)}loadQueryState(){this._state.change({matchCase:this._storageService.getBoolean("editor.matchCase",1,this._state.matchCase),wholeWord:this._storageService.getBoolean("editor.wholeWord",1,this._state.wholeWord),isRegex:this._storageService.getBoolean("editor.isRegex",1,this._state.isRegex),preserveCase:this._storageService.getBoolean("editor.preserveCase",1,this._state.preserveCase)},!1)}isFindInputFocused(){return!!Ka.getValue(this._contextKeyService)}getState(){return this._state}closeFindWidget(){this._state.change({isRevealed:!1,searchScope:null},!1),this._editor.focus()}toggleCaseSensitive(){this._state.change({matchCase:!this._state.matchCase},!1),this._state.isRevealed||this.highlightFindOptions()}toggleWholeWords(){this._state.change({wholeWord:!this._state.wholeWord},!1),this._state.isRevealed||this.highlightFindOptions()}toggleRegex(){this._state.change({isRegex:!this._state.isRegex},!1),this._state.isRevealed||this.highlightFindOptions()}togglePreserveCase(){this._state.change({preserveCase:!this._state.preserveCase},!1),this._state.isRevealed||this.highlightFindOptions()}toggleSearchScope(){if(this._state.searchScope)this._state.change({searchScope:null},!0);else if(this._editor.hasModel()){let e=this._editor.getSelections();e.map(t=>(t.endColumn===1&&t.endLineNumber>t.startLineNumber&&(t=t.setEndPosition(t.endLineNumber-1,this._editor.getModel().getLineMaxColumn(t.endLineNumber-1))),t.isEmpty()?null:t)).filter(t=>!!t),e.length&&this._state.change({searchScope:e},!0)}}setSearchString(e){this._state.isRegex&&(e=uo(e)),this._state.change({searchString:e},!1)}highlightFindOptions(e=!1){}_start(e){return Ya(this,void 0,void 0,function*(){if(this.disposeModel(),!this._editor.hasModel())return;let t={isRevealed:!0};if(e.seedSearchStringFromSelection==="single"){let n=wy(this._editor,e.seedSearchStringFromSelection,e.seedSearchStringFromNonEmptySelection);n&&(this._state.isRegex?t.searchString=uo(n):t.searchString=n)}else if(e.seedSearchStringFromSelection==="multiple"&&!e.updateSearchScope){let n=wy(this._editor,e.seedSearchStringFromSelection);n&&(t.searchString=n)}if(!t.searchString&&e.seedSearchStringFromGlobalClipboard){let n=yield this.getGlobalBufferTerm();if(!this._editor.hasModel())return;n&&(t.searchString=n)}if(e.forceRevealReplace?t.isReplaceRevealed=!0:this._findWidgetVisible.get()||(t.isReplaceRevealed=!1),e.updateSearchScope){let n=this._editor.getSelections();n.some(i=>!i.isEmpty())&&(t.searchScope=n)}t.loop=e.loop,this._state.change(t,!1),this._model||(this._model=new vs(this._editor,this._state))})}start(e){return this._start(e)}moveToNextMatch(){return this._model?(this._model.moveToNextMatch(),!0):!1}moveToPrevMatch(){return this._model?(this._model.moveToPrevMatch(),!0):!1}replace(){return this._model?(this._model.replace(),!0):!1}replaceAll(){return this._model?(this._model.replaceAll(),!0):!1}selectAllMatches(){return this._model?(this._model.selectAllMatches(),this._editor.focus(),!0):!1}getGlobalBufferTerm(){return Ya(this,void 0,void 0,function*(){return this._editor.getOption(35).globalFindClipboard&&this._editor.hasModel()&&!this._editor.getModel().isTooLargeForSyncing()?this._clipboardService.readFindText():""})}setGlobalBufferTerm(e){this._editor.getOption(35).globalFindClipboard&&this._editor.hasModel()&&!this._editor.getModel().isTooLargeForSyncing()&&this._clipboardService.writeFindText(e)}};vn.ID="editor.contrib.findController";vn=MT([eo(1,Q),eo(2,en),eo(3,Jr)],vn);var Ty=class extends vn{constructor(e,t,n,i,o,s,a,l){super(e,n,a,l);this._contextViewService=t,this._keybindingService=i,this._themeService=o,this._notificationService=s,this._widget=null,this._findOptionsWidget=null}_start(e){let t=Object.create(null,{_start:{get:()=>super._start}});return Ya(this,void 0,void 0,function*(){this._widget||this._createFindWidget();let n=this._editor.getSelection(),i=!1;switch(this._editor.getOption(35).autoFindInSelection){case"always":i=!0;break;case"never":i=!1;break;case"multiline":i=!!n&&n.startLineNumber!==n.endLineNumber;break;default:break}e.updateSearchScope=i,yield t._start.call(this,e),this._widget&&(e.shouldFocus===2?this._widget.focusReplaceInput():e.shouldFocus===1&&this._widget.focusFindInput())})}highlightFindOptions(e=!1){this._widget||this._createFindWidget(),this._state.isRevealed&&!e?this._widget.highlightFindOptions():this._findOptionsWidget.highlightFindOptions()}_createFindWidget(){this._widget=this._register(new Xa(this._editor,this,this._state,this._contextViewService,this._keybindingService,this._contextKeyService,this._themeService,this._storageService,this._notificationService)),this._findOptionsWidget=this._register(new qa(this._editor,this._state,this._keybindingService,this._themeService))}};Ty=MT([eo(1,lu),eo(2,Q),eo(3,Qe),eo(4,St),eo(5,dt),eo(6,en),eo(7,Jr)],Ty);var uD=Wm(new Bm({id:Fe.StartFindAction,label:u("startFindAction","Find"),alias:"Find",precondition:O.or(x.focus,O.has("editorIsOpen")),kbOpts:{kbExpr:null,primary:2084,weight:100},menuOpts:{menuId:oe.MenubarEditMenu,group:"3_find",title:u({key:"miFind",comment:["&& denotes a mnemonic"]},"&&Find"),order:1}}));uD.addImplementation(0,(r,e,t)=>{let n=vn.get(e);return n?n.start({forceRevealReplace:!1,seedSearchStringFromSelection:e.getOption(35).seedSearchStringFromSelection!=="never"?"single":"none",seedSearchStringFromNonEmptySelection:e.getOption(35).seedSearchStringFromSelection==="selection",seedSearchStringFromGlobalClipboard:e.getOption(35).globalFindClipboard,shouldFocus:1,shouldAnimate:!0,updateSearchScope:!1,loop:e.getOption(35).loop}):!1});var RT=class extends N{constructor(){super({id:Fe.StartFindWithSelection,label:u("startFindWithSelectionAction","Find With Selection"),alias:"Find With Selection",precondition:void 0,kbOpts:{kbExpr:null,primary:0,mac:{primary:2083},weight:100}})}run(e,t){return Ya(this,void 0,void 0,function*(){let n=vn.get(t);n&&(yield n.start({forceRevealReplace:!1,seedSearchStringFromSelection:"multiple",seedSearchStringFromNonEmptySelection:!1,seedSearchStringFromGlobalClipboard:!1,shouldFocus:0,shouldAnimate:!0,updateSearchScope:!1,loop:t.getOption(35).loop}),n.setGlobalBufferTerm(n.getState().searchString))})}},Ey=class extends N{run(e,t){return Ya(this,void 0,void 0,function*(){let n=vn.get(t);n&&!this._run(n)&&(yield n.start({forceRevealReplace:!1,seedSearchStringFromSelection:n.getState().searchString.length===0&&t.getOption(35).seedSearchStringFromSelection!=="never"?"single":"none",seedSearchStringFromNonEmptySelection:t.getOption(35).seedSearchStringFromSelection==="selection",seedSearchStringFromGlobalClipboard:!0,shouldFocus:0,shouldAnimate:!0,updateSearchScope:!1,loop:t.getOption(35).loop}),this._run(n))})}},FT=class extends Ey{constructor(){super({id:Fe.NextMatchFindAction,label:u("findNextMatchAction","Find Next"),alias:"Find Next",precondition:void 0,kbOpts:[{kbExpr:x.focus,primary:61,mac:{primary:2085,secondary:[61]},weight:100},{kbExpr:O.and(x.focus,Ka),primary:3,weight:100}]})}_run(e){return e.moveToNextMatch()?(e.editor.pushUndoStop(),!0):!1}},AT=class extends Ey{constructor(){super({id:Fe.PreviousMatchFindAction,label:u("findPreviousMatchAction","Find Previous"),alias:"Find Previous",precondition:void 0,kbOpts:[{kbExpr:x.focus,primary:1085,mac:{primary:3109,secondary:[1085]},weight:100},{kbExpr:O.and(x.focus,Ka),primary:1027,weight:100}]})}_run(e){return e.moveToPrevMatch()}},Iy=class extends N{run(e,t){return Ya(this,void 0,void 0,function*(){let n=vn.get(t);if(!n)return;let i=t.getOption(35).seedSearchStringFromSelection==="selection",o=null;t.getOption(35).seedSearchStringFromSelection!=="never"&&(o=wy(t,"single",i)),o&&n.setSearchString(o),this._run(n)||(yield n.start({forceRevealReplace:!1,seedSearchStringFromSelection:t.getOption(35).seedSearchStringFromSelection!=="never"?"single":"none",seedSearchStringFromNonEmptySelection:i,seedSearchStringFromGlobalClipboard:!1,shouldFocus:0,shouldAnimate:!0,updateSearchScope:!1,loop:t.getOption(35).loop}),this._run(n))})}},NT=class extends Iy{constructor(){super({id:Fe.NextSelectionMatchFindAction,label:u("nextSelectionMatchFindAction","Find Next Selection"),alias:"Find Next Selection",precondition:void 0,kbOpts:{kbExpr:x.focus,primary:2109,weight:100}})}_run(e){return e.moveToNextMatch()}},zT=class extends Iy{constructor(){super({id:Fe.PreviousSelectionMatchFindAction,label:u("previousSelectionMatchFindAction","Find Previous Selection"),alias:"Find Previous Selection",precondition:void 0,kbOpts:{kbExpr:x.focus,primary:3133,weight:100}})}_run(e){return e.moveToPrevMatch()}},pD=Wm(new Bm({id:Fe.StartFindReplaceAction,label:u("startReplace","Replace"),alias:"Replace",precondition:O.or(x.focus,O.has("editorIsOpen")),kbOpts:{kbExpr:null,primary:2086,mac:{primary:2596},weight:100},menuOpts:{menuId:oe.MenubarEditMenu,group:"3_find",title:u({key:"miReplace",comment:["&& denotes a mnemonic"]},"&&Replace"),order:2}}));pD.addImplementation(0,(r,e,t)=>{if(!e.hasModel()||e.getOption(80))return!1;let n=vn.get(e);if(!n)return!1;let i=e.getSelection(),o=n.isFindInputFocused(),s=!i.isEmpty()&&i.startLineNumber===i.endLineNumber&&e.getOption(35).seedSearchStringFromSelection!=="never"&&!o,a=o||s?2:1;return n.start({forceRevealReplace:!0,seedSearchStringFromSelection:s?"single":"none",seedSearchStringFromNonEmptySelection:e.getOption(35).seedSearchStringFromSelection==="selection",seedSearchStringFromGlobalClipboard:e.getOption(35).seedSearchStringFromSelection!=="never",shouldFocus:a,shouldAnimate:!0,updateSearchScope:!1,loop:e.getOption(35).loop})});J(vn.ID,Ty);I(RT);I(FT);I(AT);I(NT);I(zT);var Ei=it.bindToContribution(vn.get);K(new Ei({id:Fe.CloseFindWidgetCommand,precondition:Er,handler:r=>r.closeFindWidget(),kbOpts:{weight:100+5,kbExpr:O.and(x.focus,O.not("isComposing")),primary:9,secondary:[1033]}}));K(new Ei({id:Fe.ToggleCaseSensitiveCommand,precondition:void 0,handler:r=>r.toggleCaseSensitive(),kbOpts:{weight:100+5,kbExpr:x.focus,primary:sc.primary,mac:sc.mac,win:sc.win,linux:sc.linux}}));K(new Ei({id:Fe.ToggleWholeWordCommand,precondition:void 0,handler:r=>r.toggleWholeWords(),kbOpts:{weight:100+5,kbExpr:x.focus,primary:ac.primary,mac:ac.mac,win:ac.win,linux:ac.linux}}));K(new Ei({id:Fe.ToggleRegexCommand,precondition:void 0,handler:r=>r.toggleRegex(),kbOpts:{weight:100+5,kbExpr:x.focus,primary:lc.primary,mac:lc.mac,win:lc.win,linux:lc.linux}}));K(new Ei({id:Fe.ToggleSearchScopeCommand,precondition:void 0,handler:r=>r.toggleSearchScope(),kbOpts:{weight:100+5,kbExpr:x.focus,primary:dc.primary,mac:dc.mac,win:dc.win,linux:dc.linux}}));K(new Ei({id:Fe.TogglePreserveCaseCommand,precondition:void 0,handler:r=>r.togglePreserveCase(),kbOpts:{weight:100+5,kbExpr:x.focus,primary:cc.primary,mac:cc.mac,win:cc.win,linux:cc.linux}}));K(new Ei({id:Fe.ReplaceOneAction,precondition:Er,handler:r=>r.replace(),kbOpts:{weight:100+5,kbExpr:x.focus,primary:3094}}));K(new Ei({id:Fe.ReplaceOneAction,precondition:Er,handler:r=>r.replace(),kbOpts:{weight:100+5,kbExpr:O.and(x.focus,rc),primary:3}}));K(new Ei({id:Fe.ReplaceAllAction,precondition:Er,handler:r=>r.replaceAll(),kbOpts:{weight:100+5,kbExpr:x.focus,primary:2563}}));K(new Ei({id:Fe.ReplaceAllAction,precondition:Er,handler:r=>r.replaceAll(),kbOpts:{weight:100+5,kbExpr:O.and(x.focus,rc),primary:void 0,mac:{primary:2051}}}));K(new Ei({id:Fe.SelectAllMatchesAction,precondition:Er,handler:r=>r.selectAllMatches(),kbOpts:{weight:100+5,kbExpr:x.focus,primary:515}}));Oe();ke();ho();U();Ze();Wt();pr();ce();Be();Pe();Oi();Ae();var zo=class{constructor(e,t,n){if(e.length!==t.length||e.length>65535)throw new Error("invalid startIndexes or endIndexes size");this._startIndexes=e,this._endIndexes=t,this._collapseStates=new Uint32Array(Math.ceil(e.length/32)),this._types=n,this._parentsComputed=!1}ensureParentIndices(){if(!this._parentsComputed){this._parentsComputed=!0;let e=[],t=(n,i)=>{let o=e[e.length-1];return this.getStartLineNumber(o)<=n&&this.getEndLineNumber(o)>=i};for(let n=0,i=this._startIndexes.length;n<i;n++){let o=this._startIndexes[n],s=this._endIndexes[n];if(o>16777215||s>16777215)throw new Error("startLineNumber or endLineNumber must not exceed "+16777215);for(;e.length>0&&!t(o,s);)e.pop();let a=e.length>0?e[e.length-1]:-1;e.push(n),this._startIndexes[n]=o+((a&255)<<24),this._endIndexes[n]=s+((a&65280)<<16)}}}get length(){return this._startIndexes.length}getStartLineNumber(e){return this._startIndexes[e]&16777215}getEndLineNumber(e){return this._endIndexes[e]&16777215}getType(e){return this._types?this._types[e]:void 0}hasTypes(){return!!this._types}isCollapsed(e){let t=e/32|0,n=e%32;return(this._collapseStates[t]&1<<n)!==0}setCollapsed(e,t){let n=e/32|0,i=e%32,o=this._collapseStates[n];t?this._collapseStates[n]=o|1<<i:this._collapseStates[n]=o&~(1<<i)}setCollapsedAllOfType(e,t){let n=!1;if(this._types)for(let i=0;i<this._types.length;i++)this._types[i]===e&&(this.setCollapsed(i,t),n=!0);return n}toRegion(e){return new OT(this,e)}getParentIndex(e){this.ensureParentIndices();let t=((this._startIndexes[e]&4278190080)>>>24)+((this._endIndexes[e]&4278190080)>>>16);return t===65535?-1:t}contains(e,t){return this.getStartLineNumber(e)<=t&&this.getEndLineNumber(e)>=t}findIndex(e){let t=0,n=this._startIndexes.length;if(n===0)return-1;for(;t<n;){let i=Math.floor((t+n)/2);e<this.getStartLineNumber(i)?n=i:t=i+1}return t-1}findRange(e){let t=this.findIndex(e);if(t>=0){if(this.getEndLineNumber(t)>=e)return t;for(t=this.getParentIndex(t);t!==-1;){if(this.contains(t,e))return t;t=this.getParentIndex(t)}}return-1}toString(){let e=[];for(let t=0;t<this.length;t++)e[t]=`[${this.isCollapsed(t)?"+":"-"}] ${this.getStartLineNumber(t)}/${this.getEndLineNumber(t)}`;return e.join(", ")}},OT=class{constructor(e,t){this.ranges=e,this.index=t}get startLineNumber(){return this.ranges.getStartLineNumber(this.index)}get endLineNumber(){return this.ranges.getEndLineNumber(this.index)}get regionIndex(){return this.index}get parentIndex(){return this.ranges.getParentIndex(this.index)}get isCollapsed(){return this.ranges.isCollapsed(this.index)}containedBy(e){return e.startLineNumber<=this.startLineNumber&&e.endLineNumber>=this.endLineNumber}containsLine(e){return this.startLineNumber<=e&&e<=this.endLineNumber}};var ky=class{constructor(e,t){this._updateEventEmitter=new $,this.onDidChange=this._updateEventEmitter.event,this._textModel=e,this._decorationProvider=t,this._regions=new zo(new Uint32Array(0),new Uint32Array(0)),this._editorDecorationIds=[],this._isInitialized=!1}get regions(){return this._regions}get textModel(){return this._textModel}get isInitialized(){return this._isInitialized}toggleCollapseState(e){if(!e.length)return;e=e.sort((n,i)=>n.regionIndex-i.regionIndex);let t={};this._decorationProvider.changeDecorations(n=>{let i=0,o=-1,s=-1,a=l=>{for(;i<l;){let c=this._regions.getEndLineNumber(i),d=this._regions.isCollapsed(i);c<=o&&n.changeDecorationOptions(this._editorDecorationIds[i],this._decorationProvider.getDecorationOption(d,c<=s)),d&&c>s&&(s=c),i++}};for(let l of e){let c=l.regionIndex,d=this._editorDecorationIds[c];if(d&&!t[d]){t[d]=!0,a(c);let h=!this._regions.isCollapsed(c);this._regions.setCollapsed(c,h),o=Math.max(o,this._regions.getEndLineNumber(c))}}a(this._regions.length)}),this._updateEventEmitter.fire({model:this,collapseStateChanged:e})}update(e,t=[]){let n=[],i=(h,p)=>{for(let g of t)if(h<g&&g<=p)return!0;return!1},o=-1,s=(h,p)=>{let g=e.getStartLineNumber(h),y=e.getEndLineNumber(h);p||(p=e.isCollapsed(h)),p&&i(g,y)&&(p=!1),e.setCollapsed(h,p);let v=this._textModel.getLineMaxColumn(g),w={startLineNumber:g,startColumn:Math.max(v-1,1),endLineNumber:g,endColumn:v};n.push({range:w,options:this._decorationProvider.getDecorationOption(p,y<=o)}),p&&y>o&&(o=y)},a=0,l=()=>{for(;a<this._regions.length;){let h=this._regions.isCollapsed(a);if(a++,h)return a-1}return-1},c=0,d=l();for(;d!==-1&&c<e.length;){let h=this._textModel.getDecorationRange(this._editorDecorationIds[d]);if(h){let p=h.startLineNumber;if(h.startColumn===Math.max(h.endColumn-1,1)&&this._textModel.getLineMaxColumn(p)===h.endColumn)for(;c<e.length;){let g=e.getStartLineNumber(c);if(p>=g)s(c,p===g),c++;else break}}d=l()}for(;c<e.length;)s(c,!1),c++;this._editorDecorationIds=this._decorationProvider.deltaDecorations(this._editorDecorationIds,n),this._regions=e,this._isInitialized=!0,this._updateEventEmitter.fire({model:this})}getMemento(){let e=[];for(let t=0;t<this._regions.length;t++)if(this._regions.isCollapsed(t)){let n=this._textModel.getDecorationRange(this._editorDecorationIds[t]);if(n){let i=n.startLineNumber,o=n.endLineNumber+this._regions.getEndLineNumber(t)-this._regions.getStartLineNumber(t);e.push({startLineNumber:i,endLineNumber:o})}}if(e.length>0)return e}applyMemento(e){if(!Array.isArray(e))return;let t=[];for(let n of e){let i=this.getRegionAtLine(n.startLineNumber);i&&!i.isCollapsed&&t.push(i)}this.toggleCollapseState(t)}dispose(){this._decorationProvider.deltaDecorations(this._editorDecorationIds,[])}getAllRegionsAtLine(e,t){let n=[];if(this._regions){let i=this._regions.findRange(e),o=1;for(;i>=0;){let s=this._regions.toRegion(i);(!t||t(s,o))&&n.push(s),o++,i=s.parentIndex}}return n}getRegionAtLine(e){if(this._regions){let t=this._regions.findRange(e);if(t>=0)return this._regions.toRegion(t)}return null}getRegionsInside(e,t){let n=[],i=e?e.regionIndex+1:0,o=e?e.endLineNumber:Number.MAX_VALUE;if(t&&t.length===2){let s=[];for(let a=i,l=this._regions.length;a<l;a++){let c=this._regions.toRegion(a);if(this._regions.getStartLineNumber(a)<o){for(;s.length>0&&!c.containedBy(s[s.length-1]);)s.pop();s.push(c),t(c,s.length)&&n.push(c)}else break}}else for(let s=i,a=this._regions.length;s<a;s++){let l=this._regions.toRegion(s);if(this._regions.getStartLineNumber(s)<o)(!t||t(l))&&n.push(l);else break}return n}};function HT(r,e,t){let n=[];for(let i of t){let o=r.getRegionAtLine(i);if(o){let s=!o.isCollapsed;if(n.push(o),e>1){let a=r.getRegionsInside(o,(l,c)=>l.isCollapsed!==s&&c<e);n.push(...a)}}}r.toggleCollapseState(n)}function Cs(r,e,t=Number.MAX_VALUE,n){let i=[];if(n&&n.length>0)for(let o of n){let s=r.getRegionAtLine(o);if(s&&(s.isCollapsed!==e&&i.push(s),t>1)){let a=r.getRegionsInside(s,(l,c)=>l.isCollapsed!==e&&c<t);i.push(...a)}}else{let o=r.getRegionsInside(null,(s,a)=>s.isCollapsed!==e&&a<t);i.push(...o)}r.toggleCollapseState(i)}function Ly(r,e,t,n){let i=[];for(let o of n){let s=r.getAllRegionsAtLine(o,(a,l)=>a.isCollapsed!==e&&l<=t);i.push(...s)}r.toggleCollapseState(i)}function BT(r,e,t){let n=[];for(let i of t){let o=r.getAllRegionsAtLine(i,s=>s.isCollapsed!==e);o.length>0&&n.push(o[0])}r.toggleCollapseState(n)}function WT(r,e,t,n){let i=(s,a)=>a===e&&s.isCollapsed!==t&&!n.some(l=>s.containsLine(l)),o=r.getRegionsInside(null,i);r.toggleCollapseState(o)}function Py(r,e,t){let n=[];for(let s of t)n.push(r.getAllRegionsAtLine(s,void 0)[0]);let i=s=>n.every(a=>!a.containedBy(s)&&!s.containedBy(a))&&s.isCollapsed!==e,o=r.getRegionsInside(null,i);r.toggleCollapseState(o)}function Rp(r,e,t){let n=r.textModel,i=r.regions,o=[];for(let s=i.length-1;s>=0;s--)if(t!==i.isCollapsed(s)){let a=i.getStartLineNumber(s);e.test(n.getLineContent(a))&&o.push(i.toRegion(s))}r.toggleCollapseState(o)}function Fp(r,e,t){let n=r.regions,i=[];for(let o=n.length-1;o>=0;o--)t!==n.isCollapsed(o)&&e===n.getType(o)&&i.push(n.toRegion(o));r.toggleCollapseState(i)}function VT(r,e){let t=null,n=e.getRegionAtLine(r);if(n!==null&&(t=n.startLineNumber,r===t)){let i=n.parentIndex;i!==-1?t=e.regions.getStartLineNumber(i):t=null}return t}function GT(r,e){let t=e.getRegionAtLine(r);if(t!==null&&t.startLineNumber===r){if(r!==t.startLineNumber)return t.startLineNumber;{let n=t.parentIndex,i=0;for(n!==-1&&(i=e.regions.getStartLineNumber(t.parentIndex));t!==null;)if(t.regionIndex>0){if(t=e.regions.toRegion(t.regionIndex-1),t.startLineNumber<=i)return null;if(t.parentIndex===n)return t.startLineNumber}else return null}}else if(e.regions.length>0)for(t=e.regions.toRegion(e.regions.length-1);t!==null;){if(t.startLineNumber<r)return t.startLineNumber;t.regionIndex>0?t=e.regions.toRegion(t.regionIndex-1):t=null}return null}function jT(r,e){let t=e.getRegionAtLine(r);if(t!==null&&t.startLineNumber===r){let n=t.parentIndex,i=0;if(n!==-1)i=e.regions.getEndLineNumber(t.parentIndex);else{if(e.regions.length===0)return null;i=e.regions.getEndLineNumber(e.regions.length-1)}for(;t!==null;)if(t.regionIndex<e.regions.length){if(t=e.regions.toRegion(t.regionIndex+1),t.startLineNumber>=i)return null;if(t.parentIndex===n)return t.startLineNumber}else return null}else if(e.regions.length>0)for(t=e.regions.toRegion(0);t!==null;){if(t.startLineNumber>r)return t.startLineNumber;t.regionIndex<e.regions.length?t=e.regions.toRegion(t.regionIndex+1):t=null}return null}mt();Ae();te();var My=class{constructor(e){this._updateEventEmitter=new $,this._foldingModel=e,this._foldingModelListener=e.onDidChange(t=>this.updateHiddenRanges()),this._hiddenRanges=[],e.regions.length&&this.updateHiddenRanges()}get onDidChange(){return this._updateEventEmitter.event}get hiddenRanges(){return this._hiddenRanges}updateHiddenRanges(){let e=!1,t=[],n=0,i=0,o=Number.MAX_VALUE,s=-1,a=this._foldingModel.regions;for(;n<a.length;n++){if(!a.isCollapsed(n))continue;let l=a.getStartLineNumber(n)+1,c=a.getEndLineNumber(n);o<=l&&c<=s||(!e&&i<this._hiddenRanges.length&&this._hiddenRanges[i].startLineNumber===l&&this._hiddenRanges[i].endLineNumber===c?(t.push(this._hiddenRanges[i]),i++):(e=!0,t.push(new C(l,1,c,1))),o=l,s=c)}(e||i<this._hiddenRanges.length)&&this.applyHiddenRanges(t)}applyMemento(e){if(!Array.isArray(e)||e.length===0)return!1;let t=[];for(let n of e){if(!n.startLineNumber||!n.endLineNumber)return!1;t.push(new C(n.startLineNumber+1,1,n.endLineNumber,1))}return this.applyHiddenRanges(t),!0}getMemento(){return this._hiddenRanges.map(e=>({startLineNumber:e.startLineNumber-1,endLineNumber:e.endLineNumber}))}applyHiddenRanges(e){this._hiddenRanges=e,this._updateEventEmitter.fire(e)}hasRanges(){return this._hiddenRanges.length>0}isHidden(e){return UT(this._hiddenRanges,e)!==null}adjustSelections(e){let t=!1,n=this._foldingModel.textModel,i=null,o=s=>((!i||!mD(s,i))&&(i=UT(this._hiddenRanges,s)),i?i.startLineNumber-1:null);for(let s=0,a=e.length;s<a;s++){let l=e[s],c=o(l.startLineNumber);c&&(l=l.setStartPosition(c,n.getLineMaxColumn(c)),t=!0);let d=o(l.endLineNumber);d&&(l=l.setEndPosition(d,n.getLineMaxColumn(d)),t=!0),e[s]=l}return t}dispose(){this.hiddenRanges.length>0&&(this._hiddenRanges=[],this._updateEventEmitter.fire(this._hiddenRanges)),this._foldingModelListener&&(this._foldingModelListener.dispose(),this._foldingModelListener=null)}};function mD(r,e){return r>=e.startLineNumber&&r<=e.endLineNumber}function UT(r,e){let t=wh(r,n=>e<n.startLineNumber)-1;return t>=0&&r[t].endLineNumber>=e?r[t]:null}Ut();Oi();var gD=5e3,fD="indent",Dy=class{constructor(e){this.editorModel=e,this.id=fD}dispose(){}compute(e){let t=Ge.getFoldingRules(this.editorModel.getLanguageId()),n=t&&!!t.offSide,i=t&&t.markers;return Promise.resolve(yD(this.editorModel,n,i))}},$T=class{constructor(e){this._startIndexes=[],this._endIndexes=[],this._indentOccurrences=[],this._length=0,this._foldingRangesLimit=e}insertFirst(e,t,n){if(e>16777215||t>16777215)return;let i=this._length;this._startIndexes[i]=e,this._endIndexes[i]=t,this._length++,n<1e3&&(this._indentOccurrences[n]=(this._indentOccurrences[n]||0)+1)}toIndentRanges(e){if(this._length<=this._foldingRangesLimit){let t=new Uint32Array(this._length),n=new Uint32Array(this._length);for(let i=this._length-1,o=0;i>=0;i--,o++)t[o]=this._startIndexes[i],n[o]=this._endIndexes[i];return new zo(t,n)}else{let t=0,n=this._indentOccurrences.length;for(let a=0;a<this._indentOccurrences.length;a++){let l=this._indentOccurrences[a];if(l){if(l+t>this._foldingRangesLimit){n=a;break}t+=l}}let i=e.getOptions().tabSize,o=new Uint32Array(this._foldingRangesLimit),s=new Uint32Array(this._foldingRangesLimit);for(let a=this._length-1,l=0;a>=0;a--){let c=this._startIndexes[a],d=e.getLineContent(c),h=yi.computeIndentLevel(d,i);(h<n||h===n&&t++<this._foldingRangesLimit)&&(o[l]=c,s[l]=this._endIndexes[a],l++)}return new zo(o,s)}}};function yD(r,e,t,n=gD){let i=r.getOptions().tabSize,o=new $T(n),s;t&&(s=new RegExp(`(${t.start.source})|(?:${t.end.source})`));let a=[],l=r.getLineCount()+1;a.push({indent:-1,endAbove:l,line:l});for(let c=r.getLineCount();c>0;c--){let d=r.getLineContent(c),h=yi.computeIndentLevel(d,i),p=a[a.length-1];if(h===-1){e&&(p.endAbove=c);continue}let g;if(s&&(g=d.match(s)))if(g[1]){let y=a.length-1;for(;y>0&&a[y].indent!==-2;)y--;if(y>0){a.length=y+1,p=a[y],o.insertFirst(c,p.line,h),p.line=c,p.indent=h,p.endAbove=c;continue}}else{a.push({indent:-2,endAbove:c,line:c});continue}if(p.indent>h){do a.pop(),p=a[a.length-1];while(p.indent>h);let y=p.endAbove-1;y-c>=1&&o.insertFirst(c,y,h)}p.indent===h?p.endAbove=c:a.push({indent:h,endAbove:c,line:c})}return o.toIndentRanges(r)}ke();U();var bD=5e3,SD={},Ry="syntax",Fy=class{constructor(e,t,n,i=bD){this.editorModel=e,this.providers=t,this.limit=i,this.id=Ry;for(let o of t)typeof o.onDidChange=="function"&&(this.disposables||(this.disposables=new R),this.disposables.add(o.onDidChange(n)))}compute(e){return vD(this.providers,this.editorModel,e).then(t=>t?Ay(t,this.limit):null)}dispose(){var e;(e=this.disposables)===null||e===void 0||e.dispose()}};function vD(r,e,t){let n=null,i=r.map((o,s)=>Promise.resolve(o.provideFoldingRanges(e,SD,t)).then(a=>{if(!t.isCancellationRequested&&Array.isArray(a)){Array.isArray(n)||(n=[]);let l=e.getLineCount();for(let c of a)c.start>0&&c.end>c.start&&c.end<=l&&n.push({start:c.start,end:c.end,rank:s,kind:c.kind})}},je));return Promise.all(i).then(o=>n)}var KT=class{constructor(e){this._startIndexes=[],this._endIndexes=[],this._nestingLevels=[],this._nestingLevelCounts=[],this._types=[],this._length=0,this._foldingRangesLimit=e}add(e,t,n,i){if(e>16777215||t>16777215)return;let o=this._length;this._startIndexes[o]=e,this._endIndexes[o]=t,this._nestingLevels[o]=i,this._types[o]=n,this._length++,i<30&&(this._nestingLevelCounts[i]=(this._nestingLevelCounts[i]||0)+1)}toIndentRanges(){if(this._length<=this._foldingRangesLimit){let e=new Uint32Array(this._length),t=new Uint32Array(this._length);for(let n=0;n<this._length;n++)e[n]=this._startIndexes[n],t[n]=this._endIndexes[n];return new zo(e,t,this._types)}else{let e=0,t=this._nestingLevelCounts.length;for(let s=0;s<this._nestingLevelCounts.length;s++){let a=this._nestingLevelCounts[s];if(a){if(a+e>this._foldingRangesLimit){t=s;break}e+=a}}let n=new Uint32Array(this._foldingRangesLimit),i=new Uint32Array(this._foldingRangesLimit),o=[];for(let s=0,a=0;s<this._length;s++){let l=this._nestingLevels[s];(l<t||l===t&&e++<this._foldingRangesLimit)&&(n[a]=this._startIndexes[s],i[a]=this._endIndexes[s],o[a]=this._types[s],a++)}return new zo(n,i,o)}}};function Ay(r,e){let t=r.sort((s,a)=>{let l=s.start-a.start;return l===0&&(l=s.rank-a.rank),l}),n=new KT(e),i,o=[];for(let s of t)if(!i)i=s,n.add(s.start,s.end,s.kind&&s.kind.value,o.length);else if(s.start>i.start)if(s.end<=i.end)o.push(i),i=s,n.add(s.start,s.end,s.kind&&s.kind.value,o.length);else{if(s.start>i.end){do i=o.pop();while(i&&s.start>i.end);i&&o.push(i),i=s}n.add(s.start,s.end,s.kind&&s.kind.value,o.length)}return n.toIndentRanges()}var Ny="init",zy=class{constructor(e,t,n,i){if(this.editorModel=e,this.id=Ny,t.length){let o=s=>({range:{startLineNumber:s.startLineNumber,startColumn:0,endLineNumber:s.endLineNumber,endColumn:e.getLineLength(s.endLineNumber)},options:{description:"folding-initializing-range-provider",stickiness:1}});this.decorationIds=e.deltaDecorations([],t.map(o)),this.timeout=setTimeout(n,i)}}dispose(){this.decorationIds&&(this.editorModel.deltaDecorations(this.decorationIds,[]),this.decorationIds=void 0),typeof this.timeout=="number"&&(clearTimeout(this.timeout),this.timeout=void 0)}compute(e){let t=[];if(this.decorationIds)for(let n of this.decorationIds){let i=this.editorModel.getDecorationRange(n);i&&t.push({start:i.startLineNumber,end:i.endLineNumber,rank:1})}return Promise.resolve(Ay(t,Number.MAX_VALUE))}};ne();Te();Je();Me();Tn();Ut();ne();Me();var Ap=At("folding-expanded",X.chevronDown,u("foldingExpandedIcon","Icon for expanded ranges in the editor glyph margin.")),Np=At("folding-collapsed",X.chevronRight,u("foldingCollapsedIcon","Icon for collapsed ranges in the editor glyph margin.")),Pn=class{constructor(e){this.editor=e,this.autoHideFoldingControls=!0,this.showFoldingHighlights=!0}getDecorationOption(e,t){return t?Pn.HIDDEN_RANGE_DECORATION:e?this.showFoldingHighlights?Pn.COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION:Pn.COLLAPSED_VISUAL_DECORATION:this.autoHideFoldingControls?Pn.EXPANDED_AUTO_HIDE_VISUAL_DECORATION:Pn.EXPANDED_VISUAL_DECORATION}deltaDecorations(e,t){return this.editor.deltaDecorations(e,t)}changeDecorations(e){return this.editor.changeDecorations(e)}};Pn.COLLAPSED_VISUAL_DECORATION=xe.register({description:"folding-collapsed-visual-decoration",stickiness:1,afterContentClassName:"inline-folded",isWholeLine:!0,firstLineDecorationClassName:lt.asClassName(Np)});Pn.COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION=xe.register({description:"folding-collapsed-highlighted-visual-decoration",stickiness:1,afterContentClassName:"inline-folded",className:"folded-background",isWholeLine:!0,firstLineDecorationClassName:lt.asClassName(Np)});Pn.EXPANDED_AUTO_HIDE_VISUAL_DECORATION=xe.register({description:"folding-expanded-auto-hide-visual-decoration",stickiness:1,isWholeLine:!0,firstLineDecorationClassName:lt.asClassName(Ap)});Pn.EXPANDED_VISUAL_DECORATION=xe.register({description:"folding-expanded-visual-decoration",stickiness:1,isWholeLine:!0,firstLineDecorationClassName:"alwaysShowFoldIcons "+lt.asClassName(Ap)});Pn.HIDDEN_RANGE_DECORATION=xe.register({description:"folding-hidden-range-decoration",stickiness:1});var CD=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},_D=function(r,e){return function(t,n){e(t,n,r)}},on=new de("foldingEnabled",!1),Za=class qT extends B{constructor(e,t){super();this.contextKeyService=t,this.localToDispose=this._register(new R),this.editor=e;let n=this.editor.getOptions();this._isEnabled=n.get(37),this._useFoldingProviders=n.get(38)!=="indentation",this._unfoldOnClickAfterEndOfLine=n.get(41),this._restoringViewState=!1,this._currentModelHasFoldedImports=!1,this._foldingImportsByDefault=n.get(40),this.foldingModel=null,this.hiddenRangeModel=null,this.rangeProvider=null,this.foldingRegionPromise=null,this.foldingStateMemento=null,this.foldingModelPromise=null,this.updateScheduler=null,this.cursorChangedScheduler=null,this.mouseDownInfo=null,this.foldingDecorationProvider=new Pn(e),this.foldingDecorationProvider.autoHideFoldingControls=n.get(98)==="mouseover",this.foldingDecorationProvider.showFoldingHighlights=n.get(39),this.foldingEnabled=on.bindTo(this.contextKeyService),this.foldingEnabled.set(this._isEnabled),this._register(this.editor.onDidChangeModel(()=>this.onModelChanged())),this._register(this.editor.onDidChangeConfiguration(i=>{if(i.hasChanged(37)&&(this._isEnabled=this.editor.getOptions().get(37),this.foldingEnabled.set(this._isEnabled),this.onModelChanged()),i.hasChanged(98)||i.hasChanged(39)){let o=this.editor.getOptions();this.foldingDecorationProvider.autoHideFoldingControls=o.get(98)==="mouseover",this.foldingDecorationProvider.showFoldingHighlights=o.get(39),this.onModelContentChanged()}i.hasChanged(38)&&(this._useFoldingProviders=this.editor.getOptions().get(38)!=="indentation",this.onFoldingStrategyChanged()),i.hasChanged(41)&&(this._unfoldOnClickAfterEndOfLine=this.editor.getOptions().get(41)),i.hasChanged(40)&&(this._foldingImportsByDefault=this.editor.getOptions().get(40))})),this.onModelChanged()}static get(e){return e.getContribution(qT.ID)}saveViewState(){let e=this.editor.getModel();if(!e||!this._isEnabled||e.isTooLargeForTokenization())return{};if(this.foldingModel){let t=this.foldingModel.isInitialized?this.foldingModel.getMemento():this.hiddenRangeModel.getMemento(),n=this.rangeProvider?this.rangeProvider.id:void 0;return{collapsedRegions:t,lineCount:e.getLineCount(),provider:n,foldedImports:this._currentModelHasFoldedImports}}}restoreViewState(e){let t=this.editor.getModel();if(!t||!this._isEnabled||t.isTooLargeForTokenization()||!this.hiddenRangeModel||!e||e.lineCount!==t.getLineCount()||(this._currentModelHasFoldedImports=!!e.foldedImports,!e.collapsedRegions))return;(e.provider===Ry||e.provider===Ny)&&(this.foldingStateMemento=e);let n=e.collapsedRegions;if(this.hiddenRangeModel.applyMemento(n)){let i=this.getFoldingModel();i&&i.then(o=>{if(o){this._restoringViewState=!0;try{o.applyMemento(n)}finally{this._restoringViewState=!1}}}).then(void 0,ae)}}onModelChanged(){this.localToDispose.clear();let e=this.editor.getModel();!this._isEnabled||!e||e.isTooLargeForTokenization()||(this._currentModelHasFoldedImports=!1,this.foldingModel=new ky(e,this.foldingDecorationProvider),this.localToDispose.add(this.foldingModel),this.hiddenRangeModel=new My(this.foldingModel),this.localToDispose.add(this.hiddenRangeModel),this.localToDispose.add(this.hiddenRangeModel.onDidChange(t=>this.onHiddenRangesChanges(t))),this.updateScheduler=new hi(200),this.cursorChangedScheduler=new Xe(()=>this.revealCursor(),200),this.localToDispose.add(this.cursorChangedScheduler),this.localToDispose.add(Lm.onDidChange(()=>this.onFoldingStrategyChanged())),this.localToDispose.add(this.editor.onDidChangeModelLanguageConfiguration(()=>this.onFoldingStrategyChanged())),this.localToDispose.add(this.editor.onDidChangeModelContent(()=>this.onModelContentChanged())),this.localToDispose.add(this.editor.onDidChangeCursorPosition(()=>this.onCursorPositionChanged())),this.localToDispose.add(this.editor.onMouseDown(t=>this.onEditorMouseDown(t))),this.localToDispose.add(this.editor.onMouseUp(t=>this.onEditorMouseUp(t))),this.localToDispose.add({dispose:()=>{this.foldingRegionPromise&&(this.foldingRegionPromise.cancel(),this.foldingRegionPromise=null),this.updateScheduler&&this.updateScheduler.cancel(),this.updateScheduler=null,this.foldingModel=null,this.foldingModelPromise=null,this.hiddenRangeModel=null,this.cursorChangedScheduler=null,this.foldingStateMemento=null,this.rangeProvider&&this.rangeProvider.dispose(),this.rangeProvider=null}}),this.onModelContentChanged())}onFoldingStrategyChanged(){this.rangeProvider&&this.rangeProvider.dispose(),this.rangeProvider=null,this.onModelContentChanged()}getRangeProvider(e){if(this.rangeProvider)return this.rangeProvider;if(this.rangeProvider=new Dy(e),this._useFoldingProviders&&this.foldingModel){let t=Lm.ordered(this.foldingModel.textModel);if(t.length===0&&this.foldingStateMemento&&this.foldingStateMemento.collapsedRegions)return this.rangeProvider=new zy(e,this.foldingStateMemento.collapsedRegions,()=>{this.foldingStateMemento=null,this.onFoldingStrategyChanged()},3e4);t.length>0&&(this.rangeProvider=new Fy(e,t,()=>this.onModelContentChanged()))}return this.foldingStateMemento=null,this.rangeProvider}getFoldingModel(){return this.foldingModelPromise}onModelContentChanged(){this.updateScheduler&&(this.foldingRegionPromise&&(this.foldingRegionPromise.cancel(),this.foldingRegionPromise=null),this.foldingModelPromise=this.updateScheduler.trigger(()=>{let e=this.foldingModel;if(!e)return null;let t=this.getRangeProvider(e.textModel),n=this.foldingRegionPromise=Le(i=>t.compute(i));return n.then(i=>{if(i&&n===this.foldingRegionPromise){let o;if(this._foldingImportsByDefault&&!this._currentModelHasFoldedImports){let l=i.setCollapsedAllOfType(Bl.Imports.value,!0);l&&(o=ur.capture(this.editor),this._currentModelHasFoldedImports=l)}let s=this.editor.getSelections(),a=s?s.map(l=>l.startLineNumber):[];e.update(i,a),o&&o.restore(this.editor)}return e})}).then(void 0,e=>(ae(e),null)))}onHiddenRangesChanges(e){if(this.hiddenRangeModel&&e.length&&!this._restoringViewState){let t=this.editor.getSelections();t&&this.hiddenRangeModel.adjustSelections(t)&&this.editor.setSelections(t)}this.editor.setHiddenAreas(e)}onCursorPositionChanged(){this.hiddenRangeModel&&this.hiddenRangeModel.hasRanges()&&this.cursorChangedScheduler.schedule()}revealCursor(){let e=this.getFoldingModel();!e||e.then(t=>{if(t){let n=this.editor.getSelections();if(n&&n.length>0){let i=[];for(let o of n){let s=o.selectionStartLineNumber;this.hiddenRangeModel&&this.hiddenRangeModel.isHidden(s)&&i.push(...t.getAllRegionsAtLine(s,a=>a.isCollapsed&&s>a.startLineNumber))}i.length&&(t.toggleCollapseState(i),this.reveal(n[0].getPosition()))}}}).then(void 0,ae)}onEditorMouseDown(e){if(this.mouseDownInfo=null,!this.hiddenRangeModel||!e.target||!e.target.range||!e.event.leftButton&&!e.event.middleButton)return;let t=e.target.range,n=!1;switch(e.target.type){case 4:let i=e.target.detail,o=e.target.element.offsetLeft;if(i.offsetX-o<5)return;n=!0;break;case 7:{if(this._unfoldOnClickAfterEndOfLine&&this.hiddenRangeModel.hasRanges()&&!e.target.detail.isAfterLines)break;return}case 6:{if(this.hiddenRangeModel.hasRanges()){let a=this.editor.getModel();if(a&&t.startColumn===a.getLineMaxColumn(t.startLineNumber))break}return}default:return}this.mouseDownInfo={lineNumber:t.startLineNumber,iconClicked:n}}onEditorMouseUp(e){let t=this.getFoldingModel();if(!t||!this.mouseDownInfo||!e.target)return;let n=this.mouseDownInfo.lineNumber,i=this.mouseDownInfo.iconClicked,o=e.target.range;if(!(!o||o.startLineNumber!==n)){if(i){if(e.target.type!==4)return}else{let s=this.editor.getModel();if(!s||o.startColumn!==s.getLineMaxColumn(n))return}t.then(s=>{if(s){let a=s.getRegionAtLine(n);if(a&&a.startLineNumber===n){let l=a.isCollapsed;if(i||l){let c=e.event.altKey,d=[];if(c){let h=g=>!g.containedBy(a)&&!a.containedBy(g),p=s.getRegionsInside(null,h);for(let g of p)g.isCollapsed&&d.push(g);d.length===0&&(d=p)}else{let h=e.event.middleButton||e.event.shiftKey;if(h)for(let p of s.getRegionsInside(a))p.isCollapsed===l&&d.push(p);(l||!h||d.length===0)&&d.push(a)}s.toggleCollapseState(d),this.reveal({lineNumber:n,column:1})}}}}).then(void 0,ae)}}reveal(e){this.editor.revealPositionInCenterIfOutsideViewport(e,0)}};Za.ID="editor.contrib.folding";Za=CD([_D(1,Q)],Za);var rn=class extends N{runEditorCommand(e,t,n){let i=Za.get(t);if(!i)return;let o=i.getFoldingModel();if(o)return this.reportTelemetry(e,t),o.then(s=>{if(s){this.invoke(i,s,t,n);let a=t.getSelection();a&&i.reveal(a.getStartPosition())}})}getSelectedLines(e){let t=e.getSelections();return t?t.map(n=>n.startLineNumber):[]}getLineNumbers(e,t){return e&&e.selectionLines?e.selectionLines.map(n=>n+1):this.getSelectedLines(t)}run(e,t){}};function XT(r){if(!zl(r)){if(!fh(r))return!1;let e=r;if(!zl(e.levels)&&!xm(e.levels)||!zl(e.direction)&&!gh(e.direction)||!zl(e.selectionLines)&&(!OS(e.selectionLines)||!e.selectionLines.every(xm)))return!1}return!0}var YT=class extends rn{constructor(){super({id:"editor.unfold",label:u("unfoldAction.label","Unfold"),alias:"Unfold",precondition:on,kbOpts:{kbExpr:x.editorTextFocus,primary:3161,mac:{primary:2649},weight:100},description:{description:"Unfold the content in the editor",args:[{name:"Unfold editor argument",description:`Property-value pairs that can be passed through this argument:
						* 'levels': Number of levels to unfold. If not set, defaults to 1.
						* 'direction': If 'up', unfold given number of levels up otherwise unfolds down.
						* 'selectionLines': The start lines (0-based) of the editor selections to apply the unfold action to. If not set, the active selection(s) will be used.
						`,constraint:XT,schema:{type:"object",properties:{levels:{type:"number",default:1},direction:{type:"string",enum:["up","down"],default:"down"},selectionLines:{type:"array",items:{type:"number"}}}}}]}})}invoke(e,t,n,i){let o=i&&i.levels||1,s=this.getLineNumbers(i,n);i&&i.direction==="up"?Ly(t,!1,o,s):Cs(t,!1,o,s)}},ZT=class extends rn{constructor(){super({id:"editor.unfoldRecursively",label:u("unFoldRecursivelyAction.label","Unfold Recursively"),alias:"Unfold Recursively",precondition:on,kbOpts:{kbExpr:x.editorTextFocus,primary:$e(2089,2137),weight:100}})}invoke(e,t,n,i){Cs(t,!1,Number.MAX_VALUE,this.getSelectedLines(n))}},JT=class extends rn{constructor(){super({id:"editor.fold",label:u("foldAction.label","Fold"),alias:"Fold",precondition:on,kbOpts:{kbExpr:x.editorTextFocus,primary:3159,mac:{primary:2647},weight:100},description:{description:"Fold the content in the editor",args:[{name:"Fold editor argument",description:`Property-value pairs that can be passed through this argument:
							* 'levels': Number of levels to fold.
							* 'direction': If 'up', folds given number of levels up otherwise folds down.
							* 'selectionLines': The start lines (0-based) of the editor selections to apply the fold action to. If not set, the active selection(s) will be used.
							If no levels or direction is set, folds the region at the locations or if already collapsed, the first uncollapsed parent instead.
						`,constraint:XT,schema:{type:"object",properties:{levels:{type:"number"},direction:{type:"string",enum:["up","down"]},selectionLines:{type:"array",items:{type:"number"}}}}}]}})}invoke(e,t,n,i){let o=this.getLineNumbers(i,n),s=i&&i.levels,a=i&&i.direction;typeof s!="number"&&typeof a!="string"?BT(t,!0,o):a==="up"?Ly(t,!0,s||1,o):Cs(t,!0,s||1,o)}},QT=class extends rn{constructor(){super({id:"editor.toggleFold",label:u("toggleFoldAction.label","Toggle Fold"),alias:"Toggle Fold",precondition:on,kbOpts:{kbExpr:x.editorTextFocus,primary:$e(2089,2090),weight:100}})}invoke(e,t,n){let i=this.getSelectedLines(n);HT(t,1,i)}},eE=class extends rn{constructor(){super({id:"editor.foldRecursively",label:u("foldRecursivelyAction.label","Fold Recursively"),alias:"Fold Recursively",precondition:on,kbOpts:{kbExpr:x.editorTextFocus,primary:$e(2089,2135),weight:100}})}invoke(e,t,n){let i=this.getSelectedLines(n);Cs(t,!0,Number.MAX_VALUE,i)}},tE=class extends rn{constructor(){super({id:"editor.foldAllBlockComments",label:u("foldAllBlockComments.label","Fold All Block Comments"),alias:"Fold All Block Comments",precondition:on,kbOpts:{kbExpr:x.editorTextFocus,primary:$e(2089,2133),weight:100}})}invoke(e,t,n){if(t.regions.hasTypes())Fp(t,Bl.Comment.value,!0);else{let i=n.getModel();if(!i)return;let o=Ge.getComments(i.getLanguageId());if(o&&o.blockCommentStartToken){let s=new RegExp("^\\s*"+uo(o.blockCommentStartToken));Rp(t,s,!0)}}}},nE=class extends rn{constructor(){super({id:"editor.foldAllMarkerRegions",label:u("foldAllMarkerRegions.label","Fold All Regions"),alias:"Fold All Regions",precondition:on,kbOpts:{kbExpr:x.editorTextFocus,primary:$e(2089,2077),weight:100}})}invoke(e,t,n){if(t.regions.hasTypes())Fp(t,Bl.Region.value,!0);else{let i=n.getModel();if(!i)return;let o=Ge.getFoldingRules(i.getLanguageId());if(o&&o.markers&&o.markers.start){let s=new RegExp(o.markers.start);Rp(t,s,!0)}}}},iE=class extends rn{constructor(){super({id:"editor.unfoldAllMarkerRegions",label:u("unfoldAllMarkerRegions.label","Unfold All Regions"),alias:"Unfold All Regions",precondition:on,kbOpts:{kbExpr:x.editorTextFocus,primary:$e(2089,2078),weight:100}})}invoke(e,t,n){if(t.regions.hasTypes())Fp(t,Bl.Region.value,!1);else{let i=n.getModel();if(!i)return;let o=Ge.getFoldingRules(i.getLanguageId());if(o&&o.markers&&o.markers.start){let s=new RegExp(o.markers.start);Rp(t,s,!1)}}}},oE=class extends rn{constructor(){super({id:"editor.foldAllExcept",label:u("foldAllExcept.label","Fold All Regions Except Selected"),alias:"Fold All Regions Except Selected",precondition:on,kbOpts:{kbExpr:x.editorTextFocus,primary:$e(2089,2131),weight:100}})}invoke(e,t,n){let i=this.getSelectedLines(n);Py(t,!0,i)}},rE=class extends rn{constructor(){super({id:"editor.unfoldAllExcept",label:u("unfoldAllExcept.label","Unfold All Regions Except Selected"),alias:"Unfold All Regions Except Selected",precondition:on,kbOpts:{kbExpr:x.editorTextFocus,primary:$e(2089,2129),weight:100}})}invoke(e,t,n){let i=this.getSelectedLines(n);Py(t,!1,i)}},sE=class extends rn{constructor(){super({id:"editor.foldAll",label:u("foldAllAction.label","Fold All"),alias:"Fold All",precondition:on,kbOpts:{kbExpr:x.editorTextFocus,primary:$e(2089,2069),weight:100}})}invoke(e,t,n){Cs(t,!0)}},aE=class extends rn{constructor(){super({id:"editor.unfoldAll",label:u("unfoldAllAction.label","Unfold All"),alias:"Unfold All",precondition:on,kbOpts:{kbExpr:x.editorTextFocus,primary:$e(2089,2088),weight:100}})}invoke(e,t,n){Cs(t,!1)}},Ir=class extends rn{getFoldingLevel(){return parseInt(this.id.substr(Ir.ID_PREFIX.length))}invoke(e,t,n){WT(t,this.getFoldingLevel(),!0,this.getSelectedLines(n))}};Ir.ID_PREFIX="editor.foldLevel";Ir.ID=r=>Ir.ID_PREFIX+r;var lE=class extends rn{constructor(){super({id:"editor.gotoParentFold",label:u("gotoParentFold.label","Go to Parent Fold"),alias:"Go to Parent Fold",precondition:on,kbOpts:{kbExpr:x.editorTextFocus,weight:100}})}invoke(e,t,n){let i=this.getSelectedLines(n);if(i.length>0){let o=VT(i[0],t);o!==null&&n.setSelection({startLineNumber:o,startColumn:1,endLineNumber:o,endColumn:1})}}},dE=class extends rn{constructor(){super({id:"editor.gotoPreviousFold",label:u("gotoPreviousFold.label","Go to Previous Folding Range"),alias:"Go to Previous Folding Range",precondition:on,kbOpts:{kbExpr:x.editorTextFocus,weight:100}})}invoke(e,t,n){let i=this.getSelectedLines(n);if(i.length>0){let o=GT(i[0],t);o!==null&&n.setSelection({startLineNumber:o,startColumn:1,endLineNumber:o,endColumn:1})}}},cE=class extends rn{constructor(){super({id:"editor.gotoNextFold",label:u("gotoNextFold.label","Go to Next Folding Range"),alias:"Go to Next Folding Range",precondition:on,kbOpts:{kbExpr:x.editorTextFocus,weight:100}})}invoke(e,t,n){let i=this.getSelectedLines(n);if(i.length>0){let o=jT(i[0],t);o!==null&&n.setSelection({startLineNumber:o,startColumn:1,endLineNumber:o,endColumn:1})}}};J(Za.ID,Za);I(YT);I(ZT);I(JT);I(eE);I(sE);I(aE);I(tE);I(nE);I(iE);I(oE);I(rE);I(QT);I(lE);I(dE);I(cE);for(let r=1;r<=7;r++)Nh(new Ir({id:Ir.ID(r),label:u("foldLevelAction.label","Fold Level {0}",r),alias:`Fold Level ${r}`,precondition:on,kbOpts:{kbExpr:x.editorTextFocus,primary:$e(2089,2048|21+r),weight:100}}));var wD=Y("editor.foldBackground",{light:zn(jm,.3),dark:zn(jm,.3),hc:null},u("foldBackgroundBackground","Background color behind folded ranges. The color must not be opaque so as not to hide underlying decorations."),!0),TD=Y("editorGutter.foldingControlForeground",{dark:Hh,light:Hh,hc:Hh},u("editorGutter.foldingControlForeground","Color of the folding control in the editor gutter."));ye((r,e)=>{let t=r.getColor(wD);t&&e.addRule(`.monaco-editor .folded-background { background-color: ${t}; }`);let n=r.getColor(TD);n&&e.addRule(`
		.monaco-editor .cldr${lt.asCSSSelector(Ap)},
		.monaco-editor .cldr${lt.asCSSSelector(Np)} {
			color: ${n} !important;
		}
		`)});ce();HL();ne();var hE=class extends N{constructor(){super({id:"editor.action.fontZoomIn",label:u("EditorFontZoomIn.label","Editor Font Zoom In"),alias:"Editor Font Zoom In",precondition:void 0})}run(e,t){ra.setZoomLevel(ra.getZoomLevel()+1)}},uE=class extends N{constructor(){super({id:"editor.action.fontZoomOut",label:u("EditorFontZoomOut.label","Editor Font Zoom Out"),alias:"Editor Font Zoom Out",precondition:void 0})}run(e,t){ra.setZoomLevel(ra.getZoomLevel()-1)}},pE=class extends N{constructor(){super({id:"editor.action.fontZoomReset",label:u("EditorFontZoomReset.label","Editor Font Zoom Reset"),alias:"Editor Font Zoom Reset",precondition:void 0})}run(e,t){ra.setZoomLevel(0)}};I(hE);I(uE);I(pE);var qoe=Vr(bE());at();Wt();Ht();Qo();qr();mt();at();ke();AL();na();te();Pe();_m();var ws=class{remove(){this.parent&&this.parent.children.delete(this.id)}static findId(e,t){let n;typeof e=="string"?n=`${t.id}/${e}`:(n=`${t.id}/${e.name}`,t.children.get(n)!==void 0&&(n=`${t.id}/${e.name}_${e.range.startLineNumber}_${e.range.startColumn}`));let i=n;for(let o=0;t.children.get(i)!==void 0;o++)i=`${n}_${o}`;return i}static empty(e){return e.children.size===0}},Hy=class extends ws{constructor(e,t,n){super();this.id=e,this.parent=t,this.symbol=n,this.children=new Map}},SE=class extends ws{constructor(e,t,n,i){super();this.id=e,this.parent=t,this.label=n,this.order=i,this.children=new Map}},Lt=class extends ws{constructor(e){super();this.uri=e,this.id="root",this.parent=void 0,this._groups=new Map,this.children=new Map,this.id="root",this.parent=void 0}static create(e,t){let n=this._keys.for(e,!0),i=Lt._requests.get(n);if(!i){let o=new Zt;i={promiseCnt:0,source:o,promise:Lt._create(e,o.token),model:void 0},Lt._requests.set(n,i);let s=Date.now();i.promise.then(()=>{this._requestDurations.update(e,Date.now()-s)})}return i.model?Promise.resolve(i.model):(i.promiseCnt+=1,t.onCancellationRequested(()=>{--i.promiseCnt===0&&(i.source.cancel(),Lt._requests.delete(n))}),new Promise((o,s)=>{i.promise.then(a=>{i.model=a,o(a)},a=>{Lt._requests.delete(n),s(a)})}))}static _create(e,t){let n=new Zt(t),i=new Lt(e.uri),o=pi.ordered(e),s=o.map((l,c)=>{var d;let h=ws.findId(`provider_${c}`,i),p=new SE(h,i,(d=l.displayName)!==null&&d!==void 0?d:"Unknown Outline Provider",c);return Promise.resolve(l.provideDocumentSymbols(e,n.token)).then(g=>{for(let y of g||[])Lt._makeOutlineElement(y,p);return p},g=>(je(g),p)).then(g=>{ws.empty(g)?g.remove():i._groups.set(h,g)})}),a=pi.onDidChange(()=>{let l=pi.ordered(e);ua(l,o)||n.cancel()});return Promise.all(s).then(()=>n.token.isCancellationRequested&&!t.isCancellationRequested?Lt._create(e,t):i._compact()).finally(()=>{a.dispose()})}static _makeOutlineElement(e,t){let n=ws.findId(e,t),i=new Hy(n,t,e);if(e.children)for(let o of e.children)Lt._makeOutlineElement(o,i);t.children.set(i.id,i)}_compact(){let e=0;for(let[t,n]of this._groups)n.children.size===0?this._groups.delete(t):e+=1;if(e!==1)this.children=this._groups;else{let t=lm.first(this._groups.values());for(let[,n]of t.children)n.parent=this,this.children.set(n.id,n)}return this}getTopLevelSymbols(){let e=[];for(let t of this.children.values())t instanceof Hy?e.push(t.symbol):e.push(...lm.map(t.children.values(),n=>n.symbol));return e.sort((t,n)=>C.compareRangesUsingStarts(t.range,n.range))}asListOfDocumentSymbols(){let e=this.getTopLevelSymbols(),t=[];return Lt._flattenDocumentSymbols(t,e,""),t.sort((n,i)=>C.compareRangesUsingStarts(n.range,i.range))}static _flattenDocumentSymbols(e,t,n){for(let i of t)e.push({kind:i.kind,tags:i.tags,name:i.name,detail:i.detail,containerName:i.containerName||n,range:i.range,selectionRange:i.selectionRange,children:void 0}),i.children&&Lt._flattenDocumentSymbols(e,i.children,i.name)}};Lt._requestDurations=new $r(pi,350);Lt._requests=new Ri(9,.75);Lt._keys=new class{constructor(){this._counter=1,this._data=new WeakMap}for(r,e){return`${r.id}/${e?r.getVersionId():""}/${this._hash(pi.all(r))}`}_hash(r){let e="";for(let t of r){let n=this._data.get(t);typeof n=="undefined"&&(n=this._counter++,this._data.set(t,n)),e+=n}return e}};bt();var xE=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})};function vE(r,e,t){return xE(this,void 0,void 0,function*(){let n=yield Lt.create(r,t);return e?n.asListOfDocumentSymbols():n.getTopLevelSymbols()})}Ie.registerCommand("_executeDocumentSymbolProvider",function(r,...e){return xE(this,void 0,void 0,function*(){let[t]=e;Ue(Ce.isUri(t));let n=r.get(Gt).getModel(t);if(n)return vE(n,!1,ue.None);let i=yield r.get(In).createModelReference(t);try{return yield vE(i.object.textEditorModel,!1,ue.None)}finally{i.dispose()}})});U();Ze();ce();fo();te();wt();Be();Ut();Oi();Qo();function sn(r,e){let t=0;for(let n=0;n<r.length;n++)r.charAt(n)==="	"?t+=e:t++;return t}function Ts(r,e,t){r=r<0?0:r;let n="";if(!t){let i=Math.floor(r/e);r=r%e;for(let o=0;o<i;o++)n+="	"}for(let i=0;i<r;i++)n+=" ";return n}ne();function _E(r,e,t,n){if(r.getLineCount()===1&&r.getLineMaxColumn(1)===1)return[];let i=Ge.getIndentationRules(r.getLanguageId());if(!i)return[];for(t=Math.min(t,r.getLineCount());e<=t&&i.unIndentedLinePattern;){let v=r.getLineContent(e);if(!i.unIndentedLinePattern.test(v))break;e++}if(e>t-1)return[];let{tabSize:o,indentSize:s,insertSpaces:a}=r.getOptions(),l=(v,w)=>(w=w||1,hr.shiftIndent(v,v.length+w,o,s,a)),c=(v,w)=>(w=w||1,hr.unshiftIndent(v,v.length+w,o,s,a)),d=[],h,p=r.getLineContent(e),g=p;if(n!=null){h=n;let v=st(p);g=h+p.substring(v.length),i.decreaseIndentPattern&&i.decreaseIndentPattern.test(g)&&(h=c(h),g=h+p.substring(v.length)),p!==g&&d.push(He.replaceMove(new Z(e,1,e,v.length+1),yi.normalizeIndentation(h,s,a)))}else h=st(p);let y=h;i.increaseIndentPattern&&i.increaseIndentPattern.test(g)?(y=l(y),h=l(h)):i.indentNextLinePattern&&i.indentNextLinePattern.test(g)&&(y=l(y)),e++;for(let v=e;v<=t;v++){let w=r.getLineContent(v),F=st(w),M=y+w.substring(F.length);i.decreaseIndentPattern&&i.decreaseIndentPattern.test(M)&&(y=c(y),h=c(h)),F!==y&&d.push(He.replaceMove(new Z(v,1,v,F.length+1),yi.normalizeIndentation(y,s,a))),!(i.unIndentedLinePattern&&i.unIndentedLinePattern.test(w))&&(i.increaseIndentPattern&&i.increaseIndentPattern.test(M)?(h=l(h),y=h):i.indentNextLinePattern&&i.indentNextLinePattern.test(M)?y=l(y):y=h)}return d}var Sc=class extends N{constructor(){super({id:Sc.ID,label:u("indentationToSpaces","Convert Indentation to Spaces"),alias:"Convert Indentation to Spaces",precondition:x.writable})}run(e,t){let n=t.getModel();if(!n)return;let i=n.getOptions(),o=t.getSelection();if(!o)return;let s=new kE(o,i.tabSize);t.pushUndoStop(),t.executeCommands(this.id,[s]),t.pushUndoStop(),n.updateOptions({insertSpaces:!0})}};Sc.ID="editor.action.indentationToSpaces";var vc=class extends N{constructor(){super({id:vc.ID,label:u("indentationToTabs","Convert Indentation to Tabs"),alias:"Convert Indentation to Tabs",precondition:x.writable})}run(e,t){let n=t.getModel();if(!n)return;let i=n.getOptions(),o=t.getSelection();if(!o)return;let s=new LE(o,i.tabSize);t.pushUndoStop(),t.executeCommands(this.id,[s]),t.pushUndoStop(),n.updateOptions({insertSpaces:!1})}};vc.ID="editor.action.indentationToTabs";var By=class extends N{constructor(e,t){super(t);this.insertSpaces=e}run(e,t){let n=e.get(ei),i=e.get(Gt),o=t.getModel();if(!o)return;let s=i.getCreationOptions(o.getLanguageId(),o.uri,o.isForSimpleWidget),a=[1,2,3,4,5,6,7,8].map(c=>({id:c.toString(),label:c.toString(),description:c===s.tabSize?u("configuredTabSize","Configured Tab Size"):void 0})),l=Math.min(o.getOptions().tabSize-1,7);setTimeout(()=>{n.pick(a,{placeHolder:u({key:"selectTabWidth",comment:["Tab corresponds to the tab key"]},"Select Tab Size for Current File"),activeItem:a[l]}).then(c=>{c&&o&&!o.isDisposed()&&o.updateOptions({tabSize:parseInt(c.label,10),insertSpaces:this.insertSpaces})})},50)}},xc=class extends By{constructor(){super(!1,{id:xc.ID,label:u("indentUsingTabs","Indent Using Tabs"),alias:"Indent Using Tabs",precondition:void 0})}};xc.ID="editor.action.indentUsingTabs";var Cc=class extends By{constructor(){super(!0,{id:Cc.ID,label:u("indentUsingSpaces","Indent Using Spaces"),alias:"Indent Using Spaces",precondition:void 0})}};Cc.ID="editor.action.indentUsingSpaces";var _c=class extends N{constructor(){super({id:_c.ID,label:u("detectIndentation","Detect Indentation from Content"),alias:"Detect Indentation from Content",precondition:void 0})}run(e,t){let n=e.get(Gt),i=t.getModel();if(!i)return;let o=n.getCreationOptions(i.getLanguageId(),i.uri,i.isForSimpleWidget);i.detectIndentation(o.insertSpaces,o.tabSize)}};_c.ID="editor.action.detectIndentation";var wE=class extends N{constructor(){super({id:"editor.action.reindentlines",label:u("editor.reindentlines","Reindent Lines"),alias:"Reindent Lines",precondition:x.writable})}run(e,t){let n=t.getModel();if(!n)return;let i=_E(n,1,n.getLineCount());i.length>0&&(t.pushUndoStop(),t.executeEdits(this.id,i),t.pushUndoStop())}},TE=class extends N{constructor(){super({id:"editor.action.reindentselectedlines",label:u("editor.reindentselectedlines","Reindent Selected Lines"),alias:"Reindent Selected Lines",precondition:x.writable})}run(e,t){let n=t.getModel();if(!n)return;let i=t.getSelections();if(i===null)return;let o=[];for(let s of i){let a=s.startLineNumber,l=s.endLineNumber;if(a!==l&&s.endColumn===1&&l--,a===1){if(a===l)continue}else a--;let c=_E(n,a,l);o.push(...c)}o.length>0&&(t.pushUndoStop(),t.executeEdits(this.id,o),t.pushUndoStop())}},EE=class{constructor(e,t){this._initialSelection=t,this._edits=[],this._selectionId=null;for(let n of e)n.range&&typeof n.text=="string"&&this._edits.push(n)}getEditOperations(e,t){for(let i of this._edits)t.addEditOperation(C.lift(i.range),i.text);let n=!1;Array.isArray(this._edits)&&this._edits.length===1&&this._initialSelection.isEmpty()&&(this._edits[0].range.startColumn===this._initialSelection.endColumn&&this._edits[0].range.startLineNumber===this._initialSelection.endLineNumber?(n=!0,this._selectionId=t.trackSelection(this._initialSelection,!0)):this._edits[0].range.endColumn===this._initialSelection.startColumn&&this._edits[0].range.endLineNumber===this._initialSelection.startLineNumber&&(n=!0,this._selectionId=t.trackSelection(this._initialSelection,!1))),n||(this._selectionId=t.trackSelection(this._initialSelection))}computeCursorState(e,t){return t.getTrackedSelection(this._selectionId)}},zp=class{constructor(e){this.callOnDispose=new R,this.callOnModel=new R,this.editor=e,this.callOnDispose.add(e.onDidChangeConfiguration(()=>this.update())),this.callOnDispose.add(e.onDidChangeModel(()=>this.update())),this.callOnDispose.add(e.onDidChangeModelLanguage(()=>this.update()))}update(){this.callOnModel.clear(),!(this.editor.getOption(9)<4||this.editor.getOption(47))&&(!this.editor.hasModel()||this.callOnModel.add(this.editor.onDidPaste(({range:e})=>{this.trigger(e)})))}trigger(e){let t=this.editor.getSelections();if(t===null||t.length>1)return;let n=this.editor.getModel();if(!n||!n.isCheapToTokenize(e.getStartPosition().lineNumber))return;let i=this.editor.getOption(9),{tabSize:o,indentSize:s,insertSpaces:a}=n.getOptions(),l=[],c={shiftIndent:g=>hr.shiftIndent(g,g.length+1,o,s,a),unshiftIndent:g=>hr.unshiftIndent(g,g.length+1,o,s,a)},d=e.startLineNumber;for(;d<=e.endLineNumber;){if(this.shouldIgnoreLine(n,d)){d++;continue}break}if(d>e.endLineNumber)return;let h=n.getLineContent(d);if(!/\S/.test(h.substring(0,e.startColumn-1))){let g=Ge.getGoodIndentForLine(i,n,n.getLanguageId(),d,c);if(g!==null){let y=st(h),v=sn(g,o),w=sn(y,o);if(v!==w){let F=Ts(v,o,a);l.push({range:new C(d,1,d,y.length+1),text:F}),h=F+h.substr(y.length)}else{let F=Ge.getIndentMetadata(n,d);if(F===0||F===8)return}}}let p=d;for(;d<e.endLineNumber;){if(!/\S/.test(n.getLineContent(d+1))){d++;continue}break}if(d!==e.endLineNumber){let g={getLineTokens:v=>n.getLineTokens(v),getLanguageId:()=>n.getLanguageId(),getLanguageIdAtPosition:(v,w)=>n.getLanguageIdAtPosition(v,w),getLineContent:v=>v===p?h:n.getLineContent(v)},y=Ge.getGoodIndentForLine(i,g,n.getLanguageId(),d+1,c);if(y!==null){let v=sn(y,o),w=sn(st(n.getLineContent(d+1)),o);if(v!==w){let F=v-w;for(let M=d+1;M<=e.endLineNumber;M++){let z=n.getLineContent(M),V=st(z),ze=sn(V,o)+F,_e=Ts(ze,o,a);_e!==V&&l.push({range:new C(M,1,M,V.length+1),text:_e})}}}}if(l.length>0){this.editor.pushUndoStop();let g=new EE(l,this.editor.getSelection());this.editor.executeCommand("autoIndentOnPaste",g),this.editor.pushUndoStop()}}shouldIgnoreLine(e,t){e.forceTokenization(t);let n=e.getLineFirstNonWhitespaceColumn(t);if(n===0)return!0;let i=e.getLineTokens(t);if(i.getCount()>0){let o=i.findTokenIndexAtOffset(n);if(o>=0&&i.getStandardTokenType(o)===1)return!0}return!1}dispose(){this.callOnDispose.dispose(),this.callOnModel.dispose()}};zp.ID="editor.contrib.autoIndentOnPaste";function IE(r,e,t,n){if(r.getLineCount()===1&&r.getLineMaxColumn(1)===1)return;let i="";for(let s=0;s<t;s++)i+=" ";let o=new RegExp(i,"gi");for(let s=1,a=r.getLineCount();s<=a;s++){let l=r.getLineFirstNonWhitespaceColumn(s);if(l===0&&(l=r.getLineMaxColumn(s)),l===1)continue;let c=new C(s,1,s,l),d=r.getValueInRange(c),h=n?d.replace(/\t/ig,i):d.replace(o,"	");e.addEditOperation(c,h)}}var kE=class{constructor(e,t){this.selection=e,this.tabSize=t,this.selectionId=null}getEditOperations(e,t){this.selectionId=t.trackSelection(this.selection),IE(e,t,this.tabSize,!0)}computeCursorState(e,t){return t.getTrackedSelection(this.selectionId)}},LE=class{constructor(e,t){this.selection=e,this.tabSize=t,this.selectionId=null}getEditOperations(e,t){this.selectionId=t.trackSelection(this.selection),IE(e,t,this.tabSize,!1)}computeCursorState(e,t){return t.getTrackedSelection(this.selectionId)}};J(zp.ID,zp);I(Sc);I(vc);I(xc);I(Cc);I(_c);I(wE);I(TE);Oe();at();ke();Cm();U();na();Wt();Ht();ce();Bt();Ys();rt();te();Pe();_m();qr();bt();Je();Me();var ED=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},ID=function(r,e){return function(t,n){e(t,n,r)}},Op=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},kD=1500,Wy=class{constructor(){this._data=new uh}push(e,t){let n=this._data.get(e.uri);n===void 0?this._data.set(e.uri,new Set([t])):n.add(t)}pop(e,t){let n=this._data.get(e.uri);n&&(n.delete(t),n.size===0&&this._data.delete(e.uri))}has(e,t){var n;return Boolean((n=this._data.get(e.uri))===null||n===void 0?void 0:n.has(t))}};function ME(r,e,t,n){return Op(this,void 0,void 0,function*(){let i=[],s=da.ordered(r).reverse().map(a=>e.map(l=>Op(this,void 0,void 0,function*(){try{t.push(r,a);let c=yield a.provideInlayHints(r,l,n);c!=null&&c.length&&i.push(c.filter(d=>l.containsPosition(d.position)))}catch(c){je(c)}finally{t.pop(r,a)}})));return yield Promise.all(s.flat()),i.flat().sort((a,l)=>q.compare(a.position,l.position))})}var wc=class{constructor(){this._entries=new Ri(50)}get(e){let t=wc._key(e);return this._entries.get(t)}set(e,t){let n=wc._key(e);this._entries.set(n,t)}static _key(e){return`${e.uri.toString()}/${e.getVersionId()}`}},Ja=class DE{constructor(e,t){this._editor=e,this._codeEditorService=t,this._decorationOwnerId=++DE._decorationOwnerIdPool,this._disposables=new R,this._sessionDisposables=new R,this._getInlayHintsDelays=new $r(da,25,500),this._cache=new wc,this._decorations=new Map,this._disposables.add(da.onDidChange(()=>this._update())),this._disposables.add(e.onDidChangeModel(()=>this._update())),this._disposables.add(e.onDidChangeModelLanguage(()=>this._update())),this._disposables.add(e.onDidChangeConfiguration(n=>{n.hasChanged(125)&&this._update()})),this._update()}dispose(){this._sessionDisposables.dispose(),this._removeAllDecorations(),this._disposables.dispose()}_update(){if(this._sessionDisposables.clear(),this._removeAllDecorations(),!this._editor.getOption(125).enabled)return;let e=this._editor.getModel();if(!e||!da.has(e))return;let t=this._cache.get(e);t&&this._updateHintsDecorators([e.getFullModelRange()],t);let n=new Wy,i=new Xe(()=>Op(this,void 0,void 0,function*(){let s=Date.now(),a=new Zt;this._sessionDisposables.add(We(()=>a.dispose(!0)));let l=this._getHintsRanges(),c=yield ME(e,l,n,a.token);i.delay=this._getInlayHintsDelays.update(e,Date.now()-s),!a.token.isCancellationRequested&&(this._updateHintsDecorators(l,c),this._cache.set(e,Array.from(this._decorations.values()).map(d=>d.hint)))}),this._getInlayHintsDelays.get(e));this._sessionDisposables.add(i),this._sessionDisposables.add(this._editor.onDidChangeModelContent(()=>i.schedule())),this._disposables.add(this._editor.onDidScrollChange(()=>i.schedule())),i.schedule();let o=new R;this._sessionDisposables.add(o);for(let s of da.all(e))typeof s.onDidChangeInlayHints=="function"&&o.add(s.onDidChangeInlayHints(()=>{n.has(e,s)||i.schedule()}))}_getHintsRanges(){let t=this._editor.getModel(),n=this._editor.getVisibleRangesPlusViewportAboveBelow(),i=[];for(let o of n.sort(C.compareRangesUsingStarts)){let s=t.validateRange(new C(o.startLineNumber-30,o.startColumn,o.endLineNumber+30,o.endColumn));i.length===0||!C.areIntersectingOrTouching(i[i.length-1],s)?i.push(s):i[i.length-1]=C.plusRange(i[i.length-1],s)}return i}_updateHintsDecorators(e,t){let{fontSize:n,fontFamily:i}=this._getLayoutInfo(),o=this._editor.getModel(),s=[],a=[],l="--code-editorInlayHintsFontFamily";this._editor.getContainerDomNode().style.setProperty(l,i);for(let h of t){let{text:p,position:g,whitespaceBefore:y,whitespaceAfter:v}=h,w=y?n/3|0:0,F=v?n/3|0:0,M={contentText:LD(p),fontSize:`${n}px`,margin:`0px ${F}px 0px ${w}px`,fontFamily:`var(${l}), ${Yo.fontFamily}`,padding:`1px ${Math.max(1,n/4)|0}px`,borderRadius:`${n/4|0}px`,verticalAlign:"middle",backgroundColor:nt(Yv),color:nt(Xv)};h.kind===Tm.Parameter?(M.backgroundColor=nt(ex),M.color=nt(Qv)):h.kind===Tm.Type&&(M.backgroundColor=nt(Jv),M.color=nt(Zv));let z={beforeInjectedText:Object.assign(Object.assign({},M),{affectsLetterSpacing:!0})},V=C.fromPositions(g),G=o.getWordAtPosition(g),ze=!1;G&&(G.endColumn===g.column?(z.afterInjectedText=z.beforeInjectedText,z.beforeInjectedText=void 0,ze=!0,V=PE(G,g.lineNumber)):G.startColumn===g.column&&(ze=!0,V=PE(G,g.lineNumber)));let _e="inlayHints-"+sa(z).toString(16);if(this._codeEditorService.registerDecorationType("inlay-hints-controller",_e,z,void 0,this._editor),s.push(_e),a.push({range:V,options:Object.assign(Object.assign({},this._codeEditorService.resolveDecorationOptions(_e,!0)),{showIfCollapsed:!ze,stickiness:0})})>kD)break}let c=[];for(let h of e)for(let{id:p}of o.getDecorationsInRange(h,this._decorationOwnerId,!0)){let g=this._decorations.get(p);g&&(c.push(p),this._codeEditorService.removeDecorationType(g.decorationTypeId),this._decorations.delete(p))}let d=o.deltaDecorations(c,a,this._decorationOwnerId);for(let h=0;h<d.length;h++)this._decorations.set(d[h],{hint:t[h],decorationTypeId:s[h]})}_getLayoutInfo(){let e=this._editor.getOption(125),t=this._editor.getOption(45),n=e.fontSize;(!n||n<5||n>t)&&(n=t*.9|0);let i=e.fontFamily||this._editor.getOption(42);return{fontSize:n,fontFamily:i}}_removeAllDecorations(){this._editor.deltaDecorations(Array.from(this._decorations.keys()),[]);for(let e of this._decorations.values())this._codeEditorService.removeDecorationType(e.decorationTypeId);this._decorations.clear()}};Ja.ID="editor.contrib.InlayHints";Ja._decorationOwnerIdPool=0;Ja=ED([ID(1,Ee)],Ja);function PE(r,e){return new C(e,r.startColumn,e,r.endColumn)}function LD(r){let e="\xA0";return r.replace(/[ \t]/g,e)}J(Ja.ID,Ja);Ie.registerCommand("_executeInlayHintProvider",(r,...e)=>Op(void 0,void 0,void 0,function*(){let[t,n]=e;Ue(Ce.isUri(t)),Ue(C.isIRange(n));let i=yield r.get(In).createModelReference(t);try{return yield ME(i.object.textEditorModel,[C.lift(n)],new Wy,ue.None)}finally{i.dispose()}}));var ire=Vr(NE());ho();ce();Ze();fo();te();var jy=class{constructor(e,t){this._selection=e,this._cursors=t,this._selectionId=null}getEditOperations(e,t){let n=DD(e,this._cursors);for(let i=0,o=n.length;i<o;i++){let s=n[i];t.addEditOperation(s.range,s.text)}this._selectionId=t.trackSelection(this._selection)}computeCursorState(e,t){return t.getTrackedSelection(this._selectionId)}};function DD(r,e){e.sort((s,a)=>s.lineNumber===a.lineNumber?s.column-a.column:s.lineNumber-a.lineNumber);for(let s=e.length-2;s>=0;s--)e[s].lineNumber===e[s+1].lineNumber&&e.splice(s,1);let t=[],n=0,i=0,o=e.length;for(let s=1,a=r.getLineCount();s<=a;s++){let l=r.getLineContent(s),c=l.length+1,d=0;if(i<o&&e[i].lineNumber===s&&(d=e[i].column,i++,d===c)||l.length===0)continue;let h=ta(l),p=0;if(h===-1)p=1;else if(h!==l.length-1)p=h+2;else continue;p=Math.max(d,p),t[n++]=He.delete(new C(s,p,s,c))}return t}fo();rt();te();wt();Be();te();wt();var Hp=class{constructor(e,t,n){this._selection=e,this._isCopyingDown=t,this._noop=n||!1,this._selectionDirection=0,this._selectionId=null,this._startLineNumberDelta=0,this._endLineNumberDelta=0}getEditOperations(e,t){let n=this._selection;this._startLineNumberDelta=0,this._endLineNumberDelta=0,n.startLineNumber<n.endLineNumber&&n.endColumn===1&&(this._endLineNumberDelta=1,n=n.setEndPosition(n.endLineNumber-1,e.getLineMaxColumn(n.endLineNumber-1)));let i=[];for(let s=n.startLineNumber;s<=n.endLineNumber;s++)i.push(e.getLineContent(s));let o=i.join(`
`);o===""&&this._isCopyingDown&&(this._startLineNumberDelta++,this._endLineNumberDelta++),this._noop?t.addEditOperation(new C(n.endLineNumber,e.getLineMaxColumn(n.endLineNumber),n.endLineNumber+1,1),n.endLineNumber===e.getLineCount()?"":`
`):this._isCopyingDown?t.addEditOperation(new C(n.startLineNumber,1,n.startLineNumber,1),o+`
`):t.addEditOperation(new C(n.endLineNumber,e.getLineMaxColumn(n.endLineNumber),n.endLineNumber,e.getLineMaxColumn(n.endLineNumber)),`
`+o),this._selectionId=t.trackSelection(n),this._selectionDirection=this._selection.getDirection()}computeCursorState(e,t){let n=t.getTrackedSelection(this._selectionId);if(this._startLineNumberDelta!==0||this._endLineNumberDelta!==0){let i=n.startLineNumber,o=n.startColumn,s=n.endLineNumber,a=n.endColumn;this._startLineNumberDelta!==0&&(i=i+this._startLineNumberDelta,o=1),this._endLineNumberDelta!==0&&(s=s+this._endLineNumberDelta,a=1),n=Z.createWithDirection(i,o,s,a,this._selectionDirection)}return n}};Ze();te();wt();VL();Oi();var Uy=class{constructor(e,t,n){this._selection=e,this._isMovingDown=t,this._autoIndent=n,this._selectionId=null,this._moveEndLineSelectionShrink=!1}getEditOperations(e,t){let n=e.getLineCount();if(this._isMovingDown&&this._selection.endLineNumber===n){this._selectionId=t.trackSelection(this._selection);return}if(!this._isMovingDown&&this._selection.startLineNumber===1){this._selectionId=t.trackSelection(this._selection);return}this._moveEndPositionDown=!1;let i=this._selection;i.startLineNumber<i.endLineNumber&&i.endColumn===1&&(this._moveEndPositionDown=!0,i=i.setEndPosition(i.endLineNumber-1,e.getLineMaxColumn(i.endLineNumber-1)));let{tabSize:o,indentSize:s,insertSpaces:a}=e.getOptions(),l=this.buildIndentConverter(o,s,a),c={getLineTokens:d=>e.getLineTokens(d),getLanguageId:()=>e.getLanguageId(),getLanguageIdAtPosition:(d,h)=>e.getLanguageIdAtPosition(d,h),getLineContent:null};if(i.startLineNumber===i.endLineNumber&&e.getLineMaxColumn(i.startLineNumber)===1){let d=i.startLineNumber,h=this._isMovingDown?d+1:d-1;e.getLineMaxColumn(h)===1?t.addEditOperation(new C(1,1,1,1),null):(t.addEditOperation(new C(d,1,d,1),e.getLineContent(h)),t.addEditOperation(new C(h,1,h,e.getLineMaxColumn(h)),null)),i=new Z(h,1,h,1)}else{let d,h;if(this._isMovingDown){d=i.endLineNumber+1,h=e.getLineContent(d),t.addEditOperation(new C(d-1,e.getLineMaxColumn(d-1),d,e.getLineMaxColumn(d)),null);let p=h;if(this.shouldAutoIndent(e,i)){let g=this.matchEnterRule(e,l,o,d,i.startLineNumber-1);if(g!==null){let v=st(e.getLineContent(d)),w=g+sn(v,o);p=Ts(w,o,a)+this.trimLeft(h)}else{c.getLineContent=w=>w===i.startLineNumber?e.getLineContent(d):e.getLineContent(w);let v=Ge.getGoodIndentForLine(this._autoIndent,c,e.getLanguageIdAtPosition(d,1),i.startLineNumber,l);if(v!==null){let w=st(e.getLineContent(d)),F=sn(v,o),M=sn(w,o);F!==M&&(p=Ts(F,o,a)+this.trimLeft(h))}}t.addEditOperation(new C(i.startLineNumber,1,i.startLineNumber,1),p+`
`);let y=this.matchEnterRuleMovingDown(e,l,o,i.startLineNumber,d,p);if(y!==null)y!==0&&this.getIndentEditsOfMovingBlock(e,t,i,o,a,y);else{c.getLineContent=w=>w===i.startLineNumber?p:w>=i.startLineNumber+1&&w<=i.endLineNumber+1?e.getLineContent(w-1):e.getLineContent(w);let v=Ge.getGoodIndentForLine(this._autoIndent,c,e.getLanguageIdAtPosition(d,1),i.startLineNumber+1,l);if(v!==null){let w=st(e.getLineContent(i.startLineNumber)),F=sn(v,o),M=sn(w,o);if(F!==M){let z=F-M;this.getIndentEditsOfMovingBlock(e,t,i,o,a,z)}}}}else t.addEditOperation(new C(i.startLineNumber,1,i.startLineNumber,1),p+`
`)}else if(d=i.startLineNumber-1,h=e.getLineContent(d),t.addEditOperation(new C(d,1,d+1,1),null),t.addEditOperation(new C(i.endLineNumber,e.getLineMaxColumn(i.endLineNumber),i.endLineNumber,e.getLineMaxColumn(i.endLineNumber)),`
`+h),this.shouldAutoIndent(e,i)){c.getLineContent=g=>g===d?e.getLineContent(i.startLineNumber):e.getLineContent(g);let p=this.matchEnterRule(e,l,o,i.startLineNumber,i.startLineNumber-2);if(p!==null)p!==0&&this.getIndentEditsOfMovingBlock(e,t,i,o,a,p);else{let g=Ge.getGoodIndentForLine(this._autoIndent,c,e.getLanguageIdAtPosition(i.startLineNumber,1),d,l);if(g!==null){let y=st(e.getLineContent(i.startLineNumber)),v=sn(g,o),w=sn(y,o);if(v!==w){let F=v-w;this.getIndentEditsOfMovingBlock(e,t,i,o,a,F)}}}}}this._selectionId=t.trackSelection(i)}buildIndentConverter(e,t,n){return{shiftIndent:i=>hr.shiftIndent(i,i.length+1,e,t,n),unshiftIndent:i=>hr.unshiftIndent(i,i.length+1,e,t,n)}}parseEnterResult(e,t,n,i,o){if(o){let s=o.indentation;o.indentAction===Gl.None||o.indentAction===Gl.Indent?s=o.indentation+o.appendText:o.indentAction===Gl.IndentOutdent?s=o.indentation:o.indentAction===Gl.Outdent&&(s=t.unshiftIndent(o.indentation)+o.appendText);let a=e.getLineContent(i);if(this.trimLeft(a).indexOf(this.trimLeft(s))>=0){let l=st(e.getLineContent(i)),c=st(s),d=Ge.getIndentMetadata(e,i);d!==null&&d&2&&(c=t.unshiftIndent(c));let h=sn(c,n),p=sn(l,n);return h-p}}return null}matchEnterRuleMovingDown(e,t,n,i,o,s){if(ta(s)>=0){let a=e.getLineMaxColumn(o),l=Ge.getEnterAction(this._autoIndent,e,new C(o,a,o,a));return this.parseEnterResult(e,t,n,i,l)}else{let a=i-1;for(;a>=1;){let d=e.getLineContent(a);if(ta(d)>=0)break;a--}if(a<1||i>e.getLineCount())return null;let l=e.getLineMaxColumn(a),c=Ge.getEnterAction(this._autoIndent,e,new C(a,l,a,l));return this.parseEnterResult(e,t,n,i,c)}}matchEnterRule(e,t,n,i,o,s){let a=o;for(;a>=1;){let d;if(a===o&&s!==void 0?d=s:d=e.getLineContent(a),ta(d)>=0)break;a--}if(a<1||i>e.getLineCount())return null;let l=e.getLineMaxColumn(a),c=Ge.getEnterAction(this._autoIndent,e,new C(a,l,a,l));return this.parseEnterResult(e,t,n,i,c)}trimLeft(e){return e.replace(/^\s+/,"")}shouldAutoIndent(e,t){if(this._autoIndent<4||!e.isCheapToTokenize(t.startLineNumber))return!1;let n=e.getLanguageIdAtPosition(t.startLineNumber,1),i=e.getLanguageIdAtPosition(t.endLineNumber,1);return!(n!==i||Ge.getIndentRulesSupport(n)===null)}getIndentEditsOfMovingBlock(e,t,n,i,o,s){for(let a=n.startLineNumber;a<=n.endLineNumber;a++){let l=e.getLineContent(a),c=st(l),h=sn(c,i)+s,p=Ts(h,i,o);p!==c&&(t.addEditOperation(new C(a,1,a,c.length+1),p),a===n.endLineNumber&&n.endColumn<=c.length+1&&p===""&&(this._moveEndLineSelectionShrink=!0))}}computeCursorState(e,t){let n=t.getTrackedSelection(this._selectionId);return this._moveEndPositionDown&&(n=n.setEndPosition(n.endLineNumber+1,1)),this._moveEndLineSelectionShrink&&n.startLineNumber<n.endLineNumber&&(n=n.setEndPosition(n.endLineNumber,2)),n}};fo();te();var to=class{constructor(e,t){this.selection=e,this.descending=t,this.selectionId=null}static getCollator(){return to._COLLATOR||(to._COLLATOR=new Intl.Collator),to._COLLATOR}getEditOperations(e,t){let n=RD(e,this.selection,this.descending);n&&t.addEditOperation(n.range,n.text),this.selectionId=t.trackSelection(this.selection)}computeCursorState(e,t){return t.getTrackedSelection(this.selectionId)}static canRun(e,t,n){if(e===null)return!1;let i=zE(e,t,n);if(!i)return!1;for(let o=0,s=i.before.length;o<s;o++)if(i.before[o]!==i.after[o])return!0;return!1}};to._COLLATOR=null;function zE(r,e,t){let n=e.startLineNumber,i=e.endLineNumber;if(e.endColumn===1&&i--,n>=i)return null;let o=[];for(let a=n;a<=i;a++)o.push(r.getLineContent(a));let s=o.slice(0);return s.sort(to.getCollator().compare),t===!0&&(s=s.reverse()),{startLineNumber:n,endLineNumber:i,before:o,after:s}}function RD(r,e,t){let n=zE(r,e,t);return n?He.replace(new C(n.startLineNumber,1,n.endLineNumber,r.getLineMaxColumn(n.endLineNumber)),n.after.join(`
`)):null}ne();un();var $y=class extends N{constructor(e,t){super(t);this.down=e}run(e,t){if(!t.hasModel())return;let n=t.getSelections().map((s,a)=>({selection:s,index:a,ignore:!1}));n.sort((s,a)=>C.compareRangesUsingStarts(s.selection,a.selection));let i=n[0];for(let s=1;s<n.length;s++){let a=n[s];i.selection.endLineNumber===a.selection.startLineNumber&&(i.index<a.index?a.ignore=!0:(i.ignore=!0,i=a))}let o=[];for(let s of n)o.push(new Hp(s.selection,this.down,s.ignore));t.pushUndoStop(),t.executeCommands(this.id,o),t.pushUndoStop()}},OE=class extends $y{constructor(){super(!1,{id:"editor.action.copyLinesUpAction",label:u("lines.copyUp","Copy Line Up"),alias:"Copy Line Up",precondition:x.writable,kbOpts:{kbExpr:x.editorTextFocus,primary:1552,linux:{primary:3600},weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"2_line",title:u({key:"miCopyLinesUp",comment:["&& denotes a mnemonic"]},"&&Copy Line Up"),order:1}})}},HE=class extends $y{constructor(){super(!0,{id:"editor.action.copyLinesDownAction",label:u("lines.copyDown","Copy Line Down"),alias:"Copy Line Down",precondition:x.writable,kbOpts:{kbExpr:x.editorTextFocus,primary:1554,linux:{primary:3602},weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"2_line",title:u({key:"miCopyLinesDown",comment:["&& denotes a mnemonic"]},"Co&&py Line Down"),order:2}})}},BE=class extends N{constructor(){super({id:"editor.action.duplicateSelection",label:u("duplicateSelection","Duplicate Selection"),alias:"Duplicate Selection",precondition:x.writable,menuOpts:{menuId:oe.MenubarSelectionMenu,group:"2_line",title:u({key:"miDuplicateSelection",comment:["&& denotes a mnemonic"]},"&&Duplicate Selection"),order:5}})}run(e,t,n){if(!t.hasModel())return;let i=[],o=t.getSelections(),s=t.getModel();for(let a of o)if(a.isEmpty())i.push(new Hp(a,!0));else{let l=new Z(a.endLineNumber,a.endColumn,a.endLineNumber,a.endColumn);i.push(new fx(l,s.getValueInRange(a)))}t.pushUndoStop(),t.executeCommands(this.id,i),t.pushUndoStop()}},Ky=class extends N{constructor(e,t){super(t);this.down=e}run(e,t){let n=[],i=t.getSelections()||[],o=t.getOption(9);for(let s of i)n.push(new Uy(s,this.down,o));t.pushUndoStop(),t.executeCommands(this.id,n),t.pushUndoStop()}},WE=class extends Ky{constructor(){super(!1,{id:"editor.action.moveLinesUpAction",label:u("lines.moveUp","Move Line Up"),alias:"Move Line Up",precondition:x.writable,kbOpts:{kbExpr:x.editorTextFocus,primary:528,linux:{primary:528},weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"2_line",title:u({key:"miMoveLinesUp",comment:["&& denotes a mnemonic"]},"Mo&&ve Line Up"),order:3}})}},VE=class extends Ky{constructor(){super(!0,{id:"editor.action.moveLinesDownAction",label:u("lines.moveDown","Move Line Down"),alias:"Move Line Down",precondition:x.writable,kbOpts:{kbExpr:x.editorTextFocus,primary:530,linux:{primary:530},weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"2_line",title:u({key:"miMoveLinesDown",comment:["&& denotes a mnemonic"]},"Move &&Line Down"),order:4}})}},qy=class extends N{constructor(e,t){super(t);this.descending=e}run(e,t){let n=t.getSelections()||[];for(let o of n)if(!to.canRun(t.getModel(),o,this.descending))return;let i=[];for(let o=0,s=n.length;o<s;o++)i[o]=new to(n[o],this.descending);t.pushUndoStop(),t.executeCommands(this.id,i),t.pushUndoStop()}},GE=class extends qy{constructor(){super(!1,{id:"editor.action.sortLinesAscending",label:u("lines.sortAscending","Sort Lines Ascending"),alias:"Sort Lines Ascending",precondition:x.writable})}},jE=class extends qy{constructor(){super(!0,{id:"editor.action.sortLinesDescending",label:u("lines.sortDescending","Sort Lines Descending"),alias:"Sort Lines Descending",precondition:x.writable})}},UE=class extends N{constructor(){super({id:"editor.action.removeDuplicateLines",label:u("lines.deleteDuplicates","Delete Duplicate Lines"),alias:"Delete Duplicate Lines",precondition:x.writable})}run(e,t){if(!t.hasModel())return;let n=t.getModel();if(n.getLineCount()===1&&n.getLineMaxColumn(1)===1)return;let i=[],o=[],s=0;for(let a of t.getSelections()){let l=new Set,c=[];for(let g=a.startLineNumber;g<=a.endLineNumber;g++){let y=n.getLineContent(g);l.has(y)||(c.push(y),l.add(y))}let d=new Z(a.startLineNumber,1,a.endLineNumber,n.getLineMaxColumn(a.endLineNumber)),h=a.startLineNumber-s,p=new Z(h,1,h+c.length-1,c[c.length-1].length);i.push(He.replace(d,c.join(`
`))),o.push(p),s+=a.endLineNumber-a.startLineNumber+1-c.length}t.pushUndoStop(),t.executeEdits(this.id,i,o),t.pushUndoStop()}},Ec=class extends N{constructor(){super({id:Ec.ID,label:u("lines.trimTrailingWhitespace","Trim Trailing Whitespace"),alias:"Trim Trailing Whitespace",precondition:x.writable,kbOpts:{kbExpr:x.editorTextFocus,primary:$e(2089,2102),weight:100}})}run(e,t,n){let i=[];n.reason==="auto-save"&&(i=(t.getSelections()||[]).map(a=>new q(a.positionLineNumber,a.positionColumn)));let o=t.getSelection();if(o===null)return;let s=new jy(o,i);t.pushUndoStop(),t.executeCommands(this.id,[s]),t.pushUndoStop()}};Ec.ID="editor.action.trimTrailingWhitespace";var $E=class extends N{constructor(){super({id:"editor.action.deleteLines",label:u("lines.delete","Delete Line"),alias:"Delete Line",precondition:x.writable,kbOpts:{kbExpr:x.textInputFocus,primary:3113,weight:100}})}run(e,t){if(!t.hasModel())return;let n=this._getLinesToRemove(t),i=t.getModel();if(i.getLineCount()===1&&i.getLineMaxColumn(1)===1)return;let o=0,s=[],a=[];for(let l=0,c=n.length;l<c;l++){let d=n[l],h=d.startLineNumber,p=d.endLineNumber,g=1,y=i.getLineMaxColumn(p);p<i.getLineCount()?(p+=1,y=1):h>1&&(h-=1,g=i.getLineMaxColumn(h)),s.push(He.replace(new Z(h,g,p,y),"")),a.push(new Z(h-o,d.positionColumn,h-o,d.positionColumn)),o+=d.endLineNumber-d.startLineNumber+1}t.pushUndoStop(),t.executeEdits(this.id,s,a),t.pushUndoStop()}_getLinesToRemove(e){let t=e.getSelections().map(o=>{let s=o.endLineNumber;return o.startLineNumber<o.endLineNumber&&o.endColumn===1&&(s-=1),{startLineNumber:o.startLineNumber,selectionStartColumn:o.selectionStartColumn,endLineNumber:s,positionColumn:o.positionColumn}});t.sort((o,s)=>o.startLineNumber===s.startLineNumber?o.endLineNumber-s.endLineNumber:o.startLineNumber-s.startLineNumber);let n=[],i=t[0];for(let o=1;o<t.length;o++)i.endLineNumber+1>=t[o].startLineNumber?i.endLineNumber=t[o].endLineNumber:(n.push(i),i=t[o]);return n.push(i),n}},KE=class extends N{constructor(){super({id:"editor.action.indentLines",label:u("lines.indent","Indent Line"),alias:"Indent Line",precondition:x.writable,kbOpts:{kbExpr:x.editorTextFocus,primary:2137,weight:100}})}run(e,t){let n=t._getViewModel();!n||(t.pushUndoStop(),t.executeCommands(this.id,ou.indent(n.cursorConfig,t.getModel(),t.getSelections())),t.pushUndoStop())}},qE=class extends N{constructor(){super({id:"editor.action.outdentLines",label:u("lines.outdent","Outdent Line"),alias:"Outdent Line",precondition:x.writable,kbOpts:{kbExpr:x.editorTextFocus,primary:2135,weight:100}})}run(e,t){wa.Outdent.runEditorCommand(e,t,null)}},XE=class extends N{constructor(){super({id:"editor.action.insertLineBefore",label:u("lines.insertBefore","Insert Line Above"),alias:"Insert Line Above",precondition:x.writable,kbOpts:{kbExpr:x.editorTextFocus,primary:3075,weight:100}})}run(e,t){let n=t._getViewModel();!n||(t.pushUndoStop(),t.executeCommands(this.id,ou.lineInsertBefore(n.cursorConfig,t.getModel(),t.getSelections())))}},YE=class extends N{constructor(){super({id:"editor.action.insertLineAfter",label:u("lines.insertAfter","Insert Line Below"),alias:"Insert Line Below",precondition:x.writable,kbOpts:{kbExpr:x.editorTextFocus,primary:2051,weight:100}})}run(e,t){let n=t._getViewModel();!n||(t.pushUndoStop(),t.executeCommands(this.id,ou.lineInsertAfter(n.cursorConfig,t.getModel(),t.getSelections())))}},Xy=class extends N{run(e,t){if(!t.hasModel())return;let n=t.getSelection(),i=this._getRangesToDelete(t),o=[];for(let l=0,c=i.length-1;l<c;l++){let d=i[l],h=i[l+1];C.intersectRanges(d,h)===null?o.push(d):i[l+1]=C.plusRange(d,h)}o.push(i[i.length-1]);let s=this._getEndCursorState(n,o),a=o.map(l=>He.replace(l,""));t.pushUndoStop(),t.executeEdits(this.id,a,s),t.pushUndoStop()}},ZE=class extends Xy{constructor(){super({id:"deleteAllLeft",label:u("lines.deleteAllLeft","Delete All Left"),alias:"Delete All Left",precondition:x.writable,kbOpts:{kbExpr:x.textInputFocus,primary:0,mac:{primary:2049},weight:100}})}_getEndCursorState(e,t){let n=null,i=[],o=0;return t.forEach(s=>{let a;if(s.endColumn===1&&o>0){let l=s.startLineNumber-o;a=new Z(l,s.startColumn,l,s.startColumn)}else a=new Z(s.startLineNumber,s.startColumn,s.startLineNumber,s.startColumn);o+=s.endLineNumber-s.startLineNumber,s.intersectRanges(e)?n=a:i.push(a)}),n&&i.unshift(n),i}_getRangesToDelete(e){let t=e.getSelections();if(t===null)return[];let n=t,i=e.getModel();return i===null?[]:(n.sort(C.compareRangesUsingStarts),n=n.map(o=>{if(o.isEmpty())if(o.startColumn===1){let s=Math.max(1,o.startLineNumber-1),a=o.startLineNumber===1?1:i.getLineContent(s).length+1;return new C(s,a,o.startLineNumber,1)}else return new C(o.startLineNumber,1,o.startLineNumber,o.startColumn);else return new C(o.startLineNumber,1,o.endLineNumber,o.endColumn)}),n)}},JE=class extends Xy{constructor(){super({id:"deleteAllRight",label:u("lines.deleteAllRight","Delete All Right"),alias:"Delete All Right",precondition:x.writable,kbOpts:{kbExpr:x.textInputFocus,primary:0,mac:{primary:297,secondary:[2068]},weight:100}})}_getEndCursorState(e,t){let n=null,i=[];for(let o=0,s=t.length,a=0;o<s;o++){let l=t[o],c=new Z(l.startLineNumber-a,l.startColumn,l.startLineNumber-a,l.startColumn);l.intersectRanges(e)?n=c:i.push(c)}return n&&i.unshift(n),i}_getRangesToDelete(e){let t=e.getModel();if(t===null)return[];let n=e.getSelections();if(n===null)return[];let i=n.map(o=>{if(o.isEmpty()){let s=t.getLineMaxColumn(o.startLineNumber);return o.startColumn===s?new C(o.startLineNumber,o.startColumn,o.startLineNumber+1,1):new C(o.startLineNumber,o.startColumn,o.startLineNumber,s)}return o});return i.sort(C.compareRangesUsingStarts),i}},QE=class extends N{constructor(){super({id:"editor.action.joinLines",label:u("lines.joinLines","Join Lines"),alias:"Join Lines",precondition:x.writable,kbOpts:{kbExpr:x.editorTextFocus,primary:0,mac:{primary:296},weight:100}})}run(e,t){let n=t.getSelections();if(n===null)return;let i=t.getSelection();if(i===null)return;n.sort(C.compareRangesUsingStarts);let o=[],s=n.reduce((p,g)=>p.isEmpty()?p.endLineNumber===g.startLineNumber?(i.equalsSelection(p)&&(i=g),g):g.startLineNumber>p.endLineNumber+1?(o.push(p),g):new Z(p.startLineNumber,p.startColumn,g.endLineNumber,g.endColumn):g.startLineNumber>p.endLineNumber?(o.push(p),g):new Z(p.startLineNumber,p.startColumn,g.endLineNumber,g.endColumn));o.push(s);let a=t.getModel();if(a===null)return;let l=[],c=[],d=i,h=0;for(let p=0,g=o.length;p<g;p++){let y=o[p],v=y.startLineNumber,w=1,F=0,M,z,V=a.getLineContent(y.endLineNumber).length-y.endColumn;if(y.isEmpty()||y.startLineNumber===y.endLineNumber){let _e=y.getStartPosition();_e.lineNumber<a.getLineCount()?(M=v+1,z=a.getLineMaxColumn(M)):(M=_e.lineNumber,z=a.getLineMaxColumn(_e.lineNumber))}else M=y.endLineNumber,z=a.getLineMaxColumn(M);let G=a.getLineContent(v);for(let _e=v+1;_e<=M;_e++){let yt=a.getLineContent(_e),Pt=a.getLineFirstNonWhitespaceColumn(_e);if(Pt>=1){let Mt=!0;G===""&&(Mt=!1),Mt&&(G.charAt(G.length-1)===" "||G.charAt(G.length-1)==="	")&&(Mt=!1,G=G.replace(/[\s\uFEFF\xA0]+$/g," "));let Rn=yt.substr(Pt-1);G+=(Mt?" ":"")+Rn,Mt?F=Rn.length+1:F=Rn.length}else F=0}let ze=new C(v,w,M,z);if(!ze.isEmpty()){let _e;y.isEmpty()?(l.push(He.replace(ze,G)),_e=new Z(ze.startLineNumber-h,G.length-F+1,v-h,G.length-F+1)):y.startLineNumber===y.endLineNumber?(l.push(He.replace(ze,G)),_e=new Z(y.startLineNumber-h,y.startColumn,y.endLineNumber-h,y.endColumn)):(l.push(He.replace(ze,G)),_e=new Z(y.startLineNumber-h,y.startColumn,y.startLineNumber-h,G.length-V)),C.intersectRanges(ze,i)!==null?d=_e:c.push(_e)}h+=ze.endLineNumber-ze.startLineNumber}c.unshift(d),t.pushUndoStop(),t.executeEdits(this.id,l,c),t.pushUndoStop()}},eI=class extends N{constructor(){super({id:"editor.action.transpose",label:u("editor.transpose","Transpose characters around the cursor"),alias:"Transpose characters around the cursor",precondition:x.writable})}run(e,t){let n=t.getSelections();if(n===null)return;let i=t.getModel();if(i===null)return;let o=[];for(let s=0,a=n.length;s<a;s++){let l=n[s];if(!l.isEmpty())continue;let c=l.getStartPosition(),d=i.getLineMaxColumn(c.lineNumber);if(c.column>=d){if(c.lineNumber===i.getLineCount())continue;let h=new C(c.lineNumber,Math.max(1,c.column-1),c.lineNumber+1,1),p=i.getValueInRange(h).split("").reverse().join("");o.push(new So(new Z(c.lineNumber,Math.max(1,c.column-1),c.lineNumber+1,1),p))}else{let h=new C(c.lineNumber,Math.max(1,c.column-1),c.lineNumber,c.column+1),p=i.getValueInRange(h).split("").reverse().join("");o.push(new nu(h,p,new Z(c.lineNumber,c.column+1,c.lineNumber,c.column+1)))}}t.pushUndoStop(),t.executeCommands(this.id,o),t.pushUndoStop()}},Ic=class extends N{run(e,t){let n=t.getSelections();if(n===null)return;let i=t.getModel();if(i===null)return;let o=t.getOption(115),s=[];for(let a of n)if(a.isEmpty()){let l=a.getStartPosition(),c=t.getConfiguredWordAtPosition(l);if(!c)continue;let d=new C(l.lineNumber,c.startColumn,l.lineNumber,c.endColumn),h=i.getValueInRange(d);s.push(He.replace(d,this._modifyText(h,o)))}else{let l=i.getValueInRange(a);s.push(He.replace(a,this._modifyText(l,o)))}t.pushUndoStop(),t.executeEdits(this.id,s),t.pushUndoStop()}},tI=class extends Ic{constructor(){super({id:"editor.action.transformToUppercase",label:u("editor.transformToUppercase","Transform to Uppercase"),alias:"Transform to Uppercase",precondition:x.writable})}_modifyText(e,t){return e.toLocaleUpperCase()}},nI=class extends Ic{constructor(){super({id:"editor.action.transformToLowercase",label:u("editor.transformToLowercase","Transform to Lowercase"),alias:"Transform to Lowercase",precondition:x.writable})}_modifyText(e,t){return e.toLocaleLowerCase()}},Bp=class{constructor(e,t){this._pattern=e,this._flags=t,this._actual=null,this._evaluated=!1}get(){if(!this._evaluated){this._evaluated=!0;try{this._actual=new RegExp(this._pattern,this._flags)}catch(e){}}return this._actual}isSupported(){return this.get()!==null}},Qa=class extends Ic{constructor(){super({id:"editor.action.transformToTitlecase",label:u("editor.transformToTitlecase","Transform to Title Case"),alias:"Transform to Title Case",precondition:x.writable})}_modifyText(e,t){let n=Qa.titleBoundary.get();return n?e.toLocaleLowerCase().replace(n,i=>i.toLocaleUpperCase()):e}};Qa.titleBoundary=new Bp("(^|[^\\p{L}\\p{N}']|((^|\\P{L})'))\\p{L}","gmu");var Oo=class extends Ic{constructor(){super({id:"editor.action.transformToSnakecase",label:u("editor.transformToSnakecase","Transform to Snake Case"),alias:"Transform to Snake Case",precondition:x.writable})}_modifyText(e,t){let n=Oo.caseBoundary.get(),i=Oo.singleLetters.get();return!n||!i?e:e.replace(n,"$1_$2").replace(i,"$1_$2$3").toLocaleLowerCase()}};Oo.caseBoundary=new Bp("(\\p{Ll})(\\p{Lu})","gmu");Oo.singleLetters=new Bp("(\\p{Lu}|\\p{N})(\\p{Lu})(\\p{Ll})","gmu");I(OE);I(HE);I(BE);I(WE);I(VE);I(GE);I(jE);I(UE);I(Ec);I($E);I(KE);I(qE);I(XE);I(YE);I(ZE);I(JE);I(QE);I(eI);I(tI);I(nI);Oo.caseBoundary.isSupported()&&Oo.singleLetters.isSupported()&&I(Oo);Qa.titleBoundary.isSupported()&&I(Qa);mt();Oe();at();fi();ke();U();Ze();Ht();ce();Bt();rt();te();Be();Ut();Pe();Oi();ne();Te();Je();Me();var FD=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},AD=function(r,e){return function(t,n){e(t,n,r)}},Yy=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},iI=new de("LinkedEditingInputVisible",!1),oI="linked-editing-decoration",Lr=class Zy extends B{constructor(e,t){super();this._debounceDuration=200,this._localToDispose=this._register(new R),this._editor=e,this._enabled=!1,this._visibleContextKey=iI.bindTo(t),this._currentDecorations=[],this._languageWordPattern=null,this._currentWordPattern=null,this._ignoreChangeEvent=!1,this._localToDispose=this._register(new R),this._rangeUpdateTriggerPromise=null,this._rangeSyncTriggerPromise=null,this._currentRequest=null,this._currentRequestPosition=null,this._currentRequestModelVersion=null,this._register(this._editor.onDidChangeModel(()=>this.reinitialize(!0))),this._register(this._editor.onDidChangeConfiguration(n=>{(n.hasChanged(61)||n.hasChanged(81))&&this.reinitialize(!1)})),this._register(vh.onDidChange(()=>this.reinitialize(!1))),this._register(this._editor.onDidChangeModelLanguage(()=>this.reinitialize(!0))),this.reinitialize(!0)}static get(e){return e.getContribution(Zy.ID)}reinitialize(e){let t=this._editor.getModel(),n=t!==null&&(this._editor.getOption(61)||this._editor.getOption(81))&&vh.has(t);if(n===this._enabled&&!e||(this._enabled=n,this.clearRanges(),this._localToDispose.clear(),!n||t===null))return;this._languageWordPattern=Ge.getWordDefinition(t.getLanguageId()),this._localToDispose.add(t.onDidChangeLanguageConfiguration(()=>{this._languageWordPattern=Ge.getWordDefinition(t.getLanguageId())}));let i=new hi(this._debounceDuration),o=()=>{this._rangeUpdateTriggerPromise=i.trigger(()=>this.updateRanges(),this._debounceDuration)},s=new hi(0),a=l=>{this._rangeSyncTriggerPromise=s.trigger(()=>this._syncRanges(l))};this._localToDispose.add(this._editor.onDidChangeCursorPosition(()=>{o()})),this._localToDispose.add(this._editor.onDidChangeModelContent(l=>{if(!this._ignoreChangeEvent&&this._currentDecorations.length>0){let c=t.getDecorationRange(this._currentDecorations[0]);if(c&&l.changes.every(d=>c.intersectRanges(d.range))){a(this._currentDecorations);return}}o()})),this._localToDispose.add({dispose:()=>{i.cancel(),s.cancel()}}),this.updateRanges()}_syncRanges(e){if(!this._editor.hasModel()||e!==this._currentDecorations||e.length===0)return;let t=this._editor.getModel(),n=t.getDecorationRange(e[0]);if(!n||n.startLineNumber!==n.endLineNumber)return this.clearRanges();let i=t.getValueInRange(n);if(this._currentWordPattern){let s=i.match(this._currentWordPattern);if((s?s[0].length:0)!==i.length)return this.clearRanges()}let o=[];for(let s=1,a=e.length;s<a;s++){let l=t.getDecorationRange(e[s]);if(!!l)if(l.startLineNumber!==l.endLineNumber)o.push({range:l,text:i});else{let c=t.getValueInRange(l),d=i,h=l.startColumn,p=l.endColumn,g=Jo(c,d);h+=g,c=c.substr(g),d=d.substr(g);let y=hh(c,d);p-=y,c=c.substr(0,c.length-y),d=d.substr(0,d.length-y),(h!==p||d.length!==0)&&o.push({range:new C(l.startLineNumber,h,l.endLineNumber,p),text:d})}}if(o.length!==0)try{this._editor.popUndoStop(),this._ignoreChangeEvent=!0;let s=this._editor._getViewModel().getPrevEditOperationType();this._editor.executeEdits("linkedEditing",o),this._editor._getViewModel().setPrevEditOperationType(s)}finally{this._ignoreChangeEvent=!1}}dispose(){this.clearRanges(),super.dispose()}clearRanges(){this._visibleContextKey.set(!1),this._currentDecorations=this._editor.deltaDecorations(this._currentDecorations,[]),this._currentRequest&&(this._currentRequest.cancel(),this._currentRequest=null,this._currentRequestPosition=null)}updateRanges(e=!1){return Yy(this,void 0,void 0,function*(){if(!this._editor.hasModel()){this.clearRanges();return}let t=this._editor.getPosition();if(!this._enabled&&!e||this._editor.getSelections().length>1){this.clearRanges();return}let n=this._editor.getModel(),i=n.getVersionId();if(this._currentRequestPosition&&this._currentRequestModelVersion===i){if(t.equals(this._currentRequestPosition))return;if(this._currentDecorations&&this._currentDecorations.length>0){let s=n.getDecorationRange(this._currentDecorations[0]);if(s&&s.containsPosition(t))return}}this._currentRequestPosition=t,this._currentRequestModelVersion=i;let o=Le(s=>Yy(this,void 0,void 0,function*(){try{let a=yield sI(n,t,s);if(o!==this._currentRequest||(this._currentRequest=null,i!==n.getVersionId()))return;let l=[];a!=null&&a.ranges&&(l=a.ranges),this._currentWordPattern=(a==null?void 0:a.wordPattern)||this._languageWordPattern;let c=!1;for(let h=0,p=l.length;h<p;h++)if(C.containsPosition(l[h],t)){if(c=!0,h!==0){let g=l[h];l.splice(h,1),l.unshift(g)}break}if(!c){this.clearRanges();return}let d=l.map(h=>({range:h,options:Zy.DECORATION}));this._visibleContextKey.set(!0),this._currentDecorations=this._editor.deltaDecorations(this._currentDecorations,d)}catch(a){Li(a)||ae(a),(this._currentRequest===o||!this._currentRequest)&&this.clearRanges()}}));return this._currentRequest=o,o})}};Lr.ID="editor.contrib.linkedEditing";Lr.DECORATION=xe.register({description:"linked-editing",stickiness:0,className:oI});Lr=FD([AD(1,Q)],Lr);var rI=class extends N{constructor(){super({id:"editor.action.linkedEditing",label:u("linkedEditing.label","Start Linked Editing"),alias:"Start Linked Editing",precondition:O.and(x.writable,x.hasRenameProvider),kbOpts:{kbExpr:x.editorTextFocus,primary:3132,weight:100}})}runCommand(e,t){let n=e.get(Ee),[i,o]=Array.isArray(t)&&t||[void 0,void 0];return Ce.isUri(i)&&q.isIPosition(o)?n.openCodeEditor({resource:i},n.getActiveCodeEditor()).then(s=>{!s||(s.setPosition(o),s.invokeWithinContext(a=>(this.reportTelemetry(a,s),this.run(a,s))))},ae):super.runCommand(e,t)}run(e,t){let n=Lr.get(t);return n?Promise.resolve(n.updateRanges(!0)):Promise.resolve()}},ND=it.bindToContribution(Lr.get);K(new ND({id:"cancelLinkedEditingInput",precondition:iI,handler:r=>r.clearRanges(),kbOpts:{kbExpr:x.editorTextFocus,weight:100+99,primary:9,secondary:[1033]}}));function sI(r,e,t){let n=vh.ordered(r);return dh(n.map(i=>()=>Yy(this,void 0,void 0,function*(){try{return yield i.provideLinkedEditingRanges(r,e,t)}catch(o){je(o);return}})),i=>!!i&&Tt(i==null?void 0:i.ranges))}var zD=Y("editor.linkedEditingBackground",{dark:fe.fromHex("#f00").transparent(.3),light:fe.fromHex("#f00").transparent(.3),hc:fe.fromHex("#f00").transparent(.3)},u("editorLinkedEditingBackground","Background color when the editor auto renames on type."));ye((r,e)=>{let t=r.getColor(zD);t&&e.addRule(`.monaco-editor .${oI} { background: ${t}; border-left-color: ${t}; }`)});yn("_executeLinkedEditingProvider",(r,e)=>sI(r,e,ue.None));J(Lr.ID,Lr);I(rI);Oe();at();ke();U();Rl();Fn();Nn();Ht();ce();Ut();Pe();mt();at();ke();U();Wt();Ht();te();Pe();Qo();bt();var aI=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},lI=class{constructor(e,t){this._link=e,this._provider=t}toJSON(){return{range:this.range,url:this.url,tooltip:this.tooltip}}get range(){return this._link.range}get url(){return this._link.url}get tooltip(){return this._link.tooltip}resolve(e){return aI(this,void 0,void 0,function*(){return this._link.url?this._link.url:typeof this._provider.resolveLink=="function"?Promise.resolve(this._provider.resolveLink(this._link,e)).then(t=>(this._link=t||this._link,this._link.url?this.resolve(e):Promise.reject(new Error("missing")))):Promise.reject(new Error("missing"))})}},kc=class{constructor(e){this._disposables=new R;let t=[];for(let[n,i]of e){let o=n.links.map(s=>new lI(s,i));t=kc._union(t,o),rh(n)&&this._disposables.add(n)}this.links=t}dispose(){this._disposables.dispose(),this.links.length=0}static _union(e,t){let n=[],i,o,s,a;for(i=0,s=0,o=e.length,a=t.length;i<o&&s<a;){let l=e[i],c=t[s];if(C.areIntersectingOrTouching(l.range,c.range)){i++;continue}C.compareRangesUsingStarts(l.range,c.range)<0?(n.push(l),i++):(n.push(c),s++)}for(;i<o;i++)n.push(e[i]);for(;s<a;s++)n.push(t[s]);return n}};function Qy(r,e){let t=[],n=Vl.ordered(r).reverse().map((i,o)=>Promise.resolve(i.provideLinks(r,e)).then(s=>{s&&(t[o]=[s,i])},je));return Promise.all(n).then(()=>{let i=new kc(Yn(t));return e.isCancellationRequested?(i.dispose(),new kc([])):i})}Ie.registerCommand("_executeLinkProvider",(r,...e)=>aI(void 0,void 0,void 0,function*(){let[t,n]=e;Ue(t instanceof Ce),typeof n!="number"&&(n=0);let i=r.get(Gt).getModel(t);if(!i)return[];let o=yield Qy(i,ue.None);if(!o)return[];for(let a=0;a<Math.min(n,o.links.length);a++)yield o.links[a].resolve(ue.None);let s=o.links.slice(0);return o.dispose(),s}));ne();Fi();Je();Me();var OD=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},dI=function(r,e){return function(t,n){e(t,n,r)}},HD=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})};function BD(r,e){let t=r.url&&/^command:/i.test(r.url.toString()),n=r.tooltip?r.tooltip:t?u("links.navigate.executeCmd","Execute command"):u("links.navigate.follow","Follow link"),i=e?ln?u("links.navigate.kb.meta.mac","cmd + click"):u("links.navigate.kb.meta","ctrl + click"):ln?u("links.navigate.kb.alt.mac","option + click"):u("links.navigate.kb.alt","alt + click");if(r.url){let o="";if(/^command:/i.test(r.url.toString())){let a=r.url.toString().match(/^command:([^?#]+)/);if(a){let l=a[1];o=` "${u("tooltip.explanation","Execute command {0}",l)}"`}}return new kn("",!0).appendMarkdown(`[${n}](${r.url.toString(!0).replace(/ /g,"%20")}${o}) (${i})`)}else return new kn().appendText(`${n} (${i})`)}var cI={general:xe.register({description:"detected-link",stickiness:1,collapseOnReplaceEdit:!0,inlineClassName:"detected-link"}),active:xe.register({description:"detected-link-active",stickiness:1,collapseOnReplaceEdit:!0,inlineClassName:"detected-link-active"})},Es=class{constructor(e,t){this.link=e,this.decorationId=t}static decoration(e,t){return{range:e.range,options:Es._getOptions(e,t,!1)}}static _getOptions(e,t,n){let i=Object.assign({},n?cI.active:cI.general);return i.hoverMessage=BD(e,t),i}activate(e,t){e.changeDecorationOptions(this.decorationId,Es._getOptions(this.link,t,!0))}deactivate(e,t){e.changeDecorationOptions(this.decorationId,Es._getOptions(this.link,t,!1))}},Is=class eb{constructor(e,t,n){this.listenersToRemove=new R,this.editor=e,this.openerService=t,this.notificationService=n;let i=new _d(e);this.listenersToRemove.add(i),this.listenersToRemove.add(i.onMouseMoveOrRelevantKeyDown(([o,s])=>{this._onEditorMouseMove(o,s)})),this.listenersToRemove.add(i.onExecute(o=>{this.onEditorMouseUp(o)})),this.listenersToRemove.add(i.onCancel(o=>{this.cleanUpActiveLinkDecoration()})),this.enabled=e.getOption(62),this.listenersToRemove.add(e.onDidChangeConfiguration(o=>{let s=e.getOption(62);this.enabled!==s&&(this.enabled=s,this.updateDecorations([]),this.stop(),this.beginCompute())})),this.listenersToRemove.add(e.onDidChangeModelContent(o=>this.onChange())),this.listenersToRemove.add(e.onDidChangeModel(o=>this.onModelChanged())),this.listenersToRemove.add(e.onDidChangeModelLanguage(o=>this.onModelModeChanged())),this.listenersToRemove.add(Vl.onDidChange(o=>this.onModelModeChanged())),this.timeout=new Cn,this.computePromise=null,this.activeLinksList=null,this.currentOccurrences={},this.activeLinkDecorationId=null,this.beginCompute()}static get(e){return e.getContribution(eb.ID)}onModelChanged(){this.currentOccurrences={},this.activeLinkDecorationId=null,this.stop(),this.beginCompute()}onModelModeChanged(){this.stop(),this.beginCompute()}onChange(){this.timeout.setIfNotSet(()=>this.beginCompute(),eb.RECOMPUTE_TIME)}beginCompute(){return HD(this,void 0,void 0,function*(){if(!this.editor.hasModel()||!this.enabled)return;let e=this.editor.getModel();if(!!Vl.has(e)){this.activeLinksList&&(this.activeLinksList.dispose(),this.activeLinksList=null),this.computePromise=Le(t=>Qy(e,t));try{this.activeLinksList=yield this.computePromise,this.updateDecorations(this.activeLinksList.links)}catch(t){ae(t)}finally{this.computePromise=null}}})}updateDecorations(e){let t=this.editor.getOption(69)==="altKey",n=[],i=Object.keys(this.currentOccurrences);for(let a=0,l=i.length;a<l;a++){let c=i[a],d=this.currentOccurrences[c];n.push(d.decorationId)}let o=[];if(e)for(let a of e)o.push(Es.decoration(a,t));let s=this.editor.deltaDecorations(n,o);this.currentOccurrences={},this.activeLinkDecorationId=null;for(let a=0,l=s.length;a<l;a++){let c=new Es(e[a],s[a]);this.currentOccurrences[c.decorationId]=c}}_onEditorMouseMove(e,t){let n=this.editor.getOption(69)==="altKey";if(this.isEnabled(e,t)){this.cleanUpActiveLinkDecoration();let i=this.getLinkOccurrence(e.target.position);i&&this.editor.changeDecorations(o=>{i.activate(o,n),this.activeLinkDecorationId=i.decorationId})}else this.cleanUpActiveLinkDecoration()}cleanUpActiveLinkDecoration(){let e=this.editor.getOption(69)==="altKey";if(this.activeLinkDecorationId){let t=this.currentOccurrences[this.activeLinkDecorationId];t&&this.editor.changeDecorations(n=>{t.deactivate(n,e)}),this.activeLinkDecorationId=null}}onEditorMouseUp(e){if(!this.isEnabled(e))return;let t=this.getLinkOccurrence(e.target.position);!t||this.openLinkOccurrence(t,e.hasSideBySideModifier,!0)}openLinkOccurrence(e,t,n=!1){if(!this.openerService)return;let{link:i}=e;i.resolve(ue.None).then(o=>{if(typeof o=="string"&&this.editor.hasModel()){let s=this.editor.getModel().uri;if(s.scheme===ut.file&&o.startsWith(`${ut.file}:`)){let a=Ce.parse(o);if(a.scheme===ut.file){let l=NS(a),c=null;l.startsWith("/./")?c=`.${l.substr(1)}`:l.startsWith("//./")&&(c=`.${l.substr(2)}`),c&&(o=zS(s,c))}}}return this.openerService.open(o,{openToSide:t,fromUserGesture:n,allowContributedOpeners:!0,allowCommands:!0})},o=>{let s=o instanceof Error?o.message:o;s==="invalid"?this.notificationService.warn(u("invalid.url","Failed to open this link because it is not well-formed: {0}",i.url.toString())):s==="missing"?this.notificationService.warn(u("missing.url","Failed to open this link because its target is missing.")):ae(o)})}getLinkOccurrence(e){if(!this.editor.hasModel()||!e)return null;let t=this.editor.getModel().getDecorationsInRange({startLineNumber:e.lineNumber,startColumn:e.column,endLineNumber:e.lineNumber,endColumn:e.column},0,!0);for(let n of t){let i=this.currentOccurrences[n.id];if(i)return i}return null}isEnabled(e,t){return Boolean(e.target.type===6&&(e.hasTriggerModifier||t&&t.keyCodeIsTriggerKey))}stop(){var e;this.timeout.cancel(),this.activeLinksList&&((e=this.activeLinksList)===null||e===void 0||e.dispose(),this.activeLinksList=null),this.computePromise&&(this.computePromise.cancel(),this.computePromise=null)}dispose(){this.listenersToRemove.dispose(),this.stop(),this.timeout.dispose()}};Is.ID="editor.linkDetector";Is.RECOMPUTE_TIME=1e3;Is=OD([dI(1,Vt),dI(2,dt)],Is);var hI=class extends N{constructor(){super({id:"editor.action.openLink",label:u("label","Open Link"),alias:"Open Link",precondition:void 0})}run(e,t){let n=Is.get(t);if(!n||!t.hasModel())return;let i=t.getSelections();for(let o of i){let s=n.getLinkOccurrence(o.getEndPosition());s&&n.openLinkOccurrence(s,!1)}}};J(Is.ID,Is);I(hI);ye((r,e)=>{let t=r.getColor(xa);t&&e.addRule(`.monaco-editor .detected-link-active { color: ${t} !important; }`)});mi();Oe();ho();U();ce();te();wt();Be();Hl();Ut();Pe();ne();un();Te();Je();Me();function tl(r,e){let t=e.filter(n=>!r.find(i=>i.equals(n)));if(t.length>=1){let n=t.map(o=>`line ${o.viewState.position.lineNumber} column ${o.viewState.position.column}`).join(", "),i=t.length===1?u("cursorAdded","Cursor added: {0}",n):u("cursorsAdded","Cursors added: {0}",n);bv(i)}}var pI=class extends N{constructor(){super({id:"editor.action.insertCursorAbove",label:u("mutlicursor.insertAbove","Add Cursor Above"),alias:"Add Cursor Above",precondition:void 0,kbOpts:{kbExpr:x.editorTextFocus,primary:2576,linux:{primary:1552,secondary:[3088]},weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"3_multi",title:u({key:"miInsertCursorAbove",comment:["&& denotes a mnemonic"]},"&&Add Cursor Above"),order:2}})}run(e,t,n){if(!t.hasModel())return;let i=!0;n&&n.logicalLine===!1&&(i=!1);let o=t._getViewModel();if(o.cursorConfig.readOnly)return;o.pushStackElement();let s=o.getCursorStates();o.setCursorStates(n.source,3,Xm.addCursorUp(o,s,i)),o.revealTopMostCursor(n.source),tl(s,o.getCursorStates())}},mI=class extends N{constructor(){super({id:"editor.action.insertCursorBelow",label:u("mutlicursor.insertBelow","Add Cursor Below"),alias:"Add Cursor Below",precondition:void 0,kbOpts:{kbExpr:x.editorTextFocus,primary:2578,linux:{primary:1554,secondary:[3090]},weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"3_multi",title:u({key:"miInsertCursorBelow",comment:["&& denotes a mnemonic"]},"A&&dd Cursor Below"),order:3}})}run(e,t,n){if(!t.hasModel())return;let i=!0;n&&n.logicalLine===!1&&(i=!1);let o=t._getViewModel();if(o.cursorConfig.readOnly)return;o.pushStackElement();let s=o.getCursorStates();o.setCursorStates(n.source,3,Xm.addCursorDown(o,s,i)),o.revealBottomMostCursor(n.source),tl(s,o.getCursorStates())}},gI=class extends N{constructor(){super({id:"editor.action.insertCursorAtEndOfEachLineSelected",label:u("mutlicursor.insertAtEndOfEachLineSelected","Add Cursors to Line Ends"),alias:"Add Cursors to Line Ends",precondition:void 0,kbOpts:{kbExpr:x.editorTextFocus,primary:1575,weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"3_multi",title:u({key:"miInsertCursorAtEndOfEachLineSelected",comment:["&& denotes a mnemonic"]},"Add C&&ursors to Line Ends"),order:4}})}getCursorsForSelection(e,t,n){if(!e.isEmpty()){for(let i=e.startLineNumber;i<e.endLineNumber;i++){let o=t.getLineMaxColumn(i);n.push(new Z(i,o,i,o))}e.endColumn>1&&n.push(new Z(e.endLineNumber,e.endColumn,e.endLineNumber,e.endColumn))}}run(e,t){if(!t.hasModel())return;let n=t.getModel(),i=t.getSelections(),o=t._getViewModel(),s=o.getCursorStates(),a=[];i.forEach(l=>this.getCursorsForSelection(l,n,a)),a.length>0&&t.setSelections(a),tl(s,o.getCursorStates())}},fI=class extends N{constructor(){super({id:"editor.action.addCursorsToBottom",label:u("mutlicursor.addCursorsToBottom","Add Cursors To Bottom"),alias:"Add Cursors To Bottom",precondition:void 0})}run(e,t){if(!t.hasModel())return;let n=t.getSelections(),i=t.getModel().getLineCount(),o=[];for(let l=n[0].startLineNumber;l<=i;l++)o.push(new Z(l,n[0].startColumn,l,n[0].endColumn));let s=t._getViewModel(),a=s.getCursorStates();o.length>0&&t.setSelections(o),tl(a,s.getCursorStates())}},yI=class extends N{constructor(){super({id:"editor.action.addCursorsToTop",label:u("mutlicursor.addCursorsToTop","Add Cursors To Top"),alias:"Add Cursors To Top",precondition:void 0})}run(e,t){if(!t.hasModel())return;let n=t.getSelections(),i=[];for(let a=n[0].startLineNumber;a>=1;a--)i.push(new Z(a,n[0].startColumn,a,n[0].endColumn));let o=t._getViewModel(),s=o.getCursorStates();i.length>0&&t.setSelections(i),tl(s,o.getCursorStates())}},Lc=class{constructor(e,t,n){this.selections=e,this.revealRange=t,this.revealScrollType=n}},el=class{constructor(e,t,n,i,o,s,a){this._editor=e,this.findController=t,this.isDisconnectedFromFindController=n,this.searchText=i,this.wholeWord=o,this.matchCase=s,this.currentMatch=a}static create(e,t){if(!e.hasModel())return null;let n=t.getState();if(!e.hasTextFocus()&&n.isRevealed&&n.searchString.length>0)return new el(e,t,!1,n.searchString,n.wholeWord,n.matchCase,null);let i=!1,o,s,a=e.getSelections();a.length===1&&a[0].isEmpty()?(i=!0,o=!0,s=!0):(o=n.wholeWord,s=n.matchCase);let l=e.getSelection(),c,d=null;if(l.isEmpty()){let h=e.getConfiguredWordAtPosition(l.getStartPosition());if(!h)return null;c=h.word,d=new Z(l.startLineNumber,h.startColumn,l.startLineNumber,h.endColumn)}else c=e.getModel().getValueInRange(l).replace(/\r\n/g,`
`);return new el(e,t,i,c,o,s,d)}addSelectionToNextFindMatch(){if(!this._editor.hasModel())return null;let e=this._getNextMatch();if(!e)return null;let t=this._editor.getSelections();return new Lc(t.concat(e),e,0)}moveSelectionToNextFindMatch(){if(!this._editor.hasModel())return null;let e=this._getNextMatch();if(!e)return null;let t=this._editor.getSelections();return new Lc(t.slice(0,t.length-1).concat(e),e,0)}_getNextMatch(){if(!this._editor.hasModel())return null;if(this.currentMatch){let i=this.currentMatch;return this.currentMatch=null,i}this.findController.highlightFindOptions();let e=this._editor.getSelections(),t=e[e.length-1],n=this._editor.getModel().findNextMatch(this.searchText,t.getEndPosition(),!1,this.matchCase,this.wholeWord?this._editor.getOption(115):null,!1);return n?new Z(n.range.startLineNumber,n.range.startColumn,n.range.endLineNumber,n.range.endColumn):null}addSelectionToPreviousFindMatch(){if(!this._editor.hasModel())return null;let e=this._getPreviousMatch();if(!e)return null;let t=this._editor.getSelections();return new Lc(t.concat(e),e,0)}moveSelectionToPreviousFindMatch(){if(!this._editor.hasModel())return null;let e=this._getPreviousMatch();if(!e)return null;let t=this._editor.getSelections();return new Lc(t.slice(0,t.length-1).concat(e),e,0)}_getPreviousMatch(){if(!this._editor.hasModel())return null;if(this.currentMatch){let i=this.currentMatch;return this.currentMatch=null,i}this.findController.highlightFindOptions();let e=this._editor.getSelections(),t=e[e.length-1],n=this._editor.getModel().findPreviousMatch(this.searchText,t.getStartPosition(),!1,this.matchCase,this.wholeWord?this._editor.getOption(115):null,!1);return n?new Z(n.range.startLineNumber,n.range.startColumn,n.range.endLineNumber,n.range.endColumn):null}selectAll(){return this._editor.hasModel()?(this.findController.highlightFindOptions(),this._editor.getModel().findMatches(this.searchText,!0,!1,this.matchCase,this.wholeWord?this._editor.getOption(115):null,!1,1073741824)):[]}},Pr=class extends B{constructor(e){super();this._sessionDispose=this._register(new R),this._editor=e,this._ignoreSelectionChange=!1,this._session=null}static get(e){return e.getContribution(Pr.ID)}dispose(){this._endSession(),super.dispose()}_beginSessionIfNeeded(e){if(!this._session){let t=el.create(this._editor,e);if(!t)return;this._session=t;let n={searchString:this._session.searchText};this._session.isDisconnectedFromFindController&&(n.wholeWordOverride=1,n.matchCaseOverride=1,n.isRegexOverride=2),e.getState().change(n,!1),this._sessionDispose.add(this._editor.onDidChangeCursorSelection(i=>{this._ignoreSelectionChange||this._endSession()})),this._sessionDispose.add(this._editor.onDidBlurEditorText(()=>{this._endSession()})),this._sessionDispose.add(e.getState().onFindReplaceStateChange(i=>{(i.matchCase||i.wholeWord)&&this._endSession()}))}}_endSession(){if(this._sessionDispose.clear(),this._session&&this._session.isDisconnectedFromFindController){let e={wholeWordOverride:0,matchCaseOverride:0,isRegexOverride:0};this._session.findController.getState().change(e,!1)}this._session=null}_setSelections(e){this._ignoreSelectionChange=!0,this._editor.setSelections(e),this._ignoreSelectionChange=!1}_expandEmptyToWord(e,t){if(!t.isEmpty())return t;let n=this._editor.getConfiguredWordAtPosition(t.getStartPosition());return n?new Z(t.startLineNumber,n.startColumn,t.startLineNumber,n.endColumn):t}_applySessionResult(e){!e||(this._setSelections(e.selections),e.revealRange&&this._editor.revealRangeInCenterIfOutsideViewport(e.revealRange,e.revealScrollType))}getSession(e){return this._session}addSelectionToNextFindMatch(e){if(!!this._editor.hasModel()){if(!this._session){let t=this._editor.getSelections();if(t.length>1){let i=e.getState().matchCase;if(!wI(this._editor.getModel(),t,i)){let s=this._editor.getModel(),a=[];for(let l=0,c=t.length;l<c;l++)a[l]=this._expandEmptyToWord(s,t[l]);this._editor.setSelections(a);return}}}this._beginSessionIfNeeded(e),this._session&&this._applySessionResult(this._session.addSelectionToNextFindMatch())}}addSelectionToPreviousFindMatch(e){this._beginSessionIfNeeded(e),this._session&&this._applySessionResult(this._session.addSelectionToPreviousFindMatch())}moveSelectionToNextFindMatch(e){this._beginSessionIfNeeded(e),this._session&&this._applySessionResult(this._session.moveSelectionToNextFindMatch())}moveSelectionToPreviousFindMatch(e){this._beginSessionIfNeeded(e),this._session&&this._applySessionResult(this._session.moveSelectionToPreviousFindMatch())}selectAll(e){if(!this._editor.hasModel())return;let t=null,n=e.getState();if(n.isRevealed&&n.searchString.length>0&&n.isRegex)t=this._editor.getModel().findMatches(n.searchString,!0,n.isRegex,n.matchCase,n.wholeWord?this._editor.getOption(115):null,!1,1073741824);else{if(this._beginSessionIfNeeded(e),!this._session)return;t=this._session.selectAll()}if(n.searchScope){let i=n.searchScope,o=[];t.forEach(s=>{i.forEach(a=>{s.range.endLineNumber<=a.endLineNumber&&s.range.startLineNumber>=a.startLineNumber&&o.push(s)})}),t=o}if(t.length>0){let i=this._editor.getSelection();for(let o=0,s=t.length;o<s;o++){let a=t[o];if(a.range.intersectRanges(i)){t[o]=t[0],t[0]=a;break}}this._setSelections(t.map(o=>new Z(o.range.startLineNumber,o.range.startColumn,o.range.endLineNumber,o.range.endColumn)))}}};Pr.ID="editor.contrib.multiCursorController";var ks=class extends N{run(e,t){let n=Pr.get(t);if(!n)return;let i=vn.get(t);if(!i)return;let o=t._getViewModel();if(o){let s=o.getCursorStates();this._run(n,i),tl(s,o.getCursorStates())}}},bI=class extends ks{constructor(){super({id:"editor.action.addSelectionToNextFindMatch",label:u("addSelectionToNextFindMatch","Add Selection To Next Find Match"),alias:"Add Selection To Next Find Match",precondition:void 0,kbOpts:{kbExpr:x.focus,primary:2082,weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"3_multi",title:u({key:"miAddSelectionToNextFindMatch",comment:["&& denotes a mnemonic"]},"Add &&Next Occurrence"),order:5}})}_run(e,t){e.addSelectionToNextFindMatch(t)}},SI=class extends ks{constructor(){super({id:"editor.action.addSelectionToPreviousFindMatch",label:u("addSelectionToPreviousFindMatch","Add Selection To Previous Find Match"),alias:"Add Selection To Previous Find Match",precondition:void 0,menuOpts:{menuId:oe.MenubarSelectionMenu,group:"3_multi",title:u({key:"miAddSelectionToPreviousFindMatch",comment:["&& denotes a mnemonic"]},"Add P&&revious Occurrence"),order:6}})}_run(e,t){e.addSelectionToPreviousFindMatch(t)}},vI=class extends ks{constructor(){super({id:"editor.action.moveSelectionToNextFindMatch",label:u("moveSelectionToNextFindMatch","Move Last Selection To Next Find Match"),alias:"Move Last Selection To Next Find Match",precondition:void 0,kbOpts:{kbExpr:x.focus,primary:$e(2089,2082),weight:100}})}_run(e,t){e.moveSelectionToNextFindMatch(t)}},xI=class extends ks{constructor(){super({id:"editor.action.moveSelectionToPreviousFindMatch",label:u("moveSelectionToPreviousFindMatch","Move Last Selection To Previous Find Match"),alias:"Move Last Selection To Previous Find Match",precondition:void 0})}_run(e,t){e.moveSelectionToPreviousFindMatch(t)}},CI=class extends ks{constructor(){super({id:"editor.action.selectHighlights",label:u("selectAllOccurrencesOfFindMatch","Select All Occurrences of Find Match"),alias:"Select All Occurrences of Find Match",precondition:void 0,kbOpts:{kbExpr:x.focus,primary:3114,weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"3_multi",title:u({key:"miSelectHighlights",comment:["&& denotes a mnemonic"]},"Select All &&Occurrences"),order:7}})}_run(e,t){e.selectAll(t)}},_I=class extends ks{constructor(){super({id:"editor.action.changeAll",label:u("changeAll.label","Change All Occurrences"),alias:"Change All Occurrences",precondition:O.and(x.writable,x.editorTextFocus),kbOpts:{kbExpr:x.editorTextFocus,primary:2108,weight:100},contextMenuOpts:{group:"1_modification",order:1.2}})}_run(e,t){e.selectAll(t)}},tb=class{constructor(e,t,n,i){this.searchText=e,this.matchCase=t,this.wordSeparators=n,this.modelVersionId=i}static softEquals(e,t){return!e&&!t?!0:!e||!t?!1:e.searchText===t.searchText&&e.matchCase===t.matchCase&&e.wordSeparators===t.wordSeparators&&e.modelVersionId===t.modelVersionId}},no=class extends B{constructor(e){super();this.editor=e,this._isEnabled=e.getOption(96),this.decorations=[],this.updateSoon=this._register(new Xe(()=>this._update(),300)),this.state=null,this._register(e.onDidChangeConfiguration(t=>{this._isEnabled=e.getOption(96)})),this._register(e.onDidChangeCursorSelection(t=>{!this._isEnabled||(t.selection.isEmpty()?t.reason===3?(this.state&&this._setState(null),this.updateSoon.schedule()):this._setState(null):this._update())})),this._register(e.onDidChangeModel(t=>{this._setState(null)})),this._register(e.onDidChangeModelContent(t=>{this._isEnabled&&this.updateSoon.schedule()})),this._register(vn.get(e).getState().onFindReplaceStateChange(t=>{this._update()}))}_update(){this._setState(no._createState(this._isEnabled,this.editor))}static _createState(e,t){if(!e||!t.hasModel())return null;let n=t.getSelection();if(n.startLineNumber!==n.endLineNumber)return null;let i=Pr.get(t);if(!i)return null;let o=vn.get(t);if(!o)return null;let s=i.getSession(o);if(!s){let c=t.getSelections();if(c.length>1){let h=o.getState().matchCase;if(!wI(t.getModel(),c,h))return null}s=el.create(t,o)}if(!s||s.currentMatch||/^[ \t]+$/.test(s.searchText)||s.searchText.length>200)return null;let a=o.getState(),l=a.matchCase;if(a.isRevealed){let c=a.searchString;l||(c=c.toLowerCase());let d=s.searchText;if(l||(d=d.toLowerCase()),c===d&&s.matchCase===a.matchCase&&s.wholeWord===a.wholeWord&&!a.isRegex)return null}return new tb(s.searchText,s.matchCase,s.wholeWord?t.getOption(115):null,t.getModel().getVersionId())}_setState(e){if(tb.softEquals(this.state,e)){this.state=e;return}if(this.state=e,!this.state){this.decorations=this.editor.deltaDecorations(this.decorations,[]);return}if(!this.editor.hasModel())return;let t=this.editor.getModel();if(t.isTooLargeForTokenization())return;let n=Wl.has(t)&&this.editor.getOption(71),i=t.findMatches(this.state.searchText,!0,!1,this.state.matchCase,this.state.wordSeparators,!1).map(l=>l.range);i.sort(C.compareRangesUsingStarts);let o=this.editor.getSelections();o.sort(C.compareRangesUsingStarts);let s=[];for(let l=0,c=0,d=i.length,h=o.length;l<d;){let p=i[l];if(c>=h)s.push(p),l++;else{let g=C.compareRangesUsingStarts(p,o[c]);g<0?((o[c].isEmpty()||!C.areIntersecting(p,o[c]))&&s.push(p),l++):(g>0||l++,c++)}}let a=s.map(l=>({range:l,options:n?no._SELECTION_HIGHLIGHT:no._SELECTION_HIGHLIGHT_OVERVIEW}));this.decorations=this.editor.deltaDecorations(this.decorations,a)}dispose(){this._setState(null),super.dispose()}};no.ID="editor.contrib.selectionHighlighter";no._SELECTION_HIGHLIGHT_OVERVIEW=xe.register({description:"selection-highlight-overview",stickiness:1,className:"selectionHighlight",minimap:{color:nt(Ca),position:po.Inline},overviewRuler:{color:nt(Qh),position:wn.Center}});no._SELECTION_HIGHLIGHT=xe.register({description:"selection-highlight",stickiness:1,className:"selectionHighlight"});function wI(r,e,t){let n=uI(r,e[0],!t);for(let i=1,o=e.length;i<o;i++){let s=e[i];if(s.isEmpty())return!1;let a=uI(r,s,!t);if(n!==a)return!1}return!0}function uI(r,e,t){let n=r.getValueInRange(e);return t?n.toLowerCase():n}J(Pr.ID,Pr);J(no.ID,no);I(pI);I(mI);I(gI);I(bI);I(SI);I(vI);I(xI);I(CI);I(_I);I(fI);I(yI);U();ce();Be();Pe();at();ke();Wt();Ht();rt();Pe();qr();bt();Te();var TI=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},Ho={Visible:new de("parameterHintsVisible",!1),MultipleSignatures:new de("parameterHintsMultipleSignatures",!1)};function nb(r,e,t,n){return TI(this,void 0,void 0,function*(){let i=la.ordered(r);for(let o of i)try{let s=yield o.provideSignatureHelp(r,e,n,t);if(s)return s}catch(s){je(s)}})}Ie.registerCommand("_executeSignatureHelpProvider",(r,...e)=>TI(void 0,void 0,void 0,function*(){let[t,n,i]=e;Ue(Ce.isUri(t)),Ue(q.isIPosition(n)),Ue(typeof i=="string"||!i);let o=yield r.get(In).createModelReference(t);try{let s=yield nb(o.object.textEditorModel,q.lift(n),{triggerKind:ui.Invoke,isRetrigger:!1,triggerCharacter:i},ue.None);return s?(setTimeout(()=>s.dispose(),0),s.value):void 0}finally{o.dispose()}}));ne();Te();Ke();Ne();mi();Tn();Ae();U();Ze();Wt();Ni();Oe();ke();Ae();U();Mm();Pe();var WD=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},Mr;(function(r){r.Default={type:0};class e{constructor(i,o){this.request=i,this.previouslyActiveHints=o,this.type=2}}r.Pending=e;class t{constructor(i){this.hints=i,this.type=1}}r.Active=t})(Mr||(Mr={}));var nl=class extends B{constructor(e,t=nl.DEFAULT_DELAY){super();this._onChangedHints=this._register(new $),this.onChangedHints=this._onChangedHints.event,this.triggerOnType=!1,this._state=Mr.Default,this._pendingTriggers=[],this._lastSignatureHelpResult=this._register(new Ye),this.triggerChars=new go,this.retriggerChars=new go,this.triggerId=0,this.editor=e,this.throttledDelayer=new hi(t),this._register(this.editor.onDidBlurEditorWidget(()=>this.cancel())),this._register(this.editor.onDidChangeConfiguration(()=>this.onEditorConfigurationChange())),this._register(this.editor.onDidChangeModel(n=>this.onModelChanged())),this._register(this.editor.onDidChangeModelLanguage(n=>this.onModelChanged())),this._register(this.editor.onDidChangeCursorSelection(n=>this.onCursorChange(n))),this._register(this.editor.onDidChangeModelContent(n=>this.onModelContentChange())),this._register(la.onDidChange(this.onModelChanged,this)),this._register(this.editor.onDidType(n=>this.onDidType(n))),this.onEditorConfigurationChange(),this.onModelChanged()}get state(){return this._state}set state(e){this._state.type===2&&this._state.request.cancel(),this._state=e}cancel(e=!1){this.state=Mr.Default,this.throttledDelayer.cancel(),e||this._onChangedHints.fire(void 0)}trigger(e,t){let n=this.editor.getModel();if(!n||!la.has(n))return;let i=++this.triggerId;this._pendingTriggers.push(e),this.throttledDelayer.trigger(()=>this.doTrigger(i),t).catch(ae)}next(){if(this.state.type!==1)return;let e=this.state.hints.signatures.length,t=this.state.hints.activeSignature,n=t%e===e-1,i=this.editor.getOption(75).cycle;if((e<2||n)&&!i){this.cancel();return}this.updateActiveSignature(n&&i?0:t+1)}previous(){if(this.state.type!==1)return;let e=this.state.hints.signatures.length,t=this.state.hints.activeSignature,n=t===0,i=this.editor.getOption(75).cycle;if((e<2||n)&&!i){this.cancel();return}this.updateActiveSignature(n&&i?e-1:t-1)}updateActiveSignature(e){this.state.type===1&&(this.state=new Mr.Active(Object.assign(Object.assign({},this.state.hints),{activeSignature:e})),this._onChangedHints.fire(this.state.hints))}doTrigger(e){return WD(this,void 0,void 0,function*(){let t=this.state.type===1||this.state.type===2,n=this.getLastActiveHints();if(this.cancel(!0),this._pendingTriggers.length===0)return!1;let i=this._pendingTriggers.reduce(VD);this._pendingTriggers=[];let o={triggerKind:i.triggerKind,triggerCharacter:i.triggerCharacter,isRetrigger:t,activeSignatureHelp:n};if(!this.editor.hasModel())return!1;let s=this.editor.getModel(),a=this.editor.getPosition();this.state=new Mr.Pending(Le(l=>nb(s,a,o,l)),n);try{let l=yield this.state.request;return e!==this.triggerId?(l==null||l.dispose(),!1):!l||!l.value.signatures||l.value.signatures.length===0?(l==null||l.dispose(),this._lastSignatureHelpResult.clear(),this.cancel(),!1):(this.state=new Mr.Active(l.value),this._lastSignatureHelpResult.value=l,this._onChangedHints.fire(this.state.hints),!0)}catch(l){return e===this.triggerId&&(this.state=Mr.Default),ae(l),!1}})}getLastActiveHints(){switch(this.state.type){case 1:return this.state.hints;case 2:return this.state.previouslyActiveHints;default:return}}get isTriggered(){return this.state.type===1||this.state.type===2||this.throttledDelayer.isTriggered()}onModelChanged(){this.cancel(),this.triggerChars=new go,this.retriggerChars=new go;let e=this.editor.getModel();if(!!e)for(let t of la.ordered(e)){for(let n of t.signatureHelpTriggerCharacters||[])this.triggerChars.add(n.charCodeAt(0)),this.retriggerChars.add(n.charCodeAt(0));for(let n of t.signatureHelpRetriggerCharacters||[])this.retriggerChars.add(n.charCodeAt(0))}}onDidType(e){if(!this.triggerOnType)return;let t=e.length-1,n=e.charCodeAt(t);(this.triggerChars.has(n)||this.isTriggered&&this.retriggerChars.has(n))&&this.trigger({triggerKind:ui.TriggerCharacter,triggerCharacter:e.charAt(t)})}onCursorChange(e){e.source==="mouse"?this.cancel():this.isTriggered&&this.trigger({triggerKind:ui.ContentChange})}onModelContentChange(){this.isTriggered&&this.trigger({triggerKind:ui.ContentChange})}onEditorConfigurationChange(){this.triggerOnType=this.editor.getOption(75).enabled,this.triggerOnType||this.cancel()}dispose(){this.cancel(!0),super.dispose()}};nl.DEFAULT_DELAY=120;function VD(r,e){switch(e.triggerKind){case ui.Invoke:return e;case ui.ContentChange:return r;case ui.TriggerCharacter:default:return e}}ne();Te();Fi();Je();Hm();Me();var GD=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},ib=function(r,e){return function(t,n){e(t,n,r)}},Mn=W,jD=At("parameter-hints-next",X.chevronDown,u("parameterHintsNextIcon","Icon for show next parameter hint.")),UD=At("parameter-hints-previous",X.chevronUp,u("parameterHintsPreviousIcon","Icon for show previous parameter hint.")),Pc=class EI extends B{constructor(e,t,n,i){super();this.editor=e,this.renderDisposeables=this._register(new R),this.visible=!1,this.announcedLabel=null,this.allowEditorOverflow=!0,this.markdownRenderer=this._register(new Bn({editor:e},i,n)),this.model=this._register(new nl(e)),this.keyVisible=Ho.Visible.bindTo(t),this.keyMultipleSignatures=Ho.MultipleSignatures.bindTo(t),this._register(this.model.onChangedHints(o=>{o?(this.show(),this.render(o)):this.hide()}))}createParameterHintDOMNodes(){let e=Mn(".editor-widget.parameter-hints-widget"),t=H(e,Mn(".phwrapper"));t.tabIndex=-1;let n=H(t,Mn(".controls")),i=H(n,Mn(".button"+lt.asCSSSelector(UD))),o=H(n,Mn(".overloads")),s=H(n,Mn(".button"+lt.asCSSSelector(jD)));this._register(Ve(i,"click",p=>{Di.stop(p),this.previous()})),this._register(Ve(s,"click",p=>{Di.stop(p),this.next()}));let a=Mn(".body"),l=new Ta(a,{});this._register(l),t.appendChild(l.getDomNode());let c=H(a,Mn(".signature")),d=H(a,Mn(".docs"));e.style.userSelect="text",this.domNodes={element:e,signature:c,overloads:o,docs:d,scrollbar:l},this.editor.addContentWidget(this),this.hide(),this._register(this.editor.onDidChangeCursorSelection(p=>{this.visible&&this.editor.layoutContentWidget(this)}));let h=()=>{if(!this.domNodes)return;let p=this.editor.getOption(43);this.domNodes.element.style.fontSize=`${p.fontSize}px`,this.domNodes.element.style.lineHeight=`${p.lineHeight/p.fontSize}`};h(),this._register(_t.chain(this.editor.onDidChangeConfiguration.bind(this.editor)).filter(p=>p.hasChanged(43)).on(h,null)),this._register(this.editor.onDidLayoutChange(p=>this.updateMaxHeight())),this.updateMaxHeight()}show(){this.visible||(this.domNodes||this.createParameterHintDOMNodes(),this.keyVisible.set(!0),this.visible=!0,setTimeout(()=>{this.domNodes&&this.domNodes.element.classList.add("visible")},100),this.editor.layoutContentWidget(this))}hide(){this.renderDisposeables.clear(),this.visible&&(this.keyVisible.reset(),this.visible=!1,this.announcedLabel=null,this.domNodes&&this.domNodes.element.classList.remove("visible"),this.editor.layoutContentWidget(this))}getPosition(){return this.visible?{position:this.editor.getPosition(),preference:[1,2]}:null}render(e){var t;if(this.renderDisposeables.clear(),!this.domNodes)return;let n=e.signatures.length>1;this.domNodes.element.classList.toggle("multiple",n),this.keyMultipleSignatures.set(n),this.domNodes.signature.innerText="",this.domNodes.docs.innerText="";let i=e.signatures[e.activeSignature];if(!i)return;let o=H(this.domNodes.signature,Mn(".code")),s=this.editor.getOption(43);o.style.fontSize=`${s.fontSize}px`,o.style.fontFamily=s.fontFamily;let a=i.parameters.length>0,l=(t=i.activeParameter)!==null&&t!==void 0?t:e.activeParameter;if(a)this.renderParameters(o,i,l);else{let h=H(o,Mn("span"));h.textContent=i.label}let c=i.parameters[l];if(c!=null&&c.documentation){let h=Mn("span.documentation");if(typeof c.documentation=="string")h.textContent=c.documentation;else{let p=this.renderMarkdownDocs(c.documentation);h.appendChild(p.element)}H(this.domNodes.docs,Mn("p",{},h))}if(i.documentation!==void 0)if(typeof i.documentation=="string")H(this.domNodes.docs,Mn("p",{},i.documentation));else{let h=this.renderMarkdownDocs(i.documentation);H(this.domNodes.docs,h.element)}let d=this.hasDocs(i,c);if(this.domNodes.signature.classList.toggle("has-docs",d),this.domNodes.docs.classList.toggle("empty",!d),this.domNodes.overloads.textContent=String(e.activeSignature+1).padStart(e.signatures.length.toString().length,"0")+"/"+e.signatures.length,c){let h="",p=i.parameters[l];Array.isArray(p.label)?h=i.label.substring(p.label[0],p.label[1]):h=p.label,p.documentation&&(h+=typeof p.documentation=="string"?`, ${p.documentation}`:`, ${p.documentation.value}`),i.documentation&&(h+=typeof i.documentation=="string"?`, ${i.documentation}`:`, ${i.documentation.value}`),this.announcedLabel!==h&&(gt(u("hint","{0}, hint",h)),this.announcedLabel=h)}this.editor.layoutContentWidget(this),this.domNodes.scrollbar.scanDomNode()}renderMarkdownDocs(e){let t=this.renderDisposeables.add(this.markdownRenderer.render(e,{asyncRenderCallback:()=>{var n;(n=this.domNodes)===null||n===void 0||n.scrollbar.scanDomNode()}}));return t.element.classList.add("markdown-docs"),t}hasDocs(e,t){return!!(t&&typeof t.documentation=="string"&&Ol(t.documentation).length>0||t&&typeof t.documentation=="object"&&Ol(t.documentation).value.length>0||e.documentation&&typeof e.documentation=="string"&&Ol(e.documentation).length>0||e.documentation&&typeof e.documentation=="object"&&Ol(e.documentation.value).length>0)}renderParameters(e,t,n){let[i,o]=this.getParameterLabelOffsets(t,n),s=document.createElement("span");s.textContent=t.label.substring(0,i);let a=document.createElement("span");a.textContent=t.label.substring(i,o),a.className="parameter active";let l=document.createElement("span");l.textContent=t.label.substring(o),H(e,s,a,l)}getParameterLabelOffsets(e,t){let n=e.parameters[t];if(n){if(Array.isArray(n.label))return n.label;if(n.label.length){let i=new RegExp(`(\\W|^)${uo(n.label)}(?=\\W|$)`,"g");i.test(e.label);let o=i.lastIndex-n.label.length;return o>=0?[o,i.lastIndex]:[0,0]}else return[0,0]}else return[0,0]}next(){this.editor.focus(),this.model.next()}previous(){this.editor.focus(),this.model.previous()}cancel(){this.model.cancel()}getDomNode(){return this.domNodes||this.createParameterHintDOMNodes(),this.domNodes.element}getId(){return EI.ID}trigger(e){this.model.trigger(e,0)}updateMaxHeight(){if(!this.domNodes)return;let t=`${Math.max(this.editor.getLayoutInfo().height/4,250)}px`;this.domNodes.element.style.maxHeight=t;let n=this.domNodes.element.getElementsByClassName("phwrapper");n.length&&(n[0].style.maxHeight=t)}};Pc.ID="editor.widget.parameterHintsWidget";Pc=GD([ib(1,Q),ib(2,Vt),ib(3,It)],Pc);var $D=Y("editorHoverWidget.highlightForeground",{dark:cr,light:cr,hc:cr},u("editorHoverWidgetHighlightForeground","Foreground color of the active item in the parameter hint."));ye((r,e)=>{let t=r.getColor(va);if(t){let c=r.type===ma.HIGH_CONTRAST?2:1;e.addRule(`.monaco-editor .parameter-hints-widget { border: ${c}px solid ${t}; }`),e.addRule(`.monaco-editor .parameter-hints-widget.multiple .body { border-left: 1px solid ${t.transparent(.5)}; }`),e.addRule(`.monaco-editor .parameter-hints-widget .signature.has-docs { border-bottom: 1px solid ${t.transparent(.5)}; }`)}let n=r.getColor(bo);n&&e.addRule(`.monaco-editor .parameter-hints-widget { background-color: ${n}; }`);let i=r.getColor(Bi);i&&e.addRule(`.monaco-editor .parameter-hints-widget a { color: ${i}; }`);let o=r.getColor(Wi);o&&e.addRule(`.monaco-editor .parameter-hints-widget a:hover { color: ${o}; }`);let s=r.getColor(Sa);s&&e.addRule(`.monaco-editor .parameter-hints-widget { color: ${s}; }`);let a=r.getColor(ga);a&&e.addRule(`.monaco-editor .parameter-hints-widget code { background-color: ${a}; }`);let l=r.getColor($D);l&&e.addRule(`.monaco-editor .parameter-hints-widget .parameter.active { color: ${l}}`)});var KD=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},qD=function(r,e){return function(t,n){e(t,n,r)}},Ls=class II extends B{constructor(e,t){super();this.editor=e,this.widget=this._register(t.createInstance(Pc,this.editor))}static get(e){return e.getContribution(II.ID)}cancel(){this.widget.cancel()}previous(){this.widget.previous()}next(){this.widget.next()}trigger(e){this.widget.trigger(e)}};Ls.ID="editor.controller.parameterHints";Ls=KD([qD(1,he)],Ls);var kI=class extends N{constructor(){super({id:"editor.action.triggerParameterHints",label:u("parameterHints.trigger.label","Trigger Parameter Hints"),alias:"Trigger Parameter Hints",precondition:x.hasSignatureHelpProvider,kbOpts:{kbExpr:x.editorTextFocus,primary:3082,weight:100}})}run(e,t){let n=Ls.get(t);n&&n.trigger({triggerKind:ui.Invoke})}};J(Ls.ID,Ls);I(kI);var ob=100+75,rb=it.bindToContribution(Ls.get);K(new rb({id:"closeParameterHints",precondition:Ho.Visible,handler:r=>r.cancel(),kbOpts:{weight:ob,kbExpr:x.focus,primary:9,secondary:[1033]}}));K(new rb({id:"showPrevParameterHint",precondition:O.and(Ho.Visible,Ho.MultipleSignatures),handler:r=>r.previous(),kbOpts:{weight:ob,kbExpr:x.focus,primary:16,secondary:[528],mac:{primary:16,secondary:[528,302]}}}));K(new rb({id:"showNextParameterHint",precondition:O.and(Ho.Visible,Ho.MultipleSignatures),handler:r=>r.next(),kbOpts:{weight:ob,kbExpr:x.focus,primary:18,secondary:[530],mac:{primary:18,secondary:[530,300]}}}));mi();Oe();at();ke();U();Wt();Ht();pr();ce();Bt();rt();te();Be();Pe();UL();ne();jL();Te();Ke();Eh();Qr();ha();U();rt();ne();Te();On();Je();Me();var XD=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},sb=function(r,e){return function(t,n){e(t,n,r)}},Mc=new de("renameInputVisible",!1,u("renameInputVisible","Whether the rename input widget is visible")),Wp=class{constructor(e,t,n,i,o){this._editor=e,this._acceptKeybindings=t,this._themeService=n,this._keybindingService=i,this._disposables=new R,this.allowEditorOverflow=!0,this._visibleContextKey=Mc.bindTo(o),this._editor.addContentWidget(this),this._disposables.add(this._editor.onDidChangeConfiguration(s=>{s.hasChanged(43)&&this._updateFont()})),this._disposables.add(n.onDidColorThemeChange(this._updateStyles,this))}dispose(){this._disposables.dispose(),this._editor.removeContentWidget(this)}getId(){return"__renameInputWidget"}getDomNode(){if(!this._domNode){this._domNode=document.createElement("div"),this._domNode.className="monaco-editor rename-box",this._input=document.createElement("input"),this._input.className="rename-input",this._input.type="text",this._input.setAttribute("aria-label",u("renameAriaLabel","Rename input. Type new name and press Enter to commit.")),this._domNode.appendChild(this._input),this._label=document.createElement("div"),this._label.className="rename-label",this._domNode.appendChild(this._label);let e=()=>{var t,n;let[i,o]=this._acceptKeybindings;this._keybindingService.lookupKeybinding(i),this._label.innerText=u({key:"label",comment:['placeholders are keybindings, e.g "F2 to Rename, Shift+F2 to Preview"']},"{0} to Rename, {1} to Preview",(t=this._keybindingService.lookupKeybinding(i))===null||t===void 0?void 0:t.getLabel(),(n=this._keybindingService.lookupKeybinding(o))===null||n===void 0?void 0:n.getLabel())};e(),this._disposables.add(this._keybindingService.onDidUpdateKeybindings(e)),this._updateFont(),this._updateStyles(this._themeService.getColorTheme())}return this._domNode}_updateStyles(e){var t,n,i,o;if(!this._input||!this._domNode)return;let s=e.getColor(dr);this._domNode.style.backgroundColor=String((t=e.getColor(Qn))!==null&&t!==void 0?t:""),this._domNode.style.boxShadow=s?` 0 0 8px 2px ${s}`:"",this._domNode.style.color=String((n=e.getColor(Vh))!==null&&n!==void 0?n:""),this._input.style.backgroundColor=String((i=e.getColor(Wh))!==null&&i!==void 0?i:"");let a=e.getColor(Gh);this._input.style.borderWidth=a?"1px":"0px",this._input.style.borderStyle=a?"solid":"none",this._input.style.borderColor=(o=a==null?void 0:a.toString())!==null&&o!==void 0?o:"none"}_updateFont(){if(!this._input||!this._label)return;let e=this._editor.getOption(43);this._input.style.fontFamily=e.fontFamily,this._input.style.fontWeight=e.fontWeight,this._input.style.fontSize=`${e.fontSize}px`,this._label.style.fontSize=`${e.fontSize*.8}px`}getPosition(){return this._visible?{position:this._position,preference:[2,1]}:null}afterRender(e){e||this.cancelInput(!0)}acceptInput(e){this._currentAcceptInput&&this._currentAcceptInput(e)}cancelInput(e){this._currentCancelInput&&this._currentCancelInput(e)}getInput(e,t,n,i,o,s){this._domNode.classList.toggle("preview",o),this._position=new q(e.startLineNumber,e.startColumn),this._input.value=t,this._input.setAttribute("selectionStart",n.toString()),this._input.setAttribute("selectionEnd",i.toString()),this._input.size=Math.max((e.endColumn-e.startColumn)*1.1,20);let a=new R;return new Promise(l=>{this._currentCancelInput=c=>(this._currentAcceptInput=void 0,this._currentCancelInput=void 0,l(c),!0),this._currentAcceptInput=c=>{if(this._input.value.trim().length===0||this._input.value===t){this.cancelInput(!0);return}this._currentAcceptInput=void 0,this._currentCancelInput=void 0,l({newName:this._input.value,wantsPreview:o&&c})},s.onCancellationRequested(()=>this.cancelInput(!0)),a.add(this._editor.onDidBlurEditorWidget(()=>this.cancelInput(!1))),this._show()}).finally(()=>{a.dispose(),this._hide()})}_show(){this._editor.revealLineInCenterIfOutsideViewport(this._position.lineNumber,0),this._visible=!0,this._visibleContextKey.set(!0),this._editor.layoutContentWidget(this),setTimeout(()=>{this._input.focus(),this._input.setSelectionRange(parseInt(this._input.getAttribute("selectionStart")),parseInt(this._input.getAttribute("selectionEnd")))},100)}_hide(){this._visible=!1,this._visibleContextKey.reset(),this._editor.layoutContentWidget(this)}};Wp=XD([sb(2,St),sb(3,Qe),sb(4,Q)],Wp);var YD=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},il=function(r,e){return function(t,n){e(t,n,r)}},Ps=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},Vp=class{constructor(e,t){this.model=e,this.position=t,this._providerRenameIdx=0,this._providers=qS.ordered(e)}hasProvider(){return this._providers.length>0}resolveRenameLocation(e){return Ps(this,void 0,void 0,function*(){let t=[];for(this._providerRenameIdx=0;this._providerRenameIdx<this._providers.length;this._providerRenameIdx++){let i=this._providers[this._providerRenameIdx];if(!i.resolveRenameLocation)break;let o=yield i.resolveRenameLocation(this.model,this.position,e);if(!!o){if(o.rejectReason){t.push(o.rejectReason);continue}return o}}let n=this.model.getWordAtPosition(this.position);return n?{range:new C(this.position.lineNumber,n.startColumn,this.position.lineNumber,n.endColumn),text:n.word,rejectReason:t.length>0?t.join(`
`):void 0}:{range:C.fromPositions(this.position),text:"",rejectReason:t.length>0?t.join(`
`):void 0}})}provideRenameEdits(e,t){return Ps(this,void 0,void 0,function*(){return this._provideRenameEdits(e,this._providerRenameIdx,[],t)})}_provideRenameEdits(e,t,n,i){return Ps(this,void 0,void 0,function*(){let o=this._providers[t];if(!o)return{edits:[],rejectReason:n.join(`
`)};let s=yield o.provideRenameEdits(this.model,this.position,e,i);if(s){if(s.rejectReason)return this._provideRenameEdits(e,t+1,n.concat(s.rejectReason),i)}else return this._provideRenameEdits(e,t+1,n.concat(u("no result","No result.")),i);return s})}};function ZD(r,e,t){return Ps(this,void 0,void 0,function*(){let n=new Vp(r,e),i=yield n.resolveRenameLocation(ue.None);return i!=null&&i.rejectReason?{edits:[],rejectReason:i.rejectReason}:n.provideRenameEdits(t,ue.None)})}var Ms=class LI{constructor(e,t,n,i,o,s,a){this.editor=e,this._instaService=t,this._notificationService=n,this._bulkEditService=i,this._progressService=o,this._logService=s,this._configService=a,this._dispoableStore=new R,this._cts=new Zt,this._renameInputField=this._dispoableStore.add(new ea(()=>this._dispoableStore.add(this._instaService.createInstance(Wp,this.editor,["acceptRenameInput","acceptRenameInputWithPreview"]))))}static get(e){return e.getContribution(LI.ID)}dispose(){this._dispoableStore.dispose(),this._cts.dispose(!0)}run(){return Ps(this,void 0,void 0,function*(){if(this._cts.dispose(!0),!this.editor.hasModel())return;let e=this.editor.getPosition(),t=new Vp(this.editor.getModel(),e);if(!t.hasProvider())return;this._cts=new od(this.editor,5);let n;try{let d=t.resolveRenameLocation(this._cts.token);this._progressService.showWhile(d,250),n=yield d}catch(d){$t.get(this.editor).showMessage(d||u("resolveRenameLocationFailed","An unknown error occurred while resolving rename location"),e);return}if(!n)return;if(n.rejectReason){$t.get(this.editor).showMessage(n.rejectReason,e);return}if(this._cts.token.isCancellationRequested)return;this._cts.dispose(),this._cts=new od(this.editor,5,n.range);let i=this.editor.getSelection(),o=0,s=n.text.length;!C.isEmpty(i)&&!C.spansMultipleLines(i)&&C.containsRange(n.range,i)&&(o=Math.max(0,i.startColumn-n.range.startColumn),s=Math.min(n.range.endColumn,i.endColumn)-n.range.startColumn);let a=this._bulkEditService.hasPreviewHandler()&&this._configService.getValue(this.editor.getModel().uri,"editor.rename.enablePreview"),l=yield this._renameInputField.value.getInput(n.range,n.text,o,s,a,this._cts.token);if(typeof l=="boolean"){l&&this.editor.focus();return}this.editor.focus();let c=Js(t.provideRenameEdits(l.newName,this._cts.token),this._cts.token).then(d=>Ps(this,void 0,void 0,function*(){if(!(!d||!this.editor.hasModel())){if(d.rejectReason){this._notificationService.info(d.rejectReason);return}this.editor.setSelection(C.fromPositions(this.editor.getSelection().getPosition())),this._bulkEditService.apply(Lh.convert(d),{editor:this.editor,showPreview:l.wantsPreview,label:u("label","Renaming '{0}'",n==null?void 0:n.text),quotableLabel:u("quotableLabel","Renaming {0}",n==null?void 0:n.text)}).then(h=>{h.ariaSummary&&gt(u("aria","Successfully renamed '{0}' to '{1}'. Summary: {2}",n.text,l.newName,h.ariaSummary))}).catch(h=>{this._notificationService.error(u("rename.failedApply","Rename failed to apply edits")),this._logService.error(h)})}}),d=>{this._notificationService.error(u("rename.failed","Rename failed to compute edits")),this._logService.error(d)});return this._progressService.showWhile(c,250),c})}acceptRenameInput(e){this._renameInputField.value.acceptInput(e)}cancelRenameInput(){this._renameInputField.value.cancelInput(!0)}};Ms.ID="editor.contrib.renameController";Ms=YD([il(1,he),il(2,dt),il(3,kh),il(4,Co),il(5,ir),il(6,sv)],Ms);var PI=class extends N{constructor(){super({id:"editor.action.rename",label:u("rename.label","Rename Symbol"),alias:"Rename Symbol",precondition:O.and(x.writable,x.hasRenameProvider),kbOpts:{kbExpr:x.editorTextFocus,primary:60,weight:100},contextMenuOpts:{group:"1_modification",order:1.1}})}runCommand(e,t){let n=e.get(Ee),[i,o]=Array.isArray(t)&&t||[void 0,void 0];return Ce.isUri(i)&&q.isIPosition(o)?n.openCodeEditor({resource:i},n.getActiveCodeEditor()).then(s=>{!s||(s.setPosition(o),s.invokeWithinContext(a=>(this.reportTelemetry(a,s),this.run(a,s))))},ae):super.runCommand(e,t)}run(e,t){let n=Ms.get(t);return n?n.run():Promise.resolve()}};J(Ms.ID,Ms);I(PI);var ab=it.bindToContribution(Ms.get);K(new ab({id:"acceptRenameInput",precondition:Mc,handler:r=>r.acceptRenameInput(!1),kbOpts:{weight:100+99,kbExpr:x.focus,primary:3}}));K(new ab({id:"acceptRenameInputWithPreview",precondition:O.and(Mc,O.has("config.editor.rename.enablePreview")),handler:r=>r.acceptRenameInput(!0),kbOpts:{weight:100+99,kbExpr:x.focus,primary:1024+3}}));K(new ab({id:"cancelRenameInput",precondition:Mc,handler:r=>r.cancelRenameInput(),kbOpts:{weight:100+99,kbExpr:x.focus,primary:9,secondary:[1033]}}));yn("_executeDocumentRenameProvider",function(r,e,...t){let[n]=t;return Ue(typeof n=="string"),ZD(r,e,n)});yn("_executePrepareRename",function(r,e){return Ps(this,void 0,void 0,function*(){let n=yield new Vp(r,e).resolveRenameLocation(ue.None);if(n!=null&&n.rejectReason)throw new Error(n.rejectReason);return n})});Xn.as(iv.Configuration).registerConfiguration({id:"editor",properties:{"editor.rename.enablePreview":{scope:5,description:u("enablePreview","Enable/disable the ability to preview changes before renaming"),default:!0,type:"boolean"}}});mt();at();ke();ce();rt();te();wt();Be();Pe();Ze();te();var lb=class{provideSelectionRanges(e,t){let n=[];for(let i of t){let o=[];n.push(o),this._addInWordRanges(o,e,i),this._addWordRanges(o,e,i),this._addWhitespaceLine(o,e,i),o.push({range:e.getFullModelRange()})}return n}_addInWordRanges(e,t,n){let i=t.getWordAtPosition(n);if(!i)return;let{word:o,startColumn:s}=i,a=n.column-s,l=a,c=a,d=0;for(;l>=0;l--){let h=o.charCodeAt(l);if(l!==a&&(h===95||h===45))break;if(ym(h)&&bm(d))break;d=h}for(l+=1;c<o.length;c++){let h=o.charCodeAt(c);if(bm(h)&&ym(d))break;if(h===95||h===45)break;d=h}l<c&&e.push({range:new C(n.lineNumber,s+l,n.lineNumber,s+c)})}_addWordRanges(e,t,n){let i=t.getWordAtPosition(n);i&&e.push({range:new C(n.lineNumber,i.startColumn,n.lineNumber,i.endColumn)})}_addWhitespaceLine(e,t,n){t.getLineLength(n.lineNumber)>0&&t.getLineFirstNonWhitespaceColumn(n.lineNumber)===0&&t.getLineLastNonWhitespaceColumn(n.lineNumber)===0&&e.push({range:new C(n.lineNumber,1,n.lineNumber,t.getLineMaxColumn(n.lineNumber))})}};ne();un();bt();var db=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},Gp=class{constructor(e,t){this.index=e,this.ranges=t}mov(e){let t=this.index+(e?1:-1);if(t<0||t>=this.ranges.length)return this;let n=new Gp(t,this.ranges);return n.ranges[t].equalsRange(this.ranges[this.index])?n.mov(e):n}},Ds=class{constructor(e){this._editor=e,this._ignoreSelection=!1}static get(e){return e.getContribution(Ds.ID)}dispose(){var e;(e=this._selectionListener)===null||e===void 0||e.dispose()}run(e){return db(this,void 0,void 0,function*(){if(!this._editor.hasModel())return;let t=this._editor.getSelections(),n=this._editor.getModel();if(!Ch.has(n)||(this._state||(yield RI(n,t.map(o=>o.getPosition()),this._editor.getOption(101),ue.None).then(o=>{var s;if(!(!Tt(o)||o.length!==t.length)&&!(!this._editor.hasModel()||!ua(this._editor.getSelections(),t,(a,l)=>a.equalsSelection(l)))){for(let a=0;a<o.length;a++)o[a]=o[a].filter(l=>l.containsPosition(t[a].getStartPosition())&&l.containsPosition(t[a].getEndPosition())),o[a].unshift(t[a]);this._state=o.map(a=>new Gp(0,a)),(s=this._selectionListener)===null||s===void 0||s.dispose(),this._selectionListener=this._editor.onDidChangeCursorPosition(()=>{var a;this._ignoreSelection||((a=this._selectionListener)===null||a===void 0||a.dispose(),this._state=void 0)})}})),!this._state))return;this._state=this._state.map(o=>o.mov(e));let i=this._state.map(o=>Z.fromPositions(o.ranges[o.index].getStartPosition(),o.ranges[o.index].getEndPosition()));this._ignoreSelection=!0;try{this._editor.setSelections(i)}finally{this._ignoreSelection=!1}})}};Ds.ID="editor.contrib.smartSelectController";var cb=class extends N{constructor(e,t){super(t);this._forward=e}run(e,t){return db(this,void 0,void 0,function*(){let n=Ds.get(t);n&&(yield n.run(this._forward))})}},MI=class extends cb{constructor(){super(!0,{id:"editor.action.smartSelect.expand",label:u("smartSelect.expand","Expand Selection"),alias:"Expand Selection",precondition:void 0,kbOpts:{kbExpr:x.editorTextFocus,primary:1553,mac:{primary:3345,secondary:[1297]},weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"1_basic",title:u({key:"miSmartSelectGrow",comment:["&& denotes a mnemonic"]},"&&Expand Selection"),order:2}})}};Ie.registerCommandAlias("editor.action.smartSelect.grow","editor.action.smartSelect.expand");var DI=class extends cb{constructor(){super(!1,{id:"editor.action.smartSelect.shrink",label:u("smartSelect.shrink","Shrink Selection"),alias:"Shrink Selection",precondition:void 0,kbOpts:{kbExpr:x.editorTextFocus,primary:1551,mac:{primary:3343,secondary:[1295]},weight:100},menuOpts:{menuId:oe.MenubarSelectionMenu,group:"1_basic",title:u({key:"miSmartSelectShrink",comment:["&& denotes a mnemonic"]},"&&Shrink Selection"),order:3}})}};J(Ds.ID,Ds);I(MI);I(DI);Ch.register("*",new lb);function RI(r,e,t,n){return db(this,void 0,void 0,function*(){let i=Ch.all(r);i.length===1&&i.unshift(new nn);let o=[],s=[];for(let a of i)o.push(Promise.resolve(a.provideSelectionRanges(r,e,n)).then(l=>{if(Tt(l)&&l.length===e.length)for(let c=0;c<e.length;c++){s[c]||(s[c]=[]);for(let d of l[c])C.isIRange(d.range)&&C.containsPosition(d.range,e[c])&&s[c].push(C.lift(d.range))}},je));return yield Promise.all(o),s.map(a=>{if(a.length===0)return[];a.sort((h,p)=>q.isBefore(h.getStartPosition(),p.getStartPosition())?1:q.isBefore(p.getStartPosition(),h.getStartPosition())||q.isBefore(h.getEndPosition(),p.getEndPosition())?-1:q.isBefore(p.getEndPosition(),h.getEndPosition())?1:0);let l=[],c;for(let h of a)(!c||C.containsRange(h,c)&&!C.equalsRange(h,c))&&(l.push(h),c=h);if(!t.selectLeadingAndTrailingWhitespace)return l;let d=[l[0]];for(let h=1;h<l.length;h++){let p=l[h-1],g=l[h];if(g.startLineNumber!==p.startLineNumber||g.endLineNumber!==p.endLineNumber){let y=new C(p.startLineNumber,r.getLineFirstNonWhitespaceColumn(p.startLineNumber),p.endLineNumber,r.getLineLastNonWhitespaceColumn(p.endLineNumber));y.containsRange(p)&&!y.equalsRange(p)&&g.containsRange(y)&&!g.equalsRange(y)&&d.push(y);let v=new C(p.startLineNumber,1,p.endLineNumber,r.getLineMaxColumn(p.endLineNumber));v.containsRange(p)&&!v.equalsRange(y)&&g.containsRange(v)&&!g.equalsRange(v)&&d.push(v)}d.push(g)}return d})})}vv("_executeSelectionRangeProvider",function(r,...e){let[t]=e;return RI(r,t,{selectLeadingAndTrailingWhitespace:!0},ue.None)});cm();ce();ne();var FI=class extends N{constructor(){super({id:"editor.action.forceRetokenize",label:u("forceRetokenize","Developer: Force Retokenize"),alias:"Developer: Force Retokenize",precondition:void 0})}run(e,t){if(!t.hasModel())return;let n=t.getModel();n.resetTokenization();let i=new Zo(!0);n.forceTokenization(n.getLineCount()),i.stop(),console.log(`tokenization took ${i.elapsed()}`)}};I(FI);hb();U();Nn();ce();Bt();ne();var JD=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},AI=function(r,e){return function(t,n){e(t,n,r)}},QD=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},NI="ignoreUnusualLineTerminators";function eR(r,e,t){r.setModelProperty(e.uri,NI,t)}function tR(r,e){return r.getModelProperty(e.uri,NI)}var Dc=class extends B{constructor(e,t,n){super();this._editor=e,this._dialogService=t,this._codeEditorService=n,this._config=this._editor.getOption(112),this._register(this._editor.onDidChangeConfiguration(i=>{i.hasChanged(112)&&(this._config=this._editor.getOption(112),this._checkForUnusualLineTerminators())})),this._register(this._editor.onDidChangeModel(()=>{this._checkForUnusualLineTerminators()})),this._register(this._editor.onDidChangeModelContent(i=>{i.isUndoing||this._checkForUnusualLineTerminators()}))}_checkForUnusualLineTerminators(){return QD(this,void 0,void 0,function*(){if(this._config==="off"||!this._editor.hasModel())return;let e=this._editor.getModel();if(!e.mightContainUnusualLineTerminators()||tR(this._codeEditorService,e)===!0||this._editor.getOption(80))return;if(this._config==="auto"){e.removeUnusualLineTerminators(this._editor.getSelections());return}if(!(yield this._dialogService.confirm({title:u("unusualLineTerminators.title","Unusual Line Terminators"),message:u("unusualLineTerminators.message","Detected unusual line terminators"),detail:u("unusualLineTerminators.detail","The file '{0}' contains one or more unusual line terminator characters, like Line Separator (LS) or Paragraph Separator (PS).\n\nIt is recommended to remove them from the file. This can be configured via `editor.unusualLineTerminators`.",cn(e.uri)),primaryButton:u("unusualLineTerminators.fix","Remove Unusual Line Terminators"),secondaryButton:u("unusualLineTerminators.ignore","Ignore")})).confirmed){eR(this._codeEditorService,e,!0);return}e.removeUnusualLineTerminators(this._editor.getSelections())})}};Dc.ID="editor.contrib.unusualLineTerminatorsDetector";Dc=JD([AI(1,Ea),AI(2,Ee)],Dc);J(Dc.ID,Dc);var fre=Vr(zI());mi();mt();Oe();at();ke();U();ce();te();Be();Hl();Ut();Pe();ne();Te();Je();Me();var iR=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},oR=function(r,e){return function(t,n){e(t,n,r)}},rR=Y("editor.wordHighlightBackground",{dark:"#575757B8",light:"#57575740",hc:null},u("wordHighlight","Background color of a symbol during read-access, like reading a variable. The color must not be opaque so as not to hide underlying decorations."),!0),sR=Y("editor.wordHighlightStrongBackground",{dark:"#004972B8",light:"#0e639c40",hc:null},u("wordHighlightStrong","Background color of a symbol during write-access, like writing to a variable. The color must not be opaque so as not to hide underlying decorations."),!0),aR=Y("editor.wordHighlightBorder",{light:null,dark:null,hc:yo},u("wordHighlightBorder","Border color of a symbol during read-access, like reading a variable.")),lR=Y("editor.wordHighlightStrongBorder",{light:null,dark:null,hc:yo},u("wordHighlightStrongBorder","Border color of a symbol during write-access, like writing to a variable.")),dR=Y("editorOverviewRuler.wordHighlightForeground",{dark:"#A0A0A0CC",light:"#A0A0A0CC",hc:"#A0A0A0CC"},u("overviewRulerWordHighlightForeground","Overview ruler marker color for symbol highlights. The color must not be opaque so as not to hide underlying decorations."),!0),cR=Y("editorOverviewRuler.wordHighlightStrongForeground",{dark:"#C0A0C0CC",light:"#C0A0C0CC",hc:"#C0A0C0CC"},u("overviewRulerWordHighlightStrongForeground","Overview ruler marker color for write-access symbol highlights. The color must not be opaque so as not to hide underlying decorations."),!0),jp=new de("hasWordHighlights",!1);function OI(r,e,t){let n=Wl.ordered(r);return dh(n.map(i=>()=>Promise.resolve(i.provideDocumentHighlights(r,e,t)).then(void 0,je)),Tt)}var pb=class{constructor(e,t,n){this._wordRange=this._getCurrentWordRange(e,t),this.result=Le(i=>this._compute(e,t,n,i))}_getCurrentWordRange(e,t){let n=e.getWordAtPosition(t.getPosition());return n?new C(t.startLineNumber,n.startColumn,t.startLineNumber,n.endColumn):null}isValid(e,t,n){let i=t.startLineNumber,o=t.startColumn,s=t.endColumn,a=this._getCurrentWordRange(e,t),l=Boolean(this._wordRange&&this._wordRange.equalsRange(a));for(let c=0,d=n.length;!l&&c<d;c++){let h=e.getDecorationRange(n[c]);h&&h.startLineNumber===i&&h.startColumn<=o&&h.endColumn>=s&&(l=!0)}return l}cancel(){this.result.cancel()}},HI=class extends pb{_compute(e,t,n,i){return OI(e,t.getPosition(),i).then(o=>o||[])}},BI=class extends pb{constructor(e,t,n){super(e,t,n);this._selectionIsEmpty=t.isEmpty()}_compute(e,t,n,i){return Qs(250,i).then(()=>{if(!t.isEmpty())return[];let o=e.getWordAtPosition(t.getPosition());return!o||o.word.length>1e3?[]:e.findMatches(o.word,!0,!1,!0,n,!1).map(a=>({range:a.range,kind:bh.Text}))})}isValid(e,t,n){let i=t.isEmpty();return this._selectionIsEmpty!==i?!1:super.isValid(e,t,n)}};function hR(r,e,t){return Wl.has(r)?new HI(r,e,t):new BI(r,e,t)}yn("_executeDocumentHighlights",(r,e)=>OI(r,e,ue.None));var Fs=class{constructor(e,t){this.toUnhook=new R,this.workerRequestTokenId=0,this.workerRequestCompleted=!1,this.workerRequestValue=[],this.lastCursorPositionChangeTime=0,this.renderDecorationsTimer=-1,this.editor=e,this._hasWordHighlights=jp.bindTo(t),this._ignorePositionChangeEvent=!1,this.occurrencesHighlight=this.editor.getOption(71),this.model=this.editor.getModel(),this.toUnhook.add(e.onDidChangeCursorPosition(n=>{this._ignorePositionChangeEvent||!this.occurrencesHighlight||this._onPositionChanged(n)})),this.toUnhook.add(e.onDidChangeModelContent(n=>{this._stopAll()})),this.toUnhook.add(e.onDidChangeConfiguration(n=>{let i=this.editor.getOption(71);this.occurrencesHighlight!==i&&(this.occurrencesHighlight=i,this._stopAll())})),this._decorationIds=[],this.workerRequestTokenId=0,this.workerRequest=null,this.workerRequestCompleted=!1,this.lastCursorPositionChangeTime=0,this.renderDecorationsTimer=-1}hasDecorations(){return this._decorationIds.length>0}restore(){!this.occurrencesHighlight||this._run()}_getSortedHighlights(){return Yn(this._decorationIds.map(e=>this.model.getDecorationRange(e)).sort(C.compareRangesUsingStarts))}moveNext(){let e=this._getSortedHighlights(),n=(e.findIndex(o=>o.containsPosition(this.editor.getPosition()))+1)%e.length,i=e[n];try{this._ignorePositionChangeEvent=!0,this.editor.setPosition(i.getStartPosition()),this.editor.revealRangeInCenterIfOutsideViewport(i);let o=this._getWord();if(o){let s=this.editor.getModel().getLineContent(i.startLineNumber);gt(`${s}, ${n+1} of ${e.length} for '${o.word}'`)}}finally{this._ignorePositionChangeEvent=!1}}moveBack(){let e=this._getSortedHighlights(),n=(e.findIndex(o=>o.containsPosition(this.editor.getPosition()))-1+e.length)%e.length,i=e[n];try{this._ignorePositionChangeEvent=!0,this.editor.setPosition(i.getStartPosition()),this.editor.revealRangeInCenterIfOutsideViewport(i);let o=this._getWord();if(o){let s=this.editor.getModel().getLineContent(i.startLineNumber);gt(`${s}, ${n+1} of ${e.length} for '${o.word}'`)}}finally{this._ignorePositionChangeEvent=!1}}_removeDecorations(){this._decorationIds.length>0&&(this._decorationIds=this.editor.deltaDecorations(this._decorationIds,[]),this._hasWordHighlights.set(!1))}_stopAll(){this._removeDecorations(),this.renderDecorationsTimer!==-1&&(clearTimeout(this.renderDecorationsTimer),this.renderDecorationsTimer=-1),this.workerRequest!==null&&(this.workerRequest.cancel(),this.workerRequest=null),this.workerRequestCompleted||(this.workerRequestTokenId++,this.workerRequestCompleted=!0)}_onPositionChanged(e){if(!this.occurrencesHighlight){this._stopAll();return}if(e.reason!==3){this._stopAll();return}this._run()}_getWord(){let e=this.editor.getSelection(),t=e.startLineNumber,n=e.startColumn;return this.model.getWordAtPosition({lineNumber:t,column:n})}_run(){let e=this.editor.getSelection();if(e.startLineNumber!==e.endLineNumber){this._stopAll();return}let t=e.startColumn,n=e.endColumn,i=this._getWord();if(!i||i.startColumn>t||i.endColumn<n){this._stopAll();return}let o=this.workerRequest&&this.workerRequest.isValid(this.model,e,this._decorationIds);if(this.lastCursorPositionChangeTime=new Date().getTime(),o)this.workerRequestCompleted&&this.renderDecorationsTimer!==-1&&(clearTimeout(this.renderDecorationsTimer),this.renderDecorationsTimer=-1,this._beginRenderDecorations());else{this._stopAll();let s=++this.workerRequestTokenId;this.workerRequestCompleted=!1,this.workerRequest=hR(this.model,this.editor.getSelection(),this.editor.getOption(115)),this.workerRequest.result.then(a=>{s===this.workerRequestTokenId&&(this.workerRequestCompleted=!0,this.workerRequestValue=a||[],this._beginRenderDecorations())},ae)}}_beginRenderDecorations(){let e=new Date().getTime(),t=this.lastCursorPositionChangeTime+250;e>=t?(this.renderDecorationsTimer=-1,this.renderDecorations()):this.renderDecorationsTimer=setTimeout(()=>{this.renderDecorations()},t-e)}renderDecorations(){this.renderDecorationsTimer=-1;let e=[];for(let t of this.workerRequestValue)t.range&&e.push({range:t.range,options:Fs._getDecorationOptions(t.kind)});this._decorationIds=this.editor.deltaDecorations(this._decorationIds,e),this._hasWordHighlights.set(this.hasDecorations())}static _getDecorationOptions(e){return e===bh.Write?this._WRITE_OPTIONS:e===bh.Text?this._TEXT_OPTIONS:this._REGULAR_OPTIONS}dispose(){this._stopAll(),this.toUnhook.dispose()}};Fs._WRITE_OPTIONS=xe.register({description:"word-highlight-strong",stickiness:1,className:"wordHighlightStrong",overviewRuler:{color:nt(cR),position:wn.Center},minimap:{color:nt(Ca),position:po.Inline}});Fs._TEXT_OPTIONS=xe.register({description:"selection-highlight",stickiness:1,className:"selectionHighlight",overviewRuler:{color:nt(Qh),position:wn.Center},minimap:{color:nt(Ca),position:po.Inline}});Fs._REGULAR_OPTIONS=xe.register({description:"word-highlight",stickiness:1,className:"wordHighlight",overviewRuler:{color:nt(dR),position:wn.Center},minimap:{color:nt(Ca),position:po.Inline}});var Rs=class WI extends B{constructor(e,t){super();this.wordHighlighter=null;let n=()=>{e.hasModel()&&(this.wordHighlighter=new Fs(e,t))};this._register(e.onDidChangeModel(i=>{this.wordHighlighter&&(this.wordHighlighter.dispose(),this.wordHighlighter=null),n()})),n()}static get(e){return e.getContribution(WI.ID)}saveViewState(){return!!(this.wordHighlighter&&this.wordHighlighter.hasDecorations())}moveNext(){this.wordHighlighter&&this.wordHighlighter.moveNext()}moveBack(){this.wordHighlighter&&this.wordHighlighter.moveBack()}restoreViewState(e){this.wordHighlighter&&e&&this.wordHighlighter.restore()}dispose(){this.wordHighlighter&&(this.wordHighlighter.dispose(),this.wordHighlighter=null),super.dispose()}};Rs.ID="editor.contrib.wordHighlighter";Rs=iR([oR(1,Q)],Rs);var mb=class extends N{constructor(e,t){super(t);this._isNext=e}run(e,t){let n=Rs.get(t);!n||(this._isNext?n.moveNext():n.moveBack())}},VI=class extends mb{constructor(){super(!0,{id:"editor.action.wordHighlight.next",label:u("wordHighlight.next.label","Go to Next Symbol Highlight"),alias:"Go to Next Symbol Highlight",precondition:jp,kbOpts:{kbExpr:x.editorTextFocus,primary:65,weight:100}})}},GI=class extends mb{constructor(){super(!1,{id:"editor.action.wordHighlight.prev",label:u("wordHighlight.previous.label","Go to Previous Symbol Highlight"),alias:"Go to Previous Symbol Highlight",precondition:jp,kbOpts:{kbExpr:x.editorTextFocus,primary:1089,weight:100}})}},jI=class extends N{constructor(){super({id:"editor.action.wordHighlight.trigger",label:u("wordHighlight.trigger.label","Trigger Symbol Highlight"),alias:"Trigger Symbol Highlight",precondition:jp.toNegated(),kbOpts:{kbExpr:x.editorTextFocus,primary:0,weight:100}})}run(e,t,n){let i=Rs.get(t);!i||i.restoreViewState(!0)}};J(Rs.ID,Rs);I(VI);I(GI);I(jI);ye((r,e)=>{let t=r.getColor(Hv);t&&(e.addRule(`.monaco-editor .focused .selectionHighlight { background-color: ${t}; }`),e.addRule(`.monaco-editor .selectionHighlight { background-color: ${t.transparent(.5)}; }`));let n=r.getColor(rR);n&&e.addRule(`.monaco-editor .wordHighlight { background-color: ${n}; }`);let i=r.getColor(sR);i&&e.addRule(`.monaco-editor .wordHighlightStrong { background-color: ${i}; }`);let o=r.getColor(Bv);o&&e.addRule(`.monaco-editor .selectionHighlight { border: 1px ${r.type==="hc"?"dotted":"solid"} ${o}; box-sizing: border-box; }`);let s=r.getColor(aR);s&&e.addRule(`.monaco-editor .wordHighlight { border: 1px ${r.type==="hc"?"dashed":"solid"} ${s}; box-sizing: border-box; }`);let a=r.getColor(lR);a&&e.addRule(`.monaco-editor .wordHighlightStrong { border: 1px ${r.type==="hc"?"dashed":"solid"} ${a}; box-sizing: border-box; }`)});ce();Ys();XL();rt();te();wt();Be();Oi();ne();Te();var ol=class extends it{constructor(e){super(e);this._inSelectionMode=e.inSelectionMode,this._wordNavigationType=e.wordNavigationType}runEditorCommand(e,t,n){if(!t.hasModel())return;let i=lr(t.getOption(115)),o=t.getModel(),a=t.getSelections().map(l=>{let c=new q(l.positionLineNumber,l.positionColumn),d=this._move(i,o,c,this._wordNavigationType);return this._moveTo(l,d,this._inSelectionMode)});if(o.pushStackElement(),t._getViewModel().setCursorStates("moveWordCommand",3,a.map(l=>mx.fromModelSelection(l))),a.length===1){let l=new q(a[0].positionLineNumber,a[0].positionColumn);t.revealPosition(l,0)}}_moveTo(e,t,n){return n?new Z(e.selectionStartLineNumber,e.selectionStartColumn,t.lineNumber,t.column):new Z(t.lineNumber,t.column,t.lineNumber,t.column)}},Bo=class extends ol{_move(e,t,n,i){return _a.moveWordLeft(e,t,n,i)}},Wo=class extends ol{_move(e,t,n,i){return _a.moveWordRight(e,t,n,i)}},UI=class extends Bo{constructor(){super({inSelectionMode:!1,wordNavigationType:0,id:"cursorWordStartLeft",precondition:void 0})}},$I=class extends Bo{constructor(){super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordEndLeft",precondition:void 0})}},KI=class extends Bo{constructor(){var e;super({inSelectionMode:!1,wordNavigationType:1,id:"cursorWordLeft",precondition:void 0,kbOpts:{kbExpr:O.and(x.textInputFocus,(e=O.and(id,ad))===null||e===void 0?void 0:e.negate()),primary:2063,mac:{primary:527},weight:100}})}},qI=class extends Bo{constructor(){super({inSelectionMode:!0,wordNavigationType:0,id:"cursorWordStartLeftSelect",precondition:void 0})}},XI=class extends Bo{constructor(){super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordEndLeftSelect",precondition:void 0})}},YI=class extends Bo{constructor(){var e;super({inSelectionMode:!0,wordNavigationType:1,id:"cursorWordLeftSelect",precondition:void 0,kbOpts:{kbExpr:O.and(x.textInputFocus,(e=O.and(id,ad))===null||e===void 0?void 0:e.negate()),primary:3087,mac:{primary:1551},weight:100}})}},ZI=class extends Bo{constructor(){super({inSelectionMode:!1,wordNavigationType:3,id:"cursorWordAccessibilityLeft",precondition:void 0})}_move(e,t,n,i){return super._move(lr(Pl.wordSeparators.defaultValue),t,n,i)}},JI=class extends Bo{constructor(){super({inSelectionMode:!0,wordNavigationType:3,id:"cursorWordAccessibilityLeftSelect",precondition:void 0})}_move(e,t,n,i){return super._move(lr(Pl.wordSeparators.defaultValue),t,n,i)}},QI=class extends Wo{constructor(){super({inSelectionMode:!1,wordNavigationType:0,id:"cursorWordStartRight",precondition:void 0})}},ek=class extends Wo{constructor(){var e;super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordEndRight",precondition:void 0,kbOpts:{kbExpr:O.and(x.textInputFocus,(e=O.and(id,ad))===null||e===void 0?void 0:e.negate()),primary:2065,mac:{primary:529},weight:100}})}},tk=class extends Wo{constructor(){super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordRight",precondition:void 0})}},nk=class extends Wo{constructor(){super({inSelectionMode:!0,wordNavigationType:0,id:"cursorWordStartRightSelect",precondition:void 0})}},ik=class extends Wo{constructor(){var e;super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordEndRightSelect",precondition:void 0,kbOpts:{kbExpr:O.and(x.textInputFocus,(e=O.and(id,ad))===null||e===void 0?void 0:e.negate()),primary:3089,mac:{primary:1553},weight:100}})}},ok=class extends Wo{constructor(){super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordRightSelect",precondition:void 0})}},rk=class extends Wo{constructor(){super({inSelectionMode:!1,wordNavigationType:3,id:"cursorWordAccessibilityRight",precondition:void 0})}_move(e,t,n,i){return super._move(lr(Pl.wordSeparators.defaultValue),t,n,i)}},sk=class extends Wo{constructor(){super({inSelectionMode:!0,wordNavigationType:3,id:"cursorWordAccessibilityRightSelect",precondition:void 0})}_move(e,t,n,i){return super._move(lr(Pl.wordSeparators.defaultValue),t,n,i)}},rl=class extends it{constructor(e){super(e);this._whitespaceHeuristics=e.whitespaceHeuristics,this._wordNavigationType=e.wordNavigationType}runEditorCommand(e,t,n){if(!t.hasModel())return;let i=lr(t.getOption(115)),o=t.getModel(),s=t.getSelections(),a=t.getOption(5),l=t.getOption(8),c=Ge.getAutoClosingPairs(o.getLanguageId()),d=t._getViewModel(),h=s.map(p=>{let g=this._delete({wordSeparators:i,model:o,selection:p,whitespaceHeuristics:this._whitespaceHeuristics,autoClosingDelete:t.getOption(6),autoClosingBrackets:a,autoClosingQuotes:l,autoClosingPairs:c,autoClosedCharacters:d.getCursorAutoClosedCharacters()},this._wordNavigationType);return new So(g,"")});t.pushUndoStop(),t.executeCommands(this.id,h),t.pushUndoStop()}},Up=class extends rl{_delete(e,t){let n=_a.deleteWordLeft(e,t);return n||new C(1,1,1,1)}},$p=class extends rl{_delete(e,t){let n=_a.deleteWordRight(e,t);if(n)return n;let i=e.model.getLineCount(),o=e.model.getLineMaxColumn(i);return new C(i,o,i,o)}},ak=class extends Up{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:0,id:"deleteWordStartLeft",precondition:x.writable})}},lk=class extends Up{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:2,id:"deleteWordEndLeft",precondition:x.writable})}},dk=class extends Up{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:0,id:"deleteWordLeft",precondition:x.writable,kbOpts:{kbExpr:x.textInputFocus,primary:2049,mac:{primary:513},weight:100}})}},ck=class extends $p{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:0,id:"deleteWordStartRight",precondition:x.writable})}},hk=class extends $p{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:2,id:"deleteWordEndRight",precondition:x.writable})}},uk=class extends $p{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:2,id:"deleteWordRight",precondition:x.writable,kbOpts:{kbExpr:x.textInputFocus,primary:2068,mac:{primary:532},weight:100}})}},pk=class extends N{constructor(){super({id:"deleteInsideWord",precondition:x.writable,label:u("deleteInsideWord","Delete Word"),alias:"Delete Word"})}run(e,t,n){if(!t.hasModel())return;let i=lr(t.getOption(115)),o=t.getModel(),a=t.getSelections().map(l=>{let c=_a.deleteInsideWord(i,o,l);return new So(c,"")});t.pushUndoStop(),t.executeCommands(this.id,a),t.pushUndoStop()}};K(new UI);K(new $I);K(new KI);K(new qI);K(new XI);K(new YI);K(new QI);K(new ek);K(new tk);K(new nk);K(new ik);K(new ok);K(new ZI);K(new JI);K(new rk);K(new sk);K(new ak);K(new lk);K(new dk);K(new ck);K(new hk);K(new uk);I(pk);ce();te();Be();bt();var mk=class extends rl{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:0,id:"deleteWordPartLeft",precondition:x.writable,kbOpts:{kbExpr:x.textInputFocus,primary:0,mac:{primary:769},weight:100}})}_delete(e,t){let n=nd.deleteWordPartLeft(e);return n||new C(1,1,1,1)}},gk=class extends rl{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:2,id:"deleteWordPartRight",precondition:x.writable,kbOpts:{kbExpr:x.textInputFocus,primary:0,mac:{primary:788},weight:100}})}_delete(e,t){let n=nd.deleteWordPartRight(e);if(n)return n;let i=e.model.getLineCount(),o=e.model.getLineMaxColumn(i);return new C(i,o,i,o)}},gb=class extends ol{_move(e,t,n,i){return nd.moveWordPartLeft(e,t,n)}},fk=class extends gb{constructor(){super({inSelectionMode:!1,wordNavigationType:0,id:"cursorWordPartLeft",precondition:void 0,kbOpts:{kbExpr:x.textInputFocus,primary:0,mac:{primary:783},weight:100}})}};Ie.registerCommandAlias("cursorWordPartStartLeft","cursorWordPartLeft");var yk=class extends gb{constructor(){super({inSelectionMode:!0,wordNavigationType:0,id:"cursorWordPartLeftSelect",precondition:void 0,kbOpts:{kbExpr:x.textInputFocus,primary:0,mac:{primary:1807},weight:100}})}};Ie.registerCommandAlias("cursorWordPartStartLeftSelect","cursorWordPartLeftSelect");var fb=class extends ol{_move(e,t,n,i){return nd.moveWordPartRight(e,t,n)}},bk=class extends fb{constructor(){super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordPartRight",precondition:void 0,kbOpts:{kbExpr:x.textInputFocus,primary:0,mac:{primary:785},weight:100}})}},Sk=class extends fb{constructor(){super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordPartRightSelect",precondition:void 0,kbOpts:{kbExpr:x.textInputFocus,primary:0,mac:{primary:1809},weight:100}})}};K(new mk);K(new gk);K(new fk);K(new yk);K(new bk);K(new Sk);or();var _le=Vr(Tk());Ne();U();ce();Fn();var Xp=class extends B{constructor(e){super();this.editor=e,this.widget=null,nh&&(this._register(e.onDidChangeConfiguration(()=>this.update())),this.update())}update(){let e=!this.editor.getOption(80);!this.widget&&e?this.widget=new Nc(this.editor):this.widget&&!e&&(this.widget.dispose(),this.widget=null)}dispose(){super.dispose(),this.widget&&(this.widget.dispose(),this.widget=null)}};Xp.ID="editor.contrib.iPadShowKeyboard";var Nc=class extends B{constructor(e){super();this.editor=e,this._domNode=document.createElement("textarea"),this._domNode.className="iPadShowKeyboard",this._register(Ve(this._domNode,"touchstart",t=>{this.editor.focus()})),this._register(Ve(this._domNode,"focus",t=>{this.editor.focus()})),this.editor.addOverlayWidget(this)}dispose(){this.editor.removeOverlayWidget(this),super.dispose()}getId(){return Nc.ID}getDomNode(){return this._domNode}getPosition(){return{preference:1}}};Nc.ID="editor.contrib.ShowKeyboardWidget";J(Xp.ID,Xp);var Tle=Vr(Pk());ha();or();U();ne();ha();var yR=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},bR=function(r,e){return function(t,n){e(t,n,r)}},Hc=class Yp{constructor(e){this.quickInputService=e,this.registry=Xn.as(Gi.Quickaccess)}provide(e){let t=new R;t.add(e.onDidAccept(()=>{let[o]=e.selectedItems;o&&this.quickInputService.quickAccess.show(o.prefix,{preserveValue:!0})})),t.add(e.onDidChangeValue(o=>{let s=this.registry.getQuickAccessProvider(o.substr(Yp.PREFIX.length));s&&s.prefix&&s.prefix!==Yp.PREFIX&&this.quickInputService.quickAccess.show(s.prefix,{preserveValue:!0})}));let{editorProviders:n,globalProviders:i}=this.getQuickAccessProviders();return e.items=n.length===0||i.length===0?[...n.length===0?i:n]:[{label:u("globalCommands","global commands"),type:"separator"},...i,{label:u("editorCommands","editor commands"),type:"separator"},...n],t}getQuickAccessProviders(){let e=[],t=[];for(let n of this.registry.getQuickAccessProviders().sort((i,o)=>i.prefix.localeCompare(o.prefix)))if(n.prefix!==Yp.PREFIX)for(let i of n.helpEntries){let o=i.prefix||n.prefix,s=o||"\u2026";(i.needsEditor?t:e).push({prefix:o,label:s,ariaLabel:u("helpPickAriaLabel","{0}, {1}",s,i.description),description:i.description})}return{editorProviders:t,globalProviders:e}}};Hc.PREFIX="?";Hc=yR([bR(0,ei)],Hc);Xn.as(Gi.Quickaccess).registerQuickAccessProvider({ctor:Hc,prefix:"",helpEntries:[{description:fv.helpQuickAccessActionLabel,needsEditor:!0}]});U();Am();Qb();U();Wt();Am();Hl();td();Me();var Bc=class{constructor(e){this.options=e,this.rangeHighlightDecorationId=void 0}provide(e,t){var n;let i=new R;e.canAcceptInBackground=!!(!((n=this.options)===null||n===void 0)&&n.canAcceptInBackground),e.matchOnLabel=e.matchOnDescription=e.matchOnDetail=e.sortByLabel=!1;let o=i.add(new Ye);return o.value=this.doProvide(e,t),i.add(this.onDidActiveTextEditorControlChange(()=>{o.value=void 0,o.value=this.doProvide(e,t)})),i}doProvide(e,t){let n=new R,i=this.activeTextEditorControl;if(i&&this.canProvideWithTextEditor(i)){let o={editor:i},s=Ih(i);if(s){let a=_n(i.saveViewState());n.add(s.onDidChangeCursorPosition(()=>{a=_n(i.saveViewState())})),o.restoreViewState=()=>{a&&i===this.activeTextEditorControl&&i.restoreViewState(a)},n.add(oh(t.onCancellationRequested)(()=>{var l;return(l=o.restoreViewState)===null||l===void 0?void 0:l.call(o)}))}n.add(We(()=>this.clearDecorations(i))),n.add(this.provideWithTextEditor(o,e,t))}else n.add(this.provideWithoutTextEditor(e,t));return n}canProvideWithTextEditor(e){return!0}gotoLocation({editor:e},t){e.setSelection(t.range),e.revealRangeInCenter(t.range,0),t.preserveFocus||e.focus()}getModel(e){var t;return uv(e)?(t=e.getModel())===null||t===void 0?void 0:t.modified:e.getModel()}addDecorations(e,t){e.changeDecorations(n=>{let i=[];this.rangeHighlightDecorationId&&(i.push(this.rangeHighlightDecorationId.overviewRulerDecorationId),i.push(this.rangeHighlightDecorationId.rangeHighlightId),this.rangeHighlightDecorationId=void 0);let o=[{range:t,options:{description:"quick-access-range-highlight",className:"rangeHighlight",isWholeLine:!0}},{range:t,options:{description:"quick-access-range-highlight-overview",overviewRuler:{color:nt(px),position:wn.Full}}}],[s,a]=n.deltaDecorations(i,o);this.rangeHighlightDecorationId={rangeHighlightId:s,overviewRulerDecorationId:a}})}clearDecorations(e){let t=this.rangeHighlightDecorationId;t&&(e.changeDecorations(n=>{n.deltaDecorations([t.overviewRulerDecorationId,t.rangeHighlightId],[])}),this.rangeHighlightDecorationId=void 0)}};ne();var ll=class extends Bc{constructor(){super({canAcceptInBackground:!0})}provideWithoutTextEditor(e){let t=u("cannotRunGotoLine","Open a text editor first to go to a line.");return e.items=[{label:t}],e.ariaLabel=t,B.None}provideWithTextEditor(e,t,n){let i=e.editor,o=new R;o.add(t.onDidAccept(l=>{let[c]=t.selectedItems;if(c){if(!this.isValidLineNumber(i,c.lineNumber))return;this.gotoLocation(e,{range:this.toRange(c.lineNumber,c.column),keyMods:t.keyMods,preserveFocus:l.inBackground}),l.inBackground||t.hide()}}));let s=()=>{let l=this.parsePosition(i,t.value.trim().substr(ll.PREFIX.length)),c=this.getPickLabel(i,l.lineNumber,l.column);if(t.items=[{lineNumber:l.lineNumber,column:l.column,label:c}],t.ariaLabel=c,!this.isValidLineNumber(i,l.lineNumber)){this.clearDecorations(i);return}let d=this.toRange(l.lineNumber,l.column);i.revealRangeInCenter(d,0),this.addDecorations(i,d)};s(),o.add(t.onDidChangeValue(()=>s()));let a=Ih(i);return a&&a.getOptions().get(59).renderType===2&&(a.updateOptions({lineNumbers:"on"}),o.add(We(()=>a.updateOptions({lineNumbers:"relative"})))),o}toRange(e=1,t=1){return{startLineNumber:e,startColumn:t,endLineNumber:e,endColumn:t}}parsePosition(e,t){let n=t.split(/,|:|#/).map(o=>parseInt(o,10)).filter(o=>!isNaN(o)),i=this.lineCount(e)+1;return{lineNumber:n[0]>0?n[0]:i+n[0],column:n[1]}}getPickLabel(e,t,n){if(this.isValidLineNumber(e,t))return this.isValidColumn(e,t,n)?u("gotoLineColumnLabel","Go to line {0} and character {1}.",t,n):u("gotoLineLabel","Go to line {0}.",t);let i=e.getPosition()||{lineNumber:1,column:1},o=this.lineCount(e);return o>1?u("gotoLineLabelEmptyWithLimit","Current Line: {0}, Character: {1}. Type a line number between 1 and {2} to navigate to.",i.lineNumber,i.column,o):u("gotoLineLabelEmpty","Current Line: {0}, Character: {1}. Type a line number to navigate to.",i.lineNumber,i.column)}isValidLineNumber(e,t){return!t||typeof t!="number"?!1:t>0&&t<=this.lineCount(e)}isValidColumn(e,t,n){if(!n||typeof n!="number")return!1;let i=this.getModel(e);if(!i)return!1;let o={lineNumber:t,column:n};return i.validatePosition(o).equals(o)}lineCount(e){var t,n;return(n=(t=this.getModel(e))===null||t===void 0?void 0:t.getLineCount())!==null&&n!==void 0?n:0}};ll.PREFIX=":";ha();Bt();Wt();or();Ae();ce();Be();var SR=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},vR=function(r,e){return function(t,n){e(t,n,r)}},Wc=class extends ll{constructor(e){super();this.editorService=e,this.onDidActiveTextEditorControlChange=_t.None}get activeTextEditorControl(){return _n(this.editorService.getFocusedCodeEditor())}};Wc=SR([vR(0,Ee)],Wc);Xn.as(Gi.Quickaccess).registerQuickAccessProvider({ctor:Wc,prefix:Wc.PREFIX,helpEntries:[{description:zm.gotoLineActionLabel,needsEditor:!0}]});var Mk=class extends N{constructor(){super({id:"editor.action.gotoLine",label:zm.gotoLineActionLabel,alias:"Go to Line/Column...",precondition:void 0,kbOpts:{kbExpr:x.focus,primary:2085,mac:{primary:293},weight:100}})}run(e){e.get(ei).quickAccess.show(Wc.PREFIX)}};I(Mk);at();Tn();nS();Fn();Ze();var Fk=[void 0,[]];function Jp(r,e,t=0,n=0){let i=e;return i.values&&i.values.length>1?xR(r,i.values,t,n):Ak(r,e,t,n)}function xR(r,e,t,n){let i=0,o=[];for(let s of e){let[a,l]=Ak(r,s,t,n);if(typeof a!="number")return Fk;i+=a,o.push(...l)}return[i,CR(o)]}function Ak(r,e,t,n){let i=cu(e.original,e.originalLowercase,t,r,r.toLowerCase(),n,!0);return i?[i[0],es(i)]:Fk}function CR(r){let e=r.sort((i,o)=>i.start-o.start),t=[],n;for(let i of e)!n||!_R(n,i)?(n=i,t.push(i)):(n.start=Math.min(n.start,i.start),n.end=Math.max(n.end,i.end));return t}function _R(r,e){return!(r.end<e.start||e.end<r.start)}function Dk(r){return r.startsWith('"')&&r.endsWith('"')}var Nk=" ";function Zp(r){typeof r!="string"&&(r="");let e=r.toLowerCase(),{pathNormalized:t,normalized:n,normalizedLowercase:i}=Rk(r),o=t.indexOf(ah)>=0,s=Dk(r),a,l=r.split(Nk);if(l.length>1)for(let c of l){let d=Dk(c),{pathNormalized:h,normalized:p,normalizedLowercase:g}=Rk(c);p&&(a||(a=[]),a.push({original:c,originalLowercase:c.toLowerCase(),pathNormalized:h,normalized:p,normalizedLowercase:g,expectContiguousMatch:d}))}return{original:r,originalLowercase:e,pathNormalized:t,normalized:n,normalizedLowercase:i,values:a,containsPathSeparator:o,expectContiguousMatch:s}}function Rk(r){let e;co?e=r.replace(/\//g,ah):e=r.replace(/\\/g,ah);let t=TS(e).replace(/\s|"/g,"");return{pathNormalized:e,normalized:t,normalizedLowercase:t.toLowerCase()}}function yb(r){return Array.isArray(r)?Zp(r.map(e=>e.original).join(Nk)):Zp(r.original)}U();Ze();te();Pe();ne();var Vc=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},xn=class extends Bc{constructor(e=Object.create(null)){super(e);this.options=e,this.options.canAcceptInBackground=!0}provideWithoutTextEditor(e){return this.provideLabelPick(e,u("cannotRunGotoSymbolWithoutEditor","To go to a symbol, first open a text editor with symbol information.")),B.None}provideWithTextEditor(e,t,n){let i=e.editor,o=this.getModel(i);return o?pi.has(o)?this.doProvideWithEditorSymbols(e,o,t,n):this.doProvideWithoutEditorSymbols(e,o,t,n):B.None}doProvideWithoutEditorSymbols(e,t,n,i){let o=new R;return this.provideLabelPick(n,u("cannotRunGotoSymbolWithoutSymbolProvider","The active text editor does not provide symbol information.")),Vc(this,void 0,void 0,function*(){!(yield this.waitForLanguageSymbolRegistry(t,o))||i.isCancellationRequested||o.add(this.doProvideWithEditorSymbols(e,t,n,i))}),o}provideLabelPick(e,t){e.items=[{label:t,index:0,kind:14}],e.ariaLabel=t}waitForLanguageSymbolRegistry(e,t){return Vc(this,void 0,void 0,function*(){if(pi.has(e))return!0;let n,i=new Promise(s=>n=s),o=t.add(pi.onDidChange(()=>{pi.has(e)&&(o.dispose(),n(!0))}));return t.add(We(()=>n(!1))),i})}doProvideWithEditorSymbols(e,t,n,i){let o=e.editor,s=new R;s.add(n.onDidAccept(h=>{let[p]=n.selectedItems;p&&p.range&&(this.gotoLocation(e,{range:p.range.selection,keyMods:n.keyMods,preserveFocus:h.inBackground}),h.inBackground||n.hide())})),s.add(n.onDidTriggerItemButton(({item:h})=>{h&&h.range&&(this.gotoLocation(e,{range:h.range.selection,keyMods:n.keyMods,forceSideBySide:!0}),n.hide())}));let a=this.getDocumentSymbols(t,i),l,c=()=>Vc(this,void 0,void 0,function*(){l==null||l.dispose(!0),n.busy=!1,l=new Zt(i),n.busy=!0;try{let h=Zp(n.value.substr(xn.PREFIX.length).trim()),p=yield this.doGetSymbolPicks(a,h,void 0,l.token);if(i.isCancellationRequested)return;p.length>0?n.items=p:h.original.length>0?this.provideLabelPick(n,u("noMatchingSymbolResults","No matching editor symbols")):this.provideLabelPick(n,u("noSymbolResults","No editor symbols"))}finally{i.isCancellationRequested||(n.busy=!1)}});s.add(n.onDidChangeValue(()=>c())),c();let d=!0;return s.add(n.onDidChangeActive(()=>{let[h]=n.activeItems;if(h&&h.range){if(d){d=!1;return}o.revealRangeInCenter(h.range.selection,0),this.addDecorations(o,h.range.decoration)}})),s}doGetSymbolPicks(e,t,n,i){return Vc(this,void 0,void 0,function*(){let o=yield e;if(i.isCancellationRequested)return[];let s=t.original.indexOf(xn.SCOPE_PREFIX)===0,a=s?1:0,l,c;t.values&&t.values.length>1?(l=yb(t.values[0]),c=yb(t.values.slice(1))):l=t;let d=[];for(let g=0;g<o.length;g++){let y=o[g],v=wS(y.name),w=`$(symbol-${$S.toString(y.kind)||"property"}) ${v}`,F=w.length-v.length,M=y.containerName;n!=null&&n.extraContainerLabel&&(M?M=`${n.extraContainerLabel} \u2022 ${M}`:M=n.extraContainerLabel);let z,V,G,ze;if(t.original.length>a){let yt=!1;if(l!==t&&([z,V]=Jp(w,Object.assign(Object.assign({},t),{values:void 0}),a,F),typeof z=="number"&&(yt=!0)),typeof z!="number"&&([z,V]=Jp(w,l,a,F),typeof z!="number"))continue;if(!yt&&c){if(M&&c.original.length>0&&([G,ze]=Jp(M,c)),typeof G!="number")continue;typeof z=="number"&&(z+=G)}}let _e=y.tags&&y.tags.indexOf(1)>=0;d.push({index:g,kind:y.kind,score:z,label:w,ariaLabel:v,description:M,highlights:_e?void 0:{label:V,description:ze},range:{selection:C.collapseToStart(y.selectionRange),decoration:y.range},strikethrough:_e,buttons:(()=>{var yt,Pt;let Mt=!((yt=this.options)===null||yt===void 0)&&yt.openSideBySideDirection?(Pt=this.options)===null||Pt===void 0?void 0:Pt.openSideBySideDirection():void 0;if(!!Mt)return[{iconClass:Mt==="right"?X.splitHorizontal.classNames:X.splitVertical.classNames,tooltip:Mt==="right"?u("openToSide","Open to the Side"):u("openToBottom","Open to the Bottom")}]})()})}let h=d.sort((g,y)=>s?this.compareByKindAndScore(g,y):this.compareByScore(g,y)),p=[];if(s){let w=function(){y&&typeof g=="number"&&v>0&&(y.label=An(Sb[g]||bb,v))},g,y,v=0;for(let F of h)g!==F.kind?(w(),g=F.kind,v=1,y={type:"separator"},p.push(y)):v++,p.push(F);w()}else h.length>0&&(p=[{label:u("symbols","symbols ({0})",d.length),type:"separator"},...h]);return p})}compareByScore(e,t){if(typeof e.score!="number"&&typeof t.score=="number")return 1;if(typeof e.score=="number"&&typeof t.score!="number")return-1;if(typeof e.score=="number"&&typeof t.score=="number"){if(e.score>t.score)return-1;if(e.score<t.score)return 1}return e.index<t.index?-1:e.index>t.index?1:0}compareByKindAndScore(e,t){let n=Sb[e.kind]||bb,i=Sb[t.kind]||bb,o=n.localeCompare(i);return o===0?this.compareByScore(e,t):o}getDocumentSymbols(e,t){return Vc(this,void 0,void 0,function*(){let n=yield Lt.create(e,t);return t.isCancellationRequested?[]:n.asListOfDocumentSymbols()})}};xn.PREFIX="@";xn.SCOPE_PREFIX=":";xn.PREFIX_BY_CATEGORY=`${xn.PREFIX}${xn.SCOPE_PREFIX}`;var bb=u("property","properties ({0})"),Sb={[5]:u("method","methods ({0})"),[11]:u("function","functions ({0})"),[8]:u("_constructor","constructors ({0})"),[12]:u("variable","variables ({0})"),[4]:u("class","classes ({0})"),[22]:u("struct","structs ({0})"),[23]:u("event","events ({0})"),[24]:u("operator","operators ({0})"),[10]:u("interface","interfaces ({0})"),[2]:u("namespace","namespaces ({0})"),[3]:u("package","packages ({0})"),[25]:u("typeParameter","type parameters ({0})"),[1]:u("modules","modules ({0})"),[6]:u("property","properties ({0})"),[9]:u("enum","enumerations ({0})"),[21]:u("enumMember","enumeration members ({0})"),[14]:u("string","strings ({0})"),[0]:u("file","files ({0})"),[17]:u("array","arrays ({0})"),[15]:u("number","numbers ({0})"),[16]:u("boolean","booleans ({0})"),[18]:u("object","objects ({0})"),[19]:u("key","keys ({0})"),[7]:u("field","fields ({0})"),[13]:u("constant","constants ({0})")};ha();Bt();Wt();or();Ae();ce();Be();var wR=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},TR=function(r,e){return function(t,n){e(t,n,r)}},vb=class extends xn{constructor(e){super();this.editorService=e,this.onDidActiveTextEditorControlChange=_t.None}get activeTextEditorControl(){return _n(this.editorService.getFocusedCodeEditor())}};vb=wR([TR(0,Ee)],vb);Xn.as(Gi.Quickaccess).registerQuickAccessProvider({ctor:vb,prefix:xn.PREFIX,helpEntries:[{description:Ph.quickOutlineActionLabel,prefix:xn.PREFIX,needsEditor:!0},{description:Ph.quickOutlineByCategoryActionLabel,prefix:xn.PREFIX_BY_CATEGORY,needsEditor:!0}]});var zk=class extends N{constructor(){super({id:"editor.action.quickOutline",label:Ph.quickOutlineActionLabel,alias:"Go to Symbol...",precondition:x.hasDocumentSymbolProvider,kbOpts:{kbExpr:x.focus,primary:3117,weight:100},contextMenuOpts:{group:"navigation",order:3}})}run(e){e.get(ei).quickAccess.show(xn.PREFIX)}};I(zk);ha();or();Bt();mt();Wt();ne();function xb(r,e){return e&&(r.stack||r.stacktrace)?u("stackTrace.format","{0}: {1}",Hk(r),Ok(r.stack)||Ok(r.stacktrace)):Hk(r)}function Ok(r){return Array.isArray(r)?r.join(`
`):r}function Hk(r){return typeof r.code=="string"&&typeof r.errno=="number"&&typeof r.syscall=="string"?u("nodeExceptionMessage","A system error occurred ({0})",r.message):r.message||u("error.defaultMessage","An unknown error occurred. Please consult the log for more details.")}function Cb(r=null,e=!1){if(!r)return u("error.defaultMessage","An unknown error occurred. Please consult the log for more details.");if(Array.isArray(r)){let t=Yn(r),n=Cb(t[0],e);return t.length>1?u("error.moreErrors","{0} ({1} errors in total)",n,t.length):n}if(gh(r))return r;if(r.detail){let t=r.detail;if(t.error)return xb(t.error,e);if(t.exception)return xb(t.exception,e)}return r.stack?xb(r,e):r.message?r.message:u("error.defaultMessage","An unknown error occurred. Please consult the log for more details.")}ke();U();na();Wt();ne();bt();nr();Ke();On();Oe();at();U();var Qp=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},dl;(function(r){r[r.NO_ACTION=0]="NO_ACTION",r[r.CLOSE_PICKER=1]="CLOSE_PICKER",r[r.REFRESH_PICKER=2]="REFRESH_PICKER",r[r.REMOVE_ITEM=3]="REMOVE_ITEM"})(dl||(dl={}));function _b(r){let e=r;return Array.isArray(e.items)}function ER(r){let e=r;return!!e.picks&&e.additionalPicks instanceof Promise}var cl=class extends B{constructor(e,t){super();this.prefix=e,this.options=t}provide(e,t){var n;let i=new R;e.canAcceptInBackground=!!(!((n=this.options)===null||n===void 0)&&n.canAcceptInBackground),e.matchOnLabel=e.matchOnDescription=e.matchOnDetail=e.sortByLabel=!1;let o,s=i.add(new Ye),a=()=>Qp(this,void 0,void 0,function*(){let l=s.value=new R;o==null||o.dispose(!0),e.busy=!1,o=new Zt(t);let c=o.token,d=e.value.substr(this.prefix.length).trim(),h=this._getPicks(d,l,c),p=(g,y)=>{var v;let w,F;if(_b(g)?(w=g.items,F=g.active):w=g,w.length===0){if(y)return!1;d.length>0&&((v=this.options)===null||v===void 0?void 0:v.noResultsPick)&&(w=[this.options.noResultsPick])}return e.items=w,F&&(e.activeItems=[F]),!0};if(h!==null)if(ER(h)){let g=!1,y=!1;yield Promise.all([(()=>Qp(this,void 0,void 0,function*(){yield Qs(cl.FAST_PICKS_RACE_DELAY),!c.isCancellationRequested&&(y||(g=p(h.picks,!0)))}))(),(()=>Qp(this,void 0,void 0,function*(){e.busy=!0;try{let v=yield h.additionalPicks;if(c.isCancellationRequested)return;let w,F;_b(h.picks)?(w=h.picks.items,F=h.picks.active):w=h.picks;let M,z;if(_b(v)?(M=v.items,z=v.active):M=v,M.length>0||!g){let V;if(!F&&!z){let G=e.activeItems[0];G&&w.indexOf(G)!==-1&&(V=G)}p({items:[...w,...M],active:F||z||V})}}finally{c.isCancellationRequested||(e.busy=!1),y=!0}}))()])}else if(!(h instanceof Promise))p(h);else{e.busy=!0;try{let g=yield h;if(c.isCancellationRequested)return;p(g)}finally{c.isCancellationRequested||(e.busy=!1)}}});return i.add(e.onDidChangeValue(()=>a())),a(),i.add(e.onDidAccept(l=>{let[c]=e.selectedItems;typeof(c==null?void 0:c.accept)=="function"&&(l.inBackground||e.hide(),c.accept(e.keyMods,l))})),i.add(e.onDidTriggerItemButton(({button:l,item:c})=>Qp(this,void 0,void 0,function*(){var d,h;if(typeof c.trigger=="function"){let p=(h=(d=c.buttons)===null||d===void 0?void 0:d.indexOf(l))!==null&&h!==void 0?h:-1;if(p>=0){let g=c.trigger(p,e.keyMods),y=typeof g=="number"?g:yield g;if(t.isCancellationRequested)return;switch(y){case dl.NO_ACTION:break;case dl.CLOSE_PICKER:e.hide();break;case dl.REFRESH_PICKER:a();break;case dl.REMOVE_ITEM:let v=e.items.indexOf(c);if(v!==-1){let w=e.items.slice(),F=w.splice(v,1),M=e.activeItems.filter(V=>V!==F[0]),z=e.keepScrollPosition;e.keepScrollPosition=!0,e.items=w,M&&(e.activeItems=M),e.keepScrollPosition=z}break}}}}))),i}};cl.FAST_PICKS_RACE_DELAY=200;Fh();var Wk=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},Ns=function(r,e){return function(t,n){e(t,n,r)}},Bk=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},hl=class em extends cl{constructor(e,t,n,i,o,s){super(em.PREFIX,e);this.instantiationService=t,this.keybindingService=n,this.commandService=i,this.telemetryService=o,this.dialogService=s,this.commandsHistory=this._register(this.instantiationService.createInstance(zs)),this.options=e}_getPicks(e,t,n){return Bk(this,void 0,void 0,function*(){let i=yield this.getCommandPicks(t,n);if(n.isCancellationRequested)return[];let o=[];for(let c of i){let d=_n(em.WORD_FILTER(e,c.label)),h=c.commandAlias?_n(em.WORD_FILTER(e,c.commandAlias)):void 0;d||h?(c.highlights={label:d,detail:this.options.showAlias?h:void 0},o.push(c)):e===c.commandId&&o.push(c)}let s=new Map;for(let c of o){let d=s.get(c.label);d?(c.description=c.commandId,d.description=d.commandId):s.set(c.label,c)}o.sort((c,d)=>{let h=this.commandsHistory.peek(c.commandId),p=this.commandsHistory.peek(d.commandId);return h&&p?h>p?-1:1:h?-1:p?1:c.label.localeCompare(d.label)});let a=[],l=!1;for(let c=0;c<o.length;c++){let d=o[c],h=this.keybindingService.lookupKeybinding(d.commandId),p=h?u("commandPickAriaLabelWithKeybinding","{0}, {1}",d.label,h.getAriaLabel()):d.label;c===0&&this.commandsHistory.peek(d.commandId)&&(a.push({type:"separator",label:u("recentlyUsed","recently used")}),l=!0),c!==0&&l&&!this.commandsHistory.peek(d.commandId)&&(a.push({type:"separator",label:u("morecCommands","other commands")}),l=!1),a.push(Object.assign(Object.assign({},d),{ariaLabel:p,detail:this.options.showAlias&&d.commandAlias!==d.label?d.commandAlias:void 0,keybinding:h,accept:()=>Bk(this,void 0,void 0,function*(){this.commandsHistory.push(d.commandId),this.telemetryService.publicLog2("workbenchActionExecuted",{id:d.commandId,from:"quick open"});try{yield this.commandService.executeCommand(d.commandId)}catch(g){Li(g)||this.dialogService.show(Xr.Error,u("canNotRun","Command '{0}' resulted in an error ({1})",d.label,Cb(g)))}})}))}return a})}};hl.PREFIX=">";hl.WORD_FILTER=kx(Lx,Mx,Px);hl=Wk([Ns(1,he),Ns(2,Qe),Ns(3,pt),Ns(4,ar),Ns(5,Ea)],hl);var zs=class xt extends B{constructor(e,t){super();this.storageService=e,this.configurationService=t,this.configuredCommandsHistoryLength=0,this.updateConfiguration(),this.load(),this.registerListeners()}registerListeners(){this._register(this.configurationService.onDidChangeConfiguration(()=>this.updateConfiguration()))}updateConfiguration(){this.configuredCommandsHistoryLength=xt.getConfiguredCommandHistoryLength(this.configurationService),xt.cache&&xt.cache.limit!==this.configuredCommandsHistoryLength&&(xt.cache.limit=this.configuredCommandsHistoryLength,xt.saveState(this.storageService))}load(){let e=this.storageService.get(xt.PREF_KEY_CACHE,0),t;if(e)try{t=JSON.parse(e)}catch(i){}let n=xt.cache=new Ri(this.configuredCommandsHistoryLength,1);if(t){let i;t.usesLRU?i=t.entries:i=t.entries.sort((o,s)=>o.value-s.value),i.forEach(o=>n.set(o.key,o.value))}xt.counter=this.storageService.getNumber(xt.PREF_KEY_COUNTER,0,xt.counter)}push(e){!xt.cache||(xt.cache.set(e,xt.counter++),xt.saveState(this.storageService))}peek(e){var t;return(t=xt.cache)===null||t===void 0?void 0:t.peek(e)}static saveState(e){if(!xt.cache)return;let t={usesLRU:!0,entries:[]};xt.cache.forEach((n,i)=>t.entries.push({key:i,value:n})),e.store(xt.PREF_KEY_CACHE,JSON.stringify(t),0,0),e.store(xt.PREF_KEY_COUNTER,xt.counter,0,0)}static getConfiguredCommandHistoryLength(e){var t,n;let o=(n=(t=e.getValue().workbench)===null||t===void 0?void 0:t.commandPalette)===null||n===void 0?void 0:n.history;return typeof o=="number"?o:xt.DEFAULT_COMMANDS_HISTORY_LENGTH}};zs.DEFAULT_COMMANDS_HISTORY_LENGTH=50;zs.PREF_KEY_CACHE="commandPalette.mru.cache";zs.PREF_KEY_COUNTER="commandPalette.mru.counter";zs.counter=1;zs=Wk([Ns(0,en),Ns(1,hn)],zs);var wb=class extends hl{constructor(e,t,n,i,o,s){super(e,t,n,i,o,s)}getCodeEditorCommandPicks(){let e=this.activeTextEditorControl;if(!e)return[];let t=[];for(let n of e.getSupportedActions())t.push({commandId:n.id,commandAlias:n.alias,label:Ax(n.label)||n.id});return t}};Wt();Ke();On();bt();Fh();ce();Be();var IR=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},ul=function(r,e){return function(t,n){e(t,n,r)}},kR=function(r,e,t,n){function i(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function a(d){try{c(n.next(d))}catch(h){s(h)}}function l(d){try{c(n.throw(d))}catch(h){s(h)}}function c(d){d.done?o(d.value):i(d.value).then(a,l)}c((n=n.apply(r,e||[])).next())})},Gc=class extends wb{constructor(e,t,n,i,o,s){super({showAlias:!1},e,n,i,o,s);this.codeEditorService=t}get activeTextEditorControl(){return _n(this.codeEditorService.getFocusedCodeEditor())}getCommandPicks(){return kR(this,void 0,void 0,function*(){return this.getCodeEditorCommandPicks()})}};Gc=IR([ul(0,he),ul(1,Ee),ul(2,Qe),ul(3,pt),ul(4,ar),ul(5,Ea)],Gc);Xn.as(Gi.Quickaccess).registerQuickAccessProvider({ctor:Gc,prefix:Gc.PREFIX,helpEntries:[{description:Om.quickCommandHelp,needsEditor:!0}]});var Vk=class extends N{constructor(){super({id:"editor.action.quickCommand",label:Om.quickCommandActionLabel,alias:"Command Palette",precondition:void 0,kbOpts:{kbExpr:x.focus,primary:59,weight:100},contextMenuOpts:{group:"z_commands",order:1}})}run(e){e.get(ei).quickAccess.show(Gc.PREFIX)}};I(Vk);ce();Bt();nr();Te();Ke();var LR=function(r,e,t,n){var i=arguments.length,o=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(s=r[a])&&(o=(i<3?s(o):i>3?s(e,t,o):s(e,t))||o);return i>3&&o&&Object.defineProperty(e,t,o),o},pl=function(r,e){return function(t,n){e(t,n,r)}},Tb=class extends Ui{constructor(e,t,n,i,o,s,a){super(!0,e,t,n,i,o,s,a)}};Tb=LR([pl(1,Q),pl(2,Ee),pl(3,dt),pl(4,he),pl(5,en),pl(6,hn)],Tb);J(Ui.ID,Tb);ce();Cx();or();var Gk=class extends N{constructor(){super({id:"editor.action.toggleHighContrast",label:yv.toggleHighContrast,alias:"Toggle High Contrast Theme",precondition:void 0});this._originalThemeName=null}run(e,t){let n=e.get(du);this._originalThemeName?(n.setTheme(this._originalThemeName),this._originalThemeName=null):(this._originalThemeName=n.getColorTheme().themeName,n.setTheme("hc-black"))}};I(Gk);var jk="data:text/plain;charset=utf-8;base64,";var Uk="data:text/plain;charset=utf-8;base64,Ly8gRXhwb3NlIGBKU1hgIG5hbWVzcGFjZSBpbiBgZ2xvYmFsYCBuYW1lc3BhY2UKaW1wb3J0ICcuLyc7Cg==";var $k="data:text/plain;charset=utf-8;base64,Ly8gRXhwb3NlIGBKU1hgIG5hbWVzcGFjZSBpbiBgZ2xvYmFsYCBuYW1lc3BhY2UKaW1wb3J0ICcuLyc7Cg==";var Kk="data:text/plain;charset=utf-8;base64,LyoqCiAqIFRoZXNlIGFyZSB0eXBlcyBmb3IgdGhpbmdzIHRoYXQgYXJlIHByZXNlbnQgaW4gdGhlIGBleHBlcmltZW50YWxgIGJ1aWxkcyBvZiBSZWFjdCBidXQgbm90IHlldAogKiBvbiBhIHN0YWJsZSBidWlsZC4KICoKICogT25jZSB0aGV5IGFyZSBwcm9tb3RlZCB0byBzdGFibGUgdGhleSBjYW4ganVzdCBiZSBtb3ZlZCB0byB0aGUgbWFpbiBpbmRleCBmaWxlLgogKgogKiBUbyBsb2FkIHRoZSB0eXBlcyBkZWNsYXJlZCBoZXJlIGluIGFuIGFjdHVhbCBwcm9qZWN0LCB0aGVyZSBhcmUgdGhyZWUgd2F5cy4gVGhlIGVhc2llc3Qgb25lLAogKiBpZiB5b3VyIGB0c2NvbmZpZy5qc29uYCBhbHJlYWR5IGhhcyBhIGAidHlwZXMiYCBhcnJheSBpbiB0aGUgYCJjb21waWxlck9wdGlvbnMiYCBzZWN0aW9uLAogKiBpcyB0byBhZGQgYCJyZWFjdC9leHBlcmltZW50YWwiYCB0byB0aGUgYCJ0eXBlcyJgIGFycmF5LgogKgogKiBBbHRlcm5hdGl2ZWx5LCBhIHNwZWNpZmljIGltcG9ydCBzeW50YXggY2FuIHRvIGJlIHVzZWQgZnJvbSBhIHR5cGVzY3JpcHQgZmlsZS4KICogVGhpcyBtb2R1bGUgZG9lcyBub3QgZXhpc3QgaW4gcmVhbGl0eSwgd2hpY2ggaXMgd2h5IHRoZSB7fSBpcyBpbXBvcnRhbnQ6CiAqCiAqIGBgYHRzCiAqIGltcG9ydCB7fSBmcm9tICdyZWFjdC9leHBlcmltZW50YWwnCiAqIGBgYAogKgogKiBJdCBpcyBhbHNvIHBvc3NpYmxlIHRvIGluY2x1ZGUgaXQgdGhyb3VnaCBhIHRyaXBsZS1zbGFzaCByZWZlcmVuY2U6CiAqCiAqIGBgYHRzCiAqIC8vLyA8cmVmZXJlbmNlIHR5cGVzPSJyZWFjdC9leHBlcmltZW50YWwiIC8+CiAqIGBgYAogKgogKiBFaXRoZXIgdGhlIGltcG9ydCBvciB0aGUgcmVmZXJlbmNlIG9ubHkgbmVlZHMgdG8gYXBwZWFyIG9uY2UsIGFueXdoZXJlIGluIHRoZSBwcm9qZWN0LgogKi8KCi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvYmxvYi9tYXN0ZXIvcGFja2FnZXMvcmVhY3Qvc3JjL1JlYWN0LmpzIHRvIHNlZSBob3cgdGhlIGV4cG9ydHMgYXJlIGRlY2xhcmVkLAovLyBhbmQgaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2Jsb2IvbWFzdGVyL3BhY2thZ2VzL3NoYXJlZC9SZWFjdEZlYXR1cmVGbGFncy5qcyB0byB2ZXJpZnkgd2hpY2ggQVBJcyBhcmUKLy8gZmxhZ2dlZCBleHBlcmltZW50YWwgb3Igbm90LiBFeHBlcmltZW50YWwgQVBJcyB3aWxsIGJlIHRhZ2dlZCB3aXRoIGBfX0VYUEVSSU1FTlRBTF9fYC4KLy8KLy8gRm9yIHRoZSBpbnB1dHMgb2YgdHlwZXMgZXhwb3J0ZWQgYXMgc2ltcGx5IGEgZmliZXIgdGFnLCB0aGUgYGJlZ2luV29ya2AgZnVuY3Rpb24gb2YgUmVhY3RGaWJlckJlZ2luV29yay5qcwovLyBpcyBhIGdvb2QgcGxhY2UgdG8gc3RhcnQgbG9va2luZyBmb3IgZGV0YWlsczsgaXQgZ2VuZXJhbGx5IGNhbGxzIHByb3AgdmFsaWRhdGlvbiBmdW5jdGlvbnMgb3IgZGVsZWdhdGVzCi8vIGFsbCB0YXNrcyBkb25lIGFzIHBhcnQgb2YgdGhlIHJlbmRlciBwaGFzZSAodGhlIGNvbmN1cnJlbnQgcGFydCBvZiB0aGUgUmVhY3QgdXBkYXRlIGN5Y2xlKS4KLy8KLy8gU3VzcGVuc2UtcmVsYXRlZCBoYW5kbGluZyBjYW4gYmUgZm91bmQgaW4gUmVhY3RGaWJlclRocm93LmpzLgoKaW1wb3J0IFJlYWN0ID0gcmVxdWlyZSgnLi9uZXh0Jyk7CgpleHBvcnQge307CgpkZWNsYXJlIG1vZHVsZSAnLicgewogICAgZXhwb3J0IHR5cGUgU3VzcGVuc2VMaXN0UmV2ZWFsT3JkZXIgPSAnZm9yd2FyZHMnIHwgJ2JhY2t3YXJkcycgfCAndG9nZXRoZXInOwogICAgZXhwb3J0IHR5cGUgU3VzcGVuc2VMaXN0VGFpbE1vZGUgPSAnY29sbGFwc2VkJyB8ICdoaWRkZW4nOwoKICAgIGV4cG9ydCBpbnRlcmZhY2UgU3VzcGVuc2VMaXN0Q29tbW9uUHJvcHMgewogICAgICAgIC8qKgogICAgICAgICAqIE5vdGUgdGhhdCBTdXNwZW5zZUxpc3QgcmVxdWlyZSBtb3JlIHRoYW4gb25lIGNoaWxkOwogICAgICAgICAqIGl0IGlzIGEgcnVudGltZSB3YXJuaW5nIHRvIHByb3ZpZGUgb25seSBhIHNpbmdsZSBjaGlsZC4KICAgICAgICAgKgogICAgICAgICAqIEl0IGRvZXMsIGhvd2V2ZXIsIGFsbG93IHRob3NlIGNoaWxkcmVuIHRvIGJlIHdyYXBwZWQgaW5zaWRlIGEgc2luZ2xlCiAgICAgICAgICogbGV2ZWwgb2YgYDxSZWFjdC5GcmFnbWVudD5gLgogICAgICAgICAqLwogICAgICAgIGNoaWxkcmVuOiBSZWFjdEVsZW1lbnQgfCBJdGVyYWJsZTxSZWFjdEVsZW1lbnQ+OwogICAgfQoKICAgIGludGVyZmFjZSBEaXJlY3Rpb25hbFN1c3BlbnNlTGlzdFByb3BzIGV4dGVuZHMgU3VzcGVuc2VMaXN0Q29tbW9uUHJvcHMgewogICAgICAgIC8qKgogICAgICAgICAqIERlZmluZXMgdGhlIG9yZGVyIGluIHdoaWNoIHRoZSBgU3VzcGVuc2VMaXN0YCBjaGlsZHJlbiBzaG91bGQgYmUgcmV2ZWFsZWQuCiAgICAgICAgICovCiAgICAgICAgcmV2ZWFsT3JkZXI6ICdmb3J3YXJkcycgfCAnYmFja3dhcmRzJzsKICAgICAgICAvKioKICAgICAgICAgKiBEaWN0YXRlcyBob3cgdW5sb2FkZWQgaXRlbXMgaW4gYSBTdXNwZW5zZUxpc3QgaXMgc2hvd24uCiAgICAgICAgICoKICAgICAgICAgKiAtIEJ5IGRlZmF1bHQsIGBTdXNwZW5zZUxpc3RgIHdpbGwgc2hvdyBhbGwgZmFsbGJhY2tzIGluIHRoZSBsaXN0LgogICAgICAgICAqIC0gYGNvbGxhcHNlZGAgc2hvd3Mgb25seSB0aGUgbmV4dCBmYWxsYmFjayBpbiB0aGUgbGlzdC4KICAgICAgICAgKiAtIGBoaWRkZW5gIGRvZXNu4oCZdCBzaG93IGFueSB1bmxvYWRlZCBpdGVtcy4KICAgICAgICAgKi8KICAgICAgICB0YWlsPzogU3VzcGVuc2VMaXN0VGFpbE1vZGUgfCB1bmRlZmluZWQ7CiAgICB9CgogICAgaW50ZXJmYWNlIE5vbkRpcmVjdGlvbmFsU3VzcGVuc2VMaXN0UHJvcHMgZXh0ZW5kcyBTdXNwZW5zZUxpc3RDb21tb25Qcm9wcyB7CiAgICAgICAgLyoqCiAgICAgICAgICogRGVmaW5lcyB0aGUgb3JkZXIgaW4gd2hpY2ggdGhlIGBTdXNwZW5zZUxpc3RgIGNoaWxkcmVuIHNob3VsZCBiZSByZXZlYWxlZC4KICAgICAgICAgKi8KICAgICAgICByZXZlYWxPcmRlcj86IEV4Y2x1ZGU8U3VzcGVuc2VMaXN0UmV2ZWFsT3JkZXIsIERpcmVjdGlvbmFsU3VzcGVuc2VMaXN0UHJvcHNbJ3JldmVhbE9yZGVyJ10+IHwgdW5kZWZpbmVkOwogICAgICAgIC8qKgogICAgICAgICAqIFRoZSB0YWlsIHByb3BlcnR5IGlzIGludmFsaWQgd2hlbiBub3QgdXNpbmcgdGhlIGBmb3J3YXJkc2Agb3IgYGJhY2t3YXJkc2AgcmV2ZWFsIG9yZGVycy4KICAgICAgICAgKi8KICAgICAgICB0YWlsPzogbmV2ZXIgfCB1bmRlZmluZWQ7CiAgICB9CgogICAgZXhwb3J0IHR5cGUgU3VzcGVuc2VMaXN0UHJvcHMgPSBEaXJlY3Rpb25hbFN1c3BlbnNlTGlzdFByb3BzIHwgTm9uRGlyZWN0aW9uYWxTdXNwZW5zZUxpc3RQcm9wczsKCiAgICAvKioKICAgICAqIGBTdXNwZW5zZUxpc3RgIGhlbHBzIGNvb3JkaW5hdGUgbWFueSBjb21wb25lbnRzIHRoYXQgY2FuIHN1c3BlbmQgYnkgb3JjaGVzdHJhdGluZyB0aGUgb3JkZXIKICAgICAqIGluIHdoaWNoIHRoZXNlIGNvbXBvbmVudHMgYXJlIHJldmVhbGVkIHRvIHRoZSB1c2VyLgogICAgICoKICAgICAqIFdoZW4gbXVsdGlwbGUgY29tcG9uZW50cyBuZWVkIHRvIGZldGNoIGRhdGEsIHRoaXMgZGF0YSBtYXkgYXJyaXZlIGluIGFuIHVucHJlZGljdGFibGUgb3JkZXIuCiAgICAgKiBIb3dldmVyLCBpZiB5b3Ugd3JhcCB0aGVzZSBpdGVtcyBpbiBhIGBTdXNwZW5zZUxpc3RgLCBSZWFjdCB3aWxsIG5vdCBzaG93IGFuIGl0ZW0gaW4gdGhlIGxpc3QKICAgICAqIHVudGlsIHByZXZpb3VzIGl0ZW1zIGhhdmUgYmVlbiBkaXNwbGF5ZWQgKHRoaXMgYmVoYXZpb3IgaXMgYWRqdXN0YWJsZSkuCiAgICAgKgogICAgICogQHNlZSBodHRwczovL3JlYWN0anMub3JnL2RvY3MvY29uY3VycmVudC1tb2RlLXJlZmVyZW5jZS5odG1sI3N1c3BlbnNlbGlzdAogICAgICogQHNlZSBodHRwczovL3JlYWN0anMub3JnL2RvY3MvY29uY3VycmVudC1tb2RlLXBhdHRlcm5zLmh0bWwjc3VzcGVuc2VsaXN0CiAgICAgKi8KICAgIGV4cG9ydCBjb25zdCBTdXNwZW5zZUxpc3Q6IEV4b3RpY0NvbXBvbmVudDxTdXNwZW5zZUxpc3RQcm9wcz47Cn0K";var qk="data:text/plain;charset=utf-8;base64,";var Xk="data:text/plain;charset=utf-8;base64,Ly8gVHlwZSBkZWZpbml0aW9ucyBmb3IgcHJvcC10eXBlcyAxNS43Ci8vIFByb2plY3Q6IGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3Byb3AtdHlwZXMsIGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0Ci8vIERlZmluaXRpb25zIGJ5OiBEb3Z5ZGFzTmF2aWNrYXMgPGh0dHBzOi8vZ2l0aHViLmNvbS9Eb3Z5ZGFzTmF2aWNrYXM+Ci8vICAgICAgICAgICAgICAgICBGZXJkeSBCdWRoaWRoYXJtYSA8aHR0cHM6Ly9naXRodWIuY29tL2ZlcmRhYmVyPgovLyAgICAgICAgICAgICAgICAgU2ViYXN0aWFuIFNpbGJlcm1hbm4gPGh0dHBzOi8vZ2l0aHViLmNvbS9lcHMxbG9uPgovLyBEZWZpbml0aW9uczogaHR0cHM6Ly9naXRodWIuY29tL0RlZmluaXRlbHlUeXBlZC9EZWZpbml0ZWx5VHlwZWQKLy8gVHlwZVNjcmlwdCBWZXJzaW9uOiAyLjgKCmV4cG9ydCB0eXBlIFJlYWN0Q29tcG9uZW50TGlrZSA9CiAgICB8IHN0cmluZwogICAgfCAoKHByb3BzOiBhbnksIGNvbnRleHQ/OiBhbnkpID0+IGFueSkKICAgIHwgKG5ldyAocHJvcHM6IGFueSwgY29udGV4dD86IGFueSkgPT4gYW55KTsKCmV4cG9ydCBpbnRlcmZhY2UgUmVhY3RFbGVtZW50TGlrZSB7CiAgICB0eXBlOiBSZWFjdENvbXBvbmVudExpa2U7CiAgICBwcm9wczogYW55OwogICAga2V5OiBzdHJpbmcgfCBudW1iZXIgfCBudWxsOwp9CgpleHBvcnQgaW50ZXJmYWNlIFJlYWN0Tm9kZUFycmF5IGV4dGVuZHMgQXJyYXk8UmVhY3ROb2RlTGlrZT4ge30KCmV4cG9ydCB0eXBlIFJlYWN0Tm9kZUxpa2UgPQogICAgfCB7fQogICAgfCBSZWFjdEVsZW1lbnRMaWtlCiAgICB8IFJlYWN0Tm9kZUFycmF5CiAgICB8IHN0cmluZwogICAgfCBudW1iZXIKICAgIHwgYm9vbGVhbgogICAgfCBudWxsCiAgICB8IHVuZGVmaW5lZDsKCmV4cG9ydCBjb25zdCBub21pbmFsVHlwZUhhY2s6IHVuaXF1ZSBzeW1ib2w7CgpleHBvcnQgdHlwZSBJc09wdGlvbmFsPFQ+ID0gdW5kZWZpbmVkIGV4dGVuZHMgVCA/IHRydWUgOiBmYWxzZTsKCmV4cG9ydCB0eXBlIFJlcXVpcmVkS2V5czxWPiA9IHsgW0sgaW4ga2V5b2YgVl0tPzogRXhjbHVkZTxWW0tdLCB1bmRlZmluZWQ+IGV4dGVuZHMgVmFsaWRhdG9yPGluZmVyIFQ+ID8gSXNPcHRpb25hbDxUPiBleHRlbmRzIHRydWUgPyBuZXZlciA6IEsgOiBuZXZlciB9W2tleW9mIFZdOwpleHBvcnQgdHlwZSBPcHRpb25hbEtleXM8Vj4gPSBFeGNsdWRlPGtleW9mIFYsIFJlcXVpcmVkS2V5czxWPj47CmV4cG9ydCB0eXBlIEluZmVyUHJvcHNJbm5lcjxWPiA9IHsgW0sgaW4ga2V5b2YgVl0tPzogSW5mZXJUeXBlPFZbS10+OyB9OwoKZXhwb3J0IGludGVyZmFjZSBWYWxpZGF0b3I8VD4gewogICAgKHByb3BzOiB7IFtrZXk6IHN0cmluZ106IGFueSB9LCBwcm9wTmFtZTogc3RyaW5nLCBjb21wb25lbnROYW1lOiBzdHJpbmcsIGxvY2F0aW9uOiBzdHJpbmcsIHByb3BGdWxsTmFtZTogc3RyaW5nKTogRXJyb3IgfCBudWxsOwogICAgW25vbWluYWxUeXBlSGFja10/OiB7CiAgICAgICAgdHlwZTogVDsKICAgIH0gfCB1bmRlZmluZWQ7Cn0KCmV4cG9ydCBpbnRlcmZhY2UgUmVxdWlyZWFibGU8VD4gZXh0ZW5kcyBWYWxpZGF0b3I8VCB8IHVuZGVmaW5lZCB8IG51bGw+IHsKICAgIGlzUmVxdWlyZWQ6IFZhbGlkYXRvcjxOb25OdWxsYWJsZTxUPj47Cn0KCmV4cG9ydCB0eXBlIFZhbGlkYXRpb25NYXA8VD4gPSB7IFtLIGluIGtleW9mIFRdPzogVmFsaWRhdG9yPFRbS10+IH07CgpleHBvcnQgdHlwZSBJbmZlclR5cGU8Vj4gPSBWIGV4dGVuZHMgVmFsaWRhdG9yPGluZmVyIFQ+ID8gVCA6IGFueTsKZXhwb3J0IHR5cGUgSW5mZXJQcm9wczxWPiA9CiAgICAmIEluZmVyUHJvcHNJbm5lcjxQaWNrPFYsIFJlcXVpcmVkS2V5czxWPj4+CiAgICAmIFBhcnRpYWw8SW5mZXJQcm9wc0lubmVyPFBpY2s8ViwgT3B0aW9uYWxLZXlzPFY+Pj4+OwoKZXhwb3J0IGNvbnN0IGFueTogUmVxdWlyZWFibGU8YW55PjsKZXhwb3J0IGNvbnN0IGFycmF5OiBSZXF1aXJlYWJsZTxhbnlbXT47CmV4cG9ydCBjb25zdCBib29sOiBSZXF1aXJlYWJsZTxib29sZWFuPjsKZXhwb3J0IGNvbnN0IGZ1bmM6IFJlcXVpcmVhYmxlPCguLi5hcmdzOiBhbnlbXSkgPT4gYW55PjsKZXhwb3J0IGNvbnN0IG51bWJlcjogUmVxdWlyZWFibGU8bnVtYmVyPjsKZXhwb3J0IGNvbnN0IG9iamVjdDogUmVxdWlyZWFibGU8b2JqZWN0PjsKZXhwb3J0IGNvbnN0IHN0cmluZzogUmVxdWlyZWFibGU8c3RyaW5nPjsKZXhwb3J0IGNvbnN0IG5vZGU6IFJlcXVpcmVhYmxlPFJlYWN0Tm9kZUxpa2U+OwpleHBvcnQgY29uc3QgZWxlbWVudDogUmVxdWlyZWFibGU8UmVhY3RFbGVtZW50TGlrZT47CmV4cG9ydCBjb25zdCBzeW1ib2w6IFJlcXVpcmVhYmxlPHN5bWJvbD47CmV4cG9ydCBjb25zdCBlbGVtZW50VHlwZTogUmVxdWlyZWFibGU8UmVhY3RDb21wb25lbnRMaWtlPjsKZXhwb3J0IGZ1bmN0aW9uIGluc3RhbmNlT2Y8VD4oZXhwZWN0ZWRDbGFzczogbmV3ICguLi5hcmdzOiBhbnlbXSkgPT4gVCk6IFJlcXVpcmVhYmxlPFQ+OwpleHBvcnQgZnVuY3Rpb24gb25lT2Y8VD4odHlwZXM6IFJlYWRvbmx5QXJyYXk8VD4pOiBSZXF1aXJlYWJsZTxUPjsKZXhwb3J0IGZ1bmN0aW9uIG9uZU9mVHlwZTxUIGV4dGVuZHMgVmFsaWRhdG9yPGFueT4+KHR5cGVzOiBUW10pOiBSZXF1aXJlYWJsZTxOb25OdWxsYWJsZTxJbmZlclR5cGU8VD4+PjsKZXhwb3J0IGZ1bmN0aW9uIGFycmF5T2Y8VD4odHlwZTogVmFsaWRhdG9yPFQ+KTogUmVxdWlyZWFibGU8VFtdPjsKZXhwb3J0IGZ1bmN0aW9uIG9iamVjdE9mPFQ+KHR5cGU6IFZhbGlkYXRvcjxUPik6IFJlcXVpcmVhYmxlPHsgW0sgaW4ga2V5b2YgYW55XTogVDsgfT47CmV4cG9ydCBmdW5jdGlvbiBzaGFwZTxQIGV4dGVuZHMgVmFsaWRhdGlvbk1hcDxhbnk+Pih0eXBlOiBQKTogUmVxdWlyZWFibGU8SW5mZXJQcm9wczxQPj47CmV4cG9ydCBmdW5jdGlvbiBleGFjdDxQIGV4dGVuZHMgVmFsaWRhdGlvbk1hcDxhbnk+Pih0eXBlOiBQKTogUmVxdWlyZWFibGU8UmVxdWlyZWQ8SW5mZXJQcm9wczxQPj4+OwoKLyoqCiAqIEFzc2VydCB0aGF0IHRoZSB2YWx1ZXMgbWF0Y2ggd2l0aCB0aGUgdHlwZSBzcGVjcy4KICogRXJyb3IgbWVzc2FnZXMgYXJlIG1lbW9yaXplZCBhbmQgd2lsbCBvbmx5IGJlIHNob3duIG9uY2UuCiAqCiAqIEBwYXJhbSB0eXBlU3BlY3MgTWFwIG9mIG5hbWUgdG8gYSBSZWFjdFByb3BUeXBlCiAqIEBwYXJhbSB2YWx1ZXMgUnVudGltZSB2YWx1ZXMgdGhhdCBuZWVkIHRvIGJlIHR5cGUtY2hlY2tlZAogKiBAcGFyYW0gbG9jYXRpb24gZS5nLiAicHJvcCIsICJjb250ZXh0IiwgImNoaWxkIGNvbnRleHQiCiAqIEBwYXJhbSBjb21wb25lbnROYW1lIE5hbWUgb2YgdGhlIGNvbXBvbmVudCBmb3IgZXJyb3IgbWVzc2FnZXMKICogQHBhcmFtIGdldFN0YWNrIFJldHVybnMgdGhlIGNvbXBvbmVudCBzdGFjawogKi8KZXhwb3J0IGZ1bmN0aW9uIGNoZWNrUHJvcFR5cGVzKHR5cGVTcGVjczogYW55LCB2YWx1ZXM6IGFueSwgbG9jYXRpb246IHN0cmluZywgY29tcG9uZW50TmFtZTogc3RyaW5nLCBnZXRTdGFjaz86ICgpID0+IGFueSk6IHZvaWQ7CgovKioKICogT25seSBhdmFpbGFibGUgaWYgTk9ERV9FTlY9cHJvZHVjdGlvbgogKi8KZXhwb3J0IGZ1bmN0aW9uIHJlc2V0V2FybmluZ0NhY2hlKCk6IHZvaWQ7Cg==";var Yk="data:text/plain;charset=utf-8;base64,";var Zk="data:text/plain;charset=utf-8;base64,";var Jk="data:text/plain;charset=utf-8;base64,Ly8gRGVmaW5pdGlvbnMgYnk6IEp1bnlvdW5nIENsYXJlIEphbmcgPGh0dHBzOi8vZ2l0aHViLmNvbS9BaWxydW4+Ci8vIFR5cGVTY3JpcHQgVmVyc2lvbjogMy4yCgppbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCcKaW1wb3J0IHsgQ29tcG9uZW50U2VsZWN0b3IsIEludGVycG9sYXRpb24gfSBmcm9tICdAZW1vdGlvbi9zZXJpYWxpemUnCmltcG9ydCB7IFByb3BzT2YsIERpc3RyaWJ1dGl2ZU9taXQsIFRoZW1lIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnCgpleHBvcnQgewogIEFycmF5SW50ZXJwb2xhdGlvbiwKICBDU1NPYmplY3QsCiAgRnVuY3Rpb25JbnRlcnBvbGF0aW9uCn0gZnJvbSAnQGVtb3Rpb24vc2VyaWFsaXplJwoKZXhwb3J0IHsgQ29tcG9uZW50U2VsZWN0b3IsIEludGVycG9sYXRpb24gfQoKLyoqIFNhbWUgYXMgU3R5bGVkT3B0aW9ucyBidXQgc2hvdWxkRm9yd2FyZFByb3AgbXVzdCBiZSBhIHR5cGUgZ3VhcmQgKi8KZXhwb3J0IGludGVyZmFjZSBGaWx0ZXJpbmdTdHlsZWRPcHRpb25zPAogIFByb3BzLAogIEZvcndhcmRlZFByb3BzIGV4dGVuZHMga2V5b2YgUHJvcHMgPSBrZXlvZiBQcm9wcwo+IHsKICBsYWJlbD86IHN0cmluZwogIHNob3VsZEZvcndhcmRQcm9wPyhwcm9wTmFtZTogUHJvcGVydHlLZXkpOiBwcm9wTmFtZSBpcyBGb3J3YXJkZWRQcm9wcwogIHRhcmdldD86IHN0cmluZwp9CgpleHBvcnQgaW50ZXJmYWNlIFN0eWxlZE9wdGlvbnM8UHJvcHM+IHsKICBsYWJlbD86IHN0cmluZwogIHNob3VsZEZvcndhcmRQcm9wPyhwcm9wTmFtZTogUHJvcGVydHlLZXkpOiBib29sZWFuCiAgdGFyZ2V0Pzogc3RyaW5nCn0KCi8qKgogKiBAdHlwZXBhcmFtIENvbXBvbmVudFByb3BzICBQcm9wcyB3aGljaCB3aWxsIGJlIGluY2x1ZGVkIHdoZW4gd2l0aENvbXBvbmVudCBpcyBjYWxsZWQKICogQHR5cGVwYXJhbSBTcGVjaWZpY0NvbXBvbmVudFByb3BzICBQcm9wcyB3aGljaCB3aWxsICpub3QqIGJlIGluY2x1ZGVkIHdoZW4gd2l0aENvbXBvbmVudCBpcyBjYWxsZWQKICovCmV4cG9ydCBpbnRlcmZhY2UgU3R5bGVkQ29tcG9uZW50PAogIENvbXBvbmVudFByb3BzIGV4dGVuZHMge30sCiAgU3BlY2lmaWNDb21wb25lbnRQcm9wcyBleHRlbmRzIHt9ID0ge30sCiAgSlNYUHJvcHMgZXh0ZW5kcyB7fSA9IHt9Cj4gZXh0ZW5kcyBSZWFjdC5GQzxDb21wb25lbnRQcm9wcyAmIFNwZWNpZmljQ29tcG9uZW50UHJvcHMgJiBKU1hQcm9wcz4sCiAgICBDb21wb25lbnRTZWxlY3RvciB7CiAgd2l0aENvbXBvbmVudDxDIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50Q2xhc3M8UmVhY3QuQ29tcG9uZW50UHJvcHM8Qz4+PigKICAgIGNvbXBvbmVudDogQwogICk6IFN0eWxlZENvbXBvbmVudDwKICAgIENvbXBvbmVudFByb3BzICYgUHJvcHNPZjxDPiwKICAgIHt9LAogICAgeyByZWY/OiBSZWFjdC5SZWY8SW5zdGFuY2VUeXBlPEM+PiB9CiAgPgogIHdpdGhDb21wb25lbnQ8QyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudFR5cGU8UmVhY3QuQ29tcG9uZW50UHJvcHM8Qz4+PigKICAgIGNvbXBvbmVudDogQwogICk6IFN0eWxlZENvbXBvbmVudDxDb21wb25lbnRQcm9wcyAmIFByb3BzT2Y8Qz4+CiAgd2l0aENvbXBvbmVudDxUYWcgZXh0ZW5kcyBrZXlvZiBKU1guSW50cmluc2ljRWxlbWVudHM+KAogICAgdGFnOiBUYWcKICApOiBTdHlsZWRDb21wb25lbnQ8Q29tcG9uZW50UHJvcHMsIEpTWC5JbnRyaW5zaWNFbGVtZW50c1tUYWddPgp9CgovKioKICogQHR5cGVwYXJhbSBDb21wb25lbnRQcm9wcyAgUHJvcHMgd2hpY2ggd2lsbCBiZSBpbmNsdWRlZCB3aGVuIHdpdGhDb21wb25lbnQgaXMgY2FsbGVkCiAqIEB0eXBlcGFyYW0gU3BlY2lmaWNDb21wb25lbnRQcm9wcyAgUHJvcHMgd2hpY2ggd2lsbCAqbm90KiBiZSBpbmNsdWRlZCB3aGVuIHdpdGhDb21wb25lbnQgaXMgY2FsbGVkCiAqLwpleHBvcnQgaW50ZXJmYWNlIENyZWF0ZVN0eWxlZENvbXBvbmVudDwKICBDb21wb25lbnRQcm9wcyBleHRlbmRzIHt9LAogIFNwZWNpZmljQ29tcG9uZW50UHJvcHMgZXh0ZW5kcyB7fSA9IHt9LAogIEpTWFByb3BzIGV4dGVuZHMge30gPSB7fQo+IHsKICAvKioKICAgKiBAdHlwZXBhcmFtIEFkZGl0aW9uYWxQcm9wcyAgQWRkaXRpb25hbCBwcm9wcyB0byBhZGQgdG8geW91ciBzdHlsZWQgY29tcG9uZW50CiAgICovCiAgPEFkZGl0aW9uYWxQcm9wcyBleHRlbmRzIHt9ID0ge30+KAogICAgLi4uc3R5bGVzOiBBcnJheTwKICAgICAgSW50ZXJwb2xhdGlvbjwKICAgICAgICBDb21wb25lbnRQcm9wcyAmCiAgICAgICAgICBTcGVjaWZpY0NvbXBvbmVudFByb3BzICYKICAgICAgICAgIEFkZGl0aW9uYWxQcm9wcyAmIHsgdGhlbWU6IFRoZW1lIH0KICAgICAgPgogICAgPgogICk6IFN0eWxlZENvbXBvbmVudDwKICAgIENvbXBvbmVudFByb3BzICYgQWRkaXRpb25hbFByb3BzLAogICAgU3BlY2lmaWNDb21wb25lbnRQcm9wcywKICAgIEpTWFByb3BzCiAgPgoKICAoCiAgICB0ZW1wbGF0ZTogVGVtcGxhdGVTdHJpbmdzQXJyYXksCiAgICAuLi5zdHlsZXM6IEFycmF5PAogICAgICBJbnRlcnBvbGF0aW9uPENvbXBvbmVudFByb3BzICYgU3BlY2lmaWNDb21wb25lbnRQcm9wcyAmIHsgdGhlbWU6IFRoZW1lIH0+CiAgICA+CiAgKTogU3R5bGVkQ29tcG9uZW50PENvbXBvbmVudFByb3BzLCBTcGVjaWZpY0NvbXBvbmVudFByb3BzLCBKU1hQcm9wcz4KCiAgLyoqCiAgICogQHR5cGVwYXJhbSBBZGRpdGlvbmFsUHJvcHMgIEFkZGl0aW9uYWwgcHJvcHMgdG8gYWRkIHRvIHlvdXIgc3R5bGVkIGNvbXBvbmVudAogICAqLwogIDxBZGRpdGlvbmFsUHJvcHMgZXh0ZW5kcyB7fT4oCiAgICB0ZW1wbGF0ZTogVGVtcGxhdGVTdHJpbmdzQXJyYXksCiAgICAuLi5zdHlsZXM6IEFycmF5PAogICAgICBJbnRlcnBvbGF0aW9uPAogICAgICAgIENvbXBvbmVudFByb3BzICYKICAgICAgICAgIFNwZWNpZmljQ29tcG9uZW50UHJvcHMgJgogICAgICAgICAgQWRkaXRpb25hbFByb3BzICYgeyB0aGVtZTogVGhlbWUgfQogICAgICA+CiAgICA+CiAgKTogU3R5bGVkQ29tcG9uZW50PAogICAgQ29tcG9uZW50UHJvcHMgJiBBZGRpdGlvbmFsUHJvcHMsCiAgICBTcGVjaWZpY0NvbXBvbmVudFByb3BzLAogICAgSlNYUHJvcHMKICA+Cn0KCi8qKgogKiBAZGVzYwogKiBUaGlzIGZ1bmN0aW9uIGFjY2VwdHMgYSBSZWFjdCBjb21wb25lbnQgb3IgdGFnICgnZGl2JywgJ2EnIGV0YykuCiAqCiAqIEBleGFtcGxlIHN0eWxlZChNeUNvbXBvbmVudCkoeyB3aWR0aDogMTAwIH0pCiAqIEBleGFtcGxlIHN0eWxlZChNeUNvbXBvbmVudCkobXlDb21wb25lbnRQcm9wcyA9PiAoeyB3aWR0aDogbXlDb21wb25lbnRQcm9wcy53aWR0aCB9KQogKiBAZXhhbXBsZSBzdHlsZWQoJ2RpdicpKHsgd2lkdGg6IDEwMCB9KQogKiBAZXhhbXBsZSBzdHlsZWQoJ2RpdicpPFByb3BzPihwcm9wcyA9PiAoeyB3aWR0aDogcHJvcHMud2lkdGggfSkKICovCmV4cG9ydCBpbnRlcmZhY2UgQ3JlYXRlU3R5bGVkIHsKICA8CiAgICBDIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50Q2xhc3M8UmVhY3QuQ29tcG9uZW50UHJvcHM8Qz4+LAogICAgRm9yd2FyZGVkUHJvcHMgZXh0ZW5kcyBrZXlvZiBSZWFjdC5Db21wb25lbnRQcm9wczxDPiA9IGtleW9mIFJlYWN0LkNvbXBvbmVudFByb3BzPEM+CiAgPigKICAgIGNvbXBvbmVudDogQywKICAgIG9wdGlvbnM6IEZpbHRlcmluZ1N0eWxlZE9wdGlvbnM8UmVhY3QuQ29tcG9uZW50UHJvcHM8Qz4sIEZvcndhcmRlZFByb3BzPgogICk6IENyZWF0ZVN0eWxlZENvbXBvbmVudDwKICAgIFBpY2s8UHJvcHNPZjxDPiwgRm9yd2FyZGVkUHJvcHM+ICYgewogICAgICB0aGVtZT86IFRoZW1lCiAgICB9LAogICAge30sCiAgICB7CiAgICAgIHJlZj86IFJlYWN0LlJlZjxJbnN0YW5jZVR5cGU8Qz4+CiAgICB9CiAgPgoKICA8QyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudENsYXNzPFJlYWN0LkNvbXBvbmVudFByb3BzPEM+Pj4oCiAgICBjb21wb25lbnQ6IEMsCiAgICBvcHRpb25zPzogU3R5bGVkT3B0aW9uczxSZWFjdC5Db21wb25lbnRQcm9wczxDPj4KICApOiBDcmVhdGVTdHlsZWRDb21wb25lbnQ8CiAgICBQcm9wc09mPEM+ICYgewogICAgICB0aGVtZT86IFRoZW1lCiAgICB9LAogICAge30sCiAgICB7CiAgICAgIHJlZj86IFJlYWN0LlJlZjxJbnN0YW5jZVR5cGU8Qz4+CiAgICB9CiAgPgoKICA8CiAgICBDIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50VHlwZTxSZWFjdC5Db21wb25lbnRQcm9wczxDPj4sCiAgICBGb3J3YXJkZWRQcm9wcyBleHRlbmRzIGtleW9mIFJlYWN0LkNvbXBvbmVudFByb3BzPEM+ID0ga2V5b2YgUmVhY3QuQ29tcG9uZW50UHJvcHM8Qz4KICA+KAogICAgY29tcG9uZW50OiBDLAogICAgb3B0aW9uczogRmlsdGVyaW5nU3R5bGVkT3B0aW9uczxSZWFjdC5Db21wb25lbnRQcm9wczxDPiwgRm9yd2FyZGVkUHJvcHM+CiAgKTogQ3JlYXRlU3R5bGVkQ29tcG9uZW50PAogICAgUGljazxQcm9wc09mPEM+LCBGb3J3YXJkZWRQcm9wcz4gJiB7CiAgICAgIHRoZW1lPzogVGhlbWUKICAgIH0KICA+CgogIDxDIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50VHlwZTxSZWFjdC5Db21wb25lbnRQcm9wczxDPj4+KAogICAgY29tcG9uZW50OiBDLAogICAgb3B0aW9ucz86IFN0eWxlZE9wdGlvbnM8UmVhY3QuQ29tcG9uZW50UHJvcHM8Qz4+CiAgKTogQ3JlYXRlU3R5bGVkQ29tcG9uZW50PAogICAgUHJvcHNPZjxDPiAmIHsKICAgICAgdGhlbWU/OiBUaGVtZQogICAgfQogID4KCiAgPAogICAgVGFnIGV4dGVuZHMga2V5b2YgSlNYLkludHJpbnNpY0VsZW1lbnRzLAogICAgRm9yd2FyZGVkUHJvcHMgZXh0ZW5kcyBrZXlvZiBKU1guSW50cmluc2ljRWxlbWVudHNbVGFnXSA9IGtleW9mIEpTWC5JbnRyaW5zaWNFbGVtZW50c1tUYWddCiAgPigKICAgIHRhZzogVGFnLAogICAgb3B0aW9uczogRmlsdGVyaW5nU3R5bGVkT3B0aW9uczxKU1guSW50cmluc2ljRWxlbWVudHNbVGFnXSwgRm9yd2FyZGVkUHJvcHM+CiAgKTogQ3JlYXRlU3R5bGVkQ29tcG9uZW50PAogICAgeyB0aGVtZT86IFRoZW1lOyBhcz86IFJlYWN0LkVsZW1lbnRUeXBlIH0sCiAgICBQaWNrPEpTWC5JbnRyaW5zaWNFbGVtZW50c1tUYWddLCBGb3J3YXJkZWRQcm9wcz4KICA+CgogIDxUYWcgZXh0ZW5kcyBrZXlvZiBKU1guSW50cmluc2ljRWxlbWVudHM+KAogICAgdGFnOiBUYWcsCiAgICBvcHRpb25zPzogU3R5bGVkT3B0aW9uczxKU1guSW50cmluc2ljRWxlbWVudHNbVGFnXT4KICApOiBDcmVhdGVTdHlsZWRDb21wb25lbnQ8CiAgICB7IHRoZW1lPzogVGhlbWU7IGFzPzogUmVhY3QuRWxlbWVudFR5cGUgfSwKICAgIEpTWC5JbnRyaW5zaWNFbGVtZW50c1tUYWddCiAgPgp9CgpkZWNsYXJlIGNvbnN0IHN0eWxlZDogQ3JlYXRlU3R5bGVkCmV4cG9ydCBkZWZhdWx0IHN0eWxlZAo=";var Qk="data:text/plain;charset=utf-8;base64,Ly8gRGVmaW5pdGlvbnMgYnk6IEp1bnlvdW5nIENsYXJlIEphbmcgPGh0dHBzOi8vZ2l0aHViLmNvbS9BaWxydW4+Ci8vIFR5cGVTY3JpcHQgVmVyc2lvbjogMy4yCgppbXBvcnQgeyBUaGVtZSB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JwppbXBvcnQgeyBDcmVhdGVTdHlsZWQgYXMgQmFzZUNyZWF0ZVN0eWxlZCwgQ3JlYXRlU3R5bGVkQ29tcG9uZW50IH0gZnJvbSAnLi9iYXNlJwoKZXhwb3J0IHsKICBBcnJheUludGVycG9sYXRpb24sCiAgQ29tcG9uZW50U2VsZWN0b3IsCiAgQ1NTT2JqZWN0LAogIEZ1bmN0aW9uSW50ZXJwb2xhdGlvbiwKICBJbnRlcnBvbGF0aW9uLAogIFN0eWxlZENvbXBvbmVudCwKICBTdHlsZWRPcHRpb25zLAogIENyZWF0ZVN0eWxlZENvbXBvbmVudAp9IGZyb20gJy4vYmFzZScKCmV4cG9ydCB0eXBlIFN0eWxlZFRhZ3MgPSB7CiAgW1RhZyBpbiBrZXlvZiBKU1guSW50cmluc2ljRWxlbWVudHNdOiBDcmVhdGVTdHlsZWRDb21wb25lbnQ8CiAgICB7CiAgICAgIHRoZW1lPzogVGhlbWUKICAgICAgYXM/OiBSZWFjdC5FbGVtZW50VHlwZQogICAgfSwKICAgIEpTWC5JbnRyaW5zaWNFbGVtZW50c1tUYWddCiAgPgp9CgpleHBvcnQgaW50ZXJmYWNlIENyZWF0ZVN0eWxlZCBleHRlbmRzIEJhc2VDcmVhdGVTdHlsZWQsIFN0eWxlZFRhZ3Mge30KCmRlY2xhcmUgY29uc3Qgc3R5bGVkOiBDcmVhdGVTdHlsZWQKZXhwb3J0IGRlZmF1bHQgc3R5bGVkCg==";var eL="data:text/plain;charset=utf-8;base64,Ly8gRGVmaW5pdGlvbnMgYnk6IEp1bnlvdW5nIENsYXJlIEphbmcgPGh0dHBzOi8vZ2l0aHViLmNvbS9BaWxydW4+Ci8vIFR5cGVTY3JpcHQgVmVyc2lvbjogMi4yCmltcG9ydCB7IEVtb3Rpb25DYWNoZSB9IGZyb20gJ0BlbW90aW9uL3V0aWxzJwoKZXhwb3J0IHsgRW1vdGlvbkNhY2hlIH0KCmV4cG9ydCBpbnRlcmZhY2UgU3R5bGlzRWxlbWVudCB7CiAgdHlwZTogc3RyaW5nCiAgdmFsdWU6IHN0cmluZwogIHByb3BzOiBBcnJheTxzdHJpbmc+IHwgc3RyaW5nCiAgcm9vdDogU3R5bGlzRWxlbWVudCB8IG51bGwKICBwYXJlbnQ6IFN0eWxpc0VsZW1lbnQgfCBudWxsCiAgY2hpbGRyZW46IEFycmF5PFN0eWxpc0VsZW1lbnQ+IHwgc3RyaW5nCiAgbGluZTogbnVtYmVyCiAgY29sdW1uOiBudW1iZXIKICBsZW5ndGg6IG51bWJlcgogIHJldHVybjogc3RyaW5nCn0KZXhwb3J0IHR5cGUgU3R5bGlzUGx1Z2luQ2FsbGJhY2sgPSAoCiAgZWxlbWVudDogU3R5bGlzRWxlbWVudCwKICBpbmRleDogbnVtYmVyLAogIGNoaWxkcmVuOiBBcnJheTxTdHlsaXNFbGVtZW50PiwKICBjYWxsYmFjazogU3R5bGlzUGx1Z2luQ2FsbGJhY2sKKSA9PiBzdHJpbmcgfCB2b2lkCgpleHBvcnQgdHlwZSBTdHlsaXNQbHVnaW4gPSAoCiAgZWxlbWVudDogU3R5bGlzRWxlbWVudCwKICBpbmRleDogbnVtYmVyLAogIGNoaWxkcmVuOiBBcnJheTxTdHlsaXNFbGVtZW50PiwKICBjYWxsYmFjazogU3R5bGlzUGx1Z2luQ2FsbGJhY2sKKSA9PiBzdHJpbmcgfCB2b2lkCgpleHBvcnQgaW50ZXJmYWNlIE9wdGlvbnMgewogIG5vbmNlPzogc3RyaW5nCiAgc3R5bGlzUGx1Z2lucz86IEFycmF5PFN0eWxpc1BsdWdpbj4KICBrZXk6IHN0cmluZwogIGNvbnRhaW5lcj86IEhUTUxFbGVtZW50CiAgc3BlZWR5PzogYm9vbGVhbgogIC8qKiBAZGVwcmVjYXRlIHVzZSBgaW5zZXJ0aW9uUG9pbnRgIGluc3RlYWQgKi8KICBwcmVwZW5kPzogYm9vbGVhbgogIGluc2VydGlvblBvaW50PzogSFRNTEVsZW1lbnQKfQoKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlQ2FjaGUob3B0aW9uczogT3B0aW9ucyk6IEVtb3Rpb25DYWNoZQo=";var tL="data:text/plain;charset=utf-8;base64,Ly8gRGVmaW5pdGlvbnMgYnk6IEp1bnlvdW5nIENsYXJlIEphbmcgPGh0dHBzOi8vZ2l0aHViLmNvbS9BaWxydW4+Ci8vIFR5cGVTY3JpcHQgVmVyc2lvbjogMy40CgppbXBvcnQgeyBFbW90aW9uQ2FjaGUgfSBmcm9tICdAZW1vdGlvbi9jYWNoZScKaW1wb3J0IHsKICBBcnJheUludGVycG9sYXRpb24sCiAgQ29tcG9uZW50U2VsZWN0b3IsCiAgQ1NTSW50ZXJwb2xhdGlvbiwKICBDU1NPYmplY3QsCiAgRnVuY3Rpb25JbnRlcnBvbGF0aW9uLAogIEludGVycG9sYXRpb24sCiAgS2V5ZnJhbWVzLAogIFNlcmlhbGl6ZWRTdHlsZXMKfSBmcm9tICdAZW1vdGlvbi9zZXJpYWxpemUnCmltcG9ydCB7CiAgQ2xhc3NBdHRyaWJ1dGVzLAogIENvbnRleHQsCiAgUHJvdmlkZXIsCiAgRkMsCiAgUmVhY3RFbGVtZW50LAogIFJlYWN0Tm9kZSwKICBSZWYsCiAgY3JlYXRlRWxlbWVudAp9IGZyb20gJ3JlYWN0JwppbXBvcnQgeyBFbW90aW9uSlNYIH0gZnJvbSAnLi9qc3gtbmFtZXNwYWNlJwoKZXhwb3J0IHsKICBBcnJheUludGVycG9sYXRpb24sCiAgQ29tcG9uZW50U2VsZWN0b3IsCiAgQ1NTT2JqZWN0LAogIEVtb3Rpb25DYWNoZSwKICBGdW5jdGlvbkludGVycG9sYXRpb24sCiAgSW50ZXJwb2xhdGlvbiwKICBLZXlmcmFtZXMsCiAgU2VyaWFsaXplZFN0eWxlcwp9CgpleHBvcnQgKiBmcm9tICcuL3RoZW1pbmcnCmV4cG9ydCAqIGZyb20gJy4vaGVscGVyJwoKLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1lbXB0eS1pbnRlcmZhY2UKZXhwb3J0IGludGVyZmFjZSBUaGVtZSB7fQoKZXhwb3J0IGNvbnN0IFRoZW1lQ29udGV4dDogQ29udGV4dDxvYmplY3Q+CmV4cG9ydCBjb25zdCBDYWNoZVByb3ZpZGVyOiBQcm92aWRlcjxFbW90aW9uQ2FjaGU+CmV4cG9ydCBmdW5jdGlvbiB3aXRoRW1vdGlvbkNhY2hlPFByb3BzLCBSZWZUeXBlID0gYW55PigKICBmdW5jOiAocHJvcHM6IFByb3BzLCBjb250ZXh0OiBFbW90aW9uQ2FjaGUsIHJlZjogUmVmPFJlZlR5cGU+KSA9PiBSZWFjdE5vZGUKKTogRkM8UHJvcHMgJiBDbGFzc0F0dHJpYnV0ZXM8UmVmVHlwZT4+CgpleHBvcnQgZnVuY3Rpb24gY3NzKAogIHRlbXBsYXRlOiBUZW1wbGF0ZVN0cmluZ3NBcnJheSwKICAuLi5hcmdzOiBBcnJheTxDU1NJbnRlcnBvbGF0aW9uPgopOiBTZXJpYWxpemVkU3R5bGVzCmV4cG9ydCBmdW5jdGlvbiBjc3MoLi4uYXJnczogQXJyYXk8Q1NTSW50ZXJwb2xhdGlvbj4pOiBTZXJpYWxpemVkU3R5bGVzCgpleHBvcnQgaW50ZXJmYWNlIEdsb2JhbFByb3BzIHsKICBzdHlsZXM6IEludGVycG9sYXRpb248VGhlbWU+Cn0KCi8qKgogKiBAZGVzYwogKiBKU1ggZ2VuZXJpYyBhcmUgc3VwcG9ydGVkIG9ubHkgYWZ0ZXIgVFNAMi45CiAqLwpleHBvcnQgZnVuY3Rpb24gR2xvYmFsKHByb3BzOiBHbG9iYWxQcm9wcyk6IFJlYWN0RWxlbWVudAoKZXhwb3J0IGZ1bmN0aW9uIGtleWZyYW1lcygKICB0ZW1wbGF0ZTogVGVtcGxhdGVTdHJpbmdzQXJyYXksCiAgLi4uYXJnczogQXJyYXk8Q1NTSW50ZXJwb2xhdGlvbj4KKTogS2V5ZnJhbWVzCmV4cG9ydCBmdW5jdGlvbiBrZXlmcmFtZXMoLi4uYXJnczogQXJyYXk8Q1NTSW50ZXJwb2xhdGlvbj4pOiBLZXlmcmFtZXMKCmV4cG9ydCBpbnRlcmZhY2UgQXJyYXlDbGFzc05hbWVzQXJnIGV4dGVuZHMgQXJyYXk8Q2xhc3NOYW1lc0FyZz4ge30KZXhwb3J0IHR5cGUgQ2xhc3NOYW1lc0FyZyA9CiAgfCB1bmRlZmluZWQKICB8IG51bGwKICB8IHN0cmluZwogIHwgYm9vbGVhbgogIHwgeyBbY2xhc3NOYW1lOiBzdHJpbmddOiBib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZCB9CiAgfCBBcnJheUNsYXNzTmFtZXNBcmcKCmV4cG9ydCBpbnRlcmZhY2UgQ2xhc3NOYW1lc0NvbnRlbnQgewogIGNzcyh0ZW1wbGF0ZTogVGVtcGxhdGVTdHJpbmdzQXJyYXksIC4uLmFyZ3M6IEFycmF5PENTU0ludGVycG9sYXRpb24+KTogc3RyaW5nCiAgY3NzKC4uLmFyZ3M6IEFycmF5PENTU0ludGVycG9sYXRpb24+KTogc3RyaW5nCiAgY3goLi4uYXJnczogQXJyYXk8Q2xhc3NOYW1lc0FyZz4pOiBzdHJpbmcKICB0aGVtZTogVGhlbWUKfQpleHBvcnQgaW50ZXJmYWNlIENsYXNzTmFtZXNQcm9wcyB7CiAgY2hpbGRyZW4oY29udGVudDogQ2xhc3NOYW1lc0NvbnRlbnQpOiBSZWFjdE5vZGUKfQovKioKICogQGRlc2MKICogSlNYIGdlbmVyaWMgYXJlIHN1cHBvcnRlZCBvbmx5IGFmdGVyIFRTQDIuOQogKi8KZXhwb3J0IGZ1bmN0aW9uIENsYXNzTmFtZXMocHJvcHM6IENsYXNzTmFtZXNQcm9wcyk6IFJlYWN0RWxlbWVudAoKZXhwb3J0IGNvbnN0IGpzeDogdHlwZW9mIGNyZWF0ZUVsZW1lbnQKZXhwb3J0IG5hbWVzcGFjZSBqc3ggewogIG5hbWVzcGFjZSBKU1ggewogICAgaW50ZXJmYWNlIEVsZW1lbnQgZXh0ZW5kcyBFbW90aW9uSlNYLkVsZW1lbnQge30KICAgIGludGVyZmFjZSBFbGVtZW50Q2xhc3MgZXh0ZW5kcyBFbW90aW9uSlNYLkVsZW1lbnRDbGFzcyB7fQogICAgaW50ZXJmYWNlIEVsZW1lbnRBdHRyaWJ1dGVzUHJvcGVydHkKICAgICAgZXh0ZW5kcyBFbW90aW9uSlNYLkVsZW1lbnRBdHRyaWJ1dGVzUHJvcGVydHkge30KICAgIGludGVyZmFjZSBFbGVtZW50Q2hpbGRyZW5BdHRyaWJ1dGUKICAgICAgZXh0ZW5kcyBFbW90aW9uSlNYLkVsZW1lbnRDaGlsZHJlbkF0dHJpYnV0ZSB7fQogICAgdHlwZSBMaWJyYXJ5TWFuYWdlZEF0dHJpYnV0ZXM8QywgUD4gPSBFbW90aW9uSlNYLkxpYnJhcnlNYW5hZ2VkQXR0cmlidXRlczwKICAgICAgQywKICAgICAgUAogICAgPgogICAgaW50ZXJmYWNlIEludHJpbnNpY0F0dHJpYnV0ZXMgZXh0ZW5kcyBFbW90aW9uSlNYLkludHJpbnNpY0F0dHJpYnV0ZXMge30KICAgIGludGVyZmFjZSBJbnRyaW5zaWNDbGFzc0F0dHJpYnV0ZXM8VD4KICAgICAgZXh0ZW5kcyBFbW90aW9uSlNYLkludHJpbnNpY0NsYXNzQXR0cmlidXRlczxUPiB7fQogICAgdHlwZSBJbnRyaW5zaWNFbGVtZW50cyA9IEVtb3Rpb25KU1guSW50cmluc2ljRWxlbWVudHMKICB9Cn0K";var tm="data:text/plain;charset=utf-8;base64,ZXhwb3J0IHsgRW1vdGlvbkpTWCBhcyBKU1ggfSBmcm9tICcuL2pzeC1uYW1lc3BhY2UnCg==";var nL="data:text/plain;charset=utf-8;base64,aW1wb3J0ICdyZWFjdCcKaW1wb3J0IHsgSW50ZXJwb2xhdGlvbiB9IGZyb20gJ0BlbW90aW9uL3NlcmlhbGl6ZScKaW1wb3J0IHsgVGhlbWUgfSBmcm9tICcuL2luZGV4JwoKdHlwZSBXaXRoQ29uZGl0aW9uYWxDU1NQcm9wPFA+ID0gJ2NsYXNzTmFtZScgZXh0ZW5kcyBrZXlvZiBQCiAgPyBzdHJpbmcgZXh0ZW5kcyBQWydjbGFzc05hbWUnICYga2V5b2YgUF0KICAgID8geyBjc3M/OiBJbnRlcnBvbGF0aW9uPFRoZW1lPiB9CiAgICA6IHt9CiAgOiB7fQoKLy8gdW5wYWNrIGFsbCBoZXJlIHRvIGF2b2lkIGluZmluaXRlIHNlbGYtcmVmZXJlbmNpbmcgd2hlbiBkZWZpbmluZyBvdXIgb3duIEpTWCBuYW1lc3BhY2UKdHlwZSBSZWFjdEpTWEVsZW1lbnQgPSBKU1guRWxlbWVudAp0eXBlIFJlYWN0SlNYRWxlbWVudENsYXNzID0gSlNYLkVsZW1lbnRDbGFzcwp0eXBlIFJlYWN0SlNYRWxlbWVudEF0dHJpYnV0ZXNQcm9wZXJ0eSA9IEpTWC5FbGVtZW50QXR0cmlidXRlc1Byb3BlcnR5CnR5cGUgUmVhY3RKU1hFbGVtZW50Q2hpbGRyZW5BdHRyaWJ1dGUgPSBKU1guRWxlbWVudENoaWxkcmVuQXR0cmlidXRlCnR5cGUgUmVhY3RKU1hMaWJyYXJ5TWFuYWdlZEF0dHJpYnV0ZXM8QywgUD4gPSBKU1guTGlicmFyeU1hbmFnZWRBdHRyaWJ1dGVzPEMsIFA+CnR5cGUgUmVhY3RKU1hJbnRyaW5zaWNBdHRyaWJ1dGVzID0gSlNYLkludHJpbnNpY0F0dHJpYnV0ZXMKdHlwZSBSZWFjdEpTWEludHJpbnNpY0NsYXNzQXR0cmlidXRlczxUPiA9IEpTWC5JbnRyaW5zaWNDbGFzc0F0dHJpYnV0ZXM8VD4KdHlwZSBSZWFjdEpTWEludHJpbnNpY0VsZW1lbnRzID0gSlNYLkludHJpbnNpY0VsZW1lbnRzCgpleHBvcnQgbmFtZXNwYWNlIEVtb3Rpb25KU1ggewogIGludGVyZmFjZSBFbGVtZW50IGV4dGVuZHMgUmVhY3RKU1hFbGVtZW50IHt9CiAgaW50ZXJmYWNlIEVsZW1lbnRDbGFzcyBleHRlbmRzIFJlYWN0SlNYRWxlbWVudENsYXNzIHt9CiAgaW50ZXJmYWNlIEVsZW1lbnRBdHRyaWJ1dGVzUHJvcGVydHkKICAgIGV4dGVuZHMgUmVhY3RKU1hFbGVtZW50QXR0cmlidXRlc1Byb3BlcnR5IHt9CiAgaW50ZXJmYWNlIEVsZW1lbnRDaGlsZHJlbkF0dHJpYnV0ZSBleHRlbmRzIFJlYWN0SlNYRWxlbWVudENoaWxkcmVuQXR0cmlidXRlIHt9CgogIHR5cGUgTGlicmFyeU1hbmFnZWRBdHRyaWJ1dGVzPEMsIFA+ID0gV2l0aENvbmRpdGlvbmFsQ1NTUHJvcDxQPiAmCiAgICBSZWFjdEpTWExpYnJhcnlNYW5hZ2VkQXR0cmlidXRlczxDLCBQPgoKICBpbnRlcmZhY2UgSW50cmluc2ljQXR0cmlidXRlcyBleHRlbmRzIFJlYWN0SlNYSW50cmluc2ljQXR0cmlidXRlcyB7fQogIGludGVyZmFjZSBJbnRyaW5zaWNDbGFzc0F0dHJpYnV0ZXM8VD4KICAgIGV4dGVuZHMgUmVhY3RKU1hJbnRyaW5zaWNDbGFzc0F0dHJpYnV0ZXM8VD4ge30KCiAgdHlwZSBJbnRyaW5zaWNFbGVtZW50cyA9IHsKICAgIFtLIGluIGtleW9mIFJlYWN0SlNYSW50cmluc2ljRWxlbWVudHNdOiBSZWFjdEpTWEludHJpbnNpY0VsZW1lbnRzW0tdICYgewogICAgICBjc3M/OiBJbnRlcnBvbGF0aW9uPFRoZW1lPgogICAgfQogIH0KfQo=";var nm="data:text/plain;charset=utf-8;base64,Ly8gRGVmaW5pdGlvbnMgYnk6IEp1bnlvdW5nIENsYXJlIEphbmcgPGh0dHBzOi8vZ2l0aHViLmNvbS9BaWxydW4+Ci8vIFR5cGVTY3JpcHQgVmVyc2lvbjogMy4xCgppbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCcKaW1wb3J0IHsgVGhlbWUgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCcKaW1wb3J0IHsgRGlzdHJpYnV0aXZlT21pdCwgUHJvcHNPZiB9IGZyb20gJy4vaGVscGVyJwoKZXhwb3J0IGludGVyZmFjZSBUaGVtZVByb3ZpZGVyUHJvcHMgewogIHRoZW1lOiBQYXJ0aWFsPFRoZW1lPiB8ICgob3V0ZXJUaGVtZTogVGhlbWUpID0+IFRoZW1lKQogIGNoaWxkcmVuPzogUmVhY3QuUmVhY3ROb2RlCn0KCmV4cG9ydCBpbnRlcmZhY2UgVGhlbWVQcm92aWRlciB7CiAgKHByb3BzOiBUaGVtZVByb3ZpZGVyUHJvcHMpOiBSZWFjdC5SZWFjdEVsZW1lbnQKfQoKZXhwb3J0IHR5cGUgd2l0aFRoZW1lID0gPAogIEMgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnRUeXBlPFJlYWN0LkNvbXBvbmVudFByb3BzPEM+Pgo+KAogIGNvbXBvbmVudDogQwopID0+IFJlYWN0LkZDPERpc3RyaWJ1dGl2ZU9taXQ8UHJvcHNPZjxDPiwgJ3RoZW1lJz4gJiB7IHRoZW1lPzogVGhlbWUgfT4KCmV4cG9ydCBmdW5jdGlvbiB1c2VUaGVtZSgpOiBUaGVtZQoKZXhwb3J0IGNvbnN0IFRoZW1lUHJvdmlkZXI6IFRoZW1lUHJvdmlkZXIKCmV4cG9ydCBjb25zdCB3aXRoVGhlbWU6IHdpdGhUaGVtZQoKZXhwb3J0IHR5cGUgV2l0aFRoZW1lPFAsIFQ+ID0gUCBleHRlbmRzIHsgdGhlbWU6IGluZmVyIFRoZW1lIH0KICA/IFAgJiB7IHRoZW1lOiBFeGNsdWRlPFRoZW1lLCB1bmRlZmluZWQ+IH0KICA6IFAgJiB7IHRoZW1lOiBUIH0K";var iL="data:text/plain;charset=utf-8;base64,aW1wb3J0IHt9IGZyb20gJ3JlYWN0JwppbXBvcnQgeyBJbnRlcnBvbGF0aW9uIH0gZnJvbSAnQGVtb3Rpb24vc2VyaWFsaXplJwppbXBvcnQgeyBUaGVtZSB9IGZyb20gJy4nCgpkZWNsYXJlIG1vZHVsZSAncmVhY3QnIHsKICBpbnRlcmZhY2UgQXR0cmlidXRlcyB7CiAgICBjc3M/OiBJbnRlcnBvbGF0aW9uPFRoZW1lPgogIH0KfQo=";var oL="data:text/plain;charset=utf-8;base64,aW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnCgovKioKICogQGRlc2MgVXRpbGl0eSB0eXBlIGZvciBnZXR0aW5nIHByb3BzIHR5cGUgb2YgUmVhY3QgY29tcG9uZW50LgogKiBJdCB0YWtlcyBgZGVmYXVsdFByb3BzYCBpbnRvIGFuIGFjY291bnQgLSBtYWtpbmcgcHJvcHMgd2l0aCBkZWZhdWx0cyBvcHRpb25hbC4KICovCmV4cG9ydCB0eXBlIFByb3BzT2Y8CiAgQyBleHRlbmRzIGtleW9mIEpTWC5JbnRyaW5zaWNFbGVtZW50cyB8IFJlYWN0LkpTWEVsZW1lbnRDb25zdHJ1Y3Rvcjxhbnk+Cj4gPSBKU1guTGlicmFyeU1hbmFnZWRBdHRyaWJ1dGVzPEMsIFJlYWN0LkNvbXBvbmVudFByb3BzPEM+PgoKLy8gV2UgbmVlZCB0byB1c2UgdGhpcyB2ZXJzaW9uIG9mIE9taXQgYXMgaXQncyBkaXN0cmlidXRpdmUgKFdpbGwgcHJlc2VydmUgdW5pb25zKQpleHBvcnQgdHlwZSBEaXN0cmlidXRpdmVPbWl0PFQsIFU+ID0gVCBleHRlbmRzIGFueQogID8gUGljazxULCBFeGNsdWRlPGtleW9mIFQsIFU+PgogIDogbmV2ZXIK";var rL="data:text/plain;charset=utf-8;base64,Ly8gRGVmaW5pdGlvbnMgYnk6IEp1bnlvdW5nIENsYXJlIEphbmcgPGh0dHBzOi8vZ2l0aHViLmNvbS9BaWxydW4+Ci8vIFR5cGVTY3JpcHQgVmVyc2lvbjogMi44CgppbXBvcnQgeyBSZWdpc3RlcmVkQ2FjaGUsIFNlcmlhbGl6ZWRTdHlsZXMgfSBmcm9tICdAZW1vdGlvbi91dGlscycKaW1wb3J0ICogYXMgQ1NTIGZyb20gJ2Nzc3R5cGUnCgpleHBvcnQgeyBSZWdpc3RlcmVkQ2FjaGUsIFNlcmlhbGl6ZWRTdHlsZXMgfQoKZXhwb3J0IHR5cGUgQ1NTUHJvcGVydGllcyA9IENTUy5Qcm9wZXJ0aWVzRmFsbGJhY2s8bnVtYmVyIHwgc3RyaW5nPgpleHBvcnQgdHlwZSBDU1NQcm9wZXJ0aWVzV2l0aE11bHRpVmFsdWVzID0gewogIFtLIGluIGtleW9mIENTU1Byb3BlcnRpZXNdOgogICAgfCBDU1NQcm9wZXJ0aWVzW0tdCiAgICB8IEFycmF5PEV4dHJhY3Q8Q1NTUHJvcGVydGllc1tLXSwgc3RyaW5nPj4KfQoKZXhwb3J0IHR5cGUgQ1NTUHNldWRvcyA9IHsgW0sgaW4gQ1NTLlBzZXVkb3NdPzogQ1NTT2JqZWN0IH0KCmV4cG9ydCBpbnRlcmZhY2UgQXJyYXlDU1NJbnRlcnBvbGF0aW9uIGV4dGVuZHMgQXJyYXk8Q1NTSW50ZXJwb2xhdGlvbj4ge30KCmV4cG9ydCB0eXBlIEludGVycG9sYXRpb25QcmltaXRpdmUgPQogIHwgbnVsbAogIHwgdW5kZWZpbmVkCiAgfCBib29sZWFuCiAgfCBudW1iZXIKICB8IHN0cmluZwogIHwgQ29tcG9uZW50U2VsZWN0b3IKICB8IEtleWZyYW1lcwogIHwgU2VyaWFsaXplZFN0eWxlcwogIHwgQ1NTT2JqZWN0CgpleHBvcnQgdHlwZSBDU1NJbnRlcnBvbGF0aW9uID0gSW50ZXJwb2xhdGlvblByaW1pdGl2ZSB8IEFycmF5Q1NTSW50ZXJwb2xhdGlvbgoKZXhwb3J0IGludGVyZmFjZSBDU1NPdGhlcnNPYmplY3QgewogIFtwcm9wZXJ0aWVzTmFtZTogc3RyaW5nXTogQ1NTSW50ZXJwb2xhdGlvbgp9CgpleHBvcnQgaW50ZXJmYWNlIENTU09iamVjdAogIGV4dGVuZHMgQ1NTUHJvcGVydGllc1dpdGhNdWx0aVZhbHVlcywKICAgIENTU1BzZXVkb3MsCiAgICBDU1NPdGhlcnNPYmplY3Qge30KCmV4cG9ydCBpbnRlcmZhY2UgQ29tcG9uZW50U2VsZWN0b3IgewogIF9fZW1vdGlvbl9zdHlsZXM6IGFueQp9CgpleHBvcnQgdHlwZSBLZXlmcmFtZXMgPSB7CiAgbmFtZTogc3RyaW5nCiAgc3R5bGVzOiBzdHJpbmcKICBhbmltOiBudW1iZXIKICB0b1N0cmluZzogKCkgPT4gc3RyaW5nCn0gJiBzdHJpbmcKCmV4cG9ydCBpbnRlcmZhY2UgQXJyYXlJbnRlcnBvbGF0aW9uPFByb3BzPgogIGV4dGVuZHMgQXJyYXk8SW50ZXJwb2xhdGlvbjxQcm9wcz4+IHt9CgpleHBvcnQgaW50ZXJmYWNlIEZ1bmN0aW9uSW50ZXJwb2xhdGlvbjxQcm9wcz4gewogIChwcm9wczogUHJvcHMpOiBJbnRlcnBvbGF0aW9uPFByb3BzPgp9CgpleHBvcnQgdHlwZSBJbnRlcnBvbGF0aW9uPFByb3BzPiA9CiAgfCBJbnRlcnBvbGF0aW9uUHJpbWl0aXZlCiAgfCBBcnJheUludGVycG9sYXRpb248UHJvcHM+CiAgfCBGdW5jdGlvbkludGVycG9sYXRpb248UHJvcHM+CgpleHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplU3R5bGVzPFByb3BzPigKICBhcmdzOiBBcnJheTxUZW1wbGF0ZVN0cmluZ3NBcnJheSB8IEludGVycG9sYXRpb248UHJvcHM+PiwKICByZWdpc3RlcmVkOiBSZWdpc3RlcmVkQ2FjaGUsCiAgcHJvcHM/OiBQcm9wcwopOiBTZXJpYWxpemVkU3R5bGVzCg==";var sL="data:text/plain;charset=utf-8;base64,Ly8gRGVmaW5pdGlvbnMgYnk6IEp1bnlvdW5nIENsYXJlIEphbmcgPGh0dHBzOi8vZ2l0aHViLmNvbS9BaWxydW4+Ci8vIFR5cGVTY3JpcHQgVmVyc2lvbjogMi4yCgpleHBvcnQgaW50ZXJmYWNlIFJlZ2lzdGVyZWRDYWNoZSB7CiAgW2tleTogc3RyaW5nXTogc3RyaW5nCn0KCmV4cG9ydCBpbnRlcmZhY2UgU3R5bGVTaGVldCB7CiAgY29udGFpbmVyOiBIVE1MRWxlbWVudAogIG5vbmNlPzogc3RyaW5nCiAga2V5OiBzdHJpbmcKICBpbnNlcnQocnVsZTogc3RyaW5nKTogdm9pZAogIGZsdXNoKCk6IHZvaWQKICB0YWdzOiBBcnJheTxIVE1MU3R5bGVFbGVtZW50Pgp9CgpleHBvcnQgaW50ZXJmYWNlIEVtb3Rpb25DYWNoZSB7CiAgaW5zZXJ0ZWQ6IHsKICAgIFtrZXk6IHN0cmluZ106IHN0cmluZyB8IHRydWUKICB9CiAgcmVnaXN0ZXJlZDogUmVnaXN0ZXJlZENhY2hlCiAgc2hlZXQ6IFN0eWxlU2hlZXQKICBrZXk6IHN0cmluZwogIGNvbXBhdD86IHRydWUKICBub25jZT86IHN0cmluZwogIGluc2VydCgKICAgIHNlbGVjdG9yOiBzdHJpbmcsCiAgICBzZXJpYWxpemVkOiBTZXJpYWxpemVkU3R5bGVzLAogICAgc2hlZXQ6IFN0eWxlU2hlZXQsCiAgICBzaG91bGRDYWNoZTogYm9vbGVhbgogICk6IHN0cmluZyB8IHZvaWQKfQoKZXhwb3J0IGludGVyZmFjZSBTZXJpYWxpemVkU3R5bGVzIHsKICBuYW1lOiBzdHJpbmcKICBzdHlsZXM6IHN0cmluZwogIG1hcD86IHN0cmluZwogIG5leHQ/OiBTZXJpYWxpemVkU3R5bGVzCn0KCmV4cG9ydCBjb25zdCBpc0Jyb3dzZXI6IGJvb2xlYW4KCmV4cG9ydCBmdW5jdGlvbiBnZXRSZWdpc3RlcmVkU3R5bGVzKAogIHJlZ2lzdGVyZWQ6IFJlZ2lzdGVyZWRDYWNoZSwKICByZWdpc3RlcmVkU3R5bGVzOiBBcnJheTxzdHJpbmc+LAogIGNsYXNzTmFtZXM6IHN0cmluZwopOiBzdHJpbmcKCmV4cG9ydCBmdW5jdGlvbiByZWdpc3RlclN0eWxlcygKICBjYWNoZTogRW1vdGlvbkNhY2hlLAogIHNlcmlhbGl6ZWQ6IFNlcmlhbGl6ZWRTdHlsZXMsCiAgaXNTdHJpbmdUYWc6IGJvb2xlYW4KKTogdm9pZAoKZXhwb3J0IGZ1bmN0aW9uIGluc2VydFN0eWxlcygKICBjYWNoZTogRW1vdGlvbkNhY2hlLAogIHNlcmlhbGl6ZWQ6IFNlcmlhbGl6ZWRTdHlsZXMsCiAgaXNTdHJpbmdUYWc6IGJvb2xlYW4KKTogc3RyaW5nIHwgdm9pZAo=";var aL={reactDts:jk,jsxDevRuntimeDts:$k,jsxRuntimeDts:Uk,reactExpDts:Kk,globalDts:qk,propTypesDts:Xk,cssTypeDts:Yk,framerDts:Zk,emotionStyleBase:Jk,emotionStyled:Qk,emotionCache:eL,EmotionJSXDts:tm,EmotionJSXNameSpaceDTS:nL,EmotionJSXRuntimeDTS:tm,EmotionReactDts:tL,EmotionThemingTds:nm,EmotionReactCssPropDts:iL,EmotionReactHelperDts:oL,EmotionThemingDts:nm,EmotionSerializeDts:rL,EmotionUtilsDts:sL};var RL=Vr(kL());function zb(r,e=1,t={}){let{indent:n=" ",includeEmptyLines:i=!1}=t;if(typeof r!="string")throw new TypeError(`Expected \`input\` to be a \`string\`, got \`${typeof r}\``);if(typeof e!="number")throw new TypeError(`Expected \`count\` to be a \`number\`, got \`${typeof e}\``);if(e<0)throw new RangeError(`Expected \`count\` to be at least 0, got \`${e}\``);if(typeof n!="string")throw new TypeError(`Expected \`options.indent\` to be a \`string\`, got \`${typeof n}\``);if(e===0)return r;let o=i?/^/gm:/^(?!\s*$)/gm;return r.replace(o,n.repeat(e))}var Hb=Vr(LL(),1);function Ob(r){if(typeof r!="string")throw new TypeError("Expected a string");return r.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")}var PL=/\s+at.*[(\s](.*)\)?/,IF=/^(?:(?:(?:node|node:[\w/]+|(?:(?:node:)?internal\/[\w/]*|.*node_modules\/(?:babel-polyfill|pirates)\/.*)?\w+)(?:\.js)?:\d+:\d+)|native)/,kF=typeof Hb.default.homedir=="undefined"?"":Hb.default.homedir().replace(/\\/g,"/");function Bb(r,{pretty:e=!1,basePath:t}={}){let n=t&&new RegExp(`(at | \\()${Ob(t.replace(/\\/g,"/"))}`,"g");if(typeof r=="string")return r.replace(/\\/g,"/").split(`
`).filter(i=>{let o=i.match(PL);if(o===null||!o[1])return!0;let s=o[1];return s.includes(".app/Contents/Resources/electron.asar")||s.includes(".app/Contents/Resources/default_app.asar")?!1:!IF.test(s)}).filter(i=>i.trim()!=="").map(i=>(n&&(i=i.replace(n,"$1")),e&&(i=i.replace(PL,(o,s)=>o.replace(s,s.replace(kF,"~")))),i)).join(`
`)}var LF=r=>r.replace(/\s+at .*aggregate-error\/index.js:\d+:\d+\)?/g,""),Uc,sm=class extends Error{constructor(e){if(!Array.isArray(e))throw new TypeError(`Expected input to be an Array, got ${typeof e}`);e=e.map(n=>n instanceof Error?n:n!==null&&typeof n=="object"?Object.assign(new Error(n.message),n):new Error(n));let t=e.map(n=>typeof n.stack=="string"?LF(Bb(n.stack)):String(n)).join(`
`);t=`
`+zb(t,4);super(t);Xb(this,Uc,void 0);Kb(this,"name","AggregateError");Yb(this,Uc,e)}get errors(){return qb(this,Uc).slice()}};Uc=new WeakMap;async function Wb(r,e,{concurrency:t=Number.POSITIVE_INFINITY,stopOnError:n=!0}={}){return new Promise((i,o)=>{if(r[Symbol.iterator]===void 0&&r[Symbol.asyncIterator]===void 0)throw new TypeError(`Expected \`input\` to be either an \`Iterable\` or \`AsyncIterable\`, got (${typeof r})`);if(typeof e!="function")throw new TypeError("Mapper function is required");if(!((Number.isSafeInteger(t)||t===Number.POSITIVE_INFINITY)&&t>=1))throw new TypeError(`Expected \`concurrency\` to be an integer from 1 and up or \`Infinity\`, got \`${t}\` (${typeof t})`);let s=[],a=[],l=new Map,c=!1,d=!1,h=!1,p=0,g=0,y=r[Symbol.iterator]===void 0?r[Symbol.asyncIterator]():r[Symbol.iterator](),v=F=>{c=!0,d=!0,o(F)},w=async()=>{if(d)return;let F=await y.next(),M=g;if(g++,F.done){if(h=!0,p===0&&!d){if(!n&&a.length>0){v(new sm(a));return}if(d=!0,!l.size){i(s);return}let z=[];for(let[V,G]of s.entries())l.get(V)!==ML&&z.push(G);i(z)}return}p++,(async()=>{try{let z=await F.value;if(d)return;let V=await e(z,M);V===ML&&l.set(M,V),s[M]=V,p--,await w()}catch(z){if(n)v(z);else{a.push(z),p--;try{await w()}catch(V){v(V)}}}})()};(async()=>{for(let F=0;F<t;F++){try{await w()}catch(M){v(M);break}if(h||c)break}})()})}var ML=Symbol("skip");async function Vb(r,e){return Wb(r,t=>t(),e)}globalThis.Buffer=RL.default;var{reactDts:PF,jsxDevRuntimeDts:MF,jsxRuntimeDts:DF,reactExpDts:RF,globalDts:FF,propTypesDts:AF,cssTypeDts:NF,framerDts:zF,emotionStyleBase:OF,emotionCache:HF}=aL;self.MonacoEnvironment={getWorkerUrl:function(r,e){return e==="typescript"||e==="javascript"?"dist/workers/language/typescript/ts.worker.js":"dist/workers/editor/editor.worker.js"}};var DL=!1,Xde=async({code:r,container:e})=>{if(console.log("monaco-editor"),!DL)DL=!0;else return;let t=e.attachShadow({mode:"open"}),n=document.createElement("div");t.appendChild(n),n.style.width="100%",n.style.height="100%";let i=document.createElement("style");i.innerText=` @font-face {
    font-family: codicon;
    font-display: block;
    src: url(./base/browser/ui/codicons/codicon/codicon.ttf) format("truetype");
}`,document.head.appendChild(i);let o=document.createElement("style");o.innerText=`@import url("dist/starter.css");
  @font-face {
    font-family: codicon;
    font-display: block;
    src: url(./base/browser/ui/codicons/codicon/codicon.ttf) format("truetype");
}
  
  `,t.appendChild(o),et.typescript.typescriptDefaults.setCompilerOptions({target:et.typescript.ScriptTarget.ES5,lib:["dom","dom.iterable","esnext"],allowJs:!0,skipLibCheck:!0,esModuleInterop:!0,allowSyntheticDefaultImports:!0,strict:!0,forceConsistentCasingInFileNames:!0,noFallthroughCasesInSwitch:!0,resolveJsonModule:!0,isolatedModules:!0,noEmit:!0,allowNonTsExtensions:!0,moduleResolution:et.typescript.ModuleResolutionKind.NodeJs,declaration:!1,module:et.typescript.ModuleKind.ESNext,noEmitOnError:!0,maxNodeModuleJsDepth:10,jsxImportSource:"@emotion/react",jsx:et.typescript.JsxEmit.ReactJSX,allowUmdGlobalAccess:!0}),et.typescript.typescriptDefaults.setDiagnosticsOptions({noSuggestionDiagnostics:!0,noSemanticValidation:!0,noSyntaxValidation:!0});let s=bu.create(n,{model:bu.createModel(r,"typescript",ig.parse("file:///app/index.tsx")),language:"typescript",useShadowDOM:!1,theme:"vs-dark",autoClosingBrackets:"languageDefined"}),a={parser:"babel",isHighlightGlyph:!1,iShowHover:!1,isUseSeparateElementStyles:!1,monacoEditorManager:null,decoratorMapper:null,jsxCommenter:null},l=(await import("./throttle-Z6JZ56VC.mjs")).default;return window.addEventListener("resize",l(function(){s.layout()},200)),(async()=>{let d=[{name:"react",url:PF,depend:["global","csstype","prop-types"]},{name:"react/jsx-runtime",url:DF,depend:["global","csstype","prop-types"]},{name:"react/jsx-dev-runtime",url:MF,depend:["global","csstype","prop-types"]},{name:"react-exp",url:RF,depend:[]},{name:"global",url:FF,depend:[]},{name:"prop-types",url:AF,depend:[]},{name:"csstype",url:NF,depend:[]},{name:"@emotion/base",url:OF,depend:["@emotion/react","@emotion/serialize","react"]},{name:"@emotion/styled",url:"https://unpkg.com/@emotion/styled@11.8.1/types/index.d.ts",depend:["@emotion/react","@emotion/serialize","react"]},{name:"@emotion/cache",url:HF,depend:["@emotion/utils"]},{name:"@emotion/react",url:"https://unpkg.com/@emotion/react@11.8.1/types/index.d.ts",depend:["@emotion/cache"]},{name:"@emotion/react/jsx-runtime",url:"https://unpkg.com/@emotion/react@11.8.1/types/jsx-runtime.d.ts",depend:["@emotion/cache"]},{name:"@emotion/react/jsx-dev-runtime",url:"https://unpkg.com/@emotion/react@11.8.1/types/jsx-dev-runtime.d.ts",depend:["@emotion/cache"]},{name:"@emotion/react/jsx-namespace",url:"https://unpkg.com/@emotion/react@11.8.1/types/jsx-namespace.d.ts",depend:["@emotion/utils","type"]},{name:"@emotion/react/theming",url:"https://unpkg.com/@emotion/react@11.8.1/types/theming.d.ts",depend:["@emotion/utils","type"]},{name:"@emotion/react/css-prop",url:"https://unpkg.com/@emotion/react@11.8.1/types/css-prop.d.ts",depend:["@emotion/utils","csstype"]},{name:"@emotion/react/helper",url:"https://unpkg.com/@emotion/react@11.8.1/types/helper.d.ts",depend:["@emotion/utils","csstype"]},{name:"@emotion/serialize",url:"https://unpkg.com/@emotion/serialize@1.0.2/types/index.d.ts",depend:["@emotion/utils","csstype"]},{name:"@emotion/utils",url:"https://unpkg.com/@emotion/utils@1.1.0/types/index.d.ts",depend:[]},{name:"framer-motion",url:zF,depend:["popmotion"]},{name:"popmotion",url:"https://unpkg.com/popmotion@11.0.3/lib/index.d.ts"}].map(({name:h,url:p})=>async()=>et.typescript.typescriptDefaults.addExtraLib(await(await fetch(p)).text(),`file:///node_modules/${h}/index.d.ts`));await Vb(d,{concurrency:2}),et.typescript.typescriptDefaults.setEagerModelSync(!0),et.typescript.typescriptDefaults.setDiagnosticsOptions({noSuggestionDiagnostics:!1,noSemanticValidation:!1,noSyntaxValidation:!1})})(),{editor:s,monaco:$b({},Eb)}};export{Xde as startMonaco};
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/*! @license DOMPurify 2.3.1 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.3.1/LICENSE */
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
