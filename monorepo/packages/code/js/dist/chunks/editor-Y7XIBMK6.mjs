import"./chunk-3EVSUGKX.mjs";import{$ as oP,$a as Ui,$b as zS,$c as qS,$d as pv,$e as id,$f as Vv,$g as CP,$h as vr,$i as zt,$j as MP,A as hh,Aa as U,Ab as PS,Ac as Ci,Ad as jm,Ae as se,Af as Cv,Ag as ix,Ah as Aa,Ai as Px,Aj as sC,B as uh,Ba as tt,Bb as Un,Bc as Xl,Bd as nv,Be as Xn,Bf as _v,Bg as nx,Bh as hd,Bi as yt,Bj as fd,C as wm,Ca as b,Cb as ga,Cc as aP,Cd as ov,Ce as Oi,Cf as wv,Cg as si,Ch as ud,Ci as Mx,Cj as vu,D as zl,Da as ee,Db as K,Dc as VS,Dd as Mh,De as Ah,Df as Tv,Dg as Yh,Dh as Sr,Di as ag,Dj as hg,E as qe,Ea as X,Eb as Ch,Ec as lP,Ed as lt,Ee as mr,Ef as Ev,Eg as mt,Eh as ru,Ei as Dx,Ej as ug,F as Ol,Fa as Mt,Fb as xi,Fc as it,Fd as rv,Fe as ri,Ff as Iv,Fg as Zh,Fh as S,Fi as lg,Fj as pg,G as Mi,Ga as Di,Gb as fa,Gc as kn,Gd as sv,Ge as Zt,Gf as kv,Gg as ox,Gh as He,Gi as pu,Gj as aC,H as qt,Ha as bo,Hb as Gl,Hc as ft,Hd as ni,He as Ql,Hf as Lv,Hg as yP,Hh as Fa,Hi as Rx,Hj as eo,I as rS,Ia as Bl,Ib as Ai,Ic as rn,Id as Kn,Ie as Yn,If as Pv,Ig as Qm,Ih as Ti,Ii as Cr,Ij as Wi,J as sS,Ja as ca,Jb as En,Jc as Ni,Jd as av,Je as ed,Jf as Mv,Jg as rx,Jh as as,Ji as Ax,Jj as xu,K as la,Ka as Oe,Kb as _h,Kc as ts,Kd as lv,Ke as Fh,Kf as Dv,Kg as sx,Kh as wx,Ki as Fx,Kj as lC,L as ph,La as ha,Lb as MS,Lc as Dt,Ld as dv,Le as ct,Lf as Rv,Lg as Jh,Lh as Na,Li as Nx,Lj as li,M as aS,Ma as Tn,Mb as DS,Mc as ii,Md as cv,Me as F,Mf as ss,Mg as ax,Mh as Tx,Mi as zx,Mj as Cu,N as mh,Na as ua,Nb as jl,Nc as sn,Nd as Um,Ne as Km,Nf as Av,Ng as lx,Nh as TP,Ni as Ox,Nj as _u,O as Gn,Oa as Zr,Ob as RS,Oc as GS,Od as $i,Oe as wi,Of as wa,Og as dx,Oh as za,Oi as Hx,Oj as yd,P as lr,Pa as vh,Pb as Dm,Pc as jS,Pd as an,Pe as yv,Pf as Gh,Pg as cx,Ph as ig,Pi as us,Pj as dC,Q as Hl,Qa as Ri,Qb as AS,Qc as US,Qd as $m,Qe as $,Qf as cn,Qg as Qh,Qh as Ex,Qi as ps,Qj as bd,R as de,Ra as $e,Rb as FS,Rc as dP,Rd as H,Re as I,Rf as Ta,Rg as hx,Rh as ng,Ri as mu,Rj as mg,S as Ue,Sa as pS,Sb as vo,Sc as Yt,Sd as hv,Se as qm,Sf as Ea,Sg as Ma,Sh as og,Si as Wx,Sj as cC,T as jn,Ta as pa,Tb as Rm,Tc as hr,Td as ns,Te as Nh,Tf as Fv,Tg as bP,Th as rg,Ti as Bx,Tj as wu,U as lS,Ua as mS,Ub as ya,Uc as Lh,Ud as W,Ue as J,Uf as Zm,Ug as ux,Uh as Io,Ui as Vx,Uj as gg,V as gh,Va as Si,Vb as ba,Vc as $S,Vd as oi,Ve as bv,Vf as Nv,Vg as SP,Vh as su,Vi as Gx,Vj as hC,W as wn,Wa as gS,Wb as In,Wc as KS,Wd as Vt,We as ue,Wf as zv,Wg as px,Wh as Ze,Wi as jx,Wj as PP,X as Le,Xa as ke,Xb as Ul,Xc as xo,Xd as Zl,Xe as Xm,Xf as Ov,Xg as vP,Xh as Ix,Xi as Ux,Xj as uC,Y as fh,Ya as Jr,Yb as wh,Yc as Om,Yd as uv,Ye as fP,Yf as Hv,Yg as mx,Yh as ls,Yi as bt,Yj as fg,Z as dS,Za as Im,Zb as Th,Zc as ur,Zd as Ae,Ze as zh,Zf as Wv,Zg as xP,Zh as sg,Zi as $x,Zj as pC,_ as Tm,_a as fS,_b as NS,_c as cP,_d as Ct,_e as td,_f as Bv,_g as gx,_h as ko,_i as qi,_j as mC,a as u,aa as yh,ab as yS,ac as OS,ad as hP,ae as Ln,af as _a,ag as Gv,ah as fx,ai as au,aj as dg,ak as DP,b as Q,ba as vt,bb as So,bc as cr,bd as Hm,be as mv,bf as Ym,bg as jv,bh as eg,bi as pd,bj as gd,bk as RP,c as fo,ca as Em,cb as bS,cc as Sa,cd as XS,ce as Gt,cf as nd,cg as To,ch as eu,ci as ds,cj as Kx,ck as AP,d as bi,da as We,db as SS,dc as $n,dd as uP,de as Co,df as od,dg as Ia,dh as tu,di as Rt,dj as IP,dk as FP,e as Nl,ea as R,eb as Qr,ec as Am,ed as pr,ee as _o,ef as wo,eg as ka,eh as Jt,ei as lu,ej as qx,ek as NP,f as ar,fa as z,fb as Vl,fc as Fm,fd as Ph,fe as Jl,ff as rd,fg as Uv,fh as yx,fi as Lo,fj as Xx,fk as zP,g as rh,ga as et,gb as pt,gc as $l,gd as YS,ge as qn,gf as we,gg as La,gh as Da,gi as du,gj as kP,gk as OP,h as sh,ha as B,hb as ma,hc as es,hd as pP,he as Dh,hf as Zn,hg as $v,hh as bx,hi as cu,hj as Yx,hk as HP,i as Zb,ia as bh,ib as km,ic as Eh,id as Wm,ie as os,if as q,ig as Kv,ih as tg,ii as Po,ij as Zx,ik as WP,j as Jb,ja as cS,jb as vS,jc as Ih,jd as ZS,je as dt,jf as ne,jg as qv,jh as dd,ji as cs,jj as LP,jk as BP,k as Pi,ka as on,kb as Lm,kc as Nm,kd as JS,ke as Pe,kf as Sv,kg as Xv,kh as Hi,ki as Jn,kj as gu,kk as yg,l as Yr,la as Wl,lb as Pm,lc as va,ld as Bm,le as _t,lf as Oh,lg as Yv,lh as cd,li as Mo,lj as Jx,lk as VP,m as ah,ma as ht,mb as dr,mc as Re,md as mP,me as O,mf as vv,mg as Zv,mh as Sx,mi as hs,mj as Qx,mk as Tu,n as lh,na as G,nb as xh,nc as HS,nd as is,ne as pe,nf as dn,ng as Jv,nh as vx,ni as Oa,nj as fu,nk as Pn,o as Qb,oa as De,ob as xS,oc as WS,od as Vm,oe as ie,of as rs,og as Qv,oh as _P,oi as kx,oj as eC,ok as wr,p as _m,pa as ge,pb as CS,pc as kh,pd as QS,pe as Ee,pf as gr,pg as br,ph as xx,pi as EP,pj as tC,q as Vn,qa as Ft,qb as _S,qc as BS,qd as gP,qe as ln,qf as fr,qg as jh,qh as wP,qi as Qn,qj as iC,r as eS,ra as ut,rb as wS,rc as Kl,rd as xt,re as Ca,rf as Hh,rg as Uh,rh as Ra,ri as md,rj as yu,s as Pt,sa as Xe,sb as TS,sc as zm,sd as ev,se as Rh,sf as yr,sg as $h,sh as iu,si as hu,sj as nC,t as dh,ta as yo,tb as ES,tc as sP,td as Yl,te as gv,tf as Wh,tg as Kh,th as xe,ti as uu,tj as ai,u as ch,ua as hS,ub as Mm,uc as ql,ud as _i,ue as Nt,uf as Bh,ug as ex,uh as jt,ui as Ge,uj as _r,v as tS,va as da,vb as Ye,vc as xa,vd as tv,ve as nt,vf as Vh,vg as qh,vh as Cx,vi as Do,vj as bu,w as iS,wa as Sh,wb as IS,wc as le,wd as Ke,we as ot,wf as sd,wg as Xh,wh as Eo,wi as rt,wj as oC,x as nS,xa as uS,xb as kS,xc as Fi,xd as zi,xe as Me,xf as ad,xg as Jm,xh as _x,xi as Ki,xj as Su,y as St,ya as _e,yb as rP,yc as Be,yd as iv,ye as Ne,yf as ld,yg as Pa,yh as nu,yi as Lx,yj as rC,z as oS,za as Xt,zb as LS,zc as Ve,zd as Gm,ze as fv,zf as xv,zg as tx,zh as ou,zi as xr,zj as cg}from"./chunk-MBT4JAQH.mjs";import{a as Yb,d as Fl,e as sa,f as nP,g as aa,h as Lt}from"./chunk-YUH35O52.mjs";var jE=sa(Ws=>{St();ut();Le();yo();B();ue();Ci();Om();ee();He();Re();du();MP();PP();Q();_t();Ee();Be();hs();var WE=Ws&&Ws.__decorate||function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},BE=Ws&&Ws.__param||function(s,e){return function(t,i){e(t,i,s)}},ob=Ws&&Ws.__awaiter||function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},kc=class{constructor(e,t){this._editor=e,this._workerService=t,this._disposables=new R,this._sessionDisposables=new R,this._disposables.add(Fm.onDidChange(this._update,this)),this._disposables.add(e.onDidChangeModel(()=>this._update())),this._disposables.add(e.onDidChangeModelLanguage(()=>this._update())),this._disposables.add(e.onDidChangeConfiguration(i=>{i.hasChanged(49)&&this._update()}))}dispose(){this._disposables.dispose(),this._sessionDisposables.dispose()}_update(){if(this._sessionDisposables.clear(),!this._editor.getOption(49)||!this._editor.hasModel())return;let e=this._editor.getModel(),[t]=Fm.ordered(e);if(!t||!t.autoFormatTriggerCharacters)return;let i=new xo;for(let n of t.autoFormatTriggerCharacters)i.add(n.charCodeAt(0));this._sessionDisposables.add(this._editor.onDidType(n=>{let o=n.charCodeAt(n.length-1);i.has(o)&&this._trigger(String.fromCharCode(o))}))}_trigger(e){if(!this._editor.hasModel()||this._editor.getSelections().length>1||!this._editor.getSelection().isEmpty())return;let t=this._editor.getModel(),i=this._editor.getPosition(),n=new Ft,o=this._editor.onDidChangeModelContent(r=>{if(r.isFlush){n.cancel(),o.dispose();return}for(let a=0,l=r.changes.length;a<l;a++)if(r.changes[a].range.endLineNumber<=i.lineNumber){n.cancel(),o.dispose();return}});mC(this._workerService,t,i,e,t.getFormattingOptions(),n.token).then(r=>{n.token.isCancellationRequested||Pt(r)&&(hC.execute(this._editor,r,!0),uC(r))}).finally(()=>{o.dispose()})}};kc.ID="editor.contrib.autoFormat";kc=WE([BE(1,Lo)],kc);var Lc=class{constructor(e,t){this.editor=e,this._instantiationService=t,this._callOnDispose=new R,this._callOnModel=new R,this._callOnDispose.add(e.onDidChangeConfiguration(()=>this._update())),this._callOnDispose.add(e.onDidChangeModel(()=>this._update())),this._callOnDispose.add(e.onDidChangeModelLanguage(()=>this._update())),this._callOnDispose.add(Am.onDidChange(this._update,this))}dispose(){this._callOnDispose.dispose(),this._callOnModel.dispose()}_update(){this._callOnModel.clear(),!!this.editor.getOption(48)&&(!this.editor.hasModel()||!Am.has(this.editor.getModel())||this._callOnModel.add(this.editor.onDidPaste(({range:e})=>this._trigger(e))))}_trigger(e){!this.editor.hasModel()||this.editor.getSelections().length>1||this._instantiationService.invokeFunction(fg,this.editor,e,2,Jn.None,ge.None).catch(de)}};Lc.ID="editor.contrib.formatOnPaste";Lc=WE([BE(1,le)],Lc);var VE=class extends F{constructor(){super({id:"editor.action.formatDocument",label:u("formatDocument.label","Format Document"),alias:"Format Document",precondition:O.and(S.notInCompositeEditor,S.writable,S.hasDocumentFormattingProvider),kbOpts:{kbExpr:S.editorTextFocus,primary:1572,linux:{primary:3111},weight:100},contextMenuOpts:{group:"1_modification",order:1.3}})}run(e,t){return ob(this,void 0,void 0,function*(){if(t.hasModel()){let i=e.get(le);yield e.get(Mo).showWhile(i.invokeFunction(pC,t,1,Jn.None,ge.None),250)}})}},GE=class extends F{constructor(){super({id:"editor.action.formatSelection",label:u("formatSelection.label","Format Selection"),alias:"Format Selection",precondition:O.and(S.writable,S.hasDocumentSelectionFormattingProvider),kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2084),weight:100},contextMenuOpts:{when:S.hasNonEmptySelection,group:"1_modification",order:1.31}})}run(e,t){return ob(this,void 0,void 0,function*(){if(!t.hasModel())return;let i=e.get(le),n=t.getModel(),o=t.getSelections().map(a=>a.isEmpty()?new b(a.startLineNumber,1,a.startLineNumber,n.getLineMaxColumn(a.startLineNumber)):a);yield e.get(Mo).showWhile(i.invokeFunction(fg,t,o,1,Jn.None,ge.None),250)})}};J(kc.ID,kc);J(Lc.ID,Lc);I(VE);I(GE);Pe.registerCommand("editor.action.format",s=>ob(void 0,void 0,void 0,function*(){let e=s.get(Ve).getFocusedCodeEditor();if(!e||!e.hasModel())return;let t=s.get(dt);e.getSelection().isEmpty()?yield t.executeCommand("editor.action.formatDocument"):yield t.executeCommand("editor.action.formatSelection")}))});var wR,UE,TR,Bs,rb,$E,Xo,Vs,sb,im=Fl(()=>{St();ut();Le();oP();ga();tt();ee();Re();md();Be();ts();hr();B();wR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},UE=function(s,e){return function(t,i){e(t,i,s)}},TR=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Bs=class{remove(){this.parent&&this.parent.children.delete(this.id)}static findId(e,t){let i;typeof e=="string"?i=`${t.id}/${e}`:(i=`${t.id}/${e.name}`,t.children.get(i)!==void 0&&(i=`${t.id}/${e.name}_${e.range.startLineNumber}_${e.range.startColumn}`));let n=i;for(let o=0;t.children.get(n)!==void 0;o++)n=`${i}_${o}`;return n}static empty(e){return e.children.size===0}},rb=class extends Bs{constructor(e,t,i){super();this.id=e,this.parent=t,this.symbol=i,this.children=new Map}},$E=class extends Bs{constructor(e,t,i,n){super();this.id=e,this.parent=t,this.label=i,this.order=n,this.children=new Map}},Xo=class extends Bs{constructor(e){super();this.uri=e,this.id="root",this.parent=void 0,this._groups=new Map,this.children=new Map,this.id="root",this.parent=void 0}static create(e,t){let i=new Ft(t),n=new Xo(e.uri),o=In.ordered(e),r=o.map((l,c)=>{var d;let h=Bs.findId(`provider_${c}`,n),p=new $E(h,n,(d=l.displayName)!==null&&d!==void 0?d:"Unknown Outline Provider",c);return Promise.resolve(l.provideDocumentSymbols(e,i.token)).then(m=>{for(let f of m||[])Xo._makeOutlineElement(f,p);return p},m=>(Ue(m),p)).then(m=>{Bs.empty(m)?m.remove():n._groups.set(h,m)})}),a=In.onDidChange(()=>{let l=In.ordered(e);Yr(l,o)||i.cancel()});return Promise.all(r).then(()=>i.token.isCancellationRequested&&!t.isCancellationRequested?Xo.create(e,t):n._compact()).finally(()=>{a.dispose()})}static _makeOutlineElement(e,t){let i=Bs.findId(e,t),n=new rb(i,t,e);if(e.children)for(let o of e.children)Xo._makeOutlineElement(o,n);t.children.set(n.id,n)}_compact(){let e=0;for(let[t,i]of this._groups)i.children.size===0?this._groups.delete(t):e+=1;if(e!==1)this.children=this._groups;else{let t=Tm.first(this._groups.values());for(let[,i]of t.children)i.parent=this,this.children.set(i.id,i)}return this}getTopLevelSymbols(){let e=[];for(let t of this.children.values())t instanceof rb?e.push(t.symbol):e.push(...Tm.map(t.children.values(),i=>i.symbol));return e.sort((t,i)=>b.compareRangesUsingStarts(t.range,i.range))}asListOfDocumentSymbols(){let e=this.getTopLevelSymbols(),t=[];return Xo._flattenDocumentSymbols(t,e,""),t.sort((i,n)=>U.compare(b.getStartPosition(i.range),b.getStartPosition(n.range))||U.compare(b.getEndPosition(n.range),b.getEndPosition(i.range)))}static _flattenDocumentSymbols(e,t,i){for(let n of t)e.push({kind:n.kind,tags:n.tags,name:n.name,detail:n.detail,containerName:n.containerName||i,range:n.range,selectionRange:n.selectionRange,children:void 0}),n.children&&Xo._flattenDocumentSymbols(e,n.children,n.name)}},Vs=Fi("IOutlineModelService"),sb=class{constructor(e,t){this._disposables=new R,this._cache=new Un(10,.7),this._debounceInformation=e.for(In,"DocumentSymbols",{min:350}),this._disposables.add(t.onModelRemoved(i=>{this._cache.delete(i.id)}))}dispose(){this._disposables.dispose()}getOrCreate(e,t){return TR(this,void 0,void 0,function*(){let i=In.ordered(e),n=this._cache.get(e.id);if(!n||n.versionId!==e.getVersionId()||!Yr(n.provider,i)){let r=new Ft;n={versionId:e.getVersionId(),provider:i,promiseCnt:0,source:r,promise:Xo.create(e,r.token),model:void 0},this._cache.set(e.id,n);let a=Date.now();n.promise.then(l=>{n.model=l,this._debounceInformation.update(e,Date.now()-a)}).catch(l=>{this._cache.delete(e.id)})}if(n.model)return n.model;n.promiseCnt+=1;let o=t.onCancellationRequested(()=>{--n.promiseCnt===0&&(n.source.cancel(),this._cache.delete(e.id))});try{return yield n.promise}finally{o.dispose()}})}};sb=wR([UE(0,Qn),UE(1,Yt)],sb);Ni(Vs,sb,!0)});var KE=sa(ab=>{ut();qt();Xt();Co();im();_t();var ER=ab&&ab.__awaiter||function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})};Pe.registerCommand("_executeDocumentSymbolProvider",function(s,...e){return ER(this,void 0,void 0,function*(){let[t]=e;qe(_e.isUri(t));let i=s.get(Vs),o=yield s.get(Gt).createModelReference(t);try{return(yield i.getOrCreate(o.object.textEditorModel,ge.None)).getTopLevelSymbols()}finally{o.dispose()}})})});var db,iI=Fl(()=>{Mt();db=class{constructor(e,t,i){this._editRange=e,this._originalSelection=t,this._text=i}getEditOperations(e,t){t.addTrackedEditOperation(this._editRange,this._text)}computeCursorState(e,t){let n=t.getInverseEditOperations()[0].range;return this._originalSelection.isEmpty()?new X(n.endLineNumber,Math.min(this._originalSelection.positionColumn,n.endColumn),n.endLineNumber,Math.min(this._originalSelection.positionColumn,n.endColumn)):new X(n.endLineNumber,n.endColumn-this._text.length,n.endLineNumber,n.endColumn)}}});var rI=sa(Fc=>{ke();Le();bd();ue();ee();Mt();He();jt();du();Qh();Q();Ne();iI();var IR=Fc&&Fc.__decorate||function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},kR=Fc&&Fc.__param||function(s,e){return function(t,i){e(t,i,s)}},Br=class cb{constructor(e,t){this.decorationIds=[],this.editor=e,this.editorWorkerService=t}static get(e){return e.getContribution(cb.ID)}dispose(){}run(e,t){this.currentRequest&&this.currentRequest.cancel();let i=this.editor.getSelection(),n=this.editor.getModel();if(!n||!i)return;let o=i;if(o.startLineNumber!==o.endLineNumber)return;let r=new _u(this.editor,5),a=n.uri;return this.editorWorkerService.canNavigateValueSet(a)?(this.currentRequest=Oe(l=>this.editorWorkerService.navigateValueSet(a,o,t)),this.currentRequest.then(l=>{if(!l||!l.range||!l.value||!r.validate(this.editor))return;let c=b.lift(l.range),d=l.range,h=l.value.length-(o.endColumn-o.startColumn);d={startLineNumber:d.startLineNumber,startColumn:d.startColumn,endLineNumber:d.endLineNumber,endColumn:d.startColumn+l.value.length},h>1&&(o=new X(o.startLineNumber,o.startColumn,o.endLineNumber,o.endColumn+h-1));let p=new db(c,o,l.value);this.editor.pushUndoStop(),this.editor.executeCommand(e,p),this.editor.pushUndoStop(),this.decorationIds=this.editor.deltaDecorations(this.decorationIds,[{range:d,options:cb.DECORATION}]),this.decorationRemover&&this.decorationRemover.cancel(),this.decorationRemover=ua(350),this.decorationRemover.then(()=>this.decorationIds=this.editor.deltaDecorations(this.decorationIds,[])).catch(de)}).catch(de)):Promise.resolve(void 0)}};Br.ID="editor.contrib.inPlaceReplaceController";Br.DECORATION=xe.register({description:"in-place-replace",className:"valueSetReplacement"});Br=IR([kR(1,Lo)],Br);var nI=class extends F{constructor(){super({id:"editor.action.inPlaceReplace.up",label:u("InPlaceReplaceAction.previous.label","Replace with Previous Value"),alias:"Replace with Previous Value",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:3154,weight:100}})}run(e,t){let i=Br.get(t);return i?i.run(this.id,!0):Promise.resolve(void 0)}},oI=class extends F{constructor(){super({id:"editor.action.inPlaceReplace.down",label:u("InPlaceReplaceAction.next.label","Replace with Next Value"),alias:"Replace with Next Value",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:3156,weight:100}})}run(e,t){let i=Br.get(t);return i?i.run(this.id,!1):Promise.resolve(void 0)}};J(Br.ID,Br);I(nI);I(oI);Me((s,e)=>{let t=s.getColor(Jh);t&&e.addRule(`.monaco-editor.vs .valueSetReplacement { outline: solid 2px ${t}; }`)})});var Ur,Mb=Fl(()=>{Ln();fP();ue();Q();Ur=class extends F{constructor(){super({id:Ur.ID,label:u({key:"toggle.tabMovesFocus",comment:["Turn on/off use of tab key for moving focus around VS Code"]},"Toggle Tab Key Moves Focus"),alias:"Toggle Tab Key Moves Focus",precondition:void 0,kbOpts:{kbExpr:null,primary:2091,mac:{primary:1323},weight:100}})}run(e,t){let n=!Xm.getTabFocusMode();Xm.setTabFocusMode(n),n?Ct(u("toggle.tabMovesFocus.on","Pressing Tab will now move focus to the next focusable element")):Ct(u("toggle.tabMovesFocus.off","Pressing Tab will now insert the tab character"))}};Ur.ID="editor.action.toggleTabFocusMode";I(Ur)});var dk=sa(jc=>{ke();B();ue();Re();kP();hr();LP();IP();kn();Ne();md();Wl();var JR=jc&&jc.__decorate||function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},dm=jc&&jc.__param||function(s,e){return function(t,i){e(t,i,s)}},Gc=class extends z{constructor(e,t,i,n,o){super();this._modelService=t,this._themeService=i,this._configurationService=n,this._editor=e,this._debounceInformation=o.for(Nm,"DocumentRangeSemanticTokens",{min:100,max:500}),this._tokenizeViewport=new $e(()=>this._tokenizeViewportNow(),100),this._outstandingRequests=[];let r=()=>{this._editor.hasModel()&&this._tokenizeViewport.schedule(this._debounceInformation.get(this._editor.getModel()))};this._register(this._editor.onDidScrollChange(()=>{r()})),this._register(this._editor.onDidChangeModel(()=>{this._cancelAll(),r()})),this._register(this._editor.onDidChangeModelContent(a=>{this._cancelAll(),r()})),this._register(Nm.onDidChange(()=>{this._cancelAll(),r()})),this._register(this._configurationService.onDidChangeConfiguration(a=>{a.affectsConfiguration(Yx)&&(this._cancelAll(),r())})),this._register(this._themeService.onDidColorThemeChange(()=>{this._cancelAll(),r()}))}_cancelAll(){for(let e of this._outstandingRequests)e.cancel();this._outstandingRequests=[]}_removeOutstandingRequest(e){for(let t=0,i=this._outstandingRequests.length;t<i;t++)if(this._outstandingRequests[t]===e){this._outstandingRequests.splice(t,1);return}}_tokenizeViewportNow(){if(!this._editor.hasModel())return;let e=this._editor.getModel();if(e.hasCompleteSemanticTokens())return;if(!Zx(e,this._themeService,this._configurationService)){e.hasSomeSemanticTokens()&&e.setSemanticTokens(null,!1);return}if(!qx(e)){e.hasSomeSemanticTokens()&&e.setSemanticTokens(null,!1);return}let t=this._editor.getVisibleRangesPlusViewportAboveBelow();this._outstandingRequests=this._outstandingRequests.concat(t.map(i=>this._requestRange(e,i)))}_requestRange(e,t){let i=e.getVersionId(),n=Oe(r=>Promise.resolve(Xx(e,t,r))),o=new on(!1);return n.then(r=>{if(this._debounceInformation.update(e,o.elapsed()),!r||!r.tokens||e.isDisposed()||e.getVersionId()!==i)return;let{provider:a,tokens:l}=r,c=this._modelService.getSemanticTokensProviderStyling(a);e.setPartialSemanticTokens(t,Kx(l,c,e.getLanguageId()))}).then(()=>this._removeOutstandingRequest(n),()=>this._removeOutstandingRequest(n)),n}};Gc.ID="editor.contrib.viewportSemanticTokens";Gc=JR([dm(1,Yt),dm(2,Nt),dm(3,it),dm(4,Qn)],Gc);J(Gc.ID,Gc)});var $k=Fl(()=>{});var Zk=sa(Uc=>{$k();Ae();sP();iC();Ln();as();B();Pi();Ye();Xt();ue();He();Mb();Ee();Be();Ki();qi();mt();Ne();Cr();var Kk=Uc&&Uc.__decorate||function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},pm=Uc&&Uc.__param||function(s,e){return function(t,i){e(t,i,s)}},qk=new pe("accessibilityHelpWidgetVisible",!1),Qs=class Xk extends z{constructor(e,t){super();this._editor=e,this._widget=this._register(t.createInstance(Cl,this._editor))}static get(e){return e.getContribution(Xk.ID)}show(){this._widget.show()}hide(){this._widget.hide()}};Qs.ID="editor.contrib.accessibilityHelpController";Qs=Kk([pm(1,le)],Qs);function lA(s,e){return!s||s.length===0?yt.noSelection:s.length===1?e?Ui(yt.singleSelectionRange,s[0].positionLineNumber,s[0].positionColumn,e):Ui(yt.singleSelection,s[0].positionLineNumber,s[0].positionColumn):e?Ui(yt.multiSelectionRange,s.length,e):s.length>0?Ui(yt.multiSelection,s.length):""}var Cl=class mm extends Ti{constructor(e,t,i,n){super();this._contextKeyService=t,this._keybindingService=i,this._openerService=n,this._editor=e,this._isVisibleKey=qk.bindTo(this._contextKeyService),this._domNode=zm(document.createElement("div")),this._domNode.setClassName("accessibilityHelpWidget"),this._domNode.setDisplay("none"),this._domNode.setAttribute("role","dialog"),this._domNode.setAttribute("aria-hidden","true"),this._contentDomNode=zm(document.createElement("div")),this._contentDomNode.setAttribute("role","document"),this._domNode.appendChild(this._contentDomNode),this._isVisible=!1,this._register(this._editor.onDidLayoutChange(()=>{this._isVisible&&this._layout()})),this._register(zi(this._contentDomNode.domNode,"keydown",o=>{if(!!this._isVisible&&(o.equals(2083)&&(Ct(yt.emergencyConfOn),this._editor.updateOptions({accessibilitySupport:"on"}),_i(this._contentDomNode.domNode),this._buildContent(),this._contentDomNode.domNode.focus(),o.preventDefault(),o.stopPropagation()),o.equals(2086))){Ct(yt.openingDocs);let r=this._editor.getRawOptions().accessibilityHelpUrl;typeof r=="undefined"&&(r="https://go.microsoft.com/fwlink/?linkid=852450"),this._openerService.open(_e.parse(r)),o.preventDefault(),o.stopPropagation()}})),this.onblur(this._contentDomNode.domNode,()=>{this.hide()}),this._editor.addOverlayWidget(this)}dispose(){this._editor.removeOverlayWidget(this),super.dispose()}getId(){return mm.ID}getDomNode(){return this._domNode.domNode}getPosition(){return{preference:null}}show(){this._isVisible||(this._isVisible=!0,this._isVisibleKey.set(!0),this._layout(),this._domNode.setDisplay("block"),this._domNode.setAttribute("aria-hidden","false"),this._contentDomNode.domNode.tabIndex=0,this._buildContent(),this._contentDomNode.domNode.focus())}_descriptionForCommand(e,t,i){let n=this._keybindingService.lookupKeybinding(e);return n?Ui(t,n.getAriaLabel()):Ui(i,e)}_buildContent(){let e=this._editor.getOptions(),t=this._editor.getSelections(),i=0;if(t){let a=this._editor.getModel();a&&t.forEach(l=>{i+=a.getValueLengthInRange(l)})}let n=lA(t,i);e.get(54)?e.get(81)?n+=yt.readonlyDiffEditor:n+=yt.editableDiffEditor:e.get(81)?n+=yt.readonlyEditor:n+=yt.editableEditor;let o=bi?yt.changeConfigToOnMac:yt.changeConfigToOnWinLinux;switch(e.get(2)){case 0:n+=`

 - `+o;break;case 2:n+=`

 - `+yt.auto_on;break;case 1:n+=`

 - `+yt.auto_off,n+=" "+o;break}e.get(130)?n+=`

 - `+this._descriptionForCommand(Ur.ID,yt.tabFocusModeOnMsg,yt.tabFocusModeOnMsgNoKb):n+=`

 - `+this._descriptionForCommand(Ur.ID,yt.tabFocusModeOffMsg,yt.tabFocusModeOffMsgNoKb);let r=bi?yt.openDocMac:yt.openDocWinLinux;n+=`

 - `+r,n+=`

`+yt.outroMsg,this._contentDomNode.domNode.appendChild(eC(n)),this._contentDomNode.domNode.setAttribute("aria-label",n)}hide(){!this._isVisible||(this._isVisible=!1,this._isVisibleKey.reset(),this._domNode.setDisplay("none"),this._domNode.setAttribute("aria-hidden","true"),this._contentDomNode.domNode.tabIndex=-1,_i(this._contentDomNode.domNode),this._editor.focus())}_layout(){let e=this._editor.getLayoutInfo(),t=Math.max(5,Math.min(mm.WIDTH,e.width-40)),i=Math.max(5,Math.min(mm.HEIGHT,e.height-40));this._domNode.setWidth(t),this._domNode.setHeight(i);let n=Math.round((e.height-i)/2);this._domNode.setTop(n);let o=Math.round((e.width-t)/2);this._domNode.setLeft(o)}};Cl.ID="editor.contrib.accessibilityHelpWidget";Cl.WIDTH=500;Cl.HEIGHT=300;Cl=Kk([pm(1,ie),pm(2,rt),pm(3,bt)],Cl);var Yk=class extends F{constructor(){super({id:"editor.action.showAccessibilityHelp",label:yt.showAccessibilityHelpAction,alias:"Show Accessibility Help",precondition:void 0,kbOpts:{primary:571,weight:100,linux:{primary:1595,secondary:[571]}}})}run(e,t){let i=Qs.get(t);i&&i.show()}};J(Qs.ID,Qs);I(Yk);var dA=ct.bindToContribution(Qs.get);$(new dA({id:"closeAccessibilityHelp",precondition:qk,handler:s=>s.hide(),kbOpts:{weight:100+100,kbExpr:S.focus,primary:9,secondary:[1033]}}));Me((s,e)=>{let t=s.getColor(cn);t&&e.addRule(`.monaco-editor .accessibilityHelpWidget { background-color: ${t}; }`);let i=s.getColor(Ta);i&&e.addRule(`.monaco-editor .accessibilityHelpWidget { color: ${i}; }`);let n=s.getColor(yr);n&&e.addRule(`.monaco-editor .accessibilityHelpWidget { box-shadow: 0 2px 8px ${n}; }`);let o=s.getColor(dn);o&&e.addRule(`.monaco-editor .accessibilityHelpWidget { border: 2px solid ${o}; }`)})});var Jk=Fl(()=>{});var iL=sa(Kc=>{Jk();Ae();Zn();B();ue();Re();dP();rn();lC();mt();Ne();Cr();gv();var cA=Kc&&Kc.__decorate||function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Qk=Kc&&Kc.__param||function(s,e){return function(t,i){e(t,i,s)}},_l=class eL extends z{constructor(e,t,i){super();this._editor=e,this._languageService=i,this._widget=null,this._register(this._editor.onDidChangeModel(n=>this.stop())),this._register(this._editor.onDidChangeModelLanguage(n=>this.stop())),this._register(va.onDidChange(n=>this.stop())),this._register(this._editor.onKeyUp(n=>n.keyCode===9&&this.stop()))}static get(e){return e.getContribution(eL.ID)}dispose(){this.stop(),super.dispose()}launch(){this._widget||!this._editor.hasModel()||(this._widget=new qc(this._editor,this._languageService))}stop(){this._widget&&(this._widget.dispose(),this._widget=null)}};_l.ID="editor.contrib.inspectTokens";_l=cA([Qk(1,xu),Qk(2,ft)],_l);var tL=class extends F{constructor(){super({id:"editor.action.inspectTokens",label:Mx.inspectTokensAction,alias:"Developer: Inspect Tokens",precondition:void 0})}run(e,t){let i=_l.get(t);i&&i.launch()}};function hA(s){let e="";for(let t=0,i=s.length;t<i;t++){let n=s.charCodeAt(t);switch(n){case 9:e+="\u2192";break;case 32:e+="\xB7";break;default:e+=String.fromCharCode(n)}}return e}function uA(s,e){let t=va.get(e);if(t)return t;let i=s.encodeLanguageId(e);return{getInitialState:()=>GS,tokenize:(n,o,r)=>jS(e,r),tokenizeEncoded:(n,o,r)=>US(i,r)}}var qc=class extends z{constructor(e,t){super();this.allowEditorOverflow=!0,this._editor=e,this._languageService=t,this._model=this._editor.getModel(),this._domNode=document.createElement("div"),this._domNode.className="tokens-inspect-widget",this._tokenizationSupport=uA(this._languageService.languageIdCodec,this._model.getLanguageId()),this._compute(this._editor.getPosition()),this._register(this._editor.onDidChangeCursorPosition(i=>this._compute(this._editor.getPosition()))),this._editor.addContentWidget(this)}dispose(){this._editor.removeContentWidget(this),super.dispose()}getId(){return qc._ID}_compute(e){let t=this._getTokensAtLine(e.lineNumber),i=0;for(let l=t.tokens1.length-1;l>=0;l--){let c=t.tokens1[l];if(e.column-1>=c.offset){i=l;break}}let n=0;for(let l=t.tokens2.length>>>1;l>=0;l--)if(e.column-1>=t.tokens2[l<<1]){n=l;break}let o=this._model.getLineContent(e.lineNumber),r="";if(i<t.tokens1.length){let l=t.tokens1[i].offset,c=i+1<t.tokens1.length?t.tokens1[i+1].offset:o.length;r=o.substring(l,c)}ns(this._domNode,W("h2.tm-token",void 0,hA(r),W("span.tm-token-length",void 0,`${r.length} ${r.length===1?"char":"chars"}`))),H(this._domNode,W("hr.tokens-inspect-separator",{style:"clear:both"}));let a=(n<<1)+1<t.tokens2.length?this._decodeMetadata(t.tokens2[(n<<1)+1]):null;H(this._domNode,W("table.tm-metadata-table",void 0,W("tbody",void 0,W("tr",void 0,W("td.tm-metadata-key",void 0,"language"),W("td.tm-metadata-value",void 0,`${a?a.languageId:"-?-"}`)),W("tr",void 0,W("td.tm-metadata-key",void 0,"token type"),W("td.tm-metadata-value",void 0,`${a?this._tokenTypeToString(a.tokenType):"-?-"}`)),W("tr",void 0,W("td.tm-metadata-key",void 0,"font style"),W("td.tm-metadata-value",void 0,`${a?this._fontStyleToString(a.fontStyle):"-?-"}`)),W("tr",void 0,W("td.tm-metadata-key",void 0,"foreground"),W("td.tm-metadata-value",void 0,`${a?we.Format.CSS.formatHex(a.foreground):"-?-"}`)),W("tr",void 0,W("td.tm-metadata-key",void 0,"background"),W("td.tm-metadata-value",void 0,`${a?we.Format.CSS.formatHex(a.background):"-?-"}`))))),H(this._domNode,W("hr.tokens-inspect-separator")),i<t.tokens1.length&&H(this._domNode,W("span.tm-token-type",void 0,t.tokens1[i].type)),this._editor.layoutContentWidget(this)}_decodeMetadata(e){let t=va.getColorMap(),i=fa.getLanguageId(e),n=fa.getTokenType(e),o=fa.getFontStyle(e),r=fa.getForeground(e),a=fa.getBackground(e);return{languageId:this._languageService.languageIdCodec.decodeLanguageId(i),tokenType:n,fontStyle:o,foreground:t[r],background:t[a]}}_tokenTypeToString(e){switch(e){case 0:return"Other";case 1:return"Comment";case 2:return"String";case 3:return"RegEx";default:return"??"}}_fontStyleToString(e){let t="";return e&1&&(t+="italic "),e&2&&(t+="bold "),e&4&&(t+="underline "),e&8&&(t+="strikethrough "),t.length===0&&(t="---"),t}_getTokensAtLine(e){let t=this._getStateBeforeLine(e),i=this._tokenizationSupport.tokenize(this._model.getLineContent(e),!0,t),n=this._tokenizationSupport.tokenizeEncoded(this._model.getLineContent(e),!0,t);return{startState:t,tokens1:i.tokens,tokens2:n.tokens,endState:i.endState}}_getStateBeforeLine(e){let t=this._tokenizationSupport.getInitialState();for(let i=1;i<e;i++)t=this._tokenizationSupport.tokenize(this._model.getLineContent(i),!0,t).endState;return t}getDomNode(){return this._domNode}getPosition(){return{position:this._editor.getPosition(),preference:[2,1]}}};qc._ID="editor.contrib.inspectTokensWidget";J(_l.ID,_l);I(tL);Me((s,e)=>{let t=s.getColor(ka);if(t){let o=s.type===Rh.HIGH_CONTRAST?2:1;e.addRule(`.monaco-editor .tokens-inspect-widget { border: ${o}px solid ${t}; }`),e.addRule(`.monaco-editor .tokens-inspect-widget .tokens-inspect-separator { background-color: ${t}; }`)}let i=s.getColor(To);i&&e.addRule(`.monaco-editor .tokens-inspect-widget { background-color: ${i}; }`);let n=s.getColor(Ia);n&&e.addRule(`.monaco-editor .tokens-inspect-widget { color: ${n}; }`)})});var $b={};nP($b,{CancellationTokenSource:()=>DP,Emitter:()=>RP,KeyCode:()=>AP,KeyMod:()=>FP,MarkerSeverity:()=>WP,MarkerTag:()=>BP,Position:()=>NP,Range:()=>zP,Selection:()=>OP,SelectionDirection:()=>HP,Token:()=>VP,Uri:()=>yg,editor:()=>Tu,languages:()=>Pn});var GP=Object.defineProperty,jP=Object.getOwnPropertyDescriptor,UP=Object.getOwnPropertyNames,$P=Object.prototype.hasOwnProperty,KP=(s,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of UP(e))!$P.call(s,n)&&(t||n!=="default")&&GP(s,n,{get:()=>e[n],enumerable:!(i=jP(e,n))||i.enumerable});return s},Sd={};KP(Sd,wr);var gC={},bg={},fC=class{constructor(s){Lt(this,"_languageId");Lt(this,"_loadingTriggered");Lt(this,"_lazyLoadPromise");Lt(this,"_lazyLoadPromiseResolve");Lt(this,"_lazyLoadPromiseReject");this._languageId=s,this._loadingTriggered=!1,this._lazyLoadPromise=new Promise((e,t)=>{this._lazyLoadPromiseResolve=e,this._lazyLoadPromiseReject=t})}static getOrCreate(s){return bg[s]||(bg[s]=new fC(s)),bg[s]}load(){return this._loadingTriggered||(this._loadingTriggered=!0,gC[this._languageId].loader().then(s=>this._lazyLoadPromiseResolve(s),s=>this._lazyLoadPromiseReject(s))),this._lazyLoadPromise}};function k(s){let e=s.id;gC[e]=s,Sd.languages.register(s);let t=fC.getOrCreate(e);Sd.languages.registerTokensProviderFactory(e,{create:async()=>(await t.load()).language}),Sd.languages.onLanguage(e,async()=>{let i=await t.load();Sd.languages.setLanguageConfiguration(e,i.conf)})}k({id:"abap",extensions:[".abap"],aliases:["abap","ABAP"],loader:()=>import("./abap-K3IHRSGJ.mjs")});k({id:"apex",extensions:[".cls"],aliases:["Apex","apex"],mimetypes:["text/x-apex-source","text/x-apex"],loader:()=>import("./apex-5VYGAOC6.mjs")});k({id:"azcli",extensions:[".azcli"],aliases:["Azure CLI","azcli"],loader:()=>import("./azcli-6EYOMUXT.mjs")});k({id:"bat",extensions:[".bat",".cmd"],aliases:["Batch","bat"],loader:()=>import("./bat-YPTKICUD.mjs")});k({id:"bicep",extensions:[".bicep"],aliases:["Bicep"],loader:()=>import("./bicep-2J4RTCUH.mjs")});k({id:"cameligo",extensions:[".mligo"],aliases:["Cameligo"],loader:()=>import("./cameligo-XVEUPKUW.mjs")});k({id:"clojure",extensions:[".clj",".cljs",".cljc",".edn"],aliases:["clojure","Clojure"],loader:()=>import("./clojure-ZWQG65VX.mjs")});k({id:"coffeescript",extensions:[".coffee"],aliases:["CoffeeScript","coffeescript","coffee"],mimetypes:["text/x-coffeescript","text/coffeescript"],loader:()=>import("./coffee-OT7MR2HY.mjs")});k({id:"c",extensions:[".c",".h"],aliases:["C","c"],loader:()=>import("./cpp-GOSG4266.mjs")});k({id:"cpp",extensions:[".cpp",".cc",".cxx",".hpp",".hh",".hxx"],aliases:["C++","Cpp","cpp"],loader:()=>import("./cpp-GOSG4266.mjs")});k({id:"csharp",extensions:[".cs",".csx",".cake"],aliases:["C#","csharp"],loader:()=>import("./csharp-YHFOV7Z5.mjs")});k({id:"csp",extensions:[],aliases:["CSP","csp"],loader:()=>import("./csp-N4IGBQ4K.mjs")});k({id:"css",extensions:[".css"],aliases:["CSS","css"],mimetypes:["text/css"],loader:()=>import("./css-7LT2TWBM.mjs")});k({id:"dart",extensions:[".dart"],aliases:["Dart","dart"],mimetypes:["text/x-dart-source","text/x-dart"],loader:()=>import("./dart-SK6VFUZJ.mjs")});k({id:"dockerfile",extensions:[".dockerfile"],filenames:["Dockerfile"],aliases:["Dockerfile"],loader:()=>import("./dockerfile-2A2WFBEB.mjs")});k({id:"ecl",extensions:[".ecl"],aliases:["ECL","Ecl","ecl"],loader:()=>import("./ecl-TSTCISX5.mjs")});k({id:"elixir",extensions:[".ex",".exs"],aliases:["Elixir","elixir","ex"],loader:()=>import("./elixir-KLGGIXOV.mjs")});k({id:"flow9",extensions:[".flow"],aliases:["Flow9","Flow","flow9","flow"],loader:()=>import("./flow9-FG7PCPQS.mjs")});k({id:"fsharp",extensions:[".fs",".fsi",".ml",".mli",".fsx",".fsscript"],aliases:["F#","FSharp","fsharp"],loader:()=>import("./fsharp-Q3C2OOWE.mjs")});k({id:"freemarker2",extensions:[".ftl",".ftlh",".ftlx"],aliases:["FreeMarker2","Apache FreeMarker2"],loader:()=>import("./freemarker2-FA5GXZ3C.mjs").then(s=>s.TagAutoInterpolationDollar)});k({id:"freemarker2.tag-angle.interpolation-dollar",aliases:["FreeMarker2 (Angle/Dollar)","Apache FreeMarker2 (Angle/Dollar)"],loader:()=>import("./freemarker2-FA5GXZ3C.mjs").then(s=>s.TagAngleInterpolationDollar)});k({id:"freemarker2.tag-bracket.interpolation-dollar",aliases:["FreeMarker2 (Bracket/Dollar)","Apache FreeMarker2 (Bracket/Dollar)"],loader:()=>import("./freemarker2-FA5GXZ3C.mjs").then(s=>s.TagBracketInterpolationDollar)});k({id:"freemarker2.tag-angle.interpolation-bracket",aliases:["FreeMarker2 (Angle/Bracket)","Apache FreeMarker2 (Angle/Bracket)"],loader:()=>import("./freemarker2-FA5GXZ3C.mjs").then(s=>s.TagAngleInterpolationBracket)});k({id:"freemarker2.tag-bracket.interpolation-bracket",aliases:["FreeMarker2 (Bracket/Bracket)","Apache FreeMarker2 (Bracket/Bracket)"],loader:()=>import("./freemarker2-FA5GXZ3C.mjs").then(s=>s.TagBracketInterpolationBracket)});k({id:"freemarker2.tag-auto.interpolation-dollar",aliases:["FreeMarker2 (Auto/Dollar)","Apache FreeMarker2 (Auto/Dollar)"],loader:()=>import("./freemarker2-FA5GXZ3C.mjs").then(s=>s.TagAutoInterpolationDollar)});k({id:"freemarker2.tag-auto.interpolation-bracket",aliases:["FreeMarker2 (Auto/Bracket)","Apache FreeMarker2 (Auto/Bracket)"],loader:()=>import("./freemarker2-FA5GXZ3C.mjs").then(s=>s.TagAutoInterpolationBracket)});k({id:"go",extensions:[".go"],aliases:["Go"],loader:()=>import("./go-2NOKFOBD.mjs")});k({id:"graphql",extensions:[".graphql",".gql"],aliases:["GraphQL","graphql","gql"],mimetypes:["application/graphql"],loader:()=>import("./graphql-VLQPQ6YE.mjs")});k({id:"handlebars",extensions:[".handlebars",".hbs"],aliases:["Handlebars","handlebars","hbs"],mimetypes:["text/x-handlebars-template"],loader:()=>import("./handlebars-PC2DTZHQ.mjs")});k({id:"hcl",extensions:[".tf",".tfvars",".hcl"],aliases:["Terraform","tf","HCL","hcl"],loader:()=>import("./hcl-PVVWWMYV.mjs")});k({id:"html",extensions:[".html",".htm",".shtml",".xhtml",".mdoc",".jsp",".asp",".aspx",".jshtm"],aliases:["HTML","htm","html","xhtml"],mimetypes:["text/html","text/x-jshtm","text/template","text/ng-template"],loader:()=>import("./html-NCSRSDLJ.mjs")});k({id:"ini",extensions:[".ini",".properties",".gitconfig"],filenames:["config",".gitattributes",".gitconfig",".editorconfig"],aliases:["Ini","ini"],loader:()=>import("./ini-53TPY2L3.mjs")});k({id:"java",extensions:[".java",".jav"],aliases:["Java","java"],mimetypes:["text/x-java-source","text/x-java"],loader:()=>import("./java-V5FPAVAU.mjs")});k({id:"javascript",extensions:[".js",".es6",".jsx",".mjs",".cjs"],firstLine:"^#!.*\\bnode",filenames:["jakefile"],aliases:["JavaScript","javascript","js"],mimetypes:["text/javascript"],loader:()=>import("./javascript-ZKYSF6YL.mjs")});k({id:"julia",extensions:[".jl"],aliases:["julia","Julia"],loader:()=>import("./julia-VYITWZZM.mjs")});k({id:"kotlin",extensions:[".kt"],aliases:["Kotlin","kotlin"],mimetypes:["text/x-kotlin-source","text/x-kotlin"],loader:()=>import("./kotlin-CELCMZL2.mjs")});k({id:"less",extensions:[".less"],aliases:["Less","less"],mimetypes:["text/x-less","text/less"],loader:()=>import("./less-WPG53ZKE.mjs")});k({id:"lexon",extensions:[".lex"],aliases:["Lexon"],loader:()=>import("./lexon-IDY6MWKV.mjs")});k({id:"lua",extensions:[".lua"],aliases:["Lua","lua"],loader:()=>import("./lua-EGYUJQQN.mjs")});k({id:"liquid",extensions:[".liquid",".html.liquid"],aliases:["Liquid","liquid"],mimetypes:["application/liquid"],loader:()=>import("./liquid-FZO6XEBO.mjs")});k({id:"m3",extensions:[".m3",".i3",".mg",".ig"],aliases:["Modula-3","Modula3","modula3","m3"],loader:()=>import("./m3-FE6VBUHI.mjs")});k({id:"markdown",extensions:[".md",".markdown",".mdown",".mkdn",".mkd",".mdwn",".mdtxt",".mdtext"],aliases:["Markdown","markdown"],loader:()=>import("./markdown-BTP3NDJR.mjs")});k({id:"mips",extensions:[".s"],aliases:["MIPS","MIPS-V"],mimetypes:["text/x-mips","text/mips","text/plaintext"],loader:()=>import("./mips-QP37IR5N.mjs")});k({id:"msdax",extensions:[".dax",".msdax"],aliases:["DAX","MSDAX"],loader:()=>import("./msdax-XMRQ64AQ.mjs")});k({id:"mysql",extensions:[],aliases:["MySQL","mysql"],loader:()=>import("./mysql-NMHZ6KMN.mjs")});k({id:"objective-c",extensions:[".m"],aliases:["Objective-C"],loader:()=>import("./objective-c-H2GNDXVX.mjs")});k({id:"pascal",extensions:[".pas",".p",".pp"],aliases:["Pascal","pas"],mimetypes:["text/x-pascal-source","text/x-pascal"],loader:()=>import("./pascal-O2M6HW5J.mjs")});k({id:"pascaligo",extensions:[".ligo"],aliases:["Pascaligo","ligo"],loader:()=>import("./pascaligo-X7NFNFSV.mjs")});k({id:"perl",extensions:[".pl"],aliases:["Perl","pl"],loader:()=>import("./perl-ZEPN5A74.mjs")});k({id:"pgsql",extensions:[],aliases:["PostgreSQL","postgres","pg","postgre"],loader:()=>import("./pgsql-N7OHKSG6.mjs")});k({id:"php",extensions:[".php",".php4",".php5",".phtml",".ctp"],aliases:["PHP","php"],mimetypes:["application/x-php"],loader:()=>import("./php-HXR2TM7M.mjs")});k({id:"pla",extensions:[".pla"],loader:()=>import("./pla-REJMUL7I.mjs")});k({id:"postiats",extensions:[".dats",".sats",".hats"],aliases:["ATS","ATS/Postiats"],loader:()=>import("./postiats-77EZLNCN.mjs")});k({id:"powerquery",extensions:[".pq",".pqm"],aliases:["PQ","M","Power Query","Power Query M"],loader:()=>import("./powerquery-6DMAGVI5.mjs")});k({id:"powershell",extensions:[".ps1",".psm1",".psd1"],aliases:["PowerShell","powershell","ps","ps1"],loader:()=>import("./powershell-WVQCMJ4V.mjs")});k({id:"proto",extensions:[".proto"],aliases:["protobuf","Protocol Buffers"],loader:()=>import("./protobuf-P4EKXNLH.mjs")});k({id:"pug",extensions:[".jade",".pug"],aliases:["Pug","Jade","jade"],loader:()=>import("./pug-KPCA7VD7.mjs")});k({id:"python",extensions:[".py",".rpy",".pyw",".cpy",".gyp",".gypi"],aliases:["Python","py"],firstLine:"^#!/.*\\bpython[0-9.-]*\\b",loader:()=>import("./python-B5XUV6WD.mjs")});k({id:"qsharp",extensions:[".qs"],aliases:["Q#","qsharp"],loader:()=>import("./qsharp-JD6E6PLK.mjs")});k({id:"r",extensions:[".r",".rhistory",".rmd",".rprofile",".rt"],aliases:["R","r"],loader:()=>import("./r-YHOZ4CNX.mjs")});k({id:"razor",extensions:[".cshtml"],aliases:["Razor","razor"],mimetypes:["text/x-cshtml"],loader:()=>import("./razor-ET4KTQWS.mjs")});k({id:"redis",extensions:[".redis"],aliases:["redis"],loader:()=>import("./redis-MMQAMP7V.mjs")});k({id:"redshift",extensions:[],aliases:["Redshift","redshift"],loader:()=>import("./redshift-YXXWZYQF.mjs")});k({id:"restructuredtext",extensions:[".rst"],aliases:["reStructuredText","restructuredtext"],loader:()=>import("./restructuredtext-57EY2VM3.mjs")});k({id:"ruby",extensions:[".rb",".rbx",".rjs",".gemspec",".pp"],filenames:["rakefile","Gemfile"],aliases:["Ruby","rb"],loader:()=>import("./ruby-H7W23BOM.mjs")});k({id:"rust",extensions:[".rs",".rlib"],aliases:["Rust","rust"],loader:()=>import("./rust-BOKABX7Y.mjs")});k({id:"sb",extensions:[".sb"],aliases:["Small Basic","sb"],loader:()=>import("./sb-4NG5KDDW.mjs")});k({id:"scala",extensions:[".scala",".sc",".sbt"],aliases:["Scala","scala","SBT","Sbt","sbt","Dotty","dotty"],mimetypes:["text/x-scala-source","text/x-scala","text/x-sbt","text/x-dotty"],loader:()=>import("./scala-B3SB7SZK.mjs")});k({id:"scheme",extensions:[".scm",".ss",".sch",".rkt"],aliases:["scheme","Scheme"],loader:()=>import("./scheme-NZDGQEXE.mjs")});k({id:"scss",extensions:[".scss"],aliases:["Sass","sass","scss"],mimetypes:["text/x-scss","text/scss"],loader:()=>import("./scss-LL3QYRDG.mjs")});k({id:"shell",extensions:[".sh",".bash"],aliases:["Shell","sh"],loader:()=>import("./shell-U7ZLBUGU.mjs")});k({id:"sol",extensions:[".sol"],aliases:["sol","solidity","Solidity"],loader:()=>import("./solidity-TBVOF7IF.mjs")});k({id:"aes",extensions:[".aes"],aliases:["aes","sophia","Sophia"],loader:()=>import("./sophia-6LXMXIQB.mjs")});k({id:"sparql",extensions:[".rq"],aliases:["sparql","SPARQL"],loader:()=>import("./sparql-HC7SPI2N.mjs")});k({id:"sql",extensions:[".sql"],aliases:["SQL"],loader:()=>import("./sql-GL5SCQWI.mjs")});k({id:"st",extensions:[".st",".iecst",".iecplc",".lc3lib"],aliases:["StructuredText","scl","stl"],loader:()=>import("./st-UXOIF6ZF.mjs")});k({id:"swift",aliases:["Swift","swift"],extensions:[".swift"],mimetypes:["text/swift"],loader:()=>import("./swift-XMAOL5XV.mjs")});k({id:"systemverilog",extensions:[".sv",".svh"],aliases:["SV","sv","SystemVerilog","systemverilog"],loader:()=>import("./systemverilog-RVNKRIP5.mjs")});k({id:"verilog",extensions:[".v",".vh"],aliases:["V","v","Verilog","verilog"],loader:()=>import("./systemverilog-RVNKRIP5.mjs")});k({id:"tcl",extensions:[".tcl"],aliases:["tcl","Tcl","tcltk","TclTk","tcl/tk","Tcl/Tk"],loader:()=>import("./tcl-5XWVI53V.mjs")});k({id:"twig",extensions:[".twig"],aliases:["Twig","twig"],mimetypes:["text/x-twig"],loader:()=>import("./twig-XJBDEMNC.mjs")});k({id:"typescript",extensions:[".ts",".tsx"],aliases:["TypeScript","ts","typescript"],mimetypes:["text/typescript"],loader:()=>import("./typescript-7OWC6XEB.mjs")});k({id:"vb",extensions:[".vb"],aliases:["Visual Basic","vb"],loader:()=>import("./vb-XTDC5QTW.mjs")});k({id:"xml",extensions:[".xml",".dtd",".ascx",".csproj",".config",".wxi",".wxl",".wxs",".xaml",".svg",".svgz",".opf",".xsl"],firstLine:"(\\<\\?xml.*)|(\\<svg)|(\\<\\!doctype\\s+svg)",aliases:["XML","xml"],mimetypes:["text/xml","application/xml","application/xaml+xml","application/xml-dtd"],loader:()=>import("./xml-SLJKJRQG.mjs")});k({id:"yaml",extensions:[".yaml",".yml"],aliases:["YAML","yaml","YML","yml"],mimetypes:["application/x-yaml","text/x-yaml"],loader:()=>import("./yaml-4QECXI7N.mjs")});var qP=Object.defineProperty,XP=Object.getOwnPropertyDescriptor,YP=Object.getOwnPropertyNames,ZP=Object.prototype.hasOwnProperty,JP=(s,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of YP(e))!ZP.call(s,n)&&(t||n!=="default")&&qP(s,n,{get:()=>e[n],enumerable:!(i=XP(e,n))||i.enumerable});return s},Ha={};JP(Ha,wr);var Sg=class{constructor(s,e,t){Lt(this,"_onDidChange",new Ha.Emitter);Lt(this,"_options");Lt(this,"_modeConfiguration");Lt(this,"_languageId");this._languageId=s,this.setOptions(e),this.setModeConfiguration(t)}get onDidChange(){return this._onDidChange.event}get languageId(){return this._languageId}get modeConfiguration(){return this._modeConfiguration}get diagnosticsOptions(){return this.options}get options(){return this._options}setOptions(s){this._options=s||Object.create(null),this._onDidChange.fire(this)}setDiagnosticsOptions(s){this.setOptions(s)}setModeConfiguration(s){this._modeConfiguration=s||Object.create(null),this._onDidChange.fire(this)}},vg={validate:!0,lint:{compatibleVendorPrefixes:"ignore",vendorPrefix:"warning",duplicateProperties:"warning",emptyRules:"warning",importStatement:"ignore",boxModel:"ignore",universalSelector:"ignore",zeroUnits:"ignore",fontFaceProperties:"warning",hexColorLength:"error",argumentsInColorFunction:"error",unknownProperties:"warning",ieHack:"ignore",unknownVendorSpecificProperties:"ignore",propertyIgnoredDueToDisplay:"warning",important:"ignore",float:"ignore",idSelector:"ignore"},data:{useDefaultDataProvider:!0}},xg={completionItems:!0,hovers:!0,documentSymbols:!0,definitions:!0,references:!0,documentHighlights:!0,rename:!0,colors:!0,foldingRanges:!0,diagnostics:!0,selectionRanges:!0},yC=new Sg("css",vg,xg),bC=new Sg("scss",vg,xg),SC=new Sg("less",vg,xg);Ha.languages.css={cssDefaults:yC,lessDefaults:SC,scssDefaults:bC};function Cg(){return import("./cssMode-3BH7WHR2.mjs")}Ha.languages.onLanguage("less",()=>{Cg().then(s=>s.setupMode(SC))});Ha.languages.onLanguage("scss",()=>{Cg().then(s=>s.setupMode(bC))});Ha.languages.onLanguage("css",()=>{Cg().then(s=>s.setupMode(yC))});var QP=Object.defineProperty,eM=Object.getOwnPropertyDescriptor,tM=Object.getOwnPropertyNames,iM=Object.prototype.hasOwnProperty,nM=(s,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of tM(e))!iM.call(s,n)&&(t||n!=="default")&&QP(s,n,{get:()=>e[n],enumerable:!(i=eM(e,n))||i.enumerable});return s},Eu={};nM(Eu,wr);var oM=class{constructor(s,e,t){Lt(this,"_onDidChange",new Eu.Emitter);Lt(this,"_options");Lt(this,"_modeConfiguration");Lt(this,"_languageId");this._languageId=s,this.setOptions(e),this.setModeConfiguration(t)}get onDidChange(){return this._onDidChange.event}get languageId(){return this._languageId}get options(){return this._options}get modeConfiguration(){return this._modeConfiguration}setOptions(s){this._options=s||Object.create(null),this._onDidChange.fire(this)}setModeConfiguration(s){this._modeConfiguration=s||Object.create(null),this._onDidChange.fire(this)}},rM={tabSize:4,insertSpaces:!1,wrapLineLength:120,unformatted:'default": "a, abbr, acronym, b, bdo, big, br, button, cite, code, dfn, em, i, img, input, kbd, label, map, object, q, samp, select, small, span, strong, sub, sup, textarea, tt, var',contentUnformatted:"pre",indentInnerHtml:!1,preserveNewLines:!0,maxPreserveNewLines:void 0,indentHandlebars:!1,endWithNewline:!1,extraLiners:"head, body, /html",wrapAttributes:"auto"},Iu={format:rM,suggest:{},data:{useDefaultDataProvider:!0}};function ku(s){return{completionItems:!0,hovers:!0,documentSymbols:!0,links:!0,documentHighlights:!0,rename:!0,colors:!0,foldingRanges:!0,selectionRanges:!0,diagnostics:s===vd,documentFormattingEdits:s===vd,documentRangeFormattingEdits:s===vd}}var vd="html",vC="handlebars",xC="razor",CC=Lu(vd,Iu,ku(vd)),sM=CC.defaults,_C=Lu(vC,Iu,ku(vC)),aM=_C.defaults,wC=Lu(xC,Iu,ku(xC)),lM=wC.defaults;Eu.languages.html={htmlDefaults:sM,razorDefaults:lM,handlebarDefaults:aM,htmlLanguageService:CC,handlebarLanguageService:_C,razorLanguageService:wC,registerHTMLLanguageService:Lu};function dM(){return import("./htmlMode-AFFC4I2A.mjs")}function Lu(s,e=Iu,t=ku(s)){let i=new oM(s,e,t),n,o=Eu.languages.onLanguage(s,async()=>{n=(await dM()).setupMode(i)});return{defaults:i,dispose(){o.dispose(),n==null||n.dispose(),n=void 0}}}var cM=Object.defineProperty,hM=Object.getOwnPropertyDescriptor,uM=Object.getOwnPropertyNames,pM=Object.prototype.hasOwnProperty,mM=(s,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of uM(e))!pM.call(s,n)&&(t||n!=="default")&&cM(s,n,{get:()=>e[n],enumerable:!(i=hM(e,n))||i.enumerable});return s},xd={};mM(xd,wr);var gM=class{constructor(s,e,t){Lt(this,"_onDidChange",new xd.Emitter);Lt(this,"_diagnosticsOptions");Lt(this,"_modeConfiguration");Lt(this,"_languageId");this._languageId=s,this.setDiagnosticsOptions(e),this.setModeConfiguration(t)}get onDidChange(){return this._onDidChange.event}get languageId(){return this._languageId}get modeConfiguration(){return this._modeConfiguration}get diagnosticsOptions(){return this._diagnosticsOptions}setDiagnosticsOptions(s){this._diagnosticsOptions=s||Object.create(null),this._onDidChange.fire(this)}setModeConfiguration(s){this._modeConfiguration=s||Object.create(null),this._onDidChange.fire(this)}},fM={validate:!0,allowComments:!0,schemas:[],enableSchemaRequest:!1,schemaRequest:"warning",schemaValidation:"warning",comments:"error",trailingCommas:"error"},yM={documentFormattingEdits:!0,documentRangeFormattingEdits:!0,completionItems:!0,hovers:!0,documentSymbols:!0,tokens:!0,colors:!0,foldingRanges:!0,diagnostics:!0,selectionRanges:!0},TC=new gM("json",fM,yM);xd.languages.json={jsonDefaults:TC};function bM(){return import("./jsonMode-VPKGNUXS.mjs")}xd.languages.register({id:"json",extensions:[".json",".bowerrc",".jshintrc",".jscsrc",".eslintrc",".babelrc",".har"],aliases:["JSON","json"],mimetypes:["application/json"]});xd.languages.onLanguage("json",()=>{bM().then(s=>s.setupMode(TC))});Ln();yo();ue();Mt();He();Q();Ee();var SM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},vM=function(s,e){return function(t,i){e(t,i,s)}},Pu=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Mu=new pe("selectionAnchorSet",!1),Ro=class EC{constructor(e,t){this.editor=e,this.selectionAnchorSetContextKey=Mu.bindTo(t),this.modelChangeListener=e.onDidChangeModel(()=>this.selectionAnchorSetContextKey.reset())}static get(e){return e.getContribution(EC.ID)}setSelectionAnchor(){if(this.editor.hasModel()){let e=this.editor.getPosition(),t=this.decorationId?[this.decorationId]:[],i=this.editor.deltaDecorations(t,[{range:X.fromPositions(e,e),options:{description:"selection-anchor",stickiness:1,hoverMessage:new ai().appendText(u("selectionAnchor","Selection Anchor")),className:"selection-anchor"}}]);this.decorationId=i[0],this.selectionAnchorSetContextKey.set(!!this.decorationId),Ct(u("anchorSet","Anchor set at {0}:{1}",e.lineNumber,e.column))}}goToSelectionAnchor(){if(this.editor.hasModel()&&this.decorationId){let e=this.editor.getModel().getDecorationRange(this.decorationId);e&&this.editor.setPosition(e.getStartPosition())}}selectFromAnchorToCursor(){if(this.editor.hasModel()&&this.decorationId){let e=this.editor.getModel().getDecorationRange(this.decorationId);if(e){let t=this.editor.getPosition();this.editor.setSelection(X.fromPositions(e.getStartPosition(),t)),this.cancelSelectionAnchor()}}}cancelSelectionAnchor(){this.decorationId&&(this.editor.deltaDecorations([this.decorationId],[]),this.decorationId=void 0,this.selectionAnchorSetContextKey.set(!1))}dispose(){this.cancelSelectionAnchor(),this.modelChangeListener.dispose()}};Ro.ID="editor.contrib.selectionAnchorController";Ro=SM([vM(1,ie)],Ro);var IC=class extends F{constructor(){super({id:"editor.action.setSelectionAnchor",label:u("setSelectionAnchor","Set Selection Anchor"),alias:"Set Selection Anchor",precondition:void 0,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2080),weight:100}})}run(e,t){var i;return Pu(this,void 0,void 0,function*(){(i=Ro.get(t))===null||i===void 0||i.setSelectionAnchor()})}},kC=class extends F{constructor(){super({id:"editor.action.goToSelectionAnchor",label:u("goToSelectionAnchor","Go to Selection Anchor"),alias:"Go to Selection Anchor",precondition:Mu})}run(e,t){var i;return Pu(this,void 0,void 0,function*(){(i=Ro.get(t))===null||i===void 0||i.goToSelectionAnchor()})}},LC=class extends F{constructor(){super({id:"editor.action.selectFromAnchorToCursor",label:u("selectFromAnchorToCursor","Select from Anchor to Cursor"),alias:"Select from Anchor to Cursor",precondition:Mu,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2089),weight:100}})}run(e,t){var i;return Pu(this,void 0,void 0,function*(){(i=Ro.get(t))===null||i===void 0||i.selectFromAnchorToCursor()})}},PC=class extends F{constructor(){super({id:"editor.action.cancelSelectionAnchor",label:u("cancelSelectionAnchor","Cancel Selection Anchor"),alias:"Cancel Selection Anchor",precondition:Mu,kbOpts:{kbExpr:S.editorTextFocus,primary:9,weight:100}})}run(e,t){var i;return Pu(this,void 0,void 0,function*(){(i=Ro.get(t))===null||i===void 0||i.cancelSelectionAnchor()})}};J(Ro.ID,Ro);I(IC);I(kC);I(LC);I(PC);ke();B();ue();tt();ee();Mt();He();ca();jt();Qh();Q();ri();mt();Ne();var xM=q("editorOverviewRuler.bracketMatchForeground",{dark:"#A0A0A0",light:"#A0A0A0",hc:"#A0A0A0"},u("overviewRulerBracketMatchForeground","Overview ruler marker color for matching brackets.")),MC=class extends F{constructor(){super({id:"editor.action.jumpToBracket",label:u("smartSelect.jumpBracket","Go to Bracket"),alias:"Go to Bracket",precondition:void 0,kbOpts:{kbExpr:S.editorTextFocus,primary:3160,weight:100}})}run(e,t){var i;(i=hn.get(t))===null||i===void 0||i.jumpToBracket()}},DC=class extends F{constructor(){super({id:"editor.action.selectToBracket",label:u("smartSelect.selectToBracket","Select to Bracket"),alias:"Select to Bracket",precondition:void 0,description:{description:"Select to Bracket",args:[{name:"args",schema:{type:"object",properties:{selectBrackets:{type:"boolean",default:!0}}}}]}})}run(e,t,i){var n;let o=!0;i&&i.selectBrackets===!1&&(o=!1),(n=hn.get(t))===null||n===void 0||n.selectToBracket(o)}},RC=class{constructor(e,t,i){this.position=e,this.brackets=t,this.options=i}},hn=class extends z{constructor(e){super();this._editor=e,this._lastBracketsData=[],this._lastVersionId=0,this._decorations=[],this._updateBracketsSoon=this._register(new $e(()=>this._updateBrackets(),50)),this._matchBrackets=this._editor.getOption(64),this._updateBracketsSoon.schedule(),this._register(e.onDidChangeCursorPosition(t=>{this._matchBrackets!=="never"&&this._updateBracketsSoon.schedule()})),this._register(e.onDidChangeModelContent(t=>{this._updateBracketsSoon.schedule()})),this._register(e.onDidChangeModel(t=>{this._lastBracketsData=[],this._decorations=[],this._updateBracketsSoon.schedule()})),this._register(e.onDidChangeModelLanguageConfiguration(t=>{this._lastBracketsData=[],this._updateBracketsSoon.schedule()})),this._register(e.onDidChangeConfiguration(t=>{t.hasChanged(64)&&(this._matchBrackets=this._editor.getOption(64),this._decorations=this._editor.deltaDecorations(this._decorations,[]),this._lastBracketsData=[],this._lastVersionId=0,this._updateBracketsSoon.schedule())})),this._register(e.onDidBlurEditorWidget(()=>{this._updateBracketsSoon.schedule()})),this._register(e.onDidFocusEditorWidget(()=>{this._updateBracketsSoon.schedule()}))}static get(e){return e.getContribution(hn.ID)}jumpToBracket(){if(!this._editor.hasModel())return;let e=this._editor.getModel(),t=this._editor.getSelections().map(i=>{let n=i.getStartPosition(),o=e.bracketPairs.matchBracket(n),r=null;if(o)o[0].containsPosition(n)?r=o[1].getStartPosition():o[1].containsPosition(n)&&(r=o[0].getStartPosition());else{let a=e.bracketPairs.findEnclosingBrackets(n);if(a)r=a[0].getStartPosition();else{let l=e.bracketPairs.findNextBracket(n);l&&l.range&&(r=l.range.getStartPosition())}}return r?new X(r.lineNumber,r.column,r.lineNumber,r.column):new X(n.lineNumber,n.column,n.lineNumber,n.column)});this._editor.setSelections(t),this._editor.revealRange(t[0])}selectToBracket(e){if(!this._editor.hasModel())return;let t=this._editor.getModel(),i=[];this._editor.getSelections().forEach(n=>{let o=n.getStartPosition(),r=t.bracketPairs.matchBracket(o);if(!r&&(r=t.bracketPairs.findEnclosingBrackets(o),!r)){let c=t.bracketPairs.findNextBracket(o);c&&c.range&&(r=t.bracketPairs.matchBracket(c.range.getStartPosition()))}let a=null,l=null;if(r){r.sort(b.compareRangesUsingStarts);let[c,d]=r;if(a=e?c.getStartPosition():c.getEndPosition(),l=e?d.getEndPosition():d.getStartPosition(),d.containsPosition(o)){let h=a;a=l,l=h}}a&&l&&i.push(new X(a.lineNumber,a.column,l.lineNumber,l.column))}),i.length>0&&(this._editor.setSelections(i),this._editor.revealRange(i[0]))}_updateBrackets(){if(this._matchBrackets==="never")return;this._recomputeBrackets();let e=[],t=0;for(let i of this._lastBracketsData){let n=i.brackets;n&&(e[t++]={range:n[0],options:i.options},e[t++]={range:n[1],options:i.options})}this._decorations=this._editor.deltaDecorations(this._decorations,e)}_recomputeBrackets(){if(!this._editor.hasModel()||!this._editor.hasWidgetFocus()){this._lastBracketsData=[],this._lastVersionId=0;return}let e=this._editor.getSelections();if(e.length>100){this._lastBracketsData=[],this._lastVersionId=0;return}let t=this._editor.getModel(),i=t.getVersionId(),n=[];this._lastVersionId===i&&(n=this._lastBracketsData);let o=[],r=0;for(let h=0,p=e.length;h<p;h++){let m=e[h];m.isEmpty()&&(o[r++]=m.getStartPosition())}o.length>1&&o.sort(U.compare);let a=[],l=0,c=0,d=n.length;for(let h=0,p=o.length;h<p;h++){let m=o[h];for(;c<d&&n[c].position.isBefore(m);)c++;if(c<d&&n[c].position.equals(m))a[l++]=n[c];else{let f=t.bracketPairs.matchBracket(m),v=hn._DECORATION_OPTIONS_WITH_OVERVIEW_RULER;!f&&this._matchBrackets==="always"&&(f=t.bracketPairs.findEnclosingBrackets(m,20),v=hn._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER),a[l++]=new RC(m,f,v)}}this._lastBracketsData=a,this._lastVersionId=i}};hn.ID="editor.contrib.bracketMatchingController";hn._DECORATION_OPTIONS_WITH_OVERVIEW_RULER=xe.register({description:"bracket-match-overview",stickiness:1,className:"bracket-match",overviewRuler:{color:nt(xM),position:Di.Center}});hn._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER=xe.register({description:"bracket-match-no-overview",stickiness:1,className:"bracket-match"});J(hn.ID,hn);I(DC);I(MC);Me((s,e)=>{let t=s.getColor(sx);t&&e.addRule(`.monaco-editor .bracket-match { background-color: ${t}; }`);let i=s.getColor(Jh);i&&e.addRule(`.monaco-editor .bracket-match { border: 1px solid ${i}; }`)});Oi.appendMenuItem(se.MenubarGoMenu,{group:"5_infile_nav",command:{id:"editor.action.jumpToBracket",title:u({key:"miGoToBracket",comment:["&& denotes a mnemonic"]},"Go to &&Bracket")},order:2});ue();He();ee();Mt();var _g=class{constructor(e,t){this._selection=e,this._isMovingLeft=t}getEditOperations(e,t){if(this._selection.startLineNumber!==this._selection.endLineNumber||this._selection.isEmpty())return;let i=this._selection.startLineNumber,n=this._selection.startColumn,o=this._selection.endColumn;if(!(this._isMovingLeft&&n===1)&&!(!this._isMovingLeft&&o===e.getLineMaxColumn(i)))if(this._isMovingLeft){let r=new b(i,n-1,i,n),a=e.getValueInRange(r);t.addEditOperation(r,null),t.addEditOperation(new b(i,o,i,o),a)}else{let r=new b(i,o,i,o+1),a=e.getValueInRange(r);t.addEditOperation(r,null),t.addEditOperation(new b(i,n,i,n),a)}}computeCursorState(e,t){return this._isMovingLeft?new X(this._selection.startLineNumber,this._selection.startColumn-1,this._selection.endLineNumber,this._selection.endColumn-1):new X(this._selection.startLineNumber,this._selection.startColumn+1,this._selection.endLineNumber,this._selection.endColumn+1)}};Q();var wg=class extends F{constructor(e,t){super(t);this.left=e}run(e,t){if(!t.hasModel())return;let i=[],n=t.getSelections();for(let o of n)i.push(new _g(o,this.left));t.pushUndoStop(),t.executeCommands(this.id,i),t.pushUndoStop()}},AC=class extends wg{constructor(){super(!0,{id:"editor.action.moveCarretLeftAction",label:u("caret.moveLeft","Move Selected Text Left"),alias:"Move Selected Text Left",precondition:S.writable})}},FC=class extends wg{constructor(){super(!1,{id:"editor.action.moveCarretRightAction",label:u("caret.moveRight","Move Selected Text Right"),alias:"Move Selected Text Right",precondition:S.writable})}};I(AC);I(FC);ue();ee();He();Q();var NC=class extends F{constructor(){super({id:"editor.action.transposeLetters",label:u("transposeLetters.label","Transpose Letters"),alias:"Transpose Letters",precondition:S.writable,kbOpts:{kbExpr:S.textInputFocus,primary:0,mac:{primary:306},weight:100}})}run(e,t){if(!t.hasModel())return;let i=t.getModel(),n=[],o=t.getSelections();for(let r of o){if(!r.isEmpty())continue;let a=r.startLineNumber,l=r.startColumn,c=i.getLineMaxColumn(a);if(a===1&&(l===1||l===2&&c===2))continue;let d=l===c?r.getPosition():ou.rightPosition(i,r.getPosition().lineNumber,r.getPosition().column),h=ou.leftPosition(i,d),p=ou.leftPosition(i,h),m=i.getValueInRange(b.fromPositions(p,h)),f=i.getValueInRange(b.fromPositions(h,d)),v=b.fromPositions(p,d);n.push(new Eo(v,f+m))}n.length>0&&(t.pushUndoStop(),t.executeCommands(this.id,n),t.pushUndoStop())}};I(NC);Kl();Pi();ue();Ci();He();Q();ri();var CM=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},ms="9_cutcopypaste",_M=ar||document.queryCommandSupported("cut"),zC=ar||document.queryCommandSupported("copy"),wM=typeof navigator.clipboard=="undefined"||WS?document.queryCommandSupported("paste"):!0;function Eg(s){return s.register(),s}var TM=_M?Eg(new Fh({id:"editor.action.clipboardCutAction",precondition:void 0,kbOpts:ar?{primary:2102,win:{primary:2102,secondary:[1044]},weight:100}:void 0,menuOpts:[{menuId:se.MenubarEditMenu,group:"2_ccp",title:u({key:"miCut",comment:["&& denotes a mnemonic"]},"Cu&&t"),order:1},{menuId:se.EditorContext,group:ms,title:u("actions.clipboard.cutLabel","Cut"),when:S.writable,order:1},{menuId:se.CommandPalette,group:"",title:u("actions.clipboard.cutLabel","Cut"),order:1},{menuId:se.SimpleEditorContext,group:ms,title:u("actions.clipboard.cutLabel","Cut"),when:S.writable,order:1}]})):void 0,EM=zC?Eg(new Fh({id:"editor.action.clipboardCopyAction",precondition:void 0,kbOpts:ar?{primary:2081,win:{primary:2081,secondary:[2067]},weight:100}:void 0,menuOpts:[{menuId:se.MenubarEditMenu,group:"2_ccp",title:u({key:"miCopy",comment:["&& denotes a mnemonic"]},"&&Copy"),order:2},{menuId:se.EditorContext,group:ms,title:u("actions.clipboard.copyLabel","Copy"),order:2},{menuId:se.CommandPalette,group:"",title:u("actions.clipboard.copyLabel","Copy"),order:1},{menuId:se.SimpleEditorContext,group:ms,title:u("actions.clipboard.copyLabel","Copy"),order:2}]})):void 0;Oi.appendMenuItem(se.MenubarEditMenu,{submenu:se.MenubarCopy,title:{value:u("copy as","Copy As"),original:"Copy As"},group:"2_ccp",order:3});Oi.appendMenuItem(se.EditorContext,{submenu:se.EditorContextCopy,title:{value:u("copy as","Copy As"),original:"Copy As"},group:ms,order:3});var Tg=wM?Eg(new Fh({id:"editor.action.clipboardPasteAction",precondition:void 0,kbOpts:ar?{primary:2100,win:{primary:2100,secondary:[1043]},linux:{primary:2100,secondary:[1043]},weight:100}:void 0,menuOpts:[{menuId:se.MenubarEditMenu,group:"2_ccp",title:u({key:"miPaste",comment:["&& denotes a mnemonic"]},"&&Paste"),order:4},{menuId:se.EditorContext,group:ms,title:u("actions.clipboard.pasteLabel","Paste"),when:S.writable,order:4},{menuId:se.CommandPalette,group:"",title:u("actions.clipboard.pasteLabel","Paste"),order:1},{menuId:se.SimpleEditorContext,group:ms,title:u("actions.clipboard.pasteLabel","Paste"),when:S.writable,order:4}]})):void 0,OC=class extends F{constructor(){super({id:"editor.action.clipboardCopyWithSyntaxHighlightingAction",label:u("actions.clipboard.copyWithSyntaxHighlightingLabel","Copy With Syntax Highlighting"),alias:"Copy With Syntax Highlighting",precondition:void 0,kbOpts:{kbExpr:S.textInputFocus,primary:0,weight:100}})}run(e,t){!t.hasModel()||!t.getOption(32)&&t.getSelection().isEmpty()||(Qm.forceCopyWithSyntaxHighlighting=!0,t.focus(),document.execCommand("copy"),Qm.forceCopyWithSyntaxHighlighting=!1)}};function HC(s,e){!s||(s.addImplementation(1e4,"code-editor",(t,i)=>{let n=t.get(Ve).getFocusedCodeEditor();if(n&&n.hasTextFocus()){let o=n.getOption(32),r=n.getSelection();return r&&r.isEmpty()&&!o||document.execCommand(e),!0}return!1}),s.addImplementation(0,"generic-dom",(t,i)=>(document.execCommand(e),!0)))}HC(TM,"cut");HC(EM,"copy");Tg&&(Tg.addImplementation(1e4,"code-editor",(s,e)=>{let t=s.get(Ve),i=s.get(cs),n=t.getFocusedCodeEditor();return n&&n.hasTextFocus()?!document.execCommand("paste")&&rh?(()=>CM(void 0,void 0,void 0,function*(){let r=yield i.readText();if(r!==""){let a=rx.INSTANCE.get(r),l=!1,c=null,d=null;a&&(l=n.getOption(32)&&!!a.isFromEmptySelection,c=typeof a.multicursorText!="undefined"?a.multicursorText:null,d=a.mode),n.trigger("keyboard","paste",{text:r,pasteOnNewLine:l,multicursorText:c,mode:d})}}))():!0:!1}),Tg.addImplementation(0,"generic-dom",(s,e)=>(document.execCommand("paste"),!0)));zC&&I(OC);ue();ut();Im();B();Ye();ue();He();St();ut();Le();B();Xt();bd();ee();Mt();Re();hr();_t();hs();var fe=class{constructor(e){this.value=e}equals(e){return this.value===e.value}contains(e){return this.equals(e)||this.value===""||e.value.startsWith(this.value+fe.sep)}intersects(e){return this.contains(e)||e.contains(this)}append(e){return new fe(this.value+fe.sep+e)}};fe.sep=".";fe.None=new fe("@@none@@");fe.Empty=new fe("");fe.QuickFix=new fe("quickfix");fe.Refactor=new fe("refactor");fe.Source=new fe("source");fe.SourceOrganizeImports=fe.Source.append("organizeImports");fe.SourceFixAll=fe.Source.append("fixAll");function WC(s,e){return!(s.include&&!s.include.intersects(e)||s.excludes&&s.excludes.some(t=>VC(e,t,s.include))||!s.includeSourceActions&&fe.Source.contains(e))}function BC(s,e){let t=e.kind?new fe(e.kind):void 0;return!(s.include&&(!t||!s.include.contains(t))||s.excludes&&t&&s.excludes.some(i=>VC(t,i,s.include))||!s.includeSourceActions&&t&&fe.Source.contains(t)||s.onlyIncludePreferredActions&&!e.isPreferred)}function VC(s,e,t){return!(!e.contains(s)||t&&e.contains(t))}var Xi=class{constructor(e,t,i){this.kind=e,this.apply=t,this.preferred=i}static fromUser(e,t){return!e||typeof e!="object"?new Xi(t.kind,t.apply,!1):new Xi(Xi.getKindFromUser(e,t.kind),Xi.getApplyFromUser(e,t.apply),Xi.getPreferredUser(e))}static getApplyFromUser(e,t){switch(typeof e.apply=="string"?e.apply.toLowerCase():""){case"first":return"first";case"never":return"never";case"ifsingle":return"ifSingle";default:return t}}static getKindFromUser(e,t){return typeof e.kind=="string"?new fe(e.kind):t}static getPreferredUser(e){return typeof e.preferred=="boolean"?e.preferred:!1}};var Ig=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Du="editor.action.codeAction",Ru="editor.action.refactor",Au="editor.action.sourceAction",Cd="editor.action.organizeImports",_d="editor.action.fixAll",Fu=class{constructor(e,t){this.action=e,this.provider=t}resolve(e){var t;return Ig(this,void 0,void 0,function*(){if(((t=this.provider)===null||t===void 0?void 0:t.resolveCodeAction)&&!this.action.edit){let i;try{i=yield this.provider.resolveCodeAction(this.action,e)}catch(n){Ue(n)}i&&(this.action.edit=i.edit)}return this})}},Nu=class extends z{constructor(e,t,i){super();this.documentation=t,this._register(i),this.allActions=[...e].sort(Nu.codeActionsComparator),this.validActions=this.allActions.filter(({action:n})=>!n.disabled)}static codeActionsComparator({action:e},{action:t}){return e.isPreferred&&!t.isPreferred?-1:!e.isPreferred&&t.isPreferred?1:Pt(e.diagnostics)?Pt(t.diagnostics)?e.diagnostics[0].message.localeCompare(t.diagnostics[0].message):-1:Pt(t.diagnostics)?1:0}get hasAutoFix(){return this.validActions.some(({action:e})=>!!e.kind&&fe.QuickFix.contains(new fe(e.kind))&&!!e.isPreferred)}},GC={actions:[],documentation:void 0};function wd(s,e,t,i,n){var o;let r=t.filter||{},a={only:(o=r.include)===null||o===void 0?void 0:o.value,trigger:t.type},l=new dC(s,n),c=IM(s,r),d=new R,h=c.map(m=>Ig(this,void 0,void 0,function*(){try{i.report(m);let f=yield m.provideCodeActions(s,e,a,l.token);if(f&&d.add(f),l.token.isCancellationRequested)return GC;let v=((f==null?void 0:f.actions)||[]).filter(w=>w&&BC(r,w)),_=kM(m,v,r.include);return{actions:v.map(w=>new Fu(w,m)),documentation:_}}catch(f){if(jn(f))throw f;return Ue(f),GC}})),p=$n.onDidChange(()=>{let m=$n.all(s);Yr(m,c)||l.cancel()});return Promise.all(h).then(m=>{let f=dh(m.map(_=>_.actions)),v=Vn(m.map(_=>_.documentation));return new Nu(f,v,d)}).finally(()=>{p.dispose(),l.dispose()})}function IM(s,e){return $n.all(s).filter(t=>t.providedCodeActionKinds?t.providedCodeActionKinds.some(i=>WC(e,new fe(i))):!0)}function kM(s,e,t){if(!s.documentation)return;let i=s.documentation.map(n=>({kind:new fe(n.kind),command:n.command}));if(t){let n;for(let o of i)o.kind.contains(t)&&(n?n.kind.contains(o.kind)&&(n=o):n=o);if(n)return n==null?void 0:n.command}for(let n of e)if(!!n.kind){for(let o of i)if(o.kind.contains(new fe(n.kind)))return o.command}}Pe.registerCommand("_executeCodeActionProvider",function(s,e,t,i,n){return Ig(this,void 0,void 0,function*(){if(!(e instanceof _e))throw wn();let o=s.get(Yt).getModel(e);if(!o)throw wn();let r=X.isISelection(t)?X.liftSelection(t):b.isIRange(t)?o.validateRange(t):void 0;if(!r)throw wn();let a=typeof i=="string"?new fe(i):void 0,l=yield wd(o,r,{type:1,filter:{includeSourceActions:!0,include:a}},Jn.None,ge.None),c=[],d=Math.min(l.validActions.length,typeof n=="number"?n:0);for(let h=0;h<d;h++)c.push(l.validActions[h].resolve(ge.None));try{return yield Promise.all(c),l.validActions.map(h=>h.action)}finally{setTimeout(()=>l.dispose(),100)}})});Le();Im();B();Ln();ke();B();ue();ee();Q();Ee();var LM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},PM=function(s,e){return function(t,i){e(t,i,s)}},Qt=class kg{constructor(e,t){this._messageWidget=new et,this._messageListeners=new R,this._editor=e,this._visible=kg.MESSAGE_VISIBLE.bindTo(t),this._editorListener=this._editor.onDidAttemptReadOnlyEdit(()=>this._onDidAttemptReadOnlyEdit())}static get(e){return e.getContribution(kg.ID)}dispose(){this._editorListener.dispose(),this._messageListeners.dispose(),this._messageWidget.dispose(),this._visible.reset()}showMessage(e,t){Ct(e),this._visible.set(!0),this._messageWidget.clear(),this._messageListeners.clear(),this._messageWidget.value=new Lg(this._editor,t,e),this._messageListeners.add(this._editor.onDidBlurEditorText(()=>this.closeMessage())),this._messageListeners.add(this._editor.onDidChangeCursorPosition(()=>this.closeMessage())),this._messageListeners.add(this._editor.onDidDispose(()=>this.closeMessage())),this._messageListeners.add(this._editor.onDidChangeModel(()=>this.closeMessage())),this._messageListeners.add(new Ri(()=>this.closeMessage(),3e3));let i;this._messageListeners.add(this._editor.onMouseMove(n=>{!n.target.position||(i?i.containsPosition(n.target.position)||this.closeMessage():i=new b(t.lineNumber-3,1,n.target.position.lineNumber+3,1))}))}closeMessage(){this._visible.reset(),this._messageListeners.clear(),this._messageWidget.value&&this._messageListeners.add(Lg.fadeOut(this._messageWidget.value))}_onDidAttemptReadOnlyEdit(){this._editor.hasModel()&&this.showMessage(u("editor.readonly","Cannot edit in read-only editor"),this._editor.getPosition())}};Qt.ID="editor.contrib.messageController";Qt.MESSAGE_VISIBLE=new pe("messageVisible",!1,u("messageVisible","Whether the editor is currently showing an inline message"));Qt=LM([PM(1,ie)],Qt);var MM=ct.bindToContribution(Qt.get);$(new MM({id:"leaveEditorMessage",precondition:Qt.MESSAGE_VISIBLE,handler:s=>s.closeMessage(),kbOpts:{weight:100+30,primary:9}}));var Lg=class{constructor(e,{lineNumber:t,column:i},n){this.allowEditorOverflow=!0,this.suppressMouseDown=!1,this._editor=e,this._editor.revealLinesInCenterIfOutsideViewport(t,t,0),this._position={lineNumber:t,column:i-1},this._domNode=document.createElement("div"),this._domNode.classList.add("monaco-editor-overlaymessage");let o=document.createElement("div");o.classList.add("anchor","top"),this._domNode.appendChild(o);let r=document.createElement("div");r.classList.add("message"),r.textContent=n,this._domNode.appendChild(r);let a=document.createElement("div");a.classList.add("anchor","below"),this._domNode.appendChild(a),this._editor.addContentWidget(this),this._domNode.classList.add("fadeIn")}static fadeOut(e){let t,i=()=>{e.dispose(),clearTimeout(t),e.getDomNode().removeEventListener("animationend",i)};return t=setTimeout(i,110),e.getDomNode().addEventListener("animationend",i),e.getDomNode().classList.add("fadeOut"),{dispose:i}}dispose(){this._editor.removeContentWidget(this)}getId(){return"messageoverlay"}getDomNode(){return this._domNode}getPosition(){return{position:this._position,preference:[1,2]}}afterRender(e){this._domNode.classList.toggle("below",e===2)}};J(Qt.ID,Qt);Be();Ae();os();Le();Im();B();tt();Re();Ki();var DM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},jC=function(s,e){return function(t,i){e(t,i,s)}},RM=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Pg=class extends _o{constructor(e,t){super(e.command?e.command.id:e.title,AM(e.title),void 0,!e.disabled,t);this.action=e}};function AM(s){return s.replace(/\r\n|\r|\n/g," ")}var zu=class extends z{constructor(e,t,i,n){super();this._editor=e,this._delegate=t,this._contextMenuService=i,this._visible=!1,this._showingActions=this._register(new et),this._keybindingResolver=new Td({getKeybindings:()=>n.getKeybindings()})}get isVisible(){return this._visible}show(e,t,i,n){return RM(this,void 0,void 0,function*(){let o=n.includeDisabledActions?t.allActions:t.validActions;if(!o.length){this._visible=!1;return}if(!this._editor.getDomNode())throw this._visible=!1,gh();this._visible=!0,this._showingActions.value=t;let r=this.getMenuActions(e,o,t.documentation),a=U.isIPosition(i)?this._toCoords(i):i||{x:0,y:0},l=this._keybindingResolver.getResolver(),c=this._editor.getOption(115);this._contextMenuService.showContextMenu({domForShadowRoot:c?this._editor.getDomNode():void 0,getAnchor:()=>a,getActions:()=>r,onHide:()=>{this._visible=!1,this._editor.focus()},autoSelectFirstItem:!0,getKeyBinding:d=>d instanceof Pg?l(d.action):void 0})})}getMenuActions(e,t,i){var n,o;let r=d=>new Pg(d.action,()=>this._delegate.onSelectCodeAction(d)),a=t.map(r),l=[...i],c=this._editor.getModel();if(c&&a.length)for(let d of $n.all(c))d._getAdditionalMenuItems&&l.push(...d._getAdditionalMenuItems({trigger:e.type,only:(o=(n=e.filter)===null||n===void 0?void 0:n.include)===null||o===void 0?void 0:o.value},t.map(h=>h.action)));return l.length&&a.push(new qn,...l.map(d=>r(new Fu({title:d.title,command:d},void 0)))),a}_toCoords(e){if(!this._editor.hasModel())return{x:0,y:0};this._editor.revealPosition(e,1),this._editor.render();let t=this._editor.getScrolledVisiblePosition(e),i=ni(this._editor.getDomNode()),n=i.left+t.left,o=i.top+t.top+t.height;return{x:n,y:o}}};zu=DM([jC(2,Po),jC(3,rt)],zu);var Td=class{constructor(e){this._keybindingProvider=e}getResolver(){let e=new Jr(()=>this._keybindingProvider.getKeybindings().filter(t=>Td.codeActionCommands.indexOf(t.command)>=0).filter(t=>t.resolvedKeybinding).map(t=>{let i=t.commandArgs;return t.command===Cd?i={kind:fe.SourceOrganizeImports.value}:t.command===_d&&(i={kind:fe.SourceFixAll.value}),Object.assign({resolvedKeybinding:t.resolvedKeybinding},Xi.fromUser(i,{kind:fe.None,apply:"never"}))}));return t=>{if(t.kind){let i=this.bestKeybindingForCodeAction(t,e.getValue());return i==null?void 0:i.resolvedKeybinding}}}bestKeybindingForCodeAction(e,t){if(!e.kind)return;let i=new fe(e.kind);return t.filter(n=>n.kind.contains(i)).filter(n=>n.preferred?e.isPreferred:!0).reduceRight((n,o)=>n?n.kind.contains(o.kind)?o:n:o,void 0)}};Td.codeActionCommands=[Ru,Du,Au,Cd,_d];Ae();Ym();xi();De();B();Sx();Q();Ki();mt();Ne();var FM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},NM=function(s,e){return function(t,i){e(t,i,s)}},Ed;(function(s){s.Hidden={type:0};class e{constructor(i,n,o,r){this.actions=i,this.trigger=n,this.editorPosition=o,this.widgetPosition=r,this.type=1}}s.Showing=e})(Ed||(Ed={}));var Id=class UC extends z{constructor(e,t,i,n){super();this._editor=e,this._quickFixActionId=t,this._preferredFixActionId=i,this._keybindingService=n,this._onClick=this._register(new G),this.onClick=this._onClick.event,this._state=Ed.Hidden,this._domNode=document.createElement("div"),this._domNode.className=K.lightBulb.classNames,this._editor.addContentWidget(this),this._register(this._editor.onDidChangeModelContent(o=>{let r=this._editor.getModel();(this.state.type!==1||!r||this.state.editorPosition.lineNumber>=r.getLineCount())&&this.hide()})),_a.ignoreTarget(this._domNode),this._register(iv(this._domNode,o=>{if(this.state.type!==1)return;this._editor.focus(),o.preventDefault();let{top:r,height:a}=ni(this._domNode),l=this._editor.getOption(59),c=Math.floor(l/3);this.state.widgetPosition.position!==null&&this.state.widgetPosition.position.lineNumber<this.state.editorPosition.lineNumber&&(c+=l),this._onClick.fire({x:o.posx,y:r+a+c,actions:this.state.actions,trigger:this.state.trigger})})),this._register(Ke(this._domNode,"mouseenter",o=>{if((o.buttons&1)!==1)return;this.hide();let r=new od;r.startMonitoring(o.target,o.buttons,nd,()=>{},()=>{r.dispose()})})),this._register(this._editor.onDidChangeConfiguration(o=>{o.hasChanged(57)&&!this._editor.getOption(57).enabled&&this.hide()})),this._updateLightBulbTitleAndIcon(),this._register(this._keybindingService.onDidUpdateKeybindings(this._updateLightBulbTitleAndIcon,this))}dispose(){super.dispose(),this._editor.removeContentWidget(this)}getId(){return"LightBulbWidget"}getDomNode(){return this._domNode}getPosition(){return this._state.type===1?this._state.widgetPosition:null}update(e,t,i){if(e.validActions.length<=0)return this.hide();let n=this._editor.getOptions();if(!n.get(57).enabled)return this.hide();let o=this._editor.getModel();if(!o)return this.hide();let{lineNumber:r,column:a}=o.validatePosition(i),l=o.getOptions().tabSize,c=n.get(44),d=o.getLineContent(r),h=cd(d,l),p=c.spaceWidth*h>22,m=v=>v>2&&this._editor.getTopForLineNumber(v)===this._editor.getTopForLineNumber(v-1),f=r;if(!p){if(r>1&&!m(r-1))f-=1;else if(!m(r+1))f+=1;else if(a*c.spaceWidth<22)return this.hide()}this.state=new Ed.Showing(e,t,i,{position:{lineNumber:f,column:1},preference:UC._posPref}),this._editor.layoutContentWidget(this)}hide(){this.state=Ed.Hidden,this._editor.layoutContentWidget(this)}get state(){return this._state}set state(e){this._state=e,this._updateLightBulbTitleAndIcon()}_updateLightBulbTitleAndIcon(){if(this.state.type===1&&this.state.actions.hasAutoFix){this._domNode.classList.remove(...K.lightBulb.classNamesArray),this._domNode.classList.add(...K.lightbulbAutofix.classNamesArray);let t=this._keybindingService.lookupKeybinding(this._preferredFixActionId);if(t){this.title=u("preferredcodeActionWithKb","Show Code Actions. Preferred Quick Fix Available ({0})",t.getLabel());return}}this._domNode.classList.remove(...K.lightbulbAutofix.classNamesArray),this._domNode.classList.add(...K.lightBulb.classNamesArray);let e=this._keybindingService.lookupKeybinding(this._quickFixActionId);e?this.title=u("codeActionWithKb","Show Code Actions ({0})",e.getLabel()):this.title=u("codeAction","Show Code Actions")}set title(e){this._domNode.title=e}};Id._posPref=[0];Id=FM([NM(3,rt)],Id);Me((s,e)=>{var t;let i=(t=s.getColor(wa))===null||t===void 0?void 0:t.transparent(.7),n=s.getColor(Jv);n&&e.addRule(`
		.monaco-editor .contentWidgets ${K.lightBulb.cssSelector} {
			color: ${n};
			background-color: ${i};
		}`);let o=s.getColor(Qv);o&&e.addRule(`
		.monaco-editor .contentWidgets ${K.lightbulbAutofix.cssSelector} {
			color: ${o};
			background-color: ${i};
		}`)});var zM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},OM=function(s,e){return function(t,i){e(t,i,s)}},Mg=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},HM=function(s,e,t,i,n){if(i==="m")throw new TypeError("Private method is not writable");if(i==="a"&&!n)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?s!==e||!n:!e.has(s))throw new TypeError("Cannot write private member to an object whose class did not declare it");return i==="a"?n.call(s,t):n?n.value=t:e.set(s,t),t},WM=function(s,e,t,i){if(t==="a"&&!i)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?s!==e||!i:!e.has(s))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?i:t==="a"?i.call(s):i?i.value:e.get(s)},Ou,Hu=class extends z{constructor(e,t,i,n,o){super();this._editor=e,this.delegate=n,this._activeCodeActions=this._register(new et),Ou.set(this,!1),this._codeActionWidget=new Jr(()=>this._register(o.createInstance(zu,this._editor,{onSelectCodeAction:r=>Mg(this,void 0,void 0,function*(){this.delegate.applyCodeAction(r,!0)})}))),this._lightBulbWidget=new Jr(()=>{let r=this._register(o.createInstance(Id,this._editor,t,i));return this._register(r.onClick(a=>this.showCodeActionList(a.trigger,a.actions,a,{includeDisabledActions:!1}))),r})}dispose(){HM(this,Ou,!0,"f"),super.dispose()}update(e){var t,i,n,o,r;return Mg(this,void 0,void 0,function*(){if(e.type!==1){(t=this._lightBulbWidget.rawValue)===null||t===void 0||t.hide();return}let a;try{a=yield e.actions}catch(l){de(l);return}if(!WM(this,Ou,"f"))if(this._lightBulbWidget.getValue().update(a,e.trigger,e.position),e.trigger.type===1){if((i=e.trigger.filter)===null||i===void 0?void 0:i.include){let c=this.tryGetValidActionToApply(e.trigger,a);if(c){try{this._lightBulbWidget.getValue().hide(),yield this.delegate.applyCodeAction(c,!1)}finally{a.dispose()}return}if(e.trigger.context){let d=this.getInvalidActionThatWouldHaveBeenApplied(e.trigger,a);if(d&&d.action.disabled){(n=Qt.get(this._editor))===null||n===void 0||n.showMessage(d.action.disabled,e.trigger.context.position),a.dispose();return}}}let l=!!((o=e.trigger.filter)===null||o===void 0?void 0:o.include);if(e.trigger.context&&(!a.allActions.length||!l&&!a.validActions.length)){(r=Qt.get(this._editor))===null||r===void 0||r.showMessage(e.trigger.context.notAvailableMessage,e.trigger.context.position),this._activeCodeActions.value=a,a.dispose();return}this._activeCodeActions.value=a,this._codeActionWidget.getValue().show(e.trigger,a,e.position,{includeDisabledActions:l})}else this._codeActionWidget.getValue().isVisible?a.dispose():this._activeCodeActions.value=a})}getInvalidActionThatWouldHaveBeenApplied(e,t){if(!!t.allActions.length&&(e.autoApply==="first"&&t.validActions.length===0||e.autoApply==="ifSingle"&&t.allActions.length===1))return t.allActions.find(({action:i})=>i.disabled)}tryGetValidActionToApply(e,t){if(!!t.validActions.length&&(e.autoApply==="first"&&t.validActions.length>0||e.autoApply==="ifSingle"&&t.validActions.length===1))return t.validActions[0]}showCodeActionList(e,t,i,n){return Mg(this,void 0,void 0,function*(){this._codeActionWidget.getValue().show(e,t,i,n)})}};Ou=new WeakMap;Hu=zM([OM(4,le)],Hu);Q();_t();Ee();Be();hs();ed();ke();Le();De();B();Hi();ee();Re();Ee();hs();var Dg=function(s,e,t,i){if(t==="a"&&!i)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?s!==e||!i:!e.has(s))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?i:t==="a"?i.call(s):i?i.value:e.get(s)},BM=function(s,e,t,i,n){if(i==="m")throw new TypeError("Private method is not writable");if(i==="a"&&!n)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?s!==e||!n:!e.has(s))throw new TypeError("Cannot write private member to an object whose class did not declare it");return i==="a"?n.call(s,t):n?n.value=t:e.set(s,t),t},Va,Rg=new pe("supportedCodeAction",""),$C=class extends z{constructor(e,t,i,n=250){super();this._editor=e,this._markerService=t,this._signalChange=i,this._delay=n,this._autoTriggerTimer=this._register(new Ri),this._register(this._markerService.onMarkerChanged(o=>this._onMarkerChanges(o))),this._register(this._editor.onDidChangeCursorPosition(()=>this._onCursorChange()))}trigger(e){let t=this._getRangeOfSelectionUnlessWhitespaceEnclosed(e);return this._createEventAndSignalChange(e,t)}_onMarkerChanges(e){let t=this._editor.getModel();!t||e.some(i=>eu(i,t.uri))&&this._autoTriggerTimer.cancelAndSet(()=>{this.trigger({type:2})},this._delay)}_onCursorChange(){this._autoTriggerTimer.cancelAndSet(()=>{this.trigger({type:2})},this._delay)}_getRangeOfMarker(e){let t=this._editor.getModel();if(!!t)for(let i of this._markerService.read({resource:t.uri})){let n=t.validateRange(i);if(b.intersectRanges(n,e))return b.lift(n)}}_getRangeOfSelectionUnlessWhitespaceEnclosed(e){if(!this._editor.hasModel())return;let t=this._editor.getModel(),i=this._editor.getSelection();if(i.isEmpty()&&e.type===2){let{lineNumber:n,column:o}=i.getPosition(),r=t.getLineContent(n);if(r.length===0)return;if(o===1){if(/\s/.test(r[0]))return}else if(o===t.getLineMaxColumn(n)){if(/\s/.test(r[r.length-1]))return}else if(/\s/.test(r[o-2])&&/\s/.test(r[o-1]))return}return i}_createEventAndSignalChange(e,t){let i=this._editor.getModel();if(!t||!i){this._signalChange(void 0);return}let n=this._getRangeOfMarker(t),o=n?n.getStartPosition():t.getStartPosition(),r={trigger:e,selection:t,position:o};return this._signalChange(r),r}},gs;(function(s){s.Empty={type:0};class e{constructor(i,n,o,r){this.trigger=i,this.rangeOrSelection=n,this.position=o,this._cancellablePromise=r,this.type=1,this.actions=r.catch(a=>{if(jn(a))return VM;throw a})}cancel(){this._cancellablePromise.cancel()}}s.Triggered=e})(gs||(gs={}));var VM={allActions:[],validActions:[],dispose:()=>{},documentation:[],hasAutoFix:!1},Ag=class extends z{constructor(e,t,i,n){super();this._editor=e,this._markerService=t,this._progressService=n,this._codeActionOracle=this._register(new et),this._state=gs.Empty,this._onDidChangeState=this._register(new G),this.onDidChangeState=this._onDidChangeState.event,Va.set(this,!1),this._supportedCodeActions=Rg.bindTo(i),this._register(this._editor.onDidChangeModel(()=>this._update())),this._register(this._editor.onDidChangeModelLanguage(()=>this._update())),this._register($n.onDidChange(()=>this._update())),this._update()}dispose(){Dg(this,Va,"f")||(BM(this,Va,!0,"f"),super.dispose(),this.setState(gs.Empty,!0))}_update(){if(Dg(this,Va,"f"))return;this._codeActionOracle.value=void 0,this.setState(gs.Empty);let e=this._editor.getModel();if(e&&$n.has(e)&&!this._editor.getOption(81)){let t=[];for(let i of $n.all(e))Array.isArray(i.providedCodeActionKinds)&&t.push(...i.providedCodeActionKinds);this._supportedCodeActions.set(t.join(" ")),this._codeActionOracle.value=new $C(this._editor,this._markerService,i=>{var n;if(!i){this.setState(gs.Empty);return}let o=Oe(r=>wd(e,i.selection,i.trigger,Jn.None,r));i.trigger.type===1&&((n=this._progressService)===null||n===void 0||n.showWhile(o,250)),this.setState(new gs.Triggered(i.trigger,i.selection,i.position,o))},void 0),this._codeActionOracle.value.trigger({type:2})}else this._supportedCodeActions.reset()}trigger(e){this._codeActionOracle.value&&this._codeActionOracle.value.trigger(e)}setState(e,t){e!==this._state&&(this._state.type===1&&this._state.cancel(),this._state=e,!t&&!Dg(this,Va,"f")&&this._onDidChangeState.fire(e))}};Va=new WeakMap;var GM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Wu=function(s,e){return function(t,i){e(t,i,s)}},KC=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})};function kd(s){return O.regex(Rg.keys()[0],new RegExp("(\\s|^)"+So(s.value)+"\\b"))}var Fg={type:"object",defaultSnippets:[{body:{kind:""}}],properties:{kind:{type:"string",description:u("args.schema.kind","Kind of the code action to run.")},apply:{type:"string",description:u("args.schema.apply","Controls when the returned actions are applied."),default:"ifSingle",enum:["first","ifSingle","never"],enumDescriptions:[u("args.schema.apply.first","Always apply the first returned code action."),u("args.schema.apply.ifSingle","Apply the first returned code action if it is the only one."),u("args.schema.apply.never","Do not apply the returned code actions.")]},preferred:{type:"boolean",default:!1,description:u("args.schema.preferred","Controls if only preferred code actions should be returned.")}}},Ao=class qC extends z{constructor(e,t,i,n,o){super();this._instantiationService=o,this._editor=e,this._model=this._register(new Ag(this._editor,t,i,n)),this._register(this._model.onDidChangeState(r=>this.update(r))),this._ui=new Jr(()=>this._register(new Hu(e,Fo.Id,ys.Id,{applyCodeAction:(r,a)=>KC(this,void 0,void 0,function*(){try{yield this._applyCodeAction(r)}finally{a&&this._trigger({type:2,filter:{}})}})},this._instantiationService)))}static get(e){return e.getContribution(qC.ID)}update(e){this._ui.getValue().update(e)}showCodeActions(e,t,i){return this._ui.getValue().showCodeActionList(e,t,i,{includeDisabledActions:!1})}manualTriggerAtCurrentPosition(e,t,i){var n;if(!this._editor.hasModel())return;(n=Qt.get(this._editor))===null||n===void 0||n.closeMessage();let o=this._editor.getPosition();this._trigger({type:1,filter:t,autoApply:i,context:{notAvailableMessage:e,position:o}})}_trigger(e){return this._model.trigger(e)}_applyCodeAction(e){return this._instantiationService.invokeFunction(jM,e,this._editor)}};Ao.ID="editor.contrib.quickFixController";Ao=GM([Wu(1,gd),Wu(2,ie),Wu(3,Mo),Wu(4,le)],Ao);function jM(s,e,t){return KC(this,void 0,void 0,function*(){let i=s.get(hu),n=s.get(dt),o=s.get(Yn),r=s.get(Ze);if(o.publicLog2("codeAction.applyCodeAction",{codeActionTitle:e.action.title,codeActionKind:e.action.kind,codeActionIsPreferred:!!e.action.isPreferred}),yield e.resolve(ge.None),e.action.edit&&(yield i.apply(uu.convert(e.action.edit),{editor:t,label:e.action.title})),e.action.command)try{yield n.executeCommand(e.action.command.id,...e.action.command.arguments||[])}catch(a){let l=UM(a);r.error(typeof l=="string"?l:u("applyCodeActionFailed","An unknown error occurred while applying the code action"))}})}function UM(s){return typeof s=="string"?s:s instanceof Error&&typeof s.message=="string"?s.message:void 0}function fs(s,e,t,i){if(s.hasModel()){let n=Ao.get(s);n&&n.manualTriggerAtCurrentPosition(e,t,i)}}var Fo=class extends F{constructor(){super({id:Fo.Id,label:u("quickfix.trigger.label","Quick Fix..."),alias:"Quick Fix...",precondition:O.and(S.writable,S.hasCodeActionsProvider),kbOpts:{kbExpr:S.editorTextFocus,primary:2132,weight:100}})}run(e,t){return fs(t,u("editor.action.quickFix.noneMessage","No code actions available"),void 0,void 0)}};Fo.Id="editor.action.quickFix";var Ng=class extends ct{constructor(){super({id:Du,precondition:O.and(S.writable,S.hasCodeActionsProvider),description:{description:"Trigger a code action",args:[{name:"args",schema:Fg}]}})}runEditorCommand(e,t,i){let n=Xi.fromUser(i,{kind:fe.Empty,apply:"ifSingle"});return fs(t,typeof(i==null?void 0:i.kind)=="string"?n.preferred?u("editor.action.codeAction.noneMessage.preferred.kind","No preferred code actions for '{0}' available",i.kind):u("editor.action.codeAction.noneMessage.kind","No code actions for '{0}' available",i.kind):n.preferred?u("editor.action.codeAction.noneMessage.preferred","No preferred code actions available"):u("editor.action.codeAction.noneMessage","No code actions available"),{include:n.kind,includeSourceActions:!0,onlyIncludePreferredActions:n.preferred},n.apply)}},zg=class extends F{constructor(){super({id:Ru,label:u("refactor.label","Refactor..."),alias:"Refactor...",precondition:O.and(S.writable,S.hasCodeActionsProvider),kbOpts:{kbExpr:S.editorTextFocus,primary:3120,mac:{primary:1328},weight:100},contextMenuOpts:{group:"1_modification",order:2,when:O.and(S.writable,kd(fe.Refactor))},description:{description:"Refactor...",args:[{name:"args",schema:Fg}]}})}run(e,t,i){let n=Xi.fromUser(i,{kind:fe.Refactor,apply:"never"});return fs(t,typeof(i==null?void 0:i.kind)=="string"?n.preferred?u("editor.action.refactor.noneMessage.preferred.kind","No preferred refactorings for '{0}' available",i.kind):u("editor.action.refactor.noneMessage.kind","No refactorings for '{0}' available",i.kind):n.preferred?u("editor.action.refactor.noneMessage.preferred","No preferred refactorings available"):u("editor.action.refactor.noneMessage","No refactorings available"),{include:fe.Refactor.contains(n.kind)?n.kind:fe.None,onlyIncludePreferredActions:n.preferred},n.apply)}},Og=class extends F{constructor(){super({id:Au,label:u("source.label","Source Action..."),alias:"Source Action...",precondition:O.and(S.writable,S.hasCodeActionsProvider),contextMenuOpts:{group:"1_modification",order:2.1,when:O.and(S.writable,kd(fe.Source))},description:{description:"Source Action...",args:[{name:"args",schema:Fg}]}})}run(e,t,i){let n=Xi.fromUser(i,{kind:fe.Source,apply:"never"});return fs(t,typeof(i==null?void 0:i.kind)=="string"?n.preferred?u("editor.action.source.noneMessage.preferred.kind","No preferred source actions for '{0}' available",i.kind):u("editor.action.source.noneMessage.kind","No source actions for '{0}' available",i.kind):n.preferred?u("editor.action.source.noneMessage.preferred","No preferred source actions available"):u("editor.action.source.noneMessage","No source actions available"),{include:fe.Source.contains(n.kind)?n.kind:fe.None,includeSourceActions:!0,onlyIncludePreferredActions:n.preferred},n.apply)}},Hg=class extends F{constructor(){super({id:Cd,label:u("organizeImports.label","Organize Imports"),alias:"Organize Imports",precondition:O.and(S.writable,kd(fe.SourceOrganizeImports)),kbOpts:{kbExpr:S.editorTextFocus,primary:1581,weight:100}})}run(e,t){return fs(t,u("editor.action.organize.noneMessage","No organize imports action available"),{include:fe.SourceOrganizeImports,includeSourceActions:!0},"ifSingle")}},Wg=class extends F{constructor(){super({id:_d,label:u("fixAll.label","Fix All"),alias:"Fix All",precondition:O.and(S.writable,kd(fe.SourceFixAll))})}run(e,t){return fs(t,u("fixAll.noneMessage","No fix all action available"),{include:fe.SourceFixAll,includeSourceActions:!0},"ifSingle")}},ys=class extends F{constructor(){super({id:ys.Id,label:u("autoFix.label","Auto Fix..."),alias:"Auto Fix...",precondition:O.and(S.writable,kd(fe.QuickFix)),kbOpts:{kbExpr:S.editorTextFocus,primary:1620,mac:{primary:2644},weight:100}})}run(e,t){return fs(t,u("editor.action.autoFix.noneMessage","No auto fixes available"),{include:fe.QuickFix,onlyIncludePreferredActions:!0},"ifSingle")}};ys.Id="editor.action.autoFix";J(Ao.ID,Ao);I(Fo);I(zg);I(Og);I(Hg);I(ys);I(Wg);$(new Ng);Ae();ke();Le();$S();B();ue();He();Re();ut();Le();B();qt();Xt();Re();hr();_t();var XC=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Ld=class{constructor(){this.lenses=[],this._disposables=new R}dispose(){this._disposables.dispose()}get isDisposed(){return this._disposables.isDisposed}add(e,t){this._disposables.add(e);for(let i of e.lenses)this.lenses.push({symbol:i,provider:t})}};function Bg(s,e){return XC(this,void 0,void 0,function*(){let t=cr.ordered(s),i=new Map,n=new Ld,o=t.map((r,a)=>XC(this,void 0,void 0,function*(){i.set(r,a);try{let l=yield Promise.resolve(r.provideCodeLenses(s,e));l&&n.add(l,r)}catch(l){Ue(l)}}));return yield Promise.all(o),n.lenses=n.lenses.sort((r,a)=>r.symbol.range.startLineNumber<a.symbol.range.startLineNumber?-1:r.symbol.range.startLineNumber>a.symbol.range.startLineNumber?1:i.get(r.provider)<i.get(a.provider)?-1:i.get(r.provider)>i.get(a.provider)?1:r.symbol.range.startColumn<a.symbol.range.startColumn?-1:r.symbol.range.startColumn>a.symbol.range.startColumn?1:0),n})}Pe.registerCommand("_executeCodeLensProvider",function(s,...e){let[t,i]=e;qe(_e.isUri(t)),qe(typeof i=="number"||!i);let n=s.get(Yt).getModel(t);if(!n)throw wn();let o=[],r=new R;return Bg(n,ge.None).then(a=>{r.add(a);let l=[];for(let c of a.lenses)i==null||Boolean(c.symbol.command)?o.push(c.symbol):i-- >0&&c.provider.resolveCodeLens&&l.push(Promise.resolve(c.provider.resolveCodeLens(n,c.symbol,ge.None)).then(d=>o.push(d||c.symbol)));return Promise.all(l)}).then(()=>o).finally(()=>{setTimeout(()=>r.dispose(),100)})});ke();dS();ga();ee();ts();Be();var $M=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},KM=function(s,e){return function(t,i){e(t,i,s)}},jg=Fi("ICodeLensCache"),Vg=class{constructor(e,t){this.lineCount=e,this.data=t}},Gg=class{constructor(e){this._fakeProvider=new class{provideCodeLenses(){throw new Error("not supported")}},this._cache=new Un(20,.75);let t="codelens/cache";pS(()=>e.remove(t,1));let i="codelens/cache2",n=e.get(i,1,"{}");this._deserialize(n),fh(e.onWillSaveState)(o=>{o.reason===Cu.SHUTDOWN&&e.store(i,this._serialize(),1,1)})}put(e,t){let i=t.lenses.map(r=>{var a;return{range:r.symbol.range,command:r.symbol.command&&{id:"",title:(a=r.symbol.command)===null||a===void 0?void 0:a.title}}}),n=new Ld;n.add({lenses:i,dispose:()=>{}},this._fakeProvider);let o=new Vg(e.getLineCount(),n);this._cache.set(e.uri.toString(),o)}get(e){let t=this._cache.get(e.uri.toString());return t&&t.lineCount===e.getLineCount()?t.data:void 0}delete(e){this._cache.delete(e.uri.toString())}_serialize(){let e=Object.create(null);for(let[t,i]of this._cache){let n=new Set;for(let o of i.data.lenses)n.add(o.symbol.range.startLineNumber);e[t]={lineCount:i.lineCount,lines:[...n.values()]}}return JSON.stringify(e)}_deserialize(e){try{let t=JSON.parse(e);for(let i in t){let n=t[i],o=[];for(let a of n.lines)o.push({range:new b(a,1,a,11)});let r=new Ld;r.add({lenses:o,dispose(){}},this._fakeProvider),this._cache.set(i,new Vg(n.lineCount,r))}}catch(t){}}};Gg=$M([KM(0,li)],Gg);Ni(jg,Gg);Ae();ee();jt();var YC=class{constructor(e,t,i){this.afterColumn=1073741824,this.afterLineNumber=e,this.heightInPx=t,this._onHeight=i,this.suppressMouseDown=!0,this.domNode=document.createElement("div")}onComputedHeight(e){this._lastHeight===void 0?this._lastHeight=e:this._lastHeight!==e&&(this._lastHeight=e,this._onHeight())}isVisible(){return this._lastHeight!==0&&this.domNode.hasAttribute("monaco-visible-view-zone")}},Pd=class{constructor(e,t,i){this.allowEditorOverflow=!1,this.suppressMouseDown=!0,this._commands=new Map,this._isEmpty=!0,this._editor=e,this._id=`codelens.widget-${Pd._idPool++}`,this.updatePosition(i),this._domNode=document.createElement("span"),this._domNode.className=`codelens-decoration ${t}`}withCommands(e,t){this._commands.clear();let i=[],n=!1;for(let o=0;o<e.length;o++){let r=e[o];if(!!r&&(n=!0,r.command)){let a=gu(r.command.title.trim());r.command.id?(i.push(W("a",{id:String(o),title:r.command.tooltip},...a)),this._commands.set(String(o),r.command)):i.push(W("span",{title:r.command.tooltip},...a)),o+1<e.length&&i.push(W("span",void 0,"\xA0|\xA0"))}}n?(ns(this._domNode,...i),this._isEmpty&&t&&this._domNode.classList.add("fadein"),this._isEmpty=!1):ns(this._domNode,W("span",void 0,"no commands"))}getCommand(e){return e.parentElement===this._domNode?this._commands.get(e.id):void 0}getId(){return this._id}getDomNode(){return this._domNode}updatePosition(e){let t=this._editor.getModel().getLineFirstNonWhitespaceColumn(e);this._widgetPosition={position:{lineNumber:e,column:t},preference:[1]}}getPosition(){return this._widgetPosition||null}};Pd._idPool=0;var Md=class{constructor(){this._removeDecorations=[],this._addDecorations=[],this._addDecorationsCallbacks=[]}addDecoration(e,t){this._addDecorations.push(e),this._addDecorationsCallbacks.push(t)}removeDecoration(e){this._removeDecorations.push(e)}commit(e){let t=e.deltaDecorations(this._removeDecorations,this._addDecorations);for(let i=0,n=t.length;i<n;i++)this._addDecorationsCallbacks[i](t[i])}},Bu=class{constructor(e,t,i,n,o,r,a){this._isDisposed=!1,this._editor=t,this._className=i,this._data=e,this._decorationIds=[];let l,c=[];this._data.forEach((d,h)=>{d.symbol.command&&c.push(d.symbol),n.addDecoration({range:d.symbol.range,options:xe.EMPTY},p=>this._decorationIds[h]=p),l?l=b.plusRange(l,d.symbol.range):l=b.lift(d.symbol.range)}),this._viewZone=new YC(l.startLineNumber-1,r,a),this._viewZoneId=o.addZone(this._viewZone),c.length>0&&(this._createContentWidgetIfNecessary(),this._contentWidget.withCommands(c,!1))}_createContentWidgetIfNecessary(){this._contentWidget?this._editor.layoutContentWidget(this._contentWidget):(this._contentWidget=new Pd(this._editor,this._className,this._viewZone.afterLineNumber+1),this._editor.addContentWidget(this._contentWidget))}dispose(e,t){this._decorationIds.forEach(e.removeDecoration,e),this._decorationIds=[],t&&t.removeZone(this._viewZoneId),this._contentWidget&&(this._editor.removeContentWidget(this._contentWidget),this._contentWidget=void 0),this._isDisposed=!0}isDisposed(){return this._isDisposed}isValid(){return this._decorationIds.some((e,t)=>{let i=this._editor.getModel().getDecorationRange(e),n=this._data[t].symbol;return!!(i&&b.isEmpty(n.range)===i.isEmpty())})}updateCodeLensSymbols(e,t){this._decorationIds.forEach(t.removeDecoration,t),this._decorationIds=[],this._data=e,this._data.forEach((i,n)=>{t.addDecoration({range:i.symbol.range,options:xe.EMPTY},o=>this._decorationIds[n]=o)})}updateHeight(e,t){this._viewZone.heightInPx=e,t.layoutZone(this._viewZoneId),this._contentWidget&&this._editor.layoutContentWidget(this._contentWidget)}computeIfNecessary(e){if(!this._viewZone.isVisible())return null;for(let t=0;t<this._decorationIds.length;t++){let i=e.getDecorationRange(this._decorationIds[t]);i&&(this._data[t].symbol.range=i)}return this._data}updateCommands(e){this._createContentWidgetIfNecessary(),this._contentWidget.withCommands(e,!0);for(let t=0;t<this._data.length;t++){let i=e[t];if(i){let{symbol:n}=this._data[t];n.command=i.command||n.command}}}getCommand(e){var t;return(t=this._contentWidget)===null||t===void 0?void 0:t.getCommand(e)}getLineNumber(){let e=this._editor.getModel().getDecorationRange(this._decorationIds[0]);return e?e.startLineNumber:-1}update(e){if(this.isValid()){let t=this._editor.getModel().getDecorationRange(this._decorationIds[0]);t&&(this._viewZone.afterLineNumber=t.startLineNumber-1,e.layoutZone(this._viewZoneId),this._contentWidget&&(this._contentWidget.updatePosition(t.startLineNumber),this._editor.layoutContentWidget(this._contentWidget)))}}};Q();_t();md();var qM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Vu=function(s,e){return function(t,i){e(t,i,s)}},XM=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Ga=class{constructor(e,t,i,n,o){this._editor=e,this._commandService=i,this._notificationService=n,this._codeLensCache=o,this._disposables=new R,this._localToDispose=new R,this._lenses=[],this._oldCodeLensModels=new R,this._provideCodeLensDebounce=t.for(cr,"CodeLensProvide",{min:250}),this._resolveCodeLensesDebounce=t.for(cr,"CodeLensResolve",{min:250,salt:"resolve"}),this._resolveCodeLensesScheduler=new $e(()=>this._resolveCodeLensesInViewport(),this._resolveCodeLensesDebounce.default()),this._disposables.add(this._editor.onDidChangeModel(()=>this._onModelChange())),this._disposables.add(this._editor.onDidChangeModelLanguage(()=>this._onModelChange())),this._disposables.add(this._editor.onDidChangeConfiguration(r=>{(r.hasChanged(44)||r.hasChanged(16)||r.hasChanged(15))&&this._updateLensStyle(),r.hasChanged(14)&&this._onModelChange()})),this._disposables.add(cr.onDidChange(this._onModelChange,this)),this._onModelChange(),this._styleClassName="_"+Lh(this._editor.getId()).toString(16),this._styleElement=dv(av(this._editor.getContainerDomNode())?this._editor.getContainerDomNode():void 0),this._updateLensStyle()}dispose(){var e;this._localDispose(),this._disposables.dispose(),this._oldCodeLensModels.dispose(),(e=this._currentCodeLensModel)===null||e===void 0||e.dispose(),this._styleElement.remove()}_getLayoutInfo(){let e=this._editor.getOption(16),t;return!e||e<5?(e=this._editor.getOption(46)*.9|0,t=this._editor.getOption(59)):t=e*Math.max(1.3,this._editor.getOption(59)/this._editor.getOption(46))|0,{codeLensHeight:t,fontSize:e}}_updateLensStyle(){let{codeLensHeight:e,fontSize:t}=this._getLayoutInfo(),i=this._editor.getOption(15),n=this._editor.getOption(44),o=`--codelens-font-family${this._styleClassName}`,r=`--codelens-font-features${this._styleClassName}`,a=`
		.monaco-editor .codelens-decoration.${this._styleClassName} { line-height: ${e}px; font-size: ${t}px; padding-right: ${Math.round(t*.5)}px; font-feature-settings: var(${r}) }
		.monaco-editor .codelens-decoration.${this._styleClassName} span.codicon { line-height: ${e}px; font-size: ${t}px; }
		`;i&&(a+=`.monaco-editor .codelens-decoration.${this._styleClassName} { font-family: var(${o}), ${lr.fontFamily}}`),this._styleElement.textContent=a,this._editor.getContainerDomNode().style.setProperty(o,i!=null?i:"inherit"),this._editor.getContainerDomNode().style.setProperty(r,n.fontFeatureSettings),this._editor.changeViewZones(l=>{for(let c of this._lenses)c.updateHeight(e,l)})}_localDispose(){var e,t,i;(e=this._getCodeLensModelPromise)===null||e===void 0||e.cancel(),this._getCodeLensModelPromise=void 0,(t=this._resolveCodeLensesPromise)===null||t===void 0||t.cancel(),this._resolveCodeLensesPromise=void 0,this._localToDispose.clear(),this._oldCodeLensModels.clear(),(i=this._currentCodeLensModel)===null||i===void 0||i.dispose()}_onModelChange(){this._localDispose();let e=this._editor.getModel();if(!e||!this._editor.getOption(14))return;let t=this._codeLensCache.get(e);if(t&&this._renderCodeLensSymbols(t),!cr.has(e)){t&&this._localToDispose.add(Zr(()=>{let n=this._codeLensCache.get(e);t===n&&(this._codeLensCache.delete(e),this._onModelChange())},30*1e3));return}for(let n of cr.all(e))if(typeof n.onDidChange=="function"){let o=n.onDidChange(()=>i.schedule());this._localToDispose.add(o)}let i=new $e(()=>{var n;let o=Date.now();(n=this._getCodeLensModelPromise)===null||n===void 0||n.cancel(),this._getCodeLensModelPromise=Oe(r=>Bg(e,r)),this._getCodeLensModelPromise.then(r=>{this._currentCodeLensModel&&this._oldCodeLensModels.add(this._currentCodeLensModel),this._currentCodeLensModel=r,this._codeLensCache.put(e,r);let a=this._provideCodeLensDebounce.update(e,Date.now()-o);i.delay=a,this._renderCodeLensSymbols(r),this._resolveCodeLensesInViewportSoon()},de)},this._provideCodeLensDebounce.get(e));this._localToDispose.add(i),this._localToDispose.add(We(()=>this._resolveCodeLensesScheduler.cancel())),this._localToDispose.add(this._editor.onDidChangeModelContent(()=>{this._editor.changeDecorations(n=>{this._editor.changeViewZones(o=>{let r=[],a=-1;this._lenses.forEach(c=>{!c.isValid()||a===c.getLineNumber()?r.push(c):(c.update(o),a=c.getLineNumber())});let l=new Md;r.forEach(c=>{c.dispose(l,o),this._lenses.splice(this._lenses.indexOf(c),1)}),l.commit(n)})}),i.schedule()})),this._localToDispose.add(this._editor.onDidFocusEditorWidget(()=>{i.schedule()})),this._localToDispose.add(this._editor.onDidScrollChange(n=>{n.scrollTopChanged&&this._lenses.length>0&&this._resolveCodeLensesInViewportSoon()})),this._localToDispose.add(this._editor.onDidLayoutChange(()=>{this._resolveCodeLensesInViewportSoon()})),this._localToDispose.add(We(()=>{if(this._editor.getModel()){let n=vr.capture(this._editor);this._editor.changeDecorations(o=>{this._editor.changeViewZones(r=>{this._disposeAllLenses(o,r)})}),n.restore(this._editor)}else this._disposeAllLenses(void 0,void 0)})),this._localToDispose.add(this._editor.onMouseDown(n=>{if(n.target.type!==9)return;let o=n.target.element;if((o==null?void 0:o.tagName)==="SPAN"&&(o=o.parentElement),(o==null?void 0:o.tagName)==="A")for(let r of this._lenses){let a=r.getCommand(o);if(a){this._commandService.executeCommand(a.id,...a.arguments||[]).catch(l=>this._notificationService.error(l));break}}})),i.schedule()}_disposeAllLenses(e,t){let i=new Md;for(let n of this._lenses)n.dispose(i,t);e&&i.commit(e),this._lenses.length=0}_renderCodeLensSymbols(e){if(!this._editor.hasModel())return;let t=this._editor.getModel().getLineCount(),i=[],n;for(let a of e.lenses){let l=a.symbol.range.startLineNumber;l<1||l>t||(n&&n[n.length-1].symbol.range.startLineNumber===l?n.push(a):(n=[a],i.push(n)))}let o=vr.capture(this._editor),r=this._getLayoutInfo();this._editor.changeDecorations(a=>{this._editor.changeViewZones(l=>{let c=new Md,d=0,h=0;for(;h<i.length&&d<this._lenses.length;){let p=i[h][0].symbol.range.startLineNumber,m=this._lenses[d].getLineNumber();m<p?(this._lenses[d].dispose(c,l),this._lenses.splice(d,1)):m===p?(this._lenses[d].updateCodeLensSymbols(i[h],c),h++,d++):(this._lenses.splice(d,0,new Bu(i[h],this._editor,this._styleClassName,c,l,r.codeLensHeight,()=>this._resolveCodeLensesInViewportSoon())),d++,h++)}for(;d<this._lenses.length;)this._lenses[d].dispose(c,l),this._lenses.splice(d,1);for(;h<i.length;)this._lenses.push(new Bu(i[h],this._editor,this._styleClassName,c,l,r.codeLensHeight,()=>this._resolveCodeLensesInViewportSoon())),h++;c.commit(a)})}),o.restore(this._editor)}_resolveCodeLensesInViewportSoon(){this._editor.getModel()&&this._resolveCodeLensesScheduler.schedule()}_resolveCodeLensesInViewport(){var e;(e=this._resolveCodeLensesPromise)===null||e===void 0||e.cancel(),this._resolveCodeLensesPromise=void 0;let t=this._editor.getModel();if(!t)return;let i=[],n=[];if(this._lenses.forEach(a=>{let l=a.computeIfNecessary(t);l&&(i.push(l),n.push(a))}),i.length===0)return;let o=Date.now(),r=Oe(a=>{let l=i.map((c,d)=>{let h=new Array(c.length),p=c.map((m,f)=>!m.symbol.command&&typeof m.provider.resolveCodeLens=="function"?Promise.resolve(m.provider.resolveCodeLens(t,m.symbol,a)).then(v=>{h[f]=v},Ue):(h[f]=m.symbol,Promise.resolve(void 0)));return Promise.all(p).then(()=>{!a.isCancellationRequested&&!n[d].isDisposed()&&n[d].updateCommands(h)})});return Promise.all(l)});this._resolveCodeLensesPromise=r,this._resolveCodeLensesPromise.then(()=>{let a=this._resolveCodeLensesDebounce.update(t,Date.now()-o);this._resolveCodeLensesScheduler.delay=a,this._currentCodeLensModel&&this._codeLensCache.put(t,this._currentCodeLensModel),this._oldCodeLensModels.clear(),r===this._resolveCodeLensesPromise&&(this._resolveCodeLensesPromise=void 0)},a=>{de(a),r===this._resolveCodeLensesPromise&&(this._resolveCodeLensesPromise=void 0)})}getModel(){return this._currentCodeLensModel}};Ga.ID="css.editor.codeLens";Ga=qM([Vu(1,Qn),Vu(2,dt),Vu(3,Ze),Vu(4,jg)],Ga);J(Ga.ID,Ga);I(class extends F{constructor(){super({id:"codelens.showLensesInCurrentLine",precondition:S.hasCodeLensProvider,label:u("showLensOnLine","Show CodeLens Commands For Current Line"),alias:"Show CodeLens Commands For Current Line"})}run(e,t){return XM(this,void 0,void 0,function*(){if(!t.hasModel())return;let i=e.get(Wi),n=e.get(dt),o=e.get(Ze),r=t.getSelection().positionLineNumber,a=t.getContribution(Ga.ID);if(!a)return;let l=a.getModel();if(!l)return;let c=[];for(let h of l.lenses)h.symbol.command&&h.symbol.range.startLineNumber===r&&c.push({label:h.symbol.command.title,command:h.symbol.command});if(c.length===0)return;let d=yield i.pick(c,{canPickMany:!1});if(!!d){if(l.isDisposed)return yield n.executeCommand(this.id);try{yield n.executeCommand(d.command.id,...d.command.arguments||[])}catch(h){o.error(h)}}})}});B();ue();ee();ke();Zn();Le();B();Ye();ue();ee();jt();Re();ut();Le();Xt();ee();Re();hr();_t();function ZC(s,e){let t=[],n=es.ordered(s).reverse().map(o=>Promise.resolve(o.provideDocumentColors(s,e)).then(r=>{if(Array.isArray(r))for(let a of r)t.push({colorInfo:a,provider:o})}));return Promise.all(n).then(()=>t)}function Ug(s,e,t,i){return Promise.resolve(t.provideColorPresentations(s,e,i))}Pe.registerCommand("_executeDocumentColorProvider",function(s,...e){let[t]=e;if(!(t instanceof _e))throw wn();let i=s.get(Yt).getModel(t);if(!i)throw wn();let n=[],r=es.ordered(i).reverse().map(a=>Promise.resolve(a.provideDocumentColors(i,ge.None)).then(l=>{if(Array.isArray(l))for(let c of l)n.push({range:c.range,color:[c.color.red,c.color.green,c.color.blue,c.color.alpha]})}));return Promise.all(r).then(()=>n)});Pe.registerCommand("_executeColorPresentationProvider",function(s,...e){let[t,i]=e,{uri:n,range:o}=i;if(!(n instanceof _e)||!Array.isArray(t)||t.length!==4||!b.isIRange(o))throw wn();let[r,a,l,c]=t,d=s.get(Yt).getModel(n);if(!d)throw wn();let h={range:o,color:{red:r,green:a,blue:l,alpha:c}},p=[],f=es.ordered(d).reverse().map(v=>Promise.resolve(v.provideColorPresentations(d,h,ge.None)).then(_=>{Array.isArray(_)&&p.push(..._)}));return Promise.all(f).then(()=>p)});kn();var YM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},ZM=function(s,e){return function(t,i){e(t,i,s)}},$g=Object.create({}),JM=500,Tr=class JC extends z{constructor(e,t){super();this._editor=e,this._configurationService=t,this._localToDispose=this._register(new R),this._decorationsIds=[],this._colorDatas=new Map,this._colorDecoratorIds=new Set,this._ruleFactory=new Zh(this._editor),this._colorDecorationClassRefs=this._register(new R),this._register(e.onDidChangeModel(()=>{this._isEnabled=this.isEnabled(),this.onModelChanged()})),this._register(e.onDidChangeModelLanguage(()=>this.onModelChanged())),this._register(es.onDidChange(()=>this.onModelChanged())),this._register(e.onDidChangeConfiguration(()=>{let i=this._isEnabled;this._isEnabled=this.isEnabled(),i!==this._isEnabled&&(this._isEnabled?this.onModelChanged():this.removeAllDecorations())})),this._timeoutTimer=null,this._computePromise=null,this._isEnabled=this.isEnabled(),this.onModelChanged()}isEnabled(){let e=this._editor.getModel();if(!e)return!1;let t=e.getLanguageId(),i=this._configurationService.getValue(t);if(i&&typeof i=="object"){let n=i.colorDecorators;if(n&&n.enable!==void 0&&!n.enable)return n.enable}return this._editor.getOption(17)}static get(e){return e.getContribution(this.ID)}dispose(){this.stop(),this.removeAllDecorations(),super.dispose()}onModelChanged(){if(this.stop(),!this._isEnabled)return;let e=this._editor.getModel();!e||!es.has(e)||(this._localToDispose.add(this._editor.onDidChangeModelContent(()=>{this._timeoutTimer||(this._timeoutTimer=new Ri,this._timeoutTimer.cancelAndSet(()=>{this._timeoutTimer=null,this.beginCompute()},JC.RECOMPUTE_TIME))})),this.beginCompute())}beginCompute(){this._computePromise=Oe(e=>{let t=this._editor.getModel();return t?ZC(t,e):Promise.resolve([])}),this._computePromise.then(e=>{this.updateDecorations(e),this.updateColorDecorators(e),this._computePromise=null},de)}stop(){this._timeoutTimer&&(this._timeoutTimer.cancel(),this._timeoutTimer=null),this._computePromise&&(this._computePromise.cancel(),this._computePromise=null),this._localToDispose.clear()}updateDecorations(e){let t=e.map(i=>({range:{startLineNumber:i.colorInfo.range.startLineNumber,startColumn:i.colorInfo.range.startColumn,endLineNumber:i.colorInfo.range.endLineNumber,endColumn:i.colorInfo.range.endColumn},options:xe.EMPTY}));this._decorationsIds=this._editor.deltaDecorations(this._decorationsIds,t),this._colorDatas=new Map,this._decorationsIds.forEach((i,n)=>this._colorDatas.set(i,e[n]))}updateColorDecorators(e){this._colorDecorationClassRefs.clear();let t=[];for(let i=0;i<e.length&&t.length<JM;i++){let{red:n,green:o,blue:r,alpha:a}=e[i].colorInfo.color,l=new wo(Math.round(n*255),Math.round(o*255),Math.round(r*255),a),c=`rgba(${l.r}, ${l.g}, ${l.b}, ${l.a})`,d=this._colorDecorationClassRefs.add(this._ruleFactory.createClassNameRef({backgroundColor:c}));t.push({range:{startLineNumber:e[i].colorInfo.range.startLineNumber,startColumn:e[i].colorInfo.range.startColumn,endLineNumber:e[i].colorInfo.range.endLineNumber,endColumn:e[i].colorInfo.range.endColumn},options:{description:"colorDetector",before:{content:ES,inlineClassName:`${d.className} colorpicker-color-decoration`,inlineClassNameAffectsLetterSpacing:!0,attachedData:$g}}})}this._colorDecoratorIds=new Set(this._editor.deltaDecorations([...this._colorDecoratorIds],t))}removeAllDecorations(){this._decorationsIds=this._editor.deltaDecorations(this._decorationsIds,[]),this._colorDecoratorIds=new Set(this._editor.deltaDecorations([...this._colorDecoratorIds],[])),this._colorDecorationClassRefs.clear()}getColorData(e){let t=this._editor.getModel();if(!t)return null;let i=t.getDecorationsInRange(b.fromPositions(e,e)).filter(n=>this._colorDatas.has(n.id));return i.length===0?null:this._colorDatas.get(i[0].id)}isColorDecorationId(e){return this._colorDecoratorIds.has(e)}};Tr.ID="editor.contrib.colorDetector";Tr.RECOMPUTE_TIME=1e3;Tr=YM([ZM(1,it)],Tr);J(Tr.ID,Tr);yo();B();ue();ee();He();rn();ke();Le();B();qt();bd();ue();tt();ee();Re();rn();Co();De();B();Pi();function Kg(s,e){return!!s[e]}var Gu=class{constructor(e,t){this.target=e.target,this.hasTriggerModifier=Kg(e.event,t.triggerModifier),this.hasSideBySideModifier=Kg(e.event,t.triggerSideBySideModifier),this.isNoneOrSingleMouseDown=e.event.detail<=1}},qg=class{constructor(e,t){this.keyCodeIsTriggerKey=e.keyCode===t.triggerKey,this.keyCodeIsSideBySideKey=e.keyCode===t.triggerSideBySideKey,this.hasTriggerModifier=Kg(e,t.triggerModifier)}},Dd=class{constructor(e,t,i,n){this.triggerKey=e,this.triggerModifier=t,this.triggerSideBySideKey=i,this.triggerSideBySideModifier=n}equals(e){return this.triggerKey===e.triggerKey&&this.triggerModifier===e.triggerModifier&&this.triggerSideBySideKey===e.triggerSideBySideKey&&this.triggerSideBySideModifier===e.triggerSideBySideModifier}};function QC(s){return s==="altKey"?bi?new Dd(57,"metaKey",6,"altKey"):new Dd(5,"ctrlKey",6,"altKey"):bi?new Dd(6,"altKey",57,"metaKey"):new Dd(6,"altKey",5,"ctrlKey")}var bs=class extends z{constructor(e){super();this._onMouseMoveOrRelevantKeyDown=this._register(new G),this.onMouseMoveOrRelevantKeyDown=this._onMouseMoveOrRelevantKeyDown.event,this._onExecute=this._register(new G),this.onExecute=this._onExecute.event,this._onCancel=this._register(new G),this.onCancel=this._onCancel.event,this._editor=e,this._opts=QC(this._editor.getOption(70)),this._lastMouseMoveEvent=null,this._hasTriggerKeyOnMouseDown=!1,this._lineNumberOnMouseDown=0,this._register(this._editor.onDidChangeConfiguration(t=>{if(t.hasChanged(70)){let i=QC(this._editor.getOption(70));if(this._opts.equals(i))return;this._opts=i,this._lastMouseMoveEvent=null,this._hasTriggerKeyOnMouseDown=!1,this._lineNumberOnMouseDown=0,this._onCancel.fire()}})),this._register(this._editor.onMouseMove(t=>this._onEditorMouseMove(new Gu(t,this._opts)))),this._register(this._editor.onMouseDown(t=>this._onEditorMouseDown(new Gu(t,this._opts)))),this._register(this._editor.onMouseUp(t=>this._onEditorMouseUp(new Gu(t,this._opts)))),this._register(this._editor.onKeyDown(t=>this._onEditorKeyDown(new qg(t,this._opts)))),this._register(this._editor.onKeyUp(t=>this._onEditorKeyUp(new qg(t,this._opts)))),this._register(this._editor.onMouseDrag(()=>this._resetHandler())),this._register(this._editor.onDidChangeCursorSelection(t=>this._onDidChangeCursorSelection(t))),this._register(this._editor.onDidChangeModel(t=>this._resetHandler())),this._register(this._editor.onDidChangeModelContent(()=>this._resetHandler())),this._register(this._editor.onDidScrollChange(t=>{(t.scrollTopChanged||t.scrollLeftChanged)&&this._resetHandler()}))}_onDidChangeCursorSelection(e){e.selection&&e.selection.startColumn!==e.selection.endColumn&&this._resetHandler()}_onEditorMouseMove(e){this._lastMouseMoveEvent=e,this._onMouseMoveOrRelevantKeyDown.fire([e,null])}_onEditorMouseDown(e){this._hasTriggerKeyOnMouseDown=e.hasTriggerModifier,this._lineNumberOnMouseDown=e.target.position?e.target.position.lineNumber:0}_onEditorMouseUp(e){let t=e.target.position?e.target.position.lineNumber:0;this._hasTriggerKeyOnMouseDown&&this._lineNumberOnMouseDown&&this._lineNumberOnMouseDown===t&&this._onExecute.fire(e)}_onEditorKeyDown(e){this._lastMouseMoveEvent&&(e.keyCodeIsTriggerKey||e.keyCodeIsSideBySideKey&&e.hasTriggerModifier)?this._onMouseMoveOrRelevantKeyDown.fire([this._lastMouseMoveEvent,e]):e.hasTriggerModifier&&this._onCancel.fire()}_onEditorKeyUp(e){e.keyCodeIsTriggerKey&&this._onCancel.fire()}_resetHandler(){this._lastMouseMoveEvent=null,this._hasTriggerKeyOnMouseDown=!1,this._onCancel.fire()}};Ae();os();xi();Zn();De();ph();ue();Ci();ph();Ci();_t();Ee();Be();Ne();sn();var QM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Er=function(s,e){return function(t,i){e(t,i,s)}},Mn=class extends Ix{constructor(e,t,i,n,o,r,a,l,c,d,h){super(e,Object.assign(Object.assign({},i.getRawOptions()),{overflowWidgetsDomNode:i.getOverflowWidgetsDomNode()}),{},n,o,r,a,l,c,d,h);this._parentEditor=i,this._overwriteOptions=t,super.updateOptions(this._overwriteOptions),this._register(i.onDidChangeConfiguration(p=>this._onParentConfigurationChanged(p)))}getParentEditor(){return this._parentEditor}_onParentConfigurationChanged(e){super.updateOptions(this._parentEditor.getRawOptions()),super.updateOptions(this._overwriteOptions)}updateOptions(e){la(this._overwriteOptions,e,!0),super.updateOptions(this._overwriteOptions)}};Mn=QM([Er(3,le),Er(4,Ve),Er(5,dt),Er(6,ie),Er(7,Nt),Er(8,Ze),Er(9,zh),Er(10,Dt)],Mn);Ae();Zn();B();ph();ee();jt();var t_=new we(new wo(0,122,204)),e1={showArrow:!0,showFrame:!0,className:"",frameColor:t_,arrowColor:t_,keepEditorSelection:!1},t1="vs.editor.contrib.zoneWidget",i_=class{constructor(e,t,i,n,o,r){this.id="",this.domNode=e,this.afterLineNumber=t,this.afterColumn=i,this.heightInLines=n,this._onDomNodeTop=o,this._onComputedHeight=r}onDomNodeTop(e){this._onDomNodeTop(e)}onComputedHeight(e){this._onComputedHeight(e)}},n_=class{constructor(e,t){this._id=e,this._domNode=t}getId(){return this._id}getDomNode(){return this._domNode}getPosition(){return null}},Rd=class{constructor(e){this._editor=e,this._ruleName=Rd._IdGenerator.nextId(),this._decorations=[],this._color=null,this._height=-1}dispose(){this.hide(),Um(this._ruleName)}set color(e){this._color!==e&&(this._color=e,this._updateStyle())}set height(e){this._height!==e&&(this._height=e,this._updateStyle())}_updateStyle(){Um(this._ruleName),cv(`.monaco-editor ${this._ruleName}`,`border-style: solid; border-color: transparent; border-bottom-color: ${this._color}; border-width: ${this._height}px; bottom: -${this._height}px; margin-left: -${this._height}px; `)}show(e){e.column===1&&(e={lineNumber:e.lineNumber,column:2}),this._decorations=this._editor.deltaDecorations(this._decorations,[{range:b.fromPositions(e),options:{description:"zone-widget-arrow",className:this._ruleName,stickiness:1}}])}hide(){this._editor.deltaDecorations(this._decorations,[])}};Rd._IdGenerator=new Qx(".arrow-decoration-");var Xg=class{constructor(e,t={}){this._arrow=null,this._overlayWidget=null,this._resizeSash=null,this._positionMarkerId=[],this._viewZone=null,this._disposables=new R,this.container=null,this._isShowing=!1,this.editor=e,this.options=rS(t),la(this.options,e1,!1),this.domNode=document.createElement("div"),this.options.isAccessible||(this.domNode.setAttribute("aria-hidden","true"),this.domNode.setAttribute("role","presentation")),this._disposables.add(this.editor.onDidLayoutChange(i=>{let n=this._getWidth(i);this.domNode.style.width=n+"px",this.domNode.style.left=this._getLeft(i)+"px",this._onWidth(n)}))}dispose(){this._overlayWidget&&(this.editor.removeOverlayWidget(this._overlayWidget),this._overlayWidget=null),this._viewZone&&this.editor.changeViewZones(e=>{this._viewZone&&e.removeZone(this._viewZone.id),this._viewZone=null}),this.editor.deltaDecorations(this._positionMarkerId,[]),this._positionMarkerId=[],this._disposables.dispose()}create(){this.domNode.classList.add("zone-widget"),this.options.className&&this.domNode.classList.add(this.options.className),this.container=document.createElement("div"),this.container.classList.add("zone-widget-container"),this.domNode.appendChild(this.container),this.options.showArrow&&(this._arrow=new Rd(this.editor),this._disposables.add(this._arrow)),this._fillContainer(this.container),this._initSash(),this._applyStyles()}style(e){e.frameColor&&(this.options.frameColor=e.frameColor),e.arrowColor&&(this.options.arrowColor=e.arrowColor),this._applyStyles()}_applyStyles(){if(this.container&&this.options.frameColor){let e=this.options.frameColor.toString();this.container.style.borderTopColor=e,this.container.style.borderBottomColor=e}if(this._arrow&&this.options.arrowColor){let e=this.options.arrowColor.toString();this._arrow.color=e}}_getWidth(e){return e.width-e.minimap.minimapWidth-e.verticalScrollbarWidth}_getLeft(e){return e.minimap.minimapWidth>0&&e.minimap.minimapLeft===0?e.minimap.minimapWidth:0}_onViewZoneTop(e){this.domNode.style.top=e+"px"}_onViewZoneHeight(e){if(this.domNode.style.height=`${e}px`,this.container){let t=e-this._decoratingElementsHeight();this.container.style.height=`${t}px`;let i=this.editor.getLayoutInfo();this._doLayout(t,this._getWidth(i))}this._resizeSash&&this._resizeSash.layout()}get position(){let[e]=this._positionMarkerId;if(!e)return;let t=this.editor.getModel();if(!t)return;let i=t.getDecorationRange(e);if(!!i)return i.getStartPosition()}show(e,t){let i=b.isIRange(e)?b.lift(e):b.fromPositions(e);this._isShowing=!0,this._showImpl(i,t),this._isShowing=!1,this._positionMarkerId=this.editor.deltaDecorations(this._positionMarkerId,[{range:i,options:xe.EMPTY}])}hide(){this._viewZone&&(this.editor.changeViewZones(e=>{this._viewZone&&e.removeZone(this._viewZone.id)}),this._viewZone=null),this._overlayWidget&&(this.editor.removeOverlayWidget(this._overlayWidget),this._overlayWidget=null),this._arrow&&this._arrow.hide()}_decoratingElementsHeight(){let e=this.editor.getOption(59),t=0;if(this.options.showArrow){let i=Math.round(e/3);t+=2*i}if(this.options.showFrame){let i=Math.round(e/9);t+=2*i}return t}_showImpl(e,t){let i=e.getStartPosition(),n=this.editor.getLayoutInfo(),o=this._getWidth(n);this.domNode.style.width=`${o}px`,this.domNode.style.left=this._getLeft(n)+"px";let r=document.createElement("div");r.style.overflow="hidden";let a=this.editor.getOption(59),l=Math.max(12,this.editor.getLayoutInfo().height/a*.8);t=Math.min(t,l);let c=0,d=0;if(this._arrow&&this.options.showArrow&&(c=Math.round(a/3),this._arrow.height=c,this._arrow.show(i)),this.options.showFrame&&(d=Math.round(a/9)),this.editor.changeViewZones(m=>{this._viewZone&&m.removeZone(this._viewZone.id),this._overlayWidget&&(this.editor.removeOverlayWidget(this._overlayWidget),this._overlayWidget=null),this.domNode.style.top="-1000px",this._viewZone=new i_(r,i.lineNumber,i.column,t,f=>this._onViewZoneTop(f),f=>this._onViewZoneHeight(f)),this._viewZone.id=m.addZone(this._viewZone),this._overlayWidget=new n_(t1+this._viewZone.id,this.domNode),this.editor.addOverlayWidget(this._overlayWidget)}),this.container&&this.options.showFrame){let m=this.options.frameWidth?this.options.frameWidth:d;this.container.style.borderTopWidth=m+"px",this.container.style.borderBottomWidth=m+"px"}let h=t*a-this._decoratingElementsHeight();this.container&&(this.container.style.top=c+"px",this.container.style.height=h+"px",this.container.style.overflow="hidden"),this._doLayout(h,o),this.options.keepEditorSelection||this.editor.setSelection(e);let p=this.editor.getModel();if(p){let m=e.endLineNumber+1;m<=p.getLineCount()?this.revealLine(m,!1):this.revealLine(p.getLineCount(),!0)}}revealLine(e,t){t?this.editor.revealLineInCenter(e,0):this.editor.revealLine(e,0)}setCssClass(e,t){!this.container||(t&&this.container.classList.remove(t),this.container.classList.add(e))}_onWidth(e){}_doLayout(e,t){}_relayout(e){this._viewZone&&this._viewZone.heightInLines!==e&&this.editor.changeViewZones(t=>{this._viewZone&&(this._viewZone.heightInLines=e,t.layoutZone(this._viewZone.id))})}_initSash(){if(this._resizeSash)return;this._resizeSash=this._disposables.add(new ko(this.domNode,this,{orientation:1})),this.options.isResizeable||(this._resizeSash.state=0);let e;this._disposables.add(this._resizeSash.onDidStart(t=>{this._viewZone&&(e={startY:t.startY,heightInLines:this._viewZone.heightInLines})})),this._disposables.add(this._resizeSash.onDidEnd(()=>{e=void 0})),this._disposables.add(this._resizeSash.onDidChange(t=>{if(e){let i=(t.currentY-e.startY)/this.editor.getOption(59),n=i<0?Math.ceil(i):Math.floor(i),o=e.heightInLines+n;o>5&&o<35&&this._relayout(o)}}))}getHorizontalSashLeft(){return 0}getHorizontalSashTop(){return(this.domNode.style.height===null?0:parseInt(this.domNode.style.height))-this._decoratingElementsHeight()/2}getHorizontalSashWidth(){let e=this.editor.getLayoutInfo();return e.width-e.minimap.minimapWidth}};Q();Ae();Vm();Ae();Ae();Vm();Ym();os();De();var o_=class extends Jl{constructor(e,t){super();this._onDidChangeVisibility=this._register(new G),this.onDidChangeVisibility=this._onDidChangeVisibility.event,this._element=H(e,W(".monaco-dropdown")),this._label=H(this._element,W(".dropdown-label"));let i=t.labelRenderer;i||(i=o=>(o.textContent=t.label||"",null));for(let o of[$i.CLICK,$i.MOUSE_DOWN,id.Tap])this._register(Ke(this.element,o,r=>an.stop(r,!0)));for(let o of[$i.MOUSE_DOWN,id.Tap])this._register(Ke(this._label,o,r=>{r instanceof MouseEvent&&r.detail>1||(this.visible?this.hide():this.show())}));this._register(Ke(this._label,$i.KEY_UP,o=>{let r=new is(o);(r.equals(3)||r.equals(10))&&(an.stop(o,!0),this.visible?this.hide():this.show())}));let n=i(this._label);n&&this._register(n),this._register(_a.addTarget(this._label))}get element(){return this._element}show(){this.visible||(this.visible=!0,this._onDidChangeVisibility.fire(!0))}hide(){this.visible&&(this.visible=!1,this._onDidChangeVisibility.fire(!1))}dispose(){super.dispose(),this.hide(),this.boxContainer&&(this.boxContainer.remove(),this.boxContainer=void 0),this.contents&&(this.contents.remove(),this.contents=void 0),this._label&&(this._label.remove(),this._label=void 0)}},Yg=class extends o_{constructor(e,t){super(e,t);this._actions=[],this._contextMenuProvider=t.contextMenuProvider,this.actions=t.actions||[],this.actionProvider=t.actionProvider,this.menuClassName=t.menuClassName||"",this.menuAsChild=!!t.menuAsChild}set menuOptions(e){this._menuOptions=e}get menuOptions(){return this._menuOptions}get actions(){return this.actionProvider?this.actionProvider.getActions():this._actions}set actions(e){this._actions=e}show(){super.show(),this.element.classList.add("active"),this._contextMenuProvider.showContextMenu({getAnchor:()=>this.element,getActions:()=>this.actions,getActionsContext:()=>this.menuOptions?this.menuOptions.context:null,getActionViewItem:e=>this.menuOptions&&this.menuOptions.actionViewItemProvider?this.menuOptions.actionViewItemProvider(e):void 0,getKeyBinding:e=>this.menuOptions&&this.menuOptions.getKeyBinding?this.menuOptions.getKeyBinding(e):void 0,getMenuClassName:()=>this.menuClassName,onHide:()=>this.onHide(),actionRunner:this.menuOptions?this.menuOptions.actionRunner:void 0,anchorAlignment:this.menuOptions?this.menuOptions.anchorAlignment:0,domForShadowRoot:this.menuAsChild?this.element:void 0})}hide(){super.hide()}onHide(){this.hide(),this.element.classList.remove("active")}};De();var ju=class extends au{constructor(e,t,i,n=Object.create(null)){super(null,e,n);this.actionItem=null,this._onDidChangeVisibility=this._register(new G),this.menuActionsOrProvider=t,this.contextMenuProvider=i,this.options=n,this.options.actionRunner&&(this.actionRunner=this.options.actionRunner)}render(e){this.actionItem=e;let t=o=>{this.element=H(o,W("a.action-label"));let r=[];return typeof this.options.classNames=="string"?r=this.options.classNames.split(/\s+/g).filter(a=>!!a):this.options.classNames&&(r=this.options.classNames),r.find(a=>a==="icon")||r.push("codicon"),this.element.classList.add(...r),this.element.setAttribute("role","button"),this.element.setAttribute("aria-haspopup","true"),this.element.setAttribute("aria-expanded","false"),this.element.title=this._action.label||"",null},i=Array.isArray(this.menuActionsOrProvider),n={contextMenuProvider:this.contextMenuProvider,labelRenderer:t,menuAsChild:this.options.menuAsChild,actions:i?this.menuActionsOrProvider:void 0,actionProvider:i?void 0:this.menuActionsOrProvider};if(this.dropdownMenu=this._register(new Yg(e,n)),this._register(this.dropdownMenu.onDidChangeVisibility(o=>{var r;(r=this.element)===null||r===void 0||r.setAttribute("aria-expanded",`${o}`),this._onDidChangeVisibility.fire(o)})),this.dropdownMenu.menuOptions={actionViewItemProvider:this.options.actionViewItemProvider,actionRunner:this.actionRunner,getKeyBinding:this.options.keybindingProvider,context:this._context},this.options.anchorAlignmentProvider){let o=this;this.dropdownMenu.menuOptions=Object.assign(Object.assign({},this.dropdownMenu.menuOptions),{get anchorAlignment(){return o.options.anchorAlignmentProvider()}})}this.updateEnabled()}setActionContext(e){super.setActionContext(e),this.dropdownMenu&&(this.dropdownMenu.menuOptions?this.dropdownMenu.menuOptions.context=e:this.dropdownMenu.menuOptions={context:e})}updateEnabled(){var e,t;let i=!this.getAction().enabled;(e=this.actionItem)===null||e===void 0||e.classList.toggle("disabled",i),(t=this.element)===null||t===void 0||t.classList.toggle("disabled",i)}};os();B();Pi();Q();ri();Ee();Be();Ki();Ne();var Qg=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},to=function(s,e){return function(t,i){e(t,i,s)}},r_=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})};function s_(s,e,t,i,n,o,r){let a=s.getActions(e);return n1(a,t,!1,typeof i=="string"?c=>c===i:i,n,o,r),i1(a)}function i1(s){let e=new R;for(let[,t]of s)for(let i of t)e.add(i);return e}function n1(s,e,t,i=a=>a==="navigation",n=Number.MAX_SAFE_INTEGER,o=()=>!1,r=!1){let a,l;Array.isArray(e)?(a=e,l=e):(a=e.primary,l=e.secondary);let c=new Set;for(let[d,h]of s){let p;i(d)?(p=a,p.length>0&&r&&p.push(new qn)):(p=l,p.length>0&&p.push(new qn));for(let m of h){t&&(m=m instanceof mr&&m.alt?m.alt:m);let f=p.push(m);m instanceof Dh&&c.add({group:d,action:m,index:f-1})}}for(let{group:d,action:h,index:p}of c){let m=i(d)?a:l,f=h.actions;(f.length<=1||m.length+f.length-2<=n)&&o(h,d,m.length)&&m.splice(p,1,...f)}if(a!==l&&a.length>n){let d=a.splice(n,a.length-n);l.unshift(...d,new qn)}}var Ss=class extends pd{constructor(e,t,i,n,o){super(void 0,e,{icon:!!(e.class||e.item.icon),label:!e.class&&!e.item.icon,draggable:t==null?void 0:t.draggable});this._keybindingService=i,this._notificationService=n,this._contextKeyService=o,this._wantsAltCommand=!1,this._itemClassDispose=this._register(new et),this._altKey=uv.getInstance()}get _menuItemAction(){return this._action}get _commandAction(){return this._wantsAltCommand&&this._menuItemAction.alt||this._menuItemAction}onClick(e){return r_(this,void 0,void 0,function*(){e.preventDefault(),e.stopPropagation();try{yield this.actionRunner.run(this._commandAction,this._context)}catch(t){this._notificationService.error(t)}})}render(e){super.render(e),e.classList.add("menu-entry"),this._updateItemClass(this._menuItemAction.item);let t=!1,i=this._altKey.keyStatus.altKey||(fo||Nl)&&this._altKey.keyStatus.shiftKey,n=()=>{let o=t&&i;o!==this._wantsAltCommand&&(this._wantsAltCommand=o,this.updateLabel(),this.updateTooltip(),this.updateClass())};this._menuItemAction.alt&&this._register(this._altKey.event(o=>{i=o.altKey||(fo||Nl)&&o.shiftKey,n()})),this._register(Ke(e,"mouseleave",o=>{t=!1,n()})),this._register(Ke(e,"mouseenter",o=>{t=!0,n()}))}updateLabel(){this.options.label&&this.label&&(this.label.textContent=this._commandAction.label)}updateTooltip(){if(this.label){let e=this._keybindingService.lookupKeybinding(this._commandAction.id,this._contextKeyService),t=e&&e.getLabel(),i=this._commandAction.tooltip||this._commandAction.label,n=t?u("titleAndKb","{0} ({1})",i,t):i;if(!this._wantsAltCommand&&this._menuItemAction.alt){let o=this._menuItemAction.alt.tooltip||this._menuItemAction.alt.label,r=this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id,this._contextKeyService),a=r&&r.getLabel(),l=a?u("titleAndKb","{0} ({1})",o,a):o;n+=`
[${Lx.modifierLabels[Jb].altKey}] ${l}`}this.label.title=n}}updateClass(){this.options.icon&&(this._commandAction!==this._menuItemAction?this._menuItemAction.alt&&this._updateItemClass(this._menuItemAction.alt.item):this._menuItemAction.alt&&this._updateItemClass(this._menuItemAction.item))}_updateItemClass(e){var t;this._itemClassDispose.value=void 0;let{element:i,label:n}=this;if(!i||!n)return;let o=this._commandAction.checked&&((t=e.toggled)===null||t===void 0?void 0:t.icon)?e.toggled.icon:e.icon;if(!!o)if(ot.isThemeIcon(o)){let r=ot.asClassNameArray(o);n.classList.add(...r),this._itemClassDispose.value=We(()=>{n.classList.remove(...r)})}else o.light&&n.style.setProperty("--menu-entry-icon-light",Zl(o.light)),o.dark&&n.style.setProperty("--menu-entry-icon-dark",Zl(o.dark)),n.classList.add("icon"),this._itemClassDispose.value=We(()=>{n.classList.remove("icon"),n.style.removeProperty("--menu-entry-icon-light"),n.style.removeProperty("--menu-entry-icon-dark")})}};Ss=Qg([to(2,rt),to(3,Ze),to(4,ie)],Ss);var Zg=class extends ju{constructor(e,t,i){var n,o;let r=Object.assign({},t!=null?t:Object.create(null),{menuAsChild:(n=t==null?void 0:t.menuAsChild)!==null&&n!==void 0?n:!1,classNames:(o=t==null?void 0:t.classNames)!==null&&o!==void 0?o:ot.isThemeIcon(e.item.icon)?ot.asClassName(e.item.icon):void 0});super(e,{getActions:()=>e.actions},i,r)}render(e){if(super.render(e),this.element){e.classList.add("menu-entry");let{icon:t}=this._action.item;t&&!ot.isThemeIcon(t)&&(this.element.classList.add("icon"),t.light&&this.element.style.setProperty("--menu-entry-icon-light",Zl(t.light)),t.dark&&this.element.style.setProperty("--menu-entry-icon-dark",Zl(t.dark)))}}};Zg=Qg([to(2,Po)],Zg);var Jg=class extends au{constructor(e,t,i,n,o,r,a,l){var c,d,h;super(null,e);this._keybindingService=i,this._notificationService=n,this._contextMenuService=o,this._menuService=r,this._instaService=a,this._storageService=l,this._container=null,this._storageKey=`${e.item.submenu._debugName}_lastActionId`;let p,m=l.get(this._storageKey,1);m&&(p=e.actions.find(v=>m===v.id)),p||(p=e.actions[0]),this._defaultAction=this._instaService.createInstance(Ss,p,void 0);let f=Object.assign({},t!=null?t:Object.create(null),{menuAsChild:(c=t==null?void 0:t.menuAsChild)!==null&&c!==void 0?c:!0,classNames:(d=t==null?void 0:t.classNames)!==null&&d!==void 0?d:["codicon","codicon-chevron-down"],actionRunner:(h=t==null?void 0:t.actionRunner)!==null&&h!==void 0?h:new Jl});this._dropdown=new ju(e,e.actions,this._contextMenuService,f),this._dropdown.actionRunner.onDidRun(v=>{v.action instanceof mr&&this.update(v.action)})}update(e){this._storageService.store(this._storageKey,e.id,1,0),this._defaultAction.dispose(),this._defaultAction=this._instaService.createInstance(Ss,e,void 0),this._defaultAction.actionRunner=new class extends Jl{runAction(t,i){return r_(this,void 0,void 0,function*(){yield t.run(void 0)})}},this._container&&this._defaultAction.render(hv(this._container,W(".action-container")))}setActionContext(e){super.setActionContext(e),this._defaultAction.setActionContext(e),this._dropdown.setActionContext(e)}render(e){this._container=e,super.render(this._container),this._container.classList.add("monaco-dropdown-with-default");let t=W(".action-container");this._defaultAction.render(H(this._container,t)),this._register(Ke(t,$i.KEY_DOWN,n=>{let o=new is(n);o.equals(17)&&(this._defaultAction.element.tabIndex=-1,this._dropdown.focus(),o.stopPropagation())}));let i=W(".dropdown-action-container");this._dropdown.render(H(this._container,i)),this._register(Ke(i,$i.KEY_DOWN,n=>{var o;let r=new is(n);r.equals(15)&&(this._defaultAction.element.tabIndex=0,this._dropdown.setFocusable(!1),(o=this._defaultAction.element)===null||o===void 0||o.focus(),r.stopPropagation())}))}focus(e){e?this._dropdown.focus():(this._defaultAction.element.tabIndex=0,this._defaultAction.element.focus())}blur(){this._defaultAction.element.tabIndex=-1,this._dropdown.blur(),this._container.blur()}setFocusable(e){e?this._defaultAction.element.tabIndex=0:(this._defaultAction.element.tabIndex=-1,this._dropdown.setFocusable(!1))}dispose(){this._defaultAction.dispose(),this._dropdown.dispose(),super.dispose()}};Jg=Qg([to(2,rt),to(3,Ze),to(4,Po),to(5,Xn),to(6,le),to(7,li)],Jg);function a_(s,e,t){return e instanceof mr?s.createInstance(Ss,e,void 0):e instanceof Ah?e.item.rememberDefaultAction?s.createInstance(Jg,e,t):s.createInstance(Zg,e,t):void 0}Ee();ts();Be();mt();var l_=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},d_=function(s,e){return function(t,i){e(t,i,s)}},tf=Fi("IPeekViewService");Ni(tf,class{constructor(){this._widgets=new Map}addExclusiveWidget(s,e){let t=this._widgets.get(s);t&&(t.listener.dispose(),t.widget.dispose());let i=()=>{let n=this._widgets.get(s);n&&n.widget===e&&(n.listener.dispose(),this._widgets.delete(s))};this._widgets.set(s,{widget:e,listener:e.onDidClose(i)})}});var Ot;(function(s){s.inPeekEditor=new pe("inReferenceSearchEditor",!0,u("inReferenceSearchEditor","Whether the current code editor is embedded inside peek")),s.notInPeekEditor=s.inPeekEditor.toNegated()})(Ot||(Ot={}));var Ad=class{constructor(e,t){e instanceof Mn&&Ot.inPeekEditor.bindTo(t)}dispose(){}};Ad.ID="editor.contrib.referenceController";Ad=l_([d_(1,ie)],Ad);J(Ad.ID,Ad);function c_(s){let e=s.get(Ve).getFocusedCodeEditor();return e instanceof Mn?e.getParentEditor():e}var o1={headerBackgroundColor:we.white,primaryHeadingColor:we.fromHex("#333333"),secondaryHeadingColor:we.fromHex("#6c6c6cb3")},ja=class extends Xg{constructor(e,t,i){super(e,t);this.instantiationService=i,this._onDidClose=new G,this.onDidClose=this._onDidClose.event,la(this.options,o1,!1)}dispose(){this.disposed||(this.disposed=!0,super.dispose(),this._onDidClose.fire(this))}style(e){let t=this.options;e.headerBackgroundColor&&(t.headerBackgroundColor=e.headerBackgroundColor),e.primaryHeadingColor&&(t.primaryHeadingColor=e.primaryHeadingColor),e.secondaryHeadingColor&&(t.secondaryHeadingColor=e.secondaryHeadingColor),super.style(e)}_applyStyles(){super._applyStyles();let e=this.options;this._headElement&&e.headerBackgroundColor&&(this._headElement.style.backgroundColor=e.headerBackgroundColor.toString()),this._primaryHeading&&e.primaryHeadingColor&&(this._primaryHeading.style.color=e.primaryHeadingColor.toString()),this._secondaryHeading&&e.secondaryHeadingColor&&(this._secondaryHeading.style.color=e.secondaryHeadingColor.toString()),this._bodyElement&&e.frameColor&&(this._bodyElement.style.borderColor=e.frameColor.toString())}_fillContainer(e){this.setCssClass("peekview-widget"),this._headElement=W(".head"),this._bodyElement=W(".body"),this._fillHead(this._headElement),this._fillBody(this._bodyElement),e.appendChild(this._headElement),e.appendChild(this._bodyElement)}_fillHead(e,t){let i=W(".peekview-title");this.options.supportOnTitleClick&&(i.classList.add("clickable"),zi(i,"click",r=>this._onTitleClick(r))),H(this._headElement,i),this._fillTitleIcon(i),this._primaryHeading=W("span.filename"),this._secondaryHeading=W("span.dirname"),this._metaHeading=W("span.meta"),H(i,this._primaryHeading,this._secondaryHeading,this._metaHeading);let n=W(".peekview-actions");H(this._headElement,n);let o=this._getActionBarOptions();this._actionbarWidget=new ds(n,o),this._disposables.add(this._actionbarWidget),t||this._actionbarWidget.push(new _o("peekview.close",u("label.close","Close"),K.close.classNames,!0,()=>(this.dispose(),Promise.resolve())),{label:!1,icon:!0})}_fillTitleIcon(e){}_getActionBarOptions(){return{actionViewItemProvider:a_.bind(void 0,this.instantiationService),orientation:0}}_onTitleClick(e){}setTitle(e,t){this._primaryHeading&&this._secondaryHeading&&(this._primaryHeading.innerText=e,this._primaryHeading.setAttribute("title",e),t?this._secondaryHeading.innerText=t:_i(this._secondaryHeading))}setMetaTitle(e){this._metaHeading&&(e?(this._metaHeading.innerText=e,oi(this._metaHeading)):Vt(this._metaHeading))}_doLayout(e,t){if(!this._isShowing&&e<0){this.dispose();return}let i=Math.ceil(this.editor.getOption(59)*1.2),n=Math.round(e-(i+2));this._doLayoutHead(i,t),this._doLayoutBody(n,t)}_doLayoutHead(e,t){this._headElement&&(this._headElement.style.height=`${e}px`,this._headElement.style.lineHeight=this._headElement.style.height)}_doLayoutBody(e,t){this._bodyElement&&(this._bodyElement.style.height=`${e}px`)}};ja=l_([d_(2,le)],ja);var h_=q("peekViewTitle.background",{dark:si(ss,.1),light:si(ss,.1),hc:null},u("peekViewTitleBackground","Background color of the peek view title area.")),Uu=q("peekViewTitleLabel.foreground",{dark:we.white,light:we.black,hc:we.white},u("peekViewTitleForeground","Color of the peek view title.")),$u=q("peekViewTitleDescription.foreground",{dark:"#ccccccb3",light:"#616161",hc:"#FFFFFF99"},u("peekViewTitleInfoForeground","Color of the peek view title info.")),u_=q("peekView.border",{dark:ss,light:ss,hc:dn},u("peekViewBorder","Color of the peek view borders and arrow.")),p_=q("peekViewResult.background",{dark:"#252526",light:"#F3F3F3",hc:we.black},u("peekViewResultsBackground","Background color of the peek view result list.")),gV=q("peekViewResult.lineForeground",{dark:"#bbbbbb",light:"#646465",hc:we.white},u("peekViewResultsMatchForeground","Foreground color for line nodes in the peek view result list.")),fV=q("peekViewResult.fileForeground",{dark:we.white,light:"#1E1E1E",hc:we.white},u("peekViewResultsFileForeground","Foreground color for file nodes in the peek view result list.")),yV=q("peekViewResult.selectionBackground",{dark:"#3399ff33",light:"#3399ff33",hc:null},u("peekViewResultsSelectionBackground","Background color of the selected entry in the peek view result list.")),bV=q("peekViewResult.selectionForeground",{dark:we.white,light:"#6C6C6C",hc:we.white},u("peekViewResultsSelectionForeground","Foreground color of the selected entry in the peek view result list.")),ef=q("peekViewEditor.background",{dark:"#001F33",light:"#F2F8FC",hc:we.black},u("peekViewEditorBackground","Background color of the peek view editor.")),SV=q("peekViewEditorGutter.background",{dark:ef,light:ef,hc:ef},u("peekViewEditorGutterBackground","Background color of the gutter in the peek view editor.")),vV=q("peekViewResult.matchHighlightBackground",{dark:"#ea5c004d",light:"#ea5c004d",hc:null},u("peekViewResultsMatchHighlight","Match highlight color in the peek view result list.")),xV=q("peekViewEditor.matchHighlightBackground",{dark:"#ff8f0099",light:"#f5d802de",hc:null},u("peekViewEditorMatchHighlight","Match highlight color in the peek view editor.")),CV=q("peekViewEditor.matchHighlightBorder",{dark:null,light:null,hc:rs},u("peekViewEditorMatchHighlightBorder","Match highlight border in the peek view editor."));Q();Ee();mt();Ne();Kl();Ln();ke();yo();Pi();qt();Xt();bd();gg();ue();Ci();tt();ee();He();Re();ke();Le();yo();B();Ci();tt();ee();Q();_t();kn();Ee();Be();Ql();Le();De();B();ga();Hi();Ye();ee();Q();var s1=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},pn=class{constructor(e,t,i,n){this.isProviderFirst=e,this.parent=t,this.link=i,this._rangeCallback=n,this.id=fu.nextId()}get uri(){return this.link.uri}get range(){var e,t;return(t=(e=this._range)!==null&&e!==void 0?e:this.link.targetSelectionRange)!==null&&t!==void 0?t:this.link.range}set range(e){this._range=e,this._rangeCallback(this)}get ariaMessage(){var e;let t=(e=this.parent.getPreview(this))===null||e===void 0?void 0:e.preview(this.range);return t?u({key:"aria.oneReference.preview",comment:["Placeholders are: 0: filename, 1:line number, 2: column number, 3: preview snippet of source code"]},"symbol in {0} on line {1} at column {2}, {3}",Jt(this.uri),this.range.startLineNumber,this.range.startColumn,t.value):u("aria.oneReference","symbol in {0} on line {1} at column {2}",Jt(this.uri),this.range.startLineNumber,this.range.startColumn)}},m_=class{constructor(e){this._modelReference=e}dispose(){this._modelReference.dispose()}preview(e,t=8){let i=this._modelReference.object.textEditorModel;if(!i)return;let{startLineNumber:n,startColumn:o,endLineNumber:r,endColumn:a}=e,l=i.getWordUntilPosition({lineNumber:n,column:o-t}),c=new b(n,l.startColumn,n,o),d=new b(r,a,r,1073741824),h=i.getValueInRange(c).replace(/^\s+/,""),p=i.getValueInRange(e),m=i.getValueInRange(d).replace(/\s+$/,"");return{value:h+p+m,highlight:{start:h.length,end:h.length+p.length}}}},Ir=class{constructor(e,t){this.parent=e,this.uri=t,this.children=[],this._previews=new PS}dispose(){vt(this._previews.values()),this._previews.clear()}getPreview(e){return this._previews.get(e.uri)}get ariaMessage(){let e=this.children.length;return e===1?u("aria.fileReferences.1","1 symbol in {0}, full path {1}",Jt(this.uri),this.uri.fsPath):u("aria.fileReferences.N","{0} symbols in {1}, full path {2}",e,Jt(this.uri),this.uri.fsPath)}resolve(e){return s1(this,void 0,void 0,function*(){if(this._previews.size!==0)return this;for(let t of this.children)if(!this._previews.has(t.uri))try{let i=yield e.createModelReference(t.uri);this._previews.set(t.uri,new m_(i))}catch(i){de(i)}return this})}},Ut=class{constructor(e,t){this.groups=[],this.references=[],this._onDidChangeReferenceRange=new G,this.onDidChangeReferenceRange=this._onDidChangeReferenceRange.event,this._links=e,this._title=t;let[i]=e;e.sort(Ut._compareReferences);let n;for(let o of e)if((!n||!eg.isEqual(n.uri,o.uri,!0))&&(n=new Ir(this,o.uri),this.groups.push(n)),n.children.length===0||Ut._compareReferences(o,n.children[n.children.length-1])!==0){let r=new pn(i===o,n,o,a=>this._onDidChangeReferenceRange.fire(a));this.references.push(r),n.children.push(r)}}dispose(){vt(this.groups),this._onDidChangeReferenceRange.dispose(),this.groups.length=0}clone(){return new Ut(this._links,this._title)}get title(){return this._title}get isEmpty(){return this.groups.length===0}get ariaMessage(){return this.isEmpty?u("aria.result.0","No results found"):this.references.length===1?u("aria.result.1","Found 1 symbol in {0}",this.references[0].uri.fsPath):this.groups.length===1?u("aria.result.n1","Found {0} symbols in {1}",this.references.length,this.groups[0].uri.fsPath):u("aria.result.nm","Found {0} symbols in {1} files",this.references.length,this.groups.length)}nextOrPreviousReference(e,t){let{parent:i}=e,n=i.children.indexOf(e),o=i.children.length,r=i.parent.groups.length;return r===1||t&&n+1<o||!t&&n>0?(t?n=(n+1)%o:n=(n+o-1)%o,i.children[n]):(n=i.parent.groups.indexOf(i),t?(n=(n+1)%r,i.parent.groups[n].children[0]):(n=(n+r-1)%r,i.parent.groups[n].children[i.parent.groups[n].children.length-1]))}nearestReference(e,t){let i=this.references.map((n,o)=>({idx:o,prefixLen:dr(n.uri.toString(),e.toString()),offsetDist:Math.abs(n.range.startLineNumber-t.lineNumber)*100+Math.abs(n.range.startColumn-t.column)})).sort((n,o)=>n.prefixLen>o.prefixLen?-1:n.prefixLen<o.prefixLen?1:n.offsetDist<o.offsetDist?-1:n.offsetDist>o.offsetDist?1:0)[0];if(i)return this.references[i.idx]}referenceAt(e,t){for(let i of this.references)if(i.uri.toString()===e.toString()&&b.containsPosition(i.range,t))return i}firstReference(){for(let e of this.references)if(e.isProviderFirst)return e;return this.references[0]}static _compareReferences(e,t){return eg.compare(e.uri,t.uri)||b.compareRangesUsingStarts(e.range,t.range)}};Ae();Zn();De();B();Yl();Hi();ee();jt();sn();ig();rn();Co();Ae();rP();Yl();Pi();Hi();Xt();function Ku(s){if(!s)return;typeof s=="string"&&(s=_e.file(s));let e=Jt(s)||(s.scheme===xt.file?s.fsPath:s.path);return fo&&IS(e)?qu(e):e}function qu(s,e){return kS(s,e)?s.charAt(0).toUpperCase()+s.slice(1):s}B();Hi();Co();Q();Be();Ki();Ne();var Zu=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Fd=function(s,e){return function(t,i){e(t,i,s)}},Xu=class{constructor(e){this._resolverService=e}hasChildren(e){return e instanceof Ut||e instanceof Ir}getChildren(e){if(e instanceof Ut)return e.groups;if(e instanceof Ir)return e.resolve(this._resolverService).then(t=>t.children);throw new Error("bad tree")}};Xu=Zu([Fd(0,Gt)],Xu);var of=class{getHeight(){return 23}getTemplateId(e){return e instanceof Ir?Ua.id:vs.id}},Yu=class{constructor(e){this._keybindingService=e}getKeyboardNavigationLabel(e){var t;if(e instanceof pn){let i=(t=e.parent.getPreview(e))===null||t===void 0?void 0:t.preview(e.range);if(i)return i.value}return Jt(e.uri)}};Yu=Zu([Fd(0,rt)],Yu);var rf=class{getId(e){return e instanceof pn?e.id:e.uri}},nf=class extends z{constructor(e,t,i){super();this._uriLabel=t;let n=document.createElement("div");n.classList.add("reference-file"),this.file=this._register(new Su(n,{supportHighlights:!0})),this.badge=new Jx(H(n,W(".count"))),this._register(Gx(this.badge,i)),e.appendChild(n)}set(e,t){let i=Da(e.uri);this.file.setLabel(Ku(e.uri),this._uriLabel.getUriLabel(i,{relative:!0}),{title:this._uriLabel.getUriLabel(e.uri),matches:t});let n=e.children.length;this.badge.setCount(n),n>1?this.badge.setTitleFormat(u("referencesCount","{0} references",n)):this.badge.setTitleFormat(u("referenceCount","{0} reference",n))}};nf=Zu([Fd(1,xr),Fd(2,Nt)],nf);var Ua=class g_{constructor(e){this._instantiationService=e,this.templateId=g_.id}renderTemplate(e){return this._instantiationService.createInstance(nf,e)}renderElement(e,t,i){i.set(e.element,us(e.filterData))}disposeTemplate(e){e.dispose()}};Ua.id="FileReferencesRenderer";Ua=Zu([Fd(0,le)],Ua);var f_=class{constructor(e){this.label=new nC(e)}set(e,t){var i;let n=(i=e.parent.getPreview(e))===null||i===void 0?void 0:i.preview(e.range);if(!n||!n.value)this.label.set(`${Jt(e.uri)}:${e.range.startLineNumber+1}:${e.range.startColumn+1}`);else{let{value:o,highlight:r}=n;t&&!ps.isDefault(t)?(this.label.element.classList.toggle("referenceMatch",!1),this.label.set(o,us(t))):(this.label.element.classList.toggle("referenceMatch",!0),this.label.set(o,[r]))}}},vs=class{constructor(){this.templateId=vs.id}renderTemplate(e){return new f_(e)}renderElement(e,t,i){i.set(e.element,e.filterData)}disposeTemplate(){}};vs.id="OneReferenceRenderer";var sf=class{getWidgetAriaLabel(){return u("treeAriaLabel","References")}getAriaLabel(e){return e.ariaMessage}};Q();Be();Ki();Ne();wP();var a1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},No=function(s,e){return function(t,i){e(t,i,s)}},y_=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Nd=class{constructor(e,t){this._editor=e,this._model=t,this._decorations=new Map,this._decorationIgnoreSet=new Set,this._callOnDispose=new R,this._callOnModelChange=new R,this._callOnDispose.add(this._editor.onDidChangeModel(()=>this._onModelChanged())),this._onModelChanged()}dispose(){this._callOnModelChange.dispose(),this._callOnDispose.dispose(),this.removeDecorations()}_onModelChanged(){this._callOnModelChange.clear();let e=this._editor.getModel();if(!!e){for(let t of this._model.references)if(t.uri.toString()===e.uri.toString()){this._addDecorations(t.parent);return}}}_addDecorations(e){if(!this._editor.hasModel())return;this._callOnModelChange.add(this._editor.getModel().onDidChangeDecorations(()=>this._onDecorationChanged()));let t=[],i=[];for(let o=0,r=e.children.length;o<r;o++){let a=e.children[o];this._decorationIgnoreSet.has(a.id)||a.uri.toString()===this._editor.getModel().uri.toString()&&(t.push({range:a.range,options:Nd.DecorationOptions}),i.push(o))}let n=this._editor.deltaDecorations([],t);for(let o=0;o<n.length;o++)this._decorations.set(n[o],e.children[i[o]])}_onDecorationChanged(){let e=[],t=this._editor.getModel();if(!!t){for(let[i,n]of this._decorations){let o=t.getDecorationRange(i);if(!o)continue;let r=!1;if(!b.equalsRange(o,n.range)){if(b.spansMultipleLines(o))r=!0;else{let a=n.range.endColumn-n.range.startColumn,l=o.endColumn-o.startColumn;a!==l&&(r=!0)}r?(this._decorationIgnoreSet.add(n.id),e.push(i)):n.range=o}}for(let i=0,n=e.length;i<n;i++)this._decorations.delete(e[i]);this._editor.deltaDecorations(e,[])}}removeDecorations(){this._editor.deltaDecorations([...this._decorations.keys()],[]),this._decorations.clear()}};Nd.DecorationOptions=xe.register({description:"reference-decoration",stickiness:1,className:"reference-decoration"});var af=class{constructor(){this.ratio=.7,this.heightInLines=18}static fromJSON(e){let t,i;try{let n=JSON.parse(e);t=n.ratio,i=n.heightInLines}catch(n){}return{ratio:t||.7,heightInLines:i||18}}},b_=class extends aC{},Ju=class extends ja{constructor(e,t,i,n,o,r,a,l,c,d,h,p){super(e,{showFrame:!1,showArrow:!0,isResizeable:!0,isAccessible:!0,supportOnTitleClick:!0},r);this._defaultTreeKeyboardSupport=t,this.layoutData=i,this._textModelResolverService=o,this._instantiationService=r,this._peekViewService=a,this._uriLabel=l,this._undoRedoService=c,this._keybindingService=d,this._languageService=h,this._languageConfigurationService=p,this._disposeOnNewModel=new R,this._callOnDispose=new R,this._onDidSelectReference=new G,this.onDidSelectReference=this._onDidSelectReference.event,this._dim=new lt(0,0),this._applyTheme(n.getColorTheme()),this._callOnDispose.add(n.onDidColorThemeChange(this._applyTheme.bind(this))),this._peekViewService.addExclusiveWidget(e,this),this.create()}dispose(){this.setModel(void 0),this._callOnDispose.dispose(),this._disposeOnNewModel.dispose(),vt(this._preview),vt(this._previewNotAvailableMessage),vt(this._tree),vt(this._previewModelReference),this._splitView.dispose(),super.dispose()}_applyTheme(e){let t=e.getColor(u_)||we.transparent;this.style({arrowColor:t,frameColor:t,headerBackgroundColor:e.getColor(h_)||we.transparent,primaryHeadingColor:e.getColor(Uu),secondaryHeadingColor:e.getColor($u)})}show(e){this.editor.revealRangeInCenterIfOutsideViewport(e,0),super.show(e,this.layoutData.heightInLines||18)}focusOnReferenceTree(){this._tree.domFocus()}focusOnPreviewEditor(){this._preview.focus()}isPreviewEditorFocused(){return this._preview.hasTextFocus()}_onTitleClick(e){this._preview&&this._preview.getModel()&&this._onDidSelectReference.fire({element:this._getFocusedReference(),kind:e.ctrlKey||e.metaKey||e.altKey?"side":"open",source:"title"})}_fillBody(e){this.setCssClass("reference-zone-widget"),this._messageContainer=H(e,W("div.messages")),Vt(this._messageContainer),this._splitView=new sC(e,{orientation:1}),this._previewContainer=H(e,W("div.preview.inline"));let t={scrollBeyondLastLine:!1,scrollbar:{verticalScrollbarSize:14,horizontal:"auto",useShadows:!0,verticalHasArrows:!1,horizontalHasArrows:!1,alwaysConsumeMouseWheel:!1},overviewRulerLanes:2,fixedOverflowWidgets:!0,minimap:{enabled:!1}};this._preview=this._instantiationService.createInstance(Mn,this._previewContainer,t,this.editor),Vt(this._previewContainer),this._previewNotAvailableMessage=new Ra(u("missingPreviewMessage","no preview available"),za,Ra.DEFAULT_CREATION_OPTIONS,null,this._undoRedoService,this._languageService,this._languageConfigurationService),this._treeContainer=H(e,W("div.ref-tree.inline"));let i={keyboardSupport:this._defaultTreeKeyboardSupport,accessibilityProvider:new sf,keyboardNavigationLabelProvider:this._instantiationService.createInstance(Yu),identityProvider:new rf,openOnSingleClick:!0,selectionNavigation:!0,overrideStyles:{listBackground:p_}};this._defaultTreeKeyboardSupport&&this._callOnDispose.add(zi(this._treeContainer,"keydown",o=>{o.equals(9)&&(this._keybindingService.dispatchEvent(o,o.target),o.stopPropagation())},!0)),this._tree=this._instantiationService.createInstance(b_,"ReferencesWidget",this._treeContainer,new of,[this._instantiationService.createInstance(Ua),this._instantiationService.createInstance(vs)],this._instantiationService.createInstance(Xu),i),this._splitView.addView({onDidChange:ht.None,element:this._previewContainer,minimumSize:200,maximumSize:Number.MAX_VALUE,layout:o=>{this._preview.layout({height:this._dim.height,width:o})}},cg.Distribute),this._splitView.addView({onDidChange:ht.None,element:this._treeContainer,minimumSize:100,maximumSize:Number.MAX_VALUE,layout:o=>{this._treeContainer.style.height=`${this._dim.height}px`,this._treeContainer.style.width=`${o}px`,this._tree.layout(this._dim.height,o)}},cg.Distribute),this._disposables.add(this._splitView.onDidSashChange(()=>{this._dim.width&&(this.layoutData.ratio=this._splitView.getViewSize(0)/this._dim.width)},void 0));let n=(o,r)=>{o instanceof pn&&(r==="show"&&this._revealReference(o,!1),this._onDidSelectReference.fire({element:o,kind:r,source:"tree"}))};this._tree.onDidOpen(o=>{o.sideBySide?n(o.element,"side"):o.editorOptions.pinned?n(o.element,"goto"):n(o.element,"show")}),Vt(this._treeContainer)}_onWidth(e){this._dim&&this._doLayoutBody(this._dim.height,e)}_doLayoutBody(e,t){super._doLayoutBody(e,t),this._dim=new lt(t,e),this.layoutData.heightInLines=this._viewZone?this._viewZone.heightInLines:this.layoutData.heightInLines,this._splitView.layout(t),this._splitView.resizeView(0,t*this.layoutData.ratio)}setSelection(e){return this._revealReference(e,!0).then(()=>{!this._model||(this._tree.setSelection([e]),this._tree.setFocus([e]))})}setModel(e){return this._disposeOnNewModel.clear(),this._model=e,this._model?this._onNewModel():Promise.resolve()}_onNewModel(){return this._model?this._model.isEmpty?(this.setTitle(""),this._messageContainer.innerText=u("noResults","No results"),oi(this._messageContainer),Promise.resolve(void 0)):(Vt(this._messageContainer),this._decorationsManager=new Nd(this._preview,this._model),this._disposeOnNewModel.add(this._decorationsManager),this._disposeOnNewModel.add(this._model.onDidChangeReferenceRange(e=>this._tree.rerender(e))),this._disposeOnNewModel.add(this._preview.onMouseDown(e=>{let{event:t,target:i}=e;if(t.detail!==2)return;let n=this._getFocusedReference();!n||this._onDidSelectReference.fire({element:{uri:n.uri,range:i.range},kind:t.ctrlKey||t.metaKey||t.altKey?"side":"open",source:"editor"})})),this.container.classList.add("results-loaded"),oi(this._treeContainer),oi(this._previewContainer),this._splitView.layout(this._dim.width),this.focusOnReferenceTree(),this._tree.setInput(this._model.groups.length===1?this._model.groups[0]:this._model)):Promise.resolve(void 0)}_getFocusedReference(){let[e]=this._tree.getFocus();if(e instanceof pn)return e;if(e instanceof Ir&&e.children.length>0)return e.children[0]}revealReference(e){return y_(this,void 0,void 0,function*(){yield this._revealReference(e,!1),this._onDidSelectReference.fire({element:e,kind:"goto",source:"tree"})})}_revealReference(e,t){return y_(this,void 0,void 0,function*(){if(this._revealedReference===e)return;this._revealedReference=e,e.uri.scheme!==xt.inMemory?this.setTitle(tu(e.uri),this._uriLabel.getUriLabel(Da(e.uri))):this.setTitle(u("peekView.alternateTitle","References"));let i=this._textModelResolverService.createModelReference(e.uri);this._tree.getInput()===e.parent?this._tree.reveal(e):(t&&this._tree.reveal(e.parent),yield this._tree.expand(e.parent),this._tree.reveal(e));let n=yield i;if(!this._model){n.dispose();return}vt(this._previewModelReference);let o=n.object;if(o){let r=this._preview.getModel()===o.textEditorModel?0:1,a=b.lift(e.range).collapseToStart();this._previewModelReference=n,this._preview.setModel(o.textEditorModel),this._preview.setSelection(a),this._preview.revealRangeInCenter(a,r)}else this._preview.setModel(this._previewNotAvailableMessage),n.dispose()})}};Ju=a1([No(3,Nt),No(4,Gt),No(5,le),No(6,tf),No(7,xr),No(8,xx),No(9,rt),No(10,ft),No(11,Dt)],Ju);var l1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},$a=function(s,e){return function(t,i){e(t,i,s)}},S_=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},xs=new pe("referenceSearchVisible",!1,u("referenceSearchVisible","Whether reference peek is visible, like 'Peek References' or 'Peek Definition'")),io=class lf{constructor(e,t,i,n,o,r,a,l){this._defaultTreeKeyboardSupport=e,this._editor=t,this._editorService=n,this._notificationService=o,this._instantiationService=r,this._storageService=a,this._configurationService=l,this._disposables=new R,this._requestIdPool=0,this._ignoreModelChangeEvent=!1,this._referenceSearchVisible=xs.bindTo(i)}static get(e){return e.getContribution(lf.ID)}dispose(){var e,t;this._referenceSearchVisible.reset(),this._disposables.dispose(),(e=this._widget)===null||e===void 0||e.dispose(),(t=this._model)===null||t===void 0||t.dispose(),this._widget=void 0,this._model=void 0}toggleWidget(e,t,i){let n;if(this._widget&&(n=this._widget.position),this.closeWidget(),!!n&&e.containsPosition(n))return;this._peekMode=i,this._referenceSearchVisible.set(!0),this._disposables.add(this._editor.onDidChangeModelLanguage(()=>{this.closeWidget()})),this._disposables.add(this._editor.onDidChangeModel(()=>{this._ignoreModelChangeEvent||this.closeWidget()}));let o="peekViewLayout",r=af.fromJSON(this._storageService.get(o,0,"{}"));this._widget=this._instantiationService.createInstance(Ju,this._editor,this._defaultTreeKeyboardSupport,r),this._widget.setTitle(u("labelLoading","Loading...")),this._widget.show(e),this._disposables.add(this._widget.onDidClose(()=>{t.cancel(),this._widget&&(this._storageService.store(o,JSON.stringify(this._widget.layoutData),0,1),this._widget=void 0),this.closeWidget()})),this._disposables.add(this._widget.onDidSelectReference(l=>{let{element:c,kind:d}=l;if(!!c)switch(d){case"open":(l.source!=="editor"||!this._configurationService.getValue("editor.stablePeek"))&&this.openReference(c,!1,!1);break;case"side":this.openReference(c,!0,!1);break;case"goto":i?this._gotoReference(c):this.openReference(c,!1,!0);break}}));let a=++this._requestIdPool;t.then(l=>{var c;if(a!==this._requestIdPool||!this._widget){l.dispose();return}return(c=this._model)===null||c===void 0||c.dispose(),this._model=l,this._widget.setModel(this._model).then(()=>{if(this._widget&&this._model&&this._editor.hasModel()){this._model.isEmpty?this._widget.setMetaTitle(""):this._widget.setMetaTitle(u("metaTitle.N","{0} ({1})",this._model.title,this._model.references.length));let d=this._editor.getModel().uri,h=new U(e.startLineNumber,e.startColumn),p=this._model.nearestReference(d,h);if(p)return this._widget.setSelection(p).then(()=>{this._widget&&this._editor.getOption(77)==="editor"&&this._widget.focusOnPreviewEditor()})}})},l=>{this._notificationService.error(l)})}changeFocusBetweenPreviewAndReferences(){!this._widget||(this._widget.isPreviewEditorFocused()?this._widget.focusOnReferenceTree():this._widget.focusOnPreviewEditor())}goToNextOrPreviousReference(e){return S_(this,void 0,void 0,function*(){if(!this._editor.hasModel()||!this._model||!this._widget)return;let t=this._widget.position;if(!t)return;let i=this._model.nearestReference(this._editor.getModel().uri,t);if(!i)return;let n=this._model.nextOrPreviousReference(i,e),o=this._editor.hasTextFocus(),r=this._widget.isPreviewEditorFocused();yield this._widget.setSelection(n),yield this._gotoReference(n),o?this._editor.focus():this._widget&&r&&this._widget.focusOnPreviewEditor()})}revealReference(e){return S_(this,void 0,void 0,function*(){!this._editor.hasModel()||!this._model||!this._widget||(yield this._widget.revealReference(e))})}closeWidget(e=!0){var t,i;(t=this._widget)===null||t===void 0||t.dispose(),(i=this._model)===null||i===void 0||i.dispose(),this._referenceSearchVisible.reset(),this._disposables.clear(),this._widget=void 0,this._model=void 0,e&&this._editor.focus(),this._requestIdPool+=1}_gotoReference(e){this._widget&&this._widget.hide(),this._ignoreModelChangeEvent=!0;let t=b.lift(e.range).collapseToStart();return this._editorService.openCodeEditor({resource:e.uri,options:{selection:t}},this._editor).then(i=>{var n;if(this._ignoreModelChangeEvent=!1,!i||!this._widget){this.closeWidget();return}if(this._editor===i)this._widget.show(t),this._widget.focusOnReferenceTree();else{let o=lf.get(i),r=this._model.clone();this.closeWidget(),i.focus(),o==null||o.toggleWidget(t,Oe(a=>Promise.resolve(r)),(n=this._peekMode)!==null&&n!==void 0?n:!1)}},i=>{this._ignoreModelChangeEvent=!1,de(i)})}openReference(e,t,i){t||this.closeWidget();let{uri:n,range:o}=e;this._editorService.openCodeEditor({resource:n,options:{selection:o,pinned:i}},this._editor,t)}};io.ID="editor.contrib.referencesController";io=l1([$a(2,ie),$a(3,Ve),$a(4,Ze),$a(5,le),$a(6,li),$a(7,it)],io);function Cs(s,e){let t=c_(s);if(!t)return;let i=io.get(t);i&&e(i)}Zt.registerCommandAndKeybindingRule({id:"togglePeekWidgetFocus",weight:100,primary:Xe(2089,60),when:O.or(xs,Ot.inPeekEditor),handler(s){Cs(s,e=>{e.changeFocusBetweenPreviewAndReferences()})}});Zt.registerCommandAndKeybindingRule({id:"goToNextReference",weight:100-10,primary:62,secondary:[70],when:O.or(xs,Ot.inPeekEditor),handler(s){Cs(s,e=>{e.goToNextOrPreviousReference(!0)})}});Zt.registerCommandAndKeybindingRule({id:"goToPreviousReference",weight:100-10,primary:1086,secondary:[1094],when:O.or(xs,Ot.inPeekEditor),handler(s){Cs(s,e=>{e.goToNextOrPreviousReference(!1)})}});Pe.registerCommandAlias("goToNextReferenceFromEmbeddedEditor","goToNextReference");Pe.registerCommandAlias("goToPreviousReferenceFromEmbeddedEditor","goToPreviousReference");Pe.registerCommandAlias("closeReferenceSearchEditor","closeReferenceSearch");Pe.registerCommand("closeReferenceSearch",s=>Cs(s,e=>e.closeWidget()));Zt.registerKeybindingRule({id:"closeReferenceSearch",weight:100-101,primary:9,secondary:[1033],when:O.and(Ot.inPeekEditor,O.not("config.editor.stablePeek"))});Zt.registerKeybindingRule({id:"closeReferenceSearch",weight:200+50,primary:9,secondary:[1033],when:O.and(xs,O.not("config.editor.stablePeek"))});Zt.registerCommandAndKeybindingRule({id:"revealReference",weight:200,primary:3,mac:{primary:3,secondary:[2066]},when:O.and(xs,hg,ug.negate(),pg.negate()),handler(s){var e;let i=(e=s.get(vu).lastFocusedList)===null||e===void 0?void 0:e.getFocus();Array.isArray(i)&&i[0]instanceof pn&&Cs(s,n=>n.revealReference(i[0]))}});Zt.registerCommandAndKeybindingRule({id:"openReferenceToSide",weight:100,primary:2051,mac:{primary:259},when:O.and(xs,hg,ug.negate(),pg.negate()),handler(s){var e;let i=(e=s.get(vu).lastFocusedList)===null||e===void 0?void 0:e.getFocus();Array.isArray(i)&&i[0]instanceof pn&&Cs(s,n=>n.openReference(i[0],!0,!0))}});Pe.registerCommand("openReference",s=>{var e;let i=(e=s.get(vu).lastFocusedList)===null||e===void 0?void 0:e.getFocus();Array.isArray(i)&&i[0]instanceof pn&&Cs(s,n=>n.openReference(i[0],!1,!0))});De();B();Hi();ue();Ci();ee();Q();Ee();ts();Be();Ki();Ql();var v_=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},zd=function(s,e){return function(t,i){e(t,i,s)}},hf=new pe("hasSymbols",!1,u("hasSymbols","Whether there are symbol locations that can be navigated via keyboard-only.")),Od=Fi("ISymbolNavigationService"),df=class{constructor(e,t,i,n){this._editorService=t,this._notificationService=i,this._keybindingService=n,this._currentModel=void 0,this._currentIdx=-1,this._ignoreEditorChange=!1,this._ctxHasSymbols=hf.bindTo(e)}reset(){var e,t;this._ctxHasSymbols.reset(),(e=this._currentState)===null||e===void 0||e.dispose(),(t=this._currentMessage)===null||t===void 0||t.dispose(),this._currentModel=void 0,this._currentIdx=-1}put(e){let t=e.parent.parent;if(t.references.length<=1){this.reset();return}this._currentModel=t,this._currentIdx=t.references.indexOf(e),this._ctxHasSymbols.set(!0),this._showMessage();let i=new cf(this._editorService),n=i.onDidChange(o=>{if(this._ignoreEditorChange)return;let r=this._editorService.getActiveCodeEditor();if(!r)return;let a=r.getModel(),l=r.getPosition();if(!a||!l)return;let c=!1,d=!1;for(let h of t.references)if(eu(h.uri,a.uri))c=!0,d=d||b.containsPosition(h.range,l);else if(c)break;(!c||!d)&&this.reset()});this._currentState=Em(i,n)}revealNext(e){if(!this._currentModel)return Promise.resolve();this._currentIdx+=1,this._currentIdx%=this._currentModel.references.length;let t=this._currentModel.references[this._currentIdx];return this._showMessage(),this._ignoreEditorChange=!0,this._editorService.openCodeEditor({resource:t.uri,options:{selection:b.collapseToStart(t.range),selectionRevealType:3}},e).finally(()=>{this._ignoreEditorChange=!1})}_showMessage(){var e;(e=this._currentMessage)===null||e===void 0||e.dispose();let t=this._keybindingService.lookupKeybinding("editor.gotoNextSymbolFromResult"),i=t?u("location.kb","Symbol {0} of {1}, {2} for next",this._currentIdx+1,this._currentModel.references.length,t.getLabel()):u("location","Symbol {0} of {1}",this._currentIdx+1,this._currentModel.references.length);this._currentMessage=this._notificationService.status(i)}};df=v_([zd(0,ie),zd(1,Ve),zd(2,Ze),zd(3,rt)],df);Ni(Od,df,!0);$(new class extends ct{constructor(){super({id:"editor.gotoNextSymbolFromResult",precondition:hf,kbOpts:{weight:100,primary:70}})}runEditorCommand(s,e){return s.get(Od).revealNext(e)}});Zt.registerCommandAndKeybindingRule({id:"editor.gotoNextSymbolFromResult.cancel",weight:100,when:hf,primary:9,handler(s){s.get(Od).reset()}});var cf=class{constructor(e){this._listener=new Map,this._disposables=new R,this._onDidChange=new G,this.onDidChange=this._onDidChange.event,this._disposables.add(e.onCodeEditorRemove(this._onDidRemoveEditor,this)),this._disposables.add(e.onCodeEditorAdd(this._onDidAddEditor,this)),e.listCodeEditors().forEach(this._onDidAddEditor,this)}dispose(){this._disposables.dispose(),this._onDidChange.dispose(),vt(this._listener.values())}_onDidAddEditor(e){this._listener.set(e,Em(e.onDidChangeCursorPosition(t=>this._onDidChange.fire({editor:e})),e.onDidChangeModelContent(t=>this._onDidChange.fire({editor:e}))))}_onDidRemoveEditor(e){var t;(t=this._listener.get(e))===null||t===void 0||t.dispose(),this._listener.delete(e)}};cf=v_([zd(0,Ve)],cf);Q();ri();_t();Ee();Be();hs();ut();Le();ue();Re();var x_=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})};function Hd(s,e,t,i){let o=t.ordered(s).map(r=>Promise.resolve(i(r,s,e)).then(void 0,a=>{Ue(a)}));return Promise.all(o).then(r=>{let a=[];for(let l of r)Array.isArray(l)?a.push(...l):l&&a.push(l);return a})}function Wd(s,e,t){return Hd(s,e,Th,(i,n,o)=>i.provideDefinition(n,o,t))}function uf(s,e,t){return Hd(s,e,NS,(i,n,o)=>i.provideDeclaration(n,o,t))}function pf(s,e,t){return Hd(s,e,zS,(i,n,o)=>i.provideImplementation(n,o,t))}function mf(s,e,t){return Hd(s,e,OS,(i,n,o)=>i.provideTypeDefinition(n,o,t))}function Bd(s,e,t,i){return Hd(s,e,AS,(n,o,r)=>x_(this,void 0,void 0,function*(){let a=yield n.provideReferences(o,r,{includeDeclaration:!0},i);if(!t||!a||a.length!==2)return a;let l=yield n.provideReferences(o,r,{includeDeclaration:!1},i);return l&&l.length===1?l:a}))}function Vd(s){return x_(this,void 0,void 0,function*(){let e=yield s(),t=new Ut(e,""),i=t.references.map(n=>n.link);return t.dispose(),i})}wi("_executeDefinitionProvider",(s,e)=>Vd(()=>Wd(s,e,ge.None)));wi("_executeDeclarationProvider",(s,e)=>Vd(()=>uf(s,e,ge.None)));wi("_executeImplementationProvider",(s,e)=>Vd(()=>pf(s,e,ge.None)));wi("_executeTypeDefinitionProvider",(s,e)=>Vd(()=>mf(s,e,ge.None)));wi("_executeReferenceProvider",(s,e)=>Vd(()=>Bd(s,e,!1,ge.None)));var mn=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},gf,ff,yf,bf,Sf,vf,xf,Cf;Oi.appendMenuItem(se.EditorContext,{submenu:se.EditorContextPeek,title:u("peek.submenu","Peek"),group:"navigation",order:100});var C_=new Set;function Dn(s){let e=new s;return Nh(e),C_.add(e.id),e}var _s=class{constructor(e,t){this.model=e,this.position=t}static is(e){return!e||typeof e!="object"?!1:!!(e instanceof _s||U.isIPosition(e.position)&&e.model)}},zo=class extends F{constructor(e,t){super(t);this.configuration=e}run(e,t,i){if(!t.hasModel())return Promise.resolve(void 0);let n=e.get(Ze),o=e.get(Ve),r=e.get(Mo),a=e.get(Od),l=t.getModel(),c=t.getPosition(),d=_s.is(i)?i:new _s(l,c),h=new yd(t,5),p=ha(this._getLocationModel(d.model,d.position,h.token),h.token).then(m=>mn(this,void 0,void 0,function*(){var f;if(!m||h.token.isCancellationRequested)return;Ct(m.ariaMessage);let v;if(m.referenceAt(l.uri,c)){let w=this._getAlternativeCommand(t);w!==this.id&&C_.has(w)&&(v=t.getAction(w))}let _=m.references.length;if(_===0){if(!this.configuration.muteMessage){let w=l.getWordAtPosition(c);(f=Qt.get(t))===null||f===void 0||f.showMessage(this._getNoResultFoundMessage(w),c)}}else if(_===1&&v)v.run();else return this._onResult(o,a,t,m)}),m=>{n.error(m)}).finally(()=>{h.dispose()});return r.showWhile(p,250),p}_onResult(e,t,i,n){return mn(this,void 0,void 0,function*(){let o=this._getGoToPreference(i);if(!(i instanceof Mn)&&(this.configuration.openInPeek||o==="peek"&&n.references.length>1))this._openInPeek(i,n);else{let r=n.firstReference(),a=n.references.length>1&&o==="gotoAndPeek",l=yield this._openReference(i,e,r,this.configuration.openToSide,!a);a&&l?this._openInPeek(l,n):n.dispose(),o==="goto"&&t.put(r)}})}_openReference(e,t,i,n,o){return mn(this,void 0,void 0,function*(){let r;if(MS(i)&&(r=i.targetSelectionRange),r||(r=i.range),!r)return;let a=yield t.openCodeEditor({resource:i.uri,options:{selection:b.collapseToStart(r),selectionRevealType:3}},e,n);if(!!a){if(o){let l=a.getModel(),c=a.deltaDecorations([],[{range:r,options:{description:"symbol-navigate-action-highlight",className:"symbolHighlight"}}]);setTimeout(()=>{a.getModel()===l&&a.deltaDecorations(c,[])},350)}return a}})}_openInPeek(e,t){let i=io.get(e);i&&e.hasModel()?i.toggleWidget(e.getSelection(),Oe(n=>Promise.resolve(t)),this.configuration.openInPeek):t.dispose()}},kr=class extends zo{_getLocationModel(e,t,i){return mn(this,void 0,void 0,function*(){return new Ut(yield Wd(e,t,i),u("def.title","Definitions"))})}_getNoResultFoundMessage(e){return e&&e.word?u("noResultWord","No definition found for '{0}'",e.word):u("generic.noResults","No definition found")}_getAlternativeCommand(e){return e.getOption(51).alternativeDefinitionCommand}_getGoToPreference(e){return e.getOption(51).multipleDefinitions}},__=rh&&!BS?2118:70;Dn((gf=class _f extends kr{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:_f.id,label:u("actions.goToDecl.label","Go to Definition"),alias:"Go to Definition",precondition:O.and(S.hasDefinitionProvider,S.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:S.editorTextFocus,primary:__,weight:100},contextMenuOpts:{group:"navigation",order:1.1}});Pe.registerCommandAlias("editor.action.goToDeclaration",_f.id)}},gf.id="editor.action.revealDefinition",gf));Dn((ff=class wf extends kr{constructor(){super({openToSide:!0,openInPeek:!1,muteMessage:!1},{id:wf.id,label:u("actions.goToDeclToSide.label","Open Definition to the Side"),alias:"Open Definition to the Side",precondition:O.and(S.hasDefinitionProvider,S.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,__),weight:100}});Pe.registerCommandAlias("editor.action.openDeclarationToTheSide",wf.id)}},ff.id="editor.action.revealDefinitionAside",ff));Dn((yf=class Tf extends kr{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:Tf.id,label:u("actions.previewDecl.label","Peek Definition"),alias:"Peek Definition",precondition:O.and(S.hasDefinitionProvider,Ot.notInPeekEditor,S.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:S.editorTextFocus,primary:582,linux:{primary:3140},weight:100},contextMenuOpts:{menuId:se.EditorContextPeek,group:"peek",order:2}});Pe.registerCommandAlias("editor.action.previewDeclaration",Tf.id)}},yf.id="editor.action.peekDefinition",yf));var Ef=class extends zo{_getLocationModel(e,t,i){return mn(this,void 0,void 0,function*(){return new Ut(yield uf(e,t,i),u("decl.title","Declarations"))})}_getNoResultFoundMessage(e){return e&&e.word?u("decl.noResultWord","No declaration found for '{0}'",e.word):u("decl.generic.noResults","No declaration found")}_getAlternativeCommand(e){return e.getOption(51).alternativeDeclarationCommand}_getGoToPreference(e){return e.getOption(51).multipleDeclarations}};Dn((bf=class w_ extends Ef{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:w_.id,label:u("actions.goToDeclaration.label","Go to Declaration"),alias:"Go to Declaration",precondition:O.and(S.hasDeclarationProvider,S.isInWalkThroughSnippet.toNegated()),contextMenuOpts:{group:"navigation",order:1.3}})}_getNoResultFoundMessage(e){return e&&e.word?u("decl.noResultWord","No declaration found for '{0}'",e.word):u("decl.generic.noResults","No declaration found")}},bf.id="editor.action.revealDeclaration",bf));Dn(class extends Ef{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:"editor.action.peekDeclaration",label:u("actions.peekDecl.label","Peek Declaration"),alias:"Peek Declaration",precondition:O.and(S.hasDeclarationProvider,Ot.notInPeekEditor,S.isInWalkThroughSnippet.toNegated()),contextMenuOpts:{menuId:se.EditorContextPeek,group:"peek",order:3}})}});var If=class extends zo{_getLocationModel(e,t,i){return mn(this,void 0,void 0,function*(){return new Ut(yield mf(e,t,i),u("typedef.title","Type Definitions"))})}_getNoResultFoundMessage(e){return e&&e.word?u("goToTypeDefinition.noResultWord","No type definition found for '{0}'",e.word):u("goToTypeDefinition.generic.noResults","No type definition found")}_getAlternativeCommand(e){return e.getOption(51).alternativeTypeDefinitionCommand}_getGoToPreference(e){return e.getOption(51).multipleTypeDefinitions}};Dn((Sf=class T_ extends If{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:T_.ID,label:u("actions.goToTypeDefinition.label","Go to Type Definition"),alias:"Go to Type Definition",precondition:O.and(S.hasTypeDefinitionProvider,S.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:S.editorTextFocus,primary:0,weight:100},contextMenuOpts:{group:"navigation",order:1.4}})}},Sf.ID="editor.action.goToTypeDefinition",Sf));Dn((vf=class E_ extends If{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:E_.ID,label:u("actions.peekTypeDefinition.label","Peek Type Definition"),alias:"Peek Type Definition",precondition:O.and(S.hasTypeDefinitionProvider,Ot.notInPeekEditor,S.isInWalkThroughSnippet.toNegated()),contextMenuOpts:{menuId:se.EditorContextPeek,group:"peek",order:4}})}},vf.ID="editor.action.peekTypeDefinition",vf));var kf=class extends zo{_getLocationModel(e,t,i){return mn(this,void 0,void 0,function*(){return new Ut(yield pf(e,t,i),u("impl.title","Implementations"))})}_getNoResultFoundMessage(e){return e&&e.word?u("goToImplementation.noResultWord","No implementation found for '{0}'",e.word):u("goToImplementation.generic.noResults","No implementation found")}_getAlternativeCommand(e){return e.getOption(51).alternativeImplementationCommand}_getGoToPreference(e){return e.getOption(51).multipleImplementations}};Dn((xf=class I_ extends kf{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:I_.ID,label:u("actions.goToImplementation.label","Go to Implementations"),alias:"Go to Implementations",precondition:O.and(S.hasImplementationProvider,S.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:S.editorTextFocus,primary:2118,weight:100},contextMenuOpts:{group:"navigation",order:1.45}})}},xf.ID="editor.action.goToImplementation",xf));Dn((Cf=class k_ extends kf{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:k_.ID,label:u("actions.peekImplementation.label","Peek Implementations"),alias:"Peek Implementations",precondition:O.and(S.hasImplementationProvider,Ot.notInPeekEditor,S.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:S.editorTextFocus,primary:3142,weight:100},contextMenuOpts:{menuId:se.EditorContextPeek,group:"peek",order:5}})}},Cf.ID="editor.action.peekImplementation",Cf));var Lf=class extends zo{_getNoResultFoundMessage(e){return e?u("references.no","No references found for '{0}'",e.word):u("references.noGeneric","No references found")}_getAlternativeCommand(e){return e.getOption(51).alternativeReferenceCommand}_getGoToPreference(e){return e.getOption(51).multipleReferences}};Dn(class extends Lf{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:"editor.action.goToReferences",label:u("goToReferences.label","Go to References"),alias:"Go to References",precondition:O.and(S.hasReferenceProvider,Ot.notInPeekEditor,S.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:S.editorTextFocus,primary:1094,weight:100},contextMenuOpts:{group:"navigation",order:1.45}})}_getLocationModel(e,t,i){return mn(this,void 0,void 0,function*(){return new Ut(yield Bd(e,t,!0,i),u("ref.title","References"))})}});Dn(class extends Lf{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:"editor.action.referenceSearch.trigger",label:u("references.action.label","Peek References"),alias:"Peek References",precondition:O.and(S.hasReferenceProvider,Ot.notInPeekEditor,S.isInWalkThroughSnippet.toNegated()),contextMenuOpts:{menuId:se.EditorContextPeek,group:"peek",order:6}})}_getLocationModel(e,t,i){return mn(this,void 0,void 0,function*(){return new Ut(yield Bd(e,t,!1,i),u("ref.title","References"))})}});var L_=class extends zo{constructor(e,t,i){super(e,{id:"editor.action.goToLocation",label:u("label.generic","Go to Any Symbol"),alias:"Go to Any Symbol",precondition:O.and(Ot.notInPeekEditor,S.isInWalkThroughSnippet.toNegated())});this._references=t,this._gotoMultipleBehaviour=i}_getLocationModel(e,t,i){return mn(this,void 0,void 0,function*(){return new Ut(this._references,u("generic.title","Locations"))})}_getNoResultFoundMessage(e){return e&&u("generic.noResult","No results for '{0}'",e.word)||""}_getGoToPreference(e){var t;return(t=this._gotoMultipleBehaviour)!==null&&t!==void 0?t:e.getOption(51).multipleReferences}_getAlternativeCommand(){return""}};Pe.registerCommand({id:"editor.action.goToLocations",description:{description:"Go to locations from a position in a file",args:[{name:"uri",description:"The text document in which to start",constraint:_e},{name:"position",description:"The position at which to start",constraint:U.isIPosition},{name:"locations",description:"An array of locations.",constraint:Array},{name:"multiple",description:"Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto"},{name:"noResultsMessage",description:"Human readable message that shows when locations is empty."}]},handler:(s,e,t,i,n,o,r)=>mn(void 0,void 0,void 0,function*(){qe(_e.isUri(e)),qe(U.isIPosition(t)),qe(Array.isArray(i)),qe(typeof n=="undefined"||typeof n=="string"),qe(typeof r=="undefined"||typeof r=="boolean");let a=s.get(Ve),l=yield a.openCodeEditor({resource:e},a.getFocusedCodeEditor());if(mg(l))return l.setPosition(t),l.revealPositionInCenterIfOutsideViewport(t,0),l.invokeWithinContext(c=>{let d=new class extends L_{_getNoResultFoundMessage(h){return o||super._getNoResultFoundMessage(h)}}({muteMessage:!Boolean(o),openInPeek:Boolean(r),openToSide:!1},i,n);c.get(le).invokeFunction(d.run.bind(d),l)})})});Pe.registerCommand({id:"editor.action.peekLocations",description:{description:"Peek locations from a position in a file",args:[{name:"uri",description:"The text document in which to start",constraint:_e},{name:"position",description:"The position at which to start",constraint:U.isIPosition},{name:"locations",description:"An array of locations.",constraint:Array},{name:"multiple",description:"Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto"}]},handler:(s,e,t,i,n)=>mn(void 0,void 0,void 0,function*(){s.get(dt).executeCommand("editor.action.goToLocations",e,t,i,n,void 0,!0)})});Pe.registerCommand({id:"editor.action.findReferences",handler:(s,e,t)=>{qe(_e.isUri(e)),qe(U.isIPosition(t));let i=s.get(Ve);return i.openCodeEditor({resource:e},i.getFocusedCodeEditor()).then(n=>{if(!mg(n)||!n.hasModel())return;let o=io.get(n);if(!o)return;let r=Oe(l=>Bd(n.getModel(),U.lift(t),!1,l).then(c=>new Ut(c,u("ref.title","References")))),a=new b(t.lineNumber,t.column,t.lineNumber,t.column);return Promise.resolve(o.toggleWidget(a,r,!1))})}});Pe.registerCommandAlias("editor.action.showReferences","editor.action.peekLocations");Oi.appendMenuItems([{id:se.MenubarGoMenu,item:{command:{id:"editor.action.revealDefinition",title:u({key:"miGotoDefinition",comment:["&& denotes a mnemonic"]},"Go to &&Definition")},group:"4_symbol_nav",order:2}},{id:se.MenubarGoMenu,item:{command:{id:"editor.action.revealDeclaration",title:u({key:"miGotoDeclaration",comment:["&& denotes a mnemonic"]},"Go to &&Declaration")},group:"4_symbol_nav",order:3}},{id:se.MenubarGoMenu,item:{command:{id:"editor.action.goToTypeDefinition",title:u({key:"miGotoTypeDefinition",comment:["&& denotes a mnemonic"]},"Go to &&Type Definition")},group:"4_symbol_nav",order:3}},{id:se.MenubarGoMenu,item:{command:{id:"editor.action.goToImplementation",title:u({key:"miGotoImplementation",comment:["&& denotes a mnemonic"]},"Go to &&Implementations")},group:"4_symbol_nav",order:4}},{id:se.MenubarGoMenu,item:{command:{id:"editor.action.goToReferences",title:u({key:"miGotoReference",comment:["&& denotes a mnemonic"]},"Go to &&References")},group:"4_symbol_nav",order:5}}]);var d1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},P_=function(s,e){return function(t,i){e(t,i,s)}},Lr=class Gd{constructor(e,t,i){this.textModelResolverService=t,this.languageService=i,this.toUnhook=new R,this.toUnhookForKeyboard=new R,this.linkDecorations=[],this.currentWordAtPosition=null,this.previousPromise=null,this.editor=e;let n=new bs(e);this.toUnhook.add(n),this.toUnhook.add(n.onMouseMoveOrRelevantKeyDown(([o,r])=>{this.startFindDefinitionFromMouse(o,Mi(r))})),this.toUnhook.add(n.onExecute(o=>{this.isEnabled(o)&&this.gotoDefinition(o.target.position,o.hasSideBySideModifier).then(()=>{this.removeLinkDecorations()},r=>{this.removeLinkDecorations(),de(r)})})),this.toUnhook.add(n.onCancel(()=>{this.removeLinkDecorations(),this.currentWordAtPosition=null}))}static get(e){return e.getContribution(Gd.ID)}startFindDefinitionFromCursor(e){return this.startFindDefinition(e).then(()=>{this.toUnhookForKeyboard.add(this.editor.onDidChangeCursorPosition(()=>{this.currentWordAtPosition=null,this.removeLinkDecorations(),this.toUnhookForKeyboard.clear()})),this.toUnhookForKeyboard.add(this.editor.onKeyDown(t=>{t&&(this.currentWordAtPosition=null,this.removeLinkDecorations(),this.toUnhookForKeyboard.clear())}))})}startFindDefinitionFromMouse(e,t){if(e.target.type===9&&this.linkDecorations.length>0)return;if(!this.editor.hasModel()||!this.isEnabled(e,t)){this.currentWordAtPosition=null,this.removeLinkDecorations();return}let i=e.target.position;this.startFindDefinition(i)}startFindDefinition(e){var t;this.toUnhookForKeyboard.clear();let i=e?(t=this.editor.getModel())===null||t===void 0?void 0:t.getWordAtPosition(e):null;if(!i)return this.currentWordAtPosition=null,this.removeLinkDecorations(),Promise.resolve(0);if(this.currentWordAtPosition&&this.currentWordAtPosition.startColumn===i.startColumn&&this.currentWordAtPosition.endColumn===i.endColumn&&this.currentWordAtPosition.word===i.word)return Promise.resolve(0);this.currentWordAtPosition=i;let n=new _u(this.editor,15);return this.previousPromise&&(this.previousPromise.cancel(),this.previousPromise=null),this.previousPromise=Oe(o=>this.findDefinition(e,o)),this.previousPromise.then(o=>{if(!o||!o.length||!n.validate(this.editor)){this.removeLinkDecorations();return}if(o.length>1)this.addDecoration(new b(e.lineNumber,i.startColumn,e.lineNumber,i.endColumn),new ai().appendText(u("multipleResults","Click to show {0} definitions.",o.length)));else{let r=o[0];if(!r.uri)return;this.textModelResolverService.createModelReference(r.uri).then(a=>{if(!a.object||!a.object.textEditorModel){a.dispose();return}let{object:{textEditorModel:l}}=a,{startLineNumber:c}=r.range;if(c<1||c>l.getLineCount()){a.dispose();return}let d=this.getPreviewValue(l,c,r),h;r.originSelectionRange?h=b.lift(r.originSelectionRange):h=new b(e.lineNumber,i.startColumn,e.lineNumber,i.endColumn);let p=this.languageService.guessLanguageIdByFilepathOrFirstLine(l.uri);this.addDecoration(h,new ai().appendCodeblock(p||"",d)),a.dispose()})}}).then(void 0,de)}getPreviewValue(e,t,i){let n=i.targetSelectionRange?i.range:this.getPreviewRangeBasedOnBrackets(e,t);return n.endLineNumber-n.startLineNumber>=Gd.MAX_SOURCE_PREVIEW_LINES&&(n=this.getPreviewRangeBasedOnIndentation(e,t)),this.stripIndentationFromPreviewRange(e,t,n)}stripIndentationFromPreviewRange(e,t,i){let o=e.getLineFirstNonWhitespaceColumn(t);for(let a=t+1;a<i.endLineNumber;a++){let l=e.getLineFirstNonWhitespaceColumn(a);o=Math.min(o,l)}return e.getValueInRange(i).replace(new RegExp(`^\\s{${o-1}}`,"gm"),"").trim()}getPreviewRangeBasedOnIndentation(e,t){let i=e.getLineFirstNonWhitespaceColumn(t),n=Math.min(e.getLineCount(),t+Gd.MAX_SOURCE_PREVIEW_LINES),o=t+1;for(;o<n;o++){let r=e.getLineFirstNonWhitespaceColumn(o);if(i===r)break}return new b(t,1,o+1,1)}getPreviewRangeBasedOnBrackets(e,t){let i=Math.min(e.getLineCount(),t+Gd.MAX_SOURCE_PREVIEW_LINES),n=[],o=!0,r=e.bracketPairs.findNextBracket(new U(t,1));for(;r!==null;){if(n.length===0)n.push(r);else{let d=n[n.length-1];if(d.open[0]===r.open[0]&&d.isOpen&&!r.isOpen?n.pop():n.push(r),n.length===0)if(o)o=!1;else return new b(t,1,r.range.endLineNumber+1,1)}let a=e.getLineMaxColumn(t),l=r.range.endLineNumber,c=r.range.endColumn;if(a===r.range.endColumn&&(l++,c=1),l>i)return new b(t,1,i+1,1);r=e.bracketPairs.findNextBracket(new U(l,c))}return new b(t,1,i+1,1)}addDecoration(e,t){let i={range:e,options:{description:"goto-definition-link",inlineClassName:"goto-definition-link",hoverMessage:t}};this.linkDecorations=this.editor.deltaDecorations(this.linkDecorations,[i])}removeLinkDecorations(){this.linkDecorations.length>0&&(this.linkDecorations=this.editor.deltaDecorations(this.linkDecorations,[]))}isEnabled(e,t){return this.editor.hasModel()&&e.isNoneOrSingleMouseDown&&e.target.type===6&&(e.hasTriggerModifier||(t?t.keyCodeIsTriggerKey:!1))&&Th.has(this.editor.getModel())}findDefinition(e,t){let i=this.editor.getModel();return i?Wd(i,e,t):Promise.resolve(null)}gotoDefinition(e,t){return this.editor.setPosition(e),this.editor.invokeWithinContext(i=>{let n=!t&&this.editor.getOption(78)&&!this.isInPeekEditor(i);return new kr({openToSide:t,openInPeek:n,muteMessage:!0},{alias:"",label:"",id:"",precondition:void 0}).run(i,this.editor)})}isInPeekEditor(e){let t=e.get(ie);return Ot.inPeekEditor.getValue(t)}dispose(){this.toUnhook.dispose()}};Lr.ID="editor.contrib.gotodefinitionatposition";Lr.MAX_SOURCE_PREVIEW_LINES=8;Lr=d1([P_(1,Gt),P_(2,ft)],Lr);J(Lr.ID,Lr);Me((s,e)=>{let t=s.getColor(La);t&&e.addRule(`.monaco-editor .goto-definition-link { color: ${t} !important; }`)});Ae();Ae();B();var Qu=W,jd=class extends z{constructor(){super();this.containerDomNode=document.createElement("div"),this.containerDomNode.className="monaco-hover",this.containerDomNode.tabIndex=0,this.containerDomNode.setAttribute("role","tooltip"),this.contentsDomNode=document.createElement("div"),this.contentsDomNode.className="monaco-hover-content",this.scrollbar=this._register(new Na(this.contentsDomNode,{consumeMouseWheelIfScrollbarIsNeeded:!0})),this.containerDomNode.appendChild(this.scrollbar.getDomNode())}onContentsChanged(){this.scrollbar.scanDomNode()}},Ud=class extends z{constructor(e,t,i){super();this.actionContainer=H(e,Qu("div.action-container")),this.action=H(this.actionContainer,Qu("a.action")),this.action.setAttribute("role","button"),t.iconClass&&H(this.action,Qu(`span.icon.${t.iconClass}`));let n=H(this.action,Qu("span"));n.textContent=i?`${t.label} (${i})`:t.label,this._register(Ke(this.actionContainer,$i.MOUSE_DOWN,o=>{o.stopPropagation(),o.preventDefault(),t.run(this.actionContainer)})),this.setEnabled(!0)}static render(e,t,i){return new Ud(e,t,i)}setEnabled(e){e?(this.actionContainer.classList.remove("disabled"),this.actionContainer.removeAttribute("aria-disabled")):(this.actionContainer.classList.add("disabled"),this.actionContainer.setAttribute("aria-disabled","true"))}};St();B();tt();ee();jt();Re();ke();ut();Zn();B();ee();De();var Pf=class{constructor(e,t,i){this.presentationIndex=i,this._onColorFlushed=new G,this.onColorFlushed=this._onColorFlushed.event,this._onDidChangeColor=new G,this.onDidChangeColor=this._onDidChangeColor.event,this._onDidChangePresentation=new G,this.onDidChangePresentation=this._onDidChangePresentation.event,this.originalColor=e,this._color=e,this._colorPresentations=t}get color(){return this._color}set color(e){this._color.equals(e)||(this._color=e,this._onDidChangeColor.fire(e))}get presentation(){return this.colorPresentations[this.presentationIndex]}get colorPresentations(){return this._colorPresentations}set colorPresentations(e){this._colorPresentations=e,this.presentationIndex>e.length-1&&(this.presentationIndex=0),this._onDidChangePresentation.fire(this.presentation)}selectNextColorPresentation(){this.presentationIndex=(this.presentationIndex+1)%this.colorPresentations.length,this.flushColor(),this._onDidChangePresentation.fire(this.presentation)}guessColorPresentation(e,t){for(let i=0;i<this.colorPresentations.length;i++)if(t.toLowerCase()===this.colorPresentations[i].label){this.presentationIndex=i,this._onDidChangePresentation.fire(this.presentation);break}}flushColor(){this._onColorFlushed.fire(this._color)}};Kl();Ae();as();Zn();De();B();Q();mt();Ne();var Rn=W,M_=class extends z{constructor(e,t,i){super();this.model=t,this.domNode=Rn(".colorpicker-header"),H(e,this.domNode),this.pickedColorNode=H(this.domNode,Rn(".picked-color"));let n=u("clickToToggleColorOptions","Click to toggle color options (rgb/hsl/hex)");this.pickedColorNode.setAttribute("title",n);let o=H(this.domNode,Rn(".original-color"));o.style.backgroundColor=we.Format.CSS.format(this.model.originalColor)||"",this.backgroundColor=i.getColorTheme().getColor(To)||we.white,this._register(Me((r,a)=>{this.backgroundColor=r.getColor(To)||we.white})),this._register(Ke(this.pickedColorNode,$i.CLICK,()=>this.model.selectNextColorPresentation())),this._register(Ke(o,$i.CLICK,()=>{this.model.color=this.model.originalColor,this.model.flushColor()})),this._register(t.onDidChangeColor(this.onDidChangeColor,this)),this._register(t.onDidChangePresentation(this.onDidChangePresentation,this)),this.pickedColorNode.style.backgroundColor=we.Format.CSS.format(t.color)||"",this.pickedColorNode.classList.toggle("light",t.color.rgba.a<.5?this.backgroundColor.isLighter():t.color.isLighter()),this.onDidChangeColor(this.model.color)}onDidChangeColor(e){this.pickedColorNode.style.backgroundColor=we.Format.CSS.format(e)||"",this.pickedColorNode.classList.toggle("light",e.rgba.a<.5?this.backgroundColor.isLighter():e.isLighter()),this.onDidChangePresentation()}onDidChangePresentation(){this.pickedColorNode.textContent=this.model.presentation?this.model.presentation.label:"",this.pickedColorNode.prepend(Rn(".codicon.codicon-color-mode"))}},D_=class extends z{constructor(e,t,i){super();this.model=t,this.pixelRatio=i,this.domNode=Rn(".colorpicker-body"),H(e,this.domNode),this.saturationBox=new R_(this.domNode,this.model,this.pixelRatio),this._register(this.saturationBox),this._register(this.saturationBox.onDidChange(this.onDidSaturationValueChange,this)),this._register(this.saturationBox.onColorFlushed(this.flushColor,this)),this.opacityStrip=new A_(this.domNode,this.model),this._register(this.opacityStrip),this._register(this.opacityStrip.onDidChange(this.onDidOpacityChange,this)),this._register(this.opacityStrip.onColorFlushed(this.flushColor,this)),this.hueStrip=new F_(this.domNode,this.model),this._register(this.hueStrip),this._register(this.hueStrip.onDidChange(this.onDidHueChange,this)),this._register(this.hueStrip.onColorFlushed(this.flushColor,this))}flushColor(){this.model.flushColor()}onDidSaturationValueChange({s:e,v:t}){let i=this.model.color.hsva;this.model.color=new we(new rd(i.h,e,t,i.a))}onDidOpacityChange(e){let t=this.model.color.hsva;this.model.color=new we(new rd(t.h,t.s,t.v,e))}onDidHueChange(e){let t=this.model.color.hsva,i=(1-e)*360;this.model.color=new we(new rd(i===360?0:i,t.s,t.v,t.a))}layout(){this.saturationBox.layout(),this.opacityStrip.layout(),this.hueStrip.layout()}},R_=class extends z{constructor(e,t,i){super();this.model=t,this.pixelRatio=i,this._onDidChange=new G,this.onDidChange=this._onDidChange.event,this._onColorFlushed=new G,this.onColorFlushed=this._onColorFlushed.event,this.domNode=Rn(".saturation-wrap"),H(e,this.domNode),this.canvas=document.createElement("canvas"),this.canvas.className="saturation-box",H(this.domNode,this.canvas),this.selection=Rn(".saturation-selection"),H(this.domNode,this.selection),this.layout(),this._register(Gm(this.domNode,n=>this.onMouseDown(n))),this._register(this.model.onDidChangeColor(this.onDidChangeColor,this)),this.monitor=null}onMouseDown(e){this.monitor=this._register(new od);let t=ni(this.domNode);e.target!==this.selection&&this.onDidChangePosition(e.offsetX,e.offsetY),this.monitor.startMonitoring(e.target,e.buttons,nd,n=>this.onDidChangePosition(n.posx-t.left,n.posy-t.top),()=>null);let i=jm(document,()=>{this._onColorFlushed.fire(),i.dispose(),this.monitor&&(this.monitor.stopMonitoring(!0),this.monitor=null)},!0)}onDidChangePosition(e,t){let i=Math.max(0,Math.min(1,e/this.width)),n=Math.max(0,Math.min(1,1-t/this.height));this.paintSelection(i,n),this._onDidChange.fire({s:i,v:n})}layout(){this.width=this.domNode.offsetWidth,this.height=this.domNode.offsetHeight,this.canvas.width=this.width*this.pixelRatio,this.canvas.height=this.height*this.pixelRatio,this.paint();let e=this.model.color.hsva;this.paintSelection(e.s,e.v)}paint(){let e=this.model.color.hsva,t=new we(new rd(e.h,1,1,1)),i=this.canvas.getContext("2d"),n=i.createLinearGradient(0,0,this.canvas.width,0);n.addColorStop(0,"rgba(255, 255, 255, 1)"),n.addColorStop(.5,"rgba(255, 255, 255, 0.5)"),n.addColorStop(1,"rgba(255, 255, 255, 0)");let o=i.createLinearGradient(0,0,0,this.canvas.height);o.addColorStop(0,"rgba(0, 0, 0, 0)"),o.addColorStop(1,"rgba(0, 0, 0, 1)"),i.rect(0,0,this.canvas.width,this.canvas.height),i.fillStyle=we.Format.CSS.format(t),i.fill(),i.fillStyle=n,i.fill(),i.fillStyle=o,i.fill()}paintSelection(e,t){this.selection.style.left=`${e*this.width}px`,this.selection.style.top=`${this.height-t*this.height}px`}onDidChangeColor(){this.monitor&&this.monitor.isMonitoring()||this.paint()}},Mf=class extends z{constructor(e,t){super();this.model=t,this._onDidChange=new G,this.onDidChange=this._onDidChange.event,this._onColorFlushed=new G,this.onColorFlushed=this._onColorFlushed.event,this.domNode=H(e,Rn(".strip")),this.overlay=H(this.domNode,Rn(".overlay")),this.slider=H(this.domNode,Rn(".slider")),this.slider.style.top="0px",this._register(Gm(this.domNode,i=>this.onMouseDown(i))),this.layout()}layout(){this.height=this.domNode.offsetHeight-this.slider.offsetHeight;let e=this.getValue(this.model.color);this.updateSliderPosition(e)}onMouseDown(e){let t=this._register(new od),i=ni(this.domNode);this.domNode.classList.add("grabbing"),e.target!==this.slider&&this.onDidChangeTop(e.offsetY),t.startMonitoring(e.target,e.buttons,nd,o=>this.onDidChangeTop(o.posy-i.top),()=>null);let n=jm(document,()=>{this._onColorFlushed.fire(),n.dispose(),t.stopMonitoring(!0),this.domNode.classList.remove("grabbing")},!0)}onDidChangeTop(e){let t=Math.max(0,Math.min(1,1-e/this.height));this.updateSliderPosition(t),this._onDidChange.fire(t)}updateSliderPosition(e){this.slider.style.top=`${(1-e)*this.height}px`}},A_=class extends Mf{constructor(e,t){super(e,t);this.domNode.classList.add("opacity-strip"),this._register(t.onDidChangeColor(this.onDidChangeColor,this)),this.onDidChangeColor(this.model.color)}onDidChangeColor(e){let{r:t,g:i,b:n}=e.rgba,o=new we(new wo(t,i,n,1)),r=new we(new wo(t,i,n,0));this.overlay.style.background=`linear-gradient(to bottom, ${o} 0%, ${r} 100%)`}getValue(e){return e.hsva.a}},F_=class extends Mf{constructor(e,t){super(e,t);this.domNode.classList.add("hue-strip")}getValue(e){return 1-e.hsva.h/360}},Df=class extends Ti{constructor(e,t,i,n){super();this.model=t,this.pixelRatio=i,this._register(HS.onDidChange(()=>this.layout()));let o=Rn(".colorpicker-widget");e.appendChild(o);let r=new M_(o,this.model,n);this.body=new D_(o,this.model,this.pixelRatio),this._register(r),this._register(this.body)}layout(){this.body.layout()}};Ne();var c1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},h1=function(s,e){return function(t,i){e(t,i,s)}},N_=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},z_=class{constructor(e,t,i,n){this.owner=e,this.range=t,this.model=i,this.provider=n,this.forceShowAtRange=!0}isValidForHoverAnchor(e){return e.type===1&&this.range.startColumn<=e.range.startColumn&&this.range.endColumn>=e.range.endColumn}},ep=class{constructor(e,t){this._editor=e,this._themeService=t}computeSync(e,t){return[]}computeAsync(e,t,i){return Si.fromPromise(this._computeAsync(e,t,i))}_computeAsync(e,t,i){return N_(this,void 0,void 0,function*(){if(!this._editor.hasModel())return[];let n=Tr.get(this._editor);if(!n)return[];for(let o of t){if(!n.isColorDecorationId(o.id))continue;let r=n.getColorData(o.range.getStartPosition());if(r)return[yield this._createColorHover(this._editor.getModel(),r.colorInfo,r.provider)]}return[]})}_createColorHover(e,t,i){return N_(this,void 0,void 0,function*(){let n=e.getValueInRange(t.range),{red:o,green:r,blue:a,alpha:l}=t.color,c=new wo(Math.round(o*255),Math.round(r*255),Math.round(a*255),l),d=new we(c),h=yield Ug(e,t,i,ge.None),p=new Pf(d,[],0);return p.colorPresentations=h||[],p.guessColorPresentation(d,n),new z_(this,b.lift(t.range),p,i)})}renderHoverParts(e,t){if(t.length===0||!this._editor.hasModel())return z.None;let i=new R,n=t[0],o=this._editor.getModel(),r=n.model,a=i.add(new Df(e.fragment,r,this._editor.getOption(129),this._themeService));e.setColorPicker(a);let l=new b(n.range.startLineNumber,n.range.startColumn,n.range.endLineNumber,n.range.endColumn),c=()=>{let h,p;if(r.presentation.textEdit){h=[r.presentation.textEdit],p=new b(r.presentation.textEdit.range.startLineNumber,r.presentation.textEdit.range.startColumn,r.presentation.textEdit.range.endLineNumber,r.presentation.textEdit.range.endColumn);let m=this._editor.getModel()._setTrackedRange(null,p,3);this._editor.pushUndoStop(),this._editor.executeEdits("colorpicker",h),p=this._editor.getModel()._getTrackedRange(m)||p}else h=[{identifier:null,range:l,text:r.presentation.label,forceMoveMarkers:!1}],p=l.setEndPosition(l.endLineNumber,l.startColumn+r.presentation.label.length),this._editor.pushUndoStop(),this._editor.executeEdits("colorpicker",h);r.presentation.additionalTextEdits&&(h=[...r.presentation.additionalTextEdits],this._editor.executeEdits("colorpicker",h),e.hide()),this._editor.pushUndoStop(),l=p},d=h=>Ug(o,{range:l,color:{red:h.rgba.r/255,green:h.rgba.g/255,blue:h.rgba.b/255,alpha:h.rgba.a}},n.provider,ge.None).then(p=>{r.colorPresentations=p||[]});return i.add(r.onColorFlushed(h=>{d(h).then(c)})),i.add(r.onDidChangeColor(d)),i}};ep=c1([h1(1,Nt)],ep);ke();Le();De();B();var u1=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},p1=function(s){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=s[Symbol.asyncIterator],t;return e?e.call(s):(s=typeof __values=="function"?__values(s):s[Symbol.iterator](),t={},i("next"),i("throw"),i("return"),t[Symbol.asyncIterator]=function(){return this},t);function i(o){t[o]=s[o]&&function(r){return new Promise(function(a,l){r=s[o](r),n(a,l,r.done,r.value)})}}function n(o,r,a,l){Promise.resolve(l).then(function(c){o({value:c,done:a})},r)}},O_=class{constructor(e,t,i){this.value=e,this.isComplete=t,this.hasLoadingMessage=i}},$d=class extends z{constructor(e,t){super();this._editor=e,this._computer=t,this._onResult=this._register(new G),this.onResult=this._onResult.event,this._firstWaitScheduler=this._register(new $e(()=>this._triggerAsyncComputation(),0)),this._secondWaitScheduler=this._register(new $e(()=>this._triggerSyncComputation(),0)),this._loadingMessageScheduler=this._register(new $e(()=>this._triggerLoadingMessage(),0)),this._state=0,this._asyncIterable=null,this._asyncIterableDone=!1,this._result=[]}dispose(){this._asyncIterable&&(this._asyncIterable.cancel(),this._asyncIterable=null),super.dispose()}get _hoverTime(){return this._editor.getOption(53).delay}get _firstWaitTime(){return this._hoverTime/2}get _secondWaitTime(){return this._hoverTime-this._firstWaitTime}get _loadingMessageTime(){return 3*this._hoverTime}_setState(e,t=!0){this._state=e,t&&this._fireResult()}_triggerAsyncComputation(){this._setState(2),this._secondWaitScheduler.schedule(this._secondWaitTime),this._computer.computeAsync?(this._asyncIterableDone=!1,this._asyncIterable=gS(e=>this._computer.computeAsync(e)),u1(this,void 0,void 0,function*(){var e,t;try{try{for(var i=p1(this._asyncIterable),n;n=yield i.next(),!n.done;){let o=n.value;o&&(this._result.push(o),this._fireResult())}}catch(o){e={error:o}}finally{try{n&&!n.done&&(t=i.return)&&(yield t.call(i))}finally{if(e)throw e.error}}this._asyncIterableDone=!0,(this._state===3||this._state===4)&&this._setState(0)}catch(o){de(o)}})):this._asyncIterableDone=!0}_triggerSyncComputation(){this._computer.computeSync&&(this._result=this._result.concat(this._computer.computeSync())),this._setState(this._asyncIterableDone?0:3)}_triggerLoadingMessage(){this._state===3&&this._setState(4)}_fireResult(){if(this._state===1||this._state===2)return;let e=this._state===0,t=this._state===4;this._onResult.fire(new O_(this._result.slice(0),e,t))}start(e){if(e===0)this._state===0&&(this._setState(1),this._firstWaitScheduler.schedule(this._firstWaitTime),this._loadingMessageScheduler.schedule(this._loadingMessageTime));else switch(this._state){case 0:this._triggerAsyncComputation(),this._secondWaitScheduler.cancel(),this._triggerSyncComputation();break;case 2:this._secondWaitScheduler.cancel(),this._triggerSyncComputation();break}}cancel(){this._firstWaitScheduler.cancel(),this._secondWaitScheduler.cancel(),this._loadingMessageScheduler.cancel(),this._asyncIterable&&(this._asyncIterable.cancel(),this._asyncIterable=null),this._result=[],this._setState(0,!1)}};var Kd=class{constructor(e,t){this.priority=e,this.range=t,this.type=1}equals(e){return e.type===1&&this.range.equalsRange(e.range)}canAdoptVisibleHover(e,t){return e.type===1&&t.lineNumber===this.range.startLineNumber}},ws=class{constructor(e,t,i){this.priority=e,this.owner=t,this.range=i,this.type=2}equals(e){return e.type===2&&this.owner===e.owner}canAdoptVisibleHover(e,t){return e.type===2&&this.owner===e.owner}};Ae();St();ke();B();Ae();function m1(s){if(Array.isArray(s)){for(var e=0,t=Array(s.length);e<s.length;e++)t[e]=s[e];return t}else return Array.from(s)}var g1=Object.hasOwnProperty,H_=Object.setPrototypeOf,f1=Object.isFrozen,y1=Object.getPrototypeOf,b1=Object.getOwnPropertyDescriptor,Ei=Object.freeze,Ho=Object.seal,S1=Object.create,K_=typeof Reflect!="undefined"&&Reflect,np=K_.apply,zf=K_.construct;np||(np=function(e,t,i){return e.apply(t,i)});Ei||(Ei=function(e){return e});Ho||(Ho=function(e){return e});zf||(zf=function(e,t){return new(Function.prototype.bind.apply(e,[null].concat(m1(t))))});var v1=An(Array.prototype.forEach),W_=An(Array.prototype.pop),qd=An(Array.prototype.push),Es=An(String.prototype.toLowerCase),B_=An(String.prototype.match),Pr=An(String.prototype.replace),x1=An(String.prototype.indexOf),C1=An(String.prototype.trim),Oo=An(RegExp.prototype.test),V_=_1(TypeError);function An(s){return function(e){for(var t=arguments.length,i=Array(t>1?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];return np(s,e,i)}}function _1(s){return function(){for(var e=arguments.length,t=Array(e),i=0;i<e;i++)t[i]=arguments[i];return zf(s,t)}}function Fe(s,e){H_&&H_(s,null);for(var t=e.length;t--;){var i=e[t];if(typeof i=="string"){var n=Es(i);n!==i&&(f1(e)||(e[t]=n),i=n)}s[i]=!0}return s}function Ts(s){var e=S1(null),t=void 0;for(t in s)np(g1,s,[t])&&(e[t]=s[t]);return e}function tp(s,e){for(;s!==null;){var t=b1(s,e);if(t){if(t.get)return An(t.get);if(typeof t.value=="function")return An(t.value)}s=y1(s)}function i(n){return console.warn("fallback value for",n),null}return i}var G_=Ei(["a","abbr","acronym","address","area","article","aside","audio","b","bdi","bdo","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","content","data","datalist","dd","decorator","del","details","dfn","dialog","dir","div","dl","dt","element","em","fieldset","figcaption","figure","font","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","img","input","ins","kbd","label","legend","li","main","map","mark","marquee","menu","menuitem","meter","nav","nobr","ol","optgroup","option","output","p","picture","pre","progress","q","rp","rt","ruby","s","samp","section","select","shadow","small","source","spacer","span","strike","strong","style","sub","summary","sup","table","tbody","td","template","textarea","tfoot","th","thead","time","tr","track","tt","u","ul","var","video","wbr"]),Rf=Ei(["svg","a","altglyph","altglyphdef","altglyphitem","animatecolor","animatemotion","animatetransform","circle","clippath","defs","desc","ellipse","filter","font","g","glyph","glyphref","hkern","image","line","lineargradient","marker","mask","metadata","mpath","path","pattern","polygon","polyline","radialgradient","rect","stop","style","switch","symbol","text","textpath","title","tref","tspan","view","vkern"]),Af=Ei(["feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence"]),w1=Ei(["animate","color-profile","cursor","discard","fedropshadow","feimage","font-face","font-face-format","font-face-name","font-face-src","font-face-uri","foreignobject","hatch","hatchpath","mesh","meshgradient","meshpatch","meshrow","missing-glyph","script","set","solidcolor","unknown","use"]),Ff=Ei(["math","menclose","merror","mfenced","mfrac","mglyph","mi","mlabeledtr","mmultiscripts","mn","mo","mover","mpadded","mphantom","mroot","mrow","ms","mspace","msqrt","mstyle","msub","msup","msubsup","mtable","mtd","mtext","mtr","munder","munderover"]),T1=Ei(["maction","maligngroup","malignmark","mlongdiv","mscarries","mscarry","msgroup","mstack","msline","msrow","semantics","annotation","annotation-xml","mprescripts","none"]),j_=Ei(["#text"]),U_=Ei(["accept","action","align","alt","autocapitalize","autocomplete","autopictureinpicture","autoplay","background","bgcolor","border","capture","cellpadding","cellspacing","checked","cite","class","clear","color","cols","colspan","controls","controlslist","coords","crossorigin","datetime","decoding","default","dir","disabled","disablepictureinpicture","disableremoteplayback","download","draggable","enctype","enterkeyhint","face","for","headers","height","hidden","high","href","hreflang","id","inputmode","integrity","ismap","kind","label","lang","list","loading","loop","low","max","maxlength","media","method","min","minlength","multiple","muted","name","noshade","novalidate","nowrap","open","optimum","pattern","placeholder","playsinline","poster","preload","pubdate","radiogroup","readonly","rel","required","rev","reversed","role","rows","rowspan","spellcheck","scope","selected","shape","size","sizes","span","srclang","start","src","srcset","step","style","summary","tabindex","title","translate","type","usemap","valign","value","width","xmlns","slot"]),Nf=Ei(["accent-height","accumulate","additive","alignment-baseline","ascent","attributename","attributetype","azimuth","basefrequency","baseline-shift","begin","bias","by","class","clip","clippathunits","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cx","cy","d","dx","dy","diffuseconstant","direction","display","divisor","dur","edgemode","elevation","end","fill","fill-opacity","fill-rule","filter","filterunits","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","fx","fy","g1","g2","glyph-name","glyphref","gradientunits","gradienttransform","height","href","id","image-rendering","in","in2","k","k1","k2","k3","k4","kerning","keypoints","keysplines","keytimes","lang","lengthadjust","letter-spacing","kernelmatrix","kernelunitlength","lighting-color","local","marker-end","marker-mid","marker-start","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","max","mask","media","method","mode","min","name","numoctaves","offset","operator","opacity","order","orient","orientation","origin","overflow","paint-order","path","pathlength","patterncontentunits","patterntransform","patternunits","points","preservealpha","preserveaspectratio","primitiveunits","r","rx","ry","radius","refx","refy","repeatcount","repeatdur","restart","result","rotate","scale","seed","shape-rendering","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","stop-color","stop-opacity","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke","stroke-width","style","surfacescale","systemlanguage","tabindex","targetx","targety","transform","text-anchor","text-decoration","text-rendering","textlength","type","u1","u2","unicode","values","viewbox","visibility","version","vert-adv-y","vert-origin-x","vert-origin-y","width","word-spacing","wrap","writing-mode","xchannelselector","ychannelselector","x","x1","x2","xmlns","y","y1","y2","z","zoomandpan"]),$_=Ei(["accent","accentunder","align","bevelled","close","columnsalign","columnlines","columnspan","denomalign","depth","dir","display","displaystyle","encoding","fence","frame","height","href","id","largeop","length","linethickness","lspace","lquote","mathbackground","mathcolor","mathsize","mathvariant","maxsize","minsize","movablelimits","notation","numalign","open","rowalign","rowlines","rowspacing","rowspan","rspace","rquote","scriptlevel","scriptminsize","scriptsizemultiplier","selection","separator","separators","stretchy","subscriptshift","supscriptshift","symmetric","voffset","width","xmlns"]),ip=Ei(["xlink:href","xml:id","xlink:title","xml:space","xmlns:xlink"]),E1=Ho(/\{\{[\s\S]*|[\s\S]*\}\}/gm),I1=Ho(/<%[\s\S]*|[\s\S]*%>/gm),k1=Ho(/^data-[\-\w.\u00B7-\uFFFF]/),L1=Ho(/^aria-[\-\w]+$/),P1=Ho(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i),M1=Ho(/^(?:\w+script|data):/i),D1=Ho(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g),Xd=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(s){return typeof s}:function(s){return s&&typeof Symbol=="function"&&s.constructor===Symbol&&s!==Symbol.prototype?"symbol":typeof s};function no(s){if(Array.isArray(s)){for(var e=0,t=Array(s.length);e<s.length;e++)t[e]=s[e];return t}else return Array.from(s)}var R1=function(){return typeof window=="undefined"?null:window},A1=function(e,t){if((typeof e=="undefined"?"undefined":Xd(e))!=="object"||typeof e.createPolicy!="function")return null;var i=null,n="data-tt-policy-suffix";t.currentScript&&t.currentScript.hasAttribute(n)&&(i=t.currentScript.getAttribute(n));var o="dompurify"+(i?"#"+i:"");try{return e.createPolicy(o,{createHTML:function(a){return a}})}catch(r){return console.warn("TrustedTypes policy "+o+" could not be created."),null}};function q_(){var s=arguments.length>0&&arguments[0]!==void 0?arguments[0]:R1(),e=function(L){return q_(L)};if(e.version="2.3.1",e.removed=[],!s||!s.document||s.document.nodeType!==9)return e.isSupported=!1,e;var t=s.document,i=s.document,n=s.DocumentFragment,o=s.HTMLTemplateElement,r=s.Node,a=s.Element,l=s.NodeFilter,c=s.NamedNodeMap,d=c===void 0?s.NamedNodeMap||s.MozNamedAttrMap:c,h=s.Text,p=s.Comment,m=s.DOMParser,f=s.trustedTypes,v=a.prototype,_=tp(v,"cloneNode"),w=tp(v,"nextSibling"),A=tp(v,"childNodes"),M=tp(v,"parentNode");if(typeof o=="function"){var j=i.createElement("template");j.content&&j.content.ownerDocument&&(i=j.content.ownerDocument)}var V=A1(f,t),ce=V&&oa?V.createHTML(""):"",Te=i,It=Te.implementation,Wt=Te.createNodeIterator,Bt=Te.createDocumentFragment,nn=Te.getElementsByTagName,Sn=t.importNode,ti={};try{ti=Ts(i).documentMode?i.documentMode:{}}catch(Se){}var mi={};e.isSupported=typeof M=="function"&&It&&typeof It.createHTMLDocument!="undefined"&&ti!==9;var vn=E1,er=I1,$r=k1,Kr=L1,eh=M1,th=D1,tr=P1,oe=null,re=Fe({},[].concat(no(G_),no(Rf),no(Af),no(Ff),no(j_))),Kt=null,Pl=Fe({},[].concat(no(U_),no(Nf),no($_),no(ip))),xn=null,ir=null,ia=!0,qr=!0,Bn=!1,me=!1,nr=!1,Ml=!1,Dl=!1,or=!1,na=!1,ih=!0,oa=!1,nh=!0,P=!0,T=!1,E={},g=null,y=Fe({},["annotation-xml","audio","colgroup","desc","foreignobject","head","iframe","math","mi","mn","mo","ms","mtext","noembed","noframes","noscript","plaintext","script","style","svg","template","thead","title","video","xmp"]),C=null,x=Fe({},["audio","video","img","source","image","track"]),D=null,N=Fe({},["alt","class","for","id","label","name","pattern","placeholder","role","summary","title","value","style","xmlns"]),te="http://www.w3.org/1998/Math/MathML",Z="http://www.w3.org/2000/svg",ye="http://www.w3.org/1999/xhtml",be=ye,je=!1,Ie=null,ae=i.createElement("form"),gt=function(L){Ie&&Ie===L||((!L||(typeof L=="undefined"?"undefined":Xd(L))!=="object")&&(L={}),L=Ts(L),oe="ALLOWED_TAGS"in L?Fe({},L.ALLOWED_TAGS):re,Kt="ALLOWED_ATTR"in L?Fe({},L.ALLOWED_ATTR):Pl,D="ADD_URI_SAFE_ATTR"in L?Fe(Ts(N),L.ADD_URI_SAFE_ATTR):N,C="ADD_DATA_URI_TAGS"in L?Fe(Ts(x),L.ADD_DATA_URI_TAGS):x,g="FORBID_CONTENTS"in L?Fe({},L.FORBID_CONTENTS):y,xn="FORBID_TAGS"in L?Fe({},L.FORBID_TAGS):{},ir="FORBID_ATTR"in L?Fe({},L.FORBID_ATTR):{},E="USE_PROFILES"in L?L.USE_PROFILES:!1,ia=L.ALLOW_ARIA_ATTR!==!1,qr=L.ALLOW_DATA_ATTR!==!1,Bn=L.ALLOW_UNKNOWN_PROTOCOLS||!1,me=L.SAFE_FOR_TEMPLATES||!1,nr=L.WHOLE_DOCUMENT||!1,or=L.RETURN_DOM||!1,na=L.RETURN_DOM_FRAGMENT||!1,ih=L.RETURN_DOM_IMPORT!==!1,oa=L.RETURN_TRUSTED_TYPE||!1,Dl=L.FORCE_BODY||!1,nh=L.SANITIZE_DOM!==!1,P=L.KEEP_CONTENT!==!1,T=L.IN_PLACE||!1,tr=L.ALLOWED_URI_REGEXP||tr,be=L.NAMESPACE||ye,me&&(qr=!1),na&&(or=!0),E&&(oe=Fe({},[].concat(no(j_))),Kt=[],E.html===!0&&(Fe(oe,G_),Fe(Kt,U_)),E.svg===!0&&(Fe(oe,Rf),Fe(Kt,Nf),Fe(Kt,ip)),E.svgFilters===!0&&(Fe(oe,Af),Fe(Kt,Nf),Fe(Kt,ip)),E.mathMl===!0&&(Fe(oe,Ff),Fe(Kt,$_),Fe(Kt,ip))),L.ADD_TAGS&&(oe===re&&(oe=Ts(oe)),Fe(oe,L.ADD_TAGS)),L.ADD_ATTR&&(Kt===Pl&&(Kt=Ts(Kt)),Fe(Kt,L.ADD_ATTR)),L.ADD_URI_SAFE_ATTR&&Fe(D,L.ADD_URI_SAFE_ATTR),L.FORBID_CONTENTS&&(g===y&&(g=Ts(g)),Fe(g,L.FORBID_CONTENTS)),P&&(oe["#text"]=!0),nr&&Fe(oe,["html","head","body"]),oe.table&&(Fe(oe,["tbody"]),delete xn.tbody),Ei&&Ei(L),Ie=L)},at=Fe({},["mi","mo","mn","ms","mtext"]),ji=Fe({},["foreignobject","desc","title","annotation-xml"]),Je=Fe({},Rf);Fe(Je,Af),Fe(Je,w1);var kt=Fe({},Ff);Fe(kt,T1);var Xr=function(L){var Y=M(L);(!Y||!Y.tagName)&&(Y={namespaceURI:ye,tagName:"template"});var he=Es(L.tagName),Qe=Es(Y.tagName);if(L.namespaceURI===Z)return Y.namespaceURI===ye?he==="svg":Y.namespaceURI===te?he==="svg"&&(Qe==="annotation-xml"||at[Qe]):Boolean(Je[he]);if(L.namespaceURI===te)return Y.namespaceURI===ye?he==="math":Y.namespaceURI===Z?he==="math"&&ji[Qe]:Boolean(kt[he]);if(L.namespaceURI===ye){if(Y.namespaceURI===Z&&!ji[Qe]||Y.namespaceURI===te&&!at[Qe])return!1;var gi=Fe({},["title","style","font","a","script"]);return!kt[he]&&(gi[he]||!Je[he])}return!1},Li=function(L){qd(e.removed,{element:L});try{L.parentNode.removeChild(L)}catch(Y){try{L.outerHTML=ce}catch(he){L.remove()}}},Cn=function(L,Y){try{qd(e.removed,{attribute:Y.getAttributeNode(L),from:Y})}catch(he){qd(e.removed,{attribute:null,from:Y})}if(Y.removeAttribute(L),L==="is"&&!Kt[L])if(or||na)try{Li(Y)}catch(he){}else try{Y.setAttribute(L,"")}catch(he){}},rr=function(L){var Y=void 0,he=void 0;if(Dl)L="<remove></remove>"+L;else{var Qe=B_(L,/^[\r\n\t ]+/);he=Qe&&Qe[0]}var gi=V?V.createHTML(L):L;if(be===ye)try{Y=new m().parseFromString(gi,"text/html")}catch(yi){}if(!Y||!Y.documentElement){Y=It.createDocument(be,"template",null);try{Y.documentElement.innerHTML=je?"":gi}catch(yi){}}var fi=Y.body||Y.documentElement;return L&&he&&fi.insertBefore(i.createTextNode(he),fi.childNodes[0]||null),be===ye?nn.call(Y,nr?"html":"body")[0]:nr?Y.documentElement:fi},mo=function(L){return Wt.call(L.ownerDocument||L,L,l.SHOW_ELEMENT|l.SHOW_COMMENT|l.SHOW_TEXT,null,!1)},ra=function(L){return L instanceof h||L instanceof p?!1:typeof L.nodeName!="string"||typeof L.textContent!="string"||typeof L.removeChild!="function"||!(L.attributes instanceof d)||typeof L.removeAttribute!="function"||typeof L.setAttribute!="function"||typeof L.namespaceURI!="string"||typeof L.insertBefore!="function"},sr=function(L){return(typeof r=="undefined"?"undefined":Xd(r))==="object"?L instanceof r:L&&(typeof L=="undefined"?"undefined":Xd(L))==="object"&&typeof L.nodeType=="number"&&typeof L.nodeName=="string"},_n=function(L,Y,he){!mi[L]||v1(mi[L],function(Qe){Qe.call(e,Y,he,Ie)})},Rl=function(L){var Y=void 0;if(_n("beforeSanitizeElements",L,null),ra(L)||B_(L.nodeName,/[\u0080-\uFFFF]/))return Li(L),!0;var he=Es(L.nodeName);if(_n("uponSanitizeElement",L,{tagName:he,allowedTags:oe}),!sr(L.firstElementChild)&&(!sr(L.content)||!sr(L.content.firstElementChild))&&Oo(/<[/\w]/g,L.innerHTML)&&Oo(/<[/\w]/g,L.textContent)||he==="select"&&Oo(/<template/i,L.innerHTML))return Li(L),!0;if(!oe[he]||xn[he]){if(P&&!g[he]){var Qe=M(L)||L.parentNode,gi=A(L)||L.childNodes;if(gi&&Qe)for(var fi=gi.length,yi=fi-1;yi>=0;--yi)Qe.insertBefore(_(gi[yi],!0),w(L))}return Li(L),!0}return L instanceof a&&!Xr(L)||(he==="noscript"||he==="noembed")&&Oo(/<\/no(script|embed)/i,L.innerHTML)?(Li(L),!0):(me&&L.nodeType===3&&(Y=L.textContent,Y=Pr(Y,vn," "),Y=Pr(Y,er," "),L.textContent!==Y&&(qd(e.removed,{element:L.cloneNode()}),L.textContent=Y)),_n("afterSanitizeElements",L,null),!1)},oh=function(L,Y,he){if(nh&&(Y==="id"||Y==="name")&&(he in i||he in ae))return!1;if(!(qr&&!ir[Y]&&Oo($r,Y))){if(!(ia&&Oo(Kr,Y))){if(!Kt[Y]||ir[Y])return!1;if(!D[Y]){if(!Oo(tr,Pr(he,th,""))){if(!((Y==="src"||Y==="xlink:href"||Y==="href")&&L!=="script"&&x1(he,"data:")===0&&C[L])){if(!(Bn&&!Oo(eh,Pr(he,th,"")))){if(he)return!1}}}}}}return!0},qb=function(L){var Y=void 0,he=void 0,Qe=void 0,gi=void 0;_n("beforeSanitizeAttributes",L,null);var fi=L.attributes;if(!!fi){var yi={attrName:"",attrValue:"",keepAttr:!0,allowedAttributes:Kt};for(gi=fi.length;gi--;){Y=fi[gi];var go=Y,Al=go.name,Xb=go.namespaceURI;if(he=C1(Y.value),Qe=Es(Al),yi.attrName=Qe,yi.attrValue=he,yi.keepAttr=!0,yi.forceKeepAttr=void 0,_n("uponSanitizeAttribute",L,yi),he=yi.attrValue,!yi.forceKeepAttr&&(Cn(Al,L),!!yi.keepAttr)){if(Oo(/\/>/i,he)){Cn(Al,L);continue}me&&(he=Pr(he,vn," "),he=Pr(he,er," "));var iP=L.nodeName.toLowerCase();if(!!oh(iP,Qe,he))try{Xb?L.setAttributeNS(Xb,Al,he):L.setAttribute(Al,he),W_(e.removed)}catch(KA){}}}_n("afterSanitizeAttributes",L,null)}},tP=function Se(L){var Y=void 0,he=mo(L);for(_n("beforeSanitizeShadowDOM",L,null);Y=he.nextNode();)_n("uponSanitizeShadowNode",Y,null),!Rl(Y)&&(Y.content instanceof n&&Se(Y.content),qb(Y));_n("afterSanitizeShadowDOM",L,null)};return e.sanitize=function(Se,L){var Y=void 0,he=void 0,Qe=void 0,gi=void 0,fi=void 0;if(je=!Se,je&&(Se="<!-->"),typeof Se!="string"&&!sr(Se)){if(typeof Se.toString!="function")throw V_("toString is not a function");if(Se=Se.toString(),typeof Se!="string")throw V_("dirty is not a string, aborting")}if(!e.isSupported){if(Xd(s.toStaticHTML)==="object"||typeof s.toStaticHTML=="function"){if(typeof Se=="string")return s.toStaticHTML(Se);if(sr(Se))return s.toStaticHTML(Se.outerHTML)}return Se}if(Ml||gt(L),e.removed=[],typeof Se=="string"&&(T=!1),!T)if(Se instanceof r)Y=rr("<!---->"),he=Y.ownerDocument.importNode(Se,!0),he.nodeType===1&&he.nodeName==="BODY"||he.nodeName==="HTML"?Y=he:Y.appendChild(he);else{if(!or&&!me&&!nr&&Se.indexOf("<")===-1)return V&&oa?V.createHTML(Se):Se;if(Y=rr(Se),!Y)return or?null:ce}Y&&Dl&&Li(Y.firstChild);for(var yi=mo(T?Se:Y);Qe=yi.nextNode();)Qe.nodeType===3&&Qe===gi||Rl(Qe)||(Qe.content instanceof n&&tP(Qe.content),qb(Qe),gi=Qe);if(gi=null,T)return Se;if(or){if(na)for(fi=Bt.call(Y.ownerDocument);Y.firstChild;)fi.appendChild(Y.firstChild);else fi=Y;return ih&&(fi=Sn.call(t,fi,!0)),fi}var go=nr?Y.outerHTML:Y.innerHTML;return me&&(go=Pr(go,vn," "),go=Pr(go,er," ")),V&&oa?V.createHTML(go):go},e.setConfig=function(Se){gt(Se),Ml=!0},e.clearConfig=function(){Ie=null,Ml=!1},e.isValidAttribute=function(Se,L,Y){Ie||gt({});var he=Es(Se),Qe=Es(L);return oh(he,Qe,Y)},e.addHook=function(Se,L){typeof L=="function"&&(mi[Se]=mi[Se]||[],qd(mi[Se],L))},e.removeHook=function(Se){mi[Se]&&W_(mi[Se])},e.removeHooks=function(Se){mi[Se]&&(mi[Se]=[])},e.removeAllHooks=function(){mi={}},e}var oo=q_();var e4=oo.version,t4=oo.isSupported,X_=oo.sanitize,i4=oo.setConfig,n4=oo.clearConfig,o4=oo.isValidAttribute,Of=oo.addHook,Hf=oo.removeHook,r4=oo.removeHooks,s4=oo.removeAllHooks;iC();gP();ke();ut();Le();De();B();var Y_={};(function(){function s(e,t){t(Y_)}s.amd=!0,function(e,t){typeof exports=="object"&&typeof module!="undefined"?t(exports):typeof s=="function"&&s.amd?s(["exports"],t):(e=typeof globalThis!="undefined"?globalThis:e||self,t(e.marked={}))}(this,function(e){"use strict";function t(P,T){for(var E=0;E<T.length;E++){var g=T[E];g.enumerable=g.enumerable||!1,g.configurable=!0,"value"in g&&(g.writable=!0),Object.defineProperty(P,g.key,g)}}function i(P,T,E){return T&&t(P.prototype,T),E&&t(P,E),Object.defineProperty(P,"prototype",{writable:!1}),P}function n(P,T){if(!!P){if(typeof P=="string")return o(P,T);var E=Object.prototype.toString.call(P).slice(8,-1);if(E==="Object"&&P.constructor&&(E=P.constructor.name),E==="Map"||E==="Set")return Array.from(P);if(E==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(E))return o(P,T)}}function o(P,T){(T==null||T>P.length)&&(T=P.length);for(var E=0,g=new Array(T);E<T;E++)g[E]=P[E];return g}function r(P,T){var E=typeof Symbol!="undefined"&&P[Symbol.iterator]||P["@@iterator"];if(E)return(E=E.call(P)).next.bind(E);if(Array.isArray(P)||(E=n(P))||T&&P&&typeof P.length=="number"){E&&(P=E);var g=0;return function(){return g>=P.length?{done:!0}:{done:!1,value:P[g++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function a(){return{baseUrl:null,breaks:!1,extensions:null,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tokenizer:null,walkTokens:null,xhtml:!1}}e.defaults=a();function l(P){e.defaults=P}var c=/[&<>"']/,d=/[&<>"']/g,h=/[<>"']|&(?!#?\w+;)/,p=/[<>"']|&(?!#?\w+;)/g,m={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},f=function(T){return m[T]};function v(P,T){if(T){if(c.test(P))return P.replace(d,f)}else if(h.test(P))return P.replace(p,f);return P}var _=/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig;function w(P){return P.replace(_,function(T,E){return E=E.toLowerCase(),E==="colon"?":":E.charAt(0)==="#"?E.charAt(1)==="x"?String.fromCharCode(parseInt(E.substring(2),16)):String.fromCharCode(+E.substring(1)):""})}var A=/(^|[^\[])\^/g;function M(P,T){P=P.source||P,T=T||"";var E={replace:function(y,C){return C=C.source||C,C=C.replace(A,"$1"),P=P.replace(y,C),E},getRegex:function(){return new RegExp(P,T)}};return E}var j=/[^\w:]/g,V=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;function ce(P,T,E){if(P){var g;try{g=decodeURIComponent(w(E)).replace(j,"").toLowerCase()}catch(y){return null}if(g.indexOf("javascript:")===0||g.indexOf("vbscript:")===0||g.indexOf("data:")===0)return null}T&&!V.test(E)&&(E=nn(T,E));try{E=encodeURI(E).replace(/%25/g,"%")}catch(y){return null}return E}var Te={},It=/^[^:]+:\/*[^/]*$/,Wt=/^([^:]+:)[\s\S]*$/,Bt=/^([^:]+:\/*[^/]*)[\s\S]*$/;function nn(P,T){Te[" "+P]||(It.test(P)?Te[" "+P]=P+"/":Te[" "+P]=vn(P,"/",!0)),P=Te[" "+P];var E=P.indexOf(":")===-1;return T.substring(0,2)==="//"?E?T:P.replace(Wt,"$1")+T:T.charAt(0)==="/"?E?T:P.replace(Bt,"$1")+T:P+T}var Sn={exec:function(){}};function ti(P){for(var T=1,E,g;T<arguments.length;T++){E=arguments[T];for(g in E)Object.prototype.hasOwnProperty.call(E,g)&&(P[g]=E[g])}return P}function mi(P,T){var E=P.replace(/\|/g,function(C,x,D){for(var N=!1,te=x;--te>=0&&D[te]==="\\";)N=!N;return N?"|":" |"}),g=E.split(/ \|/),y=0;if(g[0].trim()||g.shift(),g[g.length-1].trim()||g.pop(),g.length>T)g.splice(T);else for(;g.length<T;)g.push("");for(;y<g.length;y++)g[y]=g[y].trim().replace(/\\\|/g,"|");return g}function vn(P,T,E){var g=P.length;if(g===0)return"";for(var y=0;y<g;){var C=P.charAt(g-y-1);if(C===T&&!E)y++;else if(C!==T&&E)y++;else break}return P.substr(0,g-y)}function er(P,T){if(P.indexOf(T[1])===-1)return-1;for(var E=P.length,g=0,y=0;y<E;y++)if(P[y]==="\\")y++;else if(P[y]===T[0])g++;else if(P[y]===T[1]&&(g--,g<0))return y;return-1}function $r(P){P&&P.sanitize&&!P.silent&&console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options")}function Kr(P,T){if(T<1)return"";for(var E="";T>1;)T&1&&(E+=P),T>>=1,P+=P;return E+P}function eh(P,T,E,g){var y=T.href,C=T.title?v(T.title):null,x=P[1].replace(/\\([\[\]])/g,"$1");if(P[0].charAt(0)!=="!"){g.state.inLink=!0;var D={type:"link",raw:E,href:y,title:C,text:x,tokens:g.inlineTokens(x,[])};return g.state.inLink=!1,D}else return{type:"image",raw:E,href:y,title:C,text:v(x)}}function th(P,T){var E=P.match(/^(\s+)(?:```)/);if(E===null)return T;var g=E[1];return T.split(`
`).map(function(y){var C=y.match(/^\s+/);if(C===null)return y;var x=C[0];return x.length>=g.length?y.slice(g.length):y}).join(`
`)}var tr=function(){function P(E){this.options=E||e.defaults}var T=P.prototype;return T.space=function(g){var y=this.rules.block.newline.exec(g);if(y&&y[0].length>0)return{type:"space",raw:y[0]}},T.code=function(g){var y=this.rules.block.code.exec(g);if(y){var C=y[0].replace(/^ {1,4}/gm,"");return{type:"code",raw:y[0],codeBlockStyle:"indented",text:this.options.pedantic?C:vn(C,`
`)}}},T.fences=function(g){var y=this.rules.block.fences.exec(g);if(y){var C=y[0],x=th(C,y[3]||"");return{type:"code",raw:C,lang:y[2]?y[2].trim():y[2],text:x}}},T.heading=function(g){var y=this.rules.block.heading.exec(g);if(y){var C=y[2].trim();if(/#$/.test(C)){var x=vn(C,"#");(this.options.pedantic||!x||/ $/.test(x))&&(C=x.trim())}var D={type:"heading",raw:y[0],depth:y[1].length,text:C,tokens:[]};return this.lexer.inline(D.text,D.tokens),D}},T.hr=function(g){var y=this.rules.block.hr.exec(g);if(y)return{type:"hr",raw:y[0]}},T.blockquote=function(g){var y=this.rules.block.blockquote.exec(g);if(y){var C=y[0].replace(/^ *> ?/gm,"");return{type:"blockquote",raw:y[0],tokens:this.lexer.blockTokens(C,[]),text:C}}},T.list=function(g){var y=this.rules.block.list.exec(g);if(y){var C,x,D,N,te,Z,ye,be,je,Ie,ae,gt,at=y[1].trim(),ji=at.length>1,Je={type:"list",raw:"",ordered:ji,start:ji?+at.slice(0,-1):"",loose:!1,items:[]};at=ji?"\\d{1,9}\\"+at.slice(-1):"\\"+at,this.options.pedantic&&(at=ji?at:"[*+-]");for(var kt=new RegExp("^( {0,3}"+at+")((?: [^\\n]*)?(?:\\n|$))");g&&(gt=!1,!(!(y=kt.exec(g))||this.rules.block.hr.test(g)));){if(C=y[0],g=g.substring(C.length),be=y[2].split(`
`,1)[0],je=g.split(`
`,1)[0],this.options.pedantic?(N=2,ae=be.trimLeft()):(N=y[2].search(/[^ ]/),N=N>4?1:N,ae=be.slice(N),N+=y[1].length),Z=!1,!be&&/^ *$/.test(je)&&(C+=je+`
`,g=g.substring(je.length+1),gt=!0),!gt)for(var Xr=new RegExp("^ {0,"+Math.min(3,N-1)+"}(?:[*+-]|\\d{1,9}[.)])");g&&(Ie=g.split(`
`,1)[0],be=Ie,this.options.pedantic&&(be=be.replace(/^ {1,4}(?=( {4})*[^ ])/g,"  ")),!Xr.test(be));){if(be.search(/[^ ]/)>=N||!be.trim())ae+=`
`+be.slice(N);else if(!Z)ae+=`
`+be;else break;!Z&&!be.trim()&&(Z=!0),C+=Ie+`
`,g=g.substring(Ie.length+1)}Je.loose||(ye?Je.loose=!0:/\n *\n *$/.test(C)&&(ye=!0)),this.options.gfm&&(x=/^\[[ xX]\] /.exec(ae),x&&(D=x[0]!=="[ ] ",ae=ae.replace(/^\[[ xX]\] +/,""))),Je.items.push({type:"list_item",raw:C,task:!!x,checked:D,loose:!1,text:ae}),Je.raw+=C}Je.items[Je.items.length-1].raw=C.trimRight(),Je.items[Je.items.length-1].text=ae.trimRight(),Je.raw=Je.raw.trimRight();var Li=Je.items.length;for(te=0;te<Li;te++){this.lexer.state.top=!1,Je.items[te].tokens=this.lexer.blockTokens(Je.items[te].text,[]);var Cn=Je.items[te].tokens.filter(function(mo){return mo.type==="space"}),rr=Cn.every(function(mo){for(var ra=mo.raw.split(""),sr=0,_n=r(ra),Rl;!(Rl=_n()).done;){var oh=Rl.value;if(oh===`
`&&(sr+=1),sr>1)return!0}return!1});!Je.loose&&Cn.length&&rr&&(Je.loose=!0,Je.items[te].loose=!0)}return Je}},T.html=function(g){var y=this.rules.block.html.exec(g);if(y){var C={type:"html",raw:y[0],pre:!this.options.sanitizer&&(y[1]==="pre"||y[1]==="script"||y[1]==="style"),text:y[0]};return this.options.sanitize&&(C.type="paragraph",C.text=this.options.sanitizer?this.options.sanitizer(y[0]):v(y[0]),C.tokens=[],this.lexer.inline(C.text,C.tokens)),C}},T.def=function(g){var y=this.rules.block.def.exec(g);if(y){y[3]&&(y[3]=y[3].substring(1,y[3].length-1));var C=y[1].toLowerCase().replace(/\s+/g," ");return{type:"def",tag:C,raw:y[0],href:y[2],title:y[3]}}},T.table=function(g){var y=this.rules.block.table.exec(g);if(y){var C={type:"table",header:mi(y[1]).map(function(ye){return{text:ye}}),align:y[2].replace(/^ *|\| *$/g,"").split(/ *\| */),rows:y[3]?y[3].replace(/\n[ \t]*$/,"").split(`
`):[]};if(C.header.length===C.align.length){C.raw=y[0];var x=C.align.length,D,N,te,Z;for(D=0;D<x;D++)/^ *-+: *$/.test(C.align[D])?C.align[D]="right":/^ *:-+: *$/.test(C.align[D])?C.align[D]="center":/^ *:-+ *$/.test(C.align[D])?C.align[D]="left":C.align[D]=null;for(x=C.rows.length,D=0;D<x;D++)C.rows[D]=mi(C.rows[D],C.header.length).map(function(ye){return{text:ye}});for(x=C.header.length,N=0;N<x;N++)C.header[N].tokens=[],this.lexer.inlineTokens(C.header[N].text,C.header[N].tokens);for(x=C.rows.length,N=0;N<x;N++)for(Z=C.rows[N],te=0;te<Z.length;te++)Z[te].tokens=[],this.lexer.inlineTokens(Z[te].text,Z[te].tokens);return C}}},T.lheading=function(g){var y=this.rules.block.lheading.exec(g);if(y){var C={type:"heading",raw:y[0],depth:y[2].charAt(0)==="="?1:2,text:y[1],tokens:[]};return this.lexer.inline(C.text,C.tokens),C}},T.paragraph=function(g){var y=this.rules.block.paragraph.exec(g);if(y){var C={type:"paragraph",raw:y[0],text:y[1].charAt(y[1].length-1)===`
`?y[1].slice(0,-1):y[1],tokens:[]};return this.lexer.inline(C.text,C.tokens),C}},T.text=function(g){var y=this.rules.block.text.exec(g);if(y){var C={type:"text",raw:y[0],text:y[0],tokens:[]};return this.lexer.inline(C.text,C.tokens),C}},T.escape=function(g){var y=this.rules.inline.escape.exec(g);if(y)return{type:"escape",raw:y[0],text:v(y[1])}},T.tag=function(g){var y=this.rules.inline.tag.exec(g);if(y)return!this.lexer.state.inLink&&/^<a /i.test(y[0])?this.lexer.state.inLink=!0:this.lexer.state.inLink&&/^<\/a>/i.test(y[0])&&(this.lexer.state.inLink=!1),!this.lexer.state.inRawBlock&&/^<(pre|code|kbd|script)(\s|>)/i.test(y[0])?this.lexer.state.inRawBlock=!0:this.lexer.state.inRawBlock&&/^<\/(pre|code|kbd|script)(\s|>)/i.test(y[0])&&(this.lexer.state.inRawBlock=!1),{type:this.options.sanitize?"text":"html",raw:y[0],inLink:this.lexer.state.inLink,inRawBlock:this.lexer.state.inRawBlock,text:this.options.sanitize?this.options.sanitizer?this.options.sanitizer(y[0]):v(y[0]):y[0]}},T.link=function(g){var y=this.rules.inline.link.exec(g);if(y){var C=y[2].trim();if(!this.options.pedantic&&/^</.test(C)){if(!/>$/.test(C))return;var x=vn(C.slice(0,-1),"\\");if((C.length-x.length)%2===0)return}else{var D=er(y[2],"()");if(D>-1){var N=y[0].indexOf("!")===0?5:4,te=N+y[1].length+D;y[2]=y[2].substring(0,D),y[0]=y[0].substring(0,te).trim(),y[3]=""}}var Z=y[2],ye="";if(this.options.pedantic){var be=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(Z);be&&(Z=be[1],ye=be[3])}else ye=y[3]?y[3].slice(1,-1):"";return Z=Z.trim(),/^</.test(Z)&&(this.options.pedantic&&!/>$/.test(C)?Z=Z.slice(1):Z=Z.slice(1,-1)),eh(y,{href:Z&&Z.replace(this.rules.inline._escapes,"$1"),title:ye&&ye.replace(this.rules.inline._escapes,"$1")},y[0],this.lexer)}},T.reflink=function(g,y){var C;if((C=this.rules.inline.reflink.exec(g))||(C=this.rules.inline.nolink.exec(g))){var x=(C[2]||C[1]).replace(/\s+/g," ");if(x=y[x.toLowerCase()],!x||!x.href){var D=C[0].charAt(0);return{type:"text",raw:D,text:D}}return eh(C,x,C[0],this.lexer)}},T.emStrong=function(g,y,C){C===void 0&&(C="");var x=this.rules.inline.emStrong.lDelim.exec(g);if(!!x&&!(x[3]&&C.match(/(?:[0-9A-Za-z\xAA\xB2\xB3\xB5\xB9\xBA\xBC-\xBE\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u0660-\u0669\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07C0-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0966-\u096F\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09E6-\u09F1\u09F4-\u09F9\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A66-\u0A6F\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AE6-\u0AEF\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B66-\u0B6F\u0B71-\u0B77\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0BE6-\u0BF2\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C66-\u0C6F\u0C78-\u0C7E\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CE6-\u0CEF\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D58-\u0D61\u0D66-\u0D78\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DE6-\u0DEF\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F20-\u0F33\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F-\u1049\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u1090-\u1099\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1369-\u137C\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A16\u1A20-\u1A54\u1A80-\u1A89\u1A90-\u1A99\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B50-\u1B59\u1B83-\u1BA0\u1BAE-\u1BE5\u1C00-\u1C23\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2070\u2071\u2074-\u2079\u207F-\u2089\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2150-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2CFD\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u3192-\u3195\u31A0-\u31BF\u31F0-\u31FF\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA830-\uA835\uA840-\uA873\uA882-\uA8B3\uA8D0-\uA8D9\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA900-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF-\uA9D9\uA9E0-\uA9E4\uA9E6-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA50-\uAA59\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD07-\uDD33\uDD40-\uDD78\uDD8A\uDD8B\uDE80-\uDE9C\uDEA0-\uDED0\uDEE1-\uDEFB\uDF00-\uDF23\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC58-\uDC76\uDC79-\uDC9E\uDCA7-\uDCAF\uDCE0-\uDCF2\uDCF4\uDCF5\uDCFB-\uDD1B\uDD20-\uDD39\uDD80-\uDDB7\uDDBC-\uDDCF\uDDD2-\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE40-\uDE48\uDE60-\uDE7E\uDE80-\uDE9F\uDEC0-\uDEC7\uDEC9-\uDEE4\uDEEB-\uDEEF\uDF00-\uDF35\uDF40-\uDF55\uDF58-\uDF72\uDF78-\uDF91\uDFA9-\uDFAF]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDCFA-\uDD23\uDD30-\uDD39\uDE60-\uDE7E\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF27\uDF30-\uDF45\uDF51-\uDF54\uDF70-\uDF81\uDFB0-\uDFCB\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC52-\uDC6F\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD03-\uDD26\uDD36-\uDD3F\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDD0-\uDDDA\uDDDC\uDDE1-\uDDF4\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDEF0-\uDEF9\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC50-\uDC59\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE50-\uDE59\uDE80-\uDEAA\uDEB8\uDEC0-\uDEC9\uDF00-\uDF1A\uDF30-\uDF3B\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCF2\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDD50-\uDD59\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC50-\uDC6C\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD50-\uDD59\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDDA0-\uDDA9\uDEE0-\uDEF2\uDFB0\uDFC0-\uDFD4]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDE70-\uDEBE\uDEC0-\uDEC9\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF50-\uDF59\uDF5B-\uDF61\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE96\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD834[\uDEE0-\uDEF3\uDF60-\uDF78]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD837[\uDF00-\uDF1E]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD40-\uDD49\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB\uDEF0-\uDEF9]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDCC7-\uDCCF\uDD00-\uDD43\uDD4B\uDD50-\uDD59]|\uD83B[\uDC71-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDCB4\uDD01-\uDD2D\uDD2F-\uDD3D\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD83C[\uDD00-\uDD0C]|\uD83E[\uDFF0-\uDFF9]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])/))){var D=x[1]||x[2]||"";if(!D||D&&(C===""||this.rules.inline.punctuation.exec(C))){var N=x[0].length-1,te,Z,ye=N,be=0,je=x[0][0]==="*"?this.rules.inline.emStrong.rDelimAst:this.rules.inline.emStrong.rDelimUnd;for(je.lastIndex=0,y=y.slice(-1*g.length+N);(x=je.exec(y))!=null;)if(te=x[1]||x[2]||x[3]||x[4]||x[5]||x[6],!!te){if(Z=te.length,x[3]||x[4]){ye+=Z;continue}else if((x[5]||x[6])&&N%3&&!((N+Z)%3)){be+=Z;continue}if(ye-=Z,!(ye>0)){if(Z=Math.min(Z,Z+ye+be),Math.min(N,Z)%2){var Ie=g.slice(1,N+x.index+Z);return{type:"em",raw:g.slice(0,N+x.index+Z+1),text:Ie,tokens:this.lexer.inlineTokens(Ie,[])}}var ae=g.slice(2,N+x.index+Z-1);return{type:"strong",raw:g.slice(0,N+x.index+Z+1),text:ae,tokens:this.lexer.inlineTokens(ae,[])}}}}}},T.codespan=function(g){var y=this.rules.inline.code.exec(g);if(y){var C=y[2].replace(/\n/g," "),x=/[^ ]/.test(C),D=/^ /.test(C)&&/ $/.test(C);return x&&D&&(C=C.substring(1,C.length-1)),C=v(C,!0),{type:"codespan",raw:y[0],text:C}}},T.br=function(g){var y=this.rules.inline.br.exec(g);if(y)return{type:"br",raw:y[0]}},T.del=function(g){var y=this.rules.inline.del.exec(g);if(y)return{type:"del",raw:y[0],text:y[2],tokens:this.lexer.inlineTokens(y[2],[])}},T.autolink=function(g,y){var C=this.rules.inline.autolink.exec(g);if(C){var x,D;return C[2]==="@"?(x=v(this.options.mangle?y(C[1]):C[1]),D="mailto:"+x):(x=v(C[1]),D=x),{type:"link",raw:C[0],text:x,href:D,tokens:[{type:"text",raw:x,text:x}]}}},T.url=function(g,y){var C;if(C=this.rules.inline.url.exec(g)){var x,D;if(C[2]==="@")x=v(this.options.mangle?y(C[0]):C[0]),D="mailto:"+x;else{var N;do N=C[0],C[0]=this.rules.inline._backpedal.exec(C[0])[0];while(N!==C[0]);x=v(C[0]),C[1]==="www."?D="http://"+x:D=x}return{type:"link",raw:C[0],text:x,href:D,tokens:[{type:"text",raw:x,text:x}]}}},T.inlineText=function(g,y){var C=this.rules.inline.text.exec(g);if(C){var x;return this.lexer.state.inRawBlock?x=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(C[0]):v(C[0]):C[0]:x=v(this.options.smartypants?y(C[0]):C[0]),{type:"text",raw:C[0],text:x}}},P}(),oe={newline:/^(?: *(?:\n|$))+/,code:/^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,fences:/^ {0,3}(`{3,}(?=[^`\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?=\n|$)|$)/,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,heading:/^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( {0,3}bull)( [^\n]+?)?(?:\n|$)/,html:"^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))",def:/^ {0,3}\[(label)\]: *(?:\n *)?<?([^\s>]+)>?(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/,table:Sn,lheading:/^([^\n]+)\n {0,3}(=+|-+) *(?:\n+|$)/,_paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,text:/^[^\n]+/};oe._label=/(?!\s*\])(?:\\.|[^\[\]\\])+/,oe._title=/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/,oe.def=M(oe.def).replace("label",oe._label).replace("title",oe._title).getRegex(),oe.bullet=/(?:[*+-]|\d{1,9}[.)])/,oe.listItemStart=M(/^( *)(bull) */).replace("bull",oe.bullet).getRegex(),oe.list=M(oe.list).replace(/bull/g,oe.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+oe.def.source+")").getRegex(),oe._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",oe._comment=/<!--(?!-?>)[\s\S]*?(?:-->|$)/,oe.html=M(oe.html,"i").replace("comment",oe._comment).replace("tag",oe._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),oe.paragraph=M(oe._paragraph).replace("hr",oe.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("|table","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",oe._tag).getRegex(),oe.blockquote=M(oe.blockquote).replace("paragraph",oe.paragraph).getRegex(),oe.normal=ti({},oe),oe.gfm=ti({},oe.normal,{table:"^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)(?:\\| *)?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"}),oe.gfm.table=M(oe.gfm.table).replace("hr",oe.hr).replace("heading"," {0,3}#{1,6} ").replace("blockquote"," {0,3}>").replace("code"," {4}[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",oe._tag).getRegex(),oe.gfm.paragraph=M(oe._paragraph).replace("hr",oe.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("table",oe.gfm.table).replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",oe._tag).getRegex(),oe.pedantic=ti({},oe.normal,{html:M(`^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`).replace("comment",oe._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^(#{1,6})(.*)(?:\n+|$)/,fences:Sn,paragraph:M(oe.normal._paragraph).replace("hr",oe.hr).replace("heading",` *#{1,6} *[^
]`).replace("lheading",oe.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").getRegex()});var re={escape:/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:Sn,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(ref)\]/,nolink:/^!?\[(ref)\](?:\[\])?/,reflinkSearch:"reflink|nolink(?!\\()",emStrong:{lDelim:/^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,rDelimAst:/^[^_*]*?\_\_[^_*]*?\*[^_*]*?(?=\_\_)|[punct_](\*+)(?=[\s]|$)|[^punct*_\s](\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|[^punct*_\s](\*+)(?=[^punct*_\s])/,rDelimUnd:/^[^_*]*?\*\*[^_*]*?\_[^_*]*?(?=\*\*)|[punct*](\_+)(?=[\s]|$)|[^punct*_\s](\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/},code:/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,br:/^( {2,}|\\)\n(?!\s*$)/,del:Sn,text:/^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,punctuation:/^([\spunctuation])/};re._punctuation="!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~",re.punctuation=M(re.punctuation).replace(/punctuation/g,re._punctuation).getRegex(),re.blockSkip=/\[[^\]]*?\]\([^\)]*?\)|`[^`]*?`|<[^>]*?>/g,re.escapedEmSt=/\\\*|\\_/g,re._comment=M(oe._comment).replace("(?:-->|$)","-->").getRegex(),re.emStrong.lDelim=M(re.emStrong.lDelim).replace(/punct/g,re._punctuation).getRegex(),re.emStrong.rDelimAst=M(re.emStrong.rDelimAst,"g").replace(/punct/g,re._punctuation).getRegex(),re.emStrong.rDelimUnd=M(re.emStrong.rDelimUnd,"g").replace(/punct/g,re._punctuation).getRegex(),re._escapes=/\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g,re._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,re._email=/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,re.autolink=M(re.autolink).replace("scheme",re._scheme).replace("email",re._email).getRegex(),re._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,re.tag=M(re.tag).replace("comment",re._comment).replace("attribute",re._attribute).getRegex(),re._label=/(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,re._href=/<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/,re._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,re.link=M(re.link).replace("label",re._label).replace("href",re._href).replace("title",re._title).getRegex(),re.reflink=M(re.reflink).replace("label",re._label).replace("ref",oe._label).getRegex(),re.nolink=M(re.nolink).replace("ref",oe._label).getRegex(),re.reflinkSearch=M(re.reflinkSearch,"g").replace("reflink",re.reflink).replace("nolink",re.nolink).getRegex(),re.normal=ti({},re),re.pedantic=ti({},re.normal,{strong:{start:/^__|\*\*/,middle:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,endAst:/\*\*(?!\*)/g,endUnd:/__(?!_)/g},em:{start:/^_|\*/,middle:/^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,endAst:/\*(?!\*)/g,endUnd:/_(?!_)/g},link:M(/^!?\[(label)\]\((.*?)\)/).replace("label",re._label).getRegex(),reflink:M(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",re._label).getRegex()}),re.gfm=ti({},re.normal,{escape:M(re.escape).replace("])","~|])").getRegex(),_extended_email:/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,url:/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,_backpedal:/(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/}),re.gfm.url=M(re.gfm.url,"i").replace("email",re.gfm._extended_email).getRegex(),re.breaks=ti({},re.gfm,{br:M(re.br).replace("{2,}","*").getRegex(),text:M(re.gfm.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()});function Kt(P){return P.replace(/---/g,"\u2014").replace(/--/g,"\u2013").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1\u2018").replace(/'/g,"\u2019").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1\u201C").replace(/"/g,"\u201D").replace(/\.{3}/g,"\u2026")}function Pl(P){var T="",E,g,y=P.length;for(E=0;E<y;E++)g=P.charCodeAt(E),Math.random()>.5&&(g="x"+g.toString(16)),T+="&#"+g+";";return T}var xn=function(){function P(E){this.tokens=[],this.tokens.links=Object.create(null),this.options=E||e.defaults,this.options.tokenizer=this.options.tokenizer||new tr,this.tokenizer=this.options.tokenizer,this.tokenizer.options=this.options,this.tokenizer.lexer=this,this.inlineQueue=[],this.state={inLink:!1,inRawBlock:!1,top:!0};var g={block:oe.normal,inline:re.normal};this.options.pedantic?(g.block=oe.pedantic,g.inline=re.pedantic):this.options.gfm&&(g.block=oe.gfm,this.options.breaks?g.inline=re.breaks:g.inline=re.gfm),this.tokenizer.rules=g}P.lex=function(g,y){var C=new P(y);return C.lex(g)},P.lexInline=function(g,y){var C=new P(y);return C.inlineTokens(g)};var T=P.prototype;return T.lex=function(g){g=g.replace(/\r\n|\r/g,`
`).replace(/\t/g,"    "),this.blockTokens(g,this.tokens);for(var y;y=this.inlineQueue.shift();)this.inlineTokens(y.src,y.tokens);return this.tokens},T.blockTokens=function(g,y){var C=this;y===void 0&&(y=[]),this.options.pedantic&&(g=g.replace(/^ +$/gm,""));for(var x,D,N,te;g;)if(!(this.options.extensions&&this.options.extensions.block&&this.options.extensions.block.some(function(ye){return(x=ye.call({lexer:C},g,y))?(g=g.substring(x.raw.length),y.push(x),!0):!1}))){if(x=this.tokenizer.space(g)){g=g.substring(x.raw.length),x.raw.length===1&&y.length>0?y[y.length-1].raw+=`
`:y.push(x);continue}if(x=this.tokenizer.code(g)){g=g.substring(x.raw.length),D=y[y.length-1],D&&(D.type==="paragraph"||D.type==="text")?(D.raw+=`
`+x.raw,D.text+=`
`+x.text,this.inlineQueue[this.inlineQueue.length-1].src=D.text):y.push(x);continue}if(x=this.tokenizer.fences(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.heading(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.hr(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.blockquote(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.list(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.html(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.def(g)){g=g.substring(x.raw.length),D=y[y.length-1],D&&(D.type==="paragraph"||D.type==="text")?(D.raw+=`
`+x.raw,D.text+=`
`+x.raw,this.inlineQueue[this.inlineQueue.length-1].src=D.text):this.tokens.links[x.tag]||(this.tokens.links[x.tag]={href:x.href,title:x.title});continue}if(x=this.tokenizer.table(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.lheading(g)){g=g.substring(x.raw.length),y.push(x);continue}if(N=g,this.options.extensions&&this.options.extensions.startBlock&&function(){var ye=1/0,be=g.slice(1),je=void 0;C.options.extensions.startBlock.forEach(function(Ie){je=Ie.call({lexer:this},be),typeof je=="number"&&je>=0&&(ye=Math.min(ye,je))}),ye<1/0&&ye>=0&&(N=g.substring(0,ye+1))}(),this.state.top&&(x=this.tokenizer.paragraph(N))){D=y[y.length-1],te&&D.type==="paragraph"?(D.raw+=`
`+x.raw,D.text+=`
`+x.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=D.text):y.push(x),te=N.length!==g.length,g=g.substring(x.raw.length);continue}if(x=this.tokenizer.text(g)){g=g.substring(x.raw.length),D=y[y.length-1],D&&D.type==="text"?(D.raw+=`
`+x.raw,D.text+=`
`+x.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=D.text):y.push(x);continue}if(g){var Z="Infinite loop on byte: "+g.charCodeAt(0);if(this.options.silent){console.error(Z);break}else throw new Error(Z)}}return this.state.top=!0,y},T.inline=function(g,y){this.inlineQueue.push({src:g,tokens:y})},T.inlineTokens=function(g,y){var C=this;y===void 0&&(y=[]);var x,D,N,te=g,Z,ye,be;if(this.tokens.links){var je=Object.keys(this.tokens.links);if(je.length>0)for(;(Z=this.tokenizer.rules.inline.reflinkSearch.exec(te))!=null;)je.includes(Z[0].slice(Z[0].lastIndexOf("[")+1,-1))&&(te=te.slice(0,Z.index)+"["+Kr("a",Z[0].length-2)+"]"+te.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))}for(;(Z=this.tokenizer.rules.inline.blockSkip.exec(te))!=null;)te=te.slice(0,Z.index)+"["+Kr("a",Z[0].length-2)+"]"+te.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);for(;(Z=this.tokenizer.rules.inline.escapedEmSt.exec(te))!=null;)te=te.slice(0,Z.index)+"++"+te.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);for(;g;)if(ye||(be=""),ye=!1,!(this.options.extensions&&this.options.extensions.inline&&this.options.extensions.inline.some(function(ae){return(x=ae.call({lexer:C},g,y))?(g=g.substring(x.raw.length),y.push(x),!0):!1}))){if(x=this.tokenizer.escape(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.tag(g)){g=g.substring(x.raw.length),D=y[y.length-1],D&&x.type==="text"&&D.type==="text"?(D.raw+=x.raw,D.text+=x.text):y.push(x);continue}if(x=this.tokenizer.link(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.reflink(g,this.tokens.links)){g=g.substring(x.raw.length),D=y[y.length-1],D&&x.type==="text"&&D.type==="text"?(D.raw+=x.raw,D.text+=x.text):y.push(x);continue}if(x=this.tokenizer.emStrong(g,te,be)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.codespan(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.br(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.del(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.autolink(g,Pl)){g=g.substring(x.raw.length),y.push(x);continue}if(!this.state.inLink&&(x=this.tokenizer.url(g,Pl))){g=g.substring(x.raw.length),y.push(x);continue}if(N=g,this.options.extensions&&this.options.extensions.startInline&&function(){var ae=1/0,gt=g.slice(1),at=void 0;C.options.extensions.startInline.forEach(function(ji){at=ji.call({lexer:this},gt),typeof at=="number"&&at>=0&&(ae=Math.min(ae,at))}),ae<1/0&&ae>=0&&(N=g.substring(0,ae+1))}(),x=this.tokenizer.inlineText(N,Kt)){g=g.substring(x.raw.length),x.raw.slice(-1)!=="_"&&(be=x.raw.slice(-1)),ye=!0,D=y[y.length-1],D&&D.type==="text"?(D.raw+=x.raw,D.text+=x.text):y.push(x);continue}if(g){var Ie="Infinite loop on byte: "+g.charCodeAt(0);if(this.options.silent){console.error(Ie);break}else throw new Error(Ie)}}return y},i(P,null,[{key:"rules",get:function(){return{block:oe,inline:re}}}]),P}(),ir=function(){function P(E){this.options=E||e.defaults}var T=P.prototype;return T.code=function(g,y,C){var x=(y||"").match(/\S*/)[0];if(this.options.highlight){var D=this.options.highlight(g,x);D!=null&&D!==g&&(C=!0,g=D)}return g=g.replace(/\n$/,"")+`
`,x?'<pre><code class="'+this.options.langPrefix+v(x,!0)+'">'+(C?g:v(g,!0))+`</code></pre>
`:"<pre><code>"+(C?g:v(g,!0))+`</code></pre>
`},T.blockquote=function(g){return`<blockquote>
`+g+`</blockquote>
`},T.html=function(g){return g},T.heading=function(g,y,C,x){return this.options.headerIds?"<h"+y+' id="'+this.options.headerPrefix+x.slug(C)+'">'+g+"</h"+y+`>
`:"<h"+y+">"+g+"</h"+y+`>
`},T.hr=function(){return this.options.xhtml?`<hr/>
`:`<hr>
`},T.list=function(g,y,C){var x=y?"ol":"ul",D=y&&C!==1?' start="'+C+'"':"";return"<"+x+D+`>
`+g+"</"+x+`>
`},T.listitem=function(g){return"<li>"+g+`</li>
`},T.checkbox=function(g){return"<input "+(g?'checked="" ':"")+'disabled="" type="checkbox"'+(this.options.xhtml?" /":"")+"> "},T.paragraph=function(g){return"<p>"+g+`</p>
`},T.table=function(g,y){return y&&(y="<tbody>"+y+"</tbody>"),`<table>
<thead>
`+g+`</thead>
`+y+`</table>
`},T.tablerow=function(g){return`<tr>
`+g+`</tr>
`},T.tablecell=function(g,y){var C=y.header?"th":"td",x=y.align?"<"+C+' align="'+y.align+'">':"<"+C+">";return x+g+"</"+C+`>
`},T.strong=function(g){return"<strong>"+g+"</strong>"},T.em=function(g){return"<em>"+g+"</em>"},T.codespan=function(g){return"<code>"+g+"</code>"},T.br=function(){return this.options.xhtml?"<br/>":"<br>"},T.del=function(g){return"<del>"+g+"</del>"},T.link=function(g,y,C){if(g=ce(this.options.sanitize,this.options.baseUrl,g),g===null)return C;var x='<a href="'+v(g)+'"';return y&&(x+=' title="'+y+'"'),x+=">"+C+"</a>",x},T.image=function(g,y,C){if(g=ce(this.options.sanitize,this.options.baseUrl,g),g===null)return C;var x='<img src="'+g+'" alt="'+C+'"';return y&&(x+=' title="'+y+'"'),x+=this.options.xhtml?"/>":">",x},T.text=function(g){return g},P}(),ia=function(){function P(){}var T=P.prototype;return T.strong=function(g){return g},T.em=function(g){return g},T.codespan=function(g){return g},T.del=function(g){return g},T.html=function(g){return g},T.text=function(g){return g},T.link=function(g,y,C){return""+C},T.image=function(g,y,C){return""+C},T.br=function(){return""},P}(),qr=function(){function P(){this.seen={}}var T=P.prototype;return T.serialize=function(g){return g.toLowerCase().trim().replace(/<[!\/a-z].*?>/ig,"").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g,"").replace(/\s/g,"-")},T.getNextSafeSlug=function(g,y){var C=g,x=0;if(this.seen.hasOwnProperty(C)){x=this.seen[g];do x++,C=g+"-"+x;while(this.seen.hasOwnProperty(C))}return y||(this.seen[g]=x,this.seen[C]=0),C},T.slug=function(g,y){y===void 0&&(y={});var C=this.serialize(g);return this.getNextSafeSlug(C,y.dryrun)},P}(),Bn=function(){function P(E){this.options=E||e.defaults,this.options.renderer=this.options.renderer||new ir,this.renderer=this.options.renderer,this.renderer.options=this.options,this.textRenderer=new ia,this.slugger=new qr}P.parse=function(g,y){var C=new P(y);return C.parse(g)},P.parseInline=function(g,y){var C=new P(y);return C.parseInline(g)};var T=P.prototype;return T.parse=function(g,y){y===void 0&&(y=!0);var C="",x,D,N,te,Z,ye,be,je,Ie,ae,gt,at,ji,Je,kt,Xr,Li,Cn,rr,mo=g.length;for(x=0;x<mo;x++){if(ae=g[x],this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[ae.type]&&(rr=this.options.extensions.renderers[ae.type].call({parser:this},ae),rr!==!1||!["space","hr","heading","code","table","blockquote","list","html","paragraph","text"].includes(ae.type))){C+=rr||"";continue}switch(ae.type){case"space":continue;case"hr":{C+=this.renderer.hr();continue}case"heading":{C+=this.renderer.heading(this.parseInline(ae.tokens),ae.depth,w(this.parseInline(ae.tokens,this.textRenderer)),this.slugger);continue}case"code":{C+=this.renderer.code(ae.text,ae.lang,ae.escaped);continue}case"table":{for(je="",be="",te=ae.header.length,D=0;D<te;D++)be+=this.renderer.tablecell(this.parseInline(ae.header[D].tokens),{header:!0,align:ae.align[D]});for(je+=this.renderer.tablerow(be),Ie="",te=ae.rows.length,D=0;D<te;D++){for(ye=ae.rows[D],be="",Z=ye.length,N=0;N<Z;N++)be+=this.renderer.tablecell(this.parseInline(ye[N].tokens),{header:!1,align:ae.align[N]});Ie+=this.renderer.tablerow(be)}C+=this.renderer.table(je,Ie);continue}case"blockquote":{Ie=this.parse(ae.tokens),C+=this.renderer.blockquote(Ie);continue}case"list":{for(gt=ae.ordered,at=ae.start,ji=ae.loose,te=ae.items.length,Ie="",D=0;D<te;D++)kt=ae.items[D],Xr=kt.checked,Li=kt.task,Je="",kt.task&&(Cn=this.renderer.checkbox(Xr),ji?kt.tokens.length>0&&kt.tokens[0].type==="paragraph"?(kt.tokens[0].text=Cn+" "+kt.tokens[0].text,kt.tokens[0].tokens&&kt.tokens[0].tokens.length>0&&kt.tokens[0].tokens[0].type==="text"&&(kt.tokens[0].tokens[0].text=Cn+" "+kt.tokens[0].tokens[0].text)):kt.tokens.unshift({type:"text",text:Cn}):Je+=Cn),Je+=this.parse(kt.tokens,ji),Ie+=this.renderer.listitem(Je,Li,Xr);C+=this.renderer.list(Ie,gt,at);continue}case"html":{C+=this.renderer.html(ae.text);continue}case"paragraph":{C+=this.renderer.paragraph(this.parseInline(ae.tokens));continue}case"text":{for(Ie=ae.tokens?this.parseInline(ae.tokens):ae.text;x+1<mo&&g[x+1].type==="text";)ae=g[++x],Ie+=`
`+(ae.tokens?this.parseInline(ae.tokens):ae.text);C+=y?this.renderer.paragraph(Ie):Ie;continue}default:{var ra='Token with "'+ae.type+'" type was not found.';if(this.options.silent){console.error(ra);return}else throw new Error(ra)}}}return C},T.parseInline=function(g,y){y=y||this.renderer;var C="",x,D,N,te=g.length;for(x=0;x<te;x++){if(D=g[x],this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[D.type]&&(N=this.options.extensions.renderers[D.type].call({parser:this},D),N!==!1||!["escape","html","link","image","strong","em","codespan","br","del","text"].includes(D.type))){C+=N||"";continue}switch(D.type){case"escape":{C+=y.text(D.text);break}case"html":{C+=y.html(D.text);break}case"link":{C+=y.link(D.href,D.title,this.parseInline(D.tokens,y));break}case"image":{C+=y.image(D.href,D.title,D.text);break}case"strong":{C+=y.strong(this.parseInline(D.tokens,y));break}case"em":{C+=y.em(this.parseInline(D.tokens,y));break}case"codespan":{C+=y.codespan(D.text);break}case"br":{C+=y.br();break}case"del":{C+=y.del(this.parseInline(D.tokens,y));break}case"text":{C+=y.text(D.text);break}default:{var Z='Token with "'+D.type+'" type was not found.';if(this.options.silent){console.error(Z);return}else throw new Error(Z)}}}return C},P}();function me(P,T,E){if(typeof P=="undefined"||P===null)throw new Error("marked(): input parameter is undefined or null");if(typeof P!="string")throw new Error("marked(): input parameter is of type "+Object.prototype.toString.call(P)+", string expected");if(typeof T=="function"&&(E=T,T=null),T=ti({},me.defaults,T||{}),$r(T),E){var g=T.highlight,y;try{y=xn.lex(P,T)}catch(N){return E(N)}var C=function(te){var Z;if(!te)try{T.walkTokens&&me.walkTokens(y,T.walkTokens),Z=Bn.parse(y,T)}catch(ye){te=ye}return T.highlight=g,te?E(te):E(null,Z)};if(!g||g.length<3||(delete T.highlight,!y.length))return C();var x=0;me.walkTokens(y,function(N){N.type==="code"&&(x++,setTimeout(function(){g(N.text,N.lang,function(te,Z){if(te)return C(te);Z!=null&&Z!==N.text&&(N.text=Z,N.escaped=!0),x--,x===0&&C()})},0))}),x===0&&C();return}try{var D=xn.lex(P,T);return T.walkTokens&&me.walkTokens(D,T.walkTokens),Bn.parse(D,T)}catch(N){if(N.message+=`
Please report this to https://github.com/markedjs/marked.`,T.silent)return"<p>An error occurred:</p><pre>"+v(N.message+"",!0)+"</pre>";throw N}}me.options=me.setOptions=function(P){return ti(me.defaults,P),l(me.defaults),me},me.getDefaults=a,me.defaults=e.defaults,me.use=function(){for(var P=arguments.length,T=new Array(P),E=0;E<P;E++)T[E]=arguments[E];var g=ti.apply(void 0,[{}].concat(T)),y=me.defaults.extensions||{renderers:{},childTokens:{}},C;T.forEach(function(x){if(x.extensions&&(C=!0,x.extensions.forEach(function(N){if(!N.name)throw new Error("extension name required");if(N.renderer){var te=y.renderers?y.renderers[N.name]:null;te?y.renderers[N.name]=function(){for(var Z=arguments.length,ye=new Array(Z),be=0;be<Z;be++)ye[be]=arguments[be];var je=N.renderer.apply(this,ye);return je===!1&&(je=te.apply(this,ye)),je}:y.renderers[N.name]=N.renderer}if(N.tokenizer){if(!N.level||N.level!=="block"&&N.level!=="inline")throw new Error("extension level must be 'block' or 'inline'");y[N.level]?y[N.level].unshift(N.tokenizer):y[N.level]=[N.tokenizer],N.start&&(N.level==="block"?y.startBlock?y.startBlock.push(N.start):y.startBlock=[N.start]:N.level==="inline"&&(y.startInline?y.startInline.push(N.start):y.startInline=[N.start]))}N.childTokens&&(y.childTokens[N.name]=N.childTokens)})),x.renderer&&function(){var N=me.defaults.renderer||new ir,te=function(be){var je=N[be];N[be]=function(){for(var Ie=arguments.length,ae=new Array(Ie),gt=0;gt<Ie;gt++)ae[gt]=arguments[gt];var at=x.renderer[be].apply(N,ae);return at===!1&&(at=je.apply(N,ae)),at}};for(var Z in x.renderer)te(Z);g.renderer=N}(),x.tokenizer&&function(){var N=me.defaults.tokenizer||new tr,te=function(be){var je=N[be];N[be]=function(){for(var Ie=arguments.length,ae=new Array(Ie),gt=0;gt<Ie;gt++)ae[gt]=arguments[gt];var at=x.tokenizer[be].apply(N,ae);return at===!1&&(at=je.apply(N,ae)),at}};for(var Z in x.tokenizer)te(Z);g.tokenizer=N}(),x.walkTokens){var D=me.defaults.walkTokens;g.walkTokens=function(N){x.walkTokens.call(this,N),D&&D.call(this,N)}}C&&(g.extensions=y),me.setOptions(g)})},me.walkTokens=function(P,T){for(var E=function(){var x=y.value;switch(T.call(me,x),x.type){case"table":{for(var D=r(x.header),N;!(N=D()).done;){var te=N.value;me.walkTokens(te.tokens,T)}for(var Z=r(x.rows),ye;!(ye=Z()).done;)for(var be=ye.value,je=r(be),Ie;!(Ie=je()).done;){var ae=Ie.value;me.walkTokens(ae.tokens,T)}break}case"list":{me.walkTokens(x.items,T);break}default:me.defaults.extensions&&me.defaults.extensions.childTokens&&me.defaults.extensions.childTokens[x.type]?me.defaults.extensions.childTokens[x.type].forEach(function(gt){me.walkTokens(x[gt],T)}):x.tokens&&me.walkTokens(x.tokens,T)}},g=r(P),y;!(y=g()).done;)E()},me.parseInline=function(P,T){if(typeof P=="undefined"||P===null)throw new Error("marked.parseInline(): input parameter is undefined or null");if(typeof P!="string")throw new Error("marked.parseInline(): input parameter is of type "+Object.prototype.toString.call(P)+", string expected");T=ti({},me.defaults,T||{}),$r(T);try{var E=xn.lexInline(P,T);return T.walkTokens&&me.walkTokens(E,T.walkTokens),Bn.parseInline(E,T)}catch(g){if(g.message+=`
Please report this to https://github.com/markedjs/marked.`,T.silent)return"<p>An error occurred:</p><pre>"+v(g.message+"",!0)+"</pre>";throw g}},me.Parser=Bn,me.parser=Bn.parse,me.Renderer=ir,me.TextRenderer=ia,me.Lexer=xn,me.lexer=xn.lex,me.Tokenizer=tr,me.Slugger=qr,me.parse=me;var nr=me.options,Ml=me.setOptions,Dl=me.use,or=me.walkTokens,na=me.parseInline,ih=me,oa=Bn.parse,nh=xn.lex;e.Lexer=xn,e.Parser=Bn,e.Renderer=ir,e.Slugger=qr,e.TextRenderer=ia,e.Tokenizer=tr,e.getDefaults=a,e.lexer=nh,e.marked=me,e.options=nr,e.parse=ih,e.parseInline=na,e.parser=oa,e.setOptions=Ml,e.use=Dl,e.walkTokens=or,Object.defineProperty(e,"__esModule",{value:!0})})})();var Wf=Y_||exports;Yl();ph();Hi();Ye();Xt();function J_(s,e={},t={}){var i;let n=new R,o=!1,r=n.add(new Ft),a=tC(e),l=function(w){let A;try{A=Ux(decodeURIComponent(w))}catch(M){}return A?(A=sS(A,M=>{if(s.uris&&s.uris[M])return _e.revive(s.uris[M])}),encodeURIComponent(JSON.stringify(A))):w},c=function(w,A){let M=s.uris&&s.uris[w],j=_e.revive(M);return A?w.startsWith(xt.data+":")?w:(j||(j=_e.parse(w)),ev.asBrowserUri(j).toString(!0)):!j||_e.parse(w).toString()===j.toString()?w:(j.query&&(j=j.with({query:l(j.query)})),j.toString())},d,h=new Promise(w=>d=w),p=new Wf.Renderer;if(p.image=(w,A,M)=>{let j=[],V=[];return w&&({href:w,dimensions:j}=oC(w),V.push(`src="${w}"`)),M&&V.push(`alt="${M}"`),A&&V.push(`title="${A}"`),j.length&&(V=V.concat(j)),"<img "+V.join(" ")+">"},p.link=(w,A,M)=>typeof w!="string"?"":(w===M&&(M=bu(M)),w=c(w,!1),e.baseUrl&&(/^\w[\w\d+.-]*:/.test(w)||(w=tg(e.baseUrl,w).toString())),A=typeof A=="string"?bu(A):"",w=bu(w),!w||w.match(/^data:|javascript:/i)||w.match(/^command:/i)&&!s.isTrusted||w.match(/^command:(\/\/\/)?_workbench\.downloadResource/i)?M:(w=w.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;"),`<a data-href="${w}" title="${A||w}">${M}</a>`)),p.paragraph=w=>`<p>${w}</p>`,e.codeBlockRenderer&&(p.code=(w,A)=>{if(typeof A!="string")return"";let M=e.codeBlockRenderer(A,w),j=fu.nextId();return ha(Promise.all([M,h]),r.token).then(V=>{var ce;if(!o&&V){let Te=a.querySelector(`div[data-code="${j}"]`);Te&&ns(Te,V[0]),(ce=e.asyncRenderCallback)===null||ce===void 0||ce.call(e)}}).catch(()=>{}),`<div class="code" data-code="${j}">${yS(w)}</div>`}),e.actionHandler){let w=e.actionHandler.disposables.add(new ls(a,"click")),A=e.actionHandler.disposables.add(new ls(a,"auxclick"));e.actionHandler.disposables.add(ht.any(w.event,A.event)(M=>{let j=new QS(M);if(!j.leftButton&&!j.middleButton)return;let V=j.target;if(!(V.tagName!=="A"&&(V=V.parentElement,!V||V.tagName!=="A")))try{let ce=V.dataset.href;ce&&e.actionHandler.callback(ce,j)}catch(ce){de(ce)}finally{j.preventDefault()}}))}s.supportHtml||(t.sanitizer=w=>(s.isTrusted?w.match(/^(<span[^>]+>)|(<\/\s*span>)$/):void 0)?w:"",t.sanitize=!0,t.silent=!0),t.renderer=p;let m=(i=s.value)!==null&&i!==void 0?i:"";m.length>1e5&&(m=`${m.substr(0,1e5)}\u2026`),s.supportThemeIcons&&(m=Bx(m));let f=Wf.parse(m,t);s.supportThemeIcons&&(f=gu(f).map(A=>typeof A=="string"?A:A.outerHTML).join(""));let _=new DOMParser().parseFromString(Z_(s,f),"text/html");if(_.body.querySelectorAll("img").forEach(w=>{if(w.src){let A=c(w.src,!0);try{let M=_e.parse(A);e.baseUrl&&M.scheme===xt.file&&(A=tg(e.baseUrl,A).toString())}catch(M){}w.src=A}}),a.innerHTML=Z_(s,_.body.innerHTML),d(),e.asyncRenderCallback)for(let w of a.getElementsByTagName("img")){let A=n.add(Ke(w,"load",()=>{A.dispose(),e.asyncRenderCallback()}))}return{element:a,dispose:()=>{o=!0,r.cancel(),n.dispose()}}}function Z_(s,e){let{config:t,allowedSchemes:i}=N1(s);Of("uponSanitizeAttribute",(o,r)=>{if(r.attrName==="style"||r.attrName==="class"){if(o.tagName==="SPAN"){if(r.attrName==="style"){r.keepAttr=/^(color\:#[0-9a-fA-F]+;)?(background-color\:#[0-9a-fA-F]+;)?$/.test(r.attrValue);return}else if(r.attrName==="class"){r.keepAttr=/^codicon codicon-[a-z\-]+( codicon-modifier-[a-z\-]+)?$/.test(r.attrValue);return}}r.keepAttr=!1;return}});let n=document.createElement("a");Of("afterSanitizeAttributes",o=>{for(let r of["href","src"])o.hasAttribute(r)&&(n.href=o.getAttribute(r),i.includes(n.protocol.replace(/:$/,""))||o.removeAttribute(r))});try{return X_(e,Object.assign(Object.assign({},t),{RETURN_TRUSTED_TYPE:!0}))}finally{Hf("uponSanitizeAttribute"),Hf("afterSanitizeAttributes")}}function N1(s){let e=[xt.http,xt.https,xt.mailto,xt.data,xt.file,xt.vscodeFileResource,xt.vscodeRemote,xt.vscodeRemoteResource];return s.isTrusted&&e.push(xt.command),{config:{ALLOWED_TAGS:["ul","li","p","b","i","code","blockquote","ol","h1","h2","h3","h4","h5","h6","hr","em","pre","table","thead","tbody","tr","th","td","div","del","a","strong","br","img","span"],ALLOWED_ATTR:["href","data-href","target","title","src","alt","class","style","data-code","width","height","align"],ALLOW_UNKNOWN_PROTOCOLS:!0},allowedSchemes:e}}qi();rn();Le();De();B();ig();var z1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Q_=function(s,e){return function(t,i){e(t,i,s)}},O1=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Bf,Ii=class ew{constructor(e,t,i){this._options=e,this._languageService=t,this._openerService=i,this._onDidRenderAsync=new G,this.onDidRenderAsync=this._onDidRenderAsync.event}dispose(){this._onDidRenderAsync.dispose()}render(e,t,i){if(!e)return{element:document.createElement("span"),dispose:()=>{}};let n=new R;return{element:n.add(J_(e,Object.assign(Object.assign({},this._getRenderOptions(e,n)),t),i)).element,dispose:()=>n.dispose()}}_getRenderOptions(e,t){return{baseUrl:this._options.baseUrl,codeBlockRenderer:(i,n)=>O1(this,void 0,void 0,function*(){var o,r,a;let l;i?l=this._languageService.getLanguageIdByLanguageName(i):this._options.editor&&(l=(o=this._options.editor.getModel())===null||o===void 0?void 0:o.getLanguageId()),l||(l=za);let c=yield Ex(this._languageService,n,l),d=document.createElement("span");if(d.innerHTML=(a=(r=ew._ttpTokenizer)===null||r===void 0?void 0:r.createHTML(c))!==null&&a!==void 0?a:c,this._options.editor){let h=this._options.editor.getOption(44);ql(d,h)}else this._options.codeBlockFontFamily&&(d.style.fontFamily=this._options.codeBlockFontFamily);return d}),asyncRenderCallback:()=>this._onDidRenderAsync.fire(),actionHandler:{callback:i=>this._openerService.open(i,{fromUserGesture:!0,allowContributedOpeners:!0,allowCommands:e.isTrusted}).catch(de),disposables:t}}}};Ii._ttpTokenizer=(Bf=window.trustedTypes)===null||Bf===void 0?void 0:Bf.createPolicy("tokenizeToString",{createHTML(s){return s}});Ii=z1([Q_(1,ft),Q_(2,bt)],Ii);tt();ee();Re();rn();ke();ut();Le();ue();Re();var H1=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},tw=class{constructor(e,t,i){this.provider=e,this.hover=t,this.ordinal=i}};function W1(s,e,t,i,n){return H1(this,void 0,void 0,function*(){try{let o=yield Promise.resolve(s.provideHover(t,i,n));if(o&&V1(o))return new tw(s,o,e)}catch(o){Ue(o)}})}function Yd(s,e,t){let n=ba.ordered(s).map((o,r)=>W1(o,r,s,e,t));return Si.fromPromises(n).coalesce()}function B1(s,e,t){return Yd(s,e,t).map(i=>i.hover).toPromise()}wi("_executeHoverProvider",(s,e)=>B1(s,e,ge.None));function V1(s){let e=typeof s.range!="undefined",t=typeof s.contents!="undefined"&&s.contents&&s.contents.length>0;return e&&t}Q();kn();qi();var G1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Vf=function(s,e){return function(t,i){e(t,i,s)}},iw=W,Fn=class{constructor(e,t,i,n){this.owner=e,this.range=t,this.contents=i,this.ordinal=n}isValidForHoverAnchor(e){return e.type===1&&this.range.startColumn<=e.range.startColumn&&this.range.endColumn>=e.range.endColumn}},Ka=class{constructor(e,t,i,n){this._editor=e,this._languageService=t,this._openerService=i,this._configurationService=n}createLoadingMessage(e){return new Fn(this,e.range,[new ai().appendText(u("modesContentHover.loading","Loading..."))],2e3)}computeSync(e,t){if(!this._editor.hasModel()||e.type!==1)return[];let i=this._editor.getModel(),n=e.range.startLineNumber,o=i.getLineMaxColumn(n),r=[],a=1e3,l=i.getLineLength(n),c=i.getLanguageIdAtPosition(e.range.startLineNumber,e.range.startColumn),d=this._configurationService.getValue("editor.maxTokenizationLineLength",{overrideIdentifier:c});typeof d=="number"&&l>=d&&r.push(new Fn(this,e.range,[{value:u("too many characters","Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.")}],a++));for(let h of t){let p=h.range.startLineNumber===n?h.range.startColumn:1,m=h.range.endLineNumber===n?h.range.endColumn:o,f=h.options.hoverMessage;if(!f||_r(f))continue;let v=new b(e.range.startLineNumber,p,e.range.startLineNumber,m);r.push(new Fn(this,v,ch(f),a++))}return r}computeAsync(e,t,i){if(!this._editor.hasModel()||e.type!==1)return Si.EMPTY;let n=this._editor.getModel();if(!ba.has(n))return Si.EMPTY;let o=new U(e.range.startLineNumber,e.range.startColumn);return Yd(n,o,i).filter(r=>!_r(r.hover.contents)).map(r=>{let a=r.hover.range?b.lift(r.hover.range):e.range;return new Fn(this,a,r.hover.contents,r.ordinal)})}renderHoverParts(e,t){return Gf(e,t,this._editor,this._languageService,this._openerService)}};Ka=G1([Vf(1,ft),Vf(2,bt),Vf(3,it)],Ka);function Gf(s,e,t,i,n){e.sort((r,a)=>r.ordinal-a.ordinal);let o=new R;for(let r of e)for(let a of r.contents){if(_r(a))continue;let l=iw("div.hover-row.markdown-hover"),c=H(l,iw("div.hover-contents")),d=o.add(new Ii({editor:t},i,n));o.add(d.onDidRenderAsync(()=>{c.className="hover-contents code-hover-contents",s.onContentsChanged()}));let h=o.add(d.render(a));c.appendChild(h.element),s.fragment.appendChild(l)}return o}Ae();St();ke();Le();B();Hi();ee();xi();B();ue();Ci();tt();ee();He();St();De();B();cS();Ye();Xt();ee();ts();Be();kn();var nw=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},op=function(s,e){return function(t,i){e(t,i,s)}},jf=class{constructor(e,t,i){this.marker=e,this.index=t,this.total=i}},Uf=class{constructor(e,t,i){this._markerService=t,this._configService=i,this._onDidChange=new G,this.onDidChange=this._onDidChange.event,this._dispoables=new R,this._markers=[],this._nextIdx=-1,_e.isUri(e)?this._resourceFilter=a=>a.toString()===e.toString():e&&(this._resourceFilter=e);let n=this._configService.getValue("problems.sortOrder"),o=(a,l)=>{let c=km(a.resource.toString(),l.resource.toString());return n==="position"?c=b.compareRangesUsingStarts(a,l)||zt.compare(a.severity,l.severity):c=zt.compare(a.severity,l.severity)||b.compareRangesUsingStarts(a,l),c},r=()=>{this._markers=this._markerService.read({resource:_e.isUri(e)?e:void 0,severities:zt.Error|zt.Warning|zt.Info}),typeof e=="function"&&(this._markers=this._markers.filter(a=>this._resourceFilter(a.resource))),this._markers.sort(o)};r(),this._dispoables.add(t.onMarkerChanged(a=>{(!this._resourceFilter||a.some(l=>this._resourceFilter(l)))&&(r(),this._nextIdx=-1,this._onDidChange.fire())}))}dispose(){this._dispoables.dispose(),this._onDidChange.dispose()}matches(e){return!this._resourceFilter&&!e?!0:!this._resourceFilter||!e?!1:this._resourceFilter(e)}get selected(){let e=this._markers[this._nextIdx];return e&&new jf(e,this._nextIdx+1,this._markers.length)}_initIdx(e,t,i){let n=!1,o=this._markers.findIndex(r=>r.resource.toString()===e.uri.toString());o<0&&(o=ah(this._markers,{resource:e.uri},(r,a)=>km(r.resource.toString(),a.resource.toString())),o<0&&(o=~o));for(let r=o;r<this._markers.length;r++){let a=b.lift(this._markers[r]);if(a.isEmpty()){let l=e.getWordAtPosition(a.getStartPosition());l&&(a=new b(a.startLineNumber,l.startColumn,a.startLineNumber,l.endColumn))}if(t&&(a.containsPosition(t)||t.isBeforeOrEqual(a.getStartPosition()))){this._nextIdx=r,n=!0;break}if(this._markers[r].resource.toString()!==e.uri.toString())break}n||(this._nextIdx=i?0:this._markers.length-1),this._nextIdx<0&&(this._nextIdx=this._markers.length-1)}resetIndex(){this._nextIdx=-1}move(e,t,i){if(this._markers.length===0)return!1;let n=this._nextIdx;return this._nextIdx===-1?this._initIdx(t,i,e):e?this._nextIdx=(this._nextIdx+1)%this._markers.length:e||(this._nextIdx=(this._nextIdx-1+this._markers.length)%this._markers.length),n!==this._nextIdx}find(e,t){let i=this._markers.findIndex(n=>n.resource.toString()===e.toString());if(!(i<0)){for(;i<this._markers.length;i++)if(b.containsPosition(this._markers[i],t))return new jf(this._markers[i],i+1,this._markers.length)}}};Uf=nw([op(1,gd),op(2,it)],Uf);var Kf=Fi("IMarkerNavigationService"),$f=class{constructor(e,t){this._markerService=e,this._configService=t,this._provider=new bh}getMarkerList(e){for(let t of this._provider){let i=t.getMarkerList(e);if(i)return i}return new Uf(e,this._markerService,this._configService)}};$f=nw([op(0,gd),op(1,it)],$f);Ni(Kf,$f,!0);Q();ri();Ee();Be();Ae();St();Zn();De();B();Hi();Ye();ee();Q();ri();Ee();Be();qi();xi();mt();Ne();var rp;(function(s){function e(t){switch(t){case Io.Ignore:return"severity-ignore "+K.info.classNames;case Io.Info:return K.info.classNames;case Io.Warning:return K.warning.classNames;case Io.Error:return K.error.classNames;default:return""}}s.className=e})(rp||(rp={}));Me((s,e)=>{let t=s.getColor(tx);if(t){let o=K.error.cssSelector;e.addRule(`
			.monaco-editor .zone-widget ${o},
			.markers-panel .marker-icon${o},
			.text-search-provider-messages .providerMessage ${o},
			.extensions-viewlet > .extensions ${o} {
				color: ${t};
			}
		`)}let i=s.getColor(ix);if(i){let o=K.warning.cssSelector;e.addRule(`
			.monaco-editor .zone-widget ${o},
			.markers-panel .marker-icon${o},
			.extensions-viewlet > .extensions ${o},
			.extension-editor ${o},
			.text-search-provider-messages .providerMessage ${o},
			.preferences-editor ${o} {
				color: ${i};
			}
		`)}let n=s.getColor(nx);if(n){let o=K.info.cssSelector;e.addRule(`
			.monaco-editor .zone-widget ${o},
			.markers-panel .marker-icon${o},
			.extensions-viewlet > .extensions ${o},
			.text-search-provider-messages .providerMessage ${o},
			.extension-editor ${o} {
				color: ${n};
			}
		`)}});mt();Ne();var j1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},qa=function(s,e){return function(t,i){e(t,i,s)}},aw=class{constructor(e,t,i,n,o){this._openerService=n,this._labelService=o,this._lines=0,this._longestLineLength=0,this._relatedDiagnostics=new WeakMap,this._disposables=new R,this._editor=t;let r=document.createElement("div");r.className="descriptioncontainer",this._messageBlock=document.createElement("div"),this._messageBlock.classList.add("message"),this._messageBlock.setAttribute("aria-live","assertive"),this._messageBlock.setAttribute("role","alert"),r.appendChild(this._messageBlock),this._relatedBlock=document.createElement("div"),r.appendChild(this._relatedBlock),this._disposables.add(zi(this._relatedBlock,"click",a=>{a.preventDefault();let l=this._relatedDiagnostics.get(a.target);l&&i(l)})),this._scrollable=new wx(r,{horizontal:1,vertical:1,useShadows:!1,horizontalScrollbarSize:6,verticalScrollbarSize:6}),e.appendChild(this._scrollable.getDomNode()),this._disposables.add(this._scrollable.onScroll(a=>{r.style.left=`-${a.scrollLeft}px`,r.style.top=`-${a.scrollTop}px`})),this._disposables.add(this._scrollable)}dispose(){vt(this._disposables)}update(e){let{source:t,message:i,relatedInformation:n,code:o}=e,r=((t==null?void 0:t.length)||0)+2;o&&(typeof o=="string"?r+=o.length:r+=o.value.length);let a=Qr(i);this._lines=a.length,this._longestLineLength=0;for(let p of a)this._longestLineLength=Math.max(p.length+r,this._longestLineLength);_i(this._messageBlock),this._messageBlock.setAttribute("aria-label",this.getAriaLabel(e)),this._editor.applyFontInfo(this._messageBlock);let l=this._messageBlock;for(let p of a)l=document.createElement("div"),l.innerText=p,p===""&&(l.style.height=this._messageBlock.style.lineHeight),this._messageBlock.appendChild(l);if(t||o){let p=document.createElement("span");if(p.classList.add("details"),l.appendChild(p),t){let m=document.createElement("span");m.innerText=t,m.classList.add("source"),p.appendChild(m)}if(o)if(typeof o=="string"){let m=document.createElement("span");m.innerText=`(${o})`,m.classList.add("code"),p.appendChild(m)}else{this._codeLink=W("a.code-link"),this._codeLink.setAttribute("href",`${o.target.toString()}`),this._codeLink.onclick=f=>{this._openerService.open(o.target,{allowCommands:!0}),f.preventDefault(),f.stopPropagation()};let m=H(this._codeLink,W("span"));m.innerText=o.value,p.appendChild(this._codeLink)}}if(_i(this._relatedBlock),this._editor.applyFontInfo(this._relatedBlock),Pt(n)){let p=this._relatedBlock.appendChild(document.createElement("div"));p.style.paddingTop=`${Math.floor(this._editor.getOption(59)*.66)}px`,this._lines+=1;for(let m of n){let f=document.createElement("div"),v=document.createElement("a");v.classList.add("filename"),v.innerText=`${Ku(m.resource)}(${m.startLineNumber}, ${m.startColumn}): `,v.title=this._labelService.getUriLabel(m.resource),this._relatedDiagnostics.set(v,m);let _=document.createElement("span");_.innerText=m.message,f.appendChild(v),f.appendChild(_),this._lines+=1,p.appendChild(f)}}let c=this._editor.getOption(44),d=Math.ceil(c.typicalFullwidthCharacterWidth*this._longestLineLength*.75),h=c.lineHeight*this._lines;this._scrollable.setScrollDimensions({scrollWidth:d,scrollHeight:h})}layout(e,t){this._scrollable.getDomNode().style.height=`${e}px`,this._scrollable.getDomNode().style.width=`${t}px`,this._scrollable.setScrollDimensions({width:t,height:e})}getHeightInLines(){return Math.min(17,this._lines)}getAriaLabel(e){let t="";switch(e.severity){case zt.Error:t=u("Error","Error");break;case zt.Warning:t=u("Warning","Warning");break;case zt.Info:t=u("Info","Info");break;case zt.Hint:t=u("Hint","Hint");break}let i=u("marker aria","{0} at {1}. ",t,e.startLineNumber+":"+e.startColumn),n=this._editor.getModel();return n&&e.startLineNumber<=n.getLineCount()&&e.startLineNumber>=1&&(i=`${n.getLineContent(e.startLineNumber)}, ${i}`),i}},Is=class lw extends ja{constructor(e,t,i,n,o,r,a){super(e,{showArrow:!0,showFrame:!0,isAccessible:!0,frameWidth:1},o);this._themeService=t,this._openerService=i,this._menuService=n,this._contextKeyService=r,this._labelService=a,this._callOnDispose=new R,this._onDidSelectRelatedInformation=new G,this.onDidSelectRelatedInformation=this._onDidSelectRelatedInformation.event,this._severity=zt.Warning,this._backgroundColor=we.white,this._applyTheme(t.getColorTheme()),this._callOnDispose.add(t.onDidColorThemeChange(this._applyTheme.bind(this))),this.create()}_applyTheme(e){this._backgroundColor=e.getColor(q1);let t=qf,i=U1;this._severity===zt.Warning?(t=Xf,i=$1):this._severity===zt.Info&&(t=Yf,i=K1);let n=e.getColor(t),o=e.getColor(i);this.style({arrowColor:n,frameColor:n,headerBackgroundColor:o,primaryHeadingColor:e.getColor(Uu),secondaryHeadingColor:e.getColor($u)})}_applyStyles(){this._parentContainer&&(this._parentContainer.style.backgroundColor=this._backgroundColor?this._backgroundColor.toString():""),super._applyStyles()}dispose(){this._callOnDispose.dispose(),super.dispose()}_fillHead(e){super._fillHead(e),this._disposables.add(this._actionbarWidget.actionRunner.onBeforeRun(n=>this.editor.focus()));let t=[],i=this._menuService.createMenu(lw.TitleMenu,this._contextKeyService);s_(i,void 0,t),this._actionbarWidget.push(t,{label:!1,icon:!0,index:0}),i.dispose()}_fillTitleIcon(e){this._icon=H(e,W(""))}_fillBody(e){this._parentContainer=e,e.classList.add("marker-widget"),this._parentContainer.tabIndex=0,this._parentContainer.setAttribute("role","tooltip"),this._container=document.createElement("div"),e.appendChild(this._container),this._message=new aw(this._container,this.editor,t=>this._onDidSelectRelatedInformation.fire(t),this._openerService,this._labelService),this._disposables.add(this._message)}show(){throw new Error("call showAtMarker")}showAtMarker(e,t,i){this._container.classList.remove("stale"),this._message.update(e),this._severity=e.severity,this._applyTheme(this._themeService.getColorTheme());let n=b.lift(e),o=this.editor.getPosition(),r=o&&n.containsPosition(o)?o:n.getStartPosition();super.show(r,this.computeRequiredHeight());let a=this.editor.getModel();if(a){let l=i>1?u("problems","{0} of {1} problems",t,i):u("change","{0} of {1} problem",t,i);this.setTitle(Jt(a.uri),l)}this._icon.className=`codicon ${rp.className(zt.toSeverity(this._severity))}`,this.editor.revealPositionNearTop(r,0),this.editor.focus()}updateMarker(e){this._container.classList.remove("stale"),this._message.update(e)}showStale(){this._container.classList.add("stale"),this._relayout()}_doLayoutBody(e,t){super._doLayoutBody(e,t),this._heightInPixel=e,this._message.layout(e,t),this._container.style.height=`${e}px`}_onWidth(e){this._message.layout(this._heightInPixel,e)}_relayout(){super._relayout(this.computeRequiredHeight())}computeRequiredHeight(){return 3+this._message.getHeightInLines()}};Is.TitleMenu=new se("gotoErrorTitleMenu");Is=j1([qa(1,Nt),qa(2,bt),qa(3,Xn),qa(4,le),qa(5,ie),qa(6,xr)],Is);var ow=Yh(Pv,Mv),rw=Yh(Dv,Rv),sw=Yh(ss,Av),qf=q("editorMarkerNavigationError.background",{dark:ow,light:ow,hc:dn},u("editorMarkerNavigationError","Editor marker navigation widget error color.")),U1=q("editorMarkerNavigationError.headerBackground",{dark:si(qf,.1),light:si(qf,.1),hc:null},u("editorMarkerNavigationErrorHeaderBackground","Editor marker navigation widget error heading background.")),Xf=q("editorMarkerNavigationWarning.background",{dark:rw,light:rw,hc:dn},u("editorMarkerNavigationWarning","Editor marker navigation widget warning color.")),$1=q("editorMarkerNavigationWarning.headerBackground",{dark:si(Xf,.1),light:si(Xf,.1),hc:"#0C141F"},u("editorMarkerNavigationWarningBackground","Editor marker navigation widget warning heading background.")),Yf=q("editorMarkerNavigationInfo.background",{dark:sw,light:sw,hc:dn},u("editorMarkerNavigationInfo","Editor marker navigation widget info color.")),K1=q("editorMarkerNavigationInfo.headerBackground",{dark:si(Yf,.1),light:si(Yf,.1),hc:null},u("editorMarkerNavigationInfoHeaderBackground","Editor marker navigation widget info heading background.")),q1=q("editorMarkerNavigation.background",{dark:wa,light:wa,hc:wa},u("editorMarkerNavigationBackground","Editor marker navigation widget background."));var X1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},sp=function(s,e){return function(t,i){e(t,i,s)}},dw=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Wo=class ap{constructor(e,t,i,n,o){this._markerNavigationService=t,this._contextKeyService=i,this._editorService=n,this._instantiationService=o,this._sessionDispoables=new R,this._editor=e,this._widgetVisible=uw.bindTo(this._contextKeyService)}static get(e){return e.getContribution(ap.ID)}dispose(){this._cleanUp(),this._sessionDispoables.dispose()}_cleanUp(){this._widgetVisible.reset(),this._sessionDispoables.clear(),this._widget=void 0,this._model=void 0}_getOrCreateModel(e){if(this._model&&this._model.matches(e))return this._model;let t=!1;return this._model&&(t=!0,this._cleanUp()),this._model=this._markerNavigationService.getMarkerList(e),t&&this._model.move(!0,this._editor.getModel(),this._editor.getPosition()),this._widget=this._instantiationService.createInstance(Is,this._editor),this._widget.onDidClose(()=>this.close(),this,this._sessionDispoables),this._widgetVisible.set(!0),this._sessionDispoables.add(this._model),this._sessionDispoables.add(this._widget),this._sessionDispoables.add(this._editor.onDidChangeCursorPosition(i=>{var n,o,r;(!((n=this._model)===null||n===void 0?void 0:n.selected)||!b.containsPosition((o=this._model)===null||o===void 0?void 0:o.selected.marker,i.position))&&((r=this._model)===null||r===void 0||r.resetIndex())})),this._sessionDispoables.add(this._model.onDidChange(()=>{if(!this._widget||!this._widget.position||!this._model)return;let i=this._model.find(this._editor.getModel().uri,this._widget.position);i?this._widget.updateMarker(i.marker):this._widget.showStale()})),this._sessionDispoables.add(this._widget.onDidSelectRelatedInformation(i=>{this._editorService.openCodeEditor({resource:i.resource,options:{pinned:!0,revealIfOpened:!0,selection:b.lift(i).collapseToStart()}},this._editor),this.close(!1)})),this._sessionDispoables.add(this._editor.onDidChangeModel(()=>this._cleanUp())),this._model}close(e=!0){this._cleanUp(),e&&this._editor.focus()}showAtMarker(e){if(this._editor.hasModel()){let t=this._getOrCreateModel(this._editor.getModel().uri);t.resetIndex(),t.move(!0,this._editor.getModel(),new U(e.startLineNumber,e.startColumn)),t.selected&&this._widget.showAtMarker(t.selected.marker,t.selected.index,t.selected.total)}}nagivate(e,t){var i,n;return dw(this,void 0,void 0,function*(){if(this._editor.hasModel()){let o=this._getOrCreateModel(t?void 0:this._editor.getModel().uri);if(o.move(e,this._editor.getModel(),this._editor.getPosition()),!o.selected)return;if(o.selected.marker.resource.toString()!==this._editor.getModel().uri.toString()){this._cleanUp();let r=yield this._editorService.openCodeEditor({resource:o.selected.marker.resource,options:{pinned:!1,revealIfOpened:!0,selectionRevealType:2,selection:o.selected.marker}},this._editor);r&&((i=ap.get(r))===null||i===void 0||i.close(),(n=ap.get(r))===null||n===void 0||n.nagivate(e,t))}else this._widget.showAtMarker(o.selected.marker,o.selected.index,o.selected.total)}})}};Wo.ID="editor.contrib.markerController";Wo=X1([sp(1,Kf),sp(2,ie),sp(3,Ve),sp(4,le)],Wo);var Zd=class extends F{constructor(e,t,i){super(i);this._next=e,this._multiFile=t}run(e,t){var i;return dw(this,void 0,void 0,function*(){t.hasModel()&&((i=Wo.get(t))===null||i===void 0||i.nagivate(this._next,this._multiFile))})}},Nn=class extends Zd{constructor(){super(!0,!1,{id:Nn.ID,label:Nn.LABEL,alias:"Go to Next Problem (Error, Warning, Info)",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:578,weight:100},menuOpts:{menuId:Is.TitleMenu,title:Nn.LABEL,icon:Rt("marker-navigation-next",K.arrowDown,u("nextMarkerIcon","Icon for goto next marker.")),group:"navigation",order:1}})}};Nn.ID="editor.action.marker.next";Nn.LABEL=u("markerAction.next.label","Go to Next Problem (Error, Warning, Info)");var ks=class extends Zd{constructor(){super(!1,!1,{id:ks.ID,label:ks.LABEL,alias:"Go to Previous Problem (Error, Warning, Info)",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:1602,weight:100},menuOpts:{menuId:Is.TitleMenu,title:Nn.LABEL,icon:Rt("marker-navigation-previous",K.arrowUp,u("previousMarkerIcon","Icon for goto previous marker.")),group:"navigation",order:2}})}};ks.ID="editor.action.marker.prev";ks.LABEL=u("markerAction.previous.label","Go to Previous Problem (Error, Warning, Info)");var cw=class extends Zd{constructor(){super(!0,!0,{id:"editor.action.marker.nextInFiles",label:u("markerAction.nextInFiles.label","Go to Next Problem in Files (Error, Warning, Info)"),alias:"Go to Next Problem in Files (Error, Warning, Info)",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:66,weight:100},menuOpts:{menuId:se.MenubarGoMenu,title:u({key:"miGotoNextProblem",comment:["&& denotes a mnemonic"]},"Next &&Problem"),group:"6_problem_nav",order:1}})}},hw=class extends Zd{constructor(){super(!1,!0,{id:"editor.action.marker.prevInFiles",label:u("markerAction.previousInFiles.label","Go to Previous Problem in Files (Error, Warning, Info)"),alias:"Go to Previous Problem in Files (Error, Warning, Info)",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:1090,weight:100},menuOpts:{menuId:se.MenubarGoMenu,title:u({key:"miGotoPreviousProblem",comment:["&& denotes a mnemonic"]},"Previous &&Problem"),group:"6_problem_nav",order:2}})}};J(Wo.ID,Wo);I(Nn);I(ks);I(cw);I(hw);var uw=new pe("markersNavigationVisible",!1),Y1=ct.bindToContribution(Wo.get);$(new Y1({id:"closeMarkersNavigation",precondition:uw,handler:s=>s.close(),kbOpts:{weight:100+50,kbExpr:S.focus,primary:9,secondary:[1033]}}));Q();qi();hs();mt();Ne();var Z1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},pw=function(s,e){return function(t,i){e(t,i,s)}},gn=W,gw=class{constructor(e,t,i){this.owner=e,this.range=t,this.marker=i}isValidForHoverAnchor(e){return e.type===1&&this.range.startColumn<=e.range.startColumn&&this.range.endColumn>=e.range.endColumn}},mw={type:1,filter:{include:fe.QuickFix}},lp=class{constructor(e,t,i){this._editor=e,this._markerDecorationsService=t,this._openerService=i,this.recentMarkerCodeActionsInfo=void 0}computeSync(e,t){if(!this._editor.hasModel()||e.type!==1)return[];let i=this._editor.getModel(),n=e.range.startLineNumber,o=i.getLineMaxColumn(n),r=[];for(let a of t){let l=a.range.startLineNumber===n?a.range.startColumn:1,c=a.range.endLineNumber===n?a.range.endColumn:o,d=this._markerDecorationsService.getMarker(i.uri,a);if(!d)continue;let h=new b(e.range.startLineNumber,l,e.range.startLineNumber,c);r.push(new gw(this,h,d))}return r}renderHoverParts(e,t){if(!t.length)return z.None;let i=new R;t.forEach(o=>e.fragment.appendChild(this.renderMarkerHover(o,i)));let n=t.length===1?t[0]:t.sort((o,r)=>zt.compare(o.marker.severity,r.marker.severity))[0];return this.renderMarkerStatusbar(e,n,i),i}renderMarkerHover(e,t){let i=gn("div.hover-row"),n=H(i,gn("div.marker.hover-contents")),{source:o,message:r,code:a,relatedInformation:l}=e.marker;this._editor.applyFontInfo(n);let c=H(n,gn("span"));if(c.style.whiteSpace="pre-wrap",c.innerText=r,o||a)if(a&&typeof a!="string"){let d=gn("span");if(o){let f=H(d,gn("span"));f.innerText=o}let h=H(d,gn("a.code-link"));h.setAttribute("href",a.target.toString()),t.add(Ke(h,"click",f=>{this._openerService.open(a.target,{allowCommands:!0}),f.preventDefault(),f.stopPropagation()}));let p=H(h,gn("span"));p.innerText=a.value;let m=H(n,d);m.style.opacity="0.6",m.style.paddingLeft="6px"}else{let d=H(n,gn("span"));d.style.opacity="0.6",d.style.paddingLeft="6px",d.innerText=o&&a?`${o}(${a})`:o||`(${a})`}if(Pt(l))for(let{message:d,resource:h,startLineNumber:p,startColumn:m}of l){let f=H(n,gn("div"));f.style.marginTop="8px";let v=H(f,gn("a"));v.innerText=`${Jt(h)}(${p}, ${m}): `,v.style.cursor="pointer",t.add(Ke(v,"click",w=>{w.stopPropagation(),w.preventDefault(),this._openerService&&this._openerService.open(h,{fromUserGesture:!0,editorOptions:{selection:{startLineNumber:p,startColumn:m}}}).catch(de)}));let _=H(f,gn("span"));_.innerText=d,this._editor.applyFontInfo(_)}return i}renderMarkerStatusbar(e,t,i){if((t.marker.severity===zt.Error||t.marker.severity===zt.Warning||t.marker.severity===zt.Info)&&e.statusBar.addAction({label:u("view problem","View Problem"),commandId:Nn.ID,run:()=>{var n;e.hide(),(n=Wo.get(this._editor))===null||n===void 0||n.showAtMarker(t.marker),this._editor.focus()}}),!this._editor.getOption(81)){let n=e.statusBar.append(gn("div"));this.recentMarkerCodeActionsInfo&&(dg.makeKey(this.recentMarkerCodeActionsInfo.marker)===dg.makeKey(t.marker)?this.recentMarkerCodeActionsInfo.hasCodeActions||(n.textContent=u("noQuickFixes","No quick fixes available")):this.recentMarkerCodeActionsInfo=void 0);let o=this.recentMarkerCodeActionsInfo&&!this.recentMarkerCodeActionsInfo.hasCodeActions?z.None:i.add(Zr(()=>n.textContent=u("checkingForQuickFixes","Checking for quick fixes..."),200));n.textContent||(n.textContent=String.fromCharCode(160));let r=this.getCodeActions(t.marker);i.add(We(()=>r.cancel())),r.then(a=>{if(o.dispose(),this.recentMarkerCodeActionsInfo={marker:t.marker,hasCodeActions:a.validActions.length>0},!this.recentMarkerCodeActionsInfo.hasCodeActions){a.dispose(),n.textContent=u("noQuickFixes","No quick fixes available");return}n.style.display="none";let l=!1;i.add(We(()=>{l||a.dispose()})),e.statusBar.addAction({label:u("quick fixes","Quick Fix..."),commandId:Fo.Id,run:c=>{l=!0;let d=Ao.get(this._editor),h=ni(c);e.hide(),d==null||d.showCodeActions(mw,a,{x:h.left+6,y:h.top+h.height+6})}})},de)}}getCodeActions(e){return Oe(t=>wd(this._editor.getModel(),new b(e.startLineNumber,e.startColumn,e.endLineNumber,e.endColumn),mw,Jn.None,t))}};lp=Z1([pw(1,mv),pw(2,bt)],lp);Me((s,e)=>{let t=s.getColor(gr);t&&e.addRule(`.monaco-hover .hover-contents a.code-link span { color: ${t}; }`);let i=s.getColor(fr);i&&e.addRule(`.monaco-hover .hover-contents a.code-link span:hover { color: ${i}; }`)});Ae();B();ee();rn();B();Ye();ue();yP();He();var dp="editor.action.inlineSuggest.commit";De();B();tt();Re();sn();ke();ut();Le();De();B();Ye();Do();ee();Re();De();B();ee();var Jd=class{constructor(e,t,i=0){this.lineNumber=e,this.parts=t,this.additionalReservedLineCount=i}renderForScreenReader(e){if(this.parts.length===0)return"";let t=this.parts[this.parts.length-1],i=e.substr(0,t.column-1);return J1(i,this.parts.map(o=>({range:{startLineNumber:1,endLineNumber:1,startColumn:o.column,endColumn:o.column},text:o.lines.join(`
`)}))).substring(this.parts[0].column-1)}},fw=class{constructor(e){this.lineStartOffsetByLineIdx=[],this.lineStartOffsetByLineIdx.push(0);for(let t=0;t<e.length;t++)e.charAt(t)===`
`&&this.lineStartOffsetByLineIdx.push(t+1)}getOffset(e){return this.lineStartOffsetByLineIdx[e.lineNumber-1]+e.column-1}};function J1(s,e){let t=new fw(s),i=e.map(n=>{let o=b.lift(n.range);return{startOffset:t.getOffset(o.getStartPosition()),endOffset:t.getOffset(o.getEndPosition()),text:n.text}});i.sort((n,o)=>o.startOffset-n.startOffset);for(let n of i)s=s.substring(0,n.startOffset)+n.text+s.substring(n.endOffset);return s}var cp=class{constructor(e,t,i){this.column=e,this.lines=t,this.preview=i}},Qd=class extends z{constructor(e){super();this.editor=e,this._expanded=void 0,this.onDidChangeEmitter=new G,this.onDidChange=this.onDidChangeEmitter.event,this._register(e.onDidChangeConfiguration(t=>{t.hasChanged(106)&&this._expanded===void 0&&this.onDidChangeEmitter.fire()}))}setExpanded(e){this._expanded=!0,this.onDidChangeEmitter.fire()}};_t();Ye();ee();function yw(s,e){return s===e?!0:!s||!e?!1:s.range.equalsRange(e.range)&&s.text===e.text&&s.command===e.command}function hp(s,e,t,i,n=0){if(s.range.startLineNumber!==s.range.endLineNumber)return;let o=e.getLineContent(s.range.startLineNumber),r=pt(o).length;if(s.range.startColumn-1<=r){let m=pt(s.text).length,f=o.substring(s.range.startColumn-1,r),v=b.fromPositions(s.range.getStartPosition().delta(0,f.length),s.range.getEndPosition()),_=s.text.startsWith(f)?s.text.substring(f.length):s.text.substring(m);s={range:v,text:_,command:s.command}}let l=e.getValueInRange(s.range),c=Q1(l,s.text);if(!c)return;let d=s.range.startLineNumber,h=new Array;if(t==="prefix"){let m=c.filter(f=>f.originalLength===0);if(m.length>1||m.length===1&&m[0].originalStart!==l.length)return}let p=s.text.length-n;for(let m of c){let f=s.range.startColumn+m.originalStart+m.originalLength;if(t==="subwordSmart"&&i&&i.lineNumber===s.range.startLineNumber&&f<i.column||m.originalLength>0)return;if(m.modifiedLength===0)continue;let v=m.modifiedStart+m.modifiedLength,_=Math.max(m.modifiedStart,Math.min(v,p)),w=s.text.substring(m.modifiedStart,_),A=s.text.substring(_,Math.max(m.modifiedStart,v));if(w.length>0){let M=Qr(w);h.push(new cp(f,M,!1))}if(A.length>0){let M=Qr(A);h.push(new cp(f,M,!0))}}return new Jd(d,h,0)}var ro;function Q1(s,e){if((ro==null?void 0:ro.originalValue)===s&&(ro==null?void 0:ro.newValue)===e)return ro==null?void 0:ro.changes;{let t=e0(s,e);return ro={originalValue:s,newValue:e,changes:t},t}}function e0(s,e){if(s.length>5e3||e.length>5e3)return;function t(l){let c=0;for(let d=0,h=l.length;d<h;d++){let p=l.charCodeAt(d);p>c&&(c=p)}return c}let i=Math.max(t(s),t(e));function n(l){if(l<0)throw new Error("unexpected");return i+l+1}function o(l){let c=0,d=0,h=new Int32Array(l.length);for(let p=0,m=l.length;p<m;p++){let f=d*100+c;l[p]==="("?(h[p]=n(2*f),c++):l[p]===")"?(h[p]=n(2*f+1),c===1&&d++,c=Math.max(c-1,0)):h[p]=l.charCodeAt(p)}return h}let r=o(s),a=o(e);return new KS({getElements:()=>r},{getElements:()=>a}).ComputeDiff(!1).changes}sn();xP();bP();CP();SP();vP();function bw(s,e){let t=new ux,i=new mx(t,c=>e.getLanguageConfiguration(c)),n=new px(new Sw([s]),i),o=gx(n,[],void 0,!0),r="",a=s.getLineContent();function l(c,d){if(c.kind===2)l(c.openingBracket,d),d=Ma(d,c.openingBracket.length),c.child&&(l(c.child,d),d=Ma(d,c.child.length)),c.closingBracket?(l(c.closingBracket,d),d=Ma(d,c.closingBracket.length)):r+=i.getSingleLanguageBracketTokens(c.openingBracket.languageId).findClosingTokenText(c.openingBracket.bracketIds);else if(c.kind!==3){if(c.kind===0||c.kind===1)r+=a.substring(d,Ma(d,c.length));else if(c.kind===4)for(let h of c.children)l(h,d),d=Ma(d,h.length)}}return l(o,hx),r}var Sw=class{constructor(e){this.lines=e}getLineCount(){return this.lines.length}getLineLength(e){return this.lines[e-1].getLineContent().length}getLineTokens(e){return this.lines[e-1]}};var t0=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},vw=function(s,e){return function(t,i){e(t,i,s)}},Bo=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},up=class extends z{constructor(e,t,i,n){super();this.editor=e,this.cache=t,this.commandService=i,this.languageConfigurationService=n,this.onDidChangeEmitter=new G,this.onDidChange=this.onDidChangeEmitter.event,this.completionSession=this._register(new et),this.active=!1,this.disposed=!1,this._register(i.onDidExecuteCommand(o=>{new Set([Fa.Tab.id,Fa.DeleteLeft.id,Fa.DeleteRight.id,dp,"acceptSelectedSuggestion"]).has(o.commandId)&&e.hasTextFocus()&&this.handleUserInput()})),this._register(this.editor.onDidType(o=>{this.handleUserInput()})),this._register(this.editor.onDidChangeCursorPosition(o=>{this.session&&!this.session.isValid&&this.hide()})),this._register(We(()=>{this.disposed=!0})),this._register(this.editor.onDidBlurEditorWidget(()=>{this.hide()}))}handleUserInput(){this.session&&!this.session.isValid&&this.hide(),setTimeout(()=>{this.disposed||this.startSessionIfTriggered()},0)}get session(){return this.completionSession.value}get ghostText(){var e;return(e=this.session)===null||e===void 0?void 0:e.ghostText}get minReservedLineCount(){return this.session?this.session.minReservedLineCount:0}setExpanded(e){var t;(t=this.session)===null||t===void 0||t.setExpanded(e)}setActive(e){var t;this.active=e,e&&((t=this.session)===null||t===void 0||t.scheduleAutomaticUpdate())}startSessionIfTriggered(){!this.editor.getOption(55).enabled||this.session&&this.session.isValid||this.trigger(Ai.Automatic)}trigger(e){if(this.completionSession.value){e===Ai.Explicit&&this.completionSession.value.ensureUpdateWithExplicitContext();return}this.completionSession.value=new xw(this.editor,this.editor.getPosition(),()=>this.active,this.commandService,this.cache,e,this.languageConfigurationService),this.completionSession.value.takeOwnership(this.completionSession.value.onDidChange(()=>{this.onDidChangeEmitter.fire()}))}hide(){this.completionSession.clear(),this.onDidChangeEmitter.fire()}commitCurrentSuggestion(){var e;(e=this.session)===null||e===void 0||e.commitCurrentCompletion()}showNext(){var e;(e=this.session)===null||e===void 0||e.showNextInlineCompletion()}showPrevious(){var e;(e=this.session)===null||e===void 0||e.showPreviousInlineCompletion()}hasMultipleInlineCompletions(){var e;return Bo(this,void 0,void 0,function*(){let t=yield(e=this.session)===null||e===void 0?void 0:e.hasMultipleInlineCompletions();return t!==void 0?t:!1})}};up=t0([vw(2,dt),vw(3,Dt)],up);var xw=class extends Qd{constructor(e,t,i,n,o,r,a){super(e);this.triggerPosition=t,this.shouldUpdate=i,this.commandService=n,this.cache=o,this.initialTriggerKind=r,this.languageConfigurationService=a,this.minReservedLineCount=0,this.updateOperation=this._register(new et),this.updateSoon=this._register(new $e(()=>{let c=this.initialTriggerKind;return this.initialTriggerKind=Ai.Automatic,this.update(c)},50)),this.currentlySelectedCompletionId=void 0;let l;this._register(this.onDidChange(()=>{let c=this.currentCompletion;if(c&&c.sourceInlineCompletion!==l){l=c.sourceInlineCompletion;let d=c.sourceProvider;d.handleItemDidShow&&d.handleItemDidShow(c.sourceInlineCompletions,l)}})),this._register(We(()=>{this.cache.clear()})),this._register(this.editor.onDidChangeCursorPosition(c=>{this.cache.value&&this.onDidChangeEmitter.fire()})),this._register(this.editor.onDidChangeModelContent(c=>{this.scheduleAutomaticUpdate()})),this._register(Rm.onDidChange(()=>{this.updateSoon.schedule()})),this.scheduleAutomaticUpdate()}fixAndGetIndexOfCurrentSelection(){if(!this.currentlySelectedCompletionId||!this.cache.value||this.cache.value.completions.length===0)return 0;let e=this.cache.value.completions.findIndex(t=>t.semanticId===this.currentlySelectedCompletionId);return e===-1?(this.currentlySelectedCompletionId=void 0,0):e}get currentCachedCompletion(){if(!!this.cache.value)return this.cache.value.completions[this.fixAndGetIndexOfCurrentSelection()]}showNextInlineCompletion(){var e;return Bo(this,void 0,void 0,function*(){yield this.ensureUpdateWithExplicitContext();let t=((e=this.cache.value)===null||e===void 0?void 0:e.completions)||[];if(t.length>0){let i=(this.fixAndGetIndexOfCurrentSelection()+1)%t.length;this.currentlySelectedCompletionId=t[i].semanticId}else this.currentlySelectedCompletionId=void 0;this.onDidChangeEmitter.fire()})}showPreviousInlineCompletion(){var e;return Bo(this,void 0,void 0,function*(){yield this.ensureUpdateWithExplicitContext();let t=((e=this.cache.value)===null||e===void 0?void 0:e.completions)||[];if(t.length>0){let i=(this.fixAndGetIndexOfCurrentSelection()+t.length-1)%t.length;this.currentlySelectedCompletionId=t[i].semanticId}else this.currentlySelectedCompletionId=void 0;this.onDidChangeEmitter.fire()})}ensureUpdateWithExplicitContext(){var e;return Bo(this,void 0,void 0,function*(){this.updateOperation.value?this.updateOperation.value.triggerKind===Ai.Explicit?yield this.updateOperation.value.promise:yield this.update(Ai.Explicit):((e=this.cache.value)===null||e===void 0?void 0:e.triggerKind)!==Ai.Explicit&&(yield this.update(Ai.Explicit))})}hasMultipleInlineCompletions(){var e;return Bo(this,void 0,void 0,function*(){return yield this.ensureUpdateWithExplicitContext(),(((e=this.cache.value)===null||e===void 0?void 0:e.completions.length)||0)>1})}get ghostText(){let e=this.currentCompletion,t=this.editor.getOptions().get(55).mode;return e?hp(e,this.editor.getModel(),t,this.editor.getPosition()):void 0}get currentCompletion(){let e=this.currentCachedCompletion;if(!!e)return e.toLiveInlineCompletion()}get isValid(){return this.editor.getPosition().lineNumber===this.triggerPosition.lineNumber}scheduleAutomaticUpdate(){this.updateOperation.clear(),this.updateSoon.schedule()}update(e){return Bo(this,void 0,void 0,function*(){if(!this.shouldUpdate())return;let t=this.editor.getPosition(),i=Oe(o=>Bo(this,void 0,void 0,function*(){let r;try{r=yield Jf(t,this.editor.getModel(),{triggerKind:e,selectedSuggestionInfo:void 0},o,this.languageConfigurationService)}catch(a){de(a);return}o.isCancellationRequested||(this.cache.setValue(this.editor,r,e),this.onDidChangeEmitter.fire())})),n=new pp(i,e);this.updateOperation.value=n,yield i,this.updateOperation.value===n&&this.updateOperation.clear()})}takeOwnership(e){this._register(e)}commitCurrentCompletion(){if(!this.ghostText)return;let e=this.currentCompletion;e&&this.commit(e)}commit(e){let t=this.cache.clearAndLeak();this.editor.executeEdits("inlineSuggestion.accept",[Ge.replaceMove(e.range,e.text)]),e.command?this.commandService.executeCommand(e.command.id,...e.command.arguments||[]).finally(()=>{t==null||t.dispose()}).then(void 0,Ue):t==null||t.dispose(),this.onDidChangeEmitter.fire()}},pp=class{constructor(e,t){this.promise=e,this.triggerKind=t}dispose(){this.promise.cancel()}},Zf=class extends z{constructor(e,t,i,n){super();this.triggerKind=n;let o=e.deltaDecorations([],t.items.map(r=>({range:r.range,options:{description:"inline-completion-tracking-range"}})));this._register(We(()=>{e.deltaDecorations(o,[])})),this.completions=t.items.map((r,a)=>new Cw(r,o[a])),this._register(e.onDidChangeModelContent(()=>{let r=!1,a=e.getModel();for(let l of this.completions){let c=a.getDecorationRange(l.decorationId);if(!c){de(new Error("Decoration has no range"));continue}l.synchronizedRange.equalsRange(c)||(r=!0,l.synchronizedRange=c)}r&&i()})),this._register(t)}},Cw=class{constructor(e,t){this.inlineCompletion=e,this.decorationId=t,this.semanticId=JSON.stringify({text:this.inlineCompletion.text,startLine:this.inlineCompletion.range.startLineNumber,startColumn:this.inlineCompletion.range.startColumn,command:this.inlineCompletion.command}),this.synchronizedRange=e.range}toLiveInlineCompletion(){return{text:this.inlineCompletion.text,range:this.synchronizedRange,command:this.inlineCompletion.command,sourceProvider:this.inlineCompletion.sourceProvider,sourceInlineCompletions:this.inlineCompletion.sourceInlineCompletions,sourceInlineCompletion:this.inlineCompletion.sourceInlineCompletion}}};function i0(s,e){let t=e.getWordAtPosition(s),i=e.getLineMaxColumn(s.lineNumber);return t?new b(s.lineNumber,t.startColumn,s.lineNumber,i):b.fromPositions(s,s.with(void 0,i))}function Jf(s,e,t,i=ge.None,n){return Bo(this,void 0,void 0,function*(){let o=i0(s,e),r=Rm.all(e),a=yield Promise.all(r.map(c=>Bo(this,void 0,void 0,function*(){let d=yield c.provideInlineCompletions(e,s,t,i);return{completions:d,provider:c,dispose:()=>{d&&c.freeInlineCompletions(d)}}}))),l=new Map;for(let c of a){let d=c.completions;if(d)for(let h of d.items){let p=h.range?b.lift(h.range):o;if(p.startLineNumber!==p.endLineNumber)continue;let m=n&&h.completeBracketPairs?n0(h.text,p.getStartPosition(),e,n):h.text,f={text:m,range:p,command:h.command,sourceProvider:c.provider,sourceInlineCompletions:d,sourceInlineCompletion:h};l.set(JSON.stringify({text:m,range:h.range}),f)}}return{items:[...l.values()],dispose:()=>{for(let c of a)c.dispose()}}})}function n0(s,e,t,i){let o=t.getLineContent(e.lineNumber).substring(0,e.column-1)+s,r=t.tokenizeLineWithEdit(e,o.length-(e.column-1),s),a=r==null?void 0:r.sliceAndInflate(e.column-1,o.length,0);return a?(console.log(a),bw(a,i)):s}function Xa(s,e){if(!e)return e;let t=s.getValueInRange(e.range),i=dr(t,e.text),n=s.getOffsetAt(e.range.getStartPosition())+i,o=s.getPositionAt(n),r=t.substr(i),a=xh(r,e.text),l=s.getPositionAt(Math.max(n,s.getOffsetAt(e.range.getEndPosition())-a));return{range:b.fromPositions(o,l),text:e.text.substr(i,e.text.length-i-a)}}ke();Le();B();Re();St();ke();De();B();tt();ee();var Yi=class{constructor(){this.value="",this.pos=0}static isDigitCharacter(e){return e>=48&&e<=57}static isVariableCharacter(e){return e===95||e>=97&&e<=122||e>=65&&e<=90}text(e){this.value=e,this.pos=0}tokenText(e){return this.value.substr(e.pos,e.len)}next(){if(this.pos>=this.value.length)return{type:14,pos:this.pos,len:0};let e=this.pos,t=0,i=this.value.charCodeAt(e),n;if(n=Yi._table[i],typeof n=="number")return this.pos+=1,{type:n,pos:e,len:1};if(Yi.isDigitCharacter(i)){n=8;do t+=1,i=this.value.charCodeAt(e+t);while(Yi.isDigitCharacter(i));return this.pos+=t,{type:n,pos:e,len:t}}if(Yi.isVariableCharacter(i)){n=9;do i=this.value.charCodeAt(e+ ++t);while(Yi.isVariableCharacter(i)||Yi.isDigitCharacter(i));return this.pos+=t,{type:n,pos:e,len:t}}n=10;do t+=1,i=this.value.charCodeAt(e+t);while(!isNaN(i)&&typeof Yi._table[i]=="undefined"&&!Yi.isDigitCharacter(i)&&!Yi.isVariableCharacter(i));return this.pos+=t,{type:n,pos:e,len:t}}};Yi._table={[36]:0,[58]:1,[44]:2,[123]:3,[125]:4,[92]:5,[47]:6,[124]:7,[43]:11,[45]:12,[63]:13};var Ls=class{constructor(){this._children=[]}appendChild(e){return e instanceof ei&&this._children[this._children.length-1]instanceof ei?this._children[this._children.length-1].value+=e.value:(e.parent=this,this._children.push(e)),this}replace(e,t){let{parent:i}=e,n=i.children.indexOf(e),o=i.children.slice(0);o.splice(n,1,...t),i._children=o,function r(a,l){for(let c of a)c.parent=l,r(c.children,c)}(t,i)}get children(){return this._children}get snippet(){let e=this;for(;;){if(!e)return;if(e instanceof ec)return e;e=e.parent}}toString(){return this.children.reduce((e,t)=>e+t.toString(),"")}len(){return 0}},ei=class extends Ls{constructor(e){super();this.value=e}toString(){return this.value}len(){return this.value.length}clone(){return new ei(this.value)}},Qf=class extends Ls{},Bi=class extends Qf{constructor(e){super();this.index=e}static compareByIndex(e,t){return e.index===t.index?0:e.isFinalTabstop?1:t.isFinalTabstop||e.index<t.index?-1:e.index>t.index?1:0}get isFinalTabstop(){return this.index===0}get choice(){return this._children.length===1&&this._children[0]instanceof Ps?this._children[0]:void 0}clone(){let e=new Bi(this.index);return this.transform&&(e.transform=this.transform.clone()),e._children=this.children.map(t=>t.clone()),e}},Ps=class extends Ls{constructor(){super(...arguments);this.options=[]}appendChild(e){return e instanceof ei&&(e.parent=this,this.options.push(e)),this}toString(){return this.options[0].value}len(){return this.options[0].len()}clone(){let e=new Ps;return this.options.forEach(e.appendChild,e),e}},mp=class extends Ls{constructor(){super(...arguments);this.regexp=new RegExp("")}resolve(e){let t=this,i=!1,n=e.replace(this.regexp,function(){return i=!0,t._replace(Array.prototype.slice.call(arguments,0,-2))});return!i&&this._children.some(o=>o instanceof fn&&Boolean(o.elseValue))&&(n=this._replace([])),n}_replace(e){let t="";for(let i of this._children)if(i instanceof fn){let n=e[i.index]||"";n=i.resolve(n),t+=n}else t+=i.toString();return t}toString(){return""}clone(){let e=new mp;return e.regexp=new RegExp(this.regexp.source,(this.regexp.ignoreCase?"i":"")+(this.regexp.global?"g":"")),e._children=this.children.map(t=>t.clone()),e}},fn=class extends Ls{constructor(e,t,i,n){super();this.index=e,this.shorthandName=t,this.ifValue=i,this.elseValue=n}resolve(e){return this.shorthandName==="upcase"?e?e.toLocaleUpperCase():"":this.shorthandName==="downcase"?e?e.toLocaleLowerCase():"":this.shorthandName==="capitalize"?e?e[0].toLocaleUpperCase()+e.substr(1):"":this.shorthandName==="pascalcase"?e?this._toPascalCase(e):"":this.shorthandName==="camelcase"?e?this._toCamelCase(e):"":Boolean(e)&&typeof this.ifValue=="string"?this.ifValue:!Boolean(e)&&typeof this.elseValue=="string"?this.elseValue:e||""}_toPascalCase(e){let t=e.match(/[a-z0-9]+/gi);return t?t.map(i=>i.charAt(0).toUpperCase()+i.substr(1).toLowerCase()).join(""):e}_toCamelCase(e){let t=e.match(/[a-z0-9]+/gi);return t?t.map((i,n)=>n===0?i.toLowerCase():i.charAt(0).toUpperCase()+i.substr(1).toLowerCase()).join(""):e}clone(){return new fn(this.index,this.shorthandName,this.ifValue,this.elseValue)}},Ya=class extends Qf{constructor(e){super();this.name=e}resolve(e){let t=e.resolve(this);return this.transform&&(t=this.transform.resolve(t||"")),t!==void 0?(this._children=[new ei(t)],!0):!1}clone(){let e=new Ya(this.name);return this.transform&&(e.transform=this.transform.clone()),e._children=this.children.map(t=>t.clone()),e}};function _w(s,e){let t=[...s];for(;t.length>0;){let i=t.shift();if(!e(i))break;t.unshift(...i.children)}}var ec=class extends Ls{get placeholderInfo(){if(!this._placeholders){let e=[],t;this.walk(function(i){return i instanceof Bi&&(e.push(i),t=!t||t.index<i.index?i:t),!0}),this._placeholders={all:e,last:t}}return this._placeholders}get placeholders(){let{all:e}=this.placeholderInfo;return e}offset(e){let t=0,i=!1;return this.walk(n=>n===e?(i=!0,!1):(t+=n.len(),!0)),i?t:-1}fullLen(e){let t=0;return _w([e],i=>(t+=i.len(),!0)),t}enclosingPlaceholders(e){let t=[],{parent:i}=e;for(;i;)i instanceof Bi&&t.push(i),i=i.parent;return t}resolveVariables(e){return this.walk(t=>(t instanceof Ya&&t.resolve(e)&&(this._placeholders=void 0),!0)),this}appendChild(e){return this._placeholders=void 0,super.appendChild(e)}replace(e,t){return this._placeholders=void 0,super.replace(e,t)}clone(){let e=new ec;return this._children=this.children.map(t=>t.clone()),e}walk(e){_w(this.children,e)}},Vo=class{constructor(){this._scanner=new Yi,this._token={type:14,pos:0,len:0}}static escape(e){return e.replace(/\$|}|\\/g,"\\$&")}static guessNeedsClipboard(e){return/\${?CLIPBOARD/.test(e)}parse(e,t,i){this._scanner.text(e),this._token=this._scanner.next();let n=new ec;for(;this._parse(n););let o=new Map,r=[],a=0;n.walk(l=>(l instanceof Bi&&(a+=1,l.isFinalTabstop?o.set(0,void 0):!o.has(l.index)&&l.children.length>0?o.set(l.index,l.children):r.push(l)),!0));for(let l of r){let c=o.get(l.index);if(c){let d=new Bi(l.index);d.transform=l.transform;for(let h of c)d.appendChild(h.clone());n.replace(l,[d])}}return i||(i=a>0&&t),!o.has(0)&&i&&n.appendChild(new Bi(0)),n}_accept(e,t){if(e===void 0||this._token.type===e){let i=t?this._scanner.tokenText(this._token):!0;return this._token=this._scanner.next(),i}return!1}_backTo(e){return this._scanner.pos=e.pos+e.len,this._token=e,!1}_until(e){let t=this._token;for(;this._token.type!==e;){if(this._token.type===14)return!1;if(this._token.type===5){let n=this._scanner.next();if(n.type!==0&&n.type!==4&&n.type!==5)return!1}this._token=this._scanner.next()}let i=this._scanner.value.substring(t.pos,this._token.pos).replace(/\\(\$|}|\\)/g,"$1");return this._token=this._scanner.next(),i}_parse(e){return this._parseEscaped(e)||this._parseTabstopOrVariableName(e)||this._parseComplexPlaceholder(e)||this._parseComplexVariable(e)||this._parseAnything(e)}_parseEscaped(e){let t;return(t=this._accept(5,!0))?(t=this._accept(0,!0)||this._accept(4,!0)||this._accept(5,!0)||t,e.appendChild(new ei(t)),!0):!1}_parseTabstopOrVariableName(e){let t,i=this._token;return this._accept(0)&&(t=this._accept(9,!0)||this._accept(8,!0))?(e.appendChild(/^\d+$/.test(t)?new Bi(Number(t)):new Ya(t)),!0):this._backTo(i)}_parseComplexPlaceholder(e){let t,i=this._token;if(!(this._accept(0)&&this._accept(3)&&(t=this._accept(8,!0))))return this._backTo(i);let o=new Bi(Number(t));if(this._accept(1))for(;;){if(this._accept(4))return e.appendChild(o),!0;if(!this._parse(o))return e.appendChild(new ei("${"+t+":")),o.children.forEach(e.appendChild,e),!0}else if(o.index>0&&this._accept(7)){let r=new Ps;for(;;){if(this._parseChoiceElement(r)){if(this._accept(2))continue;if(this._accept(7)&&(o.appendChild(r),this._accept(4)))return e.appendChild(o),!0}return this._backTo(i),!1}}else return this._accept(6)?this._parseTransform(o)?(e.appendChild(o),!0):(this._backTo(i),!1):this._accept(4)?(e.appendChild(o),!0):this._backTo(i)}_parseChoiceElement(e){let t=this._token,i=[];for(;!(this._token.type===2||this._token.type===7);){let n;if((n=this._accept(5,!0))?n=this._accept(2,!0)||this._accept(7,!0)||this._accept(5,!0)||n:n=this._accept(void 0,!0),!n)return this._backTo(t),!1;i.push(n)}return i.length===0?(this._backTo(t),!1):(e.appendChild(new ei(i.join(""))),!0)}_parseComplexVariable(e){let t,i=this._token;if(!(this._accept(0)&&this._accept(3)&&(t=this._accept(9,!0))))return this._backTo(i);let o=new Ya(t);if(this._accept(1))for(;;){if(this._accept(4))return e.appendChild(o),!0;if(!this._parse(o))return e.appendChild(new ei("${"+t+":")),o.children.forEach(e.appendChild,e),!0}else return this._accept(6)?this._parseTransform(o)?(e.appendChild(o),!0):(this._backTo(i),!1):this._accept(4)?(e.appendChild(o),!0):this._backTo(i)}_parseTransform(e){let t=new mp,i="",n="";for(;!this._accept(6);){let o;if(o=this._accept(5,!0)){o=this._accept(6,!0)||o,i+=o;continue}if(this._token.type!==14){i+=this._accept(void 0,!0);continue}return!1}for(;!this._accept(6);){let o;if(o=this._accept(5,!0)){o=this._accept(5,!0)||this._accept(6,!0)||o,t.appendChild(new ei(o));continue}if(!(this._parseFormatString(t)||this._parseAnything(t)))return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!0);continue}return!1}try{t.regexp=new RegExp(i,n)}catch(o){return!1}return e.transform=t,!0}_parseFormatString(e){let t=this._token;if(!this._accept(0))return!1;let i=!1;this._accept(3)&&(i=!0);let n=this._accept(8,!0);if(n)if(i){if(this._accept(4))return e.appendChild(new fn(Number(n))),!0;if(!this._accept(1))return this._backTo(t),!1}else return e.appendChild(new fn(Number(n))),!0;else return this._backTo(t),!1;if(this._accept(6)){let o=this._accept(9,!0);return!o||!this._accept(4)?(this._backTo(t),!1):(e.appendChild(new fn(Number(n),o)),!0)}else if(this._accept(11)){let o=this._until(4);if(o)return e.appendChild(new fn(Number(n),void 0,o,void 0)),!0}else if(this._accept(12)){let o=this._until(4);if(o)return e.appendChild(new fn(Number(n),void 0,void 0,o)),!0}else if(this._accept(13)){let o=this._until(1);if(o){let r=this._until(4);if(r)return e.appendChild(new fn(Number(n),void 0,o,r)),!0}}else{let o=this._until(4);if(o)return e.appendChild(new fn(Number(n),void 0,void 0,o)),!0}return this._backTo(t),!1}_parseAnything(e){return this._token.type!==14?(e.appendChild(new ei(this._scanner.tokenText(this._token))),this._accept(void 0),!0):!1}};St();B();Ye();Do();ee();Mt();jt();uS();Hi();Ye();var At=new Uint8Array(16),di=[];for(let s=0;s<256;s++)di.push(s.toString(16).padStart(2,"0"));var ey;typeof crypto=="object"&&typeof crypto.getRandomValues=="function"?ey=crypto.getRandomValues.bind(crypto):ey=function(s){for(let e=0;e<s.length;e++)s[e]=Math.floor(Math.random()*256);return s};function ww(){ey(At),At[6]=At[6]&15|64,At[8]=At[8]&63|128;let s=0,e="";return e+=di[At[s++]],e+=di[At[s++]],e+=di[At[s++]],e+=di[At[s++]],e+="-",e+=di[At[s++]],e+=di[At[s++]],e+="-",e+=di[At[s++]],e+=di[At[s++]],e+="-",e+=di[At[s++]],e+=di[At[s++]],e+="-",e+=di[At[s++]],e+=di[At[s++]],e+=di[At[s++]],e+=di[At[s++]],e+=di[At[s++]],e+=di[At[s++]],e}sn();Q();Xt();Q();var gp="code-workspace",hU=[{name:u("codeWorkspace","Code Workspace"),extensions:[gp]}];function ty(s){let e=s;return typeof(e==null?void 0:e.id)=="string"&&_e.isUri(e.uri)}function Tw(s){if(s.configuration)return{id:s.id,configPath:s.configuration};if(s.folders.length===1)return{id:s.id,uri:s.folders[0].uri}}var xU=Object.freeze({CURRENT_YEAR:!0,CURRENT_YEAR_SHORT:!0,CURRENT_MONTH:!0,CURRENT_DATE:!0,CURRENT_HOUR:!0,CURRENT_MINUTE:!0,CURRENT_SECOND:!0,CURRENT_DAY_NAME:!0,CURRENT_DAY_NAME_SHORT:!0,CURRENT_MONTH_NAME:!0,CURRENT_MONTH_NAME_SHORT:!0,CURRENT_SECONDS_UNIX:!0,SELECTION:!0,CLIPBOARD:!0,TM_SELECTED_TEXT:!0,TM_CURRENT_LINE:!0,TM_CURRENT_WORD:!0,TM_LINE_INDEX:!0,TM_LINE_NUMBER:!0,TM_FILENAME:!0,TM_FILENAME_BASE:!0,TM_DIRECTORY:!0,TM_FILEPATH:!0,RELATIVE_FILEPATH:!0,BLOCK_COMMENT_START:!0,BLOCK_COMMENT_END:!0,LINE_COMMENT:!0,WORKSPACE_NAME:!0,WORKSPACE_FOLDER:!0,RANDOM:!0,RANDOM_HEX:!0,UUID:!0}),iy=class{constructor(e){this._delegates=e}resolve(e){for(let t of this._delegates){let i=t.resolve(e);if(i!==void 0)return i}}},ny=class{constructor(e,t,i,n){this._model=e,this._selection=t,this._selectionIdx=i,this._overtypingCapturer=n}resolve(e){let{name:t}=e;if(t==="SELECTION"||t==="TM_SELECTED_TEXT"){let i=this._model.getValueInRange(this._selection)||void 0,n=this._selection.startLineNumber!==this._selection.endLineNumber;if(!i&&this._overtypingCapturer){let o=this._overtypingCapturer.getLastOvertypedInfo(this._selectionIdx);o&&(i=o.value,n=o.multiline)}if(i&&n&&e.snippet){let o=this._model.getLineContent(this._selection.startLineNumber),r=pt(o,0,this._selection.startColumn-1),a=r;e.snippet.walk(c=>c===e?!1:(c instanceof ei&&(a=pt(Qr(c.value).pop())),!0));let l=dr(a,r);i=i.replace(/(\r\n|\r|\n)(.*)/g,(c,d,h)=>`${d}${a.substr(l)}${h}`)}return i}else{if(t==="TM_CURRENT_LINE")return this._model.getLineContent(this._selection.positionLineNumber);if(t==="TM_CURRENT_WORD"){let i=this._model.getWordAtPosition({lineNumber:this._selection.positionLineNumber,column:this._selection.positionColumn});return i&&i.word||void 0}else{if(t==="TM_LINE_INDEX")return String(this._selection.positionLineNumber-1);if(t==="TM_LINE_NUMBER")return String(this._selection.positionLineNumber)}}}},oy=class{constructor(e,t){this._labelService=e,this._model=t}resolve(e){let{name:t}=e;if(t==="TM_FILENAME")return da(this._model.uri.fsPath);if(t==="TM_FILENAME_BASE"){let i=da(this._model.uri.fsPath),n=i.lastIndexOf(".");return n<=0?i:i.slice(0,n)}else{if(t==="TM_DIRECTORY")return hS(this._model.uri.fsPath)==="."?"":this._labelService.getUriLabel(Da(this._model.uri));if(t==="TM_FILEPATH")return this._labelService.getUriLabel(this._model.uri);if(t==="RELATIVE_FILEPATH")return this._labelService.getUriLabel(this._model.uri,{relative:!0,noPrefix:!0})}}},ry=class{constructor(e,t,i,n){this._readClipboardText=e,this._selectionIdx=t,this._selectionCount=i,this._spread=n}resolve(e){if(e.name!=="CLIPBOARD")return;let t=this._readClipboardText();if(!!t){if(this._spread){let i=t.split(/\r\n|\n|\r/).filter(n=>!fS(n));if(i.length===this._selectionCount)return i[this._selectionIdx]}return t}}},sy=class{constructor(e,t){this._model=e,this._selection=t}resolve(e){let{name:t}=e,i=this._model.getLanguageIdAtPosition(this._selection.selectionStartLineNumber,this._selection.selectionStartColumn),n=ii.getComments(i);if(!!n){if(t==="LINE_COMMENT")return n.lineCommentToken||void 0;if(t==="BLOCK_COMMENT_START")return n.blockCommentStartToken||void 0;if(t==="BLOCK_COMMENT_END")return n.blockCommentEndToken||void 0}}},yn=class{constructor(){this._date=new Date}resolve(e){let{name:t}=e;if(t==="CURRENT_YEAR")return String(this._date.getFullYear());if(t==="CURRENT_YEAR_SHORT")return String(this._date.getFullYear()).slice(-2);if(t==="CURRENT_MONTH")return String(this._date.getMonth().valueOf()+1).padStart(2,"0");if(t==="CURRENT_DATE")return String(this._date.getDate().valueOf()).padStart(2,"0");if(t==="CURRENT_HOUR")return String(this._date.getHours().valueOf()).padStart(2,"0");if(t==="CURRENT_MINUTE")return String(this._date.getMinutes().valueOf()).padStart(2,"0");if(t==="CURRENT_SECOND")return String(this._date.getSeconds().valueOf()).padStart(2,"0");if(t==="CURRENT_DAY_NAME")return yn.dayNames[this._date.getDay()];if(t==="CURRENT_DAY_NAME_SHORT")return yn.dayNamesShort[this._date.getDay()];if(t==="CURRENT_MONTH_NAME")return yn.monthNames[this._date.getMonth()];if(t==="CURRENT_MONTH_NAME_SHORT")return yn.monthNamesShort[this._date.getMonth()];if(t==="CURRENT_SECONDS_UNIX")return String(Math.floor(this._date.getTime()/1e3))}};yn.dayNames=[u("Sunday","Sunday"),u("Monday","Monday"),u("Tuesday","Tuesday"),u("Wednesday","Wednesday"),u("Thursday","Thursday"),u("Friday","Friday"),u("Saturday","Saturday")];yn.dayNamesShort=[u("SundayShort","Sun"),u("MondayShort","Mon"),u("TuesdayShort","Tue"),u("WednesdayShort","Wed"),u("ThursdayShort","Thu"),u("FridayShort","Fri"),u("SaturdayShort","Sat")];yn.monthNames=[u("January","January"),u("February","February"),u("March","March"),u("April","April"),u("May","May"),u("June","June"),u("July","July"),u("August","August"),u("September","September"),u("October","October"),u("November","November"),u("December","December")];yn.monthNamesShort=[u("JanuaryShort","Jan"),u("FebruaryShort","Feb"),u("MarchShort","Mar"),u("AprilShort","Apr"),u("MayShort","May"),u("JuneShort","Jun"),u("JulyShort","Jul"),u("AugustShort","Aug"),u("SeptemberShort","Sep"),u("OctoberShort","Oct"),u("NovemberShort","Nov"),u("DecemberShort","Dec")];var ay=class{constructor(e){this._workspaceService=e}resolve(e){if(!this._workspaceService)return;let t=Tw(this._workspaceService.getWorkspace());if(!!t){if(e.name==="WORKSPACE_NAME")return this._resolveWorkspaceName(t);if(e.name==="WORKSPACE_FOLDER")return this._resoveWorkspacePath(t)}}_resolveWorkspaceName(e){if(ty(e))return da(e.uri.path);let t=da(e.configPath.path);return t.endsWith(gp)&&(t=t.substr(0,t.length-gp.length-1)),t}_resoveWorkspacePath(e){if(ty(e))return qu(e.uri.fsPath);let t=da(e.configPath.path),i=e.configPath.fsPath;return i.endsWith(t)&&(i=i.substr(0,i.length-t.length-1)),i?qu(i):"/"}},ly=class{resolve(e){let{name:t}=e;if(t==="RANDOM")return Math.random().toString().slice(-6);if(t==="RANDOM_HEX")return Math.random().toString(16).slice(-6);if(t==="UUID")return ww()}};var Zi=class{constructor(e,t,i,n){this._editor=e,this._snippet=t,this._offset=i,this._snippetLineLeadingWhitespace=n,this._nestingLevel=1,this._placeholderGroups=_m(t.placeholders,Bi.compareByIndex),this._placeholderGroupsIdx=-1}dispose(){this._placeholderDecorations&&this._editor.deltaDecorations([...this._placeholderDecorations.values()],[]),this._placeholderGroups.length=0}_initDecorations(){if(this._placeholderDecorations)return;this._placeholderDecorations=new Map;let e=this._editor.getModel();this._editor.changeDecorations(t=>{for(let i of this._snippet.placeholders){let n=this._snippet.offset(i),o=this._snippet.fullLen(i),r=b.fromPositions(e.getPositionAt(this._offset+n),e.getPositionAt(this._offset+n+o)),a=i.isFinalTabstop?Zi._decor.inactiveFinal:Zi._decor.inactive,l=t.addDecoration(r,a);this._placeholderDecorations.set(i,l)}})}move(e){if(!this._editor.hasModel())return[];if(this._initDecorations(),this._placeholderGroupsIdx>=0){let n=[];for(let o of this._placeholderGroups[this._placeholderGroupsIdx])if(o.transform){let r=this._placeholderDecorations.get(o),a=this._editor.getModel().getDecorationRange(r),l=this._editor.getModel().getValueInRange(a),c=o.transform.resolve(l).split(/\r\n|\r|\n/);for(let d=1;d<c.length;d++)c[d]=this._editor.getModel().normalizeIndentation(this._snippetLineLeadingWhitespace+c[d]);n.push(Ge.replace(a,c.join(this._editor.getModel().getEOL())))}n.length>0&&this._editor.executeEdits("snippet.placeholderTransform",n)}let t=!1;e===!0&&this._placeholderGroupsIdx<this._placeholderGroups.length-1?(this._placeholderGroupsIdx+=1,t=!0):e===!1&&this._placeholderGroupsIdx>0&&(this._placeholderGroupsIdx-=1,t=!0);let i=this._editor.getModel().changeDecorations(n=>{let o=new Set,r=[];for(let a of this._placeholderGroups[this._placeholderGroupsIdx]){let l=this._placeholderDecorations.get(a),c=this._editor.getModel().getDecorationRange(l);r.push(new X(c.startLineNumber,c.startColumn,c.endLineNumber,c.endColumn)),t=t&&this._hasPlaceholderBeenCollapsed(a),n.changeDecorationOptions(l,a.isFinalTabstop?Zi._decor.activeFinal:Zi._decor.active),o.add(a);for(let d of this._snippet.enclosingPlaceholders(a)){let h=this._placeholderDecorations.get(d);n.changeDecorationOptions(h,d.isFinalTabstop?Zi._decor.activeFinal:Zi._decor.active),o.add(d)}}for(let[a,l]of this._placeholderDecorations)o.has(a)||n.changeDecorationOptions(l,a.isFinalTabstop?Zi._decor.inactiveFinal:Zi._decor.inactive);return r});return t?this.move(e):i!=null?i:[]}_hasPlaceholderBeenCollapsed(e){let t=e;for(;t;){if(t instanceof Bi){let i=this._placeholderDecorations.get(t);if(this._editor.getModel().getDecorationRange(i).isEmpty()&&t.toString().length>0)return!0}t=t.parent}return!1}get isAtFirstPlaceholder(){return this._placeholderGroupsIdx<=0||this._placeholderGroups.length===0}get isAtLastPlaceholder(){return this._placeholderGroupsIdx===this._placeholderGroups.length-1}get hasPlaceholder(){return this._snippet.placeholders.length>0}computePossibleSelections(){let e=new Map;for(let t of this._placeholderGroups){let i;for(let n of t){if(n.isFinalTabstop)break;i||(i=[],e.set(n.index,i));let o=this._placeholderDecorations.get(n),r=this._editor.getModel().getDecorationRange(o);if(!r){e.delete(n.index);break}i.push(r)}}return e}get choice(){return this._placeholderGroups[this._placeholderGroupsIdx][0].choice}merge(e){let t=this._editor.getModel();this._nestingLevel*=10,this._editor.changeDecorations(i=>{for(let n of this._placeholderGroups[this._placeholderGroupsIdx]){let o=e.shift();console.assert(!o._placeholderDecorations);let r=o._snippet.placeholderInfo.last.index;for(let l of o._snippet.placeholderInfo.all)l.isFinalTabstop?l.index=n.index+(r+1)/this._nestingLevel:l.index=n.index+l.index/this._nestingLevel;this._snippet.replace(n,o._snippet.children);let a=this._placeholderDecorations.get(n);i.removeDecoration(a),this._placeholderDecorations.delete(n);for(let l of o._snippet.placeholders){let c=o._snippet.offset(l),d=o._snippet.fullLen(l),h=b.fromPositions(t.getPositionAt(o._offset+c),t.getPositionAt(o._offset+c+d)),p=i.addDecoration(h,Zi._decor.inactive);this._placeholderDecorations.set(l,p)}}this._placeholderGroups=_m(this._snippet.placeholders,Bi.compareByIndex)})}};Zi._decor={active:xe.register({description:"snippet-placeholder-1",stickiness:0,className:"snippet-placeholder"}),inactive:xe.register({description:"snippet-placeholder-2",stickiness:1,className:"snippet-placeholder"}),activeFinal:xe.register({description:"snippet-placeholder-3",stickiness:1,className:"finish-snippet-placeholder"}),inactiveFinal:xe.register({description:"snippet-placeholder-4",stickiness:1,className:"finish-snippet-placeholder"})};var Ew={overwriteBefore:0,overwriteAfter:0,adjustWhitespace:!0,clipboardText:void 0,overtypingCapturer:void 0},Ji=class{constructor(e,t,i=Ew){this._templateMerges=[],this._snippets=[],this._editor=e,this._template=t,this._options=i}static adjustWhitespace(e,t,i,n,o){let r=e.getLineContent(t.lineNumber),a=pt(r,0,t.column-1),l;return i.walk(c=>{if(!(c instanceof ei)||c.parent instanceof Ps)return!0;let d=c.value.split(/\r\n|\r|\n/);if(n){let p=i.offset(c);if(p===0)d[0]=e.normalizeIndentation(d[0]);else{l=l!=null?l:i.toString();let m=l.charCodeAt(p-1);(m===10||m===13)&&(d[0]=e.normalizeIndentation(a+d[0]))}for(let m=1;m<d.length;m++)d[m]=e.normalizeIndentation(a+d[m])}let h=d.join(e.getEOL());return h!==c.value&&(c.parent.replace(c,[new ei(h)]),l=void 0),!0}),a}static adjustSelection(e,t,i,n){if(i!==0||n!==0){let{positionLineNumber:o,positionColumn:r}=t,a=r-i,l=r+n,c=e.validateRange({startLineNumber:o,startColumn:a,endLineNumber:o,endColumn:l});t=X.createWithDirection(c.startLineNumber,c.startColumn,c.endLineNumber,c.endColumn,t.getDirection())}return t}static createEditsAndSnippets(e,t,i,n,o,r,a,l){let c=[],d=[];if(!e.hasModel())return{edits:c,snippets:d};let h=e.getModel(),p=e.invokeWithinContext(j=>j.get(Px)),m=e.invokeWithinContext(j=>new oy(j.get(xr),h)),f=()=>a,v=0,_=h.getValueInRange(Ji.adjustSelection(h,e.getSelection(),i,0)),w=h.getValueInRange(Ji.adjustSelection(h,e.getSelection(),0,n)),A=h.getLineFirstNonWhitespaceColumn(e.getSelection().positionLineNumber),M=e.getSelections().map((j,V)=>({selection:j,idx:V})).sort((j,V)=>b.compareRangesUsingStarts(j.selection,V.selection));for(let{selection:j,idx:V}of M){let ce=Ji.adjustSelection(h,j,i,0),Te=Ji.adjustSelection(h,j,0,n);_!==h.getValueInRange(ce)&&(ce=j),w!==h.getValueInRange(Te)&&(Te=j);let It=j.setStartPosition(ce.startLineNumber,ce.startColumn).setEndPosition(Te.endLineNumber,Te.endColumn),Wt=new Vo().parse(t,!0,o),Bt=It.getStartPosition(),nn=Ji.adjustWhitespace(h,Bt,Wt,r||V>0&&A!==h.getLineFirstNonWhitespaceColumn(j.positionLineNumber),!0);Wt.resolveVariables(new iy([m,new ry(f,V,M.length,e.getOption(71)==="spread"),new ny(h,j,V,l),new sy(h,j),new yn,new ay(p),new ly]));let Sn=h.getOffsetAt(Bt)+v;v+=Wt.toString().length-h.getValueLengthInRange(It),c[V]=Ge.replace(It,Wt.toString()),c[V].identifier={major:V,minor:0},d[V]=new Zi(e,Wt,Sn,nn)}return{edits:c,snippets:d}}dispose(){vt(this._snippets)}_logInfo(){return`template="${this._template}", merged_templates="${this._templateMerges.join(" -> ")}"`}insert(){if(!this._editor.hasModel())return;let{edits:e,snippets:t}=Ji.createEditsAndSnippets(this._editor,this._template,this._options.overwriteBefore,this._options.overwriteAfter,!1,this._options.adjustWhitespace,this._options.clipboardText,this._options.overtypingCapturer);this._snippets=t,this._editor.executeEdits("snippet",e,i=>this._snippets[0].hasPlaceholder?this._move(!0):i.filter(n=>!!n.identifier).map(n=>X.fromPositions(n.range.getEndPosition()))),this._editor.revealRange(this._editor.getSelections()[0])}merge(e,t=Ew){if(!this._editor.hasModel())return;this._templateMerges.push([this._snippets[0]._nestingLevel,this._snippets[0]._placeholderGroupsIdx,e]);let{edits:i,snippets:n}=Ji.createEditsAndSnippets(this._editor,e,t.overwriteBefore,t.overwriteAfter,!0,t.adjustWhitespace,t.clipboardText,t.overtypingCapturer);this._editor.executeEdits("snippet",i,o=>{for(let r of this._snippets)r.merge(n);return console.assert(n.length===0),this._snippets[0].hasPlaceholder?this._move(void 0):o.filter(r=>!!r.identifier).map(r=>X.fromPositions(r.range.getEndPosition()))})}next(){let e=this._move(!0);this._editor.setSelections(e),this._editor.revealPositionInCenterIfOutsideViewport(e[0].getPosition())}prev(){let e=this._move(!1);this._editor.setSelections(e),this._editor.revealPositionInCenterIfOutsideViewport(e[0].getPosition())}_move(e){let t=[];for(let i of this._snippets){let n=i.move(e);t.push(...n)}return t}get isAtFirstPlaceholder(){return this._snippets[0].isAtFirstPlaceholder}get isAtLastPlaceholder(){return this._snippets[0].isAtLastPlaceholder}get hasPlaceholder(){return this._snippets[0].hasPlaceholder}get choice(){return this._snippets[0].choice}isSelectionWithinPlaceholders(){if(!this.hasPlaceholder)return!1;let e=this._editor.getSelections();if(e.length<this._snippets.length)return!1;let t=new Map;for(let i of this._snippets){let n=i.computePossibleSelections();if(t.size===0)for(let[o,r]of n){r.sort(b.compareRangesUsingStarts);for(let a of e)if(r[0].containsRange(a)){t.set(o,[]);break}}if(t.size===0)return!1;t.forEach((o,r)=>{o.push(...n.get(r))})}e.sort(b.compareRangesUsingStarts);for(let[i,n]of t){if(n.length!==e.length){t.delete(i);continue}n.sort(b.compareRangesUsingStarts);for(let o=0;o<n.length;o++)if(!n[o].containsRange(e[o])){t.delete(i);continue}}return t.size>0}};Ln();St();ke();ut();Le();De();mP();B();Pi();Wl();qt();ue();Do();tt();ee();He();B();ue();ee();Mt();He();ut();Le();B();Wl();qt();Xt();tt();ee();Re();Co();Q();ri();_t();Ee();var ic=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Ce={Visible:new pe("suggestWidgetVisible",!1,u("suggestWidgetVisible","Whether suggestion are visible")),DetailsVisible:new pe("suggestWidgetDetailsVisible",!1,u("suggestWidgetDetailsVisible","Whether suggestion details are visible")),MultipleSuggestions:new pe("suggestWidgetMultipleSuggestions",!1,u("suggestWidgetMultipleSuggestions","Whether there are multiple suggestions to pick from")),MakesTextEdit:new pe("suggestionMakesTextEdit",!0,u("suggestionMakesTextEdit","Whether inserting the current suggestion yields in a change or has everything already been typed")),AcceptSuggestionsOnEnter:new pe("acceptSuggestionOnEnter",!0,u("acceptSuggestionOnEnter","Whether suggestions are inserted when pressing Enter")),HasInsertAndReplaceRange:new pe("suggestionHasInsertAndReplaceRange",!1,u("suggestionHasInsertAndReplaceRange","Whether the current suggestion has insert and replace behaviour")),InsertMode:new pe("suggestionInsertMode",void 0,{type:"string",description:u("suggestionInsertMode","Whether the default behaviour is to insert or replace")}),CanResolve:new pe("suggestionCanResolve",!1,u("suggestionCanResolve","Whether the current suggestion supports to resolve further details"))},so=new se("suggestWidgetStatusBar"),Iw=class{constructor(e,t,i,n){this.position=e,this.completion=t,this.container=i,this.provider=n,this.isInvalid=!1,this.score=ps.Default,this.distance=0,this.textLabel=typeof t.label=="string"?t.label:t.label.label,this.labelLow=this.textLabel.toLowerCase(),this.isInvalid=!this.textLabel,this.sortTextLow=t.sortText&&t.sortText.toLowerCase(),this.filterTextLow=t.filterText&&t.filterText.toLowerCase(),b.isIRange(t.range)?(this.editStart=new U(t.range.startLineNumber,t.range.startColumn),this.editInsertEnd=new U(t.range.endLineNumber,t.range.endColumn),this.editReplaceEnd=new U(t.range.endLineNumber,t.range.endColumn),this.isInvalid=this.isInvalid||b.spansMultipleLines(t.range)||t.range.startLineNumber!==e.lineNumber):(this.editStart=new U(t.range.insert.startLineNumber,t.range.insert.startColumn),this.editInsertEnd=new U(t.range.insert.endLineNumber,t.range.insert.endColumn),this.editReplaceEnd=new U(t.range.replace.endLineNumber,t.range.replace.endColumn),this.isInvalid=this.isInvalid||b.spansMultipleLines(t.range.insert)||b.spansMultipleLines(t.range.replace)||t.range.insert.startLineNumber!==e.lineNumber||t.range.replace.startLineNumber!==e.lineNumber||t.range.insert.startColumn!==t.range.replace.startColumn),typeof n.resolveCompletionItem!="function"&&(this._resolveCache=Promise.resolve(),this._isResolved=!0)}get isResolved(){return!!this._isResolved}resolve(e){return ic(this,void 0,void 0,function*(){if(!this._resolveCache){let t=e.onCancellationRequested(()=>{this._resolveCache=void 0,this._isResolved=!1});this._resolveCache=Promise.resolve(this.provider.resolveCompletionItem(this.completion,e)).then(i=>{Object.assign(this.completion,i),this._isResolved=!0,t.dispose()},i=>{jn(i)&&(this._resolveCache=void 0,this._isResolved=!1)})}return this._resolveCache})}},Za=class{constructor(e=2,t=new Set,i=new Set,n=!0){this.snippetSortOrder=e,this.kindFilter=t,this.providerFilter=i,this.showDeprecated=n}};Za.default=new Za;var tc;function kw(){return tc}var Lw=class{constructor(e,t,i,n){this.items=e,this.needsClipboard=t,this.durations=i,this.disposable=n}};function cy(s,e,t=Za.default,i={triggerKind:0},n=ge.None){return ic(this,void 0,void 0,function*(){let o=new on(!0);e=e.clone();let r=s.getWordAtPosition(e),a=r?new b(e.lineNumber,r.startColumn,e.lineNumber,r.endColumn):b.fromPositions(e),l={replace:a,insert:a.setEndPosition(e.lineNumber,e.column)},c=[],d=new R,h=[],p=!1,m=(v,_,w)=>{var A,M,j;let V=!1;if(!_)return V;for(let ce of _.suggestions)if(!t.kindFilter.has(ce.kind)){if(!t.showDeprecated&&((A=ce==null?void 0:ce.tags)===null||A===void 0?void 0:A.includes(1)))continue;ce.range||(ce.range=l),ce.sortText||(ce.sortText=typeof ce.label=="string"?ce.label:ce.label.label),!p&&ce.insertTextRules&&ce.insertTextRules&4&&(p=Vo.guessNeedsClipboard(ce.insertText)),c.push(new Iw(e,ce,_,v)),V=!0}return yh(_)&&d.add(_),h.push({providerName:(M=v._debugDisplayName)!==null&&M!==void 0?M:"unkown_provider",elapsedProvider:(j=_.duration)!==null&&j!==void 0?j:-1,elapsedOverall:w.elapsed()}),V},f=(()=>ic(this,void 0,void 0,function*(){if(!tc||t.kindFilter.has(27)||t.providerFilter.size>0&&!t.providerFilter.has(tc))return;let v=new on(!0),_=yield tc.provideCompletionItems(s,e,i,n);m(tc,_,v)}))();for(let v of vo.orderedGroups(s)){let _=!1;if(yield Promise.all(v.map(w=>ic(this,void 0,void 0,function*(){if(!(t.providerFilter.size>0&&!t.providerFilter.has(w)))try{let A=new on(!0),M=yield w.provideCompletionItems(s,e,i,n);_=m(w,M,A)||_}catch(A){Ue(A)}}))),_||n.isCancellationRequested)break}return yield f,n.isCancellationRequested?(d.dispose(),Promise.reject(gh())):new Lw(c.sort(uy(t.snippetSortOrder)),p,{entries:h,elapsed:o.elapsed()},d)})}function hy(s,e){if(s.sortTextLow&&e.sortTextLow){if(s.sortTextLow<e.sortTextLow)return-1;if(s.sortTextLow>e.sortTextLow)return 1}return s.completion.label<e.completion.label?-1:s.completion.label>e.completion.label?1:s.completion.kind-e.completion.kind}function o0(s,e){if(s.completion.kind!==e.completion.kind){if(s.completion.kind===27)return-1;if(e.completion.kind===27)return 1}return hy(s,e)}function r0(s,e){if(s.completion.kind!==e.completion.kind){if(s.completion.kind===27)return 1;if(e.completion.kind===27)return-1}return hy(s,e)}var fp=new Map;fp.set(0,o0);fp.set(2,r0);fp.set(1,hy);function uy(s){return fp.get(s)}Pe.registerCommand("_executeCompletionItemProvider",(s,...e)=>ic(void 0,void 0,void 0,function*(){let[t,i,n,o]=e;qe(_e.isUri(t)),qe(U.isIPosition(i)),qe(typeof n=="string"||!n),qe(typeof o=="number"||!o);let r=yield s.get(Gt).createModelReference(t);try{let a={incomplete:!1,suggestions:[]},l=[],c=yield cy(r.object.textEditorModel,U.lift(i),void 0,{triggerCharacter:n,triggerKind:n?1:0});for(let d of c.items)l.length<(o!=null?o:0)&&l.push(d.resolve(ge.None)),a.incomplete=a.incomplete||d.container.incomplete,a.suggestions.push(d.completion);try{return yield Promise.all(l),a}finally{setTimeout(()=>c.disposable.dispose(),100)}}finally{r.dispose()}}));var dy=new class{constructor(){this.onlyOnceSuggestions=[]}provideCompletionItems(){let e={suggestions:this.onlyOnceSuggestions.slice(0)};return this.onlyOnceSuggestions.length=0,e}};vo.register("*",dy);function Pw(s,e){setTimeout(()=>{var t;dy.onlyOnceSuggestions.push(...e),(t=s.getContribution("editor.contrib.suggestController"))===null||t===void 0||t.triggerSuggest(new Set().add(dy))},0)}Q();Ee();Ph();var s0=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Mw=function(s,e){return function(t,i){e(t,i,s)}},Dw={overwriteBefore:0,overwriteAfter:0,undoStopBefore:!0,undoStopAfter:!0,adjustWhitespace:!0,clipboardText:void 0,overtypingCapturer:void 0},Tt=class nc{constructor(e,t,i){this._editor=e,this._logService=t,this._snippetListener=new R,this._modelVersionId=-1,this._inSnippet=nc.InSnippetMode.bindTo(i),this._hasNextTabstop=nc.HasNextTabstop.bindTo(i),this._hasPrevTabstop=nc.HasPrevTabstop.bindTo(i)}static get(e){return e.getContribution(nc.ID)}dispose(){var e;this._inSnippet.reset(),this._hasPrevTabstop.reset(),this._hasNextTabstop.reset(),(e=this._session)===null||e===void 0||e.dispose(),this._snippetListener.dispose()}insert(e,t){try{this._doInsert(e,typeof t=="undefined"?Dw:Object.assign(Object.assign({},Dw),t))}catch(i){this.cancel(),this._logService.error(i),this._logService.error("snippet_error"),this._logService.error("insert_template=",e),this._logService.error("existing_template=",this._session?this._session._logInfo():"<no_session>")}}_doInsert(e,t){!this._editor.hasModel()||(this._snippetListener.clear(),t.undoStopBefore&&this._editor.getModel().pushStackElement(),this._session?this._session.merge(e,t):(this._modelVersionId=this._editor.getModel().getAlternativeVersionId(),this._session=new Ji(this._editor,e,t),this._session.insert()),t.undoStopAfter&&this._editor.getModel().pushStackElement(),this._updateState(),this._snippetListener.add(this._editor.onDidChangeModelContent(i=>i.isFlush&&this.cancel())),this._snippetListener.add(this._editor.onDidChangeModel(()=>this.cancel())),this._snippetListener.add(this._editor.onDidChangeCursorSelection(()=>this._updateState())))}_updateState(){if(!(!this._session||!this._editor.hasModel())){if(this._modelVersionId===this._editor.getModel().getAlternativeVersionId())return this.cancel();if(!this._session.hasPlaceholder)return this.cancel();if(this._session.isAtLastPlaceholder||!this._session.isSelectionWithinPlaceholders())return this._editor.getModel().pushStackElement(),this.cancel();this._inSnippet.set(!0),this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder),this._hasNextTabstop.set(!this._session.isAtLastPlaceholder),this._handleChoice()}}_handleChoice(){if(!this._session||!this._editor.hasModel()){this._currentChoice=void 0;return}let{choice:e}=this._session;if(!e){this._currentChoice=void 0;return}if(this._currentChoice!==e){this._currentChoice=e,this._editor.setSelections(this._editor.getSelections().map(i=>X.fromPositions(i.getStartPosition())));let[t]=e.options;Pw(this._editor,e.options.map((i,n)=>({kind:13,label:i.value,insertText:i.value,sortText:"a".repeat(n+1),range:b.fromPositions(this._editor.getPosition(),this._editor.getPosition().delta(0,t.value.length))})))}}finish(){for(;this._inSnippet.get();)this.next()}cancel(e=!1){var t;this._inSnippet.reset(),this._hasPrevTabstop.reset(),this._hasNextTabstop.reset(),this._snippetListener.clear(),(t=this._session)===null||t===void 0||t.dispose(),this._session=void 0,this._modelVersionId=-1,e&&this._editor.setSelections([this._editor.getSelection()])}prev(){this._session&&this._session.prev(),this._updateState()}next(){this._session&&this._session.next(),this._updateState()}isInSnippet(){return Boolean(this._inSnippet.get())}};Tt.ID="snippetController2";Tt.InSnippetMode=new pe("inSnippetMode",!1,u("inSnippetMode","Whether the editor in current in snippet mode"));Tt.HasNextTabstop=new pe("hasNextTabstop",!1,u("hasNextTabstop","Whether there is a next tab stop when in snippet mode"));Tt.HasPrevTabstop=new pe("hasPrevTabstop",!1,u("hasPrevTabstop","Whether there is a previous tab stop when in snippet mode"));Tt=s0([Mw(1,pr),Mw(2,ie)],Tt);J(Tt.ID,Tt);var yp=ct.bindToContribution(Tt.get);$(new yp({id:"jumpToNextSnippetPlaceholder",precondition:O.and(Tt.InSnippetMode,Tt.HasNextTabstop),handler:s=>s.next(),kbOpts:{weight:100+30,kbExpr:S.editorTextFocus,primary:2}}));$(new yp({id:"jumpToPrevSnippetPlaceholder",precondition:O.and(Tt.InSnippetMode,Tt.HasPrevTabstop),handler:s=>s.prev(),kbOpts:{weight:100+30,kbExpr:S.editorTextFocus,primary:1026}}));$(new yp({id:"leaveSnippet",precondition:Tt.InSnippetMode,handler:s=>s.cancel(!0),kbOpts:{weight:100+30,kbExpr:S.editorTextFocus,primary:9,secondary:[1033]}}));$(new yp({id:"acceptSnippet",precondition:Tt.InSnippetMode,handler:s=>s.finish()}));ke();B();ga();Re();kn();ts();Be();var a0=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Rw=function(s,e){return function(t,i){e(t,i,s)}},Sp=class{constructor(e){this.name=e}select(e,t,i){if(i.length===0)return 0;let n=i[0].score[0];for(let o=0;o<i.length;o++){let{score:r,completion:a}=i[o];if(r[0]!==n)break;if(a.preselect)return o}return 0}},py=class extends Sp{constructor(){super("first")}memorize(e,t,i){}toJSON(){}fromJSON(){}},Aw=class extends Sp{constructor(){super("recentlyUsed");this._cache=new Un(300,.66),this._seq=0}memorize(e,t,i){let n=`${e.getLanguageId()}/${i.textLabel}`;this._cache.set(n,{touch:this._seq++,type:i.completion.kind,insertText:i.completion.insertText})}select(e,t,i){if(i.length===0)return 0;let n=e.getLineContent(t.lineNumber).substr(t.column-10,t.column-1);if(/\s$/.test(n))return super.select(e,t,i);let o=i[0].score[0],r=-1,a=-1,l=-1;for(let c=0;c<i.length&&i[c].score[0]===o;c++){let d=`${e.getLanguageId()}/${i[c].textLabel}`,h=this._cache.peek(d);if(h&&h.touch>l&&h.type===i[c].completion.kind&&h.insertText===i[c].completion.insertText&&(l=h.touch,a=c),i[c].completion.preselect&&r===-1)return r=c}return a!==-1?a:r!==-1?r:0}toJSON(){return this._cache.toJSON()}fromJSON(e){this._cache.clear();let t=0;for(let[i,n]of e)n.touch=t,n.type=typeof n.type=="number"?n.type:Gl.fromString(n.type),this._cache.set(i,n);this._seq=this._cache.size}},Fw=class extends Sp{constructor(){super("recentlyUsedByPrefix");this._trie=LS.forStrings(),this._seq=0}memorize(e,t,i){let{word:n}=e.getWordUntilPosition(t),o=`${e.getLanguageId()}/${n}`;this._trie.set(o,{type:i.completion.kind,insertText:i.completion.insertText,touch:this._seq++})}select(e,t,i){let{word:n}=e.getWordUntilPosition(t);if(!n)return super.select(e,t,i);let o=`${e.getLanguageId()}/${n}`,r=this._trie.get(o);if(r||(r=this._trie.findSubstr(o)),r)for(let a=0;a<i.length;a++){let{kind:l,insertText:c}=i[a].completion;if(l===r.type&&c===r.insertText)return a}return super.select(e,t,i)}toJSON(){let e=[];return this._trie.forEach((t,i)=>e.push([i,t])),e.sort((t,i)=>-(t[1].touch-i[1].touch)).forEach((t,i)=>t[1].touch=i),e.slice(0,200)}fromJSON(e){if(this._trie.clear(),e.length>0){this._seq=e[0][1].touch+1;for(let[t,i]of e)i.type=typeof i.type=="number"?i.type:Gl.fromString(i.type),this._trie.set(t,i)}}},oc=class bp{constructor(e,t){this._storageService=e,this._configService=t,this._disposables=new R,this._persistSoon=new $e(()=>this._saveState(),500),this._disposables.add(e.onWillSaveState(i=>{i.reason===Cu.SHUTDOWN&&this._saveState()}))}dispose(){this._disposables.dispose(),this._persistSoon.dispose()}memorize(e,t,i){this._withStrategy(e,t).memorize(e,t,i),this._persistSoon.schedule()}select(e,t,i){return this._withStrategy(e,t).select(e,t,i)}_withStrategy(e,t){var i;let n=this._configService.getValue("editor.suggestSelection",{overrideIdentifier:e.getLanguageIdAtPosition(t.lineNumber,t.column),resource:e.uri});if(((i=this._strategy)===null||i===void 0?void 0:i.name)!==n){this._saveState();let o=bp._strategyCtors.get(n)||py;this._strategy=new o;try{let a=this._configService.getValue("editor.suggest.shareSuggestSelections")?0:1,l=this._storageService.get(`${bp._storagePrefix}/${n}`,a);l&&this._strategy.fromJSON(JSON.parse(l))}catch(r){}}return this._strategy}_saveState(){if(this._strategy){let t=this._configService.getValue("editor.suggest.shareSuggestSelections")?0:1,i=JSON.stringify(this._strategy);this._storageService.store(`${bp._storagePrefix}/${this._strategy.name}`,i,t,1)}}};oc._strategyCtors=new Map([["recentlyUsedByPrefix",Fw],["recentlyUsed",Aw],["first",py]]);oc._storagePrefix="suggest/memories";oc=a0([Rw(0,li),Rw(1,it)],oc);var my=Fi("ISuggestMemories");Ni(my,oc,!0);Ee();var l0=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},d0=function(s,e){return function(t,i){e(t,i,s)}},Ja=class Nw{constructor(e,t){this._editor=e,this._enabled=!1,this._ckAtEnd=Nw.AtEnd.bindTo(t),this._configListener=this._editor.onDidChangeConfiguration(i=>i.hasChanged(111)&&this._update()),this._update()}dispose(){var e;this._configListener.dispose(),(e=this._selectionListener)===null||e===void 0||e.dispose(),this._ckAtEnd.reset()}_update(){let e=this._editor.getOption(111)==="on";if(this._enabled!==e)if(this._enabled=e,this._enabled){let t=()=>{if(!this._editor.hasModel()){this._ckAtEnd.set(!1);return}let i=this._editor.getModel(),n=this._editor.getSelection(),o=i.getWordAtPosition(n.getStartPosition());if(!o){this._ckAtEnd.set(!1);return}this._ckAtEnd.set(o.endColumn===n.getStartPosition().column)};this._selectionListener=this._editor.onDidChangeCursorSelection(t),t()}else this._selectionListener&&(this._ckAtEnd.reset(),this._selectionListener.dispose(),this._selectionListener=void 0)}};Ja.AtEnd=new pe("atEndOfWord",!1);Ja=l0([d0(1,ie)],Ja);Q();ri();_t();Ee();Be();Ql();Ph();Ee();var c0=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},h0=function(s,e){return function(t,i){e(t,i,s)}},Mr=class vp{constructor(e,t){this._editor=e,this._index=0,this._ckOtherSuggestions=vp.OtherSuggestions.bindTo(t)}dispose(){this.reset()}reset(){var e;this._ckOtherSuggestions.reset(),(e=this._listener)===null||e===void 0||e.dispose(),this._model=void 0,this._acceptNext=void 0,this._ignore=!1}set({model:e,index:t},i){if(e.items.length===0){this.reset();return}if(vp._moveIndex(!0,e,t)===t){this.reset();return}this._acceptNext=i,this._model=e,this._index=t,this._listener=this._editor.onDidChangeCursorPosition(()=>{this._ignore||this.reset()}),this._ckOtherSuggestions.set(!0)}static _moveIndex(e,t,i){let n=i;for(;n=(n+t.items.length+(e?1:-1))%t.items.length,!(n===i||!t.items[n].completion.additionalTextEdits););return n}next(){this._move(!0)}prev(){this._move(!1)}_move(e){if(!!this._model)try{this._ignore=!0,this._index=vp._moveIndex(e,this._model,this._index),this._acceptNext({index:this._index,item:this._model.items[this._index],model:this._model})}finally{this._ignore=!1}}};Mr.OtherSuggestions=new pe("hasOtherSuggestions",!1);Mr=c0([h0(1,ie)],Mr);St();B();Om();var gy=class{constructor(e,t,i){this._disposables=new R,this._disposables.add(t.onDidShow(()=>this._onItem(t.getFocusedItem()))),this._disposables.add(t.onDidFocus(this._onItem,this)),this._disposables.add(t.onDidHide(this.reset,this)),this._disposables.add(e.onWillType(n=>{if(this._active&&!t.isFrozen()){let o=n.charCodeAt(n.length-1);this._active.acceptCharacters.has(o)&&e.getOption(0)&&i(this._active.item)}}))}_onItem(e){if(!e||!Pt(e.item.completion.commitCharacters)){this.reset();return}if(this._active&&this._active.item.item===e.item)return;let t=new xo;for(let i of e.item.completion.commitCharacters)i.length>0&&t.add(i.charCodeAt(0));this._active={acceptCharacters:t,item:e}}reset(){this._active=void 0}dispose(){this._disposables.dispose()}};ke();ut();Le();De();B();Ye();Mt();Re();du();St();ee();cS();tt();ee();var u0=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},ci=class{provideSelectionRanges(e,t){return u0(this,void 0,void 0,function*(){let i=[];for(let n of t){let o=[];i.push(o);let r=new Map;yield new Promise(a=>ci._bracketsRightYield(a,0,e,n,r)),yield new Promise(a=>ci._bracketsLeftYield(a,0,e,n,r,o))}return i})}static _bracketsRightYield(e,t,i,n,o){let r=new Map,a=Date.now();for(;;){if(t>=ci._maxRounds){e();break}if(!n){e();break}let l=i.bracketPairs.findNextBracket(n);if(!l){e();break}if(Date.now()-a>ci._maxDuration){setTimeout(()=>ci._bracketsRightYield(e,t+1,i,n,o));break}let d=l.close[0];if(l.isOpen){let h=r.has(d)?r.get(d):0;r.set(d,h+1)}else{let h=r.has(d)?r.get(d):0;if(h-=1,r.set(d,Math.max(0,h)),h<0){let p=o.get(d);p||(p=new bh,o.set(d,p)),p.push(l.range)}}n=l.range.getEndPosition()}}static _bracketsLeftYield(e,t,i,n,o,r){let a=new Map,l=Date.now();for(;;){if(t>=ci._maxRounds&&o.size===0){e();break}if(!n){e();break}let c=i.bracketPairs.findPrevBracket(n);if(!c){e();break}if(Date.now()-l>ci._maxDuration){setTimeout(()=>ci._bracketsLeftYield(e,t+1,i,n,o,r));break}let h=c.close[0];if(c.isOpen){let p=a.has(h)?a.get(h):0;if(p-=1,a.set(h,Math.max(0,p)),p<0){let m=o.get(h);if(m){let f=m.shift();m.size===0&&o.delete(h);let v=b.fromPositions(c.range.getEndPosition(),f.getStartPosition()),_=b.fromPositions(c.range.getStartPosition(),f.getEndPosition());r.push({range:v}),r.push({range:_}),ci._addBracketLeading(i,_,r)}}}else{let p=a.has(h)?a.get(h):0;a.set(h,p+1)}n=c.range.getStartPosition()}}static _addBracketLeading(e,t,i){if(t.startLineNumber===t.endLineNumber)return;let n=t.startLineNumber,o=e.getLineFirstNonWhitespaceColumn(n);o!==0&&o!==t.startColumn&&(i.push({range:b.fromPositions(new U(n,o),t.getEndPosition())}),i.push({range:b.fromPositions(new U(n,1),t.getEndPosition())}));let r=n-1;if(r>0){let a=e.getLineFirstNonWhitespaceColumn(r);a===t.startColumn&&a!==e.getLineLastNonWhitespaceColumn(r)&&(i.push({range:b.fromPositions(new U(r,a),t.getEndPosition())}),i.push({range:b.fromPositions(new U(r,1),t.getEndPosition())}))}}};ci._maxDuration=30;ci._maxRounds=2;var p0=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},bn=class{static create(e,t){return p0(this,void 0,void 0,function*(){if(!t.getOption(106).localityBonus||!t.hasModel())return bn.None;let i=t.getModel(),n=t.getPosition();if(!e.canComputeWordRanges(i.uri))return bn.None;let[o]=yield new ci().provideSelectionRanges(i,[n]);if(o.length===0)return bn.None;let r=yield e.computeWordRanges(i.uri,o[0].range);if(!r)return bn.None;let a=i.getWordUntilPosition(n);return delete r[a.word],new class extends bn{distance(l,c){if(!n.equals(t.getPosition()))return 0;if(c.kind===17)return 2<<20;let d=typeof c.label=="string"?c.label:c.label.label,h=r[d];if(eS(h))return 2<<20;let p=ah(h,b.fromPositions(l),b.compareRangesUsingStarts),m=p>=0?h[p]:h[Math.max(0,~p-1)],f=o.length;for(let v of o){if(!b.containsRange(v.range,m))break;f-=1}return f}}})}};bn.None=new class extends bn{distance(){return 0}};kn();Ee();Ph();ed();St();Ye();var Go=class{constructor(e,t,i,n,o,r,a){this.clipboardText=a,this._snippetCompareFn=Go._compareCompletionItems,this._items=e,this._column=t,this._wordDistance=n,this._options=o,this._refilterKind=1,this._lineContext=i,r==="top"?this._snippetCompareFn=Go._compareCompletionItemsSnippetsUp:r==="bottom"&&(this._snippetCompareFn=Go._compareCompletionItemsSnippetsDown)}get lineContext(){return this._lineContext}set lineContext(e){(this._lineContext.leadingLineContent!==e.leadingLineContent||this._lineContext.characterCountDelta!==e.characterCountDelta)&&(this._refilterKind=this._lineContext.characterCountDelta<e.characterCountDelta&&this._filteredItems?2:1,this._lineContext=e)}get items(){return this._ensureCachedState(),this._filteredItems}get allProvider(){return this._ensureCachedState(),this._providerInfo.keys()}get incomplete(){this._ensureCachedState();let e=new Set;for(let[t,i]of this._providerInfo)i&&e.add(t);return e}adopt(e){let t=[];for(let i=0;i<this._items.length;)e.has(this._items[i].provider)?i++:(t.push(this._items[i]),this._items[i]=this._items[this._items.length-1],this._items.pop());return this._refilterKind=1,t}get stats(){return this._ensureCachedState(),this._stats}_ensureCachedState(){this._refilterKind!==0&&this._createCachedState()}_createCachedState(){this._providerInfo=new Map;let e=[],{leadingLineContent:t,characterCountDelta:i}=this._lineContext,n="",o="",r=this._refilterKind===1?this._items:this._filteredItems,a=[],l=!this._options.filterGraceful||r.length>2e3?mu:Wx;for(let c=0;c<r.length;c++){let d=r[c];if(d.isInvalid)continue;this._providerInfo.set(d.provider,Boolean(d.container.incomplete));let h=d.position.column-d.editStart.column,p=h+i-(d.position.column-this._column);if(n.length!==p&&(n=p===0?"":t.slice(-p),o=n.toLowerCase()),d.word=n,p===0)d.score=ps.Default;else{let m=0;for(;m<h;){let f=n.charCodeAt(m);if(f===32||f===9)m+=1;else break}if(m>=p)d.score=ps.Default;else if(typeof d.completion.filterText=="string"){let f=l(n,o,m,d.completion.filterText,d.filterTextLow,0,!1);if(!f)continue;vS(d.completion.filterText,d.textLabel)===0?d.score=f:(d.score=Hx(n,o,m,d.textLabel,d.labelLow,0),d.score[0]=f[0])}else{let f=l(n,o,m,d.textLabel,d.labelLow,0,!1);if(!f)continue;d.score=f}}d.idx=c,d.distance=this._wordDistance.distance(d.position,d.completion),a.push(d),e.push(d.textLabel.length)}this._filteredItems=a.sort(this._snippetCompareFn),this._refilterKind=0,this._stats={pLabelLen:e.length?Qb(e.length-.85,e,(c,d)=>c-d):0}}static _compareCompletionItems(e,t){return e.score[0]>t.score[0]?-1:e.score[0]<t.score[0]?1:e.distance<t.distance?-1:e.distance>t.distance?1:e.idx<t.idx?-1:e.idx>t.idx?1:0}static _compareCompletionItemsSnippetsDown(e,t){if(e.completion.kind!==t.completion.kind){if(e.completion.kind===27)return 1;if(t.completion.kind===27)return-1}return Go._compareCompletionItems(e,t)}static _compareCompletionItemsSnippetsUp(e,t){if(e.completion.kind!==t.completion.kind){if(e.completion.kind===27)return-1;if(t.completion.kind===27)return 1}return Go._compareCompletionItems(e,t)}};var m0=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Qa=function(s,e){return function(t,i){e(t,i,s)}},g0=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Ms=class{constructor(e,t,i,n){this.leadingLineContent=e.getLineContent(t.lineNumber).substr(0,t.column-1),this.leadingWord=e.getWordUntilPosition(t),this.lineNumber=t.lineNumber,this.column=t.column,this.auto=i,this.shy=n}static shouldAutoTrigger(e){if(!e.hasModel())return!1;let t=e.getModel(),i=e.getPosition();t.tokenizeIfCheap(i.lineNumber);let n=t.getWordAtPosition(i);return!(!n||n.endColumn!==i.column||!isNaN(Number(n.word)))}};function f0(s,e,t){if(!Boolean(e.getContextKeyValue("inlineSuggestionVisible")))return!0;let i=t.getValue("editor.inlineSuggest.allowQuickSuggestions");return i!==void 0?Boolean(i):!1}function y0(s,e,t){if(!Boolean(e.getContextKeyValue("inlineSuggestionVisible")))return!0;let i=t.getValue("editor.inlineSuggest.allowSuggestOnTriggerCharacters");return i!==void 0?Boolean(i):!1}var xp=class zw{constructor(e,t,i,n,o,r,a){this._editor=e,this._editorWorkerService=t,this._clipboardService=i,this._telemetryService=n,this._logService=o,this._contextKeyService=r,this._configurationService=a,this._toDispose=new R,this._quickSuggestDelay=10,this._triggerCharacterListener=new R,this._triggerQuickSuggest=new Ri,this._state=0,this._completionDisposables=new R,this._onDidCancel=new G,this._onDidTrigger=new G,this._onDidSuggest=new G,this.onDidCancel=this._onDidCancel.event,this.onDidTrigger=this._onDidTrigger.event,this.onDidSuggest=this._onDidSuggest.event,this._telemetryGate=0,this._currentSelection=this._editor.getSelection()||new X(1,1,1,1),this._toDispose.add(this._editor.onDidChangeModel(()=>{this._updateTriggerCharacters(),this.cancel()})),this._toDispose.add(this._editor.onDidChangeModelLanguage(()=>{this._updateTriggerCharacters(),this.cancel()})),this._toDispose.add(this._editor.onDidChangeConfiguration(()=>{this._updateTriggerCharacters(),this._updateQuickSuggest()})),this._toDispose.add(vo.onDidChange(()=>{this._updateTriggerCharacters(),this._updateActiveSuggestSession()}));let l=!1;this._toDispose.add(this._editor.onDidCompositionStart(()=>{l=!0})),this._toDispose.add(this._editor.onDidCompositionEnd(()=>{l=!1,this._onCompositionEnd()})),this._toDispose.add(this._editor.onDidChangeCursorSelection(c=>{l||this._onCursorChange(c)})),this._toDispose.add(this._editor.onDidChangeModelContent(()=>{l||this._refilterCompletionItems()})),this._updateTriggerCharacters(),this._updateQuickSuggest()}dispose(){vt(this._triggerCharacterListener),vt([this._onDidCancel,this._onDidSuggest,this._onDidTrigger,this._triggerQuickSuggest]),this._toDispose.dispose(),this._completionDisposables.dispose(),this.cancel()}_updateQuickSuggest(){this._quickSuggestDelay=this._editor.getOption(80),(isNaN(this._quickSuggestDelay)||!this._quickSuggestDelay&&this._quickSuggestDelay!==0||this._quickSuggestDelay<0)&&(this._quickSuggestDelay=10)}_updateTriggerCharacters(){if(this._triggerCharacterListener.clear(),this._editor.getOption(81)||!this._editor.hasModel()||!this._editor.getOption(109))return;let e=new Map;for(let i of vo.all(this._editor.getModel()))for(let n of i.triggerCharacters||[]){let o=e.get(n);o||(o=new Set,o.add(kw()),e.set(n,o)),o.add(i)}let t=i=>{if(!y0(this._editor,this._contextKeyService,this._configurationService)||Ms.shouldAutoTrigger(this._editor))return;if(!i){let r=this._editor.getPosition();i=this._editor.getModel().getLineContent(r.lineNumber).substr(0,r.column-1)}let n="";CS(i.charCodeAt(i.length-1))?xS(i.charCodeAt(i.length-2))&&(n=i.substr(i.length-2)):n=i.charAt(i.length-1);let o=e.get(n);if(o){let r=this._completionModel?{items:this._completionModel.adopt(o),clipboardText:this._completionModel.clipboardText}:void 0;this.trigger({auto:!0,shy:!1,triggerCharacter:n},Boolean(this._completionModel),o,r)}};this._triggerCharacterListener.add(this._editor.onDidType(t)),this._triggerCharacterListener.add(this._editor.onDidCompositionEnd(()=>t()))}get state(){return this._state}cancel(e=!1){var t;this._state!==0&&(this._triggerQuickSuggest.cancel(),(t=this._requestToken)===null||t===void 0||t.cancel(),this._requestToken=void 0,this._state=0,this._completionModel=void 0,this._context=void 0,this._onDidCancel.fire({retrigger:e}))}clear(){this._completionDisposables.clear()}_updateActiveSuggestSession(){this._state!==0&&(!this._editor.hasModel()||!vo.has(this._editor.getModel())?this.cancel():this.trigger({auto:this._state===2,shy:!1},!0))}_onCursorChange(e){if(!this._editor.hasModel())return;let t=this._currentSelection;if(this._currentSelection=this._editor.getSelection(),!e.selection.isEmpty()||e.reason!==0&&e.reason!==3||e.source!=="keyboard"&&e.source!=="deleteLeft"){this.cancel();return}this._state===0&&e.reason===0?(t.containsRange(this._currentSelection)||t.getEndPosition().isBeforeOrEqual(this._currentSelection.getPosition()))&&this._doTriggerQuickSuggest():this._state!==0&&e.reason===3&&this._refilterCompletionItems()}_onCompositionEnd(){this._state===0?this._doTriggerQuickSuggest():this._refilterCompletionItems()}_doTriggerQuickSuggest(){var e;this._editor.getOption(79)!==!1&&(this._editor.getOption(106).snippetsPreventQuickSuggestions&&((e=Tt.get(this._editor))===null||e===void 0?void 0:e.isInSnippet())||(this.cancel(),this._triggerQuickSuggest.cancelAndSet(()=>{if(this._state!==0||!Ms.shouldAutoTrigger(this._editor)||!this._editor.hasModel())return;let t=this._editor.getModel(),i=this._editor.getPosition(),n=this._editor.getOption(79);if(n!==!1){if(n!==!0){t.tokenizeIfCheap(i.lineNumber);let o=t.getLineTokens(i.lineNumber),r=o.getStandardTokenType(o.findTokenIndexAtOffset(Math.max(i.column-1-1,0)));if(!(n.other&&r===0||n.comments&&r===1||n.strings&&r===2))return}!f0(this._editor,this._contextKeyService,this._configurationService)||!vo.has(t)||this.trigger({auto:!0,shy:!1})}},this._quickSuggestDelay)))}_refilterCompletionItems(){Promise.resolve().then(()=>{if(this._state===0||!this._editor.hasModel())return;let e=this._editor.getModel(),t=this._editor.getPosition(),i=new Ms(e,t,this._state===2,!1);this._onNewContext(i)})}trigger(e,t=!1,i,n){var o;if(!this._editor.hasModel())return;let r=this._editor.getModel(),a=e.auto,l=new Ms(r,this._editor.getPosition(),a,e.shy);this.cancel(t),this._state=a?2:1,this._onDidTrigger.fire({auto:a,shy:e.shy,position:this._editor.getPosition()}),this._context=l;let c={triggerKind:(o=e.triggerKind)!==null&&o!==void 0?o:0};e.triggerCharacter&&(c={triggerKind:1,triggerCharacter:e.triggerCharacter}),this._requestToken=new Ft;let d=this._editor.getOption(101),h=1;switch(d){case"top":h=0;break;case"bottom":h=2;break}let{itemKind:p,showDeprecated:m}=zw._createSuggestFilter(this._editor),f=bn.create(this._editorWorkerService,this._editor),v=cy(r,this._editor.getPosition(),new Za(h,p,i,m),c,this._requestToken.token);Promise.all([v,f]).then(([_,w])=>g0(this,void 0,void 0,function*(){var A;if((A=this._requestToken)===null||A===void 0||A.dispose(),!this._editor.hasModel())return;let M=n==null?void 0:n.clipboardText;if(!M&&_.needsClipboard&&(M=yield this._clipboardService.readText()),this._state===0)return;let j=this._editor.getModel(),V=_.items;if(n){let Te=uy(h);V=V.concat(n.items).sort(Te)}let ce=new Ms(j,this._editor.getPosition(),a,e.shy);this._completionModel=new Go(V,this._context.column,{leadingLineContent:ce.leadingLineContent,characterCountDelta:ce.column-this._context.column},w,this._editor.getOption(106),this._editor.getOption(101),M),this._completionDisposables.add(_.disposable),this._onNewContext(ce),this._reportDurationsTelemetry(_.durations)})).catch(de)}_reportDurationsTelemetry(e){this._telemetryGate++%230===0&&setTimeout(()=>{this._telemetryService.publicLog2("suggest.durations.json",{data:JSON.stringify(e)}),this._logService.debug("suggest.durations.json",e)})}static _createSuggestFilter(e){let t=new Set;e.getOption(101)==="none"&&t.add(27);let n=e.getOption(106);return n.showMethods||t.add(0),n.showFunctions||t.add(1),n.showConstructors||t.add(2),n.showFields||t.add(3),n.showVariables||t.add(4),n.showClasses||t.add(5),n.showStructs||t.add(6),n.showInterfaces||t.add(7),n.showModules||t.add(8),n.showProperties||t.add(9),n.showEvents||t.add(10),n.showOperators||t.add(11),n.showUnits||t.add(12),n.showValues||t.add(13),n.showConstants||t.add(14),n.showEnums||t.add(15),n.showEnumMembers||t.add(16),n.showKeywords||t.add(17),n.showWords||t.add(18),n.showColors||t.add(19),n.showFiles||t.add(20),n.showReferences||t.add(21),n.showColors||t.add(22),n.showFolders||t.add(23),n.showTypeParameters||t.add(24),n.showSnippets||t.add(27),n.showUsers||t.add(25),n.showIssues||t.add(26),{itemKind:t,showDeprecated:n.showDeprecated}}_onNewContext(e){if(!!this._context){if(e.lineNumber!==this._context.lineNumber){this.cancel();return}if(pt(e.leadingLineContent)!==pt(this._context.leadingLineContent)){this.cancel();return}if(e.column<this._context.column){e.leadingWord.word?this.trigger({auto:this._context.auto,shy:!1},!0):this.cancel();return}if(!!this._completionModel){if(e.leadingWord.word.length!==0&&e.leadingWord.startColumn>this._context.leadingWord.startColumn){let t=new Set(vo.all(this._editor.getModel()));for(let n of this._completionModel.allProvider)t.delete(n);let i=this._completionModel.adopt(new Set);this.trigger({auto:this._context.auto,shy:!1},!0,t,{items:i,clipboardText:this._completionModel.clipboardText});return}if(e.column>this._context.column&&this._completionModel.incomplete.size>0&&e.leadingWord.word.length!==0){let{incomplete:t}=this._completionModel,i=this._completionModel.adopt(t);this.trigger({auto:this._state===2,shy:!1,triggerKind:2},!0,t,{items:i,clipboardText:this._completionModel.clipboardText})}else{let t=this._completionModel.lineContext,i=!1;if(this._completionModel.lineContext={leadingLineContent:e.leadingLineContent,characterCountDelta:e.column-this._context.column},this._completionModel.items.length===0){if(Ms.shouldAutoTrigger(this._editor)&&this._context.leadingWord.endColumn<e.leadingWord.startColumn){this.trigger({auto:this._context.auto,shy:!1},!0);return}if(this._context.auto){this.cancel();return}else if(this._completionModel.lineContext=t,i=this._completionModel.items.length>0,i&&e.leadingWord.word.length===0){this.cancel();return}}this._onDidSuggest.fire({completionModel:this._completionModel,auto:this._context.auto,shy:this._context.shy,isFrozen:i})}}}}};xp=m0([Qa(1,Lo),Qa(2,cs),Qa(3,Yn),Qa(4,pr),Qa(5,ie),Qa(6,it)],xp);B();var el=class{constructor(e,t){this._disposables=new R,this._lastOvertyped=[],this._empty=!0,this._disposables.add(e.onWillType(()=>{if(!this._empty||!e.hasModel())return;let i=e.getSelections(),n=i.length,o=!1;for(let a=0;a<n;a++)if(!i[a].isEmpty()){o=!0;break}if(!o)return;this._lastOvertyped=[];let r=e.getModel();for(let a=0;a<n;a++){let l=i[a];if(r.getValueLengthInRange(l)>el._maxSelectionLength)return;this._lastOvertyped[a]={value:r.getValueInRange(l),multiline:l.startLineNumber!==l.endLineNumber}}this._empty=!1})),this._disposables.add(t.onDidCancel(i=>{!this._empty&&!i.retrigger&&(this._empty=!0)}))}getLastOvertypedInfo(e){if(!this._empty&&e>=0&&e<this._lastOvertyped.length)return this._lastOvertyped[e]}dispose(){this._disposables.dispose()}};el._maxSelectionLength=51200;Ae();ke();Le();De();B();EP();Ye();Ae();B();Q();ri();Ee();Be();var b0=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},fy=function(s,e){return function(t,i){e(t,i,s)}},_p=class extends Ss{updateLabel(){let e=this._keybindingService.lookupKeybinding(this._action.id,this._contextKeyService);if(!e)return super.updateLabel();this.label&&(this.label.textContent=u("ddd","{0} ({1})",this._action.label,_p.symbolPrintEnter(e)))}static symbolPrintEnter(e){var t;return(t=e.getLabel())===null||t===void 0?void 0:t.replace(/\benter\b/gi,"\u23CE")}},Cp=class{constructor(e,t,i,n){this._menuService=i,this._contextKeyService=n,this._menuDisposables=new R,this.element=H(e,W(".suggest-status-bar"));let o=r=>r instanceof mr?t.createInstance(_p,r,void 0):void 0;this._leftActions=new ds(this.element,{actionViewItemProvider:o}),this._rightActions=new ds(this.element,{actionViewItemProvider:o}),this._leftActions.domNode.classList.add("left"),this._rightActions.domNode.classList.add("right")}dispose(){this._menuDisposables.dispose(),this.element.remove()}show(){let e=this._menuService.createMenu(so,this._contextKeyService),t=()=>{let i=[],n=[];for(let[o,r]of e.getActions())o==="left"?i.push(...r):n.push(...r);this._leftActions.clear(),this._leftActions.push(i),this._rightActions.clear(),this._rightActions.push(n)};this._menuDisposables.add(e.onDidChange(()=>t())),this._menuDisposables.add(e)}hide(){this._menuDisposables.clear()}};Cp=b0([fy(1,le),fy(2,Xn),fy(3,ie)],Cp);xi();Q();mt();Ne();var S0=q("symbolIcon.arrayForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.arrayForeground","The foreground color for array symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),v0=q("symbolIcon.booleanForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.booleanForeground","The foreground color for boolean symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),x0=q("symbolIcon.classForeground",{dark:"#EE9D28",light:"#D67E00",hc:"#EE9D28"},u("symbolIcon.classForeground","The foreground color for class symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),C0=q("symbolIcon.colorForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.colorForeground","The foreground color for color symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),_0=q("symbolIcon.constantForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.constantForeground","The foreground color for constant symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),w0=q("symbolIcon.constructorForeground",{dark:"#B180D7",light:"#652D90",hc:"#B180D7"},u("symbolIcon.constructorForeground","The foreground color for constructor symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),T0=q("symbolIcon.enumeratorForeground",{dark:"#EE9D28",light:"#D67E00",hc:"#EE9D28"},u("symbolIcon.enumeratorForeground","The foreground color for enumerator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),E0=q("symbolIcon.enumeratorMemberForeground",{dark:"#75BEFF",light:"#007ACC",hc:"#75BEFF"},u("symbolIcon.enumeratorMemberForeground","The foreground color for enumerator member symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),I0=q("symbolIcon.eventForeground",{dark:"#EE9D28",light:"#D67E00",hc:"#EE9D28"},u("symbolIcon.eventForeground","The foreground color for event symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),k0=q("symbolIcon.fieldForeground",{dark:"#75BEFF",light:"#007ACC",hc:"#75BEFF"},u("symbolIcon.fieldForeground","The foreground color for field symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),L0=q("symbolIcon.fileForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.fileForeground","The foreground color for file symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),P0=q("symbolIcon.folderForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.folderForeground","The foreground color for folder symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),M0=q("symbolIcon.functionForeground",{dark:"#B180D7",light:"#652D90",hc:"#B180D7"},u("symbolIcon.functionForeground","The foreground color for function symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),D0=q("symbolIcon.interfaceForeground",{dark:"#75BEFF",light:"#007ACC",hc:"#75BEFF"},u("symbolIcon.interfaceForeground","The foreground color for interface symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),R0=q("symbolIcon.keyForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.keyForeground","The foreground color for key symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),A0=q("symbolIcon.keywordForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.keywordForeground","The foreground color for keyword symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),F0=q("symbolIcon.methodForeground",{dark:"#B180D7",light:"#652D90",hc:"#B180D7"},u("symbolIcon.methodForeground","The foreground color for method symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),N0=q("symbolIcon.moduleForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.moduleForeground","The foreground color for module symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),z0=q("symbolIcon.namespaceForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.namespaceForeground","The foreground color for namespace symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),O0=q("symbolIcon.nullForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.nullForeground","The foreground color for null symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),H0=q("symbolIcon.numberForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.numberForeground","The foreground color for number symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),W0=q("symbolIcon.objectForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.objectForeground","The foreground color for object symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),B0=q("symbolIcon.operatorForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.operatorForeground","The foreground color for operator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),V0=q("symbolIcon.packageForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.packageForeground","The foreground color for package symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),G0=q("symbolIcon.propertyForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.propertyForeground","The foreground color for property symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),j0=q("symbolIcon.referenceForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.referenceForeground","The foreground color for reference symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),U0=q("symbolIcon.snippetForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.snippetForeground","The foreground color for snippet symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),$0=q("symbolIcon.stringForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.stringForeground","The foreground color for string symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),K0=q("symbolIcon.structForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.structForeground","The foreground color for struct symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),q0=q("symbolIcon.textForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.textForeground","The foreground color for text symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),X0=q("symbolIcon.typeParameterForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.typeParameterForeground","The foreground color for type parameter symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),Y0=q("symbolIcon.unitForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.unitForeground","The foreground color for unit symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),Z0=q("symbolIcon.variableForeground",{dark:"#75BEFF",light:"#007ACC",hc:"#75BEFF"},u("symbolIcon.variableForeground","The foreground color for variable symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));Me((s,e)=>{let t=s.getColor(S0);t&&e.addRule(`${K.symbolArray.cssSelector} { color: ${t}; }`);let i=s.getColor(v0);i&&e.addRule(`${K.symbolBoolean.cssSelector} { color: ${i}; }`);let n=s.getColor(x0);n&&e.addRule(`${K.symbolClass.cssSelector} { color: ${n}; }`);let o=s.getColor(F0);o&&e.addRule(`${K.symbolMethod.cssSelector} { color: ${o}; }`);let r=s.getColor(C0);r&&e.addRule(`${K.symbolColor.cssSelector} { color: ${r}; }`);let a=s.getColor(_0);a&&e.addRule(`${K.symbolConstant.cssSelector} { color: ${a}; }`);let l=s.getColor(w0);l&&e.addRule(`${K.symbolConstructor.cssSelector} { color: ${l}; }`);let c=s.getColor(T0);c&&e.addRule(`
			${K.symbolValue.cssSelector},${K.symbolEnum.cssSelector} { color: ${c}; }`);let d=s.getColor(E0);d&&e.addRule(`${K.symbolEnumMember.cssSelector} { color: ${d}; }`);let h=s.getColor(I0);h&&e.addRule(`${K.symbolEvent.cssSelector} { color: ${h}; }`);let p=s.getColor(k0);p&&e.addRule(`${K.symbolField.cssSelector} { color: ${p}; }`);let m=s.getColor(L0);m&&e.addRule(`${K.symbolFile.cssSelector} { color: ${m}; }`);let f=s.getColor(P0);f&&e.addRule(`${K.symbolFolder.cssSelector} { color: ${f}; }`);let v=s.getColor(M0);v&&e.addRule(`${K.symbolFunction.cssSelector} { color: ${v}; }`);let _=s.getColor(D0);_&&e.addRule(`${K.symbolInterface.cssSelector} { color: ${_}; }`);let w=s.getColor(R0);w&&e.addRule(`${K.symbolKey.cssSelector} { color: ${w}; }`);let A=s.getColor(A0);A&&e.addRule(`${K.symbolKeyword.cssSelector} { color: ${A}; }`);let M=s.getColor(N0);M&&e.addRule(`${K.symbolModule.cssSelector} { color: ${M}; }`);let j=s.getColor(z0);j&&e.addRule(`${K.symbolNamespace.cssSelector} { color: ${j}; }`);let V=s.getColor(O0);V&&e.addRule(`${K.symbolNull.cssSelector} { color: ${V}; }`);let ce=s.getColor(H0);ce&&e.addRule(`${K.symbolNumber.cssSelector} { color: ${ce}; }`);let Te=s.getColor(W0);Te&&e.addRule(`${K.symbolObject.cssSelector} { color: ${Te}; }`);let It=s.getColor(B0);It&&e.addRule(`${K.symbolOperator.cssSelector} { color: ${It}; }`);let Wt=s.getColor(V0);Wt&&e.addRule(`${K.symbolPackage.cssSelector} { color: ${Wt}; }`);let Bt=s.getColor(G0);Bt&&e.addRule(`${K.symbolProperty.cssSelector} { color: ${Bt}; }`);let nn=s.getColor(j0);nn&&e.addRule(`${K.symbolReference.cssSelector} { color: ${nn}; }`);let Sn=s.getColor(U0);Sn&&e.addRule(`${K.symbolSnippet.cssSelector} { color: ${Sn}; }`);let ti=s.getColor($0);ti&&e.addRule(`${K.symbolString.cssSelector} { color: ${ti}; }`);let mi=s.getColor(K0);mi&&e.addRule(`${K.symbolStruct.cssSelector} { color: ${mi}; }`);let vn=s.getColor(q0);vn&&e.addRule(`${K.symbolText.cssSelector} { color: ${vn}; }`);let er=s.getColor(X0);er&&e.addRule(`${K.symbolTypeParameter.cssSelector} { color: ${er}; }`);let $r=s.getColor(Y0);$r&&e.addRule(`${K.symbolUnit.cssSelector} { color: ${$r}; }`);let Kr=s.getColor(Z0);Kr&&e.addRule(`${K.symbolVariable.cssSelector} { color: ${Kr}; }`)});Q();Ee();Be();mt();Ne();Ae();De();B();var rc=class{constructor(){this._onDidWillResize=new G,this.onDidWillResize=this._onDidWillResize.event,this._onDidResize=new G,this.onDidResize=this._onDidResize.event,this._sashListener=new R,this._size=new lt(0,0),this._minSize=new lt(0,0),this._maxSize=new lt(Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER),this.domNode=document.createElement("div"),this._eastSash=new ko(this.domNode,{getVerticalSashLeft:()=>this._size.width},{orientation:0}),this._westSash=new ko(this.domNode,{getVerticalSashLeft:()=>0},{orientation:0}),this._northSash=new ko(this.domNode,{getHorizontalSashTop:()=>0},{orientation:1,orthogonalEdge:sg.North}),this._southSash=new ko(this.domNode,{getHorizontalSashTop:()=>this._size.height},{orientation:1,orthogonalEdge:sg.South}),this._northSash.orthogonalStartSash=this._westSash,this._northSash.orthogonalEndSash=this._eastSash,this._southSash.orthogonalStartSash=this._westSash,this._southSash.orthogonalEndSash=this._eastSash;let e,t=0,i=0;this._sashListener.add(ht.any(this._northSash.onDidStart,this._eastSash.onDidStart,this._southSash.onDidStart,this._westSash.onDidStart)(()=>{e===void 0&&(this._onDidWillResize.fire(),e=this._size,t=0,i=0)})),this._sashListener.add(ht.any(this._northSash.onDidEnd,this._eastSash.onDidEnd,this._southSash.onDidEnd,this._westSash.onDidEnd)(()=>{e!==void 0&&(e=void 0,t=0,i=0,this._onDidResize.fire({dimension:this._size,done:!0}))})),this._sashListener.add(this._eastSash.onDidChange(n=>{e&&(i=n.currentX-n.startX,this.layout(e.height+t,e.width+i),this._onDidResize.fire({dimension:this._size,done:!1,east:!0}))})),this._sashListener.add(this._westSash.onDidChange(n=>{e&&(i=-(n.currentX-n.startX),this.layout(e.height+t,e.width+i),this._onDidResize.fire({dimension:this._size,done:!1,west:!0}))})),this._sashListener.add(this._northSash.onDidChange(n=>{e&&(t=-(n.currentY-n.startY),this.layout(e.height+t,e.width+i),this._onDidResize.fire({dimension:this._size,done:!1,north:!0}))})),this._sashListener.add(this._southSash.onDidChange(n=>{e&&(t=n.currentY-n.startY,this.layout(e.height+t,e.width+i),this._onDidResize.fire({dimension:this._size,done:!1,south:!0}))})),this._sashListener.add(ht.any(this._eastSash.onDidReset,this._westSash.onDidReset)(n=>{this._preferredSize&&(this.layout(this._size.height,this._preferredSize.width),this._onDidResize.fire({dimension:this._size,done:!0}))})),this._sashListener.add(ht.any(this._northSash.onDidReset,this._southSash.onDidReset)(n=>{this._preferredSize&&(this.layout(this._preferredSize.height,this._size.width),this._onDidResize.fire({dimension:this._size,done:!0}))}))}dispose(){this._northSash.dispose(),this._southSash.dispose(),this._eastSash.dispose(),this._westSash.dispose(),this._sashListener.dispose(),this._onDidResize.dispose(),this._onDidWillResize.dispose(),this.domNode.remove()}enableSashes(e,t,i,n){this._northSash.state=e?3:0,this._eastSash.state=t?3:0,this._southSash.state=i?3:0,this._westSash.state=n?3:0}layout(e=this.size.height,t=this.size.width){let{height:i,width:n}=this._minSize,{height:o,width:r}=this._maxSize;e=Math.max(i,Math.min(o,e)),t=Math.max(n,Math.min(r,t));let a=new lt(t,e);lt.equals(a,this._size)||(this.domNode.style.height=e+"px",this.domNode.style.width=t+"px",this._size=a,this._northSash.layout(),this._eastSash.layout(),this._southSash.layout(),this._westSash.layout())}clearSashHoverState(){this._eastSash.clearSashHoverState(),this._westSash.clearSashHoverState(),this._northSash.clearSashHoverState(),this._southSash.clearSashHoverState()}get size(){return this._size}set maxSize(e){this._maxSize=e}get maxSize(){return this._maxSize}set minSize(e){this._minSize=e}get minSize(){return this._minSize}set preferredSize(e){this._preferredSize=e}get preferredSize(){return this._preferredSize}};Kl();Ae();xi();De();B();Q();Be();var J0=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Q0=function(s,e){return function(t,i){e(t,i,s)}};function sc(s){return!!s&&Boolean(s.completion.documentation||s.completion.detail&&s.completion.detail!==s.completion.label)}var wp=class{constructor(e,t){this._editor=e,this._onDidClose=new G,this.onDidClose=this._onDidClose.event,this._onDidChangeContents=new G,this.onDidChangeContents=this._onDidChangeContents.event,this._disposables=new R,this._renderDisposeable=new R,this._borderWidth=1,this._size=new lt(330,0),this.domNode=W(".suggest-details"),this.domNode.classList.add("no-docs"),this._markdownRenderer=t.createInstance(Ii,{editor:e}),this._body=W(".body"),this._scrollbar=new Na(this._body,{}),H(this.domNode,this._scrollbar.getDomNode()),this._disposables.add(this._scrollbar),this._header=H(this._body,W(".header")),this._close=H(this._header,W("span"+K.close.cssSelector)),this._close.title=u("details.close","Close"),this._type=H(this._header,W("p.type")),this._docs=H(this._body,W("p.docs")),this._configureFont(),this._disposables.add(this._editor.onDidChangeConfiguration(i=>{i.hasChanged(44)&&this._configureFont()}))}dispose(){this._disposables.dispose(),this._renderDisposeable.dispose()}_configureFont(){let e=this._editor.getOptions(),t=e.get(44),i=t.getMassagedFontFamily(kh?lr.fontFamily:null),n=e.get(107)||t.fontSize,o=e.get(108)||t.lineHeight,r=t.fontWeight,a=`${n}px`,l=`${o}px`;this.domNode.style.fontSize=a,this.domNode.style.lineHeight=`${o/n}`,this.domNode.style.fontWeight=r,this.domNode.style.fontFeatureSettings=t.fontFeatureSettings,this._type.style.fontFamily=i,this._close.style.height=l,this._close.style.width=l}getLayoutInfo(){let e=this._editor.getOption(108)||this._editor.getOption(44).lineHeight,t=this._borderWidth,i=t*2;return{lineHeight:e,borderWidth:t,borderHeight:i,verticalPadding:22,horizontalPadding:14}}renderLoading(){this._type.textContent=u("loading","Loading..."),this._docs.textContent="",this.domNode.classList.remove("no-docs","no-type"),this.layout(this.size.width,this.getLayoutInfo().lineHeight*2),this._onDidChangeContents.fire(this)}renderItem(e,t){var i,n;this._renderDisposeable.clear();let{detail:o,documentation:r}=e.completion;if(t){let a="";a+=`score: ${e.score[0]}
`,a+=`prefix: ${(i=e.word)!==null&&i!==void 0?i:"(no prefix)"}
`,a+=`word: ${e.completion.filterText?e.completion.filterText+" (filterText)":e.textLabel}
`,a+=`distance: ${e.distance} (localityBonus-setting)
`,a+=`index: ${e.idx}, based on ${e.completion.sortText&&`sortText: "${e.completion.sortText}"`||"label"}
`,a+=`commit_chars: ${(n=e.completion.commitCharacters)===null||n===void 0?void 0:n.join("")}
`,r=new ai().appendCodeblock("empty",a),o=`Provider: ${e.provider._debugDisplayName}`}if(!t&&!sc(e)){this.clearContents();return}if(this.domNode.classList.remove("no-docs","no-type"),o){let a=o.length>1e5?`${o.substr(0,1e5)}\u2026`:o;this._type.textContent=a,this._type.title=a,oi(this._type),this._type.classList.toggle("auto-wrap",!/\r?\n^\s+/gmi.test(a))}else _i(this._type),this._type.title="",Vt(this._type),this.domNode.classList.add("no-type");if(_i(this._docs),typeof r=="string")this._docs.classList.remove("markdown-docs"),this._docs.textContent=r;else if(r){this._docs.classList.add("markdown-docs"),_i(this._docs);let a=this._markdownRenderer.render(r);this._docs.appendChild(a.element),this._renderDisposeable.add(a),this._renderDisposeable.add(this._markdownRenderer.onDidRenderAsync(()=>{this.layout(this._size.width,this._type.clientHeight+this._docs.clientHeight),this._onDidChangeContents.fire(this)}))}this.domNode.style.userSelect="text",this.domNode.tabIndex=-1,this._close.onmousedown=a=>{a.preventDefault(),a.stopPropagation()},this._close.onclick=a=>{a.preventDefault(),a.stopPropagation(),this._onDidClose.fire()},this._body.scrollTop=0,this.layout(this._size.width,this._type.clientHeight+this._docs.clientHeight),this._onDidChangeContents.fire(this)}clearContents(){this.domNode.classList.add("no-docs"),this._type.textContent="",this._docs.textContent=""}get size(){return this._size}layout(e,t){let i=new lt(e,t);lt.equals(i,this._size)||(this._size=i,sv(this.domNode,e,t)),this._scrollbar.scanDomNode()}scrollDown(e=8){this._body.scrollTop+=e}scrollUp(e=8){this._body.scrollTop-=e}scrollTop(){this._body.scrollTop=0}scrollBottom(){this._body.scrollTop=this._body.scrollHeight}pageDown(){this.scrollDown(80)}pageUp(){this.scrollUp(80)}set borderWidth(e){this._borderWidth=e}get borderWidth(){return this._borderWidth}};wp=J0([Q0(1,le)],wp);var yy=class{constructor(e,t){this.widget=e,this._editor=t,this._disposables=new R,this._added=!1,this._preferAlignAtTop=!0,this._resizable=new rc,this._resizable.domNode.classList.add("suggest-details-container"),this._resizable.domNode.appendChild(e.domNode),this._resizable.enableSashes(!1,!0,!0,!1);let i,n,o=0,r=0;this._disposables.add(this._resizable.onDidWillResize(()=>{i=this._topLeft,n=this._resizable.size})),this._disposables.add(this._resizable.onDidResize(a=>{if(i&&n){this.widget.layout(a.dimension.width,a.dimension.height);let l=!1;a.west&&(r=n.width-a.dimension.width,l=!0),a.north&&(o=n.height-a.dimension.height,l=!0),l&&this._applyTopLeft({top:i.top+o,left:i.left+r})}a.done&&(i=void 0,n=void 0,o=0,r=0,this._userSize=a.dimension)})),this._disposables.add(this.widget.onDidChangeContents(()=>{var a;this._anchorBox&&this._placeAtAnchor(this._anchorBox,(a=this._userSize)!==null&&a!==void 0?a:this.widget.size,this._preferAlignAtTop)}))}dispose(){this._resizable.dispose(),this._disposables.dispose(),this.hide()}getId(){return"suggest.details"}getDomNode(){return this._resizable.domNode}getPosition(){return null}show(){this._added||(this._editor.addOverlayWidget(this),this.getDomNode().style.position="fixed",this._added=!0)}hide(e=!1){this._resizable.clearSashHoverState(),this._added&&(this._editor.removeOverlayWidget(this),this._added=!1,this._anchorBox=void 0,this._topLeft=void 0),e&&(this._userSize=void 0,this.widget.clearContents())}placeAtAnchor(e,t){var i;let n=e.getBoundingClientRect();this._anchorBox=n,this._preferAlignAtTop=t,this._placeAtAnchor(this._anchorBox,(i=this._userSize)!==null&&i!==void 0?i:this.widget.size,t)}_placeAtAnchor(e,t,i){var n;let o=Mh(document.body),r=this.widget.getLayoutInfo(),a=new lt(220,2*r.lineHeight),l=e.top,c=function(){let M=o.width-(e.left+e.width+r.borderWidth+r.horizontalPadding),j=-r.borderWidth+e.left+e.width,V=new lt(M,o.height-e.top-r.borderHeight-r.verticalPadding),ce=V.with(void 0,e.top+e.height-r.borderHeight-r.verticalPadding);return{top:l,left:j,fit:M-t.width,maxSizeTop:V,maxSizeBottom:ce,minSize:a.with(Math.min(M,a.width))}}(),d=function(){let M=e.left-r.borderWidth-r.horizontalPadding,j=Math.max(r.horizontalPadding,e.left-t.width-r.borderWidth),V=new lt(M,o.height-e.top-r.borderHeight-r.verticalPadding),ce=V.with(void 0,e.top+e.height-r.borderHeight-r.verticalPadding);return{top:l,left:j,fit:M-t.width,maxSizeTop:V,maxSizeBottom:ce,minSize:a.with(Math.min(M,a.width))}}(),h=function(){let M=e.left,j=-r.borderWidth+e.top+e.height,V=new lt(e.width-r.borderHeight,o.height-e.top-e.height-r.verticalPadding);return{top:j,left:M,fit:V.height-t.height,maxSizeBottom:V,maxSizeTop:V,minSize:a.with(V.width)}}(),p=[c,d,h],m=(n=p.find(M=>M.fit>=0))!==null&&n!==void 0?n:p.sort((M,j)=>j.fit-M.fit)[0],f=e.top+e.height-r.borderHeight,v,_=t.height,w=Math.max(m.maxSizeTop.height,m.maxSizeBottom.height);_>w&&(_=w);let A;i?_<=m.maxSizeTop.height?(v=!0,A=m.maxSizeTop):(v=!1,A=m.maxSizeBottom):_<=m.maxSizeBottom.height?(v=!1,A=m.maxSizeBottom):(v=!0,A=m.maxSizeTop),this._applyTopLeft({left:m.left,top:v?m.top:f-_}),this.getDomNode().style.position="fixed",this._resizable.enableSashes(!v,m===c,v,m!==c),this._resizable.minSize=m.minSize,this._resizable.maxSize=A,this._resizable.layout(_,Math.min(A.width,t.width)),this.widget.layout(this._resizable.size.width,this._resizable.size.height)}_applyTopLeft(e){this._topLeft=e,this.getDomNode().style.left=`${this._topLeft.left}px`,this.getDomNode().style.top=`${this._topLeft.top}px`}};Kl();Ae();St();xi();De();B();Xt();Re();Yl();Hi();ig();var zn;(function(s){s[s.FILE=0]="FILE",s[s.FOLDER=1]="FOLDER",s[s.ROOT_FOLDER=2]="ROOT_FOLDER"})(zn||(zn={}));function ac(s,e,t,i){let n=i===zn.ROOT_FOLDER?["rootfolder-icon"]:i===zn.FOLDER?["folder-icon"]:["file-icon"];if(t){let o;if(t.scheme===xt.data?o=dd.parseMetaData(t).get(dd.META_DATA_LABEL):o=Ow(tu(t).toLowerCase()),i===zn.FOLDER)n.push(`${o}-name-folder-icon`);else{if(o){if(n.push(`${o}-name-file-icon`),o.length<=255){let a=o.split(".");for(let l=1;l<a.length;l++)n.push(`${a.slice(l).join(".")}-ext-file-icon`)}n.push("ext-file-icon")}let r=eD(s,e,t);r&&n.push(`${Ow(r)}-lang-file-icon`)}}return n}function eD(s,e,t){if(!t)return null;let i=null;if(t.scheme===xt.data){let o=dd.parseMetaData(t).get(dd.META_DATA_MIME);o&&(i=e.getLanguageIdByMimeType(o))}else{let n=s.getModel(t);n&&(i=n.getLanguageId())}return i&&i!==za?i:e.guessLanguageIdByFilepathOrFirstLine(t)}function Ow(s){return s.replace(/[\11\12\14\15\40]/g,"/")}hr();rn();Q();Ne();var tD=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},by=function(s,e){return function(t,i){e(t,i,s)}},lc;function vy(s){return`suggest-aria-id:${s}`}var iD=Rt("suggest-more-info",K.chevronRight,u("suggestMoreInfoIcon","Icon for more information in the suggest widget.")),nD=new(lc=class Tp{extract(e,t){if(e.textLabel.match(Tp._regexStrict))return t[0]=e.textLabel,!0;if(e.completion.detail&&e.completion.detail.match(Tp._regexStrict))return t[0]=e.completion.detail,!0;if(typeof e.completion.documentation=="string"){let i=Tp._regexRelaxed.exec(e.completion.documentation);if(i&&(i.index===0||i.index+i[0].length===e.completion.documentation.length))return t[0]=i[0],!0}return!1}},lc._regexRelaxed=/(#([\da-fA-F]{3}){1,2}|(rgb|hsl)a\(\s*(\d{1,3}%?\s*,\s*){3}(1|0?\.\d+)\)|(rgb|hsl)\(\s*\d{1,3}%?(\s*,\s*\d{1,3}%?){2}\s*\))/,lc._regexStrict=new RegExp(`^${lc._regexRelaxed.source}$`,"i"),lc),Ep=class{constructor(e,t,i,n){this._editor=e,this._modelService=t,this._languageService=i,this._themeService=n,this._onDidToggleDetails=new G,this.onDidToggleDetails=this._onDidToggleDetails.event,this.templateId="suggestion"}dispose(){this._onDidToggleDetails.dispose()}renderTemplate(e){let t=Object.create(null);t.disposables=new R,t.root=e,t.root.classList.add("show-file-icons"),t.icon=H(e,W(".icon")),t.colorspan=H(t.icon,W("span.colorspan"));let i=H(e,W(".contents")),n=H(i,W(".main"));t.iconContainer=H(n,W(".icon-label.codicon")),t.left=H(n,W("span.left")),t.right=H(n,W("span.right")),t.iconLabel=new Su(t.left,{supportHighlights:!0,supportIcons:!0}),t.disposables.add(t.iconLabel),t.parametersLabel=H(t.left,W("span.signature-label")),t.qualifierLabel=H(t.left,W("span.qualifier-label")),t.detailsLabel=H(t.right,W("span.details-label")),t.readMore=H(t.right,W("span.readMore"+ot.asCSSSelector(iD))),t.readMore.title=u("readMore","Read More");let o=()=>{let r=this._editor.getOptions(),a=r.get(44),l=a.getMassagedFontFamily(kh?lr.fontFamily:null),c=a.fontFeatureSettings,d=r.get(107)||a.fontSize,h=r.get(108)||a.lineHeight,p=a.fontWeight,m=`${d}px`,f=`${h}px`;t.root.style.fontSize=m,t.root.style.fontWeight=p,n.style.fontFamily=l,n.style.fontFeatureSettings=c,n.style.lineHeight=f,t.icon.style.height=f,t.icon.style.width=f,t.readMore.style.height=f,t.readMore.style.width=f};return o(),t.disposables.add(this._editor.onDidChangeConfiguration(r=>{(r.hasChanged(44)||r.hasChanged(107)||r.hasChanged(108))&&o()})),t}renderElement(e,t,i){let{completion:n}=e;i.root.id=vy(t),i.colorspan.style.backgroundColor="";let o={labelEscapeNewLines:!0,matches:us(e.score)},r=[];if(n.kind===19&&nD.extract(e,r))i.icon.className="icon customcolor",i.iconContainer.className="icon hide",i.colorspan.style.backgroundColor=r[0];else if(n.kind===20&&this._themeService.getFileIconTheme().hasFileIcons){i.icon.className="icon hide",i.iconContainer.className="icon hide";let a=ac(this._modelService,this._languageService,_e.from({scheme:"fake",path:e.textLabel}),zn.FILE),l=ac(this._modelService,this._languageService,_e.from({scheme:"fake",path:n.detail}),zn.FILE);o.extraClasses=a.length>l.length?a:l}else n.kind===23&&this._themeService.getFileIconTheme().hasFolderIcons?(i.icon.className="icon hide",i.iconContainer.className="icon hide",o.extraClasses=dh([ac(this._modelService,this._languageService,_e.from({scheme:"fake",path:e.textLabel}),zn.FOLDER),ac(this._modelService,this._languageService,_e.from({scheme:"fake",path:n.detail}),zn.FOLDER)])):(i.icon.className="icon hide",i.iconContainer.className="",i.iconContainer.classList.add("suggest-icon",...Ch.asClassNameArray(Gl.toIcon(n.kind))));n.tags&&n.tags.indexOf(1)>=0&&(o.extraClasses=(o.extraClasses||[]).concat(["deprecated"]),o.matches=[]),i.iconLabel.setLabel(e.textLabel,void 0,o),typeof n.label=="string"?(i.parametersLabel.textContent="",i.detailsLabel.textContent=Sy(n.detail||""),i.root.classList.add("string-label")):(i.parametersLabel.textContent=Sy(n.label.detail||""),i.detailsLabel.textContent=Sy(n.label.description||""),i.root.classList.remove("string-label")),this._editor.getOption(106).showInlineDetails?oi(i.detailsLabel):Vt(i.detailsLabel),sc(e)?(i.right.classList.add("can-expand-details"),oi(i.readMore),i.readMore.onmousedown=a=>{a.stopPropagation(),a.preventDefault()},i.readMore.onclick=a=>{a.stopPropagation(),a.preventDefault(),this._onDidToggleDetails.fire()}):(i.right.classList.remove("can-expand-details"),Vt(i.readMore),i.readMore.onmousedown=null,i.readMore.onclick=null)}disposeTemplate(e){e.disposables.dispose()}};Ep=tD([by(1,Yt),by(2,ft),by(3,Nt)],Ep);function Sy(s){return s.replace(/\r\n|\r|\n/g,"")}var oD=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Ip=function(s,e){return function(t,i){e(t,i,s)}},rD=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},D$=q("editorSuggestWidget.background",{dark:cn,light:cn,hc:cn},u("editorSuggestWidgetBackground","Background color of the suggest widget.")),R$=q("editorSuggestWidget.border",{dark:Ea,light:Ea,hc:Ea},u("editorSuggestWidgetBorder","Border color of the suggest widget.")),xy=q("editorSuggestWidget.foreground",{dark:Gh,light:Gh,hc:Gh},u("editorSuggestWidgetForeground","Foreground color of the suggest widget.")),A$=q("editorSuggestWidget.selectedForeground",{dark:Uh,light:Uh,hc:Uh},u("editorSuggestWidgetSelectedForeground","Foreground color of the selected entry in the suggest widget.")),F$=q("editorSuggestWidget.selectedIconForeground",{dark:$h,light:$h,hc:$h},u("editorSuggestWidgetSelectedIconForeground","Icon foreground color of the selected entry in the suggest widget.")),sD=q("editorSuggestWidget.selectedBackground",{dark:Kh,light:Kh,hc:Kh},u("editorSuggestWidgetSelectedBackground","Background color of the selected entry in the suggest widget.")),N$=q("editorSuggestWidget.highlightForeground",{dark:br,light:br,hc:br},u("editorSuggestWidgetHighlightForeground","Color of the match highlights in the suggest widget.")),z$=q("editorSuggestWidget.focusHighlightForeground",{dark:jh,light:jh,hc:jh},u("editorSuggestWidgetFocusHighlightForeground","Color of the match highlights in the suggest widget when an item is focused.")),O$=q("editorSuggestWidgetStatus.foreground",{dark:si(xy,.5),light:si(xy,.5),hc:si(xy,.5)},u("editorSuggestWidgetStatusForeground","Foreground color of the suggest widget status.")),Hw=class{constructor(e,t){this._service=e,this._key=`suggestWidget.size/${t.getEditorType()}/${t instanceof Mn}`}restore(){var e;let t=(e=this._service.get(this._key,0))!==null&&e!==void 0?e:"";try{let i=JSON.parse(t);if(lt.is(i))return lt.lift(i)}catch(i){}}store(e){this._service.store(this._key,JSON.stringify(e),0,1)}reset(){this._service.remove(this._key,0)}},tl=class Cy{constructor(e,t,i,n,o){this.editor=e,this._storageService=t,this._state=0,this._isAuto=!1,this._ignoreFocusEvents=!1,this._forceRenderingAbove=!1,this._explainMode=!1,this._showTimeout=new Ri,this._disposables=new R,this._onDidSelect=new G,this._onDidFocus=new G,this._onDidHide=new G,this._onDidShow=new G,this.onDidSelect=this._onDidSelect.event,this.onDidFocus=this._onDidFocus.event,this.onDidHide=this._onDidHide.event,this.onDidShow=this._onDidShow.event,this._onDetailsKeydown=new G,this.onDetailsKeyDown=this._onDetailsKeydown.event,this.element=new rc,this.element.domNode.classList.add("editor-widget","suggest-widget"),this._contentWidget=new Ww(this,e),this._persistedSize=new Hw(t,e);class r{constructor(m,f,v=!1,_=!1){this.persistedSize=m,this.currentSize=f,this.persistHeight=v,this.persistWidth=_}}let a;this._disposables.add(this.element.onDidWillResize(()=>{this._contentWidget.lockPreference(),a=new r(this._persistedSize.restore(),this.element.size)})),this._disposables.add(this.element.onDidResize(p=>{var m,f,v,_;if(this._resize(p.dimension.width,p.dimension.height),a&&(a.persistHeight=a.persistHeight||!!p.north||!!p.south,a.persistWidth=a.persistWidth||!!p.east||!!p.west),!!p.done){if(a){let{itemHeight:w,defaultSize:A}=this.getLayoutInfo(),M=Math.round(w/2),{width:j,height:V}=this.element.size;(!a.persistHeight||Math.abs(a.currentSize.height-V)<=M)&&(V=(f=(m=a.persistedSize)===null||m===void 0?void 0:m.height)!==null&&f!==void 0?f:A.height),(!a.persistWidth||Math.abs(a.currentSize.width-j)<=M)&&(j=(_=(v=a.persistedSize)===null||v===void 0?void 0:v.width)!==null&&_!==void 0?_:A.width),this._persistedSize.store(new lt(j,V))}this._contentWidget.unlockPreference(),a=void 0}})),this._messageElement=H(this.element.domNode,W(".message")),this._listElement=H(this.element.domNode,W(".tree"));let l=o.createInstance(wp,this.editor);l.onDidClose(this.toggleDetails,this,this._disposables),this._details=new yy(l,this.editor);let c=()=>this.element.domNode.classList.toggle("no-icons",!this.editor.getOption(106).showIcons);c();let d=o.createInstance(Ep,this.editor);this._disposables.add(d),this._disposables.add(d.onDidToggleDetails(()=>this.toggleDetails())),this._list=new rC("SuggestWidget",this._listElement,{getHeight:p=>this.getLayoutInfo().itemHeight,getTemplateId:p=>"suggestion"},[d],{alwaysConsumeMouseWheel:!0,useShadows:!1,mouseSupport:!1,accessibilityProvider:{getRole:()=>"option",getWidgetAriaLabel:()=>u("suggest","Suggest"),getWidgetRole:()=>"listbox",getAriaLabel:p=>{let m=p.textLabel;if(typeof p.completion.label!="string"){let{detail:w,description:A}=p.completion.label;w&&A?m=u("label.full","{0}{1}, {2}",m,w,A):w?m=u("label.detail","{0}{1}",m,w):A&&(m=u("label.desc","{0}, {1}",m,A))}if(!p.isResolved||!this._isDetailsVisible())return m;let{documentation:f,detail:v}=p.completion,_=Ui("{0}{1}",v||"",f?typeof f=="string"?f:f.value:"");return u("ariaCurrenttSuggestionReadDetails","{0}, docs: {1}",m,_)}}}),this._status=o.createInstance(Cp,this.element.domNode);let h=()=>this.element.domNode.classList.toggle("with-status-bar",this.editor.getOption(106).showStatusBar);h(),this._disposables.add(jx(this._list,n,{listInactiveFocusBackground:sD,listInactiveFocusOutline:rs})),this._disposables.add(n.onDidColorThemeChange(p=>this._onThemeChange(p))),this._onThemeChange(n.getColorTheme()),this._disposables.add(this._list.onMouseDown(p=>this._onListMouseDownOrTap(p))),this._disposables.add(this._list.onTap(p=>this._onListMouseDownOrTap(p))),this._disposables.add(this._list.onDidChangeSelection(p=>this._onListSelection(p))),this._disposables.add(this._list.onDidChangeFocus(p=>this._onListFocus(p))),this._disposables.add(this.editor.onDidChangeCursorSelection(()=>this._onCursorSelectionChanged())),this._disposables.add(this.editor.onDidChangeConfiguration(p=>{p.hasChanged(106)&&(h(),c())})),this._ctxSuggestWidgetVisible=Ce.Visible.bindTo(i),this._ctxSuggestWidgetDetailsVisible=Ce.DetailsVisible.bindTo(i),this._ctxSuggestWidgetMultipleSuggestions=Ce.MultipleSuggestions.bindTo(i),this._disposables.add(zi(this._details.widget.domNode,"keydown",p=>{this._onDetailsKeydown.fire(p)})),this._disposables.add(this.editor.onMouseDown(p=>this._onEditorMouseDown(p)))}dispose(){var e;this._details.widget.dispose(),this._details.dispose(),this._list.dispose(),this._status.dispose(),this._disposables.dispose(),(e=this._loadingTimeout)===null||e===void 0||e.dispose(),this._showTimeout.dispose(),this._contentWidget.dispose(),this.element.dispose()}_onEditorMouseDown(e){this._details.widget.domNode.contains(e.target.element)?this._details.widget.domNode.focus():this.element.domNode.contains(e.target.element)&&this.editor.focus()}_onCursorSelectionChanged(){this._state!==0&&this._contentWidget.layout()}_onListMouseDownOrTap(e){typeof e.element=="undefined"||typeof e.index=="undefined"||(e.browserEvent.preventDefault(),e.browserEvent.stopPropagation(),this._select(e.element,e.index))}_onListSelection(e){e.elements.length&&this._select(e.elements[0],e.indexes[0])}_select(e,t){let i=this._completionModel;i&&(this._onDidSelect.fire({item:e,index:t,model:i}),this.editor.focus())}_onThemeChange(e){this._details.widget.borderWidth=e.type==="hc"?2:1}_onListFocus(e){var t;if(this._ignoreFocusEvents)return;if(!e.elements.length){this._currentSuggestionDetails&&(this._currentSuggestionDetails.cancel(),this._currentSuggestionDetails=void 0,this._focusedItem=void 0),this.editor.setAriaOptions({activeDescendant:void 0});return}if(!this._completionModel)return;let i=e.elements[0],n=e.indexes[0];i!==this._focusedItem&&((t=this._currentSuggestionDetails)===null||t===void 0||t.cancel(),this._currentSuggestionDetails=void 0,this._focusedItem=i,this._list.reveal(n),this._currentSuggestionDetails=Oe(o=>rD(this,void 0,void 0,function*(){let r=Zr(()=>{this._isDetailsVisible()&&this.showDetails(!0)},250);o.onCancellationRequested(()=>r.dispose());let a=yield i.resolve(o);return r.dispose(),a})),this._currentSuggestionDetails.then(()=>{n>=this._list.length||i!==this._list.element(n)||(this._ignoreFocusEvents=!0,this._list.splice(n,1,[i]),this._list.setFocus([n]),this._ignoreFocusEvents=!1,this._isDetailsVisible()?this.showDetails(!1):this.element.domNode.classList.remove("docs-side"),this.editor.setAriaOptions({activeDescendant:vy(n)}))}).catch(de)),this._onDidFocus.fire({item:i,index:n,model:this._completionModel})}_setState(e){if(this._state!==e)switch(this._state=e,this.element.domNode.classList.toggle("frozen",e===4),this.element.domNode.classList.remove("message"),e){case 0:Vt(this._messageElement,this._listElement,this._status.element),this._details.hide(!0),this._status.hide(),this._contentWidget.hide(),this._ctxSuggestWidgetVisible.reset(),this._ctxSuggestWidgetMultipleSuggestions.reset(),this._showTimeout.cancel(),this.element.domNode.classList.remove("visible"),this._list.splice(0,this._list.length),this._focusedItem=void 0,this._cappedHeight=void 0,this._explainMode=!1;break;case 1:this.element.domNode.classList.add("message"),this._messageElement.textContent=Cy.LOADING_MESSAGE,Vt(this._listElement,this._status.element),oi(this._messageElement),this._details.hide(),this._show(),this._focusedItem=void 0;break;case 2:this.element.domNode.classList.add("message"),this._messageElement.textContent=Cy.NO_SUGGESTIONS_MESSAGE,Vt(this._listElement,this._status.element),oi(this._messageElement),this._details.hide(),this._show(),this._focusedItem=void 0;break;case 3:Vt(this._messageElement),oi(this._listElement,this._status.element),this._show();break;case 4:Vt(this._messageElement),oi(this._listElement,this._status.element),this._show();break;case 5:Vt(this._messageElement),oi(this._listElement,this._status.element),this._details.show(),this._show();break}}_show(){this._status.show(),this._contentWidget.show(),this._layout(this._persistedSize.restore()),this._ctxSuggestWidgetVisible.set(!0),this._showTimeout.cancelAndSet(()=>{this.element.domNode.classList.add("visible"),this._onDidShow.fire(this)},100)}showTriggered(e,t){this._state===0&&(this._contentWidget.setPosition(this.editor.getPosition()),this._isAuto=!!e,this._isAuto||(this._loadingTimeout=Zr(()=>this._setState(1),t)))}showSuggestions(e,t,i,n){var o,r;if(this._contentWidget.setPosition(this.editor.getPosition()),(o=this._loadingTimeout)===null||o===void 0||o.dispose(),(r=this._currentSuggestionDetails)===null||r===void 0||r.cancel(),this._currentSuggestionDetails=void 0,this._completionModel!==e&&(this._completionModel=e),i&&this._state!==2&&this._state!==0){this._setState(4);return}let a=this._completionModel.items.length,l=a===0;if(this._ctxSuggestWidgetMultipleSuggestions.set(a>1),l){this._setState(n?0:2),this._completionModel=void 0;return}this._focusedItem=void 0,this._list.splice(0,this._list.length,this._completionModel.items),this._setState(i?4:3),this._list.reveal(t,0),this._list.setFocus([t]),this._layout(this.element.size),this._details.widget.domNode.classList.remove("focused")}selectNextPage(){switch(this._state){case 0:return!1;case 5:return this._details.widget.pageDown(),!0;case 1:return!this._isAuto;default:return this._list.focusNextPage(),!0}}selectNext(){switch(this._state){case 0:return!1;case 1:return!this._isAuto;default:return this._list.focusNext(1,!0),!0}}selectLast(){switch(this._state){case 0:return!1;case 5:return this._details.widget.scrollBottom(),!0;case 1:return!this._isAuto;default:return this._list.focusLast(),!0}}selectPreviousPage(){switch(this._state){case 0:return!1;case 5:return this._details.widget.pageUp(),!0;case 1:return!this._isAuto;default:return this._list.focusPreviousPage(),!0}}selectPrevious(){switch(this._state){case 0:return!1;case 1:return!this._isAuto;default:return this._list.focusPrevious(1,!0),!1}}selectFirst(){switch(this._state){case 0:return!1;case 5:return this._details.widget.scrollTop(),!0;case 1:return!this._isAuto;default:return this._list.focusFirst(),!0}}getFocusedItem(){if(this._state!==0&&this._state!==2&&this._state!==1&&this._completionModel)return{item:this._list.getFocusedElements()[0],index:this._list.getFocus()[0],model:this._completionModel}}toggleDetailsFocus(){this._state===5?(this._setState(3),this._details.widget.domNode.classList.remove("focused")):this._state===3&&this._isDetailsVisible()&&(this._setState(5),this._details.widget.domNode.classList.add("focused"))}toggleDetails(){this._isDetailsVisible()?(this._ctxSuggestWidgetDetailsVisible.set(!1),this._setDetailsVisible(!1),this._details.hide(),this.element.domNode.classList.remove("shows-details")):(sc(this._list.getFocusedElements()[0])||this._explainMode)&&(this._state===3||this._state===5||this._state===4)&&(this._ctxSuggestWidgetDetailsVisible.set(!0),this._setDetailsVisible(!0),this.showDetails(!1))}showDetails(e){this._details.show(),e?this._details.widget.renderLoading():this._details.widget.renderItem(this._list.getFocusedElements()[0],this._explainMode),this._positionDetails(),this.editor.focus(),this.element.domNode.classList.add("shows-details")}toggleExplainMode(){this._list.getFocusedElements()[0]&&(this._explainMode=!this._explainMode,this._isDetailsVisible()?this.showDetails(!1):this.toggleDetails())}resetPersistedSize(){this._persistedSize.reset()}hideWidget(){var e;(e=this._loadingTimeout)===null||e===void 0||e.dispose(),this._setState(0),this._onDidHide.fire(this),this.element.clearSashHoverState();let t=this._persistedSize.restore(),i=Math.ceil(this.getLayoutInfo().itemHeight*4.3);t&&t.height<i&&this._persistedSize.store(t.with(void 0,i))}isFrozen(){return this._state===4}_afterRender(e){if(e===null){this._isDetailsVisible()&&this._details.hide();return}this._state===2||this._state===1||(this._isDetailsVisible()&&this._details.show(),this._positionDetails())}_layout(e){var t,i,n;if(!this.editor.hasModel()||!this.editor.getDomNode())return;let o=Mh(document.body),r=this.getLayoutInfo();e||(e=r.defaultSize);let a=e.height,l=e.width;if(this._status.element.style.lineHeight=`${r.itemHeight}px`,this._state===2||this._state===1)a=r.itemHeight+r.borderHeight,l=r.defaultSize.width/2,this.element.enableSashes(!1,!1,!1,!1),this.element.minSize=this.element.maxSize=new lt(l,a),this._contentWidget.setPreference(2);else{let c=o.width-r.borderHeight-2*r.horizontalPadding;l>c&&(l=c);let d=this._completionModel?this._completionModel.stats.pLabelLen*r.typicalHalfwidthCharacterWidth:l,h=r.statusBarHeight+this._list.contentHeight+r.borderHeight,p=r.itemHeight+r.statusBarHeight,m=ni(this.editor.getDomNode()),f=this.editor.getScrolledVisiblePosition(this.editor.getPosition()),v=m.top+f.top+f.height,_=Math.min(o.height-v-r.verticalPadding,h),w=m.top+f.top-r.verticalPadding,A=Math.min(w,h),M=Math.min(Math.max(A,_)+r.borderHeight,h);a===((t=this._cappedHeight)===null||t===void 0?void 0:t.capped)&&(a=this._cappedHeight.wanted),a<p&&(a=p),a>M&&(a=M);let j=150;a>_||this._forceRenderingAbove&&w>j?(this._contentWidget.setPreference(1),this.element.enableSashes(!0,!0,!1,!1),M=A):(this._contentWidget.setPreference(2),this.element.enableSashes(!1,!0,!0,!1),M=_),this.element.preferredSize=new lt(d,r.defaultSize.height),this.element.maxSize=new lt(c,M),this.element.minSize=new lt(220,p),this._cappedHeight=a===h?{wanted:(n=(i=this._cappedHeight)===null||i===void 0?void 0:i.wanted)!==null&&n!==void 0?n:e.height,capped:a}:void 0}this._resize(l,a)}_resize(e,t){let{width:i,height:n}=this.element.maxSize;e=Math.min(i,e),t=Math.min(n,t);let{statusBarHeight:o}=this.getLayoutInfo();this._list.layout(t-o,e),this._listElement.style.height=`${t-o}px`,this.element.layout(t,e),this._contentWidget.layout(),this._positionDetails()}_positionDetails(){var e;this._isDetailsVisible()&&this._details.placeAtAnchor(this.element.domNode,((e=this._contentWidget.getPosition())===null||e===void 0?void 0:e.preference[0])===2)}getLayoutInfo(){let e=this.editor.getOption(44),t=kx(this.editor.getOption(108)||e.lineHeight,8,1e3),i=!this.editor.getOption(106).showStatusBar||this._state===2||this._state===1?0:t,n=this._details.widget.borderWidth,o=2*n;return{itemHeight:t,statusBarHeight:i,borderWidth:n,borderHeight:o,typicalHalfwidthCharacterWidth:e.typicalHalfwidthCharacterWidth,verticalPadding:22,horizontalPadding:14,defaultSize:new lt(430,i+12*t+o)}}_isDetailsVisible(){return this._storageService.getBoolean("expandSuggestionDocs",0,!1)}_setDetailsVisible(e){this._storageService.store("expandSuggestionDocs",e,0,0)}forceRenderingAbove(){this._forceRenderingAbove||(this._forceRenderingAbove=!0,this._layout(this._persistedSize.restore()))}stopForceRenderingAbove(){this._forceRenderingAbove=!1}};tl.LOADING_MESSAGE=u("suggestWidget.loading","Loading...");tl.NO_SUGGESTIONS_MESSAGE=u("suggestWidget.noSuggestions","No suggestions.");tl=oD([Ip(1,li),Ip(2,ie),Ip(3,Nt),Ip(4,le)],tl);var Ww=class{constructor(e,t){this._widget=e,this._editor=t,this.allowEditorOverflow=!0,this.suppressMouseDown=!1,this._preferenceLocked=!1,this._added=!1,this._hidden=!1}dispose(){this._added&&(this._added=!1,this._editor.removeContentWidget(this))}getId(){return"editor.widget.suggestWidget"}getDomNode(){return this._widget.element.domNode}show(){this._hidden=!1,this._added||(this._added=!0,this._editor.addContentWidget(this))}hide(){this._hidden||(this._hidden=!0,this.layout())}layout(){this._editor.layoutContentWidget(this)}getPosition(){return this._hidden||!this._position||!this._preference?null:{position:this._position,preference:[this._preference]}}beforeRender(){let{height:e,width:t}=this._widget.element.size,{borderWidth:i,horizontalPadding:n}=this._widget.getLayoutInfo();return new lt(t+2*i+n,e+2*i)}afterRender(e){this._widget._afterRender(e)}setPreference(e){this._preferenceLocked||(this._preference=e)}lockPreference(){this._preferenceLocked=!0}unlockPreference(){this._preferenceLocked=!1}setPosition(e){this._position=e}};ed();Hi();$S();var aD=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},il=function(s,e){return function(t,i){e(t,i,s)}},lD=!1,Bw=class{constructor(e,t){if(this._model=e,this._position=t,e.getLineMaxColumn(t.lineNumber)!==t.column){let n=e.getOffsetAt(t),o=e.getPositionAt(n+1);this._marker=e.deltaDecorations([],[{range:b.fromPositions(t,o),options:{description:"suggest-line-suffix",stickiness:1}}])}}dispose(){this._marker&&!this._model.isDisposed()&&this._model.deltaDecorations(this._marker,[])}delta(e){if(this._model.isDisposed()||this._position.lineNumber!==e.lineNumber)return 0;if(this._marker){let t=this._model.getDecorationRange(this._marker[0]);return this._model.getOffsetAt(t.getStartPosition())-this._model.getOffsetAt(e)}else return this._model.getLineMaxColumn(e.lineNumber)-e.column}},Qi=class Vw{constructor(e,t,i,n,o,r,a){this._memoryService=t,this._commandService=i,this._contextKeyService=n,this._instantiationService=o,this._logService=r,this._telemetryService=a,this._lineSuffix=new et,this._toDispose=new R,this._selectors=new Gw(h=>h.priority),this._telemetryGate=0,this.editor=e,this.model=o.createInstance(xp,this.editor);let l=Ce.InsertMode.bindTo(n);l.set(e.getOption(106).insertMode),this.model.onDidTrigger(()=>l.set(e.getOption(106).insertMode)),this.widget=this._toDispose.add(new pa(()=>{let h=this._instantiationService.createInstance(tl,this.editor);this._toDispose.add(h),this._toDispose.add(h.onDidSelect(_=>this._insertSuggestion(_,0),this));let p=new gy(this.editor,h,_=>this._insertSuggestion(_,2));this._toDispose.add(p),this._toDispose.add(this.model.onDidSuggest(_=>{_.completionModel.items.length===0&&p.reset()}));let m=Ce.MakesTextEdit.bindTo(this._contextKeyService),f=Ce.HasInsertAndReplaceRange.bindTo(this._contextKeyService),v=Ce.CanResolve.bindTo(this._contextKeyService);return this._toDispose.add(We(()=>{m.reset(),f.reset(),v.reset()})),this._toDispose.add(h.onDidFocus(({item:_})=>{let w=this.editor.getPosition(),A=_.editStart.column,M=w.column,j=!0;this.editor.getOption(1)==="smart"&&this.model.state===2&&!_.completion.additionalTextEdits&&!(_.completion.insertTextRules&4)&&M-A===_.completion.insertText.length&&(j=this.editor.getModel().getValueInRange({startLineNumber:w.lineNumber,startColumn:A,endLineNumber:w.lineNumber,endColumn:M})!==_.completion.insertText),m.set(j),f.set(!U.equals(_.editInsertEnd,_.editReplaceEnd)),v.set(Boolean(_.provider.resolveCompletionItem)||Boolean(_.completion.documentation)||_.completion.detail!==_.completion.label)})),this._toDispose.add(h.onDetailsKeyDown(_=>{if(_.toKeybinding().equals(new Bm(!0,!1,!1,!1,33))||bi&&_.toKeybinding().equals(new Bm(!1,!1,!1,!0,33))){_.stopPropagation();return}_.toKeybinding().isModifierKey()||this.editor.focus()})),h})),this._overtypingCapturer=this._toDispose.add(new pa(()=>this._toDispose.add(new el(this.editor,this.model)))),this._alternatives=this._toDispose.add(new pa(()=>this._toDispose.add(new Mr(this.editor,this._contextKeyService)))),this._toDispose.add(o.createInstance(Ja,e)),this._toDispose.add(this.model.onDidTrigger(h=>{this.widget.value.showTriggered(h.auto,h.shy?250:50),this._lineSuffix.value=new Bw(this.editor.getModel(),h.position)})),this._toDispose.add(this.model.onDidSuggest(h=>{if(!h.shy){let p=-1;for(let m of this._selectors.itemsOrderedByPriorityDesc)if(p=m.select(this.editor.getModel(),this.editor.getPosition(),h.completionModel.items),p!==-1)break;p===-1&&(p=this._memoryService.select(this.editor.getModel(),this.editor.getPosition(),h.completionModel.items)),this.widget.value.showSuggestions(h.completionModel,p,h.isFrozen,h.auto)}})),this._toDispose.add(this.model.onDidCancel(h=>{h.retrigger||this.widget.value.hideWidget()})),this._toDispose.add(this.editor.onDidBlurEditorWidget(()=>{lD||(this.model.cancel(),this.model.clear())}));let c=Ce.AcceptSuggestionsOnEnter.bindTo(n),d=()=>{let h=this.editor.getOption(1);c.set(h==="on"||h==="smart")};this._toDispose.add(this.editor.onDidChangeConfiguration(()=>d())),d()}static get(e){return e.getContribution(Vw.ID)}dispose(){this._alternatives.dispose(),this._toDispose.dispose(),this.widget.dispose(),this.model.dispose(),this._lineSuffix.dispose()}_insertSuggestion(e,t){if(!e||!e.item){this._alternatives.value.reset(),this.model.cancel(),this.model.clear();return}if(!this.editor.hasModel())return;let i=Tt.get(this.editor);if(!i)return;let n=this.editor.getModel(),o=n.getAlternativeVersionId(),{item:r}=e,a=[],l=new Ft;t&1||this.editor.pushUndoStop();let c=this.getOverwriteInfo(r,Boolean(t&8));if(this._memoryService.memorize(n,this.editor.getPosition(),r),Array.isArray(r.completion.additionalTextEdits)){let h=vr.capture(this.editor);this.editor.executeEdits("suggestController.additionalTextEdits.sync",r.completion.additionalTextEdits.map(p=>Ge.replace(b.lift(p.range),p.text))),h.restoreRelativeVerticalPositionOfCursor(this.editor)}else if(!r.isResolved){let h=new on(!0),p,m=n.onDidChangeContent(w=>{if(w.isFlush){l.cancel(),m.dispose();return}for(let A of w.changes){let M=b.getEndPosition(A.range);(!p||U.isBefore(M,p))&&(p=M)}}),f=t;t|=2;let v=!1,_=this.editor.onWillType(()=>{_.dispose(),v=!0,f&2||this.editor.pushUndoStop()});a.push(r.resolve(l.token).then(()=>{if(!r.completion.additionalTextEdits||l.token.isCancellationRequested||p&&r.completion.additionalTextEdits.some(A=>U.isBefore(p,b.getStartPosition(A.range))))return!1;v&&this.editor.pushUndoStop();let w=vr.capture(this.editor);return this.editor.executeEdits("suggestController.additionalTextEdits.async",r.completion.additionalTextEdits.map(A=>Ge.replace(b.lift(A.range),A.text))),w.restoreRelativeVerticalPositionOfCursor(this.editor),(v||!(f&2))&&this.editor.pushUndoStop(),!0}).then(w=>{this._logService.trace("[suggest] async resolving of edits DONE (ms, applied?)",h.elapsed(),w),m.dispose(),_.dispose()}))}let{insertText:d}=r.completion;r.completion.insertTextRules&4||(d=Vo.escape(d)),i.insert(d,{overwriteBefore:c.overwriteBefore,overwriteAfter:c.overwriteAfter,undoStopBefore:!1,undoStopAfter:!1,adjustWhitespace:!(r.completion.insertTextRules&1),clipboardText:e.model.clipboardText,overtypingCapturer:this._overtypingCapturer.value}),t&2||this.editor.pushUndoStop(),r.completion.command?r.completion.command.id===nl.id?this.model.trigger({auto:!0,shy:!1},!0):(a.push(this._commandService.executeCommand(r.completion.command.id,...r.completion.command.arguments?[...r.completion.command.arguments]:[]).catch(de)),this.model.cancel()):this.model.cancel(),t&4&&this._alternatives.value.set(e,h=>{for(l.cancel();n.canUndo();){o!==n.getAlternativeVersionId()&&n.undo(),this._insertSuggestion(h,3|(t&8?8:0));break}}),this._alertCompletionItem(r),Promise.all(a).finally(()=>{this._reportSuggestionAcceptedTelemetry(n,e),this.model.clear(),l.dispose()})}_reportSuggestionAcceptedTelemetry(e,t){var i;if(this._telemetryGate++%100!==0)return;let n=((i=t.item.provider._debugDisplayName)!==null&&i!==void 0?i:"unknown").split("(",1)[0].toLowerCase();this._telemetryService.publicLog2("suggest.acceptedSuggestion",{providerId:n,basenameHash:Lh(Jt(e.uri)).toString(16),languageId:e.getLanguageId(),fileExtension:yx(e.uri)})}getOverwriteInfo(e,t){qe(this.editor.hasModel());let i=this.editor.getOption(106).insertMode==="replace";t&&(i=!i);let n=e.position.column-e.editStart.column,o=(i?e.editReplaceEnd.column:e.editInsertEnd.column)-e.position.column,r=this.editor.getPosition().column-e.position.column,a=this._lineSuffix.value?this._lineSuffix.value.delta(this.editor.getPosition()):0;return{overwriteBefore:n+r,overwriteAfter:o+a}}_alertCompletionItem(e){if(Pt(e.completion.additionalTextEdits)){let t=u("aria.alert.snippet","Accepting '{0}' made {1} additional edits",e.textLabel,e.completion.additionalTextEdits.length);Ct(t)}}triggerSuggest(e,t){this.editor.hasModel()&&(this.model.trigger({auto:t!=null?t:!1,shy:!1},!1,e),this.editor.revealPosition(this.editor.getPosition(),0),this.editor.focus())}triggerSuggestAndAcceptBest(e){if(!this.editor.hasModel())return;let t=this.editor.getPosition(),i=()=>{t.equals(this.editor.getPosition())&&this._commandService.executeCommand(e.fallback)},n=o=>{if(o.completion.insertTextRules&4||o.completion.additionalTextEdits)return!0;let r=this.editor.getPosition(),a=o.editStart.column,l=r.column;return l-a!==o.completion.insertText.length?!0:this.editor.getModel().getValueInRange({startLineNumber:r.lineNumber,startColumn:a,endLineNumber:r.lineNumber,endColumn:l})!==o.completion.insertText};ht.once(this.model.onDidTrigger)(o=>{let r=[];ht.any(this.model.onDidTrigger,this.model.onDidCancel)(()=>{vt(r),i()},void 0,r),this.model.onDidSuggest(({completionModel:a})=>{if(vt(r),a.items.length===0){i();return}let l=this._memoryService.select(this.editor.getModel(),this.editor.getPosition(),a.items),c=a.items[l];if(!n(c)){i();return}this.editor.pushUndoStop(),this._insertSuggestion({index:l,item:c,model:a},7)},void 0,r)}),this.model.trigger({auto:!1,shy:!0}),this.editor.revealPosition(t,0),this.editor.focus()}acceptSelectedSuggestion(e,t){let i=this.widget.value.getFocusedItem(),n=0;e&&(n|=4),t&&(n|=8),this._insertSuggestion(i,n)}acceptNextSuggestion(){this._alternatives.value.next()}acceptPrevSuggestion(){this._alternatives.value.prev()}cancelSuggestWidget(){this.model.cancel(),this.model.clear(),this.widget.value.hideWidget()}selectNextSuggestion(){this.widget.value.selectNext()}selectNextPageSuggestion(){this.widget.value.selectNextPage()}selectLastSuggestion(){this.widget.value.selectLast()}selectPrevSuggestion(){this.widget.value.selectPrevious()}selectPrevPageSuggestion(){this.widget.value.selectPreviousPage()}selectFirstSuggestion(){this.widget.value.selectFirst()}toggleSuggestionDetails(){this.widget.value.toggleDetails()}toggleExplainMode(){this.widget.value.toggleExplainMode()}toggleSuggestionFocus(){this.widget.value.toggleDetailsFocus()}resetWidgetSize(){this.widget.value.resetPersistedSize()}forceRenderingAbove(){this.widget.value.forceRenderingAbove()}stopForceRenderingAbove(){!this.widget.isInitialized||this.widget.value.stopForceRenderingAbove()}registerSelector(e){return this._selectors.register(e)}};Qi.ID="editor.contrib.suggestController";Qi=aD([il(1,my),il(2,dt),il(3,ie),il(4,le),il(5,pr),il(6,Yn)],Qi);var Gw=class{constructor(e){this.prioritySelector=e,this._items=new Array}register(e){if(this._items.indexOf(e)!==-1)throw new Error("Value is already registered");return this._items.push(e),this._items.sort((t,i)=>this.prioritySelector(i)-this.prioritySelector(t)),{dispose:()=>{let t=this._items.indexOf(e);t>=0&&this._items.splice(t,1)}}}get itemsOrderedByPriorityDesc(){return this._items}},nl=class extends F{constructor(){super({id:nl.id,label:u("suggest.trigger.label","Trigger Suggest"),alias:"Trigger Suggest",precondition:O.and(S.writable,S.hasCompletionItemProvider),kbOpts:{kbExpr:S.textInputFocus,primary:2058,secondary:[2087],mac:{primary:266,secondary:[521,2087]},weight:100}})}run(e,t,i){let n=Qi.get(t);if(!n)return;let o;i&&typeof i=="object"&&i.auto===!0&&(o=!0),n.triggerSuggest(void 0,o)}};nl.id="editor.action.triggerSuggest";J(Qi.ID,Qi);I(nl);var en=100+90,ki=ct.bindToContribution(Qi.get);$(new ki({id:"acceptSelectedSuggestion",precondition:Ce.Visible,handler(s){s.acceptSelectedSuggestion(!0,!1)}}));Zt.registerKeybindingRule({id:"acceptSelectedSuggestion",when:O.and(Ce.Visible,S.textInputFocus),primary:2,weight:en});Zt.registerKeybindingRule({id:"acceptSelectedSuggestion",when:O.and(Ce.Visible,S.textInputFocus,Ce.AcceptSuggestionsOnEnter,Ce.MakesTextEdit),primary:3,weight:en});Oi.appendMenuItem(so,{command:{id:"acceptSelectedSuggestion",title:u("accept.insert","Insert")},group:"left",order:1,when:Ce.HasInsertAndReplaceRange.toNegated()});Oi.appendMenuItem(so,{command:{id:"acceptSelectedSuggestion",title:u("accept.insert","Insert")},group:"left",order:1,when:O.and(Ce.HasInsertAndReplaceRange,Ce.InsertMode.isEqualTo("insert"))});Oi.appendMenuItem(so,{command:{id:"acceptSelectedSuggestion",title:u("accept.replace","Replace")},group:"left",order:1,when:O.and(Ce.HasInsertAndReplaceRange,Ce.InsertMode.isEqualTo("replace"))});$(new ki({id:"acceptAlternativeSelectedSuggestion",precondition:O.and(Ce.Visible,S.textInputFocus),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:1027,secondary:[1026]},handler(s){s.acceptSelectedSuggestion(!1,!0)},menuOpts:[{menuId:so,group:"left",order:2,when:O.and(Ce.HasInsertAndReplaceRange,Ce.InsertMode.isEqualTo("insert")),title:u("accept.replace","Replace")},{menuId:so,group:"left",order:2,when:O.and(Ce.HasInsertAndReplaceRange,Ce.InsertMode.isEqualTo("replace")),title:u("accept.insert","Insert")}]}));Pe.registerCommandAlias("acceptSelectedSuggestionOnEnter","acceptSelectedSuggestion");$(new ki({id:"hideSuggestWidget",precondition:Ce.Visible,handler:s=>s.cancelSuggestWidget(),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:9,secondary:[1033]}}));$(new ki({id:"selectNextSuggestion",precondition:O.and(Ce.Visible,Ce.MultipleSuggestions),handler:s=>s.selectNextSuggestion(),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:18,secondary:[2066],mac:{primary:18,secondary:[2066,300]}}}));$(new ki({id:"selectNextPageSuggestion",precondition:O.and(Ce.Visible,Ce.MultipleSuggestions),handler:s=>s.selectNextPageSuggestion(),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:12,secondary:[2060]}}));$(new ki({id:"selectLastSuggestion",precondition:O.and(Ce.Visible,Ce.MultipleSuggestions),handler:s=>s.selectLastSuggestion()}));$(new ki({id:"selectPrevSuggestion",precondition:O.and(Ce.Visible,Ce.MultipleSuggestions),handler:s=>s.selectPrevSuggestion(),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:16,secondary:[2064],mac:{primary:16,secondary:[2064,302]}}}));$(new ki({id:"selectPrevPageSuggestion",precondition:O.and(Ce.Visible,Ce.MultipleSuggestions),handler:s=>s.selectPrevPageSuggestion(),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:11,secondary:[2059]}}));$(new ki({id:"selectFirstSuggestion",precondition:O.and(Ce.Visible,Ce.MultipleSuggestions),handler:s=>s.selectFirstSuggestion()}));$(new ki({id:"toggleSuggestionDetails",precondition:Ce.Visible,handler:s=>s.toggleSuggestionDetails(),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:2058,secondary:[2087],mac:{primary:266,secondary:[2087]}},menuOpts:[{menuId:so,group:"right",order:1,when:O.and(Ce.DetailsVisible,Ce.CanResolve),title:u("detail.more","show less")},{menuId:so,group:"right",order:1,when:O.and(Ce.DetailsVisible.toNegated(),Ce.CanResolve),title:u("detail.less","show more")}]}));$(new ki({id:"toggleExplainMode",precondition:Ce.Visible,handler:s=>s.toggleExplainMode(),kbOpts:{weight:100,primary:2133}}));$(new ki({id:"toggleSuggestionFocus",precondition:Ce.Visible,handler:s=>s.toggleSuggestionFocus(),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:2570,mac:{primary:778}}}));$(new ki({id:"insertBestCompletion",precondition:O.and(S.textInputFocus,O.equals("config.editor.tabCompletion","on"),Ja.AtEnd,Ce.Visible.toNegated(),Mr.OtherSuggestions.toNegated(),Tt.InSnippetMode.toNegated()),handler:(s,e)=>{s.triggerSuggestAndAcceptBest(uh(e)?Object.assign({fallback:"tab"},e):{fallback:"tab"})},kbOpts:{weight:en,primary:2}}));$(new ki({id:"insertNextSuggestion",precondition:O.and(S.textInputFocus,O.equals("config.editor.tabCompletion","on"),Mr.OtherSuggestions,Ce.Visible.toNegated(),Tt.InSnippetMode.toNegated()),handler:s=>s.acceptNextSuggestion(),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:2}}));$(new ki({id:"insertPrevSuggestion",precondition:O.and(S.textInputFocus,O.equals("config.editor.tabCompletion","on"),Mr.OtherSuggestions,Ce.Visible.toNegated(),Tt.InSnippetMode.toNegated()),handler:s=>s.acceptPrevSuggestion(),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:1026}}));I(class extends F{constructor(){super({id:"editor.action.resetSuggestSize",label:u("suggest.reset.label","Reset Suggest Widget Size"),alias:"Reset Suggest Widget Size",precondition:void 0})}run(s,e){var t;(t=Qi.get(e))===null||t===void 0||t.resetWidgetSize()}});var _y=class extends z{constructor(e,t){super();this.editor=e,this.suggestControllerPreselector=t,this.isSuggestWidgetVisible=!1,this.isShiftKeyPressed=!1,this._isActive=!1,this._currentSuggestItemInfo=void 0,this.onDidChangeEmitter=new G,this.onDidChange=this.onDidChangeEmitter.event,this.setInactiveDelayed=this._register(new $e(()=>{this.isSuggestWidgetVisible||this._isActive&&(this._isActive=!1,this.onDidChangeEmitter.fire())},100)),this._register(e.onKeyDown(n=>{n.shiftKey&&!this.isShiftKeyPressed&&(this.isShiftKeyPressed=!0,this.update(this._isActive))})),this._register(e.onKeyUp(n=>{n.shiftKey&&this.isShiftKeyPressed&&(this.isShiftKeyPressed=!1,this.update(this._isActive))}));let i=Qi.get(this.editor);if(i){this._register(i.registerSelector({priority:100,select:(r,a,l)=>{let c=this.editor.getModel(),d=Xa(c,this.suggestControllerPreselector());if(!d)return-1;let h=U.lift(a),p=l.map((f,v)=>{let _=jw(i,h,f,this.isShiftKeyPressed),w=Xa(c,_==null?void 0:_.normalizedInlineCompletion);if(!w)return;let A=dD(d.range,w.range)&&d.text.startsWith(w.text);return{index:v,valid:A,prefixLength:w.text.length,suggestItem:f}}).filter(f=>f&&f.valid),m=nS(p,tS(f=>f.prefixLength,iS));return m?m.index:-1}}));let n=!1,o=()=>{n||(n=!0,this._register(i.widget.value.onDidShow(()=>{this.isSuggestWidgetVisible=!0,this.update(!0)})),this._register(i.widget.value.onDidHide(()=>{this.isSuggestWidgetVisible=!1,this.setInactiveDelayed.schedule(),this.update(this._isActive)})),this._register(i.widget.value.onDidFocus(()=>{this.isSuggestWidgetVisible=!0,this.update(!0)})))};this._register(ht.once(i.model.onDidTrigger)(r=>{o()}))}this.update(this._isActive)}get state(){if(!!this._isActive)return{selectedItem:this._currentSuggestItemInfo}}update(e){let t=this.getSuggestItemInfo(),i=!1;cD(this._currentSuggestItemInfo,t)||(this._currentSuggestItemInfo=t,i=!0),this._isActive!==e&&(this._isActive=e,i=!0),i&&this.onDidChangeEmitter.fire()}getSuggestItemInfo(){let e=Qi.get(this.editor);if(!e||!this.isSuggestWidgetVisible)return;let t=e.widget.value.getFocusedItem();if(!!t)return jw(e,this.editor.getPosition(),t.item,this.isShiftKeyPressed)}stopForceRenderingAbove(){let e=Qi.get(this.editor);e&&e.stopForceRenderingAbove()}forceRenderingAbove(){let e=Qi.get(this.editor);e&&e.forceRenderingAbove()}};function dD(s,e){return e.startLineNumber===s.startLineNumber&&e.startColumn===s.startColumn&&(e.endLineNumber<s.endLineNumber||e.endLineNumber===s.endLineNumber&&e.endColumn<=s.endColumn)}function cD(s,e){return s===e?!0:!s||!e?!1:s.completionItemKind===e.completionItemKind&&s.isSnippetText===e.isSnippetText&&yw(s.normalizedInlineCompletion,e.normalizedInlineCompletion)}function jw(s,e,t,i){if(Array.isArray(t.completion.additionalTextEdits)&&t.completion.additionalTextEdits.length>0)return{completionItemKind:t.completion.kind,isSnippetText:!1,normalizedInlineCompletion:{range:b.fromPositions(e,e),text:""}};let{insertText:n}=t.completion,o=!1;if(t.completion.insertTextRules&4){let a=new Vo().parse(n),l=s.editor.getModel();if(a.children.length>100)return;Ji.adjustWhitespace(l,e,a,!0,!0),n=a.toString(),o=!0}let r=s.getOverwriteInfo(t,i);return{isSnippetText:o,completionItemKind:t.completion.kind,normalizedInlineCompletion:{text:n,range:b.fromPositions(e.delta(0,-r.overwriteBefore),e.delta(0,Math.max(r.overwriteAfter,0)))}}}var Uw=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},wy=class extends Qd{constructor(e,t){super(e);this.cache=t,this.suggestionInlineCompletionSource=this._register(new _y(this.editor,()=>{var i,n;return(n=(i=this.cache.value)===null||i===void 0?void 0:i.completions[0])===null||n===void 0?void 0:n.toLiveInlineCompletion()})),this.updateOperation=this._register(new et),this.updateCacheSoon=this._register(new $e(()=>this.updateCache(),50)),this.minReservedLineCount=0,this._register(this.suggestionInlineCompletionSource.onDidChange(()=>{this.updateCacheSoon.schedule(),this.suggestionInlineCompletionSource.state||(this.minReservedLineCount=0);let n=this.ghostText;n&&(this.minReservedLineCount=Math.max(this.minReservedLineCount,hD(n.parts.map(o=>o.lines.length-1)))),this.minReservedLineCount>=1?this.suggestionInlineCompletionSource.forceRenderingAbove():this.suggestionInlineCompletionSource.stopForceRenderingAbove(),this.onDidChangeEmitter.fire()})),this._register(this.cache.onDidChange(()=>{this.onDidChangeEmitter.fire()})),this._register(this.editor.onDidChangeCursorPosition(i=>{this.minReservedLineCount=0,this.updateCacheSoon.schedule(),this.onDidChangeEmitter.fire()})),this._register(We(()=>this.suggestionInlineCompletionSource.stopForceRenderingAbove()))}get isActive(){return this.suggestionInlineCompletionSource.state!==void 0}isSuggestionPreviewEnabled(){return this.editor.getOption(106).preview}updateCache(){return Uw(this,void 0,void 0,function*(){let e=this.suggestionInlineCompletionSource.state;if(!e||!e.selectedItem)return;let t={text:e.selectedItem.normalizedInlineCompletion.text,range:e.selectedItem.normalizedInlineCompletion.range,isSnippetText:e.selectedItem.isSnippetText,completionKind:e.selectedItem.completionItemKind},i=this.editor.getPosition(),n=Oe(r=>Uw(this,void 0,void 0,function*(){let a;try{a=yield Jf(i,this.editor.getModel(),{triggerKind:Ai.Automatic,selectedSuggestionInfo:t},r)}catch(l){de(l);return}r.isCancellationRequested||(this.cache.setValue(this.editor,a,Ai.Automatic),this.onDidChangeEmitter.fire())})),o=new pp(n,Ai.Automatic);this.updateOperation.value=o,yield n,this.updateOperation.value===o&&this.updateOperation.clear()})}get ghostText(){var e,t,i;let n=this.isSuggestionPreviewEnabled(),o=Xa(this.editor.getModel(),(t=(e=this.cache.value)===null||e===void 0?void 0:e.completions[0])===null||t===void 0?void 0:t.toLiveInlineCompletion()),r=this.suggestionInlineCompletionSource.state,a=Xa(this.editor.getModel(),(i=r==null?void 0:r.selectedItem)===null||i===void 0?void 0:i.normalizedInlineCompletion),l=o&&a&&o.text.startsWith(a.text)&&o.range.equalsRange(a.range);if(!n&&!l)return;let c=l?o:a||o,d=l?c.text.length-a.text.length:0;return this.toGhostText(c,d)}toGhostText(e,t){let i=this.editor.getOptions().get(106).previewMode;return e?hp(e,this.editor.getModel(),i,this.editor.getPosition(),t)||new Jd(e.range.endLineNumber,[],this.minReservedLineCount):void 0}};function hD(s){return s.reduce((e,t)=>e+t,0)}function $w(s,e){return{object:s,dispose:()=>e==null?void 0:e.dispose()}}_t();var uD=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Kw=function(s,e){return function(t,i){e(t,i,s)}},pD=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},qw=class extends z{constructor(){super(...arguments);this.onDidChangeEmitter=new G,this.onDidChange=this.onDidChangeEmitter.event,this.hasCachedGhostText=!1,this.currentModelRef=this._register(new et)}get targetModel(){var e;return(e=this.currentModelRef.value)===null||e===void 0?void 0:e.object}setTargetModel(e){var t;((t=this.currentModelRef.value)===null||t===void 0?void 0:t.object)!==e&&(this.currentModelRef.clear(),this.currentModelRef.value=e?$w(e,e.onDidChange(()=>{this.hasCachedGhostText=!1,this.onDidChangeEmitter.fire()})):void 0,this.hasCachedGhostText=!1,this.onDidChangeEmitter.fire())}get ghostText(){var e,t;return this.hasCachedGhostText||(this.cachedGhostText=(t=(e=this.currentModelRef.value)===null||e===void 0?void 0:e.object)===null||t===void 0?void 0:t.ghostText,this.hasCachedGhostText=!0),this.cachedGhostText}setExpanded(e){var t;(t=this.targetModel)===null||t===void 0||t.setExpanded(e)}get minReservedLineCount(){return this.targetModel?this.targetModel.minReservedLineCount:0}},kp=class extends qw{constructor(e,t,i){super();this.editor=e,this.commandService=t,this.languageConfigurationService=i,this.sharedCache=this._register(new Xw),this.suggestWidgetAdapterModel=this._register(new wy(this.editor,this.sharedCache)),this.inlineCompletionsModel=this._register(new up(this.editor,this.sharedCache,this.commandService,this.languageConfigurationService)),this._register(this.suggestWidgetAdapterModel.onDidChange(()=>{this.updateModel()})),this.updateModel()}get activeInlineCompletionsModel(){if(this.targetModel===this.inlineCompletionsModel)return this.inlineCompletionsModel}updateModel(){this.setTargetModel(this.suggestWidgetAdapterModel.isActive?this.suggestWidgetAdapterModel:this.inlineCompletionsModel),this.inlineCompletionsModel.setActive(this.targetModel===this.inlineCompletionsModel)}shouldShowHoverAt(e){var t;let i=(t=this.activeInlineCompletionsModel)===null||t===void 0?void 0:t.ghostText;return i?i.parts.some(n=>e.containsPosition(new U(i.lineNumber,n.column))):!1}triggerInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.trigger(Ai.Explicit)}commitInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.commitCurrentSuggestion()}hideInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.hide()}showNextInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.showNext()}showPreviousInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.showPrevious()}hasMultipleInlineCompletions(){var e;return pD(this,void 0,void 0,function*(){let t=yield(e=this.activeInlineCompletionsModel)===null||e===void 0?void 0:e.hasMultipleInlineCompletions();return t!==void 0?t:!1})}};kp=uD([Kw(1,dt),Kw(2,Dt)],kp);var Xw=class extends z{constructor(){super(...arguments);this.onDidChangeEmitter=new G,this.onDidChange=this.onDidChangeEmitter.event,this.cache=this._register(new et)}get value(){return this.cache.value}setValue(e,t,i){this.cache.value=new Zf(e,t,()=>this.onDidChangeEmitter.fire(),i)}clearAndLeak(){return this.cache.clearAndLeak()}clear(){this.cache.clear()}};Ae();B();Ye();pP();tt();ee();lP();rn();Qh();Be();Ne();var mD=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Yw=function(s,e){return function(t,i){e(t,i,s)}},Ty,Zw=(Ty=window.trustedTypes)===null||Ty===void 0?void 0:Ty.createPolicy("editorGhostText",{createHTML:s=>s}),Lp=class extends z{constructor(e,t,i,n){super();this.editor=e,this.model=t,this.instantiationService=i,this.languageService=n,this.disposed=!1,this.partsWidget=this._register(this.instantiationService.createInstance(Jw,this.editor)),this.additionalLinesWidget=this._register(new Qw(this.editor,this.languageService.languageIdCodec)),this.viewMoreContentWidget=void 0,this._register(this.editor.onDidChangeConfiguration(o=>{(o.hasChanged(29)||o.hasChanged(105)||o.hasChanged(88)||o.hasChanged(83)||o.hasChanged(45)||o.hasChanged(44)||o.hasChanged(59))&&this.update()})),this._register(We(()=>{var o;this.disposed=!0,this.update(),(o=this.viewMoreContentWidget)===null||o===void 0||o.dispose(),this.viewMoreContentWidget=void 0})),this._register(t.onDidChange(()=>{this.update()})),this.update()}shouldShowHoverAtViewZone(e){return this.additionalLinesWidget.viewZoneId===e}update(){var e;let t=this.model.ghostText;if(!this.editor.hasModel()||!t||this.disposed){this.partsWidget.clear(),this.additionalLinesWidget.clear();return}let i=new Array,n=new Array;function o(c,d){if(n.length>0){let h=n[n.length-1];d&&h.decorations.push(new Wm(h.content.length+1,h.content.length+1+c[0].length,d,0)),h.content+=c[0],c=c.slice(1)}for(let h of c)n.push({content:h,decorations:d?[new Wm(1,h.length+1,d,0)]:[]})}let r=this.editor.getModel().getLineContent(t.lineNumber);this.editor.getModel().getLineTokens(t.lineNumber);let a,l=0;for(let c of t.parts){let d=c.lines;a===void 0?(i.push({column:c.column,text:d[0],preview:c.preview}),d=d.slice(1)):o([r.substring(l,c.column-1)],void 0),d.length>0&&(o(d,"ghost-text"),a===void 0&&c.column<=r.length&&(a=c.column)),l=c.column-1}a!==void 0&&o([r.substring(l)],void 0),this.partsWidget.setParts(t.lineNumber,i,a!==void 0?{column:a,length:r.length+1-a}:void 0),this.additionalLinesWidget.updateLines(t.lineNumber,n,t.additionalReservedLineCount),t.parts.some(c=>c.lines.length<0)?this.viewMoreContentWidget=this.renderViewMoreLines(new U(t.lineNumber,this.editor.getModel().getLineMaxColumn(t.lineNumber)),"",0):((e=this.viewMoreContentWidget)===null||e===void 0||e.dispose(),this.viewMoreContentWidget=void 0)}renderViewMoreLines(e,t,i){let n=this.editor.getOption(44),o=document.createElement("div");o.className="suggest-preview-additional-widget",ql(o,n);let r=document.createElement("span");r.className="content-spacer",r.append(t),o.append(r);let a=document.createElement("span");a.className="content-newline suggest-preview-text",a.append("\u23CE  "),o.append(a);let l=new R,c=document.createElement("div");return c.className="button suggest-preview-text",c.append(`+${i} lines\u2026`),l.add(zi(c,"mousedown",d=>{var h;(h=this.model)===null||h===void 0||h.setExpanded(!0),d.preventDefault(),this.editor.focus()})),o.append(c),new eT(this.editor,e,o,l)}};Lp=mD([Yw(2,le),Yw(3,ft)],Lp);var Jw=class{constructor(e){this.editor=e,this.decorationIds=[],this.disposableStore=new R}dispose(){this.clear(),this.disposableStore.dispose()}clear(){this.editor.deltaDecorations(this.decorationIds,[]),this.disposableStore.clear()}setParts(e,t,i){if(this.disposableStore.clear(),!this.editor.getModel())return;let o=new Array;i&&o.push({range:b.fromPositions(new U(e,i.column),new U(e,i.column+i.length)),options:{inlineClassName:"ghost-text-hidden",description:"ghost-text-hidden"}}),this.decorationIds=this.editor.deltaDecorations(this.decorationIds,t.map(r=>({range:b.fromPositions(new U(e,r.column)),options:{description:"ghost-text",after:{content:r.text,inlineClassName:r.preview?"ghost-text-decoration-preview":"ghost-text-decoration"},showIfCollapsed:!0}})).concat(o))}},Qw=class{constructor(e,t){this.editor=e,this.languageIdCodec=t,this._viewZoneId=void 0}get viewZoneId(){return this._viewZoneId}dispose(){this.clear()}clear(){this.editor.changeViewZones(e=>{this._viewZoneId&&(e.removeZone(this._viewZoneId),this._viewZoneId=void 0)})}updateLines(e,t,i){let n=this.editor.getModel();if(!n)return;let{tabSize:o}=n.getOptions();this.editor.changeViewZones(r=>{this._viewZoneId&&(r.removeZone(this._viewZoneId),this._viewZoneId=void 0);let a=Math.max(t.length,i);if(a>0){let l=document.createElement("div");gD(l,o,t,this.editor.getOptions(),this.languageIdCodec),this._viewZoneId=r.addZone({afterLineNumber:e,heightInLines:a,domNode:l,afterColumnAffinity:1})}})}};function gD(s,e,t,i,n){let o=i.get(29),r=i.get(105),a="none",l=i.get(83),c=i.get(45),d=i.get(44),h=i.get(59),p=VS(1e4);p.appendASCIIString('<div class="suggest-preview-text">');for(let v=0,_=t.length;v<_;v++){let w=t[v],A=w.content;p.appendASCIIString('<div class="view-line'),p.appendASCIIString('" style="top:'),p.appendASCIIString(String(v*h)),p.appendASCIIString('px;width:1000000px;">');let M=wS(A),j=_S(A),V=YS.createEmpty(A,n);JS(new ZS(d.isMonospace&&!o,d.canUseHalfwidthRightwardsArrow,A,!1,M,j,0,V,w.decorations,e,0,d.spaceWidth,d.middotWidth,d.wsmiddotWidth,r,a,l,c!==aS.OFF,null),p),p.appendASCIIString("</div>")}p.appendASCIIString("</div>"),ql(s,d);let m=p.build(),f=Zw?Zw.createHTML(m):m;s.innerHTML=f}var eT=class extends z{constructor(e,t,i,n){super();this.editor=e,this.position=t,this.domNode=i,this.allowEditorOverflow=!1,this.suppressMouseDown=!1,this._register(n),this._register(We(()=>{this.editor.removeContentWidget(this)})),this.editor.addContentWidget(this)}getId(){return"editor.widget.viewMoreLinesWidget"}getDomNode(){return this.domNode}getPosition(){return{position:this.position,preference:[0]}}};Me((s,e)=>{let t=s.getColor(lx);t&&(e.addRule(`.monaco-editor .ghost-text-decoration { color: ${t.toString()} !important; }`),e.addRule(`.monaco-editor .ghost-text-decoration-preview { color: ${t.toString()} !important; }`),e.addRule(`.monaco-editor .suggest-preview-text .ghost-text { color: ${t.toString()} !important; }`));let i=s.getColor(dx);i&&(e.addRule(`.monaco-editor .ghost-text-decoration { background-color: ${i.toString()}; }`),e.addRule(`.monaco-editor .ghost-text-decoration-preview { background-color: ${i.toString()}; }`),e.addRule(`.monaco-editor .suggest-preview-text .ghost-text { background-color: ${i.toString()}; }`));let n=s.getColor(ax);n&&(e.addRule(`.monaco-editor .suggest-preview-text .ghost-text { border: 1px solid ${n}; }`),e.addRule(`.monaco-editor .ghost-text-decoration { border: 1px solid ${n}; }`),e.addRule(`.monaco-editor .ghost-text-decoration-preview { border: 1px solid ${n}; }`))});Q();Ee();Be();Ql();var tT=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Ey=function(s,e){return function(t,i){e(t,i,s)}},Pp=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},wt=class iT extends z{constructor(e,t){super();this.editor=e,this.instantiationService=t,this.triggeredExplicitly=!1,this.activeController=this._register(new et),this._register(this.editor.onDidChangeModel(()=>{this.updateModelController()})),this._register(this.editor.onDidChangeConfiguration(i=>{i.hasChanged(106)&&this.updateModelController(),i.hasChanged(55)&&this.updateModelController()})),this.updateModelController()}static get(e){return e.getContribution(iT.ID)}get activeModel(){var e;return(e=this.activeController.value)===null||e===void 0?void 0:e.model}updateModelController(){let e=this.editor.getOption(106),t=this.editor.getOption(55);this.activeController.value=void 0,this.activeController.value=this.editor.hasModel()&&(e.preview||t.enabled||this.triggeredExplicitly)?this.instantiationService.createInstance(Iy,this.editor):void 0}shouldShowHoverAt(e){var t;return((t=this.activeModel)===null||t===void 0?void 0:t.shouldShowHoverAt(e))||!1}shouldShowHoverAtViewZone(e){var t,i;return((i=(t=this.activeController.value)===null||t===void 0?void 0:t.widget)===null||i===void 0?void 0:i.shouldShowHoverAtViewZone(e))||!1}trigger(){var e;this.triggeredExplicitly=!0,this.activeController.value||this.updateModelController(),(e=this.activeModel)===null||e===void 0||e.triggerInlineCompletion()}commit(){var e;(e=this.activeModel)===null||e===void 0||e.commitInlineCompletion()}hide(){var e;(e=this.activeModel)===null||e===void 0||e.hideInlineCompletion()}showNextInlineCompletion(){var e;(e=this.activeModel)===null||e===void 0||e.showNextInlineCompletion()}showPreviousInlineCompletion(){var e;(e=this.activeModel)===null||e===void 0||e.showPreviousInlineCompletion()}hasMultipleInlineCompletions(){var e;return Pp(this,void 0,void 0,function*(){let t=yield(e=this.activeModel)===null||e===void 0?void 0:e.hasMultipleInlineCompletions();return t!==void 0?t:!1})}};wt.inlineSuggestionVisible=new pe("inlineSuggestionVisible",!1,u("inlineSuggestionVisible","Whether an inline suggestion is visible"));wt.inlineSuggestionHasIndentation=new pe("inlineSuggestionHasIndentation",!1,u("inlineSuggestionHasIndentation","Whether the inline suggestion starts with whitespace"));wt.inlineSuggestionHasIndentationLessThanTabSize=new pe("inlineSuggestionHasIndentationLessThanTabSize",!0,u("inlineSuggestionHasIndentationLessThanTabSize","Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab"));wt.ID="editor.contrib.ghostTextController";wt=tT([Ey(1,le)],wt);var nT=class{constructor(e){this.contextKeyService=e,this.inlineCompletionVisible=wt.inlineSuggestionVisible.bindTo(this.contextKeyService),this.inlineCompletionSuggestsIndentation=wt.inlineSuggestionHasIndentation.bindTo(this.contextKeyService),this.inlineCompletionSuggestsIndentationLessThanTabSize=wt.inlineSuggestionHasIndentationLessThanTabSize.bindTo(this.contextKeyService)}},Iy=class extends z{constructor(e,t,i){super();this.editor=e,this.instantiationService=t,this.contextKeyService=i,this.contextKeys=new nT(this.contextKeyService),this.model=this._register(this.instantiationService.createInstance(kp,this.editor)),this.widget=this._register(this.instantiationService.createInstance(Lp,this.editor,this.model)),this._register(We(()=>{this.contextKeys.inlineCompletionVisible.set(!1),this.contextKeys.inlineCompletionSuggestsIndentation.set(!1),this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(!0)})),this._register(this.model.onDidChange(()=>{this.updateContextKeys()})),this.updateContextKeys()}updateContextKeys(){var e;this.contextKeys.inlineCompletionVisible.set(((e=this.model.activeInlineCompletionsModel)===null||e===void 0?void 0:e.ghostText)!==void 0);let t=!1,i=!0,n=this.model.inlineCompletionsModel.ghostText;if(!!this.model.activeInlineCompletionsModel&&n&&n.parts.length>0){let{column:o,lines:r}=n.parts[0],a=r[0],l=this.editor.getModel().getLineIndentColumn(n.lineNumber);if(o<=l){let d=Vl(a);d===-1&&(d=a.length-1),t=d>0;let h=this.editor.getModel().getOptions().tabSize;i=ox.visibleColumnFromColumn(a,d+1,h)<h}}this.contextKeys.inlineCompletionSuggestsIndentation.set(t),this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(i)}};Iy=tT([Ey(1,le),Ey(2,ie)],Iy);var oT=ct.bindToContribution(wt.get),ol=new oT({id:dp,precondition:wt.inlineSuggestionVisible,handler(s){s.commit(),s.editor.focus()}});$(ol);Zt.registerKeybindingRule({primary:2,weight:200,id:ol.id,when:O.and(ol.precondition,S.tabMovesFocus.toNegated(),wt.inlineSuggestionHasIndentationLessThanTabSize)});$(new oT({id:"editor.action.inlineSuggest.hide",precondition:wt.inlineSuggestionVisible,kbOpts:{weight:100,primary:9},handler(s){s.hide()}}));var Dr=class extends F{constructor(){super({id:Dr.ID,label:u("action.inlineSuggest.showNext","Show Next Inline Suggestion"),alias:"Show Next Inline Suggestion",precondition:O.and(S.writable,wt.inlineSuggestionVisible),kbOpts:{weight:100,primary:601}})}run(e,t){return Pp(this,void 0,void 0,function*(){let i=wt.get(t);i&&(i.showNextInlineCompletion(),t.focus())})}};Dr.ID="editor.action.inlineSuggest.showNext";var Rr=class extends F{constructor(){super({id:Rr.ID,label:u("action.inlineSuggest.showPrevious","Show Previous Inline Suggestion"),alias:"Show Previous Inline Suggestion",precondition:O.and(S.writable,wt.inlineSuggestionVisible),kbOpts:{weight:100,primary:599}})}run(e,t){return Pp(this,void 0,void 0,function*(){let i=wt.get(t);i&&(i.showPreviousInlineCompletion(),t.focus())})}};Rr.ID="editor.action.inlineSuggest.showPrevious";var rT=class extends F{constructor(){super({id:"editor.action.inlineSuggest.trigger",label:u("action.inlineSuggest.trigger","Trigger Inline Suggestion"),alias:"Trigger Inline Suggestion",precondition:S.writable})}run(e,t){return Pp(this,void 0,void 0,function*(){let i=wt.get(t);i&&i.trigger()})}};J(wt.ID,wt);I(rT);I(Dr);I(Rr);Q();ri();_t();Ee();qi();var fD=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},rl=function(s,e){return function(t,i){e(t,i,s)}},sT=class{constructor(e,t,i){this.owner=e,this.range=t,this.controller=i}isValidForHoverAnchor(e){return e.type===1&&this.range.startColumn<=e.range.startColumn&&this.range.endColumn>=e.range.endColumn}hasMultipleSuggestions(){return this.controller.hasMultipleInlineCompletions()}},Mp=class{constructor(e,t,i,n,o,r,a){this._editor=e,this._commandService=t,this._menuService=i,this._contextKeyService=n,this._languageService=o,this._openerService=r,this.accessibilityService=a}suggestHoverAnchor(e){let t=wt.get(this._editor);if(!t)return null;let i=e.target;if(i.type===8){let n=i.detail;if(t.shouldShowHoverAtViewZone(n.viewZoneId))return new ws(1e3,this,b.fromPositions(n.positionBefore||n.position,n.positionBefore||n.position))}return i.type===7&&t.shouldShowHoverAt(i.range)?new ws(1e3,this,i.range):i.type===6&&i.detail.mightBeForeignElement&&t.shouldShowHoverAt(i.range)?new ws(1e3,this,i.range):null}computeSync(e,t){let i=wt.get(this._editor);return i&&i.shouldShowHoverAt(e.range)?[new sT(this,e.range,i)]:[]}renderHoverParts(e,t){let i=new R,n=t[0];this.accessibilityService.isScreenReaderOptimized()&&this.renderScreenReaderText(e,n,i);let o=i.add(this._menuService.createMenu(se.InlineCompletionsActions,this._contextKeyService)),r=e.statusBar.addAction({label:u("showNextInlineSuggestion","Next"),commandId:Dr.ID,run:()=>this._commandService.executeCommand(Dr.ID)}),a=e.statusBar.addAction({label:u("showPreviousInlineSuggestion","Previous"),commandId:Rr.ID,run:()=>this._commandService.executeCommand(Rr.ID)});e.statusBar.addAction({label:u("acceptInlineSuggestion","Accept"),commandId:ol.id,run:()=>this._commandService.executeCommand(ol.id)});let l=[r,a];for(let c of l)c.setEnabled(!1);n.hasMultipleSuggestions().then(c=>{for(let d of l)d.setEnabled(c)});for(let[c,d]of o.getActions())for(let h of d)h instanceof mr&&e.statusBar.addAction({label:h.label,commandId:h.item.id,run:()=>this._commandService.executeCommand(h.item.id)});return i}renderScreenReaderText(e,t,i){var n,o;let r=W,a=r("div.hover-row.markdown-hover"),l=H(a,r("div.hover-contents")),c=i.add(new Ii({editor:this._editor},this._languageService,this._openerService)),d=p=>{i.add(c.onDidRenderAsync(()=>{l.className="hover-contents code-hover-contents",e.onContentsChanged()}));let m=u("inlineSuggestionFollows","Suggestion:"),f=i.add(c.render(new ai().appendText(m).appendCodeblock("text",p)));l.replaceChildren(f.element)},h=(o=(n=t.controller.activeModel)===null||n===void 0?void 0:n.inlineCompletionsModel)===null||o===void 0?void 0:o.ghostText;if(h){let p=this._editor.getModel().getLineContent(h.lineNumber);d(h.renderForScreenReader(p))}e.fragment.appendChild(a)}};Mp=fD([rl(1,dt),rl(2,Xn),rl(3,ie),rl(4,ft),rl(5,bt),rl(6,zh)],Mp);Ee();Be();Ki();ke();xi();B();Pi();Ye();ue();jt();du();rn();Ae();os();B();Be();Ae();Vm();Ym();De();B();qi();mt();Ne();var yD=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},bD=function(s,e){return function(t,i){e(t,i,s)}},Dp=class extends z{constructor(e,t,i={},n){var o;super();this._link=t,this._enabled=!0,this.el=H(e,W("a.monaco-link",{tabIndex:(o=t.tabIndex)!==null&&o!==void 0?o:0,href:t.href,title:t.title},t.label)),this.el.setAttribute("role","button");let r=this._register(new ls(this.el,"click")),a=this._register(new ls(this.el,"keypress")),l=ht.chain(a.event).map(h=>new is(h)).filter(h=>h.keyCode===3).event,c=this._register(new ls(this.el,id.Tap)).event;this._register(_a.addTarget(this.el));let d=ht.any(r.event,l,c);this._register(d(h=>{!this.enabled||(an.stop(h,!0),(i==null?void 0:i.opener)?i.opener(this._link.href):n.open(this._link.href,{allowCommands:!0}))})),this.enabled=!0}get enabled(){return this._enabled}set enabled(e){e?(this.el.setAttribute("aria-disabled","false"),this.el.tabIndex=0,this.el.style.pointerEvents="auto",this.el.style.opacity="1",this.el.style.cursor="pointer",this._enabled=!1):(this.el.setAttribute("aria-disabled","true"),this.el.tabIndex=-1,this.el.style.pointerEvents="none",this.el.style.opacity="0.4",this.el.style.cursor="default",this._enabled=!0),this._enabled=e}};Dp=yD([bD(3,bt)],Dp);Me((s,e)=>{let t=s.getColor(gr);t&&e.addRule(`.monaco-link { color: ${t}; }`);let i=s.getColor(fr);i&&e.addRule(`.monaco-link:hover { color: ${i}; }`)});Ne();var aT=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},lT=function(s,e){return function(t,i){e(t,i,s)}},SD=26,Rp=class extends z{constructor(e,t){super();this._editor=e,this.instantiationService=t,this.banner=this._register(this.instantiationService.createInstance(ky))}hide(){this._editor.setBanner(null,0),this.banner.clear()}show(e){this.banner.show(Object.assign(Object.assign({},e),{onClose:()=>{this.hide(),e.onClose&&e.onClose()}})),this._editor.setBanner(this.banner.element,SD)}};Rp=aT([lT(1,le)],Rp);var ky=class extends z{constructor(e){super();this.instantiationService=e,this.markdownRenderer=this.instantiationService.createInstance(Ii,{}),this.element=W("div.editor-banner"),this.element.tabIndex=0}getAriaLabel(e){if(e.ariaLabel)return e.ariaLabel;if(typeof e.message=="string")return e.message}getBannerMessage(e){if(typeof e=="string"){let t=W("span");return t.innerText=e,t}return this.markdownRenderer.render(e).element}clear(){_i(this.element)}show(e){_i(this.element);let t=this.getAriaLabel(e);t&&this.element.setAttribute("aria-label",t);let i=H(this.element,W("div.icon-container"));i.setAttribute("aria-hidden","true"),e.icon&&i.appendChild(W(`div${ot.asCSSSelector(e.icon)}`));let n=H(this.element,W("div.message-container"));if(n.setAttribute("aria-hidden","true"),n.appendChild(this.getBannerMessage(e.message)),this.messageActionsContainer=H(this.element,W("div.message-actions-container")),e.actions)for(let r of e.actions)this._register(this.instantiationService.createInstance(Dp,this.messageActionsContainer,Object.assign(Object.assign({},r),{tabIndex:-1}),{}));let o=H(this.element,W("div.action-container"));this.actionBar=this._register(new ds(o)),this.actionBar.push(this._register(new _o("banner.close","Close Banner",ot.asClassName(lu),!0,()=>{typeof e.onClose=="function"&&e.onClose()})),{icon:!0,label:!1}),this.actionBar.setFocusable(!1)}};ky=aT([lT(0,le)],ky);Q();kn();Be();qi();var My=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},sl=function(s,e){return function(t,i){e(t,i,s)}},$t=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},vD=Rt("extensions-warning-message",K.warning,u("warningIcon","Icon shown with a warning message in the extensions editor.")),al=class extends z{constructor(e,t,i,n){super();this._editor=e,this._editorWorkerService=t,this._workspaceTrustService=i,this._highlighter=null,this._bannerClosed=!1,this._updateState=o=>{if(o&&o.hasMore){if(this._bannerClosed)return;let r=Math.max(o.ambiguousCharacterCount,o.nonBasicAsciiCharacterCount,o.invisibleCharacterCount),a;if(o.nonBasicAsciiCharacterCount>=r)a={message:u("unicodeHighlighting.thisDocumentHasManyNonBasicAsciiUnicodeCharacters","This document contains many non-basic ASCII unicode characters"),command:new As};else if(o.ambiguousCharacterCount>=r)a={message:u("unicodeHighlighting.thisDocumentHasManyAmbiguousUnicodeCharacters","This document contains many ambiguous unicode characters"),command:new jo};else if(o.invisibleCharacterCount>=r)a={message:u("unicodeHighlighting.thisDocumentHasManyInvisibleUnicodeCharacters","This document contains many invisible unicode characters"),command:new Rs};else throw new Error("Unreachable");this._bannerController.show({id:"unicodeHighlightBanner",message:a.message,icon:vD,actions:[{label:a.command.shortLabel,href:`command:${a.command.id}`}],onClose:()=>{this._bannerClosed=!0}})}else this._bannerController.hide()},this._bannerController=this._register(n.createInstance(Rp,e)),this._register(this._editor.onDidChangeModel(()=>{this._bannerClosed=!1,this._updateHighlighter()})),this._options=e.getOption(113),this._register(i.onDidChangeTrust(o=>{this._updateHighlighter()})),this._register(e.onDidChangeConfiguration(o=>{o.hasChanged(113)&&(this._options=e.getOption(113),this._updateHighlighter())})),this._updateHighlighter()}dispose(){this._highlighter&&(this._highlighter.dispose(),this._highlighter=null),super.dispose()}_updateHighlighter(){if(this._updateState(null),this._highlighter&&(this._highlighter.dispose(),this._highlighter=null),!this._editor.hasModel())return;let e=xD(this._workspaceTrustService.isWorkspaceTrusted(),this._options);if([e.nonBasicASCII,e.ambiguousCharacters,e.invisibleCharacters].every(i=>i===!1))return;let t={nonBasicASCII:e.nonBasicASCII,ambiguousCharacters:e.ambiguousCharacters,invisibleCharacters:e.invisibleCharacters,includeComments:e.includeComments,includeStrings:e.includeStrings,allowedCodePoints:Object.keys(e.allowedCharacters).map(i=>i.codePointAt(0)),allowedLocales:Object.keys(e.allowedLocales).map(i=>i==="_os"?new Intl.NumberFormat().resolvedOptions().locale:i==="_vscode"?Zb:i)};this._editorWorkerService.canComputeUnicodeHighlights(this._editor.getModel().uri)?this._highlighter=new Ly(this._editor,t,this._updateState,this._editorWorkerService):this._highlighter=new cT(this._editor,t,this._updateState)}getDecorationInfo(e){return this._highlighter?this._highlighter.getDecorationInfo(e):null}};al.ID="editor.contrib.unicodeHighlighter";al=My([sl(1,Lo),sl(2,Ax),sl(3,le)],al);function xD(s,e){return{nonBasicASCII:e.nonBasicASCII===mh?!s:e.nonBasicASCII,ambiguousCharacters:e.ambiguousCharacters,invisibleCharacters:e.invisibleCharacters,includeComments:e.includeComments===mh?!s:e.includeComments,includeStrings:e.includeStrings===mh?!s:e.includeStrings,allowedCharacters:e.allowedCharacters,allowedLocales:e.allowedLocales}}var Ly=class extends z{constructor(e,t,i,n){super();this._editor=e,this._options=t,this._updateState=i,this._editorWorkerService=n,this._model=this._editor.getModel(),this._decorationIds=new Set,this._updateSoon=this._register(new $e(()=>this._update(),250)),this._register(this._editor.onDidChangeModelContent(()=>{this._updateSoon.schedule()})),this._updateSoon.schedule()}dispose(){this._decorationIds=new Set(this._model.deltaDecorations(Array.from(this._decorationIds),[])),super.dispose()}_update(){if(this._model.isDisposed())return;if(!this._model.mightContainNonBasicASCII()){this._decorationIds=new Set(this._editor.deltaDecorations(Array.from(this._decorationIds),[]));return}let e=this._model.getVersionId();this._editorWorkerService.computedUnicodeHighlights(this._model.uri,this._options).then(t=>{if(this._model.isDisposed()||this._model.getVersionId()!==e)return;this._updateState(t);let i=[];if(!t.hasMore)for(let n of t.ranges)i.push({range:n,options:Ds.instance.getDecorationFromOptions(this._options)});this._decorationIds=new Set(this._editor.deltaDecorations(Array.from(this._decorationIds),i))})}getDecorationInfo(e){if(!this._decorationIds.has(e))return null;let t=this._editor.getModel(),i=t.getDecorationRange(e),n={range:i,options:Ds.instance.getDecorationFromOptions(this._options),id:e,ownerId:0};if(!ng(t,n))return null;let o=t.getValueInRange(i);return{reason:hT(o,this._options),inComment:og(t,n),inString:rg(t,n)}}};Ly=My([sl(3,Lo)],Ly);var cT=class extends z{constructor(e,t,i){super();this._editor=e,this._options=t,this._updateState=i,this._model=this._editor.getModel(),this._decorationIds=new Set,this._updateSoon=this._register(new $e(()=>this._update(),250)),this._register(this._editor.onDidLayoutChange(()=>{this._updateSoon.schedule()})),this._register(this._editor.onDidScrollChange(()=>{this._updateSoon.schedule()})),this._register(this._editor.onDidChangeHiddenAreas(()=>{this._updateSoon.schedule()})),this._register(this._editor.onDidChangeModelContent(()=>{this._updateSoon.schedule()})),this._updateSoon.schedule()}dispose(){this._decorationIds=new Set(this._model.deltaDecorations(Array.from(this._decorationIds),[])),super.dispose()}_update(){if(this._model.isDisposed())return;if(!this._model.mightContainNonBasicASCII()){this._decorationIds=new Set(this._editor.deltaDecorations(Array.from(this._decorationIds),[]));return}let e=this._editor.getVisibleRanges(),t=[],i={ranges:[],ambiguousCharacterCount:0,invisibleCharacterCount:0,nonBasicAsciiCharacterCount:0,hasMore:!1};for(let n of e){let o=Hm.computeUnicodeHighlights(this._model,this._options,n);for(let r of o.ranges)i.ranges.push(r);i.ambiguousCharacterCount+=i.ambiguousCharacterCount,i.invisibleCharacterCount+=i.invisibleCharacterCount,i.nonBasicAsciiCharacterCount+=i.nonBasicAsciiCharacterCount,i.hasMore=i.hasMore||o.hasMore}if(!i.hasMore)for(let n of i.ranges)t.push({range:n,options:Ds.instance.getDecorationFromOptions(this._options)});this._updateState(i),this._decorationIds=new Set(this._editor.deltaDecorations(Array.from(this._decorationIds),t))}getDecorationInfo(e){if(!this._decorationIds.has(e))return null;let t=this._editor.getModel(),i=t.getDecorationRange(e),n=t.getValueInRange(i),o={range:i,options:Ds.instance.getDecorationFromOptions(this._options),id:e,ownerId:0};return ng(t,o)?{reason:hT(n,this._options),inComment:og(t,o),inString:rg(t,o)}:null}},Ap=class{constructor(e,t,i){this._editor=e,this._languageService=t,this._openerService=i}computeSync(e,t){if(!this._editor.hasModel()||e.type!==1)return[];let i=this._editor.getModel(),n=this._editor.getContribution(al.ID);if(!n)return[];let o=[],r=300;for(let a of t){let l=n.getDecorationInfo(a.id);if(!l)continue;let d=i.getValueInRange(a.range).codePointAt(0),h=dT(d),p;switch(l.reason.kind){case 0:p=u("unicodeHighlight.characterIsAmbiguous","The character {0} could be confused with the character {1}, which is more common in source code.",h,dT(l.reason.confusableWith.codePointAt(0)));break;case 1:p=u("unicodeHighlight.characterIsInvisible","The character {0} is invisible.",h);break;case 2:p=u("unicodeHighlight.characterIsNonBasicAscii","The character {0} is not a basic ASCII character.",h);break}let m={codePoint:d,reason:l.reason,inComment:l.inComment,inString:l.inString},f=u("unicodeHighlight.adjustSettings","Adjust settings"),v=[{value:`${p} [${f}](command:${ll.ID}?${encodeURIComponent(JSON.stringify(m))})`,isTrusted:!0}];o.push(new Fn(this,a.range,v,r++))}return o}renderHoverParts(e,t){return Gf(e,t,this._editor,this._languageService,this._openerService)}};Ap=My([sl(1,ft),sl(2,bt)],Ap);function Py(s){return`U+${s.toString(16).padStart(4,"0")}`}function dT(s){let e=`\`${Py(s)}\``;return Mm.isInvisibleCharacter(s)||(e+=` "${`${CD(s)}`}"`),e}function CD(s){return s===96?"`` ` ``":"`"+String.fromCodePoint(s)+"`"}function hT(s,e){return Hm.computeUnicodeHighlightReason(s,e)}var Ds=class{constructor(){this.map=new Map}getDecorationFromOptions(e){return this.getDecoration(!e.includeComments,!e.includeStrings)}getDecoration(e,t){let i=`${e}${t}`,n=this.map.get(i);return n||(n=xe.createDynamic({description:"unicode-highlight",stickiness:1,className:"unicode-highlight",showIfCollapsed:!0,overviewRuler:null,minimap:null,hideInCommentTokens:e,hideInStringTokens:t}),this.map.set(i,n)),n}};Ds.instance=new Ds;var uT=class extends F{constructor(){super({id:jo.ID,label:u("action.unicodeHighlight.disableHighlightingInComments","Disable highlighting of characters in comments"),alias:"Disable highlighting of characters in comments",precondition:void 0});this.shortLabel=u("unicodeHighlight.disableHighlightingInComments.shortLabel","Disable Highlight In Comments")}run(e,t,i){return $t(this,void 0,void 0,function*(){let n=e==null?void 0:e.get(it);n&&this.runAction(n)})}runAction(e){return $t(this,void 0,void 0,function*(){yield e.updateValue(Gn.includeComments,!1,1)})}},pT=class extends F{constructor(){super({id:jo.ID,label:u("action.unicodeHighlight.disableHighlightingInStrings","Disable highlighting of characters in strings"),alias:"Disable highlighting of characters in strings",precondition:void 0});this.shortLabel=u("unicodeHighlight.disableHighlightingInStrings.shortLabel","Disable Highlight In Strings")}run(e,t,i){return $t(this,void 0,void 0,function*(){let n=e==null?void 0:e.get(it);n&&this.runAction(n)})}runAction(e){return $t(this,void 0,void 0,function*(){yield e.updateValue(Gn.includeStrings,!1,1)})}},jo=class extends F{constructor(){super({id:jo.ID,label:u("action.unicodeHighlight.disableHighlightingOfAmbiguousCharacters","Disable highlighting of ambiguous characters"),alias:"Disable highlighting of ambiguous characters",precondition:void 0});this.shortLabel=u("unicodeHighlight.disableHighlightingOfAmbiguousCharacters.shortLabel","Disable Ambiguous Highlight")}run(e,t,i){return $t(this,void 0,void 0,function*(){let n=e==null?void 0:e.get(it);n&&this.runAction(n)})}runAction(e){return $t(this,void 0,void 0,function*(){yield e.updateValue(Gn.ambiguousCharacters,!1,1)})}};jo.ID="editor.action.unicodeHighlight.disableHighlightingOfAmbiguousCharacters";var Rs=class extends F{constructor(){super({id:Rs.ID,label:u("action.unicodeHighlight.disableHighlightingOfInvisibleCharacters","Disable highlighting of invisible characters"),alias:"Disable highlighting of invisible characters",precondition:void 0});this.shortLabel=u("unicodeHighlight.disableHighlightingOfInvisibleCharacters.shortLabel","Disable Invisible Highlight")}run(e,t,i){return $t(this,void 0,void 0,function*(){let n=e==null?void 0:e.get(it);n&&this.runAction(n)})}runAction(e){return $t(this,void 0,void 0,function*(){yield e.updateValue(Gn.invisibleCharacters,!1,1)})}};Rs.ID="editor.action.unicodeHighlight.disableHighlightingOfInvisibleCharacters";var As=class extends F{constructor(){super({id:As.ID,label:u("action.unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters","Disable highlighting of non basic ASCII characters"),alias:"Disable highlighting of non basic ASCII characters",precondition:void 0});this.shortLabel=u("unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters.shortLabel","Disable Non ASCII Highlight")}run(e,t,i){return $t(this,void 0,void 0,function*(){let n=e==null?void 0:e.get(it);n&&this.runAction(n)})}runAction(e){return $t(this,void 0,void 0,function*(){yield e.updateValue(Gn.nonBasicASCII,!1,1)})}};As.ID="editor.action.unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters";var ll=class extends F{constructor(){super({id:ll.ID,label:u("action.unicodeHighlight.showExcludeOptions","Show Exclude Options"),alias:"Show Exclude Options",precondition:void 0})}run(e,t,i){return $t(this,void 0,void 0,function*(){let{codePoint:n,reason:o,inString:r,inComment:a}=i,l=String.fromCodePoint(n),c=e.get(Wi),d=e.get(it);function h(f){return Mm.isInvisibleCharacter(f)?u("unicodeHighlight.excludeInvisibleCharFromBeingHighlighted","Exclude {0} (invisible character) from being highlighted",Py(f)):u("unicodeHighlight.excludeCharFromBeingHighlighted","Exclude {0} from being highlighted",`${Py(f)} "${l}"`)}let p=[];if(o.kind===0)for(let f of o.notAmbiguousInLocales)p.push({label:u("unicodeHighlight.allowCommonCharactersInLanguage",'Allow unicode characters that are more common in the language "{0}".',f),run:()=>$t(this,void 0,void 0,function*(){wD(d,[f])})});if(p.push({label:h(n),run:()=>_D(d,[n])}),a){let f=new uT;p.push({label:f.label,run:()=>$t(this,void 0,void 0,function*(){return f.runAction(d)})})}else if(r){let f=new pT;p.push({label:f.label,run:()=>$t(this,void 0,void 0,function*(){return f.runAction(d)})})}if(o.kind===0){let f=new jo;p.push({label:f.label,run:()=>$t(this,void 0,void 0,function*(){return f.runAction(d)})})}else if(o.kind===1){let f=new Rs;p.push({label:f.label,run:()=>$t(this,void 0,void 0,function*(){return f.runAction(d)})})}else if(o.kind===2){let f=new As;p.push({label:f.label,run:()=>$t(this,void 0,void 0,function*(){return f.runAction(d)})})}else TD(o);let m=yield c.pick(p,{title:u("unicodeHighlight.configureUnicodeHighlightOptions","Configure Unicode Highlight Options")});m&&(yield m.run())})}};ll.ID="editor.action.unicodeHighlight.showExcludeOptions";function _D(s,e){return $t(this,void 0,void 0,function*(){let t=s.getValue(Gn.allowedCharacters),i;typeof t=="object"&&t?i=t:i={};for(let n of e)i[String.fromCodePoint(n)]=!0;yield s.updateValue(Gn.allowedCharacters,i,1)})}function wD(s,e){var t;return $t(this,void 0,void 0,function*(){let i=(t=s.inspect(Gn.allowedLocales).user)===null||t===void 0?void 0:t.value,n;typeof i=="object"&&i?n=Object.assign({},i):n={};for(let o of e)n[o]=!0;yield s.updateValue(Gn.allowedLocales,n,1)})}function TD(s){throw new Error(`Unexpected value: ${s}`)}I(jo);I(Rs);I(As);I(ll);J(al.ID,al);ke();ke();tt();Re();jt();rn();Co();ke();ut();Le();B();ga();qt();Xt();ue();ee();Re();ca();jt();md();Co();Le();B();tt();ee();Re();var Fp=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Np=class{constructor(e,t){this.range=e,this.direction=t}},zp=class{constructor(e,t,i){this.hint=e,this.anchor=t,this.provider=i,this._isResolved=!1}with(e){let t=new zp(this.hint,e.anchor,this.provider);return t._isResolved=this._isResolved,t._currentResolve=this._currentResolve,t}resolve(e){return Fp(this,void 0,void 0,function*(){if(typeof this.provider.resolveInlayHint=="function"){if(this._currentResolve)return yield this._currentResolve,e.isCancellationRequested?void 0:this.resolve(e);this._isResolved||(this._currentResolve=this._doResolve(e).finally(()=>this._currentResolve=void 0)),yield this._currentResolve}})}_doResolve(e){var t,i;return Fp(this,void 0,void 0,function*(){try{let n=yield Promise.resolve(this.provider.resolveInlayHint(this.hint,e));this.hint.tooltip=(t=n==null?void 0:n.tooltip)!==null&&t!==void 0?t:this.hint.tooltip,this.hint.label=(i=n==null?void 0:n.label)!==null&&i!==void 0?i:this.hint.label,this._isResolved=!0}catch(n){Ue(n),this._isResolved=!1}})}},Fs=class{constructor(e,t,i){this._disposables=new R,this.ranges=e,this.provider=new Set;let n=[];for(let[o,r]of t){this._disposables.add(o),this.provider.add(r);for(let a of o.hints){let l=i.validatePosition(a.position),c="before",d=Fs._getRangeAtPosition(i,l),h;d.getStartPosition().isBefore(l)?(h=b.fromPositions(d.getStartPosition(),l),c="after"):(h=b.fromPositions(l,d.getEndPosition()),c="before"),n.push(new zp(a,new Np(h,c),r))}}this.items=n.sort((o,r)=>U.compare(o.hint.position,r.hint.position))}static create(e,t,i){return Fp(this,void 0,void 0,function*(){let n=[],o=Sa.ordered(e).reverse().map(r=>t.map(a=>Fp(this,void 0,void 0,function*(){try{let l=yield r.provideInlayHints(e,a,i);(l==null?void 0:l.hints.length)&&n.push([l,r])}catch(l){Ue(l)}})));if(yield Promise.all(o.flat()),i.isCancellationRequested||e.isDisposed())throw new lS;return new Fs(t,n,e)})}dispose(){this._disposables.dispose()}static _getRangeAtPosition(e,t){let i=t.lineNumber,n=e.getWordAtPosition(t);if(n)return new b(i,n.startColumn,i,n.endColumn);e.tokenizeIfCheap(i);let o=e.getLineTokens(i),r=t.column-1,a=o.findTokenIndexAtOffset(r),l=o.getStartOffset(a),c=o.getEndOffset(a);return c-l===1&&(l===r&&a>1?(l=o.getStartOffset(a-1),c=o.getEndOffset(a-1)):c===r&&a<o.getCount()-1&&(l=o.getStartOffset(a+1),c=o.getEndOffset(a+1))),new b(i,l+1,i,c+1)}};Ae();os();ut();ue();ee();Co();ri();_t();Ee();Be();var dc=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})};function mT(s,e,t,i){var n;return dc(this,void 0,void 0,function*(){let o=s.get(Gt),r=s.get(Po),a=s.get(dt),l=s.get(le),c=s.get(Ze);if(yield i.item.resolve(ge.None),!i.part.location)return;let d=i.part.location,h=[],p=new Set(Oi.getMenuItems(se.EditorContext).map(f=>fv(f)?f.command.id:""));for(let f of bv.getEditorActions())f instanceof zo&&p.has(f.id)&&h.push(new _o(f.id,f.label,void 0,!0,()=>dc(this,void 0,void 0,function*(){let v=yield o.createModelReference(d.uri);try{yield l.invokeFunction(f.run.bind(f),e,new _s(v.object.textEditorModel,b.getStartPosition(d.range)))}finally{v.dispose()}})));if(i.part.command){let{command:f}=i.part;h.push(new qn),h.push(new _o(f.id,f.title,void 0,!0,()=>dc(this,void 0,void 0,function*(){var v;try{yield a.executeCommand(f.id,...(v=f.arguments)!==null&&v!==void 0?v:[])}catch(_){c.notify({severity:su.Error,source:i.item.provider.displayName,message:_})}})))}let m=e.getOption(115);r.showContextMenu({domForShadowRoot:m&&(n=e.getDomNode())!==null&&n!==void 0?n:void 0,getAnchor:()=>{let f=ni(t);return{x:f.left,y:f.top+f.height+8}},getActions:()=>h,onHide:()=>{e.focus()},autoSelectFirstItem:!0})})}function gT(s,e,t,i){return dc(this,void 0,void 0,function*(){let o=yield s.get(Gt).createModelReference(i.uri);yield t.invokeWithinContext(r=>dc(this,void 0,void 0,function*(){let a=e.hasSideBySideModifier,l=r.get(ie),c=Ot.inPeekEditor.getValue(l),d=!a&&t.getOption(78)&&!c;return new kr({openToSide:a,openInPeek:d,muteMessage:!0},{alias:"",label:"",id:"",precondition:void 0}).run(r,t,{model:o.object.textEditorModel,position:b.getStartPosition(i.range)})})),o.dispose()})}_t();ts();Be();mt();Ne();var ED=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},cc=function(s,e){return function(t,i){e(t,i,s)}},Op=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},hc=class{constructor(){this._entries=new Un(50)}get(e){let t=hc._key(e);return this._entries.get(t)}set(e,t){let i=hc._key(e);this._entries.set(i,t)}static _key(e){return`${e.uri.toString()}/${e.getVersionId()}`}},fT=Fi("IInlayHintsCache");Ni(fT,hc,!0);var uc=class{constructor(e,t){this.item=e,this.index=t}get part(){let e=this.item.hint.label;return typeof e=="string"?{label:e}:e[this.index]}},Ar=class Dy{constructor(e,t,i,n,o,r){this._editor=e,this._inlayHintsCache=i,this._commandService=n,this._notificationService=o,this._instaService=r,this._disposables=new R,this._sessionDisposables=new R,this._decorationsMetadata=new Map,this._ruleFactory=new Zh(this._editor),this._debounceInfo=t.for(Sa,"InlayHint",{min:25}),this._disposables.add(Sa.onDidChange(()=>this._update())),this._disposables.add(e.onDidChangeModel(()=>this._update())),this._disposables.add(e.onDidChangeModelLanguage(()=>this._update())),this._disposables.add(e.onDidChangeConfiguration(a=>{a.hasChanged(127)&&this._update()})),this._update()}static get(e){var t;return(t=e.getContribution(Dy.ID))!==null&&t!==void 0?t:void 0}dispose(){this._sessionDisposables.dispose(),this._removeAllDecorations(),this._disposables.dispose()}_update(){if(this._sessionDisposables.clear(),this._removeAllDecorations(),!this._editor.getOption(127).enabled)return;let e=this._editor.getModel();if(!e||!Sa.has(e))return;let t=this._inlayHintsCache.get(e);t&&this._updateHintsDecorators([e.getFullModelRange()],t),this._sessionDisposables.add(We(()=>{e.isDisposed()||this._cacheHintsForFastRestore(e)}));let i,n=new Set,o=new $e(()=>Op(this,void 0,void 0,function*(){let r=Date.now();i==null||i.dispose(!0),i=new Ft;let a=e.onWillDispose(()=>i==null?void 0:i.cancel());try{let l=i.token,c=yield Fs.create(e,this._getHintsRanges(),l);if(o.delay=this._debounceInfo.update(e,Date.now()-r),l.isCancellationRequested){c.dispose();return}for(let d of c.provider)typeof d.onDidChangeInlayHints=="function"&&!n.has(d)&&(n.add(d),this._sessionDisposables.add(d.onDidChangeInlayHints(()=>{o.isScheduled()||o.schedule()})));this._sessionDisposables.add(c),this._updateHintsDecorators(c.ranges,c.items),this._cacheHintsForFastRestore(e)}catch(l){de(l)}finally{i.dispose(),a.dispose()}}),this._debounceInfo.get(e));this._sessionDisposables.add(o),this._sessionDisposables.add(We(()=>i==null?void 0:i.dispose(!0))),o.schedule(0),this._sessionDisposables.add(this._editor.onDidScrollChange(r=>{(r.scrollTopChanged||!o.isScheduled())&&o.schedule()})),this._sessionDisposables.add(this._editor.onDidChangeModelContent(r=>{let a=Math.max(o.delay,1250);o.schedule(a)})),this._sessionDisposables.add(this._installLinkGesture()),this._sessionDisposables.add(this._installContextMenu())}_installLinkGesture(){let e=()=>{},t=new bs(this._editor);return t.onMouseMoveOrRelevantKeyDown(i=>{let[n]=i,o=this._getInlayHintLabelPart(n),r=this._editor.getModel();if(!o||!n.hasTriggerModifier||!r){e();return}if(n.hasTriggerModifier&&(o.part.command||o.part.location)){let a=new Ft;o.item.resolve(a.token),this._activeInlayHintPart=o;let l=this._activeInlayHintPart.item.hint.position.lineNumber,c=new b(l,1,l,r.getLineMaxColumn(l)),d=new Set;for(let h of this._decorationsMetadata.values())c.containsRange(h.item.anchor.range)&&d.add(h.item);this._updateHintsDecorators([c],Array.from(d)),e=()=>{a.dispose(!0),this._activeInlayHintPart=void 0,this._updateHintsDecorators([c],Array.from(d))}}}),t.onCancel(e),t.onExecute(i=>Op(this,void 0,void 0,function*(){var n;let o=this._getInlayHintLabelPart(i);if(o){let r=o.part;if(r.location)this._instaService.invokeFunction(gT,i,this._editor,r.location);else if(RS.is(r.command))try{yield this._commandService.executeCommand(r.command.id,...(n=r.command.arguments)!==null&&n!==void 0?n:[])}catch(a){this._notificationService.notify({severity:su.Error,source:o.item.provider.displayName,message:a})}}})),t}_installContextMenu(){return this._editor.onContextMenu(e=>Op(this,void 0,void 0,function*(){if(!(e.event.target instanceof HTMLElement))return;let t=this._getInlayHintLabelPart(e);t&&(yield this._instaService.invokeFunction(mT,this._editor,e.event.target,t))}))}_getInlayHintLabelPart(e){var t;if(e.target.type!==6)return;let i=(t=e.target.detail.injectedText)===null||t===void 0?void 0:t.options;if(i instanceof iu&&(i==null?void 0:i.attachedData)instanceof uc)return i.attachedData}_cacheHintsForFastRestore(e){let t=new Map;for(let[i,n]of this._decorationsMetadata){if(t.has(n.item))continue;let o=n.item,r=e.getDecorationRange(i);if(r){let a=new Np(r,n.item.anchor.direction);o=n.item.with({anchor:a})}t.set(n.item,o)}this._inlayHintsCache.set(e,Array.from(t.values()))}_getHintsRanges(){let t=this._editor.getModel(),i=this._editor.getVisibleRangesPlusViewportAboveBelow(),n=[];for(let o of i.sort(b.compareRangesUsingStarts)){let r=t.validateRange(new b(o.startLineNumber-30,o.startColumn,o.endLineNumber+30,o.endColumn));n.length===0||!b.areIntersectingOrTouching(n[n.length-1],r)?n.push(r):n[n.length-1]=b.plusRange(n[n.length-1],r)}return n}_updateHintsDecorators(e,t){var i,n;let o=[],r=(m,f,v,_,w)=>{o.push({item:m,classNameRef:f,decoration:{range:m.anchor.range,options:{description:"InlayHint",showIfCollapsed:m.anchor.range.isEmpty(),collapseOnReplaceEdit:!m.anchor.range.isEmpty(),stickiness:0,[m.anchor.direction]:{content:v,inlineClassNameAffectsLetterSpacing:!0,inlineClassName:f.className,cursorStops:_,attachedData:w}}}})},a=(m,f)=>{let v=this._ruleFactory.createClassNameRef({width:`${l/3|0}px`,display:"inline-block"});r(m,v,"\u200A",f?Bl.Right:Bl.None)},{fontSize:l,fontFamily:c}=this._getLayoutInfo(),d="--code-editorInlayHintsFontFamily";this._editor.getContainerDomNode().style.setProperty(d,c);for(let m of t){m.hint.paddingLeft&&a(m,!1);let f=typeof m.hint.label=="string"?[{label:m.hint.label}]:m.hint.label;for(let v=0;v<f.length;v++){let _=f[v],w=v===0,A=v===f.length-1,M={fontSize:`${l}px`,fontFamily:`var(${d}), ${lr.fontFamily}`,verticalAlign:"middle"};this._fillInColors(M,m.hint),(_.command||_.location)&&((i=this._activeInlayHintPart)===null||i===void 0?void 0:i.item)===m&&this._activeInlayHintPart.index===v&&(M.textDecoration="underline",M.cursor="pointer",M.color=nt(La)),w&&A?(M.padding=`1px ${Math.max(1,l/4)|0}px`,M.borderRadius=`${l/4|0}px`):w?(M.padding=`1px 0 1px ${Math.max(1,l/4)|0}px`,M.borderRadius=`${l/4|0}px 0 0 ${l/4|0}px`):A?(M.padding=`1px ${Math.max(1,l/4)|0}px 1px 0`,M.borderRadius=`0 ${l/4|0}px ${l/4|0}px 0`):M.padding="1px 0 1px 0",r(m,this._ruleFactory.createClassNameRef(M),ID(_.label),A&&!m.hint.paddingRight?Bl.Right:Bl.None,new uc(m,v))}if(m.hint.paddingRight&&a(m,!0),o.length>Dy._MAX_DECORATORS)break}let h=[];for(let m of e)for(let{id:f}of(n=this._editor.getDecorationsInRange(m))!==null&&n!==void 0?n:[]){let v=this._decorationsMetadata.get(f);v&&(h.push(f),v.classNameRef.dispose(),this._decorationsMetadata.delete(f))}let p=this._editor.deltaDecorations(h,o.map(m=>m.decoration));for(let m=0;m<p.length;m++){let f=o[m];this._decorationsMetadata.set(p[m],{item:f.item,classNameRef:f.classNameRef})}}_fillInColors(e,t){t.kind===Dm.Parameter?(e.backgroundColor=nt(Zv),e.color=nt(Yv)):t.kind===Dm.Type?(e.backgroundColor=nt(Xv),e.color=nt(qv)):(e.backgroundColor=nt(Kv),e.color=nt($v))}_getLayoutInfo(){let e=this._editor.getOption(127),t=this._editor.getOption(46),i=e.fontSize;(!i||i<5||i>t)&&(i=t*.9|0);let n=e.fontFamily||this._editor.getOption(43);return{fontSize:i,fontFamily:n}}_removeAllDecorations(){this._editor.deltaDecorations(Array.from(this._decorationsMetadata.keys()),[]);for(let e of this._decorationsMetadata.values())e.classNameRef.dispose();this._decorationsMetadata.clear()}};Ar.ID="editor.contrib.InlayHints";Ar._MAX_DECORATORS=1500;Ar=ED([cc(1,Qn),cc(2,fT),cc(3,dt),cc(4,Ze),cc(5,le)],Ar);function ID(s){let e="\xA0";return s.replace(/[ \t]/g,e)}J(Ar.ID,Ar);Pe.registerCommand("_executeInlayHintProvider",(s,...e)=>Op(void 0,void 0,void 0,function*(){let[t,i]=e;qe(_e.isUri(t)),qe(b.isIRange(i));let n=yield s.get(Gt).createModelReference(t);try{let o=yield Fs.create(n.object.textEditorModel,[b.lift(i)],ge.None),r=o.items.map(a=>a.hint);return setTimeout(()=>o.dispose(),0),r}finally{n.dispose()}}));kn();qi();var kD=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Hp=function(s,e){return function(t,i){e(t,i,s)}},yT=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},LD=function(s){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=s[Symbol.asyncIterator],t;return e?e.call(s):(s=typeof __values=="function"?__values(s):s[Symbol.iterator](),t={},i("next"),i("throw"),i("return"),t[Symbol.asyncIterator]=function(){return this},t);function i(o){t[o]=s[o]&&function(r){return new Promise(function(a,l){r=s[o](r),n(a,l,r.done,r.value)})}}function n(o,r,a,l){Promise.resolve(l).then(function(c){o({value:c,done:a})},r)}},Ry=class extends ws{constructor(e,t){super(10,t,e.item.anchor.range);this.part=e}},Wp=class extends Ka{constructor(e,t,i,n,o){super(e,t,i,n);this._resolverService=o}suggestHoverAnchor(e){var t;if(!Ar.get(this._editor)||e.target.type!==6)return null;let n=(t=e.target.detail.injectedText)===null||t===void 0?void 0:t.options;return n instanceof iu&&n.attachedData instanceof uc?new Ry(n.attachedData,this):null}computeSync(){return[]}computeAsync(e,t,i){return e instanceof Ry?new Si(n=>yT(this,void 0,void 0,function*(){var o,r;let{part:a}=e;if(yield a.item.resolve(i),i.isCancellationRequested)return;let l;typeof a.item.hint.tooltip=="string"?l=new ai().appendText(a.item.hint.tooltip):a.item.hint.tooltip&&(l=a.item.hint.tooltip),l&&n.emitOne(new Fn(this,e.range,[l],0));let c;typeof a.part.tooltip=="string"?c=new ai().appendText(a.part.tooltip):a.part.tooltip&&(c=a.part.tooltip),c&&n.emitOne(new Fn(this,e.range,[c],1));let d=yield this._resolveInlayHintLabelPartHover(a,i);try{for(var h=LD(d),p;p=yield h.next(),!p.done;){let m=p.value;n.emitOne(m)}}catch(m){o={error:m}}finally{try{p&&!p.done&&(r=h.return)&&(yield r.call(h))}finally{if(o)throw o.error}}})):Si.EMPTY}_resolveInlayHintLabelPartHover(e,t){return yT(this,void 0,void 0,function*(){if(!e.part.location)return Si.EMPTY;let{uri:i,range:n}=e.part.location,o=yield this._resolverService.createModelReference(i);try{let r=o.object.textEditorModel;return ba.has(r)?Yd(r,new U(n.startLineNumber,n.startColumn),t).filter(a=>!_r(a.hover.contents)).map(a=>new Fn(this,e.item.anchor.range,a.hover.contents,2+a.ordinal)):Si.EMPTY}finally{o.dispose()}})}};Wp=kD([Hp(1,ft),Hp(2,bt),Hp(3,it),Hp(4,Gt)],Wp);He();De();var Fy=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Bp=function(s,e){return function(t,i){e(t,i,s)}},bT=W,pc=class ST extends z{constructor(e,t,i){super();this._editor=e,this._instantiationService=t,this._keybindingService=i,this._participants=[this._instantiationService.createInstance(ep,this._editor),this._instantiationService.createInstance(Ka,this._editor),this._instantiationService.createInstance(Mp,this._editor),this._instantiationService.createInstance(Ap,this._editor),this._instantiationService.createInstance(lp,this._editor),this._instantiationService.createInstance(Wp,this._editor)],this._widget=this._register(this._instantiationService.createInstance(Fr,this._editor)),this._decorationsChangerListener=this._register(new vT(this._editor)),this._computer=new mc(this._editor,this._participants),this._hoverOperation=this._register(new $d(this._editor,this._computer)),this._messages=[],this._messagesAreComplete=!1,this._register(this._hoverOperation.onResult(n=>{this._withResult(n.value,n.isComplete,n.hasLoadingMessage)})),this._register(this._decorationsChangerListener.onDidChangeModelDecorations(()=>this._onModelDecorationsChanged())),this._register(zi(this._widget.getDomNode(),"keydown",n=>{n.equals(9)&&this.hide()})),this._register(va.onDidChange(()=>{this._widget.position&&this._computer.anchor&&this._messages.length>0&&(this._widget.clear(),this._renderMessages(this._computer.anchor,this._messages))}))}_onModelDecorationsChanged(){this._widget.position&&(this._hoverOperation.cancel(),this._widget.colorPicker||this._hoverOperation.start(0))}maybeShowAt(e){let t=[];for(let n of this._participants)if(n.suggestHoverAnchor){let o=n.suggestHoverAnchor(e);o&&t.push(o)}let i=e.target;if(i.type===6&&t.push(new Kd(0,i.range)),i.type===7){let n=this._editor.getOption(44).typicalHalfwidthCharacterWidth/2;!i.detail.isAfterLines&&typeof i.detail.horizontalDistanceToText=="number"&&i.detail.horizontalDistanceToText<n&&t.push(new Kd(0,i.range))}return t.length===0?!1:(t.sort((n,o)=>o.priority-n.priority),this._startShowingAt(t[0],0,!1),!0)}startShowingAtRange(e,t,i){this._startShowingAt(new Kd(0,e),t,i)}_startShowingAt(e,t,i){if(!(this._computer.anchor&&this._computer.anchor.equals(e))){if(this._hoverOperation.cancel(),this._widget.position)if(!this._computer.anchor||!e.canAdoptVisibleHover(this._computer.anchor,this._widget.position))this.hide();else{let n=this._messages.filter(o=>o.isValidForHoverAnchor(e));if(n.length===0)this.hide();else{if(n.length===this._messages.length&&this._messagesAreComplete)return;this._renderMessages(e,n)}}this._computer.anchor=e,this._computer.shouldFocus=i,this._hoverOperation.start(t)}}hide(){this._computer.anchor=null,this._hoverOperation.cancel(),this._widget.hide()}isColorPickerVisible(){return!!this._widget.colorPicker}_addLoadingMessage(e){if(this._computer.anchor){for(let t of this._participants)if(t.createLoadingMessage){let i=t.createLoadingMessage(this._computer.anchor);if(i)return e.slice(0).concat([i])}}return e}_withResult(e,t,i){this._messages=i?this._addLoadingMessage(e):e,this._messagesAreComplete=t,this._computer.anchor&&this._messages.length>0?this._renderMessages(this._computer.anchor,this._messages):t&&this.hide()}_renderMessages(e,t){let i=1073741824,n=t[0].range,o=null;for(let h of t)i=Math.min(i,h.range.startColumn),n=b.plusRange(n,h.range),h.forceShowAtRange&&(o=h.range);let r=new R,a=r.add(new Ay(this._keybindingService)),l=document.createDocumentFragment(),c=null,d={fragment:l,statusBar:a,setColorPicker:h=>c=h,onContentsChanged:()=>this._widget.onContentsChanged(),hide:()=>this.hide()};for(let h of this._participants){let p=t.filter(m=>m.owner===h);p.length>0&&r.add(h.renderHoverParts(d,p))}if(a.hasContent&&l.appendChild(a.hoverElement),l.hasChildNodes()){if(n){let h=this._decorationsChangerListener.deltaDecorations([],[{range:n,options:ST._DECORATION_OPTIONS}]);r.add(We(()=>{this._decorationsChangerListener.deltaDecorations(h,[])}))}this._widget.showAt(l,new xT(c,o?o.getStartPosition():new U(e.range.startLineNumber,i),o||n,this._editor.getOption(53).above,this._computer.shouldFocus,r))}else r.dispose()}};pc._DECORATION_OPTIONS=xe.register({description:"content-hover-highlight",className:"hoverHighlight"});pc=Fy([Bp(1,le),Bp(2,rt)],pc);var vT=class extends z{constructor(e){super();this._editor=e,this._onDidChangeModelDecorations=this._register(new G),this.onDidChangeModelDecorations=this._onDidChangeModelDecorations.event,this._isChangingDecorations=!1,this._register(this._editor.onDidChangeModelDecorations(t=>{this._isChangingDecorations||this._onDidChangeModelDecorations.fire(t)}))}deltaDecorations(e,t){try{return this._isChangingDecorations=!0,this._editor.deltaDecorations(e,t)}finally{this._isChangingDecorations=!1}}},xT=class{constructor(e,t,i,n,o,r){this.colorPicker=e,this.showAtPosition=t,this.showAtRange=i,this.preferAbove=n,this.stoleFocus=o,this.disposables=r}},Fr=class CT extends z{constructor(e,t){super();this._editor=e,this._contextKeyService=t,this.allowEditorOverflow=!0,this._hoverVisibleKey=S.hoverVisible.bindTo(this._contextKeyService),this._hover=this._register(new jd),this._visibleData=null,this._register(this._editor.onDidLayoutChange(()=>this._layout())),this._register(this._editor.onDidChangeConfiguration(i=>{i.hasChanged(44)&&this._updateFont()})),this._setVisibleData(null),this._layout(),this._editor.addContentWidget(this)}get position(){var e,t;return(t=(e=this._visibleData)===null||e===void 0?void 0:e.showAtPosition)!==null&&t!==void 0?t:null}get colorPicker(){var e,t;return(t=(e=this._visibleData)===null||e===void 0?void 0:e.colorPicker)!==null&&t!==void 0?t:null}dispose(){this._editor.removeContentWidget(this),this._visibleData&&this._visibleData.disposables.dispose(),super.dispose()}getId(){return CT.ID}getDomNode(){return this._hover.containerDomNode}getPosition(){if(!this._visibleData)return null;let e=this._visibleData.preferAbove;return!e&&this._contextKeyService.getContextKeyValue(Ce.Visible.key)&&(e=!0),{position:this._visibleData.showAtPosition,range:this._visibleData.showAtRange,preference:e?[1,2]:[2,1]}}_setVisibleData(e){this._visibleData&&this._visibleData.disposables.dispose(),this._visibleData=e,this._hoverVisibleKey.set(!!this._visibleData),this._hover.containerDomNode.classList.toggle("hidden",!this._visibleData)}_layout(){let e=Math.max(this._editor.getLayoutInfo().height/4,250),{fontSize:t,lineHeight:i}=this._editor.getOption(44);this._hover.contentsDomNode.style.fontSize=`${t}px`,this._hover.contentsDomNode.style.lineHeight=`${i/t}`,this._hover.contentsDomNode.style.maxHeight=`${e}px`,this._hover.contentsDomNode.style.maxWidth=`${Math.max(this._editor.getLayoutInfo().width*.66,500)}px`}_updateFont(){Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName("code")).forEach(t=>this._editor.applyFontInfo(t))}showAt(e,t){this._setVisibleData(t),this._hover.contentsDomNode.textContent="",this._hover.contentsDomNode.appendChild(e),this._hover.contentsDomNode.style.paddingBottom="",this._updateFont(),this._editor.layoutContentWidget(this),this.onContentsChanged(),this._editor.render(),this._editor.layoutContentWidget(this),this.onContentsChanged(),t.stoleFocus&&this._hover.containerDomNode.focus(),t.colorPicker&&t.colorPicker.layout()}hide(){if(this._visibleData){let e=this._visibleData.stoleFocus;this._setVisibleData(null),this._editor.layoutContentWidget(this),e&&this._editor.focus()}}onContentsChanged(){this._hover.onContentsChanged();let e=this._hover.scrollbar.getScrollDimensions();if(e.scrollWidth>e.width){let i=`${this._hover.scrollbar.options.horizontalScrollbarSize}px`;this._hover.contentsDomNode.style.paddingBottom!==i&&(this._hover.contentsDomNode.style.paddingBottom=i,this._editor.layoutContentWidget(this),this._hover.onContentsChanged())}}clear(){this._hover.contentsDomNode.textContent=""}};Fr.ID="editor.contrib.contentHoverWidget";Fr=Fy([Bp(1,ie)],Fr);var Ay=class extends z{constructor(e){super();this._keybindingService=e,this._hasContent=!1,this.hoverElement=bT("div.hover-row.status-bar"),this.actionsElement=H(this.hoverElement,bT("div.actions"))}get hasContent(){return this._hasContent}addAction(e){let t=this._keybindingService.lookupKeybinding(e.commandId),i=t?t.getLabel():null;return this._hasContent=!0,this._register(Ud.render(this.actionsElement,e,i))}append(e){let t=H(this.actionsElement,e);return this._hasContent=!0,t}};Ay=Fy([Bp(0,rt)],Ay);var mc=class{constructor(e,t){this._editor=e,this._participants=t,this._anchor=null,this._shouldFocus=!1}get anchor(){return this._anchor}set anchor(e){this._anchor=e}get shouldFocus(){return this._shouldFocus}set shouldFocus(e){this._shouldFocus=e}static _getLineDecorations(e,t){if(t.type!==1)return[];let i=e.getModel(),n=t.range.startLineNumber,o=i.getLineMaxColumn(n);return e.getLineDecorations(n).filter(r=>{if(r.options.isWholeLine)return!0;let a=r.range.startLineNumber===n?r.range.startColumn:1,l=r.range.endLineNumber===n?r.range.endColumn:o;if(r.options.showIfCollapsed){if(a>t.range.startColumn+1||t.range.endColumn-1>l)return!1}else if(a>t.range.startColumn||t.range.endColumn>l)return!1;return!0})}computeAsync(e){let t=this._anchor;if(!this._editor.hasModel()||!t)return Si.EMPTY;let i=mc._getLineDecorations(this._editor,t);return Si.merge(this._participants.map(n=>n.computeAsync?n.computeAsync(t,i,e):Si.EMPTY))}computeSync(){if(!this._editor.hasModel()||!this._anchor)return[];let e=mc._getLineDecorations(this._editor,this._anchor),t=[];for(let i of this._participants)t=t.concat(i.computeSync(this._anchor,e));return Vn(t)}};Ae();St();B();qi();var _T=W,Nr=class extends z{constructor(e,t,i=$x){super();this._renderDisposeables=this._register(new R),this._editor=e,this._isVisible=!1,this._messages=[],this._hover=this._register(new jd),this._hover.containerDomNode.classList.toggle("hidden",!this._isVisible),this._markdownRenderer=this._register(new Ii({editor:this._editor},t,i)),this._computer=new wT(this._editor),this._hoverOperation=this._register(new $d(this._editor,this._computer)),this._register(this._hoverOperation.onResult(n=>{this._withResult(n.value)})),this._register(this._editor.onDidChangeModelDecorations(()=>this._onModelDecorationsChanged())),this._register(this._editor.onDidChangeConfiguration(n=>{n.hasChanged(44)&&this._updateFont()})),this._editor.addOverlayWidget(this)}dispose(){this._editor.removeOverlayWidget(this),super.dispose()}getId(){return Nr.ID}getDomNode(){return this._hover.containerDomNode}getPosition(){return null}_updateFont(){Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName("code")).forEach(t=>this._editor.applyFontInfo(t))}_onModelDecorationsChanged(){this._isVisible&&(this._hoverOperation.cancel(),this._hoverOperation.start(0))}startShowingAt(e){this._computer.lineNumber!==e&&(this._hoverOperation.cancel(),this.hide(),this._computer.lineNumber=e,this._hoverOperation.start(0))}hide(){this._computer.lineNumber=-1,this._hoverOperation.cancel(),!!this._isVisible&&(this._isVisible=!1,this._hover.containerDomNode.classList.toggle("hidden",!this._isVisible))}_withResult(e){this._messages=e,this._messages.length>0?this._renderMessages(this._computer.lineNumber,this._messages):this.hide()}_renderMessages(e,t){this._renderDisposeables.clear();let i=document.createDocumentFragment();for(let n of t){let o=_T("div.hover-row.markdown-hover"),r=H(o,_T("div.hover-contents")),a=this._renderDisposeables.add(this._markdownRenderer.render(n.value));r.appendChild(a.element),i.appendChild(o)}this._updateContents(i),this._showAt(e)}_updateContents(e){this._hover.contentsDomNode.textContent="",this._hover.contentsDomNode.appendChild(e),this._updateFont()}_showAt(e){this._isVisible||(this._isVisible=!0,this._hover.containerDomNode.classList.toggle("hidden",!this._isVisible));let t=this._editor.getLayoutInfo(),i=this._editor.getTopForLineNumber(e),n=this._editor.getScrollTop(),o=this._editor.getOption(59),r=this._hover.containerDomNode.clientHeight,a=i-n-(r-o)/2;this._hover.containerDomNode.style.left=`${t.glyphMarginLeft+t.glyphMarginWidth}px`,this._hover.containerDomNode.style.top=`${Math.max(Math.round(a),0)}px`}};Nr.ID="editor.contrib.modesGlyphHoverWidget";var wT=class{constructor(e){this._editor=e,this._lineNumber=-1}get lineNumber(){return this._lineNumber}set lineNumber(e){this._lineNumber=e}computeSync(){let e=n=>({value:n}),t=this._editor.getLineDecorations(this._lineNumber),i=[];if(!t)return i;for(let n of t){if(!n.options.glyphMarginClassName)continue;let o=n.options.glyphMarginHoverMessage;!o||_r(o)||i.push(...ch(o).map(e))}return i}};Q();Ee();Be();qi();mt();Ne();var PD=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Vp=function(s,e){return function(t,i){e(t,i,s)}},Uo=class TT{constructor(e,t,i,n,o){this._editor=e,this._instantiationService=t,this._openerService=i,this._languageService=n,this._toUnhook=new R,this._isMouseDown=!1,this._hoverClicked=!1,this._contentWidget=null,this._glyphWidget=null,this._hookEvents(),this._didChangeConfigurationHandler=this._editor.onDidChangeConfiguration(r=>{r.hasChanged(53)&&(this._unhookEvents(),this._hookEvents())})}static get(e){return e.getContribution(TT.ID)}_hookEvents(){let e=()=>this._hideWidgets(),t=this._editor.getOption(53);this._isHoverEnabled=t.enabled,this._isHoverSticky=t.sticky,this._isHoverEnabled?(this._toUnhook.add(this._editor.onMouseDown(i=>this._onEditorMouseDown(i))),this._toUnhook.add(this._editor.onMouseUp(i=>this._onEditorMouseUp(i))),this._toUnhook.add(this._editor.onMouseMove(i=>this._onEditorMouseMove(i))),this._toUnhook.add(this._editor.onKeyDown(i=>this._onKeyDown(i)))):(this._toUnhook.add(this._editor.onMouseMove(i=>this._onEditorMouseMove(i))),this._toUnhook.add(this._editor.onKeyDown(i=>this._onKeyDown(i)))),this._toUnhook.add(this._editor.onMouseLeave(e)),this._toUnhook.add(this._editor.onDidChangeModel(e)),this._toUnhook.add(this._editor.onDidScrollChange(i=>this._onEditorScrollChanged(i)))}_unhookEvents(){this._toUnhook.clear()}_onEditorScrollChanged(e){(e.scrollTopChanged||e.scrollLeftChanged)&&this._hideWidgets()}_onEditorMouseDown(e){this._isMouseDown=!0;let t=e.target;if(t.type===9&&t.detail===Fr.ID){this._hoverClicked=!0;return}t.type===12&&t.detail===Nr.ID||(t.type!==12&&(this._hoverClicked=!1),this._hideWidgets())}_onEditorMouseUp(e){this._isMouseDown=!1}_onEditorMouseMove(e){var t,i,n,o,r;let a=e.target;if(this._isMouseDown&&this._hoverClicked||this._isHoverSticky&&a.type===9&&a.detail===Fr.ID||this._isHoverSticky&&!((i=(t=e.event.browserEvent.view)===null||t===void 0?void 0:t.getSelection())===null||i===void 0?void 0:i.isCollapsed)||!this._isHoverSticky&&a.type===9&&a.detail===Fr.ID&&((n=this._contentWidget)===null||n===void 0?void 0:n.isColorPickerVisible())||this._isHoverSticky&&a.type===12&&a.detail===Nr.ID)return;if(!this._isHoverEnabled){this._hideWidgets();return}if(this._getOrCreateContentWidget().maybeShowAt(e)){(o=this._glyphWidget)===null||o===void 0||o.hide();return}if(a.type===2&&a.position){(r=this._contentWidget)===null||r===void 0||r.hide(),this._glyphWidget||(this._glyphWidget=new Nr(this._editor,this._languageService,this._openerService)),this._glyphWidget.startShowingAt(a.position.lineNumber);return}this._hideWidgets()}_onKeyDown(e){e.keyCode!==5&&e.keyCode!==6&&e.keyCode!==57&&e.keyCode!==4&&this._hideWidgets()}_hideWidgets(){var e,t,i;this._isMouseDown&&this._hoverClicked&&((e=this._contentWidget)===null||e===void 0?void 0:e.isColorPickerVisible())||(this._hoverClicked=!1,(t=this._glyphWidget)===null||t===void 0||t.hide(),(i=this._contentWidget)===null||i===void 0||i.hide())}_getOrCreateContentWidget(){return this._contentWidget||(this._contentWidget=this._instantiationService.createInstance(pc,this._editor)),this._contentWidget}isColorPickerVisible(){var e;return((e=this._contentWidget)===null||e===void 0?void 0:e.isColorPickerVisible())||!1}showContentHover(e,t,i){this._getOrCreateContentWidget().startShowingAtRange(e,t,i)}dispose(){var e,t;this._unhookEvents(),this._toUnhook.dispose(),this._didChangeConfigurationHandler.dispose(),(e=this._glyphWidget)===null||e===void 0||e.dispose(),(t=this._contentWidget)===null||t===void 0||t.dispose()}};Uo.ID="editor.contrib.hover";Uo=PD([Vp(1,le),Vp(2,bt),Vp(3,ft),Vp(4,ie)],Uo);var ET=class extends F{constructor(){super({id:"editor.action.showHover",label:u({key:"showHover",comment:["Label for action that will trigger the showing of a hover in the editor.","This allows for users to show the hover without using the mouse."]},"Show Hover"),alias:"Show Hover",precondition:void 0,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2087),weight:100}})}run(e,t){if(!t.hasModel())return;let i=Uo.get(t);if(!i)return;let n=t.getPosition(),o=new b(n.lineNumber,n.column,n.lineNumber,n.column),r=t.getOption(2)===2;i.showContentHover(o,1,r)}},IT=class extends F{constructor(){super({id:"editor.action.showDefinitionPreviewHover",label:u({key:"showDefinitionPreviewHover",comment:["Label for action that will trigger the showing of definition preview hover in the editor.","This allows for users to show the definition preview hover without using the mouse."]},"Show Definition Preview Hover"),alias:"Show Definition Preview Hover",precondition:void 0})}run(e,t){let i=Uo.get(t);if(!i)return;let n=t.getPosition();if(!n)return;let o=new b(n.lineNumber,n.column,n.lineNumber,n.column),r=Lr.get(t);if(!r)return;r.startFindDefinitionFromCursor(n).then(()=>{i.showContentHover(o,1,!0)})}};J(Uo.ID,Uo);I(ET);I(IT);Me((s,e)=>{let t=s.getColor(jv);t&&e.addRule(`.monaco-editor .hoverHighlight { background-color: ${t}; }`);let i=s.getColor(To);i&&e.addRule(`.monaco-editor .monaco-hover { background-color: ${i}; }`);let n=s.getColor(ka);n&&(e.addRule(`.monaco-editor .monaco-hover { border: 1px solid ${n}; }`),e.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${n.transparent(.5)}; }`),e.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${n.transparent(.5)}; }`),e.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${n.transparent(.5)}; }`));let o=s.getColor(gr);o&&e.addRule(`.monaco-editor .monaco-hover a { color: ${o}; }`);let r=s.getColor(fr);r&&e.addRule(`.monaco-editor .monaco-hover a:hover { color: ${r}; }`);let a=s.getColor(Ia);a&&e.addRule(`.monaco-editor .monaco-hover { color: ${a}; }`);let l=s.getColor(Uv);l&&e.addRule(`.monaco-editor .monaco-hover .hover-row .actions { background-color: ${l}; }`);let c=s.getColor(Hh);c&&e.addRule(`.monaco-editor .monaco-hover code { background-color: ${c}; }`)});var Gp=class extends z{constructor(e){super();this._editor=e,this._register(e.onMouseDown(t=>this.onMouseDown(t)))}dispose(){super.dispose()}onMouseDown(e){let t=e.target;if(t.type!==6||!t.detail.injectedText||t.detail.injectedText.options.attachedData!==$g||!t.range)return;let i=this._editor.getContribution(Uo.ID);if(!!i&&!i.isColorPickerVisible()){let n=new b(t.range.startLineNumber,t.range.startColumn+1,t.range.endLineNumber,t.range.endColumn+1);i.showContentHover(n,1,!1)}}};Gp.ID="editor.contrib.colorContribution";J(Gp.ID,Gp);yo();ue();ee();He();sn();Do();tt();ee();Mt();var On=class{constructor(e,t,i){this.languageConfigurationService=i,this._selection=e,this._insertSpace=t,this._usedEndToken=null}static _haystackHasNeedleAtOffset(e,t,i){if(i<0)return!1;let n=t.length,o=e.length;if(i+n>o)return!1;for(let r=0;r<n;r++){let a=e.charCodeAt(i+r),l=t.charCodeAt(r);if(a!==l&&!(a>=65&&a<=90&&a+32===l)&&!(l>=65&&l<=90&&l+32===a))return!1}return!0}_createOperationsForBlockComment(e,t,i,n,o,r){let a=e.startLineNumber,l=e.startColumn,c=e.endLineNumber,d=e.endColumn,h=o.getLineContent(a),p=o.getLineContent(c),m=h.lastIndexOf(t,l-1+t.length),f=p.indexOf(i,d-1-i.length);if(m!==-1&&f!==-1)if(a===c)h.substring(m+t.length,f).indexOf(i)>=0&&(m=-1,f=-1);else{let _=h.substring(m+t.length),w=p.substring(0,f);(_.indexOf(i)>=0||w.indexOf(i)>=0)&&(m=-1,f=-1)}let v;m!==-1&&f!==-1?(n&&m+t.length<h.length&&h.charCodeAt(m+t.length)===32&&(t=t+" "),n&&f>0&&p.charCodeAt(f-1)===32&&(i=" "+i,f-=1),v=On._createRemoveBlockCommentOperations(new b(a,m+t.length+1,c,f+1),t,i)):(v=On._createAddBlockCommentOperations(e,t,i,this._insertSpace),this._usedEndToken=v.length===1?i:null);for(let _ of v)r.addTrackedEditOperation(_.range,_.text)}static _createRemoveBlockCommentOperations(e,t,i){let n=[];return b.isEmpty(e)?n.push(Ge.delete(new b(e.startLineNumber,e.startColumn-t.length,e.endLineNumber,e.endColumn+i.length))):(n.push(Ge.delete(new b(e.startLineNumber,e.startColumn-t.length,e.startLineNumber,e.startColumn))),n.push(Ge.delete(new b(e.endLineNumber,e.endColumn,e.endLineNumber,e.endColumn+i.length)))),n}static _createAddBlockCommentOperations(e,t,i,n){let o=[];return b.isEmpty(e)?o.push(Ge.replace(new b(e.startLineNumber,e.startColumn,e.endLineNumber,e.endColumn),t+"  "+i)):(o.push(Ge.insert(new U(e.startLineNumber,e.startColumn),t+(n?" ":""))),o.push(Ge.insert(new U(e.endLineNumber,e.endColumn),(n?" ":"")+i))),o}getEditOperations(e,t){let i=this._selection.startLineNumber,n=this._selection.startColumn;e.tokenizeIfCheap(i);let o=e.getLanguageIdAtPosition(i,n),r=this.languageConfigurationService.getLanguageConfiguration(o).comments;!r||!r.blockCommentStartToken||!r.blockCommentEndToken||this._createOperationsForBlockComment(this._selection,r.blockCommentStartToken,r.blockCommentEndToken,this._insertSpace,e,t)}computeCursorState(e,t){let i=t.getInverseEditOperations();if(i.length===2){let n=i[0],o=i[1];return new X(n.range.endLineNumber,n.range.endColumn,o.range.startLineNumber,o.range.startColumn)}else{let n=i[0].range,o=this._usedEndToken?-this._usedEndToken.length-1:0;return new X(n.endLineNumber,n.endColumn+o,n.endLineNumber,n.endColumn+o)}}};Ye();Do();tt();ee();Mt();sn();var Hn=class{constructor(e,t,i,n,o,r,a){this.languageConfigurationService=e,this._selection=t,this._tabSize=i,this._type=n,this._insertSpace=o,this._selectionId=null,this._deltaColumn=0,this._moveEndPositionDown=!1,this._ignoreEmptyLines=r,this._ignoreFirstLine=a||!1}static _gatherPreflightCommentStrings(e,t,i,n){e.tokenizeIfCheap(t);let o=e.getLanguageIdAtPosition(t,1),r=n.getLanguageConfiguration(o).comments,a=r?r.lineCommentToken:null;if(!a)return null;let l=[];for(let c=0,d=i-t+1;c<d;c++)l[c]={ignore:!1,commentStr:a,commentStrOffset:0,commentStrLength:a.length};return l}static _analyzeLines(e,t,i,n,o,r,a,l){let c=!0,d;e===0?d=!0:e===1?d=!1:d=!0;for(let h=0,p=n.length;h<p;h++){let m=n[h],f=o+h;if(f===o&&a){m.ignore=!0;continue}let v=i.getLineContent(f),_=Vl(v);if(_===-1){m.ignore=r,m.commentStrOffset=v.length;continue}if(c=!1,m.ignore=!1,m.commentStrOffset=_,d&&!On._haystackHasNeedleAtOffset(v,m.commentStr,_)&&(e===0?d=!1:e===1||(m.ignore=!0)),d&&t){let w=_+m.commentStrLength;w<v.length&&v.charCodeAt(w)===32&&(m.commentStrLength+=1)}}if(e===0&&c){d=!1;for(let h=0,p=n.length;h<p;h++)n[h].ignore=!1}return{supported:!0,shouldRemoveComments:d,lines:n}}static _gatherPreflightData(e,t,i,n,o,r,a,l){let c=Hn._gatherPreflightCommentStrings(i,n,o,l);return c===null?{supported:!1}:Hn._analyzeLines(e,t,i,c,n,r,a,l)}_executeLineComments(e,t,i,n){let o;i.shouldRemoveComments?o=Hn._createRemoveLineCommentsOperations(i.lines,n.startLineNumber):(Hn._normalizeInsertionPoint(e,i.lines,n.startLineNumber,this._tabSize),o=this._createAddLineCommentsOperations(i.lines,n.startLineNumber));let r=new U(n.positionLineNumber,n.positionColumn);for(let a=0,l=o.length;a<l;a++)t.addEditOperation(o[a].range,o[a].text),b.isEmpty(o[a].range)&&b.getStartPosition(o[a].range).equals(r)&&e.getLineContent(r.lineNumber).length+1===r.column&&(this._deltaColumn=(o[a].text||"").length);this._selectionId=t.trackSelection(n)}_attemptRemoveBlockComment(e,t,i,n){let o=t.startLineNumber,r=t.endLineNumber,a=n.length+Math.max(e.getLineFirstNonWhitespaceColumn(t.startLineNumber),t.startColumn),l=e.getLineContent(o).lastIndexOf(i,a-1),c=e.getLineContent(r).indexOf(n,t.endColumn-1-i.length);return l!==-1&&c===-1&&(c=e.getLineContent(o).indexOf(n,l+i.length),r=o),l===-1&&c!==-1&&(l=e.getLineContent(r).lastIndexOf(i,c),o=r),t.isEmpty()&&(l===-1||c===-1)&&(l=e.getLineContent(o).indexOf(i),l!==-1&&(c=e.getLineContent(o).indexOf(n,l+i.length))),l!==-1&&e.getLineContent(o).charCodeAt(l+i.length)===32&&(i+=" "),c!==-1&&e.getLineContent(r).charCodeAt(c-1)===32&&(n=" "+n,c-=1),l!==-1&&c!==-1?On._createRemoveBlockCommentOperations(new b(o,l+i.length+1,r,c+1),i,n):null}_executeBlockComment(e,t,i){e.tokenizeIfCheap(i.startLineNumber);let n=e.getLanguageIdAtPosition(i.startLineNumber,1),o=ii.getComments(n);if(!o||!o.blockCommentStartToken||!o.blockCommentEndToken)return;let r=o.blockCommentStartToken,a=o.blockCommentEndToken,l=this._attemptRemoveBlockComment(e,i,r,a);if(!l){if(i.isEmpty()){let c=e.getLineContent(i.startLineNumber),d=Vl(c);d===-1&&(d=c.length),l=On._createAddBlockCommentOperations(new b(i.startLineNumber,d+1,i.startLineNumber,c.length+1),r,a,this._insertSpace)}else l=On._createAddBlockCommentOperations(new b(i.startLineNumber,e.getLineFirstNonWhitespaceColumn(i.startLineNumber),i.endLineNumber,e.getLineMaxColumn(i.endLineNumber)),r,a,this._insertSpace);l.length===1&&(this._deltaColumn=r.length+1)}this._selectionId=t.trackSelection(i);for(let c of l)t.addEditOperation(c.range,c.text)}getEditOperations(e,t){let i=this._selection;if(this._moveEndPositionDown=!1,i.startLineNumber===i.endLineNumber&&this._ignoreFirstLine){t.addEditOperation(new b(i.startLineNumber,e.getLineMaxColumn(i.startLineNumber),i.startLineNumber+1,1),i.startLineNumber===e.getLineCount()?"":`
`),this._selectionId=t.trackSelection(i);return}i.startLineNumber<i.endLineNumber&&i.endColumn===1&&(this._moveEndPositionDown=!0,i=i.setEndPosition(i.endLineNumber-1,e.getLineMaxColumn(i.endLineNumber-1)));let n=Hn._gatherPreflightData(this._type,this._insertSpace,e,i.startLineNumber,i.endLineNumber,this._ignoreEmptyLines,this._ignoreFirstLine,this.languageConfigurationService);return n.supported?this._executeLineComments(e,t,n,i):this._executeBlockComment(e,t,i)}computeCursorState(e,t){let i=t.getTrackedSelection(this._selectionId);return this._moveEndPositionDown&&(i=i.setEndPosition(i.endLineNumber+1,1)),new X(i.selectionStartLineNumber,i.selectionStartColumn+this._deltaColumn,i.positionLineNumber,i.positionColumn+this._deltaColumn)}static _createRemoveLineCommentsOperations(e,t){let i=[];for(let n=0,o=e.length;n<o;n++){let r=e[n];r.ignore||i.push(Ge.delete(new b(t+n,r.commentStrOffset+1,t+n,r.commentStrOffset+r.commentStrLength+1)))}return i}_createAddLineCommentsOperations(e,t){let i=[],n=this._insertSpace?" ":"";for(let o=0,r=e.length;o<r;o++){let a=e[o];a.ignore||i.push(Ge.insert(new U(t+o,a.commentStrOffset+1),a.commentStr+n))}return i}static nextVisibleColumn(e,t,i,n){return i?e+(t-e%t):e+n}static _normalizeInsertionPoint(e,t,i,n){let o=1073741824,r,a;for(let l=0,c=t.length;l<c;l++){if(t[l].ignore)continue;let d=e.getLineContent(i+l),h=0;for(let p=0,m=t[l].commentStrOffset;h<o&&p<m;p++)h=Hn.nextVisibleColumn(h,n,d.charCodeAt(p)===9,1);h<o&&(o=h)}o=Math.floor(o/n)*n;for(let l=0,c=t.length;l<c;l++){if(t[l].ignore)continue;let d=e.getLineContent(i+l),h=0;for(r=0,a=t[l].commentStrOffset;h<o&&r<a;r++)h=Hn.nextVisibleColumn(h,n,d.charCodeAt(r)===9,1);h>o?t[l].commentStrOffset=r-1:t[l].commentStrOffset=r}}};Q();ri();var jp=class extends F{constructor(e,t){super(t);this._type=e}run(e,t){let i=e.get(Dt);if(!t.hasModel())return;let n=t.getModel(),o=[],r=n.getOptions(),a=t.getOption(19),l=t.getSelections().map((d,h)=>({selection:d,index:h,ignoreFirstLine:!1}));l.sort((d,h)=>b.compareRangesUsingStarts(d.selection,h.selection));let c=l[0];for(let d=1;d<l.length;d++){let h=l[d];c.selection.endLineNumber===h.selection.startLineNumber&&(c.index<h.index?h.ignoreFirstLine=!0:(c.ignoreFirstLine=!0,c=h))}for(let d of l)o.push(new Hn(i,d.selection,r.tabSize,this._type,a.insertSpace,a.ignoreEmptyLines,d.ignoreFirstLine));t.pushUndoStop(),t.executeCommands(this.id,o),t.pushUndoStop()}},kT=class extends jp{constructor(){super(0,{id:"editor.action.commentLine",label:u("comment.line","Toggle Line Comment"),alias:"Toggle Line Comment",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:2133,weight:100},menuOpts:{menuId:se.MenubarEditMenu,group:"5_insert",title:u({key:"miToggleLineComment",comment:["&& denotes a mnemonic"]},"&&Toggle Line Comment"),order:1}})}},LT=class extends jp{constructor(){super(1,{id:"editor.action.addCommentLine",label:u("comment.line.add","Add Line Comment"),alias:"Add Line Comment",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2081),weight:100}})}},PT=class extends jp{constructor(){super(2,{id:"editor.action.removeCommentLine",label:u("comment.line.remove","Remove Line Comment"),alias:"Remove Line Comment",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2099),weight:100}})}},MT=class extends F{constructor(){super({id:"editor.action.blockComment",label:u("comment.block","Toggle Block Comment"),alias:"Toggle Block Comment",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:1567,linux:{primary:3103},weight:100},menuOpts:{menuId:se.MenubarEditMenu,group:"5_insert",title:u({key:"miToggleBlockComment",comment:["&& denotes a mnemonic"]},"Toggle &&Block Comment"),order:2}})}run(e,t){let i=e.get(Dt);if(!t.hasModel())return;let n=t.getOption(19),o=[],r=t.getSelections();for(let a of r)o.push(new On(a,n.insertSpace,i));t.pushUndoStop(),t.executeCommands(this.id,o),t.pushUndoStop()}};I(kT);I(LT);I(PT);I(MT);Ae();os();B();Pi();ue();He();Q();ri();Ee();Ki();var MD=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},gc=function(s,e){return function(t,i){e(t,i,s)}},dl=class DT{constructor(e,t,i,n,o,r){this._contextMenuService=t,this._contextViewService=i,this._contextKeyService=n,this._keybindingService=o,this._menuService=r,this._toDispose=new R,this._contextMenuIsBeingShownCount=0,this._editor=e,this._toDispose.add(this._editor.onContextMenu(a=>this._onContextMenu(a))),this._toDispose.add(this._editor.onMouseWheel(a=>{if(this._contextMenuIsBeingShownCount>0){let l=this._contextViewService.getContextViewElement(),c=a.srcElement;c.shadowRoot&&lv(l)===c.shadowRoot||this._contextViewService.hideContextView()}})),this._toDispose.add(this._editor.onKeyDown(a=>{a.keyCode===58&&(a.preventDefault(),a.stopPropagation(),this.showContextMenu())}))}static get(e){return e.getContribution(DT.ID)}_onContextMenu(e){if(!this._editor.hasModel())return;if(!this._editor.getOption(20)){this._editor.focus(),e.target.position&&!this._editor.getSelection().containsPosition(e.target.position)&&this._editor.setPosition(e.target.position);return}if(e.target.type===12||e.target.type===6&&e.target.detail.injectedText||(e.event.preventDefault(),e.event.stopPropagation(),e.target.type!==6&&e.target.type!==7&&e.target.type!==1))return;if(this._editor.focus(),e.target.position){let i=!1;for(let n of this._editor.getSelections())if(n.containsPosition(e.target.position)){i=!0;break}i||this._editor.setPosition(e.target.position)}let t=null;e.target.type!==1&&(t={x:e.event.posx-1,width:2,y:e.event.posy-1,height:2}),this.showContextMenu(t)}showContextMenu(e){if(!this._editor.getOption(20)||!this._editor.hasModel())return;if(!this._contextMenuService){this._editor.focus();return}let t=this._getMenuActions(this._editor.getModel(),this._editor.isSimpleWidget?se.SimpleEditorContext:se.EditorContext);t.length>0&&this._doShowContextMenu(t,e)}_getMenuActions(e,t){let i=[],n=this._menuService.createMenu(t,this._contextKeyService),o=n.getActions({arg:e.uri});n.dispose();for(let r of o){let[,a]=r,l=0;for(let c of a)if(c instanceof Ah){let d=this._getMenuActions(e,c.item.submenu);d.length>0&&(i.push(new Dh(c.id,c.label,d)),l++)}else i.push(c),l++;l&&i.push(new qn)}return i.length&&i.pop(),i}_doShowContextMenu(e,t=null){if(!this._editor.hasModel())return;let i=this._editor.getOption(53);if(this._editor.updateOptions({hover:{enabled:!1}}),!t){this._editor.revealPosition(this._editor.getPosition(),1),this._editor.render();let o=this._editor.getScrolledVisiblePosition(this._editor.getPosition()),r=ni(this._editor.getDomNode()),a=r.left+o.left,l=r.top+o.top+o.height;t={x:a,y:l}}let n=this._editor.getOption(115)&&!sh;this._contextMenuIsBeingShownCount++,this._contextMenuService.showContextMenu({domForShadowRoot:n?this._editor.getDomNode():void 0,getAnchor:()=>t,getActions:()=>e,getActionViewItem:o=>{let r=this._keybindingFor(o);if(r)return new pd(o,o,{label:!0,keybinding:r.getLabel(),isMenu:!0});let a=o;return typeof a.getActionViewItem=="function"?a.getActionViewItem():new pd(o,o,{icon:!0,label:!0,isMenu:!0})},getKeyBinding:o=>this._keybindingFor(o),onHide:o=>{this._contextMenuIsBeingShownCount--,this._editor.focus(),this._editor.updateOptions({hover:i})}})}_keybindingFor(e){return this._keybindingService.lookupKeybinding(e.id)}dispose(){this._contextMenuIsBeingShownCount>0&&this._contextViewService.hideContextView(),this._toDispose.dispose()}};dl.ID="editor.contrib.contextmenu";dl=MD([gc(1,Po),gc(2,cu),gc(3,ie),gc(4,rt),gc(5,Xn)],dl);var RT=class extends F{constructor(){super({id:"editor.action.showContextMenu",label:u("action.showContextMenu.label","Show Editor Context Menu"),alias:"Show Editor Context Menu",precondition:void 0,kbOpts:{kbExpr:S.textInputFocus,primary:1092,weight:100}})}run(e,t){var i;(i=dl.get(t))===null||i===void 0||i.showContextMenu()}};J(dl.ID,dl);I(RT);B();ue();He();Q();var Up=class{constructor(e){this.selections=e}equals(e){let t=this.selections.length,i=e.selections.length;if(t!==i)return!1;for(let n=0;n<t;n++)if(!this.selections[n].equalsSelection(e.selections[n]))return!1;return!0}},$p=class{constructor(e,t,i){this.cursorState=e,this.scrollTop=t,this.scrollLeft=i}},zr=class extends z{constructor(e){super();this._editor=e,this._isCursorUndoRedo=!1,this._undoStack=[],this._redoStack=[],this._register(e.onDidChangeModel(t=>{this._undoStack=[],this._redoStack=[]})),this._register(e.onDidChangeModelContent(t=>{this._undoStack=[],this._redoStack=[]})),this._register(e.onDidChangeCursorSelection(t=>{if(this._isCursorUndoRedo||!t.oldSelections||t.oldModelVersionId!==t.modelVersionId)return;let i=new Up(t.oldSelections);this._undoStack.length>0&&this._undoStack[this._undoStack.length-1].cursorState.equals(i)||(this._undoStack.push(new $p(i,e.getScrollTop(),e.getScrollLeft())),this._redoStack=[],this._undoStack.length>50&&this._undoStack.shift())}))}static get(e){return e.getContribution(zr.ID)}cursorUndo(){!this._editor.hasModel()||this._undoStack.length===0||(this._redoStack.push(new $p(new Up(this._editor.getSelections()),this._editor.getScrollTop(),this._editor.getScrollLeft())),this._applyState(this._undoStack.pop()))}cursorRedo(){!this._editor.hasModel()||this._redoStack.length===0||(this._undoStack.push(new $p(new Up(this._editor.getSelections()),this._editor.getScrollTop(),this._editor.getScrollLeft())),this._applyState(this._redoStack.pop()))}_applyState(e){this._isCursorUndoRedo=!0,this._editor.setSelections(e.cursorState.selections),this._editor.setScrollPosition({scrollTop:e.scrollTop,scrollLeft:e.scrollLeft}),this._isCursorUndoRedo=!1}};zr.ID="editor.contrib.cursorUndoRedoController";var AT=class extends F{constructor(){super({id:"cursorUndo",label:u("cursor.undo","Cursor Undo"),alias:"Cursor Undo",precondition:void 0,kbOpts:{kbExpr:S.textInputFocus,primary:2099,weight:100}})}run(e,t,i){var n;(n=zr.get(t))===null||n===void 0||n.cursorUndo()}},FT=class extends F{constructor(){super({id:"cursorRedo",label:u("cursor.redo","Cursor Redo"),alias:"Cursor Redo",precondition:void 0})}run(e,t,i){var n;(n=zr.get(t))===null||n===void 0||n.cursorRedo()}};J(zr.ID,zr);I(AT);I(FT);B();Pi();ue();tt();ee();Mt();jt();ee();Mt();var Ny=class{constructor(e,t,i){this.selection=e,this.targetPosition=t,this.copy=i,this.targetSelection=null}getEditOperations(e,t){let i=e.getValueInRange(this.selection);if(this.copy||t.addEditOperation(this.selection,null),t.addEditOperation(new b(this.targetPosition.lineNumber,this.targetPosition.column,this.targetPosition.lineNumber,this.targetPosition.column),i),this.selection.containsPosition(this.targetPosition)&&!(this.copy&&(this.selection.getEndPosition().equals(this.targetPosition)||this.selection.getStartPosition().equals(this.targetPosition)))){this.targetSelection=this.selection;return}if(this.copy){this.targetSelection=new X(this.targetPosition.lineNumber,this.targetPosition.column,this.selection.endLineNumber-this.selection.startLineNumber+this.targetPosition.lineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column+this.selection.endColumn-this.selection.startColumn:this.selection.endColumn);return}if(this.targetPosition.lineNumber>this.selection.endLineNumber){this.targetSelection=new X(this.targetPosition.lineNumber-this.selection.endLineNumber+this.selection.startLineNumber,this.targetPosition.column,this.targetPosition.lineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column+this.selection.endColumn-this.selection.startColumn:this.selection.endColumn);return}if(this.targetPosition.lineNumber<this.selection.endLineNumber){this.targetSelection=new X(this.targetPosition.lineNumber,this.targetPosition.column,this.targetPosition.lineNumber+this.selection.endLineNumber-this.selection.startLineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column+this.selection.endColumn-this.selection.startColumn:this.selection.endColumn);return}this.selection.endColumn<=this.targetPosition.column?this.targetSelection=new X(this.targetPosition.lineNumber-this.selection.endLineNumber+this.selection.startLineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column-this.selection.endColumn+this.selection.startColumn:this.targetPosition.column-this.selection.endColumn+this.selection.startColumn,this.targetPosition.lineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column:this.selection.endColumn):this.targetSelection=new X(this.targetPosition.lineNumber-this.selection.endLineNumber+this.selection.startLineNumber,this.targetPosition.column,this.targetPosition.lineNumber,this.targetPosition.column+this.selection.endColumn-this.selection.startColumn)}computeCursorState(e,t){return this.targetSelection}};function cl(s){return bi?s.altKey:s.ctrlKey}var ao=class extends z{constructor(e){super();this._editor=e,this._register(this._editor.onMouseDown(t=>this._onEditorMouseDown(t))),this._register(this._editor.onMouseUp(t=>this._onEditorMouseUp(t))),this._register(this._editor.onMouseDrag(t=>this._onEditorMouseDrag(t))),this._register(this._editor.onMouseDrop(t=>this._onEditorMouseDrop(t))),this._register(this._editor.onMouseDropCanceled(()=>this._onEditorMouseDropCanceled())),this._register(this._editor.onKeyDown(t=>this.onEditorKeyDown(t))),this._register(this._editor.onKeyUp(t=>this.onEditorKeyUp(t))),this._register(this._editor.onDidBlurEditorWidget(()=>this.onEditorBlur())),this._register(this._editor.onDidBlurEditorText(()=>this.onEditorBlur())),this._dndDecorationIds=[],this._mouseDown=!1,this._modifierPressed=!1,this._dragSelection=null}onEditorBlur(){this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1,this._modifierPressed=!1}onEditorKeyDown(e){!this._editor.getOption(31)||this._editor.getOption(18)||(cl(e)&&(this._modifierPressed=!0),this._mouseDown&&cl(e)&&this._editor.updateOptions({mouseStyle:"copy"}))}onEditorKeyUp(e){!this._editor.getOption(31)||this._editor.getOption(18)||(cl(e)&&(this._modifierPressed=!1),this._mouseDown&&e.keyCode===ao.TRIGGER_KEY_VALUE&&this._editor.updateOptions({mouseStyle:"default"}))}_onEditorMouseDown(e){this._mouseDown=!0}_onEditorMouseUp(e){this._mouseDown=!1,this._editor.updateOptions({mouseStyle:"text"})}_onEditorMouseDrag(e){let t=e.target;if(this._dragSelection===null){let n=(this._editor.getSelections()||[]).filter(o=>t.position&&o.containsPosition(t.position));if(n.length===1)this._dragSelection=n[0];else return}cl(e.event)?this._editor.updateOptions({mouseStyle:"copy"}):this._editor.updateOptions({mouseStyle:"default"}),t.position&&(this._dragSelection.containsPosition(t.position)?this._removeDecoration():this.showAt(t.position))}_onEditorMouseDropCanceled(){this._editor.updateOptions({mouseStyle:"text"}),this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1}_onEditorMouseDrop(e){if(e.target&&(this._hitContent(e.target)||this._hitMargin(e.target))&&e.target.position){let t=new U(e.target.position.lineNumber,e.target.position.column);if(this._dragSelection===null){let i=null;if(e.event.shiftKey){let n=this._editor.getSelection();if(n){let{selectionStartLineNumber:o,selectionStartColumn:r}=n;i=[new X(o,r,t.lineNumber,t.column)]}}else i=(this._editor.getSelections()||[]).map(n=>n.containsPosition(t)?new X(t.lineNumber,t.column,t.lineNumber,t.column):n);this._editor.setSelections(i||[],"mouse",3)}else(!this._dragSelection.containsPosition(t)||(cl(e.event)||this._modifierPressed)&&(this._dragSelection.getEndPosition().equals(t)||this._dragSelection.getStartPosition().equals(t)))&&(this._editor.pushUndoStop(),this._editor.executeCommand(ao.ID,new Ny(this._dragSelection,t,cl(e.event)||this._modifierPressed)),this._editor.pushUndoStop())}this._editor.updateOptions({mouseStyle:"text"}),this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1}showAt(e){let t=[{range:new b(e.lineNumber,e.column,e.lineNumber,e.column),options:ao._DECORATION_OPTIONS}];this._dndDecorationIds=this._editor.deltaDecorations(this._dndDecorationIds,t),this._editor.revealPosition(e,1)}_removeDecoration(){this._dndDecorationIds=this._editor.deltaDecorations(this._dndDecorationIds,[])}_hitContent(e){return e.type===6||e.type===7}_hitMargin(e){return e.type===2||e.type===3||e.type===4}dispose(){this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1,this._modifierPressed=!1,super.dispose()}};ao.ID="editor.contrib.dragAndDrop";ao.TRIGGER_KEY_VALUE=bi?6:5;ao._DECORATION_OPTIONS=xe.register({description:"dnd-target",className:"dnd-target"});J(ao.ID,ao);ke();B();Ye();ue();He();St();ke();B();tt();ee();Mt();hP();ee();ca();jt();mt();Ne();var Ht=class{constructor(e){this._editor=e,this._decorations=[],this._overviewRulerApproximateDecorations=[],this._findScopeDecorationIds=[],this._rangeHighlightDecorationId=null,this._highlightedDecorationId=null,this._startPosition=this._editor.getPosition()}dispose(){this._editor.deltaDecorations(this._allDecorations(),[]),this._decorations=[],this._overviewRulerApproximateDecorations=[],this._findScopeDecorationIds=[],this._rangeHighlightDecorationId=null,this._highlightedDecorationId=null}reset(){this._decorations=[],this._overviewRulerApproximateDecorations=[],this._findScopeDecorationIds=[],this._rangeHighlightDecorationId=null,this._highlightedDecorationId=null}getCount(){return this._decorations.length}getFindScope(){return this._findScopeDecorationIds[0]?this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]):null}getFindScopes(){if(this._findScopeDecorationIds.length){let e=this._findScopeDecorationIds.map(t=>this._editor.getModel().getDecorationRange(t)).filter(t=>!!t);if(e.length)return e}return null}getStartPosition(){return this._startPosition}setStartPosition(e){this._startPosition=e,this.setCurrentFindMatch(null)}_getDecorationIndex(e){let t=this._decorations.indexOf(e);return t>=0?t+1:1}getCurrentMatchesPosition(e){let t=this._editor.getModel().getDecorationsInRange(e);for(let i of t){let n=i.options;if(n===Ht._FIND_MATCH_DECORATION||n===Ht._CURRENT_FIND_MATCH_DECORATION)return this._getDecorationIndex(i.id)}return 0}setCurrentFindMatch(e){let t=null,i=0;if(e)for(let n=0,o=this._decorations.length;n<o;n++){let r=this._editor.getModel().getDecorationRange(this._decorations[n]);if(e.equalsRange(r)){t=this._decorations[n],i=n+1;break}}return(this._highlightedDecorationId!==null||t!==null)&&this._editor.changeDecorations(n=>{if(this._highlightedDecorationId!==null&&(n.changeDecorationOptions(this._highlightedDecorationId,Ht._FIND_MATCH_DECORATION),this._highlightedDecorationId=null),t!==null&&(this._highlightedDecorationId=t,n.changeDecorationOptions(this._highlightedDecorationId,Ht._CURRENT_FIND_MATCH_DECORATION)),this._rangeHighlightDecorationId!==null&&(n.removeDecoration(this._rangeHighlightDecorationId),this._rangeHighlightDecorationId=null),t!==null){let o=this._editor.getModel().getDecorationRange(t);if(o.startLineNumber!==o.endLineNumber&&o.endColumn===1){let r=o.endLineNumber-1,a=this._editor.getModel().getLineMaxColumn(r);o=new b(o.startLineNumber,o.startColumn,r,a)}this._rangeHighlightDecorationId=n.addDecoration(o,Ht._RANGE_HIGHLIGHT_DECORATION)}}),i}set(e,t){this._editor.changeDecorations(i=>{let n=Ht._FIND_MATCH_DECORATION,o=[];if(e.length>1e3){n=Ht._FIND_MATCH_NO_OVERVIEW_DECORATION;let a=this._editor.getModel().getLineCount(),c=this._editor.getLayoutInfo().height/a,d=Math.max(2,Math.ceil(3/c)),h=e[0].range.startLineNumber,p=e[0].range.endLineNumber;for(let m=1,f=e.length;m<f;m++){let v=e[m].range;p+d>=v.startLineNumber?v.endLineNumber>p&&(p=v.endLineNumber):(o.push({range:new b(h,1,p,1),options:Ht._FIND_MATCH_ONLY_OVERVIEW_DECORATION}),h=v.startLineNumber,p=v.endLineNumber)}o.push({range:new b(h,1,p,1),options:Ht._FIND_MATCH_ONLY_OVERVIEW_DECORATION})}let r=new Array(e.length);for(let a=0,l=e.length;a<l;a++)r[a]={range:e[a].range,options:n};this._decorations=i.deltaDecorations(this._decorations,r),this._overviewRulerApproximateDecorations=i.deltaDecorations(this._overviewRulerApproximateDecorations,o),this._rangeHighlightDecorationId&&(i.removeDecoration(this._rangeHighlightDecorationId),this._rangeHighlightDecorationId=null),this._findScopeDecorationIds.length&&(this._findScopeDecorationIds.forEach(a=>i.removeDecoration(a)),this._findScopeDecorationIds=[]),(t==null?void 0:t.length)&&(this._findScopeDecorationIds=t.map(a=>i.addDecoration(a,Ht._FIND_SCOPE_DECORATION)))})}matchBeforePosition(e){if(this._decorations.length===0)return null;for(let t=this._decorations.length-1;t>=0;t--){let i=this._decorations[t],n=this._editor.getModel().getDecorationRange(i);if(!(!n||n.endLineNumber>e.lineNumber)){if(n.endLineNumber<e.lineNumber)return n;if(!(n.endColumn>e.column))return n}}return this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length-1])}matchAfterPosition(e){if(this._decorations.length===0)return null;for(let t=0,i=this._decorations.length;t<i;t++){let n=this._decorations[t],o=this._editor.getModel().getDecorationRange(n);if(!(!o||o.startLineNumber<e.lineNumber)){if(o.startLineNumber>e.lineNumber)return o;if(!(o.startColumn<e.column))return o}}return this._editor.getModel().getDecorationRange(this._decorations[0])}_allDecorations(){let e=[];return e=e.concat(this._decorations),e=e.concat(this._overviewRulerApproximateDecorations),this._findScopeDecorationIds.length&&e.push(...this._findScopeDecorationIds),this._rangeHighlightDecorationId&&e.push(this._rangeHighlightDecorationId),e}};Ht._CURRENT_FIND_MATCH_DECORATION=xe.register({description:"current-find-match",stickiness:1,zIndex:13,className:"currentFindMatch",showIfCollapsed:!0,overviewRuler:{color:nt(qh),position:Di.Center},minimap:{color:nt(Jm),position:bo.Inline}});Ht._FIND_MATCH_DECORATION=xe.register({description:"find-match",stickiness:1,zIndex:10,className:"findMatch",showIfCollapsed:!0,overviewRuler:{color:nt(qh),position:Di.Center},minimap:{color:nt(Jm),position:bo.Inline}});Ht._FIND_MATCH_NO_OVERVIEW_DECORATION=xe.register({description:"find-match-no-overview",stickiness:1,className:"findMatch",showIfCollapsed:!0});Ht._FIND_MATCH_ONLY_OVERVIEW_DECORATION=xe.register({description:"find-match-only-overview",stickiness:1,overviewRuler:{color:nt(qh),position:Di.Center}});Ht._RANGE_HIGHLIGHT_DECORATION=xe.register({description:"find-range-highlight",stickiness:1,className:"rangeHighlight",isWholeLine:!0});Ht._FIND_SCOPE_DECORATION=xe.register({description:"find-scope",className:"findScope",isWholeLine:!0});ee();var zy=class{constructor(e,t,i){this._editorSelection=e,this._ranges=t,this._replaceStrings=i,this._trackedEditorSelectionId=null}getEditOperations(e,t){if(this._ranges.length>0){let i=[];for(let r=0;r<this._ranges.length;r++)i.push({range:this._ranges[r],text:this._replaceStrings[r]});i.sort((r,a)=>b.compareRangesUsingStarts(r.range,a.range));let n=[],o=i[0];for(let r=1;r<i.length;r++)o.range.endLineNumber===i[r].range.startLineNumber&&o.range.endColumn===i[r].range.startColumn?(o.range=o.range.plusRange(i[r].range),o.text=o.text+i[r].text):(n.push(o),o=i[r]);n.push(o);for(let r of n)t.addEditOperation(r.range,r.text)}this._trackedEditorSelectionId=t.trackSelection(this._editorSelection)}computeCursorState(e,t){return t.getTrackedSelection(this._trackedEditorSelectionId)}};Ye();function Oy(s,e){if(s&&s[0]!==""){let t=NT(s,e,"-"),i=NT(s,e,"_");return t&&!i?zT(s,e,"-"):!t&&i?zT(s,e,"_"):s[0].toUpperCase()===s[0]?e.toUpperCase():s[0].toLowerCase()===s[0]?e.toLowerCase():TS(s[0][0])&&e.length>0?e[0].toUpperCase()+e.substr(1):s[0][0].toUpperCase()!==s[0][0]&&e.length>0?e[0].toLowerCase()+e.substr(1):e}else return e}function NT(s,e,t){return s[0].indexOf(t)!==-1&&e.indexOf(t)!==-1&&s[0].split(t).length===e.split(t).length}function zT(s,e,t){let i=e.split(t),n=s[0].split(t),o="";return i.forEach((r,a)=>{o+=Oy([n[a]],r)+t}),o.slice(0,-1)}var Hy=class{constructor(e){this.staticValue=e,this.kind=0}},OT=class{constructor(e){this.pieces=e,this.kind=1}},Hr=class{constructor(e){!e||e.length===0?this._state=new Hy(""):e.length===1&&e[0].staticValue!==null?this._state=new Hy(e[0].staticValue):this._state=new OT(e)}static fromStaticValue(e){return new Hr([Or.staticValue(e)])}get hasReplacementPatterns(){return this._state.kind===1}buildReplaceString(e,t){if(this._state.kind===0)return t?Oy(e,this._state.staticValue):this._state.staticValue;let i="";for(let n=0,o=this._state.pieces.length;n<o;n++){let r=this._state.pieces[n];if(r.staticValue!==null){i+=r.staticValue;continue}let a=Hr._substitute(r.matchIndex,e);if(r.caseOps!==null&&r.caseOps.length>0){let l=[],c=r.caseOps.length,d=0;for(let h=0,p=a.length;h<p;h++){if(d>=c){l.push(a.slice(h));break}switch(r.caseOps[d]){case"U":l.push(a[h].toUpperCase());break;case"u":l.push(a[h].toUpperCase()),d++;break;case"L":l.push(a[h].toLowerCase());break;case"l":l.push(a[h].toLowerCase()),d++;break;default:l.push(a[h])}}a=l.join("")}i+=a}return i}static _substitute(e,t){if(t===null)return"";if(e===0)return t[0];let i="";for(;e>0;){if(e<t.length)return(t[e]||"")+i;i=String(e%10)+i,e=Math.floor(e/10)}return"$"+i}},Or=class{constructor(e,t,i){this.staticValue=e,this.matchIndex=t,!i||i.length===0?this.caseOps=null:this.caseOps=i.slice(0)}static staticValue(e){return new Or(e,-1,null)}static caseOps(e,t){return new Or(null,e,t)}},HT=class{constructor(e){this._source=e,this._lastCharIndex=0,this._result=[],this._resultLen=0,this._currentStaticPiece=""}emitUnchanged(e){this._emitStatic(this._source.substring(this._lastCharIndex,e)),this._lastCharIndex=e}emitStatic(e,t){this._emitStatic(e),this._lastCharIndex=t}_emitStatic(e){e.length!==0&&(this._currentStaticPiece+=e)}emitMatchIndex(e,t,i){this._currentStaticPiece.length!==0&&(this._result[this._resultLen++]=Or.staticValue(this._currentStaticPiece),this._currentStaticPiece=""),this._result[this._resultLen++]=Or.caseOps(e,i),this._lastCharIndex=t}finalize(){return this.emitUnchanged(this._source.length),this._currentStaticPiece.length!==0&&(this._result[this._resultLen++]=Or.staticValue(this._currentStaticPiece),this._currentStaticPiece=""),new Hr(this._result)}};function WT(s){if(!s||s.length===0)return new Hr(null);let e=[],t=new HT(s);for(let i=0,n=s.length;i<n;i++){let o=s.charCodeAt(i);if(o===92){if(i++,i>=n)break;let r=s.charCodeAt(i);switch(r){case 92:t.emitUnchanged(i-1),t.emitStatic("\\",i+1);break;case 110:t.emitUnchanged(i-1),t.emitStatic(`
`,i+1);break;case 116:t.emitUnchanged(i-1),t.emitStatic("	",i+1);break;case 117:case 85:case 108:case 76:t.emitUnchanged(i-1),t.emitStatic("",i+1),e.push(String.fromCharCode(r));break}continue}if(o===36){if(i++,i>=n)break;let r=s.charCodeAt(i);if(r===36){t.emitUnchanged(i-1),t.emitStatic("$",i+1);continue}if(r===48||r===38){t.emitUnchanged(i-1),t.emitMatchIndex(0,i+1,e),e.length=0;continue}if(49<=r&&r<=57){let a=r-48;if(i+1<n){let l=s.charCodeAt(i+1);if(48<=l&&l<=57){i++,a=a*10+(l-48),t.emitUnchanged(i-2),t.emitMatchIndex(a,i+1,e),e.length=0;continue}}t.emitUnchanged(i-1),t.emitMatchIndex(a,i+1,e),e.length=0;continue}}}return t.finalize()}Ee();var $o=new pe("findWidgetVisible",!1),mJ=$o.toNegated(),hl=new pe("findInputFocussed",!1),fc=new pe("replaceInputFocussed",!1),yc={primary:545,mac:{primary:2593}},bc={primary:565,mac:{primary:2613}},Sc={primary:560,mac:{primary:2608}},vc={primary:554,mac:{primary:2602}},xc={primary:558,mac:{primary:2606}},ze={StartFindAction:"actions.find",StartFindWithSelection:"actions.findWithSelection",StartFindWithArgs:"editor.actions.findWithArgs",NextMatchFindAction:"editor.action.nextMatchFindAction",PreviousMatchFindAction:"editor.action.previousMatchFindAction",NextSelectionMatchFindAction:"editor.action.nextSelectionMatchFindAction",PreviousSelectionMatchFindAction:"editor.action.previousSelectionMatchFindAction",StartFindReplaceAction:"editor.action.startFindReplaceAction",CloseFindWidgetCommand:"closeFindWidget",ToggleCaseSensitiveCommand:"toggleFindCaseSensitive",ToggleWholeWordCommand:"toggleFindWholeWord",ToggleRegexCommand:"toggleFindRegex",ToggleSearchScopeCommand:"toggleFindInSelection",TogglePreserveCaseCommand:"togglePreserveCase",ReplaceOneAction:"editor.action.replaceOne",ReplaceAllAction:"editor.action.replaceAll",SelectAllMatchesAction:"editor.action.selectAllMatches"},lo=19999,DD=240,Ns=class{constructor(e,t){this._toDispose=new R,this._editor=e,this._state=t,this._isDisposed=!1,this._startSearchingTimer=new Ri,this._decorations=new Ht(e),this._toDispose.add(this._decorations),this._updateDecorationsScheduler=new $e(()=>this.research(!1),100),this._toDispose.add(this._updateDecorationsScheduler),this._toDispose.add(this._editor.onDidChangeCursorPosition(i=>{(i.reason===3||i.reason===5||i.reason===6)&&this._decorations.setStartPosition(this._editor.getPosition())})),this._ignoreModelContentChanged=!1,this._toDispose.add(this._editor.onDidChangeModelContent(i=>{this._ignoreModelContentChanged||(i.isFlush&&this._decorations.reset(),this._decorations.setStartPosition(this._editor.getPosition()),this._updateDecorationsScheduler.schedule())})),this._toDispose.add(this._state.onFindReplaceStateChange(i=>this._onStateChanged(i))),this.research(!1,this._state.searchScope)}dispose(){this._isDisposed=!0,vt(this._startSearchingTimer),this._toDispose.dispose()}_onStateChanged(e){this._isDisposed||!this._editor.hasModel()||(e.searchString||e.isReplaceRevealed||e.isRegex||e.wholeWord||e.matchCase||e.searchScope)&&(this._editor.getModel().isTooLargeForSyncing()?(this._startSearchingTimer.cancel(),this._startSearchingTimer.setIfNotSet(()=>{e.searchScope?this.research(e.moveCursor,this._state.searchScope):this.research(e.moveCursor)},DD)):e.searchScope?this.research(e.moveCursor,this._state.searchScope):this.research(e.moveCursor))}static _getSearchRange(e,t){return t||e.getFullModelRange()}research(e,t){let i=null;typeof t!="undefined"?t!==null&&(Array.isArray(t)?i=t:i=[t]):i=this._decorations.getFindScopes(),i!==null&&(i=i.map(a=>{if(a.startLineNumber!==a.endLineNumber){let l=a.endLineNumber;return a.endColumn===1&&(l=l-1),new b(a.startLineNumber,1,l,this._editor.getModel().getLineMaxColumn(l))}return a}));let n=this._findMatches(i,!1,lo);this._decorations.set(n,i);let o=this._editor.getSelection(),r=this._decorations.getCurrentMatchesPosition(o);if(r===0&&n.length>0){let a=lh(n.map(l=>l.range),l=>b.compareRangesUsingStarts(l,o)>=0);r=a>0?a-1+1:r}this._state.changeMatchInfo(r,this._decorations.getCount(),void 0),e&&this._editor.getOption(35).cursorMoveOnType&&this._moveToNextMatch(this._decorations.getStartPosition())}_hasMatches(){return this._state.matchesCount>0}_cannotFind(){if(!this._hasMatches()){let e=this._decorations.getFindScope();return e&&this._editor.revealRangeInCenterIfOutsideViewport(e,0),!0}return!1}_setCurrentFindMatch(e){let t=this._decorations.setCurrentFindMatch(e);this._state.changeMatchInfo(t,this._decorations.getCount(),e),this._editor.setSelection(e),this._editor.revealRangeInCenterIfOutsideViewport(e,0)}_prevSearchPosition(e){let t=this._state.isRegex&&(this._state.searchString.indexOf("^")>=0||this._state.searchString.indexOf("$")>=0),{lineNumber:i,column:n}=e,o=this._editor.getModel();return t||n===1?(i===1?i=o.getLineCount():i--,n=o.getLineMaxColumn(i)):n--,new U(i,n)}_moveToPrevMatch(e,t=!1){if(!this._state.canNavigateBack()){let d=this._decorations.matchAfterPosition(e);d&&this._setCurrentFindMatch(d);return}if(this._decorations.getCount()<lo){let d=this._decorations.matchBeforePosition(e);d&&d.isEmpty()&&d.getStartPosition().equals(e)&&(e=this._prevSearchPosition(e),d=this._decorations.matchBeforePosition(e)),d&&this._setCurrentFindMatch(d);return}if(this._cannotFind())return;let i=this._decorations.getFindScope(),n=Ns._getSearchRange(this._editor.getModel(),i);n.getEndPosition().isBefore(e)&&(e=n.getEndPosition()),e.isBefore(n.getStartPosition())&&(e=n.getEndPosition());let{lineNumber:o,column:r}=e,a=this._editor.getModel(),l=new U(o,r),c=a.findPreviousMatch(this._state.searchString,l,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(117):null,!1);if(c&&c.range.isEmpty()&&c.range.getStartPosition().equals(l)&&(l=this._prevSearchPosition(l),c=a.findPreviousMatch(this._state.searchString,l,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(117):null,!1)),!!c){if(!t&&!n.containsRange(c.range))return this._moveToPrevMatch(c.range.getStartPosition(),!0);this._setCurrentFindMatch(c.range)}}moveToPrevMatch(){this._moveToPrevMatch(this._editor.getSelection().getStartPosition())}_nextSearchPosition(e){let t=this._state.isRegex&&(this._state.searchString.indexOf("^")>=0||this._state.searchString.indexOf("$")>=0),{lineNumber:i,column:n}=e,o=this._editor.getModel();return t||n===o.getLineMaxColumn(i)?(i===o.getLineCount()?i=1:i++,n=1):n++,new U(i,n)}_moveToNextMatch(e){if(!this._state.canNavigateForward()){let i=this._decorations.matchBeforePosition(e);i&&this._setCurrentFindMatch(i);return}if(this._decorations.getCount()<lo){let i=this._decorations.matchAfterPosition(e);i&&i.isEmpty()&&i.getStartPosition().equals(e)&&(e=this._nextSearchPosition(e),i=this._decorations.matchAfterPosition(e)),i&&this._setCurrentFindMatch(i);return}let t=this._getNextMatch(e,!1,!0);t&&this._setCurrentFindMatch(t.range)}_getNextMatch(e,t,i,n=!1){if(this._cannotFind())return null;let o=this._decorations.getFindScope(),r=Ns._getSearchRange(this._editor.getModel(),o);r.getEndPosition().isBefore(e)&&(e=r.getStartPosition()),e.isBefore(r.getStartPosition())&&(e=r.getStartPosition());let{lineNumber:a,column:l}=e,c=this._editor.getModel(),d=new U(a,l),h=c.findNextMatch(this._state.searchString,d,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(117):null,t);return i&&h&&h.range.isEmpty()&&h.range.getStartPosition().equals(d)&&(d=this._nextSearchPosition(d),h=c.findNextMatch(this._state.searchString,d,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(117):null,t)),h?!n&&!r.containsRange(h.range)?this._getNextMatch(h.range.getEndPosition(),t,i,!0):h:null}moveToNextMatch(){this._moveToNextMatch(this._editor.getSelection().getEndPosition())}_getReplacePattern(){return this._state.isRegex?WT(this._state.replaceString):Hr.fromStaticValue(this._state.replaceString)}replace(){if(!this._hasMatches())return;let e=this._getReplacePattern(),t=this._editor.getSelection(),i=this._getNextMatch(t.getStartPosition(),!0,!1);if(i)if(t.equalsRange(i.range)){let n=e.buildReplaceString(i.matches,this._state.preserveCase),o=new Eo(t,n);this._executeEditorCommand("replace",o),this._decorations.setStartPosition(new U(t.startLineNumber,t.startColumn+n.length)),this.research(!0)}else this._decorations.setStartPosition(this._editor.getPosition()),this._setCurrentFindMatch(i.range)}_findMatches(e,t,i){let n=(e||[null]).map(o=>Ns._getSearchRange(this._editor.getModel(),o));return this._editor.getModel().findMatches(this._state.searchString,n,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(117):null,t,i)}replaceAll(){if(!this._hasMatches())return;let e=this._decorations.getFindScopes();e===null&&this._state.matchesCount>=lo?this._largeReplaceAll():this._regularReplaceAll(e),this.research(!1)}_largeReplaceAll(){let t=new qS(this._state.searchString,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(117):null).parseSearchRequest();if(!t)return;let i=t.regex;if(!i.multiline){let h="mu";i.ignoreCase&&(h+="i"),i.global&&(h+="g"),i=new RegExp(i.source,h)}let n=this._editor.getModel(),o=n.getValue(1),r=n.getFullModelRange(),a=this._getReplacePattern(),l,c=this._state.preserveCase;a.hasReplacementPatterns||c?l=o.replace(i,function(){return a.buildReplaceString(arguments,c)}):l=o.replace(i,a.buildReplaceString(null,c));let d=new nu(r,l,this._editor.getSelection());this._executeEditorCommand("replaceAll",d)}_regularReplaceAll(e){let t=this._getReplacePattern(),i=this._findMatches(e,t.hasReplacementPatterns||this._state.preserveCase,1073741824),n=[];for(let r=0,a=i.length;r<a;r++)n[r]=t.buildReplaceString(i[r].matches,this._state.preserveCase);let o=new zy(this._editor.getSelection(),i.map(r=>r.range),n);this._executeEditorCommand("replaceAll",o)}selectAllMatches(){if(!this._hasMatches())return;let e=this._decorations.getFindScopes(),i=this._findMatches(e,!1,1073741824).map(o=>new X(o.range.startLineNumber,o.range.startColumn,o.range.endLineNumber,o.range.endColumn)),n=this._editor.getSelection();for(let o=0,r=i.length;o<r;o++)if(i[o].equalsRange(n)){i=[n].concat(i.slice(0,o)).concat(i.slice(o+1));break}this._editor.setSelections(i)}_executeEditorCommand(e,t){try{this._ignoreModelContentChanged=!0,this._editor.pushUndoStop(),this._editor.executeCommand(e,t),this._editor.pushUndoStop()}finally{this._ignoreModelContentChanged=!1}}};Ae();as();xi();Zn();De();var RD={inputActiveOptionBorder:we.fromHex("#007ACC00"),inputActiveOptionForeground:we.fromHex("#FFFFFF"),inputActiveOptionBackground:we.fromHex("#0E639C50")},Ko=class extends Ti{constructor(e){super();this._onChange=this._register(new G),this.onChange=this._onChange.event,this._onKeyDown=this._register(new G),this.onKeyDown=this._onKeyDown.event,this._opts=Object.assign(Object.assign({},RD),e),this._checked=this._opts.isChecked;let t=["monaco-custom-checkbox"];this._opts.icon&&t.push(...Ch.asClassNameArray(this._opts.icon)),this._opts.actionClassName&&t.push(...this._opts.actionClassName.split(" ")),this._checked&&t.push("checked"),this.domNode=document.createElement("div"),this.domNode.title=this._opts.title,this.domNode.classList.add(...t),this._opts.notFocusable||(this.domNode.tabIndex=0),this.domNode.setAttribute("role","checkbox"),this.domNode.setAttribute("aria-checked",String(this._checked)),this.domNode.setAttribute("aria-label",this._opts.title),this.applyStyles(),this.onclick(this.domNode,i=>{this.enabled&&(this.checked=!this._checked,this._onChange.fire(!1),i.preventDefault())}),this.ignoreGesture(this.domNode),this.onkeydown(this.domNode,i=>{if(i.keyCode===10||i.keyCode===3){this.checked=!this._checked,this._onChange.fire(!0),i.preventDefault();return}this._onKeyDown.fire(i)})}get enabled(){return this.domNode.getAttribute("aria-disabled")!=="true"}focus(){this.domNode.focus()}get checked(){return this._checked}set checked(e){this._checked=e,this.domNode.setAttribute("aria-checked",String(this._checked)),this.domNode.classList.toggle("checked",this._checked),this.applyStyles()}width(){return 2+2+2+16}style(e){e.inputActiveOptionBorder&&(this._opts.inputActiveOptionBorder=e.inputActiveOptionBorder),e.inputActiveOptionForeground&&(this._opts.inputActiveOptionForeground=e.inputActiveOptionForeground),e.inputActiveOptionBackground&&(this._opts.inputActiveOptionBackground=e.inputActiveOptionBackground),this.applyStyles()}applyStyles(){this.domNode&&(this.domNode.style.borderColor=this._checked&&this._opts.inputActiveOptionBorder?this._opts.inputActiveOptionBorder.toString():"",this.domNode.style.color=this._checked&&this._opts.inputActiveOptionForeground?this._opts.inputActiveOptionForeground.toString():"inherit",this.domNode.style.backgroundColor=this._checked&&this._opts.inputActiveOptionBackground?this._opts.inputActiveOptionBackground.toString():"")}enable(){this.domNode.setAttribute("aria-disabled",String(!1))}disable(){this.domNode.setAttribute("aria-disabled",String(!0))}};xi();Q();var AD=u("caseDescription","Match Case"),FD=u("wordsDescription","Match Whole Word"),ND=u("regexDescription","Use Regular Expression"),Cc=class extends Ko{constructor(e){super({icon:K.caseSensitive,title:AD+e.appendTitle,isChecked:e.isChecked,inputActiveOptionBorder:e.inputActiveOptionBorder,inputActiveOptionForeground:e.inputActiveOptionForeground,inputActiveOptionBackground:e.inputActiveOptionBackground})}},_c=class extends Ko{constructor(e){super({icon:K.wholeWord,title:FD+e.appendTitle,isChecked:e.isChecked,inputActiveOptionBorder:e.inputActiveOptionBorder,inputActiveOptionForeground:e.inputActiveOptionForeground,inputActiveOptionBackground:e.inputActiveOptionBackground})}},wc=class extends Ko{constructor(e){super({icon:K.regex,title:ND+e.appendTitle,isChecked:e.isChecked,inputActiveOptionBorder:e.inputActiveOptionBorder,inputActiveOptionForeground:e.inputActiveOptionForeground,inputActiveOptionBackground:e.inputActiveOptionBackground})}};as();ke();mt();Ne();var ul=class extends Ti{constructor(e,t,i,n){super();this._hideSoon=this._register(new $e(()=>this._hide(),2e3)),this._isVisible=!1,this._editor=e,this._state=t,this._keybindingService=i,this._domNode=document.createElement("div"),this._domNode.className="findOptionsWidget",this._domNode.style.display="none",this._domNode.style.top="10px",this._domNode.setAttribute("role","presentation"),this._domNode.setAttribute("aria-hidden","true");let o=n.getColorTheme().getColor(sd),r=n.getColorTheme().getColor(ld),a=n.getColorTheme().getColor(ad);this.caseSensitive=this._register(new Cc({appendTitle:this._keybindingLabelFor(ze.ToggleCaseSensitiveCommand),isChecked:this._state.matchCase,inputActiveOptionBorder:o,inputActiveOptionForeground:r,inputActiveOptionBackground:a})),this._domNode.appendChild(this.caseSensitive.domNode),this._register(this.caseSensitive.onChange(()=>{this._state.change({matchCase:this.caseSensitive.checked},!1)})),this.wholeWords=this._register(new _c({appendTitle:this._keybindingLabelFor(ze.ToggleWholeWordCommand),isChecked:this._state.wholeWord,inputActiveOptionBorder:o,inputActiveOptionForeground:r,inputActiveOptionBackground:a})),this._domNode.appendChild(this.wholeWords.domNode),this._register(this.wholeWords.onChange(()=>{this._state.change({wholeWord:this.wholeWords.checked},!1)})),this.regex=this._register(new wc({appendTitle:this._keybindingLabelFor(ze.ToggleRegexCommand),isChecked:this._state.isRegex,inputActiveOptionBorder:o,inputActiveOptionForeground:r,inputActiveOptionBackground:a})),this._domNode.appendChild(this.regex.domNode),this._register(this.regex.onChange(()=>{this._state.change({isRegex:this.regex.checked},!1)})),this._editor.addOverlayWidget(this),this._register(this._state.onFindReplaceStateChange(l=>{let c=!1;l.isRegex&&(this.regex.checked=this._state.isRegex,c=!0),l.wholeWord&&(this.wholeWords.checked=this._state.wholeWord,c=!0),l.matchCase&&(this.caseSensitive.checked=this._state.matchCase,c=!0),!this._state.isRevealed&&c&&this._revealTemporarily()})),this._register(nv(this._domNode,l=>this._onMouseOut())),this._register(Ke(this._domNode,"mouseover",l=>this._onMouseOver())),this._applyTheme(n.getColorTheme()),this._register(n.onDidColorThemeChange(this._applyTheme.bind(this)))}_keybindingLabelFor(e){let t=this._keybindingService.lookupKeybinding(e);return t?` (${t.getLabel()})`:""}dispose(){this._editor.removeOverlayWidget(this),super.dispose()}getId(){return ul.ID}getDomNode(){return this._domNode}getPosition(){return{preference:0}}highlightFindOptions(){this._revealTemporarily()}_revealTemporarily(){this._show(),this._hideSoon.schedule()}_onMouseOut(){this._hideSoon.schedule()}_onMouseOver(){this._hideSoon.cancel()}_show(){this._isVisible||(this._isVisible=!0,this._domNode.style.display="block")}_hide(){!this._isVisible||(this._isVisible=!1,this._domNode.style.display="none")}_applyTheme(e){let t={inputActiveOptionBorder:e.getColor(sd),inputActiveOptionForeground:e.getColor(ld),inputActiveOptionBackground:e.getColor(ad)};this.caseSensitive.style(t),this.wholeWords.style(t),this.regex.style(t)}};ul.ID="editor.contrib.findOptionsWidget";Me((s,e)=>{let t=s.getColor(cn);t&&e.addRule(`.monaco-editor .findOptionsWidget { background-color: ${t}; }`);let i=s.getColor(Ta);i&&e.addRule(`.monaco-editor .findOptionsWidget { color: ${i}; }`);let n=s.getColor(yr);n&&e.addRule(`.monaco-editor .findOptionsWidget { box-shadow: 0 0 8px 2px ${n}; }`);let o=s.getColor(dn);o&&e.addRule(`.monaco-editor .findOptionsWidget { border: 2px solid ${o}; }`)});De();B();ee();function Kp(s,e){return s===1?!0:s===2?!1:e}var Wy=class extends z{constructor(){super();this._onFindReplaceStateChange=this._register(new G),this.onFindReplaceStateChange=this._onFindReplaceStateChange.event,this._searchString="",this._replaceString="",this._isRevealed=!1,this._isReplaceRevealed=!1,this._isRegex=!1,this._isRegexOverride=0,this._wholeWord=!1,this._wholeWordOverride=0,this._matchCase=!1,this._matchCaseOverride=0,this._preserveCase=!1,this._preserveCaseOverride=0,this._searchScope=null,this._matchesPosition=0,this._matchesCount=0,this._currentMatch=null,this._loop=!0,this._isSearching=!1,this._filters=null}get searchString(){return this._searchString}get replaceString(){return this._replaceString}get isRevealed(){return this._isRevealed}get isReplaceRevealed(){return this._isReplaceRevealed}get isRegex(){return Kp(this._isRegexOverride,this._isRegex)}get wholeWord(){return Kp(this._wholeWordOverride,this._wholeWord)}get matchCase(){return Kp(this._matchCaseOverride,this._matchCase)}get preserveCase(){return Kp(this._preserveCaseOverride,this._preserveCase)}get actualIsRegex(){return this._isRegex}get actualWholeWord(){return this._wholeWord}get actualMatchCase(){return this._matchCase}get actualPreserveCase(){return this._preserveCase}get searchScope(){return this._searchScope}get matchesPosition(){return this._matchesPosition}get matchesCount(){return this._matchesCount}get currentMatch(){return this._currentMatch}changeMatchInfo(e,t,i){let n={moveCursor:!1,updateHistory:!1,searchString:!1,replaceString:!1,isRevealed:!1,isReplaceRevealed:!1,isRegex:!1,wholeWord:!1,matchCase:!1,preserveCase:!1,searchScope:!1,matchesPosition:!1,matchesCount:!1,currentMatch:!1,loop:!1,isSearching:!1,filters:!1},o=!1;t===0&&(e=0),e>t&&(e=t),this._matchesPosition!==e&&(this._matchesPosition=e,n.matchesPosition=!0,o=!0),this._matchesCount!==t&&(this._matchesCount=t,n.matchesCount=!0,o=!0),typeof i!="undefined"&&(b.equalsRange(this._currentMatch,i)||(this._currentMatch=i,n.currentMatch=!0,o=!0)),o&&this._onFindReplaceStateChange.fire(n)}change(e,t,i=!0){var n;let o={moveCursor:t,updateHistory:i,searchString:!1,replaceString:!1,isRevealed:!1,isReplaceRevealed:!1,isRegex:!1,wholeWord:!1,matchCase:!1,preserveCase:!1,searchScope:!1,matchesPosition:!1,matchesCount:!1,currentMatch:!1,loop:!1,isSearching:!1,filters:!1},r=!1,a=this.isRegex,l=this.wholeWord,c=this.matchCase,d=this.preserveCase;typeof e.searchString!="undefined"&&this._searchString!==e.searchString&&(this._searchString=e.searchString,o.searchString=!0,r=!0),typeof e.replaceString!="undefined"&&this._replaceString!==e.replaceString&&(this._replaceString=e.replaceString,o.replaceString=!0,r=!0),typeof e.isRevealed!="undefined"&&this._isRevealed!==e.isRevealed&&(this._isRevealed=e.isRevealed,o.isRevealed=!0,r=!0),typeof e.isReplaceRevealed!="undefined"&&this._isReplaceRevealed!==e.isReplaceRevealed&&(this._isReplaceRevealed=e.isReplaceRevealed,o.isReplaceRevealed=!0,r=!0),typeof e.isRegex!="undefined"&&(this._isRegex=e.isRegex),typeof e.wholeWord!="undefined"&&(this._wholeWord=e.wholeWord),typeof e.matchCase!="undefined"&&(this._matchCase=e.matchCase),typeof e.preserveCase!="undefined"&&(this._preserveCase=e.preserveCase),typeof e.searchScope!="undefined"&&(((n=e.searchScope)===null||n===void 0?void 0:n.every(h=>{var p;return(p=this._searchScope)===null||p===void 0?void 0:p.some(m=>!b.equalsRange(m,h))}))||(this._searchScope=e.searchScope,o.searchScope=!0,r=!0)),typeof e.loop!="undefined"&&this._loop!==e.loop&&(this._loop=e.loop,o.loop=!0,r=!0),typeof e.isSearching!="undefined"&&this._isSearching!==e.isSearching&&(this._isSearching=e.isSearching,o.isSearching=!0,r=!0),typeof e.filters!="undefined"&&(this._filters?this._filters.update(e.filters):this._filters=e.filters,o.filters=!0,r=!0),this._isRegexOverride=typeof e.isRegexOverride!="undefined"?e.isRegexOverride:0,this._wholeWordOverride=typeof e.wholeWordOverride!="undefined"?e.wholeWordOverride:0,this._matchCaseOverride=typeof e.matchCaseOverride!="undefined"?e.matchCaseOverride:0,this._preserveCaseOverride=typeof e.preserveCaseOverride!="undefined"?e.preserveCaseOverride:0,a!==this.isRegex&&(r=!0,o.isRegex=!0),l!==this.wholeWord&&(r=!0,o.wholeWord=!0),c!==this.matchCase&&(r=!0,o.matchCase=!0),d!==this.preserveCase&&(r=!0,o.preserveCase=!0),r&&this._onFindReplaceStateChange.fire(o)}canNavigateBack(){return this.canNavigateInLoop()||this.matchesPosition!==1}canNavigateForward(){return this.canNavigateInLoop()||this.matchesPosition<this.matchesCount}canNavigateInLoop(){return this._loop||this.matchesCount>=lo}};Ae();Ln();as();ke();xi();Le();B();Pi();Ye();ee();Q();Ae();as();De();Q();var zD=u("defaultLabel","input"),By=class extends Ti{constructor(e,t,i,n){super();this._showOptionButtons=i,this.fixFocusOnOptionClickEnabled=!0,this.imeSessionInProgress=!1,this._onDidOptionChange=this._register(new G),this.onDidOptionChange=this._onDidOptionChange.event,this._onKeyDown=this._register(new G),this.onKeyDown=this._onKeyDown.event,this._onMouseDown=this._register(new G),this.onMouseDown=this._onMouseDown.event,this._onInput=this._register(new G),this._onKeyUp=this._register(new G),this._onCaseSensitiveKeyDown=this._register(new G),this.onCaseSensitiveKeyDown=this._onCaseSensitiveKeyDown.event,this._onRegexKeyDown=this._register(new G),this.onRegexKeyDown=this._onRegexKeyDown.event,this._lastHighlightFindOptions=0,this.contextViewProvider=t,this.placeholder=n.placeholder||"",this.validation=n.validation,this.label=n.label||zD,this.inputActiveOptionBorder=n.inputActiveOptionBorder,this.inputActiveOptionForeground=n.inputActiveOptionForeground,this.inputActiveOptionBackground=n.inputActiveOptionBackground,this.inputBackground=n.inputBackground,this.inputForeground=n.inputForeground,this.inputBorder=n.inputBorder,this.inputValidationInfoBorder=n.inputValidationInfoBorder,this.inputValidationInfoBackground=n.inputValidationInfoBackground,this.inputValidationInfoForeground=n.inputValidationInfoForeground,this.inputValidationWarningBorder=n.inputValidationWarningBorder,this.inputValidationWarningBackground=n.inputValidationWarningBackground,this.inputValidationWarningForeground=n.inputValidationWarningForeground,this.inputValidationErrorBorder=n.inputValidationErrorBorder,this.inputValidationErrorBackground=n.inputValidationErrorBackground,this.inputValidationErrorForeground=n.inputValidationErrorForeground;let o=n.appendCaseSensitiveLabel||"",r=n.appendWholeWordsLabel||"",a=n.appendRegexLabel||"",l=n.history||[],c=!!n.flexibleHeight,d=!!n.flexibleWidth,h=n.flexibleMaxHeight;this.domNode=document.createElement("div"),this.domNode.classList.add("monaco-findInput"),this.inputBox=this._register(new yu(this.domNode,this.contextViewProvider,{placeholder:this.placeholder||"",ariaLabel:this.label||"",validationOptions:{validation:this.validation},inputBackground:this.inputBackground,inputForeground:this.inputForeground,inputBorder:this.inputBorder,inputValidationInfoBackground:this.inputValidationInfoBackground,inputValidationInfoForeground:this.inputValidationInfoForeground,inputValidationInfoBorder:this.inputValidationInfoBorder,inputValidationWarningBackground:this.inputValidationWarningBackground,inputValidationWarningForeground:this.inputValidationWarningForeground,inputValidationWarningBorder:this.inputValidationWarningBorder,inputValidationErrorBackground:this.inputValidationErrorBackground,inputValidationErrorForeground:this.inputValidationErrorForeground,inputValidationErrorBorder:this.inputValidationErrorBorder,history:l,showHistoryHint:n.showHistoryHint,flexibleHeight:c,flexibleWidth:d,flexibleMaxHeight:h})),this.regex=this._register(new wc({appendTitle:a,isChecked:!1,inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground})),this._register(this.regex.onChange(m=>{this._onDidOptionChange.fire(m),!m&&this.fixFocusOnOptionClickEnabled&&this.inputBox.focus(),this.validate()})),this._register(this.regex.onKeyDown(m=>{this._onRegexKeyDown.fire(m)})),this.wholeWords=this._register(new _c({appendTitle:r,isChecked:!1,inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground})),this._register(this.wholeWords.onChange(m=>{this._onDidOptionChange.fire(m),!m&&this.fixFocusOnOptionClickEnabled&&this.inputBox.focus(),this.validate()})),this.caseSensitive=this._register(new Cc({appendTitle:o,isChecked:!1,inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground})),this._register(this.caseSensitive.onChange(m=>{this._onDidOptionChange.fire(m),!m&&this.fixFocusOnOptionClickEnabled&&this.inputBox.focus(),this.validate()})),this._register(this.caseSensitive.onKeyDown(m=>{this._onCaseSensitiveKeyDown.fire(m)})),this._showOptionButtons&&(this.inputBox.paddingRight=this.caseSensitive.width()+this.wholeWords.width()+this.regex.width());let p=[this.caseSensitive.domNode,this.wholeWords.domNode,this.regex.domNode];this.onkeydown(this.domNode,m=>{if(m.equals(15)||m.equals(17)||m.equals(9)){let f=p.indexOf(document.activeElement);if(f>=0){let v=-1;m.equals(17)?v=(f+1)%p.length:m.equals(15)&&(f===0?v=p.length-1:v=f-1),m.equals(9)?(p[f].blur(),this.inputBox.focus()):v>=0&&p[v].focus(),an.stop(m,!0)}}}),this.controls=document.createElement("div"),this.controls.className="controls",this.controls.style.display=this._showOptionButtons?"block":"none",this.controls.appendChild(this.caseSensitive.domNode),this.controls.appendChild(this.wholeWords.domNode),this.controls.appendChild(this.regex.domNode),this.domNode.appendChild(this.controls),e&&e.appendChild(this.domNode),this._register(Ke(this.inputBox.inputElement,"compositionstart",m=>{this.imeSessionInProgress=!0})),this._register(Ke(this.inputBox.inputElement,"compositionend",m=>{this.imeSessionInProgress=!1,this._onInput.fire()})),this.onkeydown(this.inputBox.inputElement,m=>this._onKeyDown.fire(m)),this.onkeyup(this.inputBox.inputElement,m=>this._onKeyUp.fire(m)),this.oninput(this.inputBox.inputElement,m=>this._onInput.fire()),this.onmousedown(this.inputBox.inputElement,m=>this._onMouseDown.fire(m))}enable(){this.domNode.classList.remove("disabled"),this.inputBox.enable(),this.regex.enable(),this.wholeWords.enable(),this.caseSensitive.enable()}disable(){this.domNode.classList.add("disabled"),this.inputBox.disable(),this.regex.disable(),this.wholeWords.disable(),this.caseSensitive.disable()}setFocusInputOnOptionClick(e){this.fixFocusOnOptionClickEnabled=e}setEnabled(e){e?this.enable():this.disable()}getValue(){return this.inputBox.value}setValue(e){this.inputBox.value!==e&&(this.inputBox.value=e)}style(e){this.inputActiveOptionBorder=e.inputActiveOptionBorder,this.inputActiveOptionForeground=e.inputActiveOptionForeground,this.inputActiveOptionBackground=e.inputActiveOptionBackground,this.inputBackground=e.inputBackground,this.inputForeground=e.inputForeground,this.inputBorder=e.inputBorder,this.inputValidationInfoBackground=e.inputValidationInfoBackground,this.inputValidationInfoForeground=e.inputValidationInfoForeground,this.inputValidationInfoBorder=e.inputValidationInfoBorder,this.inputValidationWarningBackground=e.inputValidationWarningBackground,this.inputValidationWarningForeground=e.inputValidationWarningForeground,this.inputValidationWarningBorder=e.inputValidationWarningBorder,this.inputValidationErrorBackground=e.inputValidationErrorBackground,this.inputValidationErrorForeground=e.inputValidationErrorForeground,this.inputValidationErrorBorder=e.inputValidationErrorBorder,this.applyStyles()}applyStyles(){if(this.domNode){let e={inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground};this.regex.style(e),this.wholeWords.style(e),this.caseSensitive.style(e);let t={inputBackground:this.inputBackground,inputForeground:this.inputForeground,inputBorder:this.inputBorder,inputValidationInfoBackground:this.inputValidationInfoBackground,inputValidationInfoForeground:this.inputValidationInfoForeground,inputValidationInfoBorder:this.inputValidationInfoBorder,inputValidationWarningBackground:this.inputValidationWarningBackground,inputValidationWarningForeground:this.inputValidationWarningForeground,inputValidationWarningBorder:this.inputValidationWarningBorder,inputValidationErrorBackground:this.inputValidationErrorBackground,inputValidationErrorForeground:this.inputValidationErrorForeground,inputValidationErrorBorder:this.inputValidationErrorBorder};this.inputBox.style(t)}}select(){this.inputBox.select()}focus(){this.inputBox.focus()}getCaseSensitive(){return this.caseSensitive.checked}setCaseSensitive(e){this.caseSensitive.checked=e}getWholeWords(){return this.wholeWords.checked}setWholeWords(e){this.wholeWords.checked=e}getRegex(){return this.regex.checked}setRegex(e){this.regex.checked=e,this.validate()}focusOnCaseSensitive(){this.caseSensitive.focus()}highlightFindOptions(){this.domNode.classList.remove("highlight-"+this._lastHighlightFindOptions),this._lastHighlightFindOptions=1-this._lastHighlightFindOptions,this.domNode.classList.add("highlight-"+this._lastHighlightFindOptions)}validate(){this.inputBox.validate()}clearMessage(){this.inputBox.hideMessage()}};Ae();as();xi();De();Q();var OD=u("defaultLabel","input"),HD=u("label.preserveCaseCheckbox","Preserve Case"),BT=class extends Ko{constructor(e){super({icon:K.preserveCase,title:HD+e.appendTitle,isChecked:e.isChecked,inputActiveOptionBorder:e.inputActiveOptionBorder,inputActiveOptionForeground:e.inputActiveOptionForeground,inputActiveOptionBackground:e.inputActiveOptionBackground})}},Vy=class extends Ti{constructor(e,t,i,n){super();this._showOptionButtons=i,this.fixFocusOnOptionClickEnabled=!0,this.cachedOptionsWidth=0,this._onDidOptionChange=this._register(new G),this.onDidOptionChange=this._onDidOptionChange.event,this._onKeyDown=this._register(new G),this.onKeyDown=this._onKeyDown.event,this._onMouseDown=this._register(new G),this._onInput=this._register(new G),this._onKeyUp=this._register(new G),this._onPreserveCaseKeyDown=this._register(new G),this.onPreserveCaseKeyDown=this._onPreserveCaseKeyDown.event,this.contextViewProvider=t,this.placeholder=n.placeholder||"",this.validation=n.validation,this.label=n.label||OD,this.inputActiveOptionBorder=n.inputActiveOptionBorder,this.inputActiveOptionForeground=n.inputActiveOptionForeground,this.inputActiveOptionBackground=n.inputActiveOptionBackground,this.inputBackground=n.inputBackground,this.inputForeground=n.inputForeground,this.inputBorder=n.inputBorder,this.inputValidationInfoBorder=n.inputValidationInfoBorder,this.inputValidationInfoBackground=n.inputValidationInfoBackground,this.inputValidationInfoForeground=n.inputValidationInfoForeground,this.inputValidationWarningBorder=n.inputValidationWarningBorder,this.inputValidationWarningBackground=n.inputValidationWarningBackground,this.inputValidationWarningForeground=n.inputValidationWarningForeground,this.inputValidationErrorBorder=n.inputValidationErrorBorder,this.inputValidationErrorBackground=n.inputValidationErrorBackground,this.inputValidationErrorForeground=n.inputValidationErrorForeground;let o=n.appendPreserveCaseLabel||"",r=n.history||[],a=!!n.flexibleHeight,l=!!n.flexibleWidth,c=n.flexibleMaxHeight;this.domNode=document.createElement("div"),this.domNode.classList.add("monaco-findInput"),this.inputBox=this._register(new yu(this.domNode,this.contextViewProvider,{ariaLabel:this.label||"",placeholder:this.placeholder||"",validationOptions:{validation:this.validation},inputBackground:this.inputBackground,inputForeground:this.inputForeground,inputBorder:this.inputBorder,inputValidationInfoBackground:this.inputValidationInfoBackground,inputValidationInfoForeground:this.inputValidationInfoForeground,inputValidationInfoBorder:this.inputValidationInfoBorder,inputValidationWarningBackground:this.inputValidationWarningBackground,inputValidationWarningForeground:this.inputValidationWarningForeground,inputValidationWarningBorder:this.inputValidationWarningBorder,inputValidationErrorBackground:this.inputValidationErrorBackground,inputValidationErrorForeground:this.inputValidationErrorForeground,inputValidationErrorBorder:this.inputValidationErrorBorder,history:r,showHistoryHint:n.showHistoryHint,flexibleHeight:a,flexibleWidth:l,flexibleMaxHeight:c})),this.preserveCase=this._register(new BT({appendTitle:o,isChecked:!1,inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground})),this._register(this.preserveCase.onChange(p=>{this._onDidOptionChange.fire(p),!p&&this.fixFocusOnOptionClickEnabled&&this.inputBox.focus(),this.validate()})),this._register(this.preserveCase.onKeyDown(p=>{this._onPreserveCaseKeyDown.fire(p)})),this._showOptionButtons?this.cachedOptionsWidth=this.preserveCase.width():this.cachedOptionsWidth=0;let d=[this.preserveCase.domNode];this.onkeydown(this.domNode,p=>{if(p.equals(15)||p.equals(17)||p.equals(9)){let m=d.indexOf(document.activeElement);if(m>=0){let f=-1;p.equals(17)?f=(m+1)%d.length:p.equals(15)&&(m===0?f=d.length-1:f=m-1),p.equals(9)?(d[m].blur(),this.inputBox.focus()):f>=0&&d[f].focus(),an.stop(p,!0)}}});let h=document.createElement("div");h.className="controls",h.style.display=this._showOptionButtons?"block":"none",h.appendChild(this.preserveCase.domNode),this.domNode.appendChild(h),e&&e.appendChild(this.domNode),this.onkeydown(this.inputBox.inputElement,p=>this._onKeyDown.fire(p)),this.onkeyup(this.inputBox.inputElement,p=>this._onKeyUp.fire(p)),this.oninput(this.inputBox.inputElement,p=>this._onInput.fire()),this.onmousedown(this.inputBox.inputElement,p=>this._onMouseDown.fire(p))}enable(){this.domNode.classList.remove("disabled"),this.inputBox.enable(),this.preserveCase.enable()}disable(){this.domNode.classList.add("disabled"),this.inputBox.disable(),this.preserveCase.disable()}setEnabled(e){e?this.enable():this.disable()}style(e){this.inputActiveOptionBorder=e.inputActiveOptionBorder,this.inputActiveOptionForeground=e.inputActiveOptionForeground,this.inputActiveOptionBackground=e.inputActiveOptionBackground,this.inputBackground=e.inputBackground,this.inputForeground=e.inputForeground,this.inputBorder=e.inputBorder,this.inputValidationInfoBackground=e.inputValidationInfoBackground,this.inputValidationInfoForeground=e.inputValidationInfoForeground,this.inputValidationInfoBorder=e.inputValidationInfoBorder,this.inputValidationWarningBackground=e.inputValidationWarningBackground,this.inputValidationWarningForeground=e.inputValidationWarningForeground,this.inputValidationWarningBorder=e.inputValidationWarningBorder,this.inputValidationErrorBackground=e.inputValidationErrorBackground,this.inputValidationErrorForeground=e.inputValidationErrorForeground,this.inputValidationErrorBorder=e.inputValidationErrorBorder,this.applyStyles()}applyStyles(){if(this.domNode){let e={inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground};this.preserveCase.style(e);let t={inputBackground:this.inputBackground,inputForeground:this.inputForeground,inputBorder:this.inputBorder,inputValidationInfoBackground:this.inputValidationInfoBackground,inputValidationInfoForeground:this.inputValidationInfoForeground,inputValidationInfoBorder:this.inputValidationInfoBorder,inputValidationWarningBackground:this.inputValidationWarningBackground,inputValidationWarningForeground:this.inputValidationWarningForeground,inputValidationWarningBorder:this.inputValidationWarningBorder,inputValidationErrorBackground:this.inputValidationErrorBackground,inputValidationErrorForeground:this.inputValidationErrorForeground,inputValidationErrorBorder:this.inputValidationErrorBorder};this.inputBox.style(t)}}select(){this.inputBox.select()}focus(){this.inputBox.focus()}getPreserveCase(){return this.preserveCase.checked}setPreserveCase(e){this.preserveCase.checked=e}focusOnPreserve(){this.preserveCase.focus()}validate(){this.inputBox&&this.inputBox.validate()}set width(e){this.inputBox.paddingRight=this.cachedOptionsWidth,this.inputBox.width=e,this.domNode.style.width=e+"px"}dispose(){super.dispose()}};Ee();Ql();var VT=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},GT=function(s,e){return function(t,i){e(t,i,s)}},jT="suggestWidgetVisible",Tc="historyNavigationWidget",UT="historyNavigationForwardsEnabled",$T="historyNavigationBackwardsEnabled";function WD(s,e,t){new pe(t,e).bindTo(s)}function BD(s,e){return s.createScoped(e.target)}function KT(s,e){return s.getContext(document.activeElement).getValue(e)}function qT(s,e){let t=BD(s,e);WD(t,e,Tc);let i=new pe(UT,!0).bindTo(t),n=new pe($T,!0).bindTo(t);return{scopedContextKeyService:t,historyNavigationForwardsEnablement:i,historyNavigationBackwardsEnablement:n}}var qp=class extends By{constructor(e,t,i,n,o=!1){super(e,t,o,i);this._register(qT(n,{target:this.inputBox.element,historyNavigator:this.inputBox}).scopedContextKeyService)}};qp=VT([GT(3,ie)],qp);var Xp=class extends Vy{constructor(e,t,i,n,o=!1){super(e,t,o,i);this._register(qT(n,{target:this.inputBox.element,historyNavigator:this.inputBox}).scopedContextKeyService)}};Xp=VT([GT(3,ie)],Xp);Zt.registerCommandAndKeybindingRule({id:"history.showPrevious",weight:200,when:O.and(O.has(Tc),O.equals($T,!0),O.equals(jT,!1)),primary:16,secondary:[528],handler:s=>{let e=KT(s.get(ie),Tc);e&&e.historyNavigator.showPreviousValue()}});Zt.registerCommandAndKeybindingRule({id:"history.showNext",weight:200,when:O.and(O.has(Tc),O.equals(UT,!0),O.equals(jT,!1)),primary:18,secondary:[530],handler:s=>{let e=KT(s.get(ie),Tc);e&&e.historyNavigator.showNextValue()}});function Gy(s){var e,t;return((e=s.lookupKeybinding("history.showPrevious"))===null||e===void 0?void 0:e.getElectronAccelerator())==="Up"&&((t=s.lookupKeybinding("history.showNext"))===null||t===void 0?void 0:t.getElectronAccelerator())==="Down"}mt();Ne();var VD=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},GD=Rt("find-selection",K.selection,u("findSelectionIcon","Icon for 'Find in Selection' in the editor find widget.")),XT=Rt("find-collapsed",K.chevronRight,u("findCollapsedIcon","Icon to indicate that the editor find widget is collapsed.")),YT=Rt("find-expanded",K.chevronDown,u("findExpandedIcon","Icon to indicate that the editor find widget is expanded.")),jD=Rt("find-replace",K.replace,u("findReplaceIcon","Icon for 'Replace' in the editor find widget.")),UD=Rt("find-replace-all",K.replaceAll,u("findReplaceAllIcon","Icon for 'Replace All' in the editor find widget.")),$D=Rt("find-previous-match",K.arrowUp,u("findPreviousMatchIcon","Icon for 'Find Previous' in the editor find widget.")),KD=Rt("find-next-match",K.arrowDown,u("findNextMatchIcon","Icon for 'Find Next' in the editor find widget.")),qD=u("label.find","Find"),XD=u("placeholder.find","Find"),YD=u("label.previousMatchButton","Previous Match"),ZD=u("label.nextMatchButton","Next Match"),JD=u("label.toggleSelectionFind","Find in Selection"),QD=u("label.closeButton","Close"),eR=u("label.replace","Replace"),tR=u("placeholder.replace","Replace"),iR=u("label.replaceButton","Replace"),nR=u("label.replaceAllButton","Replace All"),oR=u("label.toggleReplaceButton","Toggle Replace"),rR=u("title.matchesCountLimit","Only the first {0} results are highlighted, but all find operations work on the entire text.",lo),sR=u("label.matchesLocation","{0} of {1}"),ZT=u("label.noResults","No results"),co=419,aR=275,lR=aR-54,Ec=69,dR=33,JT="ctrlEnterReplaceAll.windows.donotask",QT=bi?256:2048,Yp=class{constructor(e){this.afterLineNumber=e,this.heightInPx=dR,this.suppressMouseDown=!1,this.domNode=document.createElement("div"),this.domNode.className="dock-find-viewzone"}};function eE(s,e,t){let i=!!e.match(/\n/);if(t&&i&&t.selectionStart>0){s.stopPropagation();return}}function tE(s,e,t){let i=!!e.match(/\n/);if(t&&i&&t.selectionEnd<t.value.length){s.stopPropagation();return}}var pl=class extends Ti{constructor(e,t,i,n,o,r,a,l,c){super();this._cachedHeight=null,this._revealTimeouts=[],this._codeEditor=e,this._controller=t,this._state=i,this._contextViewProvider=n,this._keybindingService=o,this._contextKeyService=r,this._storageService=l,this._notificationService=c,this._ctrlEnterReplaceAllWarningPrompted=!!l.getBoolean(JT,0),this._isVisible=!1,this._isReplaceVisible=!1,this._ignoreChangeEvent=!1,this._updateHistoryDelayer=new Tn(500),this._register(We(()=>this._updateHistoryDelayer.cancel())),this._register(this._state.onFindReplaceStateChange(d=>this._onStateChanged(d))),this._buildDomNode(),this._updateButtons(),this._tryUpdateWidgetWidth(),this._findInput.inputBox.layout(),this._register(this._codeEditor.onDidChangeConfiguration(d=>{if(d.hasChanged(81)&&(this._codeEditor.getOption(81)&&this._state.change({isReplaceRevealed:!1},!1),this._updateButtons()),d.hasChanged(131)&&this._tryUpdateWidgetWidth(),d.hasChanged(2)&&this.updateAccessibilitySupport(),d.hasChanged(35)){let h=this._codeEditor.getOption(35).addExtraSpaceOnTop;h&&!this._viewZone&&(this._viewZone=new Yp(0),this._showViewZone()),!h&&this._viewZone&&this._removeViewZone()}})),this.updateAccessibilitySupport(),this._register(this._codeEditor.onDidChangeCursorSelection(()=>{this._isVisible&&this._updateToggleSelectionFindButton()})),this._register(this._codeEditor.onDidFocusEditorWidget(()=>VD(this,void 0,void 0,function*(){if(this._isVisible){let d=yield this._controller.getGlobalBufferTerm();d&&d!==this._state.searchString&&(this._state.change({searchString:d},!1),this._findInput.select())}}))),this._findInputFocused=hl.bindTo(r),this._findFocusTracker=this._register($m(this._findInput.inputBox.inputElement)),this._register(this._findFocusTracker.onDidFocus(()=>{this._findInputFocused.set(!0),this._updateSearchScope()})),this._register(this._findFocusTracker.onDidBlur(()=>{this._findInputFocused.set(!1)})),this._replaceInputFocused=fc.bindTo(r),this._replaceFocusTracker=this._register($m(this._replaceInput.inputBox.inputElement)),this._register(this._replaceFocusTracker.onDidFocus(()=>{this._replaceInputFocused.set(!0),this._updateSearchScope()})),this._register(this._replaceFocusTracker.onDidBlur(()=>{this._replaceInputFocused.set(!1)})),this._codeEditor.addOverlayWidget(this),this._codeEditor.getOption(35).addExtraSpaceOnTop&&(this._viewZone=new Yp(0)),this._applyTheme(a.getColorTheme()),this._register(a.onDidColorThemeChange(this._applyTheme.bind(this))),this._register(this._codeEditor.onDidChangeModel(()=>{!this._isVisible||(this._viewZoneId=void 0)})),this._register(this._codeEditor.onDidScrollChange(d=>{if(d.scrollTopChanged){this._layoutViewZone();return}setTimeout(()=>{this._layoutViewZone()},0)}))}getId(){return pl.ID}getDomNode(){return this._domNode}getPosition(){return this._isVisible?{preference:0}:null}_onStateChanged(e){if(e.searchString){try{this._ignoreChangeEvent=!0,this._findInput.setValue(this._state.searchString)}finally{this._ignoreChangeEvent=!1}this._updateButtons()}if(e.replaceString&&(this._replaceInput.inputBox.value=this._state.replaceString),e.isRevealed&&(this._state.isRevealed?this._reveal():this._hide(!0)),e.isReplaceRevealed&&(this._state.isReplaceRevealed?!this._codeEditor.getOption(81)&&!this._isReplaceVisible&&(this._isReplaceVisible=!0,this._replaceInput.width=Kn(this._findInput.domNode),this._updateButtons(),this._replaceInput.inputBox.layout()):this._isReplaceVisible&&(this._isReplaceVisible=!1,this._updateButtons())),(e.isRevealed||e.isReplaceRevealed)&&(this._state.isRevealed||this._state.isReplaceRevealed)&&this._tryUpdateHeight()&&this._showViewZone(),e.isRegex&&this._findInput.setRegex(this._state.isRegex),e.wholeWord&&this._findInput.setWholeWords(this._state.wholeWord),e.matchCase&&this._findInput.setCaseSensitive(this._state.matchCase),e.preserveCase&&this._replaceInput.setPreserveCase(this._state.preserveCase),e.searchScope&&(this._state.searchScope?this._toggleSelectionFind.checked=!0:this._toggleSelectionFind.checked=!1,this._updateToggleSelectionFindButton()),e.searchString||e.matchesCount||e.matchesPosition){let t=this._state.searchString.length>0&&this._state.matchesCount===0;this._domNode.classList.toggle("no-results",t),this._updateMatchesCount(),this._updateButtons()}(e.searchString||e.currentMatch)&&this._layoutViewZone(),e.updateHistory&&this._delayedUpdateHistory(),e.loop&&this._updateButtons()}_delayedUpdateHistory(){this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(void 0,de)}_updateHistory(){this._state.searchString&&this._findInput.inputBox.addToHistory(),this._state.replaceString&&this._replaceInput.inputBox.addToHistory()}_updateMatchesCount(){this._matchesCount.style.minWidth=Ec+"px",this._state.matchesCount>=lo?this._matchesCount.title=rR:this._matchesCount.title="",this._matchesCount.firstChild&&this._matchesCount.removeChild(this._matchesCount.firstChild);let e;if(this._state.matchesCount>0){let t=String(this._state.matchesCount);this._state.matchesCount>=lo&&(t+="+");let i=String(this._state.matchesPosition);i==="0"&&(i="?"),e=Ui(sR,i,t)}else e=ZT;this._matchesCount.appendChild(document.createTextNode(e)),Ct(this._getAriaLabel(e,this._state.currentMatch,this._state.searchString)),Ec=Math.max(Ec,this._matchesCount.clientWidth)}_getAriaLabel(e,t,i){if(e===ZT)return i===""?u("ariaSearchNoResultEmpty","{0} found",e):u("ariaSearchNoResult","{0} found for '{1}'",e,i);if(t){let n=u("ariaSearchNoResultWithLineNum","{0} found for '{1}', at {2}",e,i,t.startLineNumber+":"+t.startColumn),o=this._codeEditor.getModel();return o&&t.startLineNumber<=o.getLineCount()&&t.startLineNumber>=1?`${o.getLineContent(t.startLineNumber)}, ${n}`:n}return u("ariaSearchNoResultWithLineNumNoCurrentMatch","{0} found for '{1}'",e,i)}_updateToggleSelectionFindButton(){let e=this._codeEditor.getSelection(),t=e?e.startLineNumber!==e.endLineNumber||e.startColumn!==e.endColumn:!1,i=this._toggleSelectionFind.checked;this._isVisible&&(i||t)?this._toggleSelectionFind.enable():this._toggleSelectionFind.disable()}_updateButtons(){this._findInput.setEnabled(this._isVisible),this._replaceInput.setEnabled(this._isVisible&&this._isReplaceVisible),this._updateToggleSelectionFindButton(),this._closeBtn.setEnabled(this._isVisible);let e=this._state.searchString.length>0,t=!!this._state.matchesCount;this._prevBtn.setEnabled(this._isVisible&&e&&t&&this._state.canNavigateBack()),this._nextBtn.setEnabled(this._isVisible&&e&&t&&this._state.canNavigateForward()),this._replaceBtn.setEnabled(this._isVisible&&this._isReplaceVisible&&e),this._replaceAllBtn.setEnabled(this._isVisible&&this._isReplaceVisible&&e),this._domNode.classList.toggle("replaceToggled",this._isReplaceVisible),this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);let i=!this._codeEditor.getOption(81);this._toggleReplaceBtn.setEnabled(this._isVisible&&i)}_reveal(){if(this._revealTimeouts.forEach(e=>{clearTimeout(e)}),this._revealTimeouts=[],!this._isVisible){this._isVisible=!0;let e=this._codeEditor.getSelection();switch(this._codeEditor.getOption(35).autoFindInSelection){case"always":this._toggleSelectionFind.checked=!0;break;case"never":this._toggleSelectionFind.checked=!1;break;case"multiline":{let i=!!e&&e.startLineNumber!==e.endLineNumber;this._toggleSelectionFind.checked=i;break}default:break}this._tryUpdateWidgetWidth(),this._updateButtons(),this._revealTimeouts.push(setTimeout(()=>{this._domNode.classList.add("visible"),this._domNode.setAttribute("aria-hidden","false")},0)),this._revealTimeouts.push(setTimeout(()=>{this._findInput.validate()},200)),this._codeEditor.layoutOverlayWidget(this);let t=!0;if(this._codeEditor.getOption(35).seedSearchStringFromSelection&&e){let i=this._codeEditor.getDomNode();if(i){let n=ni(i),o=this._codeEditor.getScrolledVisiblePosition(e.getStartPosition()),r=n.left+(o?o.left:0),a=o?o.top:0;if(this._viewZone&&a<this._viewZone.heightInPx){e.endLineNumber>e.startLineNumber&&(t=!1);let l=rv(this._domNode).left;r>l&&(t=!1);let c=this._codeEditor.getScrolledVisiblePosition(e.getEndPosition());n.left+(c?c.left:0)>l&&(t=!1)}}}this._showViewZone(t)}}_hide(e){this._revealTimeouts.forEach(t=>{clearTimeout(t)}),this._revealTimeouts=[],this._isVisible&&(this._isVisible=!1,this._updateButtons(),this._domNode.classList.remove("visible"),this._domNode.setAttribute("aria-hidden","true"),this._findInput.clearMessage(),e&&this._codeEditor.focus(),this._codeEditor.layoutOverlayWidget(this),this._removeViewZone())}_layoutViewZone(e){if(!this._codeEditor.getOption(35).addExtraSpaceOnTop){this._removeViewZone();return}if(!this._isVisible)return;let i=this._viewZone;this._viewZoneId!==void 0||!i||this._codeEditor.changeViewZones(n=>{i.heightInPx=this._getHeight(),this._viewZoneId=n.addZone(i),this._codeEditor.setScrollTop(e||this._codeEditor.getScrollTop()+i.heightInPx)})}_showViewZone(e=!0){if(!this._isVisible||!this._codeEditor.getOption(35).addExtraSpaceOnTop)return;this._viewZone===void 0&&(this._viewZone=new Yp(0));let i=this._viewZone;this._codeEditor.changeViewZones(n=>{if(this._viewZoneId!==void 0){let o=this._getHeight();if(o===i.heightInPx)return;let r=o-i.heightInPx;i.heightInPx=o,n.layoutZone(this._viewZoneId),e&&this._codeEditor.setScrollTop(this._codeEditor.getScrollTop()+r);return}else{let o=this._getHeight();if(o-=this._codeEditor.getOption(75).top,o<=0)return;i.heightInPx=o,this._viewZoneId=n.addZone(i),e&&this._codeEditor.setScrollTop(this._codeEditor.getScrollTop()+o)}})}_removeViewZone(){this._codeEditor.changeViewZones(e=>{this._viewZoneId!==void 0&&(e.removeZone(this._viewZoneId),this._viewZoneId=void 0,this._viewZone&&(this._codeEditor.setScrollTop(this._codeEditor.getScrollTop()-this._viewZone.heightInPx),this._viewZone=void 0))})}_applyTheme(e){let t={inputActiveOptionBorder:e.getColor(sd),inputActiveOptionBackground:e.getColor(ad),inputActiveOptionForeground:e.getColor(ld),inputBackground:e.getColor(Wh),inputForeground:e.getColor(Bh),inputBorder:e.getColor(Vh),inputValidationInfoBackground:e.getColor(xv),inputValidationInfoForeground:e.getColor(Cv),inputValidationInfoBorder:e.getColor(_v),inputValidationWarningBackground:e.getColor(wv),inputValidationWarningForeground:e.getColor(Tv),inputValidationWarningBorder:e.getColor(Ev),inputValidationErrorBackground:e.getColor(Iv),inputValidationErrorForeground:e.getColor(kv),inputValidationErrorBorder:e.getColor(Lv)};this._findInput.style(t),this._replaceInput.style(t),this._toggleSelectionFind.style(t)}_tryUpdateWidgetWidth(){if(!this._isVisible||!tv(this._domNode))return;let e=this._codeEditor.getLayoutInfo();if(e.contentWidth<=0){this._domNode.classList.add("hiddenEditor");return}else this._domNode.classList.contains("hiddenEditor")&&this._domNode.classList.remove("hiddenEditor");let i=e.width,n=e.minimap.minimapWidth,o=!1,r=!1,a=!1;if(this._resized&&Kn(this._domNode)>co){this._domNode.style.maxWidth=`${i-28-n-15}px`,this._replaceInput.width=Kn(this._findInput.domNode);return}if(co+28+n>=i&&(r=!0),co+28+n-Ec>=i&&(a=!0),co+28+n-Ec>=i+50&&(o=!0),this._domNode.classList.toggle("collapsed-find-widget",o),this._domNode.classList.toggle("narrow-find-widget",a),this._domNode.classList.toggle("reduced-find-widget",r),!a&&!o&&(this._domNode.style.maxWidth=`${i-28-n-15}px`),this._resized){this._findInput.inputBox.layout();let l=this._findInput.inputBox.element.clientWidth;l>0&&(this._replaceInput.width=l)}else this._isReplaceVisible&&(this._replaceInput.width=Kn(this._findInput.domNode))}_getHeight(){let e=0;return e+=4,e+=this._findInput.inputBox.height+2,this._isReplaceVisible&&(e+=4,e+=this._replaceInput.inputBox.height+2),e+=4,e}_tryUpdateHeight(){let e=this._getHeight();return this._cachedHeight!==null&&this._cachedHeight===e?!1:(this._cachedHeight=e,this._domNode.style.height=`${e}px`,!0)}focusFindInput(){this._findInput.select(),this._findInput.focus()}focusReplaceInput(){this._replaceInput.select(),this._replaceInput.focus()}highlightFindOptions(){this._findInput.highlightFindOptions()}_updateSearchScope(){if(!!this._codeEditor.hasModel()&&this._toggleSelectionFind.checked){let e=this._codeEditor.getSelections();e.map(t=>{t.endColumn===1&&t.endLineNumber>t.startLineNumber&&(t=t.setEndPosition(t.endLineNumber-1,this._codeEditor.getModel().getLineMaxColumn(t.endLineNumber-1)));let i=this._state.currentMatch;return t.startLineNumber!==t.endLineNumber&&!b.equalsRange(t,i)?t:null}).filter(t=>!!t),e.length&&this._state.change({searchScope:e},!0)}}_onFindInputMouseDown(e){e.middleButton&&e.stopPropagation()}_onFindInputKeyDown(e){if(e.equals(QT|3))if(this._keybindingService.dispatchEvent(e,e.target)){e.preventDefault();return}else{this._findInput.inputBox.insertAtCursor(`
`),e.preventDefault();return}if(e.equals(2)){this._isReplaceVisible?this._replaceInput.focus():this._findInput.focusOnCaseSensitive(),e.preventDefault();return}if(e.equals(2066)){this._codeEditor.focus(),e.preventDefault();return}if(e.equals(16))return eE(e,this._findInput.getValue(),this._findInput.domNode.querySelector("textarea"));if(e.equals(18))return tE(e,this._findInput.getValue(),this._findInput.domNode.querySelector("textarea"))}_onReplaceInputKeyDown(e){if(e.equals(QT|3))if(this._keybindingService.dispatchEvent(e,e.target)){e.preventDefault();return}else{fo&&ar&&!this._ctrlEnterReplaceAllWarningPrompted&&(this._notificationService.info(u("ctrlEnter.keybindingChanged","Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.")),this._ctrlEnterReplaceAllWarningPrompted=!0,this._storageService.store(JT,!0,0,0)),this._replaceInput.inputBox.insertAtCursor(`
`),e.preventDefault();return}if(e.equals(2)){this._findInput.focusOnCaseSensitive(),e.preventDefault();return}if(e.equals(1026)){this._findInput.focus(),e.preventDefault();return}if(e.equals(2066)){this._codeEditor.focus(),e.preventDefault();return}if(e.equals(16))return eE(e,this._replaceInput.inputBox.value,this._replaceInput.inputBox.element.querySelector("textarea"));if(e.equals(18))return tE(e,this._replaceInput.inputBox.value,this._replaceInput.inputBox.element.querySelector("textarea"))}getVerticalSashLeft(e){return 0}_keybindingLabelFor(e){let t=this._keybindingService.lookupKeybinding(e);return t?` (${t.getLabel()})`:""}_buildDomNode(){this._findInput=this._register(new qp(null,this._contextViewProvider,{width:lR,label:qD,placeholder:XD,appendCaseSensitiveLabel:this._keybindingLabelFor(ze.ToggleCaseSensitiveCommand),appendWholeWordsLabel:this._keybindingLabelFor(ze.ToggleWholeWordCommand),appendRegexLabel:this._keybindingLabelFor(ze.ToggleRegexCommand),validation:l=>{if(l.length===0||!this._findInput.getRegex())return null;try{return new RegExp(l,"gu"),null}catch(c){return{content:c.message}}},flexibleHeight:!0,flexibleWidth:!0,flexibleMaxHeight:118,showHistoryHint:()=>Gy(this._keybindingService)},this._contextKeyService,!0)),this._findInput.setRegex(!!this._state.isRegex),this._findInput.setCaseSensitive(!!this._state.matchCase),this._findInput.setWholeWords(!!this._state.wholeWord),this._register(this._findInput.onKeyDown(l=>this._onFindInputKeyDown(l))),this._register(this._findInput.inputBox.onDidChange(()=>{this._ignoreChangeEvent||this._state.change({searchString:this._findInput.getValue()},!0)})),this._register(this._findInput.onDidOptionChange(()=>{this._state.change({isRegex:this._findInput.getRegex(),wholeWord:this._findInput.getWholeWords(),matchCase:this._findInput.getCaseSensitive()},!0)})),this._register(this._findInput.onCaseSensitiveKeyDown(l=>{l.equals(1026)&&this._isReplaceVisible&&(this._replaceInput.focus(),l.preventDefault())})),this._register(this._findInput.onRegexKeyDown(l=>{l.equals(2)&&this._isReplaceVisible&&(this._replaceInput.focusOnPreserve(),l.preventDefault())})),this._register(this._findInput.inputBox.onDidHeightChange(l=>{this._tryUpdateHeight()&&this._showViewZone()})),Nl&&this._register(this._findInput.onMouseDown(l=>this._onFindInputMouseDown(l))),this._matchesCount=document.createElement("div"),this._matchesCount.className="matchesCount",this._updateMatchesCount(),this._prevBtn=this._register(new zs({label:YD+this._keybindingLabelFor(ze.PreviousMatchFindAction),icon:$D,onTrigger:()=>{this._codeEditor.getAction(ze.PreviousMatchFindAction).run().then(void 0,de)}})),this._nextBtn=this._register(new zs({label:ZD+this._keybindingLabelFor(ze.NextMatchFindAction),icon:KD,onTrigger:()=>{this._codeEditor.getAction(ze.NextMatchFindAction).run().then(void 0,de)}}));let i=document.createElement("div");i.className="find-part",i.appendChild(this._findInput.domNode);let n=document.createElement("div");n.className="find-actions",i.appendChild(n),n.appendChild(this._matchesCount),n.appendChild(this._prevBtn.domNode),n.appendChild(this._nextBtn.domNode),this._toggleSelectionFind=this._register(new Ko({icon:GD,title:JD+this._keybindingLabelFor(ze.ToggleSearchScopeCommand),isChecked:!1})),this._register(this._toggleSelectionFind.onChange(()=>{if(this._toggleSelectionFind.checked){if(this._codeEditor.hasModel()){let l=this._codeEditor.getSelections();l.map(c=>(c.endColumn===1&&c.endLineNumber>c.startLineNumber&&(c=c.setEndPosition(c.endLineNumber-1,this._codeEditor.getModel().getLineMaxColumn(c.endLineNumber-1))),c.isEmpty()?null:c)).filter(c=>!!c),l.length&&this._state.change({searchScope:l},!0)}}else this._state.change({searchScope:null},!0)})),n.appendChild(this._toggleSelectionFind.domNode),this._closeBtn=this._register(new zs({label:QD+this._keybindingLabelFor(ze.CloseFindWidgetCommand),icon:lu,onTrigger:()=>{this._state.change({isRevealed:!1,searchScope:null},!1)},onKeyDown:l=>{l.equals(2)&&this._isReplaceVisible&&(this._replaceBtn.isEnabled()?this._replaceBtn.focus():this._codeEditor.focus(),l.preventDefault())}})),n.appendChild(this._closeBtn.domNode),this._replaceInput=this._register(new Xp(null,void 0,{label:eR,placeholder:tR,appendPreserveCaseLabel:this._keybindingLabelFor(ze.TogglePreserveCaseCommand),history:[],flexibleHeight:!0,flexibleWidth:!0,flexibleMaxHeight:118,showHistoryHint:()=>Gy(this._keybindingService)},this._contextKeyService,!0)),this._replaceInput.setPreserveCase(!!this._state.preserveCase),this._register(this._replaceInput.onKeyDown(l=>this._onReplaceInputKeyDown(l))),this._register(this._replaceInput.inputBox.onDidChange(()=>{this._state.change({replaceString:this._replaceInput.inputBox.value},!1)})),this._register(this._replaceInput.inputBox.onDidHeightChange(l=>{this._isReplaceVisible&&this._tryUpdateHeight()&&this._showViewZone()})),this._register(this._replaceInput.onDidOptionChange(()=>{this._state.change({preserveCase:this._replaceInput.getPreserveCase()},!0)})),this._register(this._replaceInput.onPreserveCaseKeyDown(l=>{l.equals(2)&&(this._prevBtn.isEnabled()?this._prevBtn.focus():this._nextBtn.isEnabled()?this._nextBtn.focus():this._toggleSelectionFind.enabled?this._toggleSelectionFind.focus():this._closeBtn.isEnabled()&&this._closeBtn.focus(),l.preventDefault())})),this._replaceBtn=this._register(new zs({label:iR+this._keybindingLabelFor(ze.ReplaceOneAction),icon:jD,onTrigger:()=>{this._controller.replace()},onKeyDown:l=>{l.equals(1026)&&(this._closeBtn.focus(),l.preventDefault())}})),this._replaceAllBtn=this._register(new zs({label:nR+this._keybindingLabelFor(ze.ReplaceAllAction),icon:UD,onTrigger:()=>{this._controller.replaceAll()}}));let o=document.createElement("div");o.className="replace-part",o.appendChild(this._replaceInput.domNode);let r=document.createElement("div");r.className="replace-actions",o.appendChild(r),r.appendChild(this._replaceBtn.domNode),r.appendChild(this._replaceAllBtn.domNode),this._toggleReplaceBtn=this._register(new zs({label:oR,className:"codicon toggle left",onTrigger:()=>{this._state.change({isReplaceRevealed:!this._isReplaceVisible},!1),this._isReplaceVisible&&(this._replaceInput.width=Kn(this._findInput.domNode),this._replaceInput.inputBox.layout()),this._showViewZone()}})),this._toggleReplaceBtn.setExpanded(this._isReplaceVisible),this._domNode=document.createElement("div"),this._domNode.className="editor-widget find-widget",this._domNode.setAttribute("aria-hidden","true"),this._domNode.style.width=`${co}px`,this._domNode.appendChild(this._toggleReplaceBtn.domNode),this._domNode.appendChild(i),this._domNode.appendChild(o),this._resizeSash=new ko(this._domNode,this,{orientation:0,size:2}),this._resized=!1;let a=co;this._register(this._resizeSash.onDidStart(()=>{a=Kn(this._domNode)})),this._register(this._resizeSash.onDidChange(l=>{this._resized=!0;let c=a+l.startX-l.currentX;if(c<co)return;let d=parseFloat(ov(this._domNode).maxWidth)||0;c>d||(this._domNode.style.width=`${c}px`,this._isReplaceVisible&&(this._replaceInput.width=Kn(this._findInput.domNode)),this._findInput.inputBox.layout(),this._tryUpdateHeight())})),this._register(this._resizeSash.onDidReset(()=>{let l=Kn(this._domNode);if(l<co)return;let c=co;if(!this._resized||l===co){let d=this._codeEditor.getLayoutInfo();c=d.width-28-d.minimap.minimapWidth-15,this._resized=!0}this._domNode.style.width=`${c}px`,this._isReplaceVisible&&(this._replaceInput.width=Kn(this._findInput.domNode)),this._findInput.inputBox.layout()}))}updateAccessibilitySupport(){let e=this._codeEditor.getOption(2);this._findInput.setFocusInputOnOptionClick(e!==2)}};pl.ID="editor.contrib.findWidget";var zs=class extends Ti{constructor(e){super();this._opts=e;let t="button";this._opts.className&&(t=t+" "+this._opts.className),this._opts.icon&&(t=t+" "+ot.asClassName(this._opts.icon)),this._domNode=document.createElement("div"),this._domNode.title=this._opts.label,this._domNode.tabIndex=0,this._domNode.className=t,this._domNode.setAttribute("role","button"),this._domNode.setAttribute("aria-label",this._opts.label),this.onclick(this._domNode,i=>{this._opts.onTrigger(),i.preventDefault()}),this.onkeydown(this._domNode,i=>{if(i.equals(10)||i.equals(3)){this._opts.onTrigger(),i.preventDefault();return}this._opts.onKeyDown&&this._opts.onKeyDown(i)})}get domNode(){return this._domNode}isEnabled(){return this._domNode.tabIndex>=0}focus(){this._domNode.focus()}setEnabled(e){this._domNode.classList.toggle("disabled",!e),this._domNode.setAttribute("aria-disabled",String(!e)),this._domNode.tabIndex=e?0:-1}setExpanded(e){this._domNode.setAttribute("aria-expanded",String(!!e)),e?(this._domNode.classList.remove(...ot.asClassNameArray(XT)),this._domNode.classList.add(...ot.asClassNameArray(YT))):(this._domNode.classList.remove(...ot.asClassNameArray(YT)),this._domNode.classList.add(...ot.asClassNameArray(XT)))}};Me((s,e)=>{let t=(f,v)=>{v&&e.addRule(`.monaco-editor ${f} { background-color: ${v}; }`)};t(".findMatch",s.getColor(Hv)),t(".currentFindMatch",s.getColor(Ov)),t(".findScope",s.getColor(Wv));let i=s.getColor(cn);t(".find-widget",i);let n=s.getColor(yr);n&&e.addRule(`.monaco-editor .find-widget { box-shadow: 0 0 8px 2px ${n}; }`);let o=s.getColor(Vv);o&&e.addRule(`.monaco-editor .findMatch { border: 1px ${s.type==="hc"?"dotted":"solid"} ${o}; box-sizing: border-box; }`);let r=s.getColor(Bv);r&&e.addRule(`.monaco-editor .currentFindMatch { border: 2px solid ${r}; padding: 1px; box-sizing: border-box; }`);let a=s.getColor(Gv);a&&e.addRule(`.monaco-editor .findScope { border: 1px ${s.type==="hc"?"dashed":"solid"} ${a}; }`);let l=s.getColor(dn);l&&e.addRule(`.monaco-editor .find-widget { border: 1px solid ${l}; }`);let c=s.getColor(Ta);c&&e.addRule(`.monaco-editor .find-widget { color: ${c}; }`);let d=s.getColor(Sv);d&&e.addRule(`.monaco-editor .find-widget.no-results .matchesCount { color: ${d}; }`);let h=s.getColor(Fv);if(h)e.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${h}; }`);else{let f=s.getColor(Ea);f&&e.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${f}; }`)}let p=s.getColor(ex);p&&e.addRule(`
		.monaco-editor .find-widget .button:not(.disabled):hover,
		.monaco-editor .find-widget .codicon-find-selection:hover {
			background-color: ${p} !important;
		}
	`);let m=s.getColor(vv);m&&e.addRule(`.monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: ${m}; }`)});Q();ri();Ee();Ki();Ne();var iE=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},ho=function(s,e){return function(t,i){e(t,i,s)}},Os=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},cR=524288;function jy(s,e="single",t=!1){if(!s.hasModel())return null;let i=s.getSelection();if(e==="single"&&i.startLineNumber===i.endLineNumber||e==="multiple"){if(i.isEmpty()){let n=s.getConfiguredWordAtPosition(i.getStartPosition());if(n&&t===!1)return n.word}else if(s.getModel().getValueLengthInRange(i)<cR)return s.getModel().getValueInRange(i)}return null}var vi=class nE extends z{constructor(e,t,i,n){super();this._editor=e,this._findWidgetVisible=$o.bindTo(t),this._contextKeyService=t,this._storageService=i,this._clipboardService=n,this._updateHistoryDelayer=new Tn(500),this._state=this._register(new Wy),this.loadQueryState(),this._register(this._state.onFindReplaceStateChange(o=>this._onStateChanged(o))),this._model=null,this._register(this._editor.onDidChangeModel(()=>{let o=this._editor.getModel()&&this._state.isRevealed;this.disposeModel(),this._state.change({searchScope:null,matchCase:this._storageService.getBoolean("editor.matchCase",1,!1),wholeWord:this._storageService.getBoolean("editor.wholeWord",1,!1),isRegex:this._storageService.getBoolean("editor.isRegex",1,!1),preserveCase:this._storageService.getBoolean("editor.preserveCase",1,!1)},!1),o&&this._start({forceRevealReplace:!1,seedSearchStringFromSelection:"none",seedSearchStringFromNonEmptySelection:!1,seedSearchStringFromGlobalClipboard:!1,shouldFocus:0,shouldAnimate:!1,updateSearchScope:!1,loop:this._editor.getOption(35).loop})}))}get editor(){return this._editor}static get(e){return e.getContribution(nE.ID)}dispose(){this.disposeModel(),super.dispose()}disposeModel(){this._model&&(this._model.dispose(),this._model=null)}_onStateChanged(e){this.saveQueryState(e),e.isRevealed&&(this._state.isRevealed?this._findWidgetVisible.set(!0):(this._findWidgetVisible.reset(),this.disposeModel())),e.searchString&&this.setGlobalBufferTerm(this._state.searchString)}saveQueryState(e){e.isRegex&&this._storageService.store("editor.isRegex",this._state.actualIsRegex,1,0),e.wholeWord&&this._storageService.store("editor.wholeWord",this._state.actualWholeWord,1,0),e.matchCase&&this._storageService.store("editor.matchCase",this._state.actualMatchCase,1,0),e.preserveCase&&this._storageService.store("editor.preserveCase",this._state.actualPreserveCase,1,0)}loadQueryState(){this._state.change({matchCase:this._storageService.getBoolean("editor.matchCase",1,this._state.matchCase),wholeWord:this._storageService.getBoolean("editor.wholeWord",1,this._state.wholeWord),isRegex:this._storageService.getBoolean("editor.isRegex",1,this._state.isRegex),preserveCase:this._storageService.getBoolean("editor.preserveCase",1,this._state.preserveCase)},!1)}isFindInputFocused(){return!!hl.getValue(this._contextKeyService)}getState(){return this._state}closeFindWidget(){this._state.change({isRevealed:!1,searchScope:null},!1),this._editor.focus()}toggleCaseSensitive(){this._state.change({matchCase:!this._state.matchCase},!1),this._state.isRevealed||this.highlightFindOptions()}toggleWholeWords(){this._state.change({wholeWord:!this._state.wholeWord},!1),this._state.isRevealed||this.highlightFindOptions()}toggleRegex(){this._state.change({isRegex:!this._state.isRegex},!1),this._state.isRevealed||this.highlightFindOptions()}togglePreserveCase(){this._state.change({preserveCase:!this._state.preserveCase},!1),this._state.isRevealed||this.highlightFindOptions()}toggleSearchScope(){if(this._state.searchScope)this._state.change({searchScope:null},!0);else if(this._editor.hasModel()){let e=this._editor.getSelections();e.map(t=>(t.endColumn===1&&t.endLineNumber>t.startLineNumber&&(t=t.setEndPosition(t.endLineNumber-1,this._editor.getModel().getLineMaxColumn(t.endLineNumber-1))),t.isEmpty()?null:t)).filter(t=>!!t),e.length&&this._state.change({searchScope:e},!0)}}setSearchString(e){this._state.isRegex&&(e=So(e)),this._state.change({searchString:e},!1)}highlightFindOptions(e=!1){}_start(e,t){return Os(this,void 0,void 0,function*(){if(this.disposeModel(),!this._editor.hasModel())return;let i=Object.assign(Object.assign({},t),{isRevealed:!0});if(e.seedSearchStringFromSelection==="single"){let n=jy(this._editor,e.seedSearchStringFromSelection,e.seedSearchStringFromNonEmptySelection);n&&(this._state.isRegex?i.searchString=So(n):i.searchString=n)}else if(e.seedSearchStringFromSelection==="multiple"&&!e.updateSearchScope){let n=jy(this._editor,e.seedSearchStringFromSelection);n&&(i.searchString=n)}if(!i.searchString&&e.seedSearchStringFromGlobalClipboard){let n=yield this.getGlobalBufferTerm();if(!this._editor.hasModel())return;n&&(i.searchString=n)}if(e.forceRevealReplace||i.isReplaceRevealed?i.isReplaceRevealed=!0:this._findWidgetVisible.get()||(i.isReplaceRevealed=!1),e.updateSearchScope){let n=this._editor.getSelections();n.some(o=>!o.isEmpty())&&(i.searchScope=n)}i.loop=e.loop,this._state.change(i,!1),this._model||(this._model=new Ns(this._editor,this._state))})}start(e,t){return this._start(e,t)}moveToNextMatch(){return this._model?(this._model.moveToNextMatch(),!0):!1}moveToPrevMatch(){return this._model?(this._model.moveToPrevMatch(),!0):!1}replace(){return this._model?(this._model.replace(),!0):!1}replaceAll(){return this._model?(this._model.replaceAll(),!0):!1}selectAllMatches(){return this._model?(this._model.selectAllMatches(),this._editor.focus(),!0):!1}getGlobalBufferTerm(){return Os(this,void 0,void 0,function*(){return this._editor.getOption(35).globalFindClipboard&&this._editor.hasModel()&&!this._editor.getModel().isTooLargeForSyncing()?this._clipboardService.readFindText():""})}setGlobalBufferTerm(e){this._editor.getOption(35).globalFindClipboard&&this._editor.hasModel()&&!this._editor.getModel().isTooLargeForSyncing()&&this._clipboardService.writeFindText(e)}};vi.ID="editor.contrib.findController";vi=iE([ho(1,ie),ho(2,li),ho(3,cs)],vi);var Uy=class extends vi{constructor(e,t,i,n,o,r,a,l){super(e,i,a,l);this._contextViewService=t,this._keybindingService=n,this._themeService=o,this._notificationService=r,this._widget=null,this._findOptionsWidget=null}_start(e,t){let i=Object.create(null,{_start:{get:()=>super._start}});return Os(this,void 0,void 0,function*(){this._widget||this._createFindWidget();let n=this._editor.getSelection(),o=!1;switch(this._editor.getOption(35).autoFindInSelection){case"always":o=!0;break;case"never":o=!1;break;case"multiline":{o=!!n&&n.startLineNumber!==n.endLineNumber;break}default:break}e.updateSearchScope=e.updateSearchScope||o,yield i._start.call(this,e,t),this._widget&&(e.shouldFocus===2?this._widget.focusReplaceInput():e.shouldFocus===1&&this._widget.focusFindInput())})}highlightFindOptions(e=!1){this._widget||this._createFindWidget(),this._state.isRevealed&&!e?this._widget.highlightFindOptions():this._findOptionsWidget.highlightFindOptions()}_createFindWidget(){this._widget=this._register(new pl(this._editor,this,this._state,this._contextViewService,this._keybindingService,this._contextKeyService,this._themeService,this._storageService,this._notificationService)),this._findOptionsWidget=this._register(new ul(this._editor,this._state,this._keybindingService,this._themeService))}};Uy=iE([ho(1,cu),ho(2,ie),ho(3,rt),ho(4,Nt),ho(5,Ze),ho(6,li),ho(7,cs)],Uy);var hR=qm(new Km({id:ze.StartFindAction,label:u("startFindAction","Find"),alias:"Find",precondition:O.or(S.focus,O.has("editorIsOpen")),kbOpts:{kbExpr:null,primary:2084,weight:100},menuOpts:{menuId:se.MenubarEditMenu,group:"3_find",title:u({key:"miFind",comment:["&& denotes a mnemonic"]},"&&Find"),order:1}}));hR.addImplementation(0,(s,e,t)=>{let i=vi.get(e);return i?i.start({forceRevealReplace:!1,seedSearchStringFromSelection:e.getOption(35).seedSearchStringFromSelection!=="never"?"single":"none",seedSearchStringFromNonEmptySelection:e.getOption(35).seedSearchStringFromSelection==="selection",seedSearchStringFromGlobalClipboard:e.getOption(35).globalFindClipboard,shouldFocus:1,shouldAnimate:!0,updateSearchScope:!1,loop:e.getOption(35).loop}):!1});var uR={description:"Open a new In-Editor Find Widget.",args:[{name:"Open a new In-Editor Find Widget args",schema:{properties:{searchString:{type:"string"},replaceString:{type:"string"},regex:{type:"boolean"},regexOverride:{type:"number",description:u("actions.find.isRegexOverride",`Overrides "Use Regular Expression" flag.
The flag will not be saved for the future.
0: Do Nothing
1: True
2: False`)},wholeWord:{type:"boolean"},wholeWordOverride:{type:"number",description:u("actions.find.wholeWordOverride",`Overrides "Match Whole Word" flag.
The flag will not be saved for the future.
0: Do Nothing
1: True
2: False`)},matchCase:{type:"boolean"},matchCaseOverride:{type:"number",description:u("actions.find.matchCaseOverride",`Overrides "Math Case" flag.
The flag will not be saved for the future.
0: Do Nothing
1: True
2: False`)},preserveCase:{type:"boolean"},preserveCaseOverride:{type:"number",description:u("actions.find.preserveCaseOverride",`Overrides "Preserve Case" flag.
The flag will not be saved for the future.
0: Do Nothing
1: True
2: False`)},findInSelection:{type:"boolean"}}}}]},oE=class extends F{constructor(){super({id:ze.StartFindWithArgs,label:u("startFindWithArgsAction","Find With Arguments"),alias:"Find With Arguments",precondition:void 0,kbOpts:{kbExpr:null,primary:0,weight:100},description:uR})}run(e,t,i){return Os(this,void 0,void 0,function*(){let n=vi.get(t);if(n){let o=i?{searchString:i.searchString,replaceString:i.replaceString,isReplaceRevealed:i.replaceString!==void 0,isRegex:i.isRegex,wholeWord:i.matchWholeWord,matchCase:i.isCaseSensitive,preserveCase:i.preserveCase}:{};yield n.start({forceRevealReplace:!1,seedSearchStringFromSelection:n.getState().searchString.length===0&&t.getOption(35).seedSearchStringFromSelection!=="never"?"single":"none",seedSearchStringFromNonEmptySelection:t.getOption(35).seedSearchStringFromSelection==="selection",seedSearchStringFromGlobalClipboard:!0,shouldFocus:1,shouldAnimate:!0,updateSearchScope:(i==null?void 0:i.findInSelection)||!1,loop:t.getOption(35).loop},o),n.setGlobalBufferTerm(n.getState().searchString)}})}},rE=class extends F{constructor(){super({id:ze.StartFindWithSelection,label:u("startFindWithSelectionAction","Find With Selection"),alias:"Find With Selection",precondition:void 0,kbOpts:{kbExpr:null,primary:0,mac:{primary:2083},weight:100}})}run(e,t){return Os(this,void 0,void 0,function*(){let i=vi.get(t);i&&(yield i.start({forceRevealReplace:!1,seedSearchStringFromSelection:"multiple",seedSearchStringFromNonEmptySelection:!1,seedSearchStringFromGlobalClipboard:!1,shouldFocus:0,shouldAnimate:!0,updateSearchScope:!1,loop:t.getOption(35).loop}),i.setGlobalBufferTerm(i.getState().searchString))})}},$y=class extends F{run(e,t){return Os(this,void 0,void 0,function*(){let i=vi.get(t);i&&!this._run(i)&&(yield i.start({forceRevealReplace:!1,seedSearchStringFromSelection:i.getState().searchString.length===0&&t.getOption(35).seedSearchStringFromSelection!=="never"?"single":"none",seedSearchStringFromNonEmptySelection:t.getOption(35).seedSearchStringFromSelection==="selection",seedSearchStringFromGlobalClipboard:!0,shouldFocus:0,shouldAnimate:!0,updateSearchScope:!1,loop:t.getOption(35).loop}),this._run(i))})}},sE=class extends $y{constructor(){super({id:ze.NextMatchFindAction,label:u("findNextMatchAction","Find Next"),alias:"Find Next",precondition:void 0,kbOpts:[{kbExpr:S.focus,primary:61,mac:{primary:2085,secondary:[61]},weight:100},{kbExpr:O.and(S.focus,hl),primary:3,weight:100}]})}_run(e){return e.moveToNextMatch()?(e.editor.pushUndoStop(),!0):!1}},aE=class extends $y{constructor(){super({id:ze.PreviousMatchFindAction,label:u("findPreviousMatchAction","Find Previous"),alias:"Find Previous",precondition:void 0,kbOpts:[{kbExpr:S.focus,primary:1085,mac:{primary:3109,secondary:[1085]},weight:100},{kbExpr:O.and(S.focus,hl),primary:1027,weight:100}]})}_run(e){return e.moveToPrevMatch()}},Ky=class extends F{run(e,t){return Os(this,void 0,void 0,function*(){let i=vi.get(t);if(!i)return;let n=t.getOption(35).seedSearchStringFromSelection==="selection",o=null;t.getOption(35).seedSearchStringFromSelection!=="never"&&(o=jy(t,"single",n)),o&&i.setSearchString(o),this._run(i)||(yield i.start({forceRevealReplace:!1,seedSearchStringFromSelection:t.getOption(35).seedSearchStringFromSelection!=="never"?"single":"none",seedSearchStringFromNonEmptySelection:n,seedSearchStringFromGlobalClipboard:!1,shouldFocus:0,shouldAnimate:!0,updateSearchScope:!1,loop:t.getOption(35).loop}),this._run(i))})}},lE=class extends Ky{constructor(){super({id:ze.NextSelectionMatchFindAction,label:u("nextSelectionMatchFindAction","Find Next Selection"),alias:"Find Next Selection",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:2109,weight:100}})}_run(e){return e.moveToNextMatch()}},dE=class extends Ky{constructor(){super({id:ze.PreviousSelectionMatchFindAction,label:u("previousSelectionMatchFindAction","Find Previous Selection"),alias:"Find Previous Selection",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:3133,weight:100}})}_run(e){return e.moveToPrevMatch()}},pR=qm(new Km({id:ze.StartFindReplaceAction,label:u("startReplace","Replace"),alias:"Replace",precondition:O.or(S.focus,O.has("editorIsOpen")),kbOpts:{kbExpr:null,primary:2086,mac:{primary:2596},weight:100},menuOpts:{menuId:se.MenubarEditMenu,group:"3_find",title:u({key:"miReplace",comment:["&& denotes a mnemonic"]},"&&Replace"),order:2}}));pR.addImplementation(0,(s,e,t)=>{if(!e.hasModel()||e.getOption(81))return!1;let i=vi.get(e);if(!i)return!1;let n=e.getSelection(),o=i.isFindInputFocused(),r=!n.isEmpty()&&n.startLineNumber===n.endLineNumber&&e.getOption(35).seedSearchStringFromSelection!=="never"&&!o,a=o||r?2:1;return i.start({forceRevealReplace:!0,seedSearchStringFromSelection:r?"single":"none",seedSearchStringFromNonEmptySelection:e.getOption(35).seedSearchStringFromSelection==="selection",seedSearchStringFromGlobalClipboard:e.getOption(35).seedSearchStringFromSelection!=="never",shouldFocus:a,shouldAnimate:!0,updateSearchScope:!1,loop:e.getOption(35).loop})});J(vi.ID,Uy);I(oE);I(rE);I(sE);I(aE);I(lE);I(dE);var Wn=ct.bindToContribution(vi.get);$(new Wn({id:ze.CloseFindWidgetCommand,precondition:$o,handler:s=>s.closeFindWidget(),kbOpts:{weight:100+5,kbExpr:O.and(S.focus,O.not("isComposing")),primary:9,secondary:[1033]}}));$(new Wn({id:ze.ToggleCaseSensitiveCommand,precondition:void 0,handler:s=>s.toggleCaseSensitive(),kbOpts:{weight:100+5,kbExpr:S.focus,primary:yc.primary,mac:yc.mac,win:yc.win,linux:yc.linux}}));$(new Wn({id:ze.ToggleWholeWordCommand,precondition:void 0,handler:s=>s.toggleWholeWords(),kbOpts:{weight:100+5,kbExpr:S.focus,primary:bc.primary,mac:bc.mac,win:bc.win,linux:bc.linux}}));$(new Wn({id:ze.ToggleRegexCommand,precondition:void 0,handler:s=>s.toggleRegex(),kbOpts:{weight:100+5,kbExpr:S.focus,primary:Sc.primary,mac:Sc.mac,win:Sc.win,linux:Sc.linux}}));$(new Wn({id:ze.ToggleSearchScopeCommand,precondition:void 0,handler:s=>s.toggleSearchScope(),kbOpts:{weight:100+5,kbExpr:S.focus,primary:vc.primary,mac:vc.mac,win:vc.win,linux:vc.linux}}));$(new Wn({id:ze.TogglePreserveCaseCommand,precondition:void 0,handler:s=>s.togglePreserveCase(),kbOpts:{weight:100+5,kbExpr:S.focus,primary:xc.primary,mac:xc.mac,win:xc.win,linux:xc.linux}}));$(new Wn({id:ze.ReplaceOneAction,precondition:$o,handler:s=>s.replace(),kbOpts:{weight:100+5,kbExpr:S.focus,primary:3094}}));$(new Wn({id:ze.ReplaceOneAction,precondition:$o,handler:s=>s.replace(),kbOpts:{weight:100+5,kbExpr:O.and(S.focus,fc),primary:3}}));$(new Wn({id:ze.ReplaceAllAction,precondition:$o,handler:s=>s.replaceAll(),kbOpts:{weight:100+5,kbExpr:S.focus,primary:2563}}));$(new Wn({id:ze.ReplaceAllAction,precondition:$o,handler:s=>s.replaceAll(),kbOpts:{weight:100+5,kbExpr:O.and(S.focus,fc),primary:void 0,mac:{primary:2051}}}));$(new Wn({id:ze.SelectAllMatchesAction,precondition:$o,handler:s=>s.selectAllMatches(),kbOpts:{weight:100+5,kbExpr:S.focus,primary:515}}));ke();Le();yo();B();Ye();qt();ue();He();Re();sn();De();var qo=class{constructor(e,t,i){if(e.length!==t.length||e.length>65535)throw new Error("invalid startIndexes or endIndexes size");this._startIndexes=e,this._endIndexes=t,this._collapseStates=new Uint32Array(Math.ceil(e.length/32)),this._types=i,this._parentsComputed=!1}ensureParentIndices(){if(!this._parentsComputed){this._parentsComputed=!0;let e=[],t=(i,n)=>{let o=e[e.length-1];return this.getStartLineNumber(o)<=i&&this.getEndLineNumber(o)>=n};for(let i=0,n=this._startIndexes.length;i<n;i++){let o=this._startIndexes[i],r=this._endIndexes[i];if(o>16777215||r>16777215)throw new Error("startLineNumber or endLineNumber must not exceed "+16777215);for(;e.length>0&&!t(o,r);)e.pop();let a=e.length>0?e[e.length-1]:-1;e.push(i),this._startIndexes[i]=o+((a&255)<<24),this._endIndexes[i]=r+((a&65280)<<16)}}}get length(){return this._startIndexes.length}getStartLineNumber(e){return this._startIndexes[e]&16777215}getEndLineNumber(e){return this._endIndexes[e]&16777215}getType(e){return this._types?this._types[e]:void 0}hasTypes(){return!!this._types}isCollapsed(e){let t=e/32|0,i=e%32;return(this._collapseStates[t]&1<<i)!==0}setCollapsed(e,t){let i=e/32|0,n=e%32,o=this._collapseStates[i];t?this._collapseStates[i]=o|1<<n:this._collapseStates[i]=o&~(1<<n)}setCollapsedAllOfType(e,t){let i=!1;if(this._types)for(let n=0;n<this._types.length;n++)this._types[n]===e&&(this.setCollapsed(n,t),i=!0);return i}toRegion(e){return new cE(this,e)}getParentIndex(e){this.ensureParentIndices();let t=((this._startIndexes[e]&4278190080)>>>24)+((this._endIndexes[e]&4278190080)>>>16);return t===65535?-1:t}contains(e,t){return this.getStartLineNumber(e)<=t&&this.getEndLineNumber(e)>=t}findIndex(e){let t=0,i=this._startIndexes.length;if(i===0)return-1;for(;t<i;){let n=Math.floor((t+i)/2);e<this.getStartLineNumber(n)?i=n:t=n+1}return t-1}findRange(e){let t=this.findIndex(e);if(t>=0){if(this.getEndLineNumber(t)>=e)return t;for(t=this.getParentIndex(t);t!==-1;){if(this.contains(t,e))return t;t=this.getParentIndex(t)}}return-1}toString(){let e=[];for(let t=0;t<this.length;t++)e[t]=`[${this.isCollapsed(t)?"+":"-"}] ${this.getStartLineNumber(t)}/${this.getEndLineNumber(t)}`;return e.join(", ")}},cE=class{constructor(e,t){this.ranges=e,this.index=t}get startLineNumber(){return this.ranges.getStartLineNumber(this.index)}get endLineNumber(){return this.ranges.getEndLineNumber(this.index)}get regionIndex(){return this.index}get parentIndex(){return this.ranges.getParentIndex(this.index)}get isCollapsed(){return this.ranges.isCollapsed(this.index)}containedBy(e){return e.startLineNumber<=this.startLineNumber&&e.endLineNumber>=this.endLineNumber}containsLine(e){return this.startLineNumber<=e&&e<=this.endLineNumber}};var qy=class{constructor(e,t){this._updateEventEmitter=new G,this.onDidChange=this._updateEventEmitter.event,this._textModel=e,this._decorationProvider=t,this._regions=new qo(new Uint32Array(0),new Uint32Array(0)),this._editorDecorationIds=[],this._isInitialized=!1}get regions(){return this._regions}get textModel(){return this._textModel}get isInitialized(){return this._isInitialized}toggleCollapseState(e){if(!e.length)return;e=e.sort((i,n)=>i.regionIndex-n.regionIndex);let t={};this._decorationProvider.changeDecorations(i=>{let n=0,o=-1,r=-1,a=l=>{for(;n<l;){let c=this._regions.getEndLineNumber(n),d=this._regions.isCollapsed(n);c<=o&&i.changeDecorationOptions(this._editorDecorationIds[n],this._decorationProvider.getDecorationOption(d,c<=r)),d&&c>r&&(r=c),n++}};for(let l of e){let c=l.regionIndex,d=this._editorDecorationIds[c];if(d&&!t[d]){t[d]=!0,a(c);let h=!this._regions.isCollapsed(c);this._regions.setCollapsed(c,h),o=Math.max(o,this._regions.getEndLineNumber(c))}}a(this._regions.length)}),this._updateEventEmitter.fire({model:this,collapseStateChanged:e})}update(e,t=[]){let i=[],n=(h,p)=>{for(let m of t)if(h<m&&m<=p)return!0;return!1},o=-1,r=(h,p)=>{let m=e.getStartLineNumber(h),f=e.getEndLineNumber(h);p||(p=e.isCollapsed(h)),p&&n(m,f)&&(p=!1),e.setCollapsed(h,p);let v=this._textModel.getLineMaxColumn(m),_={startLineNumber:m,startColumn:Math.max(v-1,1),endLineNumber:m,endColumn:v};i.push({range:_,options:this._decorationProvider.getDecorationOption(p,f<=o)}),p&&f>o&&(o=f)},a=0,l=()=>{for(;a<this._regions.length;){let h=this._regions.isCollapsed(a);if(a++,h)return a-1}return-1},c=0,d=l();for(;d!==-1&&c<e.length;){let h=this._textModel.getDecorationRange(this._editorDecorationIds[d]);if(h){let p=h.startLineNumber;if(h.startColumn===Math.max(h.endColumn-1,1)&&this._textModel.getLineMaxColumn(p)===h.endColumn)for(;c<e.length;){let m=e.getStartLineNumber(c);if(p>=m)r(c,p===m),c++;else break}}d=l()}for(;c<e.length;)r(c,!1),c++;this._editorDecorationIds=this._decorationProvider.deltaDecorations(this._editorDecorationIds,i),this._regions=e,this._isInitialized=!0,this._updateEventEmitter.fire({model:this})}getMemento(){let e=[];for(let t=0;t<this._regions.length;t++)if(this._regions.isCollapsed(t)){let i=this._textModel.getDecorationRange(this._editorDecorationIds[t]);if(i){let n=i.startLineNumber,o=i.endLineNumber+this._regions.getEndLineNumber(t)-this._regions.getStartLineNumber(t);e.push({startLineNumber:n,endLineNumber:o})}}if(e.length>0)return e}applyMemento(e){if(!Array.isArray(e))return;let t=[];for(let i of e){let n=this.getRegionAtLine(i.startLineNumber);n&&!n.isCollapsed&&t.push(n)}this.toggleCollapseState(t)}dispose(){this._decorationProvider.deltaDecorations(this._editorDecorationIds,[])}getAllRegionsAtLine(e,t){let i=[];if(this._regions){let n=this._regions.findRange(e),o=1;for(;n>=0;){let r=this._regions.toRegion(n);(!t||t(r,o))&&i.push(r),o++,n=r.parentIndex}}return i}getRegionAtLine(e){if(this._regions){let t=this._regions.findRange(e);if(t>=0)return this._regions.toRegion(t)}return null}getRegionsInside(e,t){let i=[],n=e?e.regionIndex+1:0,o=e?e.endLineNumber:Number.MAX_VALUE;if(t&&t.length===2){let r=[];for(let a=n,l=this._regions.length;a<l;a++){let c=this._regions.toRegion(a);if(this._regions.getStartLineNumber(a)<o){for(;r.length>0&&!c.containedBy(r[r.length-1]);)r.pop();r.push(c),t(c,r.length)&&i.push(c)}else break}}else for(let r=n,a=this._regions.length;r<a;r++){let l=this._regions.toRegion(r);if(this._regions.getStartLineNumber(r)<o)(!t||t(l))&&i.push(l);else break}return i}};function hE(s,e,t){let i=[];for(let n of t){let o=s.getRegionAtLine(n);if(o){let r=!o.isCollapsed;if(i.push(o),e>1){let a=s.getRegionsInside(o,(l,c)=>l.isCollapsed!==r&&c<e);i.push(...a)}}}s.toggleCollapseState(i)}function Hs(s,e,t=Number.MAX_VALUE,i){let n=[];if(i&&i.length>0)for(let o of i){let r=s.getRegionAtLine(o);if(r&&(r.isCollapsed!==e&&n.push(r),t>1)){let a=s.getRegionsInside(r,(l,c)=>l.isCollapsed!==e&&c<t);n.push(...a)}}else{let o=s.getRegionsInside(null,(r,a)=>r.isCollapsed!==e&&a<t);n.push(...o)}s.toggleCollapseState(n)}function Xy(s,e,t,i){let n=[];for(let o of i){let r=s.getAllRegionsAtLine(o,(a,l)=>a.isCollapsed!==e&&l<=t);n.push(...r)}s.toggleCollapseState(n)}function uE(s,e,t){let i=[];for(let n of t){let o=s.getAllRegionsAtLine(n,r=>r.isCollapsed!==e);o.length>0&&i.push(o[0])}s.toggleCollapseState(i)}function pE(s,e,t,i){let n=(r,a)=>a===e&&r.isCollapsed!==t&&!i.some(l=>r.containsLine(l)),o=s.getRegionsInside(null,n);s.toggleCollapseState(o)}function Yy(s,e,t){let i=[];for(let r of t){let a=s.getAllRegionsAtLine(r,void 0);a.length>0&&i.push(a[0])}let n=r=>i.every(a=>!a.containedBy(r)&&!r.containedBy(a))&&r.isCollapsed!==e,o=s.getRegionsInside(null,n);s.toggleCollapseState(o)}function Zp(s,e,t){let i=s.textModel,n=s.regions,o=[];for(let r=n.length-1;r>=0;r--)if(t!==n.isCollapsed(r)){let a=n.getStartLineNumber(r);e.test(i.getLineContent(a))&&o.push(n.toRegion(r))}s.toggleCollapseState(o)}function Jp(s,e,t){let i=s.regions,n=[];for(let o=i.length-1;o>=0;o--)t!==i.isCollapsed(o)&&e===i.getType(o)&&n.push(i.toRegion(o));s.toggleCollapseState(n)}function mE(s,e){let t=null,i=e.getRegionAtLine(s);if(i!==null&&(t=i.startLineNumber,s===t)){let n=i.parentIndex;n!==-1?t=e.regions.getStartLineNumber(n):t=null}return t}function gE(s,e){let t=e.getRegionAtLine(s);if(t!==null&&t.startLineNumber===s){if(s!==t.startLineNumber)return t.startLineNumber;{let i=t.parentIndex,n=0;for(i!==-1&&(n=e.regions.getStartLineNumber(t.parentIndex));t!==null;)if(t.regionIndex>0){if(t=e.regions.toRegion(t.regionIndex-1),t.startLineNumber<=n)return null;if(t.parentIndex===i)return t.startLineNumber}else return null}}else if(e.regions.length>0)for(t=e.regions.toRegion(e.regions.length-1);t!==null;){if(t.startLineNumber<s)return t.startLineNumber;t.regionIndex>0?t=e.regions.toRegion(t.regionIndex-1):t=null}return null}function fE(s,e){let t=e.getRegionAtLine(s);if(t!==null&&t.startLineNumber===s){let i=t.parentIndex,n=0;if(i!==-1)n=e.regions.getEndLineNumber(t.parentIndex);else{if(e.regions.length===0)return null;n=e.regions.getEndLineNumber(e.regions.length-1)}for(;t!==null;)if(t.regionIndex<e.regions.length){if(t=e.regions.toRegion(t.regionIndex+1),t.startLineNumber>=n)return null;if(t.parentIndex===i)return t.startLineNumber}else return null}else if(e.regions.length>0)for(t=e.regions.toRegion(0);t!==null;){if(t.startLineNumber>s)return t.startLineNumber;t.regionIndex<e.regions.length?t=e.regions.toRegion(t.regionIndex+1):t=null}return null}St();De();ee();_P();var Zy=class{constructor(e){this._updateEventEmitter=new G,this._hasLineChanges=!1,this._foldingModel=e,this._foldingModelListener=e.onDidChange(t=>this.updateHiddenRanges()),this._hiddenRanges=[],e.regions.length&&this.updateHiddenRanges()}get onDidChange(){return this._updateEventEmitter.event}get hiddenRanges(){return this._hiddenRanges}notifyChangeModelContent(e){this._hiddenRanges.length&&!this._hasLineChanges&&(this._hasLineChanges=e.changes.some(t=>t.range.endLineNumber!==t.range.startLineNumber||vx(t.text)[0]!==0))}updateHiddenRanges(){let e=!1,t=[],i=0,n=0,o=Number.MAX_VALUE,r=-1,a=this._foldingModel.regions;for(;i<a.length;i++){if(!a.isCollapsed(i))continue;let l=a.getStartLineNumber(i)+1,c=a.getEndLineNumber(i);o<=l&&c<=r||(!e&&n<this._hiddenRanges.length&&this._hiddenRanges[n].startLineNumber===l&&this._hiddenRanges[n].endLineNumber===c?(t.push(this._hiddenRanges[n]),n++):(e=!0,t.push(new b(l,1,c,1))),o=l,r=c)}(this._hasLineChanges||e||n<this._hiddenRanges.length)&&this.applyHiddenRanges(t)}applyMemento(e){if(!Array.isArray(e)||e.length===0)return!1;let t=[];for(let i of e){if(!i.startLineNumber||!i.endLineNumber)return!1;t.push(new b(i.startLineNumber+1,1,i.endLineNumber,1))}return this.applyHiddenRanges(t),!0}getMemento(){return this._hiddenRanges.map(e=>({startLineNumber:e.startLineNumber-1,endLineNumber:e.endLineNumber}))}applyHiddenRanges(e){this._hiddenRanges=e,this._hasLineChanges=!1,this._updateEventEmitter.fire(e)}hasRanges(){return this._hiddenRanges.length>0}isHidden(e){return yE(this._hiddenRanges,e)!==null}adjustSelections(e){let t=!1,i=this._foldingModel.textModel,n=null,o=r=>((!n||!mR(r,n))&&(n=yE(this._hiddenRanges,r)),n?n.startLineNumber-1:null);for(let r=0,a=e.length;r<a;r++){let l=e[r],c=o(l.startLineNumber);c&&(l=l.setStartPosition(c,i.getLineMaxColumn(c)),t=!0);let d=o(l.endLineNumber);d&&(l=l.setEndPosition(d,i.getLineMaxColumn(d)),t=!0),e[r]=l}return t}dispose(){this.hiddenRanges.length>0&&(this._hiddenRanges=[],this._updateEventEmitter.fire(this._hiddenRanges)),this._foldingModelListener&&(this._foldingModelListener.dispose(),this._foldingModelListener=null)}};function mR(s,e){return s>=e.startLineNumber&&s<=e.endLineNumber}function yE(s,e){let t=lh(s,i=>e<i.startLineNumber)-1;return t>=0&&s[t].endLineNumber>=e?s[t]:null}Sx();var gR=5e3,fR="indent",Jy=class{constructor(e,t,i){this.editorModel=e,this.languageConfigurationService=t,this.maxFoldingRegions=i,this.id=fR}dispose(){}compute(e,t){let i=this.languageConfigurationService.getLanguageConfiguration(this.editorModel.getLanguageId()).foldingRules,n=i&&!!i.offSide,o=i&&i.markers;return Promise.resolve(yR(this.editorModel,n,o,this.maxFoldingRegions,t))}},bE=class{constructor(e,t){this._notifyTooManyRegions=t,this._startIndexes=[],this._endIndexes=[],this._indentOccurrences=[],this._length=0,this._foldingRangesLimit=e}insertFirst(e,t,i){if(e>16777215||t>16777215)return;let n=this._length;this._startIndexes[n]=e,this._endIndexes[n]=t,this._length++,i<1e3&&(this._indentOccurrences[i]=(this._indentOccurrences[i]||0)+1)}toIndentRanges(e){if(this._length<=this._foldingRangesLimit){let t=new Uint32Array(this._length),i=new Uint32Array(this._length);for(let n=this._length-1,o=0;n>=0;n--,o++)t[o]=this._startIndexes[n],i[o]=this._endIndexes[n];return new qo(t,i)}else{this._notifyTooManyRegions&&this._notifyTooManyRegions(this._foldingRangesLimit);let t=0,i=this._indentOccurrences.length;for(let a=0;a<this._indentOccurrences.length;a++){let l=this._indentOccurrences[a];if(l){if(l+t>this._foldingRangesLimit){i=a;break}t+=l}}let n=e.getOptions().tabSize,o=new Uint32Array(this._foldingRangesLimit),r=new Uint32Array(this._foldingRangesLimit);for(let a=this._length-1,l=0;a>=0;a--){let c=this._startIndexes[a],d=e.getLineContent(c),h=cd(d,n);(h<i||h===i&&t++<this._foldingRangesLimit)&&(o[l]=c,r[l]=this._endIndexes[a],l++)}return new qo(o,r)}}};function yR(s,e,t,i,n){let o=s.getOptions().tabSize;i=i!=null?i:gR;let r=new bE(i,n),a;t&&(a=new RegExp(`(${t.start.source})|(?:${t.end.source})`));let l=[],c=s.getLineCount()+1;l.push({indent:-1,endAbove:c,line:c});for(let d=s.getLineCount();d>0;d--){let h=s.getLineContent(d),p=cd(h,o),m=l[l.length-1];if(p===-1){e&&(m.endAbove=d);continue}let f;if(a&&(f=h.match(a)))if(f[1]){let v=l.length-1;for(;v>0&&l[v].indent!==-2;)v--;if(v>0){l.length=v+1,m=l[v],r.insertFirst(d,m.line,p),m.line=d,m.indent=p,m.endAbove=d;continue}}else{l.push({indent:-2,endAbove:d,line:d});continue}if(m.indent>p){do l.pop(),m=l[l.length-1];while(m.indent>p);let v=m.endAbove-1;v-d>=1&&r.insertFirst(d,v,p)}m.indent===p?m.endAbove=d:l.push({indent:p,endAbove:d,line:d})}return r.toIndentRanges(s)}Le();B();var bR={},Qy="syntax",eb=class{constructor(e,t,i,n){this.editorModel=e,this.providers=t,this.limit=n,this.id=Qy;for(let o of t)typeof o.onDidChange=="function"&&(this.disposables||(this.disposables=new R),this.disposables.add(o.onDidChange(i)))}compute(e,t){return SR(this.providers,this.editorModel,e).then(i=>i?tb(i,this.limit,t):null)}dispose(){var e;(e=this.disposables)===null||e===void 0||e.dispose()}};function SR(s,e,t){let i=null,n=s.map((o,r)=>Promise.resolve(o.provideFoldingRanges(e,bR,t)).then(a=>{if(!t.isCancellationRequested&&Array.isArray(a)){Array.isArray(i)||(i=[]);let l=e.getLineCount();for(let c of a)c.start>0&&c.end>c.start&&c.end<=l&&i.push({start:c.start,end:c.end,rank:r,kind:c.kind})}},Ue));return Promise.all(n).then(o=>i)}var SE=class{constructor(e,t){this._notifyTooManyRegions=t,this._startIndexes=[],this._endIndexes=[],this._nestingLevels=[],this._nestingLevelCounts=[],this._types=[],this._length=0,this._foldingRangesLimit=e}add(e,t,i,n){if(e>16777215||t>16777215)return;let o=this._length;this._startIndexes[o]=e,this._endIndexes[o]=t,this._nestingLevels[o]=n,this._types[o]=i,this._length++,n<30&&(this._nestingLevelCounts[n]=(this._nestingLevelCounts[n]||0)+1)}toIndentRanges(){if(this._length<=this._foldingRangesLimit){let e=new Uint32Array(this._length),t=new Uint32Array(this._length);for(let i=0;i<this._length;i++)e[i]=this._startIndexes[i],t[i]=this._endIndexes[i];return new qo(e,t,this._types)}else{this._notifyTooManyRegions&&this._notifyTooManyRegions(this._foldingRangesLimit);let e=0,t=this._nestingLevelCounts.length;for(let r=0;r<this._nestingLevelCounts.length;r++){let a=this._nestingLevelCounts[r];if(a){if(a+e>this._foldingRangesLimit){t=r;break}e+=a}}let i=new Uint32Array(this._foldingRangesLimit),n=new Uint32Array(this._foldingRangesLimit),o=[];for(let r=0,a=0;r<this._length;r++){let l=this._nestingLevels[r];(l<t||l===t&&e++<this._foldingRangesLimit)&&(i[a]=this._startIndexes[r],n[a]=this._endIndexes[r],o[a]=this._types[r],a++)}return new qo(i,n,o)}}};function tb(s,e,t){let i=s.sort((a,l)=>{let c=a.start-l.start;return c===0&&(c=a.rank-l.rank),c}),n=new SE(e,t),o,r=[];for(let a of i)if(!o)o=a,n.add(a.start,a.end,a.kind&&a.kind.value,r.length);else if(a.start>o.start)if(a.end<=o.end)r.push(o),o=a,n.add(a.start,a.end,a.kind&&a.kind.value,r.length);else{if(a.start>o.end){do o=r.pop();while(o&&a.start>o.end);o&&r.push(o),o=a}n.add(a.start,a.end,a.kind&&a.kind.value,r.length)}return n.toIndentRanges()}var ib="init",nb=class{constructor(e,t,i,n){if(this.editorModel=e,this.id=ib,t.length){let o=r=>({range:{startLineNumber:r.startLineNumber,startColumn:0,endLineNumber:r.endLineNumber,endColumn:e.getLineLength(r.endLineNumber)},options:{description:"folding-initializing-range-provider",stickiness:1}});this.decorationIds=e.deltaDecorations([],t.map(o)),this.timeout=setTimeout(i,n)}}dispose(){this.decorationIds&&(this.editorModel.deltaDecorations(this.decorationIds,[]),this.decorationIds=void 0),typeof this.timeout=="number"&&(clearTimeout(this.timeout),this.timeout=void 0)}compute(e){let t=[];if(this.decorationIds)for(let i of this.decorationIds){let n=this.editorModel.getDecorationRange(i);n&&t.push({start:n.startLineNumber,end:n.endLineNumber,rank:1})}return Promise.resolve(tb(t,Number.MAX_VALUE))}};Q();Ee();mt();Ne();xi();jt();Q();Ne();var Qp=Rt("folding-expanded",K.chevronDown,u("foldingExpandedIcon","Icon for expanded ranges in the editor glyph margin.")),em=Rt("folding-collapsed",K.chevronRight,u("foldingCollapsedIcon","Icon for collapsed ranges in the editor glyph margin.")),Vi=class{constructor(e){this.editor=e,this.autoHideFoldingControls=!0,this.showFoldingHighlights=!0}getDecorationOption(e,t){return t?Vi.HIDDEN_RANGE_DECORATION:e?this.showFoldingHighlights?Vi.COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION:Vi.COLLAPSED_VISUAL_DECORATION:this.autoHideFoldingControls?Vi.EXPANDED_AUTO_HIDE_VISUAL_DECORATION:Vi.EXPANDED_VISUAL_DECORATION}deltaDecorations(e,t){return this.editor.deltaDecorations(e,t)}changeDecorations(e){return this.editor.changeDecorations(e)}};Vi.COLLAPSED_VISUAL_DECORATION=xe.register({description:"folding-collapsed-visual-decoration",stickiness:1,afterContentClassName:"inline-folded",isWholeLine:!0,firstLineDecorationClassName:ot.asClassName(em)});Vi.COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION=xe.register({description:"folding-collapsed-highlighted-visual-decoration",stickiness:1,afterContentClassName:"inline-folded",className:"folded-background",isWholeLine:!0,firstLineDecorationClassName:ot.asClassName(em)});Vi.EXPANDED_AUTO_HIDE_VISUAL_DECORATION=xe.register({description:"folding-expanded-auto-hide-visual-decoration",stickiness:1,isWholeLine:!0,firstLineDecorationClassName:ot.asClassName(Qp)});Vi.EXPANDED_VISUAL_DECORATION=xe.register({description:"folding-expanded-visual-decoration",stickiness:1,isWholeLine:!0,firstLineDecorationClassName:"alwaysShowFoldIcons "+ot.asClassName(Qp)});Vi.HIDDEN_RANGE_DECORATION=xe.register({description:"folding-hidden-range-decoration",stickiness:1});md();Wl();var xR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},tm=function(s,e){return function(t,i){e(t,i,s)}},hi=new pe("foldingEnabled",!1),ml=class vE extends z{constructor(e,t,i,n,o){super();this.contextKeyService=t,this.languageConfigurationService=i,this._tooManyRegionsNotified=!1,this.localToDispose=this._register(new R),this.editor=e;let r=this.editor.getOptions();this._isEnabled=r.get(37),this._useFoldingProviders=r.get(38)!=="indentation",this._unfoldOnClickAfterEndOfLine=r.get(42),this._restoringViewState=!1,this._currentModelHasFoldedImports=!1,this._foldingImportsByDefault=r.get(40),this._maxFoldingRegions=r.get(41),this.updateDebounceInfo=o.for(Ih,"Folding",{min:200}),this.foldingModel=null,this.hiddenRangeModel=null,this.rangeProvider=null,this.foldingRegionPromise=null,this.foldingStateMemento=null,this.foldingModelPromise=null,this.updateScheduler=null,this.cursorChangedScheduler=null,this.mouseDownInfo=null,this.foldingDecorationProvider=new Vi(e),this.foldingDecorationProvider.autoHideFoldingControls=r.get(99)==="mouseover",this.foldingDecorationProvider.showFoldingHighlights=r.get(39),this.foldingEnabled=hi.bindTo(this.contextKeyService),this.foldingEnabled.set(this._isEnabled),this._notifyTooManyRegions=a=>{this._tooManyRegionsNotified||(n.notify({severity:Io.Warning,sticky:!0,message:u("maximum fold ranges",`The number of foldable regions is limited to a maximum of {0}. Increase configuration option ['Folding Maximum Regions'](command:workbench.action.openSettings?["editor.foldingMaximumRegions"]) to enable more.`,a)}),this._tooManyRegionsNotified=!0)},this._register(this.editor.onDidChangeModel(()=>this.onModelChanged())),this._register(this.editor.onDidChangeConfiguration(a=>{if(a.hasChanged(37)&&(this._isEnabled=this.editor.getOptions().get(37),this.foldingEnabled.set(this._isEnabled),this.onModelChanged()),a.hasChanged(41)&&(this._maxFoldingRegions=this.editor.getOptions().get(41),this._tooManyRegionsNotified=!1,this.onModelChanged()),a.hasChanged(99)||a.hasChanged(39)){let l=this.editor.getOptions();this.foldingDecorationProvider.autoHideFoldingControls=l.get(99)==="mouseover",this.foldingDecorationProvider.showFoldingHighlights=l.get(39),this.triggerFoldingModelChanged()}a.hasChanged(38)&&(this._useFoldingProviders=this.editor.getOptions().get(38)!=="indentation",this.onFoldingStrategyChanged()),a.hasChanged(42)&&(this._unfoldOnClickAfterEndOfLine=this.editor.getOptions().get(42)),a.hasChanged(40)&&(this._foldingImportsByDefault=this.editor.getOptions().get(40))})),this.onModelChanged()}static get(e){return e.getContribution(vE.ID)}saveViewState(){let e=this.editor.getModel();if(!e||!this._isEnabled||e.isTooLargeForTokenization())return{};if(this.foldingModel){let t=this.foldingModel.isInitialized?this.foldingModel.getMemento():this.hiddenRangeModel.getMemento(),i=this.rangeProvider?this.rangeProvider.id:void 0;return{collapsedRegions:t,lineCount:e.getLineCount(),provider:i,foldedImports:this._currentModelHasFoldedImports}}}restoreViewState(e){let t=this.editor.getModel();if(!t||!this._isEnabled||t.isTooLargeForTokenization()||!this.hiddenRangeModel||!e||e.lineCount!==t.getLineCount()||(this._currentModelHasFoldedImports=!!e.foldedImports,!e.collapsedRegions))return;(e.provider===Qy||e.provider===ib)&&(this.foldingStateMemento=e);let i=e.collapsedRegions;if(this.hiddenRangeModel.applyMemento(i)){let n=this.getFoldingModel();n&&n.then(o=>{if(o){this._restoringViewState=!0;try{o.applyMemento(i)}finally{this._restoringViewState=!1}}}).then(void 0,de)}}onModelChanged(){this.localToDispose.clear();let e=this.editor.getModel();!this._isEnabled||!e||e.isTooLargeForTokenization()||(this._currentModelHasFoldedImports=!1,this.foldingModel=new qy(e,this.foldingDecorationProvider),this.localToDispose.add(this.foldingModel),this.hiddenRangeModel=new Zy(this.foldingModel),this.localToDispose.add(this.hiddenRangeModel),this.localToDispose.add(this.hiddenRangeModel.onDidChange(t=>this.onHiddenRangesChanges(t))),this.updateScheduler=new Tn(this.updateDebounceInfo.get(e)),this.cursorChangedScheduler=new $e(()=>this.revealCursor(),200),this.localToDispose.add(this.cursorChangedScheduler),this.localToDispose.add(Ih.onDidChange(()=>this.onFoldingStrategyChanged())),this.localToDispose.add(this.editor.onDidChangeModelLanguageConfiguration(()=>this.onFoldingStrategyChanged())),this.localToDispose.add(this.editor.onDidChangeModelContent(t=>this.onDidChangeModelContent(t))),this.localToDispose.add(this.editor.onDidChangeCursorPosition(()=>this.onCursorPositionChanged())),this.localToDispose.add(this.editor.onMouseDown(t=>this.onEditorMouseDown(t))),this.localToDispose.add(this.editor.onMouseUp(t=>this.onEditorMouseUp(t))),this.localToDispose.add({dispose:()=>{this.foldingRegionPromise&&(this.foldingRegionPromise.cancel(),this.foldingRegionPromise=null),this.updateScheduler&&this.updateScheduler.cancel(),this.updateScheduler=null,this.foldingModel=null,this.foldingModelPromise=null,this.hiddenRangeModel=null,this.cursorChangedScheduler=null,this.foldingStateMemento=null,this.rangeProvider&&this.rangeProvider.dispose(),this.rangeProvider=null}}),this.triggerFoldingModelChanged())}onFoldingStrategyChanged(){this.rangeProvider&&this.rangeProvider.dispose(),this.rangeProvider=null,this.triggerFoldingModelChanged()}getRangeProvider(e){if(this.rangeProvider)return this.rangeProvider;if(this.rangeProvider=new Jy(e,this.languageConfigurationService,this._maxFoldingRegions),this._useFoldingProviders&&this.foldingModel){let t=Ih.ordered(this.foldingModel.textModel);if(t.length===0&&this.foldingStateMemento&&this.foldingStateMemento.collapsedRegions)return this.rangeProvider=new nb(e,this.foldingStateMemento.collapsedRegions,()=>{this.foldingStateMemento=null,this.onFoldingStrategyChanged()},3e4);t.length>0&&(this.rangeProvider=new eb(e,t,()=>this.triggerFoldingModelChanged(),this._maxFoldingRegions))}return this.foldingStateMemento=null,this.rangeProvider}getFoldingModel(){return this.foldingModelPromise}onDidChangeModelContent(e){var t;(t=this.hiddenRangeModel)===null||t===void 0||t.notifyChangeModelContent(e),this.triggerFoldingModelChanged()}triggerFoldingModelChanged(){this.updateScheduler&&(this.foldingRegionPromise&&(this.foldingRegionPromise.cancel(),this.foldingRegionPromise=null),this.foldingModelPromise=this.updateScheduler.trigger(()=>{let e=this.foldingModel;if(!e)return null;let t=new on(!0),i=this.getRangeProvider(e.textModel),n=this.foldingRegionPromise=Oe(o=>i.compute(o,this._notifyTooManyRegions));return n.then(o=>{if(o&&n===this.foldingRegionPromise){let r;if(this._foldingImportsByDefault&&!this._currentModelHasFoldedImports){let d=o.setCollapsedAllOfType(jl.Imports.value,!0);d&&(r=vr.capture(this.editor),this._currentModelHasFoldedImports=d)}let a=this.editor.getSelections(),l=a?a.map(d=>d.startLineNumber):[];e.update(o,l),r&&r.restore(this.editor);let c=this.updateDebounceInfo.update(e.textModel,t.elapsed());this.updateScheduler&&(this.updateScheduler.defaultDelay=c)}return e})}).then(void 0,e=>(de(e),null)))}onHiddenRangesChanges(e){if(this.hiddenRangeModel&&e.length&&!this._restoringViewState){let t=this.editor.getSelections();t&&this.hiddenRangeModel.adjustSelections(t)&&this.editor.setSelections(t)}this.editor.setHiddenAreas(e)}onCursorPositionChanged(){this.hiddenRangeModel&&this.hiddenRangeModel.hasRanges()&&this.cursorChangedScheduler.schedule()}revealCursor(){let e=this.getFoldingModel();!e||e.then(t=>{if(t){let i=this.editor.getSelections();if(i&&i.length>0){let n=[];for(let o of i){let r=o.selectionStartLineNumber;this.hiddenRangeModel&&this.hiddenRangeModel.isHidden(r)&&n.push(...t.getAllRegionsAtLine(r,a=>a.isCollapsed&&r>a.startLineNumber))}n.length&&(t.toggleCollapseState(n),this.reveal(i[0].getPosition()))}}}).then(void 0,de)}onEditorMouseDown(e){if(this.mouseDownInfo=null,!this.hiddenRangeModel||!e.target||!e.target.range||!e.event.leftButton&&!e.event.middleButton)return;let t=e.target.range,i=!1;switch(e.target.type){case 4:{let n=e.target.detail,o=e.target.element.offsetLeft;if(n.offsetX-o<5)return;i=!0;break}case 7:{if(this._unfoldOnClickAfterEndOfLine&&this.hiddenRangeModel.hasRanges()&&!e.target.detail.isAfterLines)break;return}case 6:{if(this.hiddenRangeModel.hasRanges()){let n=this.editor.getModel();if(n&&t.startColumn===n.getLineMaxColumn(t.startLineNumber))break}return}default:return}this.mouseDownInfo={lineNumber:t.startLineNumber,iconClicked:i}}onEditorMouseUp(e){let t=this.getFoldingModel();if(!t||!this.mouseDownInfo||!e.target)return;let i=this.mouseDownInfo.lineNumber,n=this.mouseDownInfo.iconClicked,o=e.target.range;if(!(!o||o.startLineNumber!==i)){if(n){if(e.target.type!==4)return}else{let r=this.editor.getModel();if(!r||o.startColumn!==r.getLineMaxColumn(i))return}t.then(r=>{if(r){let a=r.getRegionAtLine(i);if(a&&a.startLineNumber===i){let l=a.isCollapsed;if(n||l){let c=e.event.altKey,d=[];if(c){let h=m=>!m.containedBy(a)&&!a.containedBy(m),p=r.getRegionsInside(null,h);for(let m of p)m.isCollapsed&&d.push(m);d.length===0&&(d=p)}else{let h=e.event.middleButton||e.event.shiftKey;if(h)for(let p of r.getRegionsInside(a))p.isCollapsed===l&&d.push(p);(l||!h||d.length===0)&&d.push(a)}r.toggleCollapseState(d),this.reveal({lineNumber:i,column:1})}}}}).then(void 0,de)}}reveal(e){this.editor.revealPositionInCenterIfOutsideViewport(e,0)}};ml.ID="editor.contrib.folding";ml=xR([tm(1,ie),tm(2,Dt),tm(3,Ze),tm(4,Qn)],ml);var ui=class extends F{runEditorCommand(e,t,i){let n=e.get(Dt),o=ml.get(t);if(!o)return;let r=o.getFoldingModel();if(r)return this.reportTelemetry(e,t),r.then(a=>{if(a){this.invoke(o,a,t,i,n);let l=t.getSelection();l&&o.reveal(l.getStartPosition())}})}getSelectedLines(e){let t=e.getSelections();return t?t.map(i=>i.startLineNumber):[]}getLineNumbers(e,t){return e&&e.selectionLines?e.selectionLines.map(i=>i+1):this.getSelectedLines(t)}run(e,t){}};function xE(s){if(!zl(s)){if(!uh(s))return!1;let e=s;if(!zl(e.levels)&&!wm(e.levels)||!zl(e.direction)&&!hh(e.direction)||!zl(e.selectionLines)&&(!oS(e.selectionLines)||!e.selectionLines.every(wm)))return!1}return!0}var CE=class extends ui{constructor(){super({id:"editor.unfold",label:u("unfoldAction.label","Unfold"),alias:"Unfold",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:3161,mac:{primary:2649},weight:100},description:{description:"Unfold the content in the editor",args:[{name:"Unfold editor argument",description:`Property-value pairs that can be passed through this argument:
						* 'levels': Number of levels to unfold. If not set, defaults to 1.
						* 'direction': If 'up', unfold given number of levels up otherwise unfolds down.
						* 'selectionLines': The start lines (0-based) of the editor selections to apply the unfold action to. If not set, the active selection(s) will be used.
						`,constraint:xE,schema:{type:"object",properties:{levels:{type:"number",default:1},direction:{type:"string",enum:["up","down"],default:"down"},selectionLines:{type:"array",items:{type:"number"}}}}}]}})}invoke(e,t,i,n){let o=n&&n.levels||1,r=this.getLineNumbers(n,i);n&&n.direction==="up"?Xy(t,!1,o,r):Hs(t,!1,o,r)}},_E=class extends ui{constructor(){super({id:"editor.unfoldRecursively",label:u("unFoldRecursivelyAction.label","Unfold Recursively"),alias:"Unfold Recursively",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2137),weight:100}})}invoke(e,t,i,n){Hs(t,!1,Number.MAX_VALUE,this.getSelectedLines(i))}},wE=class extends ui{constructor(){super({id:"editor.fold",label:u("foldAction.label","Fold"),alias:"Fold",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:3159,mac:{primary:2647},weight:100},description:{description:"Fold the content in the editor",args:[{name:"Fold editor argument",description:`Property-value pairs that can be passed through this argument:
							* 'levels': Number of levels to fold.
							* 'direction': If 'up', folds given number of levels up otherwise folds down.
							* 'selectionLines': The start lines (0-based) of the editor selections to apply the fold action to. If not set, the active selection(s) will be used.
							If no levels or direction is set, folds the region at the locations or if already collapsed, the first uncollapsed parent instead.
						`,constraint:xE,schema:{type:"object",properties:{levels:{type:"number"},direction:{type:"string",enum:["up","down"]},selectionLines:{type:"array",items:{type:"number"}}}}}]}})}invoke(e,t,i,n){let o=this.getLineNumbers(n,i),r=n&&n.levels,a=n&&n.direction;typeof r!="number"&&typeof a!="string"?uE(t,!0,o):a==="up"?Xy(t,!0,r||1,o):Hs(t,!0,r||1,o)}},TE=class extends ui{constructor(){super({id:"editor.toggleFold",label:u("toggleFoldAction.label","Toggle Fold"),alias:"Toggle Fold",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2090),weight:100}})}invoke(e,t,i){let n=this.getSelectedLines(i);hE(t,1,n)}},EE=class extends ui{constructor(){super({id:"editor.foldRecursively",label:u("foldRecursivelyAction.label","Fold Recursively"),alias:"Fold Recursively",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2135),weight:100}})}invoke(e,t,i){let n=this.getSelectedLines(i);Hs(t,!0,Number.MAX_VALUE,n)}},IE=class extends ui{constructor(){super({id:"editor.foldAllBlockComments",label:u("foldAllBlockComments.label","Fold All Block Comments"),alias:"Fold All Block Comments",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2133),weight:100}})}invoke(e,t,i,n,o){if(t.regions.hasTypes())Jp(t,jl.Comment.value,!0);else{let r=i.getModel();if(!r)return;let a=o.getLanguageConfiguration(r.getLanguageId()).comments;if(a&&a.blockCommentStartToken){let l=new RegExp("^\\s*"+So(a.blockCommentStartToken));Zp(t,l,!0)}}}},kE=class extends ui{constructor(){super({id:"editor.foldAllMarkerRegions",label:u("foldAllMarkerRegions.label","Fold All Regions"),alias:"Fold All Regions",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2077),weight:100}})}invoke(e,t,i,n,o){if(t.regions.hasTypes())Jp(t,jl.Region.value,!0);else{let r=i.getModel();if(!r)return;let a=o.getLanguageConfiguration(r.getLanguageId()).foldingRules;if(a&&a.markers&&a.markers.start){let l=new RegExp(a.markers.start);Zp(t,l,!0)}}}},LE=class extends ui{constructor(){super({id:"editor.unfoldAllMarkerRegions",label:u("unfoldAllMarkerRegions.label","Unfold All Regions"),alias:"Unfold All Regions",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2078),weight:100}})}invoke(e,t,i,n,o){if(t.regions.hasTypes())Jp(t,jl.Region.value,!1);else{let r=i.getModel();if(!r)return;let a=o.getLanguageConfiguration(r.getLanguageId()).foldingRules;if(a&&a.markers&&a.markers.start){let l=new RegExp(a.markers.start);Zp(t,l,!1)}}}},PE=class extends ui{constructor(){super({id:"editor.foldAllExcept",label:u("foldAllExcept.label","Fold All Regions Except Selected"),alias:"Fold All Regions Except Selected",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2131),weight:100}})}invoke(e,t,i){let n=this.getSelectedLines(i);Yy(t,!0,n)}},ME=class extends ui{constructor(){super({id:"editor.unfoldAllExcept",label:u("unfoldAllExcept.label","Unfold All Regions Except Selected"),alias:"Unfold All Regions Except Selected",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2129),weight:100}})}invoke(e,t,i){let n=this.getSelectedLines(i);Yy(t,!1,n)}},DE=class extends ui{constructor(){super({id:"editor.foldAll",label:u("foldAllAction.label","Fold All"),alias:"Fold All",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2069),weight:100}})}invoke(e,t,i){Hs(t,!0)}},RE=class extends ui{constructor(){super({id:"editor.unfoldAll",label:u("unfoldAllAction.label","Unfold All"),alias:"Unfold All",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2088),weight:100}})}invoke(e,t,i){Hs(t,!1)}},Wr=class extends ui{getFoldingLevel(){return parseInt(this.id.substr(Wr.ID_PREFIX.length))}invoke(e,t,i){pE(t,this.getFoldingLevel(),!0,this.getSelectedLines(i))}};Wr.ID_PREFIX="editor.foldLevel";Wr.ID=s=>Wr.ID_PREFIX+s;var AE=class extends ui{constructor(){super({id:"editor.gotoParentFold",label:u("gotoParentFold.label","Go to Parent Fold"),alias:"Go to Parent Fold",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,weight:100}})}invoke(e,t,i){let n=this.getSelectedLines(i);if(n.length>0){let o=mE(n[0],t);o!==null&&i.setSelection({startLineNumber:o,startColumn:1,endLineNumber:o,endColumn:1})}}},FE=class extends ui{constructor(){super({id:"editor.gotoPreviousFold",label:u("gotoPreviousFold.label","Go to Previous Folding Range"),alias:"Go to Previous Folding Range",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,weight:100}})}invoke(e,t,i){let n=this.getSelectedLines(i);if(n.length>0){let o=gE(n[0],t);o!==null&&i.setSelection({startLineNumber:o,startColumn:1,endLineNumber:o,endColumn:1})}}},NE=class extends ui{constructor(){super({id:"editor.gotoNextFold",label:u("gotoNextFold.label","Go to Next Folding Range"),alias:"Go to Next Folding Range",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,weight:100}})}invoke(e,t,i){let n=this.getSelectedLines(i);if(n.length>0){let o=fE(n[0],t);o!==null&&i.setSelection({startLineNumber:o,startColumn:1,endLineNumber:o,endColumn:1})}}};J(ml.ID,ml);I(CE);I(_E);I(wE);I(EE);I(DE);I(RE);I(IE);I(kE);I(LE);I(PE);I(ME);I(TE);I(AE);I(FE);I(NE);for(let s=1;s<=7;s++)Nh(new Wr({id:Wr.ID(s),label:u("foldLevelAction.label","Fold Level {0}",s),alias:`Fold Level ${s}`,precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2048|21+s),weight:100}}));var CR=q("editor.foldBackground",{light:si(Zm,.3),dark:si(Zm,.3),hc:null},u("foldBackgroundBackground","Background color behind folded ranges. The color must not be opaque so as not to hide underlying decorations."),!0),_R=q("editorGutter.foldingControlForeground",{dark:Oh,light:Oh,hc:Oh},u("editorGutter.foldingControlForeground","Color of the folding control in the editor gutter."));Me((s,e)=>{let t=s.getColor(CR);t&&e.addRule(`.monaco-editor .folded-background { background-color: ${t}; }`);let i=s.getColor(_R);i&&e.addRule(`
		.monaco-editor .cldr${ot.asCSSSelector(Qp)},
		.monaco-editor .cldr${ot.asCSSSelector(em)} {
			color: ${i} !important;
		}
		`)});ue();Q();var zE=class extends F{constructor(){super({id:"editor.action.fontZoomIn",label:u("EditorFontZoomIn.label","Editor Font Zoom In"),alias:"Editor Font Zoom In",precondition:void 0})}run(e,t){xa.setZoomLevel(xa.getZoomLevel()+1)}},OE=class extends F{constructor(){super({id:"editor.action.fontZoomOut",label:u("EditorFontZoomOut.label","Editor Font Zoom Out"),alias:"Editor Font Zoom Out",precondition:void 0})}run(e,t){xa.setZoomLevel(xa.getZoomLevel()-1)}},HE=class extends F{constructor(){super({id:"editor.action.fontZoomReset",label:u("EditorFontZoomReset.label","Editor Font Zoom Reset"),alias:"Editor Font Zoom Reset",precondition:void 0})}run(e,t){xa.setZoomLevel(0)}};I(zE);I(OE);I(HE);var xae=aa(jE()),Cae=aa(KE());B();Ye();ue();Do();ee();Mt();He();jt();sn();hr();function pi(s,e){let t=0;for(let i=0;i<s.length;i++)s.charAt(i)==="	"?t+=e:t++;return t}function Gs(s,e,t){s=s<0?0:s;let i="";if(!t){let n=Math.floor(s/e);s=s%e;for(let o=0;o<n;o++)i+="	"}for(let n=0;n<s;n++)i+=" ";return i}Q();function XE(s,e,t,i,n){if(s.getLineCount()===1&&s.getLineMaxColumn(1)===1)return[];let o=e.getLanguageConfiguration(s.getLanguageId()).indentationRules;if(!o)return[];for(i=Math.min(i,s.getLineCount());t<=i&&o.unIndentedLinePattern;){let _=s.getLineContent(t);if(!o.unIndentedLinePattern.test(_))break;t++}if(t>i-1)return[];let{tabSize:r,indentSize:a,insertSpaces:l}=s.getOptions(),c=(_,w)=>(w=w||1,Sr.shiftIndent(_,_.length+w,r,a,l)),d=(_,w)=>(w=w||1,Sr.unshiftIndent(_,_.length+w,r,a,l)),h=[],p,m=s.getLineContent(t),f=m;if(n!=null){p=n;let _=pt(m);f=p+m.substring(_.length),o.decreaseIndentPattern&&o.decreaseIndentPattern.test(f)&&(p=d(p),f=p+m.substring(_.length)),m!==f&&h.push(Ge.replaceMove(new X(t,1,t,_.length+1),Ra.normalizeIndentation(p,a,l)))}else p=pt(m);let v=p;o.increaseIndentPattern&&o.increaseIndentPattern.test(f)?(v=c(v),p=c(p)):o.indentNextLinePattern&&o.indentNextLinePattern.test(f)&&(v=c(v)),t++;for(let _=t;_<=i;_++){let w=s.getLineContent(_),A=pt(w),M=v+w.substring(A.length);o.decreaseIndentPattern&&o.decreaseIndentPattern.test(M)&&(v=d(v),p=d(p)),A!==v&&h.push(Ge.replaceMove(new X(_,1,_,A.length+1),Ra.normalizeIndentation(v,a,l))),!(o.unIndentedLinePattern&&o.unIndentedLinePattern.test(w))&&(o.increaseIndentPattern&&o.increaseIndentPattern.test(M)?(p=c(p),v=p):o.indentNextLinePattern&&o.indentNextLinePattern.test(M)?v=c(v):v=p)}return h}var Pc=class extends F{constructor(){super({id:Pc.ID,label:u("indentationToSpaces","Convert Indentation to Spaces"),alias:"Convert Indentation to Spaces",precondition:S.writable})}run(e,t){let i=t.getModel();if(!i)return;let n=i.getOptions(),o=t.getSelection();if(!o)return;let r=new eI(o,n.tabSize);t.pushUndoStop(),t.executeCommands(this.id,[r]),t.pushUndoStop(),i.updateOptions({insertSpaces:!0})}};Pc.ID="editor.action.indentationToSpaces";var Mc=class extends F{constructor(){super({id:Mc.ID,label:u("indentationToTabs","Convert Indentation to Tabs"),alias:"Convert Indentation to Tabs",precondition:S.writable})}run(e,t){let i=t.getModel();if(!i)return;let n=i.getOptions(),o=t.getSelection();if(!o)return;let r=new tI(o,n.tabSize);t.pushUndoStop(),t.executeCommands(this.id,[r]),t.pushUndoStop(),i.updateOptions({insertSpaces:!1})}};Mc.ID="editor.action.indentationToTabs";var lb=class extends F{constructor(e,t){super(t);this.insertSpaces=e}run(e,t){let i=e.get(Wi),n=e.get(Yt),o=t.getModel();if(!o)return;let r=n.getCreationOptions(o.getLanguageId(),o.uri,o.isForSimpleWidget),a=[1,2,3,4,5,6,7,8].map(c=>({id:c.toString(),label:c.toString(),description:c===r.tabSize?u("configuredTabSize","Configured Tab Size"):void 0})),l=Math.min(o.getOptions().tabSize-1,7);setTimeout(()=>{i.pick(a,{placeHolder:u({key:"selectTabWidth",comment:["Tab corresponds to the tab key"]},"Select Tab Size for Current File"),activeItem:a[l]}).then(c=>{c&&o&&!o.isDisposed()&&o.updateOptions({tabSize:parseInt(c.label,10),insertSpaces:this.insertSpaces})})},50)}},Dc=class extends lb{constructor(){super(!1,{id:Dc.ID,label:u("indentUsingTabs","Indent Using Tabs"),alias:"Indent Using Tabs",precondition:void 0})}};Dc.ID="editor.action.indentUsingTabs";var Rc=class extends lb{constructor(){super(!0,{id:Rc.ID,label:u("indentUsingSpaces","Indent Using Spaces"),alias:"Indent Using Spaces",precondition:void 0})}};Rc.ID="editor.action.indentUsingSpaces";var Ac=class extends F{constructor(){super({id:Ac.ID,label:u("detectIndentation","Detect Indentation from Content"),alias:"Detect Indentation from Content",precondition:void 0})}run(e,t){let i=e.get(Yt),n=t.getModel();if(!n)return;let o=i.getCreationOptions(n.getLanguageId(),n.uri,n.isForSimpleWidget);n.detectIndentation(o.insertSpaces,o.tabSize)}};Ac.ID="editor.action.detectIndentation";var YE=class extends F{constructor(){super({id:"editor.action.reindentlines",label:u("editor.reindentlines","Reindent Lines"),alias:"Reindent Lines",precondition:S.writable})}run(e,t){let i=e.get(Dt),n=t.getModel();if(!n)return;let o=XE(n,i,1,n.getLineCount());o.length>0&&(t.pushUndoStop(),t.executeEdits(this.id,o),t.pushUndoStop())}},ZE=class extends F{constructor(){super({id:"editor.action.reindentselectedlines",label:u("editor.reindentselectedlines","Reindent Selected Lines"),alias:"Reindent Selected Lines",precondition:S.writable})}run(e,t){let i=e.get(Dt),n=t.getModel();if(!n)return;let o=t.getSelections();if(o===null)return;let r=[];for(let a of o){let l=a.startLineNumber,c=a.endLineNumber;if(l!==c&&a.endColumn===1&&c--,l===1){if(l===c)continue}else l--;let d=XE(n,i,l,c);r.push(...d)}r.length>0&&(t.pushUndoStop(),t.executeEdits(this.id,r),t.pushUndoStop())}},JE=class{constructor(e,t){this._initialSelection=t,this._edits=[],this._selectionId=null;for(let i of e)i.range&&typeof i.text=="string"&&this._edits.push(i)}getEditOperations(e,t){for(let n of this._edits)t.addEditOperation(b.lift(n.range),n.text);let i=!1;Array.isArray(this._edits)&&this._edits.length===1&&this._initialSelection.isEmpty()&&(this._edits[0].range.startColumn===this._initialSelection.endColumn&&this._edits[0].range.startLineNumber===this._initialSelection.endLineNumber?(i=!0,this._selectionId=t.trackSelection(this._initialSelection,!0)):this._edits[0].range.endColumn===this._initialSelection.startColumn&&this._edits[0].range.endLineNumber===this._initialSelection.startLineNumber&&(i=!0,this._selectionId=t.trackSelection(this._initialSelection,!1))),i||(this._selectionId=t.trackSelection(this._initialSelection))}computeCursorState(e,t){return t.getTrackedSelection(this._selectionId)}},nm=class{constructor(e){this.callOnDispose=new R,this.callOnModel=new R,this.editor=e,this.callOnDispose.add(e.onDidChangeConfiguration(()=>this.update())),this.callOnDispose.add(e.onDidChangeModel(()=>this.update())),this.callOnDispose.add(e.onDidChangeModelLanguage(()=>this.update()))}update(){this.callOnModel.clear(),!(this.editor.getOption(9)<4||this.editor.getOption(48))&&(!this.editor.hasModel()||this.callOnModel.add(this.editor.onDidPaste(({range:e})=>{this.trigger(e)})))}trigger(e){let t=this.editor.getSelections();if(t===null||t.length>1)return;let i=this.editor.getModel();if(!i||!i.isCheapToTokenize(e.getStartPosition().lineNumber))return;let n=this.editor.getOption(9),{tabSize:o,indentSize:r,insertSpaces:a}=i.getOptions(),l=[],c={shiftIndent:m=>Sr.shiftIndent(m,m.length+1,o,r,a),unshiftIndent:m=>Sr.unshiftIndent(m,m.length+1,o,r,a)},d=e.startLineNumber;for(;d<=e.endLineNumber;){if(this.shouldIgnoreLine(i,d)){d++;continue}break}if(d>e.endLineNumber)return;let h=i.getLineContent(d);if(!/\S/.test(h.substring(0,e.startColumn-1))){let m=ii.getGoodIndentForLine(n,i,i.getLanguageId(),d,c);if(m!==null){let f=pt(h),v=pi(m,o),_=pi(f,o);if(v!==_){let w=Gs(v,o,a);l.push({range:new b(d,1,d,f.length+1),text:w}),h=w+h.substr(f.length)}else{let w=ii.getIndentMetadata(i,d);if(w===0||w===8)return}}}let p=d;for(;d<e.endLineNumber;){if(!/\S/.test(i.getLineContent(d+1))){d++;continue}break}if(d!==e.endLineNumber){let m={getLineTokens:v=>i.getLineTokens(v),getLanguageId:()=>i.getLanguageId(),getLanguageIdAtPosition:(v,_)=>i.getLanguageIdAtPosition(v,_),getLineContent:v=>v===p?h:i.getLineContent(v)},f=ii.getGoodIndentForLine(n,m,i.getLanguageId(),d+1,c);if(f!==null){let v=pi(f,o),_=pi(pt(i.getLineContent(d+1)),o);if(v!==_){let w=v-_;for(let A=d+1;A<=e.endLineNumber;A++){let M=i.getLineContent(A),j=pt(M),ce=pi(j,o)+w,Te=Gs(ce,o,a);Te!==j&&l.push({range:new b(A,1,A,j.length+1),text:Te})}}}}if(l.length>0){this.editor.pushUndoStop();let m=new JE(l,this.editor.getSelection());this.editor.executeCommand("autoIndentOnPaste",m),this.editor.pushUndoStop()}}shouldIgnoreLine(e,t){e.forceTokenization(t);let i=e.getLineFirstNonWhitespaceColumn(t);if(i===0)return!0;let n=e.getLineTokens(t);if(n.getCount()>0){let o=n.findTokenIndexAtOffset(i);if(o>=0&&n.getStandardTokenType(o)===1)return!0}return!1}dispose(){this.callOnDispose.dispose(),this.callOnModel.dispose()}};nm.ID="editor.contrib.autoIndentOnPaste";function QE(s,e,t,i){if(s.getLineCount()===1&&s.getLineMaxColumn(1)===1)return;let n="";for(let r=0;r<t;r++)n+=" ";let o=new RegExp(n,"gi");for(let r=1,a=s.getLineCount();r<=a;r++){let l=s.getLineFirstNonWhitespaceColumn(r);if(l===0&&(l=s.getLineMaxColumn(r)),l===1)continue;let c=new b(r,1,r,l),d=s.getValueInRange(c),h=i?d.replace(/\t/ig,n):d.replace(o,"	");e.addEditOperation(c,h)}}var eI=class{constructor(e,t){this.selection=e,this.tabSize=t,this.selectionId=null}getEditOperations(e,t){this.selectionId=t.trackSelection(this.selection),QE(e,t,this.tabSize,!0)}computeCursorState(e,t){return t.getTrackedSelection(this.selectionId)}},tI=class{constructor(e,t){this.selection=e,this.tabSize=t,this.selectionId=null}getEditOperations(e,t){this.selectionId=t.trackSelection(this.selection),QE(e,t,this.tabSize,!1)}computeCursorState(e,t){return t.getTrackedSelection(this.selectionId)}};J(nm.ID,nm);I(Pc);I(Mc);I(Dc);I(Rc);I(Ac);I(YE);I(ZE);var Pae=aa(rI());ue();He();Q();var sI=class extends F{constructor(){super({id:"expandLineSelection",label:u("expandLineSelection","Expand Line Selection"),alias:"Expand Line Selection",precondition:void 0,kbOpts:{weight:0,kbExpr:S.textInputFocus,primary:2090}})}run(e,t,i){if(i=i||{},!t.hasModel())return;let n=t._getViewModel();n.model.pushStackElement(),n.setCursorStates(i.source,3,ud.expandLineSelection(n,n.getCursorStates())),n.revealPrimaryCursor(i.source,!0)}};I(sI);yo();ue();Ye();Do();ee();var hb=class{constructor(e,t){this._selection=e,this._cursors=t,this._selectionId=null}getEditOperations(e,t){let i=LR(e,this._cursors);for(let n=0,o=i.length;n<o;n++){let r=i[n];t.addEditOperation(r.range,r.text)}this._selectionId=t.trackSelection(this._selection)}computeCursorState(e,t){return t.getTrackedSelection(this._selectionId)}};function LR(s,e){e.sort((r,a)=>r.lineNumber===a.lineNumber?r.column-a.column:r.lineNumber-a.lineNumber);for(let r=e.length-2;r>=0;r--)e[r].lineNumber===e[r+1].lineNumber&&e.splice(r,1);let t=[],i=0,n=0,o=e.length;for(let r=1,a=s.getLineCount();r<=a;r++){let l=s.getLineContent(r),c=l.length+1,d=0;if(n<o&&e[n].lineNumber===r&&(d=e[n].column,n++,d===c)||l.length===0)continue;let h=ma(l),p=0;if(h===-1)p=1;else if(h!==l.length-1)p=h+2;else continue;p=Math.max(d,p),t[i++]=Ge.delete(new b(r,p,r,c))}return t}Do();tt();ee();Mt();He();ee();Mt();var om=class{constructor(e,t,i){this._selection=e,this._isCopyingDown=t,this._noop=i||!1,this._selectionDirection=0,this._selectionId=null,this._startLineNumberDelta=0,this._endLineNumberDelta=0}getEditOperations(e,t){let i=this._selection;this._startLineNumberDelta=0,this._endLineNumberDelta=0,i.startLineNumber<i.endLineNumber&&i.endColumn===1&&(this._endLineNumberDelta=1,i=i.setEndPosition(i.endLineNumber-1,e.getLineMaxColumn(i.endLineNumber-1)));let n=[];for(let r=i.startLineNumber;r<=i.endLineNumber;r++)n.push(e.getLineContent(r));let o=n.join(`
`);o===""&&this._isCopyingDown&&(this._startLineNumberDelta++,this._endLineNumberDelta++),this._noop?t.addEditOperation(new b(i.endLineNumber,e.getLineMaxColumn(i.endLineNumber),i.endLineNumber+1,1),i.endLineNumber===e.getLineCount()?"":`
`):this._isCopyingDown?t.addEditOperation(new b(i.startLineNumber,1,i.startLineNumber,1),o+`
`):t.addEditOperation(new b(i.endLineNumber,e.getLineMaxColumn(i.endLineNumber),i.endLineNumber,e.getLineMaxColumn(i.endLineNumber)),`
`+o),this._selectionId=t.trackSelection(i),this._selectionDirection=this._selection.getDirection()}computeCursorState(e,t){let i=t.getTrackedSelection(this._selectionId);if(this._startLineNumberDelta!==0||this._endLineNumberDelta!==0){let n=i.startLineNumber,o=i.startColumn,r=i.endLineNumber,a=i.endColumn;this._startLineNumberDelta!==0&&(n=n+this._startLineNumberDelta,o=1),this._endLineNumberDelta!==0&&(r=r+this._endLineNumberDelta,a=1),i=X.createWithDirection(n,o,r,a,this._selectionDirection)}return i}};Ye();ee();Mt();aP();sn();var ub=class{constructor(e,t,i){this._selection=e,this._isMovingDown=t,this._autoIndent=i,this._selectionId=null,this._moveEndLineSelectionShrink=!1}getEditOperations(e,t){let i=e.getLineCount();if(this._isMovingDown&&this._selection.endLineNumber===i){this._selectionId=t.trackSelection(this._selection);return}if(!this._isMovingDown&&this._selection.startLineNumber===1){this._selectionId=t.trackSelection(this._selection);return}this._moveEndPositionDown=!1;let n=this._selection;n.startLineNumber<n.endLineNumber&&n.endColumn===1&&(this._moveEndPositionDown=!0,n=n.setEndPosition(n.endLineNumber-1,e.getLineMaxColumn(n.endLineNumber-1)));let{tabSize:o,indentSize:r,insertSpaces:a}=e.getOptions(),l=this.buildIndentConverter(o,r,a),c={getLineTokens:d=>e.getLineTokens(d),getLanguageId:()=>e.getLanguageId(),getLanguageIdAtPosition:(d,h)=>e.getLanguageIdAtPosition(d,h),getLineContent:null};if(n.startLineNumber===n.endLineNumber&&e.getLineMaxColumn(n.startLineNumber)===1){let d=n.startLineNumber,h=this._isMovingDown?d+1:d-1;e.getLineMaxColumn(h)===1?t.addEditOperation(new b(1,1,1,1),null):(t.addEditOperation(new b(d,1,d,1),e.getLineContent(h)),t.addEditOperation(new b(h,1,h,e.getLineMaxColumn(h)),null)),n=new X(h,1,h,1)}else{let d,h;if(this._isMovingDown){d=n.endLineNumber+1,h=e.getLineContent(d),t.addEditOperation(new b(d-1,e.getLineMaxColumn(d-1),d,e.getLineMaxColumn(d)),null);let p=h;if(this.shouldAutoIndent(e,n)){let m=this.matchEnterRule(e,l,o,d,n.startLineNumber-1);if(m!==null){let v=pt(e.getLineContent(d)),_=m+pi(v,o);p=Gs(_,o,a)+this.trimLeft(h)}else{c.getLineContent=_=>_===n.startLineNumber?e.getLineContent(d):e.getLineContent(_);let v=ii.getGoodIndentForLine(this._autoIndent,c,e.getLanguageIdAtPosition(d,1),n.startLineNumber,l);if(v!==null){let _=pt(e.getLineContent(d)),w=pi(v,o),A=pi(_,o);w!==A&&(p=Gs(w,o,a)+this.trimLeft(h))}}t.addEditOperation(new b(n.startLineNumber,1,n.startLineNumber,1),p+`
`);let f=this.matchEnterRuleMovingDown(e,l,o,n.startLineNumber,d,p);if(f!==null)f!==0&&this.getIndentEditsOfMovingBlock(e,t,n,o,a,f);else{c.getLineContent=_=>_===n.startLineNumber?p:_>=n.startLineNumber+1&&_<=n.endLineNumber+1?e.getLineContent(_-1):e.getLineContent(_);let v=ii.getGoodIndentForLine(this._autoIndent,c,e.getLanguageIdAtPosition(d,1),n.startLineNumber+1,l);if(v!==null){let _=pt(e.getLineContent(n.startLineNumber)),w=pi(v,o),A=pi(_,o);if(w!==A){let M=w-A;this.getIndentEditsOfMovingBlock(e,t,n,o,a,M)}}}}else t.addEditOperation(new b(n.startLineNumber,1,n.startLineNumber,1),p+`
`)}else if(d=n.startLineNumber-1,h=e.getLineContent(d),t.addEditOperation(new b(d,1,d+1,1),null),t.addEditOperation(new b(n.endLineNumber,e.getLineMaxColumn(n.endLineNumber),n.endLineNumber,e.getLineMaxColumn(n.endLineNumber)),`
`+h),this.shouldAutoIndent(e,n)){c.getLineContent=m=>m===d?e.getLineContent(n.startLineNumber):e.getLineContent(m);let p=this.matchEnterRule(e,l,o,n.startLineNumber,n.startLineNumber-2);if(p!==null)p!==0&&this.getIndentEditsOfMovingBlock(e,t,n,o,a,p);else{let m=ii.getGoodIndentForLine(this._autoIndent,c,e.getLanguageIdAtPosition(n.startLineNumber,1),d,l);if(m!==null){let f=pt(e.getLineContent(n.startLineNumber)),v=pi(m,o),_=pi(f,o);if(v!==_){let w=v-_;this.getIndentEditsOfMovingBlock(e,t,n,o,a,w)}}}}}this._selectionId=t.trackSelection(n)}buildIndentConverter(e,t,i){return{shiftIndent:n=>Sr.shiftIndent(n,n.length+1,e,t,i),unshiftIndent:n=>Sr.unshiftIndent(n,n.length+1,e,t,i)}}parseEnterResult(e,t,i,n,o){if(o){let r=o.indentation;o.indentAction===Xl.None||o.indentAction===Xl.Indent?r=o.indentation+o.appendText:o.indentAction===Xl.IndentOutdent?r=o.indentation:o.indentAction===Xl.Outdent&&(r=t.unshiftIndent(o.indentation)+o.appendText);let a=e.getLineContent(n);if(this.trimLeft(a).indexOf(this.trimLeft(r))>=0){let l=pt(e.getLineContent(n)),c=pt(r),d=ii.getIndentMetadata(e,n);d!==null&&d&2&&(c=t.unshiftIndent(c));let h=pi(c,i),p=pi(l,i);return h-p}}return null}matchEnterRuleMovingDown(e,t,i,n,o,r){if(ma(r)>=0){let a=e.getLineMaxColumn(o),l=ii.getEnterAction(this._autoIndent,e,new b(o,a,o,a));return this.parseEnterResult(e,t,i,n,l)}else{let a=n-1;for(;a>=1;){let d=e.getLineContent(a);if(ma(d)>=0)break;a--}if(a<1||n>e.getLineCount())return null;let l=e.getLineMaxColumn(a),c=ii.getEnterAction(this._autoIndent,e,new b(a,l,a,l));return this.parseEnterResult(e,t,i,n,c)}}matchEnterRule(e,t,i,n,o,r){let a=o;for(;a>=1;){let d;if(a===o&&r!==void 0?d=r:d=e.getLineContent(a),ma(d)>=0)break;a--}if(a<1||n>e.getLineCount())return null;let l=e.getLineMaxColumn(a),c=ii.getEnterAction(this._autoIndent,e,new b(a,l,a,l));return this.parseEnterResult(e,t,i,n,c)}trimLeft(e){return e.replace(/^\s+/,"")}shouldAutoIndent(e,t){if(this._autoIndent<4||!e.isCheapToTokenize(t.startLineNumber))return!1;let i=e.getLanguageIdAtPosition(t.startLineNumber,1),n=e.getLanguageIdAtPosition(t.endLineNumber,1);return!(i!==n||ii.getIndentRulesSupport(i)===null)}getIndentEditsOfMovingBlock(e,t,i,n,o,r){for(let a=i.startLineNumber;a<=i.endLineNumber;a++){let l=e.getLineContent(a),c=pt(l),h=pi(c,n)+r,p=Gs(h,n,o);p!==c&&(t.addEditOperation(new b(a,1,a,c.length+1),p),a===i.endLineNumber&&i.endColumn<=c.length+1&&p===""&&(this._moveEndLineSelectionShrink=!0))}}computeCursorState(e,t){let i=t.getTrackedSelection(this._selectionId);return this._moveEndPositionDown&&(i=i.setEndPosition(i.endLineNumber+1,1)),this._moveEndLineSelectionShrink&&i.startLineNumber<i.endLineNumber&&(i=i.setEndPosition(i.endLineNumber,2)),i}};Do();ee();var uo=class{constructor(e,t){this.selection=e,this.descending=t,this.selectionId=null}static getCollator(){return uo._COLLATOR||(uo._COLLATOR=new Intl.Collator),uo._COLLATOR}getEditOperations(e,t){let i=PR(e,this.selection,this.descending);i&&t.addEditOperation(i.range,i.text),this.selectionId=t.trackSelection(this.selection)}computeCursorState(e,t){return t.getTrackedSelection(this.selectionId)}static canRun(e,t,i){if(e===null)return!1;let n=aI(e,t,i);if(!n)return!1;for(let o=0,r=n.before.length;o<r;o++)if(n.before[o]!==n.after[o])return!0;return!1}};uo._COLLATOR=null;function aI(s,e,t){let i=e.startLineNumber,n=e.endLineNumber;if(e.endColumn===1&&n--,i>=n)return null;let o=[];for(let a=i;a<=n;a++)o.push(s.getLineContent(a));let r=o.slice(0);return r.sort(uo.getCollator().compare),t===!0&&(r=r.reverse()),{startLineNumber:i,endLineNumber:n,before:o,after:r}}function PR(s,e,t){let i=aI(s,e,t);return i?Ge.replace(new b(i.startLineNumber,1,i.endLineNumber,s.getLineMaxColumn(i.endLineNumber)),i.after.join(`
`)):null}Q();ri();var pb=class extends F{constructor(e,t){super(t);this.down=e}run(e,t){if(!t.hasModel())return;let i=t.getSelections().map((r,a)=>({selection:r,index:a,ignore:!1}));i.sort((r,a)=>b.compareRangesUsingStarts(r.selection,a.selection));let n=i[0];for(let r=1;r<i.length;r++){let a=i[r];n.selection.endLineNumber===a.selection.startLineNumber&&(n.index<a.index?a.ignore=!0:(n.ignore=!0,n=a))}let o=[];for(let r of i)o.push(new om(r.selection,this.down,r.ignore));t.pushUndoStop(),t.executeCommands(this.id,o),t.pushUndoStop()}},lI=class extends pb{constructor(){super(!1,{id:"editor.action.copyLinesUpAction",label:u("lines.copyUp","Copy Line Up"),alias:"Copy Line Up",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:1552,linux:{primary:3600},weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"2_line",title:u({key:"miCopyLinesUp",comment:["&& denotes a mnemonic"]},"&&Copy Line Up"),order:1}})}},dI=class extends pb{constructor(){super(!0,{id:"editor.action.copyLinesDownAction",label:u("lines.copyDown","Copy Line Down"),alias:"Copy Line Down",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:1554,linux:{primary:3602},weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"2_line",title:u({key:"miCopyLinesDown",comment:["&& denotes a mnemonic"]},"Co&&py Line Down"),order:2}})}},cI=class extends F{constructor(){super({id:"editor.action.duplicateSelection",label:u("duplicateSelection","Duplicate Selection"),alias:"Duplicate Selection",precondition:S.writable,menuOpts:{menuId:se.MenubarSelectionMenu,group:"2_line",title:u({key:"miDuplicateSelection",comment:["&& denotes a mnemonic"]},"&&Duplicate Selection"),order:5}})}run(e,t,i){if(!t.hasModel())return;let n=[],o=t.getSelections(),r=t.getModel();for(let a of o)if(a.isEmpty())n.push(new om(a,!0));else{let l=new X(a.endLineNumber,a.endColumn,a.endLineNumber,a.endColumn);n.push(new _x(l,r.getValueInRange(a)))}t.pushUndoStop(),t.executeCommands(this.id,n),t.pushUndoStop()}},mb=class extends F{constructor(e,t){super(t);this.down=e}run(e,t){let i=[],n=t.getSelections()||[],o=t.getOption(9);for(let r of n)i.push(new ub(r,this.down,o));t.pushUndoStop(),t.executeCommands(this.id,i),t.pushUndoStop()}},hI=class extends mb{constructor(){super(!1,{id:"editor.action.moveLinesUpAction",label:u("lines.moveUp","Move Line Up"),alias:"Move Line Up",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:528,linux:{primary:528},weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"2_line",title:u({key:"miMoveLinesUp",comment:["&& denotes a mnemonic"]},"Mo&&ve Line Up"),order:3}})}},uI=class extends mb{constructor(){super(!0,{id:"editor.action.moveLinesDownAction",label:u("lines.moveDown","Move Line Down"),alias:"Move Line Down",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:530,linux:{primary:530},weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"2_line",title:u({key:"miMoveLinesDown",comment:["&& denotes a mnemonic"]},"Move &&Line Down"),order:4}})}},gb=class extends F{constructor(e,t){super(t);this.descending=e}run(e,t){let i=t.getSelections()||[];for(let o of i)if(!uo.canRun(t.getModel(),o,this.descending))return;let n=[];for(let o=0,r=i.length;o<r;o++)n[o]=new uo(i[o],this.descending);t.pushUndoStop(),t.executeCommands(this.id,n),t.pushUndoStop()}},pI=class extends gb{constructor(){super(!1,{id:"editor.action.sortLinesAscending",label:u("lines.sortAscending","Sort Lines Ascending"),alias:"Sort Lines Ascending",precondition:S.writable})}},mI=class extends gb{constructor(){super(!0,{id:"editor.action.sortLinesDescending",label:u("lines.sortDescending","Sort Lines Descending"),alias:"Sort Lines Descending",precondition:S.writable})}},gI=class extends F{constructor(){super({id:"editor.action.removeDuplicateLines",label:u("lines.deleteDuplicates","Delete Duplicate Lines"),alias:"Delete Duplicate Lines",precondition:S.writable})}run(e,t){if(!t.hasModel())return;let i=t.getModel();if(i.getLineCount()===1&&i.getLineMaxColumn(1)===1)return;let n=[],o=[],r=0;for(let a of t.getSelections()){let l=new Set,c=[];for(let m=a.startLineNumber;m<=a.endLineNumber;m++){let f=i.getLineContent(m);l.has(f)||(c.push(f),l.add(f))}let d=new X(a.startLineNumber,1,a.endLineNumber,i.getLineMaxColumn(a.endLineNumber)),h=a.startLineNumber-r,p=new X(h,1,h+c.length-1,c[c.length-1].length);n.push(Ge.replace(d,c.join(`
`))),o.push(p),r+=a.endLineNumber-a.startLineNumber+1-c.length}t.pushUndoStop(),t.executeEdits(this.id,n,o),t.pushUndoStop()}},Nc=class extends F{constructor(){super({id:Nc.ID,label:u("lines.trimTrailingWhitespace","Trim Trailing Whitespace"),alias:"Trim Trailing Whitespace",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2102),weight:100}})}run(e,t,i){let n=[];i.reason==="auto-save"&&(n=(t.getSelections()||[]).map(a=>new U(a.positionLineNumber,a.positionColumn)));let o=t.getSelection();if(o===null)return;let r=new hb(o,n);t.pushUndoStop(),t.executeCommands(this.id,[r]),t.pushUndoStop()}};Nc.ID="editor.action.trimTrailingWhitespace";var fI=class extends F{constructor(){super({id:"editor.action.deleteLines",label:u("lines.delete","Delete Line"),alias:"Delete Line",precondition:S.writable,kbOpts:{kbExpr:S.textInputFocus,primary:3113,weight:100}})}run(e,t){if(!t.hasModel())return;let i=this._getLinesToRemove(t),n=t.getModel();if(n.getLineCount()===1&&n.getLineMaxColumn(1)===1)return;let o=0,r=[],a=[];for(let l=0,c=i.length;l<c;l++){let d=i[l],h=d.startLineNumber,p=d.endLineNumber,m=1,f=n.getLineMaxColumn(p);p<n.getLineCount()?(p+=1,f=1):h>1&&(h-=1,m=n.getLineMaxColumn(h)),r.push(Ge.replace(new X(h,m,p,f),"")),a.push(new X(h-o,d.positionColumn,h-o,d.positionColumn)),o+=d.endLineNumber-d.startLineNumber+1}t.pushUndoStop(),t.executeEdits(this.id,r,a),t.pushUndoStop()}_getLinesToRemove(e){let t=e.getSelections().map(o=>{let r=o.endLineNumber;return o.startLineNumber<o.endLineNumber&&o.endColumn===1&&(r-=1),{startLineNumber:o.startLineNumber,selectionStartColumn:o.selectionStartColumn,endLineNumber:r,positionColumn:o.positionColumn}});t.sort((o,r)=>o.startLineNumber===r.startLineNumber?o.endLineNumber-r.endLineNumber:o.startLineNumber-r.startLineNumber);let i=[],n=t[0];for(let o=1;o<t.length;o++)n.endLineNumber+1>=t[o].startLineNumber?n.endLineNumber=t[o].endLineNumber:(i.push(n),n=t[o]);return i.push(n),i}},yI=class extends F{constructor(){super({id:"editor.action.indentLines",label:u("lines.indent","Indent Line"),alias:"Indent Line",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:2137,weight:100}})}run(e,t){let i=t._getViewModel();!i||(t.pushUndoStop(),t.executeCommands(this.id,ru.indent(i.cursorConfig,t.getModel(),t.getSelections())),t.pushUndoStop())}},bI=class extends F{constructor(){super({id:"editor.action.outdentLines",label:u("lines.outdent","Outdent Line"),alias:"Outdent Line",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:2135,weight:100}})}run(e,t){Fa.Outdent.runEditorCommand(e,t,null)}},SI=class extends F{constructor(){super({id:"editor.action.insertLineBefore",label:u("lines.insertBefore","Insert Line Above"),alias:"Insert Line Above",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:3075,weight:100}})}run(e,t){let i=t._getViewModel();!i||(t.pushUndoStop(),t.executeCommands(this.id,ru.lineInsertBefore(i.cursorConfig,t.getModel(),t.getSelections())))}},vI=class extends F{constructor(){super({id:"editor.action.insertLineAfter",label:u("lines.insertAfter","Insert Line Below"),alias:"Insert Line Below",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:2051,weight:100}})}run(e,t){let i=t._getViewModel();!i||(t.pushUndoStop(),t.executeCommands(this.id,ru.lineInsertAfter(i.cursorConfig,t.getModel(),t.getSelections())))}},fb=class extends F{run(e,t){if(!t.hasModel())return;let i=t.getSelection(),n=this._getRangesToDelete(t),o=[];for(let l=0,c=n.length-1;l<c;l++){let d=n[l],h=n[l+1];b.intersectRanges(d,h)===null?o.push(d):n[l+1]=b.plusRange(d,h)}o.push(n[n.length-1]);let r=this._getEndCursorState(i,o),a=o.map(l=>Ge.replace(l,""));t.pushUndoStop(),t.executeEdits(this.id,a,r),t.pushUndoStop()}},xI=class extends fb{constructor(){super({id:"deleteAllLeft",label:u("lines.deleteAllLeft","Delete All Left"),alias:"Delete All Left",precondition:S.writable,kbOpts:{kbExpr:S.textInputFocus,primary:0,mac:{primary:2049},weight:100}})}_getEndCursorState(e,t){let i=null,n=[],o=0;return t.forEach(r=>{let a;if(r.endColumn===1&&o>0){let l=r.startLineNumber-o;a=new X(l,r.startColumn,l,r.startColumn)}else a=new X(r.startLineNumber,r.startColumn,r.startLineNumber,r.startColumn);o+=r.endLineNumber-r.startLineNumber,r.intersectRanges(e)?i=a:n.push(a)}),i&&n.unshift(i),n}_getRangesToDelete(e){let t=e.getSelections();if(t===null)return[];let i=t,n=e.getModel();return n===null?[]:(i.sort(b.compareRangesUsingStarts),i=i.map(o=>{if(o.isEmpty())if(o.startColumn===1){let r=Math.max(1,o.startLineNumber-1),a=o.startLineNumber===1?1:n.getLineContent(r).length+1;return new b(r,a,o.startLineNumber,1)}else return new b(o.startLineNumber,1,o.startLineNumber,o.startColumn);else return new b(o.startLineNumber,1,o.endLineNumber,o.endColumn)}),i)}},CI=class extends fb{constructor(){super({id:"deleteAllRight",label:u("lines.deleteAllRight","Delete All Right"),alias:"Delete All Right",precondition:S.writable,kbOpts:{kbExpr:S.textInputFocus,primary:0,mac:{primary:297,secondary:[2068]},weight:100}})}_getEndCursorState(e,t){let i=null,n=[];for(let o=0,r=t.length,a=0;o<r;o++){let l=t[o],c=new X(l.startLineNumber-a,l.startColumn,l.startLineNumber-a,l.startColumn);l.intersectRanges(e)?i=c:n.push(c)}return i&&n.unshift(i),n}_getRangesToDelete(e){let t=e.getModel();if(t===null)return[];let i=e.getSelections();if(i===null)return[];let n=i.map(o=>{if(o.isEmpty()){let r=t.getLineMaxColumn(o.startLineNumber);return o.startColumn===r?new b(o.startLineNumber,o.startColumn,o.startLineNumber+1,1):new b(o.startLineNumber,o.startColumn,o.startLineNumber,r)}return o});return n.sort(b.compareRangesUsingStarts),n}},_I=class extends F{constructor(){super({id:"editor.action.joinLines",label:u("lines.joinLines","Join Lines"),alias:"Join Lines",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:0,mac:{primary:296},weight:100}})}run(e,t){let i=t.getSelections();if(i===null)return;let n=t.getSelection();if(n===null)return;i.sort(b.compareRangesUsingStarts);let o=[],r=i.reduce((p,m)=>p.isEmpty()?p.endLineNumber===m.startLineNumber?(n.equalsSelection(p)&&(n=m),m):m.startLineNumber>p.endLineNumber+1?(o.push(p),m):new X(p.startLineNumber,p.startColumn,m.endLineNumber,m.endColumn):m.startLineNumber>p.endLineNumber?(o.push(p),m):new X(p.startLineNumber,p.startColumn,m.endLineNumber,m.endColumn));o.push(r);let a=t.getModel();if(a===null)return;let l=[],c=[],d=n,h=0;for(let p=0,m=o.length;p<m;p++){let f=o[p],v=f.startLineNumber,_=1,w=0,A,M,j=a.getLineContent(f.endLineNumber).length-f.endColumn;if(f.isEmpty()||f.startLineNumber===f.endLineNumber){let Te=f.getStartPosition();Te.lineNumber<a.getLineCount()?(A=v+1,M=a.getLineMaxColumn(A)):(A=Te.lineNumber,M=a.getLineMaxColumn(Te.lineNumber))}else A=f.endLineNumber,M=a.getLineMaxColumn(A);let V=a.getLineContent(v);for(let Te=v+1;Te<=A;Te++){let It=a.getLineContent(Te),Wt=a.getLineFirstNonWhitespaceColumn(Te);if(Wt>=1){let Bt=!0;V===""&&(Bt=!1),Bt&&(V.charAt(V.length-1)===" "||V.charAt(V.length-1)==="	")&&(Bt=!1,V=V.replace(/[\s\uFEFF\xA0]+$/g," "));let nn=It.substr(Wt-1);V+=(Bt?" ":"")+nn,Bt?w=nn.length+1:w=nn.length}else w=0}let ce=new b(v,_,A,M);if(!ce.isEmpty()){let Te;f.isEmpty()?(l.push(Ge.replace(ce,V)),Te=new X(ce.startLineNumber-h,V.length-w+1,v-h,V.length-w+1)):f.startLineNumber===f.endLineNumber?(l.push(Ge.replace(ce,V)),Te=new X(f.startLineNumber-h,f.startColumn,f.endLineNumber-h,f.endColumn)):(l.push(Ge.replace(ce,V)),Te=new X(f.startLineNumber-h,f.startColumn,f.startLineNumber-h,V.length-j)),b.intersectRanges(ce,n)!==null?d=Te:c.push(Te)}h+=ce.endLineNumber-ce.startLineNumber}c.unshift(d),t.pushUndoStop(),t.executeEdits(this.id,l,c),t.pushUndoStop()}},wI=class extends F{constructor(){super({id:"editor.action.transpose",label:u("editor.transpose","Transpose characters around the cursor"),alias:"Transpose characters around the cursor",precondition:S.writable})}run(e,t){let i=t.getSelections();if(i===null)return;let n=t.getModel();if(n===null)return;let o=[];for(let r=0,a=i.length;r<a;r++){let l=i[r];if(!l.isEmpty())continue;let c=l.getStartPosition(),d=n.getLineMaxColumn(c.lineNumber);if(c.column>=d){if(c.lineNumber===n.getLineCount())continue;let h=new b(c.lineNumber,Math.max(1,c.column-1),c.lineNumber+1,1),p=n.getValueInRange(h).split("").reverse().join("");o.push(new Eo(new X(c.lineNumber,Math.max(1,c.column-1),c.lineNumber+1,1),p))}else{let h=new b(c.lineNumber,Math.max(1,c.column-1),c.lineNumber,c.column+1),p=n.getValueInRange(h).split("").reverse().join("");o.push(new nu(h,p,new X(c.lineNumber,c.column+1,c.lineNumber,c.column+1)))}}t.pushUndoStop(),t.executeCommands(this.id,o),t.pushUndoStop()}},zc=class extends F{run(e,t){let i=t.getSelections();if(i===null)return;let n=t.getModel();if(n===null)return;let o=t.getOption(117),r=[];for(let a of i)if(a.isEmpty()){let l=a.getStartPosition(),c=t.getConfiguredWordAtPosition(l);if(!c)continue;let d=new b(l.lineNumber,c.startColumn,l.lineNumber,c.endColumn),h=n.getValueInRange(d);r.push(Ge.replace(d,this._modifyText(h,o)))}else{let l=n.getValueInRange(a);r.push(Ge.replace(a,this._modifyText(l,o)))}t.pushUndoStop(),t.executeEdits(this.id,r),t.pushUndoStop()}},TI=class extends zc{constructor(){super({id:"editor.action.transformToUppercase",label:u("editor.transformToUppercase","Transform to Uppercase"),alias:"Transform to Uppercase",precondition:S.writable})}_modifyText(e,t){return e.toLocaleUpperCase()}},EI=class extends zc{constructor(){super({id:"editor.action.transformToLowercase",label:u("editor.transformToLowercase","Transform to Lowercase"),alias:"Transform to Lowercase",precondition:S.writable})}_modifyText(e,t){return e.toLocaleLowerCase()}},rm=class{constructor(e,t){this._pattern=e,this._flags=t,this._actual=null,this._evaluated=!1}get(){if(!this._evaluated){this._evaluated=!0;try{this._actual=new RegExp(this._pattern,this._flags)}catch(e){}}return this._actual}isSupported(){return this.get()!==null}},gl=class extends zc{constructor(){super({id:"editor.action.transformToTitlecase",label:u("editor.transformToTitlecase","Transform to Title Case"),alias:"Transform to Title Case",precondition:S.writable})}_modifyText(e,t){let i=gl.titleBoundary.get();return i?e.toLocaleLowerCase().replace(i,n=>n.toLocaleUpperCase()):e}};gl.titleBoundary=new rm("(^|[^\\p{L}\\p{N}']|((^|\\P{L})'))\\p{L}","gmu");var Yo=class extends zc{constructor(){super({id:"editor.action.transformToSnakecase",label:u("editor.transformToSnakecase","Transform to Snake Case"),alias:"Transform to Snake Case",precondition:S.writable})}_modifyText(e,t){let i=Yo.caseBoundary.get(),n=Yo.singleLetters.get();return!i||!n?e:e.replace(i,"$1_$2").replace(n,"$1_$2$3").toLocaleLowerCase()}};Yo.caseBoundary=new rm("(\\p{Ll})(\\p{Lu})","gmu");Yo.singleLetters=new rm("(\\p{Lu}|\\p{N})(\\p{Lu})(\\p{Ll})","gmu");I(lI);I(dI);I(cI);I(hI);I(uI);I(pI);I(mI);I(gI);I(Nc);I(fI);I(yI);I(bI);I(SI);I(vI);I(xI);I(CI);I(_I);I(wI);I(TI);I(EI);Yo.caseBoundary.isSupported()&&Yo.singleLetters.isSupported()&&I(Yo);gl.titleBoundary.isSupported()&&I(gl);St();ke();ut();Zn();Le();De();B();Ye();Xt();ue();Ci();tt();ee();He();jt();Re();sn();Q();Ee();mt();Ne();var MR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},II=function(s,e){return function(t,i){e(t,i,s)}},yb=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},kI=new pe("LinkedEditingInputVisible",!1),LI="linked-editing-decoration",Vr=class bb extends z{constructor(e,t,i){super();this.languageConfigurationService=i,this._debounceDuration=200,this._localToDispose=this._register(new R),this._editor=e,this._enabled=!1,this._visibleContextKey=kI.bindTo(t),this._currentDecorations=[],this._languageWordPattern=null,this._currentWordPattern=null,this._ignoreChangeEvent=!1,this._localToDispose=this._register(new R),this._rangeUpdateTriggerPromise=null,this._rangeSyncTriggerPromise=null,this._currentRequest=null,this._currentRequestPosition=null,this._currentRequestModelVersion=null,this._register(this._editor.onDidChangeModel(()=>this.reinitialize(!0))),this._register(this._editor.onDidChangeConfiguration(n=>{(n.hasChanged(62)||n.hasChanged(82))&&this.reinitialize(!1)})),this._register(wh.onDidChange(()=>this.reinitialize(!1))),this._register(this._editor.onDidChangeModelLanguage(()=>this.reinitialize(!0))),this.reinitialize(!0)}static get(e){return e.getContribution(bb.ID)}reinitialize(e){let t=this._editor.getModel(),i=t!==null&&(this._editor.getOption(62)||this._editor.getOption(82))&&wh.has(t);if(i===this._enabled&&!e||(this._enabled=i,this.clearRanges(),this._localToDispose.clear(),!i||t===null))return;this._localToDispose.add(ht.runAndSubscribe(t.onDidChangeLanguageConfiguration,()=>{this._languageWordPattern=this.languageConfigurationService.getLanguageConfiguration(t.getLanguageId()).getWordDefinition()}));let n=new Tn(this._debounceDuration),o=()=>{this._rangeUpdateTriggerPromise=n.trigger(()=>this.updateRanges(),this._debounceDuration)},r=new Tn(0),a=l=>{this._rangeSyncTriggerPromise=r.trigger(()=>this._syncRanges(l))};this._localToDispose.add(this._editor.onDidChangeCursorPosition(()=>{o()})),this._localToDispose.add(this._editor.onDidChangeModelContent(l=>{if(!this._ignoreChangeEvent&&this._currentDecorations.length>0){let c=t.getDecorationRange(this._currentDecorations[0]);if(c&&l.changes.every(d=>c.intersectRanges(d.range))){a(this._currentDecorations);return}}o()})),this._localToDispose.add({dispose:()=>{n.cancel(),r.cancel()}}),this.updateRanges()}_syncRanges(e){if(!this._editor.hasModel()||e!==this._currentDecorations||e.length===0)return;let t=this._editor.getModel(),i=t.getDecorationRange(e[0]);if(!i||i.startLineNumber!==i.endLineNumber)return this.clearRanges();let n=t.getValueInRange(i);if(this._currentWordPattern){let r=n.match(this._currentWordPattern);if((r?r[0].length:0)!==n.length)return this.clearRanges()}let o=[];for(let r=1,a=e.length;r<a;r++){let l=t.getDecorationRange(e[r]);if(!!l)if(l.startLineNumber!==l.endLineNumber)o.push({range:l,text:n});else{let c=t.getValueInRange(l),d=n,h=l.startColumn,p=l.endColumn,m=dr(c,d);h+=m,c=c.substr(m),d=d.substr(m);let f=xh(c,d);p-=f,c=c.substr(0,c.length-f),d=d.substr(0,d.length-f),(h!==p||d.length!==0)&&o.push({range:new b(l.startLineNumber,h,l.endLineNumber,p),text:d})}}if(o.length!==0)try{this._editor.popUndoStop(),this._ignoreChangeEvent=!0;let r=this._editor._getViewModel().getPrevEditOperationType();this._editor.executeEdits("linkedEditing",o),this._editor._getViewModel().setPrevEditOperationType(r)}finally{this._ignoreChangeEvent=!1}}dispose(){this.clearRanges(),super.dispose()}clearRanges(){this._visibleContextKey.set(!1),this._currentDecorations=this._editor.deltaDecorations(this._currentDecorations,[]),this._currentRequest&&(this._currentRequest.cancel(),this._currentRequest=null,this._currentRequestPosition=null)}updateRanges(e=!1){return yb(this,void 0,void 0,function*(){if(!this._editor.hasModel()){this.clearRanges();return}let t=this._editor.getPosition();if(!this._enabled&&!e||this._editor.getSelections().length>1){this.clearRanges();return}let i=this._editor.getModel(),n=i.getVersionId();if(this._currentRequestPosition&&this._currentRequestModelVersion===n){if(t.equals(this._currentRequestPosition))return;if(this._currentDecorations&&this._currentDecorations.length>0){let r=i.getDecorationRange(this._currentDecorations[0]);if(r&&r.containsPosition(t))return}}this._currentRequestPosition=t,this._currentRequestModelVersion=n;let o=Oe(r=>yb(this,void 0,void 0,function*(){try{let a=yield MI(i,t,r);if(o!==this._currentRequest||(this._currentRequest=null,n!==i.getVersionId()))return;let l=[];(a==null?void 0:a.ranges)&&(l=a.ranges),this._currentWordPattern=(a==null?void 0:a.wordPattern)||this._languageWordPattern;let c=!1;for(let h=0,p=l.length;h<p;h++)if(b.containsPosition(l[h],t)){if(c=!0,h!==0){let m=l[h];l.splice(h,1),l.unshift(m)}break}if(!c){this.clearRanges();return}let d=l.map(h=>({range:h,options:bb.DECORATION}));this._visibleContextKey.set(!0),this._currentDecorations=this._editor.deltaDecorations(this._currentDecorations,d)}catch(a){jn(a)||de(a),(this._currentRequest===o||!this._currentRequest)&&this.clearRanges()}}));return this._currentRequest=o,o})}};Vr.ID="editor.contrib.linkedEditing";Vr.DECORATION=xe.register({description:"linked-editing",stickiness:0,className:LI});Vr=MR([II(1,ie),II(2,Dt)],Vr);var PI=class extends F{constructor(){super({id:"editor.action.linkedEditing",label:u("linkedEditing.label","Start Linked Editing"),alias:"Start Linked Editing",precondition:O.and(S.writable,S.hasRenameProvider),kbOpts:{kbExpr:S.editorTextFocus,primary:3132,weight:100}})}runCommand(e,t){let i=e.get(Ve),[n,o]=Array.isArray(t)&&t||[void 0,void 0];return _e.isUri(n)&&U.isIPosition(o)?i.openCodeEditor({resource:n},i.getActiveCodeEditor()).then(r=>{!r||(r.setPosition(o),r.invokeWithinContext(a=>(this.reportTelemetry(a,r),this.run(a,r))))},de):super.runCommand(e,t)}run(e,t){let i=Vr.get(t);return i?Promise.resolve(i.updateRanges(!0)):Promise.resolve()}},DR=ct.bindToContribution(Vr.get);$(new DR({id:"cancelLinkedEditingInput",precondition:kI,handler:s=>s.clearRanges(),kbOpts:{kbExpr:S.editorTextFocus,weight:100+99,primary:9,secondary:[1033]}}));function MI(s,e,t){let i=wh.ordered(s);return vh(i.map(n=>()=>yb(this,void 0,void 0,function*(){try{return yield n.provideLinkedEditingRanges(s,e,t)}catch(o){Ue(o);return}})),n=>!!n&&Pt(n==null?void 0:n.ranges))}var RR=q("editor.linkedEditingBackground",{dark:we.fromHex("#f00").transparent(.3),light:we.fromHex("#f00").transparent(.3),hc:we.fromHex("#f00").transparent(.3)},u("editorLinkedEditingBackground","Background color when the editor auto renames on type."));Me((s,e)=>{let t=s.getColor(RR);t&&e.addRule(`.monaco-editor .${LI} { background: ${t}; border-left-color: ${t}; }`)});wi("_executeLinkedEditingProvider",(s,e)=>MI(s,e,ge.None));J(Vr.ID,Vr);I(PI);ke();ut();Le();B();Yl();Pi();Hi();Xt();ue();jt();Re();St();ut();Le();B();qt();Xt();ee();Re();hr();_t();var DI=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},RI=class{constructor(e,t){this._link=e,this._provider=t}toJSON(){return{range:this.range,url:this.url,tooltip:this.tooltip}}get range(){return this._link.range}get url(){return this._link.url}get tooltip(){return this._link.tooltip}resolve(e){return DI(this,void 0,void 0,function*(){return this._link.url?this._link.url:typeof this._provider.resolveLink=="function"?Promise.resolve(this._provider.resolveLink(this._link,e)).then(t=>(this._link=t||this._link,this._link.url?this.resolve(e):Promise.reject(new Error("missing")))):Promise.reject(new Error("missing"))})}},Oc=class{constructor(e){this._disposables=new R;let t=[];for(let[i,n]of e){let o=i.links.map(r=>new RI(r,n));t=Oc._union(t,o),yh(i)&&this._disposables.add(i)}this.links=t}dispose(){this._disposables.dispose(),this.links.length=0}static _union(e,t){let i=[],n,o,r,a;for(n=0,r=0,o=e.length,a=t.length;n<o&&r<a;){let l=e[n],c=t[r];if(b.areIntersectingOrTouching(l.range,c.range)){n++;continue}b.compareRangesUsingStarts(l.range,c.range)<0?(i.push(l),n++):(i.push(c),r++)}for(;n<o;n++)i.push(e[n]);for(;r<a;r++)i.push(t[r]);return i}};function vb(s,e){let t=[],i=$l.ordered(s).reverse().map((n,o)=>Promise.resolve(n.provideLinks(s,e)).then(r=>{r&&(t[o]=[r,n])},Ue));return Promise.all(i).then(()=>{let n=new Oc(Vn(t));return e.isCancellationRequested?(n.dispose(),new Oc([])):n})}Pe.registerCommand("_executeLinkProvider",(s,...e)=>DI(void 0,void 0,void 0,function*(){let[t,i]=e;qe(t instanceof _e),typeof i!="number"&&(i=0);let n=s.get(Yt).getModel(t);if(!n)return[];let o=yield vb(n,ge.None);if(!o)return[];for(let a=0;a<Math.min(i,o.links.length);a++)yield o.links[a].resolve(ge.None);let r=o.links.slice(0);return o.dispose(),r}));Q();qi();mt();Ne();var AR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},AI=function(s,e){return function(t,i){e(t,i,s)}},FR=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})};function NR(s,e){let t=s.url&&/^command:/i.test(s.url.toString()),i=s.tooltip?s.tooltip:t?u("links.navigate.executeCmd","Execute command"):u("links.navigate.follow","Follow link"),n=e?bi?u("links.navigate.kb.meta.mac","cmd + click"):u("links.navigate.kb.meta","ctrl + click"):bi?u("links.navigate.kb.alt.mac","option + click"):u("links.navigate.kb.alt","alt + click");if(s.url){let o="";if(/^command:/i.test(s.url.toString())){let a=s.url.toString().match(/^command:([^?#]+)/);if(a){let l=a[1];o=` "${u("tooltip.explanation","Execute command {0}",l)}"`}}return new ai("",!0).appendMarkdown(`[${i}](${s.url.toString(!0).replace(/ /g,"%20")}${o}) (${n})`)}else return new ai().appendText(`${i} (${n})`)}var FI={general:xe.register({description:"detected-link",stickiness:1,collapseOnReplaceEdit:!0,inlineClassName:"detected-link"}),active:xe.register({description:"detected-link-active",stickiness:1,collapseOnReplaceEdit:!0,inlineClassName:"detected-link-active"})},js=class{constructor(e,t){this.link=e,this.decorationId=t}static decoration(e,t){return{range:e.range,options:js._getOptions(e,t,!1)}}static _getOptions(e,t,i){let n=Object.assign({},i?FI.active:FI.general);return n.hoverMessage=NR(e,t),n}activate(e,t){e.changeDecorationOptions(this.decorationId,js._getOptions(this.link,t,!0))}deactivate(e,t){e.changeDecorationOptions(this.decorationId,js._getOptions(this.link,t,!1))}},Us=class xb{constructor(e,t,i){this.listenersToRemove=new R,this.editor=e,this.openerService=t,this.notificationService=i;let n=new bs(e);this.listenersToRemove.add(n),this.listenersToRemove.add(n.onMouseMoveOrRelevantKeyDown(([o,r])=>{this._onEditorMouseMove(o,r)})),this.listenersToRemove.add(n.onExecute(o=>{this.onEditorMouseUp(o)})),this.listenersToRemove.add(n.onCancel(o=>{this.cleanUpActiveLinkDecoration()})),this.enabled=e.getOption(63),this.listenersToRemove.add(e.onDidChangeConfiguration(o=>{let r=e.getOption(63);this.enabled!==r&&(this.enabled=r,this.updateDecorations([]),this.stop(),this.beginCompute())})),this.listenersToRemove.add(e.onDidChangeModelContent(o=>this.onChange())),this.listenersToRemove.add(e.onDidChangeModel(o=>this.onModelChanged())),this.listenersToRemove.add(e.onDidChangeModelLanguage(o=>this.onModelLanguageChanged())),this.listenersToRemove.add($l.onDidChange(o=>this.onModelLanguageChanged())),this.timeout=new Ri,this.computePromise=null,this.activeLinksList=null,this.currentOccurrences={},this.activeLinkDecorationId=null,this.beginCompute()}static get(e){return e.getContribution(xb.ID)}onModelChanged(){this.currentOccurrences={},this.activeLinkDecorationId=null,this.stop(),this.beginCompute()}onModelLanguageChanged(){this.stop(),this.beginCompute()}onChange(){this.timeout.setIfNotSet(()=>this.beginCompute(),xb.RECOMPUTE_TIME)}beginCompute(){return FR(this,void 0,void 0,function*(){if(!this.editor.hasModel()||!this.enabled)return;let e=this.editor.getModel();if(!!$l.has(e)){this.activeLinksList&&(this.activeLinksList.dispose(),this.activeLinksList=null),this.computePromise=Oe(t=>vb(e,t));try{this.activeLinksList=yield this.computePromise,this.updateDecorations(this.activeLinksList.links)}catch(t){de(t)}finally{this.computePromise=null}}})}updateDecorations(e){let t=this.editor.getOption(70)==="altKey",i=[],n=Object.keys(this.currentOccurrences);for(let a=0,l=n.length;a<l;a++){let c=n[a],d=this.currentOccurrences[c];i.push(d.decorationId)}let o=[];if(e)for(let a of e)o.push(js.decoration(a,t));let r=this.editor.deltaDecorations(i,o);this.currentOccurrences={},this.activeLinkDecorationId=null;for(let a=0,l=r.length;a<l;a++){let c=new js(e[a],r[a]);this.currentOccurrences[c.decorationId]=c}}_onEditorMouseMove(e,t){let i=this.editor.getOption(70)==="altKey";if(this.isEnabled(e,t)){this.cleanUpActiveLinkDecoration();let n=this.getLinkOccurrence(e.target.position);n&&this.editor.changeDecorations(o=>{n.activate(o,i),this.activeLinkDecorationId=n.decorationId})}else this.cleanUpActiveLinkDecoration()}cleanUpActiveLinkDecoration(){let e=this.editor.getOption(70)==="altKey";if(this.activeLinkDecorationId){let t=this.currentOccurrences[this.activeLinkDecorationId];t&&this.editor.changeDecorations(i=>{t.deactivate(i,e)}),this.activeLinkDecorationId=null}}onEditorMouseUp(e){if(!this.isEnabled(e))return;let t=this.getLinkOccurrence(e.target.position);!t||this.openLinkOccurrence(t,e.hasSideBySideModifier,!0)}openLinkOccurrence(e,t,i=!1){if(!this.openerService)return;let{link:n}=e;n.resolve(ge.None).then(o=>{if(typeof o=="string"&&this.editor.hasModel()){let r=this.editor.getModel().uri;if(r.scheme===xt.file&&o.startsWith(`${xt.file}:`)){let a=_e.parse(o);if(a.scheme===xt.file){let l=fx(a),c=null;l.startsWith("/./")?c=`.${l.substr(1)}`:l.startsWith("//./")&&(c=`.${l.substr(2)}`),c&&(o=bx(r,c))}}}return this.openerService.open(o,{openToSide:t,fromUserGesture:i,allowContributedOpeners:!0,allowCommands:!0})},o=>{let r=o instanceof Error?o.message:o;r==="invalid"?this.notificationService.warn(u("invalid.url","Failed to open this link because it is not well-formed: {0}",n.url.toString())):r==="missing"?this.notificationService.warn(u("missing.url","Failed to open this link because its target is missing.")):de(o)})}getLinkOccurrence(e){if(!this.editor.hasModel()||!e)return null;let t=this.editor.getModel().getDecorationsInRange({startLineNumber:e.lineNumber,startColumn:e.column,endLineNumber:e.lineNumber,endColumn:e.column},0,!0);for(let i of t){let n=this.currentOccurrences[i.id];if(n)return n}return null}isEnabled(e,t){return Boolean(e.target.type===6&&(e.hasTriggerModifier||t&&t.keyCodeIsTriggerKey))}stop(){var e;this.timeout.cancel(),this.activeLinksList&&((e=this.activeLinksList)===null||e===void 0||e.dispose(),this.activeLinksList=null),this.computePromise&&(this.computePromise.cancel(),this.computePromise=null)}dispose(){this.listenersToRemove.dispose(),this.stop(),this.timeout.dispose()}};Us.ID="editor.linkDetector";Us.RECOMPUTE_TIME=1e3;Us=AR([AI(1,bt),AI(2,Ze)],Us);var NI=class extends F{constructor(){super({id:"editor.action.openLink",label:u("label","Open Link"),alias:"Open Link",precondition:void 0})}run(e,t){let i=Us.get(t);if(!i||!t.hasModel())return;let n=t.getSelections();for(let o of n){let r=i.getLinkOccurrence(o.getEndPosition());r&&i.openLinkOccurrence(r,!1)}}};J(Us.ID,Us);I(NI);Me((s,e)=>{let t=s.getColor(La);t&&e.addRule(`.monaco-editor .detected-link-active { color: ${t} !important; }`)});Ln();ke();yo();B();ue();ee();Mt();He();ca();jt();Re();Q();ri();Ee();mt();Ne();function yl(s,e){let t=e.filter(i=>!s.find(n=>n.equals(i)));if(t.length>=1){let i=t.map(o=>`line ${o.viewState.position.lineNumber} column ${o.viewState.position.column}`).join(", "),n=t.length===1?u("cursorAdded","Cursor added: {0}",i):u("cursorsAdded","Cursors added: {0}",i);pv(n)}}var OI=class extends F{constructor(){super({id:"editor.action.insertCursorAbove",label:u("mutlicursor.insertAbove","Add Cursor Above"),alias:"Add Cursor Above",precondition:void 0,kbOpts:{kbExpr:S.editorTextFocus,primary:2576,linux:{primary:1552,secondary:[3088]},weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"3_multi",title:u({key:"miInsertCursorAbove",comment:["&& denotes a mnemonic"]},"&&Add Cursor Above"),order:2}})}run(e,t,i){if(!t.hasModel())return;let n=!0;i&&i.logicalLine===!1&&(n=!1);let o=t._getViewModel();if(o.cursorConfig.readOnly)return;o.pushStackElement();let r=o.getCursorStates();o.setCursorStates(i.source,3,ud.addCursorUp(o,r,n)),o.revealTopMostCursor(i.source),yl(r,o.getCursorStates())}},HI=class extends F{constructor(){super({id:"editor.action.insertCursorBelow",label:u("mutlicursor.insertBelow","Add Cursor Below"),alias:"Add Cursor Below",precondition:void 0,kbOpts:{kbExpr:S.editorTextFocus,primary:2578,linux:{primary:1554,secondary:[3090]},weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"3_multi",title:u({key:"miInsertCursorBelow",comment:["&& denotes a mnemonic"]},"A&&dd Cursor Below"),order:3}})}run(e,t,i){if(!t.hasModel())return;let n=!0;i&&i.logicalLine===!1&&(n=!1);let o=t._getViewModel();if(o.cursorConfig.readOnly)return;o.pushStackElement();let r=o.getCursorStates();o.setCursorStates(i.source,3,ud.addCursorDown(o,r,n)),o.revealBottomMostCursor(i.source),yl(r,o.getCursorStates())}},WI=class extends F{constructor(){super({id:"editor.action.insertCursorAtEndOfEachLineSelected",label:u("mutlicursor.insertAtEndOfEachLineSelected","Add Cursors to Line Ends"),alias:"Add Cursors to Line Ends",precondition:void 0,kbOpts:{kbExpr:S.editorTextFocus,primary:1575,weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"3_multi",title:u({key:"miInsertCursorAtEndOfEachLineSelected",comment:["&& denotes a mnemonic"]},"Add C&&ursors to Line Ends"),order:4}})}getCursorsForSelection(e,t,i){if(!e.isEmpty()){for(let n=e.startLineNumber;n<e.endLineNumber;n++){let o=t.getLineMaxColumn(n);i.push(new X(n,o,n,o))}e.endColumn>1&&i.push(new X(e.endLineNumber,e.endColumn,e.endLineNumber,e.endColumn))}}run(e,t){if(!t.hasModel())return;let i=t.getModel(),n=t.getSelections(),o=t._getViewModel(),r=o.getCursorStates(),a=[];n.forEach(l=>this.getCursorsForSelection(l,i,a)),a.length>0&&t.setSelections(a),yl(r,o.getCursorStates())}},BI=class extends F{constructor(){super({id:"editor.action.addCursorsToBottom",label:u("mutlicursor.addCursorsToBottom","Add Cursors To Bottom"),alias:"Add Cursors To Bottom",precondition:void 0})}run(e,t){if(!t.hasModel())return;let i=t.getSelections(),n=t.getModel().getLineCount(),o=[];for(let l=i[0].startLineNumber;l<=n;l++)o.push(new X(l,i[0].startColumn,l,i[0].endColumn));let r=t._getViewModel(),a=r.getCursorStates();o.length>0&&t.setSelections(o),yl(a,r.getCursorStates())}},VI=class extends F{constructor(){super({id:"editor.action.addCursorsToTop",label:u("mutlicursor.addCursorsToTop","Add Cursors To Top"),alias:"Add Cursors To Top",precondition:void 0})}run(e,t){if(!t.hasModel())return;let i=t.getSelections(),n=[];for(let a=i[0].startLineNumber;a>=1;a--)n.push(new X(a,i[0].startColumn,a,i[0].endColumn));let o=t._getViewModel(),r=o.getCursorStates();n.length>0&&t.setSelections(n),yl(r,o.getCursorStates())}},Hc=class{constructor(e,t,i){this.selections=e,this.revealRange=t,this.revealScrollType=i}},fl=class{constructor(e,t,i,n,o,r,a){this._editor=e,this.findController=t,this.isDisconnectedFromFindController=i,this.searchText=n,this.wholeWord=o,this.matchCase=r,this.currentMatch=a}static create(e,t){if(!e.hasModel())return null;let i=t.getState();if(!e.hasTextFocus()&&i.isRevealed&&i.searchString.length>0)return new fl(e,t,!1,i.searchString,i.wholeWord,i.matchCase,null);let n=!1,o,r,a=e.getSelections();a.length===1&&a[0].isEmpty()?(n=!0,o=!0,r=!0):(o=i.wholeWord,r=i.matchCase);let l=e.getSelection(),c,d=null;if(l.isEmpty()){let h=e.getConfiguredWordAtPosition(l.getStartPosition());if(!h)return null;c=h.word,d=new X(l.startLineNumber,h.startColumn,l.startLineNumber,h.endColumn)}else c=e.getModel().getValueInRange(l).replace(/\r\n/g,`
`);return new fl(e,t,n,c,o,r,d)}addSelectionToNextFindMatch(){if(!this._editor.hasModel())return null;let e=this._getNextMatch();if(!e)return null;let t=this._editor.getSelections();return new Hc(t.concat(e),e,0)}moveSelectionToNextFindMatch(){if(!this._editor.hasModel())return null;let e=this._getNextMatch();if(!e)return null;let t=this._editor.getSelections();return new Hc(t.slice(0,t.length-1).concat(e),e,0)}_getNextMatch(){if(!this._editor.hasModel())return null;if(this.currentMatch){let n=this.currentMatch;return this.currentMatch=null,n}this.findController.highlightFindOptions();let e=this._editor.getSelections(),t=e[e.length-1],i=this._editor.getModel().findNextMatch(this.searchText,t.getEndPosition(),!1,this.matchCase,this.wholeWord?this._editor.getOption(117):null,!1);return i?new X(i.range.startLineNumber,i.range.startColumn,i.range.endLineNumber,i.range.endColumn):null}addSelectionToPreviousFindMatch(){if(!this._editor.hasModel())return null;let e=this._getPreviousMatch();if(!e)return null;let t=this._editor.getSelections();return new Hc(t.concat(e),e,0)}moveSelectionToPreviousFindMatch(){if(!this._editor.hasModel())return null;let e=this._getPreviousMatch();if(!e)return null;let t=this._editor.getSelections();return new Hc(t.slice(0,t.length-1).concat(e),e,0)}_getPreviousMatch(){if(!this._editor.hasModel())return null;if(this.currentMatch){let n=this.currentMatch;return this.currentMatch=null,n}this.findController.highlightFindOptions();let e=this._editor.getSelections(),t=e[e.length-1],i=this._editor.getModel().findPreviousMatch(this.searchText,t.getStartPosition(),!1,this.matchCase,this.wholeWord?this._editor.getOption(117):null,!1);return i?new X(i.range.startLineNumber,i.range.startColumn,i.range.endLineNumber,i.range.endColumn):null}selectAll(){return this._editor.hasModel()?(this.findController.highlightFindOptions(),this._editor.getModel().findMatches(this.searchText,!0,!1,this.matchCase,this.wholeWord?this._editor.getOption(117):null,!1,1073741824)):[]}},Gr=class extends z{constructor(e){super();this._sessionDispose=this._register(new R),this._editor=e,this._ignoreSelectionChange=!1,this._session=null}static get(e){return e.getContribution(Gr.ID)}dispose(){this._endSession(),super.dispose()}_beginSessionIfNeeded(e){if(!this._session){let t=fl.create(this._editor,e);if(!t)return;this._session=t;let i={searchString:this._session.searchText};this._session.isDisconnectedFromFindController&&(i.wholeWordOverride=1,i.matchCaseOverride=1,i.isRegexOverride=2),e.getState().change(i,!1),this._sessionDispose.add(this._editor.onDidChangeCursorSelection(n=>{this._ignoreSelectionChange||this._endSession()})),this._sessionDispose.add(this._editor.onDidBlurEditorText(()=>{this._endSession()})),this._sessionDispose.add(e.getState().onFindReplaceStateChange(n=>{(n.matchCase||n.wholeWord)&&this._endSession()}))}}_endSession(){if(this._sessionDispose.clear(),this._session&&this._session.isDisconnectedFromFindController){let e={wholeWordOverride:0,matchCaseOverride:0,isRegexOverride:0};this._session.findController.getState().change(e,!1)}this._session=null}_setSelections(e){this._ignoreSelectionChange=!0,this._editor.setSelections(e),this._ignoreSelectionChange=!1}_expandEmptyToWord(e,t){if(!t.isEmpty())return t;let i=this._editor.getConfiguredWordAtPosition(t.getStartPosition());return i?new X(t.startLineNumber,i.startColumn,t.startLineNumber,i.endColumn):t}_applySessionResult(e){!e||(this._setSelections(e.selections),e.revealRange&&this._editor.revealRangeInCenterIfOutsideViewport(e.revealRange,e.revealScrollType))}getSession(e){return this._session}addSelectionToNextFindMatch(e){if(!!this._editor.hasModel()){if(!this._session){let t=this._editor.getSelections();if(t.length>1){let n=e.getState().matchCase;if(!YI(this._editor.getModel(),t,n)){let r=this._editor.getModel(),a=[];for(let l=0,c=t.length;l<c;l++)a[l]=this._expandEmptyToWord(r,t[l]);this._editor.setSelections(a);return}}}this._beginSessionIfNeeded(e),this._session&&this._applySessionResult(this._session.addSelectionToNextFindMatch())}}addSelectionToPreviousFindMatch(e){this._beginSessionIfNeeded(e),this._session&&this._applySessionResult(this._session.addSelectionToPreviousFindMatch())}moveSelectionToNextFindMatch(e){this._beginSessionIfNeeded(e),this._session&&this._applySessionResult(this._session.moveSelectionToNextFindMatch())}moveSelectionToPreviousFindMatch(e){this._beginSessionIfNeeded(e),this._session&&this._applySessionResult(this._session.moveSelectionToPreviousFindMatch())}selectAll(e){if(!this._editor.hasModel())return;let t=null,i=e.getState();if(i.isRevealed&&i.searchString.length>0&&i.isRegex)t=this._editor.getModel().findMatches(i.searchString,!0,i.isRegex,i.matchCase,i.wholeWord?this._editor.getOption(117):null,!1,1073741824);else{if(this._beginSessionIfNeeded(e),!this._session)return;t=this._session.selectAll()}if(i.searchScope){let n=i.searchScope,o=[];t.forEach(r=>{n.forEach(a=>{r.range.endLineNumber<=a.endLineNumber&&r.range.startLineNumber>=a.startLineNumber&&o.push(r)})}),t=o}if(t.length>0){let n=this._editor.getSelection();for(let o=0,r=t.length;o<r;o++){let a=t[o];if(a.range.intersectRanges(n)){t[o]=t[0],t[0]=a;break}}this._setSelections(t.map(o=>new X(o.range.startLineNumber,o.range.startColumn,o.range.endLineNumber,o.range.endColumn)))}}};Gr.ID="editor.contrib.multiCursorController";var $s=class extends F{run(e,t){let i=Gr.get(t);if(!i)return;let n=vi.get(t);if(!n)return;let o=t._getViewModel();if(o){let r=o.getCursorStates();this._run(i,n),yl(r,o.getCursorStates())}}},GI=class extends $s{constructor(){super({id:"editor.action.addSelectionToNextFindMatch",label:u("addSelectionToNextFindMatch","Add Selection To Next Find Match"),alias:"Add Selection To Next Find Match",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:2082,weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"3_multi",title:u({key:"miAddSelectionToNextFindMatch",comment:["&& denotes a mnemonic"]},"Add &&Next Occurrence"),order:5}})}_run(e,t){e.addSelectionToNextFindMatch(t)}},jI=class extends $s{constructor(){super({id:"editor.action.addSelectionToPreviousFindMatch",label:u("addSelectionToPreviousFindMatch","Add Selection To Previous Find Match"),alias:"Add Selection To Previous Find Match",precondition:void 0,menuOpts:{menuId:se.MenubarSelectionMenu,group:"3_multi",title:u({key:"miAddSelectionToPreviousFindMatch",comment:["&& denotes a mnemonic"]},"Add P&&revious Occurrence"),order:6}})}_run(e,t){e.addSelectionToPreviousFindMatch(t)}},UI=class extends $s{constructor(){super({id:"editor.action.moveSelectionToNextFindMatch",label:u("moveSelectionToNextFindMatch","Move Last Selection To Next Find Match"),alias:"Move Last Selection To Next Find Match",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:Xe(2089,2082),weight:100}})}_run(e,t){e.moveSelectionToNextFindMatch(t)}},$I=class extends $s{constructor(){super({id:"editor.action.moveSelectionToPreviousFindMatch",label:u("moveSelectionToPreviousFindMatch","Move Last Selection To Previous Find Match"),alias:"Move Last Selection To Previous Find Match",precondition:void 0})}_run(e,t){e.moveSelectionToPreviousFindMatch(t)}},KI=class extends $s{constructor(){super({id:"editor.action.selectHighlights",label:u("selectAllOccurrencesOfFindMatch","Select All Occurrences of Find Match"),alias:"Select All Occurrences of Find Match",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:3114,weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"3_multi",title:u({key:"miSelectHighlights",comment:["&& denotes a mnemonic"]},"Select All &&Occurrences"),order:7}})}_run(e,t){e.selectAll(t)}},qI=class extends $s{constructor(){super({id:"editor.action.changeAll",label:u("changeAll.label","Change All Occurrences"),alias:"Change All Occurrences",precondition:O.and(S.writable,S.editorTextFocus),kbOpts:{kbExpr:S.editorTextFocus,primary:2108,weight:100},contextMenuOpts:{group:"1_modification",order:1.2}})}_run(e,t){e.selectAll(t)}},XI=class{constructor(e,t,i,n,o){this._model=e,this._searchText=t,this._matchCase=i,this._wordSeparators=n,this._modelVersionId=this._model.getVersionId(),this._cachedFindMatches=null,o&&this._model===o._model&&this._searchText===o._searchText&&this._matchCase===o._matchCase&&this._wordSeparators===o._wordSeparators&&this._modelVersionId===o._modelVersionId&&(this._cachedFindMatches=o._cachedFindMatches)}findMatches(){return this._cachedFindMatches===null&&(this._cachedFindMatches=this._model.findMatches(this._searchText,!0,!1,this._matchCase,this._wordSeparators,!1).map(e=>e.range),this._cachedFindMatches.sort(b.compareRangesUsingStarts)),this._cachedFindMatches}},po=class extends z{constructor(e){super();this.editor=e,this._isEnabled=e.getOption(97),this.decorations=[],this.updateSoon=this._register(new $e(()=>this._update(),300)),this.state=null,this._register(e.onDidChangeConfiguration(i=>{this._isEnabled=e.getOption(97)})),this._register(e.onDidChangeCursorSelection(i=>{!this._isEnabled||(i.selection.isEmpty()?i.reason===3?(this.state&&this._setState(null),this.updateSoon.schedule()):this._setState(null):this._update())})),this._register(e.onDidChangeModel(i=>{this._setState(null)})),this._register(e.onDidChangeModelContent(i=>{this._isEnabled&&this.updateSoon.schedule()}));let t=vi.get(e);t&&this._register(t.getState().onFindReplaceStateChange(i=>{this._update()}))}_update(){this._setState(po._createState(this.state,this._isEnabled,this.editor))}static _createState(e,t,i){if(!t||!i.hasModel())return null;let n=i.getSelection();if(n.startLineNumber!==n.endLineNumber)return null;let o=Gr.get(i);if(!o)return null;let r=vi.get(i);if(!r)return null;let a=o.getSession(r);if(!a){let d=i.getSelections();if(d.length>1){let p=r.getState().matchCase;if(!YI(i.getModel(),d,p))return null}a=fl.create(i,r)}if(!a||a.currentMatch||/^[ \t]+$/.test(a.searchText)||a.searchText.length>200)return null;let l=r.getState(),c=l.matchCase;if(l.isRevealed){let d=l.searchString;c||(d=d.toLowerCase());let h=a.searchText;if(c||(h=h.toLowerCase()),d===h&&a.matchCase===l.matchCase&&a.wholeWord===l.wholeWord&&!l.isRegex)return null}return new XI(i.getModel(),a.searchText,a.matchCase,a.wholeWord?i.getOption(117):null,e)}_setState(e){if(this.state=e,!this.state){this.decorations=this.editor.deltaDecorations(this.decorations,[]);return}if(!this.editor.hasModel())return;let t=this.editor.getModel();if(t.isTooLargeForTokenization())return;let i=this.state.findMatches(),n=this.editor.getSelections();n.sort(b.compareRangesUsingStarts);let o=[];for(let l=0,c=0,d=i.length,h=n.length;l<d;){let p=i[l];if(c>=h)o.push(p),l++;else{let m=b.compareRangesUsingStarts(p,n[c]);m<0?((n[c].isEmpty()||!b.areIntersecting(p,n[c]))&&o.push(p),l++):(m>0||l++,c++)}}let r=Ul.has(t)&&this.editor.getOption(72),a=o.map(l=>({range:l,options:r?po._SELECTION_HIGHLIGHT:po._SELECTION_HIGHLIGHT_OVERVIEW}));this.decorations=this.editor.deltaDecorations(this.decorations,a)}dispose(){this._setState(null),super.dispose()}};po.ID="editor.contrib.selectionHighlighter";po._SELECTION_HIGHLIGHT_OVERVIEW=xe.register({description:"selection-highlight-overview",stickiness:1,className:"selectionHighlight",minimap:{color:nt(Pa),position:bo.Inline},overviewRuler:{color:nt(Xh),position:Di.Center}});po._SELECTION_HIGHLIGHT=xe.register({description:"selection-highlight",stickiness:1,className:"selectionHighlight"});function YI(s,e,t){let i=zI(s,e[0],!t);for(let n=1,o=e.length;n<o;n++){let r=e[n];if(r.isEmpty())return!1;let a=zI(s,r,!t);if(i!==a)return!1}return!0}function zI(s,e,t){let i=s.getValueInRange(e);return t?i.toLowerCase():i}J(Gr.ID,Gr);J(po.ID,po);I(OI);I(HI);I(WI);I(GI);I(jI);I(UI);I($I);I(KI);I(qI);I(BI);I(VI);B();ue();He();Re();ut();Le();qt();Xt();tt();Re();Co();_t();Ee();var ZI=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Zo={Visible:new pe("parameterHintsVisible",!1),MultipleSignatures:new pe("parameterHintsMultipleSignatures",!1)};function Cb(s,e,t,i){return ZI(this,void 0,void 0,function*(){let n=ya.ordered(s);for(let o of n)try{let r=yield o.provideSignatureHelp(s,e,i,t);if(r)return r}catch(r){Ue(r)}})}Pe.registerCommand("_executeSignatureHelpProvider",(s,...e)=>ZI(void 0,void 0,void 0,function*(){let[t,i,n]=e;qe(_e.isUri(t)),qe(U.isIPosition(i)),qe(typeof n=="string"||!n);let o=yield s.get(Gt).createModelReference(t);try{let r=yield Cb(o.object.textEditorModel,U.lift(i),{triggerKind:En.Invoke,isRetrigger:!1,triggerCharacter:n},ge.None);return r?(setTimeout(()=>r.dispose(),0),r.value):void 0}finally{o.dispose()}}));Q();Ee();Be();Ae();Ln();xi();De();B();Ye();qt();rn();ke();Le();De();B();Om();Re();var zR=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},jr;(function(s){s.Default={type:0};class e{constructor(n,o){this.request=n,this.previouslyActiveHints=o,this.type=2}}s.Pending=e;class t{constructor(n){this.hints=n,this.type=1}}s.Active=t})(jr||(jr={}));var bl=class extends z{constructor(e,t=bl.DEFAULT_DELAY){super();this._onChangedHints=this._register(new G),this.onChangedHints=this._onChangedHints.event,this.triggerOnType=!1,this._state=jr.Default,this._pendingTriggers=[],this._lastSignatureHelpResult=this._register(new et),this.triggerChars=new xo,this.retriggerChars=new xo,this.triggerId=0,this.editor=e,this.throttledDelayer=new Tn(t),this._register(this.editor.onDidBlurEditorWidget(()=>this.cancel())),this._register(this.editor.onDidChangeConfiguration(()=>this.onEditorConfigurationChange())),this._register(this.editor.onDidChangeModel(i=>this.onModelChanged())),this._register(this.editor.onDidChangeModelLanguage(i=>this.onModelChanged())),this._register(this.editor.onDidChangeCursorSelection(i=>this.onCursorChange(i))),this._register(this.editor.onDidChangeModelContent(i=>this.onModelContentChange())),this._register(ya.onDidChange(this.onModelChanged,this)),this._register(this.editor.onDidType(i=>this.onDidType(i))),this.onEditorConfigurationChange(),this.onModelChanged()}get state(){return this._state}set state(e){this._state.type===2&&this._state.request.cancel(),this._state=e}cancel(e=!1){this.state=jr.Default,this.throttledDelayer.cancel(),e||this._onChangedHints.fire(void 0)}trigger(e,t){let i=this.editor.getModel();if(!i||!ya.has(i))return;let n=++this.triggerId;this._pendingTriggers.push(e),this.throttledDelayer.trigger(()=>this.doTrigger(n),t).catch(de)}next(){if(this.state.type!==1)return;let e=this.state.hints.signatures.length,t=this.state.hints.activeSignature,i=t%e===e-1,n=this.editor.getOption(76).cycle;if((e<2||i)&&!n){this.cancel();return}this.updateActiveSignature(i&&n?0:t+1)}previous(){if(this.state.type!==1)return;let e=this.state.hints.signatures.length,t=this.state.hints.activeSignature,i=t===0,n=this.editor.getOption(76).cycle;if((e<2||i)&&!n){this.cancel();return}this.updateActiveSignature(i&&n?e-1:t-1)}updateActiveSignature(e){this.state.type===1&&(this.state=new jr.Active(Object.assign(Object.assign({},this.state.hints),{activeSignature:e})),this._onChangedHints.fire(this.state.hints))}doTrigger(e){return zR(this,void 0,void 0,function*(){let t=this.state.type===1||this.state.type===2,i=this.getLastActiveHints();if(this.cancel(!0),this._pendingTriggers.length===0)return!1;let n=this._pendingTriggers.reduce(OR);this._pendingTriggers=[];let o={triggerKind:n.triggerKind,triggerCharacter:n.triggerCharacter,isRetrigger:t,activeSignatureHelp:i};if(!this.editor.hasModel())return!1;let r=this.editor.getModel(),a=this.editor.getPosition();this.state=new jr.Pending(Oe(l=>Cb(r,a,o,l)),i);try{let l=yield this.state.request;return e!==this.triggerId?(l==null||l.dispose(),!1):!l||!l.value.signatures||l.value.signatures.length===0?(l==null||l.dispose(),this._lastSignatureHelpResult.clear(),this.cancel(),!1):(this.state=new jr.Active(l.value),this._lastSignatureHelpResult.value=l,this._onChangedHints.fire(this.state.hints),!0)}catch(l){return e===this.triggerId&&(this.state=jr.Default),de(l),!1}})}getLastActiveHints(){switch(this.state.type){case 1:return this.state.hints;case 2:return this.state.previouslyActiveHints;default:return}}get isTriggered(){return this.state.type===1||this.state.type===2||this.throttledDelayer.isTriggered()}onModelChanged(){this.cancel(),this.triggerChars=new xo,this.retriggerChars=new xo;let e=this.editor.getModel();if(!!e)for(let t of ya.ordered(e)){for(let i of t.signatureHelpTriggerCharacters||[])this.triggerChars.add(i.charCodeAt(0)),this.retriggerChars.add(i.charCodeAt(0));for(let i of t.signatureHelpRetriggerCharacters||[])this.retriggerChars.add(i.charCodeAt(0))}}onDidType(e){if(!this.triggerOnType)return;let t=e.length-1,i=e.charCodeAt(t);(this.triggerChars.has(i)||this.isTriggered&&this.retriggerChars.has(i))&&this.trigger({triggerKind:En.TriggerCharacter,triggerCharacter:e.charAt(t)})}onCursorChange(e){e.source==="mouse"?this.cancel():this.isTriggered&&this.trigger({triggerKind:En.ContentChange})}onModelContentChange(){this.isTriggered&&this.trigger({triggerKind:En.ContentChange})}onEditorConfigurationChange(){this.triggerOnType=this.editor.getOption(76).enabled,this.triggerOnType||this.cancel()}dispose(){this.cancel(!0),super.dispose()}};bl.DEFAULT_DELAY=120;function OR(s,e){switch(e.triggerKind){case En.Invoke:return e;case En.ContentChange:return s;case En.TriggerCharacter:default:return e}}Q();Ee();qi();mt();gv();Ne();var HR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},_b=function(s,e){return function(t,i){e(t,i,s)}},Gi=W,WR=Rt("parameter-hints-next",K.chevronDown,u("parameterHintsNextIcon","Icon for show next parameter hint.")),BR=Rt("parameter-hints-previous",K.chevronUp,u("parameterHintsPreviousIcon","Icon for show previous parameter hint.")),Wc=class JI extends z{constructor(e,t,i,n){super();this.editor=e,this.renderDisposeables=this._register(new R),this.visible=!1,this.announcedLabel=null,this.allowEditorOverflow=!0,this.markdownRenderer=this._register(new Ii({editor:e},n,i)),this.model=this._register(new bl(e)),this.keyVisible=Zo.Visible.bindTo(t),this.keyMultipleSignatures=Zo.MultipleSignatures.bindTo(t),this._register(this.model.onChangedHints(o=>{o?(this.show(),this.render(o)):this.hide()}))}createParameterHintDOMNodes(){let e=Gi(".editor-widget.parameter-hints-widget"),t=H(e,Gi(".phwrapper"));t.tabIndex=-1;let i=H(t,Gi(".controls")),n=H(i,Gi(".button"+ot.asCSSSelector(BR))),o=H(i,Gi(".overloads")),r=H(i,Gi(".button"+ot.asCSSSelector(WR)));this._register(Ke(n,"click",p=>{an.stop(p),this.previous()})),this._register(Ke(r,"click",p=>{an.stop(p),this.next()}));let a=Gi(".body"),l=new Na(a,{});this._register(l),t.appendChild(l.getDomNode());let c=H(a,Gi(".signature")),d=H(a,Gi(".docs"));e.style.userSelect="text",this.domNodes={element:e,signature:c,overloads:o,docs:d,scrollbar:l},this.editor.addContentWidget(this),this.hide(),this._register(this.editor.onDidChangeCursorSelection(p=>{this.visible&&this.editor.layoutContentWidget(this)}));let h=()=>{if(!this.domNodes)return;let p=this.editor.getOption(44);this.domNodes.element.style.fontSize=`${p.fontSize}px`,this.domNodes.element.style.lineHeight=`${p.lineHeight/p.fontSize}`};h(),this._register(ht.chain(this.editor.onDidChangeConfiguration.bind(this.editor)).filter(p=>p.hasChanged(44)).on(h,null)),this._register(this.editor.onDidLayoutChange(p=>this.updateMaxHeight())),this.updateMaxHeight()}show(){this.visible||(this.domNodes||this.createParameterHintDOMNodes(),this.keyVisible.set(!0),this.visible=!0,setTimeout(()=>{this.domNodes&&this.domNodes.element.classList.add("visible")},100),this.editor.layoutContentWidget(this))}hide(){this.renderDisposeables.clear(),!!this.visible&&(this.keyVisible.reset(),this.visible=!1,this.announcedLabel=null,this.domNodes&&this.domNodes.element.classList.remove("visible"),this.editor.layoutContentWidget(this))}getPosition(){return this.visible?{position:this.editor.getPosition(),preference:[1,2]}:null}render(e){var t;if(this.renderDisposeables.clear(),!this.domNodes)return;let i=e.signatures.length>1;this.domNodes.element.classList.toggle("multiple",i),this.keyMultipleSignatures.set(i),this.domNodes.signature.innerText="",this.domNodes.docs.innerText="";let n=e.signatures[e.activeSignature];if(!n)return;let o=H(this.domNodes.signature,Gi(".code")),r=this.editor.getOption(44);o.style.fontSize=`${r.fontSize}px`,o.style.fontFamily=r.fontFamily;let a=n.parameters.length>0,l=(t=n.activeParameter)!==null&&t!==void 0?t:e.activeParameter;if(a)this.renderParameters(o,n,l);else{let h=H(o,Gi("span"));h.textContent=n.label}let c=n.parameters[l];if(c==null?void 0:c.documentation){let h=Gi("span.documentation");if(typeof c.documentation=="string")h.textContent=c.documentation;else{let p=this.renderMarkdownDocs(c.documentation);h.appendChild(p.element)}H(this.domNodes.docs,Gi("p",{},h))}if(n.documentation!==void 0)if(typeof n.documentation=="string")H(this.domNodes.docs,Gi("p",{},n.documentation));else{let h=this.renderMarkdownDocs(n.documentation);H(this.domNodes.docs,h.element)}let d=this.hasDocs(n,c);if(this.domNodes.signature.classList.toggle("has-docs",d),this.domNodes.docs.classList.toggle("empty",!d),this.domNodes.overloads.textContent=String(e.activeSignature+1).padStart(e.signatures.length.toString().length,"0")+"/"+e.signatures.length,c){let h="",p=n.parameters[l];Array.isArray(p.label)?h=n.label.substring(p.label[0],p.label[1]):h=p.label,p.documentation&&(h+=typeof p.documentation=="string"?`, ${p.documentation}`:`, ${p.documentation.value}`),n.documentation&&(h+=typeof n.documentation=="string"?`, ${n.documentation}`:`, ${n.documentation.value}`),this.announcedLabel!==h&&(Ct(u("hint","{0}, hint",h)),this.announcedLabel=h)}this.editor.layoutContentWidget(this),this.domNodes.scrollbar.scanDomNode()}renderMarkdownDocs(e){let t=this.renderDisposeables.add(this.markdownRenderer.render(e,{asyncRenderCallback:()=>{var i;(i=this.domNodes)===null||i===void 0||i.scrollbar.scanDomNode()}}));return t.element.classList.add("markdown-docs"),t}hasDocs(e,t){return!!(t&&typeof t.documentation=="string"&&Ol(t.documentation).length>0||t&&typeof t.documentation=="object"&&Ol(t.documentation).value.length>0||e.documentation&&typeof e.documentation=="string"&&Ol(e.documentation).length>0||e.documentation&&typeof e.documentation=="object"&&Ol(e.documentation.value).length>0)}renderParameters(e,t,i){let[n,o]=this.getParameterLabelOffsets(t,i),r=document.createElement("span");r.textContent=t.label.substring(0,n);let a=document.createElement("span");a.textContent=t.label.substring(n,o),a.className="parameter active";let l=document.createElement("span");l.textContent=t.label.substring(o),H(e,r,a,l)}getParameterLabelOffsets(e,t){let i=e.parameters[t];if(i){if(Array.isArray(i.label))return i.label;if(i.label.length){let n=new RegExp(`(\\W|^)${So(i.label)}(?=\\W|$)`,"g");n.test(e.label);let o=n.lastIndex-i.label.length;return o>=0?[o,n.lastIndex]:[0,0]}else return[0,0]}else return[0,0]}next(){this.editor.focus(),this.model.next()}previous(){this.editor.focus(),this.model.previous()}cancel(){this.model.cancel()}getDomNode(){return this.domNodes||this.createParameterHintDOMNodes(),this.domNodes.element}getId(){return JI.ID}trigger(e){this.model.trigger(e,0)}updateMaxHeight(){if(!this.domNodes)return;let t=`${Math.max(this.editor.getLayoutInfo().height/4,250)}px`;this.domNodes.element.style.maxHeight=t;let i=this.domNodes.element.getElementsByClassName("phwrapper");i.length&&(i[0].style.maxHeight=t)}};Wc.ID="editor.widget.parameterHintsWidget";Wc=HR([_b(1,ie),_b(2,bt),_b(3,ft)],Wc);var VR=q("editorHoverWidget.highlightForeground",{dark:br,light:br,hc:br},u("editorHoverWidgetHighlightForeground","Foreground color of the active item in the parameter hint."));Me((s,e)=>{let t=s.getColor(ka);if(t){let c=s.type===Rh.HIGH_CONTRAST?2:1;e.addRule(`.monaco-editor .parameter-hints-widget { border: ${c}px solid ${t}; }`),e.addRule(`.monaco-editor .parameter-hints-widget.multiple .body { border-left: 1px solid ${t.transparent(.5)}; }`),e.addRule(`.monaco-editor .parameter-hints-widget .signature.has-docs { border-bottom: 1px solid ${t.transparent(.5)}; }`)}let i=s.getColor(To);i&&e.addRule(`.monaco-editor .parameter-hints-widget { background-color: ${i}; }`);let n=s.getColor(gr);n&&e.addRule(`.monaco-editor .parameter-hints-widget a { color: ${n}; }`);let o=s.getColor(fr);o&&e.addRule(`.monaco-editor .parameter-hints-widget a:hover { color: ${o}; }`);let r=s.getColor(Ia);r&&e.addRule(`.monaco-editor .parameter-hints-widget { color: ${r}; }`);let a=s.getColor(Hh);a&&e.addRule(`.monaco-editor .parameter-hints-widget code { background-color: ${a}; }`);let l=s.getColor(VR);l&&e.addRule(`.monaco-editor .parameter-hints-widget .parameter.active { color: ${l}}`)});var GR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},jR=function(s,e){return function(t,i){e(t,i,s)}},Ks=class QI extends z{constructor(e,t){super();this.editor=e,this.widget=this._register(t.createInstance(Wc,this.editor))}static get(e){return e.getContribution(QI.ID)}cancel(){this.widget.cancel()}previous(){this.widget.previous()}next(){this.widget.next()}trigger(e){this.widget.trigger(e)}};Ks.ID="editor.controller.parameterHints";Ks=GR([jR(1,le)],Ks);var ek=class extends F{constructor(){super({id:"editor.action.triggerParameterHints",label:u("parameterHints.trigger.label","Trigger Parameter Hints"),alias:"Trigger Parameter Hints",precondition:S.hasSignatureHelpProvider,kbOpts:{kbExpr:S.editorTextFocus,primary:3082,weight:100}})}run(e,t){let i=Ks.get(t);i&&i.trigger({triggerKind:En.Invoke})}};J(Ks.ID,Ks);I(ek);var wb=100+75,Tb=ct.bindToContribution(Ks.get);$(new Tb({id:"closeParameterHints",precondition:Zo.Visible,handler:s=>s.cancel(),kbOpts:{weight:wb,kbExpr:S.focus,primary:9,secondary:[1033]}}));$(new Tb({id:"showPrevParameterHint",precondition:O.and(Zo.Visible,Zo.MultipleSignatures),handler:s=>s.previous(),kbOpts:{weight:wb,kbExpr:S.focus,primary:16,secondary:[528],mac:{primary:16,secondary:[528,302]}}}));$(new Tb({id:"showNextParameterHint",precondition:O.and(Zo.Visible,Zo.MultipleSignatures),handler:s=>s.next(),kbOpts:{weight:wb,kbExpr:S.focus,primary:18,secondary:[530],mac:{primary:18,secondary:[530,300]}}}));Ln();ke();ut();Le();B();qt();Xt();bd();ue();Ci();tt();ee();He();Re();uP();Q();TP();Ee();Be();Ph();hs();Ca();B();tt();Q();Ee();Ki();mt();Ne();var UR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Eb=function(s,e){return function(t,i){e(t,i,s)}},Bc=new pe("renameInputVisible",!1,u("renameInputVisible","Whether the rename input widget is visible")),sm=class{constructor(e,t,i,n,o){this._editor=e,this._acceptKeybindings=t,this._themeService=i,this._keybindingService=n,this._disposables=new R,this.allowEditorOverflow=!0,this._visibleContextKey=Bc.bindTo(o),this._editor.addContentWidget(this),this._disposables.add(this._editor.onDidChangeConfiguration(r=>{r.hasChanged(44)&&this._updateFont()})),this._disposables.add(i.onDidColorThemeChange(this._updateStyles,this))}dispose(){this._disposables.dispose(),this._editor.removeContentWidget(this)}getId(){return"__renameInputWidget"}getDomNode(){if(!this._domNode){this._domNode=document.createElement("div"),this._domNode.className="monaco-editor rename-box",this._input=document.createElement("input"),this._input.className="rename-input",this._input.type="text",this._input.setAttribute("aria-label",u("renameAriaLabel","Rename input. Type new name and press Enter to commit.")),this._domNode.appendChild(this._input),this._label=document.createElement("div"),this._label.className="rename-label",this._domNode.appendChild(this._label);let e=()=>{var t,i;let[n,o]=this._acceptKeybindings;this._keybindingService.lookupKeybinding(n),this._label.innerText=u({key:"label",comment:['placeholders are keybindings, e.g "F2 to Rename, Shift+F2 to Preview"']},"{0} to Rename, {1} to Preview",(t=this._keybindingService.lookupKeybinding(n))===null||t===void 0?void 0:t.getLabel(),(i=this._keybindingService.lookupKeybinding(o))===null||i===void 0?void 0:i.getLabel())};e(),this._disposables.add(this._keybindingService.onDidUpdateKeybindings(e)),this._updateFont(),this._updateStyles(this._themeService.getColorTheme())}return this._domNode}_updateStyles(e){var t,i,n,o;if(!this._input||!this._domNode)return;let r=e.getColor(yr);this._domNode.style.backgroundColor=String((t=e.getColor(cn))!==null&&t!==void 0?t:""),this._domNode.style.boxShadow=r?` 0 0 8px 2px ${r}`:"",this._domNode.style.color=String((i=e.getColor(Bh))!==null&&i!==void 0?i:""),this._input.style.backgroundColor=String((n=e.getColor(Wh))!==null&&n!==void 0?n:"");let a=e.getColor(Vh);this._input.style.borderWidth=a?"1px":"0px",this._input.style.borderStyle=a?"solid":"none",this._input.style.borderColor=(o=a==null?void 0:a.toString())!==null&&o!==void 0?o:"none"}_updateFont(){if(!this._input||!this._label)return;let e=this._editor.getOption(44);this._input.style.fontFamily=e.fontFamily,this._input.style.fontWeight=e.fontWeight,this._input.style.fontSize=`${e.fontSize}px`,this._label.style.fontSize=`${e.fontSize*.8}px`}getPosition(){return this._visible?{position:this._position,preference:[2,1]}:null}afterRender(e){e||this.cancelInput(!0)}acceptInput(e){this._currentAcceptInput&&this._currentAcceptInput(e)}cancelInput(e){this._currentCancelInput&&this._currentCancelInput(e)}getInput(e,t,i,n,o,r){this._domNode.classList.toggle("preview",o),this._position=new U(e.startLineNumber,e.startColumn),this._input.value=t,this._input.setAttribute("selectionStart",i.toString()),this._input.setAttribute("selectionEnd",n.toString()),this._input.size=Math.max((e.endColumn-e.startColumn)*1.1,20);let a=new R;return new Promise(l=>{this._currentCancelInput=c=>(this._currentAcceptInput=void 0,this._currentCancelInput=void 0,l(c),!0),this._currentAcceptInput=c=>{if(this._input.value.trim().length===0||this._input.value===t){this.cancelInput(!0);return}this._currentAcceptInput=void 0,this._currentCancelInput=void 0,l({newName:this._input.value,wantsPreview:o&&c})},r.onCancellationRequested(()=>this.cancelInput(!0)),a.add(this._editor.onDidBlurEditorWidget(()=>this.cancelInput(!1))),this._show()}).finally(()=>{a.dispose(),this._hide()})}_show(){this._editor.revealLineInCenterIfOutsideViewport(this._position.lineNumber,0),this._visible=!0,this._visibleContextKey.set(!0),this._editor.layoutContentWidget(this),setTimeout(()=>{this._input.focus(),this._input.setSelectionRange(parseInt(this._input.getAttribute("selectionStart")),parseInt(this._input.getAttribute("selectionEnd")))},100)}_hide(){this._visible=!1,this._visibleContextKey.reset(),this._editor.layoutContentWidget(this)}};sm=UR([Eb(2,Nt),Eb(3,rt),Eb(4,ie)],sm);var $R=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Sl=function(s,e){return function(t,i){e(t,i,s)}},qs=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},am=class{constructor(e,t){this.model=e,this.position=t,this._providerRenameIdx=0,this._providers=FS.ordered(e)}hasProvider(){return this._providers.length>0}resolveRenameLocation(e){return qs(this,void 0,void 0,function*(){let t=[];for(this._providerRenameIdx=0;this._providerRenameIdx<this._providers.length;this._providerRenameIdx++){let n=this._providers[this._providerRenameIdx];if(!n.resolveRenameLocation)break;let o=yield n.resolveRenameLocation(this.model,this.position,e);if(!!o){if(o.rejectReason){t.push(o.rejectReason);continue}return o}}let i=this.model.getWordAtPosition(this.position);return i?{range:new b(this.position.lineNumber,i.startColumn,this.position.lineNumber,i.endColumn),text:i.word,rejectReason:t.length>0?t.join(`
`):void 0}:{range:b.fromPositions(this.position),text:"",rejectReason:t.length>0?t.join(`
`):void 0}})}provideRenameEdits(e,t){return qs(this,void 0,void 0,function*(){return this._provideRenameEdits(e,this._providerRenameIdx,[],t)})}_provideRenameEdits(e,t,i,n){return qs(this,void 0,void 0,function*(){let o=this._providers[t];if(!o)return{edits:[],rejectReason:i.join(`
`)};let r=yield o.provideRenameEdits(this.model,this.position,e,n);if(r){if(r.rejectReason)return this._provideRenameEdits(e,t+1,i.concat(r.rejectReason),n)}else return this._provideRenameEdits(e,t+1,i.concat(u("no result","No result.")),n);return r})}};function KR(s,e,t){return qs(this,void 0,void 0,function*(){let i=new am(s,e),n=yield i.resolveRenameLocation(ge.None);return(n==null?void 0:n.rejectReason)?{edits:[],rejectReason:n.rejectReason}:i.provideRenameEdits(t,ge.None)})}var Xs=class tk{constructor(e,t,i,n,o,r,a){this.editor=e,this._instaService=t,this._notificationService=i,this._bulkEditService=n,this._progressService=o,this._logService=r,this._configService=a,this._dispoableStore=new R,this._cts=new Ft,this._renameInputField=this._dispoableStore.add(new pa(()=>this._dispoableStore.add(this._instaService.createInstance(sm,this.editor,["acceptRenameInput","acceptRenameInputWithPreview"]))))}static get(e){return e.getContribution(tk.ID)}dispose(){this._dispoableStore.dispose(),this._cts.dispose(!0)}run(){var e,t;return qs(this,void 0,void 0,function*(){if(this._cts.dispose(!0),!this.editor.hasModel())return;let i=this.editor.getPosition(),n=new am(this.editor.getModel(),i);if(!n.hasProvider())return;this._cts=new yd(this.editor,5);let o;try{let p=n.resolveRenameLocation(this._cts.token);this._progressService.showWhile(p,250),o=yield p}catch(p){(e=Qt.get(this.editor))===null||e===void 0||e.showMessage(p||u("resolveRenameLocationFailed","An unknown error occurred while resolving rename location"),i);return}if(!o)return;if(o.rejectReason){(t=Qt.get(this.editor))===null||t===void 0||t.showMessage(o.rejectReason,i);return}if(this._cts.token.isCancellationRequested)return;this._cts.dispose(),this._cts=new yd(this.editor,5,o.range);let r=this.editor.getSelection(),a=0,l=o.text.length;!b.isEmpty(r)&&!b.spansMultipleLines(r)&&b.containsRange(o.range,r)&&(a=Math.max(0,r.startColumn-o.range.startColumn),l=Math.min(o.range.endColumn,r.endColumn)-o.range.startColumn);let c=this._bulkEditService.hasPreviewHandler()&&this._configService.getValue(this.editor.getModel().uri,"editor.rename.enablePreview"),d=yield this._renameInputField.value.getInput(o.range,o.text,a,l,c,this._cts.token);if(typeof d=="boolean"){d&&this.editor.focus();return}this.editor.focus();let h=ha(n.provideRenameEdits(d.newName,this._cts.token),this._cts.token).then(p=>qs(this,void 0,void 0,function*(){if(!(!p||!this.editor.hasModel())){if(p.rejectReason){this._notificationService.info(p.rejectReason);return}this.editor.setSelection(b.fromPositions(this.editor.getSelection().getPosition())),this._bulkEditService.apply(uu.convert(p),{editor:this.editor,showPreview:d.wantsPreview,label:u("label","Renaming '{0}'",o==null?void 0:o.text),quotableLabel:u("quotableLabel","Renaming {0}",o==null?void 0:o.text)}).then(m=>{m.ariaSummary&&Ct(u("aria","Successfully renamed '{0}' to '{1}'. Summary: {2}",o.text,d.newName,m.ariaSummary))}).catch(m=>{this._notificationService.error(u("rename.failedApply","Rename failed to apply edits")),this._logService.error(m)})}}),p=>{this._notificationService.error(u("rename.failed","Rename failed to compute edits")),this._logService.error(p)});return this._progressService.showWhile(h,250),h})}acceptRenameInput(e){this._renameInputField.value.acceptInput(e)}cancelRenameInput(){this._renameInputField.value.cancelInput(!0)}};Xs.ID="editor.contrib.renameController";Xs=$R([Sl(1,le),Sl(2,Ze),Sl(3,hu),Sl(4,Mo),Sl(5,pr),Sl(6,XS)],Xs);var ik=class extends F{constructor(){super({id:"editor.action.rename",label:u("rename.label","Rename Symbol"),alias:"Rename Symbol",precondition:O.and(S.writable,S.hasRenameProvider),kbOpts:{kbExpr:S.editorTextFocus,primary:60,weight:100},contextMenuOpts:{group:"1_modification",order:1.1}})}runCommand(e,t){let i=e.get(Ve),[n,o]=Array.isArray(t)&&t||[void 0,void 0];return _e.isUri(n)&&U.isIPosition(o)?i.openCodeEditor({resource:n},i.getActiveCodeEditor()).then(r=>{!r||(r.setPosition(o),r.invokeWithinContext(a=>(this.reportTelemetry(a,r),this.run(a,r))))},de):super.runCommand(e,t)}run(e,t){let i=Xs.get(t);return i?i.run():Promise.resolve()}};J(Xs.ID,Xs);I(ik);var Ib=ct.bindToContribution(Xs.get);$(new Ib({id:"acceptRenameInput",precondition:Bc,handler:s=>s.acceptRenameInput(!1),kbOpts:{weight:100+99,kbExpr:S.focus,primary:3}}));$(new Ib({id:"acceptRenameInputWithPreview",precondition:O.and(Bc,O.has("config.editor.rename.enablePreview")),handler:s=>s.acceptRenameInput(!0),kbOpts:{weight:100+99,kbExpr:S.focus,primary:1024+3}}));$(new Ib({id:"cancelRenameInput",precondition:Bc,handler:s=>s.cancelRenameInput(),kbOpts:{weight:100+99,kbExpr:S.focus,primary:9,secondary:[1033]}}));wi("_executeDocumentRenameProvider",function(s,e,...t){let[i]=t;return qe(typeof i=="string"),KR(s,e,i)});wi("_executePrepareRename",function(s,e){return qs(this,void 0,void 0,function*(){let i=yield new am(s,e).resolveRenameLocation(ge.None);if(i==null?void 0:i.rejectReason)throw new Error(i.rejectReason);return i})});ln.as(Tx.Configuration).registerConfiguration({id:"editor",properties:{"editor.rename.enablePreview":{scope:5,description:u("enablePreview","Enable/disable the ability to preview changes before renaming"),default:!0,type:"boolean"}}});St();ut();Le();ue();tt();ee();Mt();He();Re();Ye();ee();var kb=class{provideSelectionRanges(e,t){let i=[];for(let n of t){let o=[];i.push(o),this._addInWordRanges(o,e,n),this._addWordRanges(o,e,n),this._addWhitespaceLine(o,e,n),o.push({range:e.getFullModelRange()})}return i}_addInWordRanges(e,t,i){let n=t.getWordAtPosition(i);if(!n)return;let{word:o,startColumn:r}=n,a=i.column-r,l=a,c=a,d=0;for(;l>=0;l--){let h=o.charCodeAt(l);if(l!==a&&(h===95||h===45))break;if(Lm(h)&&Pm(d))break;d=h}for(l+=1;c<o.length;c++){let h=o.charCodeAt(c);if(Pm(h)&&Lm(d))break;if(h===95||h===45)break;d=h}l<c&&e.push({range:new b(i.lineNumber,r+l,i.lineNumber,r+c)})}_addWordRanges(e,t,i){let n=t.getWordAtPosition(i);n&&e.push({range:new b(i.lineNumber,n.startColumn,i.lineNumber,n.endColumn)})}_addWhitespaceLine(e,t,i){t.getLineLength(i.lineNumber)>0&&t.getLineFirstNonWhitespaceColumn(i.lineNumber)===0&&t.getLineLastNonWhitespaceColumn(i.lineNumber)===0&&e.push({range:new b(i.lineNumber,1,i.lineNumber,t.getLineMaxColumn(i.lineNumber))})}};Q();ri();_t();var Lb=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},lm=class{constructor(e,t){this.index=e,this.ranges=t}mov(e){let t=this.index+(e?1:-1);if(t<0||t>=this.ranges.length)return this;let i=new lm(t,this.ranges);return i.ranges[t].equalsRange(this.ranges[this.index])?i.mov(e):i}},Ys=class{constructor(e){this._editor=e,this._ignoreSelection=!1}static get(e){return e.getContribution(Ys.ID)}dispose(){var e;(e=this._selectionListener)===null||e===void 0||e.dispose()}run(e){return Lb(this,void 0,void 0,function*(){if(!this._editor.hasModel())return;let t=this._editor.getSelections(),i=this._editor.getModel();if(!Eh.has(i)||(this._state||(yield rk(i,t.map(o=>o.getPosition()),this._editor.getOption(102),ge.None).then(o=>{var r;if(!(!Pt(o)||o.length!==t.length)&&!(!this._editor.hasModel()||!Yr(this._editor.getSelections(),t,(a,l)=>a.equalsSelection(l)))){for(let a=0;a<o.length;a++)o[a]=o[a].filter(l=>l.containsPosition(t[a].getStartPosition())&&l.containsPosition(t[a].getEndPosition())),o[a].unshift(t[a]);this._state=o.map(a=>new lm(0,a)),(r=this._selectionListener)===null||r===void 0||r.dispose(),this._selectionListener=this._editor.onDidChangeCursorPosition(()=>{var a;this._ignoreSelection||((a=this._selectionListener)===null||a===void 0||a.dispose(),this._state=void 0)})}})),!this._state))return;this._state=this._state.map(o=>o.mov(e));let n=this._state.map(o=>X.fromPositions(o.ranges[o.index].getStartPosition(),o.ranges[o.index].getEndPosition()));this._ignoreSelection=!0;try{this._editor.setSelections(n)}finally{this._ignoreSelection=!1}})}};Ys.ID="editor.contrib.smartSelectController";var Pb=class extends F{constructor(e,t){super(t);this._forward=e}run(e,t){return Lb(this,void 0,void 0,function*(){let i=Ys.get(t);i&&(yield i.run(this._forward))})}},nk=class extends Pb{constructor(){super(!0,{id:"editor.action.smartSelect.expand",label:u("smartSelect.expand","Expand Selection"),alias:"Expand Selection",precondition:void 0,kbOpts:{kbExpr:S.editorTextFocus,primary:1553,mac:{primary:3345,secondary:[1297]},weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"1_basic",title:u({key:"miSmartSelectGrow",comment:["&& denotes a mnemonic"]},"&&Expand Selection"),order:2}})}};Pe.registerCommandAlias("editor.action.smartSelect.grow","editor.action.smartSelect.expand");var ok=class extends Pb{constructor(){super(!1,{id:"editor.action.smartSelect.shrink",label:u("smartSelect.shrink","Shrink Selection"),alias:"Shrink Selection",precondition:void 0,kbOpts:{kbExpr:S.editorTextFocus,primary:1551,mac:{primary:3343,secondary:[1295]},weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"1_basic",title:u({key:"miSmartSelectShrink",comment:["&& denotes a mnemonic"]},"&&Shrink Selection"),order:3}})}};J(Ys.ID,Ys);I(nk);I(ok);Eh.register("*",new kb);function rk(s,e,t,i){return Lb(this,void 0,void 0,function*(){let n=Eh.all(s);n.length===1&&n.unshift(new ci);let o=[],r=[];for(let a of n)o.push(Promise.resolve(a.provideSelectionRanges(s,e,i)).then(l=>{if(Pt(l)&&l.length===e.length)for(let c=0;c<e.length;c++){r[c]||(r[c]=[]);for(let d of l[c])b.isIRange(d.range)&&b.containsPosition(d.range,e[c])&&r[c].push(b.lift(d.range))}},Ue));return yield Promise.all(o),r.map(a=>{if(a.length===0)return[];a.sort((h,p)=>U.isBefore(h.getStartPosition(),p.getStartPosition())?1:U.isBefore(p.getStartPosition(),h.getStartPosition())||U.isBefore(h.getEndPosition(),p.getEndPosition())?-1:U.isBefore(p.getEndPosition(),h.getEndPosition())?1:0);let l=[],c;for(let h of a)(!c||b.containsRange(h,c)&&!b.equalsRange(h,c))&&(l.push(h),c=h);if(!t.selectLeadingAndTrailingWhitespace)return l;let d=[l[0]];for(let h=1;h<l.length;h++){let p=l[h-1],m=l[h];if(m.startLineNumber!==p.startLineNumber||m.endLineNumber!==p.endLineNumber){let f=new b(p.startLineNumber,s.getLineFirstNonWhitespaceColumn(p.startLineNumber),p.endLineNumber,s.getLineLastNonWhitespaceColumn(p.endLineNumber));f.containsRange(p)&&!f.equalsRange(p)&&m.containsRange(f)&&!m.equalsRange(f)&&d.push(f);let v=new b(p.startLineNumber,1,p.endLineNumber,s.getLineMaxColumn(p.endLineNumber));v.containsRange(p)&&!v.equalsRange(f)&&m.containsRange(v)&&!m.equalsRange(v)&&d.push(v)}d.push(m)}return d})})}yv("_executeSelectionRangeProvider",function(s,...e){let[t]=e;return rk(s,t,{selectLeadingAndTrailingWhitespace:!0},ge.None)});Wl();ue();Q();var sk=class extends F{constructor(){super({id:"editor.action.forceRetokenize",label:u("forceRetokenize","Developer: Force Retokenize"),alias:"Developer: Force Retokenize",precondition:void 0})}run(e,t){if(!t.hasModel())return;let i=t.getModel();i.resetTokenization();let n=new on(!0);i.forceTokenization(i.getLineCount()),n.stop(),console.log(`tokenization took ${n.elapsed()}`)}};I(sk);Mb();B();Hi();ue();Ci();Q();var qR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},ak=function(s,e){return function(t,i){e(t,i,s)}},XR=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},lk="ignoreUnusualLineTerminators";function YR(s,e,t){s.setModelProperty(e.uri,lk,t)}function ZR(s,e){return s.getModelProperty(e.uri,lk)}var Vc=class extends z{constructor(e,t,i){super();this._editor=e,this._dialogService=t,this._codeEditorService=i,this._config=this._editor.getOption(114),this._register(this._editor.onDidChangeConfiguration(n=>{n.hasChanged(114)&&(this._config=this._editor.getOption(114),this._checkForUnusualLineTerminators())})),this._register(this._editor.onDidChangeModel(()=>{this._checkForUnusualLineTerminators()})),this._register(this._editor.onDidChangeModelContent(n=>{n.isUndoing||this._checkForUnusualLineTerminators()}))}_checkForUnusualLineTerminators(){return XR(this,void 0,void 0,function*(){if(this._config==="off"||!this._editor.hasModel())return;let e=this._editor.getModel();if(!e.mightContainUnusualLineTerminators()||ZR(this._codeEditorService,e)===!0||this._editor.getOption(81))return;if(this._config==="auto"){e.removeUnusualLineTerminators(this._editor.getSelections());return}if(!(yield this._dialogService.confirm({title:u("unusualLineTerminators.title","Unusual Line Terminators"),message:u("unusualLineTerminators.message","Detected unusual line terminators"),detail:u("unusualLineTerminators.detail","The file '{0}' contains one or more unusual line terminator characters, like Line Separator (LS) or Paragraph Separator (PS).\n\nIt is recommended to remove them from the file. This can be configured via `editor.unusualLineTerminators`.",Jt(e.uri)),primaryButton:u("unusualLineTerminators.fix","Remove Unusual Line Terminators"),secondaryButton:u("unusualLineTerminators.ignore","Ignore")})).confirmed){YR(this._codeEditorService,e,!0);return}e.removeUnusualLineTerminators(this._editor.getSelections())})}};Vc.ID="editor.contrib.unusualLineTerminatorsDetector";Vc=qR([ak(1,Oa),ak(2,Ve)],Vc);J(Vc.ID,Vc);var Uae=aa(dk());Ln();St();ke();ut();Le();B();ue();ee();He();ca();jt();Re();Q();Ee();mt();Ne();var QR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},eA=function(s,e){return function(t,i){e(t,i,s)}},tA=q("editor.wordHighlightBackground",{dark:"#575757B8",light:"#57575740",hc:null},u("wordHighlight","Background color of a symbol during read-access, like reading a variable. The color must not be opaque so as not to hide underlying decorations."),!0),iA=q("editor.wordHighlightStrongBackground",{dark:"#004972B8",light:"#0e639c40",hc:null},u("wordHighlightStrong","Background color of a symbol during write-access, like writing to a variable. The color must not be opaque so as not to hide underlying decorations."),!0),nA=q("editor.wordHighlightBorder",{light:null,dark:null,hc:rs},u("wordHighlightBorder","Border color of a symbol during read-access, like reading a variable.")),oA=q("editor.wordHighlightStrongBorder",{light:null,dark:null,hc:rs},u("wordHighlightStrongBorder","Border color of a symbol during write-access, like writing to a variable.")),rA=q("editorOverviewRuler.wordHighlightForeground",{dark:"#A0A0A0CC",light:"#A0A0A0CC",hc:"#A0A0A0CC"},u("overviewRulerWordHighlightForeground","Overview ruler marker color for symbol highlights. The color must not be opaque so as not to hide underlying decorations."),!0),sA=q("editorOverviewRuler.wordHighlightStrongForeground",{dark:"#C0A0C0CC",light:"#C0A0C0CC",hc:"#C0A0C0CC"},u("overviewRulerWordHighlightStrongForeground","Overview ruler marker color for write-access symbol highlights. The color must not be opaque so as not to hide underlying decorations."),!0),cm=new pe("hasWordHighlights",!1);function ck(s,e,t){let i=Ul.ordered(s);return vh(i.map(n=>()=>Promise.resolve(n.provideDocumentHighlights(s,e,t)).then(void 0,Ue)),Pt)}var Db=class{constructor(e,t,i){this._wordRange=this._getCurrentWordRange(e,t),this.result=Oe(n=>this._compute(e,t,i,n))}_getCurrentWordRange(e,t){let i=e.getWordAtPosition(t.getPosition());return i?new b(t.startLineNumber,i.startColumn,t.startLineNumber,i.endColumn):null}isValid(e,t,i){let n=t.startLineNumber,o=t.startColumn,r=t.endColumn,a=this._getCurrentWordRange(e,t),l=Boolean(this._wordRange&&this._wordRange.equalsRange(a));for(let c=0,d=i.length;!l&&c<d;c++){let h=e.getDecorationRange(i[c]);h&&h.startLineNumber===n&&h.startColumn<=o&&h.endColumn>=r&&(l=!0)}return l}cancel(){this.result.cancel()}},hk=class extends Db{_compute(e,t,i,n){return ck(e,t.getPosition(),n).then(o=>o||[])}},uk=class extends Db{constructor(e,t,i){super(e,t,i);this._selectionIsEmpty=t.isEmpty()}_compute(e,t,i,n){return ua(250,n).then(()=>{if(!t.isEmpty())return[];let o=e.getWordAtPosition(t.getPosition());return!o||o.word.length>1e3?[]:e.findMatches(o.word,!0,!1,!0,i,!1).map(a=>({range:a.range,kind:_h.Text}))})}isValid(e,t,i){let n=t.isEmpty();return this._selectionIsEmpty!==n?!1:super.isValid(e,t,i)}};function aA(s,e,t){return Ul.has(s)?new hk(s,e,t):new uk(s,e,t)}wi("_executeDocumentHighlights",(s,e)=>ck(s,e,ge.None));var Js=class{constructor(e,t){this.toUnhook=new R,this.workerRequestTokenId=0,this.workerRequestCompleted=!1,this.workerRequestValue=[],this.lastCursorPositionChangeTime=0,this.renderDecorationsTimer=-1,this.editor=e,this._hasWordHighlights=cm.bindTo(t),this._ignorePositionChangeEvent=!1,this.occurrencesHighlight=this.editor.getOption(72),this.model=this.editor.getModel(),this.toUnhook.add(e.onDidChangeCursorPosition(i=>{this._ignorePositionChangeEvent||!this.occurrencesHighlight||this._onPositionChanged(i)})),this.toUnhook.add(e.onDidChangeModelContent(i=>{this._stopAll()})),this.toUnhook.add(e.onDidChangeConfiguration(i=>{let n=this.editor.getOption(72);this.occurrencesHighlight!==n&&(this.occurrencesHighlight=n,this._stopAll())})),this._decorationIds=[],this.workerRequestTokenId=0,this.workerRequest=null,this.workerRequestCompleted=!1,this.lastCursorPositionChangeTime=0,this.renderDecorationsTimer=-1}hasDecorations(){return this._decorationIds.length>0}restore(){!this.occurrencesHighlight||this._run()}_getSortedHighlights(){return Vn(this._decorationIds.map(e=>this.model.getDecorationRange(e)).sort(b.compareRangesUsingStarts))}moveNext(){let e=this._getSortedHighlights(),i=(e.findIndex(o=>o.containsPosition(this.editor.getPosition()))+1)%e.length,n=e[i];try{this._ignorePositionChangeEvent=!0,this.editor.setPosition(n.getStartPosition()),this.editor.revealRangeInCenterIfOutsideViewport(n);let o=this._getWord();if(o){let r=this.editor.getModel().getLineContent(n.startLineNumber);Ct(`${r}, ${i+1} of ${e.length} for '${o.word}'`)}}finally{this._ignorePositionChangeEvent=!1}}moveBack(){let e=this._getSortedHighlights(),i=(e.findIndex(o=>o.containsPosition(this.editor.getPosition()))-1+e.length)%e.length,n=e[i];try{this._ignorePositionChangeEvent=!0,this.editor.setPosition(n.getStartPosition()),this.editor.revealRangeInCenterIfOutsideViewport(n);let o=this._getWord();if(o){let r=this.editor.getModel().getLineContent(n.startLineNumber);Ct(`${r}, ${i+1} of ${e.length} for '${o.word}'`)}}finally{this._ignorePositionChangeEvent=!1}}_removeDecorations(){this._decorationIds.length>0&&(this._decorationIds=this.editor.deltaDecorations(this._decorationIds,[]),this._hasWordHighlights.set(!1))}_stopAll(){this._removeDecorations(),this.renderDecorationsTimer!==-1&&(clearTimeout(this.renderDecorationsTimer),this.renderDecorationsTimer=-1),this.workerRequest!==null&&(this.workerRequest.cancel(),this.workerRequest=null),this.workerRequestCompleted||(this.workerRequestTokenId++,this.workerRequestCompleted=!0)}_onPositionChanged(e){if(!this.occurrencesHighlight){this._stopAll();return}if(e.reason!==3){this._stopAll();return}this._run()}_getWord(){let e=this.editor.getSelection(),t=e.startLineNumber,i=e.startColumn;return this.model.getWordAtPosition({lineNumber:t,column:i})}_run(){let e=this.editor.getSelection();if(e.startLineNumber!==e.endLineNumber){this._stopAll();return}let t=e.startColumn,i=e.endColumn,n=this._getWord();if(!n||n.startColumn>t||n.endColumn<i){this._stopAll();return}let o=this.workerRequest&&this.workerRequest.isValid(this.model,e,this._decorationIds);if(this.lastCursorPositionChangeTime=new Date().getTime(),o)this.workerRequestCompleted&&this.renderDecorationsTimer!==-1&&(clearTimeout(this.renderDecorationsTimer),this.renderDecorationsTimer=-1,this._beginRenderDecorations());else{this._stopAll();let r=++this.workerRequestTokenId;this.workerRequestCompleted=!1,this.workerRequest=aA(this.model,this.editor.getSelection(),this.editor.getOption(117)),this.workerRequest.result.then(a=>{r===this.workerRequestTokenId&&(this.workerRequestCompleted=!0,this.workerRequestValue=a||[],this._beginRenderDecorations())},de)}}_beginRenderDecorations(){let e=new Date().getTime(),t=this.lastCursorPositionChangeTime+250;e>=t?(this.renderDecorationsTimer=-1,this.renderDecorations()):this.renderDecorationsTimer=setTimeout(()=>{this.renderDecorations()},t-e)}renderDecorations(){this.renderDecorationsTimer=-1;let e=[];for(let t of this.workerRequestValue)t.range&&e.push({range:t.range,options:Js._getDecorationOptions(t.kind)});this._decorationIds=this.editor.deltaDecorations(this._decorationIds,e),this._hasWordHighlights.set(this.hasDecorations())}static _getDecorationOptions(e){return e===_h.Write?this._WRITE_OPTIONS:e===_h.Text?this._TEXT_OPTIONS:this._REGULAR_OPTIONS}dispose(){this._stopAll(),this.toUnhook.dispose()}};Js._WRITE_OPTIONS=xe.register({description:"word-highlight-strong",stickiness:1,className:"wordHighlightStrong",overviewRuler:{color:nt(sA),position:Di.Center},minimap:{color:nt(Pa),position:bo.Inline}});Js._TEXT_OPTIONS=xe.register({description:"selection-highlight",stickiness:1,className:"selectionHighlight",overviewRuler:{color:nt(Xh),position:Di.Center},minimap:{color:nt(Pa),position:bo.Inline}});Js._REGULAR_OPTIONS=xe.register({description:"word-highlight",stickiness:1,className:"wordHighlight",overviewRuler:{color:nt(rA),position:Di.Center},minimap:{color:nt(Pa),position:bo.Inline}});var Zs=class pk extends z{constructor(e,t){super();this.wordHighlighter=null;let i=()=>{e.hasModel()&&(this.wordHighlighter=new Js(e,t))};this._register(e.onDidChangeModel(n=>{this.wordHighlighter&&(this.wordHighlighter.dispose(),this.wordHighlighter=null),i()})),i()}static get(e){return e.getContribution(pk.ID)}saveViewState(){return!!(this.wordHighlighter&&this.wordHighlighter.hasDecorations())}moveNext(){this.wordHighlighter&&this.wordHighlighter.moveNext()}moveBack(){this.wordHighlighter&&this.wordHighlighter.moveBack()}restoreViewState(e){this.wordHighlighter&&e&&this.wordHighlighter.restore()}dispose(){this.wordHighlighter&&(this.wordHighlighter.dispose(),this.wordHighlighter=null),super.dispose()}};Zs.ID="editor.contrib.wordHighlighter";Zs=QR([eA(1,ie)],Zs);var Rb=class extends F{constructor(e,t){super(t);this._isNext=e}run(e,t){let i=Zs.get(t);!i||(this._isNext?i.moveNext():i.moveBack())}},mk=class extends Rb{constructor(){super(!0,{id:"editor.action.wordHighlight.next",label:u("wordHighlight.next.label","Go to Next Symbol Highlight"),alias:"Go to Next Symbol Highlight",precondition:cm,kbOpts:{kbExpr:S.editorTextFocus,primary:65,weight:100}})}},gk=class extends Rb{constructor(){super(!1,{id:"editor.action.wordHighlight.prev",label:u("wordHighlight.previous.label","Go to Previous Symbol Highlight"),alias:"Go to Previous Symbol Highlight",precondition:cm,kbOpts:{kbExpr:S.editorTextFocus,primary:1089,weight:100}})}},fk=class extends F{constructor(){super({id:"editor.action.wordHighlight.trigger",label:u("wordHighlight.trigger.label","Trigger Symbol Highlight"),alias:"Trigger Symbol Highlight",precondition:cm.toNegated(),kbOpts:{kbExpr:S.editorTextFocus,primary:0,weight:100}})}run(e,t,i){let n=Zs.get(t);!n||n.restoreViewState(!0)}};J(Zs.ID,Zs);I(mk);I(gk);I(fk);Me((s,e)=>{let t=s.getColor(Nv);t&&(e.addRule(`.monaco-editor .focused .selectionHighlight { background-color: ${t}; }`),e.addRule(`.monaco-editor .selectionHighlight { background-color: ${t.transparent(.5)}; }`));let i=s.getColor(tA);i&&e.addRule(`.monaco-editor .wordHighlight { background-color: ${i}; }`);let n=s.getColor(iA);n&&e.addRule(`.monaco-editor .wordHighlightStrong { background-color: ${n}; }`);let o=s.getColor(zv);o&&e.addRule(`.monaco-editor .selectionHighlight { border: 1px ${s.type==="hc"?"dotted":"solid"} ${o}; box-sizing: border-box; }`);let r=s.getColor(nA);r&&e.addRule(`.monaco-editor .wordHighlight { border: 1px ${s.type==="hc"?"dashed":"solid"} ${r}; box-sizing: border-box; }`);let a=s.getColor(oA);a&&e.addRule(`.monaco-editor .wordHighlightStrong { border: 1px ${s.type==="hc"?"dashed":"solid"} ${a}; box-sizing: border-box; }`)});ue();cP();tt();ee();Mt();He();sn();Q();Ee();var vl=class extends ct{constructor(e){super(e);this._inSelectionMode=e.inSelectionMode,this._wordNavigationType=e.wordNavigationType}runEditorCommand(e,t,i){if(!t.hasModel())return;let n=ur(t.getOption(117)),o=t.getModel(),a=t.getSelections().map(l=>{let c=new U(l.positionLineNumber,l.positionColumn),d=this._move(n,o,c,this._wordNavigationType);return this._moveTo(l,d,this._inSelectionMode)});if(o.pushStackElement(),t._getViewModel().setCursorStates("moveWordCommand",3,a.map(l=>Cx.fromModelSelection(l))),a.length===1){let l=new U(a[0].positionLineNumber,a[0].positionColumn);t.revealPosition(l,0)}}_moveTo(e,t,i){return i?new X(e.selectionStartLineNumber,e.selectionStartColumn,t.lineNumber,t.column):new X(t.lineNumber,t.column,t.lineNumber,t.column)}},Jo=class extends vl{_move(e,t,i,n){return Aa.moveWordLeft(e,t,i,n)}},Qo=class extends vl{_move(e,t,i,n){return Aa.moveWordRight(e,t,i,n)}},yk=class extends Jo{constructor(){super({inSelectionMode:!1,wordNavigationType:0,id:"cursorWordStartLeft",precondition:void 0})}},bk=class extends Jo{constructor(){super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordEndLeft",precondition:void 0})}},Sk=class extends Jo{constructor(){var e;super({inSelectionMode:!1,wordNavigationType:1,id:"cursorWordLeft",precondition:void 0,kbOpts:{kbExpr:O.and(S.textInputFocus,(e=O.and(td,fd))===null||e===void 0?void 0:e.negate()),primary:2063,mac:{primary:527},weight:100}})}},vk=class extends Jo{constructor(){super({inSelectionMode:!0,wordNavigationType:0,id:"cursorWordStartLeftSelect",precondition:void 0})}},xk=class extends Jo{constructor(){super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordEndLeftSelect",precondition:void 0})}},Ck=class extends Jo{constructor(){var e;super({inSelectionMode:!0,wordNavigationType:1,id:"cursorWordLeftSelect",precondition:void 0,kbOpts:{kbExpr:O.and(S.textInputFocus,(e=O.and(td,fd))===null||e===void 0?void 0:e.negate()),primary:3087,mac:{primary:1551},weight:100}})}},_k=class extends Jo{constructor(){super({inSelectionMode:!1,wordNavigationType:3,id:"cursorWordAccessibilityLeft",precondition:void 0})}_move(e,t,i,n){return super._move(ur(Hl.wordSeparators.defaultValue),t,i,n)}},wk=class extends Jo{constructor(){super({inSelectionMode:!0,wordNavigationType:3,id:"cursorWordAccessibilityLeftSelect",precondition:void 0})}_move(e,t,i,n){return super._move(ur(Hl.wordSeparators.defaultValue),t,i,n)}},Tk=class extends Qo{constructor(){super({inSelectionMode:!1,wordNavigationType:0,id:"cursorWordStartRight",precondition:void 0})}},Ek=class extends Qo{constructor(){var e;super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordEndRight",precondition:void 0,kbOpts:{kbExpr:O.and(S.textInputFocus,(e=O.and(td,fd))===null||e===void 0?void 0:e.negate()),primary:2065,mac:{primary:529},weight:100}})}},Ik=class extends Qo{constructor(){super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordRight",precondition:void 0})}},kk=class extends Qo{constructor(){super({inSelectionMode:!0,wordNavigationType:0,id:"cursorWordStartRightSelect",precondition:void 0})}},Lk=class extends Qo{constructor(){var e;super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordEndRightSelect",precondition:void 0,kbOpts:{kbExpr:O.and(S.textInputFocus,(e=O.and(td,fd))===null||e===void 0?void 0:e.negate()),primary:3089,mac:{primary:1553},weight:100}})}},Pk=class extends Qo{constructor(){super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordRightSelect",precondition:void 0})}},Mk=class extends Qo{constructor(){super({inSelectionMode:!1,wordNavigationType:3,id:"cursorWordAccessibilityRight",precondition:void 0})}_move(e,t,i,n){return super._move(ur(Hl.wordSeparators.defaultValue),t,i,n)}},Dk=class extends Qo{constructor(){super({inSelectionMode:!0,wordNavigationType:3,id:"cursorWordAccessibilityRightSelect",precondition:void 0})}_move(e,t,i,n){return super._move(ur(Hl.wordSeparators.defaultValue),t,i,n)}},xl=class extends ct{constructor(e){super(e);this._whitespaceHeuristics=e.whitespaceHeuristics,this._wordNavigationType=e.wordNavigationType}runEditorCommand(e,t,i){let n=e.get(Dt);if(!t.hasModel())return;let o=ur(t.getOption(117)),r=t.getModel(),a=t.getSelections(),l=t.getOption(5),c=t.getOption(8),d=n.getLanguageConfiguration(r.getLanguageId()).getAutoClosingPairs(),h=t._getViewModel(),p=a.map(m=>{let f=this._delete({wordSeparators:o,model:r,selection:m,whitespaceHeuristics:this._whitespaceHeuristics,autoClosingDelete:t.getOption(6),autoClosingBrackets:l,autoClosingQuotes:c,autoClosingPairs:d,autoClosedCharacters:h.getCursorAutoClosedCharacters()},this._wordNavigationType);return new Eo(f,"")});t.pushUndoStop(),t.executeCommands(this.id,p),t.pushUndoStop()}},hm=class extends xl{_delete(e,t){let i=Aa.deleteWordLeft(e,t);return i||new b(1,1,1,1)}},um=class extends xl{_delete(e,t){let i=Aa.deleteWordRight(e,t);if(i)return i;let n=e.model.getLineCount(),o=e.model.getLineMaxColumn(n);return new b(n,o,n,o)}},Rk=class extends hm{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:0,id:"deleteWordStartLeft",precondition:S.writable})}},Ak=class extends hm{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:2,id:"deleteWordEndLeft",precondition:S.writable})}},Fk=class extends hm{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:0,id:"deleteWordLeft",precondition:S.writable,kbOpts:{kbExpr:S.textInputFocus,primary:2049,mac:{primary:513},weight:100}})}},Nk=class extends um{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:0,id:"deleteWordStartRight",precondition:S.writable})}},zk=class extends um{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:2,id:"deleteWordEndRight",precondition:S.writable})}},Ok=class extends um{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:2,id:"deleteWordRight",precondition:S.writable,kbOpts:{kbExpr:S.textInputFocus,primary:2068,mac:{primary:532},weight:100}})}},Hk=class extends F{constructor(){super({id:"deleteInsideWord",precondition:S.writable,label:u("deleteInsideWord","Delete Word"),alias:"Delete Word"})}run(e,t,i){if(!t.hasModel())return;let n=ur(t.getOption(117)),o=t.getModel(),a=t.getSelections().map(l=>{let c=Aa.deleteInsideWord(n,o,l);return new Eo(c,"")});t.pushUndoStop(),t.executeCommands(this.id,a),t.pushUndoStop()}};$(new yk);$(new bk);$(new Sk);$(new vk);$(new xk);$(new Ck);$(new Tk);$(new Ek);$(new Ik);$(new kk);$(new Lk);$(new Pk);$(new _k);$(new wk);$(new Mk);$(new Dk);$(new Rk);$(new Ak);$(new Fk);$(new Nk);$(new zk);$(new Ok);I(Hk);ue();ee();He();_t();var Wk=class extends xl{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:0,id:"deleteWordPartLeft",precondition:S.writable,kbOpts:{kbExpr:S.textInputFocus,primary:0,mac:{primary:769},weight:100}})}_delete(e,t){let i=hd.deleteWordPartLeft(e);return i||new b(1,1,1,1)}},Bk=class extends xl{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:2,id:"deleteWordPartRight",precondition:S.writable,kbOpts:{kbExpr:S.textInputFocus,primary:0,mac:{primary:788},weight:100}})}_delete(e,t){let i=hd.deleteWordPartRight(e);if(i)return i;let n=e.model.getLineCount(),o=e.model.getLineMaxColumn(n);return new b(n,o,n,o)}},Ab=class extends vl{_move(e,t,i,n){return hd.moveWordPartLeft(e,t,i)}},Vk=class extends Ab{constructor(){super({inSelectionMode:!1,wordNavigationType:0,id:"cursorWordPartLeft",precondition:void 0,kbOpts:{kbExpr:S.textInputFocus,primary:0,mac:{primary:783},weight:100}})}};Pe.registerCommandAlias("cursorWordPartStartLeft","cursorWordPartLeft");var Gk=class extends Ab{constructor(){super({inSelectionMode:!0,wordNavigationType:0,id:"cursorWordPartLeftSelect",precondition:void 0,kbOpts:{kbExpr:S.textInputFocus,primary:0,mac:{primary:1807},weight:100}})}};Pe.registerCommandAlias("cursorWordPartStartLeftSelect","cursorWordPartLeftSelect");var Fb=class extends vl{_move(e,t,i,n){return hd.moveWordPartRight(e,t,i)}},jk=class extends Fb{constructor(){super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordPartRight",precondition:void 0,kbOpts:{kbExpr:S.textInputFocus,primary:0,mac:{primary:785},weight:100}})}},Uk=class extends Fb{constructor(){super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordPartRightSelect",precondition:void 0,kbOpts:{kbExpr:S.textInputFocus,primary:0,mac:{primary:1809},weight:100}})}};$(new Wk);$(new Bk);$(new Vk);$(new Gk);$(new jk);$(new Uk);Cr();var the=aa(Zk());Ae();B();ue();Pi();var gm=class extends z{constructor(e){super();this.editor=e,this.widget=null,sh&&(this._register(e.onDidChangeConfiguration(()=>this.update())),this.update())}update(){let e=!this.editor.getOption(81);!this.widget&&e?this.widget=new $c(this.editor):this.widget&&!e&&(this.widget.dispose(),this.widget=null)}dispose(){super.dispose(),this.widget&&(this.widget.dispose(),this.widget=null)}};gm.ID="editor.contrib.iPadShowKeyboard";var $c=class extends z{constructor(e){super();this.editor=e,this._domNode=document.createElement("textarea"),this._domNode.className="iPadShowKeyboard",this._register(Ke(this._domNode,"touchstart",t=>{this.editor.focus()})),this._register(Ke(this._domNode,"focus",t=>{this.editor.focus()})),this.editor.addOverlayWidget(this)}dispose(){this.editor.removeOverlayWidget(this),super.dispose()}getId(){return $c.ID}getDomNode(){return this._domNode}getPosition(){return{preference:1}}};$c.ID="editor.contrib.ShowKeyboardWidget";J(gm.ID,gm);var nhe=aa(iL());Ca();Cr();B();Q();Ca();var pA=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},mA=function(s,e){return function(t,i){e(t,i,s)}},Xc=class fm{constructor(e){this.quickInputService=e,this.registry=ln.as(eo.Quickaccess)}provide(e){let t=new R;t.add(e.onDidAccept(()=>{let[o]=e.selectedItems;o&&this.quickInputService.quickAccess.show(o.prefix,{preserveValue:!0})})),t.add(e.onDidChangeValue(o=>{let r=this.registry.getQuickAccessProvider(o.substr(fm.PREFIX.length));r&&r.prefix&&r.prefix!==fm.PREFIX&&this.quickInputService.quickAccess.show(r.prefix,{preserveValue:!0})}));let{editorProviders:i,globalProviders:n}=this.getQuickAccessProviders();return e.items=i.length===0||n.length===0?[...i.length===0?n:i]:[{label:u("globalCommands","global commands"),type:"separator"},...n,{label:u("editorCommands","editor commands"),type:"separator"},...i],t}getQuickAccessProviders(){let e=[],t=[];for(let i of this.registry.getQuickAccessProviders().sort((n,o)=>n.prefix.localeCompare(o.prefix)))if(i.prefix!==fm.PREFIX)for(let n of i.helpEntries){let o=n.prefix||i.prefix,r=o||"\u2026";(n.needsEditor?t:e).push({prefix:o,label:r,ariaLabel:u("helpPickAriaLabel","{0}, {1}",r,n.description),description:n.description})}return{editorProviders:t,globalProviders:e}}};Xc.PREFIX="?";Xc=pA([mA(0,Wi)],Xc);ln.as(eo.Quickaccess).registerQuickAccessProvider({ctor:Xc,prefix:"",helpEntries:[{description:Dx.helpQuickAccessActionLabel,needsEditor:!0}]});B();gg();dS();B();qt();gg();ca();Qh();Ne();var Yc=class{constructor(e){this.options=e,this.rangeHighlightDecorationId=void 0}provide(e,t){var i;let n=new R;e.canAcceptInBackground=!!((i=this.options)===null||i===void 0?void 0:i.canAcceptInBackground),e.matchOnLabel=e.matchOnDescription=e.matchOnDetail=e.sortByLabel=!1;let o=n.add(new et);return o.value=this.doProvide(e,t),n.add(this.onDidActiveTextEditorControlChange(()=>{o.value=void 0,o.value=this.doProvide(e,t)})),n}doProvide(e,t){let i=new R,n=this.activeTextEditorControl;if(n&&this.canProvideWithTextEditor(n)){let o={editor:n},r=wu(n);if(r){let a=Mi(n.saveViewState());i.add(r.onDidChangeCursorPosition(()=>{a=Mi(n.saveViewState())})),o.restoreViewState=()=>{a&&n===this.activeTextEditorControl&&n.restoreViewState(a)},i.add(fh(t.onCancellationRequested)(()=>{var l;return(l=o.restoreViewState)===null||l===void 0?void 0:l.call(o)}))}i.add(We(()=>this.clearDecorations(n))),i.add(this.provideWithTextEditor(o,e,t))}else i.add(this.provideWithoutTextEditor(e,t));return i}canProvideWithTextEditor(e){return!0}gotoLocation({editor:e},t){e.setSelection(t.range),e.revealRangeInCenter(t.range,0),t.preserveFocus||e.focus()}getModel(e){var t;return cC(e)?(t=e.getModel())===null||t===void 0?void 0:t.modified:e.getModel()}addDecorations(e,t){e.changeDecorations(i=>{let n=[];this.rangeHighlightDecorationId&&(n.push(this.rangeHighlightDecorationId.overviewRulerDecorationId),n.push(this.rangeHighlightDecorationId.rangeHighlightId),this.rangeHighlightDecorationId=void 0);let o=[{range:t,options:{description:"quick-access-range-highlight",className:"rangeHighlight",isWholeLine:!0}},{range:t,options:{description:"quick-access-range-highlight-overview",overviewRuler:{color:nt(cx),position:Di.Full}}}],[r,a]=i.deltaDecorations(n,o);this.rangeHighlightDecorationId={rangeHighlightId:r,overviewRulerDecorationId:a}})}clearDecorations(e){let t=this.rangeHighlightDecorationId;t&&(e.changeDecorations(i=>{i.deltaDecorations([t.overviewRulerDecorationId,t.rangeHighlightId],[])}),this.rangeHighlightDecorationId=void 0)}};Q();var wl=class extends Yc{constructor(){super({canAcceptInBackground:!0})}provideWithoutTextEditor(e){let t=u("cannotRunGotoLine","Open a text editor first to go to a line.");return e.items=[{label:t}],e.ariaLabel=t,z.None}provideWithTextEditor(e,t,i){let n=e.editor,o=new R;o.add(t.onDidAccept(l=>{let[c]=t.selectedItems;if(c){if(!this.isValidLineNumber(n,c.lineNumber))return;this.gotoLocation(e,{range:this.toRange(c.lineNumber,c.column),keyMods:t.keyMods,preserveFocus:l.inBackground}),l.inBackground||t.hide()}}));let r=()=>{let l=this.parsePosition(n,t.value.trim().substr(wl.PREFIX.length)),c=this.getPickLabel(n,l.lineNumber,l.column);if(t.items=[{lineNumber:l.lineNumber,column:l.column,label:c}],t.ariaLabel=c,!this.isValidLineNumber(n,l.lineNumber)){this.clearDecorations(n);return}let d=this.toRange(l.lineNumber,l.column);n.revealRangeInCenter(d,0),this.addDecorations(n,d)};r(),o.add(t.onDidChangeValue(()=>r()));let a=wu(n);return a&&a.getOptions().get(60).renderType===2&&(a.updateOptions({lineNumbers:"on"}),o.add(We(()=>a.updateOptions({lineNumbers:"relative"})))),o}toRange(e=1,t=1){return{startLineNumber:e,startColumn:t,endLineNumber:e,endColumn:t}}parsePosition(e,t){let i=t.split(/,|:|#/).map(o=>parseInt(o,10)).filter(o=>!isNaN(o)),n=this.lineCount(e)+1;return{lineNumber:i[0]>0?i[0]:n+i[0],column:i[1]}}getPickLabel(e,t,i){if(this.isValidLineNumber(e,t))return this.isValidColumn(e,t,i)?u("gotoLineColumnLabel","Go to line {0} and character {1}.",t,i):u("gotoLineLabel","Go to line {0}.",t);let n=e.getPosition()||{lineNumber:1,column:1},o=this.lineCount(e);return o>1?u("gotoLineLabelEmptyWithLimit","Current Line: {0}, Character: {1}. Type a line number between 1 and {2} to navigate to.",n.lineNumber,n.column,o):u("gotoLineLabelEmpty","Current Line: {0}, Character: {1}. Type a line number to navigate to.",n.lineNumber,n.column)}isValidLineNumber(e,t){return!t||typeof t!="number"?!1:t>0&&t<=this.lineCount(e)}isValidColumn(e,t,i){if(!i||typeof i!="number")return!1;let n=this.getModel(e);if(!n)return!1;let o={lineNumber:t,column:i};return n.validatePosition(o).equals(o)}lineCount(e){var t,i;return(i=(t=this.getModel(e))===null||t===void 0?void 0:t.getLineCount())!==null&&i!==void 0?i:0}};wl.PREFIX=":";Ca();Ci();qt();Cr();De();ue();He();var gA=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},fA=function(s,e){return function(t,i){e(t,i,s)}},Zc=class extends wl{constructor(e){super();this.editorService=e,this.onDidActiveTextEditorControlChange=ht.None}get activeTextEditorControl(){return Mi(this.editorService.getFocusedCodeEditor())}};Zc=gA([fA(0,Ve)],Zc);ln.as(eo.Quickaccess).registerQuickAccessProvider({ctor:Zc,prefix:Zc.PREFIX,helpEntries:[{description:ag.gotoLineActionLabel,needsEditor:!0}]});var nL=class extends F{constructor(){super({id:"editor.action.gotoLine",label:ag.gotoLineActionLabel,alias:"Go to Line/Column...",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:2085,mac:{primary:293},weight:100}})}run(e){e.get(Wi).quickAccess.show(Zc.PREFIX)}};I(nL);ke();ut();xi();uS();Pi();Ye();var sL=[void 0,[]];function bm(s,e,t=0,i=0){let n=e;return n.values&&n.values.length>1?yA(s,n.values,t,i):aL(s,e,t,i)}function yA(s,e,t,i){let n=0,o=[];for(let r of e){let[a,l]=aL(s,r,t,i);if(typeof a!="number")return sL;n+=a,o.push(...l)}return[n,bA(o)]}function aL(s,e,t,i){let n=mu(e.original,e.originalLowercase,t,s,s.toLowerCase(),i,!0);return n?[n[0],us(n)]:sL}var Tde=Object.freeze({score:0});function bA(s){let e=s.sort((n,o)=>n.start-o.start),t=[],i;for(let n of e)!i||!SA(i,n)?(i=n,t.push(n)):(i.start=Math.min(i.start,n.start),i.end=Math.max(i.end,n.end));return t}function SA(s,e){return!(s.end<e.start||e.end<s.start)}function oL(s){return s.startsWith('"')&&s.endsWith('"')}var lL=" ";function ym(s){typeof s!="string"&&(s="");let e=s.toLowerCase(),{pathNormalized:t,normalized:i,normalizedLowercase:n}=rL(s),o=t.indexOf(Sh)>=0,r=oL(s),a,l=s.split(lL);if(l.length>1)for(let c of l){let d=oL(c),{pathNormalized:h,normalized:p,normalizedLowercase:m}=rL(c);p&&(a||(a=[]),a.push({original:c,originalLowercase:c.toLowerCase(),pathNormalized:h,normalized:p,normalizedLowercase:m,expectContiguousMatch:d}))}return{original:s,originalLowercase:e,pathNormalized:t,normalized:i,normalizedLowercase:n,values:a,containsPathSeparator:o,expectContiguousMatch:r}}function rL(s){let e;fo?e=s.replace(/\//g,Sh):e=s.replace(/\\/g,Sh);let t=SS(e).replace(/\s|"/g,"");return{pathNormalized:e,normalized:t,normalizedLowercase:t.toLowerCase()}}function Nb(s){return Array.isArray(s)?ym(s.map(e=>e.original).join(lL)):ym(s.original)}B();Ye();ee();Re();im();Q();var vA=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},xA=function(s,e){return function(t,i){e(t,i,s)}},Jc=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},tn=class Hb extends Yc{constructor(e,t=Object.create(null)){super(t);this._outlineModelService=e,this.options=t,this.options.canAcceptInBackground=!0}provideWithoutTextEditor(e){return this.provideLabelPick(e,u("cannotRunGotoSymbolWithoutEditor","To go to a symbol, first open a text editor with symbol information.")),z.None}provideWithTextEditor(e,t,i){let n=e.editor,o=this.getModel(n);return o?In.has(o)?this.doProvideWithEditorSymbols(e,o,t,i):this.doProvideWithoutEditorSymbols(e,o,t,i):z.None}doProvideWithoutEditorSymbols(e,t,i,n){let o=new R;return this.provideLabelPick(i,u("cannotRunGotoSymbolWithoutSymbolProvider","The active text editor does not provide symbol information.")),Jc(this,void 0,void 0,function*(){!(yield this.waitForLanguageSymbolRegistry(t,o))||n.isCancellationRequested||o.add(this.doProvideWithEditorSymbols(e,t,i,n))}),o}provideLabelPick(e,t){e.items=[{label:t,index:0,kind:14}],e.ariaLabel=t}waitForLanguageSymbolRegistry(e,t){return Jc(this,void 0,void 0,function*(){if(In.has(e))return!0;let i=new mS,n=t.add(In.onDidChange(()=>{In.has(e)&&(n.dispose(),i.complete(!0))}));return t.add(We(()=>i.complete(!1))),i.p})}doProvideWithEditorSymbols(e,t,i,n){let o=e.editor,r=new R;r.add(i.onDidAccept(h=>{let[p]=i.selectedItems;p&&p.range&&(this.gotoLocation(e,{range:p.range.selection,keyMods:i.keyMods,preserveFocus:h.inBackground}),h.inBackground||i.hide())})),r.add(i.onDidTriggerItemButton(({item:h})=>{h&&h.range&&(this.gotoLocation(e,{range:h.range.selection,keyMods:i.keyMods,forceSideBySide:!0}),i.hide())}));let a=this.getDocumentSymbols(t,n),l,c=()=>Jc(this,void 0,void 0,function*(){l==null||l.dispose(!0),i.busy=!1,l=new Ft(n),i.busy=!0;try{let h=ym(i.value.substr(Hb.PREFIX.length).trim()),p=yield this.doGetSymbolPicks(a,h,void 0,l.token);if(n.isCancellationRequested)return;p.length>0?i.items=p:h.original.length>0?this.provideLabelPick(i,u("noMatchingSymbolResults","No matching editor symbols")):this.provideLabelPick(i,u("noSymbolResults","No editor symbols"))}finally{n.isCancellationRequested||(i.busy=!1)}});r.add(i.onDidChangeValue(()=>c())),c();let d=!0;return r.add(i.onDidChangeActive(()=>{let[h]=i.activeItems;if(h&&h.range){if(d){d=!1;return}o.revealRangeInCenter(h.range.selection,0),this.addDecorations(o,h.range.decoration)}})),r}doGetSymbolPicks(e,t,i,n){return Jc(this,void 0,void 0,function*(){let o=yield e;if(n.isCancellationRequested)return[];let r=t.original.indexOf(Hb.SCOPE_PREFIX)===0,a=r?1:0,l,c;t.values&&t.values.length>1?(l=Nb(t.values[0]),c=Nb(t.values.slice(1))):l=t;let d=[];for(let m=0;m<o.length;m++){let f=o[m],v=bS(f.name),_=`$(${DS.toIcon(f.kind).id}) ${v}`,w=_.length-v.length,A=f.containerName;(i==null?void 0:i.extraContainerLabel)&&(A?A=`${i.extraContainerLabel} \u2022 ${A}`:A=i.extraContainerLabel);let M,j,V,ce;if(t.original.length>a){let It=!1;if(l!==t&&([M,j]=bm(_,Object.assign(Object.assign({},t),{values:void 0}),a,w),typeof M=="number"&&(It=!0)),typeof M!="number"&&([M,j]=bm(_,l,a,w),typeof M!="number"))continue;if(!It&&c){if(A&&c.original.length>0&&([V,ce]=bm(A,c)),typeof V!="number")continue;typeof M=="number"&&(M+=V)}}let Te=f.tags&&f.tags.indexOf(1)>=0;d.push({index:m,kind:f.kind,score:M,label:_,ariaLabel:v,description:A,highlights:Te?void 0:{label:j,description:ce},range:{selection:b.collapseToStart(f.selectionRange),decoration:f.range},strikethrough:Te,buttons:(()=>{var It,Wt;let Bt=((It=this.options)===null||It===void 0?void 0:It.openSideBySideDirection)?(Wt=this.options)===null||Wt===void 0?void 0:Wt.openSideBySideDirection():void 0;if(!!Bt)return[{iconClass:Bt==="right"?K.splitHorizontal.classNames:K.splitVertical.classNames,tooltip:Bt==="right"?u("openToSide","Open to the Side"):u("openToBottom","Open to the Bottom")}]})()})}let h=d.sort((m,f)=>r?this.compareByKindAndScore(m,f):this.compareByScore(m,f)),p=[];if(r){let _=function(){f&&typeof m=="number"&&v>0&&(f.label=Ui(Ob[m]||zb,v))},m,f,v=0;for(let w of h)m!==w.kind?(_(),m=w.kind,v=1,f={type:"separator"},p.push(f)):v++,p.push(w);_()}else h.length>0&&(p=[{label:u("symbols","symbols ({0})",d.length),type:"separator"},...h]);return p})}compareByScore(e,t){if(typeof e.score!="number"&&typeof t.score=="number")return 1;if(typeof e.score=="number"&&typeof t.score!="number")return-1;if(typeof e.score=="number"&&typeof t.score=="number"){if(e.score>t.score)return-1;if(e.score<t.score)return 1}return e.index<t.index?-1:e.index>t.index?1:0}compareByKindAndScore(e,t){let i=Ob[e.kind]||zb,n=Ob[t.kind]||zb,o=i.localeCompare(n);return o===0?this.compareByScore(e,t):o}getDocumentSymbols(e,t){return Jc(this,void 0,void 0,function*(){let i=yield this._outlineModelService.getOrCreate(e,t);return t.isCancellationRequested?[]:i.asListOfDocumentSymbols()})}};tn.PREFIX="@";tn.SCOPE_PREFIX=":";tn.PREFIX_BY_CATEGORY=`${tn.PREFIX}${tn.SCOPE_PREFIX}`;tn=vA([xA(0,Vs)],tn);var zb=u("property","properties ({0})"),Ob={[5]:u("method","methods ({0})"),[11]:u("function","functions ({0})"),[8]:u("_constructor","constructors ({0})"),[12]:u("variable","variables ({0})"),[4]:u("class","classes ({0})"),[22]:u("struct","structs ({0})"),[23]:u("event","events ({0})"),[24]:u("operator","operators ({0})"),[10]:u("interface","interfaces ({0})"),[2]:u("namespace","namespaces ({0})"),[3]:u("package","packages ({0})"),[25]:u("typeParameter","type parameters ({0})"),[1]:u("modules","modules ({0})"),[6]:u("property","properties ({0})"),[9]:u("enum","enumerations ({0})"),[21]:u("enumMember","enumeration members ({0})"),[14]:u("string","strings ({0})"),[0]:u("file","files ({0})"),[17]:u("array","arrays ({0})"),[15]:u("number","numbers ({0})"),[16]:u("boolean","booleans ({0})"),[18]:u("object","objects ({0})"),[19]:u("key","keys ({0})"),[7]:u("field","fields ({0})"),[13]:u("constant","constants ({0})")};Ca();Ci();qt();Cr();De();ue();He();im();var CA=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},dL=function(s,e){return function(t,i){e(t,i,s)}},Wb=class extends tn{constructor(e,t){super(t);this.editorService=e,this.onDidActiveTextEditorControlChange=ht.None}get activeTextEditorControl(){return Mi(this.editorService.getFocusedCodeEditor())}};Wb=CA([dL(0,Ve),dL(1,Vs)],Wb);ln.as(eo.Quickaccess).registerQuickAccessProvider({ctor:Wb,prefix:tn.PREFIX,helpEntries:[{description:pu.quickOutlineActionLabel,prefix:tn.PREFIX,needsEditor:!0},{description:pu.quickOutlineByCategoryActionLabel,prefix:tn.PREFIX_BY_CATEGORY,needsEditor:!0}]});var cL=class extends F{constructor(){super({id:"editor.action.quickOutline",label:pu.quickOutlineActionLabel,alias:"Go to Symbol...",precondition:S.hasDocumentSymbolProvider,kbOpts:{kbExpr:S.focus,primary:3117,weight:100},contextMenuOpts:{group:"navigation",order:3}})}run(e){e.get(Wi).quickAccess.show(tn.PREFIX)}};I(cL);Ca();Cr();Ci();St();qt();Q();function Bb(s,e){return e&&(s.stack||s.stacktrace)?u("stackTrace.format","{0}: {1}",uL(s),hL(s.stack)||hL(s.stacktrace)):uL(s)}function hL(s){return Array.isArray(s)?s.join(`
`):s}function uL(s){return typeof s.code=="string"&&typeof s.errno=="number"&&typeof s.syscall=="string"?u("nodeExceptionMessage","A system error occurred ({0})",s.message):s.message||u("error.defaultMessage","An unknown error occurred. Please consult the log for more details.")}function Vb(s=null,e=!1){if(!s)return u("error.defaultMessage","An unknown error occurred. Please consult the log for more details.");if(Array.isArray(s)){let t=Vn(s),i=Vb(t[0],e);return t.length>1?u("error.moreErrors","{0} ({1} errors in total)",i,t.length):i}if(hh(s))return s;if(s.detail){let t=s.detail;if(t.error)return Bb(t.error,e);if(t.exception)return Bb(t.exception,e)}return s.stack?Bb(s,e):s.message?s.message:u("error.defaultMessage","An unknown error occurred. Please consult the log for more details.")}Le();B();ga();qt();Q();_t();kn();Be();Ki();ke();ut();B();var Sm=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Tl;(function(s){s[s.NO_ACTION=0]="NO_ACTION",s[s.CLOSE_PICKER=1]="CLOSE_PICKER",s[s.REFRESH_PICKER=2]="REFRESH_PICKER",s[s.REMOVE_ITEM=3]="REMOVE_ITEM"})(Tl||(Tl={}));function Gb(s){let e=s;return Array.isArray(e.items)}function _A(s){let e=s;return!!e.picks&&e.additionalPicks instanceof Promise}var El=class extends z{constructor(e,t){super();this.prefix=e,this.options=t}provide(e,t){var i;let n=new R;e.canAcceptInBackground=!!((i=this.options)===null||i===void 0?void 0:i.canAcceptInBackground),e.matchOnLabel=e.matchOnDescription=e.matchOnDetail=e.sortByLabel=!1;let o,r=n.add(new et),a=()=>Sm(this,void 0,void 0,function*(){let l=r.value=new R;o==null||o.dispose(!0),e.busy=!1,o=new Ft(t);let c=o.token,d=e.value.substr(this.prefix.length).trim(),h=this._getPicks(d,l,c),p=(m,f)=>{var v;let _,w;if(Gb(m)?(_=m.items,w=m.active):_=m,_.length===0){if(f)return!1;d.length>0&&((v=this.options)===null||v===void 0?void 0:v.noResultsPick)&&(_=[this.options.noResultsPick])}return e.items=_,w&&(e.activeItems=[w]),!0};if(h!==null)if(_A(h)){let m=!1,f=!1;yield Promise.all([(()=>Sm(this,void 0,void 0,function*(){yield ua(El.FAST_PICKS_RACE_DELAY),!c.isCancellationRequested&&(f||(m=p(h.picks,!0)))}))(),(()=>Sm(this,void 0,void 0,function*(){e.busy=!0;try{let v=yield h.additionalPicks;if(c.isCancellationRequested)return;let _,w;Gb(h.picks)?(_=h.picks.items,w=h.picks.active):_=h.picks;let A,M;if(Gb(v)?(A=v.items,M=v.active):A=v,A.length>0||!m){let j;if(!w&&!M){let V=e.activeItems[0];V&&_.indexOf(V)!==-1&&(j=V)}p({items:[..._,...A],active:w||M||j})}}finally{c.isCancellationRequested||(e.busy=!1),f=!0}}))()])}else if(!(h instanceof Promise))p(h);else{e.busy=!0;try{let m=yield h;if(c.isCancellationRequested)return;p(m)}finally{c.isCancellationRequested||(e.busy=!1)}}});return n.add(e.onDidChangeValue(()=>a())),a(),n.add(e.onDidAccept(l=>{let[c]=e.selectedItems;typeof(c==null?void 0:c.accept)=="function"&&(l.inBackground||e.hide(),c.accept(e.keyMods,l))})),n.add(e.onDidTriggerItemButton(({button:l,item:c})=>Sm(this,void 0,void 0,function*(){var d,h;if(typeof c.trigger=="function"){let p=(h=(d=c.buttons)===null||d===void 0?void 0:d.indexOf(l))!==null&&h!==void 0?h:-1;if(p>=0){let m=c.trigger(p,e.keyMods),f=typeof m=="number"?m:yield m;if(t.isCancellationRequested)return;switch(f){case Tl.NO_ACTION:break;case Tl.CLOSE_PICKER:e.hide();break;case Tl.REFRESH_PICKER:a();break;case Tl.REMOVE_ITEM:{let v=e.items.indexOf(c);if(v!==-1){let _=e.items.slice(),w=_.splice(v,1),A=e.activeItems.filter(j=>j!==w[0]),M=e.keepScrollPosition;e.keepScrollPosition=!0,e.items=_,A&&(e.activeItems=A),e.keepScrollPosition=M}break}}}}}))),n}};El.FAST_PICKS_RACE_DELAY=200;ed();var mL=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},ea=function(s,e){return function(t,i){e(t,i,s)}},pL=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Il=class vm extends El{constructor(e,t,i,n,o,r){super(vm.PREFIX,e);this.instantiationService=t,this.keybindingService=i,this.commandService=n,this.telemetryService=o,this.dialogService=r,this.commandsHistory=this._register(this.instantiationService.createInstance(ta)),this.options=e}_getPicks(e,t,i){return pL(this,void 0,void 0,function*(){let n=yield this.getCommandPicks(t,i);if(i.isCancellationRequested)return[];let o=[];for(let c of n){let d=Mi(vm.WORD_FILTER(e,c.label)),h=c.commandAlias?Mi(vm.WORD_FILTER(e,c.commandAlias)):void 0;d||h?(c.highlights={label:d,detail:this.options.showAlias?h:void 0},o.push(c)):e===c.commandId&&o.push(c)}let r=new Map;for(let c of o){let d=r.get(c.label);d?(c.description=c.commandId,d.description=d.commandId):r.set(c.label,c)}o.sort((c,d)=>{let h=this.commandsHistory.peek(c.commandId),p=this.commandsHistory.peek(d.commandId);return h&&p?h>p?-1:1:h?-1:p?1:c.label.localeCompare(d.label)});let a=[],l=!1;for(let c=0;c<o.length;c++){let d=o[c],h=this.keybindingService.lookupKeybinding(d.commandId),p=h?u("commandPickAriaLabelWithKeybinding","{0}, {1}",d.label,h.getAriaLabel()):d.label;c===0&&this.commandsHistory.peek(d.commandId)&&(a.push({type:"separator",label:u("recentlyUsed","recently used")}),l=!0),c!==0&&l&&!this.commandsHistory.peek(d.commandId)&&(a.push({type:"separator",label:u("morecCommands","other commands")}),l=!1),a.push(Object.assign(Object.assign({},d),{ariaLabel:p,detail:this.options.showAlias&&d.commandAlias!==d.label?d.commandAlias:void 0,keybinding:h,accept:()=>pL(this,void 0,void 0,function*(){this.commandsHistory.push(d.commandId),this.telemetryService.publicLog2("workbenchActionExecuted",{id:d.commandId,from:"quick open"});try{yield this.commandService.executeCommand(d.commandId)}catch(m){jn(m)||this.dialogService.show(Io.Error,u("canNotRun","Command '{0}' resulted in an error ({1})",d.label,Vb(m)))}})}))}return a})}};Il.PREFIX=">";Il.WORD_FILTER=Fx(Nx,Ox,zx);Il=mL([ea(1,le),ea(2,rt),ea(3,dt),ea(4,Yn),ea(5,Oa)],Il);var ta=class Et extends z{constructor(e,t){super();this.storageService=e,this.configurationService=t,this.configuredCommandsHistoryLength=0,this.updateConfiguration(),this.load(),this.registerListeners()}registerListeners(){this._register(this.configurationService.onDidChangeConfiguration(()=>this.updateConfiguration()))}updateConfiguration(){this.configuredCommandsHistoryLength=Et.getConfiguredCommandHistoryLength(this.configurationService),Et.cache&&Et.cache.limit!==this.configuredCommandsHistoryLength&&(Et.cache.limit=this.configuredCommandsHistoryLength,Et.saveState(this.storageService))}load(){let e=this.storageService.get(Et.PREF_KEY_CACHE,0),t;if(e)try{t=JSON.parse(e)}catch(n){}let i=Et.cache=new Un(this.configuredCommandsHistoryLength,1);if(t){let n;t.usesLRU?n=t.entries:n=t.entries.sort((o,r)=>o.value-r.value),n.forEach(o=>i.set(o.key,o.value))}Et.counter=this.storageService.getNumber(Et.PREF_KEY_COUNTER,0,Et.counter)}push(e){!Et.cache||(Et.cache.set(e,Et.counter++),Et.saveState(this.storageService))}peek(e){var t;return(t=Et.cache)===null||t===void 0?void 0:t.peek(e)}static saveState(e){if(!Et.cache)return;let t={usesLRU:!0,entries:[]};Et.cache.forEach((i,n)=>t.entries.push({key:n,value:i})),e.store(Et.PREF_KEY_CACHE,JSON.stringify(t),0,0),e.store(Et.PREF_KEY_COUNTER,Et.counter,0,0)}static getConfiguredCommandHistoryLength(e){var t,i;let o=(i=(t=e.getValue().workbench)===null||t===void 0?void 0:t.commandPalette)===null||i===void 0?void 0:i.history;return typeof o=="number"?o:Et.DEFAULT_COMMANDS_HISTORY_LENGTH}};ta.DEFAULT_COMMANDS_HISTORY_LENGTH=50;ta.PREF_KEY_CACHE="commandPalette.mru.cache";ta.PREF_KEY_COUNTER="commandPalette.mru.counter";ta.counter=1;ta=mL([ea(0,li),ea(1,it)],ta);var jb=class extends Il{constructor(e,t,i,n,o,r){super(e,t,i,n,o,r)}getCodeEditorCommandPicks(){let e=this.activeTextEditorControl;if(!e)return[];let t=[];for(let i of e.getSupportedActions())t.push({commandId:i.id,commandAlias:i.alias,label:Vx(i.label)||i.id});return t}};qt();Be();Ki();_t();ed();ue();He();var wA=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},kl=function(s,e){return function(t,i){e(t,i,s)}},TA=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Qc=class extends jb{constructor(e,t,i,n,o,r){super({showAlias:!1},e,i,n,o,r);this.codeEditorService=t}get activeTextEditorControl(){return Mi(this.codeEditorService.getFocusedCodeEditor())}getCommandPicks(){return TA(this,void 0,void 0,function*(){return this.getCodeEditorCommandPicks()})}};Qc=wA([kl(0,le),kl(1,Ve),kl(2,rt),kl(3,dt),kl(4,Yn),kl(5,Oa)],Qc);ln.as(eo.Quickaccess).registerQuickAccessProvider({ctor:Qc,prefix:Qc.PREFIX,helpEntries:[{description:lg.quickCommandHelp,needsEditor:!0}]});var gL=class extends F{constructor(){super({id:"editor.action.quickCommand",label:lg.quickCommandActionLabel,alias:"Command Palette",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:59,weight:100},contextMenuOpts:{group:"z_commands",order:1}})}run(e){e.get(Wi).quickAccess.show(Qc.PREFIX)}};I(gL);ue();Ci();kn();Ee();Be();var EA=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Ll=function(s,e){return function(t,i){e(t,i,s)}},Ub=class extends io{constructor(e,t,i,n,o,r,a){super(!0,e,t,i,n,o,r,a)}};Ub=EA([Ll(1,ie),Ll(2,Ve),Ll(3,Ze),Ll(4,le),Ll(5,li),Ll(6,it)],Ub);J(io.ID,Ub);ue();lC();Cr();var fL=class extends F{constructor(){super({id:"editor.action.toggleHighContrast",label:Rx.toggleHighContrast,alias:"Toggle High Contrast Theme",precondition:void 0});this._originalThemeName=null}run(e,t){let i=e.get(xu);this._originalThemeName?(i.setTheme(this._originalThemeName),this._originalThemeName=null):(this._originalThemeName=i.getColorTheme().themeName,i.setTheme("hc-black"))}};I(fL);var yL=`// Type definitions for React 17.0
// Project: http://facebook.github.io/react/
// Definitions by: Asana <https://asana.com>
//                 AssureSign <http://www.assuresign.com>
//                 Microsoft <https://microsoft.com>
//                 John Reilly <https://github.com/johnnyreilly>
//                 Benoit Benezech <https://github.com/bbenezech>
//                 Patricio Zavolinsky <https://github.com/pzavolinsky>
//                 Eric Anderson <https://github.com/ericanderson>
//                 Dovydas Navickas <https://github.com/DovydasNavickas>
//                 Josh Rutherford <https://github.com/theruther4d>
//                 Guilherme H\xFCbner <https://github.com/guilhermehubner>
//                 Ferdy Budhidharma <https://github.com/ferdaber>
//                 Johann Rakotoharisoa <https://github.com/jrakotoharisoa>
//                 Olivier Pascal <https://github.com/pascaloliv>
//                 Martin Hochel <https://github.com/hotell>
//                 Frank Li <https://github.com/franklixuefei>
//                 Jessica Franco <https://github.com/Jessidhia>
//                 Saransh Kataria <https://github.com/saranshkataria>
//                 Kanitkorn Sujautra <https://github.com/lukyth>
//                 Sebastian Silbermann <https://github.com/eps1lon>
//                 Kyle Scully <https://github.com/zieka>
//                 Cong Zhang <https://github.com/dancerphil>
//                 Dimitri Mitropoulos <https://github.com/dimitropoulos>
//                 JongChan Choi <https://github.com/disjukr>
//                 Victor Magalh\xE3es <https://github.com/vhfmag>
//                 Dale Tan <https://github.com/hellatan>
//                 Priyanshu Rav <https://github.com/priyanshurav>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// NOTE: Users of the upcoming React 18 release should add a reference
// to 'react/next' in their project. See next.d.ts's top comment
// for reference and documentation on how exactly to do it.

// NOTE: Users of the \`experimental\` builds of React should add a reference
// to 'react/experimental' in their project. See experimental.d.ts's top comment
// for reference and documentation on how exactly to do it.

/// <reference path="global.d.ts" />

import * as CSS from 'csstype';
import * as PropTypes from 'prop-types';
import { Interaction as SchedulerInteraction } from 'scheduler/tracing';

type NativeAnimationEvent = AnimationEvent;
type NativeClipboardEvent = ClipboardEvent;
type NativeCompositionEvent = CompositionEvent;
type NativeDragEvent = DragEvent;
type NativeFocusEvent = FocusEvent;
type NativeKeyboardEvent = KeyboardEvent;
type NativeMouseEvent = MouseEvent;
type NativeTouchEvent = TouchEvent;
type NativePointerEvent = PointerEvent;
type NativeTransitionEvent = TransitionEvent;
type NativeUIEvent = UIEvent;
type NativeWheelEvent = WheelEvent;
type Booleanish = boolean | 'true' | 'false';

declare const UNDEFINED_VOID_ONLY: unique symbol;
// Destructors are only allowed to return void.
type Destructor = () => void | { [UNDEFINED_VOID_ONLY]: never };

// tslint:disable-next-line:export-just-namespace
export = React;
export as namespace React;

declare namespace React {
    //
    // React Elements
    // ----------------------------------------------------------------------

    type ElementType<P = any> =
        {
            [K in keyof JSX.IntrinsicElements]: P extends JSX.IntrinsicElements[K] ? K : never
        }[keyof JSX.IntrinsicElements] |
        ComponentType<P>;
    /**
     * @deprecated Please use \`ElementType\`
     */
    type ReactType<P = any> = ElementType<P>;
    type ComponentType<P = {}> = ComponentClass<P> | FunctionComponent<P>;

    type JSXElementConstructor<P> =
        | ((props: P) => ReactElement<any, any> | null)
        | (new (props: P) => Component<any, any>);

    interface RefObject<T> {
        readonly current: T | null;
    }
    type RefCallback<T> = { bivarianceHack(instance: T | null): void }["bivarianceHack"];
    type Ref<T> = RefCallback<T> | RefObject<T> | null;
    type LegacyRef<T> = string | Ref<T>;
    /**
     * Gets the instance type for a React element. The instance will be different for various component types:
     *
     * - React class components will be the class instance. So if you had \`class Foo extends React.Component<{}> {}\`
     *   and used \`React.ElementRef<typeof Foo>\` then the type would be the instance of \`Foo\`.
     * - React stateless functional components do not have a backing instance and so \`React.ElementRef<typeof Bar>\`
     *   (when \`Bar\` is \`function Bar() {}\`) will give you the \`undefined\` type.
     * - JSX intrinsics like \`div\` will give you their DOM instance. For \`React.ElementRef<'div'>\` that would be
     *   \`HTMLDivElement\`. For \`React.ElementRef<'input'>\` that would be \`HTMLInputElement\`.
     * - React stateless functional components that forward a \`ref\` will give you the \`ElementRef\` of the forwarded
     *   to component.
     *
     * \`C\` must be the type _of_ a React component so you need to use typeof as in React.ElementRef<typeof MyComponent>.
     *
     * @todo In Flow, this works a little different with forwarded refs and the \`AbstractComponent\` that
     *       \`React.forwardRef()\` returns.
     */
    type ElementRef<
        C extends
            | ForwardRefExoticComponent<any>
            | { new (props: any): Component<any> }
            | ((props: any, context?: any) => ReactElement | null)
            | keyof JSX.IntrinsicElements
    > =
        // need to check first if \`ref\` is a valid prop for ts@3.0
        // otherwise it will infer \`{}\` instead of \`never\`
        "ref" extends keyof ComponentPropsWithRef<C>
            ? NonNullable<ComponentPropsWithRef<C>["ref"]> extends Ref<
                infer Instance
            >
                ? Instance
                : never
            : never;

    type ComponentState = any;

    type Key = string | number;

    /**
     * @internal You shouldn't need to use this type since you never see these attributes
     * inside your component or have to validate them.
     */
    interface Attributes {
        key?: Key | null | undefined;
    }
    interface RefAttributes<T> extends Attributes {
        ref?: Ref<T> | undefined;
    }
    interface ClassAttributes<T> extends Attributes {
        ref?: LegacyRef<T> | undefined;
    }

    interface ReactElement<P = any, T extends string | JSXElementConstructor<any> = string | JSXElementConstructor<any>> {
        type: T;
        props: P;
        key: Key | null;
    }

    interface ReactComponentElement<
        T extends keyof JSX.IntrinsicElements | JSXElementConstructor<any>,
        P = Pick<ComponentProps<T>, Exclude<keyof ComponentProps<T>, 'key' | 'ref'>>
    > extends ReactElement<P, Exclude<T, number>> { }

    /**
     * @deprecated Please use \`FunctionComponentElement\`
     */
    type SFCElement<P> = FunctionComponentElement<P>;

    interface FunctionComponentElement<P> extends ReactElement<P, FunctionComponent<P>> {
        ref?: ('ref' extends keyof P ? P extends { ref?: infer R | undefined } ? R : never : never) | undefined;
    }

    type CElement<P, T extends Component<P, ComponentState>> = ComponentElement<P, T>;
    interface ComponentElement<P, T extends Component<P, ComponentState>> extends ReactElement<P, ComponentClass<P>> {
        ref?: LegacyRef<T> | undefined;
    }

    type ClassicElement<P> = CElement<P, ClassicComponent<P, ComponentState>>;

    // string fallback for custom web-components
    interface DOMElement<P extends HTMLAttributes<T> | SVGAttributes<T>, T extends Element> extends ReactElement<P, string> {
        ref: LegacyRef<T>;
    }

    // ReactHTML for ReactHTMLElement
    interface ReactHTMLElement<T extends HTMLElement> extends DetailedReactHTMLElement<AllHTMLAttributes<T>, T> { }

    interface DetailedReactHTMLElement<P extends HTMLAttributes<T>, T extends HTMLElement> extends DOMElement<P, T> {
        type: keyof ReactHTML;
    }

    // ReactSVG for ReactSVGElement
    interface ReactSVGElement extends DOMElement<SVGAttributes<SVGElement>, SVGElement> {
        type: keyof ReactSVG;
    }

    interface ReactPortal extends ReactElement {
        key: Key | null;
        children: ReactNode;
    }

    //
    // Factories
    // ----------------------------------------------------------------------

    type Factory<P> = (props?: Attributes & P, ...children: ReactNode[]) => ReactElement<P>;

    /**
     * @deprecated Please use \`FunctionComponentFactory\`
     */
    type SFCFactory<P> = FunctionComponentFactory<P>;

    type FunctionComponentFactory<P> = (props?: Attributes & P, ...children: ReactNode[]) => FunctionComponentElement<P>;

    type ComponentFactory<P, T extends Component<P, ComponentState>> =
        (props?: ClassAttributes<T> & P, ...children: ReactNode[]) => CElement<P, T>;

    type CFactory<P, T extends Component<P, ComponentState>> = ComponentFactory<P, T>;
    type ClassicFactory<P> = CFactory<P, ClassicComponent<P, ComponentState>>;

    type DOMFactory<P extends DOMAttributes<T>, T extends Element> =
        (props?: ClassAttributes<T> & P | null, ...children: ReactNode[]) => DOMElement<P, T>;

    interface HTMLFactory<T extends HTMLElement> extends DetailedHTMLFactory<AllHTMLAttributes<T>, T> {}

    interface DetailedHTMLFactory<P extends HTMLAttributes<T>, T extends HTMLElement> extends DOMFactory<P, T> {
        (props?: ClassAttributes<T> & P | null, ...children: ReactNode[]): DetailedReactHTMLElement<P, T>;
    }

    interface SVGFactory extends DOMFactory<SVGAttributes<SVGElement>, SVGElement> {
        (props?: ClassAttributes<SVGElement> & SVGAttributes<SVGElement> | null, ...children: ReactNode[]): ReactSVGElement;
    }

    //
    // React Nodes
    // http://facebook.github.io/react/docs/glossary.html
    // ----------------------------------------------------------------------

    type ReactText = string | number;
    type ReactChild = ReactElement | ReactText;

    /**
     * @deprecated Use either \`ReactNode[]\` if you need an array or \`Iterable<ReactNode>\` if its passed to a host component.
     */
    interface ReactNodeArray extends ReadonlyArray<ReactNode> {}
    type ReactFragment = {} | Iterable<ReactNode>;
    type ReactNode = ReactChild | ReactFragment | ReactPortal | boolean | null | undefined;

    //
    // Top Level API
    // ----------------------------------------------------------------------

    // DOM Elements
    function createFactory<T extends HTMLElement>(
        type: keyof ReactHTML): HTMLFactory<T>;
    function createFactory(
        type: keyof ReactSVG): SVGFactory;
    function createFactory<P extends DOMAttributes<T>, T extends Element>(
        type: string): DOMFactory<P, T>;

    // Custom components
    function createFactory<P>(type: FunctionComponent<P>): FunctionComponentFactory<P>;
    function createFactory<P>(
        type: ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>): CFactory<P, ClassicComponent<P, ComponentState>>;
    function createFactory<P, T extends Component<P, ComponentState>, C extends ComponentClass<P>>(
        type: ClassType<P, T, C>): CFactory<P, T>;
    function createFactory<P>(type: ComponentClass<P>): Factory<P>;

    // DOM Elements
    // TODO: generalize this to everything in \`keyof ReactHTML\`, not just "input"
    function createElement(
        type: "input",
        props?: InputHTMLAttributes<HTMLInputElement> & ClassAttributes<HTMLInputElement> | null,
        ...children: ReactNode[]): DetailedReactHTMLElement<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;
    function createElement<P extends HTMLAttributes<T>, T extends HTMLElement>(
        type: keyof ReactHTML,
        props?: ClassAttributes<T> & P | null,
        ...children: ReactNode[]): DetailedReactHTMLElement<P, T>;
    function createElement<P extends SVGAttributes<T>, T extends SVGElement>(
        type: keyof ReactSVG,
        props?: ClassAttributes<T> & P | null,
        ...children: ReactNode[]): ReactSVGElement;
    function createElement<P extends DOMAttributes<T>, T extends Element>(
        type: string,
        props?: ClassAttributes<T> & P | null,
        ...children: ReactNode[]): DOMElement<P, T>;

    // Custom components

    function createElement<P extends {}>(
        type: FunctionComponent<P>,
        props?: Attributes & P | null,
        ...children: ReactNode[]): FunctionComponentElement<P>;
    function createElement<P extends {}>(
        type: ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>,
        props?: ClassAttributes<ClassicComponent<P, ComponentState>> & P | null,
        ...children: ReactNode[]): CElement<P, ClassicComponent<P, ComponentState>>;
    function createElement<P extends {}, T extends Component<P, ComponentState>, C extends ComponentClass<P>>(
        type: ClassType<P, T, C>,
        props?: ClassAttributes<T> & P | null,
        ...children: ReactNode[]): CElement<P, T>;
    function createElement<P extends {}>(
        type: FunctionComponent<P> | ComponentClass<P> | string,
        props?: Attributes & P | null,
        ...children: ReactNode[]): ReactElement<P>;

    // DOM Elements
    // ReactHTMLElement
    function cloneElement<P extends HTMLAttributes<T>, T extends HTMLElement>(
        element: DetailedReactHTMLElement<P, T>,
        props?: P,
        ...children: ReactNode[]): DetailedReactHTMLElement<P, T>;
    // ReactHTMLElement, less specific
    function cloneElement<P extends HTMLAttributes<T>, T extends HTMLElement>(
        element: ReactHTMLElement<T>,
        props?: P,
        ...children: ReactNode[]): ReactHTMLElement<T>;
    // SVGElement
    function cloneElement<P extends SVGAttributes<T>, T extends SVGElement>(
        element: ReactSVGElement,
        props?: P,
        ...children: ReactNode[]): ReactSVGElement;
    // DOM Element (has to be the last, because type checking stops at first overload that fits)
    function cloneElement<P extends DOMAttributes<T>, T extends Element>(
        element: DOMElement<P, T>,
        props?: DOMAttributes<T> & P,
        ...children: ReactNode[]): DOMElement<P, T>;

    // Custom components
    function cloneElement<P>(
        element: FunctionComponentElement<P>,
        props?: Partial<P> & Attributes,
        ...children: ReactNode[]): FunctionComponentElement<P>;
    function cloneElement<P, T extends Component<P, ComponentState>>(
        element: CElement<P, T>,
        props?: Partial<P> & ClassAttributes<T>,
        ...children: ReactNode[]): CElement<P, T>;
    function cloneElement<P>(
        element: ReactElement<P>,
        props?: Partial<P> & Attributes,
        ...children: ReactNode[]): ReactElement<P>;

    // Context via RenderProps
    interface ProviderProps<T> {
        value: T;
        children?: ReactNode | undefined;
    }

    interface ConsumerProps<T> {
        children: (value: T) => ReactNode;
    }

    // TODO: similar to how Fragment is actually a symbol, the values returned from createContext,
    // forwardRef and memo are actually objects that are treated specially by the renderer; see:
    // https://github.com/facebook/react/blob/v16.6.0/packages/react/src/ReactContext.js#L35-L48
    // https://github.com/facebook/react/blob/v16.6.0/packages/react/src/forwardRef.js#L42-L45
    // https://github.com/facebook/react/blob/v16.6.0/packages/react/src/memo.js#L27-L31
    // However, we have no way of telling the JSX parser that it's a JSX element type or its props other than
    // by pretending to be a normal component.
    //
    // We don't just use ComponentType or FunctionComponent types because you are not supposed to attach statics to this
    // object, but rather to the original function.
    interface ExoticComponent<P = {}> {
        /**
         * **NOTE**: Exotic components are not callable.
         */
        (props: P): (ReactElement|null);
        readonly $$typeof: symbol;
    }

    interface NamedExoticComponent<P = {}> extends ExoticComponent<P> {
        displayName?: string | undefined;
    }

    interface ProviderExoticComponent<P> extends ExoticComponent<P> {
        propTypes?: WeakValidationMap<P> | undefined;
    }

    type ContextType<C extends Context<any>> = C extends Context<infer T> ? T : never;

    // NOTE: only the Context object itself can get a displayName
    // https://github.com/facebook/react-devtools/blob/e0b854e4c/backend/attachRendererFiber.js#L310-L325
    type Provider<T> = ProviderExoticComponent<ProviderProps<T>>;
    type Consumer<T> = ExoticComponent<ConsumerProps<T>>;
    interface Context<T> {
        Provider: Provider<T>;
        Consumer: Consumer<T>;
        displayName?: string | undefined;
    }
    function createContext<T>(
        // If you thought this should be optional, see
        // https://github.com/DefinitelyTyped/DefinitelyTyped/pull/24509#issuecomment-382213106
        defaultValue: T,
    ): Context<T>;

    function isValidElement<P>(object: {} | null | undefined): object is ReactElement<P>;

    const Children: ReactChildren;
    const Fragment: ExoticComponent<{ children?: ReactNode | undefined }>;
    const StrictMode: ExoticComponent<{ children?: ReactNode | undefined }>;

    interface SuspenseProps {
        children?: ReactNode | undefined;

        // TODO(react18): \`fallback?: ReactNode;\`
        /** A fallback react tree to show when a Suspense child (like React.lazy) suspends */
        fallback: NonNullable<ReactNode>|null;
    }

    // TODO(react18): Updated JSDoc to reflect that Suspense works on the server.
    /**
     * This feature is not yet available for server-side rendering.
     * Suspense support will be added in a later release.
     */
    const Suspense: ExoticComponent<SuspenseProps>;
    const version: string;

    /**
     * {@link https://reactjs.org/docs/profiler.html#onrender-callback Profiler API}
     */
    type ProfilerOnRenderCallback = (
        id: string,
        phase: "mount" | "update",
        actualDuration: number,
        baseDuration: number,
        startTime: number,
        commitTime: number,
        interactions: Set<SchedulerInteraction>,
    ) => void;
    interface ProfilerProps {
        children?: ReactNode | undefined;
        id: string;
        onRender: ProfilerOnRenderCallback;
    }

    const Profiler: ExoticComponent<ProfilerProps>;

    //
    // Component API
    // ----------------------------------------------------------------------

    type ReactInstance = Component<any> | Element;

    // Base component for plain JS classes
    interface Component<P = {}, S = {}, SS = any> extends ComponentLifecycle<P, S, SS> { }
    class Component<P, S> {
        // tslint won't let me format the sample code in a way that vscode likes it :(
        /**
         * If set, \`this.context\` will be set at runtime to the current value of the given Context.
         *
         * Usage:
         *
         * \`\`\`ts
         * type MyContext = number
         * const Ctx = React.createContext<MyContext>(0)
         *
         * class Foo extends React.Component {
         *   static contextType = Ctx
         *   context!: React.ContextType<typeof Ctx>
         *   render () {
         *     return <>My context's value: {this.context}</>;
         *   }
         * }
         * \`\`\`
         *
         * @see https://reactjs.org/docs/context.html#classcontexttype
         */
        static contextType?: Context<any> | undefined;

        /**
         * If using the new style context, re-declare this in your class to be the
         * \`React.ContextType\` of your \`static contextType\`.
         * Should be used with type annotation or static contextType.
         *
         * \`\`\`ts
         * static contextType = MyContext
         * // For TS pre-3.7:
         * context!: React.ContextType<typeof MyContext>
         * // For TS 3.7 and above:
         * declare context: React.ContextType<typeof MyContext>
         * \`\`\`
         *
         * @see https://reactjs.org/docs/context.html
         */
        // TODO (TypeScript 3.0): unknown
        context: any;

        constructor(props: Readonly<P> | P);
        /**
         * @deprecated
         * @see https://reactjs.org/docs/legacy-context.html
         */
        constructor(props: P, context: any);

        // We MUST keep setState() as a unified signature because it allows proper checking of the method return type.
        // See: https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18365#issuecomment-351013257
        // Also, the \` | S\` allows intellisense to not be dumbisense
        setState<K extends keyof S>(
            state: ((prevState: Readonly<S>, props: Readonly<P>) => (Pick<S, K> | S | null)) | (Pick<S, K> | S | null),
            callback?: () => void
        ): void;

        forceUpdate(callback?: () => void): void;
        render(): ReactNode;

        // React.Props<T> is now deprecated, which means that the \`children\`
        // property is not available on \`P\` by default, even though you can
        // always pass children as variadic arguments to \`createElement\`.
        // In the future, if we can define its call signature conditionally
        // on the existence of \`children\` in \`P\`, then we should remove this.
        readonly props: Readonly<P> & Readonly<{ children?: ReactNode | undefined }>;
        state: Readonly<S>;
        /**
         * @deprecated
         * https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs
         */
        refs: {
            [key: string]: ReactInstance
        };
    }

    class PureComponent<P = {}, S = {}, SS = any> extends Component<P, S, SS> { }

    interface ClassicComponent<P = {}, S = {}> extends Component<P, S> {
        replaceState(nextState: S, callback?: () => void): void;
        isMounted(): boolean;
        getInitialState?(): S;
    }

    interface ChildContextProvider<CC> {
        getChildContext(): CC;
    }

    //
    // Class Interfaces
    // ----------------------------------------------------------------------

    /**
     * @deprecated as of recent React versions, function components can no
     * longer be considered 'stateless'. Please use \`FunctionComponent\` instead.
     *
     * @see [React Hooks](https://reactjs.org/docs/hooks-intro.html)
     */
    type SFC<P = {}> = FunctionComponent<P>;

    /**
     * @deprecated as of recent React versions, function components can no
     * longer be considered 'stateless'. Please use \`FunctionComponent\` instead.
     *
     * @see [React Hooks](https://reactjs.org/docs/hooks-intro.html)
     */
    type StatelessComponent<P = {}> = FunctionComponent<P>;

    type FC<P = {}> = FunctionComponent<P>;

    interface FunctionComponent<P = {}> {
        (props: PropsWithChildren<P>, context?: any): ReactElement<any, any> | null;
        propTypes?: WeakValidationMap<P> | undefined;
        contextTypes?: ValidationMap<any> | undefined;
        defaultProps?: Partial<P> | undefined;
        displayName?: string | undefined;
    }

    type VFC<P = {}> = VoidFunctionComponent<P>;

    interface VoidFunctionComponent<P = {}> {
        (props: P, context?: any): ReactElement<any, any> | null;
        propTypes?: WeakValidationMap<P> | undefined;
        contextTypes?: ValidationMap<any> | undefined;
        defaultProps?: Partial<P> | undefined;
        displayName?: string | undefined;
    }

    type ForwardedRef<T> = ((instance: T | null) => void) | MutableRefObject<T | null> | null;

    interface ForwardRefRenderFunction<T, P = {}> {
        (props: PropsWithChildren<P>, ref: ForwardedRef<T>): ReactElement | null;
        displayName?: string | undefined;
        // explicit rejected with \`never\` required due to
        // https://github.com/microsoft/TypeScript/issues/36826
        /**
         * defaultProps are not supported on render functions
         */
        defaultProps?: never | undefined;
        /**
         * propTypes are not supported on render functions
         */
        propTypes?: never | undefined;
    }

    /**
     * @deprecated Use ForwardRefRenderFunction. forwardRef doesn't accept a
     *             "real" component.
     */
    interface RefForwardingComponent <T, P = {}> extends ForwardRefRenderFunction<T, P> {}

    interface ComponentClass<P = {}, S = ComponentState> extends StaticLifecycle<P, S> {
        new (props: P, context?: any): Component<P, S>;
        propTypes?: WeakValidationMap<P> | undefined;
        contextType?: Context<any> | undefined;
        contextTypes?: ValidationMap<any> | undefined;
        childContextTypes?: ValidationMap<any> | undefined;
        defaultProps?: Partial<P> | undefined;
        displayName?: string | undefined;
    }

    interface ClassicComponentClass<P = {}> extends ComponentClass<P> {
        new (props: P, context?: any): ClassicComponent<P, ComponentState>;
        getDefaultProps?(): P;
    }

    /**
     * We use an intersection type to infer multiple type parameters from
     * a single argument, which is useful for many top-level API defs.
     * See https://github.com/Microsoft/TypeScript/issues/7234 for more info.
     */
    type ClassType<P, T extends Component<P, ComponentState>, C extends ComponentClass<P>> =
        C &
        (new (props: P, context?: any) => T);

    //
    // Component Specs and Lifecycle
    // ----------------------------------------------------------------------

    // This should actually be something like \`Lifecycle<P, S> | DeprecatedLifecycle<P, S>\`,
    // as React will _not_ call the deprecated lifecycle methods if any of the new lifecycle
    // methods are present.
    interface ComponentLifecycle<P, S, SS = any> extends NewLifecycle<P, S, SS>, DeprecatedLifecycle<P, S> {
        /**
         * Called immediately after a component is mounted. Setting state here will trigger re-rendering.
         */
        componentDidMount?(): void;
        /**
         * Called to determine whether the change in props and state should trigger a re-render.
         *
         * \`Component\` always returns true.
         * \`PureComponent\` implements a shallow comparison on props and state and returns true if any
         * props or states have changed.
         *
         * If false is returned, \`Component#render\`, \`componentWillUpdate\`
         * and \`componentDidUpdate\` will not be called.
         */
        shouldComponentUpdate?(nextProps: Readonly<P>, nextState: Readonly<S>, nextContext: any): boolean;
        /**
         * Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as
         * cancelled network requests, or cleaning up any DOM elements created in \`componentDidMount\`.
         */
        componentWillUnmount?(): void;
        /**
         * Catches exceptions generated in descendant components. Unhandled exceptions will cause
         * the entire component tree to unmount.
         */
        componentDidCatch?(error: Error, errorInfo: ErrorInfo): void;
    }

    // Unfortunately, we have no way of declaring that the component constructor must implement this
    interface StaticLifecycle<P, S> {
        getDerivedStateFromProps?: GetDerivedStateFromProps<P, S> | undefined;
        getDerivedStateFromError?: GetDerivedStateFromError<P, S> | undefined;
    }

    type GetDerivedStateFromProps<P, S> =
        /**
         * Returns an update to a component's state based on its new props and old state.
         *
         * Note: its presence prevents any of the deprecated lifecycle methods from being invoked
         */
        (nextProps: Readonly<P>, prevState: S) => Partial<S> | null;

    type GetDerivedStateFromError<P, S> =
        /**
         * This lifecycle is invoked after an error has been thrown by a descendant component.
         * It receives the error that was thrown as a parameter and should return a value to update state.
         *
         * Note: its presence prevents any of the deprecated lifecycle methods from being invoked
         */
        (error: any) => Partial<S> | null;

    // This should be "infer SS" but can't use it yet
    interface NewLifecycle<P, S, SS> {
        /**
         * Runs before React applies the result of \`render\` to the document, and
         * returns an object to be given to componentDidUpdate. Useful for saving
         * things such as scroll position before \`render\` causes changes to it.
         *
         * Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated
         * lifecycle events from running.
         */
        getSnapshotBeforeUpdate?(prevProps: Readonly<P>, prevState: Readonly<S>): SS | null;
        /**
         * Called immediately after updating occurs. Not called for the initial render.
         *
         * The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.
         */
        componentDidUpdate?(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot?: SS): void;
    }

    interface DeprecatedLifecycle<P, S> {
        /**
         * Called immediately before mounting occurs, and before \`Component#render\`.
         * Avoid introducing any side-effects or subscriptions in this method.
         *
         * Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps
         * prevents this from being invoked.
         *
         * @deprecated 16.3, use componentDidMount or the constructor instead; will stop working in React 17
         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state
         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path
         */
        componentWillMount?(): void;
        /**
         * Called immediately before mounting occurs, and before \`Component#render\`.
         * Avoid introducing any side-effects or subscriptions in this method.
         *
         * This method will not stop working in React 17.
         *
         * Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps
         * prevents this from being invoked.
         *
         * @deprecated 16.3, use componentDidMount or the constructor instead
         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state
         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path
         */
        UNSAFE_componentWillMount?(): void;
        /**
         * Called when the component may be receiving new props.
         * React may call this even if props have not changed, so be sure to compare new and existing
         * props if you only want to handle changes.
         *
         * Calling \`Component#setState\` generally does not trigger this method.
         *
         * Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps
         * prevents this from being invoked.
         *
         * @deprecated 16.3, use static getDerivedStateFromProps instead; will stop working in React 17
         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props
         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path
         */
        componentWillReceiveProps?(nextProps: Readonly<P>, nextContext: any): void;
        /**
         * Called when the component may be receiving new props.
         * React may call this even if props have not changed, so be sure to compare new and existing
         * props if you only want to handle changes.
         *
         * Calling \`Component#setState\` generally does not trigger this method.
         *
         * This method will not stop working in React 17.
         *
         * Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps
         * prevents this from being invoked.
         *
         * @deprecated 16.3, use static getDerivedStateFromProps instead
         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props
         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path
         */
        UNSAFE_componentWillReceiveProps?(nextProps: Readonly<P>, nextContext: any): void;
        /**
         * Called immediately before rendering when new props or state is received. Not called for the initial render.
         *
         * Note: You cannot call \`Component#setState\` here.
         *
         * Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps
         * prevents this from being invoked.
         *
         * @deprecated 16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17
         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update
         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path
         */
        componentWillUpdate?(nextProps: Readonly<P>, nextState: Readonly<S>, nextContext: any): void;
        /**
         * Called immediately before rendering when new props or state is received. Not called for the initial render.
         *
         * Note: You cannot call \`Component#setState\` here.
         *
         * This method will not stop working in React 17.
         *
         * Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps
         * prevents this from being invoked.
         *
         * @deprecated 16.3, use getSnapshotBeforeUpdate instead
         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update
         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path
         */
        UNSAFE_componentWillUpdate?(nextProps: Readonly<P>, nextState: Readonly<S>, nextContext: any): void;
    }

    interface Mixin<P, S> extends ComponentLifecycle<P, S> {
        mixins?: Array<Mixin<P, S>> | undefined;
        statics?: {
            [key: string]: any;
        } | undefined;

        displayName?: string | undefined;
        propTypes?: ValidationMap<any> | undefined;
        contextTypes?: ValidationMap<any> | undefined;
        childContextTypes?: ValidationMap<any> | undefined;

        getDefaultProps?(): P;
        getInitialState?(): S;
    }

    interface ComponentSpec<P, S> extends Mixin<P, S> {
        render(): ReactNode;

        [propertyName: string]: any;
    }

    function createRef<T>(): RefObject<T>;

    // will show \`ForwardRef(\${Component.displayName || Component.name})\` in devtools by default,
    // but can be given its own specific name
    interface ForwardRefExoticComponent<P> extends NamedExoticComponent<P> {
        defaultProps?: Partial<P> | undefined;
        propTypes?: WeakValidationMap<P> | undefined;
    }

    function forwardRef<T, P = {}>(render: ForwardRefRenderFunction<T, P>): ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>>;

    /** Ensures that the props do not include ref at all */
    type PropsWithoutRef<P> =
        // Pick would not be sufficient for this. We'd like to avoid unnecessary mapping and need a distributive conditional to support unions.
        // see: https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#distributive-conditional-types
        // https://github.com/Microsoft/TypeScript/issues/28339
        P extends any ? ('ref' extends keyof P ? Pick<P, Exclude<keyof P, 'ref'>> : P) : P;
    /** Ensures that the props do not include string ref, which cannot be forwarded */
    type PropsWithRef<P> =
        // Just "P extends { ref?: infer R }" looks sufficient, but R will infer as {} if P is {}.
        'ref' extends keyof P
            ? P extends { ref?: infer R | undefined }
                ? string extends R
                    ? PropsWithoutRef<P> & { ref?: Exclude<R, string> | undefined }
                    : P
                : P
            : P;

    type PropsWithChildren<P> = P & { children?: ReactNode | undefined };

    /**
     * NOTE: prefer ComponentPropsWithRef, if the ref is forwarded,
     * or ComponentPropsWithoutRef when refs are not supported.
     */
    type ComponentProps<T extends keyof JSX.IntrinsicElements | JSXElementConstructor<any>> =
        T extends JSXElementConstructor<infer P>
            ? P
            : T extends keyof JSX.IntrinsicElements
                ? JSX.IntrinsicElements[T]
                : {};
    type ComponentPropsWithRef<T extends ElementType> =
        T extends (new (props: infer P) => Component<any, any>)
            ? PropsWithoutRef<P> & RefAttributes<InstanceType<T>>
            : PropsWithRef<ComponentProps<T>>;
    type ComponentPropsWithoutRef<T extends ElementType> =
        PropsWithoutRef<ComponentProps<T>>;

    type ComponentRef<T extends ElementType> = T extends NamedExoticComponent<
        ComponentPropsWithoutRef<T> & RefAttributes<infer Method>
    >
        ? Method
        : ComponentPropsWithRef<T> extends RefAttributes<infer Method>
            ? Method
            : never;

    // will show \`Memo(\${Component.displayName || Component.name})\` in devtools by default,
    // but can be given its own specific name
    type MemoExoticComponent<T extends ComponentType<any>> = NamedExoticComponent<ComponentPropsWithRef<T>> & {
        readonly type: T;
    };

    function memo<P extends object>(
        Component: FunctionComponent<P>,
        propsAreEqual?: (prevProps: Readonly<PropsWithChildren<P>>, nextProps: Readonly<PropsWithChildren<P>>) => boolean
    ): NamedExoticComponent<P>;
    function memo<T extends ComponentType<any>>(
        Component: T,
        propsAreEqual?: (prevProps: Readonly<ComponentProps<T>>, nextProps: Readonly<ComponentProps<T>>) => boolean
    ): MemoExoticComponent<T>;

    type LazyExoticComponent<T extends ComponentType<any>> = ExoticComponent<ComponentPropsWithRef<T>> & {
        readonly _result: T;
    };

    function lazy<T extends ComponentType<any>>(
        factory: () => Promise<{ default: T }>
    ): LazyExoticComponent<T>;

    //
    // React Hooks
    // ----------------------------------------------------------------------

    // based on the code in https://github.com/facebook/react/pull/13968

    // Unlike the class component setState, the updates are not allowed to be partial
    type SetStateAction<S> = S | ((prevState: S) => S);
    // this technically does accept a second argument, but it's already under a deprecation warning
    // and it's not even released so probably better to not define it.
    type Dispatch<A> = (value: A) => void;
    // Since action _can_ be undefined, dispatch may be called without any parameters.
    type DispatchWithoutAction = () => void;
    // Unlike redux, the actions _can_ be anything
    type Reducer<S, A> = (prevState: S, action: A) => S;
    // If useReducer accepts a reducer without action, dispatch may be called without any parameters.
    type ReducerWithoutAction<S> = (prevState: S) => S;
    // types used to try and prevent the compiler from reducing S
    // to a supertype common with the second argument to useReducer()
    type ReducerState<R extends Reducer<any, any>> = R extends Reducer<infer S, any> ? S : never;
    type ReducerAction<R extends Reducer<any, any>> = R extends Reducer<any, infer A> ? A : never;
    // The identity check is done with the SameValue algorithm (Object.is), which is stricter than ===
    type ReducerStateWithoutAction<R extends ReducerWithoutAction<any>> =
        R extends ReducerWithoutAction<infer S> ? S : never;
    // TODO (TypeScript 3.0): ReadonlyArray<unknown>
    type DependencyList = ReadonlyArray<any>;

    // NOTE: callbacks are _only_ allowed to return either void, or a destructor.
    type EffectCallback = () => (void | Destructor);

    interface MutableRefObject<T> {
        current: T;
    }

    // This will technically work if you give a Consumer<T> or Provider<T> but it's deprecated and warns
    /**
     * Accepts a context object (the value returned from \`React.createContext\`) and returns the current
     * context value, as given by the nearest context provider for the given context.
     *
     * @version 16.8.0
     * @see https://reactjs.org/docs/hooks-reference.html#usecontext
     */
    function useContext<T>(context: Context<T>/*, (not public API) observedBits?: number|boolean */): T;
    /**
     * Returns a stateful value, and a function to update it.
     *
     * @version 16.8.0
     * @see https://reactjs.org/docs/hooks-reference.html#usestate
     */
    function useState<S>(initialState: S | (() => S)): [S, Dispatch<SetStateAction<S>>];
    // convenience overload when first argument is omitted
    /**
     * Returns a stateful value, and a function to update it.
     *
     * @version 16.8.0
     * @see https://reactjs.org/docs/hooks-reference.html#usestate
     */
    function useState<S = undefined>(): [S | undefined, Dispatch<SetStateAction<S | undefined>>];
    /**
     * An alternative to \`useState\`.
     *
     * \`useReducer\` is usually preferable to \`useState\` when you have complex state logic that involves
     * multiple sub-values. It also lets you optimize performance for components that trigger deep
     * updates because you can pass \`dispatch\` down instead of callbacks.
     *
     * @version 16.8.0
     * @see https://reactjs.org/docs/hooks-reference.html#usereducer
     */
    // overload where dispatch could accept 0 arguments.
    function useReducer<R extends ReducerWithoutAction<any>, I>(
        reducer: R,
        initializerArg: I,
        initializer: (arg: I) => ReducerStateWithoutAction<R>
    ): [ReducerStateWithoutAction<R>, DispatchWithoutAction];
    /**
     * An alternative to \`useState\`.
     *
     * \`useReducer\` is usually preferable to \`useState\` when you have complex state logic that involves
     * multiple sub-values. It also lets you optimize performance for components that trigger deep
     * updates because you can pass \`dispatch\` down instead of callbacks.
     *
     * @version 16.8.0
     * @see https://reactjs.org/docs/hooks-reference.html#usereducer
     */
    // overload where dispatch could accept 0 arguments.
    function useReducer<R extends ReducerWithoutAction<any>>(
        reducer: R,
        initializerArg: ReducerStateWithoutAction<R>,
        initializer?: undefined
    ): [ReducerStateWithoutAction<R>, DispatchWithoutAction];
    /**
     * An alternative to \`useState\`.
     *
     * \`useReducer\` is usually preferable to \`useState\` when you have complex state logic that involves
     * multiple sub-values. It also lets you optimize performance for components that trigger deep
     * updates because you can pass \`dispatch\` down instead of callbacks.
     *
     * @version 16.8.0
     * @see https://reactjs.org/docs/hooks-reference.html#usereducer
     */
    // overload where "I" may be a subset of ReducerState<R>; used to provide autocompletion.
    // If "I" matches ReducerState<R> exactly then the last overload will allow initializer to be omitted.
    // the last overload effectively behaves as if the identity function (x => x) is the initializer.
    function useReducer<R extends Reducer<any, any>, I>(
        reducer: R,
        initializerArg: I & ReducerState<R>,
        initializer: (arg: I & ReducerState<R>) => ReducerState<R>
    ): [ReducerState<R>, Dispatch<ReducerAction<R>>];
    /**
     * An alternative to \`useState\`.
     *
     * \`useReducer\` is usually preferable to \`useState\` when you have complex state logic that involves
     * multiple sub-values. It also lets you optimize performance for components that trigger deep
     * updates because you can pass \`dispatch\` down instead of callbacks.
     *
     * @version 16.8.0
     * @see https://reactjs.org/docs/hooks-reference.html#usereducer
     */
    // overload for free "I"; all goes as long as initializer converts it into "ReducerState<R>".
    function useReducer<R extends Reducer<any, any>, I>(
        reducer: R,
        initializerArg: I,
        initializer: (arg: I) => ReducerState<R>
    ): [ReducerState<R>, Dispatch<ReducerAction<R>>];
    /**
     * An alternative to \`useState\`.
     *
     * \`useReducer\` is usually preferable to \`useState\` when you have complex state logic that involves
     * multiple sub-values. It also lets you optimize performance for components that trigger deep
     * updates because you can pass \`dispatch\` down instead of callbacks.
     *
     * @version 16.8.0
     * @see https://reactjs.org/docs/hooks-reference.html#usereducer
     */

    // I'm not sure if I keep this 2-ary or if I make it (2,3)-ary; it's currently (2,3)-ary.
    // The Flow types do have an overload for 3-ary invocation with undefined initializer.

    // NOTE: without the ReducerState indirection, TypeScript would reduce S to be the most common
    // supertype between the reducer's return type and the initialState (or the initializer's return type),
    // which would prevent autocompletion from ever working.

    // TODO: double-check if this weird overload logic is necessary. It is possible it's either a bug
    // in older versions, or a regression in newer versions of the typescript completion service.
    function useReducer<R extends Reducer<any, any>>(
        reducer: R,
        initialState: ReducerState<R>,
        initializer?: undefined
    ): [ReducerState<R>, Dispatch<ReducerAction<R>>];
    /**
     * \`useRef\` returns a mutable ref object whose \`.current\` property is initialized to the passed argument
     * (\`initialValue\`). The returned object will persist for the full lifetime of the component.
     *
     * Note that \`useRef()\` is useful for more than the \`ref\` attribute. It\u2019s handy for keeping any mutable
     * value around similar to how you\u2019d use instance fields in classes.
     *
     * @version 16.8.0
     * @see https://reactjs.org/docs/hooks-reference.html#useref
     */
    function useRef<T>(initialValue: T): MutableRefObject<T>;
    // convenience overload for refs given as a ref prop as they typically start with a null value
    /**
     * \`useRef\` returns a mutable ref object whose \`.current\` property is initialized to the passed argument
     * (\`initialValue\`). The returned object will persist for the full lifetime of the component.
     *
     * Note that \`useRef()\` is useful for more than the \`ref\` attribute. It\u2019s handy for keeping any mutable
     * value around similar to how you\u2019d use instance fields in classes.
     *
     * Usage note: if you need the result of useRef to be directly mutable, include \`| null\` in the type
     * of the generic argument.
     *
     * @version 16.8.0
     * @see https://reactjs.org/docs/hooks-reference.html#useref
     */
    function useRef<T>(initialValue: T|null): RefObject<T>;
    // convenience overload for potentially undefined initialValue / call with 0 arguments
    // has a default to stop it from defaulting to {} instead
    /**
     * \`useRef\` returns a mutable ref object whose \`.current\` property is initialized to the passed argument
     * (\`initialValue\`). The returned object will persist for the full lifetime of the component.
     *
     * Note that \`useRef()\` is useful for more than the \`ref\` attribute. It\u2019s handy for keeping any mutable
     * value around similar to how you\u2019d use instance fields in classes.
     *
     * @version 16.8.0
     * @see https://reactjs.org/docs/hooks-reference.html#useref
     */
    function useRef<T = undefined>(): MutableRefObject<T | undefined>;
    /**
     * The signature is identical to \`useEffect\`, but it fires synchronously after all DOM mutations.
     * Use this to read layout from the DOM and synchronously re-render. Updates scheduled inside
     * \`useLayoutEffect\` will be flushed synchronously, before the browser has a chance to paint.
     *
     * Prefer the standard \`useEffect\` when possible to avoid blocking visual updates.
     *
     * If you\u2019re migrating code from a class component, \`useLayoutEffect\` fires in the same phase as
     * \`componentDidMount\` and \`componentDidUpdate\`.
     *
     * @version 16.8.0
     * @see https://reactjs.org/docs/hooks-reference.html#uselayouteffect
     */
    function useLayoutEffect(effect: EffectCallback, deps?: DependencyList): void;
    /**
     * Accepts a function that contains imperative, possibly effectful code.
     *
     * @param effect Imperative function that can return a cleanup function
     * @param deps If present, effect will only activate if the values in the list change.
     *
     * @version 16.8.0
     * @see https://reactjs.org/docs/hooks-reference.html#useeffect
     */
    function useEffect(effect: EffectCallback, deps?: DependencyList): void;
    // NOTE: this does not accept strings, but this will have to be fixed by removing strings from type Ref<T>
    /**
     * \`useImperativeHandle\` customizes the instance value that is exposed to parent components when using
     * \`ref\`. As always, imperative code using refs should be avoided in most cases.
     *
     * \`useImperativeHandle\` should be used with \`React.forwardRef\`.
     *
     * @version 16.8.0
     * @see https://reactjs.org/docs/hooks-reference.html#useimperativehandle
     */
    function useImperativeHandle<T, R extends T>(ref: Ref<T>|undefined, init: () => R, deps?: DependencyList): void;
    // I made 'inputs' required here and in useMemo as there's no point to memoizing without the memoization key
    // useCallback(X) is identical to just using X, useMemo(() => Y) is identical to just using Y.
    /**
     * \`useCallback\` will return a memoized version of the callback that only changes if one of the \`inputs\`
     * has changed.
     *
     * @version 16.8.0
     * @see https://reactjs.org/docs/hooks-reference.html#usecallback
     */
    // TODO (TypeScript 3.0): <T extends (...args: never[]) => unknown>
    function useCallback<T extends (...args: any[]) => any>(callback: T, deps: DependencyList): T;
    /**
     * \`useMemo\` will only recompute the memoized value when one of the \`deps\` has changed.
     *
     * @version 16.8.0
     * @see https://reactjs.org/docs/hooks-reference.html#usememo
     */
    // allow undefined, but don't make it optional as that is very likely a mistake
    function useMemo<T>(factory: () => T, deps: DependencyList | undefined): T;
    /**
     * \`useDebugValue\` can be used to display a label for custom hooks in React DevTools.
     *
     * NOTE: We don\u2019t recommend adding debug values to every custom hook.
     * It\u2019s most valuable for custom hooks that are part of shared libraries.
     *
     * @version 16.8.0
     * @see https://reactjs.org/docs/hooks-reference.html#usedebugvalue
     */
    // the name of the custom hook is itself derived from the function name at runtime:
    // it's just the function name without the "use" prefix.
    function useDebugValue<T>(value: T, format?: (value: T) => any): void;

    //
    // Event System
    // ----------------------------------------------------------------------
    // TODO: change any to unknown when moving to TS v3
    interface BaseSyntheticEvent<E = object, C = any, T = any> {
        nativeEvent: E;
        currentTarget: C;
        target: T;
        bubbles: boolean;
        cancelable: boolean;
        defaultPrevented: boolean;
        eventPhase: number;
        isTrusted: boolean;
        preventDefault(): void;
        isDefaultPrevented(): boolean;
        stopPropagation(): void;
        isPropagationStopped(): boolean;
        persist(): void;
        timeStamp: number;
        type: string;
    }

    /**
     * currentTarget - a reference to the element on which the event listener is registered.
     *
     * target - a reference to the element from which the event was originally dispatched.
     * This might be a child element to the element on which the event listener is registered.
     * If you thought this should be \`EventTarget & T\`, see https://github.com/DefinitelyTyped/DefinitelyTyped/issues/11508#issuecomment-256045682
     */
    interface SyntheticEvent<T = Element, E = Event> extends BaseSyntheticEvent<E, EventTarget & T, EventTarget> {}

    interface ClipboardEvent<T = Element> extends SyntheticEvent<T, NativeClipboardEvent> {
        clipboardData: DataTransfer;
    }

    interface CompositionEvent<T = Element> extends SyntheticEvent<T, NativeCompositionEvent> {
        data: string;
    }

    interface DragEvent<T = Element> extends MouseEvent<T, NativeDragEvent> {
        dataTransfer: DataTransfer;
    }

    interface PointerEvent<T = Element> extends MouseEvent<T, NativePointerEvent> {
        pointerId: number;
        pressure: number;
        tangentialPressure: number;
        tiltX: number;
        tiltY: number;
        twist: number;
        width: number;
        height: number;
        pointerType: 'mouse' | 'pen' | 'touch';
        isPrimary: boolean;
    }

    interface FocusEvent<Target = Element, RelatedTarget = Element> extends SyntheticEvent<Target, NativeFocusEvent> {
        relatedTarget: (EventTarget & RelatedTarget) | null;
        target: EventTarget & Target;
    }

    interface FormEvent<T = Element> extends SyntheticEvent<T> {
    }

    interface InvalidEvent<T = Element> extends SyntheticEvent<T> {
        target: EventTarget & T;
    }

    interface ChangeEvent<T = Element> extends SyntheticEvent<T> {
        target: EventTarget & T;
    }

    interface KeyboardEvent<T = Element> extends UIEvent<T, NativeKeyboardEvent> {
        altKey: boolean;
        /** @deprecated */
        charCode: number;
        ctrlKey: boolean;
        code: string;
        /**
         * See [DOM Level 3 Events spec](https://www.w3.org/TR/uievents-key/#keys-modifier). for a list of valid (case-sensitive) arguments to this method.
         */
        getModifierState(key: string): boolean;
        /**
         * See the [DOM Level 3 Events spec](https://www.w3.org/TR/uievents-key/#named-key-attribute-values). for possible values
         */
        key: string;
        /** @deprecated */
        keyCode: number;
        locale: string;
        location: number;
        metaKey: boolean;
        repeat: boolean;
        shiftKey: boolean;
        /** @deprecated */
        which: number;
    }

    interface MouseEvent<T = Element, E = NativeMouseEvent> extends UIEvent<T, E> {
        altKey: boolean;
        button: number;
        buttons: number;
        clientX: number;
        clientY: number;
        ctrlKey: boolean;
        /**
         * See [DOM Level 3 Events spec](https://www.w3.org/TR/uievents-key/#keys-modifier). for a list of valid (case-sensitive) arguments to this method.
         */
        getModifierState(key: string): boolean;
        metaKey: boolean;
        movementX: number;
        movementY: number;
        pageX: number;
        pageY: number;
        relatedTarget: EventTarget | null;
        screenX: number;
        screenY: number;
        shiftKey: boolean;
    }

    interface TouchEvent<T = Element> extends UIEvent<T, NativeTouchEvent> {
        altKey: boolean;
        changedTouches: TouchList;
        ctrlKey: boolean;
        /**
         * See [DOM Level 3 Events spec](https://www.w3.org/TR/uievents-key/#keys-modifier). for a list of valid (case-sensitive) arguments to this method.
         */
        getModifierState(key: string): boolean;
        metaKey: boolean;
        shiftKey: boolean;
        targetTouches: TouchList;
        touches: TouchList;
    }

    interface UIEvent<T = Element, E = NativeUIEvent> extends SyntheticEvent<T, E> {
        detail: number;
        view: AbstractView;
    }

    interface WheelEvent<T = Element> extends MouseEvent<T, NativeWheelEvent> {
        deltaMode: number;
        deltaX: number;
        deltaY: number;
        deltaZ: number;
    }

    interface AnimationEvent<T = Element> extends SyntheticEvent<T, NativeAnimationEvent> {
        animationName: string;
        elapsedTime: number;
        pseudoElement: string;
    }

    interface TransitionEvent<T = Element> extends SyntheticEvent<T, NativeTransitionEvent> {
        elapsedTime: number;
        propertyName: string;
        pseudoElement: string;
    }

    //
    // Event Handler Types
    // ----------------------------------------------------------------------

    type EventHandler<E extends SyntheticEvent<any>> = { bivarianceHack(event: E): void }["bivarianceHack"];

    type ReactEventHandler<T = Element> = EventHandler<SyntheticEvent<T>>;

    type ClipboardEventHandler<T = Element> = EventHandler<ClipboardEvent<T>>;
    type CompositionEventHandler<T = Element> = EventHandler<CompositionEvent<T>>;
    type DragEventHandler<T = Element> = EventHandler<DragEvent<T>>;
    type FocusEventHandler<T = Element> = EventHandler<FocusEvent<T>>;
    type FormEventHandler<T = Element> = EventHandler<FormEvent<T>>;
    type ChangeEventHandler<T = Element> = EventHandler<ChangeEvent<T>>;
    type KeyboardEventHandler<T = Element> = EventHandler<KeyboardEvent<T>>;
    type MouseEventHandler<T = Element> = EventHandler<MouseEvent<T>>;
    type TouchEventHandler<T = Element> = EventHandler<TouchEvent<T>>;
    type PointerEventHandler<T = Element> = EventHandler<PointerEvent<T>>;
    type UIEventHandler<T = Element> = EventHandler<UIEvent<T>>;
    type WheelEventHandler<T = Element> = EventHandler<WheelEvent<T>>;
    type AnimationEventHandler<T = Element> = EventHandler<AnimationEvent<T>>;
    type TransitionEventHandler<T = Element> = EventHandler<TransitionEvent<T>>;

    //
    // Props / DOM Attributes
    // ----------------------------------------------------------------------

    /**
     * @deprecated. This was used to allow clients to pass \`ref\` and \`key\`
     * to \`createElement\`, which is no longer necessary due to intersection
     * types. If you need to declare a props object before passing it to
     * \`createElement\` or a factory, use \`ClassAttributes<T>\`:
     *
     * \`\`\`ts
     * var b: Button | null;
     * var props: ButtonProps & ClassAttributes<Button> = {
     *     ref: b => button = b, // ok!
     *     label: "I'm a Button"
     * };
     * \`\`\`
     */
    interface Props<T> {
        children?: ReactNode | undefined;
        key?: Key | undefined;
        ref?: LegacyRef<T> | undefined;
    }

    interface HTMLProps<T> extends AllHTMLAttributes<T>, ClassAttributes<T> {
    }

    type DetailedHTMLProps<E extends HTMLAttributes<T>, T> = ClassAttributes<T> & E;

    interface SVGProps<T> extends SVGAttributes<T>, ClassAttributes<T> {
    }

    interface DOMAttributes<T> {
        children?: ReactNode | undefined;
        dangerouslySetInnerHTML?: {
            __html: string;
        } | undefined;

        // Clipboard Events
        onCopy?: ClipboardEventHandler<T> | undefined;
        onCopyCapture?: ClipboardEventHandler<T> | undefined;
        onCut?: ClipboardEventHandler<T> | undefined;
        onCutCapture?: ClipboardEventHandler<T> | undefined;
        onPaste?: ClipboardEventHandler<T> | undefined;
        onPasteCapture?: ClipboardEventHandler<T> | undefined;

        // Composition Events
        onCompositionEnd?: CompositionEventHandler<T> | undefined;
        onCompositionEndCapture?: CompositionEventHandler<T> | undefined;
        onCompositionStart?: CompositionEventHandler<T> | undefined;
        onCompositionStartCapture?: CompositionEventHandler<T> | undefined;
        onCompositionUpdate?: CompositionEventHandler<T> | undefined;
        onCompositionUpdateCapture?: CompositionEventHandler<T> | undefined;

        // Focus Events
        onFocus?: FocusEventHandler<T> | undefined;
        onFocusCapture?: FocusEventHandler<T> | undefined;
        onBlur?: FocusEventHandler<T> | undefined;
        onBlurCapture?: FocusEventHandler<T> | undefined;

        // Form Events
        onChange?: FormEventHandler<T> | undefined;
        onChangeCapture?: FormEventHandler<T> | undefined;
        onBeforeInput?: FormEventHandler<T> | undefined;
        onBeforeInputCapture?: FormEventHandler<T> | undefined;
        onInput?: FormEventHandler<T> | undefined;
        onInputCapture?: FormEventHandler<T> | undefined;
        onReset?: FormEventHandler<T> | undefined;
        onResetCapture?: FormEventHandler<T> | undefined;
        onSubmit?: FormEventHandler<T> | undefined;
        onSubmitCapture?: FormEventHandler<T> | undefined;
        onInvalid?: FormEventHandler<T> | undefined;
        onInvalidCapture?: FormEventHandler<T> | undefined;

        // Image Events
        onLoad?: ReactEventHandler<T> | undefined;
        onLoadCapture?: ReactEventHandler<T> | undefined;
        onError?: ReactEventHandler<T> | undefined; // also a Media Event
        onErrorCapture?: ReactEventHandler<T> | undefined; // also a Media Event

        // Keyboard Events
        onKeyDown?: KeyboardEventHandler<T> | undefined;
        onKeyDownCapture?: KeyboardEventHandler<T> | undefined;
        onKeyPress?: KeyboardEventHandler<T> | undefined;
        onKeyPressCapture?: KeyboardEventHandler<T> | undefined;
        onKeyUp?: KeyboardEventHandler<T> | undefined;
        onKeyUpCapture?: KeyboardEventHandler<T> | undefined;

        // Media Events
        onAbort?: ReactEventHandler<T> | undefined;
        onAbortCapture?: ReactEventHandler<T> | undefined;
        onCanPlay?: ReactEventHandler<T> | undefined;
        onCanPlayCapture?: ReactEventHandler<T> | undefined;
        onCanPlayThrough?: ReactEventHandler<T> | undefined;
        onCanPlayThroughCapture?: ReactEventHandler<T> | undefined;
        onDurationChange?: ReactEventHandler<T> | undefined;
        onDurationChangeCapture?: ReactEventHandler<T> | undefined;
        onEmptied?: ReactEventHandler<T> | undefined;
        onEmptiedCapture?: ReactEventHandler<T> | undefined;
        onEncrypted?: ReactEventHandler<T> | undefined;
        onEncryptedCapture?: ReactEventHandler<T> | undefined;
        onEnded?: ReactEventHandler<T> | undefined;
        onEndedCapture?: ReactEventHandler<T> | undefined;
        onLoadedData?: ReactEventHandler<T> | undefined;
        onLoadedDataCapture?: ReactEventHandler<T> | undefined;
        onLoadedMetadata?: ReactEventHandler<T> | undefined;
        onLoadedMetadataCapture?: ReactEventHandler<T> | undefined;
        onLoadStart?: ReactEventHandler<T> | undefined;
        onLoadStartCapture?: ReactEventHandler<T> | undefined;
        onPause?: ReactEventHandler<T> | undefined;
        onPauseCapture?: ReactEventHandler<T> | undefined;
        onPlay?: ReactEventHandler<T> | undefined;
        onPlayCapture?: ReactEventHandler<T> | undefined;
        onPlaying?: ReactEventHandler<T> | undefined;
        onPlayingCapture?: ReactEventHandler<T> | undefined;
        onProgress?: ReactEventHandler<T> | undefined;
        onProgressCapture?: ReactEventHandler<T> | undefined;
        onRateChange?: ReactEventHandler<T> | undefined;
        onRateChangeCapture?: ReactEventHandler<T> | undefined;
        onSeeked?: ReactEventHandler<T> | undefined;
        onSeekedCapture?: ReactEventHandler<T> | undefined;
        onSeeking?: ReactEventHandler<T> | undefined;
        onSeekingCapture?: ReactEventHandler<T> | undefined;
        onStalled?: ReactEventHandler<T> | undefined;
        onStalledCapture?: ReactEventHandler<T> | undefined;
        onSuspend?: ReactEventHandler<T> | undefined;
        onSuspendCapture?: ReactEventHandler<T> | undefined;
        onTimeUpdate?: ReactEventHandler<T> | undefined;
        onTimeUpdateCapture?: ReactEventHandler<T> | undefined;
        onVolumeChange?: ReactEventHandler<T> | undefined;
        onVolumeChangeCapture?: ReactEventHandler<T> | undefined;
        onWaiting?: ReactEventHandler<T> | undefined;
        onWaitingCapture?: ReactEventHandler<T> | undefined;

        // MouseEvents
        onAuxClick?: MouseEventHandler<T> | undefined;
        onAuxClickCapture?: MouseEventHandler<T> | undefined;
        onClick?: MouseEventHandler<T> | undefined;
        onClickCapture?: MouseEventHandler<T> | undefined;
        onContextMenu?: MouseEventHandler<T> | undefined;
        onContextMenuCapture?: MouseEventHandler<T> | undefined;
        onDoubleClick?: MouseEventHandler<T> | undefined;
        onDoubleClickCapture?: MouseEventHandler<T> | undefined;
        onDrag?: DragEventHandler<T> | undefined;
        onDragCapture?: DragEventHandler<T> | undefined;
        onDragEnd?: DragEventHandler<T> | undefined;
        onDragEndCapture?: DragEventHandler<T> | undefined;
        onDragEnter?: DragEventHandler<T> | undefined;
        onDragEnterCapture?: DragEventHandler<T> | undefined;
        onDragExit?: DragEventHandler<T> | undefined;
        onDragExitCapture?: DragEventHandler<T> | undefined;
        onDragLeave?: DragEventHandler<T> | undefined;
        onDragLeaveCapture?: DragEventHandler<T> | undefined;
        onDragOver?: DragEventHandler<T> | undefined;
        onDragOverCapture?: DragEventHandler<T> | undefined;
        onDragStart?: DragEventHandler<T> | undefined;
        onDragStartCapture?: DragEventHandler<T> | undefined;
        onDrop?: DragEventHandler<T> | undefined;
        onDropCapture?: DragEventHandler<T> | undefined;
        onMouseDown?: MouseEventHandler<T> | undefined;
        onMouseDownCapture?: MouseEventHandler<T> | undefined;
        onMouseEnter?: MouseEventHandler<T> | undefined;
        onMouseLeave?: MouseEventHandler<T> | undefined;
        onMouseMove?: MouseEventHandler<T> | undefined;
        onMouseMoveCapture?: MouseEventHandler<T> | undefined;
        onMouseOut?: MouseEventHandler<T> | undefined;
        onMouseOutCapture?: MouseEventHandler<T> | undefined;
        onMouseOver?: MouseEventHandler<T> | undefined;
        onMouseOverCapture?: MouseEventHandler<T> | undefined;
        onMouseUp?: MouseEventHandler<T> | undefined;
        onMouseUpCapture?: MouseEventHandler<T> | undefined;

        // Selection Events
        onSelect?: ReactEventHandler<T> | undefined;
        onSelectCapture?: ReactEventHandler<T> | undefined;

        // Touch Events
        onTouchCancel?: TouchEventHandler<T> | undefined;
        onTouchCancelCapture?: TouchEventHandler<T> | undefined;
        onTouchEnd?: TouchEventHandler<T> | undefined;
        onTouchEndCapture?: TouchEventHandler<T> | undefined;
        onTouchMove?: TouchEventHandler<T> | undefined;
        onTouchMoveCapture?: TouchEventHandler<T> | undefined;
        onTouchStart?: TouchEventHandler<T> | undefined;
        onTouchStartCapture?: TouchEventHandler<T> | undefined;

        // Pointer Events
        onPointerDown?: PointerEventHandler<T> | undefined;
        onPointerDownCapture?: PointerEventHandler<T> | undefined;
        onPointerMove?: PointerEventHandler<T> | undefined;
        onPointerMoveCapture?: PointerEventHandler<T> | undefined;
        onPointerUp?: PointerEventHandler<T> | undefined;
        onPointerUpCapture?: PointerEventHandler<T> | undefined;
        onPointerCancel?: PointerEventHandler<T> | undefined;
        onPointerCancelCapture?: PointerEventHandler<T> | undefined;
        onPointerEnter?: PointerEventHandler<T> | undefined;
        onPointerEnterCapture?: PointerEventHandler<T> | undefined;
        onPointerLeave?: PointerEventHandler<T> | undefined;
        onPointerLeaveCapture?: PointerEventHandler<T> | undefined;
        onPointerOver?: PointerEventHandler<T> | undefined;
        onPointerOverCapture?: PointerEventHandler<T> | undefined;
        onPointerOut?: PointerEventHandler<T> | undefined;
        onPointerOutCapture?: PointerEventHandler<T> | undefined;
        onGotPointerCapture?: PointerEventHandler<T> | undefined;
        onGotPointerCaptureCapture?: PointerEventHandler<T> | undefined;
        onLostPointerCapture?: PointerEventHandler<T> | undefined;
        onLostPointerCaptureCapture?: PointerEventHandler<T> | undefined;

        // UI Events
        onScroll?: UIEventHandler<T> | undefined;
        onScrollCapture?: UIEventHandler<T> | undefined;

        // Wheel Events
        onWheel?: WheelEventHandler<T> | undefined;
        onWheelCapture?: WheelEventHandler<T> | undefined;

        // Animation Events
        onAnimationStart?: AnimationEventHandler<T> | undefined;
        onAnimationStartCapture?: AnimationEventHandler<T> | undefined;
        onAnimationEnd?: AnimationEventHandler<T> | undefined;
        onAnimationEndCapture?: AnimationEventHandler<T> | undefined;
        onAnimationIteration?: AnimationEventHandler<T> | undefined;
        onAnimationIterationCapture?: AnimationEventHandler<T> | undefined;

        // Transition Events
        onTransitionEnd?: TransitionEventHandler<T> | undefined;
        onTransitionEndCapture?: TransitionEventHandler<T> | undefined;
    }

    export interface CSSProperties extends CSS.Properties<string | number> {
        /**
         * The index signature was removed to enable closed typing for style
         * using CSSType. You're able to use type assertion or module augmentation
         * to add properties or an index signature of your own.
         *
         * For examples and more information, visit:
         * https://github.com/frenic/csstype#what-should-i-do-when-i-get-type-errors
         */
    }

    // All the WAI-ARIA 1.1 attributes from https://www.w3.org/TR/wai-aria-1.1/
    interface AriaAttributes {
        /** Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application. */
        'aria-activedescendant'?: string | undefined;
        /** Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute. */
        'aria-atomic'?: Booleanish | undefined;
        /**
         * Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
         * presented if they are made.
         */
        'aria-autocomplete'?: 'none' | 'inline' | 'list' | 'both' | undefined;
        /** Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user. */
        'aria-busy'?: Booleanish | undefined;
        /**
         * Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.
         * @see aria-pressed @see aria-selected.
         */
        'aria-checked'?: boolean | 'false' | 'mixed' | 'true' | undefined;
        /**
         * Defines the total number of columns in a table, grid, or treegrid.
         * @see aria-colindex.
         */
        'aria-colcount'?: number | undefined;
        /**
         * Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.
         * @see aria-colcount @see aria-colspan.
         */
        'aria-colindex'?: number | undefined;
        /**
         * Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.
         * @see aria-colindex @see aria-rowspan.
         */
        'aria-colspan'?: number | undefined;
        /**
         * Identifies the element (or elements) whose contents or presence are controlled by the current element.
         * @see aria-owns.
         */
        'aria-controls'?: string | undefined;
        /** Indicates the element that represents the current item within a container or set of related elements. */
        'aria-current'?: boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time' | undefined;
        /**
         * Identifies the element (or elements) that describes the object.
         * @see aria-labelledby
         */
        'aria-describedby'?: string | undefined;
        /**
         * Identifies the element that provides a detailed, extended description for the object.
         * @see aria-describedby.
         */
        'aria-details'?: string | undefined;
        /**
         * Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.
         * @see aria-hidden @see aria-readonly.
         */
        'aria-disabled'?: Booleanish | undefined;
        /**
         * Indicates what functions can be performed when a dragged object is released on the drop target.
         * @deprecated in ARIA 1.1
         */
        'aria-dropeffect'?: 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup' | undefined;
        /**
         * Identifies the element that provides an error message for the object.
         * @see aria-invalid @see aria-describedby.
         */
        'aria-errormessage'?: string | undefined;
        /** Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed. */
        'aria-expanded'?: Booleanish | undefined;
        /**
         * Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
         * allows assistive technology to override the general default of reading in document source order.
         */
        'aria-flowto'?: string | undefined;
        /**
         * Indicates an element's "grabbed" state in a drag-and-drop operation.
         * @deprecated in ARIA 1.1
         */
        'aria-grabbed'?: Booleanish | undefined;
        /** Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element. */
        'aria-haspopup'?: boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog' | undefined;
        /**
         * Indicates whether the element is exposed to an accessibility API.
         * @see aria-disabled.
         */
        'aria-hidden'?: Booleanish | undefined;
        /**
         * Indicates the entered value does not conform to the format expected by the application.
         * @see aria-errormessage.
         */
        'aria-invalid'?: boolean | 'false' | 'true' | 'grammar' | 'spelling' | undefined;
        /** Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element. */
        'aria-keyshortcuts'?: string | undefined;
        /**
         * Defines a string value that labels the current element.
         * @see aria-labelledby.
         */
        'aria-label'?: string | undefined;
        /**
         * Identifies the element (or elements) that labels the current element.
         * @see aria-describedby.
         */
        'aria-labelledby'?: string | undefined;
        /** Defines the hierarchical level of an element within a structure. */
        'aria-level'?: number | undefined;
        /** Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region. */
        'aria-live'?: 'off' | 'assertive' | 'polite' | undefined;
        /** Indicates whether an element is modal when displayed. */
        'aria-modal'?: Booleanish | undefined;
        /** Indicates whether a text box accepts multiple lines of input or only a single line. */
        'aria-multiline'?: Booleanish | undefined;
        /** Indicates that the user may select more than one item from the current selectable descendants. */
        'aria-multiselectable'?: Booleanish | undefined;
        /** Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous. */
        'aria-orientation'?: 'horizontal' | 'vertical' | undefined;
        /**
         * Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
         * between DOM elements where the DOM hierarchy cannot be used to represent the relationship.
         * @see aria-controls.
         */
        'aria-owns'?: string | undefined;
        /**
         * Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
         * A hint could be a sample value or a brief description of the expected format.
         */
        'aria-placeholder'?: string | undefined;
        /**
         * Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.
         * @see aria-setsize.
         */
        'aria-posinset'?: number | undefined;
        /**
         * Indicates the current "pressed" state of toggle buttons.
         * @see aria-checked @see aria-selected.
         */
        'aria-pressed'?: boolean | 'false' | 'mixed' | 'true' | undefined;
        /**
         * Indicates that the element is not editable, but is otherwise operable.
         * @see aria-disabled.
         */
        'aria-readonly'?: Booleanish | undefined;
        /**
         * Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.
         * @see aria-atomic.
         */
        'aria-relevant'?: 'additions' | 'additions removals' | 'additions text' | 'all' | 'removals' | 'removals additions' | 'removals text' | 'text' | 'text additions' | 'text removals' | undefined;
        /** Indicates that user input is required on the element before a form may be submitted. */
        'aria-required'?: Booleanish | undefined;
        /** Defines a human-readable, author-localized description for the role of an element. */
        'aria-roledescription'?: string | undefined;
        /**
         * Defines the total number of rows in a table, grid, or treegrid.
         * @see aria-rowindex.
         */
        'aria-rowcount'?: number | undefined;
        /**
         * Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.
         * @see aria-rowcount @see aria-rowspan.
         */
        'aria-rowindex'?: number | undefined;
        /**
         * Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.
         * @see aria-rowindex @see aria-colspan.
         */
        'aria-rowspan'?: number | undefined;
        /**
         * Indicates the current "selected" state of various widgets.
         * @see aria-checked @see aria-pressed.
         */
        'aria-selected'?: Booleanish | undefined;
        /**
         * Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.
         * @see aria-posinset.
         */
        'aria-setsize'?: number | undefined;
        /** Indicates if items in a table or grid are sorted in ascending or descending order. */
        'aria-sort'?: 'none' | 'ascending' | 'descending' | 'other' | undefined;
        /** Defines the maximum allowed value for a range widget. */
        'aria-valuemax'?: number | undefined;
        /** Defines the minimum allowed value for a range widget. */
        'aria-valuemin'?: number | undefined;
        /**
         * Defines the current value for a range widget.
         * @see aria-valuetext.
         */
        'aria-valuenow'?: number | undefined;
        /** Defines the human readable text alternative of aria-valuenow for a range widget. */
        'aria-valuetext'?: string | undefined;
    }

    // All the WAI-ARIA 1.1 role attribute values from https://www.w3.org/TR/wai-aria-1.1/#role_definitions
    type AriaRole =
        | 'alert'
        | 'alertdialog'
        | 'application'
        | 'article'
        | 'banner'
        | 'button'
        | 'cell'
        | 'checkbox'
        | 'columnheader'
        | 'combobox'
        | 'complementary'
        | 'contentinfo'
        | 'definition'
        | 'dialog'
        | 'directory'
        | 'document'
        | 'feed'
        | 'figure'
        | 'form'
        | 'grid'
        | 'gridcell'
        | 'group'
        | 'heading'
        | 'img'
        | 'link'
        | 'list'
        | 'listbox'
        | 'listitem'
        | 'log'
        | 'main'
        | 'marquee'
        | 'math'
        | 'menu'
        | 'menubar'
        | 'menuitem'
        | 'menuitemcheckbox'
        | 'menuitemradio'
        | 'navigation'
        | 'none'
        | 'note'
        | 'option'
        | 'presentation'
        | 'progressbar'
        | 'radio'
        | 'radiogroup'
        | 'region'
        | 'row'
        | 'rowgroup'
        | 'rowheader'
        | 'scrollbar'
        | 'search'
        | 'searchbox'
        | 'separator'
        | 'slider'
        | 'spinbutton'
        | 'status'
        | 'switch'
        | 'tab'
        | 'table'
        | 'tablist'
        | 'tabpanel'
        | 'term'
        | 'textbox'
        | 'timer'
        | 'toolbar'
        | 'tooltip'
        | 'tree'
        | 'treegrid'
        | 'treeitem'
        | (string & {});

    interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {
        // React-specific Attributes
        defaultChecked?: boolean | undefined;
        defaultValue?: string | number | ReadonlyArray<string> | undefined;
        suppressContentEditableWarning?: boolean | undefined;
        suppressHydrationWarning?: boolean | undefined;

        // Standard HTML Attributes
        accessKey?: string | undefined;
        className?: string | undefined;
        contentEditable?: Booleanish | "inherit" | undefined;
        contextMenu?: string | undefined;
        dir?: string | undefined;
        draggable?: Booleanish | undefined;
        hidden?: boolean | undefined;
        id?: string | undefined;
        lang?: string | undefined;
        placeholder?: string | undefined;
        slot?: string | undefined;
        spellCheck?: Booleanish | undefined;
        style?: CSSProperties | undefined;
        tabIndex?: number | undefined;
        title?: string | undefined;
        translate?: 'yes' | 'no' | undefined;

        // Unknown
        radioGroup?: string | undefined; // <command>, <menuitem>

        // WAI-ARIA
        role?: AriaRole | undefined;

        // RDFa Attributes
        about?: string | undefined;
        datatype?: string | undefined;
        inlist?: any;
        prefix?: string | undefined;
        property?: string | undefined;
        resource?: string | undefined;
        typeof?: string | undefined;
        vocab?: string | undefined;

        // Non-standard Attributes
        autoCapitalize?: string | undefined;
        autoCorrect?: string | undefined;
        autoSave?: string | undefined;
        color?: string | undefined;
        itemProp?: string | undefined;
        itemScope?: boolean | undefined;
        itemType?: string | undefined;
        itemID?: string | undefined;
        itemRef?: string | undefined;
        results?: number | undefined;
        security?: string | undefined;
        unselectable?: 'on' | 'off' | undefined;

        // Living Standard
        /**
         * Hints at the type of data that might be entered by the user while editing the element or its contents
         * @see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute
         */
        inputMode?: 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search' | undefined;
        /**
         * Specify that a standard HTML element should behave like a defined custom built-in element
         * @see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is
         */
        is?: string | undefined;
    }

    interface AllHTMLAttributes<T> extends HTMLAttributes<T> {
        // Standard HTML Attributes
        accept?: string | undefined;
        acceptCharset?: string | undefined;
        action?: string | undefined;
        allowFullScreen?: boolean | undefined;
        allowTransparency?: boolean | undefined;
        alt?: string | undefined;
        as?: string | undefined;
        async?: boolean | undefined;
        autoComplete?: string | undefined;
        autoFocus?: boolean | undefined;
        autoPlay?: boolean | undefined;
        capture?: boolean | 'user' | 'environment' | undefined;
        cellPadding?: number | string | undefined;
        cellSpacing?: number | string | undefined;
        charSet?: string | undefined;
        challenge?: string | undefined;
        checked?: boolean | undefined;
        cite?: string | undefined;
        classID?: string | undefined;
        cols?: number | undefined;
        colSpan?: number | undefined;
        content?: string | undefined;
        controls?: boolean | undefined;
        coords?: string | undefined;
        crossOrigin?: string | undefined;
        data?: string | undefined;
        dateTime?: string | undefined;
        default?: boolean | undefined;
        defer?: boolean | undefined;
        disabled?: boolean | undefined;
        download?: any;
        encType?: string | undefined;
        form?: string | undefined;
        formAction?: string | undefined;
        formEncType?: string | undefined;
        formMethod?: string | undefined;
        formNoValidate?: boolean | undefined;
        formTarget?: string | undefined;
        frameBorder?: number | string | undefined;
        headers?: string | undefined;
        height?: number | string | undefined;
        high?: number | undefined;
        href?: string | undefined;
        hrefLang?: string | undefined;
        htmlFor?: string | undefined;
        httpEquiv?: string | undefined;
        integrity?: string | undefined;
        keyParams?: string | undefined;
        keyType?: string | undefined;
        kind?: string | undefined;
        label?: string | undefined;
        list?: string | undefined;
        loop?: boolean | undefined;
        low?: number | undefined;
        manifest?: string | undefined;
        marginHeight?: number | undefined;
        marginWidth?: number | undefined;
        max?: number | string | undefined;
        maxLength?: number | undefined;
        media?: string | undefined;
        mediaGroup?: string | undefined;
        method?: string | undefined;
        min?: number | string | undefined;
        minLength?: number | undefined;
        multiple?: boolean | undefined;
        muted?: boolean | undefined;
        name?: string | undefined;
        nonce?: string | undefined;
        noValidate?: boolean | undefined;
        open?: boolean | undefined;
        optimum?: number | undefined;
        pattern?: string | undefined;
        placeholder?: string | undefined;
        playsInline?: boolean | undefined;
        poster?: string | undefined;
        preload?: string | undefined;
        readOnly?: boolean | undefined;
        rel?: string | undefined;
        required?: boolean | undefined;
        reversed?: boolean | undefined;
        rows?: number | undefined;
        rowSpan?: number | undefined;
        sandbox?: string | undefined;
        scope?: string | undefined;
        scoped?: boolean | undefined;
        scrolling?: string | undefined;
        seamless?: boolean | undefined;
        selected?: boolean | undefined;
        shape?: string | undefined;
        size?: number | undefined;
        sizes?: string | undefined;
        span?: number | undefined;
        src?: string | undefined;
        srcDoc?: string | undefined;
        srcLang?: string | undefined;
        srcSet?: string | undefined;
        start?: number | undefined;
        step?: number | string | undefined;
        summary?: string | undefined;
        target?: string | undefined;
        type?: string | undefined;
        useMap?: string | undefined;
        value?: string | ReadonlyArray<string> | number | undefined;
        width?: number | string | undefined;
        wmode?: string | undefined;
        wrap?: string | undefined;
    }

    type HTMLAttributeReferrerPolicy =
        | ''
        | 'no-referrer'
        | 'no-referrer-when-downgrade'
        | 'origin'
        | 'origin-when-cross-origin'
        | 'same-origin'
        | 'strict-origin'
        | 'strict-origin-when-cross-origin'
        | 'unsafe-url';

    type HTMLAttributeAnchorTarget =
        | '_self'
        | '_blank'
        | '_parent'
        | '_top'
        | (string & {});

    interface AnchorHTMLAttributes<T> extends HTMLAttributes<T> {
        download?: any;
        href?: string | undefined;
        hrefLang?: string | undefined;
        media?: string | undefined;
        ping?: string | undefined;
        rel?: string | undefined;
        target?: HTMLAttributeAnchorTarget | undefined;
        type?: string | undefined;
        referrerPolicy?: HTMLAttributeReferrerPolicy | undefined;
    }

    interface AudioHTMLAttributes<T> extends MediaHTMLAttributes<T> {}

    interface AreaHTMLAttributes<T> extends HTMLAttributes<T> {
        alt?: string | undefined;
        coords?: string | undefined;
        download?: any;
        href?: string | undefined;
        hrefLang?: string | undefined;
        media?: string | undefined;
        referrerPolicy?: HTMLAttributeReferrerPolicy | undefined;
        rel?: string | undefined;
        shape?: string | undefined;
        target?: string | undefined;
    }

    interface BaseHTMLAttributes<T> extends HTMLAttributes<T> {
        href?: string | undefined;
        target?: string | undefined;
    }

    interface BlockquoteHTMLAttributes<T> extends HTMLAttributes<T> {
        cite?: string | undefined;
    }

    interface ButtonHTMLAttributes<T> extends HTMLAttributes<T> {
        autoFocus?: boolean | undefined;
        disabled?: boolean | undefined;
        form?: string | undefined;
        formAction?: string | undefined;
        formEncType?: string | undefined;
        formMethod?: string | undefined;
        formNoValidate?: boolean | undefined;
        formTarget?: string | undefined;
        name?: string | undefined;
        type?: 'submit' | 'reset' | 'button' | undefined;
        value?: string | ReadonlyArray<string> | number | undefined;
    }

    interface CanvasHTMLAttributes<T> extends HTMLAttributes<T> {
        height?: number | string | undefined;
        width?: number | string | undefined;
    }

    interface ColHTMLAttributes<T> extends HTMLAttributes<T> {
        span?: number | undefined;
        width?: number | string | undefined;
    }

    interface ColgroupHTMLAttributes<T> extends HTMLAttributes<T> {
        span?: number | undefined;
    }

    interface DataHTMLAttributes<T> extends HTMLAttributes<T> {
        value?: string | ReadonlyArray<string> | number | undefined;
    }

    interface DetailsHTMLAttributes<T> extends HTMLAttributes<T> {
        open?: boolean | undefined;
        onToggle?: ReactEventHandler<T> | undefined;
    }

    interface DelHTMLAttributes<T> extends HTMLAttributes<T> {
        cite?: string | undefined;
        dateTime?: string | undefined;
    }

    interface DialogHTMLAttributes<T> extends HTMLAttributes<T> {
        open?: boolean | undefined;
    }

    interface EmbedHTMLAttributes<T> extends HTMLAttributes<T> {
        height?: number | string | undefined;
        src?: string | undefined;
        type?: string | undefined;
        width?: number | string | undefined;
    }

    interface FieldsetHTMLAttributes<T> extends HTMLAttributes<T> {
        disabled?: boolean | undefined;
        form?: string | undefined;
        name?: string | undefined;
    }

    interface FormHTMLAttributes<T> extends HTMLAttributes<T> {
        acceptCharset?: string | undefined;
        action?: string | undefined;
        autoComplete?: string | undefined;
        encType?: string | undefined;
        method?: string | undefined;
        name?: string | undefined;
        noValidate?: boolean | undefined;
        target?: string | undefined;
    }

    interface HtmlHTMLAttributes<T> extends HTMLAttributes<T> {
        manifest?: string | undefined;
    }

    interface IframeHTMLAttributes<T> extends HTMLAttributes<T> {
        allow?: string | undefined;
        allowFullScreen?: boolean | undefined;
        allowTransparency?: boolean | undefined;
        /** @deprecated */
        frameBorder?: number | string | undefined;
        height?: number | string | undefined;
        loading?: "eager" | "lazy" | undefined;
        /** @deprecated */
        marginHeight?: number | undefined;
        /** @deprecated */
        marginWidth?: number | undefined;
        name?: string | undefined;
        referrerPolicy?: HTMLAttributeReferrerPolicy | undefined;
        sandbox?: string | undefined;
        /** @deprecated */
        scrolling?: string | undefined;
        seamless?: boolean | undefined;
        src?: string | undefined;
        srcDoc?: string | undefined;
        width?: number | string | undefined;
    }

    interface ImgHTMLAttributes<T> extends HTMLAttributes<T> {
        alt?: string | undefined;
        crossOrigin?: "anonymous" | "use-credentials" | "" | undefined;
        decoding?: "async" | "auto" | "sync" | undefined;
        height?: number | string | undefined;
        loading?: "eager" | "lazy" | undefined;
        referrerPolicy?: HTMLAttributeReferrerPolicy | undefined;
        sizes?: string | undefined;
        src?: string | undefined;
        srcSet?: string | undefined;
        useMap?: string | undefined;
        width?: number | string | undefined;
    }

    interface InsHTMLAttributes<T> extends HTMLAttributes<T> {
        cite?: string | undefined;
        dateTime?: string | undefined;
    }

    type HTMLInputTypeAttribute =
        | 'button'
        | 'checkbox'
        | 'color'
        | 'date'
        | 'datetime-local'
        | 'email'
        | 'file'
        | 'hidden'
        | 'image'
        | 'month'
        | 'number'
        | 'password'
        | 'radio'
        | 'range'
        | 'reset'
        | 'search'
        | 'submit'
        | 'tel'
        | 'text'
        | 'time'
        | 'url'
        | 'week'
        | (string & {});

    interface InputHTMLAttributes<T> extends HTMLAttributes<T> {
        accept?: string | undefined;
        alt?: string | undefined;
        autoComplete?: string | undefined;
        autoFocus?: boolean | undefined;
        capture?: boolean | 'user' | 'environment' | undefined; // https://www.w3.org/TR/html-media-capture/#the-capture-attribute
        checked?: boolean | undefined;
        crossOrigin?: string | undefined;
        disabled?: boolean | undefined;
        enterKeyHint?: 'enter' | 'done' | 'go' | 'next' | 'previous' | 'search' | 'send' | undefined;
        form?: string | undefined;
        formAction?: string | undefined;
        formEncType?: string | undefined;
        formMethod?: string | undefined;
        formNoValidate?: boolean | undefined;
        formTarget?: string | undefined;
        height?: number | string | undefined;
        list?: string | undefined;
        max?: number | string | undefined;
        maxLength?: number | undefined;
        min?: number | string | undefined;
        minLength?: number | undefined;
        multiple?: boolean | undefined;
        name?: string | undefined;
        pattern?: string | undefined;
        placeholder?: string | undefined;
        readOnly?: boolean | undefined;
        required?: boolean | undefined;
        size?: number | undefined;
        src?: string | undefined;
        step?: number | string | undefined;
        type?: HTMLInputTypeAttribute | undefined;
        value?: string | ReadonlyArray<string> | number | undefined;
        width?: number | string | undefined;

        onChange?: ChangeEventHandler<T> | undefined;
    }

    interface KeygenHTMLAttributes<T> extends HTMLAttributes<T> {
        autoFocus?: boolean | undefined;
        challenge?: string | undefined;
        disabled?: boolean | undefined;
        form?: string | undefined;
        keyType?: string | undefined;
        keyParams?: string | undefined;
        name?: string | undefined;
    }

    interface LabelHTMLAttributes<T> extends HTMLAttributes<T> {
        form?: string | undefined;
        htmlFor?: string | undefined;
    }

    interface LiHTMLAttributes<T> extends HTMLAttributes<T> {
        value?: string | ReadonlyArray<string> | number | undefined;
    }

    interface LinkHTMLAttributes<T> extends HTMLAttributes<T> {
        as?: string | undefined;
        crossOrigin?: string | undefined;
        href?: string | undefined;
        hrefLang?: string | undefined;
        integrity?: string | undefined;
        media?: string | undefined;
        imageSrcSet?: string | undefined;
        referrerPolicy?: HTMLAttributeReferrerPolicy | undefined;
        rel?: string | undefined;
        sizes?: string | undefined;
        type?: string | undefined;
        charSet?: string | undefined;
    }

    interface MapHTMLAttributes<T> extends HTMLAttributes<T> {
        name?: string | undefined;
    }

    interface MenuHTMLAttributes<T> extends HTMLAttributes<T> {
        type?: string | undefined;
    }

    interface MediaHTMLAttributes<T> extends HTMLAttributes<T> {
        autoPlay?: boolean | undefined;
        controls?: boolean | undefined;
        controlsList?: string | undefined;
        crossOrigin?: string | undefined;
        loop?: boolean | undefined;
        mediaGroup?: string | undefined;
        muted?: boolean | undefined;
        playsInline?: boolean | undefined;
        preload?: string | undefined;
        src?: string | undefined;
    }

    interface MetaHTMLAttributes<T> extends HTMLAttributes<T> {
        charSet?: string | undefined;
        content?: string | undefined;
        httpEquiv?: string | undefined;
        name?: string | undefined;
        media?: string | undefined;
    }

    interface MeterHTMLAttributes<T> extends HTMLAttributes<T> {
        form?: string | undefined;
        high?: number | undefined;
        low?: number | undefined;
        max?: number | string | undefined;
        min?: number | string | undefined;
        optimum?: number | undefined;
        value?: string | ReadonlyArray<string> | number | undefined;
    }

    interface QuoteHTMLAttributes<T> extends HTMLAttributes<T> {
        cite?: string | undefined;
    }

    interface ObjectHTMLAttributes<T> extends HTMLAttributes<T> {
        classID?: string | undefined;
        data?: string | undefined;
        form?: string | undefined;
        height?: number | string | undefined;
        name?: string | undefined;
        type?: string | undefined;
        useMap?: string | undefined;
        width?: number | string | undefined;
        wmode?: string | undefined;
    }

    interface OlHTMLAttributes<T> extends HTMLAttributes<T> {
        reversed?: boolean | undefined;
        start?: number | undefined;
        type?: '1' | 'a' | 'A' | 'i' | 'I' | undefined;
    }

    interface OptgroupHTMLAttributes<T> extends HTMLAttributes<T> {
        disabled?: boolean | undefined;
        label?: string | undefined;
    }

    interface OptionHTMLAttributes<T> extends HTMLAttributes<T> {
        disabled?: boolean | undefined;
        label?: string | undefined;
        selected?: boolean | undefined;
        value?: string | ReadonlyArray<string> | number | undefined;
    }

    interface OutputHTMLAttributes<T> extends HTMLAttributes<T> {
        form?: string | undefined;
        htmlFor?: string | undefined;
        name?: string | undefined;
    }

    interface ParamHTMLAttributes<T> extends HTMLAttributes<T> {
        name?: string | undefined;
        value?: string | ReadonlyArray<string> | number | undefined;
    }

    interface ProgressHTMLAttributes<T> extends HTMLAttributes<T> {
        max?: number | string | undefined;
        value?: string | ReadonlyArray<string> | number | undefined;
    }

    interface SlotHTMLAttributes<T> extends HTMLAttributes<T> {
        name?: string | undefined;
    }

    interface ScriptHTMLAttributes<T> extends HTMLAttributes<T> {
        async?: boolean | undefined;
        /** @deprecated */
        charSet?: string | undefined;
        crossOrigin?: string | undefined;
        defer?: boolean | undefined;
        integrity?: string | undefined;
        noModule?: boolean | undefined;
        nonce?: string | undefined;
        referrerPolicy?: HTMLAttributeReferrerPolicy | undefined;
        src?: string | undefined;
        type?: string | undefined;
    }

    interface SelectHTMLAttributes<T> extends HTMLAttributes<T> {
        autoComplete?: string | undefined;
        autoFocus?: boolean | undefined;
        disabled?: boolean | undefined;
        form?: string | undefined;
        multiple?: boolean | undefined;
        name?: string | undefined;
        required?: boolean | undefined;
        size?: number | undefined;
        value?: string | ReadonlyArray<string> | number | undefined;
        onChange?: ChangeEventHandler<T> | undefined;
    }

    interface SourceHTMLAttributes<T> extends HTMLAttributes<T> {
        height?: number | string | undefined;
        media?: string | undefined;
        sizes?: string | undefined;
        src?: string | undefined;
        srcSet?: string | undefined;
        type?: string | undefined;
        width?: number | string | undefined;
    }

    interface StyleHTMLAttributes<T> extends HTMLAttributes<T> {
        media?: string | undefined;
        nonce?: string | undefined;
        scoped?: boolean | undefined;
        type?: string | undefined;
    }

    interface TableHTMLAttributes<T> extends HTMLAttributes<T> {
        cellPadding?: number | string | undefined;
        cellSpacing?: number | string | undefined;
        summary?: string | undefined;
        width?: number | string | undefined;
    }

    interface TextareaHTMLAttributes<T> extends HTMLAttributes<T> {
        autoComplete?: string | undefined;
        autoFocus?: boolean | undefined;
        cols?: number | undefined;
        dirName?: string | undefined;
        disabled?: boolean | undefined;
        form?: string | undefined;
        maxLength?: number | undefined;
        minLength?: number | undefined;
        name?: string | undefined;
        placeholder?: string | undefined;
        readOnly?: boolean | undefined;
        required?: boolean | undefined;
        rows?: number | undefined;
        value?: string | ReadonlyArray<string> | number | undefined;
        wrap?: string | undefined;

        onChange?: ChangeEventHandler<T> | undefined;
    }

    interface TdHTMLAttributes<T> extends HTMLAttributes<T> {
        align?: "left" | "center" | "right" | "justify" | "char" | undefined;
        colSpan?: number | undefined;
        headers?: string | undefined;
        rowSpan?: number | undefined;
        scope?: string | undefined;
        abbr?: string | undefined;
        height?: number | string | undefined;
        width?: number | string | undefined;
        valign?: "top" | "middle" | "bottom" | "baseline" | undefined;
    }

    interface ThHTMLAttributes<T> extends HTMLAttributes<T> {
        align?: "left" | "center" | "right" | "justify" | "char" | undefined;
        colSpan?: number | undefined;
        headers?: string | undefined;
        rowSpan?: number | undefined;
        scope?: string | undefined;
        abbr?: string | undefined;
    }

    interface TimeHTMLAttributes<T> extends HTMLAttributes<T> {
        dateTime?: string | undefined;
    }

    interface TrackHTMLAttributes<T> extends HTMLAttributes<T> {
        default?: boolean | undefined;
        kind?: string | undefined;
        label?: string | undefined;
        src?: string | undefined;
        srcLang?: string | undefined;
    }

    interface VideoHTMLAttributes<T> extends MediaHTMLAttributes<T> {
        height?: number | string | undefined;
        playsInline?: boolean | undefined;
        poster?: string | undefined;
        width?: number | string | undefined;
        disablePictureInPicture?: boolean | undefined;
        disableRemotePlayback?: boolean | undefined;
    }

    // this list is "complete" in that it contains every SVG attribute
    // that React supports, but the types can be improved.
    // Full list here: https://facebook.github.io/react/docs/dom-elements.html
    //
    // The three broad type categories are (in order of restrictiveness):
    //   - "number | string"
    //   - "string"
    //   - union of string literals
    interface SVGAttributes<T> extends AriaAttributes, DOMAttributes<T> {
        // Attributes which also defined in HTMLAttributes
        // See comment in SVGDOMPropertyConfig.js
        className?: string | undefined;
        color?: string | undefined;
        height?: number | string | undefined;
        id?: string | undefined;
        lang?: string | undefined;
        max?: number | string | undefined;
        media?: string | undefined;
        method?: string | undefined;
        min?: number | string | undefined;
        name?: string | undefined;
        style?: CSSProperties | undefined;
        target?: string | undefined;
        type?: string | undefined;
        width?: number | string | undefined;

        // Other HTML properties supported by SVG elements in browsers
        role?: AriaRole | undefined;
        tabIndex?: number | undefined;
        crossOrigin?: "anonymous" | "use-credentials" | "" | undefined;

        // SVG Specific attributes
        accentHeight?: number | string | undefined;
        accumulate?: "none" | "sum" | undefined;
        additive?: "replace" | "sum" | undefined;
        alignmentBaseline?: "auto" | "baseline" | "before-edge" | "text-before-edge" | "middle" | "central" | "after-edge" |
        "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical" | "inherit" | undefined;
        allowReorder?: "no" | "yes" | undefined;
        alphabetic?: number | string | undefined;
        amplitude?: number | string | undefined;
        arabicForm?: "initial" | "medial" | "terminal" | "isolated" | undefined;
        ascent?: number | string | undefined;
        attributeName?: string | undefined;
        attributeType?: string | undefined;
        autoReverse?: Booleanish | undefined;
        azimuth?: number | string | undefined;
        baseFrequency?: number | string | undefined;
        baselineShift?: number | string | undefined;
        baseProfile?: number | string | undefined;
        bbox?: number | string | undefined;
        begin?: number | string | undefined;
        bias?: number | string | undefined;
        by?: number | string | undefined;
        calcMode?: number | string | undefined;
        capHeight?: number | string | undefined;
        clip?: number | string | undefined;
        clipPath?: string | undefined;
        clipPathUnits?: number | string | undefined;
        clipRule?: number | string | undefined;
        colorInterpolation?: number | string | undefined;
        colorInterpolationFilters?: "auto" | "sRGB" | "linearRGB" | "inherit" | undefined;
        colorProfile?: number | string | undefined;
        colorRendering?: number | string | undefined;
        contentScriptType?: number | string | undefined;
        contentStyleType?: number | string | undefined;
        cursor?: number | string | undefined;
        cx?: number | string | undefined;
        cy?: number | string | undefined;
        d?: string | undefined;
        decelerate?: number | string | undefined;
        descent?: number | string | undefined;
        diffuseConstant?: number | string | undefined;
        direction?: number | string | undefined;
        display?: number | string | undefined;
        divisor?: number | string | undefined;
        dominantBaseline?: number | string | undefined;
        dur?: number | string | undefined;
        dx?: number | string | undefined;
        dy?: number | string | undefined;
        edgeMode?: number | string | undefined;
        elevation?: number | string | undefined;
        enableBackground?: number | string | undefined;
        end?: number | string | undefined;
        exponent?: number | string | undefined;
        externalResourcesRequired?: Booleanish | undefined;
        fill?: string | undefined;
        fillOpacity?: number | string | undefined;
        fillRule?: "nonzero" | "evenodd" | "inherit" | undefined;
        filter?: string | undefined;
        filterRes?: number | string | undefined;
        filterUnits?: number | string | undefined;
        floodColor?: number | string | undefined;
        floodOpacity?: number | string | undefined;
        focusable?: Booleanish | "auto" | undefined;
        fontFamily?: string | undefined;
        fontSize?: number | string | undefined;
        fontSizeAdjust?: number | string | undefined;
        fontStretch?: number | string | undefined;
        fontStyle?: number | string | undefined;
        fontVariant?: number | string | undefined;
        fontWeight?: number | string | undefined;
        format?: number | string | undefined;
        fr?: number | string | undefined;
        from?: number | string | undefined;
        fx?: number | string | undefined;
        fy?: number | string | undefined;
        g1?: number | string | undefined;
        g2?: number | string | undefined;
        glyphName?: number | string | undefined;
        glyphOrientationHorizontal?: number | string | undefined;
        glyphOrientationVertical?: number | string | undefined;
        glyphRef?: number | string | undefined;
        gradientTransform?: string | undefined;
        gradientUnits?: string | undefined;
        hanging?: number | string | undefined;
        horizAdvX?: number | string | undefined;
        horizOriginX?: number | string | undefined;
        href?: string | undefined;
        ideographic?: number | string | undefined;
        imageRendering?: number | string | undefined;
        in2?: number | string | undefined;
        in?: string | undefined;
        intercept?: number | string | undefined;
        k1?: number | string | undefined;
        k2?: number | string | undefined;
        k3?: number | string | undefined;
        k4?: number | string | undefined;
        k?: number | string | undefined;
        kernelMatrix?: number | string | undefined;
        kernelUnitLength?: number | string | undefined;
        kerning?: number | string | undefined;
        keyPoints?: number | string | undefined;
        keySplines?: number | string | undefined;
        keyTimes?: number | string | undefined;
        lengthAdjust?: number | string | undefined;
        letterSpacing?: number | string | undefined;
        lightingColor?: number | string | undefined;
        limitingConeAngle?: number | string | undefined;
        local?: number | string | undefined;
        markerEnd?: string | undefined;
        markerHeight?: number | string | undefined;
        markerMid?: string | undefined;
        markerStart?: string | undefined;
        markerUnits?: number | string | undefined;
        markerWidth?: number | string | undefined;
        mask?: string | undefined;
        maskContentUnits?: number | string | undefined;
        maskUnits?: number | string | undefined;
        mathematical?: number | string | undefined;
        mode?: number | string | undefined;
        numOctaves?: number | string | undefined;
        offset?: number | string | undefined;
        opacity?: number | string | undefined;
        operator?: number | string | undefined;
        order?: number | string | undefined;
        orient?: number | string | undefined;
        orientation?: number | string | undefined;
        origin?: number | string | undefined;
        overflow?: number | string | undefined;
        overlinePosition?: number | string | undefined;
        overlineThickness?: number | string | undefined;
        paintOrder?: number | string | undefined;
        panose1?: number | string | undefined;
        path?: string | undefined;
        pathLength?: number | string | undefined;
        patternContentUnits?: string | undefined;
        patternTransform?: number | string | undefined;
        patternUnits?: string | undefined;
        pointerEvents?: number | string | undefined;
        points?: string | undefined;
        pointsAtX?: number | string | undefined;
        pointsAtY?: number | string | undefined;
        pointsAtZ?: number | string | undefined;
        preserveAlpha?: Booleanish | undefined;
        preserveAspectRatio?: string | undefined;
        primitiveUnits?: number | string | undefined;
        r?: number | string | undefined;
        radius?: number | string | undefined;
        refX?: number | string | undefined;
        refY?: number | string | undefined;
        renderingIntent?: number | string | undefined;
        repeatCount?: number | string | undefined;
        repeatDur?: number | string | undefined;
        requiredExtensions?: number | string | undefined;
        requiredFeatures?: number | string | undefined;
        restart?: number | string | undefined;
        result?: string | undefined;
        rotate?: number | string | undefined;
        rx?: number | string | undefined;
        ry?: number | string | undefined;
        scale?: number | string | undefined;
        seed?: number | string | undefined;
        shapeRendering?: number | string | undefined;
        slope?: number | string | undefined;
        spacing?: number | string | undefined;
        specularConstant?: number | string | undefined;
        specularExponent?: number | string | undefined;
        speed?: number | string | undefined;
        spreadMethod?: string | undefined;
        startOffset?: number | string | undefined;
        stdDeviation?: number | string | undefined;
        stemh?: number | string | undefined;
        stemv?: number | string | undefined;
        stitchTiles?: number | string | undefined;
        stopColor?: string | undefined;
        stopOpacity?: number | string | undefined;
        strikethroughPosition?: number | string | undefined;
        strikethroughThickness?: number | string | undefined;
        string?: number | string | undefined;
        stroke?: string | undefined;
        strokeDasharray?: string | number | undefined;
        strokeDashoffset?: string | number | undefined;
        strokeLinecap?: "butt" | "round" | "square" | "inherit" | undefined;
        strokeLinejoin?: "miter" | "round" | "bevel" | "inherit" | undefined;
        strokeMiterlimit?: number | string | undefined;
        strokeOpacity?: number | string | undefined;
        strokeWidth?: number | string | undefined;
        surfaceScale?: number | string | undefined;
        systemLanguage?: number | string | undefined;
        tableValues?: number | string | undefined;
        targetX?: number | string | undefined;
        targetY?: number | string | undefined;
        textAnchor?: string | undefined;
        textDecoration?: number | string | undefined;
        textLength?: number | string | undefined;
        textRendering?: number | string | undefined;
        to?: number | string | undefined;
        transform?: string | undefined;
        u1?: number | string | undefined;
        u2?: number | string | undefined;
        underlinePosition?: number | string | undefined;
        underlineThickness?: number | string | undefined;
        unicode?: number | string | undefined;
        unicodeBidi?: number | string | undefined;
        unicodeRange?: number | string | undefined;
        unitsPerEm?: number | string | undefined;
        vAlphabetic?: number | string | undefined;
        values?: string | undefined;
        vectorEffect?: number | string | undefined;
        version?: string | undefined;
        vertAdvY?: number | string | undefined;
        vertOriginX?: number | string | undefined;
        vertOriginY?: number | string | undefined;
        vHanging?: number | string | undefined;
        vIdeographic?: number | string | undefined;
        viewBox?: string | undefined;
        viewTarget?: number | string | undefined;
        visibility?: number | string | undefined;
        vMathematical?: number | string | undefined;
        widths?: number | string | undefined;
        wordSpacing?: number | string | undefined;
        writingMode?: number | string | undefined;
        x1?: number | string | undefined;
        x2?: number | string | undefined;
        x?: number | string | undefined;
        xChannelSelector?: string | undefined;
        xHeight?: number | string | undefined;
        xlinkActuate?: string | undefined;
        xlinkArcrole?: string | undefined;
        xlinkHref?: string | undefined;
        xlinkRole?: string | undefined;
        xlinkShow?: string | undefined;
        xlinkTitle?: string | undefined;
        xlinkType?: string | undefined;
        xmlBase?: string | undefined;
        xmlLang?: string | undefined;
        xmlns?: string | undefined;
        xmlnsXlink?: string | undefined;
        xmlSpace?: string | undefined;
        y1?: number | string | undefined;
        y2?: number | string | undefined;
        y?: number | string | undefined;
        yChannelSelector?: string | undefined;
        z?: number | string | undefined;
        zoomAndPan?: string | undefined;
    }

    interface WebViewHTMLAttributes<T> extends HTMLAttributes<T> {
        allowFullScreen?: boolean | undefined;
        allowpopups?: boolean | undefined;
        autoFocus?: boolean | undefined;
        autosize?: boolean | undefined;
        blinkfeatures?: string | undefined;
        disableblinkfeatures?: string | undefined;
        disableguestresize?: boolean | undefined;
        disablewebsecurity?: boolean | undefined;
        guestinstance?: string | undefined;
        httpreferrer?: string | undefined;
        nodeintegration?: boolean | undefined;
        partition?: string | undefined;
        plugins?: boolean | undefined;
        preload?: string | undefined;
        src?: string | undefined;
        useragent?: string | undefined;
        webpreferences?: string | undefined;
    }

    //
    // React.DOM
    // ----------------------------------------------------------------------

    interface ReactHTML {
        a: DetailedHTMLFactory<AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>;
        abbr: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        address: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        area: DetailedHTMLFactory<AreaHTMLAttributes<HTMLAreaElement>, HTMLAreaElement>;
        article: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        aside: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        audio: DetailedHTMLFactory<AudioHTMLAttributes<HTMLAudioElement>, HTMLAudioElement>;
        b: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        base: DetailedHTMLFactory<BaseHTMLAttributes<HTMLBaseElement>, HTMLBaseElement>;
        bdi: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        bdo: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        big: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        blockquote: DetailedHTMLFactory<BlockquoteHTMLAttributes<HTMLElement>, HTMLElement>;
        body: DetailedHTMLFactory<HTMLAttributes<HTMLBodyElement>, HTMLBodyElement>;
        br: DetailedHTMLFactory<HTMLAttributes<HTMLBRElement>, HTMLBRElement>;
        button: DetailedHTMLFactory<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
        canvas: DetailedHTMLFactory<CanvasHTMLAttributes<HTMLCanvasElement>, HTMLCanvasElement>;
        caption: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        cite: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        code: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        col: DetailedHTMLFactory<ColHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>;
        colgroup: DetailedHTMLFactory<ColgroupHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>;
        data: DetailedHTMLFactory<DataHTMLAttributes<HTMLDataElement>, HTMLDataElement>;
        datalist: DetailedHTMLFactory<HTMLAttributes<HTMLDataListElement>, HTMLDataListElement>;
        dd: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        del: DetailedHTMLFactory<DelHTMLAttributes<HTMLElement>, HTMLElement>;
        details: DetailedHTMLFactory<DetailsHTMLAttributes<HTMLElement>, HTMLElement>;
        dfn: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        dialog: DetailedHTMLFactory<DialogHTMLAttributes<HTMLDialogElement>, HTMLDialogElement>;
        div: DetailedHTMLFactory<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;
        dl: DetailedHTMLFactory<HTMLAttributes<HTMLDListElement>, HTMLDListElement>;
        dt: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        em: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        embed: DetailedHTMLFactory<EmbedHTMLAttributes<HTMLEmbedElement>, HTMLEmbedElement>;
        fieldset: DetailedHTMLFactory<FieldsetHTMLAttributes<HTMLFieldSetElement>, HTMLFieldSetElement>;
        figcaption: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        figure: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        footer: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        form: DetailedHTMLFactory<FormHTMLAttributes<HTMLFormElement>, HTMLFormElement>;
        h1: DetailedHTMLFactory<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;
        h2: DetailedHTMLFactory<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;
        h3: DetailedHTMLFactory<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;
        h4: DetailedHTMLFactory<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;
        h5: DetailedHTMLFactory<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;
        h6: DetailedHTMLFactory<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;
        head: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLHeadElement>;
        header: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        hgroup: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        hr: DetailedHTMLFactory<HTMLAttributes<HTMLHRElement>, HTMLHRElement>;
        html: DetailedHTMLFactory<HtmlHTMLAttributes<HTMLHtmlElement>, HTMLHtmlElement>;
        i: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        iframe: DetailedHTMLFactory<IframeHTMLAttributes<HTMLIFrameElement>, HTMLIFrameElement>;
        img: DetailedHTMLFactory<ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>;
        input: DetailedHTMLFactory<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;
        ins: DetailedHTMLFactory<InsHTMLAttributes<HTMLModElement>, HTMLModElement>;
        kbd: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        keygen: DetailedHTMLFactory<KeygenHTMLAttributes<HTMLElement>, HTMLElement>;
        label: DetailedHTMLFactory<LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>;
        legend: DetailedHTMLFactory<HTMLAttributes<HTMLLegendElement>, HTMLLegendElement>;
        li: DetailedHTMLFactory<LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>;
        link: DetailedHTMLFactory<LinkHTMLAttributes<HTMLLinkElement>, HTMLLinkElement>;
        main: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        map: DetailedHTMLFactory<MapHTMLAttributes<HTMLMapElement>, HTMLMapElement>;
        mark: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        menu: DetailedHTMLFactory<MenuHTMLAttributes<HTMLElement>, HTMLElement>;
        menuitem: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        meta: DetailedHTMLFactory<MetaHTMLAttributes<HTMLMetaElement>, HTMLMetaElement>;
        meter: DetailedHTMLFactory<MeterHTMLAttributes<HTMLElement>, HTMLElement>;
        nav: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        noscript: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        object: DetailedHTMLFactory<ObjectHTMLAttributes<HTMLObjectElement>, HTMLObjectElement>;
        ol: DetailedHTMLFactory<OlHTMLAttributes<HTMLOListElement>, HTMLOListElement>;
        optgroup: DetailedHTMLFactory<OptgroupHTMLAttributes<HTMLOptGroupElement>, HTMLOptGroupElement>;
        option: DetailedHTMLFactory<OptionHTMLAttributes<HTMLOptionElement>, HTMLOptionElement>;
        output: DetailedHTMLFactory<OutputHTMLAttributes<HTMLElement>, HTMLElement>;
        p: DetailedHTMLFactory<HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>;
        param: DetailedHTMLFactory<ParamHTMLAttributes<HTMLParamElement>, HTMLParamElement>;
        picture: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        pre: DetailedHTMLFactory<HTMLAttributes<HTMLPreElement>, HTMLPreElement>;
        progress: DetailedHTMLFactory<ProgressHTMLAttributes<HTMLProgressElement>, HTMLProgressElement>;
        q: DetailedHTMLFactory<QuoteHTMLAttributes<HTMLQuoteElement>, HTMLQuoteElement>;
        rp: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        rt: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        ruby: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        s: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        samp: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        slot: DetailedHTMLFactory<SlotHTMLAttributes<HTMLSlotElement>, HTMLSlotElement>;
        script: DetailedHTMLFactory<ScriptHTMLAttributes<HTMLScriptElement>, HTMLScriptElement>;
        section: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        select: DetailedHTMLFactory<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>;
        small: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        source: DetailedHTMLFactory<SourceHTMLAttributes<HTMLSourceElement>, HTMLSourceElement>;
        span: DetailedHTMLFactory<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;
        strong: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        style: DetailedHTMLFactory<StyleHTMLAttributes<HTMLStyleElement>, HTMLStyleElement>;
        sub: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        summary: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        sup: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        table: DetailedHTMLFactory<TableHTMLAttributes<HTMLTableElement>, HTMLTableElement>;
        template: DetailedHTMLFactory<HTMLAttributes<HTMLTemplateElement>, HTMLTemplateElement>;
        tbody: DetailedHTMLFactory<HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>;
        td: DetailedHTMLFactory<TdHTMLAttributes<HTMLTableDataCellElement>, HTMLTableDataCellElement>;
        textarea: DetailedHTMLFactory<TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>;
        tfoot: DetailedHTMLFactory<HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>;
        th: DetailedHTMLFactory<ThHTMLAttributes<HTMLTableHeaderCellElement>, HTMLTableHeaderCellElement>;
        thead: DetailedHTMLFactory<HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>;
        time: DetailedHTMLFactory<TimeHTMLAttributes<HTMLElement>, HTMLElement>;
        title: DetailedHTMLFactory<HTMLAttributes<HTMLTitleElement>, HTMLTitleElement>;
        tr: DetailedHTMLFactory<HTMLAttributes<HTMLTableRowElement>, HTMLTableRowElement>;
        track: DetailedHTMLFactory<TrackHTMLAttributes<HTMLTrackElement>, HTMLTrackElement>;
        u: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        ul: DetailedHTMLFactory<HTMLAttributes<HTMLUListElement>, HTMLUListElement>;
        "var": DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        video: DetailedHTMLFactory<VideoHTMLAttributes<HTMLVideoElement>, HTMLVideoElement>;
        wbr: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;
        webview: DetailedHTMLFactory<WebViewHTMLAttributes<HTMLWebViewElement>, HTMLWebViewElement>;
    }

    interface ReactSVG {
        animate: SVGFactory;
        circle: SVGFactory;
        clipPath: SVGFactory;
        defs: SVGFactory;
        desc: SVGFactory;
        ellipse: SVGFactory;
        feBlend: SVGFactory;
        feColorMatrix: SVGFactory;
        feComponentTransfer: SVGFactory;
        feComposite: SVGFactory;
        feConvolveMatrix: SVGFactory;
        feDiffuseLighting: SVGFactory;
        feDisplacementMap: SVGFactory;
        feDistantLight: SVGFactory;
        feDropShadow: SVGFactory;
        feFlood: SVGFactory;
        feFuncA: SVGFactory;
        feFuncB: SVGFactory;
        feFuncG: SVGFactory;
        feFuncR: SVGFactory;
        feGaussianBlur: SVGFactory;
        feImage: SVGFactory;
        feMerge: SVGFactory;
        feMergeNode: SVGFactory;
        feMorphology: SVGFactory;
        feOffset: SVGFactory;
        fePointLight: SVGFactory;
        feSpecularLighting: SVGFactory;
        feSpotLight: SVGFactory;
        feTile: SVGFactory;
        feTurbulence: SVGFactory;
        filter: SVGFactory;
        foreignObject: SVGFactory;
        g: SVGFactory;
        image: SVGFactory;
        line: SVGFactory;
        linearGradient: SVGFactory;
        marker: SVGFactory;
        mask: SVGFactory;
        metadata: SVGFactory;
        path: SVGFactory;
        pattern: SVGFactory;
        polygon: SVGFactory;
        polyline: SVGFactory;
        radialGradient: SVGFactory;
        rect: SVGFactory;
        stop: SVGFactory;
        svg: SVGFactory;
        switch: SVGFactory;
        symbol: SVGFactory;
        text: SVGFactory;
        textPath: SVGFactory;
        tspan: SVGFactory;
        use: SVGFactory;
        view: SVGFactory;
    }

    interface ReactDOM extends ReactHTML, ReactSVG { }

    //
    // React.PropTypes
    // ----------------------------------------------------------------------

    type Validator<T> = PropTypes.Validator<T>;

    type Requireable<T> = PropTypes.Requireable<T>;

    type ValidationMap<T> = PropTypes.ValidationMap<T>;

    type WeakValidationMap<T> = {
        [K in keyof T]?: null extends T[K]
            ? Validator<T[K] | null | undefined>
            : undefined extends T[K]
            ? Validator<T[K] | null | undefined>
            : Validator<T[K]>
    };

    interface ReactPropTypes {
        any: typeof PropTypes.any;
        array: typeof PropTypes.array;
        bool: typeof PropTypes.bool;
        func: typeof PropTypes.func;
        number: typeof PropTypes.number;
        object: typeof PropTypes.object;
        string: typeof PropTypes.string;
        node: typeof PropTypes.node;
        element: typeof PropTypes.element;
        instanceOf: typeof PropTypes.instanceOf;
        oneOf: typeof PropTypes.oneOf;
        oneOfType: typeof PropTypes.oneOfType;
        arrayOf: typeof PropTypes.arrayOf;
        objectOf: typeof PropTypes.objectOf;
        shape: typeof PropTypes.shape;
        exact: typeof PropTypes.exact;
    }

    //
    // React.Children
    // ----------------------------------------------------------------------

    interface ReactChildren {
        map<T, C>(children: C | ReadonlyArray<C>, fn: (child: C, index: number) => T):
            C extends null | undefined ? C : Array<Exclude<T, boolean | null | undefined>>;
        forEach<C>(children: C | ReadonlyArray<C>, fn: (child: C, index: number) => void): void;
        count(children: any): number;
        only<C>(children: C): C extends any[] ? never : C;
        toArray(children: ReactNode | ReactNode[]): Array<Exclude<ReactNode, boolean | null | undefined>>;
    }

    //
    // Browser Interfaces
    // https://github.com/nikeee/2048-typescript/blob/master/2048/js/touch.d.ts
    // ----------------------------------------------------------------------

    interface AbstractView {
        styleMedia: StyleMedia;
        document: Document;
    }

    interface Touch {
        identifier: number;
        target: EventTarget;
        screenX: number;
        screenY: number;
        clientX: number;
        clientY: number;
        pageX: number;
        pageY: number;
    }

    interface TouchList {
        [index: number]: Touch;
        length: number;
        item(index: number): Touch;
        identifiedTouch(identifier: number): Touch;
    }

    //
    // Error Interfaces
    // ----------------------------------------------------------------------
    interface ErrorInfo {
        /**
         * Captures which component contained the exception, and its ancestors.
         */
        componentStack: string;
    }
}

// naked 'any' type in a conditional type will short circuit and union both the then/else branches
// so boolean is only resolved for T = any
type IsExactlyAny<T> = boolean extends (T extends never ? true : false) ? true : false;

type ExactlyAnyPropertyKeys<T> = { [K in keyof T]: IsExactlyAny<T[K]> extends true ? K : never }[keyof T];
type NotExactlyAnyPropertyKeys<T> = Exclude<keyof T, ExactlyAnyPropertyKeys<T>>;

// Try to resolve ill-defined props like for JS users: props can be any, or sometimes objects with properties of type any
type MergePropTypes<P, T> =
    // Distribute over P in case it is a union type
    P extends any
        // If props is type any, use propTypes definitions
        ? IsExactlyAny<P> extends true ? T :
            // If declared props have indexed properties, ignore inferred props entirely as keyof gets widened
            string extends keyof P ? P :
                // Prefer declared types which are not exactly any
                & Pick<P, NotExactlyAnyPropertyKeys<P>>
                // For props which are exactly any, use the type inferred from propTypes if present
                & Pick<T, Exclude<keyof T, NotExactlyAnyPropertyKeys<P>>>
                // Keep leftover props not specified in propTypes
                & Pick<P, Exclude<keyof P, keyof T>>
        : never;

// Any prop that has a default prop becomes optional, but its type is unchanged
// Undeclared default props are augmented into the resulting allowable attributes
// If declared props have indexed properties, ignore default props entirely as keyof gets widened
// Wrap in an outer-level conditional type to allow distribution over props that are unions
type Defaultize<P, D> = P extends any
    ? string extends keyof P ? P :
        & Pick<P, Exclude<keyof P, keyof D>>
        & Partial<Pick<P, Extract<keyof P, keyof D>>>
        & Partial<Pick<D, Exclude<keyof D, keyof P>>>
    : never;

type ReactManagedAttributes<C, P> = C extends { propTypes: infer T; defaultProps: infer D; }
    ? Defaultize<MergePropTypes<P, PropTypes.InferProps<T>>, D>
    : C extends { propTypes: infer T; }
        ? MergePropTypes<P, PropTypes.InferProps<T>>
        : C extends { defaultProps: infer D; }
            ? Defaultize<P, D>
            : P;

declare global {
    namespace JSX {
        interface Element extends React.ReactElement<any, any> { }
        interface ElementClass extends React.Component<any> {
            render(): React.ReactNode;
        }
        interface ElementAttributesProperty { props: {}; }
        interface ElementChildrenAttribute { children: {}; }

        // We can't recurse forever because \`type\` can't be self-referential;
        // let's assume it's reasonable to do a single React.lazy() around a single React.memo() / vice-versa
        type LibraryManagedAttributes<C, P> = C extends React.MemoExoticComponent<infer T> | React.LazyExoticComponent<infer T>
            ? T extends React.MemoExoticComponent<infer U> | React.LazyExoticComponent<infer U>
                ? ReactManagedAttributes<U, P>
                : ReactManagedAttributes<T, P>
            : ReactManagedAttributes<C, P>;

        interface IntrinsicAttributes extends React.Attributes { }
        interface IntrinsicClassAttributes<T> extends React.ClassAttributes<T> { }

        interface IntrinsicElements {
            // HTML
            a: React.DetailedHTMLProps<React.AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>;
            abbr: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            address: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            area: React.DetailedHTMLProps<React.AreaHTMLAttributes<HTMLAreaElement>, HTMLAreaElement>;
            article: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            aside: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            audio: React.DetailedHTMLProps<React.AudioHTMLAttributes<HTMLAudioElement>, HTMLAudioElement>;
            b: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            base: React.DetailedHTMLProps<React.BaseHTMLAttributes<HTMLBaseElement>, HTMLBaseElement>;
            bdi: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            bdo: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            big: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            blockquote: React.DetailedHTMLProps<React.BlockquoteHTMLAttributes<HTMLElement>, HTMLElement>;
            body: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBodyElement>, HTMLBodyElement>;
            br: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBRElement>, HTMLBRElement>;
            button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
            canvas: React.DetailedHTMLProps<React.CanvasHTMLAttributes<HTMLCanvasElement>, HTMLCanvasElement>;
            caption: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            cite: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            code: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            col: React.DetailedHTMLProps<React.ColHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>;
            colgroup: React.DetailedHTMLProps<React.ColgroupHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>;
            data: React.DetailedHTMLProps<React.DataHTMLAttributes<HTMLDataElement>, HTMLDataElement>;
            datalist: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDataListElement>, HTMLDataListElement>;
            dd: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            del: React.DetailedHTMLProps<React.DelHTMLAttributes<HTMLElement>, HTMLElement>;
            details: React.DetailedHTMLProps<React.DetailsHTMLAttributes<HTMLElement>, HTMLElement>;
            dfn: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            dialog: React.DetailedHTMLProps<React.DialogHTMLAttributes<HTMLDialogElement>, HTMLDialogElement>;
            div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>;
            dl: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDListElement>, HTMLDListElement>;
            dt: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            em: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            embed: React.DetailedHTMLProps<React.EmbedHTMLAttributes<HTMLEmbedElement>, HTMLEmbedElement>;
            fieldset: React.DetailedHTMLProps<React.FieldsetHTMLAttributes<HTMLFieldSetElement>, HTMLFieldSetElement>;
            figcaption: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            figure: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            footer: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            form: React.DetailedHTMLProps<React.FormHTMLAttributes<HTMLFormElement>, HTMLFormElement>;
            h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;
            h2: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;
            h3: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;
            h4: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;
            h5: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;
            h6: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;
            head: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadElement>, HTMLHeadElement>;
            header: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            hgroup: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            hr: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHRElement>, HTMLHRElement>;
            html: React.DetailedHTMLProps<React.HtmlHTMLAttributes<HTMLHtmlElement>, HTMLHtmlElement>;
            i: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            iframe: React.DetailedHTMLProps<React.IframeHTMLAttributes<HTMLIFrameElement>, HTMLIFrameElement>;
            img: React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>;
            input: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;
            ins: React.DetailedHTMLProps<React.InsHTMLAttributes<HTMLModElement>, HTMLModElement>;
            kbd: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            keygen: React.DetailedHTMLProps<React.KeygenHTMLAttributes<HTMLElement>, HTMLElement>;
            label: React.DetailedHTMLProps<React.LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>;
            legend: React.DetailedHTMLProps<React.HTMLAttributes<HTMLLegendElement>, HTMLLegendElement>;
            li: React.DetailedHTMLProps<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>;
            link: React.DetailedHTMLProps<React.LinkHTMLAttributes<HTMLLinkElement>, HTMLLinkElement>;
            main: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            map: React.DetailedHTMLProps<React.MapHTMLAttributes<HTMLMapElement>, HTMLMapElement>;
            mark: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            menu: React.DetailedHTMLProps<React.MenuHTMLAttributes<HTMLElement>, HTMLElement>;
            menuitem: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            meta: React.DetailedHTMLProps<React.MetaHTMLAttributes<HTMLMetaElement>, HTMLMetaElement>;
            meter: React.DetailedHTMLProps<React.MeterHTMLAttributes<HTMLElement>, HTMLElement>;
            nav: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            noindex: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            noscript: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            object: React.DetailedHTMLProps<React.ObjectHTMLAttributes<HTMLObjectElement>, HTMLObjectElement>;
            ol: React.DetailedHTMLProps<React.OlHTMLAttributes<HTMLOListElement>, HTMLOListElement>;
            optgroup: React.DetailedHTMLProps<React.OptgroupHTMLAttributes<HTMLOptGroupElement>, HTMLOptGroupElement>;
            option: React.DetailedHTMLProps<React.OptionHTMLAttributes<HTMLOptionElement>, HTMLOptionElement>;
            output: React.DetailedHTMLProps<React.OutputHTMLAttributes<HTMLElement>, HTMLElement>;
            p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>;
            param: React.DetailedHTMLProps<React.ParamHTMLAttributes<HTMLParamElement>, HTMLParamElement>;
            picture: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            pre: React.DetailedHTMLProps<React.HTMLAttributes<HTMLPreElement>, HTMLPreElement>;
            progress: React.DetailedHTMLProps<React.ProgressHTMLAttributes<HTMLProgressElement>, HTMLProgressElement>;
            q: React.DetailedHTMLProps<React.QuoteHTMLAttributes<HTMLQuoteElement>, HTMLQuoteElement>;
            rp: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            rt: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            ruby: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            s: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            samp: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            slot: React.DetailedHTMLProps<React.SlotHTMLAttributes<HTMLSlotElement>, HTMLSlotElement>;
            script: React.DetailedHTMLProps<React.ScriptHTMLAttributes<HTMLScriptElement>, HTMLScriptElement>;
            section: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            select: React.DetailedHTMLProps<React.SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>;
            small: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            source: React.DetailedHTMLProps<React.SourceHTMLAttributes<HTMLSourceElement>, HTMLSourceElement>;
            span: React.DetailedHTMLProps<React.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;
            strong: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            style: React.DetailedHTMLProps<React.StyleHTMLAttributes<HTMLStyleElement>, HTMLStyleElement>;
            sub: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            summary: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            sup: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            table: React.DetailedHTMLProps<React.TableHTMLAttributes<HTMLTableElement>, HTMLTableElement>;
            template: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTemplateElement>, HTMLTemplateElement>;
            tbody: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>;
            td: React.DetailedHTMLProps<React.TdHTMLAttributes<HTMLTableDataCellElement>, HTMLTableDataCellElement>;
            textarea: React.DetailedHTMLProps<React.TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>;
            tfoot: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>;
            th: React.DetailedHTMLProps<React.ThHTMLAttributes<HTMLTableHeaderCellElement>, HTMLTableHeaderCellElement>;
            thead: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>;
            time: React.DetailedHTMLProps<React.TimeHTMLAttributes<HTMLElement>, HTMLElement>;
            title: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTitleElement>, HTMLTitleElement>;
            tr: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableRowElement>, HTMLTableRowElement>;
            track: React.DetailedHTMLProps<React.TrackHTMLAttributes<HTMLTrackElement>, HTMLTrackElement>;
            u: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            ul: React.DetailedHTMLProps<React.HTMLAttributes<HTMLUListElement>, HTMLUListElement>;
            "var": React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            video: React.DetailedHTMLProps<React.VideoHTMLAttributes<HTMLVideoElement>, HTMLVideoElement>;
            wbr: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;
            webview: React.DetailedHTMLProps<React.WebViewHTMLAttributes<HTMLWebViewElement>, HTMLWebViewElement>;

            // SVG
            svg: React.SVGProps<SVGSVGElement>;

            animate: React.SVGProps<SVGElement>; // TODO: It is SVGAnimateElement but is not in TypeScript's lib.dom.d.ts for now.
            animateMotion: React.SVGProps<SVGElement>;
            animateTransform: React.SVGProps<SVGElement>; // TODO: It is SVGAnimateTransformElement but is not in TypeScript's lib.dom.d.ts for now.
            circle: React.SVGProps<SVGCircleElement>;
            clipPath: React.SVGProps<SVGClipPathElement>;
            defs: React.SVGProps<SVGDefsElement>;
            desc: React.SVGProps<SVGDescElement>;
            ellipse: React.SVGProps<SVGEllipseElement>;
            feBlend: React.SVGProps<SVGFEBlendElement>;
            feColorMatrix: React.SVGProps<SVGFEColorMatrixElement>;
            feComponentTransfer: React.SVGProps<SVGFEComponentTransferElement>;
            feComposite: React.SVGProps<SVGFECompositeElement>;
            feConvolveMatrix: React.SVGProps<SVGFEConvolveMatrixElement>;
            feDiffuseLighting: React.SVGProps<SVGFEDiffuseLightingElement>;
            feDisplacementMap: React.SVGProps<SVGFEDisplacementMapElement>;
            feDistantLight: React.SVGProps<SVGFEDistantLightElement>;
            feDropShadow: React.SVGProps<SVGFEDropShadowElement>;
            feFlood: React.SVGProps<SVGFEFloodElement>;
            feFuncA: React.SVGProps<SVGFEFuncAElement>;
            feFuncB: React.SVGProps<SVGFEFuncBElement>;
            feFuncG: React.SVGProps<SVGFEFuncGElement>;
            feFuncR: React.SVGProps<SVGFEFuncRElement>;
            feGaussianBlur: React.SVGProps<SVGFEGaussianBlurElement>;
            feImage: React.SVGProps<SVGFEImageElement>;
            feMerge: React.SVGProps<SVGFEMergeElement>;
            feMergeNode: React.SVGProps<SVGFEMergeNodeElement>;
            feMorphology: React.SVGProps<SVGFEMorphologyElement>;
            feOffset: React.SVGProps<SVGFEOffsetElement>;
            fePointLight: React.SVGProps<SVGFEPointLightElement>;
            feSpecularLighting: React.SVGProps<SVGFESpecularLightingElement>;
            feSpotLight: React.SVGProps<SVGFESpotLightElement>;
            feTile: React.SVGProps<SVGFETileElement>;
            feTurbulence: React.SVGProps<SVGFETurbulenceElement>;
            filter: React.SVGProps<SVGFilterElement>;
            foreignObject: React.SVGProps<SVGForeignObjectElement>;
            g: React.SVGProps<SVGGElement>;
            image: React.SVGProps<SVGImageElement>;
            line: React.SVGProps<SVGLineElement>;
            linearGradient: React.SVGProps<SVGLinearGradientElement>;
            marker: React.SVGProps<SVGMarkerElement>;
            mask: React.SVGProps<SVGMaskElement>;
            metadata: React.SVGProps<SVGMetadataElement>;
            mpath: React.SVGProps<SVGElement>;
            path: React.SVGProps<SVGPathElement>;
            pattern: React.SVGProps<SVGPatternElement>;
            polygon: React.SVGProps<SVGPolygonElement>;
            polyline: React.SVGProps<SVGPolylineElement>;
            radialGradient: React.SVGProps<SVGRadialGradientElement>;
            rect: React.SVGProps<SVGRectElement>;
            stop: React.SVGProps<SVGStopElement>;
            switch: React.SVGProps<SVGSwitchElement>;
            symbol: React.SVGProps<SVGSymbolElement>;
            text: React.SVGProps<SVGTextElement>;
            textPath: React.SVGProps<SVGTextPathElement>;
            tspan: React.SVGProps<SVGTSpanElement>;
            use: React.SVGProps<SVGUseElement>;
            view: React.SVGProps<SVGViewElement>;
        }
    }
}
`;var bL="// Expose `JSX` namespace in `global` namespace\nimport './';\n";var SL="// Expose `JSX` namespace in `global` namespace\nimport './';\n";var vL=`/**
 * These are types for things that are present in the \`experimental\` builds of React but not yet
 * on a stable build.
 *
 * Once they are promoted to stable they can just be moved to the main index file.
 *
 * To load the types declared here in an actual project, there are three ways. The easiest one,
 * if your \`tsconfig.json\` already has a \`"types"\` array in the \`"compilerOptions"\` section,
 * is to add \`"react/experimental"\` to the \`"types"\` array.
 *
 * Alternatively, a specific import syntax can to be used from a typescript file.
 * This module does not exist in reality, which is why the {} is important:
 *
 * \`\`\`ts
 * import {} from 'react/experimental'
 * \`\`\`
 *
 * It is also possible to include it through a triple-slash reference:
 *
 * \`\`\`ts
 * /// <reference types="react/experimental" />
 * \`\`\`
 *
 * Either the import or the reference only needs to appear once, anywhere in the project.
 */

// See https://github.com/facebook/react/blob/master/packages/react/src/React.js to see how the exports are declared,
// and https://github.com/facebook/react/blob/master/packages/shared/ReactFeatureFlags.js to verify which APIs are
// flagged experimental or not. Experimental APIs will be tagged with \`__EXPERIMENTAL__\`.
//
// For the inputs of types exported as simply a fiber tag, the \`beginWork\` function of ReactFiberBeginWork.js
// is a good place to start looking for details; it generally calls prop validation functions or delegates
// all tasks done as part of the render phase (the concurrent part of the React update cycle).
//
// Suspense-related handling can be found in ReactFiberThrow.js.

import React = require('./next');

export {};

declare module '.' {
    export type SuspenseListRevealOrder = 'forwards' | 'backwards' | 'together';
    export type SuspenseListTailMode = 'collapsed' | 'hidden';

    export interface SuspenseListCommonProps {
        /**
         * Note that SuspenseList require more than one child;
         * it is a runtime warning to provide only a single child.
         *
         * It does, however, allow those children to be wrapped inside a single
         * level of \`<React.Fragment>\`.
         */
        children: ReactElement | Iterable<ReactElement>;
    }

    interface DirectionalSuspenseListProps extends SuspenseListCommonProps {
        /**
         * Defines the order in which the \`SuspenseList\` children should be revealed.
         */
        revealOrder: 'forwards' | 'backwards';
        /**
         * Dictates how unloaded items in a SuspenseList is shown.
         *
         * - By default, \`SuspenseList\` will show all fallbacks in the list.
         * - \`collapsed\` shows only the next fallback in the list.
         * - \`hidden\` doesn\u2019t show any unloaded items.
         */
        tail?: SuspenseListTailMode | undefined;
    }

    interface NonDirectionalSuspenseListProps extends SuspenseListCommonProps {
        /**
         * Defines the order in which the \`SuspenseList\` children should be revealed.
         */
        revealOrder?: Exclude<SuspenseListRevealOrder, DirectionalSuspenseListProps['revealOrder']> | undefined;
        /**
         * The tail property is invalid when not using the \`forwards\` or \`backwards\` reveal orders.
         */
        tail?: never | undefined;
    }

    export type SuspenseListProps = DirectionalSuspenseListProps | NonDirectionalSuspenseListProps;

    /**
     * \`SuspenseList\` helps coordinate many components that can suspend by orchestrating the order
     * in which these components are revealed to the user.
     *
     * When multiple components need to fetch data, this data may arrive in an unpredictable order.
     * However, if you wrap these items in a \`SuspenseList\`, React will not show an item in the list
     * until previous items have been displayed (this behavior is adjustable).
     *
     * @see https://reactjs.org/docs/concurrent-mode-reference.html#suspenselist
     * @see https://reactjs.org/docs/concurrent-mode-patterns.html#suspenselist
     */
    export const SuspenseList: ExoticComponent<SuspenseListProps>;
}
`;var xL=`/*
React projects that don't include the DOM library need these interfaces to compile.
React Native applications use React, but there is no DOM available. The JavaScript runtime
is ES6/ES2015 only. These definitions allow such projects to compile with only \`--lib ES6\`.

Warning: all of these interfaces are empty. If you want type definitions for various properties
(such as HTMLInputElement.prototype.value), you need to add \`--lib DOM\` (via command line or tsconfig.json).
*/

interface Event { }
interface AnimationEvent extends Event { }
interface ClipboardEvent extends Event { }
interface CompositionEvent extends Event { }
interface DragEvent extends Event { }
interface FocusEvent extends Event { }
interface KeyboardEvent extends Event { }
interface MouseEvent extends Event { }
interface TouchEvent extends Event { }
interface PointerEvent extends Event { }
interface TransitionEvent extends Event { }
interface UIEvent extends Event { }
interface WheelEvent extends Event { }

interface EventTarget { }
interface Document { }
interface DataTransfer { }
interface StyleMedia { }

interface Element { }
interface DocumentFragment { }

interface HTMLElement extends Element { }
interface HTMLAnchorElement extends HTMLElement { }
interface HTMLAreaElement extends HTMLElement { }
interface HTMLAudioElement extends HTMLElement { }
interface HTMLBaseElement extends HTMLElement { }
interface HTMLBodyElement extends HTMLElement { }
interface HTMLBRElement extends HTMLElement { }
interface HTMLButtonElement extends HTMLElement { }
interface HTMLCanvasElement extends HTMLElement { }
interface HTMLDataElement extends HTMLElement { }
interface HTMLDataListElement extends HTMLElement { }
interface HTMLDialogElement extends HTMLElement { }
interface HTMLDivElement extends HTMLElement { }
interface HTMLDListElement extends HTMLElement { }
interface HTMLEmbedElement extends HTMLElement { }
interface HTMLFieldSetElement extends HTMLElement { }
interface HTMLFormElement extends HTMLElement { }
interface HTMLHeadingElement extends HTMLElement { }
interface HTMLHeadElement extends HTMLElement { }
interface HTMLHRElement extends HTMLElement { }
interface HTMLHtmlElement extends HTMLElement { }
interface HTMLIFrameElement extends HTMLElement { }
interface HTMLImageElement extends HTMLElement { }
interface HTMLInputElement extends HTMLElement { }
interface HTMLModElement extends HTMLElement { }
interface HTMLLabelElement extends HTMLElement { }
interface HTMLLegendElement extends HTMLElement { }
interface HTMLLIElement extends HTMLElement { }
interface HTMLLinkElement extends HTMLElement { }
interface HTMLMapElement extends HTMLElement { }
interface HTMLMetaElement extends HTMLElement { }
interface HTMLObjectElement extends HTMLElement { }
interface HTMLOListElement extends HTMLElement { }
interface HTMLOptGroupElement extends HTMLElement { }
interface HTMLOptionElement extends HTMLElement { }
interface HTMLParagraphElement extends HTMLElement { }
interface HTMLParamElement extends HTMLElement { }
interface HTMLPreElement extends HTMLElement { }
interface HTMLProgressElement extends HTMLElement { }
interface HTMLQuoteElement extends HTMLElement { }
interface HTMLSlotElement extends HTMLElement { }
interface HTMLScriptElement extends HTMLElement { }
interface HTMLSelectElement extends HTMLElement { }
interface HTMLSourceElement extends HTMLElement { }
interface HTMLSpanElement extends HTMLElement { }
interface HTMLStyleElement extends HTMLElement { }
interface HTMLTableElement extends HTMLElement { }
interface HTMLTableColElement extends HTMLElement { }
interface HTMLTableDataCellElement extends HTMLElement { }
interface HTMLTableHeaderCellElement extends HTMLElement { }
interface HTMLTableRowElement extends HTMLElement { }
interface HTMLTableSectionElement extends HTMLElement { }
interface HTMLTemplateElement extends HTMLElement { }
interface HTMLTextAreaElement extends HTMLElement { }
interface HTMLTitleElement extends HTMLElement { }
interface HTMLTrackElement extends HTMLElement { }
interface HTMLUListElement extends HTMLElement { }
interface HTMLVideoElement extends HTMLElement { }
interface HTMLWebViewElement extends HTMLElement { }

interface SVGElement extends Element { }
interface SVGSVGElement extends SVGElement { }
interface SVGCircleElement extends SVGElement { }
interface SVGClipPathElement extends SVGElement { }
interface SVGDefsElement extends SVGElement { }
interface SVGDescElement extends SVGElement { }
interface SVGEllipseElement extends SVGElement { }
interface SVGFEBlendElement extends SVGElement { }
interface SVGFEColorMatrixElement extends SVGElement { }
interface SVGFEComponentTransferElement extends SVGElement { }
interface SVGFECompositeElement extends SVGElement { }
interface SVGFEConvolveMatrixElement extends SVGElement { }
interface SVGFEDiffuseLightingElement extends SVGElement { }
interface SVGFEDisplacementMapElement extends SVGElement { }
interface SVGFEDistantLightElement extends SVGElement { }
interface SVGFEDropShadowElement extends SVGElement { }
interface SVGFEFloodElement extends SVGElement { }
interface SVGFEFuncAElement extends SVGElement { }
interface SVGFEFuncBElement extends SVGElement { }
interface SVGFEFuncGElement extends SVGElement { }
interface SVGFEFuncRElement extends SVGElement { }
interface SVGFEGaussianBlurElement extends SVGElement { }
interface SVGFEImageElement extends SVGElement { }
interface SVGFEMergeElement extends SVGElement { }
interface SVGFEMergeNodeElement extends SVGElement { }
interface SVGFEMorphologyElement extends SVGElement { }
interface SVGFEOffsetElement extends SVGElement { }
interface SVGFEPointLightElement extends SVGElement { }
interface SVGFESpecularLightingElement extends SVGElement { }
interface SVGFESpotLightElement extends SVGElement { }
interface SVGFETileElement extends SVGElement { }
interface SVGFETurbulenceElement extends SVGElement { }
interface SVGFilterElement extends SVGElement { }
interface SVGForeignObjectElement extends SVGElement { }
interface SVGGElement extends SVGElement { }
interface SVGImageElement extends SVGElement { }
interface SVGLineElement extends SVGElement { }
interface SVGLinearGradientElement extends SVGElement { }
interface SVGMarkerElement extends SVGElement { }
interface SVGMaskElement extends SVGElement { }
interface SVGMetadataElement extends SVGElement { }
interface SVGPathElement extends SVGElement { }
interface SVGPatternElement extends SVGElement { }
interface SVGPolygonElement extends SVGElement { }
interface SVGPolylineElement extends SVGElement { }
interface SVGRadialGradientElement extends SVGElement { }
interface SVGRectElement extends SVGElement { }
interface SVGStopElement extends SVGElement { }
interface SVGSwitchElement extends SVGElement { }
interface SVGSymbolElement extends SVGElement { }
interface SVGTextElement extends SVGElement { }
interface SVGTextPathElement extends SVGElement { }
interface SVGTSpanElement extends SVGElement { }
interface SVGUseElement extends SVGElement { }
interface SVGViewElement extends SVGElement { }

interface Text { }
interface TouchList { }
interface WebGLRenderingContext { }
interface WebGL2RenderingContext { }
`;var CL=`// Type definitions for prop-types 15.7
// Project: https://github.com/reactjs/prop-types, https://facebook.github.io/react
// Definitions by: DovydasNavickas <https://github.com/DovydasNavickas>
//                 Ferdy Budhidharma <https://github.com/ferdaber>
//                 Sebastian Silbermann <https://github.com/eps1lon>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

export type ReactComponentLike =
    | string
    | ((props: any, context?: any) => any)
    | (new (props: any, context?: any) => any);

export interface ReactElementLike {
    type: ReactComponentLike;
    props: any;
    key: string | number | null;
}

export interface ReactNodeArray extends Array<ReactNodeLike> {}

export type ReactNodeLike =
    | {}
    | ReactElementLike
    | ReactNodeArray
    | string
    | number
    | boolean
    | null
    | undefined;

export const nominalTypeHack: unique symbol;

export type IsOptional<T> = undefined extends T ? true : false;

export type RequiredKeys<V> = { [K in keyof V]-?: Exclude<V[K], undefined> extends Validator<infer T> ? IsOptional<T> extends true ? never : K : never }[keyof V];
export type OptionalKeys<V> = Exclude<keyof V, RequiredKeys<V>>;
export type InferPropsInner<V> = { [K in keyof V]-?: InferType<V[K]>; };

export interface Validator<T> {
    (props: { [key: string]: any }, propName: string, componentName: string, location: string, propFullName: string): Error | null;
    [nominalTypeHack]?: {
        type: T;
    } | undefined;
}

export interface Requireable<T> extends Validator<T | undefined | null> {
    isRequired: Validator<NonNullable<T>>;
}

export type ValidationMap<T> = { [K in keyof T]?: Validator<T[K]> };

export type InferType<V> = V extends Validator<infer T> ? T : any;
export type InferProps<V> =
    & InferPropsInner<Pick<V, RequiredKeys<V>>>
    & Partial<InferPropsInner<Pick<V, OptionalKeys<V>>>>;

export const any: Requireable<any>;
export const array: Requireable<any[]>;
export const bool: Requireable<boolean>;
export const func: Requireable<(...args: any[]) => any>;
export const number: Requireable<number>;
export const object: Requireable<object>;
export const string: Requireable<string>;
export const node: Requireable<ReactNodeLike>;
export const element: Requireable<ReactElementLike>;
export const symbol: Requireable<symbol>;
export const elementType: Requireable<ReactComponentLike>;
export function instanceOf<T>(expectedClass: new (...args: any[]) => T): Requireable<T>;
export function oneOf<T>(types: ReadonlyArray<T>): Requireable<T>;
export function oneOfType<T extends Validator<any>>(types: T[]): Requireable<NonNullable<InferType<T>>>;
export function arrayOf<T>(type: Validator<T>): Requireable<T[]>;
export function objectOf<T>(type: Validator<T>): Requireable<{ [K in keyof any]: T; }>;
export function shape<P extends ValidationMap<any>>(type: P): Requireable<InferProps<P>>;
export function exact<P extends ValidationMap<any>>(type: P): Requireable<Required<InferProps<P>>>;

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param typeSpecs Map of name to a ReactPropType
 * @param values Runtime values that need to be type-checked
 * @param location e.g. "prop", "context", "child context"
 * @param componentName Name of the component for error messages
 * @param getStack Returns the component stack
 */
export function checkPropTypes(typeSpecs: any, values: any, location: string, componentName: string, getStack?: () => any): void;

/**
 * Only available if NODE_ENV=production
 */
export function resetWarningCache(): void;
`;var _L=`export {};

export type PropertyValue<TValue> = TValue extends Array<infer AValue>
  ? Array<AValue extends infer TUnpacked & {} ? TUnpacked : AValue>
  : TValue extends infer TUnpacked & {}
  ? TUnpacked
  : TValue;

export type Fallback<T> = { [P in keyof T]: T[P] | NonNullable<T[P]>[] };

export interface StandardLonghandProperties<TLength = (string & {}) | 0, TTime = string & {}> {
  /**
   * The **\`accent-color\`** CSS property sets the color of the elements accent. An accent appears in elements such as \`<input>\` of \`type="checkbox"\`, or \`type="radio"\`.
   *
   * **Syntax**: \`auto | <color>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **93** | **92**  |   No   | **93** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/accent-color
   */
  accentColor?: Property.AccentColor | undefined;
  /**
   * The CSS **\`align-content\`** property sets the distribution of space between and around content items along a flexbox's cross-axis or a grid's block axis.
   *
   * **Syntax**: \`normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>\`
   *
   * **Initial value**: \`normal\`
   *
   * ---
   *
   * _Supported in Flex Layout_
   *
   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :------: | :-----: | :-----: | :----: | :----: |
   * |  **29**  | **28**  |  **9**  | **12** | **11** |
   * | 21 _-x-_ |         | 7 _-x-_ |        |        |
   *
   * ---
   *
   * _Supported in Grid Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/align-content
   */
  alignContent?: Property.AlignContent | undefined;
  /**
   * The CSS **\`align-items\`** property sets the \`align-self\` value on all direct children as a group. In Flexbox, it controls the alignment of items on the Cross Axis. In Grid Layout, it controls the alignment of items on the Block Axis within their grid area.
   *
   * **Syntax**: \`normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]\`
   *
   * **Initial value**: \`normal\`
   *
   * ---
   *
   * _Supported in Flex Layout_
   *
   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :------: | :-----: | :-----: | :----: | :----: |
   * |  **52**  | **20**  |  **9**  | **12** | **11** |
   * | 21 _-x-_ |         | 7 _-x-_ |        |        |
   *
   * ---
   *
   * _Supported in Grid Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/align-items
   */
  alignItems?: Property.AlignItems | undefined;
  /**
   * The **\`align-self\`** CSS property overrides a grid or flex item's \`align-items\` value. In Grid, it aligns the item inside the\xA0grid area. In Flexbox, it aligns the item on the cross axis.
   *
   * **Syntax**: \`auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>\`
   *
   * **Initial value**: \`auto\`
   *
   * ---
   *
   * _Supported in Flex Layout_
   *
   * |  Chrome  | Firefox |  Safari   |  Edge  |   IE   |
   * | :------: | :-----: | :-------: | :----: | :----: |
   * |  **36**  | **20**  |   **9**   | **12** | **11** |
   * | 21 _-x-_ |         | 6.1 _-x-_ |        |        |
   *
   * ---
   *
   * _Supported in Grid Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  |      IE      |
   * | :----: | :-----: | :------: | :----: | :----------: |
   * | **57** | **52**  | **10.1** | **16** | **10** _-x-_ |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/align-self
   */
  alignSelf?: Property.AlignSelf | undefined;
  /**
   * The **\`align-tracks\`**\xA0CSS property sets the alignment in the masonry axis for grid containers that have masonry in their block axis.
   *
   * **Syntax**: \`[ normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position> ]#\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   |   n/a   |   No   |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/align-tracks
   */
  alignTracks?: Property.AlignTracks | undefined;
  /**
   * The **\`animation-delay\`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **43**  | **16**  |  **9**  | **12** | **10** |
   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/animation-delay
   */
  animationDelay?: Property.AnimationDelay<TTime> | undefined;
  /**
   * The **\`animation-direction\`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.
   *
   * **Syntax**: \`<single-animation-direction>#\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **43**  | **16**  |  **9**  | **12** | **10** |
   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/animation-direction
   */
  animationDirection?: Property.AnimationDirection | undefined;
  /**
   * The **\`animation-duration\`** CSS property sets the length of time that an animation takes to complete one cycle.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **43**  | **16**  |  **9**  | **12** | **10** |
   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/animation-duration
   */
  animationDuration?: Property.AnimationDuration<TTime> | undefined;
  /**
   * The **\`animation-fill-mode\`** CSS property sets how a CSS animation applies styles to its target before and after its execution.
   *
   * **Syntax**: \`<single-animation-fill-mode>#\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **43**  | **16**  |  **9**  | **12** | **10** |
   * | 3 _-x-_ | 5 _-x-_ | 5 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/animation-fill-mode
   */
  animationFillMode?: Property.AnimationFillMode | undefined;
  /**
   * The **\`animation-iteration-count\`** CSS property sets the number of times an animation sequence should be played before stopping.
   *
   * **Syntax**: \`<single-animation-iteration-count>#\`
   *
   * **Initial value**: \`1\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **43**  | **16**  |  **9**  | **12** | **10** |
   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/animation-iteration-count
   */
  animationIterationCount?: Property.AnimationIterationCount | undefined;
  /**
   * The **\`animation-name\`** CSS property specifies the names of one or more \`@keyframes\` at-rules describing the animation or animations to apply to the element.
   *
   * **Syntax**: \`[ none | <keyframes-name> ]#\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **43**  | **16**  |  **9**  | **12** | **10** |
   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/animation-name
   */
  animationName?: Property.AnimationName | undefined;
  /**
   * The **\`animation-play-state\`** CSS property sets whether an animation is running or paused.
   *
   * **Syntax**: \`<single-animation-play-state>#\`
   *
   * **Initial value**: \`running\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **43**  | **16**  |  **9**  | **12** | **10** |
   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/animation-play-state
   */
  animationPlayState?: Property.AnimationPlayState | undefined;
  /**
   * The **\`animation-timing-function\`** CSS property sets how an animation progresses through the duration of each cycle.
   *
   * **Syntax**: \`<easing-function>#\`
   *
   * **Initial value**: \`ease\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **43**  | **16**  |  **9**  | **12** | **10** |
   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/animation-timing-function
   */
  animationTimingFunction?: Property.AnimationTimingFunction | undefined;
  /**
   * The \`**appearance**\` CSS property is used to display an element using platform-native styling, based on the operating system's theme. The **\`-moz-appearance\`** and **\`-webkit-appearance\`** properties are non-standard versions of this property, used (respectively) by Gecko (Firefox) and by WebKit-based (e.g., Safari) and Blink-based (e.g., Chrome, Opera) browsers to achieve the same thing. Note that Firefox and Edge also support **\`-webkit-appearance\`**, for compatibility reasons.
   *
   * **Syntax**: \`none | auto | textfield | menulist-button | <compat-auto>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome  | Firefox |   Safari    |   Edge   | IE  |
   * | :-----: | :-----: | :---------: | :------: | :-: |
   * | **84**  | **80**  | **3** _-x-_ |  **84**  | No  |
   * | 1 _-x-_ | 1 _-x-_ |             | 12 _-x-_ |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/appearance
   */
  appearance?: Property.Appearance | undefined;
  /**
   * The **\`aspect-ratio\`**\xA0\xA0CSS property sets a **preferred aspect ratio** for the box, which will be used in the calculation of auto sizes and some other layout functions.
   *
   * **Syntax**: \`auto | <ratio>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **88** | **89**  | **15** | **88** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/aspect-ratio
   */
  aspectRatio?: Property.AspectRatio | undefined;
  /**
   * The **\`backdrop-filter\`** CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything _behind_ the element, to see the effect you must make the element or its background at least partially transparent.
   *
   * **Syntax**: \`none | <filter-function-list>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |   Safari    |  Edge  | IE  |
   * | :----: | :-----: | :---------: | :----: | :-: |
   * | **76** |   n/a   | **9** _-x-_ | **17** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/backdrop-filter
   */
  backdropFilter?: Property.BackdropFilter | undefined;
  /**
   * The **\`backface-visibility\`** CSS property sets whether the back face of an element is visible when turned towards the user.
   *
   * **Syntax**: \`visible | hidden\`
   *
   * **Initial value**: \`visible\`
   *
   * |  Chrome  | Firefox  |    Safari     |  Edge  |   IE   |
   * | :------: | :------: | :-----------: | :----: | :----: |
   * |  **36**  |  **16**  | **5.1** _-x-_ | **12** | **10** |
   * | 12 _-x-_ | 10 _-x-_ |               |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/backface-visibility
   */
  backfaceVisibility?: Property.BackfaceVisibility | undefined;
  /**
   * The **\`background-attachment\`** CSS property sets whether a background image's position is fixed within the viewport, or scrolls with its containing block.
   *
   * **Syntax**: \`<attachment>#\`
   *
   * **Initial value**: \`scroll\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-attachment
   */
  backgroundAttachment?: Property.BackgroundAttachment | undefined;
  /**
   * The **\`background-blend-mode\`** CSS property sets how an element's background images should blend with each other and with the element's background color.
   *
   * **Syntax**: \`<blend-mode>#\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **35** | **30**  | **8**  | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-blend-mode
   */
  backgroundBlendMode?: Property.BackgroundBlendMode | undefined;
  /**
   * The **\`background-clip\`** CSS property sets whether an element's background extends underneath its border box, padding box, or content box.
   *
   * **Syntax**: \`<box>#\`
   *
   * **Initial value**: \`border-box\`
   *
   * | Chrome | Firefox |   Safari    |  Edge  |  IE   |
   * | :----: | :-----: | :---------: | :----: | :---: |
   * | **1**  |  **4**  | **3** _-x-_ | **12** | **9** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-clip
   */
  backgroundClip?: Property.BackgroundClip | undefined;
  /**
   * The **\`background-color\`** CSS property sets the background color of an element.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`transparent\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-color
   */
  backgroundColor?: Property.BackgroundColor | undefined;
  /**
   * The **\`background-image\`** CSS property sets one or more background images on an element.
   *
   * **Syntax**: \`<bg-image>#\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-image
   */
  backgroundImage?: Property.BackgroundImage | undefined;
  /**
   * The **\`background-origin\`** CSS property sets the background's origin: from the border start, inside the border, or inside the padding.
   *
   * **Syntax**: \`<box>#\`
   *
   * **Initial value**: \`padding-box\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **4**  | **3**  | **12** | **9** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-origin
   */
  backgroundOrigin?: Property.BackgroundOrigin | undefined;
  /**
   * The **\`background-position-x\`** CSS property sets the initial horizontal position for each background image. The position is relative to the position layer set by \`background-origin\`.
   *
   * **Syntax**: \`[ center | [ [ left | right | x-start | x-end ]? <length-percentage>? ]! ]#\`
   *
   * **Initial value**: \`left\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  | **49**  | **1**  | **12** | **6** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-position-x
   */
  backgroundPositionX?: Property.BackgroundPositionX<TLength> | undefined;
  /**
   * The **\`background-position-y\`** CSS property sets the initial vertical position for each background image. The position is relative to the position layer set by \`background-origin\`.
   *
   * **Syntax**: \`[ center | [ [ top | bottom | y-start | y-end ]? <length-percentage>? ]! ]#\`
   *
   * **Initial value**: \`top\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  | **49**  | **1**  | **12** | **6** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-position-y
   */
  backgroundPositionY?: Property.BackgroundPositionY<TLength> | undefined;
  /**
   * The **\`background-repeat\`** CSS property sets how background images are repeated. A background image can be repeated along the horizontal and vertical axes, or not repeated at all.
   *
   * **Syntax**: \`<repeat-style>#\`
   *
   * **Initial value**: \`repeat\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-repeat
   */
  backgroundRepeat?: Property.BackgroundRepeat | undefined;
  /**
   * The **\`background-size\`** CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.
   *
   * **Syntax**: \`<bg-size>#\`
   *
   * **Initial value**: \`auto auto\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |
   * | :-----: | :-----: | :-----: | :----: | :---: |
   * |  **3**  |  **4**  |  **5**  | **12** | **9** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-size
   */
  backgroundSize?: Property.BackgroundSize<TLength> | undefined;
  /**
   * **Syntax**: \`clip | ellipsis | <string>\`
   *
   * **Initial value**: \`clip\`
   */
  blockOverflow?: Property.BlockOverflow | undefined;
  /**
   * The **\`block-size\`** CSS property defines the horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the \`width\` or the \`height\` property, depending on the value of \`writing-mode\`.
   *
   * **Syntax**: \`<'width'>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/block-size
   */
  blockSize?: Property.BlockSize<TLength> | undefined;
  /**
   * The **\`border-block-color\`** CSS property defines the color of the logical block borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-color\` and \`border-bottom-color\`, or \`border-right-color\` and \`border-left-color\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-color'>{1,2}\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-color
   */
  borderBlockColor?: Property.BorderBlockColor | undefined;
  /**
   * The **\`border-block-end-color\`** CSS property defines the color of the logical block-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-color\`,\xA0\`border-right-color\`,\xA0\`border-bottom-color\`, or \`border-left-color\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-color'>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-end-color
   */
  borderBlockEndColor?: Property.BorderBlockEndColor | undefined;
  /**
   * The **\`border-block-end-style\`** CSS property defines the style of the logical block-end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-style\`, \`border-right-style\`, \`border-bottom-style\`, or \`border-left-style\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-style'>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-end-style
   */
  borderBlockEndStyle?: Property.BorderBlockEndStyle | undefined;
  /**
   * The **\`border-block-end-width\`** CSS property defines the width of the logical block-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-width\`,\xA0\`border-right-width\`,\xA0\`border-bottom-width\`, or \`border-left-width\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-width'>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-end-width
   */
  borderBlockEndWidth?: Property.BorderBlockEndWidth<TLength> | undefined;
  /**
   * The **\`border-block-start-color\`** CSS property defines the color of the logical block-start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-color\`,\xA0\`border-right-color\`,\xA0\`border-bottom-color\`, or \`border-left-color\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-color'>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-start-color
   */
  borderBlockStartColor?: Property.BorderBlockStartColor | undefined;
  /**
   * The **\`border-block-start-style\`** CSS property defines the style of the logical block start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-style\`,\xA0\`border-right-style\`,\xA0\`border-bottom-style\`, or \`border-left-style\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-style'>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-start-style
   */
  borderBlockStartStyle?: Property.BorderBlockStartStyle | undefined;
  /**
   * The **\`border-block-start-width\`** CSS property defines the width of the logical block-start border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-width\`,\xA0\`border-right-width\`,\xA0\`border-bottom-width\`, or \`border-left-width\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-width'>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-start-width
   */
  borderBlockStartWidth?: Property.BorderBlockStartWidth<TLength> | undefined;
  /**
   * The **\`border-block-style\`** CSS property defines the style of the logical block borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-style\` and \`border-bottom-style\`, or \`border-left-style\` and \`border-right-style\` properties depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-style'>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-style
   */
  borderBlockStyle?: Property.BorderBlockStyle | undefined;
  /**
   * The **\`border-block-width\`** CSS property defines the width of the logical block\xA0borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-width\` and\xA0\`border-bottom-width\`, or \`border-left-width\`, and\xA0\`border-right-width\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-width'>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-width
   */
  borderBlockWidth?: Property.BorderBlockWidth<TLength> | undefined;
  /**
   * The **\`border-bottom-color\`** CSS property sets the color of an element's bottom border. It can also be set with the shorthand CSS properties \`border-color\` or \`border-bottom\`.
   *
   * **Syntax**: \`<'border-top-color'>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-color
   */
  borderBottomColor?: Property.BorderBottomColor | undefined;
  /**
   * The **\`border-bottom-left-radius\`** CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |
   * | :-----: | :-----: | :-----: | :----: | :---: |
   * |  **4**  |  **4**  |  **5**  | **12** | **9** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-left-radius
   */
  borderBottomLeftRadius?: Property.BorderBottomLeftRadius<TLength> | undefined;
  /**
   * The **\`border-bottom-right-radius\`** CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |
   * | :-----: | :-----: | :-----: | :----: | :---: |
   * |  **4**  |  **4**  |  **5**  | **12** | **9** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-right-radius
   */
  borderBottomRightRadius?: Property.BorderBottomRightRadius<TLength> | undefined;
  /**
   * The **\`border-bottom-style\`** CSS property sets the line style of an element's bottom \`border\`.
   *
   * **Syntax**: \`<line-style>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-style
   */
  borderBottomStyle?: Property.BorderBottomStyle | undefined;
  /**
   * The **\`border-bottom-width\`** CSS property sets the width of the bottom border of an element.
   *
   * **Syntax**: \`<line-width>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-width
   */
  borderBottomWidth?: Property.BorderBottomWidth<TLength> | undefined;
  /**
   * The **\`border-collapse\`** CSS property sets whether cells inside a \`<table>\` have shared or separate borders.
   *
   * **Syntax**: \`collapse | separate\`
   *
   * **Initial value**: \`separate\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  |  **1**  | **1.2** | **12** | **5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-collapse
   */
  borderCollapse?: Property.BorderCollapse | undefined;
  /**
   * The **\`border-end-end-radius\`** CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's \`writing-mode\`, \`direction\`, and \`text-orientation\`. This is useful when building styles to work regardless of the text orientation and\xA0writing mode.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **89** | **66**  | **15** | **89** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-end-end-radius
   */
  borderEndEndRadius?: Property.BorderEndEndRadius<TLength> | undefined;
  /**
   * The **\`border-end-start-radius\`** CSS property defines a logical border radius on an element, which maps to a physical border radius\xA0depending on the element's \`writing-mode\`, \`direction\`, and \`text-orientation\`.\xA0This is useful when building styles to work regardless of the text orientation and\xA0writing mode.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **89** | **66**  | **15** | **89** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-end-start-radius
   */
  borderEndStartRadius?: Property.BorderEndStartRadius<TLength> | undefined;
  /**
   * The **\`border-image-outset\`** CSS property sets the distance by which an element's border image is set out from its border box.
   *
   * **Syntax**: \`[ <length> | <number> ]{1,4}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **15** | **15**  | **6**  | **12** | **11** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-outset
   */
  borderImageOutset?: Property.BorderImageOutset<TLength> | undefined;
  /**
   * The **\`border-image-repeat\`** CSS property defines how the edge regions of a source image are adjusted to fit the dimensions of an element's border image.
   *
   * **Syntax**: \`[ stretch | repeat | round | space ]{1,2}\`
   *
   * **Initial value**: \`stretch\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **15** | **15**  | **6**  | **12** | **11** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-repeat
   */
  borderImageRepeat?: Property.BorderImageRepeat | undefined;
  /**
   * The **\`border-image-slice\`** CSS property divides the image specified by \`border-image-source\` into regions. These regions form the components of an element's border image.
   *
   * **Syntax**: \`<number-percentage>{1,4} && fill?\`
   *
   * **Initial value**: \`100%\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **15** | **15**  | **6**  | **12** | **11** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-slice
   */
  borderImageSlice?: Property.BorderImageSlice | undefined;
  /**
   * The **\`border-image-source\`** CSS property sets the source image used to create an element's border image.
   *
   * **Syntax**: \`none | <image>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **15** | **15**  | **6**  | **12** | **11** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-source
   */
  borderImageSource?: Property.BorderImageSource | undefined;
  /**
   * The **\`border-image-width\`** CSS property sets the width of an element's border image.
   *
   * **Syntax**: \`[ <length-percentage> | <number> | auto ]{1,4}\`
   *
   * **Initial value**: \`1\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **15** | **13**  | **6**  | **12** | **11** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-width
   */
  borderImageWidth?: Property.BorderImageWidth<TLength> | undefined;
  /**
   * The **\`border-inline-color\`** CSS property defines the color of the logical inline borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-color\` and \`border-bottom-color\`, or \`border-right-color\` and \`border-left-color\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-color'>{1,2}\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-color
   */
  borderInlineColor?: Property.BorderInlineColor | undefined;
  /**
   * The **\`border-inline-end-color\`** CSS property defines the color of the logical inline-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-color\`, \`border-right-color\`, \`border-bottom-color\`, or \`border-left-color\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-color'>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome |           Firefox           |  Safari  |  Edge  | IE  |
   * | :----: | :-------------------------: | :------: | :----: | :-: |
   * | **69** |           **41**            | **12.1** | **79** | No  |
   * |        | 3 _(-moz-border-end-color)_ |          |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-end-color
   */
  borderInlineEndColor?: Property.BorderInlineEndColor | undefined;
  /**
   * The **\`border-inline-end-style\`** CSS property defines the style of the logical inline end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-style\`, \`border-right-style\`, \`border-bottom-style\`, or \`border-left-style\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-style'>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome |           Firefox           |  Safari  |  Edge  | IE  |
   * | :----: | :-------------------------: | :------: | :----: | :-: |
   * | **69** |           **41**            | **12.1** | **79** | No  |
   * |        | 3 _(-moz-border-end-style)_ |          |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-end-style
   */
  borderInlineEndStyle?: Property.BorderInlineEndStyle | undefined;
  /**
   * The **\`border-inline-end-width\`** CSS property defines the width of the logical inline-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-width\`, \`border-right-width\`, \`border-bottom-width\`, or \`border-left-width\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-width'>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome |           Firefox           |  Safari  |  Edge  | IE  |
   * | :----: | :-------------------------: | :------: | :----: | :-: |
   * | **69** |           **41**            | **12.1** | **79** | No  |
   * |        | 3 _(-moz-border-end-width)_ |          |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-end-width
   */
  borderInlineEndWidth?: Property.BorderInlineEndWidth<TLength> | undefined;
  /**
   * The **\`border-inline-start-color\`** CSS property defines the color of the logical inline start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-color\`, \`border-right-color\`, \`border-bottom-color\`, or \`border-left-color\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-color'>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome |            Firefox            |  Safari  |  Edge  | IE  |
   * | :----: | :---------------------------: | :------: | :----: | :-: |
   * | **69** |            **41**             | **12.1** | **79** | No  |
   * |        | 3 _(-moz-border-start-color)_ |          |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-start-color
   */
  borderInlineStartColor?: Property.BorderInlineStartColor | undefined;
  /**
   * The **\`border-inline-start-style\`** CSS property defines the style of the logical inline start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-style\`, \`border-right-style\`, \`border-bottom-style\`, or \`border-left-style\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-style'>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome |            Firefox            |  Safari  |  Edge  | IE  |
   * | :----: | :---------------------------: | :------: | :----: | :-: |
   * | **69** |            **41**             | **12.1** | **79** | No  |
   * |        | 3 _(-moz-border-start-style)_ |          |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-start-style
   */
  borderInlineStartStyle?: Property.BorderInlineStartStyle | undefined;
  /**
   * The **\`border-inline-start-width\`** CSS property defines the width of the logical inline-start border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-width\`, \`border-right-width\`, \`border-bottom-width\`, or \`border-left-width\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-width'>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-start-width
   */
  borderInlineStartWidth?: Property.BorderInlineStartWidth<TLength> | undefined;
  /**
   * The **\`border-inline-style\`** CSS property defines the style of the logical inline\xA0borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-style\` and\xA0\`border-bottom-style\`, or\xA0\`border-left-style\` and\xA0\`border-right-style\` properties\xA0depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-style'>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-style
   */
  borderInlineStyle?: Property.BorderInlineStyle | undefined;
  /**
   * The **\`border-inline-width\`** CSS property defines the width of the logical inline\xA0borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-width\` and\xA0\`border-bottom-width\`, or \`border-left-width\`, and\xA0\`border-right-width\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-width'>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-width
   */
  borderInlineWidth?: Property.BorderInlineWidth<TLength> | undefined;
  /**
   * The **\`border-left-color\`** CSS property sets the color of an element's left border. It can also be set with the shorthand CSS properties \`border-color\` or \`border-left\`.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-left-color
   */
  borderLeftColor?: Property.BorderLeftColor | undefined;
  /**
   * The **\`border-left-style\`** CSS property sets the line style of an element's left \`border\`.
   *
   * **Syntax**: \`<line-style>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-left-style
   */
  borderLeftStyle?: Property.BorderLeftStyle | undefined;
  /**
   * The **\`border-left-width\`** CSS property sets the width of the left border of an element.
   *
   * **Syntax**: \`<line-width>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-left-width
   */
  borderLeftWidth?: Property.BorderLeftWidth<TLength> | undefined;
  /**
   * The **\`border-right-color\`** CSS property sets the color of an element's right border. It can also be set with the shorthand CSS properties \`border-color\` or \`border-right\`.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-right-color
   */
  borderRightColor?: Property.BorderRightColor | undefined;
  /**
   * The **\`border-right-style\`** CSS property sets the line style of an element's right \`border\`.
   *
   * **Syntax**: \`<line-style>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-right-style
   */
  borderRightStyle?: Property.BorderRightStyle | undefined;
  /**
   * The **\`border-right-width\`** CSS property sets the width of the right border of an element.
   *
   * **Syntax**: \`<line-width>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-right-width
   */
  borderRightWidth?: Property.BorderRightWidth<TLength> | undefined;
  /**
   * The **\`border-spacing\`** CSS property sets the distance between the borders of adjacent \`<table>\` cells. This property applies only when \`border-collapse\` is \`separate\`.
   *
   * **Syntax**: \`<length> <length>?\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-spacing
   */
  borderSpacing?: Property.BorderSpacing<TLength> | undefined;
  /**
   * The **\`border-start-end-radius\`** CSS property defines a logical border radius on an element, which maps to a physical border radius\xA0depending on the element's \`writing-mode\`, \`direction\`, and \`text-orientation\`.\xA0This is useful when building styles to work regardless of the text orientation and\xA0writing mode.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **89** | **66**  | **15** | **89** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-start-end-radius
   */
  borderStartEndRadius?: Property.BorderStartEndRadius<TLength> | undefined;
  /**
   * The **\`border-start-start-radius\`** CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's \`writing-mode\`, \`direction\`, and \`text-orientation\`. This is useful when building styles to work regardless of the text orientation and\xA0writing mode.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **89** | **66**  | **15** | **89** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-start-start-radius
   */
  borderStartStartRadius?: Property.BorderStartStartRadius<TLength> | undefined;
  /**
   * The **\`border-top-color\`** CSS property sets the color of an element's top border. It can also be set with the shorthand CSS properties \`border-color\` or \`border-top\`.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-color
   */
  borderTopColor?: Property.BorderTopColor | undefined;
  /**
   * The **\`border-top-left-radius\`** CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |
   * | :-----: | :-----: | :-----: | :----: | :---: |
   * |  **4**  |  **4**  |  **5**  | **12** | **9** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-left-radius
   */
  borderTopLeftRadius?: Property.BorderTopLeftRadius<TLength> | undefined;
  /**
   * The **\`border-top-right-radius\`** CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |
   * | :-----: | :-----: | :-----: | :----: | :---: |
   * |  **4**  |  **4**  |  **5**  | **12** | **9** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-right-radius
   */
  borderTopRightRadius?: Property.BorderTopRightRadius<TLength> | undefined;
  /**
   * The **\`border-top-style\`** CSS property sets the line style of an element's top \`border\`.
   *
   * **Syntax**: \`<line-style>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-style
   */
  borderTopStyle?: Property.BorderTopStyle | undefined;
  /**
   * The **\`border-top-width\`** CSS property sets the width of the top border of an element.
   *
   * **Syntax**: \`<line-width>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-width
   */
  borderTopWidth?: Property.BorderTopWidth<TLength> | undefined;
  /**
   * The **\`bottom\`** CSS property participates in setting the vertical position of a positioned element. It has no effect on non-positioned elements.
   *
   * **Syntax**: \`<length> | <percentage> | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/bottom
   */
  bottom?: Property.Bottom<TLength> | undefined;
  /**
   * The **\`box-decoration-break\`** CSS property specifies how an element's fragments should be rendered when broken across multiple lines, columns, or pages.
   *
   * **Syntax**: \`slice | clone\`
   *
   * **Initial value**: \`slice\`
   *
   * |    Chrome    | Firefox |   Safari    |     Edge     | IE  |
   * | :----------: | :-----: | :---------: | :----------: | :-: |
   * | **22** _-x-_ | **32**  | **7** _-x-_ | **79** _-x-_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/box-decoration-break
   */
  boxDecorationBreak?: Property.BoxDecorationBreak | undefined;
  /**
   * The **\`box-shadow\`** CSS property adds shadow effects around an element's frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color.
   *
   * **Syntax**: \`none | <shadow>#\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |
   * | :-----: | :-----: | :-----: | :----: | :---: |
   * | **10**  |  **4**  | **5.1** | **12** | **9** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/box-shadow
   */
  boxShadow?: Property.BoxShadow | undefined;
  /**
   * The **\`box-sizing\`** CSS property sets how the total width and height of an element is calculated.
   *
   * **Syntax**: \`content-box | border-box\`
   *
   * **Initial value**: \`content-box\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |
   * | :-----: | :-----: | :-----: | :----: | :---: |
   * | **10**  | **29**  | **5.1** | **12** | **8** |
   * | 1 _-x-_ | 1 _-x-_ | 3 _-x-_ |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/box-sizing
   */
  boxSizing?: Property.BoxSizing | undefined;
  /**
   * The **\`break-after\`** CSS property sets how page, column, or region breaks should behave after a generated box. If there is no generated box, the property is ignored.
   *
   * **Syntax**: \`auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region\`
   *
   * **Initial value**: \`auto\`
   *
   * ---
   *
   * _Supported in Multi-column Layout_
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **50** | **65**  |   No   | **12** | **10** |
   *
   * ---
   *
   * _Supported in Paged Media_
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **50** | **65**  | **10** | **12** | **10** |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/break-after
   */
  breakAfter?: Property.BreakAfter | undefined;
  /**
   * The **\`break-before\`** CSS property sets how page, column, or region breaks should behave before a generated box. If there is no generated box, the property is ignored.
   *
   * **Syntax**: \`auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region\`
   *
   * **Initial value**: \`auto\`
   *
   * ---
   *
   * _Supported in Multi-column Layout_
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **50** | **65**  |   No   | **12** | **10** |
   *
   * ---
   *
   * _Supported in Paged Media_
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **50** | **65**  | **10** | **12** | **10** |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/break-before
   */
  breakBefore?: Property.BreakBefore | undefined;
  /**
   * The **\`break-inside\`** CSS property sets how page, column, or region breaks should behave inside a generated box. If there is no generated box, the property is ignored.
   *
   * **Syntax**: \`auto | avoid | avoid-page | avoid-column | avoid-region\`
   *
   * **Initial value**: \`auto\`
   *
   * ---
   *
   * _Supported in Multi-column Layout_
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **50** | **65**  | **10** | **12** | **10** |
   *
   * ---
   *
   * _Supported in Paged Media_
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **50** | **65**  | **10** | **12** | **10** |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/break-inside
   */
  breakInside?: Property.BreakInside | undefined;
  /**
   * The **\`caption-side\`** CSS property puts the content of a table's \`<caption>\` on the specified side. The values are relative to the \`writing-mode\` of the table.
   *
   * **Syntax**: \`top | bottom | block-start | block-end | inline-start | inline-end\`
   *
   * **Initial value**: \`top\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/caption-side
   */
  captionSide?: Property.CaptionSide | undefined;
  /**
   * The **\`caret-color\`** CSS property sets the color of the **insertion caret**, the visible marker where the next character typed will be inserted. This is sometimes referred to as the **text input cursor**. The caret appears in elements such as \`<input>\` or those with the \`contenteditable\` attribute. The caret is typically a thin vertical line that flashes to help make it more noticeable. By default, it is black, but its color can be altered with this property.
   *
   * **Syntax**: \`auto | <color>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **53**  | **11.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/caret-color
   */
  caretColor?: Property.CaretColor | undefined;
  /**
   * The **\`clear\`** CSS property sets whether an element must be moved below (cleared) floating elements that precede it. The \`clear\` property applies to floating and non-floating elements.
   *
   * **Syntax**: \`none | left | right | both | inline-start | inline-end\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/clear
   */
  clear?: Property.Clear | undefined;
  /**
   * The \`**clip-path**\` CSS property creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden.
   *
   * **Syntax**: \`<clip-source> | [ <basic-shape> || <geometry-box> ] | none\`
   *
   * **Initial value**: \`none\`
   *
   * |  Chrome  | Firefox |  Safari   |  Edge  |   IE   |
   * | :------: | :-----: | :-------: | :----: | :----: |
   * |  **55**  | **3.5** |  **9.1**  | **12** | **10** |
   * | 23 _-x-_ |         | 6.1 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/clip-path
   */
  clipPath?: Property.ClipPath | undefined;
  /**
   * The **\`color\`** CSS property sets the foreground color value of an element's text and text decorations, and sets the \`<currentcolor>\` value. \`currentcolor\` may be used as an indirect value on _other_ properties and is the default for other color properties, such as \`border-color\`.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: Varies from one browser to another
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/color
   */
  color?: Property.Color | undefined;
  /**
   * The **\`color-adjust\`** CSS property sets what, if anything, the user agent may do to optimize the appearance of the element on the output device. By default, the browser is allowed to make any adjustments to the element's appearance it determines to be necessary and prudent given the type and capabilities of the output device.
   *
   * **Syntax**: \`economy | exact\`
   *
   * **Initial value**: \`economy\`
   *
   * |                Chrome                 | Firefox |                Safari                |                 Edge                  | IE  |
   * | :-----------------------------------: | :-----: | :----------------------------------: | :-----------------------------------: | :-: |
   * | **49** _(-webkit-print-color-adjust)_ | **48**  | **6** _(-webkit-print-color-adjust)_ | **79** _(-webkit-print-color-adjust)_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/color-adjust
   */
  colorAdjust?: Property.ColorAdjust | undefined;
  /**
   * The **\`color-scheme\`** CSS property allows an element to indicate which color schemes it can comfortably be rendered in.
   *
   * **Syntax**: \`normal | [ light | dark | <custom-ident> ]+\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **81** |   No    | **13** | **81** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/color-scheme
   */
  colorScheme?: Property.ColorScheme | undefined;
  /**
   * The **\`column-count\`** CSS property breaks an element's content into the specified number of columns.
   *
   * **Syntax**: \`<integer> | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **50**  | **52**  |  **9**  | **12** | **10** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/column-count
   */
  columnCount?: Property.ColumnCount | undefined;
  /**
   * The **\`column-fill\`** CSS property controls how an element's contents are balanced when broken into columns.
   *
   * **Syntax**: \`auto | balance | balance-all\`
   *
   * **Initial value**: \`balance\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |   IE   |
   * | :----: | :-----: | :-----: | :----: | :----: |
   * | **50** | **52**  |  **9**  | **12** | **10** |
   * |        |         | 8 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/column-fill
   */
  columnFill?: Property.ColumnFill | undefined;
  /**
   * The **\`column-gap\`** CSS property sets the size of the gap (gutter) between an element's columns.
   *
   * **Syntax**: \`normal | <length-percentage>\`
   *
   * **Initial value**: \`normal\`
   *
   * ---
   *
   * _Supported in Flex Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **84** | **63**  | **14.1** | **84** | No  |
   *
   * ---
   *
   * _Supported in Grid Layout_
   *
   * |         Chrome         |        Firefox         |          Safari          |  Edge  | IE  |
   * | :--------------------: | :--------------------: | :----------------------: | :----: | :-: |
   * |         **66**         |         **61**         |          **12**          | **16** | No  |
   * | 57 _(grid-column-gap)_ | 52 _(grid-column-gap)_ | 10.1 _(grid-column-gap)_ |        |     |
   *
   * ---
   *
   * _Supported in Multi-column Layout_
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **50**  | **52**  | **10**  | **12** | **10** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |        |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/column-gap
   */
  columnGap?: Property.ColumnGap<TLength> | undefined;
  /**
   * The **\`column-rule-color\`** CSS property sets the color of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **50**  | **52**  |  **9**  | **12** | **10** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/column-rule-color
   */
  columnRuleColor?: Property.ColumnRuleColor | undefined;
  /**
   * The **\`column-rule-style\`** CSS property sets the style of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<'border-style'>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **50**  | **52**  |  **9**  | **12** | **10** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/column-rule-style
   */
  columnRuleStyle?: Property.ColumnRuleStyle | undefined;
  /**
   * The **\`column-rule-width\`** CSS property sets the width of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<'border-width'>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **50**  | **52**  |  **9**  | **12** | **10** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/column-rule-width
   */
  columnRuleWidth?: Property.ColumnRuleWidth<TLength> | undefined;
  /**
   * The **\`column-span\`** CSS property makes it possible for an element to span across all columns when its value is set to \`all\`.
   *
   * **Syntax**: \`none | all\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |
   * | :-----: | :-----: | :-------: | :----: | :----: |
   * | **50**  | **71**  |   **9**   | **12** | **10** |
   * | 6 _-x-_ |         | 5.1 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/column-span
   */
  columnSpan?: Property.ColumnSpan | undefined;
  /**
   * The **\`column-width\`** CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the \`column-width\` value. If the width of the container is narrower than the specified value, the single column's width will be smaller than the declared column width.
   *
   * **Syntax**: \`<length> | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **50**  | **50**  |  **9**  | **12** | **10** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/column-width
   */
  columnWidth?: Property.ColumnWidth<TLength> | undefined;
  /**
   * The **\`contain\`** CSS property allows an author to indicate that an element and its contents are, as much as possible, _independent_ of the rest of the document tree. This allows the browser to recalculate layout, style, paint, size, or any combination of them for a limited area of the DOM and not the entire page, leading to obvious performance benefits.
   *
   * **Syntax**: \`none | strict | content | [ size || layout || style || paint ]\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **52** | **69**  |   No   | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/contain
   */
  contain?: Property.Contain | undefined;
  /**
   * The **\`content\`** CSS property replaces an element with a generated value. Objects inserted using the \`content\` property are **anonymous replaced elements**_._
   *
   * **Syntax**: \`normal | none | [ <content-replacement> | <content-list> ] [/ <string> ]?\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/content
   */
  content?: Property.Content | undefined;
  /**
   * The **\`content-visibility\`** CSS property controls whether or not an element renders its contents at all, along with forcing a strong set of containments, allowing user agents to potentially omit large swathes of layout and rendering work until it becomes needed. Basically it enables the user agent to skip an element's rendering work, including layout and painting, until it is needed, makes the initial page load much faster.
   *
   * **Syntax**: \`visible | auto | hidden\`
   *
   * **Initial value**: \`visible\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **85** |   No    |   No   | **85** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/content-visibility
   */
  contentVisibility?: Property.ContentVisibility | undefined;
  /**
   * The **\`counter-increment\`** CSS property increases or decreases the value of a CSS counter by a given value.
   *
   * **Syntax**: \`[ <custom-ident> <integer>? ]+ | none\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **2**  |  **1**  | **3**  | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/counter-increment
   */
  counterIncrement?: Property.CounterIncrement | undefined;
  /**
   * The **\`counter-reset\`** CSS property resets a CSS counter to a given value.
   *
   * **Syntax**: \`[ <custom-ident> <integer>? ]+ | none\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **2**  |  **1**  | **3**  | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/counter-reset
   */
  counterReset?: Property.CounterReset | undefined;
  /**
   * The **\`counter-set\`** CSS property sets a CSS counter to a given value. It manipulates the value of existing counters, and will\xA0only create new counters if there isn't already a counter of the given name on the element.
   *
   * **Syntax**: \`[ <custom-ident> <integer>? ]+ | none\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **85** | **68**  |   No   | **85** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/counter-set
   */
  counterSet?: Property.CounterSet | undefined;
  /**
   * The **\`cursor\`** CSS property sets the type of mouse cursor, if any, to show when the mouse pointer is over an element.
   *
   * **Syntax**: \`[ [ <url> [ <x> <y> ]? , ]* [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out | grab | grabbing ] ]\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  |  **1**  | **1.2** | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/cursor
   */
  cursor?: Property.Cursor | undefined;
  /**
   * The **\`direction\`** CSS property sets the direction of text, table columns, and horizontal overflow. Use \`rtl\` for languages written from right to left (like Hebrew or Arabic), and \`ltr\` for those written from left to right (like English and most other languages).
   *
   * **Syntax**: \`ltr | rtl\`
   *
   * **Initial value**: \`ltr\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **2**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/direction
   */
  direction?: Property.Direction | undefined;
  /**
   * The **\`display\`** CSS property sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.
   *
   * **Syntax**: \`[ <display-outside> || <display-inside> ] | <display-listitem> | <display-internal> | <display-box> | <display-legacy>\`
   *
   * **Initial value**: \`inline\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/display
   */
  display?: Property.Display | undefined;
  /**
   * The **\`empty-cells\`** CSS property sets whether borders and backgrounds appear around \`<table>\` cells that have no visible content.
   *
   * **Syntax**: \`show | hide\`
   *
   * **Initial value**: \`show\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  |  **1**  | **1.2** | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/empty-cells
   */
  emptyCells?: Property.EmptyCells | undefined;
  /**
   * The **\`filter\`** CSS property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders.
   *
   * **Syntax**: \`none | <filter-function-list>\`
   *
   * **Initial value**: \`none\`
   *
   * |  Chrome  | Firefox | Safari  |  Edge  | IE  |
   * | :------: | :-----: | :-----: | :----: | :-: |
   * |  **53**  | **35**  | **9.1** | **12** | No  |
   * | 18 _-x-_ |         | 6 _-x-_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/filter
   */
  filter?: Property.Filter | undefined;
  /**
   * The **\`flex-basis\`** CSS property sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with \`box-sizing\`.
   *
   * **Syntax**: \`content | <'width'>\`
   *
   * **Initial value**: \`auto\`
   *
   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :------: | :-----: | :-----: | :----: | :----: |
   * |  **29**  | **22**  |  **9**  | **12** | **11** |
   * | 22 _-x-_ |         | 7 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/flex-basis
   */
  flexBasis?: Property.FlexBasis<TLength> | undefined;
  /**
   * The **\`flex-direction\`** CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).
   *
   * **Syntax**: \`row | row-reverse | column | column-reverse\`
   *
   * **Initial value**: \`row\`
   *
   * |  Chrome  | Firefox | Safari  |  Edge  |    IE    |
   * | :------: | :-----: | :-----: | :----: | :------: |
   * |  **29**  | **20**  |  **9**  | **12** |  **11**  |
   * | 21 _-x-_ |         | 7 _-x-_ |        | 10 _-x-_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/flex-direction
   */
  flexDirection?: Property.FlexDirection | undefined;
  /**
   * The **\`flex-grow\`** CSS\xA0property sets the flex grow factor of a flex item main size.
   *
   * **Syntax**: \`<number>\`
   *
   * **Initial value**: \`0\`
   *
   * |  Chrome  | Firefox | Safari  |  Edge  |            IE            |
   * | :------: | :-----: | :-----: | :----: | :----------------------: |
   * |  **29**  | **20**  |  **9**  | **12** |          **11**          |
   * | 22 _-x-_ |         | 7 _-x-_ |        | 10 _(-ms-flex-positive)_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/flex-grow
   */
  flexGrow?: Property.FlexGrow | undefined;
  /**
   * The **\`flex-shrink\`** CSS property sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to \`flex-shrink\`.
   *
   * **Syntax**: \`<number>\`
   *
   * **Initial value**: \`1\`
   *
   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :------: | :-----: | :-----: | :----: | :----: |
   * |  **29**  | **20**  |  **9**  | **12** | **10** |
   * | 22 _-x-_ |         | 8 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/flex-shrink
   */
  flexShrink?: Property.FlexShrink | undefined;
  /**
   * The **\`flex-wrap\`** CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines. If wrapping is allowed, it sets the direction that lines are stacked.
   *
   * **Syntax**: \`nowrap | wrap | wrap-reverse\`
   *
   * **Initial value**: \`nowrap\`
   *
   * |  Chrome  | Firefox |  Safari   |  Edge  |   IE   |
   * | :------: | :-----: | :-------: | :----: | :----: |
   * |  **29**  | **28**  |   **9**   | **12** | **11** |
   * | 21 _-x-_ |         | 6.1 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/flex-wrap
   */
  flexWrap?: Property.FlexWrap | undefined;
  /**
   * The **\`float\`** CSS property places an element on the left or right side of its container, allowing text and inline elements to wrap around it. The element is removed from the normal flow of the page, though still remaining a part of the flow (in contrast to absolute positioning).
   *
   * **Syntax**: \`left | right | none | inline-start | inline-end\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/float
   */
  float?: Property.Float | undefined;
  /**
   * The **\`font-family\`** CSS property specifies a prioritized list of one or more font family names and/or generic family names for the selected element.
   *
   * **Syntax**: \`[ <family-name> | <generic-family> ]#\`
   *
   * **Initial value**: depends on user agent
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-family
   */
  fontFamily?: Property.FontFamily | undefined;
  /**
   * The **\`font-feature-settings\`** CSS property controls advanced typographic features in OpenType fonts.
   *
   * **Syntax**: \`normal | <feature-tag-value>#\`
   *
   * **Initial value**: \`normal\`
   *
   * |  Chrome  | Firefox  | Safari  |  Edge  |   IE   |
   * | :------: | :------: | :-----: | :----: | :----: |
   * |  **48**  |  **34**  | **9.1** | **15** | **10** |
   * | 16 _-x-_ | 15 _-x-_ |         |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-feature-settings
   */
  fontFeatureSettings?: Property.FontFeatureSettings | undefined;
  /**
   * The **\`font-kerning\`** CSS property sets the use of the kerning information stored in a font.
   *
   * **Syntax**: \`auto | normal | none\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari  |  Edge  | IE  |
   * | :----: | :-----: | :-----: | :----: | :-: |
   * | **33** | **32**  |  **9**  | **79** | No  |
   * |        |         | 6 _-x-_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-kerning
   */
  fontKerning?: Property.FontKerning | undefined;
  /**
   * The **\`font-language-override\`** CSS property controls the use of language-specific glyphs in a typeface.
   *
   * **Syntax**: \`normal | <string>\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   | **34**  |   No   |  No  | No  |
   * |        | 4 _-x-_ |        |      |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-language-override
   */
  fontLanguageOverride?: Property.FontLanguageOverride | undefined;
  /**
   * The **\`font-optical-sizing\`** CSS property sets whether text rendering is optimized for viewing at different sizes.
   *
   * **Syntax**: \`auto | none\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **79** | **62**  | **11** | **17** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-optical-sizing
   */
  fontOpticalSizing?: Property.FontOpticalSizing | undefined;
  /**
   * The **\`font-size\`** CSS property sets the size of the font. Changing the font size also updates the sizes of the font size-relative \`<length>\` units, such as\xA0\`em\`, \`ex\`, and so forth.
   *
   * **Syntax**: \`<absolute-size> | <relative-size> | <length-percentage>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-size
   */
  fontSize?: Property.FontSize<TLength> | undefined;
  /**
   * The **\`font-size-adjust\`** CSS property sets the size of lower-case letters relative to the current font size (which defines the size of upper-case letters).
   *
   * **Syntax**: \`none | [ ex-height | cap-height | ch-width | ic-width | ic-height ]? [ from-font | <number> ]\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |  n/a   |  **1**  |   No   | n/a  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-size-adjust
   */
  fontSizeAdjust?: Property.FontSizeAdjust | undefined;
  /**
   * The **\`font-smooth\`** CSS property controls the application of anti-aliasing when fonts are rendered.
   *
   * **Syntax**: \`auto | never | always | <absolute-size> | <length>\`
   *
   * **Initial value**: \`auto\`
   *
   * |              Chrome              |              Firefox               |              Safari              |               Edge                | IE  |
   * | :------------------------------: | :--------------------------------: | :------------------------------: | :-------------------------------: | :-: |
   * | **5** _(-webkit-font-smoothing)_ | **25** _(-moz-osx-font-smoothing)_ | **4** _(-webkit-font-smoothing)_ | **79** _(-webkit-font-smoothing)_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-smooth
   */
  fontSmooth?: Property.FontSmooth<TLength> | undefined;
  /**
   * The **\`font-stretch\`** CSS property selects a normal, condensed, or expanded face from a font.
   *
   * **Syntax**: \`<font-stretch-absolute>\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **60** |  **9**  | **11** | **12** | **9** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-stretch
   */
  fontStretch?: Property.FontStretch | undefined;
  /**
   * The **\`font-style\`** CSS property sets whether a font should be styled with a normal, italic, or oblique face from its \`font-family\`.
   *
   * **Syntax**: \`normal | italic | oblique <angle>?\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-style
   */
  fontStyle?: Property.FontStyle | undefined;
  /**
   * The **\`font-synthesis\`** CSS property controls which missing typefaces, bold or italic, may be synthesized by the browser.
   *
   * **Syntax**: \`none | [ weight || style || small-caps ]\`
   *
   * **Initial value**: \`weight style\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   | **34**  | **9**  |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-synthesis
   */
  fontSynthesis?: Property.FontSynthesis | undefined;
  /**
   * The **\`font-variant\`** CSS shorthand property allows you to set all the font variants for a font.
   *
   * **Syntax**: \`normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> || stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero || <east-asian-variant-values> || <east-asian-width-values> || ruby ]\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant
   */
  fontVariant?: Property.FontVariant | undefined;
  /**
   * The **\`font-variant-caps\`** CSS property controls the use of alternate glyphs for capital letters.
   *
   * **Syntax**: \`normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari  |  Edge  | IE  |
   * | :----: | :-----: | :-----: | :----: | :-: |
   * | **52** | **34**  | **9.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-caps
   */
  fontVariantCaps?: Property.FontVariantCaps | undefined;
  /**
   * The **\`font-variant-east-asian\`** CSS property controls the use of alternate glyphs for East Asian scripts, like Japanese and Chinese.
   *
   * **Syntax**: \`normal | [ <east-asian-variant-values> || <east-asian-width-values> || ruby ]\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari  |  Edge  | IE  |
   * | :----: | :-----: | :-----: | :----: | :-: |
   * | **63** | **34**  | **9.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-east-asian
   */
  fontVariantEastAsian?: Property.FontVariantEastAsian | undefined;
  /**
   * The **\`font-variant-ligatures\`** CSS property controls which ligatures and contextual forms are used in textual content of the elements it applies to. This leads to more harmonized forms in the resulting text.
   *
   * **Syntax**: \`normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]\`
   *
   * **Initial value**: \`normal\`
   *
   * |  Chrome  | Firefox | Safari  |  Edge  | IE  |
   * | :------: | :-----: | :-----: | :----: | :-: |
   * |  **34**  | **34**  | **9.1** | **79** | No  |
   * | 31 _-x-_ |         | 7 _-x-_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-ligatures
   */
  fontVariantLigatures?: Property.FontVariantLigatures | undefined;
  /**
   * The **\`font-variant-numeric\`** CSS property controls the usage of alternate glyphs for numbers, fractions, and ordinal markers.
   *
   * **Syntax**: \`normal | [ <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero ]\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari  |  Edge  | IE  |
   * | :----: | :-----: | :-----: | :----: | :-: |
   * | **52** | **34**  | **9.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-numeric
   */
  fontVariantNumeric?: Property.FontVariantNumeric | undefined;
  /**
   * The **\`font-variant-position\`** CSS property controls the use of alternate, smaller glyphs that are positioned as superscript or subscript.
   *
   * **Syntax**: \`normal | sub | super\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari  | Edge | IE  |
   * | :----: | :-----: | :-----: | :--: | :-: |
   * |   No   | **34**  | **9.1** |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-position
   */
  fontVariantPosition?: Property.FontVariantPosition | undefined;
  /**
   * The **\`font-variation-settings\`** CSS property provides low-level control over variable font characteristics, by specifying the four letter axis names of the characteristics you want to vary, along with their values.
   *
   * **Syntax**: \`normal | [ <string> <number> ]#\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **62** | **62**  | **11** | **17** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-variation-settings
   */
  fontVariationSettings?: Property.FontVariationSettings | undefined;
  /**
   * The **\`font-weight\`** CSS property sets the weight (or boldness) of the font. The weights available depend on the \`font-family\` that is currently set.
   *
   * **Syntax**: \`<font-weight-absolute> | bolder | lighter\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **2**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-weight
   */
  fontWeight?: Property.FontWeight | undefined;
  /**
   * The **\`forced-color-adjust\`** CSS property allows authors to opt certain elements out of forced colors mode. This then restores the control of those values to CSS.
   *
   * **Syntax**: \`auto | none\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |              Edge               |                 IE                  |
   * | :----: | :-----: | :----: | :-----------------------------: | :---------------------------------: |
   * | **89** |   No    |   No   |             **79**              | **10** _(-ms-high-contrast-adjust)_ |
   * |        |         |        | 12 _(-ms-high-contrast-adjust)_ |                                     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/forced-color-adjust
   */
  forcedColorAdjust?: Property.ForcedColorAdjust | undefined;
  /**
   * The **\`grid-auto-columns\`** CSS property specifies the size of an implicitly-created grid column track or pattern of tracks.
   *
   * **Syntax**: \`<track-size>+\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  |             IE              |
   * | :----: | :-----: | :------: | :----: | :-------------------------: |
   * | **57** | **70**  | **10.1** | **16** | **10** _(-ms-grid-columns)_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-auto-columns
   */
  gridAutoColumns?: Property.GridAutoColumns<TLength> | undefined;
  /**
   * The **\`grid-auto-flow\`** CSS property controls how the auto-placement algorithm works, specifying exactly how auto-placed items get flowed into the grid.
   *
   * **Syntax**: \`[ row | column ] || dense\`
   *
   * **Initial value**: \`row\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-auto-flow
   */
  gridAutoFlow?: Property.GridAutoFlow | undefined;
  /**
   * The **\`grid-auto-rows\`** CSS property specifies the size of an implicitly-created grid row track\xA0or pattern of tracks.
   *
   * **Syntax**: \`<track-size>+\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  |            IE            |
   * | :----: | :-----: | :------: | :----: | :----------------------: |
   * | **57** | **70**  | **10.1** | **16** | **10** _(-ms-grid-rows)_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-auto-rows
   */
  gridAutoRows?: Property.GridAutoRows<TLength> | undefined;
  /**
   * The **\`grid-column-end\`** CSS property specifies a grid item\u2019s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.
   *
   * **Syntax**: \`<grid-line>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-column-end
   */
  gridColumnEnd?: Property.GridColumnEnd | undefined;
  /**
   * The **\`grid-column-start\`** CSS property specifies a grid item\u2019s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.
   *
   * **Syntax**: \`<grid-line>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-column-start
   */
  gridColumnStart?: Property.GridColumnStart | undefined;
  /**
   * The **\`grid-row-end\`** CSS property specifies a grid item\u2019s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.
   *
   * **Syntax**: \`<grid-line>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-row-end
   */
  gridRowEnd?: Property.GridRowEnd | undefined;
  /**
   * The **\`grid-row-start\`** CSS property specifies a grid item\u2019s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.
   *
   * **Syntax**: \`<grid-line>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-row-start
   */
  gridRowStart?: Property.GridRowStart | undefined;
  /**
   * The **\`grid-template-areas\`** CSS property specifies named grid areas, establishing the cells in the grid and assigning them names.
   *
   * **Syntax**: \`none | <string>+\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-template-areas
   */
  gridTemplateAreas?: Property.GridTemplateAreas | undefined;
  /**
   * The **\`grid-template-columns\`** CSS property defines the line names and track sizing functions of the grid columns.
   *
   * **Syntax**: \`none | <track-list> | <auto-track-list> | subgrid <line-name-list>?\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  |             IE              |
   * | :----: | :-----: | :------: | :----: | :-------------------------: |
   * | **57** | **52**  | **10.1** | **16** | **10** _(-ms-grid-columns)_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-template-columns
   */
  gridTemplateColumns?: Property.GridTemplateColumns<TLength> | undefined;
  /**
   * The **\`grid-template-rows\`** CSS property defines the line names and track sizing functions of the grid rows.
   *
   * **Syntax**: \`none | <track-list> | <auto-track-list> | subgrid <line-name-list>?\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  |            IE            |
   * | :----: | :-----: | :------: | :----: | :----------------------: |
   * | **57** | **52**  | **10.1** | **16** | **10** _(-ms-grid-rows)_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-template-rows
   */
  gridTemplateRows?: Property.GridTemplateRows<TLength> | undefined;
  /**
   * The **\`hanging-punctuation\`** CSS property specifies whether a punctuation mark should hang at the start or end of a line of text. Hanging punctuation may be placed outside the line box.
   *
   * **Syntax**: \`none | [ first || [ force-end | allow-end ] || last ]\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   |   No    | **10** |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/hanging-punctuation
   */
  hangingPunctuation?: Property.HangingPunctuation | undefined;
  /**
   * The **\`height\`** CSS property specifies the height of an element. By default, the property defines the height of the content area. If \`box-sizing\` is set to \`border-box\`, however, it instead determines the height of the border area.
   *
   * **Syntax**: \`auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/height
   */
  height?: Property.Height<TLength> | undefined;
  /**
   * The **\`hyphens\`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.
   *
   * **Syntax**: \`none | manual | auto\`
   *
   * **Initial value**: \`manual\`
   *
   * |  Chrome  | Firefox |    Safari     |  Edge  |      IE      |
   * | :------: | :-----: | :-----------: | :----: | :----------: |
   * |  **55**  | **43**  | **5.1** _-x-_ | **79** | **10** _-x-_ |
   * | 13 _-x-_ | 6 _-x-_ |               |        |              |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/hyphens
   */
  hyphens?: Property.Hyphens | undefined;
  /**
   * The **\`image-orientation\`** CSS property specifies a layout-independent correction to the orientation of an image. It should _not_ be used for any other orientation adjustments; instead, the \`transform\` property should be used with the \`rotate\` \`<transform-function>\`.
   *
   * **Syntax**: \`from-image | <angle> | [ <angle>? flip ]\`
   *
   * **Initial value**: \`from-image\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **81** | **26**  | **13.1** | **81** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/image-orientation
   */
  imageOrientation?: Property.ImageOrientation | undefined;
  /**
   * The **\`image-rendering\`** CSS property sets an image scaling algorithm. The property applies to an element itself, to any images set in its other properties, and to its descendants.
   *
   * **Syntax**: \`auto | crisp-edges | pixelated\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **13** | **3.6** | **6**  | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/image-rendering
   */
  imageRendering?: Property.ImageRendering | undefined;
  /**
   * **Syntax**: \`[ from-image || <resolution> ] && snap?\`
   *
   * **Initial value**: \`1dppx\`
   */
  imageResolution?: Property.ImageResolution | undefined;
  /**
   * The \`initial-letter\` CSS property sets styling for dropped, raised, and sunken initial letters.
   *
   * **Syntax**: \`normal | [ <number> <integer>? ]\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox |   Safari    | Edge | IE  |
   * | :----: | :-----: | :---------: | :--: | :-: |
   * |   No   |   No    | **9** _-x-_ |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/initial-letter
   */
  initialLetter?: Property.InitialLetter | undefined;
  /**
   * The **\`inline-size\`** CSS property defines the horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the \`width\` or the \`height\` property, depending on the value of \`writing-mode\`.
   *
   * **Syntax**: \`<'width'>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/inline-size
   */
  inlineSize?: Property.InlineSize<TLength> | undefined;
  /**
   * The **\`inset\`**\xA0CSS property is a shorthand that corresponds to the \`top\`, \`right\`, \`bottom\`, and/or \`left\` properties. It has the same multi-value syntax of the \`margin\` shorthand.
   *
   * **Syntax**: \`<'top'>{1,4}\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/inset
   */
  inset?: Property.Inset<TLength> | undefined;
  /**
   * The **\`inset-inline\`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\` and \`bottom\`, or \`right\` and \`left\` properties depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>{1,2}\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **63**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/inset-block
   */
  insetBlock?: Property.InsetBlock<TLength> | undefined;
  /**
   * The **\`inset-block-end\`** CSS property defines the logical block end offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\`, \`right\`, \`bottom\`, or \`left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **63**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/inset-block-end
   */
  insetBlockEnd?: Property.InsetBlockEnd<TLength> | undefined;
  /**
   * The **\`inset-block-start\`** CSS property defines the logical block start offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\`, \`right\`, \`bottom\`, or \`left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **63**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/inset-block-start
   */
  insetBlockStart?: Property.InsetBlockStart<TLength> | undefined;
  /**
   * The **\`inset-inline\`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\` and \`bottom\`, or \`right\` and \`left\` properties depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>{1,2}\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **63**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/inset-inline
   */
  insetInline?: Property.InsetInline<TLength> | undefined;
  /**
   * The **\`inset-inline-end\`** CSS property defines the logical inline end inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\`, \`right\`, \`bottom\`, or \`left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **63**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/inset-inline-end
   */
  insetInlineEnd?: Property.InsetInlineEnd<TLength> | undefined;
  /**
   * The **\`inset-inline-start\`** CSS property defines the logical inline start inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\`, \`right\`, \`bottom\`, or \`left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **63**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/inset-inline-start
   */
  insetInlineStart?: Property.InsetInlineStart<TLength> | undefined;
  /**
   * The **\`isolation\`** CSS property determines whether an element must create a new stacking context.
   *
   * **Syntax**: \`auto | isolate\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **41** | **36**  | **8**  | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/isolation
   */
  isolation?: Property.Isolation | undefined;
  /**
   * The CSS **\`justify-content\`** property defines how the browser distributes space between and around content items along the main-axis of a flex container, and the inline axis of a grid container.
   *
   * **Syntax**: \`normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]\`
   *
   * **Initial value**: \`normal\`
   *
   * ---
   *
   * _Supported in Flex Layout_
   *
   * |  Chrome  | Firefox |  Safari   |  Edge  |   IE   |
   * | :------: | :-----: | :-------: | :----: | :----: |
   * |  **52**  | **20**  |   **9**   | **12** | **11** |
   * | 21 _-x-_ |         | 6.1 _-x-_ |        |        |
   *
   * ---
   *
   * _Supported in Grid Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/justify-content
   */
  justifyContent?: Property.JustifyContent | undefined;
  /**
   * The CSS **\`justify-items\`** property defines the default \`justify-self\` for all items of the box, giving them all a default way of justifying each box along the appropriate axis.
   *
   * **Syntax**: \`normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ] | legacy | legacy && [ left | right | center ]\`
   *
   * **Initial value**: \`legacy\`
   *
   * ---
   *
   * _Supported in Flex Layout_
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **52** | **20**  | **9**  | **12** | **11** |
   *
   * ---
   *
   * _Supported in Grid Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **45**  | **10.1** | **16** | No  |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/justify-items
   */
  justifyItems?: Property.JustifyItems | undefined;
  /**
   * The CSS **\`justify-self\`** property sets the way a box is justified inside its alignment container along the appropriate axis.
   *
   * **Syntax**: \`auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]\`
   *
   * **Initial value**: \`auto\`
   *
   * ---
   *
   * _Supported in Flex Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **45**  | **10.1** | **16** | No  |
   *
   * ---
   *
   * _Supported in Grid Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  |      IE      |
   * | :----: | :-----: | :------: | :----: | :----------: |
   * | **57** | **45**  | **10.1** | **16** | **10** _-x-_ |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/justify-self
   */
  justifySelf?: Property.JustifySelf | undefined;
  /**
   * The **\`justify-tracks\`**\xA0CSS property sets the alignment in the masonry axis for grid containers that have masonry in their inline\xA0axis.
   *
   * **Syntax**: \`[ normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ] ]#\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   |   n/a   |   No   |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/justify-tracks
   */
  justifyTracks?: Property.JustifyTracks | undefined;
  /**
   * The **\`left\`** CSS property participates in specifying the horizontal position of a positioned element. It has no effect on non-positioned elements.
   *
   * **Syntax**: \`<length> | <percentage> | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/left
   */
  left?: Property.Left<TLength> | undefined;
  /**
   * The **\`letter-spacing\`** CSS property sets the horizontal spacing behavior between text characters. This value is added to the natural spacing between characters while rendering the text. Positive values of \`letter-spacing\` causes characters to spread farther apart, while negative values of \`letter-spacing\` bring characters closer together.
   *
   * **Syntax**: \`normal | <length>\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/letter-spacing
   */
  letterSpacing?: Property.LetterSpacing<TLength> | undefined;
  /**
   * The **\`line-break\`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.
   *
   * **Syntax**: \`auto | loose | normal | strict | anywhere\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE    |
   * | :-----: | :-----: | :-----: | :----: | :-----: |
   * | **58**  | **69**  | **11**  | **14** | **5.5** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |         |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/line-break
   */
  lineBreak?: Property.LineBreak | undefined;
  /**
   * The **\`line-height\`** CSS property sets the height of a line box. It's commonly used to set the distance between lines of text. On block-level elements, it specifies the minimum height of line boxes within the element. On non-replaced inline elements, it specifies the height that is used to calculate line box height.
   *
   * **Syntax**: \`normal | <number> | <length> | <percentage>\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/line-height
   */
  lineHeight?: Property.LineHeight<TLength> | undefined;
  /**
   * The **\`line-height-step\`** CSS property sets the step unit for line box heights. When the property is set, line box heights are rounded up to the closest multiple of the unit.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |  n/a   |   No    |   No   | n/a  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/line-height-step
   */
  lineHeightStep?: Property.LineHeightStep<TLength> | undefined;
  /**
   * The **\`list-style-image\`** CSS property sets an image to be used as the list item marker.
   *
   * **Syntax**: \`<image> | none\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/list-style-image
   */
  listStyleImage?: Property.ListStyleImage | undefined;
  /**
   * The **\`list-style-position\`** CSS property sets the position of the \`::marker\` relative to a list item.
   *
   * **Syntax**: \`inside | outside\`
   *
   * **Initial value**: \`outside\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/list-style-position
   */
  listStylePosition?: Property.ListStylePosition | undefined;
  /**
   * The **\`list-style-type\`** CSS property sets the marker (such as a disc, character, or custom counter style) of a list item element.
   *
   * **Syntax**: \`<counter-style> | <string> | none\`
   *
   * **Initial value**: \`disc\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/list-style-type
   */
  listStyleType?: Property.ListStyleType | undefined;
  /**
   * The **\`margin-block\`** CSS shorthand property defines the logical block start and end margins of an element, which maps to physical margins depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'margin-left'>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-block
   */
  marginBlock?: Property.MarginBlock<TLength> | undefined;
  /**
   * The **\`margin-block-end\`** CSS property defines the logical block end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'margin-left'>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-block-end
   */
  marginBlockEnd?: Property.MarginBlockEnd<TLength> | undefined;
  /**
   * The **\`margin-block-start\`** CSS property defines the logical block start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'margin-left'>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-block-start
   */
  marginBlockStart?: Property.MarginBlockStart<TLength> | undefined;
  /**
   * The **\`margin-bottom\`** CSS property sets the margin area on the bottom of an element. A positive value places it farther from its neighbors, while a negative value places it closer.
   *
   * **Syntax**: \`<length> | <percentage> | auto\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-bottom
   */
  marginBottom?: Property.MarginBottom<TLength> | undefined;
  /**
   * The **\`margin-inline\`** CSS shorthand property is a shorthand property that defines both the logical inline start and end margins of an element, which maps to physical margins depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'margin-left'>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-inline
   */
  marginInline?: Property.MarginInline<TLength> | undefined;
  /**
   * The **\`margin-inline-end\`** CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. In other words, it corresponds to the \`margin-top\`, \`margin-right\`, \`margin-bottom\` or \`margin-left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'margin-left'>\`
   *
   * **Initial value**: \`0\`
   *
   * |          Chrome          |        Firefox        |          Safari          |  Edge  | IE  |
   * | :----------------------: | :-------------------: | :----------------------: | :----: | :-: |
   * |          **69**          |        **41**         |         **12.1**         | **79** | No  |
   * | 2 _(-webkit-margin-end)_ | 3 _(-moz-margin-end)_ | 3 _(-webkit-margin-end)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-inline-end
   */
  marginInlineEnd?: Property.MarginInlineEnd<TLength> | undefined;
  /**
   * The **\`margin-inline-start\`** CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`margin-top\`, \`margin-right\`, \`margin-bottom\`, or \`margin-left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'margin-left'>\`
   *
   * **Initial value**: \`0\`
   *
   * |           Chrome           |         Firefox         |           Safari           |  Edge  | IE  |
   * | :------------------------: | :---------------------: | :------------------------: | :----: | :-: |
   * |           **69**           |         **41**          |          **12.1**          | **79** | No  |
   * | 2 _(-webkit-margin-start)_ | 3 _(-moz-margin-start)_ | 3 _(-webkit-margin-start)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-inline-start
   */
  marginInlineStart?: Property.MarginInlineStart<TLength> | undefined;
  /**
   * The **\`margin-left\`** CSS property sets the margin area on the left side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.
   *
   * **Syntax**: \`<length> | <percentage> | auto\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-left
   */
  marginLeft?: Property.MarginLeft<TLength> | undefined;
  /**
   * The **\`margin-right\`** CSS property sets the margin area on the right side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.
   *
   * **Syntax**: \`<length> | <percentage> | auto\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-right
   */
  marginRight?: Property.MarginRight<TLength> | undefined;
  /**
   * The **\`margin-top\`** CSS property sets the margin area on the top of an element. A positive value places it farther from its neighbors, while a negative value places it closer.
   *
   * **Syntax**: \`<length> | <percentage> | auto\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-top
   */
  marginTop?: Property.MarginTop<TLength> | undefined;
  /**
   * The **\`mask-border-mode\`** CSS property specifies the blending mode used in a mask border.
   *
   * **Syntax**: \`luminance | alpha\`
   *
   * **Initial value**: \`alpha\`
   */
  maskBorderMode?: Property.MaskBorderMode | undefined;
  /**
   * The **\`mask-border-outset\`** CSS property specifies the distance by which an element's mask border is set out from its border box.
   *
   * **Syntax**: \`[ <length> | <number> ]{1,4}\`
   *
   * **Initial value**: \`0\`
   *
   * |                 Chrome                  | Firefox |                  Safari                   |                   Edge                   | IE  |
   * | :-------------------------------------: | :-----: | :---------------------------------------: | :--------------------------------------: | :-: |
   * | **1** _(-webkit-mask-box-image-outset)_ |   No    | **3.1** _(-webkit-mask-box-image-outset)_ | **79** _(-webkit-mask-box-image-outset)_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-outset
   */
  maskBorderOutset?: Property.MaskBorderOutset<TLength> | undefined;
  /**
   * The **\`mask-border-repeat\`** CSS property sets how the edge regions of a source image are adjusted to fit the dimensions of an element's mask border.
   *
   * **Syntax**: \`[ stretch | repeat | round | space ]{1,2}\`
   *
   * **Initial value**: \`stretch\`
   *
   * |                 Chrome                  | Firefox |                  Safari                   |                   Edge                   | IE  |
   * | :-------------------------------------: | :-----: | :---------------------------------------: | :--------------------------------------: | :-: |
   * | **1** _(-webkit-mask-box-image-repeat)_ |   No    | **3.1** _(-webkit-mask-box-image-repeat)_ | **79** _(-webkit-mask-box-image-repeat)_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-repeat
   */
  maskBorderRepeat?: Property.MaskBorderRepeat | undefined;
  /**
   * The **\`mask-border-slice\`** CSS property divides the image set by \`mask-border-source\` into regions. These regions are used to form the components of an element's mask border.
   *
   * **Syntax**: \`<number-percentage>{1,4} fill?\`
   *
   * **Initial value**: \`0\`
   *
   * |                 Chrome                 | Firefox |                  Safari                  |                  Edge                   | IE  |
   * | :------------------------------------: | :-----: | :--------------------------------------: | :-------------------------------------: | :-: |
   * | **1** _(-webkit-mask-box-image-slice)_ |   No    | **3.1** _(-webkit-mask-box-image-slice)_ | **79** _(-webkit-mask-box-image-slice)_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-slice
   */
  maskBorderSlice?: Property.MaskBorderSlice | undefined;
  /**
   * The **\`mask-border-source\`** CSS property sets the source image used to create an element's mask border.
   *
   * **Syntax**: \`none | <image>\`
   *
   * **Initial value**: \`none\`
   *
   * |                 Chrome                  | Firefox |                  Safari                   |                   Edge                   | IE  |
   * | :-------------------------------------: | :-----: | :---------------------------------------: | :--------------------------------------: | :-: |
   * | **1** _(-webkit-mask-box-image-source)_ |   No    | **3.1** _(-webkit-mask-box-image-source)_ | **79** _(-webkit-mask-box-image-source)_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-source
   */
  maskBorderSource?: Property.MaskBorderSource | undefined;
  /**
   * The **\`mask-border-width\`** CSS property sets the width of an element's mask border.
   *
   * **Syntax**: \`[ <length-percentage> | <number> | auto ]{1,4}\`
   *
   * **Initial value**: \`auto\`
   *
   * |                 Chrome                 | Firefox |                  Safari                  |                  Edge                   | IE  |
   * | :------------------------------------: | :-----: | :--------------------------------------: | :-------------------------------------: | :-: |
   * | **1** _(-webkit-mask-box-image-width)_ |   No    | **3.1** _(-webkit-mask-box-image-width)_ | **79** _(-webkit-mask-box-image-width)_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-width
   */
  maskBorderWidth?: Property.MaskBorderWidth<TLength> | undefined;
  /**
   * The **\`mask-clip\`** CSS property determines the area which is affected by a mask. The painted content of an element must be restricted to this area.
   *
   * **Syntax**: \`[ <geometry-box> | no-clip ]#\`
   *
   * **Initial value**: \`border-box\`
   *
   * |   Chrome    | Firefox |   Safari    |     Edge     | IE  |
   * | :---------: | :-----: | :---------: | :----------: | :-: |
   * | **1** _-x-_ | **53**  | **4** _-x-_ | **79** _-x-_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-clip
   */
  maskClip?: Property.MaskClip | undefined;
  /**
   * The **\`mask-composite\`** CSS property represents a compositing operation used on the current mask layer with the mask layers below it.
   *
   * **Syntax**: \`<compositing-operator>#\`
   *
   * **Initial value**: \`add\`
   *
   * | Chrome | Firefox | Safari | Edge  | IE  |
   * | :----: | :-----: | :----: | :---: | :-: |
   * |   No   | **53**  |   No   | 18-79 | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-composite
   */
  maskComposite?: Property.MaskComposite | undefined;
  /**
   * The **\`mask-image\`** CSS property sets the image that is used as mask layer for an element.
   *
   * **Syntax**: \`<mask-reference>#\`
   *
   * **Initial value**: \`none\`
   *
   * |   Chrome    | Firefox |   Safari    | Edge  | IE  |
   * | :---------: | :-----: | :---------: | :---: | :-: |
   * | **1** _-x-_ | **53**  | **4** _-x-_ | 16-79 | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-image
   */
  maskImage?: Property.MaskImage | undefined;
  /**
   * The **\`mask-mode\`** CSS property sets whether the mask reference defined by \`mask-image\` is treated as a luminance or alpha mask.
   *
   * **Syntax**: \`<masking-mode>#\`
   *
   * **Initial value**: \`match-source\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   | **53**  |   No   |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-mode
   */
  maskMode?: Property.MaskMode | undefined;
  /**
   * The **\`mask-origin\`** CSS property sets the origin of a mask.
   *
   * **Syntax**: \`<geometry-box>#\`
   *
   * **Initial value**: \`border-box\`
   *
   * |   Chrome    | Firefox |   Safari    |     Edge     | IE  |
   * | :---------: | :-----: | :---------: | :----------: | :-: |
   * | **1** _-x-_ | **53**  | **4** _-x-_ | **79** _-x-_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-origin
   */
  maskOrigin?: Property.MaskOrigin | undefined;
  /**
   * The **\`mask-position\`** CSS property sets the initial position, relative to the mask position layer set by \`mask-origin\`, for each defined mask image.
   *
   * **Syntax**: \`<position>#\`
   *
   * **Initial value**: \`center\`
   *
   * |   Chrome    | Firefox |    Safari     | Edge  | IE  |
   * | :---------: | :-----: | :-----------: | :---: | :-: |
   * | **1** _-x-_ | **53**  | **3.1** _-x-_ | 18-79 | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-position
   */
  maskPosition?: Property.MaskPosition<TLength> | undefined;
  /**
   * The **\`mask-repeat\`** CSS property sets how mask images are repeated. A mask image can be repeated along the horizontal axis, the vertical axis, both axes, or not repeated at all.
   *
   * **Syntax**: \`<repeat-style>#\`
   *
   * **Initial value**: \`no-repeat\`
   *
   * |   Chrome    | Firefox |    Safari     | Edge  | IE  |
   * | :---------: | :-----: | :-----------: | :---: | :-: |
   * | **1** _-x-_ | **53**  | **3.1** _-x-_ | 18-79 | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-repeat
   */
  maskRepeat?: Property.MaskRepeat | undefined;
  /**
   * The **\`mask-size\`** CSS property specifies the sizes of the mask images. The size of the image can be fully or partially constrained in order to preserve its intrinsic ratio.
   *
   * **Syntax**: \`<bg-size>#\`
   *
   * **Initial value**: \`auto\`
   *
   * |   Chrome    | Firefox |   Safari    | Edge  | IE  |
   * | :---------: | :-----: | :---------: | :---: | :-: |
   * | **4** _-x-_ | **53**  | **4** _-x-_ | 18-79 | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-size
   */
  maskSize?: Property.MaskSize<TLength> | undefined;
  /**
   * The **\`mask-type\`** CSS property sets whether an SVG \`<mask>\` element is used as a _luminance_ or an _alpha_ mask. It applies to the \`<mask>\` element itself.
   *
   * **Syntax**: \`luminance | alpha\`
   *
   * **Initial value**: \`luminance\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **24** | **35**  | **7**  | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-type
   */
  maskType?: Property.MaskType | undefined;
  /**
   * The \`math-style\` property\xA0indicates whether MathML equations should render with normal or compact height.
   *
   * **Syntax**: \`normal | compact\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox |  Safari  | Edge | IE  |
   * | :----: | :-----: | :------: | :--: | :-: |
   * |  n/a   |   n/a   | **14.1** |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/math-style
   */
  mathStyle?: Property.MathStyle | undefined;
  /**
   * The \`**max-block-size**\` CSS property specifies the maximum size of an element in the direction opposite that of the writing direction as specified by \`writing-mode\`. That is, if the writing direction is horizontal, then \`max-block-size\` is equivalent to \`max-height\`; if the writing direction is vertical, \`max-block-size\` is the same as \`max-width\`.
   *
   * **Syntax**: \`<'max-width'>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/max-block-size
   */
  maxBlockSize?: Property.MaxBlockSize<TLength> | undefined;
  /**
   * The **\`max-height\`** CSS property sets the maximum height of an element. It prevents the used value of the \`height\` property from becoming larger than the value specified for \`max-height\`.
   *
   * **Syntax**: \`none | <length-percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **18** |  **1**  | **1.3** | **12** | **7** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/max-height
   */
  maxHeight?: Property.MaxHeight<TLength> | undefined;
  /**
   * The **\`max-inline-size\`** CSS property defines the horizontal or vertical maximum size of an element's block, depending on its writing mode. It corresponds to either the \`max-width\` or the \`max-height\` property, depending on the value of \`writing-mode\`.
   *
   * **Syntax**: \`<'max-width'>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |   Safari   |  Edge  | IE  |
   * | :----: | :-----: | :--------: | :----: | :-: |
   * | **57** | **41**  |  **12.1**  | **79** | No  |
   * |        |         | 10.1 _-x-_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/max-inline-size
   */
  maxInlineSize?: Property.MaxInlineSize<TLength> | undefined;
  /**
   * **Syntax**: \`none | <integer>\`
   *
   * **Initial value**: \`none\`
   */
  maxLines?: Property.MaxLines | undefined;
  /**
   * The **\`max-width\`** CSS property sets the maximum width of an element. It prevents the used value of the \`width\` property from becoming larger than the value specified by \`max-width\`.
   *
   * **Syntax**: \`none | <length-percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **7** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/max-width
   */
  maxWidth?: Property.MaxWidth<TLength> | undefined;
  /**
   * The **\`min-block-size\`** CSS property defines the minimum horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the \`min-width\` or the \`min-height\` property, depending on the value of \`writing-mode\`.
   *
   * **Syntax**: \`<'min-width'>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/min-block-size
   */
  minBlockSize?: Property.MinBlockSize<TLength> | undefined;
  /**
   * The **\`min-height\`** CSS property sets the minimum height of an element. It prevents the used value of the \`height\` property from becoming smaller than the value specified for \`min-height\`.
   *
   * **Syntax**: \`auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  |  **3**  | **1.3** | **12** | **7** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/min-height
   */
  minHeight?: Property.MinHeight<TLength> | undefined;
  /**
   * The **\`min-inline-size\`** CSS property defines the horizontal or vertical minimal size of an element's block, depending on its writing mode. It corresponds to either the \`min-width\` or the \`min-height\` property, depending on the value of \`writing-mode\`.
   *
   * **Syntax**: \`<'min-width'>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/min-inline-size
   */
  minInlineSize?: Property.MinInlineSize<TLength> | undefined;
  /**
   * The **\`min-width\`** CSS property sets the minimum width of an element. It prevents the used value of the \`width\` property from becoming smaller than the value specified for \`min-width\`.
   *
   * **Syntax**: \`auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **7** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/min-width
   */
  minWidth?: Property.MinWidth<TLength> | undefined;
  /**
   * The **\`mix-blend-mode\`** CSS property sets how an element's content should blend with the content of the element's parent and the element's background.
   *
   * **Syntax**: \`<blend-mode>\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **41** | **32**  | **8**  | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mix-blend-mode
   */
  mixBlendMode?: Property.MixBlendMode | undefined;
  /**
   * The **\`offset-distance\`** CSS property specifies a position along an \`offset-path\` for an element to be placed.
   *
   * **Syntax**: \`<length-percentage>\`
   *
   * **Initial value**: \`0\`
   *
   * |         Chrome         | Firefox | Safari |  Edge  | IE  |
   * | :--------------------: | :-----: | :----: | :----: | :-: |
   * |         **55**         | **72**  |   No   | **79** | No  |
   * | 46 _(motion-distance)_ |         |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset-distance
   */
  motionDistance?: Property.OffsetDistance<TLength> | undefined;
  /**
   * The **\`offset-path\`** CSS property specifies a motion path for an element to follow and defines the element's positioning within the parent container or SVG coordinate system.
   *
   * **Syntax**: \`none | ray( [ <angle> && <size> && contain? ] ) | <path()> | <url> | [ <basic-shape> || <geometry-box> ]\`
   *
   * **Initial value**: \`none\`
   *
   * |       Chrome       | Firefox | Safari |  Edge  | IE  |
   * | :----------------: | :-----: | :----: | :----: | :-: |
   * |       **55**       | **72**  |   No   | **79** | No  |
   * | 46 _(motion-path)_ |         |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset-path
   */
  motionPath?: Property.OffsetPath | undefined;
  /**
   * The **\`offset-rotate\`** CSS property defines the orientation/direction of the element as it is positioned along the \`offset-path\`.
   *
   * **Syntax**: \`[ auto | reverse ] || <angle>\`
   *
   * **Initial value**: \`auto\`
   *
   * |         Chrome         | Firefox | Safari |  Edge  | IE  |
   * | :--------------------: | :-----: | :----: | :----: | :-: |
   * |         **56**         | **72**  |   No   | **79** | No  |
   * | 46 _(motion-rotation)_ |         |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset-rotate
   */
  motionRotation?: Property.OffsetRotate | undefined;
  /**
   * The **\`object-fit\`** CSS property sets how the content of a replaced element, such as an \`<img>\` or \`<video>\`, should be resized to fit its container.
   *
   * **Syntax**: \`fill | contain | cover | none | scale-down\`
   *
   * **Initial value**: \`fill\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **32** | **36**  | **10** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/object-fit
   */
  objectFit?: Property.ObjectFit | undefined;
  /**
   * The **\`object-position\`** CSS property specifies the alignment of the selected replaced element's contents within the element's box. Areas of the box which aren't covered by the replaced element's object will show the element's background.
   *
   * **Syntax**: \`<position>\`
   *
   * **Initial value**: \`50% 50%\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **32** | **36**  | **10** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/object-position
   */
  objectPosition?: Property.ObjectPosition<TLength> | undefined;
  /**
   * **Syntax**: \`auto | <position>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **79** | **72**  |   No   | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset-anchor
   */
  offsetAnchor?: Property.OffsetAnchor<TLength> | undefined;
  /**
   * The **\`offset-distance\`** CSS property specifies a position along an \`offset-path\` for an element to be placed.
   *
   * **Syntax**: \`<length-percentage>\`
   *
   * **Initial value**: \`0\`
   *
   * |         Chrome         | Firefox | Safari |  Edge  | IE  |
   * | :--------------------: | :-----: | :----: | :----: | :-: |
   * |         **55**         | **72**  |   No   | **79** | No  |
   * | 46 _(motion-distance)_ |         |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset-distance
   */
  offsetDistance?: Property.OffsetDistance<TLength> | undefined;
  /**
   * The **\`offset-path\`** CSS property specifies a motion path for an element to follow and defines the element's positioning within the parent container or SVG coordinate system.
   *
   * **Syntax**: \`none | ray( [ <angle> && <size> && contain? ] ) | <path()> | <url> | [ <basic-shape> || <geometry-box> ]\`
   *
   * **Initial value**: \`none\`
   *
   * |       Chrome       | Firefox | Safari |  Edge  | IE  |
   * | :----------------: | :-----: | :----: | :----: | :-: |
   * |       **55**       | **72**  |   No   | **79** | No  |
   * | 46 _(motion-path)_ |         |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset-path
   */
  offsetPath?: Property.OffsetPath | undefined;
  /**
   * The **\`offset-rotate\`** CSS property defines the orientation/direction of the element as it is positioned along the \`offset-path\`.
   *
   * **Syntax**: \`[ auto | reverse ] || <angle>\`
   *
   * **Initial value**: \`auto\`
   *
   * |         Chrome         | Firefox | Safari |  Edge  | IE  |
   * | :--------------------: | :-----: | :----: | :----: | :-: |
   * |         **56**         | **72**  |   No   | **79** | No  |
   * | 46 _(motion-rotation)_ |         |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset-rotate
   */
  offsetRotate?: Property.OffsetRotate | undefined;
  /**
   * The **\`offset-rotate\`** CSS property defines the orientation/direction of the element as it is positioned along the \`offset-path\`.
   *
   * **Syntax**: \`[ auto | reverse ] || <angle>\`
   *
   * **Initial value**: \`auto\`
   *
   * |         Chrome         | Firefox | Safari |  Edge  | IE  |
   * | :--------------------: | :-----: | :----: | :----: | :-: |
   * |         **56**         | **72**  |   No   | **79** | No  |
   * | 46 _(motion-rotation)_ |         |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset-rotate
   */
  offsetRotation?: Property.OffsetRotate | undefined;
  /**
   * The **\`opacity\`** CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.
   *
   * **Syntax**: \`<alpha-value>\`
   *
   * **Initial value**: \`1.0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **2**  | **12** | **9** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/opacity
   */
  opacity?: Property.Opacity | undefined;
  /**
   * The **\`order\`** CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending \`order\` value and then by their source code order.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`0\`
   *
   * |  Chrome  | Firefox | Safari  |  Edge  |    IE    |
   * | :------: | :-----: | :-----: | :----: | :------: |
   * |  **29**  | **20**  |  **9**  | **12** |  **11**  |
   * | 21 _-x-_ |         | 7 _-x-_ |        | 10 _-x-_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/order
   */
  order?: Property.Order | undefined;
  /**
   * The **\`orphans\`** CSS property sets the minimum number of lines in a block container that must be shown at the _bottom_ of a page, region, or column.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`2\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **25** |   No    | **1.3** | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/orphans
   */
  orphans?: Property.Orphans | undefined;
  /**
   * The **\`outline-color\`** CSS property sets the color of an element's outline.
   *
   * **Syntax**: \`<color> | invert\`
   *
   * **Initial value**: \`invert\`, for browsers supporting it, \`currentColor\` for the other
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  | **1.5** | **1.2** | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/outline-color
   */
  outlineColor?: Property.OutlineColor | undefined;
  /**
   * The **\`outline-offset\`** CSS property sets the amount of space between an outline and the edge or border of an element.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari  |  Edge  | IE  |
   * | :----: | :-----: | :-----: | :----: | :-: |
   * | **1**  | **1.5** | **1.2** | **15** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/outline-offset
   */
  outlineOffset?: Property.OutlineOffset<TLength> | undefined;
  /**
   * The **\`outline-style\`** CSS property sets the style of an element's outline. An outline is a line that is drawn around an element, outside the \`border\`.
   *
   * **Syntax**: \`auto | <'border-style'>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  | **1.5** | **1.2** | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/outline-style
   */
  outlineStyle?: Property.OutlineStyle | undefined;
  /**
   * The CSS **\`outline-width\`** property sets the thickness of an element's outline. An outline is a line that is drawn around an element, outside the \`border\`.
   *
   * **Syntax**: \`<line-width>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  | **1.5** | **1.2** | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/outline-width
   */
  outlineWidth?: Property.OutlineWidth<TLength> | undefined;
  /**
   * **Syntax**: \`auto | none\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **56** | **66**  |   No   | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-anchor
   */
  overflowAnchor?: Property.OverflowAnchor | undefined;
  /**
   * **Syntax**: \`visible | hidden | clip | scroll | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   | **69**  |   No   |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-block
   */
  overflowBlock?: Property.OverflowBlock | undefined;
  /**
   * The **\`overflow-clip-box\`** CSS property specifies relative to which box the clipping happens when there is an overflow. It is short hand for the \`overflow-clip-box-inline\` and \`overflow-clip-box-block\` properties.
   *
   * **Syntax**: \`padding-box | content-box\`
   *
   * **Initial value**: \`padding-box\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   | **29**  |   No   |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Mozilla/Gecko/Chrome/CSS/overflow-clip-box
   */
  overflowClipBox?: Property.OverflowClipBox | undefined;
  /**
   * **Syntax**: \`<visual-box> || <length [0,\u221E]>\`
   *
   * **Initial value**: \`0px\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **90** |   No    |   No   | **90** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-clip-margin
   */
  overflowClipMargin?: Property.OverflowClipMargin<TLength> | undefined;
  /**
   * **Syntax**: \`visible | hidden | clip | scroll | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   | **69**  |   No   |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-inline
   */
  overflowInline?: Property.OverflowInline | undefined;
  /**
   * The \`**overflow-wrap**\` CSS property applies to inline elements, setting whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box.
   *
   * **Syntax**: \`normal | break-word | anywhere\`
   *
   * **Initial value**: \`normal\`
   *
   * |     Chrome      |      Firefox      |     Safari      |       Edge       |          IE           |
   * | :-------------: | :---------------: | :-------------: | :--------------: | :-------------------: |
   * |     **23**      |      **49**       |      **7**      |      **18**      | **5.5** _(word-wrap)_ |
   * | 1 _(word-wrap)_ | 3.5 _(word-wrap)_ | 1 _(word-wrap)_ | 12 _(word-wrap)_ |                       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-wrap
   */
  overflowWrap?: Property.OverflowWrap | undefined;
  /**
   * The **\`overflow-x\`** CSS property sets what shows when content overflows a block-level element's left and right edges. This may be nothing, a scroll bar, or the overflow content.
   *
   * **Syntax**: \`visible | hidden | clip | scroll | auto\`
   *
   * **Initial value**: \`visible\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  | **3.5** | **3**  | **12** | **5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-x
   */
  overflowX?: Property.OverflowX | undefined;
  /**
   * The **\`overflow-y\`** CSS property sets what shows when content overflows a block-level element's top and bottom edges. This may be nothing, a scroll bar, or the overflow content.
   *
   * **Syntax**: \`visible | hidden | clip | scroll | auto\`
   *
   * **Initial value**: \`visible\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  | **3.5** | **3**  | **12** | **5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-y
   */
  overflowY?: Property.OverflowY | undefined;
  /**
   * The **\`overscroll-behavior-block\`**\xA0CSS property sets the browser's behavior when the block direction\xA0boundary of a scrolling area is reached.
   *
   * **Syntax**: \`contain | none | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **77** | **73**  |   No   | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-block
   */
  overscrollBehaviorBlock?: Property.OverscrollBehaviorBlock | undefined;
  /**
   * The **\`overscroll-behavior-inline\`**\xA0CSS property sets the browser's behavior when the inline\xA0direction\xA0boundary of a scrolling area is reached.
   *
   * **Syntax**: \`contain | none | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **77** | **73**  |   No   | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-inline
   */
  overscrollBehaviorInline?: Property.OverscrollBehaviorInline | undefined;
  /**
   * The **\`overscroll-behavior-x\`** CSS property sets the browser's behavior when the horizontal boundary of a scrolling area is reached.
   *
   * **Syntax**: \`contain | none | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **63** | **59**  |   No   | **18** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-x
   */
  overscrollBehaviorX?: Property.OverscrollBehaviorX | undefined;
  /**
   * The **\`overscroll-behavior-y\`** CSS property sets the browser's behavior when the vertical boundary of a scrolling area is reached.
   *
   * **Syntax**: \`contain | none | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **63** | **59**  |   No   | **18** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-y
   */
  overscrollBehaviorY?: Property.OverscrollBehaviorY | undefined;
  /**
   * The **\`padding-block\`** CSS shorthand property defines the logical block start and end padding of an element, which maps to physical padding properties depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-block
   */
  paddingBlock?: Property.PaddingBlock<TLength> | undefined;
  /**
   * The **\`padding-block-end\`** CSS property defines the logical block end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-block-end
   */
  paddingBlockEnd?: Property.PaddingBlockEnd<TLength> | undefined;
  /**
   * The **\`padding-block-start\`** CSS property defines the logical block start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-block-start
   */
  paddingBlockStart?: Property.PaddingBlockStart<TLength> | undefined;
  /**
   * The **\`padding-bottom\`** CSS property sets the height of the padding area on the bottom of an element.
   *
   * **Syntax**: \`<length> | <percentage>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-bottom
   */
  paddingBottom?: Property.PaddingBottom<TLength> | undefined;
  /**
   * The **\`padding-inline\`** CSS shorthand property defines the logical inline start and end padding of an element, which maps to physical padding properties depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-inline
   */
  paddingInline?: Property.PaddingInline<TLength> | undefined;
  /**
   * The **\`padding-inline-end\`** CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>\`
   *
   * **Initial value**: \`0\`
   *
   * |          Chrome           |        Firefox         |          Safari           |  Edge  | IE  |
   * | :-----------------------: | :--------------------: | :-----------------------: | :----: | :-: |
   * |          **69**           |         **41**         |         **12.1**          | **79** | No  |
   * | 2 _(-webkit-padding-end)_ | 3 _(-moz-padding-end)_ | 3 _(-webkit-padding-end)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-inline-end
   */
  paddingInlineEnd?: Property.PaddingInlineEnd<TLength> | undefined;
  /**
   * The **\`padding-inline-start\`** CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>\`
   *
   * **Initial value**: \`0\`
   *
   * |           Chrome            |         Firefox          |           Safari            |  Edge  | IE  |
   * | :-------------------------: | :----------------------: | :-------------------------: | :----: | :-: |
   * |           **69**            |          **41**          |          **12.1**           | **79** | No  |
   * | 2 _(-webkit-padding-start)_ | 3 _(-moz-padding-start)_ | 3 _(-webkit-padding-start)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-inline-start
   */
  paddingInlineStart?: Property.PaddingInlineStart<TLength> | undefined;
  /**
   * The **\`padding-left\`** CSS property sets the width of the padding area to the left of an element.
   *
   * **Syntax**: \`<length> | <percentage>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-left
   */
  paddingLeft?: Property.PaddingLeft<TLength> | undefined;
  /**
   * The **\`padding-right\`** CSS property sets the width of the padding area on the right of an element.
   *
   * **Syntax**: \`<length> | <percentage>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-right
   */
  paddingRight?: Property.PaddingRight<TLength> | undefined;
  /**
   * The **\`padding-top\`** CSS property sets the height of the padding area on the top of an element.
   *
   * **Syntax**: \`<length> | <percentage>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-top
   */
  paddingTop?: Property.PaddingTop<TLength> | undefined;
  /**
   * The **\`page-break-after\`** CSS property adjusts page breaks _after_ the current element.
   *
   * **Syntax**: \`auto | always | avoid | left | right | recto | verso\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  |  **1**  | **1.2** | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/page-break-after
   */
  pageBreakAfter?: Property.PageBreakAfter | undefined;
  /**
   * The **\`page-break-before\`** CSS property adjusts page breaks _before_ the current element.
   *
   * **Syntax**: \`auto | always | avoid | left | right | recto | verso\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  |  **1**  | **1.2** | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/page-break-before
   */
  pageBreakBefore?: Property.PageBreakBefore | undefined;
  /**
   * The **\`page-break-inside\`** CSS property adjusts page breaks _inside_ the current element.
   *
   * **Syntax**: \`auto | avoid\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  | **19**  | **1.3** | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/page-break-inside
   */
  pageBreakInside?: Property.PageBreakInside | undefined;
  /**
   * The **\`paint-order\`** CSS property lets you control the order in which the fill and stroke (and painting markers) of text content and shapes are drawn.
   *
   * **Syntax**: \`normal | [ fill || stroke || markers ]\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **35** | **60**  | **8**  | **17** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/paint-order
   */
  paintOrder?: Property.PaintOrder | undefined;
  /**
   * The **\`perspective\`** CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.
   *
   * **Syntax**: \`none | <length>\`
   *
   * **Initial value**: \`none\`
   *
   * |  Chrome  | Firefox  | Safari  |  Edge  |   IE   |
   * | :------: | :------: | :-----: | :----: | :----: |
   * |  **36**  |  **16**  |  **9**  | **12** | **10** |
   * | 12 _-x-_ | 10 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/perspective
   */
  perspective?: Property.Perspective<TLength> | undefined;
  /**
   * The **\`perspective-origin\`** CSS property determines the position at which the viewer is looking. It is used as the _vanishing point_ by the \`perspective\` property.
   *
   * **Syntax**: \`<position>\`
   *
   * **Initial value**: \`50% 50%\`
   *
   * |  Chrome  | Firefox  | Safari  |  Edge  |   IE   |
   * | :------: | :------: | :-----: | :----: | :----: |
   * |  **36**  |  **16**  |  **9**  | **12** | **10** |
   * | 12 _-x-_ | 10 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/perspective-origin
   */
  perspectiveOrigin?: Property.PerspectiveOrigin<TLength> | undefined;
  /**
   * The \`**place-content**\` CSS shorthand property allows you to align content along both the block and inline directions at once (i.e. the \`align-content\` and \`justify-content\` properties) in a relevant layout system such as Grid or Flexbox.
   *
   * **Syntax**: \`<'align-content'> <'justify-content'>?\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **59** | **45**  | **9**  | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/place-content
   */
  placeContent?: Property.PlaceContent | undefined;
  /**
   * The **\`pointer-events\`** CSS property sets under what circumstances (if any) a particular graphic element can become the target of pointer events.
   *
   * **Syntax**: \`auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | inherit\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **1**  | **1.5** | **4**  | **12** | **11** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/pointer-events
   */
  pointerEvents?: Property.PointerEvents | undefined;
  /**
   * The **\`position\`** CSS property sets how an element is positioned in a document. The \`top\`, \`right\`, \`bottom\`, and \`left\` properties determine the final location of positioned elements.
   *
   * **Syntax**: \`static | relative | absolute | sticky | fixed\`
   *
   * **Initial value**: \`static\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/position
   */
  position?: Property.Position | undefined;
  /**
   * The **\`quotes\`** CSS property sets how the browser should render quotation marks that are added using the \`open-quotes\` or \`close-quotes\` values of the CSS \`content\` property.
   *
   * **Syntax**: \`none | auto | [ <string> <string> ]+\`
   *
   * **Initial value**: depends on user agent
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **11** | **1.5** | **9**  | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/quotes
   */
  quotes?: Property.Quotes | undefined;
  /**
   * The **\`resize\`** CSS property sets whether an element is resizable, and if so, in which directions.
   *
   * **Syntax**: \`none | both | horizontal | vertical | block | inline\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **1**  |  **4**  | **3**  | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/resize
   */
  resize?: Property.Resize | undefined;
  /**
   * The **\`right\`** CSS property participates in specifying the horizontal position of a positioned element. It has no effect on non-positioned elements.
   *
   * **Syntax**: \`<length> | <percentage> | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/right
   */
  right?: Property.Right<TLength> | undefined;
  /**
   * The **\`rotate\`** CSS property allows you to specify rotation transforms individually and independently of the \`transform\` property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the \`transform\` property.
   *
   * **Syntax**: \`none | <angle> | [ x | y | z | <number>{3} ] && <angle>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  | Edge | IE  |
   * | :----: | :-----: | :------: | :--: | :-: |
   * |   No   | **72**  | **14.1** |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/rotate
   */
  rotate?: Property.Rotate | undefined;
  /**
   * The **\`row-gap\`** CSS property sets the size of the gap (gutter) between an element's grid rows.
   *
   * **Syntax**: \`normal | <length-percentage>\`
   *
   * **Initial value**: \`normal\`
   *
   * ---
   *
   * _Supported in Flex Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **84** | **63**  | **14.1** | **84** | No  |
   *
   * ---
   *
   * _Supported in Grid Layout_
   *
   * |       Chrome        |       Firefox       |        Safari         |  Edge  | IE  |
   * | :-----------------: | :-----------------: | :-------------------: | :----: | :-: |
   * |       **66**        |       **61**        |        **12**         | **16** | No  |
   * | 57 _(grid-row-gap)_ | 52 _(grid-row-gap)_ | 10.1 _(grid-row-gap)_ |        |     |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/row-gap
   */
  rowGap?: Property.RowGap<TLength> | undefined;
  /**
   * The \`**ruby-align**\` CSS property defines the distribution of the different ruby elements over the base.
   *
   * **Syntax**: \`start | center | space-between | space-around\`
   *
   * **Initial value**: \`space-around\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   | **38**  |   No   |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/ruby-align
   */
  rubyAlign?: Property.RubyAlign | undefined;
  /**
   * **Syntax**: \`separate | collapse | auto\`
   *
   * **Initial value**: \`separate\`
   */
  rubyMerge?: Property.RubyMerge | undefined;
  /**
   * The \`**ruby-position**\` CSS property defines the position of a ruby element relatives to its base element. It can be position over the element (\`over\`), under it (\`under\`), or between the characters, on their right side (\`inter-character\`).
   *
   * **Syntax**: \`[ alternate || [ over | under ] ] | inter-character\`
   *
   * **Initial value**: \`alternate\`
   *
   * | Chrome  | Firefox |    Safari     | Edge  | IE  |
   * | :-----: | :-----: | :-----------: | :---: | :-: |
   * | **84**  | **38**  | **6.1** _-x-_ | 12-79 | No  |
   * | 1 _-x-_ |         |               |       |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/ruby-position
   */
  rubyPosition?: Property.RubyPosition | undefined;
  /**
   * The **\`scale\`** CSS property allows you to specify scale transforms individually and independently of the \`transform\` property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the \`transform\` value.
   *
   * **Syntax**: \`none | <number>{1,3}\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  | Edge | IE  |
   * | :----: | :-----: | :------: | :--: | :-: |
   * |   No   | **72**  | **14.1** |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scale
   */
  scale?: Property.Scale | undefined;
  /**
   * The **\`scroll-behavior\`** CSS property sets the behavior for a scrolling box when scrolling is triggered by the navigation or CSSOM scrolling APIs.
   *
   * **Syntax**: \`auto | smooth\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **61** | **36**  |  n/a   | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-behavior
   */
  scrollBehavior?: Property.ScrollBehavior | undefined;
  /**
   * The **\`scroll-margin\`** shorthand property sets all of the scroll margins of an element at once, assigning values much like the \`margin\` property does for margins of an element.
   *
   * **Syntax**: \`<length>{1,4}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |          Safari           |  Edge  | IE  |
   * | :----: | :-----: | :-----------------------: | :----: | :-: |
   * | **69** | **90**  |         **14.1**          | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin
   */
  scrollMargin?: Property.ScrollMargin<TLength> | undefined;
  /**
   * The \`scroll-margin-block\` shorthand property sets the scroll margins of an element in the block dimension.
   *
   * **Syntax**: \`<length>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block
   */
  scrollMarginBlock?: Property.ScrollMarginBlock<TLength> | undefined;
  /**
   * The \`scroll-margin-block-end\`\xA0property defines the\xA0margin of the scroll snap area at the end\xA0of the block dimension\xA0that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-end
   */
  scrollMarginBlockEnd?: Property.ScrollMarginBlockEnd<TLength> | undefined;
  /**
   * The \`scroll-margin-block-start\`\xA0property defines the\xA0margin of the scroll snap area at the start of the block dimension\xA0that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-start
   */
  scrollMarginBlockStart?: Property.ScrollMarginBlockStart<TLength> | undefined;
  /**
   * The \`scroll-margin-bottom\` property defines the bottom margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |              Safari              |  Edge  | IE  |
   * | :----: | :-----: | :------------------------------: | :----: | :-: |
   * | **69** | **68**  |             **14.1**             | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin-bottom)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-bottom
   */
  scrollMarginBottom?: Property.ScrollMarginBottom<TLength> | undefined;
  /**
   * The \`scroll-margin-inline\` shorthand property sets the scroll margins of an element in the inline dimension.
   *
   * **Syntax**: \`<length>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline
   */
  scrollMarginInline?: Property.ScrollMarginInline<TLength> | undefined;
  /**
   * The \`scroll-margin-inline-end\`\xA0property defines the\xA0margin of the scroll snap area at the end\xA0of the inline\xA0dimension\xA0that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-end
   */
  scrollMarginInlineEnd?: Property.ScrollMarginInlineEnd<TLength> | undefined;
  /**
   * The \`scroll-margin-inline-start\` property defines the margin of the scroll snap area at the start of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-start
   */
  scrollMarginInlineStart?: Property.ScrollMarginInlineStart<TLength> | undefined;
  /**
   * The \`scroll-margin-left\` property defines the left margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |             Safari             |  Edge  | IE  |
   * | :----: | :-----: | :----------------------------: | :----: | :-: |
   * | **69** | **68**  |            **14.1**            | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin-left)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-left
   */
  scrollMarginLeft?: Property.ScrollMarginLeft<TLength> | undefined;
  /**
   * The \`scroll-margin-right\` property defines the right margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |             Safari              |  Edge  | IE  |
   * | :----: | :-----: | :-----------------------------: | :----: | :-: |
   * | **69** | **68**  |            **14.1**             | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin-right)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-right
   */
  scrollMarginRight?: Property.ScrollMarginRight<TLength> | undefined;
  /**
   * The \`scroll-margin-top\` property defines the top margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |            Safari             |  Edge  | IE  |
   * | :----: | :-----: | :---------------------------: | :----: | :-: |
   * | **69** | **68**  |           **14.1**            | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin-top)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-top
   */
  scrollMarginTop?: Property.ScrollMarginTop<TLength> | undefined;
  /**
   * The **\`scroll-padding\`** shorthand property sets scroll padding on all sides of an element at once, much like the \`padding\` property does for padding on an element.
   *
   * **Syntax**: \`[ auto | <length-percentage> ]{1,4}\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding
   */
  scrollPadding?: Property.ScrollPadding<TLength> | undefined;
  /**
   * The \`scroll-padding-block\` shorthand property sets the scroll padding of an element in the block dimension.
   *
   * **Syntax**: \`[ auto | <length-percentage> ]{1,2}\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **69** | **68**  | **15** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block
   */
  scrollPaddingBlock?: Property.ScrollPaddingBlock<TLength> | undefined;
  /**
   * The \`scroll-padding-block-end\` property defines offsets for the end edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.
   *
   * **Syntax**: \`auto | <length-percentage>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **69** | **68**  | **15** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-end
   */
  scrollPaddingBlockEnd?: Property.ScrollPaddingBlockEnd<TLength> | undefined;
  /**
   * The \`scroll-padding-block-start\` property defines offsets for the start edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.
   *
   * **Syntax**: \`auto | <length-percentage>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **69** | **68**  | **15** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-start
   */
  scrollPaddingBlockStart?: Property.ScrollPaddingBlockStart<TLength> | undefined;
  /**
   * The \`scroll-padding-bottom\` property defines offsets for the bottom of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.
   *
   * **Syntax**: \`auto | <length-percentage>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-bottom
   */
  scrollPaddingBottom?: Property.ScrollPaddingBottom<TLength> | undefined;
  /**
   * The \`scroll-padding-inline\` shorthand property sets the scroll padding of an element in the inline dimension.
   *
   * **Syntax**: \`[ auto | <length-percentage> ]{1,2}\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **69** | **68**  | **15** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline
   */
  scrollPaddingInline?: Property.ScrollPaddingInline<TLength> | undefined;
  /**
   * The \`scroll-padding-inline-end\`\xA0property\xA0defines offsets for the end\xA0edge in the inline\xA0dimension\xA0of the\xA0optimal viewing region\xA0of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.
   *
   * **Syntax**: \`auto | <length-percentage>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **69** | **68**  | **15** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-end
   */
  scrollPaddingInlineEnd?: Property.ScrollPaddingInlineEnd<TLength> | undefined;
  /**
   * The \`scroll-padding-inline-start\` property defines offsets for the start edge in the inline dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.
   *
   * **Syntax**: \`auto | <length-percentage>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **69** | **68**  | **15** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-start
   */
  scrollPaddingInlineStart?: Property.ScrollPaddingInlineStart<TLength> | undefined;
  /**
   * The \`scroll-padding-left\` property defines offsets for the left of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.
   *
   * **Syntax**: \`auto | <length-percentage>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-left
   */
  scrollPaddingLeft?: Property.ScrollPaddingLeft<TLength> | undefined;
  /**
   * The \`scroll-padding-right\`\xA0property\xA0defines offsets for the right\xA0of the\xA0optimal viewing region\xA0of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.
   *
   * **Syntax**: \`auto | <length-percentage>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-right
   */
  scrollPaddingRight?: Property.ScrollPaddingRight<TLength> | undefined;
  /**
   * The **\`scroll-padding-top\`** property\xA0defines offsets for the top of the\xA0optimal viewing region\xA0of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.
   *
   * **Syntax**: \`auto | <length-percentage>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-top
   */
  scrollPaddingTop?: Property.ScrollPaddingTop<TLength> | undefined;
  /**
   * The \`scroll-snap-align\` property specifies the box\u2019s snap position as an alignment of its snap area (as the alignment subject) within its snap container\u2019s snapport (as the alignment container). The two values specify the snapping alignment in the block axis and inline axis, respectively. If only one value is specified, the second value defaults to the same value.
   *
   * **Syntax**: \`[ none | start | end | center ]{1,2}\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **69** | **68**  | **11** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-snap-align
   */
  scrollSnapAlign?: Property.ScrollSnapAlign | undefined;
  /**
   * The **\`scroll-margin\`** shorthand property sets all of the scroll margins of an element at once, assigning values much like the \`margin\` property does for margins of an element.
   *
   * **Syntax**: \`<length>{1,4}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |          Safari           |  Edge  | IE  |
   * | :----: | :-----: | :-----------------------: | :----: | :-: |
   * | **69** |  68-90  |         **14.1**          | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin
   */
  scrollSnapMargin?: Property.ScrollMargin<TLength> | undefined;
  /**
   * The \`scroll-margin-bottom\` property defines the bottom margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |              Safari              |  Edge  | IE  |
   * | :----: | :-----: | :------------------------------: | :----: | :-: |
   * | **69** | **68**  |             **14.1**             | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin-bottom)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-bottom
   */
  scrollSnapMarginBottom?: Property.ScrollMarginBottom<TLength> | undefined;
  /**
   * The \`scroll-margin-left\` property defines the left margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |             Safari             |  Edge  | IE  |
   * | :----: | :-----: | :----------------------------: | :----: | :-: |
   * | **69** | **68**  |            **14.1**            | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin-left)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-left
   */
  scrollSnapMarginLeft?: Property.ScrollMarginLeft<TLength> | undefined;
  /**
   * The \`scroll-margin-right\` property defines the right margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |             Safari              |  Edge  | IE  |
   * | :----: | :-----: | :-----------------------------: | :----: | :-: |
   * | **69** | **68**  |            **14.1**             | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin-right)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-right
   */
  scrollSnapMarginRight?: Property.ScrollMarginRight<TLength> | undefined;
  /**
   * The \`scroll-margin-top\` property defines the top margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |            Safari             |  Edge  | IE  |
   * | :----: | :-----: | :---------------------------: | :----: | :-: |
   * | **69** | **68**  |           **14.1**            | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin-top)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-top
   */
  scrollSnapMarginTop?: Property.ScrollMarginTop<TLength> | undefined;
  /**
   * The **\`scroll-snap-stop\`** CSS property defines whether the scroll container is allowed to "pass over" possible snap positions.
   *
   * **Syntax**: \`normal | always\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **75** |   No    | **15** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-snap-stop
   */
  scrollSnapStop?: Property.ScrollSnapStop | undefined;
  /**
   * The **\`scroll-snap-type\`** CSS property sets how strictly snap points are enforced on the scroll container in case there is one.
   *
   * **Syntax**: \`none | [ x | y | block | inline | both ] [ mandatory | proximity ]?\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |      IE      |
   * | :----: | :-----: | :-----: | :----: | :----------: |
   * | **69** |  39-68  | **11**  | **79** | **10** _-x-_ |
   * |        |         | 9 _-x-_ |        |              |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-snap-type
   */
  scrollSnapType?: Property.ScrollSnapType | undefined;
  /**
   * The **\`scrollbar-color\`** CSS property sets the color of the scrollbar track and thumb.
   *
   * **Syntax**: \`auto | <color>{2}\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   | **64**  |   No   |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scrollbar-color
   */
  scrollbarColor?: Property.ScrollbarColor | undefined;
  /**
   * The **\`scrollbar-gutter\`** CSS property allows authors to reserve space for the scrollbar, preventing unwanted layout changes as the content grows while also avoiding unnecessary visuals when scrolling isn't needed.
   *
   * **Syntax**: \`auto | stable && both-edges?\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **94** |   No    |   No   | **94** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scrollbar-gutter
   */
  scrollbarGutter?: Property.ScrollbarGutter | undefined;
  /**
   * The **\`scrollbar-width\`** property allows the author to set the maximum thickness of an element\u2019s scrollbars when they are shown.
   *
   * **Syntax**: \`auto | thin | none\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   | **64**  |   No   |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scrollbar-width
   */
  scrollbarWidth?: Property.ScrollbarWidth | undefined;
  /**
   * The **\`shape-image-threshold\`** CSS property sets the alpha channel threshold used to extract the shape using an image as the value for \`shape-outside\`.
   *
   * **Syntax**: \`<alpha-value>\`
   *
   * **Initial value**: \`0.0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **37** | **62**  | **10.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/shape-image-threshold
   */
  shapeImageThreshold?: Property.ShapeImageThreshold | undefined;
  /**
   * The **\`shape-margin\`** CSS property sets a margin for a CSS shape created using \`shape-outside\`.
   *
   * **Syntax**: \`<length-percentage>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **37** | **62**  | **10.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/shape-margin
   */
  shapeMargin?: Property.ShapeMargin<TLength> | undefined;
  /**
   * The **\`shape-outside\`** CSS property defines a shape\u2014which may be non-rectangular\u2014around which adjacent inline content should wrap. By default, inline content wraps around its margin box; \`shape-outside\` provides a way to customize this wrapping, making it possible to wrap text around complex objects rather than simple boxes.
   *
   * **Syntax**: \`none | [ <shape-box> || <basic-shape> ] | <image>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **37** | **62**  | **10.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/shape-outside
   */
  shapeOutside?: Property.ShapeOutside | undefined;
  /**
   * The **\`tab-size\`** CSS property is used to customize the width of tab characters (U+0009).
   *
   * **Syntax**: \`<integer> | <length>\`
   *
   * **Initial value**: \`8\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **21** | **91**  | **7**  | **79** | No  |
   * |        | 4 _-x-_ |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/tab-size
   */
  tabSize?: Property.TabSize<TLength> | undefined;
  /**
   * The **\`table-layout\`** CSS property sets the algorithm used to lay out \`<table>\` cells, rows, and columns.
   *
   * **Syntax**: \`auto | fixed\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **14** |  **1**  | **1**  | **12** | **5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/table-layout
   */
  tableLayout?: Property.TableLayout | undefined;
  /**
   * The **\`text-align\`** CSS property sets the horizontal alignment of a\xA0block element or table-cell box. This means it works like \`vertical-align\` but in the horizontal direction.
   *
   * **Syntax**: \`start | end | left | right | center | justify | match-parent\`
   *
   * **Initial value**: \`start\`, or a nameless value that acts as \`left\` if _direction_ is \`ltr\`, \`right\` if _direction_ is \`rtl\` if \`start\` is not supported by the browser.
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-align
   */
  textAlign?: Property.TextAlign | undefined;
  /**
   * The **\`text-align-last\`** CSS property sets how the last line of a block or a line, right before a forced line break, is aligned.
   *
   * **Syntax**: \`auto | start | end | left | right | center | justify\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **47** | **49**  |   No   | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-align-last
   */
  textAlignLast?: Property.TextAlignLast | undefined;
  /**
   * The **\`text-combine-upright\`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.
   *
   * **Syntax**: \`none | all | [ digits <integer>? ]\`
   *
   * **Initial value**: \`none\`
   *
   * |           Chrome           | Firefox |              Safari              | Edge  |                   IE                   |
   * | :------------------------: | :-----: | :------------------------------: | :---: | :------------------------------------: |
   * |           **48**           | **48**  | **5.1** _(-webkit-text-combine)_ | 15-79 | **11** _(-ms-text-combine-horizontal)_ |
   * | 9 _(-webkit-text-combine)_ |         |                                  |       |                                        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-combine-upright
   */
  textCombineUpright?: Property.TextCombineUpright | undefined;
  /**
   * The **\`text-decoration-color\`** CSS property sets the color of decorations added to text by \`text-decoration-line\`.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **36**  | **12.1** | **79** | No  |
   * |        |         | 8 _-x-_  |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-color
   */
  textDecorationColor?: Property.TextDecorationColor | undefined;
  /**
   * The **\`text-decoration-line\`** CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline.
   *
   * **Syntax**: \`none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **36**  | **12.1** | **79** | No  |
   * |        |         | 8 _-x-_  |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-line
   */
  textDecorationLine?: Property.TextDecorationLine | undefined;
  /**
   * The **\`text-decoration-skip\`** CSS property sets what parts of an element\u2019s content any text decoration affecting the element must skip over. It controls all text decoration lines drawn by the element and also any text decoration lines drawn by its ancestors.
   *
   * **Syntax**: \`none | [ objects || [ spaces | [ leading-spaces || trailing-spaces ] ] || edges || box-decoration ]\`
   *
   * **Initial value**: \`objects\`
   *
   * | Chrome | Firefox |  Safari  | Edge | IE  |
   * | :----: | :-----: | :------: | :--: | :-: |
   * | 57-64  |   No    | **12.1** |  No  | No  |
   * |        |         | 7 _-x-_  |      |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-skip
   */
  textDecorationSkip?: Property.TextDecorationSkip | undefined;
  /**
   * The **\`text-decoration-skip-ink\`** CSS property specifies how overlines and underlines are drawn when they pass over glyph ascenders and descenders.
   *
   * **Syntax**: \`auto | all | none\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **64** | **70**  |   No   | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-skip-ink
   */
  textDecorationSkipInk?: Property.TextDecorationSkipInk | undefined;
  /**
   * The **\`text-decoration-style\`** CSS property sets the style of the lines specified by \`text-decoration-line\`. The style applies to all lines that are set with \`text-decoration-line\`.
   *
   * **Syntax**: \`solid | double | dotted | dashed | wavy\`
   *
   * **Initial value**: \`solid\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **36**  | **12.1** | **79** | No  |
   * |        |         | 8 _-x-_  |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-style
   */
  textDecorationStyle?: Property.TextDecorationStyle | undefined;
  /**
   * The **\`text-decoration-thickness\`** CSS property sets the stroke thickness of the decoration line that is used on text in an element, such as a line-through, underline, or overline.
   *
   * **Syntax**: \`auto | from-font | <length> | <percentage> \`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **89** | **70**  | **12.1** | **89** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-thickness
   */
  textDecorationThickness?: Property.TextDecorationThickness<TLength> | undefined;
  /**
   * The **\`text-decoration-thickness\`** CSS property sets the stroke thickness of the decoration line that is used on text in an element, such as a line-through, underline, or overline.
   *
   * **Syntax**: \`auto | from-font | <length> | <percentage> \`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  | Edge  | IE  |
   * | :----: | :-----: | :------: | :---: | :-: |
   * | 87-89  | **70**  | **12.1** | 87-89 | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-thickness
   */
  textDecorationWidth?: Property.TextDecorationThickness<TLength> | undefined;
  /**
   * The **\`text-emphasis-color\`** CSS property sets the color of emphasis marks. This value can also be set using the \`text-emphasis\` shorthand.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * |    Chrome    | Firefox | Safari |     Edge     | IE  |
   * | :----------: | :-----: | :----: | :----------: | :-: |
   * | **25** _-x-_ | **46**  | **7**  | **79** _-x-_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-emphasis-color
   */
  textEmphasisColor?: Property.TextEmphasisColor | undefined;
  /**
   * The **\`text-emphasis-position\`** CSS property sets where emphasis marks are drawn. Like ruby text, if there isn't enough room for emphasis marks, the line height is increased.
   *
   * **Syntax**: \`[ over | under ] && [ right | left ]\`
   *
   * **Initial value**: \`over right\`
   *
   * |    Chrome    | Firefox | Safari |     Edge     | IE  |
   * | :----------: | :-----: | :----: | :----------: | :-: |
   * | **25** _-x-_ | **46**  | **7**  | **79** _-x-_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-emphasis-position
   */
  textEmphasisPosition?: Property.TextEmphasisPosition | undefined;
  /**
   * The **\`text-emphasis-style\`** CSS property sets the appearance of emphasis marks. It can also be set, and reset, using the \`text-emphasis\` shorthand.
   *
   * **Syntax**: \`none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>\`
   *
   * **Initial value**: \`none\`
   *
   * |    Chrome    | Firefox | Safari |     Edge     | IE  |
   * | :----------: | :-----: | :----: | :----------: | :-: |
   * | **25** _-x-_ | **46**  | **7**  | **79** _-x-_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-emphasis-style
   */
  textEmphasisStyle?: Property.TextEmphasisStyle | undefined;
  /**
   * The **\`text-indent\`** CSS property sets the length of empty space (indentation) that is put before lines of text in a block.
   *
   * **Syntax**: \`<length-percentage> && hanging? && each-line?\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-indent
   */
  textIndent?: Property.TextIndent<TLength> | undefined;
  /**
   * The **\`text-justify\`** CSS property sets what type of justification should be applied to text when \`text-align\`\`: justify;\` is set on an element.
   *
   * **Syntax**: \`auto | inter-character | inter-word | none\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * |  n/a   | **55**  |   No   | **12** | **11** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-justify
   */
  textJustify?: Property.TextJustify | undefined;
  /**
   * The **\`text-orientation\`** CSS property sets the orientation of the text characters in a line. It only affects text in vertical mode (when \`writing-mode\` is not \`horizontal-tb\`). It is useful for controlling the display of languages that use vertical script, and also for making vertical table headers.
   *
   * **Syntax**: \`mixed | upright | sideways\`
   *
   * **Initial value**: \`mixed\`
   *
   * |  Chrome  | Firefox |  Safari   |  Edge  | IE  |
   * | :------: | :-----: | :-------: | :----: | :-: |
   * |  **48**  | **41**  |  **14**   | **79** | No  |
   * | 11 _-x-_ |         | 5.1 _-x-_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-orientation
   */
  textOrientation?: Property.TextOrientation | undefined;
  /**
   * The **\`text-overflow\`** CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis ('\`\u2026\`'), or display a custom string.
   *
   * **Syntax**: \`[ clip | ellipsis | <string> ]{1,2}\`
   *
   * **Initial value**: \`clip\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  |  **7**  | **1.3** | **12** | **6** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-overflow
   */
  textOverflow?: Property.TextOverflow | undefined;
  /**
   * The **\`text-rendering\`** CSS property provides information to the rendering engine about what to optimize for when rendering text.
   *
   * **Syntax**: \`auto | optimizeSpeed | optimizeLegibility | geometricPrecision\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **4**  |  **1**  | **5**  | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-rendering
   */
  textRendering?: Property.TextRendering | undefined;
  /**
   * The **\`text-shadow\`** CSS property adds shadows to text. It accepts a comma-separated list of shadows to be applied to the text and any of its \`decorations\`. Each shadow is described by some combination of X and Y offsets from the element, blur radius, and color.
   *
   * **Syntax**: \`none | <shadow-t>#\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |   IE   |
   * | :----: | :-----: | :-----: | :----: | :----: |
   * | **2**  | **3.5** | **1.1** | **12** | **10** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-shadow
   */
  textShadow?: Property.TextShadow | undefined;
  /**
   * The **\`text-size-adjust\`** CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.
   *
   * **Syntax**: \`none | auto | <percentage>\`
   *
   * **Initial value**: \`auto\` for smartphone browsers supporting inflation, \`none\` in other cases (and then not modifiable).
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **54** |   No    |   No   | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-size-adjust
   */
  textSizeAdjust?: Property.TextSizeAdjust | undefined;
  /**
   * The **\`text-transform\`** CSS property specifies how to capitalize an element's text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized. It also can help improve legibility for ruby.
   *
   * **Syntax**: \`none | capitalize | uppercase | lowercase | full-width | full-size-kana\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-transform
   */
  textTransform?: Property.TextTransform | undefined;
  /**
   * The **\`text-underline-offset\`** CSS property sets the offset distance of an underline text decoration line (applied using \`text-decoration\`) from its original position.
   *
   * **Syntax**: \`auto | <length> | <percentage> \`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **70**  | **12.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-underline-offset
   */
  textUnderlineOffset?: Property.TextUnderlineOffset<TLength> | undefined;
  /**
   * The **\`text-underline-position\`** CSS property specifies the position of the underline which is set using the \`text-decoration\` property's \`underline\` value.
   *
   * **Syntax**: \`auto | from-font | [ under || [ left | right ] ]\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :------: | :----: | :---: |
   * | **33** | **74**  | **12.1** | **12** | **6** |
   * |        |         | 9 _-x-_  |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-underline-position
   */
  textUnderlinePosition?: Property.TextUnderlinePosition | undefined;
  /**
   * The **\`top\`** CSS property participates in specifying the vertical position of a positioned element. It has no effect on non-positioned elements.
   *
   * **Syntax**: \`<length> | <percentage> | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/top
   */
  top?: Property.Top<TLength> | undefined;
  /**
   * The **\`touch-action\`** CSS property sets how an element's region can be manipulated by a touchscreen user (for example, by zooming features built into the browser).
   *
   * **Syntax**: \`auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |    IE    |
   * | :----: | :-----: | :----: | :----: | :------: |
   * | **36** | **52**  | **13** | **12** |  **11**  |
   * |        |         |        |        | 10 _-x-_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/touch-action
   */
  touchAction?: Property.TouchAction | undefined;
  /**
   * The **\`transform\`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.
   *
   * **Syntax**: \`none | <transform-list>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome  | Firefox |  Safari   |  Edge  |   IE    |
   * | :-----: | :-----: | :-------: | :----: | :-----: |
   * | **36**  | **16**  |   **9**   | **12** | **10**  |
   * | 1 _-x-_ |         | 3.1 _-x-_ |        | 9 _-x-_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/transform
   */
  transform?: Property.Transform | undefined;
  /**
   * The **\`transform-box\`** CSS property defines the layout box to which the \`transform\` and \`transform-origin\` properties relate.
   *
   * **Syntax**: \`content-box | border-box | fill-box | stroke-box | view-box\`
   *
   * **Initial value**: \`view-box\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **64** | **55**  | **11** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/transform-box
   */
  transformBox?: Property.TransformBox | undefined;
  /**
   * The **\`transform-origin\`** CSS property sets the origin for an element's transformations.
   *
   * **Syntax**: \`[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?\`
   *
   * **Initial value**: \`50% 50% 0\`
   *
   * | Chrome  |  Firefox  | Safari  |  Edge  |   IE    |
   * | :-----: | :-------: | :-----: | :----: | :-----: |
   * | **36**  |  **16**   |  **9**  | **12** | **10**  |
   * | 1 _-x-_ | 3.5 _-x-_ | 2 _-x-_ |        | 9 _-x-_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/transform-origin
   */
  transformOrigin?: Property.TransformOrigin<TLength> | undefined;
  /**
   * The **\`transform-style\`** CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element.
   *
   * **Syntax**: \`flat | preserve-3d\`
   *
   * **Initial value**: \`flat\`
   *
   * |  Chrome  | Firefox  | Safari  |  Edge  | IE  |
   * | :------: | :------: | :-----: | :----: | :-: |
   * |  **36**  |  **16**  |  **9**  | **12** | No  |
   * | 12 _-x-_ | 10 _-x-_ | 4 _-x-_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/transform-style
   */
  transformStyle?: Property.TransformStyle | undefined;
  /**
   * The **\`transition-delay\`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **26**  | **16**  |  **9**  | **12** | **10** |
   * | 1 _-x-_ | 4 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/transition-delay
   */
  transitionDelay?: Property.TransitionDelay<TTime> | undefined;
  /**
   * The **\`transition-duration\`** CSS property sets the length of time a transition animation should take to complete. By default, the value is \`0s\`, meaning that no animation will occur.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   *
   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |
   * | :-----: | :-----: | :-------: | :----: | :----: |
   * | **26**  | **16**  |   **9**   | **12** | **10** |
   * | 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/transition-duration
   */
  transitionDuration?: Property.TransitionDuration<TTime> | undefined;
  /**
   * The **\`transition-property\`** CSS property sets the CSS properties to which a transition effect should be applied.
   *
   * **Syntax**: \`none | <single-transition-property>#\`
   *
   * **Initial value**: all
   *
   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |
   * | :-----: | :-----: | :-------: | :----: | :----: |
   * | **26**  | **16**  |   **9**   | **12** | **10** |
   * | 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/transition-property
   */
  transitionProperty?: Property.TransitionProperty | undefined;
  /**
   * The **\`transition-timing-function\`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.
   *
   * **Syntax**: \`<easing-function>#\`
   *
   * **Initial value**: \`ease\`
   *
   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |
   * | :-----: | :-----: | :-------: | :----: | :----: |
   * | **26**  | **16**  |   **9**   | **12** | **10** |
   * | 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/transition-timing-function
   */
  transitionTimingFunction?: Property.TransitionTimingFunction | undefined;
  /**
   * The **\`translate\`** CSS property allows you to specify translation transforms individually and independently of the \`transform\` property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the \`transform\` value.
   *
   * **Syntax**: \`none | <length-percentage> [ <length-percentage> <length>? ]?\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  | Edge | IE  |
   * | :----: | :-----: | :------: | :--: | :-: |
   * |   No   | **72**  | **14.1** |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/translate
   */
  translate?: Property.Translate<TLength> | undefined;
  /**
   * The **\`unicode-bidi\`** CSS property, together with the \`direction\` property, determines how bidirectional text in a document is handled. For example, if a block of content contains both left-to-right and right-to-left text, the user-agent uses a complex Unicode algorithm to decide how to display the text. The \`unicode-bidi\` property overrides this algorithm and allows the developer to control the text embedding.
   *
   * **Syntax**: \`normal | embed | isolate | bidi-override | isolate-override | plaintext\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |   IE    |
   * | :----: | :-----: | :-----: | :----: | :-----: |
   * | **2**  |  **1**  | **1.3** | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/unicode-bidi
   */
  unicodeBidi?: Property.UnicodeBidi | undefined;
  /**
   * The \`**user-select**\` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.
   *
   * **Syntax**: \`auto | text | none | contain | all\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome  | Firefox |   Safari    |   Edge   |      IE      |
   * | :-----: | :-----: | :---------: | :------: | :----------: |
   * | **54**  | **69**  | **3** _-x-_ |  **79**  | **10** _-x-_ |
   * | 1 _-x-_ | 1 _-x-_ |             | 12 _-x-_ |              |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/user-select
   */
  userSelect?: Property.UserSelect | undefined;
  /**
   * The **\`vertical-align\`** CSS property sets vertical alignment of an inline, inline-block or table-cell box.
   *
   * **Syntax**: \`baseline | sub | super | text-top | text-bottom | middle | top | bottom | <percentage> | <length>\`
   *
   * **Initial value**: \`baseline\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/vertical-align
   */
  verticalAlign?: Property.VerticalAlign<TLength> | undefined;
  /**
   * The **\`visibility\`** CSS property shows or hides an element without changing the layout of a document. The property can also hide rows or columns in a \`<table>\`.
   *
   * **Syntax**: \`visible | hidden | collapse\`
   *
   * **Initial value**: \`visible\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/visibility
   */
  visibility?: Property.Visibility | undefined;
  /**
   * The **\`white-space\`** CSS property sets how white space inside an element is handled.
   *
   * **Syntax**: \`normal | pre | nowrap | pre-wrap | pre-line | break-spaces\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/white-space
   */
  whiteSpace?: Property.WhiteSpace | undefined;
  /**
   * The **\`widows\`** CSS property sets the minimum number of lines in a block container that must be shown at the _top_ of a page, region, or column.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`2\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **25** |   No    | **1.3** | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/widows
   */
  widows?: Property.Widows | undefined;
  /**
   * The **\`width\`** CSS property sets an element's width. By default, it sets the width of the content area, but if \`box-sizing\` is set to \`border-box\`, it sets the width of the border area.
   *
   * **Syntax**: \`auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/width
   */
  width?: Property.Width<TLength> | undefined;
  /**
   * The **\`will-change\`** CSS property hints to browsers how an element is expected to change. Browsers may set up optimizations before an element is actually changed. These kinds of optimizations can increase the responsiveness of a page by doing potentially expensive work before they are actually required.
   *
   * **Syntax**: \`auto | <animateable-feature>#\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari  |  Edge  | IE  |
   * | :----: | :-----: | :-----: | :----: | :-: |
   * | **36** | **36**  | **9.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/will-change
   */
  willChange?: Property.WillChange | undefined;
  /**
   * The **\`word-break\`** CSS property sets whether line breaks appear wherever the text would otherwise overflow its content box.
   *
   * **Syntax**: \`normal | break-all | keep-all | break-word\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  | **15**  | **3**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/word-break
   */
  wordBreak?: Property.WordBreak | undefined;
  /**
   * The **\`word-spacing\`** CSS property sets the length of space between words and between tags.
   *
   * **Syntax**: \`normal | <length>\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **6** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/word-spacing
   */
  wordSpacing?: Property.WordSpacing<TLength> | undefined;
  /**
   * The \`**overflow-wrap**\` CSS property applies to inline elements, setting whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box.
   *
   * **Syntax**: \`normal | break-word\`
   *
   * **Initial value**: \`normal\`
   */
  wordWrap?: Property.WordWrap | undefined;
  /**
   * The **\`writing-mode\`** CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (\`html\` element for HTML documents).
   *
   * **Syntax**: \`horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr\`
   *
   * **Initial value**: \`horizontal-tb\`
   *
   * | Chrome  | Firefox |  Safari   |  Edge  |  IE   |
   * | :-----: | :-----: | :-------: | :----: | :---: |
   * | **48**  | **41**  | **10.1**  | **12** | **9** |
   * | 8 _-x-_ |         | 5.1 _-x-_ |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/writing-mode
   */
  writingMode?: Property.WritingMode | undefined;
  /**
   * The **\`z-index\`** CSS property sets the z-order of a positioned element and its descendants or flex items. Overlapping elements with a larger z-index cover those with a smaller one.
   *
   * **Syntax**: \`auto | <integer>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/z-index
   */
  zIndex?: Property.ZIndex | undefined;
  /**
   * The non-standard **\`zoom\`** CSS property can be used to control the magnification level of an element. \`transform: scale()\` should be used instead of this property, if possible. However, unlike CSS Transforms, \`zoom\` affects the layout size of the element.
   *
   * **Syntax**: \`normal | reset | <number> | <percentage>\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |   IE    |
   * | :----: | :-----: | :-----: | :----: | :-----: |
   * | **1**  |   No    | **3.1** | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/zoom
   */
  zoom?: Property.Zoom | undefined;
}

export interface StandardShorthandProperties<TLength = (string & {}) | 0, TTime = string & {}> {
  /**
   * The \`**all**\` shorthand CSS property resets all of an element's properties except \`unicode-bidi\`, \`direction\`, and CSS Custom Properties. It can set properties to their initial or inherited values, or to the values specified in another stylesheet origin.
   *
   * **Syntax**: \`initial | inherit | unset | revert\`
   *
   * **Initial value**: There is no practical initial value for it.
   *
   * | Chrome | Firefox | Safari  |  Edge  | IE  |
   * | :----: | :-----: | :-----: | :----: | :-: |
   * | **37** | **27**  | **9.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/all
   */
  all?: Property.All | undefined;
  /**
   * The **\`animation\`** shorthand CSS property applies an animation between styles. It is a shorthand for \`animation-name\`, \`animation-duration\`, \`animation-timing-function\`, \`animation-delay\`, \`animation-iteration-count\`, \`animation-direction\`, \`animation-fill-mode\`, and \`animation-play-state\`.
   *
   * **Syntax**: \`<single-animation>#\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **43**  | **16**  |  **9**  | **12** | **10** |
   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/animation
   */
  animation?: Property.Animation<TTime> | undefined;
  /**
   * The **\`background\`** shorthand CSS property sets all background style properties at once, such as color, image, origin and size, or repeat method.
   *
   * **Syntax**: \`[ <bg-layer> , ]* <final-bg-layer>\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background
   */
  background?: Property.Background<TLength> | undefined;
  /**
   * The **\`background-position\`** CSS property sets the initial position for each background image. The position is relative to the position layer set by \`background-origin\`.
   *
   * **Syntax**: \`<bg-position>#\`
   *
   * **Initial value**: \`0% 0%\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-position
   */
  backgroundPosition?: Property.BackgroundPosition<TLength> | undefined;
  /**
   * The **\`border\`** shorthand CSS property sets an element's border. It sets the values of \`border-width\`, \`border-style\`, and \`border-color\`.
   *
   * **Syntax**: \`<line-width> || <line-style> || <color>\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border
   */
  border?: Property.Border<TLength> | undefined;
  /**
   * The **\`border-block\`** CSS property is a shorthand property for setting the individual logical block border property values in a single place in the style sheet.
   *
   * **Syntax**: \`<'border-top-width'> || <'border-top-style'> || <color>\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block
   */
  borderBlock?: Property.BorderBlock<TLength> | undefined;
  /**
   * The **\`border-block-end\`** CSS property is a shorthand property for setting the individual logical block-end border property values in a single place in the style sheet.
   *
   * **Syntax**: \`<'border-top-width'> || <'border-top-style'> || <color>\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-end
   */
  borderBlockEnd?: Property.BorderBlockEnd<TLength> | undefined;
  /**
   * The **\`border-block-start\`** CSS property is a shorthand property for setting the individual logical block-start border property values in a single place in the style sheet.
   *
   * **Syntax**: \`<'border-top-width'> || <'border-top-style'> || <color>\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-start
   */
  borderBlockStart?: Property.BorderBlockStart<TLength> | undefined;
  /**
   * The **\`border-bottom\`** shorthand CSS property sets an element's bottom border. It sets the values of \`border-bottom-width\`, \`border-bottom-style\` and \`border-bottom-color\`.
   *
   * **Syntax**: \`<line-width> || <line-style> || <color>\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom
   */
  borderBottom?: Property.BorderBottom<TLength> | undefined;
  /**
   * The **\`border-color\`** shorthand CSS property sets the color of an element's border.
   *
   * **Syntax**: \`<color>{1,4}\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-color
   */
  borderColor?: Property.BorderColor | undefined;
  /**
   * The **\`border-image\`** CSS property draws an image around a given element. It replaces the element's regular border.
   *
   * **Syntax**: \`<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>\`
   *
   * | Chrome  |  Firefox  | Safari  |  Edge  |   IE   |
   * | :-----: | :-------: | :-----: | :----: | :----: |
   * | **16**  |  **15**   |  **6**  | **12** | **11** |
   * | 7 _-x-_ | 3.5 _-x-_ | 3 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-image
   */
  borderImage?: Property.BorderImage | undefined;
  /**
   * The **\`border-inline\`** CSS property is a shorthand property for setting the individual logical inline border property values in a single place in the style sheet.
   *
   * **Syntax**: \`<'border-top-width'> || <'border-top-style'> || <color>\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline
   */
  borderInline?: Property.BorderInline<TLength> | undefined;
  /**
   * The **\`border-inline-end\`** CSS property is a shorthand property for setting the individual logical inline-end border property values in a single place in the style sheet.
   *
   * **Syntax**: \`<'border-top-width'> || <'border-top-style'> || <color>\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-end
   */
  borderInlineEnd?: Property.BorderInlineEnd<TLength> | undefined;
  /**
   * The **\`border-inline-start\`** CSS property is a shorthand property for setting the individual logical inline-start border property values in a single place in the style sheet.
   *
   * **Syntax**: \`<'border-top-width'> || <'border-top-style'> || <color>\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-start
   */
  borderInlineStart?: Property.BorderInlineStart<TLength> | undefined;
  /**
   * The **\`border-left\`** shorthand CSS property sets all the properties of an element's left border.
   *
   * **Syntax**: \`<line-width> || <line-style> || <color>\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-left
   */
  borderLeft?: Property.BorderLeft<TLength> | undefined;
  /**
   * The **\`border-radius\`** CSS property rounds the corners of an element's outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.
   *
   * **Syntax**: \`<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |
   * | :-----: | :-----: | :-----: | :----: | :---: |
   * |  **4**  |  **4**  |  **5**  | **12** | **9** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-radius
   */
  borderRadius?: Property.BorderRadius<TLength> | undefined;
  /**
   * The **\`border-right\`** shorthand CSS property sets all the properties of an element's right border.
   *
   * **Syntax**: \`<line-width> || <line-style> || <color>\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-right
   */
  borderRight?: Property.BorderRight<TLength> | undefined;
  /**
   * The **\`border-style\`** shorthand CSS property sets the line style for all four sides of an element's border.
   *
   * **Syntax**: \`<line-style>{1,4}\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-style
   */
  borderStyle?: Property.BorderStyle | undefined;
  /**
   * The **\`border-top\`** shorthand CSS property sets all the properties of an element's top border.
   *
   * **Syntax**: \`<line-width> || <line-style> || <color>\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-top
   */
  borderTop?: Property.BorderTop<TLength> | undefined;
  /**
   * The **\`border-width\`** shorthand CSS property sets the width of an element's border.
   *
   * **Syntax**: \`<line-width>{1,4}\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-width
   */
  borderWidth?: Property.BorderWidth<TLength> | undefined;
  /**
   * The **\`column-rule\`**\xA0shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **50**  | **52**  |  **9**  | **12** | **10** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/column-rule
   */
  columnRule?: Property.ColumnRule<TLength> | undefined;
  /**
   * The **\`columns\`** CSS shorthand property sets the number of columns to use when drawing an element's contents, as well as those columns' widths.
   *
   * **Syntax**: \`<'column-width'> || <'column-count'>\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |   IE   |
   * | :----: | :-----: | :-----: | :----: | :----: |
   * | **50** | **52**  |  **9**  | **12** | **10** |
   * |        |         | 3 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/columns
   */
  columns?: Property.Columns<TLength> | undefined;
  /**
   * The **\`flex\`** CSS shorthand property sets how a flex _item_ will grow or shrink to fit the space available in its flex container.
   *
   * **Syntax**: \`none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\`
   *
   * |  Chrome  | Firefox | Safari  |  Edge  |    IE    |
   * | :------: | :-----: | :-----: | :----: | :------: |
   * |  **29**  | **20**  |  **9**  | **12** |  **11**  |
   * | 21 _-x-_ |         | 7 _-x-_ |        | 10 _-x-_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/flex
   */
  flex?: Property.Flex<TLength> | undefined;
  /**
   * The **\`flex-flow\`** CSS shorthand property specifies the direction of a flex container, as well as its wrapping behavior.
   *
   * **Syntax**: \`<'flex-direction'> || <'flex-wrap'>\`
   *
   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :------: | :-----: | :-----: | :----: | :----: |
   * |  **29**  | **28**  |  **9**  | **12** | **11** |
   * | 21 _-x-_ |         | 7 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/flex-flow
   */
  flexFlow?: Property.FlexFlow | undefined;
  /**
   * The **\`font\`** CSS shorthand property sets all the different properties of an element's font. Alternatively, it sets an element's font to a system font.
   *
   * **Syntax**: \`[ [ <'font-style'> || <font-variant-css21> || <'font-weight'> || <'font-stretch'> ]? <'font-size'> [ / <'line-height'> ]? <'font-family'> ] | caption | icon | menu | message-box | small-caption | status-bar\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font
   */
  font?: Property.Font | undefined;
  /**
   * The **\`gap\`** CSS property sets the gaps (gutters) between rows and columns. It is a shorthand for \`row-gap\` and \`column-gap\`.
   *
   * **Syntax**: \`<'row-gap'> <'column-gap'>?\`
   *
   * ---
   *
   * _Supported in Flex Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **84** | **63**  | **14.1** | **84** | No  |
   *
   * ---
   *
   * _Supported in Grid Layout_
   *
   * |     Chrome      |     Firefox     |      Safari       |  Edge  | IE  |
   * | :-------------: | :-------------: | :---------------: | :----: | :-: |
   * |     **66**      |     **61**      |      **12**       | **16** | No  |
   * | 57 _(grid-gap)_ | 52 _(grid-gap)_ | 10.1 _(grid-gap)_ |        |     |
   *
   * ---
   *
   * _Supported in Multi-column Layout_
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **66** | **61**  |   No   | **16** | No  |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/gap
   */
  gap?: Property.Gap<TLength> | undefined;
  /**
   * The **\`grid\`** CSS property is a shorthand property that sets all of the explicit and implicit grid properties in a single declaration.
   *
   * **Syntax**: \`<'grid-template'> | <'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>? | [ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid
   */
  grid?: Property.Grid | undefined;
  /**
   * The **\`grid-area\`** CSS shorthand property specifies a grid item\u2019s size and location within a grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.
   *
   * **Syntax**: \`<grid-line> [ / <grid-line> ]{0,3}\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-area
   */
  gridArea?: Property.GridArea | undefined;
  /**
   * The **\`grid-column\`** CSS shorthand property specifies a grid item's size and location within a grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.
   *
   * **Syntax**: \`<grid-line> [ / <grid-line> ]?\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-column
   */
  gridColumn?: Property.GridColumn | undefined;
  /**
   * The **\`grid-row\`** CSS shorthand property specifies a grid item\u2019s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.
   *
   * **Syntax**: \`<grid-line> [ / <grid-line> ]?\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-row
   */
  gridRow?: Property.GridRow | undefined;
  /**
   * The **\`grid-template\`** CSS property is a shorthand property for defining grid columns, rows, and areas.
   *
   * **Syntax**: \`none | [ <'grid-template-rows'> / <'grid-template-columns'> ] | [ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-template
   */
  gridTemplate?: Property.GridTemplate | undefined;
  /**
   * **Syntax**: \`none | <integer>\`
   *
   * **Initial value**: \`none\`
   */
  lineClamp?: Property.LineClamp | undefined;
  /**
   * The **\`list-style\`** CSS shorthand property allows you set all the list style properties at once.
   *
   * **Syntax**: \`<'list-style-type'> || <'list-style-position'> || <'list-style-image'>\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/list-style
   */
  listStyle?: Property.ListStyle | undefined;
  /**
   * The **\`margin\`** CSS property sets the margin area on all four sides of an element. It is a shorthand for \`margin-top\`, \`margin-right\`, \`margin-bottom\`, and \`margin-left\`.
   *
   * **Syntax**: \`[ <length> | <percentage> | auto ]{1,4}\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin
   */
  margin?: Property.Margin<TLength> | undefined;
  /**
   * The **\`mask\`** CSS shorthand property hides an element (partially or fully) by masking or clipping the image at specific points.
   *
   * **Syntax**: \`<mask-layer>#\`
   *
   * | Chrome | Firefox | Safari  | Edge  | IE  |
   * | :----: | :-----: | :-----: | :---: | :-: |
   * | **1**  |  **2**  | **3.1** | 12-79 | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask
   */
  mask?: Property.Mask<TLength> | undefined;
  /**
   * The **\`mask-border\`** CSS shorthand property lets you create a mask along the edge of an element's border.
   *
   * **Syntax**: \`<'mask-border-source'> || <'mask-border-slice'> [ / <'mask-border-width'>? [ / <'mask-border-outset'> ]? ]? || <'mask-border-repeat'> || <'mask-border-mode'>\`
   *
   * |              Chrome              | Firefox |               Safari               |               Edge                | IE  |
   * | :------------------------------: | :-----: | :--------------------------------: | :-------------------------------: | :-: |
   * | **1** _(-webkit-mask-box-image)_ |   No    | **3.1** _(-webkit-mask-box-image)_ | **79** _(-webkit-mask-box-image)_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border
   */
  maskBorder?: Property.MaskBorder | undefined;
  /**
   * The **\`offset\`** CSS shorthand property sets all the properties required for animating an element along a defined path.
   *
   * **Syntax**: \`[ <'offset-position'>? [ <'offset-path'> [ <'offset-distance'> || <'offset-rotate'> ]? ]? ]! [ / <'offset-anchor'> ]?\`
   *
   * |    Chrome     | Firefox | Safari |  Edge  | IE  |
   * | :-----------: | :-----: | :----: | :----: | :-: |
   * |    **55**     | **72**  |   No   | **79** | No  |
   * | 46 _(motion)_ |         |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset
   */
  motion?: Property.Offset<TLength> | undefined;
  /**
   * The **\`offset\`** CSS shorthand property sets all the properties required for animating an element along a defined path.
   *
   * **Syntax**: \`[ <'offset-position'>? [ <'offset-path'> [ <'offset-distance'> || <'offset-rotate'> ]? ]? ]! [ / <'offset-anchor'> ]?\`
   *
   * |    Chrome     | Firefox | Safari |  Edge  | IE  |
   * | :-----------: | :-----: | :----: | :----: | :-: |
   * |    **55**     | **72**  |   No   | **79** | No  |
   * | 46 _(motion)_ |         |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset
   */
  offset?: Property.Offset<TLength> | undefined;
  /**
   * The **\`outline\`** CSS shorthand property set all the outline properties in a single declaration.
   *
   * **Syntax**: \`[ <'outline-color'> || <'outline-style'> || <'outline-width'> ]\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  | **1.5** | **1.2** | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/outline
   */
  outline?: Property.Outline<TLength> | undefined;
  /**
   * The **\`overflow\`** CSS shorthand property sets the desired behavior for an element's overflow \u2014 i.e. when an element's content is too big to fit in its block formatting context \u2014 in both directions.
   *
   * **Syntax**: \`[ visible | hidden | clip | scroll | auto ]{1,2}\`
   *
   * **Initial value**: \`visible\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overflow
   */
  overflow?: Property.Overflow | undefined;
  /**
   * The **\`overscroll-behavior\`** CSS property sets what a browser does when reaching the boundary of a scrolling area. It's a shorthand for \`overscroll-behavior-x\` and \`overscroll-behavior-y\`.
   *
   * **Syntax**: \`[ contain | none | auto ]{1,2}\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **63** | **59**  |   No   | **18** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior
   */
  overscrollBehavior?: Property.OverscrollBehavior | undefined;
  /**
   * The **\`padding\`** CSS shorthand property sets the padding area on all four sides of an element at once.
   *
   * **Syntax**: \`[ <length> | <percentage> ]{1,4}\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding
   */
  padding?: Property.Padding<TLength> | undefined;
  /**
   * The CSS **\`place-items\`** shorthand property allows you to align items along both the block and inline directions at once (i.e. the \`align-items\` and \`justify-items\` properties) in a relevant layout system such as Grid or Flexbox. If the second value is not set, the first value is also used for it.
   *
   * **Syntax**: \`<'align-items'> <'justify-items'>?\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **59** | **45**  | **11** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/place-items
   */
  placeItems?: Property.PlaceItems | undefined;
  /**
   * The **\`place-self\`** CSS shorthand property allows you to align an individual item in both the block and inline directions at once (i.e. the \`align-self\` and \`justify-self\` properties) in a relevant layout system such as Grid or Flexbox. If the second value is not present, the first value is also used for it.
   *
   * **Syntax**: \`<'align-self'> <'justify-self'>?\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **59** | **45**  | **11** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/place-self
   */
  placeSelf?: Property.PlaceSelf | undefined;
  /**
   * The **\`text-decoration\`** shorthand CSS property sets the appearance of decorative lines on text. It is a shorthand for \`text-decoration-line\`, \`text-decoration-color\`, \`text-decoration-style\`, and the newer \`text-decoration-thickness\` property.
   *
   * **Syntax**: \`<'text-decoration-line'> || <'text-decoration-style'> || <'text-decoration-color'> || <'text-decoration-thickness'>\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration
   */
  textDecoration?: Property.TextDecoration<TLength> | undefined;
  /**
   * The **\`text-emphasis\`** CSS property applies emphasis marks to text (except spaces and control characters). It is a shorthand for \`text-emphasis-style\` and \`text-emphasis-color\`.
   *
   * **Syntax**: \`<'text-emphasis-style'> || <'text-emphasis-color'>\`
   *
   * |    Chrome    | Firefox | Safari |     Edge     | IE  |
   * | :----------: | :-----: | :----: | :----------: | :-: |
   * | **25** _-x-_ | **46**  | **7**  | **79** _-x-_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-emphasis
   */
  textEmphasis?: Property.TextEmphasis | undefined;
  /**
   * The **\`transition\`** CSS property is a shorthand property for \`transition-property\`, \`transition-duration\`, \`transition-timing-function\`, and \`transition-delay\`.
   *
   * **Syntax**: \`<single-transition>#\`
   *
   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |
   * | :-----: | :-----: | :-------: | :----: | :----: |
   * | **26**  | **16**  |   **9**   | **12** | **10** |
   * | 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/transition
   */
  transition?: Property.Transition<TTime> | undefined;
}

export interface StandardProperties<TLength = (string & {}) | 0, TTime = string & {}>
  extends StandardLonghandProperties<TLength, TTime>,
    StandardShorthandProperties<TLength, TTime> {}

export interface VendorLonghandProperties<TLength = (string & {}) | 0, TTime = string & {}> {
  /**
   * The **\`animation-delay\`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  MozAnimationDelay?: Property.AnimationDelay<TTime> | undefined;
  /**
   * The **\`animation-direction\`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.
   *
   * **Syntax**: \`<single-animation-direction>#\`
   *
   * **Initial value**: \`normal\`
   */
  MozAnimationDirection?: Property.AnimationDirection | undefined;
  /**
   * The **\`animation-duration\`** CSS property sets the length of time that an animation takes to complete one cycle.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  MozAnimationDuration?: Property.AnimationDuration<TTime> | undefined;
  /**
   * The **\`animation-fill-mode\`** CSS property sets how a CSS animation applies styles to its target before and after its execution.
   *
   * **Syntax**: \`<single-animation-fill-mode>#\`
   *
   * **Initial value**: \`none\`
   */
  MozAnimationFillMode?: Property.AnimationFillMode | undefined;
  /**
   * The **\`animation-iteration-count\`** CSS property sets the number of times an animation sequence should be played before stopping.
   *
   * **Syntax**: \`<single-animation-iteration-count>#\`
   *
   * **Initial value**: \`1\`
   */
  MozAnimationIterationCount?: Property.AnimationIterationCount | undefined;
  /**
   * The **\`animation-name\`** CSS property specifies the names of one or more \`@keyframes\` at-rules describing the animation or animations to apply to the element.
   *
   * **Syntax**: \`[ none | <keyframes-name> ]#\`
   *
   * **Initial value**: \`none\`
   */
  MozAnimationName?: Property.AnimationName | undefined;
  /**
   * The **\`animation-play-state\`** CSS property sets whether an animation is running or paused.
   *
   * **Syntax**: \`<single-animation-play-state>#\`
   *
   * **Initial value**: \`running\`
   */
  MozAnimationPlayState?: Property.AnimationPlayState | undefined;
  /**
   * The **\`animation-timing-function\`** CSS property sets how an animation progresses through the duration of each cycle.
   *
   * **Syntax**: \`<easing-function>#\`
   *
   * **Initial value**: \`ease\`
   */
  MozAnimationTimingFunction?: Property.AnimationTimingFunction | undefined;
  /**
   * The \`**appearance**\` CSS property is used to display an element using platform-native styling, based on the operating system's theme. The **\`-moz-appearance\`** and **\`-webkit-appearance\`** properties are non-standard versions of this property, used (respectively) by Gecko (Firefox) and by WebKit-based (e.g., Safari) and Blink-based (e.g., Chrome, Opera) browsers to achieve the same thing. Note that Firefox and Edge also support **\`-webkit-appearance\`**, for compatibility reasons.
   *
   * **Syntax**: \`none | button | button-arrow-down | button-arrow-next | button-arrow-previous | button-arrow-up | button-bevel | button-focus | caret | checkbox | checkbox-container | checkbox-label | checkmenuitem | dualbutton | groupbox | listbox | listitem | menuarrow | menubar | menucheckbox | menuimage | menuitem | menuitemtext | menulist | menulist-button | menulist-text | menulist-textfield | menupopup | menuradio | menuseparator | meterbar | meterchunk | progressbar | progressbar-vertical | progresschunk | progresschunk-vertical | radio | radio-container | radio-label | radiomenuitem | range | range-thumb | resizer | resizerpanel | scale-horizontal | scalethumbend | scalethumb-horizontal | scalethumbstart | scalethumbtick | scalethumb-vertical | scale-vertical | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical | searchfield | separator | sheet | spinner | spinner-downbutton | spinner-textfield | spinner-upbutton | splitter | statusbar | statusbarpanel | tab | tabpanel | tabpanels | tab-scroll-arrow-back | tab-scroll-arrow-forward | textfield | textfield-multiline | toolbar | toolbarbutton | toolbarbutton-dropdown | toolbargripper | toolbox | tooltip | treeheader | treeheadercell | treeheadersortarrow | treeitem | treeline | treetwisty | treetwistyopen | treeview | -moz-mac-unified-toolbar | -moz-win-borderless-glass | -moz-win-browsertabbar-toolbox | -moz-win-communicationstext | -moz-win-communications-toolbox | -moz-win-exclude-glass | -moz-win-glass | -moz-win-mediatext | -moz-win-media-toolbox | -moz-window-button-box | -moz-window-button-box-maximized | -moz-window-button-close | -moz-window-button-maximize | -moz-window-button-minimize | -moz-window-button-restore | -moz-window-frame-bottom | -moz-window-frame-left | -moz-window-frame-right | -moz-window-titlebar | -moz-window-titlebar-maximized\`
   *
   * **Initial value**: \`none\` (but this value is overridden in the user agent CSS)
   */
  MozAppearance?: Property.MozAppearance | undefined;
  /**
   * The **\`backface-visibility\`** CSS property sets whether the back face of an element is visible when turned towards the user.
   *
   * **Syntax**: \`visible | hidden\`
   *
   * **Initial value**: \`visible\`
   */
  MozBackfaceVisibility?: Property.BackfaceVisibility | undefined;
  /**
   * In Mozilla applications like Firefox, the **\`-moz-border-bottom-colors\`** CSS property sets a list of colors for the bottom border.
   *
   * **Syntax**: \`<color>+ | none\`
   *
   * **Initial value**: \`none\`
   */
  MozBorderBottomColors?: Property.MozBorderBottomColors | undefined;
  /**
   * The **\`border-inline-end-color\`** CSS property defines the color of the logical inline-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-color\`, \`border-right-color\`, \`border-bottom-color\`, or \`border-left-color\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-color'>\`
   *
   * **Initial value**: \`currentcolor\`
   */
  MozBorderEndColor?: Property.BorderInlineEndColor | undefined;
  /**
   * The **\`border-inline-end-style\`** CSS property defines the style of the logical inline end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-style\`, \`border-right-style\`, \`border-bottom-style\`, or \`border-left-style\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-style'>\`
   *
   * **Initial value**: \`none\`
   */
  MozBorderEndStyle?: Property.BorderInlineEndStyle | undefined;
  /**
   * The **\`border-inline-end-width\`** CSS property defines the width of the logical inline-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-width\`, \`border-right-width\`, \`border-bottom-width\`, or \`border-left-width\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-width'>\`
   *
   * **Initial value**: \`medium\`
   */
  MozBorderEndWidth?: Property.BorderInlineEndWidth<TLength> | undefined;
  /**
   * In Mozilla applications like Firefox, the **\`-moz-border-left-colors\`** CSS property sets a list of colors for the left border.
   *
   * **Syntax**: \`<color>+ | none\`
   *
   * **Initial value**: \`none\`
   */
  MozBorderLeftColors?: Property.MozBorderLeftColors | undefined;
  /**
   * In Mozilla applications like Firefox, the **\`-moz-border-right-colors\`** CSS property sets a list of colors for the right border.
   *
   * **Syntax**: \`<color>+ | none\`
   *
   * **Initial value**: \`none\`
   */
  MozBorderRightColors?: Property.MozBorderRightColors | undefined;
  /**
   * The **\`border-inline-start-color\`** CSS property defines the color of the logical inline start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-color\`, \`border-right-color\`, \`border-bottom-color\`, or \`border-left-color\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-color'>\`
   *
   * **Initial value**: \`currentcolor\`
   */
  MozBorderStartColor?: Property.BorderInlineStartColor | undefined;
  /**
   * The **\`border-inline-start-style\`** CSS property defines the style of the logical inline start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-style\`, \`border-right-style\`, \`border-bottom-style\`, or \`border-left-style\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-style'>\`
   *
   * **Initial value**: \`none\`
   */
  MozBorderStartStyle?: Property.BorderInlineStartStyle | undefined;
  /**
   * In Mozilla applications like Firefox, the **\`-moz-border-top-colors\`** CSS property sets a list of colors for the top border.
   *
   * **Syntax**: \`<color>+ | none\`
   *
   * **Initial value**: \`none\`
   */
  MozBorderTopColors?: Property.MozBorderTopColors | undefined;
  /**
   * The **\`box-sizing\`** CSS property sets how the total width and height of an element is calculated.
   *
   * **Syntax**: \`content-box | border-box\`
   *
   * **Initial value**: \`content-box\`
   */
  MozBoxSizing?: Property.BoxSizing | undefined;
  /**
   * The **\`column-count\`** CSS property breaks an element's content into the specified number of columns.
   *
   * **Syntax**: \`<integer> | auto\`
   *
   * **Initial value**: \`auto\`
   */
  MozColumnCount?: Property.ColumnCount | undefined;
  /**
   * The **\`column-fill\`** CSS property controls how an element's contents are balanced when broken into columns.
   *
   * **Syntax**: \`auto | balance | balance-all\`
   *
   * **Initial value**: \`balance\`
   */
  MozColumnFill?: Property.ColumnFill | undefined;
  /**
   * The **\`column-gap\`** CSS property sets the size of the gap (gutter) between an element's columns.
   *
   * **Syntax**: \`normal | <length-percentage>\`
   *
   * **Initial value**: \`normal\`
   */
  MozColumnGap?: Property.ColumnGap<TLength> | undefined;
  /**
   * The **\`column-rule-color\`** CSS property sets the color of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   */
  MozColumnRuleColor?: Property.ColumnRuleColor | undefined;
  /**
   * The **\`column-rule-style\`** CSS property sets the style of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<'border-style'>\`
   *
   * **Initial value**: \`none\`
   */
  MozColumnRuleStyle?: Property.ColumnRuleStyle | undefined;
  /**
   * The **\`column-rule-width\`** CSS property sets the width of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<'border-width'>\`
   *
   * **Initial value**: \`medium\`
   */
  MozColumnRuleWidth?: Property.ColumnRuleWidth<TLength> | undefined;
  /**
   * The **\`column-width\`** CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the \`column-width\` value. If the width of the container is narrower than the specified value, the single column's width will be smaller than the declared column width.
   *
   * **Syntax**: \`<length> | auto\`
   *
   * **Initial value**: \`auto\`
   */
  MozColumnWidth?: Property.ColumnWidth<TLength> | undefined;
  /**
   * The \`**-moz-context-properties**\` property can be used within privileged contexts in Firefox to share the values of specified properties of the element with a child SVG image.
   *
   * **Syntax**: \`none | [ fill | fill-opacity | stroke | stroke-opacity ]#\`
   *
   * **Initial value**: \`none\`
   */
  MozContextProperties?: Property.MozContextProperties | undefined;
  /**
   * The **\`font-feature-settings\`** CSS property controls advanced typographic features in OpenType fonts.
   *
   * **Syntax**: \`normal | <feature-tag-value>#\`
   *
   * **Initial value**: \`normal\`
   */
  MozFontFeatureSettings?: Property.FontFeatureSettings | undefined;
  /**
   * The **\`font-language-override\`** CSS property controls the use of language-specific glyphs in a typeface.
   *
   * **Syntax**: \`normal | <string>\`
   *
   * **Initial value**: \`normal\`
   */
  MozFontLanguageOverride?: Property.FontLanguageOverride | undefined;
  /**
   * The **\`hyphens\`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.
   *
   * **Syntax**: \`none | manual | auto\`
   *
   * **Initial value**: \`manual\`
   */
  MozHyphens?: Property.Hyphens | undefined;
  /**
   * For certain XUL elements and pseudo-elements that use an image from the \`list-style-image\` property, this property specifies a region of the image that is used in place of the whole image. This allows elements to use different pieces of the same image to improve performance.
   *
   * **Syntax**: \`<shape> | auto\`
   *
   * **Initial value**: \`auto\`
   */
  MozImageRegion?: Property.MozImageRegion | undefined;
  /**
   * The **\`margin-inline-end\`** CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. In other words, it corresponds to the \`margin-top\`, \`margin-right\`, \`margin-bottom\` or \`margin-left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'margin-left'>\`
   *
   * **Initial value**: \`0\`
   */
  MozMarginEnd?: Property.MarginInlineEnd<TLength> | undefined;
  /**
   * The **\`margin-inline-start\`** CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`margin-top\`, \`margin-right\`, \`margin-bottom\`, or \`margin-left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'margin-left'>\`
   *
   * **Initial value**: \`0\`
   */
  MozMarginStart?: Property.MarginInlineStart<TLength> | undefined;
  /**
   * The **\`-moz-orient\`** CSS property specifies the orientation of the element to which it's applied.
   *
   * **Syntax**: \`inline | block | horizontal | vertical\`
   *
   * **Initial value**: \`inline\`
   */
  MozOrient?: Property.MozOrient | undefined;
  /**
   * The **\`font-smooth\`** CSS property controls the application of anti-aliasing when fonts are rendered.
   *
   * **Syntax**: \`auto | never | always | <absolute-size> | <length>\`
   *
   * **Initial value**: \`auto\`
   */
  MozOsxFontSmoothing?: Property.FontSmooth<TLength> | undefined;
  /**
   * The **\`padding-inline-end\`** CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>\`
   *
   * **Initial value**: \`0\`
   */
  MozPaddingEnd?: Property.PaddingInlineEnd<TLength> | undefined;
  /**
   * The **\`padding-inline-start\`** CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>\`
   *
   * **Initial value**: \`0\`
   */
  MozPaddingStart?: Property.PaddingInlineStart<TLength> | undefined;
  /**
   * The **\`perspective\`** CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.
   *
   * **Syntax**: \`none | <length>\`
   *
   * **Initial value**: \`none\`
   */
  MozPerspective?: Property.Perspective<TLength> | undefined;
  /**
   * The **\`perspective-origin\`** CSS property determines the position at which the viewer is looking. It is used as the _vanishing point_ by the \`perspective\` property.
   *
   * **Syntax**: \`<position>\`
   *
   * **Initial value**: \`50% 50%\`
   */
  MozPerspectiveOrigin?: Property.PerspectiveOrigin<TLength> | undefined;
  /**
   * **\`-moz-stack-sizing\`** is an extended CSS property. Normally, a \`<xul:stack>\` will change its size so that all of its child elements are completely visible. For example, moving a child of the stack far to the right will widen the stack so the child remains visible.
   *
   * **Syntax**: \`ignore | stretch-to-fit\`
   *
   * **Initial value**: \`stretch-to-fit\`
   */
  MozStackSizing?: Property.MozStackSizing | undefined;
  /**
   * The **\`tab-size\`** CSS property is used to customize the width of tab characters (U+0009).
   *
   * **Syntax**: \`<integer> | <length>\`
   *
   * **Initial value**: \`8\`
   */
  MozTabSize?: Property.TabSize<TLength> | undefined;
  /**
   * The **\`-moz-text-blink\`** non-standard Mozilla CSS extension specifies the blink mode.
   *
   * **Syntax**: \`none | blink\`
   *
   * **Initial value**: \`none\`
   */
  MozTextBlink?: Property.MozTextBlink | undefined;
  /**
   * The **\`text-size-adjust\`** CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.
   *
   * **Syntax**: \`none | auto | <percentage>\`
   *
   * **Initial value**: \`auto\` for smartphone browsers supporting inflation, \`none\` in other cases (and then not modifiable).
   */
  MozTextSizeAdjust?: Property.TextSizeAdjust | undefined;
  /**
   * The **\`transform-origin\`** CSS property sets the origin for an element's transformations.
   *
   * **Syntax**: \`[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?\`
   *
   * **Initial value**: \`50% 50% 0\`
   */
  MozTransformOrigin?: Property.TransformOrigin<TLength> | undefined;
  /**
   * The **\`transform-style\`** CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element.
   *
   * **Syntax**: \`flat | preserve-3d\`
   *
   * **Initial value**: \`flat\`
   */
  MozTransformStyle?: Property.TransformStyle | undefined;
  /**
   * The **\`transition-delay\`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  MozTransitionDelay?: Property.TransitionDelay<TTime> | undefined;
  /**
   * The **\`transition-duration\`** CSS property sets the length of time a transition animation should take to complete. By default, the value is \`0s\`, meaning that no animation will occur.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  MozTransitionDuration?: Property.TransitionDuration<TTime> | undefined;
  /**
   * The **\`transition-property\`** CSS property sets the CSS properties to which a transition effect should be applied.
   *
   * **Syntax**: \`none | <single-transition-property>#\`
   *
   * **Initial value**: all
   */
  MozTransitionProperty?: Property.TransitionProperty | undefined;
  /**
   * The **\`transition-timing-function\`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.
   *
   * **Syntax**: \`<easing-function>#\`
   *
   * **Initial value**: \`ease\`
   */
  MozTransitionTimingFunction?: Property.TransitionTimingFunction | undefined;
  /**
   * The **\`-moz-user-focus\`** CSS property is used to indicate whether an element can have the focus.
   *
   * **Syntax**: \`ignore | normal | select-after | select-before | select-menu | select-same | select-all | none\`
   *
   * **Initial value**: \`none\`
   */
  MozUserFocus?: Property.MozUserFocus | undefined;
  /**
   * The **\`user-modify\`** property has no effect in Firefox. It was originally planned to\xA0determine whether or not the content of an element can be edited by a user.
   *
   * **Syntax**: \`read-only | read-write | write-only\`
   *
   * **Initial value**: \`read-only\`
   */
  MozUserModify?: Property.MozUserModify | undefined;
  /**
   * The \`**user-select**\` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.
   *
   * **Syntax**: \`auto | text | none | contain | all\`
   *
   * **Initial value**: \`auto\`
   */
  MozUserSelect?: Property.UserSelect | undefined;
  /**
   * The **\`-moz-window-dragging\`** CSS property specifies whether a window is draggable or not. It only works in Chrome code, and only on Mac OS X.
   *
   * **Syntax**: \`drag | no-drag\`
   *
   * **Initial value**: \`drag\`
   */
  MozWindowDragging?: Property.MozWindowDragging | undefined;
  /**
   * The **\`-moz-window-shadow\`** CSS property specifies whether a window will have a shadow. It only works on Mac OS X.
   *
   * **Syntax**: \`default | menu | tooltip | sheet | none\`
   *
   * **Initial value**: \`default\`
   */
  MozWindowShadow?: Property.MozWindowShadow | undefined;
  /**
   * The **\`-ms-accelerator\`** CSS property is a Microsoft extension that sets or retrieves a string indicating whether the object represents a keyboard shortcut.
   *
   * **Syntax**: \`false | true\`
   *
   * **Initial value**: \`false\`
   */
  msAccelerator?: Property.MsAccelerator | undefined;
  /**
   * The **\`align-self\`** CSS property overrides a grid or flex item's \`align-items\` value. In Grid, it aligns the item inside the\xA0grid area. In Flexbox, it aligns the item on the cross axis.
   *
   * **Syntax**: \`auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>\`
   *
   * **Initial value**: \`auto\`
   */
  msAlignSelf?: Property.AlignSelf | undefined;
  /**
   * The **\`-ms-block-progression\`** CSS property is a Microsoft extension that specifies the block progression and layout orientation.
   *
   * **Syntax**: \`tb | rl | bt | lr\`
   *
   * **Initial value**: \`tb\`
   */
  msBlockProgression?: Property.MsBlockProgression | undefined;
  /**
   * The **\`-ms-content-zoom-chaining\`** CSS property is a Microsoft extension specifying the zoom behavior that occurs when a user hits the zoom limit during page manipulation.
   *
   * **Syntax**: \`none | chained\`
   *
   * **Initial value**: \`none\`
   */
  msContentZoomChaining?: Property.MsContentZoomChaining | undefined;
  /**
   * The **\`-ms-content-zoom-limit-max\`** CSS property is a Microsoft extension that specifies the selected elements' maximum zoom factor.
   *
   * **Syntax**: \`<percentage>\`
   *
   * **Initial value**: \`400%\`
   */
  msContentZoomLimitMax?: Property.MsContentZoomLimitMax | undefined;
  /**
   * The **\`-ms-content-zoom-limit-min\`** CSS property is a Microsoft extension that specifies the minimum zoom factor.
   *
   * **Syntax**: \`<percentage>\`
   *
   * **Initial value**: \`100%\`
   */
  msContentZoomLimitMin?: Property.MsContentZoomLimitMin | undefined;
  /**
   * The **\`-ms-content-zoom-snap-points\`** CSS property is a Microsoft extension that specifies where zoom snap-points are located.
   *
   * **Syntax**: \`snapInterval( <percentage>, <percentage> ) | snapList( <percentage># )\`
   *
   * **Initial value**: \`snapInterval(0%, 100%)\`
   */
  msContentZoomSnapPoints?: Property.MsContentZoomSnapPoints | undefined;
  /**
   * The **\`-ms-content-zoom-snap-type\`** CSS property is a Microsoft extension that specifies how zooming is affected by defined snap-points.
   *
   * **Syntax**: \`none | proximity | mandatory\`
   *
   * **Initial value**: \`none\`
   */
  msContentZoomSnapType?: Property.MsContentZoomSnapType | undefined;
  /**
   * The **\`-ms-content-zooming\`** CSS property is a Microsoft extension that specifies whether zooming is enabled.
   *
   * **Syntax**: \`none | zoom\`
   *
   * **Initial value**: zoom for the top level element, none for all other elements
   */
  msContentZooming?: Property.MsContentZooming | undefined;
  /**
   * The \`-ms-filter\` CSS property is a Microsoft extension that sets or retrieves the filter or collection of filters applied to an object.
   *
   * **Syntax**: \`<string>\`
   *
   * **Initial value**: "" (the empty string)
   */
  msFilter?: Property.MsFilter | undefined;
  /**
   * The **\`flex-direction\`** CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).
   *
   * **Syntax**: \`row | row-reverse | column | column-reverse\`
   *
   * **Initial value**: \`row\`
   */
  msFlexDirection?: Property.FlexDirection | undefined;
  /**
   * The **\`flex-grow\`** CSS\xA0property sets the flex grow factor of a flex item main size.
   *
   * **Syntax**: \`<number>\`
   *
   * **Initial value**: \`0\`
   */
  msFlexPositive?: Property.FlexGrow | undefined;
  /**
   * The **\`-ms-flow-from\`** CSS property is a Microsoft extension that gets or sets a value identifying a region container in the document that accepts the content flow from the data source.
   *
   * **Syntax**: \`[ none | <custom-ident> ]#\`
   *
   * **Initial value**: \`none\`
   */
  msFlowFrom?: Property.MsFlowFrom | undefined;
  /**
   * The **\`-ms-flow-into\`** CSS property is a Microsoft extension that gets or sets a value identifying an iframe container in the document that serves as the region's data source.
   *
   * **Syntax**: \`[ none | <custom-ident> ]#\`
   *
   * **Initial value**: \`none\`
   */
  msFlowInto?: Property.MsFlowInto | undefined;
  /**
   * The **\`grid-template-columns\`** CSS property defines the line names and track sizing functions of the grid columns.
   *
   * **Syntax**: \`none | <track-list> | <auto-track-list>\`
   *
   * **Initial value**: \`none\`
   */
  msGridColumns?: Property.MsGridColumns<TLength> | undefined;
  /**
   * The **\`grid-template-rows\`** CSS property defines the line names and track sizing functions of the grid rows.
   *
   * **Syntax**: \`none | <track-list> | <auto-track-list>\`
   *
   * **Initial value**: \`none\`
   */
  msGridRows?: Property.MsGridRows<TLength> | undefined;
  /**
   * The **\`-ms-high-contrast-adjust\`** CSS property is a Microsoft extension that gets or sets a value indicating whether to override any CSS properties that would have been set in high contrast mode.
   *
   * **Syntax**: \`auto | none\`
   *
   * **Initial value**: \`auto\`
   */
  msHighContrastAdjust?: Property.MsHighContrastAdjust | undefined;
  /**
   * The **\`-ms-hyphenate-limit-chars\`** CSS property is a Microsoft extension that specifies one to three values indicating the minimum number of characters in a hyphenated word. If the word does not meet the required minimum number of characters in the word, before the hyphen, or after the hyphen, then the word is not hyphenated.
   *
   * **Syntax**: \`auto | <integer>{1,3}\`
   *
   * **Initial value**: \`auto\`
   */
  msHyphenateLimitChars?: Property.MsHyphenateLimitChars | undefined;
  /**
   * The **\`-ms-hyphenate-limit-lines\`** CSS property is a Microsoft extension specifying the maximum number of consecutive lines in an element that may be ended with a hyphenated word.
   *
   * **Syntax**: \`no-limit | <integer>\`
   *
   * **Initial value**: \`no-limit\`
   */
  msHyphenateLimitLines?: Property.MsHyphenateLimitLines | undefined;
  /**
   * The \`**-ms-hyphenate-limit-zone**\` CSS property is a Microsoft extension specifying the width of the hyphenation zone.
   *
   * **Syntax**: \`<percentage> | <length>\`
   *
   * **Initial value**: \`0\`
   */
  msHyphenateLimitZone?: Property.MsHyphenateLimitZone<TLength> | undefined;
  /**
   * The **\`hyphens\`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.
   *
   * **Syntax**: \`none | manual | auto\`
   *
   * **Initial value**: \`manual\`
   */
  msHyphens?: Property.Hyphens | undefined;
  /**
   * The **\`-ms-ime-align\`** CSS property is a Microsoft extension aligning the Input Method Editor (IME) candidate window box relative to the element on which the IME composition is active. The extension is implemented in Microsoft Edge and Internet Explorer\xA011.
   *
   * **Syntax**: \`auto | after\`
   *
   * **Initial value**: \`auto\`
   */
  msImeAlign?: Property.MsImeAlign | undefined;
  /**
   * The CSS **\`justify-self\`** property sets the way a box is justified inside its alignment container along the appropriate axis.
   *
   * **Syntax**: \`auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]\`
   *
   * **Initial value**: \`auto\`
   */
  msJustifySelf?: Property.JustifySelf | undefined;
  /**
   * The **\`line-break\`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.
   *
   * **Syntax**: \`auto | loose | normal | strict | anywhere\`
   *
   * **Initial value**: \`auto\`
   */
  msLineBreak?: Property.LineBreak | undefined;
  /**
   * The **\`order\`** CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending \`order\` value and then by their source code order.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`0\`
   */
  msOrder?: Property.Order | undefined;
  /**
   * The **\`-ms-overflow-style\`** CSS property is a Microsoft extension controlling the behavior of scrollbars when the content of an element overflows.
   *
   * **Syntax**: \`auto | none | scrollbar | -ms-autohiding-scrollbar\`
   *
   * **Initial value**: \`auto\`
   */
  msOverflowStyle?: Property.MsOverflowStyle | undefined;
  /**
   * The **\`overflow-x\`** CSS property sets what shows when content overflows a block-level element's left and right edges. This may be nothing, a scroll bar, or the overflow content.
   *
   * **Syntax**: \`visible | hidden | clip | scroll | auto\`
   *
   * **Initial value**: \`visible\`
   */
  msOverflowX?: Property.OverflowX | undefined;
  /**
   * The **\`overflow-y\`** CSS property sets what shows when content overflows a block-level element's top and bottom edges. This may be nothing, a scroll bar, or the overflow content.
   *
   * **Syntax**: \`visible | hidden | clip | scroll | auto\`
   *
   * **Initial value**: \`visible\`
   */
  msOverflowY?: Property.OverflowY | undefined;
  /**
   * The \`**-ms-scroll-chaining**\` CSS property is a Microsoft extension that specifies the scrolling behavior that occurs when a user hits the scroll limit during a manipulation.
   *
   * **Syntax**: \`chained | none\`
   *
   * **Initial value**: \`chained\`
   */
  msScrollChaining?: Property.MsScrollChaining | undefined;
  /**
   * The \`**-ms-scroll-limit-x-max**\` CSS property is a Microsoft extension that specifies the maximum value for the \`Element.scrollLeft\` property.
   *
   * **Syntax**: \`auto | <length>\`
   *
   * **Initial value**: \`auto\`
   */
  msScrollLimitXMax?: Property.MsScrollLimitXMax<TLength> | undefined;
  /**
   * The **\`-ms-scroll-limit-x-min\`** CSS property is a Microsoft extension that specifies the minimum value for the \`Element.scrollLeft\` property.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   */
  msScrollLimitXMin?: Property.MsScrollLimitXMin<TLength> | undefined;
  /**
   * The **\`-ms-scroll-limit-y-max\`** CSS property is a Microsoft extension that specifies the maximum value for the \`Element.scrollTop\` property.
   *
   * **Syntax**: \`auto | <length>\`
   *
   * **Initial value**: \`auto\`
   */
  msScrollLimitYMax?: Property.MsScrollLimitYMax<TLength> | undefined;
  /**
   * The **\`-ms-scroll-limit-y-min\`** CSS property is a Microsoft extension that specifies the minimum value for the \`Element.scrollTop\` property.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   */
  msScrollLimitYMin?: Property.MsScrollLimitYMin<TLength> | undefined;
  /**
   * The **\`-ms-scroll-rails\`** CSS property is a Microsoft extension that specifies whether scrolling locks to the primary axis of motion.
   *
   * **Syntax**: \`none | railed\`
   *
   * **Initial value**: \`railed\`
   */
  msScrollRails?: Property.MsScrollRails | undefined;
  /**
   * The **\`-ms-scroll-snap-points-x\`** CSS property is a Microsoft extension that specifies where snap-points will be located along the x-axis.
   *
   * **Syntax**: \`snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )\`
   *
   * **Initial value**: \`snapInterval(0px, 100%)\`
   */
  msScrollSnapPointsX?: Property.MsScrollSnapPointsX | undefined;
  /**
   * The **\`-ms-scroll-snap-points-y\`** CSS property is a Microsoft extension that specifies where snap-points will be located along the y-axis.
   *
   * **Syntax**: \`snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )\`
   *
   * **Initial value**: \`snapInterval(0px, 100%)\`
   */
  msScrollSnapPointsY?: Property.MsScrollSnapPointsY | undefined;
  /**
   * The **\`scroll-snap-type\`** CSS property sets how strictly snap points are enforced on the scroll container in case there is one.
   *
   * **Syntax**: \`none | proximity | mandatory\`
   *
   * **Initial value**: \`none\`
   */
  msScrollSnapType?: Property.MsScrollSnapType | undefined;
  /**
   * The **\`-ms-scroll-translation\`** CSS property is a Microsoft extension that specifies whether vertical-to-horizontal scroll wheel translation occurs on the specified element.
   *
   * **Syntax**: \`none | vertical-to-horizontal\`
   *
   * **Initial value**: \`none\`
   */
  msScrollTranslation?: Property.MsScrollTranslation | undefined;
  /**
   * The **\`-ms-scrollbar-3dlight-color\`** CSS property is a Microsoft extension specifying the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: depends on user agent
   */
  msScrollbar3dlightColor?: Property.MsScrollbar3dlightColor | undefined;
  /**
   * The **\`-ms-scrollbar-arrow-color\`** CSS property is a Microsoft extension that specifies the color of the arrow elements of a scroll arrow.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`ButtonText\`
   */
  msScrollbarArrowColor?: Property.MsScrollbarArrowColor | undefined;
  /**
   * The \`**-ms-scrollbar-base-color**\` CSS property is a Microsoft extension that specifies the base color of the main elements of a scroll bar.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: depends on user agent
   */
  msScrollbarBaseColor?: Property.MsScrollbarBaseColor | undefined;
  /**
   * The **\`-ms-scrollbar-darkshadow-color\`** CSS property is a Microsoft extension that specifies the color of a scroll bar's gutter.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`ThreeDDarkShadow\`
   */
  msScrollbarDarkshadowColor?: Property.MsScrollbarDarkshadowColor | undefined;
  /**
   * The \`**-ms-scrollbar-face-color**\` CSS property is a Microsoft extension that specifies the color of the scroll box and scroll arrows of a scroll bar.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`ThreeDFace\`
   */
  msScrollbarFaceColor?: Property.MsScrollbarFaceColor | undefined;
  /**
   * The \`**-ms-scrollbar-highlight-color**\` CSS property is a Microsoft extension that specifies the color of the slider tray, the top and left edges of the scroll box, and the scroll arrows of a scroll bar.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`ThreeDHighlight\`
   */
  msScrollbarHighlightColor?: Property.MsScrollbarHighlightColor | undefined;
  /**
   * The **\`-ms-scrollbar-shadow-color\`** CSS property is a Microsoft extension that specifies the color of the bottom and right edges of the scroll box and scroll arrows of a scroll bar.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`ThreeDDarkShadow\`
   */
  msScrollbarShadowColor?: Property.MsScrollbarShadowColor | undefined;
  /**
   * The **\`-ms-text-autospace\`** CSS property is a Microsoft extension that specifies the autospacing and narrow space width adjustment of text.
   *
   * **Syntax**: \`none | ideograph-alpha | ideograph-numeric | ideograph-parenthesis | ideograph-space\`
   *
   * **Initial value**: \`none\`
   */
  msTextAutospace?: Property.MsTextAutospace | undefined;
  /**
   * The **\`text-combine-upright\`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.
   *
   * **Syntax**: \`none | all | [ digits <integer>? ]\`
   *
   * **Initial value**: \`none\`
   */
  msTextCombineHorizontal?: Property.TextCombineUpright | undefined;
  /**
   * The **\`text-overflow\`** CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis ('\`\u2026\`'), or display a custom string.
   *
   * **Syntax**: \`[ clip | ellipsis | <string> ]{1,2}\`
   *
   * **Initial value**: \`clip\`
   */
  msTextOverflow?: Property.TextOverflow | undefined;
  /**
   * The **\`touch-action\`** CSS property sets how an element's region can be manipulated by a touchscreen user (for example, by zooming features built into the browser).
   *
   * **Syntax**: \`auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation\`
   *
   * **Initial value**: \`auto\`
   */
  msTouchAction?: Property.TouchAction | undefined;
  /**
   * The **\`-ms-touch-select\`** CSS property is a Microsoft extension that toggles the gripper visual elements that enable touch text selection.
   *
   * **Syntax**: \`grippers | none\`
   *
   * **Initial value**: \`grippers\`
   */
  msTouchSelect?: Property.MsTouchSelect | undefined;
  /**
   * The **\`transform\`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.
   *
   * **Syntax**: \`none | <transform-list>\`
   *
   * **Initial value**: \`none\`
   */
  msTransform?: Property.Transform | undefined;
  /**
   * The **\`transform-origin\`** CSS property sets the origin for an element's transformations.
   *
   * **Syntax**: \`[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?\`
   *
   * **Initial value**: \`50% 50% 0\`
   */
  msTransformOrigin?: Property.TransformOrigin<TLength> | undefined;
  /**
   * The **\`transition-delay\`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  msTransitionDelay?: Property.TransitionDelay<TTime> | undefined;
  /**
   * The **\`transition-duration\`** CSS property sets the length of time a transition animation should take to complete. By default, the value is \`0s\`, meaning that no animation will occur.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  msTransitionDuration?: Property.TransitionDuration<TTime> | undefined;
  /**
   * The **\`transition-property\`** CSS property sets the CSS properties to which a transition effect should be applied.
   *
   * **Syntax**: \`none | <single-transition-property>#\`
   *
   * **Initial value**: all
   */
  msTransitionProperty?: Property.TransitionProperty | undefined;
  /**
   * The **\`transition-timing-function\`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.
   *
   * **Syntax**: \`<easing-function>#\`
   *
   * **Initial value**: \`ease\`
   */
  msTransitionTimingFunction?: Property.TransitionTimingFunction | undefined;
  /**
   * The \`**user-select**\` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.
   *
   * **Syntax**: \`none | element | text\`
   *
   * **Initial value**: \`text\`
   */
  msUserSelect?: Property.MsUserSelect | undefined;
  /**
   * The **\`word-break\`** CSS property sets whether line breaks appear wherever the text would otherwise overflow its content box.
   *
   * **Syntax**: \`normal | break-all | keep-all | break-word\`
   *
   * **Initial value**: \`normal\`
   */
  msWordBreak?: Property.WordBreak | undefined;
  /**
   * The **\`-ms-wrap-flow\`** CSS property is a Microsoft extension that specifies how exclusions impact inline content within block-level elements.
   *
   * **Syntax**: \`auto | both | start | end | maximum | clear\`
   *
   * **Initial value**: \`auto\`
   */
  msWrapFlow?: Property.MsWrapFlow | undefined;
  /**
   * The **\`-ms-wrap-margin\`** CSS property is a Microsoft extension that specifies a margin that offsets the inner wrap shape from other shapes.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   */
  msWrapMargin?: Property.MsWrapMargin<TLength> | undefined;
  /**
   * The **\`-ms-wrap-through\`** CSS property is a Microsoft extension that specifies how content should wrap around an exclusion element.
   *
   * **Syntax**: \`wrap | none\`
   *
   * **Initial value**: \`wrap\`
   */
  msWrapThrough?: Property.MsWrapThrough | undefined;
  /**
   * The **\`writing-mode\`** CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (\`html\` element for HTML documents).
   *
   * **Syntax**: \`horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr\`
   *
   * **Initial value**: \`horizontal-tb\`
   */
  msWritingMode?: Property.WritingMode | undefined;
  /**
   * The CSS **\`align-content\`** property sets the distribution of space between and around content items along a flexbox's cross-axis or a grid's block axis.
   *
   * **Syntax**: \`normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>\`
   *
   * **Initial value**: \`normal\`
   */
  WebkitAlignContent?: Property.AlignContent | undefined;
  /**
   * The CSS **\`align-items\`** property sets the \`align-self\` value on all direct children as a group. In Flexbox, it controls the alignment of items on the Cross Axis. In Grid Layout, it controls the alignment of items on the Block Axis within their grid area.
   *
   * **Syntax**: \`normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]\`
   *
   * **Initial value**: \`normal\`
   */
  WebkitAlignItems?: Property.AlignItems | undefined;
  /**
   * The **\`align-self\`** CSS property overrides a grid or flex item's \`align-items\` value. In Grid, it aligns the item inside the\xA0grid area. In Flexbox, it aligns the item on the cross axis.
   *
   * **Syntax**: \`auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>\`
   *
   * **Initial value**: \`auto\`
   */
  WebkitAlignSelf?: Property.AlignSelf | undefined;
  /**
   * The **\`animation-delay\`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  WebkitAnimationDelay?: Property.AnimationDelay<TTime> | undefined;
  /**
   * The **\`animation-direction\`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.
   *
   * **Syntax**: \`<single-animation-direction>#\`
   *
   * **Initial value**: \`normal\`
   */
  WebkitAnimationDirection?: Property.AnimationDirection | undefined;
  /**
   * The **\`animation-duration\`** CSS property sets the length of time that an animation takes to complete one cycle.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  WebkitAnimationDuration?: Property.AnimationDuration<TTime> | undefined;
  /**
   * The **\`animation-fill-mode\`** CSS property sets how a CSS animation applies styles to its target before and after its execution.
   *
   * **Syntax**: \`<single-animation-fill-mode>#\`
   *
   * **Initial value**: \`none\`
   */
  WebkitAnimationFillMode?: Property.AnimationFillMode | undefined;
  /**
   * The **\`animation-iteration-count\`** CSS property sets the number of times an animation sequence should be played before stopping.
   *
   * **Syntax**: \`<single-animation-iteration-count>#\`
   *
   * **Initial value**: \`1\`
   */
  WebkitAnimationIterationCount?: Property.AnimationIterationCount | undefined;
  /**
   * The **\`animation-name\`** CSS property specifies the names of one or more \`@keyframes\` at-rules describing the animation or animations to apply to the element.
   *
   * **Syntax**: \`[ none | <keyframes-name> ]#\`
   *
   * **Initial value**: \`none\`
   */
  WebkitAnimationName?: Property.AnimationName | undefined;
  /**
   * The **\`animation-play-state\`** CSS property sets whether an animation is running or paused.
   *
   * **Syntax**: \`<single-animation-play-state>#\`
   *
   * **Initial value**: \`running\`
   */
  WebkitAnimationPlayState?: Property.AnimationPlayState | undefined;
  /**
   * The **\`animation-timing-function\`** CSS property sets how an animation progresses through the duration of each cycle.
   *
   * **Syntax**: \`<easing-function>#\`
   *
   * **Initial value**: \`ease\`
   */
  WebkitAnimationTimingFunction?: Property.AnimationTimingFunction | undefined;
  /**
   * The \`**appearance**\` CSS property is used to display an element using platform-native styling, based on the operating system's theme. The **\`-moz-appearance\`** and **\`-webkit-appearance\`** properties are non-standard versions of this property, used (respectively) by Gecko (Firefox) and by WebKit-based (e.g., Safari) and Blink-based (e.g., Chrome, Opera) browsers to achieve the same thing. Note that Firefox and Edge also support **\`-webkit-appearance\`**, for compatibility reasons.
   *
   * **Syntax**: \`none | button | button-bevel | caret | checkbox | default-button | inner-spin-button | listbox | listitem | media-controls-background | media-controls-fullscreen-background | media-current-time-display | media-enter-fullscreen-button | media-exit-fullscreen-button | media-fullscreen-button | media-mute-button | media-overlay-play-button | media-play-button | media-seek-back-button | media-seek-forward-button | media-slider | media-sliderthumb | media-time-remaining-display | media-toggle-closed-captions-button | media-volume-slider | media-volume-slider-container | media-volume-sliderthumb | menulist | menulist-button | menulist-text | menulist-textfield | meter | progress-bar | progress-bar-value | push-button | radio | searchfield | searchfield-cancel-button | searchfield-decoration | searchfield-results-button | searchfield-results-decoration | slider-horizontal | slider-vertical | sliderthumb-horizontal | sliderthumb-vertical | square-button | textarea | textfield | -apple-pay-button\`
   *
   * **Initial value**: \`none\` (but this value is overridden in the user agent CSS)
   */
  WebkitAppearance?: Property.WebkitAppearance | undefined;
  /**
   * The **\`backdrop-filter\`** CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything _behind_ the element, to see the effect you must make the element or its background at least partially transparent.
   *
   * **Syntax**: \`none | <filter-function-list>\`
   *
   * **Initial value**: \`none\`
   */
  WebkitBackdropFilter?: Property.BackdropFilter | undefined;
  /**
   * The **\`backface-visibility\`** CSS property sets whether the back face of an element is visible when turned towards the user.
   *
   * **Syntax**: \`visible | hidden\`
   *
   * **Initial value**: \`visible\`
   */
  WebkitBackfaceVisibility?: Property.BackfaceVisibility | undefined;
  /**
   * The **\`background-clip\`** CSS property sets whether an element's background extends underneath its border box, padding box, or content box.
   *
   * **Syntax**: \`<box>#\`
   *
   * **Initial value**: \`border-box\`
   */
  WebkitBackgroundClip?: Property.BackgroundClip | undefined;
  /**
   * The **\`background-origin\`** CSS property sets the background's origin: from the border start, inside the border, or inside the padding.
   *
   * **Syntax**: \`<box>#\`
   *
   * **Initial value**: \`padding-box\`
   */
  WebkitBackgroundOrigin?: Property.BackgroundOrigin | undefined;
  /**
   * The **\`background-size\`** CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.
   *
   * **Syntax**: \`<bg-size>#\`
   *
   * **Initial value**: \`auto auto\`
   */
  WebkitBackgroundSize?: Property.BackgroundSize<TLength> | undefined;
  /**
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   */
  WebkitBorderBeforeColor?: Property.WebkitBorderBeforeColor | undefined;
  /**
   * **Syntax**: \`<'border-style'>\`
   *
   * **Initial value**: \`none\`
   */
  WebkitBorderBeforeStyle?: Property.WebkitBorderBeforeStyle | undefined;
  /**
   * **Syntax**: \`<'border-width'>\`
   *
   * **Initial value**: \`medium\`
   */
  WebkitBorderBeforeWidth?: Property.WebkitBorderBeforeWidth<TLength> | undefined;
  /**
   * The **\`border-bottom-left-radius\`** CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   */
  WebkitBorderBottomLeftRadius?: Property.BorderBottomLeftRadius<TLength> | undefined;
  /**
   * The **\`border-bottom-right-radius\`** CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   */
  WebkitBorderBottomRightRadius?: Property.BorderBottomRightRadius<TLength> | undefined;
  /**
   * The **\`border-image-slice\`** CSS property divides the image specified by \`border-image-source\` into regions. These regions form the components of an element's border image.
   *
   * **Syntax**: \`<number-percentage>{1,4} && fill?\`
   *
   * **Initial value**: \`100%\`
   */
  WebkitBorderImageSlice?: Property.BorderImageSlice | undefined;
  /**
   * The **\`border-top-left-radius\`** CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   */
  WebkitBorderTopLeftRadius?: Property.BorderTopLeftRadius<TLength> | undefined;
  /**
   * The **\`border-top-right-radius\`** CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   */
  WebkitBorderTopRightRadius?: Property.BorderTopRightRadius<TLength> | undefined;
  /**
   * The **\`box-decoration-break\`** CSS property specifies how an element's fragments should be rendered when broken across multiple lines, columns, or pages.
   *
   * **Syntax**: \`slice | clone\`
   *
   * **Initial value**: \`slice\`
   */
  WebkitBoxDecorationBreak?: Property.BoxDecorationBreak | undefined;
  /**
   * The **\`-webkit-box-reflect\`** CSS property lets you reflect the content of an element in one specific direction.
   *
   * **Syntax**: \`[ above | below | right | left ]? <length>? <image>?\`
   *
   * **Initial value**: \`none\`
   */
  WebkitBoxReflect?: Property.WebkitBoxReflect<TLength> | undefined;
  /**
   * The **\`box-shadow\`** CSS property adds shadow effects around an element's frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color.
   *
   * **Syntax**: \`none | <shadow>#\`
   *
   * **Initial value**: \`none\`
   */
  WebkitBoxShadow?: Property.BoxShadow | undefined;
  /**
   * The **\`box-sizing\`** CSS property sets how the total width and height of an element is calculated.
   *
   * **Syntax**: \`content-box | border-box\`
   *
   * **Initial value**: \`content-box\`
   */
  WebkitBoxSizing?: Property.BoxSizing | undefined;
  /**
   * The \`**clip-path**\` CSS property creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden.
   *
   * **Syntax**: \`<clip-source> | [ <basic-shape> || <geometry-box> ] | none\`
   *
   * **Initial value**: \`none\`
   */
  WebkitClipPath?: Property.ClipPath | undefined;
  /**
   * The **\`column-count\`** CSS property breaks an element's content into the specified number of columns.
   *
   * **Syntax**: \`<integer> | auto\`
   *
   * **Initial value**: \`auto\`
   */
  WebkitColumnCount?: Property.ColumnCount | undefined;
  /**
   * The **\`column-fill\`** CSS property controls how an element's contents are balanced when broken into columns.
   *
   * **Syntax**: \`auto | balance | balance-all\`
   *
   * **Initial value**: \`balance\`
   */
  WebkitColumnFill?: Property.ColumnFill | undefined;
  /**
   * The **\`column-gap\`** CSS property sets the size of the gap (gutter) between an element's columns.
   *
   * **Syntax**: \`normal | <length-percentage>\`
   *
   * **Initial value**: \`normal\`
   */
  WebkitColumnGap?: Property.ColumnGap<TLength> | undefined;
  /**
   * The **\`column-rule-color\`** CSS property sets the color of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   */
  WebkitColumnRuleColor?: Property.ColumnRuleColor | undefined;
  /**
   * The **\`column-rule-style\`** CSS property sets the style of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<'border-style'>\`
   *
   * **Initial value**: \`none\`
   */
  WebkitColumnRuleStyle?: Property.ColumnRuleStyle | undefined;
  /**
   * The **\`column-rule-width\`** CSS property sets the width of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<'border-width'>\`
   *
   * **Initial value**: \`medium\`
   */
  WebkitColumnRuleWidth?: Property.ColumnRuleWidth<TLength> | undefined;
  /**
   * The **\`column-span\`** CSS property makes it possible for an element to span across all columns when its value is set to \`all\`.
   *
   * **Syntax**: \`none | all\`
   *
   * **Initial value**: \`none\`
   */
  WebkitColumnSpan?: Property.ColumnSpan | undefined;
  /**
   * The **\`column-width\`** CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the \`column-width\` value. If the width of the container is narrower than the specified value, the single column's width will be smaller than the declared column width.
   *
   * **Syntax**: \`<length> | auto\`
   *
   * **Initial value**: \`auto\`
   */
  WebkitColumnWidth?: Property.ColumnWidth<TLength> | undefined;
  /**
   * The **\`filter\`** CSS property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders.
   *
   * **Syntax**: \`none | <filter-function-list>\`
   *
   * **Initial value**: \`none\`
   */
  WebkitFilter?: Property.Filter | undefined;
  /**
   * The **\`flex-basis\`** CSS property sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with \`box-sizing\`.
   *
   * **Syntax**: \`content | <'width'>\`
   *
   * **Initial value**: \`auto\`
   */
  WebkitFlexBasis?: Property.FlexBasis<TLength> | undefined;
  /**
   * The **\`flex-direction\`** CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).
   *
   * **Syntax**: \`row | row-reverse | column | column-reverse\`
   *
   * **Initial value**: \`row\`
   */
  WebkitFlexDirection?: Property.FlexDirection | undefined;
  /**
   * The **\`flex-grow\`** CSS\xA0property sets the flex grow factor of a flex item main size.
   *
   * **Syntax**: \`<number>\`
   *
   * **Initial value**: \`0\`
   */
  WebkitFlexGrow?: Property.FlexGrow | undefined;
  /**
   * The **\`flex-shrink\`** CSS property sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to \`flex-shrink\`.
   *
   * **Syntax**: \`<number>\`
   *
   * **Initial value**: \`1\`
   */
  WebkitFlexShrink?: Property.FlexShrink | undefined;
  /**
   * The **\`flex-wrap\`** CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines. If wrapping is allowed, it sets the direction that lines are stacked.
   *
   * **Syntax**: \`nowrap | wrap | wrap-reverse\`
   *
   * **Initial value**: \`nowrap\`
   */
  WebkitFlexWrap?: Property.FlexWrap | undefined;
  /**
   * The **\`font-feature-settings\`** CSS property controls advanced typographic features in OpenType fonts.
   *
   * **Syntax**: \`normal | <feature-tag-value>#\`
   *
   * **Initial value**: \`normal\`
   */
  WebkitFontFeatureSettings?: Property.FontFeatureSettings | undefined;
  /**
   * The **\`font-kerning\`** CSS property sets the use of the kerning information stored in a font.
   *
   * **Syntax**: \`auto | normal | none\`
   *
   * **Initial value**: \`auto\`
   */
  WebkitFontKerning?: Property.FontKerning | undefined;
  /**
   * The **\`font-smooth\`** CSS property controls the application of anti-aliasing when fonts are rendered.
   *
   * **Syntax**: \`auto | never | always | <absolute-size> | <length>\`
   *
   * **Initial value**: \`auto\`
   */
  WebkitFontSmoothing?: Property.FontSmooth<TLength> | undefined;
  /**
   * The **\`font-variant-ligatures\`** CSS property controls which ligatures and contextual forms are used in textual content of the elements it applies to. This leads to more harmonized forms in the resulting text.
   *
   * **Syntax**: \`normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]\`
   *
   * **Initial value**: \`normal\`
   */
  WebkitFontVariantLigatures?: Property.FontVariantLigatures | undefined;
  /**
   * The **\`hyphens\`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.
   *
   * **Syntax**: \`none | manual | auto\`
   *
   * **Initial value**: \`manual\`
   */
  WebkitHyphens?: Property.Hyphens | undefined;
  /**
   * The \`initial-letter\` CSS property sets styling for dropped, raised, and sunken initial letters.
   *
   * **Syntax**: \`normal | [ <number> <integer>? ]\`
   *
   * **Initial value**: \`normal\`
   */
  WebkitInitialLetter?: Property.InitialLetter | undefined;
  /**
   * The CSS **\`justify-content\`** property defines how the browser distributes space between and around content items along the main-axis of a flex container, and the inline axis of a grid container.
   *
   * **Syntax**: \`normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]\`
   *
   * **Initial value**: \`normal\`
   */
  WebkitJustifyContent?: Property.JustifyContent | undefined;
  /**
   * The **\`line-break\`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.
   *
   * **Syntax**: \`auto | loose | normal | strict | anywhere\`
   *
   * **Initial value**: \`auto\`
   */
  WebkitLineBreak?: Property.LineBreak | undefined;
  /**
   * The **\`-webkit-line-clamp\`** CSS property allows limiting of the contents of a block container to the specified number of lines.
   *
   * **Syntax**: \`none | <integer>\`
   *
   * **Initial value**: \`none\`
   */
  WebkitLineClamp?: Property.WebkitLineClamp | undefined;
  /**
   * The **\`margin-inline-end\`** CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. In other words, it corresponds to the \`margin-top\`, \`margin-right\`, \`margin-bottom\` or \`margin-left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'margin-left'>\`
   *
   * **Initial value**: \`0\`
   */
  WebkitMarginEnd?: Property.MarginInlineEnd<TLength> | undefined;
  /**
   * The **\`margin-inline-start\`** CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`margin-top\`, \`margin-right\`, \`margin-bottom\`, or \`margin-left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'margin-left'>\`
   *
   * **Initial value**: \`0\`
   */
  WebkitMarginStart?: Property.MarginInlineStart<TLength> | undefined;
  /**
   * If a \`-webkit-mask-image\` is specified, \`-webkit-mask-attachment\` determines whether the mask image's position is fixed within the viewport, or scrolls along with its containing block.
   *
   * **Syntax**: \`<attachment>#\`
   *
   * **Initial value**: \`scroll\`
   */
  WebkitMaskAttachment?: Property.WebkitMaskAttachment | undefined;
  /**
   * The **\`mask-border-outset\`** CSS property specifies the distance by which an element's mask border is set out from its border box.
   *
   * **Syntax**: \`[ <length> | <number> ]{1,4}\`
   *
   * **Initial value**: \`0\`
   */
  WebkitMaskBoxImageOutset?: Property.MaskBorderOutset<TLength> | undefined;
  /**
   * The **\`mask-border-repeat\`** CSS property sets how the edge regions of a source image are adjusted to fit the dimensions of an element's mask border.
   *
   * **Syntax**: \`[ stretch | repeat | round | space ]{1,2}\`
   *
   * **Initial value**: \`stretch\`
   */
  WebkitMaskBoxImageRepeat?: Property.MaskBorderRepeat | undefined;
  /**
   * The **\`mask-border-slice\`** CSS property divides the image set by \`mask-border-source\` into regions. These regions are used to form the components of an element's mask border.
   *
   * **Syntax**: \`<number-percentage>{1,4} fill?\`
   *
   * **Initial value**: \`0\`
   */
  WebkitMaskBoxImageSlice?: Property.MaskBorderSlice | undefined;
  /**
   * The **\`mask-border-source\`** CSS property sets the source image used to create an element's mask border.
   *
   * **Syntax**: \`none | <image>\`
   *
   * **Initial value**: \`none\`
   */
  WebkitMaskBoxImageSource?: Property.MaskBorderSource | undefined;
  /**
   * The **\`mask-border-width\`** CSS property sets the width of an element's mask border.
   *
   * **Syntax**: \`[ <length-percentage> | <number> | auto ]{1,4}\`
   *
   * **Initial value**: \`auto\`
   */
  WebkitMaskBoxImageWidth?: Property.MaskBorderWidth<TLength> | undefined;
  /**
   * The **\`mask-clip\`** CSS property determines the area which is affected by a mask. The painted content of an element must be restricted to this area.
   *
   * **Syntax**: \`[ <box> | border | padding | content | text ]#\`
   *
   * **Initial value**: \`border\`
   */
  WebkitMaskClip?: Property.WebkitMaskClip | undefined;
  /**
   * The **\`-webkit-mask-composite\`** property specifies the manner in which multiple mask images applied to the same element are composited with one another. Mask images are composited in the opposite order that they are declared with the \`-webkit-mask-image\` property.
   *
   * **Syntax**: \`<composite-style>#\`
   *
   * **Initial value**: \`source-over\`
   */
  WebkitMaskComposite?: Property.WebkitMaskComposite | undefined;
  /**
   * The **\`mask-image\`** CSS property sets the image that is used as mask layer for an element.
   *
   * **Syntax**: \`<mask-reference>#\`
   *
   * **Initial value**: \`none\`
   */
  WebkitMaskImage?: Property.WebkitMaskImage | undefined;
  /**
   * The **\`mask-origin\`** CSS property sets the origin of a mask.
   *
   * **Syntax**: \`[ <box> | border | padding | content ]#\`
   *
   * **Initial value**: \`padding\`
   */
  WebkitMaskOrigin?: Property.WebkitMaskOrigin | undefined;
  /**
   * The **\`mask-position\`** CSS property sets the initial position, relative to the mask position layer set by \`mask-origin\`, for each defined mask image.
   *
   * **Syntax**: \`<position>#\`
   *
   * **Initial value**: \`0% 0%\`
   */
  WebkitMaskPosition?: Property.WebkitMaskPosition<TLength> | undefined;
  /**
   * The \`-webkit-mask-position-x\` CSS property sets the initial horizontal position of a mask image.
   *
   * **Syntax**: \`[ <length-percentage> | left | center | right ]#\`
   *
   * **Initial value**: \`0%\`
   */
  WebkitMaskPositionX?: Property.WebkitMaskPositionX<TLength> | undefined;
  /**
   * The \`-webkit-mask-position-y\` CSS property sets the initial vertical position of a mask image.
   *
   * **Syntax**: \`[ <length-percentage> | top | center | bottom ]#\`
   *
   * **Initial value**: \`0%\`
   */
  WebkitMaskPositionY?: Property.WebkitMaskPositionY<TLength> | undefined;
  /**
   * The **\`mask-repeat\`** CSS property sets how mask images are repeated. A mask image can be repeated along the horizontal axis, the vertical axis, both axes, or not repeated at all.
   *
   * **Syntax**: \`<repeat-style>#\`
   *
   * **Initial value**: \`repeat\`
   */
  WebkitMaskRepeat?: Property.WebkitMaskRepeat | undefined;
  /**
   * The \`-webkit-mask-repeat-x\` property specifies whether and how a mask image is repeated (tiled) horizontally.
   *
   * **Syntax**: \`repeat | no-repeat | space | round\`
   *
   * **Initial value**: \`repeat\`
   */
  WebkitMaskRepeatX?: Property.WebkitMaskRepeatX | undefined;
  /**
   * The \`-webkit-mask-repeat-y\` property sets whether and how a mask image is repeated (tiled) vertically.
   *
   * **Syntax**: \`repeat | no-repeat | space | round\`
   *
   * **Initial value**: \`repeat\`
   */
  WebkitMaskRepeatY?: Property.WebkitMaskRepeatY | undefined;
  /**
   * The **\`mask-size\`** CSS property specifies the sizes of the mask images. The size of the image can be fully or partially constrained in order to preserve its intrinsic ratio.
   *
   * **Syntax**: \`<bg-size>#\`
   *
   * **Initial value**: \`auto auto\`
   */
  WebkitMaskSize?: Property.WebkitMaskSize<TLength> | undefined;
  /**
   * The **\`max-inline-size\`** CSS property defines the horizontal or vertical maximum size of an element's block, depending on its writing mode. It corresponds to either the \`max-width\` or the \`max-height\` property, depending on the value of \`writing-mode\`.
   *
   * **Syntax**: \`<'max-width'>\`
   *
   * **Initial value**: \`0\`
   */
  WebkitMaxInlineSize?: Property.MaxInlineSize<TLength> | undefined;
  /**
   * The **\`order\`** CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending \`order\` value and then by their source code order.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`0\`
   */
  WebkitOrder?: Property.Order | undefined;
  /**
   * The \`-webkit-overflow-scrolling\` CSS property controls whether or not touch devices use momentum-based scrolling for a given element.
   *
   * **Syntax**: \`auto | touch\`
   *
   * **Initial value**: \`auto\`
   */
  WebkitOverflowScrolling?: Property.WebkitOverflowScrolling | undefined;
  /**
   * The **\`padding-inline-end\`** CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>\`
   *
   * **Initial value**: \`0\`
   */
  WebkitPaddingEnd?: Property.PaddingInlineEnd<TLength> | undefined;
  /**
   * The **\`padding-inline-start\`** CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>\`
   *
   * **Initial value**: \`0\`
   */
  WebkitPaddingStart?: Property.PaddingInlineStart<TLength> | undefined;
  /**
   * The **\`perspective\`** CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.
   *
   * **Syntax**: \`none | <length>\`
   *
   * **Initial value**: \`none\`
   */
  WebkitPerspective?: Property.Perspective<TLength> | undefined;
  /**
   * The **\`perspective-origin\`** CSS property determines the position at which the viewer is looking. It is used as the _vanishing point_ by the \`perspective\` property.
   *
   * **Syntax**: \`<position>\`
   *
   * **Initial value**: \`50% 50%\`
   */
  WebkitPerspectiveOrigin?: Property.PerspectiveOrigin<TLength> | undefined;
  /**
   * The **\`color-adjust\`** CSS property sets what, if anything, the user agent may do to optimize the appearance of the element on the output device. By default, the browser is allowed to make any adjustments to the element's appearance it determines to be necessary and prudent given the type and capabilities of the output device.
   *
   * **Syntax**: \`economy | exact\`
   *
   * **Initial value**: \`economy\`
   */
  WebkitPrintColorAdjust?: Property.ColorAdjust | undefined;
  /**
   * The \`**ruby-position**\` CSS property defines the position of a ruby element relatives to its base element. It can be position over the element (\`over\`), under it (\`under\`), or between the characters, on their right side (\`inter-character\`).
   *
   * **Syntax**: \`[ alternate || [ over | under ] ] | inter-character\`
   *
   * **Initial value**: \`alternate\`
   */
  WebkitRubyPosition?: Property.RubyPosition | undefined;
  /**
   * The **\`scroll-snap-type\`** CSS property sets how strictly snap points are enforced on the scroll container in case there is one.
   *
   * **Syntax**: \`none | [ x | y | block | inline | both ] [ mandatory | proximity ]?\`
   *
   * **Initial value**: \`none\`
   */
  WebkitScrollSnapType?: Property.ScrollSnapType | undefined;
  /**
   * The **\`shape-margin\`** CSS property sets a margin for a CSS shape created using \`shape-outside\`.
   *
   * **Syntax**: \`<length-percentage>\`
   *
   * **Initial value**: \`0\`
   */
  WebkitShapeMargin?: Property.ShapeMargin<TLength> | undefined;
  /**
   * **\`-webkit-tap-highlight-color\`** is a non-standard CSS property that sets the color of the highlight that appears over a link while it's being tapped. The highlighting indicates to the user\xA0that their tap is being successfully recognized, and indicates which element they're tapping on.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`black\`
   */
  WebkitTapHighlightColor?: Property.WebkitTapHighlightColor | undefined;
  /**
   * The **\`text-combine-upright\`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.
   *
   * **Syntax**: \`none | all | [ digits <integer>? ]\`
   *
   * **Initial value**: \`none\`
   */
  WebkitTextCombine?: Property.TextCombineUpright | undefined;
  /**
   * The **\`text-decoration-color\`** CSS property sets the color of decorations added to text by \`text-decoration-line\`.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   */
  WebkitTextDecorationColor?: Property.TextDecorationColor | undefined;
  /**
   * The **\`text-decoration-line\`** CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline.
   *
   * **Syntax**: \`none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error\`
   *
   * **Initial value**: \`none\`
   */
  WebkitTextDecorationLine?: Property.TextDecorationLine | undefined;
  /**
   * The **\`text-decoration-skip\`** CSS property sets what parts of an element\u2019s content any text decoration affecting the element must skip over. It controls all text decoration lines drawn by the element and also any text decoration lines drawn by its ancestors.
   *
   * **Syntax**: \`none | [ objects || [ spaces | [ leading-spaces || trailing-spaces ] ] || edges || box-decoration ]\`
   *
   * **Initial value**: \`objects\`
   */
  WebkitTextDecorationSkip?: Property.TextDecorationSkip | undefined;
  /**
   * The **\`text-decoration-style\`** CSS property sets the style of the lines specified by \`text-decoration-line\`. The style applies to all lines that are set with \`text-decoration-line\`.
   *
   * **Syntax**: \`solid | double | dotted | dashed | wavy\`
   *
   * **Initial value**: \`solid\`
   */
  WebkitTextDecorationStyle?: Property.TextDecorationStyle | undefined;
  /**
   * The **\`text-emphasis-color\`** CSS property sets the color of emphasis marks. This value can also be set using the \`text-emphasis\` shorthand.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   */
  WebkitTextEmphasisColor?: Property.TextEmphasisColor | undefined;
  /**
   * The **\`text-emphasis-position\`** CSS property sets where emphasis marks are drawn. Like ruby text, if there isn't enough room for emphasis marks, the line height is increased.
   *
   * **Syntax**: \`[ over | under ] && [ right | left ]\`
   *
   * **Initial value**: \`over right\`
   */
  WebkitTextEmphasisPosition?: Property.TextEmphasisPosition | undefined;
  /**
   * The **\`text-emphasis-style\`** CSS property sets the appearance of emphasis marks. It can also be set, and reset, using the \`text-emphasis\` shorthand.
   *
   * **Syntax**: \`none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>\`
   *
   * **Initial value**: \`none\`
   */
  WebkitTextEmphasisStyle?: Property.TextEmphasisStyle | undefined;
  /**
   * The **\`-webkit-text-fill-color\`** CSS property specifies the fill color of characters of text. If this property is not set, the value of the \`color\` property is used.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   */
  WebkitTextFillColor?: Property.WebkitTextFillColor | undefined;
  /**
   * The **\`text-orientation\`** CSS property sets the orientation of the text characters in a line. It only affects text in vertical mode (when \`writing-mode\` is not \`horizontal-tb\`). It is useful for controlling the display of languages that use vertical script, and also for making vertical table headers.
   *
   * **Syntax**: \`mixed | upright | sideways\`
   *
   * **Initial value**: \`mixed\`
   */
  WebkitTextOrientation?: Property.TextOrientation | undefined;
  /**
   * The **\`text-size-adjust\`** CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.
   *
   * **Syntax**: \`none | auto | <percentage>\`
   *
   * **Initial value**: \`auto\` for smartphone browsers supporting inflation, \`none\` in other cases (and then not modifiable).
   */
  WebkitTextSizeAdjust?: Property.TextSizeAdjust | undefined;
  /**
   * The **\`-webkit-text-stroke-color\`** CSS property specifies the stroke color of characters of text. If this property is not set, the value of the \`color\` property is used.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   */
  WebkitTextStrokeColor?: Property.WebkitTextStrokeColor | undefined;
  /**
   * The **\`-webkit-text-stroke-width\`** CSS property specifies the width of the stroke for text.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   */
  WebkitTextStrokeWidth?: Property.WebkitTextStrokeWidth<TLength> | undefined;
  /**
   * The **\`text-underline-position\`** CSS property specifies the position of the underline which is set using the \`text-decoration\` property's \`underline\` value.
   *
   * **Syntax**: \`auto | from-font | [ under || [ left | right ] ]\`
   *
   * **Initial value**: \`auto\`
   */
  WebkitTextUnderlinePosition?: Property.TextUnderlinePosition | undefined;
  /**
   * The \`-webkit-touch-callout\` CSS property controls the display of the default callout shown when you touch and hold a touch target.
   *
   * **Syntax**: \`default | none\`
   *
   * **Initial value**: \`default\`
   */
  WebkitTouchCallout?: Property.WebkitTouchCallout | undefined;
  /**
   * The **\`transform\`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.
   *
   * **Syntax**: \`none | <transform-list>\`
   *
   * **Initial value**: \`none\`
   */
  WebkitTransform?: Property.Transform | undefined;
  /**
   * The **\`transform-origin\`** CSS property sets the origin for an element's transformations.
   *
   * **Syntax**: \`[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?\`
   *
   * **Initial value**: \`50% 50% 0\`
   */
  WebkitTransformOrigin?: Property.TransformOrigin<TLength> | undefined;
  /**
   * The **\`transform-style\`** CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element.
   *
   * **Syntax**: \`flat | preserve-3d\`
   *
   * **Initial value**: \`flat\`
   */
  WebkitTransformStyle?: Property.TransformStyle | undefined;
  /**
   * The **\`transition-delay\`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  WebkitTransitionDelay?: Property.TransitionDelay<TTime> | undefined;
  /**
   * The **\`transition-duration\`** CSS property sets the length of time a transition animation should take to complete. By default, the value is \`0s\`, meaning that no animation will occur.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  WebkitTransitionDuration?: Property.TransitionDuration<TTime> | undefined;
  /**
   * The **\`transition-property\`** CSS property sets the CSS properties to which a transition effect should be applied.
   *
   * **Syntax**: \`none | <single-transition-property>#\`
   *
   * **Initial value**: all
   */
  WebkitTransitionProperty?: Property.TransitionProperty | undefined;
  /**
   * The **\`transition-timing-function\`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.
   *
   * **Syntax**: \`<easing-function>#\`
   *
   * **Initial value**: \`ease\`
   */
  WebkitTransitionTimingFunction?: Property.TransitionTimingFunction | undefined;
  /**
   * **Syntax**: \`read-only | read-write | read-write-plaintext-only\`
   *
   * **Initial value**: \`read-only\`
   */
  WebkitUserModify?: Property.WebkitUserModify | undefined;
  /**
   * The \`**user-select**\` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.
   *
   * **Syntax**: \`auto | text | none | contain | all\`
   *
   * **Initial value**: \`auto\`
   */
  WebkitUserSelect?: Property.UserSelect | undefined;
  /**
   * The **\`writing-mode\`** CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (\`html\` element for HTML documents).
   *
   * **Syntax**: \`horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr\`
   *
   * **Initial value**: \`horizontal-tb\`
   */
  WebkitWritingMode?: Property.WritingMode | undefined;
}

export interface VendorShorthandProperties<TLength = (string & {}) | 0, TTime = string & {}> {
  /**
   * The **\`animation\`** shorthand CSS property applies an animation between styles. It is a shorthand for \`animation-name\`, \`animation-duration\`, \`animation-timing-function\`, \`animation-delay\`, \`animation-iteration-count\`, \`animation-direction\`, \`animation-fill-mode\`, and \`animation-play-state\`.
   *
   * **Syntax**: \`<single-animation>#\`
   */
  MozAnimation?: Property.Animation<TTime> | undefined;
  /**
   * The **\`border-image\`** CSS property draws an image around a given element. It replaces the element's regular border.
   *
   * **Syntax**: \`<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>\`
   */
  MozBorderImage?: Property.BorderImage | undefined;
  /**
   * The **\`column-rule\`**\xA0shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>\`
   */
  MozColumnRule?: Property.ColumnRule<TLength> | undefined;
  /**
   * The **\`columns\`** CSS shorthand property sets the number of columns to use when drawing an element's contents, as well as those columns' widths.
   *
   * **Syntax**: \`<'column-width'> || <'column-count'>\`
   */
  MozColumns?: Property.Columns<TLength> | undefined;
  /**
   * The **\`transition\`** CSS property is a shorthand property for \`transition-property\`, \`transition-duration\`, \`transition-timing-function\`, and \`transition-delay\`.
   *
   * **Syntax**: \`<single-transition>#\`
   */
  MozTransition?: Property.Transition<TTime> | undefined;
  /**
   * The **\`-ms-content-zoom-limit\`** CSS shorthand property is a Microsoft extension that specifies values for the \`-ms-content-zoom-limit-min\` and \`-ms-content-zoom-limit-max\` properties.
   *
   * **Syntax**: \`<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>\`
   */
  msContentZoomLimit?: Property.MsContentZoomLimit | undefined;
  /**
   * The **\`-ms-content-zoom-snap\`** CSS shorthand property is a Microsoft extension that specifies values for the \`-ms-content-zoom-snap-type\` and \`-ms-content-zoom-snap-points\` properties.
   *
   * **Syntax**: \`<'-ms-content-zoom-snap-type'> || <'-ms-content-zoom-snap-points'>\`
   */
  msContentZoomSnap?: Property.MsContentZoomSnap | undefined;
  /**
   * The **\`flex\`** CSS shorthand property sets how a flex _item_ will grow or shrink to fit the space available in its flex container.
   *
   * **Syntax**: \`none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\`
   */
  msFlex?: Property.Flex<TLength> | undefined;
  /**
   * The **\\-ms-scroll-limit** CSS property is a Microsoft extension that specifies values for the \`-ms-scroll-limit-x-min\`, \`-ms-scroll-limit-y-min\`, \`-ms-scroll-limit-x-max\`, and \`-ms-scroll-limit-y-max\` properties.
   *
   * **Syntax**: \`<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>\`
   */
  msScrollLimit?: Property.MsScrollLimit | undefined;
  /**
   * The **\`-ms-scroll-snap-x\`** CSS shorthand property is a Microsoft extension that specifies values for the \`-ms-scroll-snap-type\` and \`-ms-scroll-snap-points-x\` properties.
   *
   * **Syntax**: \`<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>\`
   */
  msScrollSnapX?: Property.MsScrollSnapX | undefined;
  /**
   * The **\`-ms-scroll-snap-x\`** CSS shorthand property is a Microsoft extension that specifies values for the \`-ms-scroll-snap-type\` and \`-ms-scroll-snap-points-y\` properties.
   *
   * **Syntax**: \`<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>\`
   */
  msScrollSnapY?: Property.MsScrollSnapY | undefined;
  /**
   * The **\`transition\`** CSS property is a shorthand property for \`transition-property\`, \`transition-duration\`, \`transition-timing-function\`, and \`transition-delay\`.
   *
   * **Syntax**: \`<single-transition>#\`
   */
  msTransition?: Property.Transition<TTime> | undefined;
  /**
   * The **\`animation\`** shorthand CSS property applies an animation between styles. It is a shorthand for \`animation-name\`, \`animation-duration\`, \`animation-timing-function\`, \`animation-delay\`, \`animation-iteration-count\`, \`animation-direction\`, \`animation-fill-mode\`, and \`animation-play-state\`.
   *
   * **Syntax**: \`<single-animation>#\`
   */
  WebkitAnimation?: Property.Animation<TTime> | undefined;
  /**
   * The **\`-webkit-border-before\`** CSS property is a shorthand property for setting the individual logical block start border property values in a single place in the style sheet.
   *
   * **Syntax**: \`<'border-width'> || <'border-style'> || <color>\`
   */
  WebkitBorderBefore?: Property.WebkitBorderBefore<TLength> | undefined;
  /**
   * The **\`border-image\`** CSS property draws an image around a given element. It replaces the element's regular border.
   *
   * **Syntax**: \`<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>\`
   */
  WebkitBorderImage?: Property.BorderImage | undefined;
  /**
   * The **\`border-radius\`** CSS property rounds the corners of an element's outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.
   *
   * **Syntax**: \`<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?\`
   */
  WebkitBorderRadius?: Property.BorderRadius<TLength> | undefined;
  /**
   * The **\`column-rule\`**\xA0shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>\`
   */
  WebkitColumnRule?: Property.ColumnRule<TLength> | undefined;
  /**
   * The **\`columns\`** CSS shorthand property sets the number of columns to use when drawing an element's contents, as well as those columns' widths.
   *
   * **Syntax**: \`<'column-width'> || <'column-count'>\`
   */
  WebkitColumns?: Property.Columns<TLength> | undefined;
  /**
   * The **\`flex\`** CSS shorthand property sets how a flex _item_ will grow or shrink to fit the space available in its flex container.
   *
   * **Syntax**: \`none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\`
   */
  WebkitFlex?: Property.Flex<TLength> | undefined;
  /**
   * The **\`flex-flow\`** CSS shorthand property specifies the direction of a flex container, as well as its wrapping behavior.
   *
   * **Syntax**: \`<'flex-direction'> || <'flex-wrap'>\`
   */
  WebkitFlexFlow?: Property.FlexFlow | undefined;
  /**
   * The **\`mask\`** CSS shorthand property hides an element (partially or fully) by masking or clipping the image at specific points.
   *
   * **Syntax**: \`[ <mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || [ <box> | border | padding | content | text ] || [ <box> | border | padding | content ] ]#\`
   */
  WebkitMask?: Property.WebkitMask<TLength> | undefined;
  /**
   * The **\`mask-border\`** CSS shorthand property lets you create a mask along the edge of an element's border.
   *
   * **Syntax**: \`<'mask-border-source'> || <'mask-border-slice'> [ / <'mask-border-width'>? [ / <'mask-border-outset'> ]? ]? || <'mask-border-repeat'> || <'mask-border-mode'>\`
   */
  WebkitMaskBoxImage?: Property.MaskBorder | undefined;
  /**
   * The **\`text-emphasis\`** CSS property applies emphasis marks to text (except spaces and control characters). It is a shorthand for \`text-emphasis-style\` and \`text-emphasis-color\`.
   *
   * **Syntax**: \`<'text-emphasis-style'> || <'text-emphasis-color'>\`
   */
  WebkitTextEmphasis?: Property.TextEmphasis | undefined;
  /**
   * The **\`-webkit-text-stroke\`** CSS property specifies the width and color of strokes for text characters. This is a shorthand property for the longhand properties \`-webkit-text-stroke-width\` and \`-webkit-text-stroke-color\`.
   *
   * **Syntax**: \`<length> || <color>\`
   */
  WebkitTextStroke?: Property.WebkitTextStroke<TLength> | undefined;
  /**
   * The **\`transition\`** CSS property is a shorthand property for \`transition-property\`, \`transition-duration\`, \`transition-timing-function\`, and \`transition-delay\`.
   *
   * **Syntax**: \`<single-transition>#\`
   */
  WebkitTransition?: Property.Transition<TTime> | undefined;
}

export interface VendorProperties<TLength = (string & {}) | 0, TTime = string & {}> extends VendorLonghandProperties<TLength, TTime>, VendorShorthandProperties<TLength, TTime> {}

export interface ObsoleteProperties<TLength = (string & {}) | 0, TTime = string & {}> {
  /**
   * In combination with \`elevation\`, the **\`azimuth\`** CSS property enables different audio sources to be positioned spatially for aural presentation. This is important in that it provides a natural way to tell several voices apart, as each can be positioned to originate at a different location on the sound stage. Stereo output produce a lateral sound stage, while binaural headphones and multi-speaker setups allow for a fully three-dimensional stage.
   *
   * **Syntax**: \`<angle> | [ [ left-side | far-left | left | center-left | center | center-right | right | far-right | right-side ] || behind ] | leftwards | rightwards\`
   *
   * **Initial value**: \`center\`
   *
   * @deprecated
   */
  azimuth?: Property.Azimuth | undefined;
  /**
   * The **\`box-align\`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.
   *
   * **Syntax**: \`start | center | end | baseline | stretch\`
   *
   * **Initial value**: \`stretch\`
   *
   * @deprecated
   */
  boxAlign?: Property.BoxAlign | undefined;
  /**
   * The **\`box-direction\`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).
   *
   * **Syntax**: \`normal | reverse | inherit\`
   *
   * **Initial value**: \`normal\`
   *
   * @deprecated
   */
  boxDirection?: Property.BoxDirection | undefined;
  /**
   * The **\`-moz-box-flex\`** and **\`-webkit-box-flex\`** CSS properties specify how a \`-moz-box\` or \`-webkit-box\` grows to fill the box that contains it, in the direction of the containing box's layout.
   *
   * **Syntax**: \`<number>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  boxFlex?: Property.BoxFlex | undefined;
  /**
   * The **\`box-flex-group\`** CSS property assigns the flexbox's child elements to a flex group.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`1\`
   *
   * @deprecated
   */
  boxFlexGroup?: Property.BoxFlexGroup | undefined;
  /**
   * The **\`box-lines\`** CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).
   *
   * **Syntax**: \`single | multiple\`
   *
   * **Initial value**: \`single\`
   *
   * @deprecated
   */
  boxLines?: Property.BoxLines | undefined;
  /**
   * The **\`box-ordinal-group\`** CSS property assigns the flexbox's child elements to an ordinal group.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`1\`
   *
   * @deprecated
   */
  boxOrdinalGroup?: Property.BoxOrdinalGroup | undefined;
  /**
   * This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard. See flexbox for information about the current standard.
   *
   * **Syntax**: \`horizontal | vertical | inline-axis | block-axis | inherit\`
   *
   * **Initial value**: \`inline-axis\` (\`horizontal\` in XUL)
   *
   * @deprecated
   */
  boxOrient?: Property.BoxOrient | undefined;
  /**
   * The **\`-moz-box-pack\`** and **\`-webkit-box-pack\`** CSS properties specify how a \`-moz-box\` or \`-webkit-box\` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.
   *
   * **Syntax**: \`start | center | end | justify\`
   *
   * **Initial value**: \`start\`
   *
   * @deprecated
   */
  boxPack?: Property.BoxPack | undefined;
  /**
   * The **\`clip\`** CSS property defines a visible portion of an element. The \`clip\` property applies only to absolutely positioned elements \u2014 that is, elements with \`position:absolute\` or \`position:fixed\`.
   *
   * **Syntax**: \`<shape> | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  clip?: Property.Clip | undefined;
  /**
   * The **\`font-variant-alternates\`** CSS property controls the usage of alternate glyphs. These alternate glyphs may be referenced by alternative names defined in \`@font-feature-values\`.
   *
   * **Syntax**: \`normal | [ stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) ]\`
   *
   * **Initial value**: \`normal\`
   *
   * @deprecated
   */
  fontVariantAlternates?: Property.FontVariantAlternates | undefined;
  /**
   * The **\`column-gap\`** CSS property sets the size of the gap (gutter) between an element's columns.
   *
   * **Syntax**: \`<length-percentage>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  gridColumnGap?: Property.GridColumnGap<TLength> | undefined;
  /**
   * The **\`gap\`** CSS property sets the gaps (gutters) between rows and columns. It is a shorthand for \`row-gap\` and \`column-gap\`.
   *
   * **Syntax**: \`<'grid-row-gap'> <'grid-column-gap'>?\`
   *
   * @deprecated
   */
  gridGap?: Property.GridGap<TLength> | undefined;
  /**
   * The **\`row-gap\`** CSS property sets the size of the gap (gutter) between an element's grid rows.
   *
   * **Syntax**: \`<length-percentage>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  gridRowGap?: Property.GridRowGap<TLength> | undefined;
  /**
   * The **\`ime-mode\`** CSS property controls the state of the input method editor (IME) for text fields. This property is obsolete.
   *
   * **Syntax**: \`auto | normal | active | inactive | disabled\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  imeMode?: Property.ImeMode | undefined;
  /**
   * The **\`inset-inline\`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\` and \`bottom\`, or \`right\` and \`left\` properties depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>{1,2}\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  offsetBlock?: Property.InsetBlock<TLength> | undefined;
  /**
   * The **\`inset-block-end\`** CSS property defines the logical block end offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\`, \`right\`, \`bottom\`, or \`left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  offsetBlockEnd?: Property.InsetBlockEnd<TLength> | undefined;
  /**
   * The **\`inset-block-start\`** CSS property defines the logical block start offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\`, \`right\`, \`bottom\`, or \`left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  offsetBlockStart?: Property.InsetBlockStart<TLength> | undefined;
  /**
   * The **\`inset-inline\`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\` and \`bottom\`, or \`right\` and \`left\` properties depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>{1,2}\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  offsetInline?: Property.InsetInline<TLength> | undefined;
  /**
   * The **\`inset-inline-end\`** CSS property defines the logical inline end inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\`, \`right\`, \`bottom\`, or \`left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  offsetInlineEnd?: Property.InsetInlineEnd<TLength> | undefined;
  /**
   * The **\`inset-inline-start\`** CSS property defines the logical inline start inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\`, \`right\`, \`bottom\`, or \`left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  offsetInlineStart?: Property.InsetInlineStart<TLength> | undefined;
  /**
   * The **\`scroll-snap-coordinate\`** CSS property defines the x and y coordinate positions within an element that will align with its nearest ancestor scroll container's \`scroll-snap-destination\` for each respective axis.
   *
   * **Syntax**: \`none | <position>#\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  scrollSnapCoordinate?: Property.ScrollSnapCoordinate<TLength> | undefined;
  /**
   * The **\`scroll-snap-destination\`** CSS property defines the position in x and y coordinates within the scroll container's visual viewport which element snap points align with.
   *
   * **Syntax**: \`<position>\`
   *
   * **Initial value**: \`0px 0px\`
   *
   * @deprecated
   */
  scrollSnapDestination?: Property.ScrollSnapDestination<TLength> | undefined;
  /**
   * The **\`scroll-snap-points-x\`** CSS property defines the horizontal positioning of snap points within the content of the scroll container they are applied to.
   *
   * **Syntax**: \`none | repeat( <length-percentage> )\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  scrollSnapPointsX?: Property.ScrollSnapPointsX | undefined;
  /**
   * The **\`scroll-snap-points-y\`** CSS property defines the vertical positioning of snap points within the content of the scroll container they are applied to.
   *
   * **Syntax**: \`none | repeat( <length-percentage> )\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  scrollSnapPointsY?: Property.ScrollSnapPointsY | undefined;
  /**
   * The **\`scroll-snap-type-x\`** CSS property defines how strictly snap points are enforced on the horizontal axis of the scroll container in case there is one.
   *
   * **Syntax**: \`none | mandatory | proximity\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  scrollSnapTypeX?: Property.ScrollSnapTypeX | undefined;
  /**
   * The **\`scroll-snap-type-y\`** CSS property defines how strictly snap points are enforced on the vertical axis of the scroll container in case there is one.
   *
   * **Syntax**: \`none | mandatory | proximity\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  scrollSnapTypeY?: Property.ScrollSnapTypeY | undefined;
  /**
   * The **\`-ms-scrollbar-track-color\`** CSS property is a Microsoft extension that specifies the color of the track element of a scrollbar.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`Scrollbar\`
   *
   * @deprecated
   */
  scrollbarTrackColor?: Property.MsScrollbarTrackColor | undefined;
  /**
   * The **\`box-align\`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.
   *
   * **Syntax**: \`start | center | end | baseline | stretch\`
   *
   * **Initial value**: \`stretch\`
   *
   * @deprecated
   */
  KhtmlBoxAlign?: Property.BoxAlign | undefined;
  /**
   * The **\`box-direction\`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).
   *
   * **Syntax**: \`normal | reverse | inherit\`
   *
   * **Initial value**: \`normal\`
   *
   * @deprecated
   */
  KhtmlBoxDirection?: Property.BoxDirection | undefined;
  /**
   * The **\`-moz-box-flex\`** and **\`-webkit-box-flex\`** CSS properties specify how a \`-moz-box\` or \`-webkit-box\` grows to fill the box that contains it, in the direction of the containing box's layout.
   *
   * **Syntax**: \`<number>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  KhtmlBoxFlex?: Property.BoxFlex | undefined;
  /**
   * The **\`box-flex-group\`** CSS property assigns the flexbox's child elements to a flex group.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`1\`
   *
   * @deprecated
   */
  KhtmlBoxFlexGroup?: Property.BoxFlexGroup | undefined;
  /**
   * The **\`box-lines\`** CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).
   *
   * **Syntax**: \`single | multiple\`
   *
   * **Initial value**: \`single\`
   *
   * @deprecated
   */
  KhtmlBoxLines?: Property.BoxLines | undefined;
  /**
   * The **\`box-ordinal-group\`** CSS property assigns the flexbox's child elements to an ordinal group.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`1\`
   *
   * @deprecated
   */
  KhtmlBoxOrdinalGroup?: Property.BoxOrdinalGroup | undefined;
  /**
   * This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard. See flexbox for information about the current standard.
   *
   * **Syntax**: \`horizontal | vertical | inline-axis | block-axis | inherit\`
   *
   * **Initial value**: \`inline-axis\` (\`horizontal\` in XUL)
   *
   * @deprecated
   */
  KhtmlBoxOrient?: Property.BoxOrient | undefined;
  /**
   * The **\`-moz-box-pack\`** and **\`-webkit-box-pack\`** CSS properties specify how a \`-moz-box\` or \`-webkit-box\` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.
   *
   * **Syntax**: \`start | center | end | justify\`
   *
   * **Initial value**: \`start\`
   *
   * @deprecated
   */
  KhtmlBoxPack?: Property.BoxPack | undefined;
  /**
   * The **\`line-break\`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.
   *
   * **Syntax**: \`auto | loose | normal | strict | anywhere\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  KhtmlLineBreak?: Property.LineBreak | undefined;
  /**
   * The **\`opacity\`** CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.
   *
   * **Syntax**: \`<alpha-value>\`
   *
   * **Initial value**: \`1.0\`
   *
   * @deprecated
   */
  KhtmlOpacity?: Property.Opacity | undefined;
  /**
   * The \`**user-select**\` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.
   *
   * **Syntax**: \`auto | text | none | contain | all\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  KhtmlUserSelect?: Property.UserSelect | undefined;
  /**
   * The **\`background-clip\`** CSS property sets whether an element's background extends underneath its border box, padding box, or content box.
   *
   * **Syntax**: \`<box>#\`
   *
   * **Initial value**: \`border-box\`
   *
   * @deprecated
   */
  MozBackgroundClip?: Property.BackgroundClip | undefined;
  /**
   * The **\`box-decoration-break\`** CSS property specifies how an element's fragments should be rendered when broken across multiple lines, columns, or pages.
   *
   * **Syntax**: \`slice | clone\`
   *
   * **Initial value**: \`slice\`
   *
   * @deprecated
   */
  MozBackgroundInlinePolicy?: Property.BoxDecorationBreak | undefined;
  /**
   * The **\`background-origin\`** CSS property sets the background's origin: from the border start, inside the border, or inside the padding.
   *
   * **Syntax**: \`<box>#\`
   *
   * **Initial value**: \`padding-box\`
   *
   * @deprecated
   */
  MozBackgroundOrigin?: Property.BackgroundOrigin | undefined;
  /**
   * The **\`background-size\`** CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.
   *
   * **Syntax**: \`<bg-size>#\`
   *
   * **Initial value**: \`auto auto\`
   *
   * @deprecated
   */
  MozBackgroundSize?: Property.BackgroundSize<TLength> | undefined;
  /**
   * The **\`-moz-binding\`** CSS property is used by Mozilla-based applications to attach an XBL binding to a DOM element.
   *
   * **Syntax**: \`<url> | none\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  MozBinding?: Property.MozBinding | undefined;
  /**
   * The **\`border-radius\`** CSS property rounds the corners of an element's outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.
   *
   * **Syntax**: \`<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?\`
   *
   * @deprecated
   */
  MozBorderRadius?: Property.BorderRadius<TLength> | undefined;
  /**
   * The **\`border-bottom-left-radius\`** CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  MozBorderRadiusBottomleft?: Property.BorderBottomLeftRadius<TLength> | undefined;
  /**
   * The **\`border-bottom-right-radius\`** CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  MozBorderRadiusBottomright?: Property.BorderBottomRightRadius<TLength> | undefined;
  /**
   * The **\`border-top-left-radius\`** CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  MozBorderRadiusTopleft?: Property.BorderTopLeftRadius<TLength> | undefined;
  /**
   * The **\`border-top-right-radius\`** CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  MozBorderRadiusTopright?: Property.BorderTopRightRadius<TLength> | undefined;
  /**
   * The **\`box-align\`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.
   *
   * **Syntax**: \`start | center | end | baseline | stretch\`
   *
   * **Initial value**: \`stretch\`
   *
   * @deprecated
   */
  MozBoxAlign?: Property.BoxAlign | undefined;
  /**
   * The **\`box-direction\`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).
   *
   * **Syntax**: \`normal | reverse | inherit\`
   *
   * **Initial value**: \`normal\`
   *
   * @deprecated
   */
  MozBoxDirection?: Property.BoxDirection | undefined;
  /**
   * The **\`-moz-box-flex\`** and **\`-webkit-box-flex\`** CSS properties specify how a \`-moz-box\` or \`-webkit-box\` grows to fill the box that contains it, in the direction of the containing box's layout.
   *
   * **Syntax**: \`<number>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  MozBoxFlex?: Property.BoxFlex | undefined;
  /**
   * The **\`box-ordinal-group\`** CSS property assigns the flexbox's child elements to an ordinal group.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`1\`
   *
   * @deprecated
   */
  MozBoxOrdinalGroup?: Property.BoxOrdinalGroup | undefined;
  /**
   * This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard. See flexbox for information about the current standard.
   *
   * **Syntax**: \`horizontal | vertical | inline-axis | block-axis | inherit\`
   *
   * **Initial value**: \`inline-axis\` (\`horizontal\` in XUL)
   *
   * @deprecated
   */
  MozBoxOrient?: Property.BoxOrient | undefined;
  /**
   * The **\`-moz-box-pack\`** and **\`-webkit-box-pack\`** CSS properties specify how a \`-moz-box\` or \`-webkit-box\` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.
   *
   * **Syntax**: \`start | center | end | justify\`
   *
   * **Initial value**: \`start\`
   *
   * @deprecated
   */
  MozBoxPack?: Property.BoxPack | undefined;
  /**
   * The **\`box-shadow\`** CSS property adds shadow effects around an element's frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color.
   *
   * **Syntax**: \`none | <shadow>#\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  MozBoxShadow?: Property.BoxShadow | undefined;
  /**
   * The non-standard **\`-moz-float-edge\`** CSS property specifies whether the height and width properties of the element include the margin, border, or padding thickness.
   *
   * **Syntax**: \`border-box | content-box | margin-box | padding-box\`
   *
   * **Initial value**: \`content-box\`
   *
   * @deprecated
   */
  MozFloatEdge?: Property.MozFloatEdge | undefined;
  /**
   * The **\`-moz-force-broken-image-icon\`** extended CSS property can be used to force the broken image icon to be shown even when a broken image has an \`alt\` attribute.
   *
   * **Syntax**: \`0 | 1\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  MozForceBrokenImageIcon?: Property.MozForceBrokenImageIcon | undefined;
  /**
   * The **\`opacity\`** CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.
   *
   * **Syntax**: \`<alpha-value>\`
   *
   * **Initial value**: \`1.0\`
   *
   * @deprecated
   */
  MozOpacity?: Property.Opacity | undefined;
  /**
   * The **\`outline\`** CSS shorthand property set all the outline properties in a single declaration.
   *
   * **Syntax**: \`[ <'outline-color'> || <'outline-style'> || <'outline-width'> ]\`
   *
   * @deprecated
   */
  MozOutline?: Property.Outline<TLength> | undefined;
  /**
   * The **\`outline-color\`** CSS property sets the color of an element's outline.
   *
   * **Syntax**: \`<color> | invert\`
   *
   * **Initial value**: \`invert\`, for browsers supporting it, \`currentColor\` for the other
   *
   * @deprecated
   */
  MozOutlineColor?: Property.OutlineColor | undefined;
  /**
   * In Mozilla applications like Firefox, the **\`-moz-outline-radius\`** CSS shorthand property can be used to give an element's \`outline\` rounded corners.
   *
   * **Syntax**: \`<outline-radius>{1,4} [ / <outline-radius>{1,4} ]?\`
   *
   * @deprecated
   */
  MozOutlineRadius?: Property.MozOutlineRadius<TLength> | undefined;
  /**
   * In Mozilla applications, the **\`-moz-outline-radius-bottomleft\`** CSS property can be used to round the bottom-left corner of an element's \`outline\`.
   *
   * **Syntax**: \`<outline-radius>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  MozOutlineRadiusBottomleft?: Property.MozOutlineRadiusBottomleft<TLength> | undefined;
  /**
   * In Mozilla applications, the **\`-moz-outline-radius-bottomright\`** CSS property can be used to round the bottom-right corner of an element's \`outline\`.
   *
   * **Syntax**: \`<outline-radius>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  MozOutlineRadiusBottomright?: Property.MozOutlineRadiusBottomright<TLength> | undefined;
  /**
   * In Mozilla applications, the **\`-moz-outline-radius-topleft\`** CSS property can be used to round the top-left corner of an element's \`outline\`.
   *
   * **Syntax**: \`<outline-radius>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  MozOutlineRadiusTopleft?: Property.MozOutlineRadiusTopleft<TLength> | undefined;
  /**
   * In Mozilla applications, the **\`-moz-outline-radius-topright\`** CSS property can be used to round the top-right corner of an element's \`outline\`.
   *
   * **Syntax**: \`<outline-radius>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  MozOutlineRadiusTopright?: Property.MozOutlineRadiusTopright<TLength> | undefined;
  /**
   * The **\`outline-style\`** CSS property sets the style of an element's outline. An outline is a line that is drawn around an element, outside the \`border\`.
   *
   * **Syntax**: \`auto | <'border-style'>\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  MozOutlineStyle?: Property.OutlineStyle | undefined;
  /**
   * The CSS **\`outline-width\`** property sets the thickness of an element's outline. An outline is a line that is drawn around an element, outside the \`border\`.
   *
   * **Syntax**: \`<line-width>\`
   *
   * **Initial value**: \`medium\`
   *
   * @deprecated
   */
  MozOutlineWidth?: Property.OutlineWidth<TLength> | undefined;
  /**
   * The **\`text-align-last\`** CSS property sets how the last line of a block or a line, right before a forced line break, is aligned.
   *
   * **Syntax**: \`auto | start | end | left | right | center | justify\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  MozTextAlignLast?: Property.TextAlignLast | undefined;
  /**
   * The **\`text-decoration-color\`** CSS property sets the color of decorations added to text by \`text-decoration-line\`.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * @deprecated
   */
  MozTextDecorationColor?: Property.TextDecorationColor | undefined;
  /**
   * The **\`text-decoration-line\`** CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline.
   *
   * **Syntax**: \`none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  MozTextDecorationLine?: Property.TextDecorationLine | undefined;
  /**
   * The **\`text-decoration-style\`** CSS property sets the style of the lines specified by \`text-decoration-line\`. The style applies to all lines that are set with \`text-decoration-line\`.
   *
   * **Syntax**: \`solid | double | dotted | dashed | wavy\`
   *
   * **Initial value**: \`solid\`
   *
   * @deprecated
   */
  MozTextDecorationStyle?: Property.TextDecorationStyle | undefined;
  /**
   * In Mozilla applications, **\`-moz-user-input\`** determines if an element will accept user input.
   *
   * **Syntax**: \`auto | none | enabled | disabled\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  MozUserInput?: Property.MozUserInput | undefined;
  /**
   * The **\`ime-mode\`** CSS property controls the state of the input method editor (IME) for text fields. This property is obsolete.
   *
   * **Syntax**: \`auto | normal | active | inactive | disabled\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  msImeMode?: Property.ImeMode | undefined;
  /**
   * The **\`-ms-scrollbar-track-color\`** CSS property is a Microsoft extension that specifies the color of the track element of a scrollbar.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`Scrollbar\`
   *
   * @deprecated
   */
  msScrollbarTrackColor?: Property.MsScrollbarTrackColor | undefined;
  /**
   * The **\`animation\`** shorthand CSS property applies an animation between styles. It is a shorthand for \`animation-name\`, \`animation-duration\`, \`animation-timing-function\`, \`animation-delay\`, \`animation-iteration-count\`, \`animation-direction\`, \`animation-fill-mode\`, and \`animation-play-state\`.
   *
   * **Syntax**: \`<single-animation>#\`
   *
   * @deprecated
   */
  OAnimation?: Property.Animation<TTime> | undefined;
  /**
   * The **\`animation-delay\`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   *
   * @deprecated
   */
  OAnimationDelay?: Property.AnimationDelay<TTime> | undefined;
  /**
   * The **\`animation-direction\`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.
   *
   * **Syntax**: \`<single-animation-direction>#\`
   *
   * **Initial value**: \`normal\`
   *
   * @deprecated
   */
  OAnimationDirection?: Property.AnimationDirection | undefined;
  /**
   * The **\`animation-duration\`** CSS property sets the length of time that an animation takes to complete one cycle.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   *
   * @deprecated
   */
  OAnimationDuration?: Property.AnimationDuration<TTime> | undefined;
  /**
   * The **\`animation-fill-mode\`** CSS property sets how a CSS animation applies styles to its target before and after its execution.
   *
   * **Syntax**: \`<single-animation-fill-mode>#\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  OAnimationFillMode?: Property.AnimationFillMode | undefined;
  /**
   * The **\`animation-iteration-count\`** CSS property sets the number of times an animation sequence should be played before stopping.
   *
   * **Syntax**: \`<single-animation-iteration-count>#\`
   *
   * **Initial value**: \`1\`
   *
   * @deprecated
   */
  OAnimationIterationCount?: Property.AnimationIterationCount | undefined;
  /**
   * The **\`animation-name\`** CSS property specifies the names of one or more \`@keyframes\` at-rules describing the animation or animations to apply to the element.
   *
   * **Syntax**: \`[ none | <keyframes-name> ]#\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  OAnimationName?: Property.AnimationName | undefined;
  /**
   * The **\`animation-play-state\`** CSS property sets whether an animation is running or paused.
   *
   * **Syntax**: \`<single-animation-play-state>#\`
   *
   * **Initial value**: \`running\`
   *
   * @deprecated
   */
  OAnimationPlayState?: Property.AnimationPlayState | undefined;
  /**
   * The **\`animation-timing-function\`** CSS property sets how an animation progresses through the duration of each cycle.
   *
   * **Syntax**: \`<easing-function>#\`
   *
   * **Initial value**: \`ease\`
   *
   * @deprecated
   */
  OAnimationTimingFunction?: Property.AnimationTimingFunction | undefined;
  /**
   * The **\`background-size\`** CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.
   *
   * **Syntax**: \`<bg-size>#\`
   *
   * **Initial value**: \`auto auto\`
   *
   * @deprecated
   */
  OBackgroundSize?: Property.BackgroundSize<TLength> | undefined;
  /**
   * The **\`border-image\`** CSS property draws an image around a given element. It replaces the element's regular border.
   *
   * **Syntax**: \`<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>\`
   *
   * @deprecated
   */
  OBorderImage?: Property.BorderImage | undefined;
  /**
   * The **\`object-fit\`** CSS property sets how the content of a replaced element, such as an \`<img>\` or \`<video>\`, should be resized to fit its container.
   *
   * **Syntax**: \`fill | contain | cover | none | scale-down\`
   *
   * **Initial value**: \`fill\`
   *
   * @deprecated
   */
  OObjectFit?: Property.ObjectFit | undefined;
  /**
   * The **\`object-position\`** CSS property specifies the alignment of the selected replaced element's contents within the element's box. Areas of the box which aren't covered by the replaced element's object will show the element's background.
   *
   * **Syntax**: \`<position>\`
   *
   * **Initial value**: \`50% 50%\`
   *
   * @deprecated
   */
  OObjectPosition?: Property.ObjectPosition<TLength> | undefined;
  /**
   * The **\`tab-size\`** CSS property is used to customize the width of tab characters (U+0009).
   *
   * **Syntax**: \`<integer> | <length>\`
   *
   * **Initial value**: \`8\`
   *
   * @deprecated
   */
  OTabSize?: Property.TabSize<TLength> | undefined;
  /**
   * The **\`text-overflow\`** CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis ('\`\u2026\`'), or display a custom string.
   *
   * **Syntax**: \`[ clip | ellipsis | <string> ]{1,2}\`
   *
   * **Initial value**: \`clip\`
   *
   * @deprecated
   */
  OTextOverflow?: Property.TextOverflow | undefined;
  /**
   * The **\`transform\`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.
   *
   * **Syntax**: \`none | <transform-list>\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  OTransform?: Property.Transform | undefined;
  /**
   * The **\`transform-origin\`** CSS property sets the origin for an element's transformations.
   *
   * **Syntax**: \`[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?\`
   *
   * **Initial value**: \`50% 50% 0\`
   *
   * @deprecated
   */
  OTransformOrigin?: Property.TransformOrigin<TLength> | undefined;
  /**
   * The **\`transition\`** CSS property is a shorthand property for \`transition-property\`, \`transition-duration\`, \`transition-timing-function\`, and \`transition-delay\`.
   *
   * **Syntax**: \`<single-transition>#\`
   *
   * @deprecated
   */
  OTransition?: Property.Transition<TTime> | undefined;
  /**
   * The **\`transition-delay\`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   *
   * @deprecated
   */
  OTransitionDelay?: Property.TransitionDelay<TTime> | undefined;
  /**
   * The **\`transition-duration\`** CSS property sets the length of time a transition animation should take to complete. By default, the value is \`0s\`, meaning that no animation will occur.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   *
   * @deprecated
   */
  OTransitionDuration?: Property.TransitionDuration<TTime> | undefined;
  /**
   * The **\`transition-property\`** CSS property sets the CSS properties to which a transition effect should be applied.
   *
   * **Syntax**: \`none | <single-transition-property>#\`
   *
   * **Initial value**: all
   *
   * @deprecated
   */
  OTransitionProperty?: Property.TransitionProperty | undefined;
  /**
   * The **\`transition-timing-function\`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.
   *
   * **Syntax**: \`<easing-function>#\`
   *
   * **Initial value**: \`ease\`
   *
   * @deprecated
   */
  OTransitionTimingFunction?: Property.TransitionTimingFunction | undefined;
  /**
   * The **\`box-align\`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.
   *
   * **Syntax**: \`start | center | end | baseline | stretch\`
   *
   * **Initial value**: \`stretch\`
   *
   * @deprecated
   */
  WebkitBoxAlign?: Property.BoxAlign | undefined;
  /**
   * The **\`box-direction\`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).
   *
   * **Syntax**: \`normal | reverse | inherit\`
   *
   * **Initial value**: \`normal\`
   *
   * @deprecated
   */
  WebkitBoxDirection?: Property.BoxDirection | undefined;
  /**
   * The **\`-moz-box-flex\`** and **\`-webkit-box-flex\`** CSS properties specify how a \`-moz-box\` or \`-webkit-box\` grows to fill the box that contains it, in the direction of the containing box's layout.
   *
   * **Syntax**: \`<number>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  WebkitBoxFlex?: Property.BoxFlex | undefined;
  /**
   * The **\`box-flex-group\`** CSS property assigns the flexbox's child elements to a flex group.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`1\`
   *
   * @deprecated
   */
  WebkitBoxFlexGroup?: Property.BoxFlexGroup | undefined;
  /**
   * The **\`box-lines\`** CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).
   *
   * **Syntax**: \`single | multiple\`
   *
   * **Initial value**: \`single\`
   *
   * @deprecated
   */
  WebkitBoxLines?: Property.BoxLines | undefined;
  /**
   * The **\`box-ordinal-group\`** CSS property assigns the flexbox's child elements to an ordinal group.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`1\`
   *
   * @deprecated
   */
  WebkitBoxOrdinalGroup?: Property.BoxOrdinalGroup | undefined;
  /**
   * This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard. See flexbox for information about the current standard.
   *
   * **Syntax**: \`horizontal | vertical | inline-axis | block-axis | inherit\`
   *
   * **Initial value**: \`inline-axis\` (\`horizontal\` in XUL)
   *
   * @deprecated
   */
  WebkitBoxOrient?: Property.BoxOrient | undefined;
  /**
   * The **\`-moz-box-pack\`** and **\`-webkit-box-pack\`** CSS properties specify how a \`-moz-box\` or \`-webkit-box\` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.
   *
   * **Syntax**: \`start | center | end | justify\`
   *
   * **Initial value**: \`start\`
   *
   * @deprecated
   */
  WebkitBoxPack?: Property.BoxPack | undefined;
  /**
   * The **\`scroll-snap-points-x\`** CSS property defines the horizontal positioning of snap points within the content of the scroll container they are applied to.
   *
   * **Syntax**: \`none | repeat( <length-percentage> )\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  WebkitScrollSnapPointsX?: Property.ScrollSnapPointsX | undefined;
  /**
   * The **\`scroll-snap-points-y\`** CSS property defines the vertical positioning of snap points within the content of the scroll container they are applied to.
   *
   * **Syntax**: \`none | repeat( <length-percentage> )\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  WebkitScrollSnapPointsY?: Property.ScrollSnapPointsY | undefined;
}

export interface SvgProperties<TLength = (string & {}) | 0, TTime = string & {}> {
  alignmentBaseline?: Property.AlignmentBaseline | undefined;
  baselineShift?: Property.BaselineShift<TLength> | undefined;
  clip?: Property.Clip | undefined;
  clipPath?: Property.ClipPath | undefined;
  clipRule?: Property.ClipRule | undefined;
  color?: Property.Color | undefined;
  colorInterpolation?: Property.ColorInterpolation | undefined;
  colorRendering?: Property.ColorRendering | undefined;
  cursor?: Property.Cursor | undefined;
  direction?: Property.Direction | undefined;
  display?: Property.Display | undefined;
  dominantBaseline?: Property.DominantBaseline | undefined;
  fill?: Property.Fill | undefined;
  fillOpacity?: Property.FillOpacity | undefined;
  fillRule?: Property.FillRule | undefined;
  filter?: Property.Filter | undefined;
  floodColor?: Property.FloodColor | undefined;
  floodOpacity?: Property.FloodOpacity | undefined;
  font?: Property.Font | undefined;
  fontFamily?: Property.FontFamily | undefined;
  fontSize?: Property.FontSize<TLength> | undefined;
  fontSizeAdjust?: Property.FontSizeAdjust | undefined;
  fontStretch?: Property.FontStretch | undefined;
  fontStyle?: Property.FontStyle | undefined;
  fontVariant?: Property.FontVariant | undefined;
  fontWeight?: Property.FontWeight | undefined;
  glyphOrientationVertical?: Property.GlyphOrientationVertical | undefined;
  imageRendering?: Property.ImageRendering | undefined;
  letterSpacing?: Property.LetterSpacing<TLength> | undefined;
  lightingColor?: Property.LightingColor | undefined;
  lineHeight?: Property.LineHeight<TLength> | undefined;
  marker?: Property.Marker | undefined;
  markerEnd?: Property.MarkerEnd | undefined;
  markerMid?: Property.MarkerMid | undefined;
  markerStart?: Property.MarkerStart | undefined;
  mask?: Property.Mask<TLength> | undefined;
  opacity?: Property.Opacity | undefined;
  overflow?: Property.Overflow | undefined;
  paintOrder?: Property.PaintOrder | undefined;
  pointerEvents?: Property.PointerEvents | undefined;
  shapeRendering?: Property.ShapeRendering | undefined;
  stopColor?: Property.StopColor | undefined;
  stopOpacity?: Property.StopOpacity | undefined;
  stroke?: Property.Stroke | undefined;
  strokeDasharray?: Property.StrokeDasharray<TLength> | undefined;
  strokeDashoffset?: Property.StrokeDashoffset<TLength> | undefined;
  strokeLinecap?: Property.StrokeLinecap | undefined;
  strokeLinejoin?: Property.StrokeLinejoin | undefined;
  strokeMiterlimit?: Property.StrokeMiterlimit | undefined;
  strokeOpacity?: Property.StrokeOpacity | undefined;
  strokeWidth?: Property.StrokeWidth<TLength> | undefined;
  textAnchor?: Property.TextAnchor | undefined;
  textDecoration?: Property.TextDecoration<TLength> | undefined;
  textRendering?: Property.TextRendering | undefined;
  unicodeBidi?: Property.UnicodeBidi | undefined;
  vectorEffect?: Property.VectorEffect | undefined;
  visibility?: Property.Visibility | undefined;
  whiteSpace?: Property.WhiteSpace | undefined;
  wordSpacing?: Property.WordSpacing<TLength> | undefined;
  writingMode?: Property.WritingMode | undefined;
}

export interface Properties<TLength = (string & {}) | 0, TTime = string & {}>
  extends StandardProperties<TLength, TTime>,
    VendorProperties<TLength, TTime>,
    ObsoleteProperties<TLength, TTime>,
    SvgProperties<TLength, TTime> {}

export interface StandardLonghandPropertiesHyphen<TLength = (string & {}) | 0, TTime = string & {}> {
  /**
   * The **\`accent-color\`** CSS property sets the color of the elements accent. An accent appears in elements such as \`<input>\` of \`type="checkbox"\`, or \`type="radio"\`.
   *
   * **Syntax**: \`auto | <color>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **93** | **92**  |   No   | **93** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/accent-color
   */
  "accent-color"?: Property.AccentColor | undefined;
  /**
   * The CSS **\`align-content\`** property sets the distribution of space between and around content items along a flexbox's cross-axis or a grid's block axis.
   *
   * **Syntax**: \`normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>\`
   *
   * **Initial value**: \`normal\`
   *
   * ---
   *
   * _Supported in Flex Layout_
   *
   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :------: | :-----: | :-----: | :----: | :----: |
   * |  **29**  | **28**  |  **9**  | **12** | **11** |
   * | 21 _-x-_ |         | 7 _-x-_ |        |        |
   *
   * ---
   *
   * _Supported in Grid Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/align-content
   */
  "align-content"?: Property.AlignContent | undefined;
  /**
   * The CSS **\`align-items\`** property sets the \`align-self\` value on all direct children as a group. In Flexbox, it controls the alignment of items on the Cross Axis. In Grid Layout, it controls the alignment of items on the Block Axis within their grid area.
   *
   * **Syntax**: \`normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]\`
   *
   * **Initial value**: \`normal\`
   *
   * ---
   *
   * _Supported in Flex Layout_
   *
   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :------: | :-----: | :-----: | :----: | :----: |
   * |  **52**  | **20**  |  **9**  | **12** | **11** |
   * | 21 _-x-_ |         | 7 _-x-_ |        |        |
   *
   * ---
   *
   * _Supported in Grid Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/align-items
   */
  "align-items"?: Property.AlignItems | undefined;
  /**
   * The **\`align-self\`** CSS property overrides a grid or flex item's \`align-items\` value. In Grid, it aligns the item inside the\xA0grid area. In Flexbox, it aligns the item on the cross axis.
   *
   * **Syntax**: \`auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>\`
   *
   * **Initial value**: \`auto\`
   *
   * ---
   *
   * _Supported in Flex Layout_
   *
   * |  Chrome  | Firefox |  Safari   |  Edge  |   IE   |
   * | :------: | :-----: | :-------: | :----: | :----: |
   * |  **36**  | **20**  |   **9**   | **12** | **11** |
   * | 21 _-x-_ |         | 6.1 _-x-_ |        |        |
   *
   * ---
   *
   * _Supported in Grid Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  |      IE      |
   * | :----: | :-----: | :------: | :----: | :----------: |
   * | **57** | **52**  | **10.1** | **16** | **10** _-x-_ |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/align-self
   */
  "align-self"?: Property.AlignSelf | undefined;
  /**
   * The **\`align-tracks\`**\xA0CSS property sets the alignment in the masonry axis for grid containers that have masonry in their block axis.
   *
   * **Syntax**: \`[ normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position> ]#\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   |   n/a   |   No   |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/align-tracks
   */
  "align-tracks"?: Property.AlignTracks | undefined;
  /**
   * The **\`animation-delay\`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **43**  | **16**  |  **9**  | **12** | **10** |
   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/animation-delay
   */
  "animation-delay"?: Property.AnimationDelay<TTime> | undefined;
  /**
   * The **\`animation-direction\`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.
   *
   * **Syntax**: \`<single-animation-direction>#\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **43**  | **16**  |  **9**  | **12** | **10** |
   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/animation-direction
   */
  "animation-direction"?: Property.AnimationDirection | undefined;
  /**
   * The **\`animation-duration\`** CSS property sets the length of time that an animation takes to complete one cycle.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **43**  | **16**  |  **9**  | **12** | **10** |
   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/animation-duration
   */
  "animation-duration"?: Property.AnimationDuration<TTime> | undefined;
  /**
   * The **\`animation-fill-mode\`** CSS property sets how a CSS animation applies styles to its target before and after its execution.
   *
   * **Syntax**: \`<single-animation-fill-mode>#\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **43**  | **16**  |  **9**  | **12** | **10** |
   * | 3 _-x-_ | 5 _-x-_ | 5 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/animation-fill-mode
   */
  "animation-fill-mode"?: Property.AnimationFillMode | undefined;
  /**
   * The **\`animation-iteration-count\`** CSS property sets the number of times an animation sequence should be played before stopping.
   *
   * **Syntax**: \`<single-animation-iteration-count>#\`
   *
   * **Initial value**: \`1\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **43**  | **16**  |  **9**  | **12** | **10** |
   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/animation-iteration-count
   */
  "animation-iteration-count"?: Property.AnimationIterationCount | undefined;
  /**
   * The **\`animation-name\`** CSS property specifies the names of one or more \`@keyframes\` at-rules describing the animation or animations to apply to the element.
   *
   * **Syntax**: \`[ none | <keyframes-name> ]#\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **43**  | **16**  |  **9**  | **12** | **10** |
   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/animation-name
   */
  "animation-name"?: Property.AnimationName | undefined;
  /**
   * The **\`animation-play-state\`** CSS property sets whether an animation is running or paused.
   *
   * **Syntax**: \`<single-animation-play-state>#\`
   *
   * **Initial value**: \`running\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **43**  | **16**  |  **9**  | **12** | **10** |
   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/animation-play-state
   */
  "animation-play-state"?: Property.AnimationPlayState | undefined;
  /**
   * The **\`animation-timing-function\`** CSS property sets how an animation progresses through the duration of each cycle.
   *
   * **Syntax**: \`<easing-function>#\`
   *
   * **Initial value**: \`ease\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **43**  | **16**  |  **9**  | **12** | **10** |
   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/animation-timing-function
   */
  "animation-timing-function"?: Property.AnimationTimingFunction | undefined;
  /**
   * The \`**appearance**\` CSS property is used to display an element using platform-native styling, based on the operating system's theme. The **\`-moz-appearance\`** and **\`-webkit-appearance\`** properties are non-standard versions of this property, used (respectively) by Gecko (Firefox) and by WebKit-based (e.g., Safari) and Blink-based (e.g., Chrome, Opera) browsers to achieve the same thing. Note that Firefox and Edge also support **\`-webkit-appearance\`**, for compatibility reasons.
   *
   * **Syntax**: \`none | auto | textfield | menulist-button | <compat-auto>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome  | Firefox |   Safari    |   Edge   | IE  |
   * | :-----: | :-----: | :---------: | :------: | :-: |
   * | **84**  | **80**  | **3** _-x-_ |  **84**  | No  |
   * | 1 _-x-_ | 1 _-x-_ |             | 12 _-x-_ |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/appearance
   */
  appearance?: Property.Appearance | undefined;
  /**
   * The **\`aspect-ratio\`**\xA0\xA0CSS property sets a **preferred aspect ratio** for the box, which will be used in the calculation of auto sizes and some other layout functions.
   *
   * **Syntax**: \`auto | <ratio>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **88** | **89**  | **15** | **88** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/aspect-ratio
   */
  "aspect-ratio"?: Property.AspectRatio | undefined;
  /**
   * The **\`backdrop-filter\`** CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything _behind_ the element, to see the effect you must make the element or its background at least partially transparent.
   *
   * **Syntax**: \`none | <filter-function-list>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |   Safari    |  Edge  | IE  |
   * | :----: | :-----: | :---------: | :----: | :-: |
   * | **76** |   n/a   | **9** _-x-_ | **17** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/backdrop-filter
   */
  "backdrop-filter"?: Property.BackdropFilter | undefined;
  /**
   * The **\`backface-visibility\`** CSS property sets whether the back face of an element is visible when turned towards the user.
   *
   * **Syntax**: \`visible | hidden\`
   *
   * **Initial value**: \`visible\`
   *
   * |  Chrome  | Firefox  |    Safari     |  Edge  |   IE   |
   * | :------: | :------: | :-----------: | :----: | :----: |
   * |  **36**  |  **16**  | **5.1** _-x-_ | **12** | **10** |
   * | 12 _-x-_ | 10 _-x-_ |               |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/backface-visibility
   */
  "backface-visibility"?: Property.BackfaceVisibility | undefined;
  /**
   * The **\`background-attachment\`** CSS property sets whether a background image's position is fixed within the viewport, or scrolls with its containing block.
   *
   * **Syntax**: \`<attachment>#\`
   *
   * **Initial value**: \`scroll\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-attachment
   */
  "background-attachment"?: Property.BackgroundAttachment | undefined;
  /**
   * The **\`background-blend-mode\`** CSS property sets how an element's background images should blend with each other and with the element's background color.
   *
   * **Syntax**: \`<blend-mode>#\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **35** | **30**  | **8**  | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-blend-mode
   */
  "background-blend-mode"?: Property.BackgroundBlendMode | undefined;
  /**
   * The **\`background-clip\`** CSS property sets whether an element's background extends underneath its border box, padding box, or content box.
   *
   * **Syntax**: \`<box>#\`
   *
   * **Initial value**: \`border-box\`
   *
   * | Chrome | Firefox |   Safari    |  Edge  |  IE   |
   * | :----: | :-----: | :---------: | :----: | :---: |
   * | **1**  |  **4**  | **3** _-x-_ | **12** | **9** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-clip
   */
  "background-clip"?: Property.BackgroundClip | undefined;
  /**
   * The **\`background-color\`** CSS property sets the background color of an element.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`transparent\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-color
   */
  "background-color"?: Property.BackgroundColor | undefined;
  /**
   * The **\`background-image\`** CSS property sets one or more background images on an element.
   *
   * **Syntax**: \`<bg-image>#\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-image
   */
  "background-image"?: Property.BackgroundImage | undefined;
  /**
   * The **\`background-origin\`** CSS property sets the background's origin: from the border start, inside the border, or inside the padding.
   *
   * **Syntax**: \`<box>#\`
   *
   * **Initial value**: \`padding-box\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **4**  | **3**  | **12** | **9** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-origin
   */
  "background-origin"?: Property.BackgroundOrigin | undefined;
  /**
   * The **\`background-position-x\`** CSS property sets the initial horizontal position for each background image. The position is relative to the position layer set by \`background-origin\`.
   *
   * **Syntax**: \`[ center | [ [ left | right | x-start | x-end ]? <length-percentage>? ]! ]#\`
   *
   * **Initial value**: \`left\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  | **49**  | **1**  | **12** | **6** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-position-x
   */
  "background-position-x"?: Property.BackgroundPositionX<TLength> | undefined;
  /**
   * The **\`background-position-y\`** CSS property sets the initial vertical position for each background image. The position is relative to the position layer set by \`background-origin\`.
   *
   * **Syntax**: \`[ center | [ [ top | bottom | y-start | y-end ]? <length-percentage>? ]! ]#\`
   *
   * **Initial value**: \`top\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  | **49**  | **1**  | **12** | **6** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-position-y
   */
  "background-position-y"?: Property.BackgroundPositionY<TLength> | undefined;
  /**
   * The **\`background-repeat\`** CSS property sets how background images are repeated. A background image can be repeated along the horizontal and vertical axes, or not repeated at all.
   *
   * **Syntax**: \`<repeat-style>#\`
   *
   * **Initial value**: \`repeat\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-repeat
   */
  "background-repeat"?: Property.BackgroundRepeat | undefined;
  /**
   * The **\`background-size\`** CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.
   *
   * **Syntax**: \`<bg-size>#\`
   *
   * **Initial value**: \`auto auto\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |
   * | :-----: | :-----: | :-----: | :----: | :---: |
   * |  **3**  |  **4**  |  **5**  | **12** | **9** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-size
   */
  "background-size"?: Property.BackgroundSize<TLength> | undefined;
  /**
   * **Syntax**: \`clip | ellipsis | <string>\`
   *
   * **Initial value**: \`clip\`
   */
  "block-overflow"?: Property.BlockOverflow | undefined;
  /**
   * The **\`block-size\`** CSS property defines the horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the \`width\` or the \`height\` property, depending on the value of \`writing-mode\`.
   *
   * **Syntax**: \`<'width'>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/block-size
   */
  "block-size"?: Property.BlockSize<TLength> | undefined;
  /**
   * The **\`border-block-color\`** CSS property defines the color of the logical block borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-color\` and \`border-bottom-color\`, or \`border-right-color\` and \`border-left-color\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-color'>{1,2}\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-color
   */
  "border-block-color"?: Property.BorderBlockColor | undefined;
  /**
   * The **\`border-block-end-color\`** CSS property defines the color of the logical block-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-color\`,\xA0\`border-right-color\`,\xA0\`border-bottom-color\`, or \`border-left-color\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-color'>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-end-color
   */
  "border-block-end-color"?: Property.BorderBlockEndColor | undefined;
  /**
   * The **\`border-block-end-style\`** CSS property defines the style of the logical block-end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-style\`, \`border-right-style\`, \`border-bottom-style\`, or \`border-left-style\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-style'>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-end-style
   */
  "border-block-end-style"?: Property.BorderBlockEndStyle | undefined;
  /**
   * The **\`border-block-end-width\`** CSS property defines the width of the logical block-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-width\`,\xA0\`border-right-width\`,\xA0\`border-bottom-width\`, or \`border-left-width\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-width'>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-end-width
   */
  "border-block-end-width"?: Property.BorderBlockEndWidth<TLength> | undefined;
  /**
   * The **\`border-block-start-color\`** CSS property defines the color of the logical block-start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-color\`,\xA0\`border-right-color\`,\xA0\`border-bottom-color\`, or \`border-left-color\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-color'>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-start-color
   */
  "border-block-start-color"?: Property.BorderBlockStartColor | undefined;
  /**
   * The **\`border-block-start-style\`** CSS property defines the style of the logical block start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-style\`,\xA0\`border-right-style\`,\xA0\`border-bottom-style\`, or \`border-left-style\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-style'>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-start-style
   */
  "border-block-start-style"?: Property.BorderBlockStartStyle | undefined;
  /**
   * The **\`border-block-start-width\`** CSS property defines the width of the logical block-start border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-width\`,\xA0\`border-right-width\`,\xA0\`border-bottom-width\`, or \`border-left-width\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-width'>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-start-width
   */
  "border-block-start-width"?: Property.BorderBlockStartWidth<TLength> | undefined;
  /**
   * The **\`border-block-style\`** CSS property defines the style of the logical block borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-style\` and \`border-bottom-style\`, or \`border-left-style\` and \`border-right-style\` properties depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-style'>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-style
   */
  "border-block-style"?: Property.BorderBlockStyle | undefined;
  /**
   * The **\`border-block-width\`** CSS property defines the width of the logical block\xA0borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-width\` and\xA0\`border-bottom-width\`, or \`border-left-width\`, and\xA0\`border-right-width\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-width'>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-width
   */
  "border-block-width"?: Property.BorderBlockWidth<TLength> | undefined;
  /**
   * The **\`border-bottom-color\`** CSS property sets the color of an element's bottom border. It can also be set with the shorthand CSS properties \`border-color\` or \`border-bottom\`.
   *
   * **Syntax**: \`<'border-top-color'>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-color
   */
  "border-bottom-color"?: Property.BorderBottomColor | undefined;
  /**
   * The **\`border-bottom-left-radius\`** CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |
   * | :-----: | :-----: | :-----: | :----: | :---: |
   * |  **4**  |  **4**  |  **5**  | **12** | **9** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-left-radius
   */
  "border-bottom-left-radius"?: Property.BorderBottomLeftRadius<TLength> | undefined;
  /**
   * The **\`border-bottom-right-radius\`** CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |
   * | :-----: | :-----: | :-----: | :----: | :---: |
   * |  **4**  |  **4**  |  **5**  | **12** | **9** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-right-radius
   */
  "border-bottom-right-radius"?: Property.BorderBottomRightRadius<TLength> | undefined;
  /**
   * The **\`border-bottom-style\`** CSS property sets the line style of an element's bottom \`border\`.
   *
   * **Syntax**: \`<line-style>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-style
   */
  "border-bottom-style"?: Property.BorderBottomStyle | undefined;
  /**
   * The **\`border-bottom-width\`** CSS property sets the width of the bottom border of an element.
   *
   * **Syntax**: \`<line-width>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-width
   */
  "border-bottom-width"?: Property.BorderBottomWidth<TLength> | undefined;
  /**
   * The **\`border-collapse\`** CSS property sets whether cells inside a \`<table>\` have shared or separate borders.
   *
   * **Syntax**: \`collapse | separate\`
   *
   * **Initial value**: \`separate\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  |  **1**  | **1.2** | **12** | **5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-collapse
   */
  "border-collapse"?: Property.BorderCollapse | undefined;
  /**
   * The **\`border-end-end-radius\`** CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's \`writing-mode\`, \`direction\`, and \`text-orientation\`. This is useful when building styles to work regardless of the text orientation and\xA0writing mode.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **89** | **66**  | **15** | **89** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-end-end-radius
   */
  "border-end-end-radius"?: Property.BorderEndEndRadius<TLength> | undefined;
  /**
   * The **\`border-end-start-radius\`** CSS property defines a logical border radius on an element, which maps to a physical border radius\xA0depending on the element's \`writing-mode\`, \`direction\`, and \`text-orientation\`.\xA0This is useful when building styles to work regardless of the text orientation and\xA0writing mode.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **89** | **66**  | **15** | **89** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-end-start-radius
   */
  "border-end-start-radius"?: Property.BorderEndStartRadius<TLength> | undefined;
  /**
   * The **\`border-image-outset\`** CSS property sets the distance by which an element's border image is set out from its border box.
   *
   * **Syntax**: \`[ <length> | <number> ]{1,4}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **15** | **15**  | **6**  | **12** | **11** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-outset
   */
  "border-image-outset"?: Property.BorderImageOutset<TLength> | undefined;
  /**
   * The **\`border-image-repeat\`** CSS property defines how the edge regions of a source image are adjusted to fit the dimensions of an element's border image.
   *
   * **Syntax**: \`[ stretch | repeat | round | space ]{1,2}\`
   *
   * **Initial value**: \`stretch\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **15** | **15**  | **6**  | **12** | **11** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-repeat
   */
  "border-image-repeat"?: Property.BorderImageRepeat | undefined;
  /**
   * The **\`border-image-slice\`** CSS property divides the image specified by \`border-image-source\` into regions. These regions form the components of an element's border image.
   *
   * **Syntax**: \`<number-percentage>{1,4} && fill?\`
   *
   * **Initial value**: \`100%\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **15** | **15**  | **6**  | **12** | **11** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-slice
   */
  "border-image-slice"?: Property.BorderImageSlice | undefined;
  /**
   * The **\`border-image-source\`** CSS property sets the source image used to create an element's border image.
   *
   * **Syntax**: \`none | <image>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **15** | **15**  | **6**  | **12** | **11** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-source
   */
  "border-image-source"?: Property.BorderImageSource | undefined;
  /**
   * The **\`border-image-width\`** CSS property sets the width of an element's border image.
   *
   * **Syntax**: \`[ <length-percentage> | <number> | auto ]{1,4}\`
   *
   * **Initial value**: \`1\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **15** | **13**  | **6**  | **12** | **11** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-width
   */
  "border-image-width"?: Property.BorderImageWidth<TLength> | undefined;
  /**
   * The **\`border-inline-color\`** CSS property defines the color of the logical inline borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-color\` and \`border-bottom-color\`, or \`border-right-color\` and \`border-left-color\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-color'>{1,2}\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-color
   */
  "border-inline-color"?: Property.BorderInlineColor | undefined;
  /**
   * The **\`border-inline-end-color\`** CSS property defines the color of the logical inline-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-color\`, \`border-right-color\`, \`border-bottom-color\`, or \`border-left-color\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-color'>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome |           Firefox           |  Safari  |  Edge  | IE  |
   * | :----: | :-------------------------: | :------: | :----: | :-: |
   * | **69** |           **41**            | **12.1** | **79** | No  |
   * |        | 3 _(-moz-border-end-color)_ |          |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-end-color
   */
  "border-inline-end-color"?: Property.BorderInlineEndColor | undefined;
  /**
   * The **\`border-inline-end-style\`** CSS property defines the style of the logical inline end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-style\`, \`border-right-style\`, \`border-bottom-style\`, or \`border-left-style\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-style'>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome |           Firefox           |  Safari  |  Edge  | IE  |
   * | :----: | :-------------------------: | :------: | :----: | :-: |
   * | **69** |           **41**            | **12.1** | **79** | No  |
   * |        | 3 _(-moz-border-end-style)_ |          |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-end-style
   */
  "border-inline-end-style"?: Property.BorderInlineEndStyle | undefined;
  /**
   * The **\`border-inline-end-width\`** CSS property defines the width of the logical inline-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-width\`, \`border-right-width\`, \`border-bottom-width\`, or \`border-left-width\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-width'>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome |           Firefox           |  Safari  |  Edge  | IE  |
   * | :----: | :-------------------------: | :------: | :----: | :-: |
   * | **69** |           **41**            | **12.1** | **79** | No  |
   * |        | 3 _(-moz-border-end-width)_ |          |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-end-width
   */
  "border-inline-end-width"?: Property.BorderInlineEndWidth<TLength> | undefined;
  /**
   * The **\`border-inline-start-color\`** CSS property defines the color of the logical inline start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-color\`, \`border-right-color\`, \`border-bottom-color\`, or \`border-left-color\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-color'>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome |            Firefox            |  Safari  |  Edge  | IE  |
   * | :----: | :---------------------------: | :------: | :----: | :-: |
   * | **69** |            **41**             | **12.1** | **79** | No  |
   * |        | 3 _(-moz-border-start-color)_ |          |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-start-color
   */
  "border-inline-start-color"?: Property.BorderInlineStartColor | undefined;
  /**
   * The **\`border-inline-start-style\`** CSS property defines the style of the logical inline start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-style\`, \`border-right-style\`, \`border-bottom-style\`, or \`border-left-style\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-style'>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome |            Firefox            |  Safari  |  Edge  | IE  |
   * | :----: | :---------------------------: | :------: | :----: | :-: |
   * | **69** |            **41**             | **12.1** | **79** | No  |
   * |        | 3 _(-moz-border-start-style)_ |          |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-start-style
   */
  "border-inline-start-style"?: Property.BorderInlineStartStyle | undefined;
  /**
   * The **\`border-inline-start-width\`** CSS property defines the width of the logical inline-start border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-width\`, \`border-right-width\`, \`border-bottom-width\`, or \`border-left-width\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-width'>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-start-width
   */
  "border-inline-start-width"?: Property.BorderInlineStartWidth<TLength> | undefined;
  /**
   * The **\`border-inline-style\`** CSS property defines the style of the logical inline\xA0borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-style\` and\xA0\`border-bottom-style\`, or\xA0\`border-left-style\` and\xA0\`border-right-style\` properties\xA0depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-style'>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-style
   */
  "border-inline-style"?: Property.BorderInlineStyle | undefined;
  /**
   * The **\`border-inline-width\`** CSS property defines the width of the logical inline\xA0borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-width\` and\xA0\`border-bottom-width\`, or \`border-left-width\`, and\xA0\`border-right-width\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-width'>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-width
   */
  "border-inline-width"?: Property.BorderInlineWidth<TLength> | undefined;
  /**
   * The **\`border-left-color\`** CSS property sets the color of an element's left border. It can also be set with the shorthand CSS properties \`border-color\` or \`border-left\`.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-left-color
   */
  "border-left-color"?: Property.BorderLeftColor | undefined;
  /**
   * The **\`border-left-style\`** CSS property sets the line style of an element's left \`border\`.
   *
   * **Syntax**: \`<line-style>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-left-style
   */
  "border-left-style"?: Property.BorderLeftStyle | undefined;
  /**
   * The **\`border-left-width\`** CSS property sets the width of the left border of an element.
   *
   * **Syntax**: \`<line-width>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-left-width
   */
  "border-left-width"?: Property.BorderLeftWidth<TLength> | undefined;
  /**
   * The **\`border-right-color\`** CSS property sets the color of an element's right border. It can also be set with the shorthand CSS properties \`border-color\` or \`border-right\`.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-right-color
   */
  "border-right-color"?: Property.BorderRightColor | undefined;
  /**
   * The **\`border-right-style\`** CSS property sets the line style of an element's right \`border\`.
   *
   * **Syntax**: \`<line-style>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-right-style
   */
  "border-right-style"?: Property.BorderRightStyle | undefined;
  /**
   * The **\`border-right-width\`** CSS property sets the width of the right border of an element.
   *
   * **Syntax**: \`<line-width>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-right-width
   */
  "border-right-width"?: Property.BorderRightWidth<TLength> | undefined;
  /**
   * The **\`border-spacing\`** CSS property sets the distance between the borders of adjacent \`<table>\` cells. This property applies only when \`border-collapse\` is \`separate\`.
   *
   * **Syntax**: \`<length> <length>?\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-spacing
   */
  "border-spacing"?: Property.BorderSpacing<TLength> | undefined;
  /**
   * The **\`border-start-end-radius\`** CSS property defines a logical border radius on an element, which maps to a physical border radius\xA0depending on the element's \`writing-mode\`, \`direction\`, and \`text-orientation\`.\xA0This is useful when building styles to work regardless of the text orientation and\xA0writing mode.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **89** | **66**  | **15** | **89** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-start-end-radius
   */
  "border-start-end-radius"?: Property.BorderStartEndRadius<TLength> | undefined;
  /**
   * The **\`border-start-start-radius\`** CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's \`writing-mode\`, \`direction\`, and \`text-orientation\`. This is useful when building styles to work regardless of the text orientation and\xA0writing mode.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **89** | **66**  | **15** | **89** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-start-start-radius
   */
  "border-start-start-radius"?: Property.BorderStartStartRadius<TLength> | undefined;
  /**
   * The **\`border-top-color\`** CSS property sets the color of an element's top border. It can also be set with the shorthand CSS properties \`border-color\` or \`border-top\`.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-color
   */
  "border-top-color"?: Property.BorderTopColor | undefined;
  /**
   * The **\`border-top-left-radius\`** CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |
   * | :-----: | :-----: | :-----: | :----: | :---: |
   * |  **4**  |  **4**  |  **5**  | **12** | **9** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-left-radius
   */
  "border-top-left-radius"?: Property.BorderTopLeftRadius<TLength> | undefined;
  /**
   * The **\`border-top-right-radius\`** CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |
   * | :-----: | :-----: | :-----: | :----: | :---: |
   * |  **4**  |  **4**  |  **5**  | **12** | **9** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-right-radius
   */
  "border-top-right-radius"?: Property.BorderTopRightRadius<TLength> | undefined;
  /**
   * The **\`border-top-style\`** CSS property sets the line style of an element's top \`border\`.
   *
   * **Syntax**: \`<line-style>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-style
   */
  "border-top-style"?: Property.BorderTopStyle | undefined;
  /**
   * The **\`border-top-width\`** CSS property sets the width of the top border of an element.
   *
   * **Syntax**: \`<line-width>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-width
   */
  "border-top-width"?: Property.BorderTopWidth<TLength> | undefined;
  /**
   * The **\`bottom\`** CSS property participates in setting the vertical position of a positioned element. It has no effect on non-positioned elements.
   *
   * **Syntax**: \`<length> | <percentage> | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/bottom
   */
  bottom?: Property.Bottom<TLength> | undefined;
  /**
   * The **\`box-decoration-break\`** CSS property specifies how an element's fragments should be rendered when broken across multiple lines, columns, or pages.
   *
   * **Syntax**: \`slice | clone\`
   *
   * **Initial value**: \`slice\`
   *
   * |    Chrome    | Firefox |   Safari    |     Edge     | IE  |
   * | :----------: | :-----: | :---------: | :----------: | :-: |
   * | **22** _-x-_ | **32**  | **7** _-x-_ | **79** _-x-_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/box-decoration-break
   */
  "box-decoration-break"?: Property.BoxDecorationBreak | undefined;
  /**
   * The **\`box-shadow\`** CSS property adds shadow effects around an element's frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color.
   *
   * **Syntax**: \`none | <shadow>#\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |
   * | :-----: | :-----: | :-----: | :----: | :---: |
   * | **10**  |  **4**  | **5.1** | **12** | **9** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/box-shadow
   */
  "box-shadow"?: Property.BoxShadow | undefined;
  /**
   * The **\`box-sizing\`** CSS property sets how the total width and height of an element is calculated.
   *
   * **Syntax**: \`content-box | border-box\`
   *
   * **Initial value**: \`content-box\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |
   * | :-----: | :-----: | :-----: | :----: | :---: |
   * | **10**  | **29**  | **5.1** | **12** | **8** |
   * | 1 _-x-_ | 1 _-x-_ | 3 _-x-_ |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/box-sizing
   */
  "box-sizing"?: Property.BoxSizing | undefined;
  /**
   * The **\`break-after\`** CSS property sets how page, column, or region breaks should behave after a generated box. If there is no generated box, the property is ignored.
   *
   * **Syntax**: \`auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region\`
   *
   * **Initial value**: \`auto\`
   *
   * ---
   *
   * _Supported in Multi-column Layout_
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **50** | **65**  |   No   | **12** | **10** |
   *
   * ---
   *
   * _Supported in Paged Media_
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **50** | **65**  | **10** | **12** | **10** |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/break-after
   */
  "break-after"?: Property.BreakAfter | undefined;
  /**
   * The **\`break-before\`** CSS property sets how page, column, or region breaks should behave before a generated box. If there is no generated box, the property is ignored.
   *
   * **Syntax**: \`auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region\`
   *
   * **Initial value**: \`auto\`
   *
   * ---
   *
   * _Supported in Multi-column Layout_
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **50** | **65**  |   No   | **12** | **10** |
   *
   * ---
   *
   * _Supported in Paged Media_
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **50** | **65**  | **10** | **12** | **10** |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/break-before
   */
  "break-before"?: Property.BreakBefore | undefined;
  /**
   * The **\`break-inside\`** CSS property sets how page, column, or region breaks should behave inside a generated box. If there is no generated box, the property is ignored.
   *
   * **Syntax**: \`auto | avoid | avoid-page | avoid-column | avoid-region\`
   *
   * **Initial value**: \`auto\`
   *
   * ---
   *
   * _Supported in Multi-column Layout_
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **50** | **65**  | **10** | **12** | **10** |
   *
   * ---
   *
   * _Supported in Paged Media_
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **50** | **65**  | **10** | **12** | **10** |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/break-inside
   */
  "break-inside"?: Property.BreakInside | undefined;
  /**
   * The **\`caption-side\`** CSS property puts the content of a table's \`<caption>\` on the specified side. The values are relative to the \`writing-mode\` of the table.
   *
   * **Syntax**: \`top | bottom | block-start | block-end | inline-start | inline-end\`
   *
   * **Initial value**: \`top\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/caption-side
   */
  "caption-side"?: Property.CaptionSide | undefined;
  /**
   * The **\`caret-color\`** CSS property sets the color of the **insertion caret**, the visible marker where the next character typed will be inserted. This is sometimes referred to as the **text input cursor**. The caret appears in elements such as \`<input>\` or those with the \`contenteditable\` attribute. The caret is typically a thin vertical line that flashes to help make it more noticeable. By default, it is black, but its color can be altered with this property.
   *
   * **Syntax**: \`auto | <color>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **53**  | **11.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/caret-color
   */
  "caret-color"?: Property.CaretColor | undefined;
  /**
   * The **\`clear\`** CSS property sets whether an element must be moved below (cleared) floating elements that precede it. The \`clear\` property applies to floating and non-floating elements.
   *
   * **Syntax**: \`none | left | right | both | inline-start | inline-end\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/clear
   */
  clear?: Property.Clear | undefined;
  /**
   * The \`**clip-path**\` CSS property creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden.
   *
   * **Syntax**: \`<clip-source> | [ <basic-shape> || <geometry-box> ] | none\`
   *
   * **Initial value**: \`none\`
   *
   * |  Chrome  | Firefox |  Safari   |  Edge  |   IE   |
   * | :------: | :-----: | :-------: | :----: | :----: |
   * |  **55**  | **3.5** |  **9.1**  | **12** | **10** |
   * | 23 _-x-_ |         | 6.1 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/clip-path
   */
  "clip-path"?: Property.ClipPath | undefined;
  /**
   * The **\`color\`** CSS property sets the foreground color value of an element's text and text decorations, and sets the \`<currentcolor>\` value. \`currentcolor\` may be used as an indirect value on _other_ properties and is the default for other color properties, such as \`border-color\`.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: Varies from one browser to another
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/color
   */
  color?: Property.Color | undefined;
  /**
   * The **\`color-adjust\`** CSS property sets what, if anything, the user agent may do to optimize the appearance of the element on the output device. By default, the browser is allowed to make any adjustments to the element's appearance it determines to be necessary and prudent given the type and capabilities of the output device.
   *
   * **Syntax**: \`economy | exact\`
   *
   * **Initial value**: \`economy\`
   *
   * |                Chrome                 | Firefox |                Safari                |                 Edge                  | IE  |
   * | :-----------------------------------: | :-----: | :----------------------------------: | :-----------------------------------: | :-: |
   * | **49** _(-webkit-print-color-adjust)_ | **48**  | **6** _(-webkit-print-color-adjust)_ | **79** _(-webkit-print-color-adjust)_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/color-adjust
   */
  "color-adjust"?: Property.ColorAdjust | undefined;
  /**
   * The **\`color-scheme\`** CSS property allows an element to indicate which color schemes it can comfortably be rendered in.
   *
   * **Syntax**: \`normal | [ light | dark | <custom-ident> ]+\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **81** |   No    | **13** | **81** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/color-scheme
   */
  "color-scheme"?: Property.ColorScheme | undefined;
  /**
   * The **\`column-count\`** CSS property breaks an element's content into the specified number of columns.
   *
   * **Syntax**: \`<integer> | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **50**  | **52**  |  **9**  | **12** | **10** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/column-count
   */
  "column-count"?: Property.ColumnCount | undefined;
  /**
   * The **\`column-fill\`** CSS property controls how an element's contents are balanced when broken into columns.
   *
   * **Syntax**: \`auto | balance | balance-all\`
   *
   * **Initial value**: \`balance\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |   IE   |
   * | :----: | :-----: | :-----: | :----: | :----: |
   * | **50** | **52**  |  **9**  | **12** | **10** |
   * |        |         | 8 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/column-fill
   */
  "column-fill"?: Property.ColumnFill | undefined;
  /**
   * The **\`column-gap\`** CSS property sets the size of the gap (gutter) between an element's columns.
   *
   * **Syntax**: \`normal | <length-percentage>\`
   *
   * **Initial value**: \`normal\`
   *
   * ---
   *
   * _Supported in Flex Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **84** | **63**  | **14.1** | **84** | No  |
   *
   * ---
   *
   * _Supported in Grid Layout_
   *
   * |         Chrome         |        Firefox         |          Safari          |  Edge  | IE  |
   * | :--------------------: | :--------------------: | :----------------------: | :----: | :-: |
   * |         **66**         |         **61**         |          **12**          | **16** | No  |
   * | 57 _(grid-column-gap)_ | 52 _(grid-column-gap)_ | 10.1 _(grid-column-gap)_ |        |     |
   *
   * ---
   *
   * _Supported in Multi-column Layout_
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **50**  | **52**  | **10**  | **12** | **10** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |        |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/column-gap
   */
  "column-gap"?: Property.ColumnGap<TLength> | undefined;
  /**
   * The **\`column-rule-color\`** CSS property sets the color of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **50**  | **52**  |  **9**  | **12** | **10** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/column-rule-color
   */
  "column-rule-color"?: Property.ColumnRuleColor | undefined;
  /**
   * The **\`column-rule-style\`** CSS property sets the style of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<'border-style'>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **50**  | **52**  |  **9**  | **12** | **10** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/column-rule-style
   */
  "column-rule-style"?: Property.ColumnRuleStyle | undefined;
  /**
   * The **\`column-rule-width\`** CSS property sets the width of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<'border-width'>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **50**  | **52**  |  **9**  | **12** | **10** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/column-rule-width
   */
  "column-rule-width"?: Property.ColumnRuleWidth<TLength> | undefined;
  /**
   * The **\`column-span\`** CSS property makes it possible for an element to span across all columns when its value is set to \`all\`.
   *
   * **Syntax**: \`none | all\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |
   * | :-----: | :-----: | :-------: | :----: | :----: |
   * | **50**  | **71**  |   **9**   | **12** | **10** |
   * | 6 _-x-_ |         | 5.1 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/column-span
   */
  "column-span"?: Property.ColumnSpan | undefined;
  /**
   * The **\`column-width\`** CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the \`column-width\` value. If the width of the container is narrower than the specified value, the single column's width will be smaller than the declared column width.
   *
   * **Syntax**: \`<length> | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **50**  | **50**  |  **9**  | **12** | **10** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/column-width
   */
  "column-width"?: Property.ColumnWidth<TLength> | undefined;
  /**
   * The **\`contain\`** CSS property allows an author to indicate that an element and its contents are, as much as possible, _independent_ of the rest of the document tree. This allows the browser to recalculate layout, style, paint, size, or any combination of them for a limited area of the DOM and not the entire page, leading to obvious performance benefits.
   *
   * **Syntax**: \`none | strict | content | [ size || layout || style || paint ]\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **52** | **69**  |   No   | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/contain
   */
  contain?: Property.Contain | undefined;
  /**
   * The **\`content\`** CSS property replaces an element with a generated value. Objects inserted using the \`content\` property are **anonymous replaced elements**_._
   *
   * **Syntax**: \`normal | none | [ <content-replacement> | <content-list> ] [/ <string> ]?\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/content
   */
  content?: Property.Content | undefined;
  /**
   * The **\`content-visibility\`** CSS property controls whether or not an element renders its contents at all, along with forcing a strong set of containments, allowing user agents to potentially omit large swathes of layout and rendering work until it becomes needed. Basically it enables the user agent to skip an element's rendering work, including layout and painting, until it is needed, makes the initial page load much faster.
   *
   * **Syntax**: \`visible | auto | hidden\`
   *
   * **Initial value**: \`visible\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **85** |   No    |   No   | **85** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/content-visibility
   */
  "content-visibility"?: Property.ContentVisibility | undefined;
  /**
   * The **\`counter-increment\`** CSS property increases or decreases the value of a CSS counter by a given value.
   *
   * **Syntax**: \`[ <custom-ident> <integer>? ]+ | none\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **2**  |  **1**  | **3**  | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/counter-increment
   */
  "counter-increment"?: Property.CounterIncrement | undefined;
  /**
   * The **\`counter-reset\`** CSS property resets a CSS counter to a given value.
   *
   * **Syntax**: \`[ <custom-ident> <integer>? ]+ | none\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **2**  |  **1**  | **3**  | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/counter-reset
   */
  "counter-reset"?: Property.CounterReset | undefined;
  /**
   * The **\`counter-set\`** CSS property sets a CSS counter to a given value. It manipulates the value of existing counters, and will\xA0only create new counters if there isn't already a counter of the given name on the element.
   *
   * **Syntax**: \`[ <custom-ident> <integer>? ]+ | none\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **85** | **68**  |   No   | **85** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/counter-set
   */
  "counter-set"?: Property.CounterSet | undefined;
  /**
   * The **\`cursor\`** CSS property sets the type of mouse cursor, if any, to show when the mouse pointer is over an element.
   *
   * **Syntax**: \`[ [ <url> [ <x> <y> ]? , ]* [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out | grab | grabbing ] ]\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  |  **1**  | **1.2** | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/cursor
   */
  cursor?: Property.Cursor | undefined;
  /**
   * The **\`direction\`** CSS property sets the direction of text, table columns, and horizontal overflow. Use \`rtl\` for languages written from right to left (like Hebrew or Arabic), and \`ltr\` for those written from left to right (like English and most other languages).
   *
   * **Syntax**: \`ltr | rtl\`
   *
   * **Initial value**: \`ltr\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **2**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/direction
   */
  direction?: Property.Direction | undefined;
  /**
   * The **\`display\`** CSS property sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.
   *
   * **Syntax**: \`[ <display-outside> || <display-inside> ] | <display-listitem> | <display-internal> | <display-box> | <display-legacy>\`
   *
   * **Initial value**: \`inline\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/display
   */
  display?: Property.Display | undefined;
  /**
   * The **\`empty-cells\`** CSS property sets whether borders and backgrounds appear around \`<table>\` cells that have no visible content.
   *
   * **Syntax**: \`show | hide\`
   *
   * **Initial value**: \`show\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  |  **1**  | **1.2** | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/empty-cells
   */
  "empty-cells"?: Property.EmptyCells | undefined;
  /**
   * The **\`filter\`** CSS property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders.
   *
   * **Syntax**: \`none | <filter-function-list>\`
   *
   * **Initial value**: \`none\`
   *
   * |  Chrome  | Firefox | Safari  |  Edge  | IE  |
   * | :------: | :-----: | :-----: | :----: | :-: |
   * |  **53**  | **35**  | **9.1** | **12** | No  |
   * | 18 _-x-_ |         | 6 _-x-_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/filter
   */
  filter?: Property.Filter | undefined;
  /**
   * The **\`flex-basis\`** CSS property sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with \`box-sizing\`.
   *
   * **Syntax**: \`content | <'width'>\`
   *
   * **Initial value**: \`auto\`
   *
   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :------: | :-----: | :-----: | :----: | :----: |
   * |  **29**  | **22**  |  **9**  | **12** | **11** |
   * | 22 _-x-_ |         | 7 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/flex-basis
   */
  "flex-basis"?: Property.FlexBasis<TLength> | undefined;
  /**
   * The **\`flex-direction\`** CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).
   *
   * **Syntax**: \`row | row-reverse | column | column-reverse\`
   *
   * **Initial value**: \`row\`
   *
   * |  Chrome  | Firefox | Safari  |  Edge  |    IE    |
   * | :------: | :-----: | :-----: | :----: | :------: |
   * |  **29**  | **20**  |  **9**  | **12** |  **11**  |
   * | 21 _-x-_ |         | 7 _-x-_ |        | 10 _-x-_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/flex-direction
   */
  "flex-direction"?: Property.FlexDirection | undefined;
  /**
   * The **\`flex-grow\`** CSS\xA0property sets the flex grow factor of a flex item main size.
   *
   * **Syntax**: \`<number>\`
   *
   * **Initial value**: \`0\`
   *
   * |  Chrome  | Firefox | Safari  |  Edge  |            IE            |
   * | :------: | :-----: | :-----: | :----: | :----------------------: |
   * |  **29**  | **20**  |  **9**  | **12** |          **11**          |
   * | 22 _-x-_ |         | 7 _-x-_ |        | 10 _(-ms-flex-positive)_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/flex-grow
   */
  "flex-grow"?: Property.FlexGrow | undefined;
  /**
   * The **\`flex-shrink\`** CSS property sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to \`flex-shrink\`.
   *
   * **Syntax**: \`<number>\`
   *
   * **Initial value**: \`1\`
   *
   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :------: | :-----: | :-----: | :----: | :----: |
   * |  **29**  | **20**  |  **9**  | **12** | **10** |
   * | 22 _-x-_ |         | 8 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/flex-shrink
   */
  "flex-shrink"?: Property.FlexShrink | undefined;
  /**
   * The **\`flex-wrap\`** CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines. If wrapping is allowed, it sets the direction that lines are stacked.
   *
   * **Syntax**: \`nowrap | wrap | wrap-reverse\`
   *
   * **Initial value**: \`nowrap\`
   *
   * |  Chrome  | Firefox |  Safari   |  Edge  |   IE   |
   * | :------: | :-----: | :-------: | :----: | :----: |
   * |  **29**  | **28**  |   **9**   | **12** | **11** |
   * | 21 _-x-_ |         | 6.1 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/flex-wrap
   */
  "flex-wrap"?: Property.FlexWrap | undefined;
  /**
   * The **\`float\`** CSS property places an element on the left or right side of its container, allowing text and inline elements to wrap around it. The element is removed from the normal flow of the page, though still remaining a part of the flow (in contrast to absolute positioning).
   *
   * **Syntax**: \`left | right | none | inline-start | inline-end\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/float
   */
  float?: Property.Float | undefined;
  /**
   * The **\`font-family\`** CSS property specifies a prioritized list of one or more font family names and/or generic family names for the selected element.
   *
   * **Syntax**: \`[ <family-name> | <generic-family> ]#\`
   *
   * **Initial value**: depends on user agent
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-family
   */
  "font-family"?: Property.FontFamily | undefined;
  /**
   * The **\`font-feature-settings\`** CSS property controls advanced typographic features in OpenType fonts.
   *
   * **Syntax**: \`normal | <feature-tag-value>#\`
   *
   * **Initial value**: \`normal\`
   *
   * |  Chrome  | Firefox  | Safari  |  Edge  |   IE   |
   * | :------: | :------: | :-----: | :----: | :----: |
   * |  **48**  |  **34**  | **9.1** | **15** | **10** |
   * | 16 _-x-_ | 15 _-x-_ |         |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-feature-settings
   */
  "font-feature-settings"?: Property.FontFeatureSettings | undefined;
  /**
   * The **\`font-kerning\`** CSS property sets the use of the kerning information stored in a font.
   *
   * **Syntax**: \`auto | normal | none\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari  |  Edge  | IE  |
   * | :----: | :-----: | :-----: | :----: | :-: |
   * | **33** | **32**  |  **9**  | **79** | No  |
   * |        |         | 6 _-x-_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-kerning
   */
  "font-kerning"?: Property.FontKerning | undefined;
  /**
   * The **\`font-language-override\`** CSS property controls the use of language-specific glyphs in a typeface.
   *
   * **Syntax**: \`normal | <string>\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   | **34**  |   No   |  No  | No  |
   * |        | 4 _-x-_ |        |      |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-language-override
   */
  "font-language-override"?: Property.FontLanguageOverride | undefined;
  /**
   * The **\`font-optical-sizing\`** CSS property sets whether text rendering is optimized for viewing at different sizes.
   *
   * **Syntax**: \`auto | none\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **79** | **62**  | **11** | **17** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-optical-sizing
   */
  "font-optical-sizing"?: Property.FontOpticalSizing | undefined;
  /**
   * The **\`font-size\`** CSS property sets the size of the font. Changing the font size also updates the sizes of the font size-relative \`<length>\` units, such as\xA0\`em\`, \`ex\`, and so forth.
   *
   * **Syntax**: \`<absolute-size> | <relative-size> | <length-percentage>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-size
   */
  "font-size"?: Property.FontSize<TLength> | undefined;
  /**
   * The **\`font-size-adjust\`** CSS property sets the size of lower-case letters relative to the current font size (which defines the size of upper-case letters).
   *
   * **Syntax**: \`none | [ ex-height | cap-height | ch-width | ic-width | ic-height ]? [ from-font | <number> ]\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |  n/a   |  **1**  |   No   | n/a  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-size-adjust
   */
  "font-size-adjust"?: Property.FontSizeAdjust | undefined;
  /**
   * The **\`font-smooth\`** CSS property controls the application of anti-aliasing when fonts are rendered.
   *
   * **Syntax**: \`auto | never | always | <absolute-size> | <length>\`
   *
   * **Initial value**: \`auto\`
   *
   * |              Chrome              |              Firefox               |              Safari              |               Edge                | IE  |
   * | :------------------------------: | :--------------------------------: | :------------------------------: | :-------------------------------: | :-: |
   * | **5** _(-webkit-font-smoothing)_ | **25** _(-moz-osx-font-smoothing)_ | **4** _(-webkit-font-smoothing)_ | **79** _(-webkit-font-smoothing)_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-smooth
   */
  "font-smooth"?: Property.FontSmooth<TLength> | undefined;
  /**
   * The **\`font-stretch\`** CSS property selects a normal, condensed, or expanded face from a font.
   *
   * **Syntax**: \`<font-stretch-absolute>\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **60** |  **9**  | **11** | **12** | **9** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-stretch
   */
  "font-stretch"?: Property.FontStretch | undefined;
  /**
   * The **\`font-style\`** CSS property sets whether a font should be styled with a normal, italic, or oblique face from its \`font-family\`.
   *
   * **Syntax**: \`normal | italic | oblique <angle>?\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-style
   */
  "font-style"?: Property.FontStyle | undefined;
  /**
   * The **\`font-synthesis\`** CSS property controls which missing typefaces, bold or italic, may be synthesized by the browser.
   *
   * **Syntax**: \`none | [ weight || style || small-caps ]\`
   *
   * **Initial value**: \`weight style\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   | **34**  | **9**  |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-synthesis
   */
  "font-synthesis"?: Property.FontSynthesis | undefined;
  /**
   * The **\`font-variant\`** CSS shorthand property allows you to set all the font variants for a font.
   *
   * **Syntax**: \`normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> || stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero || <east-asian-variant-values> || <east-asian-width-values> || ruby ]\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant
   */
  "font-variant"?: Property.FontVariant | undefined;
  /**
   * The **\`font-variant-caps\`** CSS property controls the use of alternate glyphs for capital letters.
   *
   * **Syntax**: \`normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari  |  Edge  | IE  |
   * | :----: | :-----: | :-----: | :----: | :-: |
   * | **52** | **34**  | **9.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-caps
   */
  "font-variant-caps"?: Property.FontVariantCaps | undefined;
  /**
   * The **\`font-variant-east-asian\`** CSS property controls the use of alternate glyphs for East Asian scripts, like Japanese and Chinese.
   *
   * **Syntax**: \`normal | [ <east-asian-variant-values> || <east-asian-width-values> || ruby ]\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari  |  Edge  | IE  |
   * | :----: | :-----: | :-----: | :----: | :-: |
   * | **63** | **34**  | **9.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-east-asian
   */
  "font-variant-east-asian"?: Property.FontVariantEastAsian | undefined;
  /**
   * The **\`font-variant-ligatures\`** CSS property controls which ligatures and contextual forms are used in textual content of the elements it applies to. This leads to more harmonized forms in the resulting text.
   *
   * **Syntax**: \`normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]\`
   *
   * **Initial value**: \`normal\`
   *
   * |  Chrome  | Firefox | Safari  |  Edge  | IE  |
   * | :------: | :-----: | :-----: | :----: | :-: |
   * |  **34**  | **34**  | **9.1** | **79** | No  |
   * | 31 _-x-_ |         | 7 _-x-_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-ligatures
   */
  "font-variant-ligatures"?: Property.FontVariantLigatures | undefined;
  /**
   * The **\`font-variant-numeric\`** CSS property controls the usage of alternate glyphs for numbers, fractions, and ordinal markers.
   *
   * **Syntax**: \`normal | [ <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero ]\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari  |  Edge  | IE  |
   * | :----: | :-----: | :-----: | :----: | :-: |
   * | **52** | **34**  | **9.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-numeric
   */
  "font-variant-numeric"?: Property.FontVariantNumeric | undefined;
  /**
   * The **\`font-variant-position\`** CSS property controls the use of alternate, smaller glyphs that are positioned as superscript or subscript.
   *
   * **Syntax**: \`normal | sub | super\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari  | Edge | IE  |
   * | :----: | :-----: | :-----: | :--: | :-: |
   * |   No   | **34**  | **9.1** |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-position
   */
  "font-variant-position"?: Property.FontVariantPosition | undefined;
  /**
   * The **\`font-variation-settings\`** CSS property provides low-level control over variable font characteristics, by specifying the four letter axis names of the characteristics you want to vary, along with their values.
   *
   * **Syntax**: \`normal | [ <string> <number> ]#\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **62** | **62**  | **11** | **17** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-variation-settings
   */
  "font-variation-settings"?: Property.FontVariationSettings | undefined;
  /**
   * The **\`font-weight\`** CSS property sets the weight (or boldness) of the font. The weights available depend on the \`font-family\` that is currently set.
   *
   * **Syntax**: \`<font-weight-absolute> | bolder | lighter\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **2**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font-weight
   */
  "font-weight"?: Property.FontWeight | undefined;
  /**
   * The **\`forced-color-adjust\`** CSS property allows authors to opt certain elements out of forced colors mode. This then restores the control of those values to CSS.
   *
   * **Syntax**: \`auto | none\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |              Edge               |                 IE                  |
   * | :----: | :-----: | :----: | :-----------------------------: | :---------------------------------: |
   * | **89** |   No    |   No   |             **79**              | **10** _(-ms-high-contrast-adjust)_ |
   * |        |         |        | 12 _(-ms-high-contrast-adjust)_ |                                     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/forced-color-adjust
   */
  "forced-color-adjust"?: Property.ForcedColorAdjust | undefined;
  /**
   * The **\`grid-auto-columns\`** CSS property specifies the size of an implicitly-created grid column track or pattern of tracks.
   *
   * **Syntax**: \`<track-size>+\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  |             IE              |
   * | :----: | :-----: | :------: | :----: | :-------------------------: |
   * | **57** | **70**  | **10.1** | **16** | **10** _(-ms-grid-columns)_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-auto-columns
   */
  "grid-auto-columns"?: Property.GridAutoColumns<TLength> | undefined;
  /**
   * The **\`grid-auto-flow\`** CSS property controls how the auto-placement algorithm works, specifying exactly how auto-placed items get flowed into the grid.
   *
   * **Syntax**: \`[ row | column ] || dense\`
   *
   * **Initial value**: \`row\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-auto-flow
   */
  "grid-auto-flow"?: Property.GridAutoFlow | undefined;
  /**
   * The **\`grid-auto-rows\`** CSS property specifies the size of an implicitly-created grid row track\xA0or pattern of tracks.
   *
   * **Syntax**: \`<track-size>+\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  |            IE            |
   * | :----: | :-----: | :------: | :----: | :----------------------: |
   * | **57** | **70**  | **10.1** | **16** | **10** _(-ms-grid-rows)_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-auto-rows
   */
  "grid-auto-rows"?: Property.GridAutoRows<TLength> | undefined;
  /**
   * The **\`grid-column-end\`** CSS property specifies a grid item\u2019s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.
   *
   * **Syntax**: \`<grid-line>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-column-end
   */
  "grid-column-end"?: Property.GridColumnEnd | undefined;
  /**
   * The **\`grid-column-start\`** CSS property specifies a grid item\u2019s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.
   *
   * **Syntax**: \`<grid-line>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-column-start
   */
  "grid-column-start"?: Property.GridColumnStart | undefined;
  /**
   * The **\`grid-row-end\`** CSS property specifies a grid item\u2019s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.
   *
   * **Syntax**: \`<grid-line>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-row-end
   */
  "grid-row-end"?: Property.GridRowEnd | undefined;
  /**
   * The **\`grid-row-start\`** CSS property specifies a grid item\u2019s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.
   *
   * **Syntax**: \`<grid-line>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-row-start
   */
  "grid-row-start"?: Property.GridRowStart | undefined;
  /**
   * The **\`grid-template-areas\`** CSS property specifies named grid areas, establishing the cells in the grid and assigning them names.
   *
   * **Syntax**: \`none | <string>+\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-template-areas
   */
  "grid-template-areas"?: Property.GridTemplateAreas | undefined;
  /**
   * The **\`grid-template-columns\`** CSS property defines the line names and track sizing functions of the grid columns.
   *
   * **Syntax**: \`none | <track-list> | <auto-track-list> | subgrid <line-name-list>?\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  |             IE              |
   * | :----: | :-----: | :------: | :----: | :-------------------------: |
   * | **57** | **52**  | **10.1** | **16** | **10** _(-ms-grid-columns)_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-template-columns
   */
  "grid-template-columns"?: Property.GridTemplateColumns<TLength> | undefined;
  /**
   * The **\`grid-template-rows\`** CSS property defines the line names and track sizing functions of the grid rows.
   *
   * **Syntax**: \`none | <track-list> | <auto-track-list> | subgrid <line-name-list>?\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  |            IE            |
   * | :----: | :-----: | :------: | :----: | :----------------------: |
   * | **57** | **52**  | **10.1** | **16** | **10** _(-ms-grid-rows)_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-template-rows
   */
  "grid-template-rows"?: Property.GridTemplateRows<TLength> | undefined;
  /**
   * The **\`hanging-punctuation\`** CSS property specifies whether a punctuation mark should hang at the start or end of a line of text. Hanging punctuation may be placed outside the line box.
   *
   * **Syntax**: \`none | [ first || [ force-end | allow-end ] || last ]\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   |   No    | **10** |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/hanging-punctuation
   */
  "hanging-punctuation"?: Property.HangingPunctuation | undefined;
  /**
   * The **\`height\`** CSS property specifies the height of an element. By default, the property defines the height of the content area. If \`box-sizing\` is set to \`border-box\`, however, it instead determines the height of the border area.
   *
   * **Syntax**: \`auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/height
   */
  height?: Property.Height<TLength> | undefined;
  /**
   * The **\`hyphens\`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.
   *
   * **Syntax**: \`none | manual | auto\`
   *
   * **Initial value**: \`manual\`
   *
   * |  Chrome  | Firefox |    Safari     |  Edge  |      IE      |
   * | :------: | :-----: | :-----------: | :----: | :----------: |
   * |  **55**  | **43**  | **5.1** _-x-_ | **79** | **10** _-x-_ |
   * | 13 _-x-_ | 6 _-x-_ |               |        |              |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/hyphens
   */
  hyphens?: Property.Hyphens | undefined;
  /**
   * The **\`image-orientation\`** CSS property specifies a layout-independent correction to the orientation of an image. It should _not_ be used for any other orientation adjustments; instead, the \`transform\` property should be used with the \`rotate\` \`<transform-function>\`.
   *
   * **Syntax**: \`from-image | <angle> | [ <angle>? flip ]\`
   *
   * **Initial value**: \`from-image\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **81** | **26**  | **13.1** | **81** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/image-orientation
   */
  "image-orientation"?: Property.ImageOrientation | undefined;
  /**
   * The **\`image-rendering\`** CSS property sets an image scaling algorithm. The property applies to an element itself, to any images set in its other properties, and to its descendants.
   *
   * **Syntax**: \`auto | crisp-edges | pixelated\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **13** | **3.6** | **6**  | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/image-rendering
   */
  "image-rendering"?: Property.ImageRendering | undefined;
  /**
   * **Syntax**: \`[ from-image || <resolution> ] && snap?\`
   *
   * **Initial value**: \`1dppx\`
   */
  "image-resolution"?: Property.ImageResolution | undefined;
  /**
   * The \`initial-letter\` CSS property sets styling for dropped, raised, and sunken initial letters.
   *
   * **Syntax**: \`normal | [ <number> <integer>? ]\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox |   Safari    | Edge | IE  |
   * | :----: | :-----: | :---------: | :--: | :-: |
   * |   No   |   No    | **9** _-x-_ |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/initial-letter
   */
  "initial-letter"?: Property.InitialLetter | undefined;
  /**
   * The **\`inline-size\`** CSS property defines the horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the \`width\` or the \`height\` property, depending on the value of \`writing-mode\`.
   *
   * **Syntax**: \`<'width'>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/inline-size
   */
  "inline-size"?: Property.InlineSize<TLength> | undefined;
  /**
   * The **\`inset\`**\xA0CSS property is a shorthand that corresponds to the \`top\`, \`right\`, \`bottom\`, and/or \`left\` properties. It has the same multi-value syntax of the \`margin\` shorthand.
   *
   * **Syntax**: \`<'top'>{1,4}\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/inset
   */
  inset?: Property.Inset<TLength> | undefined;
  /**
   * The **\`inset-inline\`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\` and \`bottom\`, or \`right\` and \`left\` properties depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>{1,2}\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **63**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/inset-block
   */
  "inset-block"?: Property.InsetBlock<TLength> | undefined;
  /**
   * The **\`inset-block-end\`** CSS property defines the logical block end offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\`, \`right\`, \`bottom\`, or \`left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **63**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/inset-block-end
   */
  "inset-block-end"?: Property.InsetBlockEnd<TLength> | undefined;
  /**
   * The **\`inset-block-start\`** CSS property defines the logical block start offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\`, \`right\`, \`bottom\`, or \`left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **63**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/inset-block-start
   */
  "inset-block-start"?: Property.InsetBlockStart<TLength> | undefined;
  /**
   * The **\`inset-inline\`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\` and \`bottom\`, or \`right\` and \`left\` properties depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>{1,2}\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **63**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/inset-inline
   */
  "inset-inline"?: Property.InsetInline<TLength> | undefined;
  /**
   * The **\`inset-inline-end\`** CSS property defines the logical inline end inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\`, \`right\`, \`bottom\`, or \`left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **63**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/inset-inline-end
   */
  "inset-inline-end"?: Property.InsetInlineEnd<TLength> | undefined;
  /**
   * The **\`inset-inline-start\`** CSS property defines the logical inline start inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\`, \`right\`, \`bottom\`, or \`left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **63**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/inset-inline-start
   */
  "inset-inline-start"?: Property.InsetInlineStart<TLength> | undefined;
  /**
   * The **\`isolation\`** CSS property determines whether an element must create a new stacking context.
   *
   * **Syntax**: \`auto | isolate\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **41** | **36**  | **8**  | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/isolation
   */
  isolation?: Property.Isolation | undefined;
  /**
   * The CSS **\`justify-content\`** property defines how the browser distributes space between and around content items along the main-axis of a flex container, and the inline axis of a grid container.
   *
   * **Syntax**: \`normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]\`
   *
   * **Initial value**: \`normal\`
   *
   * ---
   *
   * _Supported in Flex Layout_
   *
   * |  Chrome  | Firefox |  Safari   |  Edge  |   IE   |
   * | :------: | :-----: | :-------: | :----: | :----: |
   * |  **52**  | **20**  |   **9**   | **12** | **11** |
   * | 21 _-x-_ |         | 6.1 _-x-_ |        |        |
   *
   * ---
   *
   * _Supported in Grid Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/justify-content
   */
  "justify-content"?: Property.JustifyContent | undefined;
  /**
   * The CSS **\`justify-items\`** property defines the default \`justify-self\` for all items of the box, giving them all a default way of justifying each box along the appropriate axis.
   *
   * **Syntax**: \`normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ] | legacy | legacy && [ left | right | center ]\`
   *
   * **Initial value**: \`legacy\`
   *
   * ---
   *
   * _Supported in Flex Layout_
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **52** | **20**  | **9**  | **12** | **11** |
   *
   * ---
   *
   * _Supported in Grid Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **45**  | **10.1** | **16** | No  |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/justify-items
   */
  "justify-items"?: Property.JustifyItems | undefined;
  /**
   * The CSS **\`justify-self\`** property sets the way a box is justified inside its alignment container along the appropriate axis.
   *
   * **Syntax**: \`auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]\`
   *
   * **Initial value**: \`auto\`
   *
   * ---
   *
   * _Supported in Flex Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **45**  | **10.1** | **16** | No  |
   *
   * ---
   *
   * _Supported in Grid Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  |      IE      |
   * | :----: | :-----: | :------: | :----: | :----------: |
   * | **57** | **45**  | **10.1** | **16** | **10** _-x-_ |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/justify-self
   */
  "justify-self"?: Property.JustifySelf | undefined;
  /**
   * The **\`justify-tracks\`**\xA0CSS property sets the alignment in the masonry axis for grid containers that have masonry in their inline\xA0axis.
   *
   * **Syntax**: \`[ normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ] ]#\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   |   n/a   |   No   |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/justify-tracks
   */
  "justify-tracks"?: Property.JustifyTracks | undefined;
  /**
   * The **\`left\`** CSS property participates in specifying the horizontal position of a positioned element. It has no effect on non-positioned elements.
   *
   * **Syntax**: \`<length> | <percentage> | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/left
   */
  left?: Property.Left<TLength> | undefined;
  /**
   * The **\`letter-spacing\`** CSS property sets the horizontal spacing behavior between text characters. This value is added to the natural spacing between characters while rendering the text. Positive values of \`letter-spacing\` causes characters to spread farther apart, while negative values of \`letter-spacing\` bring characters closer together.
   *
   * **Syntax**: \`normal | <length>\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/letter-spacing
   */
  "letter-spacing"?: Property.LetterSpacing<TLength> | undefined;
  /**
   * The **\`line-break\`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.
   *
   * **Syntax**: \`auto | loose | normal | strict | anywhere\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE    |
   * | :-----: | :-----: | :-----: | :----: | :-----: |
   * | **58**  | **69**  | **11**  | **14** | **5.5** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |         |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/line-break
   */
  "line-break"?: Property.LineBreak | undefined;
  /**
   * The **\`line-height\`** CSS property sets the height of a line box. It's commonly used to set the distance between lines of text. On block-level elements, it specifies the minimum height of line boxes within the element. On non-replaced inline elements, it specifies the height that is used to calculate line box height.
   *
   * **Syntax**: \`normal | <number> | <length> | <percentage>\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/line-height
   */
  "line-height"?: Property.LineHeight<TLength> | undefined;
  /**
   * The **\`line-height-step\`** CSS property sets the step unit for line box heights. When the property is set, line box heights are rounded up to the closest multiple of the unit.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |  n/a   |   No    |   No   | n/a  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/line-height-step
   */
  "line-height-step"?: Property.LineHeightStep<TLength> | undefined;
  /**
   * The **\`list-style-image\`** CSS property sets an image to be used as the list item marker.
   *
   * **Syntax**: \`<image> | none\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/list-style-image
   */
  "list-style-image"?: Property.ListStyleImage | undefined;
  /**
   * The **\`list-style-position\`** CSS property sets the position of the \`::marker\` relative to a list item.
   *
   * **Syntax**: \`inside | outside\`
   *
   * **Initial value**: \`outside\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/list-style-position
   */
  "list-style-position"?: Property.ListStylePosition | undefined;
  /**
   * The **\`list-style-type\`** CSS property sets the marker (such as a disc, character, or custom counter style) of a list item element.
   *
   * **Syntax**: \`<counter-style> | <string> | none\`
   *
   * **Initial value**: \`disc\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/list-style-type
   */
  "list-style-type"?: Property.ListStyleType | undefined;
  /**
   * The **\`margin-block\`** CSS shorthand property defines the logical block start and end margins of an element, which maps to physical margins depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'margin-left'>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-block
   */
  "margin-block"?: Property.MarginBlock<TLength> | undefined;
  /**
   * The **\`margin-block-end\`** CSS property defines the logical block end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'margin-left'>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-block-end
   */
  "margin-block-end"?: Property.MarginBlockEnd<TLength> | undefined;
  /**
   * The **\`margin-block-start\`** CSS property defines the logical block start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'margin-left'>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-block-start
   */
  "margin-block-start"?: Property.MarginBlockStart<TLength> | undefined;
  /**
   * The **\`margin-bottom\`** CSS property sets the margin area on the bottom of an element. A positive value places it farther from its neighbors, while a negative value places it closer.
   *
   * **Syntax**: \`<length> | <percentage> | auto\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-bottom
   */
  "margin-bottom"?: Property.MarginBottom<TLength> | undefined;
  /**
   * The **\`margin-inline\`** CSS shorthand property is a shorthand property that defines both the logical inline start and end margins of an element, which maps to physical margins depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'margin-left'>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-inline
   */
  "margin-inline"?: Property.MarginInline<TLength> | undefined;
  /**
   * The **\`margin-inline-end\`** CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. In other words, it corresponds to the \`margin-top\`, \`margin-right\`, \`margin-bottom\` or \`margin-left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'margin-left'>\`
   *
   * **Initial value**: \`0\`
   *
   * |          Chrome          |        Firefox        |          Safari          |  Edge  | IE  |
   * | :----------------------: | :-------------------: | :----------------------: | :----: | :-: |
   * |          **69**          |        **41**         |         **12.1**         | **79** | No  |
   * | 2 _(-webkit-margin-end)_ | 3 _(-moz-margin-end)_ | 3 _(-webkit-margin-end)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-inline-end
   */
  "margin-inline-end"?: Property.MarginInlineEnd<TLength> | undefined;
  /**
   * The **\`margin-inline-start\`** CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`margin-top\`, \`margin-right\`, \`margin-bottom\`, or \`margin-left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'margin-left'>\`
   *
   * **Initial value**: \`0\`
   *
   * |           Chrome           |         Firefox         |           Safari           |  Edge  | IE  |
   * | :------------------------: | :---------------------: | :------------------------: | :----: | :-: |
   * |           **69**           |         **41**          |          **12.1**          | **79** | No  |
   * | 2 _(-webkit-margin-start)_ | 3 _(-moz-margin-start)_ | 3 _(-webkit-margin-start)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-inline-start
   */
  "margin-inline-start"?: Property.MarginInlineStart<TLength> | undefined;
  /**
   * The **\`margin-left\`** CSS property sets the margin area on the left side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.
   *
   * **Syntax**: \`<length> | <percentage> | auto\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-left
   */
  "margin-left"?: Property.MarginLeft<TLength> | undefined;
  /**
   * The **\`margin-right\`** CSS property sets the margin area on the right side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.
   *
   * **Syntax**: \`<length> | <percentage> | auto\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-right
   */
  "margin-right"?: Property.MarginRight<TLength> | undefined;
  /**
   * The **\`margin-top\`** CSS property sets the margin area on the top of an element. A positive value places it farther from its neighbors, while a negative value places it closer.
   *
   * **Syntax**: \`<length> | <percentage> | auto\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin-top
   */
  "margin-top"?: Property.MarginTop<TLength> | undefined;
  /**
   * The **\`mask-border-mode\`** CSS property specifies the blending mode used in a mask border.
   *
   * **Syntax**: \`luminance | alpha\`
   *
   * **Initial value**: \`alpha\`
   */
  "mask-border-mode"?: Property.MaskBorderMode | undefined;
  /**
   * The **\`mask-border-outset\`** CSS property specifies the distance by which an element's mask border is set out from its border box.
   *
   * **Syntax**: \`[ <length> | <number> ]{1,4}\`
   *
   * **Initial value**: \`0\`
   *
   * |                 Chrome                  | Firefox |                  Safari                   |                   Edge                   | IE  |
   * | :-------------------------------------: | :-----: | :---------------------------------------: | :--------------------------------------: | :-: |
   * | **1** _(-webkit-mask-box-image-outset)_ |   No    | **3.1** _(-webkit-mask-box-image-outset)_ | **79** _(-webkit-mask-box-image-outset)_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-outset
   */
  "mask-border-outset"?: Property.MaskBorderOutset<TLength> | undefined;
  /**
   * The **\`mask-border-repeat\`** CSS property sets how the edge regions of a source image are adjusted to fit the dimensions of an element's mask border.
   *
   * **Syntax**: \`[ stretch | repeat | round | space ]{1,2}\`
   *
   * **Initial value**: \`stretch\`
   *
   * |                 Chrome                  | Firefox |                  Safari                   |                   Edge                   | IE  |
   * | :-------------------------------------: | :-----: | :---------------------------------------: | :--------------------------------------: | :-: |
   * | **1** _(-webkit-mask-box-image-repeat)_ |   No    | **3.1** _(-webkit-mask-box-image-repeat)_ | **79** _(-webkit-mask-box-image-repeat)_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-repeat
   */
  "mask-border-repeat"?: Property.MaskBorderRepeat | undefined;
  /**
   * The **\`mask-border-slice\`** CSS property divides the image set by \`mask-border-source\` into regions. These regions are used to form the components of an element's mask border.
   *
   * **Syntax**: \`<number-percentage>{1,4} fill?\`
   *
   * **Initial value**: \`0\`
   *
   * |                 Chrome                 | Firefox |                  Safari                  |                  Edge                   | IE  |
   * | :------------------------------------: | :-----: | :--------------------------------------: | :-------------------------------------: | :-: |
   * | **1** _(-webkit-mask-box-image-slice)_ |   No    | **3.1** _(-webkit-mask-box-image-slice)_ | **79** _(-webkit-mask-box-image-slice)_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-slice
   */
  "mask-border-slice"?: Property.MaskBorderSlice | undefined;
  /**
   * The **\`mask-border-source\`** CSS property sets the source image used to create an element's mask border.
   *
   * **Syntax**: \`none | <image>\`
   *
   * **Initial value**: \`none\`
   *
   * |                 Chrome                  | Firefox |                  Safari                   |                   Edge                   | IE  |
   * | :-------------------------------------: | :-----: | :---------------------------------------: | :--------------------------------------: | :-: |
   * | **1** _(-webkit-mask-box-image-source)_ |   No    | **3.1** _(-webkit-mask-box-image-source)_ | **79** _(-webkit-mask-box-image-source)_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-source
   */
  "mask-border-source"?: Property.MaskBorderSource | undefined;
  /**
   * The **\`mask-border-width\`** CSS property sets the width of an element's mask border.
   *
   * **Syntax**: \`[ <length-percentage> | <number> | auto ]{1,4}\`
   *
   * **Initial value**: \`auto\`
   *
   * |                 Chrome                 | Firefox |                  Safari                  |                  Edge                   | IE  |
   * | :------------------------------------: | :-----: | :--------------------------------------: | :-------------------------------------: | :-: |
   * | **1** _(-webkit-mask-box-image-width)_ |   No    | **3.1** _(-webkit-mask-box-image-width)_ | **79** _(-webkit-mask-box-image-width)_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-width
   */
  "mask-border-width"?: Property.MaskBorderWidth<TLength> | undefined;
  /**
   * The **\`mask-clip\`** CSS property determines the area which is affected by a mask. The painted content of an element must be restricted to this area.
   *
   * **Syntax**: \`[ <geometry-box> | no-clip ]#\`
   *
   * **Initial value**: \`border-box\`
   *
   * |   Chrome    | Firefox |   Safari    |     Edge     | IE  |
   * | :---------: | :-----: | :---------: | :----------: | :-: |
   * | **1** _-x-_ | **53**  | **4** _-x-_ | **79** _-x-_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-clip
   */
  "mask-clip"?: Property.MaskClip | undefined;
  /**
   * The **\`mask-composite\`** CSS property represents a compositing operation used on the current mask layer with the mask layers below it.
   *
   * **Syntax**: \`<compositing-operator>#\`
   *
   * **Initial value**: \`add\`
   *
   * | Chrome | Firefox | Safari | Edge  | IE  |
   * | :----: | :-----: | :----: | :---: | :-: |
   * |   No   | **53**  |   No   | 18-79 | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-composite
   */
  "mask-composite"?: Property.MaskComposite | undefined;
  /**
   * The **\`mask-image\`** CSS property sets the image that is used as mask layer for an element.
   *
   * **Syntax**: \`<mask-reference>#\`
   *
   * **Initial value**: \`none\`
   *
   * |   Chrome    | Firefox |   Safari    | Edge  | IE  |
   * | :---------: | :-----: | :---------: | :---: | :-: |
   * | **1** _-x-_ | **53**  | **4** _-x-_ | 16-79 | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-image
   */
  "mask-image"?: Property.MaskImage | undefined;
  /**
   * The **\`mask-mode\`** CSS property sets whether the mask reference defined by \`mask-image\` is treated as a luminance or alpha mask.
   *
   * **Syntax**: \`<masking-mode>#\`
   *
   * **Initial value**: \`match-source\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   | **53**  |   No   |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-mode
   */
  "mask-mode"?: Property.MaskMode | undefined;
  /**
   * The **\`mask-origin\`** CSS property sets the origin of a mask.
   *
   * **Syntax**: \`<geometry-box>#\`
   *
   * **Initial value**: \`border-box\`
   *
   * |   Chrome    | Firefox |   Safari    |     Edge     | IE  |
   * | :---------: | :-----: | :---------: | :----------: | :-: |
   * | **1** _-x-_ | **53**  | **4** _-x-_ | **79** _-x-_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-origin
   */
  "mask-origin"?: Property.MaskOrigin | undefined;
  /**
   * The **\`mask-position\`** CSS property sets the initial position, relative to the mask position layer set by \`mask-origin\`, for each defined mask image.
   *
   * **Syntax**: \`<position>#\`
   *
   * **Initial value**: \`center\`
   *
   * |   Chrome    | Firefox |    Safari     | Edge  | IE  |
   * | :---------: | :-----: | :-----------: | :---: | :-: |
   * | **1** _-x-_ | **53**  | **3.1** _-x-_ | 18-79 | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-position
   */
  "mask-position"?: Property.MaskPosition<TLength> | undefined;
  /**
   * The **\`mask-repeat\`** CSS property sets how mask images are repeated. A mask image can be repeated along the horizontal axis, the vertical axis, both axes, or not repeated at all.
   *
   * **Syntax**: \`<repeat-style>#\`
   *
   * **Initial value**: \`no-repeat\`
   *
   * |   Chrome    | Firefox |    Safari     | Edge  | IE  |
   * | :---------: | :-----: | :-----------: | :---: | :-: |
   * | **1** _-x-_ | **53**  | **3.1** _-x-_ | 18-79 | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-repeat
   */
  "mask-repeat"?: Property.MaskRepeat | undefined;
  /**
   * The **\`mask-size\`** CSS property specifies the sizes of the mask images. The size of the image can be fully or partially constrained in order to preserve its intrinsic ratio.
   *
   * **Syntax**: \`<bg-size>#\`
   *
   * **Initial value**: \`auto\`
   *
   * |   Chrome    | Firefox |   Safari    | Edge  | IE  |
   * | :---------: | :-----: | :---------: | :---: | :-: |
   * | **4** _-x-_ | **53**  | **4** _-x-_ | 18-79 | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-size
   */
  "mask-size"?: Property.MaskSize<TLength> | undefined;
  /**
   * The **\`mask-type\`** CSS property sets whether an SVG \`<mask>\` element is used as a _luminance_ or an _alpha_ mask. It applies to the \`<mask>\` element itself.
   *
   * **Syntax**: \`luminance | alpha\`
   *
   * **Initial value**: \`luminance\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **24** | **35**  | **7**  | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-type
   */
  "mask-type"?: Property.MaskType | undefined;
  /**
   * The \`math-style\` property\xA0indicates whether MathML equations should render with normal or compact height.
   *
   * **Syntax**: \`normal | compact\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox |  Safari  | Edge | IE  |
   * | :----: | :-----: | :------: | :--: | :-: |
   * |  n/a   |   n/a   | **14.1** |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/math-style
   */
  "math-style"?: Property.MathStyle | undefined;
  /**
   * The \`**max-block-size**\` CSS property specifies the maximum size of an element in the direction opposite that of the writing direction as specified by \`writing-mode\`. That is, if the writing direction is horizontal, then \`max-block-size\` is equivalent to \`max-height\`; if the writing direction is vertical, \`max-block-size\` is the same as \`max-width\`.
   *
   * **Syntax**: \`<'max-width'>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/max-block-size
   */
  "max-block-size"?: Property.MaxBlockSize<TLength> | undefined;
  /**
   * The **\`max-height\`** CSS property sets the maximum height of an element. It prevents the used value of the \`height\` property from becoming larger than the value specified for \`max-height\`.
   *
   * **Syntax**: \`none | <length-percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **18** |  **1**  | **1.3** | **12** | **7** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/max-height
   */
  "max-height"?: Property.MaxHeight<TLength> | undefined;
  /**
   * The **\`max-inline-size\`** CSS property defines the horizontal or vertical maximum size of an element's block, depending on its writing mode. It corresponds to either the \`max-width\` or the \`max-height\` property, depending on the value of \`writing-mode\`.
   *
   * **Syntax**: \`<'max-width'>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |   Safari   |  Edge  | IE  |
   * | :----: | :-----: | :--------: | :----: | :-: |
   * | **57** | **41**  |  **12.1**  | **79** | No  |
   * |        |         | 10.1 _-x-_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/max-inline-size
   */
  "max-inline-size"?: Property.MaxInlineSize<TLength> | undefined;
  /**
   * **Syntax**: \`none | <integer>\`
   *
   * **Initial value**: \`none\`
   */
  "max-lines"?: Property.MaxLines | undefined;
  /**
   * The **\`max-width\`** CSS property sets the maximum width of an element. It prevents the used value of the \`width\` property from becoming larger than the value specified by \`max-width\`.
   *
   * **Syntax**: \`none | <length-percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **7** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/max-width
   */
  "max-width"?: Property.MaxWidth<TLength> | undefined;
  /**
   * The **\`min-block-size\`** CSS property defines the minimum horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the \`min-width\` or the \`min-height\` property, depending on the value of \`writing-mode\`.
   *
   * **Syntax**: \`<'min-width'>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/min-block-size
   */
  "min-block-size"?: Property.MinBlockSize<TLength> | undefined;
  /**
   * The **\`min-height\`** CSS property sets the minimum height of an element. It prevents the used value of the \`height\` property from becoming smaller than the value specified for \`min-height\`.
   *
   * **Syntax**: \`auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  |  **3**  | **1.3** | **12** | **7** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/min-height
   */
  "min-height"?: Property.MinHeight<TLength> | undefined;
  /**
   * The **\`min-inline-size\`** CSS property defines the horizontal or vertical minimal size of an element's block, depending on its writing mode. It corresponds to either the \`min-width\` or the \`min-height\` property, depending on the value of \`writing-mode\`.
   *
   * **Syntax**: \`<'min-width'>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/min-inline-size
   */
  "min-inline-size"?: Property.MinInlineSize<TLength> | undefined;
  /**
   * The **\`min-width\`** CSS property sets the minimum width of an element. It prevents the used value of the \`width\` property from becoming smaller than the value specified for \`min-width\`.
   *
   * **Syntax**: \`auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **7** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/min-width
   */
  "min-width"?: Property.MinWidth<TLength> | undefined;
  /**
   * The **\`mix-blend-mode\`** CSS property sets how an element's content should blend with the content of the element's parent and the element's background.
   *
   * **Syntax**: \`<blend-mode>\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **41** | **32**  | **8**  | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mix-blend-mode
   */
  "mix-blend-mode"?: Property.MixBlendMode | undefined;
  /**
   * The **\`offset-distance\`** CSS property specifies a position along an \`offset-path\` for an element to be placed.
   *
   * **Syntax**: \`<length-percentage>\`
   *
   * **Initial value**: \`0\`
   *
   * |         Chrome         | Firefox | Safari |  Edge  | IE  |
   * | :--------------------: | :-----: | :----: | :----: | :-: |
   * |         **55**         | **72**  |   No   | **79** | No  |
   * | 46 _(motion-distance)_ |         |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset-distance
   */
  "motion-distance"?: Property.OffsetDistance<TLength> | undefined;
  /**
   * The **\`offset-path\`** CSS property specifies a motion path for an element to follow and defines the element's positioning within the parent container or SVG coordinate system.
   *
   * **Syntax**: \`none | ray( [ <angle> && <size> && contain? ] ) | <path()> | <url> | [ <basic-shape> || <geometry-box> ]\`
   *
   * **Initial value**: \`none\`
   *
   * |       Chrome       | Firefox | Safari |  Edge  | IE  |
   * | :----------------: | :-----: | :----: | :----: | :-: |
   * |       **55**       | **72**  |   No   | **79** | No  |
   * | 46 _(motion-path)_ |         |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset-path
   */
  "motion-path"?: Property.OffsetPath | undefined;
  /**
   * The **\`offset-rotate\`** CSS property defines the orientation/direction of the element as it is positioned along the \`offset-path\`.
   *
   * **Syntax**: \`[ auto | reverse ] || <angle>\`
   *
   * **Initial value**: \`auto\`
   *
   * |         Chrome         | Firefox | Safari |  Edge  | IE  |
   * | :--------------------: | :-----: | :----: | :----: | :-: |
   * |         **56**         | **72**  |   No   | **79** | No  |
   * | 46 _(motion-rotation)_ |         |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset-rotate
   */
  "motion-rotation"?: Property.OffsetRotate | undefined;
  /**
   * The **\`object-fit\`** CSS property sets how the content of a replaced element, such as an \`<img>\` or \`<video>\`, should be resized to fit its container.
   *
   * **Syntax**: \`fill | contain | cover | none | scale-down\`
   *
   * **Initial value**: \`fill\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **32** | **36**  | **10** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/object-fit
   */
  "object-fit"?: Property.ObjectFit | undefined;
  /**
   * The **\`object-position\`** CSS property specifies the alignment of the selected replaced element's contents within the element's box. Areas of the box which aren't covered by the replaced element's object will show the element's background.
   *
   * **Syntax**: \`<position>\`
   *
   * **Initial value**: \`50% 50%\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **32** | **36**  | **10** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/object-position
   */
  "object-position"?: Property.ObjectPosition<TLength> | undefined;
  /**
   * **Syntax**: \`auto | <position>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **79** | **72**  |   No   | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset-anchor
   */
  "offset-anchor"?: Property.OffsetAnchor<TLength> | undefined;
  /**
   * The **\`offset-distance\`** CSS property specifies a position along an \`offset-path\` for an element to be placed.
   *
   * **Syntax**: \`<length-percentage>\`
   *
   * **Initial value**: \`0\`
   *
   * |         Chrome         | Firefox | Safari |  Edge  | IE  |
   * | :--------------------: | :-----: | :----: | :----: | :-: |
   * |         **55**         | **72**  |   No   | **79** | No  |
   * | 46 _(motion-distance)_ |         |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset-distance
   */
  "offset-distance"?: Property.OffsetDistance<TLength> | undefined;
  /**
   * The **\`offset-path\`** CSS property specifies a motion path for an element to follow and defines the element's positioning within the parent container or SVG coordinate system.
   *
   * **Syntax**: \`none | ray( [ <angle> && <size> && contain? ] ) | <path()> | <url> | [ <basic-shape> || <geometry-box> ]\`
   *
   * **Initial value**: \`none\`
   *
   * |       Chrome       | Firefox | Safari |  Edge  | IE  |
   * | :----------------: | :-----: | :----: | :----: | :-: |
   * |       **55**       | **72**  |   No   | **79** | No  |
   * | 46 _(motion-path)_ |         |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset-path
   */
  "offset-path"?: Property.OffsetPath | undefined;
  /**
   * The **\`offset-rotate\`** CSS property defines the orientation/direction of the element as it is positioned along the \`offset-path\`.
   *
   * **Syntax**: \`[ auto | reverse ] || <angle>\`
   *
   * **Initial value**: \`auto\`
   *
   * |         Chrome         | Firefox | Safari |  Edge  | IE  |
   * | :--------------------: | :-----: | :----: | :----: | :-: |
   * |         **56**         | **72**  |   No   | **79** | No  |
   * | 46 _(motion-rotation)_ |         |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset-rotate
   */
  "offset-rotate"?: Property.OffsetRotate | undefined;
  /**
   * The **\`offset-rotate\`** CSS property defines the orientation/direction of the element as it is positioned along the \`offset-path\`.
   *
   * **Syntax**: \`[ auto | reverse ] || <angle>\`
   *
   * **Initial value**: \`auto\`
   *
   * |         Chrome         | Firefox | Safari |  Edge  | IE  |
   * | :--------------------: | :-----: | :----: | :----: | :-: |
   * |         **56**         | **72**  |   No   | **79** | No  |
   * | 46 _(motion-rotation)_ |         |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset-rotate
   */
  "offset-rotation"?: Property.OffsetRotate | undefined;
  /**
   * The **\`opacity\`** CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.
   *
   * **Syntax**: \`<alpha-value>\`
   *
   * **Initial value**: \`1.0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **2**  | **12** | **9** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/opacity
   */
  opacity?: Property.Opacity | undefined;
  /**
   * The **\`order\`** CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending \`order\` value and then by their source code order.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`0\`
   *
   * |  Chrome  | Firefox | Safari  |  Edge  |    IE    |
   * | :------: | :-----: | :-----: | :----: | :------: |
   * |  **29**  | **20**  |  **9**  | **12** |  **11**  |
   * | 21 _-x-_ |         | 7 _-x-_ |        | 10 _-x-_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/order
   */
  order?: Property.Order | undefined;
  /**
   * The **\`orphans\`** CSS property sets the minimum number of lines in a block container that must be shown at the _bottom_ of a page, region, or column.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`2\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **25** |   No    | **1.3** | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/orphans
   */
  orphans?: Property.Orphans | undefined;
  /**
   * The **\`outline-color\`** CSS property sets the color of an element's outline.
   *
   * **Syntax**: \`<color> | invert\`
   *
   * **Initial value**: \`invert\`, for browsers supporting it, \`currentColor\` for the other
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  | **1.5** | **1.2** | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/outline-color
   */
  "outline-color"?: Property.OutlineColor | undefined;
  /**
   * The **\`outline-offset\`** CSS property sets the amount of space between an outline and the edge or border of an element.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari  |  Edge  | IE  |
   * | :----: | :-----: | :-----: | :----: | :-: |
   * | **1**  | **1.5** | **1.2** | **15** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/outline-offset
   */
  "outline-offset"?: Property.OutlineOffset<TLength> | undefined;
  /**
   * The **\`outline-style\`** CSS property sets the style of an element's outline. An outline is a line that is drawn around an element, outside the \`border\`.
   *
   * **Syntax**: \`auto | <'border-style'>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  | **1.5** | **1.2** | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/outline-style
   */
  "outline-style"?: Property.OutlineStyle | undefined;
  /**
   * The CSS **\`outline-width\`** property sets the thickness of an element's outline. An outline is a line that is drawn around an element, outside the \`border\`.
   *
   * **Syntax**: \`<line-width>\`
   *
   * **Initial value**: \`medium\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  | **1.5** | **1.2** | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/outline-width
   */
  "outline-width"?: Property.OutlineWidth<TLength> | undefined;
  /**
   * **Syntax**: \`auto | none\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **56** | **66**  |   No   | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-anchor
   */
  "overflow-anchor"?: Property.OverflowAnchor | undefined;
  /**
   * **Syntax**: \`visible | hidden | clip | scroll | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   | **69**  |   No   |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-block
   */
  "overflow-block"?: Property.OverflowBlock | undefined;
  /**
   * The **\`overflow-clip-box\`** CSS property specifies relative to which box the clipping happens when there is an overflow. It is short hand for the \`overflow-clip-box-inline\` and \`overflow-clip-box-block\` properties.
   *
   * **Syntax**: \`padding-box | content-box\`
   *
   * **Initial value**: \`padding-box\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   | **29**  |   No   |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Mozilla/Gecko/Chrome/CSS/overflow-clip-box
   */
  "overflow-clip-box"?: Property.OverflowClipBox | undefined;
  /**
   * **Syntax**: \`<visual-box> || <length [0,\u221E]>\`
   *
   * **Initial value**: \`0px\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **90** |   No    |   No   | **90** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-clip-margin
   */
  "overflow-clip-margin"?: Property.OverflowClipMargin<TLength> | undefined;
  /**
   * **Syntax**: \`visible | hidden | clip | scroll | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   | **69**  |   No   |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-inline
   */
  "overflow-inline"?: Property.OverflowInline | undefined;
  /**
   * The \`**overflow-wrap**\` CSS property applies to inline elements, setting whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box.
   *
   * **Syntax**: \`normal | break-word | anywhere\`
   *
   * **Initial value**: \`normal\`
   *
   * |     Chrome      |      Firefox      |     Safari      |       Edge       |          IE           |
   * | :-------------: | :---------------: | :-------------: | :--------------: | :-------------------: |
   * |     **23**      |      **49**       |      **7**      |      **18**      | **5.5** _(word-wrap)_ |
   * | 1 _(word-wrap)_ | 3.5 _(word-wrap)_ | 1 _(word-wrap)_ | 12 _(word-wrap)_ |                       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-wrap
   */
  "overflow-wrap"?: Property.OverflowWrap | undefined;
  /**
   * The **\`overflow-x\`** CSS property sets what shows when content overflows a block-level element's left and right edges. This may be nothing, a scroll bar, or the overflow content.
   *
   * **Syntax**: \`visible | hidden | clip | scroll | auto\`
   *
   * **Initial value**: \`visible\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  | **3.5** | **3**  | **12** | **5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-x
   */
  "overflow-x"?: Property.OverflowX | undefined;
  /**
   * The **\`overflow-y\`** CSS property sets what shows when content overflows a block-level element's top and bottom edges. This may be nothing, a scroll bar, or the overflow content.
   *
   * **Syntax**: \`visible | hidden | clip | scroll | auto\`
   *
   * **Initial value**: \`visible\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  | **3.5** | **3**  | **12** | **5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-y
   */
  "overflow-y"?: Property.OverflowY | undefined;
  /**
   * The **\`overscroll-behavior-block\`**\xA0CSS property sets the browser's behavior when the block direction\xA0boundary of a scrolling area is reached.
   *
   * **Syntax**: \`contain | none | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **77** | **73**  |   No   | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-block
   */
  "overscroll-behavior-block"?: Property.OverscrollBehaviorBlock | undefined;
  /**
   * The **\`overscroll-behavior-inline\`**\xA0CSS property sets the browser's behavior when the inline\xA0direction\xA0boundary of a scrolling area is reached.
   *
   * **Syntax**: \`contain | none | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **77** | **73**  |   No   | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-inline
   */
  "overscroll-behavior-inline"?: Property.OverscrollBehaviorInline | undefined;
  /**
   * The **\`overscroll-behavior-x\`** CSS property sets the browser's behavior when the horizontal boundary of a scrolling area is reached.
   *
   * **Syntax**: \`contain | none | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **63** | **59**  |   No   | **18** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-x
   */
  "overscroll-behavior-x"?: Property.OverscrollBehaviorX | undefined;
  /**
   * The **\`overscroll-behavior-y\`** CSS property sets the browser's behavior when the vertical boundary of a scrolling area is reached.
   *
   * **Syntax**: \`contain | none | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **63** | **59**  |   No   | **18** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-y
   */
  "overscroll-behavior-y"?: Property.OverscrollBehaviorY | undefined;
  /**
   * The **\`padding-block\`** CSS shorthand property defines the logical block start and end padding of an element, which maps to physical padding properties depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-block
   */
  "padding-block"?: Property.PaddingBlock<TLength> | undefined;
  /**
   * The **\`padding-block-end\`** CSS property defines the logical block end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-block-end
   */
  "padding-block-end"?: Property.PaddingBlockEnd<TLength> | undefined;
  /**
   * The **\`padding-block-start\`** CSS property defines the logical block start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-block-start
   */
  "padding-block-start"?: Property.PaddingBlockStart<TLength> | undefined;
  /**
   * The **\`padding-bottom\`** CSS property sets the height of the padding area on the bottom of an element.
   *
   * **Syntax**: \`<length> | <percentage>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-bottom
   */
  "padding-bottom"?: Property.PaddingBottom<TLength> | undefined;
  /**
   * The **\`padding-inline\`** CSS shorthand property defines the logical inline start and end padding of an element, which maps to physical padding properties depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-inline
   */
  "padding-inline"?: Property.PaddingInline<TLength> | undefined;
  /**
   * The **\`padding-inline-end\`** CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>\`
   *
   * **Initial value**: \`0\`
   *
   * |          Chrome           |        Firefox         |          Safari           |  Edge  | IE  |
   * | :-----------------------: | :--------------------: | :-----------------------: | :----: | :-: |
   * |          **69**           |         **41**         |         **12.1**          | **79** | No  |
   * | 2 _(-webkit-padding-end)_ | 3 _(-moz-padding-end)_ | 3 _(-webkit-padding-end)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-inline-end
   */
  "padding-inline-end"?: Property.PaddingInlineEnd<TLength> | undefined;
  /**
   * The **\`padding-inline-start\`** CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>\`
   *
   * **Initial value**: \`0\`
   *
   * |           Chrome            |         Firefox          |           Safari            |  Edge  | IE  |
   * | :-------------------------: | :----------------------: | :-------------------------: | :----: | :-: |
   * |           **69**            |          **41**          |          **12.1**           | **79** | No  |
   * | 2 _(-webkit-padding-start)_ | 3 _(-moz-padding-start)_ | 3 _(-webkit-padding-start)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-inline-start
   */
  "padding-inline-start"?: Property.PaddingInlineStart<TLength> | undefined;
  /**
   * The **\`padding-left\`** CSS property sets the width of the padding area to the left of an element.
   *
   * **Syntax**: \`<length> | <percentage>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-left
   */
  "padding-left"?: Property.PaddingLeft<TLength> | undefined;
  /**
   * The **\`padding-right\`** CSS property sets the width of the padding area on the right of an element.
   *
   * **Syntax**: \`<length> | <percentage>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-right
   */
  "padding-right"?: Property.PaddingRight<TLength> | undefined;
  /**
   * The **\`padding-top\`** CSS property sets the height of the padding area on the top of an element.
   *
   * **Syntax**: \`<length> | <percentage>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding-top
   */
  "padding-top"?: Property.PaddingTop<TLength> | undefined;
  /**
   * The **\`page-break-after\`** CSS property adjusts page breaks _after_ the current element.
   *
   * **Syntax**: \`auto | always | avoid | left | right | recto | verso\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  |  **1**  | **1.2** | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/page-break-after
   */
  "page-break-after"?: Property.PageBreakAfter | undefined;
  /**
   * The **\`page-break-before\`** CSS property adjusts page breaks _before_ the current element.
   *
   * **Syntax**: \`auto | always | avoid | left | right | recto | verso\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  |  **1**  | **1.2** | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/page-break-before
   */
  "page-break-before"?: Property.PageBreakBefore | undefined;
  /**
   * The **\`page-break-inside\`** CSS property adjusts page breaks _inside_ the current element.
   *
   * **Syntax**: \`auto | avoid\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  | **19**  | **1.3** | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/page-break-inside
   */
  "page-break-inside"?: Property.PageBreakInside | undefined;
  /**
   * The **\`paint-order\`** CSS property lets you control the order in which the fill and stroke (and painting markers) of text content and shapes are drawn.
   *
   * **Syntax**: \`normal | [ fill || stroke || markers ]\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **35** | **60**  | **8**  | **17** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/paint-order
   */
  "paint-order"?: Property.PaintOrder | undefined;
  /**
   * The **\`perspective\`** CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.
   *
   * **Syntax**: \`none | <length>\`
   *
   * **Initial value**: \`none\`
   *
   * |  Chrome  | Firefox  | Safari  |  Edge  |   IE   |
   * | :------: | :------: | :-----: | :----: | :----: |
   * |  **36**  |  **16**  |  **9**  | **12** | **10** |
   * | 12 _-x-_ | 10 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/perspective
   */
  perspective?: Property.Perspective<TLength> | undefined;
  /**
   * The **\`perspective-origin\`** CSS property determines the position at which the viewer is looking. It is used as the _vanishing point_ by the \`perspective\` property.
   *
   * **Syntax**: \`<position>\`
   *
   * **Initial value**: \`50% 50%\`
   *
   * |  Chrome  | Firefox  | Safari  |  Edge  |   IE   |
   * | :------: | :------: | :-----: | :----: | :----: |
   * |  **36**  |  **16**  |  **9**  | **12** | **10** |
   * | 12 _-x-_ | 10 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/perspective-origin
   */
  "perspective-origin"?: Property.PerspectiveOrigin<TLength> | undefined;
  /**
   * The \`**place-content**\` CSS shorthand property allows you to align content along both the block and inline directions at once (i.e. the \`align-content\` and \`justify-content\` properties) in a relevant layout system such as Grid or Flexbox.
   *
   * **Syntax**: \`<'align-content'> <'justify-content'>?\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **59** | **45**  | **9**  | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/place-content
   */
  "place-content"?: Property.PlaceContent | undefined;
  /**
   * The **\`pointer-events\`** CSS property sets under what circumstances (if any) a particular graphic element can become the target of pointer events.
   *
   * **Syntax**: \`auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | inherit\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * | **1**  | **1.5** | **4**  | **12** | **11** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/pointer-events
   */
  "pointer-events"?: Property.PointerEvents | undefined;
  /**
   * The **\`position\`** CSS property sets how an element is positioned in a document. The \`top\`, \`right\`, \`bottom\`, and \`left\` properties determine the final location of positioned elements.
   *
   * **Syntax**: \`static | relative | absolute | sticky | fixed\`
   *
   * **Initial value**: \`static\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/position
   */
  position?: Property.Position | undefined;
  /**
   * The **\`quotes\`** CSS property sets how the browser should render quotation marks that are added using the \`open-quotes\` or \`close-quotes\` values of the CSS \`content\` property.
   *
   * **Syntax**: \`none | auto | [ <string> <string> ]+\`
   *
   * **Initial value**: depends on user agent
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **11** | **1.5** | **9**  | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/quotes
   */
  quotes?: Property.Quotes | undefined;
  /**
   * The **\`resize\`** CSS property sets whether an element is resizable, and if so, in which directions.
   *
   * **Syntax**: \`none | both | horizontal | vertical | block | inline\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **1**  |  **4**  | **3**  | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/resize
   */
  resize?: Property.Resize | undefined;
  /**
   * The **\`right\`** CSS property participates in specifying the horizontal position of a positioned element. It has no effect on non-positioned elements.
   *
   * **Syntax**: \`<length> | <percentage> | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/right
   */
  right?: Property.Right<TLength> | undefined;
  /**
   * The **\`rotate\`** CSS property allows you to specify rotation transforms individually and independently of the \`transform\` property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the \`transform\` property.
   *
   * **Syntax**: \`none | <angle> | [ x | y | z | <number>{3} ] && <angle>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  | Edge | IE  |
   * | :----: | :-----: | :------: | :--: | :-: |
   * |   No   | **72**  | **14.1** |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/rotate
   */
  rotate?: Property.Rotate | undefined;
  /**
   * The **\`row-gap\`** CSS property sets the size of the gap (gutter) between an element's grid rows.
   *
   * **Syntax**: \`normal | <length-percentage>\`
   *
   * **Initial value**: \`normal\`
   *
   * ---
   *
   * _Supported in Flex Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **84** | **63**  | **14.1** | **84** | No  |
   *
   * ---
   *
   * _Supported in Grid Layout_
   *
   * |       Chrome        |       Firefox       |        Safari         |  Edge  | IE  |
   * | :-----------------: | :-----------------: | :-------------------: | :----: | :-: |
   * |       **66**        |       **61**        |        **12**         | **16** | No  |
   * | 57 _(grid-row-gap)_ | 52 _(grid-row-gap)_ | 10.1 _(grid-row-gap)_ |        |     |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/row-gap
   */
  "row-gap"?: Property.RowGap<TLength> | undefined;
  /**
   * The \`**ruby-align**\` CSS property defines the distribution of the different ruby elements over the base.
   *
   * **Syntax**: \`start | center | space-between | space-around\`
   *
   * **Initial value**: \`space-around\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   | **38**  |   No   |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/ruby-align
   */
  "ruby-align"?: Property.RubyAlign | undefined;
  /**
   * **Syntax**: \`separate | collapse | auto\`
   *
   * **Initial value**: \`separate\`
   */
  "ruby-merge"?: Property.RubyMerge | undefined;
  /**
   * The \`**ruby-position**\` CSS property defines the position of a ruby element relatives to its base element. It can be position over the element (\`over\`), under it (\`under\`), or between the characters, on their right side (\`inter-character\`).
   *
   * **Syntax**: \`[ alternate || [ over | under ] ] | inter-character\`
   *
   * **Initial value**: \`alternate\`
   *
   * | Chrome  | Firefox |    Safari     | Edge  | IE  |
   * | :-----: | :-----: | :-----------: | :---: | :-: |
   * | **84**  | **38**  | **6.1** _-x-_ | 12-79 | No  |
   * | 1 _-x-_ |         |               |       |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/ruby-position
   */
  "ruby-position"?: Property.RubyPosition | undefined;
  /**
   * The **\`scale\`** CSS property allows you to specify scale transforms individually and independently of the \`transform\` property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the \`transform\` value.
   *
   * **Syntax**: \`none | <number>{1,3}\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  | Edge | IE  |
   * | :----: | :-----: | :------: | :--: | :-: |
   * |   No   | **72**  | **14.1** |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scale
   */
  scale?: Property.Scale | undefined;
  /**
   * The **\`scroll-behavior\`** CSS property sets the behavior for a scrolling box when scrolling is triggered by the navigation or CSSOM scrolling APIs.
   *
   * **Syntax**: \`auto | smooth\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **61** | **36**  |  n/a   | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-behavior
   */
  "scroll-behavior"?: Property.ScrollBehavior | undefined;
  /**
   * The **\`scroll-margin\`** shorthand property sets all of the scroll margins of an element at once, assigning values much like the \`margin\` property does for margins of an element.
   *
   * **Syntax**: \`<length>{1,4}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |          Safari           |  Edge  | IE  |
   * | :----: | :-----: | :-----------------------: | :----: | :-: |
   * | **69** | **90**  |         **14.1**          | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin
   */
  "scroll-margin"?: Property.ScrollMargin<TLength> | undefined;
  /**
   * The \`scroll-margin-block\` shorthand property sets the scroll margins of an element in the block dimension.
   *
   * **Syntax**: \`<length>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block
   */
  "scroll-margin-block"?: Property.ScrollMarginBlock<TLength> | undefined;
  /**
   * The \`scroll-margin-block-end\`\xA0property defines the\xA0margin of the scroll snap area at the end\xA0of the block dimension\xA0that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-end
   */
  "scroll-margin-block-end"?: Property.ScrollMarginBlockEnd<TLength> | undefined;
  /**
   * The \`scroll-margin-block-start\`\xA0property defines the\xA0margin of the scroll snap area at the start of the block dimension\xA0that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-start
   */
  "scroll-margin-block-start"?: Property.ScrollMarginBlockStart<TLength> | undefined;
  /**
   * The \`scroll-margin-bottom\` property defines the bottom margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |              Safari              |  Edge  | IE  |
   * | :----: | :-----: | :------------------------------: | :----: | :-: |
   * | **69** | **68**  |             **14.1**             | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin-bottom)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-bottom
   */
  "scroll-margin-bottom"?: Property.ScrollMarginBottom<TLength> | undefined;
  /**
   * The \`scroll-margin-inline\` shorthand property sets the scroll margins of an element in the inline dimension.
   *
   * **Syntax**: \`<length>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline
   */
  "scroll-margin-inline"?: Property.ScrollMarginInline<TLength> | undefined;
  /**
   * The \`scroll-margin-inline-end\`\xA0property defines the\xA0margin of the scroll snap area at the end\xA0of the inline\xA0dimension\xA0that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-end
   */
  "scroll-margin-inline-end"?: Property.ScrollMarginInlineEnd<TLength> | undefined;
  /**
   * The \`scroll-margin-inline-start\` property defines the margin of the scroll snap area at the start of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-start
   */
  "scroll-margin-inline-start"?: Property.ScrollMarginInlineStart<TLength> | undefined;
  /**
   * The \`scroll-margin-left\` property defines the left margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |             Safari             |  Edge  | IE  |
   * | :----: | :-----: | :----------------------------: | :----: | :-: |
   * | **69** | **68**  |            **14.1**            | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin-left)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-left
   */
  "scroll-margin-left"?: Property.ScrollMarginLeft<TLength> | undefined;
  /**
   * The \`scroll-margin-right\` property defines the right margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |             Safari              |  Edge  | IE  |
   * | :----: | :-----: | :-----------------------------: | :----: | :-: |
   * | **69** | **68**  |            **14.1**             | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin-right)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-right
   */
  "scroll-margin-right"?: Property.ScrollMarginRight<TLength> | undefined;
  /**
   * The \`scroll-margin-top\` property defines the top margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |            Safari             |  Edge  | IE  |
   * | :----: | :-----: | :---------------------------: | :----: | :-: |
   * | **69** | **68**  |           **14.1**            | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin-top)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-top
   */
  "scroll-margin-top"?: Property.ScrollMarginTop<TLength> | undefined;
  /**
   * The **\`scroll-padding\`** shorthand property sets scroll padding on all sides of an element at once, much like the \`padding\` property does for padding on an element.
   *
   * **Syntax**: \`[ auto | <length-percentage> ]{1,4}\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding
   */
  "scroll-padding"?: Property.ScrollPadding<TLength> | undefined;
  /**
   * The \`scroll-padding-block\` shorthand property sets the scroll padding of an element in the block dimension.
   *
   * **Syntax**: \`[ auto | <length-percentage> ]{1,2}\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **69** | **68**  | **15** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block
   */
  "scroll-padding-block"?: Property.ScrollPaddingBlock<TLength> | undefined;
  /**
   * The \`scroll-padding-block-end\` property defines offsets for the end edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.
   *
   * **Syntax**: \`auto | <length-percentage>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **69** | **68**  | **15** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-end
   */
  "scroll-padding-block-end"?: Property.ScrollPaddingBlockEnd<TLength> | undefined;
  /**
   * The \`scroll-padding-block-start\` property defines offsets for the start edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.
   *
   * **Syntax**: \`auto | <length-percentage>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **69** | **68**  | **15** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-start
   */
  "scroll-padding-block-start"?: Property.ScrollPaddingBlockStart<TLength> | undefined;
  /**
   * The \`scroll-padding-bottom\` property defines offsets for the bottom of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.
   *
   * **Syntax**: \`auto | <length-percentage>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-bottom
   */
  "scroll-padding-bottom"?: Property.ScrollPaddingBottom<TLength> | undefined;
  /**
   * The \`scroll-padding-inline\` shorthand property sets the scroll padding of an element in the inline dimension.
   *
   * **Syntax**: \`[ auto | <length-percentage> ]{1,2}\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **69** | **68**  | **15** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline
   */
  "scroll-padding-inline"?: Property.ScrollPaddingInline<TLength> | undefined;
  /**
   * The \`scroll-padding-inline-end\`\xA0property\xA0defines offsets for the end\xA0edge in the inline\xA0dimension\xA0of the\xA0optimal viewing region\xA0of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.
   *
   * **Syntax**: \`auto | <length-percentage>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **69** | **68**  | **15** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-end
   */
  "scroll-padding-inline-end"?: Property.ScrollPaddingInlineEnd<TLength> | undefined;
  /**
   * The \`scroll-padding-inline-start\` property defines offsets for the start edge in the inline dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.
   *
   * **Syntax**: \`auto | <length-percentage>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **69** | **68**  | **15** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-start
   */
  "scroll-padding-inline-start"?: Property.ScrollPaddingInlineStart<TLength> | undefined;
  /**
   * The \`scroll-padding-left\` property defines offsets for the left of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.
   *
   * **Syntax**: \`auto | <length-percentage>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-left
   */
  "scroll-padding-left"?: Property.ScrollPaddingLeft<TLength> | undefined;
  /**
   * The \`scroll-padding-right\`\xA0property\xA0defines offsets for the right\xA0of the\xA0optimal viewing region\xA0of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.
   *
   * **Syntax**: \`auto | <length-percentage>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-right
   */
  "scroll-padding-right"?: Property.ScrollPaddingRight<TLength> | undefined;
  /**
   * The **\`scroll-padding-top\`** property\xA0defines offsets for the top of the\xA0optimal viewing region\xA0of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.
   *
   * **Syntax**: \`auto | <length-percentage>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **68**  | **14.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-top
   */
  "scroll-padding-top"?: Property.ScrollPaddingTop<TLength> | undefined;
  /**
   * The \`scroll-snap-align\` property specifies the box\u2019s snap position as an alignment of its snap area (as the alignment subject) within its snap container\u2019s snapport (as the alignment container). The two values specify the snapping alignment in the block axis and inline axis, respectively. If only one value is specified, the second value defaults to the same value.
   *
   * **Syntax**: \`[ none | start | end | center ]{1,2}\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **69** | **68**  | **11** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-snap-align
   */
  "scroll-snap-align"?: Property.ScrollSnapAlign | undefined;
  /**
   * The **\`scroll-margin\`** shorthand property sets all of the scroll margins of an element at once, assigning values much like the \`margin\` property does for margins of an element.
   *
   * **Syntax**: \`<length>{1,4}\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |          Safari           |  Edge  | IE  |
   * | :----: | :-----: | :-----------------------: | :----: | :-: |
   * | **69** |  68-90  |         **14.1**          | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin
   */
  "scroll-snap-margin"?: Property.ScrollMargin<TLength> | undefined;
  /**
   * The \`scroll-margin-bottom\` property defines the bottom margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |              Safari              |  Edge  | IE  |
   * | :----: | :-----: | :------------------------------: | :----: | :-: |
   * | **69** | **68**  |             **14.1**             | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin-bottom)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-bottom
   */
  "scroll-snap-margin-bottom"?: Property.ScrollMarginBottom<TLength> | undefined;
  /**
   * The \`scroll-margin-left\` property defines the left margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |             Safari             |  Edge  | IE  |
   * | :----: | :-----: | :----------------------------: | :----: | :-: |
   * | **69** | **68**  |            **14.1**            | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin-left)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-left
   */
  "scroll-snap-margin-left"?: Property.ScrollMarginLeft<TLength> | undefined;
  /**
   * The \`scroll-margin-right\` property defines the right margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |             Safari              |  Edge  | IE  |
   * | :----: | :-----: | :-----------------------------: | :----: | :-: |
   * | **69** | **68**  |            **14.1**             | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin-right)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-right
   */
  "scroll-snap-margin-right"?: Property.ScrollMarginRight<TLength> | undefined;
  /**
   * The \`scroll-margin-top\` property defines the top margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\u2019s coordinate space), then adding the specified outsets.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |            Safari             |  Edge  | IE  |
   * | :----: | :-----: | :---------------------------: | :----: | :-: |
   * | **69** | **68**  |           **14.1**            | **79** | No  |
   * |        |         | 11 _(scroll-snap-margin-top)_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-top
   */
  "scroll-snap-margin-top"?: Property.ScrollMarginTop<TLength> | undefined;
  /**
   * The **\`scroll-snap-stop\`** CSS property defines whether the scroll container is allowed to "pass over" possible snap positions.
   *
   * **Syntax**: \`normal | always\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **75** |   No    | **15** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-snap-stop
   */
  "scroll-snap-stop"?: Property.ScrollSnapStop | undefined;
  /**
   * The **\`scroll-snap-type\`** CSS property sets how strictly snap points are enforced on the scroll container in case there is one.
   *
   * **Syntax**: \`none | [ x | y | block | inline | both ] [ mandatory | proximity ]?\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |      IE      |
   * | :----: | :-----: | :-----: | :----: | :----------: |
   * | **69** |  39-68  | **11**  | **79** | **10** _-x-_ |
   * |        |         | 9 _-x-_ |        |              |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-snap-type
   */
  "scroll-snap-type"?: Property.ScrollSnapType | undefined;
  /**
   * The **\`scrollbar-color\`** CSS property sets the color of the scrollbar track and thumb.
   *
   * **Syntax**: \`auto | <color>{2}\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   | **64**  |   No   |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scrollbar-color
   */
  "scrollbar-color"?: Property.ScrollbarColor | undefined;
  /**
   * The **\`scrollbar-gutter\`** CSS property allows authors to reserve space for the scrollbar, preventing unwanted layout changes as the content grows while also avoiding unnecessary visuals when scrolling isn't needed.
   *
   * **Syntax**: \`auto | stable && both-edges?\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **94** |   No    |   No   | **94** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scrollbar-gutter
   */
  "scrollbar-gutter"?: Property.ScrollbarGutter | undefined;
  /**
   * The **\`scrollbar-width\`** property allows the author to set the maximum thickness of an element\u2019s scrollbars when they are shown.
   *
   * **Syntax**: \`auto | thin | none\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari | Edge | IE  |
   * | :----: | :-----: | :----: | :--: | :-: |
   * |   No   | **64**  |   No   |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/scrollbar-width
   */
  "scrollbar-width"?: Property.ScrollbarWidth | undefined;
  /**
   * The **\`shape-image-threshold\`** CSS property sets the alpha channel threshold used to extract the shape using an image as the value for \`shape-outside\`.
   *
   * **Syntax**: \`<alpha-value>\`
   *
   * **Initial value**: \`0.0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **37** | **62**  | **10.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/shape-image-threshold
   */
  "shape-image-threshold"?: Property.ShapeImageThreshold | undefined;
  /**
   * The **\`shape-margin\`** CSS property sets a margin for a CSS shape created using \`shape-outside\`.
   *
   * **Syntax**: \`<length-percentage>\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **37** | **62**  | **10.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/shape-margin
   */
  "shape-margin"?: Property.ShapeMargin<TLength> | undefined;
  /**
   * The **\`shape-outside\`** CSS property defines a shape\u2014which may be non-rectangular\u2014around which adjacent inline content should wrap. By default, inline content wraps around its margin box; \`shape-outside\` provides a way to customize this wrapping, making it possible to wrap text around complex objects rather than simple boxes.
   *
   * **Syntax**: \`none | [ <shape-box> || <basic-shape> ] | <image>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **37** | **62**  | **10.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/shape-outside
   */
  "shape-outside"?: Property.ShapeOutside | undefined;
  /**
   * The **\`tab-size\`** CSS property is used to customize the width of tab characters (U+0009).
   *
   * **Syntax**: \`<integer> | <length>\`
   *
   * **Initial value**: \`8\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **21** | **91**  | **7**  | **79** | No  |
   * |        | 4 _-x-_ |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/tab-size
   */
  "tab-size"?: Property.TabSize<TLength> | undefined;
  /**
   * The **\`table-layout\`** CSS property sets the algorithm used to lay out \`<table>\` cells, rows, and columns.
   *
   * **Syntax**: \`auto | fixed\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **14** |  **1**  | **1**  | **12** | **5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/table-layout
   */
  "table-layout"?: Property.TableLayout | undefined;
  /**
   * The **\`text-align\`** CSS property sets the horizontal alignment of a\xA0block element or table-cell box. This means it works like \`vertical-align\` but in the horizontal direction.
   *
   * **Syntax**: \`start | end | left | right | center | justify | match-parent\`
   *
   * **Initial value**: \`start\`, or a nameless value that acts as \`left\` if _direction_ is \`ltr\`, \`right\` if _direction_ is \`rtl\` if \`start\` is not supported by the browser.
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-align
   */
  "text-align"?: Property.TextAlign | undefined;
  /**
   * The **\`text-align-last\`** CSS property sets how the last line of a block or a line, right before a forced line break, is aligned.
   *
   * **Syntax**: \`auto | start | end | left | right | center | justify\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **47** | **49**  |   No   | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-align-last
   */
  "text-align-last"?: Property.TextAlignLast | undefined;
  /**
   * The **\`text-combine-upright\`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.
   *
   * **Syntax**: \`none | all | [ digits <integer>? ]\`
   *
   * **Initial value**: \`none\`
   *
   * |           Chrome           | Firefox |              Safari              | Edge  |                   IE                   |
   * | :------------------------: | :-----: | :------------------------------: | :---: | :------------------------------------: |
   * |           **48**           | **48**  | **5.1** _(-webkit-text-combine)_ | 15-79 | **11** _(-ms-text-combine-horizontal)_ |
   * | 9 _(-webkit-text-combine)_ |         |                                  |       |                                        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-combine-upright
   */
  "text-combine-upright"?: Property.TextCombineUpright | undefined;
  /**
   * The **\`text-decoration-color\`** CSS property sets the color of decorations added to text by \`text-decoration-line\`.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **36**  | **12.1** | **79** | No  |
   * |        |         | 8 _-x-_  |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-color
   */
  "text-decoration-color"?: Property.TextDecorationColor | undefined;
  /**
   * The **\`text-decoration-line\`** CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline.
   *
   * **Syntax**: \`none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **36**  | **12.1** | **79** | No  |
   * |        |         | 8 _-x-_  |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-line
   */
  "text-decoration-line"?: Property.TextDecorationLine | undefined;
  /**
   * The **\`text-decoration-skip\`** CSS property sets what parts of an element\u2019s content any text decoration affecting the element must skip over. It controls all text decoration lines drawn by the element and also any text decoration lines drawn by its ancestors.
   *
   * **Syntax**: \`none | [ objects || [ spaces | [ leading-spaces || trailing-spaces ] ] || edges || box-decoration ]\`
   *
   * **Initial value**: \`objects\`
   *
   * | Chrome | Firefox |  Safari  | Edge | IE  |
   * | :----: | :-----: | :------: | :--: | :-: |
   * | 57-64  |   No    | **12.1** |  No  | No  |
   * |        |         | 7 _-x-_  |      |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-skip
   */
  "text-decoration-skip"?: Property.TextDecorationSkip | undefined;
  /**
   * The **\`text-decoration-skip-ink\`** CSS property specifies how overlines and underlines are drawn when they pass over glyph ascenders and descenders.
   *
   * **Syntax**: \`auto | all | none\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **64** | **70**  |   No   | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-skip-ink
   */
  "text-decoration-skip-ink"?: Property.TextDecorationSkipInk | undefined;
  /**
   * The **\`text-decoration-style\`** CSS property sets the style of the lines specified by \`text-decoration-line\`. The style applies to all lines that are set with \`text-decoration-line\`.
   *
   * **Syntax**: \`solid | double | dotted | dashed | wavy\`
   *
   * **Initial value**: \`solid\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **36**  | **12.1** | **79** | No  |
   * |        |         | 8 _-x-_  |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-style
   */
  "text-decoration-style"?: Property.TextDecorationStyle | undefined;
  /**
   * The **\`text-decoration-thickness\`** CSS property sets the stroke thickness of the decoration line that is used on text in an element, such as a line-through, underline, or overline.
   *
   * **Syntax**: \`auto | from-font | <length> | <percentage> \`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **89** | **70**  | **12.1** | **89** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-thickness
   */
  "text-decoration-thickness"?: Property.TextDecorationThickness<TLength> | undefined;
  /**
   * The **\`text-decoration-thickness\`** CSS property sets the stroke thickness of the decoration line that is used on text in an element, such as a line-through, underline, or overline.
   *
   * **Syntax**: \`auto | from-font | <length> | <percentage> \`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  | Edge  | IE  |
   * | :----: | :-----: | :------: | :---: | :-: |
   * | 87-89  | **70**  | **12.1** | 87-89 | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-thickness
   */
  "text-decoration-width"?: Property.TextDecorationThickness<TLength> | undefined;
  /**
   * The **\`text-emphasis-color\`** CSS property sets the color of emphasis marks. This value can also be set using the \`text-emphasis\` shorthand.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * |    Chrome    | Firefox | Safari |     Edge     | IE  |
   * | :----------: | :-----: | :----: | :----------: | :-: |
   * | **25** _-x-_ | **46**  | **7**  | **79** _-x-_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-emphasis-color
   */
  "text-emphasis-color"?: Property.TextEmphasisColor | undefined;
  /**
   * The **\`text-emphasis-position\`** CSS property sets where emphasis marks are drawn. Like ruby text, if there isn't enough room for emphasis marks, the line height is increased.
   *
   * **Syntax**: \`[ over | under ] && [ right | left ]\`
   *
   * **Initial value**: \`over right\`
   *
   * |    Chrome    | Firefox | Safari |     Edge     | IE  |
   * | :----------: | :-----: | :----: | :----------: | :-: |
   * | **25** _-x-_ | **46**  | **7**  | **79** _-x-_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-emphasis-position
   */
  "text-emphasis-position"?: Property.TextEmphasisPosition | undefined;
  /**
   * The **\`text-emphasis-style\`** CSS property sets the appearance of emphasis marks. It can also be set, and reset, using the \`text-emphasis\` shorthand.
   *
   * **Syntax**: \`none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>\`
   *
   * **Initial value**: \`none\`
   *
   * |    Chrome    | Firefox | Safari |     Edge     | IE  |
   * | :----------: | :-----: | :----: | :----------: | :-: |
   * | **25** _-x-_ | **46**  | **7**  | **79** _-x-_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-emphasis-style
   */
  "text-emphasis-style"?: Property.TextEmphasisStyle | undefined;
  /**
   * The **\`text-indent\`** CSS property sets the length of empty space (indentation) that is put before lines of text in a block.
   *
   * **Syntax**: \`<length-percentage> && hanging? && each-line?\`
   *
   * **Initial value**: \`0\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-indent
   */
  "text-indent"?: Property.TextIndent<TLength> | undefined;
  /**
   * The **\`text-justify\`** CSS property sets what type of justification should be applied to text when \`text-align\`\`: justify;\` is set on an element.
   *
   * **Syntax**: \`auto | inter-character | inter-word | none\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE   |
   * | :----: | :-----: | :----: | :----: | :----: |
   * |  n/a   | **55**  |   No   | **12** | **11** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-justify
   */
  "text-justify"?: Property.TextJustify | undefined;
  /**
   * The **\`text-orientation\`** CSS property sets the orientation of the text characters in a line. It only affects text in vertical mode (when \`writing-mode\` is not \`horizontal-tb\`). It is useful for controlling the display of languages that use vertical script, and also for making vertical table headers.
   *
   * **Syntax**: \`mixed | upright | sideways\`
   *
   * **Initial value**: \`mixed\`
   *
   * |  Chrome  | Firefox |  Safari   |  Edge  | IE  |
   * | :------: | :-----: | :-------: | :----: | :-: |
   * |  **48**  | **41**  |  **14**   | **79** | No  |
   * | 11 _-x-_ |         | 5.1 _-x-_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-orientation
   */
  "text-orientation"?: Property.TextOrientation | undefined;
  /**
   * The **\`text-overflow\`** CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis ('\`\u2026\`'), or display a custom string.
   *
   * **Syntax**: \`[ clip | ellipsis | <string> ]{1,2}\`
   *
   * **Initial value**: \`clip\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  |  **7**  | **1.3** | **12** | **6** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-overflow
   */
  "text-overflow"?: Property.TextOverflow | undefined;
  /**
   * The **\`text-rendering\`** CSS property provides information to the rendering engine about what to optimize for when rendering text.
   *
   * **Syntax**: \`auto | optimizeSpeed | optimizeLegibility | geometricPrecision\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **4**  |  **1**  | **5**  | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-rendering
   */
  "text-rendering"?: Property.TextRendering | undefined;
  /**
   * The **\`text-shadow\`** CSS property adds shadows to text. It accepts a comma-separated list of shadows to be applied to the text and any of its \`decorations\`. Each shadow is described by some combination of X and Y offsets from the element, blur radius, and color.
   *
   * **Syntax**: \`none | <shadow-t>#\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |   IE   |
   * | :----: | :-----: | :-----: | :----: | :----: |
   * | **2**  | **3.5** | **1.1** | **12** | **10** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-shadow
   */
  "text-shadow"?: Property.TextShadow | undefined;
  /**
   * The **\`text-size-adjust\`** CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.
   *
   * **Syntax**: \`none | auto | <percentage>\`
   *
   * **Initial value**: \`auto\` for smartphone browsers supporting inflation, \`none\` in other cases (and then not modifiable).
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **54** |   No    |   No   | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-size-adjust
   */
  "text-size-adjust"?: Property.TextSizeAdjust | undefined;
  /**
   * The **\`text-transform\`** CSS property specifies how to capitalize an element's text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized. It also can help improve legibility for ruby.
   *
   * **Syntax**: \`none | capitalize | uppercase | lowercase | full-width | full-size-kana\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-transform
   */
  "text-transform"?: Property.TextTransform | undefined;
  /**
   * The **\`text-underline-offset\`** CSS property sets the offset distance of an underline text decoration line (applied using \`text-decoration\`) from its original position.
   *
   * **Syntax**: \`auto | <length> | <percentage> \`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **70**  | **12.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-underline-offset
   */
  "text-underline-offset"?: Property.TextUnderlineOffset<TLength> | undefined;
  /**
   * The **\`text-underline-position\`** CSS property specifies the position of the underline which is set using the \`text-decoration\` property's \`underline\` value.
   *
   * **Syntax**: \`auto | from-font | [ under || [ left | right ] ]\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :------: | :----: | :---: |
   * | **33** | **74**  | **12.1** | **12** | **6** |
   * |        |         | 9 _-x-_  |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-underline-position
   */
  "text-underline-position"?: Property.TextUnderlinePosition | undefined;
  /**
   * The **\`top\`** CSS property participates in specifying the vertical position of a positioned element. It has no effect on non-positioned elements.
   *
   * **Syntax**: \`<length> | <percentage> | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/top
   */
  top?: Property.Top<TLength> | undefined;
  /**
   * The **\`touch-action\`** CSS property sets how an element's region can be manipulated by a touchscreen user (for example, by zooming features built into the browser).
   *
   * **Syntax**: \`auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |    IE    |
   * | :----: | :-----: | :----: | :----: | :------: |
   * | **36** | **52**  | **13** | **12** |  **11**  |
   * |        |         |        |        | 10 _-x-_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/touch-action
   */
  "touch-action"?: Property.TouchAction | undefined;
  /**
   * The **\`transform\`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.
   *
   * **Syntax**: \`none | <transform-list>\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome  | Firefox |  Safari   |  Edge  |   IE    |
   * | :-----: | :-----: | :-------: | :----: | :-----: |
   * | **36**  | **16**  |   **9**   | **12** | **10**  |
   * | 1 _-x-_ |         | 3.1 _-x-_ |        | 9 _-x-_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/transform
   */
  transform?: Property.Transform | undefined;
  /**
   * The **\`transform-box\`** CSS property defines the layout box to which the \`transform\` and \`transform-origin\` properties relate.
   *
   * **Syntax**: \`content-box | border-box | fill-box | stroke-box | view-box\`
   *
   * **Initial value**: \`view-box\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **64** | **55**  | **11** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/transform-box
   */
  "transform-box"?: Property.TransformBox | undefined;
  /**
   * The **\`transform-origin\`** CSS property sets the origin for an element's transformations.
   *
   * **Syntax**: \`[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?\`
   *
   * **Initial value**: \`50% 50% 0\`
   *
   * | Chrome  |  Firefox  | Safari  |  Edge  |   IE    |
   * | :-----: | :-------: | :-----: | :----: | :-----: |
   * | **36**  |  **16**   |  **9**  | **12** | **10**  |
   * | 1 _-x-_ | 3.5 _-x-_ | 2 _-x-_ |        | 9 _-x-_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/transform-origin
   */
  "transform-origin"?: Property.TransformOrigin<TLength> | undefined;
  /**
   * The **\`transform-style\`** CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element.
   *
   * **Syntax**: \`flat | preserve-3d\`
   *
   * **Initial value**: \`flat\`
   *
   * |  Chrome  | Firefox  | Safari  |  Edge  | IE  |
   * | :------: | :------: | :-----: | :----: | :-: |
   * |  **36**  |  **16**  |  **9**  | **12** | No  |
   * | 12 _-x-_ | 10 _-x-_ | 4 _-x-_ |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/transform-style
   */
  "transform-style"?: Property.TransformStyle | undefined;
  /**
   * The **\`transition-delay\`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **26**  | **16**  |  **9**  | **12** | **10** |
   * | 1 _-x-_ | 4 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/transition-delay
   */
  "transition-delay"?: Property.TransitionDelay<TTime> | undefined;
  /**
   * The **\`transition-duration\`** CSS property sets the length of time a transition animation should take to complete. By default, the value is \`0s\`, meaning that no animation will occur.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   *
   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |
   * | :-----: | :-----: | :-------: | :----: | :----: |
   * | **26**  | **16**  |   **9**   | **12** | **10** |
   * | 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/transition-duration
   */
  "transition-duration"?: Property.TransitionDuration<TTime> | undefined;
  /**
   * The **\`transition-property\`** CSS property sets the CSS properties to which a transition effect should be applied.
   *
   * **Syntax**: \`none | <single-transition-property>#\`
   *
   * **Initial value**: all
   *
   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |
   * | :-----: | :-----: | :-------: | :----: | :----: |
   * | **26**  | **16**  |   **9**   | **12** | **10** |
   * | 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/transition-property
   */
  "transition-property"?: Property.TransitionProperty | undefined;
  /**
   * The **\`transition-timing-function\`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.
   *
   * **Syntax**: \`<easing-function>#\`
   *
   * **Initial value**: \`ease\`
   *
   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |
   * | :-----: | :-----: | :-------: | :----: | :----: |
   * | **26**  | **16**  |   **9**   | **12** | **10** |
   * | 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/transition-timing-function
   */
  "transition-timing-function"?: Property.TransitionTimingFunction | undefined;
  /**
   * The **\`translate\`** CSS property allows you to specify translation transforms individually and independently of the \`transform\` property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the \`transform\` value.
   *
   * **Syntax**: \`none | <length-percentage> [ <length-percentage> <length>? ]?\`
   *
   * **Initial value**: \`none\`
   *
   * | Chrome | Firefox |  Safari  | Edge | IE  |
   * | :----: | :-----: | :------: | :--: | :-: |
   * |   No   | **72**  | **14.1** |  No  | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/translate
   */
  translate?: Property.Translate<TLength> | undefined;
  /**
   * The **\`unicode-bidi\`** CSS property, together with the \`direction\` property, determines how bidirectional text in a document is handled. For example, if a block of content contains both left-to-right and right-to-left text, the user-agent uses a complex Unicode algorithm to decide how to display the text. The \`unicode-bidi\` property overrides this algorithm and allows the developer to control the text embedding.
   *
   * **Syntax**: \`normal | embed | isolate | bidi-override | isolate-override | plaintext\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |   IE    |
   * | :----: | :-----: | :-----: | :----: | :-----: |
   * | **2**  |  **1**  | **1.3** | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/unicode-bidi
   */
  "unicode-bidi"?: Property.UnicodeBidi | undefined;
  /**
   * The \`**user-select**\` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.
   *
   * **Syntax**: \`auto | text | none | contain | all\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome  | Firefox |   Safari    |   Edge   |      IE      |
   * | :-----: | :-----: | :---------: | :------: | :----------: |
   * | **54**  | **69**  | **3** _-x-_ |  **79**  | **10** _-x-_ |
   * | 1 _-x-_ | 1 _-x-_ |             | 12 _-x-_ |              |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/user-select
   */
  "user-select"?: Property.UserSelect | undefined;
  /**
   * The **\`vertical-align\`** CSS property sets vertical alignment of an inline, inline-block or table-cell box.
   *
   * **Syntax**: \`baseline | sub | super | text-top | text-bottom | middle | top | bottom | <percentage> | <length>\`
   *
   * **Initial value**: \`baseline\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/vertical-align
   */
  "vertical-align"?: Property.VerticalAlign<TLength> | undefined;
  /**
   * The **\`visibility\`** CSS property shows or hides an element without changing the layout of a document. The property can also hide rows or columns in a \`<table>\`.
   *
   * **Syntax**: \`visible | hidden | collapse\`
   *
   * **Initial value**: \`visible\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/visibility
   */
  visibility?: Property.Visibility | undefined;
  /**
   * The **\`white-space\`** CSS property sets how white space inside an element is handled.
   *
   * **Syntax**: \`normal | pre | nowrap | pre-wrap | pre-line | break-spaces\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/white-space
   */
  "white-space"?: Property.WhiteSpace | undefined;
  /**
   * The **\`widows\`** CSS property sets the minimum number of lines in a block container that must be shown at the _top_ of a page, region, or column.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`2\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **25** |   No    | **1.3** | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/widows
   */
  widows?: Property.Widows | undefined;
  /**
   * The **\`width\`** CSS property sets an element's width. By default, it sets the width of the content area, but if \`box-sizing\` is set to \`border-box\`, it sets the width of the border area.
   *
   * **Syntax**: \`auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/width
   */
  width?: Property.Width<TLength> | undefined;
  /**
   * The **\`will-change\`** CSS property hints to browsers how an element is expected to change. Browsers may set up optimizations before an element is actually changed. These kinds of optimizations can increase the responsiveness of a page by doing potentially expensive work before they are actually required.
   *
   * **Syntax**: \`auto | <animateable-feature>#\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari  |  Edge  | IE  |
   * | :----: | :-----: | :-----: | :----: | :-: |
   * | **36** | **36**  | **9.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/will-change
   */
  "will-change"?: Property.WillChange | undefined;
  /**
   * The **\`word-break\`** CSS property sets whether line breaks appear wherever the text would otherwise overflow its content box.
   *
   * **Syntax**: \`normal | break-all | keep-all | break-word\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  | **15**  | **3**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/word-break
   */
  "word-break"?: Property.WordBreak | undefined;
  /**
   * The **\`word-spacing\`** CSS property sets the length of space between words and between tags.
   *
   * **Syntax**: \`normal | <length>\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **6** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/word-spacing
   */
  "word-spacing"?: Property.WordSpacing<TLength> | undefined;
  /**
   * The \`**overflow-wrap**\` CSS property applies to inline elements, setting whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box.
   *
   * **Syntax**: \`normal | break-word\`
   *
   * **Initial value**: \`normal\`
   */
  "word-wrap"?: Property.WordWrap | undefined;
  /**
   * The **\`writing-mode\`** CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (\`html\` element for HTML documents).
   *
   * **Syntax**: \`horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr\`
   *
   * **Initial value**: \`horizontal-tb\`
   *
   * | Chrome  | Firefox |  Safari   |  Edge  |  IE   |
   * | :-----: | :-----: | :-------: | :----: | :---: |
   * | **48**  | **41**  | **10.1**  | **12** | **9** |
   * | 8 _-x-_ |         | 5.1 _-x-_ |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/writing-mode
   */
  "writing-mode"?: Property.WritingMode | undefined;
  /**
   * The **\`z-index\`** CSS property sets the z-order of a positioned element and its descendants or flex items. Overlapping elements with a larger z-index cover those with a smaller one.
   *
   * **Syntax**: \`auto | <integer>\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/z-index
   */
  "z-index"?: Property.ZIndex | undefined;
  /**
   * The non-standard **\`zoom\`** CSS property can be used to control the magnification level of an element. \`transform: scale()\` should be used instead of this property, if possible. However, unlike CSS Transforms, \`zoom\` affects the layout size of the element.
   *
   * **Syntax**: \`normal | reset | <number> | <percentage>\`
   *
   * **Initial value**: \`normal\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |   IE    |
   * | :----: | :-----: | :-----: | :----: | :-----: |
   * | **1**  |   No    | **3.1** | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/zoom
   */
  zoom?: Property.Zoom | undefined;
}

export interface StandardShorthandPropertiesHyphen<TLength = (string & {}) | 0, TTime = string & {}> {
  /**
   * The \`**all**\` shorthand CSS property resets all of an element's properties except \`unicode-bidi\`, \`direction\`, and CSS Custom Properties. It can set properties to their initial or inherited values, or to the values specified in another stylesheet origin.
   *
   * **Syntax**: \`initial | inherit | unset | revert\`
   *
   * **Initial value**: There is no practical initial value for it.
   *
   * | Chrome | Firefox | Safari  |  Edge  | IE  |
   * | :----: | :-----: | :-----: | :----: | :-: |
   * | **37** | **27**  | **9.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/all
   */
  all?: Property.All | undefined;
  /**
   * The **\`animation\`** shorthand CSS property applies an animation between styles. It is a shorthand for \`animation-name\`, \`animation-duration\`, \`animation-timing-function\`, \`animation-delay\`, \`animation-iteration-count\`, \`animation-direction\`, \`animation-fill-mode\`, and \`animation-play-state\`.
   *
   * **Syntax**: \`<single-animation>#\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **43**  | **16**  |  **9**  | **12** | **10** |
   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/animation
   */
  animation?: Property.Animation<TTime> | undefined;
  /**
   * The **\`background\`** shorthand CSS property sets all background style properties at once, such as color, image, origin and size, or repeat method.
   *
   * **Syntax**: \`[ <bg-layer> , ]* <final-bg-layer>\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background
   */
  background?: Property.Background<TLength> | undefined;
  /**
   * The **\`background-position\`** CSS property sets the initial position for each background image. The position is relative to the position layer set by \`background-origin\`.
   *
   * **Syntax**: \`<bg-position>#\`
   *
   * **Initial value**: \`0% 0%\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/background-position
   */
  "background-position"?: Property.BackgroundPosition<TLength> | undefined;
  /**
   * The **\`border\`** shorthand CSS property sets an element's border. It sets the values of \`border-width\`, \`border-style\`, and \`border-color\`.
   *
   * **Syntax**: \`<line-width> || <line-style> || <color>\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border
   */
  border?: Property.Border<TLength> | undefined;
  /**
   * The **\`border-block\`** CSS property is a shorthand property for setting the individual logical block border property values in a single place in the style sheet.
   *
   * **Syntax**: \`<'border-top-width'> || <'border-top-style'> || <color>\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block
   */
  "border-block"?: Property.BorderBlock<TLength> | undefined;
  /**
   * The **\`border-block-end\`** CSS property is a shorthand property for setting the individual logical block-end border property values in a single place in the style sheet.
   *
   * **Syntax**: \`<'border-top-width'> || <'border-top-style'> || <color>\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-end
   */
  "border-block-end"?: Property.BorderBlockEnd<TLength> | undefined;
  /**
   * The **\`border-block-start\`** CSS property is a shorthand property for setting the individual logical block-start border property values in a single place in the style sheet.
   *
   * **Syntax**: \`<'border-top-width'> || <'border-top-style'> || <color>\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-start
   */
  "border-block-start"?: Property.BorderBlockStart<TLength> | undefined;
  /**
   * The **\`border-bottom\`** shorthand CSS property sets an element's bottom border. It sets the values of \`border-bottom-width\`, \`border-bottom-style\` and \`border-bottom-color\`.
   *
   * **Syntax**: \`<line-width> || <line-style> || <color>\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom
   */
  "border-bottom"?: Property.BorderBottom<TLength> | undefined;
  /**
   * The **\`border-color\`** shorthand CSS property sets the color of an element's border.
   *
   * **Syntax**: \`<color>{1,4}\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-color
   */
  "border-color"?: Property.BorderColor | undefined;
  /**
   * The **\`border-image\`** CSS property draws an image around a given element. It replaces the element's regular border.
   *
   * **Syntax**: \`<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>\`
   *
   * | Chrome  |  Firefox  | Safari  |  Edge  |   IE   |
   * | :-----: | :-------: | :-----: | :----: | :----: |
   * | **16**  |  **15**   |  **6**  | **12** | **11** |
   * | 7 _-x-_ | 3.5 _-x-_ | 3 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-image
   */
  "border-image"?: Property.BorderImage | undefined;
  /**
   * The **\`border-inline\`** CSS property is a shorthand property for setting the individual logical inline border property values in a single place in the style sheet.
   *
   * **Syntax**: \`<'border-top-width'> || <'border-top-style'> || <color>\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **87** | **66**  | **14.1** | **87** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline
   */
  "border-inline"?: Property.BorderInline<TLength> | undefined;
  /**
   * The **\`border-inline-end\`** CSS property is a shorthand property for setting the individual logical inline-end border property values in a single place in the style sheet.
   *
   * **Syntax**: \`<'border-top-width'> || <'border-top-style'> || <color>\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-end
   */
  "border-inline-end"?: Property.BorderInlineEnd<TLength> | undefined;
  /**
   * The **\`border-inline-start\`** CSS property is a shorthand property for setting the individual logical inline-start border property values in a single place in the style sheet.
   *
   * **Syntax**: \`<'border-top-width'> || <'border-top-style'> || <color>\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **69** | **41**  | **12.1** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-start
   */
  "border-inline-start"?: Property.BorderInlineStart<TLength> | undefined;
  /**
   * The **\`border-left\`** shorthand CSS property sets all the properties of an element's left border.
   *
   * **Syntax**: \`<line-width> || <line-style> || <color>\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-left
   */
  "border-left"?: Property.BorderLeft<TLength> | undefined;
  /**
   * The **\`border-radius\`** CSS property rounds the corners of an element's outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.
   *
   * **Syntax**: \`<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |
   * | :-----: | :-----: | :-----: | :----: | :---: |
   * |  **4**  |  **4**  |  **5**  | **12** | **9** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |       |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-radius
   */
  "border-radius"?: Property.BorderRadius<TLength> | undefined;
  /**
   * The **\`border-right\`** shorthand CSS property sets all the properties of an element's right border.
   *
   * **Syntax**: \`<line-width> || <line-style> || <color>\`
   *
   * | Chrome | Firefox | Safari |  Edge  |   IE    |
   * | :----: | :-----: | :----: | :----: | :-----: |
   * | **1**  |  **1**  | **1**  | **12** | **5.5** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-right
   */
  "border-right"?: Property.BorderRight<TLength> | undefined;
  /**
   * The **\`border-style\`** shorthand CSS property sets the line style for all four sides of an element's border.
   *
   * **Syntax**: \`<line-style>{1,4}\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-style
   */
  "border-style"?: Property.BorderStyle | undefined;
  /**
   * The **\`border-top\`** shorthand CSS property sets all the properties of an element's top border.
   *
   * **Syntax**: \`<line-width> || <line-style> || <color>\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-top
   */
  "border-top"?: Property.BorderTop<TLength> | undefined;
  /**
   * The **\`border-width\`** shorthand CSS property sets the width of an element's border.
   *
   * **Syntax**: \`<line-width>{1,4}\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/border-width
   */
  "border-width"?: Property.BorderWidth<TLength> | undefined;
  /**
   * The **\`column-rule\`**\xA0shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>\`
   *
   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :-----: | :-----: | :-----: | :----: | :----: |
   * | **50**  | **52**  |  **9**  | **12** | **10** |
   * | 1 _-x-_ |         | 3 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/column-rule
   */
  "column-rule"?: Property.ColumnRule<TLength> | undefined;
  /**
   * The **\`columns\`** CSS shorthand property sets the number of columns to use when drawing an element's contents, as well as those columns' widths.
   *
   * **Syntax**: \`<'column-width'> || <'column-count'>\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |   IE   |
   * | :----: | :-----: | :-----: | :----: | :----: |
   * | **50** | **52**  |  **9**  | **12** | **10** |
   * |        |         | 3 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/columns
   */
  columns?: Property.Columns<TLength> | undefined;
  /**
   * The **\`flex\`** CSS shorthand property sets how a flex _item_ will grow or shrink to fit the space available in its flex container.
   *
   * **Syntax**: \`none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\`
   *
   * |  Chrome  | Firefox | Safari  |  Edge  |    IE    |
   * | :------: | :-----: | :-----: | :----: | :------: |
   * |  **29**  | **20**  |  **9**  | **12** |  **11**  |
   * | 21 _-x-_ |         | 7 _-x-_ |        | 10 _-x-_ |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/flex
   */
  flex?: Property.Flex<TLength> | undefined;
  /**
   * The **\`flex-flow\`** CSS shorthand property specifies the direction of a flex container, as well as its wrapping behavior.
   *
   * **Syntax**: \`<'flex-direction'> || <'flex-wrap'>\`
   *
   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |
   * | :------: | :-----: | :-----: | :----: | :----: |
   * |  **29**  | **28**  |  **9**  | **12** | **11** |
   * | 21 _-x-_ |         | 7 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/flex-flow
   */
  "flex-flow"?: Property.FlexFlow | undefined;
  /**
   * The **\`font\`** CSS shorthand property sets all the different properties of an element's font. Alternatively, it sets an element's font to a system font.
   *
   * **Syntax**: \`[ [ <'font-style'> || <font-variant-css21> || <'font-weight'> || <'font-stretch'> ]? <'font-size'> [ / <'line-height'> ]? <'font-family'> ] | caption | icon | menu | message-box | small-caption | status-bar\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/font
   */
  font?: Property.Font | undefined;
  /**
   * The **\`gap\`** CSS property sets the gaps (gutters) between rows and columns. It is a shorthand for \`row-gap\` and \`column-gap\`.
   *
   * **Syntax**: \`<'row-gap'> <'column-gap'>?\`
   *
   * ---
   *
   * _Supported in Flex Layout_
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **84** | **63**  | **14.1** | **84** | No  |
   *
   * ---
   *
   * _Supported in Grid Layout_
   *
   * |     Chrome      |     Firefox     |      Safari       |  Edge  | IE  |
   * | :-------------: | :-------------: | :---------------: | :----: | :-: |
   * |     **66**      |     **61**      |      **12**       | **16** | No  |
   * | 57 _(grid-gap)_ | 52 _(grid-gap)_ | 10.1 _(grid-gap)_ |        |     |
   *
   * ---
   *
   * _Supported in Multi-column Layout_
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **66** | **61**  |   No   | **16** | No  |
   *
   * ---
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/gap
   */
  gap?: Property.Gap<TLength> | undefined;
  /**
   * The **\`grid\`** CSS property is a shorthand property that sets all of the explicit and implicit grid properties in a single declaration.
   *
   * **Syntax**: \`<'grid-template'> | <'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>? | [ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid
   */
  grid?: Property.Grid | undefined;
  /**
   * The **\`grid-area\`** CSS shorthand property specifies a grid item\u2019s size and location within a grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.
   *
   * **Syntax**: \`<grid-line> [ / <grid-line> ]{0,3}\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-area
   */
  "grid-area"?: Property.GridArea | undefined;
  /**
   * The **\`grid-column\`** CSS shorthand property specifies a grid item's size and location within a grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.
   *
   * **Syntax**: \`<grid-line> [ / <grid-line> ]?\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-column
   */
  "grid-column"?: Property.GridColumn | undefined;
  /**
   * The **\`grid-row\`** CSS shorthand property specifies a grid item\u2019s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.
   *
   * **Syntax**: \`<grid-line> [ / <grid-line> ]?\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-row
   */
  "grid-row"?: Property.GridRow | undefined;
  /**
   * The **\`grid-template\`** CSS property is a shorthand property for defining grid columns, rows, and areas.
   *
   * **Syntax**: \`none | [ <'grid-template-rows'> / <'grid-template-columns'> ] | [ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?\`
   *
   * | Chrome | Firefox |  Safari  |  Edge  | IE  |
   * | :----: | :-----: | :------: | :----: | :-: |
   * | **57** | **52**  | **10.1** | **16** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/grid-template
   */
  "grid-template"?: Property.GridTemplate | undefined;
  /**
   * **Syntax**: \`none | <integer>\`
   *
   * **Initial value**: \`none\`
   */
  "line-clamp"?: Property.LineClamp | undefined;
  /**
   * The **\`list-style\`** CSS shorthand property allows you set all the list style properties at once.
   *
   * **Syntax**: \`<'list-style-type'> || <'list-style-position'> || <'list-style-image'>\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/list-style
   */
  "list-style"?: Property.ListStyle | undefined;
  /**
   * The **\`margin\`** CSS property sets the margin area on all four sides of an element. It is a shorthand for \`margin-top\`, \`margin-right\`, \`margin-bottom\`, and \`margin-left\`.
   *
   * **Syntax**: \`[ <length> | <percentage> | auto ]{1,4}\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/margin
   */
  margin?: Property.Margin<TLength> | undefined;
  /**
   * The **\`mask\`** CSS shorthand property hides an element (partially or fully) by masking or clipping the image at specific points.
   *
   * **Syntax**: \`<mask-layer>#\`
   *
   * | Chrome | Firefox | Safari  | Edge  | IE  |
   * | :----: | :-----: | :-----: | :---: | :-: |
   * | **1**  |  **2**  | **3.1** | 12-79 | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask
   */
  mask?: Property.Mask<TLength> | undefined;
  /**
   * The **\`mask-border\`** CSS shorthand property lets you create a mask along the edge of an element's border.
   *
   * **Syntax**: \`<'mask-border-source'> || <'mask-border-slice'> [ / <'mask-border-width'>? [ / <'mask-border-outset'> ]? ]? || <'mask-border-repeat'> || <'mask-border-mode'>\`
   *
   * |              Chrome              | Firefox |               Safari               |               Edge                | IE  |
   * | :------------------------------: | :-----: | :--------------------------------: | :-------------------------------: | :-: |
   * | **1** _(-webkit-mask-box-image)_ |   No    | **3.1** _(-webkit-mask-box-image)_ | **79** _(-webkit-mask-box-image)_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border
   */
  "mask-border"?: Property.MaskBorder | undefined;
  /**
   * The **\`offset\`** CSS shorthand property sets all the properties required for animating an element along a defined path.
   *
   * **Syntax**: \`[ <'offset-position'>? [ <'offset-path'> [ <'offset-distance'> || <'offset-rotate'> ]? ]? ]! [ / <'offset-anchor'> ]?\`
   *
   * |    Chrome     | Firefox | Safari |  Edge  | IE  |
   * | :-----------: | :-----: | :----: | :----: | :-: |
   * |    **55**     | **72**  |   No   | **79** | No  |
   * | 46 _(motion)_ |         |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset
   */
  motion?: Property.Offset<TLength> | undefined;
  /**
   * The **\`offset\`** CSS shorthand property sets all the properties required for animating an element along a defined path.
   *
   * **Syntax**: \`[ <'offset-position'>? [ <'offset-path'> [ <'offset-distance'> || <'offset-rotate'> ]? ]? ]! [ / <'offset-anchor'> ]?\`
   *
   * |    Chrome     | Firefox | Safari |  Edge  | IE  |
   * | :-----------: | :-----: | :----: | :----: | :-: |
   * |    **55**     | **72**  |   No   | **79** | No  |
   * | 46 _(motion)_ |         |        |        |     |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/offset
   */
  offset?: Property.Offset<TLength> | undefined;
  /**
   * The **\`outline\`** CSS shorthand property set all the outline properties in a single declaration.
   *
   * **Syntax**: \`[ <'outline-color'> || <'outline-style'> || <'outline-width'> ]\`
   *
   * | Chrome | Firefox | Safari  |  Edge  |  IE   |
   * | :----: | :-----: | :-----: | :----: | :---: |
   * | **1**  | **1.5** | **1.2** | **12** | **8** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/outline
   */
  outline?: Property.Outline<TLength> | undefined;
  /**
   * The **\`overflow\`** CSS shorthand property sets the desired behavior for an element's overflow \u2014 i.e. when an element's content is too big to fit in its block formatting context \u2014 in both directions.
   *
   * **Syntax**: \`[ visible | hidden | clip | scroll | auto ]{1,2}\`
   *
   * **Initial value**: \`visible\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overflow
   */
  overflow?: Property.Overflow | undefined;
  /**
   * The **\`overscroll-behavior\`** CSS property sets what a browser does when reaching the boundary of a scrolling area. It's a shorthand for \`overscroll-behavior-x\` and \`overscroll-behavior-y\`.
   *
   * **Syntax**: \`[ contain | none | auto ]{1,2}\`
   *
   * **Initial value**: \`auto\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **63** | **59**  |   No   | **18** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior
   */
  "overscroll-behavior"?: Property.OverscrollBehavior | undefined;
  /**
   * The **\`padding\`** CSS shorthand property sets the padding area on all four sides of an element at once.
   *
   * **Syntax**: \`[ <length> | <percentage> ]{1,4}\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **4** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/padding
   */
  padding?: Property.Padding<TLength> | undefined;
  /**
   * The CSS **\`place-items\`** shorthand property allows you to align items along both the block and inline directions at once (i.e. the \`align-items\` and \`justify-items\` properties) in a relevant layout system such as Grid or Flexbox. If the second value is not set, the first value is also used for it.
   *
   * **Syntax**: \`<'align-items'> <'justify-items'>?\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **59** | **45**  | **11** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/place-items
   */
  "place-items"?: Property.PlaceItems | undefined;
  /**
   * The **\`place-self\`** CSS shorthand property allows you to align an individual item in both the block and inline directions at once (i.e. the \`align-self\` and \`justify-self\` properties) in a relevant layout system such as Grid or Flexbox. If the second value is not present, the first value is also used for it.
   *
   * **Syntax**: \`<'align-self'> <'justify-self'>?\`
   *
   * | Chrome | Firefox | Safari |  Edge  | IE  |
   * | :----: | :-----: | :----: | :----: | :-: |
   * | **59** | **45**  | **11** | **79** | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/place-self
   */
  "place-self"?: Property.PlaceSelf | undefined;
  /**
   * The **\`text-decoration\`** shorthand CSS property sets the appearance of decorative lines on text. It is a shorthand for \`text-decoration-line\`, \`text-decoration-color\`, \`text-decoration-style\`, and the newer \`text-decoration-thickness\` property.
   *
   * **Syntax**: \`<'text-decoration-line'> || <'text-decoration-style'> || <'text-decoration-color'> || <'text-decoration-thickness'>\`
   *
   * | Chrome | Firefox | Safari |  Edge  |  IE   |
   * | :----: | :-----: | :----: | :----: | :---: |
   * | **1**  |  **1**  | **1**  | **12** | **3** |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration
   */
  "text-decoration"?: Property.TextDecoration<TLength> | undefined;
  /**
   * The **\`text-emphasis\`** CSS property applies emphasis marks to text (except spaces and control characters). It is a shorthand for \`text-emphasis-style\` and \`text-emphasis-color\`.
   *
   * **Syntax**: \`<'text-emphasis-style'> || <'text-emphasis-color'>\`
   *
   * |    Chrome    | Firefox | Safari |     Edge     | IE  |
   * | :----------: | :-----: | :----: | :----------: | :-: |
   * | **25** _-x-_ | **46**  | **7**  | **79** _-x-_ | No  |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/text-emphasis
   */
  "text-emphasis"?: Property.TextEmphasis | undefined;
  /**
   * The **\`transition\`** CSS property is a shorthand property for \`transition-property\`, \`transition-duration\`, \`transition-timing-function\`, and \`transition-delay\`.
   *
   * **Syntax**: \`<single-transition>#\`
   *
   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |
   * | :-----: | :-----: | :-------: | :----: | :----: |
   * | **26**  | **16**  |   **9**   | **12** | **10** |
   * | 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |
   *
   * @see https://developer.mozilla.org/docs/Web/CSS/transition
   */
  transition?: Property.Transition<TTime> | undefined;
}

export interface StandardPropertiesHyphen<TLength = (string & {}) | 0, TTime = string & {}>
  extends StandardLonghandPropertiesHyphen<TLength, TTime>,
    StandardShorthandPropertiesHyphen<TLength, TTime> {}

export interface VendorLonghandPropertiesHyphen<TLength = (string & {}) | 0, TTime = string & {}> {
  /**
   * The **\`animation-delay\`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  "-moz-animation-delay"?: Property.AnimationDelay<TTime> | undefined;
  /**
   * The **\`animation-direction\`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.
   *
   * **Syntax**: \`<single-animation-direction>#\`
   *
   * **Initial value**: \`normal\`
   */
  "-moz-animation-direction"?: Property.AnimationDirection | undefined;
  /**
   * The **\`animation-duration\`** CSS property sets the length of time that an animation takes to complete one cycle.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  "-moz-animation-duration"?: Property.AnimationDuration<TTime> | undefined;
  /**
   * The **\`animation-fill-mode\`** CSS property sets how a CSS animation applies styles to its target before and after its execution.
   *
   * **Syntax**: \`<single-animation-fill-mode>#\`
   *
   * **Initial value**: \`none\`
   */
  "-moz-animation-fill-mode"?: Property.AnimationFillMode | undefined;
  /**
   * The **\`animation-iteration-count\`** CSS property sets the number of times an animation sequence should be played before stopping.
   *
   * **Syntax**: \`<single-animation-iteration-count>#\`
   *
   * **Initial value**: \`1\`
   */
  "-moz-animation-iteration-count"?: Property.AnimationIterationCount | undefined;
  /**
   * The **\`animation-name\`** CSS property specifies the names of one or more \`@keyframes\` at-rules describing the animation or animations to apply to the element.
   *
   * **Syntax**: \`[ none | <keyframes-name> ]#\`
   *
   * **Initial value**: \`none\`
   */
  "-moz-animation-name"?: Property.AnimationName | undefined;
  /**
   * The **\`animation-play-state\`** CSS property sets whether an animation is running or paused.
   *
   * **Syntax**: \`<single-animation-play-state>#\`
   *
   * **Initial value**: \`running\`
   */
  "-moz-animation-play-state"?: Property.AnimationPlayState | undefined;
  /**
   * The **\`animation-timing-function\`** CSS property sets how an animation progresses through the duration of each cycle.
   *
   * **Syntax**: \`<easing-function>#\`
   *
   * **Initial value**: \`ease\`
   */
  "-moz-animation-timing-function"?: Property.AnimationTimingFunction | undefined;
  /**
   * The \`**appearance**\` CSS property is used to display an element using platform-native styling, based on the operating system's theme. The **\`-moz-appearance\`** and **\`-webkit-appearance\`** properties are non-standard versions of this property, used (respectively) by Gecko (Firefox) and by WebKit-based (e.g., Safari) and Blink-based (e.g., Chrome, Opera) browsers to achieve the same thing. Note that Firefox and Edge also support **\`-webkit-appearance\`**, for compatibility reasons.
   *
   * **Syntax**: \`none | button | button-arrow-down | button-arrow-next | button-arrow-previous | button-arrow-up | button-bevel | button-focus | caret | checkbox | checkbox-container | checkbox-label | checkmenuitem | dualbutton | groupbox | listbox | listitem | menuarrow | menubar | menucheckbox | menuimage | menuitem | menuitemtext | menulist | menulist-button | menulist-text | menulist-textfield | menupopup | menuradio | menuseparator | meterbar | meterchunk | progressbar | progressbar-vertical | progresschunk | progresschunk-vertical | radio | radio-container | radio-label | radiomenuitem | range | range-thumb | resizer | resizerpanel | scale-horizontal | scalethumbend | scalethumb-horizontal | scalethumbstart | scalethumbtick | scalethumb-vertical | scale-vertical | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical | searchfield | separator | sheet | spinner | spinner-downbutton | spinner-textfield | spinner-upbutton | splitter | statusbar | statusbarpanel | tab | tabpanel | tabpanels | tab-scroll-arrow-back | tab-scroll-arrow-forward | textfield | textfield-multiline | toolbar | toolbarbutton | toolbarbutton-dropdown | toolbargripper | toolbox | tooltip | treeheader | treeheadercell | treeheadersortarrow | treeitem | treeline | treetwisty | treetwistyopen | treeview | -moz-mac-unified-toolbar | -moz-win-borderless-glass | -moz-win-browsertabbar-toolbox | -moz-win-communicationstext | -moz-win-communications-toolbox | -moz-win-exclude-glass | -moz-win-glass | -moz-win-mediatext | -moz-win-media-toolbox | -moz-window-button-box | -moz-window-button-box-maximized | -moz-window-button-close | -moz-window-button-maximize | -moz-window-button-minimize | -moz-window-button-restore | -moz-window-frame-bottom | -moz-window-frame-left | -moz-window-frame-right | -moz-window-titlebar | -moz-window-titlebar-maximized\`
   *
   * **Initial value**: \`none\` (but this value is overridden in the user agent CSS)
   */
  "-moz-appearance"?: Property.MozAppearance | undefined;
  /**
   * The **\`backface-visibility\`** CSS property sets whether the back face of an element is visible when turned towards the user.
   *
   * **Syntax**: \`visible | hidden\`
   *
   * **Initial value**: \`visible\`
   */
  "-moz-backface-visibility"?: Property.BackfaceVisibility | undefined;
  /**
   * In Mozilla applications like Firefox, the **\`-moz-border-bottom-colors\`** CSS property sets a list of colors for the bottom border.
   *
   * **Syntax**: \`<color>+ | none\`
   *
   * **Initial value**: \`none\`
   */
  "-moz-border-bottom-colors"?: Property.MozBorderBottomColors | undefined;
  /**
   * The **\`border-inline-end-color\`** CSS property defines the color of the logical inline-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-color\`, \`border-right-color\`, \`border-bottom-color\`, or \`border-left-color\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-color'>\`
   *
   * **Initial value**: \`currentcolor\`
   */
  "-moz-border-end-color"?: Property.BorderInlineEndColor | undefined;
  /**
   * The **\`border-inline-end-style\`** CSS property defines the style of the logical inline end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-style\`, \`border-right-style\`, \`border-bottom-style\`, or \`border-left-style\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-style'>\`
   *
   * **Initial value**: \`none\`
   */
  "-moz-border-end-style"?: Property.BorderInlineEndStyle | undefined;
  /**
   * The **\`border-inline-end-width\`** CSS property defines the width of the logical inline-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-width\`, \`border-right-width\`, \`border-bottom-width\`, or \`border-left-width\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-width'>\`
   *
   * **Initial value**: \`medium\`
   */
  "-moz-border-end-width"?: Property.BorderInlineEndWidth<TLength> | undefined;
  /**
   * In Mozilla applications like Firefox, the **\`-moz-border-left-colors\`** CSS property sets a list of colors for the left border.
   *
   * **Syntax**: \`<color>+ | none\`
   *
   * **Initial value**: \`none\`
   */
  "-moz-border-left-colors"?: Property.MozBorderLeftColors | undefined;
  /**
   * In Mozilla applications like Firefox, the **\`-moz-border-right-colors\`** CSS property sets a list of colors for the right border.
   *
   * **Syntax**: \`<color>+ | none\`
   *
   * **Initial value**: \`none\`
   */
  "-moz-border-right-colors"?: Property.MozBorderRightColors | undefined;
  /**
   * The **\`border-inline-start-color\`** CSS property defines the color of the logical inline start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-color\`, \`border-right-color\`, \`border-bottom-color\`, or \`border-left-color\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-color'>\`
   *
   * **Initial value**: \`currentcolor\`
   */
  "-moz-border-start-color"?: Property.BorderInlineStartColor | undefined;
  /**
   * The **\`border-inline-start-style\`** CSS property defines the style of the logical inline start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`border-top-style\`, \`border-right-style\`, \`border-bottom-style\`, or \`border-left-style\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'border-top-style'>\`
   *
   * **Initial value**: \`none\`
   */
  "-moz-border-start-style"?: Property.BorderInlineStartStyle | undefined;
  /**
   * In Mozilla applications like Firefox, the **\`-moz-border-top-colors\`** CSS property sets a list of colors for the top border.
   *
   * **Syntax**: \`<color>+ | none\`
   *
   * **Initial value**: \`none\`
   */
  "-moz-border-top-colors"?: Property.MozBorderTopColors | undefined;
  /**
   * The **\`box-sizing\`** CSS property sets how the total width and height of an element is calculated.
   *
   * **Syntax**: \`content-box | border-box\`
   *
   * **Initial value**: \`content-box\`
   */
  "-moz-box-sizing"?: Property.BoxSizing | undefined;
  /**
   * The **\`column-count\`** CSS property breaks an element's content into the specified number of columns.
   *
   * **Syntax**: \`<integer> | auto\`
   *
   * **Initial value**: \`auto\`
   */
  "-moz-column-count"?: Property.ColumnCount | undefined;
  /**
   * The **\`column-fill\`** CSS property controls how an element's contents are balanced when broken into columns.
   *
   * **Syntax**: \`auto | balance | balance-all\`
   *
   * **Initial value**: \`balance\`
   */
  "-moz-column-fill"?: Property.ColumnFill | undefined;
  /**
   * The **\`column-gap\`** CSS property sets the size of the gap (gutter) between an element's columns.
   *
   * **Syntax**: \`normal | <length-percentage>\`
   *
   * **Initial value**: \`normal\`
   */
  "-moz-column-gap"?: Property.ColumnGap<TLength> | undefined;
  /**
   * The **\`column-rule-color\`** CSS property sets the color of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   */
  "-moz-column-rule-color"?: Property.ColumnRuleColor | undefined;
  /**
   * The **\`column-rule-style\`** CSS property sets the style of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<'border-style'>\`
   *
   * **Initial value**: \`none\`
   */
  "-moz-column-rule-style"?: Property.ColumnRuleStyle | undefined;
  /**
   * The **\`column-rule-width\`** CSS property sets the width of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<'border-width'>\`
   *
   * **Initial value**: \`medium\`
   */
  "-moz-column-rule-width"?: Property.ColumnRuleWidth<TLength> | undefined;
  /**
   * The **\`column-width\`** CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the \`column-width\` value. If the width of the container is narrower than the specified value, the single column's width will be smaller than the declared column width.
   *
   * **Syntax**: \`<length> | auto\`
   *
   * **Initial value**: \`auto\`
   */
  "-moz-column-width"?: Property.ColumnWidth<TLength> | undefined;
  /**
   * The \`**-moz-context-properties**\` property can be used within privileged contexts in Firefox to share the values of specified properties of the element with a child SVG image.
   *
   * **Syntax**: \`none | [ fill | fill-opacity | stroke | stroke-opacity ]#\`
   *
   * **Initial value**: \`none\`
   */
  "-moz-context-properties"?: Property.MozContextProperties | undefined;
  /**
   * The **\`font-feature-settings\`** CSS property controls advanced typographic features in OpenType fonts.
   *
   * **Syntax**: \`normal | <feature-tag-value>#\`
   *
   * **Initial value**: \`normal\`
   */
  "-moz-font-feature-settings"?: Property.FontFeatureSettings | undefined;
  /**
   * The **\`font-language-override\`** CSS property controls the use of language-specific glyphs in a typeface.
   *
   * **Syntax**: \`normal | <string>\`
   *
   * **Initial value**: \`normal\`
   */
  "-moz-font-language-override"?: Property.FontLanguageOverride | undefined;
  /**
   * The **\`hyphens\`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.
   *
   * **Syntax**: \`none | manual | auto\`
   *
   * **Initial value**: \`manual\`
   */
  "-moz-hyphens"?: Property.Hyphens | undefined;
  /**
   * For certain XUL elements and pseudo-elements that use an image from the \`list-style-image\` property, this property specifies a region of the image that is used in place of the whole image. This allows elements to use different pieces of the same image to improve performance.
   *
   * **Syntax**: \`<shape> | auto\`
   *
   * **Initial value**: \`auto\`
   */
  "-moz-image-region"?: Property.MozImageRegion | undefined;
  /**
   * The **\`margin-inline-end\`** CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. In other words, it corresponds to the \`margin-top\`, \`margin-right\`, \`margin-bottom\` or \`margin-left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'margin-left'>\`
   *
   * **Initial value**: \`0\`
   */
  "-moz-margin-end"?: Property.MarginInlineEnd<TLength> | undefined;
  /**
   * The **\`margin-inline-start\`** CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`margin-top\`, \`margin-right\`, \`margin-bottom\`, or \`margin-left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'margin-left'>\`
   *
   * **Initial value**: \`0\`
   */
  "-moz-margin-start"?: Property.MarginInlineStart<TLength> | undefined;
  /**
   * The **\`-moz-orient\`** CSS property specifies the orientation of the element to which it's applied.
   *
   * **Syntax**: \`inline | block | horizontal | vertical\`
   *
   * **Initial value**: \`inline\`
   */
  "-moz-orient"?: Property.MozOrient | undefined;
  /**
   * The **\`font-smooth\`** CSS property controls the application of anti-aliasing when fonts are rendered.
   *
   * **Syntax**: \`auto | never | always | <absolute-size> | <length>\`
   *
   * **Initial value**: \`auto\`
   */
  "-moz-osx-font-smoothing"?: Property.FontSmooth<TLength> | undefined;
  /**
   * The **\`padding-inline-end\`** CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>\`
   *
   * **Initial value**: \`0\`
   */
  "-moz-padding-end"?: Property.PaddingInlineEnd<TLength> | undefined;
  /**
   * The **\`padding-inline-start\`** CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>\`
   *
   * **Initial value**: \`0\`
   */
  "-moz-padding-start"?: Property.PaddingInlineStart<TLength> | undefined;
  /**
   * The **\`perspective\`** CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.
   *
   * **Syntax**: \`none | <length>\`
   *
   * **Initial value**: \`none\`
   */
  "-moz-perspective"?: Property.Perspective<TLength> | undefined;
  /**
   * The **\`perspective-origin\`** CSS property determines the position at which the viewer is looking. It is used as the _vanishing point_ by the \`perspective\` property.
   *
   * **Syntax**: \`<position>\`
   *
   * **Initial value**: \`50% 50%\`
   */
  "-moz-perspective-origin"?: Property.PerspectiveOrigin<TLength> | undefined;
  /**
   * **\`-moz-stack-sizing\`** is an extended CSS property. Normally, a \`<xul:stack>\` will change its size so that all of its child elements are completely visible. For example, moving a child of the stack far to the right will widen the stack so the child remains visible.
   *
   * **Syntax**: \`ignore | stretch-to-fit\`
   *
   * **Initial value**: \`stretch-to-fit\`
   */
  "-moz-stack-sizing"?: Property.MozStackSizing | undefined;
  /**
   * The **\`tab-size\`** CSS property is used to customize the width of tab characters (U+0009).
   *
   * **Syntax**: \`<integer> | <length>\`
   *
   * **Initial value**: \`8\`
   */
  "-moz-tab-size"?: Property.TabSize<TLength> | undefined;
  /**
   * The **\`-moz-text-blink\`** non-standard Mozilla CSS extension specifies the blink mode.
   *
   * **Syntax**: \`none | blink\`
   *
   * **Initial value**: \`none\`
   */
  "-moz-text-blink"?: Property.MozTextBlink | undefined;
  /**
   * The **\`text-size-adjust\`** CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.
   *
   * **Syntax**: \`none | auto | <percentage>\`
   *
   * **Initial value**: \`auto\` for smartphone browsers supporting inflation, \`none\` in other cases (and then not modifiable).
   */
  "-moz-text-size-adjust"?: Property.TextSizeAdjust | undefined;
  /**
   * The **\`transform-origin\`** CSS property sets the origin for an element's transformations.
   *
   * **Syntax**: \`[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?\`
   *
   * **Initial value**: \`50% 50% 0\`
   */
  "-moz-transform-origin"?: Property.TransformOrigin<TLength> | undefined;
  /**
   * The **\`transform-style\`** CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element.
   *
   * **Syntax**: \`flat | preserve-3d\`
   *
   * **Initial value**: \`flat\`
   */
  "-moz-transform-style"?: Property.TransformStyle | undefined;
  /**
   * The **\`transition-delay\`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  "-moz-transition-delay"?: Property.TransitionDelay<TTime> | undefined;
  /**
   * The **\`transition-duration\`** CSS property sets the length of time a transition animation should take to complete. By default, the value is \`0s\`, meaning that no animation will occur.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  "-moz-transition-duration"?: Property.TransitionDuration<TTime> | undefined;
  /**
   * The **\`transition-property\`** CSS property sets the CSS properties to which a transition effect should be applied.
   *
   * **Syntax**: \`none | <single-transition-property>#\`
   *
   * **Initial value**: all
   */
  "-moz-transition-property"?: Property.TransitionProperty | undefined;
  /**
   * The **\`transition-timing-function\`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.
   *
   * **Syntax**: \`<easing-function>#\`
   *
   * **Initial value**: \`ease\`
   */
  "-moz-transition-timing-function"?: Property.TransitionTimingFunction | undefined;
  /**
   * The **\`-moz-user-focus\`** CSS property is used to indicate whether an element can have the focus.
   *
   * **Syntax**: \`ignore | normal | select-after | select-before | select-menu | select-same | select-all | none\`
   *
   * **Initial value**: \`none\`
   */
  "-moz-user-focus"?: Property.MozUserFocus | undefined;
  /**
   * The **\`user-modify\`** property has no effect in Firefox. It was originally planned to\xA0determine whether or not the content of an element can be edited by a user.
   *
   * **Syntax**: \`read-only | read-write | write-only\`
   *
   * **Initial value**: \`read-only\`
   */
  "-moz-user-modify"?: Property.MozUserModify | undefined;
  /**
   * The \`**user-select**\` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.
   *
   * **Syntax**: \`auto | text | none | contain | all\`
   *
   * **Initial value**: \`auto\`
   */
  "-moz-user-select"?: Property.UserSelect | undefined;
  /**
   * The **\`-moz-window-dragging\`** CSS property specifies whether a window is draggable or not. It only works in Chrome code, and only on Mac OS X.
   *
   * **Syntax**: \`drag | no-drag\`
   *
   * **Initial value**: \`drag\`
   */
  "-moz-window-dragging"?: Property.MozWindowDragging | undefined;
  /**
   * The **\`-moz-window-shadow\`** CSS property specifies whether a window will have a shadow. It only works on Mac OS X.
   *
   * **Syntax**: \`default | menu | tooltip | sheet | none\`
   *
   * **Initial value**: \`default\`
   */
  "-moz-window-shadow"?: Property.MozWindowShadow | undefined;
  /**
   * The **\`-ms-accelerator\`** CSS property is a Microsoft extension that sets or retrieves a string indicating whether the object represents a keyboard shortcut.
   *
   * **Syntax**: \`false | true\`
   *
   * **Initial value**: \`false\`
   */
  "-ms-accelerator"?: Property.MsAccelerator | undefined;
  /**
   * The **\`align-self\`** CSS property overrides a grid or flex item's \`align-items\` value. In Grid, it aligns the item inside the\xA0grid area. In Flexbox, it aligns the item on the cross axis.
   *
   * **Syntax**: \`auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>\`
   *
   * **Initial value**: \`auto\`
   */
  "-ms-align-self"?: Property.AlignSelf | undefined;
  /**
   * The **\`-ms-block-progression\`** CSS property is a Microsoft extension that specifies the block progression and layout orientation.
   *
   * **Syntax**: \`tb | rl | bt | lr\`
   *
   * **Initial value**: \`tb\`
   */
  "-ms-block-progression"?: Property.MsBlockProgression | undefined;
  /**
   * The **\`-ms-content-zoom-chaining\`** CSS property is a Microsoft extension specifying the zoom behavior that occurs when a user hits the zoom limit during page manipulation.
   *
   * **Syntax**: \`none | chained\`
   *
   * **Initial value**: \`none\`
   */
  "-ms-content-zoom-chaining"?: Property.MsContentZoomChaining | undefined;
  /**
   * The **\`-ms-content-zoom-limit-max\`** CSS property is a Microsoft extension that specifies the selected elements' maximum zoom factor.
   *
   * **Syntax**: \`<percentage>\`
   *
   * **Initial value**: \`400%\`
   */
  "-ms-content-zoom-limit-max"?: Property.MsContentZoomLimitMax | undefined;
  /**
   * The **\`-ms-content-zoom-limit-min\`** CSS property is a Microsoft extension that specifies the minimum zoom factor.
   *
   * **Syntax**: \`<percentage>\`
   *
   * **Initial value**: \`100%\`
   */
  "-ms-content-zoom-limit-min"?: Property.MsContentZoomLimitMin | undefined;
  /**
   * The **\`-ms-content-zoom-snap-points\`** CSS property is a Microsoft extension that specifies where zoom snap-points are located.
   *
   * **Syntax**: \`snapInterval( <percentage>, <percentage> ) | snapList( <percentage># )\`
   *
   * **Initial value**: \`snapInterval(0%, 100%)\`
   */
  "-ms-content-zoom-snap-points"?: Property.MsContentZoomSnapPoints | undefined;
  /**
   * The **\`-ms-content-zoom-snap-type\`** CSS property is a Microsoft extension that specifies how zooming is affected by defined snap-points.
   *
   * **Syntax**: \`none | proximity | mandatory\`
   *
   * **Initial value**: \`none\`
   */
  "-ms-content-zoom-snap-type"?: Property.MsContentZoomSnapType | undefined;
  /**
   * The **\`-ms-content-zooming\`** CSS property is a Microsoft extension that specifies whether zooming is enabled.
   *
   * **Syntax**: \`none | zoom\`
   *
   * **Initial value**: zoom for the top level element, none for all other elements
   */
  "-ms-content-zooming"?: Property.MsContentZooming | undefined;
  /**
   * The \`-ms-filter\` CSS property is a Microsoft extension that sets or retrieves the filter or collection of filters applied to an object.
   *
   * **Syntax**: \`<string>\`
   *
   * **Initial value**: "" (the empty string)
   */
  "-ms-filter"?: Property.MsFilter | undefined;
  /**
   * The **\`flex-direction\`** CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).
   *
   * **Syntax**: \`row | row-reverse | column | column-reverse\`
   *
   * **Initial value**: \`row\`
   */
  "-ms-flex-direction"?: Property.FlexDirection | undefined;
  /**
   * The **\`flex-grow\`** CSS\xA0property sets the flex grow factor of a flex item main size.
   *
   * **Syntax**: \`<number>\`
   *
   * **Initial value**: \`0\`
   */
  "-ms-flex-positive"?: Property.FlexGrow | undefined;
  /**
   * The **\`-ms-flow-from\`** CSS property is a Microsoft extension that gets or sets a value identifying a region container in the document that accepts the content flow from the data source.
   *
   * **Syntax**: \`[ none | <custom-ident> ]#\`
   *
   * **Initial value**: \`none\`
   */
  "-ms-flow-from"?: Property.MsFlowFrom | undefined;
  /**
   * The **\`-ms-flow-into\`** CSS property is a Microsoft extension that gets or sets a value identifying an iframe container in the document that serves as the region's data source.
   *
   * **Syntax**: \`[ none | <custom-ident> ]#\`
   *
   * **Initial value**: \`none\`
   */
  "-ms-flow-into"?: Property.MsFlowInto | undefined;
  /**
   * The **\`grid-template-columns\`** CSS property defines the line names and track sizing functions of the grid columns.
   *
   * **Syntax**: \`none | <track-list> | <auto-track-list>\`
   *
   * **Initial value**: \`none\`
   */
  "-ms-grid-columns"?: Property.MsGridColumns<TLength> | undefined;
  /**
   * The **\`grid-template-rows\`** CSS property defines the line names and track sizing functions of the grid rows.
   *
   * **Syntax**: \`none | <track-list> | <auto-track-list>\`
   *
   * **Initial value**: \`none\`
   */
  "-ms-grid-rows"?: Property.MsGridRows<TLength> | undefined;
  /**
   * The **\`-ms-high-contrast-adjust\`** CSS property is a Microsoft extension that gets or sets a value indicating whether to override any CSS properties that would have been set in high contrast mode.
   *
   * **Syntax**: \`auto | none\`
   *
   * **Initial value**: \`auto\`
   */
  "-ms-high-contrast-adjust"?: Property.MsHighContrastAdjust | undefined;
  /**
   * The **\`-ms-hyphenate-limit-chars\`** CSS property is a Microsoft extension that specifies one to three values indicating the minimum number of characters in a hyphenated word. If the word does not meet the required minimum number of characters in the word, before the hyphen, or after the hyphen, then the word is not hyphenated.
   *
   * **Syntax**: \`auto | <integer>{1,3}\`
   *
   * **Initial value**: \`auto\`
   */
  "-ms-hyphenate-limit-chars"?: Property.MsHyphenateLimitChars | undefined;
  /**
   * The **\`-ms-hyphenate-limit-lines\`** CSS property is a Microsoft extension specifying the maximum number of consecutive lines in an element that may be ended with a hyphenated word.
   *
   * **Syntax**: \`no-limit | <integer>\`
   *
   * **Initial value**: \`no-limit\`
   */
  "-ms-hyphenate-limit-lines"?: Property.MsHyphenateLimitLines | undefined;
  /**
   * The \`**-ms-hyphenate-limit-zone**\` CSS property is a Microsoft extension specifying the width of the hyphenation zone.
   *
   * **Syntax**: \`<percentage> | <length>\`
   *
   * **Initial value**: \`0\`
   */
  "-ms-hyphenate-limit-zone"?: Property.MsHyphenateLimitZone<TLength> | undefined;
  /**
   * The **\`hyphens\`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.
   *
   * **Syntax**: \`none | manual | auto\`
   *
   * **Initial value**: \`manual\`
   */
  "-ms-hyphens"?: Property.Hyphens | undefined;
  /**
   * The **\`-ms-ime-align\`** CSS property is a Microsoft extension aligning the Input Method Editor (IME) candidate window box relative to the element on which the IME composition is active. The extension is implemented in Microsoft Edge and Internet Explorer\xA011.
   *
   * **Syntax**: \`auto | after\`
   *
   * **Initial value**: \`auto\`
   */
  "-ms-ime-align"?: Property.MsImeAlign | undefined;
  /**
   * The CSS **\`justify-self\`** property sets the way a box is justified inside its alignment container along the appropriate axis.
   *
   * **Syntax**: \`auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]\`
   *
   * **Initial value**: \`auto\`
   */
  "-ms-justify-self"?: Property.JustifySelf | undefined;
  /**
   * The **\`line-break\`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.
   *
   * **Syntax**: \`auto | loose | normal | strict | anywhere\`
   *
   * **Initial value**: \`auto\`
   */
  "-ms-line-break"?: Property.LineBreak | undefined;
  /**
   * The **\`order\`** CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending \`order\` value and then by their source code order.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`0\`
   */
  "-ms-order"?: Property.Order | undefined;
  /**
   * The **\`-ms-overflow-style\`** CSS property is a Microsoft extension controlling the behavior of scrollbars when the content of an element overflows.
   *
   * **Syntax**: \`auto | none | scrollbar | -ms-autohiding-scrollbar\`
   *
   * **Initial value**: \`auto\`
   */
  "-ms-overflow-style"?: Property.MsOverflowStyle | undefined;
  /**
   * The **\`overflow-x\`** CSS property sets what shows when content overflows a block-level element's left and right edges. This may be nothing, a scroll bar, or the overflow content.
   *
   * **Syntax**: \`visible | hidden | clip | scroll | auto\`
   *
   * **Initial value**: \`visible\`
   */
  "-ms-overflow-x"?: Property.OverflowX | undefined;
  /**
   * The **\`overflow-y\`** CSS property sets what shows when content overflows a block-level element's top and bottom edges. This may be nothing, a scroll bar, or the overflow content.
   *
   * **Syntax**: \`visible | hidden | clip | scroll | auto\`
   *
   * **Initial value**: \`visible\`
   */
  "-ms-overflow-y"?: Property.OverflowY | undefined;
  /**
   * The \`**-ms-scroll-chaining**\` CSS property is a Microsoft extension that specifies the scrolling behavior that occurs when a user hits the scroll limit during a manipulation.
   *
   * **Syntax**: \`chained | none\`
   *
   * **Initial value**: \`chained\`
   */
  "-ms-scroll-chaining"?: Property.MsScrollChaining | undefined;
  /**
   * The \`**-ms-scroll-limit-x-max**\` CSS property is a Microsoft extension that specifies the maximum value for the \`Element.scrollLeft\` property.
   *
   * **Syntax**: \`auto | <length>\`
   *
   * **Initial value**: \`auto\`
   */
  "-ms-scroll-limit-x-max"?: Property.MsScrollLimitXMax<TLength> | undefined;
  /**
   * The **\`-ms-scroll-limit-x-min\`** CSS property is a Microsoft extension that specifies the minimum value for the \`Element.scrollLeft\` property.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   */
  "-ms-scroll-limit-x-min"?: Property.MsScrollLimitXMin<TLength> | undefined;
  /**
   * The **\`-ms-scroll-limit-y-max\`** CSS property is a Microsoft extension that specifies the maximum value for the \`Element.scrollTop\` property.
   *
   * **Syntax**: \`auto | <length>\`
   *
   * **Initial value**: \`auto\`
   */
  "-ms-scroll-limit-y-max"?: Property.MsScrollLimitYMax<TLength> | undefined;
  /**
   * The **\`-ms-scroll-limit-y-min\`** CSS property is a Microsoft extension that specifies the minimum value for the \`Element.scrollTop\` property.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   */
  "-ms-scroll-limit-y-min"?: Property.MsScrollLimitYMin<TLength> | undefined;
  /**
   * The **\`-ms-scroll-rails\`** CSS property is a Microsoft extension that specifies whether scrolling locks to the primary axis of motion.
   *
   * **Syntax**: \`none | railed\`
   *
   * **Initial value**: \`railed\`
   */
  "-ms-scroll-rails"?: Property.MsScrollRails | undefined;
  /**
   * The **\`-ms-scroll-snap-points-x\`** CSS property is a Microsoft extension that specifies where snap-points will be located along the x-axis.
   *
   * **Syntax**: \`snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )\`
   *
   * **Initial value**: \`snapInterval(0px, 100%)\`
   */
  "-ms-scroll-snap-points-x"?: Property.MsScrollSnapPointsX | undefined;
  /**
   * The **\`-ms-scroll-snap-points-y\`** CSS property is a Microsoft extension that specifies where snap-points will be located along the y-axis.
   *
   * **Syntax**: \`snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )\`
   *
   * **Initial value**: \`snapInterval(0px, 100%)\`
   */
  "-ms-scroll-snap-points-y"?: Property.MsScrollSnapPointsY | undefined;
  /**
   * The **\`scroll-snap-type\`** CSS property sets how strictly snap points are enforced on the scroll container in case there is one.
   *
   * **Syntax**: \`none | proximity | mandatory\`
   *
   * **Initial value**: \`none\`
   */
  "-ms-scroll-snap-type"?: Property.MsScrollSnapType | undefined;
  /**
   * The **\`-ms-scroll-translation\`** CSS property is a Microsoft extension that specifies whether vertical-to-horizontal scroll wheel translation occurs on the specified element.
   *
   * **Syntax**: \`none | vertical-to-horizontal\`
   *
   * **Initial value**: \`none\`
   */
  "-ms-scroll-translation"?: Property.MsScrollTranslation | undefined;
  /**
   * The **\`-ms-scrollbar-3dlight-color\`** CSS property is a Microsoft extension specifying the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: depends on user agent
   */
  "-ms-scrollbar-3dlight-color"?: Property.MsScrollbar3dlightColor | undefined;
  /**
   * The **\`-ms-scrollbar-arrow-color\`** CSS property is a Microsoft extension that specifies the color of the arrow elements of a scroll arrow.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`ButtonText\`
   */
  "-ms-scrollbar-arrow-color"?: Property.MsScrollbarArrowColor | undefined;
  /**
   * The \`**-ms-scrollbar-base-color**\` CSS property is a Microsoft extension that specifies the base color of the main elements of a scroll bar.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: depends on user agent
   */
  "-ms-scrollbar-base-color"?: Property.MsScrollbarBaseColor | undefined;
  /**
   * The **\`-ms-scrollbar-darkshadow-color\`** CSS property is a Microsoft extension that specifies the color of a scroll bar's gutter.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`ThreeDDarkShadow\`
   */
  "-ms-scrollbar-darkshadow-color"?: Property.MsScrollbarDarkshadowColor | undefined;
  /**
   * The \`**-ms-scrollbar-face-color**\` CSS property is a Microsoft extension that specifies the color of the scroll box and scroll arrows of a scroll bar.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`ThreeDFace\`
   */
  "-ms-scrollbar-face-color"?: Property.MsScrollbarFaceColor | undefined;
  /**
   * The \`**-ms-scrollbar-highlight-color**\` CSS property is a Microsoft extension that specifies the color of the slider tray, the top and left edges of the scroll box, and the scroll arrows of a scroll bar.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`ThreeDHighlight\`
   */
  "-ms-scrollbar-highlight-color"?: Property.MsScrollbarHighlightColor | undefined;
  /**
   * The **\`-ms-scrollbar-shadow-color\`** CSS property is a Microsoft extension that specifies the color of the bottom and right edges of the scroll box and scroll arrows of a scroll bar.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`ThreeDDarkShadow\`
   */
  "-ms-scrollbar-shadow-color"?: Property.MsScrollbarShadowColor | undefined;
  /**
   * The **\`-ms-text-autospace\`** CSS property is a Microsoft extension that specifies the autospacing and narrow space width adjustment of text.
   *
   * **Syntax**: \`none | ideograph-alpha | ideograph-numeric | ideograph-parenthesis | ideograph-space\`
   *
   * **Initial value**: \`none\`
   */
  "-ms-text-autospace"?: Property.MsTextAutospace | undefined;
  /**
   * The **\`text-combine-upright\`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.
   *
   * **Syntax**: \`none | all | [ digits <integer>? ]\`
   *
   * **Initial value**: \`none\`
   */
  "-ms-text-combine-horizontal"?: Property.TextCombineUpright | undefined;
  /**
   * The **\`text-overflow\`** CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis ('\`\u2026\`'), or display a custom string.
   *
   * **Syntax**: \`[ clip | ellipsis | <string> ]{1,2}\`
   *
   * **Initial value**: \`clip\`
   */
  "-ms-text-overflow"?: Property.TextOverflow | undefined;
  /**
   * The **\`touch-action\`** CSS property sets how an element's region can be manipulated by a touchscreen user (for example, by zooming features built into the browser).
   *
   * **Syntax**: \`auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation\`
   *
   * **Initial value**: \`auto\`
   */
  "-ms-touch-action"?: Property.TouchAction | undefined;
  /**
   * The **\`-ms-touch-select\`** CSS property is a Microsoft extension that toggles the gripper visual elements that enable touch text selection.
   *
   * **Syntax**: \`grippers | none\`
   *
   * **Initial value**: \`grippers\`
   */
  "-ms-touch-select"?: Property.MsTouchSelect | undefined;
  /**
   * The **\`transform\`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.
   *
   * **Syntax**: \`none | <transform-list>\`
   *
   * **Initial value**: \`none\`
   */
  "-ms-transform"?: Property.Transform | undefined;
  /**
   * The **\`transform-origin\`** CSS property sets the origin for an element's transformations.
   *
   * **Syntax**: \`[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?\`
   *
   * **Initial value**: \`50% 50% 0\`
   */
  "-ms-transform-origin"?: Property.TransformOrigin<TLength> | undefined;
  /**
   * The **\`transition-delay\`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  "-ms-transition-delay"?: Property.TransitionDelay<TTime> | undefined;
  /**
   * The **\`transition-duration\`** CSS property sets the length of time a transition animation should take to complete. By default, the value is \`0s\`, meaning that no animation will occur.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  "-ms-transition-duration"?: Property.TransitionDuration<TTime> | undefined;
  /**
   * The **\`transition-property\`** CSS property sets the CSS properties to which a transition effect should be applied.
   *
   * **Syntax**: \`none | <single-transition-property>#\`
   *
   * **Initial value**: all
   */
  "-ms-transition-property"?: Property.TransitionProperty | undefined;
  /**
   * The **\`transition-timing-function\`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.
   *
   * **Syntax**: \`<easing-function>#\`
   *
   * **Initial value**: \`ease\`
   */
  "-ms-transition-timing-function"?: Property.TransitionTimingFunction | undefined;
  /**
   * The \`**user-select**\` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.
   *
   * **Syntax**: \`none | element | text\`
   *
   * **Initial value**: \`text\`
   */
  "-ms-user-select"?: Property.MsUserSelect | undefined;
  /**
   * The **\`word-break\`** CSS property sets whether line breaks appear wherever the text would otherwise overflow its content box.
   *
   * **Syntax**: \`normal | break-all | keep-all | break-word\`
   *
   * **Initial value**: \`normal\`
   */
  "-ms-word-break"?: Property.WordBreak | undefined;
  /**
   * The **\`-ms-wrap-flow\`** CSS property is a Microsoft extension that specifies how exclusions impact inline content within block-level elements.
   *
   * **Syntax**: \`auto | both | start | end | maximum | clear\`
   *
   * **Initial value**: \`auto\`
   */
  "-ms-wrap-flow"?: Property.MsWrapFlow | undefined;
  /**
   * The **\`-ms-wrap-margin\`** CSS property is a Microsoft extension that specifies a margin that offsets the inner wrap shape from other shapes.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   */
  "-ms-wrap-margin"?: Property.MsWrapMargin<TLength> | undefined;
  /**
   * The **\`-ms-wrap-through\`** CSS property is a Microsoft extension that specifies how content should wrap around an exclusion element.
   *
   * **Syntax**: \`wrap | none\`
   *
   * **Initial value**: \`wrap\`
   */
  "-ms-wrap-through"?: Property.MsWrapThrough | undefined;
  /**
   * The **\`writing-mode\`** CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (\`html\` element for HTML documents).
   *
   * **Syntax**: \`horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr\`
   *
   * **Initial value**: \`horizontal-tb\`
   */
  "-ms-writing-mode"?: Property.WritingMode | undefined;
  /**
   * The CSS **\`align-content\`** property sets the distribution of space between and around content items along a flexbox's cross-axis or a grid's block axis.
   *
   * **Syntax**: \`normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>\`
   *
   * **Initial value**: \`normal\`
   */
  "-webkit-align-content"?: Property.AlignContent | undefined;
  /**
   * The CSS **\`align-items\`** property sets the \`align-self\` value on all direct children as a group. In Flexbox, it controls the alignment of items on the Cross Axis. In Grid Layout, it controls the alignment of items on the Block Axis within their grid area.
   *
   * **Syntax**: \`normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]\`
   *
   * **Initial value**: \`normal\`
   */
  "-webkit-align-items"?: Property.AlignItems | undefined;
  /**
   * The **\`align-self\`** CSS property overrides a grid or flex item's \`align-items\` value. In Grid, it aligns the item inside the\xA0grid area. In Flexbox, it aligns the item on the cross axis.
   *
   * **Syntax**: \`auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>\`
   *
   * **Initial value**: \`auto\`
   */
  "-webkit-align-self"?: Property.AlignSelf | undefined;
  /**
   * The **\`animation-delay\`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  "-webkit-animation-delay"?: Property.AnimationDelay<TTime> | undefined;
  /**
   * The **\`animation-direction\`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.
   *
   * **Syntax**: \`<single-animation-direction>#\`
   *
   * **Initial value**: \`normal\`
   */
  "-webkit-animation-direction"?: Property.AnimationDirection | undefined;
  /**
   * The **\`animation-duration\`** CSS property sets the length of time that an animation takes to complete one cycle.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  "-webkit-animation-duration"?: Property.AnimationDuration<TTime> | undefined;
  /**
   * The **\`animation-fill-mode\`** CSS property sets how a CSS animation applies styles to its target before and after its execution.
   *
   * **Syntax**: \`<single-animation-fill-mode>#\`
   *
   * **Initial value**: \`none\`
   */
  "-webkit-animation-fill-mode"?: Property.AnimationFillMode | undefined;
  /**
   * The **\`animation-iteration-count\`** CSS property sets the number of times an animation sequence should be played before stopping.
   *
   * **Syntax**: \`<single-animation-iteration-count>#\`
   *
   * **Initial value**: \`1\`
   */
  "-webkit-animation-iteration-count"?: Property.AnimationIterationCount | undefined;
  /**
   * The **\`animation-name\`** CSS property specifies the names of one or more \`@keyframes\` at-rules describing the animation or animations to apply to the element.
   *
   * **Syntax**: \`[ none | <keyframes-name> ]#\`
   *
   * **Initial value**: \`none\`
   */
  "-webkit-animation-name"?: Property.AnimationName | undefined;
  /**
   * The **\`animation-play-state\`** CSS property sets whether an animation is running or paused.
   *
   * **Syntax**: \`<single-animation-play-state>#\`
   *
   * **Initial value**: \`running\`
   */
  "-webkit-animation-play-state"?: Property.AnimationPlayState | undefined;
  /**
   * The **\`animation-timing-function\`** CSS property sets how an animation progresses through the duration of each cycle.
   *
   * **Syntax**: \`<easing-function>#\`
   *
   * **Initial value**: \`ease\`
   */
  "-webkit-animation-timing-function"?: Property.AnimationTimingFunction | undefined;
  /**
   * The \`**appearance**\` CSS property is used to display an element using platform-native styling, based on the operating system's theme. The **\`-moz-appearance\`** and **\`-webkit-appearance\`** properties are non-standard versions of this property, used (respectively) by Gecko (Firefox) and by WebKit-based (e.g., Safari) and Blink-based (e.g., Chrome, Opera) browsers to achieve the same thing. Note that Firefox and Edge also support **\`-webkit-appearance\`**, for compatibility reasons.
   *
   * **Syntax**: \`none | button | button-bevel | caret | checkbox | default-button | inner-spin-button | listbox | listitem | media-controls-background | media-controls-fullscreen-background | media-current-time-display | media-enter-fullscreen-button | media-exit-fullscreen-button | media-fullscreen-button | media-mute-button | media-overlay-play-button | media-play-button | media-seek-back-button | media-seek-forward-button | media-slider | media-sliderthumb | media-time-remaining-display | media-toggle-closed-captions-button | media-volume-slider | media-volume-slider-container | media-volume-sliderthumb | menulist | menulist-button | menulist-text | menulist-textfield | meter | progress-bar | progress-bar-value | push-button | radio | searchfield | searchfield-cancel-button | searchfield-decoration | searchfield-results-button | searchfield-results-decoration | slider-horizontal | slider-vertical | sliderthumb-horizontal | sliderthumb-vertical | square-button | textarea | textfield | -apple-pay-button\`
   *
   * **Initial value**: \`none\` (but this value is overridden in the user agent CSS)
   */
  "-webkit-appearance"?: Property.WebkitAppearance | undefined;
  /**
   * The **\`backdrop-filter\`** CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything _behind_ the element, to see the effect you must make the element or its background at least partially transparent.
   *
   * **Syntax**: \`none | <filter-function-list>\`
   *
   * **Initial value**: \`none\`
   */
  "-webkit-backdrop-filter"?: Property.BackdropFilter | undefined;
  /**
   * The **\`backface-visibility\`** CSS property sets whether the back face of an element is visible when turned towards the user.
   *
   * **Syntax**: \`visible | hidden\`
   *
   * **Initial value**: \`visible\`
   */
  "-webkit-backface-visibility"?: Property.BackfaceVisibility | undefined;
  /**
   * The **\`background-clip\`** CSS property sets whether an element's background extends underneath its border box, padding box, or content box.
   *
   * **Syntax**: \`<box>#\`
   *
   * **Initial value**: \`border-box\`
   */
  "-webkit-background-clip"?: Property.BackgroundClip | undefined;
  /**
   * The **\`background-origin\`** CSS property sets the background's origin: from the border start, inside the border, or inside the padding.
   *
   * **Syntax**: \`<box>#\`
   *
   * **Initial value**: \`padding-box\`
   */
  "-webkit-background-origin"?: Property.BackgroundOrigin | undefined;
  /**
   * The **\`background-size\`** CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.
   *
   * **Syntax**: \`<bg-size>#\`
   *
   * **Initial value**: \`auto auto\`
   */
  "-webkit-background-size"?: Property.BackgroundSize<TLength> | undefined;
  /**
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   */
  "-webkit-border-before-color"?: Property.WebkitBorderBeforeColor | undefined;
  /**
   * **Syntax**: \`<'border-style'>\`
   *
   * **Initial value**: \`none\`
   */
  "-webkit-border-before-style"?: Property.WebkitBorderBeforeStyle | undefined;
  /**
   * **Syntax**: \`<'border-width'>\`
   *
   * **Initial value**: \`medium\`
   */
  "-webkit-border-before-width"?: Property.WebkitBorderBeforeWidth<TLength> | undefined;
  /**
   * The **\`border-bottom-left-radius\`** CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   */
  "-webkit-border-bottom-left-radius"?: Property.BorderBottomLeftRadius<TLength> | undefined;
  /**
   * The **\`border-bottom-right-radius\`** CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   */
  "-webkit-border-bottom-right-radius"?: Property.BorderBottomRightRadius<TLength> | undefined;
  /**
   * The **\`border-image-slice\`** CSS property divides the image specified by \`border-image-source\` into regions. These regions form the components of an element's border image.
   *
   * **Syntax**: \`<number-percentage>{1,4} && fill?\`
   *
   * **Initial value**: \`100%\`
   */
  "-webkit-border-image-slice"?: Property.BorderImageSlice | undefined;
  /**
   * The **\`border-top-left-radius\`** CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   */
  "-webkit-border-top-left-radius"?: Property.BorderTopLeftRadius<TLength> | undefined;
  /**
   * The **\`border-top-right-radius\`** CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   */
  "-webkit-border-top-right-radius"?: Property.BorderTopRightRadius<TLength> | undefined;
  /**
   * The **\`box-decoration-break\`** CSS property specifies how an element's fragments should be rendered when broken across multiple lines, columns, or pages.
   *
   * **Syntax**: \`slice | clone\`
   *
   * **Initial value**: \`slice\`
   */
  "-webkit-box-decoration-break"?: Property.BoxDecorationBreak | undefined;
  /**
   * The **\`-webkit-box-reflect\`** CSS property lets you reflect the content of an element in one specific direction.
   *
   * **Syntax**: \`[ above | below | right | left ]? <length>? <image>?\`
   *
   * **Initial value**: \`none\`
   */
  "-webkit-box-reflect"?: Property.WebkitBoxReflect<TLength> | undefined;
  /**
   * The **\`box-shadow\`** CSS property adds shadow effects around an element's frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color.
   *
   * **Syntax**: \`none | <shadow>#\`
   *
   * **Initial value**: \`none\`
   */
  "-webkit-box-shadow"?: Property.BoxShadow | undefined;
  /**
   * The **\`box-sizing\`** CSS property sets how the total width and height of an element is calculated.
   *
   * **Syntax**: \`content-box | border-box\`
   *
   * **Initial value**: \`content-box\`
   */
  "-webkit-box-sizing"?: Property.BoxSizing | undefined;
  /**
   * The \`**clip-path**\` CSS property creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden.
   *
   * **Syntax**: \`<clip-source> | [ <basic-shape> || <geometry-box> ] | none\`
   *
   * **Initial value**: \`none\`
   */
  "-webkit-clip-path"?: Property.ClipPath | undefined;
  /**
   * The **\`column-count\`** CSS property breaks an element's content into the specified number of columns.
   *
   * **Syntax**: \`<integer> | auto\`
   *
   * **Initial value**: \`auto\`
   */
  "-webkit-column-count"?: Property.ColumnCount | undefined;
  /**
   * The **\`column-fill\`** CSS property controls how an element's contents are balanced when broken into columns.
   *
   * **Syntax**: \`auto | balance | balance-all\`
   *
   * **Initial value**: \`balance\`
   */
  "-webkit-column-fill"?: Property.ColumnFill | undefined;
  /**
   * The **\`column-gap\`** CSS property sets the size of the gap (gutter) between an element's columns.
   *
   * **Syntax**: \`normal | <length-percentage>\`
   *
   * **Initial value**: \`normal\`
   */
  "-webkit-column-gap"?: Property.ColumnGap<TLength> | undefined;
  /**
   * The **\`column-rule-color\`** CSS property sets the color of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   */
  "-webkit-column-rule-color"?: Property.ColumnRuleColor | undefined;
  /**
   * The **\`column-rule-style\`** CSS property sets the style of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<'border-style'>\`
   *
   * **Initial value**: \`none\`
   */
  "-webkit-column-rule-style"?: Property.ColumnRuleStyle | undefined;
  /**
   * The **\`column-rule-width\`** CSS property sets the width of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<'border-width'>\`
   *
   * **Initial value**: \`medium\`
   */
  "-webkit-column-rule-width"?: Property.ColumnRuleWidth<TLength> | undefined;
  /**
   * The **\`column-span\`** CSS property makes it possible for an element to span across all columns when its value is set to \`all\`.
   *
   * **Syntax**: \`none | all\`
   *
   * **Initial value**: \`none\`
   */
  "-webkit-column-span"?: Property.ColumnSpan | undefined;
  /**
   * The **\`column-width\`** CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the \`column-width\` value. If the width of the container is narrower than the specified value, the single column's width will be smaller than the declared column width.
   *
   * **Syntax**: \`<length> | auto\`
   *
   * **Initial value**: \`auto\`
   */
  "-webkit-column-width"?: Property.ColumnWidth<TLength> | undefined;
  /**
   * The **\`filter\`** CSS property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders.
   *
   * **Syntax**: \`none | <filter-function-list>\`
   *
   * **Initial value**: \`none\`
   */
  "-webkit-filter"?: Property.Filter | undefined;
  /**
   * The **\`flex-basis\`** CSS property sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with \`box-sizing\`.
   *
   * **Syntax**: \`content | <'width'>\`
   *
   * **Initial value**: \`auto\`
   */
  "-webkit-flex-basis"?: Property.FlexBasis<TLength> | undefined;
  /**
   * The **\`flex-direction\`** CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).
   *
   * **Syntax**: \`row | row-reverse | column | column-reverse\`
   *
   * **Initial value**: \`row\`
   */
  "-webkit-flex-direction"?: Property.FlexDirection | undefined;
  /**
   * The **\`flex-grow\`** CSS\xA0property sets the flex grow factor of a flex item main size.
   *
   * **Syntax**: \`<number>\`
   *
   * **Initial value**: \`0\`
   */
  "-webkit-flex-grow"?: Property.FlexGrow | undefined;
  /**
   * The **\`flex-shrink\`** CSS property sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to \`flex-shrink\`.
   *
   * **Syntax**: \`<number>\`
   *
   * **Initial value**: \`1\`
   */
  "-webkit-flex-shrink"?: Property.FlexShrink | undefined;
  /**
   * The **\`flex-wrap\`** CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines. If wrapping is allowed, it sets the direction that lines are stacked.
   *
   * **Syntax**: \`nowrap | wrap | wrap-reverse\`
   *
   * **Initial value**: \`nowrap\`
   */
  "-webkit-flex-wrap"?: Property.FlexWrap | undefined;
  /**
   * The **\`font-feature-settings\`** CSS property controls advanced typographic features in OpenType fonts.
   *
   * **Syntax**: \`normal | <feature-tag-value>#\`
   *
   * **Initial value**: \`normal\`
   */
  "-webkit-font-feature-settings"?: Property.FontFeatureSettings | undefined;
  /**
   * The **\`font-kerning\`** CSS property sets the use of the kerning information stored in a font.
   *
   * **Syntax**: \`auto | normal | none\`
   *
   * **Initial value**: \`auto\`
   */
  "-webkit-font-kerning"?: Property.FontKerning | undefined;
  /**
   * The **\`font-smooth\`** CSS property controls the application of anti-aliasing when fonts are rendered.
   *
   * **Syntax**: \`auto | never | always | <absolute-size> | <length>\`
   *
   * **Initial value**: \`auto\`
   */
  "-webkit-font-smoothing"?: Property.FontSmooth<TLength> | undefined;
  /**
   * The **\`font-variant-ligatures\`** CSS property controls which ligatures and contextual forms are used in textual content of the elements it applies to. This leads to more harmonized forms in the resulting text.
   *
   * **Syntax**: \`normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]\`
   *
   * **Initial value**: \`normal\`
   */
  "-webkit-font-variant-ligatures"?: Property.FontVariantLigatures | undefined;
  /**
   * The **\`hyphens\`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.
   *
   * **Syntax**: \`none | manual | auto\`
   *
   * **Initial value**: \`manual\`
   */
  "-webkit-hyphens"?: Property.Hyphens | undefined;
  /**
   * The \`initial-letter\` CSS property sets styling for dropped, raised, and sunken initial letters.
   *
   * **Syntax**: \`normal | [ <number> <integer>? ]\`
   *
   * **Initial value**: \`normal\`
   */
  "-webkit-initial-letter"?: Property.InitialLetter | undefined;
  /**
   * The CSS **\`justify-content\`** property defines how the browser distributes space between and around content items along the main-axis of a flex container, and the inline axis of a grid container.
   *
   * **Syntax**: \`normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]\`
   *
   * **Initial value**: \`normal\`
   */
  "-webkit-justify-content"?: Property.JustifyContent | undefined;
  /**
   * The **\`line-break\`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.
   *
   * **Syntax**: \`auto | loose | normal | strict | anywhere\`
   *
   * **Initial value**: \`auto\`
   */
  "-webkit-line-break"?: Property.LineBreak | undefined;
  /**
   * The **\`-webkit-line-clamp\`** CSS property allows limiting of the contents of a block container to the specified number of lines.
   *
   * **Syntax**: \`none | <integer>\`
   *
   * **Initial value**: \`none\`
   */
  "-webkit-line-clamp"?: Property.WebkitLineClamp | undefined;
  /**
   * The **\`margin-inline-end\`** CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. In other words, it corresponds to the \`margin-top\`, \`margin-right\`, \`margin-bottom\` or \`margin-left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'margin-left'>\`
   *
   * **Initial value**: \`0\`
   */
  "-webkit-margin-end"?: Property.MarginInlineEnd<TLength> | undefined;
  /**
   * The **\`margin-inline-start\`** CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`margin-top\`, \`margin-right\`, \`margin-bottom\`, or \`margin-left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'margin-left'>\`
   *
   * **Initial value**: \`0\`
   */
  "-webkit-margin-start"?: Property.MarginInlineStart<TLength> | undefined;
  /**
   * If a \`-webkit-mask-image\` is specified, \`-webkit-mask-attachment\` determines whether the mask image's position is fixed within the viewport, or scrolls along with its containing block.
   *
   * **Syntax**: \`<attachment>#\`
   *
   * **Initial value**: \`scroll\`
   */
  "-webkit-mask-attachment"?: Property.WebkitMaskAttachment | undefined;
  /**
   * The **\`mask-border-outset\`** CSS property specifies the distance by which an element's mask border is set out from its border box.
   *
   * **Syntax**: \`[ <length> | <number> ]{1,4}\`
   *
   * **Initial value**: \`0\`
   */
  "-webkit-mask-box-image-outset"?: Property.MaskBorderOutset<TLength> | undefined;
  /**
   * The **\`mask-border-repeat\`** CSS property sets how the edge regions of a source image are adjusted to fit the dimensions of an element's mask border.
   *
   * **Syntax**: \`[ stretch | repeat | round | space ]{1,2}\`
   *
   * **Initial value**: \`stretch\`
   */
  "-webkit-mask-box-image-repeat"?: Property.MaskBorderRepeat | undefined;
  /**
   * The **\`mask-border-slice\`** CSS property divides the image set by \`mask-border-source\` into regions. These regions are used to form the components of an element's mask border.
   *
   * **Syntax**: \`<number-percentage>{1,4} fill?\`
   *
   * **Initial value**: \`0\`
   */
  "-webkit-mask-box-image-slice"?: Property.MaskBorderSlice | undefined;
  /**
   * The **\`mask-border-source\`** CSS property sets the source image used to create an element's mask border.
   *
   * **Syntax**: \`none | <image>\`
   *
   * **Initial value**: \`none\`
   */
  "-webkit-mask-box-image-source"?: Property.MaskBorderSource | undefined;
  /**
   * The **\`mask-border-width\`** CSS property sets the width of an element's mask border.
   *
   * **Syntax**: \`[ <length-percentage> | <number> | auto ]{1,4}\`
   *
   * **Initial value**: \`auto\`
   */
  "-webkit-mask-box-image-width"?: Property.MaskBorderWidth<TLength> | undefined;
  /**
   * The **\`mask-clip\`** CSS property determines the area which is affected by a mask. The painted content of an element must be restricted to this area.
   *
   * **Syntax**: \`[ <box> | border | padding | content | text ]#\`
   *
   * **Initial value**: \`border\`
   */
  "-webkit-mask-clip"?: Property.WebkitMaskClip | undefined;
  /**
   * The **\`-webkit-mask-composite\`** property specifies the manner in which multiple mask images applied to the same element are composited with one another. Mask images are composited in the opposite order that they are declared with the \`-webkit-mask-image\` property.
   *
   * **Syntax**: \`<composite-style>#\`
   *
   * **Initial value**: \`source-over\`
   */
  "-webkit-mask-composite"?: Property.WebkitMaskComposite | undefined;
  /**
   * The **\`mask-image\`** CSS property sets the image that is used as mask layer for an element.
   *
   * **Syntax**: \`<mask-reference>#\`
   *
   * **Initial value**: \`none\`
   */
  "-webkit-mask-image"?: Property.WebkitMaskImage | undefined;
  /**
   * The **\`mask-origin\`** CSS property sets the origin of a mask.
   *
   * **Syntax**: \`[ <box> | border | padding | content ]#\`
   *
   * **Initial value**: \`padding\`
   */
  "-webkit-mask-origin"?: Property.WebkitMaskOrigin | undefined;
  /**
   * The **\`mask-position\`** CSS property sets the initial position, relative to the mask position layer set by \`mask-origin\`, for each defined mask image.
   *
   * **Syntax**: \`<position>#\`
   *
   * **Initial value**: \`0% 0%\`
   */
  "-webkit-mask-position"?: Property.WebkitMaskPosition<TLength> | undefined;
  /**
   * The \`-webkit-mask-position-x\` CSS property sets the initial horizontal position of a mask image.
   *
   * **Syntax**: \`[ <length-percentage> | left | center | right ]#\`
   *
   * **Initial value**: \`0%\`
   */
  "-webkit-mask-position-x"?: Property.WebkitMaskPositionX<TLength> | undefined;
  /**
   * The \`-webkit-mask-position-y\` CSS property sets the initial vertical position of a mask image.
   *
   * **Syntax**: \`[ <length-percentage> | top | center | bottom ]#\`
   *
   * **Initial value**: \`0%\`
   */
  "-webkit-mask-position-y"?: Property.WebkitMaskPositionY<TLength> | undefined;
  /**
   * The **\`mask-repeat\`** CSS property sets how mask images are repeated. A mask image can be repeated along the horizontal axis, the vertical axis, both axes, or not repeated at all.
   *
   * **Syntax**: \`<repeat-style>#\`
   *
   * **Initial value**: \`repeat\`
   */
  "-webkit-mask-repeat"?: Property.WebkitMaskRepeat | undefined;
  /**
   * The \`-webkit-mask-repeat-x\` property specifies whether and how a mask image is repeated (tiled) horizontally.
   *
   * **Syntax**: \`repeat | no-repeat | space | round\`
   *
   * **Initial value**: \`repeat\`
   */
  "-webkit-mask-repeat-x"?: Property.WebkitMaskRepeatX | undefined;
  /**
   * The \`-webkit-mask-repeat-y\` property sets whether and how a mask image is repeated (tiled) vertically.
   *
   * **Syntax**: \`repeat | no-repeat | space | round\`
   *
   * **Initial value**: \`repeat\`
   */
  "-webkit-mask-repeat-y"?: Property.WebkitMaskRepeatY | undefined;
  /**
   * The **\`mask-size\`** CSS property specifies the sizes of the mask images. The size of the image can be fully or partially constrained in order to preserve its intrinsic ratio.
   *
   * **Syntax**: \`<bg-size>#\`
   *
   * **Initial value**: \`auto auto\`
   */
  "-webkit-mask-size"?: Property.WebkitMaskSize<TLength> | undefined;
  /**
   * The **\`max-inline-size\`** CSS property defines the horizontal or vertical maximum size of an element's block, depending on its writing mode. It corresponds to either the \`max-width\` or the \`max-height\` property, depending on the value of \`writing-mode\`.
   *
   * **Syntax**: \`<'max-width'>\`
   *
   * **Initial value**: \`0\`
   */
  "-webkit-max-inline-size"?: Property.MaxInlineSize<TLength> | undefined;
  /**
   * The **\`order\`** CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending \`order\` value and then by their source code order.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`0\`
   */
  "-webkit-order"?: Property.Order | undefined;
  /**
   * The \`-webkit-overflow-scrolling\` CSS property controls whether or not touch devices use momentum-based scrolling for a given element.
   *
   * **Syntax**: \`auto | touch\`
   *
   * **Initial value**: \`auto\`
   */
  "-webkit-overflow-scrolling"?: Property.WebkitOverflowScrolling | undefined;
  /**
   * The **\`padding-inline-end\`** CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>\`
   *
   * **Initial value**: \`0\`
   */
  "-webkit-padding-end"?: Property.PaddingInlineEnd<TLength> | undefined;
  /**
   * The **\`padding-inline-start\`** CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.
   *
   * **Syntax**: \`<'padding-left'>\`
   *
   * **Initial value**: \`0\`
   */
  "-webkit-padding-start"?: Property.PaddingInlineStart<TLength> | undefined;
  /**
   * The **\`perspective\`** CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.
   *
   * **Syntax**: \`none | <length>\`
   *
   * **Initial value**: \`none\`
   */
  "-webkit-perspective"?: Property.Perspective<TLength> | undefined;
  /**
   * The **\`perspective-origin\`** CSS property determines the position at which the viewer is looking. It is used as the _vanishing point_ by the \`perspective\` property.
   *
   * **Syntax**: \`<position>\`
   *
   * **Initial value**: \`50% 50%\`
   */
  "-webkit-perspective-origin"?: Property.PerspectiveOrigin<TLength> | undefined;
  /**
   * The **\`color-adjust\`** CSS property sets what, if anything, the user agent may do to optimize the appearance of the element on the output device. By default, the browser is allowed to make any adjustments to the element's appearance it determines to be necessary and prudent given the type and capabilities of the output device.
   *
   * **Syntax**: \`economy | exact\`
   *
   * **Initial value**: \`economy\`
   */
  "-webkit-print-color-adjust"?: Property.ColorAdjust | undefined;
  /**
   * The \`**ruby-position**\` CSS property defines the position of a ruby element relatives to its base element. It can be position over the element (\`over\`), under it (\`under\`), or between the characters, on their right side (\`inter-character\`).
   *
   * **Syntax**: \`[ alternate || [ over | under ] ] | inter-character\`
   *
   * **Initial value**: \`alternate\`
   */
  "-webkit-ruby-position"?: Property.RubyPosition | undefined;
  /**
   * The **\`scroll-snap-type\`** CSS property sets how strictly snap points are enforced on the scroll container in case there is one.
   *
   * **Syntax**: \`none | [ x | y | block | inline | both ] [ mandatory | proximity ]?\`
   *
   * **Initial value**: \`none\`
   */
  "-webkit-scroll-snap-type"?: Property.ScrollSnapType | undefined;
  /**
   * The **\`shape-margin\`** CSS property sets a margin for a CSS shape created using \`shape-outside\`.
   *
   * **Syntax**: \`<length-percentage>\`
   *
   * **Initial value**: \`0\`
   */
  "-webkit-shape-margin"?: Property.ShapeMargin<TLength> | undefined;
  /**
   * **\`-webkit-tap-highlight-color\`** is a non-standard CSS property that sets the color of the highlight that appears over a link while it's being tapped. The highlighting indicates to the user\xA0that their tap is being successfully recognized, and indicates which element they're tapping on.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`black\`
   */
  "-webkit-tap-highlight-color"?: Property.WebkitTapHighlightColor | undefined;
  /**
   * The **\`text-combine-upright\`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.
   *
   * **Syntax**: \`none | all | [ digits <integer>? ]\`
   *
   * **Initial value**: \`none\`
   */
  "-webkit-text-combine"?: Property.TextCombineUpright | undefined;
  /**
   * The **\`text-decoration-color\`** CSS property sets the color of decorations added to text by \`text-decoration-line\`.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   */
  "-webkit-text-decoration-color"?: Property.TextDecorationColor | undefined;
  /**
   * The **\`text-decoration-line\`** CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline.
   *
   * **Syntax**: \`none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error\`
   *
   * **Initial value**: \`none\`
   */
  "-webkit-text-decoration-line"?: Property.TextDecorationLine | undefined;
  /**
   * The **\`text-decoration-skip\`** CSS property sets what parts of an element\u2019s content any text decoration affecting the element must skip over. It controls all text decoration lines drawn by the element and also any text decoration lines drawn by its ancestors.
   *
   * **Syntax**: \`none | [ objects || [ spaces | [ leading-spaces || trailing-spaces ] ] || edges || box-decoration ]\`
   *
   * **Initial value**: \`objects\`
   */
  "-webkit-text-decoration-skip"?: Property.TextDecorationSkip | undefined;
  /**
   * The **\`text-decoration-style\`** CSS property sets the style of the lines specified by \`text-decoration-line\`. The style applies to all lines that are set with \`text-decoration-line\`.
   *
   * **Syntax**: \`solid | double | dotted | dashed | wavy\`
   *
   * **Initial value**: \`solid\`
   */
  "-webkit-text-decoration-style"?: Property.TextDecorationStyle | undefined;
  /**
   * The **\`text-emphasis-color\`** CSS property sets the color of emphasis marks. This value can also be set using the \`text-emphasis\` shorthand.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   */
  "-webkit-text-emphasis-color"?: Property.TextEmphasisColor | undefined;
  /**
   * The **\`text-emphasis-position\`** CSS property sets where emphasis marks are drawn. Like ruby text, if there isn't enough room for emphasis marks, the line height is increased.
   *
   * **Syntax**: \`[ over | under ] && [ right | left ]\`
   *
   * **Initial value**: \`over right\`
   */
  "-webkit-text-emphasis-position"?: Property.TextEmphasisPosition | undefined;
  /**
   * The **\`text-emphasis-style\`** CSS property sets the appearance of emphasis marks. It can also be set, and reset, using the \`text-emphasis\` shorthand.
   *
   * **Syntax**: \`none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>\`
   *
   * **Initial value**: \`none\`
   */
  "-webkit-text-emphasis-style"?: Property.TextEmphasisStyle | undefined;
  /**
   * The **\`-webkit-text-fill-color\`** CSS property specifies the fill color of characters of text. If this property is not set, the value of the \`color\` property is used.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   */
  "-webkit-text-fill-color"?: Property.WebkitTextFillColor | undefined;
  /**
   * The **\`text-orientation\`** CSS property sets the orientation of the text characters in a line. It only affects text in vertical mode (when \`writing-mode\` is not \`horizontal-tb\`). It is useful for controlling the display of languages that use vertical script, and also for making vertical table headers.
   *
   * **Syntax**: \`mixed | upright | sideways\`
   *
   * **Initial value**: \`mixed\`
   */
  "-webkit-text-orientation"?: Property.TextOrientation | undefined;
  /**
   * The **\`text-size-adjust\`** CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.
   *
   * **Syntax**: \`none | auto | <percentage>\`
   *
   * **Initial value**: \`auto\` for smartphone browsers supporting inflation, \`none\` in other cases (and then not modifiable).
   */
  "-webkit-text-size-adjust"?: Property.TextSizeAdjust | undefined;
  /**
   * The **\`-webkit-text-stroke-color\`** CSS property specifies the stroke color of characters of text. If this property is not set, the value of the \`color\` property is used.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   */
  "-webkit-text-stroke-color"?: Property.WebkitTextStrokeColor | undefined;
  /**
   * The **\`-webkit-text-stroke-width\`** CSS property specifies the width of the stroke for text.
   *
   * **Syntax**: \`<length>\`
   *
   * **Initial value**: \`0\`
   */
  "-webkit-text-stroke-width"?: Property.WebkitTextStrokeWidth<TLength> | undefined;
  /**
   * The **\`text-underline-position\`** CSS property specifies the position of the underline which is set using the \`text-decoration\` property's \`underline\` value.
   *
   * **Syntax**: \`auto | from-font | [ under || [ left | right ] ]\`
   *
   * **Initial value**: \`auto\`
   */
  "-webkit-text-underline-position"?: Property.TextUnderlinePosition | undefined;
  /**
   * The \`-webkit-touch-callout\` CSS property controls the display of the default callout shown when you touch and hold a touch target.
   *
   * **Syntax**: \`default | none\`
   *
   * **Initial value**: \`default\`
   */
  "-webkit-touch-callout"?: Property.WebkitTouchCallout | undefined;
  /**
   * The **\`transform\`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.
   *
   * **Syntax**: \`none | <transform-list>\`
   *
   * **Initial value**: \`none\`
   */
  "-webkit-transform"?: Property.Transform | undefined;
  /**
   * The **\`transform-origin\`** CSS property sets the origin for an element's transformations.
   *
   * **Syntax**: \`[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?\`
   *
   * **Initial value**: \`50% 50% 0\`
   */
  "-webkit-transform-origin"?: Property.TransformOrigin<TLength> | undefined;
  /**
   * The **\`transform-style\`** CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element.
   *
   * **Syntax**: \`flat | preserve-3d\`
   *
   * **Initial value**: \`flat\`
   */
  "-webkit-transform-style"?: Property.TransformStyle | undefined;
  /**
   * The **\`transition-delay\`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  "-webkit-transition-delay"?: Property.TransitionDelay<TTime> | undefined;
  /**
   * The **\`transition-duration\`** CSS property sets the length of time a transition animation should take to complete. By default, the value is \`0s\`, meaning that no animation will occur.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   */
  "-webkit-transition-duration"?: Property.TransitionDuration<TTime> | undefined;
  /**
   * The **\`transition-property\`** CSS property sets the CSS properties to which a transition effect should be applied.
   *
   * **Syntax**: \`none | <single-transition-property>#\`
   *
   * **Initial value**: all
   */
  "-webkit-transition-property"?: Property.TransitionProperty | undefined;
  /**
   * The **\`transition-timing-function\`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.
   *
   * **Syntax**: \`<easing-function>#\`
   *
   * **Initial value**: \`ease\`
   */
  "-webkit-transition-timing-function"?: Property.TransitionTimingFunction | undefined;
  /**
   * **Syntax**: \`read-only | read-write | read-write-plaintext-only\`
   *
   * **Initial value**: \`read-only\`
   */
  "-webkit-user-modify"?: Property.WebkitUserModify | undefined;
  /**
   * The \`**user-select**\` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.
   *
   * **Syntax**: \`auto | text | none | contain | all\`
   *
   * **Initial value**: \`auto\`
   */
  "-webkit-user-select"?: Property.UserSelect | undefined;
  /**
   * The **\`writing-mode\`** CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (\`html\` element for HTML documents).
   *
   * **Syntax**: \`horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr\`
   *
   * **Initial value**: \`horizontal-tb\`
   */
  "-webkit-writing-mode"?: Property.WritingMode | undefined;
}

export interface VendorShorthandPropertiesHyphen<TLength = (string & {}) | 0, TTime = string & {}> {
  /**
   * The **\`animation\`** shorthand CSS property applies an animation between styles. It is a shorthand for \`animation-name\`, \`animation-duration\`, \`animation-timing-function\`, \`animation-delay\`, \`animation-iteration-count\`, \`animation-direction\`, \`animation-fill-mode\`, and \`animation-play-state\`.
   *
   * **Syntax**: \`<single-animation>#\`
   */
  "-moz-animation"?: Property.Animation<TTime> | undefined;
  /**
   * The **\`border-image\`** CSS property draws an image around a given element. It replaces the element's regular border.
   *
   * **Syntax**: \`<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>\`
   */
  "-moz-border-image"?: Property.BorderImage | undefined;
  /**
   * The **\`column-rule\`**\xA0shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>\`
   */
  "-moz-column-rule"?: Property.ColumnRule<TLength> | undefined;
  /**
   * The **\`columns\`** CSS shorthand property sets the number of columns to use when drawing an element's contents, as well as those columns' widths.
   *
   * **Syntax**: \`<'column-width'> || <'column-count'>\`
   */
  "-moz-columns"?: Property.Columns<TLength> | undefined;
  /**
   * The **\`transition\`** CSS property is a shorthand property for \`transition-property\`, \`transition-duration\`, \`transition-timing-function\`, and \`transition-delay\`.
   *
   * **Syntax**: \`<single-transition>#\`
   */
  "-moz-transition"?: Property.Transition<TTime> | undefined;
  /**
   * The **\`-ms-content-zoom-limit\`** CSS shorthand property is a Microsoft extension that specifies values for the \`-ms-content-zoom-limit-min\` and \`-ms-content-zoom-limit-max\` properties.
   *
   * **Syntax**: \`<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>\`
   */
  "-ms-content-zoom-limit"?: Property.MsContentZoomLimit | undefined;
  /**
   * The **\`-ms-content-zoom-snap\`** CSS shorthand property is a Microsoft extension that specifies values for the \`-ms-content-zoom-snap-type\` and \`-ms-content-zoom-snap-points\` properties.
   *
   * **Syntax**: \`<'-ms-content-zoom-snap-type'> || <'-ms-content-zoom-snap-points'>\`
   */
  "-ms-content-zoom-snap"?: Property.MsContentZoomSnap | undefined;
  /**
   * The **\`flex\`** CSS shorthand property sets how a flex _item_ will grow or shrink to fit the space available in its flex container.
   *
   * **Syntax**: \`none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\`
   */
  "-ms-flex"?: Property.Flex<TLength> | undefined;
  /**
   * The **\\-ms-scroll-limit** CSS property is a Microsoft extension that specifies values for the \`-ms-scroll-limit-x-min\`, \`-ms-scroll-limit-y-min\`, \`-ms-scroll-limit-x-max\`, and \`-ms-scroll-limit-y-max\` properties.
   *
   * **Syntax**: \`<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>\`
   */
  "-ms-scroll-limit"?: Property.MsScrollLimit | undefined;
  /**
   * The **\`-ms-scroll-snap-x\`** CSS shorthand property is a Microsoft extension that specifies values for the \`-ms-scroll-snap-type\` and \`-ms-scroll-snap-points-x\` properties.
   *
   * **Syntax**: \`<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>\`
   */
  "-ms-scroll-snap-x"?: Property.MsScrollSnapX | undefined;
  /**
   * The **\`-ms-scroll-snap-x\`** CSS shorthand property is a Microsoft extension that specifies values for the \`-ms-scroll-snap-type\` and \`-ms-scroll-snap-points-y\` properties.
   *
   * **Syntax**: \`<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>\`
   */
  "-ms-scroll-snap-y"?: Property.MsScrollSnapY | undefined;
  /**
   * The **\`transition\`** CSS property is a shorthand property for \`transition-property\`, \`transition-duration\`, \`transition-timing-function\`, and \`transition-delay\`.
   *
   * **Syntax**: \`<single-transition>#\`
   */
  "-ms-transition"?: Property.Transition<TTime> | undefined;
  /**
   * The **\`animation\`** shorthand CSS property applies an animation between styles. It is a shorthand for \`animation-name\`, \`animation-duration\`, \`animation-timing-function\`, \`animation-delay\`, \`animation-iteration-count\`, \`animation-direction\`, \`animation-fill-mode\`, and \`animation-play-state\`.
   *
   * **Syntax**: \`<single-animation>#\`
   */
  "-webkit-animation"?: Property.Animation<TTime> | undefined;
  /**
   * The **\`-webkit-border-before\`** CSS property is a shorthand property for setting the individual logical block start border property values in a single place in the style sheet.
   *
   * **Syntax**: \`<'border-width'> || <'border-style'> || <color>\`
   */
  "-webkit-border-before"?: Property.WebkitBorderBefore<TLength> | undefined;
  /**
   * The **\`border-image\`** CSS property draws an image around a given element. It replaces the element's regular border.
   *
   * **Syntax**: \`<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>\`
   */
  "-webkit-border-image"?: Property.BorderImage | undefined;
  /**
   * The **\`border-radius\`** CSS property rounds the corners of an element's outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.
   *
   * **Syntax**: \`<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?\`
   */
  "-webkit-border-radius"?: Property.BorderRadius<TLength> | undefined;
  /**
   * The **\`column-rule\`**\xA0shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout.
   *
   * **Syntax**: \`<'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>\`
   */
  "-webkit-column-rule"?: Property.ColumnRule<TLength> | undefined;
  /**
   * The **\`columns\`** CSS shorthand property sets the number of columns to use when drawing an element's contents, as well as those columns' widths.
   *
   * **Syntax**: \`<'column-width'> || <'column-count'>\`
   */
  "-webkit-columns"?: Property.Columns<TLength> | undefined;
  /**
   * The **\`flex\`** CSS shorthand property sets how a flex _item_ will grow or shrink to fit the space available in its flex container.
   *
   * **Syntax**: \`none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\`
   */
  "-webkit-flex"?: Property.Flex<TLength> | undefined;
  /**
   * The **\`flex-flow\`** CSS shorthand property specifies the direction of a flex container, as well as its wrapping behavior.
   *
   * **Syntax**: \`<'flex-direction'> || <'flex-wrap'>\`
   */
  "-webkit-flex-flow"?: Property.FlexFlow | undefined;
  /**
   * The **\`mask\`** CSS shorthand property hides an element (partially or fully) by masking or clipping the image at specific points.
   *
   * **Syntax**: \`[ <mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || [ <box> | border | padding | content | text ] || [ <box> | border | padding | content ] ]#\`
   */
  "-webkit-mask"?: Property.WebkitMask<TLength> | undefined;
  /**
   * The **\`mask-border\`** CSS shorthand property lets you create a mask along the edge of an element's border.
   *
   * **Syntax**: \`<'mask-border-source'> || <'mask-border-slice'> [ / <'mask-border-width'>? [ / <'mask-border-outset'> ]? ]? || <'mask-border-repeat'> || <'mask-border-mode'>\`
   */
  "-webkit-mask-box-image"?: Property.MaskBorder | undefined;
  /**
   * The **\`text-emphasis\`** CSS property applies emphasis marks to text (except spaces and control characters). It is a shorthand for \`text-emphasis-style\` and \`text-emphasis-color\`.
   *
   * **Syntax**: \`<'text-emphasis-style'> || <'text-emphasis-color'>\`
   */
  "-webkit-text-emphasis"?: Property.TextEmphasis | undefined;
  /**
   * The **\`-webkit-text-stroke\`** CSS property specifies the width and color of strokes for text characters. This is a shorthand property for the longhand properties \`-webkit-text-stroke-width\` and \`-webkit-text-stroke-color\`.
   *
   * **Syntax**: \`<length> || <color>\`
   */
  "-webkit-text-stroke"?: Property.WebkitTextStroke<TLength> | undefined;
  /**
   * The **\`transition\`** CSS property is a shorthand property for \`transition-property\`, \`transition-duration\`, \`transition-timing-function\`, and \`transition-delay\`.
   *
   * **Syntax**: \`<single-transition>#\`
   */
  "-webkit-transition"?: Property.Transition<TTime> | undefined;
}

export interface VendorPropertiesHyphen<TLength = (string & {}) | 0, TTime = string & {}>
  extends VendorLonghandPropertiesHyphen<TLength, TTime>,
    VendorShorthandPropertiesHyphen<TLength, TTime> {}

export interface ObsoletePropertiesHyphen<TLength = (string & {}) | 0, TTime = string & {}> {
  /**
   * In combination with \`elevation\`, the **\`azimuth\`** CSS property enables different audio sources to be positioned spatially for aural presentation. This is important in that it provides a natural way to tell several voices apart, as each can be positioned to originate at a different location on the sound stage. Stereo output produce a lateral sound stage, while binaural headphones and multi-speaker setups allow for a fully three-dimensional stage.
   *
   * **Syntax**: \`<angle> | [ [ left-side | far-left | left | center-left | center | center-right | right | far-right | right-side ] || behind ] | leftwards | rightwards\`
   *
   * **Initial value**: \`center\`
   *
   * @deprecated
   */
  azimuth?: Property.Azimuth | undefined;
  /**
   * The **\`box-align\`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.
   *
   * **Syntax**: \`start | center | end | baseline | stretch\`
   *
   * **Initial value**: \`stretch\`
   *
   * @deprecated
   */
  "box-align"?: Property.BoxAlign | undefined;
  /**
   * The **\`box-direction\`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).
   *
   * **Syntax**: \`normal | reverse | inherit\`
   *
   * **Initial value**: \`normal\`
   *
   * @deprecated
   */
  "box-direction"?: Property.BoxDirection | undefined;
  /**
   * The **\`-moz-box-flex\`** and **\`-webkit-box-flex\`** CSS properties specify how a \`-moz-box\` or \`-webkit-box\` grows to fill the box that contains it, in the direction of the containing box's layout.
   *
   * **Syntax**: \`<number>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  "box-flex"?: Property.BoxFlex | undefined;
  /**
   * The **\`box-flex-group\`** CSS property assigns the flexbox's child elements to a flex group.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`1\`
   *
   * @deprecated
   */
  "box-flex-group"?: Property.BoxFlexGroup | undefined;
  /**
   * The **\`box-lines\`** CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).
   *
   * **Syntax**: \`single | multiple\`
   *
   * **Initial value**: \`single\`
   *
   * @deprecated
   */
  "box-lines"?: Property.BoxLines | undefined;
  /**
   * The **\`box-ordinal-group\`** CSS property assigns the flexbox's child elements to an ordinal group.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`1\`
   *
   * @deprecated
   */
  "box-ordinal-group"?: Property.BoxOrdinalGroup | undefined;
  /**
   * This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard. See flexbox for information about the current standard.
   *
   * **Syntax**: \`horizontal | vertical | inline-axis | block-axis | inherit\`
   *
   * **Initial value**: \`inline-axis\` (\`horizontal\` in XUL)
   *
   * @deprecated
   */
  "box-orient"?: Property.BoxOrient | undefined;
  /**
   * The **\`-moz-box-pack\`** and **\`-webkit-box-pack\`** CSS properties specify how a \`-moz-box\` or \`-webkit-box\` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.
   *
   * **Syntax**: \`start | center | end | justify\`
   *
   * **Initial value**: \`start\`
   *
   * @deprecated
   */
  "box-pack"?: Property.BoxPack | undefined;
  /**
   * The **\`clip\`** CSS property defines a visible portion of an element. The \`clip\` property applies only to absolutely positioned elements \u2014 that is, elements with \`position:absolute\` or \`position:fixed\`.
   *
   * **Syntax**: \`<shape> | auto\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  clip?: Property.Clip | undefined;
  /**
   * The **\`font-variant-alternates\`** CSS property controls the usage of alternate glyphs. These alternate glyphs may be referenced by alternative names defined in \`@font-feature-values\`.
   *
   * **Syntax**: \`normal | [ stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) ]\`
   *
   * **Initial value**: \`normal\`
   *
   * @deprecated
   */
  "font-variant-alternates"?: Property.FontVariantAlternates | undefined;
  /**
   * The **\`column-gap\`** CSS property sets the size of the gap (gutter) between an element's columns.
   *
   * **Syntax**: \`<length-percentage>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  "grid-column-gap"?: Property.GridColumnGap<TLength> | undefined;
  /**
   * The **\`gap\`** CSS property sets the gaps (gutters) between rows and columns. It is a shorthand for \`row-gap\` and \`column-gap\`.
   *
   * **Syntax**: \`<'grid-row-gap'> <'grid-column-gap'>?\`
   *
   * @deprecated
   */
  "grid-gap"?: Property.GridGap<TLength> | undefined;
  /**
   * The **\`row-gap\`** CSS property sets the size of the gap (gutter) between an element's grid rows.
   *
   * **Syntax**: \`<length-percentage>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  "grid-row-gap"?: Property.GridRowGap<TLength> | undefined;
  /**
   * The **\`ime-mode\`** CSS property controls the state of the input method editor (IME) for text fields. This property is obsolete.
   *
   * **Syntax**: \`auto | normal | active | inactive | disabled\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  "ime-mode"?: Property.ImeMode | undefined;
  /**
   * The **\`inset-inline\`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\` and \`bottom\`, or \`right\` and \`left\` properties depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>{1,2}\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  "offset-block"?: Property.InsetBlock<TLength> | undefined;
  /**
   * The **\`inset-block-end\`** CSS property defines the logical block end offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\`, \`right\`, \`bottom\`, or \`left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  "offset-block-end"?: Property.InsetBlockEnd<TLength> | undefined;
  /**
   * The **\`inset-block-start\`** CSS property defines the logical block start offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\`, \`right\`, \`bottom\`, or \`left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  "offset-block-start"?: Property.InsetBlockStart<TLength> | undefined;
  /**
   * The **\`inset-inline\`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\` and \`bottom\`, or \`right\` and \`left\` properties depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>{1,2}\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  "offset-inline"?: Property.InsetInline<TLength> | undefined;
  /**
   * The **\`inset-inline-end\`** CSS property defines the logical inline end inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\`, \`right\`, \`bottom\`, or \`left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  "offset-inline-end"?: Property.InsetInlineEnd<TLength> | undefined;
  /**
   * The **\`inset-inline-start\`** CSS property defines the logical inline start inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the \`top\`, \`right\`, \`bottom\`, or \`left\` property depending on the values defined for \`writing-mode\`, \`direction\`, and \`text-orientation\`.
   *
   * **Syntax**: \`<'top'>\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  "offset-inline-start"?: Property.InsetInlineStart<TLength> | undefined;
  /**
   * The **\`scroll-snap-coordinate\`** CSS property defines the x and y coordinate positions within an element that will align with its nearest ancestor scroll container's \`scroll-snap-destination\` for each respective axis.
   *
   * **Syntax**: \`none | <position>#\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  "scroll-snap-coordinate"?: Property.ScrollSnapCoordinate<TLength> | undefined;
  /**
   * The **\`scroll-snap-destination\`** CSS property defines the position in x and y coordinates within the scroll container's visual viewport which element snap points align with.
   *
   * **Syntax**: \`<position>\`
   *
   * **Initial value**: \`0px 0px\`
   *
   * @deprecated
   */
  "scroll-snap-destination"?: Property.ScrollSnapDestination<TLength> | undefined;
  /**
   * The **\`scroll-snap-points-x\`** CSS property defines the horizontal positioning of snap points within the content of the scroll container they are applied to.
   *
   * **Syntax**: \`none | repeat( <length-percentage> )\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  "scroll-snap-points-x"?: Property.ScrollSnapPointsX | undefined;
  /**
   * The **\`scroll-snap-points-y\`** CSS property defines the vertical positioning of snap points within the content of the scroll container they are applied to.
   *
   * **Syntax**: \`none | repeat( <length-percentage> )\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  "scroll-snap-points-y"?: Property.ScrollSnapPointsY | undefined;
  /**
   * The **\`scroll-snap-type-x\`** CSS property defines how strictly snap points are enforced on the horizontal axis of the scroll container in case there is one.
   *
   * **Syntax**: \`none | mandatory | proximity\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  "scroll-snap-type-x"?: Property.ScrollSnapTypeX | undefined;
  /**
   * The **\`scroll-snap-type-y\`** CSS property defines how strictly snap points are enforced on the vertical axis of the scroll container in case there is one.
   *
   * **Syntax**: \`none | mandatory | proximity\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  "scroll-snap-type-y"?: Property.ScrollSnapTypeY | undefined;
  /**
   * The **\`-ms-scrollbar-track-color\`** CSS property is a Microsoft extension that specifies the color of the track element of a scrollbar.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`Scrollbar\`
   *
   * @deprecated
   */
  "scrollbar-track-color"?: Property.MsScrollbarTrackColor | undefined;
  /**
   * The **\`box-align\`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.
   *
   * **Syntax**: \`start | center | end | baseline | stretch\`
   *
   * **Initial value**: \`stretch\`
   *
   * @deprecated
   */
  "-khtml-box-align"?: Property.BoxAlign | undefined;
  /**
   * The **\`box-direction\`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).
   *
   * **Syntax**: \`normal | reverse | inherit\`
   *
   * **Initial value**: \`normal\`
   *
   * @deprecated
   */
  "-khtml-box-direction"?: Property.BoxDirection | undefined;
  /**
   * The **\`-moz-box-flex\`** and **\`-webkit-box-flex\`** CSS properties specify how a \`-moz-box\` or \`-webkit-box\` grows to fill the box that contains it, in the direction of the containing box's layout.
   *
   * **Syntax**: \`<number>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  "-khtml-box-flex"?: Property.BoxFlex | undefined;
  /**
   * The **\`box-flex-group\`** CSS property assigns the flexbox's child elements to a flex group.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`1\`
   *
   * @deprecated
   */
  "-khtml-box-flex-group"?: Property.BoxFlexGroup | undefined;
  /**
   * The **\`box-lines\`** CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).
   *
   * **Syntax**: \`single | multiple\`
   *
   * **Initial value**: \`single\`
   *
   * @deprecated
   */
  "-khtml-box-lines"?: Property.BoxLines | undefined;
  /**
   * The **\`box-ordinal-group\`** CSS property assigns the flexbox's child elements to an ordinal group.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`1\`
   *
   * @deprecated
   */
  "-khtml-box-ordinal-group"?: Property.BoxOrdinalGroup | undefined;
  /**
   * This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard. See flexbox for information about the current standard.
   *
   * **Syntax**: \`horizontal | vertical | inline-axis | block-axis | inherit\`
   *
   * **Initial value**: \`inline-axis\` (\`horizontal\` in XUL)
   *
   * @deprecated
   */
  "-khtml-box-orient"?: Property.BoxOrient | undefined;
  /**
   * The **\`-moz-box-pack\`** and **\`-webkit-box-pack\`** CSS properties specify how a \`-moz-box\` or \`-webkit-box\` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.
   *
   * **Syntax**: \`start | center | end | justify\`
   *
   * **Initial value**: \`start\`
   *
   * @deprecated
   */
  "-khtml-box-pack"?: Property.BoxPack | undefined;
  /**
   * The **\`line-break\`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.
   *
   * **Syntax**: \`auto | loose | normal | strict | anywhere\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  "-khtml-line-break"?: Property.LineBreak | undefined;
  /**
   * The **\`opacity\`** CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.
   *
   * **Syntax**: \`<alpha-value>\`
   *
   * **Initial value**: \`1.0\`
   *
   * @deprecated
   */
  "-khtml-opacity"?: Property.Opacity | undefined;
  /**
   * The \`**user-select**\` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.
   *
   * **Syntax**: \`auto | text | none | contain | all\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  "-khtml-user-select"?: Property.UserSelect | undefined;
  /**
   * The **\`background-clip\`** CSS property sets whether an element's background extends underneath its border box, padding box, or content box.
   *
   * **Syntax**: \`<box>#\`
   *
   * **Initial value**: \`border-box\`
   *
   * @deprecated
   */
  "-moz-background-clip"?: Property.BackgroundClip | undefined;
  /**
   * The **\`box-decoration-break\`** CSS property specifies how an element's fragments should be rendered when broken across multiple lines, columns, or pages.
   *
   * **Syntax**: \`slice | clone\`
   *
   * **Initial value**: \`slice\`
   *
   * @deprecated
   */
  "-moz-background-inline-policy"?: Property.BoxDecorationBreak | undefined;
  /**
   * The **\`background-origin\`** CSS property sets the background's origin: from the border start, inside the border, or inside the padding.
   *
   * **Syntax**: \`<box>#\`
   *
   * **Initial value**: \`padding-box\`
   *
   * @deprecated
   */
  "-moz-background-origin"?: Property.BackgroundOrigin | undefined;
  /**
   * The **\`background-size\`** CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.
   *
   * **Syntax**: \`<bg-size>#\`
   *
   * **Initial value**: \`auto auto\`
   *
   * @deprecated
   */
  "-moz-background-size"?: Property.BackgroundSize<TLength> | undefined;
  /**
   * The **\`-moz-binding\`** CSS property is used by Mozilla-based applications to attach an XBL binding to a DOM element.
   *
   * **Syntax**: \`<url> | none\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  "-moz-binding"?: Property.MozBinding | undefined;
  /**
   * The **\`border-radius\`** CSS property rounds the corners of an element's outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.
   *
   * **Syntax**: \`<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?\`
   *
   * @deprecated
   */
  "-moz-border-radius"?: Property.BorderRadius<TLength> | undefined;
  /**
   * The **\`border-bottom-left-radius\`** CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  "-moz-border-radius-bottomleft"?: Property.BorderBottomLeftRadius<TLength> | undefined;
  /**
   * The **\`border-bottom-right-radius\`** CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  "-moz-border-radius-bottomright"?: Property.BorderBottomRightRadius<TLength> | undefined;
  /**
   * The **\`border-top-left-radius\`** CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  "-moz-border-radius-topleft"?: Property.BorderTopLeftRadius<TLength> | undefined;
  /**
   * The **\`border-top-right-radius\`** CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.
   *
   * **Syntax**: \`<length-percentage>{1,2}\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  "-moz-border-radius-topright"?: Property.BorderTopRightRadius<TLength> | undefined;
  /**
   * The **\`box-align\`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.
   *
   * **Syntax**: \`start | center | end | baseline | stretch\`
   *
   * **Initial value**: \`stretch\`
   *
   * @deprecated
   */
  "-moz-box-align"?: Property.BoxAlign | undefined;
  /**
   * The **\`box-direction\`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).
   *
   * **Syntax**: \`normal | reverse | inherit\`
   *
   * **Initial value**: \`normal\`
   *
   * @deprecated
   */
  "-moz-box-direction"?: Property.BoxDirection | undefined;
  /**
   * The **\`-moz-box-flex\`** and **\`-webkit-box-flex\`** CSS properties specify how a \`-moz-box\` or \`-webkit-box\` grows to fill the box that contains it, in the direction of the containing box's layout.
   *
   * **Syntax**: \`<number>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  "-moz-box-flex"?: Property.BoxFlex | undefined;
  /**
   * The **\`box-ordinal-group\`** CSS property assigns the flexbox's child elements to an ordinal group.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`1\`
   *
   * @deprecated
   */
  "-moz-box-ordinal-group"?: Property.BoxOrdinalGroup | undefined;
  /**
   * This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard. See flexbox for information about the current standard.
   *
   * **Syntax**: \`horizontal | vertical | inline-axis | block-axis | inherit\`
   *
   * **Initial value**: \`inline-axis\` (\`horizontal\` in XUL)
   *
   * @deprecated
   */
  "-moz-box-orient"?: Property.BoxOrient | undefined;
  /**
   * The **\`-moz-box-pack\`** and **\`-webkit-box-pack\`** CSS properties specify how a \`-moz-box\` or \`-webkit-box\` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.
   *
   * **Syntax**: \`start | center | end | justify\`
   *
   * **Initial value**: \`start\`
   *
   * @deprecated
   */
  "-moz-box-pack"?: Property.BoxPack | undefined;
  /**
   * The **\`box-shadow\`** CSS property adds shadow effects around an element's frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color.
   *
   * **Syntax**: \`none | <shadow>#\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  "-moz-box-shadow"?: Property.BoxShadow | undefined;
  /**
   * The non-standard **\`-moz-float-edge\`** CSS property specifies whether the height and width properties of the element include the margin, border, or padding thickness.
   *
   * **Syntax**: \`border-box | content-box | margin-box | padding-box\`
   *
   * **Initial value**: \`content-box\`
   *
   * @deprecated
   */
  "-moz-float-edge"?: Property.MozFloatEdge | undefined;
  /**
   * The **\`-moz-force-broken-image-icon\`** extended CSS property can be used to force the broken image icon to be shown even when a broken image has an \`alt\` attribute.
   *
   * **Syntax**: \`0 | 1\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  "-moz-force-broken-image-icon"?: Property.MozForceBrokenImageIcon | undefined;
  /**
   * The **\`opacity\`** CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.
   *
   * **Syntax**: \`<alpha-value>\`
   *
   * **Initial value**: \`1.0\`
   *
   * @deprecated
   */
  "-moz-opacity"?: Property.Opacity | undefined;
  /**
   * The **\`outline\`** CSS shorthand property set all the outline properties in a single declaration.
   *
   * **Syntax**: \`[ <'outline-color'> || <'outline-style'> || <'outline-width'> ]\`
   *
   * @deprecated
   */
  "-moz-outline"?: Property.Outline<TLength> | undefined;
  /**
   * The **\`outline-color\`** CSS property sets the color of an element's outline.
   *
   * **Syntax**: \`<color> | invert\`
   *
   * **Initial value**: \`invert\`, for browsers supporting it, \`currentColor\` for the other
   *
   * @deprecated
   */
  "-moz-outline-color"?: Property.OutlineColor | undefined;
  /**
   * In Mozilla applications like Firefox, the **\`-moz-outline-radius\`** CSS shorthand property can be used to give an element's \`outline\` rounded corners.
   *
   * **Syntax**: \`<outline-radius>{1,4} [ / <outline-radius>{1,4} ]?\`
   *
   * @deprecated
   */
  "-moz-outline-radius"?: Property.MozOutlineRadius<TLength> | undefined;
  /**
   * In Mozilla applications, the **\`-moz-outline-radius-bottomleft\`** CSS property can be used to round the bottom-left corner of an element's \`outline\`.
   *
   * **Syntax**: \`<outline-radius>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  "-moz-outline-radius-bottomleft"?: Property.MozOutlineRadiusBottomleft<TLength> | undefined;
  /**
   * In Mozilla applications, the **\`-moz-outline-radius-bottomright\`** CSS property can be used to round the bottom-right corner of an element's \`outline\`.
   *
   * **Syntax**: \`<outline-radius>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  "-moz-outline-radius-bottomright"?: Property.MozOutlineRadiusBottomright<TLength> | undefined;
  /**
   * In Mozilla applications, the **\`-moz-outline-radius-topleft\`** CSS property can be used to round the top-left corner of an element's \`outline\`.
   *
   * **Syntax**: \`<outline-radius>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  "-moz-outline-radius-topleft"?: Property.MozOutlineRadiusTopleft<TLength> | undefined;
  /**
   * In Mozilla applications, the **\`-moz-outline-radius-topright\`** CSS property can be used to round the top-right corner of an element's \`outline\`.
   *
   * **Syntax**: \`<outline-radius>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  "-moz-outline-radius-topright"?: Property.MozOutlineRadiusTopright<TLength> | undefined;
  /**
   * The **\`outline-style\`** CSS property sets the style of an element's outline. An outline is a line that is drawn around an element, outside the \`border\`.
   *
   * **Syntax**: \`auto | <'border-style'>\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  "-moz-outline-style"?: Property.OutlineStyle | undefined;
  /**
   * The CSS **\`outline-width\`** property sets the thickness of an element's outline. An outline is a line that is drawn around an element, outside the \`border\`.
   *
   * **Syntax**: \`<line-width>\`
   *
   * **Initial value**: \`medium\`
   *
   * @deprecated
   */
  "-moz-outline-width"?: Property.OutlineWidth<TLength> | undefined;
  /**
   * The **\`text-align-last\`** CSS property sets how the last line of a block or a line, right before a forced line break, is aligned.
   *
   * **Syntax**: \`auto | start | end | left | right | center | justify\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  "-moz-text-align-last"?: Property.TextAlignLast | undefined;
  /**
   * The **\`text-decoration-color\`** CSS property sets the color of decorations added to text by \`text-decoration-line\`.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`currentcolor\`
   *
   * @deprecated
   */
  "-moz-text-decoration-color"?: Property.TextDecorationColor | undefined;
  /**
   * The **\`text-decoration-line\`** CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline.
   *
   * **Syntax**: \`none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  "-moz-text-decoration-line"?: Property.TextDecorationLine | undefined;
  /**
   * The **\`text-decoration-style\`** CSS property sets the style of the lines specified by \`text-decoration-line\`. The style applies to all lines that are set with \`text-decoration-line\`.
   *
   * **Syntax**: \`solid | double | dotted | dashed | wavy\`
   *
   * **Initial value**: \`solid\`
   *
   * @deprecated
   */
  "-moz-text-decoration-style"?: Property.TextDecorationStyle | undefined;
  /**
   * In Mozilla applications, **\`-moz-user-input\`** determines if an element will accept user input.
   *
   * **Syntax**: \`auto | none | enabled | disabled\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  "-moz-user-input"?: Property.MozUserInput | undefined;
  /**
   * The **\`ime-mode\`** CSS property controls the state of the input method editor (IME) for text fields. This property is obsolete.
   *
   * **Syntax**: \`auto | normal | active | inactive | disabled\`
   *
   * **Initial value**: \`auto\`
   *
   * @deprecated
   */
  "-ms-ime-mode"?: Property.ImeMode | undefined;
  /**
   * The **\`-ms-scrollbar-track-color\`** CSS property is a Microsoft extension that specifies the color of the track element of a scrollbar.
   *
   * **Syntax**: \`<color>\`
   *
   * **Initial value**: \`Scrollbar\`
   *
   * @deprecated
   */
  "-ms-scrollbar-track-color"?: Property.MsScrollbarTrackColor | undefined;
  /**
   * The **\`animation\`** shorthand CSS property applies an animation between styles. It is a shorthand for \`animation-name\`, \`animation-duration\`, \`animation-timing-function\`, \`animation-delay\`, \`animation-iteration-count\`, \`animation-direction\`, \`animation-fill-mode\`, and \`animation-play-state\`.
   *
   * **Syntax**: \`<single-animation>#\`
   *
   * @deprecated
   */
  "-o-animation"?: Property.Animation<TTime> | undefined;
  /**
   * The **\`animation-delay\`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   *
   * @deprecated
   */
  "-o-animation-delay"?: Property.AnimationDelay<TTime> | undefined;
  /**
   * The **\`animation-direction\`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.
   *
   * **Syntax**: \`<single-animation-direction>#\`
   *
   * **Initial value**: \`normal\`
   *
   * @deprecated
   */
  "-o-animation-direction"?: Property.AnimationDirection | undefined;
  /**
   * The **\`animation-duration\`** CSS property sets the length of time that an animation takes to complete one cycle.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   *
   * @deprecated
   */
  "-o-animation-duration"?: Property.AnimationDuration<TTime> | undefined;
  /**
   * The **\`animation-fill-mode\`** CSS property sets how a CSS animation applies styles to its target before and after its execution.
   *
   * **Syntax**: \`<single-animation-fill-mode>#\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  "-o-animation-fill-mode"?: Property.AnimationFillMode | undefined;
  /**
   * The **\`animation-iteration-count\`** CSS property sets the number of times an animation sequence should be played before stopping.
   *
   * **Syntax**: \`<single-animation-iteration-count>#\`
   *
   * **Initial value**: \`1\`
   *
   * @deprecated
   */
  "-o-animation-iteration-count"?: Property.AnimationIterationCount | undefined;
  /**
   * The **\`animation-name\`** CSS property specifies the names of one or more \`@keyframes\` at-rules describing the animation or animations to apply to the element.
   *
   * **Syntax**: \`[ none | <keyframes-name> ]#\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  "-o-animation-name"?: Property.AnimationName | undefined;
  /**
   * The **\`animation-play-state\`** CSS property sets whether an animation is running or paused.
   *
   * **Syntax**: \`<single-animation-play-state>#\`
   *
   * **Initial value**: \`running\`
   *
   * @deprecated
   */
  "-o-animation-play-state"?: Property.AnimationPlayState | undefined;
  /**
   * The **\`animation-timing-function\`** CSS property sets how an animation progresses through the duration of each cycle.
   *
   * **Syntax**: \`<easing-function>#\`
   *
   * **Initial value**: \`ease\`
   *
   * @deprecated
   */
  "-o-animation-timing-function"?: Property.AnimationTimingFunction | undefined;
  /**
   * The **\`background-size\`** CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.
   *
   * **Syntax**: \`<bg-size>#\`
   *
   * **Initial value**: \`auto auto\`
   *
   * @deprecated
   */
  "-o-background-size"?: Property.BackgroundSize<TLength> | undefined;
  /**
   * The **\`border-image\`** CSS property draws an image around a given element. It replaces the element's regular border.
   *
   * **Syntax**: \`<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>\`
   *
   * @deprecated
   */
  "-o-border-image"?: Property.BorderImage | undefined;
  /**
   * The **\`object-fit\`** CSS property sets how the content of a replaced element, such as an \`<img>\` or \`<video>\`, should be resized to fit its container.
   *
   * **Syntax**: \`fill | contain | cover | none | scale-down\`
   *
   * **Initial value**: \`fill\`
   *
   * @deprecated
   */
  "-o-object-fit"?: Property.ObjectFit | undefined;
  /**
   * The **\`object-position\`** CSS property specifies the alignment of the selected replaced element's contents within the element's box. Areas of the box which aren't covered by the replaced element's object will show the element's background.
   *
   * **Syntax**: \`<position>\`
   *
   * **Initial value**: \`50% 50%\`
   *
   * @deprecated
   */
  "-o-object-position"?: Property.ObjectPosition<TLength> | undefined;
  /**
   * The **\`tab-size\`** CSS property is used to customize the width of tab characters (U+0009).
   *
   * **Syntax**: \`<integer> | <length>\`
   *
   * **Initial value**: \`8\`
   *
   * @deprecated
   */
  "-o-tab-size"?: Property.TabSize<TLength> | undefined;
  /**
   * The **\`text-overflow\`** CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis ('\`\u2026\`'), or display a custom string.
   *
   * **Syntax**: \`[ clip | ellipsis | <string> ]{1,2}\`
   *
   * **Initial value**: \`clip\`
   *
   * @deprecated
   */
  "-o-text-overflow"?: Property.TextOverflow | undefined;
  /**
   * The **\`transform\`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.
   *
   * **Syntax**: \`none | <transform-list>\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  "-o-transform"?: Property.Transform | undefined;
  /**
   * The **\`transform-origin\`** CSS property sets the origin for an element's transformations.
   *
   * **Syntax**: \`[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?\`
   *
   * **Initial value**: \`50% 50% 0\`
   *
   * @deprecated
   */
  "-o-transform-origin"?: Property.TransformOrigin<TLength> | undefined;
  /**
   * The **\`transition\`** CSS property is a shorthand property for \`transition-property\`, \`transition-duration\`, \`transition-timing-function\`, and \`transition-delay\`.
   *
   * **Syntax**: \`<single-transition>#\`
   *
   * @deprecated
   */
  "-o-transition"?: Property.Transition<TTime> | undefined;
  /**
   * The **\`transition-delay\`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   *
   * @deprecated
   */
  "-o-transition-delay"?: Property.TransitionDelay<TTime> | undefined;
  /**
   * The **\`transition-duration\`** CSS property sets the length of time a transition animation should take to complete. By default, the value is \`0s\`, meaning that no animation will occur.
   *
   * **Syntax**: \`<time>#\`
   *
   * **Initial value**: \`0s\`
   *
   * @deprecated
   */
  "-o-transition-duration"?: Property.TransitionDuration<TTime> | undefined;
  /**
   * The **\`transition-property\`** CSS property sets the CSS properties to which a transition effect should be applied.
   *
   * **Syntax**: \`none | <single-transition-property>#\`
   *
   * **Initial value**: all
   *
   * @deprecated
   */
  "-o-transition-property"?: Property.TransitionProperty | undefined;
  /**
   * The **\`transition-timing-function\`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.
   *
   * **Syntax**: \`<easing-function>#\`
   *
   * **Initial value**: \`ease\`
   *
   * @deprecated
   */
  "-o-transition-timing-function"?: Property.TransitionTimingFunction | undefined;
  /**
   * The **\`box-align\`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.
   *
   * **Syntax**: \`start | center | end | baseline | stretch\`
   *
   * **Initial value**: \`stretch\`
   *
   * @deprecated
   */
  "-webkit-box-align"?: Property.BoxAlign | undefined;
  /**
   * The **\`box-direction\`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).
   *
   * **Syntax**: \`normal | reverse | inherit\`
   *
   * **Initial value**: \`normal\`
   *
   * @deprecated
   */
  "-webkit-box-direction"?: Property.BoxDirection | undefined;
  /**
   * The **\`-moz-box-flex\`** and **\`-webkit-box-flex\`** CSS properties specify how a \`-moz-box\` or \`-webkit-box\` grows to fill the box that contains it, in the direction of the containing box's layout.
   *
   * **Syntax**: \`<number>\`
   *
   * **Initial value**: \`0\`
   *
   * @deprecated
   */
  "-webkit-box-flex"?: Property.BoxFlex | undefined;
  /**
   * The **\`box-flex-group\`** CSS property assigns the flexbox's child elements to a flex group.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`1\`
   *
   * @deprecated
   */
  "-webkit-box-flex-group"?: Property.BoxFlexGroup | undefined;
  /**
   * The **\`box-lines\`** CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).
   *
   * **Syntax**: \`single | multiple\`
   *
   * **Initial value**: \`single\`
   *
   * @deprecated
   */
  "-webkit-box-lines"?: Property.BoxLines | undefined;
  /**
   * The **\`box-ordinal-group\`** CSS property assigns the flexbox's child elements to an ordinal group.
   *
   * **Syntax**: \`<integer>\`
   *
   * **Initial value**: \`1\`
   *
   * @deprecated
   */
  "-webkit-box-ordinal-group"?: Property.BoxOrdinalGroup | undefined;
  /**
   * This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard. See flexbox for information about the current standard.
   *
   * **Syntax**: \`horizontal | vertical | inline-axis | block-axis | inherit\`
   *
   * **Initial value**: \`inline-axis\` (\`horizontal\` in XUL)
   *
   * @deprecated
   */
  "-webkit-box-orient"?: Property.BoxOrient | undefined;
  /**
   * The **\`-moz-box-pack\`** and **\`-webkit-box-pack\`** CSS properties specify how a \`-moz-box\` or \`-webkit-box\` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.
   *
   * **Syntax**: \`start | center | end | justify\`
   *
   * **Initial value**: \`start\`
   *
   * @deprecated
   */
  "-webkit-box-pack"?: Property.BoxPack | undefined;
  /**
   * The **\`scroll-snap-points-x\`** CSS property defines the horizontal positioning of snap points within the content of the scroll container they are applied to.
   *
   * **Syntax**: \`none | repeat( <length-percentage> )\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  "-webkit-scroll-snap-points-x"?: Property.ScrollSnapPointsX | undefined;
  /**
   * The **\`scroll-snap-points-y\`** CSS property defines the vertical positioning of snap points within the content of the scroll container they are applied to.
   *
   * **Syntax**: \`none | repeat( <length-percentage> )\`
   *
   * **Initial value**: \`none\`
   *
   * @deprecated
   */
  "-webkit-scroll-snap-points-y"?: Property.ScrollSnapPointsY | undefined;
}

export interface SvgPropertiesHyphen<TLength = (string & {}) | 0, TTime = string & {}> {
  "alignment-baseline"?: Property.AlignmentBaseline | undefined;
  "baseline-shift"?: Property.BaselineShift<TLength> | undefined;
  clip?: Property.Clip | undefined;
  "clip-path"?: Property.ClipPath | undefined;
  "clip-rule"?: Property.ClipRule | undefined;
  color?: Property.Color | undefined;
  "color-interpolation"?: Property.ColorInterpolation | undefined;
  "color-rendering"?: Property.ColorRendering | undefined;
  cursor?: Property.Cursor | undefined;
  direction?: Property.Direction | undefined;
  display?: Property.Display | undefined;
  "dominant-baseline"?: Property.DominantBaseline | undefined;
  fill?: Property.Fill | undefined;
  "fill-opacity"?: Property.FillOpacity | undefined;
  "fill-rule"?: Property.FillRule | undefined;
  filter?: Property.Filter | undefined;
  "flood-color"?: Property.FloodColor | undefined;
  "flood-opacity"?: Property.FloodOpacity | undefined;
  font?: Property.Font | undefined;
  "font-family"?: Property.FontFamily | undefined;
  "font-size"?: Property.FontSize<TLength> | undefined;
  "font-size-adjust"?: Property.FontSizeAdjust | undefined;
  "font-stretch"?: Property.FontStretch | undefined;
  "font-style"?: Property.FontStyle | undefined;
  "font-variant"?: Property.FontVariant | undefined;
  "font-weight"?: Property.FontWeight | undefined;
  "glyph-orientation-vertical"?: Property.GlyphOrientationVertical | undefined;
  "image-rendering"?: Property.ImageRendering | undefined;
  "letter-spacing"?: Property.LetterSpacing<TLength> | undefined;
  "lighting-color"?: Property.LightingColor | undefined;
  "line-height"?: Property.LineHeight<TLength> | undefined;
  marker?: Property.Marker | undefined;
  "marker-end"?: Property.MarkerEnd | undefined;
  "marker-mid"?: Property.MarkerMid | undefined;
  "marker-start"?: Property.MarkerStart | undefined;
  mask?: Property.Mask<TLength> | undefined;
  opacity?: Property.Opacity | undefined;
  overflow?: Property.Overflow | undefined;
  "paint-order"?: Property.PaintOrder | undefined;
  "pointer-events"?: Property.PointerEvents | undefined;
  "shape-rendering"?: Property.ShapeRendering | undefined;
  "stop-color"?: Property.StopColor | undefined;
  "stop-opacity"?: Property.StopOpacity | undefined;
  stroke?: Property.Stroke | undefined;
  "stroke-dasharray"?: Property.StrokeDasharray<TLength> | undefined;
  "stroke-dashoffset"?: Property.StrokeDashoffset<TLength> | undefined;
  "stroke-linecap"?: Property.StrokeLinecap | undefined;
  "stroke-linejoin"?: Property.StrokeLinejoin | undefined;
  "stroke-miterlimit"?: Property.StrokeMiterlimit | undefined;
  "stroke-opacity"?: Property.StrokeOpacity | undefined;
  "stroke-width"?: Property.StrokeWidth<TLength> | undefined;
  "text-anchor"?: Property.TextAnchor | undefined;
  "text-decoration"?: Property.TextDecoration<TLength> | undefined;
  "text-rendering"?: Property.TextRendering | undefined;
  "unicode-bidi"?: Property.UnicodeBidi | undefined;
  "vector-effect"?: Property.VectorEffect | undefined;
  visibility?: Property.Visibility | undefined;
  "white-space"?: Property.WhiteSpace | undefined;
  "word-spacing"?: Property.WordSpacing<TLength> | undefined;
  "writing-mode"?: Property.WritingMode | undefined;
}

export interface PropertiesHyphen<TLength = (string & {}) | 0, TTime = string & {}>
  extends StandardPropertiesHyphen<TLength, TTime>,
    VendorPropertiesHyphen<TLength, TTime>,
    ObsoletePropertiesHyphen<TLength, TTime>,
    SvgPropertiesHyphen<TLength, TTime> {}

export type StandardLonghandPropertiesFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<StandardLonghandProperties<TLength, TTime>>;

export type StandardShorthandPropertiesFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<StandardShorthandProperties<TLength, TTime>>;

export interface StandardPropertiesFallback<TLength = (string & {}) | 0, TTime = string & {}>
  extends StandardLonghandPropertiesFallback<TLength, TTime>,
    StandardShorthandPropertiesFallback<TLength, TTime> {}

export type VendorLonghandPropertiesFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<VendorLonghandProperties<TLength, TTime>>;

export type VendorShorthandPropertiesFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<VendorShorthandProperties<TLength, TTime>>;

export interface VendorPropertiesFallback<TLength = (string & {}) | 0, TTime = string & {}>
  extends VendorLonghandPropertiesFallback<TLength, TTime>,
    VendorShorthandPropertiesFallback<TLength, TTime> {}

export type ObsoletePropertiesFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<ObsoleteProperties<TLength, TTime>>;

export type SvgPropertiesFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<SvgProperties<TLength, TTime>>;

export interface PropertiesFallback<TLength = (string & {}) | 0, TTime = string & {}>
  extends StandardPropertiesFallback<TLength, TTime>,
    VendorPropertiesFallback<TLength, TTime>,
    ObsoletePropertiesFallback<TLength, TTime>,
    SvgPropertiesFallback<TLength, TTime> {}

export type StandardLonghandPropertiesHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<StandardLonghandPropertiesHyphen<TLength, TTime>>;

export type StandardShorthandPropertiesHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<StandardShorthandPropertiesHyphen<TLength, TTime>>;

export interface StandardPropertiesHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}>
  extends StandardLonghandPropertiesHyphenFallback<TLength, TTime>,
    StandardShorthandPropertiesHyphenFallback<TLength, TTime> {}

export type VendorLonghandPropertiesHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<VendorLonghandPropertiesHyphen<TLength, TTime>>;

export type VendorShorthandPropertiesHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<VendorShorthandPropertiesHyphen<TLength, TTime>>;

export interface VendorPropertiesHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}>
  extends VendorLonghandPropertiesHyphenFallback<TLength, TTime>,
    VendorShorthandPropertiesHyphenFallback<TLength, TTime> {}

export type ObsoletePropertiesHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<ObsoletePropertiesHyphen<TLength, TTime>>;

export type SvgPropertiesHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<SvgPropertiesHyphen<TLength, TTime>>;

export interface PropertiesHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}>
  extends StandardPropertiesHyphenFallback<TLength, TTime>,
    VendorPropertiesHyphenFallback<TLength, TTime>,
    ObsoletePropertiesHyphenFallback<TLength, TTime>,
    SvgPropertiesHyphenFallback<TLength, TTime> {}

export type AtRules =
  | "@charset"
  | "@counter-style"
  | "@document"
  | "@font-face"
  | "@font-feature-values"
  | "@import"
  | "@keyframes"
  | "@media"
  | "@namespace"
  | "@page"
  | "@property"
  | "@supports"
  | "@viewport";

export type AdvancedPseudos =
  | ":-moz-any()"
  | ":-moz-dir"
  | ":-webkit-any()"
  | "::cue"
  | "::cue-region"
  | "::part"
  | "::slotted"
  | ":dir"
  | ":has"
  | ":host"
  | ":host-context"
  | ":is"
  | ":lang"
  | ":matches()"
  | ":not"
  | ":nth-child"
  | ":nth-last-child"
  | ":nth-last-of-type"
  | ":nth-of-type"
  | ":where";

export type SimplePseudos =
  | ":-khtml-any-link"
  | ":-moz-any-link"
  | ":-moz-focusring"
  | ":-moz-full-screen"
  | ":-moz-placeholder"
  | ":-moz-read-only"
  | ":-moz-read-write"
  | ":-moz-ui-invalid"
  | ":-moz-ui-valid"
  | ":-ms-fullscreen"
  | ":-ms-input-placeholder"
  | ":-webkit-any-link"
  | ":-webkit-full-screen"
  | "::-moz-placeholder"
  | "::-moz-progress-bar"
  | "::-moz-range-progress"
  | "::-moz-range-thumb"
  | "::-moz-range-track"
  | "::-moz-selection"
  | "::-ms-backdrop"
  | "::-ms-browse"
  | "::-ms-check"
  | "::-ms-clear"
  | "::-ms-fill"
  | "::-ms-fill-lower"
  | "::-ms-fill-upper"
  | "::-ms-input-placeholder"
  | "::-ms-reveal"
  | "::-ms-thumb"
  | "::-ms-ticks-after"
  | "::-ms-ticks-before"
  | "::-ms-tooltip"
  | "::-ms-track"
  | "::-ms-value"
  | "::-webkit-backdrop"
  | "::-webkit-input-placeholder"
  | "::-webkit-progress-bar"
  | "::-webkit-progress-inner-value"
  | "::-webkit-progress-value"
  | "::-webkit-slider-runnable-track"
  | "::-webkit-slider-thumb"
  | "::after"
  | "::backdrop"
  | "::before"
  | "::cue"
  | "::cue-region"
  | "::first-letter"
  | "::first-line"
  | "::grammar-error"
  | "::marker"
  | "::placeholder"
  | "::selection"
  | "::spelling-error"
  | "::target-text"
  | ":active"
  | ":after"
  | ":any-link"
  | ":before"
  | ":blank"
  | ":checked"
  | ":current"
  | ":default"
  | ":defined"
  | ":disabled"
  | ":empty"
  | ":enabled"
  | ":first"
  | ":first-child"
  | ":first-letter"
  | ":first-line"
  | ":first-of-type"
  | ":focus"
  | ":focus-visible"
  | ":focus-within"
  | ":fullscreen"
  | ":future"
  | ":hover"
  | ":in-range"
  | ":indeterminate"
  | ":invalid"
  | ":last-child"
  | ":last-of-type"
  | ":left"
  | ":link"
  | ":local-link"
  | ":nth-col"
  | ":nth-last-col"
  | ":only-child"
  | ":only-of-type"
  | ":optional"
  | ":out-of-range"
  | ":past"
  | ":paused"
  | ":picture-in-picture"
  | ":placeholder-shown"
  | ":read-only"
  | ":read-write"
  | ":required"
  | ":right"
  | ":root"
  | ":scope"
  | ":target"
  | ":target-within"
  | ":user-invalid"
  | ":user-valid"
  | ":valid"
  | ":visited";

export type Pseudos = AdvancedPseudos | SimplePseudos;

export type HtmlAttributes =
  | "[abbr]"
  | "[accept-charset]"
  | "[accept]"
  | "[accesskey]"
  | "[action]"
  | "[align]"
  | "[alink]"
  | "[allow]"
  | "[allowfullscreen]"
  | "[allowpaymentrequest]"
  | "[alt]"
  | "[archive]"
  | "[async]"
  | "[autobuffer]"
  | "[autocapitalize]"
  | "[autocomplete]"
  | "[autofocus]"
  | "[autoplay]"
  | "[axis]"
  | "[background]"
  | "[behavior]"
  | "[bgcolor]"
  | "[border]"
  | "[bottommargin]"
  | "[buffered]"
  | "[cellpadding]"
  | "[cellspacing]"
  | "[char]"
  | "[charoff]"
  | "[charset]"
  | "[checked]"
  | "[cite]"
  | "[class]"
  | "[classid]"
  | "[clear]"
  | "[code]"
  | "[codebase]"
  | "[codetype]"
  | "[color]"
  | "[cols]"
  | "[colspan]"
  | "[command]"
  | "[compact]"
  | "[content]"
  | "[contenteditable]"
  | "[contextmenu]"
  | "[controls]"
  | "[coords]"
  | "[crossorigin]"
  | "[data]"
  | "[datafld]"
  | "[datasrc]"
  | "[datetime]"
  | "[declare]"
  | "[decoding]"
  | "[default]"
  | "[defer]"
  | "[dir]"
  | "[direction]"
  | "[dirname]"
  | "[disabled]"
  | "[download]"
  | "[draggable]"
  | "[enctype]"
  | "[enterkeyhint]"
  | "[exportparts]"
  | "[face]"
  | "[for]"
  | "[form]"
  | "[formaction]"
  | "[formenctype]"
  | "[formmethod]"
  | "[formnovalidate]"
  | "[formtarget]"
  | "[frame]"
  | "[frameborder]"
  | "[headers]"
  | "[height]"
  | "[hidden]"
  | "[high]"
  | "[href]"
  | "[hreflang]"
  | "[hspace]"
  | "[http-equiv]"
  | "[icon]"
  | "[id]"
  | "[imagesizes]"
  | "[imagesrcset]"
  | "[inputmode]"
  | "[integrity]"
  | "[intrinsicsize]"
  | "[is]"
  | "[ismap]"
  | "[itemid]"
  | "[itemprop]"
  | "[itemref]"
  | "[itemscope]"
  | "[itemtype]"
  | "[kind]"
  | "[label]"
  | "[lang]"
  | "[language]"
  | "[leftmargin]"
  | "[link]"
  | "[loading]"
  | "[longdesc]"
  | "[loop]"
  | "[low]"
  | "[manifest]"
  | "[marginheight]"
  | "[marginwidth]"
  | "[max]"
  | "[maxlength]"
  | "[mayscript]"
  | "[media]"
  | "[method]"
  | "[methods]"
  | "[min]"
  | "[minlength]"
  | "[moz-opaque]"
  | "[mozallowfullscreen]"
  | "[mozcurrentsampleoffset]"
  | "[msallowfullscreen]"
  | "[multiple]"
  | "[muted]"
  | "[name]"
  | "[nohref]"
  | "[nomodule]"
  | "[nonce]"
  | "[noresize]"
  | "[noshade]"
  | "[novalidate]"
  | "[nowrap]"
  | "[object]"
  | "[onafterprint]"
  | "[onbeforeprint]"
  | "[onbeforeunload]"
  | "[onblur]"
  | "[onerror]"
  | "[onfocus]"
  | "[onhashchange]"
  | "[onlanguagechange]"
  | "[onload]"
  | "[onmessage]"
  | "[onoffline]"
  | "[ononline]"
  | "[onpopstate]"
  | "[onredo]"
  | "[onresize]"
  | "[onstorage]"
  | "[onundo]"
  | "[onunload]"
  | "[open]"
  | "[optimum]"
  | "[part]"
  | "[ping]"
  | "[placeholder]"
  | "[played]"
  | "[poster]"
  | "[prefetch]"
  | "[preload]"
  | "[profile]"
  | "[radiogroup]"
  | "[readonly]"
  | "[referrerpolicy]"
  | "[rel]"
  | "[required]"
  | "[rev]"
  | "[reversed]"
  | "[rightmargin]"
  | "[rows]"
  | "[rowspan]"
  | "[rules]"
  | "[sandbox-allow-downloads]"
  | "[sandbox-allow-modals]"
  | "[sandbox-allow-popups-to-escape-sandbox]"
  | "[sandbox-allow-popups]"
  | "[sandbox-allow-presentation]"
  | "[sandbox-allow-same-origin]"
  | "[sandbox-allow-storage-access-by-user-activation]"
  | "[sandbox-allow-top-navigation-by-user-activation]"
  | "[sandbox]"
  | "[scope]"
  | "[scoped]"
  | "[scrollamount]"
  | "[scrolldelay]"
  | "[scrolling]"
  | "[selected]"
  | "[shape]"
  | "[size]"
  | "[sizes]"
  | "[slot]"
  | "[span]"
  | "[spellcheck]"
  | "[src]"
  | "[srcdoc]"
  | "[srclang]"
  | "[srcset]"
  | "[standby]"
  | "[start]"
  | "[style]"
  | "[summary]"
  | "[tabindex]"
  | "[target]"
  | "[text]"
  | "[title]"
  | "[topmargin]"
  | "[translate]"
  | "[truespeed]"
  | "[type]"
  | "[usemap]"
  | "[valign]"
  | "[value]"
  | "[valuetype]"
  | "[version]"
  | "[vlink]"
  | "[volume]"
  | "[vspace]"
  | "[webkitallowfullscreen]"
  | "[width]"
  | "[wrap]"
  | "[xmlns]";

export type SvgAttributes =
  | "[accent-height]"
  | "[alignment-baseline]"
  | "[allowReorder]"
  | "[alphabetic]"
  | "[animation]"
  | "[arabic-form]"
  | "[ascent]"
  | "[attributeName]"
  | "[attributeType]"
  | "[azimuth]"
  | "[baseFrequency]"
  | "[baseProfile]"
  | "[baseline-shift]"
  | "[bbox]"
  | "[bias]"
  | "[by]"
  | "[calcMode]"
  | "[cap-height]"
  | "[class]"
  | "[clip-path]"
  | "[clip-rule]"
  | "[clipPathUnits]"
  | "[clip]"
  | "[color-interpolation-filters]"
  | "[color-interpolation]"
  | "[color-profile]"
  | "[color-rendering]"
  | "[color]"
  | "[contentScriptType]"
  | "[contentStyleType]"
  | "[cursor]"
  | "[cx]"
  | "[cy]"
  | "[d]"
  | "[descent]"
  | "[diffuseConstant]"
  | "[direction]"
  | "[display]"
  | "[divisor]"
  | "[document]"
  | "[dominant-baseline]"
  | "[download]"
  | "[dur]"
  | "[dx]"
  | "[dy]"
  | "[edgeMode]"
  | "[elevation]"
  | "[enable-background]"
  | "[fill-opacity]"
  | "[fill-rule]"
  | "[fill]"
  | "[filterRes]"
  | "[filterUnits]"
  | "[filter]"
  | "[flood-color]"
  | "[flood-opacity]"
  | "[font-family]"
  | "[font-size-adjust]"
  | "[font-size]"
  | "[font-stretch]"
  | "[font-style]"
  | "[font-variant]"
  | "[font-weight]"
  | "[format]"
  | "[fr]"
  | "[from]"
  | "[fx]"
  | "[fy]"
  | "[g1]"
  | "[g2]"
  | "[global]"
  | "[glyph-name]"
  | "[glyph-orientation-horizontal]"
  | "[glyph-orientation-vertical]"
  | "[glyphRef]"
  | "[gradientTransform]"
  | "[gradientUnits]"
  | "[graphical]"
  | "[hanging]"
  | "[hatchContentUnits]"
  | "[hatchUnits]"
  | "[height]"
  | "[horiz-adv-x]"
  | "[horiz-origin-x]"
  | "[horiz-origin-y]"
  | "[href]"
  | "[hreflang]"
  | "[id]"
  | "[ideographic]"
  | "[image-rendering]"
  | "[in2]"
  | "[in]"
  | "[k1]"
  | "[k2]"
  | "[k3]"
  | "[k4]"
  | "[k]"
  | "[kernelMatrix]"
  | "[kernelUnitLength]"
  | "[kerning]"
  | "[keyPoints]"
  | "[lang]"
  | "[lengthAdjust]"
  | "[letter-spacing]"
  | "[lighting-color]"
  | "[limitingConeAngle]"
  | "[marker-end]"
  | "[marker-mid]"
  | "[marker-start]"
  | "[markerHeight]"
  | "[markerUnits]"
  | "[markerWidth]"
  | "[maskContentUnits]"
  | "[maskUnits]"
  | "[mask]"
  | "[mathematical]"
  | "[media]"
  | "[mode]"
  | "[name]"
  | "[numOctaves]"
  | "[offset]"
  | "[opacity]"
  | "[operator]"
  | "[order]"
  | "[orient]"
  | "[orientation]"
  | "[origin]"
  | "[overflow]"
  | "[overline-position]"
  | "[overline-thickness]"
  | "[paint-order]"
  | "[panose-1]"
  | "[path]"
  | "[patternContentUnits]"
  | "[patternTransform]"
  | "[patternUnits]"
  | "[ping]"
  | "[pitch]"
  | "[pointer-events]"
  | "[pointsAtX]"
  | "[pointsAtY]"
  | "[pointsAtZ]"
  | "[points]"
  | "[preserveAlpha]"
  | "[preserveAspectRatio]"
  | "[primitiveUnits]"
  | "[r]"
  | "[radius]"
  | "[refX]"
  | "[refY]"
  | "[referrerpolicy]"
  | "[rel]"
  | "[repeatCount]"
  | "[requiredExtensions]"
  | "[requiredFeatures]"
  | "[rotate]"
  | "[rx]"
  | "[ry]"
  | "[scale]"
  | "[seed]"
  | "[shape-rendering]"
  | "[side]"
  | "[slope]"
  | "[solid-color]"
  | "[solid-opacity]"
  | "[spacing]"
  | "[specularConstant]"
  | "[specularExponent]"
  | "[spreadMethod]"
  | "[startOffset]"
  | "[stdDeviation]"
  | "[stemh]"
  | "[stemv]"
  | "[stitchTiles]"
  | "[stop-color]"
  | "[stop-opacity]"
  | "[strikethrough-position]"
  | "[strikethrough-thickness]"
  | "[string]"
  | "[stroke-dasharray]"
  | "[stroke-dashoffset]"
  | "[stroke-linecap]"
  | "[stroke-linejoin]"
  | "[stroke-miterlimit]"
  | "[stroke-opacity]"
  | "[stroke-width]"
  | "[stroke]"
  | "[style]"
  | "[surfaceScale]"
  | "[systemLanguage]"
  | "[tabindex]"
  | "[targetX]"
  | "[targetY]"
  | "[target]"
  | "[text-anchor]"
  | "[text-decoration]"
  | "[text-overflow]"
  | "[text-rendering]"
  | "[textLength]"
  | "[title]"
  | "[to]"
  | "[transform-origin]"
  | "[transform]"
  | "[type]"
  | "[u1]"
  | "[u2]"
  | "[underline-position]"
  | "[underline-thickness]"
  | "[unicode-bidi]"
  | "[unicode-range]"
  | "[unicode]"
  | "[units-per-em]"
  | "[v-alphabetic]"
  | "[v-hanging]"
  | "[v-ideographic]"
  | "[v-mathematical]"
  | "[values]"
  | "[vector-effect]"
  | "[version]"
  | "[vert-adv-y]"
  | "[vert-origin-x]"
  | "[vert-origin-y]"
  | "[viewBox]"
  | "[viewTarget]"
  | "[visibility]"
  | "[white-space]"
  | "[width]"
  | "[widths]"
  | "[word-spacing]"
  | "[writing-mode]"
  | "[x-height]"
  | "[x1]"
  | "[x2]"
  | "[xChannelSelector]"
  | "[x]"
  | "[y1]"
  | "[y2]"
  | "[yChannelSelector]"
  | "[y]"
  | "[z]"
  | "[zoomAndPan]";

export type Globals = "-moz-initial" | "inherit" | "initial" | "revert" | "unset";

export namespace Property {
  export type AccentColor = Globals | DataType.Color | "auto";

  export type AlignContent = Globals | DataType.ContentDistribution | DataType.ContentPosition | "baseline" | "normal" | (string & {});

  export type AlignItems = Globals | DataType.SelfPosition | "baseline" | "normal" | "stretch" | (string & {});

  export type AlignSelf = Globals | DataType.SelfPosition | "auto" | "baseline" | "normal" | "stretch" | (string & {});

  export type AlignTracks = Globals | DataType.ContentDistribution | DataType.ContentPosition | "baseline" | "normal" | (string & {});

  export type All = Globals;

  export type Animation<TTime = string & {}> = Globals | DataType.SingleAnimation<TTime> | (string & {});

  export type AnimationDelay<TTime = string & {}> = Globals | TTime | (string & {});

  export type AnimationDirection = Globals | DataType.SingleAnimationDirection | (string & {});

  export type AnimationDuration<TTime = string & {}> = Globals | TTime | (string & {});

  export type AnimationFillMode = Globals | DataType.SingleAnimationFillMode | (string & {});

  export type AnimationIterationCount = Globals | "infinite" | (string & {}) | (number & {});

  export type AnimationName = Globals | "none" | (string & {});

  export type AnimationPlayState = Globals | "paused" | "running" | (string & {});

  export type AnimationTimingFunction = Globals | DataType.EasingFunction | (string & {});

  export type Appearance = Globals | DataType.CompatAuto | "auto" | "menulist-button" | "none" | "textfield";

  export type AspectRatio = Globals | "auto" | (string & {});

  export type Azimuth =
    | Globals
    | "behind"
    | "center"
    | "center-left"
    | "center-right"
    | "far-left"
    | "far-right"
    | "left"
    | "left-side"
    | "leftwards"
    | "right"
    | "right-side"
    | "rightwards"
    | (string & {});

  export type BackdropFilter = Globals | "none" | (string & {});

  export type BackfaceVisibility = Globals | "hidden" | "visible";

  export type Background<TLength = (string & {}) | 0> = Globals | DataType.FinalBgLayer<TLength> | (string & {});

  export type BackgroundAttachment = Globals | DataType.Attachment | (string & {});

  export type BackgroundBlendMode = Globals | DataType.BlendMode | (string & {});

  export type BackgroundClip = Globals | DataType.Box | (string & {});

  export type BackgroundColor = Globals | DataType.Color;

  export type BackgroundImage = Globals | "none" | (string & {});

  export type BackgroundOrigin = Globals | DataType.Box | (string & {});

  export type BackgroundPosition<TLength = (string & {}) | 0> = Globals | DataType.BgPosition<TLength> | (string & {});

  export type BackgroundPositionX<TLength = (string & {}) | 0> = Globals | TLength | "center" | "left" | "right" | "x-end" | "x-start" | (string & {});

  export type BackgroundPositionY<TLength = (string & {}) | 0> = Globals | TLength | "bottom" | "center" | "top" | "y-end" | "y-start" | (string & {});

  export type BackgroundRepeat = Globals | DataType.RepeatStyle | (string & {});

  export type BackgroundSize<TLength = (string & {}) | 0> = Globals | DataType.BgSize<TLength> | (string & {});

  export type BlockOverflow = Globals | "clip" | "ellipsis" | (string & {});

  export type BlockSize<TLength = (string & {}) | 0> =
    | Globals
    | TLength
    | "-moz-fit-content"
    | "-moz-max-content"
    | "-moz-min-content"
    | "-webkit-fill-available"
    | "auto"
    | "fit-content"
    | "max-content"
    | "min-content"
    | (string & {});

  export type Border<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});

  export type BorderBlock<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});

  export type BorderBlockColor = Globals | DataType.Color | (string & {});

  export type BorderBlockEnd<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});

  export type BorderBlockEndColor = Globals | DataType.Color;

  export type BorderBlockEndStyle = Globals | DataType.LineStyle;

  export type BorderBlockEndWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;

  export type BorderBlockStart<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});

  export type BorderBlockStartColor = Globals | DataType.Color;

  export type BorderBlockStartStyle = Globals | DataType.LineStyle;

  export type BorderBlockStartWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;

  export type BorderBlockStyle = Globals | DataType.LineStyle;

  export type BorderBlockWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;

  export type BorderBottom<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});

  export type BorderBottomColor = Globals | DataType.Color;

  export type BorderBottomLeftRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type BorderBottomRightRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type BorderBottomStyle = Globals | DataType.LineStyle;

  export type BorderBottomWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;

  export type BorderCollapse = Globals | "collapse" | "separate";

  export type BorderColor = Globals | DataType.Color | (string & {});

  export type BorderEndEndRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type BorderEndStartRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type BorderImage = Globals | "none" | "repeat" | "round" | "space" | "stretch" | (string & {}) | (number & {});

  export type BorderImageOutset<TLength = (string & {}) | 0> = Globals | TLength | (string & {}) | (number & {});

  export type BorderImageRepeat = Globals | "repeat" | "round" | "space" | "stretch" | (string & {});

  export type BorderImageSlice = Globals | (string & {}) | (number & {});

  export type BorderImageSource = Globals | "none" | (string & {});

  export type BorderImageWidth<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {}) | (number & {});

  export type BorderInline<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});

  export type BorderInlineColor = Globals | DataType.Color | (string & {});

  export type BorderInlineEnd<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});

  export type BorderInlineEndColor = Globals | DataType.Color;

  export type BorderInlineEndStyle = Globals | DataType.LineStyle;

  export type BorderInlineEndWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;

  export type BorderInlineStart<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});

  export type BorderInlineStartColor = Globals | DataType.Color;

  export type BorderInlineStartStyle = Globals | DataType.LineStyle;

  export type BorderInlineStartWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;

  export type BorderInlineStyle = Globals | DataType.LineStyle;

  export type BorderInlineWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;

  export type BorderLeft<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});

  export type BorderLeftColor = Globals | DataType.Color;

  export type BorderLeftStyle = Globals | DataType.LineStyle;

  export type BorderLeftWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;

  export type BorderRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type BorderRight<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});

  export type BorderRightColor = Globals | DataType.Color;

  export type BorderRightStyle = Globals | DataType.LineStyle;

  export type BorderRightWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;

  export type BorderSpacing<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type BorderStartEndRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type BorderStartStartRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type BorderStyle = Globals | DataType.LineStyle | (string & {});

  export type BorderTop<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});

  export type BorderTopColor = Globals | DataType.Color;

  export type BorderTopLeftRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type BorderTopRightRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type BorderTopStyle = Globals | DataType.LineStyle;

  export type BorderTopWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;

  export type BorderWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | (string & {});

  export type Bottom<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type BoxAlign = Globals | "baseline" | "center" | "end" | "start" | "stretch";

  export type BoxDecorationBreak = Globals | "clone" | "slice";

  export type BoxDirection = Globals | "inherit" | "normal" | "reverse";

  export type BoxFlex = Globals | (number & {}) | (string & {});

  export type BoxFlexGroup = Globals | (number & {}) | (string & {});

  export type BoxLines = Globals | "multiple" | "single";

  export type BoxOrdinalGroup = Globals | (number & {}) | (string & {});

  export type BoxOrient = Globals | "block-axis" | "horizontal" | "inherit" | "inline-axis" | "vertical";

  export type BoxPack = Globals | "center" | "end" | "justify" | "start";

  export type BoxShadow = Globals | "none" | (string & {});

  export type BoxSizing = Globals | "border-box" | "content-box";

  export type BreakAfter =
    | Globals
    | "all"
    | "always"
    | "auto"
    | "avoid"
    | "avoid-column"
    | "avoid-page"
    | "avoid-region"
    | "column"
    | "left"
    | "page"
    | "recto"
    | "region"
    | "right"
    | "verso";

  export type BreakBefore =
    | Globals
    | "all"
    | "always"
    | "auto"
    | "avoid"
    | "avoid-column"
    | "avoid-page"
    | "avoid-region"
    | "column"
    | "left"
    | "page"
    | "recto"
    | "region"
    | "right"
    | "verso";

  export type BreakInside = Globals | "auto" | "avoid" | "avoid-column" | "avoid-page" | "avoid-region";

  export type CaptionSide = Globals | "block-end" | "block-start" | "bottom" | "inline-end" | "inline-start" | "top";

  export type CaretColor = Globals | DataType.Color | "auto";

  export type Clear = Globals | "both" | "inline-end" | "inline-start" | "left" | "none" | "right";

  export type Clip = Globals | "auto" | (string & {});

  export type ClipPath = Globals | DataType.GeometryBox | "none" | (string & {});

  export type Color = Globals | DataType.Color;

  export type ColorAdjust = Globals | "economy" | "exact";

  export type ColorScheme = Globals | "dark" | "light" | "normal" | (string & {});

  export type ColumnCount = Globals | "auto" | (number & {}) | (string & {});

  export type ColumnFill = Globals | "auto" | "balance" | "balance-all";

  export type ColumnGap<TLength = (string & {}) | 0> = Globals | TLength | "normal" | (string & {});

  export type ColumnRule<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});

  export type ColumnRuleColor = Globals | DataType.Color;

  export type ColumnRuleStyle = Globals | DataType.LineStyle | (string & {});

  export type ColumnRuleWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | (string & {});

  export type ColumnSpan = Globals | "all" | "none";

  export type ColumnWidth<TLength = (string & {}) | 0> = Globals | TLength | "auto";

  export type Columns<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {}) | (number & {});

  export type Contain = Globals | "content" | "layout" | "none" | "paint" | "size" | "strict" | "style" | (string & {});

  export type Content = Globals | DataType.ContentList | "none" | "normal" | (string & {});

  export type ContentVisibility = Globals | "auto" | "hidden" | "visible";

  export type CounterIncrement = Globals | "none" | (string & {});

  export type CounterReset = Globals | "none" | (string & {});

  export type CounterSet = Globals | "none" | (string & {});

  export type Cursor =
    | Globals
    | "-moz-grab"
    | "-webkit-grab"
    | "alias"
    | "all-scroll"
    | "auto"
    | "cell"
    | "col-resize"
    | "context-menu"
    | "copy"
    | "crosshair"
    | "default"
    | "e-resize"
    | "ew-resize"
    | "grab"
    | "grabbing"
    | "help"
    | "move"
    | "n-resize"
    | "ne-resize"
    | "nesw-resize"
    | "no-drop"
    | "none"
    | "not-allowed"
    | "ns-resize"
    | "nw-resize"
    | "nwse-resize"
    | "pointer"
    | "progress"
    | "row-resize"
    | "s-resize"
    | "se-resize"
    | "sw-resize"
    | "text"
    | "vertical-text"
    | "w-resize"
    | "wait"
    | "zoom-in"
    | "zoom-out"
    | (string & {});

  export type Direction = Globals | "ltr" | "rtl";

  export type Display =
    | Globals
    | DataType.DisplayOutside
    | DataType.DisplayInside
    | DataType.DisplayInternal
    | DataType.DisplayLegacy
    | "contents"
    | "list-item"
    | "none"
    | (string & {});

  export type EmptyCells = Globals | "hide" | "show";

  export type Filter = Globals | "none" | (string & {});

  export type Flex<TLength = (string & {}) | 0> = Globals | TLength | "auto" | "content" | "fit-content" | "max-content" | "min-content" | "none" | (string & {}) | (number & {});

  export type FlexBasis<TLength = (string & {}) | 0> =
    | Globals
    | TLength
    | "-moz-max-content"
    | "-moz-min-content"
    | "-webkit-auto"
    | "auto"
    | "content"
    | "fit-content"
    | "max-content"
    | "min-content"
    | (string & {});

  export type FlexDirection = Globals | "column" | "column-reverse" | "row" | "row-reverse";

  export type FlexFlow = Globals | "column" | "column-reverse" | "nowrap" | "row" | "row-reverse" | "wrap" | "wrap-reverse" | (string & {});

  export type FlexGrow = Globals | (number & {}) | (string & {});

  export type FlexShrink = Globals | (number & {}) | (string & {});

  export type FlexWrap = Globals | "nowrap" | "wrap" | "wrap-reverse";

  export type Float = Globals | "inline-end" | "inline-start" | "left" | "none" | "right";

  export type Font = Globals | "caption" | "icon" | "menu" | "message-box" | "small-caption" | "status-bar" | (string & {});

  export type FontFamily = Globals | DataType.GenericFamily | (string & {});

  export type FontFeatureSettings = Globals | "normal" | (string & {});

  export type FontKerning = Globals | "auto" | "none" | "normal";

  export type FontLanguageOverride = Globals | "normal" | (string & {});

  export type FontOpticalSizing = Globals | "auto" | "none";

  export type FontSize<TLength = (string & {}) | 0> = Globals | DataType.AbsoluteSize | TLength | "larger" | "smaller" | (string & {});

  export type FontSizeAdjust = Globals | "from-font" | "none" | (string & {}) | (number & {});

  export type FontSmooth<TLength = (string & {}) | 0> = Globals | DataType.AbsoluteSize | TLength | "always" | "auto" | "never";

  export type FontStretch = Globals | DataType.FontStretchAbsolute;

  export type FontStyle = Globals | "italic" | "normal" | "oblique" | (string & {});

  export type FontSynthesis = Globals | "none" | "small-caps" | "style" | "weight" | (string & {});

  export type FontVariant =
    | Globals
    | DataType.EastAsianVariantValues
    | "all-petite-caps"
    | "all-small-caps"
    | "common-ligatures"
    | "contextual"
    | "diagonal-fractions"
    | "discretionary-ligatures"
    | "full-width"
    | "historical-forms"
    | "historical-ligatures"
    | "lining-nums"
    | "no-common-ligatures"
    | "no-contextual"
    | "no-discretionary-ligatures"
    | "no-historical-ligatures"
    | "none"
    | "normal"
    | "oldstyle-nums"
    | "ordinal"
    | "petite-caps"
    | "proportional-nums"
    | "proportional-width"
    | "ruby"
    | "slashed-zero"
    | "small-caps"
    | "stacked-fractions"
    | "tabular-nums"
    | "titling-caps"
    | "unicase"
    | (string & {});

  export type FontVariantAlternates = Globals | "historical-forms" | "normal" | (string & {});

  export type FontVariantCaps = Globals | "all-petite-caps" | "all-small-caps" | "normal" | "petite-caps" | "small-caps" | "titling-caps" | "unicase";

  export type FontVariantEastAsian = Globals | DataType.EastAsianVariantValues | "full-width" | "normal" | "proportional-width" | "ruby" | (string & {});

  export type FontVariantLigatures =
    | Globals
    | "common-ligatures"
    | "contextual"
    | "discretionary-ligatures"
    | "historical-ligatures"
    | "no-common-ligatures"
    | "no-contextual"
    | "no-discretionary-ligatures"
    | "no-historical-ligatures"
    | "none"
    | "normal"
    | (string & {});

  export type FontVariantNumeric =
    | Globals
    | "diagonal-fractions"
    | "lining-nums"
    | "normal"
    | "oldstyle-nums"
    | "ordinal"
    | "proportional-nums"
    | "slashed-zero"
    | "stacked-fractions"
    | "tabular-nums"
    | (string & {});

  export type FontVariantPosition = Globals | "normal" | "sub" | "super";

  export type FontVariationSettings = Globals | "normal" | (string & {});

  export type FontWeight = Globals | DataType.FontWeightAbsolute | "bolder" | "lighter";

  export type ForcedColorAdjust = Globals | "auto" | "none";

  export type Gap<TLength = (string & {}) | 0> = Globals | TLength | "normal" | (string & {});

  export type Grid = Globals | "none" | (string & {});

  export type GridArea = Globals | DataType.GridLine | (string & {});

  export type GridAutoColumns<TLength = (string & {}) | 0> = Globals | DataType.TrackBreadth<TLength> | (string & {});

  export type GridAutoFlow = Globals | "column" | "dense" | "row" | (string & {});

  export type GridAutoRows<TLength = (string & {}) | 0> = Globals | DataType.TrackBreadth<TLength> | (string & {});

  export type GridColumn = Globals | DataType.GridLine | (string & {});

  export type GridColumnEnd = Globals | DataType.GridLine;

  export type GridColumnGap<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type GridColumnStart = Globals | DataType.GridLine;

  export type GridGap<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type GridRow = Globals | DataType.GridLine | (string & {});

  export type GridRowEnd = Globals | DataType.GridLine;

  export type GridRowGap<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type GridRowStart = Globals | DataType.GridLine;

  export type GridTemplate = Globals | "none" | (string & {});

  export type GridTemplateAreas = Globals | "none" | (string & {});

  export type GridTemplateColumns<TLength = (string & {}) | 0> = Globals | DataType.TrackBreadth<TLength> | "none" | "subgrid" | (string & {});

  export type GridTemplateRows<TLength = (string & {}) | 0> = Globals | DataType.TrackBreadth<TLength> | "none" | "subgrid" | (string & {});

  export type HangingPunctuation = Globals | "allow-end" | "first" | "force-end" | "last" | "none" | (string & {});

  export type Height<TLength = (string & {}) | 0> =
    | Globals
    | TLength
    | "-moz-max-content"
    | "-moz-min-content"
    | "-webkit-fit-content"
    | "auto"
    | "fit-content"
    | "max-content"
    | "min-content"
    | (string & {});

  export type Hyphens = Globals | "auto" | "manual" | "none";

  export type ImageOrientation = Globals | "flip" | "from-image" | (string & {});

  export type ImageRendering = Globals | "-moz-crisp-edges" | "-webkit-optimize-contrast" | "auto" | "crisp-edges" | "pixelated";

  export type ImageResolution = Globals | "from-image" | (string & {});

  export type ImeMode = Globals | "active" | "auto" | "disabled" | "inactive" | "normal";

  export type InitialLetter = Globals | "normal" | (string & {}) | (number & {});

  export type InlineSize<TLength = (string & {}) | 0> =
    | Globals
    | TLength
    | "-moz-fit-content"
    | "-moz-max-content"
    | "-moz-min-content"
    | "-webkit-fill-available"
    | "auto"
    | "fit-content"
    | "max-content"
    | "min-content"
    | (string & {});

  export type Inset<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type InsetBlock<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type InsetBlockEnd<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type InsetBlockStart<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type InsetInline<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type InsetInlineEnd<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type InsetInlineStart<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type Isolation = Globals | "auto" | "isolate";

  export type JustifyContent = Globals | DataType.ContentDistribution | DataType.ContentPosition | "left" | "normal" | "right" | (string & {});

  export type JustifyItems = Globals | DataType.SelfPosition | "baseline" | "left" | "legacy" | "normal" | "right" | "stretch" | (string & {});

  export type JustifySelf = Globals | DataType.SelfPosition | "auto" | "baseline" | "left" | "normal" | "right" | "stretch" | (string & {});

  export type JustifyTracks = Globals | DataType.ContentDistribution | DataType.ContentPosition | "left" | "normal" | "right" | (string & {});

  export type Left<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type LetterSpacing<TLength = (string & {}) | 0> = Globals | TLength | "normal";

  export type LineBreak = Globals | "anywhere" | "auto" | "loose" | "normal" | "strict";

  export type LineClamp = Globals | "none" | (number & {}) | (string & {});

  export type LineHeight<TLength = (string & {}) | 0> = Globals | TLength | "normal" | (string & {}) | (number & {});

  export type LineHeightStep<TLength = (string & {}) | 0> = Globals | TLength;

  export type ListStyle = Globals | "inside" | "none" | "outside" | (string & {});

  export type ListStyleImage = Globals | "none" | (string & {});

  export type ListStylePosition = Globals | "inside" | "outside";

  export type ListStyleType = Globals | "none" | (string & {});

  export type Margin<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type MarginBlock<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type MarginBlockEnd<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type MarginBlockStart<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type MarginBottom<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type MarginInline<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type MarginInlineEnd<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type MarginInlineStart<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type MarginLeft<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type MarginRight<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type MarginTop<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type Mask<TLength = (string & {}) | 0> = Globals | DataType.MaskLayer<TLength> | (string & {});

  export type MaskBorder = Globals | "alpha" | "luminance" | "none" | "repeat" | "round" | "space" | "stretch" | (string & {}) | (number & {});

  export type MaskBorderMode = Globals | "alpha" | "luminance";

  export type MaskBorderOutset<TLength = (string & {}) | 0> = Globals | TLength | (string & {}) | (number & {});

  export type MaskBorderRepeat = Globals | "repeat" | "round" | "space" | "stretch" | (string & {});

  export type MaskBorderSlice = Globals | (string & {}) | (number & {});

  export type MaskBorderSource = Globals | "none" | (string & {});

  export type MaskBorderWidth<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {}) | (number & {});

  export type MaskClip = Globals | DataType.GeometryBox | "no-clip" | (string & {});

  export type MaskComposite = Globals | DataType.CompositingOperator | (string & {});

  export type MaskImage = Globals | "none" | (string & {});

  export type MaskMode = Globals | DataType.MaskingMode | (string & {});

  export type MaskOrigin = Globals | DataType.GeometryBox | (string & {});

  export type MaskPosition<TLength = (string & {}) | 0> = Globals | DataType.Position<TLength> | (string & {});

  export type MaskRepeat = Globals | DataType.RepeatStyle | (string & {});

  export type MaskSize<TLength = (string & {}) | 0> = Globals | DataType.BgSize<TLength> | (string & {});

  export type MaskType = Globals | "alpha" | "luminance";

  export type MathStyle = Globals | "compact" | "normal";

  export type MaxBlockSize<TLength = (string & {}) | 0> =
    | Globals
    | TLength
    | "-moz-max-content"
    | "-moz-min-content"
    | "-webkit-fill-available"
    | "fit-content"
    | "max-content"
    | "min-content"
    | "none"
    | (string & {});

  export type MaxHeight<TLength = (string & {}) | 0> =
    | Globals
    | TLength
    | "-moz-fit-content"
    | "-moz-max-content"
    | "-moz-min-content"
    | "-webkit-fit-content"
    | "-webkit-max-content"
    | "-webkit-min-content"
    | "fit-content"
    | "intrinsic"
    | "max-content"
    | "min-content"
    | "none"
    | (string & {});

  export type MaxInlineSize<TLength = (string & {}) | 0> =
    | Globals
    | TLength
    | "-moz-fit-content"
    | "-moz-max-content"
    | "-moz-min-content"
    | "-webkit-fill-available"
    | "fit-content"
    | "max-content"
    | "min-content"
    | "none"
    | (string & {});

  export type MaxLines = Globals | "none" | (number & {}) | (string & {});

  export type MaxWidth<TLength = (string & {}) | 0> =
    | Globals
    | TLength
    | "-moz-fit-content"
    | "-moz-max-content"
    | "-moz-min-content"
    | "-webkit-fit-content"
    | "-webkit-max-content"
    | "-webkit-min-content"
    | "fit-content"
    | "intrinsic"
    | "max-content"
    | "min-content"
    | "none"
    | (string & {});

  export type MinBlockSize<TLength = (string & {}) | 0> =
    | Globals
    | TLength
    | "-moz-max-content"
    | "-moz-min-content"
    | "-webkit-fill-available"
    | "auto"
    | "fit-content"
    | "max-content"
    | "min-content"
    | (string & {});

  export type MinHeight<TLength = (string & {}) | 0> =
    | Globals
    | TLength
    | "-moz-fit-content"
    | "-moz-max-content"
    | "-moz-min-content"
    | "-webkit-fit-content"
    | "-webkit-max-content"
    | "-webkit-min-content"
    | "auto"
    | "fit-content"
    | "intrinsic"
    | "max-content"
    | "min-content"
    | (string & {});

  export type MinInlineSize<TLength = (string & {}) | 0> =
    | Globals
    | TLength
    | "-moz-fit-content"
    | "-moz-max-content"
    | "-moz-min-content"
    | "-webkit-fill-available"
    | "auto"
    | "fit-content"
    | "max-content"
    | "min-content"
    | (string & {});

  export type MinWidth<TLength = (string & {}) | 0> =
    | Globals
    | TLength
    | "-moz-fit-content"
    | "-moz-max-content"
    | "-moz-min-content"
    | "-webkit-fill-available"
    | "-webkit-fit-content"
    | "-webkit-max-content"
    | "-webkit-min-content"
    | "auto"
    | "fit-content"
    | "intrinsic"
    | "max-content"
    | "min-content"
    | "min-intrinsic"
    | (string & {});

  export type MixBlendMode = Globals | DataType.BlendMode;

  export type Offset<TLength = (string & {}) | 0> = Globals | DataType.Position<TLength> | DataType.GeometryBox | "auto" | "none" | (string & {});

  export type OffsetDistance<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type OffsetPath = Globals | DataType.GeometryBox | "none" | (string & {});

  export type OffsetRotate = Globals | "auto" | "reverse" | (string & {});

  export type ObjectFit = Globals | "contain" | "cover" | "fill" | "none" | "scale-down";

  export type ObjectPosition<TLength = (string & {}) | 0> = Globals | DataType.Position<TLength>;

  export type OffsetAnchor<TLength = (string & {}) | 0> = Globals | DataType.Position<TLength> | "auto";

  export type Opacity = Globals | (string & {}) | (number & {});

  export type Order = Globals | (number & {}) | (string & {});

  export type Orphans = Globals | (number & {}) | (string & {});

  export type Outline<TLength = (string & {}) | 0> = Globals | DataType.Color | DataType.LineStyle | DataType.LineWidth<TLength> | "auto" | "invert" | (string & {});

  export type OutlineColor = Globals | DataType.Color | "invert";

  export type OutlineOffset<TLength = (string & {}) | 0> = Globals | TLength;

  export type OutlineStyle = Globals | DataType.LineStyle | "auto" | (string & {});

  export type OutlineWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;

  export type Overflow = Globals | "-moz-hidden-unscrollable" | "auto" | "clip" | "hidden" | "scroll" | "visible" | (string & {});

  export type OverflowAnchor = Globals | "auto" | "none";

  export type OverflowBlock = Globals | "auto" | "clip" | "hidden" | "scroll" | "visible";

  export type OverflowClipBox = Globals | "content-box" | "padding-box";

  export type OverflowClipMargin<TLength = (string & {}) | 0> = Globals | DataType.VisualBox | TLength | (string & {});

  export type OverflowInline = Globals | "auto" | "clip" | "hidden" | "scroll" | "visible";

  export type OverflowWrap = Globals | "anywhere" | "break-word" | "normal";

  export type OverflowX = Globals | "-moz-hidden-unscrollable" | "auto" | "clip" | "hidden" | "scroll" | "visible";

  export type OverflowY = Globals | "-moz-hidden-unscrollable" | "auto" | "clip" | "hidden" | "scroll" | "visible";

  export type OverscrollBehavior = Globals | "auto" | "contain" | "none" | (string & {});

  export type OverscrollBehaviorBlock = Globals | "auto" | "contain" | "none";

  export type OverscrollBehaviorInline = Globals | "auto" | "contain" | "none";

  export type OverscrollBehaviorX = Globals | "auto" | "contain" | "none";

  export type OverscrollBehaviorY = Globals | "auto" | "contain" | "none";

  export type Padding<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type PaddingBlock<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type PaddingBlockEnd<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type PaddingBlockStart<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type PaddingBottom<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type PaddingInline<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type PaddingInlineEnd<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type PaddingInlineStart<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type PaddingLeft<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type PaddingRight<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type PaddingTop<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type PageBreakAfter = Globals | "always" | "auto" | "avoid" | "left" | "recto" | "right" | "verso";

  export type PageBreakBefore = Globals | "always" | "auto" | "avoid" | "left" | "recto" | "right" | "verso";

  export type PageBreakInside = Globals | "auto" | "avoid";

  export type PaintOrder = Globals | "fill" | "markers" | "normal" | "stroke" | (string & {});

  export type Perspective<TLength = (string & {}) | 0> = Globals | TLength | "none";

  export type PerspectiveOrigin<TLength = (string & {}) | 0> = Globals | DataType.Position<TLength>;

  export type PlaceContent = Globals | DataType.ContentDistribution | DataType.ContentPosition | "baseline" | "normal" | (string & {});

  export type PlaceItems = Globals | DataType.SelfPosition | "baseline" | "normal" | "stretch" | (string & {});

  export type PlaceSelf = Globals | DataType.SelfPosition | "auto" | "baseline" | "normal" | "stretch" | (string & {});

  export type PointerEvents = Globals | "all" | "auto" | "fill" | "inherit" | "none" | "painted" | "stroke" | "visible" | "visibleFill" | "visiblePainted" | "visibleStroke";

  export type Position = Globals | "-webkit-sticky" | "absolute" | "fixed" | "relative" | "static" | "sticky";

  export type Quotes = Globals | "auto" | "none" | (string & {});

  export type Resize = Globals | "block" | "both" | "horizontal" | "inline" | "none" | "vertical";

  export type Right<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type Rotate = Globals | "none" | (string & {});

  export type RowGap<TLength = (string & {}) | 0> = Globals | TLength | "normal" | (string & {});

  export type RubyAlign = Globals | "center" | "space-around" | "space-between" | "start";

  export type RubyMerge = Globals | "auto" | "collapse" | "separate";

  export type RubyPosition = Globals | "alternate" | "inter-character" | "over" | "under" | (string & {});

  export type Scale = Globals | "none" | (string & {}) | (number & {});

  export type ScrollBehavior = Globals | "auto" | "smooth";

  export type ScrollMargin<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type ScrollMarginBlock<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type ScrollMarginBlockEnd<TLength = (string & {}) | 0> = Globals | TLength;

  export type ScrollMarginBlockStart<TLength = (string & {}) | 0> = Globals | TLength;

  export type ScrollMarginBottom<TLength = (string & {}) | 0> = Globals | TLength;

  export type ScrollMarginInline<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type ScrollMarginInlineEnd<TLength = (string & {}) | 0> = Globals | TLength;

  export type ScrollMarginInlineStart<TLength = (string & {}) | 0> = Globals | TLength;

  export type ScrollMarginLeft<TLength = (string & {}) | 0> = Globals | TLength;

  export type ScrollMarginRight<TLength = (string & {}) | 0> = Globals | TLength;

  export type ScrollMarginTop<TLength = (string & {}) | 0> = Globals | TLength;

  export type ScrollPadding<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type ScrollPaddingBlock<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type ScrollPaddingBlockEnd<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type ScrollPaddingBlockStart<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type ScrollPaddingBottom<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type ScrollPaddingInline<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type ScrollPaddingInlineEnd<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type ScrollPaddingInlineStart<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type ScrollPaddingLeft<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type ScrollPaddingRight<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type ScrollPaddingTop<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type ScrollSnapAlign = Globals | "center" | "end" | "none" | "start" | (string & {});

  export type ScrollSnapCoordinate<TLength = (string & {}) | 0> = Globals | DataType.Position<TLength> | "none" | (string & {});

  export type ScrollSnapDestination<TLength = (string & {}) | 0> = Globals | DataType.Position<TLength>;

  export type ScrollSnapPointsX = Globals | "none" | (string & {});

  export type ScrollSnapPointsY = Globals | "none" | (string & {});

  export type ScrollSnapStop = Globals | "always" | "normal";

  export type ScrollSnapType = Globals | "block" | "both" | "inline" | "none" | "x" | "y" | (string & {});

  export type ScrollSnapTypeX = Globals | "mandatory" | "none" | "proximity";

  export type ScrollSnapTypeY = Globals | "mandatory" | "none" | "proximity";

  export type ScrollbarColor = Globals | "auto" | (string & {});

  export type ScrollbarGutter = Globals | "auto" | "stable" | (string & {});

  export type MsScrollbarTrackColor = Globals | DataType.Color;

  export type ScrollbarWidth = Globals | "auto" | "none" | "thin";

  export type ShapeImageThreshold = Globals | (string & {}) | (number & {});

  export type ShapeMargin<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type ShapeOutside = Globals | DataType.Box | "margin-box" | "none" | (string & {});

  export type TabSize<TLength = (string & {}) | 0> = Globals | TLength | (number & {}) | (string & {});

  export type TableLayout = Globals | "auto" | "fixed";

  export type TextAlign = Globals | "center" | "end" | "justify" | "left" | "match-parent" | "right" | "start";

  export type TextAlignLast = Globals | "auto" | "center" | "end" | "justify" | "left" | "right" | "start";

  export type TextCombineUpright = Globals | "all" | "none" | (string & {});

  export type TextDecoration<TLength = (string & {}) | 0> =
    | Globals
    | DataType.Color
    | TLength
    | "auto"
    | "blink"
    | "dashed"
    | "dotted"
    | "double"
    | "from-font"
    | "grammar-error"
    | "line-through"
    | "none"
    | "overline"
    | "solid"
    | "spelling-error"
    | "underline"
    | "wavy"
    | (string & {});

  export type TextDecorationColor = Globals | DataType.Color;

  export type TextDecorationLine = Globals | "blink" | "grammar-error" | "line-through" | "none" | "overline" | "spelling-error" | "underline" | (string & {});

  export type TextDecorationSkip = Globals | "box-decoration" | "edges" | "leading-spaces" | "none" | "objects" | "spaces" | "trailing-spaces" | (string & {});

  export type TextDecorationSkipInk = Globals | "all" | "auto" | "none";

  export type TextDecorationStyle = Globals | "dashed" | "dotted" | "double" | "solid" | "wavy";

  export type TextDecorationThickness<TLength = (string & {}) | 0> = Globals | TLength | "auto" | "from-font" | (string & {});

  export type TextEmphasis = Globals | DataType.Color | "circle" | "dot" | "double-circle" | "filled" | "none" | "open" | "sesame" | "triangle" | (string & {});

  export type TextEmphasisColor = Globals | DataType.Color;

  export type TextEmphasisPosition = Globals | (string & {});

  export type TextEmphasisStyle = Globals | "circle" | "dot" | "double-circle" | "filled" | "none" | "open" | "sesame" | "triangle" | (string & {});

  export type TextIndent<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type TextJustify = Globals | "auto" | "inter-character" | "inter-word" | "none";

  export type TextOrientation = Globals | "mixed" | "sideways" | "upright";

  export type TextOverflow = Globals | "clip" | "ellipsis" | (string & {});

  export type TextRendering = Globals | "auto" | "geometricPrecision" | "optimizeLegibility" | "optimizeSpeed";

  export type TextShadow = Globals | "none" | (string & {});

  export type TextSizeAdjust = Globals | "auto" | "none" | (string & {});

  export type TextTransform = Globals | "capitalize" | "full-size-kana" | "full-width" | "lowercase" | "none" | "uppercase";

  export type TextUnderlineOffset<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type TextUnderlinePosition = Globals | "auto" | "from-font" | "left" | "right" | "under" | (string & {});

  export type Top<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});

  export type TouchAction =
    | Globals
    | "-ms-manipulation"
    | "-ms-none"
    | "-ms-pinch-zoom"
    | "auto"
    | "manipulation"
    | "none"
    | "pan-down"
    | "pan-left"
    | "pan-right"
    | "pan-up"
    | "pan-x"
    | "pan-y"
    | "pinch-zoom"
    | (string & {});

  export type Transform = Globals | "none" | (string & {});

  export type TransformBox = Globals | "border-box" | "content-box" | "fill-box" | "stroke-box" | "view-box";

  export type TransformOrigin<TLength = (string & {}) | 0> = Globals | TLength | "bottom" | "center" | "left" | "right" | "top" | (string & {});

  export type TransformStyle = Globals | "flat" | "preserve-3d";

  export type Transition<TTime = string & {}> = Globals | DataType.SingleTransition<TTime> | (string & {});

  export type TransitionDelay<TTime = string & {}> = Globals | TTime | (string & {});

  export type TransitionDuration<TTime = string & {}> = Globals | TTime | (string & {});

  export type TransitionProperty = Globals | "all" | "none" | (string & {});

  export type TransitionTimingFunction = Globals | DataType.EasingFunction | (string & {});

  export type Translate<TLength = (string & {}) | 0> = Globals | TLength | "none" | (string & {});

  export type UnicodeBidi =
    | Globals
    | "-moz-isolate"
    | "-moz-isolate-override"
    | "-moz-plaintext"
    | "-webkit-isolate"
    | "-webkit-isolate-override"
    | "-webkit-plaintext"
    | "bidi-override"
    | "embed"
    | "isolate"
    | "isolate-override"
    | "normal"
    | "plaintext";

  export type UserSelect = Globals | "-moz-none" | "all" | "auto" | "contain" | "element" | "none" | "text";

  export type VerticalAlign<TLength = (string & {}) | 0> =
    | Globals
    | TLength
    | "baseline"
    | "bottom"
    | "middle"
    | "sub"
    | "super"
    | "text-bottom"
    | "text-top"
    | "top"
    | (string & {});

  export type Visibility = Globals | "collapse" | "hidden" | "visible";

  export type WhiteSpace = Globals | "-moz-pre-wrap" | "break-spaces" | "normal" | "nowrap" | "pre" | "pre-line" | "pre-wrap";

  export type Widows = Globals | (number & {}) | (string & {});

  export type Width<TLength = (string & {}) | 0> =
    | Globals
    | TLength
    | "-moz-fit-content"
    | "-moz-max-content"
    | "-moz-min-content"
    | "-webkit-fit-content"
    | "-webkit-max-content"
    | "auto"
    | "fit-content"
    | "intrinsic"
    | "max-content"
    | "min-content"
    | "min-intrinsic"
    | (string & {});

  export type WillChange = Globals | DataType.AnimateableFeature | "auto" | (string & {});

  export type WordBreak = Globals | "break-all" | "break-word" | "keep-all" | "normal";

  export type WordSpacing<TLength = (string & {}) | 0> = Globals | TLength | "normal";

  export type WordWrap = Globals | "break-word" | "normal";

  export type WritingMode = Globals | "horizontal-tb" | "sideways-lr" | "sideways-rl" | "vertical-lr" | "vertical-rl";

  export type ZIndex = Globals | "auto" | (number & {}) | (string & {});

  export type Zoom = Globals | "normal" | "reset" | (string & {}) | (number & {});

  export type MozAppearance =
    | Globals
    | "-moz-mac-unified-toolbar"
    | "-moz-win-borderless-glass"
    | "-moz-win-browsertabbar-toolbox"
    | "-moz-win-communications-toolbox"
    | "-moz-win-communicationstext"
    | "-moz-win-exclude-glass"
    | "-moz-win-glass"
    | "-moz-win-media-toolbox"
    | "-moz-win-mediatext"
    | "-moz-window-button-box"
    | "-moz-window-button-box-maximized"
    | "-moz-window-button-close"
    | "-moz-window-button-maximize"
    | "-moz-window-button-minimize"
    | "-moz-window-button-restore"
    | "-moz-window-frame-bottom"
    | "-moz-window-frame-left"
    | "-moz-window-frame-right"
    | "-moz-window-titlebar"
    | "-moz-window-titlebar-maximized"
    | "button"
    | "button-arrow-down"
    | "button-arrow-next"
    | "button-arrow-previous"
    | "button-arrow-up"
    | "button-bevel"
    | "button-focus"
    | "caret"
    | "checkbox"
    | "checkbox-container"
    | "checkbox-label"
    | "checkmenuitem"
    | "dualbutton"
    | "groupbox"
    | "listbox"
    | "listitem"
    | "menuarrow"
    | "menubar"
    | "menucheckbox"
    | "menuimage"
    | "menuitem"
    | "menuitemtext"
    | "menulist"
    | "menulist-button"
    | "menulist-text"
    | "menulist-textfield"
    | "menupopup"
    | "menuradio"
    | "menuseparator"
    | "meterbar"
    | "meterchunk"
    | "none"
    | "progressbar"
    | "progressbar-vertical"
    | "progresschunk"
    | "progresschunk-vertical"
    | "radio"
    | "radio-container"
    | "radio-label"
    | "radiomenuitem"
    | "range"
    | "range-thumb"
    | "resizer"
    | "resizerpanel"
    | "scale-horizontal"
    | "scale-vertical"
    | "scalethumb-horizontal"
    | "scalethumb-vertical"
    | "scalethumbend"
    | "scalethumbstart"
    | "scalethumbtick"
    | "scrollbarbutton-down"
    | "scrollbarbutton-left"
    | "scrollbarbutton-right"
    | "scrollbarbutton-up"
    | "scrollbarthumb-horizontal"
    | "scrollbarthumb-vertical"
    | "scrollbartrack-horizontal"
    | "scrollbartrack-vertical"
    | "searchfield"
    | "separator"
    | "sheet"
    | "spinner"
    | "spinner-downbutton"
    | "spinner-textfield"
    | "spinner-upbutton"
    | "splitter"
    | "statusbar"
    | "statusbarpanel"
    | "tab"
    | "tab-scroll-arrow-back"
    | "tab-scroll-arrow-forward"
    | "tabpanel"
    | "tabpanels"
    | "textfield"
    | "textfield-multiline"
    | "toolbar"
    | "toolbarbutton"
    | "toolbarbutton-dropdown"
    | "toolbargripper"
    | "toolbox"
    | "tooltip"
    | "treeheader"
    | "treeheadercell"
    | "treeheadersortarrow"
    | "treeitem"
    | "treeline"
    | "treetwisty"
    | "treetwistyopen"
    | "treeview";

  export type MozBinding = Globals | "none" | (string & {});

  export type MozBorderBottomColors = Globals | DataType.Color | "none" | (string & {});

  export type MozBorderLeftColors = Globals | DataType.Color | "none" | (string & {});

  export type MozBorderRightColors = Globals | DataType.Color | "none" | (string & {});

  export type MozBorderTopColors = Globals | DataType.Color | "none" | (string & {});

  export type MozContextProperties = Globals | "fill" | "fill-opacity" | "none" | "stroke" | "stroke-opacity" | (string & {});

  export type MozFloatEdge = Globals | "border-box" | "content-box" | "margin-box" | "padding-box";

  export type MozForceBrokenImageIcon = Globals | 0 | (string & {}) | 1;

  export type MozImageRegion = Globals | "auto" | (string & {});

  export type MozOrient = Globals | "block" | "horizontal" | "inline" | "vertical";

  export type MozOutlineRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type MozOutlineRadiusBottomleft<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type MozOutlineRadiusBottomright<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type MozOutlineRadiusTopleft<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type MozOutlineRadiusTopright<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type MozStackSizing = Globals | "ignore" | "stretch-to-fit";

  export type MozTextBlink = Globals | "blink" | "none";

  export type MozUserFocus = Globals | "ignore" | "none" | "normal" | "select-after" | "select-all" | "select-before" | "select-menu" | "select-same";

  export type MozUserInput = Globals | "auto" | "disabled" | "enabled" | "none";

  export type MozUserModify = Globals | "read-only" | "read-write" | "write-only";

  export type MozWindowDragging = Globals | "drag" | "no-drag";

  export type MozWindowShadow = Globals | "default" | "menu" | "none" | "sheet" | "tooltip";

  export type MsAccelerator = Globals | "false" | "true";

  export type MsBlockProgression = Globals | "bt" | "lr" | "rl" | "tb";

  export type MsContentZoomChaining = Globals | "chained" | "none";

  export type MsContentZoomLimit = Globals | (string & {});

  export type MsContentZoomLimitMax = Globals | (string & {});

  export type MsContentZoomLimitMin = Globals | (string & {});

  export type MsContentZoomSnap = Globals | "mandatory" | "none" | "proximity" | (string & {});

  export type MsContentZoomSnapPoints = Globals | (string & {});

  export type MsContentZoomSnapType = Globals | "mandatory" | "none" | "proximity";

  export type MsContentZooming = Globals | "none" | "zoom";

  export type MsFilter = Globals | (string & {});

  export type MsFlowFrom = Globals | "none" | (string & {});

  export type MsFlowInto = Globals | "none" | (string & {});

  export type MsGridColumns<TLength = (string & {}) | 0> = Globals | DataType.TrackBreadth<TLength> | "none" | (string & {});

  export type MsGridRows<TLength = (string & {}) | 0> = Globals | DataType.TrackBreadth<TLength> | "none" | (string & {});

  export type MsHighContrastAdjust = Globals | "auto" | "none";

  export type MsHyphenateLimitChars = Globals | "auto" | (string & {}) | (number & {});

  export type MsHyphenateLimitLines = Globals | "no-limit" | (number & {}) | (string & {});

  export type MsHyphenateLimitZone<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type MsImeAlign = Globals | "after" | "auto";

  export type MsOverflowStyle = Globals | "-ms-autohiding-scrollbar" | "auto" | "none" | "scrollbar";

  export type MsScrollChaining = Globals | "chained" | "none";

  export type MsScrollLimit = Globals | (string & {});

  export type MsScrollLimitXMax<TLength = (string & {}) | 0> = Globals | TLength | "auto";

  export type MsScrollLimitXMin<TLength = (string & {}) | 0> = Globals | TLength;

  export type MsScrollLimitYMax<TLength = (string & {}) | 0> = Globals | TLength | "auto";

  export type MsScrollLimitYMin<TLength = (string & {}) | 0> = Globals | TLength;

  export type MsScrollRails = Globals | "none" | "railed";

  export type MsScrollSnapPointsX = Globals | (string & {});

  export type MsScrollSnapPointsY = Globals | (string & {});

  export type MsScrollSnapType = Globals | "mandatory" | "none" | "proximity";

  export type MsScrollSnapX = Globals | (string & {});

  export type MsScrollSnapY = Globals | (string & {});

  export type MsScrollTranslation = Globals | "none" | "vertical-to-horizontal";

  export type MsScrollbar3dlightColor = Globals | DataType.Color;

  export type MsScrollbarArrowColor = Globals | DataType.Color;

  export type MsScrollbarBaseColor = Globals | DataType.Color;

  export type MsScrollbarDarkshadowColor = Globals | DataType.Color;

  export type MsScrollbarFaceColor = Globals | DataType.Color;

  export type MsScrollbarHighlightColor = Globals | DataType.Color;

  export type MsScrollbarShadowColor = Globals | DataType.Color;

  export type MsTextAutospace = Globals | "ideograph-alpha" | "ideograph-numeric" | "ideograph-parenthesis" | "ideograph-space" | "none";

  export type MsTouchSelect = Globals | "grippers" | "none";

  export type MsUserSelect = Globals | "element" | "none" | "text";

  export type MsWrapFlow = Globals | "auto" | "both" | "clear" | "end" | "maximum" | "start";

  export type MsWrapMargin<TLength = (string & {}) | 0> = Globals | TLength;

  export type MsWrapThrough = Globals | "none" | "wrap";

  export type WebkitAppearance =
    | Globals
    | "-apple-pay-button"
    | "button"
    | "button-bevel"
    | "caret"
    | "checkbox"
    | "default-button"
    | "inner-spin-button"
    | "listbox"
    | "listitem"
    | "media-controls-background"
    | "media-controls-fullscreen-background"
    | "media-current-time-display"
    | "media-enter-fullscreen-button"
    | "media-exit-fullscreen-button"
    | "media-fullscreen-button"
    | "media-mute-button"
    | "media-overlay-play-button"
    | "media-play-button"
    | "media-seek-back-button"
    | "media-seek-forward-button"
    | "media-slider"
    | "media-sliderthumb"
    | "media-time-remaining-display"
    | "media-toggle-closed-captions-button"
    | "media-volume-slider"
    | "media-volume-slider-container"
    | "media-volume-sliderthumb"
    | "menulist"
    | "menulist-button"
    | "menulist-text"
    | "menulist-textfield"
    | "meter"
    | "none"
    | "progress-bar"
    | "progress-bar-value"
    | "push-button"
    | "radio"
    | "searchfield"
    | "searchfield-cancel-button"
    | "searchfield-decoration"
    | "searchfield-results-button"
    | "searchfield-results-decoration"
    | "slider-horizontal"
    | "slider-vertical"
    | "sliderthumb-horizontal"
    | "sliderthumb-vertical"
    | "square-button"
    | "textarea"
    | "textfield";

  export type WebkitBorderBefore<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});

  export type WebkitBorderBeforeColor = Globals | DataType.Color;

  export type WebkitBorderBeforeStyle = Globals | DataType.LineStyle | (string & {});

  export type WebkitBorderBeforeWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | (string & {});

  export type WebkitBoxReflect<TLength = (string & {}) | 0> = Globals | TLength | "above" | "below" | "left" | "right" | (string & {});

  export type WebkitLineClamp = Globals | "none" | (number & {}) | (string & {});

  export type WebkitMask<TLength = (string & {}) | 0> =
    | Globals
    | DataType.Position<TLength>
    | DataType.RepeatStyle
    | DataType.Box
    | "border"
    | "content"
    | "none"
    | "padding"
    | "text"
    | (string & {});

  export type WebkitMaskAttachment = Globals | DataType.Attachment | (string & {});

  export type WebkitMaskClip = Globals | DataType.Box | "border" | "content" | "padding" | "text" | (string & {});

  export type WebkitMaskComposite = Globals | DataType.CompositeStyle | (string & {});

  export type WebkitMaskImage = Globals | "none" | (string & {});

  export type WebkitMaskOrigin = Globals | DataType.Box | "border" | "content" | "padding" | (string & {});

  export type WebkitMaskPosition<TLength = (string & {}) | 0> = Globals | DataType.Position<TLength> | (string & {});

  export type WebkitMaskPositionX<TLength = (string & {}) | 0> = Globals | TLength | "center" | "left" | "right" | (string & {});

  export type WebkitMaskPositionY<TLength = (string & {}) | 0> = Globals | TLength | "bottom" | "center" | "top" | (string & {});

  export type WebkitMaskRepeat = Globals | DataType.RepeatStyle | (string & {});

  export type WebkitMaskRepeatX = Globals | "no-repeat" | "repeat" | "round" | "space";

  export type WebkitMaskRepeatY = Globals | "no-repeat" | "repeat" | "round" | "space";

  export type WebkitMaskSize<TLength = (string & {}) | 0> = Globals | DataType.BgSize<TLength> | (string & {});

  export type WebkitOverflowScrolling = Globals | "auto" | "touch";

  export type WebkitTapHighlightColor = Globals | DataType.Color;

  export type WebkitTextFillColor = Globals | DataType.Color;

  export type WebkitTextStroke<TLength = (string & {}) | 0> = Globals | DataType.Color | TLength | (string & {});

  export type WebkitTextStrokeColor = Globals | DataType.Color;

  export type WebkitTextStrokeWidth<TLength = (string & {}) | 0> = Globals | TLength;

  export type WebkitTouchCallout = Globals | "default" | "none";

  export type WebkitUserModify = Globals | "read-only" | "read-write" | "read-write-plaintext-only";

  export type AlignmentBaseline =
    | Globals
    | "after-edge"
    | "alphabetic"
    | "auto"
    | "baseline"
    | "before-edge"
    | "central"
    | "hanging"
    | "ideographic"
    | "mathematical"
    | "middle"
    | "text-after-edge"
    | "text-before-edge";

  export type BaselineShift<TLength = (string & {}) | 0> = Globals | TLength | "baseline" | "sub" | "super" | (string & {});

  export type ClipRule = Globals | "evenodd" | "nonzero";

  export type ColorInterpolation = Globals | "auto" | "linearRGB" | "sRGB";

  export type ColorRendering = Globals | "auto" | "optimizeQuality" | "optimizeSpeed";

  export type DominantBaseline =
    | Globals
    | "alphabetic"
    | "auto"
    | "central"
    | "hanging"
    | "ideographic"
    | "mathematical"
    | "middle"
    | "no-change"
    | "reset-size"
    | "text-after-edge"
    | "text-before-edge"
    | "use-script";

  export type Fill = Globals | DataType.Paint;

  export type FillOpacity = Globals | (number & {}) | (string & {});

  export type FillRule = Globals | "evenodd" | "nonzero";

  export type FloodColor = Globals | DataType.Color | "currentColor";

  export type FloodOpacity = Globals | (number & {}) | (string & {});

  export type GlyphOrientationVertical = Globals | "auto" | (string & {}) | (number & {});

  export type LightingColor = Globals | DataType.Color | "currentColor";

  export type Marker = Globals | "none" | (string & {});

  export type MarkerEnd = Globals | "none" | (string & {});

  export type MarkerMid = Globals | "none" | (string & {});

  export type MarkerStart = Globals | "none" | (string & {});

  export type ShapeRendering = Globals | "auto" | "crispEdges" | "geometricPrecision" | "optimizeSpeed";

  export type StopColor = Globals | DataType.Color | "currentColor";

  export type StopOpacity = Globals | (number & {}) | (string & {});

  export type Stroke = Globals | DataType.Paint;

  export type StrokeDasharray<TLength = (string & {}) | 0> = Globals | DataType.Dasharray<TLength> | "none";

  export type StrokeDashoffset<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type StrokeLinecap = Globals | "butt" | "round" | "square";

  export type StrokeLinejoin = Globals | "bevel" | "miter" | "round";

  export type StrokeMiterlimit = Globals | (number & {}) | (string & {});

  export type StrokeOpacity = Globals | (number & {}) | (string & {});

  export type StrokeWidth<TLength = (string & {}) | 0> = Globals | TLength | (string & {});

  export type TextAnchor = Globals | "end" | "middle" | "start";

  export type VectorEffect = Globals | "non-scaling-stroke" | "none";
}

export namespace AtRule {
  export interface CounterStyle<TLength = (string & {}) | 0, TTime = string & {}> {
    additiveSymbols?: string | undefined;
    fallback?: string | undefined;
    negative?: string | undefined;
    pad?: string | undefined;
    prefix?: string | undefined;
    range?: Range | undefined;
    speakAs?: SpeakAs | undefined;
    suffix?: string | undefined;
    symbols?: string | undefined;
    system?: System | undefined;
  }

  export interface CounterStyleHyphen<TLength = (string & {}) | 0, TTime = string & {}> {
    "additive-symbols"?: string | undefined;
    fallback?: string | undefined;
    negative?: string | undefined;
    pad?: string | undefined;
    prefix?: string | undefined;
    range?: Range | undefined;
    "speak-as"?: SpeakAs | undefined;
    suffix?: string | undefined;
    symbols?: string | undefined;
    system?: System | undefined;
  }

  export type CounterStyleFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<CounterStyle<TLength, TTime>>;

  export type CounterStyleHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<CounterStyleHyphen<TLength, TTime>>;

  export interface FontFace<TLength = (string & {}) | 0, TTime = string & {}> {
    MozFontFeatureSettings?: FontFeatureSettings | undefined;
    ascentOverride?: AscentOverride | undefined;
    descentOverride?: DescentOverride | undefined;
    fontDisplay?: FontDisplay | undefined;
    fontFamily?: string | undefined;
    fontFeatureSettings?: FontFeatureSettings | undefined;
    fontStretch?: FontStretch | undefined;
    fontStyle?: FontStyle | undefined;
    fontVariant?: FontVariant | undefined;
    fontVariationSettings?: FontVariationSettings | undefined;
    fontWeight?: FontWeight | undefined;
    lineGapOverride?: LineGapOverride | undefined;
    sizeAdjust?: string | undefined;
    src?: string | undefined;
    unicodeRange?: string | undefined;
  }

  export interface FontFaceHyphen<TLength = (string & {}) | 0, TTime = string & {}> {
    "-moz-font-feature-settings"?: FontFeatureSettings | undefined;
    "ascent-override"?: AscentOverride | undefined;
    "descent-override"?: DescentOverride | undefined;
    "font-display"?: FontDisplay | undefined;
    "font-family"?: string | undefined;
    "font-feature-settings"?: FontFeatureSettings | undefined;
    "font-stretch"?: FontStretch | undefined;
    "font-style"?: FontStyle | undefined;
    "font-variant"?: FontVariant | undefined;
    "font-variation-settings"?: FontVariationSettings | undefined;
    "font-weight"?: FontWeight | undefined;
    "line-gap-override"?: LineGapOverride | undefined;
    "size-adjust"?: string | undefined;
    src?: string | undefined;
    "unicode-range"?: string | undefined;
  }

  export type FontFaceFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<FontFace<TLength, TTime>>;

  export type FontFaceHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<FontFaceHyphen<TLength, TTime>>;

  export interface Page<TLength = (string & {}) | 0, TTime = string & {}> {
    bleed?: Bleed<TLength> | undefined;
    marks?: Marks | undefined;
    size?: Size<TLength> | undefined;
  }

  export interface PageHyphen<TLength = (string & {}) | 0, TTime = string & {}> {
    bleed?: Bleed<TLength> | undefined;
    marks?: Marks | undefined;
    size?: Size<TLength> | undefined;
  }

  export type PageFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<Page<TLength, TTime>>;

  export type PageHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<PageHyphen<TLength, TTime>>;

  export interface Property<TLength = (string & {}) | 0, TTime = string & {}> {
    inherits?: Inherits | undefined;
    initialValue?: string | undefined;
    syntax?: string | undefined;
  }

  export interface PropertyHyphen<TLength = (string & {}) | 0, TTime = string & {}> {
    inherits?: Inherits | undefined;
    "initial-value"?: string | undefined;
    syntax?: string | undefined;
  }

  export type PropertyFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<Property<TLength, TTime>>;

  export type PropertyHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<PropertyHyphen<TLength, TTime>>;

  export interface Viewport<TLength = (string & {}) | 0, TTime = string & {}> {
    height?: Height<TLength> | undefined;
    maxHeight?: MaxHeight<TLength> | undefined;
    maxWidth?: MaxWidth<TLength> | undefined;
    maxZoom?: MaxZoom | undefined;
    minHeight?: MinHeight<TLength> | undefined;
    minWidth?: MinWidth<TLength> | undefined;
    minZoom?: MinZoom | undefined;
    orientation?: Orientation | undefined;
    userZoom?: UserZoom | undefined;
    viewportFit?: ViewportFit | undefined;
    width?: Width<TLength> | undefined;
    zoom?: Zoom | undefined;
  }

  export interface ViewportHyphen<TLength = (string & {}) | 0, TTime = string & {}> {
    height?: Height<TLength> | undefined;
    "max-height"?: MaxHeight<TLength> | undefined;
    "max-width"?: MaxWidth<TLength> | undefined;
    "max-zoom"?: MaxZoom | undefined;
    "min-height"?: MinHeight<TLength> | undefined;
    "min-width"?: MinWidth<TLength> | undefined;
    "min-zoom"?: MinZoom | undefined;
    orientation?: Orientation | undefined;
    "user-zoom"?: UserZoom | undefined;
    "viewport-fit"?: ViewportFit | undefined;
    width?: Width<TLength> | undefined;
    zoom?: Zoom | undefined;
  }

  export type ViewportFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<Viewport<TLength, TTime>>;

  export type ViewportHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<ViewportHyphen<TLength, TTime>>;

  type Range = "auto" | (string & {});

  type SpeakAs = "auto" | "bullets" | "numbers" | "spell-out" | "words" | (string & {});

  type System = "additive" | "alphabetic" | "cyclic" | "fixed" | "numeric" | "symbolic" | (string & {});

  type FontFeatureSettings = "normal" | (string & {});

  type AscentOverride = "normal" | (string & {});

  type DescentOverride = "normal" | (string & {});

  type FontDisplay = "auto" | "block" | "fallback" | "optional" | "swap";

  type FontStretch = DataType.FontStretchAbsolute | (string & {});

  type FontStyle = "italic" | "normal" | "oblique" | (string & {});

  type FontVariant =
    | DataType.EastAsianVariantValues
    | "all-petite-caps"
    | "all-small-caps"
    | "common-ligatures"
    | "contextual"
    | "diagonal-fractions"
    | "discretionary-ligatures"
    | "full-width"
    | "historical-forms"
    | "historical-ligatures"
    | "lining-nums"
    | "no-common-ligatures"
    | "no-contextual"
    | "no-discretionary-ligatures"
    | "no-historical-ligatures"
    | "none"
    | "normal"
    | "oldstyle-nums"
    | "ordinal"
    | "petite-caps"
    | "proportional-nums"
    | "proportional-width"
    | "ruby"
    | "slashed-zero"
    | "small-caps"
    | "stacked-fractions"
    | "tabular-nums"
    | "titling-caps"
    | "unicase"
    | (string & {});

  type FontVariationSettings = "normal" | (string & {});

  type FontWeight = DataType.FontWeightAbsolute | (string & {});

  type LineGapOverride = "normal" | (string & {});

  type Bleed<TLength> = TLength | "auto";

  type Marks = "crop" | "cross" | "none" | (string & {});

  type Size<TLength> = DataType.PageSize | TLength | "auto" | "landscape" | "portrait" | (string & {});

  type Inherits = "false" | "true";

  type Height<TLength> = DataType.ViewportLength<TLength> | (string & {});

  type MaxHeight<TLength> = DataType.ViewportLength<TLength>;

  type MaxWidth<TLength> = DataType.ViewportLength<TLength>;

  type MaxZoom = "auto" | (string & {}) | (number & {});

  type MinHeight<TLength> = DataType.ViewportLength<TLength>;

  type MinWidth<TLength> = DataType.ViewportLength<TLength>;

  type MinZoom = "auto" | (string & {}) | (number & {});

  type Orientation = "auto" | "landscape" | "portrait";

  type UserZoom = "fixed" | "zoom";

  type ViewportFit = "auto" | "contain" | "cover";

  type Width<TLength> = DataType.ViewportLength<TLength> | (string & {});

  type Zoom = "auto" | (string & {}) | (number & {});
}

declare namespace DataType {
  type AbsoluteSize = "large" | "medium" | "small" | "x-large" | "x-small" | "xx-large" | "xx-small" | "xxx-large";

  type AnimateableFeature = "contents" | "scroll-position" | (string & {});

  type Attachment = "fixed" | "local" | "scroll";

  type BgPosition<TLength> = TLength | "bottom" | "center" | "left" | "right" | "top" | (string & {});

  type BgSize<TLength> = TLength | "auto" | "contain" | "cover" | (string & {});

  type BlendMode =
    | "color"
    | "color-burn"
    | "color-dodge"
    | "darken"
    | "difference"
    | "exclusion"
    | "hard-light"
    | "hue"
    | "lighten"
    | "luminosity"
    | "multiply"
    | "normal"
    | "overlay"
    | "saturation"
    | "screen"
    | "soft-light";

  type Box = "border-box" | "content-box" | "padding-box";

  type Color = NamedColor | DeprecatedSystemColor | "currentcolor" | (string & {});

  type CompatAuto =
    | "button"
    | "checkbox"
    | "listbox"
    | "menulist"
    | "meter"
    | "progress-bar"
    | "push-button"
    | "radio"
    | "searchfield"
    | "slider-horizontal"
    | "square-button"
    | "textarea";

  type CompositeStyle =
    | "clear"
    | "copy"
    | "destination-atop"
    | "destination-in"
    | "destination-out"
    | "destination-over"
    | "source-atop"
    | "source-in"
    | "source-out"
    | "source-over"
    | "xor";

  type CompositingOperator = "add" | "exclude" | "intersect" | "subtract";

  type ContentDistribution = "space-around" | "space-between" | "space-evenly" | "stretch";

  type ContentList = Quote | "contents" | (string & {});

  type ContentPosition = "center" | "end" | "flex-end" | "flex-start" | "start";

  type CubicBezierTimingFunction = "ease" | "ease-in" | "ease-in-out" | "ease-out" | (string & {});

  type Dasharray<TLength> = TLength | (string & {}) | (number & {});

  type DeprecatedSystemColor =
    | "ActiveBorder"
    | "ActiveCaption"
    | "AppWorkspace"
    | "Background"
    | "ButtonFace"
    | "ButtonHighlight"
    | "ButtonShadow"
    | "ButtonText"
    | "CaptionText"
    | "GrayText"
    | "Highlight"
    | "HighlightText"
    | "InactiveBorder"
    | "InactiveCaption"
    | "InactiveCaptionText"
    | "InfoBackground"
    | "InfoText"
    | "Menu"
    | "MenuText"
    | "Scrollbar"
    | "ThreeDDarkShadow"
    | "ThreeDFace"
    | "ThreeDHighlight"
    | "ThreeDLightShadow"
    | "ThreeDShadow"
    | "Window"
    | "WindowFrame"
    | "WindowText";

  type DisplayInside = "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flex" | "flow" | "flow-root" | "grid" | "ruby" | "table";

  type DisplayInternal =
    | "ruby-base"
    | "ruby-base-container"
    | "ruby-text"
    | "ruby-text-container"
    | "table-caption"
    | "table-cell"
    | "table-column"
    | "table-column-group"
    | "table-footer-group"
    | "table-header-group"
    | "table-row"
    | "table-row-group";

  type DisplayLegacy = "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table";

  type DisplayOutside = "block" | "inline" | "run-in";

  type EasingFunction = CubicBezierTimingFunction | StepTimingFunction | "linear";

  type EastAsianVariantValues = "jis04" | "jis78" | "jis83" | "jis90" | "simplified" | "traditional";

  type FinalBgLayer<TLength> = Color | BgPosition<TLength> | RepeatStyle | Attachment | Box | "none" | (string & {});

  type FontStretchAbsolute =
    | "condensed"
    | "expanded"
    | "extra-condensed"
    | "extra-expanded"
    | "normal"
    | "semi-condensed"
    | "semi-expanded"
    | "ultra-condensed"
    | "ultra-expanded"
    | (string & {});

  type FontWeightAbsolute = "bold" | "normal" | (number & {}) | (string & {});

  type GenericFamily = "cursive" | "fantasy" | "monospace" | "sans-serif" | "serif";

  type GeometryBox = Box | "fill-box" | "margin-box" | "stroke-box" | "view-box";

  type GridLine = "auto" | (string & {}) | (number & {});

  type LineStyle = "dashed" | "dotted" | "double" | "groove" | "hidden" | "inset" | "none" | "outset" | "ridge" | "solid";

  type LineWidth<TLength> = TLength | "medium" | "thick" | "thin";

  type MaskLayer<TLength> = Position<TLength> | RepeatStyle | GeometryBox | CompositingOperator | MaskingMode | "no-clip" | "none" | (string & {});

  type MaskingMode = "alpha" | "luminance" | "match-source";

  type NamedColor =
    | "aliceblue"
    | "antiquewhite"
    | "aqua"
    | "aquamarine"
    | "azure"
    | "beige"
    | "bisque"
    | "black"
    | "blanchedalmond"
    | "blue"
    | "blueviolet"
    | "brown"
    | "burlywood"
    | "cadetblue"
    | "chartreuse"
    | "chocolate"
    | "coral"
    | "cornflowerblue"
    | "cornsilk"
    | "crimson"
    | "cyan"
    | "darkblue"
    | "darkcyan"
    | "darkgoldenrod"
    | "darkgray"
    | "darkgreen"
    | "darkgrey"
    | "darkkhaki"
    | "darkmagenta"
    | "darkolivegreen"
    | "darkorange"
    | "darkorchid"
    | "darkred"
    | "darksalmon"
    | "darkseagreen"
    | "darkslateblue"
    | "darkslategray"
    | "darkslategrey"
    | "darkturquoise"
    | "darkviolet"
    | "deeppink"
    | "deepskyblue"
    | "dimgray"
    | "dimgrey"
    | "dodgerblue"
    | "firebrick"
    | "floralwhite"
    | "forestgreen"
    | "fuchsia"
    | "gainsboro"
    | "ghostwhite"
    | "gold"
    | "goldenrod"
    | "gray"
    | "green"
    | "greenyellow"
    | "grey"
    | "honeydew"
    | "hotpink"
    | "indianred"
    | "indigo"
    | "ivory"
    | "khaki"
    | "lavender"
    | "lavenderblush"
    | "lawngreen"
    | "lemonchiffon"
    | "lightblue"
    | "lightcoral"
    | "lightcyan"
    | "lightgoldenrodyellow"
    | "lightgray"
    | "lightgreen"
    | "lightgrey"
    | "lightpink"
    | "lightsalmon"
    | "lightseagreen"
    | "lightskyblue"
    | "lightslategray"
    | "lightslategrey"
    | "lightsteelblue"
    | "lightyellow"
    | "lime"
    | "limegreen"
    | "linen"
    | "magenta"
    | "maroon"
    | "mediumaquamarine"
    | "mediumblue"
    | "mediumorchid"
    | "mediumpurple"
    | "mediumseagreen"
    | "mediumslateblue"
    | "mediumspringgreen"
    | "mediumturquoise"
    | "mediumvioletred"
    | "midnightblue"
    | "mintcream"
    | "mistyrose"
    | "moccasin"
    | "navajowhite"
    | "navy"
    | "oldlace"
    | "olive"
    | "olivedrab"
    | "orange"
    | "orangered"
    | "orchid"
    | "palegoldenrod"
    | "palegreen"
    | "paleturquoise"
    | "palevioletred"
    | "papayawhip"
    | "peachpuff"
    | "peru"
    | "pink"
    | "plum"
    | "powderblue"
    | "purple"
    | "rebeccapurple"
    | "red"
    | "rosybrown"
    | "royalblue"
    | "saddlebrown"
    | "salmon"
    | "sandybrown"
    | "seagreen"
    | "seashell"
    | "sienna"
    | "silver"
    | "skyblue"
    | "slateblue"
    | "slategray"
    | "slategrey"
    | "snow"
    | "springgreen"
    | "steelblue"
    | "tan"
    | "teal"
    | "thistle"
    | "tomato"
    | "transparent"
    | "turquoise"
    | "violet"
    | "wheat"
    | "white"
    | "whitesmoke"
    | "yellow"
    | "yellowgreen";

  type PageSize = "A3" | "A4" | "A5" | "B4" | "B5" | "JIS-B4" | "JIS-B5" | "ledger" | "legal" | "letter";

  type Paint = Color | "child" | "context-fill" | "context-stroke" | "none" | (string & {});

  type Position<TLength> = TLength | "bottom" | "center" | "left" | "right" | "top" | (string & {});

  type Quote = "close-quote" | "no-close-quote" | "no-open-quote" | "open-quote";

  type RepeatStyle = "no-repeat" | "repeat" | "repeat-x" | "repeat-y" | "round" | "space" | (string & {});

  type SelfPosition = "center" | "end" | "flex-end" | "flex-start" | "self-end" | "self-start" | "start";

  type SingleAnimation<TTime> =
    | EasingFunction
    | SingleAnimationDirection
    | SingleAnimationFillMode
    | TTime
    | "infinite"
    | "none"
    | "paused"
    | "running"
    | (string & {})
    | (number & {});

  type SingleAnimationDirection = "alternate" | "alternate-reverse" | "normal" | "reverse";

  type SingleAnimationFillMode = "backwards" | "both" | "forwards" | "none";

  type SingleTransition<TTime> = EasingFunction | TTime | "all" | "none" | (string & {});

  type StepTimingFunction = "step-end" | "step-start" | (string & {});

  type TrackBreadth<TLength> = TLength | "auto" | "max-content" | "min-content" | (string & {});

  type ViewportLength<TLength> = TLength | "auto" | (string & {});

  type VisualBox = "border-box" | "content-box" | "padding-box";
}
`;var wL=`/// <reference types="react" />
import * as React$1 from "react";
import {
  CSSProperties,
  DetailedHTMLFactory,
  ForwardRefExoticComponent,
  HTMLAttributes,
  PropsWithoutRef,
  ReactHTML,
  ReactNode,
  RefAttributes,
  RefObject,
  SVGAttributes,
  useEffect,
} from "react";
import { Easing as Easing$1, SpringOptions } from "popmotion";

declare type GenericHandler = (...args: any) => void;
declare class SubscriptionManager<Handler extends GenericHandler> {
  private subscriptions;
  add(handler: Handler): () => void;
  notify(
    a?: Parameters<Handler>[0],
    b?: Parameters<Handler>[1],
    c?: Parameters<Handler>[2],
  ): void;
  getSize(): number;
  clear(): void;
}

/**
 * @public
 */
declare type Subscriber<T> = (v: T) => void;
/**
 * @public
 */
declare type PassiveEffect<T> = (v: T, safeSetter: (v: T) => void) => void;
declare type StartAnimation = (complete: () => void) => () => void;
/**
 * \`MotionValue\` is used to track the state and velocity of motion values.
 *
 * @public
 */
declare class MotionValue<V = any> {
  /**
   * The current state of the \`MotionValue\`.
   *
   * @internal
   */
  private current;
  /**
   * The previous state of the \`MotionValue\`.
   *
   * @internal
   */
  private prev;
  /**
   * Duration, in milliseconds, since last updating frame.
   *
   * @internal
   */
  private timeDelta;
  /**
   * Timestamp of the last time this \`MotionValue\` was updated.
   *
   * @internal
   */
  private lastUpdated;
  /**
   * Functions to notify when the \`MotionValue\` updates.
   *
   * @internal
   */
  private updateSubscribers;
  /**
   * Functions to notify when the velocity updates.
   *
   * @internal
   */
  velocityUpdateSubscribers: SubscriptionManager<Subscriber<number>>;
  /**
   * Functions to notify when the \`MotionValue\` updates and \`render\` is set to \`true\`.
   *
   * @internal
   */
  private renderSubscribers;
  /**
   * Add a passive effect to this \`MotionValue\`.
   *
   * A passive effect intercepts calls to \`set\`. For instance, \`useSpring\` adds
   * a passive effect that attaches a \`spring\` to the latest
   * set value. Hypothetically there could be a \`useSmooth\` that attaches an input smoothing effect.
   *
   * @internal
   */
  private passiveEffect?;
  /**
   * A reference to the currently-controlling Popmotion animation
   *
   * @internal
   */
  private stopAnimation?;
  /**
   * Tracks whether this value can output a velocity. Currently this is only true
   * if the value is numerical, but we might be able to widen the scope here and support
   * other value types.
   *
   * @internal
   */
  private canTrackVelocity;
  /**
   * @param init - The initiating value
   * @param config - Optional configuration options
   *
   * -  \`transformer\`: A function to transform incoming values with.
   *
   * @internal
   */
  constructor(init: V);
  /**
   * Adds a function that will be notified when the \`MotionValue\` is updated.
   *
   * It returns a function that, when called, will cancel the subscription.
   *
   * When calling \`onChange\` inside a React component, it should be wrapped with the
   * \`useEffect\` hook. As it returns an unsubscribe function, this should be returned
   * from the \`useEffect\` function to ensure you don't add duplicate subscribers..
   *
   * \`\`\`jsx
   * export const MyComponent = () => {
   *   const x = useMotionValue(0)
   *   const y = useMotionValue(0)
   *   const opacity = useMotionValue(1)
   *
   *   useEffect(() => {
   *     function updateOpacity() {
   *       const maxXY = Math.max(x.get(), y.get())
   *       const newOpacity = transform(maxXY, [0, 100], [1, 0])
   *       opacity.set(newOpacity)
   *     }
   *
   *     const unsubscribeX = x.onChange(updateOpacity)
   *     const unsubscribeY = y.onChange(updateOpacity)
   *
   *     return () => {
   *       unsubscribeX()
   *       unsubscribeY()
   *     }
   *   }, [])
   *
   *   return <motion.div style={{ x }} />
   * }
   * \`\`\`
   *
   * @internalremarks
   *
   * We could look into a \`useOnChange\` hook if the above lifecycle management proves confusing.
   *
   * \`\`\`jsx
   * useOnChange(x, () => {})
   * \`\`\`
   *
   * @param subscriber - A function that receives the latest value.
   * @returns A function that, when called, will cancel this subscription.
   *
   * @public
   */
  onChange(subscription: Subscriber<V>): () => void;
  clearListeners(): void;
  /**
   * Adds a function that will be notified when the \`MotionValue\` requests a render.
   *
   * @param subscriber - A function that's provided the latest value.
   * @returns A function that, when called, will cancel this subscription.
   *
   * @internal
   */
  onRenderRequest(subscription: Subscriber<V>): () => void;
  /**
   * Attaches a passive effect to the \`MotionValue\`.
   *
   * @internal
   */
  attach(passiveEffect: PassiveEffect<V>): void;
  /**
   * Sets the state of the \`MotionValue\`.
   *
   * @remarks
   *
   * \`\`\`jsx
   * const x = useMotionValue(0)
   * x.set(10)
   * \`\`\`
   *
   * @param latest - Latest value to set.
   * @param render - Whether to notify render subscribers. Defaults to \`true\`
   *
   * @public
   */
  set(v: V, render?: boolean): void;
  updateAndNotify: (v: V, render?: boolean) => void;
  /**
   * Returns the latest state of \`MotionValue\`
   *
   * @returns - The latest state of \`MotionValue\`
   *
   * @public
   */
  get(): V;
  /**
   * @public
   */
  getPrevious(): V;
  /**
   * Returns the latest velocity of \`MotionValue\`
   *
   * @returns - The latest velocity of \`MotionValue\`. Returns \`0\` if the state is non-numerical.
   *
   * @public
   */
  getVelocity(): number;
  /**
   * Schedule a velocity check for the next frame.
   *
   * This is an instanced and bound function to prevent generating a new
   * function once per frame.
   *
   * @internal
   */
  private scheduleVelocityCheck;
  /**
   * Updates \`prev\` with \`current\` if the value hasn't been updated this frame.
   * This ensures velocity calculations return \`0\`.
   *
   * This is an instanced and bound function to prevent generating a new
   * function once per frame.
   *
   * @internal
   */
  private velocityCheck;
  hasAnimated: boolean;
  /**
   * Registers a new animation to control this \`MotionValue\`. Only one
   * animation can drive a \`MotionValue\` at one time.
   *
   * \`\`\`jsx
   * value.start()
   * \`\`\`
   *
   * @param animation - A function that starts the provided animation
   *
   * @internal
   */
  start(animation: StartAnimation): Promise<void>;
  /**
   * Stop the currently active animation.
   *
   * @public
   */
  stop(): void;
  /**
   * Returns \`true\` if this value is currently animating.
   *
   * @public
   */
  isAnimating(): boolean;
  private clearAnimation;
  /**
   * Destroy and clean up subscribers to this \`MotionValue\`.
   *
   * The \`MotionValue\` hooks like \`useMotionValue\` and \`useTransform\` automatically
   * handle the lifecycle of the returned \`MotionValue\`, so this method is only necessary if you've manually
   * created a \`MotionValue\` via the \`motionValue\` function.
   *
   * @public
   */
  destroy(): void;
}
/**
 * @internal
 */
declare function motionValue<V>(init: V): MotionValue<V>;

/**
 * @public
 */
declare type ControlsAnimationDefinition =
  | string
  | string[]
  | TargetAndTransition
  | TargetResolver;
/**
 * @public
 */
interface AnimationControls {
  /**
   * Subscribes a component's animation controls to this.
   *
   * @param controls - The controls to subscribe
   * @returns An unsubscribe function.
   *
   * @internal
   */
  subscribe(visualElement: VisualElement): () => void;
  /**
   * Starts an animation on all linked components.
   *
   * @remarks
   *
   * \`\`\`jsx
   * controls.start("variantLabel")
   * controls.start({
   *   x: 0,
   *   transition: { duration: 1 }
   * })
   * \`\`\`
   *
   * @param definition - Properties or variant label to animate to
   * @param transition - Optional \`transtion\` to apply to a variant
   * @returns - A \`Promise\` that resolves when all animations have completed.
   *
   * @public
   */
  start(
    definition: ControlsAnimationDefinition,
    transitionOverride?: Transition,
  ): Promise<any>;
  /**
   * Instantly set to a set of properties or a variant.
   *
   * \`\`\`jsx
   * // With properties
   * controls.set({ opacity: 0 })
   *
   * // With variants
   * controls.set("hidden")
   * \`\`\`
   *
   * @internalremarks
   * We could perform a similar trick to \`.start\` where this can be called before mount
   * and we maintain a list of of pending actions that get applied on mount. But the
   * expectation of \`set\` is that it happens synchronously and this would be difficult
   * to do before any children have even attached themselves. It's also poor practise
   * and we should discourage render-synchronous \`.start\` calls rather than lean into this.
   *
   * @public
   */
  set(definition: ControlsAnimationDefinition): void;
  /**
   * Stops animations on all linked components.
   *
   * \`\`\`jsx
   * controls.stop()
   * \`\`\`
   *
   * @public
   */
  stop(): void;
  mount(): () => void;
}

interface Point {
  x: number;
  y: number;
}
interface Axis {
  min: number;
  max: number;
}
interface Box {
  x: Axis;
  y: Axis;
}
interface BoundingBox {
  top: number;
  right: number;
  bottom: number;
  left: number;
}
interface AxisDelta {
  translate: number;
  scale: number;
  origin: number;
  originPoint: number;
}
interface Delta {
  x: AxisDelta;
  y: AxisDelta;
}
declare type TransformPoint = (point: Point) => Point;

declare type AnyPointerEvent = MouseEvent | TouchEvent | PointerEvent;
/**
 * Passed in to pan event handlers like \`onPan\` the \`PanInfo\` object contains
 * information about the current state of the tap gesture such as its
 * \`point\`, \`delta\`, \`offset\` and \`velocity\`.
 *
 * \`\`\`jsx
 * <motion.div onPan={(event, info) => {
 *   console.log(info.point.x, info.point.y)
 * }} />
 * \`\`\`
 *
 * @public
 */
interface PanInfo {
  /**
   * Contains \`x\` and \`y\` values for the current pan position relative
   * to the device or page.
   *
   * \`\`\`jsx
   * function onPan(event, info) {
   *   console.log(info.point.x, info.point.y)
   * }
   *
   * <motion.div onPan={onPan} />
   * \`\`\`
   *
   * @public
   */
  point: Point;
  /**
   * Contains \`x\` and \`y\` values for the distance moved since
   * the last event.
   *
   * \`\`\`jsx
   * function onPan(event, info) {
   *   console.log(info.delta.x, info.delta.y)
   * }
   *
   * <motion.div onPan={onPan} />
   * \`\`\`
   *
   * @public
   */
  delta: Point;
  /**
   * Contains \`x\` and \`y\` values for the distance moved from
   * the first pan event.
   *
   * \`\`\`jsx
   * function onPan(event, info) {
   *   console.log(info.offset.x, info.offset.y)
   * }
   *
   * <motion.div onPan={onPan} />
   * \`\`\`
   *
   * @public
   */
  offset: Point;
  /**
   * Contains \`x\` and \`y\` values for the current velocity of the pointer, in px/ms.
   *
   * \`\`\`jsx
   * function onPan(event, info) {
   *   console.log(info.velocity.x, info.velocity.y)
   * }
   *
   * <motion.div onPan={onPan} />
   * \`\`\`
   *
   * @public
   */
  velocity: Point;
}

interface DragControlOptions {
  snapToCursor?: boolean;
  cursorProgress?: Point;
}
/** */
declare class VisualElementDragControls {
  private visualElement;
  private panSession?;
  private openGlobalLock;
  isDragging: boolean;
  private currentDirection;
  private originPoint;
  /**
   * The permitted boundaries of travel, in pixels.
   */
  private constraints;
  private hasMutatedConstraints;
  /**
   * The per-axis resolved elastic values.
   */
  private elastic;
  constructor(visualElement: VisualElement);
  start(
    originEvent: AnyPointerEvent,
    { snapToCursor }?: DragControlOptions,
  ): void;
  private stop;
  private cancel;
  private updateAxis;
  private resolveConstraints;
  private resolveRefConstraints;
  private startAnimation;
  private startAxisValueAnimation;
  private stopAnimation;
  /**
   * Drag works differently depending on which props are provided.
   *
   * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.
   * - Otherwise, we apply the delta to the x/y motion values.
   */
  private getAxisMotionValue;
  private snapToCursor;
  /**
   * When the viewport resizes we want to check if the measured constraints
   * have changed and, if so, reposition the element within those new constraints
   * relative to where it was before the resize.
   */
  scalePositionWithinConstraints(): void;
  addListeners(): () => void;
  getProps(): MotionProps;
}

/**
 * Can manually trigger a drag gesture on one or more \`drag\`-enabled \`motion\` components.
 *
 * \`\`\`jsx
 * const dragControls = useDragControls()
 *
 * function startDrag(event) {
 *   dragControls.start(event, { snapToCursor: true })
 * }
 *
 * return (
 *   <>
 *     <div onPointerDown={startDrag} />
 *     <motion.div drag="x" dragControls={dragControls} />
 *   </>
 * )
 * \`\`\`
 *
 * @public
 */
declare class DragControls {
  private componentControls;
  /**
   * Subscribe a component's internal \`VisualElementDragControls\` to the user-facing API.
   *
   * @internal
   */
  subscribe(controls: VisualElementDragControls): () => void;
  /**
   * Start a drag gesture on every \`motion\` component that has this set of drag controls
   * passed into it via the \`dragControls\` prop.
   *
   * \`\`\`jsx
   * dragControls.start(e, {
   *   snapToCursor: true
   * })
   * \`\`\`
   *
   * @param event - PointerEvent
   * @param options - Options
   *
   * @public
   */
  start(
    event:
      | React$1.MouseEvent
      | React$1.TouchEvent
      | React$1.PointerEvent
      | MouseEvent
      | TouchEvent
      | PointerEvent,
    options?: DragControlOptions,
  ): void;
}
/**
 * Usually, dragging is initiated by pressing down on a \`motion\` component with a \`drag\` prop
 * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we
 * might want to initiate that dragging from a different component than the draggable one.
 *
 * By creating a \`dragControls\` using the \`useDragControls\` hook, we can pass this into
 * the draggable component's \`dragControls\` prop. It exposes a \`start\` method
 * that can start dragging from pointer events on other components.
 *
 * \`\`\`jsx
 * const dragControls = useDragControls()
 *
 * function startDrag(event) {
 *   dragControls.start(event, { snapToCursor: true })
 * }
 *
 * return (
 *   <>
 *     <div onPointerDown={startDrag} />
 *     <motion.div drag="x" dragControls={dragControls} />
 *   </>
 * )
 * \`\`\`
 *
 * @public
 */
declare function useDragControls(): DragControls;

declare type DragElastic = boolean | number | Partial<BoundingBox>;
/**
 * @public
 */
interface DragHandlers {
  /**
   * Callback function that fires when dragging starts.
   *
   * \`\`\`jsx
   * <motion.div
   *   drag
   *   onDragStart={
   *     (event, info) => console.log(info.point.x, info.point.y)
   *   }
   * />
   * \`\`\`
   *
   * @public
   */
  onDragStart?(
    event: MouseEvent | TouchEvent | PointerEvent,
    info: PanInfo,
  ): void;
  /**
   * Callback function that fires when dragging ends.
   *
   * \`\`\`jsx
   * <motion.div
   *   drag
   *   onDragEnd={
   *     (event, info) => console.log(info.point.x, info.point.y)
   *   }
   * />
   * \`\`\`
   *
   * @public
   */
  onDragEnd?(
    event: MouseEvent | TouchEvent | PointerEvent,
    info: PanInfo,
  ): void;
  /**
   * Callback function that fires when the component is dragged.
   *
   * \`\`\`jsx
   * <motion.div
   *   drag
   *   onDrag={
   *     (event, info) => console.log(info.point.x, info.point.y)
   *   }
   * />
   * \`\`\`
   *
   * @public
   */
  onDrag?(event: MouseEvent | TouchEvent | PointerEvent, info: PanInfo): void;
  /**
   * Callback function that fires a drag direction is determined.
   *
   * \`\`\`jsx
   * <motion.div
   *   drag
   *   dragDirectionLock
   *   onDirectionLock={axis => console.log(axis)}
   * />
   * \`\`\`
   *
   * @public
   */
  onDirectionLock?(axis: "x" | "y"): void;
  /**
   * Callback function that fires when drag momentum/bounce transition finishes.
   *
   * \`\`\`jsx
   * <motion.div
   *   drag
   *   onDragTransitionEnd={() => console.log('Drag transition complete')}
   * />
   * \`\`\`
   *
   * @public
   */
  onDragTransitionEnd?(): void;
}
/**
 * @public
 */
declare type InertiaOptions = Partial<Omit<Inertia, "velocity" | "type">>;
/**
 * @public
 */
interface DraggableProps extends DragHandlers {
  /**
   * Enable dragging for this element. Set to \`false\` by default.
   * Set \`true\` to drag in both directions.
   * Set \`"x"\` or \`"y"\` to only drag in a specific direction.
   *
   * \`\`\`jsx
   * <motion.div drag="x" />
   * \`\`\`
   */
  drag?: boolean | "x" | "y";
  /**
   * Properties or variant label to animate to while the drag gesture is recognised.
   *
   * \`\`\`jsx
   * <motion.div whileDrag={{ scale: 1.2 }} />
   * \`\`\`
   */
  whileDrag?: VariantLabels | TargetAndTransition;
  /**
   * If \`true\`, this will lock dragging to the initially-detected direction. Defaults to \`false\`.
   *
   * \`\`\`jsx
   * <motion.div drag dragDirectionLock />
   * \`\`\`
   */
  dragDirectionLock?: boolean;
  /**
   * Allows drag gesture propagation to child components. Set to \`false\` by
   * default.
   *
   * \`\`\`jsx
   * <motion.div drag="x" dragPropagation />
   * \`\`\`
   */
  dragPropagation?: boolean;
  /**
   * Applies constraints on the permitted draggable area.
   *
   * It can accept an object of optional \`top\`, \`left\`, \`right\`, and \`bottom\` values, measured in pixels.
   * This will define a distance the named edge of the draggable component.
   *
   * Alternatively, it can accept a \`ref\` to another component created with React's \`useRef\` hook.
   * This \`ref\` should be passed both to the draggable component's \`dragConstraints\` prop, and the \`ref\`
   * of the component you want to use as constraints.
   *
   * \`\`\`jsx
   * // In pixels
   * <motion.div
   *   drag="x"
   *   dragConstraints={{ left: 0, right: 300 }}
   * />
   *
   * // As a ref to another component
   * const MyComponent = () => {
   *   const constraintsRef = useRef(null)
   *
   *   return (
   *      <motion.div ref={constraintsRef}>
   *          <motion.div drag dragConstraints={constraintsRef} />
   *      </motion.div>
   *   )
   * }
   * \`\`\`
   */
  dragConstraints?: false | Partial<BoundingBox> | RefObject<Element>;
  /**
   * The degree of movement allowed outside constraints. 0 = no movement, 1 =
   * full movement.
   *
   * Set to \`0.5\` by default. Can also be set as \`false\` to disable movement.
   *
   * By passing an object of \`top\`/\`right\`/\`bottom\`/\`left\`, individual values can be set
   * per constraint. Any missing values will be set to \`0\`.
   *
   * \`\`\`jsx
   * <motion.div
   *   drag
   *   dragConstraints={{ left: 0, right: 300 }}
   *   dragElastic={0.2}
   * />
   * \`\`\`
   */
  dragElastic?: DragElastic;
  /**
   * Apply momentum from the pan gesture to the component when dragging
   * finishes. Set to \`true\` by default.
   *
   * \`\`\`jsx
   * <motion.div
   *   drag
   *   dragConstraints={{ left: 0, right: 300 }}
   *   dragMomentum={false}
   * />
   * \`\`\`
   */
  dragMomentum?: boolean;
  /**
   * Allows you to change dragging inertia parameters.
   * When releasing a draggable Frame, an animation with type \`inertia\` starts. The animation is based on your dragging velocity. This property allows you to customize it.
   * See {@link https://framer.com/api/animation/#inertia | Inertia} for all properties you can use.
   *
   * \`\`\`jsx
   * <motion.div
   *   drag
   *   dragTransition={{ bounceStiffness: 600, bounceDamping: 10 }}
   * />
   * \`\`\`
   */
  dragTransition?: InertiaOptions;
  /**
   * Usually, dragging is initiated by pressing down on a component and moving it. For some
   * use-cases, for instance clicking at an arbitrary point on a video scrubber, we
   * might want to initiate dragging from a different component than the draggable one.
   *
   * By creating a \`dragControls\` using the \`useDragControls\` hook, we can pass this into
   * the draggable component's \`dragControls\` prop. It exposes a \`start\` method
   * that can start dragging from pointer events on other components.
   *
   * \`\`\`jsx
   * const dragControls = useDragControls()
   *
   * function startDrag(event) {
   *   dragControls.start(event, { snapToCursor: true })
   * }
   *
   * return (
   *   <>
   *     <div onPointerDown={startDrag} />
   *     <motion.div drag="x" dragControls={dragControls} />
   *   </>
   * )
   * \`\`\`
   */
  dragControls?: DragControls;
  /**
   * If true, element will snap back to its origin when dragging ends.
   *
   * Enabling this is the equivalent of setting all \`dragConstraints\` axes to \`0\`
   * with \`dragElastic={1}\`, but when used together \`dragConstraints\` can define
   * a wider draggable area and \`dragSnapToOrigin\` will ensure the element
   * animates back to its origin on release.
   */
  dragSnapToOrigin?: boolean;
  /**
   * By default, if \`drag\` is defined on a component then an event listener will be attached
   * to automatically initiate dragging when a user presses down on it.
   *
   * By setting \`dragListener\` to \`false\`, this event listener will not be created.
   *
   * \`\`\`jsx
   * const dragControls = useDragControls()
   *
   * function startDrag(event) {
   *   dragControls.start(event, { snapToCursor: true })
   * }
   *
   * return (
   *   <>
   *     <div onPointerDown={startDrag} />
   *     <motion.div
   *       drag="x"
   *       dragControls={dragControls}
   *       dragListener={false}
   *     />
   *   </>
   * )
   * \`\`\`
   */
  dragListener?: boolean;
  /**
   * If \`dragConstraints\` is set to a React ref, this callback will call with the measured drag constraints.
   *
   * @public
   */
  onMeasureDragConstraints?: (constraints: BoundingBox) => BoundingBox | void;
  /**
   * Usually, dragging uses the layout project engine, and applies transforms to the underlying VisualElement.
   * Passing MotionValues as _dragX and _dragY instead applies drag updates to these motion values.
   * This allows you to manually control how updates from a drag gesture on an element is applied.
   *
   * @public
   */
  _dragX?: MotionValue<number>;
  /**
   * Usually, dragging uses the layout project engine, and applies transforms to the underlying VisualElement.
   * Passing MotionValues as _dragX and _dragY instead applies drag updates to these motion values.
   * This allows you to manually control how updates from a drag gesture on an element is applied.
   *
   * @public
   */
  _dragY?: MotionValue<number>;
}

/**
 * @public
 */
interface LayoutProps {
  /**
   * If \`true\`, this component will automatically animate to its new position when
   * its layout changes.
   *
   * \`\`\`jsx
   * <motion.div layout />
   * \`\`\`
   *
   * This will perform a layout animation using performant transforms. Part of this technique
   * involved animating an element's scale. This can introduce visual distortions on children,
   * \`boxShadow\` and \`borderRadius\`.
   *
   * To correct distortion on immediate children, add \`layout\` to those too.
   *
   * \`boxShadow\` and \`borderRadius\` will automatically be corrected if they are already being
   * animated on this component. Otherwise, set them directly via the \`initial\` prop.
   *
   * If \`layout\` is set to \`"position"\`, the size of the component will change instantly and
   * only its position will animate. If \`layout\` is set to \`"size"\`, the position of the
   * component will change instantly but its size will animate.
   *
   * If \`layout\` is set to \`"size"\`, the position of the component will change instantly and
   * only its size will animate.
   *
   * @public
   */
  layout?: boolean | "position" | "size";
  /**
   * Enable shared layout transitions between different components with the same \`layoutId\`.
   *
   * When a component with a layoutId is removed from the React tree, and then
   * added elsewhere, it will visually animate from the previous component's bounding box
   * and its latest animated values.
   *
   * \`\`\`jsx
   *   {items.map(item => (
   *      <motion.li layout>
   *         {item.name}
   *         {item.isSelected && <motion.div layoutId="underline" />}
   *      </motion.li>
   *   ))}
   * \`\`\`
   *
   * If the previous component remains in the tree it will crossfade with the new component.
   *
   * @public
   */
  layoutId?: string;
  /**
   * A callback that will fire when a layout animation on this component completes.
   *
   * @public
   */
  onLayoutAnimationComplete?(): void;
  /**
   * @public
   */
  layoutDependency?: any;
  /**
   * Wether a projection node should measure its scroll when it or its descendants update their layout.
   *
   * @public
   */
  layoutScroll?: boolean;
}

declare enum AnimationType {
  Animate = "animate",
  Hover = "whileHover",
  Tap = "whileTap",
  Drag = "whileDrag",
  Focus = "whileFocus",
  InView = "whileInView",
  Exit = "exit",
}

declare type AnimationDefinition =
  | VariantLabels
  | TargetAndTransition
  | TargetResolver;
declare type AnimationOptions$1 = {
  delay?: number;
  transitionOverride?: Transition;
  custom?: any;
  type?: AnimationType;
};
/**
 * @internal
 */
declare function animateVisualElement(
  visualElement: VisualElement,
  definition: AnimationDefinition,
  options?: AnimationOptions$1,
): Promise<void>;

declare type LayoutMeasureListener = (layout: Box, prevLayout?: Box) => void;
declare type BeforeLayoutMeasureListener = () => void;
declare type LayoutUpdateListener = (layout: Axis, prevLayout: Axis) => void;
declare type UpdateListener = (latest: ResolvedValues) => void;
declare type AnimationStartListener = (definition: AnimationDefinition) => void;
declare type AnimationCompleteListener = (
  definition: AnimationDefinition,
) => void;
declare type LayoutAnimationCompleteListener = () => void;
declare type SetAxisTargetListener = () => void;
declare type RenderListener = () => void;
interface LayoutLifecycles {
  onBeforeLayoutMeasure?(box: Box): void;
  onLayoutMeasure?(box: Box, prevBox: Box): void;
  /**
   * @internal
   */
  onLayoutAnimationComplete?(): void;
}
interface AnimationLifecycles {
  /**
   * Callback with latest motion values, fired max once per frame.
   *
   * \`\`\`jsx
   * function onUpdate(latest) {
   *   console.log(latest.x, latest.opacity)
   * }
   *
   * <motion.div animate={{ x: 100, opacity: 0 }} onUpdate={onUpdate} />
   * \`\`\`
   */
  onUpdate?(latest: ResolvedValues): void;
  /**
   * Callback when animation defined in \`animate\` begins.
   *
   * The provided callback will be called with the triggering animation definition.
   * If this is a variant, it'll be the variant name, and if a target object
   * then it'll be the target object.
   *
   * This way, it's possible to figure out which animation has started.
   *
   * \`\`\`jsx
   * function onStart() {
   *   console.log("Animation started")
   * }
   *
   * <motion.div animate={{ x: 100 }} onAnimationStart={onStart} />
   * \`\`\`
   */
  onAnimationStart?(definition: AnimationDefinition): void;
  /**
   * Callback when animation defined in \`animate\` is complete.
   *
   * The provided callback will be called with the triggering animation definition.
   * If this is a variant, it'll be the variant name, and if a target object
   * then it'll be the target object.
   *
   * This way, it's possible to figure out which animation has completed.
   *
   * \`\`\`jsx
   * function onComplete() {
   *   console.log("Animation completed")
   * }
   *
   * <motion.div
   *   animate={{ x: 100 }}
   *   onAnimationComplete={definition => {
   *     console.log('Completed animating', definition)
   *   }}
   * />
   * \`\`\`
   */
  onAnimationComplete?(definition: AnimationDefinition): void;
  /**
   * @internal
   */
  onUnmount?(): void;
}
declare type VisualElementLifecycles = LayoutLifecycles & AnimationLifecycles;
interface LifecycleManager {
  onLayoutMeasure: (callback: LayoutMeasureListener) => () => void;
  notifyLayoutMeasure: LayoutMeasureListener;
  onBeforeLayoutMeasure: (callback: BeforeLayoutMeasureListener) => () => void;
  notifyBeforeLayoutMeasure: BeforeLayoutMeasureListener;
  onLayoutUpdate: (callback: LayoutUpdateListener) => () => void;
  notifyLayoutUpdate: LayoutUpdateListener;
  onUpdate: (callback: UpdateListener) => () => void;
  notifyUpdate: UpdateListener;
  onAnimationStart: (callback: AnimationStartListener) => () => void;
  notifyAnimationStart: AnimationStartListener;
  onAnimationComplete: (callback: AnimationCompleteListener) => () => void;
  notifyAnimationComplete: AnimationCompleteListener;
  onLayoutAnimationComplete: (
    callback: LayoutAnimationCompleteListener,
  ) => () => void;
  notifyLayoutAnimationComplete: LayoutAnimationCompleteListener;
  onSetAxisTarget: (callback: SetAxisTargetListener) => () => void;
  notifySetAxisTarget: SetAxisTargetListener;
  onRender: (callback: RenderListener) => () => void;
  notifyRender: RenderListener;
  onUnmount: (callback: () => void) => () => void;
  notifyUnmount: () => void;
  clearAllListeners: () => void;
  updatePropListeners: (props: MotionProps) => void;
}

/** @public */
interface EventInfo {
  point: Point;
}

/**
 * @public
 */
interface FocusHandlers {
  /**
   * Properties or variant label to animate to while the focus gesture is recognised.
   *
   * \`\`\`jsx
   * <motion.input whileFocus={{ scale: 1.2 }} />
   * \`\`\`
   */
  whileFocus?: VariantLabels | TargetAndTransition;
}
/**
 * Passed in to tap event handlers like \`onTap\` the \`TapInfo\` object contains
 * information about the tap gesture such as it\u2018s location.
 *
 * \`\`\`jsx
 * function onTap(event, info) {
 *   console.log(info.point.x, info.point.y)
 * }
 *
 * <motion.div onTap={onTap} />
 * \`\`\`
 *
 * @public
 */
interface TapInfo {
  /**
   * Contains \`x\` and \`y\` values for the tap gesture relative to the
   * device or page.
   *
   * \`\`\`jsx
   * function onTapStart(event, info) {
   *   console.log(info.point.x, info.point.y)
   * }
   *
   * <motion.div onTapStart={onTapStart} />
   * \`\`\`
   *
   * @public
   */
  point: Point;
}
/**
 * @public
 */
interface TapHandlers {
  /**
   * Callback when the tap gesture successfully ends on this element.
   *
   * \`\`\`jsx
   * function onTap(event, info) {
   *   console.log(info.point.x, info.point.y)
   * }
   *
   * <motion.div onTap={onTap} />
   * \`\`\`
   *
   * @param event - The originating pointer event.
   * @param info - An {@link TapInfo} object containing \`x\` and \`y\` values for the \`point\` relative to the device or page.
   */
  onTap?(event: MouseEvent | TouchEvent | PointerEvent, info: TapInfo): void;
  /**
   * Callback when the tap gesture starts on this element.
   *
   * \`\`\`jsx
   * function onTapStart(event, info) {
   *   console.log(info.point.x, info.point.y)
   * }
   *
   * <motion.div onTapStart={onTapStart} />
   * \`\`\`
   *
   * @param event - The originating pointer event.
   * @param info - An {@link TapInfo} object containing \`x\` and \`y\` values for the \`point\` relative to the device or page.
   */
  onTapStart?(
    event: MouseEvent | TouchEvent | PointerEvent,
    info: TapInfo,
  ): void;
  /**
   * Callback when the tap gesture ends outside this element.
   *
   * \`\`\`jsx
   * function onTapCancel(event, info) {
   *   console.log(info.point.x, info.point.y)
   * }
   *
   * <motion.div onTapCancel={onTapCancel} />
   * \`\`\`
   *
   * @param event - The originating pointer event.
   * @param info - An {@link TapInfo} object containing \`x\` and \`y\` values for the \`point\` relative to the device or page.
   */
  onTapCancel?(
    event: MouseEvent | TouchEvent | PointerEvent,
    info: TapInfo,
  ): void;
  /**
   * Properties or variant label to animate to while the component is pressed.
   *
   * \`\`\`jsx
   * <motion.div whileTap={{ scale: 0.8 }} />
   * \`\`\`
   */
  whileTap?: VariantLabels | TargetAndTransition;
}
/**
 * @public
 */
interface PanHandlers {
  /**
   * Callback function that fires when the pan gesture is recognised on this element.
   *
   * **Note:** For pan gestures to work correctly with touch input, the element needs
   * touch scrolling to be disabled on either x/y or both axis with the
   * [touch-action](https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action) CSS rule.
   *
   * \`\`\`jsx
   * function onPan(event, info) {
   *   console.log(info.point.x, info.point.y)
   * }
   *
   * <motion.div onPan={onPan} />
   * \`\`\`
   *
   * @param event - The originating pointer event.
   * @param info - A {@link PanInfo} object containing \`x\` and \`y\` values for:
   *
   *   - \`point\`: Relative to the device or page.
   *   - \`delta\`: Distance moved since the last event.
   *   - \`offset\`: Offset from the original pan event.
   *   - \`velocity\`: Current velocity of the pointer.
   */
  onPan?(event: MouseEvent | TouchEvent | PointerEvent, info: PanInfo): void;
  /**
   * Callback function that fires when the pan gesture begins on this element.
   *
   * \`\`\`jsx
   * function onPanStart(event, info) {
   *   console.log(info.point.x, info.point.y)
   * }
   *
   * <motion.div onPanStart={onPanStart} />
   * \`\`\`
   *
   * @param event - The originating pointer event.
   * @param info - A {@link PanInfo} object containing \`x\`/\`y\` values for:
   *
   *   - \`point\`: Relative to the device or page.
   *   - \`delta\`: Distance moved since the last event.
   *   - \`offset\`: Offset from the original pan event.
   *   - \`velocity\`: Current velocity of the pointer.
   */
  onPanStart?(
    event: MouseEvent | TouchEvent | PointerEvent,
    info: PanInfo,
  ): void;
  /**
   * Callback function that fires when we begin detecting a pan gesture. This
   * is analogous to \`onMouseStart\` or \`onTouchStart\`.
   *
   * \`\`\`jsx
   * function onPanSessionStart(event, info) {
   *   console.log(info.point.x, info.point.y)
   * }
   *
   * <motion.div onPanSessionStart={onPanSessionStart} />
   * \`\`\`
   *
   * @param event - The originating pointer event.
   * @param info - An {@link EventInfo} object containing \`x\`/\`y\` values for:
   *
   *   - \`point\`: Relative to the device or page.
   */
  onPanSessionStart?(
    event: MouseEvent | TouchEvent | PointerEvent,
    info: EventInfo,
  ): void;
  /**
   * Callback function that fires when the pan gesture ends on this element.
   *
   * \`\`\`jsx
   * function onPanEnd(event, info) {
   *   console.log(info.point.x, info.point.y)
   * }
   *
   * <motion.div onPanEnd={onPanEnd} />
   * \`\`\`
   *
   * @param event - The originating pointer event.
   * @param info - A {@link PanInfo} object containing \`x\`/\`y\` values for:
   *
   *   - \`point\`: Relative to the device or page.
   *   - \`delta\`: Distance moved since the last event.
   *   - \`offset\`: Offset from the original pan event.
   *   - \`velocity\`: Current velocity of the pointer.
   */
  onPanEnd?(event: MouseEvent | TouchEvent | PointerEvent, info: PanInfo): void;
}
/**
 * @public
 */
interface HoverHandlers {
  /**
   * Properties or variant label to animate to while the hover gesture is recognised.
   *
   * \`\`\`jsx
   * <motion.div whileHover={{ scale: 1.2 }} />
   * \`\`\`
   */
  whileHover?: VariantLabels | TargetAndTransition;
  /**
   * Callback function that fires when pointer starts hovering over the component.
   *
   * \`\`\`jsx
   * <motion.div onHoverStart={() => console.log('Hover starts')} />
   * \`\`\`
   */
  onHoverStart?(event: MouseEvent, info: EventInfo): void;
  /**
   * Callback function that fires when pointer stops hovering over the component.
   *
   * \`\`\`jsx
   * <motion.div onHoverEnd={() => console.log("Hover ends")} />
   * \`\`\`
   */
  onHoverEnd?(event: MouseEvent, info: EventInfo): void;
}

declare type ViewportEventHandler = (
  entry: IntersectionObserverEntry | null,
) => void;
interface ViewportOptions {
  root?: RefObject<Element>;
  once?: boolean;
  margin?: string;
  amount?: "some" | "all" | number;
  fallback?: boolean;
}
interface ViewportProps {
  whileInView?: VariantLabels | TargetAndTransition;
  onViewportEnter?: ViewportEventHandler;
  onViewportLeave?: ViewportEventHandler;
  viewport?: ViewportOptions;
}

/**
 * Either a string, or array of strings, that reference variants defined via the \`variants\` prop.
 * @public
 */
declare type VariantLabels = string | string[];
interface TransformProperties {
  x?: string | number;
  y?: string | number;
  z?: string | number;
  translateX?: string | number;
  translateY?: string | number;
  translateZ?: string | number;
  rotate?: string | number;
  rotateX?: string | number;
  rotateY?: string | number;
  rotateZ?: string | number;
  scale?: string | number;
  scaleX?: string | number;
  scaleY?: string | number;
  scaleZ?: string | number;
  skew?: string | number;
  skewX?: string | number;
  skewY?: string | number;
  originX?: string | number;
  originY?: string | number;
  originZ?: string | number;
  perspective?: string | number;
  transformPerspective?: string | number;
}
/**
 * @public
 */
interface SVGPathProperties {
  pathLength?: number;
  pathOffset?: number;
  pathSpacing?: number;
}
interface CustomStyles {
  /**
   * Framer Library custom prop types. These are not actually supported in Motion - preferably
   * we'd have a way of external consumers injecting supported styles into this library.
   */
  size?: string | number;
  radius?: string | number;
  shadow?: string;
  image?: string;
}
declare type MakeMotion<T> = MakeCustomValueType<
  {
    [K in keyof T]:
      | T[K]
      | MotionValue<number>
      | MotionValue<string>
      | MotionValue<any>;
  }
>;
declare type MotionCSS = MakeMotion<
  Omit$1<CSSProperties, "rotate" | "scale" | "perspective">
>;
/**
 * @public
 */
declare type MotionTransform = MakeMotion<TransformProperties>;
/**
 * @public
 */
declare type MotionStyle =
  & MotionCSS
  & MotionTransform
  & MakeMotion<SVGPathProperties>
  & MakeCustomValueType<CustomStyles>;
/**
 * @public
 */
interface RelayoutInfo {
  delta: {
    x: number;
    y: number;
    width: number;
    height: number;
  };
}
/**
 * @public
 */
declare type ResolveLayoutTransition = (
  info: RelayoutInfo,
) => Transition | boolean;
/**
 * @public
 */
interface AnimationProps {
  /**
   * Values to animate to, variant label(s), or \`AnimationControls\`.
   *
   * \`\`\`jsx
   * // As values
   * <motion.div animate={{ opacity: 1 }} />
   *
   * // As variant
   * <motion.div animate="visible" variants={variants} />
   *
   * // Multiple variants
   * <motion.div animate={["visible", "active"]} variants={variants} />
   *
   * // AnimationControls
   * <motion.div animate={animation} />
   * \`\`\`
   */
  animate?: AnimationControls | TargetAndTransition | VariantLabels | boolean;
  /**
   * A target to animate to when this component is removed from the tree.
   *
   * This component **must** be the first animatable child of an \`AnimatePresence\` to enable this exit animation.
   *
   * This limitation exists because React doesn't allow components to defer unmounting until after
   * an animation is complete. Once this limitation is fixed, the \`AnimatePresence\` component will be unnecessary.
   *
   * \`\`\`jsx
   * import { AnimatePresence, motion } from 'framer-motion'
   *
   * export const MyComponent = ({ isVisible }) => {
   *   return (
   *     <AnimatePresence>
   *        {isVisible && (
   *          <motion.div
   *            initial={{ opacity: 0 }}
   *            animate={{ opacity: 1 }}
   *            exit={{ opacity: 0 }}
   *          />
   *        )}
   *     </AnimatePresence>
   *   )
   * }
   * \`\`\`
   */
  exit?: TargetAndTransition | VariantLabels;
  /**
     * Variants allow you to define animation states and organise them by name. They allow
     * you to control animations throughout a component tree by switching a single \`animate\` prop.
     *
     * Using \`transition\` options like \`delayChildren\` and \`staggerChildren\`, you can orchestrate
     * when children animations play relative to their parent.

     *
     * After passing variants to one or more \`motion\` component's \`variants\` prop, these variants
     * can be used in place of values on the \`animate\`, \`initial\`, \`whileFocus\`, \`whileTap\` and \`whileHover\` props.
     *
     * \`\`\`jsx
     * const variants = {
     *   active: {
     *       backgroundColor: "#f00"
     *   },
     *   inactive: {
     *     backgroundColor: "#fff",
     *     transition: { duration: 2 }
     *   }
     * }
     *
     * <motion.div variants={variants} animate="active" />
     * \`\`\`
     */
  variants?: Variants;
  /**
   * Default transition. If no \`transition\` is defined in \`animate\`, it will use the transition defined here.
   * \`\`\`jsx
   * const spring = {
   *   type: "spring",
   *   damping: 10,
   *   stiffness: 100
   * }
   *
   * <motion.div transition={spring} animate={{ scale: 1.2 }} />
   * \`\`\`
   */
  transition?: Transition;
}
/**
 * @public
 */
interface MotionAdvancedProps {
  /**
   * Custom data to use to resolve dynamic variants differently for each animating component.
   *
   * \`\`\`jsx
   * const variants = {
   *   visible: (custom) => ({
   *     opacity: 1,
   *     transition: { delay: custom * 0.2 }
   *   })
   * }
   *
   * <motion.div custom={0} animate="visible" variants={variants} />
   * <motion.div custom={1} animate="visible" variants={variants} />
   * <motion.div custom={2} animate="visible" variants={variants} />
   * \`\`\`
   *
   * @public
   */
  custom?: any;
  /**
   * @public
   * Set to \`false\` to prevent inheriting variant changes from its parent.
   */
  inherit?: boolean;
}
/**
 * Props for \`motion\` components.
 *
 * @public
 */
interface MotionProps
  extends
    AnimationProps,
    VisualElementLifecycles,
    PanHandlers,
    TapHandlers,
    HoverHandlers,
    FocusHandlers,
    ViewportProps,
    DraggableProps,
    LayoutProps,
    MotionAdvancedProps {
  /**
   * Properties, variant label or array of variant labels to start in.
   *
   * Set to \`false\` to initialise with the values in \`animate\` (disabling the mount animation)
   *
   * \`\`\`jsx
   * // As values
   * <motion.div initial={{ opacity: 1 }} />
   *
   * // As variant
   * <motion.div initial="visible" variants={variants} />
   *
   * // Multiple variants
   * <motion.div initial={["visible", "active"]} variants={variants} />
   *
   * // As false (disable mount animation)
   * <motion.div initial={false} animate={{ opacity: 0 }} />
   * \`\`\`
   */
  initial?: boolean | Target | VariantLabels;
  /**
   * The React DOM \`style\` prop, enhanced with support for \`MotionValue\`s and separate \`transform\` values.
   *
   * \`\`\`jsx
   * export const MyComponent = () => {
   *   const x = useMotionValue(0)
   *
   *   return <motion.div style={{ x, opacity: 1, scale: 0.5 }} />
   * }
   * \`\`\`
   */
  style?: MotionStyle;
  /**
   * By default, Framer Motion generates a \`transform\` property with a sensible transform order. \`transformTemplate\`
   * can be used to create a different order, or to append/preprend the automatically generated \`transform\` property.
   *
   * \`\`\`jsx
   * <motion.div
   *   style={{ x: 0, rotate: 180 }}
   *   transformTemplate={
   *     ({ x, rotate }) => \`rotate(\${rotate}deg) translateX(\${x}px)\`
   *   }
   * />
   * \`\`\`
   *
   * @param transform - The latest animated transform props.
   * @param generatedTransform - The transform string as automatically generated by Framer Motion
   *
   * @public
   */
  transformTemplate?(
    transform: TransformProperties,
    generatedTransform: string,
  ): string;
  /**
   * This allows values to be transformed before being animated or set as styles.
   *
   * For instance, this allows custom values in Framer Library like \`size\` to be converted into \`width\` and \`height\`.
   * It also allows us a chance to take a value like \`Color\` and convert it to an animatable color string.
   *
   * A few structural typing changes need making before this can be a public property:
   * - Allow \`Target\` values to be appended by user-defined types (delete \`CustomStyles\` - does \`size\` throw a type error?)
   * - Extract \`CustomValueType\` as a separate user-defined type (delete \`CustomValueType\` and animate a \`Color\` - does this throw a type error?).
   *
   * @param values -
   *
   * @internal
   */
  transformValues?<V extends ResolvedValues>(values: V): V;
}

/**
 * @public
 */
declare type ResolvedKeyframesTarget = [null, ...number[]] | number[] | [
  null,
  ...string[],
] | string[];
/**
 * @public
 */
declare type KeyframesTarget = ResolvedKeyframesTarget | [
  null,
  ...CustomValueType[],
] | CustomValueType[];
/**
 * @public
 */
declare type ResolvedSingleTarget = string | number;
/**
 * @public
 */
declare type SingleTarget = ResolvedSingleTarget | CustomValueType;
/**
 * @public
 */
declare type ResolvedValueTarget =
  | ResolvedSingleTarget
  | ResolvedKeyframesTarget;
/**
 * @public
 */
declare type ValueTarget = SingleTarget | KeyframesTarget;
/**
 * A function that accepts a progress value between \`0\` and \`1\` and returns a
 * new one.
 *
 * \`\`\`jsx
 * <motion.div
 *   animate={{ opacity: 0 }}
 *   transition={{
 *     duration: 1,
 *     ease: progress => progress * progress
 *   }}
 * />
 * \`\`\`
 *
 * @public
 */
declare type EasingFunction = (v: number) => number;
/**
 * The easing function to use. Set as one of:
 *
 * - The name of an in-built easing function.
 * - An array of four numbers to define a cubic bezier curve.
 * - An easing function, that accepts and returns a progress value between \`0\` and \`1\`.
 *
 * @public
 */
declare type Easing =
  | [number, number, number, number]
  | "linear"
  | "easeIn"
  | "easeOut"
  | "easeInOut"
  | "circIn"
  | "circOut"
  | "circInOut"
  | "backIn"
  | "backOut"
  | "backInOut"
  | "anticipate"
  | EasingFunction;
/**
 * Options for orchestrating the timing of animations.
 *
 * @public
 */
interface Orchestration {
  /**
   * Delay the animation by this duration (in seconds). Defaults to \`0\`.
   *
   * @remarks
   * \`\`\`javascript
   * const transition = {
   *   delay: 0.2
   * }
   * \`\`\`
   *
   * @public
   */
  delay?: number;
  /**
   * Describes the relationship between the transition and its children. Set
   * to \`false\` by default.
   *
   * @remarks
   * When using variants, the transition can be scheduled in relation to its
   * children with either \`"beforeChildren"\` to finish this transition before
   * starting children transitions, \`"afterChildren"\` to finish children
   * transitions before starting this transition.
   *
   * \`\`\`jsx
   * const list = {
   *   hidden: {
   *     opacity: 0,
   *     transition: { when: "afterChildren" }
   *   }
   * }
   *
   * const item = {
   *   hidden: {
   *     opacity: 0,
   *     transition: { duration: 2 }
   *   }
   * }
   *
   * return (
   *   <motion.ul variants={list} animate="hidden">
   *     <motion.li variants={item} />
   *     <motion.li variants={item} />
   *   </motion.ul>
   * )
   * \`\`\`
   *
   * @public
   */
  when?: false | "beforeChildren" | "afterChildren" | string;
  /**
   * When using variants, children animations will start after this duration
   * (in seconds). You can add the \`transition\` property to both the \`Frame\` and the \`variant\` directly. Adding it to the \`variant\` generally offers more flexibility, as it allows you to customize the delay per visual state.
   *
   * \`\`\`jsx
   * const container = {
   *   hidden: { opacity: 0 },
   *   show: {
   *     opacity: 1,
   *     transition: {
   *       delayChildren: 0.5
   *     }
   *   }
   * }
   *
   * const item = {
   *   hidden: { opacity: 0 },
   *   show: { opacity: 1 }
   * }
   *
   * return (
   *   <motion.ul
   *     variants={container}
   *     initial="hidden"
   *     animate="show"
   *   >
   *     <motion.li variants={item} />
   *     <motion.li variants={item} />
   *   </motion.ul>
   * )
   * \`\`\`
   *
   * @public
   */
  delayChildren?: number;
  /**
   * When using variants, animations of child components can be staggered by this
   * duration (in seconds).
   *
   * For instance, if \`staggerChildren\` is \`0.01\`, the first child will be
   * delayed by \`0\` seconds, the second by \`0.01\`, the third by \`0.02\` and so
   * on.
   *
   * The calculated stagger delay will be added to \`delayChildren\`.
   *
   * \`\`\`jsx
   * const container = {
   *   hidden: { opacity: 0 },
   *   show: {
   *     opacity: 1,
   *     transition: {
   *       staggerChildren: 0.5
   *     }
   *   }
   * }
   *
   * const item = {
   *   hidden: { opacity: 0 },
   *   show: { opacity: 1 }
   * }
   *
   * return (
   *   <motion.ol
   *     variants={container}
   *     initial="hidden"
   *     animate="show"
   *   >
   *     <motion.li variants={item} />
   *     <motion.li variants={item} />
   *   </motion.ol>
   * )
   * \`\`\`
   *
   * @public
   */
  staggerChildren?: number;
  /**
   * The direction in which to stagger children.
   *
   * A value of \`1\` staggers from the first to the last while \`-1\`
   * staggers from the last to the first.
   *
   * \`\`\`jsx
   * const container = {
   *   hidden: { opacity: 0 },
   *   show: {
   *     opacity: 1,
   *     transition: {
   *       delayChildren: 0.5,
   *       staggerDirection: -1
   *     }
   *   }
   * }
   *
   * const item = {
   *   hidden: { opacity: 0 },
   *   show: { opacity: 1 }
   * }
   *
   * return (
   *   <motion.ul
   *     variants={container}
   *     initial="hidden"
   *     animate="show"
   *   >
   *     <motion.li variants={item} size={50} />
   *     <motion.li variants={item} size={50} />
   *   </motion.ul>
   * )
   * \`\`\`
   *
   * @public
   */
  staggerDirection?: number;
}
interface Repeat {
  /**
   * The number of times to repeat the transition. Set to \`Infinity\` for perpetual repeating.
   *
   * Without setting \`repeatType\`, this will loop the animation.
   *
   * \`\`\`jsx
   * <motion.div
   *   animate={{ rotate: 180 }}
   *   transition={{ repeat: Infinity, duration: 2 }}
   * />
   * \`\`\`
   *
   * @public
   */
  repeat?: number;
  /**
   * How to repeat the animation. This can be either:
   *
   * "loop": Repeats the animation from the start
   *
   * "reverse": Alternates between forward and backwards playback
   *
   * "mirror": Switches \`from\` and \`to\` alternately
   *
   * \`\`\`jsx
   * <motion.div
   *   animate={{ rotate: 180 }}
   *   transition={{
   *     repeat: 1,
   *     repeatType: "reverse",
   *     duration: 2
   *   }}
   * />
   * \`\`\`
   *
   * @public
   */
  repeatType?: "loop" | "reverse" | "mirror";
  /**
   * When repeating an animation, \`repeatDelay\` will set the
   * duration of the time to wait, in seconds, between each repetition.
   *
   * \`\`\`jsx
   * <motion.div
   *   animate={{ rotate: 180 }}
   *   transition={{ repeat: Infinity, repeatDelay: 1 }}
   * />
   * \`\`\`
   *
   * @public
   */
  repeatDelay?: number;
}
/**
 * An animation that animates between two or more values over a specific duration of time.
 * This is the default animation for non-physical values like \`color\` and \`opacity\`.
 *
 * @public
 */
interface Tween extends Repeat {
  /**
   * Set \`type\` to \`"tween"\` to use a duration-based tween animation.
   * If any non-orchestration \`transition\` values are set without a \`type\` property,
   * this is used as the default animation.
   *
   * \`\`\`jsx
   * <motion.path
   *   animate={{ pathLength: 1 }}
   *   transition={{ duration: 2, type: "tween" }}
   * />
   * \`\`\`
   *
   * @public
   */
  type?: "tween";
  /**
   * The duration of the tween animation. Set to \`0.3\` by default, 0r \`0.8\` if animating a series of keyframes.
   *
   * \`\`\`jsx
   * const variants = {
   *   visible: {
   *     opacity: 1,
   *     transition: { duration: 2 }
   *   }
   * }
   * \`\`\`
   *
   * @public
   */
  duration?: number;
  /**
   * The easing function to use. Set as one of the below.
   *
   * - The name of an existing easing function.
   *
   * - An array of four numbers to define a cubic bezier curve.
   *
   * - An easing function, that accepts and returns a value \`0-1\`.
   *
   * If the animating value is set as an array of multiple values for a keyframes
   * animation, \`ease\` can be set as an array of easing functions to set different easings between
   * each of those values.
   *
   * \`\`\`jsx
   * <motion.div
   *   animate={{ opacity: 0 }}
   *   transition={{ ease: [0.17, 0.67, 0.83, 0.67] }}
   * />
   * \`\`\`
   *
   * @public
   */
  ease?: Easing | Easing[];
  /**
   * The duration of time already elapsed in the animation. Set to \`0\` by
   * default.
   *
   * @internal
   */
  elapsed?: number;
  /**
   * When animating keyframes, \`times\` can be used to determine where in the animation each keyframe is reached.
   * Each value in \`times\` is a value between \`0\` and \`1\`, representing \`duration\`.
   *
   * There must be the same number of \`times\` as there are keyframes.
   * Defaults to an array of evenly-spread durations.
   *
   * \`\`\`jsx
   * <motion.div
   *   animate={{ scale: [0, 1, 0.5, 1] }}
   *   transition={{ times: [0, 0.1, 0.9, 1] }}
   * />
   * \`\`\`
   *
   * @public
   */
  times?: number[];
  /**
   * When animating keyframes, \`easings\` can be used to define easing functions between each keyframe. This array should be one item fewer than the number of keyframes, as these easings apply to the transitions between the keyframes.
   *
   * \`\`\`jsx
   * <motion.div
   *   animate={{ backgroundColor: ["#0f0", "#00f", "#f00"] }}
   *   transition={{ easings: ["easeIn", "easeOut"] }}
   * />
   * \`\`\`
   *
   * @public
   */
  easings?: Easing[];
  /**
   * The value to animate from.
   * By default, this is the current state of the animating value.
   *
   * \`\`\`jsx
   * <motion.div
   *   animate={{ rotate: 180 }}
   *   transition={{ from: 90, duration: 2 }}
   * />
   * \`\`\`
   *
   * @public
   */
  from?: number | string;
  /**
   * @internal
   */
  to?: number | string | ValueTarget;
  /**
   * @internal
   */
  velocity?: number;
  /**
   * @internal
   */
  delay?: number;
}
/**
 * An animation that simulates spring physics for realistic motion.
 * This is the default animation for physical values like \`x\`, \`y\`, \`scale\` and \`rotate\`.
 *
 * @public
 */
interface Spring extends Repeat {
  /**
   * Set \`type\` to \`"spring"\` to animate using spring physics for natural
   * movement. Type is set to \`"spring"\` by default.
   *
   * \`\`\`jsx
   * <motion.div
   *   animate={{ rotate: 180 }}
   *   transition={{ type: 'spring' }}
   * />
   * \`\`\`
   *
   * @public
   */
  type: "spring";
  /**
   * Stiffness of the spring. Higher values will create more sudden movement.
   * Set to \`100\` by default.
   *
   * \`\`\`jsx
   * <motion.section
   *   animate={{ rotate: 180 }}
   *   transition={{ type: 'spring', stiffness: 50 }}
   * />
   * \`\`\`
   *
   * @public
   */
  stiffness?: number;
  /**
   * Strength of opposing force. If set to 0, spring will oscillate
   * indefinitely. Set to \`10\` by default.
   *
   * \`\`\`jsx
   * <motion.a
   *   animate={{ rotate: 180 }}
   *   transition={{ type: 'spring', damping: 300 }}
   * />
   * \`\`\`
   *
   * @public
   */
  damping?: number;
  /**
   * Mass of the moving object. Higher values will result in more lethargic
   * movement. Set to \`1\` by default.
   *
   * \`\`\`jsx
   * <motion.feTurbulence
   *   animate={{ baseFrequency: 0.5 } as any}
   *   transition={{ type: "spring", mass: 0.5 }}
   * />
   * \`\`\`
   *
   * @public
   */
  mass?: number;
  /**
   * The duration of the animation, defined in seconds. Spring animations can be a maximum of 10 seconds.
   *
   * If \`bounce\` is set, this defaults to \`0.8\`.
   *
   * Note: \`duration\` and \`bounce\` will be overridden if \`stiffness\`, \`damping\` or \`mass\` are set.
   *
   * \`\`\`jsx
   * <motion.div
   *   animate={{ x: 100 }}
   *   transition={{ type: "spring", duration: 0.8 }}
   * />
   * \`\`\`
   *
   * @public
   */
  duration?: number;
  /**
   * \`bounce\` determines the "bounciness" of a spring animation.
   *
   * \`0\` is no bounce, and \`1\` is extremely bouncy.
   *
   * If \`duration\` is set, this defaults to \`0.25\`.
   *
   * Note: \`bounce\` and \`duration\` will be overridden if \`stiffness\`, \`damping\` or \`mass\` are set.
   *
   * \`\`\`jsx
   * <motion.div
   *   animate={{ x: 100 }}
   *   transition={{ type: "spring", bounce: 0.25 }}
   * />
   * \`\`\`
   *
   * @public
   */
  bounce?: number;
  /**
   * End animation if absolute speed (in units per second) drops below this
   * value and delta is smaller than \`restDelta\`. Set to \`0.01\` by default.
   *
   * \`\`\`jsx
   * <motion.div
   *   animate={{ rotate: 180 }}
   *   transition={{ type: 'spring', restSpeed: 0.5 }}
   * />
   * \`\`\`
   *
   * @public
   */
  restSpeed?: number;
  /**
   * End animation if distance is below this value and speed is below
   * \`restSpeed\`. When animation ends, spring gets \u201Csnapped\u201D to. Set to
   * \`0.01\` by default.
   *
   * \`\`\`jsx
   * <motion.div
   *   animate={{ rotate: 180 }}
   *   transition={{ type: 'spring', restDelta: 0.5 }}
   * />
   * \`\`\`
   *
   * @public
   */
  restDelta?: number;
  /**
   * The value to animate from.
   * By default, this is the initial state of the animating value.
   *
   * \`\`\`jsx
   * <motion.div
   *   animate={{ rotate: 180 }}
   *   transition={{ type: 'spring', from: 90 }}
   * />
   * \`\`\`
   *
   * @public
   */
  from?: number | string;
  /**
   * @internal
   */
  to?: number | string | ValueTarget;
  /**
   * The initial velocity of the spring. By default this is the current velocity of the component.
   *
   * \`\`\`jsx
   * <motion.div
   *   animate={{ rotate: 180 }}
   *   transition={{ type: 'spring', velocity: 2 }}
   * />
   * \`\`\`
   *
   * @public
   */
  velocity?: number;
  /**
   * @internal
   */
  delay?: number;
}
/**
 * An animation that decelerates a value based on its initial velocity,
 * usually used to implement inertial scrolling.
 *
 * Optionally, \`min\` and \`max\` boundaries can be defined, and inertia
 * will snap to these with a spring animation.
 *
 * This animation will automatically precalculate a target value,
 * which can be modified with the \`modifyTarget\` property.
 *
 * This allows you to add snap-to-grid or similar functionality.
 *
 * Inertia is also the animation used for \`dragTransition\`, and can be configured via that prop.
 *
 * @public
 */
interface Inertia {
  /**
   * Set \`type\` to animate using the inertia animation. Set to \`"tween"\` by
   * default. This can be used for natural deceleration, like momentum scrolling.
   *
   * \`\`\`jsx
   * <motion.div
   *   animate={{ rotate: 180 }}
   *   transition={{ type: "inertia", velocity: 50 }}
   * />
   * \`\`\`
   *
   * @public
   */
  type: "inertia";
  /**
   * A function that receives the automatically-calculated target and returns a new one. Useful for snapping the target to a grid.
   *
   * \`\`\`jsx
   * <motion.div
   *   drag
   *   dragTransition={{
   *     power: 0,
   *     // Snap calculated target to nearest 50 pixels
   *     modifyTarget: target => Math.round(target / 50) * 50
   *   }}
   * />
   * \`\`\`
   *
   * @public
   */
  modifyTarget?(v: number): number;
  /**
   * If \`min\` or \`max\` is set, this affects the stiffness of the bounce
   * spring. Higher values will create more sudden movement. Set to \`500\` by
   * default.
   *
   * \`\`\`jsx
   * <motion.div
   *   drag
   *   dragTransition={{
   *     min: 0,
   *     max: 100,
   *     bounceStiffness: 100
   *   }}
   * />
   * \`\`\`
   *
   * @public
   */
  bounceStiffness?: number;
  /**
   * If \`min\` or \`max\` is set, this affects the damping of the bounce spring.
   * If set to \`0\`, spring will oscillate indefinitely. Set to \`10\` by
   * default.
   *
   * \`\`\`jsx
   * <motion.div
   *   drag
   *   dragTransition={{
   *     min: 0,
   *     max: 100,
   *     bounceDamping: 8
   *   }}
   * />
   * \`\`\`
   *
   * @public
   */
  bounceDamping?: number;
  /**
   * A higher power value equals a further target. Set to \`0.8\` by default.
   *
   * \`\`\`jsx
   * <motion.div
   *   drag
   *   dragTransition={{ power: 0.2 }}
   * />
   * \`\`\`
   *
   * @public
   */
  power?: number;
  /**
   * Adjusting the time constant will change the duration of the
   * deceleration, thereby affecting its feel. Set to \`700\` by default.
   *
   * \`\`\`jsx
   * <motion.div
   *   drag
   *   dragTransition={{ timeConstant: 200 }}
   * />
   * \`\`\`
   *
   * @public
   */
  timeConstant?: number;
  /**
   * End the animation if the distance to the animation target is below this value, and the absolute speed is below \`restSpeed\`.
   * When the animation ends, the value gets snapped to the animation target. Set to \`0.01\` by default.
   * Generally the default values provide smooth animation endings, only in rare cases should you need to customize these.
   *
   * \`\`\`jsx
   * <motion.div
   *   drag
   *   dragTransition={{ restDelta: 10 }}
   * />
   * \`\`\`
   *
   * @public
   */
  restDelta?: number;
  /**
   * Minimum constraint. If set, the value will "bump" against this value (or immediately spring to it if the animation starts as less than this value).
   *
   * \`\`\`jsx
   * <motion.div
   *   drag
   *   dragTransition={{ min: 0, max: 100 }}
   * />
   * \`\`\`
   *
   * @public
   */
  min?: number;
  /**
   * Maximum constraint. If set, the value will "bump" against this value (or immediately snap to it, if the initial animation value exceeds this value).
   *
   * \`\`\`jsx
   * <motion.div
   *   drag
   *   dragTransition={{ min: 0, max: 100 }}
   * />
   * \`\`\`
   *
   * @public
   */
  max?: number;
  /**
   * The value to animate from. By default, this is the current state of the animating value.
   *
   * \`\`\`jsx
   * <Frame
   *   drag
   *   dragTransition={{ from: 50 }}
   * />
   * \`\`\`
   *
   * @public
   */
  from?: number | string;
  /**
   * The initial velocity of the animation.
   * By default this is the current velocity of the component.
   *
   * \`\`\`jsx
   * <motion.div
   *   animate={{ rotate: 180 }}
   *   transition={{ type: 'inertia', velocity: 200 }}
   * />
   * \`\`\`
   *
   * @public
   */
  velocity?: number;
  /**
   * @internal
   */
  delay?: number;
}
/**
 * Keyframes tweens between multiple \`values\`.
 *
 * These tweens can be arranged using the \`duration\`, \`easings\`, and \`times\` properties.
 *
 * @internalremarks
 * We could possibly make the \`type\` property redundant, if not for all animations
 * then for this one quite easily.
 *
 * @internal
 */
interface Keyframes {
  /**
   * Set \`type\` to \`"keyframes"\` to animate using the keyframes animation.
   * Set to \`"tween"\` by default. This can be used to animate between a series of values.
   *
   * @public
   */
  type: "keyframes";
  /**
   * An array of values to animate between.
   *
   * @internal
   */
  values: KeyframesTarget;
  /**
   * An array of numbers between 0 and 1, where \`1\` represents the \`total\` duration.
   *
   * Each value represents at which point during the animation each item in the animation target should be hit, so the array should be the same length as \`values\`.
   *
   * Defaults to an array of evenly-spread durations.
   *
   * @public
   */
  times?: number[];
  /**
   * An array of easing functions for each generated tween, or a single easing function applied to all tweens.
   *
   * This array should be one item less than \`values\`, as these easings apply to the transitions *between* the \`values\`.
   *
   * \`\`\`jsx
   * const transition = {
   *   backgroundColor: {
   *     type: 'keyframes',
   *     easings: ['circIn', 'circOut']
   *   }
   * }
   * \`\`\`
   *
   * @public
   */
  ease?: Easing | Easing[];
  /**
   * Popmotion's easing prop to define individual easings. \`ease\` will be mapped to this prop in keyframes animations.
   *
   * @internal
   */
  easings?: Easing | Easing[];
  /**
   * @internal
   */
  elapsed?: number;
  /**
   * The total duration of the animation. Set to \`0.3\` by default.
   *
   * \`\`\`jsx
   * const transition = {
   *   type: "keyframes",
   *   duration: 2
   * }
   *
   * <Frame
   *   animate={{ opacity: 0 }}
   *   transition={transition}
   * />
   * \`\`\`
   *
   * @public
   */
  duration?: number;
  /**
   * @public
   */
  repeatDelay?: number;
  /**
   * @internal
   */
  from?: number | string;
  /**
   * @internal
   */
  to?: number | string | ValueTarget;
  /**
   * @internal
   */
  velocity?: number;
  /**
   * @internal
   */
  delay?: number;
}
/**
 * @internal
 */
interface Just {
  type: "just";
  to?: number | string | ValueTarget;
  from?: number | string;
  delay?: number;
  velocity?: number;
}
/**
 * @public
 */
interface None {
  /**
   * Set \`type\` to \`false\` for an instant transition.
   *
   * @public
   */
  type: false;
  /**
   * @internal
   */
  from?: number | string;
  /**
   * @internal
   */
  delay?: number;
  /**
   * @internal
   */
  velocity?: number;
}
/**
 * @public
 */
declare type PermissiveTransitionDefinition = {
  [key: string]: any;
};
/**
 * @public
 */
declare type TransitionDefinition =
  | Tween
  | Spring
  | Keyframes
  | Inertia
  | Just
  | None
  | PermissiveTransitionDefinition;
declare type TransitionMap = Orchestration & {
  [key: string]: TransitionDefinition;
};
/**
 * Transition props
 *
 * @public
 */
declare type Transition =
  | (Orchestration & Repeat & TransitionDefinition)
  | (Orchestration & Repeat & TransitionMap);
declare type Omit$1<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
declare type CSSPropertiesWithoutTransitionOrSingleTransforms = Omit$1<
  CSSProperties,
  "transition" | "rotate" | "scale" | "perspective"
>;
declare type TargetProperties =
  & CSSPropertiesWithoutTransitionOrSingleTransforms
  & SVGAttributes<SVGElement>
  & TransformProperties
  & CustomStyles
  & SVGPathProperties;
/**
 * @public
 */
declare type MakeCustomValueType<T> = {
  [K in keyof T]: T[K] | CustomValueType;
};
/**
 * @public
 */
declare type Target = MakeCustomValueType<TargetProperties>;
/**
 * @public
 */
declare type MakeKeyframes<T> = {
  [K in keyof T]: T[K] | T[K][] | [null, ...T[K][]];
};
/**
 * @public
 */
declare type TargetWithKeyframes = MakeKeyframes<Target>;
/**
 * An object that specifies values to animate to. Each value may be set either as
 * a single value, or an array of values.
 *
 * It may also option contain these properties:
 *
 * - \`transition\`: Specifies transitions for all or individual values.
 * - \`transitionEnd\`: Specifies values to set when the animation finishes.
 *
 * \`\`\`jsx
 * const target = {
 *   x: "0%",
 *   opacity: 0,
 *   transition: { duration: 1 },
 *   transitionEnd: { display: "none" }
 * }
 * \`\`\`
 *
 * @public
 */
declare type TargetAndTransition = TargetWithKeyframes & {
  transition?: Transition;
  transitionEnd?: Target;
};
declare type TargetResolver = (
  custom: any,
  current: Target,
  velocity: Target,
) => TargetAndTransition | string;
/**
 * @public
 */
declare type Variant = TargetAndTransition | TargetResolver;
/**
 * @public
 */
declare type Variants = {
  [key: string]: Variant;
};
/**
 * @public
 */
interface CustomValueType {
  mix: (from: any, to: any) => (p: number) => number | string;
  toValue: () => number | string;
}

/**
 * Start animation on a MotionValue. This function is an interface between
 * Framer Motion and Popmotion
 *
 * @internal
 */
declare function startAnimation(
  key: string,
  value: MotionValue,
  target: ResolvedValueTarget,
  transition?: Transition,
): Promise<void>;

interface VisualState<Instance, RenderState> {
  renderState: RenderState;
  latestValues: ResolvedValues;
  mount?: (instance: Instance) => void;
}
declare type UseVisualState<Instance, RenderState> = (
  props: MotionProps,
  isStatic: boolean,
) => VisualState<Instance, RenderState>;
interface UseVisualStateConfig<Instance, RenderState> {
  scrapeMotionValuesFromProps: ScrapeMotionValuesFromProps;
  createRenderState: () => RenderState;
  onMount?: (
    props: MotionProps,
    instance: Instance,
    visualState: VisualState<Instance, RenderState>,
  ) => void;
}
declare const makeUseVisualState: <I, RS>(
  config: UseVisualStateConfig<I, RS>,
) => UseVisualState<I, RS>;

interface AnimationState {
  animateChanges: (
    options?: AnimationOptions$1,
    type?: AnimationType,
  ) => Promise<any>;
  setActive: (
    type: AnimationType,
    isActive: boolean,
    options?: AnimationOptions$1,
  ) => Promise<any>;
  setAnimateFunction: (fn: any) => void;
  isAnimated(key: string): boolean;
  getState: () => {
    [key: string]: AnimationTypeState;
  };
}
interface AnimationTypeState {
  isActive: boolean;
  protectedKeys: {
    [key: string]: true;
  };
  needsAnimating: {
    [key: string]: boolean;
  };
  prevResolvedValues: {
    [key: string]: any;
  };
  prevProp?: VariantLabels | TargetAndTransition;
}

declare class NodeStack {
  lead?: IProjectionNode;
  prevLead?: IProjectionNode;
  members: IProjectionNode[];
  add(node: IProjectionNode): void;
  remove(node: IProjectionNode): void;
  relegate(node: IProjectionNode): boolean;
  promote(node: IProjectionNode, preserveFollowOpacity?: boolean): void;
  exitAnimationComplete(): void;
  scheduleRender(): void;
  /**
   * Clear any leads that have been removed this render to prevent them from being
   * used in future animations and to prevent memory leaks
   */
  removeLeadSnapshot(): void;
}

/**
 * @public
 */
interface AnimationPlaybackControls {
  stop: () => void;
  isAnimating: () => boolean;
}
/**
 * @public
 */
interface AnimationPlaybackLifecycles<V> {
  onUpdate?: (latest: V) => void;
  onPlay?: () => void;
  onComplete?: () => void;
  onRepeat?: () => void;
  onStop?: () => void;
}
/**
 * @public
 */
declare type AnimationOptions<V> =
  & (Tween | Spring)
  & AnimationPlaybackLifecycles<V>
  & {
    delay?: number;
    type?: "tween" | "spring";
  };
/**
 * Animate a single value or a \`MotionValue\`.
 *
 * The first argument is either a \`MotionValue\` to animate, or an initial animation value.
 *
 * The second is either a value to animate to, or an array of keyframes to animate through.
 *
 * The third argument can be either tween or spring options, and optional lifecycle methods: \`onUpdate\`, \`onPlay\`, \`onComplete\`, \`onRepeat\` and \`onStop\`.
 *
 * Returns \`AnimationPlaybackControls\`, currently just a \`stop\` method.
 *
 * \`\`\`javascript
 * const x = useMotionValue(0)
 *
 * useEffect(() => {
 *   const controls = animate(x, 100, {
 *     type: "spring",
 *     stiffness: 2000,
 *     onComplete: v => {}
 *   })
 *
 *   return controls.stop
 * })
 * \`\`\`
 *
 * @public
 */
declare function animate<V>(
  from: MotionValue<V> | V,
  to: V | V[],
  transition?: AnimationOptions<V>,
): AnimationPlaybackControls;

interface WithDepth {
  depth: number;
}

declare class FlatTree {
  private children;
  private isDirty;
  add(child: WithDepth): void;
  remove(child: WithDepth): void;
  forEach(callback: (child: WithDepth) => void): void;
}

interface SwitchLayoutGroup {
  register?: (member: IProjectionNode) => void;
  deregister?: (member: IProjectionNode) => void;
}
declare type InitialPromotionConfig = {
  /**
   * The initial transition to use when the elements in this group mount (and automatically promoted).
   * Subsequent updates should provide a transition in the promote method.
   */
  transition?: Transition;
  /**
   * If the follow tree should preserve its opacity when the lead is promoted on mount
   */
  shouldPreserveFollowOpacity?: (member: IProjectionNode) => boolean;
};
declare type SwitchLayoutGroupContext =
  & SwitchLayoutGroup
  & InitialPromotionConfig;
/**
 * @internal
 */
declare const SwitchLayoutGroupContext: React$1.Context<
  SwitchLayoutGroupContext
>;

interface Snapshot {
  measured: Box;
  layout: Box;
  latestValues: ResolvedValues;
  isShared?: boolean;
}
interface Layout {
  measured: Box;
  actual: Box;
}
declare type LayoutEvents =
  | "willUpdate"
  | "didUpdate"
  | "beforeMeasure"
  | "measure"
  | "projectionUpdate"
  | "animationComplete";
interface IProjectionNode<I = unknown> {
  id: number | undefined;
  parent?: IProjectionNode;
  relativeParent?: IProjectionNode;
  root?: IProjectionNode;
  children: Set<IProjectionNode>;
  path: IProjectionNode[];
  nodes?: FlatTree;
  depth: number;
  instance: I;
  mount: (node: I, isLayoutDirty?: boolean) => void;
  unmount: () => void;
  options: ProjectionNodeOptions;
  setOptions(options: ProjectionNodeOptions): void;
  layout?: Layout;
  snapshot?: Snapshot;
  target?: Box;
  relativeTarget?: Box;
  targetDelta?: Delta;
  targetWithTransforms?: Box;
  scroll?: Point;
  treeScale?: Point;
  projectionDelta?: Delta;
  latestValues: ResolvedValues;
  isLayoutDirty: boolean;
  shouldResetTransform: boolean;
  prevTransformTemplateValue: string | undefined;
  isUpdateBlocked(): boolean;
  updateManuallyBlocked: boolean;
  updateBlockedByResize: boolean;
  blockUpdate(): void;
  unblockUpdate(): void;
  isUpdating: boolean;
  needsReset: boolean;
  startUpdate(): void;
  willUpdate(notifyListeners?: boolean): void;
  didUpdate(): void;
  measure(): Box;
  updateLayout(): void;
  updateSnapshot(): void;
  clearSnapshot(): void;
  updateScroll(): void;
  scheduleUpdateProjection(): void;
  scheduleCheckAfterUnmount(): void;
  checkUpdateFailed(): void;
  potentialNodes: Map<number, IProjectionNode>;
  sharedNodes: Map<string, NodeStack>;
  registerPotentialNode(id: number, node: IProjectionNode): void;
  registerSharedNode(id: string, node: IProjectionNode): void;
  getStack(): NodeStack | undefined;
  isVisible: boolean;
  hide(): void;
  show(): void;
  scheduleRender(notifyAll?: boolean): void;
  getClosestProjectingParent(): IProjectionNode | undefined;
  setTargetDelta(delta: Delta): void;
  resetTransform(): void;
  resetRotation(): void;
  applyTransform(box: Box, transformOnly?: boolean): Box;
  resolveTargetDelta(): void;
  calcProjection(): void;
  getProjectionStyles(styles?: MotionStyle): MotionStyle | undefined;
  clearMeasurements(): void;
  resetTree(): void;
  animationValues?: ResolvedValues;
  currentAnimation?: AnimationPlaybackControls;
  isTreeAnimating?: boolean;
  isAnimationBlocked?: boolean;
  isTreeAnimationBlocked: () => boolean;
  setAnimationOrigin(delta: Delta): void;
  startAnimation(transition: Transition): void;
  finishAnimation(): void;
  isLead(): boolean;
  promote(options?: {
    needsReset?: boolean;
    transition?: Transition;
    preserveFollowOpacity?: boolean;
  }): void;
  relegate(): boolean;
  resumeFrom?: IProjectionNode;
  resumingFrom?: IProjectionNode;
  isPresent?: boolean;
  addEventListener(name: LayoutEvents, handler: any): VoidFunction;
  notifyListeners(name: LayoutEvents, ...args: any): void;
  hasListeners(name: LayoutEvents): boolean;
  preserveOpacity?: boolean;
}
interface ProjectionNodeOptions {
  animate?: boolean;
  layoutScroll?: boolean;
  alwaysMeasureLayout?: boolean;
  scheduleRender?: VoidFunction;
  onExitComplete?: VoidFunction;
  animationType?: "size" | "position" | "both";
  layoutId?: string;
  layout?: boolean | string;
  visualElement?: VisualElement;
  crossfade?: boolean;
  transition?: Transition;
  initialPromotionConfig?: InitialPromotionConfig;
}

/**
 * @public
 */
interface MotionConfigContext {
  /**
   * @internal
   */
  transformPagePoint: TransformPoint;
  /**
   * Determines whether this is a static context ie the Framer canvas. If so,
   * it'll disable all dynamic functionality.
   *
   * @internal
   */
  isStatic: boolean;
  /**
   * Defines a new default transition for the entire tree.
   *
   * @public
   */
  transition?: Transition;
  /**
   * If true, will respect the device prefersReducedMotion setting by switching
   * transform animations off.
   *
   * @public
   */
  reducedMotion?: "always" | "never" | "user";
}
/**
 * @public
 */
declare const MotionConfigContext: React$1.Context<MotionConfigContext>;

declare type IsValidProp = (key: string) => boolean;
declare function filterProps(
  props: MotionProps,
  isDom: boolean,
  forwardMotionProps: boolean,
): {};

interface MotionConfigProps extends Partial<MotionConfigContext> {
  children?: React$1.ReactNode;
  isValidProp?: IsValidProp;
}
/**
 * \`MotionConfig\` is used to set configuration options for all children \`motion\` components.
 *
 * \`\`\`jsx
 * import { motion, MotionConfig } from "framer-motion"
 *
 * export function App() {
 *   return (
 *     <MotionConfig transition={{ type: "spring" }}>
 *       <motion.div animate={{ x: 100 }} />
 *     </MotionConfig>
 *   )
 * }
 * \`\`\`
 *
 * @public
 */
declare function MotionConfig(
  { children, isValidProp, ...config }: MotionConfigProps,
): JSX.Element;

interface VisualElement<Instance = any, RenderState = any>
  extends LifecycleManager {
  treeType: string;
  depth: number;
  parent?: VisualElement;
  children: Set<VisualElement>;
  variantChildren?: Set<VisualElement>;
  current: Instance | null;
  manuallyAnimateOnMount: boolean;
  blockInitialAnimation?: boolean;
  presenceId: number | undefined;
  isMounted(): boolean;
  mount(instance: Instance): void;
  unmount(): void;
  isStatic?: boolean;
  getInstance(): Instance | null;
  sortNodePosition(element: VisualElement): number;
  measureViewportBox(withTransform?: boolean): Box;
  addVariantChild(child: VisualElement): undefined | (() => void);
  getClosestVariantNode(): VisualElement | undefined;
  shouldReduceMotion?: boolean | null;
  animateMotionValue?: typeof startAnimation;
  projection?: IProjectionNode;
  /**
   * Visibility
   */
  isVisible?: boolean;
  setVisibility(visibility: boolean): void;
  hasValue(key: string): boolean;
  addValue(key: string, value: MotionValue<any>): void;
  removeValue(key: string): void;
  getValue(key: string): undefined | MotionValue;
  getValue(key: string, defaultValue: string | number): MotionValue;
  getValue(
    key: string,
    defaultValue?: string | number,
  ): undefined | MotionValue;
  forEachValue(callback: (value: MotionValue, key: string) => void): void;
  readValue(key: string): string | number | undefined | null;
  setBaseTarget(key: string, value: string | number | null): void;
  getBaseTarget(key: string): number | string | undefined | null;
  getStaticValue(key: string): number | string | undefined;
  setStaticValue(key: string, value: number | string): void;
  getLatestValues(): ResolvedValues;
  scheduleRender(): void;
  makeTargetAnimatable(
    target: TargetAndTransition,
    isLive?: boolean,
  ): TargetAndTransition;
  setProps(props: MotionProps): void;
  getProps(): MotionProps;
  getVariant(name: string): Variant | undefined;
  getDefaultTransition(): Transition | undefined;
  getVariantContext(startAtParent?: boolean): undefined | {
    initial?: string | string[];
    animate?: string | string[];
    exit?: string | string[];
    whileHover?: string | string[];
    whileDrag?: string | string[];
    whileFocus?: string | string[];
    whileTap?: string | string[];
  };
  getTransformPagePoint: () => TransformPoint | undefined;
  build(): RenderState;
  syncRender(): void;
  isPresenceRoot?: boolean;
  isPresent?: boolean;
  prevDragCursor?: Point;
  getLayoutId(): string | undefined;
  animationState?: AnimationState;
}
interface VisualElementConfig<Instance, RenderState, Options> {
  treeType?: string;
  getBaseTarget?(
    props: MotionProps,
    key: string,
  ): string | number | undefined | MotionValue;
  build(
    visualElement: VisualElement<Instance>,
    renderState: RenderState,
    latestValues: ResolvedValues,
    options: Options,
    props: MotionProps,
  ): void;
  sortNodePosition?: (a: Instance, b: Instance) => number;
  makeTargetAnimatable(
    element: VisualElement<Instance>,
    target: TargetAndTransition,
    props: MotionProps,
    isLive: boolean,
  ): TargetAndTransition;
  measureViewportBox(
    instance: Instance,
    props: MotionProps & MotionConfigProps,
  ): Box;
  readValueFromInstance(
    instance: Instance,
    key: string,
    options: Options,
  ): string | number | null | undefined;
  resetTransform(
    element: VisualElement<Instance>,
    instance: Instance,
    props: MotionProps,
  ): void;
  restoreTransform(instance: Instance, renderState: RenderState): void;
  render(
    instance: Instance,
    renderState: RenderState,
    styleProp?: MotionStyle,
    projection?: IProjectionNode,
  ): void;
  removeValueFromRenderState(key: string, renderState: RenderState): void;
  scrapeMotionValuesFromProps: ScrapeMotionValuesFromProps;
}
declare type ScrapeMotionValuesFromProps = (props: MotionProps) => {
  [key: string]: MotionValue | string | number;
};
declare type VisualElementOptions<Instance, RenderState = any> = {
  visualState: VisualState<Instance, RenderState>;
  parent?: VisualElement<unknown>;
  variantParent?: VisualElement<unknown>;
  presenceId?: number | undefined;
  props: MotionProps;
  blockInitialAnimation?: boolean;
  shouldReduceMotion?: boolean | null;
};
declare type CreateVisualElement<Instance> = (
  Component: string | React$1.ComponentType,
  options: VisualElementOptions<Instance>,
) => VisualElement<Instance>;
/**
 * A generic set of string/number values
 */
interface ResolvedValues {
  [key: string]: string | number;
}

declare type UnionStringArray$1<T extends Readonly<string[]>> = T[number];
/**
 * @internal
 */
declare const svgElements: readonly [
  "animate",
  "circle",
  "defs",
  "desc",
  "ellipse",
  "g",
  "image",
  "line",
  "filter",
  "marker",
  "mask",
  "metadata",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "rect",
  "stop",
  "svg",
  "switch",
  "symbol",
  "text",
  "tspan",
  "use",
  "view",
  "clipPath",
  "feBlend",
  "feColorMatrix",
  "feComponentTransfer",
  "feComposite",
  "feConvolveMatrix",
  "feDiffuseLighting",
  "feDisplacementMap",
  "feDistantLight",
  "feDropShadow",
  "feFlood",
  "feFuncA",
  "feFuncB",
  "feFuncG",
  "feFuncR",
  "feGaussianBlur",
  "feImage",
  "feMerge",
  "feMergeNode",
  "feMorphology",
  "feOffset",
  "fePointLight",
  "feSpecularLighting",
  "feSpotLight",
  "feTile",
  "feTurbulence",
  "foreignObject",
  "linearGradient",
  "radialGradient",
  "textPath",
];
declare type SVGElements = UnionStringArray$1<typeof svgElements>;

declare type UnionStringArray<T extends Readonly<string[]>> = T[number];
/**
 * @internal
 */
declare const htmlElements: readonly [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  "webview",
];
declare type HTMLElements = UnionStringArray<typeof htmlElements>;

/**
 * @public
 */
declare type ForwardRefComponent<T, P> = ForwardRefExoticComponent<
  PropsWithoutRef<P> & RefAttributes<T>
>;
/**
 * Support for React component props
 */
declare type UnwrapFactoryAttributes<F> = F extends
  DetailedHTMLFactory<infer P, any> ? P : never;
declare type UnwrapFactoryElement<F> = F extends
  DetailedHTMLFactory<any, infer P> ? P : never;
declare type HTMLAttributesWithoutMotionProps<
  Attributes extends HTMLAttributes<Element>,
  Element extends HTMLElement,
> = {
  [K in Exclude<keyof Attributes, keyof MotionProps>]?: Attributes[K];
};
/**
 * @public
 */
declare type HTMLMotionProps<TagName extends keyof ReactHTML> =
  & HTMLAttributesWithoutMotionProps<
    UnwrapFactoryAttributes<ReactHTML[TagName]>,
    UnwrapFactoryElement<ReactHTML[TagName]>
  >
  & MotionProps;
/**
 * Motion-optimised versions of React's HTML components.
 *
 * @public
 */
declare type HTMLMotionComponents = {
  [K in HTMLElements]: ForwardRefComponent<
    UnwrapFactoryElement<ReactHTML[K]>,
    HTMLMotionProps<K>
  >;
};

interface SVGAttributesWithoutMotionProps<T>
  extends
    Pick<SVGAttributes<T>, Exclude<keyof SVGAttributes<T>, keyof MotionProps>> {
}
/**
 * Blanket-accept any SVG attribute as a \`MotionValue\`
 * @public
 */
declare type SVGAttributesAsMotionValues<T> = MakeMotion<
  SVGAttributesWithoutMotionProps<T>
>;
declare type UnwrapSVGFactoryElement<F> = F extends React.SVGProps<infer P> ? P
  : never;
/**
 * @public
 */
interface SVGMotionProps<T>
  extends SVGAttributesAsMotionValues<T>, MotionProps {
}
/**
 * Motion-optimised versions of React's SVG components.
 *
 * @public
 */
declare type SVGMotionComponents = {
  [K in SVGElements]: ForwardRefComponent<
    UnwrapSVGFactoryElement<JSX.IntrinsicElements[K]>,
    SVGMotionProps<UnwrapSVGFactoryElement<JSX.IntrinsicElements[K]>>
  >;
};

/**
 * @public
 */
interface FeatureProps extends MotionProps {
  visualElement: VisualElement;
}
declare type FeatureNames = {
  animation: true;
  exit: true;
  drag: true;
  tap: true;
  focus: true;
  hover: true;
  pan: true;
  inView: true;
  measureLayout: true;
};
declare type FeatureComponent = React$1.ComponentType<FeatureProps>;
/**
 * @public
 */
interface FeatureDefinition {
  isEnabled: (props: MotionProps) => boolean;
  Component?: FeatureComponent;
}
interface FeatureComponents {
  animation?: FeatureComponent;
  exit?: FeatureComponent;
  drag?: FeatureComponent;
  tap?: FeatureComponent;
  focus?: FeatureComponent;
  hover?: FeatureComponent;
  pan?: FeatureComponent;
  inView?: FeatureComponent;
  measureLayout?: FeatureComponent;
}
interface FeatureBundle extends FeatureComponents {
  renderer: CreateVisualElement<any>;
  projectionNodeConstructor?: any;
}
declare type LazyFeatureBundle$1 = () => Promise<FeatureBundle>;
declare type FeatureDefinitions = {
  [K in keyof FeatureNames]: FeatureDefinition;
};
declare type LoadedFeatures = FeatureDefinitions & {
  projectionNodeConstructor?: any;
};
declare type RenderComponent<Instance, RenderState> = (
  Component: string | React$1.ComponentType,
  props: MotionProps,
  projectionId: number | undefined,
  ref: React$1.Ref<Instance>,
  visualState: VisualState<Instance, RenderState>,
  isStatic: boolean,
  visualElement?: VisualElement,
) => any;

interface MotionComponentConfig<Instance, RenderState> {
  preloadedFeatures?: FeatureBundle;
  createVisualElement?: CreateVisualElement<Instance>;
  projectionNodeConstructor?: any;
  useRender: RenderComponent<Instance, RenderState>;
  useVisualState: UseVisualState<Instance, RenderState>;
  Component: string | React$1.ComponentType;
}
/**
 * Create a \`motion\` component.
 *
 * This function accepts a Component argument, which can be either a string (ie "div"
 * for \`motion.div\`), or an actual React component.
 *
 * Alongside this is a config option which provides a way of rendering the provided
 * component "offline", or outside the React render cycle.
 *
 * @internal
 */
declare function createMotionComponent<Props extends {}, Instance, RenderState>(
  {
    preloadedFeatures,
    createVisualElement,
    projectionNodeConstructor,
    useRender,
    useVisualState,
    Component,
  }: MotionComponentConfig<Instance, RenderState>,
): React$1.ForwardRefExoticComponent<
  React$1.PropsWithoutRef<Props & MotionProps> & React$1.RefAttributes<Instance>
>;

/**
 * I'd rather the return type of \`custom\` to be implicit but this throws
 * incorrect relative paths in the exported types and API Extractor throws
 * a wobbly.
 *
 * @internal
 */
declare type CustomDomComponent<Props> = React$1.ForwardRefExoticComponent<
  & React$1.PropsWithoutRef<Props & MotionProps>
  & React$1.RefAttributes<SVGElement | HTMLElement>
>;
interface CustomMotionComponentConfig {
  forwardMotionProps?: boolean;
}

declare type DOMMotionComponents = HTMLMotionComponents & SVGMotionComponents;

/**
 * HTML & SVG components, optimised for use with gestures and animation. These can be used as
 * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.
 *
 * @public
 */
declare const motion:
  & (<Props>(
    Component: string | React$1.ComponentType<Props>,
    customMotionComponentConfig?: CustomMotionComponentConfig,
  ) => CustomDomComponent<Props>)
  & HTMLMotionComponents
  & SVGMotionComponents;
/**
 * Create a DOM \`motion\` component with the provided string. This is primarily intended
 * as a full alternative to \`motion\` for consumers who have to support environments that don't
 * support \`Proxy\`.
 *
 * \`\`\`javascript
 * import { createDomMotionComponent } from "framer-motion"
 *
 * const motion = {
 *   div: createDomMotionComponent('div')
 * }
 * \`\`\`
 *
 * @public
 */
declare function createDomMotionComponent<T extends keyof DOMMotionComponents>(
  key: T,
): DOMMotionComponents[T];

/**
 * @public
 */
declare const m:
  & (<Props>(
    Component: string | React$1.ComponentType<Props>,
    customMotionComponentConfig?: CustomMotionComponentConfig,
  ) => CustomDomComponent<Props>)
  & HTMLMotionComponents
  & SVGMotionComponents;

/**
 * @public
 */
interface AnimatePresenceProps {
  /**
   * By passing \`initial={false}\`, \`AnimatePresence\` will disable any initial animations on children
   * that are present when the component is first rendered.
   *
   * \`\`\`jsx
   * <AnimatePresence initial={false}>
   *   {isVisible && (
   *     <motion.div
   *       key="modal"
   *       initial={{ opacity: 0 }}
   *       animate={{ opacity: 1 }}
   *       exit={{ opacity: 0 }}
   *     />
   *   )}
   * </AnimatePresence>
   * \`\`\`
   *
   * @public
   */
  initial?: boolean;
  /**
   * When a component is removed, there's no longer a chance to update its props. So if a component's \`exit\`
   * prop is defined as a dynamic variant and you want to pass a new \`custom\` prop, you can do so via \`AnimatePresence\`.
   * This will ensure all leaving components animate using the latest data.
   *
   * @public
   */
  custom?: any;
  /**
   * Fires when all exiting nodes have completed animating out.
   *
   * @public
   */
  onExitComplete?: () => void;
  /**
   * If set to \`true\`, \`AnimatePresence\` will only render one component at a time. The exiting component
   * will finish its exit animation before the entering component is rendered.
   *
   * \`\`\`jsx
   * const MyComponent = ({ currentItem }) => (
   *   <AnimatePresence exitBeforeEnter>
   *     <motion.div key={currentItem} exit={{ opacity: 0 }} />
   *   </AnimatePresence>
   * )
   * \`\`\`
   *
   * @beta
   */
  exitBeforeEnter?: boolean;
  /**
   * Used in Framer to flag that sibling children *shouldn't* re-render as a result of a
   * child being removed.
   *
   * @internal
   */
  presenceAffectsLayout?: boolean;
}

/**
 * \`AnimatePresence\` enables the animation of components that have been removed from the tree.
 *
 * When adding/removing more than a single child, every child **must** be given a unique \`key\` prop.
 *
 * Any \`motion\` components that have an \`exit\` property defined will animate out when removed from
 * the tree.
 *
 * \`\`\`jsx
 * import { motion, AnimatePresence } from 'framer-motion'
 *
 * export const Items = ({ items }) => (
 *   <AnimatePresence>
 *     {items.map(item => (
 *       <motion.div
 *         key={item.id}
 *         initial={{ opacity: 0 }}
 *         animate={{ opacity: 1 }}
 *         exit={{ opacity: 0 }}
 *       />
 *     ))}
 *   </AnimatePresence>
 * )
 * \`\`\`
 *
 * You can sequence exit animations throughout a tree using variants.
 *
 * If a child contains multiple \`motion\` components with \`exit\` props, it will only unmount the child
 * once all \`motion\` components have finished animating out. Likewise, any components using
 * \`usePresence\` all need to call \`safeToRemove\`.
 *
 * @public
 */
declare const AnimatePresence: React$1.FunctionComponent<AnimatePresenceProps>;

declare const AnimateSharedLayout: React$1.FunctionComponent;

declare type LazyFeatureBundle = () => Promise<FeatureBundle>;
/**
 * @public
 */
interface LazyProps {
  children?: ReactNode;
  /**
   * Can be used to provide a feature bundle synchronously or asynchronously.
   *
   * \`\`\`jsx
   * // features.js
   * import { domAnimations } from "framer-motion"
   * export default domAnimations
   *
   * // index.js
   * import { LazyMotion, m } from "framer-motion"
   *
   * const loadFeatures = import("./features.js")
   *   .then(res => res.default)
   *
   * function Component() {
   *   return (
   *     <LazyMotion features={loadFeatures}>
   *       <m.div animate={{ scale: 1.5 }} />
   *     </LazyMotion>
   *   )
   * }
   * \`\`\`
   *
   * @public
   */
  features: FeatureBundle | LazyFeatureBundle;
  /**
   * If \`true\`, will throw an error if a \`motion\` component renders within
   * a \`LazyMotion\` component.
   *
   * \`\`\`jsx
   * // This component will throw an error that explains using a motion component
   * // instead of the m component will break the benefits of code-splitting.
   * function Component() {
   *   return (
   *     <LazyMotion features={domAnimation} strict>
   *       <motion.div />
   *     </LazyMotion>
   *   )
   * }
   * \`\`\`
   *
   * @public
   */
  strict?: boolean;
}

/**
 * Used in conjunction with the \`m\` component to reduce bundle size.
 *
 * \`m\` is a version of the \`motion\` component that only loads functionality
 * critical for the initial render.
 *
 * \`LazyMotion\` can then be used to either synchronously or asynchronously
 * load animation and gesture support.
 *
 * \`\`\`jsx
 * // Synchronous loading
 * import { LazyMotion, m, domAnimations } from "framer-motion"
 *
 * function App() {
 *   return (
 *     <LazyMotion features={domAnimations}>
 *       <m.div animate={{ scale: 2 }} />
 *     </LazyMotion>
 *   )
 * }
 *
 * // Asynchronous loading
 * import { LazyMotion, m } from "framer-motion"
 *
 * function App() {
 *   return (
 *     <LazyMotion features={() => import('./path/to/domAnimations')}>
 *       <m.div animate={{ scale: 2 }} />
 *     </LazyMotion>
 *   )
 * }
 * \`\`\`
 *
 * @public
 */
declare function LazyMotion(
  { children, features, strict }: LazyProps,
): JSX.Element;

interface Props$2 {
  id?: string;
  inheritId?: boolean;
}
declare const LayoutGroup: React$1.FunctionComponent<Props$2>;

interface Props$1<V> {
  /**
   * A HTML element to render this component as. Defaults to \`"li"\`.
   *
   * @public
   */
  as?: keyof ReactHTML;
  /**
   * The value in the list that this component represents.
   *
   * @public
   */
  value: V;
}

interface Props<V> {
  /**
   * A HTML element to render this component as. Defaults to \`"ul"\`.
   *
   * @public
   */
  as?: keyof ReactHTML;
  /**
   * The axis to reorder along. By default, items will be draggable on this axis.
   * To make draggable on both axes, set \`<Reorder.Item drag />\`
   *
   * @public
   */
  axis?: "x" | "y";
  /**
   * A callback to fire with the new value order. For instance, if the values
   * are provided as a state from \`useState\`, this could be the set state function.
   *
   * @public
   */
  onReorder: (newOrder: any[]) => void;
  /**
   * The latest values state.
   *
   * \`\`\`jsx
   * function Component() {
   *   const [items, setItems] = useState([0, 1, 2])
   *
   *   return (
   *     <Reorder.Group values={items} onReorder={setItems}>
   *         {items.map((item) => <Reorder.Item key={item} value={item} />)}
   *     </Reorder.Group>
   *   )
   * }
   * \`\`\`
   *
   * @public
   */
  values: V[];
}

declare const Reorder: {
  Group: React$1.ForwardRefExoticComponent<
    & Props<unknown>
    & {
      color?: string | undefined;
      translate?: "no" | "yes" | undefined;
      hidden?: boolean | undefined;
      onPlay?: React$1.ReactEventHandler<any> | undefined;
      className?: string | undefined;
      id?: string | undefined;
      lang?: string | undefined;
      role?: React$1.AriaRole | undefined;
      tabIndex?: number | undefined;
      "aria-activedescendant"?: string | undefined;
      "aria-atomic"?: boolean | "false" | "true" | undefined;
      "aria-autocomplete"?: "none" | "inline" | "both" | "list" | undefined;
      "aria-busy"?: boolean | "false" | "true" | undefined;
      "aria-checked"?: boolean | "mixed" | "false" | "true" | undefined;
      "aria-colcount"?: number | undefined;
      "aria-colindex"?: number | undefined;
      "aria-colspan"?: number | undefined;
      "aria-controls"?: string | undefined;
      "aria-current"?:
        | boolean
        | "page"
        | "false"
        | "true"
        | "step"
        | "location"
        | "date"
        | "time"
        | undefined;
      "aria-describedby"?: string | undefined;
      "aria-details"?: string | undefined;
      "aria-disabled"?: boolean | "false" | "true" | undefined;
      "aria-dropeffect"?:
        | "none"
        | "copy"
        | "move"
        | "link"
        | "execute"
        | "popup"
        | undefined;
      "aria-errormessage"?: string | undefined;
      "aria-expanded"?: boolean | "false" | "true" | undefined;
      "aria-flowto"?: string | undefined;
      "aria-grabbed"?: boolean | "false" | "true" | undefined;
      "aria-haspopup"?:
        | boolean
        | "grid"
        | "listbox"
        | "menu"
        | "false"
        | "true"
        | "dialog"
        | "tree"
        | undefined;
      "aria-hidden"?: boolean | "false" | "true" | undefined;
      "aria-invalid"?:
        | boolean
        | "false"
        | "true"
        | "grammar"
        | "spelling"
        | undefined;
      "aria-keyshortcuts"?: string | undefined;
      "aria-label"?: string | undefined;
      "aria-labelledby"?: string | undefined;
      "aria-level"?: number | undefined;
      "aria-live"?: "off" | "assertive" | "polite" | undefined;
      "aria-modal"?: boolean | "false" | "true" | undefined;
      "aria-multiline"?: boolean | "false" | "true" | undefined;
      "aria-multiselectable"?: boolean | "false" | "true" | undefined;
      "aria-orientation"?: "horizontal" | "vertical" | undefined;
      "aria-owns"?: string | undefined;
      "aria-placeholder"?: string | undefined;
      "aria-posinset"?: number | undefined;
      "aria-pressed"?: boolean | "mixed" | "false" | "true" | undefined;
      "aria-readonly"?: boolean | "false" | "true" | undefined;
      "aria-relevant"?:
        | "all"
        | "text"
        | "additions"
        | "additions removals"
        | "additions text"
        | "removals"
        | "removals additions"
        | "removals text"
        | "text additions"
        | "text removals"
        | undefined;
      "aria-required"?: boolean | "false" | "true" | undefined;
      "aria-roledescription"?: string | undefined;
      "aria-rowcount"?: number | undefined;
      "aria-rowindex"?: number | undefined;
      "aria-rowspan"?: number | undefined;
      "aria-selected"?: boolean | "false" | "true" | undefined;
      "aria-setsize"?: number | undefined;
      "aria-sort"?: "none" | "ascending" | "descending" | "other" | undefined;
      "aria-valuemax"?: number | undefined;
      "aria-valuemin"?: number | undefined;
      "aria-valuenow"?: number | undefined;
      "aria-valuetext"?: string | undefined;
      children?: React$1.ReactNode;
      dangerouslySetInnerHTML?: {
        __html: string;
      } | undefined;
      onCopy?: React$1.ClipboardEventHandler<any> | undefined;
      onCopyCapture?: React$1.ClipboardEventHandler<any> | undefined;
      onCut?: React$1.ClipboardEventHandler<any> | undefined;
      onCutCapture?: React$1.ClipboardEventHandler<any> | undefined;
      onPaste?: React$1.ClipboardEventHandler<any> | undefined;
      onPasteCapture?: React$1.ClipboardEventHandler<any> | undefined;
      onCompositionEnd?: React$1.CompositionEventHandler<any> | undefined;
      onCompositionEndCapture?:
        | React$1.CompositionEventHandler<any>
        | undefined;
      onCompositionStart?: React$1.CompositionEventHandler<any> | undefined;
      onCompositionStartCapture?:
        | React$1.CompositionEventHandler<any>
        | undefined;
      onCompositionUpdate?: React$1.CompositionEventHandler<any> | undefined;
      onCompositionUpdateCapture?:
        | React$1.CompositionEventHandler<any>
        | undefined;
      onFocus?: React$1.FocusEventHandler<any> | undefined;
      onFocusCapture?: React$1.FocusEventHandler<any> | undefined;
      onBlur?: React$1.FocusEventHandler<any> | undefined;
      onBlurCapture?: React$1.FocusEventHandler<any> | undefined;
      onChange?: React$1.FormEventHandler<any> | undefined;
      onChangeCapture?: React$1.FormEventHandler<any> | undefined;
      onBeforeInput?: React$1.FormEventHandler<any> | undefined;
      onBeforeInputCapture?: React$1.FormEventHandler<any> | undefined;
      onInput?: React$1.FormEventHandler<any> | undefined;
      onInputCapture?: React$1.FormEventHandler<any> | undefined;
      onReset?: React$1.FormEventHandler<any> | undefined;
      onResetCapture?: React$1.FormEventHandler<any> | undefined;
      onSubmit?: React$1.FormEventHandler<any> | undefined;
      onSubmitCapture?: React$1.FormEventHandler<any> | undefined;
      onInvalid?: React$1.FormEventHandler<any> | undefined;
      onInvalidCapture?: React$1.FormEventHandler<any> | undefined;
      onLoad?: React$1.ReactEventHandler<any> | undefined;
      onLoadCapture?: React$1.ReactEventHandler<any> | undefined;
      onError?: React$1.ReactEventHandler<any> | undefined;
      onErrorCapture?: React$1.ReactEventHandler<any> | undefined;
      onKeyDown?: React$1.KeyboardEventHandler<any> | undefined;
      onKeyDownCapture?: React$1.KeyboardEventHandler<any> | undefined;
      onKeyPress?: React$1.KeyboardEventHandler<any> | undefined;
      onKeyPressCapture?: React$1.KeyboardEventHandler<any> | undefined;
      onKeyUp?: React$1.KeyboardEventHandler<any> | undefined;
      onKeyUpCapture?: React$1.KeyboardEventHandler<any> | undefined;
      onAbort?: React$1.ReactEventHandler<any> | undefined;
      onAbortCapture?: React$1.ReactEventHandler<any> | undefined;
      onCanPlay?: React$1.ReactEventHandler<any> | undefined;
      onCanPlayCapture?: React$1.ReactEventHandler<any> | undefined;
      onCanPlayThrough?: React$1.ReactEventHandler<any> | undefined;
      onCanPlayThroughCapture?: React$1.ReactEventHandler<any> | undefined;
      onDurationChange?: React$1.ReactEventHandler<any> | undefined;
      onDurationChangeCapture?: React$1.ReactEventHandler<any> | undefined;
      onEmptied?: React$1.ReactEventHandler<any> | undefined;
      onEmptiedCapture?: React$1.ReactEventHandler<any> | undefined;
      onEncrypted?: React$1.ReactEventHandler<any> | undefined;
      onEncryptedCapture?: React$1.ReactEventHandler<any> | undefined;
      onEnded?: React$1.ReactEventHandler<any> | undefined;
      onEndedCapture?: React$1.ReactEventHandler<any> | undefined;
      onLoadedData?: React$1.ReactEventHandler<any> | undefined;
      onLoadedDataCapture?: React$1.ReactEventHandler<any> | undefined;
      onLoadedMetadata?: React$1.ReactEventHandler<any> | undefined;
      onLoadedMetadataCapture?: React$1.ReactEventHandler<any> | undefined;
      onLoadStart?: React$1.ReactEventHandler<any> | undefined;
      onLoadStartCapture?: React$1.ReactEventHandler<any> | undefined;
      onPause?: React$1.ReactEventHandler<any> | undefined;
      onPauseCapture?: React$1.ReactEventHandler<any> | undefined;
      onPlayCapture?: React$1.ReactEventHandler<any> | undefined;
      onPlaying?: React$1.ReactEventHandler<any> | undefined;
      onPlayingCapture?: React$1.ReactEventHandler<any> | undefined;
      onProgress?: React$1.ReactEventHandler<any> | undefined;
      onProgressCapture?: React$1.ReactEventHandler<any> | undefined;
      onRateChange?: React$1.ReactEventHandler<any> | undefined;
      onRateChangeCapture?: React$1.ReactEventHandler<any> | undefined;
      onSeeked?: React$1.ReactEventHandler<any> | undefined;
      onSeekedCapture?: React$1.ReactEventHandler<any> | undefined;
      onSeeking?: React$1.ReactEventHandler<any> | undefined;
      onSeekingCapture?: React$1.ReactEventHandler<any> | undefined;
      onStalled?: React$1.ReactEventHandler<any> | undefined;
      onStalledCapture?: React$1.ReactEventHandler<any> | undefined;
      onSuspend?: React$1.ReactEventHandler<any> | undefined;
      onSuspendCapture?: React$1.ReactEventHandler<any> | undefined;
      onTimeUpdate?: React$1.ReactEventHandler<any> | undefined;
      onTimeUpdateCapture?: React$1.ReactEventHandler<any> | undefined;
      onVolumeChange?: React$1.ReactEventHandler<any> | undefined;
      onVolumeChangeCapture?: React$1.ReactEventHandler<any> | undefined;
      onWaiting?: React$1.ReactEventHandler<any> | undefined;
      onWaitingCapture?: React$1.ReactEventHandler<any> | undefined;
      onAuxClick?: React$1.MouseEventHandler<any> | undefined;
      onAuxClickCapture?: React$1.MouseEventHandler<any> | undefined;
      onClick?: React$1.MouseEventHandler<any> | undefined;
      onClickCapture?: React$1.MouseEventHandler<any> | undefined;
      onContextMenu?: React$1.MouseEventHandler<any> | undefined;
      onContextMenuCapture?: React$1.MouseEventHandler<any> | undefined;
      onDoubleClick?: React$1.MouseEventHandler<any> | undefined;
      onDoubleClickCapture?: React$1.MouseEventHandler<any> | undefined;
      onDragCapture?: React$1.DragEventHandler<any> | undefined;
      onDragEndCapture?: React$1.DragEventHandler<any> | undefined;
      onDragEnter?: React$1.DragEventHandler<any> | undefined;
      onDragEnterCapture?: React$1.DragEventHandler<any> | undefined;
      onDragExit?: React$1.DragEventHandler<any> | undefined;
      onDragExitCapture?: React$1.DragEventHandler<any> | undefined;
      onDragLeave?: React$1.DragEventHandler<any> | undefined;
      onDragLeaveCapture?: React$1.DragEventHandler<any> | undefined;
      onDragOver?: React$1.DragEventHandler<any> | undefined;
      onDragOverCapture?: React$1.DragEventHandler<any> | undefined;
      onDragStartCapture?: React$1.DragEventHandler<any> | undefined;
      onDrop?: React$1.DragEventHandler<any> | undefined;
      onDropCapture?: React$1.DragEventHandler<any> | undefined;
      onMouseDown?: React$1.MouseEventHandler<any> | undefined;
      onMouseDownCapture?: React$1.MouseEventHandler<any> | undefined;
      onMouseEnter?: React$1.MouseEventHandler<any> | undefined;
      onMouseLeave?: React$1.MouseEventHandler<any> | undefined;
      onMouseMove?: React$1.MouseEventHandler<any> | undefined;
      onMouseMoveCapture?: React$1.MouseEventHandler<any> | undefined;
      onMouseOut?: React$1.MouseEventHandler<any> | undefined;
      onMouseOutCapture?: React$1.MouseEventHandler<any> | undefined;
      onMouseOver?: React$1.MouseEventHandler<any> | undefined;
      onMouseOverCapture?: React$1.MouseEventHandler<any> | undefined;
      onMouseUp?: React$1.MouseEventHandler<any> | undefined;
      onMouseUpCapture?: React$1.MouseEventHandler<any> | undefined;
      onSelect?: React$1.ReactEventHandler<any> | undefined;
      onSelectCapture?: React$1.ReactEventHandler<any> | undefined;
      onTouchCancel?: React$1.TouchEventHandler<any> | undefined;
      onTouchCancelCapture?: React$1.TouchEventHandler<any> | undefined;
      onTouchEnd?: React$1.TouchEventHandler<any> | undefined;
      onTouchEndCapture?: React$1.TouchEventHandler<any> | undefined;
      onTouchMove?: React$1.TouchEventHandler<any> | undefined;
      onTouchMoveCapture?: React$1.TouchEventHandler<any> | undefined;
      onTouchStart?: React$1.TouchEventHandler<any> | undefined;
      onTouchStartCapture?: React$1.TouchEventHandler<any> | undefined;
      onPointerDown?: React$1.PointerEventHandler<any> | undefined;
      onPointerDownCapture?: React$1.PointerEventHandler<any> | undefined;
      onPointerMove?: React$1.PointerEventHandler<any> | undefined;
      onPointerMoveCapture?: React$1.PointerEventHandler<any> | undefined;
      onPointerUp?: React$1.PointerEventHandler<any> | undefined;
      onPointerUpCapture?: React$1.PointerEventHandler<any> | undefined;
      onPointerCancel?: React$1.PointerEventHandler<any> | undefined;
      onPointerCancelCapture?: React$1.PointerEventHandler<any> | undefined;
      onPointerEnter?: React$1.PointerEventHandler<any> | undefined;
      onPointerEnterCapture?: React$1.PointerEventHandler<any> | undefined;
      onPointerLeave?: React$1.PointerEventHandler<any> | undefined;
      onPointerLeaveCapture?: React$1.PointerEventHandler<any> | undefined;
      onPointerOver?: React$1.PointerEventHandler<any> | undefined;
      onPointerOverCapture?: React$1.PointerEventHandler<any> | undefined;
      onPointerOut?: React$1.PointerEventHandler<any> | undefined;
      onPointerOutCapture?: React$1.PointerEventHandler<any> | undefined;
      onGotPointerCapture?: React$1.PointerEventHandler<any> | undefined;
      onGotPointerCaptureCapture?: React$1.PointerEventHandler<any> | undefined;
      onLostPointerCapture?: React$1.PointerEventHandler<any> | undefined;
      onLostPointerCaptureCapture?:
        | React$1.PointerEventHandler<any>
        | undefined;
      onScroll?: React$1.UIEventHandler<any> | undefined;
      onScrollCapture?: React$1.UIEventHandler<any> | undefined;
      onWheel?: React$1.WheelEventHandler<any> | undefined;
      onWheelCapture?: React$1.WheelEventHandler<any> | undefined;
      onAnimationStartCapture?: React$1.AnimationEventHandler<any> | undefined;
      onAnimationEnd?: React$1.AnimationEventHandler<any> | undefined;
      onAnimationEndCapture?: React$1.AnimationEventHandler<any> | undefined;
      onAnimationIteration?: React$1.AnimationEventHandler<any> | undefined;
      onAnimationIterationCapture?:
        | React$1.AnimationEventHandler<any>
        | undefined;
      onTransitionEnd?: React$1.TransitionEventHandler<any> | undefined;
      onTransitionEndCapture?: React$1.TransitionEventHandler<any> | undefined;
      draggable?: (boolean | "false" | "true") | undefined;
      slot?: string | undefined;
      title?: string | undefined;
      defaultChecked?: boolean | undefined;
      defaultValue?: string | number | readonly string[] | undefined;
      suppressContentEditableWarning?: boolean | undefined;
      suppressHydrationWarning?: boolean | undefined;
      accessKey?: string | undefined;
      contentEditable?: "inherit" | (boolean | "false" | "true") | undefined;
      contextMenu?: string | undefined;
      dir?: string | undefined;
      placeholder?: string | undefined;
      spellCheck?: (boolean | "false" | "true") | undefined;
      radioGroup?: string | undefined;
      about?: string | undefined;
      datatype?: string | undefined;
      inlist?: any;
      prefix?: string | undefined;
      property?: string | undefined;
      resource?: string | undefined;
      typeof?: string | undefined;
      vocab?: string | undefined;
      autoCapitalize?: string | undefined;
      autoCorrect?: string | undefined;
      autoSave?: string | undefined;
      itemProp?: string | undefined;
      itemScope?: boolean | undefined;
      itemType?: string | undefined;
      itemID?: string | undefined;
      itemRef?: string | undefined;
      results?: number | undefined;
      security?: string | undefined;
      unselectable?: "off" | "on" | undefined;
      inputMode?:
        | "none"
        | "text"
        | "search"
        | "tel"
        | "url"
        | "email"
        | "numeric"
        | "decimal"
        | undefined;
      is?: string | undefined;
    }
    & MotionProps
    & React$1.RefAttributes<any>
  >;
  Item: React$1.ForwardRefExoticComponent<
    & Props$1<unknown>
    & {
      color?: string | undefined;
      translate?: "no" | "yes" | undefined;
      hidden?: boolean | undefined;
      onPlay?: React$1.ReactEventHandler<any> | undefined;
      className?: string | undefined;
      id?: string | undefined;
      lang?: string | undefined;
      role?: React$1.AriaRole | undefined;
      tabIndex?: number | undefined;
      "aria-activedescendant"?: string | undefined;
      "aria-atomic"?: boolean | "false" | "true" | undefined;
      "aria-autocomplete"?: "none" | "inline" | "both" | "list" | undefined;
      "aria-busy"?: boolean | "false" | "true" | undefined;
      "aria-checked"?: boolean | "mixed" | "false" | "true" | undefined;
      "aria-colcount"?: number | undefined;
      "aria-colindex"?: number | undefined;
      "aria-colspan"?: number | undefined;
      "aria-controls"?: string | undefined;
      "aria-current"?:
        | boolean
        | "page"
        | "false"
        | "true"
        | "step"
        | "location"
        | "date"
        | "time"
        | undefined;
      "aria-describedby"?: string | undefined;
      "aria-details"?: string | undefined;
      "aria-disabled"?: boolean | "false" | "true" | undefined;
      "aria-dropeffect"?:
        | "none"
        | "copy"
        | "move"
        | "link"
        | "execute"
        | "popup"
        | undefined;
      "aria-errormessage"?: string | undefined;
      "aria-expanded"?: boolean | "false" | "true" | undefined;
      "aria-flowto"?: string | undefined;
      "aria-grabbed"?: boolean | "false" | "true" | undefined;
      "aria-haspopup"?:
        | boolean
        | "grid"
        | "listbox"
        | "menu"
        | "false"
        | "true"
        | "dialog"
        | "tree"
        | undefined;
      "aria-hidden"?: boolean | "false" | "true" | undefined;
      "aria-invalid"?:
        | boolean
        | "false"
        | "true"
        | "grammar"
        | "spelling"
        | undefined;
      "aria-keyshortcuts"?: string | undefined;
      "aria-label"?: string | undefined;
      "aria-labelledby"?: string | undefined;
      "aria-level"?: number | undefined;
      "aria-live"?: "off" | "assertive" | "polite" | undefined;
      "aria-modal"?: boolean | "false" | "true" | undefined;
      "aria-multiline"?: boolean | "false" | "true" | undefined;
      "aria-multiselectable"?: boolean | "false" | "true" | undefined;
      "aria-orientation"?: "horizontal" | "vertical" | undefined;
      "aria-owns"?: string | undefined;
      "aria-placeholder"?: string | undefined;
      "aria-posinset"?: number | undefined;
      "aria-pressed"?: boolean | "mixed" | "false" | "true" | undefined;
      "aria-readonly"?: boolean | "false" | "true" | undefined;
      "aria-relevant"?:
        | "all"
        | "text"
        | "additions"
        | "additions removals"
        | "additions text"
        | "removals"
        | "removals additions"
        | "removals text"
        | "text additions"
        | "text removals"
        | undefined;
      "aria-required"?: boolean | "false" | "true" | undefined;
      "aria-roledescription"?: string | undefined;
      "aria-rowcount"?: number | undefined;
      "aria-rowindex"?: number | undefined;
      "aria-rowspan"?: number | undefined;
      "aria-selected"?: boolean | "false" | "true" | undefined;
      "aria-setsize"?: number | undefined;
      "aria-sort"?: "none" | "ascending" | "descending" | "other" | undefined;
      "aria-valuemax"?: number | undefined;
      "aria-valuemin"?: number | undefined;
      "aria-valuenow"?: number | undefined;
      "aria-valuetext"?: string | undefined;
      children?: React$1.ReactNode;
      dangerouslySetInnerHTML?: {
        __html: string;
      } | undefined;
      onCopy?: React$1.ClipboardEventHandler<any> | undefined;
      onCopyCapture?: React$1.ClipboardEventHandler<any> | undefined;
      onCut?: React$1.ClipboardEventHandler<any> | undefined;
      onCutCapture?: React$1.ClipboardEventHandler<any> | undefined;
      onPaste?: React$1.ClipboardEventHandler<any> | undefined;
      onPasteCapture?: React$1.ClipboardEventHandler<any> | undefined;
      onCompositionEnd?: React$1.CompositionEventHandler<any> | undefined;
      onCompositionEndCapture?:
        | React$1.CompositionEventHandler<any>
        | undefined;
      onCompositionStart?: React$1.CompositionEventHandler<any> | undefined;
      onCompositionStartCapture?:
        | React$1.CompositionEventHandler<any>
        | undefined;
      onCompositionUpdate?: React$1.CompositionEventHandler<any> | undefined;
      onCompositionUpdateCapture?:
        | React$1.CompositionEventHandler<any>
        | undefined;
      onFocus?: React$1.FocusEventHandler<any> | undefined;
      onFocusCapture?: React$1.FocusEventHandler<any> | undefined;
      onBlur?: React$1.FocusEventHandler<any> | undefined;
      onBlurCapture?: React$1.FocusEventHandler<any> | undefined;
      onChange?: React$1.FormEventHandler<any> | undefined;
      onChangeCapture?: React$1.FormEventHandler<any> | undefined;
      onBeforeInput?: React$1.FormEventHandler<any> | undefined;
      onBeforeInputCapture?: React$1.FormEventHandler<any> | undefined;
      onInput?: React$1.FormEventHandler<any> | undefined;
      onInputCapture?: React$1.FormEventHandler<any> | undefined;
      onReset?: React$1.FormEventHandler<any> | undefined;
      onResetCapture?: React$1.FormEventHandler<any> | undefined;
      onSubmit?: React$1.FormEventHandler<any> | undefined;
      onSubmitCapture?: React$1.FormEventHandler<any> | undefined;
      onInvalid?: React$1.FormEventHandler<any> | undefined;
      onInvalidCapture?: React$1.FormEventHandler<any> | undefined;
      onLoad?: React$1.ReactEventHandler<any> | undefined;
      onLoadCapture?: React$1.ReactEventHandler<any> | undefined;
      onError?: React$1.ReactEventHandler<any> | undefined;
      onErrorCapture?: React$1.ReactEventHandler<any> | undefined;
      onKeyDown?: React$1.KeyboardEventHandler<any> | undefined;
      onKeyDownCapture?: React$1.KeyboardEventHandler<any> | undefined;
      onKeyPress?: React$1.KeyboardEventHandler<any> | undefined;
      onKeyPressCapture?: React$1.KeyboardEventHandler<any> | undefined;
      onKeyUp?: React$1.KeyboardEventHandler<any> | undefined;
      onKeyUpCapture?: React$1.KeyboardEventHandler<any> | undefined;
      onAbort?: React$1.ReactEventHandler<any> | undefined;
      onAbortCapture?: React$1.ReactEventHandler<any> | undefined;
      onCanPlay?: React$1.ReactEventHandler<any> | undefined;
      onCanPlayCapture?: React$1.ReactEventHandler<any> | undefined;
      onCanPlayThrough?: React$1.ReactEventHandler<any> | undefined;
      onCanPlayThroughCapture?: React$1.ReactEventHandler<any> | undefined;
      onDurationChange?: React$1.ReactEventHandler<any> | undefined;
      onDurationChangeCapture?: React$1.ReactEventHandler<any> | undefined;
      onEmptied?: React$1.ReactEventHandler<any> | undefined;
      onEmptiedCapture?: React$1.ReactEventHandler<any> | undefined;
      onEncrypted?: React$1.ReactEventHandler<any> | undefined;
      onEncryptedCapture?: React$1.ReactEventHandler<any> | undefined;
      onEnded?: React$1.ReactEventHandler<any> | undefined;
      onEndedCapture?: React$1.ReactEventHandler<any> | undefined;
      onLoadedData?: React$1.ReactEventHandler<any> | undefined;
      onLoadedDataCapture?: React$1.ReactEventHandler<any> | undefined;
      onLoadedMetadata?: React$1.ReactEventHandler<any> | undefined;
      onLoadedMetadataCapture?: React$1.ReactEventHandler<any> | undefined;
      onLoadStart?: React$1.ReactEventHandler<any> | undefined;
      onLoadStartCapture?: React$1.ReactEventHandler<any> | undefined;
      onPause?: React$1.ReactEventHandler<any> | undefined;
      onPauseCapture?: React$1.ReactEventHandler<any> | undefined;
      onPlayCapture?: React$1.ReactEventHandler<any> | undefined;
      onPlaying?: React$1.ReactEventHandler<any> | undefined;
      onPlayingCapture?: React$1.ReactEventHandler<any> | undefined;
      onProgress?: React$1.ReactEventHandler<any> | undefined;
      onProgressCapture?: React$1.ReactEventHandler<any> | undefined;
      onRateChange?: React$1.ReactEventHandler<any> | undefined;
      onRateChangeCapture?: React$1.ReactEventHandler<any> | undefined;
      onSeeked?: React$1.ReactEventHandler<any> | undefined;
      onSeekedCapture?: React$1.ReactEventHandler<any> | undefined;
      onSeeking?: React$1.ReactEventHandler<any> | undefined;
      onSeekingCapture?: React$1.ReactEventHandler<any> | undefined;
      onStalled?: React$1.ReactEventHandler<any> | undefined;
      onStalledCapture?: React$1.ReactEventHandler<any> | undefined;
      onSuspend?: React$1.ReactEventHandler<any> | undefined;
      onSuspendCapture?: React$1.ReactEventHandler<any> | undefined;
      onTimeUpdate?: React$1.ReactEventHandler<any> | undefined;
      onTimeUpdateCapture?: React$1.ReactEventHandler<any> | undefined;
      onVolumeChange?: React$1.ReactEventHandler<any> | undefined;
      onVolumeChangeCapture?: React$1.ReactEventHandler<any> | undefined;
      onWaiting?: React$1.ReactEventHandler<any> | undefined;
      onWaitingCapture?: React$1.ReactEventHandler<any> | undefined;
      onAuxClick?: React$1.MouseEventHandler<any> | undefined;
      onAuxClickCapture?: React$1.MouseEventHandler<any> | undefined;
      onClick?: React$1.MouseEventHandler<any> | undefined;
      onClickCapture?: React$1.MouseEventHandler<any> | undefined;
      onContextMenu?: React$1.MouseEventHandler<any> | undefined;
      onContextMenuCapture?: React$1.MouseEventHandler<any> | undefined;
      onDoubleClick?: React$1.MouseEventHandler<any> | undefined;
      onDoubleClickCapture?: React$1.MouseEventHandler<any> | undefined;
      onDragCapture?: React$1.DragEventHandler<any> | undefined;
      onDragEndCapture?: React$1.DragEventHandler<any> | undefined;
      onDragEnter?: React$1.DragEventHandler<any> | undefined;
      onDragEnterCapture?: React$1.DragEventHandler<any> | undefined;
      onDragExit?: React$1.DragEventHandler<any> | undefined;
      onDragExitCapture?: React$1.DragEventHandler<any> | undefined;
      onDragLeave?: React$1.DragEventHandler<any> | undefined;
      onDragLeaveCapture?: React$1.DragEventHandler<any> | undefined;
      onDragOver?: React$1.DragEventHandler<any> | undefined;
      onDragOverCapture?: React$1.DragEventHandler<any> | undefined;
      onDragStartCapture?: React$1.DragEventHandler<any> | undefined;
      onDrop?: React$1.DragEventHandler<any> | undefined;
      onDropCapture?: React$1.DragEventHandler<any> | undefined;
      onMouseDown?: React$1.MouseEventHandler<any> | undefined;
      onMouseDownCapture?: React$1.MouseEventHandler<any> | undefined;
      onMouseEnter?: React$1.MouseEventHandler<any> | undefined;
      onMouseLeave?: React$1.MouseEventHandler<any> | undefined;
      onMouseMove?: React$1.MouseEventHandler<any> | undefined;
      onMouseMoveCapture?: React$1.MouseEventHandler<any> | undefined;
      onMouseOut?: React$1.MouseEventHandler<any> | undefined;
      onMouseOutCapture?: React$1.MouseEventHandler<any> | undefined;
      onMouseOver?: React$1.MouseEventHandler<any> | undefined;
      onMouseOverCapture?: React$1.MouseEventHandler<any> | undefined;
      onMouseUp?: React$1.MouseEventHandler<any> | undefined;
      onMouseUpCapture?: React$1.MouseEventHandler<any> | undefined;
      onSelect?: React$1.ReactEventHandler<any> | undefined;
      onSelectCapture?: React$1.ReactEventHandler<any> | undefined;
      onTouchCancel?: React$1.TouchEventHandler<any> | undefined;
      onTouchCancelCapture?: React$1.TouchEventHandler<any> | undefined;
      onTouchEnd?: React$1.TouchEventHandler<any> | undefined;
      onTouchEndCapture?: React$1.TouchEventHandler<any> | undefined;
      onTouchMove?: React$1.TouchEventHandler<any> | undefined;
      onTouchMoveCapture?: React$1.TouchEventHandler<any> | undefined;
      onTouchStart?: React$1.TouchEventHandler<any> | undefined;
      onTouchStartCapture?: React$1.TouchEventHandler<any> | undefined;
      onPointerDown?: React$1.PointerEventHandler<any> | undefined;
      onPointerDownCapture?: React$1.PointerEventHandler<any> | undefined;
      onPointerMove?: React$1.PointerEventHandler<any> | undefined;
      onPointerMoveCapture?: React$1.PointerEventHandler<any> | undefined;
      onPointerUp?: React$1.PointerEventHandler<any> | undefined;
      onPointerUpCapture?: React$1.PointerEventHandler<any> | undefined;
      onPointerCancel?: React$1.PointerEventHandler<any> | undefined;
      onPointerCancelCapture?: React$1.PointerEventHandler<any> | undefined;
      onPointerEnter?: React$1.PointerEventHandler<any> | undefined;
      onPointerEnterCapture?: React$1.PointerEventHandler<any> | undefined;
      onPointerLeave?: React$1.PointerEventHandler<any> | undefined;
      onPointerLeaveCapture?: React$1.PointerEventHandler<any> | undefined;
      onPointerOver?: React$1.PointerEventHandler<any> | undefined;
      onPointerOverCapture?: React$1.PointerEventHandler<any> | undefined;
      onPointerOut?: React$1.PointerEventHandler<any> | undefined;
      onPointerOutCapture?: React$1.PointerEventHandler<any> | undefined;
      onGotPointerCapture?: React$1.PointerEventHandler<any> | undefined;
      onGotPointerCaptureCapture?: React$1.PointerEventHandler<any> | undefined;
      onLostPointerCapture?: React$1.PointerEventHandler<any> | undefined;
      onLostPointerCaptureCapture?:
        | React$1.PointerEventHandler<any>
        | undefined;
      onScroll?: React$1.UIEventHandler<any> | undefined;
      onScrollCapture?: React$1.UIEventHandler<any> | undefined;
      onWheel?: React$1.WheelEventHandler<any> | undefined;
      onWheelCapture?: React$1.WheelEventHandler<any> | undefined;
      onAnimationStartCapture?: React$1.AnimationEventHandler<any> | undefined;
      onAnimationEnd?: React$1.AnimationEventHandler<any> | undefined;
      onAnimationEndCapture?: React$1.AnimationEventHandler<any> | undefined;
      onAnimationIteration?: React$1.AnimationEventHandler<any> | undefined;
      onAnimationIterationCapture?:
        | React$1.AnimationEventHandler<any>
        | undefined;
      onTransitionEnd?: React$1.TransitionEventHandler<any> | undefined;
      onTransitionEndCapture?: React$1.TransitionEventHandler<any> | undefined;
      draggable?: (boolean | "false" | "true") | undefined;
      slot?: string | undefined;
      title?: string | undefined;
      defaultChecked?: boolean | undefined;
      defaultValue?: string | number | readonly string[] | undefined;
      suppressContentEditableWarning?: boolean | undefined;
      suppressHydrationWarning?: boolean | undefined;
      accessKey?: string | undefined;
      contentEditable?: "inherit" | (boolean | "false" | "true") | undefined;
      contextMenu?: string | undefined;
      dir?: string | undefined;
      placeholder?: string | undefined;
      spellCheck?: (boolean | "false" | "true") | undefined;
      radioGroup?: string | undefined;
      about?: string | undefined;
      datatype?: string | undefined;
      inlist?: any;
      prefix?: string | undefined;
      property?: string | undefined;
      resource?: string | undefined;
      typeof?: string | undefined;
      vocab?: string | undefined;
      autoCapitalize?: string | undefined;
      autoCorrect?: string | undefined;
      autoSave?: string | undefined;
      itemProp?: string | undefined;
      itemScope?: boolean | undefined;
      itemType?: string | undefined;
      itemID?: string | undefined;
      itemRef?: string | undefined;
      results?: number | undefined;
      security?: string | undefined;
      unselectable?: "off" | "on" | undefined;
      inputMode?:
        | "none"
        | "text"
        | "search"
        | "tel"
        | "url"
        | "email"
        | "numeric"
        | "decimal"
        | undefined;
      is?: string | undefined;
    }
    & MotionProps
    & React$1.RefAttributes<any>
  >;
};

declare const animations: FeatureComponents;

interface MotionContextProps {
  visualElement?: VisualElement;
  initial?: false | string | string[];
  animate?: string | string[];
}
declare const MotionContext: React$1.Context<MotionContextProps>;
declare function useVisualElementContext(): VisualElement<any, any> | undefined;

declare function checkTargetForNewValues(
  visualElement: VisualElement,
  target: TargetWithKeyframes,
  origin: ResolvedValues,
): void;

declare const createBox: () => Box;

declare function calcLength(axis: Axis): number;

declare function isDragActive(): boolean;

declare type EventListenerWithPointInfo = (
  e: MouseEvent | TouchEvent | PointerEvent,
  info: EventInfo,
) => void;
declare const wrapHandler: (
  handler: EventListenerWithPointInfo,
  shouldFilterPrimaryPointer?: boolean,
) => EventListener;

declare function addPointerEvent(
  target: EventTarget,
  eventName: string,
  handler: EventListenerWithPointInfo,
  options?: AddEventListenerOptions,
): () => void;

declare const isMotionValue: (value: any) => value is MotionValue<any>;

declare const isBrowser: boolean;

declare function useUnmountEffect(callback: () => void): void;

declare const useIsomorphicLayoutEffect: typeof useEffect;

declare function useForceUpdate(): [VoidFunction, number];

/**
 * @public
 */
declare const domAnimation: FeatureBundle;

/**
 * @public
 */
declare const domMax: FeatureBundle;

/**
 * Creates a \`MotionValue\` to track the state and velocity of a value.
 *
 * Usually, these are created automatically. For advanced use-cases, like use with \`useTransform\`, you can create \`MotionValue\`s externally and pass them into the animated component via the \`style\` prop.
 *
 * \`\`\`jsx
 * export const MyComponent = () => {
 *   const scale = useMotionValue(1)
 *
 *   return <motion.div style={{ scale }} />
 * }
 * \`\`\`
 *
 * @param initial - The initial state.
 *
 * @public
 */
declare function useMotionValue<T>(initial: T): MotionValue<T>;

/**
 * Combine multiple motion values into a new one using a string template literal.
 *
 * \`\`\`jsx
 * import {
 *   motion,
 *   useSpring,
 *   useMotionValue,
 *   useMotionTemplate
 * } from "framer-motion"
 *
 * function Component() {
 *   const shadowX = useSpring(0)
 *   const shadowY = useMotionValue(0)
 *   const shadow = useMotionTemplate\`drop-shadow(\${shadowX}px \${shadowY}px 20px rgba(0,0,0,0.3))\`
 *
 *   return <motion.div style={{ filter: shadow }} />
 * }
 * \`\`\`
 *
 * @public
 */
declare function useMotionTemplate(
  fragments: TemplateStringsArray,
  ...values: MotionValue[]
): MotionValue<string>;

/**
 * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself
 *
 * TODO: Remove and move to library
 *
 * @internal
 */
declare function resolveMotionValue(
  value?: string | number | CustomValueType | MotionValue,
): string | number;

/**
 * @public
 */
interface TransformOptions<T> {
  /**
   * Clamp values to within the given range. Defaults to \`true\`
   *
   * @public
   */
  clamp?: boolean;
  /**
   * Easing functions to use on the interpolations between each value in the input and output ranges.
   *
   * If provided as an array, the array must be one item shorter than the input and output ranges, as the easings apply to the transition **between** each.
   *
   * @public
   */
  ease?: Easing$1 | Easing$1[];
  /**
   * @internal
   */
  mixer?: (from: T, to: T) => (v: number) => any;
}
/**
 * Transforms numbers into other values by mapping them from an input range to an output range.
 * Returns the type of the input provided.
 *
 * @remarks
 *
 * Given an input range of \`[0, 200]\` and an output range of
 * \`[0, 1]\`, this function will return a value between \`0\` and \`1\`.
 * The input range must be a linear series of numbers. The output range
 * can be any supported value type, such as numbers, colors, shadows, arrays, objects and more.
 * Every value in the output range must be of the same type and in the same format.
 *
 * \`\`\`jsx
 * import * as React from "react"
 * import { transform } from "framer-motion"
 *
 * export function MyComponent() {
 *    const inputRange = [0, 200]
 *    const outputRange = [0, 1]
 *    const output = transform(100, inputRange, outputRange)
 *
 *    // Returns 0.5
 *    return <div>{output}</div>
 * }
 * \`\`\`
 *
 * @param inputValue - A number to transform between the input and output ranges.
 * @param inputRange - A linear series of numbers (either all increasing or decreasing).
 * @param outputRange - A series of numbers, colors, strings, or arrays/objects of those. Must be the same length as \`inputRange\`.
 * @param options - Clamp: Clamp values to within the given range. Defaults to \`true\`.
 *
 * @public
 */
declare function transform<T>(
  inputValue: number,
  inputRange: number[],
  outputRange: T[],
  options?: TransformOptions<T>,
): T;
/**
 * Transforms numbers into other values by mapping them from an input range to an output range.
 *
 * Given an input range of \`[0, 200]\` and an output range of
 * \`[0, 1]\`, this function will return a value between \`0\` and \`1\`.
 * The input range must be a linear series of numbers. The output range
 * can be any supported value type, such as numbers, colors, shadows, arrays, objects and more.
 * Every value in the output range must be of the same type and in the same format.
 *
 * \`\`\`jsx
 * import * as React from "react"
 * import { Frame, transform } from "framer"
 *
 * export function MyComponent() {
 *     const inputRange = [-200, -100, 100, 200]
 *     const outputRange = [0, 1, 1, 0]
 *     const convertRange = transform(inputRange, outputRange)
 *     const output = convertRange(-150)
 *
 *     // Returns 0.5
 *     return <div>{output}</div>
 * }
 *
 * \`\`\`
 *
 * @param inputRange - A linear series of numbers (either all increasing or decreasing).
 * @param outputRange - A series of numbers, colors or strings. Must be the same length as \`inputRange\`.
 * @param options - Clamp: clamp values to within the given range. Defaults to \`true\`.
 *
 * @public
 */
declare function transform<T>(
  inputRange: number[],
  outputRange: T[],
  options?: TransformOptions<T>,
): (inputValue: number) => T;

declare type InputRange = number[];
declare type SingleTransformer<I, O> = (input: I) => O;
declare type MultiTransformer<I, O> = (input: I[]) => O;
/**
 * Create a \`MotionValue\` that transforms the output of another \`MotionValue\` by mapping it from one range of values into another.
 *
 * @remarks
 *
 * Given an input range of \`[-200, -100, 100, 200]\` and an output range of
 * \`[0, 1, 1, 0]\`, the returned \`MotionValue\` will:
 *
 * - When provided a value between \`-200\` and \`-100\`, will return a value between \`0\` and  \`1\`.
 * - When provided a value between \`-100\` and \`100\`, will return \`1\`.
 * - When provided a value between \`100\` and \`200\`, will return a value between \`1\` and  \`0\`
 *
 * The input range must be a linear series of numbers. The output range
 * can be any value type supported by Framer Motion: numbers, colors, shadows, etc.
 *
 * Every value in the output range must be of the same type and in the same format.
 *
 * \`\`\`jsx
 * export const MyComponent = () => {
 *   const x = useMotionValue(0)
 *   const xRange = [-200, -100, 100, 200]
 *   const opacityRange = [0, 1, 1, 0]
 *   const opacity = useTransform(x, xRange, opacityRange)
 *
 *   return (
 *     <motion.div
 *       animate={{ x: 200 }}
 *       style={{ opacity, x }}
 *     />
 *   )
 * }
 * \`\`\`
 *
 * @param inputValue - \`MotionValue\`
 * @param inputRange - A linear series of numbers (either all increasing or decreasing)
 * @param outputRange - A series of numbers, colors or strings. Must be the same length as \`inputRange\`.
 * @param options -
 *
 *  - clamp: boolean. Clamp values to within the given range. Defaults to \`true\`
 *  - ease: EasingFunction[]. Easing functions to use on the interpolations between each value in the input and output ranges. If provided as an array, the array must be one item shorter than the input and output ranges, as the easings apply to the transition between each.
 *
 * @returns \`MotionValue\`
 *
 * @public
 */
declare function useTransform<I, O>(
  value: MotionValue<number>,
  inputRange: InputRange,
  outputRange: O[],
  options?: TransformOptions<O>,
): MotionValue<O>;
/**
 * Create a \`MotionValue\` that transforms the output of another \`MotionValue\` through a function.
 * In this example, \`y\` will always be double \`x\`.
 *
 * \`\`\`jsx
 * export const MyComponent = () => {
 *   const x = useMotionValue(10)
 *   const y = useTransform(x, value => value * 2)
 *
 *   return <motion.div style={{ x, y }} />
 * }
 * \`\`\`
 *
 * @param input - A \`MotionValue\` that will pass its latest value through \`transform\` to update the returned \`MotionValue\`.
 * @param transform - A function that accepts the latest value from \`input\` and returns a new value.
 * @returns \`MotionValue\`
 *
 * @public
 */
declare function useTransform<I, O>(
  input: MotionValue<I>,
  transformer: SingleTransformer<I, O>,
): MotionValue<O>;
/**
 * Pass an array of \`MotionValue\`s and a function to combine them. In this example, \`z\` will be the \`x\` multiplied by \`y\`.
 *
 * \`\`\`jsx
 * export const MyComponent = () => {
 *   const x = useMotionValue(0)
 *   const y = useMotionValue(0)
 *   const z = useTransform([x, y], [latestX, latestY] => latestX * latestY)
 *
 *   return <motion.div style={{ x, y, z }} />
 * }
 * \`\`\`
 *
 * @param input - An array of \`MotionValue\`s that will pass their latest values through \`transform\` to update the returned \`MotionValue\`.
 * @param transform - A function that accepts the latest values from \`input\` and returns a new value.
 * @returns \`MotionValue\`
 *
 * @public
 */
declare function useTransform<I, O>(
  input: MotionValue<string>[] | MotionValue<number>[] | MotionValue<
    string | number
  >[],
  transformer: MultiTransformer<I, O>,
): MotionValue<O>;

/**
 * Creates a \`MotionValue\` that, when \`set\`, will use a spring animation to animate to its new state.
 *
 * It can either work as a stand-alone \`MotionValue\` by initialising it with a value, or as a subscriber
 * to another \`MotionValue\`.
 *
 * @remarks
 *
 * \`\`\`jsx
 * const x = useSpring(0, { stiffness: 300 })
 * const y = useSpring(x, { damping: 10 })
 * \`\`\`
 *
 * @param inputValue - \`MotionValue\` or number. If provided a \`MotionValue\`, when the input \`MotionValue\` changes, the created \`MotionValue\` will spring towards that value.
 * @param springConfig - Configuration options for the spring.
 * @returns \`MotionValue\`
 *
 * @public
 */
declare function useSpring(
  source: MotionValue | number,
  config?: SpringOptions,
): MotionValue<any>;

/**
 * Creates a \`MotionValue\` that updates when the velocity of the provided \`MotionValue\` changes.
 *
 * \`\`\`javascript
 * const x = useMotionValue(0)
 * const xVelocity = useVelocity(x)
 * const xAcceleration = useVelocity(xVelocity)
 * \`\`\`
 *
 * @public
 */
declare function useVelocity(value: MotionValue<number>): MotionValue<number>;

/**
 * @public
 */
interface ScrollMotionValues {
  scrollX: MotionValue<number>;
  scrollY: MotionValue<number>;
  scrollXProgress: MotionValue<number>;
  scrollYProgress: MotionValue<number>;
}

/**
 * Returns MotionValues that update when the provided element scrolls:
 *
 * - \`scrollX\` \u2014 Horizontal scroll distance in pixels.
 * - \`scrollY\` \u2014 Vertical scroll distance in pixels.
 * - \`scrollXProgress\` \u2014 Horizontal scroll progress between \`0\` and \`1\`.
 * - \`scrollYProgress\` \u2014 Vertical scroll progress between \`0\` and \`1\`.
 *
 * This element must be set to \`overflow: scroll\` on either or both axes to report scroll offset.
 *
 * \`\`\`jsx
 * export const MyComponent = () => {
 *   const ref = useRef()
 *   const { scrollYProgress } = useElementScroll(ref)
 *
 *   return (
 *     <div ref={ref}>
 *       <motion.div style={{ scaleX: scrollYProgress }} />
 *     </div>
 *   )
 * }
 * \`\`\`
 *
 * @public
 */
declare function useElementScroll(
  ref: RefObject<HTMLElement>,
): ScrollMotionValues;

/**
 * Returns MotionValues that update when the viewport scrolls:
 *
 * - \`scrollX\` \u2014 Horizontal scroll distance in pixels.
 * - \`scrollY\` \u2014 Vertical scroll distance in pixels.
 * - \`scrollXProgress\` \u2014 Horizontal scroll progress between \`0\` and \`1\`.
 * - \`scrollYProgress\` \u2014 Vertical scroll progress between \`0\` and \`1\`.
 *
 * **Warning:** Setting \`body\` or \`html\` to \`height: 100%\` or similar will break the \`Progress\`
 * values as this breaks the browser's capability to accurately measure the page length.
 *
 * \`\`\`jsx
 * export const MyComponent = () => {
 *   const { scrollYProgress } = useViewportScroll()
 *   return <motion.div style={{ scaleX: scrollYProgress }} />
 * }
 * \`\`\`
 *
 * @public
 */
declare function useViewportScroll(): ScrollMotionValues;

declare function useTime(): MotionValue<number>;

/**
 * A hook that returns \`true\` if we should be using reduced motion based on the current device's Reduced Motion setting.
 *
 * This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing
 * \`x\`/\`y\` animations with \`opacity\`, disabling the autoplay of background videos, or turning off parallax motion.
 *
 * It will actively respond to changes and re-render your components with the latest setting.
 *
 * \`\`\`jsx
 * export function Sidebar({ isOpen }) {
 *   const shouldReduceMotion = useReducedMotion()
 *   const closedX = shouldReduceMotion ? 0 : "-100%"
 *
 *   return (
 *     <motion.div animate={{
 *       opacity: isOpen ? 1 : 0,
 *       x: isOpen ? 0 : closedX
 *     }} />
 *   )
 * }
 * \`\`\`
 *
 * @return boolean
 *
 * @public
 */
declare function useReducedMotion(): boolean | null;
declare function useReducedMotionConfig(): boolean | null;

/**
 * @public
 */
declare function animationControls(): AnimationControls;

/**
 * Creates \`AnimationControls\`, which can be used to manually start, stop
 * and sequence animations on one or more components.
 *
 * The returned \`AnimationControls\` should be passed to the \`animate\` property
 * of the components you want to animate.
 *
 * These components can then be animated with the \`start\` method.
 *
 * \`\`\`jsx
 * import * as React from 'react'
 * import { motion, useAnimation } from 'framer-motion'
 *
 * export function MyComponent(props) {
 *    const controls = useAnimation()
 *
 *    controls.start({
 *        x: 100,
 *        transition: { duration: 0.5 },
 *    })
 *
 *    return <motion.div animate={controls} />
 * }
 * \`\`\`
 *
 * @returns Animation controller with \`start\` and \`stop\` methods
 *
 * @public
 */
declare function useAnimation(): AnimationControls;

declare type FrameCallback = (timestamp: number) => void;
declare function useAnimationFrame(callback: FrameCallback): void;

declare type Cycle = (i?: number) => void;
declare type CycleState<T> = [T, Cycle];
/**
 * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to \`useState\` in React. It is provided an initial array of possible states, and returns an array of two arguments.
 *
 * An index value can be passed to the returned \`cycle\` function to cycle to a specific index.
 *
 * \`\`\`jsx
 * import * as React from "react"
 * import { motion, useCycle } from "framer-motion"
 *
 * export const MyComponent = () => {
 *   const [x, cycleX] = useCycle(0, 50, 100)
 *
 *   return (
 *     <motion.div
 *       animate={{ x: x }}
 *       onTap={() => cycleX()}
 *      />
 *    )
 * }
 * \`\`\`
 *
 * @param items - items to cycle through
 * @returns [currentState, cycleState]
 *
 * @public
 */
declare function useCycle<T>(...items: T[]): CycleState<T>;

/**
 * Check whether a prop name is a valid \`MotionProp\` key.
 *
 * @param key - Name of the property to check
 * @returns \`true\` is key is a valid \`MotionProp\`.
 *
 * @public
 */
declare function isValidMotionProp(key: string): boolean;

/**
 * @public
 */
interface PresenceContextProps {
  id: number;
  isPresent: boolean;
  register: (id: number) => () => void;
  onExitComplete?: (id: number) => void;
  initial?: false | VariantLabels;
  custom?: any;
}
/**
 * @public
 */
declare const PresenceContext: React$1.Context<PresenceContextProps | null>;

declare type SafeToRemove = () => void;
declare type AlwaysPresent = [true, null];
declare type Present = [true];
declare type NotPresent = [false, SafeToRemove];
/**
 * When a component is the child of \`AnimatePresence\`, it can use \`usePresence\`
 * to access information about whether it's still present in the React tree.
 *
 * \`\`\`jsx
 * import { usePresence } from "framer-motion"
 *
 * export const Component = () => {
 *   const [isPresent, safeToRemove] = usePresence()
 *
 *   useEffect(() => {
 *     !isPresent && setTimeout(safeToRemove, 1000)
 *   }, [isPresent])
 *
 *   return <div />
 * }
 * \`\`\`
 *
 * If \`isPresent\` is \`false\`, it means that a component has been removed the tree, but
 * \`AnimatePresence\` won't really remove it until \`safeToRemove\` has been called.
 *
 * @public
 */
declare function usePresence(): AlwaysPresent | Present | NotPresent;
/**
 * Similar to \`usePresence\`, except \`useIsPresent\` simply returns whether or not the component is present.
 * There is no \`safeToRemove\` function.
 *
 * \`\`\`jsx
 * import { useIsPresent } from "framer-motion"
 *
 * export const Component = () => {
 *   const isPresent = useIsPresent()
 *
 *   useEffect(() => {
 *     !isPresent && console.log("I've been removed!")
 *   }, [isPresent])
 *
 *   return <div />
 * }
 * \`\`\`
 *
 * @public
 */
declare function useIsPresent(): boolean;

/**
 * Attaches an event listener directly to the provided DOM element.
 *
 * Bypassing React's event system can be desirable, for instance when attaching non-passive
 * event handlers.
 *
 * \`\`\`jsx
 * const ref = useRef(null)
 *
 * useDomEvent(ref, 'wheel', onWheel, { passive: false })
 *
 * return <div ref={ref} />
 * \`\`\`
 *
 * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.
 * @param eventName - Name of the event you want listen for.
 * @param handler - Function to fire when receiving the event.
 * @param options - Options to pass to \`Event.addEventListener\`.
 *
 * @public
 */
declare function useDomEvent(
  ref: RefObject<EventTarget>,
  eventName: string,
  handler?: EventListener | undefined,
  options?: AddEventListenerOptions,
): void;

declare const visualElement: <Instance, MutableState, Options>(
  {
    treeType,
    build,
    getBaseTarget,
    makeTargetAnimatable,
    measureViewportBox,
    render: renderInstance,
    readValueFromInstance,
    removeValueFromRenderState,
    sortNodePosition,
    scrapeMotionValuesFromProps,
  }: VisualElementConfig<Instance, MutableState, Options>,
) => (
  {
    parent,
    props,
    presenceId,
    blockInitialAnimation,
    visualState,
    shouldReduceMotion,
  }: VisualElementOptions<Instance, any>,
  options?: Options,
) => VisualElement<Instance, any>;

declare type ScaleCorrector = (
  latest: string | number,
  node: IProjectionNode,
) => string | number;
interface ScaleCorrectorDefinition {
  correct: ScaleCorrector;
  applyTo?: string[];
}
interface ScaleCorrectorMap {
  [key: string]: ScaleCorrectorDefinition;
}

declare function addScaleCorrector(correctors: ScaleCorrectorMap): void;

declare function useInstantTransition(): (callback: () => void) => void;

declare function useInstantLayoutTransition(): (
  cb?: (() => void) | undefined,
) => void;

declare function useResetProjection(): () => void;

interface NodeGroup {
  add: (node: IProjectionNode) => void;
  remove: (node: IProjectionNode) => void;
  dirty: VoidFunction;
}

interface LayoutGroupContextProps {
  id?: string;
  group?: NodeGroup;
  forceRender?: VoidFunction;
}
/**
 * @internal
 */
declare const LayoutGroupContext: React$1.Context<LayoutGroupContextProps>;

/**
 * @internal
 * @deprecated
 */
declare const DeprecatedLayoutGroupContext: React$1.Context<string | null>;

/**
 * This is not an officially supported API and may be removed
 * on any version.
 * @internal
 */
declare function useAnimatedState(initialState: any): any[];

interface ScaleMotionValues {
  scaleX: MotionValue<number>;
  scaleY: MotionValue<number>;
}
/**
 * Returns a \`MotionValue\` each for \`scaleX\` and \`scaleY\` that update with the inverse
 * of their respective parent scales.
 *
 * This is useful for undoing the distortion of content when scaling a parent component.
 *
 * By default, \`useInvertedScale\` will automatically fetch \`scaleX\` and \`scaleY\` from the nearest parent.
 * By passing other \`MotionValue\`s in as \`useInvertedScale({ scaleX, scaleY })\`, it will invert the output
 * of those instead.
 *
 * \`\`\`jsx
 * const MyComponent = () => {
 *   const { scaleX, scaleY } = useInvertedScale()
 *   return <motion.div style={{ scaleX, scaleY }} />
 * }
 * \`\`\`
 *
 * @deprecated
 * @internal
 */
declare function useInvertedScale(
  scale?: Partial<ScaleMotionValues>,
): ScaleMotionValues;

export {
  addPointerEvent,
  addScaleCorrector,
  animate,
  AnimatePresence,
  AnimatePresenceProps,
  AnimateSharedLayout,
  animateVisualElement,
  AnimationControls,
  animationControls,
  AnimationLifecycles,
  AnimationOptions,
  AnimationPlaybackControls,
  AnimationProps,
  animations,
  AnimationType,
  Axis,
  AxisDelta,
  BoundingBox,
  Box,
  calcLength,
  checkTargetForNewValues,
  createBox,
  createDomMotionComponent,
  createMotionComponent,
  CreateVisualElement,
  CustomDomComponent,
  CustomValueType,
  Delta,
  DeprecatedLayoutGroupContext,
  domAnimation,
  domMax,
  DragControls,
  DragElastic,
  DraggableProps,
  DragHandlers,
  EasingFunction,
  EventInfo,
  FeatureBundle,
  FeatureComponent,
  FeatureComponents,
  FeatureDefinition,
  FeatureDefinitions,
  FeatureNames,
  FeatureProps,
  filterProps,
  FlatTree,
  FocusHandlers,
  ForwardRefComponent,
  HoverHandlers,
  HTMLMotionProps,
  Inertia,
  IProjectionNode,
  isBrowser,
  isDragActive,
  isMotionValue,
  isValidMotionProp,
  Keyframes,
  KeyframesTarget,
  LayoutGroup,
  LayoutGroupContext,
  LayoutProps,
  LazyFeatureBundle$1 as LazyFeatureBundle,
  LazyMotion,
  LazyProps,
  LoadedFeatures,
  m,
  makeUseVisualState,
  motion,
  MotionAdvancedProps,
  MotionConfig,
  MotionConfigContext,
  MotionConfigProps,
  MotionContext,
  MotionProps,
  MotionStyle,
  MotionTransform,
  MotionValue,
  motionValue,
  None,
  Orchestration,
  PanHandlers,
  PanInfo,
  PassiveEffect,
  Point,
  PresenceContext,
  RelayoutInfo,
  RenderComponent,
  Reorder,
  Repeat,
  ResolvedKeyframesTarget,
  ResolvedSingleTarget,
  ResolvedValues,
  ResolvedValueTarget,
  ResolveLayoutTransition,
  resolveMotionValue,
  ScrapeMotionValuesFromProps,
  ScrollMotionValues,
  SingleTarget,
  Spring,
  Subscriber,
  SVGAttributesAsMotionValues,
  SVGMotionProps,
  SwitchLayoutGroupContext,
  TapHandlers,
  TapInfo,
  Target,
  TargetAndTransition,
  transform,
  TransformPoint,
  Transition,
  Tween,
  useAnimatedState as useDeprecatedAnimatedState,
  useAnimation,
  useAnimationFrame,
  useCycle,
  useDomEvent,
  useDragControls,
  useElementScroll,
  useForceUpdate,
  useInstantLayoutTransition,
  useInstantTransition,
  useInvertedScale as useDeprecatedInvertedScale,
  useIsomorphicLayoutEffect,
  useIsPresent,
  useMotionTemplate,
  useMotionValue,
  usePresence,
  useReducedMotion,
  useReducedMotionConfig,
  useResetProjection,
  useSpring,
  useTime,
  useTransform,
  useUnmountEffect,
  useVelocity,
  useViewportScroll,
  useVisualElementContext,
  ValueTarget,
  Variant,
  VariantLabels,
  Variants,
  VisualElement,
  visualElement,
  VisualElementLifecycles,
  wrapHandler,
};
`;var TL=`// Definitions by: Junyoung Clare Jang <https://github.com/Ailrun>
// TypeScript Version: 3.2

import * as React from 'react'
import { ComponentSelector, Interpolation } from '@emotion/serialize'
import { PropsOf, DistributiveOmit, Theme } from '@emotion/react'

export {
  ArrayInterpolation,
  CSSObject,
  FunctionInterpolation
} from '@emotion/serialize'

export { ComponentSelector, Interpolation }

/** Same as StyledOptions but shouldForwardProp must be a type guard */
export interface FilteringStyledOptions<
  Props,
  ForwardedProps extends keyof Props = keyof Props
> {
  label?: string
  shouldForwardProp?(propName: PropertyKey): propName is ForwardedProps
  target?: string
}

export interface StyledOptions<Props> {
  label?: string
  shouldForwardProp?(propName: PropertyKey): boolean
  target?: string
}

/**
 * @typeparam ComponentProps  Props which will be included when withComponent is called
 * @typeparam SpecificComponentProps  Props which will *not* be included when withComponent is called
 */
export interface StyledComponent<
  ComponentProps extends {},
  SpecificComponentProps extends {} = {},
  JSXProps extends {} = {}
> extends React.FC<ComponentProps & SpecificComponentProps & JSXProps>,
    ComponentSelector {
  withComponent<C extends React.ComponentClass<React.ComponentProps<C>>>(
    component: C
  ): StyledComponent<
    ComponentProps & PropsOf<C>,
    {},
    { ref?: React.Ref<InstanceType<C>> }
  >
  withComponent<C extends React.ComponentType<React.ComponentProps<C>>>(
    component: C
  ): StyledComponent<ComponentProps & PropsOf<C>>
  withComponent<Tag extends keyof JSX.IntrinsicElements>(
    tag: Tag
  ): StyledComponent<ComponentProps, JSX.IntrinsicElements[Tag]>
}

/**
 * @typeparam ComponentProps  Props which will be included when withComponent is called
 * @typeparam SpecificComponentProps  Props which will *not* be included when withComponent is called
 */
export interface CreateStyledComponent<
  ComponentProps extends {},
  SpecificComponentProps extends {} = {},
  JSXProps extends {} = {}
> {
  /**
   * @typeparam AdditionalProps  Additional props to add to your styled component
   */
  <AdditionalProps extends {} = {}>(
    ...styles: Array<
      Interpolation<
        ComponentProps &
          SpecificComponentProps &
          AdditionalProps & { theme: Theme }
      >
    >
  ): StyledComponent<
    ComponentProps & AdditionalProps,
    SpecificComponentProps,
    JSXProps
  >

  (
    template: TemplateStringsArray,
    ...styles: Array<
      Interpolation<ComponentProps & SpecificComponentProps & { theme: Theme }>
    >
  ): StyledComponent<ComponentProps, SpecificComponentProps, JSXProps>

  /**
   * @typeparam AdditionalProps  Additional props to add to your styled component
   */
  <AdditionalProps extends {}>(
    template: TemplateStringsArray,
    ...styles: Array<
      Interpolation<
        ComponentProps &
          SpecificComponentProps &
          AdditionalProps & { theme: Theme }
      >
    >
  ): StyledComponent<
    ComponentProps & AdditionalProps,
    SpecificComponentProps,
    JSXProps
  >
}

/**
 * @desc
 * This function accepts a React component or tag ('div', 'a' etc).
 *
 * @example styled(MyComponent)({ width: 100 })
 * @example styled(MyComponent)(myComponentProps => ({ width: myComponentProps.width })
 * @example styled('div')({ width: 100 })
 * @example styled('div')<Props>(props => ({ width: props.width })
 */
export interface CreateStyled {
  <
    C extends React.ComponentClass<React.ComponentProps<C>>,
    ForwardedProps extends keyof React.ComponentProps<C> = keyof React.ComponentProps<C>
  >(
    component: C,
    options: FilteringStyledOptions<React.ComponentProps<C>, ForwardedProps>
  ): CreateStyledComponent<
    Pick<PropsOf<C>, ForwardedProps> & {
      theme?: Theme
    },
    {},
    {
      ref?: React.Ref<InstanceType<C>>
    }
  >

  <C extends React.ComponentClass<React.ComponentProps<C>>>(
    component: C,
    options?: StyledOptions<React.ComponentProps<C>>
  ): CreateStyledComponent<
    PropsOf<C> & {
      theme?: Theme
    },
    {},
    {
      ref?: React.Ref<InstanceType<C>>
    }
  >

  <
    C extends React.ComponentType<React.ComponentProps<C>>,
    ForwardedProps extends keyof React.ComponentProps<C> = keyof React.ComponentProps<C>
  >(
    component: C,
    options: FilteringStyledOptions<React.ComponentProps<C>, ForwardedProps>
  ): CreateStyledComponent<
    Pick<PropsOf<C>, ForwardedProps> & {
      theme?: Theme
    }
  >

  <C extends React.ComponentType<React.ComponentProps<C>>>(
    component: C,
    options?: StyledOptions<React.ComponentProps<C>>
  ): CreateStyledComponent<
    PropsOf<C> & {
      theme?: Theme
    }
  >

  <
    Tag extends keyof JSX.IntrinsicElements,
    ForwardedProps extends keyof JSX.IntrinsicElements[Tag] = keyof JSX.IntrinsicElements[Tag]
  >(
    tag: Tag,
    options: FilteringStyledOptions<JSX.IntrinsicElements[Tag], ForwardedProps>
  ): CreateStyledComponent<
    { theme?: Theme; as?: React.ElementType },
    Pick<JSX.IntrinsicElements[Tag], ForwardedProps>
  >

  <Tag extends keyof JSX.IntrinsicElements>(
    tag: Tag,
    options?: StyledOptions<JSX.IntrinsicElements[Tag]>
  ): CreateStyledComponent<
    { theme?: Theme; as?: React.ElementType },
    JSX.IntrinsicElements[Tag]
  >
}

declare const styled: CreateStyled
export default styled
`;var EL=`// Definitions by: Junyoung Clare Jang <https://github.com/Ailrun>
// TypeScript Version: 3.2

import { Theme } from '@emotion/react'
import { CreateStyled as BaseCreateStyled, CreateStyledComponent } from './base'

export {
  ArrayInterpolation,
  ComponentSelector,
  CSSObject,
  FunctionInterpolation,
  Interpolation,
  StyledComponent,
  StyledOptions,
  CreateStyledComponent
} from './base'

export type StyledTags = {
  [Tag in keyof JSX.IntrinsicElements]: CreateStyledComponent<
    {
      theme?: Theme
      as?: React.ElementType
    },
    JSX.IntrinsicElements[Tag]
  >
}

export interface CreateStyled extends BaseCreateStyled, StyledTags {}

declare const styled: CreateStyled
export default styled
`;var IL=`// Definitions by: Junyoung Clare Jang <https://github.com/Ailrun>
// TypeScript Version: 2.2
import { EmotionCache } from '@emotion/utils'

export { EmotionCache }

export interface StylisElement {
  type: string
  value: string
  props: Array<string> | string
  root: StylisElement | null
  parent: StylisElement | null
  children: Array<StylisElement> | string
  line: number
  column: number
  length: number
  return: string
}
export type StylisPluginCallback = (
  element: StylisElement,
  index: number,
  children: Array<StylisElement>,
  callback: StylisPluginCallback
) => string | void

export type StylisPlugin = (
  element: StylisElement,
  index: number,
  children: Array<StylisElement>,
  callback: StylisPluginCallback
) => string | void

export interface Options {
  nonce?: string
  stylisPlugins?: Array<StylisPlugin>
  key: string
  container?: HTMLElement
  speedy?: boolean
  /** @deprecate use \`insertionPoint\` instead */
  prepend?: boolean
  insertionPoint?: HTMLElement
}

export default function createCache(options: Options): EmotionCache
`;var kL=`// Definitions by: Junyoung Clare Jang <https://github.com/Ailrun>
// TypeScript Version: 3.4

import { EmotionCache } from '@emotion/cache'
import {
  ArrayInterpolation,
  ComponentSelector,
  CSSInterpolation,
  CSSObject,
  FunctionInterpolation,
  Interpolation,
  Keyframes,
  SerializedStyles
} from '@emotion/serialize'
import {
  ClassAttributes,
  Context,
  Provider,
  FC,
  ReactElement,
  ReactNode,
  Ref,
  createElement
} from 'react'
import { EmotionJSX } from './jsx-namespace'

export {
  ArrayInterpolation,
  ComponentSelector,
  CSSObject,
  EmotionCache,
  FunctionInterpolation,
  Interpolation,
  Keyframes,
  SerializedStyles
}

export * from './theming'
export * from './helper'

// tslint:disable-next-line: no-empty-interface
export interface Theme {}

export const ThemeContext: Context<object>
export const CacheProvider: Provider<EmotionCache>
export function withEmotionCache<Props, RefType = any>(
  func: (props: Props, context: EmotionCache, ref: Ref<RefType>) => ReactNode
): FC<Props & ClassAttributes<RefType>>

export function css(
  template: TemplateStringsArray,
  ...args: Array<CSSInterpolation>
): SerializedStyles
export function css(...args: Array<CSSInterpolation>): SerializedStyles

export interface GlobalProps {
  styles: Interpolation<Theme>
}

/**
 * @desc
 * JSX generic are supported only after TS@2.9
 */
export function Global(props: GlobalProps): ReactElement

export function keyframes(
  template: TemplateStringsArray,
  ...args: Array<CSSInterpolation>
): Keyframes
export function keyframes(...args: Array<CSSInterpolation>): Keyframes

export interface ArrayClassNamesArg extends Array<ClassNamesArg> {}
export type ClassNamesArg =
  | undefined
  | null
  | string
  | boolean
  | { [className: string]: boolean | null | undefined }
  | ArrayClassNamesArg

export interface ClassNamesContent {
  css(template: TemplateStringsArray, ...args: Array<CSSInterpolation>): string
  css(...args: Array<CSSInterpolation>): string
  cx(...args: Array<ClassNamesArg>): string
  theme: Theme
}
export interface ClassNamesProps {
  children(content: ClassNamesContent): ReactNode
}
/**
 * @desc
 * JSX generic are supported only after TS@2.9
 */
export function ClassNames(props: ClassNamesProps): ReactElement

export const jsx: typeof createElement
export namespace jsx {
  namespace JSX {
    interface Element extends EmotionJSX.Element {}
    interface ElementClass extends EmotionJSX.ElementClass {}
    interface ElementAttributesProperty
      extends EmotionJSX.ElementAttributesProperty {}
    interface ElementChildrenAttribute
      extends EmotionJSX.ElementChildrenAttribute {}
    type LibraryManagedAttributes<C, P> = EmotionJSX.LibraryManagedAttributes<
      C,
      P
    >
    interface IntrinsicAttributes extends EmotionJSX.IntrinsicAttributes {}
    interface IntrinsicClassAttributes<T>
      extends EmotionJSX.IntrinsicClassAttributes<T> {}
    type IntrinsicElements = EmotionJSX.IntrinsicElements
  }
}
`;var xm=`export { EmotionJSX as JSX } from './jsx-namespace'
`;var LL=`import 'react'
import { Interpolation } from '@emotion/serialize'
import { Theme } from './index'

type WithConditionalCSSProp<P> = 'className' extends keyof P
  ? string extends P['className' & keyof P]
    ? { css?: Interpolation<Theme> }
    : {}
  : {}

// unpack all here to avoid infinite self-referencing when defining our own JSX namespace
type ReactJSXElement = JSX.Element
type ReactJSXElementClass = JSX.ElementClass
type ReactJSXElementAttributesProperty = JSX.ElementAttributesProperty
type ReactJSXElementChildrenAttribute = JSX.ElementChildrenAttribute
type ReactJSXLibraryManagedAttributes<C, P> = JSX.LibraryManagedAttributes<C, P>
type ReactJSXIntrinsicAttributes = JSX.IntrinsicAttributes
type ReactJSXIntrinsicClassAttributes<T> = JSX.IntrinsicClassAttributes<T>
type ReactJSXIntrinsicElements = JSX.IntrinsicElements

export namespace EmotionJSX {
  interface Element extends ReactJSXElement {}
  interface ElementClass extends ReactJSXElementClass {}
  interface ElementAttributesProperty
    extends ReactJSXElementAttributesProperty {}
  interface ElementChildrenAttribute extends ReactJSXElementChildrenAttribute {}

  type LibraryManagedAttributes<C, P> = WithConditionalCSSProp<P> &
    ReactJSXLibraryManagedAttributes<C, P>

  interface IntrinsicAttributes extends ReactJSXIntrinsicAttributes {}
  interface IntrinsicClassAttributes<T>
    extends ReactJSXIntrinsicClassAttributes<T> {}

  type IntrinsicElements = {
    [K in keyof ReactJSXIntrinsicElements]: ReactJSXIntrinsicElements[K] & {
      css?: Interpolation<Theme>
    }
  }
}
`;var Cm=`// Definitions by: Junyoung Clare Jang <https://github.com/Ailrun>
// TypeScript Version: 3.1

import * as React from 'react'
import { Theme } from '@emotion/react'
import { DistributiveOmit, PropsOf } from './helper'

export interface ThemeProviderProps {
  theme: Partial<Theme> | ((outerTheme: Theme) => Theme)
  children?: React.ReactNode
}

export interface ThemeProvider {
  (props: ThemeProviderProps): React.ReactElement
}

export type withTheme = <
  C extends React.ComponentType<React.ComponentProps<C>>
>(
  component: C
) => React.FC<DistributiveOmit<PropsOf<C>, 'theme'> & { theme?: Theme }>

export function useTheme(): Theme

export const ThemeProvider: ThemeProvider

export const withTheme: withTheme

export type WithTheme<P, T> = P extends { theme: infer Theme }
  ? P & { theme: Exclude<Theme, undefined> }
  : P & { theme: T }
`;var PL=`import {} from 'react'
import { Interpolation } from '@emotion/serialize'
import { Theme } from '.'

declare module 'react' {
  interface Attributes {
    css?: Interpolation<Theme>
  }
}
`;var ML=`import * as React from 'react'

/**
 * @desc Utility type for getting props type of React component.
 * It takes \`defaultProps\` into an account - making props with defaults optional.
 */
export type PropsOf<
  C extends keyof JSX.IntrinsicElements | React.JSXElementConstructor<any>
> = JSX.LibraryManagedAttributes<C, React.ComponentProps<C>>

// We need to use this version of Omit as it's distributive (Will preserve unions)
export type DistributiveOmit<T, U> = T extends any
  ? Pick<T, Exclude<keyof T, U>>
  : never
`;var DL=`// Definitions by: Junyoung Clare Jang <https://github.com/Ailrun>
// TypeScript Version: 2.8

import { RegisteredCache, SerializedStyles } from '@emotion/utils'
import * as CSS from 'csstype'

export { RegisteredCache, SerializedStyles }

export type CSSProperties = CSS.PropertiesFallback<number | string>
export type CSSPropertiesWithMultiValues = {
  [K in keyof CSSProperties]:
    | CSSProperties[K]
    | Array<Extract<CSSProperties[K], string>>
}

export type CSSPseudos = { [K in CSS.Pseudos]?: CSSObject }

export interface ArrayCSSInterpolation extends Array<CSSInterpolation> {}

export type InterpolationPrimitive =
  | null
  | undefined
  | boolean
  | number
  | string
  | ComponentSelector
  | Keyframes
  | SerializedStyles
  | CSSObject

export type CSSInterpolation = InterpolationPrimitive | ArrayCSSInterpolation

export interface CSSOthersObject {
  [propertiesName: string]: CSSInterpolation
}

export interface CSSObject
  extends CSSPropertiesWithMultiValues,
    CSSPseudos,
    CSSOthersObject {}

export interface ComponentSelector {
  __emotion_styles: any
}

export type Keyframes = {
  name: string
  styles: string
  anim: number
  toString: () => string
} & string

export interface ArrayInterpolation<Props>
  extends Array<Interpolation<Props>> {}

export interface FunctionInterpolation<Props> {
  (props: Props): Interpolation<Props>
}

export type Interpolation<Props> =
  | InterpolationPrimitive
  | ArrayInterpolation<Props>
  | FunctionInterpolation<Props>

export function serializeStyles<Props>(
  args: Array<TemplateStringsArray | Interpolation<Props>>,
  registered: RegisteredCache,
  props?: Props
): SerializedStyles
`;var RL=`// Definitions by: Junyoung Clare Jang <https://github.com/Ailrun>
// TypeScript Version: 2.2

export interface RegisteredCache {
  [key: string]: string
}

export interface StyleSheet {
  container: HTMLElement
  nonce?: string
  key: string
  insert(rule: string): void
  flush(): void
  tags: Array<HTMLStyleElement>
}

export interface EmotionCache {
  inserted: {
    [key: string]: string | true
  }
  registered: RegisteredCache
  sheet: StyleSheet
  key: string
  compat?: true
  nonce?: string
  insert(
    selector: string,
    serialized: SerializedStyles,
    sheet: StyleSheet,
    shouldCache: boolean
  ): string | void
}

export interface SerializedStyles {
  name: string
  styles: string
  map?: string
  next?: SerializedStyles
}

export const isBrowser: boolean

export function getRegisteredStyles(
  registered: RegisteredCache,
  registeredStyles: Array<string>,
  classNames: string
): string

export function registerStyles(
  cache: EmotionCache,
  serialized: SerializedStyles,
  isStringTag: boolean
): void

export function insertStyles(
  cache: EmotionCache,
  serialized: SerializedStyles,
  isStringTag: boolean
): string | void
`;var AL={reactDts:yL,jsxDevRuntimeDts:SL,jsxRuntimeDts:bL,reactExpDts:vL,globalDts:xL,propTypesDts:CL,cssTypeDts:_L,framerDts:wL,emotionStyleBase:TL,emotionStyled:EL,emotionCache:IL,EmotionJSXDts:xm,EmotionJSXNameSpaceDTS:LL,EmotionJSXRuntimeDTS:xm,EmotionReactDts:kL,EmotionThemingTds:Cm,EmotionReactCssPropDts:PL,EmotionReactHelperDts:ML,EmotionThemingDts:Cm,EmotionSerializeDts:DL,EmotionUtilsDts:RL};var{reactDts:NL,jsxDevRuntimeDts:zL,jsxRuntimeDts:OL,reactExpDts:HL,globalDts:WL,propTypesDts:BL,cssTypeDts:VL,framerDts:GL,emotionStyleBase:jL,emotionStyled:UL,emotionCache:$L,EmotionJSXDts:$A,EmotionJSXNameSpaceDTS:KL,EmotionJSXRuntimeDTS:Kb,EmotionReactDts:qL,EmotionThemingTds:XL,EmotionReactCssPropDts:YL,EmotionReactHelperDts:ZL,EmotionThemingDts:JL,EmotionSerializeDts:QL,EmotionUtilsDts:eP}=AL;console.log({reactDts:NL,jsxDevRuntimeDts:zL,jsxRuntimeDts:OL,reactExpDts:HL,globalDts:WL,propTypesDts:BL,cssTypeDts:VL,framerDts:GL,emotionStyleBase:jL,emotionStyled:UL,emotionCache:$L,EmotionJSXDts:$A,EmotionJSXNameSpaceDTS:KL,EmotionJSXRuntimeDTS:Kb,EmotionReactDts:qL,EmotionThemingTds:XL,EmotionReactCssPropDts:YL,EmotionReactHelperDts:ZL,EmotionThemingDts:JL,EmotionSerializeDts:QL,EmotionUtilsDts:eP});self.MonacoEnvironment={getWorkerUrl:function(s,e){return e==="typescript"||e==="javascript"?"dist/workers/language/typescript/ts.worker.js":"dist/workers/editor/editor.worker.js"}};var FL=!1,due=async({code:s,container:e})=>{if(console.log("monaco-editor"),!FL)FL=!0;else return;let t=e.attachShadow({mode:"open"}),i=document.createElement("div");t.appendChild(i),i.style.width="100%",i.style.height="100%";let n=document.createElement("style");n.innerText=` @font-face {
    font-family: codicon;
    font-display: block;
    src: url(./base/browser/ui/codicons/codicon/codicon.ttf) format("truetype");
}`,document.head.appendChild(n);let o=document.createElement("style");o.innerText=`@import url("dist/starter.css");
  @font-face {
    font-family: codicon;
    font-display: block;
    src: url(./base/browser/ui/codicons/codicon/codicon.ttf) format("truetype");
}
  
  `,t.appendChild(o),Pn.typescript.typescriptDefaults.setCompilerOptions({target:Pn.typescript.ScriptTarget.esnext,lib:["dom","dom.iterable","esnext"],allowJs:!0,skipLibCheck:!0,esModuleInterop:!0,allowSyntheticDefaultImports:!0,strict:!0,forceConsistentCasingInFileNames:!0,noFallthroughCasesInSwitch:!0,resolveJsonModule:!0,isolatedModules:!0,typeRoots:["node_modules/@types"],noEmit:!0,allowNonTsExtensions:!0,moduleResolution:Pn.typescript.ModuleResolutionKind.NodeJs,declaration:!1,module:Pn.typescript.ModuleKind.ESNext,noEmitOnError:!0,maxNodeModuleJsDepth:10,jsxImportSource:"react",jsx:Pn.typescript.JsxEmit.ReactJSX,allowUmdGlobalAccess:!0}),Pn.typescript.typescriptDefaults.setDiagnosticsOptions({noSuggestionDiagnostics:!0,noSemanticValidation:!0,noSyntaxValidation:!0});let r=Tu.create(i,{model:Tu.createModel(s,"typescript",yg.parse("file:///index.tsx")),language:"typescript",useShadowDOM:!1,theme:"vs-dark",autoClosingBrackets:"languageDefined"});return window.addEventListener("resize",()=>{r.layout()}),(async()=>{let l=[{name:"react",url:NL,depend:["global","csstype","prop-types"]},{name:"react/jsx-runtime",url:OL,depend:["global","csstype","prop-types"]},{name:"react/jsx-dev-runtime",url:zL,depend:["global","csstype","prop-types"]},{name:"react-exp",url:HL,depend:[]},{name:"global",url:WL,depend:[]},{name:"prop-types",url:BL,depend:[]},{name:"csstype",url:VL,depend:[]},{name:"@emotion/base",url:jL,depend:["@emotion/react","@emotion/serialize","react"]},{name:"@emotion/styled",url:UL,depend:["@emotion/react","@emotion/serialize","react"]},{name:"@emotion/cache",url:$L,depend:["@emotion/utils"]},{name:"@emotion/react",url:qL,depend:["@emotion/cache"]},{name:"@emotion/react/jsx-runtime",url:Kb,depend:["@emotion/cache"]},{name:"@emotion/react/jsx-dev-runtime",url:Kb,depend:["@emotion/cache"]},{name:"@emotion/react/jsx-namespace",url:KL,depend:["@emotion/utils","type"]},{name:"@emotion/react/theming",url:XL,depend:["@emotion/utils","type"]},{name:"@emotion/react/css-prop",url:YL,depend:["@emotion/utils","type"]},{name:"@emotion/react/helper",url:ZL,depend:["@emotion/utils","type"]},{name:"@emotion/theming",url:JL,depend:["@emotion/utils","csstype"]},{name:"@emotion/serialize",url:QL,depend:["@emotion/utils","csstype"]},{name:"@emotion/utils",url:eP,depend:[]},{name:"framer-motion",url:GL,depend:["popmotion"]}].map(({name:c,url:d})=>async()=>Pn.typescript.typescriptDefaults.addExtraLib(d,`file:///node_modules/${c}/index.d.ts`));await Promise.all(l),Pn.typescript.typescriptDefaults.setEagerModelSync(!0),Pn.typescript.typescriptDefaults.setDiagnosticsOptions({noSuggestionDiagnostics:!1,noSemanticValidation:!1,noSyntaxValidation:!1})})(),{editor:r,monaco:Yb({},$b)}};export{due as startMonaco};
/*! @license DOMPurify 2.3.1 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.3.1/LICENSE */
/*!-----------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)
 * Released under the MIT license
 * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt
 *-----------------------------------------------------------------------------*/
