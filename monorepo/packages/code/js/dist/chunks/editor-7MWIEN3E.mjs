import"./chunk-5FA7AVAW.mjs";import{$ as GL,$a as Ui,$b as US,$c as iv,$d as xv,$e as id,$f as Yv,$g as aP,$h as vr,$i as zt,$j as fP,A as uh,Aa as U,Ab as OS,Ac as Ci,Ad as jm,Ae as se,Af as Pv,Ag as cx,Ah as Aa,Ai as Ox,Aj as mC,B as ph,Ba as tt,Bb as Un,Bc as Xl,Bd as hv,Be as Xn,Bf as Mv,Bg as hx,Bh as hd,Bi as yt,Bj as fd,C as wm,Ca as b,Cb as ga,Cc as $L,Cd as uv,Ce as Oi,Cf as Dv,Cg as si,Ch as ud,Ci as Hx,Cj as xu,D as zl,Da as ee,Db as K,Dc as YS,Dd as Dh,De as Fh,Df as Rv,Dg as Zh,Dh as Sr,Di as ag,Dj as hg,E as qe,Ea as X,Eb as _h,Ec as KL,Ed as lt,Ee as mr,Ef as Av,Eg as mt,Eh as su,Ei as Wx,Ej as ug,F as Ol,Fa as Mt,Fb as xi,Fc as it,Fd as pv,Fe as ri,Ff as Fv,Fg as Jh,Fh as S,Fi as lg,Fj as pg,G as Mi,Ga as Di,Gb as fa,Gc as kn,Gd as mv,Ge as Zt,Gf as Nv,Gg as ux,Gh as He,Gi as mu,Gj as gC,H as qt,Ha as bo,Hb as Gl,Hc as ft,Hd as ni,He as Ql,Hf as zv,Hg as iP,Hh as Fa,Hi as Bx,Hj as eo,I as pS,Ia as Bl,Ib as Ai,Ic as rn,Id as Kn,Ie as Yn,If as Ov,Ig as Qm,Ih as Ti,Ii as Cr,Ij as Wi,J as mS,Ja as ca,Jb as En,Jc as Ni,Jd as gv,Je as ed,Jf as Hv,Jg as px,Jh as ds,Ji as Vx,Jj as Cu,K as la,Ka as Oe,Kb as wh,Kc as ns,Kd as fv,Ke as Nh,Kf as Wv,Kg as mx,Kh as Dx,Ki as Gx,Kj as fC,L as mh,La as ha,Lb as HS,Lc as Dt,Ld as yv,Le as ct,Lf as Bv,Lg as Qh,Lh as Na,Li as jx,Lj as li,M as gS,Ma as Tn,Mb as WS,Mc as ii,Md as bv,Me as F,Mf as ls,Mg as gx,Mh as Rx,Mi as Ux,Mj as _u,N as gh,Na as ua,Nb as jl,Nc as sn,Nd as Um,Ne as Km,Nf as Vv,Ng as fx,Nh as cP,Ni as $x,Nj as wu,O as Gn,Oa as Qr,Ob as BS,Oc as ZS,Od as $i,Oe as wi,Of as wa,Og as yx,Oh as za,Oi as Kx,Oj as yd,P as lr,Pa as xh,Pb as Dm,Pc as JS,Pd as an,Pe as Tv,Pf as jh,Pg as bx,Ph as ig,Pi as ms,Pj as yC,Q as Hl,Qa as Ri,Qb as VS,Qc as QS,Qd as $m,Qe as $,Qf as cn,Qg as eu,Qh as Ax,Qi as gs,Qj as bd,R as de,Ra as $e,Rb as GS,Rc as qL,Rd as H,Re as I,Rf as Ta,Rg as Sx,Rh as ng,Ri as gu,Rj as mg,S as Ue,Sa as xS,Sb as vo,Sc as Yt,Sd as Sv,Se as qm,Sf as Ea,Sg as Ma,Sh as og,Si as qx,Sj as bC,T as jn,Ta as pa,Tb as Rm,Tc as hr,Td as rs,Te as zh,Tf as Gv,Tg as nP,Th as rg,Ti as Xx,Tj as Tu,U as fS,Ua as CS,Ub as ya,Uc as Ph,Ud as W,Ue as J,Uf as Zm,Ug as vx,Uh as Io,Ui as Yx,Uj as gg,V as fh,Va as Si,Vb as ba,Vc as ev,Vd as oi,Ve as Ev,Vf as jv,Vg as oP,Vh as au,Vi as Zx,Vj as SC,W as wn,Wa as _S,Wb as In,Wc as tv,Wd as Vt,We as ue,Wf as Uv,Wg as xx,Wh as Ze,Wi as Jx,Wj as gP,X as Le,Xa as ke,Xb as Ul,Xc as xo,Xd as Zl,Xe as Xm,Xf as $v,Xg as rP,Xh as Fx,Xi as Qx,Xj as vC,Y as yh,Ya as es,Yb as Th,Yc as Om,Yd as vv,Ye as tP,Yf as Kv,Yg as Cx,Yh as cs,Yi as bt,Yj as fg,Z as yS,Za as Im,Zb as Eh,Zc as ur,Zd as Ae,Ze as Oh,Zf as qv,Zg as sP,Zh as sg,Zi as eC,Zj as xC,_ as Tm,_a as wS,_b as jS,_c as XL,_d as _t,_e as td,_f as Xv,_g as _x,_h as ko,_i as qi,_j as CC,a as u,aa as bh,ab as TS,ac as $S,ad as YL,ae as Ln,af as _a,ag as Zv,ah as wx,ai as lu,aj as dg,ak as yP,b as Q,ba as xt,bb as So,bc as cr,bd as Hm,be as Cv,bf as Ym,bg as Jv,bh as eg,bi as pd,bj as gd,bk as bP,c as fo,ca as Em,cb as ES,cc as Sa,cd as nv,ce as Gt,cf as nd,cg as To,ch as tu,ci as hs,cj as tC,ck as SP,d as bi,da as We,db as IS,dc as $n,dd as ZL,de as Co,df as od,dg as Ia,dh as iu,di as Rt,dj as uP,dk as vP,e as Nl,ea as A,eb as ts,ec as Am,ed as pr,ee as _o,ef as wo,eg as ka,eh as Jt,ei as du,ej as iC,ek as xP,f as ar,fa as z,fb as Vl,fc as Fm,fd as Mh,fe as Jl,ff as rd,fg as Qv,fh as Tx,fi as Lo,fj as nC,fk as CP,g as sh,ga as et,gb as pt,gc as $l,gd as ov,ge as qn,gf as we,gg as La,gh as Da,gi as cu,gj as pP,gk as _P,h as ah,ha as G,hb as ma,hc as is,hd as JL,he as Rh,hf as Zn,hg as ex,hh as Ex,hi as hu,hj as oC,hk as wP,i as rS,ia as Sh,ib as km,ic as Ih,id as Wm,ie as ss,if as q,ig as tx,ih as tg,ii as Po,ij as rC,ik as TP,j as sS,ja as bS,jb as kS,jc as kh,jd as rv,je as dt,jf as ne,jg as ix,jh as dd,ji as us,jj as mP,jk as EP,k as Pi,ka as on,kb as Lm,kc as Nm,kd as sv,ke as Pe,kf as Iv,kg as nx,kh as Hi,ki as Jn,kj as fu,kk as yg,l as Jr,la as Wl,lb as Pm,lc as va,ld as Bm,le as wt,lf as Hh,lg as ox,lh as cd,li as Mo,lj as sC,lk as IP,m as lh,ma as ht,mb as dr,mc as Re,md as QL,me as O,mf as kv,mg as rx,mh as Ix,mi as ps,mj as aC,mk as Eu,n as dh,na as j,nb as Ch,nc as KS,nd as os,ne as pe,nf as dn,ng as sx,nh as kx,ni as Oa,nj as yu,nk as Pn,o as aS,oa as De,ob as LS,oc as qS,od as Vm,oe as ie,of as as,og as ax,oh as lP,oi as Nx,oj as lC,ok as wr,p as _m,pa as ge,pb as PS,pc as Lh,pd as av,pe as Ee,pf as gr,pg as br,ph as Lx,pi as hP,pj as dC,q as Vn,qa as Ft,qb as MS,qc as XS,qd as eP,qe as ln,qf as fr,qg as Uh,qh as dP,qi as Qn,qj as cC,r as lS,ra as ut,rb as DS,rc as Kl,rd as Ct,re as Ca,rf as Wh,rg as $h,rh as Ra,ri as md,rj as bu,s as Pt,sa as Xe,sb as RS,sc as zm,sd as lv,se as Ah,sf as yr,sg as Kh,sh as nu,si as uu,sj as hC,t as ch,ta as yo,tb as AS,tc as UL,td as Yl,te as _v,tf as Bh,tg as qh,th as xe,ti as pu,tj as ai,u as hh,ua as SS,ub as Mm,uc as ql,ud as _i,ue as Nt,uf as Vh,ug as lx,uh as jt,ui as Ge,uj as _r,v as dS,va as da,vb as Ye,vc as xa,vd as dv,ve as nt,vf as Gh,vg as Xh,vh as Px,vi as Do,vj as Su,w as cS,wa as vh,wb as FS,wc as le,wd as Ke,we as ot,wf as sd,wg as Yh,wh as Eo,wi as rt,wj as uC,x as hS,xa as vS,xb as NS,xc as Fi,xd as zi,xe as Me,xf as ad,xg as Jm,xh as Mx,xi as Ki,xj as vu,y as vt,ya as _e,yb as jL,yc as Be,yd as cv,ye as Ne,yf as ld,yg as Pa,yh as ou,yi as zx,yj as pC,z as uS,za as Xt,zb as zS,zc as Ve,zd as Gm,ze as wv,zf as Lv,zg as dx,zh as ru,zi as xr,zj as cg}from"./chunk-IJDARVB7.mjs";import{a as tS,d as Fl,e as Yr,f as VL,g as Zr,h as St,i as iS,j as nS,k as oS}from"./chunk-AH6KKUH7.mjs";var JE=Yr(Vs=>{vt();ut();Le();yo();G();ue();Ci();Om();ee();He();Re();cu();fP();gP();Q();wt();Ee();Be();ps();var qE=Vs&&Vs.__decorate||function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},XE=Vs&&Vs.__param||function(s,e){return function(t,i){e(t,i,s)}},ob=Vs&&Vs.__awaiter||function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},kc=class{constructor(e,t){this._editor=e,this._workerService=t,this._disposables=new A,this._sessionDisposables=new A,this._disposables.add(Fm.onDidChange(this._update,this)),this._disposables.add(e.onDidChangeModel(()=>this._update())),this._disposables.add(e.onDidChangeModelLanguage(()=>this._update())),this._disposables.add(e.onDidChangeConfiguration(i=>{i.hasChanged(49)&&this._update()}))}dispose(){this._disposables.dispose(),this._sessionDisposables.dispose()}_update(){if(this._sessionDisposables.clear(),!this._editor.getOption(49)||!this._editor.hasModel())return;let e=this._editor.getModel(),[t]=Fm.ordered(e);if(!t||!t.autoFormatTriggerCharacters)return;let i=new xo;for(let n of t.autoFormatTriggerCharacters)i.add(n.charCodeAt(0));this._sessionDisposables.add(this._editor.onDidType(n=>{let o=n.charCodeAt(n.length-1);i.has(o)&&this._trigger(String.fromCharCode(o))}))}_trigger(e){if(!this._editor.hasModel()||this._editor.getSelections().length>1||!this._editor.getSelection().isEmpty())return;let t=this._editor.getModel(),i=this._editor.getPosition(),n=new Ft,o=this._editor.onDidChangeModelContent(r=>{if(r.isFlush){n.cancel(),o.dispose();return}for(let a=0,l=r.changes.length;a<l;a++)if(r.changes[a].range.endLineNumber<=i.lineNumber){n.cancel(),o.dispose();return}});CC(this._workerService,t,i,e,t.getFormattingOptions(),n.token).then(r=>{n.token.isCancellationRequested||Pt(r)&&(SC.execute(this._editor,r,!0),vC(r))}).finally(()=>{o.dispose()})}};kc.ID="editor.contrib.autoFormat";kc=qE([XE(1,Lo)],kc);var Lc=class{constructor(e,t){this.editor=e,this._instantiationService=t,this._callOnDispose=new A,this._callOnModel=new A,this._callOnDispose.add(e.onDidChangeConfiguration(()=>this._update())),this._callOnDispose.add(e.onDidChangeModel(()=>this._update())),this._callOnDispose.add(e.onDidChangeModelLanguage(()=>this._update())),this._callOnDispose.add(Am.onDidChange(this._update,this))}dispose(){this._callOnDispose.dispose(),this._callOnModel.dispose()}_update(){this._callOnModel.clear(),!!this.editor.getOption(48)&&(!this.editor.hasModel()||!Am.has(this.editor.getModel())||this._callOnModel.add(this.editor.onDidPaste(({range:e})=>this._trigger(e))))}_trigger(e){!this.editor.hasModel()||this.editor.getSelections().length>1||this._instantiationService.invokeFunction(fg,this.editor,e,2,Jn.None,ge.None).catch(de)}};Lc.ID="editor.contrib.formatOnPaste";Lc=qE([XE(1,le)],Lc);var YE=class extends F{constructor(){super({id:"editor.action.formatDocument",label:u("formatDocument.label","Format Document"),alias:"Format Document",precondition:O.and(S.notInCompositeEditor,S.writable,S.hasDocumentFormattingProvider),kbOpts:{kbExpr:S.editorTextFocus,primary:1572,linux:{primary:3111},weight:100},contextMenuOpts:{group:"1_modification",order:1.3}})}run(e,t){return ob(this,void 0,void 0,function*(){if(t.hasModel()){let i=e.get(le);yield e.get(Mo).showWhile(i.invokeFunction(xC,t,1,Jn.None,ge.None),250)}})}},ZE=class extends F{constructor(){super({id:"editor.action.formatSelection",label:u("formatSelection.label","Format Selection"),alias:"Format Selection",precondition:O.and(S.writable,S.hasDocumentSelectionFormattingProvider),kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2084),weight:100},contextMenuOpts:{when:S.hasNonEmptySelection,group:"1_modification",order:1.31}})}run(e,t){return ob(this,void 0,void 0,function*(){if(!t.hasModel())return;let i=e.get(le),n=t.getModel(),o=t.getSelections().map(a=>a.isEmpty()?new b(a.startLineNumber,1,a.startLineNumber,n.getLineMaxColumn(a.startLineNumber)):a);yield e.get(Mo).showWhile(i.invokeFunction(fg,t,o,1,Jn.None,ge.None),250)})}};J(kc.ID,kc);J(Lc.ID,Lc);I(YE);I(ZE);Pe.registerCommand("editor.action.format",s=>ob(void 0,void 0,void 0,function*(){let e=s.get(Ve).getFocusedCodeEditor();if(!e||!e.hasModel())return;let t=s.get(dt);e.getSelection().isEmpty()?yield t.executeCommand("editor.action.formatDocument"):yield t.executeCommand("editor.action.formatSelection")}))});var dR,QE,cR,Gs,rb,eI,Xo,js,sb,nm=Fl(()=>{vt();ut();Le();GL();ga();tt();ee();Re();md();Be();ns();hr();G();dR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},QE=function(s,e){return function(t,i){e(t,i,s)}},cR=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Gs=class{remove(){this.parent&&this.parent.children.delete(this.id)}static findId(e,t){let i;typeof e=="string"?i=`${t.id}/${e}`:(i=`${t.id}/${e.name}`,t.children.get(i)!==void 0&&(i=`${t.id}/${e.name}_${e.range.startLineNumber}_${e.range.startColumn}`));let n=i;for(let o=0;t.children.get(n)!==void 0;o++)n=`${i}_${o}`;return n}static empty(e){return e.children.size===0}},rb=class extends Gs{constructor(e,t,i){super();this.id=e,this.parent=t,this.symbol=i,this.children=new Map}},eI=class extends Gs{constructor(e,t,i,n){super();this.id=e,this.parent=t,this.label=i,this.order=n,this.children=new Map}},Xo=class extends Gs{constructor(e){super();this.uri=e,this.id="root",this.parent=void 0,this._groups=new Map,this.children=new Map,this.id="root",this.parent=void 0}static create(e,t){let i=new Ft(t),n=new Xo(e.uri),o=In.ordered(e),r=o.map((l,c)=>{var d;let h=Gs.findId(`provider_${c}`,n),p=new eI(h,n,(d=l.displayName)!==null&&d!==void 0?d:"Unknown Outline Provider",c);return Promise.resolve(l.provideDocumentSymbols(e,i.token)).then(m=>{for(let f of m||[])Xo._makeOutlineElement(f,p);return p},m=>(Ue(m),p)).then(m=>{Gs.empty(m)?m.remove():n._groups.set(h,m)})}),a=In.onDidChange(()=>{let l=In.ordered(e);Jr(l,o)||i.cancel()});return Promise.all(r).then(()=>i.token.isCancellationRequested&&!t.isCancellationRequested?Xo.create(e,t):n._compact()).finally(()=>{a.dispose()})}static _makeOutlineElement(e,t){let i=Gs.findId(e,t),n=new rb(i,t,e);if(e.children)for(let o of e.children)Xo._makeOutlineElement(o,n);t.children.set(n.id,n)}_compact(){let e=0;for(let[t,i]of this._groups)i.children.size===0?this._groups.delete(t):e+=1;if(e!==1)this.children=this._groups;else{let t=Tm.first(this._groups.values());for(let[,i]of t.children)i.parent=this,this.children.set(i.id,i)}return this}getTopLevelSymbols(){let e=[];for(let t of this.children.values())t instanceof rb?e.push(t.symbol):e.push(...Tm.map(t.children.values(),i=>i.symbol));return e.sort((t,i)=>b.compareRangesUsingStarts(t.range,i.range))}asListOfDocumentSymbols(){let e=this.getTopLevelSymbols(),t=[];return Xo._flattenDocumentSymbols(t,e,""),t.sort((i,n)=>U.compare(b.getStartPosition(i.range),b.getStartPosition(n.range))||U.compare(b.getEndPosition(n.range),b.getEndPosition(i.range)))}static _flattenDocumentSymbols(e,t,i){for(let n of t)e.push({kind:n.kind,tags:n.tags,name:n.name,detail:n.detail,containerName:n.containerName||i,range:n.range,selectionRange:n.selectionRange,children:void 0}),n.children&&Xo._flattenDocumentSymbols(e,n.children,n.name)}},js=Fi("IOutlineModelService"),sb=class{constructor(e,t){this._disposables=new A,this._cache=new Un(10,.7),this._debounceInformation=e.for(In,"DocumentSymbols",{min:350}),this._disposables.add(t.onModelRemoved(i=>{this._cache.delete(i.id)}))}dispose(){this._disposables.dispose()}getOrCreate(e,t){return cR(this,void 0,void 0,function*(){let i=In.ordered(e),n=this._cache.get(e.id);if(!n||n.versionId!==e.getVersionId()||!Jr(n.provider,i)){let r=new Ft;n={versionId:e.getVersionId(),provider:i,promiseCnt:0,source:r,promise:Xo.create(e,r.token),model:void 0},this._cache.set(e.id,n);let a=Date.now();n.promise.then(l=>{n.model=l,this._debounceInformation.update(e,Date.now()-a)}).catch(l=>{this._cache.delete(e.id)})}if(n.model)return n.model;n.promiseCnt+=1;let o=t.onCancellationRequested(()=>{--n.promiseCnt===0&&(n.source.cancel(),this._cache.delete(e.id))});try{return yield n.promise}finally{o.dispose()}})}};sb=dR([QE(0,Qn),QE(1,Yt)],sb);Ni(js,sb,!0)});var tI=Yr(ab=>{ut();qt();Xt();Co();nm();wt();var hR=ab&&ab.__awaiter||function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})};Pe.registerCommand("_executeDocumentSymbolProvider",function(s,...e){return hR(this,void 0,void 0,function*(){let[t]=e;qe(_e.isUri(t));let i=s.get(js),o=yield s.get(Gt).createModelReference(t);try{return(yield i.getOrCreate(o.object.textEditorModel,ge.None)).getTopLevelSymbols()}finally{o.dispose()}})})});var db,cI=Fl(()=>{Mt();db=class{constructor(e,t,i){this._editRange=e,this._originalSelection=t,this._text=i}getEditOperations(e,t){t.addTrackedEditOperation(this._editRange,this._text)}computeCursorState(e,t){let n=t.getInverseEditOperations()[0].range;return this._originalSelection.isEmpty()?new X(n.endLineNumber,Math.min(this._originalSelection.positionColumn,n.endColumn),n.endLineNumber,Math.min(this._originalSelection.positionColumn,n.endColumn)):new X(n.endLineNumber,n.endColumn-this._text.length,n.endLineNumber,n.endColumn)}}});var pI=Yr(Fc=>{ke();Le();bd();ue();ee();Mt();He();jt();cu();eu();Q();Ne();cI();var uR=Fc&&Fc.__decorate||function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},pR=Fc&&Fc.__param||function(s,e){return function(t,i){e(t,i,s)}},Br=class cb{constructor(e,t){this.decorationIds=[],this.editor=e,this.editorWorkerService=t}static get(e){return e.getContribution(cb.ID)}dispose(){}run(e,t){this.currentRequest&&this.currentRequest.cancel();let i=this.editor.getSelection(),n=this.editor.getModel();if(!n||!i)return;let o=i;if(o.startLineNumber!==o.endLineNumber)return;let r=new wu(this.editor,5),a=n.uri;return this.editorWorkerService.canNavigateValueSet(a)?(this.currentRequest=Oe(l=>this.editorWorkerService.navigateValueSet(a,o,t)),this.currentRequest.then(l=>{if(!l||!l.range||!l.value||!r.validate(this.editor))return;let c=b.lift(l.range),d=l.range,h=l.value.length-(o.endColumn-o.startColumn);d={startLineNumber:d.startLineNumber,startColumn:d.startColumn,endLineNumber:d.endLineNumber,endColumn:d.startColumn+l.value.length},h>1&&(o=new X(o.startLineNumber,o.startColumn,o.endLineNumber,o.endColumn+h-1));let p=new db(c,o,l.value);this.editor.pushUndoStop(),this.editor.executeCommand(e,p),this.editor.pushUndoStop(),this.decorationIds=this.editor.deltaDecorations(this.decorationIds,[{range:d,options:cb.DECORATION}]),this.decorationRemover&&this.decorationRemover.cancel(),this.decorationRemover=ua(350),this.decorationRemover.then(()=>this.decorationIds=this.editor.deltaDecorations(this.decorationIds,[])).catch(de)}).catch(de)):Promise.resolve(void 0)}};Br.ID="editor.contrib.inPlaceReplaceController";Br.DECORATION=xe.register({description:"in-place-replace",className:"valueSetReplacement"});Br=uR([pR(1,Lo)],Br);var hI=class extends F{constructor(){super({id:"editor.action.inPlaceReplace.up",label:u("InPlaceReplaceAction.previous.label","Replace with Previous Value"),alias:"Replace with Previous Value",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:3154,weight:100}})}run(e,t){let i=Br.get(t);return i?i.run(this.id,!0):Promise.resolve(void 0)}},uI=class extends F{constructor(){super({id:"editor.action.inPlaceReplace.down",label:u("InPlaceReplaceAction.next.label","Replace with Next Value"),alias:"Replace with Next Value",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:3156,weight:100}})}run(e,t){let i=Br.get(t);return i?i.run(this.id,!1):Promise.resolve(void 0)}};J(Br.ID,Br);I(hI);I(uI);Me((s,e)=>{let t=s.getColor(Qh);t&&e.addRule(`.monaco-editor.vs .valueSetReplacement { outline: solid 2px ${t}; }`)})});var Ur,Mb=Fl(()=>{Ln();tP();ue();Q();Ur=class extends F{constructor(){super({id:Ur.ID,label:u({key:"toggle.tabMovesFocus",comment:["Turn on/off use of tab key for moving focus around VS Code"]},"Toggle Tab Key Moves Focus"),alias:"Toggle Tab Key Moves Focus",precondition:void 0,kbOpts:{kbExpr:null,primary:2091,mac:{primary:1323},weight:100}})}run(e,t){let n=!Xm.getTabFocusMode();Xm.setTabFocusMode(n),n?_t(u("toggle.tabMovesFocus.on","Pressing Tab will now move focus to the next focusable element")):_t(u("toggle.tabMovesFocus.off","Pressing Tab will now insert the tab character"))}};Ur.ID="editor.action.toggleTabFocusMode";I(Ur)});var yk=Yr(jc=>{ke();G();ue();Re();pP();hr();mP();uP();kn();Ne();md();Wl();var zR=jc&&jc.__decorate||function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},cm=jc&&jc.__param||function(s,e){return function(t,i){e(t,i,s)}},Gc=class extends z{constructor(e,t,i,n,o){super();this._modelService=t,this._themeService=i,this._configurationService=n,this._editor=e,this._debounceInformation=o.for(Nm,"DocumentRangeSemanticTokens",{min:100,max:500}),this._tokenizeViewport=new $e(()=>this._tokenizeViewportNow(),100),this._outstandingRequests=[];let r=()=>{this._editor.hasModel()&&this._tokenizeViewport.schedule(this._debounceInformation.get(this._editor.getModel()))};this._register(this._editor.onDidScrollChange(()=>{r()})),this._register(this._editor.onDidChangeModel(()=>{this._cancelAll(),r()})),this._register(this._editor.onDidChangeModelContent(a=>{this._cancelAll(),r()})),this._register(Nm.onDidChange(()=>{this._cancelAll(),r()})),this._register(this._configurationService.onDidChangeConfiguration(a=>{a.affectsConfiguration(oC)&&(this._cancelAll(),r())})),this._register(this._themeService.onDidColorThemeChange(()=>{this._cancelAll(),r()}))}_cancelAll(){for(let e of this._outstandingRequests)e.cancel();this._outstandingRequests=[]}_removeOutstandingRequest(e){for(let t=0,i=this._outstandingRequests.length;t<i;t++)if(this._outstandingRequests[t]===e){this._outstandingRequests.splice(t,1);return}}_tokenizeViewportNow(){if(!this._editor.hasModel())return;let e=this._editor.getModel();if(e.hasCompleteSemanticTokens())return;if(!rC(e,this._themeService,this._configurationService)){e.hasSomeSemanticTokens()&&e.setSemanticTokens(null,!1);return}if(!iC(e)){e.hasSomeSemanticTokens()&&e.setSemanticTokens(null,!1);return}let t=this._editor.getVisibleRangesPlusViewportAboveBelow();this._outstandingRequests=this._outstandingRequests.concat(t.map(i=>this._requestRange(e,i)))}_requestRange(e,t){let i=e.getVersionId(),n=Oe(r=>Promise.resolve(nC(e,t,r))),o=new on(!1);return n.then(r=>{if(this._debounceInformation.update(e,o.elapsed()),!r||!r.tokens||e.isDisposed()||e.getVersionId()!==i)return;let{provider:a,tokens:l}=r,c=this._modelService.getSemanticTokensProviderStyling(a);e.setPartialSemanticTokens(t,tC(l,c,e.getLanguageId()))}).then(()=>this._removeOutstandingRequest(n),()=>this._removeOutstandingRequest(n)),n}};Gc.ID="editor.contrib.viewportSemanticTokens";Gc=zR([cm(1,Yt),cm(2,Nt),cm(3,it),cm(4,Qn)],Gc);J(Gc.ID,Gc)});var eL=Fl(()=>{});var rL=Yr(Uc=>{eL();Ae();UL();cC();Ln();ds();G();Pi();Ye();Xt();ue();He();Mb();Ee();Be();Ki();qi();mt();Ne();Cr();var tL=Uc&&Uc.__decorate||function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},mm=Uc&&Uc.__param||function(s,e){return function(t,i){e(t,i,s)}},iL=new pe("accessibilityHelpWidgetVisible",!1),ta=class nL extends z{constructor(e,t){super();this._editor=e,this._widget=this._register(t.createInstance(Cl,this._editor))}static get(e){return e.getContribution(nL.ID)}show(){this._widget.show()}hide(){this._widget.hide()}};ta.ID="editor.contrib.accessibilityHelpController";ta=tL([mm(1,le)],ta);function KR(s,e){return!s||s.length===0?yt.noSelection:s.length===1?e?Ui(yt.singleSelectionRange,s[0].positionLineNumber,s[0].positionColumn,e):Ui(yt.singleSelection,s[0].positionLineNumber,s[0].positionColumn):e?Ui(yt.multiSelectionRange,s.length,e):s.length>0?Ui(yt.multiSelection,s.length):""}var Cl=class gm extends Ti{constructor(e,t,i,n){super();this._contextKeyService=t,this._keybindingService=i,this._openerService=n,this._editor=e,this._isVisibleKey=iL.bindTo(this._contextKeyService),this._domNode=zm(document.createElement("div")),this._domNode.setClassName("accessibilityHelpWidget"),this._domNode.setDisplay("none"),this._domNode.setAttribute("role","dialog"),this._domNode.setAttribute("aria-hidden","true"),this._contentDomNode=zm(document.createElement("div")),this._contentDomNode.setAttribute("role","document"),this._domNode.appendChild(this._contentDomNode),this._isVisible=!1,this._register(this._editor.onDidLayoutChange(()=>{this._isVisible&&this._layout()})),this._register(zi(this._contentDomNode.domNode,"keydown",o=>{if(!!this._isVisible&&(o.equals(2083)&&(_t(yt.emergencyConfOn),this._editor.updateOptions({accessibilitySupport:"on"}),_i(this._contentDomNode.domNode),this._buildContent(),this._contentDomNode.domNode.focus(),o.preventDefault(),o.stopPropagation()),o.equals(2086))){_t(yt.openingDocs);let r=this._editor.getRawOptions().accessibilityHelpUrl;typeof r=="undefined"&&(r="https://go.microsoft.com/fwlink/?linkid=852450"),this._openerService.open(_e.parse(r)),o.preventDefault(),o.stopPropagation()}})),this.onblur(this._contentDomNode.domNode,()=>{this.hide()}),this._editor.addOverlayWidget(this)}dispose(){this._editor.removeOverlayWidget(this),super.dispose()}getId(){return gm.ID}getDomNode(){return this._domNode.domNode}getPosition(){return{preference:null}}show(){this._isVisible||(this._isVisible=!0,this._isVisibleKey.set(!0),this._layout(),this._domNode.setDisplay("block"),this._domNode.setAttribute("aria-hidden","false"),this._contentDomNode.domNode.tabIndex=0,this._buildContent(),this._contentDomNode.domNode.focus())}_descriptionForCommand(e,t,i){let n=this._keybindingService.lookupKeybinding(e);return n?Ui(t,n.getAriaLabel()):Ui(i,e)}_buildContent(){let e=this._editor.getOptions(),t=this._editor.getSelections(),i=0;if(t){let a=this._editor.getModel();a&&t.forEach(l=>{i+=a.getValueLengthInRange(l)})}let n=KR(t,i);e.get(54)?e.get(81)?n+=yt.readonlyDiffEditor:n+=yt.editableDiffEditor:e.get(81)?n+=yt.readonlyEditor:n+=yt.editableEditor;let o=bi?yt.changeConfigToOnMac:yt.changeConfigToOnWinLinux;switch(e.get(2)){case 0:n+=`

 - `+o;break;case 2:n+=`

 - `+yt.auto_on;break;case 1:n+=`

 - `+yt.auto_off,n+=" "+o;break}e.get(130)?n+=`

 - `+this._descriptionForCommand(Ur.ID,yt.tabFocusModeOnMsg,yt.tabFocusModeOnMsgNoKb):n+=`

 - `+this._descriptionForCommand(Ur.ID,yt.tabFocusModeOffMsg,yt.tabFocusModeOffMsgNoKb);let r=bi?yt.openDocMac:yt.openDocWinLinux;n+=`

 - `+r,n+=`

`+yt.outroMsg,this._contentDomNode.domNode.appendChild(lC(n)),this._contentDomNode.domNode.setAttribute("aria-label",n)}hide(){!this._isVisible||(this._isVisible=!1,this._isVisibleKey.reset(),this._domNode.setDisplay("none"),this._domNode.setAttribute("aria-hidden","true"),this._contentDomNode.domNode.tabIndex=-1,_i(this._contentDomNode.domNode),this._editor.focus())}_layout(){let e=this._editor.getLayoutInfo(),t=Math.max(5,Math.min(gm.WIDTH,e.width-40)),i=Math.max(5,Math.min(gm.HEIGHT,e.height-40));this._domNode.setWidth(t),this._domNode.setHeight(i);let n=Math.round((e.height-i)/2);this._domNode.setTop(n);let o=Math.round((e.width-t)/2);this._domNode.setLeft(o)}};Cl.ID="editor.contrib.accessibilityHelpWidget";Cl.WIDTH=500;Cl.HEIGHT=300;Cl=tL([mm(1,ie),mm(2,rt),mm(3,bt)],Cl);var oL=class extends F{constructor(){super({id:"editor.action.showAccessibilityHelp",label:yt.showAccessibilityHelpAction,alias:"Show Accessibility Help",precondition:void 0,kbOpts:{primary:571,weight:100,linux:{primary:1595,secondary:[571]}}})}run(e,t){let i=ta.get(t);i&&i.show()}};J(ta.ID,ta);I(oL);var qR=ct.bindToContribution(ta.get);$(new qR({id:"closeAccessibilityHelp",precondition:iL,handler:s=>s.hide(),kbOpts:{weight:100+100,kbExpr:S.focus,primary:9,secondary:[1033]}}));Me((s,e)=>{let t=s.getColor(cn);t&&e.addRule(`.monaco-editor .accessibilityHelpWidget { background-color: ${t}; }`);let i=s.getColor(Ta);i&&e.addRule(`.monaco-editor .accessibilityHelpWidget { color: ${i}; }`);let n=s.getColor(yr);n&&e.addRule(`.monaco-editor .accessibilityHelpWidget { box-shadow: 0 2px 8px ${n}; }`);let o=s.getColor(dn);o&&e.addRule(`.monaco-editor .accessibilityHelpWidget { border: 2px solid ${o}; }`)})});var sL=Fl(()=>{});var cL=Yr(Kc=>{sL();Ae();Zn();G();ue();Re();qL();rn();fC();mt();Ne();Cr();_v();var XR=Kc&&Kc.__decorate||function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},aL=Kc&&Kc.__param||function(s,e){return function(t,i){e(t,i,s)}},_l=class lL extends z{constructor(e,t,i){super();this._editor=e,this._languageService=i,this._widget=null,this._register(this._editor.onDidChangeModel(n=>this.stop())),this._register(this._editor.onDidChangeModelLanguage(n=>this.stop())),this._register(va.onDidChange(n=>this.stop())),this._register(this._editor.onKeyUp(n=>n.keyCode===9&&this.stop()))}static get(e){return e.getContribution(lL.ID)}dispose(){this.stop(),super.dispose()}launch(){this._widget||!this._editor.hasModel()||(this._widget=new qc(this._editor,this._languageService))}stop(){this._widget&&(this._widget.dispose(),this._widget=null)}};_l.ID="editor.contrib.inspectTokens";_l=XR([aL(1,Cu),aL(2,ft)],_l);var dL=class extends F{constructor(){super({id:"editor.action.inspectTokens",label:Hx.inspectTokensAction,alias:"Developer: Inspect Tokens",precondition:void 0})}run(e,t){let i=_l.get(t);i&&i.launch()}};function YR(s){let e="";for(let t=0,i=s.length;t<i;t++){let n=s.charCodeAt(t);switch(n){case 9:e+="\u2192";break;case 32:e+="\xB7";break;default:e+=String.fromCharCode(n)}}return e}function ZR(s,e){let t=va.get(e);if(t)return t;let i=s.encodeLanguageId(e);return{getInitialState:()=>ZS,tokenize:(n,o,r)=>JS(e,r),tokenizeEncoded:(n,o,r)=>QS(i,r)}}var qc=class extends z{constructor(e,t){super();this.allowEditorOverflow=!0,this._editor=e,this._languageService=t,this._model=this._editor.getModel(),this._domNode=document.createElement("div"),this._domNode.className="tokens-inspect-widget",this._tokenizationSupport=ZR(this._languageService.languageIdCodec,this._model.getLanguageId()),this._compute(this._editor.getPosition()),this._register(this._editor.onDidChangeCursorPosition(i=>this._compute(this._editor.getPosition()))),this._editor.addContentWidget(this)}dispose(){this._editor.removeContentWidget(this),super.dispose()}getId(){return qc._ID}_compute(e){let t=this._getTokensAtLine(e.lineNumber),i=0;for(let l=t.tokens1.length-1;l>=0;l--){let c=t.tokens1[l];if(e.column-1>=c.offset){i=l;break}}let n=0;for(let l=t.tokens2.length>>>1;l>=0;l--)if(e.column-1>=t.tokens2[l<<1]){n=l;break}let o=this._model.getLineContent(e.lineNumber),r="";if(i<t.tokens1.length){let l=t.tokens1[i].offset,c=i+1<t.tokens1.length?t.tokens1[i+1].offset:o.length;r=o.substring(l,c)}rs(this._domNode,W("h2.tm-token",void 0,YR(r),W("span.tm-token-length",void 0,`${r.length} ${r.length===1?"char":"chars"}`))),H(this._domNode,W("hr.tokens-inspect-separator",{style:"clear:both"}));let a=(n<<1)+1<t.tokens2.length?this._decodeMetadata(t.tokens2[(n<<1)+1]):null;H(this._domNode,W("table.tm-metadata-table",void 0,W("tbody",void 0,W("tr",void 0,W("td.tm-metadata-key",void 0,"language"),W("td.tm-metadata-value",void 0,`${a?a.languageId:"-?-"}`)),W("tr",void 0,W("td.tm-metadata-key",void 0,"token type"),W("td.tm-metadata-value",void 0,`${a?this._tokenTypeToString(a.tokenType):"-?-"}`)),W("tr",void 0,W("td.tm-metadata-key",void 0,"font style"),W("td.tm-metadata-value",void 0,`${a?this._fontStyleToString(a.fontStyle):"-?-"}`)),W("tr",void 0,W("td.tm-metadata-key",void 0,"foreground"),W("td.tm-metadata-value",void 0,`${a?we.Format.CSS.formatHex(a.foreground):"-?-"}`)),W("tr",void 0,W("td.tm-metadata-key",void 0,"background"),W("td.tm-metadata-value",void 0,`${a?we.Format.CSS.formatHex(a.background):"-?-"}`))))),H(this._domNode,W("hr.tokens-inspect-separator")),i<t.tokens1.length&&H(this._domNode,W("span.tm-token-type",void 0,t.tokens1[i].type)),this._editor.layoutContentWidget(this)}_decodeMetadata(e){let t=va.getColorMap(),i=fa.getLanguageId(e),n=fa.getTokenType(e),o=fa.getFontStyle(e),r=fa.getForeground(e),a=fa.getBackground(e);return{languageId:this._languageService.languageIdCodec.decodeLanguageId(i),tokenType:n,fontStyle:o,foreground:t[r],background:t[a]}}_tokenTypeToString(e){switch(e){case 0:return"Other";case 1:return"Comment";case 2:return"String";case 3:return"RegEx";default:return"??"}}_fontStyleToString(e){let t="";return e&1&&(t+="italic "),e&2&&(t+="bold "),e&4&&(t+="underline "),e&8&&(t+="strikethrough "),t.length===0&&(t="---"),t}_getTokensAtLine(e){let t=this._getStateBeforeLine(e),i=this._tokenizationSupport.tokenize(this._model.getLineContent(e),!0,t),n=this._tokenizationSupport.tokenizeEncoded(this._model.getLineContent(e),!0,t);return{startState:t,tokens1:i.tokens,tokens2:n.tokens,endState:i.endState}}_getStateBeforeLine(e){let t=this._tokenizationSupport.getInitialState();for(let i=1;i<e;i++)t=this._tokenizationSupport.tokenize(this._model.getLineContent(i),!0,t).endState;return t}getDomNode(){return this._domNode}getPosition(){return{position:this._editor.getPosition(),preference:[2,1]}}};qc._ID="editor.contrib.inspectTokensWidget";J(_l.ID,_l);I(dL);Me((s,e)=>{let t=s.getColor(ka);if(t){let o=s.type===Ah.HIGH_CONTRAST?2:1;e.addRule(`.monaco-editor .tokens-inspect-widget { border: ${o}px solid ${t}; }`),e.addRule(`.monaco-editor .tokens-inspect-widget .tokens-inspect-separator { background-color: ${t}; }`)}let i=s.getColor(To);i&&e.addRule(`.monaco-editor .tokens-inspect-widget { background-color: ${i}; }`);let n=s.getColor(Ia);n&&e.addRule(`.monaco-editor .tokens-inspect-widget { color: ${n}; }`)})});var NL=Yr(()=>{});var $b={};VL($b,{CancellationTokenSource:()=>yP,Emitter:()=>bP,KeyCode:()=>SP,KeyMod:()=>vP,MarkerSeverity:()=>TP,MarkerTag:()=>EP,Position:()=>xP,Range:()=>CP,Selection:()=>_P,SelectionDirection:()=>wP,Token:()=>IP,Uri:()=>yg,editor:()=>Eu,languages:()=>Pn});var kP=Object.defineProperty,LP=Object.getOwnPropertyDescriptor,PP=Object.getOwnPropertyNames,MP=Object.prototype.hasOwnProperty,DP=(s,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of PP(e))!MP.call(s,n)&&(t||n!=="default")&&kP(s,n,{get:()=>e[n],enumerable:!(i=LP(e,n))||i.enumerable});return s},Sd={};DP(Sd,wr);var _C={},bg={},wC=class{constructor(s){St(this,"_languageId");St(this,"_loadingTriggered");St(this,"_lazyLoadPromise");St(this,"_lazyLoadPromiseResolve");St(this,"_lazyLoadPromiseReject");this._languageId=s,this._loadingTriggered=!1,this._lazyLoadPromise=new Promise((e,t)=>{this._lazyLoadPromiseResolve=e,this._lazyLoadPromiseReject=t})}static getOrCreate(s){return bg[s]||(bg[s]=new wC(s)),bg[s]}load(){return this._loadingTriggered||(this._loadingTriggered=!0,_C[this._languageId].loader().then(s=>this._lazyLoadPromiseResolve(s),s=>this._lazyLoadPromiseReject(s))),this._lazyLoadPromise}};function k(s){let e=s.id;_C[e]=s,Sd.languages.register(s);let t=wC.getOrCreate(e);Sd.languages.registerTokensProviderFactory(e,{create:async()=>(await t.load()).language}),Sd.languages.onLanguage(e,async()=>{let i=await t.load();Sd.languages.setLanguageConfiguration(e,i.conf)})}k({id:"abap",extensions:[".abap"],aliases:["abap","ABAP"],loader:()=>import("./abap-S3OEKAT5.mjs")});k({id:"apex",extensions:[".cls"],aliases:["Apex","apex"],mimetypes:["text/x-apex-source","text/x-apex"],loader:()=>import("./apex-M4SFKP7M.mjs")});k({id:"azcli",extensions:[".azcli"],aliases:["Azure CLI","azcli"],loader:()=>import("./azcli-QLUNRANF.mjs")});k({id:"bat",extensions:[".bat",".cmd"],aliases:["Batch","bat"],loader:()=>import("./bat-YXSQRZ62.mjs")});k({id:"bicep",extensions:[".bicep"],aliases:["Bicep"],loader:()=>import("./bicep-4TR2SSK7.mjs")});k({id:"cameligo",extensions:[".mligo"],aliases:["Cameligo"],loader:()=>import("./cameligo-ULSDO4QJ.mjs")});k({id:"clojure",extensions:[".clj",".cljs",".cljc",".edn"],aliases:["clojure","Clojure"],loader:()=>import("./clojure-QJTY2HRK.mjs")});k({id:"coffeescript",extensions:[".coffee"],aliases:["CoffeeScript","coffeescript","coffee"],mimetypes:["text/x-coffeescript","text/coffeescript"],loader:()=>import("./coffee-UPWTESV5.mjs")});k({id:"c",extensions:[".c",".h"],aliases:["C","c"],loader:()=>import("./cpp-2K35256B.mjs")});k({id:"cpp",extensions:[".cpp",".cc",".cxx",".hpp",".hh",".hxx"],aliases:["C++","Cpp","cpp"],loader:()=>import("./cpp-2K35256B.mjs")});k({id:"csharp",extensions:[".cs",".csx",".cake"],aliases:["C#","csharp"],loader:()=>import("./csharp-AC3O5WV3.mjs")});k({id:"csp",extensions:[],aliases:["CSP","csp"],loader:()=>import("./csp-VQFYXPUC.mjs")});k({id:"css",extensions:[".css"],aliases:["CSS","css"],mimetypes:["text/css"],loader:()=>import("./css-QAEG5ZAB.mjs")});k({id:"dart",extensions:[".dart"],aliases:["Dart","dart"],mimetypes:["text/x-dart-source","text/x-dart"],loader:()=>import("./dart-RCCXJGRJ.mjs")});k({id:"dockerfile",extensions:[".dockerfile"],filenames:["Dockerfile"],aliases:["Dockerfile"],loader:()=>import("./dockerfile-QXXPI3Y3.mjs")});k({id:"ecl",extensions:[".ecl"],aliases:["ECL","Ecl","ecl"],loader:()=>import("./ecl-P36SUXQB.mjs")});k({id:"elixir",extensions:[".ex",".exs"],aliases:["Elixir","elixir","ex"],loader:()=>import("./elixir-W46NPTYJ.mjs")});k({id:"flow9",extensions:[".flow"],aliases:["Flow9","Flow","flow9","flow"],loader:()=>import("./flow9-REUG3SGK.mjs")});k({id:"fsharp",extensions:[".fs",".fsi",".ml",".mli",".fsx",".fsscript"],aliases:["F#","FSharp","fsharp"],loader:()=>import("./fsharp-SSCEE4CJ.mjs")});k({id:"freemarker2",extensions:[".ftl",".ftlh",".ftlx"],aliases:["FreeMarker2","Apache FreeMarker2"],loader:()=>import("./freemarker2-WZG4ZXKB.mjs").then(s=>s.TagAutoInterpolationDollar)});k({id:"freemarker2.tag-angle.interpolation-dollar",aliases:["FreeMarker2 (Angle/Dollar)","Apache FreeMarker2 (Angle/Dollar)"],loader:()=>import("./freemarker2-WZG4ZXKB.mjs").then(s=>s.TagAngleInterpolationDollar)});k({id:"freemarker2.tag-bracket.interpolation-dollar",aliases:["FreeMarker2 (Bracket/Dollar)","Apache FreeMarker2 (Bracket/Dollar)"],loader:()=>import("./freemarker2-WZG4ZXKB.mjs").then(s=>s.TagBracketInterpolationDollar)});k({id:"freemarker2.tag-angle.interpolation-bracket",aliases:["FreeMarker2 (Angle/Bracket)","Apache FreeMarker2 (Angle/Bracket)"],loader:()=>import("./freemarker2-WZG4ZXKB.mjs").then(s=>s.TagAngleInterpolationBracket)});k({id:"freemarker2.tag-bracket.interpolation-bracket",aliases:["FreeMarker2 (Bracket/Bracket)","Apache FreeMarker2 (Bracket/Bracket)"],loader:()=>import("./freemarker2-WZG4ZXKB.mjs").then(s=>s.TagBracketInterpolationBracket)});k({id:"freemarker2.tag-auto.interpolation-dollar",aliases:["FreeMarker2 (Auto/Dollar)","Apache FreeMarker2 (Auto/Dollar)"],loader:()=>import("./freemarker2-WZG4ZXKB.mjs").then(s=>s.TagAutoInterpolationDollar)});k({id:"freemarker2.tag-auto.interpolation-bracket",aliases:["FreeMarker2 (Auto/Bracket)","Apache FreeMarker2 (Auto/Bracket)"],loader:()=>import("./freemarker2-WZG4ZXKB.mjs").then(s=>s.TagAutoInterpolationBracket)});k({id:"go",extensions:[".go"],aliases:["Go"],loader:()=>import("./go-PWS6H4OD.mjs")});k({id:"graphql",extensions:[".graphql",".gql"],aliases:["GraphQL","graphql","gql"],mimetypes:["application/graphql"],loader:()=>import("./graphql-TSX2OS3D.mjs")});k({id:"handlebars",extensions:[".handlebars",".hbs"],aliases:["Handlebars","handlebars","hbs"],mimetypes:["text/x-handlebars-template"],loader:()=>import("./handlebars-46YCGFXN.mjs")});k({id:"hcl",extensions:[".tf",".tfvars",".hcl"],aliases:["Terraform","tf","HCL","hcl"],loader:()=>import("./hcl-M3SO6DY3.mjs")});k({id:"html",extensions:[".html",".htm",".shtml",".xhtml",".mdoc",".jsp",".asp",".aspx",".jshtm"],aliases:["HTML","htm","html","xhtml"],mimetypes:["text/html","text/x-jshtm","text/template","text/ng-template"],loader:()=>import("./html-V6KDFF2D.mjs")});k({id:"ini",extensions:[".ini",".properties",".gitconfig"],filenames:["config",".gitattributes",".gitconfig",".editorconfig"],aliases:["Ini","ini"],loader:()=>import("./ini-QJXKWBZM.mjs")});k({id:"java",extensions:[".java",".jav"],aliases:["Java","java"],mimetypes:["text/x-java-source","text/x-java"],loader:()=>import("./java-4SEZROBX.mjs")});k({id:"javascript",extensions:[".js",".es6",".jsx",".mjs",".cjs"],firstLine:"^#!.*\\bnode",filenames:["jakefile"],aliases:["JavaScript","javascript","js"],mimetypes:["text/javascript"],loader:()=>import("./javascript-35JQ3EYW.mjs")});k({id:"julia",extensions:[".jl"],aliases:["julia","Julia"],loader:()=>import("./julia-GGKS2LXE.mjs")});k({id:"kotlin",extensions:[".kt"],aliases:["Kotlin","kotlin"],mimetypes:["text/x-kotlin-source","text/x-kotlin"],loader:()=>import("./kotlin-LOW7LZAE.mjs")});k({id:"less",extensions:[".less"],aliases:["Less","less"],mimetypes:["text/x-less","text/less"],loader:()=>import("./less-XXO7EFEW.mjs")});k({id:"lexon",extensions:[".lex"],aliases:["Lexon"],loader:()=>import("./lexon-PA3AJXCQ.mjs")});k({id:"lua",extensions:[".lua"],aliases:["Lua","lua"],loader:()=>import("./lua-4XBMVTFQ.mjs")});k({id:"liquid",extensions:[".liquid",".html.liquid"],aliases:["Liquid","liquid"],mimetypes:["application/liquid"],loader:()=>import("./liquid-T2JE3EL3.mjs")});k({id:"m3",extensions:[".m3",".i3",".mg",".ig"],aliases:["Modula-3","Modula3","modula3","m3"],loader:()=>import("./m3-MLRMI7T4.mjs")});k({id:"markdown",extensions:[".md",".markdown",".mdown",".mkdn",".mkd",".mdwn",".mdtxt",".mdtext"],aliases:["Markdown","markdown"],loader:()=>import("./markdown-NNFXC7L3.mjs")});k({id:"mips",extensions:[".s"],aliases:["MIPS","MIPS-V"],mimetypes:["text/x-mips","text/mips","text/plaintext"],loader:()=>import("./mips-AKXZT5PS.mjs")});k({id:"msdax",extensions:[".dax",".msdax"],aliases:["DAX","MSDAX"],loader:()=>import("./msdax-AQ7GAPP3.mjs")});k({id:"mysql",extensions:[],aliases:["MySQL","mysql"],loader:()=>import("./mysql-UZJQDP7Q.mjs")});k({id:"objective-c",extensions:[".m"],aliases:["Objective-C"],loader:()=>import("./objective-c-VGB47DIN.mjs")});k({id:"pascal",extensions:[".pas",".p",".pp"],aliases:["Pascal","pas"],mimetypes:["text/x-pascal-source","text/x-pascal"],loader:()=>import("./pascal-EFJHYKJQ.mjs")});k({id:"pascaligo",extensions:[".ligo"],aliases:["Pascaligo","ligo"],loader:()=>import("./pascaligo-ZZEN6QCV.mjs")});k({id:"perl",extensions:[".pl"],aliases:["Perl","pl"],loader:()=>import("./perl-BMTJFPZ4.mjs")});k({id:"pgsql",extensions:[],aliases:["PostgreSQL","postgres","pg","postgre"],loader:()=>import("./pgsql-XOAP2GZY.mjs")});k({id:"php",extensions:[".php",".php4",".php5",".phtml",".ctp"],aliases:["PHP","php"],mimetypes:["application/x-php"],loader:()=>import("./php-PUW23O37.mjs")});k({id:"pla",extensions:[".pla"],loader:()=>import("./pla-HUMLE5VY.mjs")});k({id:"postiats",extensions:[".dats",".sats",".hats"],aliases:["ATS","ATS/Postiats"],loader:()=>import("./postiats-UGOSBUUD.mjs")});k({id:"powerquery",extensions:[".pq",".pqm"],aliases:["PQ","M","Power Query","Power Query M"],loader:()=>import("./powerquery-VFA43CSO.mjs")});k({id:"powershell",extensions:[".ps1",".psm1",".psd1"],aliases:["PowerShell","powershell","ps","ps1"],loader:()=>import("./powershell-WYHXLCWK.mjs")});k({id:"proto",extensions:[".proto"],aliases:["protobuf","Protocol Buffers"],loader:()=>import("./protobuf-GZWLIKTJ.mjs")});k({id:"pug",extensions:[".jade",".pug"],aliases:["Pug","Jade","jade"],loader:()=>import("./pug-YU3PWWQZ.mjs")});k({id:"python",extensions:[".py",".rpy",".pyw",".cpy",".gyp",".gypi"],aliases:["Python","py"],firstLine:"^#!/.*\\bpython[0-9.-]*\\b",loader:()=>import("./python-7AHLAHAX.mjs")});k({id:"qsharp",extensions:[".qs"],aliases:["Q#","qsharp"],loader:()=>import("./qsharp-YDMFLIZD.mjs")});k({id:"r",extensions:[".r",".rhistory",".rmd",".rprofile",".rt"],aliases:["R","r"],loader:()=>import("./r-4OCUVCRR.mjs")});k({id:"razor",extensions:[".cshtml"],aliases:["Razor","razor"],mimetypes:["text/x-cshtml"],loader:()=>import("./razor-KSN3W3ZH.mjs")});k({id:"redis",extensions:[".redis"],aliases:["redis"],loader:()=>import("./redis-3DJHM2EC.mjs")});k({id:"redshift",extensions:[],aliases:["Redshift","redshift"],loader:()=>import("./redshift-7YCFLHQI.mjs")});k({id:"restructuredtext",extensions:[".rst"],aliases:["reStructuredText","restructuredtext"],loader:()=>import("./restructuredtext-ELNII65C.mjs")});k({id:"ruby",extensions:[".rb",".rbx",".rjs",".gemspec",".pp"],filenames:["rakefile","Gemfile"],aliases:["Ruby","rb"],loader:()=>import("./ruby-MTJHOUON.mjs")});k({id:"rust",extensions:[".rs",".rlib"],aliases:["Rust","rust"],loader:()=>import("./rust-CJCP3XP2.mjs")});k({id:"sb",extensions:[".sb"],aliases:["Small Basic","sb"],loader:()=>import("./sb-MBCSCWTV.mjs")});k({id:"scala",extensions:[".scala",".sc",".sbt"],aliases:["Scala","scala","SBT","Sbt","sbt","Dotty","dotty"],mimetypes:["text/x-scala-source","text/x-scala","text/x-sbt","text/x-dotty"],loader:()=>import("./scala-VYDUWTUA.mjs")});k({id:"scheme",extensions:[".scm",".ss",".sch",".rkt"],aliases:["scheme","Scheme"],loader:()=>import("./scheme-6GNFPKM3.mjs")});k({id:"scss",extensions:[".scss"],aliases:["Sass","sass","scss"],mimetypes:["text/x-scss","text/scss"],loader:()=>import("./scss-BA6Q7IVC.mjs")});k({id:"shell",extensions:[".sh",".bash"],aliases:["Shell","sh"],loader:()=>import("./shell-MB2XWQLO.mjs")});k({id:"sol",extensions:[".sol"],aliases:["sol","solidity","Solidity"],loader:()=>import("./solidity-74L6U5ZX.mjs")});k({id:"aes",extensions:[".aes"],aliases:["aes","sophia","Sophia"],loader:()=>import("./sophia-EWJLA4NC.mjs")});k({id:"sparql",extensions:[".rq"],aliases:["sparql","SPARQL"],loader:()=>import("./sparql-GSTSTRCO.mjs")});k({id:"sql",extensions:[".sql"],aliases:["SQL"],loader:()=>import("./sql-T4G5FQEH.mjs")});k({id:"st",extensions:[".st",".iecst",".iecplc",".lc3lib"],aliases:["StructuredText","scl","stl"],loader:()=>import("./st-3B7CJ2H6.mjs")});k({id:"swift",aliases:["Swift","swift"],extensions:[".swift"],mimetypes:["text/swift"],loader:()=>import("./swift-63OOMEOS.mjs")});k({id:"systemverilog",extensions:[".sv",".svh"],aliases:["SV","sv","SystemVerilog","systemverilog"],loader:()=>import("./systemverilog-6HE57IU4.mjs")});k({id:"verilog",extensions:[".v",".vh"],aliases:["V","v","Verilog","verilog"],loader:()=>import("./systemverilog-6HE57IU4.mjs")});k({id:"tcl",extensions:[".tcl"],aliases:["tcl","Tcl","tcltk","TclTk","tcl/tk","Tcl/Tk"],loader:()=>import("./tcl-BGKPJKP2.mjs")});k({id:"twig",extensions:[".twig"],aliases:["Twig","twig"],mimetypes:["text/x-twig"],loader:()=>import("./twig-6JRIPINY.mjs")});k({id:"typescript",extensions:[".ts",".tsx"],aliases:["TypeScript","ts","typescript"],mimetypes:["text/typescript"],loader:()=>import("./typescript-THWDXOPY.mjs")});k({id:"vb",extensions:[".vb"],aliases:["Visual Basic","vb"],loader:()=>import("./vb-LMHZRR3N.mjs")});k({id:"xml",extensions:[".xml",".dtd",".ascx",".csproj",".config",".wxi",".wxl",".wxs",".xaml",".svg",".svgz",".opf",".xsl"],firstLine:"(\\<\\?xml.*)|(\\<svg)|(\\<\\!doctype\\s+svg)",aliases:["XML","xml"],mimetypes:["text/xml","application/xml","application/xaml+xml","application/xml-dtd"],loader:()=>import("./xml-AJKKMSGB.mjs")});k({id:"yaml",extensions:[".yaml",".yml"],aliases:["YAML","yaml","YML","yml"],mimetypes:["application/x-yaml","text/x-yaml"],loader:()=>import("./yaml-XXBQG5LP.mjs")});var RP=Object.defineProperty,AP=Object.getOwnPropertyDescriptor,FP=Object.getOwnPropertyNames,NP=Object.prototype.hasOwnProperty,zP=(s,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of FP(e))!NP.call(s,n)&&(t||n!=="default")&&RP(s,n,{get:()=>e[n],enumerable:!(i=AP(e,n))||i.enumerable});return s},Ha={};zP(Ha,wr);var Sg=class{constructor(s,e,t){St(this,"_onDidChange",new Ha.Emitter);St(this,"_options");St(this,"_modeConfiguration");St(this,"_languageId");this._languageId=s,this.setOptions(e),this.setModeConfiguration(t)}get onDidChange(){return this._onDidChange.event}get languageId(){return this._languageId}get modeConfiguration(){return this._modeConfiguration}get diagnosticsOptions(){return this.options}get options(){return this._options}setOptions(s){this._options=s||Object.create(null),this._onDidChange.fire(this)}setDiagnosticsOptions(s){this.setOptions(s)}setModeConfiguration(s){this._modeConfiguration=s||Object.create(null),this._onDidChange.fire(this)}},vg={validate:!0,lint:{compatibleVendorPrefixes:"ignore",vendorPrefix:"warning",duplicateProperties:"warning",emptyRules:"warning",importStatement:"ignore",boxModel:"ignore",universalSelector:"ignore",zeroUnits:"ignore",fontFaceProperties:"warning",hexColorLength:"error",argumentsInColorFunction:"error",unknownProperties:"warning",ieHack:"ignore",unknownVendorSpecificProperties:"ignore",propertyIgnoredDueToDisplay:"warning",important:"ignore",float:"ignore",idSelector:"ignore"},data:{useDefaultDataProvider:!0}},xg={completionItems:!0,hovers:!0,documentSymbols:!0,definitions:!0,references:!0,documentHighlights:!0,rename:!0,colors:!0,foldingRanges:!0,diagnostics:!0,selectionRanges:!0},TC=new Sg("css",vg,xg),EC=new Sg("scss",vg,xg),IC=new Sg("less",vg,xg);Ha.languages.css={cssDefaults:TC,lessDefaults:IC,scssDefaults:EC};function Cg(){return import("./cssMode-5IR7VHEX.mjs")}Ha.languages.onLanguage("less",()=>{Cg().then(s=>s.setupMode(IC))});Ha.languages.onLanguage("scss",()=>{Cg().then(s=>s.setupMode(EC))});Ha.languages.onLanguage("css",()=>{Cg().then(s=>s.setupMode(TC))});var OP=Object.defineProperty,HP=Object.getOwnPropertyDescriptor,WP=Object.getOwnPropertyNames,BP=Object.prototype.hasOwnProperty,VP=(s,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of WP(e))!BP.call(s,n)&&(t||n!=="default")&&OP(s,n,{get:()=>e[n],enumerable:!(i=HP(e,n))||i.enumerable});return s},Iu={};VP(Iu,wr);var GP=class{constructor(s,e,t){St(this,"_onDidChange",new Iu.Emitter);St(this,"_options");St(this,"_modeConfiguration");St(this,"_languageId");this._languageId=s,this.setOptions(e),this.setModeConfiguration(t)}get onDidChange(){return this._onDidChange.event}get languageId(){return this._languageId}get options(){return this._options}get modeConfiguration(){return this._modeConfiguration}setOptions(s){this._options=s||Object.create(null),this._onDidChange.fire(this)}setModeConfiguration(s){this._modeConfiguration=s||Object.create(null),this._onDidChange.fire(this)}},jP={tabSize:4,insertSpaces:!1,wrapLineLength:120,unformatted:'default": "a, abbr, acronym, b, bdo, big, br, button, cite, code, dfn, em, i, img, input, kbd, label, map, object, q, samp, select, small, span, strong, sub, sup, textarea, tt, var',contentUnformatted:"pre",indentInnerHtml:!1,preserveNewLines:!0,maxPreserveNewLines:void 0,indentHandlebars:!1,endWithNewline:!1,extraLiners:"head, body, /html",wrapAttributes:"auto"},ku={format:jP,suggest:{},data:{useDefaultDataProvider:!0}};function Lu(s){return{completionItems:!0,hovers:!0,documentSymbols:!0,links:!0,documentHighlights:!0,rename:!0,colors:!0,foldingRanges:!0,selectionRanges:!0,diagnostics:s===vd,documentFormattingEdits:s===vd,documentRangeFormattingEdits:s===vd}}var vd="html",kC="handlebars",LC="razor",PC=Pu(vd,ku,Lu(vd)),UP=PC.defaults,MC=Pu(kC,ku,Lu(kC)),$P=MC.defaults,DC=Pu(LC,ku,Lu(LC)),KP=DC.defaults;Iu.languages.html={htmlDefaults:UP,razorDefaults:KP,handlebarDefaults:$P,htmlLanguageService:PC,handlebarLanguageService:MC,razorLanguageService:DC,registerHTMLLanguageService:Pu};function qP(){return import("./htmlMode-KJ5MUOHM.mjs")}function Pu(s,e=ku,t=Lu(s)){let i=new GP(s,e,t),n,o=Iu.languages.onLanguage(s,async()=>{n=(await qP()).setupMode(i)});return{defaults:i,dispose(){o.dispose(),n==null||n.dispose(),n=void 0}}}var XP=Object.defineProperty,YP=Object.getOwnPropertyDescriptor,ZP=Object.getOwnPropertyNames,JP=Object.prototype.hasOwnProperty,QP=(s,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of ZP(e))!JP.call(s,n)&&(t||n!=="default")&&XP(s,n,{get:()=>e[n],enumerable:!(i=YP(e,n))||i.enumerable});return s},xd={};QP(xd,wr);var eM=class{constructor(s,e,t){St(this,"_onDidChange",new xd.Emitter);St(this,"_diagnosticsOptions");St(this,"_modeConfiguration");St(this,"_languageId");this._languageId=s,this.setDiagnosticsOptions(e),this.setModeConfiguration(t)}get onDidChange(){return this._onDidChange.event}get languageId(){return this._languageId}get modeConfiguration(){return this._modeConfiguration}get diagnosticsOptions(){return this._diagnosticsOptions}setDiagnosticsOptions(s){this._diagnosticsOptions=s||Object.create(null),this._onDidChange.fire(this)}setModeConfiguration(s){this._modeConfiguration=s||Object.create(null),this._onDidChange.fire(this)}},tM={validate:!0,allowComments:!0,schemas:[],enableSchemaRequest:!1,schemaRequest:"warning",schemaValidation:"warning",comments:"error",trailingCommas:"error"},iM={documentFormattingEdits:!0,documentRangeFormattingEdits:!0,completionItems:!0,hovers:!0,documentSymbols:!0,tokens:!0,colors:!0,foldingRanges:!0,diagnostics:!0,selectionRanges:!0},RC=new eM("json",tM,iM);xd.languages.json={jsonDefaults:RC};function nM(){return import("./jsonMode-HYKVVNYK.mjs")}xd.languages.register({id:"json",extensions:[".json",".bowerrc",".jshintrc",".jscsrc",".eslintrc",".babelrc",".har"],aliases:["JSON","json"],mimetypes:["application/json"]});xd.languages.onLanguage("json",()=>{nM().then(s=>s.setupMode(RC))});Ln();yo();ue();Mt();He();Q();Ee();var oM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},rM=function(s,e){return function(t,i){e(t,i,s)}},Mu=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Du=new pe("selectionAnchorSet",!1),Ro=class AC{constructor(e,t){this.editor=e,this.selectionAnchorSetContextKey=Du.bindTo(t),this.modelChangeListener=e.onDidChangeModel(()=>this.selectionAnchorSetContextKey.reset())}static get(e){return e.getContribution(AC.ID)}setSelectionAnchor(){if(this.editor.hasModel()){let e=this.editor.getPosition(),t=this.decorationId?[this.decorationId]:[],i=this.editor.deltaDecorations(t,[{range:X.fromPositions(e,e),options:{description:"selection-anchor",stickiness:1,hoverMessage:new ai().appendText(u("selectionAnchor","Selection Anchor")),className:"selection-anchor"}}]);this.decorationId=i[0],this.selectionAnchorSetContextKey.set(!!this.decorationId),_t(u("anchorSet","Anchor set at {0}:{1}",e.lineNumber,e.column))}}goToSelectionAnchor(){if(this.editor.hasModel()&&this.decorationId){let e=this.editor.getModel().getDecorationRange(this.decorationId);e&&this.editor.setPosition(e.getStartPosition())}}selectFromAnchorToCursor(){if(this.editor.hasModel()&&this.decorationId){let e=this.editor.getModel().getDecorationRange(this.decorationId);if(e){let t=this.editor.getPosition();this.editor.setSelection(X.fromPositions(e.getStartPosition(),t)),this.cancelSelectionAnchor()}}}cancelSelectionAnchor(){this.decorationId&&(this.editor.deltaDecorations([this.decorationId],[]),this.decorationId=void 0,this.selectionAnchorSetContextKey.set(!1))}dispose(){this.cancelSelectionAnchor(),this.modelChangeListener.dispose()}};Ro.ID="editor.contrib.selectionAnchorController";Ro=oM([rM(1,ie)],Ro);var FC=class extends F{constructor(){super({id:"editor.action.setSelectionAnchor",label:u("setSelectionAnchor","Set Selection Anchor"),alias:"Set Selection Anchor",precondition:void 0,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2080),weight:100}})}run(e,t){var i;return Mu(this,void 0,void 0,function*(){(i=Ro.get(t))===null||i===void 0||i.setSelectionAnchor()})}},NC=class extends F{constructor(){super({id:"editor.action.goToSelectionAnchor",label:u("goToSelectionAnchor","Go to Selection Anchor"),alias:"Go to Selection Anchor",precondition:Du})}run(e,t){var i;return Mu(this,void 0,void 0,function*(){(i=Ro.get(t))===null||i===void 0||i.goToSelectionAnchor()})}},zC=class extends F{constructor(){super({id:"editor.action.selectFromAnchorToCursor",label:u("selectFromAnchorToCursor","Select from Anchor to Cursor"),alias:"Select from Anchor to Cursor",precondition:Du,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2089),weight:100}})}run(e,t){var i;return Mu(this,void 0,void 0,function*(){(i=Ro.get(t))===null||i===void 0||i.selectFromAnchorToCursor()})}},OC=class extends F{constructor(){super({id:"editor.action.cancelSelectionAnchor",label:u("cancelSelectionAnchor","Cancel Selection Anchor"),alias:"Cancel Selection Anchor",precondition:Du,kbOpts:{kbExpr:S.editorTextFocus,primary:9,weight:100}})}run(e,t){var i;return Mu(this,void 0,void 0,function*(){(i=Ro.get(t))===null||i===void 0||i.cancelSelectionAnchor()})}};J(Ro.ID,Ro);I(FC);I(NC);I(zC);I(OC);ke();G();ue();tt();ee();Mt();He();ca();jt();eu();Q();ri();mt();Ne();var sM=q("editorOverviewRuler.bracketMatchForeground",{dark:"#A0A0A0",light:"#A0A0A0",hc:"#A0A0A0"},u("overviewRulerBracketMatchForeground","Overview ruler marker color for matching brackets.")),HC=class extends F{constructor(){super({id:"editor.action.jumpToBracket",label:u("smartSelect.jumpBracket","Go to Bracket"),alias:"Go to Bracket",precondition:void 0,kbOpts:{kbExpr:S.editorTextFocus,primary:3160,weight:100}})}run(e,t){var i;(i=hn.get(t))===null||i===void 0||i.jumpToBracket()}},WC=class extends F{constructor(){super({id:"editor.action.selectToBracket",label:u("smartSelect.selectToBracket","Select to Bracket"),alias:"Select to Bracket",precondition:void 0,description:{description:"Select to Bracket",args:[{name:"args",schema:{type:"object",properties:{selectBrackets:{type:"boolean",default:!0}}}}]}})}run(e,t,i){var n;let o=!0;i&&i.selectBrackets===!1&&(o=!1),(n=hn.get(t))===null||n===void 0||n.selectToBracket(o)}},BC=class{constructor(e,t,i){this.position=e,this.brackets=t,this.options=i}},hn=class extends z{constructor(e){super();this._editor=e,this._lastBracketsData=[],this._lastVersionId=0,this._decorations=[],this._updateBracketsSoon=this._register(new $e(()=>this._updateBrackets(),50)),this._matchBrackets=this._editor.getOption(64),this._updateBracketsSoon.schedule(),this._register(e.onDidChangeCursorPosition(t=>{this._matchBrackets!=="never"&&this._updateBracketsSoon.schedule()})),this._register(e.onDidChangeModelContent(t=>{this._updateBracketsSoon.schedule()})),this._register(e.onDidChangeModel(t=>{this._lastBracketsData=[],this._decorations=[],this._updateBracketsSoon.schedule()})),this._register(e.onDidChangeModelLanguageConfiguration(t=>{this._lastBracketsData=[],this._updateBracketsSoon.schedule()})),this._register(e.onDidChangeConfiguration(t=>{t.hasChanged(64)&&(this._matchBrackets=this._editor.getOption(64),this._decorations=this._editor.deltaDecorations(this._decorations,[]),this._lastBracketsData=[],this._lastVersionId=0,this._updateBracketsSoon.schedule())})),this._register(e.onDidBlurEditorWidget(()=>{this._updateBracketsSoon.schedule()})),this._register(e.onDidFocusEditorWidget(()=>{this._updateBracketsSoon.schedule()}))}static get(e){return e.getContribution(hn.ID)}jumpToBracket(){if(!this._editor.hasModel())return;let e=this._editor.getModel(),t=this._editor.getSelections().map(i=>{let n=i.getStartPosition(),o=e.bracketPairs.matchBracket(n),r=null;if(o)o[0].containsPosition(n)?r=o[1].getStartPosition():o[1].containsPosition(n)&&(r=o[0].getStartPosition());else{let a=e.bracketPairs.findEnclosingBrackets(n);if(a)r=a[0].getStartPosition();else{let l=e.bracketPairs.findNextBracket(n);l&&l.range&&(r=l.range.getStartPosition())}}return r?new X(r.lineNumber,r.column,r.lineNumber,r.column):new X(n.lineNumber,n.column,n.lineNumber,n.column)});this._editor.setSelections(t),this._editor.revealRange(t[0])}selectToBracket(e){if(!this._editor.hasModel())return;let t=this._editor.getModel(),i=[];this._editor.getSelections().forEach(n=>{let o=n.getStartPosition(),r=t.bracketPairs.matchBracket(o);if(!r&&(r=t.bracketPairs.findEnclosingBrackets(o),!r)){let c=t.bracketPairs.findNextBracket(o);c&&c.range&&(r=t.bracketPairs.matchBracket(c.range.getStartPosition()))}let a=null,l=null;if(r){r.sort(b.compareRangesUsingStarts);let[c,d]=r;if(a=e?c.getStartPosition():c.getEndPosition(),l=e?d.getEndPosition():d.getStartPosition(),d.containsPosition(o)){let h=a;a=l,l=h}}a&&l&&i.push(new X(a.lineNumber,a.column,l.lineNumber,l.column))}),i.length>0&&(this._editor.setSelections(i),this._editor.revealRange(i[0]))}_updateBrackets(){if(this._matchBrackets==="never")return;this._recomputeBrackets();let e=[],t=0;for(let i of this._lastBracketsData){let n=i.brackets;n&&(e[t++]={range:n[0],options:i.options},e[t++]={range:n[1],options:i.options})}this._decorations=this._editor.deltaDecorations(this._decorations,e)}_recomputeBrackets(){if(!this._editor.hasModel()||!this._editor.hasWidgetFocus()){this._lastBracketsData=[],this._lastVersionId=0;return}let e=this._editor.getSelections();if(e.length>100){this._lastBracketsData=[],this._lastVersionId=0;return}let t=this._editor.getModel(),i=t.getVersionId(),n=[];this._lastVersionId===i&&(n=this._lastBracketsData);let o=[],r=0;for(let h=0,p=e.length;h<p;h++){let m=e[h];m.isEmpty()&&(o[r++]=m.getStartPosition())}o.length>1&&o.sort(U.compare);let a=[],l=0,c=0,d=n.length;for(let h=0,p=o.length;h<p;h++){let m=o[h];for(;c<d&&n[c].position.isBefore(m);)c++;if(c<d&&n[c].position.equals(m))a[l++]=n[c];else{let f=t.bracketPairs.matchBracket(m),v=hn._DECORATION_OPTIONS_WITH_OVERVIEW_RULER;!f&&this._matchBrackets==="always"&&(f=t.bracketPairs.findEnclosingBrackets(m,20),v=hn._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER),a[l++]=new BC(m,f,v)}}this._lastBracketsData=a,this._lastVersionId=i}};hn.ID="editor.contrib.bracketMatchingController";hn._DECORATION_OPTIONS_WITH_OVERVIEW_RULER=xe.register({description:"bracket-match-overview",stickiness:1,className:"bracket-match",overviewRuler:{color:nt(sM),position:Di.Center}});hn._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER=xe.register({description:"bracket-match-no-overview",stickiness:1,className:"bracket-match"});J(hn.ID,hn);I(WC);I(HC);Me((s,e)=>{let t=s.getColor(mx);t&&e.addRule(`.monaco-editor .bracket-match { background-color: ${t}; }`);let i=s.getColor(Qh);i&&e.addRule(`.monaco-editor .bracket-match { border: 1px solid ${i}; }`)});Oi.appendMenuItem(se.MenubarGoMenu,{group:"5_infile_nav",command:{id:"editor.action.jumpToBracket",title:u({key:"miGoToBracket",comment:["&& denotes a mnemonic"]},"Go to &&Bracket")},order:2});ue();He();ee();Mt();var _g=class{constructor(e,t){this._selection=e,this._isMovingLeft=t}getEditOperations(e,t){if(this._selection.startLineNumber!==this._selection.endLineNumber||this._selection.isEmpty())return;let i=this._selection.startLineNumber,n=this._selection.startColumn,o=this._selection.endColumn;if(!(this._isMovingLeft&&n===1)&&!(!this._isMovingLeft&&o===e.getLineMaxColumn(i)))if(this._isMovingLeft){let r=new b(i,n-1,i,n),a=e.getValueInRange(r);t.addEditOperation(r,null),t.addEditOperation(new b(i,o,i,o),a)}else{let r=new b(i,o,i,o+1),a=e.getValueInRange(r);t.addEditOperation(r,null),t.addEditOperation(new b(i,n,i,n),a)}}computeCursorState(e,t){return this._isMovingLeft?new X(this._selection.startLineNumber,this._selection.startColumn-1,this._selection.endLineNumber,this._selection.endColumn-1):new X(this._selection.startLineNumber,this._selection.startColumn+1,this._selection.endLineNumber,this._selection.endColumn+1)}};Q();var wg=class extends F{constructor(e,t){super(t);this.left=e}run(e,t){if(!t.hasModel())return;let i=[],n=t.getSelections();for(let o of n)i.push(new _g(o,this.left));t.pushUndoStop(),t.executeCommands(this.id,i),t.pushUndoStop()}},VC=class extends wg{constructor(){super(!0,{id:"editor.action.moveCarretLeftAction",label:u("caret.moveLeft","Move Selected Text Left"),alias:"Move Selected Text Left",precondition:S.writable})}},GC=class extends wg{constructor(){super(!1,{id:"editor.action.moveCarretRightAction",label:u("caret.moveRight","Move Selected Text Right"),alias:"Move Selected Text Right",precondition:S.writable})}};I(VC);I(GC);ue();ee();He();Q();var jC=class extends F{constructor(){super({id:"editor.action.transposeLetters",label:u("transposeLetters.label","Transpose Letters"),alias:"Transpose Letters",precondition:S.writable,kbOpts:{kbExpr:S.textInputFocus,primary:0,mac:{primary:306},weight:100}})}run(e,t){if(!t.hasModel())return;let i=t.getModel(),n=[],o=t.getSelections();for(let r of o){if(!r.isEmpty())continue;let a=r.startLineNumber,l=r.startColumn,c=i.getLineMaxColumn(a);if(a===1&&(l===1||l===2&&c===2))continue;let d=l===c?r.getPosition():ru.rightPosition(i,r.getPosition().lineNumber,r.getPosition().column),h=ru.leftPosition(i,d),p=ru.leftPosition(i,h),m=i.getValueInRange(b.fromPositions(p,h)),f=i.getValueInRange(b.fromPositions(h,d)),v=b.fromPositions(p,d);n.push(new Eo(v,f+m))}n.length>0&&(t.pushUndoStop(),t.executeCommands(this.id,n),t.pushUndoStop())}};I(jC);Kl();Pi();ue();Ci();He();Q();ri();var aM=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},fs="9_cutcopypaste",lM=ar||document.queryCommandSupported("cut"),UC=ar||document.queryCommandSupported("copy"),dM=typeof navigator.clipboard=="undefined"||qS?document.queryCommandSupported("paste"):!0;function Eg(s){return s.register(),s}var cM=lM?Eg(new Nh({id:"editor.action.clipboardCutAction",precondition:void 0,kbOpts:ar?{primary:2102,win:{primary:2102,secondary:[1044]},weight:100}:void 0,menuOpts:[{menuId:se.MenubarEditMenu,group:"2_ccp",title:u({key:"miCut",comment:["&& denotes a mnemonic"]},"Cu&&t"),order:1},{menuId:se.EditorContext,group:fs,title:u("actions.clipboard.cutLabel","Cut"),when:S.writable,order:1},{menuId:se.CommandPalette,group:"",title:u("actions.clipboard.cutLabel","Cut"),order:1},{menuId:se.SimpleEditorContext,group:fs,title:u("actions.clipboard.cutLabel","Cut"),when:S.writable,order:1}]})):void 0,hM=UC?Eg(new Nh({id:"editor.action.clipboardCopyAction",precondition:void 0,kbOpts:ar?{primary:2081,win:{primary:2081,secondary:[2067]},weight:100}:void 0,menuOpts:[{menuId:se.MenubarEditMenu,group:"2_ccp",title:u({key:"miCopy",comment:["&& denotes a mnemonic"]},"&&Copy"),order:2},{menuId:se.EditorContext,group:fs,title:u("actions.clipboard.copyLabel","Copy"),order:2},{menuId:se.CommandPalette,group:"",title:u("actions.clipboard.copyLabel","Copy"),order:1},{menuId:se.SimpleEditorContext,group:fs,title:u("actions.clipboard.copyLabel","Copy"),order:2}]})):void 0;Oi.appendMenuItem(se.MenubarEditMenu,{submenu:se.MenubarCopy,title:{value:u("copy as","Copy As"),original:"Copy As"},group:"2_ccp",order:3});Oi.appendMenuItem(se.EditorContext,{submenu:se.EditorContextCopy,title:{value:u("copy as","Copy As"),original:"Copy As"},group:fs,order:3});var Tg=dM?Eg(new Nh({id:"editor.action.clipboardPasteAction",precondition:void 0,kbOpts:ar?{primary:2100,win:{primary:2100,secondary:[1043]},linux:{primary:2100,secondary:[1043]},weight:100}:void 0,menuOpts:[{menuId:se.MenubarEditMenu,group:"2_ccp",title:u({key:"miPaste",comment:["&& denotes a mnemonic"]},"&&Paste"),order:4},{menuId:se.EditorContext,group:fs,title:u("actions.clipboard.pasteLabel","Paste"),when:S.writable,order:4},{menuId:se.CommandPalette,group:"",title:u("actions.clipboard.pasteLabel","Paste"),order:1},{menuId:se.SimpleEditorContext,group:fs,title:u("actions.clipboard.pasteLabel","Paste"),when:S.writable,order:4}]})):void 0,$C=class extends F{constructor(){super({id:"editor.action.clipboardCopyWithSyntaxHighlightingAction",label:u("actions.clipboard.copyWithSyntaxHighlightingLabel","Copy With Syntax Highlighting"),alias:"Copy With Syntax Highlighting",precondition:void 0,kbOpts:{kbExpr:S.textInputFocus,primary:0,weight:100}})}run(e,t){!t.hasModel()||!t.getOption(32)&&t.getSelection().isEmpty()||(Qm.forceCopyWithSyntaxHighlighting=!0,t.focus(),document.execCommand("copy"),Qm.forceCopyWithSyntaxHighlighting=!1)}};function KC(s,e){!s||(s.addImplementation(1e4,"code-editor",(t,i)=>{let n=t.get(Ve).getFocusedCodeEditor();if(n&&n.hasTextFocus()){let o=n.getOption(32),r=n.getSelection();return r&&r.isEmpty()&&!o||document.execCommand(e),!0}return!1}),s.addImplementation(0,"generic-dom",(t,i)=>(document.execCommand(e),!0)))}KC(cM,"cut");KC(hM,"copy");Tg&&(Tg.addImplementation(1e4,"code-editor",(s,e)=>{let t=s.get(Ve),i=s.get(us),n=t.getFocusedCodeEditor();return n&&n.hasTextFocus()?!document.execCommand("paste")&&sh?(()=>aM(void 0,void 0,void 0,function*(){let r=yield i.readText();if(r!==""){let a=px.INSTANCE.get(r),l=!1,c=null,d=null;a&&(l=n.getOption(32)&&!!a.isFromEmptySelection,c=typeof a.multicursorText!="undefined"?a.multicursorText:null,d=a.mode),n.trigger("keyboard","paste",{text:r,pasteOnNewLine:l,multicursorText:c,mode:d})}}))():!0:!1}),Tg.addImplementation(0,"generic-dom",(s,e)=>(document.execCommand("paste"),!0)));UC&&I($C);ue();ut();Im();G();Ye();ue();He();vt();ut();Le();G();Xt();bd();ee();Mt();Re();hr();wt();ps();var fe=class{constructor(e){this.value=e}equals(e){return this.value===e.value}contains(e){return this.equals(e)||this.value===""||e.value.startsWith(this.value+fe.sep)}intersects(e){return this.contains(e)||e.contains(this)}append(e){return new fe(this.value+fe.sep+e)}};fe.sep=".";fe.None=new fe("@@none@@");fe.Empty=new fe("");fe.QuickFix=new fe("quickfix");fe.Refactor=new fe("refactor");fe.Source=new fe("source");fe.SourceOrganizeImports=fe.Source.append("organizeImports");fe.SourceFixAll=fe.Source.append("fixAll");function qC(s,e){return!(s.include&&!s.include.intersects(e)||s.excludes&&s.excludes.some(t=>YC(e,t,s.include))||!s.includeSourceActions&&fe.Source.contains(e))}function XC(s,e){let t=e.kind?new fe(e.kind):void 0;return!(s.include&&(!t||!s.include.contains(t))||s.excludes&&t&&s.excludes.some(i=>YC(t,i,s.include))||!s.includeSourceActions&&t&&fe.Source.contains(t)||s.onlyIncludePreferredActions&&!e.isPreferred)}function YC(s,e,t){return!(!e.contains(s)||t&&e.contains(t))}var Xi=class{constructor(e,t,i){this.kind=e,this.apply=t,this.preferred=i}static fromUser(e,t){return!e||typeof e!="object"?new Xi(t.kind,t.apply,!1):new Xi(Xi.getKindFromUser(e,t.kind),Xi.getApplyFromUser(e,t.apply),Xi.getPreferredUser(e))}static getApplyFromUser(e,t){switch(typeof e.apply=="string"?e.apply.toLowerCase():""){case"first":return"first";case"never":return"never";case"ifsingle":return"ifSingle";default:return t}}static getKindFromUser(e,t){return typeof e.kind=="string"?new fe(e.kind):t}static getPreferredUser(e){return typeof e.preferred=="boolean"?e.preferred:!1}};var Ig=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Ru="editor.action.codeAction",Au="editor.action.refactor",Fu="editor.action.sourceAction",Cd="editor.action.organizeImports",_d="editor.action.fixAll",Nu=class{constructor(e,t){this.action=e,this.provider=t}resolve(e){var t;return Ig(this,void 0,void 0,function*(){if(((t=this.provider)===null||t===void 0?void 0:t.resolveCodeAction)&&!this.action.edit){let i;try{i=yield this.provider.resolveCodeAction(this.action,e)}catch(n){Ue(n)}i&&(this.action.edit=i.edit)}return this})}},zu=class extends z{constructor(e,t,i){super();this.documentation=t,this._register(i),this.allActions=[...e].sort(zu.codeActionsComparator),this.validActions=this.allActions.filter(({action:n})=>!n.disabled)}static codeActionsComparator({action:e},{action:t}){return e.isPreferred&&!t.isPreferred?-1:!e.isPreferred&&t.isPreferred?1:Pt(e.diagnostics)?Pt(t.diagnostics)?e.diagnostics[0].message.localeCompare(t.diagnostics[0].message):-1:Pt(t.diagnostics)?1:0}get hasAutoFix(){return this.validActions.some(({action:e})=>!!e.kind&&fe.QuickFix.contains(new fe(e.kind))&&!!e.isPreferred)}},ZC={actions:[],documentation:void 0};function wd(s,e,t,i,n){var o;let r=t.filter||{},a={only:(o=r.include)===null||o===void 0?void 0:o.value,trigger:t.type},l=new yC(s,n),c=uM(s,r),d=new A,h=c.map(m=>Ig(this,void 0,void 0,function*(){try{i.report(m);let f=yield m.provideCodeActions(s,e,a,l.token);if(f&&d.add(f),l.token.isCancellationRequested)return ZC;let v=((f==null?void 0:f.actions)||[]).filter(w=>w&&XC(r,w)),_=pM(m,v,r.include);return{actions:v.map(w=>new Nu(w,m)),documentation:_}}catch(f){if(jn(f))throw f;return Ue(f),ZC}})),p=$n.onDidChange(()=>{let m=$n.all(s);Jr(m,c)||l.cancel()});return Promise.all(h).then(m=>{let f=ch(m.map(_=>_.actions)),v=Vn(m.map(_=>_.documentation));return new zu(f,v,d)}).finally(()=>{p.dispose(),l.dispose()})}function uM(s,e){return $n.all(s).filter(t=>t.providedCodeActionKinds?t.providedCodeActionKinds.some(i=>qC(e,new fe(i))):!0)}function pM(s,e,t){if(!s.documentation)return;let i=s.documentation.map(n=>({kind:new fe(n.kind),command:n.command}));if(t){let n;for(let o of i)o.kind.contains(t)&&(n?n.kind.contains(o.kind)&&(n=o):n=o);if(n)return n==null?void 0:n.command}for(let n of e)if(!!n.kind){for(let o of i)if(o.kind.contains(new fe(n.kind)))return o.command}}Pe.registerCommand("_executeCodeActionProvider",function(s,e,t,i,n){return Ig(this,void 0,void 0,function*(){if(!(e instanceof _e))throw wn();let o=s.get(Yt).getModel(e);if(!o)throw wn();let r=X.isISelection(t)?X.liftSelection(t):b.isIRange(t)?o.validateRange(t):void 0;if(!r)throw wn();let a=typeof i=="string"?new fe(i):void 0,l=yield wd(o,r,{type:1,filter:{includeSourceActions:!0,include:a}},Jn.None,ge.None),c=[],d=Math.min(l.validActions.length,typeof n=="number"?n:0);for(let h=0;h<d;h++)c.push(l.validActions[h].resolve(ge.None));try{return yield Promise.all(c),l.validActions.map(h=>h.action)}finally{setTimeout(()=>l.dispose(),100)}})});Le();Im();G();Ln();ke();G();ue();ee();Q();Ee();var mM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},gM=function(s,e){return function(t,i){e(t,i,s)}},Qt=class kg{constructor(e,t){this._messageWidget=new et,this._messageListeners=new A,this._editor=e,this._visible=kg.MESSAGE_VISIBLE.bindTo(t),this._editorListener=this._editor.onDidAttemptReadOnlyEdit(()=>this._onDidAttemptReadOnlyEdit())}static get(e){return e.getContribution(kg.ID)}dispose(){this._editorListener.dispose(),this._messageListeners.dispose(),this._messageWidget.dispose(),this._visible.reset()}showMessage(e,t){_t(e),this._visible.set(!0),this._messageWidget.clear(),this._messageListeners.clear(),this._messageWidget.value=new Lg(this._editor,t,e),this._messageListeners.add(this._editor.onDidBlurEditorText(()=>this.closeMessage())),this._messageListeners.add(this._editor.onDidChangeCursorPosition(()=>this.closeMessage())),this._messageListeners.add(this._editor.onDidDispose(()=>this.closeMessage())),this._messageListeners.add(this._editor.onDidChangeModel(()=>this.closeMessage())),this._messageListeners.add(new Ri(()=>this.closeMessage(),3e3));let i;this._messageListeners.add(this._editor.onMouseMove(n=>{!n.target.position||(i?i.containsPosition(n.target.position)||this.closeMessage():i=new b(t.lineNumber-3,1,n.target.position.lineNumber+3,1))}))}closeMessage(){this._visible.reset(),this._messageListeners.clear(),this._messageWidget.value&&this._messageListeners.add(Lg.fadeOut(this._messageWidget.value))}_onDidAttemptReadOnlyEdit(){this._editor.hasModel()&&this.showMessage(u("editor.readonly","Cannot edit in read-only editor"),this._editor.getPosition())}};Qt.ID="editor.contrib.messageController";Qt.MESSAGE_VISIBLE=new pe("messageVisible",!1,u("messageVisible","Whether the editor is currently showing an inline message"));Qt=mM([gM(1,ie)],Qt);var fM=ct.bindToContribution(Qt.get);$(new fM({id:"leaveEditorMessage",precondition:Qt.MESSAGE_VISIBLE,handler:s=>s.closeMessage(),kbOpts:{weight:100+30,primary:9}}));var Lg=class{constructor(e,{lineNumber:t,column:i},n){this.allowEditorOverflow=!0,this.suppressMouseDown=!1,this._editor=e,this._editor.revealLinesInCenterIfOutsideViewport(t,t,0),this._position={lineNumber:t,column:i-1},this._domNode=document.createElement("div"),this._domNode.classList.add("monaco-editor-overlaymessage");let o=document.createElement("div");o.classList.add("anchor","top"),this._domNode.appendChild(o);let r=document.createElement("div");r.classList.add("message"),r.textContent=n,this._domNode.appendChild(r);let a=document.createElement("div");a.classList.add("anchor","below"),this._domNode.appendChild(a),this._editor.addContentWidget(this),this._domNode.classList.add("fadeIn")}static fadeOut(e){let t,i=()=>{e.dispose(),clearTimeout(t),e.getDomNode().removeEventListener("animationend",i)};return t=setTimeout(i,110),e.getDomNode().addEventListener("animationend",i),e.getDomNode().classList.add("fadeOut"),{dispose:i}}dispose(){this._editor.removeContentWidget(this)}getId(){return"messageoverlay"}getDomNode(){return this._domNode}getPosition(){return{position:this._position,preference:[1,2]}}afterRender(e){this._domNode.classList.toggle("below",e===2)}};J(Qt.ID,Qt);Be();Ae();ss();Le();Im();G();tt();Re();Ki();var yM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},JC=function(s,e){return function(t,i){e(t,i,s)}},bM=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Pg=class extends _o{constructor(e,t){super(e.command?e.command.id:e.title,SM(e.title),void 0,!e.disabled,t);this.action=e}};function SM(s){return s.replace(/\r\n|\r|\n/g," ")}var Ou=class extends z{constructor(e,t,i,n){super();this._editor=e,this._delegate=t,this._contextMenuService=i,this._visible=!1,this._showingActions=this._register(new et),this._keybindingResolver=new Td({getKeybindings:()=>n.getKeybindings()})}get isVisible(){return this._visible}show(e,t,i,n){return bM(this,void 0,void 0,function*(){let o=n.includeDisabledActions?t.allActions:t.validActions;if(!o.length){this._visible=!1;return}if(!this._editor.getDomNode())throw this._visible=!1,fh();this._visible=!0,this._showingActions.value=t;let r=this.getMenuActions(e,o,t.documentation),a=U.isIPosition(i)?this._toCoords(i):i||{x:0,y:0},l=this._keybindingResolver.getResolver(),c=this._editor.getOption(115);this._contextMenuService.showContextMenu({domForShadowRoot:c?this._editor.getDomNode():void 0,getAnchor:()=>a,getActions:()=>r,onHide:()=>{this._visible=!1,this._editor.focus()},autoSelectFirstItem:!0,getKeyBinding:d=>d instanceof Pg?l(d.action):void 0})})}getMenuActions(e,t,i){var n,o;let r=d=>new Pg(d.action,()=>this._delegate.onSelectCodeAction(d)),a=t.map(r),l=[...i],c=this._editor.getModel();if(c&&a.length)for(let d of $n.all(c))d._getAdditionalMenuItems&&l.push(...d._getAdditionalMenuItems({trigger:e.type,only:(o=(n=e.filter)===null||n===void 0?void 0:n.include)===null||o===void 0?void 0:o.value},t.map(h=>h.action)));return l.length&&a.push(new qn,...l.map(d=>r(new Nu({title:d.title,command:d},void 0)))),a}_toCoords(e){if(!this._editor.hasModel())return{x:0,y:0};this._editor.revealPosition(e,1),this._editor.render();let t=this._editor.getScrolledVisiblePosition(e),i=ni(this._editor.getDomNode()),n=i.left+t.left,o=i.top+t.top+t.height;return{x:n,y:o}}};Ou=yM([JC(2,Po),JC(3,rt)],Ou);var Td=class{constructor(e){this._keybindingProvider=e}getResolver(){let e=new es(()=>this._keybindingProvider.getKeybindings().filter(t=>Td.codeActionCommands.indexOf(t.command)>=0).filter(t=>t.resolvedKeybinding).map(t=>{let i=t.commandArgs;return t.command===Cd?i={kind:fe.SourceOrganizeImports.value}:t.command===_d&&(i={kind:fe.SourceFixAll.value}),Object.assign({resolvedKeybinding:t.resolvedKeybinding},Xi.fromUser(i,{kind:fe.None,apply:"never"}))}));return t=>{if(t.kind){let i=this.bestKeybindingForCodeAction(t,e.getValue());return i==null?void 0:i.resolvedKeybinding}}}bestKeybindingForCodeAction(e,t){if(!e.kind)return;let i=new fe(e.kind);return t.filter(n=>n.kind.contains(i)).filter(n=>n.preferred?e.isPreferred:!0).reduceRight((n,o)=>n?n.kind.contains(o.kind)?o:n:o,void 0)}};Td.codeActionCommands=[Au,Ru,Fu,Cd,_d];Ae();Ym();xi();De();G();Ix();Q();Ki();mt();Ne();var vM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},xM=function(s,e){return function(t,i){e(t,i,s)}},Ed;(function(s){s.Hidden={type:0};class e{constructor(i,n,o,r){this.actions=i,this.trigger=n,this.editorPosition=o,this.widgetPosition=r,this.type=1}}s.Showing=e})(Ed||(Ed={}));var Id=class QC extends z{constructor(e,t,i,n){super();this._editor=e,this._quickFixActionId=t,this._preferredFixActionId=i,this._keybindingService=n,this._onClick=this._register(new j),this.onClick=this._onClick.event,this._state=Ed.Hidden,this._domNode=document.createElement("div"),this._domNode.className=K.lightBulb.classNames,this._editor.addContentWidget(this),this._register(this._editor.onDidChangeModelContent(o=>{let r=this._editor.getModel();(this.state.type!==1||!r||this.state.editorPosition.lineNumber>=r.getLineCount())&&this.hide()})),_a.ignoreTarget(this._domNode),this._register(cv(this._domNode,o=>{if(this.state.type!==1)return;this._editor.focus(),o.preventDefault();let{top:r,height:a}=ni(this._domNode),l=this._editor.getOption(59),c=Math.floor(l/3);this.state.widgetPosition.position!==null&&this.state.widgetPosition.position.lineNumber<this.state.editorPosition.lineNumber&&(c+=l),this._onClick.fire({x:o.posx,y:r+a+c,actions:this.state.actions,trigger:this.state.trigger})})),this._register(Ke(this._domNode,"mouseenter",o=>{if((o.buttons&1)!==1)return;this.hide();let r=new od;r.startMonitoring(o.target,o.buttons,nd,()=>{},()=>{r.dispose()})})),this._register(this._editor.onDidChangeConfiguration(o=>{o.hasChanged(57)&&!this._editor.getOption(57).enabled&&this.hide()})),this._updateLightBulbTitleAndIcon(),this._register(this._keybindingService.onDidUpdateKeybindings(this._updateLightBulbTitleAndIcon,this))}dispose(){super.dispose(),this._editor.removeContentWidget(this)}getId(){return"LightBulbWidget"}getDomNode(){return this._domNode}getPosition(){return this._state.type===1?this._state.widgetPosition:null}update(e,t,i){if(e.validActions.length<=0)return this.hide();let n=this._editor.getOptions();if(!n.get(57).enabled)return this.hide();let o=this._editor.getModel();if(!o)return this.hide();let{lineNumber:r,column:a}=o.validatePosition(i),l=o.getOptions().tabSize,c=n.get(44),d=o.getLineContent(r),h=cd(d,l),p=c.spaceWidth*h>22,m=v=>v>2&&this._editor.getTopForLineNumber(v)===this._editor.getTopForLineNumber(v-1),f=r;if(!p){if(r>1&&!m(r-1))f-=1;else if(!m(r+1))f+=1;else if(a*c.spaceWidth<22)return this.hide()}this.state=new Ed.Showing(e,t,i,{position:{lineNumber:f,column:1},preference:QC._posPref}),this._editor.layoutContentWidget(this)}hide(){this.state=Ed.Hidden,this._editor.layoutContentWidget(this)}get state(){return this._state}set state(e){this._state=e,this._updateLightBulbTitleAndIcon()}_updateLightBulbTitleAndIcon(){if(this.state.type===1&&this.state.actions.hasAutoFix){this._domNode.classList.remove(...K.lightBulb.classNamesArray),this._domNode.classList.add(...K.lightbulbAutofix.classNamesArray);let t=this._keybindingService.lookupKeybinding(this._preferredFixActionId);if(t){this.title=u("preferredcodeActionWithKb","Show Code Actions. Preferred Quick Fix Available ({0})",t.getLabel());return}}this._domNode.classList.remove(...K.lightbulbAutofix.classNamesArray),this._domNode.classList.add(...K.lightBulb.classNamesArray);let e=this._keybindingService.lookupKeybinding(this._quickFixActionId);e?this.title=u("codeActionWithKb","Show Code Actions ({0})",e.getLabel()):this.title=u("codeAction","Show Code Actions")}set title(e){this._domNode.title=e}};Id._posPref=[0];Id=vM([xM(3,rt)],Id);Me((s,e)=>{var t;let i=(t=s.getColor(wa))===null||t===void 0?void 0:t.transparent(.7),n=s.getColor(sx);n&&e.addRule(`
		.monaco-editor .contentWidgets ${K.lightBulb.cssSelector} {
			color: ${n};
			background-color: ${i};
		}`);let o=s.getColor(ax);o&&e.addRule(`
		.monaco-editor .contentWidgets ${K.lightbulbAutofix.cssSelector} {
			color: ${o};
			background-color: ${i};
		}`)});var CM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},_M=function(s,e){return function(t,i){e(t,i,s)}},Mg=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},wM=function(s,e,t,i,n){if(i==="m")throw new TypeError("Private method is not writable");if(i==="a"&&!n)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?s!==e||!n:!e.has(s))throw new TypeError("Cannot write private member to an object whose class did not declare it");return i==="a"?n.call(s,t):n?n.value=t:e.set(s,t),t},TM=function(s,e,t,i){if(t==="a"&&!i)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?s!==e||!i:!e.has(s))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?i:t==="a"?i.call(s):i?i.value:e.get(s)},Hu,Wu=class extends z{constructor(e,t,i,n,o){super();this._editor=e,this.delegate=n,this._activeCodeActions=this._register(new et),Hu.set(this,!1),this._codeActionWidget=new es(()=>this._register(o.createInstance(Ou,this._editor,{onSelectCodeAction:r=>Mg(this,void 0,void 0,function*(){this.delegate.applyCodeAction(r,!0)})}))),this._lightBulbWidget=new es(()=>{let r=this._register(o.createInstance(Id,this._editor,t,i));return this._register(r.onClick(a=>this.showCodeActionList(a.trigger,a.actions,a,{includeDisabledActions:!1}))),r})}dispose(){wM(this,Hu,!0,"f"),super.dispose()}update(e){var t,i,n,o,r;return Mg(this,void 0,void 0,function*(){if(e.type!==1){(t=this._lightBulbWidget.rawValue)===null||t===void 0||t.hide();return}let a;try{a=yield e.actions}catch(l){de(l);return}if(!TM(this,Hu,"f"))if(this._lightBulbWidget.getValue().update(a,e.trigger,e.position),e.trigger.type===1){if((i=e.trigger.filter)===null||i===void 0?void 0:i.include){let c=this.tryGetValidActionToApply(e.trigger,a);if(c){try{this._lightBulbWidget.getValue().hide(),yield this.delegate.applyCodeAction(c,!1)}finally{a.dispose()}return}if(e.trigger.context){let d=this.getInvalidActionThatWouldHaveBeenApplied(e.trigger,a);if(d&&d.action.disabled){(n=Qt.get(this._editor))===null||n===void 0||n.showMessage(d.action.disabled,e.trigger.context.position),a.dispose();return}}}let l=!!((o=e.trigger.filter)===null||o===void 0?void 0:o.include);if(e.trigger.context&&(!a.allActions.length||!l&&!a.validActions.length)){(r=Qt.get(this._editor))===null||r===void 0||r.showMessage(e.trigger.context.notAvailableMessage,e.trigger.context.position),this._activeCodeActions.value=a,a.dispose();return}this._activeCodeActions.value=a,this._codeActionWidget.getValue().show(e.trigger,a,e.position,{includeDisabledActions:l})}else this._codeActionWidget.getValue().isVisible?a.dispose():this._activeCodeActions.value=a})}getInvalidActionThatWouldHaveBeenApplied(e,t){if(!!t.allActions.length&&(e.autoApply==="first"&&t.validActions.length===0||e.autoApply==="ifSingle"&&t.allActions.length===1))return t.allActions.find(({action:i})=>i.disabled)}tryGetValidActionToApply(e,t){if(!!t.validActions.length&&(e.autoApply==="first"&&t.validActions.length>0||e.autoApply==="ifSingle"&&t.validActions.length===1))return t.validActions[0]}showCodeActionList(e,t,i,n){return Mg(this,void 0,void 0,function*(){this._codeActionWidget.getValue().show(e,t,i,n)})}};Hu=new WeakMap;Wu=CM([_M(4,le)],Wu);Q();wt();Ee();Be();ps();ed();ke();Le();De();G();Hi();ee();Re();Ee();ps();var Dg=function(s,e,t,i){if(t==="a"&&!i)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?s!==e||!i:!e.has(s))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?i:t==="a"?i.call(s):i?i.value:e.get(s)},EM=function(s,e,t,i,n){if(i==="m")throw new TypeError("Private method is not writable");if(i==="a"&&!n)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?s!==e||!n:!e.has(s))throw new TypeError("Cannot write private member to an object whose class did not declare it");return i==="a"?n.call(s,t):n?n.value=t:e.set(s,t),t},Va,Rg=new pe("supportedCodeAction",""),e_=class extends z{constructor(e,t,i,n=250){super();this._editor=e,this._markerService=t,this._signalChange=i,this._delay=n,this._autoTriggerTimer=this._register(new Ri),this._register(this._markerService.onMarkerChanged(o=>this._onMarkerChanges(o))),this._register(this._editor.onDidChangeCursorPosition(()=>this._onCursorChange()))}trigger(e){let t=this._getRangeOfSelectionUnlessWhitespaceEnclosed(e);return this._createEventAndSignalChange(e,t)}_onMarkerChanges(e){let t=this._editor.getModel();!t||e.some(i=>tu(i,t.uri))&&this._autoTriggerTimer.cancelAndSet(()=>{this.trigger({type:2})},this._delay)}_onCursorChange(){this._autoTriggerTimer.cancelAndSet(()=>{this.trigger({type:2})},this._delay)}_getRangeOfMarker(e){let t=this._editor.getModel();if(!!t)for(let i of this._markerService.read({resource:t.uri})){let n=t.validateRange(i);if(b.intersectRanges(n,e))return b.lift(n)}}_getRangeOfSelectionUnlessWhitespaceEnclosed(e){if(!this._editor.hasModel())return;let t=this._editor.getModel(),i=this._editor.getSelection();if(i.isEmpty()&&e.type===2){let{lineNumber:n,column:o}=i.getPosition(),r=t.getLineContent(n);if(r.length===0)return;if(o===1){if(/\s/.test(r[0]))return}else if(o===t.getLineMaxColumn(n)){if(/\s/.test(r[r.length-1]))return}else if(/\s/.test(r[o-2])&&/\s/.test(r[o-1]))return}return i}_createEventAndSignalChange(e,t){let i=this._editor.getModel();if(!t||!i){this._signalChange(void 0);return}let n=this._getRangeOfMarker(t),o=n?n.getStartPosition():t.getStartPosition(),r={trigger:e,selection:t,position:o};return this._signalChange(r),r}},ys;(function(s){s.Empty={type:0};class e{constructor(i,n,o,r){this.trigger=i,this.rangeOrSelection=n,this.position=o,this._cancellablePromise=r,this.type=1,this.actions=r.catch(a=>{if(jn(a))return IM;throw a})}cancel(){this._cancellablePromise.cancel()}}s.Triggered=e})(ys||(ys={}));var IM={allActions:[],validActions:[],dispose:()=>{},documentation:[],hasAutoFix:!1},Ag=class extends z{constructor(e,t,i,n){super();this._editor=e,this._markerService=t,this._progressService=n,this._codeActionOracle=this._register(new et),this._state=ys.Empty,this._onDidChangeState=this._register(new j),this.onDidChangeState=this._onDidChangeState.event,Va.set(this,!1),this._supportedCodeActions=Rg.bindTo(i),this._register(this._editor.onDidChangeModel(()=>this._update())),this._register(this._editor.onDidChangeModelLanguage(()=>this._update())),this._register($n.onDidChange(()=>this._update())),this._update()}dispose(){Dg(this,Va,"f")||(EM(this,Va,!0,"f"),super.dispose(),this.setState(ys.Empty,!0))}_update(){if(Dg(this,Va,"f"))return;this._codeActionOracle.value=void 0,this.setState(ys.Empty);let e=this._editor.getModel();if(e&&$n.has(e)&&!this._editor.getOption(81)){let t=[];for(let i of $n.all(e))Array.isArray(i.providedCodeActionKinds)&&t.push(...i.providedCodeActionKinds);this._supportedCodeActions.set(t.join(" ")),this._codeActionOracle.value=new e_(this._editor,this._markerService,i=>{var n;if(!i){this.setState(ys.Empty);return}let o=Oe(r=>wd(e,i.selection,i.trigger,Jn.None,r));i.trigger.type===1&&((n=this._progressService)===null||n===void 0||n.showWhile(o,250)),this.setState(new ys.Triggered(i.trigger,i.selection,i.position,o))},void 0),this._codeActionOracle.value.trigger({type:2})}else this._supportedCodeActions.reset()}trigger(e){this._codeActionOracle.value&&this._codeActionOracle.value.trigger(e)}setState(e,t){e!==this._state&&(this._state.type===1&&this._state.cancel(),this._state=e,!t&&!Dg(this,Va,"f")&&this._onDidChangeState.fire(e))}};Va=new WeakMap;var kM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Bu=function(s,e){return function(t,i){e(t,i,s)}},t_=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})};function kd(s){return O.regex(Rg.keys()[0],new RegExp("(\\s|^)"+So(s.value)+"\\b"))}var Fg={type:"object",defaultSnippets:[{body:{kind:""}}],properties:{kind:{type:"string",description:u("args.schema.kind","Kind of the code action to run.")},apply:{type:"string",description:u("args.schema.apply","Controls when the returned actions are applied."),default:"ifSingle",enum:["first","ifSingle","never"],enumDescriptions:[u("args.schema.apply.first","Always apply the first returned code action."),u("args.schema.apply.ifSingle","Apply the first returned code action if it is the only one."),u("args.schema.apply.never","Do not apply the returned code actions.")]},preferred:{type:"boolean",default:!1,description:u("args.schema.preferred","Controls if only preferred code actions should be returned.")}}},Ao=class i_ extends z{constructor(e,t,i,n,o){super();this._instantiationService=o,this._editor=e,this._model=this._register(new Ag(this._editor,t,i,n)),this._register(this._model.onDidChangeState(r=>this.update(r))),this._ui=new es(()=>this._register(new Wu(e,Fo.Id,Ss.Id,{applyCodeAction:(r,a)=>t_(this,void 0,void 0,function*(){try{yield this._applyCodeAction(r)}finally{a&&this._trigger({type:2,filter:{}})}})},this._instantiationService)))}static get(e){return e.getContribution(i_.ID)}update(e){this._ui.getValue().update(e)}showCodeActions(e,t,i){return this._ui.getValue().showCodeActionList(e,t,i,{includeDisabledActions:!1})}manualTriggerAtCurrentPosition(e,t,i){var n;if(!this._editor.hasModel())return;(n=Qt.get(this._editor))===null||n===void 0||n.closeMessage();let o=this._editor.getPosition();this._trigger({type:1,filter:t,autoApply:i,context:{notAvailableMessage:e,position:o}})}_trigger(e){return this._model.trigger(e)}_applyCodeAction(e){return this._instantiationService.invokeFunction(LM,e,this._editor)}};Ao.ID="editor.contrib.quickFixController";Ao=kM([Bu(1,gd),Bu(2,ie),Bu(3,Mo),Bu(4,le)],Ao);function LM(s,e,t){return t_(this,void 0,void 0,function*(){let i=s.get(uu),n=s.get(dt),o=s.get(Yn),r=s.get(Ze);if(o.publicLog2("codeAction.applyCodeAction",{codeActionTitle:e.action.title,codeActionKind:e.action.kind,codeActionIsPreferred:!!e.action.isPreferred}),yield e.resolve(ge.None),e.action.edit&&(yield i.apply(pu.convert(e.action.edit),{editor:t,label:e.action.title})),e.action.command)try{yield n.executeCommand(e.action.command.id,...e.action.command.arguments||[])}catch(a){let l=PM(a);r.error(typeof l=="string"?l:u("applyCodeActionFailed","An unknown error occurred while applying the code action"))}})}function PM(s){return typeof s=="string"?s:s instanceof Error&&typeof s.message=="string"?s.message:void 0}function bs(s,e,t,i){if(s.hasModel()){let n=Ao.get(s);n&&n.manualTriggerAtCurrentPosition(e,t,i)}}var Fo=class extends F{constructor(){super({id:Fo.Id,label:u("quickfix.trigger.label","Quick Fix..."),alias:"Quick Fix...",precondition:O.and(S.writable,S.hasCodeActionsProvider),kbOpts:{kbExpr:S.editorTextFocus,primary:2132,weight:100}})}run(e,t){return bs(t,u("editor.action.quickFix.noneMessage","No code actions available"),void 0,void 0)}};Fo.Id="editor.action.quickFix";var Ng=class extends ct{constructor(){super({id:Ru,precondition:O.and(S.writable,S.hasCodeActionsProvider),description:{description:"Trigger a code action",args:[{name:"args",schema:Fg}]}})}runEditorCommand(e,t,i){let n=Xi.fromUser(i,{kind:fe.Empty,apply:"ifSingle"});return bs(t,typeof(i==null?void 0:i.kind)=="string"?n.preferred?u("editor.action.codeAction.noneMessage.preferred.kind","No preferred code actions for '{0}' available",i.kind):u("editor.action.codeAction.noneMessage.kind","No code actions for '{0}' available",i.kind):n.preferred?u("editor.action.codeAction.noneMessage.preferred","No preferred code actions available"):u("editor.action.codeAction.noneMessage","No code actions available"),{include:n.kind,includeSourceActions:!0,onlyIncludePreferredActions:n.preferred},n.apply)}},zg=class extends F{constructor(){super({id:Au,label:u("refactor.label","Refactor..."),alias:"Refactor...",precondition:O.and(S.writable,S.hasCodeActionsProvider),kbOpts:{kbExpr:S.editorTextFocus,primary:3120,mac:{primary:1328},weight:100},contextMenuOpts:{group:"1_modification",order:2,when:O.and(S.writable,kd(fe.Refactor))},description:{description:"Refactor...",args:[{name:"args",schema:Fg}]}})}run(e,t,i){let n=Xi.fromUser(i,{kind:fe.Refactor,apply:"never"});return bs(t,typeof(i==null?void 0:i.kind)=="string"?n.preferred?u("editor.action.refactor.noneMessage.preferred.kind","No preferred refactorings for '{0}' available",i.kind):u("editor.action.refactor.noneMessage.kind","No refactorings for '{0}' available",i.kind):n.preferred?u("editor.action.refactor.noneMessage.preferred","No preferred refactorings available"):u("editor.action.refactor.noneMessage","No refactorings available"),{include:fe.Refactor.contains(n.kind)?n.kind:fe.None,onlyIncludePreferredActions:n.preferred},n.apply)}},Og=class extends F{constructor(){super({id:Fu,label:u("source.label","Source Action..."),alias:"Source Action...",precondition:O.and(S.writable,S.hasCodeActionsProvider),contextMenuOpts:{group:"1_modification",order:2.1,when:O.and(S.writable,kd(fe.Source))},description:{description:"Source Action...",args:[{name:"args",schema:Fg}]}})}run(e,t,i){let n=Xi.fromUser(i,{kind:fe.Source,apply:"never"});return bs(t,typeof(i==null?void 0:i.kind)=="string"?n.preferred?u("editor.action.source.noneMessage.preferred.kind","No preferred source actions for '{0}' available",i.kind):u("editor.action.source.noneMessage.kind","No source actions for '{0}' available",i.kind):n.preferred?u("editor.action.source.noneMessage.preferred","No preferred source actions available"):u("editor.action.source.noneMessage","No source actions available"),{include:fe.Source.contains(n.kind)?n.kind:fe.None,includeSourceActions:!0,onlyIncludePreferredActions:n.preferred},n.apply)}},Hg=class extends F{constructor(){super({id:Cd,label:u("organizeImports.label","Organize Imports"),alias:"Organize Imports",precondition:O.and(S.writable,kd(fe.SourceOrganizeImports)),kbOpts:{kbExpr:S.editorTextFocus,primary:1581,weight:100}})}run(e,t){return bs(t,u("editor.action.organize.noneMessage","No organize imports action available"),{include:fe.SourceOrganizeImports,includeSourceActions:!0},"ifSingle")}},Wg=class extends F{constructor(){super({id:_d,label:u("fixAll.label","Fix All"),alias:"Fix All",precondition:O.and(S.writable,kd(fe.SourceFixAll))})}run(e,t){return bs(t,u("fixAll.noneMessage","No fix all action available"),{include:fe.SourceFixAll,includeSourceActions:!0},"ifSingle")}},Ss=class extends F{constructor(){super({id:Ss.Id,label:u("autoFix.label","Auto Fix..."),alias:"Auto Fix...",precondition:O.and(S.writable,kd(fe.QuickFix)),kbOpts:{kbExpr:S.editorTextFocus,primary:1620,mac:{primary:2644},weight:100}})}run(e,t){return bs(t,u("editor.action.autoFix.noneMessage","No auto fixes available"),{include:fe.QuickFix,onlyIncludePreferredActions:!0},"ifSingle")}};Ss.Id="editor.action.autoFix";J(Ao.ID,Ao);I(Fo);I(zg);I(Og);I(Hg);I(Ss);I(Wg);$(new Ng);Ae();ke();Le();ev();G();ue();He();Re();ut();Le();G();qt();Xt();Re();hr();wt();var n_=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Ld=class{constructor(){this.lenses=[],this._disposables=new A}dispose(){this._disposables.dispose()}get isDisposed(){return this._disposables.isDisposed}add(e,t){this._disposables.add(e);for(let i of e.lenses)this.lenses.push({symbol:i,provider:t})}};function Bg(s,e){return n_(this,void 0,void 0,function*(){let t=cr.ordered(s),i=new Map,n=new Ld,o=t.map((r,a)=>n_(this,void 0,void 0,function*(){i.set(r,a);try{let l=yield Promise.resolve(r.provideCodeLenses(s,e));l&&n.add(l,r)}catch(l){Ue(l)}}));return yield Promise.all(o),n.lenses=n.lenses.sort((r,a)=>r.symbol.range.startLineNumber<a.symbol.range.startLineNumber?-1:r.symbol.range.startLineNumber>a.symbol.range.startLineNumber?1:i.get(r.provider)<i.get(a.provider)?-1:i.get(r.provider)>i.get(a.provider)?1:r.symbol.range.startColumn<a.symbol.range.startColumn?-1:r.symbol.range.startColumn>a.symbol.range.startColumn?1:0),n})}Pe.registerCommand("_executeCodeLensProvider",function(s,...e){let[t,i]=e;qe(_e.isUri(t)),qe(typeof i=="number"||!i);let n=s.get(Yt).getModel(t);if(!n)throw wn();let o=[],r=new A;return Bg(n,ge.None).then(a=>{r.add(a);let l=[];for(let c of a.lenses)i==null||Boolean(c.symbol.command)?o.push(c.symbol):i-- >0&&c.provider.resolveCodeLens&&l.push(Promise.resolve(c.provider.resolveCodeLens(n,c.symbol,ge.None)).then(d=>o.push(d||c.symbol)));return Promise.all(l)}).then(()=>o).finally(()=>{setTimeout(()=>r.dispose(),100)})});ke();yS();ga();ee();ns();Be();var MM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},DM=function(s,e){return function(t,i){e(t,i,s)}},jg=Fi("ICodeLensCache"),Vg=class{constructor(e,t){this.lineCount=e,this.data=t}},Gg=class{constructor(e){this._fakeProvider=new class{provideCodeLenses(){throw new Error("not supported")}},this._cache=new Un(20,.75);let t="codelens/cache";xS(()=>e.remove(t,1));let i="codelens/cache2",n=e.get(i,1,"{}");this._deserialize(n),yh(e.onWillSaveState)(o=>{o.reason===_u.SHUTDOWN&&e.store(i,this._serialize(),1,1)})}put(e,t){let i=t.lenses.map(r=>{var a;return{range:r.symbol.range,command:r.symbol.command&&{id:"",title:(a=r.symbol.command)===null||a===void 0?void 0:a.title}}}),n=new Ld;n.add({lenses:i,dispose:()=>{}},this._fakeProvider);let o=new Vg(e.getLineCount(),n);this._cache.set(e.uri.toString(),o)}get(e){let t=this._cache.get(e.uri.toString());return t&&t.lineCount===e.getLineCount()?t.data:void 0}delete(e){this._cache.delete(e.uri.toString())}_serialize(){let e=Object.create(null);for(let[t,i]of this._cache){let n=new Set;for(let o of i.data.lenses)n.add(o.symbol.range.startLineNumber);e[t]={lineCount:i.lineCount,lines:[...n.values()]}}return JSON.stringify(e)}_deserialize(e){try{let t=JSON.parse(e);for(let i in t){let n=t[i],o=[];for(let a of n.lines)o.push({range:new b(a,1,a,11)});let r=new Ld;r.add({lenses:o,dispose(){}},this._fakeProvider),this._cache.set(i,new Vg(n.lineCount,r))}}catch(t){}}};Gg=MM([DM(0,li)],Gg);Ni(jg,Gg);Ae();ee();jt();var o_=class{constructor(e,t,i){this.afterColumn=1073741824,this.afterLineNumber=e,this.heightInPx=t,this._onHeight=i,this.suppressMouseDown=!0,this.domNode=document.createElement("div")}onComputedHeight(e){this._lastHeight===void 0?this._lastHeight=e:this._lastHeight!==e&&(this._lastHeight=e,this._onHeight())}isVisible(){return this._lastHeight!==0&&this.domNode.hasAttribute("monaco-visible-view-zone")}},Pd=class{constructor(e,t,i){this.allowEditorOverflow=!1,this.suppressMouseDown=!0,this._commands=new Map,this._isEmpty=!0,this._editor=e,this._id=`codelens.widget-${Pd._idPool++}`,this.updatePosition(i),this._domNode=document.createElement("span"),this._domNode.className=`codelens-decoration ${t}`}withCommands(e,t){this._commands.clear();let i=[],n=!1;for(let o=0;o<e.length;o++){let r=e[o];if(!!r&&(n=!0,r.command)){let a=fu(r.command.title.trim());r.command.id?(i.push(W("a",{id:String(o),title:r.command.tooltip},...a)),this._commands.set(String(o),r.command)):i.push(W("span",{title:r.command.tooltip},...a)),o+1<e.length&&i.push(W("span",void 0,"\xA0|\xA0"))}}n?(rs(this._domNode,...i),this._isEmpty&&t&&this._domNode.classList.add("fadein"),this._isEmpty=!1):rs(this._domNode,W("span",void 0,"no commands"))}getCommand(e){return e.parentElement===this._domNode?this._commands.get(e.id):void 0}getId(){return this._id}getDomNode(){return this._domNode}updatePosition(e){let t=this._editor.getModel().getLineFirstNonWhitespaceColumn(e);this._widgetPosition={position:{lineNumber:e,column:t},preference:[1]}}getPosition(){return this._widgetPosition||null}};Pd._idPool=0;var Md=class{constructor(){this._removeDecorations=[],this._addDecorations=[],this._addDecorationsCallbacks=[]}addDecoration(e,t){this._addDecorations.push(e),this._addDecorationsCallbacks.push(t)}removeDecoration(e){this._removeDecorations.push(e)}commit(e){let t=e.deltaDecorations(this._removeDecorations,this._addDecorations);for(let i=0,n=t.length;i<n;i++)this._addDecorationsCallbacks[i](t[i])}},Vu=class{constructor(e,t,i,n,o,r,a){this._isDisposed=!1,this._editor=t,this._className=i,this._data=e,this._decorationIds=[];let l,c=[];this._data.forEach((d,h)=>{d.symbol.command&&c.push(d.symbol),n.addDecoration({range:d.symbol.range,options:xe.EMPTY},p=>this._decorationIds[h]=p),l?l=b.plusRange(l,d.symbol.range):l=b.lift(d.symbol.range)}),this._viewZone=new o_(l.startLineNumber-1,r,a),this._viewZoneId=o.addZone(this._viewZone),c.length>0&&(this._createContentWidgetIfNecessary(),this._contentWidget.withCommands(c,!1))}_createContentWidgetIfNecessary(){this._contentWidget?this._editor.layoutContentWidget(this._contentWidget):(this._contentWidget=new Pd(this._editor,this._className,this._viewZone.afterLineNumber+1),this._editor.addContentWidget(this._contentWidget))}dispose(e,t){this._decorationIds.forEach(e.removeDecoration,e),this._decorationIds=[],t&&t.removeZone(this._viewZoneId),this._contentWidget&&(this._editor.removeContentWidget(this._contentWidget),this._contentWidget=void 0),this._isDisposed=!0}isDisposed(){return this._isDisposed}isValid(){return this._decorationIds.some((e,t)=>{let i=this._editor.getModel().getDecorationRange(e),n=this._data[t].symbol;return!!(i&&b.isEmpty(n.range)===i.isEmpty())})}updateCodeLensSymbols(e,t){this._decorationIds.forEach(t.removeDecoration,t),this._decorationIds=[],this._data=e,this._data.forEach((i,n)=>{t.addDecoration({range:i.symbol.range,options:xe.EMPTY},o=>this._decorationIds[n]=o)})}updateHeight(e,t){this._viewZone.heightInPx=e,t.layoutZone(this._viewZoneId),this._contentWidget&&this._editor.layoutContentWidget(this._contentWidget)}computeIfNecessary(e){if(!this._viewZone.isVisible())return null;for(let t=0;t<this._decorationIds.length;t++){let i=e.getDecorationRange(this._decorationIds[t]);i&&(this._data[t].symbol.range=i)}return this._data}updateCommands(e){this._createContentWidgetIfNecessary(),this._contentWidget.withCommands(e,!0);for(let t=0;t<this._data.length;t++){let i=e[t];if(i){let{symbol:n}=this._data[t];n.command=i.command||n.command}}}getCommand(e){var t;return(t=this._contentWidget)===null||t===void 0?void 0:t.getCommand(e)}getLineNumber(){let e=this._editor.getModel().getDecorationRange(this._decorationIds[0]);return e?e.startLineNumber:-1}update(e){if(this.isValid()){let t=this._editor.getModel().getDecorationRange(this._decorationIds[0]);t&&(this._viewZone.afterLineNumber=t.startLineNumber-1,e.layoutZone(this._viewZoneId),this._contentWidget&&(this._contentWidget.updatePosition(t.startLineNumber),this._editor.layoutContentWidget(this._contentWidget)))}}};Q();wt();md();var RM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Gu=function(s,e){return function(t,i){e(t,i,s)}},AM=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Ga=class{constructor(e,t,i,n,o){this._editor=e,this._commandService=i,this._notificationService=n,this._codeLensCache=o,this._disposables=new A,this._localToDispose=new A,this._lenses=[],this._oldCodeLensModels=new A,this._provideCodeLensDebounce=t.for(cr,"CodeLensProvide",{min:250}),this._resolveCodeLensesDebounce=t.for(cr,"CodeLensResolve",{min:250,salt:"resolve"}),this._resolveCodeLensesScheduler=new $e(()=>this._resolveCodeLensesInViewport(),this._resolveCodeLensesDebounce.default()),this._disposables.add(this._editor.onDidChangeModel(()=>this._onModelChange())),this._disposables.add(this._editor.onDidChangeModelLanguage(()=>this._onModelChange())),this._disposables.add(this._editor.onDidChangeConfiguration(r=>{(r.hasChanged(44)||r.hasChanged(16)||r.hasChanged(15))&&this._updateLensStyle(),r.hasChanged(14)&&this._onModelChange()})),this._disposables.add(cr.onDidChange(this._onModelChange,this)),this._onModelChange(),this._styleClassName="_"+Ph(this._editor.getId()).toString(16),this._styleElement=yv(gv(this._editor.getContainerDomNode())?this._editor.getContainerDomNode():void 0),this._updateLensStyle()}dispose(){var e;this._localDispose(),this._disposables.dispose(),this._oldCodeLensModels.dispose(),(e=this._currentCodeLensModel)===null||e===void 0||e.dispose(),this._styleElement.remove()}_getLayoutInfo(){let e=this._editor.getOption(16),t;return!e||e<5?(e=this._editor.getOption(46)*.9|0,t=this._editor.getOption(59)):t=e*Math.max(1.3,this._editor.getOption(59)/this._editor.getOption(46))|0,{codeLensHeight:t,fontSize:e}}_updateLensStyle(){let{codeLensHeight:e,fontSize:t}=this._getLayoutInfo(),i=this._editor.getOption(15),n=this._editor.getOption(44),o=`--codelens-font-family${this._styleClassName}`,r=`--codelens-font-features${this._styleClassName}`,a=`
		.monaco-editor .codelens-decoration.${this._styleClassName} { line-height: ${e}px; font-size: ${t}px; padding-right: ${Math.round(t*.5)}px; font-feature-settings: var(${r}) }
		.monaco-editor .codelens-decoration.${this._styleClassName} span.codicon { line-height: ${e}px; font-size: ${t}px; }
		`;i&&(a+=`.monaco-editor .codelens-decoration.${this._styleClassName} { font-family: var(${o}), ${lr.fontFamily}}`),this._styleElement.textContent=a,this._editor.getContainerDomNode().style.setProperty(o,i!=null?i:"inherit"),this._editor.getContainerDomNode().style.setProperty(r,n.fontFeatureSettings),this._editor.changeViewZones(l=>{for(let c of this._lenses)c.updateHeight(e,l)})}_localDispose(){var e,t,i;(e=this._getCodeLensModelPromise)===null||e===void 0||e.cancel(),this._getCodeLensModelPromise=void 0,(t=this._resolveCodeLensesPromise)===null||t===void 0||t.cancel(),this._resolveCodeLensesPromise=void 0,this._localToDispose.clear(),this._oldCodeLensModels.clear(),(i=this._currentCodeLensModel)===null||i===void 0||i.dispose()}_onModelChange(){this._localDispose();let e=this._editor.getModel();if(!e||!this._editor.getOption(14))return;let t=this._codeLensCache.get(e);if(t&&this._renderCodeLensSymbols(t),!cr.has(e)){t&&this._localToDispose.add(Qr(()=>{let n=this._codeLensCache.get(e);t===n&&(this._codeLensCache.delete(e),this._onModelChange())},30*1e3));return}for(let n of cr.all(e))if(typeof n.onDidChange=="function"){let o=n.onDidChange(()=>i.schedule());this._localToDispose.add(o)}let i=new $e(()=>{var n;let o=Date.now();(n=this._getCodeLensModelPromise)===null||n===void 0||n.cancel(),this._getCodeLensModelPromise=Oe(r=>Bg(e,r)),this._getCodeLensModelPromise.then(r=>{this._currentCodeLensModel&&this._oldCodeLensModels.add(this._currentCodeLensModel),this._currentCodeLensModel=r,this._codeLensCache.put(e,r);let a=this._provideCodeLensDebounce.update(e,Date.now()-o);i.delay=a,this._renderCodeLensSymbols(r),this._resolveCodeLensesInViewportSoon()},de)},this._provideCodeLensDebounce.get(e));this._localToDispose.add(i),this._localToDispose.add(We(()=>this._resolveCodeLensesScheduler.cancel())),this._localToDispose.add(this._editor.onDidChangeModelContent(()=>{this._editor.changeDecorations(n=>{this._editor.changeViewZones(o=>{let r=[],a=-1;this._lenses.forEach(c=>{!c.isValid()||a===c.getLineNumber()?r.push(c):(c.update(o),a=c.getLineNumber())});let l=new Md;r.forEach(c=>{c.dispose(l,o),this._lenses.splice(this._lenses.indexOf(c),1)}),l.commit(n)})}),i.schedule()})),this._localToDispose.add(this._editor.onDidFocusEditorWidget(()=>{i.schedule()})),this._localToDispose.add(this._editor.onDidScrollChange(n=>{n.scrollTopChanged&&this._lenses.length>0&&this._resolveCodeLensesInViewportSoon()})),this._localToDispose.add(this._editor.onDidLayoutChange(()=>{this._resolveCodeLensesInViewportSoon()})),this._localToDispose.add(We(()=>{if(this._editor.getModel()){let n=vr.capture(this._editor);this._editor.changeDecorations(o=>{this._editor.changeViewZones(r=>{this._disposeAllLenses(o,r)})}),n.restore(this._editor)}else this._disposeAllLenses(void 0,void 0)})),this._localToDispose.add(this._editor.onMouseDown(n=>{if(n.target.type!==9)return;let o=n.target.element;if((o==null?void 0:o.tagName)==="SPAN"&&(o=o.parentElement),(o==null?void 0:o.tagName)==="A")for(let r of this._lenses){let a=r.getCommand(o);if(a){this._commandService.executeCommand(a.id,...a.arguments||[]).catch(l=>this._notificationService.error(l));break}}})),i.schedule()}_disposeAllLenses(e,t){let i=new Md;for(let n of this._lenses)n.dispose(i,t);e&&i.commit(e),this._lenses.length=0}_renderCodeLensSymbols(e){if(!this._editor.hasModel())return;let t=this._editor.getModel().getLineCount(),i=[],n;for(let a of e.lenses){let l=a.symbol.range.startLineNumber;l<1||l>t||(n&&n[n.length-1].symbol.range.startLineNumber===l?n.push(a):(n=[a],i.push(n)))}let o=vr.capture(this._editor),r=this._getLayoutInfo();this._editor.changeDecorations(a=>{this._editor.changeViewZones(l=>{let c=new Md,d=0,h=0;for(;h<i.length&&d<this._lenses.length;){let p=i[h][0].symbol.range.startLineNumber,m=this._lenses[d].getLineNumber();m<p?(this._lenses[d].dispose(c,l),this._lenses.splice(d,1)):m===p?(this._lenses[d].updateCodeLensSymbols(i[h],c),h++,d++):(this._lenses.splice(d,0,new Vu(i[h],this._editor,this._styleClassName,c,l,r.codeLensHeight,()=>this._resolveCodeLensesInViewportSoon())),d++,h++)}for(;d<this._lenses.length;)this._lenses[d].dispose(c,l),this._lenses.splice(d,1);for(;h<i.length;)this._lenses.push(new Vu(i[h],this._editor,this._styleClassName,c,l,r.codeLensHeight,()=>this._resolveCodeLensesInViewportSoon())),h++;c.commit(a)})}),o.restore(this._editor)}_resolveCodeLensesInViewportSoon(){this._editor.getModel()&&this._resolveCodeLensesScheduler.schedule()}_resolveCodeLensesInViewport(){var e;(e=this._resolveCodeLensesPromise)===null||e===void 0||e.cancel(),this._resolveCodeLensesPromise=void 0;let t=this._editor.getModel();if(!t)return;let i=[],n=[];if(this._lenses.forEach(a=>{let l=a.computeIfNecessary(t);l&&(i.push(l),n.push(a))}),i.length===0)return;let o=Date.now(),r=Oe(a=>{let l=i.map((c,d)=>{let h=new Array(c.length),p=c.map((m,f)=>!m.symbol.command&&typeof m.provider.resolveCodeLens=="function"?Promise.resolve(m.provider.resolveCodeLens(t,m.symbol,a)).then(v=>{h[f]=v},Ue):(h[f]=m.symbol,Promise.resolve(void 0)));return Promise.all(p).then(()=>{!a.isCancellationRequested&&!n[d].isDisposed()&&n[d].updateCommands(h)})});return Promise.all(l)});this._resolveCodeLensesPromise=r,this._resolveCodeLensesPromise.then(()=>{let a=this._resolveCodeLensesDebounce.update(t,Date.now()-o);this._resolveCodeLensesScheduler.delay=a,this._currentCodeLensModel&&this._codeLensCache.put(t,this._currentCodeLensModel),this._oldCodeLensModels.clear(),r===this._resolveCodeLensesPromise&&(this._resolveCodeLensesPromise=void 0)},a=>{de(a),r===this._resolveCodeLensesPromise&&(this._resolveCodeLensesPromise=void 0)})}getModel(){return this._currentCodeLensModel}};Ga.ID="css.editor.codeLens";Ga=RM([Gu(1,Qn),Gu(2,dt),Gu(3,Ze),Gu(4,jg)],Ga);J(Ga.ID,Ga);I(class extends F{constructor(){super({id:"codelens.showLensesInCurrentLine",precondition:S.hasCodeLensProvider,label:u("showLensOnLine","Show CodeLens Commands For Current Line"),alias:"Show CodeLens Commands For Current Line"})}run(e,t){return AM(this,void 0,void 0,function*(){if(!t.hasModel())return;let i=e.get(Wi),n=e.get(dt),o=e.get(Ze),r=t.getSelection().positionLineNumber,a=t.getContribution(Ga.ID);if(!a)return;let l=a.getModel();if(!l)return;let c=[];for(let h of l.lenses)h.symbol.command&&h.symbol.range.startLineNumber===r&&c.push({label:h.symbol.command.title,command:h.symbol.command});if(c.length===0)return;let d=yield i.pick(c,{canPickMany:!1});if(!!d){if(l.isDisposed)return yield n.executeCommand(this.id);try{yield n.executeCommand(d.command.id,...d.command.arguments||[])}catch(h){o.error(h)}}})}});G();ue();ee();ke();Zn();Le();G();Ye();ue();ee();jt();Re();ut();Le();Xt();ee();Re();hr();wt();function r_(s,e){let t=[],n=is.ordered(s).reverse().map(o=>Promise.resolve(o.provideDocumentColors(s,e)).then(r=>{if(Array.isArray(r))for(let a of r)t.push({colorInfo:a,provider:o})}));return Promise.all(n).then(()=>t)}function Ug(s,e,t,i){return Promise.resolve(t.provideColorPresentations(s,e,i))}Pe.registerCommand("_executeDocumentColorProvider",function(s,...e){let[t]=e;if(!(t instanceof _e))throw wn();let i=s.get(Yt).getModel(t);if(!i)throw wn();let n=[],r=is.ordered(i).reverse().map(a=>Promise.resolve(a.provideDocumentColors(i,ge.None)).then(l=>{if(Array.isArray(l))for(let c of l)n.push({range:c.range,color:[c.color.red,c.color.green,c.color.blue,c.color.alpha]})}));return Promise.all(r).then(()=>n)});Pe.registerCommand("_executeColorPresentationProvider",function(s,...e){let[t,i]=e,{uri:n,range:o}=i;if(!(n instanceof _e)||!Array.isArray(t)||t.length!==4||!b.isIRange(o))throw wn();let[r,a,l,c]=t,d=s.get(Yt).getModel(n);if(!d)throw wn();let h={range:o,color:{red:r,green:a,blue:l,alpha:c}},p=[],f=is.ordered(d).reverse().map(v=>Promise.resolve(v.provideColorPresentations(d,h,ge.None)).then(_=>{Array.isArray(_)&&p.push(..._)}));return Promise.all(f).then(()=>p)});kn();var FM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},NM=function(s,e){return function(t,i){e(t,i,s)}},$g=Object.create({}),zM=500,Tr=class s_ extends z{constructor(e,t){super();this._editor=e,this._configurationService=t,this._localToDispose=this._register(new A),this._decorationsIds=[],this._colorDatas=new Map,this._colorDecoratorIds=new Set,this._ruleFactory=new Jh(this._editor),this._colorDecorationClassRefs=this._register(new A),this._register(e.onDidChangeModel(()=>{this._isEnabled=this.isEnabled(),this.onModelChanged()})),this._register(e.onDidChangeModelLanguage(()=>this.onModelChanged())),this._register(is.onDidChange(()=>this.onModelChanged())),this._register(e.onDidChangeConfiguration(()=>{let i=this._isEnabled;this._isEnabled=this.isEnabled(),i!==this._isEnabled&&(this._isEnabled?this.onModelChanged():this.removeAllDecorations())})),this._timeoutTimer=null,this._computePromise=null,this._isEnabled=this.isEnabled(),this.onModelChanged()}isEnabled(){let e=this._editor.getModel();if(!e)return!1;let t=e.getLanguageId(),i=this._configurationService.getValue(t);if(i&&typeof i=="object"){let n=i.colorDecorators;if(n&&n.enable!==void 0&&!n.enable)return n.enable}return this._editor.getOption(17)}static get(e){return e.getContribution(this.ID)}dispose(){this.stop(),this.removeAllDecorations(),super.dispose()}onModelChanged(){if(this.stop(),!this._isEnabled)return;let e=this._editor.getModel();!e||!is.has(e)||(this._localToDispose.add(this._editor.onDidChangeModelContent(()=>{this._timeoutTimer||(this._timeoutTimer=new Ri,this._timeoutTimer.cancelAndSet(()=>{this._timeoutTimer=null,this.beginCompute()},s_.RECOMPUTE_TIME))})),this.beginCompute())}beginCompute(){this._computePromise=Oe(e=>{let t=this._editor.getModel();return t?r_(t,e):Promise.resolve([])}),this._computePromise.then(e=>{this.updateDecorations(e),this.updateColorDecorators(e),this._computePromise=null},de)}stop(){this._timeoutTimer&&(this._timeoutTimer.cancel(),this._timeoutTimer=null),this._computePromise&&(this._computePromise.cancel(),this._computePromise=null),this._localToDispose.clear()}updateDecorations(e){let t=e.map(i=>({range:{startLineNumber:i.colorInfo.range.startLineNumber,startColumn:i.colorInfo.range.startColumn,endLineNumber:i.colorInfo.range.endLineNumber,endColumn:i.colorInfo.range.endColumn},options:xe.EMPTY}));this._decorationsIds=this._editor.deltaDecorations(this._decorationsIds,t),this._colorDatas=new Map,this._decorationsIds.forEach((i,n)=>this._colorDatas.set(i,e[n]))}updateColorDecorators(e){this._colorDecorationClassRefs.clear();let t=[];for(let i=0;i<e.length&&t.length<zM;i++){let{red:n,green:o,blue:r,alpha:a}=e[i].colorInfo.color,l=new wo(Math.round(n*255),Math.round(o*255),Math.round(r*255),a),c=`rgba(${l.r}, ${l.g}, ${l.b}, ${l.a})`,d=this._colorDecorationClassRefs.add(this._ruleFactory.createClassNameRef({backgroundColor:c}));t.push({range:{startLineNumber:e[i].colorInfo.range.startLineNumber,startColumn:e[i].colorInfo.range.startColumn,endLineNumber:e[i].colorInfo.range.endLineNumber,endColumn:e[i].colorInfo.range.endColumn},options:{description:"colorDetector",before:{content:AS,inlineClassName:`${d.className} colorpicker-color-decoration`,inlineClassNameAffectsLetterSpacing:!0,attachedData:$g}}})}this._colorDecoratorIds=new Set(this._editor.deltaDecorations([...this._colorDecoratorIds],t))}removeAllDecorations(){this._decorationsIds=this._editor.deltaDecorations(this._decorationsIds,[]),this._colorDecoratorIds=new Set(this._editor.deltaDecorations([...this._colorDecoratorIds],[])),this._colorDecorationClassRefs.clear()}getColorData(e){let t=this._editor.getModel();if(!t)return null;let i=t.getDecorationsInRange(b.fromPositions(e,e)).filter(n=>this._colorDatas.has(n.id));return i.length===0?null:this._colorDatas.get(i[0].id)}isColorDecorationId(e){return this._colorDecoratorIds.has(e)}};Tr.ID="editor.contrib.colorDetector";Tr.RECOMPUTE_TIME=1e3;Tr=FM([NM(1,it)],Tr);J(Tr.ID,Tr);yo();G();ue();ee();He();rn();ke();Le();G();qt();bd();ue();tt();ee();Re();rn();Co();De();G();Pi();function Kg(s,e){return!!s[e]}var ju=class{constructor(e,t){this.target=e.target,this.hasTriggerModifier=Kg(e.event,t.triggerModifier),this.hasSideBySideModifier=Kg(e.event,t.triggerSideBySideModifier),this.isNoneOrSingleMouseDown=e.event.detail<=1}},qg=class{constructor(e,t){this.keyCodeIsTriggerKey=e.keyCode===t.triggerKey,this.keyCodeIsSideBySideKey=e.keyCode===t.triggerSideBySideKey,this.hasTriggerModifier=Kg(e,t.triggerModifier)}},Dd=class{constructor(e,t,i,n){this.triggerKey=e,this.triggerModifier=t,this.triggerSideBySideKey=i,this.triggerSideBySideModifier=n}equals(e){return this.triggerKey===e.triggerKey&&this.triggerModifier===e.triggerModifier&&this.triggerSideBySideKey===e.triggerSideBySideKey&&this.triggerSideBySideModifier===e.triggerSideBySideModifier}};function a_(s){return s==="altKey"?bi?new Dd(57,"metaKey",6,"altKey"):new Dd(5,"ctrlKey",6,"altKey"):bi?new Dd(6,"altKey",57,"metaKey"):new Dd(6,"altKey",5,"ctrlKey")}var vs=class extends z{constructor(e){super();this._onMouseMoveOrRelevantKeyDown=this._register(new j),this.onMouseMoveOrRelevantKeyDown=this._onMouseMoveOrRelevantKeyDown.event,this._onExecute=this._register(new j),this.onExecute=this._onExecute.event,this._onCancel=this._register(new j),this.onCancel=this._onCancel.event,this._editor=e,this._opts=a_(this._editor.getOption(70)),this._lastMouseMoveEvent=null,this._hasTriggerKeyOnMouseDown=!1,this._lineNumberOnMouseDown=0,this._register(this._editor.onDidChangeConfiguration(t=>{if(t.hasChanged(70)){let i=a_(this._editor.getOption(70));if(this._opts.equals(i))return;this._opts=i,this._lastMouseMoveEvent=null,this._hasTriggerKeyOnMouseDown=!1,this._lineNumberOnMouseDown=0,this._onCancel.fire()}})),this._register(this._editor.onMouseMove(t=>this._onEditorMouseMove(new ju(t,this._opts)))),this._register(this._editor.onMouseDown(t=>this._onEditorMouseDown(new ju(t,this._opts)))),this._register(this._editor.onMouseUp(t=>this._onEditorMouseUp(new ju(t,this._opts)))),this._register(this._editor.onKeyDown(t=>this._onEditorKeyDown(new qg(t,this._opts)))),this._register(this._editor.onKeyUp(t=>this._onEditorKeyUp(new qg(t,this._opts)))),this._register(this._editor.onMouseDrag(()=>this._resetHandler())),this._register(this._editor.onDidChangeCursorSelection(t=>this._onDidChangeCursorSelection(t))),this._register(this._editor.onDidChangeModel(t=>this._resetHandler())),this._register(this._editor.onDidChangeModelContent(()=>this._resetHandler())),this._register(this._editor.onDidScrollChange(t=>{(t.scrollTopChanged||t.scrollLeftChanged)&&this._resetHandler()}))}_onDidChangeCursorSelection(e){e.selection&&e.selection.startColumn!==e.selection.endColumn&&this._resetHandler()}_onEditorMouseMove(e){this._lastMouseMoveEvent=e,this._onMouseMoveOrRelevantKeyDown.fire([e,null])}_onEditorMouseDown(e){this._hasTriggerKeyOnMouseDown=e.hasTriggerModifier,this._lineNumberOnMouseDown=e.target.position?e.target.position.lineNumber:0}_onEditorMouseUp(e){let t=e.target.position?e.target.position.lineNumber:0;this._hasTriggerKeyOnMouseDown&&this._lineNumberOnMouseDown&&this._lineNumberOnMouseDown===t&&this._onExecute.fire(e)}_onEditorKeyDown(e){this._lastMouseMoveEvent&&(e.keyCodeIsTriggerKey||e.keyCodeIsSideBySideKey&&e.hasTriggerModifier)?this._onMouseMoveOrRelevantKeyDown.fire([this._lastMouseMoveEvent,e]):e.hasTriggerModifier&&this._onCancel.fire()}_onEditorKeyUp(e){e.keyCodeIsTriggerKey&&this._onCancel.fire()}_resetHandler(){this._lastMouseMoveEvent=null,this._hasTriggerKeyOnMouseDown=!1,this._onCancel.fire()}};Ae();ss();xi();Zn();De();mh();ue();Ci();mh();Ci();wt();Ee();Be();Ne();sn();var OM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Er=function(s,e){return function(t,i){e(t,i,s)}},Mn=class extends Fx{constructor(e,t,i,n,o,r,a,l,c,d,h){super(e,Object.assign(Object.assign({},i.getRawOptions()),{overflowWidgetsDomNode:i.getOverflowWidgetsDomNode()}),{},n,o,r,a,l,c,d,h);this._parentEditor=i,this._overwriteOptions=t,super.updateOptions(this._overwriteOptions),this._register(i.onDidChangeConfiguration(p=>this._onParentConfigurationChanged(p)))}getParentEditor(){return this._parentEditor}_onParentConfigurationChanged(e){super.updateOptions(this._parentEditor.getRawOptions()),super.updateOptions(this._overwriteOptions)}updateOptions(e){la(this._overwriteOptions,e,!0),super.updateOptions(this._overwriteOptions)}};Mn=OM([Er(3,le),Er(4,Ve),Er(5,dt),Er(6,ie),Er(7,Nt),Er(8,Ze),Er(9,Oh),Er(10,Dt)],Mn);Ae();Zn();G();mh();ee();jt();var d_=new we(new wo(0,122,204)),HM={showArrow:!0,showFrame:!0,className:"",frameColor:d_,arrowColor:d_,keepEditorSelection:!1},WM="vs.editor.contrib.zoneWidget",c_=class{constructor(e,t,i,n,o,r){this.id="",this.domNode=e,this.afterLineNumber=t,this.afterColumn=i,this.heightInLines=n,this._onDomNodeTop=o,this._onComputedHeight=r}onDomNodeTop(e){this._onDomNodeTop(e)}onComputedHeight(e){this._onComputedHeight(e)}},h_=class{constructor(e,t){this._id=e,this._domNode=t}getId(){return this._id}getDomNode(){return this._domNode}getPosition(){return null}},Rd=class{constructor(e){this._editor=e,this._ruleName=Rd._IdGenerator.nextId(),this._decorations=[],this._color=null,this._height=-1}dispose(){this.hide(),Um(this._ruleName)}set color(e){this._color!==e&&(this._color=e,this._updateStyle())}set height(e){this._height!==e&&(this._height=e,this._updateStyle())}_updateStyle(){Um(this._ruleName),bv(`.monaco-editor ${this._ruleName}`,`border-style: solid; border-color: transparent; border-bottom-color: ${this._color}; border-width: ${this._height}px; bottom: -${this._height}px; margin-left: -${this._height}px; `)}show(e){e.column===1&&(e={lineNumber:e.lineNumber,column:2}),this._decorations=this._editor.deltaDecorations(this._decorations,[{range:b.fromPositions(e),options:{description:"zone-widget-arrow",className:this._ruleName,stickiness:1}}])}hide(){this._editor.deltaDecorations(this._decorations,[])}};Rd._IdGenerator=new aC(".arrow-decoration-");var Xg=class{constructor(e,t={}){this._arrow=null,this._overlayWidget=null,this._resizeSash=null,this._positionMarkerId=[],this._viewZone=null,this._disposables=new A,this.container=null,this._isShowing=!1,this.editor=e,this.options=pS(t),la(this.options,HM,!1),this.domNode=document.createElement("div"),this.options.isAccessible||(this.domNode.setAttribute("aria-hidden","true"),this.domNode.setAttribute("role","presentation")),this._disposables.add(this.editor.onDidLayoutChange(i=>{let n=this._getWidth(i);this.domNode.style.width=n+"px",this.domNode.style.left=this._getLeft(i)+"px",this._onWidth(n)}))}dispose(){this._overlayWidget&&(this.editor.removeOverlayWidget(this._overlayWidget),this._overlayWidget=null),this._viewZone&&this.editor.changeViewZones(e=>{this._viewZone&&e.removeZone(this._viewZone.id),this._viewZone=null}),this.editor.deltaDecorations(this._positionMarkerId,[]),this._positionMarkerId=[],this._disposables.dispose()}create(){this.domNode.classList.add("zone-widget"),this.options.className&&this.domNode.classList.add(this.options.className),this.container=document.createElement("div"),this.container.classList.add("zone-widget-container"),this.domNode.appendChild(this.container),this.options.showArrow&&(this._arrow=new Rd(this.editor),this._disposables.add(this._arrow)),this._fillContainer(this.container),this._initSash(),this._applyStyles()}style(e){e.frameColor&&(this.options.frameColor=e.frameColor),e.arrowColor&&(this.options.arrowColor=e.arrowColor),this._applyStyles()}_applyStyles(){if(this.container&&this.options.frameColor){let e=this.options.frameColor.toString();this.container.style.borderTopColor=e,this.container.style.borderBottomColor=e}if(this._arrow&&this.options.arrowColor){let e=this.options.arrowColor.toString();this._arrow.color=e}}_getWidth(e){return e.width-e.minimap.minimapWidth-e.verticalScrollbarWidth}_getLeft(e){return e.minimap.minimapWidth>0&&e.minimap.minimapLeft===0?e.minimap.minimapWidth:0}_onViewZoneTop(e){this.domNode.style.top=e+"px"}_onViewZoneHeight(e){if(this.domNode.style.height=`${e}px`,this.container){let t=e-this._decoratingElementsHeight();this.container.style.height=`${t}px`;let i=this.editor.getLayoutInfo();this._doLayout(t,this._getWidth(i))}this._resizeSash&&this._resizeSash.layout()}get position(){let[e]=this._positionMarkerId;if(!e)return;let t=this.editor.getModel();if(!t)return;let i=t.getDecorationRange(e);if(!!i)return i.getStartPosition()}show(e,t){let i=b.isIRange(e)?b.lift(e):b.fromPositions(e);this._isShowing=!0,this._showImpl(i,t),this._isShowing=!1,this._positionMarkerId=this.editor.deltaDecorations(this._positionMarkerId,[{range:i,options:xe.EMPTY}])}hide(){this._viewZone&&(this.editor.changeViewZones(e=>{this._viewZone&&e.removeZone(this._viewZone.id)}),this._viewZone=null),this._overlayWidget&&(this.editor.removeOverlayWidget(this._overlayWidget),this._overlayWidget=null),this._arrow&&this._arrow.hide()}_decoratingElementsHeight(){let e=this.editor.getOption(59),t=0;if(this.options.showArrow){let i=Math.round(e/3);t+=2*i}if(this.options.showFrame){let i=Math.round(e/9);t+=2*i}return t}_showImpl(e,t){let i=e.getStartPosition(),n=this.editor.getLayoutInfo(),o=this._getWidth(n);this.domNode.style.width=`${o}px`,this.domNode.style.left=this._getLeft(n)+"px";let r=document.createElement("div");r.style.overflow="hidden";let a=this.editor.getOption(59),l=Math.max(12,this.editor.getLayoutInfo().height/a*.8);t=Math.min(t,l);let c=0,d=0;if(this._arrow&&this.options.showArrow&&(c=Math.round(a/3),this._arrow.height=c,this._arrow.show(i)),this.options.showFrame&&(d=Math.round(a/9)),this.editor.changeViewZones(m=>{this._viewZone&&m.removeZone(this._viewZone.id),this._overlayWidget&&(this.editor.removeOverlayWidget(this._overlayWidget),this._overlayWidget=null),this.domNode.style.top="-1000px",this._viewZone=new c_(r,i.lineNumber,i.column,t,f=>this._onViewZoneTop(f),f=>this._onViewZoneHeight(f)),this._viewZone.id=m.addZone(this._viewZone),this._overlayWidget=new h_(WM+this._viewZone.id,this.domNode),this.editor.addOverlayWidget(this._overlayWidget)}),this.container&&this.options.showFrame){let m=this.options.frameWidth?this.options.frameWidth:d;this.container.style.borderTopWidth=m+"px",this.container.style.borderBottomWidth=m+"px"}let h=t*a-this._decoratingElementsHeight();this.container&&(this.container.style.top=c+"px",this.container.style.height=h+"px",this.container.style.overflow="hidden"),this._doLayout(h,o),this.options.keepEditorSelection||this.editor.setSelection(e);let p=this.editor.getModel();if(p){let m=e.endLineNumber+1;m<=p.getLineCount()?this.revealLine(m,!1):this.revealLine(p.getLineCount(),!0)}}revealLine(e,t){t?this.editor.revealLineInCenter(e,0):this.editor.revealLine(e,0)}setCssClass(e,t){!this.container||(t&&this.container.classList.remove(t),this.container.classList.add(e))}_onWidth(e){}_doLayout(e,t){}_relayout(e){this._viewZone&&this._viewZone.heightInLines!==e&&this.editor.changeViewZones(t=>{this._viewZone&&(this._viewZone.heightInLines=e,t.layoutZone(this._viewZone.id))})}_initSash(){if(this._resizeSash)return;this._resizeSash=this._disposables.add(new ko(this.domNode,this,{orientation:1})),this.options.isResizeable||(this._resizeSash.state=0);let e;this._disposables.add(this._resizeSash.onDidStart(t=>{this._viewZone&&(e={startY:t.startY,heightInLines:this._viewZone.heightInLines})})),this._disposables.add(this._resizeSash.onDidEnd(()=>{e=void 0})),this._disposables.add(this._resizeSash.onDidChange(t=>{if(e){let i=(t.currentY-e.startY)/this.editor.getOption(59),n=i<0?Math.ceil(i):Math.floor(i),o=e.heightInLines+n;o>5&&o<35&&this._relayout(o)}}))}getHorizontalSashLeft(){return 0}getHorizontalSashTop(){return(this.domNode.style.height===null?0:parseInt(this.domNode.style.height))-this._decoratingElementsHeight()/2}getHorizontalSashWidth(){let e=this.editor.getLayoutInfo();return e.width-e.minimap.minimapWidth}};Q();Ae();Vm();Ae();Ae();Vm();Ym();ss();De();var u_=class extends Jl{constructor(e,t){super();this._onDidChangeVisibility=this._register(new j),this.onDidChangeVisibility=this._onDidChangeVisibility.event,this._element=H(e,W(".monaco-dropdown")),this._label=H(this._element,W(".dropdown-label"));let i=t.labelRenderer;i||(i=o=>(o.textContent=t.label||"",null));for(let o of[$i.CLICK,$i.MOUSE_DOWN,id.Tap])this._register(Ke(this.element,o,r=>an.stop(r,!0)));for(let o of[$i.MOUSE_DOWN,id.Tap])this._register(Ke(this._label,o,r=>{r instanceof MouseEvent&&r.detail>1||(this.visible?this.hide():this.show())}));this._register(Ke(this._label,$i.KEY_UP,o=>{let r=new os(o);(r.equals(3)||r.equals(10))&&(an.stop(o,!0),this.visible?this.hide():this.show())}));let n=i(this._label);n&&this._register(n),this._register(_a.addTarget(this._label))}get element(){return this._element}show(){this.visible||(this.visible=!0,this._onDidChangeVisibility.fire(!0))}hide(){this.visible&&(this.visible=!1,this._onDidChangeVisibility.fire(!1))}dispose(){super.dispose(),this.hide(),this.boxContainer&&(this.boxContainer.remove(),this.boxContainer=void 0),this.contents&&(this.contents.remove(),this.contents=void 0),this._label&&(this._label.remove(),this._label=void 0)}},Yg=class extends u_{constructor(e,t){super(e,t);this._actions=[],this._contextMenuProvider=t.contextMenuProvider,this.actions=t.actions||[],this.actionProvider=t.actionProvider,this.menuClassName=t.menuClassName||"",this.menuAsChild=!!t.menuAsChild}set menuOptions(e){this._menuOptions=e}get menuOptions(){return this._menuOptions}get actions(){return this.actionProvider?this.actionProvider.getActions():this._actions}set actions(e){this._actions=e}show(){super.show(),this.element.classList.add("active"),this._contextMenuProvider.showContextMenu({getAnchor:()=>this.element,getActions:()=>this.actions,getActionsContext:()=>this.menuOptions?this.menuOptions.context:null,getActionViewItem:e=>this.menuOptions&&this.menuOptions.actionViewItemProvider?this.menuOptions.actionViewItemProvider(e):void 0,getKeyBinding:e=>this.menuOptions&&this.menuOptions.getKeyBinding?this.menuOptions.getKeyBinding(e):void 0,getMenuClassName:()=>this.menuClassName,onHide:()=>this.onHide(),actionRunner:this.menuOptions?this.menuOptions.actionRunner:void 0,anchorAlignment:this.menuOptions?this.menuOptions.anchorAlignment:0,domForShadowRoot:this.menuAsChild?this.element:void 0})}hide(){super.hide()}onHide(){this.hide(),this.element.classList.remove("active")}};De();var Uu=class extends lu{constructor(e,t,i,n=Object.create(null)){super(null,e,n);this.actionItem=null,this._onDidChangeVisibility=this._register(new j),this.menuActionsOrProvider=t,this.contextMenuProvider=i,this.options=n,this.options.actionRunner&&(this.actionRunner=this.options.actionRunner)}render(e){this.actionItem=e;let t=o=>{this.element=H(o,W("a.action-label"));let r=[];return typeof this.options.classNames=="string"?r=this.options.classNames.split(/\s+/g).filter(a=>!!a):this.options.classNames&&(r=this.options.classNames),r.find(a=>a==="icon")||r.push("codicon"),this.element.classList.add(...r),this.element.setAttribute("role","button"),this.element.setAttribute("aria-haspopup","true"),this.element.setAttribute("aria-expanded","false"),this.element.title=this._action.label||"",null},i=Array.isArray(this.menuActionsOrProvider),n={contextMenuProvider:this.contextMenuProvider,labelRenderer:t,menuAsChild:this.options.menuAsChild,actions:i?this.menuActionsOrProvider:void 0,actionProvider:i?void 0:this.menuActionsOrProvider};if(this.dropdownMenu=this._register(new Yg(e,n)),this._register(this.dropdownMenu.onDidChangeVisibility(o=>{var r;(r=this.element)===null||r===void 0||r.setAttribute("aria-expanded",`${o}`),this._onDidChangeVisibility.fire(o)})),this.dropdownMenu.menuOptions={actionViewItemProvider:this.options.actionViewItemProvider,actionRunner:this.actionRunner,getKeyBinding:this.options.keybindingProvider,context:this._context},this.options.anchorAlignmentProvider){let o=this;this.dropdownMenu.menuOptions=Object.assign(Object.assign({},this.dropdownMenu.menuOptions),{get anchorAlignment(){return o.options.anchorAlignmentProvider()}})}this.updateEnabled()}setActionContext(e){super.setActionContext(e),this.dropdownMenu&&(this.dropdownMenu.menuOptions?this.dropdownMenu.menuOptions.context=e:this.dropdownMenu.menuOptions={context:e})}updateEnabled(){var e,t;let i=!this.getAction().enabled;(e=this.actionItem)===null||e===void 0||e.classList.toggle("disabled",i),(t=this.element)===null||t===void 0||t.classList.toggle("disabled",i)}};ss();G();Pi();Q();ri();Ee();Be();Ki();Ne();var Qg=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},to=function(s,e){return function(t,i){e(t,i,s)}},p_=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})};function m_(s,e,t,i,n,o,r){let a=s.getActions(e);return VM(a,t,!1,typeof i=="string"?c=>c===i:i,n,o,r),BM(a)}function BM(s){let e=new A;for(let[,t]of s)for(let i of t)e.add(i);return e}function VM(s,e,t,i=a=>a==="navigation",n=Number.MAX_SAFE_INTEGER,o=()=>!1,r=!1){let a,l;Array.isArray(e)?(a=e,l=e):(a=e.primary,l=e.secondary);let c=new Set;for(let[d,h]of s){let p;i(d)?(p=a,p.length>0&&r&&p.push(new qn)):(p=l,p.length>0&&p.push(new qn));for(let m of h){t&&(m=m instanceof mr&&m.alt?m.alt:m);let f=p.push(m);m instanceof Rh&&c.add({group:d,action:m,index:f-1})}}for(let{group:d,action:h,index:p}of c){let m=i(d)?a:l,f=h.actions;(f.length<=1||m.length+f.length-2<=n)&&o(h,d,m.length)&&m.splice(p,1,...f)}if(a!==l&&a.length>n){let d=a.splice(n,a.length-n);l.unshift(...d,new qn)}}var xs=class extends pd{constructor(e,t,i,n,o){super(void 0,e,{icon:!!(e.class||e.item.icon),label:!e.class&&!e.item.icon,draggable:t==null?void 0:t.draggable});this._keybindingService=i,this._notificationService=n,this._contextKeyService=o,this._wantsAltCommand=!1,this._itemClassDispose=this._register(new et),this._altKey=vv.getInstance()}get _menuItemAction(){return this._action}get _commandAction(){return this._wantsAltCommand&&this._menuItemAction.alt||this._menuItemAction}onClick(e){return p_(this,void 0,void 0,function*(){e.preventDefault(),e.stopPropagation();try{yield this.actionRunner.run(this._commandAction,this._context)}catch(t){this._notificationService.error(t)}})}render(e){super.render(e),e.classList.add("menu-entry"),this._updateItemClass(this._menuItemAction.item);let t=!1,i=this._altKey.keyStatus.altKey||(fo||Nl)&&this._altKey.keyStatus.shiftKey,n=()=>{let o=t&&i;o!==this._wantsAltCommand&&(this._wantsAltCommand=o,this.updateLabel(),this.updateTooltip(),this.updateClass())};this._menuItemAction.alt&&this._register(this._altKey.event(o=>{i=o.altKey||(fo||Nl)&&o.shiftKey,n()})),this._register(Ke(e,"mouseleave",o=>{t=!1,n()})),this._register(Ke(e,"mouseenter",o=>{t=!0,n()}))}updateLabel(){this.options.label&&this.label&&(this.label.textContent=this._commandAction.label)}updateTooltip(){if(this.label){let e=this._keybindingService.lookupKeybinding(this._commandAction.id,this._contextKeyService),t=e&&e.getLabel(),i=this._commandAction.tooltip||this._commandAction.label,n=t?u("titleAndKb","{0} ({1})",i,t):i;if(!this._wantsAltCommand&&this._menuItemAction.alt){let o=this._menuItemAction.alt.tooltip||this._menuItemAction.alt.label,r=this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id,this._contextKeyService),a=r&&r.getLabel(),l=a?u("titleAndKb","{0} ({1})",o,a):o;n+=`
[${zx.modifierLabels[sS].altKey}] ${l}`}this.label.title=n}}updateClass(){this.options.icon&&(this._commandAction!==this._menuItemAction?this._menuItemAction.alt&&this._updateItemClass(this._menuItemAction.alt.item):this._menuItemAction.alt&&this._updateItemClass(this._menuItemAction.item))}_updateItemClass(e){var t;this._itemClassDispose.value=void 0;let{element:i,label:n}=this;if(!i||!n)return;let o=this._commandAction.checked&&((t=e.toggled)===null||t===void 0?void 0:t.icon)?e.toggled.icon:e.icon;if(!!o)if(ot.isThemeIcon(o)){let r=ot.asClassNameArray(o);n.classList.add(...r),this._itemClassDispose.value=We(()=>{n.classList.remove(...r)})}else o.light&&n.style.setProperty("--menu-entry-icon-light",Zl(o.light)),o.dark&&n.style.setProperty("--menu-entry-icon-dark",Zl(o.dark)),n.classList.add("icon"),this._itemClassDispose.value=We(()=>{n.classList.remove("icon"),n.style.removeProperty("--menu-entry-icon-light"),n.style.removeProperty("--menu-entry-icon-dark")})}};xs=Qg([to(2,rt),to(3,Ze),to(4,ie)],xs);var Zg=class extends Uu{constructor(e,t,i){var n,o;let r=Object.assign({},t!=null?t:Object.create(null),{menuAsChild:(n=t==null?void 0:t.menuAsChild)!==null&&n!==void 0?n:!1,classNames:(o=t==null?void 0:t.classNames)!==null&&o!==void 0?o:ot.isThemeIcon(e.item.icon)?ot.asClassName(e.item.icon):void 0});super(e,{getActions:()=>e.actions},i,r)}render(e){if(super.render(e),this.element){e.classList.add("menu-entry");let{icon:t}=this._action.item;t&&!ot.isThemeIcon(t)&&(this.element.classList.add("icon"),t.light&&this.element.style.setProperty("--menu-entry-icon-light",Zl(t.light)),t.dark&&this.element.style.setProperty("--menu-entry-icon-dark",Zl(t.dark)))}}};Zg=Qg([to(2,Po)],Zg);var Jg=class extends lu{constructor(e,t,i,n,o,r,a,l){var c,d,h;super(null,e);this._keybindingService=i,this._notificationService=n,this._contextMenuService=o,this._menuService=r,this._instaService=a,this._storageService=l,this._container=null,this._storageKey=`${e.item.submenu._debugName}_lastActionId`;let p,m=l.get(this._storageKey,1);m&&(p=e.actions.find(v=>m===v.id)),p||(p=e.actions[0]),this._defaultAction=this._instaService.createInstance(xs,p,void 0);let f=Object.assign({},t!=null?t:Object.create(null),{menuAsChild:(c=t==null?void 0:t.menuAsChild)!==null&&c!==void 0?c:!0,classNames:(d=t==null?void 0:t.classNames)!==null&&d!==void 0?d:["codicon","codicon-chevron-down"],actionRunner:(h=t==null?void 0:t.actionRunner)!==null&&h!==void 0?h:new Jl});this._dropdown=new Uu(e,e.actions,this._contextMenuService,f),this._dropdown.actionRunner.onDidRun(v=>{v.action instanceof mr&&this.update(v.action)})}update(e){this._storageService.store(this._storageKey,e.id,1,0),this._defaultAction.dispose(),this._defaultAction=this._instaService.createInstance(xs,e,void 0),this._defaultAction.actionRunner=new class extends Jl{runAction(t,i){return p_(this,void 0,void 0,function*(){yield t.run(void 0)})}},this._container&&this._defaultAction.render(Sv(this._container,W(".action-container")))}setActionContext(e){super.setActionContext(e),this._defaultAction.setActionContext(e),this._dropdown.setActionContext(e)}render(e){this._container=e,super.render(this._container),this._container.classList.add("monaco-dropdown-with-default");let t=W(".action-container");this._defaultAction.render(H(this._container,t)),this._register(Ke(t,$i.KEY_DOWN,n=>{let o=new os(n);o.equals(17)&&(this._defaultAction.element.tabIndex=-1,this._dropdown.focus(),o.stopPropagation())}));let i=W(".dropdown-action-container");this._dropdown.render(H(this._container,i)),this._register(Ke(i,$i.KEY_DOWN,n=>{var o;let r=new os(n);r.equals(15)&&(this._defaultAction.element.tabIndex=0,this._dropdown.setFocusable(!1),(o=this._defaultAction.element)===null||o===void 0||o.focus(),r.stopPropagation())}))}focus(e){e?this._dropdown.focus():(this._defaultAction.element.tabIndex=0,this._defaultAction.element.focus())}blur(){this._defaultAction.element.tabIndex=-1,this._dropdown.blur(),this._container.blur()}setFocusable(e){e?this._defaultAction.element.tabIndex=0:(this._defaultAction.element.tabIndex=-1,this._dropdown.setFocusable(!1))}dispose(){this._defaultAction.dispose(),this._dropdown.dispose(),super.dispose()}};Jg=Qg([to(2,rt),to(3,Ze),to(4,Po),to(5,Xn),to(6,le),to(7,li)],Jg);function g_(s,e,t){return e instanceof mr?s.createInstance(xs,e,void 0):e instanceof Fh?e.item.rememberDefaultAction?s.createInstance(Jg,e,t):s.createInstance(Zg,e,t):void 0}Ee();ns();Be();mt();var f_=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},y_=function(s,e){return function(t,i){e(t,i,s)}},tf=Fi("IPeekViewService");Ni(tf,class{constructor(){this._widgets=new Map}addExclusiveWidget(s,e){let t=this._widgets.get(s);t&&(t.listener.dispose(),t.widget.dispose());let i=()=>{let n=this._widgets.get(s);n&&n.widget===e&&(n.listener.dispose(),this._widgets.delete(s))};this._widgets.set(s,{widget:e,listener:e.onDidClose(i)})}});var Ot;(function(s){s.inPeekEditor=new pe("inReferenceSearchEditor",!0,u("inReferenceSearchEditor","Whether the current code editor is embedded inside peek")),s.notInPeekEditor=s.inPeekEditor.toNegated()})(Ot||(Ot={}));var Ad=class{constructor(e,t){e instanceof Mn&&Ot.inPeekEditor.bindTo(t)}dispose(){}};Ad.ID="editor.contrib.referenceController";Ad=f_([y_(1,ie)],Ad);J(Ad.ID,Ad);function b_(s){let e=s.get(Ve).getFocusedCodeEditor();return e instanceof Mn?e.getParentEditor():e}var GM={headerBackgroundColor:we.white,primaryHeadingColor:we.fromHex("#333333"),secondaryHeadingColor:we.fromHex("#6c6c6cb3")},ja=class extends Xg{constructor(e,t,i){super(e,t);this.instantiationService=i,this._onDidClose=new j,this.onDidClose=this._onDidClose.event,la(this.options,GM,!1)}dispose(){this.disposed||(this.disposed=!0,super.dispose(),this._onDidClose.fire(this))}style(e){let t=this.options;e.headerBackgroundColor&&(t.headerBackgroundColor=e.headerBackgroundColor),e.primaryHeadingColor&&(t.primaryHeadingColor=e.primaryHeadingColor),e.secondaryHeadingColor&&(t.secondaryHeadingColor=e.secondaryHeadingColor),super.style(e)}_applyStyles(){super._applyStyles();let e=this.options;this._headElement&&e.headerBackgroundColor&&(this._headElement.style.backgroundColor=e.headerBackgroundColor.toString()),this._primaryHeading&&e.primaryHeadingColor&&(this._primaryHeading.style.color=e.primaryHeadingColor.toString()),this._secondaryHeading&&e.secondaryHeadingColor&&(this._secondaryHeading.style.color=e.secondaryHeadingColor.toString()),this._bodyElement&&e.frameColor&&(this._bodyElement.style.borderColor=e.frameColor.toString())}_fillContainer(e){this.setCssClass("peekview-widget"),this._headElement=W(".head"),this._bodyElement=W(".body"),this._fillHead(this._headElement),this._fillBody(this._bodyElement),e.appendChild(this._headElement),e.appendChild(this._bodyElement)}_fillHead(e,t){let i=W(".peekview-title");this.options.supportOnTitleClick&&(i.classList.add("clickable"),zi(i,"click",r=>this._onTitleClick(r))),H(this._headElement,i),this._fillTitleIcon(i),this._primaryHeading=W("span.filename"),this._secondaryHeading=W("span.dirname"),this._metaHeading=W("span.meta"),H(i,this._primaryHeading,this._secondaryHeading,this._metaHeading);let n=W(".peekview-actions");H(this._headElement,n);let o=this._getActionBarOptions();this._actionbarWidget=new hs(n,o),this._disposables.add(this._actionbarWidget),t||this._actionbarWidget.push(new _o("peekview.close",u("label.close","Close"),K.close.classNames,!0,()=>(this.dispose(),Promise.resolve())),{label:!1,icon:!0})}_fillTitleIcon(e){}_getActionBarOptions(){return{actionViewItemProvider:g_.bind(void 0,this.instantiationService),orientation:0}}_onTitleClick(e){}setTitle(e,t){this._primaryHeading&&this._secondaryHeading&&(this._primaryHeading.innerText=e,this._primaryHeading.setAttribute("title",e),t?this._secondaryHeading.innerText=t:_i(this._secondaryHeading))}setMetaTitle(e){this._metaHeading&&(e?(this._metaHeading.innerText=e,oi(this._metaHeading)):Vt(this._metaHeading))}_doLayout(e,t){if(!this._isShowing&&e<0){this.dispose();return}let i=Math.ceil(this.editor.getOption(59)*1.2),n=Math.round(e-(i+2));this._doLayoutHead(i,t),this._doLayoutBody(n,t)}_doLayoutHead(e,t){this._headElement&&(this._headElement.style.height=`${e}px`,this._headElement.style.lineHeight=this._headElement.style.height)}_doLayoutBody(e,t){this._bodyElement&&(this._bodyElement.style.height=`${e}px`)}};ja=f_([y_(2,le)],ja);var S_=q("peekViewTitle.background",{dark:si(ls,.1),light:si(ls,.1),hc:null},u("peekViewTitleBackground","Background color of the peek view title area.")),$u=q("peekViewTitleLabel.foreground",{dark:we.white,light:we.black,hc:we.white},u("peekViewTitleForeground","Color of the peek view title.")),Ku=q("peekViewTitleDescription.foreground",{dark:"#ccccccb3",light:"#616161",hc:"#FFFFFF99"},u("peekViewTitleInfoForeground","Color of the peek view title info.")),v_=q("peekView.border",{dark:ls,light:ls,hc:dn},u("peekViewBorder","Color of the peek view borders and arrow.")),x_=q("peekViewResult.background",{dark:"#252526",light:"#F3F3F3",hc:we.black},u("peekViewResultsBackground","Background color of the peek view result list.")),nV=q("peekViewResult.lineForeground",{dark:"#bbbbbb",light:"#646465",hc:we.white},u("peekViewResultsMatchForeground","Foreground color for line nodes in the peek view result list.")),oV=q("peekViewResult.fileForeground",{dark:we.white,light:"#1E1E1E",hc:we.white},u("peekViewResultsFileForeground","Foreground color for file nodes in the peek view result list.")),rV=q("peekViewResult.selectionBackground",{dark:"#3399ff33",light:"#3399ff33",hc:null},u("peekViewResultsSelectionBackground","Background color of the selected entry in the peek view result list.")),sV=q("peekViewResult.selectionForeground",{dark:we.white,light:"#6C6C6C",hc:we.white},u("peekViewResultsSelectionForeground","Foreground color of the selected entry in the peek view result list.")),ef=q("peekViewEditor.background",{dark:"#001F33",light:"#F2F8FC",hc:we.black},u("peekViewEditorBackground","Background color of the peek view editor.")),aV=q("peekViewEditorGutter.background",{dark:ef,light:ef,hc:ef},u("peekViewEditorGutterBackground","Background color of the gutter in the peek view editor.")),lV=q("peekViewResult.matchHighlightBackground",{dark:"#ea5c004d",light:"#ea5c004d",hc:null},u("peekViewResultsMatchHighlight","Match highlight color in the peek view result list.")),dV=q("peekViewEditor.matchHighlightBackground",{dark:"#ff8f0099",light:"#f5d802de",hc:null},u("peekViewEditorMatchHighlight","Match highlight color in the peek view editor.")),cV=q("peekViewEditor.matchHighlightBorder",{dark:null,light:null,hc:as},u("peekViewEditorMatchHighlightBorder","Match highlight border in the peek view editor."));Q();Ee();mt();Ne();Kl();Ln();ke();yo();Pi();qt();Xt();bd();gg();ue();Ci();tt();ee();He();Re();ke();Le();yo();G();Ci();tt();ee();Q();wt();kn();Ee();Be();Ql();Le();De();G();ga();Hi();Ye();ee();Q();var UM=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},pn=class{constructor(e,t,i,n){this.isProviderFirst=e,this.parent=t,this.link=i,this._rangeCallback=n,this.id=yu.nextId()}get uri(){return this.link.uri}get range(){var e,t;return(t=(e=this._range)!==null&&e!==void 0?e:this.link.targetSelectionRange)!==null&&t!==void 0?t:this.link.range}set range(e){this._range=e,this._rangeCallback(this)}get ariaMessage(){var e;let t=(e=this.parent.getPreview(this))===null||e===void 0?void 0:e.preview(this.range);return t?u({key:"aria.oneReference.preview",comment:["Placeholders are: 0: filename, 1:line number, 2: column number, 3: preview snippet of source code"]},"symbol in {0} on line {1} at column {2}, {3}",Jt(this.uri),this.range.startLineNumber,this.range.startColumn,t.value):u("aria.oneReference","symbol in {0} on line {1} at column {2}",Jt(this.uri),this.range.startLineNumber,this.range.startColumn)}},C_=class{constructor(e){this._modelReference=e}dispose(){this._modelReference.dispose()}preview(e,t=8){let i=this._modelReference.object.textEditorModel;if(!i)return;let{startLineNumber:n,startColumn:o,endLineNumber:r,endColumn:a}=e,l=i.getWordUntilPosition({lineNumber:n,column:o-t}),c=new b(n,l.startColumn,n,o),d=new b(r,a,r,1073741824),h=i.getValueInRange(c).replace(/^\s+/,""),p=i.getValueInRange(e),m=i.getValueInRange(d).replace(/\s+$/,"");return{value:h+p+m,highlight:{start:h.length,end:h.length+p.length}}}},Ir=class{constructor(e,t){this.parent=e,this.uri=t,this.children=[],this._previews=new OS}dispose(){xt(this._previews.values()),this._previews.clear()}getPreview(e){return this._previews.get(e.uri)}get ariaMessage(){let e=this.children.length;return e===1?u("aria.fileReferences.1","1 symbol in {0}, full path {1}",Jt(this.uri),this.uri.fsPath):u("aria.fileReferences.N","{0} symbols in {1}, full path {2}",e,Jt(this.uri),this.uri.fsPath)}resolve(e){return UM(this,void 0,void 0,function*(){if(this._previews.size!==0)return this;for(let t of this.children)if(!this._previews.has(t.uri))try{let i=yield e.createModelReference(t.uri);this._previews.set(t.uri,new C_(i))}catch(i){de(i)}return this})}},Ut=class{constructor(e,t){this.groups=[],this.references=[],this._onDidChangeReferenceRange=new j,this.onDidChangeReferenceRange=this._onDidChangeReferenceRange.event,this._links=e,this._title=t;let[i]=e;e.sort(Ut._compareReferences);let n;for(let o of e)if((!n||!eg.isEqual(n.uri,o.uri,!0))&&(n=new Ir(this,o.uri),this.groups.push(n)),n.children.length===0||Ut._compareReferences(o,n.children[n.children.length-1])!==0){let r=new pn(i===o,n,o,a=>this._onDidChangeReferenceRange.fire(a));this.references.push(r),n.children.push(r)}}dispose(){xt(this.groups),this._onDidChangeReferenceRange.dispose(),this.groups.length=0}clone(){return new Ut(this._links,this._title)}get title(){return this._title}get isEmpty(){return this.groups.length===0}get ariaMessage(){return this.isEmpty?u("aria.result.0","No results found"):this.references.length===1?u("aria.result.1","Found 1 symbol in {0}",this.references[0].uri.fsPath):this.groups.length===1?u("aria.result.n1","Found {0} symbols in {1}",this.references.length,this.groups[0].uri.fsPath):u("aria.result.nm","Found {0} symbols in {1} files",this.references.length,this.groups.length)}nextOrPreviousReference(e,t){let{parent:i}=e,n=i.children.indexOf(e),o=i.children.length,r=i.parent.groups.length;return r===1||t&&n+1<o||!t&&n>0?(t?n=(n+1)%o:n=(n+o-1)%o,i.children[n]):(n=i.parent.groups.indexOf(i),t?(n=(n+1)%r,i.parent.groups[n].children[0]):(n=(n+r-1)%r,i.parent.groups[n].children[i.parent.groups[n].children.length-1]))}nearestReference(e,t){let i=this.references.map((n,o)=>({idx:o,prefixLen:dr(n.uri.toString(),e.toString()),offsetDist:Math.abs(n.range.startLineNumber-t.lineNumber)*100+Math.abs(n.range.startColumn-t.column)})).sort((n,o)=>n.prefixLen>o.prefixLen?-1:n.prefixLen<o.prefixLen?1:n.offsetDist<o.offsetDist?-1:n.offsetDist>o.offsetDist?1:0)[0];if(i)return this.references[i.idx]}referenceAt(e,t){for(let i of this.references)if(i.uri.toString()===e.toString()&&b.containsPosition(i.range,t))return i}firstReference(){for(let e of this.references)if(e.isProviderFirst)return e;return this.references[0]}static _compareReferences(e,t){return eg.compare(e.uri,t.uri)||b.compareRangesUsingStarts(e.range,t.range)}};Ae();Zn();De();G();Yl();Hi();ee();jt();sn();ig();rn();Co();Ae();jL();Yl();Pi();Hi();Xt();function qu(s){if(!s)return;typeof s=="string"&&(s=_e.file(s));let e=Jt(s)||(s.scheme===Ct.file?s.fsPath:s.path);return fo&&FS(e)?Xu(e):e}function Xu(s,e){return NS(s,e)?s.charAt(0).toUpperCase()+s.slice(1):s}G();Hi();Co();Q();Be();Ki();Ne();var Ju=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Fd=function(s,e){return function(t,i){e(t,i,s)}},Yu=class{constructor(e){this._resolverService=e}hasChildren(e){return e instanceof Ut||e instanceof Ir}getChildren(e){if(e instanceof Ut)return e.groups;if(e instanceof Ir)return e.resolve(this._resolverService).then(t=>t.children);throw new Error("bad tree")}};Yu=Ju([Fd(0,Gt)],Yu);var of=class{getHeight(){return 23}getTemplateId(e){return e instanceof Ir?Ua.id:Cs.id}},Zu=class{constructor(e){this._keybindingService=e}getKeyboardNavigationLabel(e){var t;if(e instanceof pn){let i=(t=e.parent.getPreview(e))===null||t===void 0?void 0:t.preview(e.range);if(i)return i.value}return Jt(e.uri)}};Zu=Ju([Fd(0,rt)],Zu);var rf=class{getId(e){return e instanceof pn?e.id:e.uri}},nf=class extends z{constructor(e,t,i){super();this._uriLabel=t;let n=document.createElement("div");n.classList.add("reference-file"),this.file=this._register(new vu(n,{supportHighlights:!0})),this.badge=new sC(H(n,W(".count"))),this._register(Zx(this.badge,i)),e.appendChild(n)}set(e,t){let i=Da(e.uri);this.file.setLabel(qu(e.uri),this._uriLabel.getUriLabel(i,{relative:!0}),{title:this._uriLabel.getUriLabel(e.uri),matches:t});let n=e.children.length;this.badge.setCount(n),n>1?this.badge.setTitleFormat(u("referencesCount","{0} references",n)):this.badge.setTitleFormat(u("referenceCount","{0} reference",n))}};nf=Ju([Fd(1,xr),Fd(2,Nt)],nf);var Ua=class __{constructor(e){this._instantiationService=e,this.templateId=__.id}renderTemplate(e){return this._instantiationService.createInstance(nf,e)}renderElement(e,t,i){i.set(e.element,ms(e.filterData))}disposeTemplate(e){e.dispose()}};Ua.id="FileReferencesRenderer";Ua=Ju([Fd(0,le)],Ua);var w_=class{constructor(e){this.label=new hC(e)}set(e,t){var i;let n=(i=e.parent.getPreview(e))===null||i===void 0?void 0:i.preview(e.range);if(!n||!n.value)this.label.set(`${Jt(e.uri)}:${e.range.startLineNumber+1}:${e.range.startColumn+1}`);else{let{value:o,highlight:r}=n;t&&!gs.isDefault(t)?(this.label.element.classList.toggle("referenceMatch",!1),this.label.set(o,ms(t))):(this.label.element.classList.toggle("referenceMatch",!0),this.label.set(o,[r]))}}},Cs=class{constructor(){this.templateId=Cs.id}renderTemplate(e){return new w_(e)}renderElement(e,t,i){i.set(e.element,e.filterData)}disposeTemplate(){}};Cs.id="OneReferenceRenderer";var sf=class{getWidgetAriaLabel(){return u("treeAriaLabel","References")}getAriaLabel(e){return e.ariaMessage}};Q();Be();Ki();Ne();dP();var $M=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},No=function(s,e){return function(t,i){e(t,i,s)}},T_=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Nd=class{constructor(e,t){this._editor=e,this._model=t,this._decorations=new Map,this._decorationIgnoreSet=new Set,this._callOnDispose=new A,this._callOnModelChange=new A,this._callOnDispose.add(this._editor.onDidChangeModel(()=>this._onModelChanged())),this._onModelChanged()}dispose(){this._callOnModelChange.dispose(),this._callOnDispose.dispose(),this.removeDecorations()}_onModelChanged(){this._callOnModelChange.clear();let e=this._editor.getModel();if(!!e){for(let t of this._model.references)if(t.uri.toString()===e.uri.toString()){this._addDecorations(t.parent);return}}}_addDecorations(e){if(!this._editor.hasModel())return;this._callOnModelChange.add(this._editor.getModel().onDidChangeDecorations(()=>this._onDecorationChanged()));let t=[],i=[];for(let o=0,r=e.children.length;o<r;o++){let a=e.children[o];this._decorationIgnoreSet.has(a.id)||a.uri.toString()===this._editor.getModel().uri.toString()&&(t.push({range:a.range,options:Nd.DecorationOptions}),i.push(o))}let n=this._editor.deltaDecorations([],t);for(let o=0;o<n.length;o++)this._decorations.set(n[o],e.children[i[o]])}_onDecorationChanged(){let e=[],t=this._editor.getModel();if(!!t){for(let[i,n]of this._decorations){let o=t.getDecorationRange(i);if(!o)continue;let r=!1;if(!b.equalsRange(o,n.range)){if(b.spansMultipleLines(o))r=!0;else{let a=n.range.endColumn-n.range.startColumn,l=o.endColumn-o.startColumn;a!==l&&(r=!0)}r?(this._decorationIgnoreSet.add(n.id),e.push(i)):n.range=o}}for(let i=0,n=e.length;i<n;i++)this._decorations.delete(e[i]);this._editor.deltaDecorations(e,[])}}removeDecorations(){this._editor.deltaDecorations([...this._decorations.keys()],[]),this._decorations.clear()}};Nd.DecorationOptions=xe.register({description:"reference-decoration",stickiness:1,className:"reference-decoration"});var af=class{constructor(){this.ratio=.7,this.heightInLines=18}static fromJSON(e){let t,i;try{let n=JSON.parse(e);t=n.ratio,i=n.heightInLines}catch(n){}return{ratio:t||.7,heightInLines:i||18}}},E_=class extends gC{},Qu=class extends ja{constructor(e,t,i,n,o,r,a,l,c,d,h,p){super(e,{showFrame:!1,showArrow:!0,isResizeable:!0,isAccessible:!0,supportOnTitleClick:!0},r);this._defaultTreeKeyboardSupport=t,this.layoutData=i,this._textModelResolverService=o,this._instantiationService=r,this._peekViewService=a,this._uriLabel=l,this._undoRedoService=c,this._keybindingService=d,this._languageService=h,this._languageConfigurationService=p,this._disposeOnNewModel=new A,this._callOnDispose=new A,this._onDidSelectReference=new j,this.onDidSelectReference=this._onDidSelectReference.event,this._dim=new lt(0,0),this._applyTheme(n.getColorTheme()),this._callOnDispose.add(n.onDidColorThemeChange(this._applyTheme.bind(this))),this._peekViewService.addExclusiveWidget(e,this),this.create()}dispose(){this.setModel(void 0),this._callOnDispose.dispose(),this._disposeOnNewModel.dispose(),xt(this._preview),xt(this._previewNotAvailableMessage),xt(this._tree),xt(this._previewModelReference),this._splitView.dispose(),super.dispose()}_applyTheme(e){let t=e.getColor(v_)||we.transparent;this.style({arrowColor:t,frameColor:t,headerBackgroundColor:e.getColor(S_)||we.transparent,primaryHeadingColor:e.getColor($u),secondaryHeadingColor:e.getColor(Ku)})}show(e){this.editor.revealRangeInCenterIfOutsideViewport(e,0),super.show(e,this.layoutData.heightInLines||18)}focusOnReferenceTree(){this._tree.domFocus()}focusOnPreviewEditor(){this._preview.focus()}isPreviewEditorFocused(){return this._preview.hasTextFocus()}_onTitleClick(e){this._preview&&this._preview.getModel()&&this._onDidSelectReference.fire({element:this._getFocusedReference(),kind:e.ctrlKey||e.metaKey||e.altKey?"side":"open",source:"title"})}_fillBody(e){this.setCssClass("reference-zone-widget"),this._messageContainer=H(e,W("div.messages")),Vt(this._messageContainer),this._splitView=new mC(e,{orientation:1}),this._previewContainer=H(e,W("div.preview.inline"));let t={scrollBeyondLastLine:!1,scrollbar:{verticalScrollbarSize:14,horizontal:"auto",useShadows:!0,verticalHasArrows:!1,horizontalHasArrows:!1,alwaysConsumeMouseWheel:!1},overviewRulerLanes:2,fixedOverflowWidgets:!0,minimap:{enabled:!1}};this._preview=this._instantiationService.createInstance(Mn,this._previewContainer,t,this.editor),Vt(this._previewContainer),this._previewNotAvailableMessage=new Ra(u("missingPreviewMessage","no preview available"),za,Ra.DEFAULT_CREATION_OPTIONS,null,this._undoRedoService,this._languageService,this._languageConfigurationService),this._treeContainer=H(e,W("div.ref-tree.inline"));let i={keyboardSupport:this._defaultTreeKeyboardSupport,accessibilityProvider:new sf,keyboardNavigationLabelProvider:this._instantiationService.createInstance(Zu),identityProvider:new rf,openOnSingleClick:!0,selectionNavigation:!0,overrideStyles:{listBackground:x_}};this._defaultTreeKeyboardSupport&&this._callOnDispose.add(zi(this._treeContainer,"keydown",o=>{o.equals(9)&&(this._keybindingService.dispatchEvent(o,o.target),o.stopPropagation())},!0)),this._tree=this._instantiationService.createInstance(E_,"ReferencesWidget",this._treeContainer,new of,[this._instantiationService.createInstance(Ua),this._instantiationService.createInstance(Cs)],this._instantiationService.createInstance(Yu),i),this._splitView.addView({onDidChange:ht.None,element:this._previewContainer,minimumSize:200,maximumSize:Number.MAX_VALUE,layout:o=>{this._preview.layout({height:this._dim.height,width:o})}},cg.Distribute),this._splitView.addView({onDidChange:ht.None,element:this._treeContainer,minimumSize:100,maximumSize:Number.MAX_VALUE,layout:o=>{this._treeContainer.style.height=`${this._dim.height}px`,this._treeContainer.style.width=`${o}px`,this._tree.layout(this._dim.height,o)}},cg.Distribute),this._disposables.add(this._splitView.onDidSashChange(()=>{this._dim.width&&(this.layoutData.ratio=this._splitView.getViewSize(0)/this._dim.width)},void 0));let n=(o,r)=>{o instanceof pn&&(r==="show"&&this._revealReference(o,!1),this._onDidSelectReference.fire({element:o,kind:r,source:"tree"}))};this._tree.onDidOpen(o=>{o.sideBySide?n(o.element,"side"):o.editorOptions.pinned?n(o.element,"goto"):n(o.element,"show")}),Vt(this._treeContainer)}_onWidth(e){this._dim&&this._doLayoutBody(this._dim.height,e)}_doLayoutBody(e,t){super._doLayoutBody(e,t),this._dim=new lt(t,e),this.layoutData.heightInLines=this._viewZone?this._viewZone.heightInLines:this.layoutData.heightInLines,this._splitView.layout(t),this._splitView.resizeView(0,t*this.layoutData.ratio)}setSelection(e){return this._revealReference(e,!0).then(()=>{!this._model||(this._tree.setSelection([e]),this._tree.setFocus([e]))})}setModel(e){return this._disposeOnNewModel.clear(),this._model=e,this._model?this._onNewModel():Promise.resolve()}_onNewModel(){return this._model?this._model.isEmpty?(this.setTitle(""),this._messageContainer.innerText=u("noResults","No results"),oi(this._messageContainer),Promise.resolve(void 0)):(Vt(this._messageContainer),this._decorationsManager=new Nd(this._preview,this._model),this._disposeOnNewModel.add(this._decorationsManager),this._disposeOnNewModel.add(this._model.onDidChangeReferenceRange(e=>this._tree.rerender(e))),this._disposeOnNewModel.add(this._preview.onMouseDown(e=>{let{event:t,target:i}=e;if(t.detail!==2)return;let n=this._getFocusedReference();!n||this._onDidSelectReference.fire({element:{uri:n.uri,range:i.range},kind:t.ctrlKey||t.metaKey||t.altKey?"side":"open",source:"editor"})})),this.container.classList.add("results-loaded"),oi(this._treeContainer),oi(this._previewContainer),this._splitView.layout(this._dim.width),this.focusOnReferenceTree(),this._tree.setInput(this._model.groups.length===1?this._model.groups[0]:this._model)):Promise.resolve(void 0)}_getFocusedReference(){let[e]=this._tree.getFocus();if(e instanceof pn)return e;if(e instanceof Ir&&e.children.length>0)return e.children[0]}revealReference(e){return T_(this,void 0,void 0,function*(){yield this._revealReference(e,!1),this._onDidSelectReference.fire({element:e,kind:"goto",source:"tree"})})}_revealReference(e,t){return T_(this,void 0,void 0,function*(){if(this._revealedReference===e)return;this._revealedReference=e,e.uri.scheme!==Ct.inMemory?this.setTitle(iu(e.uri),this._uriLabel.getUriLabel(Da(e.uri))):this.setTitle(u("peekView.alternateTitle","References"));let i=this._textModelResolverService.createModelReference(e.uri);this._tree.getInput()===e.parent?this._tree.reveal(e):(t&&this._tree.reveal(e.parent),yield this._tree.expand(e.parent),this._tree.reveal(e));let n=yield i;if(!this._model){n.dispose();return}xt(this._previewModelReference);let o=n.object;if(o){let r=this._preview.getModel()===o.textEditorModel?0:1,a=b.lift(e.range).collapseToStart();this._previewModelReference=n,this._preview.setModel(o.textEditorModel),this._preview.setSelection(a),this._preview.revealRangeInCenter(a,r)}else this._preview.setModel(this._previewNotAvailableMessage),n.dispose()})}};Qu=$M([No(3,Nt),No(4,Gt),No(5,le),No(6,tf),No(7,xr),No(8,Lx),No(9,rt),No(10,ft),No(11,Dt)],Qu);var KM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},$a=function(s,e){return function(t,i){e(t,i,s)}},I_=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},_s=new pe("referenceSearchVisible",!1,u("referenceSearchVisible","Whether reference peek is visible, like 'Peek References' or 'Peek Definition'")),io=class lf{constructor(e,t,i,n,o,r,a,l){this._defaultTreeKeyboardSupport=e,this._editor=t,this._editorService=n,this._notificationService=o,this._instantiationService=r,this._storageService=a,this._configurationService=l,this._disposables=new A,this._requestIdPool=0,this._ignoreModelChangeEvent=!1,this._referenceSearchVisible=_s.bindTo(i)}static get(e){return e.getContribution(lf.ID)}dispose(){var e,t;this._referenceSearchVisible.reset(),this._disposables.dispose(),(e=this._widget)===null||e===void 0||e.dispose(),(t=this._model)===null||t===void 0||t.dispose(),this._widget=void 0,this._model=void 0}toggleWidget(e,t,i){let n;if(this._widget&&(n=this._widget.position),this.closeWidget(),!!n&&e.containsPosition(n))return;this._peekMode=i,this._referenceSearchVisible.set(!0),this._disposables.add(this._editor.onDidChangeModelLanguage(()=>{this.closeWidget()})),this._disposables.add(this._editor.onDidChangeModel(()=>{this._ignoreModelChangeEvent||this.closeWidget()}));let o="peekViewLayout",r=af.fromJSON(this._storageService.get(o,0,"{}"));this._widget=this._instantiationService.createInstance(Qu,this._editor,this._defaultTreeKeyboardSupport,r),this._widget.setTitle(u("labelLoading","Loading...")),this._widget.show(e),this._disposables.add(this._widget.onDidClose(()=>{t.cancel(),this._widget&&(this._storageService.store(o,JSON.stringify(this._widget.layoutData),0,1),this._widget=void 0),this.closeWidget()})),this._disposables.add(this._widget.onDidSelectReference(l=>{let{element:c,kind:d}=l;if(!!c)switch(d){case"open":(l.source!=="editor"||!this._configurationService.getValue("editor.stablePeek"))&&this.openReference(c,!1,!1);break;case"side":this.openReference(c,!0,!1);break;case"goto":i?this._gotoReference(c):this.openReference(c,!1,!0);break}}));let a=++this._requestIdPool;t.then(l=>{var c;if(a!==this._requestIdPool||!this._widget){l.dispose();return}return(c=this._model)===null||c===void 0||c.dispose(),this._model=l,this._widget.setModel(this._model).then(()=>{if(this._widget&&this._model&&this._editor.hasModel()){this._model.isEmpty?this._widget.setMetaTitle(""):this._widget.setMetaTitle(u("metaTitle.N","{0} ({1})",this._model.title,this._model.references.length));let d=this._editor.getModel().uri,h=new U(e.startLineNumber,e.startColumn),p=this._model.nearestReference(d,h);if(p)return this._widget.setSelection(p).then(()=>{this._widget&&this._editor.getOption(77)==="editor"&&this._widget.focusOnPreviewEditor()})}})},l=>{this._notificationService.error(l)})}changeFocusBetweenPreviewAndReferences(){!this._widget||(this._widget.isPreviewEditorFocused()?this._widget.focusOnReferenceTree():this._widget.focusOnPreviewEditor())}goToNextOrPreviousReference(e){return I_(this,void 0,void 0,function*(){if(!this._editor.hasModel()||!this._model||!this._widget)return;let t=this._widget.position;if(!t)return;let i=this._model.nearestReference(this._editor.getModel().uri,t);if(!i)return;let n=this._model.nextOrPreviousReference(i,e),o=this._editor.hasTextFocus(),r=this._widget.isPreviewEditorFocused();yield this._widget.setSelection(n),yield this._gotoReference(n),o?this._editor.focus():this._widget&&r&&this._widget.focusOnPreviewEditor()})}revealReference(e){return I_(this,void 0,void 0,function*(){!this._editor.hasModel()||!this._model||!this._widget||(yield this._widget.revealReference(e))})}closeWidget(e=!0){var t,i;(t=this._widget)===null||t===void 0||t.dispose(),(i=this._model)===null||i===void 0||i.dispose(),this._referenceSearchVisible.reset(),this._disposables.clear(),this._widget=void 0,this._model=void 0,e&&this._editor.focus(),this._requestIdPool+=1}_gotoReference(e){this._widget&&this._widget.hide(),this._ignoreModelChangeEvent=!0;let t=b.lift(e.range).collapseToStart();return this._editorService.openCodeEditor({resource:e.uri,options:{selection:t}},this._editor).then(i=>{var n;if(this._ignoreModelChangeEvent=!1,!i||!this._widget){this.closeWidget();return}if(this._editor===i)this._widget.show(t),this._widget.focusOnReferenceTree();else{let o=lf.get(i),r=this._model.clone();this.closeWidget(),i.focus(),o==null||o.toggleWidget(t,Oe(a=>Promise.resolve(r)),(n=this._peekMode)!==null&&n!==void 0?n:!1)}},i=>{this._ignoreModelChangeEvent=!1,de(i)})}openReference(e,t,i){t||this.closeWidget();let{uri:n,range:o}=e;this._editorService.openCodeEditor({resource:n,options:{selection:o,pinned:i}},this._editor,t)}};io.ID="editor.contrib.referencesController";io=KM([$a(2,ie),$a(3,Ve),$a(4,Ze),$a(5,le),$a(6,li),$a(7,it)],io);function ws(s,e){let t=b_(s);if(!t)return;let i=io.get(t);i&&e(i)}Zt.registerCommandAndKeybindingRule({id:"togglePeekWidgetFocus",weight:100,primary:Xe(2089,60),when:O.or(_s,Ot.inPeekEditor),handler(s){ws(s,e=>{e.changeFocusBetweenPreviewAndReferences()})}});Zt.registerCommandAndKeybindingRule({id:"goToNextReference",weight:100-10,primary:62,secondary:[70],when:O.or(_s,Ot.inPeekEditor),handler(s){ws(s,e=>{e.goToNextOrPreviousReference(!0)})}});Zt.registerCommandAndKeybindingRule({id:"goToPreviousReference",weight:100-10,primary:1086,secondary:[1094],when:O.or(_s,Ot.inPeekEditor),handler(s){ws(s,e=>{e.goToNextOrPreviousReference(!1)})}});Pe.registerCommandAlias("goToNextReferenceFromEmbeddedEditor","goToNextReference");Pe.registerCommandAlias("goToPreviousReferenceFromEmbeddedEditor","goToPreviousReference");Pe.registerCommandAlias("closeReferenceSearchEditor","closeReferenceSearch");Pe.registerCommand("closeReferenceSearch",s=>ws(s,e=>e.closeWidget()));Zt.registerKeybindingRule({id:"closeReferenceSearch",weight:100-101,primary:9,secondary:[1033],when:O.and(Ot.inPeekEditor,O.not("config.editor.stablePeek"))});Zt.registerKeybindingRule({id:"closeReferenceSearch",weight:200+50,primary:9,secondary:[1033],when:O.and(_s,O.not("config.editor.stablePeek"))});Zt.registerCommandAndKeybindingRule({id:"revealReference",weight:200,primary:3,mac:{primary:3,secondary:[2066]},when:O.and(_s,hg,ug.negate(),pg.negate()),handler(s){var e;let i=(e=s.get(xu).lastFocusedList)===null||e===void 0?void 0:e.getFocus();Array.isArray(i)&&i[0]instanceof pn&&ws(s,n=>n.revealReference(i[0]))}});Zt.registerCommandAndKeybindingRule({id:"openReferenceToSide",weight:100,primary:2051,mac:{primary:259},when:O.and(_s,hg,ug.negate(),pg.negate()),handler(s){var e;let i=(e=s.get(xu).lastFocusedList)===null||e===void 0?void 0:e.getFocus();Array.isArray(i)&&i[0]instanceof pn&&ws(s,n=>n.openReference(i[0],!0,!0))}});Pe.registerCommand("openReference",s=>{var e;let i=(e=s.get(xu).lastFocusedList)===null||e===void 0?void 0:e.getFocus();Array.isArray(i)&&i[0]instanceof pn&&ws(s,n=>n.openReference(i[0],!1,!0))});De();G();Hi();ue();Ci();ee();Q();Ee();ns();Be();Ki();Ql();var k_=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},zd=function(s,e){return function(t,i){e(t,i,s)}},hf=new pe("hasSymbols",!1,u("hasSymbols","Whether there are symbol locations that can be navigated via keyboard-only.")),Od=Fi("ISymbolNavigationService"),df=class{constructor(e,t,i,n){this._editorService=t,this._notificationService=i,this._keybindingService=n,this._currentModel=void 0,this._currentIdx=-1,this._ignoreEditorChange=!1,this._ctxHasSymbols=hf.bindTo(e)}reset(){var e,t;this._ctxHasSymbols.reset(),(e=this._currentState)===null||e===void 0||e.dispose(),(t=this._currentMessage)===null||t===void 0||t.dispose(),this._currentModel=void 0,this._currentIdx=-1}put(e){let t=e.parent.parent;if(t.references.length<=1){this.reset();return}this._currentModel=t,this._currentIdx=t.references.indexOf(e),this._ctxHasSymbols.set(!0),this._showMessage();let i=new cf(this._editorService),n=i.onDidChange(o=>{if(this._ignoreEditorChange)return;let r=this._editorService.getActiveCodeEditor();if(!r)return;let a=r.getModel(),l=r.getPosition();if(!a||!l)return;let c=!1,d=!1;for(let h of t.references)if(tu(h.uri,a.uri))c=!0,d=d||b.containsPosition(h.range,l);else if(c)break;(!c||!d)&&this.reset()});this._currentState=Em(i,n)}revealNext(e){if(!this._currentModel)return Promise.resolve();this._currentIdx+=1,this._currentIdx%=this._currentModel.references.length;let t=this._currentModel.references[this._currentIdx];return this._showMessage(),this._ignoreEditorChange=!0,this._editorService.openCodeEditor({resource:t.uri,options:{selection:b.collapseToStart(t.range),selectionRevealType:3}},e).finally(()=>{this._ignoreEditorChange=!1})}_showMessage(){var e;(e=this._currentMessage)===null||e===void 0||e.dispose();let t=this._keybindingService.lookupKeybinding("editor.gotoNextSymbolFromResult"),i=t?u("location.kb","Symbol {0} of {1}, {2} for next",this._currentIdx+1,this._currentModel.references.length,t.getLabel()):u("location","Symbol {0} of {1}",this._currentIdx+1,this._currentModel.references.length);this._currentMessage=this._notificationService.status(i)}};df=k_([zd(0,ie),zd(1,Ve),zd(2,Ze),zd(3,rt)],df);Ni(Od,df,!0);$(new class extends ct{constructor(){super({id:"editor.gotoNextSymbolFromResult",precondition:hf,kbOpts:{weight:100,primary:70}})}runEditorCommand(s,e){return s.get(Od).revealNext(e)}});Zt.registerCommandAndKeybindingRule({id:"editor.gotoNextSymbolFromResult.cancel",weight:100,when:hf,primary:9,handler(s){s.get(Od).reset()}});var cf=class{constructor(e){this._listener=new Map,this._disposables=new A,this._onDidChange=new j,this.onDidChange=this._onDidChange.event,this._disposables.add(e.onCodeEditorRemove(this._onDidRemoveEditor,this)),this._disposables.add(e.onCodeEditorAdd(this._onDidAddEditor,this)),e.listCodeEditors().forEach(this._onDidAddEditor,this)}dispose(){this._disposables.dispose(),this._onDidChange.dispose(),xt(this._listener.values())}_onDidAddEditor(e){this._listener.set(e,Em(e.onDidChangeCursorPosition(t=>this._onDidChange.fire({editor:e})),e.onDidChangeModelContent(t=>this._onDidChange.fire({editor:e}))))}_onDidRemoveEditor(e){var t;(t=this._listener.get(e))===null||t===void 0||t.dispose(),this._listener.delete(e)}};cf=k_([zd(0,Ve)],cf);Q();ri();wt();Ee();Be();ps();ut();Le();ue();Re();var L_=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})};function Hd(s,e,t,i){let o=t.ordered(s).map(r=>Promise.resolve(i(r,s,e)).then(void 0,a=>{Ue(a)}));return Promise.all(o).then(r=>{let a=[];for(let l of r)Array.isArray(l)?a.push(...l):l&&a.push(l);return a})}function Wd(s,e,t){return Hd(s,e,Eh,(i,n,o)=>i.provideDefinition(n,o,t))}function uf(s,e,t){return Hd(s,e,jS,(i,n,o)=>i.provideDeclaration(n,o,t))}function pf(s,e,t){return Hd(s,e,US,(i,n,o)=>i.provideImplementation(n,o,t))}function mf(s,e,t){return Hd(s,e,$S,(i,n,o)=>i.provideTypeDefinition(n,o,t))}function Bd(s,e,t,i){return Hd(s,e,VS,(n,o,r)=>L_(this,void 0,void 0,function*(){let a=yield n.provideReferences(o,r,{includeDeclaration:!0},i);if(!t||!a||a.length!==2)return a;let l=yield n.provideReferences(o,r,{includeDeclaration:!1},i);return l&&l.length===1?l:a}))}function Vd(s){return L_(this,void 0,void 0,function*(){let e=yield s(),t=new Ut(e,""),i=t.references.map(n=>n.link);return t.dispose(),i})}wi("_executeDefinitionProvider",(s,e)=>Vd(()=>Wd(s,e,ge.None)));wi("_executeDeclarationProvider",(s,e)=>Vd(()=>uf(s,e,ge.None)));wi("_executeImplementationProvider",(s,e)=>Vd(()=>pf(s,e,ge.None)));wi("_executeTypeDefinitionProvider",(s,e)=>Vd(()=>mf(s,e,ge.None)));wi("_executeReferenceProvider",(s,e)=>Vd(()=>Bd(s,e,!1,ge.None)));var mn=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},gf,ff,yf,bf,Sf,vf,xf,Cf;Oi.appendMenuItem(se.EditorContext,{submenu:se.EditorContextPeek,title:u("peek.submenu","Peek"),group:"navigation",order:100});var P_=new Set;function Dn(s){let e=new s;return zh(e),P_.add(e.id),e}var Ts=class{constructor(e,t){this.model=e,this.position=t}static is(e){return!e||typeof e!="object"?!1:!!(e instanceof Ts||U.isIPosition(e.position)&&e.model)}},zo=class extends F{constructor(e,t){super(t);this.configuration=e}run(e,t,i){if(!t.hasModel())return Promise.resolve(void 0);let n=e.get(Ze),o=e.get(Ve),r=e.get(Mo),a=e.get(Od),l=t.getModel(),c=t.getPosition(),d=Ts.is(i)?i:new Ts(l,c),h=new yd(t,5),p=ha(this._getLocationModel(d.model,d.position,h.token),h.token).then(m=>mn(this,void 0,void 0,function*(){var f;if(!m||h.token.isCancellationRequested)return;_t(m.ariaMessage);let v;if(m.referenceAt(l.uri,c)){let w=this._getAlternativeCommand(t);w!==this.id&&P_.has(w)&&(v=t.getAction(w))}let _=m.references.length;if(_===0){if(!this.configuration.muteMessage){let w=l.getWordAtPosition(c);(f=Qt.get(t))===null||f===void 0||f.showMessage(this._getNoResultFoundMessage(w),c)}}else if(_===1&&v)v.run();else return this._onResult(o,a,t,m)}),m=>{n.error(m)}).finally(()=>{h.dispose()});return r.showWhile(p,250),p}_onResult(e,t,i,n){return mn(this,void 0,void 0,function*(){let o=this._getGoToPreference(i);if(!(i instanceof Mn)&&(this.configuration.openInPeek||o==="peek"&&n.references.length>1))this._openInPeek(i,n);else{let r=n.firstReference(),a=n.references.length>1&&o==="gotoAndPeek",l=yield this._openReference(i,e,r,this.configuration.openToSide,!a);a&&l?this._openInPeek(l,n):n.dispose(),o==="goto"&&t.put(r)}})}_openReference(e,t,i,n,o){return mn(this,void 0,void 0,function*(){let r;if(HS(i)&&(r=i.targetSelectionRange),r||(r=i.range),!r)return;let a=yield t.openCodeEditor({resource:i.uri,options:{selection:b.collapseToStart(r),selectionRevealType:3}},e,n);if(!!a){if(o){let l=a.getModel(),c=a.deltaDecorations([],[{range:r,options:{description:"symbol-navigate-action-highlight",className:"symbolHighlight"}}]);setTimeout(()=>{a.getModel()===l&&a.deltaDecorations(c,[])},350)}return a}})}_openInPeek(e,t){let i=io.get(e);i&&e.hasModel()?i.toggleWidget(e.getSelection(),Oe(n=>Promise.resolve(t)),this.configuration.openInPeek):t.dispose()}},kr=class extends zo{_getLocationModel(e,t,i){return mn(this,void 0,void 0,function*(){return new Ut(yield Wd(e,t,i),u("def.title","Definitions"))})}_getNoResultFoundMessage(e){return e&&e.word?u("noResultWord","No definition found for '{0}'",e.word):u("generic.noResults","No definition found")}_getAlternativeCommand(e){return e.getOption(51).alternativeDefinitionCommand}_getGoToPreference(e){return e.getOption(51).multipleDefinitions}},M_=sh&&!XS?2118:70;Dn((gf=class _f extends kr{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:_f.id,label:u("actions.goToDecl.label","Go to Definition"),alias:"Go to Definition",precondition:O.and(S.hasDefinitionProvider,S.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:S.editorTextFocus,primary:M_,weight:100},contextMenuOpts:{group:"navigation",order:1.1}});Pe.registerCommandAlias("editor.action.goToDeclaration",_f.id)}},gf.id="editor.action.revealDefinition",gf));Dn((ff=class wf extends kr{constructor(){super({openToSide:!0,openInPeek:!1,muteMessage:!1},{id:wf.id,label:u("actions.goToDeclToSide.label","Open Definition to the Side"),alias:"Open Definition to the Side",precondition:O.and(S.hasDefinitionProvider,S.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,M_),weight:100}});Pe.registerCommandAlias("editor.action.openDeclarationToTheSide",wf.id)}},ff.id="editor.action.revealDefinitionAside",ff));Dn((yf=class Tf extends kr{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:Tf.id,label:u("actions.previewDecl.label","Peek Definition"),alias:"Peek Definition",precondition:O.and(S.hasDefinitionProvider,Ot.notInPeekEditor,S.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:S.editorTextFocus,primary:582,linux:{primary:3140},weight:100},contextMenuOpts:{menuId:se.EditorContextPeek,group:"peek",order:2}});Pe.registerCommandAlias("editor.action.previewDeclaration",Tf.id)}},yf.id="editor.action.peekDefinition",yf));var Ef=class extends zo{_getLocationModel(e,t,i){return mn(this,void 0,void 0,function*(){return new Ut(yield uf(e,t,i),u("decl.title","Declarations"))})}_getNoResultFoundMessage(e){return e&&e.word?u("decl.noResultWord","No declaration found for '{0}'",e.word):u("decl.generic.noResults","No declaration found")}_getAlternativeCommand(e){return e.getOption(51).alternativeDeclarationCommand}_getGoToPreference(e){return e.getOption(51).multipleDeclarations}};Dn((bf=class D_ extends Ef{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:D_.id,label:u("actions.goToDeclaration.label","Go to Declaration"),alias:"Go to Declaration",precondition:O.and(S.hasDeclarationProvider,S.isInWalkThroughSnippet.toNegated()),contextMenuOpts:{group:"navigation",order:1.3}})}_getNoResultFoundMessage(e){return e&&e.word?u("decl.noResultWord","No declaration found for '{0}'",e.word):u("decl.generic.noResults","No declaration found")}},bf.id="editor.action.revealDeclaration",bf));Dn(class extends Ef{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:"editor.action.peekDeclaration",label:u("actions.peekDecl.label","Peek Declaration"),alias:"Peek Declaration",precondition:O.and(S.hasDeclarationProvider,Ot.notInPeekEditor,S.isInWalkThroughSnippet.toNegated()),contextMenuOpts:{menuId:se.EditorContextPeek,group:"peek",order:3}})}});var If=class extends zo{_getLocationModel(e,t,i){return mn(this,void 0,void 0,function*(){return new Ut(yield mf(e,t,i),u("typedef.title","Type Definitions"))})}_getNoResultFoundMessage(e){return e&&e.word?u("goToTypeDefinition.noResultWord","No type definition found for '{0}'",e.word):u("goToTypeDefinition.generic.noResults","No type definition found")}_getAlternativeCommand(e){return e.getOption(51).alternativeTypeDefinitionCommand}_getGoToPreference(e){return e.getOption(51).multipleTypeDefinitions}};Dn((Sf=class R_ extends If{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:R_.ID,label:u("actions.goToTypeDefinition.label","Go to Type Definition"),alias:"Go to Type Definition",precondition:O.and(S.hasTypeDefinitionProvider,S.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:S.editorTextFocus,primary:0,weight:100},contextMenuOpts:{group:"navigation",order:1.4}})}},Sf.ID="editor.action.goToTypeDefinition",Sf));Dn((vf=class A_ extends If{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:A_.ID,label:u("actions.peekTypeDefinition.label","Peek Type Definition"),alias:"Peek Type Definition",precondition:O.and(S.hasTypeDefinitionProvider,Ot.notInPeekEditor,S.isInWalkThroughSnippet.toNegated()),contextMenuOpts:{menuId:se.EditorContextPeek,group:"peek",order:4}})}},vf.ID="editor.action.peekTypeDefinition",vf));var kf=class extends zo{_getLocationModel(e,t,i){return mn(this,void 0,void 0,function*(){return new Ut(yield pf(e,t,i),u("impl.title","Implementations"))})}_getNoResultFoundMessage(e){return e&&e.word?u("goToImplementation.noResultWord","No implementation found for '{0}'",e.word):u("goToImplementation.generic.noResults","No implementation found")}_getAlternativeCommand(e){return e.getOption(51).alternativeImplementationCommand}_getGoToPreference(e){return e.getOption(51).multipleImplementations}};Dn((xf=class F_ extends kf{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:F_.ID,label:u("actions.goToImplementation.label","Go to Implementations"),alias:"Go to Implementations",precondition:O.and(S.hasImplementationProvider,S.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:S.editorTextFocus,primary:2118,weight:100},contextMenuOpts:{group:"navigation",order:1.45}})}},xf.ID="editor.action.goToImplementation",xf));Dn((Cf=class N_ extends kf{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:N_.ID,label:u("actions.peekImplementation.label","Peek Implementations"),alias:"Peek Implementations",precondition:O.and(S.hasImplementationProvider,Ot.notInPeekEditor,S.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:S.editorTextFocus,primary:3142,weight:100},contextMenuOpts:{menuId:se.EditorContextPeek,group:"peek",order:5}})}},Cf.ID="editor.action.peekImplementation",Cf));var Lf=class extends zo{_getNoResultFoundMessage(e){return e?u("references.no","No references found for '{0}'",e.word):u("references.noGeneric","No references found")}_getAlternativeCommand(e){return e.getOption(51).alternativeReferenceCommand}_getGoToPreference(e){return e.getOption(51).multipleReferences}};Dn(class extends Lf{constructor(){super({openToSide:!1,openInPeek:!1,muteMessage:!1},{id:"editor.action.goToReferences",label:u("goToReferences.label","Go to References"),alias:"Go to References",precondition:O.and(S.hasReferenceProvider,Ot.notInPeekEditor,S.isInWalkThroughSnippet.toNegated()),kbOpts:{kbExpr:S.editorTextFocus,primary:1094,weight:100},contextMenuOpts:{group:"navigation",order:1.45}})}_getLocationModel(e,t,i){return mn(this,void 0,void 0,function*(){return new Ut(yield Bd(e,t,!0,i),u("ref.title","References"))})}});Dn(class extends Lf{constructor(){super({openToSide:!1,openInPeek:!0,muteMessage:!1},{id:"editor.action.referenceSearch.trigger",label:u("references.action.label","Peek References"),alias:"Peek References",precondition:O.and(S.hasReferenceProvider,Ot.notInPeekEditor,S.isInWalkThroughSnippet.toNegated()),contextMenuOpts:{menuId:se.EditorContextPeek,group:"peek",order:6}})}_getLocationModel(e,t,i){return mn(this,void 0,void 0,function*(){return new Ut(yield Bd(e,t,!1,i),u("ref.title","References"))})}});var z_=class extends zo{constructor(e,t,i){super(e,{id:"editor.action.goToLocation",label:u("label.generic","Go to Any Symbol"),alias:"Go to Any Symbol",precondition:O.and(Ot.notInPeekEditor,S.isInWalkThroughSnippet.toNegated())});this._references=t,this._gotoMultipleBehaviour=i}_getLocationModel(e,t,i){return mn(this,void 0,void 0,function*(){return new Ut(this._references,u("generic.title","Locations"))})}_getNoResultFoundMessage(e){return e&&u("generic.noResult","No results for '{0}'",e.word)||""}_getGoToPreference(e){var t;return(t=this._gotoMultipleBehaviour)!==null&&t!==void 0?t:e.getOption(51).multipleReferences}_getAlternativeCommand(){return""}};Pe.registerCommand({id:"editor.action.goToLocations",description:{description:"Go to locations from a position in a file",args:[{name:"uri",description:"The text document in which to start",constraint:_e},{name:"position",description:"The position at which to start",constraint:U.isIPosition},{name:"locations",description:"An array of locations.",constraint:Array},{name:"multiple",description:"Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto"},{name:"noResultsMessage",description:"Human readable message that shows when locations is empty."}]},handler:(s,e,t,i,n,o,r)=>mn(void 0,void 0,void 0,function*(){qe(_e.isUri(e)),qe(U.isIPosition(t)),qe(Array.isArray(i)),qe(typeof n=="undefined"||typeof n=="string"),qe(typeof r=="undefined"||typeof r=="boolean");let a=s.get(Ve),l=yield a.openCodeEditor({resource:e},a.getFocusedCodeEditor());if(mg(l))return l.setPosition(t),l.revealPositionInCenterIfOutsideViewport(t,0),l.invokeWithinContext(c=>{let d=new class extends z_{_getNoResultFoundMessage(h){return o||super._getNoResultFoundMessage(h)}}({muteMessage:!Boolean(o),openInPeek:Boolean(r),openToSide:!1},i,n);c.get(le).invokeFunction(d.run.bind(d),l)})})});Pe.registerCommand({id:"editor.action.peekLocations",description:{description:"Peek locations from a position in a file",args:[{name:"uri",description:"The text document in which to start",constraint:_e},{name:"position",description:"The position at which to start",constraint:U.isIPosition},{name:"locations",description:"An array of locations.",constraint:Array},{name:"multiple",description:"Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto"}]},handler:(s,e,t,i,n)=>mn(void 0,void 0,void 0,function*(){s.get(dt).executeCommand("editor.action.goToLocations",e,t,i,n,void 0,!0)})});Pe.registerCommand({id:"editor.action.findReferences",handler:(s,e,t)=>{qe(_e.isUri(e)),qe(U.isIPosition(t));let i=s.get(Ve);return i.openCodeEditor({resource:e},i.getFocusedCodeEditor()).then(n=>{if(!mg(n)||!n.hasModel())return;let o=io.get(n);if(!o)return;let r=Oe(l=>Bd(n.getModel(),U.lift(t),!1,l).then(c=>new Ut(c,u("ref.title","References")))),a=new b(t.lineNumber,t.column,t.lineNumber,t.column);return Promise.resolve(o.toggleWidget(a,r,!1))})}});Pe.registerCommandAlias("editor.action.showReferences","editor.action.peekLocations");Oi.appendMenuItems([{id:se.MenubarGoMenu,item:{command:{id:"editor.action.revealDefinition",title:u({key:"miGotoDefinition",comment:["&& denotes a mnemonic"]},"Go to &&Definition")},group:"4_symbol_nav",order:2}},{id:se.MenubarGoMenu,item:{command:{id:"editor.action.revealDeclaration",title:u({key:"miGotoDeclaration",comment:["&& denotes a mnemonic"]},"Go to &&Declaration")},group:"4_symbol_nav",order:3}},{id:se.MenubarGoMenu,item:{command:{id:"editor.action.goToTypeDefinition",title:u({key:"miGotoTypeDefinition",comment:["&& denotes a mnemonic"]},"Go to &&Type Definition")},group:"4_symbol_nav",order:3}},{id:se.MenubarGoMenu,item:{command:{id:"editor.action.goToImplementation",title:u({key:"miGotoImplementation",comment:["&& denotes a mnemonic"]},"Go to &&Implementations")},group:"4_symbol_nav",order:4}},{id:se.MenubarGoMenu,item:{command:{id:"editor.action.goToReferences",title:u({key:"miGotoReference",comment:["&& denotes a mnemonic"]},"Go to &&References")},group:"4_symbol_nav",order:5}}]);var qM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},O_=function(s,e){return function(t,i){e(t,i,s)}},Lr=class Gd{constructor(e,t,i){this.textModelResolverService=t,this.languageService=i,this.toUnhook=new A,this.toUnhookForKeyboard=new A,this.linkDecorations=[],this.currentWordAtPosition=null,this.previousPromise=null,this.editor=e;let n=new vs(e);this.toUnhook.add(n),this.toUnhook.add(n.onMouseMoveOrRelevantKeyDown(([o,r])=>{this.startFindDefinitionFromMouse(o,Mi(r))})),this.toUnhook.add(n.onExecute(o=>{this.isEnabled(o)&&this.gotoDefinition(o.target.position,o.hasSideBySideModifier).then(()=>{this.removeLinkDecorations()},r=>{this.removeLinkDecorations(),de(r)})})),this.toUnhook.add(n.onCancel(()=>{this.removeLinkDecorations(),this.currentWordAtPosition=null}))}static get(e){return e.getContribution(Gd.ID)}startFindDefinitionFromCursor(e){return this.startFindDefinition(e).then(()=>{this.toUnhookForKeyboard.add(this.editor.onDidChangeCursorPosition(()=>{this.currentWordAtPosition=null,this.removeLinkDecorations(),this.toUnhookForKeyboard.clear()})),this.toUnhookForKeyboard.add(this.editor.onKeyDown(t=>{t&&(this.currentWordAtPosition=null,this.removeLinkDecorations(),this.toUnhookForKeyboard.clear())}))})}startFindDefinitionFromMouse(e,t){if(e.target.type===9&&this.linkDecorations.length>0)return;if(!this.editor.hasModel()||!this.isEnabled(e,t)){this.currentWordAtPosition=null,this.removeLinkDecorations();return}let i=e.target.position;this.startFindDefinition(i)}startFindDefinition(e){var t;this.toUnhookForKeyboard.clear();let i=e?(t=this.editor.getModel())===null||t===void 0?void 0:t.getWordAtPosition(e):null;if(!i)return this.currentWordAtPosition=null,this.removeLinkDecorations(),Promise.resolve(0);if(this.currentWordAtPosition&&this.currentWordAtPosition.startColumn===i.startColumn&&this.currentWordAtPosition.endColumn===i.endColumn&&this.currentWordAtPosition.word===i.word)return Promise.resolve(0);this.currentWordAtPosition=i;let n=new wu(this.editor,15);return this.previousPromise&&(this.previousPromise.cancel(),this.previousPromise=null),this.previousPromise=Oe(o=>this.findDefinition(e,o)),this.previousPromise.then(o=>{if(!o||!o.length||!n.validate(this.editor)){this.removeLinkDecorations();return}if(o.length>1)this.addDecoration(new b(e.lineNumber,i.startColumn,e.lineNumber,i.endColumn),new ai().appendText(u("multipleResults","Click to show {0} definitions.",o.length)));else{let r=o[0];if(!r.uri)return;this.textModelResolverService.createModelReference(r.uri).then(a=>{if(!a.object||!a.object.textEditorModel){a.dispose();return}let{object:{textEditorModel:l}}=a,{startLineNumber:c}=r.range;if(c<1||c>l.getLineCount()){a.dispose();return}let d=this.getPreviewValue(l,c,r),h;r.originSelectionRange?h=b.lift(r.originSelectionRange):h=new b(e.lineNumber,i.startColumn,e.lineNumber,i.endColumn);let p=this.languageService.guessLanguageIdByFilepathOrFirstLine(l.uri);this.addDecoration(h,new ai().appendCodeblock(p||"",d)),a.dispose()})}}).then(void 0,de)}getPreviewValue(e,t,i){let n=i.targetSelectionRange?i.range:this.getPreviewRangeBasedOnBrackets(e,t);return n.endLineNumber-n.startLineNumber>=Gd.MAX_SOURCE_PREVIEW_LINES&&(n=this.getPreviewRangeBasedOnIndentation(e,t)),this.stripIndentationFromPreviewRange(e,t,n)}stripIndentationFromPreviewRange(e,t,i){let o=e.getLineFirstNonWhitespaceColumn(t);for(let a=t+1;a<i.endLineNumber;a++){let l=e.getLineFirstNonWhitespaceColumn(a);o=Math.min(o,l)}return e.getValueInRange(i).replace(new RegExp(`^\\s{${o-1}}`,"gm"),"").trim()}getPreviewRangeBasedOnIndentation(e,t){let i=e.getLineFirstNonWhitespaceColumn(t),n=Math.min(e.getLineCount(),t+Gd.MAX_SOURCE_PREVIEW_LINES),o=t+1;for(;o<n;o++){let r=e.getLineFirstNonWhitespaceColumn(o);if(i===r)break}return new b(t,1,o+1,1)}getPreviewRangeBasedOnBrackets(e,t){let i=Math.min(e.getLineCount(),t+Gd.MAX_SOURCE_PREVIEW_LINES),n=[],o=!0,r=e.bracketPairs.findNextBracket(new U(t,1));for(;r!==null;){if(n.length===0)n.push(r);else{let d=n[n.length-1];if(d.open[0]===r.open[0]&&d.isOpen&&!r.isOpen?n.pop():n.push(r),n.length===0)if(o)o=!1;else return new b(t,1,r.range.endLineNumber+1,1)}let a=e.getLineMaxColumn(t),l=r.range.endLineNumber,c=r.range.endColumn;if(a===r.range.endColumn&&(l++,c=1),l>i)return new b(t,1,i+1,1);r=e.bracketPairs.findNextBracket(new U(l,c))}return new b(t,1,i+1,1)}addDecoration(e,t){let i={range:e,options:{description:"goto-definition-link",inlineClassName:"goto-definition-link",hoverMessage:t}};this.linkDecorations=this.editor.deltaDecorations(this.linkDecorations,[i])}removeLinkDecorations(){this.linkDecorations.length>0&&(this.linkDecorations=this.editor.deltaDecorations(this.linkDecorations,[]))}isEnabled(e,t){return this.editor.hasModel()&&e.isNoneOrSingleMouseDown&&e.target.type===6&&(e.hasTriggerModifier||(t?t.keyCodeIsTriggerKey:!1))&&Eh.has(this.editor.getModel())}findDefinition(e,t){let i=this.editor.getModel();return i?Wd(i,e,t):Promise.resolve(null)}gotoDefinition(e,t){return this.editor.setPosition(e),this.editor.invokeWithinContext(i=>{let n=!t&&this.editor.getOption(78)&&!this.isInPeekEditor(i);return new kr({openToSide:t,openInPeek:n,muteMessage:!0},{alias:"",label:"",id:"",precondition:void 0}).run(i,this.editor)})}isInPeekEditor(e){let t=e.get(ie);return Ot.inPeekEditor.getValue(t)}dispose(){this.toUnhook.dispose()}};Lr.ID="editor.contrib.gotodefinitionatposition";Lr.MAX_SOURCE_PREVIEW_LINES=8;Lr=qM([O_(1,Gt),O_(2,ft)],Lr);J(Lr.ID,Lr);Me((s,e)=>{let t=s.getColor(La);t&&e.addRule(`.monaco-editor .goto-definition-link { color: ${t} !important; }`)});Ae();Ae();G();var ep=W,jd=class extends z{constructor(){super();this.containerDomNode=document.createElement("div"),this.containerDomNode.className="monaco-hover",this.containerDomNode.tabIndex=0,this.containerDomNode.setAttribute("role","tooltip"),this.contentsDomNode=document.createElement("div"),this.contentsDomNode.className="monaco-hover-content",this.scrollbar=this._register(new Na(this.contentsDomNode,{consumeMouseWheelIfScrollbarIsNeeded:!0})),this.containerDomNode.appendChild(this.scrollbar.getDomNode())}onContentsChanged(){this.scrollbar.scanDomNode()}},Ud=class extends z{constructor(e,t,i){super();this.actionContainer=H(e,ep("div.action-container")),this.action=H(this.actionContainer,ep("a.action")),this.action.setAttribute("role","button"),t.iconClass&&H(this.action,ep(`span.icon.${t.iconClass}`));let n=H(this.action,ep("span"));n.textContent=i?`${t.label} (${i})`:t.label,this._register(Ke(this.actionContainer,$i.MOUSE_DOWN,o=>{o.stopPropagation(),o.preventDefault(),t.run(this.actionContainer)})),this.setEnabled(!0)}static render(e,t,i){return new Ud(e,t,i)}setEnabled(e){e?(this.actionContainer.classList.remove("disabled"),this.actionContainer.removeAttribute("aria-disabled")):(this.actionContainer.classList.add("disabled"),this.actionContainer.setAttribute("aria-disabled","true"))}};vt();G();tt();ee();jt();Re();ke();ut();Zn();G();ee();De();var Pf=class{constructor(e,t,i){this.presentationIndex=i,this._onColorFlushed=new j,this.onColorFlushed=this._onColorFlushed.event,this._onDidChangeColor=new j,this.onDidChangeColor=this._onDidChangeColor.event,this._onDidChangePresentation=new j,this.onDidChangePresentation=this._onDidChangePresentation.event,this.originalColor=e,this._color=e,this._colorPresentations=t}get color(){return this._color}set color(e){this._color.equals(e)||(this._color=e,this._onDidChangeColor.fire(e))}get presentation(){return this.colorPresentations[this.presentationIndex]}get colorPresentations(){return this._colorPresentations}set colorPresentations(e){this._colorPresentations=e,this.presentationIndex>e.length-1&&(this.presentationIndex=0),this._onDidChangePresentation.fire(this.presentation)}selectNextColorPresentation(){this.presentationIndex=(this.presentationIndex+1)%this.colorPresentations.length,this.flushColor(),this._onDidChangePresentation.fire(this.presentation)}guessColorPresentation(e,t){for(let i=0;i<this.colorPresentations.length;i++)if(t.toLowerCase()===this.colorPresentations[i].label){this.presentationIndex=i,this._onDidChangePresentation.fire(this.presentation);break}}flushColor(){this._onColorFlushed.fire(this._color)}};Kl();Ae();ds();Zn();De();G();Q();mt();Ne();var Rn=W,H_=class extends z{constructor(e,t,i){super();this.model=t,this.domNode=Rn(".colorpicker-header"),H(e,this.domNode),this.pickedColorNode=H(this.domNode,Rn(".picked-color"));let n=u("clickToToggleColorOptions","Click to toggle color options (rgb/hsl/hex)");this.pickedColorNode.setAttribute("title",n);let o=H(this.domNode,Rn(".original-color"));o.style.backgroundColor=we.Format.CSS.format(this.model.originalColor)||"",this.backgroundColor=i.getColorTheme().getColor(To)||we.white,this._register(Me((r,a)=>{this.backgroundColor=r.getColor(To)||we.white})),this._register(Ke(this.pickedColorNode,$i.CLICK,()=>this.model.selectNextColorPresentation())),this._register(Ke(o,$i.CLICK,()=>{this.model.color=this.model.originalColor,this.model.flushColor()})),this._register(t.onDidChangeColor(this.onDidChangeColor,this)),this._register(t.onDidChangePresentation(this.onDidChangePresentation,this)),this.pickedColorNode.style.backgroundColor=we.Format.CSS.format(t.color)||"",this.pickedColorNode.classList.toggle("light",t.color.rgba.a<.5?this.backgroundColor.isLighter():t.color.isLighter()),this.onDidChangeColor(this.model.color)}onDidChangeColor(e){this.pickedColorNode.style.backgroundColor=we.Format.CSS.format(e)||"",this.pickedColorNode.classList.toggle("light",e.rgba.a<.5?this.backgroundColor.isLighter():e.isLighter()),this.onDidChangePresentation()}onDidChangePresentation(){this.pickedColorNode.textContent=this.model.presentation?this.model.presentation.label:"",this.pickedColorNode.prepend(Rn(".codicon.codicon-color-mode"))}},W_=class extends z{constructor(e,t,i){super();this.model=t,this.pixelRatio=i,this.domNode=Rn(".colorpicker-body"),H(e,this.domNode),this.saturationBox=new B_(this.domNode,this.model,this.pixelRatio),this._register(this.saturationBox),this._register(this.saturationBox.onDidChange(this.onDidSaturationValueChange,this)),this._register(this.saturationBox.onColorFlushed(this.flushColor,this)),this.opacityStrip=new V_(this.domNode,this.model),this._register(this.opacityStrip),this._register(this.opacityStrip.onDidChange(this.onDidOpacityChange,this)),this._register(this.opacityStrip.onColorFlushed(this.flushColor,this)),this.hueStrip=new G_(this.domNode,this.model),this._register(this.hueStrip),this._register(this.hueStrip.onDidChange(this.onDidHueChange,this)),this._register(this.hueStrip.onColorFlushed(this.flushColor,this))}flushColor(){this.model.flushColor()}onDidSaturationValueChange({s:e,v:t}){let i=this.model.color.hsva;this.model.color=new we(new rd(i.h,e,t,i.a))}onDidOpacityChange(e){let t=this.model.color.hsva;this.model.color=new we(new rd(t.h,t.s,t.v,e))}onDidHueChange(e){let t=this.model.color.hsva,i=(1-e)*360;this.model.color=new we(new rd(i===360?0:i,t.s,t.v,t.a))}layout(){this.saturationBox.layout(),this.opacityStrip.layout(),this.hueStrip.layout()}},B_=class extends z{constructor(e,t,i){super();this.model=t,this.pixelRatio=i,this._onDidChange=new j,this.onDidChange=this._onDidChange.event,this._onColorFlushed=new j,this.onColorFlushed=this._onColorFlushed.event,this.domNode=Rn(".saturation-wrap"),H(e,this.domNode),this.canvas=document.createElement("canvas"),this.canvas.className="saturation-box",H(this.domNode,this.canvas),this.selection=Rn(".saturation-selection"),H(this.domNode,this.selection),this.layout(),this._register(Gm(this.domNode,n=>this.onMouseDown(n))),this._register(this.model.onDidChangeColor(this.onDidChangeColor,this)),this.monitor=null}onMouseDown(e){this.monitor=this._register(new od);let t=ni(this.domNode);e.target!==this.selection&&this.onDidChangePosition(e.offsetX,e.offsetY),this.monitor.startMonitoring(e.target,e.buttons,nd,n=>this.onDidChangePosition(n.posx-t.left,n.posy-t.top),()=>null);let i=jm(document,()=>{this._onColorFlushed.fire(),i.dispose(),this.monitor&&(this.monitor.stopMonitoring(!0),this.monitor=null)},!0)}onDidChangePosition(e,t){let i=Math.max(0,Math.min(1,e/this.width)),n=Math.max(0,Math.min(1,1-t/this.height));this.paintSelection(i,n),this._onDidChange.fire({s:i,v:n})}layout(){this.width=this.domNode.offsetWidth,this.height=this.domNode.offsetHeight,this.canvas.width=this.width*this.pixelRatio,this.canvas.height=this.height*this.pixelRatio,this.paint();let e=this.model.color.hsva;this.paintSelection(e.s,e.v)}paint(){let e=this.model.color.hsva,t=new we(new rd(e.h,1,1,1)),i=this.canvas.getContext("2d"),n=i.createLinearGradient(0,0,this.canvas.width,0);n.addColorStop(0,"rgba(255, 255, 255, 1)"),n.addColorStop(.5,"rgba(255, 255, 255, 0.5)"),n.addColorStop(1,"rgba(255, 255, 255, 0)");let o=i.createLinearGradient(0,0,0,this.canvas.height);o.addColorStop(0,"rgba(0, 0, 0, 0)"),o.addColorStop(1,"rgba(0, 0, 0, 1)"),i.rect(0,0,this.canvas.width,this.canvas.height),i.fillStyle=we.Format.CSS.format(t),i.fill(),i.fillStyle=n,i.fill(),i.fillStyle=o,i.fill()}paintSelection(e,t){this.selection.style.left=`${e*this.width}px`,this.selection.style.top=`${this.height-t*this.height}px`}onDidChangeColor(){this.monitor&&this.monitor.isMonitoring()||this.paint()}},Mf=class extends z{constructor(e,t){super();this.model=t,this._onDidChange=new j,this.onDidChange=this._onDidChange.event,this._onColorFlushed=new j,this.onColorFlushed=this._onColorFlushed.event,this.domNode=H(e,Rn(".strip")),this.overlay=H(this.domNode,Rn(".overlay")),this.slider=H(this.domNode,Rn(".slider")),this.slider.style.top="0px",this._register(Gm(this.domNode,i=>this.onMouseDown(i))),this.layout()}layout(){this.height=this.domNode.offsetHeight-this.slider.offsetHeight;let e=this.getValue(this.model.color);this.updateSliderPosition(e)}onMouseDown(e){let t=this._register(new od),i=ni(this.domNode);this.domNode.classList.add("grabbing"),e.target!==this.slider&&this.onDidChangeTop(e.offsetY),t.startMonitoring(e.target,e.buttons,nd,o=>this.onDidChangeTop(o.posy-i.top),()=>null);let n=jm(document,()=>{this._onColorFlushed.fire(),n.dispose(),t.stopMonitoring(!0),this.domNode.classList.remove("grabbing")},!0)}onDidChangeTop(e){let t=Math.max(0,Math.min(1,1-e/this.height));this.updateSliderPosition(t),this._onDidChange.fire(t)}updateSliderPosition(e){this.slider.style.top=`${(1-e)*this.height}px`}},V_=class extends Mf{constructor(e,t){super(e,t);this.domNode.classList.add("opacity-strip"),this._register(t.onDidChangeColor(this.onDidChangeColor,this)),this.onDidChangeColor(this.model.color)}onDidChangeColor(e){let{r:t,g:i,b:n}=e.rgba,o=new we(new wo(t,i,n,1)),r=new we(new wo(t,i,n,0));this.overlay.style.background=`linear-gradient(to bottom, ${o} 0%, ${r} 100%)`}getValue(e){return e.hsva.a}},G_=class extends Mf{constructor(e,t){super(e,t);this.domNode.classList.add("hue-strip")}getValue(e){return 1-e.hsva.h/360}},Df=class extends Ti{constructor(e,t,i,n){super();this.model=t,this.pixelRatio=i,this._register(KS.onDidChange(()=>this.layout()));let o=Rn(".colorpicker-widget");e.appendChild(o);let r=new H_(o,this.model,n);this.body=new W_(o,this.model,this.pixelRatio),this._register(r),this._register(this.body)}layout(){this.body.layout()}};Ne();var XM=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},YM=function(s,e){return function(t,i){e(t,i,s)}},j_=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},U_=class{constructor(e,t,i,n){this.owner=e,this.range=t,this.model=i,this.provider=n,this.forceShowAtRange=!0}isValidForHoverAnchor(e){return e.type===1&&this.range.startColumn<=e.range.startColumn&&this.range.endColumn>=e.range.endColumn}},tp=class{constructor(e,t){this._editor=e,this._themeService=t}computeSync(e,t){return[]}computeAsync(e,t,i){return Si.fromPromise(this._computeAsync(e,t,i))}_computeAsync(e,t,i){return j_(this,void 0,void 0,function*(){if(!this._editor.hasModel())return[];let n=Tr.get(this._editor);if(!n)return[];for(let o of t){if(!n.isColorDecorationId(o.id))continue;let r=n.getColorData(o.range.getStartPosition());if(r)return[yield this._createColorHover(this._editor.getModel(),r.colorInfo,r.provider)]}return[]})}_createColorHover(e,t,i){return j_(this,void 0,void 0,function*(){let n=e.getValueInRange(t.range),{red:o,green:r,blue:a,alpha:l}=t.color,c=new wo(Math.round(o*255),Math.round(r*255),Math.round(a*255),l),d=new we(c),h=yield Ug(e,t,i,ge.None),p=new Pf(d,[],0);return p.colorPresentations=h||[],p.guessColorPresentation(d,n),new U_(this,b.lift(t.range),p,i)})}renderHoverParts(e,t){if(t.length===0||!this._editor.hasModel())return z.None;let i=new A,n=t[0],o=this._editor.getModel(),r=n.model,a=i.add(new Df(e.fragment,r,this._editor.getOption(129),this._themeService));e.setColorPicker(a);let l=new b(n.range.startLineNumber,n.range.startColumn,n.range.endLineNumber,n.range.endColumn),c=()=>{let h,p;if(r.presentation.textEdit){h=[r.presentation.textEdit],p=new b(r.presentation.textEdit.range.startLineNumber,r.presentation.textEdit.range.startColumn,r.presentation.textEdit.range.endLineNumber,r.presentation.textEdit.range.endColumn);let m=this._editor.getModel()._setTrackedRange(null,p,3);this._editor.pushUndoStop(),this._editor.executeEdits("colorpicker",h),p=this._editor.getModel()._getTrackedRange(m)||p}else h=[{identifier:null,range:l,text:r.presentation.label,forceMoveMarkers:!1}],p=l.setEndPosition(l.endLineNumber,l.startColumn+r.presentation.label.length),this._editor.pushUndoStop(),this._editor.executeEdits("colorpicker",h);r.presentation.additionalTextEdits&&(h=[...r.presentation.additionalTextEdits],this._editor.executeEdits("colorpicker",h),e.hide()),this._editor.pushUndoStop(),l=p},d=h=>Ug(o,{range:l,color:{red:h.rgba.r/255,green:h.rgba.g/255,blue:h.rgba.b/255,alpha:h.rgba.a}},n.provider,ge.None).then(p=>{r.colorPresentations=p||[]});return i.add(r.onColorFlushed(h=>{d(h).then(c)})),i.add(r.onDidChangeColor(d)),i}};tp=XM([YM(1,Nt)],tp);ke();Le();De();G();var ZM=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},JM=function(s){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=s[Symbol.asyncIterator],t;return e?e.call(s):(s=typeof __values=="function"?__values(s):s[Symbol.iterator](),t={},i("next"),i("throw"),i("return"),t[Symbol.asyncIterator]=function(){return this},t);function i(o){t[o]=s[o]&&function(r){return new Promise(function(a,l){r=s[o](r),n(a,l,r.done,r.value)})}}function n(o,r,a,l){Promise.resolve(l).then(function(c){o({value:c,done:a})},r)}},$_=class{constructor(e,t,i){this.value=e,this.isComplete=t,this.hasLoadingMessage=i}},$d=class extends z{constructor(e,t){super();this._editor=e,this._computer=t,this._onResult=this._register(new j),this.onResult=this._onResult.event,this._firstWaitScheduler=this._register(new $e(()=>this._triggerAsyncComputation(),0)),this._secondWaitScheduler=this._register(new $e(()=>this._triggerSyncComputation(),0)),this._loadingMessageScheduler=this._register(new $e(()=>this._triggerLoadingMessage(),0)),this._state=0,this._asyncIterable=null,this._asyncIterableDone=!1,this._result=[]}dispose(){this._asyncIterable&&(this._asyncIterable.cancel(),this._asyncIterable=null),super.dispose()}get _hoverTime(){return this._editor.getOption(53).delay}get _firstWaitTime(){return this._hoverTime/2}get _secondWaitTime(){return this._hoverTime-this._firstWaitTime}get _loadingMessageTime(){return 3*this._hoverTime}_setState(e,t=!0){this._state=e,t&&this._fireResult()}_triggerAsyncComputation(){this._setState(2),this._secondWaitScheduler.schedule(this._secondWaitTime),this._computer.computeAsync?(this._asyncIterableDone=!1,this._asyncIterable=_S(e=>this._computer.computeAsync(e)),ZM(this,void 0,void 0,function*(){var e,t;try{try{for(var i=JM(this._asyncIterable),n;n=yield i.next(),!n.done;){let o=n.value;o&&(this._result.push(o),this._fireResult())}}catch(o){e={error:o}}finally{try{n&&!n.done&&(t=i.return)&&(yield t.call(i))}finally{if(e)throw e.error}}this._asyncIterableDone=!0,(this._state===3||this._state===4)&&this._setState(0)}catch(o){de(o)}})):this._asyncIterableDone=!0}_triggerSyncComputation(){this._computer.computeSync&&(this._result=this._result.concat(this._computer.computeSync())),this._setState(this._asyncIterableDone?0:3)}_triggerLoadingMessage(){this._state===3&&this._setState(4)}_fireResult(){if(this._state===1||this._state===2)return;let e=this._state===0,t=this._state===4;this._onResult.fire(new $_(this._result.slice(0),e,t))}start(e){if(e===0)this._state===0&&(this._setState(1),this._firstWaitScheduler.schedule(this._firstWaitTime),this._loadingMessageScheduler.schedule(this._loadingMessageTime));else switch(this._state){case 0:this._triggerAsyncComputation(),this._secondWaitScheduler.cancel(),this._triggerSyncComputation();break;case 2:this._secondWaitScheduler.cancel(),this._triggerSyncComputation();break}}cancel(){this._firstWaitScheduler.cancel(),this._secondWaitScheduler.cancel(),this._loadingMessageScheduler.cancel(),this._asyncIterable&&(this._asyncIterable.cancel(),this._asyncIterable=null),this._result=[],this._setState(0,!1)}};var Kd=class{constructor(e,t){this.priority=e,this.range=t,this.type=1}equals(e){return e.type===1&&this.range.equalsRange(e.range)}canAdoptVisibleHover(e,t){return e.type===1&&t.lineNumber===this.range.startLineNumber}},Es=class{constructor(e,t,i){this.priority=e,this.owner=t,this.range=i,this.type=2}equals(e){return e.type===2&&this.owner===e.owner}canAdoptVisibleHover(e,t){return e.type===2&&this.owner===e.owner}};Ae();vt();ke();G();Ae();function QM(s){if(Array.isArray(s)){for(var e=0,t=Array(s.length);e<s.length;e++)t[e]=s[e];return t}else return Array.from(s)}var e1=Object.hasOwnProperty,K_=Object.setPrototypeOf,t1=Object.isFrozen,i1=Object.getPrototypeOf,n1=Object.getOwnPropertyDescriptor,Ei=Object.freeze,Ho=Object.seal,o1=Object.create,tw=typeof Reflect!="undefined"&&Reflect,op=tw.apply,zf=tw.construct;op||(op=function(e,t,i){return e.apply(t,i)});Ei||(Ei=function(e){return e});Ho||(Ho=function(e){return e});zf||(zf=function(e,t){return new(Function.prototype.bind.apply(e,[null].concat(QM(t))))});var r1=An(Array.prototype.forEach),q_=An(Array.prototype.pop),qd=An(Array.prototype.push),ks=An(String.prototype.toLowerCase),X_=An(String.prototype.match),Pr=An(String.prototype.replace),s1=An(String.prototype.indexOf),a1=An(String.prototype.trim),Oo=An(RegExp.prototype.test),Y_=l1(TypeError);function An(s){return function(e){for(var t=arguments.length,i=Array(t>1?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];return op(s,e,i)}}function l1(s){return function(){for(var e=arguments.length,t=Array(e),i=0;i<e;i++)t[i]=arguments[i];return zf(s,t)}}function Fe(s,e){K_&&K_(s,null);for(var t=e.length;t--;){var i=e[t];if(typeof i=="string"){var n=ks(i);n!==i&&(t1(e)||(e[t]=n),i=n)}s[i]=!0}return s}function Is(s){var e=o1(null),t=void 0;for(t in s)op(e1,s,[t])&&(e[t]=s[t]);return e}function ip(s,e){for(;s!==null;){var t=n1(s,e);if(t){if(t.get)return An(t.get);if(typeof t.value=="function")return An(t.value)}s=i1(s)}function i(n){return console.warn("fallback value for",n),null}return i}var Z_=Ei(["a","abbr","acronym","address","area","article","aside","audio","b","bdi","bdo","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","content","data","datalist","dd","decorator","del","details","dfn","dialog","dir","div","dl","dt","element","em","fieldset","figcaption","figure","font","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","img","input","ins","kbd","label","legend","li","main","map","mark","marquee","menu","menuitem","meter","nav","nobr","ol","optgroup","option","output","p","picture","pre","progress","q","rp","rt","ruby","s","samp","section","select","shadow","small","source","spacer","span","strike","strong","style","sub","summary","sup","table","tbody","td","template","textarea","tfoot","th","thead","time","tr","track","tt","u","ul","var","video","wbr"]),Rf=Ei(["svg","a","altglyph","altglyphdef","altglyphitem","animatecolor","animatemotion","animatetransform","circle","clippath","defs","desc","ellipse","filter","font","g","glyph","glyphref","hkern","image","line","lineargradient","marker","mask","metadata","mpath","path","pattern","polygon","polyline","radialgradient","rect","stop","style","switch","symbol","text","textpath","title","tref","tspan","view","vkern"]),Af=Ei(["feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence"]),d1=Ei(["animate","color-profile","cursor","discard","fedropshadow","feimage","font-face","font-face-format","font-face-name","font-face-src","font-face-uri","foreignobject","hatch","hatchpath","mesh","meshgradient","meshpatch","meshrow","missing-glyph","script","set","solidcolor","unknown","use"]),Ff=Ei(["math","menclose","merror","mfenced","mfrac","mglyph","mi","mlabeledtr","mmultiscripts","mn","mo","mover","mpadded","mphantom","mroot","mrow","ms","mspace","msqrt","mstyle","msub","msup","msubsup","mtable","mtd","mtext","mtr","munder","munderover"]),c1=Ei(["maction","maligngroup","malignmark","mlongdiv","mscarries","mscarry","msgroup","mstack","msline","msrow","semantics","annotation","annotation-xml","mprescripts","none"]),J_=Ei(["#text"]),Q_=Ei(["accept","action","align","alt","autocapitalize","autocomplete","autopictureinpicture","autoplay","background","bgcolor","border","capture","cellpadding","cellspacing","checked","cite","class","clear","color","cols","colspan","controls","controlslist","coords","crossorigin","datetime","decoding","default","dir","disabled","disablepictureinpicture","disableremoteplayback","download","draggable","enctype","enterkeyhint","face","for","headers","height","hidden","high","href","hreflang","id","inputmode","integrity","ismap","kind","label","lang","list","loading","loop","low","max","maxlength","media","method","min","minlength","multiple","muted","name","noshade","novalidate","nowrap","open","optimum","pattern","placeholder","playsinline","poster","preload","pubdate","radiogroup","readonly","rel","required","rev","reversed","role","rows","rowspan","spellcheck","scope","selected","shape","size","sizes","span","srclang","start","src","srcset","step","style","summary","tabindex","title","translate","type","usemap","valign","value","width","xmlns","slot"]),Nf=Ei(["accent-height","accumulate","additive","alignment-baseline","ascent","attributename","attributetype","azimuth","basefrequency","baseline-shift","begin","bias","by","class","clip","clippathunits","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cx","cy","d","dx","dy","diffuseconstant","direction","display","divisor","dur","edgemode","elevation","end","fill","fill-opacity","fill-rule","filter","filterunits","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","fx","fy","g1","g2","glyph-name","glyphref","gradientunits","gradienttransform","height","href","id","image-rendering","in","in2","k","k1","k2","k3","k4","kerning","keypoints","keysplines","keytimes","lang","lengthadjust","letter-spacing","kernelmatrix","kernelunitlength","lighting-color","local","marker-end","marker-mid","marker-start","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","max","mask","media","method","mode","min","name","numoctaves","offset","operator","opacity","order","orient","orientation","origin","overflow","paint-order","path","pathlength","patterncontentunits","patterntransform","patternunits","points","preservealpha","preserveaspectratio","primitiveunits","r","rx","ry","radius","refx","refy","repeatcount","repeatdur","restart","result","rotate","scale","seed","shape-rendering","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","stop-color","stop-opacity","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke","stroke-width","style","surfacescale","systemlanguage","tabindex","targetx","targety","transform","text-anchor","text-decoration","text-rendering","textlength","type","u1","u2","unicode","values","viewbox","visibility","version","vert-adv-y","vert-origin-x","vert-origin-y","width","word-spacing","wrap","writing-mode","xchannelselector","ychannelselector","x","x1","x2","xmlns","y","y1","y2","z","zoomandpan"]),ew=Ei(["accent","accentunder","align","bevelled","close","columnsalign","columnlines","columnspan","denomalign","depth","dir","display","displaystyle","encoding","fence","frame","height","href","id","largeop","length","linethickness","lspace","lquote","mathbackground","mathcolor","mathsize","mathvariant","maxsize","minsize","movablelimits","notation","numalign","open","rowalign","rowlines","rowspacing","rowspan","rspace","rquote","scriptlevel","scriptminsize","scriptsizemultiplier","selection","separator","separators","stretchy","subscriptshift","supscriptshift","symmetric","voffset","width","xmlns"]),np=Ei(["xlink:href","xml:id","xlink:title","xml:space","xmlns:xlink"]),h1=Ho(/\{\{[\s\S]*|[\s\S]*\}\}/gm),u1=Ho(/<%[\s\S]*|[\s\S]*%>/gm),p1=Ho(/^data-[\-\w.\u00B7-\uFFFF]/),m1=Ho(/^aria-[\-\w]+$/),g1=Ho(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i),f1=Ho(/^(?:\w+script|data):/i),y1=Ho(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g),Xd=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(s){return typeof s}:function(s){return s&&typeof Symbol=="function"&&s.constructor===Symbol&&s!==Symbol.prototype?"symbol":typeof s};function no(s){if(Array.isArray(s)){for(var e=0,t=Array(s.length);e<s.length;e++)t[e]=s[e];return t}else return Array.from(s)}var b1=function(){return typeof window=="undefined"?null:window},S1=function(e,t){if((typeof e=="undefined"?"undefined":Xd(e))!=="object"||typeof e.createPolicy!="function")return null;var i=null,n="data-tt-policy-suffix";t.currentScript&&t.currentScript.hasAttribute(n)&&(i=t.currentScript.getAttribute(n));var o="dompurify"+(i?"#"+i:"");try{return e.createPolicy(o,{createHTML:function(a){return a}})}catch(r){return console.warn("TrustedTypes policy "+o+" could not be created."),null}};function iw(){var s=arguments.length>0&&arguments[0]!==void 0?arguments[0]:b1(),e=function(L){return iw(L)};if(e.version="2.3.1",e.removed=[],!s||!s.document||s.document.nodeType!==9)return e.isSupported=!1,e;var t=s.document,i=s.document,n=s.DocumentFragment,o=s.HTMLTemplateElement,r=s.Node,a=s.Element,l=s.NodeFilter,c=s.NamedNodeMap,d=c===void 0?s.NamedNodeMap||s.MozNamedAttrMap:c,h=s.Text,p=s.Comment,m=s.DOMParser,f=s.trustedTypes,v=a.prototype,_=ip(v,"cloneNode"),w=ip(v,"nextSibling"),R=ip(v,"childNodes"),P=ip(v,"parentNode");if(typeof o=="function"){var B=i.createElement("template");B.content&&B.content.ownerDocument&&(i=B.content.ownerDocument)}var V=S1(f,t),ce=V&&sa?V.createHTML(""):"",Te=i,kt=Te.implementation,Wt=Te.createNodeIterator,Bt=Te.createDocumentFragment,nn=Te.getElementsByTagName,Sn=t.importNode,ti={};try{ti=Is(i).documentMode?i.documentMode:{}}catch(Se){}var mi={};e.isSupported=typeof P=="function"&&kt&&typeof kt.createHTMLDocument!="undefined"&&ti!==9;var vn=h1,er=u1,$r=p1,Kr=m1,th=f1,ih=y1,tr=g1,oe=null,re=Fe({},[].concat(no(Z_),no(Rf),no(Af),no(Ff),no(J_))),Kt=null,Pl=Fe({},[].concat(no(Q_),no(Nf),no(ew),no(np))),xn=null,ir=null,oa=!0,qr=!0,Bn=!1,me=!1,nr=!1,Ml=!1,Dl=!1,or=!1,ra=!1,nh=!0,sa=!1,oh=!0,M=!0,T=!1,E={},g=null,y=Fe({},["annotation-xml","audio","colgroup","desc","foreignobject","head","iframe","math","mi","mn","mo","ms","mtext","noembed","noframes","noscript","plaintext","script","style","svg","template","thead","title","video","xmp"]),C=null,x=Fe({},["audio","video","img","source","image","track"]),D=null,N=Fe({},["alt","class","for","id","label","name","pattern","placeholder","role","summary","title","value","style","xmlns"]),te="http://www.w3.org/1998/Math/MathML",Z="http://www.w3.org/2000/svg",ye="http://www.w3.org/1999/xhtml",be=ye,je=!1,Ie=null,ae=i.createElement("form"),gt=function(L){Ie&&Ie===L||((!L||(typeof L=="undefined"?"undefined":Xd(L))!=="object")&&(L={}),L=Is(L),oe="ALLOWED_TAGS"in L?Fe({},L.ALLOWED_TAGS):re,Kt="ALLOWED_ATTR"in L?Fe({},L.ALLOWED_ATTR):Pl,D="ADD_URI_SAFE_ATTR"in L?Fe(Is(N),L.ADD_URI_SAFE_ATTR):N,C="ADD_DATA_URI_TAGS"in L?Fe(Is(x),L.ADD_DATA_URI_TAGS):x,g="FORBID_CONTENTS"in L?Fe({},L.FORBID_CONTENTS):y,xn="FORBID_TAGS"in L?Fe({},L.FORBID_TAGS):{},ir="FORBID_ATTR"in L?Fe({},L.FORBID_ATTR):{},E="USE_PROFILES"in L?L.USE_PROFILES:!1,oa=L.ALLOW_ARIA_ATTR!==!1,qr=L.ALLOW_DATA_ATTR!==!1,Bn=L.ALLOW_UNKNOWN_PROTOCOLS||!1,me=L.SAFE_FOR_TEMPLATES||!1,nr=L.WHOLE_DOCUMENT||!1,or=L.RETURN_DOM||!1,ra=L.RETURN_DOM_FRAGMENT||!1,nh=L.RETURN_DOM_IMPORT!==!1,sa=L.RETURN_TRUSTED_TYPE||!1,Dl=L.FORCE_BODY||!1,oh=L.SANITIZE_DOM!==!1,M=L.KEEP_CONTENT!==!1,T=L.IN_PLACE||!1,tr=L.ALLOWED_URI_REGEXP||tr,be=L.NAMESPACE||ye,me&&(qr=!1),ra&&(or=!0),E&&(oe=Fe({},[].concat(no(J_))),Kt=[],E.html===!0&&(Fe(oe,Z_),Fe(Kt,Q_)),E.svg===!0&&(Fe(oe,Rf),Fe(Kt,Nf),Fe(Kt,np)),E.svgFilters===!0&&(Fe(oe,Af),Fe(Kt,Nf),Fe(Kt,np)),E.mathMl===!0&&(Fe(oe,Ff),Fe(Kt,ew),Fe(Kt,np))),L.ADD_TAGS&&(oe===re&&(oe=Is(oe)),Fe(oe,L.ADD_TAGS)),L.ADD_ATTR&&(Kt===Pl&&(Kt=Is(Kt)),Fe(Kt,L.ADD_ATTR)),L.ADD_URI_SAFE_ATTR&&Fe(D,L.ADD_URI_SAFE_ATTR),L.FORBID_CONTENTS&&(g===y&&(g=Is(g)),Fe(g,L.FORBID_CONTENTS)),M&&(oe["#text"]=!0),nr&&Fe(oe,["html","head","body"]),oe.table&&(Fe(oe,["tbody"]),delete xn.tbody),Ei&&Ei(L),Ie=L)},at=Fe({},["mi","mo","mn","ms","mtext"]),ji=Fe({},["foreignobject","desc","title","annotation-xml"]),Je=Fe({},Rf);Fe(Je,Af),Fe(Je,d1);var Lt=Fe({},Ff);Fe(Lt,c1);var Xr=function(L){var Y=P(L);(!Y||!Y.tagName)&&(Y={namespaceURI:ye,tagName:"template"});var he=ks(L.tagName),Qe=ks(Y.tagName);if(L.namespaceURI===Z)return Y.namespaceURI===ye?he==="svg":Y.namespaceURI===te?he==="svg"&&(Qe==="annotation-xml"||at[Qe]):Boolean(Je[he]);if(L.namespaceURI===te)return Y.namespaceURI===ye?he==="math":Y.namespaceURI===Z?he==="math"&&ji[Qe]:Boolean(Lt[he]);if(L.namespaceURI===ye){if(Y.namespaceURI===Z&&!ji[Qe]||Y.namespaceURI===te&&!at[Qe])return!1;var gi=Fe({},["title","style","font","a","script"]);return!Lt[he]&&(gi[he]||!Je[he])}return!1},Li=function(L){qd(e.removed,{element:L});try{L.parentNode.removeChild(L)}catch(Y){try{L.outerHTML=ce}catch(he){L.remove()}}},Cn=function(L,Y){try{qd(e.removed,{attribute:Y.getAttributeNode(L),from:Y})}catch(he){qd(e.removed,{attribute:null,from:Y})}if(Y.removeAttribute(L),L==="is"&&!Kt[L])if(or||ra)try{Li(Y)}catch(he){}else try{Y.setAttribute(L,"")}catch(he){}},rr=function(L){var Y=void 0,he=void 0;if(Dl)L="<remove></remove>"+L;else{var Qe=X_(L,/^[\r\n\t ]+/);he=Qe&&Qe[0]}var gi=V?V.createHTML(L):L;if(be===ye)try{Y=new m().parseFromString(gi,"text/html")}catch(yi){}if(!Y||!Y.documentElement){Y=kt.createDocument(be,"template",null);try{Y.documentElement.innerHTML=je?"":gi}catch(yi){}}var fi=Y.body||Y.documentElement;return L&&he&&fi.insertBefore(i.createTextNode(he),fi.childNodes[0]||null),be===ye?nn.call(Y,nr?"html":"body")[0]:nr?Y.documentElement:fi},mo=function(L){return Wt.call(L.ownerDocument||L,L,l.SHOW_ELEMENT|l.SHOW_COMMENT|l.SHOW_TEXT,null,!1)},aa=function(L){return L instanceof h||L instanceof p?!1:typeof L.nodeName!="string"||typeof L.textContent!="string"||typeof L.removeChild!="function"||!(L.attributes instanceof d)||typeof L.removeAttribute!="function"||typeof L.setAttribute!="function"||typeof L.namespaceURI!="string"||typeof L.insertBefore!="function"},sr=function(L){return(typeof r=="undefined"?"undefined":Xd(r))==="object"?L instanceof r:L&&(typeof L=="undefined"?"undefined":Xd(L))==="object"&&typeof L.nodeType=="number"&&typeof L.nodeName=="string"},_n=function(L,Y,he){!mi[L]||r1(mi[L],function(Qe){Qe.call(e,Y,he,Ie)})},Rl=function(L){var Y=void 0;if(_n("beforeSanitizeElements",L,null),aa(L)||X_(L.nodeName,/[\u0080-\uFFFF]/))return Li(L),!0;var he=ks(L.nodeName);if(_n("uponSanitizeElement",L,{tagName:he,allowedTags:oe}),!sr(L.firstElementChild)&&(!sr(L.content)||!sr(L.content.firstElementChild))&&Oo(/<[/\w]/g,L.innerHTML)&&Oo(/<[/\w]/g,L.textContent)||he==="select"&&Oo(/<template/i,L.innerHTML))return Li(L),!0;if(!oe[he]||xn[he]){if(M&&!g[he]){var Qe=P(L)||L.parentNode,gi=R(L)||L.childNodes;if(gi&&Qe)for(var fi=gi.length,yi=fi-1;yi>=0;--yi)Qe.insertBefore(_(gi[yi],!0),w(L))}return Li(L),!0}return L instanceof a&&!Xr(L)||(he==="noscript"||he==="noembed")&&Oo(/<\/no(script|embed)/i,L.innerHTML)?(Li(L),!0):(me&&L.nodeType===3&&(Y=L.textContent,Y=Pr(Y,vn," "),Y=Pr(Y,er," "),L.textContent!==Y&&(qd(e.removed,{element:L.cloneNode()}),L.textContent=Y)),_n("afterSanitizeElements",L,null),!1)},rh=function(L,Y,he){if(oh&&(Y==="id"||Y==="name")&&(he in i||he in ae))return!1;if(!(qr&&!ir[Y]&&Oo($r,Y))){if(!(oa&&Oo(Kr,Y))){if(!Kt[Y]||ir[Y])return!1;if(!D[Y]){if(!Oo(tr,Pr(he,ih,""))){if(!((Y==="src"||Y==="xlink:href"||Y==="href")&&L!=="script"&&s1(he,"data:")===0&&C[L])){if(!(Bn&&!Oo(th,Pr(he,ih,"")))){if(he)return!1}}}}}}return!0},Qb=function(L){var Y=void 0,he=void 0,Qe=void 0,gi=void 0;_n("beforeSanitizeAttributes",L,null);var fi=L.attributes;if(!!fi){var yi={attrName:"",attrValue:"",keepAttr:!0,allowedAttributes:Kt};for(gi=fi.length;gi--;){Y=fi[gi];var go=Y,Al=go.name,eS=go.namespaceURI;if(he=a1(Y.value),Qe=ks(Al),yi.attrName=Qe,yi.attrValue=he,yi.keepAttr=!0,yi.forceKeepAttr=void 0,_n("uponSanitizeAttribute",L,yi),he=yi.attrValue,!yi.forceKeepAttr&&(Cn(Al,L),!!yi.keepAttr)){if(Oo(/\/>/i,he)){Cn(Al,L);continue}me&&(he=Pr(he,vn," "),he=Pr(he,er," "));var BL=L.nodeName.toLowerCase();if(!!rh(BL,Qe,he))try{eS?L.setAttributeNS(eS,Al,he):L.setAttribute(Al,he),q_(e.removed)}catch(FA){}}}_n("afterSanitizeAttributes",L,null)}},WL=function Se(L){var Y=void 0,he=mo(L);for(_n("beforeSanitizeShadowDOM",L,null);Y=he.nextNode();)_n("uponSanitizeShadowNode",Y,null),!Rl(Y)&&(Y.content instanceof n&&Se(Y.content),Qb(Y));_n("afterSanitizeShadowDOM",L,null)};return e.sanitize=function(Se,L){var Y=void 0,he=void 0,Qe=void 0,gi=void 0,fi=void 0;if(je=!Se,je&&(Se="<!-->"),typeof Se!="string"&&!sr(Se)){if(typeof Se.toString!="function")throw Y_("toString is not a function");if(Se=Se.toString(),typeof Se!="string")throw Y_("dirty is not a string, aborting")}if(!e.isSupported){if(Xd(s.toStaticHTML)==="object"||typeof s.toStaticHTML=="function"){if(typeof Se=="string")return s.toStaticHTML(Se);if(sr(Se))return s.toStaticHTML(Se.outerHTML)}return Se}if(Ml||gt(L),e.removed=[],typeof Se=="string"&&(T=!1),!T)if(Se instanceof r)Y=rr("<!---->"),he=Y.ownerDocument.importNode(Se,!0),he.nodeType===1&&he.nodeName==="BODY"||he.nodeName==="HTML"?Y=he:Y.appendChild(he);else{if(!or&&!me&&!nr&&Se.indexOf("<")===-1)return V&&sa?V.createHTML(Se):Se;if(Y=rr(Se),!Y)return or?null:ce}Y&&Dl&&Li(Y.firstChild);for(var yi=mo(T?Se:Y);Qe=yi.nextNode();)Qe.nodeType===3&&Qe===gi||Rl(Qe)||(Qe.content instanceof n&&WL(Qe.content),Qb(Qe),gi=Qe);if(gi=null,T)return Se;if(or){if(ra)for(fi=Bt.call(Y.ownerDocument);Y.firstChild;)fi.appendChild(Y.firstChild);else fi=Y;return nh&&(fi=Sn.call(t,fi,!0)),fi}var go=nr?Y.outerHTML:Y.innerHTML;return me&&(go=Pr(go,vn," "),go=Pr(go,er," ")),V&&sa?V.createHTML(go):go},e.setConfig=function(Se){gt(Se),Ml=!0},e.clearConfig=function(){Ie=null,Ml=!1},e.isValidAttribute=function(Se,L,Y){Ie||gt({});var he=ks(Se),Qe=ks(L);return rh(he,Qe,Y)},e.addHook=function(Se,L){typeof L=="function"&&(mi[Se]=mi[Se]||[],qd(mi[Se],L))},e.removeHook=function(Se){mi[Se]&&q_(mi[Se])},e.removeHooks=function(Se){mi[Se]&&(mi[Se]=[])},e.removeAllHooks=function(){mi={}},e}var oo=iw();var Vj=oo.version,Gj=oo.isSupported,nw=oo.sanitize,jj=oo.setConfig,Uj=oo.clearConfig,$j=oo.isValidAttribute,Of=oo.addHook,Hf=oo.removeHook,Kj=oo.removeHooks,qj=oo.removeAllHooks;cC();eP();ke();ut();Le();De();G();var ow={};(function(){function s(e,t){t(ow)}s.amd=!0,function(e,t){typeof exports=="object"&&typeof module!="undefined"?t(exports):typeof s=="function"&&s.amd?s(["exports"],t):(e=typeof globalThis!="undefined"?globalThis:e||self,t(e.marked={}))}(this,function(e){"use strict";function t(M,T){for(var E=0;E<T.length;E++){var g=T[E];g.enumerable=g.enumerable||!1,g.configurable=!0,"value"in g&&(g.writable=!0),Object.defineProperty(M,g.key,g)}}function i(M,T,E){return T&&t(M.prototype,T),E&&t(M,E),Object.defineProperty(M,"prototype",{writable:!1}),M}function n(M,T){if(!!M){if(typeof M=="string")return o(M,T);var E=Object.prototype.toString.call(M).slice(8,-1);if(E==="Object"&&M.constructor&&(E=M.constructor.name),E==="Map"||E==="Set")return Array.from(M);if(E==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(E))return o(M,T)}}function o(M,T){(T==null||T>M.length)&&(T=M.length);for(var E=0,g=new Array(T);E<T;E++)g[E]=M[E];return g}function r(M,T){var E=typeof Symbol!="undefined"&&M[Symbol.iterator]||M["@@iterator"];if(E)return(E=E.call(M)).next.bind(E);if(Array.isArray(M)||(E=n(M))||T&&M&&typeof M.length=="number"){E&&(M=E);var g=0;return function(){return g>=M.length?{done:!0}:{done:!1,value:M[g++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function a(){return{baseUrl:null,breaks:!1,extensions:null,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tokenizer:null,walkTokens:null,xhtml:!1}}e.defaults=a();function l(M){e.defaults=M}var c=/[&<>"']/,d=/[&<>"']/g,h=/[<>"']|&(?!#?\w+;)/,p=/[<>"']|&(?!#?\w+;)/g,m={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},f=function(T){return m[T]};function v(M,T){if(T){if(c.test(M))return M.replace(d,f)}else if(h.test(M))return M.replace(p,f);return M}var _=/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig;function w(M){return M.replace(_,function(T,E){return E=E.toLowerCase(),E==="colon"?":":E.charAt(0)==="#"?E.charAt(1)==="x"?String.fromCharCode(parseInt(E.substring(2),16)):String.fromCharCode(+E.substring(1)):""})}var R=/(^|[^\[])\^/g;function P(M,T){M=M.source||M,T=T||"";var E={replace:function(y,C){return C=C.source||C,C=C.replace(R,"$1"),M=M.replace(y,C),E},getRegex:function(){return new RegExp(M,T)}};return E}var B=/[^\w:]/g,V=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;function ce(M,T,E){if(M){var g;try{g=decodeURIComponent(w(E)).replace(B,"").toLowerCase()}catch(y){return null}if(g.indexOf("javascript:")===0||g.indexOf("vbscript:")===0||g.indexOf("data:")===0)return null}T&&!V.test(E)&&(E=nn(T,E));try{E=encodeURI(E).replace(/%25/g,"%")}catch(y){return null}return E}var Te={},kt=/^[^:]+:\/*[^/]*$/,Wt=/^([^:]+:)[\s\S]*$/,Bt=/^([^:]+:\/*[^/]*)[\s\S]*$/;function nn(M,T){Te[" "+M]||(kt.test(M)?Te[" "+M]=M+"/":Te[" "+M]=vn(M,"/",!0)),M=Te[" "+M];var E=M.indexOf(":")===-1;return T.substring(0,2)==="//"?E?T:M.replace(Wt,"$1")+T:T.charAt(0)==="/"?E?T:M.replace(Bt,"$1")+T:M+T}var Sn={exec:function(){}};function ti(M){for(var T=1,E,g;T<arguments.length;T++){E=arguments[T];for(g in E)Object.prototype.hasOwnProperty.call(E,g)&&(M[g]=E[g])}return M}function mi(M,T){var E=M.replace(/\|/g,function(C,x,D){for(var N=!1,te=x;--te>=0&&D[te]==="\\";)N=!N;return N?"|":" |"}),g=E.split(/ \|/),y=0;if(g[0].trim()||g.shift(),g[g.length-1].trim()||g.pop(),g.length>T)g.splice(T);else for(;g.length<T;)g.push("");for(;y<g.length;y++)g[y]=g[y].trim().replace(/\\\|/g,"|");return g}function vn(M,T,E){var g=M.length;if(g===0)return"";for(var y=0;y<g;){var C=M.charAt(g-y-1);if(C===T&&!E)y++;else if(C!==T&&E)y++;else break}return M.substr(0,g-y)}function er(M,T){if(M.indexOf(T[1])===-1)return-1;for(var E=M.length,g=0,y=0;y<E;y++)if(M[y]==="\\")y++;else if(M[y]===T[0])g++;else if(M[y]===T[1]&&(g--,g<0))return y;return-1}function $r(M){M&&M.sanitize&&!M.silent&&console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options")}function Kr(M,T){if(T<1)return"";for(var E="";T>1;)T&1&&(E+=M),T>>=1,M+=M;return E+M}function th(M,T,E,g){var y=T.href,C=T.title?v(T.title):null,x=M[1].replace(/\\([\[\]])/g,"$1");if(M[0].charAt(0)!=="!"){g.state.inLink=!0;var D={type:"link",raw:E,href:y,title:C,text:x,tokens:g.inlineTokens(x,[])};return g.state.inLink=!1,D}else return{type:"image",raw:E,href:y,title:C,text:v(x)}}function ih(M,T){var E=M.match(/^(\s+)(?:```)/);if(E===null)return T;var g=E[1];return T.split(`
`).map(function(y){var C=y.match(/^\s+/);if(C===null)return y;var x=C[0];return x.length>=g.length?y.slice(g.length):y}).join(`
`)}var tr=function(){function M(E){this.options=E||e.defaults}var T=M.prototype;return T.space=function(g){var y=this.rules.block.newline.exec(g);if(y&&y[0].length>0)return{type:"space",raw:y[0]}},T.code=function(g){var y=this.rules.block.code.exec(g);if(y){var C=y[0].replace(/^ {1,4}/gm,"");return{type:"code",raw:y[0],codeBlockStyle:"indented",text:this.options.pedantic?C:vn(C,`
`)}}},T.fences=function(g){var y=this.rules.block.fences.exec(g);if(y){var C=y[0],x=ih(C,y[3]||"");return{type:"code",raw:C,lang:y[2]?y[2].trim():y[2],text:x}}},T.heading=function(g){var y=this.rules.block.heading.exec(g);if(y){var C=y[2].trim();if(/#$/.test(C)){var x=vn(C,"#");(this.options.pedantic||!x||/ $/.test(x))&&(C=x.trim())}var D={type:"heading",raw:y[0],depth:y[1].length,text:C,tokens:[]};return this.lexer.inline(D.text,D.tokens),D}},T.hr=function(g){var y=this.rules.block.hr.exec(g);if(y)return{type:"hr",raw:y[0]}},T.blockquote=function(g){var y=this.rules.block.blockquote.exec(g);if(y){var C=y[0].replace(/^ *> ?/gm,"");return{type:"blockquote",raw:y[0],tokens:this.lexer.blockTokens(C,[]),text:C}}},T.list=function(g){var y=this.rules.block.list.exec(g);if(y){var C,x,D,N,te,Z,ye,be,je,Ie,ae,gt,at=y[1].trim(),ji=at.length>1,Je={type:"list",raw:"",ordered:ji,start:ji?+at.slice(0,-1):"",loose:!1,items:[]};at=ji?"\\d{1,9}\\"+at.slice(-1):"\\"+at,this.options.pedantic&&(at=ji?at:"[*+-]");for(var Lt=new RegExp("^( {0,3}"+at+")((?: [^\\n]*)?(?:\\n|$))");g&&(gt=!1,!(!(y=Lt.exec(g))||this.rules.block.hr.test(g)));){if(C=y[0],g=g.substring(C.length),be=y[2].split(`
`,1)[0],je=g.split(`
`,1)[0],this.options.pedantic?(N=2,ae=be.trimLeft()):(N=y[2].search(/[^ ]/),N=N>4?1:N,ae=be.slice(N),N+=y[1].length),Z=!1,!be&&/^ *$/.test(je)&&(C+=je+`
`,g=g.substring(je.length+1),gt=!0),!gt)for(var Xr=new RegExp("^ {0,"+Math.min(3,N-1)+"}(?:[*+-]|\\d{1,9}[.)])");g&&(Ie=g.split(`
`,1)[0],be=Ie,this.options.pedantic&&(be=be.replace(/^ {1,4}(?=( {4})*[^ ])/g,"  ")),!Xr.test(be));){if(be.search(/[^ ]/)>=N||!be.trim())ae+=`
`+be.slice(N);else if(!Z)ae+=`
`+be;else break;!Z&&!be.trim()&&(Z=!0),C+=Ie+`
`,g=g.substring(Ie.length+1)}Je.loose||(ye?Je.loose=!0:/\n *\n *$/.test(C)&&(ye=!0)),this.options.gfm&&(x=/^\[[ xX]\] /.exec(ae),x&&(D=x[0]!=="[ ] ",ae=ae.replace(/^\[[ xX]\] +/,""))),Je.items.push({type:"list_item",raw:C,task:!!x,checked:D,loose:!1,text:ae}),Je.raw+=C}Je.items[Je.items.length-1].raw=C.trimRight(),Je.items[Je.items.length-1].text=ae.trimRight(),Je.raw=Je.raw.trimRight();var Li=Je.items.length;for(te=0;te<Li;te++){this.lexer.state.top=!1,Je.items[te].tokens=this.lexer.blockTokens(Je.items[te].text,[]);var Cn=Je.items[te].tokens.filter(function(mo){return mo.type==="space"}),rr=Cn.every(function(mo){for(var aa=mo.raw.split(""),sr=0,_n=r(aa),Rl;!(Rl=_n()).done;){var rh=Rl.value;if(rh===`
`&&(sr+=1),sr>1)return!0}return!1});!Je.loose&&Cn.length&&rr&&(Je.loose=!0,Je.items[te].loose=!0)}return Je}},T.html=function(g){var y=this.rules.block.html.exec(g);if(y){var C={type:"html",raw:y[0],pre:!this.options.sanitizer&&(y[1]==="pre"||y[1]==="script"||y[1]==="style"),text:y[0]};return this.options.sanitize&&(C.type="paragraph",C.text=this.options.sanitizer?this.options.sanitizer(y[0]):v(y[0]),C.tokens=[],this.lexer.inline(C.text,C.tokens)),C}},T.def=function(g){var y=this.rules.block.def.exec(g);if(y){y[3]&&(y[3]=y[3].substring(1,y[3].length-1));var C=y[1].toLowerCase().replace(/\s+/g," ");return{type:"def",tag:C,raw:y[0],href:y[2],title:y[3]}}},T.table=function(g){var y=this.rules.block.table.exec(g);if(y){var C={type:"table",header:mi(y[1]).map(function(ye){return{text:ye}}),align:y[2].replace(/^ *|\| *$/g,"").split(/ *\| */),rows:y[3]?y[3].replace(/\n[ \t]*$/,"").split(`
`):[]};if(C.header.length===C.align.length){C.raw=y[0];var x=C.align.length,D,N,te,Z;for(D=0;D<x;D++)/^ *-+: *$/.test(C.align[D])?C.align[D]="right":/^ *:-+: *$/.test(C.align[D])?C.align[D]="center":/^ *:-+ *$/.test(C.align[D])?C.align[D]="left":C.align[D]=null;for(x=C.rows.length,D=0;D<x;D++)C.rows[D]=mi(C.rows[D],C.header.length).map(function(ye){return{text:ye}});for(x=C.header.length,N=0;N<x;N++)C.header[N].tokens=[],this.lexer.inlineTokens(C.header[N].text,C.header[N].tokens);for(x=C.rows.length,N=0;N<x;N++)for(Z=C.rows[N],te=0;te<Z.length;te++)Z[te].tokens=[],this.lexer.inlineTokens(Z[te].text,Z[te].tokens);return C}}},T.lheading=function(g){var y=this.rules.block.lheading.exec(g);if(y){var C={type:"heading",raw:y[0],depth:y[2].charAt(0)==="="?1:2,text:y[1],tokens:[]};return this.lexer.inline(C.text,C.tokens),C}},T.paragraph=function(g){var y=this.rules.block.paragraph.exec(g);if(y){var C={type:"paragraph",raw:y[0],text:y[1].charAt(y[1].length-1)===`
`?y[1].slice(0,-1):y[1],tokens:[]};return this.lexer.inline(C.text,C.tokens),C}},T.text=function(g){var y=this.rules.block.text.exec(g);if(y){var C={type:"text",raw:y[0],text:y[0],tokens:[]};return this.lexer.inline(C.text,C.tokens),C}},T.escape=function(g){var y=this.rules.inline.escape.exec(g);if(y)return{type:"escape",raw:y[0],text:v(y[1])}},T.tag=function(g){var y=this.rules.inline.tag.exec(g);if(y)return!this.lexer.state.inLink&&/^<a /i.test(y[0])?this.lexer.state.inLink=!0:this.lexer.state.inLink&&/^<\/a>/i.test(y[0])&&(this.lexer.state.inLink=!1),!this.lexer.state.inRawBlock&&/^<(pre|code|kbd|script)(\s|>)/i.test(y[0])?this.lexer.state.inRawBlock=!0:this.lexer.state.inRawBlock&&/^<\/(pre|code|kbd|script)(\s|>)/i.test(y[0])&&(this.lexer.state.inRawBlock=!1),{type:this.options.sanitize?"text":"html",raw:y[0],inLink:this.lexer.state.inLink,inRawBlock:this.lexer.state.inRawBlock,text:this.options.sanitize?this.options.sanitizer?this.options.sanitizer(y[0]):v(y[0]):y[0]}},T.link=function(g){var y=this.rules.inline.link.exec(g);if(y){var C=y[2].trim();if(!this.options.pedantic&&/^</.test(C)){if(!/>$/.test(C))return;var x=vn(C.slice(0,-1),"\\");if((C.length-x.length)%2===0)return}else{var D=er(y[2],"()");if(D>-1){var N=y[0].indexOf("!")===0?5:4,te=N+y[1].length+D;y[2]=y[2].substring(0,D),y[0]=y[0].substring(0,te).trim(),y[3]=""}}var Z=y[2],ye="";if(this.options.pedantic){var be=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(Z);be&&(Z=be[1],ye=be[3])}else ye=y[3]?y[3].slice(1,-1):"";return Z=Z.trim(),/^</.test(Z)&&(this.options.pedantic&&!/>$/.test(C)?Z=Z.slice(1):Z=Z.slice(1,-1)),th(y,{href:Z&&Z.replace(this.rules.inline._escapes,"$1"),title:ye&&ye.replace(this.rules.inline._escapes,"$1")},y[0],this.lexer)}},T.reflink=function(g,y){var C;if((C=this.rules.inline.reflink.exec(g))||(C=this.rules.inline.nolink.exec(g))){var x=(C[2]||C[1]).replace(/\s+/g," ");if(x=y[x.toLowerCase()],!x||!x.href){var D=C[0].charAt(0);return{type:"text",raw:D,text:D}}return th(C,x,C[0],this.lexer)}},T.emStrong=function(g,y,C){C===void 0&&(C="");var x=this.rules.inline.emStrong.lDelim.exec(g);if(!!x&&!(x[3]&&C.match(/(?:[0-9A-Za-z\xAA\xB2\xB3\xB5\xB9\xBA\xBC-\xBE\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u0660-\u0669\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07C0-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0966-\u096F\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09E6-\u09F1\u09F4-\u09F9\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A66-\u0A6F\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AE6-\u0AEF\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B66-\u0B6F\u0B71-\u0B77\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0BE6-\u0BF2\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C66-\u0C6F\u0C78-\u0C7E\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CE6-\u0CEF\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D58-\u0D61\u0D66-\u0D78\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DE6-\u0DEF\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F20-\u0F33\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F-\u1049\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u1090-\u1099\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1369-\u137C\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A16\u1A20-\u1A54\u1A80-\u1A89\u1A90-\u1A99\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B50-\u1B59\u1B83-\u1BA0\u1BAE-\u1BE5\u1C00-\u1C23\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2070\u2071\u2074-\u2079\u207F-\u2089\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2150-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2CFD\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u3192-\u3195\u31A0-\u31BF\u31F0-\u31FF\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA830-\uA835\uA840-\uA873\uA882-\uA8B3\uA8D0-\uA8D9\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA900-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF-\uA9D9\uA9E0-\uA9E4\uA9E6-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA50-\uAA59\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD07-\uDD33\uDD40-\uDD78\uDD8A\uDD8B\uDE80-\uDE9C\uDEA0-\uDED0\uDEE1-\uDEFB\uDF00-\uDF23\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC58-\uDC76\uDC79-\uDC9E\uDCA7-\uDCAF\uDCE0-\uDCF2\uDCF4\uDCF5\uDCFB-\uDD1B\uDD20-\uDD39\uDD80-\uDDB7\uDDBC-\uDDCF\uDDD2-\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE40-\uDE48\uDE60-\uDE7E\uDE80-\uDE9F\uDEC0-\uDEC7\uDEC9-\uDEE4\uDEEB-\uDEEF\uDF00-\uDF35\uDF40-\uDF55\uDF58-\uDF72\uDF78-\uDF91\uDFA9-\uDFAF]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDCFA-\uDD23\uDD30-\uDD39\uDE60-\uDE7E\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF27\uDF30-\uDF45\uDF51-\uDF54\uDF70-\uDF81\uDFB0-\uDFCB\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC52-\uDC6F\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD03-\uDD26\uDD36-\uDD3F\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDD0-\uDDDA\uDDDC\uDDE1-\uDDF4\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDEF0-\uDEF9\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC50-\uDC59\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE50-\uDE59\uDE80-\uDEAA\uDEB8\uDEC0-\uDEC9\uDF00-\uDF1A\uDF30-\uDF3B\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCF2\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDD50-\uDD59\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC50-\uDC6C\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD50-\uDD59\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDDA0-\uDDA9\uDEE0-\uDEF2\uDFB0\uDFC0-\uDFD4]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDE70-\uDEBE\uDEC0-\uDEC9\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF50-\uDF59\uDF5B-\uDF61\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE96\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD834[\uDEE0-\uDEF3\uDF60-\uDF78]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD837[\uDF00-\uDF1E]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD40-\uDD49\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB\uDEF0-\uDEF9]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDCC7-\uDCCF\uDD00-\uDD43\uDD4B\uDD50-\uDD59]|\uD83B[\uDC71-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDCB4\uDD01-\uDD2D\uDD2F-\uDD3D\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD83C[\uDD00-\uDD0C]|\uD83E[\uDFF0-\uDFF9]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])/))){var D=x[1]||x[2]||"";if(!D||D&&(C===""||this.rules.inline.punctuation.exec(C))){var N=x[0].length-1,te,Z,ye=N,be=0,je=x[0][0]==="*"?this.rules.inline.emStrong.rDelimAst:this.rules.inline.emStrong.rDelimUnd;for(je.lastIndex=0,y=y.slice(-1*g.length+N);(x=je.exec(y))!=null;)if(te=x[1]||x[2]||x[3]||x[4]||x[5]||x[6],!!te){if(Z=te.length,x[3]||x[4]){ye+=Z;continue}else if((x[5]||x[6])&&N%3&&!((N+Z)%3)){be+=Z;continue}if(ye-=Z,!(ye>0)){if(Z=Math.min(Z,Z+ye+be),Math.min(N,Z)%2){var Ie=g.slice(1,N+x.index+Z);return{type:"em",raw:g.slice(0,N+x.index+Z+1),text:Ie,tokens:this.lexer.inlineTokens(Ie,[])}}var ae=g.slice(2,N+x.index+Z-1);return{type:"strong",raw:g.slice(0,N+x.index+Z+1),text:ae,tokens:this.lexer.inlineTokens(ae,[])}}}}}},T.codespan=function(g){var y=this.rules.inline.code.exec(g);if(y){var C=y[2].replace(/\n/g," "),x=/[^ ]/.test(C),D=/^ /.test(C)&&/ $/.test(C);return x&&D&&(C=C.substring(1,C.length-1)),C=v(C,!0),{type:"codespan",raw:y[0],text:C}}},T.br=function(g){var y=this.rules.inline.br.exec(g);if(y)return{type:"br",raw:y[0]}},T.del=function(g){var y=this.rules.inline.del.exec(g);if(y)return{type:"del",raw:y[0],text:y[2],tokens:this.lexer.inlineTokens(y[2],[])}},T.autolink=function(g,y){var C=this.rules.inline.autolink.exec(g);if(C){var x,D;return C[2]==="@"?(x=v(this.options.mangle?y(C[1]):C[1]),D="mailto:"+x):(x=v(C[1]),D=x),{type:"link",raw:C[0],text:x,href:D,tokens:[{type:"text",raw:x,text:x}]}}},T.url=function(g,y){var C;if(C=this.rules.inline.url.exec(g)){var x,D;if(C[2]==="@")x=v(this.options.mangle?y(C[0]):C[0]),D="mailto:"+x;else{var N;do N=C[0],C[0]=this.rules.inline._backpedal.exec(C[0])[0];while(N!==C[0]);x=v(C[0]),C[1]==="www."?D="http://"+x:D=x}return{type:"link",raw:C[0],text:x,href:D,tokens:[{type:"text",raw:x,text:x}]}}},T.inlineText=function(g,y){var C=this.rules.inline.text.exec(g);if(C){var x;return this.lexer.state.inRawBlock?x=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(C[0]):v(C[0]):C[0]:x=v(this.options.smartypants?y(C[0]):C[0]),{type:"text",raw:C[0],text:x}}},M}(),oe={newline:/^(?: *(?:\n|$))+/,code:/^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,fences:/^ {0,3}(`{3,}(?=[^`\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?=\n|$)|$)/,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,heading:/^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( {0,3}bull)( [^\n]+?)?(?:\n|$)/,html:"^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))",def:/^ {0,3}\[(label)\]: *(?:\n *)?<?([^\s>]+)>?(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/,table:Sn,lheading:/^([^\n]+)\n {0,3}(=+|-+) *(?:\n+|$)/,_paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,text:/^[^\n]+/};oe._label=/(?!\s*\])(?:\\.|[^\[\]\\])+/,oe._title=/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/,oe.def=P(oe.def).replace("label",oe._label).replace("title",oe._title).getRegex(),oe.bullet=/(?:[*+-]|\d{1,9}[.)])/,oe.listItemStart=P(/^( *)(bull) */).replace("bull",oe.bullet).getRegex(),oe.list=P(oe.list).replace(/bull/g,oe.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+oe.def.source+")").getRegex(),oe._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",oe._comment=/<!--(?!-?>)[\s\S]*?(?:-->|$)/,oe.html=P(oe.html,"i").replace("comment",oe._comment).replace("tag",oe._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),oe.paragraph=P(oe._paragraph).replace("hr",oe.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("|table","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",oe._tag).getRegex(),oe.blockquote=P(oe.blockquote).replace("paragraph",oe.paragraph).getRegex(),oe.normal=ti({},oe),oe.gfm=ti({},oe.normal,{table:"^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)(?:\\| *)?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"}),oe.gfm.table=P(oe.gfm.table).replace("hr",oe.hr).replace("heading"," {0,3}#{1,6} ").replace("blockquote"," {0,3}>").replace("code"," {4}[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",oe._tag).getRegex(),oe.gfm.paragraph=P(oe._paragraph).replace("hr",oe.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("table",oe.gfm.table).replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",oe._tag).getRegex(),oe.pedantic=ti({},oe.normal,{html:P(`^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`).replace("comment",oe._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^(#{1,6})(.*)(?:\n+|$)/,fences:Sn,paragraph:P(oe.normal._paragraph).replace("hr",oe.hr).replace("heading",` *#{1,6} *[^
]`).replace("lheading",oe.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").getRegex()});var re={escape:/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:Sn,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(ref)\]/,nolink:/^!?\[(ref)\](?:\[\])?/,reflinkSearch:"reflink|nolink(?!\\()",emStrong:{lDelim:/^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,rDelimAst:/^[^_*]*?\_\_[^_*]*?\*[^_*]*?(?=\_\_)|[punct_](\*+)(?=[\s]|$)|[^punct*_\s](\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|[^punct*_\s](\*+)(?=[^punct*_\s])/,rDelimUnd:/^[^_*]*?\*\*[^_*]*?\_[^_*]*?(?=\*\*)|[punct*](\_+)(?=[\s]|$)|[^punct*_\s](\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/},code:/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,br:/^( {2,}|\\)\n(?!\s*$)/,del:Sn,text:/^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,punctuation:/^([\spunctuation])/};re._punctuation="!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~",re.punctuation=P(re.punctuation).replace(/punctuation/g,re._punctuation).getRegex(),re.blockSkip=/\[[^\]]*?\]\([^\)]*?\)|`[^`]*?`|<[^>]*?>/g,re.escapedEmSt=/\\\*|\\_/g,re._comment=P(oe._comment).replace("(?:-->|$)","-->").getRegex(),re.emStrong.lDelim=P(re.emStrong.lDelim).replace(/punct/g,re._punctuation).getRegex(),re.emStrong.rDelimAst=P(re.emStrong.rDelimAst,"g").replace(/punct/g,re._punctuation).getRegex(),re.emStrong.rDelimUnd=P(re.emStrong.rDelimUnd,"g").replace(/punct/g,re._punctuation).getRegex(),re._escapes=/\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g,re._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,re._email=/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,re.autolink=P(re.autolink).replace("scheme",re._scheme).replace("email",re._email).getRegex(),re._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,re.tag=P(re.tag).replace("comment",re._comment).replace("attribute",re._attribute).getRegex(),re._label=/(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,re._href=/<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/,re._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,re.link=P(re.link).replace("label",re._label).replace("href",re._href).replace("title",re._title).getRegex(),re.reflink=P(re.reflink).replace("label",re._label).replace("ref",oe._label).getRegex(),re.nolink=P(re.nolink).replace("ref",oe._label).getRegex(),re.reflinkSearch=P(re.reflinkSearch,"g").replace("reflink",re.reflink).replace("nolink",re.nolink).getRegex(),re.normal=ti({},re),re.pedantic=ti({},re.normal,{strong:{start:/^__|\*\*/,middle:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,endAst:/\*\*(?!\*)/g,endUnd:/__(?!_)/g},em:{start:/^_|\*/,middle:/^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,endAst:/\*(?!\*)/g,endUnd:/_(?!_)/g},link:P(/^!?\[(label)\]\((.*?)\)/).replace("label",re._label).getRegex(),reflink:P(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",re._label).getRegex()}),re.gfm=ti({},re.normal,{escape:P(re.escape).replace("])","~|])").getRegex(),_extended_email:/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,url:/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,_backpedal:/(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/}),re.gfm.url=P(re.gfm.url,"i").replace("email",re.gfm._extended_email).getRegex(),re.breaks=ti({},re.gfm,{br:P(re.br).replace("{2,}","*").getRegex(),text:P(re.gfm.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()});function Kt(M){return M.replace(/---/g,"\u2014").replace(/--/g,"\u2013").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1\u2018").replace(/'/g,"\u2019").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1\u201C").replace(/"/g,"\u201D").replace(/\.{3}/g,"\u2026")}function Pl(M){var T="",E,g,y=M.length;for(E=0;E<y;E++)g=M.charCodeAt(E),Math.random()>.5&&(g="x"+g.toString(16)),T+="&#"+g+";";return T}var xn=function(){function M(E){this.tokens=[],this.tokens.links=Object.create(null),this.options=E||e.defaults,this.options.tokenizer=this.options.tokenizer||new tr,this.tokenizer=this.options.tokenizer,this.tokenizer.options=this.options,this.tokenizer.lexer=this,this.inlineQueue=[],this.state={inLink:!1,inRawBlock:!1,top:!0};var g={block:oe.normal,inline:re.normal};this.options.pedantic?(g.block=oe.pedantic,g.inline=re.pedantic):this.options.gfm&&(g.block=oe.gfm,this.options.breaks?g.inline=re.breaks:g.inline=re.gfm),this.tokenizer.rules=g}M.lex=function(g,y){var C=new M(y);return C.lex(g)},M.lexInline=function(g,y){var C=new M(y);return C.inlineTokens(g)};var T=M.prototype;return T.lex=function(g){g=g.replace(/\r\n|\r/g,`
`).replace(/\t/g,"    "),this.blockTokens(g,this.tokens);for(var y;y=this.inlineQueue.shift();)this.inlineTokens(y.src,y.tokens);return this.tokens},T.blockTokens=function(g,y){var C=this;y===void 0&&(y=[]),this.options.pedantic&&(g=g.replace(/^ +$/gm,""));for(var x,D,N,te;g;)if(!(this.options.extensions&&this.options.extensions.block&&this.options.extensions.block.some(function(ye){return(x=ye.call({lexer:C},g,y))?(g=g.substring(x.raw.length),y.push(x),!0):!1}))){if(x=this.tokenizer.space(g)){g=g.substring(x.raw.length),x.raw.length===1&&y.length>0?y[y.length-1].raw+=`
`:y.push(x);continue}if(x=this.tokenizer.code(g)){g=g.substring(x.raw.length),D=y[y.length-1],D&&(D.type==="paragraph"||D.type==="text")?(D.raw+=`
`+x.raw,D.text+=`
`+x.text,this.inlineQueue[this.inlineQueue.length-1].src=D.text):y.push(x);continue}if(x=this.tokenizer.fences(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.heading(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.hr(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.blockquote(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.list(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.html(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.def(g)){g=g.substring(x.raw.length),D=y[y.length-1],D&&(D.type==="paragraph"||D.type==="text")?(D.raw+=`
`+x.raw,D.text+=`
`+x.raw,this.inlineQueue[this.inlineQueue.length-1].src=D.text):this.tokens.links[x.tag]||(this.tokens.links[x.tag]={href:x.href,title:x.title});continue}if(x=this.tokenizer.table(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.lheading(g)){g=g.substring(x.raw.length),y.push(x);continue}if(N=g,this.options.extensions&&this.options.extensions.startBlock&&function(){var ye=1/0,be=g.slice(1),je=void 0;C.options.extensions.startBlock.forEach(function(Ie){je=Ie.call({lexer:this},be),typeof je=="number"&&je>=0&&(ye=Math.min(ye,je))}),ye<1/0&&ye>=0&&(N=g.substring(0,ye+1))}(),this.state.top&&(x=this.tokenizer.paragraph(N))){D=y[y.length-1],te&&D.type==="paragraph"?(D.raw+=`
`+x.raw,D.text+=`
`+x.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=D.text):y.push(x),te=N.length!==g.length,g=g.substring(x.raw.length);continue}if(x=this.tokenizer.text(g)){g=g.substring(x.raw.length),D=y[y.length-1],D&&D.type==="text"?(D.raw+=`
`+x.raw,D.text+=`
`+x.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=D.text):y.push(x);continue}if(g){var Z="Infinite loop on byte: "+g.charCodeAt(0);if(this.options.silent){console.error(Z);break}else throw new Error(Z)}}return this.state.top=!0,y},T.inline=function(g,y){this.inlineQueue.push({src:g,tokens:y})},T.inlineTokens=function(g,y){var C=this;y===void 0&&(y=[]);var x,D,N,te=g,Z,ye,be;if(this.tokens.links){var je=Object.keys(this.tokens.links);if(je.length>0)for(;(Z=this.tokenizer.rules.inline.reflinkSearch.exec(te))!=null;)je.includes(Z[0].slice(Z[0].lastIndexOf("[")+1,-1))&&(te=te.slice(0,Z.index)+"["+Kr("a",Z[0].length-2)+"]"+te.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))}for(;(Z=this.tokenizer.rules.inline.blockSkip.exec(te))!=null;)te=te.slice(0,Z.index)+"["+Kr("a",Z[0].length-2)+"]"+te.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);for(;(Z=this.tokenizer.rules.inline.escapedEmSt.exec(te))!=null;)te=te.slice(0,Z.index)+"++"+te.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);for(;g;)if(ye||(be=""),ye=!1,!(this.options.extensions&&this.options.extensions.inline&&this.options.extensions.inline.some(function(ae){return(x=ae.call({lexer:C},g,y))?(g=g.substring(x.raw.length),y.push(x),!0):!1}))){if(x=this.tokenizer.escape(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.tag(g)){g=g.substring(x.raw.length),D=y[y.length-1],D&&x.type==="text"&&D.type==="text"?(D.raw+=x.raw,D.text+=x.text):y.push(x);continue}if(x=this.tokenizer.link(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.reflink(g,this.tokens.links)){g=g.substring(x.raw.length),D=y[y.length-1],D&&x.type==="text"&&D.type==="text"?(D.raw+=x.raw,D.text+=x.text):y.push(x);continue}if(x=this.tokenizer.emStrong(g,te,be)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.codespan(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.br(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.del(g)){g=g.substring(x.raw.length),y.push(x);continue}if(x=this.tokenizer.autolink(g,Pl)){g=g.substring(x.raw.length),y.push(x);continue}if(!this.state.inLink&&(x=this.tokenizer.url(g,Pl))){g=g.substring(x.raw.length),y.push(x);continue}if(N=g,this.options.extensions&&this.options.extensions.startInline&&function(){var ae=1/0,gt=g.slice(1),at=void 0;C.options.extensions.startInline.forEach(function(ji){at=ji.call({lexer:this},gt),typeof at=="number"&&at>=0&&(ae=Math.min(ae,at))}),ae<1/0&&ae>=0&&(N=g.substring(0,ae+1))}(),x=this.tokenizer.inlineText(N,Kt)){g=g.substring(x.raw.length),x.raw.slice(-1)!=="_"&&(be=x.raw.slice(-1)),ye=!0,D=y[y.length-1],D&&D.type==="text"?(D.raw+=x.raw,D.text+=x.text):y.push(x);continue}if(g){var Ie="Infinite loop on byte: "+g.charCodeAt(0);if(this.options.silent){console.error(Ie);break}else throw new Error(Ie)}}return y},i(M,null,[{key:"rules",get:function(){return{block:oe,inline:re}}}]),M}(),ir=function(){function M(E){this.options=E||e.defaults}var T=M.prototype;return T.code=function(g,y,C){var x=(y||"").match(/\S*/)[0];if(this.options.highlight){var D=this.options.highlight(g,x);D!=null&&D!==g&&(C=!0,g=D)}return g=g.replace(/\n$/,"")+`
`,x?'<pre><code class="'+this.options.langPrefix+v(x,!0)+'">'+(C?g:v(g,!0))+`</code></pre>
`:"<pre><code>"+(C?g:v(g,!0))+`</code></pre>
`},T.blockquote=function(g){return`<blockquote>
`+g+`</blockquote>
`},T.html=function(g){return g},T.heading=function(g,y,C,x){return this.options.headerIds?"<h"+y+' id="'+this.options.headerPrefix+x.slug(C)+'">'+g+"</h"+y+`>
`:"<h"+y+">"+g+"</h"+y+`>
`},T.hr=function(){return this.options.xhtml?`<hr/>
`:`<hr>
`},T.list=function(g,y,C){var x=y?"ol":"ul",D=y&&C!==1?' start="'+C+'"':"";return"<"+x+D+`>
`+g+"</"+x+`>
`},T.listitem=function(g){return"<li>"+g+`</li>
`},T.checkbox=function(g){return"<input "+(g?'checked="" ':"")+'disabled="" type="checkbox"'+(this.options.xhtml?" /":"")+"> "},T.paragraph=function(g){return"<p>"+g+`</p>
`},T.table=function(g,y){return y&&(y="<tbody>"+y+"</tbody>"),`<table>
<thead>
`+g+`</thead>
`+y+`</table>
`},T.tablerow=function(g){return`<tr>
`+g+`</tr>
`},T.tablecell=function(g,y){var C=y.header?"th":"td",x=y.align?"<"+C+' align="'+y.align+'">':"<"+C+">";return x+g+"</"+C+`>
`},T.strong=function(g){return"<strong>"+g+"</strong>"},T.em=function(g){return"<em>"+g+"</em>"},T.codespan=function(g){return"<code>"+g+"</code>"},T.br=function(){return this.options.xhtml?"<br/>":"<br>"},T.del=function(g){return"<del>"+g+"</del>"},T.link=function(g,y,C){if(g=ce(this.options.sanitize,this.options.baseUrl,g),g===null)return C;var x='<a href="'+v(g)+'"';return y&&(x+=' title="'+y+'"'),x+=">"+C+"</a>",x},T.image=function(g,y,C){if(g=ce(this.options.sanitize,this.options.baseUrl,g),g===null)return C;var x='<img src="'+g+'" alt="'+C+'"';return y&&(x+=' title="'+y+'"'),x+=this.options.xhtml?"/>":">",x},T.text=function(g){return g},M}(),oa=function(){function M(){}var T=M.prototype;return T.strong=function(g){return g},T.em=function(g){return g},T.codespan=function(g){return g},T.del=function(g){return g},T.html=function(g){return g},T.text=function(g){return g},T.link=function(g,y,C){return""+C},T.image=function(g,y,C){return""+C},T.br=function(){return""},M}(),qr=function(){function M(){this.seen={}}var T=M.prototype;return T.serialize=function(g){return g.toLowerCase().trim().replace(/<[!\/a-z].*?>/ig,"").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g,"").replace(/\s/g,"-")},T.getNextSafeSlug=function(g,y){var C=g,x=0;if(this.seen.hasOwnProperty(C)){x=this.seen[g];do x++,C=g+"-"+x;while(this.seen.hasOwnProperty(C))}return y||(this.seen[g]=x,this.seen[C]=0),C},T.slug=function(g,y){y===void 0&&(y={});var C=this.serialize(g);return this.getNextSafeSlug(C,y.dryrun)},M}(),Bn=function(){function M(E){this.options=E||e.defaults,this.options.renderer=this.options.renderer||new ir,this.renderer=this.options.renderer,this.renderer.options=this.options,this.textRenderer=new oa,this.slugger=new qr}M.parse=function(g,y){var C=new M(y);return C.parse(g)},M.parseInline=function(g,y){var C=new M(y);return C.parseInline(g)};var T=M.prototype;return T.parse=function(g,y){y===void 0&&(y=!0);var C="",x,D,N,te,Z,ye,be,je,Ie,ae,gt,at,ji,Je,Lt,Xr,Li,Cn,rr,mo=g.length;for(x=0;x<mo;x++){if(ae=g[x],this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[ae.type]&&(rr=this.options.extensions.renderers[ae.type].call({parser:this},ae),rr!==!1||!["space","hr","heading","code","table","blockquote","list","html","paragraph","text"].includes(ae.type))){C+=rr||"";continue}switch(ae.type){case"space":continue;case"hr":{C+=this.renderer.hr();continue}case"heading":{C+=this.renderer.heading(this.parseInline(ae.tokens),ae.depth,w(this.parseInline(ae.tokens,this.textRenderer)),this.slugger);continue}case"code":{C+=this.renderer.code(ae.text,ae.lang,ae.escaped);continue}case"table":{for(je="",be="",te=ae.header.length,D=0;D<te;D++)be+=this.renderer.tablecell(this.parseInline(ae.header[D].tokens),{header:!0,align:ae.align[D]});for(je+=this.renderer.tablerow(be),Ie="",te=ae.rows.length,D=0;D<te;D++){for(ye=ae.rows[D],be="",Z=ye.length,N=0;N<Z;N++)be+=this.renderer.tablecell(this.parseInline(ye[N].tokens),{header:!1,align:ae.align[N]});Ie+=this.renderer.tablerow(be)}C+=this.renderer.table(je,Ie);continue}case"blockquote":{Ie=this.parse(ae.tokens),C+=this.renderer.blockquote(Ie);continue}case"list":{for(gt=ae.ordered,at=ae.start,ji=ae.loose,te=ae.items.length,Ie="",D=0;D<te;D++)Lt=ae.items[D],Xr=Lt.checked,Li=Lt.task,Je="",Lt.task&&(Cn=this.renderer.checkbox(Xr),ji?Lt.tokens.length>0&&Lt.tokens[0].type==="paragraph"?(Lt.tokens[0].text=Cn+" "+Lt.tokens[0].text,Lt.tokens[0].tokens&&Lt.tokens[0].tokens.length>0&&Lt.tokens[0].tokens[0].type==="text"&&(Lt.tokens[0].tokens[0].text=Cn+" "+Lt.tokens[0].tokens[0].text)):Lt.tokens.unshift({type:"text",text:Cn}):Je+=Cn),Je+=this.parse(Lt.tokens,ji),Ie+=this.renderer.listitem(Je,Li,Xr);C+=this.renderer.list(Ie,gt,at);continue}case"html":{C+=this.renderer.html(ae.text);continue}case"paragraph":{C+=this.renderer.paragraph(this.parseInline(ae.tokens));continue}case"text":{for(Ie=ae.tokens?this.parseInline(ae.tokens):ae.text;x+1<mo&&g[x+1].type==="text";)ae=g[++x],Ie+=`
`+(ae.tokens?this.parseInline(ae.tokens):ae.text);C+=y?this.renderer.paragraph(Ie):Ie;continue}default:{var aa='Token with "'+ae.type+'" type was not found.';if(this.options.silent){console.error(aa);return}else throw new Error(aa)}}}return C},T.parseInline=function(g,y){y=y||this.renderer;var C="",x,D,N,te=g.length;for(x=0;x<te;x++){if(D=g[x],this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[D.type]&&(N=this.options.extensions.renderers[D.type].call({parser:this},D),N!==!1||!["escape","html","link","image","strong","em","codespan","br","del","text"].includes(D.type))){C+=N||"";continue}switch(D.type){case"escape":{C+=y.text(D.text);break}case"html":{C+=y.html(D.text);break}case"link":{C+=y.link(D.href,D.title,this.parseInline(D.tokens,y));break}case"image":{C+=y.image(D.href,D.title,D.text);break}case"strong":{C+=y.strong(this.parseInline(D.tokens,y));break}case"em":{C+=y.em(this.parseInline(D.tokens,y));break}case"codespan":{C+=y.codespan(D.text);break}case"br":{C+=y.br();break}case"del":{C+=y.del(this.parseInline(D.tokens,y));break}case"text":{C+=y.text(D.text);break}default:{var Z='Token with "'+D.type+'" type was not found.';if(this.options.silent){console.error(Z);return}else throw new Error(Z)}}}return C},M}();function me(M,T,E){if(typeof M=="undefined"||M===null)throw new Error("marked(): input parameter is undefined or null");if(typeof M!="string")throw new Error("marked(): input parameter is of type "+Object.prototype.toString.call(M)+", string expected");if(typeof T=="function"&&(E=T,T=null),T=ti({},me.defaults,T||{}),$r(T),E){var g=T.highlight,y;try{y=xn.lex(M,T)}catch(N){return E(N)}var C=function(te){var Z;if(!te)try{T.walkTokens&&me.walkTokens(y,T.walkTokens),Z=Bn.parse(y,T)}catch(ye){te=ye}return T.highlight=g,te?E(te):E(null,Z)};if(!g||g.length<3||(delete T.highlight,!y.length))return C();var x=0;me.walkTokens(y,function(N){N.type==="code"&&(x++,setTimeout(function(){g(N.text,N.lang,function(te,Z){if(te)return C(te);Z!=null&&Z!==N.text&&(N.text=Z,N.escaped=!0),x--,x===0&&C()})},0))}),x===0&&C();return}try{var D=xn.lex(M,T);return T.walkTokens&&me.walkTokens(D,T.walkTokens),Bn.parse(D,T)}catch(N){if(N.message+=`
Please report this to https://github.com/markedjs/marked.`,T.silent)return"<p>An error occurred:</p><pre>"+v(N.message+"",!0)+"</pre>";throw N}}me.options=me.setOptions=function(M){return ti(me.defaults,M),l(me.defaults),me},me.getDefaults=a,me.defaults=e.defaults,me.use=function(){for(var M=arguments.length,T=new Array(M),E=0;E<M;E++)T[E]=arguments[E];var g=ti.apply(void 0,[{}].concat(T)),y=me.defaults.extensions||{renderers:{},childTokens:{}},C;T.forEach(function(x){if(x.extensions&&(C=!0,x.extensions.forEach(function(N){if(!N.name)throw new Error("extension name required");if(N.renderer){var te=y.renderers?y.renderers[N.name]:null;te?y.renderers[N.name]=function(){for(var Z=arguments.length,ye=new Array(Z),be=0;be<Z;be++)ye[be]=arguments[be];var je=N.renderer.apply(this,ye);return je===!1&&(je=te.apply(this,ye)),je}:y.renderers[N.name]=N.renderer}if(N.tokenizer){if(!N.level||N.level!=="block"&&N.level!=="inline")throw new Error("extension level must be 'block' or 'inline'");y[N.level]?y[N.level].unshift(N.tokenizer):y[N.level]=[N.tokenizer],N.start&&(N.level==="block"?y.startBlock?y.startBlock.push(N.start):y.startBlock=[N.start]:N.level==="inline"&&(y.startInline?y.startInline.push(N.start):y.startInline=[N.start]))}N.childTokens&&(y.childTokens[N.name]=N.childTokens)})),x.renderer&&function(){var N=me.defaults.renderer||new ir,te=function(be){var je=N[be];N[be]=function(){for(var Ie=arguments.length,ae=new Array(Ie),gt=0;gt<Ie;gt++)ae[gt]=arguments[gt];var at=x.renderer[be].apply(N,ae);return at===!1&&(at=je.apply(N,ae)),at}};for(var Z in x.renderer)te(Z);g.renderer=N}(),x.tokenizer&&function(){var N=me.defaults.tokenizer||new tr,te=function(be){var je=N[be];N[be]=function(){for(var Ie=arguments.length,ae=new Array(Ie),gt=0;gt<Ie;gt++)ae[gt]=arguments[gt];var at=x.tokenizer[be].apply(N,ae);return at===!1&&(at=je.apply(N,ae)),at}};for(var Z in x.tokenizer)te(Z);g.tokenizer=N}(),x.walkTokens){var D=me.defaults.walkTokens;g.walkTokens=function(N){x.walkTokens.call(this,N),D&&D.call(this,N)}}C&&(g.extensions=y),me.setOptions(g)})},me.walkTokens=function(M,T){for(var E=function(){var x=y.value;switch(T.call(me,x),x.type){case"table":{for(var D=r(x.header),N;!(N=D()).done;){var te=N.value;me.walkTokens(te.tokens,T)}for(var Z=r(x.rows),ye;!(ye=Z()).done;)for(var be=ye.value,je=r(be),Ie;!(Ie=je()).done;){var ae=Ie.value;me.walkTokens(ae.tokens,T)}break}case"list":{me.walkTokens(x.items,T);break}default:me.defaults.extensions&&me.defaults.extensions.childTokens&&me.defaults.extensions.childTokens[x.type]?me.defaults.extensions.childTokens[x.type].forEach(function(gt){me.walkTokens(x[gt],T)}):x.tokens&&me.walkTokens(x.tokens,T)}},g=r(M),y;!(y=g()).done;)E()},me.parseInline=function(M,T){if(typeof M=="undefined"||M===null)throw new Error("marked.parseInline(): input parameter is undefined or null");if(typeof M!="string")throw new Error("marked.parseInline(): input parameter is of type "+Object.prototype.toString.call(M)+", string expected");T=ti({},me.defaults,T||{}),$r(T);try{var E=xn.lexInline(M,T);return T.walkTokens&&me.walkTokens(E,T.walkTokens),Bn.parseInline(E,T)}catch(g){if(g.message+=`
Please report this to https://github.com/markedjs/marked.`,T.silent)return"<p>An error occurred:</p><pre>"+v(g.message+"",!0)+"</pre>";throw g}},me.Parser=Bn,me.parser=Bn.parse,me.Renderer=ir,me.TextRenderer=oa,me.Lexer=xn,me.lexer=xn.lex,me.Tokenizer=tr,me.Slugger=qr,me.parse=me;var nr=me.options,Ml=me.setOptions,Dl=me.use,or=me.walkTokens,ra=me.parseInline,nh=me,sa=Bn.parse,oh=xn.lex;e.Lexer=xn,e.Parser=Bn,e.Renderer=ir,e.Slugger=qr,e.TextRenderer=oa,e.Tokenizer=tr,e.getDefaults=a,e.lexer=oh,e.marked=me,e.options=nr,e.parse=nh,e.parseInline=ra,e.parser=sa,e.setOptions=Ml,e.use=Dl,e.walkTokens=or,Object.defineProperty(e,"__esModule",{value:!0})})})();var Wf=ow||exports;Yl();mh();Hi();Ye();Xt();function sw(s,e={},t={}){var i;let n=new A,o=!1,r=n.add(new Ft),a=dC(e),l=function(w){let R;try{R=Qx(decodeURIComponent(w))}catch(P){}return R?(R=mS(R,P=>{if(s.uris&&s.uris[P])return _e.revive(s.uris[P])}),encodeURIComponent(JSON.stringify(R))):w},c=function(w,R){let P=s.uris&&s.uris[w],B=_e.revive(P);return R?w.startsWith(Ct.data+":")?w:(B||(B=_e.parse(w)),lv.asBrowserUri(B).toString(!0)):!B||_e.parse(w).toString()===B.toString()?w:(B.query&&(B=B.with({query:l(B.query)})),B.toString())},d,h=new Promise(w=>d=w),p=new Wf.Renderer;if(p.image=(w,R,P)=>{let B=[],V=[];return w&&({href:w,dimensions:B}=uC(w),V.push(`src="${w}"`)),P&&V.push(`alt="${P}"`),R&&V.push(`title="${R}"`),B.length&&(V=V.concat(B)),"<img "+V.join(" ")+">"},p.link=(w,R,P)=>typeof w!="string"?"":(w===P&&(P=Su(P)),w=c(w,!1),e.baseUrl&&(/^\w[\w\d+.-]*:/.test(w)||(w=tg(e.baseUrl,w).toString())),R=typeof R=="string"?Su(R):"",w=Su(w),!w||w.match(/^data:|javascript:/i)||w.match(/^command:/i)&&!s.isTrusted||w.match(/^command:(\/\/\/)?_workbench\.downloadResource/i)?P:(w=w.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;"),`<a data-href="${w}" title="${R||w}">${P}</a>`)),p.paragraph=w=>`<p>${w}</p>`,e.codeBlockRenderer&&(p.code=(w,R)=>{if(typeof R!="string")return"";let P=e.codeBlockRenderer(R,w),B=yu.nextId();return ha(Promise.all([P,h]),r.token).then(V=>{var ce;if(!o&&V){let Te=a.querySelector(`div[data-code="${B}"]`);Te&&rs(Te,V[0]),(ce=e.asyncRenderCallback)===null||ce===void 0||ce.call(e)}}).catch(()=>{}),`<div class="code" data-code="${B}">${TS(w)}</div>`}),e.actionHandler){let w=e.actionHandler.disposables.add(new cs(a,"click")),R=e.actionHandler.disposables.add(new cs(a,"auxclick"));e.actionHandler.disposables.add(ht.any(w.event,R.event)(P=>{let B=new av(P);if(!B.leftButton&&!B.middleButton)return;let V=B.target;if(!(V.tagName!=="A"&&(V=V.parentElement,!V||V.tagName!=="A")))try{let ce=V.dataset.href;ce&&e.actionHandler.callback(ce,B)}catch(ce){de(ce)}finally{B.preventDefault()}}))}s.supportHtml||(t.sanitizer=w=>(s.isTrusted?w.match(/^(<span[^>]+>)|(<\/\s*span>)$/):void 0)?w:"",t.sanitize=!0,t.silent=!0),t.renderer=p;let m=(i=s.value)!==null&&i!==void 0?i:"";m.length>1e5&&(m=`${m.substr(0,1e5)}\u2026`),s.supportThemeIcons&&(m=Xx(m));let f=Wf.parse(m,t);s.supportThemeIcons&&(f=fu(f).map(R=>typeof R=="string"?R:R.outerHTML).join(""));let _=new DOMParser().parseFromString(rw(s,f),"text/html");if(_.body.querySelectorAll("img").forEach(w=>{if(w.src){let R=c(w.src,!0);try{let P=_e.parse(R);e.baseUrl&&P.scheme===Ct.file&&(R=tg(e.baseUrl,R).toString())}catch(P){}w.src=R}}),a.innerHTML=rw(s,_.body.innerHTML),d(),e.asyncRenderCallback)for(let w of a.getElementsByTagName("img")){let R=n.add(Ke(w,"load",()=>{R.dispose(),e.asyncRenderCallback()}))}return{element:a,dispose:()=>{o=!0,r.cancel(),n.dispose()}}}function rw(s,e){let{config:t,allowedSchemes:i}=x1(s);Of("uponSanitizeAttribute",(o,r)=>{if(r.attrName==="style"||r.attrName==="class"){if(o.tagName==="SPAN"){if(r.attrName==="style"){r.keepAttr=/^(color\:#[0-9a-fA-F]+;)?(background-color\:#[0-9a-fA-F]+;)?$/.test(r.attrValue);return}else if(r.attrName==="class"){r.keepAttr=/^codicon codicon-[a-z\-]+( codicon-modifier-[a-z\-]+)?$/.test(r.attrValue);return}}r.keepAttr=!1;return}});let n=document.createElement("a");Of("afterSanitizeAttributes",o=>{for(let r of["href","src"])o.hasAttribute(r)&&(n.href=o.getAttribute(r),i.includes(n.protocol.replace(/:$/,""))||o.removeAttribute(r))});try{return nw(e,Object.assign(Object.assign({},t),{RETURN_TRUSTED_TYPE:!0}))}finally{Hf("uponSanitizeAttribute"),Hf("afterSanitizeAttributes")}}function x1(s){let e=[Ct.http,Ct.https,Ct.mailto,Ct.data,Ct.file,Ct.vscodeFileResource,Ct.vscodeRemote,Ct.vscodeRemoteResource];return s.isTrusted&&e.push(Ct.command),{config:{ALLOWED_TAGS:["ul","li","p","b","i","code","blockquote","ol","h1","h2","h3","h4","h5","h6","hr","em","pre","table","thead","tbody","tr","th","td","div","del","a","strong","br","img","span"],ALLOWED_ATTR:["href","data-href","target","title","src","alt","class","style","data-code","width","height","align"],ALLOW_UNKNOWN_PROTOCOLS:!0},allowedSchemes:e}}qi();rn();Le();De();G();ig();var C1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},aw=function(s,e){return function(t,i){e(t,i,s)}},_1=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Bf,Ii=class lw{constructor(e,t,i){this._options=e,this._languageService=t,this._openerService=i,this._onDidRenderAsync=new j,this.onDidRenderAsync=this._onDidRenderAsync.event}dispose(){this._onDidRenderAsync.dispose()}render(e,t,i){if(!e)return{element:document.createElement("span"),dispose:()=>{}};let n=new A;return{element:n.add(sw(e,Object.assign(Object.assign({},this._getRenderOptions(e,n)),t),i)).element,dispose:()=>n.dispose()}}_getRenderOptions(e,t){return{baseUrl:this._options.baseUrl,codeBlockRenderer:(i,n)=>_1(this,void 0,void 0,function*(){var o,r,a;let l;i?l=this._languageService.getLanguageIdByLanguageName(i):this._options.editor&&(l=(o=this._options.editor.getModel())===null||o===void 0?void 0:o.getLanguageId()),l||(l=za);let c=yield Ax(this._languageService,n,l),d=document.createElement("span");if(d.innerHTML=(a=(r=lw._ttpTokenizer)===null||r===void 0?void 0:r.createHTML(c))!==null&&a!==void 0?a:c,this._options.editor){let h=this._options.editor.getOption(44);ql(d,h)}else this._options.codeBlockFontFamily&&(d.style.fontFamily=this._options.codeBlockFontFamily);return d}),asyncRenderCallback:()=>this._onDidRenderAsync.fire(),actionHandler:{callback:i=>this._openerService.open(i,{fromUserGesture:!0,allowContributedOpeners:!0,allowCommands:e.isTrusted}).catch(de),disposables:t}}}};Ii._ttpTokenizer=(Bf=window.trustedTypes)===null||Bf===void 0?void 0:Bf.createPolicy("tokenizeToString",{createHTML(s){return s}});Ii=C1([aw(1,ft),aw(2,bt)],Ii);tt();ee();Re();rn();ke();ut();Le();ue();Re();var w1=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},dw=class{constructor(e,t,i){this.provider=e,this.hover=t,this.ordinal=i}};function T1(s,e,t,i,n){return w1(this,void 0,void 0,function*(){try{let o=yield Promise.resolve(s.provideHover(t,i,n));if(o&&I1(o))return new dw(s,o,e)}catch(o){Ue(o)}})}function Yd(s,e,t){let n=ba.ordered(s).map((o,r)=>T1(o,r,s,e,t));return Si.fromPromises(n).coalesce()}function E1(s,e,t){return Yd(s,e,t).map(i=>i.hover).toPromise()}wi("_executeHoverProvider",(s,e)=>E1(s,e,ge.None));function I1(s){let e=typeof s.range!="undefined",t=typeof s.contents!="undefined"&&s.contents&&s.contents.length>0;return e&&t}Q();kn();qi();var k1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Vf=function(s,e){return function(t,i){e(t,i,s)}},cw=W,Fn=class{constructor(e,t,i,n){this.owner=e,this.range=t,this.contents=i,this.ordinal=n}isValidForHoverAnchor(e){return e.type===1&&this.range.startColumn<=e.range.startColumn&&this.range.endColumn>=e.range.endColumn}},Ka=class{constructor(e,t,i,n){this._editor=e,this._languageService=t,this._openerService=i,this._configurationService=n}createLoadingMessage(e){return new Fn(this,e.range,[new ai().appendText(u("modesContentHover.loading","Loading..."))],2e3)}computeSync(e,t){if(!this._editor.hasModel()||e.type!==1)return[];let i=this._editor.getModel(),n=e.range.startLineNumber,o=i.getLineMaxColumn(n),r=[],a=1e3,l=i.getLineLength(n),c=i.getLanguageIdAtPosition(e.range.startLineNumber,e.range.startColumn),d=this._configurationService.getValue("editor.maxTokenizationLineLength",{overrideIdentifier:c});typeof d=="number"&&l>=d&&r.push(new Fn(this,e.range,[{value:u("too many characters","Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.")}],a++));for(let h of t){let p=h.range.startLineNumber===n?h.range.startColumn:1,m=h.range.endLineNumber===n?h.range.endColumn:o,f=h.options.hoverMessage;if(!f||_r(f))continue;let v=new b(e.range.startLineNumber,p,e.range.startLineNumber,m);r.push(new Fn(this,v,hh(f),a++))}return r}computeAsync(e,t,i){if(!this._editor.hasModel()||e.type!==1)return Si.EMPTY;let n=this._editor.getModel();if(!ba.has(n))return Si.EMPTY;let o=new U(e.range.startLineNumber,e.range.startColumn);return Yd(n,o,i).filter(r=>!_r(r.hover.contents)).map(r=>{let a=r.hover.range?b.lift(r.hover.range):e.range;return new Fn(this,a,r.hover.contents,r.ordinal)})}renderHoverParts(e,t){return Gf(e,t,this._editor,this._languageService,this._openerService)}};Ka=k1([Vf(1,ft),Vf(2,bt),Vf(3,it)],Ka);function Gf(s,e,t,i,n){e.sort((r,a)=>r.ordinal-a.ordinal);let o=new A;for(let r of e)for(let a of r.contents){if(_r(a))continue;let l=cw("div.hover-row.markdown-hover"),c=H(l,cw("div.hover-contents")),d=o.add(new Ii({editor:t},i,n));o.add(d.onDidRenderAsync(()=>{c.className="hover-contents code-hover-contents",s.onContentsChanged()}));let h=o.add(d.render(a));c.appendChild(h.element),s.fragment.appendChild(l)}return o}Ae();vt();ke();Le();G();Hi();ee();xi();G();ue();Ci();tt();ee();He();vt();De();G();bS();Ye();Xt();ee();ns();Be();kn();var hw=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},rp=function(s,e){return function(t,i){e(t,i,s)}},jf=class{constructor(e,t,i){this.marker=e,this.index=t,this.total=i}},Uf=class{constructor(e,t,i){this._markerService=t,this._configService=i,this._onDidChange=new j,this.onDidChange=this._onDidChange.event,this._dispoables=new A,this._markers=[],this._nextIdx=-1,_e.isUri(e)?this._resourceFilter=a=>a.toString()===e.toString():e&&(this._resourceFilter=e);let n=this._configService.getValue("problems.sortOrder"),o=(a,l)=>{let c=km(a.resource.toString(),l.resource.toString());return n==="position"?c=b.compareRangesUsingStarts(a,l)||zt.compare(a.severity,l.severity):c=zt.compare(a.severity,l.severity)||b.compareRangesUsingStarts(a,l),c},r=()=>{this._markers=this._markerService.read({resource:_e.isUri(e)?e:void 0,severities:zt.Error|zt.Warning|zt.Info}),typeof e=="function"&&(this._markers=this._markers.filter(a=>this._resourceFilter(a.resource))),this._markers.sort(o)};r(),this._dispoables.add(t.onMarkerChanged(a=>{(!this._resourceFilter||a.some(l=>this._resourceFilter(l)))&&(r(),this._nextIdx=-1,this._onDidChange.fire())}))}dispose(){this._dispoables.dispose(),this._onDidChange.dispose()}matches(e){return!this._resourceFilter&&!e?!0:!this._resourceFilter||!e?!1:this._resourceFilter(e)}get selected(){let e=this._markers[this._nextIdx];return e&&new jf(e,this._nextIdx+1,this._markers.length)}_initIdx(e,t,i){let n=!1,o=this._markers.findIndex(r=>r.resource.toString()===e.uri.toString());o<0&&(o=lh(this._markers,{resource:e.uri},(r,a)=>km(r.resource.toString(),a.resource.toString())),o<0&&(o=~o));for(let r=o;r<this._markers.length;r++){let a=b.lift(this._markers[r]);if(a.isEmpty()){let l=e.getWordAtPosition(a.getStartPosition());l&&(a=new b(a.startLineNumber,l.startColumn,a.startLineNumber,l.endColumn))}if(t&&(a.containsPosition(t)||t.isBeforeOrEqual(a.getStartPosition()))){this._nextIdx=r,n=!0;break}if(this._markers[r].resource.toString()!==e.uri.toString())break}n||(this._nextIdx=i?0:this._markers.length-1),this._nextIdx<0&&(this._nextIdx=this._markers.length-1)}resetIndex(){this._nextIdx=-1}move(e,t,i){if(this._markers.length===0)return!1;let n=this._nextIdx;return this._nextIdx===-1?this._initIdx(t,i,e):e?this._nextIdx=(this._nextIdx+1)%this._markers.length:e||(this._nextIdx=(this._nextIdx-1+this._markers.length)%this._markers.length),n!==this._nextIdx}find(e,t){let i=this._markers.findIndex(n=>n.resource.toString()===e.toString());if(!(i<0)){for(;i<this._markers.length;i++)if(b.containsPosition(this._markers[i],t))return new jf(this._markers[i],i+1,this._markers.length)}}};Uf=hw([rp(1,gd),rp(2,it)],Uf);var Kf=Fi("IMarkerNavigationService"),$f=class{constructor(e,t){this._markerService=e,this._configService=t,this._provider=new Sh}getMarkerList(e){for(let t of this._provider){let i=t.getMarkerList(e);if(i)return i}return new Uf(e,this._markerService,this._configService)}};$f=hw([rp(0,gd),rp(1,it)],$f);Ni(Kf,$f,!0);Q();ri();Ee();Be();Ae();vt();Zn();De();G();Hi();Ye();ee();Q();ri();Ee();Be();qi();xi();mt();Ne();var sp;(function(s){function e(t){switch(t){case Io.Ignore:return"severity-ignore "+K.info.classNames;case Io.Info:return K.info.classNames;case Io.Warning:return K.warning.classNames;case Io.Error:return K.error.classNames;default:return""}}s.className=e})(sp||(sp={}));Me((s,e)=>{let t=s.getColor(dx);if(t){let o=K.error.cssSelector;e.addRule(`
			.monaco-editor .zone-widget ${o},
			.markers-panel .marker-icon${o},
			.text-search-provider-messages .providerMessage ${o},
			.extensions-viewlet > .extensions ${o} {
				color: ${t};
			}
		`)}let i=s.getColor(cx);if(i){let o=K.warning.cssSelector;e.addRule(`
			.monaco-editor .zone-widget ${o},
			.markers-panel .marker-icon${o},
			.extensions-viewlet > .extensions ${o},
			.extension-editor ${o},
			.text-search-provider-messages .providerMessage ${o},
			.preferences-editor ${o} {
				color: ${i};
			}
		`)}let n=s.getColor(hx);if(n){let o=K.info.cssSelector;e.addRule(`
			.monaco-editor .zone-widget ${o},
			.markers-panel .marker-icon${o},
			.extensions-viewlet > .extensions ${o},
			.text-search-provider-messages .providerMessage ${o},
			.extension-editor ${o} {
				color: ${n};
			}
		`)}});mt();Ne();var L1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},qa=function(s,e){return function(t,i){e(t,i,s)}},gw=class{constructor(e,t,i,n,o){this._openerService=n,this._labelService=o,this._lines=0,this._longestLineLength=0,this._relatedDiagnostics=new WeakMap,this._disposables=new A,this._editor=t;let r=document.createElement("div");r.className="descriptioncontainer",this._messageBlock=document.createElement("div"),this._messageBlock.classList.add("message"),this._messageBlock.setAttribute("aria-live","assertive"),this._messageBlock.setAttribute("role","alert"),r.appendChild(this._messageBlock),this._relatedBlock=document.createElement("div"),r.appendChild(this._relatedBlock),this._disposables.add(zi(this._relatedBlock,"click",a=>{a.preventDefault();let l=this._relatedDiagnostics.get(a.target);l&&i(l)})),this._scrollable=new Dx(r,{horizontal:1,vertical:1,useShadows:!1,horizontalScrollbarSize:6,verticalScrollbarSize:6}),e.appendChild(this._scrollable.getDomNode()),this._disposables.add(this._scrollable.onScroll(a=>{r.style.left=`-${a.scrollLeft}px`,r.style.top=`-${a.scrollTop}px`})),this._disposables.add(this._scrollable)}dispose(){xt(this._disposables)}update(e){let{source:t,message:i,relatedInformation:n,code:o}=e,r=((t==null?void 0:t.length)||0)+2;o&&(typeof o=="string"?r+=o.length:r+=o.value.length);let a=ts(i);this._lines=a.length,this._longestLineLength=0;for(let p of a)this._longestLineLength=Math.max(p.length+r,this._longestLineLength);_i(this._messageBlock),this._messageBlock.setAttribute("aria-label",this.getAriaLabel(e)),this._editor.applyFontInfo(this._messageBlock);let l=this._messageBlock;for(let p of a)l=document.createElement("div"),l.innerText=p,p===""&&(l.style.height=this._messageBlock.style.lineHeight),this._messageBlock.appendChild(l);if(t||o){let p=document.createElement("span");if(p.classList.add("details"),l.appendChild(p),t){let m=document.createElement("span");m.innerText=t,m.classList.add("source"),p.appendChild(m)}if(o)if(typeof o=="string"){let m=document.createElement("span");m.innerText=`(${o})`,m.classList.add("code"),p.appendChild(m)}else{this._codeLink=W("a.code-link"),this._codeLink.setAttribute("href",`${o.target.toString()}`),this._codeLink.onclick=f=>{this._openerService.open(o.target,{allowCommands:!0}),f.preventDefault(),f.stopPropagation()};let m=H(this._codeLink,W("span"));m.innerText=o.value,p.appendChild(this._codeLink)}}if(_i(this._relatedBlock),this._editor.applyFontInfo(this._relatedBlock),Pt(n)){let p=this._relatedBlock.appendChild(document.createElement("div"));p.style.paddingTop=`${Math.floor(this._editor.getOption(59)*.66)}px`,this._lines+=1;for(let m of n){let f=document.createElement("div"),v=document.createElement("a");v.classList.add("filename"),v.innerText=`${qu(m.resource)}(${m.startLineNumber}, ${m.startColumn}): `,v.title=this._labelService.getUriLabel(m.resource),this._relatedDiagnostics.set(v,m);let _=document.createElement("span");_.innerText=m.message,f.appendChild(v),f.appendChild(_),this._lines+=1,p.appendChild(f)}}let c=this._editor.getOption(44),d=Math.ceil(c.typicalFullwidthCharacterWidth*this._longestLineLength*.75),h=c.lineHeight*this._lines;this._scrollable.setScrollDimensions({scrollWidth:d,scrollHeight:h})}layout(e,t){this._scrollable.getDomNode().style.height=`${e}px`,this._scrollable.getDomNode().style.width=`${t}px`,this._scrollable.setScrollDimensions({width:t,height:e})}getHeightInLines(){return Math.min(17,this._lines)}getAriaLabel(e){let t="";switch(e.severity){case zt.Error:t=u("Error","Error");break;case zt.Warning:t=u("Warning","Warning");break;case zt.Info:t=u("Info","Info");break;case zt.Hint:t=u("Hint","Hint");break}let i=u("marker aria","{0} at {1}. ",t,e.startLineNumber+":"+e.startColumn),n=this._editor.getModel();return n&&e.startLineNumber<=n.getLineCount()&&e.startLineNumber>=1&&(i=`${n.getLineContent(e.startLineNumber)}, ${i}`),i}},Ls=class fw extends ja{constructor(e,t,i,n,o,r,a){super(e,{showArrow:!0,showFrame:!0,isAccessible:!0,frameWidth:1},o);this._themeService=t,this._openerService=i,this._menuService=n,this._contextKeyService=r,this._labelService=a,this._callOnDispose=new A,this._onDidSelectRelatedInformation=new j,this.onDidSelectRelatedInformation=this._onDidSelectRelatedInformation.event,this._severity=zt.Warning,this._backgroundColor=we.white,this._applyTheme(t.getColorTheme()),this._callOnDispose.add(t.onDidColorThemeChange(this._applyTheme.bind(this))),this.create()}_applyTheme(e){this._backgroundColor=e.getColor(R1);let t=qf,i=P1;this._severity===zt.Warning?(t=Xf,i=M1):this._severity===zt.Info&&(t=Yf,i=D1);let n=e.getColor(t),o=e.getColor(i);this.style({arrowColor:n,frameColor:n,headerBackgroundColor:o,primaryHeadingColor:e.getColor($u),secondaryHeadingColor:e.getColor(Ku)})}_applyStyles(){this._parentContainer&&(this._parentContainer.style.backgroundColor=this._backgroundColor?this._backgroundColor.toString():""),super._applyStyles()}dispose(){this._callOnDispose.dispose(),super.dispose()}_fillHead(e){super._fillHead(e),this._disposables.add(this._actionbarWidget.actionRunner.onBeforeRun(n=>this.editor.focus()));let t=[],i=this._menuService.createMenu(fw.TitleMenu,this._contextKeyService);m_(i,void 0,t),this._actionbarWidget.push(t,{label:!1,icon:!0,index:0}),i.dispose()}_fillTitleIcon(e){this._icon=H(e,W(""))}_fillBody(e){this._parentContainer=e,e.classList.add("marker-widget"),this._parentContainer.tabIndex=0,this._parentContainer.setAttribute("role","tooltip"),this._container=document.createElement("div"),e.appendChild(this._container),this._message=new gw(this._container,this.editor,t=>this._onDidSelectRelatedInformation.fire(t),this._openerService,this._labelService),this._disposables.add(this._message)}show(){throw new Error("call showAtMarker")}showAtMarker(e,t,i){this._container.classList.remove("stale"),this._message.update(e),this._severity=e.severity,this._applyTheme(this._themeService.getColorTheme());let n=b.lift(e),o=this.editor.getPosition(),r=o&&n.containsPosition(o)?o:n.getStartPosition();super.show(r,this.computeRequiredHeight());let a=this.editor.getModel();if(a){let l=i>1?u("problems","{0} of {1} problems",t,i):u("change","{0} of {1} problem",t,i);this.setTitle(Jt(a.uri),l)}this._icon.className=`codicon ${sp.className(zt.toSeverity(this._severity))}`,this.editor.revealPositionNearTop(r,0),this.editor.focus()}updateMarker(e){this._container.classList.remove("stale"),this._message.update(e)}showStale(){this._container.classList.add("stale"),this._relayout()}_doLayoutBody(e,t){super._doLayoutBody(e,t),this._heightInPixel=e,this._message.layout(e,t),this._container.style.height=`${e}px`}_onWidth(e){this._message.layout(this._heightInPixel,e)}_relayout(){super._relayout(this.computeRequiredHeight())}computeRequiredHeight(){return 3+this._message.getHeightInLines()}};Ls.TitleMenu=new se("gotoErrorTitleMenu");Ls=L1([qa(1,Nt),qa(2,bt),qa(3,Xn),qa(4,le),qa(5,ie),qa(6,xr)],Ls);var uw=Zh(Ov,Hv),pw=Zh(Wv,Bv),mw=Zh(ls,Vv),qf=q("editorMarkerNavigationError.background",{dark:uw,light:uw,hc:dn},u("editorMarkerNavigationError","Editor marker navigation widget error color.")),P1=q("editorMarkerNavigationError.headerBackground",{dark:si(qf,.1),light:si(qf,.1),hc:null},u("editorMarkerNavigationErrorHeaderBackground","Editor marker navigation widget error heading background.")),Xf=q("editorMarkerNavigationWarning.background",{dark:pw,light:pw,hc:dn},u("editorMarkerNavigationWarning","Editor marker navigation widget warning color.")),M1=q("editorMarkerNavigationWarning.headerBackground",{dark:si(Xf,.1),light:si(Xf,.1),hc:"#0C141F"},u("editorMarkerNavigationWarningBackground","Editor marker navigation widget warning heading background.")),Yf=q("editorMarkerNavigationInfo.background",{dark:mw,light:mw,hc:dn},u("editorMarkerNavigationInfo","Editor marker navigation widget info color.")),D1=q("editorMarkerNavigationInfo.headerBackground",{dark:si(Yf,.1),light:si(Yf,.1),hc:null},u("editorMarkerNavigationInfoHeaderBackground","Editor marker navigation widget info heading background.")),R1=q("editorMarkerNavigation.background",{dark:wa,light:wa,hc:wa},u("editorMarkerNavigationBackground","Editor marker navigation widget background."));var A1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},ap=function(s,e){return function(t,i){e(t,i,s)}},yw=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Wo=class lp{constructor(e,t,i,n,o){this._markerNavigationService=t,this._contextKeyService=i,this._editorService=n,this._instantiationService=o,this._sessionDispoables=new A,this._editor=e,this._widgetVisible=vw.bindTo(this._contextKeyService)}static get(e){return e.getContribution(lp.ID)}dispose(){this._cleanUp(),this._sessionDispoables.dispose()}_cleanUp(){this._widgetVisible.reset(),this._sessionDispoables.clear(),this._widget=void 0,this._model=void 0}_getOrCreateModel(e){if(this._model&&this._model.matches(e))return this._model;let t=!1;return this._model&&(t=!0,this._cleanUp()),this._model=this._markerNavigationService.getMarkerList(e),t&&this._model.move(!0,this._editor.getModel(),this._editor.getPosition()),this._widget=this._instantiationService.createInstance(Ls,this._editor),this._widget.onDidClose(()=>this.close(),this,this._sessionDispoables),this._widgetVisible.set(!0),this._sessionDispoables.add(this._model),this._sessionDispoables.add(this._widget),this._sessionDispoables.add(this._editor.onDidChangeCursorPosition(i=>{var n,o,r;(!((n=this._model)===null||n===void 0?void 0:n.selected)||!b.containsPosition((o=this._model)===null||o===void 0?void 0:o.selected.marker,i.position))&&((r=this._model)===null||r===void 0||r.resetIndex())})),this._sessionDispoables.add(this._model.onDidChange(()=>{if(!this._widget||!this._widget.position||!this._model)return;let i=this._model.find(this._editor.getModel().uri,this._widget.position);i?this._widget.updateMarker(i.marker):this._widget.showStale()})),this._sessionDispoables.add(this._widget.onDidSelectRelatedInformation(i=>{this._editorService.openCodeEditor({resource:i.resource,options:{pinned:!0,revealIfOpened:!0,selection:b.lift(i).collapseToStart()}},this._editor),this.close(!1)})),this._sessionDispoables.add(this._editor.onDidChangeModel(()=>this._cleanUp())),this._model}close(e=!0){this._cleanUp(),e&&this._editor.focus()}showAtMarker(e){if(this._editor.hasModel()){let t=this._getOrCreateModel(this._editor.getModel().uri);t.resetIndex(),t.move(!0,this._editor.getModel(),new U(e.startLineNumber,e.startColumn)),t.selected&&this._widget.showAtMarker(t.selected.marker,t.selected.index,t.selected.total)}}nagivate(e,t){var i,n;return yw(this,void 0,void 0,function*(){if(this._editor.hasModel()){let o=this._getOrCreateModel(t?void 0:this._editor.getModel().uri);if(o.move(e,this._editor.getModel(),this._editor.getPosition()),!o.selected)return;if(o.selected.marker.resource.toString()!==this._editor.getModel().uri.toString()){this._cleanUp();let r=yield this._editorService.openCodeEditor({resource:o.selected.marker.resource,options:{pinned:!1,revealIfOpened:!0,selectionRevealType:2,selection:o.selected.marker}},this._editor);r&&((i=lp.get(r))===null||i===void 0||i.close(),(n=lp.get(r))===null||n===void 0||n.nagivate(e,t))}else this._widget.showAtMarker(o.selected.marker,o.selected.index,o.selected.total)}})}};Wo.ID="editor.contrib.markerController";Wo=A1([ap(1,Kf),ap(2,ie),ap(3,Ve),ap(4,le)],Wo);var Zd=class extends F{constructor(e,t,i){super(i);this._next=e,this._multiFile=t}run(e,t){var i;return yw(this,void 0,void 0,function*(){t.hasModel()&&((i=Wo.get(t))===null||i===void 0||i.nagivate(this._next,this._multiFile))})}},Nn=class extends Zd{constructor(){super(!0,!1,{id:Nn.ID,label:Nn.LABEL,alias:"Go to Next Problem (Error, Warning, Info)",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:578,weight:100},menuOpts:{menuId:Ls.TitleMenu,title:Nn.LABEL,icon:Rt("marker-navigation-next",K.arrowDown,u("nextMarkerIcon","Icon for goto next marker.")),group:"navigation",order:1}})}};Nn.ID="editor.action.marker.next";Nn.LABEL=u("markerAction.next.label","Go to Next Problem (Error, Warning, Info)");var Ps=class extends Zd{constructor(){super(!1,!1,{id:Ps.ID,label:Ps.LABEL,alias:"Go to Previous Problem (Error, Warning, Info)",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:1602,weight:100},menuOpts:{menuId:Ls.TitleMenu,title:Nn.LABEL,icon:Rt("marker-navigation-previous",K.arrowUp,u("previousMarkerIcon","Icon for goto previous marker.")),group:"navigation",order:2}})}};Ps.ID="editor.action.marker.prev";Ps.LABEL=u("markerAction.previous.label","Go to Previous Problem (Error, Warning, Info)");var bw=class extends Zd{constructor(){super(!0,!0,{id:"editor.action.marker.nextInFiles",label:u("markerAction.nextInFiles.label","Go to Next Problem in Files (Error, Warning, Info)"),alias:"Go to Next Problem in Files (Error, Warning, Info)",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:66,weight:100},menuOpts:{menuId:se.MenubarGoMenu,title:u({key:"miGotoNextProblem",comment:["&& denotes a mnemonic"]},"Next &&Problem"),group:"6_problem_nav",order:1}})}},Sw=class extends Zd{constructor(){super(!1,!0,{id:"editor.action.marker.prevInFiles",label:u("markerAction.previousInFiles.label","Go to Previous Problem in Files (Error, Warning, Info)"),alias:"Go to Previous Problem in Files (Error, Warning, Info)",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:1090,weight:100},menuOpts:{menuId:se.MenubarGoMenu,title:u({key:"miGotoPreviousProblem",comment:["&& denotes a mnemonic"]},"Previous &&Problem"),group:"6_problem_nav",order:2}})}};J(Wo.ID,Wo);I(Nn);I(Ps);I(bw);I(Sw);var vw=new pe("markersNavigationVisible",!1),F1=ct.bindToContribution(Wo.get);$(new F1({id:"closeMarkersNavigation",precondition:vw,handler:s=>s.close(),kbOpts:{weight:100+50,kbExpr:S.focus,primary:9,secondary:[1033]}}));Q();qi();ps();mt();Ne();var N1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},xw=function(s,e){return function(t,i){e(t,i,s)}},gn=W,_w=class{constructor(e,t,i){this.owner=e,this.range=t,this.marker=i}isValidForHoverAnchor(e){return e.type===1&&this.range.startColumn<=e.range.startColumn&&this.range.endColumn>=e.range.endColumn}},Cw={type:1,filter:{include:fe.QuickFix}},dp=class{constructor(e,t,i){this._editor=e,this._markerDecorationsService=t,this._openerService=i,this.recentMarkerCodeActionsInfo=void 0}computeSync(e,t){if(!this._editor.hasModel()||e.type!==1)return[];let i=this._editor.getModel(),n=e.range.startLineNumber,o=i.getLineMaxColumn(n),r=[];for(let a of t){let l=a.range.startLineNumber===n?a.range.startColumn:1,c=a.range.endLineNumber===n?a.range.endColumn:o,d=this._markerDecorationsService.getMarker(i.uri,a);if(!d)continue;let h=new b(e.range.startLineNumber,l,e.range.startLineNumber,c);r.push(new _w(this,h,d))}return r}renderHoverParts(e,t){if(!t.length)return z.None;let i=new A;t.forEach(o=>e.fragment.appendChild(this.renderMarkerHover(o,i)));let n=t.length===1?t[0]:t.sort((o,r)=>zt.compare(o.marker.severity,r.marker.severity))[0];return this.renderMarkerStatusbar(e,n,i),i}renderMarkerHover(e,t){let i=gn("div.hover-row"),n=H(i,gn("div.marker.hover-contents")),{source:o,message:r,code:a,relatedInformation:l}=e.marker;this._editor.applyFontInfo(n);let c=H(n,gn("span"));if(c.style.whiteSpace="pre-wrap",c.innerText=r,o||a)if(a&&typeof a!="string"){let d=gn("span");if(o){let f=H(d,gn("span"));f.innerText=o}let h=H(d,gn("a.code-link"));h.setAttribute("href",a.target.toString()),t.add(Ke(h,"click",f=>{this._openerService.open(a.target,{allowCommands:!0}),f.preventDefault(),f.stopPropagation()}));let p=H(h,gn("span"));p.innerText=a.value;let m=H(n,d);m.style.opacity="0.6",m.style.paddingLeft="6px"}else{let d=H(n,gn("span"));d.style.opacity="0.6",d.style.paddingLeft="6px",d.innerText=o&&a?`${o}(${a})`:o||`(${a})`}if(Pt(l))for(let{message:d,resource:h,startLineNumber:p,startColumn:m}of l){let f=H(n,gn("div"));f.style.marginTop="8px";let v=H(f,gn("a"));v.innerText=`${Jt(h)}(${p}, ${m}): `,v.style.cursor="pointer",t.add(Ke(v,"click",w=>{w.stopPropagation(),w.preventDefault(),this._openerService&&this._openerService.open(h,{fromUserGesture:!0,editorOptions:{selection:{startLineNumber:p,startColumn:m}}}).catch(de)}));let _=H(f,gn("span"));_.innerText=d,this._editor.applyFontInfo(_)}return i}renderMarkerStatusbar(e,t,i){if((t.marker.severity===zt.Error||t.marker.severity===zt.Warning||t.marker.severity===zt.Info)&&e.statusBar.addAction({label:u("view problem","View Problem"),commandId:Nn.ID,run:()=>{var n;e.hide(),(n=Wo.get(this._editor))===null||n===void 0||n.showAtMarker(t.marker),this._editor.focus()}}),!this._editor.getOption(81)){let n=e.statusBar.append(gn("div"));this.recentMarkerCodeActionsInfo&&(dg.makeKey(this.recentMarkerCodeActionsInfo.marker)===dg.makeKey(t.marker)?this.recentMarkerCodeActionsInfo.hasCodeActions||(n.textContent=u("noQuickFixes","No quick fixes available")):this.recentMarkerCodeActionsInfo=void 0);let o=this.recentMarkerCodeActionsInfo&&!this.recentMarkerCodeActionsInfo.hasCodeActions?z.None:i.add(Qr(()=>n.textContent=u("checkingForQuickFixes","Checking for quick fixes..."),200));n.textContent||(n.textContent=String.fromCharCode(160));let r=this.getCodeActions(t.marker);i.add(We(()=>r.cancel())),r.then(a=>{if(o.dispose(),this.recentMarkerCodeActionsInfo={marker:t.marker,hasCodeActions:a.validActions.length>0},!this.recentMarkerCodeActionsInfo.hasCodeActions){a.dispose(),n.textContent=u("noQuickFixes","No quick fixes available");return}n.style.display="none";let l=!1;i.add(We(()=>{l||a.dispose()})),e.statusBar.addAction({label:u("quick fixes","Quick Fix..."),commandId:Fo.Id,run:c=>{l=!0;let d=Ao.get(this._editor),h=ni(c);e.hide(),d==null||d.showCodeActions(Cw,a,{x:h.left+6,y:h.top+h.height+6})}})},de)}}getCodeActions(e){return Oe(t=>wd(this._editor.getModel(),new b(e.startLineNumber,e.startColumn,e.endLineNumber,e.endColumn),Cw,Jn.None,t))}};dp=N1([xw(1,Cv),xw(2,bt)],dp);Me((s,e)=>{let t=s.getColor(gr);t&&e.addRule(`.monaco-hover .hover-contents a.code-link span { color: ${t}; }`);let i=s.getColor(fr);i&&e.addRule(`.monaco-hover .hover-contents a.code-link span:hover { color: ${i}; }`)});Ae();G();ee();rn();G();Ye();ue();iP();He();var cp="editor.action.inlineSuggest.commit";De();G();tt();Re();sn();ke();ut();Le();De();G();Ye();Do();ee();Re();De();G();ee();var Jd=class{constructor(e,t,i=0){this.lineNumber=e,this.parts=t,this.additionalReservedLineCount=i}renderForScreenReader(e){if(this.parts.length===0)return"";let t=this.parts[this.parts.length-1],i=e.substr(0,t.column-1);return z1(i,this.parts.map(o=>({range:{startLineNumber:1,endLineNumber:1,startColumn:o.column,endColumn:o.column},text:o.lines.join(`
`)}))).substring(this.parts[0].column-1)}},ww=class{constructor(e){this.lineStartOffsetByLineIdx=[],this.lineStartOffsetByLineIdx.push(0);for(let t=0;t<e.length;t++)e.charAt(t)===`
`&&this.lineStartOffsetByLineIdx.push(t+1)}getOffset(e){return this.lineStartOffsetByLineIdx[e.lineNumber-1]+e.column-1}};function z1(s,e){let t=new ww(s),i=e.map(n=>{let o=b.lift(n.range);return{startOffset:t.getOffset(o.getStartPosition()),endOffset:t.getOffset(o.getEndPosition()),text:n.text}});i.sort((n,o)=>o.startOffset-n.startOffset);for(let n of i)s=s.substring(0,n.startOffset)+n.text+s.substring(n.endOffset);return s}var hp=class{constructor(e,t,i){this.column=e,this.lines=t,this.preview=i}},Qd=class extends z{constructor(e){super();this.editor=e,this._expanded=void 0,this.onDidChangeEmitter=new j,this.onDidChange=this.onDidChangeEmitter.event,this._register(e.onDidChangeConfiguration(t=>{t.hasChanged(106)&&this._expanded===void 0&&this.onDidChangeEmitter.fire()}))}setExpanded(e){this._expanded=!0,this.onDidChangeEmitter.fire()}};wt();Ye();ee();function Tw(s,e){return s===e?!0:!s||!e?!1:s.range.equalsRange(e.range)&&s.text===e.text&&s.command===e.command}function up(s,e,t,i,n=0){if(s.range.startLineNumber!==s.range.endLineNumber)return;let o=e.getLineContent(s.range.startLineNumber),r=pt(o).length;if(s.range.startColumn-1<=r){let m=pt(s.text).length,f=o.substring(s.range.startColumn-1,r),v=b.fromPositions(s.range.getStartPosition().delta(0,f.length),s.range.getEndPosition()),_=s.text.startsWith(f)?s.text.substring(f.length):s.text.substring(m);s={range:v,text:_,command:s.command}}let l=e.getValueInRange(s.range),c=O1(l,s.text);if(!c)return;let d=s.range.startLineNumber,h=new Array;if(t==="prefix"){let m=c.filter(f=>f.originalLength===0);if(m.length>1||m.length===1&&m[0].originalStart!==l.length)return}let p=s.text.length-n;for(let m of c){let f=s.range.startColumn+m.originalStart+m.originalLength;if(t==="subwordSmart"&&i&&i.lineNumber===s.range.startLineNumber&&f<i.column||m.originalLength>0)return;if(m.modifiedLength===0)continue;let v=m.modifiedStart+m.modifiedLength,_=Math.max(m.modifiedStart,Math.min(v,p)),w=s.text.substring(m.modifiedStart,_),R=s.text.substring(_,Math.max(m.modifiedStart,v));if(w.length>0){let P=ts(w);h.push(new hp(f,P,!1))}if(R.length>0){let P=ts(R);h.push(new hp(f,P,!0))}}return new Jd(d,h,0)}var ro;function O1(s,e){if((ro==null?void 0:ro.originalValue)===s&&(ro==null?void 0:ro.newValue)===e)return ro==null?void 0:ro.changes;{let t=H1(s,e);return ro={originalValue:s,newValue:e,changes:t},t}}function H1(s,e){if(s.length>5e3||e.length>5e3)return;function t(l){let c=0;for(let d=0,h=l.length;d<h;d++){let p=l.charCodeAt(d);p>c&&(c=p)}return c}let i=Math.max(t(s),t(e));function n(l){if(l<0)throw new Error("unexpected");return i+l+1}function o(l){let c=0,d=0,h=new Int32Array(l.length);for(let p=0,m=l.length;p<m;p++){let f=d*100+c;l[p]==="("?(h[p]=n(2*f),c++):l[p]===")"?(h[p]=n(2*f+1),c===1&&d++,c=Math.max(c-1,0)):h[p]=l.charCodeAt(p)}return h}let r=o(s),a=o(e);return new tv({getElements:()=>r},{getElements:()=>a}).ComputeDiff(!1).changes}sn();sP();nP();aP();oP();rP();function Ew(s,e){let t=new vx,i=new Cx(t,c=>e.getLanguageConfiguration(c)),n=new xx(new Iw([s]),i),o=_x(n,[],void 0,!0),r="",a=s.getLineContent();function l(c,d){if(c.kind===2)l(c.openingBracket,d),d=Ma(d,c.openingBracket.length),c.child&&(l(c.child,d),d=Ma(d,c.child.length)),c.closingBracket?(l(c.closingBracket,d),d=Ma(d,c.closingBracket.length)):r+=i.getSingleLanguageBracketTokens(c.openingBracket.languageId).findClosingTokenText(c.openingBracket.bracketIds);else if(c.kind!==3){if(c.kind===0||c.kind===1)r+=a.substring(d,Ma(d,c.length));else if(c.kind===4)for(let h of c.children)l(h,d),d=Ma(d,h.length)}}return l(o,Sx),r}var Iw=class{constructor(e){this.lines=e}getLineCount(){return this.lines.length}getLineLength(e){return this.lines[e-1].getLineContent().length}getLineTokens(e){return this.lines[e-1]}};var W1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},kw=function(s,e){return function(t,i){e(t,i,s)}},Bo=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},pp=class extends z{constructor(e,t,i,n){super();this.editor=e,this.cache=t,this.commandService=i,this.languageConfigurationService=n,this.onDidChangeEmitter=new j,this.onDidChange=this.onDidChangeEmitter.event,this.completionSession=this._register(new et),this.active=!1,this.disposed=!1,this._register(i.onDidExecuteCommand(o=>{new Set([Fa.Tab.id,Fa.DeleteLeft.id,Fa.DeleteRight.id,cp,"acceptSelectedSuggestion"]).has(o.commandId)&&e.hasTextFocus()&&this.handleUserInput()})),this._register(this.editor.onDidType(o=>{this.handleUserInput()})),this._register(this.editor.onDidChangeCursorPosition(o=>{this.session&&!this.session.isValid&&this.hide()})),this._register(We(()=>{this.disposed=!0})),this._register(this.editor.onDidBlurEditorWidget(()=>{this.hide()}))}handleUserInput(){this.session&&!this.session.isValid&&this.hide(),setTimeout(()=>{this.disposed||this.startSessionIfTriggered()},0)}get session(){return this.completionSession.value}get ghostText(){var e;return(e=this.session)===null||e===void 0?void 0:e.ghostText}get minReservedLineCount(){return this.session?this.session.minReservedLineCount:0}setExpanded(e){var t;(t=this.session)===null||t===void 0||t.setExpanded(e)}setActive(e){var t;this.active=e,e&&((t=this.session)===null||t===void 0||t.scheduleAutomaticUpdate())}startSessionIfTriggered(){!this.editor.getOption(55).enabled||this.session&&this.session.isValid||this.trigger(Ai.Automatic)}trigger(e){if(this.completionSession.value){e===Ai.Explicit&&this.completionSession.value.ensureUpdateWithExplicitContext();return}this.completionSession.value=new Lw(this.editor,this.editor.getPosition(),()=>this.active,this.commandService,this.cache,e,this.languageConfigurationService),this.completionSession.value.takeOwnership(this.completionSession.value.onDidChange(()=>{this.onDidChangeEmitter.fire()}))}hide(){this.completionSession.clear(),this.onDidChangeEmitter.fire()}commitCurrentSuggestion(){var e;(e=this.session)===null||e===void 0||e.commitCurrentCompletion()}showNext(){var e;(e=this.session)===null||e===void 0||e.showNextInlineCompletion()}showPrevious(){var e;(e=this.session)===null||e===void 0||e.showPreviousInlineCompletion()}hasMultipleInlineCompletions(){var e;return Bo(this,void 0,void 0,function*(){let t=yield(e=this.session)===null||e===void 0?void 0:e.hasMultipleInlineCompletions();return t!==void 0?t:!1})}};pp=W1([kw(2,dt),kw(3,Dt)],pp);var Lw=class extends Qd{constructor(e,t,i,n,o,r,a){super(e);this.triggerPosition=t,this.shouldUpdate=i,this.commandService=n,this.cache=o,this.initialTriggerKind=r,this.languageConfigurationService=a,this.minReservedLineCount=0,this.updateOperation=this._register(new et),this.updateSoon=this._register(new $e(()=>{let c=this.initialTriggerKind;return this.initialTriggerKind=Ai.Automatic,this.update(c)},50)),this.currentlySelectedCompletionId=void 0;let l;this._register(this.onDidChange(()=>{let c=this.currentCompletion;if(c&&c.sourceInlineCompletion!==l){l=c.sourceInlineCompletion;let d=c.sourceProvider;d.handleItemDidShow&&d.handleItemDidShow(c.sourceInlineCompletions,l)}})),this._register(We(()=>{this.cache.clear()})),this._register(this.editor.onDidChangeCursorPosition(c=>{this.cache.value&&this.onDidChangeEmitter.fire()})),this._register(this.editor.onDidChangeModelContent(c=>{this.scheduleAutomaticUpdate()})),this._register(Rm.onDidChange(()=>{this.updateSoon.schedule()})),this.scheduleAutomaticUpdate()}fixAndGetIndexOfCurrentSelection(){if(!this.currentlySelectedCompletionId||!this.cache.value||this.cache.value.completions.length===0)return 0;let e=this.cache.value.completions.findIndex(t=>t.semanticId===this.currentlySelectedCompletionId);return e===-1?(this.currentlySelectedCompletionId=void 0,0):e}get currentCachedCompletion(){if(!!this.cache.value)return this.cache.value.completions[this.fixAndGetIndexOfCurrentSelection()]}showNextInlineCompletion(){var e;return Bo(this,void 0,void 0,function*(){yield this.ensureUpdateWithExplicitContext();let t=((e=this.cache.value)===null||e===void 0?void 0:e.completions)||[];if(t.length>0){let i=(this.fixAndGetIndexOfCurrentSelection()+1)%t.length;this.currentlySelectedCompletionId=t[i].semanticId}else this.currentlySelectedCompletionId=void 0;this.onDidChangeEmitter.fire()})}showPreviousInlineCompletion(){var e;return Bo(this,void 0,void 0,function*(){yield this.ensureUpdateWithExplicitContext();let t=((e=this.cache.value)===null||e===void 0?void 0:e.completions)||[];if(t.length>0){let i=(this.fixAndGetIndexOfCurrentSelection()+t.length-1)%t.length;this.currentlySelectedCompletionId=t[i].semanticId}else this.currentlySelectedCompletionId=void 0;this.onDidChangeEmitter.fire()})}ensureUpdateWithExplicitContext(){var e;return Bo(this,void 0,void 0,function*(){this.updateOperation.value?this.updateOperation.value.triggerKind===Ai.Explicit?yield this.updateOperation.value.promise:yield this.update(Ai.Explicit):((e=this.cache.value)===null||e===void 0?void 0:e.triggerKind)!==Ai.Explicit&&(yield this.update(Ai.Explicit))})}hasMultipleInlineCompletions(){var e;return Bo(this,void 0,void 0,function*(){return yield this.ensureUpdateWithExplicitContext(),(((e=this.cache.value)===null||e===void 0?void 0:e.completions.length)||0)>1})}get ghostText(){let e=this.currentCompletion,t=this.editor.getOptions().get(55).mode;return e?up(e,this.editor.getModel(),t,this.editor.getPosition()):void 0}get currentCompletion(){let e=this.currentCachedCompletion;if(!!e)return e.toLiveInlineCompletion()}get isValid(){return this.editor.getPosition().lineNumber===this.triggerPosition.lineNumber}scheduleAutomaticUpdate(){this.updateOperation.clear(),this.updateSoon.schedule()}update(e){return Bo(this,void 0,void 0,function*(){if(!this.shouldUpdate())return;let t=this.editor.getPosition(),i=Oe(o=>Bo(this,void 0,void 0,function*(){let r;try{r=yield Jf(t,this.editor.getModel(),{triggerKind:e,selectedSuggestionInfo:void 0},o,this.languageConfigurationService)}catch(a){de(a);return}o.isCancellationRequested||(this.cache.setValue(this.editor,r,e),this.onDidChangeEmitter.fire())})),n=new mp(i,e);this.updateOperation.value=n,yield i,this.updateOperation.value===n&&this.updateOperation.clear()})}takeOwnership(e){this._register(e)}commitCurrentCompletion(){if(!this.ghostText)return;let e=this.currentCompletion;e&&this.commit(e)}commit(e){let t=this.cache.clearAndLeak();this.editor.executeEdits("inlineSuggestion.accept",[Ge.replaceMove(e.range,e.text)]),e.command?this.commandService.executeCommand(e.command.id,...e.command.arguments||[]).finally(()=>{t==null||t.dispose()}).then(void 0,Ue):t==null||t.dispose(),this.onDidChangeEmitter.fire()}},mp=class{constructor(e,t){this.promise=e,this.triggerKind=t}dispose(){this.promise.cancel()}},Zf=class extends z{constructor(e,t,i,n){super();this.triggerKind=n;let o=e.deltaDecorations([],t.items.map(r=>({range:r.range,options:{description:"inline-completion-tracking-range"}})));this._register(We(()=>{e.deltaDecorations(o,[])})),this.completions=t.items.map((r,a)=>new Pw(r,o[a])),this._register(e.onDidChangeModelContent(()=>{let r=!1,a=e.getModel();for(let l of this.completions){let c=a.getDecorationRange(l.decorationId);if(!c){de(new Error("Decoration has no range"));continue}l.synchronizedRange.equalsRange(c)||(r=!0,l.synchronizedRange=c)}r&&i()})),this._register(t)}},Pw=class{constructor(e,t){this.inlineCompletion=e,this.decorationId=t,this.semanticId=JSON.stringify({text:this.inlineCompletion.text,startLine:this.inlineCompletion.range.startLineNumber,startColumn:this.inlineCompletion.range.startColumn,command:this.inlineCompletion.command}),this.synchronizedRange=e.range}toLiveInlineCompletion(){return{text:this.inlineCompletion.text,range:this.synchronizedRange,command:this.inlineCompletion.command,sourceProvider:this.inlineCompletion.sourceProvider,sourceInlineCompletions:this.inlineCompletion.sourceInlineCompletions,sourceInlineCompletion:this.inlineCompletion.sourceInlineCompletion}}};function B1(s,e){let t=e.getWordAtPosition(s),i=e.getLineMaxColumn(s.lineNumber);return t?new b(s.lineNumber,t.startColumn,s.lineNumber,i):b.fromPositions(s,s.with(void 0,i))}function Jf(s,e,t,i=ge.None,n){return Bo(this,void 0,void 0,function*(){let o=B1(s,e),r=Rm.all(e),a=yield Promise.all(r.map(c=>Bo(this,void 0,void 0,function*(){let d=yield c.provideInlineCompletions(e,s,t,i);return{completions:d,provider:c,dispose:()=>{d&&c.freeInlineCompletions(d)}}}))),l=new Map;for(let c of a){let d=c.completions;if(d)for(let h of d.items){let p=h.range?b.lift(h.range):o;if(p.startLineNumber!==p.endLineNumber)continue;let m=n&&h.completeBracketPairs?V1(h.text,p.getStartPosition(),e,n):h.text,f={text:m,range:p,command:h.command,sourceProvider:c.provider,sourceInlineCompletions:d,sourceInlineCompletion:h};l.set(JSON.stringify({text:m,range:h.range}),f)}}return{items:[...l.values()],dispose:()=>{for(let c of a)c.dispose()}}})}function V1(s,e,t,i){let o=t.getLineContent(e.lineNumber).substring(0,e.column-1)+s,r=t.tokenizeLineWithEdit(e,o.length-(e.column-1),s),a=r==null?void 0:r.sliceAndInflate(e.column-1,o.length,0);return a?(console.log(a),Ew(a,i)):s}function Xa(s,e){if(!e)return e;let t=s.getValueInRange(e.range),i=dr(t,e.text),n=s.getOffsetAt(e.range.getStartPosition())+i,o=s.getPositionAt(n),r=t.substr(i),a=Ch(r,e.text),l=s.getPositionAt(Math.max(n,s.getOffsetAt(e.range.getEndPosition())-a));return{range:b.fromPositions(o,l),text:e.text.substr(i,e.text.length-i-a)}}ke();Le();G();Re();vt();ke();De();G();tt();ee();var Yi=class{constructor(){this.value="",this.pos=0}static isDigitCharacter(e){return e>=48&&e<=57}static isVariableCharacter(e){return e===95||e>=97&&e<=122||e>=65&&e<=90}text(e){this.value=e,this.pos=0}tokenText(e){return this.value.substr(e.pos,e.len)}next(){if(this.pos>=this.value.length)return{type:14,pos:this.pos,len:0};let e=this.pos,t=0,i=this.value.charCodeAt(e),n;if(n=Yi._table[i],typeof n=="number")return this.pos+=1,{type:n,pos:e,len:1};if(Yi.isDigitCharacter(i)){n=8;do t+=1,i=this.value.charCodeAt(e+t);while(Yi.isDigitCharacter(i));return this.pos+=t,{type:n,pos:e,len:t}}if(Yi.isVariableCharacter(i)){n=9;do i=this.value.charCodeAt(e+ ++t);while(Yi.isVariableCharacter(i)||Yi.isDigitCharacter(i));return this.pos+=t,{type:n,pos:e,len:t}}n=10;do t+=1,i=this.value.charCodeAt(e+t);while(!isNaN(i)&&typeof Yi._table[i]=="undefined"&&!Yi.isDigitCharacter(i)&&!Yi.isVariableCharacter(i));return this.pos+=t,{type:n,pos:e,len:t}}};Yi._table={[36]:0,[58]:1,[44]:2,[123]:3,[125]:4,[92]:5,[47]:6,[124]:7,[43]:11,[45]:12,[63]:13};var Ms=class{constructor(){this._children=[]}appendChild(e){return e instanceof ei&&this._children[this._children.length-1]instanceof ei?this._children[this._children.length-1].value+=e.value:(e.parent=this,this._children.push(e)),this}replace(e,t){let{parent:i}=e,n=i.children.indexOf(e),o=i.children.slice(0);o.splice(n,1,...t),i._children=o,function r(a,l){for(let c of a)c.parent=l,r(c.children,c)}(t,i)}get children(){return this._children}get snippet(){let e=this;for(;;){if(!e)return;if(e instanceof ec)return e;e=e.parent}}toString(){return this.children.reduce((e,t)=>e+t.toString(),"")}len(){return 0}},ei=class extends Ms{constructor(e){super();this.value=e}toString(){return this.value}len(){return this.value.length}clone(){return new ei(this.value)}},Qf=class extends Ms{},Bi=class extends Qf{constructor(e){super();this.index=e}static compareByIndex(e,t){return e.index===t.index?0:e.isFinalTabstop?1:t.isFinalTabstop||e.index<t.index?-1:e.index>t.index?1:0}get isFinalTabstop(){return this.index===0}get choice(){return this._children.length===1&&this._children[0]instanceof Ds?this._children[0]:void 0}clone(){let e=new Bi(this.index);return this.transform&&(e.transform=this.transform.clone()),e._children=this.children.map(t=>t.clone()),e}},Ds=class extends Ms{constructor(){super(...arguments);this.options=[]}appendChild(e){return e instanceof ei&&(e.parent=this,this.options.push(e)),this}toString(){return this.options[0].value}len(){return this.options[0].len()}clone(){let e=new Ds;return this.options.forEach(e.appendChild,e),e}},gp=class extends Ms{constructor(){super(...arguments);this.regexp=new RegExp("")}resolve(e){let t=this,i=!1,n=e.replace(this.regexp,function(){return i=!0,t._replace(Array.prototype.slice.call(arguments,0,-2))});return!i&&this._children.some(o=>o instanceof fn&&Boolean(o.elseValue))&&(n=this._replace([])),n}_replace(e){let t="";for(let i of this._children)if(i instanceof fn){let n=e[i.index]||"";n=i.resolve(n),t+=n}else t+=i.toString();return t}toString(){return""}clone(){let e=new gp;return e.regexp=new RegExp(this.regexp.source,(this.regexp.ignoreCase?"i":"")+(this.regexp.global?"g":"")),e._children=this.children.map(t=>t.clone()),e}},fn=class extends Ms{constructor(e,t,i,n){super();this.index=e,this.shorthandName=t,this.ifValue=i,this.elseValue=n}resolve(e){return this.shorthandName==="upcase"?e?e.toLocaleUpperCase():"":this.shorthandName==="downcase"?e?e.toLocaleLowerCase():"":this.shorthandName==="capitalize"?e?e[0].toLocaleUpperCase()+e.substr(1):"":this.shorthandName==="pascalcase"?e?this._toPascalCase(e):"":this.shorthandName==="camelcase"?e?this._toCamelCase(e):"":Boolean(e)&&typeof this.ifValue=="string"?this.ifValue:!Boolean(e)&&typeof this.elseValue=="string"?this.elseValue:e||""}_toPascalCase(e){let t=e.match(/[a-z0-9]+/gi);return t?t.map(i=>i.charAt(0).toUpperCase()+i.substr(1).toLowerCase()).join(""):e}_toCamelCase(e){let t=e.match(/[a-z0-9]+/gi);return t?t.map((i,n)=>n===0?i.toLowerCase():i.charAt(0).toUpperCase()+i.substr(1).toLowerCase()).join(""):e}clone(){return new fn(this.index,this.shorthandName,this.ifValue,this.elseValue)}},Ya=class extends Qf{constructor(e){super();this.name=e}resolve(e){let t=e.resolve(this);return this.transform&&(t=this.transform.resolve(t||"")),t!==void 0?(this._children=[new ei(t)],!0):!1}clone(){let e=new Ya(this.name);return this.transform&&(e.transform=this.transform.clone()),e._children=this.children.map(t=>t.clone()),e}};function Mw(s,e){let t=[...s];for(;t.length>0;){let i=t.shift();if(!e(i))break;t.unshift(...i.children)}}var ec=class extends Ms{get placeholderInfo(){if(!this._placeholders){let e=[],t;this.walk(function(i){return i instanceof Bi&&(e.push(i),t=!t||t.index<i.index?i:t),!0}),this._placeholders={all:e,last:t}}return this._placeholders}get placeholders(){let{all:e}=this.placeholderInfo;return e}offset(e){let t=0,i=!1;return this.walk(n=>n===e?(i=!0,!1):(t+=n.len(),!0)),i?t:-1}fullLen(e){let t=0;return Mw([e],i=>(t+=i.len(),!0)),t}enclosingPlaceholders(e){let t=[],{parent:i}=e;for(;i;)i instanceof Bi&&t.push(i),i=i.parent;return t}resolveVariables(e){return this.walk(t=>(t instanceof Ya&&t.resolve(e)&&(this._placeholders=void 0),!0)),this}appendChild(e){return this._placeholders=void 0,super.appendChild(e)}replace(e,t){return this._placeholders=void 0,super.replace(e,t)}clone(){let e=new ec;return this._children=this.children.map(t=>t.clone()),e}walk(e){Mw(this.children,e)}},Vo=class{constructor(){this._scanner=new Yi,this._token={type:14,pos:0,len:0}}static escape(e){return e.replace(/\$|}|\\/g,"\\$&")}static guessNeedsClipboard(e){return/\${?CLIPBOARD/.test(e)}parse(e,t,i){this._scanner.text(e),this._token=this._scanner.next();let n=new ec;for(;this._parse(n););let o=new Map,r=[],a=0;n.walk(l=>(l instanceof Bi&&(a+=1,l.isFinalTabstop?o.set(0,void 0):!o.has(l.index)&&l.children.length>0?o.set(l.index,l.children):r.push(l)),!0));for(let l of r){let c=o.get(l.index);if(c){let d=new Bi(l.index);d.transform=l.transform;for(let h of c)d.appendChild(h.clone());n.replace(l,[d])}}return i||(i=a>0&&t),!o.has(0)&&i&&n.appendChild(new Bi(0)),n}_accept(e,t){if(e===void 0||this._token.type===e){let i=t?this._scanner.tokenText(this._token):!0;return this._token=this._scanner.next(),i}return!1}_backTo(e){return this._scanner.pos=e.pos+e.len,this._token=e,!1}_until(e){let t=this._token;for(;this._token.type!==e;){if(this._token.type===14)return!1;if(this._token.type===5){let n=this._scanner.next();if(n.type!==0&&n.type!==4&&n.type!==5)return!1}this._token=this._scanner.next()}let i=this._scanner.value.substring(t.pos,this._token.pos).replace(/\\(\$|}|\\)/g,"$1");return this._token=this._scanner.next(),i}_parse(e){return this._parseEscaped(e)||this._parseTabstopOrVariableName(e)||this._parseComplexPlaceholder(e)||this._parseComplexVariable(e)||this._parseAnything(e)}_parseEscaped(e){let t;return(t=this._accept(5,!0))?(t=this._accept(0,!0)||this._accept(4,!0)||this._accept(5,!0)||t,e.appendChild(new ei(t)),!0):!1}_parseTabstopOrVariableName(e){let t,i=this._token;return this._accept(0)&&(t=this._accept(9,!0)||this._accept(8,!0))?(e.appendChild(/^\d+$/.test(t)?new Bi(Number(t)):new Ya(t)),!0):this._backTo(i)}_parseComplexPlaceholder(e){let t,i=this._token;if(!(this._accept(0)&&this._accept(3)&&(t=this._accept(8,!0))))return this._backTo(i);let o=new Bi(Number(t));if(this._accept(1))for(;;){if(this._accept(4))return e.appendChild(o),!0;if(!this._parse(o))return e.appendChild(new ei("${"+t+":")),o.children.forEach(e.appendChild,e),!0}else if(o.index>0&&this._accept(7)){let r=new Ds;for(;;){if(this._parseChoiceElement(r)){if(this._accept(2))continue;if(this._accept(7)&&(o.appendChild(r),this._accept(4)))return e.appendChild(o),!0}return this._backTo(i),!1}}else return this._accept(6)?this._parseTransform(o)?(e.appendChild(o),!0):(this._backTo(i),!1):this._accept(4)?(e.appendChild(o),!0):this._backTo(i)}_parseChoiceElement(e){let t=this._token,i=[];for(;!(this._token.type===2||this._token.type===7);){let n;if((n=this._accept(5,!0))?n=this._accept(2,!0)||this._accept(7,!0)||this._accept(5,!0)||n:n=this._accept(void 0,!0),!n)return this._backTo(t),!1;i.push(n)}return i.length===0?(this._backTo(t),!1):(e.appendChild(new ei(i.join(""))),!0)}_parseComplexVariable(e){let t,i=this._token;if(!(this._accept(0)&&this._accept(3)&&(t=this._accept(9,!0))))return this._backTo(i);let o=new Ya(t);if(this._accept(1))for(;;){if(this._accept(4))return e.appendChild(o),!0;if(!this._parse(o))return e.appendChild(new ei("${"+t+":")),o.children.forEach(e.appendChild,e),!0}else return this._accept(6)?this._parseTransform(o)?(e.appendChild(o),!0):(this._backTo(i),!1):this._accept(4)?(e.appendChild(o),!0):this._backTo(i)}_parseTransform(e){let t=new gp,i="",n="";for(;!this._accept(6);){let o;if(o=this._accept(5,!0)){o=this._accept(6,!0)||o,i+=o;continue}if(this._token.type!==14){i+=this._accept(void 0,!0);continue}return!1}for(;!this._accept(6);){let o;if(o=this._accept(5,!0)){o=this._accept(5,!0)||this._accept(6,!0)||o,t.appendChild(new ei(o));continue}if(!(this._parseFormatString(t)||this._parseAnything(t)))return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!0);continue}return!1}try{t.regexp=new RegExp(i,n)}catch(o){return!1}return e.transform=t,!0}_parseFormatString(e){let t=this._token;if(!this._accept(0))return!1;let i=!1;this._accept(3)&&(i=!0);let n=this._accept(8,!0);if(n)if(i){if(this._accept(4))return e.appendChild(new fn(Number(n))),!0;if(!this._accept(1))return this._backTo(t),!1}else return e.appendChild(new fn(Number(n))),!0;else return this._backTo(t),!1;if(this._accept(6)){let o=this._accept(9,!0);return!o||!this._accept(4)?(this._backTo(t),!1):(e.appendChild(new fn(Number(n),o)),!0)}else if(this._accept(11)){let o=this._until(4);if(o)return e.appendChild(new fn(Number(n),void 0,o,void 0)),!0}else if(this._accept(12)){let o=this._until(4);if(o)return e.appendChild(new fn(Number(n),void 0,void 0,o)),!0}else if(this._accept(13)){let o=this._until(1);if(o){let r=this._until(4);if(r)return e.appendChild(new fn(Number(n),void 0,o,r)),!0}}else{let o=this._until(4);if(o)return e.appendChild(new fn(Number(n),void 0,void 0,o)),!0}return this._backTo(t),!1}_parseAnything(e){return this._token.type!==14?(e.appendChild(new ei(this._scanner.tokenText(this._token))),this._accept(void 0),!0):!1}};vt();G();Ye();Do();ee();Mt();jt();vS();Hi();Ye();var At=new Uint8Array(16),di=[];for(let s=0;s<256;s++)di.push(s.toString(16).padStart(2,"0"));var ey;typeof crypto=="object"&&typeof crypto.getRandomValues=="function"?ey=crypto.getRandomValues.bind(crypto):ey=function(s){for(let e=0;e<s.length;e++)s[e]=Math.floor(Math.random()*256);return s};function Dw(){ey(At),At[6]=At[6]&15|64,At[8]=At[8]&63|128;let s=0,e="";return e+=di[At[s++]],e+=di[At[s++]],e+=di[At[s++]],e+=di[At[s++]],e+="-",e+=di[At[s++]],e+=di[At[s++]],e+="-",e+=di[At[s++]],e+=di[At[s++]],e+="-",e+=di[At[s++]],e+=di[At[s++]],e+="-",e+=di[At[s++]],e+=di[At[s++]],e+=di[At[s++]],e+=di[At[s++]],e+=di[At[s++]],e+=di[At[s++]],e}sn();Q();Xt();Q();var fp="code-workspace",Q9=[{name:u("codeWorkspace","Code Workspace"),extensions:[fp]}];function ty(s){let e=s;return typeof(e==null?void 0:e.id)=="string"&&_e.isUri(e.uri)}function Rw(s){if(s.configuration)return{id:s.id,configPath:s.configuration};if(s.folders.length===1)return{id:s.id,uri:s.folders[0].uri}}var dU=Object.freeze({CURRENT_YEAR:!0,CURRENT_YEAR_SHORT:!0,CURRENT_MONTH:!0,CURRENT_DATE:!0,CURRENT_HOUR:!0,CURRENT_MINUTE:!0,CURRENT_SECOND:!0,CURRENT_DAY_NAME:!0,CURRENT_DAY_NAME_SHORT:!0,CURRENT_MONTH_NAME:!0,CURRENT_MONTH_NAME_SHORT:!0,CURRENT_SECONDS_UNIX:!0,SELECTION:!0,CLIPBOARD:!0,TM_SELECTED_TEXT:!0,TM_CURRENT_LINE:!0,TM_CURRENT_WORD:!0,TM_LINE_INDEX:!0,TM_LINE_NUMBER:!0,TM_FILENAME:!0,TM_FILENAME_BASE:!0,TM_DIRECTORY:!0,TM_FILEPATH:!0,RELATIVE_FILEPATH:!0,BLOCK_COMMENT_START:!0,BLOCK_COMMENT_END:!0,LINE_COMMENT:!0,WORKSPACE_NAME:!0,WORKSPACE_FOLDER:!0,RANDOM:!0,RANDOM_HEX:!0,UUID:!0}),iy=class{constructor(e){this._delegates=e}resolve(e){for(let t of this._delegates){let i=t.resolve(e);if(i!==void 0)return i}}},ny=class{constructor(e,t,i,n){this._model=e,this._selection=t,this._selectionIdx=i,this._overtypingCapturer=n}resolve(e){let{name:t}=e;if(t==="SELECTION"||t==="TM_SELECTED_TEXT"){let i=this._model.getValueInRange(this._selection)||void 0,n=this._selection.startLineNumber!==this._selection.endLineNumber;if(!i&&this._overtypingCapturer){let o=this._overtypingCapturer.getLastOvertypedInfo(this._selectionIdx);o&&(i=o.value,n=o.multiline)}if(i&&n&&e.snippet){let o=this._model.getLineContent(this._selection.startLineNumber),r=pt(o,0,this._selection.startColumn-1),a=r;e.snippet.walk(c=>c===e?!1:(c instanceof ei&&(a=pt(ts(c.value).pop())),!0));let l=dr(a,r);i=i.replace(/(\r\n|\r|\n)(.*)/g,(c,d,h)=>`${d}${a.substr(l)}${h}`)}return i}else{if(t==="TM_CURRENT_LINE")return this._model.getLineContent(this._selection.positionLineNumber);if(t==="TM_CURRENT_WORD"){let i=this._model.getWordAtPosition({lineNumber:this._selection.positionLineNumber,column:this._selection.positionColumn});return i&&i.word||void 0}else{if(t==="TM_LINE_INDEX")return String(this._selection.positionLineNumber-1);if(t==="TM_LINE_NUMBER")return String(this._selection.positionLineNumber)}}}},oy=class{constructor(e,t){this._labelService=e,this._model=t}resolve(e){let{name:t}=e;if(t==="TM_FILENAME")return da(this._model.uri.fsPath);if(t==="TM_FILENAME_BASE"){let i=da(this._model.uri.fsPath),n=i.lastIndexOf(".");return n<=0?i:i.slice(0,n)}else{if(t==="TM_DIRECTORY")return SS(this._model.uri.fsPath)==="."?"":this._labelService.getUriLabel(Da(this._model.uri));if(t==="TM_FILEPATH")return this._labelService.getUriLabel(this._model.uri);if(t==="RELATIVE_FILEPATH")return this._labelService.getUriLabel(this._model.uri,{relative:!0,noPrefix:!0})}}},ry=class{constructor(e,t,i,n){this._readClipboardText=e,this._selectionIdx=t,this._selectionCount=i,this._spread=n}resolve(e){if(e.name!=="CLIPBOARD")return;let t=this._readClipboardText();if(!!t){if(this._spread){let i=t.split(/\r\n|\n|\r/).filter(n=>!wS(n));if(i.length===this._selectionCount)return i[this._selectionIdx]}return t}}},sy=class{constructor(e,t){this._model=e,this._selection=t}resolve(e){let{name:t}=e,i=this._model.getLanguageIdAtPosition(this._selection.selectionStartLineNumber,this._selection.selectionStartColumn),n=ii.getComments(i);if(!!n){if(t==="LINE_COMMENT")return n.lineCommentToken||void 0;if(t==="BLOCK_COMMENT_START")return n.blockCommentStartToken||void 0;if(t==="BLOCK_COMMENT_END")return n.blockCommentEndToken||void 0}}},yn=class{constructor(){this._date=new Date}resolve(e){let{name:t}=e;if(t==="CURRENT_YEAR")return String(this._date.getFullYear());if(t==="CURRENT_YEAR_SHORT")return String(this._date.getFullYear()).slice(-2);if(t==="CURRENT_MONTH")return String(this._date.getMonth().valueOf()+1).padStart(2,"0");if(t==="CURRENT_DATE")return String(this._date.getDate().valueOf()).padStart(2,"0");if(t==="CURRENT_HOUR")return String(this._date.getHours().valueOf()).padStart(2,"0");if(t==="CURRENT_MINUTE")return String(this._date.getMinutes().valueOf()).padStart(2,"0");if(t==="CURRENT_SECOND")return String(this._date.getSeconds().valueOf()).padStart(2,"0");if(t==="CURRENT_DAY_NAME")return yn.dayNames[this._date.getDay()];if(t==="CURRENT_DAY_NAME_SHORT")return yn.dayNamesShort[this._date.getDay()];if(t==="CURRENT_MONTH_NAME")return yn.monthNames[this._date.getMonth()];if(t==="CURRENT_MONTH_NAME_SHORT")return yn.monthNamesShort[this._date.getMonth()];if(t==="CURRENT_SECONDS_UNIX")return String(Math.floor(this._date.getTime()/1e3))}};yn.dayNames=[u("Sunday","Sunday"),u("Monday","Monday"),u("Tuesday","Tuesday"),u("Wednesday","Wednesday"),u("Thursday","Thursday"),u("Friday","Friday"),u("Saturday","Saturday")];yn.dayNamesShort=[u("SundayShort","Sun"),u("MondayShort","Mon"),u("TuesdayShort","Tue"),u("WednesdayShort","Wed"),u("ThursdayShort","Thu"),u("FridayShort","Fri"),u("SaturdayShort","Sat")];yn.monthNames=[u("January","January"),u("February","February"),u("March","March"),u("April","April"),u("May","May"),u("June","June"),u("July","July"),u("August","August"),u("September","September"),u("October","October"),u("November","November"),u("December","December")];yn.monthNamesShort=[u("JanuaryShort","Jan"),u("FebruaryShort","Feb"),u("MarchShort","Mar"),u("AprilShort","Apr"),u("MayShort","May"),u("JuneShort","Jun"),u("JulyShort","Jul"),u("AugustShort","Aug"),u("SeptemberShort","Sep"),u("OctoberShort","Oct"),u("NovemberShort","Nov"),u("DecemberShort","Dec")];var ay=class{constructor(e){this._workspaceService=e}resolve(e){if(!this._workspaceService)return;let t=Rw(this._workspaceService.getWorkspace());if(!!t){if(e.name==="WORKSPACE_NAME")return this._resolveWorkspaceName(t);if(e.name==="WORKSPACE_FOLDER")return this._resoveWorkspacePath(t)}}_resolveWorkspaceName(e){if(ty(e))return da(e.uri.path);let t=da(e.configPath.path);return t.endsWith(fp)&&(t=t.substr(0,t.length-fp.length-1)),t}_resoveWorkspacePath(e){if(ty(e))return Xu(e.uri.fsPath);let t=da(e.configPath.path),i=e.configPath.fsPath;return i.endsWith(t)&&(i=i.substr(0,i.length-t.length-1)),i?Xu(i):"/"}},ly=class{resolve(e){let{name:t}=e;if(t==="RANDOM")return Math.random().toString().slice(-6);if(t==="RANDOM_HEX")return Math.random().toString(16).slice(-6);if(t==="UUID")return Dw()}};var Zi=class{constructor(e,t,i,n){this._editor=e,this._snippet=t,this._offset=i,this._snippetLineLeadingWhitespace=n,this._nestingLevel=1,this._placeholderGroups=_m(t.placeholders,Bi.compareByIndex),this._placeholderGroupsIdx=-1}dispose(){this._placeholderDecorations&&this._editor.deltaDecorations([...this._placeholderDecorations.values()],[]),this._placeholderGroups.length=0}_initDecorations(){if(this._placeholderDecorations)return;this._placeholderDecorations=new Map;let e=this._editor.getModel();this._editor.changeDecorations(t=>{for(let i of this._snippet.placeholders){let n=this._snippet.offset(i),o=this._snippet.fullLen(i),r=b.fromPositions(e.getPositionAt(this._offset+n),e.getPositionAt(this._offset+n+o)),a=i.isFinalTabstop?Zi._decor.inactiveFinal:Zi._decor.inactive,l=t.addDecoration(r,a);this._placeholderDecorations.set(i,l)}})}move(e){if(!this._editor.hasModel())return[];if(this._initDecorations(),this._placeholderGroupsIdx>=0){let n=[];for(let o of this._placeholderGroups[this._placeholderGroupsIdx])if(o.transform){let r=this._placeholderDecorations.get(o),a=this._editor.getModel().getDecorationRange(r),l=this._editor.getModel().getValueInRange(a),c=o.transform.resolve(l).split(/\r\n|\r|\n/);for(let d=1;d<c.length;d++)c[d]=this._editor.getModel().normalizeIndentation(this._snippetLineLeadingWhitespace+c[d]);n.push(Ge.replace(a,c.join(this._editor.getModel().getEOL())))}n.length>0&&this._editor.executeEdits("snippet.placeholderTransform",n)}let t=!1;e===!0&&this._placeholderGroupsIdx<this._placeholderGroups.length-1?(this._placeholderGroupsIdx+=1,t=!0):e===!1&&this._placeholderGroupsIdx>0&&(this._placeholderGroupsIdx-=1,t=!0);let i=this._editor.getModel().changeDecorations(n=>{let o=new Set,r=[];for(let a of this._placeholderGroups[this._placeholderGroupsIdx]){let l=this._placeholderDecorations.get(a),c=this._editor.getModel().getDecorationRange(l);r.push(new X(c.startLineNumber,c.startColumn,c.endLineNumber,c.endColumn)),t=t&&this._hasPlaceholderBeenCollapsed(a),n.changeDecorationOptions(l,a.isFinalTabstop?Zi._decor.activeFinal:Zi._decor.active),o.add(a);for(let d of this._snippet.enclosingPlaceholders(a)){let h=this._placeholderDecorations.get(d);n.changeDecorationOptions(h,d.isFinalTabstop?Zi._decor.activeFinal:Zi._decor.active),o.add(d)}}for(let[a,l]of this._placeholderDecorations)o.has(a)||n.changeDecorationOptions(l,a.isFinalTabstop?Zi._decor.inactiveFinal:Zi._decor.inactive);return r});return t?this.move(e):i!=null?i:[]}_hasPlaceholderBeenCollapsed(e){let t=e;for(;t;){if(t instanceof Bi){let i=this._placeholderDecorations.get(t);if(this._editor.getModel().getDecorationRange(i).isEmpty()&&t.toString().length>0)return!0}t=t.parent}return!1}get isAtFirstPlaceholder(){return this._placeholderGroupsIdx<=0||this._placeholderGroups.length===0}get isAtLastPlaceholder(){return this._placeholderGroupsIdx===this._placeholderGroups.length-1}get hasPlaceholder(){return this._snippet.placeholders.length>0}computePossibleSelections(){let e=new Map;for(let t of this._placeholderGroups){let i;for(let n of t){if(n.isFinalTabstop)break;i||(i=[],e.set(n.index,i));let o=this._placeholderDecorations.get(n),r=this._editor.getModel().getDecorationRange(o);if(!r){e.delete(n.index);break}i.push(r)}}return e}get choice(){return this._placeholderGroups[this._placeholderGroupsIdx][0].choice}merge(e){let t=this._editor.getModel();this._nestingLevel*=10,this._editor.changeDecorations(i=>{for(let n of this._placeholderGroups[this._placeholderGroupsIdx]){let o=e.shift();console.assert(!o._placeholderDecorations);let r=o._snippet.placeholderInfo.last.index;for(let l of o._snippet.placeholderInfo.all)l.isFinalTabstop?l.index=n.index+(r+1)/this._nestingLevel:l.index=n.index+l.index/this._nestingLevel;this._snippet.replace(n,o._snippet.children);let a=this._placeholderDecorations.get(n);i.removeDecoration(a),this._placeholderDecorations.delete(n);for(let l of o._snippet.placeholders){let c=o._snippet.offset(l),d=o._snippet.fullLen(l),h=b.fromPositions(t.getPositionAt(o._offset+c),t.getPositionAt(o._offset+c+d)),p=i.addDecoration(h,Zi._decor.inactive);this._placeholderDecorations.set(l,p)}}this._placeholderGroups=_m(this._snippet.placeholders,Bi.compareByIndex)})}};Zi._decor={active:xe.register({description:"snippet-placeholder-1",stickiness:0,className:"snippet-placeholder"}),inactive:xe.register({description:"snippet-placeholder-2",stickiness:1,className:"snippet-placeholder"}),activeFinal:xe.register({description:"snippet-placeholder-3",stickiness:1,className:"finish-snippet-placeholder"}),inactiveFinal:xe.register({description:"snippet-placeholder-4",stickiness:1,className:"finish-snippet-placeholder"})};var Aw={overwriteBefore:0,overwriteAfter:0,adjustWhitespace:!0,clipboardText:void 0,overtypingCapturer:void 0},Ji=class{constructor(e,t,i=Aw){this._templateMerges=[],this._snippets=[],this._editor=e,this._template=t,this._options=i}static adjustWhitespace(e,t,i,n,o){let r=e.getLineContent(t.lineNumber),a=pt(r,0,t.column-1),l;return i.walk(c=>{if(!(c instanceof ei)||c.parent instanceof Ds)return!0;let d=c.value.split(/\r\n|\r|\n/);if(n){let p=i.offset(c);if(p===0)d[0]=e.normalizeIndentation(d[0]);else{l=l!=null?l:i.toString();let m=l.charCodeAt(p-1);(m===10||m===13)&&(d[0]=e.normalizeIndentation(a+d[0]))}for(let m=1;m<d.length;m++)d[m]=e.normalizeIndentation(a+d[m])}let h=d.join(e.getEOL());return h!==c.value&&(c.parent.replace(c,[new ei(h)]),l=void 0),!0}),a}static adjustSelection(e,t,i,n){if(i!==0||n!==0){let{positionLineNumber:o,positionColumn:r}=t,a=r-i,l=r+n,c=e.validateRange({startLineNumber:o,startColumn:a,endLineNumber:o,endColumn:l});t=X.createWithDirection(c.startLineNumber,c.startColumn,c.endLineNumber,c.endColumn,t.getDirection())}return t}static createEditsAndSnippets(e,t,i,n,o,r,a,l){let c=[],d=[];if(!e.hasModel())return{edits:c,snippets:d};let h=e.getModel(),p=e.invokeWithinContext(B=>B.get(Ox)),m=e.invokeWithinContext(B=>new oy(B.get(xr),h)),f=()=>a,v=0,_=h.getValueInRange(Ji.adjustSelection(h,e.getSelection(),i,0)),w=h.getValueInRange(Ji.adjustSelection(h,e.getSelection(),0,n)),R=h.getLineFirstNonWhitespaceColumn(e.getSelection().positionLineNumber),P=e.getSelections().map((B,V)=>({selection:B,idx:V})).sort((B,V)=>b.compareRangesUsingStarts(B.selection,V.selection));for(let{selection:B,idx:V}of P){let ce=Ji.adjustSelection(h,B,i,0),Te=Ji.adjustSelection(h,B,0,n);_!==h.getValueInRange(ce)&&(ce=B),w!==h.getValueInRange(Te)&&(Te=B);let kt=B.setStartPosition(ce.startLineNumber,ce.startColumn).setEndPosition(Te.endLineNumber,Te.endColumn),Wt=new Vo().parse(t,!0,o),Bt=kt.getStartPosition(),nn=Ji.adjustWhitespace(h,Bt,Wt,r||V>0&&R!==h.getLineFirstNonWhitespaceColumn(B.positionLineNumber),!0);Wt.resolveVariables(new iy([m,new ry(f,V,P.length,e.getOption(71)==="spread"),new ny(h,B,V,l),new sy(h,B),new yn,new ay(p),new ly]));let Sn=h.getOffsetAt(Bt)+v;v+=Wt.toString().length-h.getValueLengthInRange(kt),c[V]=Ge.replace(kt,Wt.toString()),c[V].identifier={major:V,minor:0},d[V]=new Zi(e,Wt,Sn,nn)}return{edits:c,snippets:d}}dispose(){xt(this._snippets)}_logInfo(){return`template="${this._template}", merged_templates="${this._templateMerges.join(" -> ")}"`}insert(){if(!this._editor.hasModel())return;let{edits:e,snippets:t}=Ji.createEditsAndSnippets(this._editor,this._template,this._options.overwriteBefore,this._options.overwriteAfter,!1,this._options.adjustWhitespace,this._options.clipboardText,this._options.overtypingCapturer);this._snippets=t,this._editor.executeEdits("snippet",e,i=>this._snippets[0].hasPlaceholder?this._move(!0):i.filter(n=>!!n.identifier).map(n=>X.fromPositions(n.range.getEndPosition()))),this._editor.revealRange(this._editor.getSelections()[0])}merge(e,t=Aw){if(!this._editor.hasModel())return;this._templateMerges.push([this._snippets[0]._nestingLevel,this._snippets[0]._placeholderGroupsIdx,e]);let{edits:i,snippets:n}=Ji.createEditsAndSnippets(this._editor,e,t.overwriteBefore,t.overwriteAfter,!0,t.adjustWhitespace,t.clipboardText,t.overtypingCapturer);this._editor.executeEdits("snippet",i,o=>{for(let r of this._snippets)r.merge(n);return console.assert(n.length===0),this._snippets[0].hasPlaceholder?this._move(void 0):o.filter(r=>!!r.identifier).map(r=>X.fromPositions(r.range.getEndPosition()))})}next(){let e=this._move(!0);this._editor.setSelections(e),this._editor.revealPositionInCenterIfOutsideViewport(e[0].getPosition())}prev(){let e=this._move(!1);this._editor.setSelections(e),this._editor.revealPositionInCenterIfOutsideViewport(e[0].getPosition())}_move(e){let t=[];for(let i of this._snippets){let n=i.move(e);t.push(...n)}return t}get isAtFirstPlaceholder(){return this._snippets[0].isAtFirstPlaceholder}get isAtLastPlaceholder(){return this._snippets[0].isAtLastPlaceholder}get hasPlaceholder(){return this._snippets[0].hasPlaceholder}get choice(){return this._snippets[0].choice}isSelectionWithinPlaceholders(){if(!this.hasPlaceholder)return!1;let e=this._editor.getSelections();if(e.length<this._snippets.length)return!1;let t=new Map;for(let i of this._snippets){let n=i.computePossibleSelections();if(t.size===0)for(let[o,r]of n){r.sort(b.compareRangesUsingStarts);for(let a of e)if(r[0].containsRange(a)){t.set(o,[]);break}}if(t.size===0)return!1;t.forEach((o,r)=>{o.push(...n.get(r))})}e.sort(b.compareRangesUsingStarts);for(let[i,n]of t){if(n.length!==e.length){t.delete(i);continue}n.sort(b.compareRangesUsingStarts);for(let o=0;o<n.length;o++)if(!n[o].containsRange(e[o])){t.delete(i);continue}}return t.size>0}};Ln();vt();ke();ut();Le();De();QL();G();Pi();Wl();qt();ue();Do();tt();ee();He();G();ue();ee();Mt();He();ut();Le();G();Wl();qt();Xt();tt();ee();Re();Co();Q();ri();wt();Ee();var ic=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Ce={Visible:new pe("suggestWidgetVisible",!1,u("suggestWidgetVisible","Whether suggestion are visible")),DetailsVisible:new pe("suggestWidgetDetailsVisible",!1,u("suggestWidgetDetailsVisible","Whether suggestion details are visible")),MultipleSuggestions:new pe("suggestWidgetMultipleSuggestions",!1,u("suggestWidgetMultipleSuggestions","Whether there are multiple suggestions to pick from")),MakesTextEdit:new pe("suggestionMakesTextEdit",!0,u("suggestionMakesTextEdit","Whether inserting the current suggestion yields in a change or has everything already been typed")),AcceptSuggestionsOnEnter:new pe("acceptSuggestionOnEnter",!0,u("acceptSuggestionOnEnter","Whether suggestions are inserted when pressing Enter")),HasInsertAndReplaceRange:new pe("suggestionHasInsertAndReplaceRange",!1,u("suggestionHasInsertAndReplaceRange","Whether the current suggestion has insert and replace behaviour")),InsertMode:new pe("suggestionInsertMode",void 0,{type:"string",description:u("suggestionInsertMode","Whether the default behaviour is to insert or replace")}),CanResolve:new pe("suggestionCanResolve",!1,u("suggestionCanResolve","Whether the current suggestion supports to resolve further details"))},so=new se("suggestWidgetStatusBar"),Fw=class{constructor(e,t,i,n){this.position=e,this.completion=t,this.container=i,this.provider=n,this.isInvalid=!1,this.score=gs.Default,this.distance=0,this.textLabel=typeof t.label=="string"?t.label:t.label.label,this.labelLow=this.textLabel.toLowerCase(),this.isInvalid=!this.textLabel,this.sortTextLow=t.sortText&&t.sortText.toLowerCase(),this.filterTextLow=t.filterText&&t.filterText.toLowerCase(),b.isIRange(t.range)?(this.editStart=new U(t.range.startLineNumber,t.range.startColumn),this.editInsertEnd=new U(t.range.endLineNumber,t.range.endColumn),this.editReplaceEnd=new U(t.range.endLineNumber,t.range.endColumn),this.isInvalid=this.isInvalid||b.spansMultipleLines(t.range)||t.range.startLineNumber!==e.lineNumber):(this.editStart=new U(t.range.insert.startLineNumber,t.range.insert.startColumn),this.editInsertEnd=new U(t.range.insert.endLineNumber,t.range.insert.endColumn),this.editReplaceEnd=new U(t.range.replace.endLineNumber,t.range.replace.endColumn),this.isInvalid=this.isInvalid||b.spansMultipleLines(t.range.insert)||b.spansMultipleLines(t.range.replace)||t.range.insert.startLineNumber!==e.lineNumber||t.range.replace.startLineNumber!==e.lineNumber||t.range.insert.startColumn!==t.range.replace.startColumn),typeof n.resolveCompletionItem!="function"&&(this._resolveCache=Promise.resolve(),this._isResolved=!0)}get isResolved(){return!!this._isResolved}resolve(e){return ic(this,void 0,void 0,function*(){if(!this._resolveCache){let t=e.onCancellationRequested(()=>{this._resolveCache=void 0,this._isResolved=!1});this._resolveCache=Promise.resolve(this.provider.resolveCompletionItem(this.completion,e)).then(i=>{Object.assign(this.completion,i),this._isResolved=!0,t.dispose()},i=>{jn(i)&&(this._resolveCache=void 0,this._isResolved=!1)})}return this._resolveCache})}},Za=class{constructor(e=2,t=new Set,i=new Set,n=!0){this.snippetSortOrder=e,this.kindFilter=t,this.providerFilter=i,this.showDeprecated=n}};Za.default=new Za;var tc;function Nw(){return tc}var zw=class{constructor(e,t,i,n){this.items=e,this.needsClipboard=t,this.durations=i,this.disposable=n}};function cy(s,e,t=Za.default,i={triggerKind:0},n=ge.None){return ic(this,void 0,void 0,function*(){let o=new on(!0);e=e.clone();let r=s.getWordAtPosition(e),a=r?new b(e.lineNumber,r.startColumn,e.lineNumber,r.endColumn):b.fromPositions(e),l={replace:a,insert:a.setEndPosition(e.lineNumber,e.column)},c=[],d=new A,h=[],p=!1,m=(v,_,w)=>{var R,P,B;let V=!1;if(!_)return V;for(let ce of _.suggestions)if(!t.kindFilter.has(ce.kind)){if(!t.showDeprecated&&((R=ce==null?void 0:ce.tags)===null||R===void 0?void 0:R.includes(1)))continue;ce.range||(ce.range=l),ce.sortText||(ce.sortText=typeof ce.label=="string"?ce.label:ce.label.label),!p&&ce.insertTextRules&&ce.insertTextRules&4&&(p=Vo.guessNeedsClipboard(ce.insertText)),c.push(new Fw(e,ce,_,v)),V=!0}return bh(_)&&d.add(_),h.push({providerName:(P=v._debugDisplayName)!==null&&P!==void 0?P:"unkown_provider",elapsedProvider:(B=_.duration)!==null&&B!==void 0?B:-1,elapsedOverall:w.elapsed()}),V},f=(()=>ic(this,void 0,void 0,function*(){if(!tc||t.kindFilter.has(27)||t.providerFilter.size>0&&!t.providerFilter.has(tc))return;let v=new on(!0),_=yield tc.provideCompletionItems(s,e,i,n);m(tc,_,v)}))();for(let v of vo.orderedGroups(s)){let _=!1;if(yield Promise.all(v.map(w=>ic(this,void 0,void 0,function*(){if(!(t.providerFilter.size>0&&!t.providerFilter.has(w)))try{let R=new on(!0),P=yield w.provideCompletionItems(s,e,i,n);_=m(w,P,R)||_}catch(R){Ue(R)}}))),_||n.isCancellationRequested)break}return yield f,n.isCancellationRequested?(d.dispose(),Promise.reject(fh())):new zw(c.sort(uy(t.snippetSortOrder)),p,{entries:h,elapsed:o.elapsed()},d)})}function hy(s,e){if(s.sortTextLow&&e.sortTextLow){if(s.sortTextLow<e.sortTextLow)return-1;if(s.sortTextLow>e.sortTextLow)return 1}return s.completion.label<e.completion.label?-1:s.completion.label>e.completion.label?1:s.completion.kind-e.completion.kind}function G1(s,e){if(s.completion.kind!==e.completion.kind){if(s.completion.kind===27)return-1;if(e.completion.kind===27)return 1}return hy(s,e)}function j1(s,e){if(s.completion.kind!==e.completion.kind){if(s.completion.kind===27)return 1;if(e.completion.kind===27)return-1}return hy(s,e)}var yp=new Map;yp.set(0,G1);yp.set(2,j1);yp.set(1,hy);function uy(s){return yp.get(s)}Pe.registerCommand("_executeCompletionItemProvider",(s,...e)=>ic(void 0,void 0,void 0,function*(){let[t,i,n,o]=e;qe(_e.isUri(t)),qe(U.isIPosition(i)),qe(typeof n=="string"||!n),qe(typeof o=="number"||!o);let r=yield s.get(Gt).createModelReference(t);try{let a={incomplete:!1,suggestions:[]},l=[],c=yield cy(r.object.textEditorModel,U.lift(i),void 0,{triggerCharacter:n,triggerKind:n?1:0});for(let d of c.items)l.length<(o!=null?o:0)&&l.push(d.resolve(ge.None)),a.incomplete=a.incomplete||d.container.incomplete,a.suggestions.push(d.completion);try{return yield Promise.all(l),a}finally{setTimeout(()=>c.disposable.dispose(),100)}}finally{r.dispose()}}));var dy=new class{constructor(){this.onlyOnceSuggestions=[]}provideCompletionItems(){let e={suggestions:this.onlyOnceSuggestions.slice(0)};return this.onlyOnceSuggestions.length=0,e}};vo.register("*",dy);function Ow(s,e){setTimeout(()=>{var t;dy.onlyOnceSuggestions.push(...e),(t=s.getContribution("editor.contrib.suggestController"))===null||t===void 0||t.triggerSuggest(new Set().add(dy))},0)}Q();Ee();Mh();var U1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Hw=function(s,e){return function(t,i){e(t,i,s)}},Ww={overwriteBefore:0,overwriteAfter:0,undoStopBefore:!0,undoStopAfter:!0,adjustWhitespace:!0,clipboardText:void 0,overtypingCapturer:void 0},Et=class nc{constructor(e,t,i){this._editor=e,this._logService=t,this._snippetListener=new A,this._modelVersionId=-1,this._inSnippet=nc.InSnippetMode.bindTo(i),this._hasNextTabstop=nc.HasNextTabstop.bindTo(i),this._hasPrevTabstop=nc.HasPrevTabstop.bindTo(i)}static get(e){return e.getContribution(nc.ID)}dispose(){var e;this._inSnippet.reset(),this._hasPrevTabstop.reset(),this._hasNextTabstop.reset(),(e=this._session)===null||e===void 0||e.dispose(),this._snippetListener.dispose()}insert(e,t){try{this._doInsert(e,typeof t=="undefined"?Ww:Object.assign(Object.assign({},Ww),t))}catch(i){this.cancel(),this._logService.error(i),this._logService.error("snippet_error"),this._logService.error("insert_template=",e),this._logService.error("existing_template=",this._session?this._session._logInfo():"<no_session>")}}_doInsert(e,t){!this._editor.hasModel()||(this._snippetListener.clear(),t.undoStopBefore&&this._editor.getModel().pushStackElement(),this._session?this._session.merge(e,t):(this._modelVersionId=this._editor.getModel().getAlternativeVersionId(),this._session=new Ji(this._editor,e,t),this._session.insert()),t.undoStopAfter&&this._editor.getModel().pushStackElement(),this._updateState(),this._snippetListener.add(this._editor.onDidChangeModelContent(i=>i.isFlush&&this.cancel())),this._snippetListener.add(this._editor.onDidChangeModel(()=>this.cancel())),this._snippetListener.add(this._editor.onDidChangeCursorSelection(()=>this._updateState())))}_updateState(){if(!(!this._session||!this._editor.hasModel())){if(this._modelVersionId===this._editor.getModel().getAlternativeVersionId())return this.cancel();if(!this._session.hasPlaceholder)return this.cancel();if(this._session.isAtLastPlaceholder||!this._session.isSelectionWithinPlaceholders())return this._editor.getModel().pushStackElement(),this.cancel();this._inSnippet.set(!0),this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder),this._hasNextTabstop.set(!this._session.isAtLastPlaceholder),this._handleChoice()}}_handleChoice(){if(!this._session||!this._editor.hasModel()){this._currentChoice=void 0;return}let{choice:e}=this._session;if(!e){this._currentChoice=void 0;return}if(this._currentChoice!==e){this._currentChoice=e,this._editor.setSelections(this._editor.getSelections().map(i=>X.fromPositions(i.getStartPosition())));let[t]=e.options;Ow(this._editor,e.options.map((i,n)=>({kind:13,label:i.value,insertText:i.value,sortText:"a".repeat(n+1),range:b.fromPositions(this._editor.getPosition(),this._editor.getPosition().delta(0,t.value.length))})))}}finish(){for(;this._inSnippet.get();)this.next()}cancel(e=!1){var t;this._inSnippet.reset(),this._hasPrevTabstop.reset(),this._hasNextTabstop.reset(),this._snippetListener.clear(),(t=this._session)===null||t===void 0||t.dispose(),this._session=void 0,this._modelVersionId=-1,e&&this._editor.setSelections([this._editor.getSelection()])}prev(){this._session&&this._session.prev(),this._updateState()}next(){this._session&&this._session.next(),this._updateState()}isInSnippet(){return Boolean(this._inSnippet.get())}};Et.ID="snippetController2";Et.InSnippetMode=new pe("inSnippetMode",!1,u("inSnippetMode","Whether the editor in current in snippet mode"));Et.HasNextTabstop=new pe("hasNextTabstop",!1,u("hasNextTabstop","Whether there is a next tab stop when in snippet mode"));Et.HasPrevTabstop=new pe("hasPrevTabstop",!1,u("hasPrevTabstop","Whether there is a previous tab stop when in snippet mode"));Et=U1([Hw(1,pr),Hw(2,ie)],Et);J(Et.ID,Et);var bp=ct.bindToContribution(Et.get);$(new bp({id:"jumpToNextSnippetPlaceholder",precondition:O.and(Et.InSnippetMode,Et.HasNextTabstop),handler:s=>s.next(),kbOpts:{weight:100+30,kbExpr:S.editorTextFocus,primary:2}}));$(new bp({id:"jumpToPrevSnippetPlaceholder",precondition:O.and(Et.InSnippetMode,Et.HasPrevTabstop),handler:s=>s.prev(),kbOpts:{weight:100+30,kbExpr:S.editorTextFocus,primary:1026}}));$(new bp({id:"leaveSnippet",precondition:Et.InSnippetMode,handler:s=>s.cancel(!0),kbOpts:{weight:100+30,kbExpr:S.editorTextFocus,primary:9,secondary:[1033]}}));$(new bp({id:"acceptSnippet",precondition:Et.InSnippetMode,handler:s=>s.finish()}));ke();G();ga();Re();kn();ns();Be();var $1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Bw=function(s,e){return function(t,i){e(t,i,s)}},vp=class{constructor(e){this.name=e}select(e,t,i){if(i.length===0)return 0;let n=i[0].score[0];for(let o=0;o<i.length;o++){let{score:r,completion:a}=i[o];if(r[0]!==n)break;if(a.preselect)return o}return 0}},py=class extends vp{constructor(){super("first")}memorize(e,t,i){}toJSON(){}fromJSON(){}},Vw=class extends vp{constructor(){super("recentlyUsed");this._cache=new Un(300,.66),this._seq=0}memorize(e,t,i){let n=`${e.getLanguageId()}/${i.textLabel}`;this._cache.set(n,{touch:this._seq++,type:i.completion.kind,insertText:i.completion.insertText})}select(e,t,i){if(i.length===0)return 0;let n=e.getLineContent(t.lineNumber).substr(t.column-10,t.column-1);if(/\s$/.test(n))return super.select(e,t,i);let o=i[0].score[0],r=-1,a=-1,l=-1;for(let c=0;c<i.length&&i[c].score[0]===o;c++){let d=`${e.getLanguageId()}/${i[c].textLabel}`,h=this._cache.peek(d);if(h&&h.touch>l&&h.type===i[c].completion.kind&&h.insertText===i[c].completion.insertText&&(l=h.touch,a=c),i[c].completion.preselect&&r===-1)return r=c}return a!==-1?a:r!==-1?r:0}toJSON(){return this._cache.toJSON()}fromJSON(e){this._cache.clear();let t=0;for(let[i,n]of e)n.touch=t,n.type=typeof n.type=="number"?n.type:Gl.fromString(n.type),this._cache.set(i,n);this._seq=this._cache.size}},Gw=class extends vp{constructor(){super("recentlyUsedByPrefix");this._trie=zS.forStrings(),this._seq=0}memorize(e,t,i){let{word:n}=e.getWordUntilPosition(t),o=`${e.getLanguageId()}/${n}`;this._trie.set(o,{type:i.completion.kind,insertText:i.completion.insertText,touch:this._seq++})}select(e,t,i){let{word:n}=e.getWordUntilPosition(t);if(!n)return super.select(e,t,i);let o=`${e.getLanguageId()}/${n}`,r=this._trie.get(o);if(r||(r=this._trie.findSubstr(o)),r)for(let a=0;a<i.length;a++){let{kind:l,insertText:c}=i[a].completion;if(l===r.type&&c===r.insertText)return a}return super.select(e,t,i)}toJSON(){let e=[];return this._trie.forEach((t,i)=>e.push([i,t])),e.sort((t,i)=>-(t[1].touch-i[1].touch)).forEach((t,i)=>t[1].touch=i),e.slice(0,200)}fromJSON(e){if(this._trie.clear(),e.length>0){this._seq=e[0][1].touch+1;for(let[t,i]of e)i.type=typeof i.type=="number"?i.type:Gl.fromString(i.type),this._trie.set(t,i)}}},oc=class Sp{constructor(e,t){this._storageService=e,this._configService=t,this._disposables=new A,this._persistSoon=new $e(()=>this._saveState(),500),this._disposables.add(e.onWillSaveState(i=>{i.reason===_u.SHUTDOWN&&this._saveState()}))}dispose(){this._disposables.dispose(),this._persistSoon.dispose()}memorize(e,t,i){this._withStrategy(e,t).memorize(e,t,i),this._persistSoon.schedule()}select(e,t,i){return this._withStrategy(e,t).select(e,t,i)}_withStrategy(e,t){var i;let n=this._configService.getValue("editor.suggestSelection",{overrideIdentifier:e.getLanguageIdAtPosition(t.lineNumber,t.column),resource:e.uri});if(((i=this._strategy)===null||i===void 0?void 0:i.name)!==n){this._saveState();let o=Sp._strategyCtors.get(n)||py;this._strategy=new o;try{let a=this._configService.getValue("editor.suggest.shareSuggestSelections")?0:1,l=this._storageService.get(`${Sp._storagePrefix}/${n}`,a);l&&this._strategy.fromJSON(JSON.parse(l))}catch(r){}}return this._strategy}_saveState(){if(this._strategy){let t=this._configService.getValue("editor.suggest.shareSuggestSelections")?0:1,i=JSON.stringify(this._strategy);this._storageService.store(`${Sp._storagePrefix}/${this._strategy.name}`,i,t,1)}}};oc._strategyCtors=new Map([["recentlyUsedByPrefix",Gw],["recentlyUsed",Vw],["first",py]]);oc._storagePrefix="suggest/memories";oc=$1([Bw(0,li),Bw(1,it)],oc);var my=Fi("ISuggestMemories");Ni(my,oc,!0);Ee();var K1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},q1=function(s,e){return function(t,i){e(t,i,s)}},Ja=class jw{constructor(e,t){this._editor=e,this._enabled=!1,this._ckAtEnd=jw.AtEnd.bindTo(t),this._configListener=this._editor.onDidChangeConfiguration(i=>i.hasChanged(111)&&this._update()),this._update()}dispose(){var e;this._configListener.dispose(),(e=this._selectionListener)===null||e===void 0||e.dispose(),this._ckAtEnd.reset()}_update(){let e=this._editor.getOption(111)==="on";if(this._enabled!==e)if(this._enabled=e,this._enabled){let t=()=>{if(!this._editor.hasModel()){this._ckAtEnd.set(!1);return}let i=this._editor.getModel(),n=this._editor.getSelection(),o=i.getWordAtPosition(n.getStartPosition());if(!o){this._ckAtEnd.set(!1);return}this._ckAtEnd.set(o.endColumn===n.getStartPosition().column)};this._selectionListener=this._editor.onDidChangeCursorSelection(t),t()}else this._selectionListener&&(this._ckAtEnd.reset(),this._selectionListener.dispose(),this._selectionListener=void 0)}};Ja.AtEnd=new pe("atEndOfWord",!1);Ja=K1([q1(1,ie)],Ja);Q();ri();wt();Ee();Be();Ql();Mh();Ee();var X1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Y1=function(s,e){return function(t,i){e(t,i,s)}},Mr=class xp{constructor(e,t){this._editor=e,this._index=0,this._ckOtherSuggestions=xp.OtherSuggestions.bindTo(t)}dispose(){this.reset()}reset(){var e;this._ckOtherSuggestions.reset(),(e=this._listener)===null||e===void 0||e.dispose(),this._model=void 0,this._acceptNext=void 0,this._ignore=!1}set({model:e,index:t},i){if(e.items.length===0){this.reset();return}if(xp._moveIndex(!0,e,t)===t){this.reset();return}this._acceptNext=i,this._model=e,this._index=t,this._listener=this._editor.onDidChangeCursorPosition(()=>{this._ignore||this.reset()}),this._ckOtherSuggestions.set(!0)}static _moveIndex(e,t,i){let n=i;for(;n=(n+t.items.length+(e?1:-1))%t.items.length,!(n===i||!t.items[n].completion.additionalTextEdits););return n}next(){this._move(!0)}prev(){this._move(!1)}_move(e){if(!!this._model)try{this._ignore=!0,this._index=xp._moveIndex(e,this._model,this._index),this._acceptNext({index:this._index,item:this._model.items[this._index],model:this._model})}finally{this._ignore=!1}}};Mr.OtherSuggestions=new pe("hasOtherSuggestions",!1);Mr=X1([Y1(1,ie)],Mr);vt();G();Om();var gy=class{constructor(e,t,i){this._disposables=new A,this._disposables.add(t.onDidShow(()=>this._onItem(t.getFocusedItem()))),this._disposables.add(t.onDidFocus(this._onItem,this)),this._disposables.add(t.onDidHide(this.reset,this)),this._disposables.add(e.onWillType(n=>{if(this._active&&!t.isFrozen()){let o=n.charCodeAt(n.length-1);this._active.acceptCharacters.has(o)&&e.getOption(0)&&i(this._active.item)}}))}_onItem(e){if(!e||!Pt(e.item.completion.commitCharacters)){this.reset();return}if(this._active&&this._active.item.item===e.item)return;let t=new xo;for(let i of e.item.completion.commitCharacters)i.length>0&&t.add(i.charCodeAt(0));this._active={acceptCharacters:t,item:e}}reset(){this._active=void 0}dispose(){this._disposables.dispose()}};ke();ut();Le();De();G();Ye();Mt();Re();cu();vt();ee();bS();tt();ee();var Z1=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},ci=class{provideSelectionRanges(e,t){return Z1(this,void 0,void 0,function*(){let i=[];for(let n of t){let o=[];i.push(o);let r=new Map;yield new Promise(a=>ci._bracketsRightYield(a,0,e,n,r)),yield new Promise(a=>ci._bracketsLeftYield(a,0,e,n,r,o))}return i})}static _bracketsRightYield(e,t,i,n,o){let r=new Map,a=Date.now();for(;;){if(t>=ci._maxRounds){e();break}if(!n){e();break}let l=i.bracketPairs.findNextBracket(n);if(!l){e();break}if(Date.now()-a>ci._maxDuration){setTimeout(()=>ci._bracketsRightYield(e,t+1,i,n,o));break}let d=l.close[0];if(l.isOpen){let h=r.has(d)?r.get(d):0;r.set(d,h+1)}else{let h=r.has(d)?r.get(d):0;if(h-=1,r.set(d,Math.max(0,h)),h<0){let p=o.get(d);p||(p=new Sh,o.set(d,p)),p.push(l.range)}}n=l.range.getEndPosition()}}static _bracketsLeftYield(e,t,i,n,o,r){let a=new Map,l=Date.now();for(;;){if(t>=ci._maxRounds&&o.size===0){e();break}if(!n){e();break}let c=i.bracketPairs.findPrevBracket(n);if(!c){e();break}if(Date.now()-l>ci._maxDuration){setTimeout(()=>ci._bracketsLeftYield(e,t+1,i,n,o,r));break}let h=c.close[0];if(c.isOpen){let p=a.has(h)?a.get(h):0;if(p-=1,a.set(h,Math.max(0,p)),p<0){let m=o.get(h);if(m){let f=m.shift();m.size===0&&o.delete(h);let v=b.fromPositions(c.range.getEndPosition(),f.getStartPosition()),_=b.fromPositions(c.range.getStartPosition(),f.getEndPosition());r.push({range:v}),r.push({range:_}),ci._addBracketLeading(i,_,r)}}}else{let p=a.has(h)?a.get(h):0;a.set(h,p+1)}n=c.range.getStartPosition()}}static _addBracketLeading(e,t,i){if(t.startLineNumber===t.endLineNumber)return;let n=t.startLineNumber,o=e.getLineFirstNonWhitespaceColumn(n);o!==0&&o!==t.startColumn&&(i.push({range:b.fromPositions(new U(n,o),t.getEndPosition())}),i.push({range:b.fromPositions(new U(n,1),t.getEndPosition())}));let r=n-1;if(r>0){let a=e.getLineFirstNonWhitespaceColumn(r);a===t.startColumn&&a!==e.getLineLastNonWhitespaceColumn(r)&&(i.push({range:b.fromPositions(new U(r,a),t.getEndPosition())}),i.push({range:b.fromPositions(new U(r,1),t.getEndPosition())}))}}};ci._maxDuration=30;ci._maxRounds=2;var J1=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},bn=class{static create(e,t){return J1(this,void 0,void 0,function*(){if(!t.getOption(106).localityBonus||!t.hasModel())return bn.None;let i=t.getModel(),n=t.getPosition();if(!e.canComputeWordRanges(i.uri))return bn.None;let[o]=yield new ci().provideSelectionRanges(i,[n]);if(o.length===0)return bn.None;let r=yield e.computeWordRanges(i.uri,o[0].range);if(!r)return bn.None;let a=i.getWordUntilPosition(n);return delete r[a.word],new class extends bn{distance(l,c){if(!n.equals(t.getPosition()))return 0;if(c.kind===17)return 2<<20;let d=typeof c.label=="string"?c.label:c.label.label,h=r[d];if(lS(h))return 2<<20;let p=lh(h,b.fromPositions(l),b.compareRangesUsingStarts),m=p>=0?h[p]:h[Math.max(0,~p-1)],f=o.length;for(let v of o){if(!b.containsRange(v.range,m))break;f-=1}return f}}})}};bn.None=new class extends bn{distance(){return 0}};kn();Ee();Mh();ed();vt();Ye();var Go=class{constructor(e,t,i,n,o,r,a){this.clipboardText=a,this._snippetCompareFn=Go._compareCompletionItems,this._items=e,this._column=t,this._wordDistance=n,this._options=o,this._refilterKind=1,this._lineContext=i,r==="top"?this._snippetCompareFn=Go._compareCompletionItemsSnippetsUp:r==="bottom"&&(this._snippetCompareFn=Go._compareCompletionItemsSnippetsDown)}get lineContext(){return this._lineContext}set lineContext(e){(this._lineContext.leadingLineContent!==e.leadingLineContent||this._lineContext.characterCountDelta!==e.characterCountDelta)&&(this._refilterKind=this._lineContext.characterCountDelta<e.characterCountDelta&&this._filteredItems?2:1,this._lineContext=e)}get items(){return this._ensureCachedState(),this._filteredItems}get allProvider(){return this._ensureCachedState(),this._providerInfo.keys()}get incomplete(){this._ensureCachedState();let e=new Set;for(let[t,i]of this._providerInfo)i&&e.add(t);return e}adopt(e){let t=[];for(let i=0;i<this._items.length;)e.has(this._items[i].provider)?i++:(t.push(this._items[i]),this._items[i]=this._items[this._items.length-1],this._items.pop());return this._refilterKind=1,t}get stats(){return this._ensureCachedState(),this._stats}_ensureCachedState(){this._refilterKind!==0&&this._createCachedState()}_createCachedState(){this._providerInfo=new Map;let e=[],{leadingLineContent:t,characterCountDelta:i}=this._lineContext,n="",o="",r=this._refilterKind===1?this._items:this._filteredItems,a=[],l=!this._options.filterGraceful||r.length>2e3?gu:qx;for(let c=0;c<r.length;c++){let d=r[c];if(d.isInvalid)continue;this._providerInfo.set(d.provider,Boolean(d.container.incomplete));let h=d.position.column-d.editStart.column,p=h+i-(d.position.column-this._column);if(n.length!==p&&(n=p===0?"":t.slice(-p),o=n.toLowerCase()),d.word=n,p===0)d.score=gs.Default;else{let m=0;for(;m<h;){let f=n.charCodeAt(m);if(f===32||f===9)m+=1;else break}if(m>=p)d.score=gs.Default;else if(typeof d.completion.filterText=="string"){let f=l(n,o,m,d.completion.filterText,d.filterTextLow,0,!1);if(!f)continue;kS(d.completion.filterText,d.textLabel)===0?d.score=f:(d.score=Kx(n,o,m,d.textLabel,d.labelLow,0),d.score[0]=f[0])}else{let f=l(n,o,m,d.textLabel,d.labelLow,0,!1);if(!f)continue;d.score=f}}d.idx=c,d.distance=this._wordDistance.distance(d.position,d.completion),a.push(d),e.push(d.textLabel.length)}this._filteredItems=a.sort(this._snippetCompareFn),this._refilterKind=0,this._stats={pLabelLen:e.length?aS(e.length-.85,e,(c,d)=>c-d):0}}static _compareCompletionItems(e,t){return e.score[0]>t.score[0]?-1:e.score[0]<t.score[0]?1:e.distance<t.distance?-1:e.distance>t.distance?1:e.idx<t.idx?-1:e.idx>t.idx?1:0}static _compareCompletionItemsSnippetsDown(e,t){if(e.completion.kind!==t.completion.kind){if(e.completion.kind===27)return 1;if(t.completion.kind===27)return-1}return Go._compareCompletionItems(e,t)}static _compareCompletionItemsSnippetsUp(e,t){if(e.completion.kind!==t.completion.kind){if(e.completion.kind===27)return-1;if(t.completion.kind===27)return 1}return Go._compareCompletionItems(e,t)}};var Q1=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Qa=function(s,e){return function(t,i){e(t,i,s)}},e0=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Rs=class{constructor(e,t,i,n){this.leadingLineContent=e.getLineContent(t.lineNumber).substr(0,t.column-1),this.leadingWord=e.getWordUntilPosition(t),this.lineNumber=t.lineNumber,this.column=t.column,this.auto=i,this.shy=n}static shouldAutoTrigger(e){if(!e.hasModel())return!1;let t=e.getModel(),i=e.getPosition();t.tokenizeIfCheap(i.lineNumber);let n=t.getWordAtPosition(i);return!(!n||n.endColumn!==i.column||!isNaN(Number(n.word)))}};function t0(s,e,t){if(!Boolean(e.getContextKeyValue("inlineSuggestionVisible")))return!0;let i=t.getValue("editor.inlineSuggest.allowQuickSuggestions");return i!==void 0?Boolean(i):!1}function i0(s,e,t){if(!Boolean(e.getContextKeyValue("inlineSuggestionVisible")))return!0;let i=t.getValue("editor.inlineSuggest.allowSuggestOnTriggerCharacters");return i!==void 0?Boolean(i):!1}var Cp=class Uw{constructor(e,t,i,n,o,r,a){this._editor=e,this._editorWorkerService=t,this._clipboardService=i,this._telemetryService=n,this._logService=o,this._contextKeyService=r,this._configurationService=a,this._toDispose=new A,this._quickSuggestDelay=10,this._triggerCharacterListener=new A,this._triggerQuickSuggest=new Ri,this._state=0,this._completionDisposables=new A,this._onDidCancel=new j,this._onDidTrigger=new j,this._onDidSuggest=new j,this.onDidCancel=this._onDidCancel.event,this.onDidTrigger=this._onDidTrigger.event,this.onDidSuggest=this._onDidSuggest.event,this._telemetryGate=0,this._currentSelection=this._editor.getSelection()||new X(1,1,1,1),this._toDispose.add(this._editor.onDidChangeModel(()=>{this._updateTriggerCharacters(),this.cancel()})),this._toDispose.add(this._editor.onDidChangeModelLanguage(()=>{this._updateTriggerCharacters(),this.cancel()})),this._toDispose.add(this._editor.onDidChangeConfiguration(()=>{this._updateTriggerCharacters(),this._updateQuickSuggest()})),this._toDispose.add(vo.onDidChange(()=>{this._updateTriggerCharacters(),this._updateActiveSuggestSession()}));let l=!1;this._toDispose.add(this._editor.onDidCompositionStart(()=>{l=!0})),this._toDispose.add(this._editor.onDidCompositionEnd(()=>{l=!1,this._onCompositionEnd()})),this._toDispose.add(this._editor.onDidChangeCursorSelection(c=>{l||this._onCursorChange(c)})),this._toDispose.add(this._editor.onDidChangeModelContent(()=>{l||this._refilterCompletionItems()})),this._updateTriggerCharacters(),this._updateQuickSuggest()}dispose(){xt(this._triggerCharacterListener),xt([this._onDidCancel,this._onDidSuggest,this._onDidTrigger,this._triggerQuickSuggest]),this._toDispose.dispose(),this._completionDisposables.dispose(),this.cancel()}_updateQuickSuggest(){this._quickSuggestDelay=this._editor.getOption(80),(isNaN(this._quickSuggestDelay)||!this._quickSuggestDelay&&this._quickSuggestDelay!==0||this._quickSuggestDelay<0)&&(this._quickSuggestDelay=10)}_updateTriggerCharacters(){if(this._triggerCharacterListener.clear(),this._editor.getOption(81)||!this._editor.hasModel()||!this._editor.getOption(109))return;let e=new Map;for(let i of vo.all(this._editor.getModel()))for(let n of i.triggerCharacters||[]){let o=e.get(n);o||(o=new Set,o.add(Nw()),e.set(n,o)),o.add(i)}let t=i=>{if(!i0(this._editor,this._contextKeyService,this._configurationService)||Rs.shouldAutoTrigger(this._editor))return;if(!i){let r=this._editor.getPosition();i=this._editor.getModel().getLineContent(r.lineNumber).substr(0,r.column-1)}let n="";PS(i.charCodeAt(i.length-1))?LS(i.charCodeAt(i.length-2))&&(n=i.substr(i.length-2)):n=i.charAt(i.length-1);let o=e.get(n);if(o){let r=this._completionModel?{items:this._completionModel.adopt(o),clipboardText:this._completionModel.clipboardText}:void 0;this.trigger({auto:!0,shy:!1,triggerCharacter:n},Boolean(this._completionModel),o,r)}};this._triggerCharacterListener.add(this._editor.onDidType(t)),this._triggerCharacterListener.add(this._editor.onDidCompositionEnd(()=>t()))}get state(){return this._state}cancel(e=!1){var t;this._state!==0&&(this._triggerQuickSuggest.cancel(),(t=this._requestToken)===null||t===void 0||t.cancel(),this._requestToken=void 0,this._state=0,this._completionModel=void 0,this._context=void 0,this._onDidCancel.fire({retrigger:e}))}clear(){this._completionDisposables.clear()}_updateActiveSuggestSession(){this._state!==0&&(!this._editor.hasModel()||!vo.has(this._editor.getModel())?this.cancel():this.trigger({auto:this._state===2,shy:!1},!0))}_onCursorChange(e){if(!this._editor.hasModel())return;let t=this._currentSelection;if(this._currentSelection=this._editor.getSelection(),!e.selection.isEmpty()||e.reason!==0&&e.reason!==3||e.source!=="keyboard"&&e.source!=="deleteLeft"){this.cancel();return}this._state===0&&e.reason===0?(t.containsRange(this._currentSelection)||t.getEndPosition().isBeforeOrEqual(this._currentSelection.getPosition()))&&this._doTriggerQuickSuggest():this._state!==0&&e.reason===3&&this._refilterCompletionItems()}_onCompositionEnd(){this._state===0?this._doTriggerQuickSuggest():this._refilterCompletionItems()}_doTriggerQuickSuggest(){var e;this._editor.getOption(79)!==!1&&(this._editor.getOption(106).snippetsPreventQuickSuggestions&&((e=Et.get(this._editor))===null||e===void 0?void 0:e.isInSnippet())||(this.cancel(),this._triggerQuickSuggest.cancelAndSet(()=>{if(this._state!==0||!Rs.shouldAutoTrigger(this._editor)||!this._editor.hasModel())return;let t=this._editor.getModel(),i=this._editor.getPosition(),n=this._editor.getOption(79);if(n!==!1){if(n!==!0){t.tokenizeIfCheap(i.lineNumber);let o=t.getLineTokens(i.lineNumber),r=o.getStandardTokenType(o.findTokenIndexAtOffset(Math.max(i.column-1-1,0)));if(!(n.other&&r===0||n.comments&&r===1||n.strings&&r===2))return}!t0(this._editor,this._contextKeyService,this._configurationService)||!vo.has(t)||this.trigger({auto:!0,shy:!1})}},this._quickSuggestDelay)))}_refilterCompletionItems(){Promise.resolve().then(()=>{if(this._state===0||!this._editor.hasModel())return;let e=this._editor.getModel(),t=this._editor.getPosition(),i=new Rs(e,t,this._state===2,!1);this._onNewContext(i)})}trigger(e,t=!1,i,n){var o;if(!this._editor.hasModel())return;let r=this._editor.getModel(),a=e.auto,l=new Rs(r,this._editor.getPosition(),a,e.shy);this.cancel(t),this._state=a?2:1,this._onDidTrigger.fire({auto:a,shy:e.shy,position:this._editor.getPosition()}),this._context=l;let c={triggerKind:(o=e.triggerKind)!==null&&o!==void 0?o:0};e.triggerCharacter&&(c={triggerKind:1,triggerCharacter:e.triggerCharacter}),this._requestToken=new Ft;let d=this._editor.getOption(101),h=1;switch(d){case"top":h=0;break;case"bottom":h=2;break}let{itemKind:p,showDeprecated:m}=Uw._createSuggestFilter(this._editor),f=bn.create(this._editorWorkerService,this._editor),v=cy(r,this._editor.getPosition(),new Za(h,p,i,m),c,this._requestToken.token);Promise.all([v,f]).then(([_,w])=>e0(this,void 0,void 0,function*(){var R;if((R=this._requestToken)===null||R===void 0||R.dispose(),!this._editor.hasModel())return;let P=n==null?void 0:n.clipboardText;if(!P&&_.needsClipboard&&(P=yield this._clipboardService.readText()),this._state===0)return;let B=this._editor.getModel(),V=_.items;if(n){let Te=uy(h);V=V.concat(n.items).sort(Te)}let ce=new Rs(B,this._editor.getPosition(),a,e.shy);this._completionModel=new Go(V,this._context.column,{leadingLineContent:ce.leadingLineContent,characterCountDelta:ce.column-this._context.column},w,this._editor.getOption(106),this._editor.getOption(101),P),this._completionDisposables.add(_.disposable),this._onNewContext(ce),this._reportDurationsTelemetry(_.durations)})).catch(de)}_reportDurationsTelemetry(e){this._telemetryGate++%230===0&&setTimeout(()=>{this._telemetryService.publicLog2("suggest.durations.json",{data:JSON.stringify(e)}),this._logService.debug("suggest.durations.json",e)})}static _createSuggestFilter(e){let t=new Set;e.getOption(101)==="none"&&t.add(27);let n=e.getOption(106);return n.showMethods||t.add(0),n.showFunctions||t.add(1),n.showConstructors||t.add(2),n.showFields||t.add(3),n.showVariables||t.add(4),n.showClasses||t.add(5),n.showStructs||t.add(6),n.showInterfaces||t.add(7),n.showModules||t.add(8),n.showProperties||t.add(9),n.showEvents||t.add(10),n.showOperators||t.add(11),n.showUnits||t.add(12),n.showValues||t.add(13),n.showConstants||t.add(14),n.showEnums||t.add(15),n.showEnumMembers||t.add(16),n.showKeywords||t.add(17),n.showWords||t.add(18),n.showColors||t.add(19),n.showFiles||t.add(20),n.showReferences||t.add(21),n.showColors||t.add(22),n.showFolders||t.add(23),n.showTypeParameters||t.add(24),n.showSnippets||t.add(27),n.showUsers||t.add(25),n.showIssues||t.add(26),{itemKind:t,showDeprecated:n.showDeprecated}}_onNewContext(e){if(!!this._context){if(e.lineNumber!==this._context.lineNumber){this.cancel();return}if(pt(e.leadingLineContent)!==pt(this._context.leadingLineContent)){this.cancel();return}if(e.column<this._context.column){e.leadingWord.word?this.trigger({auto:this._context.auto,shy:!1},!0):this.cancel();return}if(!!this._completionModel){if(e.leadingWord.word.length!==0&&e.leadingWord.startColumn>this._context.leadingWord.startColumn){let t=new Set(vo.all(this._editor.getModel()));for(let n of this._completionModel.allProvider)t.delete(n);let i=this._completionModel.adopt(new Set);this.trigger({auto:this._context.auto,shy:!1},!0,t,{items:i,clipboardText:this._completionModel.clipboardText});return}if(e.column>this._context.column&&this._completionModel.incomplete.size>0&&e.leadingWord.word.length!==0){let{incomplete:t}=this._completionModel,i=this._completionModel.adopt(t);this.trigger({auto:this._state===2,shy:!1,triggerKind:2},!0,t,{items:i,clipboardText:this._completionModel.clipboardText})}else{let t=this._completionModel.lineContext,i=!1;if(this._completionModel.lineContext={leadingLineContent:e.leadingLineContent,characterCountDelta:e.column-this._context.column},this._completionModel.items.length===0){if(Rs.shouldAutoTrigger(this._editor)&&this._context.leadingWord.endColumn<e.leadingWord.startColumn){this.trigger({auto:this._context.auto,shy:!1},!0);return}if(this._context.auto){this.cancel();return}else if(this._completionModel.lineContext=t,i=this._completionModel.items.length>0,i&&e.leadingWord.word.length===0){this.cancel();return}}this._onDidSuggest.fire({completionModel:this._completionModel,auto:this._context.auto,shy:this._context.shy,isFrozen:i})}}}}};Cp=Q1([Qa(1,Lo),Qa(2,us),Qa(3,Yn),Qa(4,pr),Qa(5,ie),Qa(6,it)],Cp);G();var el=class{constructor(e,t){this._disposables=new A,this._lastOvertyped=[],this._empty=!0,this._disposables.add(e.onWillType(()=>{if(!this._empty||!e.hasModel())return;let i=e.getSelections(),n=i.length,o=!1;for(let a=0;a<n;a++)if(!i[a].isEmpty()){o=!0;break}if(!o)return;this._lastOvertyped=[];let r=e.getModel();for(let a=0;a<n;a++){let l=i[a];if(r.getValueLengthInRange(l)>el._maxSelectionLength)return;this._lastOvertyped[a]={value:r.getValueInRange(l),multiline:l.startLineNumber!==l.endLineNumber}}this._empty=!1})),this._disposables.add(t.onDidCancel(i=>{!this._empty&&!i.retrigger&&(this._empty=!0)}))}getLastOvertypedInfo(e){if(!this._empty&&e>=0&&e<this._lastOvertyped.length)return this._lastOvertyped[e]}dispose(){this._disposables.dispose()}};el._maxSelectionLength=51200;Ae();ke();Le();De();G();hP();Ye();Ae();G();Q();ri();Ee();Be();var n0=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},fy=function(s,e){return function(t,i){e(t,i,s)}},wp=class extends xs{updateLabel(){let e=this._keybindingService.lookupKeybinding(this._action.id,this._contextKeyService);if(!e)return super.updateLabel();this.label&&(this.label.textContent=u("ddd","{0} ({1})",this._action.label,wp.symbolPrintEnter(e)))}static symbolPrintEnter(e){var t;return(t=e.getLabel())===null||t===void 0?void 0:t.replace(/\benter\b/gi,"\u23CE")}},_p=class{constructor(e,t,i,n){this._menuService=i,this._contextKeyService=n,this._menuDisposables=new A,this.element=H(e,W(".suggest-status-bar"));let o=r=>r instanceof mr?t.createInstance(wp,r,void 0):void 0;this._leftActions=new hs(this.element,{actionViewItemProvider:o}),this._rightActions=new hs(this.element,{actionViewItemProvider:o}),this._leftActions.domNode.classList.add("left"),this._rightActions.domNode.classList.add("right")}dispose(){this._menuDisposables.dispose(),this.element.remove()}show(){let e=this._menuService.createMenu(so,this._contextKeyService),t=()=>{let i=[],n=[];for(let[o,r]of e.getActions())o==="left"?i.push(...r):n.push(...r);this._leftActions.clear(),this._leftActions.push(i),this._rightActions.clear(),this._rightActions.push(n)};this._menuDisposables.add(e.onDidChange(()=>t())),this._menuDisposables.add(e)}hide(){this._menuDisposables.clear()}};_p=n0([fy(1,le),fy(2,Xn),fy(3,ie)],_p);xi();Q();mt();Ne();var o0=q("symbolIcon.arrayForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.arrayForeground","The foreground color for array symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),r0=q("symbolIcon.booleanForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.booleanForeground","The foreground color for boolean symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),s0=q("symbolIcon.classForeground",{dark:"#EE9D28",light:"#D67E00",hc:"#EE9D28"},u("symbolIcon.classForeground","The foreground color for class symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),a0=q("symbolIcon.colorForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.colorForeground","The foreground color for color symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),l0=q("symbolIcon.constantForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.constantForeground","The foreground color for constant symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),d0=q("symbolIcon.constructorForeground",{dark:"#B180D7",light:"#652D90",hc:"#B180D7"},u("symbolIcon.constructorForeground","The foreground color for constructor symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),c0=q("symbolIcon.enumeratorForeground",{dark:"#EE9D28",light:"#D67E00",hc:"#EE9D28"},u("symbolIcon.enumeratorForeground","The foreground color for enumerator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),h0=q("symbolIcon.enumeratorMemberForeground",{dark:"#75BEFF",light:"#007ACC",hc:"#75BEFF"},u("symbolIcon.enumeratorMemberForeground","The foreground color for enumerator member symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),u0=q("symbolIcon.eventForeground",{dark:"#EE9D28",light:"#D67E00",hc:"#EE9D28"},u("symbolIcon.eventForeground","The foreground color for event symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),p0=q("symbolIcon.fieldForeground",{dark:"#75BEFF",light:"#007ACC",hc:"#75BEFF"},u("symbolIcon.fieldForeground","The foreground color for field symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),m0=q("symbolIcon.fileForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.fileForeground","The foreground color for file symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),g0=q("symbolIcon.folderForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.folderForeground","The foreground color for folder symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),f0=q("symbolIcon.functionForeground",{dark:"#B180D7",light:"#652D90",hc:"#B180D7"},u("symbolIcon.functionForeground","The foreground color for function symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),y0=q("symbolIcon.interfaceForeground",{dark:"#75BEFF",light:"#007ACC",hc:"#75BEFF"},u("symbolIcon.interfaceForeground","The foreground color for interface symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),b0=q("symbolIcon.keyForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.keyForeground","The foreground color for key symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),S0=q("symbolIcon.keywordForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.keywordForeground","The foreground color for keyword symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),v0=q("symbolIcon.methodForeground",{dark:"#B180D7",light:"#652D90",hc:"#B180D7"},u("symbolIcon.methodForeground","The foreground color for method symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),x0=q("symbolIcon.moduleForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.moduleForeground","The foreground color for module symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),C0=q("symbolIcon.namespaceForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.namespaceForeground","The foreground color for namespace symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),_0=q("symbolIcon.nullForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.nullForeground","The foreground color for null symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),w0=q("symbolIcon.numberForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.numberForeground","The foreground color for number symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),T0=q("symbolIcon.objectForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.objectForeground","The foreground color for object symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),E0=q("symbolIcon.operatorForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.operatorForeground","The foreground color for operator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),I0=q("symbolIcon.packageForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.packageForeground","The foreground color for package symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),k0=q("symbolIcon.propertyForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.propertyForeground","The foreground color for property symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),L0=q("symbolIcon.referenceForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.referenceForeground","The foreground color for reference symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),P0=q("symbolIcon.snippetForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.snippetForeground","The foreground color for snippet symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),M0=q("symbolIcon.stringForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.stringForeground","The foreground color for string symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),D0=q("symbolIcon.structForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.structForeground","The foreground color for struct symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),R0=q("symbolIcon.textForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.textForeground","The foreground color for text symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),A0=q("symbolIcon.typeParameterForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.typeParameterForeground","The foreground color for type parameter symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),F0=q("symbolIcon.unitForeground",{dark:ne,light:ne,hc:ne},u("symbolIcon.unitForeground","The foreground color for unit symbols. These symbols appear in the outline, breadcrumb, and suggest widget.")),N0=q("symbolIcon.variableForeground",{dark:"#75BEFF",light:"#007ACC",hc:"#75BEFF"},u("symbolIcon.variableForeground","The foreground color for variable symbols. These symbols appear in the outline, breadcrumb, and suggest widget."));Me((s,e)=>{let t=s.getColor(o0);t&&e.addRule(`${K.symbolArray.cssSelector} { color: ${t}; }`);let i=s.getColor(r0);i&&e.addRule(`${K.symbolBoolean.cssSelector} { color: ${i}; }`);let n=s.getColor(s0);n&&e.addRule(`${K.symbolClass.cssSelector} { color: ${n}; }`);let o=s.getColor(v0);o&&e.addRule(`${K.symbolMethod.cssSelector} { color: ${o}; }`);let r=s.getColor(a0);r&&e.addRule(`${K.symbolColor.cssSelector} { color: ${r}; }`);let a=s.getColor(l0);a&&e.addRule(`${K.symbolConstant.cssSelector} { color: ${a}; }`);let l=s.getColor(d0);l&&e.addRule(`${K.symbolConstructor.cssSelector} { color: ${l}; }`);let c=s.getColor(c0);c&&e.addRule(`
			${K.symbolValue.cssSelector},${K.symbolEnum.cssSelector} { color: ${c}; }`);let d=s.getColor(h0);d&&e.addRule(`${K.symbolEnumMember.cssSelector} { color: ${d}; }`);let h=s.getColor(u0);h&&e.addRule(`${K.symbolEvent.cssSelector} { color: ${h}; }`);let p=s.getColor(p0);p&&e.addRule(`${K.symbolField.cssSelector} { color: ${p}; }`);let m=s.getColor(m0);m&&e.addRule(`${K.symbolFile.cssSelector} { color: ${m}; }`);let f=s.getColor(g0);f&&e.addRule(`${K.symbolFolder.cssSelector} { color: ${f}; }`);let v=s.getColor(f0);v&&e.addRule(`${K.symbolFunction.cssSelector} { color: ${v}; }`);let _=s.getColor(y0);_&&e.addRule(`${K.symbolInterface.cssSelector} { color: ${_}; }`);let w=s.getColor(b0);w&&e.addRule(`${K.symbolKey.cssSelector} { color: ${w}; }`);let R=s.getColor(S0);R&&e.addRule(`${K.symbolKeyword.cssSelector} { color: ${R}; }`);let P=s.getColor(x0);P&&e.addRule(`${K.symbolModule.cssSelector} { color: ${P}; }`);let B=s.getColor(C0);B&&e.addRule(`${K.symbolNamespace.cssSelector} { color: ${B}; }`);let V=s.getColor(_0);V&&e.addRule(`${K.symbolNull.cssSelector} { color: ${V}; }`);let ce=s.getColor(w0);ce&&e.addRule(`${K.symbolNumber.cssSelector} { color: ${ce}; }`);let Te=s.getColor(T0);Te&&e.addRule(`${K.symbolObject.cssSelector} { color: ${Te}; }`);let kt=s.getColor(E0);kt&&e.addRule(`${K.symbolOperator.cssSelector} { color: ${kt}; }`);let Wt=s.getColor(I0);Wt&&e.addRule(`${K.symbolPackage.cssSelector} { color: ${Wt}; }`);let Bt=s.getColor(k0);Bt&&e.addRule(`${K.symbolProperty.cssSelector} { color: ${Bt}; }`);let nn=s.getColor(L0);nn&&e.addRule(`${K.symbolReference.cssSelector} { color: ${nn}; }`);let Sn=s.getColor(P0);Sn&&e.addRule(`${K.symbolSnippet.cssSelector} { color: ${Sn}; }`);let ti=s.getColor(M0);ti&&e.addRule(`${K.symbolString.cssSelector} { color: ${ti}; }`);let mi=s.getColor(D0);mi&&e.addRule(`${K.symbolStruct.cssSelector} { color: ${mi}; }`);let vn=s.getColor(R0);vn&&e.addRule(`${K.symbolText.cssSelector} { color: ${vn}; }`);let er=s.getColor(A0);er&&e.addRule(`${K.symbolTypeParameter.cssSelector} { color: ${er}; }`);let $r=s.getColor(F0);$r&&e.addRule(`${K.symbolUnit.cssSelector} { color: ${$r}; }`);let Kr=s.getColor(N0);Kr&&e.addRule(`${K.symbolVariable.cssSelector} { color: ${Kr}; }`)});Q();Ee();Be();mt();Ne();Ae();De();G();var rc=class{constructor(){this._onDidWillResize=new j,this.onDidWillResize=this._onDidWillResize.event,this._onDidResize=new j,this.onDidResize=this._onDidResize.event,this._sashListener=new A,this._size=new lt(0,0),this._minSize=new lt(0,0),this._maxSize=new lt(Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER),this.domNode=document.createElement("div"),this._eastSash=new ko(this.domNode,{getVerticalSashLeft:()=>this._size.width},{orientation:0}),this._westSash=new ko(this.domNode,{getVerticalSashLeft:()=>0},{orientation:0}),this._northSash=new ko(this.domNode,{getHorizontalSashTop:()=>0},{orientation:1,orthogonalEdge:sg.North}),this._southSash=new ko(this.domNode,{getHorizontalSashTop:()=>this._size.height},{orientation:1,orthogonalEdge:sg.South}),this._northSash.orthogonalStartSash=this._westSash,this._northSash.orthogonalEndSash=this._eastSash,this._southSash.orthogonalStartSash=this._westSash,this._southSash.orthogonalEndSash=this._eastSash;let e,t=0,i=0;this._sashListener.add(ht.any(this._northSash.onDidStart,this._eastSash.onDidStart,this._southSash.onDidStart,this._westSash.onDidStart)(()=>{e===void 0&&(this._onDidWillResize.fire(),e=this._size,t=0,i=0)})),this._sashListener.add(ht.any(this._northSash.onDidEnd,this._eastSash.onDidEnd,this._southSash.onDidEnd,this._westSash.onDidEnd)(()=>{e!==void 0&&(e=void 0,t=0,i=0,this._onDidResize.fire({dimension:this._size,done:!0}))})),this._sashListener.add(this._eastSash.onDidChange(n=>{e&&(i=n.currentX-n.startX,this.layout(e.height+t,e.width+i),this._onDidResize.fire({dimension:this._size,done:!1,east:!0}))})),this._sashListener.add(this._westSash.onDidChange(n=>{e&&(i=-(n.currentX-n.startX),this.layout(e.height+t,e.width+i),this._onDidResize.fire({dimension:this._size,done:!1,west:!0}))})),this._sashListener.add(this._northSash.onDidChange(n=>{e&&(t=-(n.currentY-n.startY),this.layout(e.height+t,e.width+i),this._onDidResize.fire({dimension:this._size,done:!1,north:!0}))})),this._sashListener.add(this._southSash.onDidChange(n=>{e&&(t=n.currentY-n.startY,this.layout(e.height+t,e.width+i),this._onDidResize.fire({dimension:this._size,done:!1,south:!0}))})),this._sashListener.add(ht.any(this._eastSash.onDidReset,this._westSash.onDidReset)(n=>{this._preferredSize&&(this.layout(this._size.height,this._preferredSize.width),this._onDidResize.fire({dimension:this._size,done:!0}))})),this._sashListener.add(ht.any(this._northSash.onDidReset,this._southSash.onDidReset)(n=>{this._preferredSize&&(this.layout(this._preferredSize.height,this._size.width),this._onDidResize.fire({dimension:this._size,done:!0}))}))}dispose(){this._northSash.dispose(),this._southSash.dispose(),this._eastSash.dispose(),this._westSash.dispose(),this._sashListener.dispose(),this._onDidResize.dispose(),this._onDidWillResize.dispose(),this.domNode.remove()}enableSashes(e,t,i,n){this._northSash.state=e?3:0,this._eastSash.state=t?3:0,this._southSash.state=i?3:0,this._westSash.state=n?3:0}layout(e=this.size.height,t=this.size.width){let{height:i,width:n}=this._minSize,{height:o,width:r}=this._maxSize;e=Math.max(i,Math.min(o,e)),t=Math.max(n,Math.min(r,t));let a=new lt(t,e);lt.equals(a,this._size)||(this.domNode.style.height=e+"px",this.domNode.style.width=t+"px",this._size=a,this._northSash.layout(),this._eastSash.layout(),this._southSash.layout(),this._westSash.layout())}clearSashHoverState(){this._eastSash.clearSashHoverState(),this._westSash.clearSashHoverState(),this._northSash.clearSashHoverState(),this._southSash.clearSashHoverState()}get size(){return this._size}set maxSize(e){this._maxSize=e}get maxSize(){return this._maxSize}set minSize(e){this._minSize=e}get minSize(){return this._minSize}set preferredSize(e){this._preferredSize=e}get preferredSize(){return this._preferredSize}};Kl();Ae();xi();De();G();Q();Be();var z0=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},O0=function(s,e){return function(t,i){e(t,i,s)}};function sc(s){return!!s&&Boolean(s.completion.documentation||s.completion.detail&&s.completion.detail!==s.completion.label)}var Tp=class{constructor(e,t){this._editor=e,this._onDidClose=new j,this.onDidClose=this._onDidClose.event,this._onDidChangeContents=new j,this.onDidChangeContents=this._onDidChangeContents.event,this._disposables=new A,this._renderDisposeable=new A,this._borderWidth=1,this._size=new lt(330,0),this.domNode=W(".suggest-details"),this.domNode.classList.add("no-docs"),this._markdownRenderer=t.createInstance(Ii,{editor:e}),this._body=W(".body"),this._scrollbar=new Na(this._body,{}),H(this.domNode,this._scrollbar.getDomNode()),this._disposables.add(this._scrollbar),this._header=H(this._body,W(".header")),this._close=H(this._header,W("span"+K.close.cssSelector)),this._close.title=u("details.close","Close"),this._type=H(this._header,W("p.type")),this._docs=H(this._body,W("p.docs")),this._configureFont(),this._disposables.add(this._editor.onDidChangeConfiguration(i=>{i.hasChanged(44)&&this._configureFont()}))}dispose(){this._disposables.dispose(),this._renderDisposeable.dispose()}_configureFont(){let e=this._editor.getOptions(),t=e.get(44),i=t.getMassagedFontFamily(Lh?lr.fontFamily:null),n=e.get(107)||t.fontSize,o=e.get(108)||t.lineHeight,r=t.fontWeight,a=`${n}px`,l=`${o}px`;this.domNode.style.fontSize=a,this.domNode.style.lineHeight=`${o/n}`,this.domNode.style.fontWeight=r,this.domNode.style.fontFeatureSettings=t.fontFeatureSettings,this._type.style.fontFamily=i,this._close.style.height=l,this._close.style.width=l}getLayoutInfo(){let e=this._editor.getOption(108)||this._editor.getOption(44).lineHeight,t=this._borderWidth,i=t*2;return{lineHeight:e,borderWidth:t,borderHeight:i,verticalPadding:22,horizontalPadding:14}}renderLoading(){this._type.textContent=u("loading","Loading..."),this._docs.textContent="",this.domNode.classList.remove("no-docs","no-type"),this.layout(this.size.width,this.getLayoutInfo().lineHeight*2),this._onDidChangeContents.fire(this)}renderItem(e,t){var i,n;this._renderDisposeable.clear();let{detail:o,documentation:r}=e.completion;if(t){let a="";a+=`score: ${e.score[0]}
`,a+=`prefix: ${(i=e.word)!==null&&i!==void 0?i:"(no prefix)"}
`,a+=`word: ${e.completion.filterText?e.completion.filterText+" (filterText)":e.textLabel}
`,a+=`distance: ${e.distance} (localityBonus-setting)
`,a+=`index: ${e.idx}, based on ${e.completion.sortText&&`sortText: "${e.completion.sortText}"`||"label"}
`,a+=`commit_chars: ${(n=e.completion.commitCharacters)===null||n===void 0?void 0:n.join("")}
`,r=new ai().appendCodeblock("empty",a),o=`Provider: ${e.provider._debugDisplayName}`}if(!t&&!sc(e)){this.clearContents();return}if(this.domNode.classList.remove("no-docs","no-type"),o){let a=o.length>1e5?`${o.substr(0,1e5)}\u2026`:o;this._type.textContent=a,this._type.title=a,oi(this._type),this._type.classList.toggle("auto-wrap",!/\r?\n^\s+/gmi.test(a))}else _i(this._type),this._type.title="",Vt(this._type),this.domNode.classList.add("no-type");if(_i(this._docs),typeof r=="string")this._docs.classList.remove("markdown-docs"),this._docs.textContent=r;else if(r){this._docs.classList.add("markdown-docs"),_i(this._docs);let a=this._markdownRenderer.render(r);this._docs.appendChild(a.element),this._renderDisposeable.add(a),this._renderDisposeable.add(this._markdownRenderer.onDidRenderAsync(()=>{this.layout(this._size.width,this._type.clientHeight+this._docs.clientHeight),this._onDidChangeContents.fire(this)}))}this.domNode.style.userSelect="text",this.domNode.tabIndex=-1,this._close.onmousedown=a=>{a.preventDefault(),a.stopPropagation()},this._close.onclick=a=>{a.preventDefault(),a.stopPropagation(),this._onDidClose.fire()},this._body.scrollTop=0,this.layout(this._size.width,this._type.clientHeight+this._docs.clientHeight),this._onDidChangeContents.fire(this)}clearContents(){this.domNode.classList.add("no-docs"),this._type.textContent="",this._docs.textContent=""}get size(){return this._size}layout(e,t){let i=new lt(e,t);lt.equals(i,this._size)||(this._size=i,mv(this.domNode,e,t)),this._scrollbar.scanDomNode()}scrollDown(e=8){this._body.scrollTop+=e}scrollUp(e=8){this._body.scrollTop-=e}scrollTop(){this._body.scrollTop=0}scrollBottom(){this._body.scrollTop=this._body.scrollHeight}pageDown(){this.scrollDown(80)}pageUp(){this.scrollUp(80)}set borderWidth(e){this._borderWidth=e}get borderWidth(){return this._borderWidth}};Tp=z0([O0(1,le)],Tp);var yy=class{constructor(e,t){this.widget=e,this._editor=t,this._disposables=new A,this._added=!1,this._preferAlignAtTop=!0,this._resizable=new rc,this._resizable.domNode.classList.add("suggest-details-container"),this._resizable.domNode.appendChild(e.domNode),this._resizable.enableSashes(!1,!0,!0,!1);let i,n,o=0,r=0;this._disposables.add(this._resizable.onDidWillResize(()=>{i=this._topLeft,n=this._resizable.size})),this._disposables.add(this._resizable.onDidResize(a=>{if(i&&n){this.widget.layout(a.dimension.width,a.dimension.height);let l=!1;a.west&&(r=n.width-a.dimension.width,l=!0),a.north&&(o=n.height-a.dimension.height,l=!0),l&&this._applyTopLeft({top:i.top+o,left:i.left+r})}a.done&&(i=void 0,n=void 0,o=0,r=0,this._userSize=a.dimension)})),this._disposables.add(this.widget.onDidChangeContents(()=>{var a;this._anchorBox&&this._placeAtAnchor(this._anchorBox,(a=this._userSize)!==null&&a!==void 0?a:this.widget.size,this._preferAlignAtTop)}))}dispose(){this._resizable.dispose(),this._disposables.dispose(),this.hide()}getId(){return"suggest.details"}getDomNode(){return this._resizable.domNode}getPosition(){return null}show(){this._added||(this._editor.addOverlayWidget(this),this.getDomNode().style.position="fixed",this._added=!0)}hide(e=!1){this._resizable.clearSashHoverState(),this._added&&(this._editor.removeOverlayWidget(this),this._added=!1,this._anchorBox=void 0,this._topLeft=void 0),e&&(this._userSize=void 0,this.widget.clearContents())}placeAtAnchor(e,t){var i;let n=e.getBoundingClientRect();this._anchorBox=n,this._preferAlignAtTop=t,this._placeAtAnchor(this._anchorBox,(i=this._userSize)!==null&&i!==void 0?i:this.widget.size,t)}_placeAtAnchor(e,t,i){var n;let o=Dh(document.body),r=this.widget.getLayoutInfo(),a=new lt(220,2*r.lineHeight),l=e.top,c=function(){let P=o.width-(e.left+e.width+r.borderWidth+r.horizontalPadding),B=-r.borderWidth+e.left+e.width,V=new lt(P,o.height-e.top-r.borderHeight-r.verticalPadding),ce=V.with(void 0,e.top+e.height-r.borderHeight-r.verticalPadding);return{top:l,left:B,fit:P-t.width,maxSizeTop:V,maxSizeBottom:ce,minSize:a.with(Math.min(P,a.width))}}(),d=function(){let P=e.left-r.borderWidth-r.horizontalPadding,B=Math.max(r.horizontalPadding,e.left-t.width-r.borderWidth),V=new lt(P,o.height-e.top-r.borderHeight-r.verticalPadding),ce=V.with(void 0,e.top+e.height-r.borderHeight-r.verticalPadding);return{top:l,left:B,fit:P-t.width,maxSizeTop:V,maxSizeBottom:ce,minSize:a.with(Math.min(P,a.width))}}(),h=function(){let P=e.left,B=-r.borderWidth+e.top+e.height,V=new lt(e.width-r.borderHeight,o.height-e.top-e.height-r.verticalPadding);return{top:B,left:P,fit:V.height-t.height,maxSizeBottom:V,maxSizeTop:V,minSize:a.with(V.width)}}(),p=[c,d,h],m=(n=p.find(P=>P.fit>=0))!==null&&n!==void 0?n:p.sort((P,B)=>B.fit-P.fit)[0],f=e.top+e.height-r.borderHeight,v,_=t.height,w=Math.max(m.maxSizeTop.height,m.maxSizeBottom.height);_>w&&(_=w);let R;i?_<=m.maxSizeTop.height?(v=!0,R=m.maxSizeTop):(v=!1,R=m.maxSizeBottom):_<=m.maxSizeBottom.height?(v=!1,R=m.maxSizeBottom):(v=!0,R=m.maxSizeTop),this._applyTopLeft({left:m.left,top:v?m.top:f-_}),this.getDomNode().style.position="fixed",this._resizable.enableSashes(!v,m===c,v,m!==c),this._resizable.minSize=m.minSize,this._resizable.maxSize=R,this._resizable.layout(_,Math.min(R.width,t.width)),this.widget.layout(this._resizable.size.width,this._resizable.size.height)}_applyTopLeft(e){this._topLeft=e,this.getDomNode().style.left=`${this._topLeft.left}px`,this.getDomNode().style.top=`${this._topLeft.top}px`}};Kl();Ae();vt();xi();De();G();Xt();Re();Yl();Hi();ig();var zn;(function(s){s[s.FILE=0]="FILE",s[s.FOLDER=1]="FOLDER",s[s.ROOT_FOLDER=2]="ROOT_FOLDER"})(zn||(zn={}));function ac(s,e,t,i){let n=i===zn.ROOT_FOLDER?["rootfolder-icon"]:i===zn.FOLDER?["folder-icon"]:["file-icon"];if(t){let o;if(t.scheme===Ct.data?o=dd.parseMetaData(t).get(dd.META_DATA_LABEL):o=$w(iu(t).toLowerCase()),i===zn.FOLDER)n.push(`${o}-name-folder-icon`);else{if(o){if(n.push(`${o}-name-file-icon`),o.length<=255){let a=o.split(".");for(let l=1;l<a.length;l++)n.push(`${a.slice(l).join(".")}-ext-file-icon`)}n.push("ext-file-icon")}let r=H0(s,e,t);r&&n.push(`${$w(r)}-lang-file-icon`)}}return n}function H0(s,e,t){if(!t)return null;let i=null;if(t.scheme===Ct.data){let o=dd.parseMetaData(t).get(dd.META_DATA_MIME);o&&(i=e.getLanguageIdByMimeType(o))}else{let n=s.getModel(t);n&&(i=n.getLanguageId())}return i&&i!==za?i:e.guessLanguageIdByFilepathOrFirstLine(t)}function $w(s){return s.replace(/[\11\12\14\15\40]/g,"/")}hr();rn();Q();Ne();var W0=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},by=function(s,e){return function(t,i){e(t,i,s)}},lc;function vy(s){return`suggest-aria-id:${s}`}var B0=Rt("suggest-more-info",K.chevronRight,u("suggestMoreInfoIcon","Icon for more information in the suggest widget.")),V0=new(lc=class Ep{extract(e,t){if(e.textLabel.match(Ep._regexStrict))return t[0]=e.textLabel,!0;if(e.completion.detail&&e.completion.detail.match(Ep._regexStrict))return t[0]=e.completion.detail,!0;if(typeof e.completion.documentation=="string"){let i=Ep._regexRelaxed.exec(e.completion.documentation);if(i&&(i.index===0||i.index+i[0].length===e.completion.documentation.length))return t[0]=i[0],!0}return!1}},lc._regexRelaxed=/(#([\da-fA-F]{3}){1,2}|(rgb|hsl)a\(\s*(\d{1,3}%?\s*,\s*){3}(1|0?\.\d+)\)|(rgb|hsl)\(\s*\d{1,3}%?(\s*,\s*\d{1,3}%?){2}\s*\))/,lc._regexStrict=new RegExp(`^${lc._regexRelaxed.source}$`,"i"),lc),Ip=class{constructor(e,t,i,n){this._editor=e,this._modelService=t,this._languageService=i,this._themeService=n,this._onDidToggleDetails=new j,this.onDidToggleDetails=this._onDidToggleDetails.event,this.templateId="suggestion"}dispose(){this._onDidToggleDetails.dispose()}renderTemplate(e){let t=Object.create(null);t.disposables=new A,t.root=e,t.root.classList.add("show-file-icons"),t.icon=H(e,W(".icon")),t.colorspan=H(t.icon,W("span.colorspan"));let i=H(e,W(".contents")),n=H(i,W(".main"));t.iconContainer=H(n,W(".icon-label.codicon")),t.left=H(n,W("span.left")),t.right=H(n,W("span.right")),t.iconLabel=new vu(t.left,{supportHighlights:!0,supportIcons:!0}),t.disposables.add(t.iconLabel),t.parametersLabel=H(t.left,W("span.signature-label")),t.qualifierLabel=H(t.left,W("span.qualifier-label")),t.detailsLabel=H(t.right,W("span.details-label")),t.readMore=H(t.right,W("span.readMore"+ot.asCSSSelector(B0))),t.readMore.title=u("readMore","Read More");let o=()=>{let r=this._editor.getOptions(),a=r.get(44),l=a.getMassagedFontFamily(Lh?lr.fontFamily:null),c=a.fontFeatureSettings,d=r.get(107)||a.fontSize,h=r.get(108)||a.lineHeight,p=a.fontWeight,m=`${d}px`,f=`${h}px`;t.root.style.fontSize=m,t.root.style.fontWeight=p,n.style.fontFamily=l,n.style.fontFeatureSettings=c,n.style.lineHeight=f,t.icon.style.height=f,t.icon.style.width=f,t.readMore.style.height=f,t.readMore.style.width=f};return o(),t.disposables.add(this._editor.onDidChangeConfiguration(r=>{(r.hasChanged(44)||r.hasChanged(107)||r.hasChanged(108))&&o()})),t}renderElement(e,t,i){let{completion:n}=e;i.root.id=vy(t),i.colorspan.style.backgroundColor="";let o={labelEscapeNewLines:!0,matches:ms(e.score)},r=[];if(n.kind===19&&V0.extract(e,r))i.icon.className="icon customcolor",i.iconContainer.className="icon hide",i.colorspan.style.backgroundColor=r[0];else if(n.kind===20&&this._themeService.getFileIconTheme().hasFileIcons){i.icon.className="icon hide",i.iconContainer.className="icon hide";let a=ac(this._modelService,this._languageService,_e.from({scheme:"fake",path:e.textLabel}),zn.FILE),l=ac(this._modelService,this._languageService,_e.from({scheme:"fake",path:n.detail}),zn.FILE);o.extraClasses=a.length>l.length?a:l}else n.kind===23&&this._themeService.getFileIconTheme().hasFolderIcons?(i.icon.className="icon hide",i.iconContainer.className="icon hide",o.extraClasses=ch([ac(this._modelService,this._languageService,_e.from({scheme:"fake",path:e.textLabel}),zn.FOLDER),ac(this._modelService,this._languageService,_e.from({scheme:"fake",path:n.detail}),zn.FOLDER)])):(i.icon.className="icon hide",i.iconContainer.className="",i.iconContainer.classList.add("suggest-icon",..._h.asClassNameArray(Gl.toIcon(n.kind))));n.tags&&n.tags.indexOf(1)>=0&&(o.extraClasses=(o.extraClasses||[]).concat(["deprecated"]),o.matches=[]),i.iconLabel.setLabel(e.textLabel,void 0,o),typeof n.label=="string"?(i.parametersLabel.textContent="",i.detailsLabel.textContent=Sy(n.detail||""),i.root.classList.add("string-label")):(i.parametersLabel.textContent=Sy(n.label.detail||""),i.detailsLabel.textContent=Sy(n.label.description||""),i.root.classList.remove("string-label")),this._editor.getOption(106).showInlineDetails?oi(i.detailsLabel):Vt(i.detailsLabel),sc(e)?(i.right.classList.add("can-expand-details"),oi(i.readMore),i.readMore.onmousedown=a=>{a.stopPropagation(),a.preventDefault()},i.readMore.onclick=a=>{a.stopPropagation(),a.preventDefault(),this._onDidToggleDetails.fire()}):(i.right.classList.remove("can-expand-details"),Vt(i.readMore),i.readMore.onmousedown=null,i.readMore.onclick=null)}disposeTemplate(e){e.disposables.dispose()}};Ip=W0([by(1,Yt),by(2,ft),by(3,Nt)],Ip);function Sy(s){return s.replace(/\r\n|\r|\n/g,"")}var G0=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},kp=function(s,e){return function(t,i){e(t,i,s)}},j0=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},v$=q("editorSuggestWidget.background",{dark:cn,light:cn,hc:cn},u("editorSuggestWidgetBackground","Background color of the suggest widget.")),x$=q("editorSuggestWidget.border",{dark:Ea,light:Ea,hc:Ea},u("editorSuggestWidgetBorder","Border color of the suggest widget.")),xy=q("editorSuggestWidget.foreground",{dark:jh,light:jh,hc:jh},u("editorSuggestWidgetForeground","Foreground color of the suggest widget.")),C$=q("editorSuggestWidget.selectedForeground",{dark:$h,light:$h,hc:$h},u("editorSuggestWidgetSelectedForeground","Foreground color of the selected entry in the suggest widget.")),_$=q("editorSuggestWidget.selectedIconForeground",{dark:Kh,light:Kh,hc:Kh},u("editorSuggestWidgetSelectedIconForeground","Icon foreground color of the selected entry in the suggest widget.")),U0=q("editorSuggestWidget.selectedBackground",{dark:qh,light:qh,hc:qh},u("editorSuggestWidgetSelectedBackground","Background color of the selected entry in the suggest widget.")),w$=q("editorSuggestWidget.highlightForeground",{dark:br,light:br,hc:br},u("editorSuggestWidgetHighlightForeground","Color of the match highlights in the suggest widget.")),T$=q("editorSuggestWidget.focusHighlightForeground",{dark:Uh,light:Uh,hc:Uh},u("editorSuggestWidgetFocusHighlightForeground","Color of the match highlights in the suggest widget when an item is focused.")),E$=q("editorSuggestWidgetStatus.foreground",{dark:si(xy,.5),light:si(xy,.5),hc:si(xy,.5)},u("editorSuggestWidgetStatusForeground","Foreground color of the suggest widget status.")),Kw=class{constructor(e,t){this._service=e,this._key=`suggestWidget.size/${t.getEditorType()}/${t instanceof Mn}`}restore(){var e;let t=(e=this._service.get(this._key,0))!==null&&e!==void 0?e:"";try{let i=JSON.parse(t);if(lt.is(i))return lt.lift(i)}catch(i){}}store(e){this._service.store(this._key,JSON.stringify(e),0,1)}reset(){this._service.remove(this._key,0)}},tl=class Cy{constructor(e,t,i,n,o){this.editor=e,this._storageService=t,this._state=0,this._isAuto=!1,this._ignoreFocusEvents=!1,this._forceRenderingAbove=!1,this._explainMode=!1,this._showTimeout=new Ri,this._disposables=new A,this._onDidSelect=new j,this._onDidFocus=new j,this._onDidHide=new j,this._onDidShow=new j,this.onDidSelect=this._onDidSelect.event,this.onDidFocus=this._onDidFocus.event,this.onDidHide=this._onDidHide.event,this.onDidShow=this._onDidShow.event,this._onDetailsKeydown=new j,this.onDetailsKeyDown=this._onDetailsKeydown.event,this.element=new rc,this.element.domNode.classList.add("editor-widget","suggest-widget"),this._contentWidget=new qw(this,e),this._persistedSize=new Kw(t,e);class r{constructor(m,f,v=!1,_=!1){this.persistedSize=m,this.currentSize=f,this.persistHeight=v,this.persistWidth=_}}let a;this._disposables.add(this.element.onDidWillResize(()=>{this._contentWidget.lockPreference(),a=new r(this._persistedSize.restore(),this.element.size)})),this._disposables.add(this.element.onDidResize(p=>{var m,f,v,_;if(this._resize(p.dimension.width,p.dimension.height),a&&(a.persistHeight=a.persistHeight||!!p.north||!!p.south,a.persistWidth=a.persistWidth||!!p.east||!!p.west),!!p.done){if(a){let{itemHeight:w,defaultSize:R}=this.getLayoutInfo(),P=Math.round(w/2),{width:B,height:V}=this.element.size;(!a.persistHeight||Math.abs(a.currentSize.height-V)<=P)&&(V=(f=(m=a.persistedSize)===null||m===void 0?void 0:m.height)!==null&&f!==void 0?f:R.height),(!a.persistWidth||Math.abs(a.currentSize.width-B)<=P)&&(B=(_=(v=a.persistedSize)===null||v===void 0?void 0:v.width)!==null&&_!==void 0?_:R.width),this._persistedSize.store(new lt(B,V))}this._contentWidget.unlockPreference(),a=void 0}})),this._messageElement=H(this.element.domNode,W(".message")),this._listElement=H(this.element.domNode,W(".tree"));let l=o.createInstance(Tp,this.editor);l.onDidClose(this.toggleDetails,this,this._disposables),this._details=new yy(l,this.editor);let c=()=>this.element.domNode.classList.toggle("no-icons",!this.editor.getOption(106).showIcons);c();let d=o.createInstance(Ip,this.editor);this._disposables.add(d),this._disposables.add(d.onDidToggleDetails(()=>this.toggleDetails())),this._list=new pC("SuggestWidget",this._listElement,{getHeight:p=>this.getLayoutInfo().itemHeight,getTemplateId:p=>"suggestion"},[d],{alwaysConsumeMouseWheel:!0,useShadows:!1,mouseSupport:!1,accessibilityProvider:{getRole:()=>"option",getWidgetAriaLabel:()=>u("suggest","Suggest"),getWidgetRole:()=>"listbox",getAriaLabel:p=>{let m=p.textLabel;if(typeof p.completion.label!="string"){let{detail:w,description:R}=p.completion.label;w&&R?m=u("label.full","{0}{1}, {2}",m,w,R):w?m=u("label.detail","{0}{1}",m,w):R&&(m=u("label.desc","{0}, {1}",m,R))}if(!p.isResolved||!this._isDetailsVisible())return m;let{documentation:f,detail:v}=p.completion,_=Ui("{0}{1}",v||"",f?typeof f=="string"?f:f.value:"");return u("ariaCurrenttSuggestionReadDetails","{0}, docs: {1}",m,_)}}}),this._status=o.createInstance(_p,this.element.domNode);let h=()=>this.element.domNode.classList.toggle("with-status-bar",this.editor.getOption(106).showStatusBar);h(),this._disposables.add(Jx(this._list,n,{listInactiveFocusBackground:U0,listInactiveFocusOutline:as})),this._disposables.add(n.onDidColorThemeChange(p=>this._onThemeChange(p))),this._onThemeChange(n.getColorTheme()),this._disposables.add(this._list.onMouseDown(p=>this._onListMouseDownOrTap(p))),this._disposables.add(this._list.onTap(p=>this._onListMouseDownOrTap(p))),this._disposables.add(this._list.onDidChangeSelection(p=>this._onListSelection(p))),this._disposables.add(this._list.onDidChangeFocus(p=>this._onListFocus(p))),this._disposables.add(this.editor.onDidChangeCursorSelection(()=>this._onCursorSelectionChanged())),this._disposables.add(this.editor.onDidChangeConfiguration(p=>{p.hasChanged(106)&&(h(),c())})),this._ctxSuggestWidgetVisible=Ce.Visible.bindTo(i),this._ctxSuggestWidgetDetailsVisible=Ce.DetailsVisible.bindTo(i),this._ctxSuggestWidgetMultipleSuggestions=Ce.MultipleSuggestions.bindTo(i),this._disposables.add(zi(this._details.widget.domNode,"keydown",p=>{this._onDetailsKeydown.fire(p)})),this._disposables.add(this.editor.onMouseDown(p=>this._onEditorMouseDown(p)))}dispose(){var e;this._details.widget.dispose(),this._details.dispose(),this._list.dispose(),this._status.dispose(),this._disposables.dispose(),(e=this._loadingTimeout)===null||e===void 0||e.dispose(),this._showTimeout.dispose(),this._contentWidget.dispose(),this.element.dispose()}_onEditorMouseDown(e){this._details.widget.domNode.contains(e.target.element)?this._details.widget.domNode.focus():this.element.domNode.contains(e.target.element)&&this.editor.focus()}_onCursorSelectionChanged(){this._state!==0&&this._contentWidget.layout()}_onListMouseDownOrTap(e){typeof e.element=="undefined"||typeof e.index=="undefined"||(e.browserEvent.preventDefault(),e.browserEvent.stopPropagation(),this._select(e.element,e.index))}_onListSelection(e){e.elements.length&&this._select(e.elements[0],e.indexes[0])}_select(e,t){let i=this._completionModel;i&&(this._onDidSelect.fire({item:e,index:t,model:i}),this.editor.focus())}_onThemeChange(e){this._details.widget.borderWidth=e.type==="hc"?2:1}_onListFocus(e){var t;if(this._ignoreFocusEvents)return;if(!e.elements.length){this._currentSuggestionDetails&&(this._currentSuggestionDetails.cancel(),this._currentSuggestionDetails=void 0,this._focusedItem=void 0),this.editor.setAriaOptions({activeDescendant:void 0});return}if(!this._completionModel)return;let i=e.elements[0],n=e.indexes[0];i!==this._focusedItem&&((t=this._currentSuggestionDetails)===null||t===void 0||t.cancel(),this._currentSuggestionDetails=void 0,this._focusedItem=i,this._list.reveal(n),this._currentSuggestionDetails=Oe(o=>j0(this,void 0,void 0,function*(){let r=Qr(()=>{this._isDetailsVisible()&&this.showDetails(!0)},250);o.onCancellationRequested(()=>r.dispose());let a=yield i.resolve(o);return r.dispose(),a})),this._currentSuggestionDetails.then(()=>{n>=this._list.length||i!==this._list.element(n)||(this._ignoreFocusEvents=!0,this._list.splice(n,1,[i]),this._list.setFocus([n]),this._ignoreFocusEvents=!1,this._isDetailsVisible()?this.showDetails(!1):this.element.domNode.classList.remove("docs-side"),this.editor.setAriaOptions({activeDescendant:vy(n)}))}).catch(de)),this._onDidFocus.fire({item:i,index:n,model:this._completionModel})}_setState(e){if(this._state!==e)switch(this._state=e,this.element.domNode.classList.toggle("frozen",e===4),this.element.domNode.classList.remove("message"),e){case 0:Vt(this._messageElement,this._listElement,this._status.element),this._details.hide(!0),this._status.hide(),this._contentWidget.hide(),this._ctxSuggestWidgetVisible.reset(),this._ctxSuggestWidgetMultipleSuggestions.reset(),this._showTimeout.cancel(),this.element.domNode.classList.remove("visible"),this._list.splice(0,this._list.length),this._focusedItem=void 0,this._cappedHeight=void 0,this._explainMode=!1;break;case 1:this.element.domNode.classList.add("message"),this._messageElement.textContent=Cy.LOADING_MESSAGE,Vt(this._listElement,this._status.element),oi(this._messageElement),this._details.hide(),this._show(),this._focusedItem=void 0;break;case 2:this.element.domNode.classList.add("message"),this._messageElement.textContent=Cy.NO_SUGGESTIONS_MESSAGE,Vt(this._listElement,this._status.element),oi(this._messageElement),this._details.hide(),this._show(),this._focusedItem=void 0;break;case 3:Vt(this._messageElement),oi(this._listElement,this._status.element),this._show();break;case 4:Vt(this._messageElement),oi(this._listElement,this._status.element),this._show();break;case 5:Vt(this._messageElement),oi(this._listElement,this._status.element),this._details.show(),this._show();break}}_show(){this._status.show(),this._contentWidget.show(),this._layout(this._persistedSize.restore()),this._ctxSuggestWidgetVisible.set(!0),this._showTimeout.cancelAndSet(()=>{this.element.domNode.classList.add("visible"),this._onDidShow.fire(this)},100)}showTriggered(e,t){this._state===0&&(this._contentWidget.setPosition(this.editor.getPosition()),this._isAuto=!!e,this._isAuto||(this._loadingTimeout=Qr(()=>this._setState(1),t)))}showSuggestions(e,t,i,n){var o,r;if(this._contentWidget.setPosition(this.editor.getPosition()),(o=this._loadingTimeout)===null||o===void 0||o.dispose(),(r=this._currentSuggestionDetails)===null||r===void 0||r.cancel(),this._currentSuggestionDetails=void 0,this._completionModel!==e&&(this._completionModel=e),i&&this._state!==2&&this._state!==0){this._setState(4);return}let a=this._completionModel.items.length,l=a===0;if(this._ctxSuggestWidgetMultipleSuggestions.set(a>1),l){this._setState(n?0:2),this._completionModel=void 0;return}this._focusedItem=void 0,this._list.splice(0,this._list.length,this._completionModel.items),this._setState(i?4:3),this._list.reveal(t,0),this._list.setFocus([t]),this._layout(this.element.size),this._details.widget.domNode.classList.remove("focused")}selectNextPage(){switch(this._state){case 0:return!1;case 5:return this._details.widget.pageDown(),!0;case 1:return!this._isAuto;default:return this._list.focusNextPage(),!0}}selectNext(){switch(this._state){case 0:return!1;case 1:return!this._isAuto;default:return this._list.focusNext(1,!0),!0}}selectLast(){switch(this._state){case 0:return!1;case 5:return this._details.widget.scrollBottom(),!0;case 1:return!this._isAuto;default:return this._list.focusLast(),!0}}selectPreviousPage(){switch(this._state){case 0:return!1;case 5:return this._details.widget.pageUp(),!0;case 1:return!this._isAuto;default:return this._list.focusPreviousPage(),!0}}selectPrevious(){switch(this._state){case 0:return!1;case 1:return!this._isAuto;default:return this._list.focusPrevious(1,!0),!1}}selectFirst(){switch(this._state){case 0:return!1;case 5:return this._details.widget.scrollTop(),!0;case 1:return!this._isAuto;default:return this._list.focusFirst(),!0}}getFocusedItem(){if(this._state!==0&&this._state!==2&&this._state!==1&&this._completionModel)return{item:this._list.getFocusedElements()[0],index:this._list.getFocus()[0],model:this._completionModel}}toggleDetailsFocus(){this._state===5?(this._setState(3),this._details.widget.domNode.classList.remove("focused")):this._state===3&&this._isDetailsVisible()&&(this._setState(5),this._details.widget.domNode.classList.add("focused"))}toggleDetails(){this._isDetailsVisible()?(this._ctxSuggestWidgetDetailsVisible.set(!1),this._setDetailsVisible(!1),this._details.hide(),this.element.domNode.classList.remove("shows-details")):(sc(this._list.getFocusedElements()[0])||this._explainMode)&&(this._state===3||this._state===5||this._state===4)&&(this._ctxSuggestWidgetDetailsVisible.set(!0),this._setDetailsVisible(!0),this.showDetails(!1))}showDetails(e){this._details.show(),e?this._details.widget.renderLoading():this._details.widget.renderItem(this._list.getFocusedElements()[0],this._explainMode),this._positionDetails(),this.editor.focus(),this.element.domNode.classList.add("shows-details")}toggleExplainMode(){this._list.getFocusedElements()[0]&&(this._explainMode=!this._explainMode,this._isDetailsVisible()?this.showDetails(!1):this.toggleDetails())}resetPersistedSize(){this._persistedSize.reset()}hideWidget(){var e;(e=this._loadingTimeout)===null||e===void 0||e.dispose(),this._setState(0),this._onDidHide.fire(this),this.element.clearSashHoverState();let t=this._persistedSize.restore(),i=Math.ceil(this.getLayoutInfo().itemHeight*4.3);t&&t.height<i&&this._persistedSize.store(t.with(void 0,i))}isFrozen(){return this._state===4}_afterRender(e){if(e===null){this._isDetailsVisible()&&this._details.hide();return}this._state===2||this._state===1||(this._isDetailsVisible()&&this._details.show(),this._positionDetails())}_layout(e){var t,i,n;if(!this.editor.hasModel()||!this.editor.getDomNode())return;let o=Dh(document.body),r=this.getLayoutInfo();e||(e=r.defaultSize);let a=e.height,l=e.width;if(this._status.element.style.lineHeight=`${r.itemHeight}px`,this._state===2||this._state===1)a=r.itemHeight+r.borderHeight,l=r.defaultSize.width/2,this.element.enableSashes(!1,!1,!1,!1),this.element.minSize=this.element.maxSize=new lt(l,a),this._contentWidget.setPreference(2);else{let c=o.width-r.borderHeight-2*r.horizontalPadding;l>c&&(l=c);let d=this._completionModel?this._completionModel.stats.pLabelLen*r.typicalHalfwidthCharacterWidth:l,h=r.statusBarHeight+this._list.contentHeight+r.borderHeight,p=r.itemHeight+r.statusBarHeight,m=ni(this.editor.getDomNode()),f=this.editor.getScrolledVisiblePosition(this.editor.getPosition()),v=m.top+f.top+f.height,_=Math.min(o.height-v-r.verticalPadding,h),w=m.top+f.top-r.verticalPadding,R=Math.min(w,h),P=Math.min(Math.max(R,_)+r.borderHeight,h);a===((t=this._cappedHeight)===null||t===void 0?void 0:t.capped)&&(a=this._cappedHeight.wanted),a<p&&(a=p),a>P&&(a=P);let B=150;a>_||this._forceRenderingAbove&&w>B?(this._contentWidget.setPreference(1),this.element.enableSashes(!0,!0,!1,!1),P=R):(this._contentWidget.setPreference(2),this.element.enableSashes(!1,!0,!0,!1),P=_),this.element.preferredSize=new lt(d,r.defaultSize.height),this.element.maxSize=new lt(c,P),this.element.minSize=new lt(220,p),this._cappedHeight=a===h?{wanted:(n=(i=this._cappedHeight)===null||i===void 0?void 0:i.wanted)!==null&&n!==void 0?n:e.height,capped:a}:void 0}this._resize(l,a)}_resize(e,t){let{width:i,height:n}=this.element.maxSize;e=Math.min(i,e),t=Math.min(n,t);let{statusBarHeight:o}=this.getLayoutInfo();this._list.layout(t-o,e),this._listElement.style.height=`${t-o}px`,this.element.layout(t,e),this._contentWidget.layout(),this._positionDetails()}_positionDetails(){var e;this._isDetailsVisible()&&this._details.placeAtAnchor(this.element.domNode,((e=this._contentWidget.getPosition())===null||e===void 0?void 0:e.preference[0])===2)}getLayoutInfo(){let e=this.editor.getOption(44),t=Nx(this.editor.getOption(108)||e.lineHeight,8,1e3),i=!this.editor.getOption(106).showStatusBar||this._state===2||this._state===1?0:t,n=this._details.widget.borderWidth,o=2*n;return{itemHeight:t,statusBarHeight:i,borderWidth:n,borderHeight:o,typicalHalfwidthCharacterWidth:e.typicalHalfwidthCharacterWidth,verticalPadding:22,horizontalPadding:14,defaultSize:new lt(430,i+12*t+o)}}_isDetailsVisible(){return this._storageService.getBoolean("expandSuggestionDocs",0,!1)}_setDetailsVisible(e){this._storageService.store("expandSuggestionDocs",e,0,0)}forceRenderingAbove(){this._forceRenderingAbove||(this._forceRenderingAbove=!0,this._layout(this._persistedSize.restore()))}stopForceRenderingAbove(){this._forceRenderingAbove=!1}};tl.LOADING_MESSAGE=u("suggestWidget.loading","Loading...");tl.NO_SUGGESTIONS_MESSAGE=u("suggestWidget.noSuggestions","No suggestions.");tl=G0([kp(1,li),kp(2,ie),kp(3,Nt),kp(4,le)],tl);var qw=class{constructor(e,t){this._widget=e,this._editor=t,this.allowEditorOverflow=!0,this.suppressMouseDown=!1,this._preferenceLocked=!1,this._added=!1,this._hidden=!1}dispose(){this._added&&(this._added=!1,this._editor.removeContentWidget(this))}getId(){return"editor.widget.suggestWidget"}getDomNode(){return this._widget.element.domNode}show(){this._hidden=!1,this._added||(this._added=!0,this._editor.addContentWidget(this))}hide(){this._hidden||(this._hidden=!0,this.layout())}layout(){this._editor.layoutContentWidget(this)}getPosition(){return this._hidden||!this._position||!this._preference?null:{position:this._position,preference:[this._preference]}}beforeRender(){let{height:e,width:t}=this._widget.element.size,{borderWidth:i,horizontalPadding:n}=this._widget.getLayoutInfo();return new lt(t+2*i+n,e+2*i)}afterRender(e){this._widget._afterRender(e)}setPreference(e){this._preferenceLocked||(this._preference=e)}lockPreference(){this._preferenceLocked=!0}unlockPreference(){this._preferenceLocked=!1}setPosition(e){this._position=e}};ed();Hi();ev();var $0=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},il=function(s,e){return function(t,i){e(t,i,s)}},K0=!1,Xw=class{constructor(e,t){if(this._model=e,this._position=t,e.getLineMaxColumn(t.lineNumber)!==t.column){let n=e.getOffsetAt(t),o=e.getPositionAt(n+1);this._marker=e.deltaDecorations([],[{range:b.fromPositions(t,o),options:{description:"suggest-line-suffix",stickiness:1}}])}}dispose(){this._marker&&!this._model.isDisposed()&&this._model.deltaDecorations(this._marker,[])}delta(e){if(this._model.isDisposed()||this._position.lineNumber!==e.lineNumber)return 0;if(this._marker){let t=this._model.getDecorationRange(this._marker[0]);return this._model.getOffsetAt(t.getStartPosition())-this._model.getOffsetAt(e)}else return this._model.getLineMaxColumn(e.lineNumber)-e.column}},Qi=class Yw{constructor(e,t,i,n,o,r,a){this._memoryService=t,this._commandService=i,this._contextKeyService=n,this._instantiationService=o,this._logService=r,this._telemetryService=a,this._lineSuffix=new et,this._toDispose=new A,this._selectors=new Zw(h=>h.priority),this._telemetryGate=0,this.editor=e,this.model=o.createInstance(Cp,this.editor);let l=Ce.InsertMode.bindTo(n);l.set(e.getOption(106).insertMode),this.model.onDidTrigger(()=>l.set(e.getOption(106).insertMode)),this.widget=this._toDispose.add(new pa(()=>{let h=this._instantiationService.createInstance(tl,this.editor);this._toDispose.add(h),this._toDispose.add(h.onDidSelect(_=>this._insertSuggestion(_,0),this));let p=new gy(this.editor,h,_=>this._insertSuggestion(_,2));this._toDispose.add(p),this._toDispose.add(this.model.onDidSuggest(_=>{_.completionModel.items.length===0&&p.reset()}));let m=Ce.MakesTextEdit.bindTo(this._contextKeyService),f=Ce.HasInsertAndReplaceRange.bindTo(this._contextKeyService),v=Ce.CanResolve.bindTo(this._contextKeyService);return this._toDispose.add(We(()=>{m.reset(),f.reset(),v.reset()})),this._toDispose.add(h.onDidFocus(({item:_})=>{let w=this.editor.getPosition(),R=_.editStart.column,P=w.column,B=!0;this.editor.getOption(1)==="smart"&&this.model.state===2&&!_.completion.additionalTextEdits&&!(_.completion.insertTextRules&4)&&P-R===_.completion.insertText.length&&(B=this.editor.getModel().getValueInRange({startLineNumber:w.lineNumber,startColumn:R,endLineNumber:w.lineNumber,endColumn:P})!==_.completion.insertText),m.set(B),f.set(!U.equals(_.editInsertEnd,_.editReplaceEnd)),v.set(Boolean(_.provider.resolveCompletionItem)||Boolean(_.completion.documentation)||_.completion.detail!==_.completion.label)})),this._toDispose.add(h.onDetailsKeyDown(_=>{if(_.toKeybinding().equals(new Bm(!0,!1,!1,!1,33))||bi&&_.toKeybinding().equals(new Bm(!1,!1,!1,!0,33))){_.stopPropagation();return}_.toKeybinding().isModifierKey()||this.editor.focus()})),h})),this._overtypingCapturer=this._toDispose.add(new pa(()=>this._toDispose.add(new el(this.editor,this.model)))),this._alternatives=this._toDispose.add(new pa(()=>this._toDispose.add(new Mr(this.editor,this._contextKeyService)))),this._toDispose.add(o.createInstance(Ja,e)),this._toDispose.add(this.model.onDidTrigger(h=>{this.widget.value.showTriggered(h.auto,h.shy?250:50),this._lineSuffix.value=new Xw(this.editor.getModel(),h.position)})),this._toDispose.add(this.model.onDidSuggest(h=>{if(!h.shy){let p=-1;for(let m of this._selectors.itemsOrderedByPriorityDesc)if(p=m.select(this.editor.getModel(),this.editor.getPosition(),h.completionModel.items),p!==-1)break;p===-1&&(p=this._memoryService.select(this.editor.getModel(),this.editor.getPosition(),h.completionModel.items)),this.widget.value.showSuggestions(h.completionModel,p,h.isFrozen,h.auto)}})),this._toDispose.add(this.model.onDidCancel(h=>{h.retrigger||this.widget.value.hideWidget()})),this._toDispose.add(this.editor.onDidBlurEditorWidget(()=>{K0||(this.model.cancel(),this.model.clear())}));let c=Ce.AcceptSuggestionsOnEnter.bindTo(n),d=()=>{let h=this.editor.getOption(1);c.set(h==="on"||h==="smart")};this._toDispose.add(this.editor.onDidChangeConfiguration(()=>d())),d()}static get(e){return e.getContribution(Yw.ID)}dispose(){this._alternatives.dispose(),this._toDispose.dispose(),this.widget.dispose(),this.model.dispose(),this._lineSuffix.dispose()}_insertSuggestion(e,t){if(!e||!e.item){this._alternatives.value.reset(),this.model.cancel(),this.model.clear();return}if(!this.editor.hasModel())return;let i=Et.get(this.editor);if(!i)return;let n=this.editor.getModel(),o=n.getAlternativeVersionId(),{item:r}=e,a=[],l=new Ft;t&1||this.editor.pushUndoStop();let c=this.getOverwriteInfo(r,Boolean(t&8));if(this._memoryService.memorize(n,this.editor.getPosition(),r),Array.isArray(r.completion.additionalTextEdits)){let h=vr.capture(this.editor);this.editor.executeEdits("suggestController.additionalTextEdits.sync",r.completion.additionalTextEdits.map(p=>Ge.replace(b.lift(p.range),p.text))),h.restoreRelativeVerticalPositionOfCursor(this.editor)}else if(!r.isResolved){let h=new on(!0),p,m=n.onDidChangeContent(w=>{if(w.isFlush){l.cancel(),m.dispose();return}for(let R of w.changes){let P=b.getEndPosition(R.range);(!p||U.isBefore(P,p))&&(p=P)}}),f=t;t|=2;let v=!1,_=this.editor.onWillType(()=>{_.dispose(),v=!0,f&2||this.editor.pushUndoStop()});a.push(r.resolve(l.token).then(()=>{if(!r.completion.additionalTextEdits||l.token.isCancellationRequested||p&&r.completion.additionalTextEdits.some(R=>U.isBefore(p,b.getStartPosition(R.range))))return!1;v&&this.editor.pushUndoStop();let w=vr.capture(this.editor);return this.editor.executeEdits("suggestController.additionalTextEdits.async",r.completion.additionalTextEdits.map(R=>Ge.replace(b.lift(R.range),R.text))),w.restoreRelativeVerticalPositionOfCursor(this.editor),(v||!(f&2))&&this.editor.pushUndoStop(),!0}).then(w=>{this._logService.trace("[suggest] async resolving of edits DONE (ms, applied?)",h.elapsed(),w),m.dispose(),_.dispose()}))}let{insertText:d}=r.completion;r.completion.insertTextRules&4||(d=Vo.escape(d)),i.insert(d,{overwriteBefore:c.overwriteBefore,overwriteAfter:c.overwriteAfter,undoStopBefore:!1,undoStopAfter:!1,adjustWhitespace:!(r.completion.insertTextRules&1),clipboardText:e.model.clipboardText,overtypingCapturer:this._overtypingCapturer.value}),t&2||this.editor.pushUndoStop(),r.completion.command?r.completion.command.id===nl.id?this.model.trigger({auto:!0,shy:!1},!0):(a.push(this._commandService.executeCommand(r.completion.command.id,...r.completion.command.arguments?[...r.completion.command.arguments]:[]).catch(de)),this.model.cancel()):this.model.cancel(),t&4&&this._alternatives.value.set(e,h=>{for(l.cancel();n.canUndo();){o!==n.getAlternativeVersionId()&&n.undo(),this._insertSuggestion(h,3|(t&8?8:0));break}}),this._alertCompletionItem(r),Promise.all(a).finally(()=>{this._reportSuggestionAcceptedTelemetry(n,e),this.model.clear(),l.dispose()})}_reportSuggestionAcceptedTelemetry(e,t){var i;if(this._telemetryGate++%100!==0)return;let n=((i=t.item.provider._debugDisplayName)!==null&&i!==void 0?i:"unknown").split("(",1)[0].toLowerCase();this._telemetryService.publicLog2("suggest.acceptedSuggestion",{providerId:n,basenameHash:Ph(Jt(e.uri)).toString(16),languageId:e.getLanguageId(),fileExtension:Tx(e.uri)})}getOverwriteInfo(e,t){qe(this.editor.hasModel());let i=this.editor.getOption(106).insertMode==="replace";t&&(i=!i);let n=e.position.column-e.editStart.column,o=(i?e.editReplaceEnd.column:e.editInsertEnd.column)-e.position.column,r=this.editor.getPosition().column-e.position.column,a=this._lineSuffix.value?this._lineSuffix.value.delta(this.editor.getPosition()):0;return{overwriteBefore:n+r,overwriteAfter:o+a}}_alertCompletionItem(e){if(Pt(e.completion.additionalTextEdits)){let t=u("aria.alert.snippet","Accepting '{0}' made {1} additional edits",e.textLabel,e.completion.additionalTextEdits.length);_t(t)}}triggerSuggest(e,t){this.editor.hasModel()&&(this.model.trigger({auto:t!=null?t:!1,shy:!1},!1,e),this.editor.revealPosition(this.editor.getPosition(),0),this.editor.focus())}triggerSuggestAndAcceptBest(e){if(!this.editor.hasModel())return;let t=this.editor.getPosition(),i=()=>{t.equals(this.editor.getPosition())&&this._commandService.executeCommand(e.fallback)},n=o=>{if(o.completion.insertTextRules&4||o.completion.additionalTextEdits)return!0;let r=this.editor.getPosition(),a=o.editStart.column,l=r.column;return l-a!==o.completion.insertText.length?!0:this.editor.getModel().getValueInRange({startLineNumber:r.lineNumber,startColumn:a,endLineNumber:r.lineNumber,endColumn:l})!==o.completion.insertText};ht.once(this.model.onDidTrigger)(o=>{let r=[];ht.any(this.model.onDidTrigger,this.model.onDidCancel)(()=>{xt(r),i()},void 0,r),this.model.onDidSuggest(({completionModel:a})=>{if(xt(r),a.items.length===0){i();return}let l=this._memoryService.select(this.editor.getModel(),this.editor.getPosition(),a.items),c=a.items[l];if(!n(c)){i();return}this.editor.pushUndoStop(),this._insertSuggestion({index:l,item:c,model:a},7)},void 0,r)}),this.model.trigger({auto:!1,shy:!0}),this.editor.revealPosition(t,0),this.editor.focus()}acceptSelectedSuggestion(e,t){let i=this.widget.value.getFocusedItem(),n=0;e&&(n|=4),t&&(n|=8),this._insertSuggestion(i,n)}acceptNextSuggestion(){this._alternatives.value.next()}acceptPrevSuggestion(){this._alternatives.value.prev()}cancelSuggestWidget(){this.model.cancel(),this.model.clear(),this.widget.value.hideWidget()}selectNextSuggestion(){this.widget.value.selectNext()}selectNextPageSuggestion(){this.widget.value.selectNextPage()}selectLastSuggestion(){this.widget.value.selectLast()}selectPrevSuggestion(){this.widget.value.selectPrevious()}selectPrevPageSuggestion(){this.widget.value.selectPreviousPage()}selectFirstSuggestion(){this.widget.value.selectFirst()}toggleSuggestionDetails(){this.widget.value.toggleDetails()}toggleExplainMode(){this.widget.value.toggleExplainMode()}toggleSuggestionFocus(){this.widget.value.toggleDetailsFocus()}resetWidgetSize(){this.widget.value.resetPersistedSize()}forceRenderingAbove(){this.widget.value.forceRenderingAbove()}stopForceRenderingAbove(){!this.widget.isInitialized||this.widget.value.stopForceRenderingAbove()}registerSelector(e){return this._selectors.register(e)}};Qi.ID="editor.contrib.suggestController";Qi=$0([il(1,my),il(2,dt),il(3,ie),il(4,le),il(5,pr),il(6,Yn)],Qi);var Zw=class{constructor(e){this.prioritySelector=e,this._items=new Array}register(e){if(this._items.indexOf(e)!==-1)throw new Error("Value is already registered");return this._items.push(e),this._items.sort((t,i)=>this.prioritySelector(i)-this.prioritySelector(t)),{dispose:()=>{let t=this._items.indexOf(e);t>=0&&this._items.splice(t,1)}}}get itemsOrderedByPriorityDesc(){return this._items}},nl=class extends F{constructor(){super({id:nl.id,label:u("suggest.trigger.label","Trigger Suggest"),alias:"Trigger Suggest",precondition:O.and(S.writable,S.hasCompletionItemProvider),kbOpts:{kbExpr:S.textInputFocus,primary:2058,secondary:[2087],mac:{primary:266,secondary:[521,2087]},weight:100}})}run(e,t,i){let n=Qi.get(t);if(!n)return;let o;i&&typeof i=="object"&&i.auto===!0&&(o=!0),n.triggerSuggest(void 0,o)}};nl.id="editor.action.triggerSuggest";J(Qi.ID,Qi);I(nl);var en=100+90,ki=ct.bindToContribution(Qi.get);$(new ki({id:"acceptSelectedSuggestion",precondition:Ce.Visible,handler(s){s.acceptSelectedSuggestion(!0,!1)}}));Zt.registerKeybindingRule({id:"acceptSelectedSuggestion",when:O.and(Ce.Visible,S.textInputFocus),primary:2,weight:en});Zt.registerKeybindingRule({id:"acceptSelectedSuggestion",when:O.and(Ce.Visible,S.textInputFocus,Ce.AcceptSuggestionsOnEnter,Ce.MakesTextEdit),primary:3,weight:en});Oi.appendMenuItem(so,{command:{id:"acceptSelectedSuggestion",title:u("accept.insert","Insert")},group:"left",order:1,when:Ce.HasInsertAndReplaceRange.toNegated()});Oi.appendMenuItem(so,{command:{id:"acceptSelectedSuggestion",title:u("accept.insert","Insert")},group:"left",order:1,when:O.and(Ce.HasInsertAndReplaceRange,Ce.InsertMode.isEqualTo("insert"))});Oi.appendMenuItem(so,{command:{id:"acceptSelectedSuggestion",title:u("accept.replace","Replace")},group:"left",order:1,when:O.and(Ce.HasInsertAndReplaceRange,Ce.InsertMode.isEqualTo("replace"))});$(new ki({id:"acceptAlternativeSelectedSuggestion",precondition:O.and(Ce.Visible,S.textInputFocus),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:1027,secondary:[1026]},handler(s){s.acceptSelectedSuggestion(!1,!0)},menuOpts:[{menuId:so,group:"left",order:2,when:O.and(Ce.HasInsertAndReplaceRange,Ce.InsertMode.isEqualTo("insert")),title:u("accept.replace","Replace")},{menuId:so,group:"left",order:2,when:O.and(Ce.HasInsertAndReplaceRange,Ce.InsertMode.isEqualTo("replace")),title:u("accept.insert","Insert")}]}));Pe.registerCommandAlias("acceptSelectedSuggestionOnEnter","acceptSelectedSuggestion");$(new ki({id:"hideSuggestWidget",precondition:Ce.Visible,handler:s=>s.cancelSuggestWidget(),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:9,secondary:[1033]}}));$(new ki({id:"selectNextSuggestion",precondition:O.and(Ce.Visible,Ce.MultipleSuggestions),handler:s=>s.selectNextSuggestion(),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:18,secondary:[2066],mac:{primary:18,secondary:[2066,300]}}}));$(new ki({id:"selectNextPageSuggestion",precondition:O.and(Ce.Visible,Ce.MultipleSuggestions),handler:s=>s.selectNextPageSuggestion(),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:12,secondary:[2060]}}));$(new ki({id:"selectLastSuggestion",precondition:O.and(Ce.Visible,Ce.MultipleSuggestions),handler:s=>s.selectLastSuggestion()}));$(new ki({id:"selectPrevSuggestion",precondition:O.and(Ce.Visible,Ce.MultipleSuggestions),handler:s=>s.selectPrevSuggestion(),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:16,secondary:[2064],mac:{primary:16,secondary:[2064,302]}}}));$(new ki({id:"selectPrevPageSuggestion",precondition:O.and(Ce.Visible,Ce.MultipleSuggestions),handler:s=>s.selectPrevPageSuggestion(),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:11,secondary:[2059]}}));$(new ki({id:"selectFirstSuggestion",precondition:O.and(Ce.Visible,Ce.MultipleSuggestions),handler:s=>s.selectFirstSuggestion()}));$(new ki({id:"toggleSuggestionDetails",precondition:Ce.Visible,handler:s=>s.toggleSuggestionDetails(),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:2058,secondary:[2087],mac:{primary:266,secondary:[2087]}},menuOpts:[{menuId:so,group:"right",order:1,when:O.and(Ce.DetailsVisible,Ce.CanResolve),title:u("detail.more","show less")},{menuId:so,group:"right",order:1,when:O.and(Ce.DetailsVisible.toNegated(),Ce.CanResolve),title:u("detail.less","show more")}]}));$(new ki({id:"toggleExplainMode",precondition:Ce.Visible,handler:s=>s.toggleExplainMode(),kbOpts:{weight:100,primary:2133}}));$(new ki({id:"toggleSuggestionFocus",precondition:Ce.Visible,handler:s=>s.toggleSuggestionFocus(),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:2570,mac:{primary:778}}}));$(new ki({id:"insertBestCompletion",precondition:O.and(S.textInputFocus,O.equals("config.editor.tabCompletion","on"),Ja.AtEnd,Ce.Visible.toNegated(),Mr.OtherSuggestions.toNegated(),Et.InSnippetMode.toNegated()),handler:(s,e)=>{s.triggerSuggestAndAcceptBest(ph(e)?Object.assign({fallback:"tab"},e):{fallback:"tab"})},kbOpts:{weight:en,primary:2}}));$(new ki({id:"insertNextSuggestion",precondition:O.and(S.textInputFocus,O.equals("config.editor.tabCompletion","on"),Mr.OtherSuggestions,Ce.Visible.toNegated(),Et.InSnippetMode.toNegated()),handler:s=>s.acceptNextSuggestion(),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:2}}));$(new ki({id:"insertPrevSuggestion",precondition:O.and(S.textInputFocus,O.equals("config.editor.tabCompletion","on"),Mr.OtherSuggestions,Ce.Visible.toNegated(),Et.InSnippetMode.toNegated()),handler:s=>s.acceptPrevSuggestion(),kbOpts:{weight:en,kbExpr:S.textInputFocus,primary:1026}}));I(class extends F{constructor(){super({id:"editor.action.resetSuggestSize",label:u("suggest.reset.label","Reset Suggest Widget Size"),alias:"Reset Suggest Widget Size",precondition:void 0})}run(s,e){var t;(t=Qi.get(e))===null||t===void 0||t.resetWidgetSize()}});var _y=class extends z{constructor(e,t){super();this.editor=e,this.suggestControllerPreselector=t,this.isSuggestWidgetVisible=!1,this.isShiftKeyPressed=!1,this._isActive=!1,this._currentSuggestItemInfo=void 0,this.onDidChangeEmitter=new j,this.onDidChange=this.onDidChangeEmitter.event,this.setInactiveDelayed=this._register(new $e(()=>{this.isSuggestWidgetVisible||this._isActive&&(this._isActive=!1,this.onDidChangeEmitter.fire())},100)),this._register(e.onKeyDown(n=>{n.shiftKey&&!this.isShiftKeyPressed&&(this.isShiftKeyPressed=!0,this.update(this._isActive))})),this._register(e.onKeyUp(n=>{n.shiftKey&&this.isShiftKeyPressed&&(this.isShiftKeyPressed=!1,this.update(this._isActive))}));let i=Qi.get(this.editor);if(i){this._register(i.registerSelector({priority:100,select:(r,a,l)=>{let c=this.editor.getModel(),d=Xa(c,this.suggestControllerPreselector());if(!d)return-1;let h=U.lift(a),p=l.map((f,v)=>{let _=Jw(i,h,f,this.isShiftKeyPressed),w=Xa(c,_==null?void 0:_.normalizedInlineCompletion);if(!w)return;let R=q0(d.range,w.range)&&d.text.startsWith(w.text);return{index:v,valid:R,prefixLength:w.text.length,suggestItem:f}}).filter(f=>f&&f.valid),m=hS(p,dS(f=>f.prefixLength,cS));return m?m.index:-1}}));let n=!1,o=()=>{n||(n=!0,this._register(i.widget.value.onDidShow(()=>{this.isSuggestWidgetVisible=!0,this.update(!0)})),this._register(i.widget.value.onDidHide(()=>{this.isSuggestWidgetVisible=!1,this.setInactiveDelayed.schedule(),this.update(this._isActive)})),this._register(i.widget.value.onDidFocus(()=>{this.isSuggestWidgetVisible=!0,this.update(!0)})))};this._register(ht.once(i.model.onDidTrigger)(r=>{o()}))}this.update(this._isActive)}get state(){if(!!this._isActive)return{selectedItem:this._currentSuggestItemInfo}}update(e){let t=this.getSuggestItemInfo(),i=!1;X0(this._currentSuggestItemInfo,t)||(this._currentSuggestItemInfo=t,i=!0),this._isActive!==e&&(this._isActive=e,i=!0),i&&this.onDidChangeEmitter.fire()}getSuggestItemInfo(){let e=Qi.get(this.editor);if(!e||!this.isSuggestWidgetVisible)return;let t=e.widget.value.getFocusedItem();if(!!t)return Jw(e,this.editor.getPosition(),t.item,this.isShiftKeyPressed)}stopForceRenderingAbove(){let e=Qi.get(this.editor);e&&e.stopForceRenderingAbove()}forceRenderingAbove(){let e=Qi.get(this.editor);e&&e.forceRenderingAbove()}};function q0(s,e){return e.startLineNumber===s.startLineNumber&&e.startColumn===s.startColumn&&(e.endLineNumber<s.endLineNumber||e.endLineNumber===s.endLineNumber&&e.endColumn<=s.endColumn)}function X0(s,e){return s===e?!0:!s||!e?!1:s.completionItemKind===e.completionItemKind&&s.isSnippetText===e.isSnippetText&&Tw(s.normalizedInlineCompletion,e.normalizedInlineCompletion)}function Jw(s,e,t,i){if(Array.isArray(t.completion.additionalTextEdits)&&t.completion.additionalTextEdits.length>0)return{completionItemKind:t.completion.kind,isSnippetText:!1,normalizedInlineCompletion:{range:b.fromPositions(e,e),text:""}};let{insertText:n}=t.completion,o=!1;if(t.completion.insertTextRules&4){let a=new Vo().parse(n),l=s.editor.getModel();if(a.children.length>100)return;Ji.adjustWhitespace(l,e,a,!0,!0),n=a.toString(),o=!0}let r=s.getOverwriteInfo(t,i);return{isSnippetText:o,completionItemKind:t.completion.kind,normalizedInlineCompletion:{text:n,range:b.fromPositions(e.delta(0,-r.overwriteBefore),e.delta(0,Math.max(r.overwriteAfter,0)))}}}var Qw=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},wy=class extends Qd{constructor(e,t){super(e);this.cache=t,this.suggestionInlineCompletionSource=this._register(new _y(this.editor,()=>{var i,n;return(n=(i=this.cache.value)===null||i===void 0?void 0:i.completions[0])===null||n===void 0?void 0:n.toLiveInlineCompletion()})),this.updateOperation=this._register(new et),this.updateCacheSoon=this._register(new $e(()=>this.updateCache(),50)),this.minReservedLineCount=0,this._register(this.suggestionInlineCompletionSource.onDidChange(()=>{this.updateCacheSoon.schedule(),this.suggestionInlineCompletionSource.state||(this.minReservedLineCount=0);let n=this.ghostText;n&&(this.minReservedLineCount=Math.max(this.minReservedLineCount,Y0(n.parts.map(o=>o.lines.length-1)))),this.minReservedLineCount>=1?this.suggestionInlineCompletionSource.forceRenderingAbove():this.suggestionInlineCompletionSource.stopForceRenderingAbove(),this.onDidChangeEmitter.fire()})),this._register(this.cache.onDidChange(()=>{this.onDidChangeEmitter.fire()})),this._register(this.editor.onDidChangeCursorPosition(i=>{this.minReservedLineCount=0,this.updateCacheSoon.schedule(),this.onDidChangeEmitter.fire()})),this._register(We(()=>this.suggestionInlineCompletionSource.stopForceRenderingAbove()))}get isActive(){return this.suggestionInlineCompletionSource.state!==void 0}isSuggestionPreviewEnabled(){return this.editor.getOption(106).preview}updateCache(){return Qw(this,void 0,void 0,function*(){let e=this.suggestionInlineCompletionSource.state;if(!e||!e.selectedItem)return;let t={text:e.selectedItem.normalizedInlineCompletion.text,range:e.selectedItem.normalizedInlineCompletion.range,isSnippetText:e.selectedItem.isSnippetText,completionKind:e.selectedItem.completionItemKind},i=this.editor.getPosition(),n=Oe(r=>Qw(this,void 0,void 0,function*(){let a;try{a=yield Jf(i,this.editor.getModel(),{triggerKind:Ai.Automatic,selectedSuggestionInfo:t},r)}catch(l){de(l);return}r.isCancellationRequested||(this.cache.setValue(this.editor,a,Ai.Automatic),this.onDidChangeEmitter.fire())})),o=new mp(n,Ai.Automatic);this.updateOperation.value=o,yield n,this.updateOperation.value===o&&this.updateOperation.clear()})}get ghostText(){var e,t,i;let n=this.isSuggestionPreviewEnabled(),o=Xa(this.editor.getModel(),(t=(e=this.cache.value)===null||e===void 0?void 0:e.completions[0])===null||t===void 0?void 0:t.toLiveInlineCompletion()),r=this.suggestionInlineCompletionSource.state,a=Xa(this.editor.getModel(),(i=r==null?void 0:r.selectedItem)===null||i===void 0?void 0:i.normalizedInlineCompletion),l=o&&a&&o.text.startsWith(a.text)&&o.range.equalsRange(a.range);if(!n&&!l)return;let c=l?o:a||o,d=l?c.text.length-a.text.length:0;return this.toGhostText(c,d)}toGhostText(e,t){let i=this.editor.getOptions().get(106).previewMode;return e?up(e,this.editor.getModel(),i,this.editor.getPosition(),t)||new Jd(e.range.endLineNumber,[],this.minReservedLineCount):void 0}};function Y0(s){return s.reduce((e,t)=>e+t,0)}function eT(s,e){return{object:s,dispose:()=>e==null?void 0:e.dispose()}}wt();var Z0=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},tT=function(s,e){return function(t,i){e(t,i,s)}},J0=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},iT=class extends z{constructor(){super(...arguments);this.onDidChangeEmitter=new j,this.onDidChange=this.onDidChangeEmitter.event,this.hasCachedGhostText=!1,this.currentModelRef=this._register(new et)}get targetModel(){var e;return(e=this.currentModelRef.value)===null||e===void 0?void 0:e.object}setTargetModel(e){var t;((t=this.currentModelRef.value)===null||t===void 0?void 0:t.object)!==e&&(this.currentModelRef.clear(),this.currentModelRef.value=e?eT(e,e.onDidChange(()=>{this.hasCachedGhostText=!1,this.onDidChangeEmitter.fire()})):void 0,this.hasCachedGhostText=!1,this.onDidChangeEmitter.fire())}get ghostText(){var e,t;return this.hasCachedGhostText||(this.cachedGhostText=(t=(e=this.currentModelRef.value)===null||e===void 0?void 0:e.object)===null||t===void 0?void 0:t.ghostText,this.hasCachedGhostText=!0),this.cachedGhostText}setExpanded(e){var t;(t=this.targetModel)===null||t===void 0||t.setExpanded(e)}get minReservedLineCount(){return this.targetModel?this.targetModel.minReservedLineCount:0}},Lp=class extends iT{constructor(e,t,i){super();this.editor=e,this.commandService=t,this.languageConfigurationService=i,this.sharedCache=this._register(new nT),this.suggestWidgetAdapterModel=this._register(new wy(this.editor,this.sharedCache)),this.inlineCompletionsModel=this._register(new pp(this.editor,this.sharedCache,this.commandService,this.languageConfigurationService)),this._register(this.suggestWidgetAdapterModel.onDidChange(()=>{this.updateModel()})),this.updateModel()}get activeInlineCompletionsModel(){if(this.targetModel===this.inlineCompletionsModel)return this.inlineCompletionsModel}updateModel(){this.setTargetModel(this.suggestWidgetAdapterModel.isActive?this.suggestWidgetAdapterModel:this.inlineCompletionsModel),this.inlineCompletionsModel.setActive(this.targetModel===this.inlineCompletionsModel)}shouldShowHoverAt(e){var t;let i=(t=this.activeInlineCompletionsModel)===null||t===void 0?void 0:t.ghostText;return i?i.parts.some(n=>e.containsPosition(new U(i.lineNumber,n.column))):!1}triggerInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.trigger(Ai.Explicit)}commitInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.commitCurrentSuggestion()}hideInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.hide()}showNextInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.showNext()}showPreviousInlineCompletion(){var e;(e=this.activeInlineCompletionsModel)===null||e===void 0||e.showPrevious()}hasMultipleInlineCompletions(){var e;return J0(this,void 0,void 0,function*(){let t=yield(e=this.activeInlineCompletionsModel)===null||e===void 0?void 0:e.hasMultipleInlineCompletions();return t!==void 0?t:!1})}};Lp=Z0([tT(1,dt),tT(2,Dt)],Lp);var nT=class extends z{constructor(){super(...arguments);this.onDidChangeEmitter=new j,this.onDidChange=this.onDidChangeEmitter.event,this.cache=this._register(new et)}get value(){return this.cache.value}setValue(e,t,i){this.cache.value=new Zf(e,t,()=>this.onDidChangeEmitter.fire(),i)}clearAndLeak(){return this.cache.clearAndLeak()}clear(){this.cache.clear()}};Ae();G();Ye();JL();tt();ee();KL();rn();eu();Be();Ne();var Q0=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},oT=function(s,e){return function(t,i){e(t,i,s)}},Ty,rT=(Ty=window.trustedTypes)===null||Ty===void 0?void 0:Ty.createPolicy("editorGhostText",{createHTML:s=>s}),Pp=class extends z{constructor(e,t,i,n){super();this.editor=e,this.model=t,this.instantiationService=i,this.languageService=n,this.disposed=!1,this.partsWidget=this._register(this.instantiationService.createInstance(sT,this.editor)),this.additionalLinesWidget=this._register(new aT(this.editor,this.languageService.languageIdCodec)),this.viewMoreContentWidget=void 0,this._register(this.editor.onDidChangeConfiguration(o=>{(o.hasChanged(29)||o.hasChanged(105)||o.hasChanged(88)||o.hasChanged(83)||o.hasChanged(45)||o.hasChanged(44)||o.hasChanged(59))&&this.update()})),this._register(We(()=>{var o;this.disposed=!0,this.update(),(o=this.viewMoreContentWidget)===null||o===void 0||o.dispose(),this.viewMoreContentWidget=void 0})),this._register(t.onDidChange(()=>{this.update()})),this.update()}shouldShowHoverAtViewZone(e){return this.additionalLinesWidget.viewZoneId===e}update(){var e;let t=this.model.ghostText;if(!this.editor.hasModel()||!t||this.disposed){this.partsWidget.clear(),this.additionalLinesWidget.clear();return}let i=new Array,n=new Array;function o(c,d){if(n.length>0){let h=n[n.length-1];d&&h.decorations.push(new Wm(h.content.length+1,h.content.length+1+c[0].length,d,0)),h.content+=c[0],c=c.slice(1)}for(let h of c)n.push({content:h,decorations:d?[new Wm(1,h.length+1,d,0)]:[]})}let r=this.editor.getModel().getLineContent(t.lineNumber);this.editor.getModel().getLineTokens(t.lineNumber);let a,l=0;for(let c of t.parts){let d=c.lines;a===void 0?(i.push({column:c.column,text:d[0],preview:c.preview}),d=d.slice(1)):o([r.substring(l,c.column-1)],void 0),d.length>0&&(o(d,"ghost-text"),a===void 0&&c.column<=r.length&&(a=c.column)),l=c.column-1}a!==void 0&&o([r.substring(l)],void 0),this.partsWidget.setParts(t.lineNumber,i,a!==void 0?{column:a,length:r.length+1-a}:void 0),this.additionalLinesWidget.updateLines(t.lineNumber,n,t.additionalReservedLineCount),t.parts.some(c=>c.lines.length<0)?this.viewMoreContentWidget=this.renderViewMoreLines(new U(t.lineNumber,this.editor.getModel().getLineMaxColumn(t.lineNumber)),"",0):((e=this.viewMoreContentWidget)===null||e===void 0||e.dispose(),this.viewMoreContentWidget=void 0)}renderViewMoreLines(e,t,i){let n=this.editor.getOption(44),o=document.createElement("div");o.className="suggest-preview-additional-widget",ql(o,n);let r=document.createElement("span");r.className="content-spacer",r.append(t),o.append(r);let a=document.createElement("span");a.className="content-newline suggest-preview-text",a.append("\u23CE  "),o.append(a);let l=new A,c=document.createElement("div");return c.className="button suggest-preview-text",c.append(`+${i} lines\u2026`),l.add(zi(c,"mousedown",d=>{var h;(h=this.model)===null||h===void 0||h.setExpanded(!0),d.preventDefault(),this.editor.focus()})),o.append(c),new lT(this.editor,e,o,l)}};Pp=Q0([oT(2,le),oT(3,ft)],Pp);var sT=class{constructor(e){this.editor=e,this.decorationIds=[],this.disposableStore=new A}dispose(){this.clear(),this.disposableStore.dispose()}clear(){this.editor.deltaDecorations(this.decorationIds,[]),this.disposableStore.clear()}setParts(e,t,i){if(this.disposableStore.clear(),!this.editor.getModel())return;let o=new Array;i&&o.push({range:b.fromPositions(new U(e,i.column),new U(e,i.column+i.length)),options:{inlineClassName:"ghost-text-hidden",description:"ghost-text-hidden"}}),this.decorationIds=this.editor.deltaDecorations(this.decorationIds,t.map(r=>({range:b.fromPositions(new U(e,r.column)),options:{description:"ghost-text",after:{content:r.text,inlineClassName:r.preview?"ghost-text-decoration-preview":"ghost-text-decoration"},showIfCollapsed:!0}})).concat(o))}},aT=class{constructor(e,t){this.editor=e,this.languageIdCodec=t,this._viewZoneId=void 0}get viewZoneId(){return this._viewZoneId}dispose(){this.clear()}clear(){this.editor.changeViewZones(e=>{this._viewZoneId&&(e.removeZone(this._viewZoneId),this._viewZoneId=void 0)})}updateLines(e,t,i){let n=this.editor.getModel();if(!n)return;let{tabSize:o}=n.getOptions();this.editor.changeViewZones(r=>{this._viewZoneId&&(r.removeZone(this._viewZoneId),this._viewZoneId=void 0);let a=Math.max(t.length,i);if(a>0){let l=document.createElement("div");eD(l,o,t,this.editor.getOptions(),this.languageIdCodec),this._viewZoneId=r.addZone({afterLineNumber:e,heightInLines:a,domNode:l,afterColumnAffinity:1})}})}};function eD(s,e,t,i,n){let o=i.get(29),r=i.get(105),a="none",l=i.get(83),c=i.get(45),d=i.get(44),h=i.get(59),p=YS(1e4);p.appendASCIIString('<div class="suggest-preview-text">');for(let v=0,_=t.length;v<_;v++){let w=t[v],R=w.content;p.appendASCIIString('<div class="view-line'),p.appendASCIIString('" style="top:'),p.appendASCIIString(String(v*h)),p.appendASCIIString('px;width:1000000px;">');let P=DS(R),B=MS(R),V=ov.createEmpty(R,n);sv(new rv(d.isMonospace&&!o,d.canUseHalfwidthRightwardsArrow,R,!1,P,B,0,V,w.decorations,e,0,d.spaceWidth,d.middotWidth,d.wsmiddotWidth,r,a,l,c!==gS.OFF,null),p),p.appendASCIIString("</div>")}p.appendASCIIString("</div>"),ql(s,d);let m=p.build(),f=rT?rT.createHTML(m):m;s.innerHTML=f}var lT=class extends z{constructor(e,t,i,n){super();this.editor=e,this.position=t,this.domNode=i,this.allowEditorOverflow=!1,this.suppressMouseDown=!1,this._register(n),this._register(We(()=>{this.editor.removeContentWidget(this)})),this.editor.addContentWidget(this)}getId(){return"editor.widget.viewMoreLinesWidget"}getDomNode(){return this.domNode}getPosition(){return{position:this.position,preference:[0]}}};Me((s,e)=>{let t=s.getColor(fx);t&&(e.addRule(`.monaco-editor .ghost-text-decoration { color: ${t.toString()} !important; }`),e.addRule(`.monaco-editor .ghost-text-decoration-preview { color: ${t.toString()} !important; }`),e.addRule(`.monaco-editor .suggest-preview-text .ghost-text { color: ${t.toString()} !important; }`));let i=s.getColor(yx);i&&(e.addRule(`.monaco-editor .ghost-text-decoration { background-color: ${i.toString()}; }`),e.addRule(`.monaco-editor .ghost-text-decoration-preview { background-color: ${i.toString()}; }`),e.addRule(`.monaco-editor .suggest-preview-text .ghost-text { background-color: ${i.toString()}; }`));let n=s.getColor(gx);n&&(e.addRule(`.monaco-editor .suggest-preview-text .ghost-text { border: 1px solid ${n}; }`),e.addRule(`.monaco-editor .ghost-text-decoration { border: 1px solid ${n}; }`),e.addRule(`.monaco-editor .ghost-text-decoration-preview { border: 1px solid ${n}; }`))});Q();Ee();Be();Ql();var dT=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Ey=function(s,e){return function(t,i){e(t,i,s)}},Mp=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Tt=class cT extends z{constructor(e,t){super();this.editor=e,this.instantiationService=t,this.triggeredExplicitly=!1,this.activeController=this._register(new et),this._register(this.editor.onDidChangeModel(()=>{this.updateModelController()})),this._register(this.editor.onDidChangeConfiguration(i=>{i.hasChanged(106)&&this.updateModelController(),i.hasChanged(55)&&this.updateModelController()})),this.updateModelController()}static get(e){return e.getContribution(cT.ID)}get activeModel(){var e;return(e=this.activeController.value)===null||e===void 0?void 0:e.model}updateModelController(){let e=this.editor.getOption(106),t=this.editor.getOption(55);this.activeController.value=void 0,this.activeController.value=this.editor.hasModel()&&(e.preview||t.enabled||this.triggeredExplicitly)?this.instantiationService.createInstance(Iy,this.editor):void 0}shouldShowHoverAt(e){var t;return((t=this.activeModel)===null||t===void 0?void 0:t.shouldShowHoverAt(e))||!1}shouldShowHoverAtViewZone(e){var t,i;return((i=(t=this.activeController.value)===null||t===void 0?void 0:t.widget)===null||i===void 0?void 0:i.shouldShowHoverAtViewZone(e))||!1}trigger(){var e;this.triggeredExplicitly=!0,this.activeController.value||this.updateModelController(),(e=this.activeModel)===null||e===void 0||e.triggerInlineCompletion()}commit(){var e;(e=this.activeModel)===null||e===void 0||e.commitInlineCompletion()}hide(){var e;(e=this.activeModel)===null||e===void 0||e.hideInlineCompletion()}showNextInlineCompletion(){var e;(e=this.activeModel)===null||e===void 0||e.showNextInlineCompletion()}showPreviousInlineCompletion(){var e;(e=this.activeModel)===null||e===void 0||e.showPreviousInlineCompletion()}hasMultipleInlineCompletions(){var e;return Mp(this,void 0,void 0,function*(){let t=yield(e=this.activeModel)===null||e===void 0?void 0:e.hasMultipleInlineCompletions();return t!==void 0?t:!1})}};Tt.inlineSuggestionVisible=new pe("inlineSuggestionVisible",!1,u("inlineSuggestionVisible","Whether an inline suggestion is visible"));Tt.inlineSuggestionHasIndentation=new pe("inlineSuggestionHasIndentation",!1,u("inlineSuggestionHasIndentation","Whether the inline suggestion starts with whitespace"));Tt.inlineSuggestionHasIndentationLessThanTabSize=new pe("inlineSuggestionHasIndentationLessThanTabSize",!0,u("inlineSuggestionHasIndentationLessThanTabSize","Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab"));Tt.ID="editor.contrib.ghostTextController";Tt=dT([Ey(1,le)],Tt);var hT=class{constructor(e){this.contextKeyService=e,this.inlineCompletionVisible=Tt.inlineSuggestionVisible.bindTo(this.contextKeyService),this.inlineCompletionSuggestsIndentation=Tt.inlineSuggestionHasIndentation.bindTo(this.contextKeyService),this.inlineCompletionSuggestsIndentationLessThanTabSize=Tt.inlineSuggestionHasIndentationLessThanTabSize.bindTo(this.contextKeyService)}},Iy=class extends z{constructor(e,t,i){super();this.editor=e,this.instantiationService=t,this.contextKeyService=i,this.contextKeys=new hT(this.contextKeyService),this.model=this._register(this.instantiationService.createInstance(Lp,this.editor)),this.widget=this._register(this.instantiationService.createInstance(Pp,this.editor,this.model)),this._register(We(()=>{this.contextKeys.inlineCompletionVisible.set(!1),this.contextKeys.inlineCompletionSuggestsIndentation.set(!1),this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(!0)})),this._register(this.model.onDidChange(()=>{this.updateContextKeys()})),this.updateContextKeys()}updateContextKeys(){var e;this.contextKeys.inlineCompletionVisible.set(((e=this.model.activeInlineCompletionsModel)===null||e===void 0?void 0:e.ghostText)!==void 0);let t=!1,i=!0,n=this.model.inlineCompletionsModel.ghostText;if(!!this.model.activeInlineCompletionsModel&&n&&n.parts.length>0){let{column:o,lines:r}=n.parts[0],a=r[0],l=this.editor.getModel().getLineIndentColumn(n.lineNumber);if(o<=l){let d=Vl(a);d===-1&&(d=a.length-1),t=d>0;let h=this.editor.getModel().getOptions().tabSize;i=ux.visibleColumnFromColumn(a,d+1,h)<h}}this.contextKeys.inlineCompletionSuggestsIndentation.set(t),this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(i)}};Iy=dT([Ey(1,le),Ey(2,ie)],Iy);var uT=ct.bindToContribution(Tt.get),ol=new uT({id:cp,precondition:Tt.inlineSuggestionVisible,handler(s){s.commit(),s.editor.focus()}});$(ol);Zt.registerKeybindingRule({primary:2,weight:200,id:ol.id,when:O.and(ol.precondition,S.tabMovesFocus.toNegated(),Tt.inlineSuggestionHasIndentationLessThanTabSize)});$(new uT({id:"editor.action.inlineSuggest.hide",precondition:Tt.inlineSuggestionVisible,kbOpts:{weight:100,primary:9},handler(s){s.hide()}}));var Dr=class extends F{constructor(){super({id:Dr.ID,label:u("action.inlineSuggest.showNext","Show Next Inline Suggestion"),alias:"Show Next Inline Suggestion",precondition:O.and(S.writable,Tt.inlineSuggestionVisible),kbOpts:{weight:100,primary:601}})}run(e,t){return Mp(this,void 0,void 0,function*(){let i=Tt.get(t);i&&(i.showNextInlineCompletion(),t.focus())})}};Dr.ID="editor.action.inlineSuggest.showNext";var Rr=class extends F{constructor(){super({id:Rr.ID,label:u("action.inlineSuggest.showPrevious","Show Previous Inline Suggestion"),alias:"Show Previous Inline Suggestion",precondition:O.and(S.writable,Tt.inlineSuggestionVisible),kbOpts:{weight:100,primary:599}})}run(e,t){return Mp(this,void 0,void 0,function*(){let i=Tt.get(t);i&&(i.showPreviousInlineCompletion(),t.focus())})}};Rr.ID="editor.action.inlineSuggest.showPrevious";var pT=class extends F{constructor(){super({id:"editor.action.inlineSuggest.trigger",label:u("action.inlineSuggest.trigger","Trigger Inline Suggestion"),alias:"Trigger Inline Suggestion",precondition:S.writable})}run(e,t){return Mp(this,void 0,void 0,function*(){let i=Tt.get(t);i&&i.trigger()})}};J(Tt.ID,Tt);I(pT);I(Dr);I(Rr);Q();ri();wt();Ee();qi();var tD=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},rl=function(s,e){return function(t,i){e(t,i,s)}},mT=class{constructor(e,t,i){this.owner=e,this.range=t,this.controller=i}isValidForHoverAnchor(e){return e.type===1&&this.range.startColumn<=e.range.startColumn&&this.range.endColumn>=e.range.endColumn}hasMultipleSuggestions(){return this.controller.hasMultipleInlineCompletions()}},Dp=class{constructor(e,t,i,n,o,r,a){this._editor=e,this._commandService=t,this._menuService=i,this._contextKeyService=n,this._languageService=o,this._openerService=r,this.accessibilityService=a}suggestHoverAnchor(e){let t=Tt.get(this._editor);if(!t)return null;let i=e.target;if(i.type===8){let n=i.detail;if(t.shouldShowHoverAtViewZone(n.viewZoneId))return new Es(1e3,this,b.fromPositions(n.positionBefore||n.position,n.positionBefore||n.position))}return i.type===7&&t.shouldShowHoverAt(i.range)?new Es(1e3,this,i.range):i.type===6&&i.detail.mightBeForeignElement&&t.shouldShowHoverAt(i.range)?new Es(1e3,this,i.range):null}computeSync(e,t){let i=Tt.get(this._editor);return i&&i.shouldShowHoverAt(e.range)?[new mT(this,e.range,i)]:[]}renderHoverParts(e,t){let i=new A,n=t[0];this.accessibilityService.isScreenReaderOptimized()&&this.renderScreenReaderText(e,n,i);let o=i.add(this._menuService.createMenu(se.InlineCompletionsActions,this._contextKeyService)),r=e.statusBar.addAction({label:u("showNextInlineSuggestion","Next"),commandId:Dr.ID,run:()=>this._commandService.executeCommand(Dr.ID)}),a=e.statusBar.addAction({label:u("showPreviousInlineSuggestion","Previous"),commandId:Rr.ID,run:()=>this._commandService.executeCommand(Rr.ID)});e.statusBar.addAction({label:u("acceptInlineSuggestion","Accept"),commandId:ol.id,run:()=>this._commandService.executeCommand(ol.id)});let l=[r,a];for(let c of l)c.setEnabled(!1);n.hasMultipleSuggestions().then(c=>{for(let d of l)d.setEnabled(c)});for(let[c,d]of o.getActions())for(let h of d)h instanceof mr&&e.statusBar.addAction({label:h.label,commandId:h.item.id,run:()=>this._commandService.executeCommand(h.item.id)});return i}renderScreenReaderText(e,t,i){var n,o;let r=W,a=r("div.hover-row.markdown-hover"),l=H(a,r("div.hover-contents")),c=i.add(new Ii({editor:this._editor},this._languageService,this._openerService)),d=p=>{i.add(c.onDidRenderAsync(()=>{l.className="hover-contents code-hover-contents",e.onContentsChanged()}));let m=u("inlineSuggestionFollows","Suggestion:"),f=i.add(c.render(new ai().appendText(m).appendCodeblock("text",p)));l.replaceChildren(f.element)},h=(o=(n=t.controller.activeModel)===null||n===void 0?void 0:n.inlineCompletionsModel)===null||o===void 0?void 0:o.ghostText;if(h){let p=this._editor.getModel().getLineContent(h.lineNumber);d(h.renderForScreenReader(p))}e.fragment.appendChild(a)}};Dp=tD([rl(1,dt),rl(2,Xn),rl(3,ie),rl(4,ft),rl(5,bt),rl(6,Oh)],Dp);Ee();Be();Ki();ke();xi();G();Pi();Ye();ue();jt();cu();rn();Ae();ss();G();Be();Ae();Vm();Ym();De();G();qi();mt();Ne();var iD=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},nD=function(s,e){return function(t,i){e(t,i,s)}},Rp=class extends z{constructor(e,t,i={},n){var o;super();this._link=t,this._enabled=!0,this.el=H(e,W("a.monaco-link",{tabIndex:(o=t.tabIndex)!==null&&o!==void 0?o:0,href:t.href,title:t.title},t.label)),this.el.setAttribute("role","button");let r=this._register(new cs(this.el,"click")),a=this._register(new cs(this.el,"keypress")),l=ht.chain(a.event).map(h=>new os(h)).filter(h=>h.keyCode===3).event,c=this._register(new cs(this.el,id.Tap)).event;this._register(_a.addTarget(this.el));let d=ht.any(r.event,l,c);this._register(d(h=>{!this.enabled||(an.stop(h,!0),(i==null?void 0:i.opener)?i.opener(this._link.href):n.open(this._link.href,{allowCommands:!0}))})),this.enabled=!0}get enabled(){return this._enabled}set enabled(e){e?(this.el.setAttribute("aria-disabled","false"),this.el.tabIndex=0,this.el.style.pointerEvents="auto",this.el.style.opacity="1",this.el.style.cursor="pointer",this._enabled=!1):(this.el.setAttribute("aria-disabled","true"),this.el.tabIndex=-1,this.el.style.pointerEvents="none",this.el.style.opacity="0.4",this.el.style.cursor="default",this._enabled=!0),this._enabled=e}};Rp=iD([nD(3,bt)],Rp);Me((s,e)=>{let t=s.getColor(gr);t&&e.addRule(`.monaco-link { color: ${t}; }`);let i=s.getColor(fr);i&&e.addRule(`.monaco-link:hover { color: ${i}; }`)});Ne();var gT=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},fT=function(s,e){return function(t,i){e(t,i,s)}},oD=26,Ap=class extends z{constructor(e,t){super();this._editor=e,this.instantiationService=t,this.banner=this._register(this.instantiationService.createInstance(ky))}hide(){this._editor.setBanner(null,0),this.banner.clear()}show(e){this.banner.show(Object.assign(Object.assign({},e),{onClose:()=>{this.hide(),e.onClose&&e.onClose()}})),this._editor.setBanner(this.banner.element,oD)}};Ap=gT([fT(1,le)],Ap);var ky=class extends z{constructor(e){super();this.instantiationService=e,this.markdownRenderer=this.instantiationService.createInstance(Ii,{}),this.element=W("div.editor-banner"),this.element.tabIndex=0}getAriaLabel(e){if(e.ariaLabel)return e.ariaLabel;if(typeof e.message=="string")return e.message}getBannerMessage(e){if(typeof e=="string"){let t=W("span");return t.innerText=e,t}return this.markdownRenderer.render(e).element}clear(){_i(this.element)}show(e){_i(this.element);let t=this.getAriaLabel(e);t&&this.element.setAttribute("aria-label",t);let i=H(this.element,W("div.icon-container"));i.setAttribute("aria-hidden","true"),e.icon&&i.appendChild(W(`div${ot.asCSSSelector(e.icon)}`));let n=H(this.element,W("div.message-container"));if(n.setAttribute("aria-hidden","true"),n.appendChild(this.getBannerMessage(e.message)),this.messageActionsContainer=H(this.element,W("div.message-actions-container")),e.actions)for(let r of e.actions)this._register(this.instantiationService.createInstance(Rp,this.messageActionsContainer,Object.assign(Object.assign({},r),{tabIndex:-1}),{}));let o=H(this.element,W("div.action-container"));this.actionBar=this._register(new hs(o)),this.actionBar.push(this._register(new _o("banner.close","Close Banner",ot.asClassName(du),!0,()=>{typeof e.onClose=="function"&&e.onClose()})),{icon:!0,label:!1}),this.actionBar.setFocusable(!1)}};ky=gT([fT(0,le)],ky);Q();kn();Be();qi();var My=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},sl=function(s,e){return function(t,i){e(t,i,s)}},$t=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},rD=Rt("extensions-warning-message",K.warning,u("warningIcon","Icon shown with a warning message in the extensions editor.")),al=class extends z{constructor(e,t,i,n){super();this._editor=e,this._editorWorkerService=t,this._workspaceTrustService=i,this._highlighter=null,this._bannerClosed=!1,this._updateState=o=>{if(o&&o.hasMore){if(this._bannerClosed)return;let r=Math.max(o.ambiguousCharacterCount,o.nonBasicAsciiCharacterCount,o.invisibleCharacterCount),a;if(o.nonBasicAsciiCharacterCount>=r)a={message:u("unicodeHighlighting.thisDocumentHasManyNonBasicAsciiUnicodeCharacters","This document contains many non-basic ASCII unicode characters"),command:new Ns};else if(o.ambiguousCharacterCount>=r)a={message:u("unicodeHighlighting.thisDocumentHasManyAmbiguousUnicodeCharacters","This document contains many ambiguous unicode characters"),command:new jo};else if(o.invisibleCharacterCount>=r)a={message:u("unicodeHighlighting.thisDocumentHasManyInvisibleUnicodeCharacters","This document contains many invisible unicode characters"),command:new Fs};else throw new Error("Unreachable");this._bannerController.show({id:"unicodeHighlightBanner",message:a.message,icon:rD,actions:[{label:a.command.shortLabel,href:`command:${a.command.id}`}],onClose:()=>{this._bannerClosed=!0}})}else this._bannerController.hide()},this._bannerController=this._register(n.createInstance(Ap,e)),this._register(this._editor.onDidChangeModel(()=>{this._bannerClosed=!1,this._updateHighlighter()})),this._options=e.getOption(113),this._register(i.onDidChangeTrust(o=>{this._updateHighlighter()})),this._register(e.onDidChangeConfiguration(o=>{o.hasChanged(113)&&(this._options=e.getOption(113),this._updateHighlighter())})),this._updateHighlighter()}dispose(){this._highlighter&&(this._highlighter.dispose(),this._highlighter=null),super.dispose()}_updateHighlighter(){if(this._updateState(null),this._highlighter&&(this._highlighter.dispose(),this._highlighter=null),!this._editor.hasModel())return;let e=sD(this._workspaceTrustService.isWorkspaceTrusted(),this._options);if([e.nonBasicASCII,e.ambiguousCharacters,e.invisibleCharacters].every(i=>i===!1))return;let t={nonBasicASCII:e.nonBasicASCII,ambiguousCharacters:e.ambiguousCharacters,invisibleCharacters:e.invisibleCharacters,includeComments:e.includeComments,includeStrings:e.includeStrings,allowedCodePoints:Object.keys(e.allowedCharacters).map(i=>i.codePointAt(0)),allowedLocales:Object.keys(e.allowedLocales).map(i=>i==="_os"?new Intl.NumberFormat().resolvedOptions().locale:i==="_vscode"?rS:i)};this._editorWorkerService.canComputeUnicodeHighlights(this._editor.getModel().uri)?this._highlighter=new Ly(this._editor,t,this._updateState,this._editorWorkerService):this._highlighter=new bT(this._editor,t,this._updateState)}getDecorationInfo(e){return this._highlighter?this._highlighter.getDecorationInfo(e):null}};al.ID="editor.contrib.unicodeHighlighter";al=My([sl(1,Lo),sl(2,Vx),sl(3,le)],al);function sD(s,e){return{nonBasicASCII:e.nonBasicASCII===gh?!s:e.nonBasicASCII,ambiguousCharacters:e.ambiguousCharacters,invisibleCharacters:e.invisibleCharacters,includeComments:e.includeComments===gh?!s:e.includeComments,includeStrings:e.includeStrings===gh?!s:e.includeStrings,allowedCharacters:e.allowedCharacters,allowedLocales:e.allowedLocales}}var Ly=class extends z{constructor(e,t,i,n){super();this._editor=e,this._options=t,this._updateState=i,this._editorWorkerService=n,this._model=this._editor.getModel(),this._decorationIds=new Set,this._updateSoon=this._register(new $e(()=>this._update(),250)),this._register(this._editor.onDidChangeModelContent(()=>{this._updateSoon.schedule()})),this._updateSoon.schedule()}dispose(){this._decorationIds=new Set(this._model.deltaDecorations(Array.from(this._decorationIds),[])),super.dispose()}_update(){if(this._model.isDisposed())return;if(!this._model.mightContainNonBasicASCII()){this._decorationIds=new Set(this._editor.deltaDecorations(Array.from(this._decorationIds),[]));return}let e=this._model.getVersionId();this._editorWorkerService.computedUnicodeHighlights(this._model.uri,this._options).then(t=>{if(this._model.isDisposed()||this._model.getVersionId()!==e)return;this._updateState(t);let i=[];if(!t.hasMore)for(let n of t.ranges)i.push({range:n,options:As.instance.getDecorationFromOptions(this._options)});this._decorationIds=new Set(this._editor.deltaDecorations(Array.from(this._decorationIds),i))})}getDecorationInfo(e){if(!this._decorationIds.has(e))return null;let t=this._editor.getModel(),i=t.getDecorationRange(e),n={range:i,options:As.instance.getDecorationFromOptions(this._options),id:e,ownerId:0};if(!ng(t,n))return null;let o=t.getValueInRange(i);return{reason:ST(o,this._options),inComment:og(t,n),inString:rg(t,n)}}};Ly=My([sl(3,Lo)],Ly);var bT=class extends z{constructor(e,t,i){super();this._editor=e,this._options=t,this._updateState=i,this._model=this._editor.getModel(),this._decorationIds=new Set,this._updateSoon=this._register(new $e(()=>this._update(),250)),this._register(this._editor.onDidLayoutChange(()=>{this._updateSoon.schedule()})),this._register(this._editor.onDidScrollChange(()=>{this._updateSoon.schedule()})),this._register(this._editor.onDidChangeHiddenAreas(()=>{this._updateSoon.schedule()})),this._register(this._editor.onDidChangeModelContent(()=>{this._updateSoon.schedule()})),this._updateSoon.schedule()}dispose(){this._decorationIds=new Set(this._model.deltaDecorations(Array.from(this._decorationIds),[])),super.dispose()}_update(){if(this._model.isDisposed())return;if(!this._model.mightContainNonBasicASCII()){this._decorationIds=new Set(this._editor.deltaDecorations(Array.from(this._decorationIds),[]));return}let e=this._editor.getVisibleRanges(),t=[],i={ranges:[],ambiguousCharacterCount:0,invisibleCharacterCount:0,nonBasicAsciiCharacterCount:0,hasMore:!1};for(let n of e){let o=Hm.computeUnicodeHighlights(this._model,this._options,n);for(let r of o.ranges)i.ranges.push(r);i.ambiguousCharacterCount+=i.ambiguousCharacterCount,i.invisibleCharacterCount+=i.invisibleCharacterCount,i.nonBasicAsciiCharacterCount+=i.nonBasicAsciiCharacterCount,i.hasMore=i.hasMore||o.hasMore}if(!i.hasMore)for(let n of i.ranges)t.push({range:n,options:As.instance.getDecorationFromOptions(this._options)});this._updateState(i),this._decorationIds=new Set(this._editor.deltaDecorations(Array.from(this._decorationIds),t))}getDecorationInfo(e){if(!this._decorationIds.has(e))return null;let t=this._editor.getModel(),i=t.getDecorationRange(e),n=t.getValueInRange(i),o={range:i,options:As.instance.getDecorationFromOptions(this._options),id:e,ownerId:0};return ng(t,o)?{reason:ST(n,this._options),inComment:og(t,o),inString:rg(t,o)}:null}},Fp=class{constructor(e,t,i){this._editor=e,this._languageService=t,this._openerService=i}computeSync(e,t){if(!this._editor.hasModel()||e.type!==1)return[];let i=this._editor.getModel(),n=this._editor.getContribution(al.ID);if(!n)return[];let o=[],r=300;for(let a of t){let l=n.getDecorationInfo(a.id);if(!l)continue;let d=i.getValueInRange(a.range).codePointAt(0),h=yT(d),p;switch(l.reason.kind){case 0:p=u("unicodeHighlight.characterIsAmbiguous","The character {0} could be confused with the character {1}, which is more common in source code.",h,yT(l.reason.confusableWith.codePointAt(0)));break;case 1:p=u("unicodeHighlight.characterIsInvisible","The character {0} is invisible.",h);break;case 2:p=u("unicodeHighlight.characterIsNonBasicAscii","The character {0} is not a basic ASCII character.",h);break}let m={codePoint:d,reason:l.reason,inComment:l.inComment,inString:l.inString},f=u("unicodeHighlight.adjustSettings","Adjust settings"),v=[{value:`${p} [${f}](command:${ll.ID}?${encodeURIComponent(JSON.stringify(m))})`,isTrusted:!0}];o.push(new Fn(this,a.range,v,r++))}return o}renderHoverParts(e,t){return Gf(e,t,this._editor,this._languageService,this._openerService)}};Fp=My([sl(1,ft),sl(2,bt)],Fp);function Py(s){return`U+${s.toString(16).padStart(4,"0")}`}function yT(s){let e=`\`${Py(s)}\``;return Mm.isInvisibleCharacter(s)||(e+=` "${`${aD(s)}`}"`),e}function aD(s){return s===96?"`` ` ``":"`"+String.fromCodePoint(s)+"`"}function ST(s,e){return Hm.computeUnicodeHighlightReason(s,e)}var As=class{constructor(){this.map=new Map}getDecorationFromOptions(e){return this.getDecoration(!e.includeComments,!e.includeStrings)}getDecoration(e,t){let i=`${e}${t}`,n=this.map.get(i);return n||(n=xe.createDynamic({description:"unicode-highlight",stickiness:1,className:"unicode-highlight",showIfCollapsed:!0,overviewRuler:null,minimap:null,hideInCommentTokens:e,hideInStringTokens:t}),this.map.set(i,n)),n}};As.instance=new As;var vT=class extends F{constructor(){super({id:jo.ID,label:u("action.unicodeHighlight.disableHighlightingInComments","Disable highlighting of characters in comments"),alias:"Disable highlighting of characters in comments",precondition:void 0});this.shortLabel=u("unicodeHighlight.disableHighlightingInComments.shortLabel","Disable Highlight In Comments")}run(e,t,i){return $t(this,void 0,void 0,function*(){let n=e==null?void 0:e.get(it);n&&this.runAction(n)})}runAction(e){return $t(this,void 0,void 0,function*(){yield e.updateValue(Gn.includeComments,!1,1)})}},xT=class extends F{constructor(){super({id:jo.ID,label:u("action.unicodeHighlight.disableHighlightingInStrings","Disable highlighting of characters in strings"),alias:"Disable highlighting of characters in strings",precondition:void 0});this.shortLabel=u("unicodeHighlight.disableHighlightingInStrings.shortLabel","Disable Highlight In Strings")}run(e,t,i){return $t(this,void 0,void 0,function*(){let n=e==null?void 0:e.get(it);n&&this.runAction(n)})}runAction(e){return $t(this,void 0,void 0,function*(){yield e.updateValue(Gn.includeStrings,!1,1)})}},jo=class extends F{constructor(){super({id:jo.ID,label:u("action.unicodeHighlight.disableHighlightingOfAmbiguousCharacters","Disable highlighting of ambiguous characters"),alias:"Disable highlighting of ambiguous characters",precondition:void 0});this.shortLabel=u("unicodeHighlight.disableHighlightingOfAmbiguousCharacters.shortLabel","Disable Ambiguous Highlight")}run(e,t,i){return $t(this,void 0,void 0,function*(){let n=e==null?void 0:e.get(it);n&&this.runAction(n)})}runAction(e){return $t(this,void 0,void 0,function*(){yield e.updateValue(Gn.ambiguousCharacters,!1,1)})}};jo.ID="editor.action.unicodeHighlight.disableHighlightingOfAmbiguousCharacters";var Fs=class extends F{constructor(){super({id:Fs.ID,label:u("action.unicodeHighlight.disableHighlightingOfInvisibleCharacters","Disable highlighting of invisible characters"),alias:"Disable highlighting of invisible characters",precondition:void 0});this.shortLabel=u("unicodeHighlight.disableHighlightingOfInvisibleCharacters.shortLabel","Disable Invisible Highlight")}run(e,t,i){return $t(this,void 0,void 0,function*(){let n=e==null?void 0:e.get(it);n&&this.runAction(n)})}runAction(e){return $t(this,void 0,void 0,function*(){yield e.updateValue(Gn.invisibleCharacters,!1,1)})}};Fs.ID="editor.action.unicodeHighlight.disableHighlightingOfInvisibleCharacters";var Ns=class extends F{constructor(){super({id:Ns.ID,label:u("action.unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters","Disable highlighting of non basic ASCII characters"),alias:"Disable highlighting of non basic ASCII characters",precondition:void 0});this.shortLabel=u("unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters.shortLabel","Disable Non ASCII Highlight")}run(e,t,i){return $t(this,void 0,void 0,function*(){let n=e==null?void 0:e.get(it);n&&this.runAction(n)})}runAction(e){return $t(this,void 0,void 0,function*(){yield e.updateValue(Gn.nonBasicASCII,!1,1)})}};Ns.ID="editor.action.unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters";var ll=class extends F{constructor(){super({id:ll.ID,label:u("action.unicodeHighlight.showExcludeOptions","Show Exclude Options"),alias:"Show Exclude Options",precondition:void 0})}run(e,t,i){return $t(this,void 0,void 0,function*(){let{codePoint:n,reason:o,inString:r,inComment:a}=i,l=String.fromCodePoint(n),c=e.get(Wi),d=e.get(it);function h(f){return Mm.isInvisibleCharacter(f)?u("unicodeHighlight.excludeInvisibleCharFromBeingHighlighted","Exclude {0} (invisible character) from being highlighted",Py(f)):u("unicodeHighlight.excludeCharFromBeingHighlighted","Exclude {0} from being highlighted",`${Py(f)} "${l}"`)}let p=[];if(o.kind===0)for(let f of o.notAmbiguousInLocales)p.push({label:u("unicodeHighlight.allowCommonCharactersInLanguage",'Allow unicode characters that are more common in the language "{0}".',f),run:()=>$t(this,void 0,void 0,function*(){dD(d,[f])})});if(p.push({label:h(n),run:()=>lD(d,[n])}),a){let f=new vT;p.push({label:f.label,run:()=>$t(this,void 0,void 0,function*(){return f.runAction(d)})})}else if(r){let f=new xT;p.push({label:f.label,run:()=>$t(this,void 0,void 0,function*(){return f.runAction(d)})})}if(o.kind===0){let f=new jo;p.push({label:f.label,run:()=>$t(this,void 0,void 0,function*(){return f.runAction(d)})})}else if(o.kind===1){let f=new Fs;p.push({label:f.label,run:()=>$t(this,void 0,void 0,function*(){return f.runAction(d)})})}else if(o.kind===2){let f=new Ns;p.push({label:f.label,run:()=>$t(this,void 0,void 0,function*(){return f.runAction(d)})})}else cD(o);let m=yield c.pick(p,{title:u("unicodeHighlight.configureUnicodeHighlightOptions","Configure Unicode Highlight Options")});m&&(yield m.run())})}};ll.ID="editor.action.unicodeHighlight.showExcludeOptions";function lD(s,e){return $t(this,void 0,void 0,function*(){let t=s.getValue(Gn.allowedCharacters),i;typeof t=="object"&&t?i=t:i={};for(let n of e)i[String.fromCodePoint(n)]=!0;yield s.updateValue(Gn.allowedCharacters,i,1)})}function dD(s,e){var t;return $t(this,void 0,void 0,function*(){let i=(t=s.inspect(Gn.allowedLocales).user)===null||t===void 0?void 0:t.value,n;typeof i=="object"&&i?n=Object.assign({},i):n={};for(let o of e)n[o]=!0;yield s.updateValue(Gn.allowedLocales,n,1)})}function cD(s){throw new Error(`Unexpected value: ${s}`)}I(jo);I(Fs);I(Ns);I(ll);J(al.ID,al);ke();ke();tt();Re();jt();rn();Co();ke();ut();Le();G();ga();qt();Xt();ue();ee();Re();ca();jt();md();Co();Le();G();tt();ee();Re();var Np=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},zp=class{constructor(e,t){this.range=e,this.direction=t}},Op=class{constructor(e,t,i){this.hint=e,this.anchor=t,this.provider=i,this._isResolved=!1}with(e){let t=new Op(this.hint,e.anchor,this.provider);return t._isResolved=this._isResolved,t._currentResolve=this._currentResolve,t}resolve(e){return Np(this,void 0,void 0,function*(){if(typeof this.provider.resolveInlayHint=="function"){if(this._currentResolve)return yield this._currentResolve,e.isCancellationRequested?void 0:this.resolve(e);this._isResolved||(this._currentResolve=this._doResolve(e).finally(()=>this._currentResolve=void 0)),yield this._currentResolve}})}_doResolve(e){var t,i;return Np(this,void 0,void 0,function*(){try{let n=yield Promise.resolve(this.provider.resolveInlayHint(this.hint,e));this.hint.tooltip=(t=n==null?void 0:n.tooltip)!==null&&t!==void 0?t:this.hint.tooltip,this.hint.label=(i=n==null?void 0:n.label)!==null&&i!==void 0?i:this.hint.label,this._isResolved=!0}catch(n){Ue(n),this._isResolved=!1}})}},zs=class{constructor(e,t,i){this._disposables=new A,this.ranges=e,this.provider=new Set;let n=[];for(let[o,r]of t){this._disposables.add(o),this.provider.add(r);for(let a of o.hints){let l=i.validatePosition(a.position),c="before",d=zs._getRangeAtPosition(i,l),h;d.getStartPosition().isBefore(l)?(h=b.fromPositions(d.getStartPosition(),l),c="after"):(h=b.fromPositions(l,d.getEndPosition()),c="before"),n.push(new Op(a,new zp(h,c),r))}}this.items=n.sort((o,r)=>U.compare(o.hint.position,r.hint.position))}static create(e,t,i){return Np(this,void 0,void 0,function*(){let n=[],o=Sa.ordered(e).reverse().map(r=>t.map(a=>Np(this,void 0,void 0,function*(){try{let l=yield r.provideInlayHints(e,a,i);(l==null?void 0:l.hints.length)&&n.push([l,r])}catch(l){Ue(l)}})));if(yield Promise.all(o.flat()),i.isCancellationRequested||e.isDisposed())throw new fS;return new zs(t,n,e)})}dispose(){this._disposables.dispose()}static _getRangeAtPosition(e,t){let i=t.lineNumber,n=e.getWordAtPosition(t);if(n)return new b(i,n.startColumn,i,n.endColumn);e.tokenizeIfCheap(i);let o=e.getLineTokens(i),r=t.column-1,a=o.findTokenIndexAtOffset(r),l=o.getStartOffset(a),c=o.getEndOffset(a);return c-l===1&&(l===r&&a>1?(l=o.getStartOffset(a-1),c=o.getEndOffset(a-1)):c===r&&a<o.getCount()-1&&(l=o.getStartOffset(a+1),c=o.getEndOffset(a+1))),new b(i,l+1,i,c+1)}};Ae();ss();ut();ue();ee();Co();ri();wt();Ee();Be();var dc=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})};function CT(s,e,t,i){var n;return dc(this,void 0,void 0,function*(){let o=s.get(Gt),r=s.get(Po),a=s.get(dt),l=s.get(le),c=s.get(Ze);if(yield i.item.resolve(ge.None),!i.part.location)return;let d=i.part.location,h=[],p=new Set(Oi.getMenuItems(se.EditorContext).map(f=>wv(f)?f.command.id:""));for(let f of Ev.getEditorActions())f instanceof zo&&p.has(f.id)&&h.push(new _o(f.id,f.label,void 0,!0,()=>dc(this,void 0,void 0,function*(){let v=yield o.createModelReference(d.uri);try{yield l.invokeFunction(f.run.bind(f),e,new Ts(v.object.textEditorModel,b.getStartPosition(d.range)))}finally{v.dispose()}})));if(i.part.command){let{command:f}=i.part;h.push(new qn),h.push(new _o(f.id,f.title,void 0,!0,()=>dc(this,void 0,void 0,function*(){var v;try{yield a.executeCommand(f.id,...(v=f.arguments)!==null&&v!==void 0?v:[])}catch(_){c.notify({severity:au.Error,source:i.item.provider.displayName,message:_})}})))}let m=e.getOption(115);r.showContextMenu({domForShadowRoot:m&&(n=e.getDomNode())!==null&&n!==void 0?n:void 0,getAnchor:()=>{let f=ni(t);return{x:f.left,y:f.top+f.height+8}},getActions:()=>h,onHide:()=>{e.focus()},autoSelectFirstItem:!0})})}function _T(s,e,t,i){return dc(this,void 0,void 0,function*(){let o=yield s.get(Gt).createModelReference(i.uri);yield t.invokeWithinContext(r=>dc(this,void 0,void 0,function*(){let a=e.hasSideBySideModifier,l=r.get(ie),c=Ot.inPeekEditor.getValue(l),d=!a&&t.getOption(78)&&!c;return new kr({openToSide:a,openInPeek:d,muteMessage:!0},{alias:"",label:"",id:"",precondition:void 0}).run(r,t,{model:o.object.textEditorModel,position:b.getStartPosition(i.range)})})),o.dispose()})}wt();ns();Be();mt();Ne();var hD=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},cc=function(s,e){return function(t,i){e(t,i,s)}},Hp=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},hc=class{constructor(){this._entries=new Un(50)}get(e){let t=hc._key(e);return this._entries.get(t)}set(e,t){let i=hc._key(e);this._entries.set(i,t)}static _key(e){return`${e.uri.toString()}/${e.getVersionId()}`}},wT=Fi("IInlayHintsCache");Ni(wT,hc,!0);var uc=class{constructor(e,t){this.item=e,this.index=t}get part(){let e=this.item.hint.label;return typeof e=="string"?{label:e}:e[this.index]}},Ar=class Dy{constructor(e,t,i,n,o,r){this._editor=e,this._inlayHintsCache=i,this._commandService=n,this._notificationService=o,this._instaService=r,this._disposables=new A,this._sessionDisposables=new A,this._decorationsMetadata=new Map,this._ruleFactory=new Jh(this._editor),this._debounceInfo=t.for(Sa,"InlayHint",{min:25}),this._disposables.add(Sa.onDidChange(()=>this._update())),this._disposables.add(e.onDidChangeModel(()=>this._update())),this._disposables.add(e.onDidChangeModelLanguage(()=>this._update())),this._disposables.add(e.onDidChangeConfiguration(a=>{a.hasChanged(127)&&this._update()})),this._update()}static get(e){var t;return(t=e.getContribution(Dy.ID))!==null&&t!==void 0?t:void 0}dispose(){this._sessionDisposables.dispose(),this._removeAllDecorations(),this._disposables.dispose()}_update(){if(this._sessionDisposables.clear(),this._removeAllDecorations(),!this._editor.getOption(127).enabled)return;let e=this._editor.getModel();if(!e||!Sa.has(e))return;let t=this._inlayHintsCache.get(e);t&&this._updateHintsDecorators([e.getFullModelRange()],t),this._sessionDisposables.add(We(()=>{e.isDisposed()||this._cacheHintsForFastRestore(e)}));let i,n=new Set,o=new $e(()=>Hp(this,void 0,void 0,function*(){let r=Date.now();i==null||i.dispose(!0),i=new Ft;let a=e.onWillDispose(()=>i==null?void 0:i.cancel());try{let l=i.token,c=yield zs.create(e,this._getHintsRanges(),l);if(o.delay=this._debounceInfo.update(e,Date.now()-r),l.isCancellationRequested){c.dispose();return}for(let d of c.provider)typeof d.onDidChangeInlayHints=="function"&&!n.has(d)&&(n.add(d),this._sessionDisposables.add(d.onDidChangeInlayHints(()=>{o.isScheduled()||o.schedule()})));this._sessionDisposables.add(c),this._updateHintsDecorators(c.ranges,c.items),this._cacheHintsForFastRestore(e)}catch(l){de(l)}finally{i.dispose(),a.dispose()}}),this._debounceInfo.get(e));this._sessionDisposables.add(o),this._sessionDisposables.add(We(()=>i==null?void 0:i.dispose(!0))),o.schedule(0),this._sessionDisposables.add(this._editor.onDidScrollChange(r=>{(r.scrollTopChanged||!o.isScheduled())&&o.schedule()})),this._sessionDisposables.add(this._editor.onDidChangeModelContent(r=>{let a=Math.max(o.delay,1250);o.schedule(a)})),this._sessionDisposables.add(this._installLinkGesture()),this._sessionDisposables.add(this._installContextMenu())}_installLinkGesture(){let e=()=>{},t=new vs(this._editor);return t.onMouseMoveOrRelevantKeyDown(i=>{let[n]=i,o=this._getInlayHintLabelPart(n),r=this._editor.getModel();if(!o||!n.hasTriggerModifier||!r){e();return}if(n.hasTriggerModifier&&(o.part.command||o.part.location)){let a=new Ft;o.item.resolve(a.token),this._activeInlayHintPart=o;let l=this._activeInlayHintPart.item.hint.position.lineNumber,c=new b(l,1,l,r.getLineMaxColumn(l)),d=new Set;for(let h of this._decorationsMetadata.values())c.containsRange(h.item.anchor.range)&&d.add(h.item);this._updateHintsDecorators([c],Array.from(d)),e=()=>{a.dispose(!0),this._activeInlayHintPart=void 0,this._updateHintsDecorators([c],Array.from(d))}}}),t.onCancel(e),t.onExecute(i=>Hp(this,void 0,void 0,function*(){var n;let o=this._getInlayHintLabelPart(i);if(o){let r=o.part;if(r.location)this._instaService.invokeFunction(_T,i,this._editor,r.location);else if(BS.is(r.command))try{yield this._commandService.executeCommand(r.command.id,...(n=r.command.arguments)!==null&&n!==void 0?n:[])}catch(a){this._notificationService.notify({severity:au.Error,source:o.item.provider.displayName,message:a})}}})),t}_installContextMenu(){return this._editor.onContextMenu(e=>Hp(this,void 0,void 0,function*(){if(!(e.event.target instanceof HTMLElement))return;let t=this._getInlayHintLabelPart(e);t&&(yield this._instaService.invokeFunction(CT,this._editor,e.event.target,t))}))}_getInlayHintLabelPart(e){var t;if(e.target.type!==6)return;let i=(t=e.target.detail.injectedText)===null||t===void 0?void 0:t.options;if(i instanceof nu&&(i==null?void 0:i.attachedData)instanceof uc)return i.attachedData}_cacheHintsForFastRestore(e){let t=new Map;for(let[i,n]of this._decorationsMetadata){if(t.has(n.item))continue;let o=n.item,r=e.getDecorationRange(i);if(r){let a=new zp(r,n.item.anchor.direction);o=n.item.with({anchor:a})}t.set(n.item,o)}this._inlayHintsCache.set(e,Array.from(t.values()))}_getHintsRanges(){let t=this._editor.getModel(),i=this._editor.getVisibleRangesPlusViewportAboveBelow(),n=[];for(let o of i.sort(b.compareRangesUsingStarts)){let r=t.validateRange(new b(o.startLineNumber-30,o.startColumn,o.endLineNumber+30,o.endColumn));n.length===0||!b.areIntersectingOrTouching(n[n.length-1],r)?n.push(r):n[n.length-1]=b.plusRange(n[n.length-1],r)}return n}_updateHintsDecorators(e,t){var i,n;let o=[],r=(m,f,v,_,w)=>{o.push({item:m,classNameRef:f,decoration:{range:m.anchor.range,options:{description:"InlayHint",showIfCollapsed:m.anchor.range.isEmpty(),collapseOnReplaceEdit:!m.anchor.range.isEmpty(),stickiness:0,[m.anchor.direction]:{content:v,inlineClassNameAffectsLetterSpacing:!0,inlineClassName:f.className,cursorStops:_,attachedData:w}}}})},a=(m,f)=>{let v=this._ruleFactory.createClassNameRef({width:`${l/3|0}px`,display:"inline-block"});r(m,v,"\u200A",f?Bl.Right:Bl.None)},{fontSize:l,fontFamily:c}=this._getLayoutInfo(),d="--code-editorInlayHintsFontFamily";this._editor.getContainerDomNode().style.setProperty(d,c);for(let m of t){m.hint.paddingLeft&&a(m,!1);let f=typeof m.hint.label=="string"?[{label:m.hint.label}]:m.hint.label;for(let v=0;v<f.length;v++){let _=f[v],w=v===0,R=v===f.length-1,P={fontSize:`${l}px`,fontFamily:`var(${d}), ${lr.fontFamily}`,verticalAlign:"middle"};this._fillInColors(P,m.hint),(_.command||_.location)&&((i=this._activeInlayHintPart)===null||i===void 0?void 0:i.item)===m&&this._activeInlayHintPart.index===v&&(P.textDecoration="underline",P.cursor="pointer",P.color=nt(La)),w&&R?(P.padding=`1px ${Math.max(1,l/4)|0}px`,P.borderRadius=`${l/4|0}px`):w?(P.padding=`1px 0 1px ${Math.max(1,l/4)|0}px`,P.borderRadius=`${l/4|0}px 0 0 ${l/4|0}px`):R?(P.padding=`1px ${Math.max(1,l/4)|0}px 1px 0`,P.borderRadius=`0 ${l/4|0}px ${l/4|0}px 0`):P.padding="1px 0 1px 0",r(m,this._ruleFactory.createClassNameRef(P),uD(_.label),R&&!m.hint.paddingRight?Bl.Right:Bl.None,new uc(m,v))}if(m.hint.paddingRight&&a(m,!0),o.length>Dy._MAX_DECORATORS)break}let h=[];for(let m of e)for(let{id:f}of(n=this._editor.getDecorationsInRange(m))!==null&&n!==void 0?n:[]){let v=this._decorationsMetadata.get(f);v&&(h.push(f),v.classNameRef.dispose(),this._decorationsMetadata.delete(f))}let p=this._editor.deltaDecorations(h,o.map(m=>m.decoration));for(let m=0;m<p.length;m++){let f=o[m];this._decorationsMetadata.set(p[m],{item:f.item,classNameRef:f.classNameRef})}}_fillInColors(e,t){t.kind===Dm.Parameter?(e.backgroundColor=nt(rx),e.color=nt(ox)):t.kind===Dm.Type?(e.backgroundColor=nt(nx),e.color=nt(ix)):(e.backgroundColor=nt(tx),e.color=nt(ex))}_getLayoutInfo(){let e=this._editor.getOption(127),t=this._editor.getOption(46),i=e.fontSize;(!i||i<5||i>t)&&(i=t*.9|0);let n=e.fontFamily||this._editor.getOption(43);return{fontSize:i,fontFamily:n}}_removeAllDecorations(){this._editor.deltaDecorations(Array.from(this._decorationsMetadata.keys()),[]);for(let e of this._decorationsMetadata.values())e.classNameRef.dispose();this._decorationsMetadata.clear()}};Ar.ID="editor.contrib.InlayHints";Ar._MAX_DECORATORS=1500;Ar=hD([cc(1,Qn),cc(2,wT),cc(3,dt),cc(4,Ze),cc(5,le)],Ar);function uD(s){let e="\xA0";return s.replace(/[ \t]/g,e)}J(Ar.ID,Ar);Pe.registerCommand("_executeInlayHintProvider",(s,...e)=>Hp(void 0,void 0,void 0,function*(){let[t,i]=e;qe(_e.isUri(t)),qe(b.isIRange(i));let n=yield s.get(Gt).createModelReference(t);try{let o=yield zs.create(n.object.textEditorModel,[b.lift(i)],ge.None),r=o.items.map(a=>a.hint);return setTimeout(()=>o.dispose(),0),r}finally{n.dispose()}}));kn();qi();var pD=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Wp=function(s,e){return function(t,i){e(t,i,s)}},TT=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},mD=function(s){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=s[Symbol.asyncIterator],t;return e?e.call(s):(s=typeof __values=="function"?__values(s):s[Symbol.iterator](),t={},i("next"),i("throw"),i("return"),t[Symbol.asyncIterator]=function(){return this},t);function i(o){t[o]=s[o]&&function(r){return new Promise(function(a,l){r=s[o](r),n(a,l,r.done,r.value)})}}function n(o,r,a,l){Promise.resolve(l).then(function(c){o({value:c,done:a})},r)}},Ry=class extends Es{constructor(e,t){super(10,t,e.item.anchor.range);this.part=e}},Bp=class extends Ka{constructor(e,t,i,n,o){super(e,t,i,n);this._resolverService=o}suggestHoverAnchor(e){var t;if(!Ar.get(this._editor)||e.target.type!==6)return null;let n=(t=e.target.detail.injectedText)===null||t===void 0?void 0:t.options;return n instanceof nu&&n.attachedData instanceof uc?new Ry(n.attachedData,this):null}computeSync(){return[]}computeAsync(e,t,i){return e instanceof Ry?new Si(n=>TT(this,void 0,void 0,function*(){var o,r;let{part:a}=e;if(yield a.item.resolve(i),i.isCancellationRequested)return;let l;typeof a.item.hint.tooltip=="string"?l=new ai().appendText(a.item.hint.tooltip):a.item.hint.tooltip&&(l=a.item.hint.tooltip),l&&n.emitOne(new Fn(this,e.range,[l],0));let c;typeof a.part.tooltip=="string"?c=new ai().appendText(a.part.tooltip):a.part.tooltip&&(c=a.part.tooltip),c&&n.emitOne(new Fn(this,e.range,[c],1));let d=yield this._resolveInlayHintLabelPartHover(a,i);try{for(var h=mD(d),p;p=yield h.next(),!p.done;){let m=p.value;n.emitOne(m)}}catch(m){o={error:m}}finally{try{p&&!p.done&&(r=h.return)&&(yield r.call(h))}finally{if(o)throw o.error}}})):Si.EMPTY}_resolveInlayHintLabelPartHover(e,t){return TT(this,void 0,void 0,function*(){if(!e.part.location)return Si.EMPTY;let{uri:i,range:n}=e.part.location,o=yield this._resolverService.createModelReference(i);try{let r=o.object.textEditorModel;return ba.has(r)?Yd(r,new U(n.startLineNumber,n.startColumn),t).filter(a=>!_r(a.hover.contents)).map(a=>new Fn(this,e.item.anchor.range,a.hover.contents,2+a.ordinal)):Si.EMPTY}finally{o.dispose()}})}};Bp=pD([Wp(1,ft),Wp(2,bt),Wp(3,it),Wp(4,Gt)],Bp);He();De();var Fy=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Vp=function(s,e){return function(t,i){e(t,i,s)}},ET=W,pc=class IT extends z{constructor(e,t,i){super();this._editor=e,this._instantiationService=t,this._keybindingService=i,this._participants=[this._instantiationService.createInstance(tp,this._editor),this._instantiationService.createInstance(Ka,this._editor),this._instantiationService.createInstance(Dp,this._editor),this._instantiationService.createInstance(Fp,this._editor),this._instantiationService.createInstance(dp,this._editor),this._instantiationService.createInstance(Bp,this._editor)],this._widget=this._register(this._instantiationService.createInstance(Fr,this._editor)),this._decorationsChangerListener=this._register(new kT(this._editor)),this._computer=new mc(this._editor,this._participants),this._hoverOperation=this._register(new $d(this._editor,this._computer)),this._messages=[],this._messagesAreComplete=!1,this._register(this._hoverOperation.onResult(n=>{this._withResult(n.value,n.isComplete,n.hasLoadingMessage)})),this._register(this._decorationsChangerListener.onDidChangeModelDecorations(()=>this._onModelDecorationsChanged())),this._register(zi(this._widget.getDomNode(),"keydown",n=>{n.equals(9)&&this.hide()})),this._register(va.onDidChange(()=>{this._widget.position&&this._computer.anchor&&this._messages.length>0&&(this._widget.clear(),this._renderMessages(this._computer.anchor,this._messages))}))}_onModelDecorationsChanged(){this._widget.position&&(this._hoverOperation.cancel(),this._widget.colorPicker||this._hoverOperation.start(0))}maybeShowAt(e){let t=[];for(let n of this._participants)if(n.suggestHoverAnchor){let o=n.suggestHoverAnchor(e);o&&t.push(o)}let i=e.target;if(i.type===6&&t.push(new Kd(0,i.range)),i.type===7){let n=this._editor.getOption(44).typicalHalfwidthCharacterWidth/2;!i.detail.isAfterLines&&typeof i.detail.horizontalDistanceToText=="number"&&i.detail.horizontalDistanceToText<n&&t.push(new Kd(0,i.range))}return t.length===0?!1:(t.sort((n,o)=>o.priority-n.priority),this._startShowingAt(t[0],0,!1),!0)}startShowingAtRange(e,t,i){this._startShowingAt(new Kd(0,e),t,i)}_startShowingAt(e,t,i){if(!(this._computer.anchor&&this._computer.anchor.equals(e))){if(this._hoverOperation.cancel(),this._widget.position)if(!this._computer.anchor||!e.canAdoptVisibleHover(this._computer.anchor,this._widget.position))this.hide();else{let n=this._messages.filter(o=>o.isValidForHoverAnchor(e));if(n.length===0)this.hide();else{if(n.length===this._messages.length&&this._messagesAreComplete)return;this._renderMessages(e,n)}}this._computer.anchor=e,this._computer.shouldFocus=i,this._hoverOperation.start(t)}}hide(){this._computer.anchor=null,this._hoverOperation.cancel(),this._widget.hide()}isColorPickerVisible(){return!!this._widget.colorPicker}_addLoadingMessage(e){if(this._computer.anchor){for(let t of this._participants)if(t.createLoadingMessage){let i=t.createLoadingMessage(this._computer.anchor);if(i)return e.slice(0).concat([i])}}return e}_withResult(e,t,i){this._messages=i?this._addLoadingMessage(e):e,this._messagesAreComplete=t,this._computer.anchor&&this._messages.length>0?this._renderMessages(this._computer.anchor,this._messages):t&&this.hide()}_renderMessages(e,t){let i=1073741824,n=t[0].range,o=null;for(let h of t)i=Math.min(i,h.range.startColumn),n=b.plusRange(n,h.range),h.forceShowAtRange&&(o=h.range);let r=new A,a=r.add(new Ay(this._keybindingService)),l=document.createDocumentFragment(),c=null,d={fragment:l,statusBar:a,setColorPicker:h=>c=h,onContentsChanged:()=>this._widget.onContentsChanged(),hide:()=>this.hide()};for(let h of this._participants){let p=t.filter(m=>m.owner===h);p.length>0&&r.add(h.renderHoverParts(d,p))}if(a.hasContent&&l.appendChild(a.hoverElement),l.hasChildNodes()){if(n){let h=this._decorationsChangerListener.deltaDecorations([],[{range:n,options:IT._DECORATION_OPTIONS}]);r.add(We(()=>{this._decorationsChangerListener.deltaDecorations(h,[])}))}this._widget.showAt(l,new LT(c,o?o.getStartPosition():new U(e.range.startLineNumber,i),o||n,this._editor.getOption(53).above,this._computer.shouldFocus,r))}else r.dispose()}};pc._DECORATION_OPTIONS=xe.register({description:"content-hover-highlight",className:"hoverHighlight"});pc=Fy([Vp(1,le),Vp(2,rt)],pc);var kT=class extends z{constructor(e){super();this._editor=e,this._onDidChangeModelDecorations=this._register(new j),this.onDidChangeModelDecorations=this._onDidChangeModelDecorations.event,this._isChangingDecorations=!1,this._register(this._editor.onDidChangeModelDecorations(t=>{this._isChangingDecorations||this._onDidChangeModelDecorations.fire(t)}))}deltaDecorations(e,t){try{return this._isChangingDecorations=!0,this._editor.deltaDecorations(e,t)}finally{this._isChangingDecorations=!1}}},LT=class{constructor(e,t,i,n,o,r){this.colorPicker=e,this.showAtPosition=t,this.showAtRange=i,this.preferAbove=n,this.stoleFocus=o,this.disposables=r}},Fr=class PT extends z{constructor(e,t){super();this._editor=e,this._contextKeyService=t,this.allowEditorOverflow=!0,this._hoverVisibleKey=S.hoverVisible.bindTo(this._contextKeyService),this._hover=this._register(new jd),this._visibleData=null,this._register(this._editor.onDidLayoutChange(()=>this._layout())),this._register(this._editor.onDidChangeConfiguration(i=>{i.hasChanged(44)&&this._updateFont()})),this._setVisibleData(null),this._layout(),this._editor.addContentWidget(this)}get position(){var e,t;return(t=(e=this._visibleData)===null||e===void 0?void 0:e.showAtPosition)!==null&&t!==void 0?t:null}get colorPicker(){var e,t;return(t=(e=this._visibleData)===null||e===void 0?void 0:e.colorPicker)!==null&&t!==void 0?t:null}dispose(){this._editor.removeContentWidget(this),this._visibleData&&this._visibleData.disposables.dispose(),super.dispose()}getId(){return PT.ID}getDomNode(){return this._hover.containerDomNode}getPosition(){if(!this._visibleData)return null;let e=this._visibleData.preferAbove;return!e&&this._contextKeyService.getContextKeyValue(Ce.Visible.key)&&(e=!0),{position:this._visibleData.showAtPosition,range:this._visibleData.showAtRange,preference:e?[1,2]:[2,1]}}_setVisibleData(e){this._visibleData&&this._visibleData.disposables.dispose(),this._visibleData=e,this._hoverVisibleKey.set(!!this._visibleData),this._hover.containerDomNode.classList.toggle("hidden",!this._visibleData)}_layout(){let e=Math.max(this._editor.getLayoutInfo().height/4,250),{fontSize:t,lineHeight:i}=this._editor.getOption(44);this._hover.contentsDomNode.style.fontSize=`${t}px`,this._hover.contentsDomNode.style.lineHeight=`${i/t}`,this._hover.contentsDomNode.style.maxHeight=`${e}px`,this._hover.contentsDomNode.style.maxWidth=`${Math.max(this._editor.getLayoutInfo().width*.66,500)}px`}_updateFont(){Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName("code")).forEach(t=>this._editor.applyFontInfo(t))}showAt(e,t){this._setVisibleData(t),this._hover.contentsDomNode.textContent="",this._hover.contentsDomNode.appendChild(e),this._hover.contentsDomNode.style.paddingBottom="",this._updateFont(),this._editor.layoutContentWidget(this),this.onContentsChanged(),this._editor.render(),this._editor.layoutContentWidget(this),this.onContentsChanged(),t.stoleFocus&&this._hover.containerDomNode.focus(),t.colorPicker&&t.colorPicker.layout()}hide(){if(this._visibleData){let e=this._visibleData.stoleFocus;this._setVisibleData(null),this._editor.layoutContentWidget(this),e&&this._editor.focus()}}onContentsChanged(){this._hover.onContentsChanged();let e=this._hover.scrollbar.getScrollDimensions();if(e.scrollWidth>e.width){let i=`${this._hover.scrollbar.options.horizontalScrollbarSize}px`;this._hover.contentsDomNode.style.paddingBottom!==i&&(this._hover.contentsDomNode.style.paddingBottom=i,this._editor.layoutContentWidget(this),this._hover.onContentsChanged())}}clear(){this._hover.contentsDomNode.textContent=""}};Fr.ID="editor.contrib.contentHoverWidget";Fr=Fy([Vp(1,ie)],Fr);var Ay=class extends z{constructor(e){super();this._keybindingService=e,this._hasContent=!1,this.hoverElement=ET("div.hover-row.status-bar"),this.actionsElement=H(this.hoverElement,ET("div.actions"))}get hasContent(){return this._hasContent}addAction(e){let t=this._keybindingService.lookupKeybinding(e.commandId),i=t?t.getLabel():null;return this._hasContent=!0,this._register(Ud.render(this.actionsElement,e,i))}append(e){let t=H(this.actionsElement,e);return this._hasContent=!0,t}};Ay=Fy([Vp(0,rt)],Ay);var mc=class{constructor(e,t){this._editor=e,this._participants=t,this._anchor=null,this._shouldFocus=!1}get anchor(){return this._anchor}set anchor(e){this._anchor=e}get shouldFocus(){return this._shouldFocus}set shouldFocus(e){this._shouldFocus=e}static _getLineDecorations(e,t){if(t.type!==1)return[];let i=e.getModel(),n=t.range.startLineNumber,o=i.getLineMaxColumn(n);return e.getLineDecorations(n).filter(r=>{if(r.options.isWholeLine)return!0;let a=r.range.startLineNumber===n?r.range.startColumn:1,l=r.range.endLineNumber===n?r.range.endColumn:o;if(r.options.showIfCollapsed){if(a>t.range.startColumn+1||t.range.endColumn-1>l)return!1}else if(a>t.range.startColumn||t.range.endColumn>l)return!1;return!0})}computeAsync(e){let t=this._anchor;if(!this._editor.hasModel()||!t)return Si.EMPTY;let i=mc._getLineDecorations(this._editor,t);return Si.merge(this._participants.map(n=>n.computeAsync?n.computeAsync(t,i,e):Si.EMPTY))}computeSync(){if(!this._editor.hasModel()||!this._anchor)return[];let e=mc._getLineDecorations(this._editor,this._anchor),t=[];for(let i of this._participants)t=t.concat(i.computeSync(this._anchor,e));return Vn(t)}};Ae();vt();G();qi();var MT=W,Nr=class extends z{constructor(e,t,i=eC){super();this._renderDisposeables=this._register(new A),this._editor=e,this._isVisible=!1,this._messages=[],this._hover=this._register(new jd),this._hover.containerDomNode.classList.toggle("hidden",!this._isVisible),this._markdownRenderer=this._register(new Ii({editor:this._editor},t,i)),this._computer=new DT(this._editor),this._hoverOperation=this._register(new $d(this._editor,this._computer)),this._register(this._hoverOperation.onResult(n=>{this._withResult(n.value)})),this._register(this._editor.onDidChangeModelDecorations(()=>this._onModelDecorationsChanged())),this._register(this._editor.onDidChangeConfiguration(n=>{n.hasChanged(44)&&this._updateFont()})),this._editor.addOverlayWidget(this)}dispose(){this._editor.removeOverlayWidget(this),super.dispose()}getId(){return Nr.ID}getDomNode(){return this._hover.containerDomNode}getPosition(){return null}_updateFont(){Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName("code")).forEach(t=>this._editor.applyFontInfo(t))}_onModelDecorationsChanged(){this._isVisible&&(this._hoverOperation.cancel(),this._hoverOperation.start(0))}startShowingAt(e){this._computer.lineNumber!==e&&(this._hoverOperation.cancel(),this.hide(),this._computer.lineNumber=e,this._hoverOperation.start(0))}hide(){this._computer.lineNumber=-1,this._hoverOperation.cancel(),!!this._isVisible&&(this._isVisible=!1,this._hover.containerDomNode.classList.toggle("hidden",!this._isVisible))}_withResult(e){this._messages=e,this._messages.length>0?this._renderMessages(this._computer.lineNumber,this._messages):this.hide()}_renderMessages(e,t){this._renderDisposeables.clear();let i=document.createDocumentFragment();for(let n of t){let o=MT("div.hover-row.markdown-hover"),r=H(o,MT("div.hover-contents")),a=this._renderDisposeables.add(this._markdownRenderer.render(n.value));r.appendChild(a.element),i.appendChild(o)}this._updateContents(i),this._showAt(e)}_updateContents(e){this._hover.contentsDomNode.textContent="",this._hover.contentsDomNode.appendChild(e),this._updateFont()}_showAt(e){this._isVisible||(this._isVisible=!0,this._hover.containerDomNode.classList.toggle("hidden",!this._isVisible));let t=this._editor.getLayoutInfo(),i=this._editor.getTopForLineNumber(e),n=this._editor.getScrollTop(),o=this._editor.getOption(59),r=this._hover.containerDomNode.clientHeight,a=i-n-(r-o)/2;this._hover.containerDomNode.style.left=`${t.glyphMarginLeft+t.glyphMarginWidth}px`,this._hover.containerDomNode.style.top=`${Math.max(Math.round(a),0)}px`}};Nr.ID="editor.contrib.modesGlyphHoverWidget";var DT=class{constructor(e){this._editor=e,this._lineNumber=-1}get lineNumber(){return this._lineNumber}set lineNumber(e){this._lineNumber=e}computeSync(){let e=n=>({value:n}),t=this._editor.getLineDecorations(this._lineNumber),i=[];if(!t)return i;for(let n of t){if(!n.options.glyphMarginClassName)continue;let o=n.options.glyphMarginHoverMessage;!o||_r(o)||i.push(...hh(o).map(e))}return i}};Q();Ee();Be();qi();mt();Ne();var gD=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Gp=function(s,e){return function(t,i){e(t,i,s)}},Uo=class RT{constructor(e,t,i,n,o){this._editor=e,this._instantiationService=t,this._openerService=i,this._languageService=n,this._toUnhook=new A,this._isMouseDown=!1,this._hoverClicked=!1,this._contentWidget=null,this._glyphWidget=null,this._hookEvents(),this._didChangeConfigurationHandler=this._editor.onDidChangeConfiguration(r=>{r.hasChanged(53)&&(this._unhookEvents(),this._hookEvents())})}static get(e){return e.getContribution(RT.ID)}_hookEvents(){let e=()=>this._hideWidgets(),t=this._editor.getOption(53);this._isHoverEnabled=t.enabled,this._isHoverSticky=t.sticky,this._isHoverEnabled?(this._toUnhook.add(this._editor.onMouseDown(i=>this._onEditorMouseDown(i))),this._toUnhook.add(this._editor.onMouseUp(i=>this._onEditorMouseUp(i))),this._toUnhook.add(this._editor.onMouseMove(i=>this._onEditorMouseMove(i))),this._toUnhook.add(this._editor.onKeyDown(i=>this._onKeyDown(i)))):(this._toUnhook.add(this._editor.onMouseMove(i=>this._onEditorMouseMove(i))),this._toUnhook.add(this._editor.onKeyDown(i=>this._onKeyDown(i)))),this._toUnhook.add(this._editor.onMouseLeave(e)),this._toUnhook.add(this._editor.onDidChangeModel(e)),this._toUnhook.add(this._editor.onDidScrollChange(i=>this._onEditorScrollChanged(i)))}_unhookEvents(){this._toUnhook.clear()}_onEditorScrollChanged(e){(e.scrollTopChanged||e.scrollLeftChanged)&&this._hideWidgets()}_onEditorMouseDown(e){this._isMouseDown=!0;let t=e.target;if(t.type===9&&t.detail===Fr.ID){this._hoverClicked=!0;return}t.type===12&&t.detail===Nr.ID||(t.type!==12&&(this._hoverClicked=!1),this._hideWidgets())}_onEditorMouseUp(e){this._isMouseDown=!1}_onEditorMouseMove(e){var t,i,n,o,r;let a=e.target;if(this._isMouseDown&&this._hoverClicked||this._isHoverSticky&&a.type===9&&a.detail===Fr.ID||this._isHoverSticky&&!((i=(t=e.event.browserEvent.view)===null||t===void 0?void 0:t.getSelection())===null||i===void 0?void 0:i.isCollapsed)||!this._isHoverSticky&&a.type===9&&a.detail===Fr.ID&&((n=this._contentWidget)===null||n===void 0?void 0:n.isColorPickerVisible())||this._isHoverSticky&&a.type===12&&a.detail===Nr.ID)return;if(!this._isHoverEnabled){this._hideWidgets();return}if(this._getOrCreateContentWidget().maybeShowAt(e)){(o=this._glyphWidget)===null||o===void 0||o.hide();return}if(a.type===2&&a.position){(r=this._contentWidget)===null||r===void 0||r.hide(),this._glyphWidget||(this._glyphWidget=new Nr(this._editor,this._languageService,this._openerService)),this._glyphWidget.startShowingAt(a.position.lineNumber);return}this._hideWidgets()}_onKeyDown(e){e.keyCode!==5&&e.keyCode!==6&&e.keyCode!==57&&e.keyCode!==4&&this._hideWidgets()}_hideWidgets(){var e,t,i;this._isMouseDown&&this._hoverClicked&&((e=this._contentWidget)===null||e===void 0?void 0:e.isColorPickerVisible())||(this._hoverClicked=!1,(t=this._glyphWidget)===null||t===void 0||t.hide(),(i=this._contentWidget)===null||i===void 0||i.hide())}_getOrCreateContentWidget(){return this._contentWidget||(this._contentWidget=this._instantiationService.createInstance(pc,this._editor)),this._contentWidget}isColorPickerVisible(){var e;return((e=this._contentWidget)===null||e===void 0?void 0:e.isColorPickerVisible())||!1}showContentHover(e,t,i){this._getOrCreateContentWidget().startShowingAtRange(e,t,i)}dispose(){var e,t;this._unhookEvents(),this._toUnhook.dispose(),this._didChangeConfigurationHandler.dispose(),(e=this._glyphWidget)===null||e===void 0||e.dispose(),(t=this._contentWidget)===null||t===void 0||t.dispose()}};Uo.ID="editor.contrib.hover";Uo=gD([Gp(1,le),Gp(2,bt),Gp(3,ft),Gp(4,ie)],Uo);var AT=class extends F{constructor(){super({id:"editor.action.showHover",label:u({key:"showHover",comment:["Label for action that will trigger the showing of a hover in the editor.","This allows for users to show the hover without using the mouse."]},"Show Hover"),alias:"Show Hover",precondition:void 0,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2087),weight:100}})}run(e,t){if(!t.hasModel())return;let i=Uo.get(t);if(!i)return;let n=t.getPosition(),o=new b(n.lineNumber,n.column,n.lineNumber,n.column),r=t.getOption(2)===2;i.showContentHover(o,1,r)}},FT=class extends F{constructor(){super({id:"editor.action.showDefinitionPreviewHover",label:u({key:"showDefinitionPreviewHover",comment:["Label for action that will trigger the showing of definition preview hover in the editor.","This allows for users to show the definition preview hover without using the mouse."]},"Show Definition Preview Hover"),alias:"Show Definition Preview Hover",precondition:void 0})}run(e,t){let i=Uo.get(t);if(!i)return;let n=t.getPosition();if(!n)return;let o=new b(n.lineNumber,n.column,n.lineNumber,n.column),r=Lr.get(t);if(!r)return;r.startFindDefinitionFromCursor(n).then(()=>{i.showContentHover(o,1,!0)})}};J(Uo.ID,Uo);I(AT);I(FT);Me((s,e)=>{let t=s.getColor(Jv);t&&e.addRule(`.monaco-editor .hoverHighlight { background-color: ${t}; }`);let i=s.getColor(To);i&&e.addRule(`.monaco-editor .monaco-hover { background-color: ${i}; }`);let n=s.getColor(ka);n&&(e.addRule(`.monaco-editor .monaco-hover { border: 1px solid ${n}; }`),e.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${n.transparent(.5)}; }`),e.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${n.transparent(.5)}; }`),e.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${n.transparent(.5)}; }`));let o=s.getColor(gr);o&&e.addRule(`.monaco-editor .monaco-hover a { color: ${o}; }`);let r=s.getColor(fr);r&&e.addRule(`.monaco-editor .monaco-hover a:hover { color: ${r}; }`);let a=s.getColor(Ia);a&&e.addRule(`.monaco-editor .monaco-hover { color: ${a}; }`);let l=s.getColor(Qv);l&&e.addRule(`.monaco-editor .monaco-hover .hover-row .actions { background-color: ${l}; }`);let c=s.getColor(Wh);c&&e.addRule(`.monaco-editor .monaco-hover code { background-color: ${c}; }`)});var jp=class extends z{constructor(e){super();this._editor=e,this._register(e.onMouseDown(t=>this.onMouseDown(t)))}dispose(){super.dispose()}onMouseDown(e){let t=e.target;if(t.type!==6||!t.detail.injectedText||t.detail.injectedText.options.attachedData!==$g||!t.range)return;let i=this._editor.getContribution(Uo.ID);if(!!i&&!i.isColorPickerVisible()){let n=new b(t.range.startLineNumber,t.range.startColumn+1,t.range.endLineNumber,t.range.endColumn+1);i.showContentHover(n,1,!1)}}};jp.ID="editor.contrib.colorContribution";J(jp.ID,jp);yo();ue();ee();He();sn();Do();tt();ee();Mt();var On=class{constructor(e,t,i){this.languageConfigurationService=i,this._selection=e,this._insertSpace=t,this._usedEndToken=null}static _haystackHasNeedleAtOffset(e,t,i){if(i<0)return!1;let n=t.length,o=e.length;if(i+n>o)return!1;for(let r=0;r<n;r++){let a=e.charCodeAt(i+r),l=t.charCodeAt(r);if(a!==l&&!(a>=65&&a<=90&&a+32===l)&&!(l>=65&&l<=90&&l+32===a))return!1}return!0}_createOperationsForBlockComment(e,t,i,n,o,r){let a=e.startLineNumber,l=e.startColumn,c=e.endLineNumber,d=e.endColumn,h=o.getLineContent(a),p=o.getLineContent(c),m=h.lastIndexOf(t,l-1+t.length),f=p.indexOf(i,d-1-i.length);if(m!==-1&&f!==-1)if(a===c)h.substring(m+t.length,f).indexOf(i)>=0&&(m=-1,f=-1);else{let _=h.substring(m+t.length),w=p.substring(0,f);(_.indexOf(i)>=0||w.indexOf(i)>=0)&&(m=-1,f=-1)}let v;m!==-1&&f!==-1?(n&&m+t.length<h.length&&h.charCodeAt(m+t.length)===32&&(t=t+" "),n&&f>0&&p.charCodeAt(f-1)===32&&(i=" "+i,f-=1),v=On._createRemoveBlockCommentOperations(new b(a,m+t.length+1,c,f+1),t,i)):(v=On._createAddBlockCommentOperations(e,t,i,this._insertSpace),this._usedEndToken=v.length===1?i:null);for(let _ of v)r.addTrackedEditOperation(_.range,_.text)}static _createRemoveBlockCommentOperations(e,t,i){let n=[];return b.isEmpty(e)?n.push(Ge.delete(new b(e.startLineNumber,e.startColumn-t.length,e.endLineNumber,e.endColumn+i.length))):(n.push(Ge.delete(new b(e.startLineNumber,e.startColumn-t.length,e.startLineNumber,e.startColumn))),n.push(Ge.delete(new b(e.endLineNumber,e.endColumn,e.endLineNumber,e.endColumn+i.length)))),n}static _createAddBlockCommentOperations(e,t,i,n){let o=[];return b.isEmpty(e)?o.push(Ge.replace(new b(e.startLineNumber,e.startColumn,e.endLineNumber,e.endColumn),t+"  "+i)):(o.push(Ge.insert(new U(e.startLineNumber,e.startColumn),t+(n?" ":""))),o.push(Ge.insert(new U(e.endLineNumber,e.endColumn),(n?" ":"")+i))),o}getEditOperations(e,t){let i=this._selection.startLineNumber,n=this._selection.startColumn;e.tokenizeIfCheap(i);let o=e.getLanguageIdAtPosition(i,n),r=this.languageConfigurationService.getLanguageConfiguration(o).comments;!r||!r.blockCommentStartToken||!r.blockCommentEndToken||this._createOperationsForBlockComment(this._selection,r.blockCommentStartToken,r.blockCommentEndToken,this._insertSpace,e,t)}computeCursorState(e,t){let i=t.getInverseEditOperations();if(i.length===2){let n=i[0],o=i[1];return new X(n.range.endLineNumber,n.range.endColumn,o.range.startLineNumber,o.range.startColumn)}else{let n=i[0].range,o=this._usedEndToken?-this._usedEndToken.length-1:0;return new X(n.endLineNumber,n.endColumn+o,n.endLineNumber,n.endColumn+o)}}};Ye();Do();tt();ee();Mt();sn();var Hn=class{constructor(e,t,i,n,o,r,a){this.languageConfigurationService=e,this._selection=t,this._tabSize=i,this._type=n,this._insertSpace=o,this._selectionId=null,this._deltaColumn=0,this._moveEndPositionDown=!1,this._ignoreEmptyLines=r,this._ignoreFirstLine=a||!1}static _gatherPreflightCommentStrings(e,t,i,n){e.tokenizeIfCheap(t);let o=e.getLanguageIdAtPosition(t,1),r=n.getLanguageConfiguration(o).comments,a=r?r.lineCommentToken:null;if(!a)return null;let l=[];for(let c=0,d=i-t+1;c<d;c++)l[c]={ignore:!1,commentStr:a,commentStrOffset:0,commentStrLength:a.length};return l}static _analyzeLines(e,t,i,n,o,r,a,l){let c=!0,d;e===0?d=!0:e===1?d=!1:d=!0;for(let h=0,p=n.length;h<p;h++){let m=n[h],f=o+h;if(f===o&&a){m.ignore=!0;continue}let v=i.getLineContent(f),_=Vl(v);if(_===-1){m.ignore=r,m.commentStrOffset=v.length;continue}if(c=!1,m.ignore=!1,m.commentStrOffset=_,d&&!On._haystackHasNeedleAtOffset(v,m.commentStr,_)&&(e===0?d=!1:e===1||(m.ignore=!0)),d&&t){let w=_+m.commentStrLength;w<v.length&&v.charCodeAt(w)===32&&(m.commentStrLength+=1)}}if(e===0&&c){d=!1;for(let h=0,p=n.length;h<p;h++)n[h].ignore=!1}return{supported:!0,shouldRemoveComments:d,lines:n}}static _gatherPreflightData(e,t,i,n,o,r,a,l){let c=Hn._gatherPreflightCommentStrings(i,n,o,l);return c===null?{supported:!1}:Hn._analyzeLines(e,t,i,c,n,r,a,l)}_executeLineComments(e,t,i,n){let o;i.shouldRemoveComments?o=Hn._createRemoveLineCommentsOperations(i.lines,n.startLineNumber):(Hn._normalizeInsertionPoint(e,i.lines,n.startLineNumber,this._tabSize),o=this._createAddLineCommentsOperations(i.lines,n.startLineNumber));let r=new U(n.positionLineNumber,n.positionColumn);for(let a=0,l=o.length;a<l;a++)t.addEditOperation(o[a].range,o[a].text),b.isEmpty(o[a].range)&&b.getStartPosition(o[a].range).equals(r)&&e.getLineContent(r.lineNumber).length+1===r.column&&(this._deltaColumn=(o[a].text||"").length);this._selectionId=t.trackSelection(n)}_attemptRemoveBlockComment(e,t,i,n){let o=t.startLineNumber,r=t.endLineNumber,a=n.length+Math.max(e.getLineFirstNonWhitespaceColumn(t.startLineNumber),t.startColumn),l=e.getLineContent(o).lastIndexOf(i,a-1),c=e.getLineContent(r).indexOf(n,t.endColumn-1-i.length);return l!==-1&&c===-1&&(c=e.getLineContent(o).indexOf(n,l+i.length),r=o),l===-1&&c!==-1&&(l=e.getLineContent(r).lastIndexOf(i,c),o=r),t.isEmpty()&&(l===-1||c===-1)&&(l=e.getLineContent(o).indexOf(i),l!==-1&&(c=e.getLineContent(o).indexOf(n,l+i.length))),l!==-1&&e.getLineContent(o).charCodeAt(l+i.length)===32&&(i+=" "),c!==-1&&e.getLineContent(r).charCodeAt(c-1)===32&&(n=" "+n,c-=1),l!==-1&&c!==-1?On._createRemoveBlockCommentOperations(new b(o,l+i.length+1,r,c+1),i,n):null}_executeBlockComment(e,t,i){e.tokenizeIfCheap(i.startLineNumber);let n=e.getLanguageIdAtPosition(i.startLineNumber,1),o=ii.getComments(n);if(!o||!o.blockCommentStartToken||!o.blockCommentEndToken)return;let r=o.blockCommentStartToken,a=o.blockCommentEndToken,l=this._attemptRemoveBlockComment(e,i,r,a);if(!l){if(i.isEmpty()){let c=e.getLineContent(i.startLineNumber),d=Vl(c);d===-1&&(d=c.length),l=On._createAddBlockCommentOperations(new b(i.startLineNumber,d+1,i.startLineNumber,c.length+1),r,a,this._insertSpace)}else l=On._createAddBlockCommentOperations(new b(i.startLineNumber,e.getLineFirstNonWhitespaceColumn(i.startLineNumber),i.endLineNumber,e.getLineMaxColumn(i.endLineNumber)),r,a,this._insertSpace);l.length===1&&(this._deltaColumn=r.length+1)}this._selectionId=t.trackSelection(i);for(let c of l)t.addEditOperation(c.range,c.text)}getEditOperations(e,t){let i=this._selection;if(this._moveEndPositionDown=!1,i.startLineNumber===i.endLineNumber&&this._ignoreFirstLine){t.addEditOperation(new b(i.startLineNumber,e.getLineMaxColumn(i.startLineNumber),i.startLineNumber+1,1),i.startLineNumber===e.getLineCount()?"":`
`),this._selectionId=t.trackSelection(i);return}i.startLineNumber<i.endLineNumber&&i.endColumn===1&&(this._moveEndPositionDown=!0,i=i.setEndPosition(i.endLineNumber-1,e.getLineMaxColumn(i.endLineNumber-1)));let n=Hn._gatherPreflightData(this._type,this._insertSpace,e,i.startLineNumber,i.endLineNumber,this._ignoreEmptyLines,this._ignoreFirstLine,this.languageConfigurationService);return n.supported?this._executeLineComments(e,t,n,i):this._executeBlockComment(e,t,i)}computeCursorState(e,t){let i=t.getTrackedSelection(this._selectionId);return this._moveEndPositionDown&&(i=i.setEndPosition(i.endLineNumber+1,1)),new X(i.selectionStartLineNumber,i.selectionStartColumn+this._deltaColumn,i.positionLineNumber,i.positionColumn+this._deltaColumn)}static _createRemoveLineCommentsOperations(e,t){let i=[];for(let n=0,o=e.length;n<o;n++){let r=e[n];r.ignore||i.push(Ge.delete(new b(t+n,r.commentStrOffset+1,t+n,r.commentStrOffset+r.commentStrLength+1)))}return i}_createAddLineCommentsOperations(e,t){let i=[],n=this._insertSpace?" ":"";for(let o=0,r=e.length;o<r;o++){let a=e[o];a.ignore||i.push(Ge.insert(new U(t+o,a.commentStrOffset+1),a.commentStr+n))}return i}static nextVisibleColumn(e,t,i,n){return i?e+(t-e%t):e+n}static _normalizeInsertionPoint(e,t,i,n){let o=1073741824,r,a;for(let l=0,c=t.length;l<c;l++){if(t[l].ignore)continue;let d=e.getLineContent(i+l),h=0;for(let p=0,m=t[l].commentStrOffset;h<o&&p<m;p++)h=Hn.nextVisibleColumn(h,n,d.charCodeAt(p)===9,1);h<o&&(o=h)}o=Math.floor(o/n)*n;for(let l=0,c=t.length;l<c;l++){if(t[l].ignore)continue;let d=e.getLineContent(i+l),h=0;for(r=0,a=t[l].commentStrOffset;h<o&&r<a;r++)h=Hn.nextVisibleColumn(h,n,d.charCodeAt(r)===9,1);h>o?t[l].commentStrOffset=r-1:t[l].commentStrOffset=r}}};Q();ri();var Up=class extends F{constructor(e,t){super(t);this._type=e}run(e,t){let i=e.get(Dt);if(!t.hasModel())return;let n=t.getModel(),o=[],r=n.getOptions(),a=t.getOption(19),l=t.getSelections().map((d,h)=>({selection:d,index:h,ignoreFirstLine:!1}));l.sort((d,h)=>b.compareRangesUsingStarts(d.selection,h.selection));let c=l[0];for(let d=1;d<l.length;d++){let h=l[d];c.selection.endLineNumber===h.selection.startLineNumber&&(c.index<h.index?h.ignoreFirstLine=!0:(c.ignoreFirstLine=!0,c=h))}for(let d of l)o.push(new Hn(i,d.selection,r.tabSize,this._type,a.insertSpace,a.ignoreEmptyLines,d.ignoreFirstLine));t.pushUndoStop(),t.executeCommands(this.id,o),t.pushUndoStop()}},NT=class extends Up{constructor(){super(0,{id:"editor.action.commentLine",label:u("comment.line","Toggle Line Comment"),alias:"Toggle Line Comment",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:2133,weight:100},menuOpts:{menuId:se.MenubarEditMenu,group:"5_insert",title:u({key:"miToggleLineComment",comment:["&& denotes a mnemonic"]},"&&Toggle Line Comment"),order:1}})}},zT=class extends Up{constructor(){super(1,{id:"editor.action.addCommentLine",label:u("comment.line.add","Add Line Comment"),alias:"Add Line Comment",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2081),weight:100}})}},OT=class extends Up{constructor(){super(2,{id:"editor.action.removeCommentLine",label:u("comment.line.remove","Remove Line Comment"),alias:"Remove Line Comment",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2099),weight:100}})}},HT=class extends F{constructor(){super({id:"editor.action.blockComment",label:u("comment.block","Toggle Block Comment"),alias:"Toggle Block Comment",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:1567,linux:{primary:3103},weight:100},menuOpts:{menuId:se.MenubarEditMenu,group:"5_insert",title:u({key:"miToggleBlockComment",comment:["&& denotes a mnemonic"]},"Toggle &&Block Comment"),order:2}})}run(e,t){let i=e.get(Dt);if(!t.hasModel())return;let n=t.getOption(19),o=[],r=t.getSelections();for(let a of r)o.push(new On(a,n.insertSpace,i));t.pushUndoStop(),t.executeCommands(this.id,o),t.pushUndoStop()}};I(NT);I(zT);I(OT);I(HT);Ae();ss();G();Pi();ue();He();Q();ri();Ee();Ki();var fD=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},gc=function(s,e){return function(t,i){e(t,i,s)}},dl=class WT{constructor(e,t,i,n,o,r){this._contextMenuService=t,this._contextViewService=i,this._contextKeyService=n,this._keybindingService=o,this._menuService=r,this._toDispose=new A,this._contextMenuIsBeingShownCount=0,this._editor=e,this._toDispose.add(this._editor.onContextMenu(a=>this._onContextMenu(a))),this._toDispose.add(this._editor.onMouseWheel(a=>{if(this._contextMenuIsBeingShownCount>0){let l=this._contextViewService.getContextViewElement(),c=a.srcElement;c.shadowRoot&&fv(l)===c.shadowRoot||this._contextViewService.hideContextView()}})),this._toDispose.add(this._editor.onKeyDown(a=>{a.keyCode===58&&(a.preventDefault(),a.stopPropagation(),this.showContextMenu())}))}static get(e){return e.getContribution(WT.ID)}_onContextMenu(e){if(!this._editor.hasModel())return;if(!this._editor.getOption(20)){this._editor.focus(),e.target.position&&!this._editor.getSelection().containsPosition(e.target.position)&&this._editor.setPosition(e.target.position);return}if(e.target.type===12||e.target.type===6&&e.target.detail.injectedText||(e.event.preventDefault(),e.event.stopPropagation(),e.target.type!==6&&e.target.type!==7&&e.target.type!==1))return;if(this._editor.focus(),e.target.position){let i=!1;for(let n of this._editor.getSelections())if(n.containsPosition(e.target.position)){i=!0;break}i||this._editor.setPosition(e.target.position)}let t=null;e.target.type!==1&&(t={x:e.event.posx-1,width:2,y:e.event.posy-1,height:2}),this.showContextMenu(t)}showContextMenu(e){if(!this._editor.getOption(20)||!this._editor.hasModel())return;if(!this._contextMenuService){this._editor.focus();return}let t=this._getMenuActions(this._editor.getModel(),this._editor.isSimpleWidget?se.SimpleEditorContext:se.EditorContext);t.length>0&&this._doShowContextMenu(t,e)}_getMenuActions(e,t){let i=[],n=this._menuService.createMenu(t,this._contextKeyService),o=n.getActions({arg:e.uri});n.dispose();for(let r of o){let[,a]=r,l=0;for(let c of a)if(c instanceof Fh){let d=this._getMenuActions(e,c.item.submenu);d.length>0&&(i.push(new Rh(c.id,c.label,d)),l++)}else i.push(c),l++;l&&i.push(new qn)}return i.length&&i.pop(),i}_doShowContextMenu(e,t=null){if(!this._editor.hasModel())return;let i=this._editor.getOption(53);if(this._editor.updateOptions({hover:{enabled:!1}}),!t){this._editor.revealPosition(this._editor.getPosition(),1),this._editor.render();let o=this._editor.getScrolledVisiblePosition(this._editor.getPosition()),r=ni(this._editor.getDomNode()),a=r.left+o.left,l=r.top+o.top+o.height;t={x:a,y:l}}let n=this._editor.getOption(115)&&!ah;this._contextMenuIsBeingShownCount++,this._contextMenuService.showContextMenu({domForShadowRoot:n?this._editor.getDomNode():void 0,getAnchor:()=>t,getActions:()=>e,getActionViewItem:o=>{let r=this._keybindingFor(o);if(r)return new pd(o,o,{label:!0,keybinding:r.getLabel(),isMenu:!0});let a=o;return typeof a.getActionViewItem=="function"?a.getActionViewItem():new pd(o,o,{icon:!0,label:!0,isMenu:!0})},getKeyBinding:o=>this._keybindingFor(o),onHide:o=>{this._contextMenuIsBeingShownCount--,this._editor.focus(),this._editor.updateOptions({hover:i})}})}_keybindingFor(e){return this._keybindingService.lookupKeybinding(e.id)}dispose(){this._contextMenuIsBeingShownCount>0&&this._contextViewService.hideContextView(),this._toDispose.dispose()}};dl.ID="editor.contrib.contextmenu";dl=fD([gc(1,Po),gc(2,hu),gc(3,ie),gc(4,rt),gc(5,Xn)],dl);var BT=class extends F{constructor(){super({id:"editor.action.showContextMenu",label:u("action.showContextMenu.label","Show Editor Context Menu"),alias:"Show Editor Context Menu",precondition:void 0,kbOpts:{kbExpr:S.textInputFocus,primary:1092,weight:100}})}run(e,t){var i;(i=dl.get(t))===null||i===void 0||i.showContextMenu()}};J(dl.ID,dl);I(BT);G();ue();He();Q();var $p=class{constructor(e){this.selections=e}equals(e){let t=this.selections.length,i=e.selections.length;if(t!==i)return!1;for(let n=0;n<t;n++)if(!this.selections[n].equalsSelection(e.selections[n]))return!1;return!0}},Kp=class{constructor(e,t,i){this.cursorState=e,this.scrollTop=t,this.scrollLeft=i}},zr=class extends z{constructor(e){super();this._editor=e,this._isCursorUndoRedo=!1,this._undoStack=[],this._redoStack=[],this._register(e.onDidChangeModel(t=>{this._undoStack=[],this._redoStack=[]})),this._register(e.onDidChangeModelContent(t=>{this._undoStack=[],this._redoStack=[]})),this._register(e.onDidChangeCursorSelection(t=>{if(this._isCursorUndoRedo||!t.oldSelections||t.oldModelVersionId!==t.modelVersionId)return;let i=new $p(t.oldSelections);this._undoStack.length>0&&this._undoStack[this._undoStack.length-1].cursorState.equals(i)||(this._undoStack.push(new Kp(i,e.getScrollTop(),e.getScrollLeft())),this._redoStack=[],this._undoStack.length>50&&this._undoStack.shift())}))}static get(e){return e.getContribution(zr.ID)}cursorUndo(){!this._editor.hasModel()||this._undoStack.length===0||(this._redoStack.push(new Kp(new $p(this._editor.getSelections()),this._editor.getScrollTop(),this._editor.getScrollLeft())),this._applyState(this._undoStack.pop()))}cursorRedo(){!this._editor.hasModel()||this._redoStack.length===0||(this._undoStack.push(new Kp(new $p(this._editor.getSelections()),this._editor.getScrollTop(),this._editor.getScrollLeft())),this._applyState(this._redoStack.pop()))}_applyState(e){this._isCursorUndoRedo=!0,this._editor.setSelections(e.cursorState.selections),this._editor.setScrollPosition({scrollTop:e.scrollTop,scrollLeft:e.scrollLeft}),this._isCursorUndoRedo=!1}};zr.ID="editor.contrib.cursorUndoRedoController";var VT=class extends F{constructor(){super({id:"cursorUndo",label:u("cursor.undo","Cursor Undo"),alias:"Cursor Undo",precondition:void 0,kbOpts:{kbExpr:S.textInputFocus,primary:2099,weight:100}})}run(e,t,i){var n;(n=zr.get(t))===null||n===void 0||n.cursorUndo()}},GT=class extends F{constructor(){super({id:"cursorRedo",label:u("cursor.redo","Cursor Redo"),alias:"Cursor Redo",precondition:void 0})}run(e,t,i){var n;(n=zr.get(t))===null||n===void 0||n.cursorRedo()}};J(zr.ID,zr);I(VT);I(GT);G();Pi();ue();tt();ee();Mt();jt();ee();Mt();var Ny=class{constructor(e,t,i){this.selection=e,this.targetPosition=t,this.copy=i,this.targetSelection=null}getEditOperations(e,t){let i=e.getValueInRange(this.selection);if(this.copy||t.addEditOperation(this.selection,null),t.addEditOperation(new b(this.targetPosition.lineNumber,this.targetPosition.column,this.targetPosition.lineNumber,this.targetPosition.column),i),this.selection.containsPosition(this.targetPosition)&&!(this.copy&&(this.selection.getEndPosition().equals(this.targetPosition)||this.selection.getStartPosition().equals(this.targetPosition)))){this.targetSelection=this.selection;return}if(this.copy){this.targetSelection=new X(this.targetPosition.lineNumber,this.targetPosition.column,this.selection.endLineNumber-this.selection.startLineNumber+this.targetPosition.lineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column+this.selection.endColumn-this.selection.startColumn:this.selection.endColumn);return}if(this.targetPosition.lineNumber>this.selection.endLineNumber){this.targetSelection=new X(this.targetPosition.lineNumber-this.selection.endLineNumber+this.selection.startLineNumber,this.targetPosition.column,this.targetPosition.lineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column+this.selection.endColumn-this.selection.startColumn:this.selection.endColumn);return}if(this.targetPosition.lineNumber<this.selection.endLineNumber){this.targetSelection=new X(this.targetPosition.lineNumber,this.targetPosition.column,this.targetPosition.lineNumber+this.selection.endLineNumber-this.selection.startLineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column+this.selection.endColumn-this.selection.startColumn:this.selection.endColumn);return}this.selection.endColumn<=this.targetPosition.column?this.targetSelection=new X(this.targetPosition.lineNumber-this.selection.endLineNumber+this.selection.startLineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column-this.selection.endColumn+this.selection.startColumn:this.targetPosition.column-this.selection.endColumn+this.selection.startColumn,this.targetPosition.lineNumber,this.selection.startLineNumber===this.selection.endLineNumber?this.targetPosition.column:this.selection.endColumn):this.targetSelection=new X(this.targetPosition.lineNumber-this.selection.endLineNumber+this.selection.startLineNumber,this.targetPosition.column,this.targetPosition.lineNumber,this.targetPosition.column+this.selection.endColumn-this.selection.startColumn)}computeCursorState(e,t){return this.targetSelection}};function cl(s){return bi?s.altKey:s.ctrlKey}var ao=class extends z{constructor(e){super();this._editor=e,this._register(this._editor.onMouseDown(t=>this._onEditorMouseDown(t))),this._register(this._editor.onMouseUp(t=>this._onEditorMouseUp(t))),this._register(this._editor.onMouseDrag(t=>this._onEditorMouseDrag(t))),this._register(this._editor.onMouseDrop(t=>this._onEditorMouseDrop(t))),this._register(this._editor.onMouseDropCanceled(()=>this._onEditorMouseDropCanceled())),this._register(this._editor.onKeyDown(t=>this.onEditorKeyDown(t))),this._register(this._editor.onKeyUp(t=>this.onEditorKeyUp(t))),this._register(this._editor.onDidBlurEditorWidget(()=>this.onEditorBlur())),this._register(this._editor.onDidBlurEditorText(()=>this.onEditorBlur())),this._dndDecorationIds=[],this._mouseDown=!1,this._modifierPressed=!1,this._dragSelection=null}onEditorBlur(){this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1,this._modifierPressed=!1}onEditorKeyDown(e){!this._editor.getOption(31)||this._editor.getOption(18)||(cl(e)&&(this._modifierPressed=!0),this._mouseDown&&cl(e)&&this._editor.updateOptions({mouseStyle:"copy"}))}onEditorKeyUp(e){!this._editor.getOption(31)||this._editor.getOption(18)||(cl(e)&&(this._modifierPressed=!1),this._mouseDown&&e.keyCode===ao.TRIGGER_KEY_VALUE&&this._editor.updateOptions({mouseStyle:"default"}))}_onEditorMouseDown(e){this._mouseDown=!0}_onEditorMouseUp(e){this._mouseDown=!1,this._editor.updateOptions({mouseStyle:"text"})}_onEditorMouseDrag(e){let t=e.target;if(this._dragSelection===null){let n=(this._editor.getSelections()||[]).filter(o=>t.position&&o.containsPosition(t.position));if(n.length===1)this._dragSelection=n[0];else return}cl(e.event)?this._editor.updateOptions({mouseStyle:"copy"}):this._editor.updateOptions({mouseStyle:"default"}),t.position&&(this._dragSelection.containsPosition(t.position)?this._removeDecoration():this.showAt(t.position))}_onEditorMouseDropCanceled(){this._editor.updateOptions({mouseStyle:"text"}),this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1}_onEditorMouseDrop(e){if(e.target&&(this._hitContent(e.target)||this._hitMargin(e.target))&&e.target.position){let t=new U(e.target.position.lineNumber,e.target.position.column);if(this._dragSelection===null){let i=null;if(e.event.shiftKey){let n=this._editor.getSelection();if(n){let{selectionStartLineNumber:o,selectionStartColumn:r}=n;i=[new X(o,r,t.lineNumber,t.column)]}}else i=(this._editor.getSelections()||[]).map(n=>n.containsPosition(t)?new X(t.lineNumber,t.column,t.lineNumber,t.column):n);this._editor.setSelections(i||[],"mouse",3)}else(!this._dragSelection.containsPosition(t)||(cl(e.event)||this._modifierPressed)&&(this._dragSelection.getEndPosition().equals(t)||this._dragSelection.getStartPosition().equals(t)))&&(this._editor.pushUndoStop(),this._editor.executeCommand(ao.ID,new Ny(this._dragSelection,t,cl(e.event)||this._modifierPressed)),this._editor.pushUndoStop())}this._editor.updateOptions({mouseStyle:"text"}),this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1}showAt(e){let t=[{range:new b(e.lineNumber,e.column,e.lineNumber,e.column),options:ao._DECORATION_OPTIONS}];this._dndDecorationIds=this._editor.deltaDecorations(this._dndDecorationIds,t),this._editor.revealPosition(e,1)}_removeDecoration(){this._dndDecorationIds=this._editor.deltaDecorations(this._dndDecorationIds,[])}_hitContent(e){return e.type===6||e.type===7}_hitMargin(e){return e.type===2||e.type===3||e.type===4}dispose(){this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1,this._modifierPressed=!1,super.dispose()}};ao.ID="editor.contrib.dragAndDrop";ao.TRIGGER_KEY_VALUE=bi?6:5;ao._DECORATION_OPTIONS=xe.register({description:"dnd-target",className:"dnd-target"});J(ao.ID,ao);ke();G();Ye();ue();He();vt();ke();G();tt();ee();Mt();YL();ee();ca();jt();mt();Ne();var Ht=class{constructor(e){this._editor=e,this._decorations=[],this._overviewRulerApproximateDecorations=[],this._findScopeDecorationIds=[],this._rangeHighlightDecorationId=null,this._highlightedDecorationId=null,this._startPosition=this._editor.getPosition()}dispose(){this._editor.deltaDecorations(this._allDecorations(),[]),this._decorations=[],this._overviewRulerApproximateDecorations=[],this._findScopeDecorationIds=[],this._rangeHighlightDecorationId=null,this._highlightedDecorationId=null}reset(){this._decorations=[],this._overviewRulerApproximateDecorations=[],this._findScopeDecorationIds=[],this._rangeHighlightDecorationId=null,this._highlightedDecorationId=null}getCount(){return this._decorations.length}getFindScope(){return this._findScopeDecorationIds[0]?this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]):null}getFindScopes(){if(this._findScopeDecorationIds.length){let e=this._findScopeDecorationIds.map(t=>this._editor.getModel().getDecorationRange(t)).filter(t=>!!t);if(e.length)return e}return null}getStartPosition(){return this._startPosition}setStartPosition(e){this._startPosition=e,this.setCurrentFindMatch(null)}_getDecorationIndex(e){let t=this._decorations.indexOf(e);return t>=0?t+1:1}getCurrentMatchesPosition(e){let t=this._editor.getModel().getDecorationsInRange(e);for(let i of t){let n=i.options;if(n===Ht._FIND_MATCH_DECORATION||n===Ht._CURRENT_FIND_MATCH_DECORATION)return this._getDecorationIndex(i.id)}return 0}setCurrentFindMatch(e){let t=null,i=0;if(e)for(let n=0,o=this._decorations.length;n<o;n++){let r=this._editor.getModel().getDecorationRange(this._decorations[n]);if(e.equalsRange(r)){t=this._decorations[n],i=n+1;break}}return(this._highlightedDecorationId!==null||t!==null)&&this._editor.changeDecorations(n=>{if(this._highlightedDecorationId!==null&&(n.changeDecorationOptions(this._highlightedDecorationId,Ht._FIND_MATCH_DECORATION),this._highlightedDecorationId=null),t!==null&&(this._highlightedDecorationId=t,n.changeDecorationOptions(this._highlightedDecorationId,Ht._CURRENT_FIND_MATCH_DECORATION)),this._rangeHighlightDecorationId!==null&&(n.removeDecoration(this._rangeHighlightDecorationId),this._rangeHighlightDecorationId=null),t!==null){let o=this._editor.getModel().getDecorationRange(t);if(o.startLineNumber!==o.endLineNumber&&o.endColumn===1){let r=o.endLineNumber-1,a=this._editor.getModel().getLineMaxColumn(r);o=new b(o.startLineNumber,o.startColumn,r,a)}this._rangeHighlightDecorationId=n.addDecoration(o,Ht._RANGE_HIGHLIGHT_DECORATION)}}),i}set(e,t){this._editor.changeDecorations(i=>{let n=Ht._FIND_MATCH_DECORATION,o=[];if(e.length>1e3){n=Ht._FIND_MATCH_NO_OVERVIEW_DECORATION;let a=this._editor.getModel().getLineCount(),c=this._editor.getLayoutInfo().height/a,d=Math.max(2,Math.ceil(3/c)),h=e[0].range.startLineNumber,p=e[0].range.endLineNumber;for(let m=1,f=e.length;m<f;m++){let v=e[m].range;p+d>=v.startLineNumber?v.endLineNumber>p&&(p=v.endLineNumber):(o.push({range:new b(h,1,p,1),options:Ht._FIND_MATCH_ONLY_OVERVIEW_DECORATION}),h=v.startLineNumber,p=v.endLineNumber)}o.push({range:new b(h,1,p,1),options:Ht._FIND_MATCH_ONLY_OVERVIEW_DECORATION})}let r=new Array(e.length);for(let a=0,l=e.length;a<l;a++)r[a]={range:e[a].range,options:n};this._decorations=i.deltaDecorations(this._decorations,r),this._overviewRulerApproximateDecorations=i.deltaDecorations(this._overviewRulerApproximateDecorations,o),this._rangeHighlightDecorationId&&(i.removeDecoration(this._rangeHighlightDecorationId),this._rangeHighlightDecorationId=null),this._findScopeDecorationIds.length&&(this._findScopeDecorationIds.forEach(a=>i.removeDecoration(a)),this._findScopeDecorationIds=[]),(t==null?void 0:t.length)&&(this._findScopeDecorationIds=t.map(a=>i.addDecoration(a,Ht._FIND_SCOPE_DECORATION)))})}matchBeforePosition(e){if(this._decorations.length===0)return null;for(let t=this._decorations.length-1;t>=0;t--){let i=this._decorations[t],n=this._editor.getModel().getDecorationRange(i);if(!(!n||n.endLineNumber>e.lineNumber)){if(n.endLineNumber<e.lineNumber)return n;if(!(n.endColumn>e.column))return n}}return this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length-1])}matchAfterPosition(e){if(this._decorations.length===0)return null;for(let t=0,i=this._decorations.length;t<i;t++){let n=this._decorations[t],o=this._editor.getModel().getDecorationRange(n);if(!(!o||o.startLineNumber<e.lineNumber)){if(o.startLineNumber>e.lineNumber)return o;if(!(o.startColumn<e.column))return o}}return this._editor.getModel().getDecorationRange(this._decorations[0])}_allDecorations(){let e=[];return e=e.concat(this._decorations),e=e.concat(this._overviewRulerApproximateDecorations),this._findScopeDecorationIds.length&&e.push(...this._findScopeDecorationIds),this._rangeHighlightDecorationId&&e.push(this._rangeHighlightDecorationId),e}};Ht._CURRENT_FIND_MATCH_DECORATION=xe.register({description:"current-find-match",stickiness:1,zIndex:13,className:"currentFindMatch",showIfCollapsed:!0,overviewRuler:{color:nt(Xh),position:Di.Center},minimap:{color:nt(Jm),position:bo.Inline}});Ht._FIND_MATCH_DECORATION=xe.register({description:"find-match",stickiness:1,zIndex:10,className:"findMatch",showIfCollapsed:!0,overviewRuler:{color:nt(Xh),position:Di.Center},minimap:{color:nt(Jm),position:bo.Inline}});Ht._FIND_MATCH_NO_OVERVIEW_DECORATION=xe.register({description:"find-match-no-overview",stickiness:1,className:"findMatch",showIfCollapsed:!0});Ht._FIND_MATCH_ONLY_OVERVIEW_DECORATION=xe.register({description:"find-match-only-overview",stickiness:1,overviewRuler:{color:nt(Xh),position:Di.Center}});Ht._RANGE_HIGHLIGHT_DECORATION=xe.register({description:"find-range-highlight",stickiness:1,className:"rangeHighlight",isWholeLine:!0});Ht._FIND_SCOPE_DECORATION=xe.register({description:"find-scope",className:"findScope",isWholeLine:!0});ee();var zy=class{constructor(e,t,i){this._editorSelection=e,this._ranges=t,this._replaceStrings=i,this._trackedEditorSelectionId=null}getEditOperations(e,t){if(this._ranges.length>0){let i=[];for(let r=0;r<this._ranges.length;r++)i.push({range:this._ranges[r],text:this._replaceStrings[r]});i.sort((r,a)=>b.compareRangesUsingStarts(r.range,a.range));let n=[],o=i[0];for(let r=1;r<i.length;r++)o.range.endLineNumber===i[r].range.startLineNumber&&o.range.endColumn===i[r].range.startColumn?(o.range=o.range.plusRange(i[r].range),o.text=o.text+i[r].text):(n.push(o),o=i[r]);n.push(o);for(let r of n)t.addEditOperation(r.range,r.text)}this._trackedEditorSelectionId=t.trackSelection(this._editorSelection)}computeCursorState(e,t){return t.getTrackedSelection(this._trackedEditorSelectionId)}};Ye();function Oy(s,e){if(s&&s[0]!==""){let t=jT(s,e,"-"),i=jT(s,e,"_");return t&&!i?UT(s,e,"-"):!t&&i?UT(s,e,"_"):s[0].toUpperCase()===s[0]?e.toUpperCase():s[0].toLowerCase()===s[0]?e.toLowerCase():RS(s[0][0])&&e.length>0?e[0].toUpperCase()+e.substr(1):s[0][0].toUpperCase()!==s[0][0]&&e.length>0?e[0].toLowerCase()+e.substr(1):e}else return e}function jT(s,e,t){return s[0].indexOf(t)!==-1&&e.indexOf(t)!==-1&&s[0].split(t).length===e.split(t).length}function UT(s,e,t){let i=e.split(t),n=s[0].split(t),o="";return i.forEach((r,a)=>{o+=Oy([n[a]],r)+t}),o.slice(0,-1)}var Hy=class{constructor(e){this.staticValue=e,this.kind=0}},$T=class{constructor(e){this.pieces=e,this.kind=1}},Hr=class{constructor(e){!e||e.length===0?this._state=new Hy(""):e.length===1&&e[0].staticValue!==null?this._state=new Hy(e[0].staticValue):this._state=new $T(e)}static fromStaticValue(e){return new Hr([Or.staticValue(e)])}get hasReplacementPatterns(){return this._state.kind===1}buildReplaceString(e,t){if(this._state.kind===0)return t?Oy(e,this._state.staticValue):this._state.staticValue;let i="";for(let n=0,o=this._state.pieces.length;n<o;n++){let r=this._state.pieces[n];if(r.staticValue!==null){i+=r.staticValue;continue}let a=Hr._substitute(r.matchIndex,e);if(r.caseOps!==null&&r.caseOps.length>0){let l=[],c=r.caseOps.length,d=0;for(let h=0,p=a.length;h<p;h++){if(d>=c){l.push(a.slice(h));break}switch(r.caseOps[d]){case"U":l.push(a[h].toUpperCase());break;case"u":l.push(a[h].toUpperCase()),d++;break;case"L":l.push(a[h].toLowerCase());break;case"l":l.push(a[h].toLowerCase()),d++;break;default:l.push(a[h])}}a=l.join("")}i+=a}return i}static _substitute(e,t){if(t===null)return"";if(e===0)return t[0];let i="";for(;e>0;){if(e<t.length)return(t[e]||"")+i;i=String(e%10)+i,e=Math.floor(e/10)}return"$"+i}},Or=class{constructor(e,t,i){this.staticValue=e,this.matchIndex=t,!i||i.length===0?this.caseOps=null:this.caseOps=i.slice(0)}static staticValue(e){return new Or(e,-1,null)}static caseOps(e,t){return new Or(null,e,t)}},KT=class{constructor(e){this._source=e,this._lastCharIndex=0,this._result=[],this._resultLen=0,this._currentStaticPiece=""}emitUnchanged(e){this._emitStatic(this._source.substring(this._lastCharIndex,e)),this._lastCharIndex=e}emitStatic(e,t){this._emitStatic(e),this._lastCharIndex=t}_emitStatic(e){e.length!==0&&(this._currentStaticPiece+=e)}emitMatchIndex(e,t,i){this._currentStaticPiece.length!==0&&(this._result[this._resultLen++]=Or.staticValue(this._currentStaticPiece),this._currentStaticPiece=""),this._result[this._resultLen++]=Or.caseOps(e,i),this._lastCharIndex=t}finalize(){return this.emitUnchanged(this._source.length),this._currentStaticPiece.length!==0&&(this._result[this._resultLen++]=Or.staticValue(this._currentStaticPiece),this._currentStaticPiece=""),new Hr(this._result)}};function qT(s){if(!s||s.length===0)return new Hr(null);let e=[],t=new KT(s);for(let i=0,n=s.length;i<n;i++){let o=s.charCodeAt(i);if(o===92){if(i++,i>=n)break;let r=s.charCodeAt(i);switch(r){case 92:t.emitUnchanged(i-1),t.emitStatic("\\",i+1);break;case 110:t.emitUnchanged(i-1),t.emitStatic(`
`,i+1);break;case 116:t.emitUnchanged(i-1),t.emitStatic("	",i+1);break;case 117:case 85:case 108:case 76:t.emitUnchanged(i-1),t.emitStatic("",i+1),e.push(String.fromCharCode(r));break}continue}if(o===36){if(i++,i>=n)break;let r=s.charCodeAt(i);if(r===36){t.emitUnchanged(i-1),t.emitStatic("$",i+1);continue}if(r===48||r===38){t.emitUnchanged(i-1),t.emitMatchIndex(0,i+1,e),e.length=0;continue}if(49<=r&&r<=57){let a=r-48;if(i+1<n){let l=s.charCodeAt(i+1);if(48<=l&&l<=57){i++,a=a*10+(l-48),t.emitUnchanged(i-2),t.emitMatchIndex(a,i+1,e),e.length=0;continue}}t.emitUnchanged(i-1),t.emitMatchIndex(a,i+1,e),e.length=0;continue}}}return t.finalize()}Ee();var $o=new pe("findWidgetVisible",!1),iJ=$o.toNegated(),hl=new pe("findInputFocussed",!1),fc=new pe("replaceInputFocussed",!1),yc={primary:545,mac:{primary:2593}},bc={primary:565,mac:{primary:2613}},Sc={primary:560,mac:{primary:2608}},vc={primary:554,mac:{primary:2602}},xc={primary:558,mac:{primary:2606}},ze={StartFindAction:"actions.find",StartFindWithSelection:"actions.findWithSelection",StartFindWithArgs:"editor.actions.findWithArgs",NextMatchFindAction:"editor.action.nextMatchFindAction",PreviousMatchFindAction:"editor.action.previousMatchFindAction",NextSelectionMatchFindAction:"editor.action.nextSelectionMatchFindAction",PreviousSelectionMatchFindAction:"editor.action.previousSelectionMatchFindAction",StartFindReplaceAction:"editor.action.startFindReplaceAction",CloseFindWidgetCommand:"closeFindWidget",ToggleCaseSensitiveCommand:"toggleFindCaseSensitive",ToggleWholeWordCommand:"toggleFindWholeWord",ToggleRegexCommand:"toggleFindRegex",ToggleSearchScopeCommand:"toggleFindInSelection",TogglePreserveCaseCommand:"togglePreserveCase",ReplaceOneAction:"editor.action.replaceOne",ReplaceAllAction:"editor.action.replaceAll",SelectAllMatchesAction:"editor.action.selectAllMatches"},lo=19999,yD=240,Os=class{constructor(e,t){this._toDispose=new A,this._editor=e,this._state=t,this._isDisposed=!1,this._startSearchingTimer=new Ri,this._decorations=new Ht(e),this._toDispose.add(this._decorations),this._updateDecorationsScheduler=new $e(()=>this.research(!1),100),this._toDispose.add(this._updateDecorationsScheduler),this._toDispose.add(this._editor.onDidChangeCursorPosition(i=>{(i.reason===3||i.reason===5||i.reason===6)&&this._decorations.setStartPosition(this._editor.getPosition())})),this._ignoreModelContentChanged=!1,this._toDispose.add(this._editor.onDidChangeModelContent(i=>{this._ignoreModelContentChanged||(i.isFlush&&this._decorations.reset(),this._decorations.setStartPosition(this._editor.getPosition()),this._updateDecorationsScheduler.schedule())})),this._toDispose.add(this._state.onFindReplaceStateChange(i=>this._onStateChanged(i))),this.research(!1,this._state.searchScope)}dispose(){this._isDisposed=!0,xt(this._startSearchingTimer),this._toDispose.dispose()}_onStateChanged(e){this._isDisposed||!this._editor.hasModel()||(e.searchString||e.isReplaceRevealed||e.isRegex||e.wholeWord||e.matchCase||e.searchScope)&&(this._editor.getModel().isTooLargeForSyncing()?(this._startSearchingTimer.cancel(),this._startSearchingTimer.setIfNotSet(()=>{e.searchScope?this.research(e.moveCursor,this._state.searchScope):this.research(e.moveCursor)},yD)):e.searchScope?this.research(e.moveCursor,this._state.searchScope):this.research(e.moveCursor))}static _getSearchRange(e,t){return t||e.getFullModelRange()}research(e,t){let i=null;typeof t!="undefined"?t!==null&&(Array.isArray(t)?i=t:i=[t]):i=this._decorations.getFindScopes(),i!==null&&(i=i.map(a=>{if(a.startLineNumber!==a.endLineNumber){let l=a.endLineNumber;return a.endColumn===1&&(l=l-1),new b(a.startLineNumber,1,l,this._editor.getModel().getLineMaxColumn(l))}return a}));let n=this._findMatches(i,!1,lo);this._decorations.set(n,i);let o=this._editor.getSelection(),r=this._decorations.getCurrentMatchesPosition(o);if(r===0&&n.length>0){let a=dh(n.map(l=>l.range),l=>b.compareRangesUsingStarts(l,o)>=0);r=a>0?a-1+1:r}this._state.changeMatchInfo(r,this._decorations.getCount(),void 0),e&&this._editor.getOption(35).cursorMoveOnType&&this._moveToNextMatch(this._decorations.getStartPosition())}_hasMatches(){return this._state.matchesCount>0}_cannotFind(){if(!this._hasMatches()){let e=this._decorations.getFindScope();return e&&this._editor.revealRangeInCenterIfOutsideViewport(e,0),!0}return!1}_setCurrentFindMatch(e){let t=this._decorations.setCurrentFindMatch(e);this._state.changeMatchInfo(t,this._decorations.getCount(),e),this._editor.setSelection(e),this._editor.revealRangeInCenterIfOutsideViewport(e,0)}_prevSearchPosition(e){let t=this._state.isRegex&&(this._state.searchString.indexOf("^")>=0||this._state.searchString.indexOf("$")>=0),{lineNumber:i,column:n}=e,o=this._editor.getModel();return t||n===1?(i===1?i=o.getLineCount():i--,n=o.getLineMaxColumn(i)):n--,new U(i,n)}_moveToPrevMatch(e,t=!1){if(!this._state.canNavigateBack()){let d=this._decorations.matchAfterPosition(e);d&&this._setCurrentFindMatch(d);return}if(this._decorations.getCount()<lo){let d=this._decorations.matchBeforePosition(e);d&&d.isEmpty()&&d.getStartPosition().equals(e)&&(e=this._prevSearchPosition(e),d=this._decorations.matchBeforePosition(e)),d&&this._setCurrentFindMatch(d);return}if(this._cannotFind())return;let i=this._decorations.getFindScope(),n=Os._getSearchRange(this._editor.getModel(),i);n.getEndPosition().isBefore(e)&&(e=n.getEndPosition()),e.isBefore(n.getStartPosition())&&(e=n.getEndPosition());let{lineNumber:o,column:r}=e,a=this._editor.getModel(),l=new U(o,r),c=a.findPreviousMatch(this._state.searchString,l,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(117):null,!1);if(c&&c.range.isEmpty()&&c.range.getStartPosition().equals(l)&&(l=this._prevSearchPosition(l),c=a.findPreviousMatch(this._state.searchString,l,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(117):null,!1)),!!c){if(!t&&!n.containsRange(c.range))return this._moveToPrevMatch(c.range.getStartPosition(),!0);this._setCurrentFindMatch(c.range)}}moveToPrevMatch(){this._moveToPrevMatch(this._editor.getSelection().getStartPosition())}_nextSearchPosition(e){let t=this._state.isRegex&&(this._state.searchString.indexOf("^")>=0||this._state.searchString.indexOf("$")>=0),{lineNumber:i,column:n}=e,o=this._editor.getModel();return t||n===o.getLineMaxColumn(i)?(i===o.getLineCount()?i=1:i++,n=1):n++,new U(i,n)}_moveToNextMatch(e){if(!this._state.canNavigateForward()){let i=this._decorations.matchBeforePosition(e);i&&this._setCurrentFindMatch(i);return}if(this._decorations.getCount()<lo){let i=this._decorations.matchAfterPosition(e);i&&i.isEmpty()&&i.getStartPosition().equals(e)&&(e=this._nextSearchPosition(e),i=this._decorations.matchAfterPosition(e)),i&&this._setCurrentFindMatch(i);return}let t=this._getNextMatch(e,!1,!0);t&&this._setCurrentFindMatch(t.range)}_getNextMatch(e,t,i,n=!1){if(this._cannotFind())return null;let o=this._decorations.getFindScope(),r=Os._getSearchRange(this._editor.getModel(),o);r.getEndPosition().isBefore(e)&&(e=r.getStartPosition()),e.isBefore(r.getStartPosition())&&(e=r.getStartPosition());let{lineNumber:a,column:l}=e,c=this._editor.getModel(),d=new U(a,l),h=c.findNextMatch(this._state.searchString,d,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(117):null,t);return i&&h&&h.range.isEmpty()&&h.range.getStartPosition().equals(d)&&(d=this._nextSearchPosition(d),h=c.findNextMatch(this._state.searchString,d,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(117):null,t)),h?!n&&!r.containsRange(h.range)?this._getNextMatch(h.range.getEndPosition(),t,i,!0):h:null}moveToNextMatch(){this._moveToNextMatch(this._editor.getSelection().getEndPosition())}_getReplacePattern(){return this._state.isRegex?qT(this._state.replaceString):Hr.fromStaticValue(this._state.replaceString)}replace(){if(!this._hasMatches())return;let e=this._getReplacePattern(),t=this._editor.getSelection(),i=this._getNextMatch(t.getStartPosition(),!0,!1);if(i)if(t.equalsRange(i.range)){let n=e.buildReplaceString(i.matches,this._state.preserveCase),o=new Eo(t,n);this._executeEditorCommand("replace",o),this._decorations.setStartPosition(new U(t.startLineNumber,t.startColumn+n.length)),this.research(!0)}else this._decorations.setStartPosition(this._editor.getPosition()),this._setCurrentFindMatch(i.range)}_findMatches(e,t,i){let n=(e||[null]).map(o=>Os._getSearchRange(this._editor.getModel(),o));return this._editor.getModel().findMatches(this._state.searchString,n,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(117):null,t,i)}replaceAll(){if(!this._hasMatches())return;let e=this._decorations.getFindScopes();e===null&&this._state.matchesCount>=lo?this._largeReplaceAll():this._regularReplaceAll(e),this.research(!1)}_largeReplaceAll(){let t=new iv(this._state.searchString,this._state.isRegex,this._state.matchCase,this._state.wholeWord?this._editor.getOption(117):null).parseSearchRequest();if(!t)return;let i=t.regex;if(!i.multiline){let h="mu";i.ignoreCase&&(h+="i"),i.global&&(h+="g"),i=new RegExp(i.source,h)}let n=this._editor.getModel(),o=n.getValue(1),r=n.getFullModelRange(),a=this._getReplacePattern(),l,c=this._state.preserveCase;a.hasReplacementPatterns||c?l=o.replace(i,function(){return a.buildReplaceString(arguments,c)}):l=o.replace(i,a.buildReplaceString(null,c));let d=new ou(r,l,this._editor.getSelection());this._executeEditorCommand("replaceAll",d)}_regularReplaceAll(e){let t=this._getReplacePattern(),i=this._findMatches(e,t.hasReplacementPatterns||this._state.preserveCase,1073741824),n=[];for(let r=0,a=i.length;r<a;r++)n[r]=t.buildReplaceString(i[r].matches,this._state.preserveCase);let o=new zy(this._editor.getSelection(),i.map(r=>r.range),n);this._executeEditorCommand("replaceAll",o)}selectAllMatches(){if(!this._hasMatches())return;let e=this._decorations.getFindScopes(),i=this._findMatches(e,!1,1073741824).map(o=>new X(o.range.startLineNumber,o.range.startColumn,o.range.endLineNumber,o.range.endColumn)),n=this._editor.getSelection();for(let o=0,r=i.length;o<r;o++)if(i[o].equalsRange(n)){i=[n].concat(i.slice(0,o)).concat(i.slice(o+1));break}this._editor.setSelections(i)}_executeEditorCommand(e,t){try{this._ignoreModelContentChanged=!0,this._editor.pushUndoStop(),this._editor.executeCommand(e,t),this._editor.pushUndoStop()}finally{this._ignoreModelContentChanged=!1}}};Ae();ds();xi();Zn();De();var bD={inputActiveOptionBorder:we.fromHex("#007ACC00"),inputActiveOptionForeground:we.fromHex("#FFFFFF"),inputActiveOptionBackground:we.fromHex("#0E639C50")},Ko=class extends Ti{constructor(e){super();this._onChange=this._register(new j),this.onChange=this._onChange.event,this._onKeyDown=this._register(new j),this.onKeyDown=this._onKeyDown.event,this._opts=Object.assign(Object.assign({},bD),e),this._checked=this._opts.isChecked;let t=["monaco-custom-checkbox"];this._opts.icon&&t.push(..._h.asClassNameArray(this._opts.icon)),this._opts.actionClassName&&t.push(...this._opts.actionClassName.split(" ")),this._checked&&t.push("checked"),this.domNode=document.createElement("div"),this.domNode.title=this._opts.title,this.domNode.classList.add(...t),this._opts.notFocusable||(this.domNode.tabIndex=0),this.domNode.setAttribute("role","checkbox"),this.domNode.setAttribute("aria-checked",String(this._checked)),this.domNode.setAttribute("aria-label",this._opts.title),this.applyStyles(),this.onclick(this.domNode,i=>{this.enabled&&(this.checked=!this._checked,this._onChange.fire(!1),i.preventDefault())}),this.ignoreGesture(this.domNode),this.onkeydown(this.domNode,i=>{if(i.keyCode===10||i.keyCode===3){this.checked=!this._checked,this._onChange.fire(!0),i.preventDefault();return}this._onKeyDown.fire(i)})}get enabled(){return this.domNode.getAttribute("aria-disabled")!=="true"}focus(){this.domNode.focus()}get checked(){return this._checked}set checked(e){this._checked=e,this.domNode.setAttribute("aria-checked",String(this._checked)),this.domNode.classList.toggle("checked",this._checked),this.applyStyles()}width(){return 2+2+2+16}style(e){e.inputActiveOptionBorder&&(this._opts.inputActiveOptionBorder=e.inputActiveOptionBorder),e.inputActiveOptionForeground&&(this._opts.inputActiveOptionForeground=e.inputActiveOptionForeground),e.inputActiveOptionBackground&&(this._opts.inputActiveOptionBackground=e.inputActiveOptionBackground),this.applyStyles()}applyStyles(){this.domNode&&(this.domNode.style.borderColor=this._checked&&this._opts.inputActiveOptionBorder?this._opts.inputActiveOptionBorder.toString():"",this.domNode.style.color=this._checked&&this._opts.inputActiveOptionForeground?this._opts.inputActiveOptionForeground.toString():"inherit",this.domNode.style.backgroundColor=this._checked&&this._opts.inputActiveOptionBackground?this._opts.inputActiveOptionBackground.toString():"")}enable(){this.domNode.setAttribute("aria-disabled",String(!1))}disable(){this.domNode.setAttribute("aria-disabled",String(!0))}};xi();Q();var SD=u("caseDescription","Match Case"),vD=u("wordsDescription","Match Whole Word"),xD=u("regexDescription","Use Regular Expression"),Cc=class extends Ko{constructor(e){super({icon:K.caseSensitive,title:SD+e.appendTitle,isChecked:e.isChecked,inputActiveOptionBorder:e.inputActiveOptionBorder,inputActiveOptionForeground:e.inputActiveOptionForeground,inputActiveOptionBackground:e.inputActiveOptionBackground})}},_c=class extends Ko{constructor(e){super({icon:K.wholeWord,title:vD+e.appendTitle,isChecked:e.isChecked,inputActiveOptionBorder:e.inputActiveOptionBorder,inputActiveOptionForeground:e.inputActiveOptionForeground,inputActiveOptionBackground:e.inputActiveOptionBackground})}},wc=class extends Ko{constructor(e){super({icon:K.regex,title:xD+e.appendTitle,isChecked:e.isChecked,inputActiveOptionBorder:e.inputActiveOptionBorder,inputActiveOptionForeground:e.inputActiveOptionForeground,inputActiveOptionBackground:e.inputActiveOptionBackground})}};ds();ke();mt();Ne();var ul=class extends Ti{constructor(e,t,i,n){super();this._hideSoon=this._register(new $e(()=>this._hide(),2e3)),this._isVisible=!1,this._editor=e,this._state=t,this._keybindingService=i,this._domNode=document.createElement("div"),this._domNode.className="findOptionsWidget",this._domNode.style.display="none",this._domNode.style.top="10px",this._domNode.setAttribute("role","presentation"),this._domNode.setAttribute("aria-hidden","true");let o=n.getColorTheme().getColor(sd),r=n.getColorTheme().getColor(ld),a=n.getColorTheme().getColor(ad);this.caseSensitive=this._register(new Cc({appendTitle:this._keybindingLabelFor(ze.ToggleCaseSensitiveCommand),isChecked:this._state.matchCase,inputActiveOptionBorder:o,inputActiveOptionForeground:r,inputActiveOptionBackground:a})),this._domNode.appendChild(this.caseSensitive.domNode),this._register(this.caseSensitive.onChange(()=>{this._state.change({matchCase:this.caseSensitive.checked},!1)})),this.wholeWords=this._register(new _c({appendTitle:this._keybindingLabelFor(ze.ToggleWholeWordCommand),isChecked:this._state.wholeWord,inputActiveOptionBorder:o,inputActiveOptionForeground:r,inputActiveOptionBackground:a})),this._domNode.appendChild(this.wholeWords.domNode),this._register(this.wholeWords.onChange(()=>{this._state.change({wholeWord:this.wholeWords.checked},!1)})),this.regex=this._register(new wc({appendTitle:this._keybindingLabelFor(ze.ToggleRegexCommand),isChecked:this._state.isRegex,inputActiveOptionBorder:o,inputActiveOptionForeground:r,inputActiveOptionBackground:a})),this._domNode.appendChild(this.regex.domNode),this._register(this.regex.onChange(()=>{this._state.change({isRegex:this.regex.checked},!1)})),this._editor.addOverlayWidget(this),this._register(this._state.onFindReplaceStateChange(l=>{let c=!1;l.isRegex&&(this.regex.checked=this._state.isRegex,c=!0),l.wholeWord&&(this.wholeWords.checked=this._state.wholeWord,c=!0),l.matchCase&&(this.caseSensitive.checked=this._state.matchCase,c=!0),!this._state.isRevealed&&c&&this._revealTemporarily()})),this._register(hv(this._domNode,l=>this._onMouseOut())),this._register(Ke(this._domNode,"mouseover",l=>this._onMouseOver())),this._applyTheme(n.getColorTheme()),this._register(n.onDidColorThemeChange(this._applyTheme.bind(this)))}_keybindingLabelFor(e){let t=this._keybindingService.lookupKeybinding(e);return t?` (${t.getLabel()})`:""}dispose(){this._editor.removeOverlayWidget(this),super.dispose()}getId(){return ul.ID}getDomNode(){return this._domNode}getPosition(){return{preference:0}}highlightFindOptions(){this._revealTemporarily()}_revealTemporarily(){this._show(),this._hideSoon.schedule()}_onMouseOut(){this._hideSoon.schedule()}_onMouseOver(){this._hideSoon.cancel()}_show(){this._isVisible||(this._isVisible=!0,this._domNode.style.display="block")}_hide(){!this._isVisible||(this._isVisible=!1,this._domNode.style.display="none")}_applyTheme(e){let t={inputActiveOptionBorder:e.getColor(sd),inputActiveOptionForeground:e.getColor(ld),inputActiveOptionBackground:e.getColor(ad)};this.caseSensitive.style(t),this.wholeWords.style(t),this.regex.style(t)}};ul.ID="editor.contrib.findOptionsWidget";Me((s,e)=>{let t=s.getColor(cn);t&&e.addRule(`.monaco-editor .findOptionsWidget { background-color: ${t}; }`);let i=s.getColor(Ta);i&&e.addRule(`.monaco-editor .findOptionsWidget { color: ${i}; }`);let n=s.getColor(yr);n&&e.addRule(`.monaco-editor .findOptionsWidget { box-shadow: 0 0 8px 2px ${n}; }`);let o=s.getColor(dn);o&&e.addRule(`.monaco-editor .findOptionsWidget { border: 2px solid ${o}; }`)});De();G();ee();function qp(s,e){return s===1?!0:s===2?!1:e}var Wy=class extends z{constructor(){super();this._onFindReplaceStateChange=this._register(new j),this.onFindReplaceStateChange=this._onFindReplaceStateChange.event,this._searchString="",this._replaceString="",this._isRevealed=!1,this._isReplaceRevealed=!1,this._isRegex=!1,this._isRegexOverride=0,this._wholeWord=!1,this._wholeWordOverride=0,this._matchCase=!1,this._matchCaseOverride=0,this._preserveCase=!1,this._preserveCaseOverride=0,this._searchScope=null,this._matchesPosition=0,this._matchesCount=0,this._currentMatch=null,this._loop=!0,this._isSearching=!1,this._filters=null}get searchString(){return this._searchString}get replaceString(){return this._replaceString}get isRevealed(){return this._isRevealed}get isReplaceRevealed(){return this._isReplaceRevealed}get isRegex(){return qp(this._isRegexOverride,this._isRegex)}get wholeWord(){return qp(this._wholeWordOverride,this._wholeWord)}get matchCase(){return qp(this._matchCaseOverride,this._matchCase)}get preserveCase(){return qp(this._preserveCaseOverride,this._preserveCase)}get actualIsRegex(){return this._isRegex}get actualWholeWord(){return this._wholeWord}get actualMatchCase(){return this._matchCase}get actualPreserveCase(){return this._preserveCase}get searchScope(){return this._searchScope}get matchesPosition(){return this._matchesPosition}get matchesCount(){return this._matchesCount}get currentMatch(){return this._currentMatch}changeMatchInfo(e,t,i){let n={moveCursor:!1,updateHistory:!1,searchString:!1,replaceString:!1,isRevealed:!1,isReplaceRevealed:!1,isRegex:!1,wholeWord:!1,matchCase:!1,preserveCase:!1,searchScope:!1,matchesPosition:!1,matchesCount:!1,currentMatch:!1,loop:!1,isSearching:!1,filters:!1},o=!1;t===0&&(e=0),e>t&&(e=t),this._matchesPosition!==e&&(this._matchesPosition=e,n.matchesPosition=!0,o=!0),this._matchesCount!==t&&(this._matchesCount=t,n.matchesCount=!0,o=!0),typeof i!="undefined"&&(b.equalsRange(this._currentMatch,i)||(this._currentMatch=i,n.currentMatch=!0,o=!0)),o&&this._onFindReplaceStateChange.fire(n)}change(e,t,i=!0){var n;let o={moveCursor:t,updateHistory:i,searchString:!1,replaceString:!1,isRevealed:!1,isReplaceRevealed:!1,isRegex:!1,wholeWord:!1,matchCase:!1,preserveCase:!1,searchScope:!1,matchesPosition:!1,matchesCount:!1,currentMatch:!1,loop:!1,isSearching:!1,filters:!1},r=!1,a=this.isRegex,l=this.wholeWord,c=this.matchCase,d=this.preserveCase;typeof e.searchString!="undefined"&&this._searchString!==e.searchString&&(this._searchString=e.searchString,o.searchString=!0,r=!0),typeof e.replaceString!="undefined"&&this._replaceString!==e.replaceString&&(this._replaceString=e.replaceString,o.replaceString=!0,r=!0),typeof e.isRevealed!="undefined"&&this._isRevealed!==e.isRevealed&&(this._isRevealed=e.isRevealed,o.isRevealed=!0,r=!0),typeof e.isReplaceRevealed!="undefined"&&this._isReplaceRevealed!==e.isReplaceRevealed&&(this._isReplaceRevealed=e.isReplaceRevealed,o.isReplaceRevealed=!0,r=!0),typeof e.isRegex!="undefined"&&(this._isRegex=e.isRegex),typeof e.wholeWord!="undefined"&&(this._wholeWord=e.wholeWord),typeof e.matchCase!="undefined"&&(this._matchCase=e.matchCase),typeof e.preserveCase!="undefined"&&(this._preserveCase=e.preserveCase),typeof e.searchScope!="undefined"&&(((n=e.searchScope)===null||n===void 0?void 0:n.every(h=>{var p;return(p=this._searchScope)===null||p===void 0?void 0:p.some(m=>!b.equalsRange(m,h))}))||(this._searchScope=e.searchScope,o.searchScope=!0,r=!0)),typeof e.loop!="undefined"&&this._loop!==e.loop&&(this._loop=e.loop,o.loop=!0,r=!0),typeof e.isSearching!="undefined"&&this._isSearching!==e.isSearching&&(this._isSearching=e.isSearching,o.isSearching=!0,r=!0),typeof e.filters!="undefined"&&(this._filters?this._filters.update(e.filters):this._filters=e.filters,o.filters=!0,r=!0),this._isRegexOverride=typeof e.isRegexOverride!="undefined"?e.isRegexOverride:0,this._wholeWordOverride=typeof e.wholeWordOverride!="undefined"?e.wholeWordOverride:0,this._matchCaseOverride=typeof e.matchCaseOverride!="undefined"?e.matchCaseOverride:0,this._preserveCaseOverride=typeof e.preserveCaseOverride!="undefined"?e.preserveCaseOverride:0,a!==this.isRegex&&(r=!0,o.isRegex=!0),l!==this.wholeWord&&(r=!0,o.wholeWord=!0),c!==this.matchCase&&(r=!0,o.matchCase=!0),d!==this.preserveCase&&(r=!0,o.preserveCase=!0),r&&this._onFindReplaceStateChange.fire(o)}canNavigateBack(){return this.canNavigateInLoop()||this.matchesPosition!==1}canNavigateForward(){return this.canNavigateInLoop()||this.matchesPosition<this.matchesCount}canNavigateInLoop(){return this._loop||this.matchesCount>=lo}};Ae();Ln();ds();ke();xi();Le();G();Pi();Ye();ee();Q();Ae();ds();De();Q();var CD=u("defaultLabel","input"),By=class extends Ti{constructor(e,t,i,n){super();this._showOptionButtons=i,this.fixFocusOnOptionClickEnabled=!0,this.imeSessionInProgress=!1,this._onDidOptionChange=this._register(new j),this.onDidOptionChange=this._onDidOptionChange.event,this._onKeyDown=this._register(new j),this.onKeyDown=this._onKeyDown.event,this._onMouseDown=this._register(new j),this.onMouseDown=this._onMouseDown.event,this._onInput=this._register(new j),this._onKeyUp=this._register(new j),this._onCaseSensitiveKeyDown=this._register(new j),this.onCaseSensitiveKeyDown=this._onCaseSensitiveKeyDown.event,this._onRegexKeyDown=this._register(new j),this.onRegexKeyDown=this._onRegexKeyDown.event,this._lastHighlightFindOptions=0,this.contextViewProvider=t,this.placeholder=n.placeholder||"",this.validation=n.validation,this.label=n.label||CD,this.inputActiveOptionBorder=n.inputActiveOptionBorder,this.inputActiveOptionForeground=n.inputActiveOptionForeground,this.inputActiveOptionBackground=n.inputActiveOptionBackground,this.inputBackground=n.inputBackground,this.inputForeground=n.inputForeground,this.inputBorder=n.inputBorder,this.inputValidationInfoBorder=n.inputValidationInfoBorder,this.inputValidationInfoBackground=n.inputValidationInfoBackground,this.inputValidationInfoForeground=n.inputValidationInfoForeground,this.inputValidationWarningBorder=n.inputValidationWarningBorder,this.inputValidationWarningBackground=n.inputValidationWarningBackground,this.inputValidationWarningForeground=n.inputValidationWarningForeground,this.inputValidationErrorBorder=n.inputValidationErrorBorder,this.inputValidationErrorBackground=n.inputValidationErrorBackground,this.inputValidationErrorForeground=n.inputValidationErrorForeground;let o=n.appendCaseSensitiveLabel||"",r=n.appendWholeWordsLabel||"",a=n.appendRegexLabel||"",l=n.history||[],c=!!n.flexibleHeight,d=!!n.flexibleWidth,h=n.flexibleMaxHeight;this.domNode=document.createElement("div"),this.domNode.classList.add("monaco-findInput"),this.inputBox=this._register(new bu(this.domNode,this.contextViewProvider,{placeholder:this.placeholder||"",ariaLabel:this.label||"",validationOptions:{validation:this.validation},inputBackground:this.inputBackground,inputForeground:this.inputForeground,inputBorder:this.inputBorder,inputValidationInfoBackground:this.inputValidationInfoBackground,inputValidationInfoForeground:this.inputValidationInfoForeground,inputValidationInfoBorder:this.inputValidationInfoBorder,inputValidationWarningBackground:this.inputValidationWarningBackground,inputValidationWarningForeground:this.inputValidationWarningForeground,inputValidationWarningBorder:this.inputValidationWarningBorder,inputValidationErrorBackground:this.inputValidationErrorBackground,inputValidationErrorForeground:this.inputValidationErrorForeground,inputValidationErrorBorder:this.inputValidationErrorBorder,history:l,showHistoryHint:n.showHistoryHint,flexibleHeight:c,flexibleWidth:d,flexibleMaxHeight:h})),this.regex=this._register(new wc({appendTitle:a,isChecked:!1,inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground})),this._register(this.regex.onChange(m=>{this._onDidOptionChange.fire(m),!m&&this.fixFocusOnOptionClickEnabled&&this.inputBox.focus(),this.validate()})),this._register(this.regex.onKeyDown(m=>{this._onRegexKeyDown.fire(m)})),this.wholeWords=this._register(new _c({appendTitle:r,isChecked:!1,inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground})),this._register(this.wholeWords.onChange(m=>{this._onDidOptionChange.fire(m),!m&&this.fixFocusOnOptionClickEnabled&&this.inputBox.focus(),this.validate()})),this.caseSensitive=this._register(new Cc({appendTitle:o,isChecked:!1,inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground})),this._register(this.caseSensitive.onChange(m=>{this._onDidOptionChange.fire(m),!m&&this.fixFocusOnOptionClickEnabled&&this.inputBox.focus(),this.validate()})),this._register(this.caseSensitive.onKeyDown(m=>{this._onCaseSensitiveKeyDown.fire(m)})),this._showOptionButtons&&(this.inputBox.paddingRight=this.caseSensitive.width()+this.wholeWords.width()+this.regex.width());let p=[this.caseSensitive.domNode,this.wholeWords.domNode,this.regex.domNode];this.onkeydown(this.domNode,m=>{if(m.equals(15)||m.equals(17)||m.equals(9)){let f=p.indexOf(document.activeElement);if(f>=0){let v=-1;m.equals(17)?v=(f+1)%p.length:m.equals(15)&&(f===0?v=p.length-1:v=f-1),m.equals(9)?(p[f].blur(),this.inputBox.focus()):v>=0&&p[v].focus(),an.stop(m,!0)}}}),this.controls=document.createElement("div"),this.controls.className="controls",this.controls.style.display=this._showOptionButtons?"block":"none",this.controls.appendChild(this.caseSensitive.domNode),this.controls.appendChild(this.wholeWords.domNode),this.controls.appendChild(this.regex.domNode),this.domNode.appendChild(this.controls),e&&e.appendChild(this.domNode),this._register(Ke(this.inputBox.inputElement,"compositionstart",m=>{this.imeSessionInProgress=!0})),this._register(Ke(this.inputBox.inputElement,"compositionend",m=>{this.imeSessionInProgress=!1,this._onInput.fire()})),this.onkeydown(this.inputBox.inputElement,m=>this._onKeyDown.fire(m)),this.onkeyup(this.inputBox.inputElement,m=>this._onKeyUp.fire(m)),this.oninput(this.inputBox.inputElement,m=>this._onInput.fire()),this.onmousedown(this.inputBox.inputElement,m=>this._onMouseDown.fire(m))}enable(){this.domNode.classList.remove("disabled"),this.inputBox.enable(),this.regex.enable(),this.wholeWords.enable(),this.caseSensitive.enable()}disable(){this.domNode.classList.add("disabled"),this.inputBox.disable(),this.regex.disable(),this.wholeWords.disable(),this.caseSensitive.disable()}setFocusInputOnOptionClick(e){this.fixFocusOnOptionClickEnabled=e}setEnabled(e){e?this.enable():this.disable()}getValue(){return this.inputBox.value}setValue(e){this.inputBox.value!==e&&(this.inputBox.value=e)}style(e){this.inputActiveOptionBorder=e.inputActiveOptionBorder,this.inputActiveOptionForeground=e.inputActiveOptionForeground,this.inputActiveOptionBackground=e.inputActiveOptionBackground,this.inputBackground=e.inputBackground,this.inputForeground=e.inputForeground,this.inputBorder=e.inputBorder,this.inputValidationInfoBackground=e.inputValidationInfoBackground,this.inputValidationInfoForeground=e.inputValidationInfoForeground,this.inputValidationInfoBorder=e.inputValidationInfoBorder,this.inputValidationWarningBackground=e.inputValidationWarningBackground,this.inputValidationWarningForeground=e.inputValidationWarningForeground,this.inputValidationWarningBorder=e.inputValidationWarningBorder,this.inputValidationErrorBackground=e.inputValidationErrorBackground,this.inputValidationErrorForeground=e.inputValidationErrorForeground,this.inputValidationErrorBorder=e.inputValidationErrorBorder,this.applyStyles()}applyStyles(){if(this.domNode){let e={inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground};this.regex.style(e),this.wholeWords.style(e),this.caseSensitive.style(e);let t={inputBackground:this.inputBackground,inputForeground:this.inputForeground,inputBorder:this.inputBorder,inputValidationInfoBackground:this.inputValidationInfoBackground,inputValidationInfoForeground:this.inputValidationInfoForeground,inputValidationInfoBorder:this.inputValidationInfoBorder,inputValidationWarningBackground:this.inputValidationWarningBackground,inputValidationWarningForeground:this.inputValidationWarningForeground,inputValidationWarningBorder:this.inputValidationWarningBorder,inputValidationErrorBackground:this.inputValidationErrorBackground,inputValidationErrorForeground:this.inputValidationErrorForeground,inputValidationErrorBorder:this.inputValidationErrorBorder};this.inputBox.style(t)}}select(){this.inputBox.select()}focus(){this.inputBox.focus()}getCaseSensitive(){return this.caseSensitive.checked}setCaseSensitive(e){this.caseSensitive.checked=e}getWholeWords(){return this.wholeWords.checked}setWholeWords(e){this.wholeWords.checked=e}getRegex(){return this.regex.checked}setRegex(e){this.regex.checked=e,this.validate()}focusOnCaseSensitive(){this.caseSensitive.focus()}highlightFindOptions(){this.domNode.classList.remove("highlight-"+this._lastHighlightFindOptions),this._lastHighlightFindOptions=1-this._lastHighlightFindOptions,this.domNode.classList.add("highlight-"+this._lastHighlightFindOptions)}validate(){this.inputBox.validate()}clearMessage(){this.inputBox.hideMessage()}};Ae();ds();xi();De();Q();var _D=u("defaultLabel","input"),wD=u("label.preserveCaseCheckbox","Preserve Case"),XT=class extends Ko{constructor(e){super({icon:K.preserveCase,title:wD+e.appendTitle,isChecked:e.isChecked,inputActiveOptionBorder:e.inputActiveOptionBorder,inputActiveOptionForeground:e.inputActiveOptionForeground,inputActiveOptionBackground:e.inputActiveOptionBackground})}},Vy=class extends Ti{constructor(e,t,i,n){super();this._showOptionButtons=i,this.fixFocusOnOptionClickEnabled=!0,this.cachedOptionsWidth=0,this._onDidOptionChange=this._register(new j),this.onDidOptionChange=this._onDidOptionChange.event,this._onKeyDown=this._register(new j),this.onKeyDown=this._onKeyDown.event,this._onMouseDown=this._register(new j),this._onInput=this._register(new j),this._onKeyUp=this._register(new j),this._onPreserveCaseKeyDown=this._register(new j),this.onPreserveCaseKeyDown=this._onPreserveCaseKeyDown.event,this.contextViewProvider=t,this.placeholder=n.placeholder||"",this.validation=n.validation,this.label=n.label||_D,this.inputActiveOptionBorder=n.inputActiveOptionBorder,this.inputActiveOptionForeground=n.inputActiveOptionForeground,this.inputActiveOptionBackground=n.inputActiveOptionBackground,this.inputBackground=n.inputBackground,this.inputForeground=n.inputForeground,this.inputBorder=n.inputBorder,this.inputValidationInfoBorder=n.inputValidationInfoBorder,this.inputValidationInfoBackground=n.inputValidationInfoBackground,this.inputValidationInfoForeground=n.inputValidationInfoForeground,this.inputValidationWarningBorder=n.inputValidationWarningBorder,this.inputValidationWarningBackground=n.inputValidationWarningBackground,this.inputValidationWarningForeground=n.inputValidationWarningForeground,this.inputValidationErrorBorder=n.inputValidationErrorBorder,this.inputValidationErrorBackground=n.inputValidationErrorBackground,this.inputValidationErrorForeground=n.inputValidationErrorForeground;let o=n.appendPreserveCaseLabel||"",r=n.history||[],a=!!n.flexibleHeight,l=!!n.flexibleWidth,c=n.flexibleMaxHeight;this.domNode=document.createElement("div"),this.domNode.classList.add("monaco-findInput"),this.inputBox=this._register(new bu(this.domNode,this.contextViewProvider,{ariaLabel:this.label||"",placeholder:this.placeholder||"",validationOptions:{validation:this.validation},inputBackground:this.inputBackground,inputForeground:this.inputForeground,inputBorder:this.inputBorder,inputValidationInfoBackground:this.inputValidationInfoBackground,inputValidationInfoForeground:this.inputValidationInfoForeground,inputValidationInfoBorder:this.inputValidationInfoBorder,inputValidationWarningBackground:this.inputValidationWarningBackground,inputValidationWarningForeground:this.inputValidationWarningForeground,inputValidationWarningBorder:this.inputValidationWarningBorder,inputValidationErrorBackground:this.inputValidationErrorBackground,inputValidationErrorForeground:this.inputValidationErrorForeground,inputValidationErrorBorder:this.inputValidationErrorBorder,history:r,showHistoryHint:n.showHistoryHint,flexibleHeight:a,flexibleWidth:l,flexibleMaxHeight:c})),this.preserveCase=this._register(new XT({appendTitle:o,isChecked:!1,inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground})),this._register(this.preserveCase.onChange(p=>{this._onDidOptionChange.fire(p),!p&&this.fixFocusOnOptionClickEnabled&&this.inputBox.focus(),this.validate()})),this._register(this.preserveCase.onKeyDown(p=>{this._onPreserveCaseKeyDown.fire(p)})),this._showOptionButtons?this.cachedOptionsWidth=this.preserveCase.width():this.cachedOptionsWidth=0;let d=[this.preserveCase.domNode];this.onkeydown(this.domNode,p=>{if(p.equals(15)||p.equals(17)||p.equals(9)){let m=d.indexOf(document.activeElement);if(m>=0){let f=-1;p.equals(17)?f=(m+1)%d.length:p.equals(15)&&(m===0?f=d.length-1:f=m-1),p.equals(9)?(d[m].blur(),this.inputBox.focus()):f>=0&&d[f].focus(),an.stop(p,!0)}}});let h=document.createElement("div");h.className="controls",h.style.display=this._showOptionButtons?"block":"none",h.appendChild(this.preserveCase.domNode),this.domNode.appendChild(h),e&&e.appendChild(this.domNode),this.onkeydown(this.inputBox.inputElement,p=>this._onKeyDown.fire(p)),this.onkeyup(this.inputBox.inputElement,p=>this._onKeyUp.fire(p)),this.oninput(this.inputBox.inputElement,p=>this._onInput.fire()),this.onmousedown(this.inputBox.inputElement,p=>this._onMouseDown.fire(p))}enable(){this.domNode.classList.remove("disabled"),this.inputBox.enable(),this.preserveCase.enable()}disable(){this.domNode.classList.add("disabled"),this.inputBox.disable(),this.preserveCase.disable()}setEnabled(e){e?this.enable():this.disable()}style(e){this.inputActiveOptionBorder=e.inputActiveOptionBorder,this.inputActiveOptionForeground=e.inputActiveOptionForeground,this.inputActiveOptionBackground=e.inputActiveOptionBackground,this.inputBackground=e.inputBackground,this.inputForeground=e.inputForeground,this.inputBorder=e.inputBorder,this.inputValidationInfoBackground=e.inputValidationInfoBackground,this.inputValidationInfoForeground=e.inputValidationInfoForeground,this.inputValidationInfoBorder=e.inputValidationInfoBorder,this.inputValidationWarningBackground=e.inputValidationWarningBackground,this.inputValidationWarningForeground=e.inputValidationWarningForeground,this.inputValidationWarningBorder=e.inputValidationWarningBorder,this.inputValidationErrorBackground=e.inputValidationErrorBackground,this.inputValidationErrorForeground=e.inputValidationErrorForeground,this.inputValidationErrorBorder=e.inputValidationErrorBorder,this.applyStyles()}applyStyles(){if(this.domNode){let e={inputActiveOptionBorder:this.inputActiveOptionBorder,inputActiveOptionForeground:this.inputActiveOptionForeground,inputActiveOptionBackground:this.inputActiveOptionBackground};this.preserveCase.style(e);let t={inputBackground:this.inputBackground,inputForeground:this.inputForeground,inputBorder:this.inputBorder,inputValidationInfoBackground:this.inputValidationInfoBackground,inputValidationInfoForeground:this.inputValidationInfoForeground,inputValidationInfoBorder:this.inputValidationInfoBorder,inputValidationWarningBackground:this.inputValidationWarningBackground,inputValidationWarningForeground:this.inputValidationWarningForeground,inputValidationWarningBorder:this.inputValidationWarningBorder,inputValidationErrorBackground:this.inputValidationErrorBackground,inputValidationErrorForeground:this.inputValidationErrorForeground,inputValidationErrorBorder:this.inputValidationErrorBorder};this.inputBox.style(t)}}select(){this.inputBox.select()}focus(){this.inputBox.focus()}getPreserveCase(){return this.preserveCase.checked}setPreserveCase(e){this.preserveCase.checked=e}focusOnPreserve(){this.preserveCase.focus()}validate(){this.inputBox&&this.inputBox.validate()}set width(e){this.inputBox.paddingRight=this.cachedOptionsWidth,this.inputBox.width=e,this.domNode.style.width=e+"px"}dispose(){super.dispose()}};Ee();Ql();var YT=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},ZT=function(s,e){return function(t,i){e(t,i,s)}},JT="suggestWidgetVisible",Tc="historyNavigationWidget",QT="historyNavigationForwardsEnabled",eE="historyNavigationBackwardsEnabled";function TD(s,e,t){new pe(t,e).bindTo(s)}function ED(s,e){return s.createScoped(e.target)}function tE(s,e){return s.getContext(document.activeElement).getValue(e)}function iE(s,e){let t=ED(s,e);TD(t,e,Tc);let i=new pe(QT,!0).bindTo(t),n=new pe(eE,!0).bindTo(t);return{scopedContextKeyService:t,historyNavigationForwardsEnablement:i,historyNavigationBackwardsEnablement:n}}var Xp=class extends By{constructor(e,t,i,n,o=!1){super(e,t,o,i);this._register(iE(n,{target:this.inputBox.element,historyNavigator:this.inputBox}).scopedContextKeyService)}};Xp=YT([ZT(3,ie)],Xp);var Yp=class extends Vy{constructor(e,t,i,n,o=!1){super(e,t,o,i);this._register(iE(n,{target:this.inputBox.element,historyNavigator:this.inputBox}).scopedContextKeyService)}};Yp=YT([ZT(3,ie)],Yp);Zt.registerCommandAndKeybindingRule({id:"history.showPrevious",weight:200,when:O.and(O.has(Tc),O.equals(eE,!0),O.equals(JT,!1)),primary:16,secondary:[528],handler:s=>{let e=tE(s.get(ie),Tc);e&&e.historyNavigator.showPreviousValue()}});Zt.registerCommandAndKeybindingRule({id:"history.showNext",weight:200,when:O.and(O.has(Tc),O.equals(QT,!0),O.equals(JT,!1)),primary:18,secondary:[530],handler:s=>{let e=tE(s.get(ie),Tc);e&&e.historyNavigator.showNextValue()}});function Gy(s){var e,t;return((e=s.lookupKeybinding("history.showPrevious"))===null||e===void 0?void 0:e.getElectronAccelerator())==="Up"&&((t=s.lookupKeybinding("history.showNext"))===null||t===void 0?void 0:t.getElectronAccelerator())==="Down"}mt();Ne();var ID=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},kD=Rt("find-selection",K.selection,u("findSelectionIcon","Icon for 'Find in Selection' in the editor find widget.")),nE=Rt("find-collapsed",K.chevronRight,u("findCollapsedIcon","Icon to indicate that the editor find widget is collapsed.")),oE=Rt("find-expanded",K.chevronDown,u("findExpandedIcon","Icon to indicate that the editor find widget is expanded.")),LD=Rt("find-replace",K.replace,u("findReplaceIcon","Icon for 'Replace' in the editor find widget.")),PD=Rt("find-replace-all",K.replaceAll,u("findReplaceAllIcon","Icon for 'Replace All' in the editor find widget.")),MD=Rt("find-previous-match",K.arrowUp,u("findPreviousMatchIcon","Icon for 'Find Previous' in the editor find widget.")),DD=Rt("find-next-match",K.arrowDown,u("findNextMatchIcon","Icon for 'Find Next' in the editor find widget.")),RD=u("label.find","Find"),AD=u("placeholder.find","Find"),FD=u("label.previousMatchButton","Previous Match"),ND=u("label.nextMatchButton","Next Match"),zD=u("label.toggleSelectionFind","Find in Selection"),OD=u("label.closeButton","Close"),HD=u("label.replace","Replace"),WD=u("placeholder.replace","Replace"),BD=u("label.replaceButton","Replace"),VD=u("label.replaceAllButton","Replace All"),GD=u("label.toggleReplaceButton","Toggle Replace"),jD=u("title.matchesCountLimit","Only the first {0} results are highlighted, but all find operations work on the entire text.",lo),UD=u("label.matchesLocation","{0} of {1}"),rE=u("label.noResults","No results"),co=419,$D=275,KD=$D-54,Ec=69,qD=33,sE="ctrlEnterReplaceAll.windows.donotask",aE=bi?256:2048,Zp=class{constructor(e){this.afterLineNumber=e,this.heightInPx=qD,this.suppressMouseDown=!1,this.domNode=document.createElement("div"),this.domNode.className="dock-find-viewzone"}};function lE(s,e,t){let i=!!e.match(/\n/);if(t&&i&&t.selectionStart>0){s.stopPropagation();return}}function dE(s,e,t){let i=!!e.match(/\n/);if(t&&i&&t.selectionEnd<t.value.length){s.stopPropagation();return}}var pl=class extends Ti{constructor(e,t,i,n,o,r,a,l,c){super();this._cachedHeight=null,this._revealTimeouts=[],this._codeEditor=e,this._controller=t,this._state=i,this._contextViewProvider=n,this._keybindingService=o,this._contextKeyService=r,this._storageService=l,this._notificationService=c,this._ctrlEnterReplaceAllWarningPrompted=!!l.getBoolean(sE,0),this._isVisible=!1,this._isReplaceVisible=!1,this._ignoreChangeEvent=!1,this._updateHistoryDelayer=new Tn(500),this._register(We(()=>this._updateHistoryDelayer.cancel())),this._register(this._state.onFindReplaceStateChange(d=>this._onStateChanged(d))),this._buildDomNode(),this._updateButtons(),this._tryUpdateWidgetWidth(),this._findInput.inputBox.layout(),this._register(this._codeEditor.onDidChangeConfiguration(d=>{if(d.hasChanged(81)&&(this._codeEditor.getOption(81)&&this._state.change({isReplaceRevealed:!1},!1),this._updateButtons()),d.hasChanged(131)&&this._tryUpdateWidgetWidth(),d.hasChanged(2)&&this.updateAccessibilitySupport(),d.hasChanged(35)){let h=this._codeEditor.getOption(35).addExtraSpaceOnTop;h&&!this._viewZone&&(this._viewZone=new Zp(0),this._showViewZone()),!h&&this._viewZone&&this._removeViewZone()}})),this.updateAccessibilitySupport(),this._register(this._codeEditor.onDidChangeCursorSelection(()=>{this._isVisible&&this._updateToggleSelectionFindButton()})),this._register(this._codeEditor.onDidFocusEditorWidget(()=>ID(this,void 0,void 0,function*(){if(this._isVisible){let d=yield this._controller.getGlobalBufferTerm();d&&d!==this._state.searchString&&(this._state.change({searchString:d},!1),this._findInput.select())}}))),this._findInputFocused=hl.bindTo(r),this._findFocusTracker=this._register($m(this._findInput.inputBox.inputElement)),this._register(this._findFocusTracker.onDidFocus(()=>{this._findInputFocused.set(!0),this._updateSearchScope()})),this._register(this._findFocusTracker.onDidBlur(()=>{this._findInputFocused.set(!1)})),this._replaceInputFocused=fc.bindTo(r),this._replaceFocusTracker=this._register($m(this._replaceInput.inputBox.inputElement)),this._register(this._replaceFocusTracker.onDidFocus(()=>{this._replaceInputFocused.set(!0),this._updateSearchScope()})),this._register(this._replaceFocusTracker.onDidBlur(()=>{this._replaceInputFocused.set(!1)})),this._codeEditor.addOverlayWidget(this),this._codeEditor.getOption(35).addExtraSpaceOnTop&&(this._viewZone=new Zp(0)),this._applyTheme(a.getColorTheme()),this._register(a.onDidColorThemeChange(this._applyTheme.bind(this))),this._register(this._codeEditor.onDidChangeModel(()=>{!this._isVisible||(this._viewZoneId=void 0)})),this._register(this._codeEditor.onDidScrollChange(d=>{if(d.scrollTopChanged){this._layoutViewZone();return}setTimeout(()=>{this._layoutViewZone()},0)}))}getId(){return pl.ID}getDomNode(){return this._domNode}getPosition(){return this._isVisible?{preference:0}:null}_onStateChanged(e){if(e.searchString){try{this._ignoreChangeEvent=!0,this._findInput.setValue(this._state.searchString)}finally{this._ignoreChangeEvent=!1}this._updateButtons()}if(e.replaceString&&(this._replaceInput.inputBox.value=this._state.replaceString),e.isRevealed&&(this._state.isRevealed?this._reveal():this._hide(!0)),e.isReplaceRevealed&&(this._state.isReplaceRevealed?!this._codeEditor.getOption(81)&&!this._isReplaceVisible&&(this._isReplaceVisible=!0,this._replaceInput.width=Kn(this._findInput.domNode),this._updateButtons(),this._replaceInput.inputBox.layout()):this._isReplaceVisible&&(this._isReplaceVisible=!1,this._updateButtons())),(e.isRevealed||e.isReplaceRevealed)&&(this._state.isRevealed||this._state.isReplaceRevealed)&&this._tryUpdateHeight()&&this._showViewZone(),e.isRegex&&this._findInput.setRegex(this._state.isRegex),e.wholeWord&&this._findInput.setWholeWords(this._state.wholeWord),e.matchCase&&this._findInput.setCaseSensitive(this._state.matchCase),e.preserveCase&&this._replaceInput.setPreserveCase(this._state.preserveCase),e.searchScope&&(this._state.searchScope?this._toggleSelectionFind.checked=!0:this._toggleSelectionFind.checked=!1,this._updateToggleSelectionFindButton()),e.searchString||e.matchesCount||e.matchesPosition){let t=this._state.searchString.length>0&&this._state.matchesCount===0;this._domNode.classList.toggle("no-results",t),this._updateMatchesCount(),this._updateButtons()}(e.searchString||e.currentMatch)&&this._layoutViewZone(),e.updateHistory&&this._delayedUpdateHistory(),e.loop&&this._updateButtons()}_delayedUpdateHistory(){this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(void 0,de)}_updateHistory(){this._state.searchString&&this._findInput.inputBox.addToHistory(),this._state.replaceString&&this._replaceInput.inputBox.addToHistory()}_updateMatchesCount(){this._matchesCount.style.minWidth=Ec+"px",this._state.matchesCount>=lo?this._matchesCount.title=jD:this._matchesCount.title="",this._matchesCount.firstChild&&this._matchesCount.removeChild(this._matchesCount.firstChild);let e;if(this._state.matchesCount>0){let t=String(this._state.matchesCount);this._state.matchesCount>=lo&&(t+="+");let i=String(this._state.matchesPosition);i==="0"&&(i="?"),e=Ui(UD,i,t)}else e=rE;this._matchesCount.appendChild(document.createTextNode(e)),_t(this._getAriaLabel(e,this._state.currentMatch,this._state.searchString)),Ec=Math.max(Ec,this._matchesCount.clientWidth)}_getAriaLabel(e,t,i){if(e===rE)return i===""?u("ariaSearchNoResultEmpty","{0} found",e):u("ariaSearchNoResult","{0} found for '{1}'",e,i);if(t){let n=u("ariaSearchNoResultWithLineNum","{0} found for '{1}', at {2}",e,i,t.startLineNumber+":"+t.startColumn),o=this._codeEditor.getModel();return o&&t.startLineNumber<=o.getLineCount()&&t.startLineNumber>=1?`${o.getLineContent(t.startLineNumber)}, ${n}`:n}return u("ariaSearchNoResultWithLineNumNoCurrentMatch","{0} found for '{1}'",e,i)}_updateToggleSelectionFindButton(){let e=this._codeEditor.getSelection(),t=e?e.startLineNumber!==e.endLineNumber||e.startColumn!==e.endColumn:!1,i=this._toggleSelectionFind.checked;this._isVisible&&(i||t)?this._toggleSelectionFind.enable():this._toggleSelectionFind.disable()}_updateButtons(){this._findInput.setEnabled(this._isVisible),this._replaceInput.setEnabled(this._isVisible&&this._isReplaceVisible),this._updateToggleSelectionFindButton(),this._closeBtn.setEnabled(this._isVisible);let e=this._state.searchString.length>0,t=!!this._state.matchesCount;this._prevBtn.setEnabled(this._isVisible&&e&&t&&this._state.canNavigateBack()),this._nextBtn.setEnabled(this._isVisible&&e&&t&&this._state.canNavigateForward()),this._replaceBtn.setEnabled(this._isVisible&&this._isReplaceVisible&&e),this._replaceAllBtn.setEnabled(this._isVisible&&this._isReplaceVisible&&e),this._domNode.classList.toggle("replaceToggled",this._isReplaceVisible),this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);let i=!this._codeEditor.getOption(81);this._toggleReplaceBtn.setEnabled(this._isVisible&&i)}_reveal(){if(this._revealTimeouts.forEach(e=>{clearTimeout(e)}),this._revealTimeouts=[],!this._isVisible){this._isVisible=!0;let e=this._codeEditor.getSelection();switch(this._codeEditor.getOption(35).autoFindInSelection){case"always":this._toggleSelectionFind.checked=!0;break;case"never":this._toggleSelectionFind.checked=!1;break;case"multiline":{let i=!!e&&e.startLineNumber!==e.endLineNumber;this._toggleSelectionFind.checked=i;break}default:break}this._tryUpdateWidgetWidth(),this._updateButtons(),this._revealTimeouts.push(setTimeout(()=>{this._domNode.classList.add("visible"),this._domNode.setAttribute("aria-hidden","false")},0)),this._revealTimeouts.push(setTimeout(()=>{this._findInput.validate()},200)),this._codeEditor.layoutOverlayWidget(this);let t=!0;if(this._codeEditor.getOption(35).seedSearchStringFromSelection&&e){let i=this._codeEditor.getDomNode();if(i){let n=ni(i),o=this._codeEditor.getScrolledVisiblePosition(e.getStartPosition()),r=n.left+(o?o.left:0),a=o?o.top:0;if(this._viewZone&&a<this._viewZone.heightInPx){e.endLineNumber>e.startLineNumber&&(t=!1);let l=pv(this._domNode).left;r>l&&(t=!1);let c=this._codeEditor.getScrolledVisiblePosition(e.getEndPosition());n.left+(c?c.left:0)>l&&(t=!1)}}}this._showViewZone(t)}}_hide(e){this._revealTimeouts.forEach(t=>{clearTimeout(t)}),this._revealTimeouts=[],this._isVisible&&(this._isVisible=!1,this._updateButtons(),this._domNode.classList.remove("visible"),this._domNode.setAttribute("aria-hidden","true"),this._findInput.clearMessage(),e&&this._codeEditor.focus(),this._codeEditor.layoutOverlayWidget(this),this._removeViewZone())}_layoutViewZone(e){if(!this._codeEditor.getOption(35).addExtraSpaceOnTop){this._removeViewZone();return}if(!this._isVisible)return;let i=this._viewZone;this._viewZoneId!==void 0||!i||this._codeEditor.changeViewZones(n=>{i.heightInPx=this._getHeight(),this._viewZoneId=n.addZone(i),this._codeEditor.setScrollTop(e||this._codeEditor.getScrollTop()+i.heightInPx)})}_showViewZone(e=!0){if(!this._isVisible||!this._codeEditor.getOption(35).addExtraSpaceOnTop)return;this._viewZone===void 0&&(this._viewZone=new Zp(0));let i=this._viewZone;this._codeEditor.changeViewZones(n=>{if(this._viewZoneId!==void 0){let o=this._getHeight();if(o===i.heightInPx)return;let r=o-i.heightInPx;i.heightInPx=o,n.layoutZone(this._viewZoneId),e&&this._codeEditor.setScrollTop(this._codeEditor.getScrollTop()+r);return}else{let o=this._getHeight();if(o-=this._codeEditor.getOption(75).top,o<=0)return;i.heightInPx=o,this._viewZoneId=n.addZone(i),e&&this._codeEditor.setScrollTop(this._codeEditor.getScrollTop()+o)}})}_removeViewZone(){this._codeEditor.changeViewZones(e=>{this._viewZoneId!==void 0&&(e.removeZone(this._viewZoneId),this._viewZoneId=void 0,this._viewZone&&(this._codeEditor.setScrollTop(this._codeEditor.getScrollTop()-this._viewZone.heightInPx),this._viewZone=void 0))})}_applyTheme(e){let t={inputActiveOptionBorder:e.getColor(sd),inputActiveOptionBackground:e.getColor(ad),inputActiveOptionForeground:e.getColor(ld),inputBackground:e.getColor(Bh),inputForeground:e.getColor(Vh),inputBorder:e.getColor(Gh),inputValidationInfoBackground:e.getColor(Lv),inputValidationInfoForeground:e.getColor(Pv),inputValidationInfoBorder:e.getColor(Mv),inputValidationWarningBackground:e.getColor(Dv),inputValidationWarningForeground:e.getColor(Rv),inputValidationWarningBorder:e.getColor(Av),inputValidationErrorBackground:e.getColor(Fv),inputValidationErrorForeground:e.getColor(Nv),inputValidationErrorBorder:e.getColor(zv)};this._findInput.style(t),this._replaceInput.style(t),this._toggleSelectionFind.style(t)}_tryUpdateWidgetWidth(){if(!this._isVisible||!dv(this._domNode))return;let e=this._codeEditor.getLayoutInfo();if(e.contentWidth<=0){this._domNode.classList.add("hiddenEditor");return}else this._domNode.classList.contains("hiddenEditor")&&this._domNode.classList.remove("hiddenEditor");let i=e.width,n=e.minimap.minimapWidth,o=!1,r=!1,a=!1;if(this._resized&&Kn(this._domNode)>co){this._domNode.style.maxWidth=`${i-28-n-15}px`,this._replaceInput.width=Kn(this._findInput.domNode);return}if(co+28+n>=i&&(r=!0),co+28+n-Ec>=i&&(a=!0),co+28+n-Ec>=i+50&&(o=!0),this._domNode.classList.toggle("collapsed-find-widget",o),this._domNode.classList.toggle("narrow-find-widget",a),this._domNode.classList.toggle("reduced-find-widget",r),!a&&!o&&(this._domNode.style.maxWidth=`${i-28-n-15}px`),this._resized){this._findInput.inputBox.layout();let l=this._findInput.inputBox.element.clientWidth;l>0&&(this._replaceInput.width=l)}else this._isReplaceVisible&&(this._replaceInput.width=Kn(this._findInput.domNode))}_getHeight(){let e=0;return e+=4,e+=this._findInput.inputBox.height+2,this._isReplaceVisible&&(e+=4,e+=this._replaceInput.inputBox.height+2),e+=4,e}_tryUpdateHeight(){let e=this._getHeight();return this._cachedHeight!==null&&this._cachedHeight===e?!1:(this._cachedHeight=e,this._domNode.style.height=`${e}px`,!0)}focusFindInput(){this._findInput.select(),this._findInput.focus()}focusReplaceInput(){this._replaceInput.select(),this._replaceInput.focus()}highlightFindOptions(){this._findInput.highlightFindOptions()}_updateSearchScope(){if(!!this._codeEditor.hasModel()&&this._toggleSelectionFind.checked){let e=this._codeEditor.getSelections();e.map(t=>{t.endColumn===1&&t.endLineNumber>t.startLineNumber&&(t=t.setEndPosition(t.endLineNumber-1,this._codeEditor.getModel().getLineMaxColumn(t.endLineNumber-1)));let i=this._state.currentMatch;return t.startLineNumber!==t.endLineNumber&&!b.equalsRange(t,i)?t:null}).filter(t=>!!t),e.length&&this._state.change({searchScope:e},!0)}}_onFindInputMouseDown(e){e.middleButton&&e.stopPropagation()}_onFindInputKeyDown(e){if(e.equals(aE|3))if(this._keybindingService.dispatchEvent(e,e.target)){e.preventDefault();return}else{this._findInput.inputBox.insertAtCursor(`
`),e.preventDefault();return}if(e.equals(2)){this._isReplaceVisible?this._replaceInput.focus():this._findInput.focusOnCaseSensitive(),e.preventDefault();return}if(e.equals(2066)){this._codeEditor.focus(),e.preventDefault();return}if(e.equals(16))return lE(e,this._findInput.getValue(),this._findInput.domNode.querySelector("textarea"));if(e.equals(18))return dE(e,this._findInput.getValue(),this._findInput.domNode.querySelector("textarea"))}_onReplaceInputKeyDown(e){if(e.equals(aE|3))if(this._keybindingService.dispatchEvent(e,e.target)){e.preventDefault();return}else{fo&&ar&&!this._ctrlEnterReplaceAllWarningPrompted&&(this._notificationService.info(u("ctrlEnter.keybindingChanged","Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.")),this._ctrlEnterReplaceAllWarningPrompted=!0,this._storageService.store(sE,!0,0,0)),this._replaceInput.inputBox.insertAtCursor(`
`),e.preventDefault();return}if(e.equals(2)){this._findInput.focusOnCaseSensitive(),e.preventDefault();return}if(e.equals(1026)){this._findInput.focus(),e.preventDefault();return}if(e.equals(2066)){this._codeEditor.focus(),e.preventDefault();return}if(e.equals(16))return lE(e,this._replaceInput.inputBox.value,this._replaceInput.inputBox.element.querySelector("textarea"));if(e.equals(18))return dE(e,this._replaceInput.inputBox.value,this._replaceInput.inputBox.element.querySelector("textarea"))}getVerticalSashLeft(e){return 0}_keybindingLabelFor(e){let t=this._keybindingService.lookupKeybinding(e);return t?` (${t.getLabel()})`:""}_buildDomNode(){this._findInput=this._register(new Xp(null,this._contextViewProvider,{width:KD,label:RD,placeholder:AD,appendCaseSensitiveLabel:this._keybindingLabelFor(ze.ToggleCaseSensitiveCommand),appendWholeWordsLabel:this._keybindingLabelFor(ze.ToggleWholeWordCommand),appendRegexLabel:this._keybindingLabelFor(ze.ToggleRegexCommand),validation:l=>{if(l.length===0||!this._findInput.getRegex())return null;try{return new RegExp(l,"gu"),null}catch(c){return{content:c.message}}},flexibleHeight:!0,flexibleWidth:!0,flexibleMaxHeight:118,showHistoryHint:()=>Gy(this._keybindingService)},this._contextKeyService,!0)),this._findInput.setRegex(!!this._state.isRegex),this._findInput.setCaseSensitive(!!this._state.matchCase),this._findInput.setWholeWords(!!this._state.wholeWord),this._register(this._findInput.onKeyDown(l=>this._onFindInputKeyDown(l))),this._register(this._findInput.inputBox.onDidChange(()=>{this._ignoreChangeEvent||this._state.change({searchString:this._findInput.getValue()},!0)})),this._register(this._findInput.onDidOptionChange(()=>{this._state.change({isRegex:this._findInput.getRegex(),wholeWord:this._findInput.getWholeWords(),matchCase:this._findInput.getCaseSensitive()},!0)})),this._register(this._findInput.onCaseSensitiveKeyDown(l=>{l.equals(1026)&&this._isReplaceVisible&&(this._replaceInput.focus(),l.preventDefault())})),this._register(this._findInput.onRegexKeyDown(l=>{l.equals(2)&&this._isReplaceVisible&&(this._replaceInput.focusOnPreserve(),l.preventDefault())})),this._register(this._findInput.inputBox.onDidHeightChange(l=>{this._tryUpdateHeight()&&this._showViewZone()})),Nl&&this._register(this._findInput.onMouseDown(l=>this._onFindInputMouseDown(l))),this._matchesCount=document.createElement("div"),this._matchesCount.className="matchesCount",this._updateMatchesCount(),this._prevBtn=this._register(new Hs({label:FD+this._keybindingLabelFor(ze.PreviousMatchFindAction),icon:MD,onTrigger:()=>{this._codeEditor.getAction(ze.PreviousMatchFindAction).run().then(void 0,de)}})),this._nextBtn=this._register(new Hs({label:ND+this._keybindingLabelFor(ze.NextMatchFindAction),icon:DD,onTrigger:()=>{this._codeEditor.getAction(ze.NextMatchFindAction).run().then(void 0,de)}}));let i=document.createElement("div");i.className="find-part",i.appendChild(this._findInput.domNode);let n=document.createElement("div");n.className="find-actions",i.appendChild(n),n.appendChild(this._matchesCount),n.appendChild(this._prevBtn.domNode),n.appendChild(this._nextBtn.domNode),this._toggleSelectionFind=this._register(new Ko({icon:kD,title:zD+this._keybindingLabelFor(ze.ToggleSearchScopeCommand),isChecked:!1})),this._register(this._toggleSelectionFind.onChange(()=>{if(this._toggleSelectionFind.checked){if(this._codeEditor.hasModel()){let l=this._codeEditor.getSelections();l.map(c=>(c.endColumn===1&&c.endLineNumber>c.startLineNumber&&(c=c.setEndPosition(c.endLineNumber-1,this._codeEditor.getModel().getLineMaxColumn(c.endLineNumber-1))),c.isEmpty()?null:c)).filter(c=>!!c),l.length&&this._state.change({searchScope:l},!0)}}else this._state.change({searchScope:null},!0)})),n.appendChild(this._toggleSelectionFind.domNode),this._closeBtn=this._register(new Hs({label:OD+this._keybindingLabelFor(ze.CloseFindWidgetCommand),icon:du,onTrigger:()=>{this._state.change({isRevealed:!1,searchScope:null},!1)},onKeyDown:l=>{l.equals(2)&&this._isReplaceVisible&&(this._replaceBtn.isEnabled()?this._replaceBtn.focus():this._codeEditor.focus(),l.preventDefault())}})),n.appendChild(this._closeBtn.domNode),this._replaceInput=this._register(new Yp(null,void 0,{label:HD,placeholder:WD,appendPreserveCaseLabel:this._keybindingLabelFor(ze.TogglePreserveCaseCommand),history:[],flexibleHeight:!0,flexibleWidth:!0,flexibleMaxHeight:118,showHistoryHint:()=>Gy(this._keybindingService)},this._contextKeyService,!0)),this._replaceInput.setPreserveCase(!!this._state.preserveCase),this._register(this._replaceInput.onKeyDown(l=>this._onReplaceInputKeyDown(l))),this._register(this._replaceInput.inputBox.onDidChange(()=>{this._state.change({replaceString:this._replaceInput.inputBox.value},!1)})),this._register(this._replaceInput.inputBox.onDidHeightChange(l=>{this._isReplaceVisible&&this._tryUpdateHeight()&&this._showViewZone()})),this._register(this._replaceInput.onDidOptionChange(()=>{this._state.change({preserveCase:this._replaceInput.getPreserveCase()},!0)})),this._register(this._replaceInput.onPreserveCaseKeyDown(l=>{l.equals(2)&&(this._prevBtn.isEnabled()?this._prevBtn.focus():this._nextBtn.isEnabled()?this._nextBtn.focus():this._toggleSelectionFind.enabled?this._toggleSelectionFind.focus():this._closeBtn.isEnabled()&&this._closeBtn.focus(),l.preventDefault())})),this._replaceBtn=this._register(new Hs({label:BD+this._keybindingLabelFor(ze.ReplaceOneAction),icon:LD,onTrigger:()=>{this._controller.replace()},onKeyDown:l=>{l.equals(1026)&&(this._closeBtn.focus(),l.preventDefault())}})),this._replaceAllBtn=this._register(new Hs({label:VD+this._keybindingLabelFor(ze.ReplaceAllAction),icon:PD,onTrigger:()=>{this._controller.replaceAll()}}));let o=document.createElement("div");o.className="replace-part",o.appendChild(this._replaceInput.domNode);let r=document.createElement("div");r.className="replace-actions",o.appendChild(r),r.appendChild(this._replaceBtn.domNode),r.appendChild(this._replaceAllBtn.domNode),this._toggleReplaceBtn=this._register(new Hs({label:GD,className:"codicon toggle left",onTrigger:()=>{this._state.change({isReplaceRevealed:!this._isReplaceVisible},!1),this._isReplaceVisible&&(this._replaceInput.width=Kn(this._findInput.domNode),this._replaceInput.inputBox.layout()),this._showViewZone()}})),this._toggleReplaceBtn.setExpanded(this._isReplaceVisible),this._domNode=document.createElement("div"),this._domNode.className="editor-widget find-widget",this._domNode.setAttribute("aria-hidden","true"),this._domNode.style.width=`${co}px`,this._domNode.appendChild(this._toggleReplaceBtn.domNode),this._domNode.appendChild(i),this._domNode.appendChild(o),this._resizeSash=new ko(this._domNode,this,{orientation:0,size:2}),this._resized=!1;let a=co;this._register(this._resizeSash.onDidStart(()=>{a=Kn(this._domNode)})),this._register(this._resizeSash.onDidChange(l=>{this._resized=!0;let c=a+l.startX-l.currentX;if(c<co)return;let d=parseFloat(uv(this._domNode).maxWidth)||0;c>d||(this._domNode.style.width=`${c}px`,this._isReplaceVisible&&(this._replaceInput.width=Kn(this._findInput.domNode)),this._findInput.inputBox.layout(),this._tryUpdateHeight())})),this._register(this._resizeSash.onDidReset(()=>{let l=Kn(this._domNode);if(l<co)return;let c=co;if(!this._resized||l===co){let d=this._codeEditor.getLayoutInfo();c=d.width-28-d.minimap.minimapWidth-15,this._resized=!0}this._domNode.style.width=`${c}px`,this._isReplaceVisible&&(this._replaceInput.width=Kn(this._findInput.domNode)),this._findInput.inputBox.layout()}))}updateAccessibilitySupport(){let e=this._codeEditor.getOption(2);this._findInput.setFocusInputOnOptionClick(e!==2)}};pl.ID="editor.contrib.findWidget";var Hs=class extends Ti{constructor(e){super();this._opts=e;let t="button";this._opts.className&&(t=t+" "+this._opts.className),this._opts.icon&&(t=t+" "+ot.asClassName(this._opts.icon)),this._domNode=document.createElement("div"),this._domNode.title=this._opts.label,this._domNode.tabIndex=0,this._domNode.className=t,this._domNode.setAttribute("role","button"),this._domNode.setAttribute("aria-label",this._opts.label),this.onclick(this._domNode,i=>{this._opts.onTrigger(),i.preventDefault()}),this.onkeydown(this._domNode,i=>{if(i.equals(10)||i.equals(3)){this._opts.onTrigger(),i.preventDefault();return}this._opts.onKeyDown&&this._opts.onKeyDown(i)})}get domNode(){return this._domNode}isEnabled(){return this._domNode.tabIndex>=0}focus(){this._domNode.focus()}setEnabled(e){this._domNode.classList.toggle("disabled",!e),this._domNode.setAttribute("aria-disabled",String(!e)),this._domNode.tabIndex=e?0:-1}setExpanded(e){this._domNode.setAttribute("aria-expanded",String(!!e)),e?(this._domNode.classList.remove(...ot.asClassNameArray(nE)),this._domNode.classList.add(...ot.asClassNameArray(oE))):(this._domNode.classList.remove(...ot.asClassNameArray(oE)),this._domNode.classList.add(...ot.asClassNameArray(nE)))}};Me((s,e)=>{let t=(f,v)=>{v&&e.addRule(`.monaco-editor ${f} { background-color: ${v}; }`)};t(".findMatch",s.getColor(Kv)),t(".currentFindMatch",s.getColor($v)),t(".findScope",s.getColor(qv));let i=s.getColor(cn);t(".find-widget",i);let n=s.getColor(yr);n&&e.addRule(`.monaco-editor .find-widget { box-shadow: 0 0 8px 2px ${n}; }`);let o=s.getColor(Yv);o&&e.addRule(`.monaco-editor .findMatch { border: 1px ${s.type==="hc"?"dotted":"solid"} ${o}; box-sizing: border-box; }`);let r=s.getColor(Xv);r&&e.addRule(`.monaco-editor .currentFindMatch { border: 2px solid ${r}; padding: 1px; box-sizing: border-box; }`);let a=s.getColor(Zv);a&&e.addRule(`.monaco-editor .findScope { border: 1px ${s.type==="hc"?"dashed":"solid"} ${a}; }`);let l=s.getColor(dn);l&&e.addRule(`.monaco-editor .find-widget { border: 1px solid ${l}; }`);let c=s.getColor(Ta);c&&e.addRule(`.monaco-editor .find-widget { color: ${c}; }`);let d=s.getColor(Iv);d&&e.addRule(`.monaco-editor .find-widget.no-results .matchesCount { color: ${d}; }`);let h=s.getColor(Gv);if(h)e.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${h}; }`);else{let f=s.getColor(Ea);f&&e.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${f}; }`)}let p=s.getColor(lx);p&&e.addRule(`
		.monaco-editor .find-widget .button:not(.disabled):hover,
		.monaco-editor .find-widget .codicon-find-selection:hover {
			background-color: ${p} !important;
		}
	`);let m=s.getColor(kv);m&&e.addRule(`.monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: ${m}; }`)});Q();ri();Ee();Ki();Ne();var cE=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},ho=function(s,e){return function(t,i){e(t,i,s)}},Ws=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},XD=524288;function jy(s,e="single",t=!1){if(!s.hasModel())return null;let i=s.getSelection();if(e==="single"&&i.startLineNumber===i.endLineNumber||e==="multiple"){if(i.isEmpty()){let n=s.getConfiguredWordAtPosition(i.getStartPosition());if(n&&t===!1)return n.word}else if(s.getModel().getValueLengthInRange(i)<XD)return s.getModel().getValueInRange(i)}return null}var vi=class hE extends z{constructor(e,t,i,n){super();this._editor=e,this._findWidgetVisible=$o.bindTo(t),this._contextKeyService=t,this._storageService=i,this._clipboardService=n,this._updateHistoryDelayer=new Tn(500),this._state=this._register(new Wy),this.loadQueryState(),this._register(this._state.onFindReplaceStateChange(o=>this._onStateChanged(o))),this._model=null,this._register(this._editor.onDidChangeModel(()=>{let o=this._editor.getModel()&&this._state.isRevealed;this.disposeModel(),this._state.change({searchScope:null,matchCase:this._storageService.getBoolean("editor.matchCase",1,!1),wholeWord:this._storageService.getBoolean("editor.wholeWord",1,!1),isRegex:this._storageService.getBoolean("editor.isRegex",1,!1),preserveCase:this._storageService.getBoolean("editor.preserveCase",1,!1)},!1),o&&this._start({forceRevealReplace:!1,seedSearchStringFromSelection:"none",seedSearchStringFromNonEmptySelection:!1,seedSearchStringFromGlobalClipboard:!1,shouldFocus:0,shouldAnimate:!1,updateSearchScope:!1,loop:this._editor.getOption(35).loop})}))}get editor(){return this._editor}static get(e){return e.getContribution(hE.ID)}dispose(){this.disposeModel(),super.dispose()}disposeModel(){this._model&&(this._model.dispose(),this._model=null)}_onStateChanged(e){this.saveQueryState(e),e.isRevealed&&(this._state.isRevealed?this._findWidgetVisible.set(!0):(this._findWidgetVisible.reset(),this.disposeModel())),e.searchString&&this.setGlobalBufferTerm(this._state.searchString)}saveQueryState(e){e.isRegex&&this._storageService.store("editor.isRegex",this._state.actualIsRegex,1,0),e.wholeWord&&this._storageService.store("editor.wholeWord",this._state.actualWholeWord,1,0),e.matchCase&&this._storageService.store("editor.matchCase",this._state.actualMatchCase,1,0),e.preserveCase&&this._storageService.store("editor.preserveCase",this._state.actualPreserveCase,1,0)}loadQueryState(){this._state.change({matchCase:this._storageService.getBoolean("editor.matchCase",1,this._state.matchCase),wholeWord:this._storageService.getBoolean("editor.wholeWord",1,this._state.wholeWord),isRegex:this._storageService.getBoolean("editor.isRegex",1,this._state.isRegex),preserveCase:this._storageService.getBoolean("editor.preserveCase",1,this._state.preserveCase)},!1)}isFindInputFocused(){return!!hl.getValue(this._contextKeyService)}getState(){return this._state}closeFindWidget(){this._state.change({isRevealed:!1,searchScope:null},!1),this._editor.focus()}toggleCaseSensitive(){this._state.change({matchCase:!this._state.matchCase},!1),this._state.isRevealed||this.highlightFindOptions()}toggleWholeWords(){this._state.change({wholeWord:!this._state.wholeWord},!1),this._state.isRevealed||this.highlightFindOptions()}toggleRegex(){this._state.change({isRegex:!this._state.isRegex},!1),this._state.isRevealed||this.highlightFindOptions()}togglePreserveCase(){this._state.change({preserveCase:!this._state.preserveCase},!1),this._state.isRevealed||this.highlightFindOptions()}toggleSearchScope(){if(this._state.searchScope)this._state.change({searchScope:null},!0);else if(this._editor.hasModel()){let e=this._editor.getSelections();e.map(t=>(t.endColumn===1&&t.endLineNumber>t.startLineNumber&&(t=t.setEndPosition(t.endLineNumber-1,this._editor.getModel().getLineMaxColumn(t.endLineNumber-1))),t.isEmpty()?null:t)).filter(t=>!!t),e.length&&this._state.change({searchScope:e},!0)}}setSearchString(e){this._state.isRegex&&(e=So(e)),this._state.change({searchString:e},!1)}highlightFindOptions(e=!1){}_start(e,t){return Ws(this,void 0,void 0,function*(){if(this.disposeModel(),!this._editor.hasModel())return;let i=Object.assign(Object.assign({},t),{isRevealed:!0});if(e.seedSearchStringFromSelection==="single"){let n=jy(this._editor,e.seedSearchStringFromSelection,e.seedSearchStringFromNonEmptySelection);n&&(this._state.isRegex?i.searchString=So(n):i.searchString=n)}else if(e.seedSearchStringFromSelection==="multiple"&&!e.updateSearchScope){let n=jy(this._editor,e.seedSearchStringFromSelection);n&&(i.searchString=n)}if(!i.searchString&&e.seedSearchStringFromGlobalClipboard){let n=yield this.getGlobalBufferTerm();if(!this._editor.hasModel())return;n&&(i.searchString=n)}if(e.forceRevealReplace||i.isReplaceRevealed?i.isReplaceRevealed=!0:this._findWidgetVisible.get()||(i.isReplaceRevealed=!1),e.updateSearchScope){let n=this._editor.getSelections();n.some(o=>!o.isEmpty())&&(i.searchScope=n)}i.loop=e.loop,this._state.change(i,!1),this._model||(this._model=new Os(this._editor,this._state))})}start(e,t){return this._start(e,t)}moveToNextMatch(){return this._model?(this._model.moveToNextMatch(),!0):!1}moveToPrevMatch(){return this._model?(this._model.moveToPrevMatch(),!0):!1}replace(){return this._model?(this._model.replace(),!0):!1}replaceAll(){return this._model?(this._model.replaceAll(),!0):!1}selectAllMatches(){return this._model?(this._model.selectAllMatches(),this._editor.focus(),!0):!1}getGlobalBufferTerm(){return Ws(this,void 0,void 0,function*(){return this._editor.getOption(35).globalFindClipboard&&this._editor.hasModel()&&!this._editor.getModel().isTooLargeForSyncing()?this._clipboardService.readFindText():""})}setGlobalBufferTerm(e){this._editor.getOption(35).globalFindClipboard&&this._editor.hasModel()&&!this._editor.getModel().isTooLargeForSyncing()&&this._clipboardService.writeFindText(e)}};vi.ID="editor.contrib.findController";vi=cE([ho(1,ie),ho(2,li),ho(3,us)],vi);var Uy=class extends vi{constructor(e,t,i,n,o,r,a,l){super(e,i,a,l);this._contextViewService=t,this._keybindingService=n,this._themeService=o,this._notificationService=r,this._widget=null,this._findOptionsWidget=null}_start(e,t){let i=Object.create(null,{_start:{get:()=>super._start}});return Ws(this,void 0,void 0,function*(){this._widget||this._createFindWidget();let n=this._editor.getSelection(),o=!1;switch(this._editor.getOption(35).autoFindInSelection){case"always":o=!0;break;case"never":o=!1;break;case"multiline":{o=!!n&&n.startLineNumber!==n.endLineNumber;break}default:break}e.updateSearchScope=e.updateSearchScope||o,yield i._start.call(this,e,t),this._widget&&(e.shouldFocus===2?this._widget.focusReplaceInput():e.shouldFocus===1&&this._widget.focusFindInput())})}highlightFindOptions(e=!1){this._widget||this._createFindWidget(),this._state.isRevealed&&!e?this._widget.highlightFindOptions():this._findOptionsWidget.highlightFindOptions()}_createFindWidget(){this._widget=this._register(new pl(this._editor,this,this._state,this._contextViewService,this._keybindingService,this._contextKeyService,this._themeService,this._storageService,this._notificationService)),this._findOptionsWidget=this._register(new ul(this._editor,this._state,this._keybindingService,this._themeService))}};Uy=cE([ho(1,hu),ho(2,ie),ho(3,rt),ho(4,Nt),ho(5,Ze),ho(6,li),ho(7,us)],Uy);var YD=qm(new Km({id:ze.StartFindAction,label:u("startFindAction","Find"),alias:"Find",precondition:O.or(S.focus,O.has("editorIsOpen")),kbOpts:{kbExpr:null,primary:2084,weight:100},menuOpts:{menuId:se.MenubarEditMenu,group:"3_find",title:u({key:"miFind",comment:["&& denotes a mnemonic"]},"&&Find"),order:1}}));YD.addImplementation(0,(s,e,t)=>{let i=vi.get(e);return i?i.start({forceRevealReplace:!1,seedSearchStringFromSelection:e.getOption(35).seedSearchStringFromSelection!=="never"?"single":"none",seedSearchStringFromNonEmptySelection:e.getOption(35).seedSearchStringFromSelection==="selection",seedSearchStringFromGlobalClipboard:e.getOption(35).globalFindClipboard,shouldFocus:1,shouldAnimate:!0,updateSearchScope:!1,loop:e.getOption(35).loop}):!1});var ZD={description:"Open a new In-Editor Find Widget.",args:[{name:"Open a new In-Editor Find Widget args",schema:{properties:{searchString:{type:"string"},replaceString:{type:"string"},regex:{type:"boolean"},regexOverride:{type:"number",description:u("actions.find.isRegexOverride",`Overrides "Use Regular Expression" flag.
The flag will not be saved for the future.
0: Do Nothing
1: True
2: False`)},wholeWord:{type:"boolean"},wholeWordOverride:{type:"number",description:u("actions.find.wholeWordOverride",`Overrides "Match Whole Word" flag.
The flag will not be saved for the future.
0: Do Nothing
1: True
2: False`)},matchCase:{type:"boolean"},matchCaseOverride:{type:"number",description:u("actions.find.matchCaseOverride",`Overrides "Math Case" flag.
The flag will not be saved for the future.
0: Do Nothing
1: True
2: False`)},preserveCase:{type:"boolean"},preserveCaseOverride:{type:"number",description:u("actions.find.preserveCaseOverride",`Overrides "Preserve Case" flag.
The flag will not be saved for the future.
0: Do Nothing
1: True
2: False`)},findInSelection:{type:"boolean"}}}}]},uE=class extends F{constructor(){super({id:ze.StartFindWithArgs,label:u("startFindWithArgsAction","Find With Arguments"),alias:"Find With Arguments",precondition:void 0,kbOpts:{kbExpr:null,primary:0,weight:100},description:ZD})}run(e,t,i){return Ws(this,void 0,void 0,function*(){let n=vi.get(t);if(n){let o=i?{searchString:i.searchString,replaceString:i.replaceString,isReplaceRevealed:i.replaceString!==void 0,isRegex:i.isRegex,wholeWord:i.matchWholeWord,matchCase:i.isCaseSensitive,preserveCase:i.preserveCase}:{};yield n.start({forceRevealReplace:!1,seedSearchStringFromSelection:n.getState().searchString.length===0&&t.getOption(35).seedSearchStringFromSelection!=="never"?"single":"none",seedSearchStringFromNonEmptySelection:t.getOption(35).seedSearchStringFromSelection==="selection",seedSearchStringFromGlobalClipboard:!0,shouldFocus:1,shouldAnimate:!0,updateSearchScope:(i==null?void 0:i.findInSelection)||!1,loop:t.getOption(35).loop},o),n.setGlobalBufferTerm(n.getState().searchString)}})}},pE=class extends F{constructor(){super({id:ze.StartFindWithSelection,label:u("startFindWithSelectionAction","Find With Selection"),alias:"Find With Selection",precondition:void 0,kbOpts:{kbExpr:null,primary:0,mac:{primary:2083},weight:100}})}run(e,t){return Ws(this,void 0,void 0,function*(){let i=vi.get(t);i&&(yield i.start({forceRevealReplace:!1,seedSearchStringFromSelection:"multiple",seedSearchStringFromNonEmptySelection:!1,seedSearchStringFromGlobalClipboard:!1,shouldFocus:0,shouldAnimate:!0,updateSearchScope:!1,loop:t.getOption(35).loop}),i.setGlobalBufferTerm(i.getState().searchString))})}},$y=class extends F{run(e,t){return Ws(this,void 0,void 0,function*(){let i=vi.get(t);i&&!this._run(i)&&(yield i.start({forceRevealReplace:!1,seedSearchStringFromSelection:i.getState().searchString.length===0&&t.getOption(35).seedSearchStringFromSelection!=="never"?"single":"none",seedSearchStringFromNonEmptySelection:t.getOption(35).seedSearchStringFromSelection==="selection",seedSearchStringFromGlobalClipboard:!0,shouldFocus:0,shouldAnimate:!0,updateSearchScope:!1,loop:t.getOption(35).loop}),this._run(i))})}},mE=class extends $y{constructor(){super({id:ze.NextMatchFindAction,label:u("findNextMatchAction","Find Next"),alias:"Find Next",precondition:void 0,kbOpts:[{kbExpr:S.focus,primary:61,mac:{primary:2085,secondary:[61]},weight:100},{kbExpr:O.and(S.focus,hl),primary:3,weight:100}]})}_run(e){return e.moveToNextMatch()?(e.editor.pushUndoStop(),!0):!1}},gE=class extends $y{constructor(){super({id:ze.PreviousMatchFindAction,label:u("findPreviousMatchAction","Find Previous"),alias:"Find Previous",precondition:void 0,kbOpts:[{kbExpr:S.focus,primary:1085,mac:{primary:3109,secondary:[1085]},weight:100},{kbExpr:O.and(S.focus,hl),primary:1027,weight:100}]})}_run(e){return e.moveToPrevMatch()}},Ky=class extends F{run(e,t){return Ws(this,void 0,void 0,function*(){let i=vi.get(t);if(!i)return;let n=t.getOption(35).seedSearchStringFromSelection==="selection",o=null;t.getOption(35).seedSearchStringFromSelection!=="never"&&(o=jy(t,"single",n)),o&&i.setSearchString(o),this._run(i)||(yield i.start({forceRevealReplace:!1,seedSearchStringFromSelection:t.getOption(35).seedSearchStringFromSelection!=="never"?"single":"none",seedSearchStringFromNonEmptySelection:n,seedSearchStringFromGlobalClipboard:!1,shouldFocus:0,shouldAnimate:!0,updateSearchScope:!1,loop:t.getOption(35).loop}),this._run(i))})}},fE=class extends Ky{constructor(){super({id:ze.NextSelectionMatchFindAction,label:u("nextSelectionMatchFindAction","Find Next Selection"),alias:"Find Next Selection",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:2109,weight:100}})}_run(e){return e.moveToNextMatch()}},yE=class extends Ky{constructor(){super({id:ze.PreviousSelectionMatchFindAction,label:u("previousSelectionMatchFindAction","Find Previous Selection"),alias:"Find Previous Selection",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:3133,weight:100}})}_run(e){return e.moveToPrevMatch()}},JD=qm(new Km({id:ze.StartFindReplaceAction,label:u("startReplace","Replace"),alias:"Replace",precondition:O.or(S.focus,O.has("editorIsOpen")),kbOpts:{kbExpr:null,primary:2086,mac:{primary:2596},weight:100},menuOpts:{menuId:se.MenubarEditMenu,group:"3_find",title:u({key:"miReplace",comment:["&& denotes a mnemonic"]},"&&Replace"),order:2}}));JD.addImplementation(0,(s,e,t)=>{if(!e.hasModel()||e.getOption(81))return!1;let i=vi.get(e);if(!i)return!1;let n=e.getSelection(),o=i.isFindInputFocused(),r=!n.isEmpty()&&n.startLineNumber===n.endLineNumber&&e.getOption(35).seedSearchStringFromSelection!=="never"&&!o,a=o||r?2:1;return i.start({forceRevealReplace:!0,seedSearchStringFromSelection:r?"single":"none",seedSearchStringFromNonEmptySelection:e.getOption(35).seedSearchStringFromSelection==="selection",seedSearchStringFromGlobalClipboard:e.getOption(35).seedSearchStringFromSelection!=="never",shouldFocus:a,shouldAnimate:!0,updateSearchScope:!1,loop:e.getOption(35).loop})});J(vi.ID,Uy);I(uE);I(pE);I(mE);I(gE);I(fE);I(yE);var Wn=ct.bindToContribution(vi.get);$(new Wn({id:ze.CloseFindWidgetCommand,precondition:$o,handler:s=>s.closeFindWidget(),kbOpts:{weight:100+5,kbExpr:O.and(S.focus,O.not("isComposing")),primary:9,secondary:[1033]}}));$(new Wn({id:ze.ToggleCaseSensitiveCommand,precondition:void 0,handler:s=>s.toggleCaseSensitive(),kbOpts:{weight:100+5,kbExpr:S.focus,primary:yc.primary,mac:yc.mac,win:yc.win,linux:yc.linux}}));$(new Wn({id:ze.ToggleWholeWordCommand,precondition:void 0,handler:s=>s.toggleWholeWords(),kbOpts:{weight:100+5,kbExpr:S.focus,primary:bc.primary,mac:bc.mac,win:bc.win,linux:bc.linux}}));$(new Wn({id:ze.ToggleRegexCommand,precondition:void 0,handler:s=>s.toggleRegex(),kbOpts:{weight:100+5,kbExpr:S.focus,primary:Sc.primary,mac:Sc.mac,win:Sc.win,linux:Sc.linux}}));$(new Wn({id:ze.ToggleSearchScopeCommand,precondition:void 0,handler:s=>s.toggleSearchScope(),kbOpts:{weight:100+5,kbExpr:S.focus,primary:vc.primary,mac:vc.mac,win:vc.win,linux:vc.linux}}));$(new Wn({id:ze.TogglePreserveCaseCommand,precondition:void 0,handler:s=>s.togglePreserveCase(),kbOpts:{weight:100+5,kbExpr:S.focus,primary:xc.primary,mac:xc.mac,win:xc.win,linux:xc.linux}}));$(new Wn({id:ze.ReplaceOneAction,precondition:$o,handler:s=>s.replace(),kbOpts:{weight:100+5,kbExpr:S.focus,primary:3094}}));$(new Wn({id:ze.ReplaceOneAction,precondition:$o,handler:s=>s.replace(),kbOpts:{weight:100+5,kbExpr:O.and(S.focus,fc),primary:3}}));$(new Wn({id:ze.ReplaceAllAction,precondition:$o,handler:s=>s.replaceAll(),kbOpts:{weight:100+5,kbExpr:S.focus,primary:2563}}));$(new Wn({id:ze.ReplaceAllAction,precondition:$o,handler:s=>s.replaceAll(),kbOpts:{weight:100+5,kbExpr:O.and(S.focus,fc),primary:void 0,mac:{primary:2051}}}));$(new Wn({id:ze.SelectAllMatchesAction,precondition:$o,handler:s=>s.selectAllMatches(),kbOpts:{weight:100+5,kbExpr:S.focus,primary:515}}));ke();Le();yo();G();Ye();qt();ue();He();Re();sn();De();var qo=class{constructor(e,t,i){if(e.length!==t.length||e.length>65535)throw new Error("invalid startIndexes or endIndexes size");this._startIndexes=e,this._endIndexes=t,this._collapseStates=new Uint32Array(Math.ceil(e.length/32)),this._types=i,this._parentsComputed=!1}ensureParentIndices(){if(!this._parentsComputed){this._parentsComputed=!0;let e=[],t=(i,n)=>{let o=e[e.length-1];return this.getStartLineNumber(o)<=i&&this.getEndLineNumber(o)>=n};for(let i=0,n=this._startIndexes.length;i<n;i++){let o=this._startIndexes[i],r=this._endIndexes[i];if(o>16777215||r>16777215)throw new Error("startLineNumber or endLineNumber must not exceed "+16777215);for(;e.length>0&&!t(o,r);)e.pop();let a=e.length>0?e[e.length-1]:-1;e.push(i),this._startIndexes[i]=o+((a&255)<<24),this._endIndexes[i]=r+((a&65280)<<16)}}}get length(){return this._startIndexes.length}getStartLineNumber(e){return this._startIndexes[e]&16777215}getEndLineNumber(e){return this._endIndexes[e]&16777215}getType(e){return this._types?this._types[e]:void 0}hasTypes(){return!!this._types}isCollapsed(e){let t=e/32|0,i=e%32;return(this._collapseStates[t]&1<<i)!==0}setCollapsed(e,t){let i=e/32|0,n=e%32,o=this._collapseStates[i];t?this._collapseStates[i]=o|1<<n:this._collapseStates[i]=o&~(1<<n)}setCollapsedAllOfType(e,t){let i=!1;if(this._types)for(let n=0;n<this._types.length;n++)this._types[n]===e&&(this.setCollapsed(n,t),i=!0);return i}toRegion(e){return new bE(this,e)}getParentIndex(e){this.ensureParentIndices();let t=((this._startIndexes[e]&4278190080)>>>24)+((this._endIndexes[e]&4278190080)>>>16);return t===65535?-1:t}contains(e,t){return this.getStartLineNumber(e)<=t&&this.getEndLineNumber(e)>=t}findIndex(e){let t=0,i=this._startIndexes.length;if(i===0)return-1;for(;t<i;){let n=Math.floor((t+i)/2);e<this.getStartLineNumber(n)?i=n:t=n+1}return t-1}findRange(e){let t=this.findIndex(e);if(t>=0){if(this.getEndLineNumber(t)>=e)return t;for(t=this.getParentIndex(t);t!==-1;){if(this.contains(t,e))return t;t=this.getParentIndex(t)}}return-1}toString(){let e=[];for(let t=0;t<this.length;t++)e[t]=`[${this.isCollapsed(t)?"+":"-"}] ${this.getStartLineNumber(t)}/${this.getEndLineNumber(t)}`;return e.join(", ")}},bE=class{constructor(e,t){this.ranges=e,this.index=t}get startLineNumber(){return this.ranges.getStartLineNumber(this.index)}get endLineNumber(){return this.ranges.getEndLineNumber(this.index)}get regionIndex(){return this.index}get parentIndex(){return this.ranges.getParentIndex(this.index)}get isCollapsed(){return this.ranges.isCollapsed(this.index)}containedBy(e){return e.startLineNumber<=this.startLineNumber&&e.endLineNumber>=this.endLineNumber}containsLine(e){return this.startLineNumber<=e&&e<=this.endLineNumber}};var qy=class{constructor(e,t){this._updateEventEmitter=new j,this.onDidChange=this._updateEventEmitter.event,this._textModel=e,this._decorationProvider=t,this._regions=new qo(new Uint32Array(0),new Uint32Array(0)),this._editorDecorationIds=[],this._isInitialized=!1}get regions(){return this._regions}get textModel(){return this._textModel}get isInitialized(){return this._isInitialized}toggleCollapseState(e){if(!e.length)return;e=e.sort((i,n)=>i.regionIndex-n.regionIndex);let t={};this._decorationProvider.changeDecorations(i=>{let n=0,o=-1,r=-1,a=l=>{for(;n<l;){let c=this._regions.getEndLineNumber(n),d=this._regions.isCollapsed(n);c<=o&&i.changeDecorationOptions(this._editorDecorationIds[n],this._decorationProvider.getDecorationOption(d,c<=r)),d&&c>r&&(r=c),n++}};for(let l of e){let c=l.regionIndex,d=this._editorDecorationIds[c];if(d&&!t[d]){t[d]=!0,a(c);let h=!this._regions.isCollapsed(c);this._regions.setCollapsed(c,h),o=Math.max(o,this._regions.getEndLineNumber(c))}}a(this._regions.length)}),this._updateEventEmitter.fire({model:this,collapseStateChanged:e})}update(e,t=[]){let i=[],n=(h,p)=>{for(let m of t)if(h<m&&m<=p)return!0;return!1},o=-1,r=(h,p)=>{let m=e.getStartLineNumber(h),f=e.getEndLineNumber(h);p||(p=e.isCollapsed(h)),p&&n(m,f)&&(p=!1),e.setCollapsed(h,p);let v=this._textModel.getLineMaxColumn(m),_={startLineNumber:m,startColumn:Math.max(v-1,1),endLineNumber:m,endColumn:v};i.push({range:_,options:this._decorationProvider.getDecorationOption(p,f<=o)}),p&&f>o&&(o=f)},a=0,l=()=>{for(;a<this._regions.length;){let h=this._regions.isCollapsed(a);if(a++,h)return a-1}return-1},c=0,d=l();for(;d!==-1&&c<e.length;){let h=this._textModel.getDecorationRange(this._editorDecorationIds[d]);if(h){let p=h.startLineNumber;if(h.startColumn===Math.max(h.endColumn-1,1)&&this._textModel.getLineMaxColumn(p)===h.endColumn)for(;c<e.length;){let m=e.getStartLineNumber(c);if(p>=m)r(c,p===m),c++;else break}}d=l()}for(;c<e.length;)r(c,!1),c++;this._editorDecorationIds=this._decorationProvider.deltaDecorations(this._editorDecorationIds,i),this._regions=e,this._isInitialized=!0,this._updateEventEmitter.fire({model:this})}getMemento(){let e=[];for(let t=0;t<this._regions.length;t++)if(this._regions.isCollapsed(t)){let i=this._textModel.getDecorationRange(this._editorDecorationIds[t]);if(i){let n=i.startLineNumber,o=i.endLineNumber+this._regions.getEndLineNumber(t)-this._regions.getStartLineNumber(t);e.push({startLineNumber:n,endLineNumber:o})}}if(e.length>0)return e}applyMemento(e){if(!Array.isArray(e))return;let t=[];for(let i of e){let n=this.getRegionAtLine(i.startLineNumber);n&&!n.isCollapsed&&t.push(n)}this.toggleCollapseState(t)}dispose(){this._decorationProvider.deltaDecorations(this._editorDecorationIds,[])}getAllRegionsAtLine(e,t){let i=[];if(this._regions){let n=this._regions.findRange(e),o=1;for(;n>=0;){let r=this._regions.toRegion(n);(!t||t(r,o))&&i.push(r),o++,n=r.parentIndex}}return i}getRegionAtLine(e){if(this._regions){let t=this._regions.findRange(e);if(t>=0)return this._regions.toRegion(t)}return null}getRegionsInside(e,t){let i=[],n=e?e.regionIndex+1:0,o=e?e.endLineNumber:Number.MAX_VALUE;if(t&&t.length===2){let r=[];for(let a=n,l=this._regions.length;a<l;a++){let c=this._regions.toRegion(a);if(this._regions.getStartLineNumber(a)<o){for(;r.length>0&&!c.containedBy(r[r.length-1]);)r.pop();r.push(c),t(c,r.length)&&i.push(c)}else break}}else for(let r=n,a=this._regions.length;r<a;r++){let l=this._regions.toRegion(r);if(this._regions.getStartLineNumber(r)<o)(!t||t(l))&&i.push(l);else break}return i}};function SE(s,e,t){let i=[];for(let n of t){let o=s.getRegionAtLine(n);if(o){let r=!o.isCollapsed;if(i.push(o),e>1){let a=s.getRegionsInside(o,(l,c)=>l.isCollapsed!==r&&c<e);i.push(...a)}}}s.toggleCollapseState(i)}function Bs(s,e,t=Number.MAX_VALUE,i){let n=[];if(i&&i.length>0)for(let o of i){let r=s.getRegionAtLine(o);if(r&&(r.isCollapsed!==e&&n.push(r),t>1)){let a=s.getRegionsInside(r,(l,c)=>l.isCollapsed!==e&&c<t);n.push(...a)}}else{let o=s.getRegionsInside(null,(r,a)=>r.isCollapsed!==e&&a<t);n.push(...o)}s.toggleCollapseState(n)}function Xy(s,e,t,i){let n=[];for(let o of i){let r=s.getAllRegionsAtLine(o,(a,l)=>a.isCollapsed!==e&&l<=t);n.push(...r)}s.toggleCollapseState(n)}function vE(s,e,t){let i=[];for(let n of t){let o=s.getAllRegionsAtLine(n,r=>r.isCollapsed!==e);o.length>0&&i.push(o[0])}s.toggleCollapseState(i)}function xE(s,e,t,i){let n=(r,a)=>a===e&&r.isCollapsed!==t&&!i.some(l=>r.containsLine(l)),o=s.getRegionsInside(null,n);s.toggleCollapseState(o)}function Yy(s,e,t){let i=[];for(let r of t){let a=s.getAllRegionsAtLine(r,void 0);a.length>0&&i.push(a[0])}let n=r=>i.every(a=>!a.containedBy(r)&&!r.containedBy(a))&&r.isCollapsed!==e,o=s.getRegionsInside(null,n);s.toggleCollapseState(o)}function Jp(s,e,t){let i=s.textModel,n=s.regions,o=[];for(let r=n.length-1;r>=0;r--)if(t!==n.isCollapsed(r)){let a=n.getStartLineNumber(r);e.test(i.getLineContent(a))&&o.push(n.toRegion(r))}s.toggleCollapseState(o)}function Qp(s,e,t){let i=s.regions,n=[];for(let o=i.length-1;o>=0;o--)t!==i.isCollapsed(o)&&e===i.getType(o)&&n.push(i.toRegion(o));s.toggleCollapseState(n)}function CE(s,e){let t=null,i=e.getRegionAtLine(s);if(i!==null&&(t=i.startLineNumber,s===t)){let n=i.parentIndex;n!==-1?t=e.regions.getStartLineNumber(n):t=null}return t}function _E(s,e){let t=e.getRegionAtLine(s);if(t!==null&&t.startLineNumber===s){if(s!==t.startLineNumber)return t.startLineNumber;{let i=t.parentIndex,n=0;for(i!==-1&&(n=e.regions.getStartLineNumber(t.parentIndex));t!==null;)if(t.regionIndex>0){if(t=e.regions.toRegion(t.regionIndex-1),t.startLineNumber<=n)return null;if(t.parentIndex===i)return t.startLineNumber}else return null}}else if(e.regions.length>0)for(t=e.regions.toRegion(e.regions.length-1);t!==null;){if(t.startLineNumber<s)return t.startLineNumber;t.regionIndex>0?t=e.regions.toRegion(t.regionIndex-1):t=null}return null}function wE(s,e){let t=e.getRegionAtLine(s);if(t!==null&&t.startLineNumber===s){let i=t.parentIndex,n=0;if(i!==-1)n=e.regions.getEndLineNumber(t.parentIndex);else{if(e.regions.length===0)return null;n=e.regions.getEndLineNumber(e.regions.length-1)}for(;t!==null;)if(t.regionIndex<e.regions.length){if(t=e.regions.toRegion(t.regionIndex+1),t.startLineNumber>=n)return null;if(t.parentIndex===i)return t.startLineNumber}else return null}else if(e.regions.length>0)for(t=e.regions.toRegion(0);t!==null;){if(t.startLineNumber>s)return t.startLineNumber;t.regionIndex<e.regions.length?t=e.regions.toRegion(t.regionIndex+1):t=null}return null}vt();De();ee();lP();var Zy=class{constructor(e){this._updateEventEmitter=new j,this._hasLineChanges=!1,this._foldingModel=e,this._foldingModelListener=e.onDidChange(t=>this.updateHiddenRanges()),this._hiddenRanges=[],e.regions.length&&this.updateHiddenRanges()}get onDidChange(){return this._updateEventEmitter.event}get hiddenRanges(){return this._hiddenRanges}notifyChangeModelContent(e){this._hiddenRanges.length&&!this._hasLineChanges&&(this._hasLineChanges=e.changes.some(t=>t.range.endLineNumber!==t.range.startLineNumber||kx(t.text)[0]!==0))}updateHiddenRanges(){let e=!1,t=[],i=0,n=0,o=Number.MAX_VALUE,r=-1,a=this._foldingModel.regions;for(;i<a.length;i++){if(!a.isCollapsed(i))continue;let l=a.getStartLineNumber(i)+1,c=a.getEndLineNumber(i);o<=l&&c<=r||(!e&&n<this._hiddenRanges.length&&this._hiddenRanges[n].startLineNumber===l&&this._hiddenRanges[n].endLineNumber===c?(t.push(this._hiddenRanges[n]),n++):(e=!0,t.push(new b(l,1,c,1))),o=l,r=c)}(this._hasLineChanges||e||n<this._hiddenRanges.length)&&this.applyHiddenRanges(t)}applyMemento(e){if(!Array.isArray(e)||e.length===0)return!1;let t=[];for(let i of e){if(!i.startLineNumber||!i.endLineNumber)return!1;t.push(new b(i.startLineNumber+1,1,i.endLineNumber,1))}return this.applyHiddenRanges(t),!0}getMemento(){return this._hiddenRanges.map(e=>({startLineNumber:e.startLineNumber-1,endLineNumber:e.endLineNumber}))}applyHiddenRanges(e){this._hiddenRanges=e,this._hasLineChanges=!1,this._updateEventEmitter.fire(e)}hasRanges(){return this._hiddenRanges.length>0}isHidden(e){return TE(this._hiddenRanges,e)!==null}adjustSelections(e){let t=!1,i=this._foldingModel.textModel,n=null,o=r=>((!n||!QD(r,n))&&(n=TE(this._hiddenRanges,r)),n?n.startLineNumber-1:null);for(let r=0,a=e.length;r<a;r++){let l=e[r],c=o(l.startLineNumber);c&&(l=l.setStartPosition(c,i.getLineMaxColumn(c)),t=!0);let d=o(l.endLineNumber);d&&(l=l.setEndPosition(d,i.getLineMaxColumn(d)),t=!0),e[r]=l}return t}dispose(){this.hiddenRanges.length>0&&(this._hiddenRanges=[],this._updateEventEmitter.fire(this._hiddenRanges)),this._foldingModelListener&&(this._foldingModelListener.dispose(),this._foldingModelListener=null)}};function QD(s,e){return s>=e.startLineNumber&&s<=e.endLineNumber}function TE(s,e){let t=dh(s,i=>e<i.startLineNumber)-1;return t>=0&&s[t].endLineNumber>=e?s[t]:null}Ix();var eR=5e3,tR="indent",Jy=class{constructor(e,t,i){this.editorModel=e,this.languageConfigurationService=t,this.maxFoldingRegions=i,this.id=tR}dispose(){}compute(e,t){let i=this.languageConfigurationService.getLanguageConfiguration(this.editorModel.getLanguageId()).foldingRules,n=i&&!!i.offSide,o=i&&i.markers;return Promise.resolve(iR(this.editorModel,n,o,this.maxFoldingRegions,t))}},EE=class{constructor(e,t){this._notifyTooManyRegions=t,this._startIndexes=[],this._endIndexes=[],this._indentOccurrences=[],this._length=0,this._foldingRangesLimit=e}insertFirst(e,t,i){if(e>16777215||t>16777215)return;let n=this._length;this._startIndexes[n]=e,this._endIndexes[n]=t,this._length++,i<1e3&&(this._indentOccurrences[i]=(this._indentOccurrences[i]||0)+1)}toIndentRanges(e){if(this._length<=this._foldingRangesLimit){let t=new Uint32Array(this._length),i=new Uint32Array(this._length);for(let n=this._length-1,o=0;n>=0;n--,o++)t[o]=this._startIndexes[n],i[o]=this._endIndexes[n];return new qo(t,i)}else{this._notifyTooManyRegions&&this._notifyTooManyRegions(this._foldingRangesLimit);let t=0,i=this._indentOccurrences.length;for(let a=0;a<this._indentOccurrences.length;a++){let l=this._indentOccurrences[a];if(l){if(l+t>this._foldingRangesLimit){i=a;break}t+=l}}let n=e.getOptions().tabSize,o=new Uint32Array(this._foldingRangesLimit),r=new Uint32Array(this._foldingRangesLimit);for(let a=this._length-1,l=0;a>=0;a--){let c=this._startIndexes[a],d=e.getLineContent(c),h=cd(d,n);(h<i||h===i&&t++<this._foldingRangesLimit)&&(o[l]=c,r[l]=this._endIndexes[a],l++)}return new qo(o,r)}}};function iR(s,e,t,i,n){let o=s.getOptions().tabSize;i=i!=null?i:eR;let r=new EE(i,n),a;t&&(a=new RegExp(`(${t.start.source})|(?:${t.end.source})`));let l=[],c=s.getLineCount()+1;l.push({indent:-1,endAbove:c,line:c});for(let d=s.getLineCount();d>0;d--){let h=s.getLineContent(d),p=cd(h,o),m=l[l.length-1];if(p===-1){e&&(m.endAbove=d);continue}let f;if(a&&(f=h.match(a)))if(f[1]){let v=l.length-1;for(;v>0&&l[v].indent!==-2;)v--;if(v>0){l.length=v+1,m=l[v],r.insertFirst(d,m.line,p),m.line=d,m.indent=p,m.endAbove=d;continue}}else{l.push({indent:-2,endAbove:d,line:d});continue}if(m.indent>p){do l.pop(),m=l[l.length-1];while(m.indent>p);let v=m.endAbove-1;v-d>=1&&r.insertFirst(d,v,p)}m.indent===p?m.endAbove=d:l.push({indent:p,endAbove:d,line:d})}return r.toIndentRanges(s)}Le();G();var nR={},Qy="syntax",eb=class{constructor(e,t,i,n){this.editorModel=e,this.providers=t,this.limit=n,this.id=Qy;for(let o of t)typeof o.onDidChange=="function"&&(this.disposables||(this.disposables=new A),this.disposables.add(o.onDidChange(i)))}compute(e,t){return oR(this.providers,this.editorModel,e).then(i=>i?tb(i,this.limit,t):null)}dispose(){var e;(e=this.disposables)===null||e===void 0||e.dispose()}};function oR(s,e,t){let i=null,n=s.map((o,r)=>Promise.resolve(o.provideFoldingRanges(e,nR,t)).then(a=>{if(!t.isCancellationRequested&&Array.isArray(a)){Array.isArray(i)||(i=[]);let l=e.getLineCount();for(let c of a)c.start>0&&c.end>c.start&&c.end<=l&&i.push({start:c.start,end:c.end,rank:r,kind:c.kind})}},Ue));return Promise.all(n).then(o=>i)}var IE=class{constructor(e,t){this._notifyTooManyRegions=t,this._startIndexes=[],this._endIndexes=[],this._nestingLevels=[],this._nestingLevelCounts=[],this._types=[],this._length=0,this._foldingRangesLimit=e}add(e,t,i,n){if(e>16777215||t>16777215)return;let o=this._length;this._startIndexes[o]=e,this._endIndexes[o]=t,this._nestingLevels[o]=n,this._types[o]=i,this._length++,n<30&&(this._nestingLevelCounts[n]=(this._nestingLevelCounts[n]||0)+1)}toIndentRanges(){if(this._length<=this._foldingRangesLimit){let e=new Uint32Array(this._length),t=new Uint32Array(this._length);for(let i=0;i<this._length;i++)e[i]=this._startIndexes[i],t[i]=this._endIndexes[i];return new qo(e,t,this._types)}else{this._notifyTooManyRegions&&this._notifyTooManyRegions(this._foldingRangesLimit);let e=0,t=this._nestingLevelCounts.length;for(let r=0;r<this._nestingLevelCounts.length;r++){let a=this._nestingLevelCounts[r];if(a){if(a+e>this._foldingRangesLimit){t=r;break}e+=a}}let i=new Uint32Array(this._foldingRangesLimit),n=new Uint32Array(this._foldingRangesLimit),o=[];for(let r=0,a=0;r<this._length;r++){let l=this._nestingLevels[r];(l<t||l===t&&e++<this._foldingRangesLimit)&&(i[a]=this._startIndexes[r],n[a]=this._endIndexes[r],o[a]=this._types[r],a++)}return new qo(i,n,o)}}};function tb(s,e,t){let i=s.sort((a,l)=>{let c=a.start-l.start;return c===0&&(c=a.rank-l.rank),c}),n=new IE(e,t),o,r=[];for(let a of i)if(!o)o=a,n.add(a.start,a.end,a.kind&&a.kind.value,r.length);else if(a.start>o.start)if(a.end<=o.end)r.push(o),o=a,n.add(a.start,a.end,a.kind&&a.kind.value,r.length);else{if(a.start>o.end){do o=r.pop();while(o&&a.start>o.end);o&&r.push(o),o=a}n.add(a.start,a.end,a.kind&&a.kind.value,r.length)}return n.toIndentRanges()}var ib="init",nb=class{constructor(e,t,i,n){if(this.editorModel=e,this.id=ib,t.length){let o=r=>({range:{startLineNumber:r.startLineNumber,startColumn:0,endLineNumber:r.endLineNumber,endColumn:e.getLineLength(r.endLineNumber)},options:{description:"folding-initializing-range-provider",stickiness:1}});this.decorationIds=e.deltaDecorations([],t.map(o)),this.timeout=setTimeout(i,n)}}dispose(){this.decorationIds&&(this.editorModel.deltaDecorations(this.decorationIds,[]),this.decorationIds=void 0),typeof this.timeout=="number"&&(clearTimeout(this.timeout),this.timeout=void 0)}compute(e){let t=[];if(this.decorationIds)for(let i of this.decorationIds){let n=this.editorModel.getDecorationRange(i);n&&t.push({start:n.startLineNumber,end:n.endLineNumber,rank:1})}return Promise.resolve(tb(t,Number.MAX_VALUE))}};Q();Ee();mt();Ne();xi();jt();Q();Ne();var em=Rt("folding-expanded",K.chevronDown,u("foldingExpandedIcon","Icon for expanded ranges in the editor glyph margin.")),tm=Rt("folding-collapsed",K.chevronRight,u("foldingCollapsedIcon","Icon for collapsed ranges in the editor glyph margin.")),Vi=class{constructor(e){this.editor=e,this.autoHideFoldingControls=!0,this.showFoldingHighlights=!0}getDecorationOption(e,t){return t?Vi.HIDDEN_RANGE_DECORATION:e?this.showFoldingHighlights?Vi.COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION:Vi.COLLAPSED_VISUAL_DECORATION:this.autoHideFoldingControls?Vi.EXPANDED_AUTO_HIDE_VISUAL_DECORATION:Vi.EXPANDED_VISUAL_DECORATION}deltaDecorations(e,t){return this.editor.deltaDecorations(e,t)}changeDecorations(e){return this.editor.changeDecorations(e)}};Vi.COLLAPSED_VISUAL_DECORATION=xe.register({description:"folding-collapsed-visual-decoration",stickiness:1,afterContentClassName:"inline-folded",isWholeLine:!0,firstLineDecorationClassName:ot.asClassName(tm)});Vi.COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION=xe.register({description:"folding-collapsed-highlighted-visual-decoration",stickiness:1,afterContentClassName:"inline-folded",className:"folded-background",isWholeLine:!0,firstLineDecorationClassName:ot.asClassName(tm)});Vi.EXPANDED_AUTO_HIDE_VISUAL_DECORATION=xe.register({description:"folding-expanded-auto-hide-visual-decoration",stickiness:1,isWholeLine:!0,firstLineDecorationClassName:ot.asClassName(em)});Vi.EXPANDED_VISUAL_DECORATION=xe.register({description:"folding-expanded-visual-decoration",stickiness:1,isWholeLine:!0,firstLineDecorationClassName:"alwaysShowFoldIcons "+ot.asClassName(em)});Vi.HIDDEN_RANGE_DECORATION=xe.register({description:"folding-hidden-range-decoration",stickiness:1});md();Wl();var sR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},im=function(s,e){return function(t,i){e(t,i,s)}},hi=new pe("foldingEnabled",!1),ml=class kE extends z{constructor(e,t,i,n,o){super();this.contextKeyService=t,this.languageConfigurationService=i,this._tooManyRegionsNotified=!1,this.localToDispose=this._register(new A),this.editor=e;let r=this.editor.getOptions();this._isEnabled=r.get(37),this._useFoldingProviders=r.get(38)!=="indentation",this._unfoldOnClickAfterEndOfLine=r.get(42),this._restoringViewState=!1,this._currentModelHasFoldedImports=!1,this._foldingImportsByDefault=r.get(40),this._maxFoldingRegions=r.get(41),this.updateDebounceInfo=o.for(kh,"Folding",{min:200}),this.foldingModel=null,this.hiddenRangeModel=null,this.rangeProvider=null,this.foldingRegionPromise=null,this.foldingStateMemento=null,this.foldingModelPromise=null,this.updateScheduler=null,this.cursorChangedScheduler=null,this.mouseDownInfo=null,this.foldingDecorationProvider=new Vi(e),this.foldingDecorationProvider.autoHideFoldingControls=r.get(99)==="mouseover",this.foldingDecorationProvider.showFoldingHighlights=r.get(39),this.foldingEnabled=hi.bindTo(this.contextKeyService),this.foldingEnabled.set(this._isEnabled),this._notifyTooManyRegions=a=>{this._tooManyRegionsNotified||(n.notify({severity:Io.Warning,sticky:!0,message:u("maximum fold ranges",`The number of foldable regions is limited to a maximum of {0}. Increase configuration option ['Folding Maximum Regions'](command:workbench.action.openSettings?["editor.foldingMaximumRegions"]) to enable more.`,a)}),this._tooManyRegionsNotified=!0)},this._register(this.editor.onDidChangeModel(()=>this.onModelChanged())),this._register(this.editor.onDidChangeConfiguration(a=>{if(a.hasChanged(37)&&(this._isEnabled=this.editor.getOptions().get(37),this.foldingEnabled.set(this._isEnabled),this.onModelChanged()),a.hasChanged(41)&&(this._maxFoldingRegions=this.editor.getOptions().get(41),this._tooManyRegionsNotified=!1,this.onModelChanged()),a.hasChanged(99)||a.hasChanged(39)){let l=this.editor.getOptions();this.foldingDecorationProvider.autoHideFoldingControls=l.get(99)==="mouseover",this.foldingDecorationProvider.showFoldingHighlights=l.get(39),this.triggerFoldingModelChanged()}a.hasChanged(38)&&(this._useFoldingProviders=this.editor.getOptions().get(38)!=="indentation",this.onFoldingStrategyChanged()),a.hasChanged(42)&&(this._unfoldOnClickAfterEndOfLine=this.editor.getOptions().get(42)),a.hasChanged(40)&&(this._foldingImportsByDefault=this.editor.getOptions().get(40))})),this.onModelChanged()}static get(e){return e.getContribution(kE.ID)}saveViewState(){let e=this.editor.getModel();if(!e||!this._isEnabled||e.isTooLargeForTokenization())return{};if(this.foldingModel){let t=this.foldingModel.isInitialized?this.foldingModel.getMemento():this.hiddenRangeModel.getMemento(),i=this.rangeProvider?this.rangeProvider.id:void 0;return{collapsedRegions:t,lineCount:e.getLineCount(),provider:i,foldedImports:this._currentModelHasFoldedImports}}}restoreViewState(e){let t=this.editor.getModel();if(!t||!this._isEnabled||t.isTooLargeForTokenization()||!this.hiddenRangeModel||!e||e.lineCount!==t.getLineCount()||(this._currentModelHasFoldedImports=!!e.foldedImports,!e.collapsedRegions))return;(e.provider===Qy||e.provider===ib)&&(this.foldingStateMemento=e);let i=e.collapsedRegions;if(this.hiddenRangeModel.applyMemento(i)){let n=this.getFoldingModel();n&&n.then(o=>{if(o){this._restoringViewState=!0;try{o.applyMemento(i)}finally{this._restoringViewState=!1}}}).then(void 0,de)}}onModelChanged(){this.localToDispose.clear();let e=this.editor.getModel();!this._isEnabled||!e||e.isTooLargeForTokenization()||(this._currentModelHasFoldedImports=!1,this.foldingModel=new qy(e,this.foldingDecorationProvider),this.localToDispose.add(this.foldingModel),this.hiddenRangeModel=new Zy(this.foldingModel),this.localToDispose.add(this.hiddenRangeModel),this.localToDispose.add(this.hiddenRangeModel.onDidChange(t=>this.onHiddenRangesChanges(t))),this.updateScheduler=new Tn(this.updateDebounceInfo.get(e)),this.cursorChangedScheduler=new $e(()=>this.revealCursor(),200),this.localToDispose.add(this.cursorChangedScheduler),this.localToDispose.add(kh.onDidChange(()=>this.onFoldingStrategyChanged())),this.localToDispose.add(this.editor.onDidChangeModelLanguageConfiguration(()=>this.onFoldingStrategyChanged())),this.localToDispose.add(this.editor.onDidChangeModelContent(t=>this.onDidChangeModelContent(t))),this.localToDispose.add(this.editor.onDidChangeCursorPosition(()=>this.onCursorPositionChanged())),this.localToDispose.add(this.editor.onMouseDown(t=>this.onEditorMouseDown(t))),this.localToDispose.add(this.editor.onMouseUp(t=>this.onEditorMouseUp(t))),this.localToDispose.add({dispose:()=>{this.foldingRegionPromise&&(this.foldingRegionPromise.cancel(),this.foldingRegionPromise=null),this.updateScheduler&&this.updateScheduler.cancel(),this.updateScheduler=null,this.foldingModel=null,this.foldingModelPromise=null,this.hiddenRangeModel=null,this.cursorChangedScheduler=null,this.foldingStateMemento=null,this.rangeProvider&&this.rangeProvider.dispose(),this.rangeProvider=null}}),this.triggerFoldingModelChanged())}onFoldingStrategyChanged(){this.rangeProvider&&this.rangeProvider.dispose(),this.rangeProvider=null,this.triggerFoldingModelChanged()}getRangeProvider(e){if(this.rangeProvider)return this.rangeProvider;if(this.rangeProvider=new Jy(e,this.languageConfigurationService,this._maxFoldingRegions),this._useFoldingProviders&&this.foldingModel){let t=kh.ordered(this.foldingModel.textModel);if(t.length===0&&this.foldingStateMemento&&this.foldingStateMemento.collapsedRegions)return this.rangeProvider=new nb(e,this.foldingStateMemento.collapsedRegions,()=>{this.foldingStateMemento=null,this.onFoldingStrategyChanged()},3e4);t.length>0&&(this.rangeProvider=new eb(e,t,()=>this.triggerFoldingModelChanged(),this._maxFoldingRegions))}return this.foldingStateMemento=null,this.rangeProvider}getFoldingModel(){return this.foldingModelPromise}onDidChangeModelContent(e){var t;(t=this.hiddenRangeModel)===null||t===void 0||t.notifyChangeModelContent(e),this.triggerFoldingModelChanged()}triggerFoldingModelChanged(){this.updateScheduler&&(this.foldingRegionPromise&&(this.foldingRegionPromise.cancel(),this.foldingRegionPromise=null),this.foldingModelPromise=this.updateScheduler.trigger(()=>{let e=this.foldingModel;if(!e)return null;let t=new on(!0),i=this.getRangeProvider(e.textModel),n=this.foldingRegionPromise=Oe(o=>i.compute(o,this._notifyTooManyRegions));return n.then(o=>{if(o&&n===this.foldingRegionPromise){let r;if(this._foldingImportsByDefault&&!this._currentModelHasFoldedImports){let d=o.setCollapsedAllOfType(jl.Imports.value,!0);d&&(r=vr.capture(this.editor),this._currentModelHasFoldedImports=d)}let a=this.editor.getSelections(),l=a?a.map(d=>d.startLineNumber):[];e.update(o,l),r&&r.restore(this.editor);let c=this.updateDebounceInfo.update(e.textModel,t.elapsed());this.updateScheduler&&(this.updateScheduler.defaultDelay=c)}return e})}).then(void 0,e=>(de(e),null)))}onHiddenRangesChanges(e){if(this.hiddenRangeModel&&e.length&&!this._restoringViewState){let t=this.editor.getSelections();t&&this.hiddenRangeModel.adjustSelections(t)&&this.editor.setSelections(t)}this.editor.setHiddenAreas(e)}onCursorPositionChanged(){this.hiddenRangeModel&&this.hiddenRangeModel.hasRanges()&&this.cursorChangedScheduler.schedule()}revealCursor(){let e=this.getFoldingModel();!e||e.then(t=>{if(t){let i=this.editor.getSelections();if(i&&i.length>0){let n=[];for(let o of i){let r=o.selectionStartLineNumber;this.hiddenRangeModel&&this.hiddenRangeModel.isHidden(r)&&n.push(...t.getAllRegionsAtLine(r,a=>a.isCollapsed&&r>a.startLineNumber))}n.length&&(t.toggleCollapseState(n),this.reveal(i[0].getPosition()))}}}).then(void 0,de)}onEditorMouseDown(e){if(this.mouseDownInfo=null,!this.hiddenRangeModel||!e.target||!e.target.range||!e.event.leftButton&&!e.event.middleButton)return;let t=e.target.range,i=!1;switch(e.target.type){case 4:{let n=e.target.detail,o=e.target.element.offsetLeft;if(n.offsetX-o<5)return;i=!0;break}case 7:{if(this._unfoldOnClickAfterEndOfLine&&this.hiddenRangeModel.hasRanges()&&!e.target.detail.isAfterLines)break;return}case 6:{if(this.hiddenRangeModel.hasRanges()){let n=this.editor.getModel();if(n&&t.startColumn===n.getLineMaxColumn(t.startLineNumber))break}return}default:return}this.mouseDownInfo={lineNumber:t.startLineNumber,iconClicked:i}}onEditorMouseUp(e){let t=this.getFoldingModel();if(!t||!this.mouseDownInfo||!e.target)return;let i=this.mouseDownInfo.lineNumber,n=this.mouseDownInfo.iconClicked,o=e.target.range;if(!(!o||o.startLineNumber!==i)){if(n){if(e.target.type!==4)return}else{let r=this.editor.getModel();if(!r||o.startColumn!==r.getLineMaxColumn(i))return}t.then(r=>{if(r){let a=r.getRegionAtLine(i);if(a&&a.startLineNumber===i){let l=a.isCollapsed;if(n||l){let c=e.event.altKey,d=[];if(c){let h=m=>!m.containedBy(a)&&!a.containedBy(m),p=r.getRegionsInside(null,h);for(let m of p)m.isCollapsed&&d.push(m);d.length===0&&(d=p)}else{let h=e.event.middleButton||e.event.shiftKey;if(h)for(let p of r.getRegionsInside(a))p.isCollapsed===l&&d.push(p);(l||!h||d.length===0)&&d.push(a)}r.toggleCollapseState(d),this.reveal({lineNumber:i,column:1})}}}}).then(void 0,de)}}reveal(e){this.editor.revealPositionInCenterIfOutsideViewport(e,0)}};ml.ID="editor.contrib.folding";ml=sR([im(1,ie),im(2,Dt),im(3,Ze),im(4,Qn)],ml);var ui=class extends F{runEditorCommand(e,t,i){let n=e.get(Dt),o=ml.get(t);if(!o)return;let r=o.getFoldingModel();if(r)return this.reportTelemetry(e,t),r.then(a=>{if(a){this.invoke(o,a,t,i,n);let l=t.getSelection();l&&o.reveal(l.getStartPosition())}})}getSelectedLines(e){let t=e.getSelections();return t?t.map(i=>i.startLineNumber):[]}getLineNumbers(e,t){return e&&e.selectionLines?e.selectionLines.map(i=>i+1):this.getSelectedLines(t)}run(e,t){}};function LE(s){if(!zl(s)){if(!ph(s))return!1;let e=s;if(!zl(e.levels)&&!wm(e.levels)||!zl(e.direction)&&!uh(e.direction)||!zl(e.selectionLines)&&(!uS(e.selectionLines)||!e.selectionLines.every(wm)))return!1}return!0}var PE=class extends ui{constructor(){super({id:"editor.unfold",label:u("unfoldAction.label","Unfold"),alias:"Unfold",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:3161,mac:{primary:2649},weight:100},description:{description:"Unfold the content in the editor",args:[{name:"Unfold editor argument",description:`Property-value pairs that can be passed through this argument:
						* 'levels': Number of levels to unfold. If not set, defaults to 1.
						* 'direction': If 'up', unfold given number of levels up otherwise unfolds down.
						* 'selectionLines': The start lines (0-based) of the editor selections to apply the unfold action to. If not set, the active selection(s) will be used.
						`,constraint:LE,schema:{type:"object",properties:{levels:{type:"number",default:1},direction:{type:"string",enum:["up","down"],default:"down"},selectionLines:{type:"array",items:{type:"number"}}}}}]}})}invoke(e,t,i,n){let o=n&&n.levels||1,r=this.getLineNumbers(n,i);n&&n.direction==="up"?Xy(t,!1,o,r):Bs(t,!1,o,r)}},ME=class extends ui{constructor(){super({id:"editor.unfoldRecursively",label:u("unFoldRecursivelyAction.label","Unfold Recursively"),alias:"Unfold Recursively",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2137),weight:100}})}invoke(e,t,i,n){Bs(t,!1,Number.MAX_VALUE,this.getSelectedLines(i))}},DE=class extends ui{constructor(){super({id:"editor.fold",label:u("foldAction.label","Fold"),alias:"Fold",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:3159,mac:{primary:2647},weight:100},description:{description:"Fold the content in the editor",args:[{name:"Fold editor argument",description:`Property-value pairs that can be passed through this argument:
							* 'levels': Number of levels to fold.
							* 'direction': If 'up', folds given number of levels up otherwise folds down.
							* 'selectionLines': The start lines (0-based) of the editor selections to apply the fold action to. If not set, the active selection(s) will be used.
							If no levels or direction is set, folds the region at the locations or if already collapsed, the first uncollapsed parent instead.
						`,constraint:LE,schema:{type:"object",properties:{levels:{type:"number"},direction:{type:"string",enum:["up","down"]},selectionLines:{type:"array",items:{type:"number"}}}}}]}})}invoke(e,t,i,n){let o=this.getLineNumbers(n,i),r=n&&n.levels,a=n&&n.direction;typeof r!="number"&&typeof a!="string"?vE(t,!0,o):a==="up"?Xy(t,!0,r||1,o):Bs(t,!0,r||1,o)}},RE=class extends ui{constructor(){super({id:"editor.toggleFold",label:u("toggleFoldAction.label","Toggle Fold"),alias:"Toggle Fold",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2090),weight:100}})}invoke(e,t,i){let n=this.getSelectedLines(i);SE(t,1,n)}},AE=class extends ui{constructor(){super({id:"editor.foldRecursively",label:u("foldRecursivelyAction.label","Fold Recursively"),alias:"Fold Recursively",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2135),weight:100}})}invoke(e,t,i){let n=this.getSelectedLines(i);Bs(t,!0,Number.MAX_VALUE,n)}},FE=class extends ui{constructor(){super({id:"editor.foldAllBlockComments",label:u("foldAllBlockComments.label","Fold All Block Comments"),alias:"Fold All Block Comments",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2133),weight:100}})}invoke(e,t,i,n,o){if(t.regions.hasTypes())Qp(t,jl.Comment.value,!0);else{let r=i.getModel();if(!r)return;let a=o.getLanguageConfiguration(r.getLanguageId()).comments;if(a&&a.blockCommentStartToken){let l=new RegExp("^\\s*"+So(a.blockCommentStartToken));Jp(t,l,!0)}}}},NE=class extends ui{constructor(){super({id:"editor.foldAllMarkerRegions",label:u("foldAllMarkerRegions.label","Fold All Regions"),alias:"Fold All Regions",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2077),weight:100}})}invoke(e,t,i,n,o){if(t.regions.hasTypes())Qp(t,jl.Region.value,!0);else{let r=i.getModel();if(!r)return;let a=o.getLanguageConfiguration(r.getLanguageId()).foldingRules;if(a&&a.markers&&a.markers.start){let l=new RegExp(a.markers.start);Jp(t,l,!0)}}}},zE=class extends ui{constructor(){super({id:"editor.unfoldAllMarkerRegions",label:u("unfoldAllMarkerRegions.label","Unfold All Regions"),alias:"Unfold All Regions",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2078),weight:100}})}invoke(e,t,i,n,o){if(t.regions.hasTypes())Qp(t,jl.Region.value,!1);else{let r=i.getModel();if(!r)return;let a=o.getLanguageConfiguration(r.getLanguageId()).foldingRules;if(a&&a.markers&&a.markers.start){let l=new RegExp(a.markers.start);Jp(t,l,!1)}}}},OE=class extends ui{constructor(){super({id:"editor.foldAllExcept",label:u("foldAllExcept.label","Fold All Regions Except Selected"),alias:"Fold All Regions Except Selected",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2131),weight:100}})}invoke(e,t,i){let n=this.getSelectedLines(i);Yy(t,!0,n)}},HE=class extends ui{constructor(){super({id:"editor.unfoldAllExcept",label:u("unfoldAllExcept.label","Unfold All Regions Except Selected"),alias:"Unfold All Regions Except Selected",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2129),weight:100}})}invoke(e,t,i){let n=this.getSelectedLines(i);Yy(t,!1,n)}},WE=class extends ui{constructor(){super({id:"editor.foldAll",label:u("foldAllAction.label","Fold All"),alias:"Fold All",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2069),weight:100}})}invoke(e,t,i){Bs(t,!0)}},BE=class extends ui{constructor(){super({id:"editor.unfoldAll",label:u("unfoldAllAction.label","Unfold All"),alias:"Unfold All",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2088),weight:100}})}invoke(e,t,i){Bs(t,!1)}},Wr=class extends ui{getFoldingLevel(){return parseInt(this.id.substr(Wr.ID_PREFIX.length))}invoke(e,t,i){xE(t,this.getFoldingLevel(),!0,this.getSelectedLines(i))}};Wr.ID_PREFIX="editor.foldLevel";Wr.ID=s=>Wr.ID_PREFIX+s;var VE=class extends ui{constructor(){super({id:"editor.gotoParentFold",label:u("gotoParentFold.label","Go to Parent Fold"),alias:"Go to Parent Fold",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,weight:100}})}invoke(e,t,i){let n=this.getSelectedLines(i);if(n.length>0){let o=CE(n[0],t);o!==null&&i.setSelection({startLineNumber:o,startColumn:1,endLineNumber:o,endColumn:1})}}},GE=class extends ui{constructor(){super({id:"editor.gotoPreviousFold",label:u("gotoPreviousFold.label","Go to Previous Folding Range"),alias:"Go to Previous Folding Range",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,weight:100}})}invoke(e,t,i){let n=this.getSelectedLines(i);if(n.length>0){let o=_E(n[0],t);o!==null&&i.setSelection({startLineNumber:o,startColumn:1,endLineNumber:o,endColumn:1})}}},jE=class extends ui{constructor(){super({id:"editor.gotoNextFold",label:u("gotoNextFold.label","Go to Next Folding Range"),alias:"Go to Next Folding Range",precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,weight:100}})}invoke(e,t,i){let n=this.getSelectedLines(i);if(n.length>0){let o=wE(n[0],t);o!==null&&i.setSelection({startLineNumber:o,startColumn:1,endLineNumber:o,endColumn:1})}}};J(ml.ID,ml);I(PE);I(ME);I(DE);I(AE);I(WE);I(BE);I(FE);I(NE);I(zE);I(OE);I(HE);I(RE);I(VE);I(GE);I(jE);for(let s=1;s<=7;s++)zh(new Wr({id:Wr.ID(s),label:u("foldLevelAction.label","Fold Level {0}",s),alias:`Fold Level ${s}`,precondition:hi,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2048|21+s),weight:100}}));var aR=q("editor.foldBackground",{light:si(Zm,.3),dark:si(Zm,.3),hc:null},u("foldBackgroundBackground","Background color behind folded ranges. The color must not be opaque so as not to hide underlying decorations."),!0),lR=q("editorGutter.foldingControlForeground",{dark:Hh,light:Hh,hc:Hh},u("editorGutter.foldingControlForeground","Color of the folding control in the editor gutter."));Me((s,e)=>{let t=s.getColor(aR);t&&e.addRule(`.monaco-editor .folded-background { background-color: ${t}; }`);let i=s.getColor(lR);i&&e.addRule(`
		.monaco-editor .cldr${ot.asCSSSelector(em)},
		.monaco-editor .cldr${ot.asCSSSelector(tm)} {
			color: ${i} !important;
		}
		`)});ue();Q();var UE=class extends F{constructor(){super({id:"editor.action.fontZoomIn",label:u("EditorFontZoomIn.label","Editor Font Zoom In"),alias:"Editor Font Zoom In",precondition:void 0})}run(e,t){xa.setZoomLevel(xa.getZoomLevel()+1)}},$E=class extends F{constructor(){super({id:"editor.action.fontZoomOut",label:u("EditorFontZoomOut.label","Editor Font Zoom Out"),alias:"Editor Font Zoom Out",precondition:void 0})}run(e,t){xa.setZoomLevel(xa.getZoomLevel()-1)}},KE=class extends F{constructor(){super({id:"editor.action.fontZoomReset",label:u("EditorFontZoomReset.label","Editor Font Zoom Reset"),alias:"Editor Font Zoom Reset",precondition:void 0})}run(e,t){xa.setZoomLevel(0)}};I(UE);I($E);I(KE);var dae=Zr(JE()),cae=Zr(tI());G();Ye();ue();Do();ee();Mt();He();jt();sn();hr();function pi(s,e){let t=0;for(let i=0;i<s.length;i++)s.charAt(i)==="	"?t+=e:t++;return t}function Us(s,e,t){s=s<0?0:s;let i="";if(!t){let n=Math.floor(s/e);s=s%e;for(let o=0;o<n;o++)i+="	"}for(let n=0;n<s;n++)i+=" ";return i}Q();function nI(s,e,t,i,n){if(s.getLineCount()===1&&s.getLineMaxColumn(1)===1)return[];let o=e.getLanguageConfiguration(s.getLanguageId()).indentationRules;if(!o)return[];for(i=Math.min(i,s.getLineCount());t<=i&&o.unIndentedLinePattern;){let _=s.getLineContent(t);if(!o.unIndentedLinePattern.test(_))break;t++}if(t>i-1)return[];let{tabSize:r,indentSize:a,insertSpaces:l}=s.getOptions(),c=(_,w)=>(w=w||1,Sr.shiftIndent(_,_.length+w,r,a,l)),d=(_,w)=>(w=w||1,Sr.unshiftIndent(_,_.length+w,r,a,l)),h=[],p,m=s.getLineContent(t),f=m;if(n!=null){p=n;let _=pt(m);f=p+m.substring(_.length),o.decreaseIndentPattern&&o.decreaseIndentPattern.test(f)&&(p=d(p),f=p+m.substring(_.length)),m!==f&&h.push(Ge.replaceMove(new X(t,1,t,_.length+1),Ra.normalizeIndentation(p,a,l)))}else p=pt(m);let v=p;o.increaseIndentPattern&&o.increaseIndentPattern.test(f)?(v=c(v),p=c(p)):o.indentNextLinePattern&&o.indentNextLinePattern.test(f)&&(v=c(v)),t++;for(let _=t;_<=i;_++){let w=s.getLineContent(_),R=pt(w),P=v+w.substring(R.length);o.decreaseIndentPattern&&o.decreaseIndentPattern.test(P)&&(v=d(v),p=d(p)),R!==v&&h.push(Ge.replaceMove(new X(_,1,_,R.length+1),Ra.normalizeIndentation(v,a,l))),!(o.unIndentedLinePattern&&o.unIndentedLinePattern.test(w))&&(o.increaseIndentPattern&&o.increaseIndentPattern.test(P)?(p=c(p),v=p):o.indentNextLinePattern&&o.indentNextLinePattern.test(P)?v=c(v):v=p)}return h}var Pc=class extends F{constructor(){super({id:Pc.ID,label:u("indentationToSpaces","Convert Indentation to Spaces"),alias:"Convert Indentation to Spaces",precondition:S.writable})}run(e,t){let i=t.getModel();if(!i)return;let n=i.getOptions(),o=t.getSelection();if(!o)return;let r=new lI(o,n.tabSize);t.pushUndoStop(),t.executeCommands(this.id,[r]),t.pushUndoStop(),i.updateOptions({insertSpaces:!0})}};Pc.ID="editor.action.indentationToSpaces";var Mc=class extends F{constructor(){super({id:Mc.ID,label:u("indentationToTabs","Convert Indentation to Tabs"),alias:"Convert Indentation to Tabs",precondition:S.writable})}run(e,t){let i=t.getModel();if(!i)return;let n=i.getOptions(),o=t.getSelection();if(!o)return;let r=new dI(o,n.tabSize);t.pushUndoStop(),t.executeCommands(this.id,[r]),t.pushUndoStop(),i.updateOptions({insertSpaces:!1})}};Mc.ID="editor.action.indentationToTabs";var lb=class extends F{constructor(e,t){super(t);this.insertSpaces=e}run(e,t){let i=e.get(Wi),n=e.get(Yt),o=t.getModel();if(!o)return;let r=n.getCreationOptions(o.getLanguageId(),o.uri,o.isForSimpleWidget),a=[1,2,3,4,5,6,7,8].map(c=>({id:c.toString(),label:c.toString(),description:c===r.tabSize?u("configuredTabSize","Configured Tab Size"):void 0})),l=Math.min(o.getOptions().tabSize-1,7);setTimeout(()=>{i.pick(a,{placeHolder:u({key:"selectTabWidth",comment:["Tab corresponds to the tab key"]},"Select Tab Size for Current File"),activeItem:a[l]}).then(c=>{c&&o&&!o.isDisposed()&&o.updateOptions({tabSize:parseInt(c.label,10),insertSpaces:this.insertSpaces})})},50)}},Dc=class extends lb{constructor(){super(!1,{id:Dc.ID,label:u("indentUsingTabs","Indent Using Tabs"),alias:"Indent Using Tabs",precondition:void 0})}};Dc.ID="editor.action.indentUsingTabs";var Rc=class extends lb{constructor(){super(!0,{id:Rc.ID,label:u("indentUsingSpaces","Indent Using Spaces"),alias:"Indent Using Spaces",precondition:void 0})}};Rc.ID="editor.action.indentUsingSpaces";var Ac=class extends F{constructor(){super({id:Ac.ID,label:u("detectIndentation","Detect Indentation from Content"),alias:"Detect Indentation from Content",precondition:void 0})}run(e,t){let i=e.get(Yt),n=t.getModel();if(!n)return;let o=i.getCreationOptions(n.getLanguageId(),n.uri,n.isForSimpleWidget);n.detectIndentation(o.insertSpaces,o.tabSize)}};Ac.ID="editor.action.detectIndentation";var oI=class extends F{constructor(){super({id:"editor.action.reindentlines",label:u("editor.reindentlines","Reindent Lines"),alias:"Reindent Lines",precondition:S.writable})}run(e,t){let i=e.get(Dt),n=t.getModel();if(!n)return;let o=nI(n,i,1,n.getLineCount());o.length>0&&(t.pushUndoStop(),t.executeEdits(this.id,o),t.pushUndoStop())}},rI=class extends F{constructor(){super({id:"editor.action.reindentselectedlines",label:u("editor.reindentselectedlines","Reindent Selected Lines"),alias:"Reindent Selected Lines",precondition:S.writable})}run(e,t){let i=e.get(Dt),n=t.getModel();if(!n)return;let o=t.getSelections();if(o===null)return;let r=[];for(let a of o){let l=a.startLineNumber,c=a.endLineNumber;if(l!==c&&a.endColumn===1&&c--,l===1){if(l===c)continue}else l--;let d=nI(n,i,l,c);r.push(...d)}r.length>0&&(t.pushUndoStop(),t.executeEdits(this.id,r),t.pushUndoStop())}},sI=class{constructor(e,t){this._initialSelection=t,this._edits=[],this._selectionId=null;for(let i of e)i.range&&typeof i.text=="string"&&this._edits.push(i)}getEditOperations(e,t){for(let n of this._edits)t.addEditOperation(b.lift(n.range),n.text);let i=!1;Array.isArray(this._edits)&&this._edits.length===1&&this._initialSelection.isEmpty()&&(this._edits[0].range.startColumn===this._initialSelection.endColumn&&this._edits[0].range.startLineNumber===this._initialSelection.endLineNumber?(i=!0,this._selectionId=t.trackSelection(this._initialSelection,!0)):this._edits[0].range.endColumn===this._initialSelection.startColumn&&this._edits[0].range.endLineNumber===this._initialSelection.startLineNumber&&(i=!0,this._selectionId=t.trackSelection(this._initialSelection,!1))),i||(this._selectionId=t.trackSelection(this._initialSelection))}computeCursorState(e,t){return t.getTrackedSelection(this._selectionId)}},om=class{constructor(e){this.callOnDispose=new A,this.callOnModel=new A,this.editor=e,this.callOnDispose.add(e.onDidChangeConfiguration(()=>this.update())),this.callOnDispose.add(e.onDidChangeModel(()=>this.update())),this.callOnDispose.add(e.onDidChangeModelLanguage(()=>this.update()))}update(){this.callOnModel.clear(),!(this.editor.getOption(9)<4||this.editor.getOption(48))&&(!this.editor.hasModel()||this.callOnModel.add(this.editor.onDidPaste(({range:e})=>{this.trigger(e)})))}trigger(e){let t=this.editor.getSelections();if(t===null||t.length>1)return;let i=this.editor.getModel();if(!i||!i.isCheapToTokenize(e.getStartPosition().lineNumber))return;let n=this.editor.getOption(9),{tabSize:o,indentSize:r,insertSpaces:a}=i.getOptions(),l=[],c={shiftIndent:m=>Sr.shiftIndent(m,m.length+1,o,r,a),unshiftIndent:m=>Sr.unshiftIndent(m,m.length+1,o,r,a)},d=e.startLineNumber;for(;d<=e.endLineNumber;){if(this.shouldIgnoreLine(i,d)){d++;continue}break}if(d>e.endLineNumber)return;let h=i.getLineContent(d);if(!/\S/.test(h.substring(0,e.startColumn-1))){let m=ii.getGoodIndentForLine(n,i,i.getLanguageId(),d,c);if(m!==null){let f=pt(h),v=pi(m,o),_=pi(f,o);if(v!==_){let w=Us(v,o,a);l.push({range:new b(d,1,d,f.length+1),text:w}),h=w+h.substr(f.length)}else{let w=ii.getIndentMetadata(i,d);if(w===0||w===8)return}}}let p=d;for(;d<e.endLineNumber;){if(!/\S/.test(i.getLineContent(d+1))){d++;continue}break}if(d!==e.endLineNumber){let m={getLineTokens:v=>i.getLineTokens(v),getLanguageId:()=>i.getLanguageId(),getLanguageIdAtPosition:(v,_)=>i.getLanguageIdAtPosition(v,_),getLineContent:v=>v===p?h:i.getLineContent(v)},f=ii.getGoodIndentForLine(n,m,i.getLanguageId(),d+1,c);if(f!==null){let v=pi(f,o),_=pi(pt(i.getLineContent(d+1)),o);if(v!==_){let w=v-_;for(let R=d+1;R<=e.endLineNumber;R++){let P=i.getLineContent(R),B=pt(P),ce=pi(B,o)+w,Te=Us(ce,o,a);Te!==B&&l.push({range:new b(R,1,R,B.length+1),text:Te})}}}}if(l.length>0){this.editor.pushUndoStop();let m=new sI(l,this.editor.getSelection());this.editor.executeCommand("autoIndentOnPaste",m),this.editor.pushUndoStop()}}shouldIgnoreLine(e,t){e.forceTokenization(t);let i=e.getLineFirstNonWhitespaceColumn(t);if(i===0)return!0;let n=e.getLineTokens(t);if(n.getCount()>0){let o=n.findTokenIndexAtOffset(i);if(o>=0&&n.getStandardTokenType(o)===1)return!0}return!1}dispose(){this.callOnDispose.dispose(),this.callOnModel.dispose()}};om.ID="editor.contrib.autoIndentOnPaste";function aI(s,e,t,i){if(s.getLineCount()===1&&s.getLineMaxColumn(1)===1)return;let n="";for(let r=0;r<t;r++)n+=" ";let o=new RegExp(n,"gi");for(let r=1,a=s.getLineCount();r<=a;r++){let l=s.getLineFirstNonWhitespaceColumn(r);if(l===0&&(l=s.getLineMaxColumn(r)),l===1)continue;let c=new b(r,1,r,l),d=s.getValueInRange(c),h=i?d.replace(/\t/ig,n):d.replace(o,"	");e.addEditOperation(c,h)}}var lI=class{constructor(e,t){this.selection=e,this.tabSize=t,this.selectionId=null}getEditOperations(e,t){this.selectionId=t.trackSelection(this.selection),aI(e,t,this.tabSize,!0)}computeCursorState(e,t){return t.getTrackedSelection(this.selectionId)}},dI=class{constructor(e,t){this.selection=e,this.tabSize=t,this.selectionId=null}getEditOperations(e,t){this.selectionId=t.trackSelection(this.selection),aI(e,t,this.tabSize,!1)}computeCursorState(e,t){return t.getTrackedSelection(this.selectionId)}};J(om.ID,om);I(Pc);I(Mc);I(Dc);I(Rc);I(Ac);I(oI);I(rI);var bae=Zr(pI());ue();He();Q();var mI=class extends F{constructor(){super({id:"expandLineSelection",label:u("expandLineSelection","Expand Line Selection"),alias:"Expand Line Selection",precondition:void 0,kbOpts:{weight:0,kbExpr:S.textInputFocus,primary:2090}})}run(e,t,i){if(i=i||{},!t.hasModel())return;let n=t._getViewModel();n.model.pushStackElement(),n.setCursorStates(i.source,3,ud.expandLineSelection(n,n.getCursorStates())),n.revealPrimaryCursor(i.source,!0)}};I(mI);yo();ue();Ye();Do();ee();var hb=class{constructor(e,t){this._selection=e,this._cursors=t,this._selectionId=null}getEditOperations(e,t){let i=mR(e,this._cursors);for(let n=0,o=i.length;n<o;n++){let r=i[n];t.addEditOperation(r.range,r.text)}this._selectionId=t.trackSelection(this._selection)}computeCursorState(e,t){return t.getTrackedSelection(this._selectionId)}};function mR(s,e){e.sort((r,a)=>r.lineNumber===a.lineNumber?r.column-a.column:r.lineNumber-a.lineNumber);for(let r=e.length-2;r>=0;r--)e[r].lineNumber===e[r+1].lineNumber&&e.splice(r,1);let t=[],i=0,n=0,o=e.length;for(let r=1,a=s.getLineCount();r<=a;r++){let l=s.getLineContent(r),c=l.length+1,d=0;if(n<o&&e[n].lineNumber===r&&(d=e[n].column,n++,d===c)||l.length===0)continue;let h=ma(l),p=0;if(h===-1)p=1;else if(h!==l.length-1)p=h+2;else continue;p=Math.max(d,p),t[i++]=Ge.delete(new b(r,p,r,c))}return t}Do();tt();ee();Mt();He();ee();Mt();var rm=class{constructor(e,t,i){this._selection=e,this._isCopyingDown=t,this._noop=i||!1,this._selectionDirection=0,this._selectionId=null,this._startLineNumberDelta=0,this._endLineNumberDelta=0}getEditOperations(e,t){let i=this._selection;this._startLineNumberDelta=0,this._endLineNumberDelta=0,i.startLineNumber<i.endLineNumber&&i.endColumn===1&&(this._endLineNumberDelta=1,i=i.setEndPosition(i.endLineNumber-1,e.getLineMaxColumn(i.endLineNumber-1)));let n=[];for(let r=i.startLineNumber;r<=i.endLineNumber;r++)n.push(e.getLineContent(r));let o=n.join(`
`);o===""&&this._isCopyingDown&&(this._startLineNumberDelta++,this._endLineNumberDelta++),this._noop?t.addEditOperation(new b(i.endLineNumber,e.getLineMaxColumn(i.endLineNumber),i.endLineNumber+1,1),i.endLineNumber===e.getLineCount()?"":`
`):this._isCopyingDown?t.addEditOperation(new b(i.startLineNumber,1,i.startLineNumber,1),o+`
`):t.addEditOperation(new b(i.endLineNumber,e.getLineMaxColumn(i.endLineNumber),i.endLineNumber,e.getLineMaxColumn(i.endLineNumber)),`
`+o),this._selectionId=t.trackSelection(i),this._selectionDirection=this._selection.getDirection()}computeCursorState(e,t){let i=t.getTrackedSelection(this._selectionId);if(this._startLineNumberDelta!==0||this._endLineNumberDelta!==0){let n=i.startLineNumber,o=i.startColumn,r=i.endLineNumber,a=i.endColumn;this._startLineNumberDelta!==0&&(n=n+this._startLineNumberDelta,o=1),this._endLineNumberDelta!==0&&(r=r+this._endLineNumberDelta,a=1),i=X.createWithDirection(n,o,r,a,this._selectionDirection)}return i}};Ye();ee();Mt();$L();sn();var ub=class{constructor(e,t,i){this._selection=e,this._isMovingDown=t,this._autoIndent=i,this._selectionId=null,this._moveEndLineSelectionShrink=!1}getEditOperations(e,t){let i=e.getLineCount();if(this._isMovingDown&&this._selection.endLineNumber===i){this._selectionId=t.trackSelection(this._selection);return}if(!this._isMovingDown&&this._selection.startLineNumber===1){this._selectionId=t.trackSelection(this._selection);return}this._moveEndPositionDown=!1;let n=this._selection;n.startLineNumber<n.endLineNumber&&n.endColumn===1&&(this._moveEndPositionDown=!0,n=n.setEndPosition(n.endLineNumber-1,e.getLineMaxColumn(n.endLineNumber-1)));let{tabSize:o,indentSize:r,insertSpaces:a}=e.getOptions(),l=this.buildIndentConverter(o,r,a),c={getLineTokens:d=>e.getLineTokens(d),getLanguageId:()=>e.getLanguageId(),getLanguageIdAtPosition:(d,h)=>e.getLanguageIdAtPosition(d,h),getLineContent:null};if(n.startLineNumber===n.endLineNumber&&e.getLineMaxColumn(n.startLineNumber)===1){let d=n.startLineNumber,h=this._isMovingDown?d+1:d-1;e.getLineMaxColumn(h)===1?t.addEditOperation(new b(1,1,1,1),null):(t.addEditOperation(new b(d,1,d,1),e.getLineContent(h)),t.addEditOperation(new b(h,1,h,e.getLineMaxColumn(h)),null)),n=new X(h,1,h,1)}else{let d,h;if(this._isMovingDown){d=n.endLineNumber+1,h=e.getLineContent(d),t.addEditOperation(new b(d-1,e.getLineMaxColumn(d-1),d,e.getLineMaxColumn(d)),null);let p=h;if(this.shouldAutoIndent(e,n)){let m=this.matchEnterRule(e,l,o,d,n.startLineNumber-1);if(m!==null){let v=pt(e.getLineContent(d)),_=m+pi(v,o);p=Us(_,o,a)+this.trimLeft(h)}else{c.getLineContent=_=>_===n.startLineNumber?e.getLineContent(d):e.getLineContent(_);let v=ii.getGoodIndentForLine(this._autoIndent,c,e.getLanguageIdAtPosition(d,1),n.startLineNumber,l);if(v!==null){let _=pt(e.getLineContent(d)),w=pi(v,o),R=pi(_,o);w!==R&&(p=Us(w,o,a)+this.trimLeft(h))}}t.addEditOperation(new b(n.startLineNumber,1,n.startLineNumber,1),p+`
`);let f=this.matchEnterRuleMovingDown(e,l,o,n.startLineNumber,d,p);if(f!==null)f!==0&&this.getIndentEditsOfMovingBlock(e,t,n,o,a,f);else{c.getLineContent=_=>_===n.startLineNumber?p:_>=n.startLineNumber+1&&_<=n.endLineNumber+1?e.getLineContent(_-1):e.getLineContent(_);let v=ii.getGoodIndentForLine(this._autoIndent,c,e.getLanguageIdAtPosition(d,1),n.startLineNumber+1,l);if(v!==null){let _=pt(e.getLineContent(n.startLineNumber)),w=pi(v,o),R=pi(_,o);if(w!==R){let P=w-R;this.getIndentEditsOfMovingBlock(e,t,n,o,a,P)}}}}else t.addEditOperation(new b(n.startLineNumber,1,n.startLineNumber,1),p+`
`)}else if(d=n.startLineNumber-1,h=e.getLineContent(d),t.addEditOperation(new b(d,1,d+1,1),null),t.addEditOperation(new b(n.endLineNumber,e.getLineMaxColumn(n.endLineNumber),n.endLineNumber,e.getLineMaxColumn(n.endLineNumber)),`
`+h),this.shouldAutoIndent(e,n)){c.getLineContent=m=>m===d?e.getLineContent(n.startLineNumber):e.getLineContent(m);let p=this.matchEnterRule(e,l,o,n.startLineNumber,n.startLineNumber-2);if(p!==null)p!==0&&this.getIndentEditsOfMovingBlock(e,t,n,o,a,p);else{let m=ii.getGoodIndentForLine(this._autoIndent,c,e.getLanguageIdAtPosition(n.startLineNumber,1),d,l);if(m!==null){let f=pt(e.getLineContent(n.startLineNumber)),v=pi(m,o),_=pi(f,o);if(v!==_){let w=v-_;this.getIndentEditsOfMovingBlock(e,t,n,o,a,w)}}}}}this._selectionId=t.trackSelection(n)}buildIndentConverter(e,t,i){return{shiftIndent:n=>Sr.shiftIndent(n,n.length+1,e,t,i),unshiftIndent:n=>Sr.unshiftIndent(n,n.length+1,e,t,i)}}parseEnterResult(e,t,i,n,o){if(o){let r=o.indentation;o.indentAction===Xl.None||o.indentAction===Xl.Indent?r=o.indentation+o.appendText:o.indentAction===Xl.IndentOutdent?r=o.indentation:o.indentAction===Xl.Outdent&&(r=t.unshiftIndent(o.indentation)+o.appendText);let a=e.getLineContent(n);if(this.trimLeft(a).indexOf(this.trimLeft(r))>=0){let l=pt(e.getLineContent(n)),c=pt(r),d=ii.getIndentMetadata(e,n);d!==null&&d&2&&(c=t.unshiftIndent(c));let h=pi(c,i),p=pi(l,i);return h-p}}return null}matchEnterRuleMovingDown(e,t,i,n,o,r){if(ma(r)>=0){let a=e.getLineMaxColumn(o),l=ii.getEnterAction(this._autoIndent,e,new b(o,a,o,a));return this.parseEnterResult(e,t,i,n,l)}else{let a=n-1;for(;a>=1;){let d=e.getLineContent(a);if(ma(d)>=0)break;a--}if(a<1||n>e.getLineCount())return null;let l=e.getLineMaxColumn(a),c=ii.getEnterAction(this._autoIndent,e,new b(a,l,a,l));return this.parseEnterResult(e,t,i,n,c)}}matchEnterRule(e,t,i,n,o,r){let a=o;for(;a>=1;){let d;if(a===o&&r!==void 0?d=r:d=e.getLineContent(a),ma(d)>=0)break;a--}if(a<1||n>e.getLineCount())return null;let l=e.getLineMaxColumn(a),c=ii.getEnterAction(this._autoIndent,e,new b(a,l,a,l));return this.parseEnterResult(e,t,i,n,c)}trimLeft(e){return e.replace(/^\s+/,"")}shouldAutoIndent(e,t){if(this._autoIndent<4||!e.isCheapToTokenize(t.startLineNumber))return!1;let i=e.getLanguageIdAtPosition(t.startLineNumber,1),n=e.getLanguageIdAtPosition(t.endLineNumber,1);return!(i!==n||ii.getIndentRulesSupport(i)===null)}getIndentEditsOfMovingBlock(e,t,i,n,o,r){for(let a=i.startLineNumber;a<=i.endLineNumber;a++){let l=e.getLineContent(a),c=pt(l),h=pi(c,n)+r,p=Us(h,n,o);p!==c&&(t.addEditOperation(new b(a,1,a,c.length+1),p),a===i.endLineNumber&&i.endColumn<=c.length+1&&p===""&&(this._moveEndLineSelectionShrink=!0))}}computeCursorState(e,t){let i=t.getTrackedSelection(this._selectionId);return this._moveEndPositionDown&&(i=i.setEndPosition(i.endLineNumber+1,1)),this._moveEndLineSelectionShrink&&i.startLineNumber<i.endLineNumber&&(i=i.setEndPosition(i.endLineNumber,2)),i}};Do();ee();var uo=class{constructor(e,t){this.selection=e,this.descending=t,this.selectionId=null}static getCollator(){return uo._COLLATOR||(uo._COLLATOR=new Intl.Collator),uo._COLLATOR}getEditOperations(e,t){let i=gR(e,this.selection,this.descending);i&&t.addEditOperation(i.range,i.text),this.selectionId=t.trackSelection(this.selection)}computeCursorState(e,t){return t.getTrackedSelection(this.selectionId)}static canRun(e,t,i){if(e===null)return!1;let n=gI(e,t,i);if(!n)return!1;for(let o=0,r=n.before.length;o<r;o++)if(n.before[o]!==n.after[o])return!0;return!1}};uo._COLLATOR=null;function gI(s,e,t){let i=e.startLineNumber,n=e.endLineNumber;if(e.endColumn===1&&n--,i>=n)return null;let o=[];for(let a=i;a<=n;a++)o.push(s.getLineContent(a));let r=o.slice(0);return r.sort(uo.getCollator().compare),t===!0&&(r=r.reverse()),{startLineNumber:i,endLineNumber:n,before:o,after:r}}function gR(s,e,t){let i=gI(s,e,t);return i?Ge.replace(new b(i.startLineNumber,1,i.endLineNumber,s.getLineMaxColumn(i.endLineNumber)),i.after.join(`
`)):null}Q();ri();var pb=class extends F{constructor(e,t){super(t);this.down=e}run(e,t){if(!t.hasModel())return;let i=t.getSelections().map((r,a)=>({selection:r,index:a,ignore:!1}));i.sort((r,a)=>b.compareRangesUsingStarts(r.selection,a.selection));let n=i[0];for(let r=1;r<i.length;r++){let a=i[r];n.selection.endLineNumber===a.selection.startLineNumber&&(n.index<a.index?a.ignore=!0:(n.ignore=!0,n=a))}let o=[];for(let r of i)o.push(new rm(r.selection,this.down,r.ignore));t.pushUndoStop(),t.executeCommands(this.id,o),t.pushUndoStop()}},fI=class extends pb{constructor(){super(!1,{id:"editor.action.copyLinesUpAction",label:u("lines.copyUp","Copy Line Up"),alias:"Copy Line Up",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:1552,linux:{primary:3600},weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"2_line",title:u({key:"miCopyLinesUp",comment:["&& denotes a mnemonic"]},"&&Copy Line Up"),order:1}})}},yI=class extends pb{constructor(){super(!0,{id:"editor.action.copyLinesDownAction",label:u("lines.copyDown","Copy Line Down"),alias:"Copy Line Down",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:1554,linux:{primary:3602},weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"2_line",title:u({key:"miCopyLinesDown",comment:["&& denotes a mnemonic"]},"Co&&py Line Down"),order:2}})}},bI=class extends F{constructor(){super({id:"editor.action.duplicateSelection",label:u("duplicateSelection","Duplicate Selection"),alias:"Duplicate Selection",precondition:S.writable,menuOpts:{menuId:se.MenubarSelectionMenu,group:"2_line",title:u({key:"miDuplicateSelection",comment:["&& denotes a mnemonic"]},"&&Duplicate Selection"),order:5}})}run(e,t,i){if(!t.hasModel())return;let n=[],o=t.getSelections(),r=t.getModel();for(let a of o)if(a.isEmpty())n.push(new rm(a,!0));else{let l=new X(a.endLineNumber,a.endColumn,a.endLineNumber,a.endColumn);n.push(new Mx(l,r.getValueInRange(a)))}t.pushUndoStop(),t.executeCommands(this.id,n),t.pushUndoStop()}},mb=class extends F{constructor(e,t){super(t);this.down=e}run(e,t){let i=[],n=t.getSelections()||[],o=t.getOption(9);for(let r of n)i.push(new ub(r,this.down,o));t.pushUndoStop(),t.executeCommands(this.id,i),t.pushUndoStop()}},SI=class extends mb{constructor(){super(!1,{id:"editor.action.moveLinesUpAction",label:u("lines.moveUp","Move Line Up"),alias:"Move Line Up",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:528,linux:{primary:528},weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"2_line",title:u({key:"miMoveLinesUp",comment:["&& denotes a mnemonic"]},"Mo&&ve Line Up"),order:3}})}},vI=class extends mb{constructor(){super(!0,{id:"editor.action.moveLinesDownAction",label:u("lines.moveDown","Move Line Down"),alias:"Move Line Down",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:530,linux:{primary:530},weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"2_line",title:u({key:"miMoveLinesDown",comment:["&& denotes a mnemonic"]},"Move &&Line Down"),order:4}})}},gb=class extends F{constructor(e,t){super(t);this.descending=e}run(e,t){let i=t.getSelections()||[];for(let o of i)if(!uo.canRun(t.getModel(),o,this.descending))return;let n=[];for(let o=0,r=i.length;o<r;o++)n[o]=new uo(i[o],this.descending);t.pushUndoStop(),t.executeCommands(this.id,n),t.pushUndoStop()}},xI=class extends gb{constructor(){super(!1,{id:"editor.action.sortLinesAscending",label:u("lines.sortAscending","Sort Lines Ascending"),alias:"Sort Lines Ascending",precondition:S.writable})}},CI=class extends gb{constructor(){super(!0,{id:"editor.action.sortLinesDescending",label:u("lines.sortDescending","Sort Lines Descending"),alias:"Sort Lines Descending",precondition:S.writable})}},_I=class extends F{constructor(){super({id:"editor.action.removeDuplicateLines",label:u("lines.deleteDuplicates","Delete Duplicate Lines"),alias:"Delete Duplicate Lines",precondition:S.writable})}run(e,t){if(!t.hasModel())return;let i=t.getModel();if(i.getLineCount()===1&&i.getLineMaxColumn(1)===1)return;let n=[],o=[],r=0;for(let a of t.getSelections()){let l=new Set,c=[];for(let m=a.startLineNumber;m<=a.endLineNumber;m++){let f=i.getLineContent(m);l.has(f)||(c.push(f),l.add(f))}let d=new X(a.startLineNumber,1,a.endLineNumber,i.getLineMaxColumn(a.endLineNumber)),h=a.startLineNumber-r,p=new X(h,1,h+c.length-1,c[c.length-1].length);n.push(Ge.replace(d,c.join(`
`))),o.push(p),r+=a.endLineNumber-a.startLineNumber+1-c.length}t.pushUndoStop(),t.executeEdits(this.id,n,o),t.pushUndoStop()}},Nc=class extends F{constructor(){super({id:Nc.ID,label:u("lines.trimTrailingWhitespace","Trim Trailing Whitespace"),alias:"Trim Trailing Whitespace",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:Xe(2089,2102),weight:100}})}run(e,t,i){let n=[];i.reason==="auto-save"&&(n=(t.getSelections()||[]).map(a=>new U(a.positionLineNumber,a.positionColumn)));let o=t.getSelection();if(o===null)return;let r=new hb(o,n);t.pushUndoStop(),t.executeCommands(this.id,[r]),t.pushUndoStop()}};Nc.ID="editor.action.trimTrailingWhitespace";var wI=class extends F{constructor(){super({id:"editor.action.deleteLines",label:u("lines.delete","Delete Line"),alias:"Delete Line",precondition:S.writable,kbOpts:{kbExpr:S.textInputFocus,primary:3113,weight:100}})}run(e,t){if(!t.hasModel())return;let i=this._getLinesToRemove(t),n=t.getModel();if(n.getLineCount()===1&&n.getLineMaxColumn(1)===1)return;let o=0,r=[],a=[];for(let l=0,c=i.length;l<c;l++){let d=i[l],h=d.startLineNumber,p=d.endLineNumber,m=1,f=n.getLineMaxColumn(p);p<n.getLineCount()?(p+=1,f=1):h>1&&(h-=1,m=n.getLineMaxColumn(h)),r.push(Ge.replace(new X(h,m,p,f),"")),a.push(new X(h-o,d.positionColumn,h-o,d.positionColumn)),o+=d.endLineNumber-d.startLineNumber+1}t.pushUndoStop(),t.executeEdits(this.id,r,a),t.pushUndoStop()}_getLinesToRemove(e){let t=e.getSelections().map(o=>{let r=o.endLineNumber;return o.startLineNumber<o.endLineNumber&&o.endColumn===1&&(r-=1),{startLineNumber:o.startLineNumber,selectionStartColumn:o.selectionStartColumn,endLineNumber:r,positionColumn:o.positionColumn}});t.sort((o,r)=>o.startLineNumber===r.startLineNumber?o.endLineNumber-r.endLineNumber:o.startLineNumber-r.startLineNumber);let i=[],n=t[0];for(let o=1;o<t.length;o++)n.endLineNumber+1>=t[o].startLineNumber?n.endLineNumber=t[o].endLineNumber:(i.push(n),n=t[o]);return i.push(n),i}},TI=class extends F{constructor(){super({id:"editor.action.indentLines",label:u("lines.indent","Indent Line"),alias:"Indent Line",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:2137,weight:100}})}run(e,t){let i=t._getViewModel();!i||(t.pushUndoStop(),t.executeCommands(this.id,su.indent(i.cursorConfig,t.getModel(),t.getSelections())),t.pushUndoStop())}},EI=class extends F{constructor(){super({id:"editor.action.outdentLines",label:u("lines.outdent","Outdent Line"),alias:"Outdent Line",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:2135,weight:100}})}run(e,t){Fa.Outdent.runEditorCommand(e,t,null)}},II=class extends F{constructor(){super({id:"editor.action.insertLineBefore",label:u("lines.insertBefore","Insert Line Above"),alias:"Insert Line Above",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:3075,weight:100}})}run(e,t){let i=t._getViewModel();!i||(t.pushUndoStop(),t.executeCommands(this.id,su.lineInsertBefore(i.cursorConfig,t.getModel(),t.getSelections())))}},kI=class extends F{constructor(){super({id:"editor.action.insertLineAfter",label:u("lines.insertAfter","Insert Line Below"),alias:"Insert Line Below",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:2051,weight:100}})}run(e,t){let i=t._getViewModel();!i||(t.pushUndoStop(),t.executeCommands(this.id,su.lineInsertAfter(i.cursorConfig,t.getModel(),t.getSelections())))}},fb=class extends F{run(e,t){if(!t.hasModel())return;let i=t.getSelection(),n=this._getRangesToDelete(t),o=[];for(let l=0,c=n.length-1;l<c;l++){let d=n[l],h=n[l+1];b.intersectRanges(d,h)===null?o.push(d):n[l+1]=b.plusRange(d,h)}o.push(n[n.length-1]);let r=this._getEndCursorState(i,o),a=o.map(l=>Ge.replace(l,""));t.pushUndoStop(),t.executeEdits(this.id,a,r),t.pushUndoStop()}},LI=class extends fb{constructor(){super({id:"deleteAllLeft",label:u("lines.deleteAllLeft","Delete All Left"),alias:"Delete All Left",precondition:S.writable,kbOpts:{kbExpr:S.textInputFocus,primary:0,mac:{primary:2049},weight:100}})}_getEndCursorState(e,t){let i=null,n=[],o=0;return t.forEach(r=>{let a;if(r.endColumn===1&&o>0){let l=r.startLineNumber-o;a=new X(l,r.startColumn,l,r.startColumn)}else a=new X(r.startLineNumber,r.startColumn,r.startLineNumber,r.startColumn);o+=r.endLineNumber-r.startLineNumber,r.intersectRanges(e)?i=a:n.push(a)}),i&&n.unshift(i),n}_getRangesToDelete(e){let t=e.getSelections();if(t===null)return[];let i=t,n=e.getModel();return n===null?[]:(i.sort(b.compareRangesUsingStarts),i=i.map(o=>{if(o.isEmpty())if(o.startColumn===1){let r=Math.max(1,o.startLineNumber-1),a=o.startLineNumber===1?1:n.getLineContent(r).length+1;return new b(r,a,o.startLineNumber,1)}else return new b(o.startLineNumber,1,o.startLineNumber,o.startColumn);else return new b(o.startLineNumber,1,o.endLineNumber,o.endColumn)}),i)}},PI=class extends fb{constructor(){super({id:"deleteAllRight",label:u("lines.deleteAllRight","Delete All Right"),alias:"Delete All Right",precondition:S.writable,kbOpts:{kbExpr:S.textInputFocus,primary:0,mac:{primary:297,secondary:[2068]},weight:100}})}_getEndCursorState(e,t){let i=null,n=[];for(let o=0,r=t.length,a=0;o<r;o++){let l=t[o],c=new X(l.startLineNumber-a,l.startColumn,l.startLineNumber-a,l.startColumn);l.intersectRanges(e)?i=c:n.push(c)}return i&&n.unshift(i),n}_getRangesToDelete(e){let t=e.getModel();if(t===null)return[];let i=e.getSelections();if(i===null)return[];let n=i.map(o=>{if(o.isEmpty()){let r=t.getLineMaxColumn(o.startLineNumber);return o.startColumn===r?new b(o.startLineNumber,o.startColumn,o.startLineNumber+1,1):new b(o.startLineNumber,o.startColumn,o.startLineNumber,r)}return o});return n.sort(b.compareRangesUsingStarts),n}},MI=class extends F{constructor(){super({id:"editor.action.joinLines",label:u("lines.joinLines","Join Lines"),alias:"Join Lines",precondition:S.writable,kbOpts:{kbExpr:S.editorTextFocus,primary:0,mac:{primary:296},weight:100}})}run(e,t){let i=t.getSelections();if(i===null)return;let n=t.getSelection();if(n===null)return;i.sort(b.compareRangesUsingStarts);let o=[],r=i.reduce((p,m)=>p.isEmpty()?p.endLineNumber===m.startLineNumber?(n.equalsSelection(p)&&(n=m),m):m.startLineNumber>p.endLineNumber+1?(o.push(p),m):new X(p.startLineNumber,p.startColumn,m.endLineNumber,m.endColumn):m.startLineNumber>p.endLineNumber?(o.push(p),m):new X(p.startLineNumber,p.startColumn,m.endLineNumber,m.endColumn));o.push(r);let a=t.getModel();if(a===null)return;let l=[],c=[],d=n,h=0;for(let p=0,m=o.length;p<m;p++){let f=o[p],v=f.startLineNumber,_=1,w=0,R,P,B=a.getLineContent(f.endLineNumber).length-f.endColumn;if(f.isEmpty()||f.startLineNumber===f.endLineNumber){let Te=f.getStartPosition();Te.lineNumber<a.getLineCount()?(R=v+1,P=a.getLineMaxColumn(R)):(R=Te.lineNumber,P=a.getLineMaxColumn(Te.lineNumber))}else R=f.endLineNumber,P=a.getLineMaxColumn(R);let V=a.getLineContent(v);for(let Te=v+1;Te<=R;Te++){let kt=a.getLineContent(Te),Wt=a.getLineFirstNonWhitespaceColumn(Te);if(Wt>=1){let Bt=!0;V===""&&(Bt=!1),Bt&&(V.charAt(V.length-1)===" "||V.charAt(V.length-1)==="	")&&(Bt=!1,V=V.replace(/[\s\uFEFF\xA0]+$/g," "));let nn=kt.substr(Wt-1);V+=(Bt?" ":"")+nn,Bt?w=nn.length+1:w=nn.length}else w=0}let ce=new b(v,_,R,P);if(!ce.isEmpty()){let Te;f.isEmpty()?(l.push(Ge.replace(ce,V)),Te=new X(ce.startLineNumber-h,V.length-w+1,v-h,V.length-w+1)):f.startLineNumber===f.endLineNumber?(l.push(Ge.replace(ce,V)),Te=new X(f.startLineNumber-h,f.startColumn,f.endLineNumber-h,f.endColumn)):(l.push(Ge.replace(ce,V)),Te=new X(f.startLineNumber-h,f.startColumn,f.startLineNumber-h,V.length-B)),b.intersectRanges(ce,n)!==null?d=Te:c.push(Te)}h+=ce.endLineNumber-ce.startLineNumber}c.unshift(d),t.pushUndoStop(),t.executeEdits(this.id,l,c),t.pushUndoStop()}},DI=class extends F{constructor(){super({id:"editor.action.transpose",label:u("editor.transpose","Transpose characters around the cursor"),alias:"Transpose characters around the cursor",precondition:S.writable})}run(e,t){let i=t.getSelections();if(i===null)return;let n=t.getModel();if(n===null)return;let o=[];for(let r=0,a=i.length;r<a;r++){let l=i[r];if(!l.isEmpty())continue;let c=l.getStartPosition(),d=n.getLineMaxColumn(c.lineNumber);if(c.column>=d){if(c.lineNumber===n.getLineCount())continue;let h=new b(c.lineNumber,Math.max(1,c.column-1),c.lineNumber+1,1),p=n.getValueInRange(h).split("").reverse().join("");o.push(new Eo(new X(c.lineNumber,Math.max(1,c.column-1),c.lineNumber+1,1),p))}else{let h=new b(c.lineNumber,Math.max(1,c.column-1),c.lineNumber,c.column+1),p=n.getValueInRange(h).split("").reverse().join("");o.push(new ou(h,p,new X(c.lineNumber,c.column+1,c.lineNumber,c.column+1)))}}t.pushUndoStop(),t.executeCommands(this.id,o),t.pushUndoStop()}},zc=class extends F{run(e,t){let i=t.getSelections();if(i===null)return;let n=t.getModel();if(n===null)return;let o=t.getOption(117),r=[];for(let a of i)if(a.isEmpty()){let l=a.getStartPosition(),c=t.getConfiguredWordAtPosition(l);if(!c)continue;let d=new b(l.lineNumber,c.startColumn,l.lineNumber,c.endColumn),h=n.getValueInRange(d);r.push(Ge.replace(d,this._modifyText(h,o)))}else{let l=n.getValueInRange(a);r.push(Ge.replace(a,this._modifyText(l,o)))}t.pushUndoStop(),t.executeEdits(this.id,r),t.pushUndoStop()}},RI=class extends zc{constructor(){super({id:"editor.action.transformToUppercase",label:u("editor.transformToUppercase","Transform to Uppercase"),alias:"Transform to Uppercase",precondition:S.writable})}_modifyText(e,t){return e.toLocaleUpperCase()}},AI=class extends zc{constructor(){super({id:"editor.action.transformToLowercase",label:u("editor.transformToLowercase","Transform to Lowercase"),alias:"Transform to Lowercase",precondition:S.writable})}_modifyText(e,t){return e.toLocaleLowerCase()}},sm=class{constructor(e,t){this._pattern=e,this._flags=t,this._actual=null,this._evaluated=!1}get(){if(!this._evaluated){this._evaluated=!0;try{this._actual=new RegExp(this._pattern,this._flags)}catch(e){}}return this._actual}isSupported(){return this.get()!==null}},gl=class extends zc{constructor(){super({id:"editor.action.transformToTitlecase",label:u("editor.transformToTitlecase","Transform to Title Case"),alias:"Transform to Title Case",precondition:S.writable})}_modifyText(e,t){let i=gl.titleBoundary.get();return i?e.toLocaleLowerCase().replace(i,n=>n.toLocaleUpperCase()):e}};gl.titleBoundary=new sm("(^|[^\\p{L}\\p{N}']|((^|\\P{L})'))\\p{L}","gmu");var Yo=class extends zc{constructor(){super({id:"editor.action.transformToSnakecase",label:u("editor.transformToSnakecase","Transform to Snake Case"),alias:"Transform to Snake Case",precondition:S.writable})}_modifyText(e,t){let i=Yo.caseBoundary.get(),n=Yo.singleLetters.get();return!i||!n?e:e.replace(i,"$1_$2").replace(n,"$1_$2$3").toLocaleLowerCase()}};Yo.caseBoundary=new sm("(\\p{Ll})(\\p{Lu})","gmu");Yo.singleLetters=new sm("(\\p{Lu}|\\p{N})(\\p{Lu})(\\p{Ll})","gmu");I(fI);I(yI);I(bI);I(SI);I(vI);I(xI);I(CI);I(_I);I(Nc);I(wI);I(TI);I(EI);I(II);I(kI);I(LI);I(PI);I(MI);I(DI);I(RI);I(AI);Yo.caseBoundary.isSupported()&&Yo.singleLetters.isSupported()&&I(Yo);gl.titleBoundary.isSupported()&&I(gl);vt();ke();ut();Zn();Le();De();G();Ye();Xt();ue();Ci();tt();ee();He();jt();Re();sn();Q();Ee();mt();Ne();var fR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},FI=function(s,e){return function(t,i){e(t,i,s)}},yb=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},NI=new pe("LinkedEditingInputVisible",!1),zI="linked-editing-decoration",Vr=class bb extends z{constructor(e,t,i){super();this.languageConfigurationService=i,this._debounceDuration=200,this._localToDispose=this._register(new A),this._editor=e,this._enabled=!1,this._visibleContextKey=NI.bindTo(t),this._currentDecorations=[],this._languageWordPattern=null,this._currentWordPattern=null,this._ignoreChangeEvent=!1,this._localToDispose=this._register(new A),this._rangeUpdateTriggerPromise=null,this._rangeSyncTriggerPromise=null,this._currentRequest=null,this._currentRequestPosition=null,this._currentRequestModelVersion=null,this._register(this._editor.onDidChangeModel(()=>this.reinitialize(!0))),this._register(this._editor.onDidChangeConfiguration(n=>{(n.hasChanged(62)||n.hasChanged(82))&&this.reinitialize(!1)})),this._register(Th.onDidChange(()=>this.reinitialize(!1))),this._register(this._editor.onDidChangeModelLanguage(()=>this.reinitialize(!0))),this.reinitialize(!0)}static get(e){return e.getContribution(bb.ID)}reinitialize(e){let t=this._editor.getModel(),i=t!==null&&(this._editor.getOption(62)||this._editor.getOption(82))&&Th.has(t);if(i===this._enabled&&!e||(this._enabled=i,this.clearRanges(),this._localToDispose.clear(),!i||t===null))return;this._localToDispose.add(ht.runAndSubscribe(t.onDidChangeLanguageConfiguration,()=>{this._languageWordPattern=this.languageConfigurationService.getLanguageConfiguration(t.getLanguageId()).getWordDefinition()}));let n=new Tn(this._debounceDuration),o=()=>{this._rangeUpdateTriggerPromise=n.trigger(()=>this.updateRanges(),this._debounceDuration)},r=new Tn(0),a=l=>{this._rangeSyncTriggerPromise=r.trigger(()=>this._syncRanges(l))};this._localToDispose.add(this._editor.onDidChangeCursorPosition(()=>{o()})),this._localToDispose.add(this._editor.onDidChangeModelContent(l=>{if(!this._ignoreChangeEvent&&this._currentDecorations.length>0){let c=t.getDecorationRange(this._currentDecorations[0]);if(c&&l.changes.every(d=>c.intersectRanges(d.range))){a(this._currentDecorations);return}}o()})),this._localToDispose.add({dispose:()=>{n.cancel(),r.cancel()}}),this.updateRanges()}_syncRanges(e){if(!this._editor.hasModel()||e!==this._currentDecorations||e.length===0)return;let t=this._editor.getModel(),i=t.getDecorationRange(e[0]);if(!i||i.startLineNumber!==i.endLineNumber)return this.clearRanges();let n=t.getValueInRange(i);if(this._currentWordPattern){let r=n.match(this._currentWordPattern);if((r?r[0].length:0)!==n.length)return this.clearRanges()}let o=[];for(let r=1,a=e.length;r<a;r++){let l=t.getDecorationRange(e[r]);if(!!l)if(l.startLineNumber!==l.endLineNumber)o.push({range:l,text:n});else{let c=t.getValueInRange(l),d=n,h=l.startColumn,p=l.endColumn,m=dr(c,d);h+=m,c=c.substr(m),d=d.substr(m);let f=Ch(c,d);p-=f,c=c.substr(0,c.length-f),d=d.substr(0,d.length-f),(h!==p||d.length!==0)&&o.push({range:new b(l.startLineNumber,h,l.endLineNumber,p),text:d})}}if(o.length!==0)try{this._editor.popUndoStop(),this._ignoreChangeEvent=!0;let r=this._editor._getViewModel().getPrevEditOperationType();this._editor.executeEdits("linkedEditing",o),this._editor._getViewModel().setPrevEditOperationType(r)}finally{this._ignoreChangeEvent=!1}}dispose(){this.clearRanges(),super.dispose()}clearRanges(){this._visibleContextKey.set(!1),this._currentDecorations=this._editor.deltaDecorations(this._currentDecorations,[]),this._currentRequest&&(this._currentRequest.cancel(),this._currentRequest=null,this._currentRequestPosition=null)}updateRanges(e=!1){return yb(this,void 0,void 0,function*(){if(!this._editor.hasModel()){this.clearRanges();return}let t=this._editor.getPosition();if(!this._enabled&&!e||this._editor.getSelections().length>1){this.clearRanges();return}let i=this._editor.getModel(),n=i.getVersionId();if(this._currentRequestPosition&&this._currentRequestModelVersion===n){if(t.equals(this._currentRequestPosition))return;if(this._currentDecorations&&this._currentDecorations.length>0){let r=i.getDecorationRange(this._currentDecorations[0]);if(r&&r.containsPosition(t))return}}this._currentRequestPosition=t,this._currentRequestModelVersion=n;let o=Oe(r=>yb(this,void 0,void 0,function*(){try{let a=yield HI(i,t,r);if(o!==this._currentRequest||(this._currentRequest=null,n!==i.getVersionId()))return;let l=[];(a==null?void 0:a.ranges)&&(l=a.ranges),this._currentWordPattern=(a==null?void 0:a.wordPattern)||this._languageWordPattern;let c=!1;for(let h=0,p=l.length;h<p;h++)if(b.containsPosition(l[h],t)){if(c=!0,h!==0){let m=l[h];l.splice(h,1),l.unshift(m)}break}if(!c){this.clearRanges();return}let d=l.map(h=>({range:h,options:bb.DECORATION}));this._visibleContextKey.set(!0),this._currentDecorations=this._editor.deltaDecorations(this._currentDecorations,d)}catch(a){jn(a)||de(a),(this._currentRequest===o||!this._currentRequest)&&this.clearRanges()}}));return this._currentRequest=o,o})}};Vr.ID="editor.contrib.linkedEditing";Vr.DECORATION=xe.register({description:"linked-editing",stickiness:0,className:zI});Vr=fR([FI(1,ie),FI(2,Dt)],Vr);var OI=class extends F{constructor(){super({id:"editor.action.linkedEditing",label:u("linkedEditing.label","Start Linked Editing"),alias:"Start Linked Editing",precondition:O.and(S.writable,S.hasRenameProvider),kbOpts:{kbExpr:S.editorTextFocus,primary:3132,weight:100}})}runCommand(e,t){let i=e.get(Ve),[n,o]=Array.isArray(t)&&t||[void 0,void 0];return _e.isUri(n)&&U.isIPosition(o)?i.openCodeEditor({resource:n},i.getActiveCodeEditor()).then(r=>{!r||(r.setPosition(o),r.invokeWithinContext(a=>(this.reportTelemetry(a,r),this.run(a,r))))},de):super.runCommand(e,t)}run(e,t){let i=Vr.get(t);return i?Promise.resolve(i.updateRanges(!0)):Promise.resolve()}},yR=ct.bindToContribution(Vr.get);$(new yR({id:"cancelLinkedEditingInput",precondition:NI,handler:s=>s.clearRanges(),kbOpts:{kbExpr:S.editorTextFocus,weight:100+99,primary:9,secondary:[1033]}}));function HI(s,e,t){let i=Th.ordered(s);return xh(i.map(n=>()=>yb(this,void 0,void 0,function*(){try{return yield n.provideLinkedEditingRanges(s,e,t)}catch(o){Ue(o);return}})),n=>!!n&&Pt(n==null?void 0:n.ranges))}var bR=q("editor.linkedEditingBackground",{dark:we.fromHex("#f00").transparent(.3),light:we.fromHex("#f00").transparent(.3),hc:we.fromHex("#f00").transparent(.3)},u("editorLinkedEditingBackground","Background color when the editor auto renames on type."));Me((s,e)=>{let t=s.getColor(bR);t&&e.addRule(`.monaco-editor .${zI} { background: ${t}; border-left-color: ${t}; }`)});wi("_executeLinkedEditingProvider",(s,e)=>HI(s,e,ge.None));J(Vr.ID,Vr);I(OI);ke();ut();Le();G();Yl();Pi();Hi();Xt();ue();jt();Re();vt();ut();Le();G();qt();Xt();ee();Re();hr();wt();var WI=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},BI=class{constructor(e,t){this._link=e,this._provider=t}toJSON(){return{range:this.range,url:this.url,tooltip:this.tooltip}}get range(){return this._link.range}get url(){return this._link.url}get tooltip(){return this._link.tooltip}resolve(e){return WI(this,void 0,void 0,function*(){return this._link.url?this._link.url:typeof this._provider.resolveLink=="function"?Promise.resolve(this._provider.resolveLink(this._link,e)).then(t=>(this._link=t||this._link,this._link.url?this.resolve(e):Promise.reject(new Error("missing")))):Promise.reject(new Error("missing"))})}},Oc=class{constructor(e){this._disposables=new A;let t=[];for(let[i,n]of e){let o=i.links.map(r=>new BI(r,n));t=Oc._union(t,o),bh(i)&&this._disposables.add(i)}this.links=t}dispose(){this._disposables.dispose(),this.links.length=0}static _union(e,t){let i=[],n,o,r,a;for(n=0,r=0,o=e.length,a=t.length;n<o&&r<a;){let l=e[n],c=t[r];if(b.areIntersectingOrTouching(l.range,c.range)){n++;continue}b.compareRangesUsingStarts(l.range,c.range)<0?(i.push(l),n++):(i.push(c),r++)}for(;n<o;n++)i.push(e[n]);for(;r<a;r++)i.push(t[r]);return i}};function vb(s,e){let t=[],i=$l.ordered(s).reverse().map((n,o)=>Promise.resolve(n.provideLinks(s,e)).then(r=>{r&&(t[o]=[r,n])},Ue));return Promise.all(i).then(()=>{let n=new Oc(Vn(t));return e.isCancellationRequested?(n.dispose(),new Oc([])):n})}Pe.registerCommand("_executeLinkProvider",(s,...e)=>WI(void 0,void 0,void 0,function*(){let[t,i]=e;qe(t instanceof _e),typeof i!="number"&&(i=0);let n=s.get(Yt).getModel(t);if(!n)return[];let o=yield vb(n,ge.None);if(!o)return[];for(let a=0;a<Math.min(i,o.links.length);a++)yield o.links[a].resolve(ge.None);let r=o.links.slice(0);return o.dispose(),r}));Q();qi();mt();Ne();var SR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},VI=function(s,e){return function(t,i){e(t,i,s)}},vR=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})};function xR(s,e){let t=s.url&&/^command:/i.test(s.url.toString()),i=s.tooltip?s.tooltip:t?u("links.navigate.executeCmd","Execute command"):u("links.navigate.follow","Follow link"),n=e?bi?u("links.navigate.kb.meta.mac","cmd + click"):u("links.navigate.kb.meta","ctrl + click"):bi?u("links.navigate.kb.alt.mac","option + click"):u("links.navigate.kb.alt","alt + click");if(s.url){let o="";if(/^command:/i.test(s.url.toString())){let a=s.url.toString().match(/^command:([^?#]+)/);if(a){let l=a[1];o=` "${u("tooltip.explanation","Execute command {0}",l)}"`}}return new ai("",!0).appendMarkdown(`[${i}](${s.url.toString(!0).replace(/ /g,"%20")}${o}) (${n})`)}else return new ai().appendText(`${i} (${n})`)}var GI={general:xe.register({description:"detected-link",stickiness:1,collapseOnReplaceEdit:!0,inlineClassName:"detected-link"}),active:xe.register({description:"detected-link-active",stickiness:1,collapseOnReplaceEdit:!0,inlineClassName:"detected-link-active"})},$s=class{constructor(e,t){this.link=e,this.decorationId=t}static decoration(e,t){return{range:e.range,options:$s._getOptions(e,t,!1)}}static _getOptions(e,t,i){let n=Object.assign({},i?GI.active:GI.general);return n.hoverMessage=xR(e,t),n}activate(e,t){e.changeDecorationOptions(this.decorationId,$s._getOptions(this.link,t,!0))}deactivate(e,t){e.changeDecorationOptions(this.decorationId,$s._getOptions(this.link,t,!1))}},Ks=class xb{constructor(e,t,i){this.listenersToRemove=new A,this.editor=e,this.openerService=t,this.notificationService=i;let n=new vs(e);this.listenersToRemove.add(n),this.listenersToRemove.add(n.onMouseMoveOrRelevantKeyDown(([o,r])=>{this._onEditorMouseMove(o,r)})),this.listenersToRemove.add(n.onExecute(o=>{this.onEditorMouseUp(o)})),this.listenersToRemove.add(n.onCancel(o=>{this.cleanUpActiveLinkDecoration()})),this.enabled=e.getOption(63),this.listenersToRemove.add(e.onDidChangeConfiguration(o=>{let r=e.getOption(63);this.enabled!==r&&(this.enabled=r,this.updateDecorations([]),this.stop(),this.beginCompute())})),this.listenersToRemove.add(e.onDidChangeModelContent(o=>this.onChange())),this.listenersToRemove.add(e.onDidChangeModel(o=>this.onModelChanged())),this.listenersToRemove.add(e.onDidChangeModelLanguage(o=>this.onModelLanguageChanged())),this.listenersToRemove.add($l.onDidChange(o=>this.onModelLanguageChanged())),this.timeout=new Ri,this.computePromise=null,this.activeLinksList=null,this.currentOccurrences={},this.activeLinkDecorationId=null,this.beginCompute()}static get(e){return e.getContribution(xb.ID)}onModelChanged(){this.currentOccurrences={},this.activeLinkDecorationId=null,this.stop(),this.beginCompute()}onModelLanguageChanged(){this.stop(),this.beginCompute()}onChange(){this.timeout.setIfNotSet(()=>this.beginCompute(),xb.RECOMPUTE_TIME)}beginCompute(){return vR(this,void 0,void 0,function*(){if(!this.editor.hasModel()||!this.enabled)return;let e=this.editor.getModel();if(!!$l.has(e)){this.activeLinksList&&(this.activeLinksList.dispose(),this.activeLinksList=null),this.computePromise=Oe(t=>vb(e,t));try{this.activeLinksList=yield this.computePromise,this.updateDecorations(this.activeLinksList.links)}catch(t){de(t)}finally{this.computePromise=null}}})}updateDecorations(e){let t=this.editor.getOption(70)==="altKey",i=[],n=Object.keys(this.currentOccurrences);for(let a=0,l=n.length;a<l;a++){let c=n[a],d=this.currentOccurrences[c];i.push(d.decorationId)}let o=[];if(e)for(let a of e)o.push($s.decoration(a,t));let r=this.editor.deltaDecorations(i,o);this.currentOccurrences={},this.activeLinkDecorationId=null;for(let a=0,l=r.length;a<l;a++){let c=new $s(e[a],r[a]);this.currentOccurrences[c.decorationId]=c}}_onEditorMouseMove(e,t){let i=this.editor.getOption(70)==="altKey";if(this.isEnabled(e,t)){this.cleanUpActiveLinkDecoration();let n=this.getLinkOccurrence(e.target.position);n&&this.editor.changeDecorations(o=>{n.activate(o,i),this.activeLinkDecorationId=n.decorationId})}else this.cleanUpActiveLinkDecoration()}cleanUpActiveLinkDecoration(){let e=this.editor.getOption(70)==="altKey";if(this.activeLinkDecorationId){let t=this.currentOccurrences[this.activeLinkDecorationId];t&&this.editor.changeDecorations(i=>{t.deactivate(i,e)}),this.activeLinkDecorationId=null}}onEditorMouseUp(e){if(!this.isEnabled(e))return;let t=this.getLinkOccurrence(e.target.position);!t||this.openLinkOccurrence(t,e.hasSideBySideModifier,!0)}openLinkOccurrence(e,t,i=!1){if(!this.openerService)return;let{link:n}=e;n.resolve(ge.None).then(o=>{if(typeof o=="string"&&this.editor.hasModel()){let r=this.editor.getModel().uri;if(r.scheme===Ct.file&&o.startsWith(`${Ct.file}:`)){let a=_e.parse(o);if(a.scheme===Ct.file){let l=wx(a),c=null;l.startsWith("/./")?c=`.${l.substr(1)}`:l.startsWith("//./")&&(c=`.${l.substr(2)}`),c&&(o=Ex(r,c))}}}return this.openerService.open(o,{openToSide:t,fromUserGesture:i,allowContributedOpeners:!0,allowCommands:!0})},o=>{let r=o instanceof Error?o.message:o;r==="invalid"?this.notificationService.warn(u("invalid.url","Failed to open this link because it is not well-formed: {0}",n.url.toString())):r==="missing"?this.notificationService.warn(u("missing.url","Failed to open this link because its target is missing.")):de(o)})}getLinkOccurrence(e){if(!this.editor.hasModel()||!e)return null;let t=this.editor.getModel().getDecorationsInRange({startLineNumber:e.lineNumber,startColumn:e.column,endLineNumber:e.lineNumber,endColumn:e.column},0,!0);for(let i of t){let n=this.currentOccurrences[i.id];if(n)return n}return null}isEnabled(e,t){return Boolean(e.target.type===6&&(e.hasTriggerModifier||t&&t.keyCodeIsTriggerKey))}stop(){var e;this.timeout.cancel(),this.activeLinksList&&((e=this.activeLinksList)===null||e===void 0||e.dispose(),this.activeLinksList=null),this.computePromise&&(this.computePromise.cancel(),this.computePromise=null)}dispose(){this.listenersToRemove.dispose(),this.stop(),this.timeout.dispose()}};Ks.ID="editor.linkDetector";Ks.RECOMPUTE_TIME=1e3;Ks=SR([VI(1,bt),VI(2,Ze)],Ks);var jI=class extends F{constructor(){super({id:"editor.action.openLink",label:u("label","Open Link"),alias:"Open Link",precondition:void 0})}run(e,t){let i=Ks.get(t);if(!i||!t.hasModel())return;let n=t.getSelections();for(let o of n){let r=i.getLinkOccurrence(o.getEndPosition());r&&i.openLinkOccurrence(r,!1)}}};J(Ks.ID,Ks);I(jI);Me((s,e)=>{let t=s.getColor(La);t&&e.addRule(`.monaco-editor .detected-link-active { color: ${t} !important; }`)});Ln();ke();yo();G();ue();ee();Mt();He();ca();jt();Re();Q();ri();Ee();mt();Ne();function yl(s,e){let t=e.filter(i=>!s.find(n=>n.equals(i)));if(t.length>=1){let i=t.map(o=>`line ${o.viewState.position.lineNumber} column ${o.viewState.position.column}`).join(", "),n=t.length===1?u("cursorAdded","Cursor added: {0}",i):u("cursorsAdded","Cursors added: {0}",i);xv(n)}}var $I=class extends F{constructor(){super({id:"editor.action.insertCursorAbove",label:u("mutlicursor.insertAbove","Add Cursor Above"),alias:"Add Cursor Above",precondition:void 0,kbOpts:{kbExpr:S.editorTextFocus,primary:2576,linux:{primary:1552,secondary:[3088]},weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"3_multi",title:u({key:"miInsertCursorAbove",comment:["&& denotes a mnemonic"]},"&&Add Cursor Above"),order:2}})}run(e,t,i){if(!t.hasModel())return;let n=!0;i&&i.logicalLine===!1&&(n=!1);let o=t._getViewModel();if(o.cursorConfig.readOnly)return;o.pushStackElement();let r=o.getCursorStates();o.setCursorStates(i.source,3,ud.addCursorUp(o,r,n)),o.revealTopMostCursor(i.source),yl(r,o.getCursorStates())}},KI=class extends F{constructor(){super({id:"editor.action.insertCursorBelow",label:u("mutlicursor.insertBelow","Add Cursor Below"),alias:"Add Cursor Below",precondition:void 0,kbOpts:{kbExpr:S.editorTextFocus,primary:2578,linux:{primary:1554,secondary:[3090]},weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"3_multi",title:u({key:"miInsertCursorBelow",comment:["&& denotes a mnemonic"]},"A&&dd Cursor Below"),order:3}})}run(e,t,i){if(!t.hasModel())return;let n=!0;i&&i.logicalLine===!1&&(n=!1);let o=t._getViewModel();if(o.cursorConfig.readOnly)return;o.pushStackElement();let r=o.getCursorStates();o.setCursorStates(i.source,3,ud.addCursorDown(o,r,n)),o.revealBottomMostCursor(i.source),yl(r,o.getCursorStates())}},qI=class extends F{constructor(){super({id:"editor.action.insertCursorAtEndOfEachLineSelected",label:u("mutlicursor.insertAtEndOfEachLineSelected","Add Cursors to Line Ends"),alias:"Add Cursors to Line Ends",precondition:void 0,kbOpts:{kbExpr:S.editorTextFocus,primary:1575,weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"3_multi",title:u({key:"miInsertCursorAtEndOfEachLineSelected",comment:["&& denotes a mnemonic"]},"Add C&&ursors to Line Ends"),order:4}})}getCursorsForSelection(e,t,i){if(!e.isEmpty()){for(let n=e.startLineNumber;n<e.endLineNumber;n++){let o=t.getLineMaxColumn(n);i.push(new X(n,o,n,o))}e.endColumn>1&&i.push(new X(e.endLineNumber,e.endColumn,e.endLineNumber,e.endColumn))}}run(e,t){if(!t.hasModel())return;let i=t.getModel(),n=t.getSelections(),o=t._getViewModel(),r=o.getCursorStates(),a=[];n.forEach(l=>this.getCursorsForSelection(l,i,a)),a.length>0&&t.setSelections(a),yl(r,o.getCursorStates())}},XI=class extends F{constructor(){super({id:"editor.action.addCursorsToBottom",label:u("mutlicursor.addCursorsToBottom","Add Cursors To Bottom"),alias:"Add Cursors To Bottom",precondition:void 0})}run(e,t){if(!t.hasModel())return;let i=t.getSelections(),n=t.getModel().getLineCount(),o=[];for(let l=i[0].startLineNumber;l<=n;l++)o.push(new X(l,i[0].startColumn,l,i[0].endColumn));let r=t._getViewModel(),a=r.getCursorStates();o.length>0&&t.setSelections(o),yl(a,r.getCursorStates())}},YI=class extends F{constructor(){super({id:"editor.action.addCursorsToTop",label:u("mutlicursor.addCursorsToTop","Add Cursors To Top"),alias:"Add Cursors To Top",precondition:void 0})}run(e,t){if(!t.hasModel())return;let i=t.getSelections(),n=[];for(let a=i[0].startLineNumber;a>=1;a--)n.push(new X(a,i[0].startColumn,a,i[0].endColumn));let o=t._getViewModel(),r=o.getCursorStates();n.length>0&&t.setSelections(n),yl(r,o.getCursorStates())}},Hc=class{constructor(e,t,i){this.selections=e,this.revealRange=t,this.revealScrollType=i}},fl=class{constructor(e,t,i,n,o,r,a){this._editor=e,this.findController=t,this.isDisconnectedFromFindController=i,this.searchText=n,this.wholeWord=o,this.matchCase=r,this.currentMatch=a}static create(e,t){if(!e.hasModel())return null;let i=t.getState();if(!e.hasTextFocus()&&i.isRevealed&&i.searchString.length>0)return new fl(e,t,!1,i.searchString,i.wholeWord,i.matchCase,null);let n=!1,o,r,a=e.getSelections();a.length===1&&a[0].isEmpty()?(n=!0,o=!0,r=!0):(o=i.wholeWord,r=i.matchCase);let l=e.getSelection(),c,d=null;if(l.isEmpty()){let h=e.getConfiguredWordAtPosition(l.getStartPosition());if(!h)return null;c=h.word,d=new X(l.startLineNumber,h.startColumn,l.startLineNumber,h.endColumn)}else c=e.getModel().getValueInRange(l).replace(/\r\n/g,`
`);return new fl(e,t,n,c,o,r,d)}addSelectionToNextFindMatch(){if(!this._editor.hasModel())return null;let e=this._getNextMatch();if(!e)return null;let t=this._editor.getSelections();return new Hc(t.concat(e),e,0)}moveSelectionToNextFindMatch(){if(!this._editor.hasModel())return null;let e=this._getNextMatch();if(!e)return null;let t=this._editor.getSelections();return new Hc(t.slice(0,t.length-1).concat(e),e,0)}_getNextMatch(){if(!this._editor.hasModel())return null;if(this.currentMatch){let n=this.currentMatch;return this.currentMatch=null,n}this.findController.highlightFindOptions();let e=this._editor.getSelections(),t=e[e.length-1],i=this._editor.getModel().findNextMatch(this.searchText,t.getEndPosition(),!1,this.matchCase,this.wholeWord?this._editor.getOption(117):null,!1);return i?new X(i.range.startLineNumber,i.range.startColumn,i.range.endLineNumber,i.range.endColumn):null}addSelectionToPreviousFindMatch(){if(!this._editor.hasModel())return null;let e=this._getPreviousMatch();if(!e)return null;let t=this._editor.getSelections();return new Hc(t.concat(e),e,0)}moveSelectionToPreviousFindMatch(){if(!this._editor.hasModel())return null;let e=this._getPreviousMatch();if(!e)return null;let t=this._editor.getSelections();return new Hc(t.slice(0,t.length-1).concat(e),e,0)}_getPreviousMatch(){if(!this._editor.hasModel())return null;if(this.currentMatch){let n=this.currentMatch;return this.currentMatch=null,n}this.findController.highlightFindOptions();let e=this._editor.getSelections(),t=e[e.length-1],i=this._editor.getModel().findPreviousMatch(this.searchText,t.getStartPosition(),!1,this.matchCase,this.wholeWord?this._editor.getOption(117):null,!1);return i?new X(i.range.startLineNumber,i.range.startColumn,i.range.endLineNumber,i.range.endColumn):null}selectAll(){return this._editor.hasModel()?(this.findController.highlightFindOptions(),this._editor.getModel().findMatches(this.searchText,!0,!1,this.matchCase,this.wholeWord?this._editor.getOption(117):null,!1,1073741824)):[]}},Gr=class extends z{constructor(e){super();this._sessionDispose=this._register(new A),this._editor=e,this._ignoreSelectionChange=!1,this._session=null}static get(e){return e.getContribution(Gr.ID)}dispose(){this._endSession(),super.dispose()}_beginSessionIfNeeded(e){if(!this._session){let t=fl.create(this._editor,e);if(!t)return;this._session=t;let i={searchString:this._session.searchText};this._session.isDisconnectedFromFindController&&(i.wholeWordOverride=1,i.matchCaseOverride=1,i.isRegexOverride=2),e.getState().change(i,!1),this._sessionDispose.add(this._editor.onDidChangeCursorSelection(n=>{this._ignoreSelectionChange||this._endSession()})),this._sessionDispose.add(this._editor.onDidBlurEditorText(()=>{this._endSession()})),this._sessionDispose.add(e.getState().onFindReplaceStateChange(n=>{(n.matchCase||n.wholeWord)&&this._endSession()}))}}_endSession(){if(this._sessionDispose.clear(),this._session&&this._session.isDisconnectedFromFindController){let e={wholeWordOverride:0,matchCaseOverride:0,isRegexOverride:0};this._session.findController.getState().change(e,!1)}this._session=null}_setSelections(e){this._ignoreSelectionChange=!0,this._editor.setSelections(e),this._ignoreSelectionChange=!1}_expandEmptyToWord(e,t){if(!t.isEmpty())return t;let i=this._editor.getConfiguredWordAtPosition(t.getStartPosition());return i?new X(t.startLineNumber,i.startColumn,t.startLineNumber,i.endColumn):t}_applySessionResult(e){!e||(this._setSelections(e.selections),e.revealRange&&this._editor.revealRangeInCenterIfOutsideViewport(e.revealRange,e.revealScrollType))}getSession(e){return this._session}addSelectionToNextFindMatch(e){if(!!this._editor.hasModel()){if(!this._session){let t=this._editor.getSelections();if(t.length>1){let n=e.getState().matchCase;if(!ok(this._editor.getModel(),t,n)){let r=this._editor.getModel(),a=[];for(let l=0,c=t.length;l<c;l++)a[l]=this._expandEmptyToWord(r,t[l]);this._editor.setSelections(a);return}}}this._beginSessionIfNeeded(e),this._session&&this._applySessionResult(this._session.addSelectionToNextFindMatch())}}addSelectionToPreviousFindMatch(e){this._beginSessionIfNeeded(e),this._session&&this._applySessionResult(this._session.addSelectionToPreviousFindMatch())}moveSelectionToNextFindMatch(e){this._beginSessionIfNeeded(e),this._session&&this._applySessionResult(this._session.moveSelectionToNextFindMatch())}moveSelectionToPreviousFindMatch(e){this._beginSessionIfNeeded(e),this._session&&this._applySessionResult(this._session.moveSelectionToPreviousFindMatch())}selectAll(e){if(!this._editor.hasModel())return;let t=null,i=e.getState();if(i.isRevealed&&i.searchString.length>0&&i.isRegex)t=this._editor.getModel().findMatches(i.searchString,!0,i.isRegex,i.matchCase,i.wholeWord?this._editor.getOption(117):null,!1,1073741824);else{if(this._beginSessionIfNeeded(e),!this._session)return;t=this._session.selectAll()}if(i.searchScope){let n=i.searchScope,o=[];t.forEach(r=>{n.forEach(a=>{r.range.endLineNumber<=a.endLineNumber&&r.range.startLineNumber>=a.startLineNumber&&o.push(r)})}),t=o}if(t.length>0){let n=this._editor.getSelection();for(let o=0,r=t.length;o<r;o++){let a=t[o];if(a.range.intersectRanges(n)){t[o]=t[0],t[0]=a;break}}this._setSelections(t.map(o=>new X(o.range.startLineNumber,o.range.startColumn,o.range.endLineNumber,o.range.endColumn)))}}};Gr.ID="editor.contrib.multiCursorController";var qs=class extends F{run(e,t){let i=Gr.get(t);if(!i)return;let n=vi.get(t);if(!n)return;let o=t._getViewModel();if(o){let r=o.getCursorStates();this._run(i,n),yl(r,o.getCursorStates())}}},ZI=class extends qs{constructor(){super({id:"editor.action.addSelectionToNextFindMatch",label:u("addSelectionToNextFindMatch","Add Selection To Next Find Match"),alias:"Add Selection To Next Find Match",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:2082,weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"3_multi",title:u({key:"miAddSelectionToNextFindMatch",comment:["&& denotes a mnemonic"]},"Add &&Next Occurrence"),order:5}})}_run(e,t){e.addSelectionToNextFindMatch(t)}},JI=class extends qs{constructor(){super({id:"editor.action.addSelectionToPreviousFindMatch",label:u("addSelectionToPreviousFindMatch","Add Selection To Previous Find Match"),alias:"Add Selection To Previous Find Match",precondition:void 0,menuOpts:{menuId:se.MenubarSelectionMenu,group:"3_multi",title:u({key:"miAddSelectionToPreviousFindMatch",comment:["&& denotes a mnemonic"]},"Add P&&revious Occurrence"),order:6}})}_run(e,t){e.addSelectionToPreviousFindMatch(t)}},QI=class extends qs{constructor(){super({id:"editor.action.moveSelectionToNextFindMatch",label:u("moveSelectionToNextFindMatch","Move Last Selection To Next Find Match"),alias:"Move Last Selection To Next Find Match",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:Xe(2089,2082),weight:100}})}_run(e,t){e.moveSelectionToNextFindMatch(t)}},ek=class extends qs{constructor(){super({id:"editor.action.moveSelectionToPreviousFindMatch",label:u("moveSelectionToPreviousFindMatch","Move Last Selection To Previous Find Match"),alias:"Move Last Selection To Previous Find Match",precondition:void 0})}_run(e,t){e.moveSelectionToPreviousFindMatch(t)}},tk=class extends qs{constructor(){super({id:"editor.action.selectHighlights",label:u("selectAllOccurrencesOfFindMatch","Select All Occurrences of Find Match"),alias:"Select All Occurrences of Find Match",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:3114,weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"3_multi",title:u({key:"miSelectHighlights",comment:["&& denotes a mnemonic"]},"Select All &&Occurrences"),order:7}})}_run(e,t){e.selectAll(t)}},ik=class extends qs{constructor(){super({id:"editor.action.changeAll",label:u("changeAll.label","Change All Occurrences"),alias:"Change All Occurrences",precondition:O.and(S.writable,S.editorTextFocus),kbOpts:{kbExpr:S.editorTextFocus,primary:2108,weight:100},contextMenuOpts:{group:"1_modification",order:1.2}})}_run(e,t){e.selectAll(t)}},nk=class{constructor(e,t,i,n,o){this._model=e,this._searchText=t,this._matchCase=i,this._wordSeparators=n,this._modelVersionId=this._model.getVersionId(),this._cachedFindMatches=null,o&&this._model===o._model&&this._searchText===o._searchText&&this._matchCase===o._matchCase&&this._wordSeparators===o._wordSeparators&&this._modelVersionId===o._modelVersionId&&(this._cachedFindMatches=o._cachedFindMatches)}findMatches(){return this._cachedFindMatches===null&&(this._cachedFindMatches=this._model.findMatches(this._searchText,!0,!1,this._matchCase,this._wordSeparators,!1).map(e=>e.range),this._cachedFindMatches.sort(b.compareRangesUsingStarts)),this._cachedFindMatches}},po=class extends z{constructor(e){super();this.editor=e,this._isEnabled=e.getOption(97),this.decorations=[],this.updateSoon=this._register(new $e(()=>this._update(),300)),this.state=null,this._register(e.onDidChangeConfiguration(i=>{this._isEnabled=e.getOption(97)})),this._register(e.onDidChangeCursorSelection(i=>{!this._isEnabled||(i.selection.isEmpty()?i.reason===3?(this.state&&this._setState(null),this.updateSoon.schedule()):this._setState(null):this._update())})),this._register(e.onDidChangeModel(i=>{this._setState(null)})),this._register(e.onDidChangeModelContent(i=>{this._isEnabled&&this.updateSoon.schedule()}));let t=vi.get(e);t&&this._register(t.getState().onFindReplaceStateChange(i=>{this._update()}))}_update(){this._setState(po._createState(this.state,this._isEnabled,this.editor))}static _createState(e,t,i){if(!t||!i.hasModel())return null;let n=i.getSelection();if(n.startLineNumber!==n.endLineNumber)return null;let o=Gr.get(i);if(!o)return null;let r=vi.get(i);if(!r)return null;let a=o.getSession(r);if(!a){let d=i.getSelections();if(d.length>1){let p=r.getState().matchCase;if(!ok(i.getModel(),d,p))return null}a=fl.create(i,r)}if(!a||a.currentMatch||/^[ \t]+$/.test(a.searchText)||a.searchText.length>200)return null;let l=r.getState(),c=l.matchCase;if(l.isRevealed){let d=l.searchString;c||(d=d.toLowerCase());let h=a.searchText;if(c||(h=h.toLowerCase()),d===h&&a.matchCase===l.matchCase&&a.wholeWord===l.wholeWord&&!l.isRegex)return null}return new nk(i.getModel(),a.searchText,a.matchCase,a.wholeWord?i.getOption(117):null,e)}_setState(e){if(this.state=e,!this.state){this.decorations=this.editor.deltaDecorations(this.decorations,[]);return}if(!this.editor.hasModel())return;let t=this.editor.getModel();if(t.isTooLargeForTokenization())return;let i=this.state.findMatches(),n=this.editor.getSelections();n.sort(b.compareRangesUsingStarts);let o=[];for(let l=0,c=0,d=i.length,h=n.length;l<d;){let p=i[l];if(c>=h)o.push(p),l++;else{let m=b.compareRangesUsingStarts(p,n[c]);m<0?((n[c].isEmpty()||!b.areIntersecting(p,n[c]))&&o.push(p),l++):(m>0||l++,c++)}}let r=Ul.has(t)&&this.editor.getOption(72),a=o.map(l=>({range:l,options:r?po._SELECTION_HIGHLIGHT:po._SELECTION_HIGHLIGHT_OVERVIEW}));this.decorations=this.editor.deltaDecorations(this.decorations,a)}dispose(){this._setState(null),super.dispose()}};po.ID="editor.contrib.selectionHighlighter";po._SELECTION_HIGHLIGHT_OVERVIEW=xe.register({description:"selection-highlight-overview",stickiness:1,className:"selectionHighlight",minimap:{color:nt(Pa),position:bo.Inline},overviewRuler:{color:nt(Yh),position:Di.Center}});po._SELECTION_HIGHLIGHT=xe.register({description:"selection-highlight",stickiness:1,className:"selectionHighlight"});function ok(s,e,t){let i=UI(s,e[0],!t);for(let n=1,o=e.length;n<o;n++){let r=e[n];if(r.isEmpty())return!1;let a=UI(s,r,!t);if(i!==a)return!1}return!0}function UI(s,e,t){let i=s.getValueInRange(e);return t?i.toLowerCase():i}J(Gr.ID,Gr);J(po.ID,po);I($I);I(KI);I(qI);I(ZI);I(JI);I(QI);I(ek);I(tk);I(ik);I(XI);I(YI);G();ue();He();Re();ut();Le();qt();Xt();tt();Re();Co();wt();Ee();var rk=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Zo={Visible:new pe("parameterHintsVisible",!1),MultipleSignatures:new pe("parameterHintsMultipleSignatures",!1)};function Cb(s,e,t,i){return rk(this,void 0,void 0,function*(){let n=ya.ordered(s);for(let o of n)try{let r=yield o.provideSignatureHelp(s,e,i,t);if(r)return r}catch(r){Ue(r)}})}Pe.registerCommand("_executeSignatureHelpProvider",(s,...e)=>rk(void 0,void 0,void 0,function*(){let[t,i,n]=e;qe(_e.isUri(t)),qe(U.isIPosition(i)),qe(typeof n=="string"||!n);let o=yield s.get(Gt).createModelReference(t);try{let r=yield Cb(o.object.textEditorModel,U.lift(i),{triggerKind:En.Invoke,isRetrigger:!1,triggerCharacter:n},ge.None);return r?(setTimeout(()=>r.dispose(),0),r.value):void 0}finally{o.dispose()}}));Q();Ee();Be();Ae();Ln();xi();De();G();Ye();qt();rn();ke();Le();De();G();Om();Re();var CR=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},jr;(function(s){s.Default={type:0};class e{constructor(n,o){this.request=n,this.previouslyActiveHints=o,this.type=2}}s.Pending=e;class t{constructor(n){this.hints=n,this.type=1}}s.Active=t})(jr||(jr={}));var bl=class extends z{constructor(e,t=bl.DEFAULT_DELAY){super();this._onChangedHints=this._register(new j),this.onChangedHints=this._onChangedHints.event,this.triggerOnType=!1,this._state=jr.Default,this._pendingTriggers=[],this._lastSignatureHelpResult=this._register(new et),this.triggerChars=new xo,this.retriggerChars=new xo,this.triggerId=0,this.editor=e,this.throttledDelayer=new Tn(t),this._register(this.editor.onDidBlurEditorWidget(()=>this.cancel())),this._register(this.editor.onDidChangeConfiguration(()=>this.onEditorConfigurationChange())),this._register(this.editor.onDidChangeModel(i=>this.onModelChanged())),this._register(this.editor.onDidChangeModelLanguage(i=>this.onModelChanged())),this._register(this.editor.onDidChangeCursorSelection(i=>this.onCursorChange(i))),this._register(this.editor.onDidChangeModelContent(i=>this.onModelContentChange())),this._register(ya.onDidChange(this.onModelChanged,this)),this._register(this.editor.onDidType(i=>this.onDidType(i))),this.onEditorConfigurationChange(),this.onModelChanged()}get state(){return this._state}set state(e){this._state.type===2&&this._state.request.cancel(),this._state=e}cancel(e=!1){this.state=jr.Default,this.throttledDelayer.cancel(),e||this._onChangedHints.fire(void 0)}trigger(e,t){let i=this.editor.getModel();if(!i||!ya.has(i))return;let n=++this.triggerId;this._pendingTriggers.push(e),this.throttledDelayer.trigger(()=>this.doTrigger(n),t).catch(de)}next(){if(this.state.type!==1)return;let e=this.state.hints.signatures.length,t=this.state.hints.activeSignature,i=t%e===e-1,n=this.editor.getOption(76).cycle;if((e<2||i)&&!n){this.cancel();return}this.updateActiveSignature(i&&n?0:t+1)}previous(){if(this.state.type!==1)return;let e=this.state.hints.signatures.length,t=this.state.hints.activeSignature,i=t===0,n=this.editor.getOption(76).cycle;if((e<2||i)&&!n){this.cancel();return}this.updateActiveSignature(i&&n?e-1:t-1)}updateActiveSignature(e){this.state.type===1&&(this.state=new jr.Active(Object.assign(Object.assign({},this.state.hints),{activeSignature:e})),this._onChangedHints.fire(this.state.hints))}doTrigger(e){return CR(this,void 0,void 0,function*(){let t=this.state.type===1||this.state.type===2,i=this.getLastActiveHints();if(this.cancel(!0),this._pendingTriggers.length===0)return!1;let n=this._pendingTriggers.reduce(_R);this._pendingTriggers=[];let o={triggerKind:n.triggerKind,triggerCharacter:n.triggerCharacter,isRetrigger:t,activeSignatureHelp:i};if(!this.editor.hasModel())return!1;let r=this.editor.getModel(),a=this.editor.getPosition();this.state=new jr.Pending(Oe(l=>Cb(r,a,o,l)),i);try{let l=yield this.state.request;return e!==this.triggerId?(l==null||l.dispose(),!1):!l||!l.value.signatures||l.value.signatures.length===0?(l==null||l.dispose(),this._lastSignatureHelpResult.clear(),this.cancel(),!1):(this.state=new jr.Active(l.value),this._lastSignatureHelpResult.value=l,this._onChangedHints.fire(this.state.hints),!0)}catch(l){return e===this.triggerId&&(this.state=jr.Default),de(l),!1}})}getLastActiveHints(){switch(this.state.type){case 1:return this.state.hints;case 2:return this.state.previouslyActiveHints;default:return}}get isTriggered(){return this.state.type===1||this.state.type===2||this.throttledDelayer.isTriggered()}onModelChanged(){this.cancel(),this.triggerChars=new xo,this.retriggerChars=new xo;let e=this.editor.getModel();if(!!e)for(let t of ya.ordered(e)){for(let i of t.signatureHelpTriggerCharacters||[])this.triggerChars.add(i.charCodeAt(0)),this.retriggerChars.add(i.charCodeAt(0));for(let i of t.signatureHelpRetriggerCharacters||[])this.retriggerChars.add(i.charCodeAt(0))}}onDidType(e){if(!this.triggerOnType)return;let t=e.length-1,i=e.charCodeAt(t);(this.triggerChars.has(i)||this.isTriggered&&this.retriggerChars.has(i))&&this.trigger({triggerKind:En.TriggerCharacter,triggerCharacter:e.charAt(t)})}onCursorChange(e){e.source==="mouse"?this.cancel():this.isTriggered&&this.trigger({triggerKind:En.ContentChange})}onModelContentChange(){this.isTriggered&&this.trigger({triggerKind:En.ContentChange})}onEditorConfigurationChange(){this.triggerOnType=this.editor.getOption(76).enabled,this.triggerOnType||this.cancel()}dispose(){this.cancel(!0),super.dispose()}};bl.DEFAULT_DELAY=120;function _R(s,e){switch(e.triggerKind){case En.Invoke:return e;case En.ContentChange:return s;case En.TriggerCharacter:default:return e}}Q();Ee();qi();mt();_v();Ne();var wR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},_b=function(s,e){return function(t,i){e(t,i,s)}},Gi=W,TR=Rt("parameter-hints-next",K.chevronDown,u("parameterHintsNextIcon","Icon for show next parameter hint.")),ER=Rt("parameter-hints-previous",K.chevronUp,u("parameterHintsPreviousIcon","Icon for show previous parameter hint.")),Wc=class sk extends z{constructor(e,t,i,n){super();this.editor=e,this.renderDisposeables=this._register(new A),this.visible=!1,this.announcedLabel=null,this.allowEditorOverflow=!0,this.markdownRenderer=this._register(new Ii({editor:e},n,i)),this.model=this._register(new bl(e)),this.keyVisible=Zo.Visible.bindTo(t),this.keyMultipleSignatures=Zo.MultipleSignatures.bindTo(t),this._register(this.model.onChangedHints(o=>{o?(this.show(),this.render(o)):this.hide()}))}createParameterHintDOMNodes(){let e=Gi(".editor-widget.parameter-hints-widget"),t=H(e,Gi(".phwrapper"));t.tabIndex=-1;let i=H(t,Gi(".controls")),n=H(i,Gi(".button"+ot.asCSSSelector(ER))),o=H(i,Gi(".overloads")),r=H(i,Gi(".button"+ot.asCSSSelector(TR)));this._register(Ke(n,"click",p=>{an.stop(p),this.previous()})),this._register(Ke(r,"click",p=>{an.stop(p),this.next()}));let a=Gi(".body"),l=new Na(a,{});this._register(l),t.appendChild(l.getDomNode());let c=H(a,Gi(".signature")),d=H(a,Gi(".docs"));e.style.userSelect="text",this.domNodes={element:e,signature:c,overloads:o,docs:d,scrollbar:l},this.editor.addContentWidget(this),this.hide(),this._register(this.editor.onDidChangeCursorSelection(p=>{this.visible&&this.editor.layoutContentWidget(this)}));let h=()=>{if(!this.domNodes)return;let p=this.editor.getOption(44);this.domNodes.element.style.fontSize=`${p.fontSize}px`,this.domNodes.element.style.lineHeight=`${p.lineHeight/p.fontSize}`};h(),this._register(ht.chain(this.editor.onDidChangeConfiguration.bind(this.editor)).filter(p=>p.hasChanged(44)).on(h,null)),this._register(this.editor.onDidLayoutChange(p=>this.updateMaxHeight())),this.updateMaxHeight()}show(){this.visible||(this.domNodes||this.createParameterHintDOMNodes(),this.keyVisible.set(!0),this.visible=!0,setTimeout(()=>{this.domNodes&&this.domNodes.element.classList.add("visible")},100),this.editor.layoutContentWidget(this))}hide(){this.renderDisposeables.clear(),!!this.visible&&(this.keyVisible.reset(),this.visible=!1,this.announcedLabel=null,this.domNodes&&this.domNodes.element.classList.remove("visible"),this.editor.layoutContentWidget(this))}getPosition(){return this.visible?{position:this.editor.getPosition(),preference:[1,2]}:null}render(e){var t;if(this.renderDisposeables.clear(),!this.domNodes)return;let i=e.signatures.length>1;this.domNodes.element.classList.toggle("multiple",i),this.keyMultipleSignatures.set(i),this.domNodes.signature.innerText="",this.domNodes.docs.innerText="";let n=e.signatures[e.activeSignature];if(!n)return;let o=H(this.domNodes.signature,Gi(".code")),r=this.editor.getOption(44);o.style.fontSize=`${r.fontSize}px`,o.style.fontFamily=r.fontFamily;let a=n.parameters.length>0,l=(t=n.activeParameter)!==null&&t!==void 0?t:e.activeParameter;if(a)this.renderParameters(o,n,l);else{let h=H(o,Gi("span"));h.textContent=n.label}let c=n.parameters[l];if(c==null?void 0:c.documentation){let h=Gi("span.documentation");if(typeof c.documentation=="string")h.textContent=c.documentation;else{let p=this.renderMarkdownDocs(c.documentation);h.appendChild(p.element)}H(this.domNodes.docs,Gi("p",{},h))}if(n.documentation!==void 0)if(typeof n.documentation=="string")H(this.domNodes.docs,Gi("p",{},n.documentation));else{let h=this.renderMarkdownDocs(n.documentation);H(this.domNodes.docs,h.element)}let d=this.hasDocs(n,c);if(this.domNodes.signature.classList.toggle("has-docs",d),this.domNodes.docs.classList.toggle("empty",!d),this.domNodes.overloads.textContent=String(e.activeSignature+1).padStart(e.signatures.length.toString().length,"0")+"/"+e.signatures.length,c){let h="",p=n.parameters[l];Array.isArray(p.label)?h=n.label.substring(p.label[0],p.label[1]):h=p.label,p.documentation&&(h+=typeof p.documentation=="string"?`, ${p.documentation}`:`, ${p.documentation.value}`),n.documentation&&(h+=typeof n.documentation=="string"?`, ${n.documentation}`:`, ${n.documentation.value}`),this.announcedLabel!==h&&(_t(u("hint","{0}, hint",h)),this.announcedLabel=h)}this.editor.layoutContentWidget(this),this.domNodes.scrollbar.scanDomNode()}renderMarkdownDocs(e){let t=this.renderDisposeables.add(this.markdownRenderer.render(e,{asyncRenderCallback:()=>{var i;(i=this.domNodes)===null||i===void 0||i.scrollbar.scanDomNode()}}));return t.element.classList.add("markdown-docs"),t}hasDocs(e,t){return!!(t&&typeof t.documentation=="string"&&Ol(t.documentation).length>0||t&&typeof t.documentation=="object"&&Ol(t.documentation).value.length>0||e.documentation&&typeof e.documentation=="string"&&Ol(e.documentation).length>0||e.documentation&&typeof e.documentation=="object"&&Ol(e.documentation.value).length>0)}renderParameters(e,t,i){let[n,o]=this.getParameterLabelOffsets(t,i),r=document.createElement("span");r.textContent=t.label.substring(0,n);let a=document.createElement("span");a.textContent=t.label.substring(n,o),a.className="parameter active";let l=document.createElement("span");l.textContent=t.label.substring(o),H(e,r,a,l)}getParameterLabelOffsets(e,t){let i=e.parameters[t];if(i){if(Array.isArray(i.label))return i.label;if(i.label.length){let n=new RegExp(`(\\W|^)${So(i.label)}(?=\\W|$)`,"g");n.test(e.label);let o=n.lastIndex-i.label.length;return o>=0?[o,n.lastIndex]:[0,0]}else return[0,0]}else return[0,0]}next(){this.editor.focus(),this.model.next()}previous(){this.editor.focus(),this.model.previous()}cancel(){this.model.cancel()}getDomNode(){return this.domNodes||this.createParameterHintDOMNodes(),this.domNodes.element}getId(){return sk.ID}trigger(e){this.model.trigger(e,0)}updateMaxHeight(){if(!this.domNodes)return;let t=`${Math.max(this.editor.getLayoutInfo().height/4,250)}px`;this.domNodes.element.style.maxHeight=t;let i=this.domNodes.element.getElementsByClassName("phwrapper");i.length&&(i[0].style.maxHeight=t)}};Wc.ID="editor.widget.parameterHintsWidget";Wc=wR([_b(1,ie),_b(2,bt),_b(3,ft)],Wc);var IR=q("editorHoverWidget.highlightForeground",{dark:br,light:br,hc:br},u("editorHoverWidgetHighlightForeground","Foreground color of the active item in the parameter hint."));Me((s,e)=>{let t=s.getColor(ka);if(t){let c=s.type===Ah.HIGH_CONTRAST?2:1;e.addRule(`.monaco-editor .parameter-hints-widget { border: ${c}px solid ${t}; }`),e.addRule(`.monaco-editor .parameter-hints-widget.multiple .body { border-left: 1px solid ${t.transparent(.5)}; }`),e.addRule(`.monaco-editor .parameter-hints-widget .signature.has-docs { border-bottom: 1px solid ${t.transparent(.5)}; }`)}let i=s.getColor(To);i&&e.addRule(`.monaco-editor .parameter-hints-widget { background-color: ${i}; }`);let n=s.getColor(gr);n&&e.addRule(`.monaco-editor .parameter-hints-widget a { color: ${n}; }`);let o=s.getColor(fr);o&&e.addRule(`.monaco-editor .parameter-hints-widget a:hover { color: ${o}; }`);let r=s.getColor(Ia);r&&e.addRule(`.monaco-editor .parameter-hints-widget { color: ${r}; }`);let a=s.getColor(Wh);a&&e.addRule(`.monaco-editor .parameter-hints-widget code { background-color: ${a}; }`);let l=s.getColor(IR);l&&e.addRule(`.monaco-editor .parameter-hints-widget .parameter.active { color: ${l}}`)});var kR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},LR=function(s,e){return function(t,i){e(t,i,s)}},Xs=class ak extends z{constructor(e,t){super();this.editor=e,this.widget=this._register(t.createInstance(Wc,this.editor))}static get(e){return e.getContribution(ak.ID)}cancel(){this.widget.cancel()}previous(){this.widget.previous()}next(){this.widget.next()}trigger(e){this.widget.trigger(e)}};Xs.ID="editor.controller.parameterHints";Xs=kR([LR(1,le)],Xs);var lk=class extends F{constructor(){super({id:"editor.action.triggerParameterHints",label:u("parameterHints.trigger.label","Trigger Parameter Hints"),alias:"Trigger Parameter Hints",precondition:S.hasSignatureHelpProvider,kbOpts:{kbExpr:S.editorTextFocus,primary:3082,weight:100}})}run(e,t){let i=Xs.get(t);i&&i.trigger({triggerKind:En.Invoke})}};J(Xs.ID,Xs);I(lk);var wb=100+75,Tb=ct.bindToContribution(Xs.get);$(new Tb({id:"closeParameterHints",precondition:Zo.Visible,handler:s=>s.cancel(),kbOpts:{weight:wb,kbExpr:S.focus,primary:9,secondary:[1033]}}));$(new Tb({id:"showPrevParameterHint",precondition:O.and(Zo.Visible,Zo.MultipleSignatures),handler:s=>s.previous(),kbOpts:{weight:wb,kbExpr:S.focus,primary:16,secondary:[528],mac:{primary:16,secondary:[528,302]}}}));$(new Tb({id:"showNextParameterHint",precondition:O.and(Zo.Visible,Zo.MultipleSignatures),handler:s=>s.next(),kbOpts:{weight:wb,kbExpr:S.focus,primary:18,secondary:[530],mac:{primary:18,secondary:[530,300]}}}));Ln();ke();ut();Le();G();qt();Xt();bd();ue();Ci();tt();ee();He();Re();ZL();Q();cP();Ee();Be();Mh();ps();Ca();G();tt();Q();Ee();Ki();mt();Ne();var PR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Eb=function(s,e){return function(t,i){e(t,i,s)}},Bc=new pe("renameInputVisible",!1,u("renameInputVisible","Whether the rename input widget is visible")),am=class{constructor(e,t,i,n,o){this._editor=e,this._acceptKeybindings=t,this._themeService=i,this._keybindingService=n,this._disposables=new A,this.allowEditorOverflow=!0,this._visibleContextKey=Bc.bindTo(o),this._editor.addContentWidget(this),this._disposables.add(this._editor.onDidChangeConfiguration(r=>{r.hasChanged(44)&&this._updateFont()})),this._disposables.add(i.onDidColorThemeChange(this._updateStyles,this))}dispose(){this._disposables.dispose(),this._editor.removeContentWidget(this)}getId(){return"__renameInputWidget"}getDomNode(){if(!this._domNode){this._domNode=document.createElement("div"),this._domNode.className="monaco-editor rename-box",this._input=document.createElement("input"),this._input.className="rename-input",this._input.type="text",this._input.setAttribute("aria-label",u("renameAriaLabel","Rename input. Type new name and press Enter to commit.")),this._domNode.appendChild(this._input),this._label=document.createElement("div"),this._label.className="rename-label",this._domNode.appendChild(this._label);let e=()=>{var t,i;let[n,o]=this._acceptKeybindings;this._keybindingService.lookupKeybinding(n),this._label.innerText=u({key:"label",comment:['placeholders are keybindings, e.g "F2 to Rename, Shift+F2 to Preview"']},"{0} to Rename, {1} to Preview",(t=this._keybindingService.lookupKeybinding(n))===null||t===void 0?void 0:t.getLabel(),(i=this._keybindingService.lookupKeybinding(o))===null||i===void 0?void 0:i.getLabel())};e(),this._disposables.add(this._keybindingService.onDidUpdateKeybindings(e)),this._updateFont(),this._updateStyles(this._themeService.getColorTheme())}return this._domNode}_updateStyles(e){var t,i,n,o;if(!this._input||!this._domNode)return;let r=e.getColor(yr);this._domNode.style.backgroundColor=String((t=e.getColor(cn))!==null&&t!==void 0?t:""),this._domNode.style.boxShadow=r?` 0 0 8px 2px ${r}`:"",this._domNode.style.color=String((i=e.getColor(Vh))!==null&&i!==void 0?i:""),this._input.style.backgroundColor=String((n=e.getColor(Bh))!==null&&n!==void 0?n:"");let a=e.getColor(Gh);this._input.style.borderWidth=a?"1px":"0px",this._input.style.borderStyle=a?"solid":"none",this._input.style.borderColor=(o=a==null?void 0:a.toString())!==null&&o!==void 0?o:"none"}_updateFont(){if(!this._input||!this._label)return;let e=this._editor.getOption(44);this._input.style.fontFamily=e.fontFamily,this._input.style.fontWeight=e.fontWeight,this._input.style.fontSize=`${e.fontSize}px`,this._label.style.fontSize=`${e.fontSize*.8}px`}getPosition(){return this._visible?{position:this._position,preference:[2,1]}:null}afterRender(e){e||this.cancelInput(!0)}acceptInput(e){this._currentAcceptInput&&this._currentAcceptInput(e)}cancelInput(e){this._currentCancelInput&&this._currentCancelInput(e)}getInput(e,t,i,n,o,r){this._domNode.classList.toggle("preview",o),this._position=new U(e.startLineNumber,e.startColumn),this._input.value=t,this._input.setAttribute("selectionStart",i.toString()),this._input.setAttribute("selectionEnd",n.toString()),this._input.size=Math.max((e.endColumn-e.startColumn)*1.1,20);let a=new A;return new Promise(l=>{this._currentCancelInput=c=>(this._currentAcceptInput=void 0,this._currentCancelInput=void 0,l(c),!0),this._currentAcceptInput=c=>{if(this._input.value.trim().length===0||this._input.value===t){this.cancelInput(!0);return}this._currentAcceptInput=void 0,this._currentCancelInput=void 0,l({newName:this._input.value,wantsPreview:o&&c})},r.onCancellationRequested(()=>this.cancelInput(!0)),a.add(this._editor.onDidBlurEditorWidget(()=>this.cancelInput(!1))),this._show()}).finally(()=>{a.dispose(),this._hide()})}_show(){this._editor.revealLineInCenterIfOutsideViewport(this._position.lineNumber,0),this._visible=!0,this._visibleContextKey.set(!0),this._editor.layoutContentWidget(this),setTimeout(()=>{this._input.focus(),this._input.setSelectionRange(parseInt(this._input.getAttribute("selectionStart")),parseInt(this._input.getAttribute("selectionEnd")))},100)}_hide(){this._visible=!1,this._visibleContextKey.reset(),this._editor.layoutContentWidget(this)}};am=PR([Eb(2,Nt),Eb(3,rt),Eb(4,ie)],am);var MR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Sl=function(s,e){return function(t,i){e(t,i,s)}},Ys=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},lm=class{constructor(e,t){this.model=e,this.position=t,this._providerRenameIdx=0,this._providers=GS.ordered(e)}hasProvider(){return this._providers.length>0}resolveRenameLocation(e){return Ys(this,void 0,void 0,function*(){let t=[];for(this._providerRenameIdx=0;this._providerRenameIdx<this._providers.length;this._providerRenameIdx++){let n=this._providers[this._providerRenameIdx];if(!n.resolveRenameLocation)break;let o=yield n.resolveRenameLocation(this.model,this.position,e);if(!!o){if(o.rejectReason){t.push(o.rejectReason);continue}return o}}let i=this.model.getWordAtPosition(this.position);return i?{range:new b(this.position.lineNumber,i.startColumn,this.position.lineNumber,i.endColumn),text:i.word,rejectReason:t.length>0?t.join(`
`):void 0}:{range:b.fromPositions(this.position),text:"",rejectReason:t.length>0?t.join(`
`):void 0}})}provideRenameEdits(e,t){return Ys(this,void 0,void 0,function*(){return this._provideRenameEdits(e,this._providerRenameIdx,[],t)})}_provideRenameEdits(e,t,i,n){return Ys(this,void 0,void 0,function*(){let o=this._providers[t];if(!o)return{edits:[],rejectReason:i.join(`
`)};let r=yield o.provideRenameEdits(this.model,this.position,e,n);if(r){if(r.rejectReason)return this._provideRenameEdits(e,t+1,i.concat(r.rejectReason),n)}else return this._provideRenameEdits(e,t+1,i.concat(u("no result","No result.")),n);return r})}};function DR(s,e,t){return Ys(this,void 0,void 0,function*(){let i=new lm(s,e),n=yield i.resolveRenameLocation(ge.None);return(n==null?void 0:n.rejectReason)?{edits:[],rejectReason:n.rejectReason}:i.provideRenameEdits(t,ge.None)})}var Zs=class dk{constructor(e,t,i,n,o,r,a){this.editor=e,this._instaService=t,this._notificationService=i,this._bulkEditService=n,this._progressService=o,this._logService=r,this._configService=a,this._dispoableStore=new A,this._cts=new Ft,this._renameInputField=this._dispoableStore.add(new pa(()=>this._dispoableStore.add(this._instaService.createInstance(am,this.editor,["acceptRenameInput","acceptRenameInputWithPreview"]))))}static get(e){return e.getContribution(dk.ID)}dispose(){this._dispoableStore.dispose(),this._cts.dispose(!0)}run(){var e,t;return Ys(this,void 0,void 0,function*(){if(this._cts.dispose(!0),!this.editor.hasModel())return;let i=this.editor.getPosition(),n=new lm(this.editor.getModel(),i);if(!n.hasProvider())return;this._cts=new yd(this.editor,5);let o;try{let p=n.resolveRenameLocation(this._cts.token);this._progressService.showWhile(p,250),o=yield p}catch(p){(e=Qt.get(this.editor))===null||e===void 0||e.showMessage(p||u("resolveRenameLocationFailed","An unknown error occurred while resolving rename location"),i);return}if(!o)return;if(o.rejectReason){(t=Qt.get(this.editor))===null||t===void 0||t.showMessage(o.rejectReason,i);return}if(this._cts.token.isCancellationRequested)return;this._cts.dispose(),this._cts=new yd(this.editor,5,o.range);let r=this.editor.getSelection(),a=0,l=o.text.length;!b.isEmpty(r)&&!b.spansMultipleLines(r)&&b.containsRange(o.range,r)&&(a=Math.max(0,r.startColumn-o.range.startColumn),l=Math.min(o.range.endColumn,r.endColumn)-o.range.startColumn);let c=this._bulkEditService.hasPreviewHandler()&&this._configService.getValue(this.editor.getModel().uri,"editor.rename.enablePreview"),d=yield this._renameInputField.value.getInput(o.range,o.text,a,l,c,this._cts.token);if(typeof d=="boolean"){d&&this.editor.focus();return}this.editor.focus();let h=ha(n.provideRenameEdits(d.newName,this._cts.token),this._cts.token).then(p=>Ys(this,void 0,void 0,function*(){if(!(!p||!this.editor.hasModel())){if(p.rejectReason){this._notificationService.info(p.rejectReason);return}this.editor.setSelection(b.fromPositions(this.editor.getSelection().getPosition())),this._bulkEditService.apply(pu.convert(p),{editor:this.editor,showPreview:d.wantsPreview,label:u("label","Renaming '{0}'",o==null?void 0:o.text),quotableLabel:u("quotableLabel","Renaming {0}",o==null?void 0:o.text)}).then(m=>{m.ariaSummary&&_t(u("aria","Successfully renamed '{0}' to '{1}'. Summary: {2}",o.text,d.newName,m.ariaSummary))}).catch(m=>{this._notificationService.error(u("rename.failedApply","Rename failed to apply edits")),this._logService.error(m)})}}),p=>{this._notificationService.error(u("rename.failed","Rename failed to compute edits")),this._logService.error(p)});return this._progressService.showWhile(h,250),h})}acceptRenameInput(e){this._renameInputField.value.acceptInput(e)}cancelRenameInput(){this._renameInputField.value.cancelInput(!0)}};Zs.ID="editor.contrib.renameController";Zs=MR([Sl(1,le),Sl(2,Ze),Sl(3,uu),Sl(4,Mo),Sl(5,pr),Sl(6,nv)],Zs);var ck=class extends F{constructor(){super({id:"editor.action.rename",label:u("rename.label","Rename Symbol"),alias:"Rename Symbol",precondition:O.and(S.writable,S.hasRenameProvider),kbOpts:{kbExpr:S.editorTextFocus,primary:60,weight:100},contextMenuOpts:{group:"1_modification",order:1.1}})}runCommand(e,t){let i=e.get(Ve),[n,o]=Array.isArray(t)&&t||[void 0,void 0];return _e.isUri(n)&&U.isIPosition(o)?i.openCodeEditor({resource:n},i.getActiveCodeEditor()).then(r=>{!r||(r.setPosition(o),r.invokeWithinContext(a=>(this.reportTelemetry(a,r),this.run(a,r))))},de):super.runCommand(e,t)}run(e,t){let i=Zs.get(t);return i?i.run():Promise.resolve()}};J(Zs.ID,Zs);I(ck);var Ib=ct.bindToContribution(Zs.get);$(new Ib({id:"acceptRenameInput",precondition:Bc,handler:s=>s.acceptRenameInput(!1),kbOpts:{weight:100+99,kbExpr:S.focus,primary:3}}));$(new Ib({id:"acceptRenameInputWithPreview",precondition:O.and(Bc,O.has("config.editor.rename.enablePreview")),handler:s=>s.acceptRenameInput(!0),kbOpts:{weight:100+99,kbExpr:S.focus,primary:1024+3}}));$(new Ib({id:"cancelRenameInput",precondition:Bc,handler:s=>s.cancelRenameInput(),kbOpts:{weight:100+99,kbExpr:S.focus,primary:9,secondary:[1033]}}));wi("_executeDocumentRenameProvider",function(s,e,...t){let[i]=t;return qe(typeof i=="string"),DR(s,e,i)});wi("_executePrepareRename",function(s,e){return Ys(this,void 0,void 0,function*(){let i=yield new lm(s,e).resolveRenameLocation(ge.None);if(i==null?void 0:i.rejectReason)throw new Error(i.rejectReason);return i})});ln.as(Rx.Configuration).registerConfiguration({id:"editor",properties:{"editor.rename.enablePreview":{scope:5,description:u("enablePreview","Enable/disable the ability to preview changes before renaming"),default:!0,type:"boolean"}}});vt();ut();Le();ue();tt();ee();Mt();He();Re();Ye();ee();var kb=class{provideSelectionRanges(e,t){let i=[];for(let n of t){let o=[];i.push(o),this._addInWordRanges(o,e,n),this._addWordRanges(o,e,n),this._addWhitespaceLine(o,e,n),o.push({range:e.getFullModelRange()})}return i}_addInWordRanges(e,t,i){let n=t.getWordAtPosition(i);if(!n)return;let{word:o,startColumn:r}=n,a=i.column-r,l=a,c=a,d=0;for(;l>=0;l--){let h=o.charCodeAt(l);if(l!==a&&(h===95||h===45))break;if(Lm(h)&&Pm(d))break;d=h}for(l+=1;c<o.length;c++){let h=o.charCodeAt(c);if(Pm(h)&&Lm(d))break;if(h===95||h===45)break;d=h}l<c&&e.push({range:new b(i.lineNumber,r+l,i.lineNumber,r+c)})}_addWordRanges(e,t,i){let n=t.getWordAtPosition(i);n&&e.push({range:new b(i.lineNumber,n.startColumn,i.lineNumber,n.endColumn)})}_addWhitespaceLine(e,t,i){t.getLineLength(i.lineNumber)>0&&t.getLineFirstNonWhitespaceColumn(i.lineNumber)===0&&t.getLineLastNonWhitespaceColumn(i.lineNumber)===0&&e.push({range:new b(i.lineNumber,1,i.lineNumber,t.getLineMaxColumn(i.lineNumber))})}};Q();ri();wt();var Lb=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},dm=class{constructor(e,t){this.index=e,this.ranges=t}mov(e){let t=this.index+(e?1:-1);if(t<0||t>=this.ranges.length)return this;let i=new dm(t,this.ranges);return i.ranges[t].equalsRange(this.ranges[this.index])?i.mov(e):i}},Js=class{constructor(e){this._editor=e,this._ignoreSelection=!1}static get(e){return e.getContribution(Js.ID)}dispose(){var e;(e=this._selectionListener)===null||e===void 0||e.dispose()}run(e){return Lb(this,void 0,void 0,function*(){if(!this._editor.hasModel())return;let t=this._editor.getSelections(),i=this._editor.getModel();if(!Ih.has(i)||(this._state||(yield pk(i,t.map(o=>o.getPosition()),this._editor.getOption(102),ge.None).then(o=>{var r;if(!(!Pt(o)||o.length!==t.length)&&!(!this._editor.hasModel()||!Jr(this._editor.getSelections(),t,(a,l)=>a.equalsSelection(l)))){for(let a=0;a<o.length;a++)o[a]=o[a].filter(l=>l.containsPosition(t[a].getStartPosition())&&l.containsPosition(t[a].getEndPosition())),o[a].unshift(t[a]);this._state=o.map(a=>new dm(0,a)),(r=this._selectionListener)===null||r===void 0||r.dispose(),this._selectionListener=this._editor.onDidChangeCursorPosition(()=>{var a;this._ignoreSelection||((a=this._selectionListener)===null||a===void 0||a.dispose(),this._state=void 0)})}})),!this._state))return;this._state=this._state.map(o=>o.mov(e));let n=this._state.map(o=>X.fromPositions(o.ranges[o.index].getStartPosition(),o.ranges[o.index].getEndPosition()));this._ignoreSelection=!0;try{this._editor.setSelections(n)}finally{this._ignoreSelection=!1}})}};Js.ID="editor.contrib.smartSelectController";var Pb=class extends F{constructor(e,t){super(t);this._forward=e}run(e,t){return Lb(this,void 0,void 0,function*(){let i=Js.get(t);i&&(yield i.run(this._forward))})}},hk=class extends Pb{constructor(){super(!0,{id:"editor.action.smartSelect.expand",label:u("smartSelect.expand","Expand Selection"),alias:"Expand Selection",precondition:void 0,kbOpts:{kbExpr:S.editorTextFocus,primary:1553,mac:{primary:3345,secondary:[1297]},weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"1_basic",title:u({key:"miSmartSelectGrow",comment:["&& denotes a mnemonic"]},"&&Expand Selection"),order:2}})}};Pe.registerCommandAlias("editor.action.smartSelect.grow","editor.action.smartSelect.expand");var uk=class extends Pb{constructor(){super(!1,{id:"editor.action.smartSelect.shrink",label:u("smartSelect.shrink","Shrink Selection"),alias:"Shrink Selection",precondition:void 0,kbOpts:{kbExpr:S.editorTextFocus,primary:1551,mac:{primary:3343,secondary:[1295]},weight:100},menuOpts:{menuId:se.MenubarSelectionMenu,group:"1_basic",title:u({key:"miSmartSelectShrink",comment:["&& denotes a mnemonic"]},"&&Shrink Selection"),order:3}})}};J(Js.ID,Js);I(hk);I(uk);Ih.register("*",new kb);function pk(s,e,t,i){return Lb(this,void 0,void 0,function*(){let n=Ih.all(s);n.length===1&&n.unshift(new ci);let o=[],r=[];for(let a of n)o.push(Promise.resolve(a.provideSelectionRanges(s,e,i)).then(l=>{if(Pt(l)&&l.length===e.length)for(let c=0;c<e.length;c++){r[c]||(r[c]=[]);for(let d of l[c])b.isIRange(d.range)&&b.containsPosition(d.range,e[c])&&r[c].push(b.lift(d.range))}},Ue));return yield Promise.all(o),r.map(a=>{if(a.length===0)return[];a.sort((h,p)=>U.isBefore(h.getStartPosition(),p.getStartPosition())?1:U.isBefore(p.getStartPosition(),h.getStartPosition())||U.isBefore(h.getEndPosition(),p.getEndPosition())?-1:U.isBefore(p.getEndPosition(),h.getEndPosition())?1:0);let l=[],c;for(let h of a)(!c||b.containsRange(h,c)&&!b.equalsRange(h,c))&&(l.push(h),c=h);if(!t.selectLeadingAndTrailingWhitespace)return l;let d=[l[0]];for(let h=1;h<l.length;h++){let p=l[h-1],m=l[h];if(m.startLineNumber!==p.startLineNumber||m.endLineNumber!==p.endLineNumber){let f=new b(p.startLineNumber,s.getLineFirstNonWhitespaceColumn(p.startLineNumber),p.endLineNumber,s.getLineLastNonWhitespaceColumn(p.endLineNumber));f.containsRange(p)&&!f.equalsRange(p)&&m.containsRange(f)&&!m.equalsRange(f)&&d.push(f);let v=new b(p.startLineNumber,1,p.endLineNumber,s.getLineMaxColumn(p.endLineNumber));v.containsRange(p)&&!v.equalsRange(f)&&m.containsRange(v)&&!m.equalsRange(v)&&d.push(v)}d.push(m)}return d})})}Tv("_executeSelectionRangeProvider",function(s,...e){let[t]=e;return pk(s,t,{selectLeadingAndTrailingWhitespace:!0},ge.None)});Wl();ue();Q();var mk=class extends F{constructor(){super({id:"editor.action.forceRetokenize",label:u("forceRetokenize","Developer: Force Retokenize"),alias:"Developer: Force Retokenize",precondition:void 0})}run(e,t){if(!t.hasModel())return;let i=t.getModel();i.resetTokenization();let n=new on(!0);i.forceTokenization(i.getLineCount()),n.stop(),console.log(`tokenization took ${n.elapsed()}`)}};I(mk);Mb();G();Hi();ue();Ci();Q();var RR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},gk=function(s,e){return function(t,i){e(t,i,s)}},AR=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},fk="ignoreUnusualLineTerminators";function FR(s,e,t){s.setModelProperty(e.uri,fk,t)}function NR(s,e){return s.getModelProperty(e.uri,fk)}var Vc=class extends z{constructor(e,t,i){super();this._editor=e,this._dialogService=t,this._codeEditorService=i,this._config=this._editor.getOption(114),this._register(this._editor.onDidChangeConfiguration(n=>{n.hasChanged(114)&&(this._config=this._editor.getOption(114),this._checkForUnusualLineTerminators())})),this._register(this._editor.onDidChangeModel(()=>{this._checkForUnusualLineTerminators()})),this._register(this._editor.onDidChangeModelContent(n=>{n.isUndoing||this._checkForUnusualLineTerminators()}))}_checkForUnusualLineTerminators(){return AR(this,void 0,void 0,function*(){if(this._config==="off"||!this._editor.hasModel())return;let e=this._editor.getModel();if(!e.mightContainUnusualLineTerminators()||NR(this._codeEditorService,e)===!0||this._editor.getOption(81))return;if(this._config==="auto"){e.removeUnusualLineTerminators(this._editor.getSelections());return}if(!(yield this._dialogService.confirm({title:u("unusualLineTerminators.title","Unusual Line Terminators"),message:u("unusualLineTerminators.message","Detected unusual line terminators"),detail:u("unusualLineTerminators.detail","The file '{0}' contains one or more unusual line terminator characters, like Line Separator (LS) or Paragraph Separator (PS).\n\nIt is recommended to remove them from the file. This can be configured via `editor.unusualLineTerminators`.",Jt(e.uri)),primaryButton:u("unusualLineTerminators.fix","Remove Unusual Line Terminators"),secondaryButton:u("unusualLineTerminators.ignore","Ignore")})).confirmed){FR(this._codeEditorService,e,!0);return}e.removeUnusualLineTerminators(this._editor.getSelections())})}};Vc.ID="editor.contrib.unusualLineTerminatorsDetector";Vc=RR([gk(1,Oa),gk(2,Ve)],Vc);J(Vc.ID,Vc);var Rae=Zr(yk());Ln();vt();ke();ut();Le();G();ue();ee();He();ca();jt();Re();Q();Ee();mt();Ne();var OR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},HR=function(s,e){return function(t,i){e(t,i,s)}},WR=q("editor.wordHighlightBackground",{dark:"#575757B8",light:"#57575740",hc:null},u("wordHighlight","Background color of a symbol during read-access, like reading a variable. The color must not be opaque so as not to hide underlying decorations."),!0),BR=q("editor.wordHighlightStrongBackground",{dark:"#004972B8",light:"#0e639c40",hc:null},u("wordHighlightStrong","Background color of a symbol during write-access, like writing to a variable. The color must not be opaque so as not to hide underlying decorations."),!0),VR=q("editor.wordHighlightBorder",{light:null,dark:null,hc:as},u("wordHighlightBorder","Border color of a symbol during read-access, like reading a variable.")),GR=q("editor.wordHighlightStrongBorder",{light:null,dark:null,hc:as},u("wordHighlightStrongBorder","Border color of a symbol during write-access, like writing to a variable.")),jR=q("editorOverviewRuler.wordHighlightForeground",{dark:"#A0A0A0CC",light:"#A0A0A0CC",hc:"#A0A0A0CC"},u("overviewRulerWordHighlightForeground","Overview ruler marker color for symbol highlights. The color must not be opaque so as not to hide underlying decorations."),!0),UR=q("editorOverviewRuler.wordHighlightStrongForeground",{dark:"#C0A0C0CC",light:"#C0A0C0CC",hc:"#C0A0C0CC"},u("overviewRulerWordHighlightStrongForeground","Overview ruler marker color for write-access symbol highlights. The color must not be opaque so as not to hide underlying decorations."),!0),hm=new pe("hasWordHighlights",!1);function bk(s,e,t){let i=Ul.ordered(s);return xh(i.map(n=>()=>Promise.resolve(n.provideDocumentHighlights(s,e,t)).then(void 0,Ue)),Pt)}var Db=class{constructor(e,t,i){this._wordRange=this._getCurrentWordRange(e,t),this.result=Oe(n=>this._compute(e,t,i,n))}_getCurrentWordRange(e,t){let i=e.getWordAtPosition(t.getPosition());return i?new b(t.startLineNumber,i.startColumn,t.startLineNumber,i.endColumn):null}isValid(e,t,i){let n=t.startLineNumber,o=t.startColumn,r=t.endColumn,a=this._getCurrentWordRange(e,t),l=Boolean(this._wordRange&&this._wordRange.equalsRange(a));for(let c=0,d=i.length;!l&&c<d;c++){let h=e.getDecorationRange(i[c]);h&&h.startLineNumber===n&&h.startColumn<=o&&h.endColumn>=r&&(l=!0)}return l}cancel(){this.result.cancel()}},Sk=class extends Db{_compute(e,t,i,n){return bk(e,t.getPosition(),n).then(o=>o||[])}},vk=class extends Db{constructor(e,t,i){super(e,t,i);this._selectionIsEmpty=t.isEmpty()}_compute(e,t,i,n){return ua(250,n).then(()=>{if(!t.isEmpty())return[];let o=e.getWordAtPosition(t.getPosition());return!o||o.word.length>1e3?[]:e.findMatches(o.word,!0,!1,!0,i,!1).map(a=>({range:a.range,kind:wh.Text}))})}isValid(e,t,i){let n=t.isEmpty();return this._selectionIsEmpty!==n?!1:super.isValid(e,t,i)}};function $R(s,e,t){return Ul.has(s)?new Sk(s,e,t):new vk(s,e,t)}wi("_executeDocumentHighlights",(s,e)=>bk(s,e,ge.None));var ea=class{constructor(e,t){this.toUnhook=new A,this.workerRequestTokenId=0,this.workerRequestCompleted=!1,this.workerRequestValue=[],this.lastCursorPositionChangeTime=0,this.renderDecorationsTimer=-1,this.editor=e,this._hasWordHighlights=hm.bindTo(t),this._ignorePositionChangeEvent=!1,this.occurrencesHighlight=this.editor.getOption(72),this.model=this.editor.getModel(),this.toUnhook.add(e.onDidChangeCursorPosition(i=>{this._ignorePositionChangeEvent||!this.occurrencesHighlight||this._onPositionChanged(i)})),this.toUnhook.add(e.onDidChangeModelContent(i=>{this._stopAll()})),this.toUnhook.add(e.onDidChangeConfiguration(i=>{let n=this.editor.getOption(72);this.occurrencesHighlight!==n&&(this.occurrencesHighlight=n,this._stopAll())})),this._decorationIds=[],this.workerRequestTokenId=0,this.workerRequest=null,this.workerRequestCompleted=!1,this.lastCursorPositionChangeTime=0,this.renderDecorationsTimer=-1}hasDecorations(){return this._decorationIds.length>0}restore(){!this.occurrencesHighlight||this._run()}_getSortedHighlights(){return Vn(this._decorationIds.map(e=>this.model.getDecorationRange(e)).sort(b.compareRangesUsingStarts))}moveNext(){let e=this._getSortedHighlights(),i=(e.findIndex(o=>o.containsPosition(this.editor.getPosition()))+1)%e.length,n=e[i];try{this._ignorePositionChangeEvent=!0,this.editor.setPosition(n.getStartPosition()),this.editor.revealRangeInCenterIfOutsideViewport(n);let o=this._getWord();if(o){let r=this.editor.getModel().getLineContent(n.startLineNumber);_t(`${r}, ${i+1} of ${e.length} for '${o.word}'`)}}finally{this._ignorePositionChangeEvent=!1}}moveBack(){let e=this._getSortedHighlights(),i=(e.findIndex(o=>o.containsPosition(this.editor.getPosition()))-1+e.length)%e.length,n=e[i];try{this._ignorePositionChangeEvent=!0,this.editor.setPosition(n.getStartPosition()),this.editor.revealRangeInCenterIfOutsideViewport(n);let o=this._getWord();if(o){let r=this.editor.getModel().getLineContent(n.startLineNumber);_t(`${r}, ${i+1} of ${e.length} for '${o.word}'`)}}finally{this._ignorePositionChangeEvent=!1}}_removeDecorations(){this._decorationIds.length>0&&(this._decorationIds=this.editor.deltaDecorations(this._decorationIds,[]),this._hasWordHighlights.set(!1))}_stopAll(){this._removeDecorations(),this.renderDecorationsTimer!==-1&&(clearTimeout(this.renderDecorationsTimer),this.renderDecorationsTimer=-1),this.workerRequest!==null&&(this.workerRequest.cancel(),this.workerRequest=null),this.workerRequestCompleted||(this.workerRequestTokenId++,this.workerRequestCompleted=!0)}_onPositionChanged(e){if(!this.occurrencesHighlight){this._stopAll();return}if(e.reason!==3){this._stopAll();return}this._run()}_getWord(){let e=this.editor.getSelection(),t=e.startLineNumber,i=e.startColumn;return this.model.getWordAtPosition({lineNumber:t,column:i})}_run(){let e=this.editor.getSelection();if(e.startLineNumber!==e.endLineNumber){this._stopAll();return}let t=e.startColumn,i=e.endColumn,n=this._getWord();if(!n||n.startColumn>t||n.endColumn<i){this._stopAll();return}let o=this.workerRequest&&this.workerRequest.isValid(this.model,e,this._decorationIds);if(this.lastCursorPositionChangeTime=new Date().getTime(),o)this.workerRequestCompleted&&this.renderDecorationsTimer!==-1&&(clearTimeout(this.renderDecorationsTimer),this.renderDecorationsTimer=-1,this._beginRenderDecorations());else{this._stopAll();let r=++this.workerRequestTokenId;this.workerRequestCompleted=!1,this.workerRequest=$R(this.model,this.editor.getSelection(),this.editor.getOption(117)),this.workerRequest.result.then(a=>{r===this.workerRequestTokenId&&(this.workerRequestCompleted=!0,this.workerRequestValue=a||[],this._beginRenderDecorations())},de)}}_beginRenderDecorations(){let e=new Date().getTime(),t=this.lastCursorPositionChangeTime+250;e>=t?(this.renderDecorationsTimer=-1,this.renderDecorations()):this.renderDecorationsTimer=setTimeout(()=>{this.renderDecorations()},t-e)}renderDecorations(){this.renderDecorationsTimer=-1;let e=[];for(let t of this.workerRequestValue)t.range&&e.push({range:t.range,options:ea._getDecorationOptions(t.kind)});this._decorationIds=this.editor.deltaDecorations(this._decorationIds,e),this._hasWordHighlights.set(this.hasDecorations())}static _getDecorationOptions(e){return e===wh.Write?this._WRITE_OPTIONS:e===wh.Text?this._TEXT_OPTIONS:this._REGULAR_OPTIONS}dispose(){this._stopAll(),this.toUnhook.dispose()}};ea._WRITE_OPTIONS=xe.register({description:"word-highlight-strong",stickiness:1,className:"wordHighlightStrong",overviewRuler:{color:nt(UR),position:Di.Center},minimap:{color:nt(Pa),position:bo.Inline}});ea._TEXT_OPTIONS=xe.register({description:"selection-highlight",stickiness:1,className:"selectionHighlight",overviewRuler:{color:nt(Yh),position:Di.Center},minimap:{color:nt(Pa),position:bo.Inline}});ea._REGULAR_OPTIONS=xe.register({description:"word-highlight",stickiness:1,className:"wordHighlight",overviewRuler:{color:nt(jR),position:Di.Center},minimap:{color:nt(Pa),position:bo.Inline}});var Qs=class xk extends z{constructor(e,t){super();this.wordHighlighter=null;let i=()=>{e.hasModel()&&(this.wordHighlighter=new ea(e,t))};this._register(e.onDidChangeModel(n=>{this.wordHighlighter&&(this.wordHighlighter.dispose(),this.wordHighlighter=null),i()})),i()}static get(e){return e.getContribution(xk.ID)}saveViewState(){return!!(this.wordHighlighter&&this.wordHighlighter.hasDecorations())}moveNext(){this.wordHighlighter&&this.wordHighlighter.moveNext()}moveBack(){this.wordHighlighter&&this.wordHighlighter.moveBack()}restoreViewState(e){this.wordHighlighter&&e&&this.wordHighlighter.restore()}dispose(){this.wordHighlighter&&(this.wordHighlighter.dispose(),this.wordHighlighter=null),super.dispose()}};Qs.ID="editor.contrib.wordHighlighter";Qs=OR([HR(1,ie)],Qs);var Rb=class extends F{constructor(e,t){super(t);this._isNext=e}run(e,t){let i=Qs.get(t);!i||(this._isNext?i.moveNext():i.moveBack())}},Ck=class extends Rb{constructor(){super(!0,{id:"editor.action.wordHighlight.next",label:u("wordHighlight.next.label","Go to Next Symbol Highlight"),alias:"Go to Next Symbol Highlight",precondition:hm,kbOpts:{kbExpr:S.editorTextFocus,primary:65,weight:100}})}},_k=class extends Rb{constructor(){super(!1,{id:"editor.action.wordHighlight.prev",label:u("wordHighlight.previous.label","Go to Previous Symbol Highlight"),alias:"Go to Previous Symbol Highlight",precondition:hm,kbOpts:{kbExpr:S.editorTextFocus,primary:1089,weight:100}})}},wk=class extends F{constructor(){super({id:"editor.action.wordHighlight.trigger",label:u("wordHighlight.trigger.label","Trigger Symbol Highlight"),alias:"Trigger Symbol Highlight",precondition:hm.toNegated(),kbOpts:{kbExpr:S.editorTextFocus,primary:0,weight:100}})}run(e,t,i){let n=Qs.get(t);!n||n.restoreViewState(!0)}};J(Qs.ID,Qs);I(Ck);I(_k);I(wk);Me((s,e)=>{let t=s.getColor(jv);t&&(e.addRule(`.monaco-editor .focused .selectionHighlight { background-color: ${t}; }`),e.addRule(`.monaco-editor .selectionHighlight { background-color: ${t.transparent(.5)}; }`));let i=s.getColor(WR);i&&e.addRule(`.monaco-editor .wordHighlight { background-color: ${i}; }`);let n=s.getColor(BR);n&&e.addRule(`.monaco-editor .wordHighlightStrong { background-color: ${n}; }`);let o=s.getColor(Uv);o&&e.addRule(`.monaco-editor .selectionHighlight { border: 1px ${s.type==="hc"?"dotted":"solid"} ${o}; box-sizing: border-box; }`);let r=s.getColor(VR);r&&e.addRule(`.monaco-editor .wordHighlight { border: 1px ${s.type==="hc"?"dashed":"solid"} ${r}; box-sizing: border-box; }`);let a=s.getColor(GR);a&&e.addRule(`.monaco-editor .wordHighlightStrong { border: 1px ${s.type==="hc"?"dashed":"solid"} ${a}; box-sizing: border-box; }`)});ue();XL();tt();ee();Mt();He();sn();Q();Ee();var vl=class extends ct{constructor(e){super(e);this._inSelectionMode=e.inSelectionMode,this._wordNavigationType=e.wordNavigationType}runEditorCommand(e,t,i){if(!t.hasModel())return;let n=ur(t.getOption(117)),o=t.getModel(),a=t.getSelections().map(l=>{let c=new U(l.positionLineNumber,l.positionColumn),d=this._move(n,o,c,this._wordNavigationType);return this._moveTo(l,d,this._inSelectionMode)});if(o.pushStackElement(),t._getViewModel().setCursorStates("moveWordCommand",3,a.map(l=>Px.fromModelSelection(l))),a.length===1){let l=new U(a[0].positionLineNumber,a[0].positionColumn);t.revealPosition(l,0)}}_moveTo(e,t,i){return i?new X(e.selectionStartLineNumber,e.selectionStartColumn,t.lineNumber,t.column):new X(t.lineNumber,t.column,t.lineNumber,t.column)}},Jo=class extends vl{_move(e,t,i,n){return Aa.moveWordLeft(e,t,i,n)}},Qo=class extends vl{_move(e,t,i,n){return Aa.moveWordRight(e,t,i,n)}},Tk=class extends Jo{constructor(){super({inSelectionMode:!1,wordNavigationType:0,id:"cursorWordStartLeft",precondition:void 0})}},Ek=class extends Jo{constructor(){super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordEndLeft",precondition:void 0})}},Ik=class extends Jo{constructor(){var e;super({inSelectionMode:!1,wordNavigationType:1,id:"cursorWordLeft",precondition:void 0,kbOpts:{kbExpr:O.and(S.textInputFocus,(e=O.and(td,fd))===null||e===void 0?void 0:e.negate()),primary:2063,mac:{primary:527},weight:100}})}},kk=class extends Jo{constructor(){super({inSelectionMode:!0,wordNavigationType:0,id:"cursorWordStartLeftSelect",precondition:void 0})}},Lk=class extends Jo{constructor(){super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordEndLeftSelect",precondition:void 0})}},Pk=class extends Jo{constructor(){var e;super({inSelectionMode:!0,wordNavigationType:1,id:"cursorWordLeftSelect",precondition:void 0,kbOpts:{kbExpr:O.and(S.textInputFocus,(e=O.and(td,fd))===null||e===void 0?void 0:e.negate()),primary:3087,mac:{primary:1551},weight:100}})}},Mk=class extends Jo{constructor(){super({inSelectionMode:!1,wordNavigationType:3,id:"cursorWordAccessibilityLeft",precondition:void 0})}_move(e,t,i,n){return super._move(ur(Hl.wordSeparators.defaultValue),t,i,n)}},Dk=class extends Jo{constructor(){super({inSelectionMode:!0,wordNavigationType:3,id:"cursorWordAccessibilityLeftSelect",precondition:void 0})}_move(e,t,i,n){return super._move(ur(Hl.wordSeparators.defaultValue),t,i,n)}},Rk=class extends Qo{constructor(){super({inSelectionMode:!1,wordNavigationType:0,id:"cursorWordStartRight",precondition:void 0})}},Ak=class extends Qo{constructor(){var e;super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordEndRight",precondition:void 0,kbOpts:{kbExpr:O.and(S.textInputFocus,(e=O.and(td,fd))===null||e===void 0?void 0:e.negate()),primary:2065,mac:{primary:529},weight:100}})}},Fk=class extends Qo{constructor(){super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordRight",precondition:void 0})}},Nk=class extends Qo{constructor(){super({inSelectionMode:!0,wordNavigationType:0,id:"cursorWordStartRightSelect",precondition:void 0})}},zk=class extends Qo{constructor(){var e;super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordEndRightSelect",precondition:void 0,kbOpts:{kbExpr:O.and(S.textInputFocus,(e=O.and(td,fd))===null||e===void 0?void 0:e.negate()),primary:3089,mac:{primary:1553},weight:100}})}},Ok=class extends Qo{constructor(){super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordRightSelect",precondition:void 0})}},Hk=class extends Qo{constructor(){super({inSelectionMode:!1,wordNavigationType:3,id:"cursorWordAccessibilityRight",precondition:void 0})}_move(e,t,i,n){return super._move(ur(Hl.wordSeparators.defaultValue),t,i,n)}},Wk=class extends Qo{constructor(){super({inSelectionMode:!0,wordNavigationType:3,id:"cursorWordAccessibilityRightSelect",precondition:void 0})}_move(e,t,i,n){return super._move(ur(Hl.wordSeparators.defaultValue),t,i,n)}},xl=class extends ct{constructor(e){super(e);this._whitespaceHeuristics=e.whitespaceHeuristics,this._wordNavigationType=e.wordNavigationType}runEditorCommand(e,t,i){let n=e.get(Dt);if(!t.hasModel())return;let o=ur(t.getOption(117)),r=t.getModel(),a=t.getSelections(),l=t.getOption(5),c=t.getOption(8),d=n.getLanguageConfiguration(r.getLanguageId()).getAutoClosingPairs(),h=t._getViewModel(),p=a.map(m=>{let f=this._delete({wordSeparators:o,model:r,selection:m,whitespaceHeuristics:this._whitespaceHeuristics,autoClosingDelete:t.getOption(6),autoClosingBrackets:l,autoClosingQuotes:c,autoClosingPairs:d,autoClosedCharacters:h.getCursorAutoClosedCharacters()},this._wordNavigationType);return new Eo(f,"")});t.pushUndoStop(),t.executeCommands(this.id,p),t.pushUndoStop()}},um=class extends xl{_delete(e,t){let i=Aa.deleteWordLeft(e,t);return i||new b(1,1,1,1)}},pm=class extends xl{_delete(e,t){let i=Aa.deleteWordRight(e,t);if(i)return i;let n=e.model.getLineCount(),o=e.model.getLineMaxColumn(n);return new b(n,o,n,o)}},Bk=class extends um{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:0,id:"deleteWordStartLeft",precondition:S.writable})}},Vk=class extends um{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:2,id:"deleteWordEndLeft",precondition:S.writable})}},Gk=class extends um{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:0,id:"deleteWordLeft",precondition:S.writable,kbOpts:{kbExpr:S.textInputFocus,primary:2049,mac:{primary:513},weight:100}})}},jk=class extends pm{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:0,id:"deleteWordStartRight",precondition:S.writable})}},Uk=class extends pm{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:2,id:"deleteWordEndRight",precondition:S.writable})}},$k=class extends pm{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:2,id:"deleteWordRight",precondition:S.writable,kbOpts:{kbExpr:S.textInputFocus,primary:2068,mac:{primary:532},weight:100}})}},Kk=class extends F{constructor(){super({id:"deleteInsideWord",precondition:S.writable,label:u("deleteInsideWord","Delete Word"),alias:"Delete Word"})}run(e,t,i){if(!t.hasModel())return;let n=ur(t.getOption(117)),o=t.getModel(),a=t.getSelections().map(l=>{let c=Aa.deleteInsideWord(n,o,l);return new Eo(c,"")});t.pushUndoStop(),t.executeCommands(this.id,a),t.pushUndoStop()}};$(new Tk);$(new Ek);$(new Ik);$(new kk);$(new Lk);$(new Pk);$(new Rk);$(new Ak);$(new Fk);$(new Nk);$(new zk);$(new Ok);$(new Mk);$(new Dk);$(new Hk);$(new Wk);$(new Bk);$(new Vk);$(new Gk);$(new jk);$(new Uk);$(new $k);I(Kk);ue();ee();He();wt();var qk=class extends xl{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:0,id:"deleteWordPartLeft",precondition:S.writable,kbOpts:{kbExpr:S.textInputFocus,primary:0,mac:{primary:769},weight:100}})}_delete(e,t){let i=hd.deleteWordPartLeft(e);return i||new b(1,1,1,1)}},Xk=class extends xl{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:2,id:"deleteWordPartRight",precondition:S.writable,kbOpts:{kbExpr:S.textInputFocus,primary:0,mac:{primary:788},weight:100}})}_delete(e,t){let i=hd.deleteWordPartRight(e);if(i)return i;let n=e.model.getLineCount(),o=e.model.getLineMaxColumn(n);return new b(n,o,n,o)}},Ab=class extends vl{_move(e,t,i,n){return hd.moveWordPartLeft(e,t,i)}},Yk=class extends Ab{constructor(){super({inSelectionMode:!1,wordNavigationType:0,id:"cursorWordPartLeft",precondition:void 0,kbOpts:{kbExpr:S.textInputFocus,primary:0,mac:{primary:783},weight:100}})}};Pe.registerCommandAlias("cursorWordPartStartLeft","cursorWordPartLeft");var Zk=class extends Ab{constructor(){super({inSelectionMode:!0,wordNavigationType:0,id:"cursorWordPartLeftSelect",precondition:void 0,kbOpts:{kbExpr:S.textInputFocus,primary:0,mac:{primary:1807},weight:100}})}};Pe.registerCommandAlias("cursorWordPartStartLeftSelect","cursorWordPartLeftSelect");var Fb=class extends vl{_move(e,t,i,n){return hd.moveWordPartRight(e,t,i)}},Jk=class extends Fb{constructor(){super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordPartRight",precondition:void 0,kbOpts:{kbExpr:S.textInputFocus,primary:0,mac:{primary:785},weight:100}})}},Qk=class extends Fb{constructor(){super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordPartRightSelect",precondition:void 0,kbOpts:{kbExpr:S.textInputFocus,primary:0,mac:{primary:1809},weight:100}})}};$(new qk);$(new Xk);$(new Yk);$(new Zk);$(new Jk);$(new Qk);Cr();var Gce=Zr(rL());Ae();G();ue();Pi();var fm=class extends z{constructor(e){super();this.editor=e,this.widget=null,ah&&(this._register(e.onDidChangeConfiguration(()=>this.update())),this.update())}update(){let e=!this.editor.getOption(81);!this.widget&&e?this.widget=new $c(this.editor):this.widget&&!e&&(this.widget.dispose(),this.widget=null)}dispose(){super.dispose(),this.widget&&(this.widget.dispose(),this.widget=null)}};fm.ID="editor.contrib.iPadShowKeyboard";var $c=class extends z{constructor(e){super();this.editor=e,this._domNode=document.createElement("textarea"),this._domNode.className="iPadShowKeyboard",this._register(Ke(this._domNode,"touchstart",t=>{this.editor.focus()})),this._register(Ke(this._domNode,"focus",t=>{this.editor.focus()})),this.editor.addOverlayWidget(this)}dispose(){this.editor.removeOverlayWidget(this),super.dispose()}getId(){return $c.ID}getDomNode(){return this._domNode}getPosition(){return{preference:1}}};$c.ID="editor.contrib.ShowKeyboardWidget";J(fm.ID,fm);var Uce=Zr(cL());Ca();Cr();G();Q();Ca();var JR=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},QR=function(s,e){return function(t,i){e(t,i,s)}},Xc=class ym{constructor(e){this.quickInputService=e,this.registry=ln.as(eo.Quickaccess)}provide(e){let t=new A;t.add(e.onDidAccept(()=>{let[o]=e.selectedItems;o&&this.quickInputService.quickAccess.show(o.prefix,{preserveValue:!0})})),t.add(e.onDidChangeValue(o=>{let r=this.registry.getQuickAccessProvider(o.substr(ym.PREFIX.length));r&&r.prefix&&r.prefix!==ym.PREFIX&&this.quickInputService.quickAccess.show(r.prefix,{preserveValue:!0})}));let{editorProviders:i,globalProviders:n}=this.getQuickAccessProviders();return e.items=i.length===0||n.length===0?[...i.length===0?n:i]:[{label:u("globalCommands","global commands"),type:"separator"},...n,{label:u("editorCommands","editor commands"),type:"separator"},...i],t}getQuickAccessProviders(){let e=[],t=[];for(let i of this.registry.getQuickAccessProviders().sort((n,o)=>n.prefix.localeCompare(o.prefix)))if(i.prefix!==ym.PREFIX)for(let n of i.helpEntries){let o=n.prefix||i.prefix,r=o||"\u2026";(n.needsEditor?t:e).push({prefix:o,label:r,ariaLabel:u("helpPickAriaLabel","{0}, {1}",r,n.description),description:n.description})}return{editorProviders:t,globalProviders:e}}};Xc.PREFIX="?";Xc=JR([QR(0,Wi)],Xc);ln.as(eo.Quickaccess).registerQuickAccessProvider({ctor:Xc,prefix:"",helpEntries:[{description:Wx.helpQuickAccessActionLabel,needsEditor:!0}]});G();gg();yS();G();qt();gg();ca();eu();Ne();var Yc=class{constructor(e){this.options=e,this.rangeHighlightDecorationId=void 0}provide(e,t){var i;let n=new A;e.canAcceptInBackground=!!((i=this.options)===null||i===void 0?void 0:i.canAcceptInBackground),e.matchOnLabel=e.matchOnDescription=e.matchOnDetail=e.sortByLabel=!1;let o=n.add(new et);return o.value=this.doProvide(e,t),n.add(this.onDidActiveTextEditorControlChange(()=>{o.value=void 0,o.value=this.doProvide(e,t)})),n}doProvide(e,t){let i=new A,n=this.activeTextEditorControl;if(n&&this.canProvideWithTextEditor(n)){let o={editor:n},r=Tu(n);if(r){let a=Mi(n.saveViewState());i.add(r.onDidChangeCursorPosition(()=>{a=Mi(n.saveViewState())})),o.restoreViewState=()=>{a&&n===this.activeTextEditorControl&&n.restoreViewState(a)},i.add(yh(t.onCancellationRequested)(()=>{var l;return(l=o.restoreViewState)===null||l===void 0?void 0:l.call(o)}))}i.add(We(()=>this.clearDecorations(n))),i.add(this.provideWithTextEditor(o,e,t))}else i.add(this.provideWithoutTextEditor(e,t));return i}canProvideWithTextEditor(e){return!0}gotoLocation({editor:e},t){e.setSelection(t.range),e.revealRangeInCenter(t.range,0),t.preserveFocus||e.focus()}getModel(e){var t;return bC(e)?(t=e.getModel())===null||t===void 0?void 0:t.modified:e.getModel()}addDecorations(e,t){e.changeDecorations(i=>{let n=[];this.rangeHighlightDecorationId&&(n.push(this.rangeHighlightDecorationId.overviewRulerDecorationId),n.push(this.rangeHighlightDecorationId.rangeHighlightId),this.rangeHighlightDecorationId=void 0);let o=[{range:t,options:{description:"quick-access-range-highlight",className:"rangeHighlight",isWholeLine:!0}},{range:t,options:{description:"quick-access-range-highlight-overview",overviewRuler:{color:nt(bx),position:Di.Full}}}],[r,a]=i.deltaDecorations(n,o);this.rangeHighlightDecorationId={rangeHighlightId:r,overviewRulerDecorationId:a}})}clearDecorations(e){let t=this.rangeHighlightDecorationId;t&&(e.changeDecorations(i=>{i.deltaDecorations([t.overviewRulerDecorationId,t.rangeHighlightId],[])}),this.rangeHighlightDecorationId=void 0)}};Q();var wl=class extends Yc{constructor(){super({canAcceptInBackground:!0})}provideWithoutTextEditor(e){let t=u("cannotRunGotoLine","Open a text editor first to go to a line.");return e.items=[{label:t}],e.ariaLabel=t,z.None}provideWithTextEditor(e,t,i){let n=e.editor,o=new A;o.add(t.onDidAccept(l=>{let[c]=t.selectedItems;if(c){if(!this.isValidLineNumber(n,c.lineNumber))return;this.gotoLocation(e,{range:this.toRange(c.lineNumber,c.column),keyMods:t.keyMods,preserveFocus:l.inBackground}),l.inBackground||t.hide()}}));let r=()=>{let l=this.parsePosition(n,t.value.trim().substr(wl.PREFIX.length)),c=this.getPickLabel(n,l.lineNumber,l.column);if(t.items=[{lineNumber:l.lineNumber,column:l.column,label:c}],t.ariaLabel=c,!this.isValidLineNumber(n,l.lineNumber)){this.clearDecorations(n);return}let d=this.toRange(l.lineNumber,l.column);n.revealRangeInCenter(d,0),this.addDecorations(n,d)};r(),o.add(t.onDidChangeValue(()=>r()));let a=Tu(n);return a&&a.getOptions().get(60).renderType===2&&(a.updateOptions({lineNumbers:"on"}),o.add(We(()=>a.updateOptions({lineNumbers:"relative"})))),o}toRange(e=1,t=1){return{startLineNumber:e,startColumn:t,endLineNumber:e,endColumn:t}}parsePosition(e,t){let i=t.split(/,|:|#/).map(o=>parseInt(o,10)).filter(o=>!isNaN(o)),n=this.lineCount(e)+1;return{lineNumber:i[0]>0?i[0]:n+i[0],column:i[1]}}getPickLabel(e,t,i){if(this.isValidLineNumber(e,t))return this.isValidColumn(e,t,i)?u("gotoLineColumnLabel","Go to line {0} and character {1}.",t,i):u("gotoLineLabel","Go to line {0}.",t);let n=e.getPosition()||{lineNumber:1,column:1},o=this.lineCount(e);return o>1?u("gotoLineLabelEmptyWithLimit","Current Line: {0}, Character: {1}. Type a line number between 1 and {2} to navigate to.",n.lineNumber,n.column,o):u("gotoLineLabelEmpty","Current Line: {0}, Character: {1}. Type a line number to navigate to.",n.lineNumber,n.column)}isValidLineNumber(e,t){return!t||typeof t!="number"?!1:t>0&&t<=this.lineCount(e)}isValidColumn(e,t,i){if(!i||typeof i!="number")return!1;let n=this.getModel(e);if(!n)return!1;let o={lineNumber:t,column:i};return n.validatePosition(o).equals(o)}lineCount(e){var t,i;return(i=(t=this.getModel(e))===null||t===void 0?void 0:t.getLineCount())!==null&&i!==void 0?i:0}};wl.PREFIX=":";Ca();Ci();qt();Cr();De();ue();He();var eA=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},tA=function(s,e){return function(t,i){e(t,i,s)}},Zc=class extends wl{constructor(e){super();this.editorService=e,this.onDidActiveTextEditorControlChange=ht.None}get activeTextEditorControl(){return Mi(this.editorService.getFocusedCodeEditor())}};Zc=eA([tA(0,Ve)],Zc);ln.as(eo.Quickaccess).registerQuickAccessProvider({ctor:Zc,prefix:Zc.PREFIX,helpEntries:[{description:ag.gotoLineActionLabel,needsEditor:!0}]});var hL=class extends F{constructor(){super({id:"editor.action.gotoLine",label:ag.gotoLineActionLabel,alias:"Go to Line/Column...",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:2085,mac:{primary:293},weight:100}})}run(e){e.get(Wi).quickAccess.show(Zc.PREFIX)}};I(hL);ke();ut();xi();vS();Pi();Ye();var mL=[void 0,[]];function Sm(s,e,t=0,i=0){let n=e;return n.values&&n.values.length>1?iA(s,n.values,t,i):gL(s,e,t,i)}function iA(s,e,t,i){let n=0,o=[];for(let r of e){let[a,l]=gL(s,r,t,i);if(typeof a!="number")return mL;n+=a,o.push(...l)}return[n,nA(o)]}function gL(s,e,t,i){let n=gu(e.original,e.originalLowercase,t,s,s.toLowerCase(),i,!0);return n?[n[0],ms(n)]:mL}var pde=Object.freeze({score:0});function nA(s){let e=s.sort((n,o)=>n.start-o.start),t=[],i;for(let n of e)!i||!oA(i,n)?(i=n,t.push(n)):(i.start=Math.min(i.start,n.start),i.end=Math.max(i.end,n.end));return t}function oA(s,e){return!(s.end<e.start||e.end<s.start)}function uL(s){return s.startsWith('"')&&s.endsWith('"')}var fL=" ";function bm(s){typeof s!="string"&&(s="");let e=s.toLowerCase(),{pathNormalized:t,normalized:i,normalizedLowercase:n}=pL(s),o=t.indexOf(vh)>=0,r=uL(s),a,l=s.split(fL);if(l.length>1)for(let c of l){let d=uL(c),{pathNormalized:h,normalized:p,normalizedLowercase:m}=pL(c);p&&(a||(a=[]),a.push({original:c,originalLowercase:c.toLowerCase(),pathNormalized:h,normalized:p,normalizedLowercase:m,expectContiguousMatch:d}))}return{original:s,originalLowercase:e,pathNormalized:t,normalized:i,normalizedLowercase:n,values:a,containsPathSeparator:o,expectContiguousMatch:r}}function pL(s){let e;fo?e=s.replace(/\//g,vh):e=s.replace(/\\/g,vh);let t=IS(e).replace(/\s|"/g,"");return{pathNormalized:e,normalized:t,normalizedLowercase:t.toLowerCase()}}function Nb(s){return Array.isArray(s)?bm(s.map(e=>e.original).join(fL)):bm(s.original)}G();Ye();ee();Re();nm();Q();var rA=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},sA=function(s,e){return function(t,i){e(t,i,s)}},Jc=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},tn=class Hb extends Yc{constructor(e,t=Object.create(null)){super(t);this._outlineModelService=e,this.options=t,this.options.canAcceptInBackground=!0}provideWithoutTextEditor(e){return this.provideLabelPick(e,u("cannotRunGotoSymbolWithoutEditor","To go to a symbol, first open a text editor with symbol information.")),z.None}provideWithTextEditor(e,t,i){let n=e.editor,o=this.getModel(n);return o?In.has(o)?this.doProvideWithEditorSymbols(e,o,t,i):this.doProvideWithoutEditorSymbols(e,o,t,i):z.None}doProvideWithoutEditorSymbols(e,t,i,n){let o=new A;return this.provideLabelPick(i,u("cannotRunGotoSymbolWithoutSymbolProvider","The active text editor does not provide symbol information.")),Jc(this,void 0,void 0,function*(){!(yield this.waitForLanguageSymbolRegistry(t,o))||n.isCancellationRequested||o.add(this.doProvideWithEditorSymbols(e,t,i,n))}),o}provideLabelPick(e,t){e.items=[{label:t,index:0,kind:14}],e.ariaLabel=t}waitForLanguageSymbolRegistry(e,t){return Jc(this,void 0,void 0,function*(){if(In.has(e))return!0;let i=new CS,n=t.add(In.onDidChange(()=>{In.has(e)&&(n.dispose(),i.complete(!0))}));return t.add(We(()=>i.complete(!1))),i.p})}doProvideWithEditorSymbols(e,t,i,n){let o=e.editor,r=new A;r.add(i.onDidAccept(h=>{let[p]=i.selectedItems;p&&p.range&&(this.gotoLocation(e,{range:p.range.selection,keyMods:i.keyMods,preserveFocus:h.inBackground}),h.inBackground||i.hide())})),r.add(i.onDidTriggerItemButton(({item:h})=>{h&&h.range&&(this.gotoLocation(e,{range:h.range.selection,keyMods:i.keyMods,forceSideBySide:!0}),i.hide())}));let a=this.getDocumentSymbols(t,n),l,c=()=>Jc(this,void 0,void 0,function*(){l==null||l.dispose(!0),i.busy=!1,l=new Ft(n),i.busy=!0;try{let h=bm(i.value.substr(Hb.PREFIX.length).trim()),p=yield this.doGetSymbolPicks(a,h,void 0,l.token);if(n.isCancellationRequested)return;p.length>0?i.items=p:h.original.length>0?this.provideLabelPick(i,u("noMatchingSymbolResults","No matching editor symbols")):this.provideLabelPick(i,u("noSymbolResults","No editor symbols"))}finally{n.isCancellationRequested||(i.busy=!1)}});r.add(i.onDidChangeValue(()=>c())),c();let d=!0;return r.add(i.onDidChangeActive(()=>{let[h]=i.activeItems;if(h&&h.range){if(d){d=!1;return}o.revealRangeInCenter(h.range.selection,0),this.addDecorations(o,h.range.decoration)}})),r}doGetSymbolPicks(e,t,i,n){return Jc(this,void 0,void 0,function*(){let o=yield e;if(n.isCancellationRequested)return[];let r=t.original.indexOf(Hb.SCOPE_PREFIX)===0,a=r?1:0,l,c;t.values&&t.values.length>1?(l=Nb(t.values[0]),c=Nb(t.values.slice(1))):l=t;let d=[];for(let m=0;m<o.length;m++){let f=o[m],v=ES(f.name),_=`$(${WS.toIcon(f.kind).id}) ${v}`,w=_.length-v.length,R=f.containerName;(i==null?void 0:i.extraContainerLabel)&&(R?R=`${i.extraContainerLabel} \u2022 ${R}`:R=i.extraContainerLabel);let P,B,V,ce;if(t.original.length>a){let kt=!1;if(l!==t&&([P,B]=Sm(_,Object.assign(Object.assign({},t),{values:void 0}),a,w),typeof P=="number"&&(kt=!0)),typeof P!="number"&&([P,B]=Sm(_,l,a,w),typeof P!="number"))continue;if(!kt&&c){if(R&&c.original.length>0&&([V,ce]=Sm(R,c)),typeof V!="number")continue;typeof P=="number"&&(P+=V)}}let Te=f.tags&&f.tags.indexOf(1)>=0;d.push({index:m,kind:f.kind,score:P,label:_,ariaLabel:v,description:R,highlights:Te?void 0:{label:B,description:ce},range:{selection:b.collapseToStart(f.selectionRange),decoration:f.range},strikethrough:Te,buttons:(()=>{var kt,Wt;let Bt=((kt=this.options)===null||kt===void 0?void 0:kt.openSideBySideDirection)?(Wt=this.options)===null||Wt===void 0?void 0:Wt.openSideBySideDirection():void 0;if(!!Bt)return[{iconClass:Bt==="right"?K.splitHorizontal.classNames:K.splitVertical.classNames,tooltip:Bt==="right"?u("openToSide","Open to the Side"):u("openToBottom","Open to the Bottom")}]})()})}let h=d.sort((m,f)=>r?this.compareByKindAndScore(m,f):this.compareByScore(m,f)),p=[];if(r){let _=function(){f&&typeof m=="number"&&v>0&&(f.label=Ui(Ob[m]||zb,v))},m,f,v=0;for(let w of h)m!==w.kind?(_(),m=w.kind,v=1,f={type:"separator"},p.push(f)):v++,p.push(w);_()}else h.length>0&&(p=[{label:u("symbols","symbols ({0})",d.length),type:"separator"},...h]);return p})}compareByScore(e,t){if(typeof e.score!="number"&&typeof t.score=="number")return 1;if(typeof e.score=="number"&&typeof t.score!="number")return-1;if(typeof e.score=="number"&&typeof t.score=="number"){if(e.score>t.score)return-1;if(e.score<t.score)return 1}return e.index<t.index?-1:e.index>t.index?1:0}compareByKindAndScore(e,t){let i=Ob[e.kind]||zb,n=Ob[t.kind]||zb,o=i.localeCompare(n);return o===0?this.compareByScore(e,t):o}getDocumentSymbols(e,t){return Jc(this,void 0,void 0,function*(){let i=yield this._outlineModelService.getOrCreate(e,t);return t.isCancellationRequested?[]:i.asListOfDocumentSymbols()})}};tn.PREFIX="@";tn.SCOPE_PREFIX=":";tn.PREFIX_BY_CATEGORY=`${tn.PREFIX}${tn.SCOPE_PREFIX}`;tn=rA([sA(0,js)],tn);var zb=u("property","properties ({0})"),Ob={[5]:u("method","methods ({0})"),[11]:u("function","functions ({0})"),[8]:u("_constructor","constructors ({0})"),[12]:u("variable","variables ({0})"),[4]:u("class","classes ({0})"),[22]:u("struct","structs ({0})"),[23]:u("event","events ({0})"),[24]:u("operator","operators ({0})"),[10]:u("interface","interfaces ({0})"),[2]:u("namespace","namespaces ({0})"),[3]:u("package","packages ({0})"),[25]:u("typeParameter","type parameters ({0})"),[1]:u("modules","modules ({0})"),[6]:u("property","properties ({0})"),[9]:u("enum","enumerations ({0})"),[21]:u("enumMember","enumeration members ({0})"),[14]:u("string","strings ({0})"),[0]:u("file","files ({0})"),[17]:u("array","arrays ({0})"),[15]:u("number","numbers ({0})"),[16]:u("boolean","booleans ({0})"),[18]:u("object","objects ({0})"),[19]:u("key","keys ({0})"),[7]:u("field","fields ({0})"),[13]:u("constant","constants ({0})")};Ca();Ci();qt();Cr();De();ue();He();nm();var aA=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},yL=function(s,e){return function(t,i){e(t,i,s)}},Wb=class extends tn{constructor(e,t){super(t);this.editorService=e,this.onDidActiveTextEditorControlChange=ht.None}get activeTextEditorControl(){return Mi(this.editorService.getFocusedCodeEditor())}};Wb=aA([yL(0,Ve),yL(1,js)],Wb);ln.as(eo.Quickaccess).registerQuickAccessProvider({ctor:Wb,prefix:tn.PREFIX,helpEntries:[{description:mu.quickOutlineActionLabel,prefix:tn.PREFIX,needsEditor:!0},{description:mu.quickOutlineByCategoryActionLabel,prefix:tn.PREFIX_BY_CATEGORY,needsEditor:!0}]});var bL=class extends F{constructor(){super({id:"editor.action.quickOutline",label:mu.quickOutlineActionLabel,alias:"Go to Symbol...",precondition:S.hasDocumentSymbolProvider,kbOpts:{kbExpr:S.focus,primary:3117,weight:100},contextMenuOpts:{group:"navigation",order:3}})}run(e){e.get(Wi).quickAccess.show(tn.PREFIX)}};I(bL);Ca();Cr();Ci();vt();qt();Q();function Bb(s,e){return e&&(s.stack||s.stacktrace)?u("stackTrace.format","{0}: {1}",vL(s),SL(s.stack)||SL(s.stacktrace)):vL(s)}function SL(s){return Array.isArray(s)?s.join(`
`):s}function vL(s){return typeof s.code=="string"&&typeof s.errno=="number"&&typeof s.syscall=="string"?u("nodeExceptionMessage","A system error occurred ({0})",s.message):s.message||u("error.defaultMessage","An unknown error occurred. Please consult the log for more details.")}function Vb(s=null,e=!1){if(!s)return u("error.defaultMessage","An unknown error occurred. Please consult the log for more details.");if(Array.isArray(s)){let t=Vn(s),i=Vb(t[0],e);return t.length>1?u("error.moreErrors","{0} ({1} errors in total)",i,t.length):i}if(uh(s))return s;if(s.detail){let t=s.detail;if(t.error)return Bb(t.error,e);if(t.exception)return Bb(t.exception,e)}return s.stack?Bb(s,e):s.message?s.message:u("error.defaultMessage","An unknown error occurred. Please consult the log for more details.")}Le();G();ga();qt();Q();wt();kn();Be();Ki();ke();ut();G();var vm=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Tl;(function(s){s[s.NO_ACTION=0]="NO_ACTION",s[s.CLOSE_PICKER=1]="CLOSE_PICKER",s[s.REFRESH_PICKER=2]="REFRESH_PICKER",s[s.REMOVE_ITEM=3]="REMOVE_ITEM"})(Tl||(Tl={}));function Gb(s){let e=s;return Array.isArray(e.items)}function lA(s){let e=s;return!!e.picks&&e.additionalPicks instanceof Promise}var El=class extends z{constructor(e,t){super();this.prefix=e,this.options=t}provide(e,t){var i;let n=new A;e.canAcceptInBackground=!!((i=this.options)===null||i===void 0?void 0:i.canAcceptInBackground),e.matchOnLabel=e.matchOnDescription=e.matchOnDetail=e.sortByLabel=!1;let o,r=n.add(new et),a=()=>vm(this,void 0,void 0,function*(){let l=r.value=new A;o==null||o.dispose(!0),e.busy=!1,o=new Ft(t);let c=o.token,d=e.value.substr(this.prefix.length).trim(),h=this._getPicks(d,l,c),p=(m,f)=>{var v;let _,w;if(Gb(m)?(_=m.items,w=m.active):_=m,_.length===0){if(f)return!1;d.length>0&&((v=this.options)===null||v===void 0?void 0:v.noResultsPick)&&(_=[this.options.noResultsPick])}return e.items=_,w&&(e.activeItems=[w]),!0};if(h!==null)if(lA(h)){let m=!1,f=!1;yield Promise.all([(()=>vm(this,void 0,void 0,function*(){yield ua(El.FAST_PICKS_RACE_DELAY),!c.isCancellationRequested&&(f||(m=p(h.picks,!0)))}))(),(()=>vm(this,void 0,void 0,function*(){e.busy=!0;try{let v=yield h.additionalPicks;if(c.isCancellationRequested)return;let _,w;Gb(h.picks)?(_=h.picks.items,w=h.picks.active):_=h.picks;let R,P;if(Gb(v)?(R=v.items,P=v.active):R=v,R.length>0||!m){let B;if(!w&&!P){let V=e.activeItems[0];V&&_.indexOf(V)!==-1&&(B=V)}p({items:[..._,...R],active:w||P||B})}}finally{c.isCancellationRequested||(e.busy=!1),f=!0}}))()])}else if(!(h instanceof Promise))p(h);else{e.busy=!0;try{let m=yield h;if(c.isCancellationRequested)return;p(m)}finally{c.isCancellationRequested||(e.busy=!1)}}});return n.add(e.onDidChangeValue(()=>a())),a(),n.add(e.onDidAccept(l=>{let[c]=e.selectedItems;typeof(c==null?void 0:c.accept)=="function"&&(l.inBackground||e.hide(),c.accept(e.keyMods,l))})),n.add(e.onDidTriggerItemButton(({button:l,item:c})=>vm(this,void 0,void 0,function*(){var d,h;if(typeof c.trigger=="function"){let p=(h=(d=c.buttons)===null||d===void 0?void 0:d.indexOf(l))!==null&&h!==void 0?h:-1;if(p>=0){let m=c.trigger(p,e.keyMods),f=typeof m=="number"?m:yield m;if(t.isCancellationRequested)return;switch(f){case Tl.NO_ACTION:break;case Tl.CLOSE_PICKER:e.hide();break;case Tl.REFRESH_PICKER:a();break;case Tl.REMOVE_ITEM:{let v=e.items.indexOf(c);if(v!==-1){let _=e.items.slice(),w=_.splice(v,1),R=e.activeItems.filter(B=>B!==w[0]),P=e.keepScrollPosition;e.keepScrollPosition=!0,e.items=_,R&&(e.activeItems=R),e.keepScrollPosition=P}break}}}}}))),n}};El.FAST_PICKS_RACE_DELAY=200;ed();var CL=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},ia=function(s,e){return function(t,i){e(t,i,s)}},xL=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Il=class xm extends El{constructor(e,t,i,n,o,r){super(xm.PREFIX,e);this.instantiationService=t,this.keybindingService=i,this.commandService=n,this.telemetryService=o,this.dialogService=r,this.commandsHistory=this._register(this.instantiationService.createInstance(na)),this.options=e}_getPicks(e,t,i){return xL(this,void 0,void 0,function*(){let n=yield this.getCommandPicks(t,i);if(i.isCancellationRequested)return[];let o=[];for(let c of n){let d=Mi(xm.WORD_FILTER(e,c.label)),h=c.commandAlias?Mi(xm.WORD_FILTER(e,c.commandAlias)):void 0;d||h?(c.highlights={label:d,detail:this.options.showAlias?h:void 0},o.push(c)):e===c.commandId&&o.push(c)}let r=new Map;for(let c of o){let d=r.get(c.label);d?(c.description=c.commandId,d.description=d.commandId):r.set(c.label,c)}o.sort((c,d)=>{let h=this.commandsHistory.peek(c.commandId),p=this.commandsHistory.peek(d.commandId);return h&&p?h>p?-1:1:h?-1:p?1:c.label.localeCompare(d.label)});let a=[],l=!1;for(let c=0;c<o.length;c++){let d=o[c],h=this.keybindingService.lookupKeybinding(d.commandId),p=h?u("commandPickAriaLabelWithKeybinding","{0}, {1}",d.label,h.getAriaLabel()):d.label;c===0&&this.commandsHistory.peek(d.commandId)&&(a.push({type:"separator",label:u("recentlyUsed","recently used")}),l=!0),c!==0&&l&&!this.commandsHistory.peek(d.commandId)&&(a.push({type:"separator",label:u("morecCommands","other commands")}),l=!1),a.push(Object.assign(Object.assign({},d),{ariaLabel:p,detail:this.options.showAlias&&d.commandAlias!==d.label?d.commandAlias:void 0,keybinding:h,accept:()=>xL(this,void 0,void 0,function*(){this.commandsHistory.push(d.commandId),this.telemetryService.publicLog2("workbenchActionExecuted",{id:d.commandId,from:"quick open"});try{yield this.commandService.executeCommand(d.commandId)}catch(m){jn(m)||this.dialogService.show(Io.Error,u("canNotRun","Command '{0}' resulted in an error ({1})",d.label,Vb(m)))}})}))}return a})}};Il.PREFIX=">";Il.WORD_FILTER=Gx(jx,$x,Ux);Il=CL([ia(1,le),ia(2,rt),ia(3,dt),ia(4,Yn),ia(5,Oa)],Il);var na=class It extends z{constructor(e,t){super();this.storageService=e,this.configurationService=t,this.configuredCommandsHistoryLength=0,this.updateConfiguration(),this.load(),this.registerListeners()}registerListeners(){this._register(this.configurationService.onDidChangeConfiguration(()=>this.updateConfiguration()))}updateConfiguration(){this.configuredCommandsHistoryLength=It.getConfiguredCommandHistoryLength(this.configurationService),It.cache&&It.cache.limit!==this.configuredCommandsHistoryLength&&(It.cache.limit=this.configuredCommandsHistoryLength,It.saveState(this.storageService))}load(){let e=this.storageService.get(It.PREF_KEY_CACHE,0),t;if(e)try{t=JSON.parse(e)}catch(n){}let i=It.cache=new Un(this.configuredCommandsHistoryLength,1);if(t){let n;t.usesLRU?n=t.entries:n=t.entries.sort((o,r)=>o.value-r.value),n.forEach(o=>i.set(o.key,o.value))}It.counter=this.storageService.getNumber(It.PREF_KEY_COUNTER,0,It.counter)}push(e){!It.cache||(It.cache.set(e,It.counter++),It.saveState(this.storageService))}peek(e){var t;return(t=It.cache)===null||t===void 0?void 0:t.peek(e)}static saveState(e){if(!It.cache)return;let t={usesLRU:!0,entries:[]};It.cache.forEach((i,n)=>t.entries.push({key:n,value:i})),e.store(It.PREF_KEY_CACHE,JSON.stringify(t),0,0),e.store(It.PREF_KEY_COUNTER,It.counter,0,0)}static getConfiguredCommandHistoryLength(e){var t,i;let o=(i=(t=e.getValue().workbench)===null||t===void 0?void 0:t.commandPalette)===null||i===void 0?void 0:i.history;return typeof o=="number"?o:It.DEFAULT_COMMANDS_HISTORY_LENGTH}};na.DEFAULT_COMMANDS_HISTORY_LENGTH=50;na.PREF_KEY_CACHE="commandPalette.mru.cache";na.PREF_KEY_COUNTER="commandPalette.mru.counter";na.counter=1;na=CL([ia(0,li),ia(1,it)],na);var jb=class extends Il{constructor(e,t,i,n,o,r){super(e,t,i,n,o,r)}getCodeEditorCommandPicks(){let e=this.activeTextEditorControl;if(!e)return[];let t=[];for(let i of e.getSupportedActions())t.push({commandId:i.id,commandAlias:i.alias,label:Yx(i.label)||i.id});return t}};qt();Be();Ki();wt();ed();ue();He();var dA=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},kl=function(s,e){return function(t,i){e(t,i,s)}},cA=function(s,e,t,i){function n(o){return o instanceof t?o:new t(function(r){r(o)})}return new(t||(t=Promise))(function(o,r){function a(d){try{c(i.next(d))}catch(h){r(h)}}function l(d){try{c(i.throw(d))}catch(h){r(h)}}function c(d){d.done?o(d.value):n(d.value).then(a,l)}c((i=i.apply(s,e||[])).next())})},Qc=class extends jb{constructor(e,t,i,n,o,r){super({showAlias:!1},e,i,n,o,r);this.codeEditorService=t}get activeTextEditorControl(){return Mi(this.codeEditorService.getFocusedCodeEditor())}getCommandPicks(){return cA(this,void 0,void 0,function*(){return this.getCodeEditorCommandPicks()})}};Qc=dA([kl(0,le),kl(1,Ve),kl(2,rt),kl(3,dt),kl(4,Yn),kl(5,Oa)],Qc);ln.as(eo.Quickaccess).registerQuickAccessProvider({ctor:Qc,prefix:Qc.PREFIX,helpEntries:[{description:lg.quickCommandHelp,needsEditor:!0}]});var _L=class extends F{constructor(){super({id:"editor.action.quickCommand",label:lg.quickCommandActionLabel,alias:"Command Palette",precondition:void 0,kbOpts:{kbExpr:S.focus,primary:59,weight:100},contextMenuOpts:{group:"z_commands",order:1}})}run(e){e.get(Wi).quickAccess.show(Qc.PREFIX)}};I(_L);ue();Ci();kn();Ee();Be();var hA=function(s,e,t,i){var n=arguments.length,o=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,r;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,e,t,i);else for(var a=s.length-1;a>=0;a--)(r=s[a])&&(o=(n<3?r(o):n>3?r(e,t,o):r(e,t))||o);return n>3&&o&&Object.defineProperty(e,t,o),o},Ll=function(s,e){return function(t,i){e(t,i,s)}},Ub=class extends io{constructor(e,t,i,n,o,r,a){super(!0,e,t,i,n,o,r,a)}};Ub=hA([Ll(1,ie),Ll(2,Ve),Ll(3,Ze),Ll(4,le),Ll(5,li),Ll(6,it)],Ub);J(io.ID,Ub);ue();fC();Cr();var wL=class extends F{constructor(){super({id:"editor.action.toggleHighContrast",label:Bx.toggleHighContrast,alias:"Toggle High Contrast Theme",precondition:void 0});this._originalThemeName=null}run(e,t){let i=e.get(Cu);this._originalThemeName?(i.setTheme(this._originalThemeName),this._originalThemeName=null):(this._originalThemeName=i.getColorTheme().themeName,i.setTheme("hc-black"))}};I(wL);var TL="data:text/plain;charset=utf-8;base64,";var EL="data:text/plain;charset=utf-8;base64,Ly8gRXhwb3NlIGBKU1hgIG5hbWVzcGFjZSBpbiBgZ2xvYmFsYCBuYW1lc3BhY2UKaW1wb3J0ICcuLyc7Cg==";var IL="data:text/plain;charset=utf-8;base64,Ly8gRXhwb3NlIGBKU1hgIG5hbWVzcGFjZSBpbiBgZ2xvYmFsYCBuYW1lc3BhY2UKaW1wb3J0ICcuLyc7Cg==";var kL="data:text/plain;charset=utf-8;base64,LyoqCiAqIFRoZXNlIGFyZSB0eXBlcyBmb3IgdGhpbmdzIHRoYXQgYXJlIHByZXNlbnQgaW4gdGhlIGBleHBlcmltZW50YWxgIGJ1aWxkcyBvZiBSZWFjdCBidXQgbm90IHlldAogKiBvbiBhIHN0YWJsZSBidWlsZC4KICoKICogT25jZSB0aGV5IGFyZSBwcm9tb3RlZCB0byBzdGFibGUgdGhleSBjYW4ganVzdCBiZSBtb3ZlZCB0byB0aGUgbWFpbiBpbmRleCBmaWxlLgogKgogKiBUbyBsb2FkIHRoZSB0eXBlcyBkZWNsYXJlZCBoZXJlIGluIGFuIGFjdHVhbCBwcm9qZWN0LCB0aGVyZSBhcmUgdGhyZWUgd2F5cy4gVGhlIGVhc2llc3Qgb25lLAogKiBpZiB5b3VyIGB0c2NvbmZpZy5qc29uYCBhbHJlYWR5IGhhcyBhIGAidHlwZXMiYCBhcnJheSBpbiB0aGUgYCJjb21waWxlck9wdGlvbnMiYCBzZWN0aW9uLAogKiBpcyB0byBhZGQgYCJyZWFjdC9leHBlcmltZW50YWwiYCB0byB0aGUgYCJ0eXBlcyJgIGFycmF5LgogKgogKiBBbHRlcm5hdGl2ZWx5LCBhIHNwZWNpZmljIGltcG9ydCBzeW50YXggY2FuIHRvIGJlIHVzZWQgZnJvbSBhIHR5cGVzY3JpcHQgZmlsZS4KICogVGhpcyBtb2R1bGUgZG9lcyBub3QgZXhpc3QgaW4gcmVhbGl0eSwgd2hpY2ggaXMgd2h5IHRoZSB7fSBpcyBpbXBvcnRhbnQ6CiAqCiAqIGBgYHRzCiAqIGltcG9ydCB7fSBmcm9tICdyZWFjdC9leHBlcmltZW50YWwnCiAqIGBgYAogKgogKiBJdCBpcyBhbHNvIHBvc3NpYmxlIHRvIGluY2x1ZGUgaXQgdGhyb3VnaCBhIHRyaXBsZS1zbGFzaCByZWZlcmVuY2U6CiAqCiAqIGBgYHRzCiAqIC8vLyA8cmVmZXJlbmNlIHR5cGVzPSJyZWFjdC9leHBlcmltZW50YWwiIC8+CiAqIGBgYAogKgogKiBFaXRoZXIgdGhlIGltcG9ydCBvciB0aGUgcmVmZXJlbmNlIG9ubHkgbmVlZHMgdG8gYXBwZWFyIG9uY2UsIGFueXdoZXJlIGluIHRoZSBwcm9qZWN0LgogKi8KCi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvYmxvYi9tYXN0ZXIvcGFja2FnZXMvcmVhY3Qvc3JjL1JlYWN0LmpzIHRvIHNlZSBob3cgdGhlIGV4cG9ydHMgYXJlIGRlY2xhcmVkLAovLyBhbmQgaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2Jsb2IvbWFzdGVyL3BhY2thZ2VzL3NoYXJlZC9SZWFjdEZlYXR1cmVGbGFncy5qcyB0byB2ZXJpZnkgd2hpY2ggQVBJcyBhcmUKLy8gZmxhZ2dlZCBleHBlcmltZW50YWwgb3Igbm90LiBFeHBlcmltZW50YWwgQVBJcyB3aWxsIGJlIHRhZ2dlZCB3aXRoIGBfX0VYUEVSSU1FTlRBTF9fYC4KLy8KLy8gRm9yIHRoZSBpbnB1dHMgb2YgdHlwZXMgZXhwb3J0ZWQgYXMgc2ltcGx5IGEgZmliZXIgdGFnLCB0aGUgYGJlZ2luV29ya2AgZnVuY3Rpb24gb2YgUmVhY3RGaWJlckJlZ2luV29yay5qcwovLyBpcyBhIGdvb2QgcGxhY2UgdG8gc3RhcnQgbG9va2luZyBmb3IgZGV0YWlsczsgaXQgZ2VuZXJhbGx5IGNhbGxzIHByb3AgdmFsaWRhdGlvbiBmdW5jdGlvbnMgb3IgZGVsZWdhdGVzCi8vIGFsbCB0YXNrcyBkb25lIGFzIHBhcnQgb2YgdGhlIHJlbmRlciBwaGFzZSAodGhlIGNvbmN1cnJlbnQgcGFydCBvZiB0aGUgUmVhY3QgdXBkYXRlIGN5Y2xlKS4KLy8KLy8gU3VzcGVuc2UtcmVsYXRlZCBoYW5kbGluZyBjYW4gYmUgZm91bmQgaW4gUmVhY3RGaWJlclRocm93LmpzLgoKaW1wb3J0IFJlYWN0ID0gcmVxdWlyZSgnLi9uZXh0Jyk7CgpleHBvcnQge307CgpkZWNsYXJlIG1vZHVsZSAnLicgewogICAgZXhwb3J0IHR5cGUgU3VzcGVuc2VMaXN0UmV2ZWFsT3JkZXIgPSAnZm9yd2FyZHMnIHwgJ2JhY2t3YXJkcycgfCAndG9nZXRoZXInOwogICAgZXhwb3J0IHR5cGUgU3VzcGVuc2VMaXN0VGFpbE1vZGUgPSAnY29sbGFwc2VkJyB8ICdoaWRkZW4nOwoKICAgIGV4cG9ydCBpbnRlcmZhY2UgU3VzcGVuc2VMaXN0Q29tbW9uUHJvcHMgewogICAgICAgIC8qKgogICAgICAgICAqIE5vdGUgdGhhdCBTdXNwZW5zZUxpc3QgcmVxdWlyZSBtb3JlIHRoYW4gb25lIGNoaWxkOwogICAgICAgICAqIGl0IGlzIGEgcnVudGltZSB3YXJuaW5nIHRvIHByb3ZpZGUgb25seSBhIHNpbmdsZSBjaGlsZC4KICAgICAgICAgKgogICAgICAgICAqIEl0IGRvZXMsIGhvd2V2ZXIsIGFsbG93IHRob3NlIGNoaWxkcmVuIHRvIGJlIHdyYXBwZWQgaW5zaWRlIGEgc2luZ2xlCiAgICAgICAgICogbGV2ZWwgb2YgYDxSZWFjdC5GcmFnbWVudD5gLgogICAgICAgICAqLwogICAgICAgIGNoaWxkcmVuOiBSZWFjdEVsZW1lbnQgfCBJdGVyYWJsZTxSZWFjdEVsZW1lbnQ+OwogICAgfQoKICAgIGludGVyZmFjZSBEaXJlY3Rpb25hbFN1c3BlbnNlTGlzdFByb3BzIGV4dGVuZHMgU3VzcGVuc2VMaXN0Q29tbW9uUHJvcHMgewogICAgICAgIC8qKgogICAgICAgICAqIERlZmluZXMgdGhlIG9yZGVyIGluIHdoaWNoIHRoZSBgU3VzcGVuc2VMaXN0YCBjaGlsZHJlbiBzaG91bGQgYmUgcmV2ZWFsZWQuCiAgICAgICAgICovCiAgICAgICAgcmV2ZWFsT3JkZXI6ICdmb3J3YXJkcycgfCAnYmFja3dhcmRzJzsKICAgICAgICAvKioKICAgICAgICAgKiBEaWN0YXRlcyBob3cgdW5sb2FkZWQgaXRlbXMgaW4gYSBTdXNwZW5zZUxpc3QgaXMgc2hvd24uCiAgICAgICAgICoKICAgICAgICAgKiAtIEJ5IGRlZmF1bHQsIGBTdXNwZW5zZUxpc3RgIHdpbGwgc2hvdyBhbGwgZmFsbGJhY2tzIGluIHRoZSBsaXN0LgogICAgICAgICAqIC0gYGNvbGxhcHNlZGAgc2hvd3Mgb25seSB0aGUgbmV4dCBmYWxsYmFjayBpbiB0aGUgbGlzdC4KICAgICAgICAgKiAtIGBoaWRkZW5gIGRvZXNu4oCZdCBzaG93IGFueSB1bmxvYWRlZCBpdGVtcy4KICAgICAgICAgKi8KICAgICAgICB0YWlsPzogU3VzcGVuc2VMaXN0VGFpbE1vZGUgfCB1bmRlZmluZWQ7CiAgICB9CgogICAgaW50ZXJmYWNlIE5vbkRpcmVjdGlvbmFsU3VzcGVuc2VMaXN0UHJvcHMgZXh0ZW5kcyBTdXNwZW5zZUxpc3RDb21tb25Qcm9wcyB7CiAgICAgICAgLyoqCiAgICAgICAgICogRGVmaW5lcyB0aGUgb3JkZXIgaW4gd2hpY2ggdGhlIGBTdXNwZW5zZUxpc3RgIGNoaWxkcmVuIHNob3VsZCBiZSByZXZlYWxlZC4KICAgICAgICAgKi8KICAgICAgICByZXZlYWxPcmRlcj86IEV4Y2x1ZGU8U3VzcGVuc2VMaXN0UmV2ZWFsT3JkZXIsIERpcmVjdGlvbmFsU3VzcGVuc2VMaXN0UHJvcHNbJ3JldmVhbE9yZGVyJ10+IHwgdW5kZWZpbmVkOwogICAgICAgIC8qKgogICAgICAgICAqIFRoZSB0YWlsIHByb3BlcnR5IGlzIGludmFsaWQgd2hlbiBub3QgdXNpbmcgdGhlIGBmb3J3YXJkc2Agb3IgYGJhY2t3YXJkc2AgcmV2ZWFsIG9yZGVycy4KICAgICAgICAgKi8KICAgICAgICB0YWlsPzogbmV2ZXIgfCB1bmRlZmluZWQ7CiAgICB9CgogICAgZXhwb3J0IHR5cGUgU3VzcGVuc2VMaXN0UHJvcHMgPSBEaXJlY3Rpb25hbFN1c3BlbnNlTGlzdFByb3BzIHwgTm9uRGlyZWN0aW9uYWxTdXNwZW5zZUxpc3RQcm9wczsKCiAgICAvKioKICAgICAqIGBTdXNwZW5zZUxpc3RgIGhlbHBzIGNvb3JkaW5hdGUgbWFueSBjb21wb25lbnRzIHRoYXQgY2FuIHN1c3BlbmQgYnkgb3JjaGVzdHJhdGluZyB0aGUgb3JkZXIKICAgICAqIGluIHdoaWNoIHRoZXNlIGNvbXBvbmVudHMgYXJlIHJldmVhbGVkIHRvIHRoZSB1c2VyLgogICAgICoKICAgICAqIFdoZW4gbXVsdGlwbGUgY29tcG9uZW50cyBuZWVkIHRvIGZldGNoIGRhdGEsIHRoaXMgZGF0YSBtYXkgYXJyaXZlIGluIGFuIHVucHJlZGljdGFibGUgb3JkZXIuCiAgICAgKiBIb3dldmVyLCBpZiB5b3Ugd3JhcCB0aGVzZSBpdGVtcyBpbiBhIGBTdXNwZW5zZUxpc3RgLCBSZWFjdCB3aWxsIG5vdCBzaG93IGFuIGl0ZW0gaW4gdGhlIGxpc3QKICAgICAqIHVudGlsIHByZXZpb3VzIGl0ZW1zIGhhdmUgYmVlbiBkaXNwbGF5ZWQgKHRoaXMgYmVoYXZpb3IgaXMgYWRqdXN0YWJsZSkuCiAgICAgKgogICAgICogQHNlZSBodHRwczovL3JlYWN0anMub3JnL2RvY3MvY29uY3VycmVudC1tb2RlLXJlZmVyZW5jZS5odG1sI3N1c3BlbnNlbGlzdAogICAgICogQHNlZSBodHRwczovL3JlYWN0anMub3JnL2RvY3MvY29uY3VycmVudC1tb2RlLXBhdHRlcm5zLmh0bWwjc3VzcGVuc2VsaXN0CiAgICAgKi8KICAgIGV4cG9ydCBjb25zdCBTdXNwZW5zZUxpc3Q6IEV4b3RpY0NvbXBvbmVudDxTdXNwZW5zZUxpc3RQcm9wcz47Cn0K";var LL="data:text/plain;charset=utf-8;base64,";var PL="data:text/plain;charset=utf-8;base64,Ly8gVHlwZSBkZWZpbml0aW9ucyBmb3IgcHJvcC10eXBlcyAxNS43Ci8vIFByb2plY3Q6IGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3Byb3AtdHlwZXMsIGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0Ci8vIERlZmluaXRpb25zIGJ5OiBEb3Z5ZGFzTmF2aWNrYXMgPGh0dHBzOi8vZ2l0aHViLmNvbS9Eb3Z5ZGFzTmF2aWNrYXM+Ci8vICAgICAgICAgICAgICAgICBGZXJkeSBCdWRoaWRoYXJtYSA8aHR0cHM6Ly9naXRodWIuY29tL2ZlcmRhYmVyPgovLyAgICAgICAgICAgICAgICAgU2ViYXN0aWFuIFNpbGJlcm1hbm4gPGh0dHBzOi8vZ2l0aHViLmNvbS9lcHMxbG9uPgovLyBEZWZpbml0aW9uczogaHR0cHM6Ly9naXRodWIuY29tL0RlZmluaXRlbHlUeXBlZC9EZWZpbml0ZWx5VHlwZWQKLy8gVHlwZVNjcmlwdCBWZXJzaW9uOiAyLjgKCmV4cG9ydCB0eXBlIFJlYWN0Q29tcG9uZW50TGlrZSA9CiAgICB8IHN0cmluZwogICAgfCAoKHByb3BzOiBhbnksIGNvbnRleHQ/OiBhbnkpID0+IGFueSkKICAgIHwgKG5ldyAocHJvcHM6IGFueSwgY29udGV4dD86IGFueSkgPT4gYW55KTsKCmV4cG9ydCBpbnRlcmZhY2UgUmVhY3RFbGVtZW50TGlrZSB7CiAgICB0eXBlOiBSZWFjdENvbXBvbmVudExpa2U7CiAgICBwcm9wczogYW55OwogICAga2V5OiBzdHJpbmcgfCBudW1iZXIgfCBudWxsOwp9CgpleHBvcnQgaW50ZXJmYWNlIFJlYWN0Tm9kZUFycmF5IGV4dGVuZHMgQXJyYXk8UmVhY3ROb2RlTGlrZT4ge30KCmV4cG9ydCB0eXBlIFJlYWN0Tm9kZUxpa2UgPQogICAgfCB7fQogICAgfCBSZWFjdEVsZW1lbnRMaWtlCiAgICB8IFJlYWN0Tm9kZUFycmF5CiAgICB8IHN0cmluZwogICAgfCBudW1iZXIKICAgIHwgYm9vbGVhbgogICAgfCBudWxsCiAgICB8IHVuZGVmaW5lZDsKCmV4cG9ydCBjb25zdCBub21pbmFsVHlwZUhhY2s6IHVuaXF1ZSBzeW1ib2w7CgpleHBvcnQgdHlwZSBJc09wdGlvbmFsPFQ+ID0gdW5kZWZpbmVkIGV4dGVuZHMgVCA/IHRydWUgOiBmYWxzZTsKCmV4cG9ydCB0eXBlIFJlcXVpcmVkS2V5czxWPiA9IHsgW0sgaW4ga2V5b2YgVl0tPzogRXhjbHVkZTxWW0tdLCB1bmRlZmluZWQ+IGV4dGVuZHMgVmFsaWRhdG9yPGluZmVyIFQ+ID8gSXNPcHRpb25hbDxUPiBleHRlbmRzIHRydWUgPyBuZXZlciA6IEsgOiBuZXZlciB9W2tleW9mIFZdOwpleHBvcnQgdHlwZSBPcHRpb25hbEtleXM8Vj4gPSBFeGNsdWRlPGtleW9mIFYsIFJlcXVpcmVkS2V5czxWPj47CmV4cG9ydCB0eXBlIEluZmVyUHJvcHNJbm5lcjxWPiA9IHsgW0sgaW4ga2V5b2YgVl0tPzogSW5mZXJUeXBlPFZbS10+OyB9OwoKZXhwb3J0IGludGVyZmFjZSBWYWxpZGF0b3I8VD4gewogICAgKHByb3BzOiB7IFtrZXk6IHN0cmluZ106IGFueSB9LCBwcm9wTmFtZTogc3RyaW5nLCBjb21wb25lbnROYW1lOiBzdHJpbmcsIGxvY2F0aW9uOiBzdHJpbmcsIHByb3BGdWxsTmFtZTogc3RyaW5nKTogRXJyb3IgfCBudWxsOwogICAgW25vbWluYWxUeXBlSGFja10/OiB7CiAgICAgICAgdHlwZTogVDsKICAgIH0gfCB1bmRlZmluZWQ7Cn0KCmV4cG9ydCBpbnRlcmZhY2UgUmVxdWlyZWFibGU8VD4gZXh0ZW5kcyBWYWxpZGF0b3I8VCB8IHVuZGVmaW5lZCB8IG51bGw+IHsKICAgIGlzUmVxdWlyZWQ6IFZhbGlkYXRvcjxOb25OdWxsYWJsZTxUPj47Cn0KCmV4cG9ydCB0eXBlIFZhbGlkYXRpb25NYXA8VD4gPSB7IFtLIGluIGtleW9mIFRdPzogVmFsaWRhdG9yPFRbS10+IH07CgpleHBvcnQgdHlwZSBJbmZlclR5cGU8Vj4gPSBWIGV4dGVuZHMgVmFsaWRhdG9yPGluZmVyIFQ+ID8gVCA6IGFueTsKZXhwb3J0IHR5cGUgSW5mZXJQcm9wczxWPiA9CiAgICAmIEluZmVyUHJvcHNJbm5lcjxQaWNrPFYsIFJlcXVpcmVkS2V5czxWPj4+CiAgICAmIFBhcnRpYWw8SW5mZXJQcm9wc0lubmVyPFBpY2s8ViwgT3B0aW9uYWxLZXlzPFY+Pj4+OwoKZXhwb3J0IGNvbnN0IGFueTogUmVxdWlyZWFibGU8YW55PjsKZXhwb3J0IGNvbnN0IGFycmF5OiBSZXF1aXJlYWJsZTxhbnlbXT47CmV4cG9ydCBjb25zdCBib29sOiBSZXF1aXJlYWJsZTxib29sZWFuPjsKZXhwb3J0IGNvbnN0IGZ1bmM6IFJlcXVpcmVhYmxlPCguLi5hcmdzOiBhbnlbXSkgPT4gYW55PjsKZXhwb3J0IGNvbnN0IG51bWJlcjogUmVxdWlyZWFibGU8bnVtYmVyPjsKZXhwb3J0IGNvbnN0IG9iamVjdDogUmVxdWlyZWFibGU8b2JqZWN0PjsKZXhwb3J0IGNvbnN0IHN0cmluZzogUmVxdWlyZWFibGU8c3RyaW5nPjsKZXhwb3J0IGNvbnN0IG5vZGU6IFJlcXVpcmVhYmxlPFJlYWN0Tm9kZUxpa2U+OwpleHBvcnQgY29uc3QgZWxlbWVudDogUmVxdWlyZWFibGU8UmVhY3RFbGVtZW50TGlrZT47CmV4cG9ydCBjb25zdCBzeW1ib2w6IFJlcXVpcmVhYmxlPHN5bWJvbD47CmV4cG9ydCBjb25zdCBlbGVtZW50VHlwZTogUmVxdWlyZWFibGU8UmVhY3RDb21wb25lbnRMaWtlPjsKZXhwb3J0IGZ1bmN0aW9uIGluc3RhbmNlT2Y8VD4oZXhwZWN0ZWRDbGFzczogbmV3ICguLi5hcmdzOiBhbnlbXSkgPT4gVCk6IFJlcXVpcmVhYmxlPFQ+OwpleHBvcnQgZnVuY3Rpb24gb25lT2Y8VD4odHlwZXM6IFJlYWRvbmx5QXJyYXk8VD4pOiBSZXF1aXJlYWJsZTxUPjsKZXhwb3J0IGZ1bmN0aW9uIG9uZU9mVHlwZTxUIGV4dGVuZHMgVmFsaWRhdG9yPGFueT4+KHR5cGVzOiBUW10pOiBSZXF1aXJlYWJsZTxOb25OdWxsYWJsZTxJbmZlclR5cGU8VD4+PjsKZXhwb3J0IGZ1bmN0aW9uIGFycmF5T2Y8VD4odHlwZTogVmFsaWRhdG9yPFQ+KTogUmVxdWlyZWFibGU8VFtdPjsKZXhwb3J0IGZ1bmN0aW9uIG9iamVjdE9mPFQ+KHR5cGU6IFZhbGlkYXRvcjxUPik6IFJlcXVpcmVhYmxlPHsgW0sgaW4ga2V5b2YgYW55XTogVDsgfT47CmV4cG9ydCBmdW5jdGlvbiBzaGFwZTxQIGV4dGVuZHMgVmFsaWRhdGlvbk1hcDxhbnk+Pih0eXBlOiBQKTogUmVxdWlyZWFibGU8SW5mZXJQcm9wczxQPj47CmV4cG9ydCBmdW5jdGlvbiBleGFjdDxQIGV4dGVuZHMgVmFsaWRhdGlvbk1hcDxhbnk+Pih0eXBlOiBQKTogUmVxdWlyZWFibGU8UmVxdWlyZWQ8SW5mZXJQcm9wczxQPj4+OwoKLyoqCiAqIEFzc2VydCB0aGF0IHRoZSB2YWx1ZXMgbWF0Y2ggd2l0aCB0aGUgdHlwZSBzcGVjcy4KICogRXJyb3IgbWVzc2FnZXMgYXJlIG1lbW9yaXplZCBhbmQgd2lsbCBvbmx5IGJlIHNob3duIG9uY2UuCiAqCiAqIEBwYXJhbSB0eXBlU3BlY3MgTWFwIG9mIG5hbWUgdG8gYSBSZWFjdFByb3BUeXBlCiAqIEBwYXJhbSB2YWx1ZXMgUnVudGltZSB2YWx1ZXMgdGhhdCBuZWVkIHRvIGJlIHR5cGUtY2hlY2tlZAogKiBAcGFyYW0gbG9jYXRpb24gZS5nLiAicHJvcCIsICJjb250ZXh0IiwgImNoaWxkIGNvbnRleHQiCiAqIEBwYXJhbSBjb21wb25lbnROYW1lIE5hbWUgb2YgdGhlIGNvbXBvbmVudCBmb3IgZXJyb3IgbWVzc2FnZXMKICogQHBhcmFtIGdldFN0YWNrIFJldHVybnMgdGhlIGNvbXBvbmVudCBzdGFjawogKi8KZXhwb3J0IGZ1bmN0aW9uIGNoZWNrUHJvcFR5cGVzKHR5cGVTcGVjczogYW55LCB2YWx1ZXM6IGFueSwgbG9jYXRpb246IHN0cmluZywgY29tcG9uZW50TmFtZTogc3RyaW5nLCBnZXRTdGFjaz86ICgpID0+IGFueSk6IHZvaWQ7CgovKioKICogT25seSBhdmFpbGFibGUgaWYgTk9ERV9FTlY9cHJvZHVjdGlvbgogKi8KZXhwb3J0IGZ1bmN0aW9uIHJlc2V0V2FybmluZ0NhY2hlKCk6IHZvaWQ7Cg==";var ML="data:text/plain;charset=utf-8;base64,ZXhwb3J0IHt9OwoKZXhwb3J0IHR5cGUgUHJvcGVydHlWYWx1ZTxUVmFsdWU+ID0gVFZhbHVlIGV4dGVuZHMgQXJyYXk8aW5mZXIgQVZhbHVlPgogID8gQXJyYXk8QVZhbHVlIGV4dGVuZHMgaW5mZXIgVFVucGFja2VkICYge30gPyBUVW5wYWNrZWQgOiBBVmFsdWU+CiAgOiBUVmFsdWUgZXh0ZW5kcyBpbmZlciBUVW5wYWNrZWQgJiB7fQogID8gVFVucGFja2VkCiAgOiBUVmFsdWU7CgpleHBvcnQgdHlwZSBGYWxsYmFjazxUPiA9IHsgW1AgaW4ga2V5b2YgVF06IFRbUF0gfCBOb25OdWxsYWJsZTxUW1BdPltdIH07CgpleHBvcnQgaW50ZXJmYWNlIFN0YW5kYXJkTG9uZ2hhbmRQcm9wZXJ0aWVzPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMCwgVFRpbWUgPSBzdHJpbmcgJiB7fT4gewogIC8qKgogICAqIFRoZSAqKmBhY2NlbnQtY29sb3JgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGNvbG9yIG9mIHRoZSBlbGVtZW50cyBhY2NlbnQuIEFuIGFjY2VudCBhcHBlYXJzIGluIGVsZW1lbnRzIHN1Y2ggYXMgYDxpbnB1dD5gIG9mIGB0eXBlPSJjaGVja2JveCJgLCBvciBgdHlwZT0icmFkaW8iYC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPGNvbG9yPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqOTMqKiB8ICoqOTIqKiAgfCAgIE5vICAgfCAqKjkzKiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYWNjZW50LWNvbG9yCiAgICovCiAgYWNjZW50Q29sb3I/OiBQcm9wZXJ0eS5BY2NlbnRDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgQ1NTICoqYGFsaWduLWNvbnRlbnRgKiogcHJvcGVydHkgc2V0cyB0aGUgZGlzdHJpYnV0aW9uIG9mIHNwYWNlIGJldHdlZW4gYW5kIGFyb3VuZCBjb250ZW50IGl0ZW1zIGFsb25nIGEgZmxleGJveCdzIGNyb3NzLWF4aXMgb3IgYSBncmlkJ3MgYmxvY2sgYXhpcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCA8YmFzZWxpbmUtcG9zaXRpb24+IHwgPGNvbnRlbnQtZGlzdHJpYnV0aW9uPiB8IDxvdmVyZmxvdy1wb3NpdGlvbj4/IDxjb250ZW50LXBvc2l0aW9uPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIEZsZXggTGF5b3V0XwogICAqCiAgICogfCAgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgICoqMjkqKiAgfCAqKjI4KiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTEqKiB8CiAgICogfCAyMSBfLXgtXyB8ICAgICAgICAgfCA3IF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIC0tLQogICAqCiAgICogX1N1cHBvcnRlZCBpbiBHcmlkIExheW91dF8KICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjUyKiogIHwgKioxMC4xKiogfCAqKjE2KiogfCBObyAgfAogICAqCiAgICogLS0tCiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9hbGlnbi1jb250ZW50CiAgICovCiAgYWxpZ25Db250ZW50PzogUHJvcGVydHkuQWxpZ25Db250ZW50IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBDU1MgKipgYWxpZ24taXRlbXNgKiogcHJvcGVydHkgc2V0cyB0aGUgYGFsaWduLXNlbGZgIHZhbHVlIG9uIGFsbCBkaXJlY3QgY2hpbGRyZW4gYXMgYSBncm91cC4gSW4gRmxleGJveCwgaXQgY29udHJvbHMgdGhlIGFsaWdubWVudCBvZiBpdGVtcyBvbiB0aGUgQ3Jvc3MgQXhpcy4gSW4gR3JpZCBMYXlvdXQsIGl0IGNvbnRyb2xzIHRoZSBhbGlnbm1lbnQgb2YgaXRlbXMgb24gdGhlIEJsb2NrIEF4aXMgd2l0aGluIHRoZWlyIGdyaWQgYXJlYS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCBzdHJldGNoIHwgPGJhc2VsaW5lLXBvc2l0aW9uPiB8IFsgPG92ZXJmbG93LXBvc2l0aW9uPj8gPHNlbGYtcG9zaXRpb24+IF1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIC0tLQogICAqCiAgICogX1N1cHBvcnRlZCBpbiBGbGV4IExheW91dF8KICAgKgogICAqIHwgIENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICAqKjUyKiogIHwgKioyMCoqICB8ICAqKjkqKiAgfCAqKjEyKiogfCAqKjExKiogfAogICAqIHwgMjEgXy14LV8gfCAgICAgICAgIHwgNyBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiAtLS0KICAgKgogICAqIF9TdXBwb3J0ZWQgaW4gR3JpZCBMYXlvdXRfCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio1NyoqIHwgKio1MioqICB8ICoqMTAuMSoqIHwgKioxNioqIHwgTm8gIHwKICAgKgogICAqIC0tLQogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYWxpZ24taXRlbXMKICAgKi8KICBhbGlnbkl0ZW1zPzogUHJvcGVydHkuQWxpZ25JdGVtcyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYWxpZ24tc2VsZmAqKiBDU1MgcHJvcGVydHkgb3ZlcnJpZGVzIGEgZ3JpZCBvciBmbGV4IGl0ZW0ncyBgYWxpZ24taXRlbXNgIHZhbHVlLiBJbiBHcmlkLCBpdCBhbGlnbnMgdGhlIGl0ZW0gaW5zaWRlIHRoZcKgZ3JpZCBhcmVhLiBJbiBGbGV4Ym94LCBpdCBhbGlnbnMgdGhlIGl0ZW0gb24gdGhlIGNyb3NzIGF4aXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IG5vcm1hbCB8IHN0cmV0Y2ggfCA8YmFzZWxpbmUtcG9zaXRpb24+IHwgPG92ZXJmbG93LXBvc2l0aW9uPj8gPHNlbGYtcG9zaXRpb24+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIEZsZXggTGF5b3V0XwogICAqCiAgICogfCAgQ2hyb21lICB8IEZpcmVmb3ggfCAgU2FmYXJpICAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICAqKjM2KiogIHwgKioyMCoqICB8ICAgKio5KiogICB8ICoqMTIqKiB8ICoqMTEqKiB8CiAgICogfCAyMSBfLXgtXyB8ICAgICAgICAgfCA2LjEgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIEdyaWQgTGF5b3V0XwogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCAgICAgIElFICAgICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi0tLS0tLS0tLS06IHwKICAgKiB8ICoqNTcqKiB8ICoqNTIqKiAgfCAqKjEwLjEqKiB8ICoqMTYqKiB8ICoqMTAqKiBfLXgtXyB8CiAgICoKICAgKiAtLS0KICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2FsaWduLXNlbGYKICAgKi8KICBhbGlnblNlbGY/OiBQcm9wZXJ0eS5BbGlnblNlbGYgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFsaWduLXRyYWNrc2AqKsKgQ1NTIHByb3BlcnR5IHNldHMgdGhlIGFsaWdubWVudCBpbiB0aGUgbWFzb25yeSBheGlzIGZvciBncmlkIGNvbnRhaW5lcnMgdGhhdCBoYXZlIG1hc29ucnkgaW4gdGhlaXIgYmxvY2sgYXhpcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIG5vcm1hbCB8IDxiYXNlbGluZS1wb3NpdGlvbj4gfCA8Y29udGVudC1kaXN0cmlidXRpb24+IHwgPG92ZXJmbG93LXBvc2l0aW9uPj8gPGNvbnRlbnQtcG9zaXRpb24+IF0jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCBFZGdlIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS06IHwgOi06IHwKICAgKiB8ICAgTm8gICB8ICAgbi9hICAgfCAgIE5vICAgfCAgTm8gIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2FsaWduLXRyYWNrcwogICAqLwogIGFsaWduVHJhY2tzPzogUHJvcGVydHkuQWxpZ25UcmFja3MgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbi1kZWxheWAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHRoZSBhbW91bnQgb2YgdGltZSB0byB3YWl0IGZyb20gYXBwbHlpbmcgdGhlIGFuaW1hdGlvbiB0byBhbiBlbGVtZW50IGJlZm9yZSBiZWdpbm5pbmcgdG8gcGVyZm9ybSB0aGUgYW5pbWF0aW9uLiBUaGUgYW5pbWF0aW9uIGNhbiBzdGFydCBsYXRlciwgaW1tZWRpYXRlbHkgZnJvbSBpdHMgYmVnaW5uaW5nLCBvciBpbW1lZGlhdGVseSBhbmQgcGFydHdheSB0aHJvdWdoIHRoZSBhbmltYXRpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHRpbWU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMHNgCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgKio0MyoqICB8ICoqMTYqKiAgfCAgKio5KiogIHwgKioxMioqIHwgKioxMCoqIHwKICAgKiB8IDMgXy14LV8gfCA1IF8teC1fIHwgNCBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9hbmltYXRpb24tZGVsYXkKICAgKi8KICBhbmltYXRpb25EZWxheT86IFByb3BlcnR5LkFuaW1hdGlvbkRlbGF5PFRUaW1lPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYW5pbWF0aW9uLWRpcmVjdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIGFuIGFuaW1hdGlvbiBzaG91bGQgcGxheSBmb3J3YXJkLCBiYWNrd2FyZCwgb3IgYWx0ZXJuYXRlIGJhY2sgYW5kIGZvcnRoIGJldHdlZW4gcGxheWluZyB0aGUgc2VxdWVuY2UgZm9yd2FyZCBhbmQgYmFja3dhcmQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHNpbmdsZS1hbmltYXRpb24tZGlyZWN0aW9uPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjQzKiogIHwgKioxNioqICB8ICAqKjkqKiAgfCAqKjEyKiogfCAqKjEwKiogfAogICAqIHwgMyBfLXgtXyB8IDUgXy14LV8gfCA0IF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2FuaW1hdGlvbi1kaXJlY3Rpb24KICAgKi8KICBhbmltYXRpb25EaXJlY3Rpb24/OiBQcm9wZXJ0eS5BbmltYXRpb25EaXJlY3Rpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbi1kdXJhdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbGVuZ3RoIG9mIHRpbWUgdGhhdCBhbiBhbmltYXRpb24gdGFrZXMgdG8gY29tcGxldGUgb25lIGN5Y2xlLgogICAqCiAgICogKipTeW50YXgqKjogYDx0aW1lPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBzYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNDMqKiAgfCAqKjE2KiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAzIF8teC1fIHwgNSBfLXgtXyB8IDQgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYW5pbWF0aW9uLWR1cmF0aW9uCiAgICovCiAgYW5pbWF0aW9uRHVyYXRpb24/OiBQcm9wZXJ0eS5BbmltYXRpb25EdXJhdGlvbjxUVGltZT4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbi1maWxsLW1vZGVgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IGEgQ1NTIGFuaW1hdGlvbiBhcHBsaWVzIHN0eWxlcyB0byBpdHMgdGFyZ2V0IGJlZm9yZSBhbmQgYWZ0ZXIgaXRzIGV4ZWN1dGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2luZ2xlLWFuaW1hdGlvbi1maWxsLW1vZGU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjQzKiogIHwgKioxNioqICB8ICAqKjkqKiAgfCAqKjEyKiogfCAqKjEwKiogfAogICAqIHwgMyBfLXgtXyB8IDUgXy14LV8gfCA1IF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2FuaW1hdGlvbi1maWxsLW1vZGUKICAgKi8KICBhbmltYXRpb25GaWxsTW9kZT86IFByb3BlcnR5LkFuaW1hdGlvbkZpbGxNb2RlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBudW1iZXIgb2YgdGltZXMgYW4gYW5pbWF0aW9uIHNlcXVlbmNlIHNob3VsZCBiZSBwbGF5ZWQgYmVmb3JlIHN0b3BwaW5nLgogICAqCiAgICogKipTeW50YXgqKjogYDxzaW5nbGUtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudD4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAxYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNDMqKiAgfCAqKjE2KiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAzIF8teC1fIHwgNSBfLXgtXyB8IDQgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudAogICAqLwogIGFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50PzogUHJvcGVydHkuQW5pbWF0aW9uSXRlcmF0aW9uQ291bnQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbi1uYW1lYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIG5hbWVzIG9mIG9uZSBvciBtb3JlIGBAa2V5ZnJhbWVzYCBhdC1ydWxlcyBkZXNjcmliaW5nIHRoZSBhbmltYXRpb24gb3IgYW5pbWF0aW9ucyB0byBhcHBseSB0byB0aGUgZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIG5vbmUgfCA8a2V5ZnJhbWVzLW5hbWU+IF0jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNDMqKiAgfCAqKjE2KiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAzIF8teC1fIHwgNSBfLXgtXyB8IDQgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYW5pbWF0aW9uLW5hbWUKICAgKi8KICBhbmltYXRpb25OYW1lPzogUHJvcGVydHkuQW5pbWF0aW9uTmFtZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYW5pbWF0aW9uLXBsYXktc3RhdGVgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hldGhlciBhbiBhbmltYXRpb24gaXMgcnVubmluZyBvciBwYXVzZWQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHNpbmdsZS1hbmltYXRpb24tcGxheS1zdGF0ZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBydW5uaW5nYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNDMqKiAgfCAqKjE2KiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAzIF8teC1fIHwgNSBfLXgtXyB8IDQgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYW5pbWF0aW9uLXBsYXktc3RhdGUKICAgKi8KICBhbmltYXRpb25QbGF5U3RhdGU/OiBQcm9wZXJ0eS5BbmltYXRpb25QbGF5U3RhdGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb25gKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IGFuIGFuaW1hdGlvbiBwcm9ncmVzc2VzIHRocm91Z2ggdGhlIGR1cmF0aW9uIG9mIGVhY2ggY3ljbGUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGVhc2luZy1mdW5jdGlvbj4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBlYXNlYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNDMqKiAgfCAqKjE2KiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAzIF8teC1fIHwgNSBfLXgtXyB8IDQgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbgogICAqLwogIGFuaW1hdGlvblRpbWluZ0Z1bmN0aW9uPzogUHJvcGVydHkuQW5pbWF0aW9uVGltaW5nRnVuY3Rpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKmFwcGVhcmFuY2UqKmAgQ1NTIHByb3BlcnR5IGlzIHVzZWQgdG8gZGlzcGxheSBhbiBlbGVtZW50IHVzaW5nIHBsYXRmb3JtLW5hdGl2ZSBzdHlsaW5nLCBiYXNlZCBvbiB0aGUgb3BlcmF0aW5nIHN5c3RlbSdzIHRoZW1lLiBUaGUgKipgLW1vei1hcHBlYXJhbmNlYCoqIGFuZCAqKmAtd2Via2l0LWFwcGVhcmFuY2VgKiogcHJvcGVydGllcyBhcmUgbm9uLXN0YW5kYXJkIHZlcnNpb25zIG9mIHRoaXMgcHJvcGVydHksIHVzZWQgKHJlc3BlY3RpdmVseSkgYnkgR2Vja28gKEZpcmVmb3gpIGFuZCBieSBXZWJLaXQtYmFzZWQgKGUuZy4sIFNhZmFyaSkgYW5kIEJsaW5rLWJhc2VkIChlLmcuLCBDaHJvbWUsIE9wZXJhKSBicm93c2VycyB0byBhY2hpZXZlIHRoZSBzYW1lIHRoaW5nLiBOb3RlIHRoYXQgRmlyZWZveCBhbmQgRWRnZSBhbHNvIHN1cHBvcnQgKipgLXdlYmtpdC1hcHBlYXJhbmNlYCoqLCBmb3IgY29tcGF0aWJpbGl0eSByZWFzb25zLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBhdXRvIHwgdGV4dGZpZWxkIHwgbWVudWxpc3QtYnV0dG9uIHwgPGNvbXBhdC1hdXRvPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCAgIFNhZmFyaSAgICB8ICAgRWRnZSAgIHwgSUUgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLTogfCA6LS0tLS0tOiB8IDotOiB8CiAgICogfCAqKjg0KiogIHwgKio4MCoqICB8ICoqMyoqIF8teC1fIHwgICoqODQqKiAgfCBObyAgfAogICAqIHwgMSBfLXgtXyB8IDEgXy14LV8gfCAgICAgICAgICAgICB8IDEyIF8teC1fIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2FwcGVhcmFuY2UKICAgKi8KICBhcHBlYXJhbmNlPzogUHJvcGVydHkuQXBwZWFyYW5jZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYXNwZWN0LXJhdGlvYCoqwqDCoENTUyBwcm9wZXJ0eSBzZXRzIGEgKipwcmVmZXJyZWQgYXNwZWN0IHJhdGlvKiogZm9yIHRoZSBib3gsIHdoaWNoIHdpbGwgYmUgdXNlZCBpbiB0aGUgY2FsY3VsYXRpb24gb2YgYXV0byBzaXplcyBhbmQgc29tZSBvdGhlciBsYXlvdXQgZnVuY3Rpb25zLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCA8cmF0aW8+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4OCoqIHwgKio4OSoqICB8ICoqMTUqKiB8ICoqODgqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9hc3BlY3QtcmF0aW8KICAgKi8KICBhc3BlY3RSYXRpbz86IFByb3BlcnR5LkFzcGVjdFJhdGlvIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBiYWNrZHJvcC1maWx0ZXJgKiogQ1NTIHByb3BlcnR5IGxldHMgeW91IGFwcGx5IGdyYXBoaWNhbCBlZmZlY3RzIHN1Y2ggYXMgYmx1cnJpbmcgb3IgY29sb3Igc2hpZnRpbmcgdG8gdGhlIGFyZWEgYmVoaW5kIGFuIGVsZW1lbnQuIEJlY2F1c2UgaXQgYXBwbGllcyB0byBldmVyeXRoaW5nIF9iZWhpbmRfIHRoZSBlbGVtZW50LCB0byBzZWUgdGhlIGVmZmVjdCB5b3UgbXVzdCBtYWtlIHRoZSBlbGVtZW50IG9yIGl0cyBiYWNrZ3JvdW5kIGF0IGxlYXN0IHBhcnRpYWxseSB0cmFuc3BhcmVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPGZpbHRlci1mdW5jdGlvbi1saXN0PmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICAgU2FmYXJpICAgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjc2KiogfCAgIG4vYSAgIHwgKio5KiogXy14LV8gfCAqKjE3KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYmFja2Ryb3AtZmlsdGVyCiAgICovCiAgYmFja2Ryb3BGaWx0ZXI/OiBQcm9wZXJ0eS5CYWNrZHJvcEZpbHRlciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmFja2ZhY2UtdmlzaWJpbGl0eWAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIHRoZSBiYWNrIGZhY2Ugb2YgYW4gZWxlbWVudCBpcyB2aXNpYmxlIHdoZW4gdHVybmVkIHRvd2FyZHMgdGhlIHVzZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgdmlzaWJsZSB8IGhpZGRlbmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgdmlzaWJsZWAKICAgKgogICAqIHwgIENocm9tZSAgfCBGaXJlZm94ICB8ICAgIFNhZmFyaSAgICAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tLS0tLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgICoqMzYqKiAgfCAgKioxNioqICB8ICoqNS4xKiogXy14LV8gfCAqKjEyKiogfCAqKjEwKiogfAogICAqIHwgMTIgXy14LV8gfCAxMCBfLXgtXyB8ICAgICAgICAgICAgICAgfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYmFja2ZhY2UtdmlzaWJpbGl0eQogICAqLwogIGJhY2tmYWNlVmlzaWJpbGl0eT86IFByb3BlcnR5LkJhY2tmYWNlVmlzaWJpbGl0eSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmFja2dyb3VuZC1hdHRhY2htZW50YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgYSBiYWNrZ3JvdW5kIGltYWdlJ3MgcG9zaXRpb24gaXMgZml4ZWQgd2l0aGluIHRoZSB2aWV3cG9ydCwgb3Igc2Nyb2xscyB3aXRoIGl0cyBjb250YWluaW5nIGJsb2NrLgogICAqCiAgICogKipTeW50YXgqKjogYDxhdHRhY2htZW50PiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHNjcm9sbGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYmFja2dyb3VuZC1hdHRhY2htZW50CiAgICovCiAgYmFja2dyb3VuZEF0dGFjaG1lbnQ/OiBQcm9wZXJ0eS5CYWNrZ3JvdW5kQXR0YWNobWVudCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmFja2dyb3VuZC1ibGVuZC1tb2RlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBhbiBlbGVtZW50J3MgYmFja2dyb3VuZCBpbWFnZXMgc2hvdWxkIGJsZW5kIHdpdGggZWFjaCBvdGhlciBhbmQgd2l0aCB0aGUgZWxlbWVudCdzIGJhY2tncm91bmQgY29sb3IuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGJsZW5kLW1vZGU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKiozNSoqIHwgKiozMCoqICB8ICoqOCoqICB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9iYWNrZ3JvdW5kLWJsZW5kLW1vZGUKICAgKi8KICBiYWNrZ3JvdW5kQmxlbmRNb2RlPzogUHJvcGVydHkuQmFja2dyb3VuZEJsZW5kTW9kZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmFja2dyb3VuZC1jbGlwYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgYW4gZWxlbWVudCdzIGJhY2tncm91bmQgZXh0ZW5kcyB1bmRlcm5lYXRoIGl0cyBib3JkZXIgYm94LCBwYWRkaW5nIGJveCwgb3IgY29udGVudCBib3guCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGJveD4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBib3JkZXItYm94YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgICBTYWZhcmkgICAgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKio0KiogIHwgKiozKiogXy14LV8gfCAqKjEyKiogfCAqKjkqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9iYWNrZ3JvdW5kLWNsaXAKICAgKi8KICBiYWNrZ3JvdW5kQ2xpcD86IFByb3BlcnR5LkJhY2tncm91bmRDbGlwIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBiYWNrZ3JvdW5kLWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBiYWNrZ3JvdW5kIGNvbG9yIG9mIGFuIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGNvbG9yPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgdHJhbnNwYXJlbnRgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JhY2tncm91bmQtY29sb3IKICAgKi8KICBiYWNrZ3JvdW5kQ29sb3I/OiBQcm9wZXJ0eS5CYWNrZ3JvdW5kQ29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJhY2tncm91bmQtaW1hZ2VgKiogQ1NTIHByb3BlcnR5IHNldHMgb25lIG9yIG1vcmUgYmFja2dyb3VuZCBpbWFnZXMgb24gYW4gZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8YmctaW1hZ2U+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYmFja2dyb3VuZC1pbWFnZQogICAqLwogIGJhY2tncm91bmRJbWFnZT86IFByb3BlcnR5LkJhY2tncm91bmRJbWFnZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmFja2dyb3VuZC1vcmlnaW5gKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGJhY2tncm91bmQncyBvcmlnaW46IGZyb20gdGhlIGJvcmRlciBzdGFydCwgaW5zaWRlIHRoZSBib3JkZXIsIG9yIGluc2lkZSB0aGUgcGFkZGluZy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Ym94PiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHBhZGRpbmctYm94YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjQqKiAgfCAqKjMqKiAgfCAqKjEyKiogfCAqKjkqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9iYWNrZ3JvdW5kLW9yaWdpbgogICAqLwogIGJhY2tncm91bmRPcmlnaW4/OiBQcm9wZXJ0eS5CYWNrZ3JvdW5kT3JpZ2luIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBiYWNrZ3JvdW5kLXBvc2l0aW9uLXhgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGluaXRpYWwgaG9yaXpvbnRhbCBwb3NpdGlvbiBmb3IgZWFjaCBiYWNrZ3JvdW5kIGltYWdlLiBUaGUgcG9zaXRpb24gaXMgcmVsYXRpdmUgdG8gdGhlIHBvc2l0aW9uIGxheWVyIHNldCBieSBgYmFja2dyb3VuZC1vcmlnaW5gLgogICAqCiAgICogKipTeW50YXgqKjogYFsgY2VudGVyIHwgWyBbIGxlZnQgfCByaWdodCB8IHgtc3RhcnQgfCB4LWVuZCBdPyA8bGVuZ3RoLXBlcmNlbnRhZ2U+PyBdISBdI2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbGVmdGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAqKjQ5KiogIHwgKioxKiogIHwgKioxMioqIHwgKio2KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYmFja2dyb3VuZC1wb3NpdGlvbi14CiAgICovCiAgYmFja2dyb3VuZFBvc2l0aW9uWD86IFByb3BlcnR5LkJhY2tncm91bmRQb3NpdGlvblg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJhY2tncm91bmQtcG9zaXRpb24teWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgaW5pdGlhbCB2ZXJ0aWNhbCBwb3NpdGlvbiBmb3IgZWFjaCBiYWNrZ3JvdW5kIGltYWdlLiBUaGUgcG9zaXRpb24gaXMgcmVsYXRpdmUgdG8gdGhlIHBvc2l0aW9uIGxheWVyIHNldCBieSBgYmFja2dyb3VuZC1vcmlnaW5gLgogICAqCiAgICogKipTeW50YXgqKjogYFsgY2VudGVyIHwgWyBbIHRvcCB8IGJvdHRvbSB8IHktc3RhcnQgfCB5LWVuZCBdPyA8bGVuZ3RoLXBlcmNlbnRhZ2U+PyBdISBdI2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgdG9wYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICoqNDkqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjYqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9iYWNrZ3JvdW5kLXBvc2l0aW9uLXkKICAgKi8KICBiYWNrZ3JvdW5kUG9zaXRpb25ZPzogUHJvcGVydHkuQmFja2dyb3VuZFBvc2l0aW9uWTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmFja2dyb3VuZC1yZXBlYXRgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IGJhY2tncm91bmQgaW1hZ2VzIGFyZSByZXBlYXRlZC4gQSBiYWNrZ3JvdW5kIGltYWdlIGNhbiBiZSByZXBlYXRlZCBhbG9uZyB0aGUgaG9yaXpvbnRhbCBhbmQgdmVydGljYWwgYXhlcywgb3Igbm90IHJlcGVhdGVkIGF0IGFsbC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8cmVwZWF0LXN0eWxlPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHJlcGVhdGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYmFja2dyb3VuZC1yZXBlYXQKICAgKi8KICBiYWNrZ3JvdW5kUmVwZWF0PzogUHJvcGVydHkuQmFja2dyb3VuZFJlcGVhdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmFja2dyb3VuZC1zaXplYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBzaXplIG9mIHRoZSBlbGVtZW50J3MgYmFja2dyb3VuZCBpbWFnZS4gVGhlIGltYWdlIGNhbiBiZSBsZWZ0IHRvIGl0cyBuYXR1cmFsIHNpemUsIHN0cmV0Y2hlZCwgb3IgY29uc3RyYWluZWQgdG8gZml0IHRoZSBhdmFpbGFibGUgc3BhY2UuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGJnLXNpemU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0byBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAgKiozKiogIHwgICoqNCoqICB8ICAqKjUqKiAgfCAqKjEyKiogfCAqKjkqKiB8CiAgICogfCAxIF8teC1fIHwgICAgICAgICB8IDMgXy14LV8gfCAgICAgICAgfCAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9iYWNrZ3JvdW5kLXNpemUKICAgKi8KICBiYWNrZ3JvdW5kU2l6ZT86IFByb3BlcnR5LkJhY2tncm91bmRTaXplPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqICoqU3ludGF4Kio6IGBjbGlwIHwgZWxsaXBzaXMgfCA8c3RyaW5nPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY2xpcGAKICAgKi8KICBibG9ja092ZXJmbG93PzogUHJvcGVydHkuQmxvY2tPdmVyZmxvdyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmxvY2stc2l6ZWAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgaG9yaXpvbnRhbCBvciB2ZXJ0aWNhbCBzaXplIG9mIGFuIGVsZW1lbnQncyBibG9jaywgZGVwZW5kaW5nIG9uIGl0cyB3cml0aW5nIG1vZGUuIEl0IGNvcnJlc3BvbmRzIHRvIGVpdGhlciB0aGUgYHdpZHRoYCBvciB0aGUgYGhlaWdodGAgcHJvcGVydHksIGRlcGVuZGluZyBvbiB0aGUgdmFsdWUgb2YgYHdyaXRpbmctbW9kZWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCd3aWR0aCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTcqKiB8ICoqNDEqKiAgfCAqKjEyLjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ibG9jay1zaXplCiAgICovCiAgYmxvY2tTaXplPzogUHJvcGVydHkuQmxvY2tTaXplPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItYmxvY2stY29sb3JgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGNvbG9yIG9mIHRoZSBsb2dpY2FsIGJsb2NrIGJvcmRlcnMgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIGJvcmRlciBjb2xvciBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGBib3JkZXItdG9wLWNvbG9yYCBhbmQgYGJvcmRlci1ib3R0b20tY29sb3JgLCBvciBgYm9yZGVyLXJpZ2h0LWNvbG9yYCBhbmQgYGJvcmRlci1sZWZ0LWNvbG9yYCBwcm9wZXJ0eSBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBkZWZpbmVkIGZvciBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItdG9wLWNvbG9yJz57MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY3VycmVudGNvbG9yYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODcqKiB8ICoqNjYqKiAgfCAqKjE0LjEqKiB8ICoqODcqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItYmxvY2stY29sb3IKICAgKi8KICBib3JkZXJCbG9ja0NvbG9yPzogUHJvcGVydHkuQm9yZGVyQmxvY2tDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWJsb2NrLWVuZC1jb2xvcmAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgY29sb3Igb2YgdGhlIGxvZ2ljYWwgYmxvY2stZW5kIGJvcmRlciBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIGNvbG9yIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYGJvcmRlci10b3AtY29sb3JgLMKgYGJvcmRlci1yaWdodC1jb2xvcmAswqBgYm9yZGVyLWJvdHRvbS1jb2xvcmAsIG9yIGBib3JkZXItbGVmdC1jb2xvcmAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXRvcC1jb2xvcic+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjdXJyZW50Y29sb3JgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio0MSoqICB8ICoqMTIuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1ibG9jay1lbmQtY29sb3IKICAgKi8KICBib3JkZXJCbG9ja0VuZENvbG9yPzogUHJvcGVydHkuQm9yZGVyQmxvY2tFbmRDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWJsb2NrLWVuZC1zdHlsZWAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgc3R5bGUgb2YgdGhlIGxvZ2ljYWwgYmxvY2stZW5kIGJvcmRlciBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIHN0eWxlIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYGJvcmRlci10b3Atc3R5bGVgLCBgYm9yZGVyLXJpZ2h0LXN0eWxlYCwgYGJvcmRlci1ib3R0b20tc3R5bGVgLCBvciBgYm9yZGVyLWxlZnQtc3R5bGVgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3Atc3R5bGUnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjQxKiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWJsb2NrLWVuZC1zdHlsZQogICAqLwogIGJvcmRlckJsb2NrRW5kU3R5bGU/OiBQcm9wZXJ0eS5Cb3JkZXJCbG9ja0VuZFN0eWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItYmxvY2stZW5kLXdpZHRoYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSB3aWR0aCBvZiB0aGUgbG9naWNhbCBibG9jay1lbmQgYm9yZGVyIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBib3JkZXIgd2lkdGggZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgYm9yZGVyLXRvcC13aWR0aGAswqBgYm9yZGVyLXJpZ2h0LXdpZHRoYCzCoGBib3JkZXItYm90dG9tLXdpZHRoYCwgb3IgYGJvcmRlci1sZWZ0LXdpZHRoYCBwcm9wZXJ0eSBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBkZWZpbmVkIGZvciBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItdG9wLXdpZHRoJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG1lZGl1bWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjQxKiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWJsb2NrLWVuZC13aWR0aAogICAqLwogIGJvcmRlckJsb2NrRW5kV2lkdGg/OiBQcm9wZXJ0eS5Cb3JkZXJCbG9ja0VuZFdpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItYmxvY2stc3RhcnQtY29sb3JgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGNvbG9yIG9mIHRoZSBsb2dpY2FsIGJsb2NrLXN0YXJ0IGJvcmRlciBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIGNvbG9yIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYGJvcmRlci10b3AtY29sb3JgLMKgYGJvcmRlci1yaWdodC1jb2xvcmAswqBgYm9yZGVyLWJvdHRvbS1jb2xvcmAsIG9yIGBib3JkZXItbGVmdC1jb2xvcmAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXRvcC1jb2xvcic+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjdXJyZW50Y29sb3JgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio0MSoqICB8ICoqMTIuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1ibG9jay1zdGFydC1jb2xvcgogICAqLwogIGJvcmRlckJsb2NrU3RhcnRDb2xvcj86IFByb3BlcnR5LkJvcmRlckJsb2NrU3RhcnRDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWJsb2NrLXN0YXJ0LXN0eWxlYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBzdHlsZSBvZiB0aGUgbG9naWNhbCBibG9jayBzdGFydCBib3JkZXIgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIGJvcmRlciBzdHlsZSBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGBib3JkZXItdG9wLXN0eWxlYCzCoGBib3JkZXItcmlnaHQtc3R5bGVgLMKgYGJvcmRlci1ib3R0b20tc3R5bGVgLCBvciBgYm9yZGVyLWxlZnQtc3R5bGVgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3Atc3R5bGUnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjQxKiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWJsb2NrLXN0YXJ0LXN0eWxlCiAgICovCiAgYm9yZGVyQmxvY2tTdGFydFN0eWxlPzogUHJvcGVydHkuQm9yZGVyQmxvY2tTdGFydFN0eWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItYmxvY2stc3RhcnQtd2lkdGhgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIHdpZHRoIG9mIHRoZSBsb2dpY2FsIGJsb2NrLXN0YXJ0IGJvcmRlciBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIHdpZHRoIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYGJvcmRlci10b3Atd2lkdGhgLMKgYGJvcmRlci1yaWdodC13aWR0aGAswqBgYm9yZGVyLWJvdHRvbS13aWR0aGAsIG9yIGBib3JkZXItbGVmdC13aWR0aGAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXRvcC13aWR0aCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBtZWRpdW1gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio0MSoqICB8ICoqMTIuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1ibG9jay1zdGFydC13aWR0aAogICAqLwogIGJvcmRlckJsb2NrU3RhcnRXaWR0aD86IFByb3BlcnR5LkJvcmRlckJsb2NrU3RhcnRXaWR0aDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWJsb2NrLXN0eWxlYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBzdHlsZSBvZiB0aGUgbG9naWNhbCBibG9jayBib3JkZXJzIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBib3JkZXIgc3R5bGUgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgYm9yZGVyLXRvcC1zdHlsZWAgYW5kIGBib3JkZXItYm90dG9tLXN0eWxlYCwgb3IgYGJvcmRlci1sZWZ0LXN0eWxlYCBhbmQgYGJvcmRlci1yaWdodC1zdHlsZWAgcHJvcGVydGllcyBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBkZWZpbmVkIGZvciBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItdG9wLXN0eWxlJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4NyoqIHwgKio2NioqICB8ICoqMTQuMSoqIHwgKio4NyoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1ibG9jay1zdHlsZQogICAqLwogIGJvcmRlckJsb2NrU3R5bGU/OiBQcm9wZXJ0eS5Cb3JkZXJCbG9ja1N0eWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItYmxvY2std2lkdGhgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIHdpZHRoIG9mIHRoZSBsb2dpY2FsIGJsb2NrwqBib3JkZXJzIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBib3JkZXIgd2lkdGggZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgYm9yZGVyLXRvcC13aWR0aGAgYW5kwqBgYm9yZGVyLWJvdHRvbS13aWR0aGAsIG9yIGBib3JkZXItbGVmdC13aWR0aGAsIGFuZMKgYGJvcmRlci1yaWdodC13aWR0aGAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXRvcC13aWR0aCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBtZWRpdW1gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4NyoqIHwgKio2NioqICB8ICoqMTQuMSoqIHwgKio4NyoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1ibG9jay13aWR0aAogICAqLwogIGJvcmRlckJsb2NrV2lkdGg/OiBQcm9wZXJ0eS5Cb3JkZXJCbG9ja1dpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItYm90dG9tLWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBjb2xvciBvZiBhbiBlbGVtZW50J3MgYm90dG9tIGJvcmRlci4gSXQgY2FuIGFsc28gYmUgc2V0IHdpdGggdGhlIHNob3J0aGFuZCBDU1MgcHJvcGVydGllcyBgYm9yZGVyLWNvbG9yYCBvciBgYm9yZGVyLWJvdHRvbWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItdG9wLWNvbG9yJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGN1cnJlbnRjb2xvcmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWJvdHRvbS1jb2xvcgogICAqLwogIGJvcmRlckJvdHRvbUNvbG9yPzogUHJvcGVydHkuQm9yZGVyQm90dG9tQ29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXNgKiogQ1NTIHByb3BlcnR5IHJvdW5kcyB0aGUgYm90dG9tLWxlZnQgY29ybmVyIG9mIGFuIGVsZW1lbnQgYnkgc3BlY2lmeWluZyB0aGUgcmFkaXVzIChvciB0aGUgcmFkaXVzIG9mIHRoZSBzZW1pLW1ham9yIGFuZCBzZW1pLW1pbm9yIGF4ZXMpIG9mIHRoZSBlbGxpcHNlIGRlZmluaW5nIHRoZSBjdXJ2YXR1cmUgb2YgdGhlIGNvcm5lci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoLXBlcmNlbnRhZ2U+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICAqKjQqKiAgfCAgKio0KiogIHwgICoqNSoqICB8ICoqMTIqKiB8ICoqOSoqIHwKICAgKiB8IDEgXy14LV8gfCAgICAgICAgIHwgMyBfLXgtXyB8ICAgICAgICB8ICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXMKICAgKi8KICBib3JkZXJCb3R0b21MZWZ0UmFkaXVzPzogUHJvcGVydHkuQm9yZGVyQm90dG9tTGVmdFJhZGl1czxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXNgKiogQ1NTIHByb3BlcnR5IHJvdW5kcyB0aGUgYm90dG9tLXJpZ2h0IGNvcm5lciBvZiBhbiBlbGVtZW50IGJ5IHNwZWNpZnlpbmcgdGhlIHJhZGl1cyAob3IgdGhlIHJhZGl1cyBvZiB0aGUgc2VtaS1tYWpvciBhbmQgc2VtaS1taW5vciBheGVzKSBvZiB0aGUgZWxsaXBzZSBkZWZpbmluZyB0aGUgY3VydmF0dXJlIG9mIHRoZSBjb3JuZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aC1wZXJjZW50YWdlPnsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAgKio0KiogIHwgICoqNCoqICB8ICAqKjUqKiAgfCAqKjEyKiogfCAqKjkqKiB8CiAgICogfCAxIF8teC1fIHwgICAgICAgICB8IDMgXy14LV8gfCAgICAgICAgfCAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1cwogICAqLwogIGJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzPzogUHJvcGVydHkuQm9yZGVyQm90dG9tUmlnaHRSYWRpdXM8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1ib3R0b20tc3R5bGVgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGxpbmUgc3R5bGUgb2YgYW4gZWxlbWVudCdzIGJvdHRvbSBgYm9yZGVyYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGluZS1zdHlsZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgIElFICAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjUuNSoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1ib3R0b20tc3R5bGUKICAgKi8KICBib3JkZXJCb3R0b21TdHlsZT86IFByb3BlcnR5LkJvcmRlckJvdHRvbVN0eWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItYm90dG9tLXdpZHRoYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSB3aWR0aCBvZiB0aGUgYm90dG9tIGJvcmRlciBvZiBhbiBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYDxsaW5lLXdpZHRoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWVkaXVtYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItYm90dG9tLXdpZHRoCiAgICovCiAgYm9yZGVyQm90dG9tV2lkdGg/OiBQcm9wZXJ0eS5Cb3JkZXJCb3R0b21XaWR0aDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWNvbGxhcHNlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgY2VsbHMgaW5zaWRlIGEgYDx0YWJsZT5gIGhhdmUgc2hhcmVkIG9yIHNlcGFyYXRlIGJvcmRlcnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgY29sbGFwc2UgfCBzZXBhcmF0ZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc2VwYXJhdGVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxLjIqKiB8ICoqMTIqKiB8ICoqNSoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1jb2xsYXBzZQogICAqLwogIGJvcmRlckNvbGxhcHNlPzogUHJvcGVydHkuQm9yZGVyQ29sbGFwc2UgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1lbmQtZW5kLXJhZGl1c2AqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyBhIGxvZ2ljYWwgYm9yZGVyIHJhZGl1cyBvbiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIHJhZGl1cyB0aGF0IGRlcGVuZHMgb24gdGhlIGVsZW1lbnQncyBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuIFRoaXMgaXMgdXNlZnVsIHdoZW4gYnVpbGRpbmcgc3R5bGVzIHRvIHdvcmsgcmVnYXJkbGVzcyBvZiB0aGUgdGV4dCBvcmllbnRhdGlvbiBhbmTCoHdyaXRpbmcgbW9kZS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoLXBlcmNlbnRhZ2U+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg5KiogfCAqKjY2KiogIHwgKioxNSoqIHwgKio4OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1lbmQtZW5kLXJhZGl1cwogICAqLwogIGJvcmRlckVuZEVuZFJhZGl1cz86IFByb3BlcnR5LkJvcmRlckVuZEVuZFJhZGl1czxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWVuZC1zdGFydC1yYWRpdXNgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgYSBsb2dpY2FsIGJvcmRlciByYWRpdXMgb24gYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIGJvcmRlciByYWRpdXPCoGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC7CoFRoaXMgaXMgdXNlZnVsIHdoZW4gYnVpbGRpbmcgc3R5bGVzIHRvIHdvcmsgcmVnYXJkbGVzcyBvZiB0aGUgdGV4dCBvcmllbnRhdGlvbiBhbmTCoHdyaXRpbmcgbW9kZS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoLXBlcmNlbnRhZ2U+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg5KiogfCAqKjY2KiogIHwgKioxNSoqIHwgKio4OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1lbmQtc3RhcnQtcmFkaXVzCiAgICovCiAgYm9yZGVyRW5kU3RhcnRSYWRpdXM/OiBQcm9wZXJ0eS5Cb3JkZXJFbmRTdGFydFJhZGl1czxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWltYWdlLW91dHNldGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgZGlzdGFuY2UgYnkgd2hpY2ggYW4gZWxlbWVudCdzIGJvcmRlciBpbWFnZSBpcyBzZXQgb3V0IGZyb20gaXRzIGJvcmRlciBib3guCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8bGVuZ3RoPiB8IDxudW1iZXI+IF17MSw0fWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqMTUqKiB8ICoqMTUqKiAgfCAqKjYqKiAgfCAqKjEyKiogfCAqKjExKiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWltYWdlLW91dHNldAogICAqLwogIGJvcmRlckltYWdlT3V0c2V0PzogUHJvcGVydHkuQm9yZGVySW1hZ2VPdXRzZXQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbWFnZS1yZXBlYXRgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgaG93IHRoZSBlZGdlIHJlZ2lvbnMgb2YgYSBzb3VyY2UgaW1hZ2UgYXJlIGFkanVzdGVkIHRvIGZpdCB0aGUgZGltZW5zaW9ucyBvZiBhbiBlbGVtZW50J3MgYm9yZGVyIGltYWdlLgogICAqCiAgICogKipTeW50YXgqKjogYFsgc3RyZXRjaCB8IHJlcGVhdCB8IHJvdW5kIHwgc3BhY2UgXXsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzdHJldGNoYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgKioxNSoqIHwgKioxNSoqICB8ICoqNioqICB8ICoqMTIqKiB8ICoqMTEqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItaW1hZ2UtcmVwZWF0CiAgICovCiAgYm9yZGVySW1hZ2VSZXBlYXQ/OiBQcm9wZXJ0eS5Cb3JkZXJJbWFnZVJlcGVhdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWltYWdlLXNsaWNlYCoqIENTUyBwcm9wZXJ0eSBkaXZpZGVzIHRoZSBpbWFnZSBzcGVjaWZpZWQgYnkgYGJvcmRlci1pbWFnZS1zb3VyY2VgIGludG8gcmVnaW9ucy4gVGhlc2UgcmVnaW9ucyBmb3JtIHRoZSBjb21wb25lbnRzIG9mIGFuIGVsZW1lbnQncyBib3JkZXIgaW1hZ2UuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPG51bWJlci1wZXJjZW50YWdlPnsxLDR9ICYmIGZpbGw/YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAxMDAlYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgKioxNSoqIHwgKioxNSoqICB8ICoqNioqICB8ICoqMTIqKiB8ICoqMTEqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItaW1hZ2Utc2xpY2UKICAgKi8KICBib3JkZXJJbWFnZVNsaWNlPzogUHJvcGVydHkuQm9yZGVySW1hZ2VTbGljZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWltYWdlLXNvdXJjZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgc291cmNlIGltYWdlIHVzZWQgdG8gY3JlYXRlIGFuIGVsZW1lbnQncyBib3JkZXIgaW1hZ2UuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxpbWFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjE1KiogfCAqKjE1KiogIHwgKio2KiogIHwgKioxMioqIHwgKioxMSoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1pbWFnZS1zb3VyY2UKICAgKi8KICBib3JkZXJJbWFnZVNvdXJjZT86IFByb3BlcnR5LkJvcmRlckltYWdlU291cmNlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItaW1hZ2Utd2lkdGhgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHdpZHRoIG9mIGFuIGVsZW1lbnQncyBib3JkZXIgaW1hZ2UuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8bGVuZ3RoLXBlcmNlbnRhZ2U+IHwgPG51bWJlcj4gfCBhdXRvIF17MSw0fWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqMTUqKiB8ICoqMTMqKiAgfCAqKjYqKiAgfCAqKjEyKiogfCAqKjExKiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWltYWdlLXdpZHRoCiAgICovCiAgYm9yZGVySW1hZ2VXaWR0aD86IFByb3BlcnR5LkJvcmRlckltYWdlV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbmxpbmUtY29sb3JgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGNvbG9yIG9mIHRoZSBsb2dpY2FsIGlubGluZSBib3JkZXJzIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBib3JkZXIgY29sb3IgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgYm9yZGVyLXRvcC1jb2xvcmAgYW5kIGBib3JkZXItYm90dG9tLWNvbG9yYCwgb3IgYGJvcmRlci1yaWdodC1jb2xvcmAgYW5kIGBib3JkZXItbGVmdC1jb2xvcmAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXRvcC1jb2xvcic+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGN1cnJlbnRjb2xvcmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg3KiogfCAqKjY2KiogIHwgKioxNC4xKiogfCAqKjg3KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWlubGluZS1jb2xvcgogICAqLwogIGJvcmRlcklubGluZUNvbG9yPzogUHJvcGVydHkuQm9yZGVySW5saW5lQ29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbmxpbmUtZW5kLWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBjb2xvciBvZiB0aGUgbG9naWNhbCBpbmxpbmUtZW5kIGJvcmRlciBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIGNvbG9yIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYGJvcmRlci10b3AtY29sb3JgLCBgYm9yZGVyLXJpZ2h0LWNvbG9yYCwgYGJvcmRlci1ib3R0b20tY29sb3JgLCBvciBgYm9yZGVyLWxlZnQtY29sb3JgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3AtY29sb3InPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY3VycmVudGNvbG9yYAogICAqCiAgICogfCBDaHJvbWUgfCAgICAgICAgICAgRmlyZWZveCAgICAgICAgICAgfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAgICAgICAgICAgKio0MSoqICAgICAgICAgICAgfCAqKjEyLjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAgICAgICAgfCAzIF8oLW1vei1ib3JkZXItZW5kLWNvbG9yKV8gfCAgICAgICAgICB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItaW5saW5lLWVuZC1jb2xvcgogICAqLwogIGJvcmRlcklubGluZUVuZENvbG9yPzogUHJvcGVydHkuQm9yZGVySW5saW5lRW5kQ29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbmxpbmUtZW5kLXN0eWxlYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBzdHlsZSBvZiB0aGUgbG9naWNhbCBpbmxpbmUgZW5kIGJvcmRlciBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIHN0eWxlIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYGJvcmRlci10b3Atc3R5bGVgLCBgYm9yZGVyLXJpZ2h0LXN0eWxlYCwgYGJvcmRlci1ib3R0b20tc3R5bGVgLCBvciBgYm9yZGVyLWxlZnQtc3R5bGVgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3Atc3R5bGUnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgICAgICAgICAgIEZpcmVmb3ggICAgICAgICAgIHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgICAgICAgICAgICoqNDEqKiAgICAgICAgICAgIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqIHwgICAgICAgIHwgMyBfKC1tb3otYm9yZGVyLWVuZC1zdHlsZSlfIHwgICAgICAgICAgfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWlubGluZS1lbmQtc3R5bGUKICAgKi8KICBib3JkZXJJbmxpbmVFbmRTdHlsZT86IFByb3BlcnR5LkJvcmRlcklubGluZUVuZFN0eWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItaW5saW5lLWVuZC13aWR0aGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgd2lkdGggb2YgdGhlIGxvZ2ljYWwgaW5saW5lLWVuZCBib3JkZXIgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIGJvcmRlciB3aWR0aCBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGBib3JkZXItdG9wLXdpZHRoYCwgYGJvcmRlci1yaWdodC13aWR0aGAsIGBib3JkZXItYm90dG9tLXdpZHRoYCwgb3IgYGJvcmRlci1sZWZ0LXdpZHRoYCBwcm9wZXJ0eSBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBkZWZpbmVkIGZvciBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItdG9wLXdpZHRoJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG1lZGl1bWAKICAgKgogICAqIHwgQ2hyb21lIHwgICAgICAgICAgIEZpcmVmb3ggICAgICAgICAgIHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgICAgICAgICAgICoqNDEqKiAgICAgICAgICAgIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqIHwgICAgICAgIHwgMyBfKC1tb3otYm9yZGVyLWVuZC13aWR0aClfIHwgICAgICAgICAgfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWlubGluZS1lbmQtd2lkdGgKICAgKi8KICBib3JkZXJJbmxpbmVFbmRXaWR0aD86IFByb3BlcnR5LkJvcmRlcklubGluZUVuZFdpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItaW5saW5lLXN0YXJ0LWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBjb2xvciBvZiB0aGUgbG9naWNhbCBpbmxpbmUgc3RhcnQgYm9yZGVyIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBib3JkZXIgY29sb3IgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgYm9yZGVyLXRvcC1jb2xvcmAsIGBib3JkZXItcmlnaHQtY29sb3JgLCBgYm9yZGVyLWJvdHRvbS1jb2xvcmAsIG9yIGBib3JkZXItbGVmdC1jb2xvcmAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXRvcC1jb2xvcic+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjdXJyZW50Y29sb3JgCiAgICoKICAgKiB8IENocm9tZSB8ICAgICAgICAgICAgRmlyZWZveCAgICAgICAgICAgIHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAgICAgICAgICAgICoqNDEqKiAgICAgICAgICAgICB8ICoqMTIuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKiB8ICAgICAgICB8IDMgXygtbW96LWJvcmRlci1zdGFydC1jb2xvcilfIHwgICAgICAgICAgfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWlubGluZS1zdGFydC1jb2xvcgogICAqLwogIGJvcmRlcklubGluZVN0YXJ0Q29sb3I/OiBQcm9wZXJ0eS5Cb3JkZXJJbmxpbmVTdGFydENvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItaW5saW5lLXN0YXJ0LXN0eWxlYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBzdHlsZSBvZiB0aGUgbG9naWNhbCBpbmxpbmUgc3RhcnQgYm9yZGVyIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBib3JkZXIgc3R5bGUgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgYm9yZGVyLXRvcC1zdHlsZWAsIGBib3JkZXItcmlnaHQtc3R5bGVgLCBgYm9yZGVyLWJvdHRvbS1zdHlsZWAsIG9yIGBib3JkZXItbGVmdC1zdHlsZWAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXRvcC1zdHlsZSc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCAgICAgICAgICAgIEZpcmVmb3ggICAgICAgICAgICB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgICAgICAgICAgICAqKjQxKiogICAgICAgICAgICAgfCAqKjEyLjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAgICAgICAgfCAzIF8oLW1vei1ib3JkZXItc3RhcnQtc3R5bGUpXyB8ICAgICAgICAgIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1pbmxpbmUtc3RhcnQtc3R5bGUKICAgKi8KICBib3JkZXJJbmxpbmVTdGFydFN0eWxlPzogUHJvcGVydHkuQm9yZGVySW5saW5lU3RhcnRTdHlsZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWlubGluZS1zdGFydC13aWR0aGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgd2lkdGggb2YgdGhlIGxvZ2ljYWwgaW5saW5lLXN0YXJ0IGJvcmRlciBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIHdpZHRoIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYGJvcmRlci10b3Atd2lkdGhgLCBgYm9yZGVyLXJpZ2h0LXdpZHRoYCwgYGJvcmRlci1ib3R0b20td2lkdGhgLCBvciBgYm9yZGVyLWxlZnQtd2lkdGhgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3Atd2lkdGgnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWVkaXVtYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNDEqKiAgfCAqKjEyLjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItaW5saW5lLXN0YXJ0LXdpZHRoCiAgICovCiAgYm9yZGVySW5saW5lU3RhcnRXaWR0aD86IFByb3BlcnR5LkJvcmRlcklubGluZVN0YXJ0V2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbmxpbmUtc3R5bGVgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIHN0eWxlIG9mIHRoZSBsb2dpY2FsIGlubGluZcKgYm9yZGVycyBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIHN0eWxlIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYGJvcmRlci10b3Atc3R5bGVgIGFuZMKgYGJvcmRlci1ib3R0b20tc3R5bGVgLCBvcsKgYGJvcmRlci1sZWZ0LXN0eWxlYCBhbmTCoGBib3JkZXItcmlnaHQtc3R5bGVgIHByb3BlcnRpZXPCoGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3Atc3R5bGUnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg3KiogfCAqKjY2KiogIHwgKioxNC4xKiogfCAqKjg3KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWlubGluZS1zdHlsZQogICAqLwogIGJvcmRlcklubGluZVN0eWxlPzogUHJvcGVydHkuQm9yZGVySW5saW5lU3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbmxpbmUtd2lkdGhgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIHdpZHRoIG9mIHRoZSBsb2dpY2FsIGlubGluZcKgYm9yZGVycyBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIHdpZHRoIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYGJvcmRlci10b3Atd2lkdGhgIGFuZMKgYGJvcmRlci1ib3R0b20td2lkdGhgLCBvciBgYm9yZGVyLWxlZnQtd2lkdGhgLCBhbmTCoGBib3JkZXItcmlnaHQtd2lkdGhgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3Atd2lkdGgnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWVkaXVtYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODcqKiB8ICoqNjYqKiAgfCAqKjE0LjEqKiB8ICoqODcqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItaW5saW5lLXdpZHRoCiAgICovCiAgYm9yZGVySW5saW5lV2lkdGg/OiBQcm9wZXJ0eS5Cb3JkZXJJbmxpbmVXaWR0aDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWxlZnQtY29sb3JgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGNvbG9yIG9mIGFuIGVsZW1lbnQncyBsZWZ0IGJvcmRlci4gSXQgY2FuIGFsc28gYmUgc2V0IHdpdGggdGhlIHNob3J0aGFuZCBDU1MgcHJvcGVydGllcyBgYm9yZGVyLWNvbG9yYCBvciBgYm9yZGVyLWxlZnRgLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGN1cnJlbnRjb2xvcmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWxlZnQtY29sb3IKICAgKi8KICBib3JkZXJMZWZ0Q29sb3I/OiBQcm9wZXJ0eS5Cb3JkZXJMZWZ0Q29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1sZWZ0LXN0eWxlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBsaW5lIHN0eWxlIG9mIGFuIGVsZW1lbnQncyBsZWZ0IGBib3JkZXJgLgogICAqCiAgICogKipTeW50YXgqKjogYDxsaW5lLXN0eWxlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNS41KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWxlZnQtc3R5bGUKICAgKi8KICBib3JkZXJMZWZ0U3R5bGU/OiBQcm9wZXJ0eS5Cb3JkZXJMZWZ0U3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1sZWZ0LXdpZHRoYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSB3aWR0aCBvZiB0aGUgbGVmdCBib3JkZXIgb2YgYW4gZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGluZS13aWR0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG1lZGl1bWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWxlZnQtd2lkdGgKICAgKi8KICBib3JkZXJMZWZ0V2lkdGg/OiBQcm9wZXJ0eS5Cb3JkZXJMZWZ0V2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1yaWdodC1jb2xvcmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgY29sb3Igb2YgYW4gZWxlbWVudCdzIHJpZ2h0IGJvcmRlci4gSXQgY2FuIGFsc28gYmUgc2V0IHdpdGggdGhlIHNob3J0aGFuZCBDU1MgcHJvcGVydGllcyBgYm9yZGVyLWNvbG9yYCBvciBgYm9yZGVyLXJpZ2h0YC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjdXJyZW50Y29sb3JgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1yaWdodC1jb2xvcgogICAqLwogIGJvcmRlclJpZ2h0Q29sb3I/OiBQcm9wZXJ0eS5Cb3JkZXJSaWdodENvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItcmlnaHQtc3R5bGVgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGxpbmUgc3R5bGUgb2YgYW4gZWxlbWVudCdzIHJpZ2h0IGBib3JkZXJgLgogICAqCiAgICogKipTeW50YXgqKjogYDxsaW5lLXN0eWxlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNS41KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLXJpZ2h0LXN0eWxlCiAgICovCiAgYm9yZGVyUmlnaHRTdHlsZT86IFByb3BlcnR5LkJvcmRlclJpZ2h0U3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1yaWdodC13aWR0aGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgd2lkdGggb2YgdGhlIHJpZ2h0IGJvcmRlciBvZiBhbiBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYDxsaW5lLXdpZHRoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWVkaXVtYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItcmlnaHQtd2lkdGgKICAgKi8KICBib3JkZXJSaWdodFdpZHRoPzogUHJvcGVydHkuQm9yZGVyUmlnaHRXaWR0aDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLXNwYWNpbmdgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGRpc3RhbmNlIGJldHdlZW4gdGhlIGJvcmRlcnMgb2YgYWRqYWNlbnQgYDx0YWJsZT5gIGNlbGxzLiBUaGlzIHByb3BlcnR5IGFwcGxpZXMgb25seSB3aGVuIGBib3JkZXItY29sbGFwc2VgIGlzIGBzZXBhcmF0ZWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD4gPGxlbmd0aD4/YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjgqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItc3BhY2luZwogICAqLwogIGJvcmRlclNwYWNpbmc/OiBQcm9wZXJ0eS5Cb3JkZXJTcGFjaW5nPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItc3RhcnQtZW5kLXJhZGl1c2AqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyBhIGxvZ2ljYWwgYm9yZGVyIHJhZGl1cyBvbiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIHJhZGl1c8KgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3MgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLsKgVGhpcyBpcyB1c2VmdWwgd2hlbiBidWlsZGluZyBzdHlsZXMgdG8gd29yayByZWdhcmRsZXNzIG9mIHRoZSB0ZXh0IG9yaWVudGF0aW9uIGFuZMKgd3JpdGluZyBtb2RlLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGgtcGVyY2VudGFnZT57MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODkqKiB8ICoqNjYqKiAgfCAqKjE1KiogfCAqKjg5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLXN0YXJ0LWVuZC1yYWRpdXMKICAgKi8KICBib3JkZXJTdGFydEVuZFJhZGl1cz86IFByb3BlcnR5LkJvcmRlclN0YXJ0RW5kUmFkaXVzPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItc3RhcnQtc3RhcnQtcmFkaXVzYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIGEgbG9naWNhbCBib3JkZXIgcmFkaXVzIG9uIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBib3JkZXIgcmFkaXVzIHRoYXQgZGVwZW5kcyBvbiB0aGUgZWxlbWVudCdzIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4gVGhpcyBpcyB1c2VmdWwgd2hlbiBidWlsZGluZyBzdHlsZXMgdG8gd29yayByZWdhcmRsZXNzIG9mIHRoZSB0ZXh0IG9yaWVudGF0aW9uIGFuZMKgd3JpdGluZyBtb2RlLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGgtcGVyY2VudGFnZT57MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODkqKiB8ICoqNjYqKiAgfCAqKjE1KiogfCAqKjg5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLXN0YXJ0LXN0YXJ0LXJhZGl1cwogICAqLwogIGJvcmRlclN0YXJ0U3RhcnRSYWRpdXM/OiBQcm9wZXJ0eS5Cb3JkZXJTdGFydFN0YXJ0UmFkaXVzPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItdG9wLWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBjb2xvciBvZiBhbiBlbGVtZW50J3MgdG9wIGJvcmRlci4gSXQgY2FuIGFsc28gYmUgc2V0IHdpdGggdGhlIHNob3J0aGFuZCBDU1MgcHJvcGVydGllcyBgYm9yZGVyLWNvbG9yYCBvciBgYm9yZGVyLXRvcGAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGNvbG9yPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY3VycmVudGNvbG9yYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItdG9wLWNvbG9yCiAgICovCiAgYm9yZGVyVG9wQ29sb3I/OiBQcm9wZXJ0eS5Cb3JkZXJUb3BDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1c2AqKiBDU1MgcHJvcGVydHkgcm91bmRzIHRoZSB0b3AtbGVmdCBjb3JuZXIgb2YgYW4gZWxlbWVudCBieSBzcGVjaWZ5aW5nIHRoZSByYWRpdXMgKG9yIHRoZSByYWRpdXMgb2YgdGhlIHNlbWktbWFqb3IgYW5kIHNlbWktbWlub3IgYXhlcykgb2YgdGhlIGVsbGlwc2UgZGVmaW5pbmcgdGhlIGN1cnZhdHVyZSBvZiB0aGUgY29ybmVyLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGgtcGVyY2VudGFnZT57MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgICoqNCoqICB8ICAqKjQqKiAgfCAgKio1KiogIHwgKioxMioqIHwgKio5KiogfAogICAqIHwgMSBfLXgtXyB8ICAgICAgICAgfCAzIF8teC1fIHwgICAgICAgIHwgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLXRvcC1sZWZ0LXJhZGl1cwogICAqLwogIGJvcmRlclRvcExlZnRSYWRpdXM/OiBQcm9wZXJ0eS5Cb3JkZXJUb3BMZWZ0UmFkaXVzPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItdG9wLXJpZ2h0LXJhZGl1c2AqKiBDU1MgcHJvcGVydHkgcm91bmRzIHRoZSB0b3AtcmlnaHQgY29ybmVyIG9mIGFuIGVsZW1lbnQgYnkgc3BlY2lmeWluZyB0aGUgcmFkaXVzIChvciB0aGUgcmFkaXVzIG9mIHRoZSBzZW1pLW1ham9yIGFuZCBzZW1pLW1pbm9yIGF4ZXMpIG9mIHRoZSBlbGxpcHNlIGRlZmluaW5nIHRoZSBjdXJ2YXR1cmUgb2YgdGhlIGNvcm5lci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoLXBlcmNlbnRhZ2U+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICAqKjQqKiAgfCAgKio0KiogIHwgICoqNSoqICB8ICoqMTIqKiB8ICoqOSoqIHwKICAgKiB8IDEgXy14LV8gfCAgICAgICAgIHwgMyBfLXgtXyB8ICAgICAgICB8ICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci10b3AtcmlnaHQtcmFkaXVzCiAgICovCiAgYm9yZGVyVG9wUmlnaHRSYWRpdXM/OiBQcm9wZXJ0eS5Cb3JkZXJUb3BSaWdodFJhZGl1czxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLXRvcC1zdHlsZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbGluZSBzdHlsZSBvZiBhbiBlbGVtZW50J3MgdG9wIGBib3JkZXJgLgogICAqCiAgICogKipTeW50YXgqKjogYDxsaW5lLXN0eWxlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNS41KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLXRvcC1zdHlsZQogICAqLwogIGJvcmRlclRvcFN0eWxlPzogUHJvcGVydHkuQm9yZGVyVG9wU3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci10b3Atd2lkdGhgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHdpZHRoIG9mIHRoZSB0b3AgYm9yZGVyIG9mIGFuIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxpbmUtd2lkdGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBtZWRpdW1gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci10b3Atd2lkdGgKICAgKi8KICBib3JkZXJUb3BXaWR0aD86IFByb3BlcnR5LkJvcmRlclRvcFdpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3R0b21gKiogQ1NTIHByb3BlcnR5IHBhcnRpY2lwYXRlcyBpbiBzZXR0aW5nIHRoZSB2ZXJ0aWNhbCBwb3NpdGlvbiBvZiBhIHBvc2l0aW9uZWQgZWxlbWVudC4gSXQgaGFzIG5vIGVmZmVjdCBvbiBub24tcG9zaXRpb25lZCBlbGVtZW50cy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPiB8IDxwZXJjZW50YWdlPiB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNSoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvdHRvbQogICAqLwogIGJvdHRvbT86IFByb3BlcnR5LkJvdHRvbTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LWRlY29yYXRpb24tYnJlYWtgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyBob3cgYW4gZWxlbWVudCdzIGZyYWdtZW50cyBzaG91bGQgYmUgcmVuZGVyZWQgd2hlbiBicm9rZW4gYWNyb3NzIG11bHRpcGxlIGxpbmVzLCBjb2x1bW5zLCBvciBwYWdlcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBzbGljZSB8IGNsb25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzbGljZWAKICAgKgogICAqIHwgICAgQ2hyb21lICAgIHwgRmlyZWZveCB8ICAgU2FmYXJpICAgIHwgICAgIEVkZ2UgICAgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tOiB8IDotOiB8CiAgICogfCAqKjIyKiogXy14LV8gfCAqKjMyKiogIHwgKio3KiogXy14LV8gfCAqKjc5KiogXy14LV8gfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm94LWRlY29yYXRpb24tYnJlYWsKICAgKi8KICBib3hEZWNvcmF0aW9uQnJlYWs/OiBQcm9wZXJ0eS5Cb3hEZWNvcmF0aW9uQnJlYWsgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJveC1zaGFkb3dgKiogQ1NTIHByb3BlcnR5IGFkZHMgc2hhZG93IGVmZmVjdHMgYXJvdW5kIGFuIGVsZW1lbnQncyBmcmFtZS4gWW91IGNhbiBzZXQgbXVsdGlwbGUgZWZmZWN0cyBzZXBhcmF0ZWQgYnkgY29tbWFzLiBBIGJveCBzaGFkb3cgaXMgZGVzY3JpYmVkIGJ5IFggYW5kIFkgb2Zmc2V0cyByZWxhdGl2ZSB0byB0aGUgZWxlbWVudCwgYmx1ciBhbmQgc3ByZWFkIHJhZGl1cywgYW5kIGNvbG9yLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8c2hhZG93PiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMTAqKiAgfCAgKio0KiogIHwgKio1LjEqKiB8ICoqMTIqKiB8ICoqOSoqIHwKICAgKiB8IDEgXy14LV8gfCAgICAgICAgIHwgMyBfLXgtXyB8ICAgICAgICB8ICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JveC1zaGFkb3cKICAgKi8KICBib3hTaGFkb3c/OiBQcm9wZXJ0eS5Cb3hTaGFkb3cgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJveC1zaXppbmdgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IHRoZSB0b3RhbCB3aWR0aCBhbmQgaGVpZ2h0IG9mIGFuIGVsZW1lbnQgaXMgY2FsY3VsYXRlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBjb250ZW50LWJveCB8IGJvcmRlci1ib3hgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGNvbnRlbnQtYm94YAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEwKiogIHwgKioyOSoqICB8ICoqNS4xKiogfCAqKjEyKiogfCAqKjgqKiB8CiAgICogfCAxIF8teC1fIHwgMSBfLXgtXyB8IDMgXy14LV8gfCAgICAgICAgfCAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3gtc2l6aW5nCiAgICovCiAgYm94U2l6aW5nPzogUHJvcGVydHkuQm94U2l6aW5nIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBicmVhay1hZnRlcmAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgcGFnZSwgY29sdW1uLCBvciByZWdpb24gYnJlYWtzIHNob3VsZCBiZWhhdmUgYWZ0ZXIgYSBnZW5lcmF0ZWQgYm94LiBJZiB0aGVyZSBpcyBubyBnZW5lcmF0ZWQgYm94LCB0aGUgcHJvcGVydHkgaXMgaWdub3JlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgYXZvaWQgfCBhbHdheXMgfCBhbGwgfCBhdm9pZC1wYWdlIHwgcGFnZSB8IGxlZnQgfCByaWdodCB8IHJlY3RvIHwgdmVyc28gfCBhdm9pZC1jb2x1bW4gfCBjb2x1bW4gfCBhdm9pZC1yZWdpb24gfCByZWdpb25gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiAtLS0KICAgKgogICAqIF9TdXBwb3J0ZWQgaW4gTXVsdGktY29sdW1uIExheW91dF8KICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNTAqKiB8ICoqNjUqKiAgfCAgIE5vICAgfCAqKjEyKiogfCAqKjEwKiogfAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIFBhZ2VkIE1lZGlhXwogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgKio1MCoqIHwgKio2NSoqICB8ICoqMTAqKiB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICoKICAgKiAtLS0KICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JyZWFrLWFmdGVyCiAgICovCiAgYnJlYWtBZnRlcj86IFByb3BlcnR5LkJyZWFrQWZ0ZXIgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJyZWFrLWJlZm9yZWAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgcGFnZSwgY29sdW1uLCBvciByZWdpb24gYnJlYWtzIHNob3VsZCBiZWhhdmUgYmVmb3JlIGEgZ2VuZXJhdGVkIGJveC4gSWYgdGhlcmUgaXMgbm8gZ2VuZXJhdGVkIGJveCwgdGhlIHByb3BlcnR5IGlzIGlnbm9yZWQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IGF2b2lkIHwgYWx3YXlzIHwgYWxsIHwgYXZvaWQtcGFnZSB8IHBhZ2UgfCBsZWZ0IHwgcmlnaHQgfCByZWN0byB8IHZlcnNvIHwgYXZvaWQtY29sdW1uIHwgY29sdW1uIHwgYXZvaWQtcmVnaW9uIHwgcmVnaW9uYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIE11bHRpLWNvbHVtbiBMYXlvdXRfCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjUwKiogfCAqKjY1KiogIHwgICBObyAgIHwgKioxMioqIHwgKioxMCoqIHwKICAgKgogICAqIC0tLQogICAqCiAgICogX1N1cHBvcnRlZCBpbiBQYWdlZCBNZWRpYV8KICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNTAqKiB8ICoqNjUqKiAgfCAqKjEwKiogfCAqKjEyKiogfCAqKjEwKiogfAogICAqCiAgICogLS0tCiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9icmVhay1iZWZvcmUKICAgKi8KICBicmVha0JlZm9yZT86IFByb3BlcnR5LkJyZWFrQmVmb3JlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBicmVhay1pbnNpZGVgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IHBhZ2UsIGNvbHVtbiwgb3IgcmVnaW9uIGJyZWFrcyBzaG91bGQgYmVoYXZlIGluc2lkZSBhIGdlbmVyYXRlZCBib3guIElmIHRoZXJlIGlzIG5vIGdlbmVyYXRlZCBib3gsIHRoZSBwcm9wZXJ0eSBpcyBpZ25vcmVkLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBhdm9pZCB8IGF2b2lkLXBhZ2UgfCBhdm9pZC1jb2x1bW4gfCBhdm9pZC1yZWdpb25gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiAtLS0KICAgKgogICAqIF9TdXBwb3J0ZWQgaW4gTXVsdGktY29sdW1uIExheW91dF8KICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNTAqKiB8ICoqNjUqKiAgfCAqKjEwKiogfCAqKjEyKiogfCAqKjEwKiogfAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIFBhZ2VkIE1lZGlhXwogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgKio1MCoqIHwgKio2NSoqICB8ICoqMTAqKiB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICoKICAgKiAtLS0KICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JyZWFrLWluc2lkZQogICAqLwogIGJyZWFrSW5zaWRlPzogUHJvcGVydHkuQnJlYWtJbnNpZGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNhcHRpb24tc2lkZWAqKiBDU1MgcHJvcGVydHkgcHV0cyB0aGUgY29udGVudCBvZiBhIHRhYmxlJ3MgYDxjYXB0aW9uPmAgb24gdGhlIHNwZWNpZmllZCBzaWRlLiBUaGUgdmFsdWVzIGFyZSByZWxhdGl2ZSB0byB0aGUgYHdyaXRpbmctbW9kZWAgb2YgdGhlIHRhYmxlLgogICAqCiAgICogKipTeW50YXgqKjogYHRvcCB8IGJvdHRvbSB8IGJsb2NrLXN0YXJ0IHwgYmxvY2stZW5kIHwgaW5saW5lLXN0YXJ0IHwgaW5saW5lLWVuZGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgdG9wYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjgqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9jYXB0aW9uLXNpZGUKICAgKi8KICBjYXB0aW9uU2lkZT86IFByb3BlcnR5LkNhcHRpb25TaWRlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjYXJldC1jb2xvcmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgY29sb3Igb2YgdGhlICoqaW5zZXJ0aW9uIGNhcmV0KiosIHRoZSB2aXNpYmxlIG1hcmtlciB3aGVyZSB0aGUgbmV4dCBjaGFyYWN0ZXIgdHlwZWQgd2lsbCBiZSBpbnNlcnRlZC4gVGhpcyBpcyBzb21ldGltZXMgcmVmZXJyZWQgdG8gYXMgdGhlICoqdGV4dCBpbnB1dCBjdXJzb3IqKi4gVGhlIGNhcmV0IGFwcGVhcnMgaW4gZWxlbWVudHMgc3VjaCBhcyBgPGlucHV0PmAgb3IgdGhvc2Ugd2l0aCB0aGUgYGNvbnRlbnRlZGl0YWJsZWAgYXR0cmlidXRlLiBUaGUgY2FyZXQgaXMgdHlwaWNhbGx5IGEgdGhpbiB2ZXJ0aWNhbCBsaW5lIHRoYXQgZmxhc2hlcyB0byBoZWxwIG1ha2UgaXQgbW9yZSBub3RpY2VhYmxlLiBCeSBkZWZhdWx0LCBpdCBpcyBibGFjaywgYnV0IGl0cyBjb2xvciBjYW4gYmUgYWx0ZXJlZCB3aXRoIHRoaXMgcHJvcGVydHkuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio1NyoqIHwgKio1MyoqICB8ICoqMTEuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2NhcmV0LWNvbG9yCiAgICovCiAgY2FyZXRDb2xvcj86IFByb3BlcnR5LkNhcmV0Q29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNsZWFyYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgYW4gZWxlbWVudCBtdXN0IGJlIG1vdmVkIGJlbG93IChjbGVhcmVkKSBmbG9hdGluZyBlbGVtZW50cyB0aGF0IHByZWNlZGUgaXQuIFRoZSBgY2xlYXJgIHByb3BlcnR5IGFwcGxpZXMgdG8gZmxvYXRpbmcgYW5kIG5vbi1mbG9hdGluZyBlbGVtZW50cy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgbGVmdCB8IHJpZ2h0IHwgYm90aCB8IGlubGluZS1zdGFydCB8IGlubGluZS1lbmRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2NsZWFyCiAgICovCiAgY2xlYXI/OiBQcm9wZXJ0eS5DbGVhciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYCoqY2xpcC1wYXRoKipgIENTUyBwcm9wZXJ0eSBjcmVhdGVzIGEgY2xpcHBpbmcgcmVnaW9uIHRoYXQgc2V0cyB3aGF0IHBhcnQgb2YgYW4gZWxlbWVudCBzaG91bGQgYmUgc2hvd24uIFBhcnRzIHRoYXQgYXJlIGluc2lkZSB0aGUgcmVnaW9uIGFyZSBzaG93biwgd2hpbGUgdGhvc2Ugb3V0c2lkZSBhcmUgaGlkZGVuLgogICAqCiAgICogKipTeW50YXgqKjogYDxjbGlwLXNvdXJjZT4gfCBbIDxiYXNpYy1zaGFwZT4gfHwgPGdlb21ldHJ5LWJveD4gXSB8IG5vbmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8ICBDaHJvbWUgIHwgRmlyZWZveCB8ICBTYWZhcmkgICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgICoqNTUqKiAgfCAqKjMuNSoqIHwgICoqOS4xKiogIHwgKioxMioqIHwgKioxMCoqIHwKICAgKiB8IDIzIF8teC1fIHwgICAgICAgICB8IDYuMSBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9jbGlwLXBhdGgKICAgKi8KICBjbGlwUGF0aD86IFByb3BlcnR5LkNsaXBQYXRoIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2xvcmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgZm9yZWdyb3VuZCBjb2xvciB2YWx1ZSBvZiBhbiBlbGVtZW50J3MgdGV4dCBhbmQgdGV4dCBkZWNvcmF0aW9ucywgYW5kIHNldHMgdGhlIGA8Y3VycmVudGNvbG9yPmAgdmFsdWUuIGBjdXJyZW50Y29sb3JgIG1heSBiZSB1c2VkIGFzIGFuIGluZGlyZWN0IHZhbHVlIG9uIF9vdGhlcl8gcHJvcGVydGllcyBhbmQgaXMgdGhlIGRlZmF1bHQgZm9yIG90aGVyIGNvbG9yIHByb3BlcnRpZXMsIHN1Y2ggYXMgYGJvcmRlci1jb2xvcmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGNvbG9yPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBWYXJpZXMgZnJvbSBvbmUgYnJvd3NlciB0byBhbm90aGVyCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqMyoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2NvbG9yCiAgICovCiAgY29sb3I/OiBQcm9wZXJ0eS5Db2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sb3ItYWRqdXN0YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoYXQsIGlmIGFueXRoaW5nLCB0aGUgdXNlciBhZ2VudCBtYXkgZG8gdG8gb3B0aW1pemUgdGhlIGFwcGVhcmFuY2Ugb2YgdGhlIGVsZW1lbnQgb24gdGhlIG91dHB1dCBkZXZpY2UuIEJ5IGRlZmF1bHQsIHRoZSBicm93c2VyIGlzIGFsbG93ZWQgdG8gbWFrZSBhbnkgYWRqdXN0bWVudHMgdG8gdGhlIGVsZW1lbnQncyBhcHBlYXJhbmNlIGl0IGRldGVybWluZXMgdG8gYmUgbmVjZXNzYXJ5IGFuZCBwcnVkZW50IGdpdmVuIHRoZSB0eXBlIGFuZCBjYXBhYmlsaXRpZXMgb2YgdGhlIG91dHB1dCBkZXZpY2UuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgZWNvbm9teSB8IGV4YWN0YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBlY29ub215YAogICAqCiAgICogfCAgICAgICAgICAgICAgICBDaHJvbWUgICAgICAgICAgICAgICAgIHwgRmlyZWZveCB8ICAgICAgICAgICAgICAgIFNhZmFyaSAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICBFZGdlICAgICAgICAgICAgICAgICAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi06IHwKICAgKiB8ICoqNDkqKiBfKC13ZWJraXQtcHJpbnQtY29sb3ItYWRqdXN0KV8gfCAqKjQ4KiogIHwgKio2KiogXygtd2Via2l0LXByaW50LWNvbG9yLWFkanVzdClfIHwgKio3OSoqIF8oLXdlYmtpdC1wcmludC1jb2xvci1hZGp1c3QpXyB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9jb2xvci1hZGp1c3QKICAgKi8KICBjb2xvckFkanVzdD86IFByb3BlcnR5LkNvbG9yQWRqdXN0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2xvci1zY2hlbWVgKiogQ1NTIHByb3BlcnR5IGFsbG93cyBhbiBlbGVtZW50IHRvIGluZGljYXRlIHdoaWNoIGNvbG9yIHNjaGVtZXMgaXQgY2FuIGNvbWZvcnRhYmx5IGJlIHJlbmRlcmVkIGluLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IFsgbGlnaHQgfCBkYXJrIHwgPGN1c3RvbS1pZGVudD4gXStgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODEqKiB8ICAgTm8gICAgfCAqKjEzKiogfCAqKjgxKiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvY29sb3Itc2NoZW1lCiAgICovCiAgY29sb3JTY2hlbWU/OiBQcm9wZXJ0eS5Db2xvclNjaGVtZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uLWNvdW50YCoqIENTUyBwcm9wZXJ0eSBicmVha3MgYW4gZWxlbWVudCdzIGNvbnRlbnQgaW50byB0aGUgc3BlY2lmaWVkIG51bWJlciBvZiBjb2x1bW5zLgogICAqCiAgICogKipTeW50YXgqKjogYDxpbnRlZ2VyPiB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgKio1MCoqICB8ICoqNTIqKiAgfCAgKio5KiogIHwgKioxMioqIHwgKioxMCoqIHwKICAgKiB8IDEgXy14LV8gfCAgICAgICAgIHwgMyBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9jb2x1bW4tY291bnQKICAgKi8KICBjb2x1bW5Db3VudD86IFByb3BlcnR5LkNvbHVtbkNvdW50IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2x1bW4tZmlsbGAqKiBDU1MgcHJvcGVydHkgY29udHJvbHMgaG93IGFuIGVsZW1lbnQncyBjb250ZW50cyBhcmUgYmFsYW5jZWQgd2hlbiBicm9rZW4gaW50byBjb2x1bW5zLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBiYWxhbmNlIHwgYmFsYW5jZS1hbGxgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGJhbGFuY2VgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNTAqKiB8ICoqNTIqKiAgfCAgKio5KiogIHwgKioxMioqIHwgKioxMCoqIHwKICAgKiB8ICAgICAgICB8ICAgICAgICAgfCA4IF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2NvbHVtbi1maWxsCiAgICovCiAgY29sdW1uRmlsbD86IFByb3BlcnR5LkNvbHVtbkZpbGwgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi1nYXBgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHNpemUgb2YgdGhlIGdhcCAoZ3V0dGVyKSBiZXR3ZWVuIGFuIGVsZW1lbnQncyBjb2x1bW5zLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IDxsZW5ndGgtcGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIC0tLQogICAqCiAgICogX1N1cHBvcnRlZCBpbiBGbGV4IExheW91dF8KICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg0KiogfCAqKjYzKiogIHwgKioxNC4xKiogfCAqKjg0KiogfCBObyAgfAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIEdyaWQgTGF5b3V0XwogICAqCiAgICogfCAgICAgICAgIENocm9tZSAgICAgICAgIHwgICAgICAgIEZpcmVmb3ggICAgICAgICB8ICAgICAgICAgIFNhZmFyaSAgICAgICAgICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAgICAgICAgICoqNjYqKiAgICAgICAgIHwgICAgICAgICAqKjYxKiogICAgICAgICB8ICAgICAgICAgICoqMTIqKiAgICAgICAgICB8ICoqMTYqKiB8IE5vICB8CiAgICogfCA1NyBfKGdyaWQtY29sdW1uLWdhcClfIHwgNTIgXyhncmlkLWNvbHVtbi1nYXApXyB8IDEwLjEgXyhncmlkLWNvbHVtbi1nYXApXyB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiAtLS0KICAgKgogICAqIF9TdXBwb3J0ZWQgaW4gTXVsdGktY29sdW1uIExheW91dF8KICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjUwKiogIHwgKio1MioqICB8ICoqMTAqKiAgfCAqKjEyKiogfCAqKjEwKiogfAogICAqIHwgMSBfLXgtXyB8ICAgICAgICAgfCAzIF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIC0tLQogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvY29sdW1uLWdhcAogICAqLwogIGNvbHVtbkdhcD86IFByb3BlcnR5LkNvbHVtbkdhcDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uLXJ1bGUtY29sb3JgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGNvbG9yIG9mIHRoZSBsaW5lIGRyYXduIGJldHdlZW4gY29sdW1ucyBpbiBhIG11bHRpLWNvbHVtbiBsYXlvdXQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGNvbG9yPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY3VycmVudGNvbG9yYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNTAqKiAgfCAqKjUyKiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAxIF8teC1fIHwgICAgICAgICB8IDMgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvY29sdW1uLXJ1bGUtY29sb3IKICAgKi8KICBjb2x1bW5SdWxlQ29sb3I/OiBQcm9wZXJ0eS5Db2x1bW5SdWxlQ29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi1ydWxlLXN0eWxlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBzdHlsZSBvZiB0aGUgbGluZSBkcmF3biBiZXR3ZWVuIGNvbHVtbnMgaW4gYSBtdWx0aS1jb2x1bW4gbGF5b3V0LgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXN0eWxlJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgKio1MCoqICB8ICoqNTIqKiAgfCAgKio5KiogIHwgKioxMioqIHwgKioxMCoqIHwKICAgKiB8IDEgXy14LV8gfCAgICAgICAgIHwgMyBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9jb2x1bW4tcnVsZS1zdHlsZQogICAqLwogIGNvbHVtblJ1bGVTdHlsZT86IFByb3BlcnR5LkNvbHVtblJ1bGVTdHlsZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uLXJ1bGUtd2lkdGhgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHdpZHRoIG9mIHRoZSBsaW5lIGRyYXduIGJldHdlZW4gY29sdW1ucyBpbiBhIG11bHRpLWNvbHVtbiBsYXlvdXQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItd2lkdGgnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWVkaXVtYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNTAqKiAgfCAqKjUyKiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAxIF8teC1fIHwgICAgICAgICB8IDMgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvY29sdW1uLXJ1bGUtd2lkdGgKICAgKi8KICBjb2x1bW5SdWxlV2lkdGg/OiBQcm9wZXJ0eS5Db2x1bW5SdWxlV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi1zcGFuYCoqIENTUyBwcm9wZXJ0eSBtYWtlcyBpdCBwb3NzaWJsZSBmb3IgYW4gZWxlbWVudCB0byBzcGFuIGFjcm9zcyBhbGwgY29sdW1ucyB3aGVuIGl0cyB2YWx1ZSBpcyBzZXQgdG8gYGFsbGAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IGFsbGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCAgU2FmYXJpICAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgKio1MCoqICB8ICoqNzEqKiAgfCAgICoqOSoqICAgfCAqKjEyKiogfCAqKjEwKiogfAogICAqIHwgNiBfLXgtXyB8ICAgICAgICAgfCA1LjEgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvY29sdW1uLXNwYW4KICAgKi8KICBjb2x1bW5TcGFuPzogUHJvcGVydHkuQ29sdW1uU3BhbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uLXdpZHRoYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBpZGVhbCBjb2x1bW4gd2lkdGggaW4gYSBtdWx0aS1jb2x1bW4gbGF5b3V0LiBUaGUgY29udGFpbmVyIHdpbGwgaGF2ZSBhcyBtYW55IGNvbHVtbnMgYXMgY2FuIGZpdCB3aXRob3V0IGFueSBvZiB0aGVtIGhhdmluZyBhIHdpZHRoIGxlc3MgdGhhbiB0aGUgYGNvbHVtbi13aWR0aGAgdmFsdWUuIElmIHRoZSB3aWR0aCBvZiB0aGUgY29udGFpbmVyIGlzIG5hcnJvd2VyIHRoYW4gdGhlIHNwZWNpZmllZCB2YWx1ZSwgdGhlIHNpbmdsZSBjb2x1bW4ncyB3aWR0aCB3aWxsIGJlIHNtYWxsZXIgdGhhbiB0aGUgZGVjbGFyZWQgY29sdW1uIHdpZHRoLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+IHwgYXV0b2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjUwKiogIHwgKio1MCoqICB8ICAqKjkqKiAgfCAqKjEyKiogfCAqKjEwKiogfAogICAqIHwgMSBfLXgtXyB8ICAgICAgICAgfCAzIF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2NvbHVtbi13aWR0aAogICAqLwogIGNvbHVtbldpZHRoPzogUHJvcGVydHkuQ29sdW1uV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbnRhaW5gKiogQ1NTIHByb3BlcnR5IGFsbG93cyBhbiBhdXRob3IgdG8gaW5kaWNhdGUgdGhhdCBhbiBlbGVtZW50IGFuZCBpdHMgY29udGVudHMgYXJlLCBhcyBtdWNoIGFzIHBvc3NpYmxlLCBfaW5kZXBlbmRlbnRfIG9mIHRoZSByZXN0IG9mIHRoZSBkb2N1bWVudCB0cmVlLiBUaGlzIGFsbG93cyB0aGUgYnJvd3NlciB0byByZWNhbGN1bGF0ZSBsYXlvdXQsIHN0eWxlLCBwYWludCwgc2l6ZSwgb3IgYW55IGNvbWJpbmF0aW9uIG9mIHRoZW0gZm9yIGEgbGltaXRlZCBhcmVhIG9mIHRoZSBET00gYW5kIG5vdCB0aGUgZW50aXJlIHBhZ2UsIGxlYWRpbmcgdG8gb2J2aW91cyBwZXJmb3JtYW5jZSBiZW5lZml0cy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgc3RyaWN0IHwgY29udGVudCB8IFsgc2l6ZSB8fCBsYXlvdXQgfHwgc3R5bGUgfHwgcGFpbnQgXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTIqKiB8ICoqNjkqKiAgfCAgIE5vICAgfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvY29udGFpbgogICAqLwogIGNvbnRhaW4/OiBQcm9wZXJ0eS5Db250YWluIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb250ZW50YCoqIENTUyBwcm9wZXJ0eSByZXBsYWNlcyBhbiBlbGVtZW50IHdpdGggYSBnZW5lcmF0ZWQgdmFsdWUuIE9iamVjdHMgaW5zZXJ0ZWQgdXNpbmcgdGhlIGBjb250ZW50YCBwcm9wZXJ0eSBhcmUgKiphbm9ueW1vdXMgcmVwbGFjZWQgZWxlbWVudHMqKl8uXwogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IG5vbmUgfCBbIDxjb250ZW50LXJlcGxhY2VtZW50PiB8IDxjb250ZW50LWxpc3Q+IF0gWy8gPHN0cmluZz4gXT9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio4KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvY29udGVudAogICAqLwogIGNvbnRlbnQ/OiBQcm9wZXJ0eS5Db250ZW50IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb250ZW50LXZpc2liaWxpdHlgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIHdoZXRoZXIgb3Igbm90IGFuIGVsZW1lbnQgcmVuZGVycyBpdHMgY29udGVudHMgYXQgYWxsLCBhbG9uZyB3aXRoIGZvcmNpbmcgYSBzdHJvbmcgc2V0IG9mIGNvbnRhaW5tZW50cywgYWxsb3dpbmcgdXNlciBhZ2VudHMgdG8gcG90ZW50aWFsbHkgb21pdCBsYXJnZSBzd2F0aGVzIG9mIGxheW91dCBhbmQgcmVuZGVyaW5nIHdvcmsgdW50aWwgaXQgYmVjb21lcyBuZWVkZWQuIEJhc2ljYWxseSBpdCBlbmFibGVzIHRoZSB1c2VyIGFnZW50IHRvIHNraXAgYW4gZWxlbWVudCdzIHJlbmRlcmluZyB3b3JrLCBpbmNsdWRpbmcgbGF5b3V0IGFuZCBwYWludGluZywgdW50aWwgaXQgaXMgbmVlZGVkLCBtYWtlcyB0aGUgaW5pdGlhbCBwYWdlIGxvYWQgbXVjaCBmYXN0ZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgdmlzaWJsZSB8IGF1dG8gfCBoaWRkZW5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHZpc2libGVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg1KiogfCAgIE5vICAgIHwgICBObyAgIHwgKio4NSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2NvbnRlbnQtdmlzaWJpbGl0eQogICAqLwogIGNvbnRlbnRWaXNpYmlsaXR5PzogUHJvcGVydHkuQ29udGVudFZpc2liaWxpdHkgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvdW50ZXItaW5jcmVtZW50YCoqIENTUyBwcm9wZXJ0eSBpbmNyZWFzZXMgb3IgZGVjcmVhc2VzIHRoZSB2YWx1ZSBvZiBhIENTUyBjb3VudGVyIGJ5IGEgZ2l2ZW4gdmFsdWUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8Y3VzdG9tLWlkZW50PiA8aW50ZWdlcj4/IF0rIHwgbm9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjIqKiAgfCAgKioxKiogIHwgKiozKiogIHwgKioxMioqIHwgKio4KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvY291bnRlci1pbmNyZW1lbnQKICAgKi8KICBjb3VudGVySW5jcmVtZW50PzogUHJvcGVydHkuQ291bnRlckluY3JlbWVudCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY291bnRlci1yZXNldGAqKiBDU1MgcHJvcGVydHkgcmVzZXRzIGEgQ1NTIGNvdW50ZXIgdG8gYSBnaXZlbiB2YWx1ZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDxjdXN0b20taWRlbnQ+IDxpbnRlZ2VyPj8gXSsgfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMioqICB8ICAqKjEqKiAgfCAqKjMqKiAgfCAqKjEyKiogfCAqKjgqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9jb3VudGVyLXJlc2V0CiAgICovCiAgY291bnRlclJlc2V0PzogUHJvcGVydHkuQ291bnRlclJlc2V0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb3VudGVyLXNldGAqKiBDU1MgcHJvcGVydHkgc2V0cyBhIENTUyBjb3VudGVyIHRvIGEgZ2l2ZW4gdmFsdWUuIEl0IG1hbmlwdWxhdGVzIHRoZSB2YWx1ZSBvZiBleGlzdGluZyBjb3VudGVycywgYW5kIHdpbGzCoG9ubHkgY3JlYXRlIG5ldyBjb3VudGVycyBpZiB0aGVyZSBpc24ndCBhbHJlYWR5IGEgY291bnRlciBvZiB0aGUgZ2l2ZW4gbmFtZSBvbiB0aGUgZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDxjdXN0b20taWRlbnQ+IDxpbnRlZ2VyPj8gXSsgfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4NSoqIHwgKio2OCoqICB8ICAgTm8gICB8ICoqODUqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9jb3VudGVyLXNldAogICAqLwogIGNvdW50ZXJTZXQ/OiBQcm9wZXJ0eS5Db3VudGVyU2V0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjdXJzb3JgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHR5cGUgb2YgbW91c2UgY3Vyc29yLCBpZiBhbnksIHRvIHNob3cgd2hlbiB0aGUgbW91c2UgcG9pbnRlciBpcyBvdmVyIGFuIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyBbIDx1cmw+IFsgPHg+IDx5PiBdPyAsIF0qIFsgYXV0byB8IGRlZmF1bHQgfCBub25lIHwgY29udGV4dC1tZW51IHwgaGVscCB8IHBvaW50ZXIgfCBwcm9ncmVzcyB8IHdhaXQgfCBjZWxsIHwgY3Jvc3NoYWlyIHwgdGV4dCB8IHZlcnRpY2FsLXRleHQgfCBhbGlhcyB8IGNvcHkgfCBtb3ZlIHwgbm8tZHJvcCB8IG5vdC1hbGxvd2VkIHwgZS1yZXNpemUgfCBuLXJlc2l6ZSB8IG5lLXJlc2l6ZSB8IG53LXJlc2l6ZSB8IHMtcmVzaXplIHwgc2UtcmVzaXplIHwgc3ctcmVzaXplIHwgdy1yZXNpemUgfCBldy1yZXNpemUgfCBucy1yZXNpemUgfCBuZXN3LXJlc2l6ZSB8IG53c2UtcmVzaXplIHwgY29sLXJlc2l6ZSB8IHJvdy1yZXNpemUgfCBhbGwtc2Nyb2xsIHwgem9vbS1pbiB8IHpvb20tb3V0IHwgZ3JhYiB8IGdyYWJiaW5nIF0gXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEuMioqIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvY3Vyc29yCiAgICovCiAgY3Vyc29yPzogUHJvcGVydHkuQ3Vyc29yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBkaXJlY3Rpb25gKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGRpcmVjdGlvbiBvZiB0ZXh0LCB0YWJsZSBjb2x1bW5zLCBhbmQgaG9yaXpvbnRhbCBvdmVyZmxvdy4gVXNlIGBydGxgIGZvciBsYW5ndWFnZXMgd3JpdHRlbiBmcm9tIHJpZ2h0IHRvIGxlZnQgKGxpa2UgSGVicmV3IG9yIEFyYWJpYyksIGFuZCBgbHRyYCBmb3IgdGhvc2Ugd3JpdHRlbiBmcm9tIGxlZnQgdG8gcmlnaHQgKGxpa2UgRW5nbGlzaCBhbmQgbW9zdCBvdGhlciBsYW5ndWFnZXMpLgogICAqCiAgICogKipTeW50YXgqKjogYGx0ciB8IHJ0bGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbHRyYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgICBJRSAgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS0tOiB8CiAgICogfCAqKjIqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio1LjUqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9kaXJlY3Rpb24KICAgKi8KICBkaXJlY3Rpb24/OiBQcm9wZXJ0eS5EaXJlY3Rpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGRpc3BsYXlgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hldGhlciBhbiBlbGVtZW50IGlzIHRyZWF0ZWQgYXMgYSBibG9jayBvciBpbmxpbmUgZWxlbWVudCBhbmQgdGhlIGxheW91dCB1c2VkIGZvciBpdHMgY2hpbGRyZW4sIHN1Y2ggYXMgZmxvdyBsYXlvdXQsIGdyaWQgb3IgZmxleC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDxkaXNwbGF5LW91dHNpZGU+IHx8IDxkaXNwbGF5LWluc2lkZT4gXSB8IDxkaXNwbGF5LWxpc3RpdGVtPiB8IDxkaXNwbGF5LWludGVybmFsPiB8IDxkaXNwbGF5LWJveD4gfCA8ZGlzcGxheS1sZWdhY3k+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBpbmxpbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2Rpc3BsYXkKICAgKi8KICBkaXNwbGF5PzogUHJvcGVydHkuRGlzcGxheSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZW1wdHktY2VsbHNgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hldGhlciBib3JkZXJzIGFuZCBiYWNrZ3JvdW5kcyBhcHBlYXIgYXJvdW5kIGA8dGFibGU+YCBjZWxscyB0aGF0IGhhdmUgbm8gdmlzaWJsZSBjb250ZW50LgogICAqCiAgICogKipTeW50YXgqKjogYHNob3cgfCBoaWRlYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzaG93YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMS4yKiogfCAqKjEyKiogfCAqKjgqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9lbXB0eS1jZWxscwogICAqLwogIGVtcHR5Q2VsbHM/OiBQcm9wZXJ0eS5FbXB0eUNlbGxzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmaWx0ZXJgKiogQ1NTIHByb3BlcnR5IGFwcGxpZXMgZ3JhcGhpY2FsIGVmZmVjdHMgbGlrZSBibHVyIG9yIGNvbG9yIHNoaWZ0IHRvIGFuIGVsZW1lbnQuIEZpbHRlcnMgYXJlIGNvbW1vbmx5IHVzZWQgdG8gYWRqdXN0IHRoZSByZW5kZXJpbmcgb2YgaW1hZ2VzLCBiYWNrZ3JvdW5kcywgYW5kIGJvcmRlcnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxmaWx0ZXItZnVuY3Rpb24tbGlzdD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8ICBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAgKio1MyoqICB8ICoqMzUqKiAgfCAqKjkuMSoqIHwgKioxMioqIHwgTm8gIHwKICAgKiB8IDE4IF8teC1fIHwgICAgICAgICB8IDYgXy14LV8gfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZmlsdGVyCiAgICovCiAgZmlsdGVyPzogUHJvcGVydHkuRmlsdGVyIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmbGV4LWJhc2lzYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBpbml0aWFsIG1haW4gc2l6ZSBvZiBhIGZsZXggaXRlbS4gSXQgc2V0cyB0aGUgc2l6ZSBvZiB0aGUgY29udGVudCBib3ggdW5sZXNzIG90aGVyd2lzZSBzZXQgd2l0aCBgYm94LXNpemluZ2AuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgY29udGVudCB8IDwnd2lkdGgnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgIENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICAqKjI5KiogIHwgKioyMioqICB8ICAqKjkqKiAgfCAqKjEyKiogfCAqKjExKiogfAogICAqIHwgMjIgXy14LV8gfCAgICAgICAgIHwgNyBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mbGV4LWJhc2lzCiAgICovCiAgZmxleEJhc2lzPzogUHJvcGVydHkuRmxleEJhc2lzPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmbGV4LWRpcmVjdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgZmxleCBpdGVtcyBhcmUgcGxhY2VkIGluIHRoZSBmbGV4IGNvbnRhaW5lciBkZWZpbmluZyB0aGUgbWFpbiBheGlzIGFuZCB0aGUgZGlyZWN0aW9uIChub3JtYWwgb3IgcmV2ZXJzZWQpLgogICAqCiAgICogKipTeW50YXgqKjogYHJvdyB8IHJvdy1yZXZlcnNlIHwgY29sdW1uIHwgY29sdW1uLXJldmVyc2VgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHJvd2AKICAgKgogICAqIHwgIENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgIElFICAgIHwKICAgKiB8IDotLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLS0tOiB8CiAgICogfCAgKioyOSoqICB8ICoqMjAqKiAgfCAgKio5KiogIHwgKioxMioqIHwgICoqMTEqKiAgfAogICAqIHwgMjEgXy14LV8gfCAgICAgICAgIHwgNyBfLXgtXyB8ICAgICAgICB8IDEwIF8teC1fIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2ZsZXgtZGlyZWN0aW9uCiAgICovCiAgZmxleERpcmVjdGlvbj86IFByb3BlcnR5LkZsZXhEaXJlY3Rpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZsZXgtZ3Jvd2AqKiBDU1PCoHByb3BlcnR5IHNldHMgdGhlIGZsZXggZ3JvdyBmYWN0b3Igb2YgYSBmbGV4IGl0ZW0gbWFpbiBzaXplLgogICAqCiAgICogKipTeW50YXgqKjogYDxudW1iZXI+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCAgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICAgICAgICAgICBJRSAgICAgICAgICAgIHwKICAgKiB8IDotLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfAogICAqIHwgICoqMjkqKiAgfCAqKjIwKiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICAgICAgICAgICoqMTEqKiAgICAgICAgICB8CiAgICogfCAyMiBfLXgtXyB8ICAgICAgICAgfCA3IF8teC1fIHwgICAgICAgIHwgMTAgXygtbXMtZmxleC1wb3NpdGl2ZSlfIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2ZsZXgtZ3JvdwogICAqLwogIGZsZXhHcm93PzogUHJvcGVydHkuRmxleEdyb3cgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZsZXgtc2hyaW5rYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBmbGV4IHNocmluayBmYWN0b3Igb2YgYSBmbGV4IGl0ZW0uIElmIHRoZSBzaXplIG9mIGFsbCBmbGV4IGl0ZW1zIGlzIGxhcmdlciB0aGFuIHRoZSBmbGV4IGNvbnRhaW5lciwgaXRlbXMgc2hyaW5rIHRvIGZpdCBhY2NvcmRpbmcgdG8gYGZsZXgtc2hyaW5rYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bnVtYmVyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMWAKICAgKgogICAqIHwgIENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICAqKjI5KiogIHwgKioyMCoqICB8ICAqKjkqKiAgfCAqKjEyKiogfCAqKjEwKiogfAogICAqIHwgMjIgXy14LV8gfCAgICAgICAgIHwgOCBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mbGV4LXNocmluawogICAqLwogIGZsZXhTaHJpbms/OiBQcm9wZXJ0eS5GbGV4U2hyaW5rIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmbGV4LXdyYXBgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hldGhlciBmbGV4IGl0ZW1zIGFyZSBmb3JjZWQgb250byBvbmUgbGluZSBvciBjYW4gd3JhcCBvbnRvIG11bHRpcGxlIGxpbmVzLiBJZiB3cmFwcGluZyBpcyBhbGxvd2VkLCBpdCBzZXRzIHRoZSBkaXJlY3Rpb24gdGhhdCBsaW5lcyBhcmUgc3RhY2tlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3dyYXAgfCB3cmFwIHwgd3JhcC1yZXZlcnNlYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3dyYXBgCiAgICoKICAgKiB8ICBDaHJvbWUgIHwgRmlyZWZveCB8ICBTYWZhcmkgICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgICoqMjkqKiAgfCAqKjI4KiogIHwgICAqKjkqKiAgIHwgKioxMioqIHwgKioxMSoqIHwKICAgKiB8IDIxIF8teC1fIHwgICAgICAgICB8IDYuMSBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mbGV4LXdyYXAKICAgKi8KICBmbGV4V3JhcD86IFByb3BlcnR5LkZsZXhXcmFwIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmbG9hdGAqKiBDU1MgcHJvcGVydHkgcGxhY2VzIGFuIGVsZW1lbnQgb24gdGhlIGxlZnQgb3IgcmlnaHQgc2lkZSBvZiBpdHMgY29udGFpbmVyLCBhbGxvd2luZyB0ZXh0IGFuZCBpbmxpbmUgZWxlbWVudHMgdG8gd3JhcCBhcm91bmQgaXQuIFRoZSBlbGVtZW50IGlzIHJlbW92ZWQgZnJvbSB0aGUgbm9ybWFsIGZsb3cgb2YgdGhlIHBhZ2UsIHRob3VnaCBzdGlsbCByZW1haW5pbmcgYSBwYXJ0IG9mIHRoZSBmbG93IChpbiBjb250cmFzdCB0byBhYnNvbHV0ZSBwb3NpdGlvbmluZykuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbGVmdCB8IHJpZ2h0IHwgbm9uZSB8IGlubGluZS1zdGFydCB8IGlubGluZS1lbmRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2Zsb2F0CiAgICovCiAgZmxvYXQ/OiBQcm9wZXJ0eS5GbG9hdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZm9udC1mYW1pbHlgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyBhIHByaW9yaXRpemVkIGxpc3Qgb2Ygb25lIG9yIG1vcmUgZm9udCBmYW1pbHkgbmFtZXMgYW5kL29yIGdlbmVyaWMgZmFtaWx5IG5hbWVzIGZvciB0aGUgc2VsZWN0ZWQgZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDxmYW1pbHktbmFtZT4gfCA8Z2VuZXJpYy1mYW1pbHk+IF0jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGRlcGVuZHMgb24gdXNlciBhZ2VudAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjMqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mb250LWZhbWlseQogICAqLwogIGZvbnRGYW1pbHk/OiBQcm9wZXJ0eS5Gb250RmFtaWx5IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb250LWZlYXR1cmUtc2V0dGluZ3NgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIGFkdmFuY2VkIHR5cG9ncmFwaGljIGZlYXR1cmVzIGluIE9wZW5UeXBlIGZvbnRzLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IDxmZWF0dXJlLXRhZy12YWx1ZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8ICBDaHJvbWUgIHwgRmlyZWZveCAgfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICAqKjQ4KiogIHwgICoqMzQqKiAgfCAqKjkuMSoqIHwgKioxNSoqIHwgKioxMCoqIHwKICAgKiB8IDE2IF8teC1fIHwgMTUgXy14LV8gfCAgICAgICAgIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2ZvbnQtZmVhdHVyZS1zZXR0aW5ncwogICAqLwogIGZvbnRGZWF0dXJlU2V0dGluZ3M/OiBQcm9wZXJ0eS5Gb250RmVhdHVyZVNldHRpbmdzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb250LWtlcm5pbmdgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHVzZSBvZiB0aGUga2VybmluZyBpbmZvcm1hdGlvbiBzdG9yZWQgaW4gYSBmb250LgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBub3JtYWwgfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjMzKiogfCAqKjMyKiogIHwgICoqOSoqICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAgICAgICAgfCAgICAgICAgIHwgNiBfLXgtXyB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mb250LWtlcm5pbmcKICAgKi8KICBmb250S2VybmluZz86IFByb3BlcnR5LkZvbnRLZXJuaW5nIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb250LWxhbmd1YWdlLW92ZXJyaWRlYCoqIENTUyBwcm9wZXJ0eSBjb250cm9scyB0aGUgdXNlIG9mIGxhbmd1YWdlLXNwZWNpZmljIGdseXBocyBpbiBhIHR5cGVmYWNlLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IDxzdHJpbmc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCBFZGdlIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS06IHwgOi06IHwKICAgKiB8ICAgTm8gICB8ICoqMzQqKiAgfCAgIE5vICAgfCAgTm8gIHwgTm8gIHwKICAgKiB8ICAgICAgICB8IDQgXy14LV8gfCAgICAgICAgfCAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2ZvbnQtbGFuZ3VhZ2Utb3ZlcnJpZGUKICAgKi8KICBmb250TGFuZ3VhZ2VPdmVycmlkZT86IFByb3BlcnR5LkZvbnRMYW5ndWFnZU92ZXJyaWRlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb250LW9wdGljYWwtc2l6aW5nYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgdGV4dCByZW5kZXJpbmcgaXMgb3B0aW1pemVkIGZvciB2aWV3aW5nIGF0IGRpZmZlcmVudCBzaXplcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgbm9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNzkqKiB8ICoqNjIqKiAgfCAqKjExKiogfCAqKjE3KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZm9udC1vcHRpY2FsLXNpemluZwogICAqLwogIGZvbnRPcHRpY2FsU2l6aW5nPzogUHJvcGVydHkuRm9udE9wdGljYWxTaXppbmcgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQtc2l6ZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgc2l6ZSBvZiB0aGUgZm9udC4gQ2hhbmdpbmcgdGhlIGZvbnQgc2l6ZSBhbHNvIHVwZGF0ZXMgdGhlIHNpemVzIG9mIHRoZSBmb250IHNpemUtcmVsYXRpdmUgYDxsZW5ndGg+YCB1bml0cywgc3VjaCBhc8KgYGVtYCwgYGV4YCwgYW5kIHNvIGZvcnRoLgogICAqCiAgICogKipTeW50YXgqKjogYDxhYnNvbHV0ZS1zaXplPiB8IDxyZWxhdGl2ZS1zaXplPiB8IDxsZW5ndGgtcGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG1lZGl1bWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNS41KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZm9udC1zaXplCiAgICovCiAgZm9udFNpemU/OiBQcm9wZXJ0eS5Gb250U2l6ZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZm9udC1zaXplLWFkanVzdGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgc2l6ZSBvZiBsb3dlci1jYXNlIGxldHRlcnMgcmVsYXRpdmUgdG8gdGhlIGN1cnJlbnQgZm9udCBzaXplICh3aGljaCBkZWZpbmVzIHRoZSBzaXplIG9mIHVwcGVyLWNhc2UgbGV0dGVycykuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IFsgZXgtaGVpZ2h0IHwgY2FwLWhlaWdodCB8IGNoLXdpZHRoIHwgaWMtd2lkdGggfCBpYy1oZWlnaHQgXT8gWyBmcm9tLWZvbnQgfCA8bnVtYmVyPiBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgRWRnZSB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tOiB8IDotOiB8CiAgICogfCAgbi9hICAgfCAgKioxKiogIHwgICBObyAgIHwgbi9hICB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mb250LXNpemUtYWRqdXN0CiAgICovCiAgZm9udFNpemVBZGp1c3Q/OiBQcm9wZXJ0eS5Gb250U2l6ZUFkanVzdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZm9udC1zbW9vdGhgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIHRoZSBhcHBsaWNhdGlvbiBvZiBhbnRpLWFsaWFzaW5nIHdoZW4gZm9udHMgYXJlIHJlbmRlcmVkLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBuZXZlciB8IGFsd2F5cyB8IDxhYnNvbHV0ZS1zaXplPiB8IDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCAgICAgICAgICAgICAgQ2hyb21lICAgICAgICAgICAgICB8ICAgICAgICAgICAgICBGaXJlZm94ICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgU2FmYXJpICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgRWRnZSAgICAgICAgICAgICAgICB8IElFICB8CiAgICogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotOiB8CiAgICogfCAqKjUqKiBfKC13ZWJraXQtZm9udC1zbW9vdGhpbmcpXyB8ICoqMjUqKiBfKC1tb3otb3N4LWZvbnQtc21vb3RoaW5nKV8gfCAqKjQqKiBfKC13ZWJraXQtZm9udC1zbW9vdGhpbmcpXyB8ICoqNzkqKiBfKC13ZWJraXQtZm9udC1zbW9vdGhpbmcpXyB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mb250LXNtb290aAogICAqLwogIGZvbnRTbW9vdGg/OiBQcm9wZXJ0eS5Gb250U21vb3RoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb250LXN0cmV0Y2hgKiogQ1NTIHByb3BlcnR5IHNlbGVjdHMgYSBub3JtYWwsIGNvbmRlbnNlZCwgb3IgZXhwYW5kZWQgZmFjZSBmcm9tIGEgZm9udC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Zm9udC1zdHJldGNoLWFic29sdXRlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqNjAqKiB8ICAqKjkqKiAgfCAqKjExKiogfCAqKjEyKiogfCAqKjkqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mb250LXN0cmV0Y2gKICAgKi8KICBmb250U3RyZXRjaD86IFByb3BlcnR5LkZvbnRTdHJldGNoIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb250LXN0eWxlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgYSBmb250IHNob3VsZCBiZSBzdHlsZWQgd2l0aCBhIG5vcm1hbCwgaXRhbGljLCBvciBvYmxpcXVlIGZhY2UgZnJvbSBpdHMgYGZvbnQtZmFtaWx5YC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCBpdGFsaWMgfCBvYmxpcXVlIDxhbmdsZT4/YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2ZvbnQtc3R5bGUKICAgKi8KICBmb250U3R5bGU/OiBQcm9wZXJ0eS5Gb250U3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQtc3ludGhlc2lzYCoqIENTUyBwcm9wZXJ0eSBjb250cm9scyB3aGljaCBtaXNzaW5nIHR5cGVmYWNlcywgYm9sZCBvciBpdGFsaWMsIG1heSBiZSBzeW50aGVzaXplZCBieSB0aGUgYnJvd3Nlci4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgWyB3ZWlnaHQgfHwgc3R5bGUgfHwgc21hbGwtY2FwcyBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGB3ZWlnaHQgc3R5bGVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCBFZGdlIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS06IHwgOi06IHwKICAgKiB8ICAgTm8gICB8ICoqMzQqKiAgfCAqKjkqKiAgfCAgTm8gIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2ZvbnQtc3ludGhlc2lzCiAgICovCiAgZm9udFN5bnRoZXNpcz86IFByb3BlcnR5LkZvbnRTeW50aGVzaXMgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQtdmFyaWFudGAqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IGFsbG93cyB5b3UgdG8gc2V0IGFsbCB0aGUgZm9udCB2YXJpYW50cyBmb3IgYSBmb250LgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IG5vbmUgfCBbIDxjb21tb24tbGlnLXZhbHVlcz4gfHwgPGRpc2NyZXRpb25hcnktbGlnLXZhbHVlcz4gfHwgPGhpc3RvcmljYWwtbGlnLXZhbHVlcz4gfHwgPGNvbnRleHR1YWwtYWx0LXZhbHVlcz4gfHwgc3R5bGlzdGljKCA8ZmVhdHVyZS12YWx1ZS1uYW1lPiApIHx8IGhpc3RvcmljYWwtZm9ybXMgfHwgc3R5bGVzZXQoIDxmZWF0dXJlLXZhbHVlLW5hbWU+IyApIHx8IGNoYXJhY3Rlci12YXJpYW50KCA8ZmVhdHVyZS12YWx1ZS1uYW1lPiMgKSB8fCBzd2FzaCggPGZlYXR1cmUtdmFsdWUtbmFtZT4gKSB8fCBvcm5hbWVudHMoIDxmZWF0dXJlLXZhbHVlLW5hbWU+ICkgfHwgYW5ub3RhdGlvbiggPGZlYXR1cmUtdmFsdWUtbmFtZT4gKSB8fCBbIHNtYWxsLWNhcHMgfCBhbGwtc21hbGwtY2FwcyB8IHBldGl0ZS1jYXBzIHwgYWxsLXBldGl0ZS1jYXBzIHwgdW5pY2FzZSB8IHRpdGxpbmctY2FwcyBdIHx8IDxudW1lcmljLWZpZ3VyZS12YWx1ZXM+IHx8IDxudW1lcmljLXNwYWNpbmctdmFsdWVzPiB8fCA8bnVtZXJpYy1mcmFjdGlvbi12YWx1ZXM+IHx8IG9yZGluYWwgfHwgc2xhc2hlZC16ZXJvIHx8IDxlYXN0LWFzaWFuLXZhcmlhbnQtdmFsdWVzPiB8fCA8ZWFzdC1hc2lhbi13aWR0aC12YWx1ZXM+IHx8IHJ1YnkgXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mb250LXZhcmlhbnQKICAgKi8KICBmb250VmFyaWFudD86IFByb3BlcnR5LkZvbnRWYXJpYW50IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb250LXZhcmlhbnQtY2Fwc2AqKiBDU1MgcHJvcGVydHkgY29udHJvbHMgdGhlIHVzZSBvZiBhbHRlcm5hdGUgZ2x5cGhzIGZvciBjYXBpdGFsIGxldHRlcnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgc21hbGwtY2FwcyB8IGFsbC1zbWFsbC1jYXBzIHwgcGV0aXRlLWNhcHMgfCBhbGwtcGV0aXRlLWNhcHMgfCB1bmljYXNlIHwgdGl0bGluZy1jYXBzYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTIqKiB8ICoqMzQqKiAgfCAqKjkuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2ZvbnQtdmFyaWFudC1jYXBzCiAgICovCiAgZm9udFZhcmlhbnRDYXBzPzogUHJvcGVydHkuRm9udFZhcmlhbnRDYXBzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb250LXZhcmlhbnQtZWFzdC1hc2lhbmAqKiBDU1MgcHJvcGVydHkgY29udHJvbHMgdGhlIHVzZSBvZiBhbHRlcm5hdGUgZ2x5cGhzIGZvciBFYXN0IEFzaWFuIHNjcmlwdHMsIGxpa2UgSmFwYW5lc2UgYW5kIENoaW5lc2UuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgWyA8ZWFzdC1hc2lhbi12YXJpYW50LXZhbHVlcz4gfHwgPGVhc3QtYXNpYW4td2lkdGgtdmFsdWVzPiB8fCBydWJ5IF1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2MyoqIHwgKiozNCoqICB8ICoqOS4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZm9udC12YXJpYW50LWVhc3QtYXNpYW4KICAgKi8KICBmb250VmFyaWFudEVhc3RBc2lhbj86IFByb3BlcnR5LkZvbnRWYXJpYW50RWFzdEFzaWFuIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb250LXZhcmlhbnQtbGlnYXR1cmVzYCoqIENTUyBwcm9wZXJ0eSBjb250cm9scyB3aGljaCBsaWdhdHVyZXMgYW5kIGNvbnRleHR1YWwgZm9ybXMgYXJlIHVzZWQgaW4gdGV4dHVhbCBjb250ZW50IG9mIHRoZSBlbGVtZW50cyBpdCBhcHBsaWVzIHRvLiBUaGlzIGxlYWRzIHRvIG1vcmUgaGFybW9uaXplZCBmb3JtcyBpbiB0aGUgcmVzdWx0aW5nIHRleHQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgbm9uZSB8IFsgPGNvbW1vbi1saWctdmFsdWVzPiB8fCA8ZGlzY3JldGlvbmFyeS1saWctdmFsdWVzPiB8fCA8aGlzdG9yaWNhbC1saWctdmFsdWVzPiB8fCA8Y29udGV4dHVhbC1hbHQtdmFsdWVzPiBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8ICBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAgKiozNCoqICB8ICoqMzQqKiAgfCAqKjkuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKiB8IDMxIF8teC1fIHwgICAgICAgICB8IDcgXy14LV8gfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZm9udC12YXJpYW50LWxpZ2F0dXJlcwogICAqLwogIGZvbnRWYXJpYW50TGlnYXR1cmVzPzogUHJvcGVydHkuRm9udFZhcmlhbnRMaWdhdHVyZXMgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQtdmFyaWFudC1udW1lcmljYCoqIENTUyBwcm9wZXJ0eSBjb250cm9scyB0aGUgdXNhZ2Ugb2YgYWx0ZXJuYXRlIGdseXBocyBmb3IgbnVtYmVycywgZnJhY3Rpb25zLCBhbmQgb3JkaW5hbCBtYXJrZXJzLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IFsgPG51bWVyaWMtZmlndXJlLXZhbHVlcz4gfHwgPG51bWVyaWMtc3BhY2luZy12YWx1ZXM+IHx8IDxudW1lcmljLWZyYWN0aW9uLXZhbHVlcz4gfHwgb3JkaW5hbCB8fCBzbGFzaGVkLXplcm8gXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjUyKiogfCAqKjM0KiogIHwgKio5LjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mb250LXZhcmlhbnQtbnVtZXJpYwogICAqLwogIGZvbnRWYXJpYW50TnVtZXJpYz86IFByb3BlcnR5LkZvbnRWYXJpYW50TnVtZXJpYyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZm9udC12YXJpYW50LXBvc2l0aW9uYCoqIENTUyBwcm9wZXJ0eSBjb250cm9scyB0aGUgdXNlIG9mIGFsdGVybmF0ZSwgc21hbGxlciBnbHlwaHMgdGhhdCBhcmUgcG9zaXRpb25lZCBhcyBzdXBlcnNjcmlwdCBvciBzdWJzY3JpcHQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgc3ViIHwgc3VwZXJgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSAgfCBFZGdlIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tOiB8IDotOiB8CiAgICogfCAgIE5vICAgfCAqKjM0KiogIHwgKio5LjEqKiB8ICBObyAgfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZm9udC12YXJpYW50LXBvc2l0aW9uCiAgICovCiAgZm9udFZhcmlhbnRQb3NpdGlvbj86IFByb3BlcnR5LkZvbnRWYXJpYW50UG9zaXRpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQtdmFyaWF0aW9uLXNldHRpbmdzYCoqIENTUyBwcm9wZXJ0eSBwcm92aWRlcyBsb3ctbGV2ZWwgY29udHJvbCBvdmVyIHZhcmlhYmxlIGZvbnQgY2hhcmFjdGVyaXN0aWNzLCBieSBzcGVjaWZ5aW5nIHRoZSBmb3VyIGxldHRlciBheGlzIG5hbWVzIG9mIHRoZSBjaGFyYWN0ZXJpc3RpY3MgeW91IHdhbnQgdG8gdmFyeSwgYWxvbmcgd2l0aCB0aGVpciB2YWx1ZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgWyA8c3RyaW5nPiA8bnVtYmVyPiBdI2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2MioqIHwgKio2MioqICB8ICoqMTEqKiB8ICoqMTcqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mb250LXZhcmlhdGlvbi1zZXR0aW5ncwogICAqLwogIGZvbnRWYXJpYXRpb25TZXR0aW5ncz86IFByb3BlcnR5LkZvbnRWYXJpYXRpb25TZXR0aW5ncyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZm9udC13ZWlnaHRgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHdlaWdodCAob3IgYm9sZG5lc3MpIG9mIHRoZSBmb250LiBUaGUgd2VpZ2h0cyBhdmFpbGFibGUgZGVwZW5kIG9uIHRoZSBgZm9udC1mYW1pbHlgIHRoYXQgaXMgY3VycmVudGx5IHNldC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Zm9udC13ZWlnaHQtYWJzb2x1dGU+IHwgYm9sZGVyIHwgbGlnaHRlcmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMioqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjMqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mb250LXdlaWdodAogICAqLwogIGZvbnRXZWlnaHQ/OiBQcm9wZXJ0eS5Gb250V2VpZ2h0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb3JjZWQtY29sb3ItYWRqdXN0YCoqIENTUyBwcm9wZXJ0eSBhbGxvd3MgYXV0aG9ycyB0byBvcHQgY2VydGFpbiBlbGVtZW50cyBvdXQgb2YgZm9yY2VkIGNvbG9ycyBtb2RlLiBUaGlzIHRoZW4gcmVzdG9yZXMgdGhlIGNvbnRyb2wgb2YgdGhvc2UgdmFsdWVzIHRvIENTUy4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgbm9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICAgICAgICAgICAgICBFZGdlICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgSUUgICAgICAgICAgICAgICAgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwKICAgKiB8ICoqODkqKiB8ICAgTm8gICAgfCAgIE5vICAgfCAgICAgICAgICAgICAqKjc5KiogICAgICAgICAgICAgIHwgKioxMCoqIF8oLW1zLWhpZ2gtY29udHJhc3QtYWRqdXN0KV8gfAogICAqIHwgICAgICAgIHwgICAgICAgICB8ICAgICAgICB8IDEyIF8oLW1zLWhpZ2gtY29udHJhc3QtYWRqdXN0KV8gfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mb3JjZWQtY29sb3ItYWRqdXN0CiAgICovCiAgZm9yY2VkQ29sb3JBZGp1c3Q/OiBQcm9wZXJ0eS5Gb3JjZWRDb2xvckFkanVzdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZ3JpZC1hdXRvLWNvbHVtbnNgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgc2l6ZSBvZiBhbiBpbXBsaWNpdGx5LWNyZWF0ZWQgZ3JpZCBjb2x1bW4gdHJhY2sgb3IgcGF0dGVybiBvZiB0cmFja3MuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHRyYWNrLXNpemU+K2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgICAgICAgICAgICAgSUUgICAgICAgICAgICAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8CiAgICogfCAqKjU3KiogfCAqKjcwKiogIHwgKioxMC4xKiogfCAqKjE2KiogfCAqKjEwKiogXygtbXMtZ3JpZC1jb2x1bW5zKV8gfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZ3JpZC1hdXRvLWNvbHVtbnMKICAgKi8KICBncmlkQXV0b0NvbHVtbnM/OiBQcm9wZXJ0eS5HcmlkQXV0b0NvbHVtbnM8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGdyaWQtYXV0by1mbG93YCoqIENTUyBwcm9wZXJ0eSBjb250cm9scyBob3cgdGhlIGF1dG8tcGxhY2VtZW50IGFsZ29yaXRobSB3b3Jrcywgc3BlY2lmeWluZyBleGFjdGx5IGhvdyBhdXRvLXBsYWNlZCBpdGVtcyBnZXQgZmxvd2VkIGludG8gdGhlIGdyaWQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyByb3cgfCBjb2x1bW4gXSB8fCBkZW5zZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgcm93YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTcqKiB8ICoqNTIqKiAgfCAqKjEwLjEqKiB8ICoqMTYqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ncmlkLWF1dG8tZmxvdwogICAqLwogIGdyaWRBdXRvRmxvdz86IFByb3BlcnR5LkdyaWRBdXRvRmxvdyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZ3JpZC1hdXRvLXJvd3NgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgc2l6ZSBvZiBhbiBpbXBsaWNpdGx5LWNyZWF0ZWQgZ3JpZCByb3cgdHJhY2vCoG9yIHBhdHRlcm4gb2YgdHJhY2tzLgogICAqCiAgICogKipTeW50YXgqKjogYDx0cmFjay1zaXplPitgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8ICAgICAgICAgICAgSUUgICAgICAgICAgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfAogICAqIHwgKio1NyoqIHwgKio3MCoqICB8ICoqMTAuMSoqIHwgKioxNioqIHwgKioxMCoqIF8oLW1zLWdyaWQtcm93cylfIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2dyaWQtYXV0by1yb3dzCiAgICovCiAgZ3JpZEF1dG9Sb3dzPzogUHJvcGVydHkuR3JpZEF1dG9Sb3dzPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBncmlkLWNvbHVtbi1lbmRgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyBhIGdyaWQgaXRlbeKAmXMgZW5kIHBvc2l0aW9uIHdpdGhpbiB0aGUgZ3JpZCBjb2x1bW4gYnkgY29udHJpYnV0aW5nIGEgbGluZSwgYSBzcGFuLCBvciBub3RoaW5nIChhdXRvbWF0aWMpIHRvIGl0cyBncmlkIHBsYWNlbWVudCwgdGhlcmVieSBzcGVjaWZ5aW5nIHRoZSBibG9jay1lbmQgZWRnZSBvZiBpdHMgZ3JpZCBhcmVhLgogICAqCiAgICogKipTeW50YXgqKjogYDxncmlkLWxpbmU+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTcqKiB8ICoqNTIqKiAgfCAqKjEwLjEqKiB8ICoqMTYqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ncmlkLWNvbHVtbi1lbmQKICAgKi8KICBncmlkQ29sdW1uRW5kPzogUHJvcGVydHkuR3JpZENvbHVtbkVuZCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZ3JpZC1jb2x1bW4tc3RhcnRgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyBhIGdyaWQgaXRlbeKAmXMgc3RhcnQgcG9zaXRpb24gd2l0aGluIHRoZSBncmlkIGNvbHVtbiBieSBjb250cmlidXRpbmcgYSBsaW5lLCBhIHNwYW4sIG9yIG5vdGhpbmcgKGF1dG9tYXRpYykgdG8gaXRzIGdyaWQgcGxhY2VtZW50LiBUaGlzIHN0YXJ0IHBvc2l0aW9uIGRlZmluZXMgdGhlIGJsb2NrLXN0YXJ0IGVkZ2Ugb2YgdGhlIGdyaWQgYXJlYS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Z3JpZC1saW5lPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjUyKiogIHwgKioxMC4xKiogfCAqKjE2KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZ3JpZC1jb2x1bW4tc3RhcnQKICAgKi8KICBncmlkQ29sdW1uU3RhcnQ/OiBQcm9wZXJ0eS5HcmlkQ29sdW1uU3RhcnQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGdyaWQtcm93LWVuZGAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIGEgZ3JpZCBpdGVt4oCZcyBlbmQgcG9zaXRpb24gd2l0aGluIHRoZSBncmlkIHJvdyBieSBjb250cmlidXRpbmcgYSBsaW5lLCBhIHNwYW4sIG9yIG5vdGhpbmcgKGF1dG9tYXRpYykgdG8gaXRzIGdyaWQgcGxhY2VtZW50LCB0aGVyZWJ5IHNwZWNpZnlpbmcgdGhlIGlubGluZS1lbmQgZWRnZSBvZiBpdHMgZ3JpZCBhcmVhLgogICAqCiAgICogKipTeW50YXgqKjogYDxncmlkLWxpbmU+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTcqKiB8ICoqNTIqKiAgfCAqKjEwLjEqKiB8ICoqMTYqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ncmlkLXJvdy1lbmQKICAgKi8KICBncmlkUm93RW5kPzogUHJvcGVydHkuR3JpZFJvd0VuZCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZ3JpZC1yb3ctc3RhcnRgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyBhIGdyaWQgaXRlbeKAmXMgc3RhcnQgcG9zaXRpb24gd2l0aGluIHRoZSBncmlkIHJvdyBieSBjb250cmlidXRpbmcgYSBsaW5lLCBhIHNwYW4sIG9yIG5vdGhpbmcgKGF1dG9tYXRpYykgdG8gaXRzIGdyaWQgcGxhY2VtZW50LCB0aGVyZWJ5IHNwZWNpZnlpbmcgdGhlIGlubGluZS1zdGFydCBlZGdlIG9mIGl0cyBncmlkIGFyZWEuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGdyaWQtbGluZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio1NyoqIHwgKio1MioqICB8ICoqMTAuMSoqIHwgKioxNioqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2dyaWQtcm93LXN0YXJ0CiAgICovCiAgZ3JpZFJvd1N0YXJ0PzogUHJvcGVydHkuR3JpZFJvd1N0YXJ0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBncmlkLXRlbXBsYXRlLWFyZWFzYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgbmFtZWQgZ3JpZCBhcmVhcywgZXN0YWJsaXNoaW5nIHRoZSBjZWxscyBpbiB0aGUgZ3JpZCBhbmQgYXNzaWduaW5nIHRoZW0gbmFtZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxzdHJpbmc+K2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjUyKiogIHwgKioxMC4xKiogfCAqKjE2KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZ3JpZC10ZW1wbGF0ZS1hcmVhcwogICAqLwogIGdyaWRUZW1wbGF0ZUFyZWFzPzogUHJvcGVydHkuR3JpZFRlbXBsYXRlQXJlYXMgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGdyaWQtdGVtcGxhdGUtY29sdW1uc2AqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbGluZSBuYW1lcyBhbmQgdHJhY2sgc2l6aW5nIGZ1bmN0aW9ucyBvZiB0aGUgZ3JpZCBjb2x1bW5zLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8dHJhY2stbGlzdD4gfCA8YXV0by10cmFjay1saXN0PiB8IHN1YmdyaWQgPGxpbmUtbmFtZS1saXN0Pj9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8ICAgICAgICAgICAgIElFICAgICAgICAgICAgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfAogICAqIHwgKio1NyoqIHwgKio1MioqICB8ICoqMTAuMSoqIHwgKioxNioqIHwgKioxMCoqIF8oLW1zLWdyaWQtY29sdW1ucylfIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2dyaWQtdGVtcGxhdGUtY29sdW1ucwogICAqLwogIGdyaWRUZW1wbGF0ZUNvbHVtbnM/OiBQcm9wZXJ0eS5HcmlkVGVtcGxhdGVDb2x1bW5zPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBncmlkLXRlbXBsYXRlLXJvd3NgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxpbmUgbmFtZXMgYW5kIHRyYWNrIHNpemluZyBmdW5jdGlvbnMgb2YgdGhlIGdyaWQgcm93cy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPHRyYWNrLWxpc3Q+IHwgPGF1dG8tdHJhY2stbGlzdD4gfCBzdWJncmlkIDxsaW5lLW5hbWUtbGlzdD4/YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCAgICAgICAgICAgIElFICAgICAgICAgICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwKICAgKiB8ICoqNTcqKiB8ICoqNTIqKiAgfCAqKjEwLjEqKiB8ICoqMTYqKiB8ICoqMTAqKiBfKC1tcy1ncmlkLXJvd3MpXyB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ncmlkLXRlbXBsYXRlLXJvd3MKICAgKi8KICBncmlkVGVtcGxhdGVSb3dzPzogUHJvcGVydHkuR3JpZFRlbXBsYXRlUm93czxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgaGFuZ2luZy1wdW5jdHVhdGlvbmAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHdoZXRoZXIgYSBwdW5jdHVhdGlvbiBtYXJrIHNob3VsZCBoYW5nIGF0IHRoZSBzdGFydCBvciBlbmQgb2YgYSBsaW5lIG9mIHRleHQuIEhhbmdpbmcgcHVuY3R1YXRpb24gbWF5IGJlIHBsYWNlZCBvdXRzaWRlIHRoZSBsaW5lIGJveC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgWyBmaXJzdCB8fCBbIGZvcmNlLWVuZCB8IGFsbG93LWVuZCBdIHx8IGxhc3QgXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8IEVkZ2UgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLTogfCA6LTogfAogICAqIHwgICBObyAgIHwgICBObyAgICB8ICoqMTAqKiB8ICBObyAgfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvaGFuZ2luZy1wdW5jdHVhdGlvbgogICAqLwogIGhhbmdpbmdQdW5jdHVhdGlvbj86IFByb3BlcnR5LkhhbmdpbmdQdW5jdHVhdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgaGVpZ2h0YCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIGhlaWdodCBvZiBhbiBlbGVtZW50LiBCeSBkZWZhdWx0LCB0aGUgcHJvcGVydHkgZGVmaW5lcyB0aGUgaGVpZ2h0IG9mIHRoZSBjb250ZW50IGFyZWEuIElmIGBib3gtc2l6aW5nYCBpcyBzZXQgdG8gYGJvcmRlci1ib3hgLCBob3dldmVyLCBpdCBpbnN0ZWFkIGRldGVybWluZXMgdGhlIGhlaWdodCBvZiB0aGUgYm9yZGVyIGFyZWEuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IDxsZW5ndGg+IHwgPHBlcmNlbnRhZ2U+IHwgbWluLWNvbnRlbnQgfCBtYXgtY29udGVudCB8IGZpdC1jb250ZW50IHwgZml0LWNvbnRlbnQoPGxlbmd0aC1wZXJjZW50YWdlPilgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2hlaWdodAogICAqLwogIGhlaWdodD86IFByb3BlcnR5LkhlaWdodDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgaHlwaGVuc2AqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIGhvdyB3b3JkcyBzaG91bGQgYmUgaHlwaGVuYXRlZCB3aGVuIHRleHQgd3JhcHMgYWNyb3NzIG11bHRpcGxlIGxpbmVzLiBJdCBjYW4gcHJldmVudCBoeXBoZW5hdGlvbiBlbnRpcmVseSwgaHlwaGVuYXRlIGF0IG1hbnVhbGx5LXNwZWNpZmllZCBwb2ludHMgd2l0aGluIHRoZSB0ZXh0LCBvciBsZXQgdGhlIGJyb3dzZXIgYXV0b21hdGljYWxseSBpbnNlcnQgaHlwaGVucyB3aGVyZSBhcHByb3ByaWF0ZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgbWFudWFsIHwgYXV0b2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWFudWFsYAogICAqCiAgICogfCAgQ2hyb21lICB8IEZpcmVmb3ggfCAgICBTYWZhcmkgICAgIHwgIEVkZ2UgIHwgICAgICBJRSAgICAgIHwKICAgKiB8IDotLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS0tLTogfCA6LS0tLTogfCA6LS0tLS0tLS0tLTogfAogICAqIHwgICoqNTUqKiAgfCAqKjQzKiogIHwgKio1LjEqKiBfLXgtXyB8ICoqNzkqKiB8ICoqMTAqKiBfLXgtXyB8CiAgICogfCAxMyBfLXgtXyB8IDYgXy14LV8gfCAgICAgICAgICAgICAgIHwgICAgICAgIHwgICAgICAgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2h5cGhlbnMKICAgKi8KICBoeXBoZW5zPzogUHJvcGVydHkuSHlwaGVucyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgaW1hZ2Utb3JpZW50YXRpb25gKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyBhIGxheW91dC1pbmRlcGVuZGVudCBjb3JyZWN0aW9uIHRvIHRoZSBvcmllbnRhdGlvbiBvZiBhbiBpbWFnZS4gSXQgc2hvdWxkIF9ub3RfIGJlIHVzZWQgZm9yIGFueSBvdGhlciBvcmllbnRhdGlvbiBhZGp1c3RtZW50czsgaW5zdGVhZCwgdGhlIGB0cmFuc2Zvcm1gIHByb3BlcnR5IHNob3VsZCBiZSB1c2VkIHdpdGggdGhlIGByb3RhdGVgIGA8dHJhbnNmb3JtLWZ1bmN0aW9uPmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgZnJvbS1pbWFnZSB8IDxhbmdsZT4gfCBbIDxhbmdsZT4/IGZsaXAgXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgZnJvbS1pbWFnZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjgxKiogfCAqKjI2KiogIHwgKioxMy4xKiogfCAqKjgxKiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvaW1hZ2Utb3JpZW50YXRpb24KICAgKi8KICBpbWFnZU9yaWVudGF0aW9uPzogUHJvcGVydHkuSW1hZ2VPcmllbnRhdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgaW1hZ2UtcmVuZGVyaW5nYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGFuIGltYWdlIHNjYWxpbmcgYWxnb3JpdGhtLiBUaGUgcHJvcGVydHkgYXBwbGllcyB0byBhbiBlbGVtZW50IGl0c2VsZiwgdG8gYW55IGltYWdlcyBzZXQgaW4gaXRzIG90aGVyIHByb3BlcnRpZXMsIGFuZCB0byBpdHMgZGVzY2VuZGFudHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IGNyaXNwLWVkZ2VzIHwgcGl4ZWxhdGVkYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKioxMyoqIHwgKiozLjYqKiB8ICoqNioqICB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9pbWFnZS1yZW5kZXJpbmcKICAgKi8KICBpbWFnZVJlbmRlcmluZz86IFByb3BlcnR5LkltYWdlUmVuZGVyaW5nIHwgdW5kZWZpbmVkOwogIC8qKgogICAqICoqU3ludGF4Kio6IGBbIGZyb20taW1hZ2UgfHwgPHJlc29sdXRpb24+IF0gJiYgc25hcD9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDFkcHB4YAogICAqLwogIGltYWdlUmVzb2x1dGlvbj86IFByb3BlcnR5LkltYWdlUmVzb2x1dGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYGluaXRpYWwtbGV0dGVyYCBDU1MgcHJvcGVydHkgc2V0cyBzdHlsaW5nIGZvciBkcm9wcGVkLCByYWlzZWQsIGFuZCBzdW5rZW4gaW5pdGlhbCBsZXR0ZXJzLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IFsgPG51bWJlcj4gPGludGVnZXI+PyBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgIFNhZmFyaSAgICB8IEVkZ2UgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS06IHwgOi0tOiB8IDotOiB8CiAgICogfCAgIE5vICAgfCAgIE5vICAgIHwgKio5KiogXy14LV8gfCAgTm8gIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2luaXRpYWwtbGV0dGVyCiAgICovCiAgaW5pdGlhbExldHRlcj86IFByb3BlcnR5LkluaXRpYWxMZXR0ZXIgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGlubGluZS1zaXplYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBob3Jpem9udGFsIG9yIHZlcnRpY2FsIHNpemUgb2YgYW4gZWxlbWVudCdzIGJsb2NrLCBkZXBlbmRpbmcgb24gaXRzIHdyaXRpbmcgbW9kZS4gSXQgY29ycmVzcG9uZHMgdG8gZWl0aGVyIHRoZSBgd2lkdGhgIG9yIHRoZSBgaGVpZ2h0YCBwcm9wZXJ0eSwgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZSBvZiBgd3JpdGluZy1tb2RlYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3dpZHRoJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio1NyoqIHwgKio0MSoqICB8ICoqMTIuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2lubGluZS1zaXplCiAgICovCiAgaW5saW5lU2l6ZT86IFByb3BlcnR5LklubGluZVNpemU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGluc2V0YCoqwqBDU1MgcHJvcGVydHkgaXMgYSBzaG9ydGhhbmQgdGhhdCBjb3JyZXNwb25kcyB0byB0aGUgYHRvcGAsIGByaWdodGAsIGBib3R0b21gLCBhbmQvb3IgYGxlZnRgIHByb3BlcnRpZXMuIEl0IGhhcyB0aGUgc2FtZSBtdWx0aS12YWx1ZSBzeW50YXggb2YgdGhlIGBtYXJnaW5gIHNob3J0aGFuZC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3RvcCc+ezEsNH1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4NyoqIHwgKio2NioqICB8ICoqMTQuMSoqIHwgKio4NyoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2luc2V0CiAgICovCiAgaW5zZXQ/OiBQcm9wZXJ0eS5JbnNldDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgaW5zZXQtaW5saW5lYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIHN0YXJ0IGFuZCBlbmQgb2Zmc2V0cyBvZiBhbiBlbGVtZW50IGluIHRoZSBpbmxpbmUgZGlyZWN0aW9uLCB3aGljaCBtYXBzIHRvIHBoeXNpY2FsIG9mZnNldHMgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgdG9wYCBhbmQgYGJvdHRvbWAsIG9yIGByaWdodGAgYW5kIGBsZWZ0YCBwcm9wZXJ0aWVzIGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3RvcCc+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4NyoqIHwgKio2MyoqICB8ICoqMTQuMSoqIHwgKio4NyoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2luc2V0LWJsb2NrCiAgICovCiAgaW5zZXRCbG9jaz86IFByb3BlcnR5Lkluc2V0QmxvY2s8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGluc2V0LWJsb2NrLWVuZGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBibG9jayBlbmQgb2Zmc2V0IG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBpbnNldCBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGB0b3BgLCBgcmlnaHRgLCBgYm90dG9tYCwgb3IgYGxlZnRgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3RvcCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODcqKiB8ICoqNjMqKiAgfCAqKjE0LjEqKiB8ICoqODcqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9pbnNldC1ibG9jay1lbmQKICAgKi8KICBpbnNldEJsb2NrRW5kPzogUHJvcGVydHkuSW5zZXRCbG9ja0VuZDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgaW5zZXQtYmxvY2stc3RhcnRgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgYmxvY2sgc3RhcnQgb2Zmc2V0IG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBpbnNldCBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGB0b3BgLCBgcmlnaHRgLCBgYm90dG9tYCwgb3IgYGxlZnRgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3RvcCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODcqKiB8ICoqNjMqKiAgfCAqKjE0LjEqKiB8ICoqODcqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9pbnNldC1ibG9jay1zdGFydAogICAqLwogIGluc2V0QmxvY2tTdGFydD86IFByb3BlcnR5Lkluc2V0QmxvY2tTdGFydDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgaW5zZXQtaW5saW5lYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIHN0YXJ0IGFuZCBlbmQgb2Zmc2V0cyBvZiBhbiBlbGVtZW50IGluIHRoZSBpbmxpbmUgZGlyZWN0aW9uLCB3aGljaCBtYXBzIHRvIHBoeXNpY2FsIG9mZnNldHMgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgdG9wYCBhbmQgYGJvdHRvbWAsIG9yIGByaWdodGAgYW5kIGBsZWZ0YCBwcm9wZXJ0aWVzIGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3RvcCc+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4NyoqIHwgKio2MyoqICB8ICoqMTQuMSoqIHwgKio4NyoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2luc2V0LWlubGluZQogICAqLwogIGluc2V0SW5saW5lPzogUHJvcGVydHkuSW5zZXRJbmxpbmU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGluc2V0LWlubGluZS1lbmRgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgaW5saW5lIGVuZCBpbnNldCBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgb2Zmc2V0IGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYHRvcGAsIGByaWdodGAsIGBib3R0b21gLCBvciBgbGVmdGAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwndG9wJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4NyoqIHwgKio2MyoqICB8ICoqMTQuMSoqIHwgKio4NyoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2luc2V0LWlubGluZS1lbmQKICAgKi8KICBpbnNldElubGluZUVuZD86IFByb3BlcnR5Lkluc2V0SW5saW5lRW5kPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBpbnNldC1pbmxpbmUtc3RhcnRgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgaW5saW5lIHN0YXJ0IGluc2V0IG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBvZmZzZXQgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgdG9wYCwgYHJpZ2h0YCwgYGJvdHRvbWAsIG9yIGBsZWZ0YCBwcm9wZXJ0eSBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBkZWZpbmVkIGZvciBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCd0b3AnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg3KiogfCAqKjYzKiogIHwgKioxNC4xKiogfCAqKjg3KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvaW5zZXQtaW5saW5lLXN0YXJ0CiAgICovCiAgaW5zZXRJbmxpbmVTdGFydD86IFByb3BlcnR5Lkluc2V0SW5saW5lU3RhcnQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGlzb2xhdGlvbmAqKiBDU1MgcHJvcGVydHkgZGV0ZXJtaW5lcyB3aGV0aGVyIGFuIGVsZW1lbnQgbXVzdCBjcmVhdGUgYSBuZXcgc3RhY2tpbmcgY29udGV4dC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgaXNvbGF0ZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNDEqKiB8ICoqMzYqKiAgfCAqKjgqKiAgfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvaXNvbGF0aW9uCiAgICovCiAgaXNvbGF0aW9uPzogUHJvcGVydHkuSXNvbGF0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBDU1MgKipganVzdGlmeS1jb250ZW50YCoqIHByb3BlcnR5IGRlZmluZXMgaG93IHRoZSBicm93c2VyIGRpc3RyaWJ1dGVzIHNwYWNlIGJldHdlZW4gYW5kIGFyb3VuZCBjb250ZW50IGl0ZW1zIGFsb25nIHRoZSBtYWluLWF4aXMgb2YgYSBmbGV4IGNvbnRhaW5lciwgYW5kIHRoZSBpbmxpbmUgYXhpcyBvZiBhIGdyaWQgY29udGFpbmVyLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IDxjb250ZW50LWRpc3RyaWJ1dGlvbj4gfCA8b3ZlcmZsb3ctcG9zaXRpb24+PyBbIDxjb250ZW50LXBvc2l0aW9uPiB8IGxlZnQgfCByaWdodCBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiAtLS0KICAgKgogICAqIF9TdXBwb3J0ZWQgaW4gRmxleCBMYXlvdXRfCiAgICoKICAgKiB8ICBDaHJvbWUgIHwgRmlyZWZveCB8ICBTYWZhcmkgICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgICoqNTIqKiAgfCAqKjIwKiogIHwgICAqKjkqKiAgIHwgKioxMioqIHwgKioxMSoqIHwKICAgKiB8IDIxIF8teC1fIHwgICAgICAgICB8IDYuMSBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiAtLS0KICAgKgogICAqIF9TdXBwb3J0ZWQgaW4gR3JpZCBMYXlvdXRfCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio1NyoqIHwgKio1MioqICB8ICoqMTAuMSoqIHwgKioxNioqIHwgTm8gIHwKICAgKgogICAqIC0tLQogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvanVzdGlmeS1jb250ZW50CiAgICovCiAganVzdGlmeUNvbnRlbnQ/OiBQcm9wZXJ0eS5KdXN0aWZ5Q29udGVudCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgQ1NTICoqYGp1c3RpZnktaXRlbXNgKiogcHJvcGVydHkgZGVmaW5lcyB0aGUgZGVmYXVsdCBganVzdGlmeS1zZWxmYCBmb3IgYWxsIGl0ZW1zIG9mIHRoZSBib3gsIGdpdmluZyB0aGVtIGFsbCBhIGRlZmF1bHQgd2F5IG9mIGp1c3RpZnlpbmcgZWFjaCBib3ggYWxvbmcgdGhlIGFwcHJvcHJpYXRlIGF4aXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgc3RyZXRjaCB8IDxiYXNlbGluZS1wb3NpdGlvbj4gfCA8b3ZlcmZsb3ctcG9zaXRpb24+PyBbIDxzZWxmLXBvc2l0aW9uPiB8IGxlZnQgfCByaWdodCBdIHwgbGVnYWN5IHwgbGVnYWN5ICYmIFsgbGVmdCB8IHJpZ2h0IHwgY2VudGVyIF1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGxlZ2FjeWAKICAgKgogICAqIC0tLQogICAqCiAgICogX1N1cHBvcnRlZCBpbiBGbGV4IExheW91dF8KICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNTIqKiB8ICoqMjAqKiAgfCAqKjkqKiAgfCAqKjEyKiogfCAqKjExKiogfAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIEdyaWQgTGF5b3V0XwogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTcqKiB8ICoqNDUqKiAgfCAqKjEwLjEqKiB8ICoqMTYqKiB8IE5vICB8CiAgICoKICAgKiAtLS0KICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2p1c3RpZnktaXRlbXMKICAgKi8KICBqdXN0aWZ5SXRlbXM/OiBQcm9wZXJ0eS5KdXN0aWZ5SXRlbXMgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIENTUyAqKmBqdXN0aWZ5LXNlbGZgKiogcHJvcGVydHkgc2V0cyB0aGUgd2F5IGEgYm94IGlzIGp1c3RpZmllZCBpbnNpZGUgaXRzIGFsaWdubWVudCBjb250YWluZXIgYWxvbmcgdGhlIGFwcHJvcHJpYXRlIGF4aXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IG5vcm1hbCB8IHN0cmV0Y2ggfCA8YmFzZWxpbmUtcG9zaXRpb24+IHwgPG92ZXJmbG93LXBvc2l0aW9uPj8gWyA8c2VsZi1wb3NpdGlvbj4gfCBsZWZ0IHwgcmlnaHQgXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIC0tLQogICAqCiAgICogX1N1cHBvcnRlZCBpbiBGbGV4IExheW91dF8KICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjQ1KiogIHwgKioxMC4xKiogfCAqKjE2KiogfCBObyAgfAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIEdyaWQgTGF5b3V0XwogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCAgICAgIElFICAgICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi0tLS0tLS0tLS06IHwKICAgKiB8ICoqNTcqKiB8ICoqNDUqKiAgfCAqKjEwLjEqKiB8ICoqMTYqKiB8ICoqMTAqKiBfLXgtXyB8CiAgICoKICAgKiAtLS0KICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2p1c3RpZnktc2VsZgogICAqLwogIGp1c3RpZnlTZWxmPzogUHJvcGVydHkuSnVzdGlmeVNlbGYgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGp1c3RpZnktdHJhY2tzYCoqwqBDU1MgcHJvcGVydHkgc2V0cyB0aGUgYWxpZ25tZW50IGluIHRoZSBtYXNvbnJ5IGF4aXMgZm9yIGdyaWQgY29udGFpbmVycyB0aGF0IGhhdmUgbWFzb25yeSBpbiB0aGVpciBpbmxpbmXCoGF4aXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyBub3JtYWwgfCA8Y29udGVudC1kaXN0cmlidXRpb24+IHwgPG92ZXJmbG93LXBvc2l0aW9uPj8gWyA8Y29udGVudC1wb3NpdGlvbj4gfCBsZWZ0IHwgcmlnaHQgXSBdI2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgRWRnZSB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tOiB8IDotOiB8CiAgICogfCAgIE5vICAgfCAgIG4vYSAgIHwgICBObyAgIHwgIE5vICB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9qdXN0aWZ5LXRyYWNrcwogICAqLwogIGp1c3RpZnlUcmFja3M/OiBQcm9wZXJ0eS5KdXN0aWZ5VHJhY2tzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBsZWZ0YCoqIENTUyBwcm9wZXJ0eSBwYXJ0aWNpcGF0ZXMgaW4gc3BlY2lmeWluZyB0aGUgaG9yaXpvbnRhbCBwb3NpdGlvbiBvZiBhIHBvc2l0aW9uZWQgZWxlbWVudC4gSXQgaGFzIG5vIGVmZmVjdCBvbiBub24tcG9zaXRpb25lZCBlbGVtZW50cy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPiB8IDxwZXJjZW50YWdlPiB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgIElFICAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjUuNSoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2xlZnQKICAgKi8KICBsZWZ0PzogUHJvcGVydHkuTGVmdDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbGV0dGVyLXNwYWNpbmdgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGhvcml6b250YWwgc3BhY2luZyBiZWhhdmlvciBiZXR3ZWVuIHRleHQgY2hhcmFjdGVycy4gVGhpcyB2YWx1ZSBpcyBhZGRlZCB0byB0aGUgbmF0dXJhbCBzcGFjaW5nIGJldHdlZW4gY2hhcmFjdGVycyB3aGlsZSByZW5kZXJpbmcgdGhlIHRleHQuIFBvc2l0aXZlIHZhbHVlcyBvZiBgbGV0dGVyLXNwYWNpbmdgIGNhdXNlcyBjaGFyYWN0ZXJzIHRvIHNwcmVhZCBmYXJ0aGVyIGFwYXJ0LCB3aGlsZSBuZWdhdGl2ZSB2YWx1ZXMgb2YgYGxldHRlci1zcGFjaW5nYCBicmluZyBjaGFyYWN0ZXJzIGNsb3NlciB0b2dldGhlci4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCA8bGVuZ3RoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9sZXR0ZXItc3BhY2luZwogICAqLwogIGxldHRlclNwYWNpbmc/OiBQcm9wZXJ0eS5MZXR0ZXJTcGFjaW5nPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBsaW5lLWJyZWFrYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyB0byBicmVhayBsaW5lcyBvZiBDaGluZXNlLCBKYXBhbmVzZSwgb3IgS29yZWFuIChDSkspIHRleHQgd2hlbiB3b3JraW5nIHdpdGggcHVuY3R1YXRpb24gYW5kIHN5bWJvbHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IGxvb3NlIHwgbm9ybWFsIHwgc3RyaWN0IHwgYW55d2hlcmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS0tOiB8CiAgICogfCAqKjU4KiogIHwgKio2OSoqICB8ICoqMTEqKiAgfCAqKjE0KiogfCAqKjUuNSoqIHwKICAgKiB8IDEgXy14LV8gfCAgICAgICAgIHwgMyBfLXgtXyB8ICAgICAgICB8ICAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbGluZS1icmVhawogICAqLwogIGxpbmVCcmVhaz86IFByb3BlcnR5LkxpbmVCcmVhayB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbGluZS1oZWlnaHRgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGhlaWdodCBvZiBhIGxpbmUgYm94LiBJdCdzIGNvbW1vbmx5IHVzZWQgdG8gc2V0IHRoZSBkaXN0YW5jZSBiZXR3ZWVuIGxpbmVzIG9mIHRleHQuIE9uIGJsb2NrLWxldmVsIGVsZW1lbnRzLCBpdCBzcGVjaWZpZXMgdGhlIG1pbmltdW0gaGVpZ2h0IG9mIGxpbmUgYm94ZXMgd2l0aGluIHRoZSBlbGVtZW50LiBPbiBub24tcmVwbGFjZWQgaW5saW5lIGVsZW1lbnRzLCBpdCBzcGVjaWZpZXMgdGhlIGhlaWdodCB0aGF0IGlzIHVzZWQgdG8gY2FsY3VsYXRlIGxpbmUgYm94IGhlaWdodC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCA8bnVtYmVyPiB8IDxsZW5ndGg+IHwgPHBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2xpbmUtaGVpZ2h0CiAgICovCiAgbGluZUhlaWdodD86IFByb3BlcnR5LkxpbmVIZWlnaHQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGxpbmUtaGVpZ2h0LXN0ZXBgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHN0ZXAgdW5pdCBmb3IgbGluZSBib3ggaGVpZ2h0cy4gV2hlbiB0aGUgcHJvcGVydHkgaXMgc2V0LCBsaW5lIGJveCBoZWlnaHRzIGFyZSByb3VuZGVkIHVwIHRvIHRoZSBjbG9zZXN0IG11bHRpcGxlIG9mIHRoZSB1bml0LgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgRWRnZSB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tOiB8IDotOiB8CiAgICogfCAgbi9hICAgfCAgIE5vICAgIHwgICBObyAgIHwgbi9hICB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9saW5lLWhlaWdodC1zdGVwCiAgICovCiAgbGluZUhlaWdodFN0ZXA/OiBQcm9wZXJ0eS5MaW5lSGVpZ2h0U3RlcDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbGlzdC1zdHlsZS1pbWFnZWAqKiBDU1MgcHJvcGVydHkgc2V0cyBhbiBpbWFnZSB0byBiZSB1c2VkIGFzIHRoZSBsaXN0IGl0ZW0gbWFya2VyLgogICAqCiAgICogKipTeW50YXgqKjogYDxpbWFnZT4gfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9saXN0LXN0eWxlLWltYWdlCiAgICovCiAgbGlzdFN0eWxlSW1hZ2U/OiBQcm9wZXJ0eS5MaXN0U3R5bGVJbWFnZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbGlzdC1zdHlsZS1wb3NpdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgcG9zaXRpb24gb2YgdGhlIGA6Om1hcmtlcmAgcmVsYXRpdmUgdG8gYSBsaXN0IGl0ZW0uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgaW5zaWRlIHwgb3V0c2lkZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgb3V0c2lkZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbGlzdC1zdHlsZS1wb3NpdGlvbgogICAqLwogIGxpc3RTdHlsZVBvc2l0aW9uPzogUHJvcGVydHkuTGlzdFN0eWxlUG9zaXRpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGxpc3Qtc3R5bGUtdHlwZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbWFya2VyIChzdWNoIGFzIGEgZGlzYywgY2hhcmFjdGVyLCBvciBjdXN0b20gY291bnRlciBzdHlsZSkgb2YgYSBsaXN0IGl0ZW0gZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y291bnRlci1zdHlsZT4gfCA8c3RyaW5nPiB8IG5vbmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGRpc2NgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2xpc3Qtc3R5bGUtdHlwZQogICAqLwogIGxpc3RTdHlsZVR5cGU/OiBQcm9wZXJ0eS5MaXN0U3R5bGVUeXBlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXJnaW4tYmxvY2tgKiogQ1NTIHNob3J0aGFuZCBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIGJsb2NrIHN0YXJ0IGFuZCBlbmQgbWFyZ2lucyBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIHBoeXNpY2FsIG1hcmdpbnMgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdtYXJnaW4tbGVmdCc+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4NyoqIHwgKio2NioqICB8ICoqMTQuMSoqIHwgKio4NyoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hcmdpbi1ibG9jawogICAqLwogIG1hcmdpbkJsb2NrPzogUHJvcGVydHkuTWFyZ2luQmxvY2s8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hcmdpbi1ibG9jay1lbmRgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgYmxvY2sgZW5kIG1hcmdpbiBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgbWFyZ2luIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYDwnbWFyZ2luLWxlZnQnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjQxKiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbWFyZ2luLWJsb2NrLWVuZAogICAqLwogIG1hcmdpbkJsb2NrRW5kPzogUHJvcGVydHkuTWFyZ2luQmxvY2tFbmQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hcmdpbi1ibG9jay1zdGFydGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBibG9jayBzdGFydCBtYXJnaW4gb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIG1hcmdpbiBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J21hcmdpbi1sZWZ0Jz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio0MSoqICB8ICoqMTIuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hcmdpbi1ibG9jay1zdGFydAogICAqLwogIG1hcmdpbkJsb2NrU3RhcnQ/OiBQcm9wZXJ0eS5NYXJnaW5CbG9ja1N0YXJ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXJnaW4tYm90dG9tYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBtYXJnaW4gYXJlYSBvbiB0aGUgYm90dG9tIG9mIGFuIGVsZW1lbnQuIEEgcG9zaXRpdmUgdmFsdWUgcGxhY2VzIGl0IGZhcnRoZXIgZnJvbSBpdHMgbmVpZ2hib3JzLCB3aGlsZSBhIG5lZ2F0aXZlIHZhbHVlIHBsYWNlcyBpdCBjbG9zZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD4gfCA8cGVyY2VudGFnZT4gfCBhdXRvYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjMqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXJnaW4tYm90dG9tCiAgICovCiAgbWFyZ2luQm90dG9tPzogUHJvcGVydHkuTWFyZ2luQm90dG9tPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXJnaW4taW5saW5lYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgaXMgYSBzaG9ydGhhbmQgcHJvcGVydHkgdGhhdCBkZWZpbmVzIGJvdGggdGhlIGxvZ2ljYWwgaW5saW5lIHN0YXJ0IGFuZCBlbmQgbWFyZ2lucyBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIHBoeXNpY2FsIG1hcmdpbnMgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdtYXJnaW4tbGVmdCc+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4NyoqIHwgKio2NioqICB8ICoqMTQuMSoqIHwgKio4NyoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hcmdpbi1pbmxpbmUKICAgKi8KICBtYXJnaW5JbmxpbmU/OiBQcm9wZXJ0eS5NYXJnaW5JbmxpbmU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hcmdpbi1pbmxpbmUtZW5kYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIGlubGluZSBlbmQgbWFyZ2luIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBtYXJnaW4gZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEluIG90aGVyIHdvcmRzLCBpdCBjb3JyZXNwb25kcyB0byB0aGUgYG1hcmdpbi10b3BgLCBgbWFyZ2luLXJpZ2h0YCwgYG1hcmdpbi1ib3R0b21gIG9yIGBtYXJnaW4tbGVmdGAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnbWFyZ2luLWxlZnQnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgICAgICAgICAgQ2hyb21lICAgICAgICAgIHwgICAgICAgIEZpcmVmb3ggICAgICAgIHwgICAgICAgICAgU2FmYXJpICAgICAgICAgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAgICAgICAgICAqKjY5KiogICAgICAgICAgfCAgICAgICAgKio0MSoqICAgICAgICAgfCAgICAgICAgICoqMTIuMSoqICAgICAgICAgfCAqKjc5KiogfCBObyAgfAogICAqIHwgMiBfKC13ZWJraXQtbWFyZ2luLWVuZClfIHwgMyBfKC1tb3otbWFyZ2luLWVuZClfIHwgMyBfKC13ZWJraXQtbWFyZ2luLWVuZClfIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hcmdpbi1pbmxpbmUtZW5kCiAgICovCiAgbWFyZ2luSW5saW5lRW5kPzogUHJvcGVydHkuTWFyZ2luSW5saW5lRW5kPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXJnaW4taW5saW5lLXN0YXJ0YCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIGlubGluZSBzdGFydCBtYXJnaW4gb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIG1hcmdpbiBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGBtYXJnaW4tdG9wYCwgYG1hcmdpbi1yaWdodGAsIGBtYXJnaW4tYm90dG9tYCwgb3IgYG1hcmdpbi1sZWZ0YCBwcm9wZXJ0eSBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBkZWZpbmVkIGZvciBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdtYXJnaW4tbGVmdCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCAgICAgICAgICAgQ2hyb21lICAgICAgICAgICB8ICAgICAgICAgRmlyZWZveCAgICAgICAgIHwgICAgICAgICAgIFNhZmFyaSAgICAgICAgICAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICAgICAgICAgICAqKjY5KiogICAgICAgICAgIHwgICAgICAgICAqKjQxKiogICAgICAgICAgfCAgICAgICAgICAqKjEyLjEqKiAgICAgICAgICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAyIF8oLXdlYmtpdC1tYXJnaW4tc3RhcnQpXyB8IDMgXygtbW96LW1hcmdpbi1zdGFydClfIHwgMyBfKC13ZWJraXQtbWFyZ2luLXN0YXJ0KV8gfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbWFyZ2luLWlubGluZS1zdGFydAogICAqLwogIG1hcmdpbklubGluZVN0YXJ0PzogUHJvcGVydHkuTWFyZ2luSW5saW5lU3RhcnQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hcmdpbi1sZWZ0YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBtYXJnaW4gYXJlYSBvbiB0aGUgbGVmdCBzaWRlIG9mIGFuIGVsZW1lbnQuIEEgcG9zaXRpdmUgdmFsdWUgcGxhY2VzIGl0IGZhcnRoZXIgZnJvbSBpdHMgbmVpZ2hib3JzLCB3aGlsZSBhIG5lZ2F0aXZlIHZhbHVlIHBsYWNlcyBpdCBjbG9zZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD4gfCA8cGVyY2VudGFnZT4gfCBhdXRvYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjMqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXJnaW4tbGVmdAogICAqLwogIG1hcmdpbkxlZnQ/OiBQcm9wZXJ0eS5NYXJnaW5MZWZ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXJnaW4tcmlnaHRgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG1hcmdpbiBhcmVhIG9uIHRoZSByaWdodCBzaWRlIG9mIGFuIGVsZW1lbnQuIEEgcG9zaXRpdmUgdmFsdWUgcGxhY2VzIGl0IGZhcnRoZXIgZnJvbSBpdHMgbmVpZ2hib3JzLCB3aGlsZSBhIG5lZ2F0aXZlIHZhbHVlIHBsYWNlcyBpdCBjbG9zZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD4gfCA8cGVyY2VudGFnZT4gfCBhdXRvYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjMqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXJnaW4tcmlnaHQKICAgKi8KICBtYXJnaW5SaWdodD86IFByb3BlcnR5Lk1hcmdpblJpZ2h0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXJnaW4tdG9wYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBtYXJnaW4gYXJlYSBvbiB0aGUgdG9wIG9mIGFuIGVsZW1lbnQuIEEgcG9zaXRpdmUgdmFsdWUgcGxhY2VzIGl0IGZhcnRoZXIgZnJvbSBpdHMgbmVpZ2hib3JzLCB3aGlsZSBhIG5lZ2F0aXZlIHZhbHVlIHBsYWNlcyBpdCBjbG9zZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD4gfCA8cGVyY2VudGFnZT4gfCBhdXRvYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjMqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXJnaW4tdG9wCiAgICovCiAgbWFyZ2luVG9wPzogUHJvcGVydHkuTWFyZ2luVG9wPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXNrLWJvcmRlci1tb2RlYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIGJsZW5kaW5nIG1vZGUgdXNlZCBpbiBhIG1hc2sgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYGx1bWluYW5jZSB8IGFscGhhYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhbHBoYWAKICAgKi8KICBtYXNrQm9yZGVyTW9kZT86IFByb3BlcnR5Lk1hc2tCb3JkZXJNb2RlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXNrLWJvcmRlci1vdXRzZXRgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgZGlzdGFuY2UgYnkgd2hpY2ggYW4gZWxlbWVudCdzIG1hc2sgYm9yZGVyIGlzIHNldCBvdXQgZnJvbSBpdHMgYm9yZGVyIGJveC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDxsZW5ndGg+IHwgPG51bWJlcj4gXXsxLDR9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCAgICAgICAgICAgICAgICAgQ2hyb21lICAgICAgICAgICAgICAgICAgfCBGaXJlZm94IHwgICAgICAgICAgICAgICAgICBTYWZhcmkgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICBFZGdlICAgICAgICAgICAgICAgICAgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LTogfAogICAqIHwgKioxKiogXygtd2Via2l0LW1hc2stYm94LWltYWdlLW91dHNldClfIHwgICBObyAgICB8ICoqMy4xKiogXygtd2Via2l0LW1hc2stYm94LWltYWdlLW91dHNldClfIHwgKio3OSoqIF8oLXdlYmtpdC1tYXNrLWJveC1pbWFnZS1vdXRzZXQpXyB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXNrLWJvcmRlci1vdXRzZXQKICAgKi8KICBtYXNrQm9yZGVyT3V0c2V0PzogUHJvcGVydHkuTWFza0JvcmRlck91dHNldDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1ib3JkZXItcmVwZWF0YCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyB0aGUgZWRnZSByZWdpb25zIG9mIGEgc291cmNlIGltYWdlIGFyZSBhZGp1c3RlZCB0byBmaXQgdGhlIGRpbWVuc2lvbnMgb2YgYW4gZWxlbWVudCdzIG1hc2sgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYFsgc3RyZXRjaCB8IHJlcGVhdCB8IHJvdW5kIHwgc3BhY2UgXXsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzdHJldGNoYAogICAqCiAgICogfCAgICAgICAgICAgICAgICAgQ2hyb21lICAgICAgICAgICAgICAgICAgfCBGaXJlZm94IHwgICAgICAgICAgICAgICAgICBTYWZhcmkgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICBFZGdlICAgICAgICAgICAgICAgICAgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LTogfAogICAqIHwgKioxKiogXygtd2Via2l0LW1hc2stYm94LWltYWdlLXJlcGVhdClfIHwgICBObyAgICB8ICoqMy4xKiogXygtd2Via2l0LW1hc2stYm94LWltYWdlLXJlcGVhdClfIHwgKio3OSoqIF8oLXdlYmtpdC1tYXNrLWJveC1pbWFnZS1yZXBlYXQpXyB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXNrLWJvcmRlci1yZXBlYXQKICAgKi8KICBtYXNrQm9yZGVyUmVwZWF0PzogUHJvcGVydHkuTWFza0JvcmRlclJlcGVhdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1ib3JkZXItc2xpY2VgKiogQ1NTIHByb3BlcnR5IGRpdmlkZXMgdGhlIGltYWdlIHNldCBieSBgbWFzay1ib3JkZXItc291cmNlYCBpbnRvIHJlZ2lvbnMuIFRoZXNlIHJlZ2lvbnMgYXJlIHVzZWQgdG8gZm9ybSB0aGUgY29tcG9uZW50cyBvZiBhbiBlbGVtZW50J3MgbWFzayBib3JkZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPG51bWJlci1wZXJjZW50YWdlPnsxLDR9IGZpbGw/YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCAgICAgICAgICAgICAgICAgQ2hyb21lICAgICAgICAgICAgICAgICB8IEZpcmVmb3ggfCAgICAgICAgICAgICAgICAgIFNhZmFyaSAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgICBFZGdlICAgICAgICAgICAgICAgICAgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LTogfAogICAqIHwgKioxKiogXygtd2Via2l0LW1hc2stYm94LWltYWdlLXNsaWNlKV8gfCAgIE5vICAgIHwgKiozLjEqKiBfKC13ZWJraXQtbWFzay1ib3gtaW1hZ2Utc2xpY2UpXyB8ICoqNzkqKiBfKC13ZWJraXQtbWFzay1ib3gtaW1hZ2Utc2xpY2UpXyB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXNrLWJvcmRlci1zbGljZQogICAqLwogIG1hc2tCb3JkZXJTbGljZT86IFByb3BlcnR5Lk1hc2tCb3JkZXJTbGljZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1ib3JkZXItc291cmNlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBzb3VyY2UgaW1hZ2UgdXNlZCB0byBjcmVhdGUgYW4gZWxlbWVudCdzIG1hc2sgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8aW1hZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCAgICAgICAgICAgICAgICAgQ2hyb21lICAgICAgICAgICAgICAgICAgfCBGaXJlZm94IHwgICAgICAgICAgICAgICAgICBTYWZhcmkgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICBFZGdlICAgICAgICAgICAgICAgICAgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LTogfAogICAqIHwgKioxKiogXygtd2Via2l0LW1hc2stYm94LWltYWdlLXNvdXJjZSlfIHwgICBObyAgICB8ICoqMy4xKiogXygtd2Via2l0LW1hc2stYm94LWltYWdlLXNvdXJjZSlfIHwgKio3OSoqIF8oLXdlYmtpdC1tYXNrLWJveC1pbWFnZS1zb3VyY2UpXyB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXNrLWJvcmRlci1zb3VyY2UKICAgKi8KICBtYXNrQm9yZGVyU291cmNlPzogUHJvcGVydHkuTWFza0JvcmRlclNvdXJjZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1ib3JkZXItd2lkdGhgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHdpZHRoIG9mIGFuIGVsZW1lbnQncyBtYXNrIGJvcmRlci4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDxsZW5ndGgtcGVyY2VudGFnZT4gfCA8bnVtYmVyPiB8IGF1dG8gXXsxLDR9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCAgICAgICAgICAgICAgICAgQ2hyb21lICAgICAgICAgICAgICAgICB8IEZpcmVmb3ggfCAgICAgICAgICAgICAgICAgIFNhZmFyaSAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgICBFZGdlICAgICAgICAgICAgICAgICAgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LTogfAogICAqIHwgKioxKiogXygtd2Via2l0LW1hc2stYm94LWltYWdlLXdpZHRoKV8gfCAgIE5vICAgIHwgKiozLjEqKiBfKC13ZWJraXQtbWFzay1ib3gtaW1hZ2Utd2lkdGgpXyB8ICoqNzkqKiBfKC13ZWJraXQtbWFzay1ib3gtaW1hZ2Utd2lkdGgpXyB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXNrLWJvcmRlci13aWR0aAogICAqLwogIG1hc2tCb3JkZXJXaWR0aD86IFByb3BlcnR5Lk1hc2tCb3JkZXJXaWR0aDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1jbGlwYCoqIENTUyBwcm9wZXJ0eSBkZXRlcm1pbmVzIHRoZSBhcmVhIHdoaWNoIGlzIGFmZmVjdGVkIGJ5IGEgbWFzay4gVGhlIHBhaW50ZWQgY29udGVudCBvZiBhbiBlbGVtZW50IG11c3QgYmUgcmVzdHJpY3RlZCB0byB0aGlzIGFyZWEuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8Z2VvbWV0cnktYm94PiB8IG5vLWNsaXAgXSNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGJvcmRlci1ib3hgCiAgICoKICAgKiB8ICAgQ2hyb21lICAgIHwgRmlyZWZveCB8ICAgU2FmYXJpICAgIHwgICAgIEVkZ2UgICAgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS06IHwgOi0tLS0tLS0tLS06IHwgOi06IHwKICAgKiB8ICoqMSoqIF8teC1fIHwgKio1MyoqICB8ICoqNCoqIF8teC1fIHwgKio3OSoqIF8teC1fIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hc2stY2xpcAogICAqLwogIG1hc2tDbGlwPzogUHJvcGVydHkuTWFza0NsaXAgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hc2stY29tcG9zaXRlYCoqIENTUyBwcm9wZXJ0eSByZXByZXNlbnRzIGEgY29tcG9zaXRpbmcgb3BlcmF0aW9uIHVzZWQgb24gdGhlIGN1cnJlbnQgbWFzayBsYXllciB3aXRoIHRoZSBtYXNrIGxheWVycyBiZWxvdyBpdC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29tcG9zaXRpbmctb3BlcmF0b3I+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYWRkYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS06IHwgOi06IHwKICAgKiB8ICAgTm8gICB8ICoqNTMqKiAgfCAgIE5vICAgfCAxOC03OSB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXNrLWNvbXBvc2l0ZQogICAqLwogIG1hc2tDb21wb3NpdGU/OiBQcm9wZXJ0eS5NYXNrQ29tcG9zaXRlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXNrLWltYWdlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBpbWFnZSB0aGF0IGlzIHVzZWQgYXMgbWFzayBsYXllciBmb3IgYW4gZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bWFzay1yZWZlcmVuY2U+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgICBDaHJvbWUgICAgfCBGaXJlZm94IHwgICBTYWZhcmkgICAgfCBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLS0tOiB8IDotLS06IHwgOi06IHwKICAgKiB8ICoqMSoqIF8teC1fIHwgKio1MyoqICB8ICoqNCoqIF8teC1fIHwgMTYtNzkgfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbWFzay1pbWFnZQogICAqLwogIG1hc2tJbWFnZT86IFByb3BlcnR5Lk1hc2tJbWFnZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1tb2RlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgdGhlIG1hc2sgcmVmZXJlbmNlIGRlZmluZWQgYnkgYG1hc2staW1hZ2VgIGlzIHRyZWF0ZWQgYXMgYSBsdW1pbmFuY2Ugb3IgYWxwaGEgbWFzay4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bWFza2luZy1tb2RlPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG1hdGNoLXNvdXJjZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8IEVkZ2UgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLTogfCA6LTogfAogICAqIHwgICBObyAgIHwgKio1MyoqICB8ICAgTm8gICB8ICBObyAgfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbWFzay1tb2RlCiAgICovCiAgbWFza01vZGU/OiBQcm9wZXJ0eS5NYXNrTW9kZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1vcmlnaW5gKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG9yaWdpbiBvZiBhIG1hc2suCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGdlb21ldHJ5LWJveD4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBib3JkZXItYm94YAogICAqCiAgICogfCAgIENocm9tZSAgICB8IEZpcmVmb3ggfCAgIFNhZmFyaSAgICB8ICAgICBFZGdlICAgICB8IElFICB8CiAgICogfCA6LS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tOiB8IDotOiB8CiAgICogfCAqKjEqKiBfLXgtXyB8ICoqNTMqKiAgfCAqKjQqKiBfLXgtXyB8ICoqNzkqKiBfLXgtXyB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXNrLW9yaWdpbgogICAqLwogIG1hc2tPcmlnaW4/OiBQcm9wZXJ0eS5NYXNrT3JpZ2luIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXNrLXBvc2l0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBpbml0aWFsIHBvc2l0aW9uLCByZWxhdGl2ZSB0byB0aGUgbWFzayBwb3NpdGlvbiBsYXllciBzZXQgYnkgYG1hc2stb3JpZ2luYCwgZm9yIGVhY2ggZGVmaW5lZCBtYXNrIGltYWdlLgogICAqCiAgICogKipTeW50YXgqKjogYDxwb3NpdGlvbj4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjZW50ZXJgCiAgICoKICAgKiB8ICAgQ2hyb21lICAgIHwgRmlyZWZveCB8ICAgIFNhZmFyaSAgICAgfCBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLS0tLS06IHwgOi0tLTogfCA6LTogfAogICAqIHwgKioxKiogXy14LV8gfCAqKjUzKiogIHwgKiozLjEqKiBfLXgtXyB8IDE4LTc5IHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hc2stcG9zaXRpb24KICAgKi8KICBtYXNrUG9zaXRpb24/OiBQcm9wZXJ0eS5NYXNrUG9zaXRpb248VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hc2stcmVwZWF0YCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBtYXNrIGltYWdlcyBhcmUgcmVwZWF0ZWQuIEEgbWFzayBpbWFnZSBjYW4gYmUgcmVwZWF0ZWQgYWxvbmcgdGhlIGhvcml6b250YWwgYXhpcywgdGhlIHZlcnRpY2FsIGF4aXMsIGJvdGggYXhlcywgb3Igbm90IHJlcGVhdGVkIGF0IGFsbC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8cmVwZWF0LXN0eWxlPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vLXJlcGVhdGAKICAgKgogICAqIHwgICBDaHJvbWUgICAgfCBGaXJlZm94IHwgICAgU2FmYXJpICAgICB8IEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS0tLTogfCA6LS0tOiB8IDotOiB8CiAgICogfCAqKjEqKiBfLXgtXyB8ICoqNTMqKiAgfCAqKjMuMSoqIF8teC1fIHwgMTgtNzkgfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbWFzay1yZXBlYXQKICAgKi8KICBtYXNrUmVwZWF0PzogUHJvcGVydHkuTWFza1JlcGVhdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1zaXplYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIHNpemVzIG9mIHRoZSBtYXNrIGltYWdlcy4gVGhlIHNpemUgb2YgdGhlIGltYWdlIGNhbiBiZSBmdWxseSBvciBwYXJ0aWFsbHkgY29uc3RyYWluZWQgaW4gb3JkZXIgdG8gcHJlc2VydmUgaXRzIGludHJpbnNpYyByYXRpby4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Ymctc2l6ZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCAgIENocm9tZSAgICB8IEZpcmVmb3ggfCAgIFNhZmFyaSAgICB8IEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS06IHwgOi0tLTogfCA6LTogfAogICAqIHwgKio0KiogXy14LV8gfCAqKjUzKiogIHwgKio0KiogXy14LV8gfCAxOC03OSB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXNrLXNpemUKICAgKi8KICBtYXNrU2l6ZT86IFByb3BlcnR5Lk1hc2tTaXplPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXNrLXR5cGVgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hldGhlciBhbiBTVkcgYDxtYXNrPmAgZWxlbWVudCBpcyB1c2VkIGFzIGEgX2x1bWluYW5jZV8gb3IgYW4gX2FscGhhXyBtYXNrLiBJdCBhcHBsaWVzIHRvIHRoZSBgPG1hc2s+YCBlbGVtZW50IGl0c2VsZi4KICAgKgogICAqICoqU3ludGF4Kio6IGBsdW1pbmFuY2UgfCBhbHBoYWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbHVtaW5hbmNlYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKioyNCoqIHwgKiozNSoqICB8ICoqNyoqICB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXNrLXR5cGUKICAgKi8KICBtYXNrVHlwZT86IFByb3BlcnR5Lk1hc2tUeXBlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgbWF0aC1zdHlsZWAgcHJvcGVydHnCoGluZGljYXRlcyB3aGV0aGVyIE1hdGhNTCBlcXVhdGlvbnMgc2hvdWxkIHJlbmRlciB3aXRoIG5vcm1hbCBvciBjb21wYWN0IGhlaWdodC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCBjb21wYWN0YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8IEVkZ2UgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tOiB8IDotOiB8CiAgICogfCAgbi9hICAgfCAgIG4vYSAgIHwgKioxNC4xKiogfCAgTm8gIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hdGgtc3R5bGUKICAgKi8KICBtYXRoU3R5bGU/OiBQcm9wZXJ0eS5NYXRoU3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKm1heC1ibG9jay1zaXplKipgIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIG1heGltdW0gc2l6ZSBvZiBhbiBlbGVtZW50IGluIHRoZSBkaXJlY3Rpb24gb3Bwb3NpdGUgdGhhdCBvZiB0aGUgd3JpdGluZyBkaXJlY3Rpb24gYXMgc3BlY2lmaWVkIGJ5IGB3cml0aW5nLW1vZGVgLiBUaGF0IGlzLCBpZiB0aGUgd3JpdGluZyBkaXJlY3Rpb24gaXMgaG9yaXpvbnRhbCwgdGhlbiBgbWF4LWJsb2NrLXNpemVgIGlzIGVxdWl2YWxlbnQgdG8gYG1heC1oZWlnaHRgOyBpZiB0aGUgd3JpdGluZyBkaXJlY3Rpb24gaXMgdmVydGljYWwsIGBtYXgtYmxvY2stc2l6ZWAgaXMgdGhlIHNhbWUgYXMgYG1heC13aWR0aGAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdtYXgtd2lkdGgnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjQxKiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbWF4LWJsb2NrLXNpemUKICAgKi8KICBtYXhCbG9ja1NpemU/OiBQcm9wZXJ0eS5NYXhCbG9ja1NpemU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1heC1oZWlnaHRgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG1heGltdW0gaGVpZ2h0IG9mIGFuIGVsZW1lbnQuIEl0IHByZXZlbnRzIHRoZSB1c2VkIHZhbHVlIG9mIHRoZSBgaGVpZ2h0YCBwcm9wZXJ0eSBmcm9tIGJlY29taW5nIGxhcmdlciB0aGFuIHRoZSB2YWx1ZSBzcGVjaWZpZWQgZm9yIGBtYXgtaGVpZ2h0YC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPGxlbmd0aC1wZXJjZW50YWdlPiB8IG1pbi1jb250ZW50IHwgbWF4LWNvbnRlbnQgfCBmaXQtY29udGVudCB8IGZpdC1jb250ZW50KDxsZW5ndGgtcGVyY2VudGFnZT4pYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxOCoqIHwgICoqMSoqICB8ICoqMS4zKiogfCAqKjEyKiogfCAqKjcqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXgtaGVpZ2h0CiAgICovCiAgbWF4SGVpZ2h0PzogUHJvcGVydHkuTWF4SGVpZ2h0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXgtaW5saW5lLXNpemVgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGhvcml6b250YWwgb3IgdmVydGljYWwgbWF4aW11bSBzaXplIG9mIGFuIGVsZW1lbnQncyBibG9jaywgZGVwZW5kaW5nIG9uIGl0cyB3cml0aW5nIG1vZGUuIEl0IGNvcnJlc3BvbmRzIHRvIGVpdGhlciB0aGUgYG1heC13aWR0aGAgb3IgdGhlIGBtYXgtaGVpZ2h0YCBwcm9wZXJ0eSwgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZSBvZiBgd3JpdGluZy1tb2RlYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J21heC13aWR0aCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgICBTYWZhcmkgICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjQxKiogIHwgICoqMTIuMSoqICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAgICAgICAgfCAgICAgICAgIHwgMTAuMSBfLXgtXyB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXgtaW5saW5lLXNpemUKICAgKi8KICBtYXhJbmxpbmVTaXplPzogUHJvcGVydHkuTWF4SW5saW5lU2l6ZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxpbnRlZ2VyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICBtYXhMaW5lcz86IFByb3BlcnR5Lk1heExpbmVzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXgtd2lkdGhgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG1heGltdW0gd2lkdGggb2YgYW4gZWxlbWVudC4gSXQgcHJldmVudHMgdGhlIHVzZWQgdmFsdWUgb2YgdGhlIGB3aWR0aGAgcHJvcGVydHkgZnJvbSBiZWNvbWluZyBsYXJnZXIgdGhhbiB0aGUgdmFsdWUgc3BlY2lmaWVkIGJ5IGBtYXgtd2lkdGhgLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8bGVuZ3RoLXBlcmNlbnRhZ2U+IHwgbWluLWNvbnRlbnQgfCBtYXgtY29udGVudCB8IGZpdC1jb250ZW50IHwgZml0LWNvbnRlbnQoPGxlbmd0aC1wZXJjZW50YWdlPilgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNyoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21heC13aWR0aAogICAqLwogIG1heFdpZHRoPzogUHJvcGVydHkuTWF4V2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1pbi1ibG9jay1zaXplYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBtaW5pbXVtIGhvcml6b250YWwgb3IgdmVydGljYWwgc2l6ZSBvZiBhbiBlbGVtZW50J3MgYmxvY2ssIGRlcGVuZGluZyBvbiBpdHMgd3JpdGluZyBtb2RlLiBJdCBjb3JyZXNwb25kcyB0byBlaXRoZXIgdGhlIGBtaW4td2lkdGhgIG9yIHRoZSBgbWluLWhlaWdodGAgcHJvcGVydHksIGRlcGVuZGluZyBvbiB0aGUgdmFsdWUgb2YgYHdyaXRpbmctbW9kZWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdtaW4td2lkdGgnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjQxKiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbWluLWJsb2NrLXNpemUKICAgKi8KICBtaW5CbG9ja1NpemU/OiBQcm9wZXJ0eS5NaW5CbG9ja1NpemU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1pbi1oZWlnaHRgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG1pbmltdW0gaGVpZ2h0IG9mIGFuIGVsZW1lbnQuIEl0IHByZXZlbnRzIHRoZSB1c2VkIHZhbHVlIG9mIHRoZSBgaGVpZ2h0YCBwcm9wZXJ0eSBmcm9tIGJlY29taW5nIHNtYWxsZXIgdGhhbiB0aGUgdmFsdWUgc3BlY2lmaWVkIGZvciBgbWluLWhlaWdodGAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IDxsZW5ndGg+IHwgPHBlcmNlbnRhZ2U+IHwgbWluLWNvbnRlbnQgfCBtYXgtY29udGVudCB8IGZpdC1jb250ZW50IHwgZml0LWNvbnRlbnQoPGxlbmd0aC1wZXJjZW50YWdlPilgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKiozKiogIHwgKioxLjMqKiB8ICoqMTIqKiB8ICoqNyoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21pbi1oZWlnaHQKICAgKi8KICBtaW5IZWlnaHQ/OiBQcm9wZXJ0eS5NaW5IZWlnaHQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1pbi1pbmxpbmUtc2l6ZWAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgaG9yaXpvbnRhbCBvciB2ZXJ0aWNhbCBtaW5pbWFsIHNpemUgb2YgYW4gZWxlbWVudCdzIGJsb2NrLCBkZXBlbmRpbmcgb24gaXRzIHdyaXRpbmcgbW9kZS4gSXQgY29ycmVzcG9uZHMgdG8gZWl0aGVyIHRoZSBgbWluLXdpZHRoYCBvciB0aGUgYG1pbi1oZWlnaHRgIHByb3BlcnR5LCBkZXBlbmRpbmcgb24gdGhlIHZhbHVlIG9mIGB3cml0aW5nLW1vZGVgLgogICAqCiAgICogKipTeW50YXgqKjogYDwnbWluLXdpZHRoJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio1NyoqIHwgKio0MSoqICB8ICoqMTIuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21pbi1pbmxpbmUtc2l6ZQogICAqLwogIG1pbklubGluZVNpemU/OiBQcm9wZXJ0eS5NaW5JbmxpbmVTaXplPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtaW4td2lkdGhgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG1pbmltdW0gd2lkdGggb2YgYW4gZWxlbWVudC4gSXQgcHJldmVudHMgdGhlIHVzZWQgdmFsdWUgb2YgdGhlIGB3aWR0aGAgcHJvcGVydHkgZnJvbSBiZWNvbWluZyBzbWFsbGVyIHRoYW4gdGhlIHZhbHVlIHNwZWNpZmllZCBmb3IgYG1pbi13aWR0aGAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IDxsZW5ndGg+IHwgPHBlcmNlbnRhZ2U+IHwgbWluLWNvbnRlbnQgfCBtYXgtY29udGVudCB8IGZpdC1jb250ZW50IHwgZml0LWNvbnRlbnQoPGxlbmd0aC1wZXJjZW50YWdlPilgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNyoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21pbi13aWR0aAogICAqLwogIG1pbldpZHRoPzogUHJvcGVydHkuTWluV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1peC1ibGVuZC1tb2RlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBhbiBlbGVtZW50J3MgY29udGVudCBzaG91bGQgYmxlbmQgd2l0aCB0aGUgY29udGVudCBvZiB0aGUgZWxlbWVudCdzIHBhcmVudCBhbmQgdGhlIGVsZW1lbnQncyBiYWNrZ3JvdW5kLgogICAqCiAgICogKipTeW50YXgqKjogYDxibGVuZC1tb2RlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio0MSoqIHwgKiozMioqICB8ICoqOCoqICB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9taXgtYmxlbmQtbW9kZQogICAqLwogIG1peEJsZW5kTW9kZT86IFByb3BlcnR5Lk1peEJsZW5kTW9kZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb2Zmc2V0LWRpc3RhbmNlYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgYSBwb3NpdGlvbiBhbG9uZyBhbiBgb2Zmc2V0LXBhdGhgIGZvciBhbiBlbGVtZW50IHRvIGJlIHBsYWNlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoLXBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCAgICAgICAgIENocm9tZSAgICAgICAgIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAgICAgICAgICoqNTUqKiAgICAgICAgIHwgKio3MioqICB8ICAgTm8gICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCA0NiBfKG1vdGlvbi1kaXN0YW5jZSlfIHwgICAgICAgICB8ICAgICAgICB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9vZmZzZXQtZGlzdGFuY2UKICAgKi8KICBtb3Rpb25EaXN0YW5jZT86IFByb3BlcnR5Lk9mZnNldERpc3RhbmNlPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvZmZzZXQtcGF0aGAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIGEgbW90aW9uIHBhdGggZm9yIGFuIGVsZW1lbnQgdG8gZm9sbG93IGFuZCBkZWZpbmVzIHRoZSBlbGVtZW50J3MgcG9zaXRpb25pbmcgd2l0aGluIHRoZSBwYXJlbnQgY29udGFpbmVyIG9yIFNWRyBjb29yZGluYXRlIHN5c3RlbS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgcmF5KCBbIDxhbmdsZT4gJiYgPHNpemU+ICYmIGNvbnRhaW4/IF0gKSB8IDxwYXRoKCk+IHwgPHVybD4gfCBbIDxiYXNpYy1zaGFwZT4gfHwgPGdlb21ldHJ5LWJveD4gXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgICAgICAgQ2hyb21lICAgICAgIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICAgICAgICoqNTUqKiAgICAgICB8ICoqNzIqKiAgfCAgIE5vICAgfCAqKjc5KiogfCBObyAgfAogICAqIHwgNDYgXyhtb3Rpb24tcGF0aClfIHwgICAgICAgICB8ICAgICAgICB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9vZmZzZXQtcGF0aAogICAqLwogIG1vdGlvblBhdGg/OiBQcm9wZXJ0eS5PZmZzZXRQYXRoIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvZmZzZXQtcm90YXRlYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBvcmllbnRhdGlvbi9kaXJlY3Rpb24gb2YgdGhlIGVsZW1lbnQgYXMgaXQgaXMgcG9zaXRpb25lZCBhbG9uZyB0aGUgYG9mZnNldC1wYXRoYC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIGF1dG8gfCByZXZlcnNlIF0gfHwgPGFuZ2xlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgICAgICAgICBDaHJvbWUgICAgICAgICB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgICAgICAgICAqKjU2KiogICAgICAgICB8ICoqNzIqKiAgfCAgIE5vICAgfCAqKjc5KiogfCBObyAgfAogICAqIHwgNDYgXyhtb3Rpb24tcm90YXRpb24pXyB8ICAgICAgICAgfCAgICAgICAgfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb2Zmc2V0LXJvdGF0ZQogICAqLwogIG1vdGlvblJvdGF0aW9uPzogUHJvcGVydHkuT2Zmc2V0Um90YXRlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvYmplY3QtZml0YCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyB0aGUgY29udGVudCBvZiBhIHJlcGxhY2VkIGVsZW1lbnQsIHN1Y2ggYXMgYW4gYDxpbWc+YCBvciBgPHZpZGVvPmAsIHNob3VsZCBiZSByZXNpemVkIHRvIGZpdCBpdHMgY29udGFpbmVyLgogICAqCiAgICogKipTeW50YXgqKjogYGZpbGwgfCBjb250YWluIHwgY292ZXIgfCBub25lIHwgc2NhbGUtZG93bmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgZmlsbGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqMzIqKiB8ICoqMzYqKiAgfCAqKjEwKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb2JqZWN0LWZpdAogICAqLwogIG9iamVjdEZpdD86IFByb3BlcnR5Lk9iamVjdEZpdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb2JqZWN0LXBvc2l0aW9uYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIGFsaWdubWVudCBvZiB0aGUgc2VsZWN0ZWQgcmVwbGFjZWQgZWxlbWVudCdzIGNvbnRlbnRzIHdpdGhpbiB0aGUgZWxlbWVudCdzIGJveC4gQXJlYXMgb2YgdGhlIGJveCB3aGljaCBhcmVuJ3QgY292ZXJlZCBieSB0aGUgcmVwbGFjZWQgZWxlbWVudCdzIG9iamVjdCB3aWxsIHNob3cgdGhlIGVsZW1lbnQncyBiYWNrZ3JvdW5kLgogICAqCiAgICogKipTeW50YXgqKjogYDxwb3NpdGlvbj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDUwJSA1MCVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjMyKiogfCAqKjM2KiogIHwgKioxMCoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL29iamVjdC1wb3NpdGlvbgogICAqLwogIG9iamVjdFBvc2l0aW9uPzogUHJvcGVydHkuT2JqZWN0UG9zaXRpb248VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCA8cG9zaXRpb24+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio3OSoqIHwgKio3MioqICB8ICAgTm8gICB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9vZmZzZXQtYW5jaG9yCiAgICovCiAgb2Zmc2V0QW5jaG9yPzogUHJvcGVydHkuT2Zmc2V0QW5jaG9yPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvZmZzZXQtZGlzdGFuY2VgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyBhIHBvc2l0aW9uIGFsb25nIGFuIGBvZmZzZXQtcGF0aGAgZm9yIGFuIGVsZW1lbnQgdG8gYmUgcGxhY2VkLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGgtcGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8ICAgICAgICAgQ2hyb21lICAgICAgICAgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICAgICAgICAgKio1NSoqICAgICAgICAgfCAqKjcyKiogIHwgICBObyAgIHwgKio3OSoqIHwgTm8gIHwKICAgKiB8IDQ2IF8obW90aW9uLWRpc3RhbmNlKV8gfCAgICAgICAgIHwgICAgICAgIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL29mZnNldC1kaXN0YW5jZQogICAqLwogIG9mZnNldERpc3RhbmNlPzogUHJvcGVydHkuT2Zmc2V0RGlzdGFuY2U8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG9mZnNldC1wYXRoYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgYSBtb3Rpb24gcGF0aCBmb3IgYW4gZWxlbWVudCB0byBmb2xsb3cgYW5kIGRlZmluZXMgdGhlIGVsZW1lbnQncyBwb3NpdGlvbmluZyB3aXRoaW4gdGhlIHBhcmVudCBjb250YWluZXIgb3IgU1ZHIGNvb3JkaW5hdGUgc3lzdGVtLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCByYXkoIFsgPGFuZ2xlPiAmJiA8c2l6ZT4gJiYgY29udGFpbj8gXSApIHwgPHBhdGgoKT4gfCA8dXJsPiB8IFsgPGJhc2ljLXNoYXBlPiB8fCA8Z2VvbWV0cnktYm94PiBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCAgICAgICBDaHJvbWUgICAgICAgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgICAgICAgKio1NSoqICAgICAgIHwgKio3MioqICB8ICAgTm8gICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCA0NiBfKG1vdGlvbi1wYXRoKV8gfCAgICAgICAgIHwgICAgICAgIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL29mZnNldC1wYXRoCiAgICovCiAgb2Zmc2V0UGF0aD86IFByb3BlcnR5Lk9mZnNldFBhdGggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG9mZnNldC1yb3RhdGVgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIG9yaWVudGF0aW9uL2RpcmVjdGlvbiBvZiB0aGUgZWxlbWVudCBhcyBpdCBpcyBwb3NpdGlvbmVkIGFsb25nIHRoZSBgb2Zmc2V0LXBhdGhgLgogICAqCiAgICogKipTeW50YXgqKjogYFsgYXV0byB8IHJldmVyc2UgXSB8fCA8YW5nbGU+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCAgICAgICAgIENocm9tZSAgICAgICAgIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAgICAgICAgICoqNTYqKiAgICAgICAgIHwgKio3MioqICB8ICAgTm8gICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCA0NiBfKG1vdGlvbi1yb3RhdGlvbilfIHwgICAgICAgICB8ICAgICAgICB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9vZmZzZXQtcm90YXRlCiAgICovCiAgb2Zmc2V0Um90YXRlPzogUHJvcGVydHkuT2Zmc2V0Um90YXRlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvZmZzZXQtcm90YXRlYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBvcmllbnRhdGlvbi9kaXJlY3Rpb24gb2YgdGhlIGVsZW1lbnQgYXMgaXQgaXMgcG9zaXRpb25lZCBhbG9uZyB0aGUgYG9mZnNldC1wYXRoYC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIGF1dG8gfCByZXZlcnNlIF0gfHwgPGFuZ2xlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgICAgICAgICBDaHJvbWUgICAgICAgICB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgICAgICAgICAqKjU2KiogICAgICAgICB8ICoqNzIqKiAgfCAgIE5vICAgfCAqKjc5KiogfCBObyAgfAogICAqIHwgNDYgXyhtb3Rpb24tcm90YXRpb24pXyB8ICAgICAgICAgfCAgICAgICAgfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb2Zmc2V0LXJvdGF0ZQogICAqLwogIG9mZnNldFJvdGF0aW9uPzogUHJvcGVydHkuT2Zmc2V0Um90YXRlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvcGFjaXR5YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBvcGFjaXR5IG9mIGFuIGVsZW1lbnQuIE9wYWNpdHkgaXMgdGhlIGRlZ3JlZSB0byB3aGljaCBjb250ZW50IGJlaGluZCBhbiBlbGVtZW50IGlzIGhpZGRlbiwgYW5kIGlzIHRoZSBvcHBvc2l0ZSBvZiB0cmFuc3BhcmVuY3kuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGFscGhhLXZhbHVlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMS4wYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjIqKiAgfCAqKjEyKiogfCAqKjkqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9vcGFjaXR5CiAgICovCiAgb3BhY2l0eT86IFByb3BlcnR5Lk9wYWNpdHkgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG9yZGVyYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBvcmRlciB0byBsYXkgb3V0IGFuIGl0ZW0gaW4gYSBmbGV4IG9yIGdyaWQgY29udGFpbmVyLiBJdGVtcyBpbiBhIGNvbnRhaW5lciBhcmUgc29ydGVkIGJ5IGFzY2VuZGluZyBgb3JkZXJgIHZhbHVlIGFuZCB0aGVuIGJ5IHRoZWlyIHNvdXJjZSBjb2RlIG9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYDxpbnRlZ2VyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgIENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgIElFICAgIHwKICAgKiB8IDotLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLS0tOiB8CiAgICogfCAgKioyOSoqICB8ICoqMjAqKiAgfCAgKio5KiogIHwgKioxMioqIHwgICoqMTEqKiAgfAogICAqIHwgMjEgXy14LV8gfCAgICAgICAgIHwgNyBfLXgtXyB8ICAgICAgICB8IDEwIF8teC1fIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL29yZGVyCiAgICovCiAgb3JkZXI/OiBQcm9wZXJ0eS5PcmRlciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3JwaGFuc2AqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbWluaW11bSBudW1iZXIgb2YgbGluZXMgaW4gYSBibG9jayBjb250YWluZXIgdGhhdCBtdXN0IGJlIHNob3duIGF0IHRoZSBfYm90dG9tXyBvZiBhIHBhZ2UsIHJlZ2lvbiwgb3IgY29sdW1uLgogICAqCiAgICogKipTeW50YXgqKjogYDxpbnRlZ2VyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMjUqKiB8ICAgTm8gICAgfCAqKjEuMyoqIHwgKioxMioqIHwgKio4KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb3JwaGFucwogICAqLwogIG9ycGhhbnM/OiBQcm9wZXJ0eS5PcnBoYW5zIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvdXRsaW5lLWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBjb2xvciBvZiBhbiBlbGVtZW50J3Mgb3V0bGluZS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+IHwgaW52ZXJ0YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBpbnZlcnRgLCBmb3IgYnJvd3NlcnMgc3VwcG9ydGluZyBpdCwgYGN1cnJlbnRDb2xvcmAgZm9yIHRoZSBvdGhlcgogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgKioxLjUqKiB8ICoqMS4yKiogfCAqKjEyKiogfCAqKjgqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9vdXRsaW5lLWNvbG9yCiAgICovCiAgb3V0bGluZUNvbG9yPzogUHJvcGVydHkuT3V0bGluZUNvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvdXRsaW5lLW9mZnNldGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgYW1vdW50IG9mIHNwYWNlIGJldHdlZW4gYW4gb3V0bGluZSBhbmQgdGhlIGVkZ2Ugb3IgYm9yZGVyIG9mIGFuIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqMSoqICB8ICoqMS41KiogfCAqKjEuMioqIHwgKioxNSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL291dGxpbmUtb2Zmc2V0CiAgICovCiAgb3V0bGluZU9mZnNldD86IFByb3BlcnR5Lk91dGxpbmVPZmZzZXQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG91dGxpbmUtc3R5bGVgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHN0eWxlIG9mIGFuIGVsZW1lbnQncyBvdXRsaW5lLiBBbiBvdXRsaW5lIGlzIGEgbGluZSB0aGF0IGlzIGRyYXduIGFyb3VuZCBhbiBlbGVtZW50LCBvdXRzaWRlIHRoZSBgYm9yZGVyYC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPCdib3JkZXItc3R5bGUnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICoqMS41KiogfCAqKjEuMioqIHwgKioxMioqIHwgKio4KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb3V0bGluZS1zdHlsZQogICAqLwogIG91dGxpbmVTdHlsZT86IFByb3BlcnR5Lk91dGxpbmVTdHlsZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgQ1NTICoqYG91dGxpbmUtd2lkdGhgKiogcHJvcGVydHkgc2V0cyB0aGUgdGhpY2tuZXNzIG9mIGFuIGVsZW1lbnQncyBvdXRsaW5lLiBBbiBvdXRsaW5lIGlzIGEgbGluZSB0aGF0IGlzIGRyYXduIGFyb3VuZCBhbiBlbGVtZW50LCBvdXRzaWRlIHRoZSBgYm9yZGVyYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGluZS13aWR0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG1lZGl1bWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICoqMS41KiogfCAqKjEuMioqIHwgKioxMioqIHwgKio4KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb3V0bGluZS13aWR0aAogICAqLwogIG91dGxpbmVXaWR0aD86IFByb3BlcnR5Lk91dGxpbmVXaWR0aDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IG5vbmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU2KiogfCAqKjY2KiogIHwgICBObyAgIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL292ZXJmbG93LWFuY2hvcgogICAqLwogIG92ZXJmbG93QW5jaG9yPzogUHJvcGVydHkuT3ZlcmZsb3dBbmNob3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogKipTeW50YXgqKjogYHZpc2libGUgfCBoaWRkZW4gfCBjbGlwIHwgc2Nyb2xsIHwgYXV0b2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8IEVkZ2UgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLTogfCA6LTogfAogICAqIHwgICBObyAgIHwgKio2OSoqICB8ICAgTm8gICB8ICBObyAgfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb3ZlcmZsb3ctYmxvY2sKICAgKi8KICBvdmVyZmxvd0Jsb2NrPzogUHJvcGVydHkuT3ZlcmZsb3dCbG9jayB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3ZlcmZsb3ctY2xpcC1ib3hgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyByZWxhdGl2ZSB0byB3aGljaCBib3ggdGhlIGNsaXBwaW5nIGhhcHBlbnMgd2hlbiB0aGVyZSBpcyBhbiBvdmVyZmxvdy4gSXQgaXMgc2hvcnQgaGFuZCBmb3IgdGhlIGBvdmVyZmxvdy1jbGlwLWJveC1pbmxpbmVgIGFuZCBgb3ZlcmZsb3ctY2xpcC1ib3gtYmxvY2tgIHByb3BlcnRpZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgcGFkZGluZy1ib3ggfCBjb250ZW50LWJveGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgcGFkZGluZy1ib3hgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCBFZGdlIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS06IHwgOi06IHwKICAgKiB8ICAgTm8gICB8ICoqMjkqKiAgfCAgIE5vICAgfCAgTm8gIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9Nb3ppbGxhL0dlY2tvL0Nocm9tZS9DU1Mvb3ZlcmZsb3ctY2xpcC1ib3gKICAgKi8KICBvdmVyZmxvd0NsaXBCb3g/OiBQcm9wZXJ0eS5PdmVyZmxvd0NsaXBCb3ggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogKipTeW50YXgqKjogYDx2aXN1YWwtYm94PiB8fCA8bGVuZ3RoIFswLOKInl0+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwcHhgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjkwKiogfCAgIE5vICAgIHwgICBObyAgIHwgKio5MCoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL292ZXJmbG93LWNsaXAtbWFyZ2luCiAgICovCiAgb3ZlcmZsb3dDbGlwTWFyZ2luPzogUHJvcGVydHkuT3ZlcmZsb3dDbGlwTWFyZ2luPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqICoqU3ludGF4Kio6IGB2aXNpYmxlIHwgaGlkZGVuIHwgY2xpcCB8IHNjcm9sbCB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCBFZGdlIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS06IHwgOi06IHwKICAgKiB8ICAgTm8gICB8ICoqNjkqKiAgfCAgIE5vICAgfCAgTm8gIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL292ZXJmbG93LWlubGluZQogICAqLwogIG92ZXJmbG93SW5saW5lPzogUHJvcGVydHkuT3ZlcmZsb3dJbmxpbmUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKm92ZXJmbG93LXdyYXAqKmAgQ1NTIHByb3BlcnR5IGFwcGxpZXMgdG8gaW5saW5lIGVsZW1lbnRzLCBzZXR0aW5nIHdoZXRoZXIgdGhlIGJyb3dzZXIgc2hvdWxkIGluc2VydCBsaW5lIGJyZWFrcyB3aXRoaW4gYW4gb3RoZXJ3aXNlIHVuYnJlYWthYmxlIHN0cmluZyB0byBwcmV2ZW50IHRleHQgZnJvbSBvdmVyZmxvd2luZyBpdHMgbGluZSBib3guCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgYnJlYWstd29yZCB8IGFueXdoZXJlYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8ICAgICBDaHJvbWUgICAgICB8ICAgICAgRmlyZWZveCAgICAgIHwgICAgIFNhZmFyaSAgICAgIHwgICAgICAgRWRnZSAgICAgICB8ICAgICAgICAgIElFICAgICAgICAgICB8CiAgICogfCA6LS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLTogfAogICAqIHwgICAgICoqMjMqKiAgICAgIHwgICAgICAqKjQ5KiogICAgICAgfCAgICAgICoqNyoqICAgICAgfCAgICAgICoqMTgqKiAgICAgIHwgKio1LjUqKiBfKHdvcmQtd3JhcClfIHwKICAgKiB8IDEgXyh3b3JkLXdyYXApXyB8IDMuNSBfKHdvcmQtd3JhcClfIHwgMSBfKHdvcmQtd3JhcClfIHwgMTIgXyh3b3JkLXdyYXApXyB8ICAgICAgICAgICAgICAgICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9vdmVyZmxvdy13cmFwCiAgICovCiAgb3ZlcmZsb3dXcmFwPzogUHJvcGVydHkuT3ZlcmZsb3dXcmFwIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvdmVyZmxvdy14YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoYXQgc2hvd3Mgd2hlbiBjb250ZW50IG92ZXJmbG93cyBhIGJsb2NrLWxldmVsIGVsZW1lbnQncyBsZWZ0IGFuZCByaWdodCBlZGdlcy4gVGhpcyBtYXkgYmUgbm90aGluZywgYSBzY3JvbGwgYmFyLCBvciB0aGUgb3ZlcmZsb3cgY29udGVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGB2aXNpYmxlIHwgaGlkZGVuIHwgY2xpcCB8IHNjcm9sbCB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHZpc2libGVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgKiozLjUqKiB8ICoqMyoqICB8ICoqMTIqKiB8ICoqNSoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL292ZXJmbG93LXgKICAgKi8KICBvdmVyZmxvd1g/OiBQcm9wZXJ0eS5PdmVyZmxvd1ggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG92ZXJmbG93LXlgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hhdCBzaG93cyB3aGVuIGNvbnRlbnQgb3ZlcmZsb3dzIGEgYmxvY2stbGV2ZWwgZWxlbWVudCdzIHRvcCBhbmQgYm90dG9tIGVkZ2VzLiBUaGlzIG1heSBiZSBub3RoaW5nLCBhIHNjcm9sbCBiYXIsIG9yIHRoZSBvdmVyZmxvdyBjb250ZW50LgogICAqCiAgICogKipTeW50YXgqKjogYHZpc2libGUgfCBoaWRkZW4gfCBjbGlwIHwgc2Nyb2xsIHwgYXV0b2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgdmlzaWJsZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAqKjMuNSoqIHwgKiozKiogIHwgKioxMioqIHwgKio1KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb3ZlcmZsb3cteQogICAqLwogIG92ZXJmbG93WT86IFByb3BlcnR5Lk92ZXJmbG93WSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3ZlcnNjcm9sbC1iZWhhdmlvci1ibG9ja2AqKsKgQ1NTIHByb3BlcnR5IHNldHMgdGhlIGJyb3dzZXIncyBiZWhhdmlvciB3aGVuIHRoZSBibG9jayBkaXJlY3Rpb27CoGJvdW5kYXJ5IG9mIGEgc2Nyb2xsaW5nIGFyZWEgaXMgcmVhY2hlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBjb250YWluIHwgbm9uZSB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjc3KiogfCAqKjczKiogIHwgICBObyAgIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL292ZXJzY3JvbGwtYmVoYXZpb3ItYmxvY2sKICAgKi8KICBvdmVyc2Nyb2xsQmVoYXZpb3JCbG9jaz86IFByb3BlcnR5Lk92ZXJzY3JvbGxCZWhhdmlvckJsb2NrIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvdmVyc2Nyb2xsLWJlaGF2aW9yLWlubGluZWAqKsKgQ1NTIHByb3BlcnR5IHNldHMgdGhlIGJyb3dzZXIncyBiZWhhdmlvciB3aGVuIHRoZSBpbmxpbmXCoGRpcmVjdGlvbsKgYm91bmRhcnkgb2YgYSBzY3JvbGxpbmcgYXJlYSBpcyByZWFjaGVkLgogICAqCiAgICogKipTeW50YXgqKjogYGNvbnRhaW4gfCBub25lIHwgYXV0b2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNzcqKiB8ICoqNzMqKiAgfCAgIE5vICAgfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb3ZlcnNjcm9sbC1iZWhhdmlvci1pbmxpbmUKICAgKi8KICBvdmVyc2Nyb2xsQmVoYXZpb3JJbmxpbmU/OiBQcm9wZXJ0eS5PdmVyc2Nyb2xsQmVoYXZpb3JJbmxpbmUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG92ZXJzY3JvbGwtYmVoYXZpb3IteGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgYnJvd3NlcidzIGJlaGF2aW9yIHdoZW4gdGhlIGhvcml6b250YWwgYm91bmRhcnkgb2YgYSBzY3JvbGxpbmcgYXJlYSBpcyByZWFjaGVkLgogICAqCiAgICogKipTeW50YXgqKjogYGNvbnRhaW4gfCBub25lIHwgYXV0b2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjMqKiB8ICoqNTkqKiAgfCAgIE5vICAgfCAqKjE4KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb3ZlcnNjcm9sbC1iZWhhdmlvci14CiAgICovCiAgb3ZlcnNjcm9sbEJlaGF2aW9yWD86IFByb3BlcnR5Lk92ZXJzY3JvbGxCZWhhdmlvclggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG92ZXJzY3JvbGwtYmVoYXZpb3IteWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgYnJvd3NlcidzIGJlaGF2aW9yIHdoZW4gdGhlIHZlcnRpY2FsIGJvdW5kYXJ5IG9mIGEgc2Nyb2xsaW5nIGFyZWEgaXMgcmVhY2hlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBjb250YWluIHwgbm9uZSB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjYzKiogfCAqKjU5KiogIHwgICBObyAgIHwgKioxOCoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL292ZXJzY3JvbGwtYmVoYXZpb3IteQogICAqLwogIG92ZXJzY3JvbGxCZWhhdmlvclk/OiBQcm9wZXJ0eS5PdmVyc2Nyb2xsQmVoYXZpb3JZIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwYWRkaW5nLWJsb2NrYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBibG9jayBzdGFydCBhbmQgZW5kIHBhZGRpbmcgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBwaHlzaWNhbCBwYWRkaW5nIHByb3BlcnRpZXMgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdwYWRkaW5nLWxlZnQnPnsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODcqKiB8ICoqNjYqKiAgfCAqKjE0LjEqKiB8ICoqODcqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9wYWRkaW5nLWJsb2NrCiAgICovCiAgcGFkZGluZ0Jsb2NrPzogUHJvcGVydHkuUGFkZGluZ0Jsb2NrPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwYWRkaW5nLWJsb2NrLWVuZGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBibG9jayBlbmQgcGFkZGluZyBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgcGFkZGluZyBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3BhZGRpbmctbGVmdCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNDEqKiAgfCAqKjEyLjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9wYWRkaW5nLWJsb2NrLWVuZAogICAqLwogIHBhZGRpbmdCbG9ja0VuZD86IFByb3BlcnR5LlBhZGRpbmdCbG9ja0VuZDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgcGFkZGluZy1ibG9jay1zdGFydGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBibG9jayBzdGFydCBwYWRkaW5nIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBwYWRkaW5nIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYDwncGFkZGluZy1sZWZ0Jz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio0MSoqICB8ICoqMTIuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3BhZGRpbmctYmxvY2stc3RhcnQKICAgKi8KICBwYWRkaW5nQmxvY2tTdGFydD86IFByb3BlcnR5LlBhZGRpbmdCbG9ja1N0YXJ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwYWRkaW5nLWJvdHRvbWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgaGVpZ2h0IG9mIHRoZSBwYWRkaW5nIGFyZWEgb24gdGhlIGJvdHRvbSBvZiBhbiBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+IHwgPHBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9wYWRkaW5nLWJvdHRvbQogICAqLwogIHBhZGRpbmdCb3R0b20/OiBQcm9wZXJ0eS5QYWRkaW5nQm90dG9tPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwYWRkaW5nLWlubGluZWAqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgaW5saW5lIHN0YXJ0IGFuZCBlbmQgcGFkZGluZyBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIHBoeXNpY2FsIHBhZGRpbmcgcHJvcGVydGllcyBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3BhZGRpbmctbGVmdCc+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4NyoqIHwgKio2NioqICB8ICoqMTQuMSoqIHwgKio4NyoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3BhZGRpbmctaW5saW5lCiAgICovCiAgcGFkZGluZ0lubGluZT86IFByb3BlcnR5LlBhZGRpbmdJbmxpbmU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHBhZGRpbmctaW5saW5lLWVuZGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBpbmxpbmUgZW5kIHBhZGRpbmcgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIHBhZGRpbmcgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdwYWRkaW5nLWxlZnQnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgICAgICAgICAgQ2hyb21lICAgICAgICAgICB8ICAgICAgICBGaXJlZm94ICAgICAgICAgfCAgICAgICAgICBTYWZhcmkgICAgICAgICAgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAgICAgICAgICAqKjY5KiogICAgICAgICAgIHwgICAgICAgICAqKjQxKiogICAgICAgICB8ICAgICAgICAgKioxMi4xKiogICAgICAgICAgfCAqKjc5KiogfCBObyAgfAogICAqIHwgMiBfKC13ZWJraXQtcGFkZGluZy1lbmQpXyB8IDMgXygtbW96LXBhZGRpbmctZW5kKV8gfCAzIF8oLXdlYmtpdC1wYWRkaW5nLWVuZClfIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3BhZGRpbmctaW5saW5lLWVuZAogICAqLwogIHBhZGRpbmdJbmxpbmVFbmQ/OiBQcm9wZXJ0eS5QYWRkaW5nSW5saW5lRW5kPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwYWRkaW5nLWlubGluZS1zdGFydGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBpbmxpbmUgc3RhcnQgcGFkZGluZyBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgcGFkZGluZyBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3BhZGRpbmctbGVmdCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCAgICAgICAgICAgQ2hyb21lICAgICAgICAgICAgfCAgICAgICAgIEZpcmVmb3ggICAgICAgICAgfCAgICAgICAgICAgU2FmYXJpICAgICAgICAgICAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICAgICAgICAgICAqKjY5KiogICAgICAgICAgICB8ICAgICAgICAgICoqNDEqKiAgICAgICAgICB8ICAgICAgICAgICoqMTIuMSoqICAgICAgICAgICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAyIF8oLXdlYmtpdC1wYWRkaW5nLXN0YXJ0KV8gfCAzIF8oLW1vei1wYWRkaW5nLXN0YXJ0KV8gfCAzIF8oLXdlYmtpdC1wYWRkaW5nLXN0YXJ0KV8gfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvcGFkZGluZy1pbmxpbmUtc3RhcnQKICAgKi8KICBwYWRkaW5nSW5saW5lU3RhcnQ/OiBQcm9wZXJ0eS5QYWRkaW5nSW5saW5lU3RhcnQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHBhZGRpbmctbGVmdGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgd2lkdGggb2YgdGhlIHBhZGRpbmcgYXJlYSB0byB0aGUgbGVmdCBvZiBhbiBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+IHwgPHBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9wYWRkaW5nLWxlZnQKICAgKi8KICBwYWRkaW5nTGVmdD86IFByb3BlcnR5LlBhZGRpbmdMZWZ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwYWRkaW5nLXJpZ2h0YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSB3aWR0aCBvZiB0aGUgcGFkZGluZyBhcmVhIG9uIHRoZSByaWdodCBvZiBhbiBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+IHwgPHBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9wYWRkaW5nLXJpZ2h0CiAgICovCiAgcGFkZGluZ1JpZ2h0PzogUHJvcGVydHkuUGFkZGluZ1JpZ2h0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwYWRkaW5nLXRvcGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgaGVpZ2h0IG9mIHRoZSBwYWRkaW5nIGFyZWEgb24gdGhlIHRvcCBvZiBhbiBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+IHwgPHBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9wYWRkaW5nLXRvcAogICAqLwogIHBhZGRpbmdUb3A/OiBQcm9wZXJ0eS5QYWRkaW5nVG9wPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwYWdlLWJyZWFrLWFmdGVyYCoqIENTUyBwcm9wZXJ0eSBhZGp1c3RzIHBhZ2UgYnJlYWtzIF9hZnRlcl8gdGhlIGN1cnJlbnQgZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgYWx3YXlzIHwgYXZvaWQgfCBsZWZ0IHwgcmlnaHQgfCByZWN0byB8IHZlcnNvYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMS4yKiogfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9wYWdlLWJyZWFrLWFmdGVyCiAgICovCiAgcGFnZUJyZWFrQWZ0ZXI/OiBQcm9wZXJ0eS5QYWdlQnJlYWtBZnRlciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgcGFnZS1icmVhay1iZWZvcmVgKiogQ1NTIHByb3BlcnR5IGFkanVzdHMgcGFnZSBicmVha3MgX2JlZm9yZV8gdGhlIGN1cnJlbnQgZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgYWx3YXlzIHwgYXZvaWQgfCBsZWZ0IHwgcmlnaHQgfCByZWN0byB8IHZlcnNvYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMS4yKiogfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9wYWdlLWJyZWFrLWJlZm9yZQogICAqLwogIHBhZ2VCcmVha0JlZm9yZT86IFByb3BlcnR5LlBhZ2VCcmVha0JlZm9yZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgcGFnZS1icmVhay1pbnNpZGVgKiogQ1NTIHByb3BlcnR5IGFkanVzdHMgcGFnZSBicmVha3MgX2luc2lkZV8gdGhlIGN1cnJlbnQgZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgYXZvaWRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAqKjE5KiogIHwgKioxLjMqKiB8ICoqMTIqKiB8ICoqOCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3BhZ2UtYnJlYWstaW5zaWRlCiAgICovCiAgcGFnZUJyZWFrSW5zaWRlPzogUHJvcGVydHkuUGFnZUJyZWFrSW5zaWRlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwYWludC1vcmRlcmAqKiBDU1MgcHJvcGVydHkgbGV0cyB5b3UgY29udHJvbCB0aGUgb3JkZXIgaW4gd2hpY2ggdGhlIGZpbGwgYW5kIHN0cm9rZSAoYW5kIHBhaW50aW5nIG1hcmtlcnMpIG9mIHRleHQgY29udGVudCBhbmQgc2hhcGVzIGFyZSBkcmF3bi4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCBbIGZpbGwgfHwgc3Ryb2tlIHx8IG1hcmtlcnMgXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKiozNSoqIHwgKio2MCoqICB8ICoqOCoqICB8ICoqMTcqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9wYWludC1vcmRlcgogICAqLwogIHBhaW50T3JkZXI/OiBQcm9wZXJ0eS5QYWludE9yZGVyIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwZXJzcGVjdGl2ZWAqKiBDU1MgcHJvcGVydHkgZGV0ZXJtaW5lcyB0aGUgZGlzdGFuY2UgYmV0d2VlbiB0aGUgej0wIHBsYW5lIGFuZCB0aGUgdXNlciBpbiBvcmRlciB0byBnaXZlIGEgM0QtcG9zaXRpb25lZCBlbGVtZW50IHNvbWUgcGVyc3BlY3RpdmUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCAgQ2hyb21lICB8IEZpcmVmb3ggIHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAgKiozNioqICB8ICAqKjE2KiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAxMiBfLXgtXyB8IDEwIF8teC1fIHwgNCBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9wZXJzcGVjdGl2ZQogICAqLwogIHBlcnNwZWN0aXZlPzogUHJvcGVydHkuUGVyc3BlY3RpdmU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHBlcnNwZWN0aXZlLW9yaWdpbmAqKiBDU1MgcHJvcGVydHkgZGV0ZXJtaW5lcyB0aGUgcG9zaXRpb24gYXQgd2hpY2ggdGhlIHZpZXdlciBpcyBsb29raW5nLiBJdCBpcyB1c2VkIGFzIHRoZSBfdmFuaXNoaW5nIHBvaW50XyBieSB0aGUgYHBlcnNwZWN0aXZlYCBwcm9wZXJ0eS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8cG9zaXRpb24+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGA1MCUgNTAlYAogICAqCiAgICogfCAgQ2hyb21lICB8IEZpcmVmb3ggIHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAgKiozNioqICB8ICAqKjE2KiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAxMiBfLXgtXyB8IDEwIF8teC1fIHwgNCBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9wZXJzcGVjdGl2ZS1vcmlnaW4KICAgKi8KICBwZXJzcGVjdGl2ZU9yaWdpbj86IFByb3BlcnR5LlBlcnNwZWN0aXZlT3JpZ2luPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgKipwbGFjZS1jb250ZW50KipgIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgYWxsb3dzIHlvdSB0byBhbGlnbiBjb250ZW50IGFsb25nIGJvdGggdGhlIGJsb2NrIGFuZCBpbmxpbmUgZGlyZWN0aW9ucyBhdCBvbmNlIChpLmUuIHRoZSBgYWxpZ24tY29udGVudGAgYW5kIGBqdXN0aWZ5LWNvbnRlbnRgIHByb3BlcnRpZXMpIGluIGEgcmVsZXZhbnQgbGF5b3V0IHN5c3RlbSBzdWNoIGFzIEdyaWQgb3IgRmxleGJveC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2FsaWduLWNvbnRlbnQnPiA8J2p1c3RpZnktY29udGVudCc+P2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio1OSoqIHwgKio0NSoqICB8ICoqOSoqICB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9wbGFjZS1jb250ZW50CiAgICovCiAgcGxhY2VDb250ZW50PzogUHJvcGVydHkuUGxhY2VDb250ZW50IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwb2ludGVyLWV2ZW50c2AqKiBDU1MgcHJvcGVydHkgc2V0cyB1bmRlciB3aGF0IGNpcmN1bXN0YW5jZXMgKGlmIGFueSkgYSBwYXJ0aWN1bGFyIGdyYXBoaWMgZWxlbWVudCBjYW4gYmVjb21lIHRoZSB0YXJnZXQgb2YgcG9pbnRlciBldmVudHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IG5vbmUgfCB2aXNpYmxlUGFpbnRlZCB8IHZpc2libGVGaWxsIHwgdmlzaWJsZVN0cm9rZSB8IHZpc2libGUgfCBwYWludGVkIHwgZmlsbCB8IHN0cm9rZSB8IGFsbCB8IGluaGVyaXRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjEqKiAgfCAqKjEuNSoqIHwgKio0KiogIHwgKioxMioqIHwgKioxMSoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3BvaW50ZXItZXZlbnRzCiAgICovCiAgcG9pbnRlckV2ZW50cz86IFByb3BlcnR5LlBvaW50ZXJFdmVudHMgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHBvc2l0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBhbiBlbGVtZW50IGlzIHBvc2l0aW9uZWQgaW4gYSBkb2N1bWVudC4gVGhlIGB0b3BgLCBgcmlnaHRgLCBgYm90dG9tYCwgYW5kIGBsZWZ0YCBwcm9wZXJ0aWVzIGRldGVybWluZSB0aGUgZmluYWwgbG9jYXRpb24gb2YgcG9zaXRpb25lZCBlbGVtZW50cy4KICAgKgogICAqICoqU3ludGF4Kio6IGBzdGF0aWMgfCByZWxhdGl2ZSB8IGFic29sdXRlIHwgc3RpY2t5IHwgZml4ZWRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHN0YXRpY2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvcG9zaXRpb24KICAgKi8KICBwb3NpdGlvbj86IFByb3BlcnR5LlBvc2l0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBxdW90ZXNgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IHRoZSBicm93c2VyIHNob3VsZCByZW5kZXIgcXVvdGF0aW9uIG1hcmtzIHRoYXQgYXJlIGFkZGVkIHVzaW5nIHRoZSBgb3Blbi1xdW90ZXNgIG9yIGBjbG9zZS1xdW90ZXNgIHZhbHVlcyBvZiB0aGUgQ1NTIGBjb250ZW50YCBwcm9wZXJ0eS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgYXV0byB8IFsgPHN0cmluZz4gPHN0cmluZz4gXStgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogZGVwZW5kcyBvbiB1c2VyIGFnZW50CiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxMSoqIHwgKioxLjUqKiB8ICoqOSoqICB8ICoqMTIqKiB8ICoqOCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3F1b3RlcwogICAqLwogIHF1b3Rlcz86IFByb3BlcnR5LlF1b3RlcyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgcmVzaXplYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgYW4gZWxlbWVudCBpcyByZXNpemFibGUsIGFuZCBpZiBzbywgaW4gd2hpY2ggZGlyZWN0aW9ucy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgYm90aCB8IGhvcml6b250YWwgfCB2ZXJ0aWNhbCB8IGJsb2NrIHwgaW5saW5lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKioxKiogIHwgICoqNCoqICB8ICoqMyoqICB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9yZXNpemUKICAgKi8KICByZXNpemU/OiBQcm9wZXJ0eS5SZXNpemUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHJpZ2h0YCoqIENTUyBwcm9wZXJ0eSBwYXJ0aWNpcGF0ZXMgaW4gc3BlY2lmeWluZyB0aGUgaG9yaXpvbnRhbCBwb3NpdGlvbiBvZiBhIHBvc2l0aW9uZWQgZWxlbWVudC4gSXQgaGFzIG5vIGVmZmVjdCBvbiBub24tcG9zaXRpb25lZCBlbGVtZW50cy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPiB8IDxwZXJjZW50YWdlPiB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgIElFICAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjUuNSoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3JpZ2h0CiAgICovCiAgcmlnaHQ/OiBQcm9wZXJ0eS5SaWdodDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgcm90YXRlYCoqIENTUyBwcm9wZXJ0eSBhbGxvd3MgeW91IHRvIHNwZWNpZnkgcm90YXRpb24gdHJhbnNmb3JtcyBpbmRpdmlkdWFsbHkgYW5kIGluZGVwZW5kZW50bHkgb2YgdGhlIGB0cmFuc2Zvcm1gIHByb3BlcnR5LiBUaGlzIG1hcHMgYmV0dGVyIHRvIHR5cGljYWwgdXNlciBpbnRlcmZhY2UgdXNhZ2UsIGFuZCBzYXZlcyBoYXZpbmcgdG8gcmVtZW1iZXIgdGhlIGV4YWN0IG9yZGVyIG9mIHRyYW5zZm9ybSBmdW5jdGlvbnMgdG8gc3BlY2lmeSBpbiB0aGUgYHRyYW5zZm9ybWAgcHJvcGVydHkuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxhbmdsZT4gfCBbIHggfCB5IHwgeiB8IDxudW1iZXI+ezN9IF0gJiYgPGFuZ2xlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgRWRnZSB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS06IHwgOi06IHwKICAgKiB8ICAgTm8gICB8ICoqNzIqKiAgfCAqKjE0LjEqKiB8ICBObyAgfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvcm90YXRlCiAgICovCiAgcm90YXRlPzogUHJvcGVydHkuUm90YXRlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmByb3ctZ2FwYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBzaXplIG9mIHRoZSBnYXAgKGd1dHRlcikgYmV0d2VlbiBhbiBlbGVtZW50J3MgZ3JpZCByb3dzLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IDxsZW5ndGgtcGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIC0tLQogICAqCiAgICogX1N1cHBvcnRlZCBpbiBGbGV4IExheW91dF8KICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg0KiogfCAqKjYzKiogIHwgKioxNC4xKiogfCAqKjg0KiogfCBObyAgfAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIEdyaWQgTGF5b3V0XwogICAqCiAgICogfCAgICAgICBDaHJvbWUgICAgICAgIHwgICAgICAgRmlyZWZveCAgICAgICB8ICAgICAgICBTYWZhcmkgICAgICAgICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAgICAgICAqKjY2KiogICAgICAgIHwgICAgICAgKio2MSoqICAgICAgICB8ICAgICAgICAqKjEyKiogICAgICAgICB8ICoqMTYqKiB8IE5vICB8CiAgICogfCA1NyBfKGdyaWQtcm93LWdhcClfIHwgNTIgXyhncmlkLXJvdy1nYXApXyB8IDEwLjEgXyhncmlkLXJvdy1nYXApXyB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiAtLS0KICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Jvdy1nYXAKICAgKi8KICByb3dHYXA/OiBQcm9wZXJ0eS5Sb3dHYXA8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKnJ1YnktYWxpZ24qKmAgQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGRpc3RyaWJ1dGlvbiBvZiB0aGUgZGlmZmVyZW50IHJ1YnkgZWxlbWVudHMgb3ZlciB0aGUgYmFzZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBzdGFydCB8IGNlbnRlciB8IHNwYWNlLWJldHdlZW4gfCBzcGFjZS1hcm91bmRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHNwYWNlLWFyb3VuZGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8IEVkZ2UgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLTogfCA6LTogfAogICAqIHwgICBObyAgIHwgKiozOCoqICB8ICAgTm8gICB8ICBObyAgfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvcnVieS1hbGlnbgogICAqLwogIHJ1YnlBbGlnbj86IFByb3BlcnR5LlJ1YnlBbGlnbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiAqKlN5bnRheCoqOiBgc2VwYXJhdGUgfCBjb2xsYXBzZSB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHNlcGFyYXRlYAogICAqLwogIHJ1YnlNZXJnZT86IFByb3BlcnR5LlJ1YnlNZXJnZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYCoqcnVieS1wb3NpdGlvbioqYCBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgcG9zaXRpb24gb2YgYSBydWJ5IGVsZW1lbnQgcmVsYXRpdmVzIHRvIGl0cyBiYXNlIGVsZW1lbnQuIEl0IGNhbiBiZSBwb3NpdGlvbiBvdmVyIHRoZSBlbGVtZW50IChgb3ZlcmApLCB1bmRlciBpdCAoYHVuZGVyYCksIG9yIGJldHdlZW4gdGhlIGNoYXJhY3RlcnMsIG9uIHRoZWlyIHJpZ2h0IHNpZGUgKGBpbnRlci1jaGFyYWN0ZXJgKS4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIGFsdGVybmF0ZSB8fCBbIG92ZXIgfCB1bmRlciBdIF0gfCBpbnRlci1jaGFyYWN0ZXJgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGFsdGVybmF0ZWAKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCAgICBTYWZhcmkgICAgIHwgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLS0tLS06IHwgOi0tLTogfCA6LTogfAogICAqIHwgKio4NCoqICB8ICoqMzgqKiAgfCAqKjYuMSoqIF8teC1fIHwgMTItNzkgfCBObyAgfAogICAqIHwgMSBfLXgtXyB8ICAgICAgICAgfCAgICAgICAgICAgICAgIHwgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvcnVieS1wb3NpdGlvbgogICAqLwogIHJ1YnlQb3NpdGlvbj86IFByb3BlcnR5LlJ1YnlQb3NpdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgc2NhbGVgKiogQ1NTIHByb3BlcnR5IGFsbG93cyB5b3UgdG8gc3BlY2lmeSBzY2FsZSB0cmFuc2Zvcm1zIGluZGl2aWR1YWxseSBhbmQgaW5kZXBlbmRlbnRseSBvZiB0aGUgYHRyYW5zZm9ybWAgcHJvcGVydHkuIFRoaXMgbWFwcyBiZXR0ZXIgdG8gdHlwaWNhbCB1c2VyIGludGVyZmFjZSB1c2FnZSwgYW5kIHNhdmVzIGhhdmluZyB0byByZW1lbWJlciB0aGUgZXhhY3Qgb3JkZXIgb2YgdHJhbnNmb3JtIGZ1bmN0aW9ucyB0byBzcGVjaWZ5IGluIHRoZSBgdHJhbnNmb3JtYCB2YWx1ZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPG51bWJlcj57MSwzfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgRWRnZSB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS06IHwgOi06IHwKICAgKiB8ICAgTm8gICB8ICoqNzIqKiAgfCAqKjE0LjEqKiB8ICBObyAgfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2NhbGUKICAgKi8KICBzY2FsZT86IFByb3BlcnR5LlNjYWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBzY3JvbGwtYmVoYXZpb3JgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGJlaGF2aW9yIGZvciBhIHNjcm9sbGluZyBib3ggd2hlbiBzY3JvbGxpbmcgaXMgdHJpZ2dlcmVkIGJ5IHRoZSBuYXZpZ2F0aW9uIG9yIENTU09NIHNjcm9sbGluZyBBUElzLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBzbW9vdGhgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjYxKiogfCAqKjM2KiogIHwgIG4vYSAgIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbC1iZWhhdmlvcgogICAqLwogIHNjcm9sbEJlaGF2aW9yPzogUHJvcGVydHkuU2Nyb2xsQmVoYXZpb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHNjcm9sbC1tYXJnaW5gKiogc2hvcnRoYW5kIHByb3BlcnR5IHNldHMgYWxsIG9mIHRoZSBzY3JvbGwgbWFyZ2lucyBvZiBhbiBlbGVtZW50IGF0IG9uY2UsIGFzc2lnbmluZyB2YWx1ZXMgbXVjaCBsaWtlIHRoZSBgbWFyZ2luYCBwcm9wZXJ0eSBkb2VzIGZvciBtYXJnaW5zIG9mIGFuIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD57MSw0fWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICAgICAgICAgIFNhZmFyaSAgICAgICAgICAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio5MCoqICB8ICAgICAgICAgKioxNC4xKiogICAgICAgICAgfCAqKjc5KiogfCBObyAgfAogICAqIHwgICAgICAgIHwgICAgICAgICB8IDExIF8oc2Nyb2xsLXNuYXAtbWFyZ2luKV8gfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLW1hcmdpbgogICAqLwogIHNjcm9sbE1hcmdpbj86IFByb3BlcnR5LlNjcm9sbE1hcmdpbjxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYHNjcm9sbC1tYXJnaW4tYmxvY2tgIHNob3J0aGFuZCBwcm9wZXJ0eSBzZXRzIHRoZSBzY3JvbGwgbWFyZ2lucyBvZiBhbiBlbGVtZW50IGluIHRoZSBibG9jayBkaW1lbnNpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD57MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjY4KiogIHwgKioxNC4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLW1hcmdpbi1ibG9jawogICAqLwogIHNjcm9sbE1hcmdpbkJsb2NrPzogUHJvcGVydHkuU2Nyb2xsTWFyZ2luQmxvY2s8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGBzY3JvbGwtbWFyZ2luLWJsb2NrLWVuZGDCoHByb3BlcnR5IGRlZmluZXMgdGhlwqBtYXJnaW4gb2YgdGhlIHNjcm9sbCBzbmFwIGFyZWEgYXQgdGhlIGVuZMKgb2YgdGhlIGJsb2NrIGRpbWVuc2lvbsKgdGhhdCBpcyB1c2VkIGZvciBzbmFwcGluZyB0aGlzIGJveCB0byB0aGUgc25hcHBvcnQuIFRoZSBzY3JvbGwgc25hcCBhcmVhIGlzIGRldGVybWluZWQgYnkgdGFraW5nIHRoZSB0cmFuc2Zvcm1lZCBib3JkZXIgYm94LCBmaW5kaW5nIGl0cyByZWN0YW5ndWxhciBib3VuZGluZyBib3ggKGF4aXMtYWxpZ25lZCBpbiB0aGUgc2Nyb2xsIGNvbnRhaW5lcuKAmXMgY29vcmRpbmF0ZSBzcGFjZSksIHRoZW4gYWRkaW5nIHRoZSBzcGVjaWZpZWQgb3V0c2V0cy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjY4KiogIHwgKioxNC4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLW1hcmdpbi1ibG9jay1lbmQKICAgKi8KICBzY3JvbGxNYXJnaW5CbG9ja0VuZD86IFByb3BlcnR5LlNjcm9sbE1hcmdpbkJsb2NrRW5kPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgc2Nyb2xsLW1hcmdpbi1ibG9jay1zdGFydGDCoHByb3BlcnR5IGRlZmluZXMgdGhlwqBtYXJnaW4gb2YgdGhlIHNjcm9sbCBzbmFwIGFyZWEgYXQgdGhlIHN0YXJ0IG9mIHRoZSBibG9jayBkaW1lbnNpb27CoHRoYXQgaXMgdXNlZCBmb3Igc25hcHBpbmcgdGhpcyBib3ggdG8gdGhlIHNuYXBwb3J0LiBUaGUgc2Nyb2xsIHNuYXAgYXJlYSBpcyBkZXRlcm1pbmVkIGJ5IHRha2luZyB0aGUgdHJhbnNmb3JtZWQgYm9yZGVyIGJveCwgZmluZGluZyBpdHMgcmVjdGFuZ3VsYXIgYm91bmRpbmcgYm94IChheGlzLWFsaWduZWQgaW4gdGhlIHNjcm9sbCBjb250YWluZXLigJlzIGNvb3JkaW5hdGUgc3BhY2UpLCB0aGVuIGFkZGluZyB0aGUgc3BlY2lmaWVkIG91dHNldHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio2OCoqICB8ICoqMTQuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbC1tYXJnaW4tYmxvY2stc3RhcnQKICAgKi8KICBzY3JvbGxNYXJnaW5CbG9ja1N0YXJ0PzogUHJvcGVydHkuU2Nyb2xsTWFyZ2luQmxvY2tTdGFydDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYHNjcm9sbC1tYXJnaW4tYm90dG9tYCBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBib3R0b20gbWFyZ2luIG9mIHRoZSBzY3JvbGwgc25hcCBhcmVhIHRoYXQgaXMgdXNlZCBmb3Igc25hcHBpbmcgdGhpcyBib3ggdG8gdGhlIHNuYXBwb3J0LiBUaGUgc2Nyb2xsIHNuYXAgYXJlYSBpcyBkZXRlcm1pbmVkIGJ5IHRha2luZyB0aGUgdHJhbnNmb3JtZWQgYm9yZGVyIGJveCwgZmluZGluZyBpdHMgcmVjdGFuZ3VsYXIgYm91bmRpbmcgYm94IChheGlzLWFsaWduZWQgaW4gdGhlIHNjcm9sbCBjb250YWluZXLigJlzIGNvb3JkaW5hdGUgc3BhY2UpLCB0aGVuIGFkZGluZyB0aGUgc3BlY2lmaWVkIG91dHNldHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgICAgICAgICAgICAgU2FmYXJpICAgICAgICAgICAgICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio2OCoqICB8ICAgICAgICAgICAgICoqMTQuMSoqICAgICAgICAgICAgIHwgKio3OSoqIHwgTm8gIHwKICAgKiB8ICAgICAgICB8ICAgICAgICAgfCAxMSBfKHNjcm9sbC1zbmFwLW1hcmdpbi1ib3R0b20pXyB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9zY3JvbGwtbWFyZ2luLWJvdHRvbQogICAqLwogIHNjcm9sbE1hcmdpbkJvdHRvbT86IFByb3BlcnR5LlNjcm9sbE1hcmdpbkJvdHRvbTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYHNjcm9sbC1tYXJnaW4taW5saW5lYCBzaG9ydGhhbmQgcHJvcGVydHkgc2V0cyB0aGUgc2Nyb2xsIG1hcmdpbnMgb2YgYW4gZWxlbWVudCBpbiB0aGUgaW5saW5lIGRpbWVuc2lvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPnsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNjgqKiAgfCAqKjE0LjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9zY3JvbGwtbWFyZ2luLWlubGluZQogICAqLwogIHNjcm9sbE1hcmdpbklubGluZT86IFByb3BlcnR5LlNjcm9sbE1hcmdpbklubGluZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYHNjcm9sbC1tYXJnaW4taW5saW5lLWVuZGDCoHByb3BlcnR5IGRlZmluZXMgdGhlwqBtYXJnaW4gb2YgdGhlIHNjcm9sbCBzbmFwIGFyZWEgYXQgdGhlIGVuZMKgb2YgdGhlIGlubGluZcKgZGltZW5zaW9uwqB0aGF0IGlzIHVzZWQgZm9yIHNuYXBwaW5nIHRoaXMgYm94IHRvIHRoZSBzbmFwcG9ydC4gVGhlIHNjcm9sbCBzbmFwIGFyZWEgaXMgZGV0ZXJtaW5lZCBieSB0YWtpbmcgdGhlIHRyYW5zZm9ybWVkIGJvcmRlciBib3gsIGZpbmRpbmcgaXRzIHJlY3Rhbmd1bGFyIGJvdW5kaW5nIGJveCAoYXhpcy1hbGlnbmVkIGluIHRoZSBzY3JvbGwgY29udGFpbmVy4oCZcyBjb29yZGluYXRlIHNwYWNlKSwgdGhlbiBhZGRpbmcgdGhlIHNwZWNpZmllZCBvdXRzZXRzLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNjgqKiAgfCAqKjE0LjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9zY3JvbGwtbWFyZ2luLWlubGluZS1lbmQKICAgKi8KICBzY3JvbGxNYXJnaW5JbmxpbmVFbmQ/OiBQcm9wZXJ0eS5TY3JvbGxNYXJnaW5JbmxpbmVFbmQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGBzY3JvbGwtbWFyZ2luLWlubGluZS1zdGFydGAgcHJvcGVydHkgZGVmaW5lcyB0aGUgbWFyZ2luIG9mIHRoZSBzY3JvbGwgc25hcCBhcmVhIGF0IHRoZSBzdGFydCBvZiB0aGUgaW5saW5lIGRpbWVuc2lvbiB0aGF0IGlzIHVzZWQgZm9yIHNuYXBwaW5nIHRoaXMgYm94IHRvIHRoZSBzbmFwcG9ydC4gVGhlIHNjcm9sbCBzbmFwIGFyZWEgaXMgZGV0ZXJtaW5lZCBieSB0YWtpbmcgdGhlIHRyYW5zZm9ybWVkIGJvcmRlciBib3gsIGZpbmRpbmcgaXRzIHJlY3Rhbmd1bGFyIGJvdW5kaW5nIGJveCAoYXhpcy1hbGlnbmVkIGluIHRoZSBzY3JvbGwgY29udGFpbmVy4oCZcyBjb29yZGluYXRlIHNwYWNlKSwgdGhlbiBhZGRpbmcgdGhlIHNwZWNpZmllZCBvdXRzZXRzLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNjgqKiAgfCAqKjE0LjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9zY3JvbGwtbWFyZ2luLWlubGluZS1zdGFydAogICAqLwogIHNjcm9sbE1hcmdpbklubGluZVN0YXJ0PzogUHJvcGVydHkuU2Nyb2xsTWFyZ2luSW5saW5lU3RhcnQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGBzY3JvbGwtbWFyZ2luLWxlZnRgIHByb3BlcnR5IGRlZmluZXMgdGhlIGxlZnQgbWFyZ2luIG9mIHRoZSBzY3JvbGwgc25hcCBhcmVhIHRoYXQgaXMgdXNlZCBmb3Igc25hcHBpbmcgdGhpcyBib3ggdG8gdGhlIHNuYXBwb3J0LiBUaGUgc2Nyb2xsIHNuYXAgYXJlYSBpcyBkZXRlcm1pbmVkIGJ5IHRha2luZyB0aGUgdHJhbnNmb3JtZWQgYm9yZGVyIGJveCwgZmluZGluZyBpdHMgcmVjdGFuZ3VsYXIgYm91bmRpbmcgYm94IChheGlzLWFsaWduZWQgaW4gdGhlIHNjcm9sbCBjb250YWluZXLigJlzIGNvb3JkaW5hdGUgc3BhY2UpLCB0aGVuIGFkZGluZyB0aGUgc3BlY2lmaWVkIG91dHNldHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgICAgICAgICAgICBTYWZhcmkgICAgICAgICAgICAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjY4KiogIHwgICAgICAgICAgICAqKjE0LjEqKiAgICAgICAgICAgIHwgKio3OSoqIHwgTm8gIHwKICAgKiB8ICAgICAgICB8ICAgICAgICAgfCAxMSBfKHNjcm9sbC1zbmFwLW1hcmdpbi1sZWZ0KV8gfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLW1hcmdpbi1sZWZ0CiAgICovCiAgc2Nyb2xsTWFyZ2luTGVmdD86IFByb3BlcnR5LlNjcm9sbE1hcmdpbkxlZnQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGBzY3JvbGwtbWFyZ2luLXJpZ2h0YCBwcm9wZXJ0eSBkZWZpbmVzIHRoZSByaWdodCBtYXJnaW4gb2YgdGhlIHNjcm9sbCBzbmFwIGFyZWEgdGhhdCBpcyB1c2VkIGZvciBzbmFwcGluZyB0aGlzIGJveCB0byB0aGUgc25hcHBvcnQuIFRoZSBzY3JvbGwgc25hcCBhcmVhIGlzIGRldGVybWluZWQgYnkgdGFraW5nIHRoZSB0cmFuc2Zvcm1lZCBib3JkZXIgYm94LCBmaW5kaW5nIGl0cyByZWN0YW5ndWxhciBib3VuZGluZyBib3ggKGF4aXMtYWxpZ25lZCBpbiB0aGUgc2Nyb2xsIGNvbnRhaW5lcuKAmXMgY29vcmRpbmF0ZSBzcGFjZSksIHRoZW4gYWRkaW5nIHRoZSBzcGVjaWZpZWQgb3V0c2V0cy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICAgICAgICAgICAgIFNhZmFyaSAgICAgICAgICAgICAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio2OCoqICB8ICAgICAgICAgICAgKioxNC4xKiogICAgICAgICAgICAgfCAqKjc5KiogfCBObyAgfAogICAqIHwgICAgICAgIHwgICAgICAgICB8IDExIF8oc2Nyb2xsLXNuYXAtbWFyZ2luLXJpZ2h0KV8gfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLW1hcmdpbi1yaWdodAogICAqLwogIHNjcm9sbE1hcmdpblJpZ2h0PzogUHJvcGVydHkuU2Nyb2xsTWFyZ2luUmlnaHQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGBzY3JvbGwtbWFyZ2luLXRvcGAgcHJvcGVydHkgZGVmaW5lcyB0aGUgdG9wIG1hcmdpbiBvZiB0aGUgc2Nyb2xsIHNuYXAgYXJlYSB0aGF0IGlzIHVzZWQgZm9yIHNuYXBwaW5nIHRoaXMgYm94IHRvIHRoZSBzbmFwcG9ydC4gVGhlIHNjcm9sbCBzbmFwIGFyZWEgaXMgZGV0ZXJtaW5lZCBieSB0YWtpbmcgdGhlIHRyYW5zZm9ybWVkIGJvcmRlciBib3gsIGZpbmRpbmcgaXRzIHJlY3Rhbmd1bGFyIGJvdW5kaW5nIGJveCAoYXhpcy1hbGlnbmVkIGluIHRoZSBzY3JvbGwgY29udGFpbmVy4oCZcyBjb29yZGluYXRlIHNwYWNlKSwgdGhlbiBhZGRpbmcgdGhlIHNwZWNpZmllZCBvdXRzZXRzLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgICAgICAgICAgICBTYWZhcmkgICAgICAgICAgICAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNjgqKiAgfCAgICAgICAgICAgKioxNC4xKiogICAgICAgICAgICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAgICAgICAgfCAgICAgICAgIHwgMTEgXyhzY3JvbGwtc25hcC1tYXJnaW4tdG9wKV8gfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLW1hcmdpbi10b3AKICAgKi8KICBzY3JvbGxNYXJnaW5Ub3A/OiBQcm9wZXJ0eS5TY3JvbGxNYXJnaW5Ub3A8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHNjcm9sbC1wYWRkaW5nYCoqIHNob3J0aGFuZCBwcm9wZXJ0eSBzZXRzIHNjcm9sbCBwYWRkaW5nIG9uIGFsbCBzaWRlcyBvZiBhbiBlbGVtZW50IGF0IG9uY2UsIG11Y2ggbGlrZSB0aGUgYHBhZGRpbmdgIHByb3BlcnR5IGRvZXMgZm9yIHBhZGRpbmcgb24gYW4gZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIGF1dG8gfCA8bGVuZ3RoLXBlcmNlbnRhZ2U+IF17MSw0fWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjY4KiogIHwgKioxNC4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLXBhZGRpbmcKICAgKi8KICBzY3JvbGxQYWRkaW5nPzogUHJvcGVydHkuU2Nyb2xsUGFkZGluZzxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYHNjcm9sbC1wYWRkaW5nLWJsb2NrYCBzaG9ydGhhbmQgcHJvcGVydHkgc2V0cyB0aGUgc2Nyb2xsIHBhZGRpbmcgb2YgYW4gZWxlbWVudCBpbiB0aGUgYmxvY2sgZGltZW5zaW9uLgogICAqCiAgICogKipTeW50YXgqKjogYFsgYXV0byB8IDxsZW5ndGgtcGVyY2VudGFnZT4gXXsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio2OCoqICB8ICoqMTUqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9zY3JvbGwtcGFkZGluZy1ibG9jawogICAqLwogIHNjcm9sbFBhZGRpbmdCbG9jaz86IFByb3BlcnR5LlNjcm9sbFBhZGRpbmdCbG9jazxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYHNjcm9sbC1wYWRkaW5nLWJsb2NrLWVuZGAgcHJvcGVydHkgZGVmaW5lcyBvZmZzZXRzIGZvciB0aGUgZW5kIGVkZ2UgaW4gdGhlIGJsb2NrIGRpbWVuc2lvbiBvZiB0aGUgb3B0aW1hbCB2aWV3aW5nIHJlZ2lvbiBvZiB0aGUgc2Nyb2xscG9ydDogdGhlIHJlZ2lvbiB1c2VkIGFzIHRoZSB0YXJnZXQgcmVnaW9uIGZvciBwbGFjaW5nIHRoaW5ncyBpbiB2aWV3IG9mIHRoZSB1c2VyLiBUaGlzIGFsbG93cyB0aGUgYXV0aG9yIHRvIGV4Y2x1ZGUgcmVnaW9ucyBvZiB0aGUgc2Nyb2xscG9ydCB0aGF0IGFyZSBvYnNjdXJlZCBieSBvdGhlciBjb250ZW50IChzdWNoIGFzIGZpeGVkLXBvc2l0aW9uZWQgdG9vbGJhcnMgb3Igc2lkZWJhcnMpIG9yIHNpbXBseSB0byBwdXQgbW9yZSBicmVhdGhpbmcgcm9vbSBiZXR3ZWVuIGEgdGFyZ2V0dGVkIGVsZW1lbnQgYW5kIHRoZSBlZGdlcyBvZiB0aGUgc2Nyb2xscG9ydC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPGxlbmd0aC1wZXJjZW50YWdlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNjgqKiAgfCAqKjE1KiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLXBhZGRpbmctYmxvY2stZW5kCiAgICovCiAgc2Nyb2xsUGFkZGluZ0Jsb2NrRW5kPzogUHJvcGVydHkuU2Nyb2xsUGFkZGluZ0Jsb2NrRW5kPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgc2Nyb2xsLXBhZGRpbmctYmxvY2stc3RhcnRgIHByb3BlcnR5IGRlZmluZXMgb2Zmc2V0cyBmb3IgdGhlIHN0YXJ0IGVkZ2UgaW4gdGhlIGJsb2NrIGRpbWVuc2lvbiBvZiB0aGUgb3B0aW1hbCB2aWV3aW5nIHJlZ2lvbiBvZiB0aGUgc2Nyb2xscG9ydDogdGhlIHJlZ2lvbiB1c2VkIGFzIHRoZSB0YXJnZXQgcmVnaW9uIGZvciBwbGFjaW5nIHRoaW5ncyBpbiB2aWV3IG9mIHRoZSB1c2VyLiBUaGlzIGFsbG93cyB0aGUgYXV0aG9yIHRvIGV4Y2x1ZGUgcmVnaW9ucyBvZiB0aGUgc2Nyb2xscG9ydCB0aGF0IGFyZSBvYnNjdXJlZCBieSBvdGhlciBjb250ZW50IChzdWNoIGFzIGZpeGVkLXBvc2l0aW9uZWQgdG9vbGJhcnMgb3Igc2lkZWJhcnMpIG9yIHNpbXBseSB0byBwdXQgbW9yZSBicmVhdGhpbmcgcm9vbSBiZXR3ZWVuIGEgdGFyZ2V0dGVkIGVsZW1lbnQgYW5kIHRoZSBlZGdlcyBvZiB0aGUgc2Nyb2xscG9ydC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPGxlbmd0aC1wZXJjZW50YWdlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNjgqKiAgfCAqKjE1KiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLXBhZGRpbmctYmxvY2stc3RhcnQKICAgKi8KICBzY3JvbGxQYWRkaW5nQmxvY2tTdGFydD86IFByb3BlcnR5LlNjcm9sbFBhZGRpbmdCbG9ja1N0YXJ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgc2Nyb2xsLXBhZGRpbmctYm90dG9tYCBwcm9wZXJ0eSBkZWZpbmVzIG9mZnNldHMgZm9yIHRoZSBib3R0b20gb2YgdGhlIG9wdGltYWwgdmlld2luZyByZWdpb24gb2YgdGhlIHNjcm9sbHBvcnQ6IHRoZSByZWdpb24gdXNlZCBhcyB0aGUgdGFyZ2V0IHJlZ2lvbiBmb3IgcGxhY2luZyB0aGluZ3MgaW4gdmlldyBvZiB0aGUgdXNlci4gVGhpcyBhbGxvd3MgdGhlIGF1dGhvciB0byBleGNsdWRlIHJlZ2lvbnMgb2YgdGhlIHNjcm9sbHBvcnQgdGhhdCBhcmUgb2JzY3VyZWQgYnkgb3RoZXIgY29udGVudCAoc3VjaCBhcyBmaXhlZC1wb3NpdGlvbmVkIHRvb2xiYXJzIG9yIHNpZGViYXJzKSBvciBzaW1wbHkgdG8gcHV0IG1vcmUgYnJlYXRoaW5nIHJvb20gYmV0d2VlbiBhIHRhcmdldHRlZCBlbGVtZW50IGFuZCB0aGUgZWRnZXMgb2YgdGhlIHNjcm9sbHBvcnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IDxsZW5ndGgtcGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio2OCoqICB8ICoqMTQuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbC1wYWRkaW5nLWJvdHRvbQogICAqLwogIHNjcm9sbFBhZGRpbmdCb3R0b20/OiBQcm9wZXJ0eS5TY3JvbGxQYWRkaW5nQm90dG9tPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgc2Nyb2xsLXBhZGRpbmctaW5saW5lYCBzaG9ydGhhbmQgcHJvcGVydHkgc2V0cyB0aGUgc2Nyb2xsIHBhZGRpbmcgb2YgYW4gZWxlbWVudCBpbiB0aGUgaW5saW5lIGRpbWVuc2lvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIGF1dG8gfCA8bGVuZ3RoLXBlcmNlbnRhZ2U+IF17MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNjgqKiAgfCAqKjE1KiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLXBhZGRpbmctaW5saW5lCiAgICovCiAgc2Nyb2xsUGFkZGluZ0lubGluZT86IFByb3BlcnR5LlNjcm9sbFBhZGRpbmdJbmxpbmU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGBzY3JvbGwtcGFkZGluZy1pbmxpbmUtZW5kYMKgcHJvcGVydHnCoGRlZmluZXMgb2Zmc2V0cyBmb3IgdGhlIGVuZMKgZWRnZSBpbiB0aGUgaW5saW5lwqBkaW1lbnNpb27CoG9mIHRoZcKgb3B0aW1hbCB2aWV3aW5nIHJlZ2lvbsKgb2YgdGhlIHNjcm9sbHBvcnQ6IHRoZSByZWdpb24gdXNlZCBhcyB0aGUgdGFyZ2V0IHJlZ2lvbiBmb3IgcGxhY2luZyB0aGluZ3MgaW4gdmlldyBvZiB0aGUgdXNlci4gVGhpcyBhbGxvd3MgdGhlIGF1dGhvciB0byBleGNsdWRlIHJlZ2lvbnMgb2YgdGhlIHNjcm9sbHBvcnQgdGhhdCBhcmUgb2JzY3VyZWQgYnkgb3RoZXIgY29udGVudCAoc3VjaCBhcyBmaXhlZC1wb3NpdGlvbmVkIHRvb2xiYXJzIG9yIHNpZGViYXJzKSBvciBzaW1wbHkgdG8gcHV0IG1vcmUgYnJlYXRoaW5nIHJvb20gYmV0d2VlbiBhIHRhcmdldHRlZCBlbGVtZW50IGFuZCB0aGUgZWRnZXMgb2YgdGhlIHNjcm9sbHBvcnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IDxsZW5ndGgtcGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjY4KiogIHwgKioxNSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbC1wYWRkaW5nLWlubGluZS1lbmQKICAgKi8KICBzY3JvbGxQYWRkaW5nSW5saW5lRW5kPzogUHJvcGVydHkuU2Nyb2xsUGFkZGluZ0lubGluZUVuZDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYHNjcm9sbC1wYWRkaW5nLWlubGluZS1zdGFydGAgcHJvcGVydHkgZGVmaW5lcyBvZmZzZXRzIGZvciB0aGUgc3RhcnQgZWRnZSBpbiB0aGUgaW5saW5lIGRpbWVuc2lvbiBvZiB0aGUgb3B0aW1hbCB2aWV3aW5nIHJlZ2lvbiBvZiB0aGUgc2Nyb2xscG9ydDogdGhlIHJlZ2lvbiB1c2VkIGFzIHRoZSB0YXJnZXQgcmVnaW9uIGZvciBwbGFjaW5nIHRoaW5ncyBpbiB2aWV3IG9mIHRoZSB1c2VyLiBUaGlzIGFsbG93cyB0aGUgYXV0aG9yIHRvIGV4Y2x1ZGUgcmVnaW9ucyBvZiB0aGUgc2Nyb2xscG9ydCB0aGF0IGFyZSBvYnNjdXJlZCBieSBvdGhlciBjb250ZW50IChzdWNoIGFzIGZpeGVkLXBvc2l0aW9uZWQgdG9vbGJhcnMgb3Igc2lkZWJhcnMpIG9yIHNpbXBseSB0byBwdXQgbW9yZSBicmVhdGhpbmcgcm9vbSBiZXR3ZWVuIGEgdGFyZ2V0dGVkIGVsZW1lbnQgYW5kIHRoZSBlZGdlcyBvZiB0aGUgc2Nyb2xscG9ydC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPGxlbmd0aC1wZXJjZW50YWdlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNjgqKiAgfCAqKjE1KiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLXBhZGRpbmctaW5saW5lLXN0YXJ0CiAgICovCiAgc2Nyb2xsUGFkZGluZ0lubGluZVN0YXJ0PzogUHJvcGVydHkuU2Nyb2xsUGFkZGluZ0lubGluZVN0YXJ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgc2Nyb2xsLXBhZGRpbmctbGVmdGAgcHJvcGVydHkgZGVmaW5lcyBvZmZzZXRzIGZvciB0aGUgbGVmdCBvZiB0aGUgb3B0aW1hbCB2aWV3aW5nIHJlZ2lvbiBvZiB0aGUgc2Nyb2xscG9ydDogdGhlIHJlZ2lvbiB1c2VkIGFzIHRoZSB0YXJnZXQgcmVnaW9uIGZvciBwbGFjaW5nIHRoaW5ncyBpbiB2aWV3IG9mIHRoZSB1c2VyLiBUaGlzIGFsbG93cyB0aGUgYXV0aG9yIHRvIGV4Y2x1ZGUgcmVnaW9ucyBvZiB0aGUgc2Nyb2xscG9ydCB0aGF0IGFyZSBvYnNjdXJlZCBieSBvdGhlciBjb250ZW50IChzdWNoIGFzIGZpeGVkLXBvc2l0aW9uZWQgdG9vbGJhcnMgb3Igc2lkZWJhcnMpIG9yIHNpbXBseSB0byBwdXQgbW9yZSBicmVhdGhpbmcgcm9vbSBiZXR3ZWVuIGEgdGFyZ2V0dGVkIGVsZW1lbnQgYW5kIHRoZSBlZGdlcyBvZiB0aGUgc2Nyb2xscG9ydC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPGxlbmd0aC1wZXJjZW50YWdlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjY4KiogIHwgKioxNC4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLXBhZGRpbmctbGVmdAogICAqLwogIHNjcm9sbFBhZGRpbmdMZWZ0PzogUHJvcGVydHkuU2Nyb2xsUGFkZGluZ0xlZnQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGBzY3JvbGwtcGFkZGluZy1yaWdodGDCoHByb3BlcnR5wqBkZWZpbmVzIG9mZnNldHMgZm9yIHRoZSByaWdodMKgb2YgdGhlwqBvcHRpbWFsIHZpZXdpbmcgcmVnaW9uwqBvZiB0aGUgc2Nyb2xscG9ydDogdGhlIHJlZ2lvbiB1c2VkIGFzIHRoZSB0YXJnZXQgcmVnaW9uIGZvciBwbGFjaW5nIHRoaW5ncyBpbiB2aWV3IG9mIHRoZSB1c2VyLiBUaGlzIGFsbG93cyB0aGUgYXV0aG9yIHRvIGV4Y2x1ZGUgcmVnaW9ucyBvZiB0aGUgc2Nyb2xscG9ydCB0aGF0IGFyZSBvYnNjdXJlZCBieSBvdGhlciBjb250ZW50IChzdWNoIGFzIGZpeGVkLXBvc2l0aW9uZWQgdG9vbGJhcnMgb3Igc2lkZWJhcnMpIG9yIHNpbXBseSB0byBwdXQgbW9yZSBicmVhdGhpbmcgcm9vbSBiZXR3ZWVuIGEgdGFyZ2V0dGVkIGVsZW1lbnQgYW5kIHRoZSBlZGdlcyBvZiB0aGUgc2Nyb2xscG9ydC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPGxlbmd0aC1wZXJjZW50YWdlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjY4KiogIHwgKioxNC4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLXBhZGRpbmctcmlnaHQKICAgKi8KICBzY3JvbGxQYWRkaW5nUmlnaHQ/OiBQcm9wZXJ0eS5TY3JvbGxQYWRkaW5nUmlnaHQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHNjcm9sbC1wYWRkaW5nLXRvcGAqKiBwcm9wZXJ0ecKgZGVmaW5lcyBvZmZzZXRzIGZvciB0aGUgdG9wIG9mIHRoZcKgb3B0aW1hbCB2aWV3aW5nIHJlZ2lvbsKgb2YgdGhlIHNjcm9sbHBvcnQ6IHRoZSByZWdpb24gdXNlZCBhcyB0aGUgdGFyZ2V0IHJlZ2lvbiBmb3IgcGxhY2luZyB0aGluZ3MgaW4gdmlldyBvZiB0aGUgdXNlci4gVGhpcyBhbGxvd3MgdGhlIGF1dGhvciB0byBleGNsdWRlIHJlZ2lvbnMgb2YgdGhlIHNjcm9sbHBvcnQgdGhhdCBhcmUgb2JzY3VyZWQgYnkgb3RoZXIgY29udGVudCAoc3VjaCBhcyBmaXhlZC1wb3NpdGlvbmVkIHRvb2xiYXJzIG9yIHNpZGViYXJzKSBvciBzaW1wbHkgdG8gcHV0IG1vcmUgYnJlYXRoaW5nIHJvb20gYmV0d2VlbiBhIHRhcmdldHRlZCBlbGVtZW50IGFuZCB0aGUgZWRnZXMgb2YgdGhlIHNjcm9sbHBvcnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IDxsZW5ndGgtcGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio2OCoqICB8ICoqMTQuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbC1wYWRkaW5nLXRvcAogICAqLwogIHNjcm9sbFBhZGRpbmdUb3A/OiBQcm9wZXJ0eS5TY3JvbGxQYWRkaW5nVG9wPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgc2Nyb2xsLXNuYXAtYWxpZ25gIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgYm944oCZcyBzbmFwIHBvc2l0aW9uIGFzIGFuIGFsaWdubWVudCBvZiBpdHMgc25hcCBhcmVhIChhcyB0aGUgYWxpZ25tZW50IHN1YmplY3QpIHdpdGhpbiBpdHMgc25hcCBjb250YWluZXLigJlzIHNuYXBwb3J0IChhcyB0aGUgYWxpZ25tZW50IGNvbnRhaW5lcikuIFRoZSB0d28gdmFsdWVzIHNwZWNpZnkgdGhlIHNuYXBwaW5nIGFsaWdubWVudCBpbiB0aGUgYmxvY2sgYXhpcyBhbmQgaW5saW5lIGF4aXMsIHJlc3BlY3RpdmVseS4gSWYgb25seSBvbmUgdmFsdWUgaXMgc3BlY2lmaWVkLCB0aGUgc2Vjb25kIHZhbHVlIGRlZmF1bHRzIHRvIHRoZSBzYW1lIHZhbHVlLgogICAqCiAgICogKipTeW50YXgqKjogYFsgbm9uZSB8IHN0YXJ0IHwgZW5kIHwgY2VudGVyIF17MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNjgqKiAgfCAqKjExKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLXNuYXAtYWxpZ24KICAgKi8KICBzY3JvbGxTbmFwQWxpZ24/OiBQcm9wZXJ0eS5TY3JvbGxTbmFwQWxpZ24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHNjcm9sbC1tYXJnaW5gKiogc2hvcnRoYW5kIHByb3BlcnR5IHNldHMgYWxsIG9mIHRoZSBzY3JvbGwgbWFyZ2lucyBvZiBhbiBlbGVtZW50IGF0IG9uY2UsIGFzc2lnbmluZyB2YWx1ZXMgbXVjaCBsaWtlIHRoZSBgbWFyZ2luYCBwcm9wZXJ0eSBkb2VzIGZvciBtYXJnaW5zIG9mIGFuIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD57MSw0fWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICAgICAgICAgIFNhZmFyaSAgICAgICAgICAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgIDY4LTkwICB8ICAgICAgICAgKioxNC4xKiogICAgICAgICAgfCAqKjc5KiogfCBObyAgfAogICAqIHwgICAgICAgIHwgICAgICAgICB8IDExIF8oc2Nyb2xsLXNuYXAtbWFyZ2luKV8gfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLW1hcmdpbgogICAqLwogIHNjcm9sbFNuYXBNYXJnaW4/OiBQcm9wZXJ0eS5TY3JvbGxNYXJnaW48VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGBzY3JvbGwtbWFyZ2luLWJvdHRvbWAgcHJvcGVydHkgZGVmaW5lcyB0aGUgYm90dG9tIG1hcmdpbiBvZiB0aGUgc2Nyb2xsIHNuYXAgYXJlYSB0aGF0IGlzIHVzZWQgZm9yIHNuYXBwaW5nIHRoaXMgYm94IHRvIHRoZSBzbmFwcG9ydC4gVGhlIHNjcm9sbCBzbmFwIGFyZWEgaXMgZGV0ZXJtaW5lZCBieSB0YWtpbmcgdGhlIHRyYW5zZm9ybWVkIGJvcmRlciBib3gsIGZpbmRpbmcgaXRzIHJlY3Rhbmd1bGFyIGJvdW5kaW5nIGJveCAoYXhpcy1hbGlnbmVkIGluIHRoZSBzY3JvbGwgY29udGFpbmVy4oCZcyBjb29yZGluYXRlIHNwYWNlKSwgdGhlbiBhZGRpbmcgdGhlIHNwZWNpZmllZCBvdXRzZXRzLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgICAgICAgICAgICAgIFNhZmFyaSAgICAgICAgICAgICAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNjgqKiAgfCAgICAgICAgICAgICAqKjE0LjEqKiAgICAgICAgICAgICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAgICAgICAgfCAgICAgICAgIHwgMTEgXyhzY3JvbGwtc25hcC1tYXJnaW4tYm90dG9tKV8gfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLW1hcmdpbi1ib3R0b20KICAgKi8KICBzY3JvbGxTbmFwTWFyZ2luQm90dG9tPzogUHJvcGVydHkuU2Nyb2xsTWFyZ2luQm90dG9tPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgc2Nyb2xsLW1hcmdpbi1sZWZ0YCBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsZWZ0IG1hcmdpbiBvZiB0aGUgc2Nyb2xsIHNuYXAgYXJlYSB0aGF0IGlzIHVzZWQgZm9yIHNuYXBwaW5nIHRoaXMgYm94IHRvIHRoZSBzbmFwcG9ydC4gVGhlIHNjcm9sbCBzbmFwIGFyZWEgaXMgZGV0ZXJtaW5lZCBieSB0YWtpbmcgdGhlIHRyYW5zZm9ybWVkIGJvcmRlciBib3gsIGZpbmRpbmcgaXRzIHJlY3Rhbmd1bGFyIGJvdW5kaW5nIGJveCAoYXhpcy1hbGlnbmVkIGluIHRoZSBzY3JvbGwgY29udGFpbmVy4oCZcyBjb29yZGluYXRlIHNwYWNlKSwgdGhlbiBhZGRpbmcgdGhlIHNwZWNpZmllZCBvdXRzZXRzLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgICAgICAgICAgICAgU2FmYXJpICAgICAgICAgICAgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio2OCoqICB8ICAgICAgICAgICAgKioxNC4xKiogICAgICAgICAgICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAgICAgICAgfCAgICAgICAgIHwgMTEgXyhzY3JvbGwtc25hcC1tYXJnaW4tbGVmdClfIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbC1tYXJnaW4tbGVmdAogICAqLwogIHNjcm9sbFNuYXBNYXJnaW5MZWZ0PzogUHJvcGVydHkuU2Nyb2xsTWFyZ2luTGVmdDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYHNjcm9sbC1tYXJnaW4tcmlnaHRgIHByb3BlcnR5IGRlZmluZXMgdGhlIHJpZ2h0IG1hcmdpbiBvZiB0aGUgc2Nyb2xsIHNuYXAgYXJlYSB0aGF0IGlzIHVzZWQgZm9yIHNuYXBwaW5nIHRoaXMgYm94IHRvIHRoZSBzbmFwcG9ydC4gVGhlIHNjcm9sbCBzbmFwIGFyZWEgaXMgZGV0ZXJtaW5lZCBieSB0YWtpbmcgdGhlIHRyYW5zZm9ybWVkIGJvcmRlciBib3gsIGZpbmRpbmcgaXRzIHJlY3Rhbmd1bGFyIGJvdW5kaW5nIGJveCAoYXhpcy1hbGlnbmVkIGluIHRoZSBzY3JvbGwgY29udGFpbmVy4oCZcyBjb29yZGluYXRlIHNwYWNlKSwgdGhlbiBhZGRpbmcgdGhlIHNwZWNpZmllZCBvdXRzZXRzLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgICAgICAgICAgICAgU2FmYXJpICAgICAgICAgICAgICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjY4KiogIHwgICAgICAgICAgICAqKjE0LjEqKiAgICAgICAgICAgICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAgICAgICAgfCAgICAgICAgIHwgMTEgXyhzY3JvbGwtc25hcC1tYXJnaW4tcmlnaHQpXyB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9zY3JvbGwtbWFyZ2luLXJpZ2h0CiAgICovCiAgc2Nyb2xsU25hcE1hcmdpblJpZ2h0PzogUHJvcGVydHkuU2Nyb2xsTWFyZ2luUmlnaHQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGBzY3JvbGwtbWFyZ2luLXRvcGAgcHJvcGVydHkgZGVmaW5lcyB0aGUgdG9wIG1hcmdpbiBvZiB0aGUgc2Nyb2xsIHNuYXAgYXJlYSB0aGF0IGlzIHVzZWQgZm9yIHNuYXBwaW5nIHRoaXMgYm94IHRvIHRoZSBzbmFwcG9ydC4gVGhlIHNjcm9sbCBzbmFwIGFyZWEgaXMgZGV0ZXJtaW5lZCBieSB0YWtpbmcgdGhlIHRyYW5zZm9ybWVkIGJvcmRlciBib3gsIGZpbmRpbmcgaXRzIHJlY3Rhbmd1bGFyIGJvdW5kaW5nIGJveCAoYXhpcy1hbGlnbmVkIGluIHRoZSBzY3JvbGwgY29udGFpbmVy4oCZcyBjb29yZGluYXRlIHNwYWNlKSwgdGhlbiBhZGRpbmcgdGhlIHNwZWNpZmllZCBvdXRzZXRzLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgICAgICAgICAgICBTYWZhcmkgICAgICAgICAgICAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNjgqKiAgfCAgICAgICAgICAgKioxNC4xKiogICAgICAgICAgICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAgICAgICAgfCAgICAgICAgIHwgMTEgXyhzY3JvbGwtc25hcC1tYXJnaW4tdG9wKV8gfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLW1hcmdpbi10b3AKICAgKi8KICBzY3JvbGxTbmFwTWFyZ2luVG9wPzogUHJvcGVydHkuU2Nyb2xsTWFyZ2luVG9wPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBzY3JvbGwtc25hcC1zdG9wYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHdoZXRoZXIgdGhlIHNjcm9sbCBjb250YWluZXIgaXMgYWxsb3dlZCB0byAicGFzcyBvdmVyIiBwb3NzaWJsZSBzbmFwIHBvc2l0aW9ucy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCBhbHdheXNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNzUqKiB8ICAgTm8gICAgfCAqKjE1KiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLXNuYXAtc3RvcAogICAqLwogIHNjcm9sbFNuYXBTdG9wPzogUHJvcGVydHkuU2Nyb2xsU25hcFN0b3AgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHNjcm9sbC1zbmFwLXR5cGVgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IHN0cmljdGx5IHNuYXAgcG9pbnRzIGFyZSBlbmZvcmNlZCBvbiB0aGUgc2Nyb2xsIGNvbnRhaW5lciBpbiBjYXNlIHRoZXJlIGlzIG9uZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgWyB4IHwgeSB8IGJsb2NrIHwgaW5saW5lIHwgYm90aCBdIFsgbWFuZGF0b3J5IHwgcHJveGltaXR5IF0/YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgICAgSUUgICAgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tLS0tLS0tOiB8CiAgICogfCAqKjY5KiogfCAgMzktNjggIHwgKioxMSoqICB8ICoqNzkqKiB8ICoqMTAqKiBfLXgtXyB8CiAgICogfCAgICAgICAgfCAgICAgICAgIHwgOSBfLXgtXyB8ICAgICAgICB8ICAgICAgICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9zY3JvbGwtc25hcC10eXBlCiAgICovCiAgc2Nyb2xsU25hcFR5cGU/OiBQcm9wZXJ0eS5TY3JvbGxTbmFwVHlwZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgc2Nyb2xsYmFyLWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBjb2xvciBvZiB0aGUgc2Nyb2xsYmFyIHRyYWNrIGFuZCB0aHVtYi4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPGNvbG9yPnsyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8IEVkZ2UgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLTogfCA6LTogfAogICAqIHwgICBObyAgIHwgKio2NCoqICB8ICAgTm8gICB8ICBObyAgfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsYmFyLWNvbG9yCiAgICovCiAgc2Nyb2xsYmFyQ29sb3I/OiBQcm9wZXJ0eS5TY3JvbGxiYXJDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgc2Nyb2xsYmFyLWd1dHRlcmAqKiBDU1MgcHJvcGVydHkgYWxsb3dzIGF1dGhvcnMgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgdGhlIHNjcm9sbGJhciwgcHJldmVudGluZyB1bndhbnRlZCBsYXlvdXQgY2hhbmdlcyBhcyB0aGUgY29udGVudCBncm93cyB3aGlsZSBhbHNvIGF2b2lkaW5nIHVubmVjZXNzYXJ5IHZpc3VhbHMgd2hlbiBzY3JvbGxpbmcgaXNuJ3QgbmVlZGVkLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBzdGFibGUgJiYgYm90aC1lZGdlcz9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjk0KiogfCAgIE5vICAgIHwgICBObyAgIHwgKio5NCoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbGJhci1ndXR0ZXIKICAgKi8KICBzY3JvbGxiYXJHdXR0ZXI/OiBQcm9wZXJ0eS5TY3JvbGxiYXJHdXR0ZXIgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHNjcm9sbGJhci13aWR0aGAqKiBwcm9wZXJ0eSBhbGxvd3MgdGhlIGF1dGhvciB0byBzZXQgdGhlIG1heGltdW0gdGhpY2tuZXNzIG9mIGFuIGVsZW1lbnTigJlzIHNjcm9sbGJhcnMgd2hlbiB0aGV5IGFyZSBzaG93bi4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgdGhpbiB8IG5vbmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCBFZGdlIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS06IHwgOi06IHwKICAgKiB8ICAgTm8gICB8ICoqNjQqKiAgfCAgIE5vICAgfCAgTm8gIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbGJhci13aWR0aAogICAqLwogIHNjcm9sbGJhcldpZHRoPzogUHJvcGVydHkuU2Nyb2xsYmFyV2lkdGggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHNoYXBlLWltYWdlLXRocmVzaG9sZGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgYWxwaGEgY2hhbm5lbCB0aHJlc2hvbGQgdXNlZCB0byBleHRyYWN0IHRoZSBzaGFwZSB1c2luZyBhbiBpbWFnZSBhcyB0aGUgdmFsdWUgZm9yIGBzaGFwZS1vdXRzaWRlYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8YWxwaGEtdmFsdWU+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwLjBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKiozNyoqIHwgKio2MioqICB8ICoqMTAuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3NoYXBlLWltYWdlLXRocmVzaG9sZAogICAqLwogIHNoYXBlSW1hZ2VUaHJlc2hvbGQ/OiBQcm9wZXJ0eS5TaGFwZUltYWdlVGhyZXNob2xkIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBzaGFwZS1tYXJnaW5gKiogQ1NTIHByb3BlcnR5IHNldHMgYSBtYXJnaW4gZm9yIGEgQ1NTIHNoYXBlIGNyZWF0ZWQgdXNpbmcgYHNoYXBlLW91dHNpZGVgLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGgtcGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKiozNyoqIHwgKio2MioqICB8ICoqMTAuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3NoYXBlLW1hcmdpbgogICAqLwogIHNoYXBlTWFyZ2luPzogUHJvcGVydHkuU2hhcGVNYXJnaW48VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHNoYXBlLW91dHNpZGVgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgYSBzaGFwZeKAlHdoaWNoIG1heSBiZSBub24tcmVjdGFuZ3VsYXLigJRhcm91bmQgd2hpY2ggYWRqYWNlbnQgaW5saW5lIGNvbnRlbnQgc2hvdWxkIHdyYXAuIEJ5IGRlZmF1bHQsIGlubGluZSBjb250ZW50IHdyYXBzIGFyb3VuZCBpdHMgbWFyZ2luIGJveDsgYHNoYXBlLW91dHNpZGVgIHByb3ZpZGVzIGEgd2F5IHRvIGN1c3RvbWl6ZSB0aGlzIHdyYXBwaW5nLCBtYWtpbmcgaXQgcG9zc2libGUgdG8gd3JhcCB0ZXh0IGFyb3VuZCBjb21wbGV4IG9iamVjdHMgcmF0aGVyIHRoYW4gc2ltcGxlIGJveGVzLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBbIDxzaGFwZS1ib3g+IHx8IDxiYXNpYy1zaGFwZT4gXSB8IDxpbWFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKiozNyoqIHwgKio2MioqICB8ICoqMTAuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3NoYXBlLW91dHNpZGUKICAgKi8KICBzaGFwZU91dHNpZGU/OiBQcm9wZXJ0eS5TaGFwZU91dHNpZGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRhYi1zaXplYCoqIENTUyBwcm9wZXJ0eSBpcyB1c2VkIHRvIGN1c3RvbWl6ZSB0aGUgd2lkdGggb2YgdGFiIGNoYXJhY3RlcnMgKFUrMDAwOSkuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGludGVnZXI+IHwgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDhgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjIxKiogfCAqKjkxKiogIHwgKio3KiogIHwgKio3OSoqIHwgTm8gIHwKICAgKiB8ICAgICAgICB8IDQgXy14LV8gfCAgICAgICAgfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdGFiLXNpemUKICAgKi8KICB0YWJTaXplPzogUHJvcGVydHkuVGFiU2l6ZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGFibGUtbGF5b3V0YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBhbGdvcml0aG0gdXNlZCB0byBsYXkgb3V0IGA8dGFibGU+YCBjZWxscywgcm93cywgYW5kIGNvbHVtbnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IGZpeGVkYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMTQqKiB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjUqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90YWJsZS1sYXlvdXQKICAgKi8KICB0YWJsZUxheW91dD86IFByb3BlcnR5LlRhYmxlTGF5b3V0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LWFsaWduYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBob3Jpem9udGFsIGFsaWdubWVudCBvZiBhwqBibG9jayBlbGVtZW50IG9yIHRhYmxlLWNlbGwgYm94LiBUaGlzIG1lYW5zIGl0IHdvcmtzIGxpa2UgYHZlcnRpY2FsLWFsaWduYCBidXQgaW4gdGhlIGhvcml6b250YWwgZGlyZWN0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYHN0YXJ0IHwgZW5kIHwgbGVmdCB8IHJpZ2h0IHwgY2VudGVyIHwganVzdGlmeSB8IG1hdGNoLXBhcmVudGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc3RhcnRgLCBvciBhIG5hbWVsZXNzIHZhbHVlIHRoYXQgYWN0cyBhcyBgbGVmdGAgaWYgX2RpcmVjdGlvbl8gaXMgYGx0cmAsIGByaWdodGAgaWYgX2RpcmVjdGlvbl8gaXMgYHJ0bGAgaWYgYHN0YXJ0YCBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBicm93c2VyLgogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjMqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90ZXh0LWFsaWduCiAgICovCiAgdGV4dEFsaWduPzogUHJvcGVydHkuVGV4dEFsaWduIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LWFsaWduLWxhc3RgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IHRoZSBsYXN0IGxpbmUgb2YgYSBibG9jayBvciBhIGxpbmUsIHJpZ2h0IGJlZm9yZSBhIGZvcmNlZCBsaW5lIGJyZWFrLCBpcyBhbGlnbmVkLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBzdGFydCB8IGVuZCB8IGxlZnQgfCByaWdodCB8IGNlbnRlciB8IGp1c3RpZnlgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgIElFICAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tLS06IHwKICAgKiB8ICoqNDcqKiB8ICoqNDkqKiAgfCAgIE5vICAgfCAqKjEyKiogfCAqKjUuNSoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtYWxpZ24tbGFzdAogICAqLwogIHRleHRBbGlnbkxhc3Q/OiBQcm9wZXJ0eS5UZXh0QWxpZ25MYXN0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LWNvbWJpbmUtdXByaWdodGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgY29tYmluYXRpb24gb2YgY2hhcmFjdGVycyBpbnRvIHRoZSBzcGFjZSBvZiBhIHNpbmdsZSBjaGFyYWN0ZXIuIElmIHRoZSBjb21iaW5lZCB0ZXh0IGlzIHdpZGVyIHRoYW4gMWVtLCB0aGUgdXNlciBhZ2VudCBtdXN0IGZpdCB0aGUgY29udGVudHMgd2l0aGluIDFlbS4gVGhlIHJlc3VsdGluZyBjb21wb3NpdGlvbiBpcyB0cmVhdGVkIGFzIGEgc2luZ2xlIHVwcmlnaHQgZ2x5cGggZm9yIGxheW91dCBhbmQgZGVjb3JhdGlvbi4gVGhpcyBwcm9wZXJ0eSBvbmx5IGhhcyBhbiBlZmZlY3QgaW4gdmVydGljYWwgd3JpdGluZyBtb2Rlcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgYWxsIHwgWyBkaWdpdHMgPGludGVnZXI+PyBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCAgICAgICAgICAgQ2hyb21lICAgICAgICAgICB8IEZpcmVmb3ggfCAgICAgICAgICAgICAgU2FmYXJpICAgICAgICAgICAgICB8IEVkZ2UgIHwgICAgICAgICAgICAgICAgICAgSUUgICAgICAgICAgICAgICAgICAgfAogICAqIHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwKICAgKiB8ICAgICAgICAgICAqKjQ4KiogICAgICAgICAgIHwgKio0OCoqICB8ICoqNS4xKiogXygtd2Via2l0LXRleHQtY29tYmluZSlfIHwgMTUtNzkgfCAqKjExKiogXygtbXMtdGV4dC1jb21iaW5lLWhvcml6b250YWwpXyB8CiAgICogfCA5IF8oLXdlYmtpdC10ZXh0LWNvbWJpbmUpXyB8ICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdGV4dC1jb21iaW5lLXVwcmlnaHQKICAgKi8KICB0ZXh0Q29tYmluZVVwcmlnaHQ/OiBQcm9wZXJ0eS5UZXh0Q29tYmluZVVwcmlnaHQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtZGVjb3JhdGlvbi1jb2xvcmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgY29sb3Igb2YgZGVjb3JhdGlvbnMgYWRkZWQgdG8gdGV4dCBieSBgdGV4dC1kZWNvcmF0aW9uLWxpbmVgLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGN1cnJlbnRjb2xvcmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjM2KiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqIHwgICAgICAgIHwgICAgICAgICB8IDggXy14LV8gIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtZGVjb3JhdGlvbi1jb2xvcgogICAqLwogIHRleHREZWNvcmF0aW9uQ29sb3I/OiBQcm9wZXJ0eS5UZXh0RGVjb3JhdGlvbkNvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LWRlY29yYXRpb24tbGluZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUga2luZCBvZiBkZWNvcmF0aW9uIHRoYXQgaXMgdXNlZCBvbiB0ZXh0IGluIGFuIGVsZW1lbnQsIHN1Y2ggYXMgYW4gdW5kZXJsaW5lIG9yIG92ZXJsaW5lLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBbIHVuZGVybGluZSB8fCBvdmVybGluZSB8fCBsaW5lLXRocm91Z2ggfHwgYmxpbmsgXSB8IHNwZWxsaW5nLWVycm9yIHwgZ3JhbW1hci1lcnJvcmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjM2KiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqIHwgICAgICAgIHwgICAgICAgICB8IDggXy14LV8gIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtZGVjb3JhdGlvbi1saW5lCiAgICovCiAgdGV4dERlY29yYXRpb25MaW5lPzogUHJvcGVydHkuVGV4dERlY29yYXRpb25MaW5lIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LWRlY29yYXRpb24tc2tpcGAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGF0IHBhcnRzIG9mIGFuIGVsZW1lbnTigJlzIGNvbnRlbnQgYW55IHRleHQgZGVjb3JhdGlvbiBhZmZlY3RpbmcgdGhlIGVsZW1lbnQgbXVzdCBza2lwIG92ZXIuIEl0IGNvbnRyb2xzIGFsbCB0ZXh0IGRlY29yYXRpb24gbGluZXMgZHJhd24gYnkgdGhlIGVsZW1lbnQgYW5kIGFsc28gYW55IHRleHQgZGVjb3JhdGlvbiBsaW5lcyBkcmF3biBieSBpdHMgYW5jZXN0b3JzLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBbIG9iamVjdHMgfHwgWyBzcGFjZXMgfCBbIGxlYWRpbmctc3BhY2VzIHx8IHRyYWlsaW5nLXNwYWNlcyBdIF0gfHwgZWRnZXMgfHwgYm94LWRlY29yYXRpb24gXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgb2JqZWN0c2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgRWRnZSB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS06IHwgOi06IHwKICAgKiB8IDU3LTY0ICB8ICAgTm8gICAgfCAqKjEyLjEqKiB8ICBObyAgfCBObyAgfAogICAqIHwgICAgICAgIHwgICAgICAgICB8IDcgXy14LV8gIHwgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90ZXh0LWRlY29yYXRpb24tc2tpcAogICAqLwogIHRleHREZWNvcmF0aW9uU2tpcD86IFByb3BlcnR5LlRleHREZWNvcmF0aW9uU2tpcCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1kZWNvcmF0aW9uLXNraXAtaW5rYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgaG93IG92ZXJsaW5lcyBhbmQgdW5kZXJsaW5lcyBhcmUgZHJhd24gd2hlbiB0aGV5IHBhc3Mgb3ZlciBnbHlwaCBhc2NlbmRlcnMgYW5kIGRlc2NlbmRlcnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IGFsbCB8IG5vbmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY0KiogfCAqKjcwKiogIHwgICBObyAgIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtZGVjb3JhdGlvbi1za2lwLWluawogICAqLwogIHRleHREZWNvcmF0aW9uU2tpcEluaz86IFByb3BlcnR5LlRleHREZWNvcmF0aW9uU2tpcEluayB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1kZWNvcmF0aW9uLXN0eWxlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBzdHlsZSBvZiB0aGUgbGluZXMgc3BlY2lmaWVkIGJ5IGB0ZXh0LWRlY29yYXRpb24tbGluZWAuIFRoZSBzdHlsZSBhcHBsaWVzIHRvIGFsbCBsaW5lcyB0aGF0IGFyZSBzZXQgd2l0aCBgdGV4dC1kZWNvcmF0aW9uLWxpbmVgLgogICAqCiAgICogKipTeW50YXgqKjogYHNvbGlkIHwgZG91YmxlIHwgZG90dGVkIHwgZGFzaGVkIHwgd2F2eWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc29saWRgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio1NyoqIHwgKiozNioqICB8ICoqMTIuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKiB8ICAgICAgICB8ICAgICAgICAgfCA4IF8teC1fICB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90ZXh0LWRlY29yYXRpb24tc3R5bGUKICAgKi8KICB0ZXh0RGVjb3JhdGlvblN0eWxlPzogUHJvcGVydHkuVGV4dERlY29yYXRpb25TdHlsZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1kZWNvcmF0aW9uLXRoaWNrbmVzc2AqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgc3Ryb2tlIHRoaWNrbmVzcyBvZiB0aGUgZGVjb3JhdGlvbiBsaW5lIHRoYXQgaXMgdXNlZCBvbiB0ZXh0IGluIGFuIGVsZW1lbnQsIHN1Y2ggYXMgYSBsaW5lLXRocm91Z2gsIHVuZGVybGluZSwgb3Igb3ZlcmxpbmUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IGZyb20tZm9udCB8IDxsZW5ndGg+IHwgPHBlcmNlbnRhZ2U+IGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg5KiogfCAqKjcwKiogIHwgKioxMi4xKiogfCAqKjg5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdGV4dC1kZWNvcmF0aW9uLXRoaWNrbmVzcwogICAqLwogIHRleHREZWNvcmF0aW9uVGhpY2tuZXNzPzogUHJvcGVydHkuVGV4dERlY29yYXRpb25UaGlja25lc3M8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtZGVjb3JhdGlvbi10aGlja25lc3NgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHN0cm9rZSB0aGlja25lc3Mgb2YgdGhlIGRlY29yYXRpb24gbGluZSB0aGF0IGlzIHVzZWQgb24gdGV4dCBpbiBhbiBlbGVtZW50LCBzdWNoIGFzIGEgbGluZS10aHJvdWdoLCB1bmRlcmxpbmUsIG9yIG92ZXJsaW5lLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBmcm9tLWZvbnQgfCA8bGVuZ3RoPiB8IDxwZXJjZW50YWdlPiBgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8IEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS06IHwgOi06IHwKICAgKiB8IDg3LTg5ICB8ICoqNzAqKiAgfCAqKjEyLjEqKiB8IDg3LTg5IHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtZGVjb3JhdGlvbi10aGlja25lc3MKICAgKi8KICB0ZXh0RGVjb3JhdGlvbldpZHRoPzogUHJvcGVydHkuVGV4dERlY29yYXRpb25UaGlja25lc3M8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtZW1waGFzaXMtY29sb3JgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGNvbG9yIG9mIGVtcGhhc2lzIG1hcmtzLiBUaGlzIHZhbHVlIGNhbiBhbHNvIGJlIHNldCB1c2luZyB0aGUgYHRleHQtZW1waGFzaXNgIHNob3J0aGFuZC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjdXJyZW50Y29sb3JgCiAgICoKICAgKiB8ICAgIENocm9tZSAgICB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgICAgRWRnZSAgICAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tLS0tLS0tOiB8IDotOiB8CiAgICogfCAqKjI1KiogXy14LV8gfCAqKjQ2KiogIHwgKio3KiogIHwgKio3OSoqIF8teC1fIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtZW1waGFzaXMtY29sb3IKICAgKi8KICB0ZXh0RW1waGFzaXNDb2xvcj86IFByb3BlcnR5LlRleHRFbXBoYXNpc0NvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LWVtcGhhc2lzLXBvc2l0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXJlIGVtcGhhc2lzIG1hcmtzIGFyZSBkcmF3bi4gTGlrZSBydWJ5IHRleHQsIGlmIHRoZXJlIGlzbid0IGVub3VnaCByb29tIGZvciBlbXBoYXNpcyBtYXJrcywgdGhlIGxpbmUgaGVpZ2h0IGlzIGluY3JlYXNlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIG92ZXIgfCB1bmRlciBdICYmIFsgcmlnaHQgfCBsZWZ0IF1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG92ZXIgcmlnaHRgCiAgICoKICAgKiB8ICAgIENocm9tZSAgICB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgICAgRWRnZSAgICAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tLS0tLS0tOiB8IDotOiB8CiAgICogfCAqKjI1KiogXy14LV8gfCAqKjQ2KiogIHwgKio3KiogIHwgKio3OSoqIF8teC1fIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtZW1waGFzaXMtcG9zaXRpb24KICAgKi8KICB0ZXh0RW1waGFzaXNQb3NpdGlvbj86IFByb3BlcnR5LlRleHRFbXBoYXNpc1Bvc2l0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LWVtcGhhc2lzLXN0eWxlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBhcHBlYXJhbmNlIG9mIGVtcGhhc2lzIG1hcmtzLiBJdCBjYW4gYWxzbyBiZSBzZXQsIGFuZCByZXNldCwgdXNpbmcgdGhlIGB0ZXh0LWVtcGhhc2lzYCBzaG9ydGhhbmQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IFsgWyBmaWxsZWQgfCBvcGVuIF0gfHwgWyBkb3QgfCBjaXJjbGUgfCBkb3VibGUtY2lyY2xlIHwgdHJpYW5nbGUgfCBzZXNhbWUgXSBdIHwgPHN0cmluZz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8ICAgIENocm9tZSAgICB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgICAgRWRnZSAgICAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tLS0tLS0tOiB8IDotOiB8CiAgICogfCAqKjI1KiogXy14LV8gfCAqKjQ2KiogIHwgKio3KiogIHwgKio3OSoqIF8teC1fIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtZW1waGFzaXMtc3R5bGUKICAgKi8KICB0ZXh0RW1waGFzaXNTdHlsZT86IFByb3BlcnR5LlRleHRFbXBoYXNpc1N0eWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LWluZGVudGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbGVuZ3RoIG9mIGVtcHR5IHNwYWNlIChpbmRlbnRhdGlvbikgdGhhdCBpcyBwdXQgYmVmb3JlIGxpbmVzIG9mIHRleHQgaW4gYSBibG9jay4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoLXBlcmNlbnRhZ2U+ICYmIGhhbmdpbmc/ICYmIGVhY2gtbGluZT9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqMyoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtaW5kZW50CiAgICovCiAgdGV4dEluZGVudD86IFByb3BlcnR5LlRleHRJbmRlbnQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtanVzdGlmeWAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGF0IHR5cGUgb2YganVzdGlmaWNhdGlvbiBzaG91bGQgYmUgYXBwbGllZCB0byB0ZXh0IHdoZW4gYHRleHQtYWxpZ25gYDoganVzdGlmeTtgIGlzIHNldCBvbiBhbiBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBpbnRlci1jaGFyYWN0ZXIgfCBpbnRlci13b3JkIHwgbm9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICBuL2EgICB8ICoqNTUqKiAgfCAgIE5vICAgfCAqKjEyKiogfCAqKjExKiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdGV4dC1qdXN0aWZ5CiAgICovCiAgdGV4dEp1c3RpZnk/OiBQcm9wZXJ0eS5UZXh0SnVzdGlmeSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1vcmllbnRhdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgb3JpZW50YXRpb24gb2YgdGhlIHRleHQgY2hhcmFjdGVycyBpbiBhIGxpbmUuIEl0IG9ubHkgYWZmZWN0cyB0ZXh0IGluIHZlcnRpY2FsIG1vZGUgKHdoZW4gYHdyaXRpbmctbW9kZWAgaXMgbm90IGBob3Jpem9udGFsLXRiYCkuIEl0IGlzIHVzZWZ1bCBmb3IgY29udHJvbGxpbmcgdGhlIGRpc3BsYXkgb2YgbGFuZ3VhZ2VzIHRoYXQgdXNlIHZlcnRpY2FsIHNjcmlwdCwgYW5kIGFsc28gZm9yIG1ha2luZyB2ZXJ0aWNhbCB0YWJsZSBoZWFkZXJzLgogICAqCiAgICogKipTeW50YXgqKjogYG1peGVkIHwgdXByaWdodCB8IHNpZGV3YXlzYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBtaXhlZGAKICAgKgogICAqIHwgIENocm9tZSAgfCBGaXJlZm94IHwgIFNhZmFyaSAgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAgKio0OCoqICB8ICoqNDEqKiAgfCAgKioxNCoqICAgfCAqKjc5KiogfCBObyAgfAogICAqIHwgMTEgXy14LV8gfCAgICAgICAgIHwgNS4xIF8teC1fIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtb3JpZW50YXRpb24KICAgKi8KICB0ZXh0T3JpZW50YXRpb24/OiBQcm9wZXJ0eS5UZXh0T3JpZW50YXRpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtb3ZlcmZsb3dgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IGhpZGRlbiBvdmVyZmxvdyBjb250ZW50IGlzIHNpZ25hbGVkIHRvIHVzZXJzLiBJdCBjYW4gYmUgY2xpcHBlZCwgZGlzcGxheSBhbiBlbGxpcHNpcyAoJ2DigKZgJyksIG9yIGRpc3BsYXkgYSBjdXN0b20gc3RyaW5nLgogICAqCiAgICogKipTeW50YXgqKjogYFsgY2xpcCB8IGVsbGlwc2lzIHwgPHN0cmluZz4gXXsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjbGlwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqNyoqICB8ICoqMS4zKiogfCAqKjEyKiogfCAqKjYqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90ZXh0LW92ZXJmbG93CiAgICovCiAgdGV4dE92ZXJmbG93PzogUHJvcGVydHkuVGV4dE92ZXJmbG93IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LXJlbmRlcmluZ2AqKiBDU1MgcHJvcGVydHkgcHJvdmlkZXMgaW5mb3JtYXRpb24gdG8gdGhlIHJlbmRlcmluZyBlbmdpbmUgYWJvdXQgd2hhdCB0byBvcHRpbWl6ZSBmb3Igd2hlbiByZW5kZXJpbmcgdGV4dC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgb3B0aW1pemVTcGVlZCB8IG9wdGltaXplTGVnaWJpbGl0eSB8IGdlb21ldHJpY1ByZWNpc2lvbmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNCoqICB8ICAqKjEqKiAgfCAqKjUqKiAgfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdGV4dC1yZW5kZXJpbmcKICAgKi8KICB0ZXh0UmVuZGVyaW5nPzogUHJvcGVydHkuVGV4dFJlbmRlcmluZyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1zaGFkb3dgKiogQ1NTIHByb3BlcnR5IGFkZHMgc2hhZG93cyB0byB0ZXh0LiBJdCBhY2NlcHRzIGEgY29tbWEtc2VwYXJhdGVkIGxpc3Qgb2Ygc2hhZG93cyB0byBiZSBhcHBsaWVkIHRvIHRoZSB0ZXh0IGFuZCBhbnkgb2YgaXRzIGBkZWNvcmF0aW9uc2AuIEVhY2ggc2hhZG93IGlzIGRlc2NyaWJlZCBieSBzb21lIGNvbWJpbmF0aW9uIG9mIFggYW5kIFkgb2Zmc2V0cyBmcm9tIHRoZSBlbGVtZW50LCBibHVyIHJhZGl1cywgYW5kIGNvbG9yLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8c2hhZG93LXQ+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgKioyKiogIHwgKiozLjUqKiB8ICoqMS4xKiogfCAqKjEyKiogfCAqKjEwKiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdGV4dC1zaGFkb3cKICAgKi8KICB0ZXh0U2hhZG93PzogUHJvcGVydHkuVGV4dFNoYWRvdyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1zaXplLWFkanVzdGAqKiBDU1MgcHJvcGVydHkgY29udHJvbHMgdGhlIHRleHQgaW5mbGF0aW9uIGFsZ29yaXRobSB1c2VkIG9uIHNvbWUgc21hcnRwaG9uZXMgYW5kIHRhYmxldHMuIE90aGVyIGJyb3dzZXJzIHdpbGwgaWdub3JlIHRoaXMgcHJvcGVydHkuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IGF1dG8gfCA8cGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gIGZvciBzbWFydHBob25lIGJyb3dzZXJzIHN1cHBvcnRpbmcgaW5mbGF0aW9uLCBgbm9uZWAgaW4gb3RoZXIgY2FzZXMgKGFuZCB0aGVuIG5vdCBtb2RpZmlhYmxlKS4KICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTQqKiB8ICAgTm8gICAgfCAgIE5vICAgfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdGV4dC1zaXplLWFkanVzdAogICAqLwogIHRleHRTaXplQWRqdXN0PzogUHJvcGVydHkuVGV4dFNpemVBZGp1c3QgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtdHJhbnNmb3JtYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgaG93IHRvIGNhcGl0YWxpemUgYW4gZWxlbWVudCdzIHRleHQuIEl0IGNhbiBiZSB1c2VkIHRvIG1ha2UgdGV4dCBhcHBlYXIgaW4gYWxsLXVwcGVyY2FzZSBvciBhbGwtbG93ZXJjYXNlLCBvciB3aXRoIGVhY2ggd29yZCBjYXBpdGFsaXplZC4gSXQgYWxzbyBjYW4gaGVscCBpbXByb3ZlIGxlZ2liaWxpdHkgZm9yIHJ1YnkuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IGNhcGl0YWxpemUgfCB1cHBlcmNhc2UgfCBsb3dlcmNhc2UgfCBmdWxsLXdpZHRoIHwgZnVsbC1zaXplLWthbmFgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtdHJhbnNmb3JtCiAgICovCiAgdGV4dFRyYW5zZm9ybT86IFByb3BlcnR5LlRleHRUcmFuc2Zvcm0gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtdW5kZXJsaW5lLW9mZnNldGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgb2Zmc2V0IGRpc3RhbmNlIG9mIGFuIHVuZGVybGluZSB0ZXh0IGRlY29yYXRpb24gbGluZSAoYXBwbGllZCB1c2luZyBgdGV4dC1kZWNvcmF0aW9uYCkgZnJvbSBpdHMgb3JpZ2luYWwgcG9zaXRpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IDxsZW5ndGg+IHwgPHBlcmNlbnRhZ2U+IGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg3KiogfCAqKjcwKiogIHwgKioxMi4xKiogfCAqKjg3KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdGV4dC11bmRlcmxpbmUtb2Zmc2V0CiAgICovCiAgdGV4dFVuZGVybGluZU9mZnNldD86IFByb3BlcnR5LlRleHRVbmRlcmxpbmVPZmZzZXQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtdW5kZXJsaW5lLXBvc2l0aW9uYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIHBvc2l0aW9uIG9mIHRoZSB1bmRlcmxpbmUgd2hpY2ggaXMgc2V0IHVzaW5nIHRoZSBgdGV4dC1kZWNvcmF0aW9uYCBwcm9wZXJ0eSdzIGB1bmRlcmxpbmVgIHZhbHVlLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBmcm9tLWZvbnQgfCBbIHVuZGVyIHx8IFsgbGVmdCB8IHJpZ2h0IF0gXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKiozMyoqIHwgKio3NCoqICB8ICoqMTIuMSoqIHwgKioxMioqIHwgKio2KiogfAogICAqIHwgICAgICAgIHwgICAgICAgICB8IDkgXy14LV8gIHwgICAgICAgIHwgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdGV4dC11bmRlcmxpbmUtcG9zaXRpb24KICAgKi8KICB0ZXh0VW5kZXJsaW5lUG9zaXRpb24/OiBQcm9wZXJ0eS5UZXh0VW5kZXJsaW5lUG9zaXRpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRvcGAqKiBDU1MgcHJvcGVydHkgcGFydGljaXBhdGVzIGluIHNwZWNpZnlpbmcgdGhlIHZlcnRpY2FsIHBvc2l0aW9uIG9mIGEgcG9zaXRpb25lZCBlbGVtZW50LiBJdCBoYXMgbm8gZWZmZWN0IG9uIG5vbi1wb3NpdGlvbmVkIGVsZW1lbnRzLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+IHwgPHBlcmNlbnRhZ2U+IHwgYXV0b2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio1KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdG9wCiAgICovCiAgdG9wPzogUHJvcGVydHkuVG9wPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0b3VjaC1hY3Rpb25gKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IGFuIGVsZW1lbnQncyByZWdpb24gY2FuIGJlIG1hbmlwdWxhdGVkIGJ5IGEgdG91Y2hzY3JlZW4gdXNlciAoZm9yIGV4YW1wbGUsIGJ5IHpvb21pbmcgZmVhdHVyZXMgYnVpbHQgaW50byB0aGUgYnJvd3NlcikuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IG5vbmUgfCBbIFsgcGFuLXggfCBwYW4tbGVmdCB8IHBhbi1yaWdodCBdIHx8IFsgcGFuLXkgfCBwYW4tdXAgfCBwYW4tZG93biBdIHx8IHBpbmNoLXpvb20gXSB8IG1hbmlwdWxhdGlvbmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgIElFICAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tLS0tOiB8CiAgICogfCAqKjM2KiogfCAqKjUyKiogIHwgKioxMyoqIHwgKioxMioqIHwgICoqMTEqKiAgfAogICAqIHwgICAgICAgIHwgICAgICAgICB8ICAgICAgICB8ICAgICAgICB8IDEwIF8teC1fIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RvdWNoLWFjdGlvbgogICAqLwogIHRvdWNoQWN0aW9uPzogUHJvcGVydHkuVG91Y2hBY3Rpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zZm9ybWAqKiBDU1MgcHJvcGVydHkgbGV0cyB5b3Ugcm90YXRlLCBzY2FsZSwgc2tldywgb3IgdHJhbnNsYXRlIGFuIGVsZW1lbnQuIEl0IG1vZGlmaWVzIHRoZSBjb29yZGluYXRlIHNwYWNlIG9mIHRoZSBDU1MgdmlzdWFsIGZvcm1hdHRpbmcgbW9kZWwuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDx0cmFuc2Zvcm0tbGlzdD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgIFNhZmFyaSAgIHwgIEVkZ2UgIHwgICBJRSAgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tOiB8IDotLS0tOiB8IDotLS0tLTogfAogICAqIHwgKiozNioqICB8ICoqMTYqKiAgfCAgICoqOSoqICAgfCAqKjEyKiogfCAqKjEwKiogIHwKICAgKiB8IDEgXy14LV8gfCAgICAgICAgIHwgMy4xIF8teC1fIHwgICAgICAgIHwgOSBfLXgtXyB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90cmFuc2Zvcm0KICAgKi8KICB0cmFuc2Zvcm0/OiBQcm9wZXJ0eS5UcmFuc2Zvcm0gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zZm9ybS1ib3hgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxheW91dCBib3ggdG8gd2hpY2ggdGhlIGB0cmFuc2Zvcm1gIGFuZCBgdHJhbnNmb3JtLW9yaWdpbmAgcHJvcGVydGllcyByZWxhdGUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgY29udGVudC1ib3ggfCBib3JkZXItYm94IHwgZmlsbC1ib3ggfCBzdHJva2UtYm94IHwgdmlldy1ib3hgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHZpZXctYm94YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2NCoqIHwgKio1NSoqICB8ICoqMTEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90cmFuc2Zvcm0tYm94CiAgICovCiAgdHJhbnNmb3JtQm94PzogUHJvcGVydHkuVHJhbnNmb3JtQm94IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2Zvcm0tb3JpZ2luYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBvcmlnaW4gZm9yIGFuIGVsZW1lbnQncyB0cmFuc2Zvcm1hdGlvbnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8bGVuZ3RoLXBlcmNlbnRhZ2U+IHwgbGVmdCB8IGNlbnRlciB8IHJpZ2h0IHwgdG9wIHwgYm90dG9tIF0gfCBbIFsgPGxlbmd0aC1wZXJjZW50YWdlPiB8IGxlZnQgfCBjZW50ZXIgfCByaWdodCBdICYmIFsgPGxlbmd0aC1wZXJjZW50YWdlPiB8IHRvcCB8IGNlbnRlciB8IGJvdHRvbSBdIF0gPGxlbmd0aD4/YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGA1MCUgNTAlIDBgCiAgICoKICAgKiB8IENocm9tZSAgfCAgRmlyZWZveCAgfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tLTogfAogICAqIHwgKiozNioqICB8ICAqKjE2KiogICB8ICAqKjkqKiAgfCAqKjEyKiogfCAqKjEwKiogIHwKICAgKiB8IDEgXy14LV8gfCAzLjUgXy14LV8gfCAyIF8teC1fIHwgICAgICAgIHwgOSBfLXgtXyB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90cmFuc2Zvcm0tb3JpZ2luCiAgICovCiAgdHJhbnNmb3JtT3JpZ2luPzogUHJvcGVydHkuVHJhbnNmb3JtT3JpZ2luPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2Zvcm0tc3R5bGVgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hldGhlciBjaGlsZHJlbiBvZiBhbiBlbGVtZW50IGFyZSBwb3NpdGlvbmVkIGluIHRoZSAzRCBzcGFjZSBvciBhcmUgZmxhdHRlbmVkIGluIHRoZSBwbGFuZSBvZiB0aGUgZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGBmbGF0IHwgcHJlc2VydmUtM2RgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGZsYXRgCiAgICoKICAgKiB8ICBDaHJvbWUgIHwgRmlyZWZveCAgfCBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICAqKjM2KiogIHwgICoqMTYqKiAgfCAgKio5KiogIHwgKioxMioqIHwgTm8gIHwKICAgKiB8IDEyIF8teC1fIHwgMTAgXy14LV8gfCA0IF8teC1fIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RyYW5zZm9ybS1zdHlsZQogICAqLwogIHRyYW5zZm9ybVN0eWxlPzogUHJvcGVydHkuVHJhbnNmb3JtU3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zaXRpb24tZGVsYXlgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgZHVyYXRpb24gdG8gd2FpdCBiZWZvcmUgc3RhcnRpbmcgYSBwcm9wZXJ0eSdzIHRyYW5zaXRpb24gZWZmZWN0IHdoZW4gaXRzIHZhbHVlIGNoYW5nZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHRpbWU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMHNgCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgKioyNioqICB8ICoqMTYqKiAgfCAgKio5KiogIHwgKioxMioqIHwgKioxMCoqIHwKICAgKiB8IDEgXy14LV8gfCA0IF8teC1fIHwgNCBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90cmFuc2l0aW9uLWRlbGF5CiAgICovCiAgdHJhbnNpdGlvbkRlbGF5PzogUHJvcGVydHkuVHJhbnNpdGlvbkRlbGF5PFRUaW1lPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNpdGlvbi1kdXJhdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbGVuZ3RoIG9mIHRpbWUgYSB0cmFuc2l0aW9uIGFuaW1hdGlvbiBzaG91bGQgdGFrZSB0byBjb21wbGV0ZS4gQnkgZGVmYXVsdCwgdGhlIHZhbHVlIGlzIGAwc2AsIG1lYW5pbmcgdGhhdCBubyBhbmltYXRpb24gd2lsbCBvY2N1ci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8dGltZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwc2AKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCAgU2FmYXJpICAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgKioyNioqICB8ICoqMTYqKiAgfCAgICoqOSoqICAgfCAqKjEyKiogfCAqKjEwKiogfAogICAqIHwgMSBfLXgtXyB8IDQgXy14LV8gfCAzLjEgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdHJhbnNpdGlvbi1kdXJhdGlvbgogICAqLwogIHRyYW5zaXRpb25EdXJhdGlvbj86IFByb3BlcnR5LlRyYW5zaXRpb25EdXJhdGlvbjxUVGltZT4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zaXRpb24tcHJvcGVydHlgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIENTUyBwcm9wZXJ0aWVzIHRvIHdoaWNoIGEgdHJhbnNpdGlvbiBlZmZlY3Qgc2hvdWxkIGJlIGFwcGxpZWQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxzaW5nbGUtdHJhbnNpdGlvbi1wcm9wZXJ0eT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGFsbAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8ICBTYWZhcmkgICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjI2KiogIHwgKioxNioqICB8ICAgKio5KiogICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAxIF8teC1fIHwgNCBfLXgtXyB8IDMuMSBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90cmFuc2l0aW9uLXByb3BlcnR5CiAgICovCiAgdHJhbnNpdGlvblByb3BlcnR5PzogUHJvcGVydHkuVHJhbnNpdGlvblByb3BlcnR5IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgaW50ZXJtZWRpYXRlIHZhbHVlcyBhcmUgY2FsY3VsYXRlZCBmb3IgQ1NTIHByb3BlcnRpZXMgYmVpbmcgYWZmZWN0ZWQgYnkgYSB0cmFuc2l0aW9uIGVmZmVjdC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8ZWFzaW5nLWZ1bmN0aW9uPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGVhc2VgCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgIFNhZmFyaSAgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqMjYqKiAgfCAqKjE2KiogIHwgICAqKjkqKiAgIHwgKioxMioqIHwgKioxMCoqIHwKICAgKiB8IDEgXy14LV8gfCA0IF8teC1fIHwgMy4xIF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uCiAgICovCiAgdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uPzogUHJvcGVydHkuVHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2xhdGVgKiogQ1NTIHByb3BlcnR5IGFsbG93cyB5b3UgdG8gc3BlY2lmeSB0cmFuc2xhdGlvbiB0cmFuc2Zvcm1zIGluZGl2aWR1YWxseSBhbmQgaW5kZXBlbmRlbnRseSBvZiB0aGUgYHRyYW5zZm9ybWAgcHJvcGVydHkuIFRoaXMgbWFwcyBiZXR0ZXIgdG8gdHlwaWNhbCB1c2VyIGludGVyZmFjZSB1c2FnZSwgYW5kIHNhdmVzIGhhdmluZyB0byByZW1lbWJlciB0aGUgZXhhY3Qgb3JkZXIgb2YgdHJhbnNmb3JtIGZ1bmN0aW9ucyB0byBzcGVjaWZ5IGluIHRoZSBgdHJhbnNmb3JtYCB2YWx1ZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPGxlbmd0aC1wZXJjZW50YWdlPiBbIDxsZW5ndGgtcGVyY2VudGFnZT4gPGxlbmd0aD4/IF0/YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCBFZGdlIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLTogfCA6LTogfAogICAqIHwgICBObyAgIHwgKio3MioqICB8ICoqMTQuMSoqIHwgIE5vICB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90cmFuc2xhdGUKICAgKi8KICB0cmFuc2xhdGU/OiBQcm9wZXJ0eS5UcmFuc2xhdGU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHVuaWNvZGUtYmlkaWAqKiBDU1MgcHJvcGVydHksIHRvZ2V0aGVyIHdpdGggdGhlIGBkaXJlY3Rpb25gIHByb3BlcnR5LCBkZXRlcm1pbmVzIGhvdyBiaWRpcmVjdGlvbmFsIHRleHQgaW4gYSBkb2N1bWVudCBpcyBoYW5kbGVkLiBGb3IgZXhhbXBsZSwgaWYgYSBibG9jayBvZiBjb250ZW50IGNvbnRhaW5zIGJvdGggbGVmdC10by1yaWdodCBhbmQgcmlnaHQtdG8tbGVmdCB0ZXh0LCB0aGUgdXNlci1hZ2VudCB1c2VzIGEgY29tcGxleCBVbmljb2RlIGFsZ29yaXRobSB0byBkZWNpZGUgaG93IHRvIGRpc3BsYXkgdGhlIHRleHQuIFRoZSBgdW5pY29kZS1iaWRpYCBwcm9wZXJ0eSBvdmVycmlkZXMgdGhpcyBhbGdvcml0aG0gYW5kIGFsbG93cyB0aGUgZGV2ZWxvcGVyIHRvIGNvbnRyb2wgdGhlIHRleHQgZW1iZWRkaW5nLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IGVtYmVkIHwgaXNvbGF0ZSB8IGJpZGktb3ZlcnJpZGUgfCBpc29sYXRlLW92ZXJyaWRlIHwgcGxhaW50ZXh0YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tLTogfAogICAqIHwgKioyKiogIHwgICoqMSoqICB8ICoqMS4zKiogfCAqKjEyKiogfCAqKjUuNSoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3VuaWNvZGUtYmlkaQogICAqLwogIHVuaWNvZGVCaWRpPzogUHJvcGVydHkuVW5pY29kZUJpZGkgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKnVzZXItc2VsZWN0KipgIENTUyBwcm9wZXJ0eSBjb250cm9scyB3aGV0aGVyIHRoZSB1c2VyIGNhbiBzZWxlY3QgdGV4dC4gVGhpcyBkb2Vzbid0IGhhdmUgYW55IGVmZmVjdCBvbiBjb250ZW50IGxvYWRlZCBhcyBjaHJvbWUsIGV4Y2VwdCBpbiB0ZXh0Ym94ZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IHRleHQgfCBub25lIHwgY29udGFpbiB8IGFsbGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCAgIFNhZmFyaSAgICB8ICAgRWRnZSAgIHwgICAgICBJRSAgICAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tLS0tLS0tOiB8CiAgICogfCAqKjU0KiogIHwgKio2OSoqICB8ICoqMyoqIF8teC1fIHwgICoqNzkqKiAgfCAqKjEwKiogXy14LV8gfAogICAqIHwgMSBfLXgtXyB8IDEgXy14LV8gfCAgICAgICAgICAgICB8IDEyIF8teC1fIHwgICAgICAgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3VzZXItc2VsZWN0CiAgICovCiAgdXNlclNlbGVjdD86IFByb3BlcnR5LlVzZXJTZWxlY3QgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHZlcnRpY2FsLWFsaWduYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHZlcnRpY2FsIGFsaWdubWVudCBvZiBhbiBpbmxpbmUsIGlubGluZS1ibG9jayBvciB0YWJsZS1jZWxsIGJveC4KICAgKgogICAqICoqU3ludGF4Kio6IGBiYXNlbGluZSB8IHN1YiB8IHN1cGVyIHwgdGV4dC10b3AgfCB0ZXh0LWJvdHRvbSB8IG1pZGRsZSB8IHRvcCB8IGJvdHRvbSB8IDxwZXJjZW50YWdlPiB8IDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBiYXNlbGluZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdmVydGljYWwtYWxpZ24KICAgKi8KICB2ZXJ0aWNhbEFsaWduPzogUHJvcGVydHkuVmVydGljYWxBbGlnbjxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdmlzaWJpbGl0eWAqKiBDU1MgcHJvcGVydHkgc2hvd3Mgb3IgaGlkZXMgYW4gZWxlbWVudCB3aXRob3V0IGNoYW5naW5nIHRoZSBsYXlvdXQgb2YgYSBkb2N1bWVudC4gVGhlIHByb3BlcnR5IGNhbiBhbHNvIGhpZGUgcm93cyBvciBjb2x1bW5zIGluIGEgYDx0YWJsZT5gLgogICAqCiAgICogKipTeW50YXgqKjogYHZpc2libGUgfCBoaWRkZW4gfCBjb2xsYXBzZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgdmlzaWJsZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdmlzaWJpbGl0eQogICAqLwogIHZpc2liaWxpdHk/OiBQcm9wZXJ0eS5WaXNpYmlsaXR5IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB3aGl0ZS1zcGFjZWAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgd2hpdGUgc3BhY2UgaW5zaWRlIGFuIGVsZW1lbnQgaXMgaGFuZGxlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCBwcmUgfCBub3dyYXAgfCBwcmUtd3JhcCB8IHByZS1saW5lIHwgYnJlYWstc3BhY2VzYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgIElFICAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjUuNSoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3doaXRlLXNwYWNlCiAgICovCiAgd2hpdGVTcGFjZT86IFByb3BlcnR5LldoaXRlU3BhY2UgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHdpZG93c2AqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbWluaW11bSBudW1iZXIgb2YgbGluZXMgaW4gYSBibG9jayBjb250YWluZXIgdGhhdCBtdXN0IGJlIHNob3duIGF0IHRoZSBfdG9wXyBvZiBhIHBhZ2UsIHJlZ2lvbiwgb3IgY29sdW1uLgogICAqCiAgICogKipTeW50YXgqKjogYDxpbnRlZ2VyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMjUqKiB8ICAgTm8gICAgfCAqKjEuMyoqIHwgKioxMioqIHwgKio4KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvd2lkb3dzCiAgICovCiAgd2lkb3dzPzogUHJvcGVydHkuV2lkb3dzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB3aWR0aGAqKiBDU1MgcHJvcGVydHkgc2V0cyBhbiBlbGVtZW50J3Mgd2lkdGguIEJ5IGRlZmF1bHQsIGl0IHNldHMgdGhlIHdpZHRoIG9mIHRoZSBjb250ZW50IGFyZWEsIGJ1dCBpZiBgYm94LXNpemluZ2AgaXMgc2V0IHRvIGBib3JkZXItYm94YCwgaXQgc2V0cyB0aGUgd2lkdGggb2YgdGhlIGJvcmRlciBhcmVhLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCA8bGVuZ3RoPiB8IDxwZXJjZW50YWdlPiB8IG1pbi1jb250ZW50IHwgbWF4LWNvbnRlbnQgfCBmaXQtY29udGVudCB8IGZpdC1jb250ZW50KDxsZW5ndGgtcGVyY2VudGFnZT4pYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy93aWR0aAogICAqLwogIHdpZHRoPzogUHJvcGVydHkuV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHdpbGwtY2hhbmdlYCoqIENTUyBwcm9wZXJ0eSBoaW50cyB0byBicm93c2VycyBob3cgYW4gZWxlbWVudCBpcyBleHBlY3RlZCB0byBjaGFuZ2UuIEJyb3dzZXJzIG1heSBzZXQgdXAgb3B0aW1pemF0aW9ucyBiZWZvcmUgYW4gZWxlbWVudCBpcyBhY3R1YWxseSBjaGFuZ2VkLiBUaGVzZSBraW5kcyBvZiBvcHRpbWl6YXRpb25zIGNhbiBpbmNyZWFzZSB0aGUgcmVzcG9uc2l2ZW5lc3Mgb2YgYSBwYWdlIGJ5IGRvaW5nIHBvdGVudGlhbGx5IGV4cGVuc2l2ZSB3b3JrIGJlZm9yZSB0aGV5IGFyZSBhY3R1YWxseSByZXF1aXJlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPGFuaW1hdGVhYmxlLWZlYXR1cmU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKiozNioqIHwgKiozNioqICB8ICoqOS4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvd2lsbC1jaGFuZ2UKICAgKi8KICB3aWxsQ2hhbmdlPzogUHJvcGVydHkuV2lsbENoYW5nZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgd29yZC1icmVha2AqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIGxpbmUgYnJlYWtzIGFwcGVhciB3aGVyZXZlciB0aGUgdGV4dCB3b3VsZCBvdGhlcndpc2Ugb3ZlcmZsb3cgaXRzIGNvbnRlbnQgYm94LgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IGJyZWFrLWFsbCB8IGtlZXAtYWxsIHwgYnJlYWstd29yZGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgICBJRSAgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS0tOiB8CiAgICogfCAqKjEqKiAgfCAqKjE1KiogIHwgKiozKiogIHwgKioxMioqIHwgKio1LjUqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy93b3JkLWJyZWFrCiAgICovCiAgd29yZEJyZWFrPzogUHJvcGVydHkuV29yZEJyZWFrIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB3b3JkLXNwYWNpbmdgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGxlbmd0aCBvZiBzcGFjZSBiZXR3ZWVuIHdvcmRzIGFuZCBiZXR3ZWVuIHRhZ3MuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio2KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvd29yZC1zcGFjaW5nCiAgICovCiAgd29yZFNwYWNpbmc/OiBQcm9wZXJ0eS5Xb3JkU3BhY2luZzxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYCoqb3ZlcmZsb3ctd3JhcCoqYCBDU1MgcHJvcGVydHkgYXBwbGllcyB0byBpbmxpbmUgZWxlbWVudHMsIHNldHRpbmcgd2hldGhlciB0aGUgYnJvd3NlciBzaG91bGQgaW5zZXJ0IGxpbmUgYnJlYWtzIHdpdGhpbiBhbiBvdGhlcndpc2UgdW5icmVha2FibGUgc3RyaW5nIHRvIHByZXZlbnQgdGV4dCBmcm9tIG92ZXJmbG93aW5nIGl0cyBsaW5lIGJveC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCBicmVhay13b3JkYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICovCiAgd29yZFdyYXA/OiBQcm9wZXJ0eS5Xb3JkV3JhcCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgd3JpdGluZy1tb2RlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgbGluZXMgb2YgdGV4dCBhcmUgbGFpZCBvdXQgaG9yaXpvbnRhbGx5IG9yIHZlcnRpY2FsbHksIGFzIHdlbGwgYXMgdGhlIGRpcmVjdGlvbiBpbiB3aGljaCBibG9ja3MgcHJvZ3Jlc3MuIFdoZW4gc2V0IGZvciBhbiBlbnRpcmUgZG9jdW1lbnQsIGl0IHNob3VsZCBiZSBzZXQgb24gdGhlIHJvb3QgZWxlbWVudCAoYGh0bWxgIGVsZW1lbnQgZm9yIEhUTUwgZG9jdW1lbnRzKS4KICAgKgogICAqICoqU3ludGF4Kio6IGBob3Jpem9udGFsLXRiIHwgdmVydGljYWwtcmwgfCB2ZXJ0aWNhbC1sciB8IHNpZGV3YXlzLXJsIHwgc2lkZXdheXMtbHJgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGhvcml6b250YWwtdGJgCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgIFNhZmFyaSAgIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjQ4KiogIHwgKio0MSoqICB8ICoqMTAuMSoqICB8ICoqMTIqKiB8ICoqOSoqIHwKICAgKiB8IDggXy14LV8gfCAgICAgICAgIHwgNS4xIF8teC1fIHwgICAgICAgIHwgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvd3JpdGluZy1tb2RlCiAgICovCiAgd3JpdGluZ01vZGU/OiBQcm9wZXJ0eS5Xcml0aW5nTW9kZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgei1pbmRleGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgei1vcmRlciBvZiBhIHBvc2l0aW9uZWQgZWxlbWVudCBhbmQgaXRzIGRlc2NlbmRhbnRzIG9yIGZsZXggaXRlbXMuIE92ZXJsYXBwaW5nIGVsZW1lbnRzIHdpdGggYSBsYXJnZXIgei1pbmRleCBjb3ZlciB0aG9zZSB3aXRoIGEgc21hbGxlciBvbmUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IDxpbnRlZ2VyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvei1pbmRleAogICAqLwogIHpJbmRleD86IFByb3BlcnR5LlpJbmRleCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgbm9uLXN0YW5kYXJkICoqYHpvb21gKiogQ1NTIHByb3BlcnR5IGNhbiBiZSB1c2VkIHRvIGNvbnRyb2wgdGhlIG1hZ25pZmljYXRpb24gbGV2ZWwgb2YgYW4gZWxlbWVudC4gYHRyYW5zZm9ybTogc2NhbGUoKWAgc2hvdWxkIGJlIHVzZWQgaW5zdGVhZCBvZiB0aGlzIHByb3BlcnR5LCBpZiBwb3NzaWJsZS4gSG93ZXZlciwgdW5saWtlIENTUyBUcmFuc2Zvcm1zLCBgem9vbWAgYWZmZWN0cyB0aGUgbGF5b3V0IHNpemUgb2YgdGhlIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgcmVzZXQgfCA8bnVtYmVyPiB8IDxwZXJjZW50YWdlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLS06IHwKICAgKiB8ICoqMSoqICB8ICAgTm8gICAgfCAqKjMuMSoqIHwgKioxMioqIHwgKio1LjUqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy96b29tCiAgICovCiAgem9vbT86IFByb3BlcnR5Llpvb20gfCB1bmRlZmluZWQ7Cn0KCmV4cG9ydCBpbnRlcmZhY2UgU3RhbmRhcmRTaG9ydGhhbmRQcm9wZXJ0aWVzPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMCwgVFRpbWUgPSBzdHJpbmcgJiB7fT4gewogIC8qKgogICAqIFRoZSBgKiphbGwqKmAgc2hvcnRoYW5kIENTUyBwcm9wZXJ0eSByZXNldHMgYWxsIG9mIGFuIGVsZW1lbnQncyBwcm9wZXJ0aWVzIGV4Y2VwdCBgdW5pY29kZS1iaWRpYCwgYGRpcmVjdGlvbmAsIGFuZCBDU1MgQ3VzdG9tIFByb3BlcnRpZXMuIEl0IGNhbiBzZXQgcHJvcGVydGllcyB0byB0aGVpciBpbml0aWFsIG9yIGluaGVyaXRlZCB2YWx1ZXMsIG9yIHRvIHRoZSB2YWx1ZXMgc3BlY2lmaWVkIGluIGFub3RoZXIgc3R5bGVzaGVldCBvcmlnaW4uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgaW5pdGlhbCB8IGluaGVyaXQgfCB1bnNldCB8IHJldmVydGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBUaGVyZSBpcyBubyBwcmFjdGljYWwgaW5pdGlhbCB2YWx1ZSBmb3IgaXQuCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqMzcqKiB8ICoqMjcqKiAgfCAqKjkuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2FsbAogICAqLwogIGFsbD86IFByb3BlcnR5LkFsbCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYW5pbWF0aW9uYCoqIHNob3J0aGFuZCBDU1MgcHJvcGVydHkgYXBwbGllcyBhbiBhbmltYXRpb24gYmV0d2VlbiBzdHlsZXMuIEl0IGlzIGEgc2hvcnRoYW5kIGZvciBgYW5pbWF0aW9uLW5hbWVgLCBgYW5pbWF0aW9uLWR1cmF0aW9uYCwgYGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb25gLCBgYW5pbWF0aW9uLWRlbGF5YCwgYGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnRgLCBgYW5pbWF0aW9uLWRpcmVjdGlvbmAsIGBhbmltYXRpb24tZmlsbC1tb2RlYCwgYW5kIGBhbmltYXRpb24tcGxheS1zdGF0ZWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHNpbmdsZS1hbmltYXRpb24+I2AKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjQzKiogIHwgKioxNioqICB8ICAqKjkqKiAgfCAqKjEyKiogfCAqKjEwKiogfAogICAqIHwgMyBfLXgtXyB8IDUgXy14LV8gfCA0IF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2FuaW1hdGlvbgogICAqLwogIGFuaW1hdGlvbj86IFByb3BlcnR5LkFuaW1hdGlvbjxUVGltZT4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJhY2tncm91bmRgKiogc2hvcnRoYW5kIENTUyBwcm9wZXJ0eSBzZXRzIGFsbCBiYWNrZ3JvdW5kIHN0eWxlIHByb3BlcnRpZXMgYXQgb25jZSwgc3VjaCBhcyBjb2xvciwgaW1hZ2UsIG9yaWdpbiBhbmQgc2l6ZSwgb3IgcmVwZWF0IG1ldGhvZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDxiZy1sYXllcj4gLCBdKiA8ZmluYWwtYmctbGF5ZXI+YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9iYWNrZ3JvdW5kCiAgICovCiAgYmFja2dyb3VuZD86IFByb3BlcnR5LkJhY2tncm91bmQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJhY2tncm91bmQtcG9zaXRpb25gKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGluaXRpYWwgcG9zaXRpb24gZm9yIGVhY2ggYmFja2dyb3VuZCBpbWFnZS4gVGhlIHBvc2l0aW9uIGlzIHJlbGF0aXZlIHRvIHRoZSBwb3NpdGlvbiBsYXllciBzZXQgYnkgYGJhY2tncm91bmQtb3JpZ2luYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8YmctcG9zaXRpb24+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMCUgMCVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JhY2tncm91bmQtcG9zaXRpb24KICAgKi8KICBiYWNrZ3JvdW5kUG9zaXRpb24/OiBQcm9wZXJ0eS5CYWNrZ3JvdW5kUG9zaXRpb248VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlcmAqKiBzaG9ydGhhbmQgQ1NTIHByb3BlcnR5IHNldHMgYW4gZWxlbWVudCdzIGJvcmRlci4gSXQgc2V0cyB0aGUgdmFsdWVzIG9mIGBib3JkZXItd2lkdGhgLCBgYm9yZGVyLXN0eWxlYCwgYW5kIGBib3JkZXItY29sb3JgLgogICAqCiAgICogKipTeW50YXgqKjogYDxsaW5lLXdpZHRoPiB8fCA8bGluZS1zdHlsZT4gfHwgPGNvbG9yPmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyCiAgICovCiAgYm9yZGVyPzogUHJvcGVydHkuQm9yZGVyPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItYmxvY2tgKiogQ1NTIHByb3BlcnR5IGlzIGEgc2hvcnRoYW5kIHByb3BlcnR5IGZvciBzZXR0aW5nIHRoZSBpbmRpdmlkdWFsIGxvZ2ljYWwgYmxvY2sgYm9yZGVyIHByb3BlcnR5IHZhbHVlcyBpbiBhIHNpbmdsZSBwbGFjZSBpbiB0aGUgc3R5bGUgc2hlZXQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItdG9wLXdpZHRoJz4gfHwgPCdib3JkZXItdG9wLXN0eWxlJz4gfHwgPGNvbG9yPmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg3KiogfCAqKjY2KiogIHwgKioxNC4xKiogfCAqKjg3KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWJsb2NrCiAgICovCiAgYm9yZGVyQmxvY2s/OiBQcm9wZXJ0eS5Cb3JkZXJCbG9jazxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWJsb2NrLWVuZGAqKiBDU1MgcHJvcGVydHkgaXMgYSBzaG9ydGhhbmQgcHJvcGVydHkgZm9yIHNldHRpbmcgdGhlIGluZGl2aWR1YWwgbG9naWNhbCBibG9jay1lbmQgYm9yZGVyIHByb3BlcnR5IHZhbHVlcyBpbiBhIHNpbmdsZSBwbGFjZSBpbiB0aGUgc3R5bGUgc2hlZXQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItdG9wLXdpZHRoJz4gfHwgPCdib3JkZXItdG9wLXN0eWxlJz4gfHwgPGNvbG9yPmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjQxKiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWJsb2NrLWVuZAogICAqLwogIGJvcmRlckJsb2NrRW5kPzogUHJvcGVydHkuQm9yZGVyQmxvY2tFbmQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1ibG9jay1zdGFydGAqKiBDU1MgcHJvcGVydHkgaXMgYSBzaG9ydGhhbmQgcHJvcGVydHkgZm9yIHNldHRpbmcgdGhlIGluZGl2aWR1YWwgbG9naWNhbCBibG9jay1zdGFydCBib3JkZXIgcHJvcGVydHkgdmFsdWVzIGluIGEgc2luZ2xlIHBsYWNlIGluIHRoZSBzdHlsZSBzaGVldC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3Atd2lkdGgnPiB8fCA8J2JvcmRlci10b3Atc3R5bGUnPiB8fCA8Y29sb3I+YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNDEqKiAgfCAqKjEyLjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItYmxvY2stc3RhcnQKICAgKi8KICBib3JkZXJCbG9ja1N0YXJ0PzogUHJvcGVydHkuQm9yZGVyQmxvY2tTdGFydDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWJvdHRvbWAqKiBzaG9ydGhhbmQgQ1NTIHByb3BlcnR5IHNldHMgYW4gZWxlbWVudCdzIGJvdHRvbSBib3JkZXIuIEl0IHNldHMgdGhlIHZhbHVlcyBvZiBgYm9yZGVyLWJvdHRvbS13aWR0aGAsIGBib3JkZXItYm90dG9tLXN0eWxlYCBhbmQgYGJvcmRlci1ib3R0b20tY29sb3JgLgogICAqCiAgICogKipTeW50YXgqKjogYDxsaW5lLXdpZHRoPiB8fCA8bGluZS1zdHlsZT4gfHwgPGNvbG9yPmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWJvdHRvbQogICAqLwogIGJvcmRlckJvdHRvbT86IFByb3BlcnR5LkJvcmRlckJvdHRvbTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWNvbG9yYCoqIHNob3J0aGFuZCBDU1MgcHJvcGVydHkgc2V0cyB0aGUgY29sb3Igb2YgYW4gZWxlbWVudCdzIGJvcmRlci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+ezEsNH1gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1jb2xvcgogICAqLwogIGJvcmRlckNvbG9yPzogUHJvcGVydHkuQm9yZGVyQ29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbWFnZWAqKiBDU1MgcHJvcGVydHkgZHJhd3MgYW4gaW1hZ2UgYXJvdW5kIGEgZ2l2ZW4gZWxlbWVudC4gSXQgcmVwbGFjZXMgdGhlIGVsZW1lbnQncyByZWd1bGFyIGJvcmRlci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci1pbWFnZS1zb3VyY2UnPiB8fCA8J2JvcmRlci1pbWFnZS1zbGljZSc+IFsgLyA8J2JvcmRlci1pbWFnZS13aWR0aCc+IHwgLyA8J2JvcmRlci1pbWFnZS13aWR0aCc+PyAvIDwnYm9yZGVyLWltYWdlLW91dHNldCc+IF0/IHx8IDwnYm9yZGVyLWltYWdlLXJlcGVhdCc+YAogICAqCiAgICogfCBDaHJvbWUgIHwgIEZpcmVmb3ggIHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjE2KiogIHwgICoqMTUqKiAgIHwgICoqNioqICB8ICoqMTIqKiB8ICoqMTEqKiB8CiAgICogfCA3IF8teC1fIHwgMy41IF8teC1fIHwgMyBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItaW1hZ2UKICAgKi8KICBib3JkZXJJbWFnZT86IFByb3BlcnR5LkJvcmRlckltYWdlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItaW5saW5lYCoqIENTUyBwcm9wZXJ0eSBpcyBhIHNob3J0aGFuZCBwcm9wZXJ0eSBmb3Igc2V0dGluZyB0aGUgaW5kaXZpZHVhbCBsb2dpY2FsIGlubGluZSBib3JkZXIgcHJvcGVydHkgdmFsdWVzIGluIGEgc2luZ2xlIHBsYWNlIGluIHRoZSBzdHlsZSBzaGVldC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3Atd2lkdGgnPiB8fCA8J2JvcmRlci10b3Atc3R5bGUnPiB8fCA8Y29sb3I+YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODcqKiB8ICoqNjYqKiAgfCAqKjE0LjEqKiB8ICoqODcqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItaW5saW5lCiAgICovCiAgYm9yZGVySW5saW5lPzogUHJvcGVydHkuQm9yZGVySW5saW5lPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItaW5saW5lLWVuZGAqKiBDU1MgcHJvcGVydHkgaXMgYSBzaG9ydGhhbmQgcHJvcGVydHkgZm9yIHNldHRpbmcgdGhlIGluZGl2aWR1YWwgbG9naWNhbCBpbmxpbmUtZW5kIGJvcmRlciBwcm9wZXJ0eSB2YWx1ZXMgaW4gYSBzaW5nbGUgcGxhY2UgaW4gdGhlIHN0eWxlIHNoZWV0LgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXRvcC13aWR0aCc+IHx8IDwnYm9yZGVyLXRvcC1zdHlsZSc+IHx8IDxjb2xvcj5gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio0MSoqICB8ICoqMTIuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1pbmxpbmUtZW5kCiAgICovCiAgYm9yZGVySW5saW5lRW5kPzogUHJvcGVydHkuQm9yZGVySW5saW5lRW5kPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItaW5saW5lLXN0YXJ0YCoqIENTUyBwcm9wZXJ0eSBpcyBhIHNob3J0aGFuZCBwcm9wZXJ0eSBmb3Igc2V0dGluZyB0aGUgaW5kaXZpZHVhbCBsb2dpY2FsIGlubGluZS1zdGFydCBib3JkZXIgcHJvcGVydHkgdmFsdWVzIGluIGEgc2luZ2xlIHBsYWNlIGluIHRoZSBzdHlsZSBzaGVldC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3Atd2lkdGgnPiB8fCA8J2JvcmRlci10b3Atc3R5bGUnPiB8fCA8Y29sb3I+YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNDEqKiAgfCAqKjEyLjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItaW5saW5lLXN0YXJ0CiAgICovCiAgYm9yZGVySW5saW5lU3RhcnQ/OiBQcm9wZXJ0eS5Cb3JkZXJJbmxpbmVTdGFydDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWxlZnRgKiogc2hvcnRoYW5kIENTUyBwcm9wZXJ0eSBzZXRzIGFsbCB0aGUgcHJvcGVydGllcyBvZiBhbiBlbGVtZW50J3MgbGVmdCBib3JkZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxpbmUtd2lkdGg+IHx8IDxsaW5lLXN0eWxlPiB8fCA8Y29sb3I+YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItbGVmdAogICAqLwogIGJvcmRlckxlZnQ/OiBQcm9wZXJ0eS5Cb3JkZXJMZWZ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItcmFkaXVzYCoqIENTUyBwcm9wZXJ0eSByb3VuZHMgdGhlIGNvcm5lcnMgb2YgYW4gZWxlbWVudCdzIG91dGVyIGJvcmRlciBlZGdlLiBZb3UgY2FuIHNldCBhIHNpbmdsZSByYWRpdXMgdG8gbWFrZSBjaXJjdWxhciBjb3JuZXJzLCBvciB0d28gcmFkaWkgdG8gbWFrZSBlbGxpcHRpY2FsIGNvcm5lcnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aC1wZXJjZW50YWdlPnsxLDR9IFsgLyA8bGVuZ3RoLXBlcmNlbnRhZ2U+ezEsNH0gXT9gCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICAqKjQqKiAgfCAgKio0KiogIHwgICoqNSoqICB8ICoqMTIqKiB8ICoqOSoqIHwKICAgKiB8IDEgXy14LV8gfCAgICAgICAgIHwgMyBfLXgtXyB8ICAgICAgICB8ICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1yYWRpdXMKICAgKi8KICBib3JkZXJSYWRpdXM/OiBQcm9wZXJ0eS5Cb3JkZXJSYWRpdXM8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1yaWdodGAqKiBzaG9ydGhhbmQgQ1NTIHByb3BlcnR5IHNldHMgYWxsIHRoZSBwcm9wZXJ0aWVzIG9mIGFuIGVsZW1lbnQncyByaWdodCBib3JkZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxpbmUtd2lkdGg+IHx8IDxsaW5lLXN0eWxlPiB8fCA8Y29sb3I+YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgICBJRSAgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio1LjUqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItcmlnaHQKICAgKi8KICBib3JkZXJSaWdodD86IFByb3BlcnR5LkJvcmRlclJpZ2h0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItc3R5bGVgKiogc2hvcnRoYW5kIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBsaW5lIHN0eWxlIGZvciBhbGwgZm91ciBzaWRlcyBvZiBhbiBlbGVtZW50J3MgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYDxsaW5lLXN0eWxlPnsxLDR9YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItc3R5bGUKICAgKi8KICBib3JkZXJTdHlsZT86IFByb3BlcnR5LkJvcmRlclN0eWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItdG9wYCoqIHNob3J0aGFuZCBDU1MgcHJvcGVydHkgc2V0cyBhbGwgdGhlIHByb3BlcnRpZXMgb2YgYW4gZWxlbWVudCdzIHRvcCBib3JkZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxpbmUtd2lkdGg+IHx8IDxsaW5lLXN0eWxlPiB8fCA8Y29sb3I+YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItdG9wCiAgICovCiAgYm9yZGVyVG9wPzogUHJvcGVydHkuQm9yZGVyVG9wPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItd2lkdGhgKiogc2hvcnRoYW5kIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSB3aWR0aCBvZiBhbiBlbGVtZW50J3MgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYDxsaW5lLXdpZHRoPnsxLDR9YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItd2lkdGgKICAgKi8KICBib3JkZXJXaWR0aD86IFByb3BlcnR5LkJvcmRlcldpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2x1bW4tcnVsZWAqKsKgc2hvcnRoYW5kIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSB3aWR0aCwgc3R5bGUsIGFuZCBjb2xvciBvZiB0aGUgbGluZSBkcmF3biBiZXR3ZWVuIGNvbHVtbnMgaW4gYSBtdWx0aS1jb2x1bW4gbGF5b3V0LgogICAqCiAgICogKipTeW50YXgqKjogYDwnY29sdW1uLXJ1bGUtd2lkdGgnPiB8fCA8J2NvbHVtbi1ydWxlLXN0eWxlJz4gfHwgPCdjb2x1bW4tcnVsZS1jb2xvcic+YAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNTAqKiAgfCAqKjUyKiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAxIF8teC1fIHwgICAgICAgICB8IDMgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvY29sdW1uLXJ1bGUKICAgKi8KICBjb2x1bW5SdWxlPzogUHJvcGVydHkuQ29sdW1uUnVsZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uc2AqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IHNldHMgdGhlIG51bWJlciBvZiBjb2x1bW5zIHRvIHVzZSB3aGVuIGRyYXdpbmcgYW4gZWxlbWVudCdzIGNvbnRlbnRzLCBhcyB3ZWxsIGFzIHRob3NlIGNvbHVtbnMnIHdpZHRocy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2NvbHVtbi13aWR0aCc+IHx8IDwnY29sdW1uLWNvdW50Jz5gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNTAqKiB8ICoqNTIqKiAgfCAgKio5KiogIHwgKioxMioqIHwgKioxMCoqIHwKICAgKiB8ICAgICAgICB8ICAgICAgICAgfCAzIF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2NvbHVtbnMKICAgKi8KICBjb2x1bW5zPzogUHJvcGVydHkuQ29sdW1uczxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZmxleGAqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IHNldHMgaG93IGEgZmxleCBfaXRlbV8gd2lsbCBncm93IG9yIHNocmluayB0byBmaXQgdGhlIHNwYWNlIGF2YWlsYWJsZSBpbiBpdHMgZmxleCBjb250YWluZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IFsgPCdmbGV4LWdyb3cnPiA8J2ZsZXgtc2hyaW5rJz4/IHx8IDwnZmxleC1iYXNpcyc+IF1gCiAgICoKICAgKiB8ICBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgICBJRSAgICB8CiAgICogfCA6LS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS0tLTogfAogICAqIHwgICoqMjkqKiAgfCAqKjIwKiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICAqKjExKiogIHwKICAgKiB8IDIxIF8teC1fIHwgICAgICAgICB8IDcgXy14LV8gfCAgICAgICAgfCAxMCBfLXgtXyB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mbGV4CiAgICovCiAgZmxleD86IFByb3BlcnR5LkZsZXg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZsZXgtZmxvd2AqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgZGlyZWN0aW9uIG9mIGEgZmxleCBjb250YWluZXIsIGFzIHdlbGwgYXMgaXRzIHdyYXBwaW5nIGJlaGF2aW9yLgogICAqCiAgICogKipTeW50YXgqKjogYDwnZmxleC1kaXJlY3Rpb24nPiB8fCA8J2ZsZXgtd3JhcCc+YAogICAqCiAgICogfCAgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgICoqMjkqKiAgfCAqKjI4KiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTEqKiB8CiAgICogfCAyMSBfLXgtXyB8ICAgICAgICAgfCA3IF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2ZsZXgtZmxvdwogICAqLwogIGZsZXhGbG93PzogUHJvcGVydHkuRmxleEZsb3cgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnRgKiogQ1NTIHNob3J0aGFuZCBwcm9wZXJ0eSBzZXRzIGFsbCB0aGUgZGlmZmVyZW50IHByb3BlcnRpZXMgb2YgYW4gZWxlbWVudCdzIGZvbnQuIEFsdGVybmF0aXZlbHksIGl0IHNldHMgYW4gZWxlbWVudCdzIGZvbnQgdG8gYSBzeXN0ZW0gZm9udC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIFsgPCdmb250LXN0eWxlJz4gfHwgPGZvbnQtdmFyaWFudC1jc3MyMT4gfHwgPCdmb250LXdlaWdodCc+IHx8IDwnZm9udC1zdHJldGNoJz4gXT8gPCdmb250LXNpemUnPiBbIC8gPCdsaW5lLWhlaWdodCc+IF0/IDwnZm9udC1mYW1pbHknPiBdIHwgY2FwdGlvbiB8IGljb24gfCBtZW51IHwgbWVzc2FnZS1ib3ggfCBzbWFsbC1jYXB0aW9uIHwgc3RhdHVzLWJhcmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKiozKiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZm9udAogICAqLwogIGZvbnQ/OiBQcm9wZXJ0eS5Gb250IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBnYXBgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGdhcHMgKGd1dHRlcnMpIGJldHdlZW4gcm93cyBhbmQgY29sdW1ucy4gSXQgaXMgYSBzaG9ydGhhbmQgZm9yIGByb3ctZ2FwYCBhbmQgYGNvbHVtbi1nYXBgLgogICAqCiAgICogKipTeW50YXgqKjogYDwncm93LWdhcCc+IDwnY29sdW1uLWdhcCc+P2AKICAgKgogICAqIC0tLQogICAqCiAgICogX1N1cHBvcnRlZCBpbiBGbGV4IExheW91dF8KICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg0KiogfCAqKjYzKiogIHwgKioxNC4xKiogfCAqKjg0KiogfCBObyAgfAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIEdyaWQgTGF5b3V0XwogICAqCiAgICogfCAgICAgQ2hyb21lICAgICAgfCAgICAgRmlyZWZveCAgICAgfCAgICAgIFNhZmFyaSAgICAgICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAgICAgKio2NioqICAgICAgfCAgICAgKio2MSoqICAgICAgfCAgICAgICoqMTIqKiAgICAgICB8ICoqMTYqKiB8IE5vICB8CiAgICogfCA1NyBfKGdyaWQtZ2FwKV8gfCA1MiBfKGdyaWQtZ2FwKV8gfCAxMC4xIF8oZ3JpZC1nYXApXyB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiAtLS0KICAgKgogICAqIF9TdXBwb3J0ZWQgaW4gTXVsdGktY29sdW1uIExheW91dF8KICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjYqKiB8ICoqNjEqKiAgfCAgIE5vICAgfCAqKjE2KiogfCBObyAgfAogICAqCiAgICogLS0tCiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9nYXAKICAgKi8KICBnYXA/OiBQcm9wZXJ0eS5HYXA8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGdyaWRgKiogQ1NTIHByb3BlcnR5IGlzIGEgc2hvcnRoYW5kIHByb3BlcnR5IHRoYXQgc2V0cyBhbGwgb2YgdGhlIGV4cGxpY2l0IGFuZCBpbXBsaWNpdCBncmlkIHByb3BlcnRpZXMgaW4gYSBzaW5nbGUgZGVjbGFyYXRpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdncmlkLXRlbXBsYXRlJz4gfCA8J2dyaWQtdGVtcGxhdGUtcm93cyc+IC8gWyBhdXRvLWZsb3cgJiYgZGVuc2U/IF0gPCdncmlkLWF1dG8tY29sdW1ucyc+PyB8IFsgYXV0by1mbG93ICYmIGRlbnNlPyBdIDwnZ3JpZC1hdXRvLXJvd3MnPj8gLyA8J2dyaWQtdGVtcGxhdGUtY29sdW1ucyc+YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTcqKiB8ICoqNTIqKiAgfCAqKjEwLjEqKiB8ICoqMTYqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ncmlkCiAgICovCiAgZ3JpZD86IFByb3BlcnR5LkdyaWQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGdyaWQtYXJlYWAqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IHNwZWNpZmllcyBhIGdyaWQgaXRlbeKAmXMgc2l6ZSBhbmQgbG9jYXRpb24gd2l0aGluIGEgZ3JpZCBieSBjb250cmlidXRpbmcgYSBsaW5lLCBhIHNwYW4sIG9yIG5vdGhpbmcgKGF1dG9tYXRpYykgdG8gaXRzIGdyaWQgcGxhY2VtZW50LCB0aGVyZWJ5IHNwZWNpZnlpbmcgdGhlIGVkZ2VzIG9mIGl0cyBncmlkIGFyZWEuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGdyaWQtbGluZT4gWyAvIDxncmlkLWxpbmU+IF17MCwzfWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjUyKiogIHwgKioxMC4xKiogfCAqKjE2KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZ3JpZC1hcmVhCiAgICovCiAgZ3JpZEFyZWE/OiBQcm9wZXJ0eS5HcmlkQXJlYSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZ3JpZC1jb2x1bW5gKiogQ1NTIHNob3J0aGFuZCBwcm9wZXJ0eSBzcGVjaWZpZXMgYSBncmlkIGl0ZW0ncyBzaXplIGFuZCBsb2NhdGlvbiB3aXRoaW4gYSBncmlkIGNvbHVtbiBieSBjb250cmlidXRpbmcgYSBsaW5lLCBhIHNwYW4sIG9yIG5vdGhpbmcgKGF1dG9tYXRpYykgdG8gaXRzIGdyaWQgcGxhY2VtZW50LCB0aGVyZWJ5IHNwZWNpZnlpbmcgdGhlIGlubGluZS1zdGFydCBhbmQgaW5saW5lLWVuZCBlZGdlIG9mIGl0cyBncmlkIGFyZWEuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGdyaWQtbGluZT4gWyAvIDxncmlkLWxpbmU+IF0/YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTcqKiB8ICoqNTIqKiAgfCAqKjEwLjEqKiB8ICoqMTYqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ncmlkLWNvbHVtbgogICAqLwogIGdyaWRDb2x1bW4/OiBQcm9wZXJ0eS5HcmlkQ29sdW1uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBncmlkLXJvd2AqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IHNwZWNpZmllcyBhIGdyaWQgaXRlbeKAmXMgc2l6ZSBhbmQgbG9jYXRpb24gd2l0aGluIHRoZSBncmlkIHJvdyBieSBjb250cmlidXRpbmcgYSBsaW5lLCBhIHNwYW4sIG9yIG5vdGhpbmcgKGF1dG9tYXRpYykgdG8gaXRzIGdyaWQgcGxhY2VtZW50LCB0aGVyZWJ5IHNwZWNpZnlpbmcgdGhlIGlubGluZS1zdGFydCBhbmQgaW5saW5lLWVuZCBlZGdlIG9mIGl0cyBncmlkIGFyZWEuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGdyaWQtbGluZT4gWyAvIDxncmlkLWxpbmU+IF0/YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTcqKiB8ICoqNTIqKiAgfCAqKjEwLjEqKiB8ICoqMTYqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ncmlkLXJvdwogICAqLwogIGdyaWRSb3c/OiBQcm9wZXJ0eS5HcmlkUm93IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBncmlkLXRlbXBsYXRlYCoqIENTUyBwcm9wZXJ0eSBpcyBhIHNob3J0aGFuZCBwcm9wZXJ0eSBmb3IgZGVmaW5pbmcgZ3JpZCBjb2x1bW5zLCByb3dzLCBhbmQgYXJlYXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IFsgPCdncmlkLXRlbXBsYXRlLXJvd3MnPiAvIDwnZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zJz4gXSB8IFsgPGxpbmUtbmFtZXM+PyA8c3RyaW5nPiA8dHJhY2stc2l6ZT4/IDxsaW5lLW5hbWVzPj8gXSsgWyAvIDxleHBsaWNpdC10cmFjay1saXN0PiBdP2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjUyKiogIHwgKioxMC4xKiogfCAqKjE2KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZ3JpZC10ZW1wbGF0ZQogICAqLwogIGdyaWRUZW1wbGF0ZT86IFByb3BlcnR5LkdyaWRUZW1wbGF0ZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxpbnRlZ2VyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICBsaW5lQ2xhbXA/OiBQcm9wZXJ0eS5MaW5lQ2xhbXAgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGxpc3Qtc3R5bGVgKiogQ1NTIHNob3J0aGFuZCBwcm9wZXJ0eSBhbGxvd3MgeW91IHNldCBhbGwgdGhlIGxpc3Qgc3R5bGUgcHJvcGVydGllcyBhdCBvbmNlLgogICAqCiAgICogKipTeW50YXgqKjogYDwnbGlzdC1zdHlsZS10eXBlJz4gfHwgPCdsaXN0LXN0eWxlLXBvc2l0aW9uJz4gfHwgPCdsaXN0LXN0eWxlLWltYWdlJz5gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2xpc3Qtc3R5bGUKICAgKi8KICBsaXN0U3R5bGU/OiBQcm9wZXJ0eS5MaXN0U3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hcmdpbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbWFyZ2luIGFyZWEgb24gYWxsIGZvdXIgc2lkZXMgb2YgYW4gZWxlbWVudC4gSXQgaXMgYSBzaG9ydGhhbmQgZm9yIGBtYXJnaW4tdG9wYCwgYG1hcmdpbi1yaWdodGAsIGBtYXJnaW4tYm90dG9tYCwgYW5kIGBtYXJnaW4tbGVmdGAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8bGVuZ3RoPiB8IDxwZXJjZW50YWdlPiB8IGF1dG8gXXsxLDR9YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjMqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXJnaW4KICAgKi8KICBtYXJnaW4/OiBQcm9wZXJ0eS5NYXJnaW48VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hc2tgKiogQ1NTIHNob3J0aGFuZCBwcm9wZXJ0eSBoaWRlcyBhbiBlbGVtZW50IChwYXJ0aWFsbHkgb3IgZnVsbHkpIGJ5IG1hc2tpbmcgb3IgY2xpcHBpbmcgdGhlIGltYWdlIGF0IHNwZWNpZmljIHBvaW50cy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bWFzay1sYXllcj4jYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8IEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLTogfCA6LTogfAogICAqIHwgKioxKiogIHwgICoqMioqICB8ICoqMy4xKiogfCAxMi03OSB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXNrCiAgICovCiAgbWFzaz86IFByb3BlcnR5Lk1hc2s8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hc2stYm9yZGVyYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgbGV0cyB5b3UgY3JlYXRlIGEgbWFzayBhbG9uZyB0aGUgZWRnZSBvZiBhbiBlbGVtZW50J3MgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYDwnbWFzay1ib3JkZXItc291cmNlJz4gfHwgPCdtYXNrLWJvcmRlci1zbGljZSc+IFsgLyA8J21hc2stYm9yZGVyLXdpZHRoJz4/IFsgLyA8J21hc2stYm9yZGVyLW91dHNldCc+IF0/IF0/IHx8IDwnbWFzay1ib3JkZXItcmVwZWF0Jz4gfHwgPCdtYXNrLWJvcmRlci1tb2RlJz5gCiAgICoKICAgKiB8ICAgICAgICAgICAgICBDaHJvbWUgICAgICAgICAgICAgIHwgRmlyZWZveCB8ICAgICAgICAgICAgICAgU2FmYXJpICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgIEVkZ2UgICAgICAgICAgICAgICAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotOiB8CiAgICogfCAqKjEqKiBfKC13ZWJraXQtbWFzay1ib3gtaW1hZ2UpXyB8ICAgTm8gICAgfCAqKjMuMSoqIF8oLXdlYmtpdC1tYXNrLWJveC1pbWFnZSlfIHwgKio3OSoqIF8oLXdlYmtpdC1tYXNrLWJveC1pbWFnZSlfIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hc2stYm9yZGVyCiAgICovCiAgbWFza0JvcmRlcj86IFByb3BlcnR5Lk1hc2tCb3JkZXIgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG9mZnNldGAqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IHNldHMgYWxsIHRoZSBwcm9wZXJ0aWVzIHJlcXVpcmVkIGZvciBhbmltYXRpbmcgYW4gZWxlbWVudCBhbG9uZyBhIGRlZmluZWQgcGF0aC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDwnb2Zmc2V0LXBvc2l0aW9uJz4/IFsgPCdvZmZzZXQtcGF0aCc+IFsgPCdvZmZzZXQtZGlzdGFuY2UnPiB8fCA8J29mZnNldC1yb3RhdGUnPiBdPyBdPyBdISBbIC8gPCdvZmZzZXQtYW5jaG9yJz4gXT9gCiAgICoKICAgKiB8ICAgIENocm9tZSAgICAgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICAgICoqNTUqKiAgICAgfCAqKjcyKiogIHwgICBObyAgIHwgKio3OSoqIHwgTm8gIHwKICAgKiB8IDQ2IF8obW90aW9uKV8gfCAgICAgICAgIHwgICAgICAgIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL29mZnNldAogICAqLwogIG1vdGlvbj86IFByb3BlcnR5Lk9mZnNldDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb2Zmc2V0YCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgc2V0cyBhbGwgdGhlIHByb3BlcnRpZXMgcmVxdWlyZWQgZm9yIGFuaW1hdGluZyBhbiBlbGVtZW50IGFsb25nIGEgZGVmaW5lZCBwYXRoLgogICAqCiAgICogKipTeW50YXgqKjogYFsgPCdvZmZzZXQtcG9zaXRpb24nPj8gWyA8J29mZnNldC1wYXRoJz4gWyA8J29mZnNldC1kaXN0YW5jZSc+IHx8IDwnb2Zmc2V0LXJvdGF0ZSc+IF0/IF0/IF0hIFsgLyA8J29mZnNldC1hbmNob3InPiBdP2AKICAgKgogICAqIHwgICAgQ2hyb21lICAgICB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgICAgKio1NSoqICAgICB8ICoqNzIqKiAgfCAgIE5vICAgfCAqKjc5KiogfCBObyAgfAogICAqIHwgNDYgXyhtb3Rpb24pXyB8ICAgICAgICAgfCAgICAgICAgfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb2Zmc2V0CiAgICovCiAgb2Zmc2V0PzogUHJvcGVydHkuT2Zmc2V0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvdXRsaW5lYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgc2V0IGFsbCB0aGUgb3V0bGluZSBwcm9wZXJ0aWVzIGluIGEgc2luZ2xlIGRlY2xhcmF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYFsgPCdvdXRsaW5lLWNvbG9yJz4gfHwgPCdvdXRsaW5lLXN0eWxlJz4gfHwgPCdvdXRsaW5lLXdpZHRoJz4gXWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICoqMS41KiogfCAqKjEuMioqIHwgKioxMioqIHwgKio4KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb3V0bGluZQogICAqLwogIG91dGxpbmU/OiBQcm9wZXJ0eS5PdXRsaW5lPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvdmVyZmxvd2AqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IHNldHMgdGhlIGRlc2lyZWQgYmVoYXZpb3IgZm9yIGFuIGVsZW1lbnQncyBvdmVyZmxvdyDigJQgaS5lLiB3aGVuIGFuIGVsZW1lbnQncyBjb250ZW50IGlzIHRvbyBiaWcgdG8gZml0IGluIGl0cyBibG9jayBmb3JtYXR0aW5nIGNvbnRleHQg4oCUIGluIGJvdGggZGlyZWN0aW9ucy4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIHZpc2libGUgfCBoaWRkZW4gfCBjbGlwIHwgc2Nyb2xsIHwgYXV0byBdezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHZpc2libGVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL292ZXJmbG93CiAgICovCiAgb3ZlcmZsb3c/OiBQcm9wZXJ0eS5PdmVyZmxvdyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3ZlcnNjcm9sbC1iZWhhdmlvcmAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGF0IGEgYnJvd3NlciBkb2VzIHdoZW4gcmVhY2hpbmcgdGhlIGJvdW5kYXJ5IG9mIGEgc2Nyb2xsaW5nIGFyZWEuIEl0J3MgYSBzaG9ydGhhbmQgZm9yIGBvdmVyc2Nyb2xsLWJlaGF2aW9yLXhgIGFuZCBgb3ZlcnNjcm9sbC1iZWhhdmlvci15YC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIGNvbnRhaW4gfCBub25lIHwgYXV0byBdezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjYzKiogfCAqKjU5KiogIHwgICBObyAgIHwgKioxOCoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL292ZXJzY3JvbGwtYmVoYXZpb3IKICAgKi8KICBvdmVyc2Nyb2xsQmVoYXZpb3I/OiBQcm9wZXJ0eS5PdmVyc2Nyb2xsQmVoYXZpb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHBhZGRpbmdgKiogQ1NTIHNob3J0aGFuZCBwcm9wZXJ0eSBzZXRzIHRoZSBwYWRkaW5nIGFyZWEgb24gYWxsIGZvdXIgc2lkZXMgb2YgYW4gZWxlbWVudCBhdCBvbmNlLgogICAqCiAgICogKipTeW50YXgqKjogYFsgPGxlbmd0aD4gfCA8cGVyY2VudGFnZT4gXXsxLDR9YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9wYWRkaW5nCiAgICovCiAgcGFkZGluZz86IFByb3BlcnR5LlBhZGRpbmc8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIENTUyAqKmBwbGFjZS1pdGVtc2AqKiBzaG9ydGhhbmQgcHJvcGVydHkgYWxsb3dzIHlvdSB0byBhbGlnbiBpdGVtcyBhbG9uZyBib3RoIHRoZSBibG9jayBhbmQgaW5saW5lIGRpcmVjdGlvbnMgYXQgb25jZSAoaS5lLiB0aGUgYGFsaWduLWl0ZW1zYCBhbmQgYGp1c3RpZnktaXRlbXNgIHByb3BlcnRpZXMpIGluIGEgcmVsZXZhbnQgbGF5b3V0IHN5c3RlbSBzdWNoIGFzIEdyaWQgb3IgRmxleGJveC4gSWYgdGhlIHNlY29uZCB2YWx1ZSBpcyBub3Qgc2V0LCB0aGUgZmlyc3QgdmFsdWUgaXMgYWxzbyB1c2VkIGZvciBpdC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2FsaWduLWl0ZW1zJz4gPCdqdXN0aWZ5LWl0ZW1zJz4/YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio1OSoqIHwgKio0NSoqICB8ICoqMTEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9wbGFjZS1pdGVtcwogICAqLwogIHBsYWNlSXRlbXM/OiBQcm9wZXJ0eS5QbGFjZUl0ZW1zIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwbGFjZS1zZWxmYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgYWxsb3dzIHlvdSB0byBhbGlnbiBhbiBpbmRpdmlkdWFsIGl0ZW0gaW4gYm90aCB0aGUgYmxvY2sgYW5kIGlubGluZSBkaXJlY3Rpb25zIGF0IG9uY2UgKGkuZS4gdGhlIGBhbGlnbi1zZWxmYCBhbmQgYGp1c3RpZnktc2VsZmAgcHJvcGVydGllcykgaW4gYSByZWxldmFudCBsYXlvdXQgc3lzdGVtIHN1Y2ggYXMgR3JpZCBvciBGbGV4Ym94LiBJZiB0aGUgc2Vjb25kIHZhbHVlIGlzIG5vdCBwcmVzZW50LCB0aGUgZmlyc3QgdmFsdWUgaXMgYWxzbyB1c2VkIGZvciBpdC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2FsaWduLXNlbGYnPiA8J2p1c3RpZnktc2VsZic+P2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTkqKiB8ICoqNDUqKiAgfCAqKjExKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvcGxhY2Utc2VsZgogICAqLwogIHBsYWNlU2VsZj86IFByb3BlcnR5LlBsYWNlU2VsZiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1kZWNvcmF0aW9uYCoqIHNob3J0aGFuZCBDU1MgcHJvcGVydHkgc2V0cyB0aGUgYXBwZWFyYW5jZSBvZiBkZWNvcmF0aXZlIGxpbmVzIG9uIHRleHQuIEl0IGlzIGEgc2hvcnRoYW5kIGZvciBgdGV4dC1kZWNvcmF0aW9uLWxpbmVgLCBgdGV4dC1kZWNvcmF0aW9uLWNvbG9yYCwgYHRleHQtZGVjb3JhdGlvbi1zdHlsZWAsIGFuZCB0aGUgbmV3ZXIgYHRleHQtZGVjb3JhdGlvbi10aGlja25lc3NgIHByb3BlcnR5LgogICAqCiAgICogKipTeW50YXgqKjogYDwndGV4dC1kZWNvcmF0aW9uLWxpbmUnPiB8fCA8J3RleHQtZGVjb3JhdGlvbi1zdHlsZSc+IHx8IDwndGV4dC1kZWNvcmF0aW9uLWNvbG9yJz4gfHwgPCd0ZXh0LWRlY29yYXRpb24tdGhpY2tuZXNzJz5gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqMyoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtZGVjb3JhdGlvbgogICAqLwogIHRleHREZWNvcmF0aW9uPzogUHJvcGVydHkuVGV4dERlY29yYXRpb248VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtZW1waGFzaXNgKiogQ1NTIHByb3BlcnR5IGFwcGxpZXMgZW1waGFzaXMgbWFya3MgdG8gdGV4dCAoZXhjZXB0IHNwYWNlcyBhbmQgY29udHJvbCBjaGFyYWN0ZXJzKS4gSXQgaXMgYSBzaG9ydGhhbmQgZm9yIGB0ZXh0LWVtcGhhc2lzLXN0eWxlYCBhbmQgYHRleHQtZW1waGFzaXMtY29sb3JgLgogICAqCiAgICogKipTeW50YXgqKjogYDwndGV4dC1lbXBoYXNpcy1zdHlsZSc+IHx8IDwndGV4dC1lbXBoYXNpcy1jb2xvcic+YAogICAqCiAgICogfCAgICBDaHJvbWUgICAgfCBGaXJlZm94IHwgU2FmYXJpIHwgICAgIEVkZ2UgICAgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLS0tLS0tLTogfCA6LTogfAogICAqIHwgKioyNSoqIF8teC1fIHwgKio0NioqICB8ICoqNyoqICB8ICoqNzkqKiBfLXgtXyB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90ZXh0LWVtcGhhc2lzCiAgICovCiAgdGV4dEVtcGhhc2lzPzogUHJvcGVydHkuVGV4dEVtcGhhc2lzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2l0aW9uYCoqIENTUyBwcm9wZXJ0eSBpcyBhIHNob3J0aGFuZCBwcm9wZXJ0eSBmb3IgYHRyYW5zaXRpb24tcHJvcGVydHlgLCBgdHJhbnNpdGlvbi1kdXJhdGlvbmAsIGB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbmAsIGFuZCBgdHJhbnNpdGlvbi1kZWxheWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHNpbmdsZS10cmFuc2l0aW9uPiNgCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgIFNhZmFyaSAgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqMjYqKiAgfCAqKjE2KiogIHwgICAqKjkqKiAgIHwgKioxMioqIHwgKioxMCoqIHwKICAgKiB8IDEgXy14LV8gfCA0IF8teC1fIHwgMy4xIF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RyYW5zaXRpb24KICAgKi8KICB0cmFuc2l0aW9uPzogUHJvcGVydHkuVHJhbnNpdGlvbjxUVGltZT4gfCB1bmRlZmluZWQ7Cn0KCmV4cG9ydCBpbnRlcmZhY2UgU3RhbmRhcmRQcm9wZXJ0aWVzPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMCwgVFRpbWUgPSBzdHJpbmcgJiB7fT4KICBleHRlbmRzIFN0YW5kYXJkTG9uZ2hhbmRQcm9wZXJ0aWVzPFRMZW5ndGgsIFRUaW1lPiwKICAgIFN0YW5kYXJkU2hvcnRoYW5kUHJvcGVydGllczxUTGVuZ3RoLCBUVGltZT4ge30KCmV4cG9ydCBpbnRlcmZhY2UgVmVuZG9yTG9uZ2hhbmRQcm9wZXJ0aWVzPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMCwgVFRpbWUgPSBzdHJpbmcgJiB7fT4gewogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tZGVsYXlgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgYW1vdW50IG9mIHRpbWUgdG8gd2FpdCBmcm9tIGFwcGx5aW5nIHRoZSBhbmltYXRpb24gdG8gYW4gZWxlbWVudCBiZWZvcmUgYmVnaW5uaW5nIHRvIHBlcmZvcm0gdGhlIGFuaW1hdGlvbi4gVGhlIGFuaW1hdGlvbiBjYW4gc3RhcnQgbGF0ZXIsIGltbWVkaWF0ZWx5IGZyb20gaXRzIGJlZ2lubmluZywgb3IgaW1tZWRpYXRlbHkgYW5kIHBhcnR3YXkgdGhyb3VnaCB0aGUgYW5pbWF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYDx0aW1lPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBzYAogICAqLwogIE1vekFuaW1hdGlvbkRlbGF5PzogUHJvcGVydHkuQW5pbWF0aW9uRGVsYXk8VFRpbWU+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tZGlyZWN0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgYW4gYW5pbWF0aW9uIHNob3VsZCBwbGF5IGZvcndhcmQsIGJhY2t3YXJkLCBvciBhbHRlcm5hdGUgYmFjayBhbmQgZm9ydGggYmV0d2VlbiBwbGF5aW5nIHRoZSBzZXF1ZW5jZSBmb3J3YXJkIGFuZCBiYWNrd2FyZC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2luZ2xlLWFuaW1hdGlvbi1kaXJlY3Rpb24+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqLwogIE1vekFuaW1hdGlvbkRpcmVjdGlvbj86IFByb3BlcnR5LkFuaW1hdGlvbkRpcmVjdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYW5pbWF0aW9uLWR1cmF0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBsZW5ndGggb2YgdGltZSB0aGF0IGFuIGFuaW1hdGlvbiB0YWtlcyB0byBjb21wbGV0ZSBvbmUgY3ljbGUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHRpbWU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMHNgCiAgICovCiAgTW96QW5pbWF0aW9uRHVyYXRpb24/OiBQcm9wZXJ0eS5BbmltYXRpb25EdXJhdGlvbjxUVGltZT4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbi1maWxsLW1vZGVgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IGEgQ1NTIGFuaW1hdGlvbiBhcHBsaWVzIHN0eWxlcyB0byBpdHMgdGFyZ2V0IGJlZm9yZSBhbmQgYWZ0ZXIgaXRzIGV4ZWN1dGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2luZ2xlLWFuaW1hdGlvbi1maWxsLW1vZGU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICBNb3pBbmltYXRpb25GaWxsTW9kZT86IFByb3BlcnR5LkFuaW1hdGlvbkZpbGxNb2RlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBudW1iZXIgb2YgdGltZXMgYW4gYW5pbWF0aW9uIHNlcXVlbmNlIHNob3VsZCBiZSBwbGF5ZWQgYmVmb3JlIHN0b3BwaW5nLgogICAqCiAgICogKipTeW50YXgqKjogYDxzaW5nbGUtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudD4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAxYAogICAqLwogIE1vekFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50PzogUHJvcGVydHkuQW5pbWF0aW9uSXRlcmF0aW9uQ291bnQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbi1uYW1lYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIG5hbWVzIG9mIG9uZSBvciBtb3JlIGBAa2V5ZnJhbWVzYCBhdC1ydWxlcyBkZXNjcmliaW5nIHRoZSBhbmltYXRpb24gb3IgYW5pbWF0aW9ucyB0byBhcHBseSB0byB0aGUgZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIG5vbmUgfCA8a2V5ZnJhbWVzLW5hbWU+IF0jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIE1vekFuaW1hdGlvbk5hbWU/OiBQcm9wZXJ0eS5BbmltYXRpb25OYW1lIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tcGxheS1zdGF0ZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIGFuIGFuaW1hdGlvbiBpcyBydW5uaW5nIG9yIHBhdXNlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2luZ2xlLWFuaW1hdGlvbi1wbGF5LXN0YXRlPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHJ1bm5pbmdgCiAgICovCiAgTW96QW5pbWF0aW9uUGxheVN0YXRlPzogUHJvcGVydHkuQW5pbWF0aW9uUGxheVN0YXRlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBhbiBhbmltYXRpb24gcHJvZ3Jlc3NlcyB0aHJvdWdoIHRoZSBkdXJhdGlvbiBvZiBlYWNoIGN5Y2xlLgogICAqCiAgICogKipTeW50YXgqKjogYDxlYXNpbmctZnVuY3Rpb24+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgZWFzZWAKICAgKi8KICBNb3pBbmltYXRpb25UaW1pbmdGdW5jdGlvbj86IFByb3BlcnR5LkFuaW1hdGlvblRpbWluZ0Z1bmN0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgKiphcHBlYXJhbmNlKipgIENTUyBwcm9wZXJ0eSBpcyB1c2VkIHRvIGRpc3BsYXkgYW4gZWxlbWVudCB1c2luZyBwbGF0Zm9ybS1uYXRpdmUgc3R5bGluZywgYmFzZWQgb24gdGhlIG9wZXJhdGluZyBzeXN0ZW0ncyB0aGVtZS4gVGhlICoqYC1tb3otYXBwZWFyYW5jZWAqKiBhbmQgKipgLXdlYmtpdC1hcHBlYXJhbmNlYCoqIHByb3BlcnRpZXMgYXJlIG5vbi1zdGFuZGFyZCB2ZXJzaW9ucyBvZiB0aGlzIHByb3BlcnR5LCB1c2VkIChyZXNwZWN0aXZlbHkpIGJ5IEdlY2tvIChGaXJlZm94KSBhbmQgYnkgV2ViS2l0LWJhc2VkIChlLmcuLCBTYWZhcmkpIGFuZCBCbGluay1iYXNlZCAoZS5nLiwgQ2hyb21lLCBPcGVyYSkgYnJvd3NlcnMgdG8gYWNoaWV2ZSB0aGUgc2FtZSB0aGluZy4gTm90ZSB0aGF0IEZpcmVmb3ggYW5kIEVkZ2UgYWxzbyBzdXBwb3J0ICoqYC13ZWJraXQtYXBwZWFyYW5jZWAqKiwgZm9yIGNvbXBhdGliaWxpdHkgcmVhc29ucy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgYnV0dG9uIHwgYnV0dG9uLWFycm93LWRvd24gfCBidXR0b24tYXJyb3ctbmV4dCB8IGJ1dHRvbi1hcnJvdy1wcmV2aW91cyB8IGJ1dHRvbi1hcnJvdy11cCB8IGJ1dHRvbi1iZXZlbCB8IGJ1dHRvbi1mb2N1cyB8IGNhcmV0IHwgY2hlY2tib3ggfCBjaGVja2JveC1jb250YWluZXIgfCBjaGVja2JveC1sYWJlbCB8IGNoZWNrbWVudWl0ZW0gfCBkdWFsYnV0dG9uIHwgZ3JvdXBib3ggfCBsaXN0Ym94IHwgbGlzdGl0ZW0gfCBtZW51YXJyb3cgfCBtZW51YmFyIHwgbWVudWNoZWNrYm94IHwgbWVudWltYWdlIHwgbWVudWl0ZW0gfCBtZW51aXRlbXRleHQgfCBtZW51bGlzdCB8IG1lbnVsaXN0LWJ1dHRvbiB8IG1lbnVsaXN0LXRleHQgfCBtZW51bGlzdC10ZXh0ZmllbGQgfCBtZW51cG9wdXAgfCBtZW51cmFkaW8gfCBtZW51c2VwYXJhdG9yIHwgbWV0ZXJiYXIgfCBtZXRlcmNodW5rIHwgcHJvZ3Jlc3NiYXIgfCBwcm9ncmVzc2Jhci12ZXJ0aWNhbCB8IHByb2dyZXNzY2h1bmsgfCBwcm9ncmVzc2NodW5rLXZlcnRpY2FsIHwgcmFkaW8gfCByYWRpby1jb250YWluZXIgfCByYWRpby1sYWJlbCB8IHJhZGlvbWVudWl0ZW0gfCByYW5nZSB8IHJhbmdlLXRodW1iIHwgcmVzaXplciB8IHJlc2l6ZXJwYW5lbCB8IHNjYWxlLWhvcml6b250YWwgfCBzY2FsZXRodW1iZW5kIHwgc2NhbGV0aHVtYi1ob3Jpem9udGFsIHwgc2NhbGV0aHVtYnN0YXJ0IHwgc2NhbGV0aHVtYnRpY2sgfCBzY2FsZXRodW1iLXZlcnRpY2FsIHwgc2NhbGUtdmVydGljYWwgfCBzY3JvbGxiYXJidXR0b24tZG93biB8IHNjcm9sbGJhcmJ1dHRvbi1sZWZ0IHwgc2Nyb2xsYmFyYnV0dG9uLXJpZ2h0IHwgc2Nyb2xsYmFyYnV0dG9uLXVwIHwgc2Nyb2xsYmFydGh1bWItaG9yaXpvbnRhbCB8IHNjcm9sbGJhcnRodW1iLXZlcnRpY2FsIHwgc2Nyb2xsYmFydHJhY2staG9yaXpvbnRhbCB8IHNjcm9sbGJhcnRyYWNrLXZlcnRpY2FsIHwgc2VhcmNoZmllbGQgfCBzZXBhcmF0b3IgfCBzaGVldCB8IHNwaW5uZXIgfCBzcGlubmVyLWRvd25idXR0b24gfCBzcGlubmVyLXRleHRmaWVsZCB8IHNwaW5uZXItdXBidXR0b24gfCBzcGxpdHRlciB8IHN0YXR1c2JhciB8IHN0YXR1c2JhcnBhbmVsIHwgdGFiIHwgdGFicGFuZWwgfCB0YWJwYW5lbHMgfCB0YWItc2Nyb2xsLWFycm93LWJhY2sgfCB0YWItc2Nyb2xsLWFycm93LWZvcndhcmQgfCB0ZXh0ZmllbGQgfCB0ZXh0ZmllbGQtbXVsdGlsaW5lIHwgdG9vbGJhciB8IHRvb2xiYXJidXR0b24gfCB0b29sYmFyYnV0dG9uLWRyb3Bkb3duIHwgdG9vbGJhcmdyaXBwZXIgfCB0b29sYm94IHwgdG9vbHRpcCB8IHRyZWVoZWFkZXIgfCB0cmVlaGVhZGVyY2VsbCB8IHRyZWVoZWFkZXJzb3J0YXJyb3cgfCB0cmVlaXRlbSB8IHRyZWVsaW5lIHwgdHJlZXR3aXN0eSB8IHRyZWV0d2lzdHlvcGVuIHwgdHJlZXZpZXcgfCAtbW96LW1hYy11bmlmaWVkLXRvb2xiYXIgfCAtbW96LXdpbi1ib3JkZXJsZXNzLWdsYXNzIHwgLW1vei13aW4tYnJvd3NlcnRhYmJhci10b29sYm94IHwgLW1vei13aW4tY29tbXVuaWNhdGlvbnN0ZXh0IHwgLW1vei13aW4tY29tbXVuaWNhdGlvbnMtdG9vbGJveCB8IC1tb3otd2luLWV4Y2x1ZGUtZ2xhc3MgfCAtbW96LXdpbi1nbGFzcyB8IC1tb3otd2luLW1lZGlhdGV4dCB8IC1tb3otd2luLW1lZGlhLXRvb2xib3ggfCAtbW96LXdpbmRvdy1idXR0b24tYm94IHwgLW1vei13aW5kb3ctYnV0dG9uLWJveC1tYXhpbWl6ZWQgfCAtbW96LXdpbmRvdy1idXR0b24tY2xvc2UgfCAtbW96LXdpbmRvdy1idXR0b24tbWF4aW1pemUgfCAtbW96LXdpbmRvdy1idXR0b24tbWluaW1pemUgfCAtbW96LXdpbmRvdy1idXR0b24tcmVzdG9yZSB8IC1tb3otd2luZG93LWZyYW1lLWJvdHRvbSB8IC1tb3otd2luZG93LWZyYW1lLWxlZnQgfCAtbW96LXdpbmRvdy1mcmFtZS1yaWdodCB8IC1tb3otd2luZG93LXRpdGxlYmFyIHwgLW1vei13aW5kb3ctdGl0bGViYXItbWF4aW1pemVkYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYCAoYnV0IHRoaXMgdmFsdWUgaXMgb3ZlcnJpZGRlbiBpbiB0aGUgdXNlciBhZ2VudCBDU1MpCiAgICovCiAgTW96QXBwZWFyYW5jZT86IFByb3BlcnR5Lk1vekFwcGVhcmFuY2UgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJhY2tmYWNlLXZpc2liaWxpdHlgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hldGhlciB0aGUgYmFjayBmYWNlIG9mIGFuIGVsZW1lbnQgaXMgdmlzaWJsZSB3aGVuIHR1cm5lZCB0b3dhcmRzIHRoZSB1c2VyLgogICAqCiAgICogKipTeW50YXgqKjogYHZpc2libGUgfCBoaWRkZW5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHZpc2libGVgCiAgICovCiAgTW96QmFja2ZhY2VWaXNpYmlsaXR5PzogUHJvcGVydHkuQmFja2ZhY2VWaXNpYmlsaXR5IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIEluIE1vemlsbGEgYXBwbGljYXRpb25zIGxpa2UgRmlyZWZveCwgdGhlICoqYC1tb3otYm9yZGVyLWJvdHRvbS1jb2xvcnNgKiogQ1NTIHByb3BlcnR5IHNldHMgYSBsaXN0IG9mIGNvbG9ycyBmb3IgdGhlIGJvdHRvbSBib3JkZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGNvbG9yPisgfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIE1vekJvcmRlckJvdHRvbUNvbG9ycz86IFByb3BlcnR5Lk1vekJvcmRlckJvdHRvbUNvbG9ycyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWlubGluZS1lbmQtY29sb3JgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGNvbG9yIG9mIHRoZSBsb2dpY2FsIGlubGluZS1lbmQgYm9yZGVyIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBib3JkZXIgY29sb3IgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgYm9yZGVyLXRvcC1jb2xvcmAsIGBib3JkZXItcmlnaHQtY29sb3JgLCBgYm9yZGVyLWJvdHRvbS1jb2xvcmAsIG9yIGBib3JkZXItbGVmdC1jb2xvcmAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXRvcC1jb2xvcic+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjdXJyZW50Y29sb3JgCiAgICovCiAgTW96Qm9yZGVyRW5kQ29sb3I/OiBQcm9wZXJ0eS5Cb3JkZXJJbmxpbmVFbmRDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWlubGluZS1lbmQtc3R5bGVgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIHN0eWxlIG9mIHRoZSBsb2dpY2FsIGlubGluZSBlbmQgYm9yZGVyIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBib3JkZXIgc3R5bGUgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgYm9yZGVyLXRvcC1zdHlsZWAsIGBib3JkZXItcmlnaHQtc3R5bGVgLCBgYm9yZGVyLWJvdHRvbS1zdHlsZWAsIG9yIGBib3JkZXItbGVmdC1zdHlsZWAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXRvcC1zdHlsZSc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIE1vekJvcmRlckVuZFN0eWxlPzogUHJvcGVydHkuQm9yZGVySW5saW5lRW5kU3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbmxpbmUtZW5kLXdpZHRoYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSB3aWR0aCBvZiB0aGUgbG9naWNhbCBpbmxpbmUtZW5kIGJvcmRlciBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIHdpZHRoIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYGJvcmRlci10b3Atd2lkdGhgLCBgYm9yZGVyLXJpZ2h0LXdpZHRoYCwgYGJvcmRlci1ib3R0b20td2lkdGhgLCBvciBgYm9yZGVyLWxlZnQtd2lkdGhgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3Atd2lkdGgnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWVkaXVtYAogICAqLwogIE1vekJvcmRlckVuZFdpZHRoPzogUHJvcGVydHkuQm9yZGVySW5saW5lRW5kV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogSW4gTW96aWxsYSBhcHBsaWNhdGlvbnMgbGlrZSBGaXJlZm94LCB0aGUgKipgLW1vei1ib3JkZXItbGVmdC1jb2xvcnNgKiogQ1NTIHByb3BlcnR5IHNldHMgYSBsaXN0IG9mIGNvbG9ycyBmb3IgdGhlIGxlZnQgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj4rIHwgbm9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICBNb3pCb3JkZXJMZWZ0Q29sb3JzPzogUHJvcGVydHkuTW96Qm9yZGVyTGVmdENvbG9ycyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBJbiBNb3ppbGxhIGFwcGxpY2F0aW9ucyBsaWtlIEZpcmVmb3gsIHRoZSAqKmAtbW96LWJvcmRlci1yaWdodC1jb2xvcnNgKiogQ1NTIHByb3BlcnR5IHNldHMgYSBsaXN0IG9mIGNvbG9ycyBmb3IgdGhlIHJpZ2h0IGJvcmRlci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+KyB8IG5vbmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgTW96Qm9yZGVyUmlnaHRDb2xvcnM/OiBQcm9wZXJ0eS5Nb3pCb3JkZXJSaWdodENvbG9ycyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWlubGluZS1zdGFydC1jb2xvcmAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgY29sb3Igb2YgdGhlIGxvZ2ljYWwgaW5saW5lIHN0YXJ0IGJvcmRlciBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIGNvbG9yIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYGJvcmRlci10b3AtY29sb3JgLCBgYm9yZGVyLXJpZ2h0LWNvbG9yYCwgYGJvcmRlci1ib3R0b20tY29sb3JgLCBvciBgYm9yZGVyLWxlZnQtY29sb3JgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3AtY29sb3InPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY3VycmVudGNvbG9yYAogICAqLwogIE1vekJvcmRlclN0YXJ0Q29sb3I/OiBQcm9wZXJ0eS5Cb3JkZXJJbmxpbmVTdGFydENvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItaW5saW5lLXN0YXJ0LXN0eWxlYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBzdHlsZSBvZiB0aGUgbG9naWNhbCBpbmxpbmUgc3RhcnQgYm9yZGVyIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBib3JkZXIgc3R5bGUgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgYm9yZGVyLXRvcC1zdHlsZWAsIGBib3JkZXItcmlnaHQtc3R5bGVgLCBgYm9yZGVyLWJvdHRvbS1zdHlsZWAsIG9yIGBib3JkZXItbGVmdC1zdHlsZWAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXRvcC1zdHlsZSc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIE1vekJvcmRlclN0YXJ0U3R5bGU/OiBQcm9wZXJ0eS5Cb3JkZXJJbmxpbmVTdGFydFN0eWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIEluIE1vemlsbGEgYXBwbGljYXRpb25zIGxpa2UgRmlyZWZveCwgdGhlICoqYC1tb3otYm9yZGVyLXRvcC1jb2xvcnNgKiogQ1NTIHByb3BlcnR5IHNldHMgYSBsaXN0IG9mIGNvbG9ycyBmb3IgdGhlIHRvcCBib3JkZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGNvbG9yPisgfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIE1vekJvcmRlclRvcENvbG9ycz86IFByb3BlcnR5Lk1vekJvcmRlclRvcENvbG9ycyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LXNpemluZ2AqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgdGhlIHRvdGFsIHdpZHRoIGFuZCBoZWlnaHQgb2YgYW4gZWxlbWVudCBpcyBjYWxjdWxhdGVkLgogICAqCiAgICogKipTeW50YXgqKjogYGNvbnRlbnQtYm94IHwgYm9yZGVyLWJveGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY29udGVudC1ib3hgCiAgICovCiAgTW96Qm94U2l6aW5nPzogUHJvcGVydHkuQm94U2l6aW5nIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2x1bW4tY291bnRgKiogQ1NTIHByb3BlcnR5IGJyZWFrcyBhbiBlbGVtZW50J3MgY29udGVudCBpbnRvIHRoZSBzcGVjaWZpZWQgbnVtYmVyIG9mIGNvbHVtbnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGludGVnZXI+IHwgYXV0b2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICBNb3pDb2x1bW5Db3VudD86IFByb3BlcnR5LkNvbHVtbkNvdW50IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2x1bW4tZmlsbGAqKiBDU1MgcHJvcGVydHkgY29udHJvbHMgaG93IGFuIGVsZW1lbnQncyBjb250ZW50cyBhcmUgYmFsYW5jZWQgd2hlbiBicm9rZW4gaW50byBjb2x1bW5zLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBiYWxhbmNlIHwgYmFsYW5jZS1hbGxgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGJhbGFuY2VgCiAgICovCiAgTW96Q29sdW1uRmlsbD86IFByb3BlcnR5LkNvbHVtbkZpbGwgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi1nYXBgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHNpemUgb2YgdGhlIGdhcCAoZ3V0dGVyKSBiZXR3ZWVuIGFuIGVsZW1lbnQncyBjb2x1bW5zLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IDxsZW5ndGgtcGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKi8KICBNb3pDb2x1bW5HYXA/OiBQcm9wZXJ0eS5Db2x1bW5HYXA8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi1ydWxlLWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBjb2xvciBvZiB0aGUgbGluZSBkcmF3biBiZXR3ZWVuIGNvbHVtbnMgaW4gYSBtdWx0aS1jb2x1bW4gbGF5b3V0LgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGN1cnJlbnRjb2xvcmAKICAgKi8KICBNb3pDb2x1bW5SdWxlQ29sb3I/OiBQcm9wZXJ0eS5Db2x1bW5SdWxlQ29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi1ydWxlLXN0eWxlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBzdHlsZSBvZiB0aGUgbGluZSBkcmF3biBiZXR3ZWVuIGNvbHVtbnMgaW4gYSBtdWx0aS1jb2x1bW4gbGF5b3V0LgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXN0eWxlJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgTW96Q29sdW1uUnVsZVN0eWxlPzogUHJvcGVydHkuQ29sdW1uUnVsZVN0eWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2x1bW4tcnVsZS13aWR0aGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgd2lkdGggb2YgdGhlIGxpbmUgZHJhd24gYmV0d2VlbiBjb2x1bW5zIGluIGEgbXVsdGktY29sdW1uIGxheW91dC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci13aWR0aCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBtZWRpdW1gCiAgICovCiAgTW96Q29sdW1uUnVsZVdpZHRoPzogUHJvcGVydHkuQ29sdW1uUnVsZVdpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2x1bW4td2lkdGhgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGlkZWFsIGNvbHVtbiB3aWR0aCBpbiBhIG11bHRpLWNvbHVtbiBsYXlvdXQuIFRoZSBjb250YWluZXIgd2lsbCBoYXZlIGFzIG1hbnkgY29sdW1ucyBhcyBjYW4gZml0IHdpdGhvdXQgYW55IG9mIHRoZW0gaGF2aW5nIGEgd2lkdGggbGVzcyB0aGFuIHRoZSBgY29sdW1uLXdpZHRoYCB2YWx1ZS4gSWYgdGhlIHdpZHRoIG9mIHRoZSBjb250YWluZXIgaXMgbmFycm93ZXIgdGhhbiB0aGUgc3BlY2lmaWVkIHZhbHVlLCB0aGUgc2luZ2xlIGNvbHVtbidzIHdpZHRoIHdpbGwgYmUgc21hbGxlciB0aGFuIHRoZSBkZWNsYXJlZCBjb2x1bW4gd2lkdGguCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD4gfCBhdXRvYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqLwogIE1vekNvbHVtbldpZHRoPzogUHJvcGVydHkuQ29sdW1uV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKi1tb3otY29udGV4dC1wcm9wZXJ0aWVzKipgIHByb3BlcnR5IGNhbiBiZSB1c2VkIHdpdGhpbiBwcml2aWxlZ2VkIGNvbnRleHRzIGluIEZpcmVmb3ggdG8gc2hhcmUgdGhlIHZhbHVlcyBvZiBzcGVjaWZpZWQgcHJvcGVydGllcyBvZiB0aGUgZWxlbWVudCB3aXRoIGEgY2hpbGQgU1ZHIGltYWdlLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBbIGZpbGwgfCBmaWxsLW9wYWNpdHkgfCBzdHJva2UgfCBzdHJva2Utb3BhY2l0eSBdI2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICBNb3pDb250ZXh0UHJvcGVydGllcz86IFByb3BlcnR5Lk1vekNvbnRleHRQcm9wZXJ0aWVzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb250LWZlYXR1cmUtc2V0dGluZ3NgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIGFkdmFuY2VkIHR5cG9ncmFwaGljIGZlYXR1cmVzIGluIE9wZW5UeXBlIGZvbnRzLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IDxmZWF0dXJlLXRhZy12YWx1ZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICovCiAgTW96Rm9udEZlYXR1cmVTZXR0aW5ncz86IFByb3BlcnR5LkZvbnRGZWF0dXJlU2V0dGluZ3MgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQtbGFuZ3VhZ2Utb3ZlcnJpZGVgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIHRoZSB1c2Ugb2YgbGFuZ3VhZ2Utc3BlY2lmaWMgZ2x5cGhzIGluIGEgdHlwZWZhY2UuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgPHN0cmluZz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKi8KICBNb3pGb250TGFuZ3VhZ2VPdmVycmlkZT86IFByb3BlcnR5LkZvbnRMYW5ndWFnZU92ZXJyaWRlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBoeXBoZW5zYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgaG93IHdvcmRzIHNob3VsZCBiZSBoeXBoZW5hdGVkIHdoZW4gdGV4dCB3cmFwcyBhY3Jvc3MgbXVsdGlwbGUgbGluZXMuIEl0IGNhbiBwcmV2ZW50IGh5cGhlbmF0aW9uIGVudGlyZWx5LCBoeXBoZW5hdGUgYXQgbWFudWFsbHktc3BlY2lmaWVkIHBvaW50cyB3aXRoaW4gdGhlIHRleHQsIG9yIGxldCB0aGUgYnJvd3NlciBhdXRvbWF0aWNhbGx5IGluc2VydCBoeXBoZW5zIHdoZXJlIGFwcHJvcHJpYXRlLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBtYW51YWwgfCBhdXRvYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBtYW51YWxgCiAgICovCiAgTW96SHlwaGVucz86IFByb3BlcnR5Lkh5cGhlbnMgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogRm9yIGNlcnRhaW4gWFVMIGVsZW1lbnRzIGFuZCBwc2V1ZG8tZWxlbWVudHMgdGhhdCB1c2UgYW4gaW1hZ2UgZnJvbSB0aGUgYGxpc3Qtc3R5bGUtaW1hZ2VgIHByb3BlcnR5LCB0aGlzIHByb3BlcnR5IHNwZWNpZmllcyBhIHJlZ2lvbiBvZiB0aGUgaW1hZ2UgdGhhdCBpcyB1c2VkIGluIHBsYWNlIG9mIHRoZSB3aG9sZSBpbWFnZS4gVGhpcyBhbGxvd3MgZWxlbWVudHMgdG8gdXNlIGRpZmZlcmVudCBwaWVjZXMgb2YgdGhlIHNhbWUgaW1hZ2UgdG8gaW1wcm92ZSBwZXJmb3JtYW5jZS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2hhcGU+IHwgYXV0b2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICBNb3pJbWFnZVJlZ2lvbj86IFByb3BlcnR5Lk1vekltYWdlUmVnaW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXJnaW4taW5saW5lLWVuZGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBpbmxpbmUgZW5kIG1hcmdpbiBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgbWFyZ2luIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJbiBvdGhlciB3b3JkcywgaXQgY29ycmVzcG9uZHMgdG8gdGhlIGBtYXJnaW4tdG9wYCwgYG1hcmdpbi1yaWdodGAsIGBtYXJnaW4tYm90dG9tYCBvciBgbWFyZ2luLWxlZnRgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J21hcmdpbi1sZWZ0Jz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgTW96TWFyZ2luRW5kPzogUHJvcGVydHkuTWFyZ2luSW5saW5lRW5kPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXJnaW4taW5saW5lLXN0YXJ0YCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIGlubGluZSBzdGFydCBtYXJnaW4gb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIG1hcmdpbiBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGBtYXJnaW4tdG9wYCwgYG1hcmdpbi1yaWdodGAsIGBtYXJnaW4tYm90dG9tYCwgb3IgYG1hcmdpbi1sZWZ0YCBwcm9wZXJ0eSBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBkZWZpbmVkIGZvciBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdtYXJnaW4tbGVmdCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqLwogIE1vek1hcmdpblN0YXJ0PzogUHJvcGVydHkuTWFyZ2luSW5saW5lU3RhcnQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tb3otb3JpZW50YCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIG9yaWVudGF0aW9uIG9mIHRoZSBlbGVtZW50IHRvIHdoaWNoIGl0J3MgYXBwbGllZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBpbmxpbmUgfCBibG9jayB8IGhvcml6b250YWwgfCB2ZXJ0aWNhbGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgaW5saW5lYAogICAqLwogIE1vek9yaWVudD86IFByb3BlcnR5Lk1vek9yaWVudCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZm9udC1zbW9vdGhgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIHRoZSBhcHBsaWNhdGlvbiBvZiBhbnRpLWFsaWFzaW5nIHdoZW4gZm9udHMgYXJlIHJlbmRlcmVkLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBuZXZlciB8IGFsd2F5cyB8IDxhYnNvbHV0ZS1zaXplPiB8IDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqLwogIE1vek9zeEZvbnRTbW9vdGhpbmc/OiBQcm9wZXJ0eS5Gb250U21vb3RoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwYWRkaW5nLWlubGluZS1lbmRgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgaW5saW5lIGVuZCBwYWRkaW5nIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBwYWRkaW5nIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYDwncGFkZGluZy1sZWZ0Jz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgTW96UGFkZGluZ0VuZD86IFByb3BlcnR5LlBhZGRpbmdJbmxpbmVFbmQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHBhZGRpbmctaW5saW5lLXN0YXJ0YCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIGlubGluZSBzdGFydCBwYWRkaW5nIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBwYWRkaW5nIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYDwncGFkZGluZy1sZWZ0Jz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgTW96UGFkZGluZ1N0YXJ0PzogUHJvcGVydHkuUGFkZGluZ0lubGluZVN0YXJ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwZXJzcGVjdGl2ZWAqKiBDU1MgcHJvcGVydHkgZGV0ZXJtaW5lcyB0aGUgZGlzdGFuY2UgYmV0d2VlbiB0aGUgej0wIHBsYW5lIGFuZCB0aGUgdXNlciBpbiBvcmRlciB0byBnaXZlIGEgM0QtcG9zaXRpb25lZCBlbGVtZW50IHNvbWUgcGVyc3BlY3RpdmUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIE1velBlcnNwZWN0aXZlPzogUHJvcGVydHkuUGVyc3BlY3RpdmU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHBlcnNwZWN0aXZlLW9yaWdpbmAqKiBDU1MgcHJvcGVydHkgZGV0ZXJtaW5lcyB0aGUgcG9zaXRpb24gYXQgd2hpY2ggdGhlIHZpZXdlciBpcyBsb29raW5nLiBJdCBpcyB1c2VkIGFzIHRoZSBfdmFuaXNoaW5nIHBvaW50XyBieSB0aGUgYHBlcnNwZWN0aXZlYCBwcm9wZXJ0eS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8cG9zaXRpb24+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGA1MCUgNTAlYAogICAqLwogIE1velBlcnNwZWN0aXZlT3JpZ2luPzogUHJvcGVydHkuUGVyc3BlY3RpdmVPcmlnaW48VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogKipgLW1vei1zdGFjay1zaXppbmdgKiogaXMgYW4gZXh0ZW5kZWQgQ1NTIHByb3BlcnR5LiBOb3JtYWxseSwgYSBgPHh1bDpzdGFjaz5gIHdpbGwgY2hhbmdlIGl0cyBzaXplIHNvIHRoYXQgYWxsIG9mIGl0cyBjaGlsZCBlbGVtZW50cyBhcmUgY29tcGxldGVseSB2aXNpYmxlLiBGb3IgZXhhbXBsZSwgbW92aW5nIGEgY2hpbGQgb2YgdGhlIHN0YWNrIGZhciB0byB0aGUgcmlnaHQgd2lsbCB3aWRlbiB0aGUgc3RhY2sgc28gdGhlIGNoaWxkIHJlbWFpbnMgdmlzaWJsZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBpZ25vcmUgfCBzdHJldGNoLXRvLWZpdGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc3RyZXRjaC10by1maXRgCiAgICovCiAgTW96U3RhY2tTaXppbmc/OiBQcm9wZXJ0eS5Nb3pTdGFja1NpemluZyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGFiLXNpemVgKiogQ1NTIHByb3BlcnR5IGlzIHVzZWQgdG8gY3VzdG9taXplIHRoZSB3aWR0aCBvZiB0YWIgY2hhcmFjdGVycyAoVSswMDA5KS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8aW50ZWdlcj4gfCA8bGVuZ3RoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgOGAKICAgKi8KICBNb3pUYWJTaXplPzogUHJvcGVydHkuVGFiU2l6ZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1vei10ZXh0LWJsaW5rYCoqIG5vbi1zdGFuZGFyZCBNb3ppbGxhIENTUyBleHRlbnNpb24gc3BlY2lmaWVzIHRoZSBibGluayBtb2RlLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBibGlua2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICBNb3pUZXh0Qmxpbms/OiBQcm9wZXJ0eS5Nb3pUZXh0QmxpbmsgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtc2l6ZS1hZGp1c3RgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIHRoZSB0ZXh0IGluZmxhdGlvbiBhbGdvcml0aG0gdXNlZCBvbiBzb21lIHNtYXJ0cGhvbmVzIGFuZCB0YWJsZXRzLiBPdGhlciBicm93c2VycyB3aWxsIGlnbm9yZSB0aGlzIHByb3BlcnR5LgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBhdXRvIHwgPHBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYCBmb3Igc21hcnRwaG9uZSBicm93c2VycyBzdXBwb3J0aW5nIGluZmxhdGlvbiwgYG5vbmVgIGluIG90aGVyIGNhc2VzIChhbmQgdGhlbiBub3QgbW9kaWZpYWJsZSkuCiAgICovCiAgTW96VGV4dFNpemVBZGp1c3Q/OiBQcm9wZXJ0eS5UZXh0U2l6ZUFkanVzdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNmb3JtLW9yaWdpbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgb3JpZ2luIGZvciBhbiBlbGVtZW50J3MgdHJhbnNmb3JtYXRpb25zLgogICAqCiAgICogKipTeW50YXgqKjogYFsgPGxlbmd0aC1wZXJjZW50YWdlPiB8IGxlZnQgfCBjZW50ZXIgfCByaWdodCB8IHRvcCB8IGJvdHRvbSBdIHwgWyBbIDxsZW5ndGgtcGVyY2VudGFnZT4gfCBsZWZ0IHwgY2VudGVyIHwgcmlnaHQgXSAmJiBbIDxsZW5ndGgtcGVyY2VudGFnZT4gfCB0b3AgfCBjZW50ZXIgfCBib3R0b20gXSBdIDxsZW5ndGg+P2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgNTAlIDUwJSAwYAogICAqLwogIE1velRyYW5zZm9ybU9yaWdpbj86IFByb3BlcnR5LlRyYW5zZm9ybU9yaWdpbjxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNmb3JtLXN0eWxlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgY2hpbGRyZW4gb2YgYW4gZWxlbWVudCBhcmUgcG9zaXRpb25lZCBpbiB0aGUgM0Qgc3BhY2Ugb3IgYXJlIGZsYXR0ZW5lZCBpbiB0aGUgcGxhbmUgb2YgdGhlIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgZmxhdCB8IHByZXNlcnZlLTNkYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBmbGF0YAogICAqLwogIE1velRyYW5zZm9ybVN0eWxlPzogUHJvcGVydHkuVHJhbnNmb3JtU3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zaXRpb24tZGVsYXlgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgZHVyYXRpb24gdG8gd2FpdCBiZWZvcmUgc3RhcnRpbmcgYSBwcm9wZXJ0eSdzIHRyYW5zaXRpb24gZWZmZWN0IHdoZW4gaXRzIHZhbHVlIGNoYW5nZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHRpbWU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMHNgCiAgICovCiAgTW96VHJhbnNpdGlvbkRlbGF5PzogUHJvcGVydHkuVHJhbnNpdGlvbkRlbGF5PFRUaW1lPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNpdGlvbi1kdXJhdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbGVuZ3RoIG9mIHRpbWUgYSB0cmFuc2l0aW9uIGFuaW1hdGlvbiBzaG91bGQgdGFrZSB0byBjb21wbGV0ZS4gQnkgZGVmYXVsdCwgdGhlIHZhbHVlIGlzIGAwc2AsIG1lYW5pbmcgdGhhdCBubyBhbmltYXRpb24gd2lsbCBvY2N1ci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8dGltZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwc2AKICAgKi8KICBNb3pUcmFuc2l0aW9uRHVyYXRpb24/OiBQcm9wZXJ0eS5UcmFuc2l0aW9uRHVyYXRpb248VFRpbWU+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2l0aW9uLXByb3BlcnR5YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBDU1MgcHJvcGVydGllcyB0byB3aGljaCBhIHRyYW5zaXRpb24gZWZmZWN0IHNob3VsZCBiZSBhcHBsaWVkLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8c2luZ2xlLXRyYW5zaXRpb24tcHJvcGVydHk+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBhbGwKICAgKi8KICBNb3pUcmFuc2l0aW9uUHJvcGVydHk/OiBQcm9wZXJ0eS5UcmFuc2l0aW9uUHJvcGVydHkgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBpbnRlcm1lZGlhdGUgdmFsdWVzIGFyZSBjYWxjdWxhdGVkIGZvciBDU1MgcHJvcGVydGllcyBiZWluZyBhZmZlY3RlZCBieSBhIHRyYW5zaXRpb24gZWZmZWN0LgogICAqCiAgICogKipTeW50YXgqKjogYDxlYXNpbmctZnVuY3Rpb24+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgZWFzZWAKICAgKi8KICBNb3pUcmFuc2l0aW9uVGltaW5nRnVuY3Rpb24/OiBQcm9wZXJ0eS5UcmFuc2l0aW9uVGltaW5nRnVuY3Rpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tb3otdXNlci1mb2N1c2AqKiBDU1MgcHJvcGVydHkgaXMgdXNlZCB0byBpbmRpY2F0ZSB3aGV0aGVyIGFuIGVsZW1lbnQgY2FuIGhhdmUgdGhlIGZvY3VzLgogICAqCiAgICogKipTeW50YXgqKjogYGlnbm9yZSB8IG5vcm1hbCB8IHNlbGVjdC1hZnRlciB8IHNlbGVjdC1iZWZvcmUgfCBzZWxlY3QtbWVudSB8IHNlbGVjdC1zYW1lIHwgc2VsZWN0LWFsbCB8IG5vbmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgTW96VXNlckZvY3VzPzogUHJvcGVydHkuTW96VXNlckZvY3VzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB1c2VyLW1vZGlmeWAqKiBwcm9wZXJ0eSBoYXMgbm8gZWZmZWN0IGluIEZpcmVmb3guIEl0IHdhcyBvcmlnaW5hbGx5IHBsYW5uZWQgdG/CoGRldGVybWluZSB3aGV0aGVyIG9yIG5vdCB0aGUgY29udGVudCBvZiBhbiBlbGVtZW50IGNhbiBiZSBlZGl0ZWQgYnkgYSB1c2VyLgogICAqCiAgICogKipTeW50YXgqKjogYHJlYWQtb25seSB8IHJlYWQtd3JpdGUgfCB3cml0ZS1vbmx5YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGByZWFkLW9ubHlgCiAgICovCiAgTW96VXNlck1vZGlmeT86IFByb3BlcnR5Lk1velVzZXJNb2RpZnkgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKnVzZXItc2VsZWN0KipgIENTUyBwcm9wZXJ0eSBjb250cm9scyB3aGV0aGVyIHRoZSB1c2VyIGNhbiBzZWxlY3QgdGV4dC4gVGhpcyBkb2Vzbid0IGhhdmUgYW55IGVmZmVjdCBvbiBjb250ZW50IGxvYWRlZCBhcyBjaHJvbWUsIGV4Y2VwdCBpbiB0ZXh0Ym94ZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IHRleHQgfCBub25lIHwgY29udGFpbiB8IGFsbGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICBNb3pVc2VyU2VsZWN0PzogUHJvcGVydHkuVXNlclNlbGVjdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1vei13aW5kb3ctZHJhZ2dpbmdgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB3aGV0aGVyIGEgd2luZG93IGlzIGRyYWdnYWJsZSBvciBub3QuIEl0IG9ubHkgd29ya3MgaW4gQ2hyb21lIGNvZGUsIGFuZCBvbmx5IG9uIE1hYyBPUyBYLgogICAqCiAgICogKipTeW50YXgqKjogYGRyYWcgfCBuby1kcmFnYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBkcmFnYAogICAqLwogIE1veldpbmRvd0RyYWdnaW5nPzogUHJvcGVydHkuTW96V2luZG93RHJhZ2dpbmcgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tb3otd2luZG93LXNoYWRvd2AqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHdoZXRoZXIgYSB3aW5kb3cgd2lsbCBoYXZlIGEgc2hhZG93LiBJdCBvbmx5IHdvcmtzIG9uIE1hYyBPUyBYLgogICAqCiAgICogKipTeW50YXgqKjogYGRlZmF1bHQgfCBtZW51IHwgdG9vbHRpcCB8IHNoZWV0IHwgbm9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgZGVmYXVsdGAKICAgKi8KICBNb3pXaW5kb3dTaGFkb3c/OiBQcm9wZXJ0eS5Nb3pXaW5kb3dTaGFkb3cgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1hY2NlbGVyYXRvcmAqKiBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc2V0cyBvciByZXRyaWV2ZXMgYSBzdHJpbmcgaW5kaWNhdGluZyB3aGV0aGVyIHRoZSBvYmplY3QgcmVwcmVzZW50cyBhIGtleWJvYXJkIHNob3J0Y3V0LgogICAqCiAgICogKipTeW50YXgqKjogYGZhbHNlIHwgdHJ1ZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgZmFsc2VgCiAgICovCiAgbXNBY2NlbGVyYXRvcj86IFByb3BlcnR5Lk1zQWNjZWxlcmF0b3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFsaWduLXNlbGZgKiogQ1NTIHByb3BlcnR5IG92ZXJyaWRlcyBhIGdyaWQgb3IgZmxleCBpdGVtJ3MgYGFsaWduLWl0ZW1zYCB2YWx1ZS4gSW4gR3JpZCwgaXQgYWxpZ25zIHRoZSBpdGVtIGluc2lkZSB0aGXCoGdyaWQgYXJlYS4gSW4gRmxleGJveCwgaXQgYWxpZ25zIHRoZSBpdGVtIG9uIHRoZSBjcm9zcyBheGlzLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBub3JtYWwgfCBzdHJldGNoIHwgPGJhc2VsaW5lLXBvc2l0aW9uPiB8IDxvdmVyZmxvdy1wb3NpdGlvbj4/IDxzZWxmLXBvc2l0aW9uPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICBtc0FsaWduU2VsZj86IFByb3BlcnR5LkFsaWduU2VsZiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLWJsb2NrLXByb2dyZXNzaW9uYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgdGhlIGJsb2NrIHByb2dyZXNzaW9uIGFuZCBsYXlvdXQgb3JpZW50YXRpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgdGIgfCBybCB8IGJ0IHwgbHJgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHRiYAogICAqLwogIG1zQmxvY2tQcm9ncmVzc2lvbj86IFByb3BlcnR5Lk1zQmxvY2tQcm9ncmVzc2lvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLWNvbnRlbnQtem9vbS1jaGFpbmluZ2AqKiBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHNwZWNpZnlpbmcgdGhlIHpvb20gYmVoYXZpb3IgdGhhdCBvY2N1cnMgd2hlbiBhIHVzZXIgaGl0cyB0aGUgem9vbSBsaW1pdCBkdXJpbmcgcGFnZSBtYW5pcHVsYXRpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IGNoYWluZWRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgbXNDb250ZW50Wm9vbUNoYWluaW5nPzogUHJvcGVydHkuTXNDb250ZW50Wm9vbUNoYWluaW5nIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtY29udGVudC16b29tLWxpbWl0LW1heGAqKiBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc3BlY2lmaWVzIHRoZSBzZWxlY3RlZCBlbGVtZW50cycgbWF4aW11bSB6b29tIGZhY3Rvci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8cGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDQwMCVgCiAgICovCiAgbXNDb250ZW50Wm9vbUxpbWl0TWF4PzogUHJvcGVydHkuTXNDb250ZW50Wm9vbUxpbWl0TWF4IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtY29udGVudC16b29tLWxpbWl0LW1pbmAqKiBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc3BlY2lmaWVzIHRoZSBtaW5pbXVtIHpvb20gZmFjdG9yLgogICAqCiAgICogKipTeW50YXgqKjogYDxwZXJjZW50YWdlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMTAwJWAKICAgKi8KICBtc0NvbnRlbnRab29tTGltaXRNaW4/OiBQcm9wZXJ0eS5Nc0NvbnRlbnRab29tTGltaXRNaW4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1jb250ZW50LXpvb20tc25hcC1wb2ludHNgKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyB3aGVyZSB6b29tIHNuYXAtcG9pbnRzIGFyZSBsb2NhdGVkLgogICAqCiAgICogKipTeW50YXgqKjogYHNuYXBJbnRlcnZhbCggPHBlcmNlbnRhZ2U+LCA8cGVyY2VudGFnZT4gKSB8IHNuYXBMaXN0KCA8cGVyY2VudGFnZT4jIClgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHNuYXBJbnRlcnZhbCgwJSwgMTAwJSlgCiAgICovCiAgbXNDb250ZW50Wm9vbVNuYXBQb2ludHM/OiBQcm9wZXJ0eS5Nc0NvbnRlbnRab29tU25hcFBvaW50cyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLWNvbnRlbnQtem9vbS1zbmFwLXR5cGVgKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyBob3cgem9vbWluZyBpcyBhZmZlY3RlZCBieSBkZWZpbmVkIHNuYXAtcG9pbnRzLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBwcm94aW1pdHkgfCBtYW5kYXRvcnlgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgbXNDb250ZW50Wm9vbVNuYXBUeXBlPzogUHJvcGVydHkuTXNDb250ZW50Wm9vbVNuYXBUeXBlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtY29udGVudC16b29taW5nYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgd2hldGhlciB6b29taW5nIGlzIGVuYWJsZWQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IHpvb21gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogem9vbSBmb3IgdGhlIHRvcCBsZXZlbCBlbGVtZW50LCBub25lIGZvciBhbGwgb3RoZXIgZWxlbWVudHMKICAgKi8KICBtc0NvbnRlbnRab29taW5nPzogUHJvcGVydHkuTXNDb250ZW50Wm9vbWluZyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYC1tcy1maWx0ZXJgIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzZXRzIG9yIHJldHJpZXZlcyB0aGUgZmlsdGVyIG9yIGNvbGxlY3Rpb24gb2YgZmlsdGVycyBhcHBsaWVkIHRvIGFuIG9iamVjdC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c3RyaW5nPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiAiIiAodGhlIGVtcHR5IHN0cmluZykKICAgKi8KICBtc0ZpbHRlcj86IFByb3BlcnR5Lk1zRmlsdGVyIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmbGV4LWRpcmVjdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgZmxleCBpdGVtcyBhcmUgcGxhY2VkIGluIHRoZSBmbGV4IGNvbnRhaW5lciBkZWZpbmluZyB0aGUgbWFpbiBheGlzIGFuZCB0aGUgZGlyZWN0aW9uIChub3JtYWwgb3IgcmV2ZXJzZWQpLgogICAqCiAgICogKipTeW50YXgqKjogYHJvdyB8IHJvdy1yZXZlcnNlIHwgY29sdW1uIHwgY29sdW1uLXJldmVyc2VgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHJvd2AKICAgKi8KICBtc0ZsZXhEaXJlY3Rpb24/OiBQcm9wZXJ0eS5GbGV4RGlyZWN0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmbGV4LWdyb3dgKiogQ1NTwqBwcm9wZXJ0eSBzZXRzIHRoZSBmbGV4IGdyb3cgZmFjdG9yIG9mIGEgZmxleCBpdGVtIG1haW4gc2l6ZS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bnVtYmVyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKi8KICBtc0ZsZXhQb3NpdGl2ZT86IFByb3BlcnR5LkZsZXhHcm93IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtZmxvdy1mcm9tYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBnZXRzIG9yIHNldHMgYSB2YWx1ZSBpZGVudGlmeWluZyBhIHJlZ2lvbiBjb250YWluZXIgaW4gdGhlIGRvY3VtZW50IHRoYXQgYWNjZXB0cyB0aGUgY29udGVudCBmbG93IGZyb20gdGhlIGRhdGEgc291cmNlLgogICAqCiAgICogKipTeW50YXgqKjogYFsgbm9uZSB8IDxjdXN0b20taWRlbnQ+IF0jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIG1zRmxvd0Zyb20/OiBQcm9wZXJ0eS5Nc0Zsb3dGcm9tIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtZmxvdy1pbnRvYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBnZXRzIG9yIHNldHMgYSB2YWx1ZSBpZGVudGlmeWluZyBhbiBpZnJhbWUgY29udGFpbmVyIGluIHRoZSBkb2N1bWVudCB0aGF0IHNlcnZlcyBhcyB0aGUgcmVnaW9uJ3MgZGF0YSBzb3VyY2UuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyBub25lIHwgPGN1c3RvbS1pZGVudD4gXSNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgbXNGbG93SW50bz86IFByb3BlcnR5Lk1zRmxvd0ludG8gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGdyaWQtdGVtcGxhdGUtY29sdW1uc2AqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbGluZSBuYW1lcyBhbmQgdHJhY2sgc2l6aW5nIGZ1bmN0aW9ucyBvZiB0aGUgZ3JpZCBjb2x1bW5zLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8dHJhY2stbGlzdD4gfCA8YXV0by10cmFjay1saXN0PmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICBtc0dyaWRDb2x1bW5zPzogUHJvcGVydHkuTXNHcmlkQ29sdW1uczxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZ3JpZC10ZW1wbGF0ZS1yb3dzYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsaW5lIG5hbWVzIGFuZCB0cmFjayBzaXppbmcgZnVuY3Rpb25zIG9mIHRoZSBncmlkIHJvd3MuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDx0cmFjay1saXN0PiB8IDxhdXRvLXRyYWNrLWxpc3Q+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIG1zR3JpZFJvd3M/OiBQcm9wZXJ0eS5Nc0dyaWRSb3dzPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtaGlnaC1jb250cmFzdC1hZGp1c3RgKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IGdldHMgb3Igc2V0cyBhIHZhbHVlIGluZGljYXRpbmcgd2hldGhlciB0byBvdmVycmlkZSBhbnkgQ1NTIHByb3BlcnRpZXMgdGhhdCB3b3VsZCBoYXZlIGJlZW4gc2V0IGluIGhpZ2ggY29udHJhc3QgbW9kZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgbm9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICBtc0hpZ2hDb250cmFzdEFkanVzdD86IFByb3BlcnR5Lk1zSGlnaENvbnRyYXN0QWRqdXN0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtaHlwaGVuYXRlLWxpbWl0LWNoYXJzYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgb25lIHRvIHRocmVlIHZhbHVlcyBpbmRpY2F0aW5nIHRoZSBtaW5pbXVtIG51bWJlciBvZiBjaGFyYWN0ZXJzIGluIGEgaHlwaGVuYXRlZCB3b3JkLiBJZiB0aGUgd29yZCBkb2VzIG5vdCBtZWV0IHRoZSByZXF1aXJlZCBtaW5pbXVtIG51bWJlciBvZiBjaGFyYWN0ZXJzIGluIHRoZSB3b3JkLCBiZWZvcmUgdGhlIGh5cGhlbiwgb3IgYWZ0ZXIgdGhlIGh5cGhlbiwgdGhlbiB0aGUgd29yZCBpcyBub3QgaHlwaGVuYXRlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPGludGVnZXI+ezEsM31gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgbXNIeXBoZW5hdGVMaW1pdENoYXJzPzogUHJvcGVydHkuTXNIeXBoZW5hdGVMaW1pdENoYXJzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtaHlwaGVuYXRlLWxpbWl0LWxpbmVzYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gc3BlY2lmeWluZyB0aGUgbWF4aW11bSBudW1iZXIgb2YgY29uc2VjdXRpdmUgbGluZXMgaW4gYW4gZWxlbWVudCB0aGF0IG1heSBiZSBlbmRlZCB3aXRoIGEgaHlwaGVuYXRlZCB3b3JkLgogICAqCiAgICogKipTeW50YXgqKjogYG5vLWxpbWl0IHwgPGludGVnZXI+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBuby1saW1pdGAKICAgKi8KICBtc0h5cGhlbmF0ZUxpbWl0TGluZXM/OiBQcm9wZXJ0eS5Nc0h5cGhlbmF0ZUxpbWl0TGluZXMgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKi1tcy1oeXBoZW5hdGUtbGltaXQtem9uZSoqYCBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHNwZWNpZnlpbmcgdGhlIHdpZHRoIG9mIHRoZSBoeXBoZW5hdGlvbiB6b25lLgogICAqCiAgICogKipTeW50YXgqKjogYDxwZXJjZW50YWdlPiB8IDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqLwogIG1zSHlwaGVuYXRlTGltaXRab25lPzogUHJvcGVydHkuTXNIeXBoZW5hdGVMaW1pdFpvbmU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGh5cGhlbnNgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyBob3cgd29yZHMgc2hvdWxkIGJlIGh5cGhlbmF0ZWQgd2hlbiB0ZXh0IHdyYXBzIGFjcm9zcyBtdWx0aXBsZSBsaW5lcy4gSXQgY2FuIHByZXZlbnQgaHlwaGVuYXRpb24gZW50aXJlbHksIGh5cGhlbmF0ZSBhdCBtYW51YWxseS1zcGVjaWZpZWQgcG9pbnRzIHdpdGhpbiB0aGUgdGV4dCwgb3IgbGV0IHRoZSBicm93c2VyIGF1dG9tYXRpY2FsbHkgaW5zZXJ0IGh5cGhlbnMgd2hlcmUgYXBwcm9wcmlhdGUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IG1hbnVhbCB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG1hbnVhbGAKICAgKi8KICBtc0h5cGhlbnM/OiBQcm9wZXJ0eS5IeXBoZW5zIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtaW1lLWFsaWduYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gYWxpZ25pbmcgdGhlIElucHV0IE1ldGhvZCBFZGl0b3IgKElNRSkgY2FuZGlkYXRlIHdpbmRvdyBib3ggcmVsYXRpdmUgdG8gdGhlIGVsZW1lbnQgb24gd2hpY2ggdGhlIElNRSBjb21wb3NpdGlvbiBpcyBhY3RpdmUuIFRoZSBleHRlbnNpb24gaXMgaW1wbGVtZW50ZWQgaW4gTWljcm9zb2Z0IEVkZ2UgYW5kIEludGVybmV0IEV4cGxvcmVywqAxMS4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgYWZ0ZXJgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgbXNJbWVBbGlnbj86IFByb3BlcnR5Lk1zSW1lQWxpZ24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIENTUyAqKmBqdXN0aWZ5LXNlbGZgKiogcHJvcGVydHkgc2V0cyB0aGUgd2F5IGEgYm94IGlzIGp1c3RpZmllZCBpbnNpZGUgaXRzIGFsaWdubWVudCBjb250YWluZXIgYWxvbmcgdGhlIGFwcHJvcHJpYXRlIGF4aXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IG5vcm1hbCB8IHN0cmV0Y2ggfCA8YmFzZWxpbmUtcG9zaXRpb24+IHwgPG92ZXJmbG93LXBvc2l0aW9uPj8gWyA8c2VsZi1wb3NpdGlvbj4gfCBsZWZ0IHwgcmlnaHQgXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICBtc0p1c3RpZnlTZWxmPzogUHJvcGVydHkuSnVzdGlmeVNlbGYgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGxpbmUtYnJlYWtgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IHRvIGJyZWFrIGxpbmVzIG9mIENoaW5lc2UsIEphcGFuZXNlLCBvciBLb3JlYW4gKENKSykgdGV4dCB3aGVuIHdvcmtpbmcgd2l0aCBwdW5jdHVhdGlvbiBhbmQgc3ltYm9scy4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgbG9vc2UgfCBub3JtYWwgfCBzdHJpY3QgfCBhbnl3aGVyZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICBtc0xpbmVCcmVhaz86IFByb3BlcnR5LkxpbmVCcmVhayB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3JkZXJgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG9yZGVyIHRvIGxheSBvdXQgYW4gaXRlbSBpbiBhIGZsZXggb3IgZ3JpZCBjb250YWluZXIuIEl0ZW1zIGluIGEgY29udGFpbmVyIGFyZSBzb3J0ZWQgYnkgYXNjZW5kaW5nIGBvcmRlcmAgdmFsdWUgYW5kIHRoZW4gYnkgdGhlaXIgc291cmNlIGNvZGUgb3JkZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGludGVnZXI+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqLwogIG1zT3JkZXI/OiBQcm9wZXJ0eS5PcmRlciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLW92ZXJmbG93LXN0eWxlYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gY29udHJvbGxpbmcgdGhlIGJlaGF2aW9yIG9mIHNjcm9sbGJhcnMgd2hlbiB0aGUgY29udGVudCBvZiBhbiBlbGVtZW50IG92ZXJmbG93cy4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgbm9uZSB8IHNjcm9sbGJhciB8IC1tcy1hdXRvaGlkaW5nLXNjcm9sbGJhcmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICBtc092ZXJmbG93U3R5bGU/OiBQcm9wZXJ0eS5Nc092ZXJmbG93U3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG92ZXJmbG93LXhgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hhdCBzaG93cyB3aGVuIGNvbnRlbnQgb3ZlcmZsb3dzIGEgYmxvY2stbGV2ZWwgZWxlbWVudCdzIGxlZnQgYW5kIHJpZ2h0IGVkZ2VzLiBUaGlzIG1heSBiZSBub3RoaW5nLCBhIHNjcm9sbCBiYXIsIG9yIHRoZSBvdmVyZmxvdyBjb250ZW50LgogICAqCiAgICogKipTeW50YXgqKjogYHZpc2libGUgfCBoaWRkZW4gfCBjbGlwIHwgc2Nyb2xsIHwgYXV0b2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgdmlzaWJsZWAKICAgKi8KICBtc092ZXJmbG93WD86IFByb3BlcnR5Lk92ZXJmbG93WCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3ZlcmZsb3cteWAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGF0IHNob3dzIHdoZW4gY29udGVudCBvdmVyZmxvd3MgYSBibG9jay1sZXZlbCBlbGVtZW50J3MgdG9wIGFuZCBib3R0b20gZWRnZXMuIFRoaXMgbWF5IGJlIG5vdGhpbmcsIGEgc2Nyb2xsIGJhciwgb3IgdGhlIG92ZXJmbG93IGNvbnRlbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgdmlzaWJsZSB8IGhpZGRlbiB8IGNsaXAgfCBzY3JvbGwgfCBhdXRvYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGB2aXNpYmxlYAogICAqLwogIG1zT3ZlcmZsb3dZPzogUHJvcGVydHkuT3ZlcmZsb3dZIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgKiotbXMtc2Nyb2xsLWNoYWluaW5nKipgIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgdGhlIHNjcm9sbGluZyBiZWhhdmlvciB0aGF0IG9jY3VycyB3aGVuIGEgdXNlciBoaXRzIHRoZSBzY3JvbGwgbGltaXQgZHVyaW5nIGEgbWFuaXB1bGF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYGNoYWluZWQgfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjaGFpbmVkYAogICAqLwogIG1zU2Nyb2xsQ2hhaW5pbmc/OiBQcm9wZXJ0eS5Nc1Njcm9sbENoYWluaW5nIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgKiotbXMtc2Nyb2xsLWxpbWl0LXgtbWF4KipgIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgdGhlIG1heGltdW0gdmFsdWUgZm9yIHRoZSBgRWxlbWVudC5zY3JvbGxMZWZ0YCBwcm9wZXJ0eS4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgbXNTY3JvbGxMaW1pdFhNYXg/OiBQcm9wZXJ0eS5Nc1Njcm9sbExpbWl0WE1heDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLXNjcm9sbC1saW1pdC14LW1pbmAqKiBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc3BlY2lmaWVzIHRoZSBtaW5pbXVtIHZhbHVlIGZvciB0aGUgYEVsZW1lbnQuc2Nyb2xsTGVmdGAgcHJvcGVydHkuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgbXNTY3JvbGxMaW1pdFhNaW4/OiBQcm9wZXJ0eS5Nc1Njcm9sbExpbWl0WE1pbjxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLXNjcm9sbC1saW1pdC15LW1heGAqKiBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc3BlY2lmaWVzIHRoZSBtYXhpbXVtIHZhbHVlIGZvciB0aGUgYEVsZW1lbnQuc2Nyb2xsVG9wYCBwcm9wZXJ0eS4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgbXNTY3JvbGxMaW1pdFlNYXg/OiBQcm9wZXJ0eS5Nc1Njcm9sbExpbWl0WU1heDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLXNjcm9sbC1saW1pdC15LW1pbmAqKiBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc3BlY2lmaWVzIHRoZSBtaW5pbXVtIHZhbHVlIGZvciB0aGUgYEVsZW1lbnQuc2Nyb2xsVG9wYCBwcm9wZXJ0eS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKi8KICBtc1Njcm9sbExpbWl0WU1pbj86IFByb3BlcnR5Lk1zU2Nyb2xsTGltaXRZTWluPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtc2Nyb2xsLXJhaWxzYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgd2hldGhlciBzY3JvbGxpbmcgbG9ja3MgdG8gdGhlIHByaW1hcnkgYXhpcyBvZiBtb3Rpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IHJhaWxlZGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgcmFpbGVkYAogICAqLwogIG1zU2Nyb2xsUmFpbHM/OiBQcm9wZXJ0eS5Nc1Njcm9sbFJhaWxzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtc2Nyb2xsLXNuYXAtcG9pbnRzLXhgKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyB3aGVyZSBzbmFwLXBvaW50cyB3aWxsIGJlIGxvY2F0ZWQgYWxvbmcgdGhlIHgtYXhpcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBzbmFwSW50ZXJ2YWwoIDxsZW5ndGgtcGVyY2VudGFnZT4sIDxsZW5ndGgtcGVyY2VudGFnZT4gKSB8IHNuYXBMaXN0KCA8bGVuZ3RoLXBlcmNlbnRhZ2U+IyApYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzbmFwSW50ZXJ2YWwoMHB4LCAxMDAlKWAKICAgKi8KICBtc1Njcm9sbFNuYXBQb2ludHNYPzogUHJvcGVydHkuTXNTY3JvbGxTbmFwUG9pbnRzWCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLXNjcm9sbC1zbmFwLXBvaW50cy15YCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgd2hlcmUgc25hcC1wb2ludHMgd2lsbCBiZSBsb2NhdGVkIGFsb25nIHRoZSB5LWF4aXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgc25hcEludGVydmFsKCA8bGVuZ3RoLXBlcmNlbnRhZ2U+LCA8bGVuZ3RoLXBlcmNlbnRhZ2U+ICkgfCBzbmFwTGlzdCggPGxlbmd0aC1wZXJjZW50YWdlPiMgKWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc25hcEludGVydmFsKDBweCwgMTAwJSlgCiAgICovCiAgbXNTY3JvbGxTbmFwUG9pbnRzWT86IFByb3BlcnR5Lk1zU2Nyb2xsU25hcFBvaW50c1kgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHNjcm9sbC1zbmFwLXR5cGVgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IHN0cmljdGx5IHNuYXAgcG9pbnRzIGFyZSBlbmZvcmNlZCBvbiB0aGUgc2Nyb2xsIGNvbnRhaW5lciBpbiBjYXNlIHRoZXJlIGlzIG9uZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgcHJveGltaXR5IHwgbWFuZGF0b3J5YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIG1zU2Nyb2xsU25hcFR5cGU/OiBQcm9wZXJ0eS5Nc1Njcm9sbFNuYXBUeXBlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtc2Nyb2xsLXRyYW5zbGF0aW9uYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgd2hldGhlciB2ZXJ0aWNhbC10by1ob3Jpem9udGFsIHNjcm9sbCB3aGVlbCB0cmFuc2xhdGlvbiBvY2N1cnMgb24gdGhlIHNwZWNpZmllZCBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCB2ZXJ0aWNhbC10by1ob3Jpem9udGFsYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIG1zU2Nyb2xsVHJhbnNsYXRpb24/OiBQcm9wZXJ0eS5Nc1Njcm9sbFRyYW5zbGF0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtc2Nyb2xsYmFyLTNkbGlnaHQtY29sb3JgKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiBzcGVjaWZ5aW5nIHRoZSBjb2xvciBvZiB0aGUgdG9wIGFuZCBsZWZ0IGVkZ2VzIG9mIHRoZSBzY3JvbGwgYm94IGFuZCBzY3JvbGwgYXJyb3dzIG9mIGEgc2Nyb2xsIGJhci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGRlcGVuZHMgb24gdXNlciBhZ2VudAogICAqLwogIG1zU2Nyb2xsYmFyM2RsaWdodENvbG9yPzogUHJvcGVydHkuTXNTY3JvbGxiYXIzZGxpZ2h0Q29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1zY3JvbGxiYXItYXJyb3ctY29sb3JgKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyB0aGUgY29sb3Igb2YgdGhlIGFycm93IGVsZW1lbnRzIG9mIGEgc2Nyb2xsIGFycm93LgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYEJ1dHRvblRleHRgCiAgICovCiAgbXNTY3JvbGxiYXJBcnJvd0NvbG9yPzogUHJvcGVydHkuTXNTY3JvbGxiYXJBcnJvd0NvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgKiotbXMtc2Nyb2xsYmFyLWJhc2UtY29sb3IqKmAgQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyB0aGUgYmFzZSBjb2xvciBvZiB0aGUgbWFpbiBlbGVtZW50cyBvZiBhIHNjcm9sbCBiYXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGNvbG9yPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBkZXBlbmRzIG9uIHVzZXIgYWdlbnQKICAgKi8KICBtc1Njcm9sbGJhckJhc2VDb2xvcj86IFByb3BlcnR5Lk1zU2Nyb2xsYmFyQmFzZUNvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtc2Nyb2xsYmFyLWRhcmtzaGFkb3ctY29sb3JgKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyB0aGUgY29sb3Igb2YgYSBzY3JvbGwgYmFyJ3MgZ3V0dGVyLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYFRocmVlRERhcmtTaGFkb3dgCiAgICovCiAgbXNTY3JvbGxiYXJEYXJrc2hhZG93Q29sb3I/OiBQcm9wZXJ0eS5Nc1Njcm9sbGJhckRhcmtzaGFkb3dDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYCoqLW1zLXNjcm9sbGJhci1mYWNlLWNvbG9yKipgIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgdGhlIGNvbG9yIG9mIHRoZSBzY3JvbGwgYm94IGFuZCBzY3JvbGwgYXJyb3dzIG9mIGEgc2Nyb2xsIGJhci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBUaHJlZURGYWNlYAogICAqLwogIG1zU2Nyb2xsYmFyRmFjZUNvbG9yPzogUHJvcGVydHkuTXNTY3JvbGxiYXJGYWNlQ29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKi1tcy1zY3JvbGxiYXItaGlnaGxpZ2h0LWNvbG9yKipgIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgdGhlIGNvbG9yIG9mIHRoZSBzbGlkZXIgdHJheSwgdGhlIHRvcCBhbmQgbGVmdCBlZGdlcyBvZiB0aGUgc2Nyb2xsIGJveCwgYW5kIHRoZSBzY3JvbGwgYXJyb3dzIG9mIGEgc2Nyb2xsIGJhci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBUaHJlZURIaWdobGlnaHRgCiAgICovCiAgbXNTY3JvbGxiYXJIaWdobGlnaHRDb2xvcj86IFByb3BlcnR5Lk1zU2Nyb2xsYmFySGlnaGxpZ2h0Q29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1zY3JvbGxiYXItc2hhZG93LWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgdGhlIGNvbG9yIG9mIHRoZSBib3R0b20gYW5kIHJpZ2h0IGVkZ2VzIG9mIHRoZSBzY3JvbGwgYm94IGFuZCBzY3JvbGwgYXJyb3dzIG9mIGEgc2Nyb2xsIGJhci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBUaHJlZUREYXJrU2hhZG93YAogICAqLwogIG1zU2Nyb2xsYmFyU2hhZG93Q29sb3I/OiBQcm9wZXJ0eS5Nc1Njcm9sbGJhclNoYWRvd0NvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtdGV4dC1hdXRvc3BhY2VgKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyB0aGUgYXV0b3NwYWNpbmcgYW5kIG5hcnJvdyBzcGFjZSB3aWR0aCBhZGp1c3RtZW50IG9mIHRleHQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IGlkZW9ncmFwaC1hbHBoYSB8IGlkZW9ncmFwaC1udW1lcmljIHwgaWRlb2dyYXBoLXBhcmVudGhlc2lzIHwgaWRlb2dyYXBoLXNwYWNlYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIG1zVGV4dEF1dG9zcGFjZT86IFByb3BlcnR5Lk1zVGV4dEF1dG9zcGFjZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1jb21iaW5lLXVwcmlnaHRgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGNvbWJpbmF0aW9uIG9mIGNoYXJhY3RlcnMgaW50byB0aGUgc3BhY2Ugb2YgYSBzaW5nbGUgY2hhcmFjdGVyLiBJZiB0aGUgY29tYmluZWQgdGV4dCBpcyB3aWRlciB0aGFuIDFlbSwgdGhlIHVzZXIgYWdlbnQgbXVzdCBmaXQgdGhlIGNvbnRlbnRzIHdpdGhpbiAxZW0uIFRoZSByZXN1bHRpbmcgY29tcG9zaXRpb24gaXMgdHJlYXRlZCBhcyBhIHNpbmdsZSB1cHJpZ2h0IGdseXBoIGZvciBsYXlvdXQgYW5kIGRlY29yYXRpb24uIFRoaXMgcHJvcGVydHkgb25seSBoYXMgYW4gZWZmZWN0IGluIHZlcnRpY2FsIHdyaXRpbmcgbW9kZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IGFsbCB8IFsgZGlnaXRzIDxpbnRlZ2VyPj8gXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICBtc1RleHRDb21iaW5lSG9yaXpvbnRhbD86IFByb3BlcnR5LlRleHRDb21iaW5lVXByaWdodCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1vdmVyZmxvd2AqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgaGlkZGVuIG92ZXJmbG93IGNvbnRlbnQgaXMgc2lnbmFsZWQgdG8gdXNlcnMuIEl0IGNhbiBiZSBjbGlwcGVkLCBkaXNwbGF5IGFuIGVsbGlwc2lzICgnYOKApmAnKSwgb3IgZGlzcGxheSBhIGN1c3RvbSBzdHJpbmcuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyBjbGlwIHwgZWxsaXBzaXMgfCA8c3RyaW5nPiBdezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGNsaXBgCiAgICovCiAgbXNUZXh0T3ZlcmZsb3c/OiBQcm9wZXJ0eS5UZXh0T3ZlcmZsb3cgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRvdWNoLWFjdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgYW4gZWxlbWVudCdzIHJlZ2lvbiBjYW4gYmUgbWFuaXB1bGF0ZWQgYnkgYSB0b3VjaHNjcmVlbiB1c2VyIChmb3IgZXhhbXBsZSwgYnkgem9vbWluZyBmZWF0dXJlcyBidWlsdCBpbnRvIHRoZSBicm93c2VyKS4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgbm9uZSB8IFsgWyBwYW4teCB8IHBhbi1sZWZ0IHwgcGFuLXJpZ2h0IF0gfHwgWyBwYW4teSB8IHBhbi11cCB8IHBhbi1kb3duIF0gfHwgcGluY2gtem9vbSBdIHwgbWFuaXB1bGF0aW9uYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqLwogIG1zVG91Y2hBY3Rpb24/OiBQcm9wZXJ0eS5Ub3VjaEFjdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLXRvdWNoLXNlbGVjdGAqKiBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgdG9nZ2xlcyB0aGUgZ3JpcHBlciB2aXN1YWwgZWxlbWVudHMgdGhhdCBlbmFibGUgdG91Y2ggdGV4dCBzZWxlY3Rpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgZ3JpcHBlcnMgfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBncmlwcGVyc2AKICAgKi8KICBtc1RvdWNoU2VsZWN0PzogUHJvcGVydHkuTXNUb3VjaFNlbGVjdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNmb3JtYCoqIENTUyBwcm9wZXJ0eSBsZXRzIHlvdSByb3RhdGUsIHNjYWxlLCBza2V3LCBvciB0cmFuc2xhdGUgYW4gZWxlbWVudC4gSXQgbW9kaWZpZXMgdGhlIGNvb3JkaW5hdGUgc3BhY2Ugb2YgdGhlIENTUyB2aXN1YWwgZm9ybWF0dGluZyBtb2RlbC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPHRyYW5zZm9ybS1saXN0PmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICBtc1RyYW5zZm9ybT86IFByb3BlcnR5LlRyYW5zZm9ybSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNmb3JtLW9yaWdpbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgb3JpZ2luIGZvciBhbiBlbGVtZW50J3MgdHJhbnNmb3JtYXRpb25zLgogICAqCiAgICogKipTeW50YXgqKjogYFsgPGxlbmd0aC1wZXJjZW50YWdlPiB8IGxlZnQgfCBjZW50ZXIgfCByaWdodCB8IHRvcCB8IGJvdHRvbSBdIHwgWyBbIDxsZW5ndGgtcGVyY2VudGFnZT4gfCBsZWZ0IHwgY2VudGVyIHwgcmlnaHQgXSAmJiBbIDxsZW5ndGgtcGVyY2VudGFnZT4gfCB0b3AgfCBjZW50ZXIgfCBib3R0b20gXSBdIDxsZW5ndGg+P2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgNTAlIDUwJSAwYAogICAqLwogIG1zVHJhbnNmb3JtT3JpZ2luPzogUHJvcGVydHkuVHJhbnNmb3JtT3JpZ2luPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2l0aW9uLWRlbGF5YCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIGR1cmF0aW9uIHRvIHdhaXQgYmVmb3JlIHN0YXJ0aW5nIGEgcHJvcGVydHkncyB0cmFuc2l0aW9uIGVmZmVjdCB3aGVuIGl0cyB2YWx1ZSBjaGFuZ2VzLgogICAqCiAgICogKipTeW50YXgqKjogYDx0aW1lPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBzYAogICAqLwogIG1zVHJhbnNpdGlvbkRlbGF5PzogUHJvcGVydHkuVHJhbnNpdGlvbkRlbGF5PFRUaW1lPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNpdGlvbi1kdXJhdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbGVuZ3RoIG9mIHRpbWUgYSB0cmFuc2l0aW9uIGFuaW1hdGlvbiBzaG91bGQgdGFrZSB0byBjb21wbGV0ZS4gQnkgZGVmYXVsdCwgdGhlIHZhbHVlIGlzIGAwc2AsIG1lYW5pbmcgdGhhdCBubyBhbmltYXRpb24gd2lsbCBvY2N1ci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8dGltZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwc2AKICAgKi8KICBtc1RyYW5zaXRpb25EdXJhdGlvbj86IFByb3BlcnR5LlRyYW5zaXRpb25EdXJhdGlvbjxUVGltZT4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zaXRpb24tcHJvcGVydHlgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIENTUyBwcm9wZXJ0aWVzIHRvIHdoaWNoIGEgdHJhbnNpdGlvbiBlZmZlY3Qgc2hvdWxkIGJlIGFwcGxpZWQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxzaW5nbGUtdHJhbnNpdGlvbi1wcm9wZXJ0eT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGFsbAogICAqLwogIG1zVHJhbnNpdGlvblByb3BlcnR5PzogUHJvcGVydHkuVHJhbnNpdGlvblByb3BlcnR5IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgaW50ZXJtZWRpYXRlIHZhbHVlcyBhcmUgY2FsY3VsYXRlZCBmb3IgQ1NTIHByb3BlcnRpZXMgYmVpbmcgYWZmZWN0ZWQgYnkgYSB0cmFuc2l0aW9uIGVmZmVjdC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8ZWFzaW5nLWZ1bmN0aW9uPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGVhc2VgCiAgICovCiAgbXNUcmFuc2l0aW9uVGltaW5nRnVuY3Rpb24/OiBQcm9wZXJ0eS5UcmFuc2l0aW9uVGltaW5nRnVuY3Rpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKnVzZXItc2VsZWN0KipgIENTUyBwcm9wZXJ0eSBjb250cm9scyB3aGV0aGVyIHRoZSB1c2VyIGNhbiBzZWxlY3QgdGV4dC4gVGhpcyBkb2Vzbid0IGhhdmUgYW55IGVmZmVjdCBvbiBjb250ZW50IGxvYWRlZCBhcyBjaHJvbWUsIGV4Y2VwdCBpbiB0ZXh0Ym94ZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IGVsZW1lbnQgfCB0ZXh0YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGB0ZXh0YAogICAqLwogIG1zVXNlclNlbGVjdD86IFByb3BlcnR5Lk1zVXNlclNlbGVjdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgd29yZC1icmVha2AqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIGxpbmUgYnJlYWtzIGFwcGVhciB3aGVyZXZlciB0aGUgdGV4dCB3b3VsZCBvdGhlcndpc2Ugb3ZlcmZsb3cgaXRzIGNvbnRlbnQgYm94LgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IGJyZWFrLWFsbCB8IGtlZXAtYWxsIHwgYnJlYWstd29yZGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqLwogIG1zV29yZEJyZWFrPzogUHJvcGVydHkuV29yZEJyZWFrIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtd3JhcC1mbG93YCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgaG93IGV4Y2x1c2lvbnMgaW1wYWN0IGlubGluZSBjb250ZW50IHdpdGhpbiBibG9jay1sZXZlbCBlbGVtZW50cy4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgYm90aCB8IHN0YXJ0IHwgZW5kIHwgbWF4aW11bSB8IGNsZWFyYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqLwogIG1zV3JhcEZsb3c/OiBQcm9wZXJ0eS5Nc1dyYXBGbG93IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtd3JhcC1tYXJnaW5gKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyBhIG1hcmdpbiB0aGF0IG9mZnNldHMgdGhlIGlubmVyIHdyYXAgc2hhcGUgZnJvbSBvdGhlciBzaGFwZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgbXNXcmFwTWFyZ2luPzogUHJvcGVydHkuTXNXcmFwTWFyZ2luPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtd3JhcC10aHJvdWdoYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgaG93IGNvbnRlbnQgc2hvdWxkIHdyYXAgYXJvdW5kIGFuIGV4Y2x1c2lvbiBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYHdyYXAgfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGB3cmFwYAogICAqLwogIG1zV3JhcFRocm91Z2g/OiBQcm9wZXJ0eS5Nc1dyYXBUaHJvdWdoIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB3cml0aW5nLW1vZGVgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hldGhlciBsaW5lcyBvZiB0ZXh0IGFyZSBsYWlkIG91dCBob3Jpem9udGFsbHkgb3IgdmVydGljYWxseSwgYXMgd2VsbCBhcyB0aGUgZGlyZWN0aW9uIGluIHdoaWNoIGJsb2NrcyBwcm9ncmVzcy4gV2hlbiBzZXQgZm9yIGFuIGVudGlyZSBkb2N1bWVudCwgaXQgc2hvdWxkIGJlIHNldCBvbiB0aGUgcm9vdCBlbGVtZW50IChgaHRtbGAgZWxlbWVudCBmb3IgSFRNTCBkb2N1bWVudHMpLgogICAqCiAgICogKipTeW50YXgqKjogYGhvcml6b250YWwtdGIgfCB2ZXJ0aWNhbC1ybCB8IHZlcnRpY2FsLWxyIHwgc2lkZXdheXMtcmwgfCBzaWRld2F5cy1scmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgaG9yaXpvbnRhbC10YmAKICAgKi8KICBtc1dyaXRpbmdNb2RlPzogUHJvcGVydHkuV3JpdGluZ01vZGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIENTUyAqKmBhbGlnbi1jb250ZW50YCoqIHByb3BlcnR5IHNldHMgdGhlIGRpc3RyaWJ1dGlvbiBvZiBzcGFjZSBiZXR3ZWVuIGFuZCBhcm91bmQgY29udGVudCBpdGVtcyBhbG9uZyBhIGZsZXhib3gncyBjcm9zcy1heGlzIG9yIGEgZ3JpZCdzIGJsb2NrIGF4aXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgPGJhc2VsaW5lLXBvc2l0aW9uPiB8IDxjb250ZW50LWRpc3RyaWJ1dGlvbj4gfCA8b3ZlcmZsb3ctcG9zaXRpb24+PyA8Y29udGVudC1wb3NpdGlvbj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKi8KICBXZWJraXRBbGlnbkNvbnRlbnQ/OiBQcm9wZXJ0eS5BbGlnbkNvbnRlbnQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIENTUyAqKmBhbGlnbi1pdGVtc2AqKiBwcm9wZXJ0eSBzZXRzIHRoZSBgYWxpZ24tc2VsZmAgdmFsdWUgb24gYWxsIGRpcmVjdCBjaGlsZHJlbiBhcyBhIGdyb3VwLiBJbiBGbGV4Ym94LCBpdCBjb250cm9scyB0aGUgYWxpZ25tZW50IG9mIGl0ZW1zIG9uIHRoZSBDcm9zcyBBeGlzLiBJbiBHcmlkIExheW91dCwgaXQgY29udHJvbHMgdGhlIGFsaWdubWVudCBvZiBpdGVtcyBvbiB0aGUgQmxvY2sgQXhpcyB3aXRoaW4gdGhlaXIgZ3JpZCBhcmVhLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IHN0cmV0Y2ggfCA8YmFzZWxpbmUtcG9zaXRpb24+IHwgWyA8b3ZlcmZsb3ctcG9zaXRpb24+PyA8c2VsZi1wb3NpdGlvbj4gXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqLwogIFdlYmtpdEFsaWduSXRlbXM/OiBQcm9wZXJ0eS5BbGlnbkl0ZW1zIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbGlnbi1zZWxmYCoqIENTUyBwcm9wZXJ0eSBvdmVycmlkZXMgYSBncmlkIG9yIGZsZXggaXRlbSdzIGBhbGlnbi1pdGVtc2AgdmFsdWUuIEluIEdyaWQsIGl0IGFsaWducyB0aGUgaXRlbSBpbnNpZGUgdGhlwqBncmlkIGFyZWEuIEluIEZsZXhib3gsIGl0IGFsaWducyB0aGUgaXRlbSBvbiB0aGUgY3Jvc3MgYXhpcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgbm9ybWFsIHwgc3RyZXRjaCB8IDxiYXNlbGluZS1wb3NpdGlvbj4gfCA8b3ZlcmZsb3ctcG9zaXRpb24+PyA8c2VsZi1wb3NpdGlvbj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgV2Via2l0QWxpZ25TZWxmPzogUHJvcGVydHkuQWxpZ25TZWxmIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tZGVsYXlgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgYW1vdW50IG9mIHRpbWUgdG8gd2FpdCBmcm9tIGFwcGx5aW5nIHRoZSBhbmltYXRpb24gdG8gYW4gZWxlbWVudCBiZWZvcmUgYmVnaW5uaW5nIHRvIHBlcmZvcm0gdGhlIGFuaW1hdGlvbi4gVGhlIGFuaW1hdGlvbiBjYW4gc3RhcnQgbGF0ZXIsIGltbWVkaWF0ZWx5IGZyb20gaXRzIGJlZ2lubmluZywgb3IgaW1tZWRpYXRlbHkgYW5kIHBhcnR3YXkgdGhyb3VnaCB0aGUgYW5pbWF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYDx0aW1lPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBzYAogICAqLwogIFdlYmtpdEFuaW1hdGlvbkRlbGF5PzogUHJvcGVydHkuQW5pbWF0aW9uRGVsYXk8VFRpbWU+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tZGlyZWN0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgYW4gYW5pbWF0aW9uIHNob3VsZCBwbGF5IGZvcndhcmQsIGJhY2t3YXJkLCBvciBhbHRlcm5hdGUgYmFjayBhbmQgZm9ydGggYmV0d2VlbiBwbGF5aW5nIHRoZSBzZXF1ZW5jZSBmb3J3YXJkIGFuZCBiYWNrd2FyZC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2luZ2xlLWFuaW1hdGlvbi1kaXJlY3Rpb24+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqLwogIFdlYmtpdEFuaW1hdGlvbkRpcmVjdGlvbj86IFByb3BlcnR5LkFuaW1hdGlvbkRpcmVjdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYW5pbWF0aW9uLWR1cmF0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBsZW5ndGggb2YgdGltZSB0aGF0IGFuIGFuaW1hdGlvbiB0YWtlcyB0byBjb21wbGV0ZSBvbmUgY3ljbGUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHRpbWU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMHNgCiAgICovCiAgV2Via2l0QW5pbWF0aW9uRHVyYXRpb24/OiBQcm9wZXJ0eS5BbmltYXRpb25EdXJhdGlvbjxUVGltZT4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbi1maWxsLW1vZGVgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IGEgQ1NTIGFuaW1hdGlvbiBhcHBsaWVzIHN0eWxlcyB0byBpdHMgdGFyZ2V0IGJlZm9yZSBhbmQgYWZ0ZXIgaXRzIGV4ZWN1dGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2luZ2xlLWFuaW1hdGlvbi1maWxsLW1vZGU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICBXZWJraXRBbmltYXRpb25GaWxsTW9kZT86IFByb3BlcnR5LkFuaW1hdGlvbkZpbGxNb2RlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBudW1iZXIgb2YgdGltZXMgYW4gYW5pbWF0aW9uIHNlcXVlbmNlIHNob3VsZCBiZSBwbGF5ZWQgYmVmb3JlIHN0b3BwaW5nLgogICAqCiAgICogKipTeW50YXgqKjogYDxzaW5nbGUtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudD4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAxYAogICAqLwogIFdlYmtpdEFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50PzogUHJvcGVydHkuQW5pbWF0aW9uSXRlcmF0aW9uQ291bnQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbi1uYW1lYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIG5hbWVzIG9mIG9uZSBvciBtb3JlIGBAa2V5ZnJhbWVzYCBhdC1ydWxlcyBkZXNjcmliaW5nIHRoZSBhbmltYXRpb24gb3IgYW5pbWF0aW9ucyB0byBhcHBseSB0byB0aGUgZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIG5vbmUgfCA8a2V5ZnJhbWVzLW5hbWU+IF0jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIFdlYmtpdEFuaW1hdGlvbk5hbWU/OiBQcm9wZXJ0eS5BbmltYXRpb25OYW1lIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tcGxheS1zdGF0ZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIGFuIGFuaW1hdGlvbiBpcyBydW5uaW5nIG9yIHBhdXNlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2luZ2xlLWFuaW1hdGlvbi1wbGF5LXN0YXRlPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHJ1bm5pbmdgCiAgICovCiAgV2Via2l0QW5pbWF0aW9uUGxheVN0YXRlPzogUHJvcGVydHkuQW5pbWF0aW9uUGxheVN0YXRlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBhbiBhbmltYXRpb24gcHJvZ3Jlc3NlcyB0aHJvdWdoIHRoZSBkdXJhdGlvbiBvZiBlYWNoIGN5Y2xlLgogICAqCiAgICogKipTeW50YXgqKjogYDxlYXNpbmctZnVuY3Rpb24+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgZWFzZWAKICAgKi8KICBXZWJraXRBbmltYXRpb25UaW1pbmdGdW5jdGlvbj86IFByb3BlcnR5LkFuaW1hdGlvblRpbWluZ0Z1bmN0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgKiphcHBlYXJhbmNlKipgIENTUyBwcm9wZXJ0eSBpcyB1c2VkIHRvIGRpc3BsYXkgYW4gZWxlbWVudCB1c2luZyBwbGF0Zm9ybS1uYXRpdmUgc3R5bGluZywgYmFzZWQgb24gdGhlIG9wZXJhdGluZyBzeXN0ZW0ncyB0aGVtZS4gVGhlICoqYC1tb3otYXBwZWFyYW5jZWAqKiBhbmQgKipgLXdlYmtpdC1hcHBlYXJhbmNlYCoqIHByb3BlcnRpZXMgYXJlIG5vbi1zdGFuZGFyZCB2ZXJzaW9ucyBvZiB0aGlzIHByb3BlcnR5LCB1c2VkIChyZXNwZWN0aXZlbHkpIGJ5IEdlY2tvIChGaXJlZm94KSBhbmQgYnkgV2ViS2l0LWJhc2VkIChlLmcuLCBTYWZhcmkpIGFuZCBCbGluay1iYXNlZCAoZS5nLiwgQ2hyb21lLCBPcGVyYSkgYnJvd3NlcnMgdG8gYWNoaWV2ZSB0aGUgc2FtZSB0aGluZy4gTm90ZSB0aGF0IEZpcmVmb3ggYW5kIEVkZ2UgYWxzbyBzdXBwb3J0ICoqYC13ZWJraXQtYXBwZWFyYW5jZWAqKiwgZm9yIGNvbXBhdGliaWxpdHkgcmVhc29ucy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgYnV0dG9uIHwgYnV0dG9uLWJldmVsIHwgY2FyZXQgfCBjaGVja2JveCB8IGRlZmF1bHQtYnV0dG9uIHwgaW5uZXItc3Bpbi1idXR0b24gfCBsaXN0Ym94IHwgbGlzdGl0ZW0gfCBtZWRpYS1jb250cm9scy1iYWNrZ3JvdW5kIHwgbWVkaWEtY29udHJvbHMtZnVsbHNjcmVlbi1iYWNrZ3JvdW5kIHwgbWVkaWEtY3VycmVudC10aW1lLWRpc3BsYXkgfCBtZWRpYS1lbnRlci1mdWxsc2NyZWVuLWJ1dHRvbiB8IG1lZGlhLWV4aXQtZnVsbHNjcmVlbi1idXR0b24gfCBtZWRpYS1mdWxsc2NyZWVuLWJ1dHRvbiB8IG1lZGlhLW11dGUtYnV0dG9uIHwgbWVkaWEtb3ZlcmxheS1wbGF5LWJ1dHRvbiB8IG1lZGlhLXBsYXktYnV0dG9uIHwgbWVkaWEtc2Vlay1iYWNrLWJ1dHRvbiB8IG1lZGlhLXNlZWstZm9yd2FyZC1idXR0b24gfCBtZWRpYS1zbGlkZXIgfCBtZWRpYS1zbGlkZXJ0aHVtYiB8IG1lZGlhLXRpbWUtcmVtYWluaW5nLWRpc3BsYXkgfCBtZWRpYS10b2dnbGUtY2xvc2VkLWNhcHRpb25zLWJ1dHRvbiB8IG1lZGlhLXZvbHVtZS1zbGlkZXIgfCBtZWRpYS12b2x1bWUtc2xpZGVyLWNvbnRhaW5lciB8IG1lZGlhLXZvbHVtZS1zbGlkZXJ0aHVtYiB8IG1lbnVsaXN0IHwgbWVudWxpc3QtYnV0dG9uIHwgbWVudWxpc3QtdGV4dCB8IG1lbnVsaXN0LXRleHRmaWVsZCB8IG1ldGVyIHwgcHJvZ3Jlc3MtYmFyIHwgcHJvZ3Jlc3MtYmFyLXZhbHVlIHwgcHVzaC1idXR0b24gfCByYWRpbyB8IHNlYXJjaGZpZWxkIHwgc2VhcmNoZmllbGQtY2FuY2VsLWJ1dHRvbiB8IHNlYXJjaGZpZWxkLWRlY29yYXRpb24gfCBzZWFyY2hmaWVsZC1yZXN1bHRzLWJ1dHRvbiB8IHNlYXJjaGZpZWxkLXJlc3VsdHMtZGVjb3JhdGlvbiB8IHNsaWRlci1ob3Jpem9udGFsIHwgc2xpZGVyLXZlcnRpY2FsIHwgc2xpZGVydGh1bWItaG9yaXpvbnRhbCB8IHNsaWRlcnRodW1iLXZlcnRpY2FsIHwgc3F1YXJlLWJ1dHRvbiB8IHRleHRhcmVhIHwgdGV4dGZpZWxkIHwgLWFwcGxlLXBheS1idXR0b25gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgIChidXQgdGhpcyB2YWx1ZSBpcyBvdmVycmlkZGVuIGluIHRoZSB1c2VyIGFnZW50IENTUykKICAgKi8KICBXZWJraXRBcHBlYXJhbmNlPzogUHJvcGVydHkuV2Via2l0QXBwZWFyYW5jZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmFja2Ryb3AtZmlsdGVyYCoqIENTUyBwcm9wZXJ0eSBsZXRzIHlvdSBhcHBseSBncmFwaGljYWwgZWZmZWN0cyBzdWNoIGFzIGJsdXJyaW5nIG9yIGNvbG9yIHNoaWZ0aW5nIHRvIHRoZSBhcmVhIGJlaGluZCBhbiBlbGVtZW50LiBCZWNhdXNlIGl0IGFwcGxpZXMgdG8gZXZlcnl0aGluZyBfYmVoaW5kXyB0aGUgZWxlbWVudCwgdG8gc2VlIHRoZSBlZmZlY3QgeW91IG11c3QgbWFrZSB0aGUgZWxlbWVudCBvciBpdHMgYmFja2dyb3VuZCBhdCBsZWFzdCBwYXJ0aWFsbHkgdHJhbnNwYXJlbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxmaWx0ZXItZnVuY3Rpb24tbGlzdD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgV2Via2l0QmFja2Ryb3BGaWx0ZXI/OiBQcm9wZXJ0eS5CYWNrZHJvcEZpbHRlciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmFja2ZhY2UtdmlzaWJpbGl0eWAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIHRoZSBiYWNrIGZhY2Ugb2YgYW4gZWxlbWVudCBpcyB2aXNpYmxlIHdoZW4gdHVybmVkIHRvd2FyZHMgdGhlIHVzZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgdmlzaWJsZSB8IGhpZGRlbmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgdmlzaWJsZWAKICAgKi8KICBXZWJraXRCYWNrZmFjZVZpc2liaWxpdHk/OiBQcm9wZXJ0eS5CYWNrZmFjZVZpc2liaWxpdHkgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJhY2tncm91bmQtY2xpcGAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIGFuIGVsZW1lbnQncyBiYWNrZ3JvdW5kIGV4dGVuZHMgdW5kZXJuZWF0aCBpdHMgYm9yZGVyIGJveCwgcGFkZGluZyBib3gsIG9yIGNvbnRlbnQgYm94LgogICAqCiAgICogKipTeW50YXgqKjogYDxib3g+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYm9yZGVyLWJveGAKICAgKi8KICBXZWJraXRCYWNrZ3JvdW5kQ2xpcD86IFByb3BlcnR5LkJhY2tncm91bmRDbGlwIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBiYWNrZ3JvdW5kLW9yaWdpbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgYmFja2dyb3VuZCdzIG9yaWdpbjogZnJvbSB0aGUgYm9yZGVyIHN0YXJ0LCBpbnNpZGUgdGhlIGJvcmRlciwgb3IgaW5zaWRlIHRoZSBwYWRkaW5nLgogICAqCiAgICogKipTeW50YXgqKjogYDxib3g+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgcGFkZGluZy1ib3hgCiAgICovCiAgV2Via2l0QmFja2dyb3VuZE9yaWdpbj86IFByb3BlcnR5LkJhY2tncm91bmRPcmlnaW4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJhY2tncm91bmQtc2l6ZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgc2l6ZSBvZiB0aGUgZWxlbWVudCdzIGJhY2tncm91bmQgaW1hZ2UuIFRoZSBpbWFnZSBjYW4gYmUgbGVmdCB0byBpdHMgbmF0dXJhbCBzaXplLCBzdHJldGNoZWQsIG9yIGNvbnN0cmFpbmVkIHRvIGZpdCB0aGUgYXZhaWxhYmxlIHNwYWNlLgogICAqCiAgICogKipTeW50YXgqKjogYDxiZy1zaXplPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG8gYXV0b2AKICAgKi8KICBXZWJraXRCYWNrZ3JvdW5kU2l6ZT86IFByb3BlcnR5LkJhY2tncm91bmRTaXplPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjdXJyZW50Y29sb3JgCiAgICovCiAgV2Via2l0Qm9yZGVyQmVmb3JlQ29sb3I/OiBQcm9wZXJ0eS5XZWJraXRCb3JkZXJCZWZvcmVDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItc3R5bGUnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICBXZWJraXRCb3JkZXJCZWZvcmVTdHlsZT86IFByb3BlcnR5LldlYmtpdEJvcmRlckJlZm9yZVN0eWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci13aWR0aCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBtZWRpdW1gCiAgICovCiAgV2Via2l0Qm9yZGVyQmVmb3JlV2lkdGg/OiBQcm9wZXJ0eS5XZWJraXRCb3JkZXJCZWZvcmVXaWR0aDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1c2AqKiBDU1MgcHJvcGVydHkgcm91bmRzIHRoZSBib3R0b20tbGVmdCBjb3JuZXIgb2YgYW4gZWxlbWVudCBieSBzcGVjaWZ5aW5nIHRoZSByYWRpdXMgKG9yIHRoZSByYWRpdXMgb2YgdGhlIHNlbWktbWFqb3IgYW5kIHNlbWktbWlub3IgYXhlcykgb2YgdGhlIGVsbGlwc2UgZGVmaW5pbmcgdGhlIGN1cnZhdHVyZSBvZiB0aGUgY29ybmVyLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGgtcGVyY2VudGFnZT57MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKi8KICBXZWJraXRCb3JkZXJCb3R0b21MZWZ0UmFkaXVzPzogUHJvcGVydHkuQm9yZGVyQm90dG9tTGVmdFJhZGl1czxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXNgKiogQ1NTIHByb3BlcnR5IHJvdW5kcyB0aGUgYm90dG9tLXJpZ2h0IGNvcm5lciBvZiBhbiBlbGVtZW50IGJ5IHNwZWNpZnlpbmcgdGhlIHJhZGl1cyAob3IgdGhlIHJhZGl1cyBvZiB0aGUgc2VtaS1tYWpvciBhbmQgc2VtaS1taW5vciBheGVzKSBvZiB0aGUgZWxsaXBzZSBkZWZpbmluZyB0aGUgY3VydmF0dXJlIG9mIHRoZSBjb3JuZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aC1wZXJjZW50YWdlPnsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqLwogIFdlYmtpdEJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzPzogUHJvcGVydHkuQm9yZGVyQm90dG9tUmlnaHRSYWRpdXM8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbWFnZS1zbGljZWAqKiBDU1MgcHJvcGVydHkgZGl2aWRlcyB0aGUgaW1hZ2Ugc3BlY2lmaWVkIGJ5IGBib3JkZXItaW1hZ2Utc291cmNlYCBpbnRvIHJlZ2lvbnMuIFRoZXNlIHJlZ2lvbnMgZm9ybSB0aGUgY29tcG9uZW50cyBvZiBhbiBlbGVtZW50J3MgYm9yZGVyIGltYWdlLgogICAqCiAgICogKipTeW50YXgqKjogYDxudW1iZXItcGVyY2VudGFnZT57MSw0fSAmJiBmaWxsP2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMTAwJWAKICAgKi8KICBXZWJraXRCb3JkZXJJbWFnZVNsaWNlPzogUHJvcGVydHkuQm9yZGVySW1hZ2VTbGljZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1c2AqKiBDU1MgcHJvcGVydHkgcm91bmRzIHRoZSB0b3AtbGVmdCBjb3JuZXIgb2YgYW4gZWxlbWVudCBieSBzcGVjaWZ5aW5nIHRoZSByYWRpdXMgKG9yIHRoZSByYWRpdXMgb2YgdGhlIHNlbWktbWFqb3IgYW5kIHNlbWktbWlub3IgYXhlcykgb2YgdGhlIGVsbGlwc2UgZGVmaW5pbmcgdGhlIGN1cnZhdHVyZSBvZiB0aGUgY29ybmVyLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGgtcGVyY2VudGFnZT57MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKi8KICBXZWJraXRCb3JkZXJUb3BMZWZ0UmFkaXVzPzogUHJvcGVydHkuQm9yZGVyVG9wTGVmdFJhZGl1czxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXNgKiogQ1NTIHByb3BlcnR5IHJvdW5kcyB0aGUgdG9wLXJpZ2h0IGNvcm5lciBvZiBhbiBlbGVtZW50IGJ5IHNwZWNpZnlpbmcgdGhlIHJhZGl1cyAob3IgdGhlIHJhZGl1cyBvZiB0aGUgc2VtaS1tYWpvciBhbmQgc2VtaS1taW5vciBheGVzKSBvZiB0aGUgZWxsaXBzZSBkZWZpbmluZyB0aGUgY3VydmF0dXJlIG9mIHRoZSBjb3JuZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aC1wZXJjZW50YWdlPnsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqLwogIFdlYmtpdEJvcmRlclRvcFJpZ2h0UmFkaXVzPzogUHJvcGVydHkuQm9yZGVyVG9wUmlnaHRSYWRpdXM8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJveC1kZWNvcmF0aW9uLWJyZWFrYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgaG93IGFuIGVsZW1lbnQncyBmcmFnbWVudHMgc2hvdWxkIGJlIHJlbmRlcmVkIHdoZW4gYnJva2VuIGFjcm9zcyBtdWx0aXBsZSBsaW5lcywgY29sdW1ucywgb3IgcGFnZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgc2xpY2UgfCBjbG9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc2xpY2VgCiAgICovCiAgV2Via2l0Qm94RGVjb3JhdGlvbkJyZWFrPzogUHJvcGVydHkuQm94RGVjb3JhdGlvbkJyZWFrIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtd2Via2l0LWJveC1yZWZsZWN0YCoqIENTUyBwcm9wZXJ0eSBsZXRzIHlvdSByZWZsZWN0IHRoZSBjb250ZW50IG9mIGFuIGVsZW1lbnQgaW4gb25lIHNwZWNpZmljIGRpcmVjdGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIGFib3ZlIHwgYmVsb3cgfCByaWdodCB8IGxlZnQgXT8gPGxlbmd0aD4/IDxpbWFnZT4/YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIFdlYmtpdEJveFJlZmxlY3Q/OiBQcm9wZXJ0eS5XZWJraXRCb3hSZWZsZWN0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3gtc2hhZG93YCoqIENTUyBwcm9wZXJ0eSBhZGRzIHNoYWRvdyBlZmZlY3RzIGFyb3VuZCBhbiBlbGVtZW50J3MgZnJhbWUuIFlvdSBjYW4gc2V0IG11bHRpcGxlIGVmZmVjdHMgc2VwYXJhdGVkIGJ5IGNvbW1hcy4gQSBib3ggc2hhZG93IGlzIGRlc2NyaWJlZCBieSBYIGFuZCBZIG9mZnNldHMgcmVsYXRpdmUgdG8gdGhlIGVsZW1lbnQsIGJsdXIgYW5kIHNwcmVhZCByYWRpdXMsIGFuZCBjb2xvci4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPHNoYWRvdz4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIFdlYmtpdEJveFNoYWRvdz86IFByb3BlcnR5LkJveFNoYWRvdyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LXNpemluZ2AqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgdGhlIHRvdGFsIHdpZHRoIGFuZCBoZWlnaHQgb2YgYW4gZWxlbWVudCBpcyBjYWxjdWxhdGVkLgogICAqCiAgICogKipTeW50YXgqKjogYGNvbnRlbnQtYm94IHwgYm9yZGVyLWJveGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY29udGVudC1ib3hgCiAgICovCiAgV2Via2l0Qm94U2l6aW5nPzogUHJvcGVydHkuQm94U2l6aW5nIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgKipjbGlwLXBhdGgqKmAgQ1NTIHByb3BlcnR5IGNyZWF0ZXMgYSBjbGlwcGluZyByZWdpb24gdGhhdCBzZXRzIHdoYXQgcGFydCBvZiBhbiBlbGVtZW50IHNob3VsZCBiZSBzaG93bi4gUGFydHMgdGhhdCBhcmUgaW5zaWRlIHRoZSByZWdpb24gYXJlIHNob3duLCB3aGlsZSB0aG9zZSBvdXRzaWRlIGFyZSBoaWRkZW4uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGNsaXAtc291cmNlPiB8IFsgPGJhc2ljLXNoYXBlPiB8fCA8Z2VvbWV0cnktYm94PiBdIHwgbm9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICBXZWJraXRDbGlwUGF0aD86IFByb3BlcnR5LkNsaXBQYXRoIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2x1bW4tY291bnRgKiogQ1NTIHByb3BlcnR5IGJyZWFrcyBhbiBlbGVtZW50J3MgY29udGVudCBpbnRvIHRoZSBzcGVjaWZpZWQgbnVtYmVyIG9mIGNvbHVtbnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGludGVnZXI+IHwgYXV0b2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICBXZWJraXRDb2x1bW5Db3VudD86IFByb3BlcnR5LkNvbHVtbkNvdW50IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2x1bW4tZmlsbGAqKiBDU1MgcHJvcGVydHkgY29udHJvbHMgaG93IGFuIGVsZW1lbnQncyBjb250ZW50cyBhcmUgYmFsYW5jZWQgd2hlbiBicm9rZW4gaW50byBjb2x1bW5zLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBiYWxhbmNlIHwgYmFsYW5jZS1hbGxgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGJhbGFuY2VgCiAgICovCiAgV2Via2l0Q29sdW1uRmlsbD86IFByb3BlcnR5LkNvbHVtbkZpbGwgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi1nYXBgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHNpemUgb2YgdGhlIGdhcCAoZ3V0dGVyKSBiZXR3ZWVuIGFuIGVsZW1lbnQncyBjb2x1bW5zLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IDxsZW5ndGgtcGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKi8KICBXZWJraXRDb2x1bW5HYXA/OiBQcm9wZXJ0eS5Db2x1bW5HYXA8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi1ydWxlLWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBjb2xvciBvZiB0aGUgbGluZSBkcmF3biBiZXR3ZWVuIGNvbHVtbnMgaW4gYSBtdWx0aS1jb2x1bW4gbGF5b3V0LgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGN1cnJlbnRjb2xvcmAKICAgKi8KICBXZWJraXRDb2x1bW5SdWxlQ29sb3I/OiBQcm9wZXJ0eS5Db2x1bW5SdWxlQ29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi1ydWxlLXN0eWxlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBzdHlsZSBvZiB0aGUgbGluZSBkcmF3biBiZXR3ZWVuIGNvbHVtbnMgaW4gYSBtdWx0aS1jb2x1bW4gbGF5b3V0LgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXN0eWxlJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgV2Via2l0Q29sdW1uUnVsZVN0eWxlPzogUHJvcGVydHkuQ29sdW1uUnVsZVN0eWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2x1bW4tcnVsZS13aWR0aGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgd2lkdGggb2YgdGhlIGxpbmUgZHJhd24gYmV0d2VlbiBjb2x1bW5zIGluIGEgbXVsdGktY29sdW1uIGxheW91dC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci13aWR0aCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBtZWRpdW1gCiAgICovCiAgV2Via2l0Q29sdW1uUnVsZVdpZHRoPzogUHJvcGVydHkuQ29sdW1uUnVsZVdpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2x1bW4tc3BhbmAqKiBDU1MgcHJvcGVydHkgbWFrZXMgaXQgcG9zc2libGUgZm9yIGFuIGVsZW1lbnQgdG8gc3BhbiBhY3Jvc3MgYWxsIGNvbHVtbnMgd2hlbiBpdHMgdmFsdWUgaXMgc2V0IHRvIGBhbGxgLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBhbGxgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgV2Via2l0Q29sdW1uU3Bhbj86IFByb3BlcnR5LkNvbHVtblNwYW4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi13aWR0aGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgaWRlYWwgY29sdW1uIHdpZHRoIGluIGEgbXVsdGktY29sdW1uIGxheW91dC4gVGhlIGNvbnRhaW5lciB3aWxsIGhhdmUgYXMgbWFueSBjb2x1bW5zIGFzIGNhbiBmaXQgd2l0aG91dCBhbnkgb2YgdGhlbSBoYXZpbmcgYSB3aWR0aCBsZXNzIHRoYW4gdGhlIGBjb2x1bW4td2lkdGhgIHZhbHVlLiBJZiB0aGUgd2lkdGggb2YgdGhlIGNvbnRhaW5lciBpcyBuYXJyb3dlciB0aGFuIHRoZSBzcGVjaWZpZWQgdmFsdWUsIHRoZSBzaW5nbGUgY29sdW1uJ3Mgd2lkdGggd2lsbCBiZSBzbWFsbGVyIHRoYW4gdGhlIGRlY2xhcmVkIGNvbHVtbiB3aWR0aC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPiB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgV2Via2l0Q29sdW1uV2lkdGg/OiBQcm9wZXJ0eS5Db2x1bW5XaWR0aDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZmlsdGVyYCoqIENTUyBwcm9wZXJ0eSBhcHBsaWVzIGdyYXBoaWNhbCBlZmZlY3RzIGxpa2UgYmx1ciBvciBjb2xvciBzaGlmdCB0byBhbiBlbGVtZW50LiBGaWx0ZXJzIGFyZSBjb21tb25seSB1c2VkIHRvIGFkanVzdCB0aGUgcmVuZGVyaW5nIG9mIGltYWdlcywgYmFja2dyb3VuZHMsIGFuZCBib3JkZXJzLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8ZmlsdGVyLWZ1bmN0aW9uLWxpc3Q+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIFdlYmtpdEZpbHRlcj86IFByb3BlcnR5LkZpbHRlciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZmxleC1iYXNpc2AqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgaW5pdGlhbCBtYWluIHNpemUgb2YgYSBmbGV4IGl0ZW0uIEl0IHNldHMgdGhlIHNpemUgb2YgdGhlIGNvbnRlbnQgYm94IHVubGVzcyBvdGhlcndpc2Ugc2V0IHdpdGggYGJveC1zaXppbmdgLgogICAqCiAgICogKipTeW50YXgqKjogYGNvbnRlbnQgfCA8J3dpZHRoJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgV2Via2l0RmxleEJhc2lzPzogUHJvcGVydHkuRmxleEJhc2lzPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmbGV4LWRpcmVjdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgZmxleCBpdGVtcyBhcmUgcGxhY2VkIGluIHRoZSBmbGV4IGNvbnRhaW5lciBkZWZpbmluZyB0aGUgbWFpbiBheGlzIGFuZCB0aGUgZGlyZWN0aW9uIChub3JtYWwgb3IgcmV2ZXJzZWQpLgogICAqCiAgICogKipTeW50YXgqKjogYHJvdyB8IHJvdy1yZXZlcnNlIHwgY29sdW1uIHwgY29sdW1uLXJldmVyc2VgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHJvd2AKICAgKi8KICBXZWJraXRGbGV4RGlyZWN0aW9uPzogUHJvcGVydHkuRmxleERpcmVjdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZmxleC1ncm93YCoqIENTU8KgcHJvcGVydHkgc2V0cyB0aGUgZmxleCBncm93IGZhY3RvciBvZiBhIGZsZXggaXRlbSBtYWluIHNpemUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPG51bWJlcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgV2Via2l0RmxleEdyb3c/OiBQcm9wZXJ0eS5GbGV4R3JvdyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZmxleC1zaHJpbmtgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGZsZXggc2hyaW5rIGZhY3RvciBvZiBhIGZsZXggaXRlbS4gSWYgdGhlIHNpemUgb2YgYWxsIGZsZXggaXRlbXMgaXMgbGFyZ2VyIHRoYW4gdGhlIGZsZXggY29udGFpbmVyLCBpdGVtcyBzaHJpbmsgdG8gZml0IGFjY29yZGluZyB0byBgZmxleC1zaHJpbmtgLgogICAqCiAgICogKipTeW50YXgqKjogYDxudW1iZXI+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAxYAogICAqLwogIFdlYmtpdEZsZXhTaHJpbms/OiBQcm9wZXJ0eS5GbGV4U2hyaW5rIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmbGV4LXdyYXBgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hldGhlciBmbGV4IGl0ZW1zIGFyZSBmb3JjZWQgb250byBvbmUgbGluZSBvciBjYW4gd3JhcCBvbnRvIG11bHRpcGxlIGxpbmVzLiBJZiB3cmFwcGluZyBpcyBhbGxvd2VkLCBpdCBzZXRzIHRoZSBkaXJlY3Rpb24gdGhhdCBsaW5lcyBhcmUgc3RhY2tlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3dyYXAgfCB3cmFwIHwgd3JhcC1yZXZlcnNlYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3dyYXBgCiAgICovCiAgV2Via2l0RmxleFdyYXA/OiBQcm9wZXJ0eS5GbGV4V3JhcCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZm9udC1mZWF0dXJlLXNldHRpbmdzYCoqIENTUyBwcm9wZXJ0eSBjb250cm9scyBhZHZhbmNlZCB0eXBvZ3JhcGhpYyBmZWF0dXJlcyBpbiBPcGVuVHlwZSBmb250cy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCA8ZmVhdHVyZS10YWctdmFsdWU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqLwogIFdlYmtpdEZvbnRGZWF0dXJlU2V0dGluZ3M/OiBQcm9wZXJ0eS5Gb250RmVhdHVyZVNldHRpbmdzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb250LWtlcm5pbmdgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHVzZSBvZiB0aGUga2VybmluZyBpbmZvcm1hdGlvbiBzdG9yZWQgaW4gYSBmb250LgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBub3JtYWwgfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqLwogIFdlYmtpdEZvbnRLZXJuaW5nPzogUHJvcGVydHkuRm9udEtlcm5pbmcgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQtc21vb3RoYCoqIENTUyBwcm9wZXJ0eSBjb250cm9scyB0aGUgYXBwbGljYXRpb24gb2YgYW50aS1hbGlhc2luZyB3aGVuIGZvbnRzIGFyZSByZW5kZXJlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgbmV2ZXIgfCBhbHdheXMgfCA8YWJzb2x1dGUtc2l6ZT4gfCA8bGVuZ3RoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICBXZWJraXRGb250U21vb3RoaW5nPzogUHJvcGVydHkuRm9udFNtb290aDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZm9udC12YXJpYW50LWxpZ2F0dXJlc2AqKiBDU1MgcHJvcGVydHkgY29udHJvbHMgd2hpY2ggbGlnYXR1cmVzIGFuZCBjb250ZXh0dWFsIGZvcm1zIGFyZSB1c2VkIGluIHRleHR1YWwgY29udGVudCBvZiB0aGUgZWxlbWVudHMgaXQgYXBwbGllcyB0by4gVGhpcyBsZWFkcyB0byBtb3JlIGhhcm1vbml6ZWQgZm9ybXMgaW4gdGhlIHJlc3VsdGluZyB0ZXh0LgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IG5vbmUgfCBbIDxjb21tb24tbGlnLXZhbHVlcz4gfHwgPGRpc2NyZXRpb25hcnktbGlnLXZhbHVlcz4gfHwgPGhpc3RvcmljYWwtbGlnLXZhbHVlcz4gfHwgPGNvbnRleHR1YWwtYWx0LXZhbHVlcz4gXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqLwogIFdlYmtpdEZvbnRWYXJpYW50TGlnYXR1cmVzPzogUHJvcGVydHkuRm9udFZhcmlhbnRMaWdhdHVyZXMgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGh5cGhlbnNgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyBob3cgd29yZHMgc2hvdWxkIGJlIGh5cGhlbmF0ZWQgd2hlbiB0ZXh0IHdyYXBzIGFjcm9zcyBtdWx0aXBsZSBsaW5lcy4gSXQgY2FuIHByZXZlbnQgaHlwaGVuYXRpb24gZW50aXJlbHksIGh5cGhlbmF0ZSBhdCBtYW51YWxseS1zcGVjaWZpZWQgcG9pbnRzIHdpdGhpbiB0aGUgdGV4dCwgb3IgbGV0IHRoZSBicm93c2VyIGF1dG9tYXRpY2FsbHkgaW5zZXJ0IGh5cGhlbnMgd2hlcmUgYXBwcm9wcmlhdGUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IG1hbnVhbCB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG1hbnVhbGAKICAgKi8KICBXZWJraXRIeXBoZW5zPzogUHJvcGVydHkuSHlwaGVucyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYGluaXRpYWwtbGV0dGVyYCBDU1MgcHJvcGVydHkgc2V0cyBzdHlsaW5nIGZvciBkcm9wcGVkLCByYWlzZWQsIGFuZCBzdW5rZW4gaW5pdGlhbCBsZXR0ZXJzLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IFsgPG51bWJlcj4gPGludGVnZXI+PyBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICovCiAgV2Via2l0SW5pdGlhbExldHRlcj86IFByb3BlcnR5LkluaXRpYWxMZXR0ZXIgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIENTUyAqKmBqdXN0aWZ5LWNvbnRlbnRgKiogcHJvcGVydHkgZGVmaW5lcyBob3cgdGhlIGJyb3dzZXIgZGlzdHJpYnV0ZXMgc3BhY2UgYmV0d2VlbiBhbmQgYXJvdW5kIGNvbnRlbnQgaXRlbXMgYWxvbmcgdGhlIG1haW4tYXhpcyBvZiBhIGZsZXggY29udGFpbmVyLCBhbmQgdGhlIGlubGluZSBheGlzIG9mIGEgZ3JpZCBjb250YWluZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgPGNvbnRlbnQtZGlzdHJpYnV0aW9uPiB8IDxvdmVyZmxvdy1wb3NpdGlvbj4/IFsgPGNvbnRlbnQtcG9zaXRpb24+IHwgbGVmdCB8IHJpZ2h0IF1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKi8KICBXZWJraXRKdXN0aWZ5Q29udGVudD86IFByb3BlcnR5Lkp1c3RpZnlDb250ZW50IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBsaW5lLWJyZWFrYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyB0byBicmVhayBsaW5lcyBvZiBDaGluZXNlLCBKYXBhbmVzZSwgb3IgS29yZWFuIChDSkspIHRleHQgd2hlbiB3b3JraW5nIHdpdGggcHVuY3R1YXRpb24gYW5kIHN5bWJvbHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IGxvb3NlIHwgbm9ybWFsIHwgc3RyaWN0IHwgYW55d2hlcmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgV2Via2l0TGluZUJyZWFrPzogUHJvcGVydHkuTGluZUJyZWFrIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtd2Via2l0LWxpbmUtY2xhbXBgKiogQ1NTIHByb3BlcnR5IGFsbG93cyBsaW1pdGluZyBvZiB0aGUgY29udGVudHMgb2YgYSBibG9jayBjb250YWluZXIgdG8gdGhlIHNwZWNpZmllZCBudW1iZXIgb2YgbGluZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxpbnRlZ2VyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICBXZWJraXRMaW5lQ2xhbXA/OiBQcm9wZXJ0eS5XZWJraXRMaW5lQ2xhbXAgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hcmdpbi1pbmxpbmUtZW5kYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIGlubGluZSBlbmQgbWFyZ2luIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBtYXJnaW4gZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEluIG90aGVyIHdvcmRzLCBpdCBjb3JyZXNwb25kcyB0byB0aGUgYG1hcmdpbi10b3BgLCBgbWFyZ2luLXJpZ2h0YCwgYG1hcmdpbi1ib3R0b21gIG9yIGBtYXJnaW4tbGVmdGAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnbWFyZ2luLWxlZnQnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKi8KICBXZWJraXRNYXJnaW5FbmQ/OiBQcm9wZXJ0eS5NYXJnaW5JbmxpbmVFbmQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hcmdpbi1pbmxpbmUtc3RhcnRgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgaW5saW5lIHN0YXJ0IG1hcmdpbiBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgbWFyZ2luIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYG1hcmdpbi10b3BgLCBgbWFyZ2luLXJpZ2h0YCwgYG1hcmdpbi1ib3R0b21gLCBvciBgbWFyZ2luLWxlZnRgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J21hcmdpbi1sZWZ0Jz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgV2Via2l0TWFyZ2luU3RhcnQ/OiBQcm9wZXJ0eS5NYXJnaW5JbmxpbmVTdGFydDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBJZiBhIGAtd2Via2l0LW1hc2staW1hZ2VgIGlzIHNwZWNpZmllZCwgYC13ZWJraXQtbWFzay1hdHRhY2htZW50YCBkZXRlcm1pbmVzIHdoZXRoZXIgdGhlIG1hc2sgaW1hZ2UncyBwb3NpdGlvbiBpcyBmaXhlZCB3aXRoaW4gdGhlIHZpZXdwb3J0LCBvciBzY3JvbGxzIGFsb25nIHdpdGggaXRzIGNvbnRhaW5pbmcgYmxvY2suCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGF0dGFjaG1lbnQ+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc2Nyb2xsYAogICAqLwogIFdlYmtpdE1hc2tBdHRhY2htZW50PzogUHJvcGVydHkuV2Via2l0TWFza0F0dGFjaG1lbnQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hc2stYm9yZGVyLW91dHNldGAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHRoZSBkaXN0YW5jZSBieSB3aGljaCBhbiBlbGVtZW50J3MgbWFzayBib3JkZXIgaXMgc2V0IG91dCBmcm9tIGl0cyBib3JkZXIgYm94LgogICAqCiAgICogKipTeW50YXgqKjogYFsgPGxlbmd0aD4gfCA8bnVtYmVyPiBdezEsNH1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgV2Via2l0TWFza0JveEltYWdlT3V0c2V0PzogUHJvcGVydHkuTWFza0JvcmRlck91dHNldDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1ib3JkZXItcmVwZWF0YCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyB0aGUgZWRnZSByZWdpb25zIG9mIGEgc291cmNlIGltYWdlIGFyZSBhZGp1c3RlZCB0byBmaXQgdGhlIGRpbWVuc2lvbnMgb2YgYW4gZWxlbWVudCdzIG1hc2sgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYFsgc3RyZXRjaCB8IHJlcGVhdCB8IHJvdW5kIHwgc3BhY2UgXXsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzdHJldGNoYAogICAqLwogIFdlYmtpdE1hc2tCb3hJbWFnZVJlcGVhdD86IFByb3BlcnR5Lk1hc2tCb3JkZXJSZXBlYXQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hc2stYm9yZGVyLXNsaWNlYCoqIENTUyBwcm9wZXJ0eSBkaXZpZGVzIHRoZSBpbWFnZSBzZXQgYnkgYG1hc2stYm9yZGVyLXNvdXJjZWAgaW50byByZWdpb25zLiBUaGVzZSByZWdpb25zIGFyZSB1c2VkIHRvIGZvcm0gdGhlIGNvbXBvbmVudHMgb2YgYW4gZWxlbWVudCdzIG1hc2sgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYDxudW1iZXItcGVyY2VudGFnZT57MSw0fSBmaWxsP2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKi8KICBXZWJraXRNYXNrQm94SW1hZ2VTbGljZT86IFByb3BlcnR5Lk1hc2tCb3JkZXJTbGljZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1ib3JkZXItc291cmNlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBzb3VyY2UgaW1hZ2UgdXNlZCB0byBjcmVhdGUgYW4gZWxlbWVudCdzIG1hc2sgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8aW1hZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIFdlYmtpdE1hc2tCb3hJbWFnZVNvdXJjZT86IFByb3BlcnR5Lk1hc2tCb3JkZXJTb3VyY2UgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hc2stYm9yZGVyLXdpZHRoYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSB3aWR0aCBvZiBhbiBlbGVtZW50J3MgbWFzayBib3JkZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8bGVuZ3RoLXBlcmNlbnRhZ2U+IHwgPG51bWJlcj4gfCBhdXRvIF17MSw0fWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICBXZWJraXRNYXNrQm94SW1hZ2VXaWR0aD86IFByb3BlcnR5Lk1hc2tCb3JkZXJXaWR0aDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1jbGlwYCoqIENTUyBwcm9wZXJ0eSBkZXRlcm1pbmVzIHRoZSBhcmVhIHdoaWNoIGlzIGFmZmVjdGVkIGJ5IGEgbWFzay4gVGhlIHBhaW50ZWQgY29udGVudCBvZiBhbiBlbGVtZW50IG11c3QgYmUgcmVzdHJpY3RlZCB0byB0aGlzIGFyZWEuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8Ym94PiB8IGJvcmRlciB8IHBhZGRpbmcgfCBjb250ZW50IHwgdGV4dCBdI2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYm9yZGVyYAogICAqLwogIFdlYmtpdE1hc2tDbGlwPzogUHJvcGVydHkuV2Via2l0TWFza0NsaXAgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC13ZWJraXQtbWFzay1jb21wb3NpdGVgKiogcHJvcGVydHkgc3BlY2lmaWVzIHRoZSBtYW5uZXIgaW4gd2hpY2ggbXVsdGlwbGUgbWFzayBpbWFnZXMgYXBwbGllZCB0byB0aGUgc2FtZSBlbGVtZW50IGFyZSBjb21wb3NpdGVkIHdpdGggb25lIGFub3RoZXIuIE1hc2sgaW1hZ2VzIGFyZSBjb21wb3NpdGVkIGluIHRoZSBvcHBvc2l0ZSBvcmRlciB0aGF0IHRoZXkgYXJlIGRlY2xhcmVkIHdpdGggdGhlIGAtd2Via2l0LW1hc2staW1hZ2VgIHByb3BlcnR5LgogICAqCiAgICogKipTeW50YXgqKjogYDxjb21wb3NpdGUtc3R5bGU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc291cmNlLW92ZXJgCiAgICovCiAgV2Via2l0TWFza0NvbXBvc2l0ZT86IFByb3BlcnR5LldlYmtpdE1hc2tDb21wb3NpdGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hc2staW1hZ2VgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGltYWdlIHRoYXQgaXMgdXNlZCBhcyBtYXNrIGxheWVyIGZvciBhbiBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYDxtYXNrLXJlZmVyZW5jZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIFdlYmtpdE1hc2tJbWFnZT86IFByb3BlcnR5LldlYmtpdE1hc2tJbWFnZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1vcmlnaW5gKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG9yaWdpbiBvZiBhIG1hc2suCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8Ym94PiB8IGJvcmRlciB8IHBhZGRpbmcgfCBjb250ZW50IF0jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBwYWRkaW5nYAogICAqLwogIFdlYmtpdE1hc2tPcmlnaW4/OiBQcm9wZXJ0eS5XZWJraXRNYXNrT3JpZ2luIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXNrLXBvc2l0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBpbml0aWFsIHBvc2l0aW9uLCByZWxhdGl2ZSB0byB0aGUgbWFzayBwb3NpdGlvbiBsYXllciBzZXQgYnkgYG1hc2stb3JpZ2luYCwgZm9yIGVhY2ggZGVmaW5lZCBtYXNrIGltYWdlLgogICAqCiAgICogKipTeW50YXgqKjogYDxwb3NpdGlvbj4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwJSAwJWAKICAgKi8KICBXZWJraXRNYXNrUG9zaXRpb24/OiBQcm9wZXJ0eS5XZWJraXRNYXNrUG9zaXRpb248VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAtd2Via2l0LW1hc2stcG9zaXRpb24teGAgQ1NTIHByb3BlcnR5IHNldHMgdGhlIGluaXRpYWwgaG9yaXpvbnRhbCBwb3NpdGlvbiBvZiBhIG1hc2sgaW1hZ2UuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8bGVuZ3RoLXBlcmNlbnRhZ2U+IHwgbGVmdCB8IGNlbnRlciB8IHJpZ2h0IF0jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwJWAKICAgKi8KICBXZWJraXRNYXNrUG9zaXRpb25YPzogUHJvcGVydHkuV2Via2l0TWFza1Bvc2l0aW9uWDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYC13ZWJraXQtbWFzay1wb3NpdGlvbi15YCBDU1MgcHJvcGVydHkgc2V0cyB0aGUgaW5pdGlhbCB2ZXJ0aWNhbCBwb3NpdGlvbiBvZiBhIG1hc2sgaW1hZ2UuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8bGVuZ3RoLXBlcmNlbnRhZ2U+IHwgdG9wIHwgY2VudGVyIHwgYm90dG9tIF0jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwJWAKICAgKi8KICBXZWJraXRNYXNrUG9zaXRpb25ZPzogUHJvcGVydHkuV2Via2l0TWFza1Bvc2l0aW9uWTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1yZXBlYXRgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IG1hc2sgaW1hZ2VzIGFyZSByZXBlYXRlZC4gQSBtYXNrIGltYWdlIGNhbiBiZSByZXBlYXRlZCBhbG9uZyB0aGUgaG9yaXpvbnRhbCBheGlzLCB0aGUgdmVydGljYWwgYXhpcywgYm90aCBheGVzLCBvciBub3QgcmVwZWF0ZWQgYXQgYWxsLgogICAqCiAgICogKipTeW50YXgqKjogYDxyZXBlYXQtc3R5bGU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgcmVwZWF0YAogICAqLwogIFdlYmtpdE1hc2tSZXBlYXQ/OiBQcm9wZXJ0eS5XZWJraXRNYXNrUmVwZWF0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgLXdlYmtpdC1tYXNrLXJlcGVhdC14YCBwcm9wZXJ0eSBzcGVjaWZpZXMgd2hldGhlciBhbmQgaG93IGEgbWFzayBpbWFnZSBpcyByZXBlYXRlZCAodGlsZWQpIGhvcml6b250YWxseS4KICAgKgogICAqICoqU3ludGF4Kio6IGByZXBlYXQgfCBuby1yZXBlYXQgfCBzcGFjZSB8IHJvdW5kYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGByZXBlYXRgCiAgICovCiAgV2Via2l0TWFza1JlcGVhdFg/OiBQcm9wZXJ0eS5XZWJraXRNYXNrUmVwZWF0WCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYC13ZWJraXQtbWFzay1yZXBlYXQteWAgcHJvcGVydHkgc2V0cyB3aGV0aGVyIGFuZCBob3cgYSBtYXNrIGltYWdlIGlzIHJlcGVhdGVkICh0aWxlZCkgdmVydGljYWxseS4KICAgKgogICAqICoqU3ludGF4Kio6IGByZXBlYXQgfCBuby1yZXBlYXQgfCBzcGFjZSB8IHJvdW5kYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGByZXBlYXRgCiAgICovCiAgV2Via2l0TWFza1JlcGVhdFk/OiBQcm9wZXJ0eS5XZWJraXRNYXNrUmVwZWF0WSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1zaXplYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIHNpemVzIG9mIHRoZSBtYXNrIGltYWdlcy4gVGhlIHNpemUgb2YgdGhlIGltYWdlIGNhbiBiZSBmdWxseSBvciBwYXJ0aWFsbHkgY29uc3RyYWluZWQgaW4gb3JkZXIgdG8gcHJlc2VydmUgaXRzIGludHJpbnNpYyByYXRpby4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Ymctc2l6ZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvIGF1dG9gCiAgICovCiAgV2Via2l0TWFza1NpemU/OiBQcm9wZXJ0eS5XZWJraXRNYXNrU2l6ZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWF4LWlubGluZS1zaXplYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBob3Jpem9udGFsIG9yIHZlcnRpY2FsIG1heGltdW0gc2l6ZSBvZiBhbiBlbGVtZW50J3MgYmxvY2ssIGRlcGVuZGluZyBvbiBpdHMgd3JpdGluZyBtb2RlLiBJdCBjb3JyZXNwb25kcyB0byBlaXRoZXIgdGhlIGBtYXgtd2lkdGhgIG9yIHRoZSBgbWF4LWhlaWdodGAgcHJvcGVydHksIGRlcGVuZGluZyBvbiB0aGUgdmFsdWUgb2YgYHdyaXRpbmctbW9kZWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdtYXgtd2lkdGgnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKi8KICBXZWJraXRNYXhJbmxpbmVTaXplPzogUHJvcGVydHkuTWF4SW5saW5lU2l6ZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3JkZXJgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG9yZGVyIHRvIGxheSBvdXQgYW4gaXRlbSBpbiBhIGZsZXggb3IgZ3JpZCBjb250YWluZXIuIEl0ZW1zIGluIGEgY29udGFpbmVyIGFyZSBzb3J0ZWQgYnkgYXNjZW5kaW5nIGBvcmRlcmAgdmFsdWUgYW5kIHRoZW4gYnkgdGhlaXIgc291cmNlIGNvZGUgb3JkZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGludGVnZXI+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqLwogIFdlYmtpdE9yZGVyPzogUHJvcGVydHkuT3JkZXIgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZ2AgQ1NTIHByb3BlcnR5IGNvbnRyb2xzIHdoZXRoZXIgb3Igbm90IHRvdWNoIGRldmljZXMgdXNlIG1vbWVudHVtLWJhc2VkIHNjcm9sbGluZyBmb3IgYSBnaXZlbiBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCB0b3VjaGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICBXZWJraXRPdmVyZmxvd1Njcm9sbGluZz86IFByb3BlcnR5LldlYmtpdE92ZXJmbG93U2Nyb2xsaW5nIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwYWRkaW5nLWlubGluZS1lbmRgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgaW5saW5lIGVuZCBwYWRkaW5nIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBwYWRkaW5nIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYDwncGFkZGluZy1sZWZ0Jz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgV2Via2l0UGFkZGluZ0VuZD86IFByb3BlcnR5LlBhZGRpbmdJbmxpbmVFbmQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHBhZGRpbmctaW5saW5lLXN0YXJ0YCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIGlubGluZSBzdGFydCBwYWRkaW5nIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBwYWRkaW5nIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYDwncGFkZGluZy1sZWZ0Jz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgV2Via2l0UGFkZGluZ1N0YXJ0PzogUHJvcGVydHkuUGFkZGluZ0lubGluZVN0YXJ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwZXJzcGVjdGl2ZWAqKiBDU1MgcHJvcGVydHkgZGV0ZXJtaW5lcyB0aGUgZGlzdGFuY2UgYmV0d2VlbiB0aGUgej0wIHBsYW5lIGFuZCB0aGUgdXNlciBpbiBvcmRlciB0byBnaXZlIGEgM0QtcG9zaXRpb25lZCBlbGVtZW50IHNvbWUgcGVyc3BlY3RpdmUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIFdlYmtpdFBlcnNwZWN0aXZlPzogUHJvcGVydHkuUGVyc3BlY3RpdmU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHBlcnNwZWN0aXZlLW9yaWdpbmAqKiBDU1MgcHJvcGVydHkgZGV0ZXJtaW5lcyB0aGUgcG9zaXRpb24gYXQgd2hpY2ggdGhlIHZpZXdlciBpcyBsb29raW5nLiBJdCBpcyB1c2VkIGFzIHRoZSBfdmFuaXNoaW5nIHBvaW50XyBieSB0aGUgYHBlcnNwZWN0aXZlYCBwcm9wZXJ0eS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8cG9zaXRpb24+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGA1MCUgNTAlYAogICAqLwogIFdlYmtpdFBlcnNwZWN0aXZlT3JpZ2luPzogUHJvcGVydHkuUGVyc3BlY3RpdmVPcmlnaW48VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbG9yLWFkanVzdGAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGF0LCBpZiBhbnl0aGluZywgdGhlIHVzZXIgYWdlbnQgbWF5IGRvIHRvIG9wdGltaXplIHRoZSBhcHBlYXJhbmNlIG9mIHRoZSBlbGVtZW50IG9uIHRoZSBvdXRwdXQgZGV2aWNlLiBCeSBkZWZhdWx0LCB0aGUgYnJvd3NlciBpcyBhbGxvd2VkIHRvIG1ha2UgYW55IGFkanVzdG1lbnRzIHRvIHRoZSBlbGVtZW50J3MgYXBwZWFyYW5jZSBpdCBkZXRlcm1pbmVzIHRvIGJlIG5lY2Vzc2FyeSBhbmQgcHJ1ZGVudCBnaXZlbiB0aGUgdHlwZSBhbmQgY2FwYWJpbGl0aWVzIG9mIHRoZSBvdXRwdXQgZGV2aWNlLgogICAqCiAgICogKipTeW50YXgqKjogYGVjb25vbXkgfCBleGFjdGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgZWNvbm9teWAKICAgKi8KICBXZWJraXRQcmludENvbG9yQWRqdXN0PzogUHJvcGVydHkuQ29sb3JBZGp1c3QgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKnJ1YnktcG9zaXRpb24qKmAgQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIHBvc2l0aW9uIG9mIGEgcnVieSBlbGVtZW50IHJlbGF0aXZlcyB0byBpdHMgYmFzZSBlbGVtZW50LiBJdCBjYW4gYmUgcG9zaXRpb24gb3ZlciB0aGUgZWxlbWVudCAoYG92ZXJgKSwgdW5kZXIgaXQgKGB1bmRlcmApLCBvciBiZXR3ZWVuIHRoZSBjaGFyYWN0ZXJzLCBvbiB0aGVpciByaWdodCBzaWRlIChgaW50ZXItY2hhcmFjdGVyYCkuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyBhbHRlcm5hdGUgfHwgWyBvdmVyIHwgdW5kZXIgXSBdIHwgaW50ZXItY2hhcmFjdGVyYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhbHRlcm5hdGVgCiAgICovCiAgV2Via2l0UnVieVBvc2l0aW9uPzogUHJvcGVydHkuUnVieVBvc2l0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBzY3JvbGwtc25hcC10eXBlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBzdHJpY3RseSBzbmFwIHBvaW50cyBhcmUgZW5mb3JjZWQgb24gdGhlIHNjcm9sbCBjb250YWluZXIgaW4gY2FzZSB0aGVyZSBpcyBvbmUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IFsgeCB8IHkgfCBibG9jayB8IGlubGluZSB8IGJvdGggXSBbIG1hbmRhdG9yeSB8IHByb3hpbWl0eSBdP2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICBXZWJraXRTY3JvbGxTbmFwVHlwZT86IFByb3BlcnR5LlNjcm9sbFNuYXBUeXBlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBzaGFwZS1tYXJnaW5gKiogQ1NTIHByb3BlcnR5IHNldHMgYSBtYXJnaW4gZm9yIGEgQ1NTIHNoYXBlIGNyZWF0ZWQgdXNpbmcgYHNoYXBlLW91dHNpZGVgLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGgtcGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgV2Via2l0U2hhcGVNYXJnaW4/OiBQcm9wZXJ0eS5TaGFwZU1hcmdpbjxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiAqKmAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3JgKiogaXMgYSBub24tc3RhbmRhcmQgQ1NTIHByb3BlcnR5IHRoYXQgc2V0cyB0aGUgY29sb3Igb2YgdGhlIGhpZ2hsaWdodCB0aGF0IGFwcGVhcnMgb3ZlciBhIGxpbmsgd2hpbGUgaXQncyBiZWluZyB0YXBwZWQuIFRoZSBoaWdobGlnaHRpbmcgaW5kaWNhdGVzIHRvIHRoZSB1c2VywqB0aGF0IHRoZWlyIHRhcCBpcyBiZWluZyBzdWNjZXNzZnVsbHkgcmVjb2duaXplZCwgYW5kIGluZGljYXRlcyB3aGljaCBlbGVtZW50IHRoZXkncmUgdGFwcGluZyBvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBibGFja2AKICAgKi8KICBXZWJraXRUYXBIaWdobGlnaHRDb2xvcj86IFByb3BlcnR5LldlYmtpdFRhcEhpZ2hsaWdodENvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LWNvbWJpbmUtdXByaWdodGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgY29tYmluYXRpb24gb2YgY2hhcmFjdGVycyBpbnRvIHRoZSBzcGFjZSBvZiBhIHNpbmdsZSBjaGFyYWN0ZXIuIElmIHRoZSBjb21iaW5lZCB0ZXh0IGlzIHdpZGVyIHRoYW4gMWVtLCB0aGUgdXNlciBhZ2VudCBtdXN0IGZpdCB0aGUgY29udGVudHMgd2l0aGluIDFlbS4gVGhlIHJlc3VsdGluZyBjb21wb3NpdGlvbiBpcyB0cmVhdGVkIGFzIGEgc2luZ2xlIHVwcmlnaHQgZ2x5cGggZm9yIGxheW91dCBhbmQgZGVjb3JhdGlvbi4gVGhpcyBwcm9wZXJ0eSBvbmx5IGhhcyBhbiBlZmZlY3QgaW4gdmVydGljYWwgd3JpdGluZyBtb2Rlcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgYWxsIHwgWyBkaWdpdHMgPGludGVnZXI+PyBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIFdlYmtpdFRleHRDb21iaW5lPzogUHJvcGVydHkuVGV4dENvbWJpbmVVcHJpZ2h0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LWRlY29yYXRpb24tY29sb3JgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGNvbG9yIG9mIGRlY29yYXRpb25zIGFkZGVkIHRvIHRleHQgYnkgYHRleHQtZGVjb3JhdGlvbi1saW5lYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjdXJyZW50Y29sb3JgCiAgICovCiAgV2Via2l0VGV4dERlY29yYXRpb25Db2xvcj86IFByb3BlcnR5LlRleHREZWNvcmF0aW9uQ29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtZGVjb3JhdGlvbi1saW5lYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBraW5kIG9mIGRlY29yYXRpb24gdGhhdCBpcyB1c2VkIG9uIHRleHQgaW4gYW4gZWxlbWVudCwgc3VjaCBhcyBhbiB1bmRlcmxpbmUgb3Igb3ZlcmxpbmUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IFsgdW5kZXJsaW5lIHx8IG92ZXJsaW5lIHx8IGxpbmUtdGhyb3VnaCB8fCBibGluayBdIHwgc3BlbGxpbmctZXJyb3IgfCBncmFtbWFyLWVycm9yYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIFdlYmtpdFRleHREZWNvcmF0aW9uTGluZT86IFByb3BlcnR5LlRleHREZWNvcmF0aW9uTGluZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1kZWNvcmF0aW9uLXNraXBgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hhdCBwYXJ0cyBvZiBhbiBlbGVtZW504oCZcyBjb250ZW50IGFueSB0ZXh0IGRlY29yYXRpb24gYWZmZWN0aW5nIHRoZSBlbGVtZW50IG11c3Qgc2tpcCBvdmVyLiBJdCBjb250cm9scyBhbGwgdGV4dCBkZWNvcmF0aW9uIGxpbmVzIGRyYXduIGJ5IHRoZSBlbGVtZW50IGFuZCBhbHNvIGFueSB0ZXh0IGRlY29yYXRpb24gbGluZXMgZHJhd24gYnkgaXRzIGFuY2VzdG9ycy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgWyBvYmplY3RzIHx8IFsgc3BhY2VzIHwgWyBsZWFkaW5nLXNwYWNlcyB8fCB0cmFpbGluZy1zcGFjZXMgXSBdIHx8IGVkZ2VzIHx8IGJveC1kZWNvcmF0aW9uIF1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG9iamVjdHNgCiAgICovCiAgV2Via2l0VGV4dERlY29yYXRpb25Ta2lwPzogUHJvcGVydHkuVGV4dERlY29yYXRpb25Ta2lwIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LWRlY29yYXRpb24tc3R5bGVgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHN0eWxlIG9mIHRoZSBsaW5lcyBzcGVjaWZpZWQgYnkgYHRleHQtZGVjb3JhdGlvbi1saW5lYC4gVGhlIHN0eWxlIGFwcGxpZXMgdG8gYWxsIGxpbmVzIHRoYXQgYXJlIHNldCB3aXRoIGB0ZXh0LWRlY29yYXRpb24tbGluZWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgc29saWQgfCBkb3VibGUgfCBkb3R0ZWQgfCBkYXNoZWQgfCB3YXZ5YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzb2xpZGAKICAgKi8KICBXZWJraXRUZXh0RGVjb3JhdGlvblN0eWxlPzogUHJvcGVydHkuVGV4dERlY29yYXRpb25TdHlsZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1lbXBoYXNpcy1jb2xvcmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgY29sb3Igb2YgZW1waGFzaXMgbWFya3MuIFRoaXMgdmFsdWUgY2FuIGFsc28gYmUgc2V0IHVzaW5nIHRoZSBgdGV4dC1lbXBoYXNpc2Agc2hvcnRoYW5kLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGN1cnJlbnRjb2xvcmAKICAgKi8KICBXZWJraXRUZXh0RW1waGFzaXNDb2xvcj86IFByb3BlcnR5LlRleHRFbXBoYXNpc0NvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LWVtcGhhc2lzLXBvc2l0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXJlIGVtcGhhc2lzIG1hcmtzIGFyZSBkcmF3bi4gTGlrZSBydWJ5IHRleHQsIGlmIHRoZXJlIGlzbid0IGVub3VnaCByb29tIGZvciBlbXBoYXNpcyBtYXJrcywgdGhlIGxpbmUgaGVpZ2h0IGlzIGluY3JlYXNlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIG92ZXIgfCB1bmRlciBdICYmIFsgcmlnaHQgfCBsZWZ0IF1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG92ZXIgcmlnaHRgCiAgICovCiAgV2Via2l0VGV4dEVtcGhhc2lzUG9zaXRpb24/OiBQcm9wZXJ0eS5UZXh0RW1waGFzaXNQb3NpdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1lbXBoYXNpcy1zdHlsZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgYXBwZWFyYW5jZSBvZiBlbXBoYXNpcyBtYXJrcy4gSXQgY2FuIGFsc28gYmUgc2V0LCBhbmQgcmVzZXQsIHVzaW5nIHRoZSBgdGV4dC1lbXBoYXNpc2Agc2hvcnRoYW5kLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBbIFsgZmlsbGVkIHwgb3BlbiBdIHx8IFsgZG90IHwgY2lyY2xlIHwgZG91YmxlLWNpcmNsZSB8IHRyaWFuZ2xlIHwgc2VzYW1lIF0gXSB8IDxzdHJpbmc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogIFdlYmtpdFRleHRFbXBoYXNpc1N0eWxlPzogUHJvcGVydHkuVGV4dEVtcGhhc2lzU3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC13ZWJraXQtdGV4dC1maWxsLWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIGZpbGwgY29sb3Igb2YgY2hhcmFjdGVycyBvZiB0ZXh0LiBJZiB0aGlzIHByb3BlcnR5IGlzIG5vdCBzZXQsIHRoZSB2YWx1ZSBvZiB0aGUgYGNvbG9yYCBwcm9wZXJ0eSBpcyB1c2VkLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGN1cnJlbnRjb2xvcmAKICAgKi8KICBXZWJraXRUZXh0RmlsbENvbG9yPzogUHJvcGVydHkuV2Via2l0VGV4dEZpbGxDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1vcmllbnRhdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgb3JpZW50YXRpb24gb2YgdGhlIHRleHQgY2hhcmFjdGVycyBpbiBhIGxpbmUuIEl0IG9ubHkgYWZmZWN0cyB0ZXh0IGluIHZlcnRpY2FsIG1vZGUgKHdoZW4gYHdyaXRpbmctbW9kZWAgaXMgbm90IGBob3Jpem9udGFsLXRiYCkuIEl0IGlzIHVzZWZ1bCBmb3IgY29udHJvbGxpbmcgdGhlIGRpc3BsYXkgb2YgbGFuZ3VhZ2VzIHRoYXQgdXNlIHZlcnRpY2FsIHNjcmlwdCwgYW5kIGFsc28gZm9yIG1ha2luZyB2ZXJ0aWNhbCB0YWJsZSBoZWFkZXJzLgogICAqCiAgICogKipTeW50YXgqKjogYG1peGVkIHwgdXByaWdodCB8IHNpZGV3YXlzYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBtaXhlZGAKICAgKi8KICBXZWJraXRUZXh0T3JpZW50YXRpb24/OiBQcm9wZXJ0eS5UZXh0T3JpZW50YXRpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtc2l6ZS1hZGp1c3RgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIHRoZSB0ZXh0IGluZmxhdGlvbiBhbGdvcml0aG0gdXNlZCBvbiBzb21lIHNtYXJ0cGhvbmVzIGFuZCB0YWJsZXRzLiBPdGhlciBicm93c2VycyB3aWxsIGlnbm9yZSB0aGlzIHByb3BlcnR5LgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBhdXRvIHwgPHBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYCBmb3Igc21hcnRwaG9uZSBicm93c2VycyBzdXBwb3J0aW5nIGluZmxhdGlvbiwgYG5vbmVgIGluIG90aGVyIGNhc2VzIChhbmQgdGhlbiBub3QgbW9kaWZpYWJsZSkuCiAgICovCiAgV2Via2l0VGV4dFNpemVBZGp1c3Q/OiBQcm9wZXJ0eS5UZXh0U2l6ZUFkanVzdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLXdlYmtpdC10ZXh0LXN0cm9rZS1jb2xvcmAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHRoZSBzdHJva2UgY29sb3Igb2YgY2hhcmFjdGVycyBvZiB0ZXh0LiBJZiB0aGlzIHByb3BlcnR5IGlzIG5vdCBzZXQsIHRoZSB2YWx1ZSBvZiB0aGUgYGNvbG9yYCBwcm9wZXJ0eSBpcyB1c2VkLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGN1cnJlbnRjb2xvcmAKICAgKi8KICBXZWJraXRUZXh0U3Ryb2tlQ29sb3I/OiBQcm9wZXJ0eS5XZWJraXRUZXh0U3Ryb2tlQ29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC13ZWJraXQtdGV4dC1zdHJva2Utd2lkdGhgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgd2lkdGggb2YgdGhlIHN0cm9rZSBmb3IgdGV4dC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKi8KICBXZWJraXRUZXh0U3Ryb2tlV2lkdGg/OiBQcm9wZXJ0eS5XZWJraXRUZXh0U3Ryb2tlV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtdW5kZXJsaW5lLXBvc2l0aW9uYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIHBvc2l0aW9uIG9mIHRoZSB1bmRlcmxpbmUgd2hpY2ggaXMgc2V0IHVzaW5nIHRoZSBgdGV4dC1kZWNvcmF0aW9uYCBwcm9wZXJ0eSdzIGB1bmRlcmxpbmVgIHZhbHVlLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBmcm9tLWZvbnQgfCBbIHVuZGVyIHx8IFsgbGVmdCB8IHJpZ2h0IF0gXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICBXZWJraXRUZXh0VW5kZXJsaW5lUG9zaXRpb24/OiBQcm9wZXJ0eS5UZXh0VW5kZXJsaW5lUG9zaXRpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAtd2Via2l0LXRvdWNoLWNhbGxvdXRgIENTUyBwcm9wZXJ0eSBjb250cm9scyB0aGUgZGlzcGxheSBvZiB0aGUgZGVmYXVsdCBjYWxsb3V0IHNob3duIHdoZW4geW91IHRvdWNoIGFuZCBob2xkIGEgdG91Y2ggdGFyZ2V0LgogICAqCiAgICogKipTeW50YXgqKjogYGRlZmF1bHQgfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBkZWZhdWx0YAogICAqLwogIFdlYmtpdFRvdWNoQ2FsbG91dD86IFByb3BlcnR5LldlYmtpdFRvdWNoQ2FsbG91dCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNmb3JtYCoqIENTUyBwcm9wZXJ0eSBsZXRzIHlvdSByb3RhdGUsIHNjYWxlLCBza2V3LCBvciB0cmFuc2xhdGUgYW4gZWxlbWVudC4gSXQgbW9kaWZpZXMgdGhlIGNvb3JkaW5hdGUgc3BhY2Ugb2YgdGhlIENTUyB2aXN1YWwgZm9ybWF0dGluZyBtb2RlbC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPHRyYW5zZm9ybS1saXN0PmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICBXZWJraXRUcmFuc2Zvcm0/OiBQcm9wZXJ0eS5UcmFuc2Zvcm0gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zZm9ybS1vcmlnaW5gKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG9yaWdpbiBmb3IgYW4gZWxlbWVudCdzIHRyYW5zZm9ybWF0aW9ucy4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDxsZW5ndGgtcGVyY2VudGFnZT4gfCBsZWZ0IHwgY2VudGVyIHwgcmlnaHQgfCB0b3AgfCBib3R0b20gXSB8IFsgWyA8bGVuZ3RoLXBlcmNlbnRhZ2U+IHwgbGVmdCB8IGNlbnRlciB8IHJpZ2h0IF0gJiYgWyA8bGVuZ3RoLXBlcmNlbnRhZ2U+IHwgdG9wIHwgY2VudGVyIHwgYm90dG9tIF0gXSA8bGVuZ3RoPj9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDUwJSA1MCUgMGAKICAgKi8KICBXZWJraXRUcmFuc2Zvcm1PcmlnaW4/OiBQcm9wZXJ0eS5UcmFuc2Zvcm1PcmlnaW48VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zZm9ybS1zdHlsZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIGNoaWxkcmVuIG9mIGFuIGVsZW1lbnQgYXJlIHBvc2l0aW9uZWQgaW4gdGhlIDNEIHNwYWNlIG9yIGFyZSBmbGF0dGVuZWQgaW4gdGhlIHBsYW5lIG9mIHRoZSBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYGZsYXQgfCBwcmVzZXJ2ZS0zZGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgZmxhdGAKICAgKi8KICBXZWJraXRUcmFuc2Zvcm1TdHlsZT86IFByb3BlcnR5LlRyYW5zZm9ybVN0eWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2l0aW9uLWRlbGF5YCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIGR1cmF0aW9uIHRvIHdhaXQgYmVmb3JlIHN0YXJ0aW5nIGEgcHJvcGVydHkncyB0cmFuc2l0aW9uIGVmZmVjdCB3aGVuIGl0cyB2YWx1ZSBjaGFuZ2VzLgogICAqCiAgICogKipTeW50YXgqKjogYDx0aW1lPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBzYAogICAqLwogIFdlYmtpdFRyYW5zaXRpb25EZWxheT86IFByb3BlcnR5LlRyYW5zaXRpb25EZWxheTxUVGltZT4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zaXRpb24tZHVyYXRpb25gKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGxlbmd0aCBvZiB0aW1lIGEgdHJhbnNpdGlvbiBhbmltYXRpb24gc2hvdWxkIHRha2UgdG8gY29tcGxldGUuIEJ5IGRlZmF1bHQsIHRoZSB2YWx1ZSBpcyBgMHNgLCBtZWFuaW5nIHRoYXQgbm8gYW5pbWF0aW9uIHdpbGwgb2NjdXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHRpbWU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMHNgCiAgICovCiAgV2Via2l0VHJhbnNpdGlvbkR1cmF0aW9uPzogUHJvcGVydHkuVHJhbnNpdGlvbkR1cmF0aW9uPFRUaW1lPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNpdGlvbi1wcm9wZXJ0eWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgQ1NTIHByb3BlcnRpZXMgdG8gd2hpY2ggYSB0cmFuc2l0aW9uIGVmZmVjdCBzaG91bGQgYmUgYXBwbGllZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPHNpbmdsZS10cmFuc2l0aW9uLXByb3BlcnR5PiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYWxsCiAgICovCiAgV2Via2l0VHJhbnNpdGlvblByb3BlcnR5PzogUHJvcGVydHkuVHJhbnNpdGlvblByb3BlcnR5IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgaW50ZXJtZWRpYXRlIHZhbHVlcyBhcmUgY2FsY3VsYXRlZCBmb3IgQ1NTIHByb3BlcnRpZXMgYmVpbmcgYWZmZWN0ZWQgYnkgYSB0cmFuc2l0aW9uIGVmZmVjdC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8ZWFzaW5nLWZ1bmN0aW9uPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGVhc2VgCiAgICovCiAgV2Via2l0VHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uPzogUHJvcGVydHkuVHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqICoqU3ludGF4Kio6IGByZWFkLW9ubHkgfCByZWFkLXdyaXRlIHwgcmVhZC13cml0ZS1wbGFpbnRleHQtb25seWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgcmVhZC1vbmx5YAogICAqLwogIFdlYmtpdFVzZXJNb2RpZnk/OiBQcm9wZXJ0eS5XZWJraXRVc2VyTW9kaWZ5IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgKip1c2VyLXNlbGVjdCoqYCBDU1MgcHJvcGVydHkgY29udHJvbHMgd2hldGhlciB0aGUgdXNlciBjYW4gc2VsZWN0IHRleHQuIFRoaXMgZG9lc24ndCBoYXZlIGFueSBlZmZlY3Qgb24gY29udGVudCBsb2FkZWQgYXMgY2hyb21lLCBleGNlcHQgaW4gdGV4dGJveGVzLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCB0ZXh0IHwgbm9uZSB8IGNvbnRhaW4gfCBhbGxgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgV2Via2l0VXNlclNlbGVjdD86IFByb3BlcnR5LlVzZXJTZWxlY3QgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHdyaXRpbmctbW9kZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIGxpbmVzIG9mIHRleHQgYXJlIGxhaWQgb3V0IGhvcml6b250YWxseSBvciB2ZXJ0aWNhbGx5LCBhcyB3ZWxsIGFzIHRoZSBkaXJlY3Rpb24gaW4gd2hpY2ggYmxvY2tzIHByb2dyZXNzLiBXaGVuIHNldCBmb3IgYW4gZW50aXJlIGRvY3VtZW50LCBpdCBzaG91bGQgYmUgc2V0IG9uIHRoZSByb290IGVsZW1lbnQgKGBodG1sYCBlbGVtZW50IGZvciBIVE1MIGRvY3VtZW50cykuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgaG9yaXpvbnRhbC10YiB8IHZlcnRpY2FsLXJsIHwgdmVydGljYWwtbHIgfCBzaWRld2F5cy1ybCB8IHNpZGV3YXlzLWxyYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBob3Jpem9udGFsLXRiYAogICAqLwogIFdlYmtpdFdyaXRpbmdNb2RlPzogUHJvcGVydHkuV3JpdGluZ01vZGUgfCB1bmRlZmluZWQ7Cn0KCmV4cG9ydCBpbnRlcmZhY2UgVmVuZG9yU2hvcnRoYW5kUHJvcGVydGllczxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+IHsKICAvKioKICAgKiBUaGUgKipgYW5pbWF0aW9uYCoqIHNob3J0aGFuZCBDU1MgcHJvcGVydHkgYXBwbGllcyBhbiBhbmltYXRpb24gYmV0d2VlbiBzdHlsZXMuIEl0IGlzIGEgc2hvcnRoYW5kIGZvciBgYW5pbWF0aW9uLW5hbWVgLCBgYW5pbWF0aW9uLWR1cmF0aW9uYCwgYGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb25gLCBgYW5pbWF0aW9uLWRlbGF5YCwgYGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnRgLCBgYW5pbWF0aW9uLWRpcmVjdGlvbmAsIGBhbmltYXRpb24tZmlsbC1tb2RlYCwgYW5kIGBhbmltYXRpb24tcGxheS1zdGF0ZWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHNpbmdsZS1hbmltYXRpb24+I2AKICAgKi8KICBNb3pBbmltYXRpb24/OiBQcm9wZXJ0eS5BbmltYXRpb248VFRpbWU+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItaW1hZ2VgKiogQ1NTIHByb3BlcnR5IGRyYXdzIGFuIGltYWdlIGFyb3VuZCBhIGdpdmVuIGVsZW1lbnQuIEl0IHJlcGxhY2VzIHRoZSBlbGVtZW50J3MgcmVndWxhciBib3JkZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItaW1hZ2Utc291cmNlJz4gfHwgPCdib3JkZXItaW1hZ2Utc2xpY2UnPiBbIC8gPCdib3JkZXItaW1hZ2Utd2lkdGgnPiB8IC8gPCdib3JkZXItaW1hZ2Utd2lkdGgnPj8gLyA8J2JvcmRlci1pbWFnZS1vdXRzZXQnPiBdPyB8fCA8J2JvcmRlci1pbWFnZS1yZXBlYXQnPmAKICAgKi8KICBNb3pCb3JkZXJJbWFnZT86IFByb3BlcnR5LkJvcmRlckltYWdlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2x1bW4tcnVsZWAqKsKgc2hvcnRoYW5kIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSB3aWR0aCwgc3R5bGUsIGFuZCBjb2xvciBvZiB0aGUgbGluZSBkcmF3biBiZXR3ZWVuIGNvbHVtbnMgaW4gYSBtdWx0aS1jb2x1bW4gbGF5b3V0LgogICAqCiAgICogKipTeW50YXgqKjogYDwnY29sdW1uLXJ1bGUtd2lkdGgnPiB8fCA8J2NvbHVtbi1ydWxlLXN0eWxlJz4gfHwgPCdjb2x1bW4tcnVsZS1jb2xvcic+YAogICAqLwogIE1vekNvbHVtblJ1bGU/OiBQcm9wZXJ0eS5Db2x1bW5SdWxlPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2x1bW5zYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgc2V0cyB0aGUgbnVtYmVyIG9mIGNvbHVtbnMgdG8gdXNlIHdoZW4gZHJhd2luZyBhbiBlbGVtZW50J3MgY29udGVudHMsIGFzIHdlbGwgYXMgdGhvc2UgY29sdW1ucycgd2lkdGhzLgogICAqCiAgICogKipTeW50YXgqKjogYDwnY29sdW1uLXdpZHRoJz4gfHwgPCdjb2x1bW4tY291bnQnPmAKICAgKi8KICBNb3pDb2x1bW5zPzogUHJvcGVydHkuQ29sdW1uczxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNpdGlvbmAqKiBDU1MgcHJvcGVydHkgaXMgYSBzaG9ydGhhbmQgcHJvcGVydHkgZm9yIGB0cmFuc2l0aW9uLXByb3BlcnR5YCwgYHRyYW5zaXRpb24tZHVyYXRpb25gLCBgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb25gLCBhbmQgYHRyYW5zaXRpb24tZGVsYXlgLgogICAqCiAgICogKipTeW50YXgqKjogYDxzaW5nbGUtdHJhbnNpdGlvbj4jYAogICAqLwogIE1velRyYW5zaXRpb24/OiBQcm9wZXJ0eS5UcmFuc2l0aW9uPFRUaW1lPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLWNvbnRlbnQtem9vbS1saW1pdGAqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyB2YWx1ZXMgZm9yIHRoZSBgLW1zLWNvbnRlbnQtem9vbS1saW1pdC1taW5gIGFuZCBgLW1zLWNvbnRlbnQtem9vbS1saW1pdC1tYXhgIHByb3BlcnRpZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCctbXMtY29udGVudC16b29tLWxpbWl0LW1pbic+IDwnLW1zLWNvbnRlbnQtem9vbS1saW1pdC1tYXgnPmAKICAgKi8KICBtc0NvbnRlbnRab29tTGltaXQ/OiBQcm9wZXJ0eS5Nc0NvbnRlbnRab29tTGltaXQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1jb250ZW50LXpvb20tc25hcGAqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyB2YWx1ZXMgZm9yIHRoZSBgLW1zLWNvbnRlbnQtem9vbS1zbmFwLXR5cGVgIGFuZCBgLW1zLWNvbnRlbnQtem9vbS1zbmFwLXBvaW50c2AgcHJvcGVydGllcy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Jy1tcy1jb250ZW50LXpvb20tc25hcC10eXBlJz4gfHwgPCctbXMtY29udGVudC16b29tLXNuYXAtcG9pbnRzJz5gCiAgICovCiAgbXNDb250ZW50Wm9vbVNuYXA/OiBQcm9wZXJ0eS5Nc0NvbnRlbnRab29tU25hcCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZmxleGAqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IHNldHMgaG93IGEgZmxleCBfaXRlbV8gd2lsbCBncm93IG9yIHNocmluayB0byBmaXQgdGhlIHNwYWNlIGF2YWlsYWJsZSBpbiBpdHMgZmxleCBjb250YWluZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IFsgPCdmbGV4LWdyb3cnPiA8J2ZsZXgtc2hyaW5rJz4/IHx8IDwnZmxleC1iYXNpcyc+IF1gCiAgICovCiAgbXNGbGV4PzogUHJvcGVydHkuRmxleDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipcLW1zLXNjcm9sbC1saW1pdCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgdmFsdWVzIGZvciB0aGUgYC1tcy1zY3JvbGwtbGltaXQteC1taW5gLCBgLW1zLXNjcm9sbC1saW1pdC15LW1pbmAsIGAtbXMtc2Nyb2xsLWxpbWl0LXgtbWF4YCwgYW5kIGAtbXMtc2Nyb2xsLWxpbWl0LXktbWF4YCBwcm9wZXJ0aWVzLgogICAqCiAgICogKipTeW50YXgqKjogYDwnLW1zLXNjcm9sbC1saW1pdC14LW1pbic+IDwnLW1zLXNjcm9sbC1saW1pdC15LW1pbic+IDwnLW1zLXNjcm9sbC1saW1pdC14LW1heCc+IDwnLW1zLXNjcm9sbC1saW1pdC15LW1heCc+YAogICAqLwogIG1zU2Nyb2xsTGltaXQ/OiBQcm9wZXJ0eS5Nc1Njcm9sbExpbWl0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtc2Nyb2xsLXNuYXAteGAqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyB2YWx1ZXMgZm9yIHRoZSBgLW1zLXNjcm9sbC1zbmFwLXR5cGVgIGFuZCBgLW1zLXNjcm9sbC1zbmFwLXBvaW50cy14YCBwcm9wZXJ0aWVzLgogICAqCiAgICogKipTeW50YXgqKjogYDwnLW1zLXNjcm9sbC1zbmFwLXR5cGUnPiA8Jy1tcy1zY3JvbGwtc25hcC1wb2ludHMteCc+YAogICAqLwogIG1zU2Nyb2xsU25hcFg/OiBQcm9wZXJ0eS5Nc1Njcm9sbFNuYXBYIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtc2Nyb2xsLXNuYXAteGAqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyB2YWx1ZXMgZm9yIHRoZSBgLW1zLXNjcm9sbC1zbmFwLXR5cGVgIGFuZCBgLW1zLXNjcm9sbC1zbmFwLXBvaW50cy15YCBwcm9wZXJ0aWVzLgogICAqCiAgICogKipTeW50YXgqKjogYDwnLW1zLXNjcm9sbC1zbmFwLXR5cGUnPiA8Jy1tcy1zY3JvbGwtc25hcC1wb2ludHMteSc+YAogICAqLwogIG1zU2Nyb2xsU25hcFk/OiBQcm9wZXJ0eS5Nc1Njcm9sbFNuYXBZIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2l0aW9uYCoqIENTUyBwcm9wZXJ0eSBpcyBhIHNob3J0aGFuZCBwcm9wZXJ0eSBmb3IgYHRyYW5zaXRpb24tcHJvcGVydHlgLCBgdHJhbnNpdGlvbi1kdXJhdGlvbmAsIGB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbmAsIGFuZCBgdHJhbnNpdGlvbi1kZWxheWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHNpbmdsZS10cmFuc2l0aW9uPiNgCiAgICovCiAgbXNUcmFuc2l0aW9uPzogUHJvcGVydHkuVHJhbnNpdGlvbjxUVGltZT4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbmAqKiBzaG9ydGhhbmQgQ1NTIHByb3BlcnR5IGFwcGxpZXMgYW4gYW5pbWF0aW9uIGJldHdlZW4gc3R5bGVzLiBJdCBpcyBhIHNob3J0aGFuZCBmb3IgYGFuaW1hdGlvbi1uYW1lYCwgYGFuaW1hdGlvbi1kdXJhdGlvbmAsIGBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uYCwgYGFuaW1hdGlvbi1kZWxheWAsIGBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50YCwgYGFuaW1hdGlvbi1kaXJlY3Rpb25gLCBgYW5pbWF0aW9uLWZpbGwtbW9kZWAsIGFuZCBgYW5pbWF0aW9uLXBsYXktc3RhdGVgLgogICAqCiAgICogKipTeW50YXgqKjogYDxzaW5nbGUtYW5pbWF0aW9uPiNgCiAgICovCiAgV2Via2l0QW5pbWF0aW9uPzogUHJvcGVydHkuQW5pbWF0aW9uPFRUaW1lPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLXdlYmtpdC1ib3JkZXItYmVmb3JlYCoqIENTUyBwcm9wZXJ0eSBpcyBhIHNob3J0aGFuZCBwcm9wZXJ0eSBmb3Igc2V0dGluZyB0aGUgaW5kaXZpZHVhbCBsb2dpY2FsIGJsb2NrIHN0YXJ0IGJvcmRlciBwcm9wZXJ0eSB2YWx1ZXMgaW4gYSBzaW5nbGUgcGxhY2UgaW4gdGhlIHN0eWxlIHNoZWV0LgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXdpZHRoJz4gfHwgPCdib3JkZXItc3R5bGUnPiB8fCA8Y29sb3I+YAogICAqLwogIFdlYmtpdEJvcmRlckJlZm9yZT86IFByb3BlcnR5LldlYmtpdEJvcmRlckJlZm9yZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWltYWdlYCoqIENTUyBwcm9wZXJ0eSBkcmF3cyBhbiBpbWFnZSBhcm91bmQgYSBnaXZlbiBlbGVtZW50LiBJdCByZXBsYWNlcyB0aGUgZWxlbWVudCdzIHJlZ3VsYXIgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLWltYWdlLXNvdXJjZSc+IHx8IDwnYm9yZGVyLWltYWdlLXNsaWNlJz4gWyAvIDwnYm9yZGVyLWltYWdlLXdpZHRoJz4gfCAvIDwnYm9yZGVyLWltYWdlLXdpZHRoJz4/IC8gPCdib3JkZXItaW1hZ2Utb3V0c2V0Jz4gXT8gfHwgPCdib3JkZXItaW1hZ2UtcmVwZWF0Jz5gCiAgICovCiAgV2Via2l0Qm9yZGVySW1hZ2U/OiBQcm9wZXJ0eS5Cb3JkZXJJbWFnZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLXJhZGl1c2AqKiBDU1MgcHJvcGVydHkgcm91bmRzIHRoZSBjb3JuZXJzIG9mIGFuIGVsZW1lbnQncyBvdXRlciBib3JkZXIgZWRnZS4gWW91IGNhbiBzZXQgYSBzaW5nbGUgcmFkaXVzIHRvIG1ha2UgY2lyY3VsYXIgY29ybmVycywgb3IgdHdvIHJhZGlpIHRvIG1ha2UgZWxsaXB0aWNhbCBjb3JuZXJzLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGgtcGVyY2VudGFnZT57MSw0fSBbIC8gPGxlbmd0aC1wZXJjZW50YWdlPnsxLDR9IF0/YAogICAqLwogIFdlYmtpdEJvcmRlclJhZGl1cz86IFByb3BlcnR5LkJvcmRlclJhZGl1czxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uLXJ1bGVgKirCoHNob3J0aGFuZCBDU1MgcHJvcGVydHkgc2V0cyB0aGUgd2lkdGgsIHN0eWxlLCBhbmQgY29sb3Igb2YgdGhlIGxpbmUgZHJhd24gYmV0d2VlbiBjb2x1bW5zIGluIGEgbXVsdGktY29sdW1uIGxheW91dC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2NvbHVtbi1ydWxlLXdpZHRoJz4gfHwgPCdjb2x1bW4tcnVsZS1zdHlsZSc+IHx8IDwnY29sdW1uLXJ1bGUtY29sb3InPmAKICAgKi8KICBXZWJraXRDb2x1bW5SdWxlPzogUHJvcGVydHkuQ29sdW1uUnVsZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uc2AqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IHNldHMgdGhlIG51bWJlciBvZiBjb2x1bW5zIHRvIHVzZSB3aGVuIGRyYXdpbmcgYW4gZWxlbWVudCdzIGNvbnRlbnRzLCBhcyB3ZWxsIGFzIHRob3NlIGNvbHVtbnMnIHdpZHRocy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2NvbHVtbi13aWR0aCc+IHx8IDwnY29sdW1uLWNvdW50Jz5gCiAgICovCiAgV2Via2l0Q29sdW1ucz86IFByb3BlcnR5LkNvbHVtbnM8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZsZXhgKiogQ1NTIHNob3J0aGFuZCBwcm9wZXJ0eSBzZXRzIGhvdyBhIGZsZXggX2l0ZW1fIHdpbGwgZ3JvdyBvciBzaHJpbmsgdG8gZml0IHRoZSBzcGFjZSBhdmFpbGFibGUgaW4gaXRzIGZsZXggY29udGFpbmVyLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBbIDwnZmxleC1ncm93Jz4gPCdmbGV4LXNocmluayc+PyB8fCA8J2ZsZXgtYmFzaXMnPiBdYAogICAqLwogIFdlYmtpdEZsZXg/OiBQcm9wZXJ0eS5GbGV4PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmbGV4LWZsb3dgKiogQ1NTIHNob3J0aGFuZCBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIGRpcmVjdGlvbiBvZiBhIGZsZXggY29udGFpbmVyLCBhcyB3ZWxsIGFzIGl0cyB3cmFwcGluZyBiZWhhdmlvci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2ZsZXgtZGlyZWN0aW9uJz4gfHwgPCdmbGV4LXdyYXAnPmAKICAgKi8KICBXZWJraXRGbGV4Rmxvdz86IFByb3BlcnR5LkZsZXhGbG93IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXNrYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgaGlkZXMgYW4gZWxlbWVudCAocGFydGlhbGx5IG9yIGZ1bGx5KSBieSBtYXNraW5nIG9yIGNsaXBwaW5nIHRoZSBpbWFnZSBhdCBzcGVjaWZpYyBwb2ludHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8bWFzay1yZWZlcmVuY2U+IHx8IDxwb3NpdGlvbj4gWyAvIDxiZy1zaXplPiBdPyB8fCA8cmVwZWF0LXN0eWxlPiB8fCBbIDxib3g+IHwgYm9yZGVyIHwgcGFkZGluZyB8IGNvbnRlbnQgfCB0ZXh0IF0gfHwgWyA8Ym94PiB8IGJvcmRlciB8IHBhZGRpbmcgfCBjb250ZW50IF0gXSNgCiAgICovCiAgV2Via2l0TWFzaz86IFByb3BlcnR5LldlYmtpdE1hc2s8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hc2stYm9yZGVyYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgbGV0cyB5b3UgY3JlYXRlIGEgbWFzayBhbG9uZyB0aGUgZWRnZSBvZiBhbiBlbGVtZW50J3MgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYDwnbWFzay1ib3JkZXItc291cmNlJz4gfHwgPCdtYXNrLWJvcmRlci1zbGljZSc+IFsgLyA8J21hc2stYm9yZGVyLXdpZHRoJz4/IFsgLyA8J21hc2stYm9yZGVyLW91dHNldCc+IF0/IF0/IHx8IDwnbWFzay1ib3JkZXItcmVwZWF0Jz4gfHwgPCdtYXNrLWJvcmRlci1tb2RlJz5gCiAgICovCiAgV2Via2l0TWFza0JveEltYWdlPzogUHJvcGVydHkuTWFza0JvcmRlciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1lbXBoYXNpc2AqKiBDU1MgcHJvcGVydHkgYXBwbGllcyBlbXBoYXNpcyBtYXJrcyB0byB0ZXh0IChleGNlcHQgc3BhY2VzIGFuZCBjb250cm9sIGNoYXJhY3RlcnMpLiBJdCBpcyBhIHNob3J0aGFuZCBmb3IgYHRleHQtZW1waGFzaXMtc3R5bGVgIGFuZCBgdGV4dC1lbXBoYXNpcy1jb2xvcmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCd0ZXh0LWVtcGhhc2lzLXN0eWxlJz4gfHwgPCd0ZXh0LWVtcGhhc2lzLWNvbG9yJz5gCiAgICovCiAgV2Via2l0VGV4dEVtcGhhc2lzPzogUHJvcGVydHkuVGV4dEVtcGhhc2lzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtd2Via2l0LXRleHQtc3Ryb2tlYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIHdpZHRoIGFuZCBjb2xvciBvZiBzdHJva2VzIGZvciB0ZXh0IGNoYXJhY3RlcnMuIFRoaXMgaXMgYSBzaG9ydGhhbmQgcHJvcGVydHkgZm9yIHRoZSBsb25naGFuZCBwcm9wZXJ0aWVzIGAtd2Via2l0LXRleHQtc3Ryb2tlLXdpZHRoYCBhbmQgYC13ZWJraXQtdGV4dC1zdHJva2UtY29sb3JgLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+IHx8IDxjb2xvcj5gCiAgICovCiAgV2Via2l0VGV4dFN0cm9rZT86IFByb3BlcnR5LldlYmtpdFRleHRTdHJva2U8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zaXRpb25gKiogQ1NTIHByb3BlcnR5IGlzIGEgc2hvcnRoYW5kIHByb3BlcnR5IGZvciBgdHJhbnNpdGlvbi1wcm9wZXJ0eWAsIGB0cmFuc2l0aW9uLWR1cmF0aW9uYCwgYHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uYCwgYW5kIGB0cmFuc2l0aW9uLWRlbGF5YC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2luZ2xlLXRyYW5zaXRpb24+I2AKICAgKi8KICBXZWJraXRUcmFuc2l0aW9uPzogUHJvcGVydHkuVHJhbnNpdGlvbjxUVGltZT4gfCB1bmRlZmluZWQ7Cn0KCmV4cG9ydCBpbnRlcmZhY2UgVmVuZG9yUHJvcGVydGllczxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+IGV4dGVuZHMgVmVuZG9yTG9uZ2hhbmRQcm9wZXJ0aWVzPFRMZW5ndGgsIFRUaW1lPiwgVmVuZG9yU2hvcnRoYW5kUHJvcGVydGllczxUTGVuZ3RoLCBUVGltZT4ge30KCmV4cG9ydCBpbnRlcmZhY2UgT2Jzb2xldGVQcm9wZXJ0aWVzPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMCwgVFRpbWUgPSBzdHJpbmcgJiB7fT4gewogIC8qKgogICAqIEluIGNvbWJpbmF0aW9uIHdpdGggYGVsZXZhdGlvbmAsIHRoZSAqKmBhemltdXRoYCoqIENTUyBwcm9wZXJ0eSBlbmFibGVzIGRpZmZlcmVudCBhdWRpbyBzb3VyY2VzIHRvIGJlIHBvc2l0aW9uZWQgc3BhdGlhbGx5IGZvciBhdXJhbCBwcmVzZW50YXRpb24uIFRoaXMgaXMgaW1wb3J0YW50IGluIHRoYXQgaXQgcHJvdmlkZXMgYSBuYXR1cmFsIHdheSB0byB0ZWxsIHNldmVyYWwgdm9pY2VzIGFwYXJ0LCBhcyBlYWNoIGNhbiBiZSBwb3NpdGlvbmVkIHRvIG9yaWdpbmF0ZSBhdCBhIGRpZmZlcmVudCBsb2NhdGlvbiBvbiB0aGUgc291bmQgc3RhZ2UuIFN0ZXJlbyBvdXRwdXQgcHJvZHVjZSBhIGxhdGVyYWwgc291bmQgc3RhZ2UsIHdoaWxlIGJpbmF1cmFsIGhlYWRwaG9uZXMgYW5kIG11bHRpLXNwZWFrZXIgc2V0dXBzIGFsbG93IGZvciBhIGZ1bGx5IHRocmVlLWRpbWVuc2lvbmFsIHN0YWdlLgogICAqCiAgICogKipTeW50YXgqKjogYDxhbmdsZT4gfCBbIFsgbGVmdC1zaWRlIHwgZmFyLWxlZnQgfCBsZWZ0IHwgY2VudGVyLWxlZnQgfCBjZW50ZXIgfCBjZW50ZXItcmlnaHQgfCByaWdodCB8IGZhci1yaWdodCB8IHJpZ2h0LXNpZGUgXSB8fCBiZWhpbmQgXSB8IGxlZnR3YXJkcyB8IHJpZ2h0d2FyZHNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGNlbnRlcmAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgYXppbXV0aD86IFByb3BlcnR5LkF6aW11dGggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJveC1hbGlnbmAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIGhvdyBhbiBlbGVtZW50IGFsaWducyBpdHMgY29udGVudHMgYWNyb3NzIGl0cyBsYXlvdXQgaW4gYSBwZXJwZW5kaWN1bGFyIGRpcmVjdGlvbi4gVGhlIGVmZmVjdCBvZiB0aGUgcHJvcGVydHkgaXMgb25seSB2aXNpYmxlIGlmIHRoZXJlIGlzIGV4dHJhIHNwYWNlIGluIHRoZSBib3guCiAgICoKICAgKiAqKlN5bnRheCoqOiBgc3RhcnQgfCBjZW50ZXIgfCBlbmQgfCBiYXNlbGluZSB8IHN0cmV0Y2hgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHN0cmV0Y2hgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIGJveEFsaWduPzogUHJvcGVydHkuQm94QWxpZ24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJveC1kaXJlY3Rpb25gKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB3aGV0aGVyIGEgYm94IGxheXMgb3V0IGl0cyBjb250ZW50cyBub3JtYWxseSAoZnJvbSB0aGUgdG9wIG9yIGxlZnQgZWRnZSksIG9yIGluIHJldmVyc2UgKGZyb20gdGhlIGJvdHRvbSBvciByaWdodCBlZGdlKS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCByZXZlcnNlIHwgaW5oZXJpdGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBib3hEaXJlY3Rpb24/OiBQcm9wZXJ0eS5Cb3hEaXJlY3Rpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tb3otYm94LWZsZXhgKiogYW5kICoqYC13ZWJraXQtYm94LWZsZXhgKiogQ1NTIHByb3BlcnRpZXMgc3BlY2lmeSBob3cgYSBgLW1vei1ib3hgIG9yIGAtd2Via2l0LWJveGAgZ3Jvd3MgdG8gZmlsbCB0aGUgYm94IHRoYXQgY29udGFpbnMgaXQsIGluIHRoZSBkaXJlY3Rpb24gb2YgdGhlIGNvbnRhaW5pbmcgYm94J3MgbGF5b3V0LgogICAqCiAgICogKipTeW50YXgqKjogYDxudW1iZXI+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBib3hGbGV4PzogUHJvcGVydHkuQm94RmxleCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LWZsZXgtZ3JvdXBgKiogQ1NTIHByb3BlcnR5IGFzc2lnbnMgdGhlIGZsZXhib3gncyBjaGlsZCBlbGVtZW50cyB0byBhIGZsZXggZ3JvdXAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGludGVnZXI+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAxYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBib3hGbGV4R3JvdXA/OiBQcm9wZXJ0eS5Cb3hGbGV4R3JvdXAgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJveC1saW5lc2AqKiBDU1MgcHJvcGVydHkgZGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBib3ggbWF5IGhhdmUgYSBzaW5nbGUgb3IgbXVsdGlwbGUgbGluZXMgKHJvd3MgZm9yIGhvcml6b250YWxseSBvcmllbnRlZCBib3hlcywgY29sdW1ucyBmb3IgdmVydGljYWxseSBvcmllbnRlZCBib3hlcykuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgc2luZ2xlIHwgbXVsdGlwbGVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHNpbmdsZWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgYm94TGluZXM/OiBQcm9wZXJ0eS5Cb3hMaW5lcyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LW9yZGluYWwtZ3JvdXBgKiogQ1NTIHByb3BlcnR5IGFzc2lnbnMgdGhlIGZsZXhib3gncyBjaGlsZCBlbGVtZW50cyB0byBhbiBvcmRpbmFsIGdyb3VwLgogICAqCiAgICogKipTeW50YXgqKjogYDxpbnRlZ2VyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgYm94T3JkaW5hbEdyb3VwPzogUHJvcGVydHkuQm94T3JkaW5hbEdyb3VwIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoaXMgaXMgYSBwcm9wZXJ0eSBvZiB0aGUgb3JpZ2luYWwgQ1NTIEZsZXhpYmxlIEJveCBMYXlvdXQgTW9kdWxlIGRyYWZ0LCBhbmQgaGFzIGJlZW4gcmVwbGFjZWQgYnkgYSBuZXdlciBzdGFuZGFyZC4gU2VlIGZsZXhib3ggZm9yIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IHN0YW5kYXJkLgogICAqCiAgICogKipTeW50YXgqKjogYGhvcml6b250YWwgfCB2ZXJ0aWNhbCB8IGlubGluZS1heGlzIHwgYmxvY2stYXhpcyB8IGluaGVyaXRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGlubGluZS1heGlzYCAoYGhvcml6b250YWxgIGluIFhVTCkKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgYm94T3JpZW50PzogUHJvcGVydHkuQm94T3JpZW50IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbW96LWJveC1wYWNrYCoqIGFuZCAqKmAtd2Via2l0LWJveC1wYWNrYCoqIENTUyBwcm9wZXJ0aWVzIHNwZWNpZnkgaG93IGEgYC1tb3otYm94YCBvciBgLXdlYmtpdC1ib3hgIHBhY2tzIGl0cyBjb250ZW50cyBpbiB0aGUgZGlyZWN0aW9uIG9mIGl0cyBsYXlvdXQuIFRoZSBlZmZlY3Qgb2YgdGhpcyBpcyBvbmx5IHZpc2libGUgaWYgdGhlcmUgaXMgZXh0cmEgc3BhY2UgaW4gdGhlIGJveC4KICAgKgogICAqICoqU3ludGF4Kio6IGBzdGFydCB8IGNlbnRlciB8IGVuZCB8IGp1c3RpZnlgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHN0YXJ0YAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBib3hQYWNrPzogUHJvcGVydHkuQm94UGFjayB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY2xpcGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyBhIHZpc2libGUgcG9ydGlvbiBvZiBhbiBlbGVtZW50LiBUaGUgYGNsaXBgIHByb3BlcnR5IGFwcGxpZXMgb25seSB0byBhYnNvbHV0ZWx5IHBvc2l0aW9uZWQgZWxlbWVudHMg4oCUIHRoYXQgaXMsIGVsZW1lbnRzIHdpdGggYHBvc2l0aW9uOmFic29sdXRlYCBvciBgcG9zaXRpb246Zml4ZWRgLgogICAqCiAgICogKipTeW50YXgqKjogYDxzaGFwZT4gfCBhdXRvYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBjbGlwPzogUHJvcGVydHkuQ2xpcCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZm9udC12YXJpYW50LWFsdGVybmF0ZXNgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIHRoZSB1c2FnZSBvZiBhbHRlcm5hdGUgZ2x5cGhzLiBUaGVzZSBhbHRlcm5hdGUgZ2x5cGhzIG1heSBiZSByZWZlcmVuY2VkIGJ5IGFsdGVybmF0aXZlIG5hbWVzIGRlZmluZWQgaW4gYEBmb250LWZlYXR1cmUtdmFsdWVzYC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCBbIHN0eWxpc3RpYyggPGZlYXR1cmUtdmFsdWUtbmFtZT4gKSB8fCBoaXN0b3JpY2FsLWZvcm1zIHx8IHN0eWxlc2V0KCA8ZmVhdHVyZS12YWx1ZS1uYW1lPiMgKSB8fCBjaGFyYWN0ZXItdmFyaWFudCggPGZlYXR1cmUtdmFsdWUtbmFtZT4jICkgfHwgc3dhc2goIDxmZWF0dXJlLXZhbHVlLW5hbWU+ICkgfHwgb3JuYW1lbnRzKCA8ZmVhdHVyZS12YWx1ZS1uYW1lPiApIHx8IGFubm90YXRpb24oIDxmZWF0dXJlLXZhbHVlLW5hbWU+ICkgXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBmb250VmFyaWFudEFsdGVybmF0ZXM/OiBQcm9wZXJ0eS5Gb250VmFyaWFudEFsdGVybmF0ZXMgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi1nYXBgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHNpemUgb2YgdGhlIGdhcCAoZ3V0dGVyKSBiZXR3ZWVuIGFuIGVsZW1lbnQncyBjb2x1bW5zLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGgtcGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIGdyaWRDb2x1bW5HYXA/OiBQcm9wZXJ0eS5HcmlkQ29sdW1uR2FwPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBnYXBgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGdhcHMgKGd1dHRlcnMpIGJldHdlZW4gcm93cyBhbmQgY29sdW1ucy4gSXQgaXMgYSBzaG9ydGhhbmQgZm9yIGByb3ctZ2FwYCBhbmQgYGNvbHVtbi1nYXBgLgogICAqCiAgICogKipTeW50YXgqKjogYDwnZ3JpZC1yb3ctZ2FwJz4gPCdncmlkLWNvbHVtbi1nYXAnPj9gCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIGdyaWRHYXA/OiBQcm9wZXJ0eS5HcmlkR2FwPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmByb3ctZ2FwYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBzaXplIG9mIHRoZSBnYXAgKGd1dHRlcikgYmV0d2VlbiBhbiBlbGVtZW50J3MgZ3JpZCByb3dzLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGgtcGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIGdyaWRSb3dHYXA/OiBQcm9wZXJ0eS5HcmlkUm93R2FwPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBpbWUtbW9kZWAqKiBDU1MgcHJvcGVydHkgY29udHJvbHMgdGhlIHN0YXRlIG9mIHRoZSBpbnB1dCBtZXRob2QgZWRpdG9yIChJTUUpIGZvciB0ZXh0IGZpZWxkcy4gVGhpcyBwcm9wZXJ0eSBpcyBvYnNvbGV0ZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgbm9ybWFsIHwgYWN0aXZlIHwgaW5hY3RpdmUgfCBkaXNhYmxlZGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgaW1lTW9kZT86IFByb3BlcnR5LkltZU1vZGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGluc2V0LWlubGluZWAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBzdGFydCBhbmQgZW5kIG9mZnNldHMgb2YgYW4gZWxlbWVudCBpbiB0aGUgaW5saW5lIGRpcmVjdGlvbiwgd2hpY2ggbWFwcyB0byBwaHlzaWNhbCBvZmZzZXRzIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYHRvcGAgYW5kIGBib3R0b21gLCBvciBgcmlnaHRgIGFuZCBgbGVmdGAgcHJvcGVydGllcyBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBkZWZpbmVkIGZvciBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCd0b3AnPnsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBvZmZzZXRCbG9jaz86IFByb3BlcnR5Lkluc2V0QmxvY2s8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGluc2V0LWJsb2NrLWVuZGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBibG9jayBlbmQgb2Zmc2V0IG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBpbnNldCBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGB0b3BgLCBgcmlnaHRgLCBgYm90dG9tYCwgb3IgYGxlZnRgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3RvcCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBvZmZzZXRCbG9ja0VuZD86IFByb3BlcnR5Lkluc2V0QmxvY2tFbmQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGluc2V0LWJsb2NrLXN0YXJ0YCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIGJsb2NrIHN0YXJ0IG9mZnNldCBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgaW5zZXQgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgdG9wYCwgYHJpZ2h0YCwgYGJvdHRvbWAsIG9yIGBsZWZ0YCBwcm9wZXJ0eSBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBkZWZpbmVkIGZvciBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCd0b3AnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgb2Zmc2V0QmxvY2tTdGFydD86IFByb3BlcnR5Lkluc2V0QmxvY2tTdGFydDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgaW5zZXQtaW5saW5lYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIHN0YXJ0IGFuZCBlbmQgb2Zmc2V0cyBvZiBhbiBlbGVtZW50IGluIHRoZSBpbmxpbmUgZGlyZWN0aW9uLCB3aGljaCBtYXBzIHRvIHBoeXNpY2FsIG9mZnNldHMgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgdG9wYCBhbmQgYGJvdHRvbWAsIG9yIGByaWdodGAgYW5kIGBsZWZ0YCBwcm9wZXJ0aWVzIGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3RvcCc+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIG9mZnNldElubGluZT86IFByb3BlcnR5Lkluc2V0SW5saW5lPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBpbnNldC1pbmxpbmUtZW5kYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIGlubGluZSBlbmQgaW5zZXQgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIG9mZnNldCBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGB0b3BgLCBgcmlnaHRgLCBgYm90dG9tYCwgb3IgYGxlZnRgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3RvcCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBvZmZzZXRJbmxpbmVFbmQ/OiBQcm9wZXJ0eS5JbnNldElubGluZUVuZDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgaW5zZXQtaW5saW5lLXN0YXJ0YCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIGlubGluZSBzdGFydCBpbnNldCBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgb2Zmc2V0IGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYHRvcGAsIGByaWdodGAsIGBib3R0b21gLCBvciBgbGVmdGAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwndG9wJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIG9mZnNldElubGluZVN0YXJ0PzogUHJvcGVydHkuSW5zZXRJbmxpbmVTdGFydDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgc2Nyb2xsLXNuYXAtY29vcmRpbmF0ZWAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgeCBhbmQgeSBjb29yZGluYXRlIHBvc2l0aW9ucyB3aXRoaW4gYW4gZWxlbWVudCB0aGF0IHdpbGwgYWxpZ24gd2l0aCBpdHMgbmVhcmVzdCBhbmNlc3RvciBzY3JvbGwgY29udGFpbmVyJ3MgYHNjcm9sbC1zbmFwLWRlc3RpbmF0aW9uYCBmb3IgZWFjaCByZXNwZWN0aXZlIGF4aXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxwb3NpdGlvbj4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBzY3JvbGxTbmFwQ29vcmRpbmF0ZT86IFByb3BlcnR5LlNjcm9sbFNuYXBDb29yZGluYXRlPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBzY3JvbGwtc25hcC1kZXN0aW5hdGlvbmAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgcG9zaXRpb24gaW4geCBhbmQgeSBjb29yZGluYXRlcyB3aXRoaW4gdGhlIHNjcm9sbCBjb250YWluZXIncyB2aXN1YWwgdmlld3BvcnQgd2hpY2ggZWxlbWVudCBzbmFwIHBvaW50cyBhbGlnbiB3aXRoLgogICAqCiAgICogKipTeW50YXgqKjogYDxwb3NpdGlvbj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBweCAwcHhgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIHNjcm9sbFNuYXBEZXN0aW5hdGlvbj86IFByb3BlcnR5LlNjcm9sbFNuYXBEZXN0aW5hdGlvbjxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgc2Nyb2xsLXNuYXAtcG9pbnRzLXhgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGhvcml6b250YWwgcG9zaXRpb25pbmcgb2Ygc25hcCBwb2ludHMgd2l0aGluIHRoZSBjb250ZW50IG9mIHRoZSBzY3JvbGwgY29udGFpbmVyIHRoZXkgYXJlIGFwcGxpZWQgdG8uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IHJlcGVhdCggPGxlbmd0aC1wZXJjZW50YWdlPiApYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBzY3JvbGxTbmFwUG9pbnRzWD86IFByb3BlcnR5LlNjcm9sbFNuYXBQb2ludHNYIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBzY3JvbGwtc25hcC1wb2ludHMteWAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgdmVydGljYWwgcG9zaXRpb25pbmcgb2Ygc25hcCBwb2ludHMgd2l0aGluIHRoZSBjb250ZW50IG9mIHRoZSBzY3JvbGwgY29udGFpbmVyIHRoZXkgYXJlIGFwcGxpZWQgdG8uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IHJlcGVhdCggPGxlbmd0aC1wZXJjZW50YWdlPiApYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBzY3JvbGxTbmFwUG9pbnRzWT86IFByb3BlcnR5LlNjcm9sbFNuYXBQb2ludHNZIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBzY3JvbGwtc25hcC10eXBlLXhgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgaG93IHN0cmljdGx5IHNuYXAgcG9pbnRzIGFyZSBlbmZvcmNlZCBvbiB0aGUgaG9yaXpvbnRhbCBheGlzIG9mIHRoZSBzY3JvbGwgY29udGFpbmVyIGluIGNhc2UgdGhlcmUgaXMgb25lLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBtYW5kYXRvcnkgfCBwcm94aW1pdHlgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIHNjcm9sbFNuYXBUeXBlWD86IFByb3BlcnR5LlNjcm9sbFNuYXBUeXBlWCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgc2Nyb2xsLXNuYXAtdHlwZS15YCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIGhvdyBzdHJpY3RseSBzbmFwIHBvaW50cyBhcmUgZW5mb3JjZWQgb24gdGhlIHZlcnRpY2FsIGF4aXMgb2YgdGhlIHNjcm9sbCBjb250YWluZXIgaW4gY2FzZSB0aGVyZSBpcyBvbmUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IG1hbmRhdG9yeSB8IHByb3hpbWl0eWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgc2Nyb2xsU25hcFR5cGVZPzogUHJvcGVydHkuU2Nyb2xsU25hcFR5cGVZIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtc2Nyb2xsYmFyLXRyYWNrLWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgdGhlIGNvbG9yIG9mIHRoZSB0cmFjayBlbGVtZW50IG9mIGEgc2Nyb2xsYmFyLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYFNjcm9sbGJhcmAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgc2Nyb2xsYmFyVHJhY2tDb2xvcj86IFByb3BlcnR5Lk1zU2Nyb2xsYmFyVHJhY2tDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LWFsaWduYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgaG93IGFuIGVsZW1lbnQgYWxpZ25zIGl0cyBjb250ZW50cyBhY3Jvc3MgaXRzIGxheW91dCBpbiBhIHBlcnBlbmRpY3VsYXIgZGlyZWN0aW9uLiBUaGUgZWZmZWN0IG9mIHRoZSBwcm9wZXJ0eSBpcyBvbmx5IHZpc2libGUgaWYgdGhlcmUgaXMgZXh0cmEgc3BhY2UgaW4gdGhlIGJveC4KICAgKgogICAqICoqU3ludGF4Kio6IGBzdGFydCB8IGNlbnRlciB8IGVuZCB8IGJhc2VsaW5lIHwgc3RyZXRjaGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc3RyZXRjaGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgS2h0bWxCb3hBbGlnbj86IFByb3BlcnR5LkJveEFsaWduIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3gtZGlyZWN0aW9uYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgd2hldGhlciBhIGJveCBsYXlzIG91dCBpdHMgY29udGVudHMgbm9ybWFsbHkgKGZyb20gdGhlIHRvcCBvciBsZWZ0IGVkZ2UpLCBvciBpbiByZXZlcnNlIChmcm9tIHRoZSBib3R0b20gb3IgcmlnaHQgZWRnZSkuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgcmV2ZXJzZSB8IGluaGVyaXRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgS2h0bWxCb3hEaXJlY3Rpb24/OiBQcm9wZXJ0eS5Cb3hEaXJlY3Rpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tb3otYm94LWZsZXhgKiogYW5kICoqYC13ZWJraXQtYm94LWZsZXhgKiogQ1NTIHByb3BlcnRpZXMgc3BlY2lmeSBob3cgYSBgLW1vei1ib3hgIG9yIGAtd2Via2l0LWJveGAgZ3Jvd3MgdG8gZmlsbCB0aGUgYm94IHRoYXQgY29udGFpbnMgaXQsIGluIHRoZSBkaXJlY3Rpb24gb2YgdGhlIGNvbnRhaW5pbmcgYm94J3MgbGF5b3V0LgogICAqCiAgICogKipTeW50YXgqKjogYDxudW1iZXI+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBLaHRtbEJveEZsZXg/OiBQcm9wZXJ0eS5Cb3hGbGV4IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3gtZmxleC1ncm91cGAqKiBDU1MgcHJvcGVydHkgYXNzaWducyB0aGUgZmxleGJveCdzIGNoaWxkIGVsZW1lbnRzIHRvIGEgZmxleCBncm91cC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8aW50ZWdlcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDFgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIEtodG1sQm94RmxleEdyb3VwPzogUHJvcGVydHkuQm94RmxleEdyb3VwIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3gtbGluZXNgKiogQ1NTIHByb3BlcnR5IGRldGVybWluZXMgd2hldGhlciB0aGUgYm94IG1heSBoYXZlIGEgc2luZ2xlIG9yIG11bHRpcGxlIGxpbmVzIChyb3dzIGZvciBob3Jpem9udGFsbHkgb3JpZW50ZWQgYm94ZXMsIGNvbHVtbnMgZm9yIHZlcnRpY2FsbHkgb3JpZW50ZWQgYm94ZXMpLgogICAqCiAgICogKipTeW50YXgqKjogYHNpbmdsZSB8IG11bHRpcGxlYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzaW5nbGVgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIEtodG1sQm94TGluZXM/OiBQcm9wZXJ0eS5Cb3hMaW5lcyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LW9yZGluYWwtZ3JvdXBgKiogQ1NTIHByb3BlcnR5IGFzc2lnbnMgdGhlIGZsZXhib3gncyBjaGlsZCBlbGVtZW50cyB0byBhbiBvcmRpbmFsIGdyb3VwLgogICAqCiAgICogKipTeW50YXgqKjogYDxpbnRlZ2VyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgS2h0bWxCb3hPcmRpbmFsR3JvdXA/OiBQcm9wZXJ0eS5Cb3hPcmRpbmFsR3JvdXAgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhpcyBpcyBhIHByb3BlcnR5IG9mIHRoZSBvcmlnaW5hbCBDU1MgRmxleGlibGUgQm94IExheW91dCBNb2R1bGUgZHJhZnQsIGFuZCBoYXMgYmVlbiByZXBsYWNlZCBieSBhIG5ld2VyIHN0YW5kYXJkLiBTZWUgZmxleGJveCBmb3IgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGN1cnJlbnQgc3RhbmRhcmQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgaG9yaXpvbnRhbCB8IHZlcnRpY2FsIHwgaW5saW5lLWF4aXMgfCBibG9jay1heGlzIHwgaW5oZXJpdGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgaW5saW5lLWF4aXNgIChgaG9yaXpvbnRhbGAgaW4gWFVMKQogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBLaHRtbEJveE9yaWVudD86IFByb3BlcnR5LkJveE9yaWVudCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1vei1ib3gtcGFja2AqKiBhbmQgKipgLXdlYmtpdC1ib3gtcGFja2AqKiBDU1MgcHJvcGVydGllcyBzcGVjaWZ5IGhvdyBhIGAtbW96LWJveGAgb3IgYC13ZWJraXQtYm94YCBwYWNrcyBpdHMgY29udGVudHMgaW4gdGhlIGRpcmVjdGlvbiBvZiBpdHMgbGF5b3V0LiBUaGUgZWZmZWN0IG9mIHRoaXMgaXMgb25seSB2aXNpYmxlIGlmIHRoZXJlIGlzIGV4dHJhIHNwYWNlIGluIHRoZSBib3guCiAgICoKICAgKiAqKlN5bnRheCoqOiBgc3RhcnQgfCBjZW50ZXIgfCBlbmQgfCBqdXN0aWZ5YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzdGFydGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgS2h0bWxCb3hQYWNrPzogUHJvcGVydHkuQm94UGFjayB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbGluZS1icmVha2AqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgdG8gYnJlYWsgbGluZXMgb2YgQ2hpbmVzZSwgSmFwYW5lc2UsIG9yIEtvcmVhbiAoQ0pLKSB0ZXh0IHdoZW4gd29ya2luZyB3aXRoIHB1bmN0dWF0aW9uIGFuZCBzeW1ib2xzLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBsb29zZSB8IG5vcm1hbCB8IHN0cmljdCB8IGFueXdoZXJlYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBLaHRtbExpbmVCcmVhaz86IFByb3BlcnR5LkxpbmVCcmVhayB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3BhY2l0eWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgb3BhY2l0eSBvZiBhbiBlbGVtZW50LiBPcGFjaXR5IGlzIHRoZSBkZWdyZWUgdG8gd2hpY2ggY29udGVudCBiZWhpbmQgYW4gZWxlbWVudCBpcyBoaWRkZW4sIGFuZCBpcyB0aGUgb3Bwb3NpdGUgb2YgdHJhbnNwYXJlbmN5LgogICAqCiAgICogKipTeW50YXgqKjogYDxhbHBoYS12YWx1ZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDEuMGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgS2h0bWxPcGFjaXR5PzogUHJvcGVydHkuT3BhY2l0eSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYCoqdXNlci1zZWxlY3QqKmAgQ1NTIHByb3BlcnR5IGNvbnRyb2xzIHdoZXRoZXIgdGhlIHVzZXIgY2FuIHNlbGVjdCB0ZXh0LiBUaGlzIGRvZXNuJ3QgaGF2ZSBhbnkgZWZmZWN0IG9uIGNvbnRlbnQgbG9hZGVkIGFzIGNocm9tZSwgZXhjZXB0IGluIHRleHRib3hlcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgdGV4dCB8IG5vbmUgfCBjb250YWluIHwgYWxsYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBLaHRtbFVzZXJTZWxlY3Q/OiBQcm9wZXJ0eS5Vc2VyU2VsZWN0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBiYWNrZ3JvdW5kLWNsaXBgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hldGhlciBhbiBlbGVtZW50J3MgYmFja2dyb3VuZCBleHRlbmRzIHVuZGVybmVhdGggaXRzIGJvcmRlciBib3gsIHBhZGRpbmcgYm94LCBvciBjb250ZW50IGJveC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Ym94PiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGJvcmRlci1ib3hgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIE1vekJhY2tncm91bmRDbGlwPzogUHJvcGVydHkuQmFja2dyb3VuZENsaXAgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJveC1kZWNvcmF0aW9uLWJyZWFrYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgaG93IGFuIGVsZW1lbnQncyBmcmFnbWVudHMgc2hvdWxkIGJlIHJlbmRlcmVkIHdoZW4gYnJva2VuIGFjcm9zcyBtdWx0aXBsZSBsaW5lcywgY29sdW1ucywgb3IgcGFnZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgc2xpY2UgfCBjbG9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc2xpY2VgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIE1vekJhY2tncm91bmRJbmxpbmVQb2xpY3k/OiBQcm9wZXJ0eS5Cb3hEZWNvcmF0aW9uQnJlYWsgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJhY2tncm91bmQtb3JpZ2luYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBiYWNrZ3JvdW5kJ3Mgb3JpZ2luOiBmcm9tIHRoZSBib3JkZXIgc3RhcnQsIGluc2lkZSB0aGUgYm9yZGVyLCBvciBpbnNpZGUgdGhlIHBhZGRpbmcuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGJveD4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBwYWRkaW5nLWJveGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgTW96QmFja2dyb3VuZE9yaWdpbj86IFByb3BlcnR5LkJhY2tncm91bmRPcmlnaW4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJhY2tncm91bmQtc2l6ZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgc2l6ZSBvZiB0aGUgZWxlbWVudCdzIGJhY2tncm91bmQgaW1hZ2UuIFRoZSBpbWFnZSBjYW4gYmUgbGVmdCB0byBpdHMgbmF0dXJhbCBzaXplLCBzdHJldGNoZWQsIG9yIGNvbnN0cmFpbmVkIHRvIGZpdCB0aGUgYXZhaWxhYmxlIHNwYWNlLgogICAqCiAgICogKipTeW50YXgqKjogYDxiZy1zaXplPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG8gYXV0b2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgTW96QmFja2dyb3VuZFNpemU/OiBQcm9wZXJ0eS5CYWNrZ3JvdW5kU2l6ZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1vei1iaW5kaW5nYCoqIENTUyBwcm9wZXJ0eSBpcyB1c2VkIGJ5IE1vemlsbGEtYmFzZWQgYXBwbGljYXRpb25zIHRvIGF0dGFjaCBhbiBYQkwgYmluZGluZyB0byBhIERPTSBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYDx1cmw+IHwgbm9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgTW96QmluZGluZz86IFByb3BlcnR5Lk1vekJpbmRpbmcgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1yYWRpdXNgKiogQ1NTIHByb3BlcnR5IHJvdW5kcyB0aGUgY29ybmVycyBvZiBhbiBlbGVtZW50J3Mgb3V0ZXIgYm9yZGVyIGVkZ2UuIFlvdSBjYW4gc2V0IGEgc2luZ2xlIHJhZGl1cyB0byBtYWtlIGNpcmN1bGFyIGNvcm5lcnMsIG9yIHR3byByYWRpaSB0byBtYWtlIGVsbGlwdGljYWwgY29ybmVycy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoLXBlcmNlbnRhZ2U+ezEsNH0gWyAvIDxsZW5ndGgtcGVyY2VudGFnZT57MSw0fSBdP2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgTW96Qm9yZGVyUmFkaXVzPzogUHJvcGVydHkuQm9yZGVyUmFkaXVzPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzYCoqIENTUyBwcm9wZXJ0eSByb3VuZHMgdGhlIGJvdHRvbS1sZWZ0IGNvcm5lciBvZiBhbiBlbGVtZW50IGJ5IHNwZWNpZnlpbmcgdGhlIHJhZGl1cyAob3IgdGhlIHJhZGl1cyBvZiB0aGUgc2VtaS1tYWpvciBhbmQgc2VtaS1taW5vciBheGVzKSBvZiB0aGUgZWxsaXBzZSBkZWZpbmluZyB0aGUgY3VydmF0dXJlIG9mIHRoZSBjb3JuZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aC1wZXJjZW50YWdlPnsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBNb3pCb3JkZXJSYWRpdXNCb3R0b21sZWZ0PzogUHJvcGVydHkuQm9yZGVyQm90dG9tTGVmdFJhZGl1czxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXNgKiogQ1NTIHByb3BlcnR5IHJvdW5kcyB0aGUgYm90dG9tLXJpZ2h0IGNvcm5lciBvZiBhbiBlbGVtZW50IGJ5IHNwZWNpZnlpbmcgdGhlIHJhZGl1cyAob3IgdGhlIHJhZGl1cyBvZiB0aGUgc2VtaS1tYWpvciBhbmQgc2VtaS1taW5vciBheGVzKSBvZiB0aGUgZWxsaXBzZSBkZWZpbmluZyB0aGUgY3VydmF0dXJlIG9mIHRoZSBjb3JuZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aC1wZXJjZW50YWdlPnsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBNb3pCb3JkZXJSYWRpdXNCb3R0b21yaWdodD86IFByb3BlcnR5LkJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItdG9wLWxlZnQtcmFkaXVzYCoqIENTUyBwcm9wZXJ0eSByb3VuZHMgdGhlIHRvcC1sZWZ0IGNvcm5lciBvZiBhbiBlbGVtZW50IGJ5IHNwZWNpZnlpbmcgdGhlIHJhZGl1cyAob3IgdGhlIHJhZGl1cyBvZiB0aGUgc2VtaS1tYWpvciBhbmQgc2VtaS1taW5vciBheGVzKSBvZiB0aGUgZWxsaXBzZSBkZWZpbmluZyB0aGUgY3VydmF0dXJlIG9mIHRoZSBjb3JuZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aC1wZXJjZW50YWdlPnsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBNb3pCb3JkZXJSYWRpdXNUb3BsZWZ0PzogUHJvcGVydHkuQm9yZGVyVG9wTGVmdFJhZGl1czxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXNgKiogQ1NTIHByb3BlcnR5IHJvdW5kcyB0aGUgdG9wLXJpZ2h0IGNvcm5lciBvZiBhbiBlbGVtZW50IGJ5IHNwZWNpZnlpbmcgdGhlIHJhZGl1cyAob3IgdGhlIHJhZGl1cyBvZiB0aGUgc2VtaS1tYWpvciBhbmQgc2VtaS1taW5vciBheGVzKSBvZiB0aGUgZWxsaXBzZSBkZWZpbmluZyB0aGUgY3VydmF0dXJlIG9mIHRoZSBjb3JuZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aC1wZXJjZW50YWdlPnsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBNb3pCb3JkZXJSYWRpdXNUb3ByaWdodD86IFByb3BlcnR5LkJvcmRlclRvcFJpZ2h0UmFkaXVzPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3gtYWxpZ25gKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyBob3cgYW4gZWxlbWVudCBhbGlnbnMgaXRzIGNvbnRlbnRzIGFjcm9zcyBpdHMgbGF5b3V0IGluIGEgcGVycGVuZGljdWxhciBkaXJlY3Rpb24uIFRoZSBlZmZlY3Qgb2YgdGhlIHByb3BlcnR5IGlzIG9ubHkgdmlzaWJsZSBpZiB0aGVyZSBpcyBleHRyYSBzcGFjZSBpbiB0aGUgYm94LgogICAqCiAgICogKipTeW50YXgqKjogYHN0YXJ0IHwgY2VudGVyIHwgZW5kIHwgYmFzZWxpbmUgfCBzdHJldGNoYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzdHJldGNoYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBNb3pCb3hBbGlnbj86IFByb3BlcnR5LkJveEFsaWduIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3gtZGlyZWN0aW9uYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgd2hldGhlciBhIGJveCBsYXlzIG91dCBpdHMgY29udGVudHMgbm9ybWFsbHkgKGZyb20gdGhlIHRvcCBvciBsZWZ0IGVkZ2UpLCBvciBpbiByZXZlcnNlIChmcm9tIHRoZSBib3R0b20gb3IgcmlnaHQgZWRnZSkuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgcmV2ZXJzZSB8IGluaGVyaXRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgTW96Qm94RGlyZWN0aW9uPzogUHJvcGVydHkuQm94RGlyZWN0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbW96LWJveC1mbGV4YCoqIGFuZCAqKmAtd2Via2l0LWJveC1mbGV4YCoqIENTUyBwcm9wZXJ0aWVzIHNwZWNpZnkgaG93IGEgYC1tb3otYm94YCBvciBgLXdlYmtpdC1ib3hgIGdyb3dzIHRvIGZpbGwgdGhlIGJveCB0aGF0IGNvbnRhaW5zIGl0LCBpbiB0aGUgZGlyZWN0aW9uIG9mIHRoZSBjb250YWluaW5nIGJveCdzIGxheW91dC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bnVtYmVyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgTW96Qm94RmxleD86IFByb3BlcnR5LkJveEZsZXggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJveC1vcmRpbmFsLWdyb3VwYCoqIENTUyBwcm9wZXJ0eSBhc3NpZ25zIHRoZSBmbGV4Ym94J3MgY2hpbGQgZWxlbWVudHMgdG8gYW4gb3JkaW5hbCBncm91cC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8aW50ZWdlcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDFgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIE1vekJveE9yZGluYWxHcm91cD86IFByb3BlcnR5LkJveE9yZGluYWxHcm91cCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGlzIGlzIGEgcHJvcGVydHkgb2YgdGhlIG9yaWdpbmFsIENTUyBGbGV4aWJsZSBCb3ggTGF5b3V0IE1vZHVsZSBkcmFmdCwgYW5kIGhhcyBiZWVuIHJlcGxhY2VkIGJ5IGEgbmV3ZXIgc3RhbmRhcmQuIFNlZSBmbGV4Ym94IGZvciBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCBzdGFuZGFyZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBob3Jpem9udGFsIHwgdmVydGljYWwgfCBpbmxpbmUtYXhpcyB8IGJsb2NrLWF4aXMgfCBpbmhlcml0YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBpbmxpbmUtYXhpc2AgKGBob3Jpem9udGFsYCBpbiBYVUwpCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIE1vekJveE9yaWVudD86IFByb3BlcnR5LkJveE9yaWVudCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1vei1ib3gtcGFja2AqKiBhbmQgKipgLXdlYmtpdC1ib3gtcGFja2AqKiBDU1MgcHJvcGVydGllcyBzcGVjaWZ5IGhvdyBhIGAtbW96LWJveGAgb3IgYC13ZWJraXQtYm94YCBwYWNrcyBpdHMgY29udGVudHMgaW4gdGhlIGRpcmVjdGlvbiBvZiBpdHMgbGF5b3V0LiBUaGUgZWZmZWN0IG9mIHRoaXMgaXMgb25seSB2aXNpYmxlIGlmIHRoZXJlIGlzIGV4dHJhIHNwYWNlIGluIHRoZSBib3guCiAgICoKICAgKiAqKlN5bnRheCoqOiBgc3RhcnQgfCBjZW50ZXIgfCBlbmQgfCBqdXN0aWZ5YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzdGFydGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgTW96Qm94UGFjaz86IFByb3BlcnR5LkJveFBhY2sgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJveC1zaGFkb3dgKiogQ1NTIHByb3BlcnR5IGFkZHMgc2hhZG93IGVmZmVjdHMgYXJvdW5kIGFuIGVsZW1lbnQncyBmcmFtZS4gWW91IGNhbiBzZXQgbXVsdGlwbGUgZWZmZWN0cyBzZXBhcmF0ZWQgYnkgY29tbWFzLiBBIGJveCBzaGFkb3cgaXMgZGVzY3JpYmVkIGJ5IFggYW5kIFkgb2Zmc2V0cyByZWxhdGl2ZSB0byB0aGUgZWxlbWVudCwgYmx1ciBhbmQgc3ByZWFkIHJhZGl1cywgYW5kIGNvbG9yLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8c2hhZG93PiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIE1vekJveFNoYWRvdz86IFByb3BlcnR5LkJveFNoYWRvdyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgbm9uLXN0YW5kYXJkICoqYC1tb3otZmxvYXQtZWRnZWAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHdoZXRoZXIgdGhlIGhlaWdodCBhbmQgd2lkdGggcHJvcGVydGllcyBvZiB0aGUgZWxlbWVudCBpbmNsdWRlIHRoZSBtYXJnaW4sIGJvcmRlciwgb3IgcGFkZGluZyB0aGlja25lc3MuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYm9yZGVyLWJveCB8IGNvbnRlbnQtYm94IHwgbWFyZ2luLWJveCB8IHBhZGRpbmctYm94YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjb250ZW50LWJveGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgTW96RmxvYXRFZGdlPzogUHJvcGVydHkuTW96RmxvYXRFZGdlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbW96LWZvcmNlLWJyb2tlbi1pbWFnZS1pY29uYCoqIGV4dGVuZGVkIENTUyBwcm9wZXJ0eSBjYW4gYmUgdXNlZCB0byBmb3JjZSB0aGUgYnJva2VuIGltYWdlIGljb24gdG8gYmUgc2hvd24gZXZlbiB3aGVuIGEgYnJva2VuIGltYWdlIGhhcyBhbiBgYWx0YCBhdHRyaWJ1dGUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgMCB8IDFgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIE1vekZvcmNlQnJva2VuSW1hZ2VJY29uPzogUHJvcGVydHkuTW96Rm9yY2VCcm9rZW5JbWFnZUljb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG9wYWNpdHlgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG9wYWNpdHkgb2YgYW4gZWxlbWVudC4gT3BhY2l0eSBpcyB0aGUgZGVncmVlIHRvIHdoaWNoIGNvbnRlbnQgYmVoaW5kIGFuIGVsZW1lbnQgaXMgaGlkZGVuLCBhbmQgaXMgdGhlIG9wcG9zaXRlIG9mIHRyYW5zcGFyZW5jeS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8YWxwaGEtdmFsdWU+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAxLjBgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIE1vek9wYWNpdHk/OiBQcm9wZXJ0eS5PcGFjaXR5IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvdXRsaW5lYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgc2V0IGFsbCB0aGUgb3V0bGluZSBwcm9wZXJ0aWVzIGluIGEgc2luZ2xlIGRlY2xhcmF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYFsgPCdvdXRsaW5lLWNvbG9yJz4gfHwgPCdvdXRsaW5lLXN0eWxlJz4gfHwgPCdvdXRsaW5lLXdpZHRoJz4gXWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgTW96T3V0bGluZT86IFByb3BlcnR5Lk91dGxpbmU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG91dGxpbmUtY29sb3JgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGNvbG9yIG9mIGFuIGVsZW1lbnQncyBvdXRsaW5lLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj4gfCBpbnZlcnRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGludmVydGAsIGZvciBicm93c2VycyBzdXBwb3J0aW5nIGl0LCBgY3VycmVudENvbG9yYCBmb3IgdGhlIG90aGVyCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIE1vek91dGxpbmVDb2xvcj86IFByb3BlcnR5Lk91dGxpbmVDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBJbiBNb3ppbGxhIGFwcGxpY2F0aW9ucyBsaWtlIEZpcmVmb3gsIHRoZSAqKmAtbW96LW91dGxpbmUtcmFkaXVzYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgY2FuIGJlIHVzZWQgdG8gZ2l2ZSBhbiBlbGVtZW50J3MgYG91dGxpbmVgIHJvdW5kZWQgY29ybmVycy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8b3V0bGluZS1yYWRpdXM+ezEsNH0gWyAvIDxvdXRsaW5lLXJhZGl1cz57MSw0fSBdP2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgTW96T3V0bGluZVJhZGl1cz86IFByb3BlcnR5Lk1vek91dGxpbmVSYWRpdXM8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogSW4gTW96aWxsYSBhcHBsaWNhdGlvbnMsIHRoZSAqKmAtbW96LW91dGxpbmUtcmFkaXVzLWJvdHRvbWxlZnRgKiogQ1NTIHByb3BlcnR5IGNhbiBiZSB1c2VkIHRvIHJvdW5kIHRoZSBib3R0b20tbGVmdCBjb3JuZXIgb2YgYW4gZWxlbWVudCdzIGBvdXRsaW5lYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8b3V0bGluZS1yYWRpdXM+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBNb3pPdXRsaW5lUmFkaXVzQm90dG9tbGVmdD86IFByb3BlcnR5Lk1vek91dGxpbmVSYWRpdXNCb3R0b21sZWZ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIEluIE1vemlsbGEgYXBwbGljYXRpb25zLCB0aGUgKipgLW1vei1vdXRsaW5lLXJhZGl1cy1ib3R0b21yaWdodGAqKiBDU1MgcHJvcGVydHkgY2FuIGJlIHVzZWQgdG8gcm91bmQgdGhlIGJvdHRvbS1yaWdodCBjb3JuZXIgb2YgYW4gZWxlbWVudCdzIGBvdXRsaW5lYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8b3V0bGluZS1yYWRpdXM+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBNb3pPdXRsaW5lUmFkaXVzQm90dG9tcmlnaHQ/OiBQcm9wZXJ0eS5Nb3pPdXRsaW5lUmFkaXVzQm90dG9tcmlnaHQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogSW4gTW96aWxsYSBhcHBsaWNhdGlvbnMsIHRoZSAqKmAtbW96LW91dGxpbmUtcmFkaXVzLXRvcGxlZnRgKiogQ1NTIHByb3BlcnR5IGNhbiBiZSB1c2VkIHRvIHJvdW5kIHRoZSB0b3AtbGVmdCBjb3JuZXIgb2YgYW4gZWxlbWVudCdzIGBvdXRsaW5lYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8b3V0bGluZS1yYWRpdXM+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBNb3pPdXRsaW5lUmFkaXVzVG9wbGVmdD86IFByb3BlcnR5Lk1vek91dGxpbmVSYWRpdXNUb3BsZWZ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIEluIE1vemlsbGEgYXBwbGljYXRpb25zLCB0aGUgKipgLW1vei1vdXRsaW5lLXJhZGl1cy10b3ByaWdodGAqKiBDU1MgcHJvcGVydHkgY2FuIGJlIHVzZWQgdG8gcm91bmQgdGhlIHRvcC1yaWdodCBjb3JuZXIgb2YgYW4gZWxlbWVudCdzIGBvdXRsaW5lYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8b3V0bGluZS1yYWRpdXM+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBNb3pPdXRsaW5lUmFkaXVzVG9wcmlnaHQ/OiBQcm9wZXJ0eS5Nb3pPdXRsaW5lUmFkaXVzVG9wcmlnaHQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG91dGxpbmUtc3R5bGVgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHN0eWxlIG9mIGFuIGVsZW1lbnQncyBvdXRsaW5lLiBBbiBvdXRsaW5lIGlzIGEgbGluZSB0aGF0IGlzIGRyYXduIGFyb3VuZCBhbiBlbGVtZW50LCBvdXRzaWRlIHRoZSBgYm9yZGVyYC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPCdib3JkZXItc3R5bGUnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgTW96T3V0bGluZVN0eWxlPzogUHJvcGVydHkuT3V0bGluZVN0eWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBDU1MgKipgb3V0bGluZS13aWR0aGAqKiBwcm9wZXJ0eSBzZXRzIHRoZSB0aGlja25lc3Mgb2YgYW4gZWxlbWVudCdzIG91dGxpbmUuIEFuIG91dGxpbmUgaXMgYSBsaW5lIHRoYXQgaXMgZHJhd24gYXJvdW5kIGFuIGVsZW1lbnQsIG91dHNpZGUgdGhlIGBib3JkZXJgLgogICAqCiAgICogKipTeW50YXgqKjogYDxsaW5lLXdpZHRoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWVkaXVtYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBNb3pPdXRsaW5lV2lkdGg/OiBQcm9wZXJ0eS5PdXRsaW5lV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtYWxpZ24tbGFzdGAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgdGhlIGxhc3QgbGluZSBvZiBhIGJsb2NrIG9yIGEgbGluZSwgcmlnaHQgYmVmb3JlIGEgZm9yY2VkIGxpbmUgYnJlYWssIGlzIGFsaWduZWQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IHN0YXJ0IHwgZW5kIHwgbGVmdCB8IHJpZ2h0IHwgY2VudGVyIHwganVzdGlmeWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgTW96VGV4dEFsaWduTGFzdD86IFByb3BlcnR5LlRleHRBbGlnbkxhc3QgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtZGVjb3JhdGlvbi1jb2xvcmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgY29sb3Igb2YgZGVjb3JhdGlvbnMgYWRkZWQgdG8gdGV4dCBieSBgdGV4dC1kZWNvcmF0aW9uLWxpbmVgLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGN1cnJlbnRjb2xvcmAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgTW96VGV4dERlY29yYXRpb25Db2xvcj86IFByb3BlcnR5LlRleHREZWNvcmF0aW9uQ29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtZGVjb3JhdGlvbi1saW5lYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBraW5kIG9mIGRlY29yYXRpb24gdGhhdCBpcyB1c2VkIG9uIHRleHQgaW4gYW4gZWxlbWVudCwgc3VjaCBhcyBhbiB1bmRlcmxpbmUgb3Igb3ZlcmxpbmUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IFsgdW5kZXJsaW5lIHx8IG92ZXJsaW5lIHx8IGxpbmUtdGhyb3VnaCB8fCBibGluayBdIHwgc3BlbGxpbmctZXJyb3IgfCBncmFtbWFyLWVycm9yYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBNb3pUZXh0RGVjb3JhdGlvbkxpbmU/OiBQcm9wZXJ0eS5UZXh0RGVjb3JhdGlvbkxpbmUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtZGVjb3JhdGlvbi1zdHlsZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgc3R5bGUgb2YgdGhlIGxpbmVzIHNwZWNpZmllZCBieSBgdGV4dC1kZWNvcmF0aW9uLWxpbmVgLiBUaGUgc3R5bGUgYXBwbGllcyB0byBhbGwgbGluZXMgdGhhdCBhcmUgc2V0IHdpdGggYHRleHQtZGVjb3JhdGlvbi1saW5lYC4KICAgKgogICAqICoqU3ludGF4Kio6IGBzb2xpZCB8IGRvdWJsZSB8IGRvdHRlZCB8IGRhc2hlZCB8IHdhdnlgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHNvbGlkYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBNb3pUZXh0RGVjb3JhdGlvblN0eWxlPzogUHJvcGVydHkuVGV4dERlY29yYXRpb25TdHlsZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBJbiBNb3ppbGxhIGFwcGxpY2F0aW9ucywgKipgLW1vei11c2VyLWlucHV0YCoqIGRldGVybWluZXMgaWYgYW4gZWxlbWVudCB3aWxsIGFjY2VwdCB1c2VyIGlucHV0LgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBub25lIHwgZW5hYmxlZCB8IGRpc2FibGVkYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBNb3pVc2VySW5wdXQ/OiBQcm9wZXJ0eS5Nb3pVc2VySW5wdXQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGltZS1tb2RlYCoqIENTUyBwcm9wZXJ0eSBjb250cm9scyB0aGUgc3RhdGUgb2YgdGhlIGlucHV0IG1ldGhvZCBlZGl0b3IgKElNRSkgZm9yIHRleHQgZmllbGRzLiBUaGlzIHByb3BlcnR5IGlzIG9ic29sZXRlLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBub3JtYWwgfCBhY3RpdmUgfCBpbmFjdGl2ZSB8IGRpc2FibGVkYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBtc0ltZU1vZGU/OiBQcm9wZXJ0eS5JbWVNb2RlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtc2Nyb2xsYmFyLXRyYWNrLWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgdGhlIGNvbG9yIG9mIHRoZSB0cmFjayBlbGVtZW50IG9mIGEgc2Nyb2xsYmFyLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYFNjcm9sbGJhcmAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgbXNTY3JvbGxiYXJUcmFja0NvbG9yPzogUHJvcGVydHkuTXNTY3JvbGxiYXJUcmFja0NvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb25gKiogc2hvcnRoYW5kIENTUyBwcm9wZXJ0eSBhcHBsaWVzIGFuIGFuaW1hdGlvbiBiZXR3ZWVuIHN0eWxlcy4gSXQgaXMgYSBzaG9ydGhhbmQgZm9yIGBhbmltYXRpb24tbmFtZWAsIGBhbmltYXRpb24tZHVyYXRpb25gLCBgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbmAsIGBhbmltYXRpb24tZGVsYXlgLCBgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudGAsIGBhbmltYXRpb24tZGlyZWN0aW9uYCwgYGFuaW1hdGlvbi1maWxsLW1vZGVgLCBhbmQgYGFuaW1hdGlvbi1wbGF5LXN0YXRlYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2luZ2xlLWFuaW1hdGlvbj4jYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBPQW5pbWF0aW9uPzogUHJvcGVydHkuQW5pbWF0aW9uPFRUaW1lPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYW5pbWF0aW9uLWRlbGF5YCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIGFtb3VudCBvZiB0aW1lIHRvIHdhaXQgZnJvbSBhcHBseWluZyB0aGUgYW5pbWF0aW9uIHRvIGFuIGVsZW1lbnQgYmVmb3JlIGJlZ2lubmluZyB0byBwZXJmb3JtIHRoZSBhbmltYXRpb24uIFRoZSBhbmltYXRpb24gY2FuIHN0YXJ0IGxhdGVyLCBpbW1lZGlhdGVseSBmcm9tIGl0cyBiZWdpbm5pbmcsIG9yIGltbWVkaWF0ZWx5IGFuZCBwYXJ0d2F5IHRocm91Z2ggdGhlIGFuaW1hdGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8dGltZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwc2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgT0FuaW1hdGlvbkRlbGF5PzogUHJvcGVydHkuQW5pbWF0aW9uRGVsYXk8VFRpbWU+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tZGlyZWN0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgYW4gYW5pbWF0aW9uIHNob3VsZCBwbGF5IGZvcndhcmQsIGJhY2t3YXJkLCBvciBhbHRlcm5hdGUgYmFjayBhbmQgZm9ydGggYmV0d2VlbiBwbGF5aW5nIHRoZSBzZXF1ZW5jZSBmb3J3YXJkIGFuZCBiYWNrd2FyZC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2luZ2xlLWFuaW1hdGlvbi1kaXJlY3Rpb24+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBPQW5pbWF0aW9uRGlyZWN0aW9uPzogUHJvcGVydHkuQW5pbWF0aW9uRGlyZWN0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tZHVyYXRpb25gKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGxlbmd0aCBvZiB0aW1lIHRoYXQgYW4gYW5pbWF0aW9uIHRha2VzIHRvIGNvbXBsZXRlIG9uZSBjeWNsZS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8dGltZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwc2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgT0FuaW1hdGlvbkR1cmF0aW9uPzogUHJvcGVydHkuQW5pbWF0aW9uRHVyYXRpb248VFRpbWU+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tZmlsbC1tb2RlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBhIENTUyBhbmltYXRpb24gYXBwbGllcyBzdHlsZXMgdG8gaXRzIHRhcmdldCBiZWZvcmUgYW5kIGFmdGVyIGl0cyBleGVjdXRpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHNpbmdsZS1hbmltYXRpb24tZmlsbC1tb2RlPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIE9BbmltYXRpb25GaWxsTW9kZT86IFByb3BlcnR5LkFuaW1hdGlvbkZpbGxNb2RlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBudW1iZXIgb2YgdGltZXMgYW4gYW5pbWF0aW9uIHNlcXVlbmNlIHNob3VsZCBiZSBwbGF5ZWQgYmVmb3JlIHN0b3BwaW5nLgogICAqCiAgICogKipTeW50YXgqKjogYDxzaW5nbGUtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudD4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAxYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBPQW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ/OiBQcm9wZXJ0eS5BbmltYXRpb25JdGVyYXRpb25Db3VudCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYW5pbWF0aW9uLW5hbWVgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgbmFtZXMgb2Ygb25lIG9yIG1vcmUgYEBrZXlmcmFtZXNgIGF0LXJ1bGVzIGRlc2NyaWJpbmcgdGhlIGFuaW1hdGlvbiBvciBhbmltYXRpb25zIHRvIGFwcGx5IHRvIHRoZSBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYFsgbm9uZSB8IDxrZXlmcmFtZXMtbmFtZT4gXSNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIE9BbmltYXRpb25OYW1lPzogUHJvcGVydHkuQW5pbWF0aW9uTmFtZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYW5pbWF0aW9uLXBsYXktc3RhdGVgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hldGhlciBhbiBhbmltYXRpb24gaXMgcnVubmluZyBvciBwYXVzZWQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHNpbmdsZS1hbmltYXRpb24tcGxheS1zdGF0ZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBydW5uaW5nYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBPQW5pbWF0aW9uUGxheVN0YXRlPzogUHJvcGVydHkuQW5pbWF0aW9uUGxheVN0YXRlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBhbiBhbmltYXRpb24gcHJvZ3Jlc3NlcyB0aHJvdWdoIHRoZSBkdXJhdGlvbiBvZiBlYWNoIGN5Y2xlLgogICAqCiAgICogKipTeW50YXgqKjogYDxlYXNpbmctZnVuY3Rpb24+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgZWFzZWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgT0FuaW1hdGlvblRpbWluZ0Z1bmN0aW9uPzogUHJvcGVydHkuQW5pbWF0aW9uVGltaW5nRnVuY3Rpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJhY2tncm91bmQtc2l6ZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgc2l6ZSBvZiB0aGUgZWxlbWVudCdzIGJhY2tncm91bmQgaW1hZ2UuIFRoZSBpbWFnZSBjYW4gYmUgbGVmdCB0byBpdHMgbmF0dXJhbCBzaXplLCBzdHJldGNoZWQsIG9yIGNvbnN0cmFpbmVkIHRvIGZpdCB0aGUgYXZhaWxhYmxlIHNwYWNlLgogICAqCiAgICogKipTeW50YXgqKjogYDxiZy1zaXplPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG8gYXV0b2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgT0JhY2tncm91bmRTaXplPzogUHJvcGVydHkuQmFja2dyb3VuZFNpemU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbWFnZWAqKiBDU1MgcHJvcGVydHkgZHJhd3MgYW4gaW1hZ2UgYXJvdW5kIGEgZ2l2ZW4gZWxlbWVudC4gSXQgcmVwbGFjZXMgdGhlIGVsZW1lbnQncyByZWd1bGFyIGJvcmRlci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci1pbWFnZS1zb3VyY2UnPiB8fCA8J2JvcmRlci1pbWFnZS1zbGljZSc+IFsgLyA8J2JvcmRlci1pbWFnZS13aWR0aCc+IHwgLyA8J2JvcmRlci1pbWFnZS13aWR0aCc+PyAvIDwnYm9yZGVyLWltYWdlLW91dHNldCc+IF0/IHx8IDwnYm9yZGVyLWltYWdlLXJlcGVhdCc+YAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBPQm9yZGVySW1hZ2U/OiBQcm9wZXJ0eS5Cb3JkZXJJbWFnZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb2JqZWN0LWZpdGAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgdGhlIGNvbnRlbnQgb2YgYSByZXBsYWNlZCBlbGVtZW50LCBzdWNoIGFzIGFuIGA8aW1nPmAgb3IgYDx2aWRlbz5gLCBzaG91bGQgYmUgcmVzaXplZCB0byBmaXQgaXRzIGNvbnRhaW5lci4KICAgKgogICAqICoqU3ludGF4Kio6IGBmaWxsIHwgY29udGFpbiB8IGNvdmVyIHwgbm9uZSB8IHNjYWxlLWRvd25gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGZpbGxgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIE9PYmplY3RGaXQ/OiBQcm9wZXJ0eS5PYmplY3RGaXQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG9iamVjdC1wb3NpdGlvbmAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHRoZSBhbGlnbm1lbnQgb2YgdGhlIHNlbGVjdGVkIHJlcGxhY2VkIGVsZW1lbnQncyBjb250ZW50cyB3aXRoaW4gdGhlIGVsZW1lbnQncyBib3guIEFyZWFzIG9mIHRoZSBib3ggd2hpY2ggYXJlbid0IGNvdmVyZWQgYnkgdGhlIHJlcGxhY2VkIGVsZW1lbnQncyBvYmplY3Qgd2lsbCBzaG93IHRoZSBlbGVtZW50J3MgYmFja2dyb3VuZC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8cG9zaXRpb24+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGA1MCUgNTAlYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBPT2JqZWN0UG9zaXRpb24/OiBQcm9wZXJ0eS5PYmplY3RQb3NpdGlvbjxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGFiLXNpemVgKiogQ1NTIHByb3BlcnR5IGlzIHVzZWQgdG8gY3VzdG9taXplIHRoZSB3aWR0aCBvZiB0YWIgY2hhcmFjdGVycyAoVSswMDA5KS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8aW50ZWdlcj4gfCA8bGVuZ3RoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgOGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgT1RhYlNpemU/OiBQcm9wZXJ0eS5UYWJTaXplPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LW92ZXJmbG93YCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBoaWRkZW4gb3ZlcmZsb3cgY29udGVudCBpcyBzaWduYWxlZCB0byB1c2Vycy4gSXQgY2FuIGJlIGNsaXBwZWQsIGRpc3BsYXkgYW4gZWxsaXBzaXMgKCdg4oCmYCcpLCBvciBkaXNwbGF5IGEgY3VzdG9tIHN0cmluZy4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIGNsaXAgfCBlbGxpcHNpcyB8IDxzdHJpbmc+IF17MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY2xpcGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgT1RleHRPdmVyZmxvdz86IFByb3BlcnR5LlRleHRPdmVyZmxvdyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNmb3JtYCoqIENTUyBwcm9wZXJ0eSBsZXRzIHlvdSByb3RhdGUsIHNjYWxlLCBza2V3LCBvciB0cmFuc2xhdGUgYW4gZWxlbWVudC4gSXQgbW9kaWZpZXMgdGhlIGNvb3JkaW5hdGUgc3BhY2Ugb2YgdGhlIENTUyB2aXN1YWwgZm9ybWF0dGluZyBtb2RlbC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPHRyYW5zZm9ybS1saXN0PmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgT1RyYW5zZm9ybT86IFByb3BlcnR5LlRyYW5zZm9ybSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNmb3JtLW9yaWdpbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgb3JpZ2luIGZvciBhbiBlbGVtZW50J3MgdHJhbnNmb3JtYXRpb25zLgogICAqCiAgICogKipTeW50YXgqKjogYFsgPGxlbmd0aC1wZXJjZW50YWdlPiB8IGxlZnQgfCBjZW50ZXIgfCByaWdodCB8IHRvcCB8IGJvdHRvbSBdIHwgWyBbIDxsZW5ndGgtcGVyY2VudGFnZT4gfCBsZWZ0IHwgY2VudGVyIHwgcmlnaHQgXSAmJiBbIDxsZW5ndGgtcGVyY2VudGFnZT4gfCB0b3AgfCBjZW50ZXIgfCBib3R0b20gXSBdIDxsZW5ndGg+P2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgNTAlIDUwJSAwYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBPVHJhbnNmb3JtT3JpZ2luPzogUHJvcGVydHkuVHJhbnNmb3JtT3JpZ2luPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2l0aW9uYCoqIENTUyBwcm9wZXJ0eSBpcyBhIHNob3J0aGFuZCBwcm9wZXJ0eSBmb3IgYHRyYW5zaXRpb24tcHJvcGVydHlgLCBgdHJhbnNpdGlvbi1kdXJhdGlvbmAsIGB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbmAsIGFuZCBgdHJhbnNpdGlvbi1kZWxheWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHNpbmdsZS10cmFuc2l0aW9uPiNgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIE9UcmFuc2l0aW9uPzogUHJvcGVydHkuVHJhbnNpdGlvbjxUVGltZT4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zaXRpb24tZGVsYXlgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgZHVyYXRpb24gdG8gd2FpdCBiZWZvcmUgc3RhcnRpbmcgYSBwcm9wZXJ0eSdzIHRyYW5zaXRpb24gZWZmZWN0IHdoZW4gaXRzIHZhbHVlIGNoYW5nZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHRpbWU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMHNgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIE9UcmFuc2l0aW9uRGVsYXk/OiBQcm9wZXJ0eS5UcmFuc2l0aW9uRGVsYXk8VFRpbWU+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2l0aW9uLWR1cmF0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBsZW5ndGggb2YgdGltZSBhIHRyYW5zaXRpb24gYW5pbWF0aW9uIHNob3VsZCB0YWtlIHRvIGNvbXBsZXRlLiBCeSBkZWZhdWx0LCB0aGUgdmFsdWUgaXMgYDBzYCwgbWVhbmluZyB0aGF0IG5vIGFuaW1hdGlvbiB3aWxsIG9jY3VyLgogICAqCiAgICogKipTeW50YXgqKjogYDx0aW1lPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBzYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBPVHJhbnNpdGlvbkR1cmF0aW9uPzogUHJvcGVydHkuVHJhbnNpdGlvbkR1cmF0aW9uPFRUaW1lPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNpdGlvbi1wcm9wZXJ0eWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgQ1NTIHByb3BlcnRpZXMgdG8gd2hpY2ggYSB0cmFuc2l0aW9uIGVmZmVjdCBzaG91bGQgYmUgYXBwbGllZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPHNpbmdsZS10cmFuc2l0aW9uLXByb3BlcnR5PiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYWxsCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIE9UcmFuc2l0aW9uUHJvcGVydHk/OiBQcm9wZXJ0eS5UcmFuc2l0aW9uUHJvcGVydHkgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBpbnRlcm1lZGlhdGUgdmFsdWVzIGFyZSBjYWxjdWxhdGVkIGZvciBDU1MgcHJvcGVydGllcyBiZWluZyBhZmZlY3RlZCBieSBhIHRyYW5zaXRpb24gZWZmZWN0LgogICAqCiAgICogKipTeW50YXgqKjogYDxlYXNpbmctZnVuY3Rpb24+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgZWFzZWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgT1RyYW5zaXRpb25UaW1pbmdGdW5jdGlvbj86IFByb3BlcnR5LlRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LWFsaWduYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgaG93IGFuIGVsZW1lbnQgYWxpZ25zIGl0cyBjb250ZW50cyBhY3Jvc3MgaXRzIGxheW91dCBpbiBhIHBlcnBlbmRpY3VsYXIgZGlyZWN0aW9uLiBUaGUgZWZmZWN0IG9mIHRoZSBwcm9wZXJ0eSBpcyBvbmx5IHZpc2libGUgaWYgdGhlcmUgaXMgZXh0cmEgc3BhY2UgaW4gdGhlIGJveC4KICAgKgogICAqICoqU3ludGF4Kio6IGBzdGFydCB8IGNlbnRlciB8IGVuZCB8IGJhc2VsaW5lIHwgc3RyZXRjaGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc3RyZXRjaGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgV2Via2l0Qm94QWxpZ24/OiBQcm9wZXJ0eS5Cb3hBbGlnbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LWRpcmVjdGlvbmAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHdoZXRoZXIgYSBib3ggbGF5cyBvdXQgaXRzIGNvbnRlbnRzIG5vcm1hbGx5IChmcm9tIHRoZSB0b3Agb3IgbGVmdCBlZGdlKSwgb3IgaW4gcmV2ZXJzZSAoZnJvbSB0aGUgYm90dG9tIG9yIHJpZ2h0IGVkZ2UpLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IHJldmVyc2UgfCBpbmhlcml0YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIFdlYmtpdEJveERpcmVjdGlvbj86IFByb3BlcnR5LkJveERpcmVjdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1vei1ib3gtZmxleGAqKiBhbmQgKipgLXdlYmtpdC1ib3gtZmxleGAqKiBDU1MgcHJvcGVydGllcyBzcGVjaWZ5IGhvdyBhIGAtbW96LWJveGAgb3IgYC13ZWJraXQtYm94YCBncm93cyB0byBmaWxsIHRoZSBib3ggdGhhdCBjb250YWlucyBpdCwgaW4gdGhlIGRpcmVjdGlvbiBvZiB0aGUgY29udGFpbmluZyBib3gncyBsYXlvdXQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPG51bWJlcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIFdlYmtpdEJveEZsZXg/OiBQcm9wZXJ0eS5Cb3hGbGV4IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3gtZmxleC1ncm91cGAqKiBDU1MgcHJvcGVydHkgYXNzaWducyB0aGUgZmxleGJveCdzIGNoaWxkIGVsZW1lbnRzIHRvIGEgZmxleCBncm91cC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8aW50ZWdlcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDFgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIFdlYmtpdEJveEZsZXhHcm91cD86IFByb3BlcnR5LkJveEZsZXhHcm91cCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LWxpbmVzYCoqIENTUyBwcm9wZXJ0eSBkZXRlcm1pbmVzIHdoZXRoZXIgdGhlIGJveCBtYXkgaGF2ZSBhIHNpbmdsZSBvciBtdWx0aXBsZSBsaW5lcyAocm93cyBmb3IgaG9yaXpvbnRhbGx5IG9yaWVudGVkIGJveGVzLCBjb2x1bW5zIGZvciB2ZXJ0aWNhbGx5IG9yaWVudGVkIGJveGVzKS4KICAgKgogICAqICoqU3ludGF4Kio6IGBzaW5nbGUgfCBtdWx0aXBsZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc2luZ2xlYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBXZWJraXRCb3hMaW5lcz86IFByb3BlcnR5LkJveExpbmVzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3gtb3JkaW5hbC1ncm91cGAqKiBDU1MgcHJvcGVydHkgYXNzaWducyB0aGUgZmxleGJveCdzIGNoaWxkIGVsZW1lbnRzIHRvIGFuIG9yZGluYWwgZ3JvdXAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGludGVnZXI+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAxYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBXZWJraXRCb3hPcmRpbmFsR3JvdXA/OiBQcm9wZXJ0eS5Cb3hPcmRpbmFsR3JvdXAgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhpcyBpcyBhIHByb3BlcnR5IG9mIHRoZSBvcmlnaW5hbCBDU1MgRmxleGlibGUgQm94IExheW91dCBNb2R1bGUgZHJhZnQsIGFuZCBoYXMgYmVlbiByZXBsYWNlZCBieSBhIG5ld2VyIHN0YW5kYXJkLiBTZWUgZmxleGJveCBmb3IgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGN1cnJlbnQgc3RhbmRhcmQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgaG9yaXpvbnRhbCB8IHZlcnRpY2FsIHwgaW5saW5lLWF4aXMgfCBibG9jay1heGlzIHwgaW5oZXJpdGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgaW5saW5lLWF4aXNgIChgaG9yaXpvbnRhbGAgaW4gWFVMKQogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBXZWJraXRCb3hPcmllbnQ/OiBQcm9wZXJ0eS5Cb3hPcmllbnQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tb3otYm94LXBhY2tgKiogYW5kICoqYC13ZWJraXQtYm94LXBhY2tgKiogQ1NTIHByb3BlcnRpZXMgc3BlY2lmeSBob3cgYSBgLW1vei1ib3hgIG9yIGAtd2Via2l0LWJveGAgcGFja3MgaXRzIGNvbnRlbnRzIGluIHRoZSBkaXJlY3Rpb24gb2YgaXRzIGxheW91dC4gVGhlIGVmZmVjdCBvZiB0aGlzIGlzIG9ubHkgdmlzaWJsZSBpZiB0aGVyZSBpcyBleHRyYSBzcGFjZSBpbiB0aGUgYm94LgogICAqCiAgICogKipTeW50YXgqKjogYHN0YXJ0IHwgY2VudGVyIHwgZW5kIHwganVzdGlmeWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc3RhcnRgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIFdlYmtpdEJveFBhY2s/OiBQcm9wZXJ0eS5Cb3hQYWNrIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBzY3JvbGwtc25hcC1wb2ludHMteGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgaG9yaXpvbnRhbCBwb3NpdGlvbmluZyBvZiBzbmFwIHBvaW50cyB3aXRoaW4gdGhlIGNvbnRlbnQgb2YgdGhlIHNjcm9sbCBjb250YWluZXIgdGhleSBhcmUgYXBwbGllZCB0by4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgcmVwZWF0KCA8bGVuZ3RoLXBlcmNlbnRhZ2U+IClgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIFdlYmtpdFNjcm9sbFNuYXBQb2ludHNYPzogUHJvcGVydHkuU2Nyb2xsU25hcFBvaW50c1ggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHNjcm9sbC1zbmFwLXBvaW50cy15YCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSB2ZXJ0aWNhbCBwb3NpdGlvbmluZyBvZiBzbmFwIHBvaW50cyB3aXRoaW4gdGhlIGNvbnRlbnQgb2YgdGhlIHNjcm9sbCBjb250YWluZXIgdGhleSBhcmUgYXBwbGllZCB0by4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgcmVwZWF0KCA8bGVuZ3RoLXBlcmNlbnRhZ2U+IClgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIFdlYmtpdFNjcm9sbFNuYXBQb2ludHNZPzogUHJvcGVydHkuU2Nyb2xsU25hcFBvaW50c1kgfCB1bmRlZmluZWQ7Cn0KCmV4cG9ydCBpbnRlcmZhY2UgU3ZnUHJvcGVydGllczxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+IHsKICBhbGlnbm1lbnRCYXNlbGluZT86IFByb3BlcnR5LkFsaWdubWVudEJhc2VsaW5lIHwgdW5kZWZpbmVkOwogIGJhc2VsaW5lU2hpZnQ/OiBQcm9wZXJ0eS5CYXNlbGluZVNoaWZ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIGNsaXA/OiBQcm9wZXJ0eS5DbGlwIHwgdW5kZWZpbmVkOwogIGNsaXBQYXRoPzogUHJvcGVydHkuQ2xpcFBhdGggfCB1bmRlZmluZWQ7CiAgY2xpcFJ1bGU/OiBQcm9wZXJ0eS5DbGlwUnVsZSB8IHVuZGVmaW5lZDsKICBjb2xvcj86IFByb3BlcnR5LkNvbG9yIHwgdW5kZWZpbmVkOwogIGNvbG9ySW50ZXJwb2xhdGlvbj86IFByb3BlcnR5LkNvbG9ySW50ZXJwb2xhdGlvbiB8IHVuZGVmaW5lZDsKICBjb2xvclJlbmRlcmluZz86IFByb3BlcnR5LkNvbG9yUmVuZGVyaW5nIHwgdW5kZWZpbmVkOwogIGN1cnNvcj86IFByb3BlcnR5LkN1cnNvciB8IHVuZGVmaW5lZDsKICBkaXJlY3Rpb24/OiBQcm9wZXJ0eS5EaXJlY3Rpb24gfCB1bmRlZmluZWQ7CiAgZGlzcGxheT86IFByb3BlcnR5LkRpc3BsYXkgfCB1bmRlZmluZWQ7CiAgZG9taW5hbnRCYXNlbGluZT86IFByb3BlcnR5LkRvbWluYW50QmFzZWxpbmUgfCB1bmRlZmluZWQ7CiAgZmlsbD86IFByb3BlcnR5LkZpbGwgfCB1bmRlZmluZWQ7CiAgZmlsbE9wYWNpdHk/OiBQcm9wZXJ0eS5GaWxsT3BhY2l0eSB8IHVuZGVmaW5lZDsKICBmaWxsUnVsZT86IFByb3BlcnR5LkZpbGxSdWxlIHwgdW5kZWZpbmVkOwogIGZpbHRlcj86IFByb3BlcnR5LkZpbHRlciB8IHVuZGVmaW5lZDsKICBmbG9vZENvbG9yPzogUHJvcGVydHkuRmxvb2RDb2xvciB8IHVuZGVmaW5lZDsKICBmbG9vZE9wYWNpdHk/OiBQcm9wZXJ0eS5GbG9vZE9wYWNpdHkgfCB1bmRlZmluZWQ7CiAgZm9udD86IFByb3BlcnR5LkZvbnQgfCB1bmRlZmluZWQ7CiAgZm9udEZhbWlseT86IFByb3BlcnR5LkZvbnRGYW1pbHkgfCB1bmRlZmluZWQ7CiAgZm9udFNpemU/OiBQcm9wZXJ0eS5Gb250U2l6ZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICBmb250U2l6ZUFkanVzdD86IFByb3BlcnR5LkZvbnRTaXplQWRqdXN0IHwgdW5kZWZpbmVkOwogIGZvbnRTdHJldGNoPzogUHJvcGVydHkuRm9udFN0cmV0Y2ggfCB1bmRlZmluZWQ7CiAgZm9udFN0eWxlPzogUHJvcGVydHkuRm9udFN0eWxlIHwgdW5kZWZpbmVkOwogIGZvbnRWYXJpYW50PzogUHJvcGVydHkuRm9udFZhcmlhbnQgfCB1bmRlZmluZWQ7CiAgZm9udFdlaWdodD86IFByb3BlcnR5LkZvbnRXZWlnaHQgfCB1bmRlZmluZWQ7CiAgZ2x5cGhPcmllbnRhdGlvblZlcnRpY2FsPzogUHJvcGVydHkuR2x5cGhPcmllbnRhdGlvblZlcnRpY2FsIHwgdW5kZWZpbmVkOwogIGltYWdlUmVuZGVyaW5nPzogUHJvcGVydHkuSW1hZ2VSZW5kZXJpbmcgfCB1bmRlZmluZWQ7CiAgbGV0dGVyU3BhY2luZz86IFByb3BlcnR5LkxldHRlclNwYWNpbmc8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgbGlnaHRpbmdDb2xvcj86IFByb3BlcnR5LkxpZ2h0aW5nQ29sb3IgfCB1bmRlZmluZWQ7CiAgbGluZUhlaWdodD86IFByb3BlcnR5LkxpbmVIZWlnaHQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgbWFya2VyPzogUHJvcGVydHkuTWFya2VyIHwgdW5kZWZpbmVkOwogIG1hcmtlckVuZD86IFByb3BlcnR5Lk1hcmtlckVuZCB8IHVuZGVmaW5lZDsKICBtYXJrZXJNaWQ/OiBQcm9wZXJ0eS5NYXJrZXJNaWQgfCB1bmRlZmluZWQ7CiAgbWFya2VyU3RhcnQ/OiBQcm9wZXJ0eS5NYXJrZXJTdGFydCB8IHVuZGVmaW5lZDsKICBtYXNrPzogUHJvcGVydHkuTWFzazxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICBvcGFjaXR5PzogUHJvcGVydHkuT3BhY2l0eSB8IHVuZGVmaW5lZDsKICBvdmVyZmxvdz86IFByb3BlcnR5Lk92ZXJmbG93IHwgdW5kZWZpbmVkOwogIHBhaW50T3JkZXI/OiBQcm9wZXJ0eS5QYWludE9yZGVyIHwgdW5kZWZpbmVkOwogIHBvaW50ZXJFdmVudHM/OiBQcm9wZXJ0eS5Qb2ludGVyRXZlbnRzIHwgdW5kZWZpbmVkOwogIHNoYXBlUmVuZGVyaW5nPzogUHJvcGVydHkuU2hhcGVSZW5kZXJpbmcgfCB1bmRlZmluZWQ7CiAgc3RvcENvbG9yPzogUHJvcGVydHkuU3RvcENvbG9yIHwgdW5kZWZpbmVkOwogIHN0b3BPcGFjaXR5PzogUHJvcGVydHkuU3RvcE9wYWNpdHkgfCB1bmRlZmluZWQ7CiAgc3Ryb2tlPzogUHJvcGVydHkuU3Ryb2tlIHwgdW5kZWZpbmVkOwogIHN0cm9rZURhc2hhcnJheT86IFByb3BlcnR5LlN0cm9rZURhc2hhcnJheTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICBzdHJva2VEYXNob2Zmc2V0PzogUHJvcGVydHkuU3Ryb2tlRGFzaG9mZnNldDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICBzdHJva2VMaW5lY2FwPzogUHJvcGVydHkuU3Ryb2tlTGluZWNhcCB8IHVuZGVmaW5lZDsKICBzdHJva2VMaW5lam9pbj86IFByb3BlcnR5LlN0cm9rZUxpbmVqb2luIHwgdW5kZWZpbmVkOwogIHN0cm9rZU1pdGVybGltaXQ/OiBQcm9wZXJ0eS5TdHJva2VNaXRlcmxpbWl0IHwgdW5kZWZpbmVkOwogIHN0cm9rZU9wYWNpdHk/OiBQcm9wZXJ0eS5TdHJva2VPcGFjaXR5IHwgdW5kZWZpbmVkOwogIHN0cm9rZVdpZHRoPzogUHJvcGVydHkuU3Ryb2tlV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgdGV4dEFuY2hvcj86IFByb3BlcnR5LlRleHRBbmNob3IgfCB1bmRlZmluZWQ7CiAgdGV4dERlY29yYXRpb24/OiBQcm9wZXJ0eS5UZXh0RGVjb3JhdGlvbjxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICB0ZXh0UmVuZGVyaW5nPzogUHJvcGVydHkuVGV4dFJlbmRlcmluZyB8IHVuZGVmaW5lZDsKICB1bmljb2RlQmlkaT86IFByb3BlcnR5LlVuaWNvZGVCaWRpIHwgdW5kZWZpbmVkOwogIHZlY3RvckVmZmVjdD86IFByb3BlcnR5LlZlY3RvckVmZmVjdCB8IHVuZGVmaW5lZDsKICB2aXNpYmlsaXR5PzogUHJvcGVydHkuVmlzaWJpbGl0eSB8IHVuZGVmaW5lZDsKICB3aGl0ZVNwYWNlPzogUHJvcGVydHkuV2hpdGVTcGFjZSB8IHVuZGVmaW5lZDsKICB3b3JkU3BhY2luZz86IFByb3BlcnR5LldvcmRTcGFjaW5nPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIHdyaXRpbmdNb2RlPzogUHJvcGVydHkuV3JpdGluZ01vZGUgfCB1bmRlZmluZWQ7Cn0KCmV4cG9ydCBpbnRlcmZhY2UgUHJvcGVydGllczxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+CiAgZXh0ZW5kcyBTdGFuZGFyZFByb3BlcnRpZXM8VExlbmd0aCwgVFRpbWU+LAogICAgVmVuZG9yUHJvcGVydGllczxUTGVuZ3RoLCBUVGltZT4sCiAgICBPYnNvbGV0ZVByb3BlcnRpZXM8VExlbmd0aCwgVFRpbWU+LAogICAgU3ZnUHJvcGVydGllczxUTGVuZ3RoLCBUVGltZT4ge30KCmV4cG9ydCBpbnRlcmZhY2UgU3RhbmRhcmRMb25naGFuZFByb3BlcnRpZXNIeXBoZW48VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwLCBUVGltZSA9IHN0cmluZyAmIHt9PiB7CiAgLyoqCiAgICogVGhlICoqYGFjY2VudC1jb2xvcmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgY29sb3Igb2YgdGhlIGVsZW1lbnRzIGFjY2VudC4gQW4gYWNjZW50IGFwcGVhcnMgaW4gZWxlbWVudHMgc3VjaCBhcyBgPGlucHV0PmAgb2YgYHR5cGU9ImNoZWNrYm94ImAsIG9yIGB0eXBlPSJyYWRpbyJgLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCA8Y29sb3I+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio5MyoqIHwgKio5MioqICB8ICAgTm8gICB8ICoqOTMqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9hY2NlbnQtY29sb3IKICAgKi8KICAiYWNjZW50LWNvbG9yIj86IFByb3BlcnR5LkFjY2VudENvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBDU1MgKipgYWxpZ24tY29udGVudGAqKiBwcm9wZXJ0eSBzZXRzIHRoZSBkaXN0cmlidXRpb24gb2Ygc3BhY2UgYmV0d2VlbiBhbmQgYXJvdW5kIGNvbnRlbnQgaXRlbXMgYWxvbmcgYSBmbGV4Ym94J3MgY3Jvc3MtYXhpcyBvciBhIGdyaWQncyBibG9jayBheGlzLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IDxiYXNlbGluZS1wb3NpdGlvbj4gfCA8Y29udGVudC1kaXN0cmlidXRpb24+IHwgPG92ZXJmbG93LXBvc2l0aW9uPj8gPGNvbnRlbnQtcG9zaXRpb24+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiAtLS0KICAgKgogICAqIF9TdXBwb3J0ZWQgaW4gRmxleCBMYXlvdXRfCiAgICoKICAgKiB8ICBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAgKioyOSoqICB8ICoqMjgqKiAgfCAgKio5KiogIHwgKioxMioqIHwgKioxMSoqIHwKICAgKiB8IDIxIF8teC1fIHwgICAgICAgICB8IDcgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIEdyaWQgTGF5b3V0XwogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTcqKiB8ICoqNTIqKiAgfCAqKjEwLjEqKiB8ICoqMTYqKiB8IE5vICB8CiAgICoKICAgKiAtLS0KICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2FsaWduLWNvbnRlbnQKICAgKi8KICAiYWxpZ24tY29udGVudCI/OiBQcm9wZXJ0eS5BbGlnbkNvbnRlbnQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIENTUyAqKmBhbGlnbi1pdGVtc2AqKiBwcm9wZXJ0eSBzZXRzIHRoZSBgYWxpZ24tc2VsZmAgdmFsdWUgb24gYWxsIGRpcmVjdCBjaGlsZHJlbiBhcyBhIGdyb3VwLiBJbiBGbGV4Ym94LCBpdCBjb250cm9scyB0aGUgYWxpZ25tZW50IG9mIGl0ZW1zIG9uIHRoZSBDcm9zcyBBeGlzLiBJbiBHcmlkIExheW91dCwgaXQgY29udHJvbHMgdGhlIGFsaWdubWVudCBvZiBpdGVtcyBvbiB0aGUgQmxvY2sgQXhpcyB3aXRoaW4gdGhlaXIgZ3JpZCBhcmVhLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IHN0cmV0Y2ggfCA8YmFzZWxpbmUtcG9zaXRpb24+IHwgWyA8b3ZlcmZsb3ctcG9zaXRpb24+PyA8c2VsZi1wb3NpdGlvbj4gXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIEZsZXggTGF5b3V0XwogICAqCiAgICogfCAgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgICoqNTIqKiAgfCAqKjIwKiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTEqKiB8CiAgICogfCAyMSBfLXgtXyB8ICAgICAgICAgfCA3IF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIC0tLQogICAqCiAgICogX1N1cHBvcnRlZCBpbiBHcmlkIExheW91dF8KICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjUyKiogIHwgKioxMC4xKiogfCAqKjE2KiogfCBObyAgfAogICAqCiAgICogLS0tCiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9hbGlnbi1pdGVtcwogICAqLwogICJhbGlnbi1pdGVtcyI/OiBQcm9wZXJ0eS5BbGlnbkl0ZW1zIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbGlnbi1zZWxmYCoqIENTUyBwcm9wZXJ0eSBvdmVycmlkZXMgYSBncmlkIG9yIGZsZXggaXRlbSdzIGBhbGlnbi1pdGVtc2AgdmFsdWUuIEluIEdyaWQsIGl0IGFsaWducyB0aGUgaXRlbSBpbnNpZGUgdGhlwqBncmlkIGFyZWEuIEluIEZsZXhib3gsIGl0IGFsaWducyB0aGUgaXRlbSBvbiB0aGUgY3Jvc3MgYXhpcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgbm9ybWFsIHwgc3RyZXRjaCB8IDxiYXNlbGluZS1wb3NpdGlvbj4gfCA8b3ZlcmZsb3ctcG9zaXRpb24+PyA8c2VsZi1wb3NpdGlvbj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiAtLS0KICAgKgogICAqIF9TdXBwb3J0ZWQgaW4gRmxleCBMYXlvdXRfCiAgICoKICAgKiB8ICBDaHJvbWUgIHwgRmlyZWZveCB8ICBTYWZhcmkgICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgICoqMzYqKiAgfCAqKjIwKiogIHwgICAqKjkqKiAgIHwgKioxMioqIHwgKioxMSoqIHwKICAgKiB8IDIxIF8teC1fIHwgICAgICAgICB8IDYuMSBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiAtLS0KICAgKgogICAqIF9TdXBwb3J0ZWQgaW4gR3JpZCBMYXlvdXRfCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8ICAgICAgSUUgICAgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LS0tLS0tLS0tLTogfAogICAqIHwgKio1NyoqIHwgKio1MioqICB8ICoqMTAuMSoqIHwgKioxNioqIHwgKioxMCoqIF8teC1fIHwKICAgKgogICAqIC0tLQogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYWxpZ24tc2VsZgogICAqLwogICJhbGlnbi1zZWxmIj86IFByb3BlcnR5LkFsaWduU2VsZiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYWxpZ24tdHJhY2tzYCoqwqBDU1MgcHJvcGVydHkgc2V0cyB0aGUgYWxpZ25tZW50IGluIHRoZSBtYXNvbnJ5IGF4aXMgZm9yIGdyaWQgY29udGFpbmVycyB0aGF0IGhhdmUgbWFzb25yeSBpbiB0aGVpciBibG9jayBheGlzLgogICAqCiAgICogKipTeW50YXgqKjogYFsgbm9ybWFsIHwgPGJhc2VsaW5lLXBvc2l0aW9uPiB8IDxjb250ZW50LWRpc3RyaWJ1dGlvbj4gfCA8b3ZlcmZsb3ctcG9zaXRpb24+PyA8Y29udGVudC1wb3NpdGlvbj4gXSNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8IEVkZ2UgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLTogfCA6LTogfAogICAqIHwgICBObyAgIHwgICBuL2EgICB8ICAgTm8gICB8ICBObyAgfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYWxpZ24tdHJhY2tzCiAgICovCiAgImFsaWduLXRyYWNrcyI/OiBQcm9wZXJ0eS5BbGlnblRyYWNrcyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYW5pbWF0aW9uLWRlbGF5YCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIGFtb3VudCBvZiB0aW1lIHRvIHdhaXQgZnJvbSBhcHBseWluZyB0aGUgYW5pbWF0aW9uIHRvIGFuIGVsZW1lbnQgYmVmb3JlIGJlZ2lubmluZyB0byBwZXJmb3JtIHRoZSBhbmltYXRpb24uIFRoZSBhbmltYXRpb24gY2FuIHN0YXJ0IGxhdGVyLCBpbW1lZGlhdGVseSBmcm9tIGl0cyBiZWdpbm5pbmcsIG9yIGltbWVkaWF0ZWx5IGFuZCBwYXJ0d2F5IHRocm91Z2ggdGhlIGFuaW1hdGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8dGltZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwc2AKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjQzKiogIHwgKioxNioqICB8ICAqKjkqKiAgfCAqKjEyKiogfCAqKjEwKiogfAogICAqIHwgMyBfLXgtXyB8IDUgXy14LV8gfCA0IF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2FuaW1hdGlvbi1kZWxheQogICAqLwogICJhbmltYXRpb24tZGVsYXkiPzogUHJvcGVydHkuQW5pbWF0aW9uRGVsYXk8VFRpbWU+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tZGlyZWN0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgYW4gYW5pbWF0aW9uIHNob3VsZCBwbGF5IGZvcndhcmQsIGJhY2t3YXJkLCBvciBhbHRlcm5hdGUgYmFjayBhbmQgZm9ydGggYmV0d2VlbiBwbGF5aW5nIHRoZSBzZXF1ZW5jZSBmb3J3YXJkIGFuZCBiYWNrd2FyZC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2luZ2xlLWFuaW1hdGlvbi1kaXJlY3Rpb24+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNDMqKiAgfCAqKjE2KiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAzIF8teC1fIHwgNSBfLXgtXyB8IDQgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYW5pbWF0aW9uLWRpcmVjdGlvbgogICAqLwogICJhbmltYXRpb24tZGlyZWN0aW9uIj86IFByb3BlcnR5LkFuaW1hdGlvbkRpcmVjdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYW5pbWF0aW9uLWR1cmF0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBsZW5ndGggb2YgdGltZSB0aGF0IGFuIGFuaW1hdGlvbiB0YWtlcyB0byBjb21wbGV0ZSBvbmUgY3ljbGUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHRpbWU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMHNgCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgKio0MyoqICB8ICoqMTYqKiAgfCAgKio5KiogIHwgKioxMioqIHwgKioxMCoqIHwKICAgKiB8IDMgXy14LV8gfCA1IF8teC1fIHwgNCBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9hbmltYXRpb24tZHVyYXRpb24KICAgKi8KICAiYW5pbWF0aW9uLWR1cmF0aW9uIj86IFByb3BlcnR5LkFuaW1hdGlvbkR1cmF0aW9uPFRUaW1lPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYW5pbWF0aW9uLWZpbGwtbW9kZWAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgYSBDU1MgYW5pbWF0aW9uIGFwcGxpZXMgc3R5bGVzIHRvIGl0cyB0YXJnZXQgYmVmb3JlIGFuZCBhZnRlciBpdHMgZXhlY3V0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYDxzaW5nbGUtYW5pbWF0aW9uLWZpbGwtbW9kZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNDMqKiAgfCAqKjE2KiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAzIF8teC1fIHwgNSBfLXgtXyB8IDUgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYW5pbWF0aW9uLWZpbGwtbW9kZQogICAqLwogICJhbmltYXRpb24tZmlsbC1tb2RlIj86IFByb3BlcnR5LkFuaW1hdGlvbkZpbGxNb2RlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBudW1iZXIgb2YgdGltZXMgYW4gYW5pbWF0aW9uIHNlcXVlbmNlIHNob3VsZCBiZSBwbGF5ZWQgYmVmb3JlIHN0b3BwaW5nLgogICAqCiAgICogKipTeW50YXgqKjogYDxzaW5nbGUtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudD4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAxYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNDMqKiAgfCAqKjE2KiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAzIF8teC1fIHwgNSBfLXgtXyB8IDQgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudAogICAqLwogICJhbmltYXRpb24taXRlcmF0aW9uLWNvdW50Ij86IFByb3BlcnR5LkFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tbmFtZWAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHRoZSBuYW1lcyBvZiBvbmUgb3IgbW9yZSBgQGtleWZyYW1lc2AgYXQtcnVsZXMgZGVzY3JpYmluZyB0aGUgYW5pbWF0aW9uIG9yIGFuaW1hdGlvbnMgdG8gYXBwbHkgdG8gdGhlIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyBub25lIHwgPGtleWZyYW1lcy1uYW1lPiBdI2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjQzKiogIHwgKioxNioqICB8ICAqKjkqKiAgfCAqKjEyKiogfCAqKjEwKiogfAogICAqIHwgMyBfLXgtXyB8IDUgXy14LV8gfCA0IF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2FuaW1hdGlvbi1uYW1lCiAgICovCiAgImFuaW1hdGlvbi1uYW1lIj86IFByb3BlcnR5LkFuaW1hdGlvbk5hbWUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbi1wbGF5LXN0YXRlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgYW4gYW5pbWF0aW9uIGlzIHJ1bm5pbmcgb3IgcGF1c2VkLgogICAqCiAgICogKipTeW50YXgqKjogYDxzaW5nbGUtYW5pbWF0aW9uLXBsYXktc3RhdGU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgcnVubmluZ2AKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjQzKiogIHwgKioxNioqICB8ICAqKjkqKiAgfCAqKjEyKiogfCAqKjEwKiogfAogICAqIHwgMyBfLXgtXyB8IDUgXy14LV8gfCA0IF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2FuaW1hdGlvbi1wbGF5LXN0YXRlCiAgICovCiAgImFuaW1hdGlvbi1wbGF5LXN0YXRlIj86IFByb3BlcnR5LkFuaW1hdGlvblBsYXlTdGF0ZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgYW4gYW5pbWF0aW9uIHByb2dyZXNzZXMgdGhyb3VnaCB0aGUgZHVyYXRpb24gb2YgZWFjaCBjeWNsZS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8ZWFzaW5nLWZ1bmN0aW9uPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGVhc2VgCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgKio0MyoqICB8ICoqMTYqKiAgfCAgKio5KiogIHwgKioxMioqIHwgKioxMCoqIHwKICAgKiB8IDMgXy14LV8gfCA1IF8teC1fIHwgNCBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uCiAgICovCiAgImFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb24iPzogUHJvcGVydHkuQW5pbWF0aW9uVGltaW5nRnVuY3Rpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKmFwcGVhcmFuY2UqKmAgQ1NTIHByb3BlcnR5IGlzIHVzZWQgdG8gZGlzcGxheSBhbiBlbGVtZW50IHVzaW5nIHBsYXRmb3JtLW5hdGl2ZSBzdHlsaW5nLCBiYXNlZCBvbiB0aGUgb3BlcmF0aW5nIHN5c3RlbSdzIHRoZW1lLiBUaGUgKipgLW1vei1hcHBlYXJhbmNlYCoqIGFuZCAqKmAtd2Via2l0LWFwcGVhcmFuY2VgKiogcHJvcGVydGllcyBhcmUgbm9uLXN0YW5kYXJkIHZlcnNpb25zIG9mIHRoaXMgcHJvcGVydHksIHVzZWQgKHJlc3BlY3RpdmVseSkgYnkgR2Vja28gKEZpcmVmb3gpIGFuZCBieSBXZWJLaXQtYmFzZWQgKGUuZy4sIFNhZmFyaSkgYW5kIEJsaW5rLWJhc2VkIChlLmcuLCBDaHJvbWUsIE9wZXJhKSBicm93c2VycyB0byBhY2hpZXZlIHRoZSBzYW1lIHRoaW5nLiBOb3RlIHRoYXQgRmlyZWZveCBhbmQgRWRnZSBhbHNvIHN1cHBvcnQgKipgLXdlYmtpdC1hcHBlYXJhbmNlYCoqLCBmb3IgY29tcGF0aWJpbGl0eSByZWFzb25zLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBhdXRvIHwgdGV4dGZpZWxkIHwgbWVudWxpc3QtYnV0dG9uIHwgPGNvbXBhdC1hdXRvPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCAgIFNhZmFyaSAgICB8ICAgRWRnZSAgIHwgSUUgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLTogfCA6LS0tLS0tOiB8IDotOiB8CiAgICogfCAqKjg0KiogIHwgKio4MCoqICB8ICoqMyoqIF8teC1fIHwgICoqODQqKiAgfCBObyAgfAogICAqIHwgMSBfLXgtXyB8IDEgXy14LV8gfCAgICAgICAgICAgICB8IDEyIF8teC1fIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2FwcGVhcmFuY2UKICAgKi8KICBhcHBlYXJhbmNlPzogUHJvcGVydHkuQXBwZWFyYW5jZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYXNwZWN0LXJhdGlvYCoqwqDCoENTUyBwcm9wZXJ0eSBzZXRzIGEgKipwcmVmZXJyZWQgYXNwZWN0IHJhdGlvKiogZm9yIHRoZSBib3gsIHdoaWNoIHdpbGwgYmUgdXNlZCBpbiB0aGUgY2FsY3VsYXRpb24gb2YgYXV0byBzaXplcyBhbmQgc29tZSBvdGhlciBsYXlvdXQgZnVuY3Rpb25zLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCA8cmF0aW8+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4OCoqIHwgKio4OSoqICB8ICoqMTUqKiB8ICoqODgqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9hc3BlY3QtcmF0aW8KICAgKi8KICAiYXNwZWN0LXJhdGlvIj86IFByb3BlcnR5LkFzcGVjdFJhdGlvIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBiYWNrZHJvcC1maWx0ZXJgKiogQ1NTIHByb3BlcnR5IGxldHMgeW91IGFwcGx5IGdyYXBoaWNhbCBlZmZlY3RzIHN1Y2ggYXMgYmx1cnJpbmcgb3IgY29sb3Igc2hpZnRpbmcgdG8gdGhlIGFyZWEgYmVoaW5kIGFuIGVsZW1lbnQuIEJlY2F1c2UgaXQgYXBwbGllcyB0byBldmVyeXRoaW5nIF9iZWhpbmRfIHRoZSBlbGVtZW50LCB0byBzZWUgdGhlIGVmZmVjdCB5b3UgbXVzdCBtYWtlIHRoZSBlbGVtZW50IG9yIGl0cyBiYWNrZ3JvdW5kIGF0IGxlYXN0IHBhcnRpYWxseSB0cmFuc3BhcmVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPGZpbHRlci1mdW5jdGlvbi1saXN0PmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICAgU2FmYXJpICAgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjc2KiogfCAgIG4vYSAgIHwgKio5KiogXy14LV8gfCAqKjE3KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYmFja2Ryb3AtZmlsdGVyCiAgICovCiAgImJhY2tkcm9wLWZpbHRlciI/OiBQcm9wZXJ0eS5CYWNrZHJvcEZpbHRlciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmFja2ZhY2UtdmlzaWJpbGl0eWAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIHRoZSBiYWNrIGZhY2Ugb2YgYW4gZWxlbWVudCBpcyB2aXNpYmxlIHdoZW4gdHVybmVkIHRvd2FyZHMgdGhlIHVzZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgdmlzaWJsZSB8IGhpZGRlbmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgdmlzaWJsZWAKICAgKgogICAqIHwgIENocm9tZSAgfCBGaXJlZm94ICB8ICAgIFNhZmFyaSAgICAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tLS0tLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgICoqMzYqKiAgfCAgKioxNioqICB8ICoqNS4xKiogXy14LV8gfCAqKjEyKiogfCAqKjEwKiogfAogICAqIHwgMTIgXy14LV8gfCAxMCBfLXgtXyB8ICAgICAgICAgICAgICAgfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYmFja2ZhY2UtdmlzaWJpbGl0eQogICAqLwogICJiYWNrZmFjZS12aXNpYmlsaXR5Ij86IFByb3BlcnR5LkJhY2tmYWNlVmlzaWJpbGl0eSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmFja2dyb3VuZC1hdHRhY2htZW50YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgYSBiYWNrZ3JvdW5kIGltYWdlJ3MgcG9zaXRpb24gaXMgZml4ZWQgd2l0aGluIHRoZSB2aWV3cG9ydCwgb3Igc2Nyb2xscyB3aXRoIGl0cyBjb250YWluaW5nIGJsb2NrLgogICAqCiAgICogKipTeW50YXgqKjogYDxhdHRhY2htZW50PiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHNjcm9sbGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYmFja2dyb3VuZC1hdHRhY2htZW50CiAgICovCiAgImJhY2tncm91bmQtYXR0YWNobWVudCI/OiBQcm9wZXJ0eS5CYWNrZ3JvdW5kQXR0YWNobWVudCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmFja2dyb3VuZC1ibGVuZC1tb2RlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBhbiBlbGVtZW50J3MgYmFja2dyb3VuZCBpbWFnZXMgc2hvdWxkIGJsZW5kIHdpdGggZWFjaCBvdGhlciBhbmQgd2l0aCB0aGUgZWxlbWVudCdzIGJhY2tncm91bmQgY29sb3IuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGJsZW5kLW1vZGU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKiozNSoqIHwgKiozMCoqICB8ICoqOCoqICB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9iYWNrZ3JvdW5kLWJsZW5kLW1vZGUKICAgKi8KICAiYmFja2dyb3VuZC1ibGVuZC1tb2RlIj86IFByb3BlcnR5LkJhY2tncm91bmRCbGVuZE1vZGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJhY2tncm91bmQtY2xpcGAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIGFuIGVsZW1lbnQncyBiYWNrZ3JvdW5kIGV4dGVuZHMgdW5kZXJuZWF0aCBpdHMgYm9yZGVyIGJveCwgcGFkZGluZyBib3gsIG9yIGNvbnRlbnQgYm94LgogICAqCiAgICogKipTeW50YXgqKjogYDxib3g+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYm9yZGVyLWJveGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICAgU2FmYXJpICAgIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqNCoqICB8ICoqMyoqIF8teC1fIHwgKioxMioqIHwgKio5KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYmFja2dyb3VuZC1jbGlwCiAgICovCiAgImJhY2tncm91bmQtY2xpcCI/OiBQcm9wZXJ0eS5CYWNrZ3JvdW5kQ2xpcCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmFja2dyb3VuZC1jb2xvcmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgYmFja2dyb3VuZCBjb2xvciBvZiBhbiBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHRyYW5zcGFyZW50YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9iYWNrZ3JvdW5kLWNvbG9yCiAgICovCiAgImJhY2tncm91bmQtY29sb3IiPzogUHJvcGVydHkuQmFja2dyb3VuZENvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBiYWNrZ3JvdW5kLWltYWdlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIG9uZSBvciBtb3JlIGJhY2tncm91bmQgaW1hZ2VzIG9uIGFuIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGJnLWltYWdlPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JhY2tncm91bmQtaW1hZ2UKICAgKi8KICAiYmFja2dyb3VuZC1pbWFnZSI/OiBQcm9wZXJ0eS5CYWNrZ3JvdW5kSW1hZ2UgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJhY2tncm91bmQtb3JpZ2luYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBiYWNrZ3JvdW5kJ3Mgb3JpZ2luOiBmcm9tIHRoZSBib3JkZXIgc3RhcnQsIGluc2lkZSB0aGUgYm9yZGVyLCBvciBpbnNpZGUgdGhlIHBhZGRpbmcuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGJveD4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBwYWRkaW5nLWJveGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKio0KiogIHwgKiozKiogIHwgKioxMioqIHwgKio5KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYmFja2dyb3VuZC1vcmlnaW4KICAgKi8KICAiYmFja2dyb3VuZC1vcmlnaW4iPzogUHJvcGVydHkuQmFja2dyb3VuZE9yaWdpbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmFja2dyb3VuZC1wb3NpdGlvbi14YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBpbml0aWFsIGhvcml6b250YWwgcG9zaXRpb24gZm9yIGVhY2ggYmFja2dyb3VuZCBpbWFnZS4gVGhlIHBvc2l0aW9uIGlzIHJlbGF0aXZlIHRvIHRoZSBwb3NpdGlvbiBsYXllciBzZXQgYnkgYGJhY2tncm91bmQtb3JpZ2luYC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIGNlbnRlciB8IFsgWyBsZWZ0IHwgcmlnaHQgfCB4LXN0YXJ0IHwgeC1lbmQgXT8gPGxlbmd0aC1wZXJjZW50YWdlPj8gXSEgXSNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGxlZnRgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgKio0OSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNioqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JhY2tncm91bmQtcG9zaXRpb24teAogICAqLwogICJiYWNrZ3JvdW5kLXBvc2l0aW9uLXgiPzogUHJvcGVydHkuQmFja2dyb3VuZFBvc2l0aW9uWDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmFja2dyb3VuZC1wb3NpdGlvbi15YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBpbml0aWFsIHZlcnRpY2FsIHBvc2l0aW9uIGZvciBlYWNoIGJhY2tncm91bmQgaW1hZ2UuIFRoZSBwb3NpdGlvbiBpcyByZWxhdGl2ZSB0byB0aGUgcG9zaXRpb24gbGF5ZXIgc2V0IGJ5IGBiYWNrZ3JvdW5kLW9yaWdpbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyBjZW50ZXIgfCBbIFsgdG9wIHwgYm90dG9tIHwgeS1zdGFydCB8IHktZW5kIF0/IDxsZW5ndGgtcGVyY2VudGFnZT4/IF0hIF0jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGB0b3BgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgKio0OSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNioqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JhY2tncm91bmQtcG9zaXRpb24teQogICAqLwogICJiYWNrZ3JvdW5kLXBvc2l0aW9uLXkiPzogUHJvcGVydHkuQmFja2dyb3VuZFBvc2l0aW9uWTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmFja2dyb3VuZC1yZXBlYXRgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IGJhY2tncm91bmQgaW1hZ2VzIGFyZSByZXBlYXRlZC4gQSBiYWNrZ3JvdW5kIGltYWdlIGNhbiBiZSByZXBlYXRlZCBhbG9uZyB0aGUgaG9yaXpvbnRhbCBhbmQgdmVydGljYWwgYXhlcywgb3Igbm90IHJlcGVhdGVkIGF0IGFsbC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8cmVwZWF0LXN0eWxlPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHJlcGVhdGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYmFja2dyb3VuZC1yZXBlYXQKICAgKi8KICAiYmFja2dyb3VuZC1yZXBlYXQiPzogUHJvcGVydHkuQmFja2dyb3VuZFJlcGVhdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmFja2dyb3VuZC1zaXplYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBzaXplIG9mIHRoZSBlbGVtZW50J3MgYmFja2dyb3VuZCBpbWFnZS4gVGhlIGltYWdlIGNhbiBiZSBsZWZ0IHRvIGl0cyBuYXR1cmFsIHNpemUsIHN0cmV0Y2hlZCwgb3IgY29uc3RyYWluZWQgdG8gZml0IHRoZSBhdmFpbGFibGUgc3BhY2UuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGJnLXNpemU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0byBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAgKiozKiogIHwgICoqNCoqICB8ICAqKjUqKiAgfCAqKjEyKiogfCAqKjkqKiB8CiAgICogfCAxIF8teC1fIHwgICAgICAgICB8IDMgXy14LV8gfCAgICAgICAgfCAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9iYWNrZ3JvdW5kLXNpemUKICAgKi8KICAiYmFja2dyb3VuZC1zaXplIj86IFByb3BlcnR5LkJhY2tncm91bmRTaXplPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqICoqU3ludGF4Kio6IGBjbGlwIHwgZWxsaXBzaXMgfCA8c3RyaW5nPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY2xpcGAKICAgKi8KICAiYmxvY2stb3ZlcmZsb3ciPzogUHJvcGVydHkuQmxvY2tPdmVyZmxvdyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmxvY2stc2l6ZWAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgaG9yaXpvbnRhbCBvciB2ZXJ0aWNhbCBzaXplIG9mIGFuIGVsZW1lbnQncyBibG9jaywgZGVwZW5kaW5nIG9uIGl0cyB3cml0aW5nIG1vZGUuIEl0IGNvcnJlc3BvbmRzIHRvIGVpdGhlciB0aGUgYHdpZHRoYCBvciB0aGUgYGhlaWdodGAgcHJvcGVydHksIGRlcGVuZGluZyBvbiB0aGUgdmFsdWUgb2YgYHdyaXRpbmctbW9kZWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCd3aWR0aCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTcqKiB8ICoqNDEqKiAgfCAqKjEyLjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ibG9jay1zaXplCiAgICovCiAgImJsb2NrLXNpemUiPzogUHJvcGVydHkuQmxvY2tTaXplPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItYmxvY2stY29sb3JgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGNvbG9yIG9mIHRoZSBsb2dpY2FsIGJsb2NrIGJvcmRlcnMgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIGJvcmRlciBjb2xvciBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGBib3JkZXItdG9wLWNvbG9yYCBhbmQgYGJvcmRlci1ib3R0b20tY29sb3JgLCBvciBgYm9yZGVyLXJpZ2h0LWNvbG9yYCBhbmQgYGJvcmRlci1sZWZ0LWNvbG9yYCBwcm9wZXJ0eSBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBkZWZpbmVkIGZvciBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItdG9wLWNvbG9yJz57MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY3VycmVudGNvbG9yYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODcqKiB8ICoqNjYqKiAgfCAqKjE0LjEqKiB8ICoqODcqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItYmxvY2stY29sb3IKICAgKi8KICAiYm9yZGVyLWJsb2NrLWNvbG9yIj86IFByb3BlcnR5LkJvcmRlckJsb2NrQ29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1ibG9jay1lbmQtY29sb3JgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGNvbG9yIG9mIHRoZSBsb2dpY2FsIGJsb2NrLWVuZCBib3JkZXIgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIGJvcmRlciBjb2xvciBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGBib3JkZXItdG9wLWNvbG9yYCzCoGBib3JkZXItcmlnaHQtY29sb3JgLMKgYGJvcmRlci1ib3R0b20tY29sb3JgLCBvciBgYm9yZGVyLWxlZnQtY29sb3JgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3AtY29sb3InPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY3VycmVudGNvbG9yYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNDEqKiAgfCAqKjEyLjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItYmxvY2stZW5kLWNvbG9yCiAgICovCiAgImJvcmRlci1ibG9jay1lbmQtY29sb3IiPzogUHJvcGVydHkuQm9yZGVyQmxvY2tFbmRDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWJsb2NrLWVuZC1zdHlsZWAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgc3R5bGUgb2YgdGhlIGxvZ2ljYWwgYmxvY2stZW5kIGJvcmRlciBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIHN0eWxlIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYGJvcmRlci10b3Atc3R5bGVgLCBgYm9yZGVyLXJpZ2h0LXN0eWxlYCwgYGJvcmRlci1ib3R0b20tc3R5bGVgLCBvciBgYm9yZGVyLWxlZnQtc3R5bGVgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3Atc3R5bGUnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjQxKiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWJsb2NrLWVuZC1zdHlsZQogICAqLwogICJib3JkZXItYmxvY2stZW5kLXN0eWxlIj86IFByb3BlcnR5LkJvcmRlckJsb2NrRW5kU3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1ibG9jay1lbmQtd2lkdGhgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIHdpZHRoIG9mIHRoZSBsb2dpY2FsIGJsb2NrLWVuZCBib3JkZXIgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIGJvcmRlciB3aWR0aCBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGBib3JkZXItdG9wLXdpZHRoYCzCoGBib3JkZXItcmlnaHQtd2lkdGhgLMKgYGJvcmRlci1ib3R0b20td2lkdGhgLCBvciBgYm9yZGVyLWxlZnQtd2lkdGhgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3Atd2lkdGgnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWVkaXVtYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNDEqKiAgfCAqKjEyLjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItYmxvY2stZW5kLXdpZHRoCiAgICovCiAgImJvcmRlci1ibG9jay1lbmQtd2lkdGgiPzogUHJvcGVydHkuQm9yZGVyQmxvY2tFbmRXaWR0aDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWJsb2NrLXN0YXJ0LWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBjb2xvciBvZiB0aGUgbG9naWNhbCBibG9jay1zdGFydCBib3JkZXIgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIGJvcmRlciBjb2xvciBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGBib3JkZXItdG9wLWNvbG9yYCzCoGBib3JkZXItcmlnaHQtY29sb3JgLMKgYGJvcmRlci1ib3R0b20tY29sb3JgLCBvciBgYm9yZGVyLWxlZnQtY29sb3JgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3AtY29sb3InPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY3VycmVudGNvbG9yYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNDEqKiAgfCAqKjEyLjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItYmxvY2stc3RhcnQtY29sb3IKICAgKi8KICAiYm9yZGVyLWJsb2NrLXN0YXJ0LWNvbG9yIj86IFByb3BlcnR5LkJvcmRlckJsb2NrU3RhcnRDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWJsb2NrLXN0YXJ0LXN0eWxlYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBzdHlsZSBvZiB0aGUgbG9naWNhbCBibG9jayBzdGFydCBib3JkZXIgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIGJvcmRlciBzdHlsZSBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGBib3JkZXItdG9wLXN0eWxlYCzCoGBib3JkZXItcmlnaHQtc3R5bGVgLMKgYGJvcmRlci1ib3R0b20tc3R5bGVgLCBvciBgYm9yZGVyLWxlZnQtc3R5bGVgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3Atc3R5bGUnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjQxKiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWJsb2NrLXN0YXJ0LXN0eWxlCiAgICovCiAgImJvcmRlci1ibG9jay1zdGFydC1zdHlsZSI/OiBQcm9wZXJ0eS5Cb3JkZXJCbG9ja1N0YXJ0U3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1ibG9jay1zdGFydC13aWR0aGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgd2lkdGggb2YgdGhlIGxvZ2ljYWwgYmxvY2stc3RhcnQgYm9yZGVyIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBib3JkZXIgd2lkdGggZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgYm9yZGVyLXRvcC13aWR0aGAswqBgYm9yZGVyLXJpZ2h0LXdpZHRoYCzCoGBib3JkZXItYm90dG9tLXdpZHRoYCwgb3IgYGJvcmRlci1sZWZ0LXdpZHRoYCBwcm9wZXJ0eSBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBkZWZpbmVkIGZvciBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItdG9wLXdpZHRoJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG1lZGl1bWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjQxKiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWJsb2NrLXN0YXJ0LXdpZHRoCiAgICovCiAgImJvcmRlci1ibG9jay1zdGFydC13aWR0aCI/OiBQcm9wZXJ0eS5Cb3JkZXJCbG9ja1N0YXJ0V2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1ibG9jay1zdHlsZWAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgc3R5bGUgb2YgdGhlIGxvZ2ljYWwgYmxvY2sgYm9yZGVycyBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIHN0eWxlIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYGJvcmRlci10b3Atc3R5bGVgIGFuZCBgYm9yZGVyLWJvdHRvbS1zdHlsZWAsIG9yIGBib3JkZXItbGVmdC1zdHlsZWAgYW5kIGBib3JkZXItcmlnaHQtc3R5bGVgIHByb3BlcnRpZXMgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXRvcC1zdHlsZSc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODcqKiB8ICoqNjYqKiAgfCAqKjE0LjEqKiB8ICoqODcqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItYmxvY2stc3R5bGUKICAgKi8KICAiYm9yZGVyLWJsb2NrLXN0eWxlIj86IFByb3BlcnR5LkJvcmRlckJsb2NrU3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1ibG9jay13aWR0aGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgd2lkdGggb2YgdGhlIGxvZ2ljYWwgYmxvY2vCoGJvcmRlcnMgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIGJvcmRlciB3aWR0aCBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGBib3JkZXItdG9wLXdpZHRoYCBhbmTCoGBib3JkZXItYm90dG9tLXdpZHRoYCwgb3IgYGJvcmRlci1sZWZ0LXdpZHRoYCwgYW5kwqBgYm9yZGVyLXJpZ2h0LXdpZHRoYCBwcm9wZXJ0eSBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBkZWZpbmVkIGZvciBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItdG9wLXdpZHRoJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG1lZGl1bWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg3KiogfCAqKjY2KiogIHwgKioxNC4xKiogfCAqKjg3KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWJsb2NrLXdpZHRoCiAgICovCiAgImJvcmRlci1ibG9jay13aWR0aCI/OiBQcm9wZXJ0eS5Cb3JkZXJCbG9ja1dpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItYm90dG9tLWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBjb2xvciBvZiBhbiBlbGVtZW50J3MgYm90dG9tIGJvcmRlci4gSXQgY2FuIGFsc28gYmUgc2V0IHdpdGggdGhlIHNob3J0aGFuZCBDU1MgcHJvcGVydGllcyBgYm9yZGVyLWNvbG9yYCBvciBgYm9yZGVyLWJvdHRvbWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItdG9wLWNvbG9yJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGN1cnJlbnRjb2xvcmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWJvdHRvbS1jb2xvcgogICAqLwogICJib3JkZXItYm90dG9tLWNvbG9yIj86IFByb3BlcnR5LkJvcmRlckJvdHRvbUNvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzYCoqIENTUyBwcm9wZXJ0eSByb3VuZHMgdGhlIGJvdHRvbS1sZWZ0IGNvcm5lciBvZiBhbiBlbGVtZW50IGJ5IHNwZWNpZnlpbmcgdGhlIHJhZGl1cyAob3IgdGhlIHJhZGl1cyBvZiB0aGUgc2VtaS1tYWpvciBhbmQgc2VtaS1taW5vciBheGVzKSBvZiB0aGUgZWxsaXBzZSBkZWZpbmluZyB0aGUgY3VydmF0dXJlIG9mIHRoZSBjb3JuZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aC1wZXJjZW50YWdlPnsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAgKio0KiogIHwgICoqNCoqICB8ICAqKjUqKiAgfCAqKjEyKiogfCAqKjkqKiB8CiAgICogfCAxIF8teC1fIHwgICAgICAgICB8IDMgXy14LV8gfCAgICAgICAgfCAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzCiAgICovCiAgImJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXMiPzogUHJvcGVydHkuQm9yZGVyQm90dG9tTGVmdFJhZGl1czxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXNgKiogQ1NTIHByb3BlcnR5IHJvdW5kcyB0aGUgYm90dG9tLXJpZ2h0IGNvcm5lciBvZiBhbiBlbGVtZW50IGJ5IHNwZWNpZnlpbmcgdGhlIHJhZGl1cyAob3IgdGhlIHJhZGl1cyBvZiB0aGUgc2VtaS1tYWpvciBhbmQgc2VtaS1taW5vciBheGVzKSBvZiB0aGUgZWxsaXBzZSBkZWZpbmluZyB0aGUgY3VydmF0dXJlIG9mIHRoZSBjb3JuZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aC1wZXJjZW50YWdlPnsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAgKio0KiogIHwgICoqNCoqICB8ICAqKjUqKiAgfCAqKjEyKiogfCAqKjkqKiB8CiAgICogfCAxIF8teC1fIHwgICAgICAgICB8IDMgXy14LV8gfCAgICAgICAgfCAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1cwogICAqLwogICJib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1cyI/OiBQcm9wZXJ0eS5Cb3JkZXJCb3R0b21SaWdodFJhZGl1czxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWJvdHRvbS1zdHlsZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbGluZSBzdHlsZSBvZiBhbiBlbGVtZW50J3MgYm90dG9tIGBib3JkZXJgLgogICAqCiAgICogKipTeW50YXgqKjogYDxsaW5lLXN0eWxlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNS41KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWJvdHRvbS1zdHlsZQogICAqLwogICJib3JkZXItYm90dG9tLXN0eWxlIj86IFByb3BlcnR5LkJvcmRlckJvdHRvbVN0eWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItYm90dG9tLXdpZHRoYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSB3aWR0aCBvZiB0aGUgYm90dG9tIGJvcmRlciBvZiBhbiBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYDxsaW5lLXdpZHRoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWVkaXVtYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItYm90dG9tLXdpZHRoCiAgICovCiAgImJvcmRlci1ib3R0b20td2lkdGgiPzogUHJvcGVydHkuQm9yZGVyQm90dG9tV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1jb2xsYXBzZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIGNlbGxzIGluc2lkZSBhIGA8dGFibGU+YCBoYXZlIHNoYXJlZCBvciBzZXBhcmF0ZSBib3JkZXJzLgogICAqCiAgICogKipTeW50YXgqKjogYGNvbGxhcHNlIHwgc2VwYXJhdGVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHNlcGFyYXRlYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMS4yKiogfCAqKjEyKiogfCAqKjUqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItY29sbGFwc2UKICAgKi8KICAiYm9yZGVyLWNvbGxhcHNlIj86IFByb3BlcnR5LkJvcmRlckNvbGxhcHNlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItZW5kLWVuZC1yYWRpdXNgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgYSBsb2dpY2FsIGJvcmRlciByYWRpdXMgb24gYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIGJvcmRlciByYWRpdXMgdGhhdCBkZXBlbmRzIG9uIHRoZSBlbGVtZW50J3MgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLiBUaGlzIGlzIHVzZWZ1bCB3aGVuIGJ1aWxkaW5nIHN0eWxlcyB0byB3b3JrIHJlZ2FyZGxlc3Mgb2YgdGhlIHRleHQgb3JpZW50YXRpb24gYW5kwqB3cml0aW5nIG1vZGUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aC1wZXJjZW50YWdlPnsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4OSoqIHwgKio2NioqICB8ICoqMTUqKiB8ICoqODkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItZW5kLWVuZC1yYWRpdXMKICAgKi8KICAiYm9yZGVyLWVuZC1lbmQtcmFkaXVzIj86IFByb3BlcnR5LkJvcmRlckVuZEVuZFJhZGl1czxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWVuZC1zdGFydC1yYWRpdXNgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgYSBsb2dpY2FsIGJvcmRlciByYWRpdXMgb24gYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIGJvcmRlciByYWRpdXPCoGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC7CoFRoaXMgaXMgdXNlZnVsIHdoZW4gYnVpbGRpbmcgc3R5bGVzIHRvIHdvcmsgcmVnYXJkbGVzcyBvZiB0aGUgdGV4dCBvcmllbnRhdGlvbiBhbmTCoHdyaXRpbmcgbW9kZS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoLXBlcmNlbnRhZ2U+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg5KiogfCAqKjY2KiogIHwgKioxNSoqIHwgKio4OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1lbmQtc3RhcnQtcmFkaXVzCiAgICovCiAgImJvcmRlci1lbmQtc3RhcnQtcmFkaXVzIj86IFByb3BlcnR5LkJvcmRlckVuZFN0YXJ0UmFkaXVzPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItaW1hZ2Utb3V0c2V0YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBkaXN0YW5jZSBieSB3aGljaCBhbiBlbGVtZW50J3MgYm9yZGVyIGltYWdlIGlzIHNldCBvdXQgZnJvbSBpdHMgYm9yZGVyIGJveC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDxsZW5ndGg+IHwgPG51bWJlcj4gXXsxLDR9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgKioxNSoqIHwgKioxNSoqICB8ICoqNioqICB8ICoqMTIqKiB8ICoqMTEqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItaW1hZ2Utb3V0c2V0CiAgICovCiAgImJvcmRlci1pbWFnZS1vdXRzZXQiPzogUHJvcGVydHkuQm9yZGVySW1hZ2VPdXRzZXQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbWFnZS1yZXBlYXRgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgaG93IHRoZSBlZGdlIHJlZ2lvbnMgb2YgYSBzb3VyY2UgaW1hZ2UgYXJlIGFkanVzdGVkIHRvIGZpdCB0aGUgZGltZW5zaW9ucyBvZiBhbiBlbGVtZW50J3MgYm9yZGVyIGltYWdlLgogICAqCiAgICogKipTeW50YXgqKjogYFsgc3RyZXRjaCB8IHJlcGVhdCB8IHJvdW5kIHwgc3BhY2UgXXsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzdHJldGNoYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgKioxNSoqIHwgKioxNSoqICB8ICoqNioqICB8ICoqMTIqKiB8ICoqMTEqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItaW1hZ2UtcmVwZWF0CiAgICovCiAgImJvcmRlci1pbWFnZS1yZXBlYXQiPzogUHJvcGVydHkuQm9yZGVySW1hZ2VSZXBlYXQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbWFnZS1zbGljZWAqKiBDU1MgcHJvcGVydHkgZGl2aWRlcyB0aGUgaW1hZ2Ugc3BlY2lmaWVkIGJ5IGBib3JkZXItaW1hZ2Utc291cmNlYCBpbnRvIHJlZ2lvbnMuIFRoZXNlIHJlZ2lvbnMgZm9ybSB0aGUgY29tcG9uZW50cyBvZiBhbiBlbGVtZW50J3MgYm9yZGVyIGltYWdlLgogICAqCiAgICogKipTeW50YXgqKjogYDxudW1iZXItcGVyY2VudGFnZT57MSw0fSAmJiBmaWxsP2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMTAwJWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqMTUqKiB8ICoqMTUqKiAgfCAqKjYqKiAgfCAqKjEyKiogfCAqKjExKiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWltYWdlLXNsaWNlCiAgICovCiAgImJvcmRlci1pbWFnZS1zbGljZSI/OiBQcm9wZXJ0eS5Cb3JkZXJJbWFnZVNsaWNlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItaW1hZ2Utc291cmNlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBzb3VyY2UgaW1hZ2UgdXNlZCB0byBjcmVhdGUgYW4gZWxlbWVudCdzIGJvcmRlciBpbWFnZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPGltYWdlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqMTUqKiB8ICoqMTUqKiAgfCAqKjYqKiAgfCAqKjEyKiogfCAqKjExKiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWltYWdlLXNvdXJjZQogICAqLwogICJib3JkZXItaW1hZ2Utc291cmNlIj86IFByb3BlcnR5LkJvcmRlckltYWdlU291cmNlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItaW1hZ2Utd2lkdGhgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHdpZHRoIG9mIGFuIGVsZW1lbnQncyBib3JkZXIgaW1hZ2UuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8bGVuZ3RoLXBlcmNlbnRhZ2U+IHwgPG51bWJlcj4gfCBhdXRvIF17MSw0fWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqMTUqKiB8ICoqMTMqKiAgfCAqKjYqKiAgfCAqKjEyKiogfCAqKjExKiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWltYWdlLXdpZHRoCiAgICovCiAgImJvcmRlci1pbWFnZS13aWR0aCI/OiBQcm9wZXJ0eS5Cb3JkZXJJbWFnZVdpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItaW5saW5lLWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBjb2xvciBvZiB0aGUgbG9naWNhbCBpbmxpbmUgYm9yZGVycyBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIGNvbG9yIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYGJvcmRlci10b3AtY29sb3JgIGFuZCBgYm9yZGVyLWJvdHRvbS1jb2xvcmAsIG9yIGBib3JkZXItcmlnaHQtY29sb3JgIGFuZCBgYm9yZGVyLWxlZnQtY29sb3JgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3AtY29sb3InPnsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjdXJyZW50Y29sb3JgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4NyoqIHwgKio2NioqICB8ICoqMTQuMSoqIHwgKio4NyoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1pbmxpbmUtY29sb3IKICAgKi8KICAiYm9yZGVyLWlubGluZS1jb2xvciI/OiBQcm9wZXJ0eS5Cb3JkZXJJbmxpbmVDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWlubGluZS1lbmQtY29sb3JgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGNvbG9yIG9mIHRoZSBsb2dpY2FsIGlubGluZS1lbmQgYm9yZGVyIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBib3JkZXIgY29sb3IgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgYm9yZGVyLXRvcC1jb2xvcmAsIGBib3JkZXItcmlnaHQtY29sb3JgLCBgYm9yZGVyLWJvdHRvbS1jb2xvcmAsIG9yIGBib3JkZXItbGVmdC1jb2xvcmAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXRvcC1jb2xvcic+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjdXJyZW50Y29sb3JgCiAgICoKICAgKiB8IENocm9tZSB8ICAgICAgICAgICBGaXJlZm94ICAgICAgICAgICB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICAgICAgICAgICAqKjQxKiogICAgICAgICAgICB8ICoqMTIuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKiB8ICAgICAgICB8IDMgXygtbW96LWJvcmRlci1lbmQtY29sb3IpXyB8ICAgICAgICAgIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1pbmxpbmUtZW5kLWNvbG9yCiAgICovCiAgImJvcmRlci1pbmxpbmUtZW5kLWNvbG9yIj86IFByb3BlcnR5LkJvcmRlcklubGluZUVuZENvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItaW5saW5lLWVuZC1zdHlsZWAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgc3R5bGUgb2YgdGhlIGxvZ2ljYWwgaW5saW5lIGVuZCBib3JkZXIgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIGJvcmRlciBzdHlsZSBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGBib3JkZXItdG9wLXN0eWxlYCwgYGJvcmRlci1yaWdodC1zdHlsZWAsIGBib3JkZXItYm90dG9tLXN0eWxlYCwgb3IgYGJvcmRlci1sZWZ0LXN0eWxlYCBwcm9wZXJ0eSBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBkZWZpbmVkIGZvciBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItdG9wLXN0eWxlJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8ICAgICAgICAgICBGaXJlZm94ICAgICAgICAgICB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICAgICAgICAgICAqKjQxKiogICAgICAgICAgICB8ICoqMTIuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKiB8ICAgICAgICB8IDMgXygtbW96LWJvcmRlci1lbmQtc3R5bGUpXyB8ICAgICAgICAgIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1pbmxpbmUtZW5kLXN0eWxlCiAgICovCiAgImJvcmRlci1pbmxpbmUtZW5kLXN0eWxlIj86IFByb3BlcnR5LkJvcmRlcklubGluZUVuZFN0eWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItaW5saW5lLWVuZC13aWR0aGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgd2lkdGggb2YgdGhlIGxvZ2ljYWwgaW5saW5lLWVuZCBib3JkZXIgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIGJvcmRlciB3aWR0aCBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGBib3JkZXItdG9wLXdpZHRoYCwgYGJvcmRlci1yaWdodC13aWR0aGAsIGBib3JkZXItYm90dG9tLXdpZHRoYCwgb3IgYGJvcmRlci1sZWZ0LXdpZHRoYCBwcm9wZXJ0eSBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBkZWZpbmVkIGZvciBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItdG9wLXdpZHRoJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG1lZGl1bWAKICAgKgogICAqIHwgQ2hyb21lIHwgICAgICAgICAgIEZpcmVmb3ggICAgICAgICAgIHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgICAgICAgICAgICoqNDEqKiAgICAgICAgICAgIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqIHwgICAgICAgIHwgMyBfKC1tb3otYm9yZGVyLWVuZC13aWR0aClfIHwgICAgICAgICAgfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWlubGluZS1lbmQtd2lkdGgKICAgKi8KICAiYm9yZGVyLWlubGluZS1lbmQtd2lkdGgiPzogUHJvcGVydHkuQm9yZGVySW5saW5lRW5kV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbmxpbmUtc3RhcnQtY29sb3JgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGNvbG9yIG9mIHRoZSBsb2dpY2FsIGlubGluZSBzdGFydCBib3JkZXIgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIGJvcmRlciBjb2xvciBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGBib3JkZXItdG9wLWNvbG9yYCwgYGJvcmRlci1yaWdodC1jb2xvcmAsIGBib3JkZXItYm90dG9tLWNvbG9yYCwgb3IgYGJvcmRlci1sZWZ0LWNvbG9yYCBwcm9wZXJ0eSBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBkZWZpbmVkIGZvciBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItdG9wLWNvbG9yJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGN1cnJlbnRjb2xvcmAKICAgKgogICAqIHwgQ2hyb21lIHwgICAgICAgICAgICBGaXJlZm94ICAgICAgICAgICAgfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICAgICAgICAgICAgKio0MSoqICAgICAgICAgICAgIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqIHwgICAgICAgIHwgMyBfKC1tb3otYm9yZGVyLXN0YXJ0LWNvbG9yKV8gfCAgICAgICAgICB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItaW5saW5lLXN0YXJ0LWNvbG9yCiAgICovCiAgImJvcmRlci1pbmxpbmUtc3RhcnQtY29sb3IiPzogUHJvcGVydHkuQm9yZGVySW5saW5lU3RhcnRDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWlubGluZS1zdGFydC1zdHlsZWAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgc3R5bGUgb2YgdGhlIGxvZ2ljYWwgaW5saW5lIHN0YXJ0IGJvcmRlciBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIHN0eWxlIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYGJvcmRlci10b3Atc3R5bGVgLCBgYm9yZGVyLXJpZ2h0LXN0eWxlYCwgYGJvcmRlci1ib3R0b20tc3R5bGVgLCBvciBgYm9yZGVyLWxlZnQtc3R5bGVgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3Atc3R5bGUnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgICAgICAgICAgICBGaXJlZm94ICAgICAgICAgICAgfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICAgICAgICAgICAgKio0MSoqICAgICAgICAgICAgIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqIHwgICAgICAgIHwgMyBfKC1tb3otYm9yZGVyLXN0YXJ0LXN0eWxlKV8gfCAgICAgICAgICB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItaW5saW5lLXN0YXJ0LXN0eWxlCiAgICovCiAgImJvcmRlci1pbmxpbmUtc3RhcnQtc3R5bGUiPzogUHJvcGVydHkuQm9yZGVySW5saW5lU3RhcnRTdHlsZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWlubGluZS1zdGFydC13aWR0aGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgd2lkdGggb2YgdGhlIGxvZ2ljYWwgaW5saW5lLXN0YXJ0IGJvcmRlciBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIHdpZHRoIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYGJvcmRlci10b3Atd2lkdGhgLCBgYm9yZGVyLXJpZ2h0LXdpZHRoYCwgYGJvcmRlci1ib3R0b20td2lkdGhgLCBvciBgYm9yZGVyLWxlZnQtd2lkdGhgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3Atd2lkdGgnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWVkaXVtYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNDEqKiAgfCAqKjEyLjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItaW5saW5lLXN0YXJ0LXdpZHRoCiAgICovCiAgImJvcmRlci1pbmxpbmUtc3RhcnQtd2lkdGgiPzogUHJvcGVydHkuQm9yZGVySW5saW5lU3RhcnRXaWR0aDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWlubGluZS1zdHlsZWAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgc3R5bGUgb2YgdGhlIGxvZ2ljYWwgaW5saW5lwqBib3JkZXJzIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBib3JkZXIgc3R5bGUgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgYm9yZGVyLXRvcC1zdHlsZWAgYW5kwqBgYm9yZGVyLWJvdHRvbS1zdHlsZWAsIG9ywqBgYm9yZGVyLWxlZnQtc3R5bGVgIGFuZMKgYGJvcmRlci1yaWdodC1zdHlsZWAgcHJvcGVydGllc8KgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXRvcC1zdHlsZSc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODcqKiB8ICoqNjYqKiAgfCAqKjE0LjEqKiB8ICoqODcqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItaW5saW5lLXN0eWxlCiAgICovCiAgImJvcmRlci1pbmxpbmUtc3R5bGUiPzogUHJvcGVydHkuQm9yZGVySW5saW5lU3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbmxpbmUtd2lkdGhgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIHdpZHRoIG9mIHRoZSBsb2dpY2FsIGlubGluZcKgYm9yZGVycyBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIHdpZHRoIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYGJvcmRlci10b3Atd2lkdGhgIGFuZMKgYGJvcmRlci1ib3R0b20td2lkdGhgLCBvciBgYm9yZGVyLWxlZnQtd2lkdGhgLCBhbmTCoGBib3JkZXItcmlnaHQtd2lkdGhgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3Atd2lkdGgnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWVkaXVtYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODcqKiB8ICoqNjYqKiAgfCAqKjE0LjEqKiB8ICoqODcqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItaW5saW5lLXdpZHRoCiAgICovCiAgImJvcmRlci1pbmxpbmUtd2lkdGgiPzogUHJvcGVydHkuQm9yZGVySW5saW5lV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1sZWZ0LWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBjb2xvciBvZiBhbiBlbGVtZW50J3MgbGVmdCBib3JkZXIuIEl0IGNhbiBhbHNvIGJlIHNldCB3aXRoIHRoZSBzaG9ydGhhbmQgQ1NTIHByb3BlcnRpZXMgYGJvcmRlci1jb2xvcmAgb3IgYGJvcmRlci1sZWZ0YC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjdXJyZW50Y29sb3JgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1sZWZ0LWNvbG9yCiAgICovCiAgImJvcmRlci1sZWZ0LWNvbG9yIj86IFByb3BlcnR5LkJvcmRlckxlZnRDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWxlZnQtc3R5bGVgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGxpbmUgc3R5bGUgb2YgYW4gZWxlbWVudCdzIGxlZnQgYGJvcmRlcmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxpbmUtc3R5bGU+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgICBJRSAgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio1LjUqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItbGVmdC1zdHlsZQogICAqLwogICJib3JkZXItbGVmdC1zdHlsZSI/OiBQcm9wZXJ0eS5Cb3JkZXJMZWZ0U3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1sZWZ0LXdpZHRoYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSB3aWR0aCBvZiB0aGUgbGVmdCBib3JkZXIgb2YgYW4gZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGluZS13aWR0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG1lZGl1bWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWxlZnQtd2lkdGgKICAgKi8KICAiYm9yZGVyLWxlZnQtd2lkdGgiPzogUHJvcGVydHkuQm9yZGVyTGVmdFdpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItcmlnaHQtY29sb3JgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGNvbG9yIG9mIGFuIGVsZW1lbnQncyByaWdodCBib3JkZXIuIEl0IGNhbiBhbHNvIGJlIHNldCB3aXRoIHRoZSBzaG9ydGhhbmQgQ1NTIHByb3BlcnRpZXMgYGJvcmRlci1jb2xvcmAgb3IgYGJvcmRlci1yaWdodGAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGNvbG9yPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY3VycmVudGNvbG9yYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItcmlnaHQtY29sb3IKICAgKi8KICAiYm9yZGVyLXJpZ2h0LWNvbG9yIj86IFByb3BlcnR5LkJvcmRlclJpZ2h0Q29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1yaWdodC1zdHlsZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbGluZSBzdHlsZSBvZiBhbiBlbGVtZW50J3MgcmlnaHQgYGJvcmRlcmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxpbmUtc3R5bGU+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgICBJRSAgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio1LjUqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItcmlnaHQtc3R5bGUKICAgKi8KICAiYm9yZGVyLXJpZ2h0LXN0eWxlIj86IFByb3BlcnR5LkJvcmRlclJpZ2h0U3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1yaWdodC13aWR0aGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgd2lkdGggb2YgdGhlIHJpZ2h0IGJvcmRlciBvZiBhbiBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYDxsaW5lLXdpZHRoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWVkaXVtYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItcmlnaHQtd2lkdGgKICAgKi8KICAiYm9yZGVyLXJpZ2h0LXdpZHRoIj86IFByb3BlcnR5LkJvcmRlclJpZ2h0V2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1zcGFjaW5nYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBkaXN0YW5jZSBiZXR3ZWVuIHRoZSBib3JkZXJzIG9mIGFkamFjZW50IGA8dGFibGU+YCBjZWxscy4gVGhpcyBwcm9wZXJ0eSBhcHBsaWVzIG9ubHkgd2hlbiBgYm9yZGVyLWNvbGxhcHNlYCBpcyBgc2VwYXJhdGVgLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+IDxsZW5ndGg+P2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio4KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLXNwYWNpbmcKICAgKi8KICAiYm9yZGVyLXNwYWNpbmciPzogUHJvcGVydHkuQm9yZGVyU3BhY2luZzxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLXN0YXJ0LWVuZC1yYWRpdXNgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgYSBsb2dpY2FsIGJvcmRlciByYWRpdXMgb24gYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIGJvcmRlciByYWRpdXPCoGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC7CoFRoaXMgaXMgdXNlZnVsIHdoZW4gYnVpbGRpbmcgc3R5bGVzIHRvIHdvcmsgcmVnYXJkbGVzcyBvZiB0aGUgdGV4dCBvcmllbnRhdGlvbiBhbmTCoHdyaXRpbmcgbW9kZS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoLXBlcmNlbnRhZ2U+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg5KiogfCAqKjY2KiogIHwgKioxNSoqIHwgKio4OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1zdGFydC1lbmQtcmFkaXVzCiAgICovCiAgImJvcmRlci1zdGFydC1lbmQtcmFkaXVzIj86IFByb3BlcnR5LkJvcmRlclN0YXJ0RW5kUmFkaXVzPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItc3RhcnQtc3RhcnQtcmFkaXVzYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIGEgbG9naWNhbCBib3JkZXIgcmFkaXVzIG9uIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBib3JkZXIgcmFkaXVzIHRoYXQgZGVwZW5kcyBvbiB0aGUgZWxlbWVudCdzIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4gVGhpcyBpcyB1c2VmdWwgd2hlbiBidWlsZGluZyBzdHlsZXMgdG8gd29yayByZWdhcmRsZXNzIG9mIHRoZSB0ZXh0IG9yaWVudGF0aW9uIGFuZMKgd3JpdGluZyBtb2RlLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGgtcGVyY2VudGFnZT57MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODkqKiB8ICoqNjYqKiAgfCAqKjE1KiogfCAqKjg5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLXN0YXJ0LXN0YXJ0LXJhZGl1cwogICAqLwogICJib3JkZXItc3RhcnQtc3RhcnQtcmFkaXVzIj86IFByb3BlcnR5LkJvcmRlclN0YXJ0U3RhcnRSYWRpdXM8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci10b3AtY29sb3JgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGNvbG9yIG9mIGFuIGVsZW1lbnQncyB0b3AgYm9yZGVyLiBJdCBjYW4gYWxzbyBiZSBzZXQgd2l0aCB0aGUgc2hvcnRoYW5kIENTUyBwcm9wZXJ0aWVzIGBib3JkZXItY29sb3JgIG9yIGBib3JkZXItdG9wYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjdXJyZW50Y29sb3JgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci10b3AtY29sb3IKICAgKi8KICAiYm9yZGVyLXRvcC1jb2xvciI/OiBQcm9wZXJ0eS5Cb3JkZXJUb3BDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1c2AqKiBDU1MgcHJvcGVydHkgcm91bmRzIHRoZSB0b3AtbGVmdCBjb3JuZXIgb2YgYW4gZWxlbWVudCBieSBzcGVjaWZ5aW5nIHRoZSByYWRpdXMgKG9yIHRoZSByYWRpdXMgb2YgdGhlIHNlbWktbWFqb3IgYW5kIHNlbWktbWlub3IgYXhlcykgb2YgdGhlIGVsbGlwc2UgZGVmaW5pbmcgdGhlIGN1cnZhdHVyZSBvZiB0aGUgY29ybmVyLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGgtcGVyY2VudGFnZT57MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgICoqNCoqICB8ICAqKjQqKiAgfCAgKio1KiogIHwgKioxMioqIHwgKio5KiogfAogICAqIHwgMSBfLXgtXyB8ICAgICAgICAgfCAzIF8teC1fIHwgICAgICAgIHwgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLXRvcC1sZWZ0LXJhZGl1cwogICAqLwogICJib3JkZXItdG9wLWxlZnQtcmFkaXVzIj86IFByb3BlcnR5LkJvcmRlclRvcExlZnRSYWRpdXM8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci10b3AtcmlnaHQtcmFkaXVzYCoqIENTUyBwcm9wZXJ0eSByb3VuZHMgdGhlIHRvcC1yaWdodCBjb3JuZXIgb2YgYW4gZWxlbWVudCBieSBzcGVjaWZ5aW5nIHRoZSByYWRpdXMgKG9yIHRoZSByYWRpdXMgb2YgdGhlIHNlbWktbWFqb3IgYW5kIHNlbWktbWlub3IgYXhlcykgb2YgdGhlIGVsbGlwc2UgZGVmaW5pbmcgdGhlIGN1cnZhdHVyZSBvZiB0aGUgY29ybmVyLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGgtcGVyY2VudGFnZT57MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgICoqNCoqICB8ICAqKjQqKiAgfCAgKio1KiogIHwgKioxMioqIHwgKio5KiogfAogICAqIHwgMSBfLXgtXyB8ICAgICAgICAgfCAzIF8teC1fIHwgICAgICAgIHwgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLXRvcC1yaWdodC1yYWRpdXMKICAgKi8KICAiYm9yZGVyLXRvcC1yaWdodC1yYWRpdXMiPzogUHJvcGVydHkuQm9yZGVyVG9wUmlnaHRSYWRpdXM8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci10b3Atc3R5bGVgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGxpbmUgc3R5bGUgb2YgYW4gZWxlbWVudCdzIHRvcCBgYm9yZGVyYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGluZS1zdHlsZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgIElFICAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjUuNSoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci10b3Atc3R5bGUKICAgKi8KICAiYm9yZGVyLXRvcC1zdHlsZSI/OiBQcm9wZXJ0eS5Cb3JkZXJUb3BTdHlsZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLXRvcC13aWR0aGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgd2lkdGggb2YgdGhlIHRvcCBib3JkZXIgb2YgYW4gZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGluZS13aWR0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG1lZGl1bWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLXRvcC13aWR0aAogICAqLwogICJib3JkZXItdG9wLXdpZHRoIj86IFByb3BlcnR5LkJvcmRlclRvcFdpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3R0b21gKiogQ1NTIHByb3BlcnR5IHBhcnRpY2lwYXRlcyBpbiBzZXR0aW5nIHRoZSB2ZXJ0aWNhbCBwb3NpdGlvbiBvZiBhIHBvc2l0aW9uZWQgZWxlbWVudC4gSXQgaGFzIG5vIGVmZmVjdCBvbiBub24tcG9zaXRpb25lZCBlbGVtZW50cy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPiB8IDxwZXJjZW50YWdlPiB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNSoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvdHRvbQogICAqLwogIGJvdHRvbT86IFByb3BlcnR5LkJvdHRvbTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LWRlY29yYXRpb24tYnJlYWtgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyBob3cgYW4gZWxlbWVudCdzIGZyYWdtZW50cyBzaG91bGQgYmUgcmVuZGVyZWQgd2hlbiBicm9rZW4gYWNyb3NzIG11bHRpcGxlIGxpbmVzLCBjb2x1bW5zLCBvciBwYWdlcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBzbGljZSB8IGNsb25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzbGljZWAKICAgKgogICAqIHwgICAgQ2hyb21lICAgIHwgRmlyZWZveCB8ICAgU2FmYXJpICAgIHwgICAgIEVkZ2UgICAgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tOiB8IDotOiB8CiAgICogfCAqKjIyKiogXy14LV8gfCAqKjMyKiogIHwgKio3KiogXy14LV8gfCAqKjc5KiogXy14LV8gfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm94LWRlY29yYXRpb24tYnJlYWsKICAgKi8KICAiYm94LWRlY29yYXRpb24tYnJlYWsiPzogUHJvcGVydHkuQm94RGVjb3JhdGlvbkJyZWFrIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3gtc2hhZG93YCoqIENTUyBwcm9wZXJ0eSBhZGRzIHNoYWRvdyBlZmZlY3RzIGFyb3VuZCBhbiBlbGVtZW50J3MgZnJhbWUuIFlvdSBjYW4gc2V0IG11bHRpcGxlIGVmZmVjdHMgc2VwYXJhdGVkIGJ5IGNvbW1hcy4gQSBib3ggc2hhZG93IGlzIGRlc2NyaWJlZCBieSBYIGFuZCBZIG9mZnNldHMgcmVsYXRpdmUgdG8gdGhlIGVsZW1lbnQsIGJsdXIgYW5kIHNwcmVhZCByYWRpdXMsIGFuZCBjb2xvci4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPHNoYWRvdz4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEwKiogIHwgICoqNCoqICB8ICoqNS4xKiogfCAqKjEyKiogfCAqKjkqKiB8CiAgICogfCAxIF8teC1fIHwgICAgICAgICB8IDMgXy14LV8gfCAgICAgICAgfCAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3gtc2hhZG93CiAgICovCiAgImJveC1zaGFkb3ciPzogUHJvcGVydHkuQm94U2hhZG93IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3gtc2l6aW5nYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyB0aGUgdG90YWwgd2lkdGggYW5kIGhlaWdodCBvZiBhbiBlbGVtZW50IGlzIGNhbGN1bGF0ZWQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgY29udGVudC1ib3ggfCBib3JkZXItYm94YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjb250ZW50LWJveGAKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxMCoqICB8ICoqMjkqKiAgfCAqKjUuMSoqIHwgKioxMioqIHwgKio4KiogfAogICAqIHwgMSBfLXgtXyB8IDEgXy14LV8gfCAzIF8teC1fIHwgICAgICAgIHwgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm94LXNpemluZwogICAqLwogICJib3gtc2l6aW5nIj86IFByb3BlcnR5LkJveFNpemluZyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYnJlYWstYWZ0ZXJgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IHBhZ2UsIGNvbHVtbiwgb3IgcmVnaW9uIGJyZWFrcyBzaG91bGQgYmVoYXZlIGFmdGVyIGEgZ2VuZXJhdGVkIGJveC4gSWYgdGhlcmUgaXMgbm8gZ2VuZXJhdGVkIGJveCwgdGhlIHByb3BlcnR5IGlzIGlnbm9yZWQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IGF2b2lkIHwgYWx3YXlzIHwgYWxsIHwgYXZvaWQtcGFnZSB8IHBhZ2UgfCBsZWZ0IHwgcmlnaHQgfCByZWN0byB8IHZlcnNvIHwgYXZvaWQtY29sdW1uIHwgY29sdW1uIHwgYXZvaWQtcmVnaW9uIHwgcmVnaW9uYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIE11bHRpLWNvbHVtbiBMYXlvdXRfCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjUwKiogfCAqKjY1KiogIHwgICBObyAgIHwgKioxMioqIHwgKioxMCoqIHwKICAgKgogICAqIC0tLQogICAqCiAgICogX1N1cHBvcnRlZCBpbiBQYWdlZCBNZWRpYV8KICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNTAqKiB8ICoqNjUqKiAgfCAqKjEwKiogfCAqKjEyKiogfCAqKjEwKiogfAogICAqCiAgICogLS0tCiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9icmVhay1hZnRlcgogICAqLwogICJicmVhay1hZnRlciI/OiBQcm9wZXJ0eS5CcmVha0FmdGVyIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBicmVhay1iZWZvcmVgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IHBhZ2UsIGNvbHVtbiwgb3IgcmVnaW9uIGJyZWFrcyBzaG91bGQgYmVoYXZlIGJlZm9yZSBhIGdlbmVyYXRlZCBib3guIElmIHRoZXJlIGlzIG5vIGdlbmVyYXRlZCBib3gsIHRoZSBwcm9wZXJ0eSBpcyBpZ25vcmVkLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBhdm9pZCB8IGFsd2F5cyB8IGFsbCB8IGF2b2lkLXBhZ2UgfCBwYWdlIHwgbGVmdCB8IHJpZ2h0IHwgcmVjdG8gfCB2ZXJzbyB8IGF2b2lkLWNvbHVtbiB8IGNvbHVtbiB8IGF2b2lkLXJlZ2lvbiB8IHJlZ2lvbmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIC0tLQogICAqCiAgICogX1N1cHBvcnRlZCBpbiBNdWx0aS1jb2x1bW4gTGF5b3V0XwogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgKio1MCoqIHwgKio2NSoqICB8ICAgTm8gICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICoKICAgKiAtLS0KICAgKgogICAqIF9TdXBwb3J0ZWQgaW4gUGFnZWQgTWVkaWFfCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjUwKiogfCAqKjY1KiogIHwgKioxMCoqIHwgKioxMioqIHwgKioxMCoqIHwKICAgKgogICAqIC0tLQogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYnJlYWstYmVmb3JlCiAgICovCiAgImJyZWFrLWJlZm9yZSI/OiBQcm9wZXJ0eS5CcmVha0JlZm9yZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYnJlYWstaW5zaWRlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBwYWdlLCBjb2x1bW4sIG9yIHJlZ2lvbiBicmVha3Mgc2hvdWxkIGJlaGF2ZSBpbnNpZGUgYSBnZW5lcmF0ZWQgYm94LiBJZiB0aGVyZSBpcyBubyBnZW5lcmF0ZWQgYm94LCB0aGUgcHJvcGVydHkgaXMgaWdub3JlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgYXZvaWQgfCBhdm9pZC1wYWdlIHwgYXZvaWQtY29sdW1uIHwgYXZvaWQtcmVnaW9uYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIE11bHRpLWNvbHVtbiBMYXlvdXRfCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjUwKiogfCAqKjY1KiogIHwgKioxMCoqIHwgKioxMioqIHwgKioxMCoqIHwKICAgKgogICAqIC0tLQogICAqCiAgICogX1N1cHBvcnRlZCBpbiBQYWdlZCBNZWRpYV8KICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNTAqKiB8ICoqNjUqKiAgfCAqKjEwKiogfCAqKjEyKiogfCAqKjEwKiogfAogICAqCiAgICogLS0tCiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9icmVhay1pbnNpZGUKICAgKi8KICAiYnJlYWstaW5zaWRlIj86IFByb3BlcnR5LkJyZWFrSW5zaWRlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjYXB0aW9uLXNpZGVgKiogQ1NTIHByb3BlcnR5IHB1dHMgdGhlIGNvbnRlbnQgb2YgYSB0YWJsZSdzIGA8Y2FwdGlvbj5gIG9uIHRoZSBzcGVjaWZpZWQgc2lkZS4gVGhlIHZhbHVlcyBhcmUgcmVsYXRpdmUgdG8gdGhlIGB3cml0aW5nLW1vZGVgIG9mIHRoZSB0YWJsZS4KICAgKgogICAqICoqU3ludGF4Kio6IGB0b3AgfCBib3R0b20gfCBibG9jay1zdGFydCB8IGJsb2NrLWVuZCB8IGlubGluZS1zdGFydCB8IGlubGluZS1lbmRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHRvcGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio4KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvY2FwdGlvbi1zaWRlCiAgICovCiAgImNhcHRpb24tc2lkZSI/OiBQcm9wZXJ0eS5DYXB0aW9uU2lkZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY2FyZXQtY29sb3JgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGNvbG9yIG9mIHRoZSAqKmluc2VydGlvbiBjYXJldCoqLCB0aGUgdmlzaWJsZSBtYXJrZXIgd2hlcmUgdGhlIG5leHQgY2hhcmFjdGVyIHR5cGVkIHdpbGwgYmUgaW5zZXJ0ZWQuIFRoaXMgaXMgc29tZXRpbWVzIHJlZmVycmVkIHRvIGFzIHRoZSAqKnRleHQgaW5wdXQgY3Vyc29yKiouIFRoZSBjYXJldCBhcHBlYXJzIGluIGVsZW1lbnRzIHN1Y2ggYXMgYDxpbnB1dD5gIG9yIHRob3NlIHdpdGggdGhlIGBjb250ZW50ZWRpdGFibGVgIGF0dHJpYnV0ZS4gVGhlIGNhcmV0IGlzIHR5cGljYWxseSBhIHRoaW4gdmVydGljYWwgbGluZSB0aGF0IGZsYXNoZXMgdG8gaGVscCBtYWtlIGl0IG1vcmUgbm90aWNlYWJsZS4gQnkgZGVmYXVsdCwgaXQgaXMgYmxhY2ssIGJ1dCBpdHMgY29sb3IgY2FuIGJlIGFsdGVyZWQgd2l0aCB0aGlzIHByb3BlcnR5LgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCA8Y29sb3I+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTcqKiB8ICoqNTMqKiAgfCAqKjExLjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9jYXJldC1jb2xvcgogICAqLwogICJjYXJldC1jb2xvciI/OiBQcm9wZXJ0eS5DYXJldENvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjbGVhcmAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIGFuIGVsZW1lbnQgbXVzdCBiZSBtb3ZlZCBiZWxvdyAoY2xlYXJlZCkgZmxvYXRpbmcgZWxlbWVudHMgdGhhdCBwcmVjZWRlIGl0LiBUaGUgYGNsZWFyYCBwcm9wZXJ0eSBhcHBsaWVzIHRvIGZsb2F0aW5nIGFuZCBub24tZmxvYXRpbmcgZWxlbWVudHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IGxlZnQgfCByaWdodCB8IGJvdGggfCBpbmxpbmUtc3RhcnQgfCBpbmxpbmUtZW5kYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9jbGVhcgogICAqLwogIGNsZWFyPzogUHJvcGVydHkuQ2xlYXIgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKmNsaXAtcGF0aCoqYCBDU1MgcHJvcGVydHkgY3JlYXRlcyBhIGNsaXBwaW5nIHJlZ2lvbiB0aGF0IHNldHMgd2hhdCBwYXJ0IG9mIGFuIGVsZW1lbnQgc2hvdWxkIGJlIHNob3duLiBQYXJ0cyB0aGF0IGFyZSBpbnNpZGUgdGhlIHJlZ2lvbiBhcmUgc2hvd24sIHdoaWxlIHRob3NlIG91dHNpZGUgYXJlIGhpZGRlbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y2xpcC1zb3VyY2U+IHwgWyA8YmFzaWMtc2hhcGU+IHx8IDxnZW9tZXRyeS1ib3g+IF0gfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCAgQ2hyb21lICB8IEZpcmVmb3ggfCAgU2FmYXJpICAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICAqKjU1KiogIHwgKiozLjUqKiB8ICAqKjkuMSoqICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAyMyBfLXgtXyB8ICAgICAgICAgfCA2LjEgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvY2xpcC1wYXRoCiAgICovCiAgImNsaXAtcGF0aCI/OiBQcm9wZXJ0eS5DbGlwUGF0aCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sb3JgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGZvcmVncm91bmQgY29sb3IgdmFsdWUgb2YgYW4gZWxlbWVudCdzIHRleHQgYW5kIHRleHQgZGVjb3JhdGlvbnMsIGFuZCBzZXRzIHRoZSBgPGN1cnJlbnRjb2xvcj5gIHZhbHVlLiBgY3VycmVudGNvbG9yYCBtYXkgYmUgdXNlZCBhcyBhbiBpbmRpcmVjdCB2YWx1ZSBvbiBfb3RoZXJfIHByb3BlcnRpZXMgYW5kIGlzIHRoZSBkZWZhdWx0IGZvciBvdGhlciBjb2xvciBwcm9wZXJ0aWVzLCBzdWNoIGFzIGBib3JkZXItY29sb3JgLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogVmFyaWVzIGZyb20gb25lIGJyb3dzZXIgdG8gYW5vdGhlcgogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjMqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9jb2xvcgogICAqLwogIGNvbG9yPzogUHJvcGVydHkuQ29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbG9yLWFkanVzdGAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGF0LCBpZiBhbnl0aGluZywgdGhlIHVzZXIgYWdlbnQgbWF5IGRvIHRvIG9wdGltaXplIHRoZSBhcHBlYXJhbmNlIG9mIHRoZSBlbGVtZW50IG9uIHRoZSBvdXRwdXQgZGV2aWNlLiBCeSBkZWZhdWx0LCB0aGUgYnJvd3NlciBpcyBhbGxvd2VkIHRvIG1ha2UgYW55IGFkanVzdG1lbnRzIHRvIHRoZSBlbGVtZW50J3MgYXBwZWFyYW5jZSBpdCBkZXRlcm1pbmVzIHRvIGJlIG5lY2Vzc2FyeSBhbmQgcHJ1ZGVudCBnaXZlbiB0aGUgdHlwZSBhbmQgY2FwYWJpbGl0aWVzIG9mIHRoZSBvdXRwdXQgZGV2aWNlLgogICAqCiAgICogKipTeW50YXgqKjogYGVjb25vbXkgfCBleGFjdGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgZWNvbm9teWAKICAgKgogICAqIHwgICAgICAgICAgICAgICAgQ2hyb21lICAgICAgICAgICAgICAgICB8IEZpcmVmb3ggfCAgICAgICAgICAgICAgICBTYWZhcmkgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgRWRnZSAgICAgICAgICAgICAgICAgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotOiB8CiAgICogfCAqKjQ5KiogXygtd2Via2l0LXByaW50LWNvbG9yLWFkanVzdClfIHwgKio0OCoqICB8ICoqNioqIF8oLXdlYmtpdC1wcmludC1jb2xvci1hZGp1c3QpXyB8ICoqNzkqKiBfKC13ZWJraXQtcHJpbnQtY29sb3ItYWRqdXN0KV8gfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvY29sb3ItYWRqdXN0CiAgICovCiAgImNvbG9yLWFkanVzdCI/OiBQcm9wZXJ0eS5Db2xvckFkanVzdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sb3Itc2NoZW1lYCoqIENTUyBwcm9wZXJ0eSBhbGxvd3MgYW4gZWxlbWVudCB0byBpbmRpY2F0ZSB3aGljaCBjb2xvciBzY2hlbWVzIGl0IGNhbiBjb21mb3J0YWJseSBiZSByZW5kZXJlZCBpbi4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCBbIGxpZ2h0IHwgZGFyayB8IDxjdXN0b20taWRlbnQ+IF0rYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjgxKiogfCAgIE5vICAgIHwgKioxMyoqIHwgKio4MSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2NvbG9yLXNjaGVtZQogICAqLwogICJjb2xvci1zY2hlbWUiPzogUHJvcGVydHkuQ29sb3JTY2hlbWUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi1jb3VudGAqKiBDU1MgcHJvcGVydHkgYnJlYWtzIGFuIGVsZW1lbnQncyBjb250ZW50IGludG8gdGhlIHNwZWNpZmllZCBudW1iZXIgb2YgY29sdW1ucy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8aW50ZWdlcj4gfCBhdXRvYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNTAqKiAgfCAqKjUyKiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAxIF8teC1fIHwgICAgICAgICB8IDMgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvY29sdW1uLWNvdW50CiAgICovCiAgImNvbHVtbi1jb3VudCI/OiBQcm9wZXJ0eS5Db2x1bW5Db3VudCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uLWZpbGxgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIGhvdyBhbiBlbGVtZW50J3MgY29udGVudHMgYXJlIGJhbGFuY2VkIHdoZW4gYnJva2VuIGludG8gY29sdW1ucy4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgYmFsYW5jZSB8IGJhbGFuY2UtYWxsYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBiYWxhbmNlYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjUwKiogfCAqKjUyKiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAgICAgICAgfCAgICAgICAgIHwgOCBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9jb2x1bW4tZmlsbAogICAqLwogICJjb2x1bW4tZmlsbCI/OiBQcm9wZXJ0eS5Db2x1bW5GaWxsIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2x1bW4tZ2FwYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBzaXplIG9mIHRoZSBnYXAgKGd1dHRlcikgYmV0d2VlbiBhbiBlbGVtZW50J3MgY29sdW1ucy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCA8bGVuZ3RoLXBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiAtLS0KICAgKgogICAqIF9TdXBwb3J0ZWQgaW4gRmxleCBMYXlvdXRfCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4NCoqIHwgKio2MyoqICB8ICoqMTQuMSoqIHwgKio4NCoqIHwgTm8gIHwKICAgKgogICAqIC0tLQogICAqCiAgICogX1N1cHBvcnRlZCBpbiBHcmlkIExheW91dF8KICAgKgogICAqIHwgICAgICAgICBDaHJvbWUgICAgICAgICB8ICAgICAgICBGaXJlZm94ICAgICAgICAgfCAgICAgICAgICBTYWZhcmkgICAgICAgICAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgICAgICAgICAqKjY2KiogICAgICAgICB8ICAgICAgICAgKio2MSoqICAgICAgICAgfCAgICAgICAgICAqKjEyKiogICAgICAgICAgfCAqKjE2KiogfCBObyAgfAogICAqIHwgNTcgXyhncmlkLWNvbHVtbi1nYXApXyB8IDUyIF8oZ3JpZC1jb2x1bW4tZ2FwKV8gfCAxMC4xIF8oZ3JpZC1jb2x1bW4tZ2FwKV8gfCAgICAgICAgfCAgICAgfAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIE11bHRpLWNvbHVtbiBMYXlvdXRfCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgKio1MCoqICB8ICoqNTIqKiAgfCAqKjEwKiogIHwgKioxMioqIHwgKioxMCoqIHwKICAgKiB8IDEgXy14LV8gfCAgICAgICAgIHwgMyBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiAtLS0KICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2NvbHVtbi1nYXAKICAgKi8KICAiY29sdW1uLWdhcCI/OiBQcm9wZXJ0eS5Db2x1bW5HYXA8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi1ydWxlLWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBjb2xvciBvZiB0aGUgbGluZSBkcmF3biBiZXR3ZWVuIGNvbHVtbnMgaW4gYSBtdWx0aS1jb2x1bW4gbGF5b3V0LgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGN1cnJlbnRjb2xvcmAKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjUwKiogIHwgKio1MioqICB8ICAqKjkqKiAgfCAqKjEyKiogfCAqKjEwKiogfAogICAqIHwgMSBfLXgtXyB8ICAgICAgICAgfCAzIF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2NvbHVtbi1ydWxlLWNvbG9yCiAgICovCiAgImNvbHVtbi1ydWxlLWNvbG9yIj86IFByb3BlcnR5LkNvbHVtblJ1bGVDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uLXJ1bGUtc3R5bGVgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHN0eWxlIG9mIHRoZSBsaW5lIGRyYXduIGJldHdlZW4gY29sdW1ucyBpbiBhIG11bHRpLWNvbHVtbiBsYXlvdXQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItc3R5bGUnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjUwKiogIHwgKio1MioqICB8ICAqKjkqKiAgfCAqKjEyKiogfCAqKjEwKiogfAogICAqIHwgMSBfLXgtXyB8ICAgICAgICAgfCAzIF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2NvbHVtbi1ydWxlLXN0eWxlCiAgICovCiAgImNvbHVtbi1ydWxlLXN0eWxlIj86IFByb3BlcnR5LkNvbHVtblJ1bGVTdHlsZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uLXJ1bGUtd2lkdGhgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHdpZHRoIG9mIHRoZSBsaW5lIGRyYXduIGJldHdlZW4gY29sdW1ucyBpbiBhIG11bHRpLWNvbHVtbiBsYXlvdXQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItd2lkdGgnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWVkaXVtYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNTAqKiAgfCAqKjUyKiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAxIF8teC1fIHwgICAgICAgICB8IDMgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvY29sdW1uLXJ1bGUtd2lkdGgKICAgKi8KICAiY29sdW1uLXJ1bGUtd2lkdGgiPzogUHJvcGVydHkuQ29sdW1uUnVsZVdpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2x1bW4tc3BhbmAqKiBDU1MgcHJvcGVydHkgbWFrZXMgaXQgcG9zc2libGUgZm9yIGFuIGVsZW1lbnQgdG8gc3BhbiBhY3Jvc3MgYWxsIGNvbHVtbnMgd2hlbiBpdHMgdmFsdWUgaXMgc2V0IHRvIGBhbGxgLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBhbGxgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgIFNhZmFyaSAgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNTAqKiAgfCAqKjcxKiogIHwgICAqKjkqKiAgIHwgKioxMioqIHwgKioxMCoqIHwKICAgKiB8IDYgXy14LV8gfCAgICAgICAgIHwgNS4xIF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2NvbHVtbi1zcGFuCiAgICovCiAgImNvbHVtbi1zcGFuIj86IFByb3BlcnR5LkNvbHVtblNwYW4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi13aWR0aGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgaWRlYWwgY29sdW1uIHdpZHRoIGluIGEgbXVsdGktY29sdW1uIGxheW91dC4gVGhlIGNvbnRhaW5lciB3aWxsIGhhdmUgYXMgbWFueSBjb2x1bW5zIGFzIGNhbiBmaXQgd2l0aG91dCBhbnkgb2YgdGhlbSBoYXZpbmcgYSB3aWR0aCBsZXNzIHRoYW4gdGhlIGBjb2x1bW4td2lkdGhgIHZhbHVlLiBJZiB0aGUgd2lkdGggb2YgdGhlIGNvbnRhaW5lciBpcyBuYXJyb3dlciB0aGFuIHRoZSBzcGVjaWZpZWQgdmFsdWUsIHRoZSBzaW5nbGUgY29sdW1uJ3Mgd2lkdGggd2lsbCBiZSBzbWFsbGVyIHRoYW4gdGhlIGRlY2xhcmVkIGNvbHVtbiB3aWR0aC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPiB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgKio1MCoqICB8ICoqNTAqKiAgfCAgKio5KiogIHwgKioxMioqIHwgKioxMCoqIHwKICAgKiB8IDEgXy14LV8gfCAgICAgICAgIHwgMyBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9jb2x1bW4td2lkdGgKICAgKi8KICAiY29sdW1uLXdpZHRoIj86IFByb3BlcnR5LkNvbHVtbldpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb250YWluYCoqIENTUyBwcm9wZXJ0eSBhbGxvd3MgYW4gYXV0aG9yIHRvIGluZGljYXRlIHRoYXQgYW4gZWxlbWVudCBhbmQgaXRzIGNvbnRlbnRzIGFyZSwgYXMgbXVjaCBhcyBwb3NzaWJsZSwgX2luZGVwZW5kZW50XyBvZiB0aGUgcmVzdCBvZiB0aGUgZG9jdW1lbnQgdHJlZS4gVGhpcyBhbGxvd3MgdGhlIGJyb3dzZXIgdG8gcmVjYWxjdWxhdGUgbGF5b3V0LCBzdHlsZSwgcGFpbnQsIHNpemUsIG9yIGFueSBjb21iaW5hdGlvbiBvZiB0aGVtIGZvciBhIGxpbWl0ZWQgYXJlYSBvZiB0aGUgRE9NIGFuZCBub3QgdGhlIGVudGlyZSBwYWdlLCBsZWFkaW5nIHRvIG9idmlvdXMgcGVyZm9ybWFuY2UgYmVuZWZpdHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IHN0cmljdCB8IGNvbnRlbnQgfCBbIHNpemUgfHwgbGF5b3V0IHx8IHN0eWxlIHx8IHBhaW50IF1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjUyKiogfCAqKjY5KiogIHwgICBObyAgIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2NvbnRhaW4KICAgKi8KICBjb250YWluPzogUHJvcGVydHkuQ29udGFpbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29udGVudGAqKiBDU1MgcHJvcGVydHkgcmVwbGFjZXMgYW4gZWxlbWVudCB3aXRoIGEgZ2VuZXJhdGVkIHZhbHVlLiBPYmplY3RzIGluc2VydGVkIHVzaW5nIHRoZSBgY29udGVudGAgcHJvcGVydHkgYXJlICoqYW5vbnltb3VzIHJlcGxhY2VkIGVsZW1lbnRzKipfLl8KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCBub25lIHwgWyA8Y29udGVudC1yZXBsYWNlbWVudD4gfCA8Y29udGVudC1saXN0PiBdIFsvIDxzdHJpbmc+IF0/YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqOCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2NvbnRlbnQKICAgKi8KICBjb250ZW50PzogUHJvcGVydHkuQ29udGVudCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29udGVudC12aXNpYmlsaXR5YCoqIENTUyBwcm9wZXJ0eSBjb250cm9scyB3aGV0aGVyIG9yIG5vdCBhbiBlbGVtZW50IHJlbmRlcnMgaXRzIGNvbnRlbnRzIGF0IGFsbCwgYWxvbmcgd2l0aCBmb3JjaW5nIGEgc3Ryb25nIHNldCBvZiBjb250YWlubWVudHMsIGFsbG93aW5nIHVzZXIgYWdlbnRzIHRvIHBvdGVudGlhbGx5IG9taXQgbGFyZ2Ugc3dhdGhlcyBvZiBsYXlvdXQgYW5kIHJlbmRlcmluZyB3b3JrIHVudGlsIGl0IGJlY29tZXMgbmVlZGVkLiBCYXNpY2FsbHkgaXQgZW5hYmxlcyB0aGUgdXNlciBhZ2VudCB0byBza2lwIGFuIGVsZW1lbnQncyByZW5kZXJpbmcgd29yaywgaW5jbHVkaW5nIGxheW91dCBhbmQgcGFpbnRpbmcsIHVudGlsIGl0IGlzIG5lZWRlZCwgbWFrZXMgdGhlIGluaXRpYWwgcGFnZSBsb2FkIG11Y2ggZmFzdGVyLgogICAqCiAgICogKipTeW50YXgqKjogYHZpc2libGUgfCBhdXRvIHwgaGlkZGVuYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGB2aXNpYmxlYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4NSoqIHwgICBObyAgICB8ICAgTm8gICB8ICoqODUqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9jb250ZW50LXZpc2liaWxpdHkKICAgKi8KICAiY29udGVudC12aXNpYmlsaXR5Ij86IFByb3BlcnR5LkNvbnRlbnRWaXNpYmlsaXR5IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb3VudGVyLWluY3JlbWVudGAqKiBDU1MgcHJvcGVydHkgaW5jcmVhc2VzIG9yIGRlY3JlYXNlcyB0aGUgdmFsdWUgb2YgYSBDU1MgY291bnRlciBieSBhIGdpdmVuIHZhbHVlLgogICAqCiAgICogKipTeW50YXgqKjogYFsgPGN1c3RvbS1pZGVudD4gPGludGVnZXI+PyBdKyB8IG5vbmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioyKiogIHwgICoqMSoqICB8ICoqMyoqICB8ICoqMTIqKiB8ICoqOCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2NvdW50ZXItaW5jcmVtZW50CiAgICovCiAgImNvdW50ZXItaW5jcmVtZW50Ij86IFByb3BlcnR5LkNvdW50ZXJJbmNyZW1lbnQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvdW50ZXItcmVzZXRgKiogQ1NTIHByb3BlcnR5IHJlc2V0cyBhIENTUyBjb3VudGVyIHRvIGEgZ2l2ZW4gdmFsdWUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8Y3VzdG9tLWlkZW50PiA8aW50ZWdlcj4/IF0rIHwgbm9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjIqKiAgfCAgKioxKiogIHwgKiozKiogIHwgKioxMioqIHwgKio4KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvY291bnRlci1yZXNldAogICAqLwogICJjb3VudGVyLXJlc2V0Ij86IFByb3BlcnR5LkNvdW50ZXJSZXNldCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY291bnRlci1zZXRgKiogQ1NTIHByb3BlcnR5IHNldHMgYSBDU1MgY291bnRlciB0byBhIGdpdmVuIHZhbHVlLiBJdCBtYW5pcHVsYXRlcyB0aGUgdmFsdWUgb2YgZXhpc3RpbmcgY291bnRlcnMsIGFuZCB3aWxswqBvbmx5IGNyZWF0ZSBuZXcgY291bnRlcnMgaWYgdGhlcmUgaXNuJ3QgYWxyZWFkeSBhIGNvdW50ZXIgb2YgdGhlIGdpdmVuIG5hbWUgb24gdGhlIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8Y3VzdG9tLWlkZW50PiA8aW50ZWdlcj4/IF0rIHwgbm9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODUqKiB8ICoqNjgqKiAgfCAgIE5vICAgfCAqKjg1KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvY291bnRlci1zZXQKICAgKi8KICAiY291bnRlci1zZXQiPzogUHJvcGVydHkuQ291bnRlclNldCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY3Vyc29yYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSB0eXBlIG9mIG1vdXNlIGN1cnNvciwgaWYgYW55LCB0byBzaG93IHdoZW4gdGhlIG1vdXNlIHBvaW50ZXIgaXMgb3ZlciBhbiBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYFsgWyA8dXJsPiBbIDx4PiA8eT4gXT8gLCBdKiBbIGF1dG8gfCBkZWZhdWx0IHwgbm9uZSB8IGNvbnRleHQtbWVudSB8IGhlbHAgfCBwb2ludGVyIHwgcHJvZ3Jlc3MgfCB3YWl0IHwgY2VsbCB8IGNyb3NzaGFpciB8IHRleHQgfCB2ZXJ0aWNhbC10ZXh0IHwgYWxpYXMgfCBjb3B5IHwgbW92ZSB8IG5vLWRyb3AgfCBub3QtYWxsb3dlZCB8IGUtcmVzaXplIHwgbi1yZXNpemUgfCBuZS1yZXNpemUgfCBudy1yZXNpemUgfCBzLXJlc2l6ZSB8IHNlLXJlc2l6ZSB8IHN3LXJlc2l6ZSB8IHctcmVzaXplIHwgZXctcmVzaXplIHwgbnMtcmVzaXplIHwgbmVzdy1yZXNpemUgfCBud3NlLXJlc2l6ZSB8IGNvbC1yZXNpemUgfCByb3ctcmVzaXplIHwgYWxsLXNjcm9sbCB8IHpvb20taW4gfCB6b29tLW91dCB8IGdyYWIgfCBncmFiYmluZyBdIF1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxLjIqKiB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2N1cnNvcgogICAqLwogIGN1cnNvcj86IFByb3BlcnR5LkN1cnNvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZGlyZWN0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBkaXJlY3Rpb24gb2YgdGV4dCwgdGFibGUgY29sdW1ucywgYW5kIGhvcml6b250YWwgb3ZlcmZsb3cuIFVzZSBgcnRsYCBmb3IgbGFuZ3VhZ2VzIHdyaXR0ZW4gZnJvbSByaWdodCB0byBsZWZ0IChsaWtlIEhlYnJldyBvciBBcmFiaWMpLCBhbmQgYGx0cmAgZm9yIHRob3NlIHdyaXR0ZW4gZnJvbSBsZWZ0IHRvIHJpZ2h0IChsaWtlIEVuZ2xpc2ggYW5kIG1vc3Qgb3RoZXIgbGFuZ3VhZ2VzKS4KICAgKgogICAqICoqU3ludGF4Kio6IGBsdHIgfCBydGxgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGx0cmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS0tLTogfAogICAqIHwgKioyKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNS41KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZGlyZWN0aW9uCiAgICovCiAgZGlyZWN0aW9uPzogUHJvcGVydHkuRGlyZWN0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBkaXNwbGF5YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgYW4gZWxlbWVudCBpcyB0cmVhdGVkIGFzIGEgYmxvY2sgb3IgaW5saW5lIGVsZW1lbnQgYW5kIHRoZSBsYXlvdXQgdXNlZCBmb3IgaXRzIGNoaWxkcmVuLCBzdWNoIGFzIGZsb3cgbGF5b3V0LCBncmlkIG9yIGZsZXguCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8ZGlzcGxheS1vdXRzaWRlPiB8fCA8ZGlzcGxheS1pbnNpZGU+IF0gfCA8ZGlzcGxheS1saXN0aXRlbT4gfCA8ZGlzcGxheS1pbnRlcm5hbD4gfCA8ZGlzcGxheS1ib3g+IHwgPGRpc3BsYXktbGVnYWN5PmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgaW5saW5lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9kaXNwbGF5CiAgICovCiAgZGlzcGxheT86IFByb3BlcnR5LkRpc3BsYXkgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGVtcHR5LWNlbGxzYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgYm9yZGVycyBhbmQgYmFja2dyb3VuZHMgYXBwZWFyIGFyb3VuZCBgPHRhYmxlPmAgY2VsbHMgdGhhdCBoYXZlIG5vIHZpc2libGUgY29udGVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGBzaG93IHwgaGlkZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc2hvd2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEuMioqIHwgKioxMioqIHwgKio4KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZW1wdHktY2VsbHMKICAgKi8KICAiZW1wdHktY2VsbHMiPzogUHJvcGVydHkuRW1wdHlDZWxscyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZmlsdGVyYCoqIENTUyBwcm9wZXJ0eSBhcHBsaWVzIGdyYXBoaWNhbCBlZmZlY3RzIGxpa2UgYmx1ciBvciBjb2xvciBzaGlmdCB0byBhbiBlbGVtZW50LiBGaWx0ZXJzIGFyZSBjb21tb25seSB1c2VkIHRvIGFkanVzdCB0aGUgcmVuZGVyaW5nIG9mIGltYWdlcywgYmFja2dyb3VuZHMsIGFuZCBib3JkZXJzLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8ZmlsdGVyLWZ1bmN0aW9uLWxpc3Q+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCAgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgICoqNTMqKiAgfCAqKjM1KiogIHwgKio5LjEqKiB8ICoqMTIqKiB8IE5vICB8CiAgICogfCAxOCBfLXgtXyB8ICAgICAgICAgfCA2IF8teC1fIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2ZpbHRlcgogICAqLwogIGZpbHRlcj86IFByb3BlcnR5LkZpbHRlciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZmxleC1iYXNpc2AqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgaW5pdGlhbCBtYWluIHNpemUgb2YgYSBmbGV4IGl0ZW0uIEl0IHNldHMgdGhlIHNpemUgb2YgdGhlIGNvbnRlbnQgYm94IHVubGVzcyBvdGhlcndpc2Ugc2V0IHdpdGggYGJveC1zaXppbmdgLgogICAqCiAgICogKipTeW50YXgqKjogYGNvbnRlbnQgfCA8J3dpZHRoJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8ICBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAgKioyOSoqICB8ICoqMjIqKiAgfCAgKio5KiogIHwgKioxMioqIHwgKioxMSoqIHwKICAgKiB8IDIyIF8teC1fIHwgICAgICAgICB8IDcgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZmxleC1iYXNpcwogICAqLwogICJmbGV4LWJhc2lzIj86IFByb3BlcnR5LkZsZXhCYXNpczxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZmxleC1kaXJlY3Rpb25gKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IGZsZXggaXRlbXMgYXJlIHBsYWNlZCBpbiB0aGUgZmxleCBjb250YWluZXIgZGVmaW5pbmcgdGhlIG1haW4gYXhpcyBhbmQgdGhlIGRpcmVjdGlvbiAobm9ybWFsIG9yIHJldmVyc2VkKS4KICAgKgogICAqICoqU3ludGF4Kio6IGByb3cgfCByb3ctcmV2ZXJzZSB8IGNvbHVtbiB8IGNvbHVtbi1yZXZlcnNlYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGByb3dgCiAgICoKICAgKiB8ICBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgICBJRSAgICB8CiAgICogfCA6LS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS0tLTogfAogICAqIHwgICoqMjkqKiAgfCAqKjIwKiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICAqKjExKiogIHwKICAgKiB8IDIxIF8teC1fIHwgICAgICAgICB8IDcgXy14LV8gfCAgICAgICAgfCAxMCBfLXgtXyB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mbGV4LWRpcmVjdGlvbgogICAqLwogICJmbGV4LWRpcmVjdGlvbiI/OiBQcm9wZXJ0eS5GbGV4RGlyZWN0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmbGV4LWdyb3dgKiogQ1NTwqBwcm9wZXJ0eSBzZXRzIHRoZSBmbGV4IGdyb3cgZmFjdG9yIG9mIGEgZmxleCBpdGVtIG1haW4gc2l6ZS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bnVtYmVyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgIENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgICAgICAgICAgSUUgICAgICAgICAgICB8CiAgICogfCA6LS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwKICAgKiB8ICAqKjI5KiogIHwgKioyMCoqICB8ICAqKjkqKiAgfCAqKjEyKiogfCAgICAgICAgICAqKjExKiogICAgICAgICAgfAogICAqIHwgMjIgXy14LV8gfCAgICAgICAgIHwgNyBfLXgtXyB8ICAgICAgICB8IDEwIF8oLW1zLWZsZXgtcG9zaXRpdmUpXyB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mbGV4LWdyb3cKICAgKi8KICAiZmxleC1ncm93Ij86IFByb3BlcnR5LkZsZXhHcm93IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmbGV4LXNocmlua2AqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgZmxleCBzaHJpbmsgZmFjdG9yIG9mIGEgZmxleCBpdGVtLiBJZiB0aGUgc2l6ZSBvZiBhbGwgZmxleCBpdGVtcyBpcyBsYXJnZXIgdGhhbiB0aGUgZmxleCBjb250YWluZXIsIGl0ZW1zIHNocmluayB0byBmaXQgYWNjb3JkaW5nIHRvIGBmbGV4LXNocmlua2AuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPG51bWJlcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDFgCiAgICoKICAgKiB8ICBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAgKioyOSoqICB8ICoqMjAqKiAgfCAgKio5KiogIHwgKioxMioqIHwgKioxMCoqIHwKICAgKiB8IDIyIF8teC1fIHwgICAgICAgICB8IDggXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZmxleC1zaHJpbmsKICAgKi8KICAiZmxleC1zaHJpbmsiPzogUHJvcGVydHkuRmxleFNocmluayB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZmxleC13cmFwYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgZmxleCBpdGVtcyBhcmUgZm9yY2VkIG9udG8gb25lIGxpbmUgb3IgY2FuIHdyYXAgb250byBtdWx0aXBsZSBsaW5lcy4gSWYgd3JhcHBpbmcgaXMgYWxsb3dlZCwgaXQgc2V0cyB0aGUgZGlyZWN0aW9uIHRoYXQgbGluZXMgYXJlIHN0YWNrZWQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm93cmFwIHwgd3JhcCB8IHdyYXAtcmV2ZXJzZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm93cmFwYAogICAqCiAgICogfCAgQ2hyb21lICB8IEZpcmVmb3ggfCAgU2FmYXJpICAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICAqKjI5KiogIHwgKioyOCoqICB8ICAgKio5KiogICB8ICoqMTIqKiB8ICoqMTEqKiB8CiAgICogfCAyMSBfLXgtXyB8ICAgICAgICAgfCA2LjEgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZmxleC13cmFwCiAgICovCiAgImZsZXgtd3JhcCI/OiBQcm9wZXJ0eS5GbGV4V3JhcCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZmxvYXRgKiogQ1NTIHByb3BlcnR5IHBsYWNlcyBhbiBlbGVtZW50IG9uIHRoZSBsZWZ0IG9yIHJpZ2h0IHNpZGUgb2YgaXRzIGNvbnRhaW5lciwgYWxsb3dpbmcgdGV4dCBhbmQgaW5saW5lIGVsZW1lbnRzIHRvIHdyYXAgYXJvdW5kIGl0LiBUaGUgZWxlbWVudCBpcyByZW1vdmVkIGZyb20gdGhlIG5vcm1hbCBmbG93IG9mIHRoZSBwYWdlLCB0aG91Z2ggc3RpbGwgcmVtYWluaW5nIGEgcGFydCBvZiB0aGUgZmxvdyAoaW4gY29udHJhc3QgdG8gYWJzb2x1dGUgcG9zaXRpb25pbmcpLgogICAqCiAgICogKipTeW50YXgqKjogYGxlZnQgfCByaWdodCB8IG5vbmUgfCBpbmxpbmUtc3RhcnQgfCBpbmxpbmUtZW5kYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mbG9hdAogICAqLwogIGZsb2F0PzogUHJvcGVydHkuRmxvYXQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQtZmFtaWx5YCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgYSBwcmlvcml0aXplZCBsaXN0IG9mIG9uZSBvciBtb3JlIGZvbnQgZmFtaWx5IG5hbWVzIGFuZC9vciBnZW5lcmljIGZhbWlseSBuYW1lcyBmb3IgdGhlIHNlbGVjdGVkIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8ZmFtaWx5LW5hbWU+IHwgPGdlbmVyaWMtZmFtaWx5PiBdI2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBkZXBlbmRzIG9uIHVzZXIgYWdlbnQKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKiozKiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZm9udC1mYW1pbHkKICAgKi8KICAiZm9udC1mYW1pbHkiPzogUHJvcGVydHkuRm9udEZhbWlseSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZm9udC1mZWF0dXJlLXNldHRpbmdzYCoqIENTUyBwcm9wZXJ0eSBjb250cm9scyBhZHZhbmNlZCB0eXBvZ3JhcGhpYyBmZWF0dXJlcyBpbiBPcGVuVHlwZSBmb250cy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCA8ZmVhdHVyZS10YWctdmFsdWU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCAgQ2hyb21lICB8IEZpcmVmb3ggIHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAgKio0OCoqICB8ICAqKjM0KiogIHwgKio5LjEqKiB8ICoqMTUqKiB8ICoqMTAqKiB8CiAgICogfCAxNiBfLXgtXyB8IDE1IF8teC1fIHwgICAgICAgICB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mb250LWZlYXR1cmUtc2V0dGluZ3MKICAgKi8KICAiZm9udC1mZWF0dXJlLXNldHRpbmdzIj86IFByb3BlcnR5LkZvbnRGZWF0dXJlU2V0dGluZ3MgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQta2VybmluZ2AqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgdXNlIG9mIHRoZSBrZXJuaW5nIGluZm9ybWF0aW9uIHN0b3JlZCBpbiBhIGZvbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IG5vcm1hbCB8IG5vbmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqMzMqKiB8ICoqMzIqKiAgfCAgKio5KiogIHwgKio3OSoqIHwgTm8gIHwKICAgKiB8ICAgICAgICB8ICAgICAgICAgfCA2IF8teC1fIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2ZvbnQta2VybmluZwogICAqLwogICJmb250LWtlcm5pbmciPzogUHJvcGVydHkuRm9udEtlcm5pbmcgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQtbGFuZ3VhZ2Utb3ZlcnJpZGVgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIHRoZSB1c2Ugb2YgbGFuZ3VhZ2Utc3BlY2lmaWMgZ2x5cGhzIGluIGEgdHlwZWZhY2UuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgPHN0cmluZz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8IEVkZ2UgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLTogfCA6LTogfAogICAqIHwgICBObyAgIHwgKiozNCoqICB8ICAgTm8gICB8ICBObyAgfCBObyAgfAogICAqIHwgICAgICAgIHwgNCBfLXgtXyB8ICAgICAgICB8ICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZm9udC1sYW5ndWFnZS1vdmVycmlkZQogICAqLwogICJmb250LWxhbmd1YWdlLW92ZXJyaWRlIj86IFByb3BlcnR5LkZvbnRMYW5ndWFnZU92ZXJyaWRlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb250LW9wdGljYWwtc2l6aW5nYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgdGV4dCByZW5kZXJpbmcgaXMgb3B0aW1pemVkIGZvciB2aWV3aW5nIGF0IGRpZmZlcmVudCBzaXplcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgbm9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNzkqKiB8ICoqNjIqKiAgfCAqKjExKiogfCAqKjE3KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZm9udC1vcHRpY2FsLXNpemluZwogICAqLwogICJmb250LW9wdGljYWwtc2l6aW5nIj86IFByb3BlcnR5LkZvbnRPcHRpY2FsU2l6aW5nIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb250LXNpemVgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHNpemUgb2YgdGhlIGZvbnQuIENoYW5naW5nIHRoZSBmb250IHNpemUgYWxzbyB1cGRhdGVzIHRoZSBzaXplcyBvZiB0aGUgZm9udCBzaXplLXJlbGF0aXZlIGA8bGVuZ3RoPmAgdW5pdHMsIHN1Y2ggYXPCoGBlbWAsIGBleGAsIGFuZCBzbyBmb3J0aC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8YWJzb2x1dGUtc2l6ZT4gfCA8cmVsYXRpdmUtc2l6ZT4gfCA8bGVuZ3RoLXBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBtZWRpdW1gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgIElFICAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjUuNSoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2ZvbnQtc2l6ZQogICAqLwogICJmb250LXNpemUiPzogUHJvcGVydHkuRm9udFNpemU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQtc2l6ZS1hZGp1c3RgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHNpemUgb2YgbG93ZXItY2FzZSBsZXR0ZXJzIHJlbGF0aXZlIHRvIHRoZSBjdXJyZW50IGZvbnQgc2l6ZSAod2hpY2ggZGVmaW5lcyB0aGUgc2l6ZSBvZiB1cHBlci1jYXNlIGxldHRlcnMpLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBbIGV4LWhlaWdodCB8IGNhcC1oZWlnaHQgfCBjaC13aWR0aCB8IGljLXdpZHRoIHwgaWMtaGVpZ2h0IF0/IFsgZnJvbS1mb250IHwgPG51bWJlcj4gXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8IEVkZ2UgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLTogfCA6LTogfAogICAqIHwgIG4vYSAgIHwgICoqMSoqICB8ICAgTm8gICB8IG4vYSAgfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZm9udC1zaXplLWFkanVzdAogICAqLwogICJmb250LXNpemUtYWRqdXN0Ij86IFByb3BlcnR5LkZvbnRTaXplQWRqdXN0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb250LXNtb290aGAqKiBDU1MgcHJvcGVydHkgY29udHJvbHMgdGhlIGFwcGxpY2F0aW9uIG9mIGFudGktYWxpYXNpbmcgd2hlbiBmb250cyBhcmUgcmVuZGVyZWQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IG5ldmVyIHwgYWx3YXlzIHwgPGFic29sdXRlLXNpemU+IHwgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8ICAgICAgICAgICAgICBDaHJvbWUgICAgICAgICAgICAgIHwgICAgICAgICAgICAgIEZpcmVmb3ggICAgICAgICAgICAgICB8ICAgICAgICAgICAgICBTYWZhcmkgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICBFZGdlICAgICAgICAgICAgICAgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi06IHwKICAgKiB8ICoqNSoqIF8oLXdlYmtpdC1mb250LXNtb290aGluZylfIHwgKioyNSoqIF8oLW1vei1vc3gtZm9udC1zbW9vdGhpbmcpXyB8ICoqNCoqIF8oLXdlYmtpdC1mb250LXNtb290aGluZylfIHwgKio3OSoqIF8oLXdlYmtpdC1mb250LXNtb290aGluZylfIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2ZvbnQtc21vb3RoCiAgICovCiAgImZvbnQtc21vb3RoIj86IFByb3BlcnR5LkZvbnRTbW9vdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQtc3RyZXRjaGAqKiBDU1MgcHJvcGVydHkgc2VsZWN0cyBhIG5vcm1hbCwgY29uZGVuc2VkLCBvciBleHBhbmRlZCBmYWNlIGZyb20gYSBmb250LgogICAqCiAgICogKipTeW50YXgqKjogYDxmb250LXN0cmV0Y2gtYWJzb2x1dGU+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKio2MCoqIHwgICoqOSoqICB8ICoqMTEqKiB8ICoqMTIqKiB8ICoqOSoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2ZvbnQtc3RyZXRjaAogICAqLwogICJmb250LXN0cmV0Y2giPzogUHJvcGVydHkuRm9udFN0cmV0Y2ggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQtc3R5bGVgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hldGhlciBhIGZvbnQgc2hvdWxkIGJlIHN0eWxlZCB3aXRoIGEgbm9ybWFsLCBpdGFsaWMsIG9yIG9ibGlxdWUgZmFjZSBmcm9tIGl0cyBgZm9udC1mYW1pbHlgLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IGl0YWxpYyB8IG9ibGlxdWUgPGFuZ2xlPj9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZm9udC1zdHlsZQogICAqLwogICJmb250LXN0eWxlIj86IFByb3BlcnR5LkZvbnRTdHlsZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZm9udC1zeW50aGVzaXNgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIHdoaWNoIG1pc3NpbmcgdHlwZWZhY2VzLCBib2xkIG9yIGl0YWxpYywgbWF5IGJlIHN5bnRoZXNpemVkIGJ5IHRoZSBicm93c2VyLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBbIHdlaWdodCB8fCBzdHlsZSB8fCBzbWFsbC1jYXBzIF1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHdlaWdodCBzdHlsZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8IEVkZ2UgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLTogfCA6LTogfAogICAqIHwgICBObyAgIHwgKiozNCoqICB8ICoqOSoqICB8ICBObyAgfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZm9udC1zeW50aGVzaXMKICAgKi8KICAiZm9udC1zeW50aGVzaXMiPzogUHJvcGVydHkuRm9udFN5bnRoZXNpcyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZm9udC12YXJpYW50YCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgYWxsb3dzIHlvdSB0byBzZXQgYWxsIHRoZSBmb250IHZhcmlhbnRzIGZvciBhIGZvbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgbm9uZSB8IFsgPGNvbW1vbi1saWctdmFsdWVzPiB8fCA8ZGlzY3JldGlvbmFyeS1saWctdmFsdWVzPiB8fCA8aGlzdG9yaWNhbC1saWctdmFsdWVzPiB8fCA8Y29udGV4dHVhbC1hbHQtdmFsdWVzPiB8fCBzdHlsaXN0aWMoIDxmZWF0dXJlLXZhbHVlLW5hbWU+ICkgfHwgaGlzdG9yaWNhbC1mb3JtcyB8fCBzdHlsZXNldCggPGZlYXR1cmUtdmFsdWUtbmFtZT4jICkgfHwgY2hhcmFjdGVyLXZhcmlhbnQoIDxmZWF0dXJlLXZhbHVlLW5hbWU+IyApIHx8IHN3YXNoKCA8ZmVhdHVyZS12YWx1ZS1uYW1lPiApIHx8IG9ybmFtZW50cyggPGZlYXR1cmUtdmFsdWUtbmFtZT4gKSB8fCBhbm5vdGF0aW9uKCA8ZmVhdHVyZS12YWx1ZS1uYW1lPiApIHx8IFsgc21hbGwtY2FwcyB8IGFsbC1zbWFsbC1jYXBzIHwgcGV0aXRlLWNhcHMgfCBhbGwtcGV0aXRlLWNhcHMgfCB1bmljYXNlIHwgdGl0bGluZy1jYXBzIF0gfHwgPG51bWVyaWMtZmlndXJlLXZhbHVlcz4gfHwgPG51bWVyaWMtc3BhY2luZy12YWx1ZXM+IHx8IDxudW1lcmljLWZyYWN0aW9uLXZhbHVlcz4gfHwgb3JkaW5hbCB8fCBzbGFzaGVkLXplcm8gfHwgPGVhc3QtYXNpYW4tdmFyaWFudC12YWx1ZXM+IHx8IDxlYXN0LWFzaWFuLXdpZHRoLXZhbHVlcz4gfHwgcnVieSBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2ZvbnQtdmFyaWFudAogICAqLwogICJmb250LXZhcmlhbnQiPzogUHJvcGVydHkuRm9udFZhcmlhbnQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQtdmFyaWFudC1jYXBzYCoqIENTUyBwcm9wZXJ0eSBjb250cm9scyB0aGUgdXNlIG9mIGFsdGVybmF0ZSBnbHlwaHMgZm9yIGNhcGl0YWwgbGV0dGVycy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCBzbWFsbC1jYXBzIHwgYWxsLXNtYWxsLWNhcHMgfCBwZXRpdGUtY2FwcyB8IGFsbC1wZXRpdGUtY2FwcyB8IHVuaWNhc2UgfCB0aXRsaW5nLWNhcHNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio1MioqIHwgKiozNCoqICB8ICoqOS4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZm9udC12YXJpYW50LWNhcHMKICAgKi8KICAiZm9udC12YXJpYW50LWNhcHMiPzogUHJvcGVydHkuRm9udFZhcmlhbnRDYXBzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb250LXZhcmlhbnQtZWFzdC1hc2lhbmAqKiBDU1MgcHJvcGVydHkgY29udHJvbHMgdGhlIHVzZSBvZiBhbHRlcm5hdGUgZ2x5cGhzIGZvciBFYXN0IEFzaWFuIHNjcmlwdHMsIGxpa2UgSmFwYW5lc2UgYW5kIENoaW5lc2UuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgWyA8ZWFzdC1hc2lhbi12YXJpYW50LXZhbHVlcz4gfHwgPGVhc3QtYXNpYW4td2lkdGgtdmFsdWVzPiB8fCBydWJ5IF1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2MyoqIHwgKiozNCoqICB8ICoqOS4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZm9udC12YXJpYW50LWVhc3QtYXNpYW4KICAgKi8KICAiZm9udC12YXJpYW50LWVhc3QtYXNpYW4iPzogUHJvcGVydHkuRm9udFZhcmlhbnRFYXN0QXNpYW4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQtdmFyaWFudC1saWdhdHVyZXNgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIHdoaWNoIGxpZ2F0dXJlcyBhbmQgY29udGV4dHVhbCBmb3JtcyBhcmUgdXNlZCBpbiB0ZXh0dWFsIGNvbnRlbnQgb2YgdGhlIGVsZW1lbnRzIGl0IGFwcGxpZXMgdG8uIFRoaXMgbGVhZHMgdG8gbW9yZSBoYXJtb25pemVkIGZvcm1zIGluIHRoZSByZXN1bHRpbmcgdGV4dC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCBub25lIHwgWyA8Y29tbW9uLWxpZy12YWx1ZXM+IHx8IDxkaXNjcmV0aW9uYXJ5LWxpZy12YWx1ZXM+IHx8IDxoaXN0b3JpY2FsLWxpZy12YWx1ZXM+IHx8IDxjb250ZXh0dWFsLWFsdC12YWx1ZXM+IF1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIHwgIENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICAqKjM0KiogIHwgKiozNCoqICB8ICoqOS4xKiogfCAqKjc5KiogfCBObyAgfAogICAqIHwgMzEgXy14LV8gfCAgICAgICAgIHwgNyBfLXgtXyB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mb250LXZhcmlhbnQtbGlnYXR1cmVzCiAgICovCiAgImZvbnQtdmFyaWFudC1saWdhdHVyZXMiPzogUHJvcGVydHkuRm9udFZhcmlhbnRMaWdhdHVyZXMgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQtdmFyaWFudC1udW1lcmljYCoqIENTUyBwcm9wZXJ0eSBjb250cm9scyB0aGUgdXNhZ2Ugb2YgYWx0ZXJuYXRlIGdseXBocyBmb3IgbnVtYmVycywgZnJhY3Rpb25zLCBhbmQgb3JkaW5hbCBtYXJrZXJzLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IFsgPG51bWVyaWMtZmlndXJlLXZhbHVlcz4gfHwgPG51bWVyaWMtc3BhY2luZy12YWx1ZXM+IHx8IDxudW1lcmljLWZyYWN0aW9uLXZhbHVlcz4gfHwgb3JkaW5hbCB8fCBzbGFzaGVkLXplcm8gXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjUyKiogfCAqKjM0KiogIHwgKio5LjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mb250LXZhcmlhbnQtbnVtZXJpYwogICAqLwogICJmb250LXZhcmlhbnQtbnVtZXJpYyI/OiBQcm9wZXJ0eS5Gb250VmFyaWFudE51bWVyaWMgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQtdmFyaWFudC1wb3NpdGlvbmAqKiBDU1MgcHJvcGVydHkgY29udHJvbHMgdGhlIHVzZSBvZiBhbHRlcm5hdGUsIHNtYWxsZXIgZ2x5cGhzIHRoYXQgYXJlIHBvc2l0aW9uZWQgYXMgc3VwZXJzY3JpcHQgb3Igc3Vic2NyaXB0LgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IHN1YiB8IHN1cGVyYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgRWRnZSB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLTogfCA6LTogfAogICAqIHwgICBObyAgIHwgKiozNCoqICB8ICoqOS4xKiogfCAgTm8gIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2ZvbnQtdmFyaWFudC1wb3NpdGlvbgogICAqLwogICJmb250LXZhcmlhbnQtcG9zaXRpb24iPzogUHJvcGVydHkuRm9udFZhcmlhbnRQb3NpdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZm9udC12YXJpYXRpb24tc2V0dGluZ3NgKiogQ1NTIHByb3BlcnR5IHByb3ZpZGVzIGxvdy1sZXZlbCBjb250cm9sIG92ZXIgdmFyaWFibGUgZm9udCBjaGFyYWN0ZXJpc3RpY3MsIGJ5IHNwZWNpZnlpbmcgdGhlIGZvdXIgbGV0dGVyIGF4aXMgbmFtZXMgb2YgdGhlIGNoYXJhY3RlcmlzdGljcyB5b3Ugd2FudCB0byB2YXJ5LCBhbG9uZyB3aXRoIHRoZWlyIHZhbHVlcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCBbIDxzdHJpbmc+IDxudW1iZXI+IF0jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjYyKiogfCAqKjYyKiogIHwgKioxMSoqIHwgKioxNyoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2ZvbnQtdmFyaWF0aW9uLXNldHRpbmdzCiAgICovCiAgImZvbnQtdmFyaWF0aW9uLXNldHRpbmdzIj86IFByb3BlcnR5LkZvbnRWYXJpYXRpb25TZXR0aW5ncyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZm9udC13ZWlnaHRgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHdlaWdodCAob3IgYm9sZG5lc3MpIG9mIHRoZSBmb250LiBUaGUgd2VpZ2h0cyBhdmFpbGFibGUgZGVwZW5kIG9uIHRoZSBgZm9udC1mYW1pbHlgIHRoYXQgaXMgY3VycmVudGx5IHNldC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Zm9udC13ZWlnaHQtYWJzb2x1dGU+IHwgYm9sZGVyIHwgbGlnaHRlcmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMioqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjMqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mb250LXdlaWdodAogICAqLwogICJmb250LXdlaWdodCI/OiBQcm9wZXJ0eS5Gb250V2VpZ2h0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb3JjZWQtY29sb3ItYWRqdXN0YCoqIENTUyBwcm9wZXJ0eSBhbGxvd3MgYXV0aG9ycyB0byBvcHQgY2VydGFpbiBlbGVtZW50cyBvdXQgb2YgZm9yY2VkIGNvbG9ycyBtb2RlLiBUaGlzIHRoZW4gcmVzdG9yZXMgdGhlIGNvbnRyb2wgb2YgdGhvc2UgdmFsdWVzIHRvIENTUy4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgbm9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICAgICAgICAgICAgICBFZGdlICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgSUUgICAgICAgICAgICAgICAgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwKICAgKiB8ICoqODkqKiB8ICAgTm8gICAgfCAgIE5vICAgfCAgICAgICAgICAgICAqKjc5KiogICAgICAgICAgICAgIHwgKioxMCoqIF8oLW1zLWhpZ2gtY29udHJhc3QtYWRqdXN0KV8gfAogICAqIHwgICAgICAgIHwgICAgICAgICB8ICAgICAgICB8IDEyIF8oLW1zLWhpZ2gtY29udHJhc3QtYWRqdXN0KV8gfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mb3JjZWQtY29sb3ItYWRqdXN0CiAgICovCiAgImZvcmNlZC1jb2xvci1hZGp1c3QiPzogUHJvcGVydHkuRm9yY2VkQ29sb3JBZGp1c3QgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGdyaWQtYXV0by1jb2x1bW5zYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIHNpemUgb2YgYW4gaW1wbGljaXRseS1jcmVhdGVkIGdyaWQgY29sdW1uIHRyYWNrIG9yIHBhdHRlcm4gb2YgdHJhY2tzLgogICAqCiAgICogKipTeW50YXgqKjogYDx0cmFjay1zaXplPitgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8ICAgICAgICAgICAgIElFICAgICAgICAgICAgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfAogICAqIHwgKio1NyoqIHwgKio3MCoqICB8ICoqMTAuMSoqIHwgKioxNioqIHwgKioxMCoqIF8oLW1zLWdyaWQtY29sdW1ucylfIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2dyaWQtYXV0by1jb2x1bW5zCiAgICovCiAgImdyaWQtYXV0by1jb2x1bW5zIj86IFByb3BlcnR5LkdyaWRBdXRvQ29sdW1uczxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZ3JpZC1hdXRvLWZsb3dgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIGhvdyB0aGUgYXV0by1wbGFjZW1lbnQgYWxnb3JpdGhtIHdvcmtzLCBzcGVjaWZ5aW5nIGV4YWN0bHkgaG93IGF1dG8tcGxhY2VkIGl0ZW1zIGdldCBmbG93ZWQgaW50byB0aGUgZ3JpZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIHJvdyB8IGNvbHVtbiBdIHx8IGRlbnNlYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGByb3dgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio1NyoqIHwgKio1MioqICB8ICoqMTAuMSoqIHwgKioxNioqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2dyaWQtYXV0by1mbG93CiAgICovCiAgImdyaWQtYXV0by1mbG93Ij86IFByb3BlcnR5LkdyaWRBdXRvRmxvdyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZ3JpZC1hdXRvLXJvd3NgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgc2l6ZSBvZiBhbiBpbXBsaWNpdGx5LWNyZWF0ZWQgZ3JpZCByb3cgdHJhY2vCoG9yIHBhdHRlcm4gb2YgdHJhY2tzLgogICAqCiAgICogKipTeW50YXgqKjogYDx0cmFjay1zaXplPitgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8ICAgICAgICAgICAgSUUgICAgICAgICAgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfAogICAqIHwgKio1NyoqIHwgKio3MCoqICB8ICoqMTAuMSoqIHwgKioxNioqIHwgKioxMCoqIF8oLW1zLWdyaWQtcm93cylfIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2dyaWQtYXV0by1yb3dzCiAgICovCiAgImdyaWQtYXV0by1yb3dzIj86IFByb3BlcnR5LkdyaWRBdXRvUm93czxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZ3JpZC1jb2x1bW4tZW5kYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgYSBncmlkIGl0ZW3igJlzIGVuZCBwb3NpdGlvbiB3aXRoaW4gdGhlIGdyaWQgY29sdW1uIGJ5IGNvbnRyaWJ1dGluZyBhIGxpbmUsIGEgc3Bhbiwgb3Igbm90aGluZyAoYXV0b21hdGljKSB0byBpdHMgZ3JpZCBwbGFjZW1lbnQsIHRoZXJlYnkgc3BlY2lmeWluZyB0aGUgYmxvY2stZW5kIGVkZ2Ugb2YgaXRzIGdyaWQgYXJlYS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Z3JpZC1saW5lPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjUyKiogIHwgKioxMC4xKiogfCAqKjE2KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZ3JpZC1jb2x1bW4tZW5kCiAgICovCiAgImdyaWQtY29sdW1uLWVuZCI/OiBQcm9wZXJ0eS5HcmlkQ29sdW1uRW5kIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBncmlkLWNvbHVtbi1zdGFydGAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIGEgZ3JpZCBpdGVt4oCZcyBzdGFydCBwb3NpdGlvbiB3aXRoaW4gdGhlIGdyaWQgY29sdW1uIGJ5IGNvbnRyaWJ1dGluZyBhIGxpbmUsIGEgc3Bhbiwgb3Igbm90aGluZyAoYXV0b21hdGljKSB0byBpdHMgZ3JpZCBwbGFjZW1lbnQuIFRoaXMgc3RhcnQgcG9zaXRpb24gZGVmaW5lcyB0aGUgYmxvY2stc3RhcnQgZWRnZSBvZiB0aGUgZ3JpZCBhcmVhLgogICAqCiAgICogKipTeW50YXgqKjogYDxncmlkLWxpbmU+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTcqKiB8ICoqNTIqKiAgfCAqKjEwLjEqKiB8ICoqMTYqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ncmlkLWNvbHVtbi1zdGFydAogICAqLwogICJncmlkLWNvbHVtbi1zdGFydCI/OiBQcm9wZXJ0eS5HcmlkQ29sdW1uU3RhcnQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGdyaWQtcm93LWVuZGAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIGEgZ3JpZCBpdGVt4oCZcyBlbmQgcG9zaXRpb24gd2l0aGluIHRoZSBncmlkIHJvdyBieSBjb250cmlidXRpbmcgYSBsaW5lLCBhIHNwYW4sIG9yIG5vdGhpbmcgKGF1dG9tYXRpYykgdG8gaXRzIGdyaWQgcGxhY2VtZW50LCB0aGVyZWJ5IHNwZWNpZnlpbmcgdGhlIGlubGluZS1lbmQgZWRnZSBvZiBpdHMgZ3JpZCBhcmVhLgogICAqCiAgICogKipTeW50YXgqKjogYDxncmlkLWxpbmU+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTcqKiB8ICoqNTIqKiAgfCAqKjEwLjEqKiB8ICoqMTYqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ncmlkLXJvdy1lbmQKICAgKi8KICAiZ3JpZC1yb3ctZW5kIj86IFByb3BlcnR5LkdyaWRSb3dFbmQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGdyaWQtcm93LXN0YXJ0YCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgYSBncmlkIGl0ZW3igJlzIHN0YXJ0IHBvc2l0aW9uIHdpdGhpbiB0aGUgZ3JpZCByb3cgYnkgY29udHJpYnV0aW5nIGEgbGluZSwgYSBzcGFuLCBvciBub3RoaW5nIChhdXRvbWF0aWMpIHRvIGl0cyBncmlkIHBsYWNlbWVudCwgdGhlcmVieSBzcGVjaWZ5aW5nIHRoZSBpbmxpbmUtc3RhcnQgZWRnZSBvZiBpdHMgZ3JpZCBhcmVhLgogICAqCiAgICogKipTeW50YXgqKjogYDxncmlkLWxpbmU+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTcqKiB8ICoqNTIqKiAgfCAqKjEwLjEqKiB8ICoqMTYqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ncmlkLXJvdy1zdGFydAogICAqLwogICJncmlkLXJvdy1zdGFydCI/OiBQcm9wZXJ0eS5HcmlkUm93U3RhcnQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGdyaWQtdGVtcGxhdGUtYXJlYXNgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyBuYW1lZCBncmlkIGFyZWFzLCBlc3RhYmxpc2hpbmcgdGhlIGNlbGxzIGluIHRoZSBncmlkIGFuZCBhc3NpZ25pbmcgdGhlbSBuYW1lcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPHN0cmluZz4rYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTcqKiB8ICoqNTIqKiAgfCAqKjEwLjEqKiB8ICoqMTYqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ncmlkLXRlbXBsYXRlLWFyZWFzCiAgICovCiAgImdyaWQtdGVtcGxhdGUtYXJlYXMiPzogUHJvcGVydHkuR3JpZFRlbXBsYXRlQXJlYXMgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGdyaWQtdGVtcGxhdGUtY29sdW1uc2AqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbGluZSBuYW1lcyBhbmQgdHJhY2sgc2l6aW5nIGZ1bmN0aW9ucyBvZiB0aGUgZ3JpZCBjb2x1bW5zLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8dHJhY2stbGlzdD4gfCA8YXV0by10cmFjay1saXN0PiB8IHN1YmdyaWQgPGxpbmUtbmFtZS1saXN0Pj9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8ICAgICAgICAgICAgIElFICAgICAgICAgICAgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfAogICAqIHwgKio1NyoqIHwgKio1MioqICB8ICoqMTAuMSoqIHwgKioxNioqIHwgKioxMCoqIF8oLW1zLWdyaWQtY29sdW1ucylfIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2dyaWQtdGVtcGxhdGUtY29sdW1ucwogICAqLwogICJncmlkLXRlbXBsYXRlLWNvbHVtbnMiPzogUHJvcGVydHkuR3JpZFRlbXBsYXRlQ29sdW1uczxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZ3JpZC10ZW1wbGF0ZS1yb3dzYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsaW5lIG5hbWVzIGFuZCB0cmFjayBzaXppbmcgZnVuY3Rpb25zIG9mIHRoZSBncmlkIHJvd3MuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDx0cmFjay1saXN0PiB8IDxhdXRvLXRyYWNrLWxpc3Q+IHwgc3ViZ3JpZCA8bGluZS1uYW1lLWxpc3Q+P2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgICAgICAgICAgICBJRSAgICAgICAgICAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8CiAgICogfCAqKjU3KiogfCAqKjUyKiogIHwgKioxMC4xKiogfCAqKjE2KiogfCAqKjEwKiogXygtbXMtZ3JpZC1yb3dzKV8gfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZ3JpZC10ZW1wbGF0ZS1yb3dzCiAgICovCiAgImdyaWQtdGVtcGxhdGUtcm93cyI/OiBQcm9wZXJ0eS5HcmlkVGVtcGxhdGVSb3dzPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBoYW5naW5nLXB1bmN0dWF0aW9uYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgd2hldGhlciBhIHB1bmN0dWF0aW9uIG1hcmsgc2hvdWxkIGhhbmcgYXQgdGhlIHN0YXJ0IG9yIGVuZCBvZiBhIGxpbmUgb2YgdGV4dC4gSGFuZ2luZyBwdW5jdHVhdGlvbiBtYXkgYmUgcGxhY2VkIG91dHNpZGUgdGhlIGxpbmUgYm94LgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBbIGZpcnN0IHx8IFsgZm9yY2UtZW5kIHwgYWxsb3ctZW5kIF0gfHwgbGFzdCBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgRWRnZSB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tOiB8IDotOiB8CiAgICogfCAgIE5vICAgfCAgIE5vICAgIHwgKioxMCoqIHwgIE5vICB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9oYW5naW5nLXB1bmN0dWF0aW9uCiAgICovCiAgImhhbmdpbmctcHVuY3R1YXRpb24iPzogUHJvcGVydHkuSGFuZ2luZ1B1bmN0dWF0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBoZWlnaHRgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgaGVpZ2h0IG9mIGFuIGVsZW1lbnQuIEJ5IGRlZmF1bHQsIHRoZSBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBoZWlnaHQgb2YgdGhlIGNvbnRlbnQgYXJlYS4gSWYgYGJveC1zaXppbmdgIGlzIHNldCB0byBgYm9yZGVyLWJveGAsIGhvd2V2ZXIsIGl0IGluc3RlYWQgZGV0ZXJtaW5lcyB0aGUgaGVpZ2h0IG9mIHRoZSBib3JkZXIgYXJlYS4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPGxlbmd0aD4gfCA8cGVyY2VudGFnZT4gfCBtaW4tY29udGVudCB8IG1heC1jb250ZW50IHwgZml0LWNvbnRlbnQgfCBmaXQtY29udGVudCg8bGVuZ3RoLXBlcmNlbnRhZ2U+KWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvaGVpZ2h0CiAgICovCiAgaGVpZ2h0PzogUHJvcGVydHkuSGVpZ2h0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBoeXBoZW5zYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgaG93IHdvcmRzIHNob3VsZCBiZSBoeXBoZW5hdGVkIHdoZW4gdGV4dCB3cmFwcyBhY3Jvc3MgbXVsdGlwbGUgbGluZXMuIEl0IGNhbiBwcmV2ZW50IGh5cGhlbmF0aW9uIGVudGlyZWx5LCBoeXBoZW5hdGUgYXQgbWFudWFsbHktc3BlY2lmaWVkIHBvaW50cyB3aXRoaW4gdGhlIHRleHQsIG9yIGxldCB0aGUgYnJvd3NlciBhdXRvbWF0aWNhbGx5IGluc2VydCBoeXBoZW5zIHdoZXJlIGFwcHJvcHJpYXRlLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBtYW51YWwgfCBhdXRvYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBtYW51YWxgCiAgICoKICAgKiB8ICBDaHJvbWUgIHwgRmlyZWZveCB8ICAgIFNhZmFyaSAgICAgfCAgRWRnZSAgfCAgICAgIElFICAgICAgfAogICAqIHwgOi0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLS0tOiB8IDotLS0tOiB8IDotLS0tLS0tLS0tOiB8CiAgICogfCAgKio1NSoqICB8ICoqNDMqKiAgfCAqKjUuMSoqIF8teC1fIHwgKio3OSoqIHwgKioxMCoqIF8teC1fIHwKICAgKiB8IDEzIF8teC1fIHwgNiBfLXgtXyB8ICAgICAgICAgICAgICAgfCAgICAgICAgfCAgICAgICAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvaHlwaGVucwogICAqLwogIGh5cGhlbnM/OiBQcm9wZXJ0eS5IeXBoZW5zIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBpbWFnZS1vcmllbnRhdGlvbmAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIGEgbGF5b3V0LWluZGVwZW5kZW50IGNvcnJlY3Rpb24gdG8gdGhlIG9yaWVudGF0aW9uIG9mIGFuIGltYWdlLiBJdCBzaG91bGQgX25vdF8gYmUgdXNlZCBmb3IgYW55IG90aGVyIG9yaWVudGF0aW9uIGFkanVzdG1lbnRzOyBpbnN0ZWFkLCB0aGUgYHRyYW5zZm9ybWAgcHJvcGVydHkgc2hvdWxkIGJlIHVzZWQgd2l0aCB0aGUgYHJvdGF0ZWAgYDx0cmFuc2Zvcm0tZnVuY3Rpb24+YC4KICAgKgogICAqICoqU3ludGF4Kio6IGBmcm9tLWltYWdlIHwgPGFuZ2xlPiB8IFsgPGFuZ2xlPj8gZmxpcCBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBmcm9tLWltYWdlYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODEqKiB8ICoqMjYqKiAgfCAqKjEzLjEqKiB8ICoqODEqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9pbWFnZS1vcmllbnRhdGlvbgogICAqLwogICJpbWFnZS1vcmllbnRhdGlvbiI/OiBQcm9wZXJ0eS5JbWFnZU9yaWVudGF0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBpbWFnZS1yZW5kZXJpbmdgKiogQ1NTIHByb3BlcnR5IHNldHMgYW4gaW1hZ2Ugc2NhbGluZyBhbGdvcml0aG0uIFRoZSBwcm9wZXJ0eSBhcHBsaWVzIHRvIGFuIGVsZW1lbnQgaXRzZWxmLCB0byBhbnkgaW1hZ2VzIHNldCBpbiBpdHMgb3RoZXIgcHJvcGVydGllcywgYW5kIHRvIGl0cyBkZXNjZW5kYW50cy4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgY3Jpc3AtZWRnZXMgfCBwaXhlbGF0ZWRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjEzKiogfCAqKjMuNioqIHwgKio2KiogIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2ltYWdlLXJlbmRlcmluZwogICAqLwogICJpbWFnZS1yZW5kZXJpbmciPzogUHJvcGVydHkuSW1hZ2VSZW5kZXJpbmcgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogKipTeW50YXgqKjogYFsgZnJvbS1pbWFnZSB8fCA8cmVzb2x1dGlvbj4gXSAmJiBzbmFwP2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMWRwcHhgCiAgICovCiAgImltYWdlLXJlc29sdXRpb24iPzogUHJvcGVydHkuSW1hZ2VSZXNvbHV0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgaW5pdGlhbC1sZXR0ZXJgIENTUyBwcm9wZXJ0eSBzZXRzIHN0eWxpbmcgZm9yIGRyb3BwZWQsIHJhaXNlZCwgYW5kIHN1bmtlbiBpbml0aWFsIGxldHRlcnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgWyA8bnVtYmVyPiA8aW50ZWdlcj4/IF1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICAgU2FmYXJpICAgIHwgRWRnZSB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLTogfCA6LS06IHwgOi06IHwKICAgKiB8ICAgTm8gICB8ICAgTm8gICAgfCAqKjkqKiBfLXgtXyB8ICBObyAgfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvaW5pdGlhbC1sZXR0ZXIKICAgKi8KICAiaW5pdGlhbC1sZXR0ZXIiPzogUHJvcGVydHkuSW5pdGlhbExldHRlciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgaW5saW5lLXNpemVgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGhvcml6b250YWwgb3IgdmVydGljYWwgc2l6ZSBvZiBhbiBlbGVtZW50J3MgYmxvY2ssIGRlcGVuZGluZyBvbiBpdHMgd3JpdGluZyBtb2RlLiBJdCBjb3JyZXNwb25kcyB0byBlaXRoZXIgdGhlIGB3aWR0aGAgb3IgdGhlIGBoZWlnaHRgIHByb3BlcnR5LCBkZXBlbmRpbmcgb24gdGhlIHZhbHVlIG9mIGB3cml0aW5nLW1vZGVgLgogICAqCiAgICogKipTeW50YXgqKjogYDwnd2lkdGgnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjQxKiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvaW5saW5lLXNpemUKICAgKi8KICAiaW5saW5lLXNpemUiPzogUHJvcGVydHkuSW5saW5lU2l6ZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgaW5zZXRgKirCoENTUyBwcm9wZXJ0eSBpcyBhIHNob3J0aGFuZCB0aGF0IGNvcnJlc3BvbmRzIHRvIHRoZSBgdG9wYCwgYHJpZ2h0YCwgYGJvdHRvbWAsIGFuZC9vciBgbGVmdGAgcHJvcGVydGllcy4gSXQgaGFzIHRoZSBzYW1lIG11bHRpLXZhbHVlIHN5bnRheCBvZiB0aGUgYG1hcmdpbmAgc2hvcnRoYW5kLgogICAqCiAgICogKipTeW50YXgqKjogYDwndG9wJz57MSw0fWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg3KiogfCAqKjY2KiogIHwgKioxNC4xKiogfCAqKjg3KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvaW5zZXQKICAgKi8KICBpbnNldD86IFByb3BlcnR5Lkluc2V0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBpbnNldC1pbmxpbmVgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgc3RhcnQgYW5kIGVuZCBvZmZzZXRzIG9mIGFuIGVsZW1lbnQgaW4gdGhlIGlubGluZSBkaXJlY3Rpb24sIHdoaWNoIG1hcHMgdG8gcGh5c2ljYWwgb2Zmc2V0cyBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGB0b3BgIGFuZCBgYm90dG9tYCwgb3IgYHJpZ2h0YCBhbmQgYGxlZnRgIHByb3BlcnRpZXMgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwndG9wJz57MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg3KiogfCAqKjYzKiogIHwgKioxNC4xKiogfCAqKjg3KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvaW5zZXQtYmxvY2sKICAgKi8KICAiaW5zZXQtYmxvY2siPzogUHJvcGVydHkuSW5zZXRCbG9jazxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgaW5zZXQtYmxvY2stZW5kYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIGJsb2NrIGVuZCBvZmZzZXQgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIGluc2V0IGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYHRvcGAsIGByaWdodGAsIGBib3R0b21gLCBvciBgbGVmdGAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwndG9wJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4NyoqIHwgKio2MyoqICB8ICoqMTQuMSoqIHwgKio4NyoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2luc2V0LWJsb2NrLWVuZAogICAqLwogICJpbnNldC1ibG9jay1lbmQiPzogUHJvcGVydHkuSW5zZXRCbG9ja0VuZDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgaW5zZXQtYmxvY2stc3RhcnRgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgYmxvY2sgc3RhcnQgb2Zmc2V0IG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBpbnNldCBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGB0b3BgLCBgcmlnaHRgLCBgYm90dG9tYCwgb3IgYGxlZnRgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3RvcCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODcqKiB8ICoqNjMqKiAgfCAqKjE0LjEqKiB8ICoqODcqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9pbnNldC1ibG9jay1zdGFydAogICAqLwogICJpbnNldC1ibG9jay1zdGFydCI/OiBQcm9wZXJ0eS5JbnNldEJsb2NrU3RhcnQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGluc2V0LWlubGluZWAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBzdGFydCBhbmQgZW5kIG9mZnNldHMgb2YgYW4gZWxlbWVudCBpbiB0aGUgaW5saW5lIGRpcmVjdGlvbiwgd2hpY2ggbWFwcyB0byBwaHlzaWNhbCBvZmZzZXRzIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYHRvcGAgYW5kIGBib3R0b21gLCBvciBgcmlnaHRgIGFuZCBgbGVmdGAgcHJvcGVydGllcyBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBkZWZpbmVkIGZvciBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCd0b3AnPnsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODcqKiB8ICoqNjMqKiAgfCAqKjE0LjEqKiB8ICoqODcqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9pbnNldC1pbmxpbmUKICAgKi8KICAiaW5zZXQtaW5saW5lIj86IFByb3BlcnR5Lkluc2V0SW5saW5lPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBpbnNldC1pbmxpbmUtZW5kYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIGlubGluZSBlbmQgaW5zZXQgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIG9mZnNldCBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGB0b3BgLCBgcmlnaHRgLCBgYm90dG9tYCwgb3IgYGxlZnRgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3RvcCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODcqKiB8ICoqNjMqKiAgfCAqKjE0LjEqKiB8ICoqODcqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9pbnNldC1pbmxpbmUtZW5kCiAgICovCiAgImluc2V0LWlubGluZS1lbmQiPzogUHJvcGVydHkuSW5zZXRJbmxpbmVFbmQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGluc2V0LWlubGluZS1zdGFydGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBpbmxpbmUgc3RhcnQgaW5zZXQgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIG9mZnNldCBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGB0b3BgLCBgcmlnaHRgLCBgYm90dG9tYCwgb3IgYGxlZnRgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3RvcCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODcqKiB8ICoqNjMqKiAgfCAqKjE0LjEqKiB8ICoqODcqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9pbnNldC1pbmxpbmUtc3RhcnQKICAgKi8KICAiaW5zZXQtaW5saW5lLXN0YXJ0Ij86IFByb3BlcnR5Lkluc2V0SW5saW5lU3RhcnQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGlzb2xhdGlvbmAqKiBDU1MgcHJvcGVydHkgZGV0ZXJtaW5lcyB3aGV0aGVyIGFuIGVsZW1lbnQgbXVzdCBjcmVhdGUgYSBuZXcgc3RhY2tpbmcgY29udGV4dC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgaXNvbGF0ZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNDEqKiB8ICoqMzYqKiAgfCAqKjgqKiAgfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvaXNvbGF0aW9uCiAgICovCiAgaXNvbGF0aW9uPzogUHJvcGVydHkuSXNvbGF0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBDU1MgKipganVzdGlmeS1jb250ZW50YCoqIHByb3BlcnR5IGRlZmluZXMgaG93IHRoZSBicm93c2VyIGRpc3RyaWJ1dGVzIHNwYWNlIGJldHdlZW4gYW5kIGFyb3VuZCBjb250ZW50IGl0ZW1zIGFsb25nIHRoZSBtYWluLWF4aXMgb2YgYSBmbGV4IGNvbnRhaW5lciwgYW5kIHRoZSBpbmxpbmUgYXhpcyBvZiBhIGdyaWQgY29udGFpbmVyLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IDxjb250ZW50LWRpc3RyaWJ1dGlvbj4gfCA8b3ZlcmZsb3ctcG9zaXRpb24+PyBbIDxjb250ZW50LXBvc2l0aW9uPiB8IGxlZnQgfCByaWdodCBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiAtLS0KICAgKgogICAqIF9TdXBwb3J0ZWQgaW4gRmxleCBMYXlvdXRfCiAgICoKICAgKiB8ICBDaHJvbWUgIHwgRmlyZWZveCB8ICBTYWZhcmkgICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgICoqNTIqKiAgfCAqKjIwKiogIHwgICAqKjkqKiAgIHwgKioxMioqIHwgKioxMSoqIHwKICAgKiB8IDIxIF8teC1fIHwgICAgICAgICB8IDYuMSBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiAtLS0KICAgKgogICAqIF9TdXBwb3J0ZWQgaW4gR3JpZCBMYXlvdXRfCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio1NyoqIHwgKio1MioqICB8ICoqMTAuMSoqIHwgKioxNioqIHwgTm8gIHwKICAgKgogICAqIC0tLQogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvanVzdGlmeS1jb250ZW50CiAgICovCiAgImp1c3RpZnktY29udGVudCI/OiBQcm9wZXJ0eS5KdXN0aWZ5Q29udGVudCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgQ1NTICoqYGp1c3RpZnktaXRlbXNgKiogcHJvcGVydHkgZGVmaW5lcyB0aGUgZGVmYXVsdCBganVzdGlmeS1zZWxmYCBmb3IgYWxsIGl0ZW1zIG9mIHRoZSBib3gsIGdpdmluZyB0aGVtIGFsbCBhIGRlZmF1bHQgd2F5IG9mIGp1c3RpZnlpbmcgZWFjaCBib3ggYWxvbmcgdGhlIGFwcHJvcHJpYXRlIGF4aXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgc3RyZXRjaCB8IDxiYXNlbGluZS1wb3NpdGlvbj4gfCA8b3ZlcmZsb3ctcG9zaXRpb24+PyBbIDxzZWxmLXBvc2l0aW9uPiB8IGxlZnQgfCByaWdodCBdIHwgbGVnYWN5IHwgbGVnYWN5ICYmIFsgbGVmdCB8IHJpZ2h0IHwgY2VudGVyIF1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGxlZ2FjeWAKICAgKgogICAqIC0tLQogICAqCiAgICogX1N1cHBvcnRlZCBpbiBGbGV4IExheW91dF8KICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqNTIqKiB8ICoqMjAqKiAgfCAqKjkqKiAgfCAqKjEyKiogfCAqKjExKiogfAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIEdyaWQgTGF5b3V0XwogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTcqKiB8ICoqNDUqKiAgfCAqKjEwLjEqKiB8ICoqMTYqKiB8IE5vICB8CiAgICoKICAgKiAtLS0KICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2p1c3RpZnktaXRlbXMKICAgKi8KICAianVzdGlmeS1pdGVtcyI/OiBQcm9wZXJ0eS5KdXN0aWZ5SXRlbXMgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIENTUyAqKmBqdXN0aWZ5LXNlbGZgKiogcHJvcGVydHkgc2V0cyB0aGUgd2F5IGEgYm94IGlzIGp1c3RpZmllZCBpbnNpZGUgaXRzIGFsaWdubWVudCBjb250YWluZXIgYWxvbmcgdGhlIGFwcHJvcHJpYXRlIGF4aXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IG5vcm1hbCB8IHN0cmV0Y2ggfCA8YmFzZWxpbmUtcG9zaXRpb24+IHwgPG92ZXJmbG93LXBvc2l0aW9uPj8gWyA8c2VsZi1wb3NpdGlvbj4gfCBsZWZ0IHwgcmlnaHQgXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIC0tLQogICAqCiAgICogX1N1cHBvcnRlZCBpbiBGbGV4IExheW91dF8KICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjQ1KiogIHwgKioxMC4xKiogfCAqKjE2KiogfCBObyAgfAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIEdyaWQgTGF5b3V0XwogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCAgICAgIElFICAgICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi0tLS0tLS0tLS06IHwKICAgKiB8ICoqNTcqKiB8ICoqNDUqKiAgfCAqKjEwLjEqKiB8ICoqMTYqKiB8ICoqMTAqKiBfLXgtXyB8CiAgICoKICAgKiAtLS0KICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2p1c3RpZnktc2VsZgogICAqLwogICJqdXN0aWZ5LXNlbGYiPzogUHJvcGVydHkuSnVzdGlmeVNlbGYgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGp1c3RpZnktdHJhY2tzYCoqwqBDU1MgcHJvcGVydHkgc2V0cyB0aGUgYWxpZ25tZW50IGluIHRoZSBtYXNvbnJ5IGF4aXMgZm9yIGdyaWQgY29udGFpbmVycyB0aGF0IGhhdmUgbWFzb25yeSBpbiB0aGVpciBpbmxpbmXCoGF4aXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyBub3JtYWwgfCA8Y29udGVudC1kaXN0cmlidXRpb24+IHwgPG92ZXJmbG93LXBvc2l0aW9uPj8gWyA8Y29udGVudC1wb3NpdGlvbj4gfCBsZWZ0IHwgcmlnaHQgXSBdI2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgRWRnZSB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tOiB8IDotOiB8CiAgICogfCAgIE5vICAgfCAgIG4vYSAgIHwgICBObyAgIHwgIE5vICB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9qdXN0aWZ5LXRyYWNrcwogICAqLwogICJqdXN0aWZ5LXRyYWNrcyI/OiBQcm9wZXJ0eS5KdXN0aWZ5VHJhY2tzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBsZWZ0YCoqIENTUyBwcm9wZXJ0eSBwYXJ0aWNpcGF0ZXMgaW4gc3BlY2lmeWluZyB0aGUgaG9yaXpvbnRhbCBwb3NpdGlvbiBvZiBhIHBvc2l0aW9uZWQgZWxlbWVudC4gSXQgaGFzIG5vIGVmZmVjdCBvbiBub24tcG9zaXRpb25lZCBlbGVtZW50cy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPiB8IDxwZXJjZW50YWdlPiB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgIElFICAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjUuNSoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2xlZnQKICAgKi8KICBsZWZ0PzogUHJvcGVydHkuTGVmdDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbGV0dGVyLXNwYWNpbmdgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGhvcml6b250YWwgc3BhY2luZyBiZWhhdmlvciBiZXR3ZWVuIHRleHQgY2hhcmFjdGVycy4gVGhpcyB2YWx1ZSBpcyBhZGRlZCB0byB0aGUgbmF0dXJhbCBzcGFjaW5nIGJldHdlZW4gY2hhcmFjdGVycyB3aGlsZSByZW5kZXJpbmcgdGhlIHRleHQuIFBvc2l0aXZlIHZhbHVlcyBvZiBgbGV0dGVyLXNwYWNpbmdgIGNhdXNlcyBjaGFyYWN0ZXJzIHRvIHNwcmVhZCBmYXJ0aGVyIGFwYXJ0LCB3aGlsZSBuZWdhdGl2ZSB2YWx1ZXMgb2YgYGxldHRlci1zcGFjaW5nYCBicmluZyBjaGFyYWN0ZXJzIGNsb3NlciB0b2dldGhlci4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCA8bGVuZ3RoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9sZXR0ZXItc3BhY2luZwogICAqLwogICJsZXR0ZXItc3BhY2luZyI/OiBQcm9wZXJ0eS5MZXR0ZXJTcGFjaW5nPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBsaW5lLWJyZWFrYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyB0byBicmVhayBsaW5lcyBvZiBDaGluZXNlLCBKYXBhbmVzZSwgb3IgS29yZWFuIChDSkspIHRleHQgd2hlbiB3b3JraW5nIHdpdGggcHVuY3R1YXRpb24gYW5kIHN5bWJvbHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IGxvb3NlIHwgbm9ybWFsIHwgc3RyaWN0IHwgYW55d2hlcmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS0tOiB8CiAgICogfCAqKjU4KiogIHwgKio2OSoqICB8ICoqMTEqKiAgfCAqKjE0KiogfCAqKjUuNSoqIHwKICAgKiB8IDEgXy14LV8gfCAgICAgICAgIHwgMyBfLXgtXyB8ICAgICAgICB8ICAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbGluZS1icmVhawogICAqLwogICJsaW5lLWJyZWFrIj86IFByb3BlcnR5LkxpbmVCcmVhayB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbGluZS1oZWlnaHRgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGhlaWdodCBvZiBhIGxpbmUgYm94LiBJdCdzIGNvbW1vbmx5IHVzZWQgdG8gc2V0IHRoZSBkaXN0YW5jZSBiZXR3ZWVuIGxpbmVzIG9mIHRleHQuIE9uIGJsb2NrLWxldmVsIGVsZW1lbnRzLCBpdCBzcGVjaWZpZXMgdGhlIG1pbmltdW0gaGVpZ2h0IG9mIGxpbmUgYm94ZXMgd2l0aGluIHRoZSBlbGVtZW50LiBPbiBub24tcmVwbGFjZWQgaW5saW5lIGVsZW1lbnRzLCBpdCBzcGVjaWZpZXMgdGhlIGhlaWdodCB0aGF0IGlzIHVzZWQgdG8gY2FsY3VsYXRlIGxpbmUgYm94IGhlaWdodC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCA8bnVtYmVyPiB8IDxsZW5ndGg+IHwgPHBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2xpbmUtaGVpZ2h0CiAgICovCiAgImxpbmUtaGVpZ2h0Ij86IFByb3BlcnR5LkxpbmVIZWlnaHQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGxpbmUtaGVpZ2h0LXN0ZXBgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHN0ZXAgdW5pdCBmb3IgbGluZSBib3ggaGVpZ2h0cy4gV2hlbiB0aGUgcHJvcGVydHkgaXMgc2V0LCBsaW5lIGJveCBoZWlnaHRzIGFyZSByb3VuZGVkIHVwIHRvIHRoZSBjbG9zZXN0IG11bHRpcGxlIG9mIHRoZSB1bml0LgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgRWRnZSB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tOiB8IDotOiB8CiAgICogfCAgbi9hICAgfCAgIE5vICAgIHwgICBObyAgIHwgbi9hICB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9saW5lLWhlaWdodC1zdGVwCiAgICovCiAgImxpbmUtaGVpZ2h0LXN0ZXAiPzogUHJvcGVydHkuTGluZUhlaWdodFN0ZXA8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGxpc3Qtc3R5bGUtaW1hZ2VgKiogQ1NTIHByb3BlcnR5IHNldHMgYW4gaW1hZ2UgdG8gYmUgdXNlZCBhcyB0aGUgbGlzdCBpdGVtIG1hcmtlci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8aW1hZ2U+IHwgbm9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbGlzdC1zdHlsZS1pbWFnZQogICAqLwogICJsaXN0LXN0eWxlLWltYWdlIj86IFByb3BlcnR5Lkxpc3RTdHlsZUltYWdlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBsaXN0LXN0eWxlLXBvc2l0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBwb3NpdGlvbiBvZiB0aGUgYDo6bWFya2VyYCByZWxhdGl2ZSB0byBhIGxpc3QgaXRlbS4KICAgKgogICAqICoqU3ludGF4Kio6IGBpbnNpZGUgfCBvdXRzaWRlYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBvdXRzaWRlYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9saXN0LXN0eWxlLXBvc2l0aW9uCiAgICovCiAgImxpc3Qtc3R5bGUtcG9zaXRpb24iPzogUHJvcGVydHkuTGlzdFN0eWxlUG9zaXRpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGxpc3Qtc3R5bGUtdHlwZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbWFya2VyIChzdWNoIGFzIGEgZGlzYywgY2hhcmFjdGVyLCBvciBjdXN0b20gY291bnRlciBzdHlsZSkgb2YgYSBsaXN0IGl0ZW0gZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y291bnRlci1zdHlsZT4gfCA8c3RyaW5nPiB8IG5vbmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGRpc2NgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2xpc3Qtc3R5bGUtdHlwZQogICAqLwogICJsaXN0LXN0eWxlLXR5cGUiPzogUHJvcGVydHkuTGlzdFN0eWxlVHlwZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFyZ2luLWJsb2NrYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBibG9jayBzdGFydCBhbmQgZW5kIG1hcmdpbnMgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBwaHlzaWNhbCBtYXJnaW5zIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYDwnbWFyZ2luLWxlZnQnPnsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODcqKiB8ICoqNjYqKiAgfCAqKjE0LjEqKiB8ICoqODcqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXJnaW4tYmxvY2sKICAgKi8KICAibWFyZ2luLWJsb2NrIj86IFByb3BlcnR5Lk1hcmdpbkJsb2NrPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXJnaW4tYmxvY2stZW5kYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIGJsb2NrIGVuZCBtYXJnaW4gb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIG1hcmdpbiBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J21hcmdpbi1sZWZ0Jz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio0MSoqICB8ICoqMTIuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hcmdpbi1ibG9jay1lbmQKICAgKi8KICAibWFyZ2luLWJsb2NrLWVuZCI/OiBQcm9wZXJ0eS5NYXJnaW5CbG9ja0VuZDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFyZ2luLWJsb2NrLXN0YXJ0YCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIGJsb2NrIHN0YXJ0IG1hcmdpbiBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgbWFyZ2luIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYDwnbWFyZ2luLWxlZnQnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjQxKiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbWFyZ2luLWJsb2NrLXN0YXJ0CiAgICovCiAgIm1hcmdpbi1ibG9jay1zdGFydCI/OiBQcm9wZXJ0eS5NYXJnaW5CbG9ja1N0YXJ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXJnaW4tYm90dG9tYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBtYXJnaW4gYXJlYSBvbiB0aGUgYm90dG9tIG9mIGFuIGVsZW1lbnQuIEEgcG9zaXRpdmUgdmFsdWUgcGxhY2VzIGl0IGZhcnRoZXIgZnJvbSBpdHMgbmVpZ2hib3JzLCB3aGlsZSBhIG5lZ2F0aXZlIHZhbHVlIHBsYWNlcyBpdCBjbG9zZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD4gfCA8cGVyY2VudGFnZT4gfCBhdXRvYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjMqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXJnaW4tYm90dG9tCiAgICovCiAgIm1hcmdpbi1ib3R0b20iPzogUHJvcGVydHkuTWFyZ2luQm90dG9tPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXJnaW4taW5saW5lYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgaXMgYSBzaG9ydGhhbmQgcHJvcGVydHkgdGhhdCBkZWZpbmVzIGJvdGggdGhlIGxvZ2ljYWwgaW5saW5lIHN0YXJ0IGFuZCBlbmQgbWFyZ2lucyBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIHBoeXNpY2FsIG1hcmdpbnMgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdtYXJnaW4tbGVmdCc+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4NyoqIHwgKio2NioqICB8ICoqMTQuMSoqIHwgKio4NyoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hcmdpbi1pbmxpbmUKICAgKi8KICAibWFyZ2luLWlubGluZSI/OiBQcm9wZXJ0eS5NYXJnaW5JbmxpbmU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hcmdpbi1pbmxpbmUtZW5kYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIGlubGluZSBlbmQgbWFyZ2luIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBtYXJnaW4gZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEluIG90aGVyIHdvcmRzLCBpdCBjb3JyZXNwb25kcyB0byB0aGUgYG1hcmdpbi10b3BgLCBgbWFyZ2luLXJpZ2h0YCwgYG1hcmdpbi1ib3R0b21gIG9yIGBtYXJnaW4tbGVmdGAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnbWFyZ2luLWxlZnQnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgICAgICAgICAgQ2hyb21lICAgICAgICAgIHwgICAgICAgIEZpcmVmb3ggICAgICAgIHwgICAgICAgICAgU2FmYXJpICAgICAgICAgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAgICAgICAgICAqKjY5KiogICAgICAgICAgfCAgICAgICAgKio0MSoqICAgICAgICAgfCAgICAgICAgICoqMTIuMSoqICAgICAgICAgfCAqKjc5KiogfCBObyAgfAogICAqIHwgMiBfKC13ZWJraXQtbWFyZ2luLWVuZClfIHwgMyBfKC1tb3otbWFyZ2luLWVuZClfIHwgMyBfKC13ZWJraXQtbWFyZ2luLWVuZClfIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hcmdpbi1pbmxpbmUtZW5kCiAgICovCiAgIm1hcmdpbi1pbmxpbmUtZW5kIj86IFByb3BlcnR5Lk1hcmdpbklubGluZUVuZDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFyZ2luLWlubGluZS1zdGFydGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBpbmxpbmUgc3RhcnQgbWFyZ2luIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBtYXJnaW4gZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgbWFyZ2luLXRvcGAsIGBtYXJnaW4tcmlnaHRgLCBgbWFyZ2luLWJvdHRvbWAsIG9yIGBtYXJnaW4tbGVmdGAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnbWFyZ2luLWxlZnQnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgICAgICAgICAgIENocm9tZSAgICAgICAgICAgfCAgICAgICAgIEZpcmVmb3ggICAgICAgICB8ICAgICAgICAgICBTYWZhcmkgICAgICAgICAgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAgICAgICAgICAgKio2OSoqICAgICAgICAgICB8ICAgICAgICAgKio0MSoqICAgICAgICAgIHwgICAgICAgICAgKioxMi4xKiogICAgICAgICAgfCAqKjc5KiogfCBObyAgfAogICAqIHwgMiBfKC13ZWJraXQtbWFyZ2luLXN0YXJ0KV8gfCAzIF8oLW1vei1tYXJnaW4tc3RhcnQpXyB8IDMgXygtd2Via2l0LW1hcmdpbi1zdGFydClfIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hcmdpbi1pbmxpbmUtc3RhcnQKICAgKi8KICAibWFyZ2luLWlubGluZS1zdGFydCI/OiBQcm9wZXJ0eS5NYXJnaW5JbmxpbmVTdGFydDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFyZ2luLWxlZnRgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG1hcmdpbiBhcmVhIG9uIHRoZSBsZWZ0IHNpZGUgb2YgYW4gZWxlbWVudC4gQSBwb3NpdGl2ZSB2YWx1ZSBwbGFjZXMgaXQgZmFydGhlciBmcm9tIGl0cyBuZWlnaGJvcnMsIHdoaWxlIGEgbmVnYXRpdmUgdmFsdWUgcGxhY2VzIGl0IGNsb3Nlci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPiB8IDxwZXJjZW50YWdlPiB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqMyoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hcmdpbi1sZWZ0CiAgICovCiAgIm1hcmdpbi1sZWZ0Ij86IFByb3BlcnR5Lk1hcmdpbkxlZnQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hcmdpbi1yaWdodGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbWFyZ2luIGFyZWEgb24gdGhlIHJpZ2h0IHNpZGUgb2YgYW4gZWxlbWVudC4gQSBwb3NpdGl2ZSB2YWx1ZSBwbGFjZXMgaXQgZmFydGhlciBmcm9tIGl0cyBuZWlnaGJvcnMsIHdoaWxlIGEgbmVnYXRpdmUgdmFsdWUgcGxhY2VzIGl0IGNsb3Nlci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPiB8IDxwZXJjZW50YWdlPiB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqMyoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hcmdpbi1yaWdodAogICAqLwogICJtYXJnaW4tcmlnaHQiPzogUHJvcGVydHkuTWFyZ2luUmlnaHQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hcmdpbi10b3BgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG1hcmdpbiBhcmVhIG9uIHRoZSB0b3Agb2YgYW4gZWxlbWVudC4gQSBwb3NpdGl2ZSB2YWx1ZSBwbGFjZXMgaXQgZmFydGhlciBmcm9tIGl0cyBuZWlnaGJvcnMsIHdoaWxlIGEgbmVnYXRpdmUgdmFsdWUgcGxhY2VzIGl0IGNsb3Nlci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPiB8IDxwZXJjZW50YWdlPiB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqMyoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hcmdpbi10b3AKICAgKi8KICAibWFyZ2luLXRvcCI/OiBQcm9wZXJ0eS5NYXJnaW5Ub3A8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hc2stYm9yZGVyLW1vZGVgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgYmxlbmRpbmcgbW9kZSB1c2VkIGluIGEgbWFzayBib3JkZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbHVtaW5hbmNlIHwgYWxwaGFgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGFscGhhYAogICAqLwogICJtYXNrLWJvcmRlci1tb2RlIj86IFByb3BlcnR5Lk1hc2tCb3JkZXJNb2RlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXNrLWJvcmRlci1vdXRzZXRgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgZGlzdGFuY2UgYnkgd2hpY2ggYW4gZWxlbWVudCdzIG1hc2sgYm9yZGVyIGlzIHNldCBvdXQgZnJvbSBpdHMgYm9yZGVyIGJveC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDxsZW5ndGg+IHwgPG51bWJlcj4gXXsxLDR9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCAgICAgICAgICAgICAgICAgQ2hyb21lICAgICAgICAgICAgICAgICAgfCBGaXJlZm94IHwgICAgICAgICAgICAgICAgICBTYWZhcmkgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICBFZGdlICAgICAgICAgICAgICAgICAgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LTogfAogICAqIHwgKioxKiogXygtd2Via2l0LW1hc2stYm94LWltYWdlLW91dHNldClfIHwgICBObyAgICB8ICoqMy4xKiogXygtd2Via2l0LW1hc2stYm94LWltYWdlLW91dHNldClfIHwgKio3OSoqIF8oLXdlYmtpdC1tYXNrLWJveC1pbWFnZS1vdXRzZXQpXyB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXNrLWJvcmRlci1vdXRzZXQKICAgKi8KICAibWFzay1ib3JkZXItb3V0c2V0Ij86IFByb3BlcnR5Lk1hc2tCb3JkZXJPdXRzZXQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hc2stYm9yZGVyLXJlcGVhdGAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgdGhlIGVkZ2UgcmVnaW9ucyBvZiBhIHNvdXJjZSBpbWFnZSBhcmUgYWRqdXN0ZWQgdG8gZml0IHRoZSBkaW1lbnNpb25zIG9mIGFuIGVsZW1lbnQncyBtYXNrIGJvcmRlci4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIHN0cmV0Y2ggfCByZXBlYXQgfCByb3VuZCB8IHNwYWNlIF17MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc3RyZXRjaGAKICAgKgogICAqIHwgICAgICAgICAgICAgICAgIENocm9tZSAgICAgICAgICAgICAgICAgIHwgRmlyZWZveCB8ICAgICAgICAgICAgICAgICAgU2FmYXJpICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgRWRnZSAgICAgICAgICAgICAgICAgICB8IElFICB8CiAgICogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi06IHwKICAgKiB8ICoqMSoqIF8oLXdlYmtpdC1tYXNrLWJveC1pbWFnZS1yZXBlYXQpXyB8ICAgTm8gICAgfCAqKjMuMSoqIF8oLXdlYmtpdC1tYXNrLWJveC1pbWFnZS1yZXBlYXQpXyB8ICoqNzkqKiBfKC13ZWJraXQtbWFzay1ib3gtaW1hZ2UtcmVwZWF0KV8gfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbWFzay1ib3JkZXItcmVwZWF0CiAgICovCiAgIm1hc2stYm9yZGVyLXJlcGVhdCI/OiBQcm9wZXJ0eS5NYXNrQm9yZGVyUmVwZWF0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXNrLWJvcmRlci1zbGljZWAqKiBDU1MgcHJvcGVydHkgZGl2aWRlcyB0aGUgaW1hZ2Ugc2V0IGJ5IGBtYXNrLWJvcmRlci1zb3VyY2VgIGludG8gcmVnaW9ucy4gVGhlc2UgcmVnaW9ucyBhcmUgdXNlZCB0byBmb3JtIHRoZSBjb21wb25lbnRzIG9mIGFuIGVsZW1lbnQncyBtYXNrIGJvcmRlci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bnVtYmVyLXBlcmNlbnRhZ2U+ezEsNH0gZmlsbD9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8ICAgICAgICAgICAgICAgICBDaHJvbWUgICAgICAgICAgICAgICAgIHwgRmlyZWZveCB8ICAgICAgICAgICAgICAgICAgU2FmYXJpICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgIEVkZ2UgICAgICAgICAgICAgICAgICAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotOiB8CiAgICogfCAqKjEqKiBfKC13ZWJraXQtbWFzay1ib3gtaW1hZ2Utc2xpY2UpXyB8ICAgTm8gICAgfCAqKjMuMSoqIF8oLXdlYmtpdC1tYXNrLWJveC1pbWFnZS1zbGljZSlfIHwgKio3OSoqIF8oLXdlYmtpdC1tYXNrLWJveC1pbWFnZS1zbGljZSlfIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hc2stYm9yZGVyLXNsaWNlCiAgICovCiAgIm1hc2stYm9yZGVyLXNsaWNlIj86IFByb3BlcnR5Lk1hc2tCb3JkZXJTbGljZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1ib3JkZXItc291cmNlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBzb3VyY2UgaW1hZ2UgdXNlZCB0byBjcmVhdGUgYW4gZWxlbWVudCdzIG1hc2sgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8aW1hZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCAgICAgICAgICAgICAgICAgQ2hyb21lICAgICAgICAgICAgICAgICAgfCBGaXJlZm94IHwgICAgICAgICAgICAgICAgICBTYWZhcmkgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICBFZGdlICAgICAgICAgICAgICAgICAgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LTogfAogICAqIHwgKioxKiogXygtd2Via2l0LW1hc2stYm94LWltYWdlLXNvdXJjZSlfIHwgICBObyAgICB8ICoqMy4xKiogXygtd2Via2l0LW1hc2stYm94LWltYWdlLXNvdXJjZSlfIHwgKio3OSoqIF8oLXdlYmtpdC1tYXNrLWJveC1pbWFnZS1zb3VyY2UpXyB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXNrLWJvcmRlci1zb3VyY2UKICAgKi8KICAibWFzay1ib3JkZXItc291cmNlIj86IFByb3BlcnR5Lk1hc2tCb3JkZXJTb3VyY2UgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hc2stYm9yZGVyLXdpZHRoYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSB3aWR0aCBvZiBhbiBlbGVtZW50J3MgbWFzayBib3JkZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8bGVuZ3RoLXBlcmNlbnRhZ2U+IHwgPG51bWJlcj4gfCBhdXRvIF17MSw0fWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgICAgICAgICAgICAgICAgIENocm9tZSAgICAgICAgICAgICAgICAgfCBGaXJlZm94IHwgICAgICAgICAgICAgICAgICBTYWZhcmkgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgRWRnZSAgICAgICAgICAgICAgICAgICB8IElFICB8CiAgICogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi06IHwKICAgKiB8ICoqMSoqIF8oLXdlYmtpdC1tYXNrLWJveC1pbWFnZS13aWR0aClfIHwgICBObyAgICB8ICoqMy4xKiogXygtd2Via2l0LW1hc2stYm94LWltYWdlLXdpZHRoKV8gfCAqKjc5KiogXygtd2Via2l0LW1hc2stYm94LWltYWdlLXdpZHRoKV8gfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbWFzay1ib3JkZXItd2lkdGgKICAgKi8KICAibWFzay1ib3JkZXItd2lkdGgiPzogUHJvcGVydHkuTWFza0JvcmRlcldpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXNrLWNsaXBgKiogQ1NTIHByb3BlcnR5IGRldGVybWluZXMgdGhlIGFyZWEgd2hpY2ggaXMgYWZmZWN0ZWQgYnkgYSBtYXNrLiBUaGUgcGFpbnRlZCBjb250ZW50IG9mIGFuIGVsZW1lbnQgbXVzdCBiZSByZXN0cmljdGVkIHRvIHRoaXMgYXJlYS4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDxnZW9tZXRyeS1ib3g+IHwgbm8tY2xpcCBdI2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYm9yZGVyLWJveGAKICAgKgogICAqIHwgICBDaHJvbWUgICAgfCBGaXJlZm94IHwgICBTYWZhcmkgICAgfCAgICAgRWRnZSAgICAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLTogfCA6LS0tLS0tLS0tLTogfCA6LTogfAogICAqIHwgKioxKiogXy14LV8gfCAqKjUzKiogIHwgKio0KiogXy14LV8gfCAqKjc5KiogXy14LV8gfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbWFzay1jbGlwCiAgICovCiAgIm1hc2stY2xpcCI/OiBQcm9wZXJ0eS5NYXNrQ2xpcCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1jb21wb3NpdGVgKiogQ1NTIHByb3BlcnR5IHJlcHJlc2VudHMgYSBjb21wb3NpdGluZyBvcGVyYXRpb24gdXNlZCBvbiB0aGUgY3VycmVudCBtYXNrIGxheWVyIHdpdGggdGhlIG1hc2sgbGF5ZXJzIGJlbG93IGl0LgogICAqCiAgICogKipTeW50YXgqKjogYDxjb21wb3NpdGluZy1vcGVyYXRvcj4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhZGRgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLTogfCA6LTogfAogICAqIHwgICBObyAgIHwgKio1MyoqICB8ICAgTm8gICB8IDE4LTc5IHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hc2stY29tcG9zaXRlCiAgICovCiAgIm1hc2stY29tcG9zaXRlIj86IFByb3BlcnR5Lk1hc2tDb21wb3NpdGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hc2staW1hZ2VgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGltYWdlIHRoYXQgaXMgdXNlZCBhcyBtYXNrIGxheWVyIGZvciBhbiBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYDxtYXNrLXJlZmVyZW5jZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCAgIENocm9tZSAgICB8IEZpcmVmb3ggfCAgIFNhZmFyaSAgICB8IEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS06IHwgOi0tLTogfCA6LTogfAogICAqIHwgKioxKiogXy14LV8gfCAqKjUzKiogIHwgKio0KiogXy14LV8gfCAxNi03OSB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXNrLWltYWdlCiAgICovCiAgIm1hc2staW1hZ2UiPzogUHJvcGVydHkuTWFza0ltYWdlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXNrLW1vZGVgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hldGhlciB0aGUgbWFzayByZWZlcmVuY2UgZGVmaW5lZCBieSBgbWFzay1pbWFnZWAgaXMgdHJlYXRlZCBhcyBhIGx1bWluYW5jZSBvciBhbHBoYSBtYXNrLgogICAqCiAgICogKipTeW50YXgqKjogYDxtYXNraW5nLW1vZGU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWF0Y2gtc291cmNlYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgRWRnZSB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tOiB8IDotOiB8CiAgICogfCAgIE5vICAgfCAqKjUzKiogIHwgICBObyAgIHwgIE5vICB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXNrLW1vZGUKICAgKi8KICAibWFzay1tb2RlIj86IFByb3BlcnR5Lk1hc2tNb2RlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXNrLW9yaWdpbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgb3JpZ2luIG9mIGEgbWFzay4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Z2VvbWV0cnktYm94PiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGJvcmRlci1ib3hgCiAgICoKICAgKiB8ICAgQ2hyb21lICAgIHwgRmlyZWZveCB8ICAgU2FmYXJpICAgIHwgICAgIEVkZ2UgICAgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS06IHwgOi0tLS0tLS0tLS06IHwgOi06IHwKICAgKiB8ICoqMSoqIF8teC1fIHwgKio1MyoqICB8ICoqNCoqIF8teC1fIHwgKio3OSoqIF8teC1fIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hc2stb3JpZ2luCiAgICovCiAgIm1hc2stb3JpZ2luIj86IFByb3BlcnR5Lk1hc2tPcmlnaW4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hc2stcG9zaXRpb25gKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGluaXRpYWwgcG9zaXRpb24sIHJlbGF0aXZlIHRvIHRoZSBtYXNrIHBvc2l0aW9uIGxheWVyIHNldCBieSBgbWFzay1vcmlnaW5gLCBmb3IgZWFjaCBkZWZpbmVkIG1hc2sgaW1hZ2UuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHBvc2l0aW9uPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGNlbnRlcmAKICAgKgogICAqIHwgICBDaHJvbWUgICAgfCBGaXJlZm94IHwgICAgU2FmYXJpICAgICB8IEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS0tLTogfCA6LS0tOiB8IDotOiB8CiAgICogfCAqKjEqKiBfLXgtXyB8ICoqNTMqKiAgfCAqKjMuMSoqIF8teC1fIHwgMTgtNzkgfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbWFzay1wb3NpdGlvbgogICAqLwogICJtYXNrLXBvc2l0aW9uIj86IFByb3BlcnR5Lk1hc2tQb3NpdGlvbjxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1yZXBlYXRgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IG1hc2sgaW1hZ2VzIGFyZSByZXBlYXRlZC4gQSBtYXNrIGltYWdlIGNhbiBiZSByZXBlYXRlZCBhbG9uZyB0aGUgaG9yaXpvbnRhbCBheGlzLCB0aGUgdmVydGljYWwgYXhpcywgYm90aCBheGVzLCBvciBub3QgcmVwZWF0ZWQgYXQgYWxsLgogICAqCiAgICogKipTeW50YXgqKjogYDxyZXBlYXQtc3R5bGU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm8tcmVwZWF0YAogICAqCiAgICogfCAgIENocm9tZSAgICB8IEZpcmVmb3ggfCAgICBTYWZhcmkgICAgIHwgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLS0tOiB8IDotLS06IHwgOi06IHwKICAgKiB8ICoqMSoqIF8teC1fIHwgKio1MyoqICB8ICoqMy4xKiogXy14LV8gfCAxOC03OSB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXNrLXJlcGVhdAogICAqLwogICJtYXNrLXJlcGVhdCI/OiBQcm9wZXJ0eS5NYXNrUmVwZWF0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXNrLXNpemVgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgc2l6ZXMgb2YgdGhlIG1hc2sgaW1hZ2VzLiBUaGUgc2l6ZSBvZiB0aGUgaW1hZ2UgY2FuIGJlIGZ1bGx5IG9yIHBhcnRpYWxseSBjb25zdHJhaW5lZCBpbiBvcmRlciB0byBwcmVzZXJ2ZSBpdHMgaW50cmluc2ljIHJhdGlvLgogICAqCiAgICogKipTeW50YXgqKjogYDxiZy1zaXplPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8ICAgQ2hyb21lICAgIHwgRmlyZWZveCB8ICAgU2FmYXJpICAgIHwgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLTogfCA6LS0tOiB8IDotOiB8CiAgICogfCAqKjQqKiBfLXgtXyB8ICoqNTMqKiAgfCAqKjQqKiBfLXgtXyB8IDE4LTc5IHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hc2stc2l6ZQogICAqLwogICJtYXNrLXNpemUiPzogUHJvcGVydHkuTWFza1NpemU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hc2stdHlwZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIGFuIFNWRyBgPG1hc2s+YCBlbGVtZW50IGlzIHVzZWQgYXMgYSBfbHVtaW5hbmNlXyBvciBhbiBfYWxwaGFfIG1hc2suIEl0IGFwcGxpZXMgdG8gdGhlIGA8bWFzaz5gIGVsZW1lbnQgaXRzZWxmLgogICAqCiAgICogKipTeW50YXgqKjogYGx1bWluYW5jZSB8IGFscGhhYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBsdW1pbmFuY2VgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjI0KiogfCAqKjM1KiogIHwgKio3KiogIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21hc2stdHlwZQogICAqLwogICJtYXNrLXR5cGUiPzogUHJvcGVydHkuTWFza1R5cGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGBtYXRoLXN0eWxlYCBwcm9wZXJ0ecKgaW5kaWNhdGVzIHdoZXRoZXIgTWF0aE1MIGVxdWF0aW9ucyBzaG91bGQgcmVuZGVyIHdpdGggbm9ybWFsIG9yIGNvbXBhY3QgaGVpZ2h0LgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IGNvbXBhY3RgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgRWRnZSB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS06IHwgOi06IHwKICAgKiB8ICBuL2EgICB8ICAgbi9hICAgfCAqKjE0LjEqKiB8ICBObyAgfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbWF0aC1zdHlsZQogICAqLwogICJtYXRoLXN0eWxlIj86IFByb3BlcnR5Lk1hdGhTdHlsZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYCoqbWF4LWJsb2NrLXNpemUqKmAgQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgbWF4aW11bSBzaXplIG9mIGFuIGVsZW1lbnQgaW4gdGhlIGRpcmVjdGlvbiBvcHBvc2l0ZSB0aGF0IG9mIHRoZSB3cml0aW5nIGRpcmVjdGlvbiBhcyBzcGVjaWZpZWQgYnkgYHdyaXRpbmctbW9kZWAuIFRoYXQgaXMsIGlmIHRoZSB3cml0aW5nIGRpcmVjdGlvbiBpcyBob3Jpem9udGFsLCB0aGVuIGBtYXgtYmxvY2stc2l6ZWAgaXMgZXF1aXZhbGVudCB0byBgbWF4LWhlaWdodGA7IGlmIHRoZSB3cml0aW5nIGRpcmVjdGlvbiBpcyB2ZXJ0aWNhbCwgYG1heC1ibG9jay1zaXplYCBpcyB0aGUgc2FtZSBhcyBgbWF4LXdpZHRoYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J21heC13aWR0aCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTcqKiB8ICoqNDEqKiAgfCAqKjEyLjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXgtYmxvY2stc2l6ZQogICAqLwogICJtYXgtYmxvY2stc2l6ZSI/OiBQcm9wZXJ0eS5NYXhCbG9ja1NpemU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1heC1oZWlnaHRgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG1heGltdW0gaGVpZ2h0IG9mIGFuIGVsZW1lbnQuIEl0IHByZXZlbnRzIHRoZSB1c2VkIHZhbHVlIG9mIHRoZSBgaGVpZ2h0YCBwcm9wZXJ0eSBmcm9tIGJlY29taW5nIGxhcmdlciB0aGFuIHRoZSB2YWx1ZSBzcGVjaWZpZWQgZm9yIGBtYXgtaGVpZ2h0YC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPGxlbmd0aC1wZXJjZW50YWdlPiB8IG1pbi1jb250ZW50IHwgbWF4LWNvbnRlbnQgfCBmaXQtY29udGVudCB8IGZpdC1jb250ZW50KDxsZW5ndGgtcGVyY2VudGFnZT4pYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxOCoqIHwgICoqMSoqICB8ICoqMS4zKiogfCAqKjEyKiogfCAqKjcqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXgtaGVpZ2h0CiAgICovCiAgIm1heC1oZWlnaHQiPzogUHJvcGVydHkuTWF4SGVpZ2h0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXgtaW5saW5lLXNpemVgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGhvcml6b250YWwgb3IgdmVydGljYWwgbWF4aW11bSBzaXplIG9mIGFuIGVsZW1lbnQncyBibG9jaywgZGVwZW5kaW5nIG9uIGl0cyB3cml0aW5nIG1vZGUuIEl0IGNvcnJlc3BvbmRzIHRvIGVpdGhlciB0aGUgYG1heC13aWR0aGAgb3IgdGhlIGBtYXgtaGVpZ2h0YCBwcm9wZXJ0eSwgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZSBvZiBgd3JpdGluZy1tb2RlYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J21heC13aWR0aCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgICBTYWZhcmkgICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjQxKiogIHwgICoqMTIuMSoqICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAgICAgICAgfCAgICAgICAgIHwgMTAuMSBfLXgtXyB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXgtaW5saW5lLXNpemUKICAgKi8KICAibWF4LWlubGluZS1zaXplIj86IFByb3BlcnR5Lk1heElubGluZVNpemU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8aW50ZWdlcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgIm1heC1saW5lcyI/OiBQcm9wZXJ0eS5NYXhMaW5lcyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWF4LXdpZHRoYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBtYXhpbXVtIHdpZHRoIG9mIGFuIGVsZW1lbnQuIEl0IHByZXZlbnRzIHRoZSB1c2VkIHZhbHVlIG9mIHRoZSBgd2lkdGhgIHByb3BlcnR5IGZyb20gYmVjb21pbmcgbGFyZ2VyIHRoYW4gdGhlIHZhbHVlIHNwZWNpZmllZCBieSBgbWF4LXdpZHRoYC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPGxlbmd0aC1wZXJjZW50YWdlPiB8IG1pbi1jb250ZW50IHwgbWF4LWNvbnRlbnQgfCBmaXQtY29udGVudCB8IGZpdC1jb250ZW50KDxsZW5ndGgtcGVyY2VudGFnZT4pYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjcqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXgtd2lkdGgKICAgKi8KICAibWF4LXdpZHRoIj86IFByb3BlcnR5Lk1heFdpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtaW4tYmxvY2stc2l6ZWAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbWluaW11bSBob3Jpem9udGFsIG9yIHZlcnRpY2FsIHNpemUgb2YgYW4gZWxlbWVudCdzIGJsb2NrLCBkZXBlbmRpbmcgb24gaXRzIHdyaXRpbmcgbW9kZS4gSXQgY29ycmVzcG9uZHMgdG8gZWl0aGVyIHRoZSBgbWluLXdpZHRoYCBvciB0aGUgYG1pbi1oZWlnaHRgIHByb3BlcnR5LCBkZXBlbmRpbmcgb24gdGhlIHZhbHVlIG9mIGB3cml0aW5nLW1vZGVgLgogICAqCiAgICogKipTeW50YXgqKjogYDwnbWluLXdpZHRoJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio1NyoqIHwgKio0MSoqICB8ICoqMTIuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21pbi1ibG9jay1zaXplCiAgICovCiAgIm1pbi1ibG9jay1zaXplIj86IFByb3BlcnR5Lk1pbkJsb2NrU2l6ZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWluLWhlaWdodGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbWluaW11bSBoZWlnaHQgb2YgYW4gZWxlbWVudC4gSXQgcHJldmVudHMgdGhlIHVzZWQgdmFsdWUgb2YgdGhlIGBoZWlnaHRgIHByb3BlcnR5IGZyb20gYmVjb21pbmcgc21hbGxlciB0aGFuIHRoZSB2YWx1ZSBzcGVjaWZpZWQgZm9yIGBtaW4taGVpZ2h0YC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPGxlbmd0aD4gfCA8cGVyY2VudGFnZT4gfCBtaW4tY29udGVudCB8IG1heC1jb250ZW50IHwgZml0LWNvbnRlbnQgfCBmaXQtY29udGVudCg8bGVuZ3RoLXBlcmNlbnRhZ2U+KWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjMqKiAgfCAqKjEuMyoqIHwgKioxMioqIHwgKio3KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbWluLWhlaWdodAogICAqLwogICJtaW4taGVpZ2h0Ij86IFByb3BlcnR5Lk1pbkhlaWdodDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWluLWlubGluZS1zaXplYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBob3Jpem9udGFsIG9yIHZlcnRpY2FsIG1pbmltYWwgc2l6ZSBvZiBhbiBlbGVtZW50J3MgYmxvY2ssIGRlcGVuZGluZyBvbiBpdHMgd3JpdGluZyBtb2RlLiBJdCBjb3JyZXNwb25kcyB0byBlaXRoZXIgdGhlIGBtaW4td2lkdGhgIG9yIHRoZSBgbWluLWhlaWdodGAgcHJvcGVydHksIGRlcGVuZGluZyBvbiB0aGUgdmFsdWUgb2YgYHdyaXRpbmctbW9kZWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdtaW4td2lkdGgnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjQxKiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbWluLWlubGluZS1zaXplCiAgICovCiAgIm1pbi1pbmxpbmUtc2l6ZSI/OiBQcm9wZXJ0eS5NaW5JbmxpbmVTaXplPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtaW4td2lkdGhgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG1pbmltdW0gd2lkdGggb2YgYW4gZWxlbWVudC4gSXQgcHJldmVudHMgdGhlIHVzZWQgdmFsdWUgb2YgdGhlIGB3aWR0aGAgcHJvcGVydHkgZnJvbSBiZWNvbWluZyBzbWFsbGVyIHRoYW4gdGhlIHZhbHVlIHNwZWNpZmllZCBmb3IgYG1pbi13aWR0aGAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IDxsZW5ndGg+IHwgPHBlcmNlbnRhZ2U+IHwgbWluLWNvbnRlbnQgfCBtYXgtY29udGVudCB8IGZpdC1jb250ZW50IHwgZml0LWNvbnRlbnQoPGxlbmd0aC1wZXJjZW50YWdlPilgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNyoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL21pbi13aWR0aAogICAqLwogICJtaW4td2lkdGgiPzogUHJvcGVydHkuTWluV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1peC1ibGVuZC1tb2RlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBhbiBlbGVtZW50J3MgY29udGVudCBzaG91bGQgYmxlbmQgd2l0aCB0aGUgY29udGVudCBvZiB0aGUgZWxlbWVudCdzIHBhcmVudCBhbmQgdGhlIGVsZW1lbnQncyBiYWNrZ3JvdW5kLgogICAqCiAgICogKipTeW50YXgqKjogYDxibGVuZC1tb2RlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio0MSoqIHwgKiozMioqICB8ICoqOCoqICB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9taXgtYmxlbmQtbW9kZQogICAqLwogICJtaXgtYmxlbmQtbW9kZSI/OiBQcm9wZXJ0eS5NaXhCbGVuZE1vZGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG9mZnNldC1kaXN0YW5jZWAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIGEgcG9zaXRpb24gYWxvbmcgYW4gYG9mZnNldC1wYXRoYCBmb3IgYW4gZWxlbWVudCB0byBiZSBwbGFjZWQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aC1wZXJjZW50YWdlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgICAgICAgICBDaHJvbWUgICAgICAgICB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgICAgICAgICAqKjU1KiogICAgICAgICB8ICoqNzIqKiAgfCAgIE5vICAgfCAqKjc5KiogfCBObyAgfAogICAqIHwgNDYgXyhtb3Rpb24tZGlzdGFuY2UpXyB8ICAgICAgICAgfCAgICAgICAgfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb2Zmc2V0LWRpc3RhbmNlCiAgICovCiAgIm1vdGlvbi1kaXN0YW5jZSI/OiBQcm9wZXJ0eS5PZmZzZXREaXN0YW5jZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb2Zmc2V0LXBhdGhgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyBhIG1vdGlvbiBwYXRoIGZvciBhbiBlbGVtZW50IHRvIGZvbGxvdyBhbmQgZGVmaW5lcyB0aGUgZWxlbWVudCdzIHBvc2l0aW9uaW5nIHdpdGhpbiB0aGUgcGFyZW50IGNvbnRhaW5lciBvciBTVkcgY29vcmRpbmF0ZSBzeXN0ZW0uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IHJheSggWyA8YW5nbGU+ICYmIDxzaXplPiAmJiBjb250YWluPyBdICkgfCA8cGF0aCgpPiB8IDx1cmw+IHwgWyA8YmFzaWMtc2hhcGU+IHx8IDxnZW9tZXRyeS1ib3g+IF1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8ICAgICAgIENocm9tZSAgICAgICB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAgICAgICAqKjU1KiogICAgICAgfCAqKjcyKiogIHwgICBObyAgIHwgKio3OSoqIHwgTm8gIHwKICAgKiB8IDQ2IF8obW90aW9uLXBhdGgpXyB8ICAgICAgICAgfCAgICAgICAgfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb2Zmc2V0LXBhdGgKICAgKi8KICAibW90aW9uLXBhdGgiPzogUHJvcGVydHkuT2Zmc2V0UGF0aCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb2Zmc2V0LXJvdGF0ZWAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgb3JpZW50YXRpb24vZGlyZWN0aW9uIG9mIHRoZSBlbGVtZW50IGFzIGl0IGlzIHBvc2l0aW9uZWQgYWxvbmcgdGhlIGBvZmZzZXQtcGF0aGAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyBhdXRvIHwgcmV2ZXJzZSBdIHx8IDxhbmdsZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8ICAgICAgICAgQ2hyb21lICAgICAgICAgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICAgICAgICAgKio1NioqICAgICAgICAgfCAqKjcyKiogIHwgICBObyAgIHwgKio3OSoqIHwgTm8gIHwKICAgKiB8IDQ2IF8obW90aW9uLXJvdGF0aW9uKV8gfCAgICAgICAgIHwgICAgICAgIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL29mZnNldC1yb3RhdGUKICAgKi8KICAibW90aW9uLXJvdGF0aW9uIj86IFByb3BlcnR5Lk9mZnNldFJvdGF0ZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb2JqZWN0LWZpdGAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgdGhlIGNvbnRlbnQgb2YgYSByZXBsYWNlZCBlbGVtZW50LCBzdWNoIGFzIGFuIGA8aW1nPmAgb3IgYDx2aWRlbz5gLCBzaG91bGQgYmUgcmVzaXplZCB0byBmaXQgaXRzIGNvbnRhaW5lci4KICAgKgogICAqICoqU3ludGF4Kio6IGBmaWxsIHwgY29udGFpbiB8IGNvdmVyIHwgbm9uZSB8IHNjYWxlLWRvd25gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGZpbGxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjMyKiogfCAqKjM2KiogIHwgKioxMCoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL29iamVjdC1maXQKICAgKi8KICAib2JqZWN0LWZpdCI/OiBQcm9wZXJ0eS5PYmplY3RGaXQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG9iamVjdC1wb3NpdGlvbmAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHRoZSBhbGlnbm1lbnQgb2YgdGhlIHNlbGVjdGVkIHJlcGxhY2VkIGVsZW1lbnQncyBjb250ZW50cyB3aXRoaW4gdGhlIGVsZW1lbnQncyBib3guIEFyZWFzIG9mIHRoZSBib3ggd2hpY2ggYXJlbid0IGNvdmVyZWQgYnkgdGhlIHJlcGxhY2VkIGVsZW1lbnQncyBvYmplY3Qgd2lsbCBzaG93IHRoZSBlbGVtZW50J3MgYmFja2dyb3VuZC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8cG9zaXRpb24+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGA1MCUgNTAlYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKiozMioqIHwgKiozNioqICB8ICoqMTAqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9vYmplY3QtcG9zaXRpb24KICAgKi8KICAib2JqZWN0LXBvc2l0aW9uIj86IFByb3BlcnR5Lk9iamVjdFBvc2l0aW9uPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPHBvc2l0aW9uPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNzkqKiB8ICoqNzIqKiAgfCAgIE5vICAgfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb2Zmc2V0LWFuY2hvcgogICAqLwogICJvZmZzZXQtYW5jaG9yIj86IFByb3BlcnR5Lk9mZnNldEFuY2hvcjxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb2Zmc2V0LWRpc3RhbmNlYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgYSBwb3NpdGlvbiBhbG9uZyBhbiBgb2Zmc2V0LXBhdGhgIGZvciBhbiBlbGVtZW50IHRvIGJlIHBsYWNlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoLXBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCAgICAgICAgIENocm9tZSAgICAgICAgIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAgICAgICAgICoqNTUqKiAgICAgICAgIHwgKio3MioqICB8ICAgTm8gICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCA0NiBfKG1vdGlvbi1kaXN0YW5jZSlfIHwgICAgICAgICB8ICAgICAgICB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9vZmZzZXQtZGlzdGFuY2UKICAgKi8KICAib2Zmc2V0LWRpc3RhbmNlIj86IFByb3BlcnR5Lk9mZnNldERpc3RhbmNlPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvZmZzZXQtcGF0aGAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIGEgbW90aW9uIHBhdGggZm9yIGFuIGVsZW1lbnQgdG8gZm9sbG93IGFuZCBkZWZpbmVzIHRoZSBlbGVtZW50J3MgcG9zaXRpb25pbmcgd2l0aGluIHRoZSBwYXJlbnQgY29udGFpbmVyIG9yIFNWRyBjb29yZGluYXRlIHN5c3RlbS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgcmF5KCBbIDxhbmdsZT4gJiYgPHNpemU+ICYmIGNvbnRhaW4/IF0gKSB8IDxwYXRoKCk+IHwgPHVybD4gfCBbIDxiYXNpYy1zaGFwZT4gfHwgPGdlb21ldHJ5LWJveD4gXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgICAgICAgQ2hyb21lICAgICAgIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICAgICAgICoqNTUqKiAgICAgICB8ICoqNzIqKiAgfCAgIE5vICAgfCAqKjc5KiogfCBObyAgfAogICAqIHwgNDYgXyhtb3Rpb24tcGF0aClfIHwgICAgICAgICB8ICAgICAgICB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9vZmZzZXQtcGF0aAogICAqLwogICJvZmZzZXQtcGF0aCI/OiBQcm9wZXJ0eS5PZmZzZXRQYXRoIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvZmZzZXQtcm90YXRlYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBvcmllbnRhdGlvbi9kaXJlY3Rpb24gb2YgdGhlIGVsZW1lbnQgYXMgaXQgaXMgcG9zaXRpb25lZCBhbG9uZyB0aGUgYG9mZnNldC1wYXRoYC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIGF1dG8gfCByZXZlcnNlIF0gfHwgPGFuZ2xlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgICAgICAgICBDaHJvbWUgICAgICAgICB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgICAgICAgICAqKjU2KiogICAgICAgICB8ICoqNzIqKiAgfCAgIE5vICAgfCAqKjc5KiogfCBObyAgfAogICAqIHwgNDYgXyhtb3Rpb24tcm90YXRpb24pXyB8ICAgICAgICAgfCAgICAgICAgfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb2Zmc2V0LXJvdGF0ZQogICAqLwogICJvZmZzZXQtcm90YXRlIj86IFByb3BlcnR5Lk9mZnNldFJvdGF0ZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb2Zmc2V0LXJvdGF0ZWAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgb3JpZW50YXRpb24vZGlyZWN0aW9uIG9mIHRoZSBlbGVtZW50IGFzIGl0IGlzIHBvc2l0aW9uZWQgYWxvbmcgdGhlIGBvZmZzZXQtcGF0aGAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyBhdXRvIHwgcmV2ZXJzZSBdIHx8IDxhbmdsZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8ICAgICAgICAgQ2hyb21lICAgICAgICAgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICAgICAgICAgKio1NioqICAgICAgICAgfCAqKjcyKiogIHwgICBObyAgIHwgKio3OSoqIHwgTm8gIHwKICAgKiB8IDQ2IF8obW90aW9uLXJvdGF0aW9uKV8gfCAgICAgICAgIHwgICAgICAgIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL29mZnNldC1yb3RhdGUKICAgKi8KICAib2Zmc2V0LXJvdGF0aW9uIj86IFByb3BlcnR5Lk9mZnNldFJvdGF0ZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3BhY2l0eWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgb3BhY2l0eSBvZiBhbiBlbGVtZW50LiBPcGFjaXR5IGlzIHRoZSBkZWdyZWUgdG8gd2hpY2ggY29udGVudCBiZWhpbmQgYW4gZWxlbWVudCBpcyBoaWRkZW4sIGFuZCBpcyB0aGUgb3Bwb3NpdGUgb2YgdHJhbnNwYXJlbmN5LgogICAqCiAgICogKipTeW50YXgqKjogYDxhbHBoYS12YWx1ZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDEuMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioyKiogIHwgKioxMioqIHwgKio5KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb3BhY2l0eQogICAqLwogIG9wYWNpdHk/OiBQcm9wZXJ0eS5PcGFjaXR5IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvcmRlcmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgb3JkZXIgdG8gbGF5IG91dCBhbiBpdGVtIGluIGEgZmxleCBvciBncmlkIGNvbnRhaW5lci4gSXRlbXMgaW4gYSBjb250YWluZXIgYXJlIHNvcnRlZCBieSBhc2NlbmRpbmcgYG9yZGVyYCB2YWx1ZSBhbmQgdGhlbiBieSB0aGVpciBzb3VyY2UgY29kZSBvcmRlci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8aW50ZWdlcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8ICBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgICBJRSAgICB8CiAgICogfCA6LS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS0tLTogfAogICAqIHwgICoqMjkqKiAgfCAqKjIwKiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICAqKjExKiogIHwKICAgKiB8IDIxIF8teC1fIHwgICAgICAgICB8IDcgXy14LV8gfCAgICAgICAgfCAxMCBfLXgtXyB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9vcmRlcgogICAqLwogIG9yZGVyPzogUHJvcGVydHkuT3JkZXIgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG9ycGhhbnNgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG1pbmltdW0gbnVtYmVyIG9mIGxpbmVzIGluIGEgYmxvY2sgY29udGFpbmVyIHRoYXQgbXVzdCBiZSBzaG93biBhdCB0aGUgX2JvdHRvbV8gb2YgYSBwYWdlLCByZWdpb24sIG9yIGNvbHVtbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8aW50ZWdlcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDJgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjI1KiogfCAgIE5vICAgIHwgKioxLjMqKiB8ICoqMTIqKiB8ICoqOCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL29ycGhhbnMKICAgKi8KICBvcnBoYW5zPzogUHJvcGVydHkuT3JwaGFucyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3V0bGluZS1jb2xvcmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgY29sb3Igb2YgYW4gZWxlbWVudCdzIG91dGxpbmUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGNvbG9yPiB8IGludmVydGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgaW52ZXJ0YCwgZm9yIGJyb3dzZXJzIHN1cHBvcnRpbmcgaXQsIGBjdXJyZW50Q29sb3JgIGZvciB0aGUgb3RoZXIKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICoqMS41KiogfCAqKjEuMioqIHwgKioxMioqIHwgKio4KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb3V0bGluZS1jb2xvcgogICAqLwogICJvdXRsaW5lLWNvbG9yIj86IFByb3BlcnR5Lk91dGxpbmVDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3V0bGluZS1vZmZzZXRgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGFtb3VudCBvZiBzcGFjZSBiZXR3ZWVuIGFuIG91dGxpbmUgYW5kIHRoZSBlZGdlIG9yIGJvcmRlciBvZiBhbiBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjEqKiAgfCAqKjEuNSoqIHwgKioxLjIqKiB8ICoqMTUqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9vdXRsaW5lLW9mZnNldAogICAqLwogICJvdXRsaW5lLW9mZnNldCI/OiBQcm9wZXJ0eS5PdXRsaW5lT2Zmc2V0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvdXRsaW5lLXN0eWxlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBzdHlsZSBvZiBhbiBlbGVtZW50J3Mgb3V0bGluZS4gQW4gb3V0bGluZSBpcyBhIGxpbmUgdGhhdCBpcyBkcmF3biBhcm91bmQgYW4gZWxlbWVudCwgb3V0c2lkZSB0aGUgYGJvcmRlcmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IDwnYm9yZGVyLXN0eWxlJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAqKjEuNSoqIHwgKioxLjIqKiB8ICoqMTIqKiB8ICoqOCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL291dGxpbmUtc3R5bGUKICAgKi8KICAib3V0bGluZS1zdHlsZSI/OiBQcm9wZXJ0eS5PdXRsaW5lU3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIENTUyAqKmBvdXRsaW5lLXdpZHRoYCoqIHByb3BlcnR5IHNldHMgdGhlIHRoaWNrbmVzcyBvZiBhbiBlbGVtZW50J3Mgb3V0bGluZS4gQW4gb3V0bGluZSBpcyBhIGxpbmUgdGhhdCBpcyBkcmF3biBhcm91bmQgYW4gZWxlbWVudCwgb3V0c2lkZSB0aGUgYGJvcmRlcmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxpbmUtd2lkdGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBtZWRpdW1gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAqKjEuNSoqIHwgKioxLjIqKiB8ICoqMTIqKiB8ICoqOCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL291dGxpbmUtd2lkdGgKICAgKi8KICAib3V0bGluZS13aWR0aCI/OiBQcm9wZXJ0eS5PdXRsaW5lV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio1NioqIHwgKio2NioqICB8ICAgTm8gICB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9vdmVyZmxvdy1hbmNob3IKICAgKi8KICAib3ZlcmZsb3ctYW5jaG9yIj86IFByb3BlcnR5Lk92ZXJmbG93QW5jaG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqICoqU3ludGF4Kio6IGB2aXNpYmxlIHwgaGlkZGVuIHwgY2xpcCB8IHNjcm9sbCB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCBFZGdlIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS06IHwgOi06IHwKICAgKiB8ICAgTm8gICB8ICoqNjkqKiAgfCAgIE5vICAgfCAgTm8gIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL292ZXJmbG93LWJsb2NrCiAgICovCiAgIm92ZXJmbG93LWJsb2NrIj86IFByb3BlcnR5Lk92ZXJmbG93QmxvY2sgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG92ZXJmbG93LWNsaXAtYm94YCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgcmVsYXRpdmUgdG8gd2hpY2ggYm94IHRoZSBjbGlwcGluZyBoYXBwZW5zIHdoZW4gdGhlcmUgaXMgYW4gb3ZlcmZsb3cuIEl0IGlzIHNob3J0IGhhbmQgZm9yIHRoZSBgb3ZlcmZsb3ctY2xpcC1ib3gtaW5saW5lYCBhbmQgYG92ZXJmbG93LWNsaXAtYm94LWJsb2NrYCBwcm9wZXJ0aWVzLgogICAqCiAgICogKipTeW50YXgqKjogYHBhZGRpbmctYm94IHwgY29udGVudC1ib3hgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHBhZGRpbmctYm94YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgRWRnZSB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tOiB8IDotOiB8CiAgICogfCAgIE5vICAgfCAqKjI5KiogIHwgICBObyAgIHwgIE5vICB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvTW96aWxsYS9HZWNrby9DaHJvbWUvQ1NTL292ZXJmbG93LWNsaXAtYm94CiAgICovCiAgIm92ZXJmbG93LWNsaXAtYm94Ij86IFByb3BlcnR5Lk92ZXJmbG93Q2xpcEJveCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiAqKlN5bnRheCoqOiBgPHZpc3VhbC1ib3g+IHx8IDxsZW5ndGggWzAs4oieXT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBweGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqOTAqKiB8ICAgTm8gICAgfCAgIE5vICAgfCAqKjkwKiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb3ZlcmZsb3ctY2xpcC1tYXJnaW4KICAgKi8KICAib3ZlcmZsb3ctY2xpcC1tYXJnaW4iPzogUHJvcGVydHkuT3ZlcmZsb3dDbGlwTWFyZ2luPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqICoqU3ludGF4Kio6IGB2aXNpYmxlIHwgaGlkZGVuIHwgY2xpcCB8IHNjcm9sbCB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCBFZGdlIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS06IHwgOi06IHwKICAgKiB8ICAgTm8gICB8ICoqNjkqKiAgfCAgIE5vICAgfCAgTm8gIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL292ZXJmbG93LWlubGluZQogICAqLwogICJvdmVyZmxvdy1pbmxpbmUiPzogUHJvcGVydHkuT3ZlcmZsb3dJbmxpbmUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKm92ZXJmbG93LXdyYXAqKmAgQ1NTIHByb3BlcnR5IGFwcGxpZXMgdG8gaW5saW5lIGVsZW1lbnRzLCBzZXR0aW5nIHdoZXRoZXIgdGhlIGJyb3dzZXIgc2hvdWxkIGluc2VydCBsaW5lIGJyZWFrcyB3aXRoaW4gYW4gb3RoZXJ3aXNlIHVuYnJlYWthYmxlIHN0cmluZyB0byBwcmV2ZW50IHRleHQgZnJvbSBvdmVyZmxvd2luZyBpdHMgbGluZSBib3guCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgYnJlYWstd29yZCB8IGFueXdoZXJlYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8ICAgICBDaHJvbWUgICAgICB8ICAgICAgRmlyZWZveCAgICAgIHwgICAgIFNhZmFyaSAgICAgIHwgICAgICAgRWRnZSAgICAgICB8ICAgICAgICAgIElFICAgICAgICAgICB8CiAgICogfCA6LS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLTogfAogICAqIHwgICAgICoqMjMqKiAgICAgIHwgICAgICAqKjQ5KiogICAgICAgfCAgICAgICoqNyoqICAgICAgfCAgICAgICoqMTgqKiAgICAgIHwgKio1LjUqKiBfKHdvcmQtd3JhcClfIHwKICAgKiB8IDEgXyh3b3JkLXdyYXApXyB8IDMuNSBfKHdvcmQtd3JhcClfIHwgMSBfKHdvcmQtd3JhcClfIHwgMTIgXyh3b3JkLXdyYXApXyB8ICAgICAgICAgICAgICAgICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9vdmVyZmxvdy13cmFwCiAgICovCiAgIm92ZXJmbG93LXdyYXAiPzogUHJvcGVydHkuT3ZlcmZsb3dXcmFwIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvdmVyZmxvdy14YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoYXQgc2hvd3Mgd2hlbiBjb250ZW50IG92ZXJmbG93cyBhIGJsb2NrLWxldmVsIGVsZW1lbnQncyBsZWZ0IGFuZCByaWdodCBlZGdlcy4gVGhpcyBtYXkgYmUgbm90aGluZywgYSBzY3JvbGwgYmFyLCBvciB0aGUgb3ZlcmZsb3cgY29udGVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGB2aXNpYmxlIHwgaGlkZGVuIHwgY2xpcCB8IHNjcm9sbCB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHZpc2libGVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgKiozLjUqKiB8ICoqMyoqICB8ICoqMTIqKiB8ICoqNSoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL292ZXJmbG93LXgKICAgKi8KICAib3ZlcmZsb3cteCI/OiBQcm9wZXJ0eS5PdmVyZmxvd1ggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG92ZXJmbG93LXlgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hhdCBzaG93cyB3aGVuIGNvbnRlbnQgb3ZlcmZsb3dzIGEgYmxvY2stbGV2ZWwgZWxlbWVudCdzIHRvcCBhbmQgYm90dG9tIGVkZ2VzLiBUaGlzIG1heSBiZSBub3RoaW5nLCBhIHNjcm9sbCBiYXIsIG9yIHRoZSBvdmVyZmxvdyBjb250ZW50LgogICAqCiAgICogKipTeW50YXgqKjogYHZpc2libGUgfCBoaWRkZW4gfCBjbGlwIHwgc2Nyb2xsIHwgYXV0b2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgdmlzaWJsZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAqKjMuNSoqIHwgKiozKiogIHwgKioxMioqIHwgKio1KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvb3ZlcmZsb3cteQogICAqLwogICJvdmVyZmxvdy15Ij86IFByb3BlcnR5Lk92ZXJmbG93WSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3ZlcnNjcm9sbC1iZWhhdmlvci1ibG9ja2AqKsKgQ1NTIHByb3BlcnR5IHNldHMgdGhlIGJyb3dzZXIncyBiZWhhdmlvciB3aGVuIHRoZSBibG9jayBkaXJlY3Rpb27CoGJvdW5kYXJ5IG9mIGEgc2Nyb2xsaW5nIGFyZWEgaXMgcmVhY2hlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBjb250YWluIHwgbm9uZSB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjc3KiogfCAqKjczKiogIHwgICBObyAgIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL292ZXJzY3JvbGwtYmVoYXZpb3ItYmxvY2sKICAgKi8KICAib3ZlcnNjcm9sbC1iZWhhdmlvci1ibG9jayI/OiBQcm9wZXJ0eS5PdmVyc2Nyb2xsQmVoYXZpb3JCbG9jayB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3ZlcnNjcm9sbC1iZWhhdmlvci1pbmxpbmVgKirCoENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBicm93c2VyJ3MgYmVoYXZpb3Igd2hlbiB0aGUgaW5saW5lwqBkaXJlY3Rpb27CoGJvdW5kYXJ5IG9mIGEgc2Nyb2xsaW5nIGFyZWEgaXMgcmVhY2hlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBjb250YWluIHwgbm9uZSB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjc3KiogfCAqKjczKiogIHwgICBObyAgIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL292ZXJzY3JvbGwtYmVoYXZpb3ItaW5saW5lCiAgICovCiAgIm92ZXJzY3JvbGwtYmVoYXZpb3ItaW5saW5lIj86IFByb3BlcnR5Lk92ZXJzY3JvbGxCZWhhdmlvcklubGluZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3ZlcnNjcm9sbC1iZWhhdmlvci14YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBicm93c2VyJ3MgYmVoYXZpb3Igd2hlbiB0aGUgaG9yaXpvbnRhbCBib3VuZGFyeSBvZiBhIHNjcm9sbGluZyBhcmVhIGlzIHJlYWNoZWQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgY29udGFpbiB8IG5vbmUgfCBhdXRvYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2MyoqIHwgKio1OSoqICB8ICAgTm8gICB8ICoqMTgqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9vdmVyc2Nyb2xsLWJlaGF2aW9yLXgKICAgKi8KICAib3ZlcnNjcm9sbC1iZWhhdmlvci14Ij86IFByb3BlcnR5Lk92ZXJzY3JvbGxCZWhhdmlvclggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG92ZXJzY3JvbGwtYmVoYXZpb3IteWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgYnJvd3NlcidzIGJlaGF2aW9yIHdoZW4gdGhlIHZlcnRpY2FsIGJvdW5kYXJ5IG9mIGEgc2Nyb2xsaW5nIGFyZWEgaXMgcmVhY2hlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBjb250YWluIHwgbm9uZSB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjYzKiogfCAqKjU5KiogIHwgICBObyAgIHwgKioxOCoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL292ZXJzY3JvbGwtYmVoYXZpb3IteQogICAqLwogICJvdmVyc2Nyb2xsLWJlaGF2aW9yLXkiPzogUHJvcGVydHkuT3ZlcnNjcm9sbEJlaGF2aW9yWSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgcGFkZGluZy1ibG9ja2AqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgYmxvY2sgc3RhcnQgYW5kIGVuZCBwYWRkaW5nIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gcGh5c2ljYWwgcGFkZGluZyBwcm9wZXJ0aWVzIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYDwncGFkZGluZy1sZWZ0Jz57MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg3KiogfCAqKjY2KiogIHwgKioxNC4xKiogfCAqKjg3KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvcGFkZGluZy1ibG9jawogICAqLwogICJwYWRkaW5nLWJsb2NrIj86IFByb3BlcnR5LlBhZGRpbmdCbG9jazxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgcGFkZGluZy1ibG9jay1lbmRgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgYmxvY2sgZW5kIHBhZGRpbmcgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIHBhZGRpbmcgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdwYWRkaW5nLWxlZnQnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjQxKiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvcGFkZGluZy1ibG9jay1lbmQKICAgKi8KICAicGFkZGluZy1ibG9jay1lbmQiPzogUHJvcGVydHkuUGFkZGluZ0Jsb2NrRW5kPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwYWRkaW5nLWJsb2NrLXN0YXJ0YCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIGJsb2NrIHN0YXJ0IHBhZGRpbmcgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIHBhZGRpbmcgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdwYWRkaW5nLWxlZnQnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjQxKiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvcGFkZGluZy1ibG9jay1zdGFydAogICAqLwogICJwYWRkaW5nLWJsb2NrLXN0YXJ0Ij86IFByb3BlcnR5LlBhZGRpbmdCbG9ja1N0YXJ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwYWRkaW5nLWJvdHRvbWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgaGVpZ2h0IG9mIHRoZSBwYWRkaW5nIGFyZWEgb24gdGhlIGJvdHRvbSBvZiBhbiBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+IHwgPHBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9wYWRkaW5nLWJvdHRvbQogICAqLwogICJwYWRkaW5nLWJvdHRvbSI/OiBQcm9wZXJ0eS5QYWRkaW5nQm90dG9tPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwYWRkaW5nLWlubGluZWAqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgaW5saW5lIHN0YXJ0IGFuZCBlbmQgcGFkZGluZyBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIHBoeXNpY2FsIHBhZGRpbmcgcHJvcGVydGllcyBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3BhZGRpbmctbGVmdCc+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4NyoqIHwgKio2NioqICB8ICoqMTQuMSoqIHwgKio4NyoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3BhZGRpbmctaW5saW5lCiAgICovCiAgInBhZGRpbmctaW5saW5lIj86IFByb3BlcnR5LlBhZGRpbmdJbmxpbmU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHBhZGRpbmctaW5saW5lLWVuZGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBpbmxpbmUgZW5kIHBhZGRpbmcgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIHBhZGRpbmcgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdwYWRkaW5nLWxlZnQnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgICAgICAgICAgQ2hyb21lICAgICAgICAgICB8ICAgICAgICBGaXJlZm94ICAgICAgICAgfCAgICAgICAgICBTYWZhcmkgICAgICAgICAgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAgICAgICAgICAqKjY5KiogICAgICAgICAgIHwgICAgICAgICAqKjQxKiogICAgICAgICB8ICAgICAgICAgKioxMi4xKiogICAgICAgICAgfCAqKjc5KiogfCBObyAgfAogICAqIHwgMiBfKC13ZWJraXQtcGFkZGluZy1lbmQpXyB8IDMgXygtbW96LXBhZGRpbmctZW5kKV8gfCAzIF8oLXdlYmtpdC1wYWRkaW5nLWVuZClfIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3BhZGRpbmctaW5saW5lLWVuZAogICAqLwogICJwYWRkaW5nLWlubGluZS1lbmQiPzogUHJvcGVydHkuUGFkZGluZ0lubGluZUVuZDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgcGFkZGluZy1pbmxpbmUtc3RhcnRgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgaW5saW5lIHN0YXJ0IHBhZGRpbmcgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIHBhZGRpbmcgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdwYWRkaW5nLWxlZnQnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgICAgICAgICAgIENocm9tZSAgICAgICAgICAgIHwgICAgICAgICBGaXJlZm94ICAgICAgICAgIHwgICAgICAgICAgIFNhZmFyaSAgICAgICAgICAgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAgICAgICAgICAgKio2OSoqICAgICAgICAgICAgfCAgICAgICAgICAqKjQxKiogICAgICAgICAgfCAgICAgICAgICAqKjEyLjEqKiAgICAgICAgICAgfCAqKjc5KiogfCBObyAgfAogICAqIHwgMiBfKC13ZWJraXQtcGFkZGluZy1zdGFydClfIHwgMyBfKC1tb3otcGFkZGluZy1zdGFydClfIHwgMyBfKC13ZWJraXQtcGFkZGluZy1zdGFydClfIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3BhZGRpbmctaW5saW5lLXN0YXJ0CiAgICovCiAgInBhZGRpbmctaW5saW5lLXN0YXJ0Ij86IFByb3BlcnR5LlBhZGRpbmdJbmxpbmVTdGFydDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgcGFkZGluZy1sZWZ0YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSB3aWR0aCBvZiB0aGUgcGFkZGluZyBhcmVhIHRvIHRoZSBsZWZ0IG9mIGFuIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD4gfCA8cGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3BhZGRpbmctbGVmdAogICAqLwogICJwYWRkaW5nLWxlZnQiPzogUHJvcGVydHkuUGFkZGluZ0xlZnQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHBhZGRpbmctcmlnaHRgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHdpZHRoIG9mIHRoZSBwYWRkaW5nIGFyZWEgb24gdGhlIHJpZ2h0IG9mIGFuIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD4gfCA8cGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3BhZGRpbmctcmlnaHQKICAgKi8KICAicGFkZGluZy1yaWdodCI/OiBQcm9wZXJ0eS5QYWRkaW5nUmlnaHQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHBhZGRpbmctdG9wYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBoZWlnaHQgb2YgdGhlIHBhZGRpbmcgYXJlYSBvbiB0aGUgdG9wIG9mIGFuIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD4gfCA8cGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3BhZGRpbmctdG9wCiAgICovCiAgInBhZGRpbmctdG9wIj86IFByb3BlcnR5LlBhZGRpbmdUb3A8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHBhZ2UtYnJlYWstYWZ0ZXJgKiogQ1NTIHByb3BlcnR5IGFkanVzdHMgcGFnZSBicmVha3MgX2FmdGVyXyB0aGUgY3VycmVudCBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBhbHdheXMgfCBhdm9pZCB8IGxlZnQgfCByaWdodCB8IHJlY3RvIHwgdmVyc29gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxLjIqKiB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3BhZ2UtYnJlYWstYWZ0ZXIKICAgKi8KICAicGFnZS1icmVhay1hZnRlciI/OiBQcm9wZXJ0eS5QYWdlQnJlYWtBZnRlciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgcGFnZS1icmVhay1iZWZvcmVgKiogQ1NTIHByb3BlcnR5IGFkanVzdHMgcGFnZSBicmVha3MgX2JlZm9yZV8gdGhlIGN1cnJlbnQgZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgYWx3YXlzIHwgYXZvaWQgfCBsZWZ0IHwgcmlnaHQgfCByZWN0byB8IHZlcnNvYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMS4yKiogfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9wYWdlLWJyZWFrLWJlZm9yZQogICAqLwogICJwYWdlLWJyZWFrLWJlZm9yZSI/OiBQcm9wZXJ0eS5QYWdlQnJlYWtCZWZvcmUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHBhZ2UtYnJlYWstaW5zaWRlYCoqIENTUyBwcm9wZXJ0eSBhZGp1c3RzIHBhZ2UgYnJlYWtzIF9pbnNpZGVfIHRoZSBjdXJyZW50IGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IGF2b2lkYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgKioxOSoqICB8ICoqMS4zKiogfCAqKjEyKiogfCAqKjgqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9wYWdlLWJyZWFrLWluc2lkZQogICAqLwogICJwYWdlLWJyZWFrLWluc2lkZSI/OiBQcm9wZXJ0eS5QYWdlQnJlYWtJbnNpZGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHBhaW50LW9yZGVyYCoqIENTUyBwcm9wZXJ0eSBsZXRzIHlvdSBjb250cm9sIHRoZSBvcmRlciBpbiB3aGljaCB0aGUgZmlsbCBhbmQgc3Ryb2tlIChhbmQgcGFpbnRpbmcgbWFya2Vycykgb2YgdGV4dCBjb250ZW50IGFuZCBzaGFwZXMgYXJlIGRyYXduLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IFsgZmlsbCB8fCBzdHJva2UgfHwgbWFya2VycyBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjM1KiogfCAqKjYwKiogIHwgKio4KiogIHwgKioxNyoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3BhaW50LW9yZGVyCiAgICovCiAgInBhaW50LW9yZGVyIj86IFByb3BlcnR5LlBhaW50T3JkZXIgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHBlcnNwZWN0aXZlYCoqIENTUyBwcm9wZXJ0eSBkZXRlcm1pbmVzIHRoZSBkaXN0YW5jZSBiZXR3ZWVuIHRoZSB6PTAgcGxhbmUgYW5kIHRoZSB1c2VyIGluIG9yZGVyIHRvIGdpdmUgYSAzRC1wb3NpdGlvbmVkIGVsZW1lbnQgc29tZSBwZXJzcGVjdGl2ZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8ICBDaHJvbWUgIHwgRmlyZWZveCAgfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICAqKjM2KiogIHwgICoqMTYqKiAgfCAgKio5KiogIHwgKioxMioqIHwgKioxMCoqIHwKICAgKiB8IDEyIF8teC1fIHwgMTAgXy14LV8gfCA0IF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3BlcnNwZWN0aXZlCiAgICovCiAgcGVyc3BlY3RpdmU/OiBQcm9wZXJ0eS5QZXJzcGVjdGl2ZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgcGVyc3BlY3RpdmUtb3JpZ2luYCoqIENTUyBwcm9wZXJ0eSBkZXRlcm1pbmVzIHRoZSBwb3NpdGlvbiBhdCB3aGljaCB0aGUgdmlld2VyIGlzIGxvb2tpbmcuIEl0IGlzIHVzZWQgYXMgdGhlIF92YW5pc2hpbmcgcG9pbnRfIGJ5IHRoZSBgcGVyc3BlY3RpdmVgIHByb3BlcnR5LgogICAqCiAgICogKipTeW50YXgqKjogYDxwb3NpdGlvbj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDUwJSA1MCVgCiAgICoKICAgKiB8ICBDaHJvbWUgIHwgRmlyZWZveCAgfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICAqKjM2KiogIHwgICoqMTYqKiAgfCAgKio5KiogIHwgKioxMioqIHwgKioxMCoqIHwKICAgKiB8IDEyIF8teC1fIHwgMTAgXy14LV8gfCA0IF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3BlcnNwZWN0aXZlLW9yaWdpbgogICAqLwogICJwZXJzcGVjdGl2ZS1vcmlnaW4iPzogUHJvcGVydHkuUGVyc3BlY3RpdmVPcmlnaW48VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKnBsYWNlLWNvbnRlbnQqKmAgQ1NTIHNob3J0aGFuZCBwcm9wZXJ0eSBhbGxvd3MgeW91IHRvIGFsaWduIGNvbnRlbnQgYWxvbmcgYm90aCB0aGUgYmxvY2sgYW5kIGlubGluZSBkaXJlY3Rpb25zIGF0IG9uY2UgKGkuZS4gdGhlIGBhbGlnbi1jb250ZW50YCBhbmQgYGp1c3RpZnktY29udGVudGAgcHJvcGVydGllcykgaW4gYSByZWxldmFudCBsYXlvdXQgc3lzdGVtIHN1Y2ggYXMgR3JpZCBvciBGbGV4Ym94LgogICAqCiAgICogKipTeW50YXgqKjogYDwnYWxpZ24tY29udGVudCc+IDwnanVzdGlmeS1jb250ZW50Jz4/YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU5KiogfCAqKjQ1KiogIHwgKio5KiogIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3BsYWNlLWNvbnRlbnQKICAgKi8KICAicGxhY2UtY29udGVudCI/OiBQcm9wZXJ0eS5QbGFjZUNvbnRlbnQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHBvaW50ZXItZXZlbnRzYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHVuZGVyIHdoYXQgY2lyY3Vtc3RhbmNlcyAoaWYgYW55KSBhIHBhcnRpY3VsYXIgZ3JhcGhpYyBlbGVtZW50IGNhbiBiZWNvbWUgdGhlIHRhcmdldCBvZiBwb2ludGVyIGV2ZW50cy4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgbm9uZSB8IHZpc2libGVQYWludGVkIHwgdmlzaWJsZUZpbGwgfCB2aXNpYmxlU3Ryb2tlIHwgdmlzaWJsZSB8IHBhaW50ZWQgfCBmaWxsIHwgc3Ryb2tlIHwgYWxsIHwgaW5oZXJpdGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqMSoqICB8ICoqMS41KiogfCAqKjQqKiAgfCAqKjEyKiogfCAqKjExKiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvcG9pbnRlci1ldmVudHMKICAgKi8KICAicG9pbnRlci1ldmVudHMiPzogUHJvcGVydHkuUG9pbnRlckV2ZW50cyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgcG9zaXRpb25gKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IGFuIGVsZW1lbnQgaXMgcG9zaXRpb25lZCBpbiBhIGRvY3VtZW50LiBUaGUgYHRvcGAsIGByaWdodGAsIGBib3R0b21gLCBhbmQgYGxlZnRgIHByb3BlcnRpZXMgZGV0ZXJtaW5lIHRoZSBmaW5hbCBsb2NhdGlvbiBvZiBwb3NpdGlvbmVkIGVsZW1lbnRzLgogICAqCiAgICogKipTeW50YXgqKjogYHN0YXRpYyB8IHJlbGF0aXZlIHwgYWJzb2x1dGUgfCBzdGlja3kgfCBmaXhlZGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc3RhdGljYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9wb3NpdGlvbgogICAqLwogIHBvc2l0aW9uPzogUHJvcGVydHkuUG9zaXRpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHF1b3Rlc2AqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgdGhlIGJyb3dzZXIgc2hvdWxkIHJlbmRlciBxdW90YXRpb24gbWFya3MgdGhhdCBhcmUgYWRkZWQgdXNpbmcgdGhlIGBvcGVuLXF1b3Rlc2Agb3IgYGNsb3NlLXF1b3Rlc2AgdmFsdWVzIG9mIHRoZSBDU1MgYGNvbnRlbnRgIHByb3BlcnR5LgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBhdXRvIHwgWyA8c3RyaW5nPiA8c3RyaW5nPiBdK2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBkZXBlbmRzIG9uIHVzZXIgYWdlbnQKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjExKiogfCAqKjEuNSoqIHwgKio5KiogIHwgKioxMioqIHwgKio4KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvcXVvdGVzCiAgICovCiAgcXVvdGVzPzogUHJvcGVydHkuUXVvdGVzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmByZXNpemVgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hldGhlciBhbiBlbGVtZW50IGlzIHJlc2l6YWJsZSwgYW5kIGlmIHNvLCBpbiB3aGljaCBkaXJlY3Rpb25zLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBib3RoIHwgaG9yaXpvbnRhbCB8IHZlcnRpY2FsIHwgYmxvY2sgfCBpbmxpbmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjEqKiAgfCAgKio0KiogIHwgKiozKiogIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Jlc2l6ZQogICAqLwogIHJlc2l6ZT86IFByb3BlcnR5LlJlc2l6ZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgcmlnaHRgKiogQ1NTIHByb3BlcnR5IHBhcnRpY2lwYXRlcyBpbiBzcGVjaWZ5aW5nIHRoZSBob3Jpem9udGFsIHBvc2l0aW9uIG9mIGEgcG9zaXRpb25lZCBlbGVtZW50LiBJdCBoYXMgbm8gZWZmZWN0IG9uIG5vbi1wb3NpdGlvbmVkIGVsZW1lbnRzLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+IHwgPHBlcmNlbnRhZ2U+IHwgYXV0b2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNS41KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvcmlnaHQKICAgKi8KICByaWdodD86IFByb3BlcnR5LlJpZ2h0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmByb3RhdGVgKiogQ1NTIHByb3BlcnR5IGFsbG93cyB5b3UgdG8gc3BlY2lmeSByb3RhdGlvbiB0cmFuc2Zvcm1zIGluZGl2aWR1YWxseSBhbmQgaW5kZXBlbmRlbnRseSBvZiB0aGUgYHRyYW5zZm9ybWAgcHJvcGVydHkuIFRoaXMgbWFwcyBiZXR0ZXIgdG8gdHlwaWNhbCB1c2VyIGludGVyZmFjZSB1c2FnZSwgYW5kIHNhdmVzIGhhdmluZyB0byByZW1lbWJlciB0aGUgZXhhY3Qgb3JkZXIgb2YgdHJhbnNmb3JtIGZ1bmN0aW9ucyB0byBzcGVjaWZ5IGluIHRoZSBgdHJhbnNmb3JtYCBwcm9wZXJ0eS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPGFuZ2xlPiB8IFsgeCB8IHkgfCB6IHwgPG51bWJlcj57M30gXSAmJiA8YW5nbGU+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCBFZGdlIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLTogfCA6LTogfAogICAqIHwgICBObyAgIHwgKio3MioqICB8ICoqMTQuMSoqIHwgIE5vICB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9yb3RhdGUKICAgKi8KICByb3RhdGU/OiBQcm9wZXJ0eS5Sb3RhdGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHJvdy1nYXBgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHNpemUgb2YgdGhlIGdhcCAoZ3V0dGVyKSBiZXR3ZWVuIGFuIGVsZW1lbnQncyBncmlkIHJvd3MuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgPGxlbmd0aC1wZXJjZW50YWdlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIEZsZXggTGF5b3V0XwogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqODQqKiB8ICoqNjMqKiAgfCAqKjE0LjEqKiB8ICoqODQqKiB8IE5vICB8CiAgICoKICAgKiAtLS0KICAgKgogICAqIF9TdXBwb3J0ZWQgaW4gR3JpZCBMYXlvdXRfCiAgICoKICAgKiB8ICAgICAgIENocm9tZSAgICAgICAgfCAgICAgICBGaXJlZm94ICAgICAgIHwgICAgICAgIFNhZmFyaSAgICAgICAgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICAgICAgICoqNjYqKiAgICAgICAgfCAgICAgICAqKjYxKiogICAgICAgIHwgICAgICAgICoqMTIqKiAgICAgICAgIHwgKioxNioqIHwgTm8gIHwKICAgKiB8IDU3IF8oZ3JpZC1yb3ctZ2FwKV8gfCA1MiBfKGdyaWQtcm93LWdhcClfIHwgMTAuMSBfKGdyaWQtcm93LWdhcClfIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIC0tLQogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvcm93LWdhcAogICAqLwogICJyb3ctZ2FwIj86IFByb3BlcnR5LlJvd0dhcDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYCoqcnVieS1hbGlnbioqYCBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgZGlzdHJpYnV0aW9uIG9mIHRoZSBkaWZmZXJlbnQgcnVieSBlbGVtZW50cyBvdmVyIHRoZSBiYXNlLgogICAqCiAgICogKipTeW50YXgqKjogYHN0YXJ0IHwgY2VudGVyIHwgc3BhY2UtYmV0d2VlbiB8IHNwYWNlLWFyb3VuZGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc3BhY2UtYXJvdW5kYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgRWRnZSB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tOiB8IDotOiB8CiAgICogfCAgIE5vICAgfCAqKjM4KiogIHwgICBObyAgIHwgIE5vICB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ydWJ5LWFsaWduCiAgICovCiAgInJ1YnktYWxpZ24iPzogUHJvcGVydHkuUnVieUFsaWduIHwgdW5kZWZpbmVkOwogIC8qKgogICAqICoqU3ludGF4Kio6IGBzZXBhcmF0ZSB8IGNvbGxhcHNlIHwgYXV0b2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc2VwYXJhdGVgCiAgICovCiAgInJ1YnktbWVyZ2UiPzogUHJvcGVydHkuUnVieU1lcmdlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgKipydWJ5LXBvc2l0aW9uKipgIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBwb3NpdGlvbiBvZiBhIHJ1YnkgZWxlbWVudCByZWxhdGl2ZXMgdG8gaXRzIGJhc2UgZWxlbWVudC4gSXQgY2FuIGJlIHBvc2l0aW9uIG92ZXIgdGhlIGVsZW1lbnQgKGBvdmVyYCksIHVuZGVyIGl0IChgdW5kZXJgKSwgb3IgYmV0d2VlbiB0aGUgY2hhcmFjdGVycywgb24gdGhlaXIgcmlnaHQgc2lkZSAoYGludGVyLWNoYXJhY3RlcmApLgogICAqCiAgICogKipTeW50YXgqKjogYFsgYWx0ZXJuYXRlIHx8IFsgb3ZlciB8IHVuZGVyIF0gXSB8IGludGVyLWNoYXJhY3RlcmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYWx0ZXJuYXRlYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8ICAgIFNhZmFyaSAgICAgfCBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS0tLTogfCA6LS0tOiB8IDotOiB8CiAgICogfCAqKjg0KiogIHwgKiozOCoqICB8ICoqNi4xKiogXy14LV8gfCAxMi03OSB8IE5vICB8CiAgICogfCAxIF8teC1fIHwgICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ydWJ5LXBvc2l0aW9uCiAgICovCiAgInJ1YnktcG9zaXRpb24iPzogUHJvcGVydHkuUnVieVBvc2l0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBzY2FsZWAqKiBDU1MgcHJvcGVydHkgYWxsb3dzIHlvdSB0byBzcGVjaWZ5IHNjYWxlIHRyYW5zZm9ybXMgaW5kaXZpZHVhbGx5IGFuZCBpbmRlcGVuZGVudGx5IG9mIHRoZSBgdHJhbnNmb3JtYCBwcm9wZXJ0eS4gVGhpcyBtYXBzIGJldHRlciB0byB0eXBpY2FsIHVzZXIgaW50ZXJmYWNlIHVzYWdlLCBhbmQgc2F2ZXMgaGF2aW5nIHRvIHJlbWVtYmVyIHRoZSBleGFjdCBvcmRlciBvZiB0cmFuc2Zvcm0gZnVuY3Rpb25zIHRvIHNwZWNpZnkgaW4gdGhlIGB0cmFuc2Zvcm1gIHZhbHVlLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8bnVtYmVyPnsxLDN9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCBFZGdlIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLTogfCA6LTogfAogICAqIHwgICBObyAgIHwgKio3MioqICB8ICoqMTQuMSoqIHwgIE5vICB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9zY2FsZQogICAqLwogIHNjYWxlPzogUHJvcGVydHkuU2NhbGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHNjcm9sbC1iZWhhdmlvcmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgYmVoYXZpb3IgZm9yIGEgc2Nyb2xsaW5nIGJveCB3aGVuIHNjcm9sbGluZyBpcyB0cmlnZ2VyZWQgYnkgdGhlIG5hdmlnYXRpb24gb3IgQ1NTT00gc2Nyb2xsaW5nIEFQSXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IHNtb290aGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjEqKiB8ICoqMzYqKiAgfCAgbi9hICAgfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLWJlaGF2aW9yCiAgICovCiAgInNjcm9sbC1iZWhhdmlvciI/OiBQcm9wZXJ0eS5TY3JvbGxCZWhhdmlvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgc2Nyb2xsLW1hcmdpbmAqKiBzaG9ydGhhbmQgcHJvcGVydHkgc2V0cyBhbGwgb2YgdGhlIHNjcm9sbCBtYXJnaW5zIG9mIGFuIGVsZW1lbnQgYXQgb25jZSwgYXNzaWduaW5nIHZhbHVlcyBtdWNoIGxpa2UgdGhlIGBtYXJnaW5gIHByb3BlcnR5IGRvZXMgZm9yIG1hcmdpbnMgb2YgYW4gZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPnsxLDR9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgICAgICAgICAgU2FmYXJpICAgICAgICAgICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjkwKiogIHwgICAgICAgICAqKjE0LjEqKiAgICAgICAgICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAgICAgICAgfCAgICAgICAgIHwgMTEgXyhzY3JvbGwtc25hcC1tYXJnaW4pXyB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9zY3JvbGwtbWFyZ2luCiAgICovCiAgInNjcm9sbC1tYXJnaW4iPzogUHJvcGVydHkuU2Nyb2xsTWFyZ2luPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgc2Nyb2xsLW1hcmdpbi1ibG9ja2Agc2hvcnRoYW5kIHByb3BlcnR5IHNldHMgdGhlIHNjcm9sbCBtYXJnaW5zIG9mIGFuIGVsZW1lbnQgaW4gdGhlIGJsb2NrIGRpbWVuc2lvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPnsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNjgqKiAgfCAqKjE0LjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9zY3JvbGwtbWFyZ2luLWJsb2NrCiAgICovCiAgInNjcm9sbC1tYXJnaW4tYmxvY2siPzogUHJvcGVydHkuU2Nyb2xsTWFyZ2luQmxvY2s8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGBzY3JvbGwtbWFyZ2luLWJsb2NrLWVuZGDCoHByb3BlcnR5IGRlZmluZXMgdGhlwqBtYXJnaW4gb2YgdGhlIHNjcm9sbCBzbmFwIGFyZWEgYXQgdGhlIGVuZMKgb2YgdGhlIGJsb2NrIGRpbWVuc2lvbsKgdGhhdCBpcyB1c2VkIGZvciBzbmFwcGluZyB0aGlzIGJveCB0byB0aGUgc25hcHBvcnQuIFRoZSBzY3JvbGwgc25hcCBhcmVhIGlzIGRldGVybWluZWQgYnkgdGFraW5nIHRoZSB0cmFuc2Zvcm1lZCBib3JkZXIgYm94LCBmaW5kaW5nIGl0cyByZWN0YW5ndWxhciBib3VuZGluZyBib3ggKGF4aXMtYWxpZ25lZCBpbiB0aGUgc2Nyb2xsIGNvbnRhaW5lcuKAmXMgY29vcmRpbmF0ZSBzcGFjZSksIHRoZW4gYWRkaW5nIHRoZSBzcGVjaWZpZWQgb3V0c2V0cy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjY4KiogIHwgKioxNC4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLW1hcmdpbi1ibG9jay1lbmQKICAgKi8KICAic2Nyb2xsLW1hcmdpbi1ibG9jay1lbmQiPzogUHJvcGVydHkuU2Nyb2xsTWFyZ2luQmxvY2tFbmQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGBzY3JvbGwtbWFyZ2luLWJsb2NrLXN0YXJ0YMKgcHJvcGVydHkgZGVmaW5lcyB0aGXCoG1hcmdpbiBvZiB0aGUgc2Nyb2xsIHNuYXAgYXJlYSBhdCB0aGUgc3RhcnQgb2YgdGhlIGJsb2NrIGRpbWVuc2lvbsKgdGhhdCBpcyB1c2VkIGZvciBzbmFwcGluZyB0aGlzIGJveCB0byB0aGUgc25hcHBvcnQuIFRoZSBzY3JvbGwgc25hcCBhcmVhIGlzIGRldGVybWluZWQgYnkgdGFraW5nIHRoZSB0cmFuc2Zvcm1lZCBib3JkZXIgYm94LCBmaW5kaW5nIGl0cyByZWN0YW5ndWxhciBib3VuZGluZyBib3ggKGF4aXMtYWxpZ25lZCBpbiB0aGUgc2Nyb2xsIGNvbnRhaW5lcuKAmXMgY29vcmRpbmF0ZSBzcGFjZSksIHRoZW4gYWRkaW5nIHRoZSBzcGVjaWZpZWQgb3V0c2V0cy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjY4KiogIHwgKioxNC4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLW1hcmdpbi1ibG9jay1zdGFydAogICAqLwogICJzY3JvbGwtbWFyZ2luLWJsb2NrLXN0YXJ0Ij86IFByb3BlcnR5LlNjcm9sbE1hcmdpbkJsb2NrU3RhcnQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGBzY3JvbGwtbWFyZ2luLWJvdHRvbWAgcHJvcGVydHkgZGVmaW5lcyB0aGUgYm90dG9tIG1hcmdpbiBvZiB0aGUgc2Nyb2xsIHNuYXAgYXJlYSB0aGF0IGlzIHVzZWQgZm9yIHNuYXBwaW5nIHRoaXMgYm94IHRvIHRoZSBzbmFwcG9ydC4gVGhlIHNjcm9sbCBzbmFwIGFyZWEgaXMgZGV0ZXJtaW5lZCBieSB0YWtpbmcgdGhlIHRyYW5zZm9ybWVkIGJvcmRlciBib3gsIGZpbmRpbmcgaXRzIHJlY3Rhbmd1bGFyIGJvdW5kaW5nIGJveCAoYXhpcy1hbGlnbmVkIGluIHRoZSBzY3JvbGwgY29udGFpbmVy4oCZcyBjb29yZGluYXRlIHNwYWNlKSwgdGhlbiBhZGRpbmcgdGhlIHNwZWNpZmllZCBvdXRzZXRzLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgICAgICAgICAgICAgIFNhZmFyaSAgICAgICAgICAgICAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNjgqKiAgfCAgICAgICAgICAgICAqKjE0LjEqKiAgICAgICAgICAgICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAgICAgICAgfCAgICAgICAgIHwgMTEgXyhzY3JvbGwtc25hcC1tYXJnaW4tYm90dG9tKV8gfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLW1hcmdpbi1ib3R0b20KICAgKi8KICAic2Nyb2xsLW1hcmdpbi1ib3R0b20iPzogUHJvcGVydHkuU2Nyb2xsTWFyZ2luQm90dG9tPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgc2Nyb2xsLW1hcmdpbi1pbmxpbmVgIHNob3J0aGFuZCBwcm9wZXJ0eSBzZXRzIHRoZSBzY3JvbGwgbWFyZ2lucyBvZiBhbiBlbGVtZW50IGluIHRoZSBpbmxpbmUgZGltZW5zaW9uLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio2OCoqICB8ICoqMTQuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbC1tYXJnaW4taW5saW5lCiAgICovCiAgInNjcm9sbC1tYXJnaW4taW5saW5lIj86IFByb3BlcnR5LlNjcm9sbE1hcmdpbklubGluZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYHNjcm9sbC1tYXJnaW4taW5saW5lLWVuZGDCoHByb3BlcnR5IGRlZmluZXMgdGhlwqBtYXJnaW4gb2YgdGhlIHNjcm9sbCBzbmFwIGFyZWEgYXQgdGhlIGVuZMKgb2YgdGhlIGlubGluZcKgZGltZW5zaW9uwqB0aGF0IGlzIHVzZWQgZm9yIHNuYXBwaW5nIHRoaXMgYm94IHRvIHRoZSBzbmFwcG9ydC4gVGhlIHNjcm9sbCBzbmFwIGFyZWEgaXMgZGV0ZXJtaW5lZCBieSB0YWtpbmcgdGhlIHRyYW5zZm9ybWVkIGJvcmRlciBib3gsIGZpbmRpbmcgaXRzIHJlY3Rhbmd1bGFyIGJvdW5kaW5nIGJveCAoYXhpcy1hbGlnbmVkIGluIHRoZSBzY3JvbGwgY29udGFpbmVy4oCZcyBjb29yZGluYXRlIHNwYWNlKSwgdGhlbiBhZGRpbmcgdGhlIHNwZWNpZmllZCBvdXRzZXRzLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNjgqKiAgfCAqKjE0LjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9zY3JvbGwtbWFyZ2luLWlubGluZS1lbmQKICAgKi8KICAic2Nyb2xsLW1hcmdpbi1pbmxpbmUtZW5kIj86IFByb3BlcnR5LlNjcm9sbE1hcmdpbklubGluZUVuZDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYHNjcm9sbC1tYXJnaW4taW5saW5lLXN0YXJ0YCBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBtYXJnaW4gb2YgdGhlIHNjcm9sbCBzbmFwIGFyZWEgYXQgdGhlIHN0YXJ0IG9mIHRoZSBpbmxpbmUgZGltZW5zaW9uIHRoYXQgaXMgdXNlZCBmb3Igc25hcHBpbmcgdGhpcyBib3ggdG8gdGhlIHNuYXBwb3J0LiBUaGUgc2Nyb2xsIHNuYXAgYXJlYSBpcyBkZXRlcm1pbmVkIGJ5IHRha2luZyB0aGUgdHJhbnNmb3JtZWQgYm9yZGVyIGJveCwgZmluZGluZyBpdHMgcmVjdGFuZ3VsYXIgYm91bmRpbmcgYm94IChheGlzLWFsaWduZWQgaW4gdGhlIHNjcm9sbCBjb250YWluZXLigJlzIGNvb3JkaW5hdGUgc3BhY2UpLCB0aGVuIGFkZGluZyB0aGUgc3BlY2lmaWVkIG91dHNldHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio2OCoqICB8ICoqMTQuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbC1tYXJnaW4taW5saW5lLXN0YXJ0CiAgICovCiAgInNjcm9sbC1tYXJnaW4taW5saW5lLXN0YXJ0Ij86IFByb3BlcnR5LlNjcm9sbE1hcmdpbklubGluZVN0YXJ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgc2Nyb2xsLW1hcmdpbi1sZWZ0YCBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsZWZ0IG1hcmdpbiBvZiB0aGUgc2Nyb2xsIHNuYXAgYXJlYSB0aGF0IGlzIHVzZWQgZm9yIHNuYXBwaW5nIHRoaXMgYm94IHRvIHRoZSBzbmFwcG9ydC4gVGhlIHNjcm9sbCBzbmFwIGFyZWEgaXMgZGV0ZXJtaW5lZCBieSB0YWtpbmcgdGhlIHRyYW5zZm9ybWVkIGJvcmRlciBib3gsIGZpbmRpbmcgaXRzIHJlY3Rhbmd1bGFyIGJvdW5kaW5nIGJveCAoYXhpcy1hbGlnbmVkIGluIHRoZSBzY3JvbGwgY29udGFpbmVy4oCZcyBjb29yZGluYXRlIHNwYWNlKSwgdGhlbiBhZGRpbmcgdGhlIHNwZWNpZmllZCBvdXRzZXRzLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgICAgICAgICAgICAgU2FmYXJpICAgICAgICAgICAgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio2OCoqICB8ICAgICAgICAgICAgKioxNC4xKiogICAgICAgICAgICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAgICAgICAgfCAgICAgICAgIHwgMTEgXyhzY3JvbGwtc25hcC1tYXJnaW4tbGVmdClfIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbC1tYXJnaW4tbGVmdAogICAqLwogICJzY3JvbGwtbWFyZ2luLWxlZnQiPzogUHJvcGVydHkuU2Nyb2xsTWFyZ2luTGVmdDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYHNjcm9sbC1tYXJnaW4tcmlnaHRgIHByb3BlcnR5IGRlZmluZXMgdGhlIHJpZ2h0IG1hcmdpbiBvZiB0aGUgc2Nyb2xsIHNuYXAgYXJlYSB0aGF0IGlzIHVzZWQgZm9yIHNuYXBwaW5nIHRoaXMgYm94IHRvIHRoZSBzbmFwcG9ydC4gVGhlIHNjcm9sbCBzbmFwIGFyZWEgaXMgZGV0ZXJtaW5lZCBieSB0YWtpbmcgdGhlIHRyYW5zZm9ybWVkIGJvcmRlciBib3gsIGZpbmRpbmcgaXRzIHJlY3Rhbmd1bGFyIGJvdW5kaW5nIGJveCAoYXhpcy1hbGlnbmVkIGluIHRoZSBzY3JvbGwgY29udGFpbmVy4oCZcyBjb29yZGluYXRlIHNwYWNlKSwgdGhlbiBhZGRpbmcgdGhlIHNwZWNpZmllZCBvdXRzZXRzLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgICAgICAgICAgICAgU2FmYXJpICAgICAgICAgICAgICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjY4KiogIHwgICAgICAgICAgICAqKjE0LjEqKiAgICAgICAgICAgICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAgICAgICAgfCAgICAgICAgIHwgMTEgXyhzY3JvbGwtc25hcC1tYXJnaW4tcmlnaHQpXyB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9zY3JvbGwtbWFyZ2luLXJpZ2h0CiAgICovCiAgInNjcm9sbC1tYXJnaW4tcmlnaHQiPzogUHJvcGVydHkuU2Nyb2xsTWFyZ2luUmlnaHQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGBzY3JvbGwtbWFyZ2luLXRvcGAgcHJvcGVydHkgZGVmaW5lcyB0aGUgdG9wIG1hcmdpbiBvZiB0aGUgc2Nyb2xsIHNuYXAgYXJlYSB0aGF0IGlzIHVzZWQgZm9yIHNuYXBwaW5nIHRoaXMgYm94IHRvIHRoZSBzbmFwcG9ydC4gVGhlIHNjcm9sbCBzbmFwIGFyZWEgaXMgZGV0ZXJtaW5lZCBieSB0YWtpbmcgdGhlIHRyYW5zZm9ybWVkIGJvcmRlciBib3gsIGZpbmRpbmcgaXRzIHJlY3Rhbmd1bGFyIGJvdW5kaW5nIGJveCAoYXhpcy1hbGlnbmVkIGluIHRoZSBzY3JvbGwgY29udGFpbmVy4oCZcyBjb29yZGluYXRlIHNwYWNlKSwgdGhlbiBhZGRpbmcgdGhlIHNwZWNpZmllZCBvdXRzZXRzLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgICAgICAgICAgICBTYWZhcmkgICAgICAgICAgICAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNjgqKiAgfCAgICAgICAgICAgKioxNC4xKiogICAgICAgICAgICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAgICAgICAgfCAgICAgICAgIHwgMTEgXyhzY3JvbGwtc25hcC1tYXJnaW4tdG9wKV8gfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLW1hcmdpbi10b3AKICAgKi8KICAic2Nyb2xsLW1hcmdpbi10b3AiPzogUHJvcGVydHkuU2Nyb2xsTWFyZ2luVG9wPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBzY3JvbGwtcGFkZGluZ2AqKiBzaG9ydGhhbmQgcHJvcGVydHkgc2V0cyBzY3JvbGwgcGFkZGluZyBvbiBhbGwgc2lkZXMgb2YgYW4gZWxlbWVudCBhdCBvbmNlLCBtdWNoIGxpa2UgdGhlIGBwYWRkaW5nYCBwcm9wZXJ0eSBkb2VzIGZvciBwYWRkaW5nIG9uIGFuIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyBhdXRvIHwgPGxlbmd0aC1wZXJjZW50YWdlPiBdezEsNH1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio2OCoqICB8ICoqMTQuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbC1wYWRkaW5nCiAgICovCiAgInNjcm9sbC1wYWRkaW5nIj86IFByb3BlcnR5LlNjcm9sbFBhZGRpbmc8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGBzY3JvbGwtcGFkZGluZy1ibG9ja2Agc2hvcnRoYW5kIHByb3BlcnR5IHNldHMgdGhlIHNjcm9sbCBwYWRkaW5nIG9mIGFuIGVsZW1lbnQgaW4gdGhlIGJsb2NrIGRpbWVuc2lvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIGF1dG8gfCA8bGVuZ3RoLXBlcmNlbnRhZ2U+IF17MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNjgqKiAgfCAqKjE1KiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLXBhZGRpbmctYmxvY2sKICAgKi8KICAic2Nyb2xsLXBhZGRpbmctYmxvY2siPzogUHJvcGVydHkuU2Nyb2xsUGFkZGluZ0Jsb2NrPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgc2Nyb2xsLXBhZGRpbmctYmxvY2stZW5kYCBwcm9wZXJ0eSBkZWZpbmVzIG9mZnNldHMgZm9yIHRoZSBlbmQgZWRnZSBpbiB0aGUgYmxvY2sgZGltZW5zaW9uIG9mIHRoZSBvcHRpbWFsIHZpZXdpbmcgcmVnaW9uIG9mIHRoZSBzY3JvbGxwb3J0OiB0aGUgcmVnaW9uIHVzZWQgYXMgdGhlIHRhcmdldCByZWdpb24gZm9yIHBsYWNpbmcgdGhpbmdzIGluIHZpZXcgb2YgdGhlIHVzZXIuIFRoaXMgYWxsb3dzIHRoZSBhdXRob3IgdG8gZXhjbHVkZSByZWdpb25zIG9mIHRoZSBzY3JvbGxwb3J0IHRoYXQgYXJlIG9ic2N1cmVkIGJ5IG90aGVyIGNvbnRlbnQgKHN1Y2ggYXMgZml4ZWQtcG9zaXRpb25lZCB0b29sYmFycyBvciBzaWRlYmFycykgb3Igc2ltcGx5IHRvIHB1dCBtb3JlIGJyZWF0aGluZyByb29tIGJldHdlZW4gYSB0YXJnZXR0ZWQgZWxlbWVudCBhbmQgdGhlIGVkZ2VzIG9mIHRoZSBzY3JvbGxwb3J0LgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCA8bGVuZ3RoLXBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio2OCoqICB8ICoqMTUqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9zY3JvbGwtcGFkZGluZy1ibG9jay1lbmQKICAgKi8KICAic2Nyb2xsLXBhZGRpbmctYmxvY2stZW5kIj86IFByb3BlcnR5LlNjcm9sbFBhZGRpbmdCbG9ja0VuZDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYHNjcm9sbC1wYWRkaW5nLWJsb2NrLXN0YXJ0YCBwcm9wZXJ0eSBkZWZpbmVzIG9mZnNldHMgZm9yIHRoZSBzdGFydCBlZGdlIGluIHRoZSBibG9jayBkaW1lbnNpb24gb2YgdGhlIG9wdGltYWwgdmlld2luZyByZWdpb24gb2YgdGhlIHNjcm9sbHBvcnQ6IHRoZSByZWdpb24gdXNlZCBhcyB0aGUgdGFyZ2V0IHJlZ2lvbiBmb3IgcGxhY2luZyB0aGluZ3MgaW4gdmlldyBvZiB0aGUgdXNlci4gVGhpcyBhbGxvd3MgdGhlIGF1dGhvciB0byBleGNsdWRlIHJlZ2lvbnMgb2YgdGhlIHNjcm9sbHBvcnQgdGhhdCBhcmUgb2JzY3VyZWQgYnkgb3RoZXIgY29udGVudCAoc3VjaCBhcyBmaXhlZC1wb3NpdGlvbmVkIHRvb2xiYXJzIG9yIHNpZGViYXJzKSBvciBzaW1wbHkgdG8gcHV0IG1vcmUgYnJlYXRoaW5nIHJvb20gYmV0d2VlbiBhIHRhcmdldHRlZCBlbGVtZW50IGFuZCB0aGUgZWRnZXMgb2YgdGhlIHNjcm9sbHBvcnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IDxsZW5ndGgtcGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjY4KiogIHwgKioxNSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbC1wYWRkaW5nLWJsb2NrLXN0YXJ0CiAgICovCiAgInNjcm9sbC1wYWRkaW5nLWJsb2NrLXN0YXJ0Ij86IFByb3BlcnR5LlNjcm9sbFBhZGRpbmdCbG9ja1N0YXJ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgc2Nyb2xsLXBhZGRpbmctYm90dG9tYCBwcm9wZXJ0eSBkZWZpbmVzIG9mZnNldHMgZm9yIHRoZSBib3R0b20gb2YgdGhlIG9wdGltYWwgdmlld2luZyByZWdpb24gb2YgdGhlIHNjcm9sbHBvcnQ6IHRoZSByZWdpb24gdXNlZCBhcyB0aGUgdGFyZ2V0IHJlZ2lvbiBmb3IgcGxhY2luZyB0aGluZ3MgaW4gdmlldyBvZiB0aGUgdXNlci4gVGhpcyBhbGxvd3MgdGhlIGF1dGhvciB0byBleGNsdWRlIHJlZ2lvbnMgb2YgdGhlIHNjcm9sbHBvcnQgdGhhdCBhcmUgb2JzY3VyZWQgYnkgb3RoZXIgY29udGVudCAoc3VjaCBhcyBmaXhlZC1wb3NpdGlvbmVkIHRvb2xiYXJzIG9yIHNpZGViYXJzKSBvciBzaW1wbHkgdG8gcHV0IG1vcmUgYnJlYXRoaW5nIHJvb20gYmV0d2VlbiBhIHRhcmdldHRlZCBlbGVtZW50IGFuZCB0aGUgZWRnZXMgb2YgdGhlIHNjcm9sbHBvcnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IDxsZW5ndGgtcGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio2OCoqICB8ICoqMTQuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbC1wYWRkaW5nLWJvdHRvbQogICAqLwogICJzY3JvbGwtcGFkZGluZy1ib3R0b20iPzogUHJvcGVydHkuU2Nyb2xsUGFkZGluZ0JvdHRvbTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYHNjcm9sbC1wYWRkaW5nLWlubGluZWAgc2hvcnRoYW5kIHByb3BlcnR5IHNldHMgdGhlIHNjcm9sbCBwYWRkaW5nIG9mIGFuIGVsZW1lbnQgaW4gdGhlIGlubGluZSBkaW1lbnNpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyBhdXRvIHwgPGxlbmd0aC1wZXJjZW50YWdlPiBdezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjY4KiogIHwgKioxNSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbC1wYWRkaW5nLWlubGluZQogICAqLwogICJzY3JvbGwtcGFkZGluZy1pbmxpbmUiPzogUHJvcGVydHkuU2Nyb2xsUGFkZGluZ0lubGluZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYHNjcm9sbC1wYWRkaW5nLWlubGluZS1lbmRgwqBwcm9wZXJ0ecKgZGVmaW5lcyBvZmZzZXRzIGZvciB0aGUgZW5kwqBlZGdlIGluIHRoZSBpbmxpbmXCoGRpbWVuc2lvbsKgb2YgdGhlwqBvcHRpbWFsIHZpZXdpbmcgcmVnaW9uwqBvZiB0aGUgc2Nyb2xscG9ydDogdGhlIHJlZ2lvbiB1c2VkIGFzIHRoZSB0YXJnZXQgcmVnaW9uIGZvciBwbGFjaW5nIHRoaW5ncyBpbiB2aWV3IG9mIHRoZSB1c2VyLiBUaGlzIGFsbG93cyB0aGUgYXV0aG9yIHRvIGV4Y2x1ZGUgcmVnaW9ucyBvZiB0aGUgc2Nyb2xscG9ydCB0aGF0IGFyZSBvYnNjdXJlZCBieSBvdGhlciBjb250ZW50IChzdWNoIGFzIGZpeGVkLXBvc2l0aW9uZWQgdG9vbGJhcnMgb3Igc2lkZWJhcnMpIG9yIHNpbXBseSB0byBwdXQgbW9yZSBicmVhdGhpbmcgcm9vbSBiZXR3ZWVuIGEgdGFyZ2V0dGVkIGVsZW1lbnQgYW5kIHRoZSBlZGdlcyBvZiB0aGUgc2Nyb2xscG9ydC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPGxlbmd0aC1wZXJjZW50YWdlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNjgqKiAgfCAqKjE1KiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLXBhZGRpbmctaW5saW5lLWVuZAogICAqLwogICJzY3JvbGwtcGFkZGluZy1pbmxpbmUtZW5kIj86IFByb3BlcnR5LlNjcm9sbFBhZGRpbmdJbmxpbmVFbmQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGBzY3JvbGwtcGFkZGluZy1pbmxpbmUtc3RhcnRgIHByb3BlcnR5IGRlZmluZXMgb2Zmc2V0cyBmb3IgdGhlIHN0YXJ0IGVkZ2UgaW4gdGhlIGlubGluZSBkaW1lbnNpb24gb2YgdGhlIG9wdGltYWwgdmlld2luZyByZWdpb24gb2YgdGhlIHNjcm9sbHBvcnQ6IHRoZSByZWdpb24gdXNlZCBhcyB0aGUgdGFyZ2V0IHJlZ2lvbiBmb3IgcGxhY2luZyB0aGluZ3MgaW4gdmlldyBvZiB0aGUgdXNlci4gVGhpcyBhbGxvd3MgdGhlIGF1dGhvciB0byBleGNsdWRlIHJlZ2lvbnMgb2YgdGhlIHNjcm9sbHBvcnQgdGhhdCBhcmUgb2JzY3VyZWQgYnkgb3RoZXIgY29udGVudCAoc3VjaCBhcyBmaXhlZC1wb3NpdGlvbmVkIHRvb2xiYXJzIG9yIHNpZGViYXJzKSBvciBzaW1wbHkgdG8gcHV0IG1vcmUgYnJlYXRoaW5nIHJvb20gYmV0d2VlbiBhIHRhcmdldHRlZCBlbGVtZW50IGFuZCB0aGUgZWRnZXMgb2YgdGhlIHNjcm9sbHBvcnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IDxsZW5ndGgtcGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjY4KiogIHwgKioxNSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbC1wYWRkaW5nLWlubGluZS1zdGFydAogICAqLwogICJzY3JvbGwtcGFkZGluZy1pbmxpbmUtc3RhcnQiPzogUHJvcGVydHkuU2Nyb2xsUGFkZGluZ0lubGluZVN0YXJ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgc2Nyb2xsLXBhZGRpbmctbGVmdGAgcHJvcGVydHkgZGVmaW5lcyBvZmZzZXRzIGZvciB0aGUgbGVmdCBvZiB0aGUgb3B0aW1hbCB2aWV3aW5nIHJlZ2lvbiBvZiB0aGUgc2Nyb2xscG9ydDogdGhlIHJlZ2lvbiB1c2VkIGFzIHRoZSB0YXJnZXQgcmVnaW9uIGZvciBwbGFjaW5nIHRoaW5ncyBpbiB2aWV3IG9mIHRoZSB1c2VyLiBUaGlzIGFsbG93cyB0aGUgYXV0aG9yIHRvIGV4Y2x1ZGUgcmVnaW9ucyBvZiB0aGUgc2Nyb2xscG9ydCB0aGF0IGFyZSBvYnNjdXJlZCBieSBvdGhlciBjb250ZW50IChzdWNoIGFzIGZpeGVkLXBvc2l0aW9uZWQgdG9vbGJhcnMgb3Igc2lkZWJhcnMpIG9yIHNpbXBseSB0byBwdXQgbW9yZSBicmVhdGhpbmcgcm9vbSBiZXR3ZWVuIGEgdGFyZ2V0dGVkIGVsZW1lbnQgYW5kIHRoZSBlZGdlcyBvZiB0aGUgc2Nyb2xscG9ydC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPGxlbmd0aC1wZXJjZW50YWdlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjY4KiogIHwgKioxNC4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLXBhZGRpbmctbGVmdAogICAqLwogICJzY3JvbGwtcGFkZGluZy1sZWZ0Ij86IFByb3BlcnR5LlNjcm9sbFBhZGRpbmdMZWZ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgc2Nyb2xsLXBhZGRpbmctcmlnaHRgwqBwcm9wZXJ0ecKgZGVmaW5lcyBvZmZzZXRzIGZvciB0aGUgcmlnaHTCoG9mIHRoZcKgb3B0aW1hbCB2aWV3aW5nIHJlZ2lvbsKgb2YgdGhlIHNjcm9sbHBvcnQ6IHRoZSByZWdpb24gdXNlZCBhcyB0aGUgdGFyZ2V0IHJlZ2lvbiBmb3IgcGxhY2luZyB0aGluZ3MgaW4gdmlldyBvZiB0aGUgdXNlci4gVGhpcyBhbGxvd3MgdGhlIGF1dGhvciB0byBleGNsdWRlIHJlZ2lvbnMgb2YgdGhlIHNjcm9sbHBvcnQgdGhhdCBhcmUgb2JzY3VyZWQgYnkgb3RoZXIgY29udGVudCAoc3VjaCBhcyBmaXhlZC1wb3NpdGlvbmVkIHRvb2xiYXJzIG9yIHNpZGViYXJzKSBvciBzaW1wbHkgdG8gcHV0IG1vcmUgYnJlYXRoaW5nIHJvb20gYmV0d2VlbiBhIHRhcmdldHRlZCBlbGVtZW50IGFuZCB0aGUgZWRnZXMgb2YgdGhlIHNjcm9sbHBvcnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IDxsZW5ndGgtcGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio2OCoqICB8ICoqMTQuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbC1wYWRkaW5nLXJpZ2h0CiAgICovCiAgInNjcm9sbC1wYWRkaW5nLXJpZ2h0Ij86IFByb3BlcnR5LlNjcm9sbFBhZGRpbmdSaWdodDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgc2Nyb2xsLXBhZGRpbmctdG9wYCoqIHByb3BlcnR5wqBkZWZpbmVzIG9mZnNldHMgZm9yIHRoZSB0b3Agb2YgdGhlwqBvcHRpbWFsIHZpZXdpbmcgcmVnaW9uwqBvZiB0aGUgc2Nyb2xscG9ydDogdGhlIHJlZ2lvbiB1c2VkIGFzIHRoZSB0YXJnZXQgcmVnaW9uIGZvciBwbGFjaW5nIHRoaW5ncyBpbiB2aWV3IG9mIHRoZSB1c2VyLiBUaGlzIGFsbG93cyB0aGUgYXV0aG9yIHRvIGV4Y2x1ZGUgcmVnaW9ucyBvZiB0aGUgc2Nyb2xscG9ydCB0aGF0IGFyZSBvYnNjdXJlZCBieSBvdGhlciBjb250ZW50IChzdWNoIGFzIGZpeGVkLXBvc2l0aW9uZWQgdG9vbGJhcnMgb3Igc2lkZWJhcnMpIG9yIHNpbXBseSB0byBwdXQgbW9yZSBicmVhdGhpbmcgcm9vbSBiZXR3ZWVuIGEgdGFyZ2V0dGVkIGVsZW1lbnQgYW5kIHRoZSBlZGdlcyBvZiB0aGUgc2Nyb2xscG9ydC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPGxlbmd0aC1wZXJjZW50YWdlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjY4KiogIHwgKioxNC4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLXBhZGRpbmctdG9wCiAgICovCiAgInNjcm9sbC1wYWRkaW5nLXRvcCI/OiBQcm9wZXJ0eS5TY3JvbGxQYWRkaW5nVG9wPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgc2Nyb2xsLXNuYXAtYWxpZ25gIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgYm944oCZcyBzbmFwIHBvc2l0aW9uIGFzIGFuIGFsaWdubWVudCBvZiBpdHMgc25hcCBhcmVhIChhcyB0aGUgYWxpZ25tZW50IHN1YmplY3QpIHdpdGhpbiBpdHMgc25hcCBjb250YWluZXLigJlzIHNuYXBwb3J0IChhcyB0aGUgYWxpZ25tZW50IGNvbnRhaW5lcikuIFRoZSB0d28gdmFsdWVzIHNwZWNpZnkgdGhlIHNuYXBwaW5nIGFsaWdubWVudCBpbiB0aGUgYmxvY2sgYXhpcyBhbmQgaW5saW5lIGF4aXMsIHJlc3BlY3RpdmVseS4gSWYgb25seSBvbmUgdmFsdWUgaXMgc3BlY2lmaWVkLCB0aGUgc2Vjb25kIHZhbHVlIGRlZmF1bHRzIHRvIHRoZSBzYW1lIHZhbHVlLgogICAqCiAgICogKipTeW50YXgqKjogYFsgbm9uZSB8IHN0YXJ0IHwgZW5kIHwgY2VudGVyIF17MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNjgqKiAgfCAqKjExKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsLXNuYXAtYWxpZ24KICAgKi8KICAic2Nyb2xsLXNuYXAtYWxpZ24iPzogUHJvcGVydHkuU2Nyb2xsU25hcEFsaWduIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBzY3JvbGwtbWFyZ2luYCoqIHNob3J0aGFuZCBwcm9wZXJ0eSBzZXRzIGFsbCBvZiB0aGUgc2Nyb2xsIG1hcmdpbnMgb2YgYW4gZWxlbWVudCBhdCBvbmNlLCBhc3NpZ25pbmcgdmFsdWVzIG11Y2ggbGlrZSB0aGUgYG1hcmdpbmAgcHJvcGVydHkgZG9lcyBmb3IgbWFyZ2lucyBvZiBhbiBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+ezEsNH1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgICAgICAgICBTYWZhcmkgICAgICAgICAgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICA2OC05MCAgfCAgICAgICAgICoqMTQuMSoqICAgICAgICAgIHwgKio3OSoqIHwgTm8gIHwKICAgKiB8ICAgICAgICB8ICAgICAgICAgfCAxMSBfKHNjcm9sbC1zbmFwLW1hcmdpbilfIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbC1tYXJnaW4KICAgKi8KICAic2Nyb2xsLXNuYXAtbWFyZ2luIj86IFByb3BlcnR5LlNjcm9sbE1hcmdpbjxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYHNjcm9sbC1tYXJnaW4tYm90dG9tYCBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBib3R0b20gbWFyZ2luIG9mIHRoZSBzY3JvbGwgc25hcCBhcmVhIHRoYXQgaXMgdXNlZCBmb3Igc25hcHBpbmcgdGhpcyBib3ggdG8gdGhlIHNuYXBwb3J0LiBUaGUgc2Nyb2xsIHNuYXAgYXJlYSBpcyBkZXRlcm1pbmVkIGJ5IHRha2luZyB0aGUgdHJhbnNmb3JtZWQgYm9yZGVyIGJveCwgZmluZGluZyBpdHMgcmVjdGFuZ3VsYXIgYm91bmRpbmcgYm94IChheGlzLWFsaWduZWQgaW4gdGhlIHNjcm9sbCBjb250YWluZXLigJlzIGNvb3JkaW5hdGUgc3BhY2UpLCB0aGVuIGFkZGluZyB0aGUgc3BlY2lmaWVkIG91dHNldHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgICAgICAgICAgICAgU2FmYXJpICAgICAgICAgICAgICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio2OCoqICB8ICAgICAgICAgICAgICoqMTQuMSoqICAgICAgICAgICAgIHwgKio3OSoqIHwgTm8gIHwKICAgKiB8ICAgICAgICB8ICAgICAgICAgfCAxMSBfKHNjcm9sbC1zbmFwLW1hcmdpbi1ib3R0b20pXyB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9zY3JvbGwtbWFyZ2luLWJvdHRvbQogICAqLwogICJzY3JvbGwtc25hcC1tYXJnaW4tYm90dG9tIj86IFByb3BlcnR5LlNjcm9sbE1hcmdpbkJvdHRvbTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYHNjcm9sbC1tYXJnaW4tbGVmdGAgcHJvcGVydHkgZGVmaW5lcyB0aGUgbGVmdCBtYXJnaW4gb2YgdGhlIHNjcm9sbCBzbmFwIGFyZWEgdGhhdCBpcyB1c2VkIGZvciBzbmFwcGluZyB0aGlzIGJveCB0byB0aGUgc25hcHBvcnQuIFRoZSBzY3JvbGwgc25hcCBhcmVhIGlzIGRldGVybWluZWQgYnkgdGFraW5nIHRoZSB0cmFuc2Zvcm1lZCBib3JkZXIgYm94LCBmaW5kaW5nIGl0cyByZWN0YW5ndWxhciBib3VuZGluZyBib3ggKGF4aXMtYWxpZ25lZCBpbiB0aGUgc2Nyb2xsIGNvbnRhaW5lcuKAmXMgY29vcmRpbmF0ZSBzcGFjZSksIHRoZW4gYWRkaW5nIHRoZSBzcGVjaWZpZWQgb3V0c2V0cy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICAgICAgICAgICAgIFNhZmFyaSAgICAgICAgICAgICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNjgqKiAgfCAgICAgICAgICAgICoqMTQuMSoqICAgICAgICAgICAgfCAqKjc5KiogfCBObyAgfAogICAqIHwgICAgICAgIHwgICAgICAgICB8IDExIF8oc2Nyb2xsLXNuYXAtbWFyZ2luLWxlZnQpXyB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9zY3JvbGwtbWFyZ2luLWxlZnQKICAgKi8KICAic2Nyb2xsLXNuYXAtbWFyZ2luLWxlZnQiPzogUHJvcGVydHkuU2Nyb2xsTWFyZ2luTGVmdDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYHNjcm9sbC1tYXJnaW4tcmlnaHRgIHByb3BlcnR5IGRlZmluZXMgdGhlIHJpZ2h0IG1hcmdpbiBvZiB0aGUgc2Nyb2xsIHNuYXAgYXJlYSB0aGF0IGlzIHVzZWQgZm9yIHNuYXBwaW5nIHRoaXMgYm94IHRvIHRoZSBzbmFwcG9ydC4gVGhlIHNjcm9sbCBzbmFwIGFyZWEgaXMgZGV0ZXJtaW5lZCBieSB0YWtpbmcgdGhlIHRyYW5zZm9ybWVkIGJvcmRlciBib3gsIGZpbmRpbmcgaXRzIHJlY3Rhbmd1bGFyIGJvdW5kaW5nIGJveCAoYXhpcy1hbGlnbmVkIGluIHRoZSBzY3JvbGwgY29udGFpbmVy4oCZcyBjb29yZGluYXRlIHNwYWNlKSwgdGhlbiBhZGRpbmcgdGhlIHNwZWNpZmllZCBvdXRzZXRzLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgICAgICAgICAgICAgU2FmYXJpICAgICAgICAgICAgICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjY4KiogIHwgICAgICAgICAgICAqKjE0LjEqKiAgICAgICAgICAgICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAgICAgICAgfCAgICAgICAgIHwgMTEgXyhzY3JvbGwtc25hcC1tYXJnaW4tcmlnaHQpXyB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9zY3JvbGwtbWFyZ2luLXJpZ2h0CiAgICovCiAgInNjcm9sbC1zbmFwLW1hcmdpbi1yaWdodCI/OiBQcm9wZXJ0eS5TY3JvbGxNYXJnaW5SaWdodDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYHNjcm9sbC1tYXJnaW4tdG9wYCBwcm9wZXJ0eSBkZWZpbmVzIHRoZSB0b3AgbWFyZ2luIG9mIHRoZSBzY3JvbGwgc25hcCBhcmVhIHRoYXQgaXMgdXNlZCBmb3Igc25hcHBpbmcgdGhpcyBib3ggdG8gdGhlIHNuYXBwb3J0LiBUaGUgc2Nyb2xsIHNuYXAgYXJlYSBpcyBkZXRlcm1pbmVkIGJ5IHRha2luZyB0aGUgdHJhbnNmb3JtZWQgYm9yZGVyIGJveCwgZmluZGluZyBpdHMgcmVjdGFuZ3VsYXIgYm91bmRpbmcgYm94IChheGlzLWFsaWduZWQgaW4gdGhlIHNjcm9sbCBjb250YWluZXLigJlzIGNvb3JkaW5hdGUgc3BhY2UpLCB0aGVuIGFkZGluZyB0aGUgc3BlY2lmaWVkIG91dHNldHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgICAgICAgICAgIFNhZmFyaSAgICAgICAgICAgICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2OSoqIHwgKio2OCoqICB8ICAgICAgICAgICAqKjE0LjEqKiAgICAgICAgICAgIHwgKio3OSoqIHwgTm8gIHwKICAgKiB8ICAgICAgICB8ICAgICAgICAgfCAxMSBfKHNjcm9sbC1zbmFwLW1hcmdpbi10b3ApXyB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9zY3JvbGwtbWFyZ2luLXRvcAogICAqLwogICJzY3JvbGwtc25hcC1tYXJnaW4tdG9wIj86IFByb3BlcnR5LlNjcm9sbE1hcmdpblRvcDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgc2Nyb2xsLXNuYXAtc3RvcGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB3aGV0aGVyIHRoZSBzY3JvbGwgY29udGFpbmVyIGlzIGFsbG93ZWQgdG8gInBhc3Mgb3ZlciIgcG9zc2libGUgc25hcCBwb3NpdGlvbnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgYWx3YXlzYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjc1KiogfCAgIE5vICAgIHwgKioxNSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbC1zbmFwLXN0b3AKICAgKi8KICAic2Nyb2xsLXNuYXAtc3RvcCI/OiBQcm9wZXJ0eS5TY3JvbGxTbmFwU3RvcCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgc2Nyb2xsLXNuYXAtdHlwZWAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgc3RyaWN0bHkgc25hcCBwb2ludHMgYXJlIGVuZm9yY2VkIG9uIHRoZSBzY3JvbGwgY29udGFpbmVyIGluIGNhc2UgdGhlcmUgaXMgb25lLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBbIHggfCB5IHwgYmxvY2sgfCBpbmxpbmUgfCBib3RoIF0gWyBtYW5kYXRvcnkgfCBwcm94aW1pdHkgXT9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICAgICBJRSAgICAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS0tLS0tLS06IHwKICAgKiB8ICoqNjkqKiB8ICAzOS02OCAgfCAqKjExKiogIHwgKio3OSoqIHwgKioxMCoqIF8teC1fIHwKICAgKiB8ICAgICAgICB8ICAgICAgICAgfCA5IF8teC1fIHwgICAgICAgIHwgICAgICAgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbC1zbmFwLXR5cGUKICAgKi8KICAic2Nyb2xsLXNuYXAtdHlwZSI/OiBQcm9wZXJ0eS5TY3JvbGxTbmFwVHlwZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgc2Nyb2xsYmFyLWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBjb2xvciBvZiB0aGUgc2Nyb2xsYmFyIHRyYWNrIGFuZCB0aHVtYi4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPGNvbG9yPnsyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8IEVkZ2UgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLTogfCA6LTogfAogICAqIHwgICBObyAgIHwgKio2NCoqICB8ICAgTm8gICB8ICBObyAgfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvc2Nyb2xsYmFyLWNvbG9yCiAgICovCiAgInNjcm9sbGJhci1jb2xvciI/OiBQcm9wZXJ0eS5TY3JvbGxiYXJDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgc2Nyb2xsYmFyLWd1dHRlcmAqKiBDU1MgcHJvcGVydHkgYWxsb3dzIGF1dGhvcnMgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgdGhlIHNjcm9sbGJhciwgcHJldmVudGluZyB1bndhbnRlZCBsYXlvdXQgY2hhbmdlcyBhcyB0aGUgY29udGVudCBncm93cyB3aGlsZSBhbHNvIGF2b2lkaW5nIHVubmVjZXNzYXJ5IHZpc3VhbHMgd2hlbiBzY3JvbGxpbmcgaXNuJ3QgbmVlZGVkLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBzdGFibGUgJiYgYm90aC1lZGdlcz9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjk0KiogfCAgIE5vICAgIHwgICBObyAgIHwgKio5NCoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbGJhci1ndXR0ZXIKICAgKi8KICAic2Nyb2xsYmFyLWd1dHRlciI/OiBQcm9wZXJ0eS5TY3JvbGxiYXJHdXR0ZXIgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHNjcm9sbGJhci13aWR0aGAqKiBwcm9wZXJ0eSBhbGxvd3MgdGhlIGF1dGhvciB0byBzZXQgdGhlIG1heGltdW0gdGhpY2tuZXNzIG9mIGFuIGVsZW1lbnTigJlzIHNjcm9sbGJhcnMgd2hlbiB0aGV5IGFyZSBzaG93bi4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgdGhpbiB8IG5vbmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCBFZGdlIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS06IHwgOi06IHwKICAgKiB8ICAgTm8gICB8ICoqNjQqKiAgfCAgIE5vICAgfCAgTm8gIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3Njcm9sbGJhci13aWR0aAogICAqLwogICJzY3JvbGxiYXItd2lkdGgiPzogUHJvcGVydHkuU2Nyb2xsYmFyV2lkdGggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHNoYXBlLWltYWdlLXRocmVzaG9sZGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgYWxwaGEgY2hhbm5lbCB0aHJlc2hvbGQgdXNlZCB0byBleHRyYWN0IHRoZSBzaGFwZSB1c2luZyBhbiBpbWFnZSBhcyB0aGUgdmFsdWUgZm9yIGBzaGFwZS1vdXRzaWRlYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8YWxwaGEtdmFsdWU+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwLjBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKiozNyoqIHwgKio2MioqICB8ICoqMTAuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3NoYXBlLWltYWdlLXRocmVzaG9sZAogICAqLwogICJzaGFwZS1pbWFnZS10aHJlc2hvbGQiPzogUHJvcGVydHkuU2hhcGVJbWFnZVRocmVzaG9sZCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgc2hhcGUtbWFyZ2luYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGEgbWFyZ2luIGZvciBhIENTUyBzaGFwZSBjcmVhdGVkIHVzaW5nIGBzaGFwZS1vdXRzaWRlYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoLXBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqMzcqKiB8ICoqNjIqKiAgfCAqKjEwLjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9zaGFwZS1tYXJnaW4KICAgKi8KICAic2hhcGUtbWFyZ2luIj86IFByb3BlcnR5LlNoYXBlTWFyZ2luPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBzaGFwZS1vdXRzaWRlYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIGEgc2hhcGXigJR3aGljaCBtYXkgYmUgbm9uLXJlY3Rhbmd1bGFy4oCUYXJvdW5kIHdoaWNoIGFkamFjZW50IGlubGluZSBjb250ZW50IHNob3VsZCB3cmFwLiBCeSBkZWZhdWx0LCBpbmxpbmUgY29udGVudCB3cmFwcyBhcm91bmQgaXRzIG1hcmdpbiBib3g7IGBzaGFwZS1vdXRzaWRlYCBwcm92aWRlcyBhIHdheSB0byBjdXN0b21pemUgdGhpcyB3cmFwcGluZywgbWFraW5nIGl0IHBvc3NpYmxlIHRvIHdyYXAgdGV4dCBhcm91bmQgY29tcGxleCBvYmplY3RzIHJhdGhlciB0aGFuIHNpbXBsZSBib3hlcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgWyA8c2hhcGUtYm94PiB8fCA8YmFzaWMtc2hhcGU+IF0gfCA8aW1hZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqMzcqKiB8ICoqNjIqKiAgfCAqKjEwLjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9zaGFwZS1vdXRzaWRlCiAgICovCiAgInNoYXBlLW91dHNpZGUiPzogUHJvcGVydHkuU2hhcGVPdXRzaWRlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0YWItc2l6ZWAqKiBDU1MgcHJvcGVydHkgaXMgdXNlZCB0byBjdXN0b21pemUgdGhlIHdpZHRoIG9mIHRhYiBjaGFyYWN0ZXJzIChVKzAwMDkpLgogICAqCiAgICogKipTeW50YXgqKjogYDxpbnRlZ2VyPiB8IDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGA4YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKioyMSoqIHwgKio5MSoqICB8ICoqNyoqICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAgICAgICAgfCA0IF8teC1fIHwgICAgICAgIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RhYi1zaXplCiAgICovCiAgInRhYi1zaXplIj86IFByb3BlcnR5LlRhYlNpemU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRhYmxlLWxheW91dGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgYWxnb3JpdGhtIHVzZWQgdG8gbGF5IG91dCBgPHRhYmxlPmAgY2VsbHMsIHJvd3MsIGFuZCBjb2x1bW5zLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBmaXhlZGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjE0KiogfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio1KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdGFibGUtbGF5b3V0CiAgICovCiAgInRhYmxlLWxheW91dCI/OiBQcm9wZXJ0eS5UYWJsZUxheW91dCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1hbGlnbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgaG9yaXpvbnRhbCBhbGlnbm1lbnQgb2YgYcKgYmxvY2sgZWxlbWVudCBvciB0YWJsZS1jZWxsIGJveC4gVGhpcyBtZWFucyBpdCB3b3JrcyBsaWtlIGB2ZXJ0aWNhbC1hbGlnbmAgYnV0IGluIHRoZSBob3Jpem9udGFsIGRpcmVjdGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGBzdGFydCB8IGVuZCB8IGxlZnQgfCByaWdodCB8IGNlbnRlciB8IGp1c3RpZnkgfCBtYXRjaC1wYXJlbnRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHN0YXJ0YCwgb3IgYSBuYW1lbGVzcyB2YWx1ZSB0aGF0IGFjdHMgYXMgYGxlZnRgIGlmIF9kaXJlY3Rpb25fIGlzIGBsdHJgLCBgcmlnaHRgIGlmIF9kaXJlY3Rpb25fIGlzIGBydGxgIGlmIGBzdGFydGAgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYnJvd3Nlci4KICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKiozKiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdGV4dC1hbGlnbgogICAqLwogICJ0ZXh0LWFsaWduIj86IFByb3BlcnR5LlRleHRBbGlnbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1hbGlnbi1sYXN0YCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyB0aGUgbGFzdCBsaW5lIG9mIGEgYmxvY2sgb3IgYSBsaW5lLCByaWdodCBiZWZvcmUgYSBmb3JjZWQgbGluZSBicmVhaywgaXMgYWxpZ25lZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgc3RhcnQgfCBlbmQgfCBsZWZ0IHwgcmlnaHQgfCBjZW50ZXIgfCBqdXN0aWZ5YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgICBJRSAgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS0tOiB8CiAgICogfCAqKjQ3KiogfCAqKjQ5KiogIHwgICBObyAgIHwgKioxMioqIHwgKio1LjUqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90ZXh0LWFsaWduLWxhc3QKICAgKi8KICAidGV4dC1hbGlnbi1sYXN0Ij86IFByb3BlcnR5LlRleHRBbGlnbkxhc3QgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtY29tYmluZS11cHJpZ2h0YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBjb21iaW5hdGlvbiBvZiBjaGFyYWN0ZXJzIGludG8gdGhlIHNwYWNlIG9mIGEgc2luZ2xlIGNoYXJhY3Rlci4gSWYgdGhlIGNvbWJpbmVkIHRleHQgaXMgd2lkZXIgdGhhbiAxZW0sIHRoZSB1c2VyIGFnZW50IG11c3QgZml0IHRoZSBjb250ZW50cyB3aXRoaW4gMWVtLiBUaGUgcmVzdWx0aW5nIGNvbXBvc2l0aW9uIGlzIHRyZWF0ZWQgYXMgYSBzaW5nbGUgdXByaWdodCBnbHlwaCBmb3IgbGF5b3V0IGFuZCBkZWNvcmF0aW9uLiBUaGlzIHByb3BlcnR5IG9ubHkgaGFzIGFuIGVmZmVjdCBpbiB2ZXJ0aWNhbCB3cml0aW5nIG1vZGVzLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBhbGwgfCBbIGRpZ2l0cyA8aW50ZWdlcj4/IF1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8ICAgICAgICAgICBDaHJvbWUgICAgICAgICAgIHwgRmlyZWZveCB8ICAgICAgICAgICAgICBTYWZhcmkgICAgICAgICAgICAgIHwgRWRnZSAgfCAgICAgICAgICAgICAgICAgICBJRSAgICAgICAgICAgICAgICAgICB8CiAgICogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOiB8IDotLS06IHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfAogICAqIHwgICAgICAgICAgICoqNDgqKiAgICAgICAgICAgfCAqKjQ4KiogIHwgKio1LjEqKiBfKC13ZWJraXQtdGV4dC1jb21iaW5lKV8gfCAxNS03OSB8ICoqMTEqKiBfKC1tcy10ZXh0LWNvbWJpbmUtaG9yaXpvbnRhbClfIHwKICAgKiB8IDkgXygtd2Via2l0LXRleHQtY29tYmluZSlfIHwgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90ZXh0LWNvbWJpbmUtdXByaWdodAogICAqLwogICJ0ZXh0LWNvbWJpbmUtdXByaWdodCI/OiBQcm9wZXJ0eS5UZXh0Q29tYmluZVVwcmlnaHQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtZGVjb3JhdGlvbi1jb2xvcmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgY29sb3Igb2YgZGVjb3JhdGlvbnMgYWRkZWQgdG8gdGV4dCBieSBgdGV4dC1kZWNvcmF0aW9uLWxpbmVgLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGN1cnJlbnRjb2xvcmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjM2KiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqIHwgICAgICAgIHwgICAgICAgICB8IDggXy14LV8gIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtZGVjb3JhdGlvbi1jb2xvcgogICAqLwogICJ0ZXh0LWRlY29yYXRpb24tY29sb3IiPzogUHJvcGVydHkuVGV4dERlY29yYXRpb25Db2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1kZWNvcmF0aW9uLWxpbmVgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGtpbmQgb2YgZGVjb3JhdGlvbiB0aGF0IGlzIHVzZWQgb24gdGV4dCBpbiBhbiBlbGVtZW50LCBzdWNoIGFzIGFuIHVuZGVybGluZSBvciBvdmVybGluZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgWyB1bmRlcmxpbmUgfHwgb3ZlcmxpbmUgfHwgbGluZS10aHJvdWdoIHx8IGJsaW5rIF0gfCBzcGVsbGluZy1lcnJvciB8IGdyYW1tYXItZXJyb3JgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio1NyoqIHwgKiozNioqICB8ICoqMTIuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKiB8ICAgICAgICB8ICAgICAgICAgfCA4IF8teC1fICB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90ZXh0LWRlY29yYXRpb24tbGluZQogICAqLwogICJ0ZXh0LWRlY29yYXRpb24tbGluZSI/OiBQcm9wZXJ0eS5UZXh0RGVjb3JhdGlvbkxpbmUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtZGVjb3JhdGlvbi1za2lwYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoYXQgcGFydHMgb2YgYW4gZWxlbWVudOKAmXMgY29udGVudCBhbnkgdGV4dCBkZWNvcmF0aW9uIGFmZmVjdGluZyB0aGUgZWxlbWVudCBtdXN0IHNraXAgb3Zlci4gSXQgY29udHJvbHMgYWxsIHRleHQgZGVjb3JhdGlvbiBsaW5lcyBkcmF3biBieSB0aGUgZWxlbWVudCBhbmQgYWxzbyBhbnkgdGV4dCBkZWNvcmF0aW9uIGxpbmVzIGRyYXduIGJ5IGl0cyBhbmNlc3RvcnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IFsgb2JqZWN0cyB8fCBbIHNwYWNlcyB8IFsgbGVhZGluZy1zcGFjZXMgfHwgdHJhaWxpbmctc3BhY2VzIF0gXSB8fCBlZGdlcyB8fCBib3gtZGVjb3JhdGlvbiBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBvYmplY3RzYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCBFZGdlIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLTogfCA6LTogfAogICAqIHwgNTctNjQgIHwgICBObyAgICB8ICoqMTIuMSoqIHwgIE5vICB8IE5vICB8CiAgICogfCAgICAgICAgfCAgICAgICAgIHwgNyBfLXgtXyAgfCAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtZGVjb3JhdGlvbi1za2lwCiAgICovCiAgInRleHQtZGVjb3JhdGlvbi1za2lwIj86IFByb3BlcnR5LlRleHREZWNvcmF0aW9uU2tpcCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1kZWNvcmF0aW9uLXNraXAtaW5rYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgaG93IG92ZXJsaW5lcyBhbmQgdW5kZXJsaW5lcyBhcmUgZHJhd24gd2hlbiB0aGV5IHBhc3Mgb3ZlciBnbHlwaCBhc2NlbmRlcnMgYW5kIGRlc2NlbmRlcnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IGFsbCB8IG5vbmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY0KiogfCAqKjcwKiogIHwgICBObyAgIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtZGVjb3JhdGlvbi1za2lwLWluawogICAqLwogICJ0ZXh0LWRlY29yYXRpb24tc2tpcC1pbmsiPzogUHJvcGVydHkuVGV4dERlY29yYXRpb25Ta2lwSW5rIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LWRlY29yYXRpb24tc3R5bGVgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHN0eWxlIG9mIHRoZSBsaW5lcyBzcGVjaWZpZWQgYnkgYHRleHQtZGVjb3JhdGlvbi1saW5lYC4gVGhlIHN0eWxlIGFwcGxpZXMgdG8gYWxsIGxpbmVzIHRoYXQgYXJlIHNldCB3aXRoIGB0ZXh0LWRlY29yYXRpb24tbGluZWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgc29saWQgfCBkb3VibGUgfCBkb3R0ZWQgfCBkYXNoZWQgfCB3YXZ5YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzb2xpZGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjM2KiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqIHwgICAgICAgIHwgICAgICAgICB8IDggXy14LV8gIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtZGVjb3JhdGlvbi1zdHlsZQogICAqLwogICJ0ZXh0LWRlY29yYXRpb24tc3R5bGUiPzogUHJvcGVydHkuVGV4dERlY29yYXRpb25TdHlsZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1kZWNvcmF0aW9uLXRoaWNrbmVzc2AqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgc3Ryb2tlIHRoaWNrbmVzcyBvZiB0aGUgZGVjb3JhdGlvbiBsaW5lIHRoYXQgaXMgdXNlZCBvbiB0ZXh0IGluIGFuIGVsZW1lbnQsIHN1Y2ggYXMgYSBsaW5lLXRocm91Z2gsIHVuZGVybGluZSwgb3Igb3ZlcmxpbmUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IGZyb20tZm9udCB8IDxsZW5ndGg+IHwgPHBlcmNlbnRhZ2U+IGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg5KiogfCAqKjcwKiogIHwgKioxMi4xKiogfCAqKjg5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdGV4dC1kZWNvcmF0aW9uLXRoaWNrbmVzcwogICAqLwogICJ0ZXh0LWRlY29yYXRpb24tdGhpY2tuZXNzIj86IFByb3BlcnR5LlRleHREZWNvcmF0aW9uVGhpY2tuZXNzPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LWRlY29yYXRpb24tdGhpY2tuZXNzYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBzdHJva2UgdGhpY2tuZXNzIG9mIHRoZSBkZWNvcmF0aW9uIGxpbmUgdGhhdCBpcyB1c2VkIG9uIHRleHQgaW4gYW4gZWxlbWVudCwgc3VjaCBhcyBhIGxpbmUtdGhyb3VnaCwgdW5kZXJsaW5lLCBvciBvdmVybGluZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgZnJvbS1mb250IHwgPGxlbmd0aD4gfCA8cGVyY2VudGFnZT4gYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tOiB8IDotOiB8CiAgICogfCA4Ny04OSAgfCAqKjcwKiogIHwgKioxMi4xKiogfCA4Ny04OSB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90ZXh0LWRlY29yYXRpb24tdGhpY2tuZXNzCiAgICovCiAgInRleHQtZGVjb3JhdGlvbi13aWR0aCI/OiBQcm9wZXJ0eS5UZXh0RGVjb3JhdGlvblRoaWNrbmVzczxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1lbXBoYXNpcy1jb2xvcmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgY29sb3Igb2YgZW1waGFzaXMgbWFya3MuIFRoaXMgdmFsdWUgY2FuIGFsc28gYmUgc2V0IHVzaW5nIHRoZSBgdGV4dC1lbXBoYXNpc2Agc2hvcnRoYW5kLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGN1cnJlbnRjb2xvcmAKICAgKgogICAqIHwgICAgQ2hyb21lICAgIHwgRmlyZWZveCB8IFNhZmFyaSB8ICAgICBFZGdlICAgICB8IElFICB8CiAgICogfCA6LS0tLS0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS0tLS0tLS06IHwgOi06IHwKICAgKiB8ICoqMjUqKiBfLXgtXyB8ICoqNDYqKiAgfCAqKjcqKiAgfCAqKjc5KiogXy14LV8gfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdGV4dC1lbXBoYXNpcy1jb2xvcgogICAqLwogICJ0ZXh0LWVtcGhhc2lzLWNvbG9yIj86IFByb3BlcnR5LlRleHRFbXBoYXNpc0NvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LWVtcGhhc2lzLXBvc2l0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXJlIGVtcGhhc2lzIG1hcmtzIGFyZSBkcmF3bi4gTGlrZSBydWJ5IHRleHQsIGlmIHRoZXJlIGlzbid0IGVub3VnaCByb29tIGZvciBlbXBoYXNpcyBtYXJrcywgdGhlIGxpbmUgaGVpZ2h0IGlzIGluY3JlYXNlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIG92ZXIgfCB1bmRlciBdICYmIFsgcmlnaHQgfCBsZWZ0IF1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG92ZXIgcmlnaHRgCiAgICoKICAgKiB8ICAgIENocm9tZSAgICB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgICAgRWRnZSAgICAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tLS0tLS0tOiB8IDotOiB8CiAgICogfCAqKjI1KiogXy14LV8gfCAqKjQ2KiogIHwgKio3KiogIHwgKio3OSoqIF8teC1fIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtZW1waGFzaXMtcG9zaXRpb24KICAgKi8KICAidGV4dC1lbXBoYXNpcy1wb3NpdGlvbiI/OiBQcm9wZXJ0eS5UZXh0RW1waGFzaXNQb3NpdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1lbXBoYXNpcy1zdHlsZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgYXBwZWFyYW5jZSBvZiBlbXBoYXNpcyBtYXJrcy4gSXQgY2FuIGFsc28gYmUgc2V0LCBhbmQgcmVzZXQsIHVzaW5nIHRoZSBgdGV4dC1lbXBoYXNpc2Agc2hvcnRoYW5kLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBbIFsgZmlsbGVkIHwgb3BlbiBdIHx8IFsgZG90IHwgY2lyY2xlIHwgZG91YmxlLWNpcmNsZSB8IHRyaWFuZ2xlIHwgc2VzYW1lIF0gXSB8IDxzdHJpbmc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCAgICBDaHJvbWUgICAgfCBGaXJlZm94IHwgU2FmYXJpIHwgICAgIEVkZ2UgICAgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLS0tLS0tLTogfCA6LTogfAogICAqIHwgKioyNSoqIF8teC1fIHwgKio0NioqICB8ICoqNyoqICB8ICoqNzkqKiBfLXgtXyB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90ZXh0LWVtcGhhc2lzLXN0eWxlCiAgICovCiAgInRleHQtZW1waGFzaXMtc3R5bGUiPzogUHJvcGVydHkuVGV4dEVtcGhhc2lzU3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtaW5kZW50YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBsZW5ndGggb2YgZW1wdHkgc3BhY2UgKGluZGVudGF0aW9uKSB0aGF0IGlzIHB1dCBiZWZvcmUgbGluZXMgb2YgdGV4dCBpbiBhIGJsb2NrLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGgtcGVyY2VudGFnZT4gJiYgaGFuZ2luZz8gJiYgZWFjaC1saW5lP2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKiozKiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdGV4dC1pbmRlbnQKICAgKi8KICAidGV4dC1pbmRlbnQiPzogUHJvcGVydHkuVGV4dEluZGVudDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1qdXN0aWZ5YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoYXQgdHlwZSBvZiBqdXN0aWZpY2F0aW9uIHNob3VsZCBiZSBhcHBsaWVkIHRvIHRleHQgd2hlbiBgdGV4dC1hbGlnbmBgOiBqdXN0aWZ5O2AgaXMgc2V0IG9uIGFuIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IGludGVyLWNoYXJhY3RlciB8IGludGVyLXdvcmQgfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgIG4vYSAgIHwgKio1NSoqICB8ICAgTm8gICB8ICoqMTIqKiB8ICoqMTEqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90ZXh0LWp1c3RpZnkKICAgKi8KICAidGV4dC1qdXN0aWZ5Ij86IFByb3BlcnR5LlRleHRKdXN0aWZ5IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LW9yaWVudGF0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBvcmllbnRhdGlvbiBvZiB0aGUgdGV4dCBjaGFyYWN0ZXJzIGluIGEgbGluZS4gSXQgb25seSBhZmZlY3RzIHRleHQgaW4gdmVydGljYWwgbW9kZSAod2hlbiBgd3JpdGluZy1tb2RlYCBpcyBub3QgYGhvcml6b250YWwtdGJgKS4gSXQgaXMgdXNlZnVsIGZvciBjb250cm9sbGluZyB0aGUgZGlzcGxheSBvZiBsYW5ndWFnZXMgdGhhdCB1c2UgdmVydGljYWwgc2NyaXB0LCBhbmQgYWxzbyBmb3IgbWFraW5nIHZlcnRpY2FsIHRhYmxlIGhlYWRlcnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbWl4ZWQgfCB1cHJpZ2h0IHwgc2lkZXdheXNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG1peGVkYAogICAqCiAgICogfCAgQ2hyb21lICB8IEZpcmVmb3ggfCAgU2FmYXJpICAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICAqKjQ4KiogIHwgKio0MSoqICB8ICAqKjE0KiogICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCAxMSBfLXgtXyB8ICAgICAgICAgfCA1LjEgXy14LV8gfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdGV4dC1vcmllbnRhdGlvbgogICAqLwogICJ0ZXh0LW9yaWVudGF0aW9uIj86IFByb3BlcnR5LlRleHRPcmllbnRhdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1vdmVyZmxvd2AqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgaGlkZGVuIG92ZXJmbG93IGNvbnRlbnQgaXMgc2lnbmFsZWQgdG8gdXNlcnMuIEl0IGNhbiBiZSBjbGlwcGVkLCBkaXNwbGF5IGFuIGVsbGlwc2lzICgnYOKApmAnKSwgb3IgZGlzcGxheSBhIGN1c3RvbSBzdHJpbmcuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyBjbGlwIHwgZWxsaXBzaXMgfCA8c3RyaW5nPiBdezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGNsaXBgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKio3KiogIHwgKioxLjMqKiB8ICoqMTIqKiB8ICoqNioqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtb3ZlcmZsb3cKICAgKi8KICAidGV4dC1vdmVyZmxvdyI/OiBQcm9wZXJ0eS5UZXh0T3ZlcmZsb3cgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtcmVuZGVyaW5nYCoqIENTUyBwcm9wZXJ0eSBwcm92aWRlcyBpbmZvcm1hdGlvbiB0byB0aGUgcmVuZGVyaW5nIGVuZ2luZSBhYm91dCB3aGF0IHRvIG9wdGltaXplIGZvciB3aGVuIHJlbmRlcmluZyB0ZXh0LgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBvcHRpbWl6ZVNwZWVkIHwgb3B0aW1pemVMZWdpYmlsaXR5IHwgZ2VvbWV0cmljUHJlY2lzaW9uYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio0KiogIHwgICoqMSoqICB8ICoqNSoqICB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90ZXh0LXJlbmRlcmluZwogICAqLwogICJ0ZXh0LXJlbmRlcmluZyI/OiBQcm9wZXJ0eS5UZXh0UmVuZGVyaW5nIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LXNoYWRvd2AqKiBDU1MgcHJvcGVydHkgYWRkcyBzaGFkb3dzIHRvIHRleHQuIEl0IGFjY2VwdHMgYSBjb21tYS1zZXBhcmF0ZWQgbGlzdCBvZiBzaGFkb3dzIHRvIGJlIGFwcGxpZWQgdG8gdGhlIHRleHQgYW5kIGFueSBvZiBpdHMgYGRlY29yYXRpb25zYC4gRWFjaCBzaGFkb3cgaXMgZGVzY3JpYmVkIGJ5IHNvbWUgY29tYmluYXRpb24gb2YgWCBhbmQgWSBvZmZzZXRzIGZyb20gdGhlIGVsZW1lbnQsIGJsdXIgcmFkaXVzLCBhbmQgY29sb3IuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxzaGFkb3ctdD4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjIqKiAgfCAqKjMuNSoqIHwgKioxLjEqKiB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90ZXh0LXNoYWRvdwogICAqLwogICJ0ZXh0LXNoYWRvdyI/OiBQcm9wZXJ0eS5UZXh0U2hhZG93IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LXNpemUtYWRqdXN0YCoqIENTUyBwcm9wZXJ0eSBjb250cm9scyB0aGUgdGV4dCBpbmZsYXRpb24gYWxnb3JpdGhtIHVzZWQgb24gc29tZSBzbWFydHBob25lcyBhbmQgdGFibGV0cy4gT3RoZXIgYnJvd3NlcnMgd2lsbCBpZ25vcmUgdGhpcyBwcm9wZXJ0eS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgYXV0byB8IDxwZXJjZW50YWdlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AgZm9yIHNtYXJ0cGhvbmUgYnJvd3NlcnMgc3VwcG9ydGluZyBpbmZsYXRpb24sIGBub25lYCBpbiBvdGhlciBjYXNlcyAoYW5kIHRoZW4gbm90IG1vZGlmaWFibGUpLgogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio1NCoqIHwgICBObyAgICB8ICAgTm8gICB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90ZXh0LXNpemUtYWRqdXN0CiAgICovCiAgInRleHQtc2l6ZS1hZGp1c3QiPzogUHJvcGVydHkuVGV4dFNpemVBZGp1c3QgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtdHJhbnNmb3JtYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgaG93IHRvIGNhcGl0YWxpemUgYW4gZWxlbWVudCdzIHRleHQuIEl0IGNhbiBiZSB1c2VkIHRvIG1ha2UgdGV4dCBhcHBlYXIgaW4gYWxsLXVwcGVyY2FzZSBvciBhbGwtbG93ZXJjYXNlLCBvciB3aXRoIGVhY2ggd29yZCBjYXBpdGFsaXplZC4gSXQgYWxzbyBjYW4gaGVscCBpbXByb3ZlIGxlZ2liaWxpdHkgZm9yIHJ1YnkuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IGNhcGl0YWxpemUgfCB1cHBlcmNhc2UgfCBsb3dlcmNhc2UgfCBmdWxsLXdpZHRoIHwgZnVsbC1zaXplLWthbmFgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtdHJhbnNmb3JtCiAgICovCiAgInRleHQtdHJhbnNmb3JtIj86IFByb3BlcnR5LlRleHRUcmFuc2Zvcm0gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtdW5kZXJsaW5lLW9mZnNldGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgb2Zmc2V0IGRpc3RhbmNlIG9mIGFuIHVuZGVybGluZSB0ZXh0IGRlY29yYXRpb24gbGluZSAoYXBwbGllZCB1c2luZyBgdGV4dC1kZWNvcmF0aW9uYCkgZnJvbSBpdHMgb3JpZ2luYWwgcG9zaXRpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IDxsZW5ndGg+IHwgPHBlcmNlbnRhZ2U+IGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg3KiogfCAqKjcwKiogIHwgKioxMi4xKiogfCAqKjg3KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdGV4dC11bmRlcmxpbmUtb2Zmc2V0CiAgICovCiAgInRleHQtdW5kZXJsaW5lLW9mZnNldCI/OiBQcm9wZXJ0eS5UZXh0VW5kZXJsaW5lT2Zmc2V0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LXVuZGVybGluZS1wb3NpdGlvbmAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHRoZSBwb3NpdGlvbiBvZiB0aGUgdW5kZXJsaW5lIHdoaWNoIGlzIHNldCB1c2luZyB0aGUgYHRleHQtZGVjb3JhdGlvbmAgcHJvcGVydHkncyBgdW5kZXJsaW5lYCB2YWx1ZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgZnJvbS1mb250IHwgWyB1bmRlciB8fCBbIGxlZnQgfCByaWdodCBdIF1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMzMqKiB8ICoqNzQqKiAgfCAqKjEyLjEqKiB8ICoqMTIqKiB8ICoqNioqIHwKICAgKiB8ICAgICAgICB8ICAgICAgICAgfCA5IF8teC1fICB8ICAgICAgICB8ICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RleHQtdW5kZXJsaW5lLXBvc2l0aW9uCiAgICovCiAgInRleHQtdW5kZXJsaW5lLXBvc2l0aW9uIj86IFByb3BlcnR5LlRleHRVbmRlcmxpbmVQb3NpdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdG9wYCoqIENTUyBwcm9wZXJ0eSBwYXJ0aWNpcGF0ZXMgaW4gc3BlY2lmeWluZyB0aGUgdmVydGljYWwgcG9zaXRpb24gb2YgYSBwb3NpdGlvbmVkIGVsZW1lbnQuIEl0IGhhcyBubyBlZmZlY3Qgb24gbm9uLXBvc2l0aW9uZWQgZWxlbWVudHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD4gfCA8cGVyY2VudGFnZT4gfCBhdXRvYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjUqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90b3AKICAgKi8KICB0b3A/OiBQcm9wZXJ0eS5Ub3A8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRvdWNoLWFjdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgYW4gZWxlbWVudCdzIHJlZ2lvbiBjYW4gYmUgbWFuaXB1bGF0ZWQgYnkgYSB0b3VjaHNjcmVlbiB1c2VyIChmb3IgZXhhbXBsZSwgYnkgem9vbWluZyBmZWF0dXJlcyBidWlsdCBpbnRvIHRoZSBicm93c2VyKS4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgbm9uZSB8IFsgWyBwYW4teCB8IHBhbi1sZWZ0IHwgcGFuLXJpZ2h0IF0gfHwgWyBwYW4teSB8IHBhbi11cCB8IHBhbi1kb3duIF0gfHwgcGluY2gtem9vbSBdIHwgbWFuaXB1bGF0aW9uYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgICAgSUUgICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS0tLS06IHwKICAgKiB8ICoqMzYqKiB8ICoqNTIqKiAgfCAqKjEzKiogfCAqKjEyKiogfCAgKioxMSoqICB8CiAgICogfCAgICAgICAgfCAgICAgICAgIHwgICAgICAgIHwgICAgICAgIHwgMTAgXy14LV8gfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdG91Y2gtYWN0aW9uCiAgICovCiAgInRvdWNoLWFjdGlvbiI/OiBQcm9wZXJ0eS5Ub3VjaEFjdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNmb3JtYCoqIENTUyBwcm9wZXJ0eSBsZXRzIHlvdSByb3RhdGUsIHNjYWxlLCBza2V3LCBvciB0cmFuc2xhdGUgYW4gZWxlbWVudC4gSXQgbW9kaWZpZXMgdGhlIGNvb3JkaW5hdGUgc3BhY2Ugb2YgdGhlIENTUyB2aXN1YWwgZm9ybWF0dGluZyBtb2RlbC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPHRyYW5zZm9ybS1saXN0PmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCAgU2FmYXJpICAgfCAgRWRnZSAgfCAgIElFICAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS06IHwgOi0tLS06IHwgOi0tLS0tOiB8CiAgICogfCAqKjM2KiogIHwgKioxNioqICB8ICAgKio5KiogICB8ICoqMTIqKiB8ICoqMTAqKiAgfAogICAqIHwgMSBfLXgtXyB8ICAgICAgICAgfCAzLjEgXy14LV8gfCAgICAgICAgfCA5IF8teC1fIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RyYW5zZm9ybQogICAqLwogIHRyYW5zZm9ybT86IFByb3BlcnR5LlRyYW5zZm9ybSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNmb3JtLWJveGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbGF5b3V0IGJveCB0byB3aGljaCB0aGUgYHRyYW5zZm9ybWAgYW5kIGB0cmFuc2Zvcm0tb3JpZ2luYCBwcm9wZXJ0aWVzIHJlbGF0ZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBjb250ZW50LWJveCB8IGJvcmRlci1ib3ggfCBmaWxsLWJveCB8IHN0cm9rZS1ib3ggfCB2aWV3LWJveGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgdmlldy1ib3hgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY0KiogfCAqKjU1KiogIHwgKioxMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RyYW5zZm9ybS1ib3gKICAgKi8KICAidHJhbnNmb3JtLWJveCI/OiBQcm9wZXJ0eS5UcmFuc2Zvcm1Cb3ggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zZm9ybS1vcmlnaW5gKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG9yaWdpbiBmb3IgYW4gZWxlbWVudCdzIHRyYW5zZm9ybWF0aW9ucy4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDxsZW5ndGgtcGVyY2VudGFnZT4gfCBsZWZ0IHwgY2VudGVyIHwgcmlnaHQgfCB0b3AgfCBib3R0b20gXSB8IFsgWyA8bGVuZ3RoLXBlcmNlbnRhZ2U+IHwgbGVmdCB8IGNlbnRlciB8IHJpZ2h0IF0gJiYgWyA8bGVuZ3RoLXBlcmNlbnRhZ2U+IHwgdG9wIHwgY2VudGVyIHwgYm90dG9tIF0gXSA8bGVuZ3RoPj9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDUwJSA1MCUgMGAKICAgKgogICAqIHwgQ2hyb21lICB8ICBGaXJlZm94ICB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgIElFICAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS0tOiB8CiAgICogfCAqKjM2KiogIHwgICoqMTYqKiAgIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTAqKiAgfAogICAqIHwgMSBfLXgtXyB8IDMuNSBfLXgtXyB8IDIgXy14LV8gfCAgICAgICAgfCA5IF8teC1fIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RyYW5zZm9ybS1vcmlnaW4KICAgKi8KICAidHJhbnNmb3JtLW9yaWdpbiI/OiBQcm9wZXJ0eS5UcmFuc2Zvcm1PcmlnaW48VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zZm9ybS1zdHlsZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIGNoaWxkcmVuIG9mIGFuIGVsZW1lbnQgYXJlIHBvc2l0aW9uZWQgaW4gdGhlIDNEIHNwYWNlIG9yIGFyZSBmbGF0dGVuZWQgaW4gdGhlIHBsYW5lIG9mIHRoZSBlbGVtZW50LgogICAqCiAgICogKipTeW50YXgqKjogYGZsYXQgfCBwcmVzZXJ2ZS0zZGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgZmxhdGAKICAgKgogICAqIHwgIENocm9tZSAgfCBGaXJlZm94ICB8IFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgICoqMzYqKiAgfCAgKioxNioqICB8ICAqKjkqKiAgfCAqKjEyKiogfCBObyAgfAogICAqIHwgMTIgXy14LV8gfCAxMCBfLXgtXyB8IDQgXy14LV8gfCAgICAgICAgfCAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdHJhbnNmb3JtLXN0eWxlCiAgICovCiAgInRyYW5zZm9ybS1zdHlsZSI/OiBQcm9wZXJ0eS5UcmFuc2Zvcm1TdHlsZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNpdGlvbi1kZWxheWAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHRoZSBkdXJhdGlvbiB0byB3YWl0IGJlZm9yZSBzdGFydGluZyBhIHByb3BlcnR5J3MgdHJhbnNpdGlvbiBlZmZlY3Qgd2hlbiBpdHMgdmFsdWUgY2hhbmdlcy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8dGltZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwc2AKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjI2KiogIHwgKioxNioqICB8ICAqKjkqKiAgfCAqKjEyKiogfCAqKjEwKiogfAogICAqIHwgMSBfLXgtXyB8IDQgXy14LV8gfCA0IF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RyYW5zaXRpb24tZGVsYXkKICAgKi8KICAidHJhbnNpdGlvbi1kZWxheSI/OiBQcm9wZXJ0eS5UcmFuc2l0aW9uRGVsYXk8VFRpbWU+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2l0aW9uLWR1cmF0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBsZW5ndGggb2YgdGltZSBhIHRyYW5zaXRpb24gYW5pbWF0aW9uIHNob3VsZCB0YWtlIHRvIGNvbXBsZXRlLiBCeSBkZWZhdWx0LCB0aGUgdmFsdWUgaXMgYDBzYCwgbWVhbmluZyB0aGF0IG5vIGFuaW1hdGlvbiB3aWxsIG9jY3VyLgogICAqCiAgICogKipTeW50YXgqKjogYDx0aW1lPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBzYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8ICBTYWZhcmkgICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjI2KiogIHwgKioxNioqICB8ICAgKio5KiogICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAxIF8teC1fIHwgNCBfLXgtXyB8IDMuMSBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90cmFuc2l0aW9uLWR1cmF0aW9uCiAgICovCiAgInRyYW5zaXRpb24tZHVyYXRpb24iPzogUHJvcGVydHkuVHJhbnNpdGlvbkR1cmF0aW9uPFRUaW1lPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNpdGlvbi1wcm9wZXJ0eWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgQ1NTIHByb3BlcnRpZXMgdG8gd2hpY2ggYSB0cmFuc2l0aW9uIGVmZmVjdCBzaG91bGQgYmUgYXBwbGllZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPHNpbmdsZS10cmFuc2l0aW9uLXByb3BlcnR5PiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYWxsCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgIFNhZmFyaSAgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqMjYqKiAgfCAqKjE2KiogIHwgICAqKjkqKiAgIHwgKioxMioqIHwgKioxMCoqIHwKICAgKiB8IDEgXy14LV8gfCA0IF8teC1fIHwgMy4xIF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3RyYW5zaXRpb24tcHJvcGVydHkKICAgKi8KICAidHJhbnNpdGlvbi1wcm9wZXJ0eSI/OiBQcm9wZXJ0eS5UcmFuc2l0aW9uUHJvcGVydHkgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBpbnRlcm1lZGlhdGUgdmFsdWVzIGFyZSBjYWxjdWxhdGVkIGZvciBDU1MgcHJvcGVydGllcyBiZWluZyBhZmZlY3RlZCBieSBhIHRyYW5zaXRpb24gZWZmZWN0LgogICAqCiAgICogKipTeW50YXgqKjogYDxlYXNpbmctZnVuY3Rpb24+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgZWFzZWAKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCAgU2FmYXJpICAgfCAgRWRnZSAgfCAgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfAogICAqIHwgKioyNioqICB8ICoqMTYqKiAgfCAgICoqOSoqICAgfCAqKjEyKiogfCAqKjEwKiogfAogICAqIHwgMSBfLXgtXyB8IDQgXy14LV8gfCAzLjEgXy14LV8gfCAgICAgICAgfCAgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb24KICAgKi8KICAidHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb24iPzogUHJvcGVydHkuVHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2xhdGVgKiogQ1NTIHByb3BlcnR5IGFsbG93cyB5b3UgdG8gc3BlY2lmeSB0cmFuc2xhdGlvbiB0cmFuc2Zvcm1zIGluZGl2aWR1YWxseSBhbmQgaW5kZXBlbmRlbnRseSBvZiB0aGUgYHRyYW5zZm9ybWAgcHJvcGVydHkuIFRoaXMgbWFwcyBiZXR0ZXIgdG8gdHlwaWNhbCB1c2VyIGludGVyZmFjZSB1c2FnZSwgYW5kIHNhdmVzIGhhdmluZyB0byByZW1lbWJlciB0aGUgZXhhY3Qgb3JkZXIgb2YgdHJhbnNmb3JtIGZ1bmN0aW9ucyB0byBzcGVjaWZ5IGluIHRoZSBgdHJhbnNmb3JtYCB2YWx1ZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPGxlbmd0aC1wZXJjZW50YWdlPiBbIDxsZW5ndGgtcGVyY2VudGFnZT4gPGxlbmd0aD4/IF0/YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCBFZGdlIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLTogfCA6LTogfAogICAqIHwgICBObyAgIHwgKio3MioqICB8ICoqMTQuMSoqIHwgIE5vICB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90cmFuc2xhdGUKICAgKi8KICB0cmFuc2xhdGU/OiBQcm9wZXJ0eS5UcmFuc2xhdGU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHVuaWNvZGUtYmlkaWAqKiBDU1MgcHJvcGVydHksIHRvZ2V0aGVyIHdpdGggdGhlIGBkaXJlY3Rpb25gIHByb3BlcnR5LCBkZXRlcm1pbmVzIGhvdyBiaWRpcmVjdGlvbmFsIHRleHQgaW4gYSBkb2N1bWVudCBpcyBoYW5kbGVkLiBGb3IgZXhhbXBsZSwgaWYgYSBibG9jayBvZiBjb250ZW50IGNvbnRhaW5zIGJvdGggbGVmdC10by1yaWdodCBhbmQgcmlnaHQtdG8tbGVmdCB0ZXh0LCB0aGUgdXNlci1hZ2VudCB1c2VzIGEgY29tcGxleCBVbmljb2RlIGFsZ29yaXRobSB0byBkZWNpZGUgaG93IHRvIGRpc3BsYXkgdGhlIHRleHQuIFRoZSBgdW5pY29kZS1iaWRpYCBwcm9wZXJ0eSBvdmVycmlkZXMgdGhpcyBhbGdvcml0aG0gYW5kIGFsbG93cyB0aGUgZGV2ZWxvcGVyIHRvIGNvbnRyb2wgdGhlIHRleHQgZW1iZWRkaW5nLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IGVtYmVkIHwgaXNvbGF0ZSB8IGJpZGktb3ZlcnJpZGUgfCBpc29sYXRlLW92ZXJyaWRlIHwgcGxhaW50ZXh0YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tLTogfAogICAqIHwgKioyKiogIHwgICoqMSoqICB8ICoqMS4zKiogfCAqKjEyKiogfCAqKjUuNSoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3VuaWNvZGUtYmlkaQogICAqLwogICJ1bmljb2RlLWJpZGkiPzogUHJvcGVydHkuVW5pY29kZUJpZGkgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKnVzZXItc2VsZWN0KipgIENTUyBwcm9wZXJ0eSBjb250cm9scyB3aGV0aGVyIHRoZSB1c2VyIGNhbiBzZWxlY3QgdGV4dC4gVGhpcyBkb2Vzbid0IGhhdmUgYW55IGVmZmVjdCBvbiBjb250ZW50IGxvYWRlZCBhcyBjaHJvbWUsIGV4Y2VwdCBpbiB0ZXh0Ym94ZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IHRleHQgfCBub25lIHwgY29udGFpbiB8IGFsbGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCAgIFNhZmFyaSAgICB8ICAgRWRnZSAgIHwgICAgICBJRSAgICAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tLS0tLS0tOiB8CiAgICogfCAqKjU0KiogIHwgKio2OSoqICB8ICoqMyoqIF8teC1fIHwgICoqNzkqKiAgfCAqKjEwKiogXy14LV8gfAogICAqIHwgMSBfLXgtXyB8IDEgXy14LV8gfCAgICAgICAgICAgICB8IDEyIF8teC1fIHwgICAgICAgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3VzZXItc2VsZWN0CiAgICovCiAgInVzZXItc2VsZWN0Ij86IFByb3BlcnR5LlVzZXJTZWxlY3QgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHZlcnRpY2FsLWFsaWduYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHZlcnRpY2FsIGFsaWdubWVudCBvZiBhbiBpbmxpbmUsIGlubGluZS1ibG9jayBvciB0YWJsZS1jZWxsIGJveC4KICAgKgogICAqICoqU3ludGF4Kio6IGBiYXNlbGluZSB8IHN1YiB8IHN1cGVyIHwgdGV4dC10b3AgfCB0ZXh0LWJvdHRvbSB8IG1pZGRsZSB8IHRvcCB8IGJvdHRvbSB8IDxwZXJjZW50YWdlPiB8IDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBiYXNlbGluZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdmVydGljYWwtYWxpZ24KICAgKi8KICAidmVydGljYWwtYWxpZ24iPzogUHJvcGVydHkuVmVydGljYWxBbGlnbjxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdmlzaWJpbGl0eWAqKiBDU1MgcHJvcGVydHkgc2hvd3Mgb3IgaGlkZXMgYW4gZWxlbWVudCB3aXRob3V0IGNoYW5naW5nIHRoZSBsYXlvdXQgb2YgYSBkb2N1bWVudC4gVGhlIHByb3BlcnR5IGNhbiBhbHNvIGhpZGUgcm93cyBvciBjb2x1bW5zIGluIGEgYDx0YWJsZT5gLgogICAqCiAgICogKipTeW50YXgqKjogYHZpc2libGUgfCBoaWRkZW4gfCBjb2xsYXBzZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgdmlzaWJsZWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdmlzaWJpbGl0eQogICAqLwogIHZpc2liaWxpdHk/OiBQcm9wZXJ0eS5WaXNpYmlsaXR5IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB3aGl0ZS1zcGFjZWAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgd2hpdGUgc3BhY2UgaW5zaWRlIGFuIGVsZW1lbnQgaXMgaGFuZGxlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCBwcmUgfCBub3dyYXAgfCBwcmUtd3JhcCB8IHByZS1saW5lIHwgYnJlYWstc3BhY2VzYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgIElFICAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjUuNSoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3doaXRlLXNwYWNlCiAgICovCiAgIndoaXRlLXNwYWNlIj86IFByb3BlcnR5LldoaXRlU3BhY2UgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHdpZG93c2AqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbWluaW11bSBudW1iZXIgb2YgbGluZXMgaW4gYSBibG9jayBjb250YWluZXIgdGhhdCBtdXN0IGJlIHNob3duIGF0IHRoZSBfdG9wXyBvZiBhIHBhZ2UsIHJlZ2lvbiwgb3IgY29sdW1uLgogICAqCiAgICogKipTeW50YXgqKjogYDxpbnRlZ2VyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMjUqKiB8ICAgTm8gICAgfCAqKjEuMyoqIHwgKioxMioqIHwgKio4KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvd2lkb3dzCiAgICovCiAgd2lkb3dzPzogUHJvcGVydHkuV2lkb3dzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB3aWR0aGAqKiBDU1MgcHJvcGVydHkgc2V0cyBhbiBlbGVtZW50J3Mgd2lkdGguIEJ5IGRlZmF1bHQsIGl0IHNldHMgdGhlIHdpZHRoIG9mIHRoZSBjb250ZW50IGFyZWEsIGJ1dCBpZiBgYm94LXNpemluZ2AgaXMgc2V0IHRvIGBib3JkZXItYm94YCwgaXQgc2V0cyB0aGUgd2lkdGggb2YgdGhlIGJvcmRlciBhcmVhLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCA8bGVuZ3RoPiB8IDxwZXJjZW50YWdlPiB8IG1pbi1jb250ZW50IHwgbWF4LWNvbnRlbnQgfCBmaXQtY29udGVudCB8IGZpdC1jb250ZW50KDxsZW5ndGgtcGVyY2VudGFnZT4pYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy93aWR0aAogICAqLwogIHdpZHRoPzogUHJvcGVydHkuV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHdpbGwtY2hhbmdlYCoqIENTUyBwcm9wZXJ0eSBoaW50cyB0byBicm93c2VycyBob3cgYW4gZWxlbWVudCBpcyBleHBlY3RlZCB0byBjaGFuZ2UuIEJyb3dzZXJzIG1heSBzZXQgdXAgb3B0aW1pemF0aW9ucyBiZWZvcmUgYW4gZWxlbWVudCBpcyBhY3R1YWxseSBjaGFuZ2VkLiBUaGVzZSBraW5kcyBvZiBvcHRpbWl6YXRpb25zIGNhbiBpbmNyZWFzZSB0aGUgcmVzcG9uc2l2ZW5lc3Mgb2YgYSBwYWdlIGJ5IGRvaW5nIHBvdGVudGlhbGx5IGV4cGVuc2l2ZSB3b3JrIGJlZm9yZSB0aGV5IGFyZSBhY3R1YWxseSByZXF1aXJlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPGFuaW1hdGVhYmxlLWZlYXR1cmU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKiozNioqIHwgKiozNioqICB8ICoqOS4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvd2lsbC1jaGFuZ2UKICAgKi8KICAid2lsbC1jaGFuZ2UiPzogUHJvcGVydHkuV2lsbENoYW5nZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgd29yZC1icmVha2AqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIGxpbmUgYnJlYWtzIGFwcGVhciB3aGVyZXZlciB0aGUgdGV4dCB3b3VsZCBvdGhlcndpc2Ugb3ZlcmZsb3cgaXRzIGNvbnRlbnQgYm94LgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IGJyZWFrLWFsbCB8IGtlZXAtYWxsIHwgYnJlYWstd29yZGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgICBJRSAgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLS0tOiB8CiAgICogfCAqKjEqKiAgfCAqKjE1KiogIHwgKiozKiogIHwgKioxMioqIHwgKio1LjUqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy93b3JkLWJyZWFrCiAgICovCiAgIndvcmQtYnJlYWsiPzogUHJvcGVydHkuV29yZEJyZWFrIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB3b3JkLXNwYWNpbmdgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGxlbmd0aCBvZiBzcGFjZSBiZXR3ZWVuIHdvcmRzIGFuZCBiZXR3ZWVuIHRhZ3MuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio2KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvd29yZC1zcGFjaW5nCiAgICovCiAgIndvcmQtc3BhY2luZyI/OiBQcm9wZXJ0eS5Xb3JkU3BhY2luZzxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYCoqb3ZlcmZsb3ctd3JhcCoqYCBDU1MgcHJvcGVydHkgYXBwbGllcyB0byBpbmxpbmUgZWxlbWVudHMsIHNldHRpbmcgd2hldGhlciB0aGUgYnJvd3NlciBzaG91bGQgaW5zZXJ0IGxpbmUgYnJlYWtzIHdpdGhpbiBhbiBvdGhlcndpc2UgdW5icmVha2FibGUgc3RyaW5nIHRvIHByZXZlbnQgdGV4dCBmcm9tIG92ZXJmbG93aW5nIGl0cyBsaW5lIGJveC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCBicmVhay13b3JkYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICovCiAgIndvcmQtd3JhcCI/OiBQcm9wZXJ0eS5Xb3JkV3JhcCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgd3JpdGluZy1tb2RlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgbGluZXMgb2YgdGV4dCBhcmUgbGFpZCBvdXQgaG9yaXpvbnRhbGx5IG9yIHZlcnRpY2FsbHksIGFzIHdlbGwgYXMgdGhlIGRpcmVjdGlvbiBpbiB3aGljaCBibG9ja3MgcHJvZ3Jlc3MuIFdoZW4gc2V0IGZvciBhbiBlbnRpcmUgZG9jdW1lbnQsIGl0IHNob3VsZCBiZSBzZXQgb24gdGhlIHJvb3QgZWxlbWVudCAoYGh0bWxgIGVsZW1lbnQgZm9yIEhUTUwgZG9jdW1lbnRzKS4KICAgKgogICAqICoqU3ludGF4Kio6IGBob3Jpem9udGFsLXRiIHwgdmVydGljYWwtcmwgfCB2ZXJ0aWNhbC1sciB8IHNpZGV3YXlzLXJsIHwgc2lkZXdheXMtbHJgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGhvcml6b250YWwtdGJgCiAgICoKICAgKiB8IENocm9tZSAgfCBGaXJlZm94IHwgIFNhZmFyaSAgIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjQ4KiogIHwgKio0MSoqICB8ICoqMTAuMSoqICB8ICoqMTIqKiB8ICoqOSoqIHwKICAgKiB8IDggXy14LV8gfCAgICAgICAgIHwgNS4xIF8teC1fIHwgICAgICAgIHwgICAgICAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvd3JpdGluZy1tb2RlCiAgICovCiAgIndyaXRpbmctbW9kZSI/OiBQcm9wZXJ0eS5Xcml0aW5nTW9kZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgei1pbmRleGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgei1vcmRlciBvZiBhIHBvc2l0aW9uZWQgZWxlbWVudCBhbmQgaXRzIGRlc2NlbmRhbnRzIG9yIGZsZXggaXRlbXMuIE92ZXJsYXBwaW5nIGVsZW1lbnRzIHdpdGggYSBsYXJnZXIgei1pbmRleCBjb3ZlciB0aG9zZSB3aXRoIGEgc21hbGxlciBvbmUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IDxpbnRlZ2VyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1Mvei1pbmRleAogICAqLwogICJ6LWluZGV4Ij86IFByb3BlcnR5LlpJbmRleCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgbm9uLXN0YW5kYXJkICoqYHpvb21gKiogQ1NTIHByb3BlcnR5IGNhbiBiZSB1c2VkIHRvIGNvbnRyb2wgdGhlIG1hZ25pZmljYXRpb24gbGV2ZWwgb2YgYW4gZWxlbWVudC4gYHRyYW5zZm9ybTogc2NhbGUoKWAgc2hvdWxkIGJlIHVzZWQgaW5zdGVhZCBvZiB0aGlzIHByb3BlcnR5LCBpZiBwb3NzaWJsZS4gSG93ZXZlciwgdW5saWtlIENTUyBUcmFuc2Zvcm1zLCBgem9vbWAgYWZmZWN0cyB0aGUgbGF5b3V0IHNpemUgb2YgdGhlIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgcmVzZXQgfCA8bnVtYmVyPiB8IDxwZXJjZW50YWdlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLS06IHwKICAgKiB8ICoqMSoqICB8ICAgTm8gICAgfCAqKjMuMSoqIHwgKioxMioqIHwgKio1LjUqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy96b29tCiAgICovCiAgem9vbT86IFByb3BlcnR5Llpvb20gfCB1bmRlZmluZWQ7Cn0KCmV4cG9ydCBpbnRlcmZhY2UgU3RhbmRhcmRTaG9ydGhhbmRQcm9wZXJ0aWVzSHlwaGVuPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMCwgVFRpbWUgPSBzdHJpbmcgJiB7fT4gewogIC8qKgogICAqIFRoZSBgKiphbGwqKmAgc2hvcnRoYW5kIENTUyBwcm9wZXJ0eSByZXNldHMgYWxsIG9mIGFuIGVsZW1lbnQncyBwcm9wZXJ0aWVzIGV4Y2VwdCBgdW5pY29kZS1iaWRpYCwgYGRpcmVjdGlvbmAsIGFuZCBDU1MgQ3VzdG9tIFByb3BlcnRpZXMuIEl0IGNhbiBzZXQgcHJvcGVydGllcyB0byB0aGVpciBpbml0aWFsIG9yIGluaGVyaXRlZCB2YWx1ZXMsIG9yIHRvIHRoZSB2YWx1ZXMgc3BlY2lmaWVkIGluIGFub3RoZXIgc3R5bGVzaGVldCBvcmlnaW4uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgaW5pdGlhbCB8IGluaGVyaXQgfCB1bnNldCB8IHJldmVydGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBUaGVyZSBpcyBubyBwcmFjdGljYWwgaW5pdGlhbCB2YWx1ZSBmb3IgaXQuCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqMzcqKiB8ICoqMjcqKiAgfCAqKjkuMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2FsbAogICAqLwogIGFsbD86IFByb3BlcnR5LkFsbCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYW5pbWF0aW9uYCoqIHNob3J0aGFuZCBDU1MgcHJvcGVydHkgYXBwbGllcyBhbiBhbmltYXRpb24gYmV0d2VlbiBzdHlsZXMuIEl0IGlzIGEgc2hvcnRoYW5kIGZvciBgYW5pbWF0aW9uLW5hbWVgLCBgYW5pbWF0aW9uLWR1cmF0aW9uYCwgYGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb25gLCBgYW5pbWF0aW9uLWRlbGF5YCwgYGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnRgLCBgYW5pbWF0aW9uLWRpcmVjdGlvbmAsIGBhbmltYXRpb24tZmlsbC1tb2RlYCwgYW5kIGBhbmltYXRpb24tcGxheS1zdGF0ZWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHNpbmdsZS1hbmltYXRpb24+I2AKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjQzKiogIHwgKioxNioqICB8ICAqKjkqKiAgfCAqKjEyKiogfCAqKjEwKiogfAogICAqIHwgMyBfLXgtXyB8IDUgXy14LV8gfCA0IF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2FuaW1hdGlvbgogICAqLwogIGFuaW1hdGlvbj86IFByb3BlcnR5LkFuaW1hdGlvbjxUVGltZT4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJhY2tncm91bmRgKiogc2hvcnRoYW5kIENTUyBwcm9wZXJ0eSBzZXRzIGFsbCBiYWNrZ3JvdW5kIHN0eWxlIHByb3BlcnRpZXMgYXQgb25jZSwgc3VjaCBhcyBjb2xvciwgaW1hZ2UsIG9yaWdpbiBhbmQgc2l6ZSwgb3IgcmVwZWF0IG1ldGhvZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDxiZy1sYXllcj4gLCBdKiA8ZmluYWwtYmctbGF5ZXI+YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9iYWNrZ3JvdW5kCiAgICovCiAgYmFja2dyb3VuZD86IFByb3BlcnR5LkJhY2tncm91bmQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJhY2tncm91bmQtcG9zaXRpb25gKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGluaXRpYWwgcG9zaXRpb24gZm9yIGVhY2ggYmFja2dyb3VuZCBpbWFnZS4gVGhlIHBvc2l0aW9uIGlzIHJlbGF0aXZlIHRvIHRoZSBwb3NpdGlvbiBsYXllciBzZXQgYnkgYGJhY2tncm91bmQtb3JpZ2luYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8YmctcG9zaXRpb24+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMCUgMCVgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JhY2tncm91bmQtcG9zaXRpb24KICAgKi8KICAiYmFja2dyb3VuZC1wb3NpdGlvbiI/OiBQcm9wZXJ0eS5CYWNrZ3JvdW5kUG9zaXRpb248VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlcmAqKiBzaG9ydGhhbmQgQ1NTIHByb3BlcnR5IHNldHMgYW4gZWxlbWVudCdzIGJvcmRlci4gSXQgc2V0cyB0aGUgdmFsdWVzIG9mIGBib3JkZXItd2lkdGhgLCBgYm9yZGVyLXN0eWxlYCwgYW5kIGBib3JkZXItY29sb3JgLgogICAqCiAgICogKipTeW50YXgqKjogYDxsaW5lLXdpZHRoPiB8fCA8bGluZS1zdHlsZT4gfHwgPGNvbG9yPmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyCiAgICovCiAgYm9yZGVyPzogUHJvcGVydHkuQm9yZGVyPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItYmxvY2tgKiogQ1NTIHByb3BlcnR5IGlzIGEgc2hvcnRoYW5kIHByb3BlcnR5IGZvciBzZXR0aW5nIHRoZSBpbmRpdmlkdWFsIGxvZ2ljYWwgYmxvY2sgYm9yZGVyIHByb3BlcnR5IHZhbHVlcyBpbiBhIHNpbmdsZSBwbGFjZSBpbiB0aGUgc3R5bGUgc2hlZXQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItdG9wLXdpZHRoJz4gfHwgPCdib3JkZXItdG9wLXN0eWxlJz4gfHwgPGNvbG9yPmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjg3KiogfCAqKjY2KiogIHwgKioxNC4xKiogfCAqKjg3KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWJsb2NrCiAgICovCiAgImJvcmRlci1ibG9jayI/OiBQcm9wZXJ0eS5Cb3JkZXJCbG9jazxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWJsb2NrLWVuZGAqKiBDU1MgcHJvcGVydHkgaXMgYSBzaG9ydGhhbmQgcHJvcGVydHkgZm9yIHNldHRpbmcgdGhlIGluZGl2aWR1YWwgbG9naWNhbCBibG9jay1lbmQgYm9yZGVyIHByb3BlcnR5IHZhbHVlcyBpbiBhIHNpbmdsZSBwbGFjZSBpbiB0aGUgc3R5bGUgc2hlZXQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItdG9wLXdpZHRoJz4gfHwgPCdib3JkZXItdG9wLXN0eWxlJz4gfHwgPGNvbG9yPmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjQxKiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWJsb2NrLWVuZAogICAqLwogICJib3JkZXItYmxvY2stZW5kIj86IFByb3BlcnR5LkJvcmRlckJsb2NrRW5kPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItYmxvY2stc3RhcnRgKiogQ1NTIHByb3BlcnR5IGlzIGEgc2hvcnRoYW5kIHByb3BlcnR5IGZvciBzZXR0aW5nIHRoZSBpbmRpdmlkdWFsIGxvZ2ljYWwgYmxvY2stc3RhcnQgYm9yZGVyIHByb3BlcnR5IHZhbHVlcyBpbiBhIHNpbmdsZSBwbGFjZSBpbiB0aGUgc3R5bGUgc2hlZXQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItdG9wLXdpZHRoJz4gfHwgPCdib3JkZXItdG9wLXN0eWxlJz4gfHwgPGNvbG9yPmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjQxKiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWJsb2NrLXN0YXJ0CiAgICovCiAgImJvcmRlci1ibG9jay1zdGFydCI/OiBQcm9wZXJ0eS5Cb3JkZXJCbG9ja1N0YXJ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItYm90dG9tYCoqIHNob3J0aGFuZCBDU1MgcHJvcGVydHkgc2V0cyBhbiBlbGVtZW50J3MgYm90dG9tIGJvcmRlci4gSXQgc2V0cyB0aGUgdmFsdWVzIG9mIGBib3JkZXItYm90dG9tLXdpZHRoYCwgYGJvcmRlci1ib3R0b20tc3R5bGVgIGFuZCBgYm9yZGVyLWJvdHRvbS1jb2xvcmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxpbmUtd2lkdGg+IHx8IDxsaW5lLXN0eWxlPiB8fCA8Y29sb3I+YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItYm90dG9tCiAgICovCiAgImJvcmRlci1ib3R0b20iPzogUHJvcGVydHkuQm9yZGVyQm90dG9tPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItY29sb3JgKiogc2hvcnRoYW5kIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBjb2xvciBvZiBhbiBlbGVtZW50J3MgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj57MSw0fWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWNvbG9yCiAgICovCiAgImJvcmRlci1jb2xvciI/OiBQcm9wZXJ0eS5Cb3JkZXJDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWltYWdlYCoqIENTUyBwcm9wZXJ0eSBkcmF3cyBhbiBpbWFnZSBhcm91bmQgYSBnaXZlbiBlbGVtZW50LiBJdCByZXBsYWNlcyB0aGUgZWxlbWVudCdzIHJlZ3VsYXIgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLWltYWdlLXNvdXJjZSc+IHx8IDwnYm9yZGVyLWltYWdlLXNsaWNlJz4gWyAvIDwnYm9yZGVyLWltYWdlLXdpZHRoJz4gfCAvIDwnYm9yZGVyLWltYWdlLXdpZHRoJz4/IC8gPCdib3JkZXItaW1hZ2Utb3V0c2V0Jz4gXT8gfHwgPCdib3JkZXItaW1hZ2UtcmVwZWF0Jz5gCiAgICoKICAgKiB8IENocm9tZSAgfCAgRmlyZWZveCAgfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICoqMTYqKiAgfCAgKioxNSoqICAgfCAgKio2KiogIHwgKioxMioqIHwgKioxMSoqIHwKICAgKiB8IDcgXy14LV8gfCAzLjUgXy14LV8gfCAzIF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1pbWFnZQogICAqLwogICJib3JkZXItaW1hZ2UiPzogUHJvcGVydHkuQm9yZGVySW1hZ2UgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbmxpbmVgKiogQ1NTIHByb3BlcnR5IGlzIGEgc2hvcnRoYW5kIHByb3BlcnR5IGZvciBzZXR0aW5nIHRoZSBpbmRpdmlkdWFsIGxvZ2ljYWwgaW5saW5lIGJvcmRlciBwcm9wZXJ0eSB2YWx1ZXMgaW4gYSBzaW5nbGUgcGxhY2UgaW4gdGhlIHN0eWxlIHNoZWV0LgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXRvcC13aWR0aCc+IHx8IDwnYm9yZGVyLXRvcC1zdHlsZSc+IHx8IDxjb2xvcj5gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4NyoqIHwgKio2NioqICB8ICoqMTQuMSoqIHwgKio4NyoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JvcmRlci1pbmxpbmUKICAgKi8KICAiYm9yZGVyLWlubGluZSI/OiBQcm9wZXJ0eS5Cb3JkZXJJbmxpbmU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbmxpbmUtZW5kYCoqIENTUyBwcm9wZXJ0eSBpcyBhIHNob3J0aGFuZCBwcm9wZXJ0eSBmb3Igc2V0dGluZyB0aGUgaW5kaXZpZHVhbCBsb2dpY2FsIGlubGluZS1lbmQgYm9yZGVyIHByb3BlcnR5IHZhbHVlcyBpbiBhIHNpbmdsZSBwbGFjZSBpbiB0aGUgc3R5bGUgc2hlZXQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItdG9wLXdpZHRoJz4gfHwgPCdib3JkZXItdG9wLXN0eWxlJz4gfHwgPGNvbG9yPmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY5KiogfCAqKjQxKiogIHwgKioxMi4xKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWlubGluZS1lbmQKICAgKi8KICAiYm9yZGVyLWlubGluZS1lbmQiPzogUHJvcGVydHkuQm9yZGVySW5saW5lRW5kPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItaW5saW5lLXN0YXJ0YCoqIENTUyBwcm9wZXJ0eSBpcyBhIHNob3J0aGFuZCBwcm9wZXJ0eSBmb3Igc2V0dGluZyB0aGUgaW5kaXZpZHVhbCBsb2dpY2FsIGlubGluZS1zdGFydCBib3JkZXIgcHJvcGVydHkgdmFsdWVzIGluIGEgc2luZ2xlIHBsYWNlIGluIHRoZSBzdHlsZSBzaGVldC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3Atd2lkdGgnPiB8fCA8J2JvcmRlci10b3Atc3R5bGUnPiB8fCA8Y29sb3I+YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgIFNhZmFyaSAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNjkqKiB8ICoqNDEqKiAgfCAqKjEyLjEqKiB8ICoqNzkqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItaW5saW5lLXN0YXJ0CiAgICovCiAgImJvcmRlci1pbmxpbmUtc3RhcnQiPzogUHJvcGVydHkuQm9yZGVySW5saW5lU3RhcnQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1sZWZ0YCoqIHNob3J0aGFuZCBDU1MgcHJvcGVydHkgc2V0cyBhbGwgdGhlIHByb3BlcnRpZXMgb2YgYW4gZWxlbWVudCdzIGxlZnQgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYDxsaW5lLXdpZHRoPiB8fCA8bGluZS1zdHlsZT4gfHwgPGNvbG9yPmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLWxlZnQKICAgKi8KICAiYm9yZGVyLWxlZnQiPzogUHJvcGVydHkuQm9yZGVyTGVmdDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLXJhZGl1c2AqKiBDU1MgcHJvcGVydHkgcm91bmRzIHRoZSBjb3JuZXJzIG9mIGFuIGVsZW1lbnQncyBvdXRlciBib3JkZXIgZWRnZS4gWW91IGNhbiBzZXQgYSBzaW5nbGUgcmFkaXVzIHRvIG1ha2UgY2lyY3VsYXIgY29ybmVycywgb3IgdHdvIHJhZGlpIHRvIG1ha2UgZWxsaXB0aWNhbCBjb3JuZXJzLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGgtcGVyY2VudGFnZT57MSw0fSBbIC8gPGxlbmd0aC1wZXJjZW50YWdlPnsxLDR9IF0/YAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8IFNhZmFyaSAgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAgKio0KiogIHwgICoqNCoqICB8ICAqKjUqKiAgfCAqKjEyKiogfCAqKjkqKiB8CiAgICogfCAxIF8teC1fIHwgICAgICAgICB8IDMgXy14LV8gfCAgICAgICAgfCAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9ib3JkZXItcmFkaXVzCiAgICovCiAgImJvcmRlci1yYWRpdXMiPzogUHJvcGVydHkuQm9yZGVyUmFkaXVzPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItcmlnaHRgKiogc2hvcnRoYW5kIENTUyBwcm9wZXJ0eSBzZXRzIGFsbCB0aGUgcHJvcGVydGllcyBvZiBhbiBlbGVtZW50J3MgcmlnaHQgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYDxsaW5lLXdpZHRoPiB8fCA8bGluZS1zdHlsZT4gfHwgPGNvbG9yPmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICAgSUUgICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqNS41KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLXJpZ2h0CiAgICovCiAgImJvcmRlci1yaWdodCI/OiBQcm9wZXJ0eS5Cb3JkZXJSaWdodDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLXN0eWxlYCoqIHNob3J0aGFuZCBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbGluZSBzdHlsZSBmb3IgYWxsIGZvdXIgc2lkZXMgb2YgYW4gZWxlbWVudCdzIGJvcmRlci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGluZS1zdHlsZT57MSw0fWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLXN0eWxlCiAgICovCiAgImJvcmRlci1zdHlsZSI/OiBQcm9wZXJ0eS5Cb3JkZXJTdHlsZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLXRvcGAqKiBzaG9ydGhhbmQgQ1NTIHByb3BlcnR5IHNldHMgYWxsIHRoZSBwcm9wZXJ0aWVzIG9mIGFuIGVsZW1lbnQncyB0b3AgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYDxsaW5lLXdpZHRoPiB8fCA8bGluZS1zdHlsZT4gfHwgPGNvbG9yPmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLXRvcAogICAqLwogICJib3JkZXItdG9wIj86IFByb3BlcnR5LkJvcmRlclRvcDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLXdpZHRoYCoqIHNob3J0aGFuZCBDU1MgcHJvcGVydHkgc2V0cyB0aGUgd2lkdGggb2YgYW4gZWxlbWVudCdzIGJvcmRlci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGluZS13aWR0aD57MSw0fWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvYm9yZGVyLXdpZHRoCiAgICovCiAgImJvcmRlci13aWR0aCI/OiBQcm9wZXJ0eS5Cb3JkZXJXaWR0aDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uLXJ1bGVgKirCoHNob3J0aGFuZCBDU1MgcHJvcGVydHkgc2V0cyB0aGUgd2lkdGgsIHN0eWxlLCBhbmQgY29sb3Igb2YgdGhlIGxpbmUgZHJhd24gYmV0d2VlbiBjb2x1bW5zIGluIGEgbXVsdGktY29sdW1uIGxheW91dC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2NvbHVtbi1ydWxlLXdpZHRoJz4gfHwgPCdjb2x1bW4tcnVsZS1zdHlsZSc+IHx8IDwnY29sdW1uLXJ1bGUtY29sb3InPmAKICAgKgogICAqIHwgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICBJRSAgIHwKICAgKiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjUwKiogIHwgKio1MioqICB8ICAqKjkqKiAgfCAqKjEyKiogfCAqKjEwKiogfAogICAqIHwgMSBfLXgtXyB8ICAgICAgICAgfCAzIF8teC1fIHwgICAgICAgIHwgICAgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2NvbHVtbi1ydWxlCiAgICovCiAgImNvbHVtbi1ydWxlIj86IFByb3BlcnR5LkNvbHVtblJ1bGU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbnNgKiogQ1NTIHNob3J0aGFuZCBwcm9wZXJ0eSBzZXRzIHRoZSBudW1iZXIgb2YgY29sdW1ucyB0byB1c2Ugd2hlbiBkcmF3aW5nIGFuIGVsZW1lbnQncyBjb250ZW50cywgYXMgd2VsbCBhcyB0aG9zZSBjb2x1bW5zJyB3aWR0aHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdjb2x1bW4td2lkdGgnPiB8fCA8J2NvbHVtbi1jb3VudCc+YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjUwKiogfCAqKjUyKiogIHwgICoqOSoqICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAgICAgICAgfCAgICAgICAgIHwgMyBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9jb2x1bW5zCiAgICovCiAgY29sdW1ucz86IFByb3BlcnR5LkNvbHVtbnM8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZsZXhgKiogQ1NTIHNob3J0aGFuZCBwcm9wZXJ0eSBzZXRzIGhvdyBhIGZsZXggX2l0ZW1fIHdpbGwgZ3JvdyBvciBzaHJpbmsgdG8gZml0IHRoZSBzcGFjZSBhdmFpbGFibGUgaW4gaXRzIGZsZXggY29udGFpbmVyLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBbIDwnZmxleC1ncm93Jz4gPCdmbGV4LXNocmluayc+PyB8fCA8J2ZsZXgtYmFzaXMnPiBdYAogICAqCiAgICogfCAgQ2hyb21lICB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgICAgSUUgICAgfAogICAqIHwgOi0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tLS06IHwKICAgKiB8ICAqKjI5KiogIHwgKioyMCoqICB8ICAqKjkqKiAgfCAqKjEyKiogfCAgKioxMSoqICB8CiAgICogfCAyMSBfLXgtXyB8ICAgICAgICAgfCA3IF8teC1fIHwgICAgICAgIHwgMTAgXy14LV8gfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZmxleAogICAqLwogIGZsZXg/OiBQcm9wZXJ0eS5GbGV4PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmbGV4LWZsb3dgKiogQ1NTIHNob3J0aGFuZCBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIGRpcmVjdGlvbiBvZiBhIGZsZXggY29udGFpbmVyLCBhcyB3ZWxsIGFzIGl0cyB3cmFwcGluZyBiZWhhdmlvci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2ZsZXgtZGlyZWN0aW9uJz4gfHwgPCdmbGV4LXdyYXAnPmAKICAgKgogICAqIHwgIENocm9tZSAgfCBGaXJlZm94IHwgU2FmYXJpICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS0tOiB8IDotLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwKICAgKiB8ICAqKjI5KiogIHwgKioyOCoqICB8ICAqKjkqKiAgfCAqKjEyKiogfCAqKjExKiogfAogICAqIHwgMjEgXy14LV8gfCAgICAgICAgIHwgNyBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9mbGV4LWZsb3cKICAgKi8KICAiZmxleC1mbG93Ij86IFByb3BlcnR5LkZsZXhGbG93IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb250YCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgc2V0cyBhbGwgdGhlIGRpZmZlcmVudCBwcm9wZXJ0aWVzIG9mIGFuIGVsZW1lbnQncyBmb250LiBBbHRlcm5hdGl2ZWx5LCBpdCBzZXRzIGFuIGVsZW1lbnQncyBmb250IHRvIGEgc3lzdGVtIGZvbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyBbIDwnZm9udC1zdHlsZSc+IHx8IDxmb250LXZhcmlhbnQtY3NzMjE+IHx8IDwnZm9udC13ZWlnaHQnPiB8fCA8J2ZvbnQtc3RyZXRjaCc+IF0/IDwnZm9udC1zaXplJz4gWyAvIDwnbGluZS1oZWlnaHQnPiBdPyA8J2ZvbnQtZmFtaWx5Jz4gXSB8IGNhcHRpb24gfCBpY29uIHwgbWVudSB8IG1lc3NhZ2UtYm94IHwgc21hbGwtY2FwdGlvbiB8IHN0YXR1cy1iYXJgCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCAgSUUgICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi0tLTogfAogICAqIHwgKioxKiogIHwgICoqMSoqICB8ICoqMSoqICB8ICoqMTIqKiB8ICoqMyoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2ZvbnQKICAgKi8KICBmb250PzogUHJvcGVydHkuRm9udCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZ2FwYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBnYXBzIChndXR0ZXJzKSBiZXR3ZWVuIHJvd3MgYW5kIGNvbHVtbnMuIEl0IGlzIGEgc2hvcnRoYW5kIGZvciBgcm93LWdhcGAgYW5kIGBjb2x1bW4tZ2FwYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3Jvdy1nYXAnPiA8J2NvbHVtbi1nYXAnPj9gCiAgICoKICAgKiAtLS0KICAgKgogICAqIF9TdXBwb3J0ZWQgaW4gRmxleCBMYXlvdXRfCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio4NCoqIHwgKio2MyoqICB8ICoqMTQuMSoqIHwgKio4NCoqIHwgTm8gIHwKICAgKgogICAqIC0tLQogICAqCiAgICogX1N1cHBvcnRlZCBpbiBHcmlkIExheW91dF8KICAgKgogICAqIHwgICAgIENocm9tZSAgICAgIHwgICAgIEZpcmVmb3ggICAgIHwgICAgICBTYWZhcmkgICAgICAgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS0tLS0tLS0tLS06IHwgOi0tLS0tLS0tLS0tLS06IHwgOi0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgICAgICoqNjYqKiAgICAgIHwgICAgICoqNjEqKiAgICAgIHwgICAgICAqKjEyKiogICAgICAgfCAqKjE2KiogfCBObyAgfAogICAqIHwgNTcgXyhncmlkLWdhcClfIHwgNTIgXyhncmlkLWdhcClfIHwgMTAuMSBfKGdyaWQtZ2FwKV8gfCAgICAgICAgfCAgICAgfAogICAqCiAgICogLS0tCiAgICoKICAgKiBfU3VwcG9ydGVkIGluIE11bHRpLWNvbHVtbiBMYXlvdXRfCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjY2KiogfCAqKjYxKiogIHwgICBObyAgIHwgKioxNioqIHwgTm8gIHwKICAgKgogICAqIC0tLQogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZ2FwCiAgICovCiAgZ2FwPzogUHJvcGVydHkuR2FwPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBncmlkYCoqIENTUyBwcm9wZXJ0eSBpcyBhIHNob3J0aGFuZCBwcm9wZXJ0eSB0aGF0IHNldHMgYWxsIG9mIHRoZSBleHBsaWNpdCBhbmQgaW1wbGljaXQgZ3JpZCBwcm9wZXJ0aWVzIGluIGEgc2luZ2xlIGRlY2xhcmF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYDwnZ3JpZC10ZW1wbGF0ZSc+IHwgPCdncmlkLXRlbXBsYXRlLXJvd3MnPiAvIFsgYXV0by1mbG93ICYmIGRlbnNlPyBdIDwnZ3JpZC1hdXRvLWNvbHVtbnMnPj8gfCBbIGF1dG8tZmxvdyAmJiBkZW5zZT8gXSA8J2dyaWQtYXV0by1yb3dzJz4/IC8gPCdncmlkLXRlbXBsYXRlLWNvbHVtbnMnPmAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjUyKiogIHwgKioxMC4xKiogfCAqKjE2KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZ3JpZAogICAqLwogIGdyaWQ/OiBQcm9wZXJ0eS5HcmlkIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBncmlkLWFyZWFgKiogQ1NTIHNob3J0aGFuZCBwcm9wZXJ0eSBzcGVjaWZpZXMgYSBncmlkIGl0ZW3igJlzIHNpemUgYW5kIGxvY2F0aW9uIHdpdGhpbiBhIGdyaWQgYnkgY29udHJpYnV0aW5nIGEgbGluZSwgYSBzcGFuLCBvciBub3RoaW5nIChhdXRvbWF0aWMpIHRvIGl0cyBncmlkIHBsYWNlbWVudCwgdGhlcmVieSBzcGVjaWZ5aW5nIHRoZSBlZGdlcyBvZiBpdHMgZ3JpZCBhcmVhLgogICAqCiAgICogKipTeW50YXgqKjogYDxncmlkLWxpbmU+IFsgLyA8Z3JpZC1saW5lPiBdezAsM31gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio1NyoqIHwgKio1MioqICB8ICoqMTAuMSoqIHwgKioxNioqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2dyaWQtYXJlYQogICAqLwogICJncmlkLWFyZWEiPzogUHJvcGVydHkuR3JpZEFyZWEgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGdyaWQtY29sdW1uYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgc3BlY2lmaWVzIGEgZ3JpZCBpdGVtJ3Mgc2l6ZSBhbmQgbG9jYXRpb24gd2l0aGluIGEgZ3JpZCBjb2x1bW4gYnkgY29udHJpYnV0aW5nIGEgbGluZSwgYSBzcGFuLCBvciBub3RoaW5nIChhdXRvbWF0aWMpIHRvIGl0cyBncmlkIHBsYWNlbWVudCwgdGhlcmVieSBzcGVjaWZ5aW5nIHRoZSBpbmxpbmUtc3RhcnQgYW5kIGlubGluZS1lbmQgZWRnZSBvZiBpdHMgZ3JpZCBhcmVhLgogICAqCiAgICogKipTeW50YXgqKjogYDxncmlkLWxpbmU+IFsgLyA8Z3JpZC1saW5lPiBdP2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjUyKiogIHwgKioxMC4xKiogfCAqKjE2KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZ3JpZC1jb2x1bW4KICAgKi8KICAiZ3JpZC1jb2x1bW4iPzogUHJvcGVydHkuR3JpZENvbHVtbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZ3JpZC1yb3dgKiogQ1NTIHNob3J0aGFuZCBwcm9wZXJ0eSBzcGVjaWZpZXMgYSBncmlkIGl0ZW3igJlzIHNpemUgYW5kIGxvY2F0aW9uIHdpdGhpbiB0aGUgZ3JpZCByb3cgYnkgY29udHJpYnV0aW5nIGEgbGluZSwgYSBzcGFuLCBvciBub3RoaW5nIChhdXRvbWF0aWMpIHRvIGl0cyBncmlkIHBsYWNlbWVudCwgdGhlcmVieSBzcGVjaWZ5aW5nIHRoZSBpbmxpbmUtc3RhcnQgYW5kIGlubGluZS1lbmQgZWRnZSBvZiBpdHMgZ3JpZCBhcmVhLgogICAqCiAgICogKipTeW50YXgqKjogYDxncmlkLWxpbmU+IFsgLyA8Z3JpZC1saW5lPiBdP2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8ICBTYWZhcmkgIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU3KiogfCAqKjUyKiogIHwgKioxMC4xKiogfCAqKjE2KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvZ3JpZC1yb3cKICAgKi8KICAiZ3JpZC1yb3ciPzogUHJvcGVydHkuR3JpZFJvdyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZ3JpZC10ZW1wbGF0ZWAqKiBDU1MgcHJvcGVydHkgaXMgYSBzaG9ydGhhbmQgcHJvcGVydHkgZm9yIGRlZmluaW5nIGdyaWQgY29sdW1ucywgcm93cywgYW5kIGFyZWFzLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBbIDwnZ3JpZC10ZW1wbGF0ZS1yb3dzJz4gLyA8J2dyaWQtdGVtcGxhdGUtY29sdW1ucyc+IF0gfCBbIDxsaW5lLW5hbWVzPj8gPHN0cmluZz4gPHRyYWNrLXNpemU+PyA8bGluZS1uYW1lcz4/IF0rIFsgLyA8ZXhwbGljaXQtdHJhY2stbGlzdD4gXT9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCAgU2FmYXJpICB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio1NyoqIHwgKio1MioqICB8ICoqMTAuMSoqIHwgKioxNioqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2dyaWQtdGVtcGxhdGUKICAgKi8KICAiZ3JpZC10ZW1wbGF0ZSI/OiBQcm9wZXJ0eS5HcmlkVGVtcGxhdGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8aW50ZWdlcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgImxpbmUtY2xhbXAiPzogUHJvcGVydHkuTGluZUNsYW1wIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBsaXN0LXN0eWxlYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgYWxsb3dzIHlvdSBzZXQgYWxsIHRoZSBsaXN0IHN0eWxlIHByb3BlcnRpZXMgYXQgb25jZS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2xpc3Qtc3R5bGUtdHlwZSc+IHx8IDwnbGlzdC1zdHlsZS1wb3NpdGlvbic+IHx8IDwnbGlzdC1zdHlsZS1pbWFnZSc+YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9saXN0LXN0eWxlCiAgICovCiAgImxpc3Qtc3R5bGUiPzogUHJvcGVydHkuTGlzdFN0eWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXJnaW5gKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG1hcmdpbiBhcmVhIG9uIGFsbCBmb3VyIHNpZGVzIG9mIGFuIGVsZW1lbnQuIEl0IGlzIGEgc2hvcnRoYW5kIGZvciBgbWFyZ2luLXRvcGAsIGBtYXJnaW4tcmlnaHRgLCBgbWFyZ2luLWJvdHRvbWAsIGFuZCBgbWFyZ2luLWxlZnRgLgogICAqCiAgICogKipTeW50YXgqKjogYFsgPGxlbmd0aD4gfCA8cGVyY2VudGFnZT4gfCBhdXRvIF17MSw0fWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKiozKiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbWFyZ2luCiAgICovCiAgbWFyZ2luPzogUHJvcGVydHkuTWFyZ2luPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXNrYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgaGlkZXMgYW4gZWxlbWVudCAocGFydGlhbGx5IG9yIGZ1bGx5KSBieSBtYXNraW5nIG9yIGNsaXBwaW5nIHRoZSBpbWFnZSBhdCBzcGVjaWZpYyBwb2ludHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPG1hc2stbGF5ZXI+I2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSAgfCBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS06IHwgOi06IHwKICAgKiB8ICoqMSoqICB8ICAqKjIqKiAgfCAqKjMuMSoqIHwgMTItNzkgfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvbWFzawogICAqLwogIG1hc2s/OiBQcm9wZXJ0eS5NYXNrPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXNrLWJvcmRlcmAqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IGxldHMgeW91IGNyZWF0ZSBhIG1hc2sgYWxvbmcgdGhlIGVkZ2Ugb2YgYW4gZWxlbWVudCdzIGJvcmRlci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J21hc2stYm9yZGVyLXNvdXJjZSc+IHx8IDwnbWFzay1ib3JkZXItc2xpY2UnPiBbIC8gPCdtYXNrLWJvcmRlci13aWR0aCc+PyBbIC8gPCdtYXNrLWJvcmRlci1vdXRzZXQnPiBdPyBdPyB8fCA8J21hc2stYm9yZGVyLXJlcGVhdCc+IHx8IDwnbWFzay1ib3JkZXItbW9kZSc+YAogICAqCiAgICogfCAgICAgICAgICAgICAgQ2hyb21lICAgICAgICAgICAgICB8IEZpcmVmb3ggfCAgICAgICAgICAgICAgIFNhZmFyaSAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICBFZGdlICAgICAgICAgICAgICAgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTogfCA6LTogfAogICAqIHwgKioxKiogXygtd2Via2l0LW1hc2stYm94LWltYWdlKV8gfCAgIE5vICAgIHwgKiozLjEqKiBfKC13ZWJraXQtbWFzay1ib3gtaW1hZ2UpXyB8ICoqNzkqKiBfKC13ZWJraXQtbWFzay1ib3gtaW1hZ2UpXyB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9tYXNrLWJvcmRlcgogICAqLwogICJtYXNrLWJvcmRlciI/OiBQcm9wZXJ0eS5NYXNrQm9yZGVyIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvZmZzZXRgKiogQ1NTIHNob3J0aGFuZCBwcm9wZXJ0eSBzZXRzIGFsbCB0aGUgcHJvcGVydGllcyByZXF1aXJlZCBmb3IgYW5pbWF0aW5nIGFuIGVsZW1lbnQgYWxvbmcgYSBkZWZpbmVkIHBhdGguCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8J29mZnNldC1wb3NpdGlvbic+PyBbIDwnb2Zmc2V0LXBhdGgnPiBbIDwnb2Zmc2V0LWRpc3RhbmNlJz4gfHwgPCdvZmZzZXQtcm90YXRlJz4gXT8gXT8gXSEgWyAvIDwnb2Zmc2V0LWFuY2hvcic+IF0/YAogICAqCiAgICogfCAgICBDaHJvbWUgICAgIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLS0tLS0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAgICAqKjU1KiogICAgIHwgKio3MioqICB8ICAgTm8gICB8ICoqNzkqKiB8IE5vICB8CiAgICogfCA0NiBfKG1vdGlvbilfIHwgICAgICAgICB8ICAgICAgICB8ICAgICAgICB8ICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9vZmZzZXQKICAgKi8KICBtb3Rpb24/OiBQcm9wZXJ0eS5PZmZzZXQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG9mZnNldGAqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IHNldHMgYWxsIHRoZSBwcm9wZXJ0aWVzIHJlcXVpcmVkIGZvciBhbmltYXRpbmcgYW4gZWxlbWVudCBhbG9uZyBhIGRlZmluZWQgcGF0aC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDwnb2Zmc2V0LXBvc2l0aW9uJz4/IFsgPCdvZmZzZXQtcGF0aCc+IFsgPCdvZmZzZXQtZGlzdGFuY2UnPiB8fCA8J29mZnNldC1yb3RhdGUnPiBdPyBdPyBdISBbIC8gPCdvZmZzZXQtYW5jaG9yJz4gXT9gCiAgICoKICAgKiB8ICAgIENocm9tZSAgICAgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tLS0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICAgICoqNTUqKiAgICAgfCAqKjcyKiogIHwgICBObyAgIHwgKio3OSoqIHwgTm8gIHwKICAgKiB8IDQ2IF8obW90aW9uKV8gfCAgICAgICAgIHwgICAgICAgIHwgICAgICAgIHwgICAgIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL29mZnNldAogICAqLwogIG9mZnNldD86IFByb3BlcnR5Lk9mZnNldDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3V0bGluZWAqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IHNldCBhbGwgdGhlIG91dGxpbmUgcHJvcGVydGllcyBpbiBhIHNpbmdsZSBkZWNsYXJhdGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDwnb3V0bGluZS1jb2xvcic+IHx8IDwnb3V0bGluZS1zdHlsZSc+IHx8IDwnb3V0bGluZS13aWR0aCc+IF1gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAqKjEuNSoqIHwgKioxLjIqKiB8ICoqMTIqKiB8ICoqOCoqIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL291dGxpbmUKICAgKi8KICBvdXRsaW5lPzogUHJvcGVydHkuT3V0bGluZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3ZlcmZsb3dgKiogQ1NTIHNob3J0aGFuZCBwcm9wZXJ0eSBzZXRzIHRoZSBkZXNpcmVkIGJlaGF2aW9yIGZvciBhbiBlbGVtZW50J3Mgb3ZlcmZsb3cg4oCUIGkuZS4gd2hlbiBhbiBlbGVtZW50J3MgY29udGVudCBpcyB0b28gYmlnIHRvIGZpdCBpbiBpdHMgYmxvY2sgZm9ybWF0dGluZyBjb250ZXh0IOKAlCBpbiBib3RoIGRpcmVjdGlvbnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyB2aXNpYmxlIHwgaGlkZGVuIHwgY2xpcCB8IHNjcm9sbCB8IGF1dG8gXXsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGB2aXNpYmxlYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjQqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9vdmVyZmxvdwogICAqLwogIG92ZXJmbG93PzogUHJvcGVydHkuT3ZlcmZsb3cgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG92ZXJzY3JvbGwtYmVoYXZpb3JgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hhdCBhIGJyb3dzZXIgZG9lcyB3aGVuIHJlYWNoaW5nIHRoZSBib3VuZGFyeSBvZiBhIHNjcm9sbGluZyBhcmVhLiBJdCdzIGEgc2hvcnRoYW5kIGZvciBgb3ZlcnNjcm9sbC1iZWhhdmlvci14YCBhbmQgYG92ZXJzY3JvbGwtYmVoYXZpb3IteWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyBjb250YWluIHwgbm9uZSB8IGF1dG8gXXsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgSUUgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LTogfAogICAqIHwgKio2MyoqIHwgKio1OSoqICB8ICAgTm8gICB8ICoqMTgqKiB8IE5vICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9vdmVyc2Nyb2xsLWJlaGF2aW9yCiAgICovCiAgIm92ZXJzY3JvbGwtYmVoYXZpb3IiPzogUHJvcGVydHkuT3ZlcnNjcm9sbEJlaGF2aW9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwYWRkaW5nYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgc2V0cyB0aGUgcGFkZGluZyBhcmVhIG9uIGFsbCBmb3VyIHNpZGVzIG9mIGFuIGVsZW1lbnQgYXQgb25jZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDxsZW5ndGg+IHwgPHBlcmNlbnRhZ2U+IF17MSw0fWAKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8ICBJRSAgIHwKICAgKiB8IDotLS0tOiB8IDotLS0tLTogfCA6LS0tLTogfCA6LS0tLTogfCA6LS0tOiB8CiAgICogfCAqKjEqKiAgfCAgKioxKiogIHwgKioxKiogIHwgKioxMioqIHwgKio0KiogfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvcGFkZGluZwogICAqLwogIHBhZGRpbmc/OiBQcm9wZXJ0eS5QYWRkaW5nPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBDU1MgKipgcGxhY2UtaXRlbXNgKiogc2hvcnRoYW5kIHByb3BlcnR5IGFsbG93cyB5b3UgdG8gYWxpZ24gaXRlbXMgYWxvbmcgYm90aCB0aGUgYmxvY2sgYW5kIGlubGluZSBkaXJlY3Rpb25zIGF0IG9uY2UgKGkuZS4gdGhlIGBhbGlnbi1pdGVtc2AgYW5kIGBqdXN0aWZ5LWl0ZW1zYCBwcm9wZXJ0aWVzKSBpbiBhIHJlbGV2YW50IGxheW91dCBzeXN0ZW0gc3VjaCBhcyBHcmlkIG9yIEZsZXhib3guIElmIHRoZSBzZWNvbmQgdmFsdWUgaXMgbm90IHNldCwgdGhlIGZpcnN0IHZhbHVlIGlzIGFsc28gdXNlZCBmb3IgaXQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdhbGlnbi1pdGVtcyc+IDwnanVzdGlmeS1pdGVtcyc+P2AKICAgKgogICAqIHwgQ2hyb21lIHwgRmlyZWZveCB8IFNhZmFyaSB8ICBFZGdlICB8IElFICB8CiAgICogfCA6LS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS06IHwgOi06IHwKICAgKiB8ICoqNTkqKiB8ICoqNDUqKiAgfCAqKjExKiogfCAqKjc5KiogfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvcGxhY2UtaXRlbXMKICAgKi8KICAicGxhY2UtaXRlbXMiPzogUHJvcGVydHkuUGxhY2VJdGVtcyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgcGxhY2Utc2VsZmAqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IGFsbG93cyB5b3UgdG8gYWxpZ24gYW4gaW5kaXZpZHVhbCBpdGVtIGluIGJvdGggdGhlIGJsb2NrIGFuZCBpbmxpbmUgZGlyZWN0aW9ucyBhdCBvbmNlIChpLmUuIHRoZSBgYWxpZ24tc2VsZmAgYW5kIGBqdXN0aWZ5LXNlbGZgIHByb3BlcnRpZXMpIGluIGEgcmVsZXZhbnQgbGF5b3V0IHN5c3RlbSBzdWNoIGFzIEdyaWQgb3IgRmxleGJveC4gSWYgdGhlIHNlY29uZCB2YWx1ZSBpcyBub3QgcHJlc2VudCwgdGhlIGZpcnN0IHZhbHVlIGlzIGFsc28gdXNlZCBmb3IgaXQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdhbGlnbi1zZWxmJz4gPCdqdXN0aWZ5LXNlbGYnPj9gCiAgICoKICAgKiB8IENocm9tZSB8IEZpcmVmb3ggfCBTYWZhcmkgfCAgRWRnZSAgfCBJRSAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotOiB8CiAgICogfCAqKjU5KiogfCAqKjQ1KiogIHwgKioxMSoqIHwgKio3OSoqIHwgTm8gIHwKICAgKgogICAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL3BsYWNlLXNlbGYKICAgKi8KICAicGxhY2Utc2VsZiI/OiBQcm9wZXJ0eS5QbGFjZVNlbGYgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtZGVjb3JhdGlvbmAqKiBzaG9ydGhhbmQgQ1NTIHByb3BlcnR5IHNldHMgdGhlIGFwcGVhcmFuY2Ugb2YgZGVjb3JhdGl2ZSBsaW5lcyBvbiB0ZXh0LiBJdCBpcyBhIHNob3J0aGFuZCBmb3IgYHRleHQtZGVjb3JhdGlvbi1saW5lYCwgYHRleHQtZGVjb3JhdGlvbi1jb2xvcmAsIGB0ZXh0LWRlY29yYXRpb24tc3R5bGVgLCBhbmQgdGhlIG5ld2VyIGB0ZXh0LWRlY29yYXRpb24tdGhpY2tuZXNzYCBwcm9wZXJ0eS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3RleHQtZGVjb3JhdGlvbi1saW5lJz4gfHwgPCd0ZXh0LWRlY29yYXRpb24tc3R5bGUnPiB8fCA8J3RleHQtZGVjb3JhdGlvbi1jb2xvcic+IHx8IDwndGV4dC1kZWNvcmF0aW9uLXRoaWNrbmVzcyc+YAogICAqCiAgICogfCBDaHJvbWUgfCBGaXJlZm94IHwgU2FmYXJpIHwgIEVkZ2UgIHwgIElFICAgfAogICAqIHwgOi0tLS06IHwgOi0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8IDotLS06IHwKICAgKiB8ICoqMSoqICB8ICAqKjEqKiAgfCAqKjEqKiAgfCAqKjEyKiogfCAqKjMqKiB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90ZXh0LWRlY29yYXRpb24KICAgKi8KICAidGV4dC1kZWNvcmF0aW9uIj86IFByb3BlcnR5LlRleHREZWNvcmF0aW9uPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LWVtcGhhc2lzYCoqIENTUyBwcm9wZXJ0eSBhcHBsaWVzIGVtcGhhc2lzIG1hcmtzIHRvIHRleHQgKGV4Y2VwdCBzcGFjZXMgYW5kIGNvbnRyb2wgY2hhcmFjdGVycykuIEl0IGlzIGEgc2hvcnRoYW5kIGZvciBgdGV4dC1lbXBoYXNpcy1zdHlsZWAgYW5kIGB0ZXh0LWVtcGhhc2lzLWNvbG9yYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3RleHQtZW1waGFzaXMtc3R5bGUnPiB8fCA8J3RleHQtZW1waGFzaXMtY29sb3InPmAKICAgKgogICAqIHwgICAgQ2hyb21lICAgIHwgRmlyZWZveCB8IFNhZmFyaSB8ICAgICBFZGdlICAgICB8IElFICB8CiAgICogfCA6LS0tLS0tLS0tLTogfCA6LS0tLS06IHwgOi0tLS06IHwgOi0tLS0tLS0tLS06IHwgOi06IHwKICAgKiB8ICoqMjUqKiBfLXgtXyB8ICoqNDYqKiAgfCAqKjcqKiAgfCAqKjc5KiogXy14LV8gfCBObyAgfAogICAqCiAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9DU1MvdGV4dC1lbXBoYXNpcwogICAqLwogICJ0ZXh0LWVtcGhhc2lzIj86IFByb3BlcnR5LlRleHRFbXBoYXNpcyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNpdGlvbmAqKiBDU1MgcHJvcGVydHkgaXMgYSBzaG9ydGhhbmQgcHJvcGVydHkgZm9yIGB0cmFuc2l0aW9uLXByb3BlcnR5YCwgYHRyYW5zaXRpb24tZHVyYXRpb25gLCBgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb25gLCBhbmQgYHRyYW5zaXRpb24tZGVsYXlgLgogICAqCiAgICogKipTeW50YXgqKjogYDxzaW5nbGUtdHJhbnNpdGlvbj4jYAogICAqCiAgICogfCBDaHJvbWUgIHwgRmlyZWZveCB8ICBTYWZhcmkgICB8ICBFZGdlICB8ICAgSUUgICB8CiAgICogfCA6LS0tLS06IHwgOi0tLS0tOiB8IDotLS0tLS0tOiB8IDotLS0tOiB8IDotLS0tOiB8CiAgICogfCAqKjI2KiogIHwgKioxNioqICB8ICAgKio5KiogICB8ICoqMTIqKiB8ICoqMTAqKiB8CiAgICogfCAxIF8teC1fIHwgNCBfLXgtXyB8IDMuMSBfLXgtXyB8ICAgICAgICB8ICAgICAgICB8CiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy90cmFuc2l0aW9uCiAgICovCiAgdHJhbnNpdGlvbj86IFByb3BlcnR5LlRyYW5zaXRpb248VFRpbWU+IHwgdW5kZWZpbmVkOwp9CgpleHBvcnQgaW50ZXJmYWNlIFN0YW5kYXJkUHJvcGVydGllc0h5cGhlbjxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+CiAgZXh0ZW5kcyBTdGFuZGFyZExvbmdoYW5kUHJvcGVydGllc0h5cGhlbjxUTGVuZ3RoLCBUVGltZT4sCiAgICBTdGFuZGFyZFNob3J0aGFuZFByb3BlcnRpZXNIeXBoZW48VExlbmd0aCwgVFRpbWU+IHt9CgpleHBvcnQgaW50ZXJmYWNlIFZlbmRvckxvbmdoYW5kUHJvcGVydGllc0h5cGhlbjxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+IHsKICAvKioKICAgKiBUaGUgKipgYW5pbWF0aW9uLWRlbGF5YCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIGFtb3VudCBvZiB0aW1lIHRvIHdhaXQgZnJvbSBhcHBseWluZyB0aGUgYW5pbWF0aW9uIHRvIGFuIGVsZW1lbnQgYmVmb3JlIGJlZ2lubmluZyB0byBwZXJmb3JtIHRoZSBhbmltYXRpb24uIFRoZSBhbmltYXRpb24gY2FuIHN0YXJ0IGxhdGVyLCBpbW1lZGlhdGVseSBmcm9tIGl0cyBiZWdpbm5pbmcsIG9yIGltbWVkaWF0ZWx5IGFuZCBwYXJ0d2F5IHRocm91Z2ggdGhlIGFuaW1hdGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8dGltZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwc2AKICAgKi8KICAiLW1vei1hbmltYXRpb24tZGVsYXkiPzogUHJvcGVydHkuQW5pbWF0aW9uRGVsYXk8VFRpbWU+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tZGlyZWN0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgYW4gYW5pbWF0aW9uIHNob3VsZCBwbGF5IGZvcndhcmQsIGJhY2t3YXJkLCBvciBhbHRlcm5hdGUgYmFjayBhbmQgZm9ydGggYmV0d2VlbiBwbGF5aW5nIHRoZSBzZXF1ZW5jZSBmb3J3YXJkIGFuZCBiYWNrd2FyZC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2luZ2xlLWFuaW1hdGlvbi1kaXJlY3Rpb24+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqLwogICItbW96LWFuaW1hdGlvbi1kaXJlY3Rpb24iPzogUHJvcGVydHkuQW5pbWF0aW9uRGlyZWN0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tZHVyYXRpb25gKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGxlbmd0aCBvZiB0aW1lIHRoYXQgYW4gYW5pbWF0aW9uIHRha2VzIHRvIGNvbXBsZXRlIG9uZSBjeWNsZS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8dGltZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwc2AKICAgKi8KICAiLW1vei1hbmltYXRpb24tZHVyYXRpb24iPzogUHJvcGVydHkuQW5pbWF0aW9uRHVyYXRpb248VFRpbWU+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tZmlsbC1tb2RlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBhIENTUyBhbmltYXRpb24gYXBwbGllcyBzdHlsZXMgdG8gaXRzIHRhcmdldCBiZWZvcmUgYW5kIGFmdGVyIGl0cyBleGVjdXRpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHNpbmdsZS1hbmltYXRpb24tZmlsbC1tb2RlPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgIi1tb3otYW5pbWF0aW9uLWZpbGwtbW9kZSI/OiBQcm9wZXJ0eS5BbmltYXRpb25GaWxsTW9kZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbnVtYmVyIG9mIHRpbWVzIGFuIGFuaW1hdGlvbiBzZXF1ZW5jZSBzaG91bGQgYmUgcGxheWVkIGJlZm9yZSBzdG9wcGluZy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2luZ2xlLWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMWAKICAgKi8KICAiLW1vei1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50Ij86IFByb3BlcnR5LkFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tbmFtZWAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHRoZSBuYW1lcyBvZiBvbmUgb3IgbW9yZSBgQGtleWZyYW1lc2AgYXQtcnVsZXMgZGVzY3JpYmluZyB0aGUgYW5pbWF0aW9uIG9yIGFuaW1hdGlvbnMgdG8gYXBwbHkgdG8gdGhlIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyBub25lIHwgPGtleWZyYW1lcy1uYW1lPiBdI2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICAiLW1vei1hbmltYXRpb24tbmFtZSI/OiBQcm9wZXJ0eS5BbmltYXRpb25OYW1lIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tcGxheS1zdGF0ZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIGFuIGFuaW1hdGlvbiBpcyBydW5uaW5nIG9yIHBhdXNlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2luZ2xlLWFuaW1hdGlvbi1wbGF5LXN0YXRlPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHJ1bm5pbmdgCiAgICovCiAgIi1tb3otYW5pbWF0aW9uLXBsYXktc3RhdGUiPzogUHJvcGVydHkuQW5pbWF0aW9uUGxheVN0YXRlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBhbiBhbmltYXRpb24gcHJvZ3Jlc3NlcyB0aHJvdWdoIHRoZSBkdXJhdGlvbiBvZiBlYWNoIGN5Y2xlLgogICAqCiAgICogKipTeW50YXgqKjogYDxlYXNpbmctZnVuY3Rpb24+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgZWFzZWAKICAgKi8KICAiLW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uIj86IFByb3BlcnR5LkFuaW1hdGlvblRpbWluZ0Z1bmN0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgKiphcHBlYXJhbmNlKipgIENTUyBwcm9wZXJ0eSBpcyB1c2VkIHRvIGRpc3BsYXkgYW4gZWxlbWVudCB1c2luZyBwbGF0Zm9ybS1uYXRpdmUgc3R5bGluZywgYmFzZWQgb24gdGhlIG9wZXJhdGluZyBzeXN0ZW0ncyB0aGVtZS4gVGhlICoqYC1tb3otYXBwZWFyYW5jZWAqKiBhbmQgKipgLXdlYmtpdC1hcHBlYXJhbmNlYCoqIHByb3BlcnRpZXMgYXJlIG5vbi1zdGFuZGFyZCB2ZXJzaW9ucyBvZiB0aGlzIHByb3BlcnR5LCB1c2VkIChyZXNwZWN0aXZlbHkpIGJ5IEdlY2tvIChGaXJlZm94KSBhbmQgYnkgV2ViS2l0LWJhc2VkIChlLmcuLCBTYWZhcmkpIGFuZCBCbGluay1iYXNlZCAoZS5nLiwgQ2hyb21lLCBPcGVyYSkgYnJvd3NlcnMgdG8gYWNoaWV2ZSB0aGUgc2FtZSB0aGluZy4gTm90ZSB0aGF0IEZpcmVmb3ggYW5kIEVkZ2UgYWxzbyBzdXBwb3J0ICoqYC13ZWJraXQtYXBwZWFyYW5jZWAqKiwgZm9yIGNvbXBhdGliaWxpdHkgcmVhc29ucy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgYnV0dG9uIHwgYnV0dG9uLWFycm93LWRvd24gfCBidXR0b24tYXJyb3ctbmV4dCB8IGJ1dHRvbi1hcnJvdy1wcmV2aW91cyB8IGJ1dHRvbi1hcnJvdy11cCB8IGJ1dHRvbi1iZXZlbCB8IGJ1dHRvbi1mb2N1cyB8IGNhcmV0IHwgY2hlY2tib3ggfCBjaGVja2JveC1jb250YWluZXIgfCBjaGVja2JveC1sYWJlbCB8IGNoZWNrbWVudWl0ZW0gfCBkdWFsYnV0dG9uIHwgZ3JvdXBib3ggfCBsaXN0Ym94IHwgbGlzdGl0ZW0gfCBtZW51YXJyb3cgfCBtZW51YmFyIHwgbWVudWNoZWNrYm94IHwgbWVudWltYWdlIHwgbWVudWl0ZW0gfCBtZW51aXRlbXRleHQgfCBtZW51bGlzdCB8IG1lbnVsaXN0LWJ1dHRvbiB8IG1lbnVsaXN0LXRleHQgfCBtZW51bGlzdC10ZXh0ZmllbGQgfCBtZW51cG9wdXAgfCBtZW51cmFkaW8gfCBtZW51c2VwYXJhdG9yIHwgbWV0ZXJiYXIgfCBtZXRlcmNodW5rIHwgcHJvZ3Jlc3NiYXIgfCBwcm9ncmVzc2Jhci12ZXJ0aWNhbCB8IHByb2dyZXNzY2h1bmsgfCBwcm9ncmVzc2NodW5rLXZlcnRpY2FsIHwgcmFkaW8gfCByYWRpby1jb250YWluZXIgfCByYWRpby1sYWJlbCB8IHJhZGlvbWVudWl0ZW0gfCByYW5nZSB8IHJhbmdlLXRodW1iIHwgcmVzaXplciB8IHJlc2l6ZXJwYW5lbCB8IHNjYWxlLWhvcml6b250YWwgfCBzY2FsZXRodW1iZW5kIHwgc2NhbGV0aHVtYi1ob3Jpem9udGFsIHwgc2NhbGV0aHVtYnN0YXJ0IHwgc2NhbGV0aHVtYnRpY2sgfCBzY2FsZXRodW1iLXZlcnRpY2FsIHwgc2NhbGUtdmVydGljYWwgfCBzY3JvbGxiYXJidXR0b24tZG93biB8IHNjcm9sbGJhcmJ1dHRvbi1sZWZ0IHwgc2Nyb2xsYmFyYnV0dG9uLXJpZ2h0IHwgc2Nyb2xsYmFyYnV0dG9uLXVwIHwgc2Nyb2xsYmFydGh1bWItaG9yaXpvbnRhbCB8IHNjcm9sbGJhcnRodW1iLXZlcnRpY2FsIHwgc2Nyb2xsYmFydHJhY2staG9yaXpvbnRhbCB8IHNjcm9sbGJhcnRyYWNrLXZlcnRpY2FsIHwgc2VhcmNoZmllbGQgfCBzZXBhcmF0b3IgfCBzaGVldCB8IHNwaW5uZXIgfCBzcGlubmVyLWRvd25idXR0b24gfCBzcGlubmVyLXRleHRmaWVsZCB8IHNwaW5uZXItdXBidXR0b24gfCBzcGxpdHRlciB8IHN0YXR1c2JhciB8IHN0YXR1c2JhcnBhbmVsIHwgdGFiIHwgdGFicGFuZWwgfCB0YWJwYW5lbHMgfCB0YWItc2Nyb2xsLWFycm93LWJhY2sgfCB0YWItc2Nyb2xsLWFycm93LWZvcndhcmQgfCB0ZXh0ZmllbGQgfCB0ZXh0ZmllbGQtbXVsdGlsaW5lIHwgdG9vbGJhciB8IHRvb2xiYXJidXR0b24gfCB0b29sYmFyYnV0dG9uLWRyb3Bkb3duIHwgdG9vbGJhcmdyaXBwZXIgfCB0b29sYm94IHwgdG9vbHRpcCB8IHRyZWVoZWFkZXIgfCB0cmVlaGVhZGVyY2VsbCB8IHRyZWVoZWFkZXJzb3J0YXJyb3cgfCB0cmVlaXRlbSB8IHRyZWVsaW5lIHwgdHJlZXR3aXN0eSB8IHRyZWV0d2lzdHlvcGVuIHwgdHJlZXZpZXcgfCAtbW96LW1hYy11bmlmaWVkLXRvb2xiYXIgfCAtbW96LXdpbi1ib3JkZXJsZXNzLWdsYXNzIHwgLW1vei13aW4tYnJvd3NlcnRhYmJhci10b29sYm94IHwgLW1vei13aW4tY29tbXVuaWNhdGlvbnN0ZXh0IHwgLW1vei13aW4tY29tbXVuaWNhdGlvbnMtdG9vbGJveCB8IC1tb3otd2luLWV4Y2x1ZGUtZ2xhc3MgfCAtbW96LXdpbi1nbGFzcyB8IC1tb3otd2luLW1lZGlhdGV4dCB8IC1tb3otd2luLW1lZGlhLXRvb2xib3ggfCAtbW96LXdpbmRvdy1idXR0b24tYm94IHwgLW1vei13aW5kb3ctYnV0dG9uLWJveC1tYXhpbWl6ZWQgfCAtbW96LXdpbmRvdy1idXR0b24tY2xvc2UgfCAtbW96LXdpbmRvdy1idXR0b24tbWF4aW1pemUgfCAtbW96LXdpbmRvdy1idXR0b24tbWluaW1pemUgfCAtbW96LXdpbmRvdy1idXR0b24tcmVzdG9yZSB8IC1tb3otd2luZG93LWZyYW1lLWJvdHRvbSB8IC1tb3otd2luZG93LWZyYW1lLWxlZnQgfCAtbW96LXdpbmRvdy1mcmFtZS1yaWdodCB8IC1tb3otd2luZG93LXRpdGxlYmFyIHwgLW1vei13aW5kb3ctdGl0bGViYXItbWF4aW1pemVkYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYCAoYnV0IHRoaXMgdmFsdWUgaXMgb3ZlcnJpZGRlbiBpbiB0aGUgdXNlciBhZ2VudCBDU1MpCiAgICovCiAgIi1tb3otYXBwZWFyYW5jZSI/OiBQcm9wZXJ0eS5Nb3pBcHBlYXJhbmNlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBiYWNrZmFjZS12aXNpYmlsaXR5YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgdGhlIGJhY2sgZmFjZSBvZiBhbiBlbGVtZW50IGlzIHZpc2libGUgd2hlbiB0dXJuZWQgdG93YXJkcyB0aGUgdXNlci4KICAgKgogICAqICoqU3ludGF4Kio6IGB2aXNpYmxlIHwgaGlkZGVuYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGB2aXNpYmxlYAogICAqLwogICItbW96LWJhY2tmYWNlLXZpc2liaWxpdHkiPzogUHJvcGVydHkuQmFja2ZhY2VWaXNpYmlsaXR5IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIEluIE1vemlsbGEgYXBwbGljYXRpb25zIGxpa2UgRmlyZWZveCwgdGhlICoqYC1tb3otYm9yZGVyLWJvdHRvbS1jb2xvcnNgKiogQ1NTIHByb3BlcnR5IHNldHMgYSBsaXN0IG9mIGNvbG9ycyBmb3IgdGhlIGJvdHRvbSBib3JkZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGNvbG9yPisgfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogICItbW96LWJvcmRlci1ib3R0b20tY29sb3JzIj86IFByb3BlcnR5Lk1vekJvcmRlckJvdHRvbUNvbG9ycyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWlubGluZS1lbmQtY29sb3JgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGNvbG9yIG9mIHRoZSBsb2dpY2FsIGlubGluZS1lbmQgYm9yZGVyIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBib3JkZXIgY29sb3IgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgYm9yZGVyLXRvcC1jb2xvcmAsIGBib3JkZXItcmlnaHQtY29sb3JgLCBgYm9yZGVyLWJvdHRvbS1jb2xvcmAsIG9yIGBib3JkZXItbGVmdC1jb2xvcmAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXRvcC1jb2xvcic+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjdXJyZW50Y29sb3JgCiAgICovCiAgIi1tb3otYm9yZGVyLWVuZC1jb2xvciI/OiBQcm9wZXJ0eS5Cb3JkZXJJbmxpbmVFbmRDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWlubGluZS1lbmQtc3R5bGVgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIHN0eWxlIG9mIHRoZSBsb2dpY2FsIGlubGluZSBlbmQgYm9yZGVyIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBib3JkZXIgc3R5bGUgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgYm9yZGVyLXRvcC1zdHlsZWAsIGBib3JkZXItcmlnaHQtc3R5bGVgLCBgYm9yZGVyLWJvdHRvbS1zdHlsZWAsIG9yIGBib3JkZXItbGVmdC1zdHlsZWAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXRvcC1zdHlsZSc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogICItbW96LWJvcmRlci1lbmQtc3R5bGUiPzogUHJvcGVydHkuQm9yZGVySW5saW5lRW5kU3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbmxpbmUtZW5kLXdpZHRoYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSB3aWR0aCBvZiB0aGUgbG9naWNhbCBpbmxpbmUtZW5kIGJvcmRlciBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIHdpZHRoIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYGJvcmRlci10b3Atd2lkdGhgLCBgYm9yZGVyLXJpZ2h0LXdpZHRoYCwgYGJvcmRlci1ib3R0b20td2lkdGhgLCBvciBgYm9yZGVyLWxlZnQtd2lkdGhgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3Atd2lkdGgnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWVkaXVtYAogICAqLwogICItbW96LWJvcmRlci1lbmQtd2lkdGgiPzogUHJvcGVydHkuQm9yZGVySW5saW5lRW5kV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogSW4gTW96aWxsYSBhcHBsaWNhdGlvbnMgbGlrZSBGaXJlZm94LCB0aGUgKipgLW1vei1ib3JkZXItbGVmdC1jb2xvcnNgKiogQ1NTIHByb3BlcnR5IHNldHMgYSBsaXN0IG9mIGNvbG9ycyBmb3IgdGhlIGxlZnQgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj4rIHwgbm9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICAiLW1vei1ib3JkZXItbGVmdC1jb2xvcnMiPzogUHJvcGVydHkuTW96Qm9yZGVyTGVmdENvbG9ycyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBJbiBNb3ppbGxhIGFwcGxpY2F0aW9ucyBsaWtlIEZpcmVmb3gsIHRoZSAqKmAtbW96LWJvcmRlci1yaWdodC1jb2xvcnNgKiogQ1NTIHByb3BlcnR5IHNldHMgYSBsaXN0IG9mIGNvbG9ycyBmb3IgdGhlIHJpZ2h0IGJvcmRlci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+KyB8IG5vbmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgIi1tb3otYm9yZGVyLXJpZ2h0LWNvbG9ycyI/OiBQcm9wZXJ0eS5Nb3pCb3JkZXJSaWdodENvbG9ycyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWlubGluZS1zdGFydC1jb2xvcmAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgY29sb3Igb2YgdGhlIGxvZ2ljYWwgaW5saW5lIHN0YXJ0IGJvcmRlciBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgYm9yZGVyIGNvbG9yIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYGJvcmRlci10b3AtY29sb3JgLCBgYm9yZGVyLXJpZ2h0LWNvbG9yYCwgYGJvcmRlci1ib3R0b20tY29sb3JgLCBvciBgYm9yZGVyLWxlZnQtY29sb3JgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci10b3AtY29sb3InPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY3VycmVudGNvbG9yYAogICAqLwogICItbW96LWJvcmRlci1zdGFydC1jb2xvciI/OiBQcm9wZXJ0eS5Cb3JkZXJJbmxpbmVTdGFydENvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItaW5saW5lLXN0YXJ0LXN0eWxlYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBzdHlsZSBvZiB0aGUgbG9naWNhbCBpbmxpbmUgc3RhcnQgYm9yZGVyIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBib3JkZXIgc3R5bGUgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgYm9yZGVyLXRvcC1zdHlsZWAsIGBib3JkZXItcmlnaHQtc3R5bGVgLCBgYm9yZGVyLWJvdHRvbS1zdHlsZWAsIG9yIGBib3JkZXItbGVmdC1zdHlsZWAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXRvcC1zdHlsZSc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogICItbW96LWJvcmRlci1zdGFydC1zdHlsZSI/OiBQcm9wZXJ0eS5Cb3JkZXJJbmxpbmVTdGFydFN0eWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIEluIE1vemlsbGEgYXBwbGljYXRpb25zIGxpa2UgRmlyZWZveCwgdGhlICoqYC1tb3otYm9yZGVyLXRvcC1jb2xvcnNgKiogQ1NTIHByb3BlcnR5IHNldHMgYSBsaXN0IG9mIGNvbG9ycyBmb3IgdGhlIHRvcCBib3JkZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGNvbG9yPisgfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogICItbW96LWJvcmRlci10b3AtY29sb3JzIj86IFByb3BlcnR5Lk1vekJvcmRlclRvcENvbG9ycyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LXNpemluZ2AqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgdGhlIHRvdGFsIHdpZHRoIGFuZCBoZWlnaHQgb2YgYW4gZWxlbWVudCBpcyBjYWxjdWxhdGVkLgogICAqCiAgICogKipTeW50YXgqKjogYGNvbnRlbnQtYm94IHwgYm9yZGVyLWJveGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY29udGVudC1ib3hgCiAgICovCiAgIi1tb3otYm94LXNpemluZyI/OiBQcm9wZXJ0eS5Cb3hTaXppbmcgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi1jb3VudGAqKiBDU1MgcHJvcGVydHkgYnJlYWtzIGFuIGVsZW1lbnQncyBjb250ZW50IGludG8gdGhlIHNwZWNpZmllZCBudW1iZXIgb2YgY29sdW1ucy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8aW50ZWdlcj4gfCBhdXRvYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqLwogICItbW96LWNvbHVtbi1jb3VudCI/OiBQcm9wZXJ0eS5Db2x1bW5Db3VudCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uLWZpbGxgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIGhvdyBhbiBlbGVtZW50J3MgY29udGVudHMgYXJlIGJhbGFuY2VkIHdoZW4gYnJva2VuIGludG8gY29sdW1ucy4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgYmFsYW5jZSB8IGJhbGFuY2UtYWxsYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBiYWxhbmNlYAogICAqLwogICItbW96LWNvbHVtbi1maWxsIj86IFByb3BlcnR5LkNvbHVtbkZpbGwgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi1nYXBgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHNpemUgb2YgdGhlIGdhcCAoZ3V0dGVyKSBiZXR3ZWVuIGFuIGVsZW1lbnQncyBjb2x1bW5zLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IDxsZW5ndGgtcGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKi8KICAiLW1vei1jb2x1bW4tZ2FwIj86IFByb3BlcnR5LkNvbHVtbkdhcDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uLXJ1bGUtY29sb3JgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGNvbG9yIG9mIHRoZSBsaW5lIGRyYXduIGJldHdlZW4gY29sdW1ucyBpbiBhIG11bHRpLWNvbHVtbiBsYXlvdXQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGNvbG9yPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY3VycmVudGNvbG9yYAogICAqLwogICItbW96LWNvbHVtbi1ydWxlLWNvbG9yIj86IFByb3BlcnR5LkNvbHVtblJ1bGVDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uLXJ1bGUtc3R5bGVgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHN0eWxlIG9mIHRoZSBsaW5lIGRyYXduIGJldHdlZW4gY29sdW1ucyBpbiBhIG11bHRpLWNvbHVtbiBsYXlvdXQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItc3R5bGUnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICAiLW1vei1jb2x1bW4tcnVsZS1zdHlsZSI/OiBQcm9wZXJ0eS5Db2x1bW5SdWxlU3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi1ydWxlLXdpZHRoYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSB3aWR0aCBvZiB0aGUgbGluZSBkcmF3biBiZXR3ZWVuIGNvbHVtbnMgaW4gYSBtdWx0aS1jb2x1bW4gbGF5b3V0LgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXdpZHRoJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG1lZGl1bWAKICAgKi8KICAiLW1vei1jb2x1bW4tcnVsZS13aWR0aCI/OiBQcm9wZXJ0eS5Db2x1bW5SdWxlV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi13aWR0aGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgaWRlYWwgY29sdW1uIHdpZHRoIGluIGEgbXVsdGktY29sdW1uIGxheW91dC4gVGhlIGNvbnRhaW5lciB3aWxsIGhhdmUgYXMgbWFueSBjb2x1bW5zIGFzIGNhbiBmaXQgd2l0aG91dCBhbnkgb2YgdGhlbSBoYXZpbmcgYSB3aWR0aCBsZXNzIHRoYW4gdGhlIGBjb2x1bW4td2lkdGhgIHZhbHVlLiBJZiB0aGUgd2lkdGggb2YgdGhlIGNvbnRhaW5lciBpcyBuYXJyb3dlciB0aGFuIHRoZSBzcGVjaWZpZWQgdmFsdWUsIHRoZSBzaW5nbGUgY29sdW1uJ3Mgd2lkdGggd2lsbCBiZSBzbWFsbGVyIHRoYW4gdGhlIGRlY2xhcmVkIGNvbHVtbiB3aWR0aC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPiB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgIi1tb3otY29sdW1uLXdpZHRoIj86IFByb3BlcnR5LkNvbHVtbldpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgKiotbW96LWNvbnRleHQtcHJvcGVydGllcyoqYCBwcm9wZXJ0eSBjYW4gYmUgdXNlZCB3aXRoaW4gcHJpdmlsZWdlZCBjb250ZXh0cyBpbiBGaXJlZm94IHRvIHNoYXJlIHRoZSB2YWx1ZXMgb2Ygc3BlY2lmaWVkIHByb3BlcnRpZXMgb2YgdGhlIGVsZW1lbnQgd2l0aCBhIGNoaWxkIFNWRyBpbWFnZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgWyBmaWxsIHwgZmlsbC1vcGFjaXR5IHwgc3Ryb2tlIHwgc3Ryb2tlLW9wYWNpdHkgXSNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgIi1tb3otY29udGV4dC1wcm9wZXJ0aWVzIj86IFByb3BlcnR5Lk1vekNvbnRleHRQcm9wZXJ0aWVzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb250LWZlYXR1cmUtc2V0dGluZ3NgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIGFkdmFuY2VkIHR5cG9ncmFwaGljIGZlYXR1cmVzIGluIE9wZW5UeXBlIGZvbnRzLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IDxmZWF0dXJlLXRhZy12YWx1ZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICovCiAgIi1tb3otZm9udC1mZWF0dXJlLXNldHRpbmdzIj86IFByb3BlcnR5LkZvbnRGZWF0dXJlU2V0dGluZ3MgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQtbGFuZ3VhZ2Utb3ZlcnJpZGVgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIHRoZSB1c2Ugb2YgbGFuZ3VhZ2Utc3BlY2lmaWMgZ2x5cGhzIGluIGEgdHlwZWZhY2UuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgPHN0cmluZz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKi8KICAiLW1vei1mb250LWxhbmd1YWdlLW92ZXJyaWRlIj86IFByb3BlcnR5LkZvbnRMYW5ndWFnZU92ZXJyaWRlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBoeXBoZW5zYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgaG93IHdvcmRzIHNob3VsZCBiZSBoeXBoZW5hdGVkIHdoZW4gdGV4dCB3cmFwcyBhY3Jvc3MgbXVsdGlwbGUgbGluZXMuIEl0IGNhbiBwcmV2ZW50IGh5cGhlbmF0aW9uIGVudGlyZWx5LCBoeXBoZW5hdGUgYXQgbWFudWFsbHktc3BlY2lmaWVkIHBvaW50cyB3aXRoaW4gdGhlIHRleHQsIG9yIGxldCB0aGUgYnJvd3NlciBhdXRvbWF0aWNhbGx5IGluc2VydCBoeXBoZW5zIHdoZXJlIGFwcHJvcHJpYXRlLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBtYW51YWwgfCBhdXRvYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBtYW51YWxgCiAgICovCiAgIi1tb3otaHlwaGVucyI/OiBQcm9wZXJ0eS5IeXBoZW5zIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIEZvciBjZXJ0YWluIFhVTCBlbGVtZW50cyBhbmQgcHNldWRvLWVsZW1lbnRzIHRoYXQgdXNlIGFuIGltYWdlIGZyb20gdGhlIGBsaXN0LXN0eWxlLWltYWdlYCBwcm9wZXJ0eSwgdGhpcyBwcm9wZXJ0eSBzcGVjaWZpZXMgYSByZWdpb24gb2YgdGhlIGltYWdlIHRoYXQgaXMgdXNlZCBpbiBwbGFjZSBvZiB0aGUgd2hvbGUgaW1hZ2UuIFRoaXMgYWxsb3dzIGVsZW1lbnRzIHRvIHVzZSBkaWZmZXJlbnQgcGllY2VzIG9mIHRoZSBzYW1lIGltYWdlIHRvIGltcHJvdmUgcGVyZm9ybWFuY2UuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHNoYXBlPiB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgIi1tb3otaW1hZ2UtcmVnaW9uIj86IFByb3BlcnR5Lk1vekltYWdlUmVnaW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXJnaW4taW5saW5lLWVuZGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBpbmxpbmUgZW5kIG1hcmdpbiBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgbWFyZ2luIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJbiBvdGhlciB3b3JkcywgaXQgY29ycmVzcG9uZHMgdG8gdGhlIGBtYXJnaW4tdG9wYCwgYG1hcmdpbi1yaWdodGAsIGBtYXJnaW4tYm90dG9tYCBvciBgbWFyZ2luLWxlZnRgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J21hcmdpbi1sZWZ0Jz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgIi1tb3otbWFyZ2luLWVuZCI/OiBQcm9wZXJ0eS5NYXJnaW5JbmxpbmVFbmQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hcmdpbi1pbmxpbmUtc3RhcnRgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgaW5saW5lIHN0YXJ0IG1hcmdpbiBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgbWFyZ2luIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYG1hcmdpbi10b3BgLCBgbWFyZ2luLXJpZ2h0YCwgYG1hcmdpbi1ib3R0b21gLCBvciBgbWFyZ2luLWxlZnRgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J21hcmdpbi1sZWZ0Jz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgIi1tb3otbWFyZ2luLXN0YXJ0Ij86IFByb3BlcnR5Lk1hcmdpbklubGluZVN0YXJ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbW96LW9yaWVudGAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHRoZSBvcmllbnRhdGlvbiBvZiB0aGUgZWxlbWVudCB0byB3aGljaCBpdCdzIGFwcGxpZWQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgaW5saW5lIHwgYmxvY2sgfCBob3Jpem9udGFsIHwgdmVydGljYWxgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGlubGluZWAKICAgKi8KICAiLW1vei1vcmllbnQiPzogUHJvcGVydHkuTW96T3JpZW50IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb250LXNtb290aGAqKiBDU1MgcHJvcGVydHkgY29udHJvbHMgdGhlIGFwcGxpY2F0aW9uIG9mIGFudGktYWxpYXNpbmcgd2hlbiBmb250cyBhcmUgcmVuZGVyZWQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IG5ldmVyIHwgYWx3YXlzIHwgPGFic29sdXRlLXNpemU+IHwgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgIi1tb3otb3N4LWZvbnQtc21vb3RoaW5nIj86IFByb3BlcnR5LkZvbnRTbW9vdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHBhZGRpbmctaW5saW5lLWVuZGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBpbmxpbmUgZW5kIHBhZGRpbmcgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIHBhZGRpbmcgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdwYWRkaW5nLWxlZnQnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKi8KICAiLW1vei1wYWRkaW5nLWVuZCI/OiBQcm9wZXJ0eS5QYWRkaW5nSW5saW5lRW5kPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwYWRkaW5nLWlubGluZS1zdGFydGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBpbmxpbmUgc3RhcnQgcGFkZGluZyBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgcGFkZGluZyBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3BhZGRpbmctbGVmdCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqLwogICItbW96LXBhZGRpbmctc3RhcnQiPzogUHJvcGVydHkuUGFkZGluZ0lubGluZVN0YXJ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwZXJzcGVjdGl2ZWAqKiBDU1MgcHJvcGVydHkgZGV0ZXJtaW5lcyB0aGUgZGlzdGFuY2UgYmV0d2VlbiB0aGUgej0wIHBsYW5lIGFuZCB0aGUgdXNlciBpbiBvcmRlciB0byBnaXZlIGEgM0QtcG9zaXRpb25lZCBlbGVtZW50IHNvbWUgcGVyc3BlY3RpdmUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogICItbW96LXBlcnNwZWN0aXZlIj86IFByb3BlcnR5LlBlcnNwZWN0aXZlPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwZXJzcGVjdGl2ZS1vcmlnaW5gKiogQ1NTIHByb3BlcnR5IGRldGVybWluZXMgdGhlIHBvc2l0aW9uIGF0IHdoaWNoIHRoZSB2aWV3ZXIgaXMgbG9va2luZy4gSXQgaXMgdXNlZCBhcyB0aGUgX3ZhbmlzaGluZyBwb2ludF8gYnkgdGhlIGBwZXJzcGVjdGl2ZWAgcHJvcGVydHkuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHBvc2l0aW9uPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgNTAlIDUwJWAKICAgKi8KICAiLW1vei1wZXJzcGVjdGl2ZS1vcmlnaW4iPzogUHJvcGVydHkuUGVyc3BlY3RpdmVPcmlnaW48VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogKipgLW1vei1zdGFjay1zaXppbmdgKiogaXMgYW4gZXh0ZW5kZWQgQ1NTIHByb3BlcnR5LiBOb3JtYWxseSwgYSBgPHh1bDpzdGFjaz5gIHdpbGwgY2hhbmdlIGl0cyBzaXplIHNvIHRoYXQgYWxsIG9mIGl0cyBjaGlsZCBlbGVtZW50cyBhcmUgY29tcGxldGVseSB2aXNpYmxlLiBGb3IgZXhhbXBsZSwgbW92aW5nIGEgY2hpbGQgb2YgdGhlIHN0YWNrIGZhciB0byB0aGUgcmlnaHQgd2lsbCB3aWRlbiB0aGUgc3RhY2sgc28gdGhlIGNoaWxkIHJlbWFpbnMgdmlzaWJsZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBpZ25vcmUgfCBzdHJldGNoLXRvLWZpdGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc3RyZXRjaC10by1maXRgCiAgICovCiAgIi1tb3otc3RhY2stc2l6aW5nIj86IFByb3BlcnR5Lk1velN0YWNrU2l6aW5nIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0YWItc2l6ZWAqKiBDU1MgcHJvcGVydHkgaXMgdXNlZCB0byBjdXN0b21pemUgdGhlIHdpZHRoIG9mIHRhYiBjaGFyYWN0ZXJzIChVKzAwMDkpLgogICAqCiAgICogKipTeW50YXgqKjogYDxpbnRlZ2VyPiB8IDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGA4YAogICAqLwogICItbW96LXRhYi1zaXplIj86IFByb3BlcnR5LlRhYlNpemU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tb3otdGV4dC1ibGlua2AqKiBub24tc3RhbmRhcmQgTW96aWxsYSBDU1MgZXh0ZW5zaW9uIHNwZWNpZmllcyB0aGUgYmxpbmsgbW9kZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgYmxpbmtgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgIi1tb3otdGV4dC1ibGluayI/OiBQcm9wZXJ0eS5Nb3pUZXh0QmxpbmsgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtc2l6ZS1hZGp1c3RgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIHRoZSB0ZXh0IGluZmxhdGlvbiBhbGdvcml0aG0gdXNlZCBvbiBzb21lIHNtYXJ0cGhvbmVzIGFuZCB0YWJsZXRzLiBPdGhlciBicm93c2VycyB3aWxsIGlnbm9yZSB0aGlzIHByb3BlcnR5LgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBhdXRvIHwgPHBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYCBmb3Igc21hcnRwaG9uZSBicm93c2VycyBzdXBwb3J0aW5nIGluZmxhdGlvbiwgYG5vbmVgIGluIG90aGVyIGNhc2VzIChhbmQgdGhlbiBub3QgbW9kaWZpYWJsZSkuCiAgICovCiAgIi1tb3otdGV4dC1zaXplLWFkanVzdCI/OiBQcm9wZXJ0eS5UZXh0U2l6ZUFkanVzdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNmb3JtLW9yaWdpbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgb3JpZ2luIGZvciBhbiBlbGVtZW50J3MgdHJhbnNmb3JtYXRpb25zLgogICAqCiAgICogKipTeW50YXgqKjogYFsgPGxlbmd0aC1wZXJjZW50YWdlPiB8IGxlZnQgfCBjZW50ZXIgfCByaWdodCB8IHRvcCB8IGJvdHRvbSBdIHwgWyBbIDxsZW5ndGgtcGVyY2VudGFnZT4gfCBsZWZ0IHwgY2VudGVyIHwgcmlnaHQgXSAmJiBbIDxsZW5ndGgtcGVyY2VudGFnZT4gfCB0b3AgfCBjZW50ZXIgfCBib3R0b20gXSBdIDxsZW5ndGg+P2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgNTAlIDUwJSAwYAogICAqLwogICItbW96LXRyYW5zZm9ybS1vcmlnaW4iPzogUHJvcGVydHkuVHJhbnNmb3JtT3JpZ2luPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2Zvcm0tc3R5bGVgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hldGhlciBjaGlsZHJlbiBvZiBhbiBlbGVtZW50IGFyZSBwb3NpdGlvbmVkIGluIHRoZSAzRCBzcGFjZSBvciBhcmUgZmxhdHRlbmVkIGluIHRoZSBwbGFuZSBvZiB0aGUgZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGBmbGF0IHwgcHJlc2VydmUtM2RgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGZsYXRgCiAgICovCiAgIi1tb3otdHJhbnNmb3JtLXN0eWxlIj86IFByb3BlcnR5LlRyYW5zZm9ybVN0eWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2l0aW9uLWRlbGF5YCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIGR1cmF0aW9uIHRvIHdhaXQgYmVmb3JlIHN0YXJ0aW5nIGEgcHJvcGVydHkncyB0cmFuc2l0aW9uIGVmZmVjdCB3aGVuIGl0cyB2YWx1ZSBjaGFuZ2VzLgogICAqCiAgICogKipTeW50YXgqKjogYDx0aW1lPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBzYAogICAqLwogICItbW96LXRyYW5zaXRpb24tZGVsYXkiPzogUHJvcGVydHkuVHJhbnNpdGlvbkRlbGF5PFRUaW1lPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNpdGlvbi1kdXJhdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbGVuZ3RoIG9mIHRpbWUgYSB0cmFuc2l0aW9uIGFuaW1hdGlvbiBzaG91bGQgdGFrZSB0byBjb21wbGV0ZS4gQnkgZGVmYXVsdCwgdGhlIHZhbHVlIGlzIGAwc2AsIG1lYW5pbmcgdGhhdCBubyBhbmltYXRpb24gd2lsbCBvY2N1ci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8dGltZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwc2AKICAgKi8KICAiLW1vei10cmFuc2l0aW9uLWR1cmF0aW9uIj86IFByb3BlcnR5LlRyYW5zaXRpb25EdXJhdGlvbjxUVGltZT4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zaXRpb24tcHJvcGVydHlgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIENTUyBwcm9wZXJ0aWVzIHRvIHdoaWNoIGEgdHJhbnNpdGlvbiBlZmZlY3Qgc2hvdWxkIGJlIGFwcGxpZWQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxzaW5nbGUtdHJhbnNpdGlvbi1wcm9wZXJ0eT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGFsbAogICAqLwogICItbW96LXRyYW5zaXRpb24tcHJvcGVydHkiPzogUHJvcGVydHkuVHJhbnNpdGlvblByb3BlcnR5IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgaW50ZXJtZWRpYXRlIHZhbHVlcyBhcmUgY2FsY3VsYXRlZCBmb3IgQ1NTIHByb3BlcnRpZXMgYmVpbmcgYWZmZWN0ZWQgYnkgYSB0cmFuc2l0aW9uIGVmZmVjdC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8ZWFzaW5nLWZ1bmN0aW9uPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGVhc2VgCiAgICovCiAgIi1tb3otdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb24iPzogUHJvcGVydHkuVHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbW96LXVzZXItZm9jdXNgKiogQ1NTIHByb3BlcnR5IGlzIHVzZWQgdG8gaW5kaWNhdGUgd2hldGhlciBhbiBlbGVtZW50IGNhbiBoYXZlIHRoZSBmb2N1cy4KICAgKgogICAqICoqU3ludGF4Kio6IGBpZ25vcmUgfCBub3JtYWwgfCBzZWxlY3QtYWZ0ZXIgfCBzZWxlY3QtYmVmb3JlIHwgc2VsZWN0LW1lbnUgfCBzZWxlY3Qtc2FtZSB8IHNlbGVjdC1hbGwgfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogICItbW96LXVzZXItZm9jdXMiPzogUHJvcGVydHkuTW96VXNlckZvY3VzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB1c2VyLW1vZGlmeWAqKiBwcm9wZXJ0eSBoYXMgbm8gZWZmZWN0IGluIEZpcmVmb3guIEl0IHdhcyBvcmlnaW5hbGx5IHBsYW5uZWQgdG/CoGRldGVybWluZSB3aGV0aGVyIG9yIG5vdCB0aGUgY29udGVudCBvZiBhbiBlbGVtZW50IGNhbiBiZSBlZGl0ZWQgYnkgYSB1c2VyLgogICAqCiAgICogKipTeW50YXgqKjogYHJlYWQtb25seSB8IHJlYWQtd3JpdGUgfCB3cml0ZS1vbmx5YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGByZWFkLW9ubHlgCiAgICovCiAgIi1tb3otdXNlci1tb2RpZnkiPzogUHJvcGVydHkuTW96VXNlck1vZGlmeSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYCoqdXNlci1zZWxlY3QqKmAgQ1NTIHByb3BlcnR5IGNvbnRyb2xzIHdoZXRoZXIgdGhlIHVzZXIgY2FuIHNlbGVjdCB0ZXh0LiBUaGlzIGRvZXNuJ3QgaGF2ZSBhbnkgZWZmZWN0IG9uIGNvbnRlbnQgbG9hZGVkIGFzIGNocm9tZSwgZXhjZXB0IGluIHRleHRib3hlcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgdGV4dCB8IG5vbmUgfCBjb250YWluIHwgYWxsYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqLwogICItbW96LXVzZXItc2VsZWN0Ij86IFByb3BlcnR5LlVzZXJTZWxlY3QgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tb3otd2luZG93LWRyYWdnaW5nYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgd2hldGhlciBhIHdpbmRvdyBpcyBkcmFnZ2FibGUgb3Igbm90LiBJdCBvbmx5IHdvcmtzIGluIENocm9tZSBjb2RlLCBhbmQgb25seSBvbiBNYWMgT1MgWC4KICAgKgogICAqICoqU3ludGF4Kio6IGBkcmFnIHwgbm8tZHJhZ2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgZHJhZ2AKICAgKi8KICAiLW1vei13aW5kb3ctZHJhZ2dpbmciPzogUHJvcGVydHkuTW96V2luZG93RHJhZ2dpbmcgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tb3otd2luZG93LXNoYWRvd2AqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHdoZXRoZXIgYSB3aW5kb3cgd2lsbCBoYXZlIGEgc2hhZG93LiBJdCBvbmx5IHdvcmtzIG9uIE1hYyBPUyBYLgogICAqCiAgICogKipTeW50YXgqKjogYGRlZmF1bHQgfCBtZW51IHwgdG9vbHRpcCB8IHNoZWV0IHwgbm9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgZGVmYXVsdGAKICAgKi8KICAiLW1vei13aW5kb3ctc2hhZG93Ij86IFByb3BlcnR5Lk1veldpbmRvd1NoYWRvdyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLWFjY2VsZXJhdG9yYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzZXRzIG9yIHJldHJpZXZlcyBhIHN0cmluZyBpbmRpY2F0aW5nIHdoZXRoZXIgdGhlIG9iamVjdCByZXByZXNlbnRzIGEga2V5Ym9hcmQgc2hvcnRjdXQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgZmFsc2UgfCB0cnVlYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBmYWxzZWAKICAgKi8KICAiLW1zLWFjY2VsZXJhdG9yIj86IFByb3BlcnR5Lk1zQWNjZWxlcmF0b3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFsaWduLXNlbGZgKiogQ1NTIHByb3BlcnR5IG92ZXJyaWRlcyBhIGdyaWQgb3IgZmxleCBpdGVtJ3MgYGFsaWduLWl0ZW1zYCB2YWx1ZS4gSW4gR3JpZCwgaXQgYWxpZ25zIHRoZSBpdGVtIGluc2lkZSB0aGXCoGdyaWQgYXJlYS4gSW4gRmxleGJveCwgaXQgYWxpZ25zIHRoZSBpdGVtIG9uIHRoZSBjcm9zcyBheGlzLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBub3JtYWwgfCBzdHJldGNoIHwgPGJhc2VsaW5lLXBvc2l0aW9uPiB8IDxvdmVyZmxvdy1wb3NpdGlvbj4/IDxzZWxmLXBvc2l0aW9uPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICAiLW1zLWFsaWduLXNlbGYiPzogUHJvcGVydHkuQWxpZ25TZWxmIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtYmxvY2stcHJvZ3Jlc3Npb25gKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyB0aGUgYmxvY2sgcHJvZ3Jlc3Npb24gYW5kIGxheW91dCBvcmllbnRhdGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGB0YiB8IHJsIHwgYnQgfCBscmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgdGJgCiAgICovCiAgIi1tcy1ibG9jay1wcm9ncmVzc2lvbiI/OiBQcm9wZXJ0eS5Nc0Jsb2NrUHJvZ3Jlc3Npb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1jb250ZW50LXpvb20tY2hhaW5pbmdgKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiBzcGVjaWZ5aW5nIHRoZSB6b29tIGJlaGF2aW9yIHRoYXQgb2NjdXJzIHdoZW4gYSB1c2VyIGhpdHMgdGhlIHpvb20gbGltaXQgZHVyaW5nIHBhZ2UgbWFuaXB1bGF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBjaGFpbmVkYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogICItbXMtY29udGVudC16b29tLWNoYWluaW5nIj86IFByb3BlcnR5Lk1zQ29udGVudFpvb21DaGFpbmluZyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLWNvbnRlbnQtem9vbS1saW1pdC1tYXhgKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyB0aGUgc2VsZWN0ZWQgZWxlbWVudHMnIG1heGltdW0gem9vbSBmYWN0b3IuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGA0MDAlYAogICAqLwogICItbXMtY29udGVudC16b29tLWxpbWl0LW1heCI/OiBQcm9wZXJ0eS5Nc0NvbnRlbnRab29tTGltaXRNYXggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1jb250ZW50LXpvb20tbGltaXQtbWluYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgdGhlIG1pbmltdW0gem9vbSBmYWN0b3IuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAxMDAlYAogICAqLwogICItbXMtY29udGVudC16b29tLWxpbWl0LW1pbiI/OiBQcm9wZXJ0eS5Nc0NvbnRlbnRab29tTGltaXRNaW4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1jb250ZW50LXpvb20tc25hcC1wb2ludHNgKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyB3aGVyZSB6b29tIHNuYXAtcG9pbnRzIGFyZSBsb2NhdGVkLgogICAqCiAgICogKipTeW50YXgqKjogYHNuYXBJbnRlcnZhbCggPHBlcmNlbnRhZ2U+LCA8cGVyY2VudGFnZT4gKSB8IHNuYXBMaXN0KCA8cGVyY2VudGFnZT4jIClgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHNuYXBJbnRlcnZhbCgwJSwgMTAwJSlgCiAgICovCiAgIi1tcy1jb250ZW50LXpvb20tc25hcC1wb2ludHMiPzogUHJvcGVydHkuTXNDb250ZW50Wm9vbVNuYXBQb2ludHMgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1jb250ZW50LXpvb20tc25hcC10eXBlYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgaG93IHpvb21pbmcgaXMgYWZmZWN0ZWQgYnkgZGVmaW5lZCBzbmFwLXBvaW50cy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgcHJveGltaXR5IHwgbWFuZGF0b3J5YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogICItbXMtY29udGVudC16b29tLXNuYXAtdHlwZSI/OiBQcm9wZXJ0eS5Nc0NvbnRlbnRab29tU25hcFR5cGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1jb250ZW50LXpvb21pbmdgKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyB3aGV0aGVyIHpvb21pbmcgaXMgZW5hYmxlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgem9vbWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiB6b29tIGZvciB0aGUgdG9wIGxldmVsIGVsZW1lbnQsIG5vbmUgZm9yIGFsbCBvdGhlciBlbGVtZW50cwogICAqLwogICItbXMtY29udGVudC16b29taW5nIj86IFByb3BlcnR5Lk1zQ29udGVudFpvb21pbmcgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAtbXMtZmlsdGVyYCBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc2V0cyBvciByZXRyaWV2ZXMgdGhlIGZpbHRlciBvciBjb2xsZWN0aW9uIG9mIGZpbHRlcnMgYXBwbGllZCB0byBhbiBvYmplY3QuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHN0cmluZz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogIiIgKHRoZSBlbXB0eSBzdHJpbmcpCiAgICovCiAgIi1tcy1maWx0ZXIiPzogUHJvcGVydHkuTXNGaWx0ZXIgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZsZXgtZGlyZWN0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBmbGV4IGl0ZW1zIGFyZSBwbGFjZWQgaW4gdGhlIGZsZXggY29udGFpbmVyIGRlZmluaW5nIHRoZSBtYWluIGF4aXMgYW5kIHRoZSBkaXJlY3Rpb24gKG5vcm1hbCBvciByZXZlcnNlZCkuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgcm93IHwgcm93LXJldmVyc2UgfCBjb2x1bW4gfCBjb2x1bW4tcmV2ZXJzZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgcm93YAogICAqLwogICItbXMtZmxleC1kaXJlY3Rpb24iPzogUHJvcGVydHkuRmxleERpcmVjdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZmxleC1ncm93YCoqIENTU8KgcHJvcGVydHkgc2V0cyB0aGUgZmxleCBncm93IGZhY3RvciBvZiBhIGZsZXggaXRlbSBtYWluIHNpemUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPG51bWJlcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgIi1tcy1mbGV4LXBvc2l0aXZlIj86IFByb3BlcnR5LkZsZXhHcm93IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtZmxvdy1mcm9tYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBnZXRzIG9yIHNldHMgYSB2YWx1ZSBpZGVudGlmeWluZyBhIHJlZ2lvbiBjb250YWluZXIgaW4gdGhlIGRvY3VtZW50IHRoYXQgYWNjZXB0cyB0aGUgY29udGVudCBmbG93IGZyb20gdGhlIGRhdGEgc291cmNlLgogICAqCiAgICogKipTeW50YXgqKjogYFsgbm9uZSB8IDxjdXN0b20taWRlbnQ+IF0jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogICItbXMtZmxvdy1mcm9tIj86IFByb3BlcnR5Lk1zRmxvd0Zyb20gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1mbG93LWludG9gKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IGdldHMgb3Igc2V0cyBhIHZhbHVlIGlkZW50aWZ5aW5nIGFuIGlmcmFtZSBjb250YWluZXIgaW4gdGhlIGRvY3VtZW50IHRoYXQgc2VydmVzIGFzIHRoZSByZWdpb24ncyBkYXRhIHNvdXJjZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIG5vbmUgfCA8Y3VzdG9tLWlkZW50PiBdI2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICAiLW1zLWZsb3ctaW50byI/OiBQcm9wZXJ0eS5Nc0Zsb3dJbnRvIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBncmlkLXRlbXBsYXRlLWNvbHVtbnNgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxpbmUgbmFtZXMgYW5kIHRyYWNrIHNpemluZyBmdW5jdGlvbnMgb2YgdGhlIGdyaWQgY29sdW1ucy4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPHRyYWNrLWxpc3Q+IHwgPGF1dG8tdHJhY2stbGlzdD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgIi1tcy1ncmlkLWNvbHVtbnMiPzogUHJvcGVydHkuTXNHcmlkQ29sdW1uczxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZ3JpZC10ZW1wbGF0ZS1yb3dzYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsaW5lIG5hbWVzIGFuZCB0cmFjayBzaXppbmcgZnVuY3Rpb25zIG9mIHRoZSBncmlkIHJvd3MuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDx0cmFjay1saXN0PiB8IDxhdXRvLXRyYWNrLWxpc3Q+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogICItbXMtZ3JpZC1yb3dzIj86IFByb3BlcnR5Lk1zR3JpZFJvd3M8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1oaWdoLWNvbnRyYXN0LWFkanVzdGAqKiBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgZ2V0cyBvciBzZXRzIGEgdmFsdWUgaW5kaWNhdGluZyB3aGV0aGVyIHRvIG92ZXJyaWRlIGFueSBDU1MgcHJvcGVydGllcyB0aGF0IHdvdWxkIGhhdmUgYmVlbiBzZXQgaW4gaGlnaCBjb250cmFzdCBtb2RlLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqLwogICItbXMtaGlnaC1jb250cmFzdC1hZGp1c3QiPzogUHJvcGVydHkuTXNIaWdoQ29udHJhc3RBZGp1c3QgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1oeXBoZW5hdGUtbGltaXQtY2hhcnNgKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyBvbmUgdG8gdGhyZWUgdmFsdWVzIGluZGljYXRpbmcgdGhlIG1pbmltdW0gbnVtYmVyIG9mIGNoYXJhY3RlcnMgaW4gYSBoeXBoZW5hdGVkIHdvcmQuIElmIHRoZSB3b3JkIGRvZXMgbm90IG1lZXQgdGhlIHJlcXVpcmVkIG1pbmltdW0gbnVtYmVyIG9mIGNoYXJhY3RlcnMgaW4gdGhlIHdvcmQsIGJlZm9yZSB0aGUgaHlwaGVuLCBvciBhZnRlciB0aGUgaHlwaGVuLCB0aGVuIHRoZSB3b3JkIGlzIG5vdCBoeXBoZW5hdGVkLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCA8aW50ZWdlcj57MSwzfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICAiLW1zLWh5cGhlbmF0ZS1saW1pdC1jaGFycyI/OiBQcm9wZXJ0eS5Nc0h5cGhlbmF0ZUxpbWl0Q2hhcnMgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1oeXBoZW5hdGUtbGltaXQtbGluZXNgKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiBzcGVjaWZ5aW5nIHRoZSBtYXhpbXVtIG51bWJlciBvZiBjb25zZWN1dGl2ZSBsaW5lcyBpbiBhbiBlbGVtZW50IHRoYXQgbWF5IGJlIGVuZGVkIHdpdGggYSBoeXBoZW5hdGVkIHdvcmQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm8tbGltaXQgfCA8aW50ZWdlcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vLWxpbWl0YAogICAqLwogICItbXMtaHlwaGVuYXRlLWxpbWl0LWxpbmVzIj86IFByb3BlcnR5Lk1zSHlwaGVuYXRlTGltaXRMaW5lcyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYCoqLW1zLWh5cGhlbmF0ZS1saW1pdC16b25lKipgIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gc3BlY2lmeWluZyB0aGUgd2lkdGggb2YgdGhlIGh5cGhlbmF0aW9uIHpvbmUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHBlcmNlbnRhZ2U+IHwgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgIi1tcy1oeXBoZW5hdGUtbGltaXQtem9uZSI/OiBQcm9wZXJ0eS5Nc0h5cGhlbmF0ZUxpbWl0Wm9uZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgaHlwaGVuc2AqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIGhvdyB3b3JkcyBzaG91bGQgYmUgaHlwaGVuYXRlZCB3aGVuIHRleHQgd3JhcHMgYWNyb3NzIG11bHRpcGxlIGxpbmVzLiBJdCBjYW4gcHJldmVudCBoeXBoZW5hdGlvbiBlbnRpcmVseSwgaHlwaGVuYXRlIGF0IG1hbnVhbGx5LXNwZWNpZmllZCBwb2ludHMgd2l0aGluIHRoZSB0ZXh0LCBvciBsZXQgdGhlIGJyb3dzZXIgYXV0b21hdGljYWxseSBpbnNlcnQgaHlwaGVucyB3aGVyZSBhcHByb3ByaWF0ZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgbWFudWFsIHwgYXV0b2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWFudWFsYAogICAqLwogICItbXMtaHlwaGVucyI/OiBQcm9wZXJ0eS5IeXBoZW5zIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtaW1lLWFsaWduYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gYWxpZ25pbmcgdGhlIElucHV0IE1ldGhvZCBFZGl0b3IgKElNRSkgY2FuZGlkYXRlIHdpbmRvdyBib3ggcmVsYXRpdmUgdG8gdGhlIGVsZW1lbnQgb24gd2hpY2ggdGhlIElNRSBjb21wb3NpdGlvbiBpcyBhY3RpdmUuIFRoZSBleHRlbnNpb24gaXMgaW1wbGVtZW50ZWQgaW4gTWljcm9zb2Z0IEVkZ2UgYW5kIEludGVybmV0IEV4cGxvcmVywqAxMS4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgYWZ0ZXJgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgIi1tcy1pbWUtYWxpZ24iPzogUHJvcGVydHkuTXNJbWVBbGlnbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgQ1NTICoqYGp1c3RpZnktc2VsZmAqKiBwcm9wZXJ0eSBzZXRzIHRoZSB3YXkgYSBib3ggaXMganVzdGlmaWVkIGluc2lkZSBpdHMgYWxpZ25tZW50IGNvbnRhaW5lciBhbG9uZyB0aGUgYXBwcm9wcmlhdGUgYXhpcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgbm9ybWFsIHwgc3RyZXRjaCB8IDxiYXNlbGluZS1wb3NpdGlvbj4gfCA8b3ZlcmZsb3ctcG9zaXRpb24+PyBbIDxzZWxmLXBvc2l0aW9uPiB8IGxlZnQgfCByaWdodCBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqLwogICItbXMtanVzdGlmeS1zZWxmIj86IFByb3BlcnR5Lkp1c3RpZnlTZWxmIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBsaW5lLWJyZWFrYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyB0byBicmVhayBsaW5lcyBvZiBDaGluZXNlLCBKYXBhbmVzZSwgb3IgS29yZWFuIChDSkspIHRleHQgd2hlbiB3b3JraW5nIHdpdGggcHVuY3R1YXRpb24gYW5kIHN5bWJvbHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IGxvb3NlIHwgbm9ybWFsIHwgc3RyaWN0IHwgYW55d2hlcmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgIi1tcy1saW5lLWJyZWFrIj86IFByb3BlcnR5LkxpbmVCcmVhayB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3JkZXJgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG9yZGVyIHRvIGxheSBvdXQgYW4gaXRlbSBpbiBhIGZsZXggb3IgZ3JpZCBjb250YWluZXIuIEl0ZW1zIGluIGEgY29udGFpbmVyIGFyZSBzb3J0ZWQgYnkgYXNjZW5kaW5nIGBvcmRlcmAgdmFsdWUgYW5kIHRoZW4gYnkgdGhlaXIgc291cmNlIGNvZGUgb3JkZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGludGVnZXI+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqLwogICItbXMtb3JkZXIiPzogUHJvcGVydHkuT3JkZXIgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1vdmVyZmxvdy1zdHlsZWAqKiBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIGNvbnRyb2xsaW5nIHRoZSBiZWhhdmlvciBvZiBzY3JvbGxiYXJzIHdoZW4gdGhlIGNvbnRlbnQgb2YgYW4gZWxlbWVudCBvdmVyZmxvd3MuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IG5vbmUgfCBzY3JvbGxiYXIgfCAtbXMtYXV0b2hpZGluZy1zY3JvbGxiYXJgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgIi1tcy1vdmVyZmxvdy1zdHlsZSI/OiBQcm9wZXJ0eS5Nc092ZXJmbG93U3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG92ZXJmbG93LXhgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hhdCBzaG93cyB3aGVuIGNvbnRlbnQgb3ZlcmZsb3dzIGEgYmxvY2stbGV2ZWwgZWxlbWVudCdzIGxlZnQgYW5kIHJpZ2h0IGVkZ2VzLiBUaGlzIG1heSBiZSBub3RoaW5nLCBhIHNjcm9sbCBiYXIsIG9yIHRoZSBvdmVyZmxvdyBjb250ZW50LgogICAqCiAgICogKipTeW50YXgqKjogYHZpc2libGUgfCBoaWRkZW4gfCBjbGlwIHwgc2Nyb2xsIHwgYXV0b2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgdmlzaWJsZWAKICAgKi8KICAiLW1zLW92ZXJmbG93LXgiPzogUHJvcGVydHkuT3ZlcmZsb3dYIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvdmVyZmxvdy15YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoYXQgc2hvd3Mgd2hlbiBjb250ZW50IG92ZXJmbG93cyBhIGJsb2NrLWxldmVsIGVsZW1lbnQncyB0b3AgYW5kIGJvdHRvbSBlZGdlcy4gVGhpcyBtYXkgYmUgbm90aGluZywgYSBzY3JvbGwgYmFyLCBvciB0aGUgb3ZlcmZsb3cgY29udGVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGB2aXNpYmxlIHwgaGlkZGVuIHwgY2xpcCB8IHNjcm9sbCB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHZpc2libGVgCiAgICovCiAgIi1tcy1vdmVyZmxvdy15Ij86IFByb3BlcnR5Lk92ZXJmbG93WSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYCoqLW1zLXNjcm9sbC1jaGFpbmluZyoqYCBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc3BlY2lmaWVzIHRoZSBzY3JvbGxpbmcgYmVoYXZpb3IgdGhhdCBvY2N1cnMgd2hlbiBhIHVzZXIgaGl0cyB0aGUgc2Nyb2xsIGxpbWl0IGR1cmluZyBhIG1hbmlwdWxhdGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGBjaGFpbmVkIHwgbm9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY2hhaW5lZGAKICAgKi8KICAiLW1zLXNjcm9sbC1jaGFpbmluZyI/OiBQcm9wZXJ0eS5Nc1Njcm9sbENoYWluaW5nIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgKiotbXMtc2Nyb2xsLWxpbWl0LXgtbWF4KipgIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgdGhlIG1heGltdW0gdmFsdWUgZm9yIHRoZSBgRWxlbWVudC5zY3JvbGxMZWZ0YCBwcm9wZXJ0eS4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgIi1tcy1zY3JvbGwtbGltaXQteC1tYXgiPzogUHJvcGVydHkuTXNTY3JvbGxMaW1pdFhNYXg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1zY3JvbGwtbGltaXQteC1taW5gKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyB0aGUgbWluaW11bSB2YWx1ZSBmb3IgdGhlIGBFbGVtZW50LnNjcm9sbExlZnRgIHByb3BlcnR5LgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGg+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqLwogICItbXMtc2Nyb2xsLWxpbWl0LXgtbWluIj86IFByb3BlcnR5Lk1zU2Nyb2xsTGltaXRYTWluPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtc2Nyb2xsLWxpbWl0LXktbWF4YCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgdGhlIG1heGltdW0gdmFsdWUgZm9yIHRoZSBgRWxlbWVudC5zY3JvbGxUb3BgIHByb3BlcnR5LgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCA8bGVuZ3RoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICAiLW1zLXNjcm9sbC1saW1pdC15LW1heCI/OiBQcm9wZXJ0eS5Nc1Njcm9sbExpbWl0WU1heDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLXNjcm9sbC1saW1pdC15LW1pbmAqKiBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc3BlY2lmaWVzIHRoZSBtaW5pbXVtIHZhbHVlIGZvciB0aGUgYEVsZW1lbnQuc2Nyb2xsVG9wYCBwcm9wZXJ0eS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKi8KICAiLW1zLXNjcm9sbC1saW1pdC15LW1pbiI/OiBQcm9wZXJ0eS5Nc1Njcm9sbExpbWl0WU1pbjxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLXNjcm9sbC1yYWlsc2AqKiBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc3BlY2lmaWVzIHdoZXRoZXIgc2Nyb2xsaW5nIGxvY2tzIHRvIHRoZSBwcmltYXJ5IGF4aXMgb2YgbW90aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCByYWlsZWRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHJhaWxlZGAKICAgKi8KICAiLW1zLXNjcm9sbC1yYWlscyI/OiBQcm9wZXJ0eS5Nc1Njcm9sbFJhaWxzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtc2Nyb2xsLXNuYXAtcG9pbnRzLXhgKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyB3aGVyZSBzbmFwLXBvaW50cyB3aWxsIGJlIGxvY2F0ZWQgYWxvbmcgdGhlIHgtYXhpcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBzbmFwSW50ZXJ2YWwoIDxsZW5ndGgtcGVyY2VudGFnZT4sIDxsZW5ndGgtcGVyY2VudGFnZT4gKSB8IHNuYXBMaXN0KCA8bGVuZ3RoLXBlcmNlbnRhZ2U+IyApYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzbmFwSW50ZXJ2YWwoMHB4LCAxMDAlKWAKICAgKi8KICAiLW1zLXNjcm9sbC1zbmFwLXBvaW50cy14Ij86IFByb3BlcnR5Lk1zU2Nyb2xsU25hcFBvaW50c1ggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1zY3JvbGwtc25hcC1wb2ludHMteWAqKiBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc3BlY2lmaWVzIHdoZXJlIHNuYXAtcG9pbnRzIHdpbGwgYmUgbG9jYXRlZCBhbG9uZyB0aGUgeS1heGlzLgogICAqCiAgICogKipTeW50YXgqKjogYHNuYXBJbnRlcnZhbCggPGxlbmd0aC1wZXJjZW50YWdlPiwgPGxlbmd0aC1wZXJjZW50YWdlPiApIHwgc25hcExpc3QoIDxsZW5ndGgtcGVyY2VudGFnZT4jIClgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHNuYXBJbnRlcnZhbCgwcHgsIDEwMCUpYAogICAqLwogICItbXMtc2Nyb2xsLXNuYXAtcG9pbnRzLXkiPzogUHJvcGVydHkuTXNTY3JvbGxTbmFwUG9pbnRzWSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgc2Nyb2xsLXNuYXAtdHlwZWAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgc3RyaWN0bHkgc25hcCBwb2ludHMgYXJlIGVuZm9yY2VkIG9uIHRoZSBzY3JvbGwgY29udGFpbmVyIGluIGNhc2UgdGhlcmUgaXMgb25lLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBwcm94aW1pdHkgfCBtYW5kYXRvcnlgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgIi1tcy1zY3JvbGwtc25hcC10eXBlIj86IFByb3BlcnR5Lk1zU2Nyb2xsU25hcFR5cGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1zY3JvbGwtdHJhbnNsYXRpb25gKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyB3aGV0aGVyIHZlcnRpY2FsLXRvLWhvcml6b250YWwgc2Nyb2xsIHdoZWVsIHRyYW5zbGF0aW9uIG9jY3VycyBvbiB0aGUgc3BlY2lmaWVkIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IHZlcnRpY2FsLXRvLWhvcml6b250YWxgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgIi1tcy1zY3JvbGwtdHJhbnNsYXRpb24iPzogUHJvcGVydHkuTXNTY3JvbGxUcmFuc2xhdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLXNjcm9sbGJhci0zZGxpZ2h0LWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gc3BlY2lmeWluZyB0aGUgY29sb3Igb2YgdGhlIHRvcCBhbmQgbGVmdCBlZGdlcyBvZiB0aGUgc2Nyb2xsIGJveCBhbmQgc2Nyb2xsIGFycm93cyBvZiBhIHNjcm9sbCBiYXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGNvbG9yPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBkZXBlbmRzIG9uIHVzZXIgYWdlbnQKICAgKi8KICAiLW1zLXNjcm9sbGJhci0zZGxpZ2h0LWNvbG9yIj86IFByb3BlcnR5Lk1zU2Nyb2xsYmFyM2RsaWdodENvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtc2Nyb2xsYmFyLWFycm93LWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgdGhlIGNvbG9yIG9mIHRoZSBhcnJvdyBlbGVtZW50cyBvZiBhIHNjcm9sbCBhcnJvdy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBCdXR0b25UZXh0YAogICAqLwogICItbXMtc2Nyb2xsYmFyLWFycm93LWNvbG9yIj86IFByb3BlcnR5Lk1zU2Nyb2xsYmFyQXJyb3dDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYCoqLW1zLXNjcm9sbGJhci1iYXNlLWNvbG9yKipgIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgdGhlIGJhc2UgY29sb3Igb2YgdGhlIG1haW4gZWxlbWVudHMgb2YgYSBzY3JvbGwgYmFyLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogZGVwZW5kcyBvbiB1c2VyIGFnZW50CiAgICovCiAgIi1tcy1zY3JvbGxiYXItYmFzZS1jb2xvciI/OiBQcm9wZXJ0eS5Nc1Njcm9sbGJhckJhc2VDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLXNjcm9sbGJhci1kYXJrc2hhZG93LWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgdGhlIGNvbG9yIG9mIGEgc2Nyb2xsIGJhcidzIGd1dHRlci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBUaHJlZUREYXJrU2hhZG93YAogICAqLwogICItbXMtc2Nyb2xsYmFyLWRhcmtzaGFkb3ctY29sb3IiPzogUHJvcGVydHkuTXNTY3JvbGxiYXJEYXJrc2hhZG93Q29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKi1tcy1zY3JvbGxiYXItZmFjZS1jb2xvcioqYCBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc3BlY2lmaWVzIHRoZSBjb2xvciBvZiB0aGUgc2Nyb2xsIGJveCBhbmQgc2Nyb2xsIGFycm93cyBvZiBhIHNjcm9sbCBiYXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGNvbG9yPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgVGhyZWVERmFjZWAKICAgKi8KICAiLW1zLXNjcm9sbGJhci1mYWNlLWNvbG9yIj86IFByb3BlcnR5Lk1zU2Nyb2xsYmFyRmFjZUNvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgKiotbXMtc2Nyb2xsYmFyLWhpZ2hsaWdodC1jb2xvcioqYCBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc3BlY2lmaWVzIHRoZSBjb2xvciBvZiB0aGUgc2xpZGVyIHRyYXksIHRoZSB0b3AgYW5kIGxlZnQgZWRnZXMgb2YgdGhlIHNjcm9sbCBib3gsIGFuZCB0aGUgc2Nyb2xsIGFycm93cyBvZiBhIHNjcm9sbCBiYXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGNvbG9yPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgVGhyZWVESGlnaGxpZ2h0YAogICAqLwogICItbXMtc2Nyb2xsYmFyLWhpZ2hsaWdodC1jb2xvciI/OiBQcm9wZXJ0eS5Nc1Njcm9sbGJhckhpZ2hsaWdodENvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtc2Nyb2xsYmFyLXNoYWRvdy1jb2xvcmAqKiBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc3BlY2lmaWVzIHRoZSBjb2xvciBvZiB0aGUgYm90dG9tIGFuZCByaWdodCBlZGdlcyBvZiB0aGUgc2Nyb2xsIGJveCBhbmQgc2Nyb2xsIGFycm93cyBvZiBhIHNjcm9sbCBiYXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGNvbG9yPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgVGhyZWVERGFya1NoYWRvd2AKICAgKi8KICAiLW1zLXNjcm9sbGJhci1zaGFkb3ctY29sb3IiPzogUHJvcGVydHkuTXNTY3JvbGxiYXJTaGFkb3dDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLXRleHQtYXV0b3NwYWNlYCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgdGhlIGF1dG9zcGFjaW5nIGFuZCBuYXJyb3cgc3BhY2Ugd2lkdGggYWRqdXN0bWVudCBvZiB0ZXh0LgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBpZGVvZ3JhcGgtYWxwaGEgfCBpZGVvZ3JhcGgtbnVtZXJpYyB8IGlkZW9ncmFwaC1wYXJlbnRoZXNpcyB8IGlkZW9ncmFwaC1zcGFjZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICAiLW1zLXRleHQtYXV0b3NwYWNlIj86IFByb3BlcnR5Lk1zVGV4dEF1dG9zcGFjZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1jb21iaW5lLXVwcmlnaHRgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGNvbWJpbmF0aW9uIG9mIGNoYXJhY3RlcnMgaW50byB0aGUgc3BhY2Ugb2YgYSBzaW5nbGUgY2hhcmFjdGVyLiBJZiB0aGUgY29tYmluZWQgdGV4dCBpcyB3aWRlciB0aGFuIDFlbSwgdGhlIHVzZXIgYWdlbnQgbXVzdCBmaXQgdGhlIGNvbnRlbnRzIHdpdGhpbiAxZW0uIFRoZSByZXN1bHRpbmcgY29tcG9zaXRpb24gaXMgdHJlYXRlZCBhcyBhIHNpbmdsZSB1cHJpZ2h0IGdseXBoIGZvciBsYXlvdXQgYW5kIGRlY29yYXRpb24uIFRoaXMgcHJvcGVydHkgb25seSBoYXMgYW4gZWZmZWN0IGluIHZlcnRpY2FsIHdyaXRpbmcgbW9kZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IGFsbCB8IFsgZGlnaXRzIDxpbnRlZ2VyPj8gXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICAiLW1zLXRleHQtY29tYmluZS1ob3Jpem9udGFsIj86IFByb3BlcnR5LlRleHRDb21iaW5lVXByaWdodCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1vdmVyZmxvd2AqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgaGlkZGVuIG92ZXJmbG93IGNvbnRlbnQgaXMgc2lnbmFsZWQgdG8gdXNlcnMuIEl0IGNhbiBiZSBjbGlwcGVkLCBkaXNwbGF5IGFuIGVsbGlwc2lzICgnYOKApmAnKSwgb3IgZGlzcGxheSBhIGN1c3RvbSBzdHJpbmcuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyBjbGlwIHwgZWxsaXBzaXMgfCA8c3RyaW5nPiBdezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGNsaXBgCiAgICovCiAgIi1tcy10ZXh0LW92ZXJmbG93Ij86IFByb3BlcnR5LlRleHRPdmVyZmxvdyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdG91Y2gtYWN0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBhbiBlbGVtZW50J3MgcmVnaW9uIGNhbiBiZSBtYW5pcHVsYXRlZCBieSBhIHRvdWNoc2NyZWVuIHVzZXIgKGZvciBleGFtcGxlLCBieSB6b29taW5nIGZlYXR1cmVzIGJ1aWx0IGludG8gdGhlIGJyb3dzZXIpLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBub25lIHwgWyBbIHBhbi14IHwgcGFuLWxlZnQgfCBwYW4tcmlnaHQgXSB8fCBbIHBhbi15IHwgcGFuLXVwIHwgcGFuLWRvd24gXSB8fCBwaW5jaC16b29tIF0gfCBtYW5pcHVsYXRpb25gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgIi1tcy10b3VjaC1hY3Rpb24iPzogUHJvcGVydHkuVG91Y2hBY3Rpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy10b3VjaC1zZWxlY3RgKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHRvZ2dsZXMgdGhlIGdyaXBwZXIgdmlzdWFsIGVsZW1lbnRzIHRoYXQgZW5hYmxlIHRvdWNoIHRleHQgc2VsZWN0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYGdyaXBwZXJzIHwgbm9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgZ3JpcHBlcnNgCiAgICovCiAgIi1tcy10b3VjaC1zZWxlY3QiPzogUHJvcGVydHkuTXNUb3VjaFNlbGVjdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNmb3JtYCoqIENTUyBwcm9wZXJ0eSBsZXRzIHlvdSByb3RhdGUsIHNjYWxlLCBza2V3LCBvciB0cmFuc2xhdGUgYW4gZWxlbWVudC4gSXQgbW9kaWZpZXMgdGhlIGNvb3JkaW5hdGUgc3BhY2Ugb2YgdGhlIENTUyB2aXN1YWwgZm9ybWF0dGluZyBtb2RlbC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPHRyYW5zZm9ybS1saXN0PmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICAiLW1zLXRyYW5zZm9ybSI/OiBQcm9wZXJ0eS5UcmFuc2Zvcm0gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zZm9ybS1vcmlnaW5gKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG9yaWdpbiBmb3IgYW4gZWxlbWVudCdzIHRyYW5zZm9ybWF0aW9ucy4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDxsZW5ndGgtcGVyY2VudGFnZT4gfCBsZWZ0IHwgY2VudGVyIHwgcmlnaHQgfCB0b3AgfCBib3R0b20gXSB8IFsgWyA8bGVuZ3RoLXBlcmNlbnRhZ2U+IHwgbGVmdCB8IGNlbnRlciB8IHJpZ2h0IF0gJiYgWyA8bGVuZ3RoLXBlcmNlbnRhZ2U+IHwgdG9wIHwgY2VudGVyIHwgYm90dG9tIF0gXSA8bGVuZ3RoPj9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDUwJSA1MCUgMGAKICAgKi8KICAiLW1zLXRyYW5zZm9ybS1vcmlnaW4iPzogUHJvcGVydHkuVHJhbnNmb3JtT3JpZ2luPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2l0aW9uLWRlbGF5YCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIGR1cmF0aW9uIHRvIHdhaXQgYmVmb3JlIHN0YXJ0aW5nIGEgcHJvcGVydHkncyB0cmFuc2l0aW9uIGVmZmVjdCB3aGVuIGl0cyB2YWx1ZSBjaGFuZ2VzLgogICAqCiAgICogKipTeW50YXgqKjogYDx0aW1lPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBzYAogICAqLwogICItbXMtdHJhbnNpdGlvbi1kZWxheSI/OiBQcm9wZXJ0eS5UcmFuc2l0aW9uRGVsYXk8VFRpbWU+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2l0aW9uLWR1cmF0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBsZW5ndGggb2YgdGltZSBhIHRyYW5zaXRpb24gYW5pbWF0aW9uIHNob3VsZCB0YWtlIHRvIGNvbXBsZXRlLiBCeSBkZWZhdWx0LCB0aGUgdmFsdWUgaXMgYDBzYCwgbWVhbmluZyB0aGF0IG5vIGFuaW1hdGlvbiB3aWxsIG9jY3VyLgogICAqCiAgICogKipTeW50YXgqKjogYDx0aW1lPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBzYAogICAqLwogICItbXMtdHJhbnNpdGlvbi1kdXJhdGlvbiI/OiBQcm9wZXJ0eS5UcmFuc2l0aW9uRHVyYXRpb248VFRpbWU+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2l0aW9uLXByb3BlcnR5YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBDU1MgcHJvcGVydGllcyB0byB3aGljaCBhIHRyYW5zaXRpb24gZWZmZWN0IHNob3VsZCBiZSBhcHBsaWVkLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8c2luZ2xlLXRyYW5zaXRpb24tcHJvcGVydHk+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBhbGwKICAgKi8KICAiLW1zLXRyYW5zaXRpb24tcHJvcGVydHkiPzogUHJvcGVydHkuVHJhbnNpdGlvblByb3BlcnR5IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgaW50ZXJtZWRpYXRlIHZhbHVlcyBhcmUgY2FsY3VsYXRlZCBmb3IgQ1NTIHByb3BlcnRpZXMgYmVpbmcgYWZmZWN0ZWQgYnkgYSB0cmFuc2l0aW9uIGVmZmVjdC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8ZWFzaW5nLWZ1bmN0aW9uPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGVhc2VgCiAgICovCiAgIi1tcy10cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbiI/OiBQcm9wZXJ0eS5UcmFuc2l0aW9uVGltaW5nRnVuY3Rpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKnVzZXItc2VsZWN0KipgIENTUyBwcm9wZXJ0eSBjb250cm9scyB3aGV0aGVyIHRoZSB1c2VyIGNhbiBzZWxlY3QgdGV4dC4gVGhpcyBkb2Vzbid0IGhhdmUgYW55IGVmZmVjdCBvbiBjb250ZW50IGxvYWRlZCBhcyBjaHJvbWUsIGV4Y2VwdCBpbiB0ZXh0Ym94ZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IGVsZW1lbnQgfCB0ZXh0YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGB0ZXh0YAogICAqLwogICItbXMtdXNlci1zZWxlY3QiPzogUHJvcGVydHkuTXNVc2VyU2VsZWN0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB3b3JkLWJyZWFrYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgbGluZSBicmVha3MgYXBwZWFyIHdoZXJldmVyIHRoZSB0ZXh0IHdvdWxkIG90aGVyd2lzZSBvdmVyZmxvdyBpdHMgY29udGVudCBib3guCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgYnJlYWstYWxsIHwga2VlcC1hbGwgfCBicmVhay13b3JkYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICovCiAgIi1tcy13b3JkLWJyZWFrIj86IFByb3BlcnR5LldvcmRCcmVhayB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLXdyYXAtZmxvd2AqKiBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc3BlY2lmaWVzIGhvdyBleGNsdXNpb25zIGltcGFjdCBpbmxpbmUgY29udGVudCB3aXRoaW4gYmxvY2stbGV2ZWwgZWxlbWVudHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IGJvdGggfCBzdGFydCB8IGVuZCB8IG1heGltdW0gfCBjbGVhcmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICAiLW1zLXdyYXAtZmxvdyI/OiBQcm9wZXJ0eS5Nc1dyYXBGbG93IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtd3JhcC1tYXJnaW5gKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyBhIG1hcmdpbiB0aGF0IG9mZnNldHMgdGhlIGlubmVyIHdyYXAgc2hhcGUgZnJvbSBvdGhlciBzaGFwZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgIi1tcy13cmFwLW1hcmdpbiI/OiBQcm9wZXJ0eS5Nc1dyYXBNYXJnaW48VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy13cmFwLXRocm91Z2hgKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyBob3cgY29udGVudCBzaG91bGQgd3JhcCBhcm91bmQgYW4gZXhjbHVzaW9uIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgd3JhcCB8IG5vbmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHdyYXBgCiAgICovCiAgIi1tcy13cmFwLXRocm91Z2giPzogUHJvcGVydHkuTXNXcmFwVGhyb3VnaCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgd3JpdGluZy1tb2RlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgbGluZXMgb2YgdGV4dCBhcmUgbGFpZCBvdXQgaG9yaXpvbnRhbGx5IG9yIHZlcnRpY2FsbHksIGFzIHdlbGwgYXMgdGhlIGRpcmVjdGlvbiBpbiB3aGljaCBibG9ja3MgcHJvZ3Jlc3MuIFdoZW4gc2V0IGZvciBhbiBlbnRpcmUgZG9jdW1lbnQsIGl0IHNob3VsZCBiZSBzZXQgb24gdGhlIHJvb3QgZWxlbWVudCAoYGh0bWxgIGVsZW1lbnQgZm9yIEhUTUwgZG9jdW1lbnRzKS4KICAgKgogICAqICoqU3ludGF4Kio6IGBob3Jpem9udGFsLXRiIHwgdmVydGljYWwtcmwgfCB2ZXJ0aWNhbC1sciB8IHNpZGV3YXlzLXJsIHwgc2lkZXdheXMtbHJgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGhvcml6b250YWwtdGJgCiAgICovCiAgIi1tcy13cml0aW5nLW1vZGUiPzogUHJvcGVydHkuV3JpdGluZ01vZGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIENTUyAqKmBhbGlnbi1jb250ZW50YCoqIHByb3BlcnR5IHNldHMgdGhlIGRpc3RyaWJ1dGlvbiBvZiBzcGFjZSBiZXR3ZWVuIGFuZCBhcm91bmQgY29udGVudCBpdGVtcyBhbG9uZyBhIGZsZXhib3gncyBjcm9zcy1heGlzIG9yIGEgZ3JpZCdzIGJsb2NrIGF4aXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgPGJhc2VsaW5lLXBvc2l0aW9uPiB8IDxjb250ZW50LWRpc3RyaWJ1dGlvbj4gfCA8b3ZlcmZsb3ctcG9zaXRpb24+PyA8Y29udGVudC1wb3NpdGlvbj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKi8KICAiLXdlYmtpdC1hbGlnbi1jb250ZW50Ij86IFByb3BlcnR5LkFsaWduQ29udGVudCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgQ1NTICoqYGFsaWduLWl0ZW1zYCoqIHByb3BlcnR5IHNldHMgdGhlIGBhbGlnbi1zZWxmYCB2YWx1ZSBvbiBhbGwgZGlyZWN0IGNoaWxkcmVuIGFzIGEgZ3JvdXAuIEluIEZsZXhib3gsIGl0IGNvbnRyb2xzIHRoZSBhbGlnbm1lbnQgb2YgaXRlbXMgb24gdGhlIENyb3NzIEF4aXMuIEluIEdyaWQgTGF5b3V0LCBpdCBjb250cm9scyB0aGUgYWxpZ25tZW50IG9mIGl0ZW1zIG9uIHRoZSBCbG9jayBBeGlzIHdpdGhpbiB0aGVpciBncmlkIGFyZWEuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgc3RyZXRjaCB8IDxiYXNlbGluZS1wb3NpdGlvbj4gfCBbIDxvdmVyZmxvdy1wb3NpdGlvbj4/IDxzZWxmLXBvc2l0aW9uPiBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICovCiAgIi13ZWJraXQtYWxpZ24taXRlbXMiPzogUHJvcGVydHkuQWxpZ25JdGVtcyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYWxpZ24tc2VsZmAqKiBDU1MgcHJvcGVydHkgb3ZlcnJpZGVzIGEgZ3JpZCBvciBmbGV4IGl0ZW0ncyBgYWxpZ24taXRlbXNgIHZhbHVlLiBJbiBHcmlkLCBpdCBhbGlnbnMgdGhlIGl0ZW0gaW5zaWRlIHRoZcKgZ3JpZCBhcmVhLiBJbiBGbGV4Ym94LCBpdCBhbGlnbnMgdGhlIGl0ZW0gb24gdGhlIGNyb3NzIGF4aXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IG5vcm1hbCB8IHN0cmV0Y2ggfCA8YmFzZWxpbmUtcG9zaXRpb24+IHwgPG92ZXJmbG93LXBvc2l0aW9uPj8gPHNlbGYtcG9zaXRpb24+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqLwogICItd2Via2l0LWFsaWduLXNlbGYiPzogUHJvcGVydHkuQWxpZ25TZWxmIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tZGVsYXlgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgYW1vdW50IG9mIHRpbWUgdG8gd2FpdCBmcm9tIGFwcGx5aW5nIHRoZSBhbmltYXRpb24gdG8gYW4gZWxlbWVudCBiZWZvcmUgYmVnaW5uaW5nIHRvIHBlcmZvcm0gdGhlIGFuaW1hdGlvbi4gVGhlIGFuaW1hdGlvbiBjYW4gc3RhcnQgbGF0ZXIsIGltbWVkaWF0ZWx5IGZyb20gaXRzIGJlZ2lubmluZywgb3IgaW1tZWRpYXRlbHkgYW5kIHBhcnR3YXkgdGhyb3VnaCB0aGUgYW5pbWF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYDx0aW1lPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBzYAogICAqLwogICItd2Via2l0LWFuaW1hdGlvbi1kZWxheSI/OiBQcm9wZXJ0eS5BbmltYXRpb25EZWxheTxUVGltZT4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbi1kaXJlY3Rpb25gKiogQ1NTIHByb3BlcnR5IHNldHMgd2hldGhlciBhbiBhbmltYXRpb24gc2hvdWxkIHBsYXkgZm9yd2FyZCwgYmFja3dhcmQsIG9yIGFsdGVybmF0ZSBiYWNrIGFuZCBmb3J0aCBiZXR3ZWVuIHBsYXlpbmcgdGhlIHNlcXVlbmNlIGZvcndhcmQgYW5kIGJhY2t3YXJkLgogICAqCiAgICogKipTeW50YXgqKjogYDxzaW5nbGUtYW5pbWF0aW9uLWRpcmVjdGlvbj4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICovCiAgIi13ZWJraXQtYW5pbWF0aW9uLWRpcmVjdGlvbiI/OiBQcm9wZXJ0eS5BbmltYXRpb25EaXJlY3Rpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbi1kdXJhdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbGVuZ3RoIG9mIHRpbWUgdGhhdCBhbiBhbmltYXRpb24gdGFrZXMgdG8gY29tcGxldGUgb25lIGN5Y2xlLgogICAqCiAgICogKipTeW50YXgqKjogYDx0aW1lPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBzYAogICAqLwogICItd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbiI/OiBQcm9wZXJ0eS5BbmltYXRpb25EdXJhdGlvbjxUVGltZT4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbi1maWxsLW1vZGVgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IGEgQ1NTIGFuaW1hdGlvbiBhcHBsaWVzIHN0eWxlcyB0byBpdHMgdGFyZ2V0IGJlZm9yZSBhbmQgYWZ0ZXIgaXRzIGV4ZWN1dGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2luZ2xlLWFuaW1hdGlvbi1maWxsLW1vZGU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICAiLXdlYmtpdC1hbmltYXRpb24tZmlsbC1tb2RlIj86IFByb3BlcnR5LkFuaW1hdGlvbkZpbGxNb2RlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBudW1iZXIgb2YgdGltZXMgYW4gYW5pbWF0aW9uIHNlcXVlbmNlIHNob3VsZCBiZSBwbGF5ZWQgYmVmb3JlIHN0b3BwaW5nLgogICAqCiAgICogKipTeW50YXgqKjogYDxzaW5nbGUtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudD4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAxYAogICAqLwogICItd2Via2l0LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQiPzogUHJvcGVydHkuQW5pbWF0aW9uSXRlcmF0aW9uQ291bnQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbi1uYW1lYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIG5hbWVzIG9mIG9uZSBvciBtb3JlIGBAa2V5ZnJhbWVzYCBhdC1ydWxlcyBkZXNjcmliaW5nIHRoZSBhbmltYXRpb24gb3IgYW5pbWF0aW9ucyB0byBhcHBseSB0byB0aGUgZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIG5vbmUgfCA8a2V5ZnJhbWVzLW5hbWU+IF0jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogICItd2Via2l0LWFuaW1hdGlvbi1uYW1lIj86IFByb3BlcnR5LkFuaW1hdGlvbk5hbWUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbi1wbGF5LXN0YXRlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgYW4gYW5pbWF0aW9uIGlzIHJ1bm5pbmcgb3IgcGF1c2VkLgogICAqCiAgICogKipTeW50YXgqKjogYDxzaW5nbGUtYW5pbWF0aW9uLXBsYXktc3RhdGU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgcnVubmluZ2AKICAgKi8KICAiLXdlYmtpdC1hbmltYXRpb24tcGxheS1zdGF0ZSI/OiBQcm9wZXJ0eS5BbmltYXRpb25QbGF5U3RhdGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb25gKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IGFuIGFuaW1hdGlvbiBwcm9ncmVzc2VzIHRocm91Z2ggdGhlIGR1cmF0aW9uIG9mIGVhY2ggY3ljbGUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGVhc2luZy1mdW5jdGlvbj4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBlYXNlYAogICAqLwogICItd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb24iPzogUHJvcGVydHkuQW5pbWF0aW9uVGltaW5nRnVuY3Rpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKmFwcGVhcmFuY2UqKmAgQ1NTIHByb3BlcnR5IGlzIHVzZWQgdG8gZGlzcGxheSBhbiBlbGVtZW50IHVzaW5nIHBsYXRmb3JtLW5hdGl2ZSBzdHlsaW5nLCBiYXNlZCBvbiB0aGUgb3BlcmF0aW5nIHN5c3RlbSdzIHRoZW1lLiBUaGUgKipgLW1vei1hcHBlYXJhbmNlYCoqIGFuZCAqKmAtd2Via2l0LWFwcGVhcmFuY2VgKiogcHJvcGVydGllcyBhcmUgbm9uLXN0YW5kYXJkIHZlcnNpb25zIG9mIHRoaXMgcHJvcGVydHksIHVzZWQgKHJlc3BlY3RpdmVseSkgYnkgR2Vja28gKEZpcmVmb3gpIGFuZCBieSBXZWJLaXQtYmFzZWQgKGUuZy4sIFNhZmFyaSkgYW5kIEJsaW5rLWJhc2VkIChlLmcuLCBDaHJvbWUsIE9wZXJhKSBicm93c2VycyB0byBhY2hpZXZlIHRoZSBzYW1lIHRoaW5nLiBOb3RlIHRoYXQgRmlyZWZveCBhbmQgRWRnZSBhbHNvIHN1cHBvcnQgKipgLXdlYmtpdC1hcHBlYXJhbmNlYCoqLCBmb3IgY29tcGF0aWJpbGl0eSByZWFzb25zLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBidXR0b24gfCBidXR0b24tYmV2ZWwgfCBjYXJldCB8IGNoZWNrYm94IHwgZGVmYXVsdC1idXR0b24gfCBpbm5lci1zcGluLWJ1dHRvbiB8IGxpc3Rib3ggfCBsaXN0aXRlbSB8IG1lZGlhLWNvbnRyb2xzLWJhY2tncm91bmQgfCBtZWRpYS1jb250cm9scy1mdWxsc2NyZWVuLWJhY2tncm91bmQgfCBtZWRpYS1jdXJyZW50LXRpbWUtZGlzcGxheSB8IG1lZGlhLWVudGVyLWZ1bGxzY3JlZW4tYnV0dG9uIHwgbWVkaWEtZXhpdC1mdWxsc2NyZWVuLWJ1dHRvbiB8IG1lZGlhLWZ1bGxzY3JlZW4tYnV0dG9uIHwgbWVkaWEtbXV0ZS1idXR0b24gfCBtZWRpYS1vdmVybGF5LXBsYXktYnV0dG9uIHwgbWVkaWEtcGxheS1idXR0b24gfCBtZWRpYS1zZWVrLWJhY2stYnV0dG9uIHwgbWVkaWEtc2Vlay1mb3J3YXJkLWJ1dHRvbiB8IG1lZGlhLXNsaWRlciB8IG1lZGlhLXNsaWRlcnRodW1iIHwgbWVkaWEtdGltZS1yZW1haW5pbmctZGlzcGxheSB8IG1lZGlhLXRvZ2dsZS1jbG9zZWQtY2FwdGlvbnMtYnV0dG9uIHwgbWVkaWEtdm9sdW1lLXNsaWRlciB8IG1lZGlhLXZvbHVtZS1zbGlkZXItY29udGFpbmVyIHwgbWVkaWEtdm9sdW1lLXNsaWRlcnRodW1iIHwgbWVudWxpc3QgfCBtZW51bGlzdC1idXR0b24gfCBtZW51bGlzdC10ZXh0IHwgbWVudWxpc3QtdGV4dGZpZWxkIHwgbWV0ZXIgfCBwcm9ncmVzcy1iYXIgfCBwcm9ncmVzcy1iYXItdmFsdWUgfCBwdXNoLWJ1dHRvbiB8IHJhZGlvIHwgc2VhcmNoZmllbGQgfCBzZWFyY2hmaWVsZC1jYW5jZWwtYnV0dG9uIHwgc2VhcmNoZmllbGQtZGVjb3JhdGlvbiB8IHNlYXJjaGZpZWxkLXJlc3VsdHMtYnV0dG9uIHwgc2VhcmNoZmllbGQtcmVzdWx0cy1kZWNvcmF0aW9uIHwgc2xpZGVyLWhvcml6b250YWwgfCBzbGlkZXItdmVydGljYWwgfCBzbGlkZXJ0aHVtYi1ob3Jpem9udGFsIHwgc2xpZGVydGh1bWItdmVydGljYWwgfCBzcXVhcmUtYnV0dG9uIHwgdGV4dGFyZWEgfCB0ZXh0ZmllbGQgfCAtYXBwbGUtcGF5LWJ1dHRvbmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAgKGJ1dCB0aGlzIHZhbHVlIGlzIG92ZXJyaWRkZW4gaW4gdGhlIHVzZXIgYWdlbnQgQ1NTKQogICAqLwogICItd2Via2l0LWFwcGVhcmFuY2UiPzogUHJvcGVydHkuV2Via2l0QXBwZWFyYW5jZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmFja2Ryb3AtZmlsdGVyYCoqIENTUyBwcm9wZXJ0eSBsZXRzIHlvdSBhcHBseSBncmFwaGljYWwgZWZmZWN0cyBzdWNoIGFzIGJsdXJyaW5nIG9yIGNvbG9yIHNoaWZ0aW5nIHRvIHRoZSBhcmVhIGJlaGluZCBhbiBlbGVtZW50LiBCZWNhdXNlIGl0IGFwcGxpZXMgdG8gZXZlcnl0aGluZyBfYmVoaW5kXyB0aGUgZWxlbWVudCwgdG8gc2VlIHRoZSBlZmZlY3QgeW91IG11c3QgbWFrZSB0aGUgZWxlbWVudCBvciBpdHMgYmFja2dyb3VuZCBhdCBsZWFzdCBwYXJ0aWFsbHkgdHJhbnNwYXJlbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxmaWx0ZXItZnVuY3Rpb24tbGlzdD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgIi13ZWJraXQtYmFja2Ryb3AtZmlsdGVyIj86IFByb3BlcnR5LkJhY2tkcm9wRmlsdGVyIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBiYWNrZmFjZS12aXNpYmlsaXR5YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgdGhlIGJhY2sgZmFjZSBvZiBhbiBlbGVtZW50IGlzIHZpc2libGUgd2hlbiB0dXJuZWQgdG93YXJkcyB0aGUgdXNlci4KICAgKgogICAqICoqU3ludGF4Kio6IGB2aXNpYmxlIHwgaGlkZGVuYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGB2aXNpYmxlYAogICAqLwogICItd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHkiPzogUHJvcGVydHkuQmFja2ZhY2VWaXNpYmlsaXR5IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBiYWNrZ3JvdW5kLWNsaXBgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hldGhlciBhbiBlbGVtZW50J3MgYmFja2dyb3VuZCBleHRlbmRzIHVuZGVybmVhdGggaXRzIGJvcmRlciBib3gsIHBhZGRpbmcgYm94LCBvciBjb250ZW50IGJveC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Ym94PiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGJvcmRlci1ib3hgCiAgICovCiAgIi13ZWJraXQtYmFja2dyb3VuZC1jbGlwIj86IFByb3BlcnR5LkJhY2tncm91bmRDbGlwIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBiYWNrZ3JvdW5kLW9yaWdpbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgYmFja2dyb3VuZCdzIG9yaWdpbjogZnJvbSB0aGUgYm9yZGVyIHN0YXJ0LCBpbnNpZGUgdGhlIGJvcmRlciwgb3IgaW5zaWRlIHRoZSBwYWRkaW5nLgogICAqCiAgICogKipTeW50YXgqKjogYDxib3g+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgcGFkZGluZy1ib3hgCiAgICovCiAgIi13ZWJraXQtYmFja2dyb3VuZC1vcmlnaW4iPzogUHJvcGVydHkuQmFja2dyb3VuZE9yaWdpbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYmFja2dyb3VuZC1zaXplYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBzaXplIG9mIHRoZSBlbGVtZW50J3MgYmFja2dyb3VuZCBpbWFnZS4gVGhlIGltYWdlIGNhbiBiZSBsZWZ0IHRvIGl0cyBuYXR1cmFsIHNpemUsIHN0cmV0Y2hlZCwgb3IgY29uc3RyYWluZWQgdG8gZml0IHRoZSBhdmFpbGFibGUgc3BhY2UuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGJnLXNpemU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0byBhdXRvYAogICAqLwogICItd2Via2l0LWJhY2tncm91bmQtc2l6ZSI/OiBQcm9wZXJ0eS5CYWNrZ3JvdW5kU2l6ZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiAqKlN5bnRheCoqOiBgPGNvbG9yPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY3VycmVudGNvbG9yYAogICAqLwogICItd2Via2l0LWJvcmRlci1iZWZvcmUtY29sb3IiPzogUHJvcGVydHkuV2Via2l0Qm9yZGVyQmVmb3JlQ29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLXN0eWxlJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgIi13ZWJraXQtYm9yZGVyLWJlZm9yZS1zdHlsZSI/OiBQcm9wZXJ0eS5XZWJraXRCb3JkZXJCZWZvcmVTdHlsZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItd2lkdGgnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWVkaXVtYAogICAqLwogICItd2Via2l0LWJvcmRlci1iZWZvcmUtd2lkdGgiPzogUHJvcGVydHkuV2Via2l0Qm9yZGVyQmVmb3JlV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXNgKiogQ1NTIHByb3BlcnR5IHJvdW5kcyB0aGUgYm90dG9tLWxlZnQgY29ybmVyIG9mIGFuIGVsZW1lbnQgYnkgc3BlY2lmeWluZyB0aGUgcmFkaXVzIChvciB0aGUgcmFkaXVzIG9mIHRoZSBzZW1pLW1ham9yIGFuZCBzZW1pLW1pbm9yIGF4ZXMpIG9mIHRoZSBlbGxpcHNlIGRlZmluaW5nIHRoZSBjdXJ2YXR1cmUgb2YgdGhlIGNvcm5lci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoLXBlcmNlbnRhZ2U+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgIi13ZWJraXQtYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1cyI/OiBQcm9wZXJ0eS5Cb3JkZXJCb3R0b21MZWZ0UmFkaXVzPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1c2AqKiBDU1MgcHJvcGVydHkgcm91bmRzIHRoZSBib3R0b20tcmlnaHQgY29ybmVyIG9mIGFuIGVsZW1lbnQgYnkgc3BlY2lmeWluZyB0aGUgcmFkaXVzIChvciB0aGUgcmFkaXVzIG9mIHRoZSBzZW1pLW1ham9yIGFuZCBzZW1pLW1pbm9yIGF4ZXMpIG9mIHRoZSBlbGxpcHNlIGRlZmluaW5nIHRoZSBjdXJ2YXR1cmUgb2YgdGhlIGNvcm5lci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoLXBlcmNlbnRhZ2U+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgIi13ZWJraXQtYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXMiPzogUHJvcGVydHkuQm9yZGVyQm90dG9tUmlnaHRSYWRpdXM8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbWFnZS1zbGljZWAqKiBDU1MgcHJvcGVydHkgZGl2aWRlcyB0aGUgaW1hZ2Ugc3BlY2lmaWVkIGJ5IGBib3JkZXItaW1hZ2Utc291cmNlYCBpbnRvIHJlZ2lvbnMuIFRoZXNlIHJlZ2lvbnMgZm9ybSB0aGUgY29tcG9uZW50cyBvZiBhbiBlbGVtZW50J3MgYm9yZGVyIGltYWdlLgogICAqCiAgICogKipTeW50YXgqKjogYDxudW1iZXItcGVyY2VudGFnZT57MSw0fSAmJiBmaWxsP2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMTAwJWAKICAgKi8KICAiLXdlYmtpdC1ib3JkZXItaW1hZ2Utc2xpY2UiPzogUHJvcGVydHkuQm9yZGVySW1hZ2VTbGljZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1c2AqKiBDU1MgcHJvcGVydHkgcm91bmRzIHRoZSB0b3AtbGVmdCBjb3JuZXIgb2YgYW4gZWxlbWVudCBieSBzcGVjaWZ5aW5nIHRoZSByYWRpdXMgKG9yIHRoZSByYWRpdXMgb2YgdGhlIHNlbWktbWFqb3IgYW5kIHNlbWktbWlub3IgYXhlcykgb2YgdGhlIGVsbGlwc2UgZGVmaW5pbmcgdGhlIGN1cnZhdHVyZSBvZiB0aGUgY29ybmVyLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGgtcGVyY2VudGFnZT57MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKi8KICAiLXdlYmtpdC1ib3JkZXItdG9wLWxlZnQtcmFkaXVzIj86IFByb3BlcnR5LkJvcmRlclRvcExlZnRSYWRpdXM8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci10b3AtcmlnaHQtcmFkaXVzYCoqIENTUyBwcm9wZXJ0eSByb3VuZHMgdGhlIHRvcC1yaWdodCBjb3JuZXIgb2YgYW4gZWxlbWVudCBieSBzcGVjaWZ5aW5nIHRoZSByYWRpdXMgKG9yIHRoZSByYWRpdXMgb2YgdGhlIHNlbWktbWFqb3IgYW5kIHNlbWktbWlub3IgYXhlcykgb2YgdGhlIGVsbGlwc2UgZGVmaW5pbmcgdGhlIGN1cnZhdHVyZSBvZiB0aGUgY29ybmVyLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGgtcGVyY2VudGFnZT57MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKi8KICAiLXdlYmtpdC1ib3JkZXItdG9wLXJpZ2h0LXJhZGl1cyI/OiBQcm9wZXJ0eS5Cb3JkZXJUb3BSaWdodFJhZGl1czxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LWRlY29yYXRpb24tYnJlYWtgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyBob3cgYW4gZWxlbWVudCdzIGZyYWdtZW50cyBzaG91bGQgYmUgcmVuZGVyZWQgd2hlbiBicm9rZW4gYWNyb3NzIG11bHRpcGxlIGxpbmVzLCBjb2x1bW5zLCBvciBwYWdlcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBzbGljZSB8IGNsb25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzbGljZWAKICAgKi8KICAiLXdlYmtpdC1ib3gtZGVjb3JhdGlvbi1icmVhayI/OiBQcm9wZXJ0eS5Cb3hEZWNvcmF0aW9uQnJlYWsgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC13ZWJraXQtYm94LXJlZmxlY3RgKiogQ1NTIHByb3BlcnR5IGxldHMgeW91IHJlZmxlY3QgdGhlIGNvbnRlbnQgb2YgYW4gZWxlbWVudCBpbiBvbmUgc3BlY2lmaWMgZGlyZWN0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYFsgYWJvdmUgfCBiZWxvdyB8IHJpZ2h0IHwgbGVmdCBdPyA8bGVuZ3RoPj8gPGltYWdlPj9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgIi13ZWJraXQtYm94LXJlZmxlY3QiPzogUHJvcGVydHkuV2Via2l0Qm94UmVmbGVjdDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LXNoYWRvd2AqKiBDU1MgcHJvcGVydHkgYWRkcyBzaGFkb3cgZWZmZWN0cyBhcm91bmQgYW4gZWxlbWVudCdzIGZyYW1lLiBZb3UgY2FuIHNldCBtdWx0aXBsZSBlZmZlY3RzIHNlcGFyYXRlZCBieSBjb21tYXMuIEEgYm94IHNoYWRvdyBpcyBkZXNjcmliZWQgYnkgWCBhbmQgWSBvZmZzZXRzIHJlbGF0aXZlIHRvIHRoZSBlbGVtZW50LCBibHVyIGFuZCBzcHJlYWQgcmFkaXVzLCBhbmQgY29sb3IuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxzaGFkb3c+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICAiLXdlYmtpdC1ib3gtc2hhZG93Ij86IFByb3BlcnR5LkJveFNoYWRvdyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LXNpemluZ2AqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgdGhlIHRvdGFsIHdpZHRoIGFuZCBoZWlnaHQgb2YgYW4gZWxlbWVudCBpcyBjYWxjdWxhdGVkLgogICAqCiAgICogKipTeW50YXgqKjogYGNvbnRlbnQtYm94IHwgYm9yZGVyLWJveGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY29udGVudC1ib3hgCiAgICovCiAgIi13ZWJraXQtYm94LXNpemluZyI/OiBQcm9wZXJ0eS5Cb3hTaXppbmcgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAqKmNsaXAtcGF0aCoqYCBDU1MgcHJvcGVydHkgY3JlYXRlcyBhIGNsaXBwaW5nIHJlZ2lvbiB0aGF0IHNldHMgd2hhdCBwYXJ0IG9mIGFuIGVsZW1lbnQgc2hvdWxkIGJlIHNob3duLiBQYXJ0cyB0aGF0IGFyZSBpbnNpZGUgdGhlIHJlZ2lvbiBhcmUgc2hvd24sIHdoaWxlIHRob3NlIG91dHNpZGUgYXJlIGhpZGRlbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y2xpcC1zb3VyY2U+IHwgWyA8YmFzaWMtc2hhcGU+IHx8IDxnZW9tZXRyeS1ib3g+IF0gfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogICItd2Via2l0LWNsaXAtcGF0aCI/OiBQcm9wZXJ0eS5DbGlwUGF0aCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uLWNvdW50YCoqIENTUyBwcm9wZXJ0eSBicmVha3MgYW4gZWxlbWVudCdzIGNvbnRlbnQgaW50byB0aGUgc3BlY2lmaWVkIG51bWJlciBvZiBjb2x1bW5zLgogICAqCiAgICogKipTeW50YXgqKjogYDxpbnRlZ2VyPiB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgIi13ZWJraXQtY29sdW1uLWNvdW50Ij86IFByb3BlcnR5LkNvbHVtbkNvdW50IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2x1bW4tZmlsbGAqKiBDU1MgcHJvcGVydHkgY29udHJvbHMgaG93IGFuIGVsZW1lbnQncyBjb250ZW50cyBhcmUgYmFsYW5jZWQgd2hlbiBicm9rZW4gaW50byBjb2x1bW5zLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBiYWxhbmNlIHwgYmFsYW5jZS1hbGxgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGJhbGFuY2VgCiAgICovCiAgIi13ZWJraXQtY29sdW1uLWZpbGwiPzogUHJvcGVydHkuQ29sdW1uRmlsbCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uLWdhcGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgc2l6ZSBvZiB0aGUgZ2FwIChndXR0ZXIpIGJldHdlZW4gYW4gZWxlbWVudCdzIGNvbHVtbnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgPGxlbmd0aC1wZXJjZW50YWdlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqLwogICItd2Via2l0LWNvbHVtbi1nYXAiPzogUHJvcGVydHkuQ29sdW1uR2FwPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2x1bW4tcnVsZS1jb2xvcmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgY29sb3Igb2YgdGhlIGxpbmUgZHJhd24gYmV0d2VlbiBjb2x1bW5zIGluIGEgbXVsdGktY29sdW1uIGxheW91dC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjdXJyZW50Y29sb3JgCiAgICovCiAgIi13ZWJraXQtY29sdW1uLXJ1bGUtY29sb3IiPzogUHJvcGVydHkuQ29sdW1uUnVsZUNvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2x1bW4tcnVsZS1zdHlsZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgc3R5bGUgb2YgdGhlIGxpbmUgZHJhd24gYmV0d2VlbiBjb2x1bW5zIGluIGEgbXVsdGktY29sdW1uIGxheW91dC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci1zdHlsZSc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogICItd2Via2l0LWNvbHVtbi1ydWxlLXN0eWxlIj86IFByb3BlcnR5LkNvbHVtblJ1bGVTdHlsZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uLXJ1bGUtd2lkdGhgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHdpZHRoIG9mIHRoZSBsaW5lIGRyYXduIGJldHdlZW4gY29sdW1ucyBpbiBhIG11bHRpLWNvbHVtbiBsYXlvdXQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdib3JkZXItd2lkdGgnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWVkaXVtYAogICAqLwogICItd2Via2l0LWNvbHVtbi1ydWxlLXdpZHRoIj86IFByb3BlcnR5LkNvbHVtblJ1bGVXaWR0aDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uLXNwYW5gKiogQ1NTIHByb3BlcnR5IG1ha2VzIGl0IHBvc3NpYmxlIGZvciBhbiBlbGVtZW50IHRvIHNwYW4gYWNyb3NzIGFsbCBjb2x1bW5zIHdoZW4gaXRzIHZhbHVlIGlzIHNldCB0byBgYWxsYC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgYWxsYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogICItd2Via2l0LWNvbHVtbi1zcGFuIj86IFByb3BlcnR5LkNvbHVtblNwYW4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi13aWR0aGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgaWRlYWwgY29sdW1uIHdpZHRoIGluIGEgbXVsdGktY29sdW1uIGxheW91dC4gVGhlIGNvbnRhaW5lciB3aWxsIGhhdmUgYXMgbWFueSBjb2x1bW5zIGFzIGNhbiBmaXQgd2l0aG91dCBhbnkgb2YgdGhlbSBoYXZpbmcgYSB3aWR0aCBsZXNzIHRoYW4gdGhlIGBjb2x1bW4td2lkdGhgIHZhbHVlLiBJZiB0aGUgd2lkdGggb2YgdGhlIGNvbnRhaW5lciBpcyBuYXJyb3dlciB0aGFuIHRoZSBzcGVjaWZpZWQgdmFsdWUsIHRoZSBzaW5nbGUgY29sdW1uJ3Mgd2lkdGggd2lsbCBiZSBzbWFsbGVyIHRoYW4gdGhlIGRlY2xhcmVkIGNvbHVtbiB3aWR0aC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPiB8IGF1dG9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgIi13ZWJraXQtY29sdW1uLXdpZHRoIj86IFByb3BlcnR5LkNvbHVtbldpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmaWx0ZXJgKiogQ1NTIHByb3BlcnR5IGFwcGxpZXMgZ3JhcGhpY2FsIGVmZmVjdHMgbGlrZSBibHVyIG9yIGNvbG9yIHNoaWZ0IHRvIGFuIGVsZW1lbnQuIEZpbHRlcnMgYXJlIGNvbW1vbmx5IHVzZWQgdG8gYWRqdXN0IHRoZSByZW5kZXJpbmcgb2YgaW1hZ2VzLCBiYWNrZ3JvdW5kcywgYW5kIGJvcmRlcnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxmaWx0ZXItZnVuY3Rpb24tbGlzdD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgIi13ZWJraXQtZmlsdGVyIj86IFByb3BlcnR5LkZpbHRlciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZmxleC1iYXNpc2AqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgaW5pdGlhbCBtYWluIHNpemUgb2YgYSBmbGV4IGl0ZW0uIEl0IHNldHMgdGhlIHNpemUgb2YgdGhlIGNvbnRlbnQgYm94IHVubGVzcyBvdGhlcndpc2Ugc2V0IHdpdGggYGJveC1zaXppbmdgLgogICAqCiAgICogKipTeW50YXgqKjogYGNvbnRlbnQgfCA8J3dpZHRoJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgIi13ZWJraXQtZmxleC1iYXNpcyI/OiBQcm9wZXJ0eS5GbGV4QmFzaXM8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZsZXgtZGlyZWN0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBmbGV4IGl0ZW1zIGFyZSBwbGFjZWQgaW4gdGhlIGZsZXggY29udGFpbmVyIGRlZmluaW5nIHRoZSBtYWluIGF4aXMgYW5kIHRoZSBkaXJlY3Rpb24gKG5vcm1hbCBvciByZXZlcnNlZCkuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgcm93IHwgcm93LXJldmVyc2UgfCBjb2x1bW4gfCBjb2x1bW4tcmV2ZXJzZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgcm93YAogICAqLwogICItd2Via2l0LWZsZXgtZGlyZWN0aW9uIj86IFByb3BlcnR5LkZsZXhEaXJlY3Rpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZsZXgtZ3Jvd2AqKiBDU1PCoHByb3BlcnR5IHNldHMgdGhlIGZsZXggZ3JvdyBmYWN0b3Igb2YgYSBmbGV4IGl0ZW0gbWFpbiBzaXplLgogICAqCiAgICogKipTeW50YXgqKjogYDxudW1iZXI+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqLwogICItd2Via2l0LWZsZXgtZ3JvdyI/OiBQcm9wZXJ0eS5GbGV4R3JvdyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZmxleC1zaHJpbmtgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGZsZXggc2hyaW5rIGZhY3RvciBvZiBhIGZsZXggaXRlbS4gSWYgdGhlIHNpemUgb2YgYWxsIGZsZXggaXRlbXMgaXMgbGFyZ2VyIHRoYW4gdGhlIGZsZXggY29udGFpbmVyLCBpdGVtcyBzaHJpbmsgdG8gZml0IGFjY29yZGluZyB0byBgZmxleC1zaHJpbmtgLgogICAqCiAgICogKipTeW50YXgqKjogYDxudW1iZXI+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAxYAogICAqLwogICItd2Via2l0LWZsZXgtc2hyaW5rIj86IFByb3BlcnR5LkZsZXhTaHJpbmsgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZsZXgtd3JhcGAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIGZsZXggaXRlbXMgYXJlIGZvcmNlZCBvbnRvIG9uZSBsaW5lIG9yIGNhbiB3cmFwIG9udG8gbXVsdGlwbGUgbGluZXMuIElmIHdyYXBwaW5nIGlzIGFsbG93ZWQsIGl0IHNldHMgdGhlIGRpcmVjdGlvbiB0aGF0IGxpbmVzIGFyZSBzdGFja2VkLgogICAqCiAgICogKipTeW50YXgqKjogYG5vd3JhcCB8IHdyYXAgfCB3cmFwLXJldmVyc2VgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vd3JhcGAKICAgKi8KICAiLXdlYmtpdC1mbGV4LXdyYXAiPzogUHJvcGVydHkuRmxleFdyYXAgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQtZmVhdHVyZS1zZXR0aW5nc2AqKiBDU1MgcHJvcGVydHkgY29udHJvbHMgYWR2YW5jZWQgdHlwb2dyYXBoaWMgZmVhdHVyZXMgaW4gT3BlblR5cGUgZm9udHMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgPGZlYXR1cmUtdGFnLXZhbHVlPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKi8KICAiLXdlYmtpdC1mb250LWZlYXR1cmUtc2V0dGluZ3MiPzogUHJvcGVydHkuRm9udEZlYXR1cmVTZXR0aW5ncyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZm9udC1rZXJuaW5nYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSB1c2Ugb2YgdGhlIGtlcm5pbmcgaW5mb3JtYXRpb24gc3RvcmVkIGluIGEgZm9udC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgbm9ybWFsIHwgbm9uZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICAiLXdlYmtpdC1mb250LWtlcm5pbmciPzogUHJvcGVydHkuRm9udEtlcm5pbmcgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZvbnQtc21vb3RoYCoqIENTUyBwcm9wZXJ0eSBjb250cm9scyB0aGUgYXBwbGljYXRpb24gb2YgYW50aS1hbGlhc2luZyB3aGVuIGZvbnRzIGFyZSByZW5kZXJlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgbmV2ZXIgfCBhbHdheXMgfCA8YWJzb2x1dGUtc2l6ZT4gfCA8bGVuZ3RoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICAiLXdlYmtpdC1mb250LXNtb290aGluZyI/OiBQcm9wZXJ0eS5Gb250U21vb3RoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmb250LXZhcmlhbnQtbGlnYXR1cmVzYCoqIENTUyBwcm9wZXJ0eSBjb250cm9scyB3aGljaCBsaWdhdHVyZXMgYW5kIGNvbnRleHR1YWwgZm9ybXMgYXJlIHVzZWQgaW4gdGV4dHVhbCBjb250ZW50IG9mIHRoZSBlbGVtZW50cyBpdCBhcHBsaWVzIHRvLiBUaGlzIGxlYWRzIHRvIG1vcmUgaGFybW9uaXplZCBmb3JtcyBpbiB0aGUgcmVzdWx0aW5nIHRleHQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgbm9uZSB8IFsgPGNvbW1vbi1saWctdmFsdWVzPiB8fCA8ZGlzY3JldGlvbmFyeS1saWctdmFsdWVzPiB8fCA8aGlzdG9yaWNhbC1saWctdmFsdWVzPiB8fCA8Y29udGV4dHVhbC1hbHQtdmFsdWVzPiBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICovCiAgIi13ZWJraXQtZm9udC12YXJpYW50LWxpZ2F0dXJlcyI/OiBQcm9wZXJ0eS5Gb250VmFyaWFudExpZ2F0dXJlcyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgaHlwaGVuc2AqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIGhvdyB3b3JkcyBzaG91bGQgYmUgaHlwaGVuYXRlZCB3aGVuIHRleHQgd3JhcHMgYWNyb3NzIG11bHRpcGxlIGxpbmVzLiBJdCBjYW4gcHJldmVudCBoeXBoZW5hdGlvbiBlbnRpcmVseSwgaHlwaGVuYXRlIGF0IG1hbnVhbGx5LXNwZWNpZmllZCBwb2ludHMgd2l0aGluIHRoZSB0ZXh0LCBvciBsZXQgdGhlIGJyb3dzZXIgYXV0b21hdGljYWxseSBpbnNlcnQgaHlwaGVucyB3aGVyZSBhcHByb3ByaWF0ZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgbWFudWFsIHwgYXV0b2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWFudWFsYAogICAqLwogICItd2Via2l0LWh5cGhlbnMiPzogUHJvcGVydHkuSHlwaGVucyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYGluaXRpYWwtbGV0dGVyYCBDU1MgcHJvcGVydHkgc2V0cyBzdHlsaW5nIGZvciBkcm9wcGVkLCByYWlzZWQsIGFuZCBzdW5rZW4gaW5pdGlhbCBsZXR0ZXJzLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IFsgPG51bWJlcj4gPGludGVnZXI+PyBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICovCiAgIi13ZWJraXQtaW5pdGlhbC1sZXR0ZXIiPzogUHJvcGVydHkuSW5pdGlhbExldHRlciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgQ1NTICoqYGp1c3RpZnktY29udGVudGAqKiBwcm9wZXJ0eSBkZWZpbmVzIGhvdyB0aGUgYnJvd3NlciBkaXN0cmlidXRlcyBzcGFjZSBiZXR3ZWVuIGFuZCBhcm91bmQgY29udGVudCBpdGVtcyBhbG9uZyB0aGUgbWFpbi1heGlzIG9mIGEgZmxleCBjb250YWluZXIsIGFuZCB0aGUgaW5saW5lIGF4aXMgb2YgYSBncmlkIGNvbnRhaW5lci4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCA8Y29udGVudC1kaXN0cmlidXRpb24+IHwgPG92ZXJmbG93LXBvc2l0aW9uPj8gWyA8Y29udGVudC1wb3NpdGlvbj4gfCBsZWZ0IHwgcmlnaHQgXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqLwogICItd2Via2l0LWp1c3RpZnktY29udGVudCI/OiBQcm9wZXJ0eS5KdXN0aWZ5Q29udGVudCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbGluZS1icmVha2AqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgdG8gYnJlYWsgbGluZXMgb2YgQ2hpbmVzZSwgSmFwYW5lc2UsIG9yIEtvcmVhbiAoQ0pLKSB0ZXh0IHdoZW4gd29ya2luZyB3aXRoIHB1bmN0dWF0aW9uIGFuZCBzeW1ib2xzLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBsb29zZSB8IG5vcm1hbCB8IHN0cmljdCB8IGFueXdoZXJlYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqLwogICItd2Via2l0LWxpbmUtYnJlYWsiPzogUHJvcGVydHkuTGluZUJyZWFrIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtd2Via2l0LWxpbmUtY2xhbXBgKiogQ1NTIHByb3BlcnR5IGFsbG93cyBsaW1pdGluZyBvZiB0aGUgY29udGVudHMgb2YgYSBibG9jayBjb250YWluZXIgdG8gdGhlIHNwZWNpZmllZCBudW1iZXIgb2YgbGluZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxpbnRlZ2VyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICAiLXdlYmtpdC1saW5lLWNsYW1wIj86IFByb3BlcnR5LldlYmtpdExpbmVDbGFtcCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFyZ2luLWlubGluZS1lbmRgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgaW5saW5lIGVuZCBtYXJnaW4gb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIG1hcmdpbiBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSW4gb3RoZXIgd29yZHMsIGl0IGNvcnJlc3BvbmRzIHRvIHRoZSBgbWFyZ2luLXRvcGAsIGBtYXJnaW4tcmlnaHRgLCBgbWFyZ2luLWJvdHRvbWAgb3IgYG1hcmdpbi1sZWZ0YCBwcm9wZXJ0eSBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBkZWZpbmVkIGZvciBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdtYXJnaW4tbGVmdCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqLwogICItd2Via2l0LW1hcmdpbi1lbmQiPzogUHJvcGVydHkuTWFyZ2luSW5saW5lRW5kPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXJnaW4taW5saW5lLXN0YXJ0YCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIGlubGluZSBzdGFydCBtYXJnaW4gb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIG1hcmdpbiBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGBtYXJnaW4tdG9wYCwgYG1hcmdpbi1yaWdodGAsIGBtYXJnaW4tYm90dG9tYCwgb3IgYG1hcmdpbi1sZWZ0YCBwcm9wZXJ0eSBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBkZWZpbmVkIGZvciBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdtYXJnaW4tbGVmdCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqLwogICItd2Via2l0LW1hcmdpbi1zdGFydCI/OiBQcm9wZXJ0eS5NYXJnaW5JbmxpbmVTdGFydDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBJZiBhIGAtd2Via2l0LW1hc2staW1hZ2VgIGlzIHNwZWNpZmllZCwgYC13ZWJraXQtbWFzay1hdHRhY2htZW50YCBkZXRlcm1pbmVzIHdoZXRoZXIgdGhlIG1hc2sgaW1hZ2UncyBwb3NpdGlvbiBpcyBmaXhlZCB3aXRoaW4gdGhlIHZpZXdwb3J0LCBvciBzY3JvbGxzIGFsb25nIHdpdGggaXRzIGNvbnRhaW5pbmcgYmxvY2suCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGF0dGFjaG1lbnQ+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc2Nyb2xsYAogICAqLwogICItd2Via2l0LW1hc2stYXR0YWNobWVudCI/OiBQcm9wZXJ0eS5XZWJraXRNYXNrQXR0YWNobWVudCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1ib3JkZXItb3V0c2V0YCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIGRpc3RhbmNlIGJ5IHdoaWNoIGFuIGVsZW1lbnQncyBtYXNrIGJvcmRlciBpcyBzZXQgb3V0IGZyb20gaXRzIGJvcmRlciBib3guCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8bGVuZ3RoPiB8IDxudW1iZXI+IF17MSw0fWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKi8KICAiLXdlYmtpdC1tYXNrLWJveC1pbWFnZS1vdXRzZXQiPzogUHJvcGVydHkuTWFza0JvcmRlck91dHNldDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1ib3JkZXItcmVwZWF0YCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyB0aGUgZWRnZSByZWdpb25zIG9mIGEgc291cmNlIGltYWdlIGFyZSBhZGp1c3RlZCB0byBmaXQgdGhlIGRpbWVuc2lvbnMgb2YgYW4gZWxlbWVudCdzIG1hc2sgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYFsgc3RyZXRjaCB8IHJlcGVhdCB8IHJvdW5kIHwgc3BhY2UgXXsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzdHJldGNoYAogICAqLwogICItd2Via2l0LW1hc2stYm94LWltYWdlLXJlcGVhdCI/OiBQcm9wZXJ0eS5NYXNrQm9yZGVyUmVwZWF0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXNrLWJvcmRlci1zbGljZWAqKiBDU1MgcHJvcGVydHkgZGl2aWRlcyB0aGUgaW1hZ2Ugc2V0IGJ5IGBtYXNrLWJvcmRlci1zb3VyY2VgIGludG8gcmVnaW9ucy4gVGhlc2UgcmVnaW9ucyBhcmUgdXNlZCB0byBmb3JtIHRoZSBjb21wb25lbnRzIG9mIGFuIGVsZW1lbnQncyBtYXNrIGJvcmRlci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bnVtYmVyLXBlcmNlbnRhZ2U+ezEsNH0gZmlsbD9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgIi13ZWJraXQtbWFzay1ib3gtaW1hZ2Utc2xpY2UiPzogUHJvcGVydHkuTWFza0JvcmRlclNsaWNlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXNrLWJvcmRlci1zb3VyY2VgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHNvdXJjZSBpbWFnZSB1c2VkIHRvIGNyZWF0ZSBhbiBlbGVtZW50J3MgbWFzayBib3JkZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDxpbWFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgIi13ZWJraXQtbWFzay1ib3gtaW1hZ2Utc291cmNlIj86IFByb3BlcnR5Lk1hc2tCb3JkZXJTb3VyY2UgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hc2stYm9yZGVyLXdpZHRoYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSB3aWR0aCBvZiBhbiBlbGVtZW50J3MgbWFzayBib3JkZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8bGVuZ3RoLXBlcmNlbnRhZ2U+IHwgPG51bWJlcj4gfCBhdXRvIF17MSw0fWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICAiLXdlYmtpdC1tYXNrLWJveC1pbWFnZS13aWR0aCI/OiBQcm9wZXJ0eS5NYXNrQm9yZGVyV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hc2stY2xpcGAqKiBDU1MgcHJvcGVydHkgZGV0ZXJtaW5lcyB0aGUgYXJlYSB3aGljaCBpcyBhZmZlY3RlZCBieSBhIG1hc2suIFRoZSBwYWludGVkIGNvbnRlbnQgb2YgYW4gZWxlbWVudCBtdXN0IGJlIHJlc3RyaWN0ZWQgdG8gdGhpcyBhcmVhLgogICAqCiAgICogKipTeW50YXgqKjogYFsgPGJveD4gfCBib3JkZXIgfCBwYWRkaW5nIHwgY29udGVudCB8IHRleHQgXSNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGJvcmRlcmAKICAgKi8KICAiLXdlYmtpdC1tYXNrLWNsaXAiPzogUHJvcGVydHkuV2Via2l0TWFza0NsaXAgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC13ZWJraXQtbWFzay1jb21wb3NpdGVgKiogcHJvcGVydHkgc3BlY2lmaWVzIHRoZSBtYW5uZXIgaW4gd2hpY2ggbXVsdGlwbGUgbWFzayBpbWFnZXMgYXBwbGllZCB0byB0aGUgc2FtZSBlbGVtZW50IGFyZSBjb21wb3NpdGVkIHdpdGggb25lIGFub3RoZXIuIE1hc2sgaW1hZ2VzIGFyZSBjb21wb3NpdGVkIGluIHRoZSBvcHBvc2l0ZSBvcmRlciB0aGF0IHRoZXkgYXJlIGRlY2xhcmVkIHdpdGggdGhlIGAtd2Via2l0LW1hc2staW1hZ2VgIHByb3BlcnR5LgogICAqCiAgICogKipTeW50YXgqKjogYDxjb21wb3NpdGUtc3R5bGU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc291cmNlLW92ZXJgCiAgICovCiAgIi13ZWJraXQtbWFzay1jb21wb3NpdGUiPzogUHJvcGVydHkuV2Via2l0TWFza0NvbXBvc2l0ZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1pbWFnZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgaW1hZ2UgdGhhdCBpcyB1c2VkIGFzIG1hc2sgbGF5ZXIgZm9yIGFuIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPG1hc2stcmVmZXJlbmNlPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgIi13ZWJraXQtbWFzay1pbWFnZSI/OiBQcm9wZXJ0eS5XZWJraXRNYXNrSW1hZ2UgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hc2stb3JpZ2luYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBvcmlnaW4gb2YgYSBtYXNrLgogICAqCiAgICogKipTeW50YXgqKjogYFsgPGJveD4gfCBib3JkZXIgfCBwYWRkaW5nIHwgY29udGVudCBdI2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgcGFkZGluZ2AKICAgKi8KICAiLXdlYmtpdC1tYXNrLW9yaWdpbiI/OiBQcm9wZXJ0eS5XZWJraXRNYXNrT3JpZ2luIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXNrLXBvc2l0aW9uYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBpbml0aWFsIHBvc2l0aW9uLCByZWxhdGl2ZSB0byB0aGUgbWFzayBwb3NpdGlvbiBsYXllciBzZXQgYnkgYG1hc2stb3JpZ2luYCwgZm9yIGVhY2ggZGVmaW5lZCBtYXNrIGltYWdlLgogICAqCiAgICogKipTeW50YXgqKjogYDxwb3NpdGlvbj4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwJSAwJWAKICAgKi8KICAiLXdlYmtpdC1tYXNrLXBvc2l0aW9uIj86IFByb3BlcnR5LldlYmtpdE1hc2tQb3NpdGlvbjxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYC13ZWJraXQtbWFzay1wb3NpdGlvbi14YCBDU1MgcHJvcGVydHkgc2V0cyB0aGUgaW5pdGlhbCBob3Jpem9udGFsIHBvc2l0aW9uIG9mIGEgbWFzayBpbWFnZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDxsZW5ndGgtcGVyY2VudGFnZT4gfCBsZWZ0IHwgY2VudGVyIHwgcmlnaHQgXSNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDAlYAogICAqLwogICItd2Via2l0LW1hc2stcG9zaXRpb24teCI/OiBQcm9wZXJ0eS5XZWJraXRNYXNrUG9zaXRpb25YPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgLXdlYmtpdC1tYXNrLXBvc2l0aW9uLXlgIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBpbml0aWFsIHZlcnRpY2FsIHBvc2l0aW9uIG9mIGEgbWFzayBpbWFnZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDxsZW5ndGgtcGVyY2VudGFnZT4gfCB0b3AgfCBjZW50ZXIgfCBib3R0b20gXSNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDAlYAogICAqLwogICItd2Via2l0LW1hc2stcG9zaXRpb24teSI/OiBQcm9wZXJ0eS5XZWJraXRNYXNrUG9zaXRpb25ZPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBtYXNrLXJlcGVhdGAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgbWFzayBpbWFnZXMgYXJlIHJlcGVhdGVkLiBBIG1hc2sgaW1hZ2UgY2FuIGJlIHJlcGVhdGVkIGFsb25nIHRoZSBob3Jpem9udGFsIGF4aXMsIHRoZSB2ZXJ0aWNhbCBheGlzLCBib3RoIGF4ZXMsIG9yIG5vdCByZXBlYXRlZCBhdCBhbGwuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHJlcGVhdC1zdHlsZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGByZXBlYXRgCiAgICovCiAgIi13ZWJraXQtbWFzay1yZXBlYXQiPzogUHJvcGVydHkuV2Via2l0TWFza1JlcGVhdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYC13ZWJraXQtbWFzay1yZXBlYXQteGAgcHJvcGVydHkgc3BlY2lmaWVzIHdoZXRoZXIgYW5kIGhvdyBhIG1hc2sgaW1hZ2UgaXMgcmVwZWF0ZWQgKHRpbGVkKSBob3Jpem9udGFsbHkuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgcmVwZWF0IHwgbm8tcmVwZWF0IHwgc3BhY2UgfCByb3VuZGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgcmVwZWF0YAogICAqLwogICItd2Via2l0LW1hc2stcmVwZWF0LXgiPzogUHJvcGVydHkuV2Via2l0TWFza1JlcGVhdFggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAtd2Via2l0LW1hc2stcmVwZWF0LXlgIHByb3BlcnR5IHNldHMgd2hldGhlciBhbmQgaG93IGEgbWFzayBpbWFnZSBpcyByZXBlYXRlZCAodGlsZWQpIHZlcnRpY2FsbHkuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgcmVwZWF0IHwgbm8tcmVwZWF0IHwgc3BhY2UgfCByb3VuZGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgcmVwZWF0YAogICAqLwogICItd2Via2l0LW1hc2stcmVwZWF0LXkiPzogUHJvcGVydHkuV2Via2l0TWFza1JlcGVhdFkgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYG1hc2stc2l6ZWAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHRoZSBzaXplcyBvZiB0aGUgbWFzayBpbWFnZXMuIFRoZSBzaXplIG9mIHRoZSBpbWFnZSBjYW4gYmUgZnVsbHkgb3IgcGFydGlhbGx5IGNvbnN0cmFpbmVkIGluIG9yZGVyIHRvIHByZXNlcnZlIGl0cyBpbnRyaW5zaWMgcmF0aW8uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGJnLXNpemU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0byBhdXRvYAogICAqLwogICItd2Via2l0LW1hc2stc2l6ZSI/OiBQcm9wZXJ0eS5XZWJraXRNYXNrU2l6ZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWF4LWlubGluZS1zaXplYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBob3Jpem9udGFsIG9yIHZlcnRpY2FsIG1heGltdW0gc2l6ZSBvZiBhbiBlbGVtZW50J3MgYmxvY2ssIGRlcGVuZGluZyBvbiBpdHMgd3JpdGluZyBtb2RlLiBJdCBjb3JyZXNwb25kcyB0byBlaXRoZXIgdGhlIGBtYXgtd2lkdGhgIG9yIHRoZSBgbWF4LWhlaWdodGAgcHJvcGVydHksIGRlcGVuZGluZyBvbiB0aGUgdmFsdWUgb2YgYHdyaXRpbmctbW9kZWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdtYXgtd2lkdGgnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKi8KICAiLXdlYmtpdC1tYXgtaW5saW5lLXNpemUiPzogUHJvcGVydHkuTWF4SW5saW5lU2l6ZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3JkZXJgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG9yZGVyIHRvIGxheSBvdXQgYW4gaXRlbSBpbiBhIGZsZXggb3IgZ3JpZCBjb250YWluZXIuIEl0ZW1zIGluIGEgY29udGFpbmVyIGFyZSBzb3J0ZWQgYnkgYXNjZW5kaW5nIGBvcmRlcmAgdmFsdWUgYW5kIHRoZW4gYnkgdGhlaXIgc291cmNlIGNvZGUgb3JkZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGludGVnZXI+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqLwogICItd2Via2l0LW9yZGVyIj86IFByb3BlcnR5Lk9yZGVyIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmdgIENTUyBwcm9wZXJ0eSBjb250cm9scyB3aGV0aGVyIG9yIG5vdCB0b3VjaCBkZXZpY2VzIHVzZSBtb21lbnR1bS1iYXNlZCBzY3JvbGxpbmcgZm9yIGEgZ2l2ZW4gZWxlbWVudC4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgdG91Y2hgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgIi13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nIj86IFByb3BlcnR5LldlYmtpdE92ZXJmbG93U2Nyb2xsaW5nIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBwYWRkaW5nLWlubGluZS1lbmRgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgaW5saW5lIGVuZCBwYWRkaW5nIG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBwYWRkaW5nIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYDwncGFkZGluZy1sZWZ0Jz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgIi13ZWJraXQtcGFkZGluZy1lbmQiPzogUHJvcGVydHkuUGFkZGluZ0lubGluZUVuZDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgcGFkZGluZy1pbmxpbmUtc3RhcnRgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgaW5saW5lIHN0YXJ0IHBhZGRpbmcgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIHBhZGRpbmcgZGVwZW5kaW5nIG9uIHRoZSBlbGVtZW50J3Mgd3JpdGluZyBtb2RlLCBkaXJlY3Rpb25hbGl0eSwgYW5kIHRleHQgb3JpZW50YXRpb24uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdwYWRkaW5nLWxlZnQnPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKi8KICAiLXdlYmtpdC1wYWRkaW5nLXN0YXJ0Ij86IFByb3BlcnR5LlBhZGRpbmdJbmxpbmVTdGFydDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgcGVyc3BlY3RpdmVgKiogQ1NTIHByb3BlcnR5IGRldGVybWluZXMgdGhlIGRpc3RhbmNlIGJldHdlZW4gdGhlIHo9MCBwbGFuZSBhbmQgdGhlIHVzZXIgaW4gb3JkZXIgdG8gZ2l2ZSBhIDNELXBvc2l0aW9uZWQgZWxlbWVudCBzb21lIHBlcnNwZWN0aXZlLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8bGVuZ3RoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICAiLXdlYmtpdC1wZXJzcGVjdGl2ZSI/OiBQcm9wZXJ0eS5QZXJzcGVjdGl2ZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgcGVyc3BlY3RpdmUtb3JpZ2luYCoqIENTUyBwcm9wZXJ0eSBkZXRlcm1pbmVzIHRoZSBwb3NpdGlvbiBhdCB3aGljaCB0aGUgdmlld2VyIGlzIGxvb2tpbmcuIEl0IGlzIHVzZWQgYXMgdGhlIF92YW5pc2hpbmcgcG9pbnRfIGJ5IHRoZSBgcGVyc3BlY3RpdmVgIHByb3BlcnR5LgogICAqCiAgICogKipTeW50YXgqKjogYDxwb3NpdGlvbj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDUwJSA1MCVgCiAgICovCiAgIi13ZWJraXQtcGVyc3BlY3RpdmUtb3JpZ2luIj86IFByb3BlcnR5LlBlcnNwZWN0aXZlT3JpZ2luPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2xvci1hZGp1c3RgKiogQ1NTIHByb3BlcnR5IHNldHMgd2hhdCwgaWYgYW55dGhpbmcsIHRoZSB1c2VyIGFnZW50IG1heSBkbyB0byBvcHRpbWl6ZSB0aGUgYXBwZWFyYW5jZSBvZiB0aGUgZWxlbWVudCBvbiB0aGUgb3V0cHV0IGRldmljZS4gQnkgZGVmYXVsdCwgdGhlIGJyb3dzZXIgaXMgYWxsb3dlZCB0byBtYWtlIGFueSBhZGp1c3RtZW50cyB0byB0aGUgZWxlbWVudCdzIGFwcGVhcmFuY2UgaXQgZGV0ZXJtaW5lcyB0byBiZSBuZWNlc3NhcnkgYW5kIHBydWRlbnQgZ2l2ZW4gdGhlIHR5cGUgYW5kIGNhcGFiaWxpdGllcyBvZiB0aGUgb3V0cHV0IGRldmljZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBlY29ub215IHwgZXhhY3RgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGVjb25vbXlgCiAgICovCiAgIi13ZWJraXQtcHJpbnQtY29sb3ItYWRqdXN0Ij86IFByb3BlcnR5LkNvbG9yQWRqdXN0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgKipydWJ5LXBvc2l0aW9uKipgIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBwb3NpdGlvbiBvZiBhIHJ1YnkgZWxlbWVudCByZWxhdGl2ZXMgdG8gaXRzIGJhc2UgZWxlbWVudC4gSXQgY2FuIGJlIHBvc2l0aW9uIG92ZXIgdGhlIGVsZW1lbnQgKGBvdmVyYCksIHVuZGVyIGl0IChgdW5kZXJgKSwgb3IgYmV0d2VlbiB0aGUgY2hhcmFjdGVycywgb24gdGhlaXIgcmlnaHQgc2lkZSAoYGludGVyLWNoYXJhY3RlcmApLgogICAqCiAgICogKipTeW50YXgqKjogYFsgYWx0ZXJuYXRlIHx8IFsgb3ZlciB8IHVuZGVyIF0gXSB8IGludGVyLWNoYXJhY3RlcmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYWx0ZXJuYXRlYAogICAqLwogICItd2Via2l0LXJ1YnktcG9zaXRpb24iPzogUHJvcGVydHkuUnVieVBvc2l0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBzY3JvbGwtc25hcC10eXBlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyBzdHJpY3RseSBzbmFwIHBvaW50cyBhcmUgZW5mb3JjZWQgb24gdGhlIHNjcm9sbCBjb250YWluZXIgaW4gY2FzZSB0aGVyZSBpcyBvbmUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IFsgeCB8IHkgfCBibG9jayB8IGlubGluZSB8IGJvdGggXSBbIG1hbmRhdG9yeSB8IHByb3hpbWl0eSBdP2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICAiLXdlYmtpdC1zY3JvbGwtc25hcC10eXBlIj86IFByb3BlcnR5LlNjcm9sbFNuYXBUeXBlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBzaGFwZS1tYXJnaW5gKiogQ1NTIHByb3BlcnR5IHNldHMgYSBtYXJnaW4gZm9yIGEgQ1NTIHNoYXBlIGNyZWF0ZWQgdXNpbmcgYHNoYXBlLW91dHNpZGVgLgogICAqCiAgICogKipTeW50YXgqKjogYDxsZW5ndGgtcGVyY2VudGFnZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICovCiAgIi13ZWJraXQtc2hhcGUtbWFyZ2luIj86IFByb3BlcnR5LlNoYXBlTWFyZ2luPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqICoqYC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcmAqKiBpcyBhIG5vbi1zdGFuZGFyZCBDU1MgcHJvcGVydHkgdGhhdCBzZXRzIHRoZSBjb2xvciBvZiB0aGUgaGlnaGxpZ2h0IHRoYXQgYXBwZWFycyBvdmVyIGEgbGluayB3aGlsZSBpdCdzIGJlaW5nIHRhcHBlZC4gVGhlIGhpZ2hsaWdodGluZyBpbmRpY2F0ZXMgdG8gdGhlIHVzZXLCoHRoYXQgdGhlaXIgdGFwIGlzIGJlaW5nIHN1Y2Nlc3NmdWxseSByZWNvZ25pemVkLCBhbmQgaW5kaWNhdGVzIHdoaWNoIGVsZW1lbnQgdGhleSdyZSB0YXBwaW5nIG9uLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGJsYWNrYAogICAqLwogICItd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3IiPzogUHJvcGVydHkuV2Via2l0VGFwSGlnaGxpZ2h0Q29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtY29tYmluZS11cHJpZ2h0YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBjb21iaW5hdGlvbiBvZiBjaGFyYWN0ZXJzIGludG8gdGhlIHNwYWNlIG9mIGEgc2luZ2xlIGNoYXJhY3Rlci4gSWYgdGhlIGNvbWJpbmVkIHRleHQgaXMgd2lkZXIgdGhhbiAxZW0sIHRoZSB1c2VyIGFnZW50IG11c3QgZml0IHRoZSBjb250ZW50cyB3aXRoaW4gMWVtLiBUaGUgcmVzdWx0aW5nIGNvbXBvc2l0aW9uIGlzIHRyZWF0ZWQgYXMgYSBzaW5nbGUgdXByaWdodCBnbHlwaCBmb3IgbGF5b3V0IGFuZCBkZWNvcmF0aW9uLiBUaGlzIHByb3BlcnR5IG9ubHkgaGFzIGFuIGVmZmVjdCBpbiB2ZXJ0aWNhbCB3cml0aW5nIG1vZGVzLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBhbGwgfCBbIGRpZ2l0cyA8aW50ZWdlcj4/IF1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICovCiAgIi13ZWJraXQtdGV4dC1jb21iaW5lIj86IFByb3BlcnR5LlRleHRDb21iaW5lVXByaWdodCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1kZWNvcmF0aW9uLWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBjb2xvciBvZiBkZWNvcmF0aW9ucyBhZGRlZCB0byB0ZXh0IGJ5IGB0ZXh0LWRlY29yYXRpb24tbGluZWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGNvbG9yPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgY3VycmVudGNvbG9yYAogICAqLwogICItd2Via2l0LXRleHQtZGVjb3JhdGlvbi1jb2xvciI/OiBQcm9wZXJ0eS5UZXh0RGVjb3JhdGlvbkNvbG9yIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LWRlY29yYXRpb24tbGluZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUga2luZCBvZiBkZWNvcmF0aW9uIHRoYXQgaXMgdXNlZCBvbiB0ZXh0IGluIGFuIGVsZW1lbnQsIHN1Y2ggYXMgYW4gdW5kZXJsaW5lIG9yIG92ZXJsaW5lLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBbIHVuZGVybGluZSB8fCBvdmVybGluZSB8fCBsaW5lLXRocm91Z2ggfHwgYmxpbmsgXSB8IHNwZWxsaW5nLWVycm9yIHwgZ3JhbW1hci1lcnJvcmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICAiLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tbGluZSI/OiBQcm9wZXJ0eS5UZXh0RGVjb3JhdGlvbkxpbmUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtZGVjb3JhdGlvbi1za2lwYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoYXQgcGFydHMgb2YgYW4gZWxlbWVudOKAmXMgY29udGVudCBhbnkgdGV4dCBkZWNvcmF0aW9uIGFmZmVjdGluZyB0aGUgZWxlbWVudCBtdXN0IHNraXAgb3Zlci4gSXQgY29udHJvbHMgYWxsIHRleHQgZGVjb3JhdGlvbiBsaW5lcyBkcmF3biBieSB0aGUgZWxlbWVudCBhbmQgYWxzbyBhbnkgdGV4dCBkZWNvcmF0aW9uIGxpbmVzIGRyYXduIGJ5IGl0cyBhbmNlc3RvcnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IFsgb2JqZWN0cyB8fCBbIHNwYWNlcyB8IFsgbGVhZGluZy1zcGFjZXMgfHwgdHJhaWxpbmctc3BhY2VzIF0gXSB8fCBlZGdlcyB8fCBib3gtZGVjb3JhdGlvbiBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBvYmplY3RzYAogICAqLwogICItd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwIj86IFByb3BlcnR5LlRleHREZWNvcmF0aW9uU2tpcCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1kZWNvcmF0aW9uLXN0eWxlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBzdHlsZSBvZiB0aGUgbGluZXMgc3BlY2lmaWVkIGJ5IGB0ZXh0LWRlY29yYXRpb24tbGluZWAuIFRoZSBzdHlsZSBhcHBsaWVzIHRvIGFsbCBsaW5lcyB0aGF0IGFyZSBzZXQgd2l0aCBgdGV4dC1kZWNvcmF0aW9uLWxpbmVgLgogICAqCiAgICogKipTeW50YXgqKjogYHNvbGlkIHwgZG91YmxlIHwgZG90dGVkIHwgZGFzaGVkIHwgd2F2eWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc29saWRgCiAgICovCiAgIi13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXN0eWxlIj86IFByb3BlcnR5LlRleHREZWNvcmF0aW9uU3R5bGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtZW1waGFzaXMtY29sb3JgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGNvbG9yIG9mIGVtcGhhc2lzIG1hcmtzLiBUaGlzIHZhbHVlIGNhbiBhbHNvIGJlIHNldCB1c2luZyB0aGUgYHRleHQtZW1waGFzaXNgIHNob3J0aGFuZC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjdXJyZW50Y29sb3JgCiAgICovCiAgIi13ZWJraXQtdGV4dC1lbXBoYXNpcy1jb2xvciI/OiBQcm9wZXJ0eS5UZXh0RW1waGFzaXNDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGV4dC1lbXBoYXNpcy1wb3NpdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGVyZSBlbXBoYXNpcyBtYXJrcyBhcmUgZHJhd24uIExpa2UgcnVieSB0ZXh0LCBpZiB0aGVyZSBpc24ndCBlbm91Z2ggcm9vbSBmb3IgZW1waGFzaXMgbWFya3MsIHRoZSBsaW5lIGhlaWdodCBpcyBpbmNyZWFzZWQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyBvdmVyIHwgdW5kZXIgXSAmJiBbIHJpZ2h0IHwgbGVmdCBdYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBvdmVyIHJpZ2h0YAogICAqLwogICItd2Via2l0LXRleHQtZW1waGFzaXMtcG9zaXRpb24iPzogUHJvcGVydHkuVGV4dEVtcGhhc2lzUG9zaXRpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtZW1waGFzaXMtc3R5bGVgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGFwcGVhcmFuY2Ugb2YgZW1waGFzaXMgbWFya3MuIEl0IGNhbiBhbHNvIGJlIHNldCwgYW5kIHJlc2V0LCB1c2luZyB0aGUgYHRleHQtZW1waGFzaXNgIHNob3J0aGFuZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgWyBbIGZpbGxlZCB8IG9wZW4gXSB8fCBbIGRvdCB8IGNpcmNsZSB8IGRvdWJsZS1jaXJjbGUgfCB0cmlhbmdsZSB8IHNlc2FtZSBdIF0gfCA8c3RyaW5nPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKi8KICAiLXdlYmtpdC10ZXh0LWVtcGhhc2lzLXN0eWxlIj86IFByb3BlcnR5LlRleHRFbXBoYXNpc1N0eWxlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtd2Via2l0LXRleHQtZmlsbC1jb2xvcmAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHRoZSBmaWxsIGNvbG9yIG9mIGNoYXJhY3RlcnMgb2YgdGV4dC4gSWYgdGhpcyBwcm9wZXJ0eSBpcyBub3Qgc2V0LCB0aGUgdmFsdWUgb2YgdGhlIGBjb2xvcmAgcHJvcGVydHkgaXMgdXNlZC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjdXJyZW50Y29sb3JgCiAgICovCiAgIi13ZWJraXQtdGV4dC1maWxsLWNvbG9yIj86IFByb3BlcnR5LldlYmtpdFRleHRGaWxsQ29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtb3JpZW50YXRpb25gKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG9yaWVudGF0aW9uIG9mIHRoZSB0ZXh0IGNoYXJhY3RlcnMgaW4gYSBsaW5lLiBJdCBvbmx5IGFmZmVjdHMgdGV4dCBpbiB2ZXJ0aWNhbCBtb2RlICh3aGVuIGB3cml0aW5nLW1vZGVgIGlzIG5vdCBgaG9yaXpvbnRhbC10YmApLiBJdCBpcyB1c2VmdWwgZm9yIGNvbnRyb2xsaW5nIHRoZSBkaXNwbGF5IG9mIGxhbmd1YWdlcyB0aGF0IHVzZSB2ZXJ0aWNhbCBzY3JpcHQsIGFuZCBhbHNvIGZvciBtYWtpbmcgdmVydGljYWwgdGFibGUgaGVhZGVycy4KICAgKgogICAqICoqU3ludGF4Kio6IGBtaXhlZCB8IHVwcmlnaHQgfCBzaWRld2F5c2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbWl4ZWRgCiAgICovCiAgIi13ZWJraXQtdGV4dC1vcmllbnRhdGlvbiI/OiBQcm9wZXJ0eS5UZXh0T3JpZW50YXRpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtc2l6ZS1hZGp1c3RgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIHRoZSB0ZXh0IGluZmxhdGlvbiBhbGdvcml0aG0gdXNlZCBvbiBzb21lIHNtYXJ0cGhvbmVzIGFuZCB0YWJsZXRzLiBPdGhlciBicm93c2VycyB3aWxsIGlnbm9yZSB0aGlzIHByb3BlcnR5LgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCBhdXRvIHwgPHBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYCBmb3Igc21hcnRwaG9uZSBicm93c2VycyBzdXBwb3J0aW5nIGluZmxhdGlvbiwgYG5vbmVgIGluIG90aGVyIGNhc2VzIChhbmQgdGhlbiBub3QgbW9kaWZpYWJsZSkuCiAgICovCiAgIi13ZWJraXQtdGV4dC1zaXplLWFkanVzdCI/OiBQcm9wZXJ0eS5UZXh0U2l6ZUFkanVzdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLXdlYmtpdC10ZXh0LXN0cm9rZS1jb2xvcmAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHRoZSBzdHJva2UgY29sb3Igb2YgY2hhcmFjdGVycyBvZiB0ZXh0LiBJZiB0aGlzIHByb3BlcnR5IGlzIG5vdCBzZXQsIHRoZSB2YWx1ZSBvZiB0aGUgYGNvbG9yYCBwcm9wZXJ0eSBpcyB1c2VkLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGN1cnJlbnRjb2xvcmAKICAgKi8KICAiLXdlYmtpdC10ZXh0LXN0cm9rZS1jb2xvciI/OiBQcm9wZXJ0eS5XZWJraXRUZXh0U3Ryb2tlQ29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC13ZWJraXQtdGV4dC1zdHJva2Utd2lkdGhgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgd2lkdGggb2YgdGhlIHN0cm9rZSBmb3IgdGV4dC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKi8KICAiLXdlYmtpdC10ZXh0LXN0cm9rZS13aWR0aCI/OiBQcm9wZXJ0eS5XZWJraXRUZXh0U3Ryb2tlV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtdW5kZXJsaW5lLXBvc2l0aW9uYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIHBvc2l0aW9uIG9mIHRoZSB1bmRlcmxpbmUgd2hpY2ggaXMgc2V0IHVzaW5nIHRoZSBgdGV4dC1kZWNvcmF0aW9uYCBwcm9wZXJ0eSdzIGB1bmRlcmxpbmVgIHZhbHVlLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBmcm9tLWZvbnQgfCBbIHVuZGVyIHx8IFsgbGVmdCB8IHJpZ2h0IF0gXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKi8KICAiLXdlYmtpdC10ZXh0LXVuZGVybGluZS1wb3NpdGlvbiI/OiBQcm9wZXJ0eS5UZXh0VW5kZXJsaW5lUG9zaXRpb24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlIGAtd2Via2l0LXRvdWNoLWNhbGxvdXRgIENTUyBwcm9wZXJ0eSBjb250cm9scyB0aGUgZGlzcGxheSBvZiB0aGUgZGVmYXVsdCBjYWxsb3V0IHNob3duIHdoZW4geW91IHRvdWNoIGFuZCBob2xkIGEgdG91Y2ggdGFyZ2V0LgogICAqCiAgICogKipTeW50YXgqKjogYGRlZmF1bHQgfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBkZWZhdWx0YAogICAqLwogICItd2Via2l0LXRvdWNoLWNhbGxvdXQiPzogUHJvcGVydHkuV2Via2l0VG91Y2hDYWxsb3V0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2Zvcm1gKiogQ1NTIHByb3BlcnR5IGxldHMgeW91IHJvdGF0ZSwgc2NhbGUsIHNrZXcsIG9yIHRyYW5zbGF0ZSBhbiBlbGVtZW50LiBJdCBtb2RpZmllcyB0aGUgY29vcmRpbmF0ZSBzcGFjZSBvZiB0aGUgQ1NTIHZpc3VhbCBmb3JtYXR0aW5nIG1vZGVsLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8dHJhbnNmb3JtLWxpc3Q+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqLwogICItd2Via2l0LXRyYW5zZm9ybSI/OiBQcm9wZXJ0eS5UcmFuc2Zvcm0gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zZm9ybS1vcmlnaW5gKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG9yaWdpbiBmb3IgYW4gZWxlbWVudCdzIHRyYW5zZm9ybWF0aW9ucy4KICAgKgogICAqICoqU3ludGF4Kio6IGBbIDxsZW5ndGgtcGVyY2VudGFnZT4gfCBsZWZ0IHwgY2VudGVyIHwgcmlnaHQgfCB0b3AgfCBib3R0b20gXSB8IFsgWyA8bGVuZ3RoLXBlcmNlbnRhZ2U+IHwgbGVmdCB8IGNlbnRlciB8IHJpZ2h0IF0gJiYgWyA8bGVuZ3RoLXBlcmNlbnRhZ2U+IHwgdG9wIHwgY2VudGVyIHwgYm90dG9tIF0gXSA8bGVuZ3RoPj9gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDUwJSA1MCUgMGAKICAgKi8KICAiLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luIj86IFByb3BlcnR5LlRyYW5zZm9ybU9yaWdpbjxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNmb3JtLXN0eWxlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgY2hpbGRyZW4gb2YgYW4gZWxlbWVudCBhcmUgcG9zaXRpb25lZCBpbiB0aGUgM0Qgc3BhY2Ugb3IgYXJlIGZsYXR0ZW5lZCBpbiB0aGUgcGxhbmUgb2YgdGhlIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgZmxhdCB8IHByZXNlcnZlLTNkYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBmbGF0YAogICAqLwogICItd2Via2l0LXRyYW5zZm9ybS1zdHlsZSI/OiBQcm9wZXJ0eS5UcmFuc2Zvcm1TdHlsZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNpdGlvbi1kZWxheWAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHRoZSBkdXJhdGlvbiB0byB3YWl0IGJlZm9yZSBzdGFydGluZyBhIHByb3BlcnR5J3MgdHJhbnNpdGlvbiBlZmZlY3Qgd2hlbiBpdHMgdmFsdWUgY2hhbmdlcy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8dGltZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwc2AKICAgKi8KICAiLXdlYmtpdC10cmFuc2l0aW9uLWRlbGF5Ij86IFByb3BlcnR5LlRyYW5zaXRpb25EZWxheTxUVGltZT4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zaXRpb24tZHVyYXRpb25gKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGxlbmd0aCBvZiB0aW1lIGEgdHJhbnNpdGlvbiBhbmltYXRpb24gc2hvdWxkIHRha2UgdG8gY29tcGxldGUuIEJ5IGRlZmF1bHQsIHRoZSB2YWx1ZSBpcyBgMHNgLCBtZWFuaW5nIHRoYXQgbm8gYW5pbWF0aW9uIHdpbGwgb2NjdXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHRpbWU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMHNgCiAgICovCiAgIi13ZWJraXQtdHJhbnNpdGlvbi1kdXJhdGlvbiI/OiBQcm9wZXJ0eS5UcmFuc2l0aW9uRHVyYXRpb248VFRpbWU+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2l0aW9uLXByb3BlcnR5YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBDU1MgcHJvcGVydGllcyB0byB3aGljaCBhIHRyYW5zaXRpb24gZWZmZWN0IHNob3VsZCBiZSBhcHBsaWVkLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8c2luZ2xlLXRyYW5zaXRpb24tcHJvcGVydHk+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBhbGwKICAgKi8KICAiLXdlYmtpdC10cmFuc2l0aW9uLXByb3BlcnR5Ij86IFByb3BlcnR5LlRyYW5zaXRpb25Qcm9wZXJ0eSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb25gKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IGludGVybWVkaWF0ZSB2YWx1ZXMgYXJlIGNhbGN1bGF0ZWQgZm9yIENTUyBwcm9wZXJ0aWVzIGJlaW5nIGFmZmVjdGVkIGJ5IGEgdHJhbnNpdGlvbiBlZmZlY3QuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGVhc2luZy1mdW5jdGlvbj4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBlYXNlYAogICAqLwogICItd2Via2l0LXRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uIj86IFByb3BlcnR5LlRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiAqKlN5bnRheCoqOiBgcmVhZC1vbmx5IHwgcmVhZC13cml0ZSB8IHJlYWQtd3JpdGUtcGxhaW50ZXh0LW9ubHlgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHJlYWQtb25seWAKICAgKi8KICAiLXdlYmtpdC11c2VyLW1vZGlmeSI/OiBQcm9wZXJ0eS5XZWJraXRVc2VyTW9kaWZ5IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBgKip1c2VyLXNlbGVjdCoqYCBDU1MgcHJvcGVydHkgY29udHJvbHMgd2hldGhlciB0aGUgdXNlciBjYW4gc2VsZWN0IHRleHQuIFRoaXMgZG9lc24ndCBoYXZlIGFueSBlZmZlY3Qgb24gY29udGVudCBsb2FkZWQgYXMgY2hyb21lLCBleGNlcHQgaW4gdGV4dGJveGVzLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCB0ZXh0IHwgbm9uZSB8IGNvbnRhaW4gfCBhbGxgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICovCiAgIi13ZWJraXQtdXNlci1zZWxlY3QiPzogUHJvcGVydHkuVXNlclNlbGVjdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgd3JpdGluZy1tb2RlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgbGluZXMgb2YgdGV4dCBhcmUgbGFpZCBvdXQgaG9yaXpvbnRhbGx5IG9yIHZlcnRpY2FsbHksIGFzIHdlbGwgYXMgdGhlIGRpcmVjdGlvbiBpbiB3aGljaCBibG9ja3MgcHJvZ3Jlc3MuIFdoZW4gc2V0IGZvciBhbiBlbnRpcmUgZG9jdW1lbnQsIGl0IHNob3VsZCBiZSBzZXQgb24gdGhlIHJvb3QgZWxlbWVudCAoYGh0bWxgIGVsZW1lbnQgZm9yIEhUTUwgZG9jdW1lbnRzKS4KICAgKgogICAqICoqU3ludGF4Kio6IGBob3Jpem9udGFsLXRiIHwgdmVydGljYWwtcmwgfCB2ZXJ0aWNhbC1sciB8IHNpZGV3YXlzLXJsIHwgc2lkZXdheXMtbHJgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGhvcml6b250YWwtdGJgCiAgICovCiAgIi13ZWJraXQtd3JpdGluZy1tb2RlIj86IFByb3BlcnR5LldyaXRpbmdNb2RlIHwgdW5kZWZpbmVkOwp9CgpleHBvcnQgaW50ZXJmYWNlIFZlbmRvclNob3J0aGFuZFByb3BlcnRpZXNIeXBoZW48VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwLCBUVGltZSA9IHN0cmluZyAmIHt9PiB7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbmAqKiBzaG9ydGhhbmQgQ1NTIHByb3BlcnR5IGFwcGxpZXMgYW4gYW5pbWF0aW9uIGJldHdlZW4gc3R5bGVzLiBJdCBpcyBhIHNob3J0aGFuZCBmb3IgYGFuaW1hdGlvbi1uYW1lYCwgYGFuaW1hdGlvbi1kdXJhdGlvbmAsIGBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uYCwgYGFuaW1hdGlvbi1kZWxheWAsIGBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50YCwgYGFuaW1hdGlvbi1kaXJlY3Rpb25gLCBgYW5pbWF0aW9uLWZpbGwtbW9kZWAsIGFuZCBgYW5pbWF0aW9uLXBsYXktc3RhdGVgLgogICAqCiAgICogKipTeW50YXgqKjogYDxzaW5nbGUtYW5pbWF0aW9uPiNgCiAgICovCiAgIi1tb3otYW5pbWF0aW9uIj86IFByb3BlcnR5LkFuaW1hdGlvbjxUVGltZT4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbWFnZWAqKiBDU1MgcHJvcGVydHkgZHJhd3MgYW4gaW1hZ2UgYXJvdW5kIGEgZ2l2ZW4gZWxlbWVudC4gSXQgcmVwbGFjZXMgdGhlIGVsZW1lbnQncyByZWd1bGFyIGJvcmRlci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci1pbWFnZS1zb3VyY2UnPiB8fCA8J2JvcmRlci1pbWFnZS1zbGljZSc+IFsgLyA8J2JvcmRlci1pbWFnZS13aWR0aCc+IHwgLyA8J2JvcmRlci1pbWFnZS13aWR0aCc+PyAvIDwnYm9yZGVyLWltYWdlLW91dHNldCc+IF0/IHx8IDwnYm9yZGVyLWltYWdlLXJlcGVhdCc+YAogICAqLwogICItbW96LWJvcmRlci1pbWFnZSI/OiBQcm9wZXJ0eS5Cb3JkZXJJbWFnZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uLXJ1bGVgKirCoHNob3J0aGFuZCBDU1MgcHJvcGVydHkgc2V0cyB0aGUgd2lkdGgsIHN0eWxlLCBhbmQgY29sb3Igb2YgdGhlIGxpbmUgZHJhd24gYmV0d2VlbiBjb2x1bW5zIGluIGEgbXVsdGktY29sdW1uIGxheW91dC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2NvbHVtbi1ydWxlLXdpZHRoJz4gfHwgPCdjb2x1bW4tcnVsZS1zdHlsZSc+IHx8IDwnY29sdW1uLXJ1bGUtY29sb3InPmAKICAgKi8KICAiLW1vei1jb2x1bW4tcnVsZSI/OiBQcm9wZXJ0eS5Db2x1bW5SdWxlPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2x1bW5zYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgc2V0cyB0aGUgbnVtYmVyIG9mIGNvbHVtbnMgdG8gdXNlIHdoZW4gZHJhd2luZyBhbiBlbGVtZW50J3MgY29udGVudHMsIGFzIHdlbGwgYXMgdGhvc2UgY29sdW1ucycgd2lkdGhzLgogICAqCiAgICogKipTeW50YXgqKjogYDwnY29sdW1uLXdpZHRoJz4gfHwgPCdjb2x1bW4tY291bnQnPmAKICAgKi8KICAiLW1vei1jb2x1bW5zIj86IFByb3BlcnR5LkNvbHVtbnM8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zaXRpb25gKiogQ1NTIHByb3BlcnR5IGlzIGEgc2hvcnRoYW5kIHByb3BlcnR5IGZvciBgdHJhbnNpdGlvbi1wcm9wZXJ0eWAsIGB0cmFuc2l0aW9uLWR1cmF0aW9uYCwgYHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uYCwgYW5kIGB0cmFuc2l0aW9uLWRlbGF5YC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2luZ2xlLXRyYW5zaXRpb24+I2AKICAgKi8KICAiLW1vei10cmFuc2l0aW9uIj86IFByb3BlcnR5LlRyYW5zaXRpb248VFRpbWU+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbXMtY29udGVudC16b29tLWxpbWl0YCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc3BlY2lmaWVzIHZhbHVlcyBmb3IgdGhlIGAtbXMtY29udGVudC16b29tLWxpbWl0LW1pbmAgYW5kIGAtbXMtY29udGVudC16b29tLWxpbWl0LW1heGAgcHJvcGVydGllcy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Jy1tcy1jb250ZW50LXpvb20tbGltaXQtbWluJz4gPCctbXMtY29udGVudC16b29tLWxpbWl0LW1heCc+YAogICAqLwogICItbXMtY29udGVudC16b29tLWxpbWl0Ij86IFByb3BlcnR5Lk1zQ29udGVudFpvb21MaW1pdCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLWNvbnRlbnQtem9vbS1zbmFwYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc3BlY2lmaWVzIHZhbHVlcyBmb3IgdGhlIGAtbXMtY29udGVudC16b29tLXNuYXAtdHlwZWAgYW5kIGAtbXMtY29udGVudC16b29tLXNuYXAtcG9pbnRzYCBwcm9wZXJ0aWVzLgogICAqCiAgICogKipTeW50YXgqKjogYDwnLW1zLWNvbnRlbnQtem9vbS1zbmFwLXR5cGUnPiB8fCA8Jy1tcy1jb250ZW50LXpvb20tc25hcC1wb2ludHMnPmAKICAgKi8KICAiLW1zLWNvbnRlbnQtem9vbS1zbmFwIj86IFByb3BlcnR5Lk1zQ29udGVudFpvb21TbmFwIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmbGV4YCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgc2V0cyBob3cgYSBmbGV4IF9pdGVtXyB3aWxsIGdyb3cgb3Igc2hyaW5rIHRvIGZpdCB0aGUgc3BhY2UgYXZhaWxhYmxlIGluIGl0cyBmbGV4IGNvbnRhaW5lci4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgWyA8J2ZsZXgtZ3Jvdyc+IDwnZmxleC1zaHJpbmsnPj8gfHwgPCdmbGV4LWJhc2lzJz4gXWAKICAgKi8KICAiLW1zLWZsZXgiPzogUHJvcGVydHkuRmxleDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipcLW1zLXNjcm9sbC1saW1pdCoqIENTUyBwcm9wZXJ0eSBpcyBhIE1pY3Jvc29mdCBleHRlbnNpb24gdGhhdCBzcGVjaWZpZXMgdmFsdWVzIGZvciB0aGUgYC1tcy1zY3JvbGwtbGltaXQteC1taW5gLCBgLW1zLXNjcm9sbC1saW1pdC15LW1pbmAsIGAtbXMtc2Nyb2xsLWxpbWl0LXgtbWF4YCwgYW5kIGAtbXMtc2Nyb2xsLWxpbWl0LXktbWF4YCBwcm9wZXJ0aWVzLgogICAqCiAgICogKipTeW50YXgqKjogYDwnLW1zLXNjcm9sbC1saW1pdC14LW1pbic+IDwnLW1zLXNjcm9sbC1saW1pdC15LW1pbic+IDwnLW1zLXNjcm9sbC1saW1pdC14LW1heCc+IDwnLW1zLXNjcm9sbC1saW1pdC15LW1heCc+YAogICAqLwogICItbXMtc2Nyb2xsLWxpbWl0Ij86IFByb3BlcnR5Lk1zU2Nyb2xsTGltaXQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1zY3JvbGwtc25hcC14YCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc3BlY2lmaWVzIHZhbHVlcyBmb3IgdGhlIGAtbXMtc2Nyb2xsLXNuYXAtdHlwZWAgYW5kIGAtbXMtc2Nyb2xsLXNuYXAtcG9pbnRzLXhgIHByb3BlcnRpZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCctbXMtc2Nyb2xsLXNuYXAtdHlwZSc+IDwnLW1zLXNjcm9sbC1zbmFwLXBvaW50cy14Jz5gCiAgICovCiAgIi1tcy1zY3JvbGwtc25hcC14Ij86IFByb3BlcnR5Lk1zU2Nyb2xsU25hcFggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1zY3JvbGwtc25hcC14YCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc3BlY2lmaWVzIHZhbHVlcyBmb3IgdGhlIGAtbXMtc2Nyb2xsLXNuYXAtdHlwZWAgYW5kIGAtbXMtc2Nyb2xsLXNuYXAtcG9pbnRzLXlgIHByb3BlcnRpZXMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCctbXMtc2Nyb2xsLXNuYXAtdHlwZSc+IDwnLW1zLXNjcm9sbC1zbmFwLXBvaW50cy15Jz5gCiAgICovCiAgIi1tcy1zY3JvbGwtc25hcC15Ij86IFByb3BlcnR5Lk1zU2Nyb2xsU25hcFkgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zaXRpb25gKiogQ1NTIHByb3BlcnR5IGlzIGEgc2hvcnRoYW5kIHByb3BlcnR5IGZvciBgdHJhbnNpdGlvbi1wcm9wZXJ0eWAsIGB0cmFuc2l0aW9uLWR1cmF0aW9uYCwgYHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uYCwgYW5kIGB0cmFuc2l0aW9uLWRlbGF5YC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2luZ2xlLXRyYW5zaXRpb24+I2AKICAgKi8KICAiLW1zLXRyYW5zaXRpb24iPzogUHJvcGVydHkuVHJhbnNpdGlvbjxUVGltZT4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbmAqKiBzaG9ydGhhbmQgQ1NTIHByb3BlcnR5IGFwcGxpZXMgYW4gYW5pbWF0aW9uIGJldHdlZW4gc3R5bGVzLiBJdCBpcyBhIHNob3J0aGFuZCBmb3IgYGFuaW1hdGlvbi1uYW1lYCwgYGFuaW1hdGlvbi1kdXJhdGlvbmAsIGBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uYCwgYGFuaW1hdGlvbi1kZWxheWAsIGBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50YCwgYGFuaW1hdGlvbi1kaXJlY3Rpb25gLCBgYW5pbWF0aW9uLWZpbGwtbW9kZWAsIGFuZCBgYW5pbWF0aW9uLXBsYXktc3RhdGVgLgogICAqCiAgICogKipTeW50YXgqKjogYDxzaW5nbGUtYW5pbWF0aW9uPiNgCiAgICovCiAgIi13ZWJraXQtYW5pbWF0aW9uIj86IFByb3BlcnR5LkFuaW1hdGlvbjxUVGltZT4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC13ZWJraXQtYm9yZGVyLWJlZm9yZWAqKiBDU1MgcHJvcGVydHkgaXMgYSBzaG9ydGhhbmQgcHJvcGVydHkgZm9yIHNldHRpbmcgdGhlIGluZGl2aWR1YWwgbG9naWNhbCBibG9jayBzdGFydCBib3JkZXIgcHJvcGVydHkgdmFsdWVzIGluIGEgc2luZ2xlIHBsYWNlIGluIHRoZSBzdHlsZSBzaGVldC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci13aWR0aCc+IHx8IDwnYm9yZGVyLXN0eWxlJz4gfHwgPGNvbG9yPmAKICAgKi8KICAiLXdlYmtpdC1ib3JkZXItYmVmb3JlIj86IFByb3BlcnR5LldlYmtpdEJvcmRlckJlZm9yZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm9yZGVyLWltYWdlYCoqIENTUyBwcm9wZXJ0eSBkcmF3cyBhbiBpbWFnZSBhcm91bmQgYSBnaXZlbiBlbGVtZW50LiBJdCByZXBsYWNlcyB0aGUgZWxlbWVudCdzIHJlZ3VsYXIgYm9yZGVyLgogICAqCiAgICogKipTeW50YXgqKjogYDwnYm9yZGVyLWltYWdlLXNvdXJjZSc+IHx8IDwnYm9yZGVyLWltYWdlLXNsaWNlJz4gWyAvIDwnYm9yZGVyLWltYWdlLXdpZHRoJz4gfCAvIDwnYm9yZGVyLWltYWdlLXdpZHRoJz4/IC8gPCdib3JkZXItaW1hZ2Utb3V0c2V0Jz4gXT8gfHwgPCdib3JkZXItaW1hZ2UtcmVwZWF0Jz5gCiAgICovCiAgIi13ZWJraXQtYm9yZGVyLWltYWdlIj86IFByb3BlcnR5LkJvcmRlckltYWdlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItcmFkaXVzYCoqIENTUyBwcm9wZXJ0eSByb3VuZHMgdGhlIGNvcm5lcnMgb2YgYW4gZWxlbWVudCdzIG91dGVyIGJvcmRlciBlZGdlLiBZb3UgY2FuIHNldCBhIHNpbmdsZSByYWRpdXMgdG8gbWFrZSBjaXJjdWxhciBjb3JuZXJzLCBvciB0d28gcmFkaWkgdG8gbWFrZSBlbGxpcHRpY2FsIGNvcm5lcnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aC1wZXJjZW50YWdlPnsxLDR9IFsgLyA8bGVuZ3RoLXBlcmNlbnRhZ2U+ezEsNH0gXT9gCiAgICovCiAgIi13ZWJraXQtYm9yZGVyLXJhZGl1cyI/OiBQcm9wZXJ0eS5Cb3JkZXJSYWRpdXM8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGNvbHVtbi1ydWxlYCoqwqBzaG9ydGhhbmQgQ1NTIHByb3BlcnR5IHNldHMgdGhlIHdpZHRoLCBzdHlsZSwgYW5kIGNvbG9yIG9mIHRoZSBsaW5lIGRyYXduIGJldHdlZW4gY29sdW1ucyBpbiBhIG11bHRpLWNvbHVtbiBsYXlvdXQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdjb2x1bW4tcnVsZS13aWR0aCc+IHx8IDwnY29sdW1uLXJ1bGUtc3R5bGUnPiB8fCA8J2NvbHVtbi1ydWxlLWNvbG9yJz5gCiAgICovCiAgIi13ZWJraXQtY29sdW1uLXJ1bGUiPzogUHJvcGVydHkuQ29sdW1uUnVsZTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY29sdW1uc2AqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IHNldHMgdGhlIG51bWJlciBvZiBjb2x1bW5zIHRvIHVzZSB3aGVuIGRyYXdpbmcgYW4gZWxlbWVudCdzIGNvbnRlbnRzLCBhcyB3ZWxsIGFzIHRob3NlIGNvbHVtbnMnIHdpZHRocy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2NvbHVtbi13aWR0aCc+IHx8IDwnY29sdW1uLWNvdW50Jz5gCiAgICovCiAgIi13ZWJraXQtY29sdW1ucyI/OiBQcm9wZXJ0eS5Db2x1bW5zPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBmbGV4YCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgc2V0cyBob3cgYSBmbGV4IF9pdGVtXyB3aWxsIGdyb3cgb3Igc2hyaW5rIHRvIGZpdCB0aGUgc3BhY2UgYXZhaWxhYmxlIGluIGl0cyBmbGV4IGNvbnRhaW5lci4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgWyA8J2ZsZXgtZ3Jvdyc+IDwnZmxleC1zaHJpbmsnPj8gfHwgPCdmbGV4LWJhc2lzJz4gXWAKICAgKi8KICAiLXdlYmtpdC1mbGV4Ij86IFByb3BlcnR5LkZsZXg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGZsZXgtZmxvd2AqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgZGlyZWN0aW9uIG9mIGEgZmxleCBjb250YWluZXIsIGFzIHdlbGwgYXMgaXRzIHdyYXBwaW5nIGJlaGF2aW9yLgogICAqCiAgICogKipTeW50YXgqKjogYDwnZmxleC1kaXJlY3Rpb24nPiB8fCA8J2ZsZXgtd3JhcCc+YAogICAqLwogICItd2Via2l0LWZsZXgtZmxvdyI/OiBQcm9wZXJ0eS5GbGV4RmxvdyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFza2AqKiBDU1Mgc2hvcnRoYW5kIHByb3BlcnR5IGhpZGVzIGFuIGVsZW1lbnQgKHBhcnRpYWxseSBvciBmdWxseSkgYnkgbWFza2luZyBvciBjbGlwcGluZyB0aGUgaW1hZ2UgYXQgc3BlY2lmaWMgcG9pbnRzLgogICAqCiAgICogKipTeW50YXgqKjogYFsgPG1hc2stcmVmZXJlbmNlPiB8fCA8cG9zaXRpb24+IFsgLyA8Ymctc2l6ZT4gXT8gfHwgPHJlcGVhdC1zdHlsZT4gfHwgWyA8Ym94PiB8IGJvcmRlciB8IHBhZGRpbmcgfCBjb250ZW50IHwgdGV4dCBdIHx8IFsgPGJveD4gfCBib3JkZXIgfCBwYWRkaW5nIHwgY29udGVudCBdIF0jYAogICAqLwogICItd2Via2l0LW1hc2siPzogUHJvcGVydHkuV2Via2l0TWFzazxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbWFzay1ib3JkZXJgKiogQ1NTIHNob3J0aGFuZCBwcm9wZXJ0eSBsZXRzIHlvdSBjcmVhdGUgYSBtYXNrIGFsb25nIHRoZSBlZGdlIG9mIGFuIGVsZW1lbnQncyBib3JkZXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdtYXNrLWJvcmRlci1zb3VyY2UnPiB8fCA8J21hc2stYm9yZGVyLXNsaWNlJz4gWyAvIDwnbWFzay1ib3JkZXItd2lkdGgnPj8gWyAvIDwnbWFzay1ib3JkZXItb3V0c2V0Jz4gXT8gXT8gfHwgPCdtYXNrLWJvcmRlci1yZXBlYXQnPiB8fCA8J21hc2stYm9yZGVyLW1vZGUnPmAKICAgKi8KICAiLXdlYmtpdC1tYXNrLWJveC1pbWFnZSI/OiBQcm9wZXJ0eS5NYXNrQm9yZGVyIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0ZXh0LWVtcGhhc2lzYCoqIENTUyBwcm9wZXJ0eSBhcHBsaWVzIGVtcGhhc2lzIG1hcmtzIHRvIHRleHQgKGV4Y2VwdCBzcGFjZXMgYW5kIGNvbnRyb2wgY2hhcmFjdGVycykuIEl0IGlzIGEgc2hvcnRoYW5kIGZvciBgdGV4dC1lbXBoYXNpcy1zdHlsZWAgYW5kIGB0ZXh0LWVtcGhhc2lzLWNvbG9yYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3RleHQtZW1waGFzaXMtc3R5bGUnPiB8fCA8J3RleHQtZW1waGFzaXMtY29sb3InPmAKICAgKi8KICAiLXdlYmtpdC10ZXh0LWVtcGhhc2lzIj86IFByb3BlcnR5LlRleHRFbXBoYXNpcyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLXdlYmtpdC10ZXh0LXN0cm9rZWAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHRoZSB3aWR0aCBhbmQgY29sb3Igb2Ygc3Ryb2tlcyBmb3IgdGV4dCBjaGFyYWN0ZXJzLiBUaGlzIGlzIGEgc2hvcnRoYW5kIHByb3BlcnR5IGZvciB0aGUgbG9uZ2hhbmQgcHJvcGVydGllcyBgLXdlYmtpdC10ZXh0LXN0cm9rZS13aWR0aGAgYW5kIGAtd2Via2l0LXRleHQtc3Ryb2tlLWNvbG9yYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoPiB8fCA8Y29sb3I+YAogICAqLwogICItd2Via2l0LXRleHQtc3Ryb2tlIj86IFByb3BlcnR5LldlYmtpdFRleHRTdHJva2U8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zaXRpb25gKiogQ1NTIHByb3BlcnR5IGlzIGEgc2hvcnRoYW5kIHByb3BlcnR5IGZvciBgdHJhbnNpdGlvbi1wcm9wZXJ0eWAsIGB0cmFuc2l0aW9uLWR1cmF0aW9uYCwgYHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uYCwgYW5kIGB0cmFuc2l0aW9uLWRlbGF5YC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2luZ2xlLXRyYW5zaXRpb24+I2AKICAgKi8KICAiLXdlYmtpdC10cmFuc2l0aW9uIj86IFByb3BlcnR5LlRyYW5zaXRpb248VFRpbWU+IHwgdW5kZWZpbmVkOwp9CgpleHBvcnQgaW50ZXJmYWNlIFZlbmRvclByb3BlcnRpZXNIeXBoZW48VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwLCBUVGltZSA9IHN0cmluZyAmIHt9PgogIGV4dGVuZHMgVmVuZG9yTG9uZ2hhbmRQcm9wZXJ0aWVzSHlwaGVuPFRMZW5ndGgsIFRUaW1lPiwKICAgIFZlbmRvclNob3J0aGFuZFByb3BlcnRpZXNIeXBoZW48VExlbmd0aCwgVFRpbWU+IHt9CgpleHBvcnQgaW50ZXJmYWNlIE9ic29sZXRlUHJvcGVydGllc0h5cGhlbjxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+IHsKICAvKioKICAgKiBJbiBjb21iaW5hdGlvbiB3aXRoIGBlbGV2YXRpb25gLCB0aGUgKipgYXppbXV0aGAqKiBDU1MgcHJvcGVydHkgZW5hYmxlcyBkaWZmZXJlbnQgYXVkaW8gc291cmNlcyB0byBiZSBwb3NpdGlvbmVkIHNwYXRpYWxseSBmb3IgYXVyYWwgcHJlc2VudGF0aW9uLiBUaGlzIGlzIGltcG9ydGFudCBpbiB0aGF0IGl0IHByb3ZpZGVzIGEgbmF0dXJhbCB3YXkgdG8gdGVsbCBzZXZlcmFsIHZvaWNlcyBhcGFydCwgYXMgZWFjaCBjYW4gYmUgcG9zaXRpb25lZCB0byBvcmlnaW5hdGUgYXQgYSBkaWZmZXJlbnQgbG9jYXRpb24gb24gdGhlIHNvdW5kIHN0YWdlLiBTdGVyZW8gb3V0cHV0IHByb2R1Y2UgYSBsYXRlcmFsIHNvdW5kIHN0YWdlLCB3aGlsZSBiaW5hdXJhbCBoZWFkcGhvbmVzIGFuZCBtdWx0aS1zcGVha2VyIHNldHVwcyBhbGxvdyBmb3IgYSBmdWxseSB0aHJlZS1kaW1lbnNpb25hbCBzdGFnZS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8YW5nbGU+IHwgWyBbIGxlZnQtc2lkZSB8IGZhci1sZWZ0IHwgbGVmdCB8IGNlbnRlci1sZWZ0IHwgY2VudGVyIHwgY2VudGVyLXJpZ2h0IHwgcmlnaHQgfCBmYXItcmlnaHQgfCByaWdodC1zaWRlIF0gfHwgYmVoaW5kIF0gfCBsZWZ0d2FyZHMgfCByaWdodHdhcmRzYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjZW50ZXJgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogIGF6aW11dGg/OiBQcm9wZXJ0eS5BemltdXRoIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3gtYWxpZ25gKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyBob3cgYW4gZWxlbWVudCBhbGlnbnMgaXRzIGNvbnRlbnRzIGFjcm9zcyBpdHMgbGF5b3V0IGluIGEgcGVycGVuZGljdWxhciBkaXJlY3Rpb24uIFRoZSBlZmZlY3Qgb2YgdGhlIHByb3BlcnR5IGlzIG9ubHkgdmlzaWJsZSBpZiB0aGVyZSBpcyBleHRyYSBzcGFjZSBpbiB0aGUgYm94LgogICAqCiAgICogKipTeW50YXgqKjogYHN0YXJ0IHwgY2VudGVyIHwgZW5kIHwgYmFzZWxpbmUgfCBzdHJldGNoYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzdHJldGNoYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiYm94LWFsaWduIj86IFByb3BlcnR5LkJveEFsaWduIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3gtZGlyZWN0aW9uYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgd2hldGhlciBhIGJveCBsYXlzIG91dCBpdHMgY29udGVudHMgbm9ybWFsbHkgKGZyb20gdGhlIHRvcCBvciBsZWZ0IGVkZ2UpLCBvciBpbiByZXZlcnNlIChmcm9tIHRoZSBib3R0b20gb3IgcmlnaHQgZWRnZSkuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9ybWFsIHwgcmV2ZXJzZSB8IGluaGVyaXRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgImJveC1kaXJlY3Rpb24iPzogUHJvcGVydHkuQm94RGlyZWN0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbW96LWJveC1mbGV4YCoqIGFuZCAqKmAtd2Via2l0LWJveC1mbGV4YCoqIENTUyBwcm9wZXJ0aWVzIHNwZWNpZnkgaG93IGEgYC1tb3otYm94YCBvciBgLXdlYmtpdC1ib3hgIGdyb3dzIHRvIGZpbGwgdGhlIGJveCB0aGF0IGNvbnRhaW5zIGl0LCBpbiB0aGUgZGlyZWN0aW9uIG9mIHRoZSBjb250YWluaW5nIGJveCdzIGxheW91dC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bnVtYmVyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgImJveC1mbGV4Ij86IFByb3BlcnR5LkJveEZsZXggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJveC1mbGV4LWdyb3VwYCoqIENTUyBwcm9wZXJ0eSBhc3NpZ25zIHRoZSBmbGV4Ym94J3MgY2hpbGQgZWxlbWVudHMgdG8gYSBmbGV4IGdyb3VwLgogICAqCiAgICogKipTeW50YXgqKjogYDxpbnRlZ2VyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgImJveC1mbGV4LWdyb3VwIj86IFByb3BlcnR5LkJveEZsZXhHcm91cCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LWxpbmVzYCoqIENTUyBwcm9wZXJ0eSBkZXRlcm1pbmVzIHdoZXRoZXIgdGhlIGJveCBtYXkgaGF2ZSBhIHNpbmdsZSBvciBtdWx0aXBsZSBsaW5lcyAocm93cyBmb3IgaG9yaXpvbnRhbGx5IG9yaWVudGVkIGJveGVzLCBjb2x1bW5zIGZvciB2ZXJ0aWNhbGx5IG9yaWVudGVkIGJveGVzKS4KICAgKgogICAqICoqU3ludGF4Kio6IGBzaW5nbGUgfCBtdWx0aXBsZWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc2luZ2xlYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiYm94LWxpbmVzIj86IFByb3BlcnR5LkJveExpbmVzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3gtb3JkaW5hbC1ncm91cGAqKiBDU1MgcHJvcGVydHkgYXNzaWducyB0aGUgZmxleGJveCdzIGNoaWxkIGVsZW1lbnRzIHRvIGFuIG9yZGluYWwgZ3JvdXAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGludGVnZXI+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAxYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiYm94LW9yZGluYWwtZ3JvdXAiPzogUHJvcGVydHkuQm94T3JkaW5hbEdyb3VwIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoaXMgaXMgYSBwcm9wZXJ0eSBvZiB0aGUgb3JpZ2luYWwgQ1NTIEZsZXhpYmxlIEJveCBMYXlvdXQgTW9kdWxlIGRyYWZ0LCBhbmQgaGFzIGJlZW4gcmVwbGFjZWQgYnkgYSBuZXdlciBzdGFuZGFyZC4gU2VlIGZsZXhib3ggZm9yIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IHN0YW5kYXJkLgogICAqCiAgICogKipTeW50YXgqKjogYGhvcml6b250YWwgfCB2ZXJ0aWNhbCB8IGlubGluZS1heGlzIHwgYmxvY2stYXhpcyB8IGluaGVyaXRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGlubGluZS1heGlzYCAoYGhvcml6b250YWxgIGluIFhVTCkKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgImJveC1vcmllbnQiPzogUHJvcGVydHkuQm94T3JpZW50IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbW96LWJveC1wYWNrYCoqIGFuZCAqKmAtd2Via2l0LWJveC1wYWNrYCoqIENTUyBwcm9wZXJ0aWVzIHNwZWNpZnkgaG93IGEgYC1tb3otYm94YCBvciBgLXdlYmtpdC1ib3hgIHBhY2tzIGl0cyBjb250ZW50cyBpbiB0aGUgZGlyZWN0aW9uIG9mIGl0cyBsYXlvdXQuIFRoZSBlZmZlY3Qgb2YgdGhpcyBpcyBvbmx5IHZpc2libGUgaWYgdGhlcmUgaXMgZXh0cmEgc3BhY2UgaW4gdGhlIGJveC4KICAgKgogICAqICoqU3ludGF4Kio6IGBzdGFydCB8IGNlbnRlciB8IGVuZCB8IGp1c3RpZnlgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHN0YXJ0YAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiYm94LXBhY2siPzogUHJvcGVydHkuQm94UGFjayB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgY2xpcGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyBhIHZpc2libGUgcG9ydGlvbiBvZiBhbiBlbGVtZW50LiBUaGUgYGNsaXBgIHByb3BlcnR5IGFwcGxpZXMgb25seSB0byBhYnNvbHV0ZWx5IHBvc2l0aW9uZWQgZWxlbWVudHMg4oCUIHRoYXQgaXMsIGVsZW1lbnRzIHdpdGggYHBvc2l0aW9uOmFic29sdXRlYCBvciBgcG9zaXRpb246Zml4ZWRgLgogICAqCiAgICogKipTeW50YXgqKjogYDxzaGFwZT4gfCBhdXRvYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICBjbGlwPzogUHJvcGVydHkuQ2xpcCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgZm9udC12YXJpYW50LWFsdGVybmF0ZXNgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIHRoZSB1c2FnZSBvZiBhbHRlcm5hdGUgZ2x5cGhzLiBUaGVzZSBhbHRlcm5hdGUgZ2x5cGhzIG1heSBiZSByZWZlcmVuY2VkIGJ5IGFsdGVybmF0aXZlIG5hbWVzIGRlZmluZWQgaW4gYEBmb250LWZlYXR1cmUtdmFsdWVzYC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCBbIHN0eWxpc3RpYyggPGZlYXR1cmUtdmFsdWUtbmFtZT4gKSB8fCBoaXN0b3JpY2FsLWZvcm1zIHx8IHN0eWxlc2V0KCA8ZmVhdHVyZS12YWx1ZS1uYW1lPiMgKSB8fCBjaGFyYWN0ZXItdmFyaWFudCggPGZlYXR1cmUtdmFsdWUtbmFtZT4jICkgfHwgc3dhc2goIDxmZWF0dXJlLXZhbHVlLW5hbWU+ICkgfHwgb3JuYW1lbnRzKCA8ZmVhdHVyZS12YWx1ZS1uYW1lPiApIHx8IGFubm90YXRpb24oIDxmZWF0dXJlLXZhbHVlLW5hbWU+ICkgXWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiZm9udC12YXJpYW50LWFsdGVybmF0ZXMiPzogUHJvcGVydHkuRm9udFZhcmlhbnRBbHRlcm5hdGVzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBjb2x1bW4tZ2FwYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBzaXplIG9mIHRoZSBnYXAgKGd1dHRlcikgYmV0d2VlbiBhbiBlbGVtZW50J3MgY29sdW1ucy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoLXBlcmNlbnRhZ2U+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiZ3JpZC1jb2x1bW4tZ2FwIj86IFByb3BlcnR5LkdyaWRDb2x1bW5HYXA8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGdhcGAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgZ2FwcyAoZ3V0dGVycykgYmV0d2VlbiByb3dzIGFuZCBjb2x1bW5zLiBJdCBpcyBhIHNob3J0aGFuZCBmb3IgYHJvdy1nYXBgIGFuZCBgY29sdW1uLWdhcGAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCdncmlkLXJvdy1nYXAnPiA8J2dyaWQtY29sdW1uLWdhcCc+P2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgImdyaWQtZ2FwIj86IFByb3BlcnR5LkdyaWRHYXA8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHJvdy1nYXBgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHNpemUgb2YgdGhlIGdhcCAoZ3V0dGVyKSBiZXR3ZWVuIGFuIGVsZW1lbnQncyBncmlkIHJvd3MuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGxlbmd0aC1wZXJjZW50YWdlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgImdyaWQtcm93LWdhcCI/OiBQcm9wZXJ0eS5HcmlkUm93R2FwPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBpbWUtbW9kZWAqKiBDU1MgcHJvcGVydHkgY29udHJvbHMgdGhlIHN0YXRlIG9mIHRoZSBpbnB1dCBtZXRob2QgZWRpdG9yIChJTUUpIGZvciB0ZXh0IGZpZWxkcy4gVGhpcyBwcm9wZXJ0eSBpcyBvYnNvbGV0ZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgbm9ybWFsIHwgYWN0aXZlIHwgaW5hY3RpdmUgfCBkaXNhYmxlZGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgImltZS1tb2RlIj86IFByb3BlcnR5LkltZU1vZGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGluc2V0LWlubGluZWAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBzdGFydCBhbmQgZW5kIG9mZnNldHMgb2YgYW4gZWxlbWVudCBpbiB0aGUgaW5saW5lIGRpcmVjdGlvbiwgd2hpY2ggbWFwcyB0byBwaHlzaWNhbCBvZmZzZXRzIGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYHRvcGAgYW5kIGBib3R0b21gLCBvciBgcmlnaHRgIGFuZCBgbGVmdGAgcHJvcGVydGllcyBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBkZWZpbmVkIGZvciBgd3JpdGluZy1tb2RlYCwgYGRpcmVjdGlvbmAsIGFuZCBgdGV4dC1vcmllbnRhdGlvbmAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPCd0b3AnPnsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAib2Zmc2V0LWJsb2NrIj86IFByb3BlcnR5Lkluc2V0QmxvY2s8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGluc2V0LWJsb2NrLWVuZGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBibG9jayBlbmQgb2Zmc2V0IG9mIGFuIGVsZW1lbnQsIHdoaWNoIG1hcHMgdG8gYSBwaHlzaWNhbCBpbnNldCBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGB0b3BgLCBgcmlnaHRgLCBgYm90dG9tYCwgb3IgYGxlZnRgIHByb3BlcnR5IGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIGRlZmluZWQgZm9yIGB3cml0aW5nLW1vZGVgLCBgZGlyZWN0aW9uYCwgYW5kIGB0ZXh0LW9yaWVudGF0aW9uYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J3RvcCc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAib2Zmc2V0LWJsb2NrLWVuZCI/OiBQcm9wZXJ0eS5JbnNldEJsb2NrRW5kPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBpbnNldC1ibG9jay1zdGFydGAqKiBDU1MgcHJvcGVydHkgZGVmaW5lcyB0aGUgbG9naWNhbCBibG9jayBzdGFydCBvZmZzZXQgb2YgYW4gZWxlbWVudCwgd2hpY2ggbWFwcyB0byBhIHBoeXNpY2FsIGluc2V0IGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYHRvcGAsIGByaWdodGAsIGBib3R0b21gLCBvciBgbGVmdGAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwndG9wJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICJvZmZzZXQtYmxvY2stc3RhcnQiPzogUHJvcGVydHkuSW5zZXRCbG9ja1N0YXJ0PFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBpbnNldC1pbmxpbmVgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgc3RhcnQgYW5kIGVuZCBvZmZzZXRzIG9mIGFuIGVsZW1lbnQgaW4gdGhlIGlubGluZSBkaXJlY3Rpb24sIHdoaWNoIG1hcHMgdG8gcGh5c2ljYWwgb2Zmc2V0cyBkZXBlbmRpbmcgb24gdGhlIGVsZW1lbnQncyB3cml0aW5nIG1vZGUsIGRpcmVjdGlvbmFsaXR5LCBhbmQgdGV4dCBvcmllbnRhdGlvbi4gSXQgY29ycmVzcG9uZHMgdG8gdGhlIGB0b3BgIGFuZCBgYm90dG9tYCwgb3IgYHJpZ2h0YCBhbmQgYGxlZnRgIHByb3BlcnRpZXMgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwndG9wJz57MSwyfWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIm9mZnNldC1pbmxpbmUiPzogUHJvcGVydHkuSW5zZXRJbmxpbmU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGluc2V0LWlubGluZS1lbmRgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGxvZ2ljYWwgaW5saW5lIGVuZCBpbnNldCBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgb2Zmc2V0IGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYHRvcGAsIGByaWdodGAsIGBib3R0b21gLCBvciBgbGVmdGAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwndG9wJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICJvZmZzZXQtaW5saW5lLWVuZCI/OiBQcm9wZXJ0eS5JbnNldElubGluZUVuZDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgaW5zZXQtaW5saW5lLXN0YXJ0YCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBsb2dpY2FsIGlubGluZSBzdGFydCBpbnNldCBvZiBhbiBlbGVtZW50LCB3aGljaCBtYXBzIHRvIGEgcGh5c2ljYWwgb2Zmc2V0IGRlcGVuZGluZyBvbiB0aGUgZWxlbWVudCdzIHdyaXRpbmcgbW9kZSwgZGlyZWN0aW9uYWxpdHksIGFuZCB0ZXh0IG9yaWVudGF0aW9uLiBJdCBjb3JyZXNwb25kcyB0byB0aGUgYHRvcGAsIGByaWdodGAsIGBib3R0b21gLCBvciBgbGVmdGAgcHJvcGVydHkgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgZGVmaW5lZCBmb3IgYHdyaXRpbmctbW9kZWAsIGBkaXJlY3Rpb25gLCBhbmQgYHRleHQtb3JpZW50YXRpb25gLgogICAqCiAgICogKipTeW50YXgqKjogYDwndG9wJz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICJvZmZzZXQtaW5saW5lLXN0YXJ0Ij86IFByb3BlcnR5Lkluc2V0SW5saW5lU3RhcnQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHNjcm9sbC1zbmFwLWNvb3JkaW5hdGVgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIHggYW5kIHkgY29vcmRpbmF0ZSBwb3NpdGlvbnMgd2l0aGluIGFuIGVsZW1lbnQgdGhhdCB3aWxsIGFsaWduIHdpdGggaXRzIG5lYXJlc3QgYW5jZXN0b3Igc2Nyb2xsIGNvbnRhaW5lcidzIGBzY3JvbGwtc25hcC1kZXN0aW5hdGlvbmAgZm9yIGVhY2ggcmVzcGVjdGl2ZSBheGlzLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8cG9zaXRpb24+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgInNjcm9sbC1zbmFwLWNvb3JkaW5hdGUiPzogUHJvcGVydHkuU2Nyb2xsU25hcENvb3JkaW5hdGU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHNjcm9sbC1zbmFwLWRlc3RpbmF0aW9uYCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBwb3NpdGlvbiBpbiB4IGFuZCB5IGNvb3JkaW5hdGVzIHdpdGhpbiB0aGUgc2Nyb2xsIGNvbnRhaW5lcidzIHZpc3VhbCB2aWV3cG9ydCB3aGljaCBlbGVtZW50IHNuYXAgcG9pbnRzIGFsaWduIHdpdGguCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHBvc2l0aW9uPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMHB4IDBweGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgInNjcm9sbC1zbmFwLWRlc3RpbmF0aW9uIj86IFByb3BlcnR5LlNjcm9sbFNuYXBEZXN0aW5hdGlvbjxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgc2Nyb2xsLXNuYXAtcG9pbnRzLXhgKiogQ1NTIHByb3BlcnR5IGRlZmluZXMgdGhlIGhvcml6b250YWwgcG9zaXRpb25pbmcgb2Ygc25hcCBwb2ludHMgd2l0aGluIHRoZSBjb250ZW50IG9mIHRoZSBzY3JvbGwgY29udGFpbmVyIHRoZXkgYXJlIGFwcGxpZWQgdG8uCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IHJlcGVhdCggPGxlbmd0aC1wZXJjZW50YWdlPiApYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAic2Nyb2xsLXNuYXAtcG9pbnRzLXgiPzogUHJvcGVydHkuU2Nyb2xsU25hcFBvaW50c1ggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHNjcm9sbC1zbmFwLXBvaW50cy15YCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSB2ZXJ0aWNhbCBwb3NpdGlvbmluZyBvZiBzbmFwIHBvaW50cyB3aXRoaW4gdGhlIGNvbnRlbnQgb2YgdGhlIHNjcm9sbCBjb250YWluZXIgdGhleSBhcmUgYXBwbGllZCB0by4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgcmVwZWF0KCA8bGVuZ3RoLXBlcmNlbnRhZ2U+IClgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICJzY3JvbGwtc25hcC1wb2ludHMteSI/OiBQcm9wZXJ0eS5TY3JvbGxTbmFwUG9pbnRzWSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgc2Nyb2xsLXNuYXAtdHlwZS14YCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIGhvdyBzdHJpY3RseSBzbmFwIHBvaW50cyBhcmUgZW5mb3JjZWQgb24gdGhlIGhvcml6b250YWwgYXhpcyBvZiB0aGUgc2Nyb2xsIGNvbnRhaW5lciBpbiBjYXNlIHRoZXJlIGlzIG9uZS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgbWFuZGF0b3J5IHwgcHJveGltaXR5YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAic2Nyb2xsLXNuYXAtdHlwZS14Ij86IFByb3BlcnR5LlNjcm9sbFNuYXBUeXBlWCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgc2Nyb2xsLXNuYXAtdHlwZS15YCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIGhvdyBzdHJpY3RseSBzbmFwIHBvaW50cyBhcmUgZW5mb3JjZWQgb24gdGhlIHZlcnRpY2FsIGF4aXMgb2YgdGhlIHNjcm9sbCBjb250YWluZXIgaW4gY2FzZSB0aGVyZSBpcyBvbmUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IG1hbmRhdG9yeSB8IHByb3hpbWl0eWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgInNjcm9sbC1zbmFwLXR5cGUteSI/OiBQcm9wZXJ0eS5TY3JvbGxTbmFwVHlwZVkgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tcy1zY3JvbGxiYXItdHJhY2stY29sb3JgKiogQ1NTIHByb3BlcnR5IGlzIGEgTWljcm9zb2Z0IGV4dGVuc2lvbiB0aGF0IHNwZWNpZmllcyB0aGUgY29sb3Igb2YgdGhlIHRyYWNrIGVsZW1lbnQgb2YgYSBzY3JvbGxiYXIuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGNvbG9yPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgU2Nyb2xsYmFyYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAic2Nyb2xsYmFyLXRyYWNrLWNvbG9yIj86IFByb3BlcnR5Lk1zU2Nyb2xsYmFyVHJhY2tDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LWFsaWduYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgaG93IGFuIGVsZW1lbnQgYWxpZ25zIGl0cyBjb250ZW50cyBhY3Jvc3MgaXRzIGxheW91dCBpbiBhIHBlcnBlbmRpY3VsYXIgZGlyZWN0aW9uLiBUaGUgZWZmZWN0IG9mIHRoZSBwcm9wZXJ0eSBpcyBvbmx5IHZpc2libGUgaWYgdGhlcmUgaXMgZXh0cmEgc3BhY2UgaW4gdGhlIGJveC4KICAgKgogICAqICoqU3ludGF4Kio6IGBzdGFydCB8IGNlbnRlciB8IGVuZCB8IGJhc2VsaW5lIHwgc3RyZXRjaGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc3RyZXRjaGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1raHRtbC1ib3gtYWxpZ24iPzogUHJvcGVydHkuQm94QWxpZ24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJveC1kaXJlY3Rpb25gKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB3aGV0aGVyIGEgYm94IGxheXMgb3V0IGl0cyBjb250ZW50cyBub3JtYWxseSAoZnJvbSB0aGUgdG9wIG9yIGxlZnQgZWRnZSksIG9yIGluIHJldmVyc2UgKGZyb20gdGhlIGJvdHRvbSBvciByaWdodCBlZGdlKS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCByZXZlcnNlIHwgaW5oZXJpdGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLWtodG1sLWJveC1kaXJlY3Rpb24iPzogUHJvcGVydHkuQm94RGlyZWN0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbW96LWJveC1mbGV4YCoqIGFuZCAqKmAtd2Via2l0LWJveC1mbGV4YCoqIENTUyBwcm9wZXJ0aWVzIHNwZWNpZnkgaG93IGEgYC1tb3otYm94YCBvciBgLXdlYmtpdC1ib3hgIGdyb3dzIHRvIGZpbGwgdGhlIGJveCB0aGF0IGNvbnRhaW5zIGl0LCBpbiB0aGUgZGlyZWN0aW9uIG9mIHRoZSBjb250YWluaW5nIGJveCdzIGxheW91dC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bnVtYmVyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1raHRtbC1ib3gtZmxleCI/OiBQcm9wZXJ0eS5Cb3hGbGV4IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3gtZmxleC1ncm91cGAqKiBDU1MgcHJvcGVydHkgYXNzaWducyB0aGUgZmxleGJveCdzIGNoaWxkIGVsZW1lbnRzIHRvIGEgZmxleCBncm91cC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8aW50ZWdlcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDFgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICIta2h0bWwtYm94LWZsZXgtZ3JvdXAiPzogUHJvcGVydHkuQm94RmxleEdyb3VwIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3gtbGluZXNgKiogQ1NTIHByb3BlcnR5IGRldGVybWluZXMgd2hldGhlciB0aGUgYm94IG1heSBoYXZlIGEgc2luZ2xlIG9yIG11bHRpcGxlIGxpbmVzIChyb3dzIGZvciBob3Jpem9udGFsbHkgb3JpZW50ZWQgYm94ZXMsIGNvbHVtbnMgZm9yIHZlcnRpY2FsbHkgb3JpZW50ZWQgYm94ZXMpLgogICAqCiAgICogKipTeW50YXgqKjogYHNpbmdsZSB8IG11bHRpcGxlYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzaW5nbGVgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICIta2h0bWwtYm94LWxpbmVzIj86IFByb3BlcnR5LkJveExpbmVzIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3gtb3JkaW5hbC1ncm91cGAqKiBDU1MgcHJvcGVydHkgYXNzaWducyB0aGUgZmxleGJveCdzIGNoaWxkIGVsZW1lbnRzIHRvIGFuIG9yZGluYWwgZ3JvdXAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGludGVnZXI+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAxYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLWtodG1sLWJveC1vcmRpbmFsLWdyb3VwIj86IFByb3BlcnR5LkJveE9yZGluYWxHcm91cCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGlzIGlzIGEgcHJvcGVydHkgb2YgdGhlIG9yaWdpbmFsIENTUyBGbGV4aWJsZSBCb3ggTGF5b3V0IE1vZHVsZSBkcmFmdCwgYW5kIGhhcyBiZWVuIHJlcGxhY2VkIGJ5IGEgbmV3ZXIgc3RhbmRhcmQuIFNlZSBmbGV4Ym94IGZvciBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCBzdGFuZGFyZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBob3Jpem9udGFsIHwgdmVydGljYWwgfCBpbmxpbmUtYXhpcyB8IGJsb2NrLWF4aXMgfCBpbmhlcml0YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBpbmxpbmUtYXhpc2AgKGBob3Jpem9udGFsYCBpbiBYVUwpCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICIta2h0bWwtYm94LW9yaWVudCI/OiBQcm9wZXJ0eS5Cb3hPcmllbnQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tb3otYm94LXBhY2tgKiogYW5kICoqYC13ZWJraXQtYm94LXBhY2tgKiogQ1NTIHByb3BlcnRpZXMgc3BlY2lmeSBob3cgYSBgLW1vei1ib3hgIG9yIGAtd2Via2l0LWJveGAgcGFja3MgaXRzIGNvbnRlbnRzIGluIHRoZSBkaXJlY3Rpb24gb2YgaXRzIGxheW91dC4gVGhlIGVmZmVjdCBvZiB0aGlzIGlzIG9ubHkgdmlzaWJsZSBpZiB0aGVyZSBpcyBleHRyYSBzcGFjZSBpbiB0aGUgYm94LgogICAqCiAgICogKipTeW50YXgqKjogYHN0YXJ0IHwgY2VudGVyIHwgZW5kIHwganVzdGlmeWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc3RhcnRgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICIta2h0bWwtYm94LXBhY2siPzogUHJvcGVydHkuQm94UGFjayB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgbGluZS1icmVha2AqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgdG8gYnJlYWsgbGluZXMgb2YgQ2hpbmVzZSwgSmFwYW5lc2UsIG9yIEtvcmVhbiAoQ0pLKSB0ZXh0IHdoZW4gd29ya2luZyB3aXRoIHB1bmN0dWF0aW9uIGFuZCBzeW1ib2xzLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBsb29zZSB8IG5vcm1hbCB8IHN0cmljdCB8IGFueXdoZXJlYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLWtodG1sLWxpbmUtYnJlYWsiPzogUHJvcGVydHkuTGluZUJyZWFrIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvcGFjaXR5YCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBvcGFjaXR5IG9mIGFuIGVsZW1lbnQuIE9wYWNpdHkgaXMgdGhlIGRlZ3JlZSB0byB3aGljaCBjb250ZW50IGJlaGluZCBhbiBlbGVtZW50IGlzIGhpZGRlbiwgYW5kIGlzIHRoZSBvcHBvc2l0ZSBvZiB0cmFuc3BhcmVuY3kuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGFscGhhLXZhbHVlPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMS4wYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLWtodG1sLW9wYWNpdHkiPzogUHJvcGVydHkuT3BhY2l0eSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgYCoqdXNlci1zZWxlY3QqKmAgQ1NTIHByb3BlcnR5IGNvbnRyb2xzIHdoZXRoZXIgdGhlIHVzZXIgY2FuIHNlbGVjdCB0ZXh0LiBUaGlzIGRvZXNuJ3QgaGF2ZSBhbnkgZWZmZWN0IG9uIGNvbnRlbnQgbG9hZGVkIGFzIGNocm9tZSwgZXhjZXB0IGluIHRleHRib3hlcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBhdXRvIHwgdGV4dCB8IG5vbmUgfCBjb250YWluIHwgYWxsYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLWtodG1sLXVzZXItc2VsZWN0Ij86IFByb3BlcnR5LlVzZXJTZWxlY3QgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJhY2tncm91bmQtY2xpcGAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIGFuIGVsZW1lbnQncyBiYWNrZ3JvdW5kIGV4dGVuZHMgdW5kZXJuZWF0aCBpdHMgYm9yZGVyIGJveCwgcGFkZGluZyBib3gsIG9yIGNvbnRlbnQgYm94LgogICAqCiAgICogKipTeW50YXgqKjogYDxib3g+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYm9yZGVyLWJveGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1tb3otYmFja2dyb3VuZC1jbGlwIj86IFByb3BlcnR5LkJhY2tncm91bmRDbGlwIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3gtZGVjb3JhdGlvbi1icmVha2AqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIGhvdyBhbiBlbGVtZW50J3MgZnJhZ21lbnRzIHNob3VsZCBiZSByZW5kZXJlZCB3aGVuIGJyb2tlbiBhY3Jvc3MgbXVsdGlwbGUgbGluZXMsIGNvbHVtbnMsIG9yIHBhZ2VzLgogICAqCiAgICogKipTeW50YXgqKjogYHNsaWNlIHwgY2xvbmVgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHNsaWNlYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLW1vei1iYWNrZ3JvdW5kLWlubGluZS1wb2xpY3kiPzogUHJvcGVydHkuQm94RGVjb3JhdGlvbkJyZWFrIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBiYWNrZ3JvdW5kLW9yaWdpbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgYmFja2dyb3VuZCdzIG9yaWdpbjogZnJvbSB0aGUgYm9yZGVyIHN0YXJ0LCBpbnNpZGUgdGhlIGJvcmRlciwgb3IgaW5zaWRlIHRoZSBwYWRkaW5nLgogICAqCiAgICogKipTeW50YXgqKjogYDxib3g+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgcGFkZGluZy1ib3hgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItbW96LWJhY2tncm91bmQtb3JpZ2luIj86IFByb3BlcnR5LkJhY2tncm91bmRPcmlnaW4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJhY2tncm91bmQtc2l6ZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgc2l6ZSBvZiB0aGUgZWxlbWVudCdzIGJhY2tncm91bmQgaW1hZ2UuIFRoZSBpbWFnZSBjYW4gYmUgbGVmdCB0byBpdHMgbmF0dXJhbCBzaXplLCBzdHJldGNoZWQsIG9yIGNvbnN0cmFpbmVkIHRvIGZpdCB0aGUgYXZhaWxhYmxlIHNwYWNlLgogICAqCiAgICogKipTeW50YXgqKjogYDxiZy1zaXplPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG8gYXV0b2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1tb3otYmFja2dyb3VuZC1zaXplIj86IFByb3BlcnR5LkJhY2tncm91bmRTaXplPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbW96LWJpbmRpbmdgKiogQ1NTIHByb3BlcnR5IGlzIHVzZWQgYnkgTW96aWxsYS1iYXNlZCBhcHBsaWNhdGlvbnMgdG8gYXR0YWNoIGFuIFhCTCBiaW5kaW5nIHRvIGEgRE9NIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHVybD4gfCBub25lYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLW1vei1iaW5kaW5nIj86IFByb3BlcnR5Lk1vekJpbmRpbmcgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1yYWRpdXNgKiogQ1NTIHByb3BlcnR5IHJvdW5kcyB0aGUgY29ybmVycyBvZiBhbiBlbGVtZW50J3Mgb3V0ZXIgYm9yZGVyIGVkZ2UuIFlvdSBjYW4gc2V0IGEgc2luZ2xlIHJhZGl1cyB0byBtYWtlIGNpcmN1bGFyIGNvcm5lcnMsIG9yIHR3byByYWRpaSB0byBtYWtlIGVsbGlwdGljYWwgY29ybmVycy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoLXBlcmNlbnRhZ2U+ezEsNH0gWyAvIDxsZW5ndGgtcGVyY2VudGFnZT57MSw0fSBdP2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1tb3otYm9yZGVyLXJhZGl1cyI/OiBQcm9wZXJ0eS5Cb3JkZXJSYWRpdXM8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXNgKiogQ1NTIHByb3BlcnR5IHJvdW5kcyB0aGUgYm90dG9tLWxlZnQgY29ybmVyIG9mIGFuIGVsZW1lbnQgYnkgc3BlY2lmeWluZyB0aGUgcmFkaXVzIChvciB0aGUgcmFkaXVzIG9mIHRoZSBzZW1pLW1ham9yIGFuZCBzZW1pLW1pbm9yIGF4ZXMpIG9mIHRoZSBlbGxpcHNlIGRlZmluaW5nIHRoZSBjdXJ2YXR1cmUgb2YgdGhlIGNvcm5lci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoLXBlcmNlbnRhZ2U+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItbW96LWJvcmRlci1yYWRpdXMtYm90dG9tbGVmdCI/OiBQcm9wZXJ0eS5Cb3JkZXJCb3R0b21MZWZ0UmFkaXVzPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1c2AqKiBDU1MgcHJvcGVydHkgcm91bmRzIHRoZSBib3R0b20tcmlnaHQgY29ybmVyIG9mIGFuIGVsZW1lbnQgYnkgc3BlY2lmeWluZyB0aGUgcmFkaXVzIChvciB0aGUgcmFkaXVzIG9mIHRoZSBzZW1pLW1ham9yIGFuZCBzZW1pLW1pbm9yIGF4ZXMpIG9mIHRoZSBlbGxpcHNlIGRlZmluaW5nIHRoZSBjdXJ2YXR1cmUgb2YgdGhlIGNvcm5lci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoLXBlcmNlbnRhZ2U+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItbW96LWJvcmRlci1yYWRpdXMtYm90dG9tcmlnaHQiPzogUHJvcGVydHkuQm9yZGVyQm90dG9tUmlnaHRSYWRpdXM8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci10b3AtbGVmdC1yYWRpdXNgKiogQ1NTIHByb3BlcnR5IHJvdW5kcyB0aGUgdG9wLWxlZnQgY29ybmVyIG9mIGFuIGVsZW1lbnQgYnkgc3BlY2lmeWluZyB0aGUgcmFkaXVzIChvciB0aGUgcmFkaXVzIG9mIHRoZSBzZW1pLW1ham9yIGFuZCBzZW1pLW1pbm9yIGF4ZXMpIG9mIHRoZSBlbGxpcHNlIGRlZmluaW5nIHRoZSBjdXJ2YXR1cmUgb2YgdGhlIGNvcm5lci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoLXBlcmNlbnRhZ2U+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItbW96LWJvcmRlci1yYWRpdXMtdG9wbGVmdCI/OiBQcm9wZXJ0eS5Cb3JkZXJUb3BMZWZ0UmFkaXVzPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3JkZXItdG9wLXJpZ2h0LXJhZGl1c2AqKiBDU1MgcHJvcGVydHkgcm91bmRzIHRoZSB0b3AtcmlnaHQgY29ybmVyIG9mIGFuIGVsZW1lbnQgYnkgc3BlY2lmeWluZyB0aGUgcmFkaXVzIChvciB0aGUgcmFkaXVzIG9mIHRoZSBzZW1pLW1ham9yIGFuZCBzZW1pLW1pbm9yIGF4ZXMpIG9mIHRoZSBlbGxpcHNlIGRlZmluaW5nIHRoZSBjdXJ2YXR1cmUgb2YgdGhlIGNvcm5lci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGVuZ3RoLXBlcmNlbnRhZ2U+ezEsMn1gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItbW96LWJvcmRlci1yYWRpdXMtdG9wcmlnaHQiPzogUHJvcGVydHkuQm9yZGVyVG9wUmlnaHRSYWRpdXM8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJveC1hbGlnbmAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIGhvdyBhbiBlbGVtZW50IGFsaWducyBpdHMgY29udGVudHMgYWNyb3NzIGl0cyBsYXlvdXQgaW4gYSBwZXJwZW5kaWN1bGFyIGRpcmVjdGlvbi4gVGhlIGVmZmVjdCBvZiB0aGUgcHJvcGVydHkgaXMgb25seSB2aXNpYmxlIGlmIHRoZXJlIGlzIGV4dHJhIHNwYWNlIGluIHRoZSBib3guCiAgICoKICAgKiAqKlN5bnRheCoqOiBgc3RhcnQgfCBjZW50ZXIgfCBlbmQgfCBiYXNlbGluZSB8IHN0cmV0Y2hgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHN0cmV0Y2hgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItbW96LWJveC1hbGlnbiI/OiBQcm9wZXJ0eS5Cb3hBbGlnbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LWRpcmVjdGlvbmAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHdoZXRoZXIgYSBib3ggbGF5cyBvdXQgaXRzIGNvbnRlbnRzIG5vcm1hbGx5IChmcm9tIHRoZSB0b3Agb3IgbGVmdCBlZGdlKSwgb3IgaW4gcmV2ZXJzZSAoZnJvbSB0aGUgYm90dG9tIG9yIHJpZ2h0IGVkZ2UpLgogICAqCiAgICogKipTeW50YXgqKjogYG5vcm1hbCB8IHJldmVyc2UgfCBpbmhlcml0YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub3JtYWxgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItbW96LWJveC1kaXJlY3Rpb24iPzogUHJvcGVydHkuQm94RGlyZWN0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmAtbW96LWJveC1mbGV4YCoqIGFuZCAqKmAtd2Via2l0LWJveC1mbGV4YCoqIENTUyBwcm9wZXJ0aWVzIHNwZWNpZnkgaG93IGEgYC1tb3otYm94YCBvciBgLXdlYmtpdC1ib3hgIGdyb3dzIHRvIGZpbGwgdGhlIGJveCB0aGF0IGNvbnRhaW5zIGl0LCBpbiB0aGUgZGlyZWN0aW9uIG9mIHRoZSBjb250YWluaW5nIGJveCdzIGxheW91dC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bnVtYmVyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1tb3otYm94LWZsZXgiPzogUHJvcGVydHkuQm94RmxleCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LW9yZGluYWwtZ3JvdXBgKiogQ1NTIHByb3BlcnR5IGFzc2lnbnMgdGhlIGZsZXhib3gncyBjaGlsZCBlbGVtZW50cyB0byBhbiBvcmRpbmFsIGdyb3VwLgogICAqCiAgICogKipTeW50YXgqKjogYDxpbnRlZ2VyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1tb3otYm94LW9yZGluYWwtZ3JvdXAiPzogUHJvcGVydHkuQm94T3JkaW5hbEdyb3VwIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoaXMgaXMgYSBwcm9wZXJ0eSBvZiB0aGUgb3JpZ2luYWwgQ1NTIEZsZXhpYmxlIEJveCBMYXlvdXQgTW9kdWxlIGRyYWZ0LCBhbmQgaGFzIGJlZW4gcmVwbGFjZWQgYnkgYSBuZXdlciBzdGFuZGFyZC4gU2VlIGZsZXhib3ggZm9yIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IHN0YW5kYXJkLgogICAqCiAgICogKipTeW50YXgqKjogYGhvcml6b250YWwgfCB2ZXJ0aWNhbCB8IGlubGluZS1heGlzIHwgYmxvY2stYXhpcyB8IGluaGVyaXRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGlubGluZS1heGlzYCAoYGhvcml6b250YWxgIGluIFhVTCkKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1tb3otYm94LW9yaWVudCI/OiBQcm9wZXJ0eS5Cb3hPcmllbnQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tb3otYm94LXBhY2tgKiogYW5kICoqYC13ZWJraXQtYm94LXBhY2tgKiogQ1NTIHByb3BlcnRpZXMgc3BlY2lmeSBob3cgYSBgLW1vei1ib3hgIG9yIGAtd2Via2l0LWJveGAgcGFja3MgaXRzIGNvbnRlbnRzIGluIHRoZSBkaXJlY3Rpb24gb2YgaXRzIGxheW91dC4gVGhlIGVmZmVjdCBvZiB0aGlzIGlzIG9ubHkgdmlzaWJsZSBpZiB0aGVyZSBpcyBleHRyYSBzcGFjZSBpbiB0aGUgYm94LgogICAqCiAgICogKipTeW50YXgqKjogYHN0YXJ0IHwgY2VudGVyIHwgZW5kIHwganVzdGlmeWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc3RhcnRgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItbW96LWJveC1wYWNrIj86IFByb3BlcnR5LkJveFBhY2sgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJveC1zaGFkb3dgKiogQ1NTIHByb3BlcnR5IGFkZHMgc2hhZG93IGVmZmVjdHMgYXJvdW5kIGFuIGVsZW1lbnQncyBmcmFtZS4gWW91IGNhbiBzZXQgbXVsdGlwbGUgZWZmZWN0cyBzZXBhcmF0ZWQgYnkgY29tbWFzLiBBIGJveCBzaGFkb3cgaXMgZGVzY3JpYmVkIGJ5IFggYW5kIFkgb2Zmc2V0cyByZWxhdGl2ZSB0byB0aGUgZWxlbWVudCwgYmx1ciBhbmQgc3ByZWFkIHJhZGl1cywgYW5kIGNvbG9yLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCA8c2hhZG93PiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItbW96LWJveC1zaGFkb3ciPzogUHJvcGVydHkuQm94U2hhZG93IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSBub24tc3RhbmRhcmQgKipgLW1vei1mbG9hdC1lZGdlYCoqIENTUyBwcm9wZXJ0eSBzcGVjaWZpZXMgd2hldGhlciB0aGUgaGVpZ2h0IGFuZCB3aWR0aCBwcm9wZXJ0aWVzIG9mIHRoZSBlbGVtZW50IGluY2x1ZGUgdGhlIG1hcmdpbiwgYm9yZGVyLCBvciBwYWRkaW5nIHRoaWNrbmVzcy4KICAgKgogICAqICoqU3ludGF4Kio6IGBib3JkZXItYm94IHwgY29udGVudC1ib3ggfCBtYXJnaW4tYm94IHwgcGFkZGluZy1ib3hgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGNvbnRlbnQtYm94YAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLW1vei1mbG9hdC1lZGdlIj86IFByb3BlcnR5Lk1vekZsb2F0RWRnZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1vei1mb3JjZS1icm9rZW4taW1hZ2UtaWNvbmAqKiBleHRlbmRlZCBDU1MgcHJvcGVydHkgY2FuIGJlIHVzZWQgdG8gZm9yY2UgdGhlIGJyb2tlbiBpbWFnZSBpY29uIHRvIGJlIHNob3duIGV2ZW4gd2hlbiBhIGJyb2tlbiBpbWFnZSBoYXMgYW4gYGFsdGAgYXR0cmlidXRlLgogICAqCiAgICogKipTeW50YXgqKjogYDAgfCAxYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLW1vei1mb3JjZS1icm9rZW4taW1hZ2UtaWNvbiI/OiBQcm9wZXJ0eS5Nb3pGb3JjZUJyb2tlbkltYWdlSWNvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3BhY2l0eWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgb3BhY2l0eSBvZiBhbiBlbGVtZW50LiBPcGFjaXR5IGlzIHRoZSBkZWdyZWUgdG8gd2hpY2ggY29udGVudCBiZWhpbmQgYW4gZWxlbWVudCBpcyBoaWRkZW4sIGFuZCBpcyB0aGUgb3Bwb3NpdGUgb2YgdHJhbnNwYXJlbmN5LgogICAqCiAgICogKipTeW50YXgqKjogYDxhbHBoYS12YWx1ZT5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDEuMGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1tb3otb3BhY2l0eSI/OiBQcm9wZXJ0eS5PcGFjaXR5IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvdXRsaW5lYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgc2V0IGFsbCB0aGUgb3V0bGluZSBwcm9wZXJ0aWVzIGluIGEgc2luZ2xlIGRlY2xhcmF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYFsgPCdvdXRsaW5lLWNvbG9yJz4gfHwgPCdvdXRsaW5lLXN0eWxlJz4gfHwgPCdvdXRsaW5lLXdpZHRoJz4gXWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1tb3otb3V0bGluZSI/OiBQcm9wZXJ0eS5PdXRsaW5lPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvdXRsaW5lLWNvbG9yYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBjb2xvciBvZiBhbiBlbGVtZW50J3Mgb3V0bGluZS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+IHwgaW52ZXJ0YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBpbnZlcnRgLCBmb3IgYnJvd3NlcnMgc3VwcG9ydGluZyBpdCwgYGN1cnJlbnRDb2xvcmAgZm9yIHRoZSBvdGhlcgogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLW1vei1vdXRsaW5lLWNvbG9yIj86IFByb3BlcnR5Lk91dGxpbmVDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBJbiBNb3ppbGxhIGFwcGxpY2F0aW9ucyBsaWtlIEZpcmVmb3gsIHRoZSAqKmAtbW96LW91dGxpbmUtcmFkaXVzYCoqIENTUyBzaG9ydGhhbmQgcHJvcGVydHkgY2FuIGJlIHVzZWQgdG8gZ2l2ZSBhbiBlbGVtZW50J3MgYG91dGxpbmVgIHJvdW5kZWQgY29ybmVycy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8b3V0bGluZS1yYWRpdXM+ezEsNH0gWyAvIDxvdXRsaW5lLXJhZGl1cz57MSw0fSBdP2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1tb3otb3V0bGluZS1yYWRpdXMiPzogUHJvcGVydHkuTW96T3V0bGluZVJhZGl1czxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBJbiBNb3ppbGxhIGFwcGxpY2F0aW9ucywgdGhlICoqYC1tb3otb3V0bGluZS1yYWRpdXMtYm90dG9tbGVmdGAqKiBDU1MgcHJvcGVydHkgY2FuIGJlIHVzZWQgdG8gcm91bmQgdGhlIGJvdHRvbS1sZWZ0IGNvcm5lciBvZiBhbiBlbGVtZW50J3MgYG91dGxpbmVgLgogICAqCiAgICogKipTeW50YXgqKjogYDxvdXRsaW5lLXJhZGl1cz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItbW96LW91dGxpbmUtcmFkaXVzLWJvdHRvbWxlZnQiPzogUHJvcGVydHkuTW96T3V0bGluZVJhZGl1c0JvdHRvbWxlZnQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogSW4gTW96aWxsYSBhcHBsaWNhdGlvbnMsIHRoZSAqKmAtbW96LW91dGxpbmUtcmFkaXVzLWJvdHRvbXJpZ2h0YCoqIENTUyBwcm9wZXJ0eSBjYW4gYmUgdXNlZCB0byByb3VuZCB0aGUgYm90dG9tLXJpZ2h0IGNvcm5lciBvZiBhbiBlbGVtZW50J3MgYG91dGxpbmVgLgogICAqCiAgICogKipTeW50YXgqKjogYDxvdXRsaW5lLXJhZGl1cz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItbW96LW91dGxpbmUtcmFkaXVzLWJvdHRvbXJpZ2h0Ij86IFByb3BlcnR5Lk1vek91dGxpbmVSYWRpdXNCb3R0b21yaWdodDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBJbiBNb3ppbGxhIGFwcGxpY2F0aW9ucywgdGhlICoqYC1tb3otb3V0bGluZS1yYWRpdXMtdG9wbGVmdGAqKiBDU1MgcHJvcGVydHkgY2FuIGJlIHVzZWQgdG8gcm91bmQgdGhlIHRvcC1sZWZ0IGNvcm5lciBvZiBhbiBlbGVtZW50J3MgYG91dGxpbmVgLgogICAqCiAgICogKipTeW50YXgqKjogYDxvdXRsaW5lLXJhZGl1cz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItbW96LW91dGxpbmUtcmFkaXVzLXRvcGxlZnQiPzogUHJvcGVydHkuTW96T3V0bGluZVJhZGl1c1RvcGxlZnQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogSW4gTW96aWxsYSBhcHBsaWNhdGlvbnMsIHRoZSAqKmAtbW96LW91dGxpbmUtcmFkaXVzLXRvcHJpZ2h0YCoqIENTUyBwcm9wZXJ0eSBjYW4gYmUgdXNlZCB0byByb3VuZCB0aGUgdG9wLXJpZ2h0IGNvcm5lciBvZiBhbiBlbGVtZW50J3MgYG91dGxpbmVgLgogICAqCiAgICogKipTeW50YXgqKjogYDxvdXRsaW5lLXJhZGl1cz5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItbW96LW91dGxpbmUtcmFkaXVzLXRvcHJpZ2h0Ij86IFByb3BlcnR5Lk1vek91dGxpbmVSYWRpdXNUb3ByaWdodDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgb3V0bGluZS1zdHlsZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgc3R5bGUgb2YgYW4gZWxlbWVudCdzIG91dGxpbmUuIEFuIG91dGxpbmUgaXMgYSBsaW5lIHRoYXQgaXMgZHJhd24gYXJvdW5kIGFuIGVsZW1lbnQsIG91dHNpZGUgdGhlIGBib3JkZXJgLgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCA8J2JvcmRlci1zdHlsZSc+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLW1vei1vdXRsaW5lLXN0eWxlIj86IFByb3BlcnR5Lk91dGxpbmVTdHlsZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgQ1NTICoqYG91dGxpbmUtd2lkdGhgKiogcHJvcGVydHkgc2V0cyB0aGUgdGhpY2tuZXNzIG9mIGFuIGVsZW1lbnQncyBvdXRsaW5lLiBBbiBvdXRsaW5lIGlzIGEgbGluZSB0aGF0IGlzIGRyYXduIGFyb3VuZCBhbiBlbGVtZW50LCBvdXRzaWRlIHRoZSBgYm9yZGVyYC4KICAgKgogICAqICoqU3ludGF4Kio6IGA8bGluZS13aWR0aD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG1lZGl1bWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1tb3otb3V0bGluZS13aWR0aCI/OiBQcm9wZXJ0eS5PdXRsaW5lV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtYWxpZ24tbGFzdGAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgdGhlIGxhc3QgbGluZSBvZiBhIGJsb2NrIG9yIGEgbGluZSwgcmlnaHQgYmVmb3JlIGEgZm9yY2VkIGxpbmUgYnJlYWssIGlzIGFsaWduZWQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IHN0YXJ0IHwgZW5kIHwgbGVmdCB8IHJpZ2h0IHwgY2VudGVyIHwganVzdGlmeWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgYXV0b2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1tb3otdGV4dC1hbGlnbi1sYXN0Ij86IFByb3BlcnR5LlRleHRBbGlnbkxhc3QgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtZGVjb3JhdGlvbi1jb2xvcmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgY29sb3Igb2YgZGVjb3JhdGlvbnMgYWRkZWQgdG8gdGV4dCBieSBgdGV4dC1kZWNvcmF0aW9uLWxpbmVgLgogICAqCiAgICogKipTeW50YXgqKjogYDxjb2xvcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGN1cnJlbnRjb2xvcmAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1tb3otdGV4dC1kZWNvcmF0aW9uLWNvbG9yIj86IFByb3BlcnR5LlRleHREZWNvcmF0aW9uQ29sb3IgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtZGVjb3JhdGlvbi1saW5lYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBraW5kIG9mIGRlY29yYXRpb24gdGhhdCBpcyB1c2VkIG9uIHRleHQgaW4gYW4gZWxlbWVudCwgc3VjaCBhcyBhbiB1bmRlcmxpbmUgb3Igb3ZlcmxpbmUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IFsgdW5kZXJsaW5lIHx8IG92ZXJsaW5lIHx8IGxpbmUtdGhyb3VnaCB8fCBibGluayBdIHwgc3BlbGxpbmctZXJyb3IgfCBncmFtbWFyLWVycm9yYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBub25lYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLW1vei10ZXh0LWRlY29yYXRpb24tbGluZSI/OiBQcm9wZXJ0eS5UZXh0RGVjb3JhdGlvbkxpbmUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtZGVjb3JhdGlvbi1zdHlsZWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgc3R5bGUgb2YgdGhlIGxpbmVzIHNwZWNpZmllZCBieSBgdGV4dC1kZWNvcmF0aW9uLWxpbmVgLiBUaGUgc3R5bGUgYXBwbGllcyB0byBhbGwgbGluZXMgdGhhdCBhcmUgc2V0IHdpdGggYHRleHQtZGVjb3JhdGlvbi1saW5lYC4KICAgKgogICAqICoqU3ludGF4Kio6IGBzb2xpZCB8IGRvdWJsZSB8IGRvdHRlZCB8IGRhc2hlZCB8IHdhdnlgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYHNvbGlkYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLW1vei10ZXh0LWRlY29yYXRpb24tc3R5bGUiPzogUHJvcGVydHkuVGV4dERlY29yYXRpb25TdHlsZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBJbiBNb3ppbGxhIGFwcGxpY2F0aW9ucywgKipgLW1vei11c2VyLWlucHV0YCoqIGRldGVybWluZXMgaWYgYW4gZWxlbWVudCB3aWxsIGFjY2VwdCB1c2VyIGlucHV0LgogICAqCiAgICogKipTeW50YXgqKjogYGF1dG8gfCBub25lIHwgZW5hYmxlZCB8IGRpc2FibGVkYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLW1vei11c2VyLWlucHV0Ij86IFByb3BlcnR5Lk1velVzZXJJbnB1dCB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgaW1lLW1vZGVgKiogQ1NTIHByb3BlcnR5IGNvbnRyb2xzIHRoZSBzdGF0ZSBvZiB0aGUgaW5wdXQgbWV0aG9kIGVkaXRvciAoSU1FKSBmb3IgdGV4dCBmaWVsZHMuIFRoaXMgcHJvcGVydHkgaXMgb2Jzb2xldGUuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgYXV0byB8IG5vcm1hbCB8IGFjdGl2ZSB8IGluYWN0aXZlIHwgZGlzYWJsZWRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGF1dG9gCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItbXMtaW1lLW1vZGUiPzogUHJvcGVydHkuSW1lTW9kZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1zLXNjcm9sbGJhci10cmFjay1jb2xvcmAqKiBDU1MgcHJvcGVydHkgaXMgYSBNaWNyb3NvZnQgZXh0ZW5zaW9uIHRoYXQgc3BlY2lmaWVzIHRoZSBjb2xvciBvZiB0aGUgdHJhY2sgZWxlbWVudCBvZiBhIHNjcm9sbGJhci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Y29sb3I+YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBTY3JvbGxiYXJgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItbXMtc2Nyb2xsYmFyLXRyYWNrLWNvbG9yIj86IFByb3BlcnR5Lk1zU2Nyb2xsYmFyVHJhY2tDb2xvciB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYW5pbWF0aW9uYCoqIHNob3J0aGFuZCBDU1MgcHJvcGVydHkgYXBwbGllcyBhbiBhbmltYXRpb24gYmV0d2VlbiBzdHlsZXMuIEl0IGlzIGEgc2hvcnRoYW5kIGZvciBgYW5pbWF0aW9uLW5hbWVgLCBgYW5pbWF0aW9uLWR1cmF0aW9uYCwgYGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb25gLCBgYW5pbWF0aW9uLWRlbGF5YCwgYGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnRgLCBgYW5pbWF0aW9uLWRpcmVjdGlvbmAsIGBhbmltYXRpb24tZmlsbC1tb2RlYCwgYW5kIGBhbmltYXRpb24tcGxheS1zdGF0ZWAuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHNpbmdsZS1hbmltYXRpb24+I2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1vLWFuaW1hdGlvbiI/OiBQcm9wZXJ0eS5BbmltYXRpb248VFRpbWU+IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tZGVsYXlgKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgYW1vdW50IG9mIHRpbWUgdG8gd2FpdCBmcm9tIGFwcGx5aW5nIHRoZSBhbmltYXRpb24gdG8gYW4gZWxlbWVudCBiZWZvcmUgYmVnaW5uaW5nIHRvIHBlcmZvcm0gdGhlIGFuaW1hdGlvbi4gVGhlIGFuaW1hdGlvbiBjYW4gc3RhcnQgbGF0ZXIsIGltbWVkaWF0ZWx5IGZyb20gaXRzIGJlZ2lubmluZywgb3IgaW1tZWRpYXRlbHkgYW5kIHBhcnR3YXkgdGhyb3VnaCB0aGUgYW5pbWF0aW9uLgogICAqCiAgICogKipTeW50YXgqKjogYDx0aW1lPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBzYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLW8tYW5pbWF0aW9uLWRlbGF5Ij86IFByb3BlcnR5LkFuaW1hdGlvbkRlbGF5PFRUaW1lPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYW5pbWF0aW9uLWRpcmVjdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB3aGV0aGVyIGFuIGFuaW1hdGlvbiBzaG91bGQgcGxheSBmb3J3YXJkLCBiYWNrd2FyZCwgb3IgYWx0ZXJuYXRlIGJhY2sgYW5kIGZvcnRoIGJldHdlZW4gcGxheWluZyB0aGUgc2VxdWVuY2UgZm9yd2FyZCBhbmQgYmFja3dhcmQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHNpbmdsZS1hbmltYXRpb24tZGlyZWN0aW9uPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vcm1hbGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1vLWFuaW1hdGlvbi1kaXJlY3Rpb24iPzogUHJvcGVydHkuQW5pbWF0aW9uRGlyZWN0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tZHVyYXRpb25gKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIGxlbmd0aCBvZiB0aW1lIHRoYXQgYW4gYW5pbWF0aW9uIHRha2VzIHRvIGNvbXBsZXRlIG9uZSBjeWNsZS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8dGltZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwc2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1vLWFuaW1hdGlvbi1kdXJhdGlvbiI/OiBQcm9wZXJ0eS5BbmltYXRpb25EdXJhdGlvbjxUVGltZT4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbi1maWxsLW1vZGVgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IGEgQ1NTIGFuaW1hdGlvbiBhcHBsaWVzIHN0eWxlcyB0byBpdHMgdGFyZ2V0IGJlZm9yZSBhbmQgYWZ0ZXIgaXRzIGV4ZWN1dGlvbi4KICAgKgogICAqICoqU3ludGF4Kio6IGA8c2luZ2xlLWFuaW1hdGlvbi1maWxsLW1vZGU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1vLWFuaW1hdGlvbi1maWxsLW1vZGUiPzogUHJvcGVydHkuQW5pbWF0aW9uRmlsbE1vZGUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnRgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIG51bWJlciBvZiB0aW1lcyBhbiBhbmltYXRpb24gc2VxdWVuY2Ugc2hvdWxkIGJlIHBsYXllZCBiZWZvcmUgc3RvcHBpbmcuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHNpbmdsZS1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50PiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDFgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItby1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50Ij86IFByb3BlcnR5LkFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBhbmltYXRpb24tbmFtZWAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHRoZSBuYW1lcyBvZiBvbmUgb3IgbW9yZSBgQGtleWZyYW1lc2AgYXQtcnVsZXMgZGVzY3JpYmluZyB0aGUgYW5pbWF0aW9uIG9yIGFuaW1hdGlvbnMgdG8gYXBwbHkgdG8gdGhlIGVsZW1lbnQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyBub25lIHwgPGtleWZyYW1lcy1uYW1lPiBdI2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1vLWFuaW1hdGlvbi1uYW1lIj86IFByb3BlcnR5LkFuaW1hdGlvbk5hbWUgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGFuaW1hdGlvbi1wbGF5LXN0YXRlYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHdoZXRoZXIgYW4gYW5pbWF0aW9uIGlzIHJ1bm5pbmcgb3IgcGF1c2VkLgogICAqCiAgICogKipTeW50YXgqKjogYDxzaW5nbGUtYW5pbWF0aW9uLXBsYXktc3RhdGU+I2AKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgcnVubmluZ2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1vLWFuaW1hdGlvbi1wbGF5LXN0YXRlIj86IFByb3BlcnR5LkFuaW1hdGlvblBsYXlTdGF0ZSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyBob3cgYW4gYW5pbWF0aW9uIHByb2dyZXNzZXMgdGhyb3VnaCB0aGUgZHVyYXRpb24gb2YgZWFjaCBjeWNsZS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8ZWFzaW5nLWZ1bmN0aW9uPiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGVhc2VgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItby1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uIj86IFByb3BlcnR5LkFuaW1hdGlvblRpbWluZ0Z1bmN0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBiYWNrZ3JvdW5kLXNpemVgKiogQ1NTIHByb3BlcnR5IHNldHMgdGhlIHNpemUgb2YgdGhlIGVsZW1lbnQncyBiYWNrZ3JvdW5kIGltYWdlLiBUaGUgaW1hZ2UgY2FuIGJlIGxlZnQgdG8gaXRzIG5hdHVyYWwgc2l6ZSwgc3RyZXRjaGVkLCBvciBjb25zdHJhaW5lZCB0byBmaXQgdGhlIGF2YWlsYWJsZSBzcGFjZS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8Ymctc2l6ZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBhdXRvIGF1dG9gCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItby1iYWNrZ3JvdW5kLXNpemUiPzogUHJvcGVydHkuQmFja2dyb3VuZFNpemU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJvcmRlci1pbWFnZWAqKiBDU1MgcHJvcGVydHkgZHJhd3MgYW4gaW1hZ2UgYXJvdW5kIGEgZ2l2ZW4gZWxlbWVudC4gSXQgcmVwbGFjZXMgdGhlIGVsZW1lbnQncyByZWd1bGFyIGJvcmRlci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8J2JvcmRlci1pbWFnZS1zb3VyY2UnPiB8fCA8J2JvcmRlci1pbWFnZS1zbGljZSc+IFsgLyA8J2JvcmRlci1pbWFnZS13aWR0aCc+IHwgLyA8J2JvcmRlci1pbWFnZS13aWR0aCc+PyAvIDwnYm9yZGVyLWltYWdlLW91dHNldCc+IF0/IHx8IDwnYm9yZGVyLWltYWdlLXJlcGVhdCc+YAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLW8tYm9yZGVyLWltYWdlIj86IFByb3BlcnR5LkJvcmRlckltYWdlIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvYmplY3QtZml0YCoqIENTUyBwcm9wZXJ0eSBzZXRzIGhvdyB0aGUgY29udGVudCBvZiBhIHJlcGxhY2VkIGVsZW1lbnQsIHN1Y2ggYXMgYW4gYDxpbWc+YCBvciBgPHZpZGVvPmAsIHNob3VsZCBiZSByZXNpemVkIHRvIGZpdCBpdHMgY29udGFpbmVyLgogICAqCiAgICogKipTeW50YXgqKjogYGZpbGwgfCBjb250YWluIHwgY292ZXIgfCBub25lIHwgc2NhbGUtZG93bmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgZmlsbGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1vLW9iamVjdC1maXQiPzogUHJvcGVydHkuT2JqZWN0Rml0IHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBvYmplY3QtcG9zaXRpb25gKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgYWxpZ25tZW50IG9mIHRoZSBzZWxlY3RlZCByZXBsYWNlZCBlbGVtZW50J3MgY29udGVudHMgd2l0aGluIHRoZSBlbGVtZW50J3MgYm94LiBBcmVhcyBvZiB0aGUgYm94IHdoaWNoIGFyZW4ndCBjb3ZlcmVkIGJ5IHRoZSByZXBsYWNlZCBlbGVtZW50J3Mgb2JqZWN0IHdpbGwgc2hvdyB0aGUgZWxlbWVudCdzIGJhY2tncm91bmQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPHBvc2l0aW9uPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgNTAlIDUwJWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1vLW9iamVjdC1wb3NpdGlvbiI/OiBQcm9wZXJ0eS5PYmplY3RQb3NpdGlvbjxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdGFiLXNpemVgKiogQ1NTIHByb3BlcnR5IGlzIHVzZWQgdG8gY3VzdG9taXplIHRoZSB3aWR0aCBvZiB0YWIgY2hhcmFjdGVycyAoVSswMDA5KS4KICAgKgogICAqICoqU3ludGF4Kio6IGA8aW50ZWdlcj4gfCA8bGVuZ3RoPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgOGAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1vLXRhYi1zaXplIj86IFByb3BlcnR5LlRhYlNpemU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRleHQtb3ZlcmZsb3dgKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IGhpZGRlbiBvdmVyZmxvdyBjb250ZW50IGlzIHNpZ25hbGVkIHRvIHVzZXJzLiBJdCBjYW4gYmUgY2xpcHBlZCwgZGlzcGxheSBhbiBlbGxpcHNpcyAoJ2DigKZgJyksIG9yIGRpc3BsYXkgYSBjdXN0b20gc3RyaW5nLgogICAqCiAgICogKipTeW50YXgqKjogYFsgY2xpcCB8IGVsbGlwc2lzIHwgPHN0cmluZz4gXXsxLDJ9YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBjbGlwYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLW8tdGV4dC1vdmVyZmxvdyI/OiBQcm9wZXJ0eS5UZXh0T3ZlcmZsb3cgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHRyYW5zZm9ybWAqKiBDU1MgcHJvcGVydHkgbGV0cyB5b3Ugcm90YXRlLCBzY2FsZSwgc2tldywgb3IgdHJhbnNsYXRlIGFuIGVsZW1lbnQuIEl0IG1vZGlmaWVzIHRoZSBjb29yZGluYXRlIHNwYWNlIG9mIHRoZSBDU1MgdmlzdWFsIGZvcm1hdHRpbmcgbW9kZWwuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgbm9uZSB8IDx0cmFuc2Zvcm0tbGlzdD5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItby10cmFuc2Zvcm0iPzogUHJvcGVydHkuVHJhbnNmb3JtIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmB0cmFuc2Zvcm0tb3JpZ2luYCoqIENTUyBwcm9wZXJ0eSBzZXRzIHRoZSBvcmlnaW4gZm9yIGFuIGVsZW1lbnQncyB0cmFuc2Zvcm1hdGlvbnMuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgWyA8bGVuZ3RoLXBlcmNlbnRhZ2U+IHwgbGVmdCB8IGNlbnRlciB8IHJpZ2h0IHwgdG9wIHwgYm90dG9tIF0gfCBbIFsgPGxlbmd0aC1wZXJjZW50YWdlPiB8IGxlZnQgfCBjZW50ZXIgfCByaWdodCBdICYmIFsgPGxlbmd0aC1wZXJjZW50YWdlPiB8IHRvcCB8IGNlbnRlciB8IGJvdHRvbSBdIF0gPGxlbmd0aD4/YAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGA1MCUgNTAlIDBgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItby10cmFuc2Zvcm0tb3JpZ2luIj86IFByb3BlcnR5LlRyYW5zZm9ybU9yaWdpbjxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNpdGlvbmAqKiBDU1MgcHJvcGVydHkgaXMgYSBzaG9ydGhhbmQgcHJvcGVydHkgZm9yIGB0cmFuc2l0aW9uLXByb3BlcnR5YCwgYHRyYW5zaXRpb24tZHVyYXRpb25gLCBgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb25gLCBhbmQgYHRyYW5zaXRpb24tZGVsYXlgLgogICAqCiAgICogKipTeW50YXgqKjogYDxzaW5nbGUtdHJhbnNpdGlvbj4jYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLW8tdHJhbnNpdGlvbiI/OiBQcm9wZXJ0eS5UcmFuc2l0aW9uPFRUaW1lPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNpdGlvbi1kZWxheWAqKiBDU1MgcHJvcGVydHkgc3BlY2lmaWVzIHRoZSBkdXJhdGlvbiB0byB3YWl0IGJlZm9yZSBzdGFydGluZyBhIHByb3BlcnR5J3MgdHJhbnNpdGlvbiBlZmZlY3Qgd2hlbiBpdHMgdmFsdWUgY2hhbmdlcy4KICAgKgogICAqICoqU3ludGF4Kio6IGA8dGltZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwc2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1vLXRyYW5zaXRpb24tZGVsYXkiPzogUHJvcGVydHkuVHJhbnNpdGlvbkRlbGF5PFRUaW1lPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNpdGlvbi1kdXJhdGlvbmAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgbGVuZ3RoIG9mIHRpbWUgYSB0cmFuc2l0aW9uIGFuaW1hdGlvbiBzaG91bGQgdGFrZSB0byBjb21wbGV0ZS4gQnkgZGVmYXVsdCwgdGhlIHZhbHVlIGlzIGAwc2AsIG1lYW5pbmcgdGhhdCBubyBhbmltYXRpb24gd2lsbCBvY2N1ci4KICAgKgogICAqICoqU3ludGF4Kio6IGA8dGltZT4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGAwc2AKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi1vLXRyYW5zaXRpb24tZHVyYXRpb24iPzogUHJvcGVydHkuVHJhbnNpdGlvbkR1cmF0aW9uPFRUaW1lPiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNpdGlvbi1wcm9wZXJ0eWAqKiBDU1MgcHJvcGVydHkgc2V0cyB0aGUgQ1NTIHByb3BlcnRpZXMgdG8gd2hpY2ggYSB0cmFuc2l0aW9uIGVmZmVjdCBzaG91bGQgYmUgYXBwbGllZC4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgPHNpbmdsZS10cmFuc2l0aW9uLXByb3BlcnR5PiNgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYWxsCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItby10cmFuc2l0aW9uLXByb3BlcnR5Ij86IFByb3BlcnR5LlRyYW5zaXRpb25Qcm9wZXJ0eSB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb25gKiogQ1NTIHByb3BlcnR5IHNldHMgaG93IGludGVybWVkaWF0ZSB2YWx1ZXMgYXJlIGNhbGN1bGF0ZWQgZm9yIENTUyBwcm9wZXJ0aWVzIGJlaW5nIGFmZmVjdGVkIGJ5IGEgdHJhbnNpdGlvbiBlZmZlY3QuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPGVhc2luZy1mdW5jdGlvbj4jYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBlYXNlYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLW8tdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb24iPzogUHJvcGVydHkuVHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3gtYWxpZ25gKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyBob3cgYW4gZWxlbWVudCBhbGlnbnMgaXRzIGNvbnRlbnRzIGFjcm9zcyBpdHMgbGF5b3V0IGluIGEgcGVycGVuZGljdWxhciBkaXJlY3Rpb24uIFRoZSBlZmZlY3Qgb2YgdGhlIHByb3BlcnR5IGlzIG9ubHkgdmlzaWJsZSBpZiB0aGVyZSBpcyBleHRyYSBzcGFjZSBpbiB0aGUgYm94LgogICAqCiAgICogKipTeW50YXgqKjogYHN0YXJ0IHwgY2VudGVyIHwgZW5kIHwgYmFzZWxpbmUgfCBzdHJldGNoYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzdHJldGNoYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLXdlYmtpdC1ib3gtYWxpZ24iPzogUHJvcGVydHkuQm94QWxpZ24gfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJveC1kaXJlY3Rpb25gKiogQ1NTIHByb3BlcnR5IHNwZWNpZmllcyB3aGV0aGVyIGEgYm94IGxheXMgb3V0IGl0cyBjb250ZW50cyBub3JtYWxseSAoZnJvbSB0aGUgdG9wIG9yIGxlZnQgZWRnZSksIG9yIGluIHJldmVyc2UgKGZyb20gdGhlIGJvdHRvbSBvciByaWdodCBlZGdlKS4KICAgKgogICAqICoqU3ludGF4Kio6IGBub3JtYWwgfCByZXZlcnNlIHwgaW5oZXJpdGAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9ybWFsYAogICAqCiAgICogQGRlcHJlY2F0ZWQKICAgKi8KICAiLXdlYmtpdC1ib3gtZGlyZWN0aW9uIj86IFByb3BlcnR5LkJveERpcmVjdGlvbiB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgLW1vei1ib3gtZmxleGAqKiBhbmQgKipgLXdlYmtpdC1ib3gtZmxleGAqKiBDU1MgcHJvcGVydGllcyBzcGVjaWZ5IGhvdyBhIGAtbW96LWJveGAgb3IgYC13ZWJraXQtYm94YCBncm93cyB0byBmaWxsIHRoZSBib3ggdGhhdCBjb250YWlucyBpdCwgaW4gdGhlIGRpcmVjdGlvbiBvZiB0aGUgY29udGFpbmluZyBib3gncyBsYXlvdXQuCiAgICoKICAgKiAqKlN5bnRheCoqOiBgPG51bWJlcj5gCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYDBgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItd2Via2l0LWJveC1mbGV4Ij86IFByb3BlcnR5LkJveEZsZXggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYGJveC1mbGV4LWdyb3VwYCoqIENTUyBwcm9wZXJ0eSBhc3NpZ25zIHRoZSBmbGV4Ym94J3MgY2hpbGQgZWxlbWVudHMgdG8gYSBmbGV4IGdyb3VwLgogICAqCiAgICogKipTeW50YXgqKjogYDxpbnRlZ2VyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi13ZWJraXQtYm94LWZsZXgtZ3JvdXAiPzogUHJvcGVydHkuQm94RmxleEdyb3VwIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoZSAqKmBib3gtbGluZXNgKiogQ1NTIHByb3BlcnR5IGRldGVybWluZXMgd2hldGhlciB0aGUgYm94IG1heSBoYXZlIGEgc2luZ2xlIG9yIG11bHRpcGxlIGxpbmVzIChyb3dzIGZvciBob3Jpem9udGFsbHkgb3JpZW50ZWQgYm94ZXMsIGNvbHVtbnMgZm9yIHZlcnRpY2FsbHkgb3JpZW50ZWQgYm94ZXMpLgogICAqCiAgICogKipTeW50YXgqKjogYHNpbmdsZSB8IG11bHRpcGxlYAogICAqCiAgICogKipJbml0aWFsIHZhbHVlKio6IGBzaW5nbGVgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItd2Via2l0LWJveC1saW5lcyI/OiBQcm9wZXJ0eS5Cb3hMaW5lcyB8IHVuZGVmaW5lZDsKICAvKioKICAgKiBUaGUgKipgYm94LW9yZGluYWwtZ3JvdXBgKiogQ1NTIHByb3BlcnR5IGFzc2lnbnMgdGhlIGZsZXhib3gncyBjaGlsZCBlbGVtZW50cyB0byBhbiBvcmRpbmFsIGdyb3VwLgogICAqCiAgICogKipTeW50YXgqKjogYDxpbnRlZ2VyPmAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgMWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi13ZWJraXQtYm94LW9yZGluYWwtZ3JvdXAiPzogUHJvcGVydHkuQm94T3JkaW5hbEdyb3VwIHwgdW5kZWZpbmVkOwogIC8qKgogICAqIFRoaXMgaXMgYSBwcm9wZXJ0eSBvZiB0aGUgb3JpZ2luYWwgQ1NTIEZsZXhpYmxlIEJveCBMYXlvdXQgTW9kdWxlIGRyYWZ0LCBhbmQgaGFzIGJlZW4gcmVwbGFjZWQgYnkgYSBuZXdlciBzdGFuZGFyZC4gU2VlIGZsZXhib3ggZm9yIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IHN0YW5kYXJkLgogICAqCiAgICogKipTeW50YXgqKjogYGhvcml6b250YWwgfCB2ZXJ0aWNhbCB8IGlubGluZS1heGlzIHwgYmxvY2stYXhpcyB8IGluaGVyaXRgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYGlubGluZS1heGlzYCAoYGhvcml6b250YWxgIGluIFhVTCkKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi13ZWJraXQtYm94LW9yaWVudCI/OiBQcm9wZXJ0eS5Cb3hPcmllbnQgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYC1tb3otYm94LXBhY2tgKiogYW5kICoqYC13ZWJraXQtYm94LXBhY2tgKiogQ1NTIHByb3BlcnRpZXMgc3BlY2lmeSBob3cgYSBgLW1vei1ib3hgIG9yIGAtd2Via2l0LWJveGAgcGFja3MgaXRzIGNvbnRlbnRzIGluIHRoZSBkaXJlY3Rpb24gb2YgaXRzIGxheW91dC4gVGhlIGVmZmVjdCBvZiB0aGlzIGlzIG9ubHkgdmlzaWJsZSBpZiB0aGVyZSBpcyBleHRyYSBzcGFjZSBpbiB0aGUgYm94LgogICAqCiAgICogKipTeW50YXgqKjogYHN0YXJ0IHwgY2VudGVyIHwgZW5kIHwganVzdGlmeWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgc3RhcnRgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItd2Via2l0LWJveC1wYWNrIj86IFByb3BlcnR5LkJveFBhY2sgfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHNjcm9sbC1zbmFwLXBvaW50cy14YCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBob3Jpem9udGFsIHBvc2l0aW9uaW5nIG9mIHNuYXAgcG9pbnRzIHdpdGhpbiB0aGUgY29udGVudCBvZiB0aGUgc2Nyb2xsIGNvbnRhaW5lciB0aGV5IGFyZSBhcHBsaWVkIHRvLgogICAqCiAgICogKipTeW50YXgqKjogYG5vbmUgfCByZXBlYXQoIDxsZW5ndGgtcGVyY2VudGFnZT4gKWAKICAgKgogICAqICoqSW5pdGlhbCB2YWx1ZSoqOiBgbm9uZWAKICAgKgogICAqIEBkZXByZWNhdGVkCiAgICovCiAgIi13ZWJraXQtc2Nyb2xsLXNuYXAtcG9pbnRzLXgiPzogUHJvcGVydHkuU2Nyb2xsU25hcFBvaW50c1ggfCB1bmRlZmluZWQ7CiAgLyoqCiAgICogVGhlICoqYHNjcm9sbC1zbmFwLXBvaW50cy15YCoqIENTUyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSB2ZXJ0aWNhbCBwb3NpdGlvbmluZyBvZiBzbmFwIHBvaW50cyB3aXRoaW4gdGhlIGNvbnRlbnQgb2YgdGhlIHNjcm9sbCBjb250YWluZXIgdGhleSBhcmUgYXBwbGllZCB0by4KICAgKgogICAqICoqU3ludGF4Kio6IGBub25lIHwgcmVwZWF0KCA8bGVuZ3RoLXBlcmNlbnRhZ2U+IClgCiAgICoKICAgKiAqKkluaXRpYWwgdmFsdWUqKjogYG5vbmVgCiAgICoKICAgKiBAZGVwcmVjYXRlZAogICAqLwogICItd2Via2l0LXNjcm9sbC1zbmFwLXBvaW50cy15Ij86IFByb3BlcnR5LlNjcm9sbFNuYXBQb2ludHNZIHwgdW5kZWZpbmVkOwp9CgpleHBvcnQgaW50ZXJmYWNlIFN2Z1Byb3BlcnRpZXNIeXBoZW48VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwLCBUVGltZSA9IHN0cmluZyAmIHt9PiB7CiAgImFsaWdubWVudC1iYXNlbGluZSI/OiBQcm9wZXJ0eS5BbGlnbm1lbnRCYXNlbGluZSB8IHVuZGVmaW5lZDsKICAiYmFzZWxpbmUtc2hpZnQiPzogUHJvcGVydHkuQmFzZWxpbmVTaGlmdDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICBjbGlwPzogUHJvcGVydHkuQ2xpcCB8IHVuZGVmaW5lZDsKICAiY2xpcC1wYXRoIj86IFByb3BlcnR5LkNsaXBQYXRoIHwgdW5kZWZpbmVkOwogICJjbGlwLXJ1bGUiPzogUHJvcGVydHkuQ2xpcFJ1bGUgfCB1bmRlZmluZWQ7CiAgY29sb3I/OiBQcm9wZXJ0eS5Db2xvciB8IHVuZGVmaW5lZDsKICAiY29sb3ItaW50ZXJwb2xhdGlvbiI/OiBQcm9wZXJ0eS5Db2xvckludGVycG9sYXRpb24gfCB1bmRlZmluZWQ7CiAgImNvbG9yLXJlbmRlcmluZyI/OiBQcm9wZXJ0eS5Db2xvclJlbmRlcmluZyB8IHVuZGVmaW5lZDsKICBjdXJzb3I/OiBQcm9wZXJ0eS5DdXJzb3IgfCB1bmRlZmluZWQ7CiAgZGlyZWN0aW9uPzogUHJvcGVydHkuRGlyZWN0aW9uIHwgdW5kZWZpbmVkOwogIGRpc3BsYXk/OiBQcm9wZXJ0eS5EaXNwbGF5IHwgdW5kZWZpbmVkOwogICJkb21pbmFudC1iYXNlbGluZSI/OiBQcm9wZXJ0eS5Eb21pbmFudEJhc2VsaW5lIHwgdW5kZWZpbmVkOwogIGZpbGw/OiBQcm9wZXJ0eS5GaWxsIHwgdW5kZWZpbmVkOwogICJmaWxsLW9wYWNpdHkiPzogUHJvcGVydHkuRmlsbE9wYWNpdHkgfCB1bmRlZmluZWQ7CiAgImZpbGwtcnVsZSI/OiBQcm9wZXJ0eS5GaWxsUnVsZSB8IHVuZGVmaW5lZDsKICBmaWx0ZXI/OiBQcm9wZXJ0eS5GaWx0ZXIgfCB1bmRlZmluZWQ7CiAgImZsb29kLWNvbG9yIj86IFByb3BlcnR5LkZsb29kQ29sb3IgfCB1bmRlZmluZWQ7CiAgImZsb29kLW9wYWNpdHkiPzogUHJvcGVydHkuRmxvb2RPcGFjaXR5IHwgdW5kZWZpbmVkOwogIGZvbnQ/OiBQcm9wZXJ0eS5Gb250IHwgdW5kZWZpbmVkOwogICJmb250LWZhbWlseSI/OiBQcm9wZXJ0eS5Gb250RmFtaWx5IHwgdW5kZWZpbmVkOwogICJmb250LXNpemUiPzogUHJvcGVydHkuRm9udFNpemU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgImZvbnQtc2l6ZS1hZGp1c3QiPzogUHJvcGVydHkuRm9udFNpemVBZGp1c3QgfCB1bmRlZmluZWQ7CiAgImZvbnQtc3RyZXRjaCI/OiBQcm9wZXJ0eS5Gb250U3RyZXRjaCB8IHVuZGVmaW5lZDsKICAiZm9udC1zdHlsZSI/OiBQcm9wZXJ0eS5Gb250U3R5bGUgfCB1bmRlZmluZWQ7CiAgImZvbnQtdmFyaWFudCI/OiBQcm9wZXJ0eS5Gb250VmFyaWFudCB8IHVuZGVmaW5lZDsKICAiZm9udC13ZWlnaHQiPzogUHJvcGVydHkuRm9udFdlaWdodCB8IHVuZGVmaW5lZDsKICAiZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwiPzogUHJvcGVydHkuR2x5cGhPcmllbnRhdGlvblZlcnRpY2FsIHwgdW5kZWZpbmVkOwogICJpbWFnZS1yZW5kZXJpbmciPzogUHJvcGVydHkuSW1hZ2VSZW5kZXJpbmcgfCB1bmRlZmluZWQ7CiAgImxldHRlci1zcGFjaW5nIj86IFByb3BlcnR5LkxldHRlclNwYWNpbmc8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgImxpZ2h0aW5nLWNvbG9yIj86IFByb3BlcnR5LkxpZ2h0aW5nQ29sb3IgfCB1bmRlZmluZWQ7CiAgImxpbmUtaGVpZ2h0Ij86IFByb3BlcnR5LkxpbmVIZWlnaHQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgbWFya2VyPzogUHJvcGVydHkuTWFya2VyIHwgdW5kZWZpbmVkOwogICJtYXJrZXItZW5kIj86IFByb3BlcnR5Lk1hcmtlckVuZCB8IHVuZGVmaW5lZDsKICAibWFya2VyLW1pZCI/OiBQcm9wZXJ0eS5NYXJrZXJNaWQgfCB1bmRlZmluZWQ7CiAgIm1hcmtlci1zdGFydCI/OiBQcm9wZXJ0eS5NYXJrZXJTdGFydCB8IHVuZGVmaW5lZDsKICBtYXNrPzogUHJvcGVydHkuTWFzazxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICBvcGFjaXR5PzogUHJvcGVydHkuT3BhY2l0eSB8IHVuZGVmaW5lZDsKICBvdmVyZmxvdz86IFByb3BlcnR5Lk92ZXJmbG93IHwgdW5kZWZpbmVkOwogICJwYWludC1vcmRlciI/OiBQcm9wZXJ0eS5QYWludE9yZGVyIHwgdW5kZWZpbmVkOwogICJwb2ludGVyLWV2ZW50cyI/OiBQcm9wZXJ0eS5Qb2ludGVyRXZlbnRzIHwgdW5kZWZpbmVkOwogICJzaGFwZS1yZW5kZXJpbmciPzogUHJvcGVydHkuU2hhcGVSZW5kZXJpbmcgfCB1bmRlZmluZWQ7CiAgInN0b3AtY29sb3IiPzogUHJvcGVydHkuU3RvcENvbG9yIHwgdW5kZWZpbmVkOwogICJzdG9wLW9wYWNpdHkiPzogUHJvcGVydHkuU3RvcE9wYWNpdHkgfCB1bmRlZmluZWQ7CiAgc3Ryb2tlPzogUHJvcGVydHkuU3Ryb2tlIHwgdW5kZWZpbmVkOwogICJzdHJva2UtZGFzaGFycmF5Ij86IFByb3BlcnR5LlN0cm9rZURhc2hhcnJheTxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAic3Ryb2tlLWRhc2hvZmZzZXQiPzogUHJvcGVydHkuU3Ryb2tlRGFzaG9mZnNldDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAic3Ryb2tlLWxpbmVjYXAiPzogUHJvcGVydHkuU3Ryb2tlTGluZWNhcCB8IHVuZGVmaW5lZDsKICAic3Ryb2tlLWxpbmVqb2luIj86IFByb3BlcnR5LlN0cm9rZUxpbmVqb2luIHwgdW5kZWZpbmVkOwogICJzdHJva2UtbWl0ZXJsaW1pdCI/OiBQcm9wZXJ0eS5TdHJva2VNaXRlcmxpbWl0IHwgdW5kZWZpbmVkOwogICJzdHJva2Utb3BhY2l0eSI/OiBQcm9wZXJ0eS5TdHJva2VPcGFjaXR5IHwgdW5kZWZpbmVkOwogICJzdHJva2Utd2lkdGgiPzogUHJvcGVydHkuU3Ryb2tlV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgInRleHQtYW5jaG9yIj86IFByb3BlcnR5LlRleHRBbmNob3IgfCB1bmRlZmluZWQ7CiAgInRleHQtZGVjb3JhdGlvbiI/OiBQcm9wZXJ0eS5UZXh0RGVjb3JhdGlvbjxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAidGV4dC1yZW5kZXJpbmciPzogUHJvcGVydHkuVGV4dFJlbmRlcmluZyB8IHVuZGVmaW5lZDsKICAidW5pY29kZS1iaWRpIj86IFByb3BlcnR5LlVuaWNvZGVCaWRpIHwgdW5kZWZpbmVkOwogICJ2ZWN0b3ItZWZmZWN0Ij86IFByb3BlcnR5LlZlY3RvckVmZmVjdCB8IHVuZGVmaW5lZDsKICB2aXNpYmlsaXR5PzogUHJvcGVydHkuVmlzaWJpbGl0eSB8IHVuZGVmaW5lZDsKICAid2hpdGUtc3BhY2UiPzogUHJvcGVydHkuV2hpdGVTcGFjZSB8IHVuZGVmaW5lZDsKICAid29yZC1zcGFjaW5nIj86IFByb3BlcnR5LldvcmRTcGFjaW5nPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogICJ3cml0aW5nLW1vZGUiPzogUHJvcGVydHkuV3JpdGluZ01vZGUgfCB1bmRlZmluZWQ7Cn0KCmV4cG9ydCBpbnRlcmZhY2UgUHJvcGVydGllc0h5cGhlbjxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+CiAgZXh0ZW5kcyBTdGFuZGFyZFByb3BlcnRpZXNIeXBoZW48VExlbmd0aCwgVFRpbWU+LAogICAgVmVuZG9yUHJvcGVydGllc0h5cGhlbjxUTGVuZ3RoLCBUVGltZT4sCiAgICBPYnNvbGV0ZVByb3BlcnRpZXNIeXBoZW48VExlbmd0aCwgVFRpbWU+LAogICAgU3ZnUHJvcGVydGllc0h5cGhlbjxUTGVuZ3RoLCBUVGltZT4ge30KCmV4cG9ydCB0eXBlIFN0YW5kYXJkTG9uZ2hhbmRQcm9wZXJ0aWVzRmFsbGJhY2s8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwLCBUVGltZSA9IHN0cmluZyAmIHt9PiA9IEZhbGxiYWNrPFN0YW5kYXJkTG9uZ2hhbmRQcm9wZXJ0aWVzPFRMZW5ndGgsIFRUaW1lPj47CgpleHBvcnQgdHlwZSBTdGFuZGFyZFNob3J0aGFuZFByb3BlcnRpZXNGYWxsYmFjazxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+ID0gRmFsbGJhY2s8U3RhbmRhcmRTaG9ydGhhbmRQcm9wZXJ0aWVzPFRMZW5ndGgsIFRUaW1lPj47CgpleHBvcnQgaW50ZXJmYWNlIFN0YW5kYXJkUHJvcGVydGllc0ZhbGxiYWNrPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMCwgVFRpbWUgPSBzdHJpbmcgJiB7fT4KICBleHRlbmRzIFN0YW5kYXJkTG9uZ2hhbmRQcm9wZXJ0aWVzRmFsbGJhY2s8VExlbmd0aCwgVFRpbWU+LAogICAgU3RhbmRhcmRTaG9ydGhhbmRQcm9wZXJ0aWVzRmFsbGJhY2s8VExlbmd0aCwgVFRpbWU+IHt9CgpleHBvcnQgdHlwZSBWZW5kb3JMb25naGFuZFByb3BlcnRpZXNGYWxsYmFjazxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+ID0gRmFsbGJhY2s8VmVuZG9yTG9uZ2hhbmRQcm9wZXJ0aWVzPFRMZW5ndGgsIFRUaW1lPj47CgpleHBvcnQgdHlwZSBWZW5kb3JTaG9ydGhhbmRQcm9wZXJ0aWVzRmFsbGJhY2s8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwLCBUVGltZSA9IHN0cmluZyAmIHt9PiA9IEZhbGxiYWNrPFZlbmRvclNob3J0aGFuZFByb3BlcnRpZXM8VExlbmd0aCwgVFRpbWU+PjsKCmV4cG9ydCBpbnRlcmZhY2UgVmVuZG9yUHJvcGVydGllc0ZhbGxiYWNrPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMCwgVFRpbWUgPSBzdHJpbmcgJiB7fT4KICBleHRlbmRzIFZlbmRvckxvbmdoYW5kUHJvcGVydGllc0ZhbGxiYWNrPFRMZW5ndGgsIFRUaW1lPiwKICAgIFZlbmRvclNob3J0aGFuZFByb3BlcnRpZXNGYWxsYmFjazxUTGVuZ3RoLCBUVGltZT4ge30KCmV4cG9ydCB0eXBlIE9ic29sZXRlUHJvcGVydGllc0ZhbGxiYWNrPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMCwgVFRpbWUgPSBzdHJpbmcgJiB7fT4gPSBGYWxsYmFjazxPYnNvbGV0ZVByb3BlcnRpZXM8VExlbmd0aCwgVFRpbWU+PjsKCmV4cG9ydCB0eXBlIFN2Z1Byb3BlcnRpZXNGYWxsYmFjazxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+ID0gRmFsbGJhY2s8U3ZnUHJvcGVydGllczxUTGVuZ3RoLCBUVGltZT4+OwoKZXhwb3J0IGludGVyZmFjZSBQcm9wZXJ0aWVzRmFsbGJhY2s8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwLCBUVGltZSA9IHN0cmluZyAmIHt9PgogIGV4dGVuZHMgU3RhbmRhcmRQcm9wZXJ0aWVzRmFsbGJhY2s8VExlbmd0aCwgVFRpbWU+LAogICAgVmVuZG9yUHJvcGVydGllc0ZhbGxiYWNrPFRMZW5ndGgsIFRUaW1lPiwKICAgIE9ic29sZXRlUHJvcGVydGllc0ZhbGxiYWNrPFRMZW5ndGgsIFRUaW1lPiwKICAgIFN2Z1Byb3BlcnRpZXNGYWxsYmFjazxUTGVuZ3RoLCBUVGltZT4ge30KCmV4cG9ydCB0eXBlIFN0YW5kYXJkTG9uZ2hhbmRQcm9wZXJ0aWVzSHlwaGVuRmFsbGJhY2s8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwLCBUVGltZSA9IHN0cmluZyAmIHt9PiA9IEZhbGxiYWNrPFN0YW5kYXJkTG9uZ2hhbmRQcm9wZXJ0aWVzSHlwaGVuPFRMZW5ndGgsIFRUaW1lPj47CgpleHBvcnQgdHlwZSBTdGFuZGFyZFNob3J0aGFuZFByb3BlcnRpZXNIeXBoZW5GYWxsYmFjazxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+ID0gRmFsbGJhY2s8U3RhbmRhcmRTaG9ydGhhbmRQcm9wZXJ0aWVzSHlwaGVuPFRMZW5ndGgsIFRUaW1lPj47CgpleHBvcnQgaW50ZXJmYWNlIFN0YW5kYXJkUHJvcGVydGllc0h5cGhlbkZhbGxiYWNrPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMCwgVFRpbWUgPSBzdHJpbmcgJiB7fT4KICBleHRlbmRzIFN0YW5kYXJkTG9uZ2hhbmRQcm9wZXJ0aWVzSHlwaGVuRmFsbGJhY2s8VExlbmd0aCwgVFRpbWU+LAogICAgU3RhbmRhcmRTaG9ydGhhbmRQcm9wZXJ0aWVzSHlwaGVuRmFsbGJhY2s8VExlbmd0aCwgVFRpbWU+IHt9CgpleHBvcnQgdHlwZSBWZW5kb3JMb25naGFuZFByb3BlcnRpZXNIeXBoZW5GYWxsYmFjazxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+ID0gRmFsbGJhY2s8VmVuZG9yTG9uZ2hhbmRQcm9wZXJ0aWVzSHlwaGVuPFRMZW5ndGgsIFRUaW1lPj47CgpleHBvcnQgdHlwZSBWZW5kb3JTaG9ydGhhbmRQcm9wZXJ0aWVzSHlwaGVuRmFsbGJhY2s8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwLCBUVGltZSA9IHN0cmluZyAmIHt9PiA9IEZhbGxiYWNrPFZlbmRvclNob3J0aGFuZFByb3BlcnRpZXNIeXBoZW48VExlbmd0aCwgVFRpbWU+PjsKCmV4cG9ydCBpbnRlcmZhY2UgVmVuZG9yUHJvcGVydGllc0h5cGhlbkZhbGxiYWNrPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMCwgVFRpbWUgPSBzdHJpbmcgJiB7fT4KICBleHRlbmRzIFZlbmRvckxvbmdoYW5kUHJvcGVydGllc0h5cGhlbkZhbGxiYWNrPFRMZW5ndGgsIFRUaW1lPiwKICAgIFZlbmRvclNob3J0aGFuZFByb3BlcnRpZXNIeXBoZW5GYWxsYmFjazxUTGVuZ3RoLCBUVGltZT4ge30KCmV4cG9ydCB0eXBlIE9ic29sZXRlUHJvcGVydGllc0h5cGhlbkZhbGxiYWNrPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMCwgVFRpbWUgPSBzdHJpbmcgJiB7fT4gPSBGYWxsYmFjazxPYnNvbGV0ZVByb3BlcnRpZXNIeXBoZW48VExlbmd0aCwgVFRpbWU+PjsKCmV4cG9ydCB0eXBlIFN2Z1Byb3BlcnRpZXNIeXBoZW5GYWxsYmFjazxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+ID0gRmFsbGJhY2s8U3ZnUHJvcGVydGllc0h5cGhlbjxUTGVuZ3RoLCBUVGltZT4+OwoKZXhwb3J0IGludGVyZmFjZSBQcm9wZXJ0aWVzSHlwaGVuRmFsbGJhY2s8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwLCBUVGltZSA9IHN0cmluZyAmIHt9PgogIGV4dGVuZHMgU3RhbmRhcmRQcm9wZXJ0aWVzSHlwaGVuRmFsbGJhY2s8VExlbmd0aCwgVFRpbWU+LAogICAgVmVuZG9yUHJvcGVydGllc0h5cGhlbkZhbGxiYWNrPFRMZW5ndGgsIFRUaW1lPiwKICAgIE9ic29sZXRlUHJvcGVydGllc0h5cGhlbkZhbGxiYWNrPFRMZW5ndGgsIFRUaW1lPiwKICAgIFN2Z1Byb3BlcnRpZXNIeXBoZW5GYWxsYmFjazxUTGVuZ3RoLCBUVGltZT4ge30KCmV4cG9ydCB0eXBlIEF0UnVsZXMgPQogIHwgIkBjaGFyc2V0IgogIHwgIkBjb3VudGVyLXN0eWxlIgogIHwgIkBkb2N1bWVudCIKICB8ICJAZm9udC1mYWNlIgogIHwgIkBmb250LWZlYXR1cmUtdmFsdWVzIgogIHwgIkBpbXBvcnQiCiAgfCAiQGtleWZyYW1lcyIKICB8ICJAbWVkaWEiCiAgfCAiQG5hbWVzcGFjZSIKICB8ICJAcGFnZSIKICB8ICJAcHJvcGVydHkiCiAgfCAiQHN1cHBvcnRzIgogIHwgIkB2aWV3cG9ydCI7CgpleHBvcnQgdHlwZSBBZHZhbmNlZFBzZXVkb3MgPQogIHwgIjotbW96LWFueSgpIgogIHwgIjotbW96LWRpciIKICB8ICI6LXdlYmtpdC1hbnkoKSIKICB8ICI6OmN1ZSIKICB8ICI6OmN1ZS1yZWdpb24iCiAgfCAiOjpwYXJ0IgogIHwgIjo6c2xvdHRlZCIKICB8ICI6ZGlyIgogIHwgIjpoYXMiCiAgfCAiOmhvc3QiCiAgfCAiOmhvc3QtY29udGV4dCIKICB8ICI6aXMiCiAgfCAiOmxhbmciCiAgfCAiOm1hdGNoZXMoKSIKICB8ICI6bm90IgogIHwgIjpudGgtY2hpbGQiCiAgfCAiOm50aC1sYXN0LWNoaWxkIgogIHwgIjpudGgtbGFzdC1vZi10eXBlIgogIHwgIjpudGgtb2YtdHlwZSIKICB8ICI6d2hlcmUiOwoKZXhwb3J0IHR5cGUgU2ltcGxlUHNldWRvcyA9CiAgfCAiOi1raHRtbC1hbnktbGluayIKICB8ICI6LW1vei1hbnktbGluayIKICB8ICI6LW1vei1mb2N1c3JpbmciCiAgfCAiOi1tb3otZnVsbC1zY3JlZW4iCiAgfCAiOi1tb3otcGxhY2Vob2xkZXIiCiAgfCAiOi1tb3otcmVhZC1vbmx5IgogIHwgIjotbW96LXJlYWQtd3JpdGUiCiAgfCAiOi1tb3otdWktaW52YWxpZCIKICB8ICI6LW1vei11aS12YWxpZCIKICB8ICI6LW1zLWZ1bGxzY3JlZW4iCiAgfCAiOi1tcy1pbnB1dC1wbGFjZWhvbGRlciIKICB8ICI6LXdlYmtpdC1hbnktbGluayIKICB8ICI6LXdlYmtpdC1mdWxsLXNjcmVlbiIKICB8ICI6Oi1tb3otcGxhY2Vob2xkZXIiCiAgfCAiOjotbW96LXByb2dyZXNzLWJhciIKICB8ICI6Oi1tb3otcmFuZ2UtcHJvZ3Jlc3MiCiAgfCAiOjotbW96LXJhbmdlLXRodW1iIgogIHwgIjo6LW1vei1yYW5nZS10cmFjayIKICB8ICI6Oi1tb3otc2VsZWN0aW9uIgogIHwgIjo6LW1zLWJhY2tkcm9wIgogIHwgIjo6LW1zLWJyb3dzZSIKICB8ICI6Oi1tcy1jaGVjayIKICB8ICI6Oi1tcy1jbGVhciIKICB8ICI6Oi1tcy1maWxsIgogIHwgIjo6LW1zLWZpbGwtbG93ZXIiCiAgfCAiOjotbXMtZmlsbC11cHBlciIKICB8ICI6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciIKICB8ICI6Oi1tcy1yZXZlYWwiCiAgfCAiOjotbXMtdGh1bWIiCiAgfCAiOjotbXMtdGlja3MtYWZ0ZXIiCiAgfCAiOjotbXMtdGlja3MtYmVmb3JlIgogIHwgIjo6LW1zLXRvb2x0aXAiCiAgfCAiOjotbXMtdHJhY2siCiAgfCAiOjotbXMtdmFsdWUiCiAgfCAiOjotd2Via2l0LWJhY2tkcm9wIgogIHwgIjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciIKICB8ICI6Oi13ZWJraXQtcHJvZ3Jlc3MtYmFyIgogIHwgIjo6LXdlYmtpdC1wcm9ncmVzcy1pbm5lci12YWx1ZSIKICB8ICI6Oi13ZWJraXQtcHJvZ3Jlc3MtdmFsdWUiCiAgfCAiOjotd2Via2l0LXNsaWRlci1ydW5uYWJsZS10cmFjayIKICB8ICI6Oi13ZWJraXQtc2xpZGVyLXRodW1iIgogIHwgIjo6YWZ0ZXIiCiAgfCAiOjpiYWNrZHJvcCIKICB8ICI6OmJlZm9yZSIKICB8ICI6OmN1ZSIKICB8ICI6OmN1ZS1yZWdpb24iCiAgfCAiOjpmaXJzdC1sZXR0ZXIiCiAgfCAiOjpmaXJzdC1saW5lIgogIHwgIjo6Z3JhbW1hci1lcnJvciIKICB8ICI6Om1hcmtlciIKICB8ICI6OnBsYWNlaG9sZGVyIgogIHwgIjo6c2VsZWN0aW9uIgogIHwgIjo6c3BlbGxpbmctZXJyb3IiCiAgfCAiOjp0YXJnZXQtdGV4dCIKICB8ICI6YWN0aXZlIgogIHwgIjphZnRlciIKICB8ICI6YW55LWxpbmsiCiAgfCAiOmJlZm9yZSIKICB8ICI6YmxhbmsiCiAgfCAiOmNoZWNrZWQiCiAgfCAiOmN1cnJlbnQiCiAgfCAiOmRlZmF1bHQiCiAgfCAiOmRlZmluZWQiCiAgfCAiOmRpc2FibGVkIgogIHwgIjplbXB0eSIKICB8ICI6ZW5hYmxlZCIKICB8ICI6Zmlyc3QiCiAgfCAiOmZpcnN0LWNoaWxkIgogIHwgIjpmaXJzdC1sZXR0ZXIiCiAgfCAiOmZpcnN0LWxpbmUiCiAgfCAiOmZpcnN0LW9mLXR5cGUiCiAgfCAiOmZvY3VzIgogIHwgIjpmb2N1cy12aXNpYmxlIgogIHwgIjpmb2N1cy13aXRoaW4iCiAgfCAiOmZ1bGxzY3JlZW4iCiAgfCAiOmZ1dHVyZSIKICB8ICI6aG92ZXIiCiAgfCAiOmluLXJhbmdlIgogIHwgIjppbmRldGVybWluYXRlIgogIHwgIjppbnZhbGlkIgogIHwgIjpsYXN0LWNoaWxkIgogIHwgIjpsYXN0LW9mLXR5cGUiCiAgfCAiOmxlZnQiCiAgfCAiOmxpbmsiCiAgfCAiOmxvY2FsLWxpbmsiCiAgfCAiOm50aC1jb2wiCiAgfCAiOm50aC1sYXN0LWNvbCIKICB8ICI6b25seS1jaGlsZCIKICB8ICI6b25seS1vZi10eXBlIgogIHwgIjpvcHRpb25hbCIKICB8ICI6b3V0LW9mLXJhbmdlIgogIHwgIjpwYXN0IgogIHwgIjpwYXVzZWQiCiAgfCAiOnBpY3R1cmUtaW4tcGljdHVyZSIKICB8ICI6cGxhY2Vob2xkZXItc2hvd24iCiAgfCAiOnJlYWQtb25seSIKICB8ICI6cmVhZC13cml0ZSIKICB8ICI6cmVxdWlyZWQiCiAgfCAiOnJpZ2h0IgogIHwgIjpyb290IgogIHwgIjpzY29wZSIKICB8ICI6dGFyZ2V0IgogIHwgIjp0YXJnZXQtd2l0aGluIgogIHwgIjp1c2VyLWludmFsaWQiCiAgfCAiOnVzZXItdmFsaWQiCiAgfCAiOnZhbGlkIgogIHwgIjp2aXNpdGVkIjsKCmV4cG9ydCB0eXBlIFBzZXVkb3MgPSBBZHZhbmNlZFBzZXVkb3MgfCBTaW1wbGVQc2V1ZG9zOwoKZXhwb3J0IHR5cGUgSHRtbEF0dHJpYnV0ZXMgPQogIHwgIlthYmJyXSIKICB8ICJbYWNjZXB0LWNoYXJzZXRdIgogIHwgIlthY2NlcHRdIgogIHwgIlthY2Nlc3NrZXldIgogIHwgIlthY3Rpb25dIgogIHwgIlthbGlnbl0iCiAgfCAiW2FsaW5rXSIKICB8ICJbYWxsb3ddIgogIHwgIlthbGxvd2Z1bGxzY3JlZW5dIgogIHwgIlthbGxvd3BheW1lbnRyZXF1ZXN0XSIKICB8ICJbYWx0XSIKICB8ICJbYXJjaGl2ZV0iCiAgfCAiW2FzeW5jXSIKICB8ICJbYXV0b2J1ZmZlcl0iCiAgfCAiW2F1dG9jYXBpdGFsaXplXSIKICB8ICJbYXV0b2NvbXBsZXRlXSIKICB8ICJbYXV0b2ZvY3VzXSIKICB8ICJbYXV0b3BsYXldIgogIHwgIltheGlzXSIKICB8ICJbYmFja2dyb3VuZF0iCiAgfCAiW2JlaGF2aW9yXSIKICB8ICJbYmdjb2xvcl0iCiAgfCAiW2JvcmRlcl0iCiAgfCAiW2JvdHRvbW1hcmdpbl0iCiAgfCAiW2J1ZmZlcmVkXSIKICB8ICJbY2VsbHBhZGRpbmddIgogIHwgIltjZWxsc3BhY2luZ10iCiAgfCAiW2NoYXJdIgogIHwgIltjaGFyb2ZmXSIKICB8ICJbY2hhcnNldF0iCiAgfCAiW2NoZWNrZWRdIgogIHwgIltjaXRlXSIKICB8ICJbY2xhc3NdIgogIHwgIltjbGFzc2lkXSIKICB8ICJbY2xlYXJdIgogIHwgIltjb2RlXSIKICB8ICJbY29kZWJhc2VdIgogIHwgIltjb2RldHlwZV0iCiAgfCAiW2NvbG9yXSIKICB8ICJbY29sc10iCiAgfCAiW2NvbHNwYW5dIgogIHwgIltjb21tYW5kXSIKICB8ICJbY29tcGFjdF0iCiAgfCAiW2NvbnRlbnRdIgogIHwgIltjb250ZW50ZWRpdGFibGVdIgogIHwgIltjb250ZXh0bWVudV0iCiAgfCAiW2NvbnRyb2xzXSIKICB8ICJbY29vcmRzXSIKICB8ICJbY3Jvc3NvcmlnaW5dIgogIHwgIltkYXRhXSIKICB8ICJbZGF0YWZsZF0iCiAgfCAiW2RhdGFzcmNdIgogIHwgIltkYXRldGltZV0iCiAgfCAiW2RlY2xhcmVdIgogIHwgIltkZWNvZGluZ10iCiAgfCAiW2RlZmF1bHRdIgogIHwgIltkZWZlcl0iCiAgfCAiW2Rpcl0iCiAgfCAiW2RpcmVjdGlvbl0iCiAgfCAiW2Rpcm5hbWVdIgogIHwgIltkaXNhYmxlZF0iCiAgfCAiW2Rvd25sb2FkXSIKICB8ICJbZHJhZ2dhYmxlXSIKICB8ICJbZW5jdHlwZV0iCiAgfCAiW2VudGVya2V5aGludF0iCiAgfCAiW2V4cG9ydHBhcnRzXSIKICB8ICJbZmFjZV0iCiAgfCAiW2Zvcl0iCiAgfCAiW2Zvcm1dIgogIHwgIltmb3JtYWN0aW9uXSIKICB8ICJbZm9ybWVuY3R5cGVdIgogIHwgIltmb3JtbWV0aG9kXSIKICB8ICJbZm9ybW5vdmFsaWRhdGVdIgogIHwgIltmb3JtdGFyZ2V0XSIKICB8ICJbZnJhbWVdIgogIHwgIltmcmFtZWJvcmRlcl0iCiAgfCAiW2hlYWRlcnNdIgogIHwgIltoZWlnaHRdIgogIHwgIltoaWRkZW5dIgogIHwgIltoaWdoXSIKICB8ICJbaHJlZl0iCiAgfCAiW2hyZWZsYW5nXSIKICB8ICJbaHNwYWNlXSIKICB8ICJbaHR0cC1lcXVpdl0iCiAgfCAiW2ljb25dIgogIHwgIltpZF0iCiAgfCAiW2ltYWdlc2l6ZXNdIgogIHwgIltpbWFnZXNyY3NldF0iCiAgfCAiW2lucHV0bW9kZV0iCiAgfCAiW2ludGVncml0eV0iCiAgfCAiW2ludHJpbnNpY3NpemVdIgogIHwgIltpc10iCiAgfCAiW2lzbWFwXSIKICB8ICJbaXRlbWlkXSIKICB8ICJbaXRlbXByb3BdIgogIHwgIltpdGVtcmVmXSIKICB8ICJbaXRlbXNjb3BlXSIKICB8ICJbaXRlbXR5cGVdIgogIHwgIltraW5kXSIKICB8ICJbbGFiZWxdIgogIHwgIltsYW5nXSIKICB8ICJbbGFuZ3VhZ2VdIgogIHwgIltsZWZ0bWFyZ2luXSIKICB8ICJbbGlua10iCiAgfCAiW2xvYWRpbmddIgogIHwgIltsb25nZGVzY10iCiAgfCAiW2xvb3BdIgogIHwgIltsb3ddIgogIHwgIlttYW5pZmVzdF0iCiAgfCAiW21hcmdpbmhlaWdodF0iCiAgfCAiW21hcmdpbndpZHRoXSIKICB8ICJbbWF4XSIKICB8ICJbbWF4bGVuZ3RoXSIKICB8ICJbbWF5c2NyaXB0XSIKICB8ICJbbWVkaWFdIgogIHwgIlttZXRob2RdIgogIHwgIlttZXRob2RzXSIKICB8ICJbbWluXSIKICB8ICJbbWlubGVuZ3RoXSIKICB8ICJbbW96LW9wYXF1ZV0iCiAgfCAiW21vemFsbG93ZnVsbHNjcmVlbl0iCiAgfCAiW21vemN1cnJlbnRzYW1wbGVvZmZzZXRdIgogIHwgIlttc2FsbG93ZnVsbHNjcmVlbl0iCiAgfCAiW211bHRpcGxlXSIKICB8ICJbbXV0ZWRdIgogIHwgIltuYW1lXSIKICB8ICJbbm9ocmVmXSIKICB8ICJbbm9tb2R1bGVdIgogIHwgIltub25jZV0iCiAgfCAiW25vcmVzaXplXSIKICB8ICJbbm9zaGFkZV0iCiAgfCAiW25vdmFsaWRhdGVdIgogIHwgIltub3dyYXBdIgogIHwgIltvYmplY3RdIgogIHwgIltvbmFmdGVycHJpbnRdIgogIHwgIltvbmJlZm9yZXByaW50XSIKICB8ICJbb25iZWZvcmV1bmxvYWRdIgogIHwgIltvbmJsdXJdIgogIHwgIltvbmVycm9yXSIKICB8ICJbb25mb2N1c10iCiAgfCAiW29uaGFzaGNoYW5nZV0iCiAgfCAiW29ubGFuZ3VhZ2VjaGFuZ2VdIgogIHwgIltvbmxvYWRdIgogIHwgIltvbm1lc3NhZ2VdIgogIHwgIltvbm9mZmxpbmVdIgogIHwgIltvbm9ubGluZV0iCiAgfCAiW29ucG9wc3RhdGVdIgogIHwgIltvbnJlZG9dIgogIHwgIltvbnJlc2l6ZV0iCiAgfCAiW29uc3RvcmFnZV0iCiAgfCAiW29udW5kb10iCiAgfCAiW29udW5sb2FkXSIKICB8ICJbb3Blbl0iCiAgfCAiW29wdGltdW1dIgogIHwgIltwYXJ0XSIKICB8ICJbcGluZ10iCiAgfCAiW3BsYWNlaG9sZGVyXSIKICB8ICJbcGxheWVkXSIKICB8ICJbcG9zdGVyXSIKICB8ICJbcHJlZmV0Y2hdIgogIHwgIltwcmVsb2FkXSIKICB8ICJbcHJvZmlsZV0iCiAgfCAiW3JhZGlvZ3JvdXBdIgogIHwgIltyZWFkb25seV0iCiAgfCAiW3JlZmVycmVycG9saWN5XSIKICB8ICJbcmVsXSIKICB8ICJbcmVxdWlyZWRdIgogIHwgIltyZXZdIgogIHwgIltyZXZlcnNlZF0iCiAgfCAiW3JpZ2h0bWFyZ2luXSIKICB8ICJbcm93c10iCiAgfCAiW3Jvd3NwYW5dIgogIHwgIltydWxlc10iCiAgfCAiW3NhbmRib3gtYWxsb3ctZG93bmxvYWRzXSIKICB8ICJbc2FuZGJveC1hbGxvdy1tb2RhbHNdIgogIHwgIltzYW5kYm94LWFsbG93LXBvcHVwcy10by1lc2NhcGUtc2FuZGJveF0iCiAgfCAiW3NhbmRib3gtYWxsb3ctcG9wdXBzXSIKICB8ICJbc2FuZGJveC1hbGxvdy1wcmVzZW50YXRpb25dIgogIHwgIltzYW5kYm94LWFsbG93LXNhbWUtb3JpZ2luXSIKICB8ICJbc2FuZGJveC1hbGxvdy1zdG9yYWdlLWFjY2Vzcy1ieS11c2VyLWFjdGl2YXRpb25dIgogIHwgIltzYW5kYm94LWFsbG93LXRvcC1uYXZpZ2F0aW9uLWJ5LXVzZXItYWN0aXZhdGlvbl0iCiAgfCAiW3NhbmRib3hdIgogIHwgIltzY29wZV0iCiAgfCAiW3Njb3BlZF0iCiAgfCAiW3Njcm9sbGFtb3VudF0iCiAgfCAiW3Njcm9sbGRlbGF5XSIKICB8ICJbc2Nyb2xsaW5nXSIKICB8ICJbc2VsZWN0ZWRdIgogIHwgIltzaGFwZV0iCiAgfCAiW3NpemVdIgogIHwgIltzaXplc10iCiAgfCAiW3Nsb3RdIgogIHwgIltzcGFuXSIKICB8ICJbc3BlbGxjaGVja10iCiAgfCAiW3NyY10iCiAgfCAiW3NyY2RvY10iCiAgfCAiW3NyY2xhbmddIgogIHwgIltzcmNzZXRdIgogIHwgIltzdGFuZGJ5XSIKICB8ICJbc3RhcnRdIgogIHwgIltzdHlsZV0iCiAgfCAiW3N1bW1hcnldIgogIHwgIlt0YWJpbmRleF0iCiAgfCAiW3RhcmdldF0iCiAgfCAiW3RleHRdIgogIHwgIlt0aXRsZV0iCiAgfCAiW3RvcG1hcmdpbl0iCiAgfCAiW3RyYW5zbGF0ZV0iCiAgfCAiW3RydWVzcGVlZF0iCiAgfCAiW3R5cGVdIgogIHwgIlt1c2VtYXBdIgogIHwgIlt2YWxpZ25dIgogIHwgIlt2YWx1ZV0iCiAgfCAiW3ZhbHVldHlwZV0iCiAgfCAiW3ZlcnNpb25dIgogIHwgIlt2bGlua10iCiAgfCAiW3ZvbHVtZV0iCiAgfCAiW3ZzcGFjZV0iCiAgfCAiW3dlYmtpdGFsbG93ZnVsbHNjcmVlbl0iCiAgfCAiW3dpZHRoXSIKICB8ICJbd3JhcF0iCiAgfCAiW3htbG5zXSI7CgpleHBvcnQgdHlwZSBTdmdBdHRyaWJ1dGVzID0KICB8ICJbYWNjZW50LWhlaWdodF0iCiAgfCAiW2FsaWdubWVudC1iYXNlbGluZV0iCiAgfCAiW2FsbG93UmVvcmRlcl0iCiAgfCAiW2FscGhhYmV0aWNdIgogIHwgIlthbmltYXRpb25dIgogIHwgIlthcmFiaWMtZm9ybV0iCiAgfCAiW2FzY2VudF0iCiAgfCAiW2F0dHJpYnV0ZU5hbWVdIgogIHwgIlthdHRyaWJ1dGVUeXBlXSIKICB8ICJbYXppbXV0aF0iCiAgfCAiW2Jhc2VGcmVxdWVuY3ldIgogIHwgIltiYXNlUHJvZmlsZV0iCiAgfCAiW2Jhc2VsaW5lLXNoaWZ0XSIKICB8ICJbYmJveF0iCiAgfCAiW2JpYXNdIgogIHwgIltieV0iCiAgfCAiW2NhbGNNb2RlXSIKICB8ICJbY2FwLWhlaWdodF0iCiAgfCAiW2NsYXNzXSIKICB8ICJbY2xpcC1wYXRoXSIKICB8ICJbY2xpcC1ydWxlXSIKICB8ICJbY2xpcFBhdGhVbml0c10iCiAgfCAiW2NsaXBdIgogIHwgIltjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnNdIgogIHwgIltjb2xvci1pbnRlcnBvbGF0aW9uXSIKICB8ICJbY29sb3ItcHJvZmlsZV0iCiAgfCAiW2NvbG9yLXJlbmRlcmluZ10iCiAgfCAiW2NvbG9yXSIKICB8ICJbY29udGVudFNjcmlwdFR5cGVdIgogIHwgIltjb250ZW50U3R5bGVUeXBlXSIKICB8ICJbY3Vyc29yXSIKICB8ICJbY3hdIgogIHwgIltjeV0iCiAgfCAiW2RdIgogIHwgIltkZXNjZW50XSIKICB8ICJbZGlmZnVzZUNvbnN0YW50XSIKICB8ICJbZGlyZWN0aW9uXSIKICB8ICJbZGlzcGxheV0iCiAgfCAiW2Rpdmlzb3JdIgogIHwgIltkb2N1bWVudF0iCiAgfCAiW2RvbWluYW50LWJhc2VsaW5lXSIKICB8ICJbZG93bmxvYWRdIgogIHwgIltkdXJdIgogIHwgIltkeF0iCiAgfCAiW2R5XSIKICB8ICJbZWRnZU1vZGVdIgogIHwgIltlbGV2YXRpb25dIgogIHwgIltlbmFibGUtYmFja2dyb3VuZF0iCiAgfCAiW2ZpbGwtb3BhY2l0eV0iCiAgfCAiW2ZpbGwtcnVsZV0iCiAgfCAiW2ZpbGxdIgogIHwgIltmaWx0ZXJSZXNdIgogIHwgIltmaWx0ZXJVbml0c10iCiAgfCAiW2ZpbHRlcl0iCiAgfCAiW2Zsb29kLWNvbG9yXSIKICB8ICJbZmxvb2Qtb3BhY2l0eV0iCiAgfCAiW2ZvbnQtZmFtaWx5XSIKICB8ICJbZm9udC1zaXplLWFkanVzdF0iCiAgfCAiW2ZvbnQtc2l6ZV0iCiAgfCAiW2ZvbnQtc3RyZXRjaF0iCiAgfCAiW2ZvbnQtc3R5bGVdIgogIHwgIltmb250LXZhcmlhbnRdIgogIHwgIltmb250LXdlaWdodF0iCiAgfCAiW2Zvcm1hdF0iCiAgfCAiW2ZyXSIKICB8ICJbZnJvbV0iCiAgfCAiW2Z4XSIKICB8ICJbZnldIgogIHwgIltnMV0iCiAgfCAiW2cyXSIKICB8ICJbZ2xvYmFsXSIKICB8ICJbZ2x5cGgtbmFtZV0iCiAgfCAiW2dseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWxdIgogIHwgIltnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbF0iCiAgfCAiW2dseXBoUmVmXSIKICB8ICJbZ3JhZGllbnRUcmFuc2Zvcm1dIgogIHwgIltncmFkaWVudFVuaXRzXSIKICB8ICJbZ3JhcGhpY2FsXSIKICB8ICJbaGFuZ2luZ10iCiAgfCAiW2hhdGNoQ29udGVudFVuaXRzXSIKICB8ICJbaGF0Y2hVbml0c10iCiAgfCAiW2hlaWdodF0iCiAgfCAiW2hvcml6LWFkdi14XSIKICB8ICJbaG9yaXotb3JpZ2luLXhdIgogIHwgIltob3Jpei1vcmlnaW4teV0iCiAgfCAiW2hyZWZdIgogIHwgIltocmVmbGFuZ10iCiAgfCAiW2lkXSIKICB8ICJbaWRlb2dyYXBoaWNdIgogIHwgIltpbWFnZS1yZW5kZXJpbmddIgogIHwgIltpbjJdIgogIHwgIltpbl0iCiAgfCAiW2sxXSIKICB8ICJbazJdIgogIHwgIltrM10iCiAgfCAiW2s0XSIKICB8ICJba10iCiAgfCAiW2tlcm5lbE1hdHJpeF0iCiAgfCAiW2tlcm5lbFVuaXRMZW5ndGhdIgogIHwgIltrZXJuaW5nXSIKICB8ICJba2V5UG9pbnRzXSIKICB8ICJbbGFuZ10iCiAgfCAiW2xlbmd0aEFkanVzdF0iCiAgfCAiW2xldHRlci1zcGFjaW5nXSIKICB8ICJbbGlnaHRpbmctY29sb3JdIgogIHwgIltsaW1pdGluZ0NvbmVBbmdsZV0iCiAgfCAiW21hcmtlci1lbmRdIgogIHwgIlttYXJrZXItbWlkXSIKICB8ICJbbWFya2VyLXN0YXJ0XSIKICB8ICJbbWFya2VySGVpZ2h0XSIKICB8ICJbbWFya2VyVW5pdHNdIgogIHwgIlttYXJrZXJXaWR0aF0iCiAgfCAiW21hc2tDb250ZW50VW5pdHNdIgogIHwgIlttYXNrVW5pdHNdIgogIHwgIlttYXNrXSIKICB8ICJbbWF0aGVtYXRpY2FsXSIKICB8ICJbbWVkaWFdIgogIHwgIlttb2RlXSIKICB8ICJbbmFtZV0iCiAgfCAiW251bU9jdGF2ZXNdIgogIHwgIltvZmZzZXRdIgogIHwgIltvcGFjaXR5XSIKICB8ICJbb3BlcmF0b3JdIgogIHwgIltvcmRlcl0iCiAgfCAiW29yaWVudF0iCiAgfCAiW29yaWVudGF0aW9uXSIKICB8ICJbb3JpZ2luXSIKICB8ICJbb3ZlcmZsb3ddIgogIHwgIltvdmVybGluZS1wb3NpdGlvbl0iCiAgfCAiW292ZXJsaW5lLXRoaWNrbmVzc10iCiAgfCAiW3BhaW50LW9yZGVyXSIKICB8ICJbcGFub3NlLTFdIgogIHwgIltwYXRoXSIKICB8ICJbcGF0dGVybkNvbnRlbnRVbml0c10iCiAgfCAiW3BhdHRlcm5UcmFuc2Zvcm1dIgogIHwgIltwYXR0ZXJuVW5pdHNdIgogIHwgIltwaW5nXSIKICB8ICJbcGl0Y2hdIgogIHwgIltwb2ludGVyLWV2ZW50c10iCiAgfCAiW3BvaW50c0F0WF0iCiAgfCAiW3BvaW50c0F0WV0iCiAgfCAiW3BvaW50c0F0Wl0iCiAgfCAiW3BvaW50c10iCiAgfCAiW3ByZXNlcnZlQWxwaGFdIgogIHwgIltwcmVzZXJ2ZUFzcGVjdFJhdGlvXSIKICB8ICJbcHJpbWl0aXZlVW5pdHNdIgogIHwgIltyXSIKICB8ICJbcmFkaXVzXSIKICB8ICJbcmVmWF0iCiAgfCAiW3JlZlldIgogIHwgIltyZWZlcnJlcnBvbGljeV0iCiAgfCAiW3JlbF0iCiAgfCAiW3JlcGVhdENvdW50XSIKICB8ICJbcmVxdWlyZWRFeHRlbnNpb25zXSIKICB8ICJbcmVxdWlyZWRGZWF0dXJlc10iCiAgfCAiW3JvdGF0ZV0iCiAgfCAiW3J4XSIKICB8ICJbcnldIgogIHwgIltzY2FsZV0iCiAgfCAiW3NlZWRdIgogIHwgIltzaGFwZS1yZW5kZXJpbmddIgogIHwgIltzaWRlXSIKICB8ICJbc2xvcGVdIgogIHwgIltzb2xpZC1jb2xvcl0iCiAgfCAiW3NvbGlkLW9wYWNpdHldIgogIHwgIltzcGFjaW5nXSIKICB8ICJbc3BlY3VsYXJDb25zdGFudF0iCiAgfCAiW3NwZWN1bGFyRXhwb25lbnRdIgogIHwgIltzcHJlYWRNZXRob2RdIgogIHwgIltzdGFydE9mZnNldF0iCiAgfCAiW3N0ZERldmlhdGlvbl0iCiAgfCAiW3N0ZW1oXSIKICB8ICJbc3RlbXZdIgogIHwgIltzdGl0Y2hUaWxlc10iCiAgfCAiW3N0b3AtY29sb3JdIgogIHwgIltzdG9wLW9wYWNpdHldIgogIHwgIltzdHJpa2V0aHJvdWdoLXBvc2l0aW9uXSIKICB8ICJbc3RyaWtldGhyb3VnaC10aGlja25lc3NdIgogIHwgIltzdHJpbmddIgogIHwgIltzdHJva2UtZGFzaGFycmF5XSIKICB8ICJbc3Ryb2tlLWRhc2hvZmZzZXRdIgogIHwgIltzdHJva2UtbGluZWNhcF0iCiAgfCAiW3N0cm9rZS1saW5lam9pbl0iCiAgfCAiW3N0cm9rZS1taXRlcmxpbWl0XSIKICB8ICJbc3Ryb2tlLW9wYWNpdHldIgogIHwgIltzdHJva2Utd2lkdGhdIgogIHwgIltzdHJva2VdIgogIHwgIltzdHlsZV0iCiAgfCAiW3N1cmZhY2VTY2FsZV0iCiAgfCAiW3N5c3RlbUxhbmd1YWdlXSIKICB8ICJbdGFiaW5kZXhdIgogIHwgIlt0YXJnZXRYXSIKICB8ICJbdGFyZ2V0WV0iCiAgfCAiW3RhcmdldF0iCiAgfCAiW3RleHQtYW5jaG9yXSIKICB8ICJbdGV4dC1kZWNvcmF0aW9uXSIKICB8ICJbdGV4dC1vdmVyZmxvd10iCiAgfCAiW3RleHQtcmVuZGVyaW5nXSIKICB8ICJbdGV4dExlbmd0aF0iCiAgfCAiW3RpdGxlXSIKICB8ICJbdG9dIgogIHwgIlt0cmFuc2Zvcm0tb3JpZ2luXSIKICB8ICJbdHJhbnNmb3JtXSIKICB8ICJbdHlwZV0iCiAgfCAiW3UxXSIKICB8ICJbdTJdIgogIHwgIlt1bmRlcmxpbmUtcG9zaXRpb25dIgogIHwgIlt1bmRlcmxpbmUtdGhpY2tuZXNzXSIKICB8ICJbdW5pY29kZS1iaWRpXSIKICB8ICJbdW5pY29kZS1yYW5nZV0iCiAgfCAiW3VuaWNvZGVdIgogIHwgIlt1bml0cy1wZXItZW1dIgogIHwgIlt2LWFscGhhYmV0aWNdIgogIHwgIlt2LWhhbmdpbmddIgogIHwgIlt2LWlkZW9ncmFwaGljXSIKICB8ICJbdi1tYXRoZW1hdGljYWxdIgogIHwgIlt2YWx1ZXNdIgogIHwgIlt2ZWN0b3ItZWZmZWN0XSIKICB8ICJbdmVyc2lvbl0iCiAgfCAiW3ZlcnQtYWR2LXldIgogIHwgIlt2ZXJ0LW9yaWdpbi14XSIKICB8ICJbdmVydC1vcmlnaW4teV0iCiAgfCAiW3ZpZXdCb3hdIgogIHwgIlt2aWV3VGFyZ2V0XSIKICB8ICJbdmlzaWJpbGl0eV0iCiAgfCAiW3doaXRlLXNwYWNlXSIKICB8ICJbd2lkdGhdIgogIHwgIlt3aWR0aHNdIgogIHwgIlt3b3JkLXNwYWNpbmddIgogIHwgIlt3cml0aW5nLW1vZGVdIgogIHwgIlt4LWhlaWdodF0iCiAgfCAiW3gxXSIKICB8ICJbeDJdIgogIHwgIlt4Q2hhbm5lbFNlbGVjdG9yXSIKICB8ICJbeF0iCiAgfCAiW3kxXSIKICB8ICJbeTJdIgogIHwgIlt5Q2hhbm5lbFNlbGVjdG9yXSIKICB8ICJbeV0iCiAgfCAiW3pdIgogIHwgIlt6b29tQW5kUGFuXSI7CgpleHBvcnQgdHlwZSBHbG9iYWxzID0gIi1tb3otaW5pdGlhbCIgfCAiaW5oZXJpdCIgfCAiaW5pdGlhbCIgfCAicmV2ZXJ0IiB8ICJ1bnNldCI7CgpleHBvcnQgbmFtZXNwYWNlIFByb3BlcnR5IHsKICBleHBvcnQgdHlwZSBBY2NlbnRDb2xvciA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Db2xvciB8ICJhdXRvIjsKCiAgZXhwb3J0IHR5cGUgQWxpZ25Db250ZW50ID0gR2xvYmFscyB8IERhdGFUeXBlLkNvbnRlbnREaXN0cmlidXRpb24gfCBEYXRhVHlwZS5Db250ZW50UG9zaXRpb24gfCAiYmFzZWxpbmUiIHwgIm5vcm1hbCIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBBbGlnbkl0ZW1zID0gR2xvYmFscyB8IERhdGFUeXBlLlNlbGZQb3NpdGlvbiB8ICJiYXNlbGluZSIgfCAibm9ybWFsIiB8ICJzdHJldGNoIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEFsaWduU2VsZiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5TZWxmUG9zaXRpb24gfCAiYXV0byIgfCAiYmFzZWxpbmUiIHwgIm5vcm1hbCIgfCAic3RyZXRjaCIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBBbGlnblRyYWNrcyA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Db250ZW50RGlzdHJpYnV0aW9uIHwgRGF0YVR5cGUuQ29udGVudFBvc2l0aW9uIHwgImJhc2VsaW5lIiB8ICJub3JtYWwiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQWxsID0gR2xvYmFsczsKCiAgZXhwb3J0IHR5cGUgQW5pbWF0aW9uPFRUaW1lID0gc3RyaW5nICYge30+ID0gR2xvYmFscyB8IERhdGFUeXBlLlNpbmdsZUFuaW1hdGlvbjxUVGltZT4gfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBBbmltYXRpb25EZWxheTxUVGltZSA9IHN0cmluZyAmIHt9PiA9IEdsb2JhbHMgfCBUVGltZSB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEFuaW1hdGlvbkRpcmVjdGlvbiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5TaW5nbGVBbmltYXRpb25EaXJlY3Rpb24gfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBBbmltYXRpb25EdXJhdGlvbjxUVGltZSA9IHN0cmluZyAmIHt9PiA9IEdsb2JhbHMgfCBUVGltZSB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEFuaW1hdGlvbkZpbGxNb2RlID0gR2xvYmFscyB8IERhdGFUeXBlLlNpbmdsZUFuaW1hdGlvbkZpbGxNb2RlIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQW5pbWF0aW9uSXRlcmF0aW9uQ291bnQgPSBHbG9iYWxzIHwgImluZmluaXRlIiB8IChzdHJpbmcgJiB7fSkgfCAobnVtYmVyICYge30pOwoKICBleHBvcnQgdHlwZSBBbmltYXRpb25OYW1lID0gR2xvYmFscyB8ICJub25lIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEFuaW1hdGlvblBsYXlTdGF0ZSA9IEdsb2JhbHMgfCAicGF1c2VkIiB8ICJydW5uaW5nIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEFuaW1hdGlvblRpbWluZ0Z1bmN0aW9uID0gR2xvYmFscyB8IERhdGFUeXBlLkVhc2luZ0Z1bmN0aW9uIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQXBwZWFyYW5jZSA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Db21wYXRBdXRvIHwgImF1dG8iIHwgIm1lbnVsaXN0LWJ1dHRvbiIgfCAibm9uZSIgfCAidGV4dGZpZWxkIjsKCiAgZXhwb3J0IHR5cGUgQXNwZWN0UmF0aW8gPSBHbG9iYWxzIHwgImF1dG8iIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQXppbXV0aCA9CiAgICB8IEdsb2JhbHMKICAgIHwgImJlaGluZCIKICAgIHwgImNlbnRlciIKICAgIHwgImNlbnRlci1sZWZ0IgogICAgfCAiY2VudGVyLXJpZ2h0IgogICAgfCAiZmFyLWxlZnQiCiAgICB8ICJmYXItcmlnaHQiCiAgICB8ICJsZWZ0IgogICAgfCAibGVmdC1zaWRlIgogICAgfCAibGVmdHdhcmRzIgogICAgfCAicmlnaHQiCiAgICB8ICJyaWdodC1zaWRlIgogICAgfCAicmlnaHR3YXJkcyIKICAgIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQmFja2Ryb3BGaWx0ZXIgPSBHbG9iYWxzIHwgIm5vbmUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQmFja2ZhY2VWaXNpYmlsaXR5ID0gR2xvYmFscyB8ICJoaWRkZW4iIHwgInZpc2libGUiOwoKICBleHBvcnQgdHlwZSBCYWNrZ3JvdW5kPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuRmluYWxCZ0xheWVyPFRMZW5ndGg+IHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQmFja2dyb3VuZEF0dGFjaG1lbnQgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQXR0YWNobWVudCB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEJhY2tncm91bmRCbGVuZE1vZGUgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQmxlbmRNb2RlIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQmFja2dyb3VuZENsaXAgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQm94IHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQmFja2dyb3VuZENvbG9yID0gR2xvYmFscyB8IERhdGFUeXBlLkNvbG9yOwoKICBleHBvcnQgdHlwZSBCYWNrZ3JvdW5kSW1hZ2UgPSBHbG9iYWxzIHwgIm5vbmUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQmFja2dyb3VuZE9yaWdpbiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Cb3ggfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBCYWNrZ3JvdW5kUG9zaXRpb248VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5CZ1Bvc2l0aW9uPFRMZW5ndGg+IHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQmFja2dyb3VuZFBvc2l0aW9uWDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiY2VudGVyIiB8ICJsZWZ0IiB8ICJyaWdodCIgfCAieC1lbmQiIHwgIngtc3RhcnQiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQmFja2dyb3VuZFBvc2l0aW9uWTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiYm90dG9tIiB8ICJjZW50ZXIiIHwgInRvcCIgfCAieS1lbmQiIHwgInktc3RhcnQiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQmFja2dyb3VuZFJlcGVhdCA9IEdsb2JhbHMgfCBEYXRhVHlwZS5SZXBlYXRTdHlsZSB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEJhY2tncm91bmRTaXplPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuQmdTaXplPFRMZW5ndGg+IHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQmxvY2tPdmVyZmxvdyA9IEdsb2JhbHMgfCAiY2xpcCIgfCAiZWxsaXBzaXMiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQmxvY2tTaXplPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPQogICAgfCBHbG9iYWxzCiAgICB8IFRMZW5ndGgKICAgIHwgIi1tb3otZml0LWNvbnRlbnQiCiAgICB8ICItbW96LW1heC1jb250ZW50IgogICAgfCAiLW1vei1taW4tY29udGVudCIKICAgIHwgIi13ZWJraXQtZmlsbC1hdmFpbGFibGUiCiAgICB8ICJhdXRvIgogICAgfCAiZml0LWNvbnRlbnQiCiAgICB8ICJtYXgtY29udGVudCIKICAgIHwgIm1pbi1jb250ZW50IgogICAgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBCb3JkZXI8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5MaW5lV2lkdGg8VExlbmd0aD4gfCBEYXRhVHlwZS5MaW5lU3R5bGUgfCBEYXRhVHlwZS5Db2xvciB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEJvcmRlckJsb2NrPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuTGluZVdpZHRoPFRMZW5ndGg+IHwgRGF0YVR5cGUuTGluZVN0eWxlIHwgRGF0YVR5cGUuQ29sb3IgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBCb3JkZXJCbG9ja0NvbG9yID0gR2xvYmFscyB8IERhdGFUeXBlLkNvbG9yIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQm9yZGVyQmxvY2tFbmQ8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5MaW5lV2lkdGg8VExlbmd0aD4gfCBEYXRhVHlwZS5MaW5lU3R5bGUgfCBEYXRhVHlwZS5Db2xvciB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEJvcmRlckJsb2NrRW5kQ29sb3IgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3I7CgogIGV4cG9ydCB0eXBlIEJvcmRlckJsb2NrRW5kU3R5bGUgPSBHbG9iYWxzIHwgRGF0YVR5cGUuTGluZVN0eWxlOwoKICBleHBvcnQgdHlwZSBCb3JkZXJCbG9ja0VuZFdpZHRoPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuTGluZVdpZHRoPFRMZW5ndGg+OwoKICBleHBvcnQgdHlwZSBCb3JkZXJCbG9ja1N0YXJ0PFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuTGluZVdpZHRoPFRMZW5ndGg+IHwgRGF0YVR5cGUuTGluZVN0eWxlIHwgRGF0YVR5cGUuQ29sb3IgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBCb3JkZXJCbG9ja1N0YXJ0Q29sb3IgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3I7CgogIGV4cG9ydCB0eXBlIEJvcmRlckJsb2NrU3RhcnRTdHlsZSA9IEdsb2JhbHMgfCBEYXRhVHlwZS5MaW5lU3R5bGU7CgogIGV4cG9ydCB0eXBlIEJvcmRlckJsb2NrU3RhcnRXaWR0aDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IERhdGFUeXBlLkxpbmVXaWR0aDxUTGVuZ3RoPjsKCiAgZXhwb3J0IHR5cGUgQm9yZGVyQmxvY2tTdHlsZSA9IEdsb2JhbHMgfCBEYXRhVHlwZS5MaW5lU3R5bGU7CgogIGV4cG9ydCB0eXBlIEJvcmRlckJsb2NrV2lkdGg8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5MaW5lV2lkdGg8VExlbmd0aD47CgogIGV4cG9ydCB0eXBlIEJvcmRlckJvdHRvbTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IERhdGFUeXBlLkxpbmVXaWR0aDxUTGVuZ3RoPiB8IERhdGFUeXBlLkxpbmVTdHlsZSB8IERhdGFUeXBlLkNvbG9yIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQm9yZGVyQm90dG9tQ29sb3IgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3I7CgogIGV4cG9ydCB0eXBlIEJvcmRlckJvdHRvbUxlZnRSYWRpdXM8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQm9yZGVyQm90dG9tUmlnaHRSYWRpdXM8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQm9yZGVyQm90dG9tU3R5bGUgPSBHbG9iYWxzIHwgRGF0YVR5cGUuTGluZVN0eWxlOwoKICBleHBvcnQgdHlwZSBCb3JkZXJCb3R0b21XaWR0aDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IERhdGFUeXBlLkxpbmVXaWR0aDxUTGVuZ3RoPjsKCiAgZXhwb3J0IHR5cGUgQm9yZGVyQ29sbGFwc2UgPSBHbG9iYWxzIHwgImNvbGxhcHNlIiB8ICJzZXBhcmF0ZSI7CgogIGV4cG9ydCB0eXBlIEJvcmRlckNvbG9yID0gR2xvYmFscyB8IERhdGFUeXBlLkNvbG9yIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQm9yZGVyRW5kRW5kUmFkaXVzPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEJvcmRlckVuZFN0YXJ0UmFkaXVzPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEJvcmRlckltYWdlID0gR2xvYmFscyB8ICJub25lIiB8ICJyZXBlYXQiIHwgInJvdW5kIiB8ICJzcGFjZSIgfCAic3RyZXRjaCIgfCAoc3RyaW5nICYge30pIHwgKG51bWJlciAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQm9yZGVySW1hZ2VPdXRzZXQ8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgKHN0cmluZyAmIHt9KSB8IChudW1iZXIgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEJvcmRlckltYWdlUmVwZWF0ID0gR2xvYmFscyB8ICJyZXBlYXQiIHwgInJvdW5kIiB8ICJzcGFjZSIgfCAic3RyZXRjaCIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBCb3JkZXJJbWFnZVNsaWNlID0gR2xvYmFscyB8IChzdHJpbmcgJiB7fSkgfCAobnVtYmVyICYge30pOwoKICBleHBvcnQgdHlwZSBCb3JkZXJJbWFnZVNvdXJjZSA9IEdsb2JhbHMgfCAibm9uZSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBCb3JkZXJJbWFnZVdpZHRoPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8ICJhdXRvIiB8IChzdHJpbmcgJiB7fSkgfCAobnVtYmVyICYge30pOwoKICBleHBvcnQgdHlwZSBCb3JkZXJJbmxpbmU8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5MaW5lV2lkdGg8VExlbmd0aD4gfCBEYXRhVHlwZS5MaW5lU3R5bGUgfCBEYXRhVHlwZS5Db2xvciB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEJvcmRlcklubGluZUNvbG9yID0gR2xvYmFscyB8IERhdGFUeXBlLkNvbG9yIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQm9yZGVySW5saW5lRW5kPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuTGluZVdpZHRoPFRMZW5ndGg+IHwgRGF0YVR5cGUuTGluZVN0eWxlIHwgRGF0YVR5cGUuQ29sb3IgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBCb3JkZXJJbmxpbmVFbmRDb2xvciA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Db2xvcjsKCiAgZXhwb3J0IHR5cGUgQm9yZGVySW5saW5lRW5kU3R5bGUgPSBHbG9iYWxzIHwgRGF0YVR5cGUuTGluZVN0eWxlOwoKICBleHBvcnQgdHlwZSBCb3JkZXJJbmxpbmVFbmRXaWR0aDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IERhdGFUeXBlLkxpbmVXaWR0aDxUTGVuZ3RoPjsKCiAgZXhwb3J0IHR5cGUgQm9yZGVySW5saW5lU3RhcnQ8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5MaW5lV2lkdGg8VExlbmd0aD4gfCBEYXRhVHlwZS5MaW5lU3R5bGUgfCBEYXRhVHlwZS5Db2xvciB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEJvcmRlcklubGluZVN0YXJ0Q29sb3IgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3I7CgogIGV4cG9ydCB0eXBlIEJvcmRlcklubGluZVN0YXJ0U3R5bGUgPSBHbG9iYWxzIHwgRGF0YVR5cGUuTGluZVN0eWxlOwoKICBleHBvcnQgdHlwZSBCb3JkZXJJbmxpbmVTdGFydFdpZHRoPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuTGluZVdpZHRoPFRMZW5ndGg+OwoKICBleHBvcnQgdHlwZSBCb3JkZXJJbmxpbmVTdHlsZSA9IEdsb2JhbHMgfCBEYXRhVHlwZS5MaW5lU3R5bGU7CgogIGV4cG9ydCB0eXBlIEJvcmRlcklubGluZVdpZHRoPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuTGluZVdpZHRoPFRMZW5ndGg+OwoKICBleHBvcnQgdHlwZSBCb3JkZXJMZWZ0PFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuTGluZVdpZHRoPFRMZW5ndGg+IHwgRGF0YVR5cGUuTGluZVN0eWxlIHwgRGF0YVR5cGUuQ29sb3IgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBCb3JkZXJMZWZ0Q29sb3IgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3I7CgogIGV4cG9ydCB0eXBlIEJvcmRlckxlZnRTdHlsZSA9IEdsb2JhbHMgfCBEYXRhVHlwZS5MaW5lU3R5bGU7CgogIGV4cG9ydCB0eXBlIEJvcmRlckxlZnRXaWR0aDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IERhdGFUeXBlLkxpbmVXaWR0aDxUTGVuZ3RoPjsKCiAgZXhwb3J0IHR5cGUgQm9yZGVyUmFkaXVzPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEJvcmRlclJpZ2h0PFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuTGluZVdpZHRoPFRMZW5ndGg+IHwgRGF0YVR5cGUuTGluZVN0eWxlIHwgRGF0YVR5cGUuQ29sb3IgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBCb3JkZXJSaWdodENvbG9yID0gR2xvYmFscyB8IERhdGFUeXBlLkNvbG9yOwoKICBleHBvcnQgdHlwZSBCb3JkZXJSaWdodFN0eWxlID0gR2xvYmFscyB8IERhdGFUeXBlLkxpbmVTdHlsZTsKCiAgZXhwb3J0IHR5cGUgQm9yZGVyUmlnaHRXaWR0aDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IERhdGFUeXBlLkxpbmVXaWR0aDxUTGVuZ3RoPjsKCiAgZXhwb3J0IHR5cGUgQm9yZGVyU3BhY2luZzxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBCb3JkZXJTdGFydEVuZFJhZGl1czxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBCb3JkZXJTdGFydFN0YXJ0UmFkaXVzPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEJvcmRlclN0eWxlID0gR2xvYmFscyB8IERhdGFUeXBlLkxpbmVTdHlsZSB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEJvcmRlclRvcDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IERhdGFUeXBlLkxpbmVXaWR0aDxUTGVuZ3RoPiB8IERhdGFUeXBlLkxpbmVTdHlsZSB8IERhdGFUeXBlLkNvbG9yIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQm9yZGVyVG9wQ29sb3IgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3I7CgogIGV4cG9ydCB0eXBlIEJvcmRlclRvcExlZnRSYWRpdXM8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQm9yZGVyVG9wUmlnaHRSYWRpdXM8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQm9yZGVyVG9wU3R5bGUgPSBHbG9iYWxzIHwgRGF0YVR5cGUuTGluZVN0eWxlOwoKICBleHBvcnQgdHlwZSBCb3JkZXJUb3BXaWR0aDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IERhdGFUeXBlLkxpbmVXaWR0aDxUTGVuZ3RoPjsKCiAgZXhwb3J0IHR5cGUgQm9yZGVyV2lkdGg8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5MaW5lV2lkdGg8VExlbmd0aD4gfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBCb3R0b208VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgImF1dG8iIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQm94QWxpZ24gPSBHbG9iYWxzIHwgImJhc2VsaW5lIiB8ICJjZW50ZXIiIHwgImVuZCIgfCAic3RhcnQiIHwgInN0cmV0Y2giOwoKICBleHBvcnQgdHlwZSBCb3hEZWNvcmF0aW9uQnJlYWsgPSBHbG9iYWxzIHwgImNsb25lIiB8ICJzbGljZSI7CgogIGV4cG9ydCB0eXBlIEJveERpcmVjdGlvbiA9IEdsb2JhbHMgfCAiaW5oZXJpdCIgfCAibm9ybWFsIiB8ICJyZXZlcnNlIjsKCiAgZXhwb3J0IHR5cGUgQm94RmxleCA9IEdsb2JhbHMgfCAobnVtYmVyICYge30pIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQm94RmxleEdyb3VwID0gR2xvYmFscyB8IChudW1iZXIgJiB7fSkgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBCb3hMaW5lcyA9IEdsb2JhbHMgfCAibXVsdGlwbGUiIHwgInNpbmdsZSI7CgogIGV4cG9ydCB0eXBlIEJveE9yZGluYWxHcm91cCA9IEdsb2JhbHMgfCAobnVtYmVyICYge30pIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQm94T3JpZW50ID0gR2xvYmFscyB8ICJibG9jay1heGlzIiB8ICJob3Jpem9udGFsIiB8ICJpbmhlcml0IiB8ICJpbmxpbmUtYXhpcyIgfCAidmVydGljYWwiOwoKICBleHBvcnQgdHlwZSBCb3hQYWNrID0gR2xvYmFscyB8ICJjZW50ZXIiIHwgImVuZCIgfCAianVzdGlmeSIgfCAic3RhcnQiOwoKICBleHBvcnQgdHlwZSBCb3hTaGFkb3cgPSBHbG9iYWxzIHwgIm5vbmUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQm94U2l6aW5nID0gR2xvYmFscyB8ICJib3JkZXItYm94IiB8ICJjb250ZW50LWJveCI7CgogIGV4cG9ydCB0eXBlIEJyZWFrQWZ0ZXIgPQogICAgfCBHbG9iYWxzCiAgICB8ICJhbGwiCiAgICB8ICJhbHdheXMiCiAgICB8ICJhdXRvIgogICAgfCAiYXZvaWQiCiAgICB8ICJhdm9pZC1jb2x1bW4iCiAgICB8ICJhdm9pZC1wYWdlIgogICAgfCAiYXZvaWQtcmVnaW9uIgogICAgfCAiY29sdW1uIgogICAgfCAibGVmdCIKICAgIHwgInBhZ2UiCiAgICB8ICJyZWN0byIKICAgIHwgInJlZ2lvbiIKICAgIHwgInJpZ2h0IgogICAgfCAidmVyc28iOwoKICBleHBvcnQgdHlwZSBCcmVha0JlZm9yZSA9CiAgICB8IEdsb2JhbHMKICAgIHwgImFsbCIKICAgIHwgImFsd2F5cyIKICAgIHwgImF1dG8iCiAgICB8ICJhdm9pZCIKICAgIHwgImF2b2lkLWNvbHVtbiIKICAgIHwgImF2b2lkLXBhZ2UiCiAgICB8ICJhdm9pZC1yZWdpb24iCiAgICB8ICJjb2x1bW4iCiAgICB8ICJsZWZ0IgogICAgfCAicGFnZSIKICAgIHwgInJlY3RvIgogICAgfCAicmVnaW9uIgogICAgfCAicmlnaHQiCiAgICB8ICJ2ZXJzbyI7CgogIGV4cG9ydCB0eXBlIEJyZWFrSW5zaWRlID0gR2xvYmFscyB8ICJhdXRvIiB8ICJhdm9pZCIgfCAiYXZvaWQtY29sdW1uIiB8ICJhdm9pZC1wYWdlIiB8ICJhdm9pZC1yZWdpb24iOwoKICBleHBvcnQgdHlwZSBDYXB0aW9uU2lkZSA9IEdsb2JhbHMgfCAiYmxvY2stZW5kIiB8ICJibG9jay1zdGFydCIgfCAiYm90dG9tIiB8ICJpbmxpbmUtZW5kIiB8ICJpbmxpbmUtc3RhcnQiIHwgInRvcCI7CgogIGV4cG9ydCB0eXBlIENhcmV0Q29sb3IgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3IgfCAiYXV0byI7CgogIGV4cG9ydCB0eXBlIENsZWFyID0gR2xvYmFscyB8ICJib3RoIiB8ICJpbmxpbmUtZW5kIiB8ICJpbmxpbmUtc3RhcnQiIHwgImxlZnQiIHwgIm5vbmUiIHwgInJpZ2h0IjsKCiAgZXhwb3J0IHR5cGUgQ2xpcCA9IEdsb2JhbHMgfCAiYXV0byIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBDbGlwUGF0aCA9IEdsb2JhbHMgfCBEYXRhVHlwZS5HZW9tZXRyeUJveCB8ICJub25lIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIENvbG9yID0gR2xvYmFscyB8IERhdGFUeXBlLkNvbG9yOwoKICBleHBvcnQgdHlwZSBDb2xvckFkanVzdCA9IEdsb2JhbHMgfCAiZWNvbm9teSIgfCAiZXhhY3QiOwoKICBleHBvcnQgdHlwZSBDb2xvclNjaGVtZSA9IEdsb2JhbHMgfCAiZGFyayIgfCAibGlnaHQiIHwgIm5vcm1hbCIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBDb2x1bW5Db3VudCA9IEdsb2JhbHMgfCAiYXV0byIgfCAobnVtYmVyICYge30pIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQ29sdW1uRmlsbCA9IEdsb2JhbHMgfCAiYXV0byIgfCAiYmFsYW5jZSIgfCAiYmFsYW5jZS1hbGwiOwoKICBleHBvcnQgdHlwZSBDb2x1bW5HYXA8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgIm5vcm1hbCIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBDb2x1bW5SdWxlPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuTGluZVdpZHRoPFRMZW5ndGg+IHwgRGF0YVR5cGUuTGluZVN0eWxlIHwgRGF0YVR5cGUuQ29sb3IgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBDb2x1bW5SdWxlQ29sb3IgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3I7CgogIGV4cG9ydCB0eXBlIENvbHVtblJ1bGVTdHlsZSA9IEdsb2JhbHMgfCBEYXRhVHlwZS5MaW5lU3R5bGUgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBDb2x1bW5SdWxlV2lkdGg8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5MaW5lV2lkdGg8VExlbmd0aD4gfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBDb2x1bW5TcGFuID0gR2xvYmFscyB8ICJhbGwiIHwgIm5vbmUiOwoKICBleHBvcnQgdHlwZSBDb2x1bW5XaWR0aDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiYXV0byI7CgogIGV4cG9ydCB0eXBlIENvbHVtbnM8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgImF1dG8iIHwgKHN0cmluZyAmIHt9KSB8IChudW1iZXIgJiB7fSk7CgogIGV4cG9ydCB0eXBlIENvbnRhaW4gPSBHbG9iYWxzIHwgImNvbnRlbnQiIHwgImxheW91dCIgfCAibm9uZSIgfCAicGFpbnQiIHwgInNpemUiIHwgInN0cmljdCIgfCAic3R5bGUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQ29udGVudCA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Db250ZW50TGlzdCB8ICJub25lIiB8ICJub3JtYWwiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQ29udGVudFZpc2liaWxpdHkgPSBHbG9iYWxzIHwgImF1dG8iIHwgImhpZGRlbiIgfCAidmlzaWJsZSI7CgogIGV4cG9ydCB0eXBlIENvdW50ZXJJbmNyZW1lbnQgPSBHbG9iYWxzIHwgIm5vbmUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQ291bnRlclJlc2V0ID0gR2xvYmFscyB8ICJub25lIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIENvdW50ZXJTZXQgPSBHbG9iYWxzIHwgIm5vbmUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQ3Vyc29yID0KICAgIHwgR2xvYmFscwogICAgfCAiLW1vei1ncmFiIgogICAgfCAiLXdlYmtpdC1ncmFiIgogICAgfCAiYWxpYXMiCiAgICB8ICJhbGwtc2Nyb2xsIgogICAgfCAiYXV0byIKICAgIHwgImNlbGwiCiAgICB8ICJjb2wtcmVzaXplIgogICAgfCAiY29udGV4dC1tZW51IgogICAgfCAiY29weSIKICAgIHwgImNyb3NzaGFpciIKICAgIHwgImRlZmF1bHQiCiAgICB8ICJlLXJlc2l6ZSIKICAgIHwgImV3LXJlc2l6ZSIKICAgIHwgImdyYWIiCiAgICB8ICJncmFiYmluZyIKICAgIHwgImhlbHAiCiAgICB8ICJtb3ZlIgogICAgfCAibi1yZXNpemUiCiAgICB8ICJuZS1yZXNpemUiCiAgICB8ICJuZXN3LXJlc2l6ZSIKICAgIHwgIm5vLWRyb3AiCiAgICB8ICJub25lIgogICAgfCAibm90LWFsbG93ZWQiCiAgICB8ICJucy1yZXNpemUiCiAgICB8ICJudy1yZXNpemUiCiAgICB8ICJud3NlLXJlc2l6ZSIKICAgIHwgInBvaW50ZXIiCiAgICB8ICJwcm9ncmVzcyIKICAgIHwgInJvdy1yZXNpemUiCiAgICB8ICJzLXJlc2l6ZSIKICAgIHwgInNlLXJlc2l6ZSIKICAgIHwgInN3LXJlc2l6ZSIKICAgIHwgInRleHQiCiAgICB8ICJ2ZXJ0aWNhbC10ZXh0IgogICAgfCAidy1yZXNpemUiCiAgICB8ICJ3YWl0IgogICAgfCAiem9vbS1pbiIKICAgIHwgInpvb20tb3V0IgogICAgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBEaXJlY3Rpb24gPSBHbG9iYWxzIHwgImx0ciIgfCAicnRsIjsKCiAgZXhwb3J0IHR5cGUgRGlzcGxheSA9CiAgICB8IEdsb2JhbHMKICAgIHwgRGF0YVR5cGUuRGlzcGxheU91dHNpZGUKICAgIHwgRGF0YVR5cGUuRGlzcGxheUluc2lkZQogICAgfCBEYXRhVHlwZS5EaXNwbGF5SW50ZXJuYWwKICAgIHwgRGF0YVR5cGUuRGlzcGxheUxlZ2FjeQogICAgfCAiY29udGVudHMiCiAgICB8ICJsaXN0LWl0ZW0iCiAgICB8ICJub25lIgogICAgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBFbXB0eUNlbGxzID0gR2xvYmFscyB8ICJoaWRlIiB8ICJzaG93IjsKCiAgZXhwb3J0IHR5cGUgRmlsdGVyID0gR2xvYmFscyB8ICJub25lIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEZsZXg8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgImF1dG8iIHwgImNvbnRlbnQiIHwgImZpdC1jb250ZW50IiB8ICJtYXgtY29udGVudCIgfCAibWluLWNvbnRlbnQiIHwgIm5vbmUiIHwgKHN0cmluZyAmIHt9KSB8IChudW1iZXIgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEZsZXhCYXNpczxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0KICAgIHwgR2xvYmFscwogICAgfCBUTGVuZ3RoCiAgICB8ICItbW96LW1heC1jb250ZW50IgogICAgfCAiLW1vei1taW4tY29udGVudCIKICAgIHwgIi13ZWJraXQtYXV0byIKICAgIHwgImF1dG8iCiAgICB8ICJjb250ZW50IgogICAgfCAiZml0LWNvbnRlbnQiCiAgICB8ICJtYXgtY29udGVudCIKICAgIHwgIm1pbi1jb250ZW50IgogICAgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBGbGV4RGlyZWN0aW9uID0gR2xvYmFscyB8ICJjb2x1bW4iIHwgImNvbHVtbi1yZXZlcnNlIiB8ICJyb3ciIHwgInJvdy1yZXZlcnNlIjsKCiAgZXhwb3J0IHR5cGUgRmxleEZsb3cgPSBHbG9iYWxzIHwgImNvbHVtbiIgfCAiY29sdW1uLXJldmVyc2UiIHwgIm5vd3JhcCIgfCAicm93IiB8ICJyb3ctcmV2ZXJzZSIgfCAid3JhcCIgfCAid3JhcC1yZXZlcnNlIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEZsZXhHcm93ID0gR2xvYmFscyB8IChudW1iZXIgJiB7fSkgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBGbGV4U2hyaW5rID0gR2xvYmFscyB8IChudW1iZXIgJiB7fSkgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBGbGV4V3JhcCA9IEdsb2JhbHMgfCAibm93cmFwIiB8ICJ3cmFwIiB8ICJ3cmFwLXJldmVyc2UiOwoKICBleHBvcnQgdHlwZSBGbG9hdCA9IEdsb2JhbHMgfCAiaW5saW5lLWVuZCIgfCAiaW5saW5lLXN0YXJ0IiB8ICJsZWZ0IiB8ICJub25lIiB8ICJyaWdodCI7CgogIGV4cG9ydCB0eXBlIEZvbnQgPSBHbG9iYWxzIHwgImNhcHRpb24iIHwgImljb24iIHwgIm1lbnUiIHwgIm1lc3NhZ2UtYm94IiB8ICJzbWFsbC1jYXB0aW9uIiB8ICJzdGF0dXMtYmFyIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEZvbnRGYW1pbHkgPSBHbG9iYWxzIHwgRGF0YVR5cGUuR2VuZXJpY0ZhbWlseSB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEZvbnRGZWF0dXJlU2V0dGluZ3MgPSBHbG9iYWxzIHwgIm5vcm1hbCIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBGb250S2VybmluZyA9IEdsb2JhbHMgfCAiYXV0byIgfCAibm9uZSIgfCAibm9ybWFsIjsKCiAgZXhwb3J0IHR5cGUgRm9udExhbmd1YWdlT3ZlcnJpZGUgPSBHbG9iYWxzIHwgIm5vcm1hbCIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBGb250T3B0aWNhbFNpemluZyA9IEdsb2JhbHMgfCAiYXV0byIgfCAibm9uZSI7CgogIGV4cG9ydCB0eXBlIEZvbnRTaXplPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuQWJzb2x1dGVTaXplIHwgVExlbmd0aCB8ICJsYXJnZXIiIHwgInNtYWxsZXIiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgRm9udFNpemVBZGp1c3QgPSBHbG9iYWxzIHwgImZyb20tZm9udCIgfCAibm9uZSIgfCAoc3RyaW5nICYge30pIHwgKG51bWJlciAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgRm9udFNtb290aDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IERhdGFUeXBlLkFic29sdXRlU2l6ZSB8IFRMZW5ndGggfCAiYWx3YXlzIiB8ICJhdXRvIiB8ICJuZXZlciI7CgogIGV4cG9ydCB0eXBlIEZvbnRTdHJldGNoID0gR2xvYmFscyB8IERhdGFUeXBlLkZvbnRTdHJldGNoQWJzb2x1dGU7CgogIGV4cG9ydCB0eXBlIEZvbnRTdHlsZSA9IEdsb2JhbHMgfCAiaXRhbGljIiB8ICJub3JtYWwiIHwgIm9ibGlxdWUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgRm9udFN5bnRoZXNpcyA9IEdsb2JhbHMgfCAibm9uZSIgfCAic21hbGwtY2FwcyIgfCAic3R5bGUiIHwgIndlaWdodCIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBGb250VmFyaWFudCA9CiAgICB8IEdsb2JhbHMKICAgIHwgRGF0YVR5cGUuRWFzdEFzaWFuVmFyaWFudFZhbHVlcwogICAgfCAiYWxsLXBldGl0ZS1jYXBzIgogICAgfCAiYWxsLXNtYWxsLWNhcHMiCiAgICB8ICJjb21tb24tbGlnYXR1cmVzIgogICAgfCAiY29udGV4dHVhbCIKICAgIHwgImRpYWdvbmFsLWZyYWN0aW9ucyIKICAgIHwgImRpc2NyZXRpb25hcnktbGlnYXR1cmVzIgogICAgfCAiZnVsbC13aWR0aCIKICAgIHwgImhpc3RvcmljYWwtZm9ybXMiCiAgICB8ICJoaXN0b3JpY2FsLWxpZ2F0dXJlcyIKICAgIHwgImxpbmluZy1udW1zIgogICAgfCAibm8tY29tbW9uLWxpZ2F0dXJlcyIKICAgIHwgIm5vLWNvbnRleHR1YWwiCiAgICB8ICJuby1kaXNjcmV0aW9uYXJ5LWxpZ2F0dXJlcyIKICAgIHwgIm5vLWhpc3RvcmljYWwtbGlnYXR1cmVzIgogICAgfCAibm9uZSIKICAgIHwgIm5vcm1hbCIKICAgIHwgIm9sZHN0eWxlLW51bXMiCiAgICB8ICJvcmRpbmFsIgogICAgfCAicGV0aXRlLWNhcHMiCiAgICB8ICJwcm9wb3J0aW9uYWwtbnVtcyIKICAgIHwgInByb3BvcnRpb25hbC13aWR0aCIKICAgIHwgInJ1YnkiCiAgICB8ICJzbGFzaGVkLXplcm8iCiAgICB8ICJzbWFsbC1jYXBzIgogICAgfCAic3RhY2tlZC1mcmFjdGlvbnMiCiAgICB8ICJ0YWJ1bGFyLW51bXMiCiAgICB8ICJ0aXRsaW5nLWNhcHMiCiAgICB8ICJ1bmljYXNlIgogICAgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBGb250VmFyaWFudEFsdGVybmF0ZXMgPSBHbG9iYWxzIHwgImhpc3RvcmljYWwtZm9ybXMiIHwgIm5vcm1hbCIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBGb250VmFyaWFudENhcHMgPSBHbG9iYWxzIHwgImFsbC1wZXRpdGUtY2FwcyIgfCAiYWxsLXNtYWxsLWNhcHMiIHwgIm5vcm1hbCIgfCAicGV0aXRlLWNhcHMiIHwgInNtYWxsLWNhcHMiIHwgInRpdGxpbmctY2FwcyIgfCAidW5pY2FzZSI7CgogIGV4cG9ydCB0eXBlIEZvbnRWYXJpYW50RWFzdEFzaWFuID0gR2xvYmFscyB8IERhdGFUeXBlLkVhc3RBc2lhblZhcmlhbnRWYWx1ZXMgfCAiZnVsbC13aWR0aCIgfCAibm9ybWFsIiB8ICJwcm9wb3J0aW9uYWwtd2lkdGgiIHwgInJ1YnkiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgRm9udFZhcmlhbnRMaWdhdHVyZXMgPQogICAgfCBHbG9iYWxzCiAgICB8ICJjb21tb24tbGlnYXR1cmVzIgogICAgfCAiY29udGV4dHVhbCIKICAgIHwgImRpc2NyZXRpb25hcnktbGlnYXR1cmVzIgogICAgfCAiaGlzdG9yaWNhbC1saWdhdHVyZXMiCiAgICB8ICJuby1jb21tb24tbGlnYXR1cmVzIgogICAgfCAibm8tY29udGV4dHVhbCIKICAgIHwgIm5vLWRpc2NyZXRpb25hcnktbGlnYXR1cmVzIgogICAgfCAibm8taGlzdG9yaWNhbC1saWdhdHVyZXMiCiAgICB8ICJub25lIgogICAgfCAibm9ybWFsIgogICAgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBGb250VmFyaWFudE51bWVyaWMgPQogICAgfCBHbG9iYWxzCiAgICB8ICJkaWFnb25hbC1mcmFjdGlvbnMiCiAgICB8ICJsaW5pbmctbnVtcyIKICAgIHwgIm5vcm1hbCIKICAgIHwgIm9sZHN0eWxlLW51bXMiCiAgICB8ICJvcmRpbmFsIgogICAgfCAicHJvcG9ydGlvbmFsLW51bXMiCiAgICB8ICJzbGFzaGVkLXplcm8iCiAgICB8ICJzdGFja2VkLWZyYWN0aW9ucyIKICAgIHwgInRhYnVsYXItbnVtcyIKICAgIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgRm9udFZhcmlhbnRQb3NpdGlvbiA9IEdsb2JhbHMgfCAibm9ybWFsIiB8ICJzdWIiIHwgInN1cGVyIjsKCiAgZXhwb3J0IHR5cGUgRm9udFZhcmlhdGlvblNldHRpbmdzID0gR2xvYmFscyB8ICJub3JtYWwiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgRm9udFdlaWdodCA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Gb250V2VpZ2h0QWJzb2x1dGUgfCAiYm9sZGVyIiB8ICJsaWdodGVyIjsKCiAgZXhwb3J0IHR5cGUgRm9yY2VkQ29sb3JBZGp1c3QgPSBHbG9iYWxzIHwgImF1dG8iIHwgIm5vbmUiOwoKICBleHBvcnQgdHlwZSBHYXA8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgIm5vcm1hbCIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBHcmlkID0gR2xvYmFscyB8ICJub25lIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEdyaWRBcmVhID0gR2xvYmFscyB8IERhdGFUeXBlLkdyaWRMaW5lIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgR3JpZEF1dG9Db2x1bW5zPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuVHJhY2tCcmVhZHRoPFRMZW5ndGg+IHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgR3JpZEF1dG9GbG93ID0gR2xvYmFscyB8ICJjb2x1bW4iIHwgImRlbnNlIiB8ICJyb3ciIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgR3JpZEF1dG9Sb3dzPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuVHJhY2tCcmVhZHRoPFRMZW5ndGg+IHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgR3JpZENvbHVtbiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5HcmlkTGluZSB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEdyaWRDb2x1bW5FbmQgPSBHbG9iYWxzIHwgRGF0YVR5cGUuR3JpZExpbmU7CgogIGV4cG9ydCB0eXBlIEdyaWRDb2x1bW5HYXA8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgR3JpZENvbHVtblN0YXJ0ID0gR2xvYmFscyB8IERhdGFUeXBlLkdyaWRMaW5lOwoKICBleHBvcnQgdHlwZSBHcmlkR2FwPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEdyaWRSb3cgPSBHbG9iYWxzIHwgRGF0YVR5cGUuR3JpZExpbmUgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBHcmlkUm93RW5kID0gR2xvYmFscyB8IERhdGFUeXBlLkdyaWRMaW5lOwoKICBleHBvcnQgdHlwZSBHcmlkUm93R2FwPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEdyaWRSb3dTdGFydCA9IEdsb2JhbHMgfCBEYXRhVHlwZS5HcmlkTGluZTsKCiAgZXhwb3J0IHR5cGUgR3JpZFRlbXBsYXRlID0gR2xvYmFscyB8ICJub25lIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEdyaWRUZW1wbGF0ZUFyZWFzID0gR2xvYmFscyB8ICJub25lIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEdyaWRUZW1wbGF0ZUNvbHVtbnM8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5UcmFja0JyZWFkdGg8VExlbmd0aD4gfCAibm9uZSIgfCAic3ViZ3JpZCIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBHcmlkVGVtcGxhdGVSb3dzPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuVHJhY2tCcmVhZHRoPFRMZW5ndGg+IHwgIm5vbmUiIHwgInN1YmdyaWQiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgSGFuZ2luZ1B1bmN0dWF0aW9uID0gR2xvYmFscyB8ICJhbGxvdy1lbmQiIHwgImZpcnN0IiB8ICJmb3JjZS1lbmQiIHwgImxhc3QiIHwgIm5vbmUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgSGVpZ2h0PFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPQogICAgfCBHbG9iYWxzCiAgICB8IFRMZW5ndGgKICAgIHwgIi1tb3otbWF4LWNvbnRlbnQiCiAgICB8ICItbW96LW1pbi1jb250ZW50IgogICAgfCAiLXdlYmtpdC1maXQtY29udGVudCIKICAgIHwgImF1dG8iCiAgICB8ICJmaXQtY29udGVudCIKICAgIHwgIm1heC1jb250ZW50IgogICAgfCAibWluLWNvbnRlbnQiCiAgICB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEh5cGhlbnMgPSBHbG9iYWxzIHwgImF1dG8iIHwgIm1hbnVhbCIgfCAibm9uZSI7CgogIGV4cG9ydCB0eXBlIEltYWdlT3JpZW50YXRpb24gPSBHbG9iYWxzIHwgImZsaXAiIHwgImZyb20taW1hZ2UiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgSW1hZ2VSZW5kZXJpbmcgPSBHbG9iYWxzIHwgIi1tb3otY3Jpc3AtZWRnZXMiIHwgIi13ZWJraXQtb3B0aW1pemUtY29udHJhc3QiIHwgImF1dG8iIHwgImNyaXNwLWVkZ2VzIiB8ICJwaXhlbGF0ZWQiOwoKICBleHBvcnQgdHlwZSBJbWFnZVJlc29sdXRpb24gPSBHbG9iYWxzIHwgImZyb20taW1hZ2UiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgSW1lTW9kZSA9IEdsb2JhbHMgfCAiYWN0aXZlIiB8ICJhdXRvIiB8ICJkaXNhYmxlZCIgfCAiaW5hY3RpdmUiIHwgIm5vcm1hbCI7CgogIGV4cG9ydCB0eXBlIEluaXRpYWxMZXR0ZXIgPSBHbG9iYWxzIHwgIm5vcm1hbCIgfCAoc3RyaW5nICYge30pIHwgKG51bWJlciAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgSW5saW5lU2l6ZTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0KICAgIHwgR2xvYmFscwogICAgfCBUTGVuZ3RoCiAgICB8ICItbW96LWZpdC1jb250ZW50IgogICAgfCAiLW1vei1tYXgtY29udGVudCIKICAgIHwgIi1tb3otbWluLWNvbnRlbnQiCiAgICB8ICItd2Via2l0LWZpbGwtYXZhaWxhYmxlIgogICAgfCAiYXV0byIKICAgIHwgImZpdC1jb250ZW50IgogICAgfCAibWF4LWNvbnRlbnQiCiAgICB8ICJtaW4tY29udGVudCIKICAgIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgSW5zZXQ8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgImF1dG8iIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgSW5zZXRCbG9jazxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiYXV0byIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBJbnNldEJsb2NrRW5kPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8ICJhdXRvIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEluc2V0QmxvY2tTdGFydDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiYXV0byIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBJbnNldElubGluZTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiYXV0byIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBJbnNldElubGluZUVuZDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiYXV0byIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBJbnNldElubGluZVN0YXJ0PFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8ICJhdXRvIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIElzb2xhdGlvbiA9IEdsb2JhbHMgfCAiYXV0byIgfCAiaXNvbGF0ZSI7CgogIGV4cG9ydCB0eXBlIEp1c3RpZnlDb250ZW50ID0gR2xvYmFscyB8IERhdGFUeXBlLkNvbnRlbnREaXN0cmlidXRpb24gfCBEYXRhVHlwZS5Db250ZW50UG9zaXRpb24gfCAibGVmdCIgfCAibm9ybWFsIiB8ICJyaWdodCIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBKdXN0aWZ5SXRlbXMgPSBHbG9iYWxzIHwgRGF0YVR5cGUuU2VsZlBvc2l0aW9uIHwgImJhc2VsaW5lIiB8ICJsZWZ0IiB8ICJsZWdhY3kiIHwgIm5vcm1hbCIgfCAicmlnaHQiIHwgInN0cmV0Y2giIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgSnVzdGlmeVNlbGYgPSBHbG9iYWxzIHwgRGF0YVR5cGUuU2VsZlBvc2l0aW9uIHwgImF1dG8iIHwgImJhc2VsaW5lIiB8ICJsZWZ0IiB8ICJub3JtYWwiIHwgInJpZ2h0IiB8ICJzdHJldGNoIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEp1c3RpZnlUcmFja3MgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29udGVudERpc3RyaWJ1dGlvbiB8IERhdGFUeXBlLkNvbnRlbnRQb3NpdGlvbiB8ICJsZWZ0IiB8ICJub3JtYWwiIHwgInJpZ2h0IiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIExlZnQ8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgImF1dG8iIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTGV0dGVyU3BhY2luZzxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAibm9ybWFsIjsKCiAgZXhwb3J0IHR5cGUgTGluZUJyZWFrID0gR2xvYmFscyB8ICJhbnl3aGVyZSIgfCAiYXV0byIgfCAibG9vc2UiIHwgIm5vcm1hbCIgfCAic3RyaWN0IjsKCiAgZXhwb3J0IHR5cGUgTGluZUNsYW1wID0gR2xvYmFscyB8ICJub25lIiB8IChudW1iZXIgJiB7fSkgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBMaW5lSGVpZ2h0PFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8ICJub3JtYWwiIHwgKHN0cmluZyAmIHt9KSB8IChudW1iZXIgJiB7fSk7CgogIGV4cG9ydCB0eXBlIExpbmVIZWlnaHRTdGVwPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aDsKCiAgZXhwb3J0IHR5cGUgTGlzdFN0eWxlID0gR2xvYmFscyB8ICJpbnNpZGUiIHwgIm5vbmUiIHwgIm91dHNpZGUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTGlzdFN0eWxlSW1hZ2UgPSBHbG9iYWxzIHwgIm5vbmUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTGlzdFN0eWxlUG9zaXRpb24gPSBHbG9iYWxzIHwgImluc2lkZSIgfCAib3V0c2lkZSI7CgogIGV4cG9ydCB0eXBlIExpc3RTdHlsZVR5cGUgPSBHbG9iYWxzIHwgIm5vbmUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTWFyZ2luPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8ICJhdXRvIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1hcmdpbkJsb2NrPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8ICJhdXRvIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1hcmdpbkJsb2NrRW5kPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8ICJhdXRvIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1hcmdpbkJsb2NrU3RhcnQ8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgImF1dG8iIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTWFyZ2luQm90dG9tPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8ICJhdXRvIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1hcmdpbklubGluZTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiYXV0byIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNYXJnaW5JbmxpbmVFbmQ8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgImF1dG8iIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTWFyZ2luSW5saW5lU3RhcnQ8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgImF1dG8iIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTWFyZ2luTGVmdDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiYXV0byIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNYXJnaW5SaWdodDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiYXV0byIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNYXJnaW5Ub3A8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgImF1dG8iIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTWFzazxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IERhdGFUeXBlLk1hc2tMYXllcjxUTGVuZ3RoPiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1hc2tCb3JkZXIgPSBHbG9iYWxzIHwgImFscGhhIiB8ICJsdW1pbmFuY2UiIHwgIm5vbmUiIHwgInJlcGVhdCIgfCAicm91bmQiIHwgInNwYWNlIiB8ICJzdHJldGNoIiB8IChzdHJpbmcgJiB7fSkgfCAobnVtYmVyICYge30pOwoKICBleHBvcnQgdHlwZSBNYXNrQm9yZGVyTW9kZSA9IEdsb2JhbHMgfCAiYWxwaGEiIHwgImx1bWluYW5jZSI7CgogIGV4cG9ydCB0eXBlIE1hc2tCb3JkZXJPdXRzZXQ8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgKHN0cmluZyAmIHt9KSB8IChudW1iZXIgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1hc2tCb3JkZXJSZXBlYXQgPSBHbG9iYWxzIHwgInJlcGVhdCIgfCAicm91bmQiIHwgInNwYWNlIiB8ICJzdHJldGNoIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1hc2tCb3JkZXJTbGljZSA9IEdsb2JhbHMgfCAoc3RyaW5nICYge30pIHwgKG51bWJlciAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTWFza0JvcmRlclNvdXJjZSA9IEdsb2JhbHMgfCAibm9uZSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNYXNrQm9yZGVyV2lkdGg8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgImF1dG8iIHwgKHN0cmluZyAmIHt9KSB8IChudW1iZXIgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1hc2tDbGlwID0gR2xvYmFscyB8IERhdGFUeXBlLkdlb21ldHJ5Qm94IHwgIm5vLWNsaXAiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTWFza0NvbXBvc2l0ZSA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Db21wb3NpdGluZ09wZXJhdG9yIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTWFza0ltYWdlID0gR2xvYmFscyB8ICJub25lIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1hc2tNb2RlID0gR2xvYmFscyB8IERhdGFUeXBlLk1hc2tpbmdNb2RlIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTWFza09yaWdpbiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5HZW9tZXRyeUJveCB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1hc2tQb3NpdGlvbjxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IERhdGFUeXBlLlBvc2l0aW9uPFRMZW5ndGg+IHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTWFza1JlcGVhdCA9IEdsb2JhbHMgfCBEYXRhVHlwZS5SZXBlYXRTdHlsZSB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1hc2tTaXplPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuQmdTaXplPFRMZW5ndGg+IHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTWFza1R5cGUgPSBHbG9iYWxzIHwgImFscGhhIiB8ICJsdW1pbmFuY2UiOwoKICBleHBvcnQgdHlwZSBNYXRoU3R5bGUgPSBHbG9iYWxzIHwgImNvbXBhY3QiIHwgIm5vcm1hbCI7CgogIGV4cG9ydCB0eXBlIE1heEJsb2NrU2l6ZTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0KICAgIHwgR2xvYmFscwogICAgfCBUTGVuZ3RoCiAgICB8ICItbW96LW1heC1jb250ZW50IgogICAgfCAiLW1vei1taW4tY29udGVudCIKICAgIHwgIi13ZWJraXQtZmlsbC1hdmFpbGFibGUiCiAgICB8ICJmaXQtY29udGVudCIKICAgIHwgIm1heC1jb250ZW50IgogICAgfCAibWluLWNvbnRlbnQiCiAgICB8ICJub25lIgogICAgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNYXhIZWlnaHQ8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9CiAgICB8IEdsb2JhbHMKICAgIHwgVExlbmd0aAogICAgfCAiLW1vei1maXQtY29udGVudCIKICAgIHwgIi1tb3otbWF4LWNvbnRlbnQiCiAgICB8ICItbW96LW1pbi1jb250ZW50IgogICAgfCAiLXdlYmtpdC1maXQtY29udGVudCIKICAgIHwgIi13ZWJraXQtbWF4LWNvbnRlbnQiCiAgICB8ICItd2Via2l0LW1pbi1jb250ZW50IgogICAgfCAiZml0LWNvbnRlbnQiCiAgICB8ICJpbnRyaW5zaWMiCiAgICB8ICJtYXgtY29udGVudCIKICAgIHwgIm1pbi1jb250ZW50IgogICAgfCAibm9uZSIKICAgIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTWF4SW5saW5lU2l6ZTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0KICAgIHwgR2xvYmFscwogICAgfCBUTGVuZ3RoCiAgICB8ICItbW96LWZpdC1jb250ZW50IgogICAgfCAiLW1vei1tYXgtY29udGVudCIKICAgIHwgIi1tb3otbWluLWNvbnRlbnQiCiAgICB8ICItd2Via2l0LWZpbGwtYXZhaWxhYmxlIgogICAgfCAiZml0LWNvbnRlbnQiCiAgICB8ICJtYXgtY29udGVudCIKICAgIHwgIm1pbi1jb250ZW50IgogICAgfCAibm9uZSIKICAgIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTWF4TGluZXMgPSBHbG9iYWxzIHwgIm5vbmUiIHwgKG51bWJlciAmIHt9KSB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1heFdpZHRoPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPQogICAgfCBHbG9iYWxzCiAgICB8IFRMZW5ndGgKICAgIHwgIi1tb3otZml0LWNvbnRlbnQiCiAgICB8ICItbW96LW1heC1jb250ZW50IgogICAgfCAiLW1vei1taW4tY29udGVudCIKICAgIHwgIi13ZWJraXQtZml0LWNvbnRlbnQiCiAgICB8ICItd2Via2l0LW1heC1jb250ZW50IgogICAgfCAiLXdlYmtpdC1taW4tY29udGVudCIKICAgIHwgImZpdC1jb250ZW50IgogICAgfCAiaW50cmluc2ljIgogICAgfCAibWF4LWNvbnRlbnQiCiAgICB8ICJtaW4tY29udGVudCIKICAgIHwgIm5vbmUiCiAgICB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1pbkJsb2NrU2l6ZTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0KICAgIHwgR2xvYmFscwogICAgfCBUTGVuZ3RoCiAgICB8ICItbW96LW1heC1jb250ZW50IgogICAgfCAiLW1vei1taW4tY29udGVudCIKICAgIHwgIi13ZWJraXQtZmlsbC1hdmFpbGFibGUiCiAgICB8ICJhdXRvIgogICAgfCAiZml0LWNvbnRlbnQiCiAgICB8ICJtYXgtY29udGVudCIKICAgIHwgIm1pbi1jb250ZW50IgogICAgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNaW5IZWlnaHQ8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9CiAgICB8IEdsb2JhbHMKICAgIHwgVExlbmd0aAogICAgfCAiLW1vei1maXQtY29udGVudCIKICAgIHwgIi1tb3otbWF4LWNvbnRlbnQiCiAgICB8ICItbW96LW1pbi1jb250ZW50IgogICAgfCAiLXdlYmtpdC1maXQtY29udGVudCIKICAgIHwgIi13ZWJraXQtbWF4LWNvbnRlbnQiCiAgICB8ICItd2Via2l0LW1pbi1jb250ZW50IgogICAgfCAiYXV0byIKICAgIHwgImZpdC1jb250ZW50IgogICAgfCAiaW50cmluc2ljIgogICAgfCAibWF4LWNvbnRlbnQiCiAgICB8ICJtaW4tY29udGVudCIKICAgIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTWluSW5saW5lU2l6ZTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0KICAgIHwgR2xvYmFscwogICAgfCBUTGVuZ3RoCiAgICB8ICItbW96LWZpdC1jb250ZW50IgogICAgfCAiLW1vei1tYXgtY29udGVudCIKICAgIHwgIi1tb3otbWluLWNvbnRlbnQiCiAgICB8ICItd2Via2l0LWZpbGwtYXZhaWxhYmxlIgogICAgfCAiYXV0byIKICAgIHwgImZpdC1jb250ZW50IgogICAgfCAibWF4LWNvbnRlbnQiCiAgICB8ICJtaW4tY29udGVudCIKICAgIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTWluV2lkdGg8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9CiAgICB8IEdsb2JhbHMKICAgIHwgVExlbmd0aAogICAgfCAiLW1vei1maXQtY29udGVudCIKICAgIHwgIi1tb3otbWF4LWNvbnRlbnQiCiAgICB8ICItbW96LW1pbi1jb250ZW50IgogICAgfCAiLXdlYmtpdC1maWxsLWF2YWlsYWJsZSIKICAgIHwgIi13ZWJraXQtZml0LWNvbnRlbnQiCiAgICB8ICItd2Via2l0LW1heC1jb250ZW50IgogICAgfCAiLXdlYmtpdC1taW4tY29udGVudCIKICAgIHwgImF1dG8iCiAgICB8ICJmaXQtY29udGVudCIKICAgIHwgImludHJpbnNpYyIKICAgIHwgIm1heC1jb250ZW50IgogICAgfCAibWluLWNvbnRlbnQiCiAgICB8ICJtaW4taW50cmluc2ljIgogICAgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNaXhCbGVuZE1vZGUgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQmxlbmRNb2RlOwoKICBleHBvcnQgdHlwZSBPZmZzZXQ8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Qb3NpdGlvbjxUTGVuZ3RoPiB8IERhdGFUeXBlLkdlb21ldHJ5Qm94IHwgImF1dG8iIHwgIm5vbmUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgT2Zmc2V0RGlzdGFuY2U8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgT2Zmc2V0UGF0aCA9IEdsb2JhbHMgfCBEYXRhVHlwZS5HZW9tZXRyeUJveCB8ICJub25lIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE9mZnNldFJvdGF0ZSA9IEdsb2JhbHMgfCAiYXV0byIgfCAicmV2ZXJzZSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBPYmplY3RGaXQgPSBHbG9iYWxzIHwgImNvbnRhaW4iIHwgImNvdmVyIiB8ICJmaWxsIiB8ICJub25lIiB8ICJzY2FsZS1kb3duIjsKCiAgZXhwb3J0IHR5cGUgT2JqZWN0UG9zaXRpb248VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Qb3NpdGlvbjxUTGVuZ3RoPjsKCiAgZXhwb3J0IHR5cGUgT2Zmc2V0QW5jaG9yPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuUG9zaXRpb248VExlbmd0aD4gfCAiYXV0byI7CgogIGV4cG9ydCB0eXBlIE9wYWNpdHkgPSBHbG9iYWxzIHwgKHN0cmluZyAmIHt9KSB8IChudW1iZXIgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE9yZGVyID0gR2xvYmFscyB8IChudW1iZXIgJiB7fSkgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBPcnBoYW5zID0gR2xvYmFscyB8IChudW1iZXIgJiB7fSkgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBPdXRsaW5lPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3IgfCBEYXRhVHlwZS5MaW5lU3R5bGUgfCBEYXRhVHlwZS5MaW5lV2lkdGg8VExlbmd0aD4gfCAiYXV0byIgfCAiaW52ZXJ0IiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE91dGxpbmVDb2xvciA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Db2xvciB8ICJpbnZlcnQiOwoKICBleHBvcnQgdHlwZSBPdXRsaW5lT2Zmc2V0PFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aDsKCiAgZXhwb3J0IHR5cGUgT3V0bGluZVN0eWxlID0gR2xvYmFscyB8IERhdGFUeXBlLkxpbmVTdHlsZSB8ICJhdXRvIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE91dGxpbmVXaWR0aDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IERhdGFUeXBlLkxpbmVXaWR0aDxUTGVuZ3RoPjsKCiAgZXhwb3J0IHR5cGUgT3ZlcmZsb3cgPSBHbG9iYWxzIHwgIi1tb3otaGlkZGVuLXVuc2Nyb2xsYWJsZSIgfCAiYXV0byIgfCAiY2xpcCIgfCAiaGlkZGVuIiB8ICJzY3JvbGwiIHwgInZpc2libGUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgT3ZlcmZsb3dBbmNob3IgPSBHbG9iYWxzIHwgImF1dG8iIHwgIm5vbmUiOwoKICBleHBvcnQgdHlwZSBPdmVyZmxvd0Jsb2NrID0gR2xvYmFscyB8ICJhdXRvIiB8ICJjbGlwIiB8ICJoaWRkZW4iIHwgInNjcm9sbCIgfCAidmlzaWJsZSI7CgogIGV4cG9ydCB0eXBlIE92ZXJmbG93Q2xpcEJveCA9IEdsb2JhbHMgfCAiY29udGVudC1ib3giIHwgInBhZGRpbmctYm94IjsKCiAgZXhwb3J0IHR5cGUgT3ZlcmZsb3dDbGlwTWFyZ2luPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuVmlzdWFsQm94IHwgVExlbmd0aCB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE92ZXJmbG93SW5saW5lID0gR2xvYmFscyB8ICJhdXRvIiB8ICJjbGlwIiB8ICJoaWRkZW4iIHwgInNjcm9sbCIgfCAidmlzaWJsZSI7CgogIGV4cG9ydCB0eXBlIE92ZXJmbG93V3JhcCA9IEdsb2JhbHMgfCAiYW55d2hlcmUiIHwgImJyZWFrLXdvcmQiIHwgIm5vcm1hbCI7CgogIGV4cG9ydCB0eXBlIE92ZXJmbG93WCA9IEdsb2JhbHMgfCAiLW1vei1oaWRkZW4tdW5zY3JvbGxhYmxlIiB8ICJhdXRvIiB8ICJjbGlwIiB8ICJoaWRkZW4iIHwgInNjcm9sbCIgfCAidmlzaWJsZSI7CgogIGV4cG9ydCB0eXBlIE92ZXJmbG93WSA9IEdsb2JhbHMgfCAiLW1vei1oaWRkZW4tdW5zY3JvbGxhYmxlIiB8ICJhdXRvIiB8ICJjbGlwIiB8ICJoaWRkZW4iIHwgInNjcm9sbCIgfCAidmlzaWJsZSI7CgogIGV4cG9ydCB0eXBlIE92ZXJzY3JvbGxCZWhhdmlvciA9IEdsb2JhbHMgfCAiYXV0byIgfCAiY29udGFpbiIgfCAibm9uZSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBPdmVyc2Nyb2xsQmVoYXZpb3JCbG9jayA9IEdsb2JhbHMgfCAiYXV0byIgfCAiY29udGFpbiIgfCAibm9uZSI7CgogIGV4cG9ydCB0eXBlIE92ZXJzY3JvbGxCZWhhdmlvcklubGluZSA9IEdsb2JhbHMgfCAiYXV0byIgfCAiY29udGFpbiIgfCAibm9uZSI7CgogIGV4cG9ydCB0eXBlIE92ZXJzY3JvbGxCZWhhdmlvclggPSBHbG9iYWxzIHwgImF1dG8iIHwgImNvbnRhaW4iIHwgIm5vbmUiOwoKICBleHBvcnQgdHlwZSBPdmVyc2Nyb2xsQmVoYXZpb3JZID0gR2xvYmFscyB8ICJhdXRvIiB8ICJjb250YWluIiB8ICJub25lIjsKCiAgZXhwb3J0IHR5cGUgUGFkZGluZzxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBQYWRkaW5nQmxvY2s8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgUGFkZGluZ0Jsb2NrRW5kPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFBhZGRpbmdCbG9ja1N0YXJ0PFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFBhZGRpbmdCb3R0b208VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgUGFkZGluZ0lubGluZTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBQYWRkaW5nSW5saW5lRW5kPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFBhZGRpbmdJbmxpbmVTdGFydDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBQYWRkaW5nTGVmdDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBQYWRkaW5nUmlnaHQ8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgUGFkZGluZ1RvcDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBQYWdlQnJlYWtBZnRlciA9IEdsb2JhbHMgfCAiYWx3YXlzIiB8ICJhdXRvIiB8ICJhdm9pZCIgfCAibGVmdCIgfCAicmVjdG8iIHwgInJpZ2h0IiB8ICJ2ZXJzbyI7CgogIGV4cG9ydCB0eXBlIFBhZ2VCcmVha0JlZm9yZSA9IEdsb2JhbHMgfCAiYWx3YXlzIiB8ICJhdXRvIiB8ICJhdm9pZCIgfCAibGVmdCIgfCAicmVjdG8iIHwgInJpZ2h0IiB8ICJ2ZXJzbyI7CgogIGV4cG9ydCB0eXBlIFBhZ2VCcmVha0luc2lkZSA9IEdsb2JhbHMgfCAiYXV0byIgfCAiYXZvaWQiOwoKICBleHBvcnQgdHlwZSBQYWludE9yZGVyID0gR2xvYmFscyB8ICJmaWxsIiB8ICJtYXJrZXJzIiB8ICJub3JtYWwiIHwgInN0cm9rZSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBQZXJzcGVjdGl2ZTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAibm9uZSI7CgogIGV4cG9ydCB0eXBlIFBlcnNwZWN0aXZlT3JpZ2luPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuUG9zaXRpb248VExlbmd0aD47CgogIGV4cG9ydCB0eXBlIFBsYWNlQ29udGVudCA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Db250ZW50RGlzdHJpYnV0aW9uIHwgRGF0YVR5cGUuQ29udGVudFBvc2l0aW9uIHwgImJhc2VsaW5lIiB8ICJub3JtYWwiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgUGxhY2VJdGVtcyA9IEdsb2JhbHMgfCBEYXRhVHlwZS5TZWxmUG9zaXRpb24gfCAiYmFzZWxpbmUiIHwgIm5vcm1hbCIgfCAic3RyZXRjaCIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBQbGFjZVNlbGYgPSBHbG9iYWxzIHwgRGF0YVR5cGUuU2VsZlBvc2l0aW9uIHwgImF1dG8iIHwgImJhc2VsaW5lIiB8ICJub3JtYWwiIHwgInN0cmV0Y2giIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgUG9pbnRlckV2ZW50cyA9IEdsb2JhbHMgfCAiYWxsIiB8ICJhdXRvIiB8ICJmaWxsIiB8ICJpbmhlcml0IiB8ICJub25lIiB8ICJwYWludGVkIiB8ICJzdHJva2UiIHwgInZpc2libGUiIHwgInZpc2libGVGaWxsIiB8ICJ2aXNpYmxlUGFpbnRlZCIgfCAidmlzaWJsZVN0cm9rZSI7CgogIGV4cG9ydCB0eXBlIFBvc2l0aW9uID0gR2xvYmFscyB8ICItd2Via2l0LXN0aWNreSIgfCAiYWJzb2x1dGUiIHwgImZpeGVkIiB8ICJyZWxhdGl2ZSIgfCAic3RhdGljIiB8ICJzdGlja3kiOwoKICBleHBvcnQgdHlwZSBRdW90ZXMgPSBHbG9iYWxzIHwgImF1dG8iIHwgIm5vbmUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgUmVzaXplID0gR2xvYmFscyB8ICJibG9jayIgfCAiYm90aCIgfCAiaG9yaXpvbnRhbCIgfCAiaW5saW5lIiB8ICJub25lIiB8ICJ2ZXJ0aWNhbCI7CgogIGV4cG9ydCB0eXBlIFJpZ2h0PFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8ICJhdXRvIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFJvdGF0ZSA9IEdsb2JhbHMgfCAibm9uZSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBSb3dHYXA8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgIm5vcm1hbCIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBSdWJ5QWxpZ24gPSBHbG9iYWxzIHwgImNlbnRlciIgfCAic3BhY2UtYXJvdW5kIiB8ICJzcGFjZS1iZXR3ZWVuIiB8ICJzdGFydCI7CgogIGV4cG9ydCB0eXBlIFJ1YnlNZXJnZSA9IEdsb2JhbHMgfCAiYXV0byIgfCAiY29sbGFwc2UiIHwgInNlcGFyYXRlIjsKCiAgZXhwb3J0IHR5cGUgUnVieVBvc2l0aW9uID0gR2xvYmFscyB8ICJhbHRlcm5hdGUiIHwgImludGVyLWNoYXJhY3RlciIgfCAib3ZlciIgfCAidW5kZXIiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgU2NhbGUgPSBHbG9iYWxzIHwgIm5vbmUiIHwgKHN0cmluZyAmIHt9KSB8IChudW1iZXIgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFNjcm9sbEJlaGF2aW9yID0gR2xvYmFscyB8ICJhdXRvIiB8ICJzbW9vdGgiOwoKICBleHBvcnQgdHlwZSBTY3JvbGxNYXJnaW48VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgU2Nyb2xsTWFyZ2luQmxvY2s8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgU2Nyb2xsTWFyZ2luQmxvY2tFbmQ8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoOwoKICBleHBvcnQgdHlwZSBTY3JvbGxNYXJnaW5CbG9ja1N0YXJ0PFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aDsKCiAgZXhwb3J0IHR5cGUgU2Nyb2xsTWFyZ2luQm90dG9tPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aDsKCiAgZXhwb3J0IHR5cGUgU2Nyb2xsTWFyZ2luSW5saW5lPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFNjcm9sbE1hcmdpbklubGluZUVuZDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGg7CgogIGV4cG9ydCB0eXBlIFNjcm9sbE1hcmdpbklubGluZVN0YXJ0PFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aDsKCiAgZXhwb3J0IHR5cGUgU2Nyb2xsTWFyZ2luTGVmdDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGg7CgogIGV4cG9ydCB0eXBlIFNjcm9sbE1hcmdpblJpZ2h0PFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aDsKCiAgZXhwb3J0IHR5cGUgU2Nyb2xsTWFyZ2luVG9wPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aDsKCiAgZXhwb3J0IHR5cGUgU2Nyb2xsUGFkZGluZzxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiYXV0byIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBTY3JvbGxQYWRkaW5nQmxvY2s8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgImF1dG8iIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgU2Nyb2xsUGFkZGluZ0Jsb2NrRW5kPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8ICJhdXRvIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFNjcm9sbFBhZGRpbmdCbG9ja1N0YXJ0PFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8ICJhdXRvIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFNjcm9sbFBhZGRpbmdCb3R0b208VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgImF1dG8iIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgU2Nyb2xsUGFkZGluZ0lubGluZTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiYXV0byIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBTY3JvbGxQYWRkaW5nSW5saW5lRW5kPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8ICJhdXRvIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFNjcm9sbFBhZGRpbmdJbmxpbmVTdGFydDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiYXV0byIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBTY3JvbGxQYWRkaW5nTGVmdDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiYXV0byIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBTY3JvbGxQYWRkaW5nUmlnaHQ8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgImF1dG8iIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgU2Nyb2xsUGFkZGluZ1RvcDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiYXV0byIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBTY3JvbGxTbmFwQWxpZ24gPSBHbG9iYWxzIHwgImNlbnRlciIgfCAiZW5kIiB8ICJub25lIiB8ICJzdGFydCIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBTY3JvbGxTbmFwQ29vcmRpbmF0ZTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IERhdGFUeXBlLlBvc2l0aW9uPFRMZW5ndGg+IHwgIm5vbmUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgU2Nyb2xsU25hcERlc3RpbmF0aW9uPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuUG9zaXRpb248VExlbmd0aD47CgogIGV4cG9ydCB0eXBlIFNjcm9sbFNuYXBQb2ludHNYID0gR2xvYmFscyB8ICJub25lIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFNjcm9sbFNuYXBQb2ludHNZID0gR2xvYmFscyB8ICJub25lIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFNjcm9sbFNuYXBTdG9wID0gR2xvYmFscyB8ICJhbHdheXMiIHwgIm5vcm1hbCI7CgogIGV4cG9ydCB0eXBlIFNjcm9sbFNuYXBUeXBlID0gR2xvYmFscyB8ICJibG9jayIgfCAiYm90aCIgfCAiaW5saW5lIiB8ICJub25lIiB8ICJ4IiB8ICJ5IiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFNjcm9sbFNuYXBUeXBlWCA9IEdsb2JhbHMgfCAibWFuZGF0b3J5IiB8ICJub25lIiB8ICJwcm94aW1pdHkiOwoKICBleHBvcnQgdHlwZSBTY3JvbGxTbmFwVHlwZVkgPSBHbG9iYWxzIHwgIm1hbmRhdG9yeSIgfCAibm9uZSIgfCAicHJveGltaXR5IjsKCiAgZXhwb3J0IHR5cGUgU2Nyb2xsYmFyQ29sb3IgPSBHbG9iYWxzIHwgImF1dG8iIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgU2Nyb2xsYmFyR3V0dGVyID0gR2xvYmFscyB8ICJhdXRvIiB8ICJzdGFibGUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTXNTY3JvbGxiYXJUcmFja0NvbG9yID0gR2xvYmFscyB8IERhdGFUeXBlLkNvbG9yOwoKICBleHBvcnQgdHlwZSBTY3JvbGxiYXJXaWR0aCA9IEdsb2JhbHMgfCAiYXV0byIgfCAibm9uZSIgfCAidGhpbiI7CgogIGV4cG9ydCB0eXBlIFNoYXBlSW1hZ2VUaHJlc2hvbGQgPSBHbG9iYWxzIHwgKHN0cmluZyAmIHt9KSB8IChudW1iZXIgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFNoYXBlTWFyZ2luPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFNoYXBlT3V0c2lkZSA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Cb3ggfCAibWFyZ2luLWJveCIgfCAibm9uZSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBUYWJTaXplPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8IChudW1iZXIgJiB7fSkgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBUYWJsZUxheW91dCA9IEdsb2JhbHMgfCAiYXV0byIgfCAiZml4ZWQiOwoKICBleHBvcnQgdHlwZSBUZXh0QWxpZ24gPSBHbG9iYWxzIHwgImNlbnRlciIgfCAiZW5kIiB8ICJqdXN0aWZ5IiB8ICJsZWZ0IiB8ICJtYXRjaC1wYXJlbnQiIHwgInJpZ2h0IiB8ICJzdGFydCI7CgogIGV4cG9ydCB0eXBlIFRleHRBbGlnbkxhc3QgPSBHbG9iYWxzIHwgImF1dG8iIHwgImNlbnRlciIgfCAiZW5kIiB8ICJqdXN0aWZ5IiB8ICJsZWZ0IiB8ICJyaWdodCIgfCAic3RhcnQiOwoKICBleHBvcnQgdHlwZSBUZXh0Q29tYmluZVVwcmlnaHQgPSBHbG9iYWxzIHwgImFsbCIgfCAibm9uZSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBUZXh0RGVjb3JhdGlvbjxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0KICAgIHwgR2xvYmFscwogICAgfCBEYXRhVHlwZS5Db2xvcgogICAgfCBUTGVuZ3RoCiAgICB8ICJhdXRvIgogICAgfCAiYmxpbmsiCiAgICB8ICJkYXNoZWQiCiAgICB8ICJkb3R0ZWQiCiAgICB8ICJkb3VibGUiCiAgICB8ICJmcm9tLWZvbnQiCiAgICB8ICJncmFtbWFyLWVycm9yIgogICAgfCAibGluZS10aHJvdWdoIgogICAgfCAibm9uZSIKICAgIHwgIm92ZXJsaW5lIgogICAgfCAic29saWQiCiAgICB8ICJzcGVsbGluZy1lcnJvciIKICAgIHwgInVuZGVybGluZSIKICAgIHwgIndhdnkiCiAgICB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFRleHREZWNvcmF0aW9uQ29sb3IgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3I7CgogIGV4cG9ydCB0eXBlIFRleHREZWNvcmF0aW9uTGluZSA9IEdsb2JhbHMgfCAiYmxpbmsiIHwgImdyYW1tYXItZXJyb3IiIHwgImxpbmUtdGhyb3VnaCIgfCAibm9uZSIgfCAib3ZlcmxpbmUiIHwgInNwZWxsaW5nLWVycm9yIiB8ICJ1bmRlcmxpbmUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgVGV4dERlY29yYXRpb25Ta2lwID0gR2xvYmFscyB8ICJib3gtZGVjb3JhdGlvbiIgfCAiZWRnZXMiIHwgImxlYWRpbmctc3BhY2VzIiB8ICJub25lIiB8ICJvYmplY3RzIiB8ICJzcGFjZXMiIHwgInRyYWlsaW5nLXNwYWNlcyIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBUZXh0RGVjb3JhdGlvblNraXBJbmsgPSBHbG9iYWxzIHwgImFsbCIgfCAiYXV0byIgfCAibm9uZSI7CgogIGV4cG9ydCB0eXBlIFRleHREZWNvcmF0aW9uU3R5bGUgPSBHbG9iYWxzIHwgImRhc2hlZCIgfCAiZG90dGVkIiB8ICJkb3VibGUiIHwgInNvbGlkIiB8ICJ3YXZ5IjsKCiAgZXhwb3J0IHR5cGUgVGV4dERlY29yYXRpb25UaGlja25lc3M8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgImF1dG8iIHwgImZyb20tZm9udCIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBUZXh0RW1waGFzaXMgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3IgfCAiY2lyY2xlIiB8ICJkb3QiIHwgImRvdWJsZS1jaXJjbGUiIHwgImZpbGxlZCIgfCAibm9uZSIgfCAib3BlbiIgfCAic2VzYW1lIiB8ICJ0cmlhbmdsZSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBUZXh0RW1waGFzaXNDb2xvciA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Db2xvcjsKCiAgZXhwb3J0IHR5cGUgVGV4dEVtcGhhc2lzUG9zaXRpb24gPSBHbG9iYWxzIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgVGV4dEVtcGhhc2lzU3R5bGUgPSBHbG9iYWxzIHwgImNpcmNsZSIgfCAiZG90IiB8ICJkb3VibGUtY2lyY2xlIiB8ICJmaWxsZWQiIHwgIm5vbmUiIHwgIm9wZW4iIHwgInNlc2FtZSIgfCAidHJpYW5nbGUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgVGV4dEluZGVudDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBUZXh0SnVzdGlmeSA9IEdsb2JhbHMgfCAiYXV0byIgfCAiaW50ZXItY2hhcmFjdGVyIiB8ICJpbnRlci13b3JkIiB8ICJub25lIjsKCiAgZXhwb3J0IHR5cGUgVGV4dE9yaWVudGF0aW9uID0gR2xvYmFscyB8ICJtaXhlZCIgfCAic2lkZXdheXMiIHwgInVwcmlnaHQiOwoKICBleHBvcnQgdHlwZSBUZXh0T3ZlcmZsb3cgPSBHbG9iYWxzIHwgImNsaXAiIHwgImVsbGlwc2lzIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFRleHRSZW5kZXJpbmcgPSBHbG9iYWxzIHwgImF1dG8iIHwgImdlb21ldHJpY1ByZWNpc2lvbiIgfCAib3B0aW1pemVMZWdpYmlsaXR5IiB8ICJvcHRpbWl6ZVNwZWVkIjsKCiAgZXhwb3J0IHR5cGUgVGV4dFNoYWRvdyA9IEdsb2JhbHMgfCAibm9uZSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBUZXh0U2l6ZUFkanVzdCA9IEdsb2JhbHMgfCAiYXV0byIgfCAibm9uZSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBUZXh0VHJhbnNmb3JtID0gR2xvYmFscyB8ICJjYXBpdGFsaXplIiB8ICJmdWxsLXNpemUta2FuYSIgfCAiZnVsbC13aWR0aCIgfCAibG93ZXJjYXNlIiB8ICJub25lIiB8ICJ1cHBlcmNhc2UiOwoKICBleHBvcnQgdHlwZSBUZXh0VW5kZXJsaW5lT2Zmc2V0PFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8ICJhdXRvIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFRleHRVbmRlcmxpbmVQb3NpdGlvbiA9IEdsb2JhbHMgfCAiYXV0byIgfCAiZnJvbS1mb250IiB8ICJsZWZ0IiB8ICJyaWdodCIgfCAidW5kZXIiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgVG9wPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8ICJhdXRvIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFRvdWNoQWN0aW9uID0KICAgIHwgR2xvYmFscwogICAgfCAiLW1zLW1hbmlwdWxhdGlvbiIKICAgIHwgIi1tcy1ub25lIgogICAgfCAiLW1zLXBpbmNoLXpvb20iCiAgICB8ICJhdXRvIgogICAgfCAibWFuaXB1bGF0aW9uIgogICAgfCAibm9uZSIKICAgIHwgInBhbi1kb3duIgogICAgfCAicGFuLWxlZnQiCiAgICB8ICJwYW4tcmlnaHQiCiAgICB8ICJwYW4tdXAiCiAgICB8ICJwYW4teCIKICAgIHwgInBhbi15IgogICAgfCAicGluY2gtem9vbSIKICAgIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgVHJhbnNmb3JtID0gR2xvYmFscyB8ICJub25lIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFRyYW5zZm9ybUJveCA9IEdsb2JhbHMgfCAiYm9yZGVyLWJveCIgfCAiY29udGVudC1ib3giIHwgImZpbGwtYm94IiB8ICJzdHJva2UtYm94IiB8ICJ2aWV3LWJveCI7CgogIGV4cG9ydCB0eXBlIFRyYW5zZm9ybU9yaWdpbjxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiYm90dG9tIiB8ICJjZW50ZXIiIHwgImxlZnQiIHwgInJpZ2h0IiB8ICJ0b3AiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgVHJhbnNmb3JtU3R5bGUgPSBHbG9iYWxzIHwgImZsYXQiIHwgInByZXNlcnZlLTNkIjsKCiAgZXhwb3J0IHR5cGUgVHJhbnNpdGlvbjxUVGltZSA9IHN0cmluZyAmIHt9PiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5TaW5nbGVUcmFuc2l0aW9uPFRUaW1lPiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFRyYW5zaXRpb25EZWxheTxUVGltZSA9IHN0cmluZyAmIHt9PiA9IEdsb2JhbHMgfCBUVGltZSB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFRyYW5zaXRpb25EdXJhdGlvbjxUVGltZSA9IHN0cmluZyAmIHt9PiA9IEdsb2JhbHMgfCBUVGltZSB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFRyYW5zaXRpb25Qcm9wZXJ0eSA9IEdsb2JhbHMgfCAiYWxsIiB8ICJub25lIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5FYXNpbmdGdW5jdGlvbiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFRyYW5zbGF0ZTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAibm9uZSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBVbmljb2RlQmlkaSA9CiAgICB8IEdsb2JhbHMKICAgIHwgIi1tb3otaXNvbGF0ZSIKICAgIHwgIi1tb3otaXNvbGF0ZS1vdmVycmlkZSIKICAgIHwgIi1tb3otcGxhaW50ZXh0IgogICAgfCAiLXdlYmtpdC1pc29sYXRlIgogICAgfCAiLXdlYmtpdC1pc29sYXRlLW92ZXJyaWRlIgogICAgfCAiLXdlYmtpdC1wbGFpbnRleHQiCiAgICB8ICJiaWRpLW92ZXJyaWRlIgogICAgfCAiZW1iZWQiCiAgICB8ICJpc29sYXRlIgogICAgfCAiaXNvbGF0ZS1vdmVycmlkZSIKICAgIHwgIm5vcm1hbCIKICAgIHwgInBsYWludGV4dCI7CgogIGV4cG9ydCB0eXBlIFVzZXJTZWxlY3QgPSBHbG9iYWxzIHwgIi1tb3otbm9uZSIgfCAiYWxsIiB8ICJhdXRvIiB8ICJjb250YWluIiB8ICJlbGVtZW50IiB8ICJub25lIiB8ICJ0ZXh0IjsKCiAgZXhwb3J0IHR5cGUgVmVydGljYWxBbGlnbjxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0KICAgIHwgR2xvYmFscwogICAgfCBUTGVuZ3RoCiAgICB8ICJiYXNlbGluZSIKICAgIHwgImJvdHRvbSIKICAgIHwgIm1pZGRsZSIKICAgIHwgInN1YiIKICAgIHwgInN1cGVyIgogICAgfCAidGV4dC1ib3R0b20iCiAgICB8ICJ0ZXh0LXRvcCIKICAgIHwgInRvcCIKICAgIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgVmlzaWJpbGl0eSA9IEdsb2JhbHMgfCAiY29sbGFwc2UiIHwgImhpZGRlbiIgfCAidmlzaWJsZSI7CgogIGV4cG9ydCB0eXBlIFdoaXRlU3BhY2UgPSBHbG9iYWxzIHwgIi1tb3otcHJlLXdyYXAiIHwgImJyZWFrLXNwYWNlcyIgfCAibm9ybWFsIiB8ICJub3dyYXAiIHwgInByZSIgfCAicHJlLWxpbmUiIHwgInByZS13cmFwIjsKCiAgZXhwb3J0IHR5cGUgV2lkb3dzID0gR2xvYmFscyB8IChudW1iZXIgJiB7fSkgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBXaWR0aDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0KICAgIHwgR2xvYmFscwogICAgfCBUTGVuZ3RoCiAgICB8ICItbW96LWZpdC1jb250ZW50IgogICAgfCAiLW1vei1tYXgtY29udGVudCIKICAgIHwgIi1tb3otbWluLWNvbnRlbnQiCiAgICB8ICItd2Via2l0LWZpdC1jb250ZW50IgogICAgfCAiLXdlYmtpdC1tYXgtY29udGVudCIKICAgIHwgImF1dG8iCiAgICB8ICJmaXQtY29udGVudCIKICAgIHwgImludHJpbnNpYyIKICAgIHwgIm1heC1jb250ZW50IgogICAgfCAibWluLWNvbnRlbnQiCiAgICB8ICJtaW4taW50cmluc2ljIgogICAgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBXaWxsQ2hhbmdlID0gR2xvYmFscyB8IERhdGFUeXBlLkFuaW1hdGVhYmxlRmVhdHVyZSB8ICJhdXRvIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFdvcmRCcmVhayA9IEdsb2JhbHMgfCAiYnJlYWstYWxsIiB8ICJicmVhay13b3JkIiB8ICJrZWVwLWFsbCIgfCAibm9ybWFsIjsKCiAgZXhwb3J0IHR5cGUgV29yZFNwYWNpbmc8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgIm5vcm1hbCI7CgogIGV4cG9ydCB0eXBlIFdvcmRXcmFwID0gR2xvYmFscyB8ICJicmVhay13b3JkIiB8ICJub3JtYWwiOwoKICBleHBvcnQgdHlwZSBXcml0aW5nTW9kZSA9IEdsb2JhbHMgfCAiaG9yaXpvbnRhbC10YiIgfCAic2lkZXdheXMtbHIiIHwgInNpZGV3YXlzLXJsIiB8ICJ2ZXJ0aWNhbC1sciIgfCAidmVydGljYWwtcmwiOwoKICBleHBvcnQgdHlwZSBaSW5kZXggPSBHbG9iYWxzIHwgImF1dG8iIHwgKG51bWJlciAmIHt9KSB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFpvb20gPSBHbG9iYWxzIHwgIm5vcm1hbCIgfCAicmVzZXQiIHwgKHN0cmluZyAmIHt9KSB8IChudW1iZXIgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1vekFwcGVhcmFuY2UgPQogICAgfCBHbG9iYWxzCiAgICB8ICItbW96LW1hYy11bmlmaWVkLXRvb2xiYXIiCiAgICB8ICItbW96LXdpbi1ib3JkZXJsZXNzLWdsYXNzIgogICAgfCAiLW1vei13aW4tYnJvd3NlcnRhYmJhci10b29sYm94IgogICAgfCAiLW1vei13aW4tY29tbXVuaWNhdGlvbnMtdG9vbGJveCIKICAgIHwgIi1tb3otd2luLWNvbW11bmljYXRpb25zdGV4dCIKICAgIHwgIi1tb3otd2luLWV4Y2x1ZGUtZ2xhc3MiCiAgICB8ICItbW96LXdpbi1nbGFzcyIKICAgIHwgIi1tb3otd2luLW1lZGlhLXRvb2xib3giCiAgICB8ICItbW96LXdpbi1tZWRpYXRleHQiCiAgICB8ICItbW96LXdpbmRvdy1idXR0b24tYm94IgogICAgfCAiLW1vei13aW5kb3ctYnV0dG9uLWJveC1tYXhpbWl6ZWQiCiAgICB8ICItbW96LXdpbmRvdy1idXR0b24tY2xvc2UiCiAgICB8ICItbW96LXdpbmRvdy1idXR0b24tbWF4aW1pemUiCiAgICB8ICItbW96LXdpbmRvdy1idXR0b24tbWluaW1pemUiCiAgICB8ICItbW96LXdpbmRvdy1idXR0b24tcmVzdG9yZSIKICAgIHwgIi1tb3otd2luZG93LWZyYW1lLWJvdHRvbSIKICAgIHwgIi1tb3otd2luZG93LWZyYW1lLWxlZnQiCiAgICB8ICItbW96LXdpbmRvdy1mcmFtZS1yaWdodCIKICAgIHwgIi1tb3otd2luZG93LXRpdGxlYmFyIgogICAgfCAiLW1vei13aW5kb3ctdGl0bGViYXItbWF4aW1pemVkIgogICAgfCAiYnV0dG9uIgogICAgfCAiYnV0dG9uLWFycm93LWRvd24iCiAgICB8ICJidXR0b24tYXJyb3ctbmV4dCIKICAgIHwgImJ1dHRvbi1hcnJvdy1wcmV2aW91cyIKICAgIHwgImJ1dHRvbi1hcnJvdy11cCIKICAgIHwgImJ1dHRvbi1iZXZlbCIKICAgIHwgImJ1dHRvbi1mb2N1cyIKICAgIHwgImNhcmV0IgogICAgfCAiY2hlY2tib3giCiAgICB8ICJjaGVja2JveC1jb250YWluZXIiCiAgICB8ICJjaGVja2JveC1sYWJlbCIKICAgIHwgImNoZWNrbWVudWl0ZW0iCiAgICB8ICJkdWFsYnV0dG9uIgogICAgfCAiZ3JvdXBib3giCiAgICB8ICJsaXN0Ym94IgogICAgfCAibGlzdGl0ZW0iCiAgICB8ICJtZW51YXJyb3ciCiAgICB8ICJtZW51YmFyIgogICAgfCAibWVudWNoZWNrYm94IgogICAgfCAibWVudWltYWdlIgogICAgfCAibWVudWl0ZW0iCiAgICB8ICJtZW51aXRlbXRleHQiCiAgICB8ICJtZW51bGlzdCIKICAgIHwgIm1lbnVsaXN0LWJ1dHRvbiIKICAgIHwgIm1lbnVsaXN0LXRleHQiCiAgICB8ICJtZW51bGlzdC10ZXh0ZmllbGQiCiAgICB8ICJtZW51cG9wdXAiCiAgICB8ICJtZW51cmFkaW8iCiAgICB8ICJtZW51c2VwYXJhdG9yIgogICAgfCAibWV0ZXJiYXIiCiAgICB8ICJtZXRlcmNodW5rIgogICAgfCAibm9uZSIKICAgIHwgInByb2dyZXNzYmFyIgogICAgfCAicHJvZ3Jlc3NiYXItdmVydGljYWwiCiAgICB8ICJwcm9ncmVzc2NodW5rIgogICAgfCAicHJvZ3Jlc3NjaHVuay12ZXJ0aWNhbCIKICAgIHwgInJhZGlvIgogICAgfCAicmFkaW8tY29udGFpbmVyIgogICAgfCAicmFkaW8tbGFiZWwiCiAgICB8ICJyYWRpb21lbnVpdGVtIgogICAgfCAicmFuZ2UiCiAgICB8ICJyYW5nZS10aHVtYiIKICAgIHwgInJlc2l6ZXIiCiAgICB8ICJyZXNpemVycGFuZWwiCiAgICB8ICJzY2FsZS1ob3Jpem9udGFsIgogICAgfCAic2NhbGUtdmVydGljYWwiCiAgICB8ICJzY2FsZXRodW1iLWhvcml6b250YWwiCiAgICB8ICJzY2FsZXRodW1iLXZlcnRpY2FsIgogICAgfCAic2NhbGV0aHVtYmVuZCIKICAgIHwgInNjYWxldGh1bWJzdGFydCIKICAgIHwgInNjYWxldGh1bWJ0aWNrIgogICAgfCAic2Nyb2xsYmFyYnV0dG9uLWRvd24iCiAgICB8ICJzY3JvbGxiYXJidXR0b24tbGVmdCIKICAgIHwgInNjcm9sbGJhcmJ1dHRvbi1yaWdodCIKICAgIHwgInNjcm9sbGJhcmJ1dHRvbi11cCIKICAgIHwgInNjcm9sbGJhcnRodW1iLWhvcml6b250YWwiCiAgICB8ICJzY3JvbGxiYXJ0aHVtYi12ZXJ0aWNhbCIKICAgIHwgInNjcm9sbGJhcnRyYWNrLWhvcml6b250YWwiCiAgICB8ICJzY3JvbGxiYXJ0cmFjay12ZXJ0aWNhbCIKICAgIHwgInNlYXJjaGZpZWxkIgogICAgfCAic2VwYXJhdG9yIgogICAgfCAic2hlZXQiCiAgICB8ICJzcGlubmVyIgogICAgfCAic3Bpbm5lci1kb3duYnV0dG9uIgogICAgfCAic3Bpbm5lci10ZXh0ZmllbGQiCiAgICB8ICJzcGlubmVyLXVwYnV0dG9uIgogICAgfCAic3BsaXR0ZXIiCiAgICB8ICJzdGF0dXNiYXIiCiAgICB8ICJzdGF0dXNiYXJwYW5lbCIKICAgIHwgInRhYiIKICAgIHwgInRhYi1zY3JvbGwtYXJyb3ctYmFjayIKICAgIHwgInRhYi1zY3JvbGwtYXJyb3ctZm9yd2FyZCIKICAgIHwgInRhYnBhbmVsIgogICAgfCAidGFicGFuZWxzIgogICAgfCAidGV4dGZpZWxkIgogICAgfCAidGV4dGZpZWxkLW11bHRpbGluZSIKICAgIHwgInRvb2xiYXIiCiAgICB8ICJ0b29sYmFyYnV0dG9uIgogICAgfCAidG9vbGJhcmJ1dHRvbi1kcm9wZG93biIKICAgIHwgInRvb2xiYXJncmlwcGVyIgogICAgfCAidG9vbGJveCIKICAgIHwgInRvb2x0aXAiCiAgICB8ICJ0cmVlaGVhZGVyIgogICAgfCAidHJlZWhlYWRlcmNlbGwiCiAgICB8ICJ0cmVlaGVhZGVyc29ydGFycm93IgogICAgfCAidHJlZWl0ZW0iCiAgICB8ICJ0cmVlbGluZSIKICAgIHwgInRyZWV0d2lzdHkiCiAgICB8ICJ0cmVldHdpc3R5b3BlbiIKICAgIHwgInRyZWV2aWV3IjsKCiAgZXhwb3J0IHR5cGUgTW96QmluZGluZyA9IEdsb2JhbHMgfCAibm9uZSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNb3pCb3JkZXJCb3R0b21Db2xvcnMgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3IgfCAibm9uZSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNb3pCb3JkZXJMZWZ0Q29sb3JzID0gR2xvYmFscyB8IERhdGFUeXBlLkNvbG9yIHwgIm5vbmUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTW96Qm9yZGVyUmlnaHRDb2xvcnMgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3IgfCAibm9uZSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNb3pCb3JkZXJUb3BDb2xvcnMgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3IgfCAibm9uZSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNb3pDb250ZXh0UHJvcGVydGllcyA9IEdsb2JhbHMgfCAiZmlsbCIgfCAiZmlsbC1vcGFjaXR5IiB8ICJub25lIiB8ICJzdHJva2UiIHwgInN0cm9rZS1vcGFjaXR5IiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1vekZsb2F0RWRnZSA9IEdsb2JhbHMgfCAiYm9yZGVyLWJveCIgfCAiY29udGVudC1ib3giIHwgIm1hcmdpbi1ib3giIHwgInBhZGRpbmctYm94IjsKCiAgZXhwb3J0IHR5cGUgTW96Rm9yY2VCcm9rZW5JbWFnZUljb24gPSBHbG9iYWxzIHwgMCB8IChzdHJpbmcgJiB7fSkgfCAxOwoKICBleHBvcnQgdHlwZSBNb3pJbWFnZVJlZ2lvbiA9IEdsb2JhbHMgfCAiYXV0byIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNb3pPcmllbnQgPSBHbG9iYWxzIHwgImJsb2NrIiB8ICJob3Jpem9udGFsIiB8ICJpbmxpbmUiIHwgInZlcnRpY2FsIjsKCiAgZXhwb3J0IHR5cGUgTW96T3V0bGluZVJhZGl1czxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNb3pPdXRsaW5lUmFkaXVzQm90dG9tbGVmdDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNb3pPdXRsaW5lUmFkaXVzQm90dG9tcmlnaHQ8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTW96T3V0bGluZVJhZGl1c1RvcGxlZnQ8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTW96T3V0bGluZVJhZGl1c1RvcHJpZ2h0PFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aCB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1velN0YWNrU2l6aW5nID0gR2xvYmFscyB8ICJpZ25vcmUiIHwgInN0cmV0Y2gtdG8tZml0IjsKCiAgZXhwb3J0IHR5cGUgTW96VGV4dEJsaW5rID0gR2xvYmFscyB8ICJibGluayIgfCAibm9uZSI7CgogIGV4cG9ydCB0eXBlIE1velVzZXJGb2N1cyA9IEdsb2JhbHMgfCAiaWdub3JlIiB8ICJub25lIiB8ICJub3JtYWwiIHwgInNlbGVjdC1hZnRlciIgfCAic2VsZWN0LWFsbCIgfCAic2VsZWN0LWJlZm9yZSIgfCAic2VsZWN0LW1lbnUiIHwgInNlbGVjdC1zYW1lIjsKCiAgZXhwb3J0IHR5cGUgTW96VXNlcklucHV0ID0gR2xvYmFscyB8ICJhdXRvIiB8ICJkaXNhYmxlZCIgfCAiZW5hYmxlZCIgfCAibm9uZSI7CgogIGV4cG9ydCB0eXBlIE1velVzZXJNb2RpZnkgPSBHbG9iYWxzIHwgInJlYWQtb25seSIgfCAicmVhZC13cml0ZSIgfCAid3JpdGUtb25seSI7CgogIGV4cG9ydCB0eXBlIE1veldpbmRvd0RyYWdnaW5nID0gR2xvYmFscyB8ICJkcmFnIiB8ICJuby1kcmFnIjsKCiAgZXhwb3J0IHR5cGUgTW96V2luZG93U2hhZG93ID0gR2xvYmFscyB8ICJkZWZhdWx0IiB8ICJtZW51IiB8ICJub25lIiB8ICJzaGVldCIgfCAidG9vbHRpcCI7CgogIGV4cG9ydCB0eXBlIE1zQWNjZWxlcmF0b3IgPSBHbG9iYWxzIHwgImZhbHNlIiB8ICJ0cnVlIjsKCiAgZXhwb3J0IHR5cGUgTXNCbG9ja1Byb2dyZXNzaW9uID0gR2xvYmFscyB8ICJidCIgfCAibHIiIHwgInJsIiB8ICJ0YiI7CgogIGV4cG9ydCB0eXBlIE1zQ29udGVudFpvb21DaGFpbmluZyA9IEdsb2JhbHMgfCAiY2hhaW5lZCIgfCAibm9uZSI7CgogIGV4cG9ydCB0eXBlIE1zQ29udGVudFpvb21MaW1pdCA9IEdsb2JhbHMgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNc0NvbnRlbnRab29tTGltaXRNYXggPSBHbG9iYWxzIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTXNDb250ZW50Wm9vbUxpbWl0TWluID0gR2xvYmFscyB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1zQ29udGVudFpvb21TbmFwID0gR2xvYmFscyB8ICJtYW5kYXRvcnkiIHwgIm5vbmUiIHwgInByb3hpbWl0eSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNc0NvbnRlbnRab29tU25hcFBvaW50cyA9IEdsb2JhbHMgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNc0NvbnRlbnRab29tU25hcFR5cGUgPSBHbG9iYWxzIHwgIm1hbmRhdG9yeSIgfCAibm9uZSIgfCAicHJveGltaXR5IjsKCiAgZXhwb3J0IHR5cGUgTXNDb250ZW50Wm9vbWluZyA9IEdsb2JhbHMgfCAibm9uZSIgfCAiem9vbSI7CgogIGV4cG9ydCB0eXBlIE1zRmlsdGVyID0gR2xvYmFscyB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1zRmxvd0Zyb20gPSBHbG9iYWxzIHwgIm5vbmUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTXNGbG93SW50byA9IEdsb2JhbHMgfCAibm9uZSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNc0dyaWRDb2x1bW5zPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuVHJhY2tCcmVhZHRoPFRMZW5ndGg+IHwgIm5vbmUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTXNHcmlkUm93czxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IERhdGFUeXBlLlRyYWNrQnJlYWR0aDxUTGVuZ3RoPiB8ICJub25lIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1zSGlnaENvbnRyYXN0QWRqdXN0ID0gR2xvYmFscyB8ICJhdXRvIiB8ICJub25lIjsKCiAgZXhwb3J0IHR5cGUgTXNIeXBoZW5hdGVMaW1pdENoYXJzID0gR2xvYmFscyB8ICJhdXRvIiB8IChzdHJpbmcgJiB7fSkgfCAobnVtYmVyICYge30pOwoKICBleHBvcnQgdHlwZSBNc0h5cGhlbmF0ZUxpbWl0TGluZXMgPSBHbG9iYWxzIHwgIm5vLWxpbWl0IiB8IChudW1iZXIgJiB7fSkgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNc0h5cGhlbmF0ZUxpbWl0Wm9uZTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNc0ltZUFsaWduID0gR2xvYmFscyB8ICJhZnRlciIgfCAiYXV0byI7CgogIGV4cG9ydCB0eXBlIE1zT3ZlcmZsb3dTdHlsZSA9IEdsb2JhbHMgfCAiLW1zLWF1dG9oaWRpbmctc2Nyb2xsYmFyIiB8ICJhdXRvIiB8ICJub25lIiB8ICJzY3JvbGxiYXIiOwoKICBleHBvcnQgdHlwZSBNc1Njcm9sbENoYWluaW5nID0gR2xvYmFscyB8ICJjaGFpbmVkIiB8ICJub25lIjsKCiAgZXhwb3J0IHR5cGUgTXNTY3JvbGxMaW1pdCA9IEdsb2JhbHMgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNc1Njcm9sbExpbWl0WE1heDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiYXV0byI7CgogIGV4cG9ydCB0eXBlIE1zU2Nyb2xsTGltaXRYTWluPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgVExlbmd0aDsKCiAgZXhwb3J0IHR5cGUgTXNTY3JvbGxMaW1pdFlNYXg8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgImF1dG8iOwoKICBleHBvcnQgdHlwZSBNc1Njcm9sbExpbWl0WU1pbjxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGg7CgogIGV4cG9ydCB0eXBlIE1zU2Nyb2xsUmFpbHMgPSBHbG9iYWxzIHwgIm5vbmUiIHwgInJhaWxlZCI7CgogIGV4cG9ydCB0eXBlIE1zU2Nyb2xsU25hcFBvaW50c1ggPSBHbG9iYWxzIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTXNTY3JvbGxTbmFwUG9pbnRzWSA9IEdsb2JhbHMgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNc1Njcm9sbFNuYXBUeXBlID0gR2xvYmFscyB8ICJtYW5kYXRvcnkiIHwgIm5vbmUiIHwgInByb3hpbWl0eSI7CgogIGV4cG9ydCB0eXBlIE1zU2Nyb2xsU25hcFggPSBHbG9iYWxzIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTXNTY3JvbGxTbmFwWSA9IEdsb2JhbHMgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNc1Njcm9sbFRyYW5zbGF0aW9uID0gR2xvYmFscyB8ICJub25lIiB8ICJ2ZXJ0aWNhbC10by1ob3Jpem9udGFsIjsKCiAgZXhwb3J0IHR5cGUgTXNTY3JvbGxiYXIzZGxpZ2h0Q29sb3IgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3I7CgogIGV4cG9ydCB0eXBlIE1zU2Nyb2xsYmFyQXJyb3dDb2xvciA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Db2xvcjsKCiAgZXhwb3J0IHR5cGUgTXNTY3JvbGxiYXJCYXNlQ29sb3IgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3I7CgogIGV4cG9ydCB0eXBlIE1zU2Nyb2xsYmFyRGFya3NoYWRvd0NvbG9yID0gR2xvYmFscyB8IERhdGFUeXBlLkNvbG9yOwoKICBleHBvcnQgdHlwZSBNc1Njcm9sbGJhckZhY2VDb2xvciA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Db2xvcjsKCiAgZXhwb3J0IHR5cGUgTXNTY3JvbGxiYXJIaWdobGlnaHRDb2xvciA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Db2xvcjsKCiAgZXhwb3J0IHR5cGUgTXNTY3JvbGxiYXJTaGFkb3dDb2xvciA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Db2xvcjsKCiAgZXhwb3J0IHR5cGUgTXNUZXh0QXV0b3NwYWNlID0gR2xvYmFscyB8ICJpZGVvZ3JhcGgtYWxwaGEiIHwgImlkZW9ncmFwaC1udW1lcmljIiB8ICJpZGVvZ3JhcGgtcGFyZW50aGVzaXMiIHwgImlkZW9ncmFwaC1zcGFjZSIgfCAibm9uZSI7CgogIGV4cG9ydCB0eXBlIE1zVG91Y2hTZWxlY3QgPSBHbG9iYWxzIHwgImdyaXBwZXJzIiB8ICJub25lIjsKCiAgZXhwb3J0IHR5cGUgTXNVc2VyU2VsZWN0ID0gR2xvYmFscyB8ICJlbGVtZW50IiB8ICJub25lIiB8ICJ0ZXh0IjsKCiAgZXhwb3J0IHR5cGUgTXNXcmFwRmxvdyA9IEdsb2JhbHMgfCAiYXV0byIgfCAiYm90aCIgfCAiY2xlYXIiIHwgImVuZCIgfCAibWF4aW11bSIgfCAic3RhcnQiOwoKICBleHBvcnQgdHlwZSBNc1dyYXBNYXJnaW48VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoOwoKICBleHBvcnQgdHlwZSBNc1dyYXBUaHJvdWdoID0gR2xvYmFscyB8ICJub25lIiB8ICJ3cmFwIjsKCiAgZXhwb3J0IHR5cGUgV2Via2l0QXBwZWFyYW5jZSA9CiAgICB8IEdsb2JhbHMKICAgIHwgIi1hcHBsZS1wYXktYnV0dG9uIgogICAgfCAiYnV0dG9uIgogICAgfCAiYnV0dG9uLWJldmVsIgogICAgfCAiY2FyZXQiCiAgICB8ICJjaGVja2JveCIKICAgIHwgImRlZmF1bHQtYnV0dG9uIgogICAgfCAiaW5uZXItc3Bpbi1idXR0b24iCiAgICB8ICJsaXN0Ym94IgogICAgfCAibGlzdGl0ZW0iCiAgICB8ICJtZWRpYS1jb250cm9scy1iYWNrZ3JvdW5kIgogICAgfCAibWVkaWEtY29udHJvbHMtZnVsbHNjcmVlbi1iYWNrZ3JvdW5kIgogICAgfCAibWVkaWEtY3VycmVudC10aW1lLWRpc3BsYXkiCiAgICB8ICJtZWRpYS1lbnRlci1mdWxsc2NyZWVuLWJ1dHRvbiIKICAgIHwgIm1lZGlhLWV4aXQtZnVsbHNjcmVlbi1idXR0b24iCiAgICB8ICJtZWRpYS1mdWxsc2NyZWVuLWJ1dHRvbiIKICAgIHwgIm1lZGlhLW11dGUtYnV0dG9uIgogICAgfCAibWVkaWEtb3ZlcmxheS1wbGF5LWJ1dHRvbiIKICAgIHwgIm1lZGlhLXBsYXktYnV0dG9uIgogICAgfCAibWVkaWEtc2Vlay1iYWNrLWJ1dHRvbiIKICAgIHwgIm1lZGlhLXNlZWstZm9yd2FyZC1idXR0b24iCiAgICB8ICJtZWRpYS1zbGlkZXIiCiAgICB8ICJtZWRpYS1zbGlkZXJ0aHVtYiIKICAgIHwgIm1lZGlhLXRpbWUtcmVtYWluaW5nLWRpc3BsYXkiCiAgICB8ICJtZWRpYS10b2dnbGUtY2xvc2VkLWNhcHRpb25zLWJ1dHRvbiIKICAgIHwgIm1lZGlhLXZvbHVtZS1zbGlkZXIiCiAgICB8ICJtZWRpYS12b2x1bWUtc2xpZGVyLWNvbnRhaW5lciIKICAgIHwgIm1lZGlhLXZvbHVtZS1zbGlkZXJ0aHVtYiIKICAgIHwgIm1lbnVsaXN0IgogICAgfCAibWVudWxpc3QtYnV0dG9uIgogICAgfCAibWVudWxpc3QtdGV4dCIKICAgIHwgIm1lbnVsaXN0LXRleHRmaWVsZCIKICAgIHwgIm1ldGVyIgogICAgfCAibm9uZSIKICAgIHwgInByb2dyZXNzLWJhciIKICAgIHwgInByb2dyZXNzLWJhci12YWx1ZSIKICAgIHwgInB1c2gtYnV0dG9uIgogICAgfCAicmFkaW8iCiAgICB8ICJzZWFyY2hmaWVsZCIKICAgIHwgInNlYXJjaGZpZWxkLWNhbmNlbC1idXR0b24iCiAgICB8ICJzZWFyY2hmaWVsZC1kZWNvcmF0aW9uIgogICAgfCAic2VhcmNoZmllbGQtcmVzdWx0cy1idXR0b24iCiAgICB8ICJzZWFyY2hmaWVsZC1yZXN1bHRzLWRlY29yYXRpb24iCiAgICB8ICJzbGlkZXItaG9yaXpvbnRhbCIKICAgIHwgInNsaWRlci12ZXJ0aWNhbCIKICAgIHwgInNsaWRlcnRodW1iLWhvcml6b250YWwiCiAgICB8ICJzbGlkZXJ0aHVtYi12ZXJ0aWNhbCIKICAgIHwgInNxdWFyZS1idXR0b24iCiAgICB8ICJ0ZXh0YXJlYSIKICAgIHwgInRleHRmaWVsZCI7CgogIGV4cG9ydCB0eXBlIFdlYmtpdEJvcmRlckJlZm9yZTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IERhdGFUeXBlLkxpbmVXaWR0aDxUTGVuZ3RoPiB8IERhdGFUeXBlLkxpbmVTdHlsZSB8IERhdGFUeXBlLkNvbG9yIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgV2Via2l0Qm9yZGVyQmVmb3JlQ29sb3IgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3I7CgogIGV4cG9ydCB0eXBlIFdlYmtpdEJvcmRlckJlZm9yZVN0eWxlID0gR2xvYmFscyB8IERhdGFUeXBlLkxpbmVTdHlsZSB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFdlYmtpdEJvcmRlckJlZm9yZVdpZHRoPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuTGluZVdpZHRoPFRMZW5ndGg+IHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgV2Via2l0Qm94UmVmbGVjdDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiYWJvdmUiIHwgImJlbG93IiB8ICJsZWZ0IiB8ICJyaWdodCIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBXZWJraXRMaW5lQ2xhbXAgPSBHbG9iYWxzIHwgIm5vbmUiIHwgKG51bWJlciAmIHt9KSB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFdlYmtpdE1hc2s8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9CiAgICB8IEdsb2JhbHMKICAgIHwgRGF0YVR5cGUuUG9zaXRpb248VExlbmd0aD4KICAgIHwgRGF0YVR5cGUuUmVwZWF0U3R5bGUKICAgIHwgRGF0YVR5cGUuQm94CiAgICB8ICJib3JkZXIiCiAgICB8ICJjb250ZW50IgogICAgfCAibm9uZSIKICAgIHwgInBhZGRpbmciCiAgICB8ICJ0ZXh0IgogICAgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBXZWJraXRNYXNrQXR0YWNobWVudCA9IEdsb2JhbHMgfCBEYXRhVHlwZS5BdHRhY2htZW50IHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgV2Via2l0TWFza0NsaXAgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQm94IHwgImJvcmRlciIgfCAiY29udGVudCIgfCAicGFkZGluZyIgfCAidGV4dCIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBXZWJraXRNYXNrQ29tcG9zaXRlID0gR2xvYmFscyB8IERhdGFUeXBlLkNvbXBvc2l0ZVN0eWxlIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgV2Via2l0TWFza0ltYWdlID0gR2xvYmFscyB8ICJub25lIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFdlYmtpdE1hc2tPcmlnaW4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuQm94IHwgImJvcmRlciIgfCAiY29udGVudCIgfCAicGFkZGluZyIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBXZWJraXRNYXNrUG9zaXRpb248VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Qb3NpdGlvbjxUTGVuZ3RoPiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIFdlYmtpdE1hc2tQb3NpdGlvblg8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBUTGVuZ3RoIHwgImNlbnRlciIgfCAibGVmdCIgfCAicmlnaHQiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgV2Via2l0TWFza1Bvc2l0aW9uWTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiYm90dG9tIiB8ICJjZW50ZXIiIHwgInRvcCIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBXZWJraXRNYXNrUmVwZWF0ID0gR2xvYmFscyB8IERhdGFUeXBlLlJlcGVhdFN0eWxlIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgV2Via2l0TWFza1JlcGVhdFggPSBHbG9iYWxzIHwgIm5vLXJlcGVhdCIgfCAicmVwZWF0IiB8ICJyb3VuZCIgfCAic3BhY2UiOwoKICBleHBvcnQgdHlwZSBXZWJraXRNYXNrUmVwZWF0WSA9IEdsb2JhbHMgfCAibm8tcmVwZWF0IiB8ICJyZXBlYXQiIHwgInJvdW5kIiB8ICJzcGFjZSI7CgogIGV4cG9ydCB0eXBlIFdlYmtpdE1hc2tTaXplPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMD4gPSBHbG9iYWxzIHwgRGF0YVR5cGUuQmdTaXplPFRMZW5ndGg+IHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgV2Via2l0T3ZlcmZsb3dTY3JvbGxpbmcgPSBHbG9iYWxzIHwgImF1dG8iIHwgInRvdWNoIjsKCiAgZXhwb3J0IHR5cGUgV2Via2l0VGFwSGlnaGxpZ2h0Q29sb3IgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3I7CgogIGV4cG9ydCB0eXBlIFdlYmtpdFRleHRGaWxsQ29sb3IgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3I7CgogIGV4cG9ydCB0eXBlIFdlYmtpdFRleHRTdHJva2U8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwPiA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Db2xvciB8IFRMZW5ndGggfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBXZWJraXRUZXh0U3Ryb2tlQ29sb3IgPSBHbG9iYWxzIHwgRGF0YVR5cGUuQ29sb3I7CgogIGV4cG9ydCB0eXBlIFdlYmtpdFRleHRTdHJva2VXaWR0aDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGg7CgogIGV4cG9ydCB0eXBlIFdlYmtpdFRvdWNoQ2FsbG91dCA9IEdsb2JhbHMgfCAiZGVmYXVsdCIgfCAibm9uZSI7CgogIGV4cG9ydCB0eXBlIFdlYmtpdFVzZXJNb2RpZnkgPSBHbG9iYWxzIHwgInJlYWQtb25seSIgfCAicmVhZC13cml0ZSIgfCAicmVhZC13cml0ZS1wbGFpbnRleHQtb25seSI7CgogIGV4cG9ydCB0eXBlIEFsaWdubWVudEJhc2VsaW5lID0KICAgIHwgR2xvYmFscwogICAgfCAiYWZ0ZXItZWRnZSIKICAgIHwgImFscGhhYmV0aWMiCiAgICB8ICJhdXRvIgogICAgfCAiYmFzZWxpbmUiCiAgICB8ICJiZWZvcmUtZWRnZSIKICAgIHwgImNlbnRyYWwiCiAgICB8ICJoYW5naW5nIgogICAgfCAiaWRlb2dyYXBoaWMiCiAgICB8ICJtYXRoZW1hdGljYWwiCiAgICB8ICJtaWRkbGUiCiAgICB8ICJ0ZXh0LWFmdGVyLWVkZ2UiCiAgICB8ICJ0ZXh0LWJlZm9yZS1lZGdlIjsKCiAgZXhwb3J0IHR5cGUgQmFzZWxpbmVTaGlmdDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAiYmFzZWxpbmUiIHwgInN1YiIgfCAic3VwZXIiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgQ2xpcFJ1bGUgPSBHbG9iYWxzIHwgImV2ZW5vZGQiIHwgIm5vbnplcm8iOwoKICBleHBvcnQgdHlwZSBDb2xvckludGVycG9sYXRpb24gPSBHbG9iYWxzIHwgImF1dG8iIHwgImxpbmVhclJHQiIgfCAic1JHQiI7CgogIGV4cG9ydCB0eXBlIENvbG9yUmVuZGVyaW5nID0gR2xvYmFscyB8ICJhdXRvIiB8ICJvcHRpbWl6ZVF1YWxpdHkiIHwgIm9wdGltaXplU3BlZWQiOwoKICBleHBvcnQgdHlwZSBEb21pbmFudEJhc2VsaW5lID0KICAgIHwgR2xvYmFscwogICAgfCAiYWxwaGFiZXRpYyIKICAgIHwgImF1dG8iCiAgICB8ICJjZW50cmFsIgogICAgfCAiaGFuZ2luZyIKICAgIHwgImlkZW9ncmFwaGljIgogICAgfCAibWF0aGVtYXRpY2FsIgogICAgfCAibWlkZGxlIgogICAgfCAibm8tY2hhbmdlIgogICAgfCAicmVzZXQtc2l6ZSIKICAgIHwgInRleHQtYWZ0ZXItZWRnZSIKICAgIHwgInRleHQtYmVmb3JlLWVkZ2UiCiAgICB8ICJ1c2Utc2NyaXB0IjsKCiAgZXhwb3J0IHR5cGUgRmlsbCA9IEdsb2JhbHMgfCBEYXRhVHlwZS5QYWludDsKCiAgZXhwb3J0IHR5cGUgRmlsbE9wYWNpdHkgPSBHbG9iYWxzIHwgKG51bWJlciAmIHt9KSB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEZpbGxSdWxlID0gR2xvYmFscyB8ICJldmVub2RkIiB8ICJub256ZXJvIjsKCiAgZXhwb3J0IHR5cGUgRmxvb2RDb2xvciA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Db2xvciB8ICJjdXJyZW50Q29sb3IiOwoKICBleHBvcnQgdHlwZSBGbG9vZE9wYWNpdHkgPSBHbG9iYWxzIHwgKG51bWJlciAmIHt9KSB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIEdseXBoT3JpZW50YXRpb25WZXJ0aWNhbCA9IEdsb2JhbHMgfCAiYXV0byIgfCAoc3RyaW5nICYge30pIHwgKG51bWJlciAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTGlnaHRpbmdDb2xvciA9IEdsb2JhbHMgfCBEYXRhVHlwZS5Db2xvciB8ICJjdXJyZW50Q29sb3IiOwoKICBleHBvcnQgdHlwZSBNYXJrZXIgPSBHbG9iYWxzIHwgIm5vbmUiIHwgKHN0cmluZyAmIHt9KTsKCiAgZXhwb3J0IHR5cGUgTWFya2VyRW5kID0gR2xvYmFscyB8ICJub25lIiB8IChzdHJpbmcgJiB7fSk7CgogIGV4cG9ydCB0eXBlIE1hcmtlck1pZCA9IEdsb2JhbHMgfCAibm9uZSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBNYXJrZXJTdGFydCA9IEdsb2JhbHMgfCAibm9uZSIgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBTaGFwZVJlbmRlcmluZyA9IEdsb2JhbHMgfCAiYXV0byIgfCAiY3Jpc3BFZGdlcyIgfCAiZ2VvbWV0cmljUHJlY2lzaW9uIiB8ICJvcHRpbWl6ZVNwZWVkIjsKCiAgZXhwb3J0IHR5cGUgU3RvcENvbG9yID0gR2xvYmFscyB8IERhdGFUeXBlLkNvbG9yIHwgImN1cnJlbnRDb2xvciI7CgogIGV4cG9ydCB0eXBlIFN0b3BPcGFjaXR5ID0gR2xvYmFscyB8IChudW1iZXIgJiB7fSkgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBTdHJva2UgPSBHbG9iYWxzIHwgRGF0YVR5cGUuUGFpbnQ7CgogIGV4cG9ydCB0eXBlIFN0cm9rZURhc2hhcnJheTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IERhdGFUeXBlLkRhc2hhcnJheTxUTGVuZ3RoPiB8ICJub25lIjsKCiAgZXhwb3J0IHR5cGUgU3Ryb2tlRGFzaG9mZnNldDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBTdHJva2VMaW5lY2FwID0gR2xvYmFscyB8ICJidXR0IiB8ICJyb3VuZCIgfCAic3F1YXJlIjsKCiAgZXhwb3J0IHR5cGUgU3Ryb2tlTGluZWpvaW4gPSBHbG9iYWxzIHwgImJldmVsIiB8ICJtaXRlciIgfCAicm91bmQiOwoKICBleHBvcnQgdHlwZSBTdHJva2VNaXRlcmxpbWl0ID0gR2xvYmFscyB8IChudW1iZXIgJiB7fSkgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBTdHJva2VPcGFjaXR5ID0gR2xvYmFscyB8IChudW1iZXIgJiB7fSkgfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBTdHJva2VXaWR0aDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDA+ID0gR2xvYmFscyB8IFRMZW5ndGggfCAoc3RyaW5nICYge30pOwoKICBleHBvcnQgdHlwZSBUZXh0QW5jaG9yID0gR2xvYmFscyB8ICJlbmQiIHwgIm1pZGRsZSIgfCAic3RhcnQiOwoKICBleHBvcnQgdHlwZSBWZWN0b3JFZmZlY3QgPSBHbG9iYWxzIHwgIm5vbi1zY2FsaW5nLXN0cm9rZSIgfCAibm9uZSI7Cn0KCmV4cG9ydCBuYW1lc3BhY2UgQXRSdWxlIHsKICBleHBvcnQgaW50ZXJmYWNlIENvdW50ZXJTdHlsZTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+IHsKICAgIGFkZGl0aXZlU3ltYm9scz86IHN0cmluZyB8IHVuZGVmaW5lZDsKICAgIGZhbGxiYWNrPzogc3RyaW5nIHwgdW5kZWZpbmVkOwogICAgbmVnYXRpdmU/OiBzdHJpbmcgfCB1bmRlZmluZWQ7CiAgICBwYWQ/OiBzdHJpbmcgfCB1bmRlZmluZWQ7CiAgICBwcmVmaXg/OiBzdHJpbmcgfCB1bmRlZmluZWQ7CiAgICByYW5nZT86IFJhbmdlIHwgdW5kZWZpbmVkOwogICAgc3BlYWtBcz86IFNwZWFrQXMgfCB1bmRlZmluZWQ7CiAgICBzdWZmaXg/OiBzdHJpbmcgfCB1bmRlZmluZWQ7CiAgICBzeW1ib2xzPzogc3RyaW5nIHwgdW5kZWZpbmVkOwogICAgc3lzdGVtPzogU3lzdGVtIHwgdW5kZWZpbmVkOwogIH0KCiAgZXhwb3J0IGludGVyZmFjZSBDb3VudGVyU3R5bGVIeXBoZW48VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwLCBUVGltZSA9IHN0cmluZyAmIHt9PiB7CiAgICAiYWRkaXRpdmUtc3ltYm9scyI/OiBzdHJpbmcgfCB1bmRlZmluZWQ7CiAgICBmYWxsYmFjaz86IHN0cmluZyB8IHVuZGVmaW5lZDsKICAgIG5lZ2F0aXZlPzogc3RyaW5nIHwgdW5kZWZpbmVkOwogICAgcGFkPzogc3RyaW5nIHwgdW5kZWZpbmVkOwogICAgcHJlZml4Pzogc3RyaW5nIHwgdW5kZWZpbmVkOwogICAgcmFuZ2U/OiBSYW5nZSB8IHVuZGVmaW5lZDsKICAgICJzcGVhay1hcyI/OiBTcGVha0FzIHwgdW5kZWZpbmVkOwogICAgc3VmZml4Pzogc3RyaW5nIHwgdW5kZWZpbmVkOwogICAgc3ltYm9scz86IHN0cmluZyB8IHVuZGVmaW5lZDsKICAgIHN5c3RlbT86IFN5c3RlbSB8IHVuZGVmaW5lZDsKICB9CgogIGV4cG9ydCB0eXBlIENvdW50ZXJTdHlsZUZhbGxiYWNrPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMCwgVFRpbWUgPSBzdHJpbmcgJiB7fT4gPSBGYWxsYmFjazxDb3VudGVyU3R5bGU8VExlbmd0aCwgVFRpbWU+PjsKCiAgZXhwb3J0IHR5cGUgQ291bnRlclN0eWxlSHlwaGVuRmFsbGJhY2s8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwLCBUVGltZSA9IHN0cmluZyAmIHt9PiA9IEZhbGxiYWNrPENvdW50ZXJTdHlsZUh5cGhlbjxUTGVuZ3RoLCBUVGltZT4+OwoKICBleHBvcnQgaW50ZXJmYWNlIEZvbnRGYWNlPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMCwgVFRpbWUgPSBzdHJpbmcgJiB7fT4gewogICAgTW96Rm9udEZlYXR1cmVTZXR0aW5ncz86IEZvbnRGZWF0dXJlU2V0dGluZ3MgfCB1bmRlZmluZWQ7CiAgICBhc2NlbnRPdmVycmlkZT86IEFzY2VudE92ZXJyaWRlIHwgdW5kZWZpbmVkOwogICAgZGVzY2VudE92ZXJyaWRlPzogRGVzY2VudE92ZXJyaWRlIHwgdW5kZWZpbmVkOwogICAgZm9udERpc3BsYXk/OiBGb250RGlzcGxheSB8IHVuZGVmaW5lZDsKICAgIGZvbnRGYW1pbHk/OiBzdHJpbmcgfCB1bmRlZmluZWQ7CiAgICBmb250RmVhdHVyZVNldHRpbmdzPzogRm9udEZlYXR1cmVTZXR0aW5ncyB8IHVuZGVmaW5lZDsKICAgIGZvbnRTdHJldGNoPzogRm9udFN0cmV0Y2ggfCB1bmRlZmluZWQ7CiAgICBmb250U3R5bGU/OiBGb250U3R5bGUgfCB1bmRlZmluZWQ7CiAgICBmb250VmFyaWFudD86IEZvbnRWYXJpYW50IHwgdW5kZWZpbmVkOwogICAgZm9udFZhcmlhdGlvblNldHRpbmdzPzogRm9udFZhcmlhdGlvblNldHRpbmdzIHwgdW5kZWZpbmVkOwogICAgZm9udFdlaWdodD86IEZvbnRXZWlnaHQgfCB1bmRlZmluZWQ7CiAgICBsaW5lR2FwT3ZlcnJpZGU/OiBMaW5lR2FwT3ZlcnJpZGUgfCB1bmRlZmluZWQ7CiAgICBzaXplQWRqdXN0Pzogc3RyaW5nIHwgdW5kZWZpbmVkOwogICAgc3JjPzogc3RyaW5nIHwgdW5kZWZpbmVkOwogICAgdW5pY29kZVJhbmdlPzogc3RyaW5nIHwgdW5kZWZpbmVkOwogIH0KCiAgZXhwb3J0IGludGVyZmFjZSBGb250RmFjZUh5cGhlbjxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+IHsKICAgICItbW96LWZvbnQtZmVhdHVyZS1zZXR0aW5ncyI/OiBGb250RmVhdHVyZVNldHRpbmdzIHwgdW5kZWZpbmVkOwogICAgImFzY2VudC1vdmVycmlkZSI/OiBBc2NlbnRPdmVycmlkZSB8IHVuZGVmaW5lZDsKICAgICJkZXNjZW50LW92ZXJyaWRlIj86IERlc2NlbnRPdmVycmlkZSB8IHVuZGVmaW5lZDsKICAgICJmb250LWRpc3BsYXkiPzogRm9udERpc3BsYXkgfCB1bmRlZmluZWQ7CiAgICAiZm9udC1mYW1pbHkiPzogc3RyaW5nIHwgdW5kZWZpbmVkOwogICAgImZvbnQtZmVhdHVyZS1zZXR0aW5ncyI/OiBGb250RmVhdHVyZVNldHRpbmdzIHwgdW5kZWZpbmVkOwogICAgImZvbnQtc3RyZXRjaCI/OiBGb250U3RyZXRjaCB8IHVuZGVmaW5lZDsKICAgICJmb250LXN0eWxlIj86IEZvbnRTdHlsZSB8IHVuZGVmaW5lZDsKICAgICJmb250LXZhcmlhbnQiPzogRm9udFZhcmlhbnQgfCB1bmRlZmluZWQ7CiAgICAiZm9udC12YXJpYXRpb24tc2V0dGluZ3MiPzogRm9udFZhcmlhdGlvblNldHRpbmdzIHwgdW5kZWZpbmVkOwogICAgImZvbnQtd2VpZ2h0Ij86IEZvbnRXZWlnaHQgfCB1bmRlZmluZWQ7CiAgICAibGluZS1nYXAtb3ZlcnJpZGUiPzogTGluZUdhcE92ZXJyaWRlIHwgdW5kZWZpbmVkOwogICAgInNpemUtYWRqdXN0Ij86IHN0cmluZyB8IHVuZGVmaW5lZDsKICAgIHNyYz86IHN0cmluZyB8IHVuZGVmaW5lZDsKICAgICJ1bmljb2RlLXJhbmdlIj86IHN0cmluZyB8IHVuZGVmaW5lZDsKICB9CgogIGV4cG9ydCB0eXBlIEZvbnRGYWNlRmFsbGJhY2s8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwLCBUVGltZSA9IHN0cmluZyAmIHt9PiA9IEZhbGxiYWNrPEZvbnRGYWNlPFRMZW5ndGgsIFRUaW1lPj47CgogIGV4cG9ydCB0eXBlIEZvbnRGYWNlSHlwaGVuRmFsbGJhY2s8VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwLCBUVGltZSA9IHN0cmluZyAmIHt9PiA9IEZhbGxiYWNrPEZvbnRGYWNlSHlwaGVuPFRMZW5ndGgsIFRUaW1lPj47CgogIGV4cG9ydCBpbnRlcmZhY2UgUGFnZTxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+IHsKICAgIGJsZWVkPzogQmxlZWQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgICBtYXJrcz86IE1hcmtzIHwgdW5kZWZpbmVkOwogICAgc2l6ZT86IFNpemU8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgfQoKICBleHBvcnQgaW50ZXJmYWNlIFBhZ2VIeXBoZW48VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwLCBUVGltZSA9IHN0cmluZyAmIHt9PiB7CiAgICBibGVlZD86IEJsZWVkPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogICAgbWFya3M/OiBNYXJrcyB8IHVuZGVmaW5lZDsKICAgIHNpemU/OiBTaXplPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogIH0KCiAgZXhwb3J0IHR5cGUgUGFnZUZhbGxiYWNrPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMCwgVFRpbWUgPSBzdHJpbmcgJiB7fT4gPSBGYWxsYmFjazxQYWdlPFRMZW5ndGgsIFRUaW1lPj47CgogIGV4cG9ydCB0eXBlIFBhZ2VIeXBoZW5GYWxsYmFjazxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+ID0gRmFsbGJhY2s8UGFnZUh5cGhlbjxUTGVuZ3RoLCBUVGltZT4+OwoKICBleHBvcnQgaW50ZXJmYWNlIFByb3BlcnR5PFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMCwgVFRpbWUgPSBzdHJpbmcgJiB7fT4gewogICAgaW5oZXJpdHM/OiBJbmhlcml0cyB8IHVuZGVmaW5lZDsKICAgIGluaXRpYWxWYWx1ZT86IHN0cmluZyB8IHVuZGVmaW5lZDsKICAgIHN5bnRheD86IHN0cmluZyB8IHVuZGVmaW5lZDsKICB9CgogIGV4cG9ydCBpbnRlcmZhY2UgUHJvcGVydHlIeXBoZW48VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwLCBUVGltZSA9IHN0cmluZyAmIHt9PiB7CiAgICBpbmhlcml0cz86IEluaGVyaXRzIHwgdW5kZWZpbmVkOwogICAgImluaXRpYWwtdmFsdWUiPzogc3RyaW5nIHwgdW5kZWZpbmVkOwogICAgc3ludGF4Pzogc3RyaW5nIHwgdW5kZWZpbmVkOwogIH0KCiAgZXhwb3J0IHR5cGUgUHJvcGVydHlGYWxsYmFjazxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+ID0gRmFsbGJhY2s8UHJvcGVydHk8VExlbmd0aCwgVFRpbWU+PjsKCiAgZXhwb3J0IHR5cGUgUHJvcGVydHlIeXBoZW5GYWxsYmFjazxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+ID0gRmFsbGJhY2s8UHJvcGVydHlIeXBoZW48VExlbmd0aCwgVFRpbWU+PjsKCiAgZXhwb3J0IGludGVyZmFjZSBWaWV3cG9ydDxUTGVuZ3RoID0gKHN0cmluZyAmIHt9KSB8IDAsIFRUaW1lID0gc3RyaW5nICYge30+IHsKICAgIGhlaWdodD86IEhlaWdodDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAgIG1heEhlaWdodD86IE1heEhlaWdodDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAgIG1heFdpZHRoPzogTWF4V2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgICBtYXhab29tPzogTWF4Wm9vbSB8IHVuZGVmaW5lZDsKICAgIG1pbkhlaWdodD86IE1pbkhlaWdodDxUTGVuZ3RoPiB8IHVuZGVmaW5lZDsKICAgIG1pbldpZHRoPzogTWluV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgICBtaW5ab29tPzogTWluWm9vbSB8IHVuZGVmaW5lZDsKICAgIG9yaWVudGF0aW9uPzogT3JpZW50YXRpb24gfCB1bmRlZmluZWQ7CiAgICB1c2VyWm9vbT86IFVzZXJab29tIHwgdW5kZWZpbmVkOwogICAgdmlld3BvcnRGaXQ/OiBWaWV3cG9ydEZpdCB8IHVuZGVmaW5lZDsKICAgIHdpZHRoPzogV2lkdGg8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgICB6b29tPzogWm9vbSB8IHVuZGVmaW5lZDsKICB9CgogIGV4cG9ydCBpbnRlcmZhY2UgVmlld3BvcnRIeXBoZW48VExlbmd0aCA9IChzdHJpbmcgJiB7fSkgfCAwLCBUVGltZSA9IHN0cmluZyAmIHt9PiB7CiAgICBoZWlnaHQ/OiBIZWlnaHQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgICAibWF4LWhlaWdodCI/OiBNYXhIZWlnaHQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgICAibWF4LXdpZHRoIj86IE1heFdpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogICAgIm1heC16b29tIj86IE1heFpvb20gfCB1bmRlZmluZWQ7CiAgICAibWluLWhlaWdodCI/OiBNaW5IZWlnaHQ8VExlbmd0aD4gfCB1bmRlZmluZWQ7CiAgICAibWluLXdpZHRoIj86IE1pbldpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogICAgIm1pbi16b29tIj86IE1pblpvb20gfCB1bmRlZmluZWQ7CiAgICBvcmllbnRhdGlvbj86IE9yaWVudGF0aW9uIHwgdW5kZWZpbmVkOwogICAgInVzZXItem9vbSI/OiBVc2VyWm9vbSB8IHVuZGVmaW5lZDsKICAgICJ2aWV3cG9ydC1maXQiPzogVmlld3BvcnRGaXQgfCB1bmRlZmluZWQ7CiAgICB3aWR0aD86IFdpZHRoPFRMZW5ndGg+IHwgdW5kZWZpbmVkOwogICAgem9vbT86IFpvb20gfCB1bmRlZmluZWQ7CiAgfQoKICBleHBvcnQgdHlwZSBWaWV3cG9ydEZhbGxiYWNrPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMCwgVFRpbWUgPSBzdHJpbmcgJiB7fT4gPSBGYWxsYmFjazxWaWV3cG9ydDxUTGVuZ3RoLCBUVGltZT4+OwoKICBleHBvcnQgdHlwZSBWaWV3cG9ydEh5cGhlbkZhbGxiYWNrPFRMZW5ndGggPSAoc3RyaW5nICYge30pIHwgMCwgVFRpbWUgPSBzdHJpbmcgJiB7fT4gPSBGYWxsYmFjazxWaWV3cG9ydEh5cGhlbjxUTGVuZ3RoLCBUVGltZT4+OwoKICB0eXBlIFJhbmdlID0gImF1dG8iIHwgKHN0cmluZyAmIHt9KTsKCiAgdHlwZSBTcGVha0FzID0gImF1dG8iIHwgImJ1bGxldHMiIHwgIm51bWJlcnMiIHwgInNwZWxsLW91dCIgfCAid29yZHMiIHwgKHN0cmluZyAmIHt9KTsKCiAgdHlwZSBTeXN0ZW0gPSAiYWRkaXRpdmUiIHwgImFscGhhYmV0aWMiIHwgImN5Y2xpYyIgfCAiZml4ZWQiIHwgIm51bWVyaWMiIHwgInN5bWJvbGljIiB8IChzdHJpbmcgJiB7fSk7CgogIHR5cGUgRm9udEZlYXR1cmVTZXR0aW5ncyA9ICJub3JtYWwiIHwgKHN0cmluZyAmIHt9KTsKCiAgdHlwZSBBc2NlbnRPdmVycmlkZSA9ICJub3JtYWwiIHwgKHN0cmluZyAmIHt9KTsKCiAgdHlwZSBEZXNjZW50T3ZlcnJpZGUgPSAibm9ybWFsIiB8IChzdHJpbmcgJiB7fSk7CgogIHR5cGUgRm9udERpc3BsYXkgPSAiYXV0byIgfCAiYmxvY2siIHwgImZhbGxiYWNrIiB8ICJvcHRpb25hbCIgfCAic3dhcCI7CgogIHR5cGUgRm9udFN0cmV0Y2ggPSBEYXRhVHlwZS5Gb250U3RyZXRjaEFic29sdXRlIHwgKHN0cmluZyAmIHt9KTsKCiAgdHlwZSBGb250U3R5bGUgPSAiaXRhbGljIiB8ICJub3JtYWwiIHwgIm9ibGlxdWUiIHwgKHN0cmluZyAmIHt9KTsKCiAgdHlwZSBGb250VmFyaWFudCA9CiAgICB8IERhdGFUeXBlLkVhc3RBc2lhblZhcmlhbnRWYWx1ZXMKICAgIHwgImFsbC1wZXRpdGUtY2FwcyIKICAgIHwgImFsbC1zbWFsbC1jYXBzIgogICAgfCAiY29tbW9uLWxpZ2F0dXJlcyIKICAgIHwgImNvbnRleHR1YWwiCiAgICB8ICJkaWFnb25hbC1mcmFjdGlvbnMiCiAgICB8ICJkaXNjcmV0aW9uYXJ5LWxpZ2F0dXJlcyIKICAgIHwgImZ1bGwtd2lkdGgiCiAgICB8ICJoaXN0b3JpY2FsLWZvcm1zIgogICAgfCAiaGlzdG9yaWNhbC1saWdhdHVyZXMiCiAgICB8ICJsaW5pbmctbnVtcyIKICAgIHwgIm5vLWNvbW1vbi1saWdhdHVyZXMiCiAgICB8ICJuby1jb250ZXh0dWFsIgogICAgfCAibm8tZGlzY3JldGlvbmFyeS1saWdhdHVyZXMiCiAgICB8ICJuby1oaXN0b3JpY2FsLWxpZ2F0dXJlcyIKICAgIHwgIm5vbmUiCiAgICB8ICJub3JtYWwiCiAgICB8ICJvbGRzdHlsZS1udW1zIgogICAgfCAib3JkaW5hbCIKICAgIHwgInBldGl0ZS1jYXBzIgogICAgfCAicHJvcG9ydGlvbmFsLW51bXMiCiAgICB8ICJwcm9wb3J0aW9uYWwtd2lkdGgiCiAgICB8ICJydWJ5IgogICAgfCAic2xhc2hlZC16ZXJvIgogICAgfCAic21hbGwtY2FwcyIKICAgIHwgInN0YWNrZWQtZnJhY3Rpb25zIgogICAgfCAidGFidWxhci1udW1zIgogICAgfCAidGl0bGluZy1jYXBzIgogICAgfCAidW5pY2FzZSIKICAgIHwgKHN0cmluZyAmIHt9KTsKCiAgdHlwZSBGb250VmFyaWF0aW9uU2V0dGluZ3MgPSAibm9ybWFsIiB8IChzdHJpbmcgJiB7fSk7CgogIHR5cGUgRm9udFdlaWdodCA9IERhdGFUeXBlLkZvbnRXZWlnaHRBYnNvbHV0ZSB8IChzdHJpbmcgJiB7fSk7CgogIHR5cGUgTGluZUdhcE92ZXJyaWRlID0gIm5vcm1hbCIgfCAoc3RyaW5nICYge30pOwoKICB0eXBlIEJsZWVkPFRMZW5ndGg+ID0gVExlbmd0aCB8ICJhdXRvIjsKCiAgdHlwZSBNYXJrcyA9ICJjcm9wIiB8ICJjcm9zcyIgfCAibm9uZSIgfCAoc3RyaW5nICYge30pOwoKICB0eXBlIFNpemU8VExlbmd0aD4gPSBEYXRhVHlwZS5QYWdlU2l6ZSB8IFRMZW5ndGggfCAiYXV0byIgfCAibGFuZHNjYXBlIiB8ICJwb3J0cmFpdCIgfCAoc3RyaW5nICYge30pOwoKICB0eXBlIEluaGVyaXRzID0gImZhbHNlIiB8ICJ0cnVlIjsKCiAgdHlwZSBIZWlnaHQ8VExlbmd0aD4gPSBEYXRhVHlwZS5WaWV3cG9ydExlbmd0aDxUTGVuZ3RoPiB8IChzdHJpbmcgJiB7fSk7CgogIHR5cGUgTWF4SGVpZ2h0PFRMZW5ndGg+ID0gRGF0YVR5cGUuVmlld3BvcnRMZW5ndGg8VExlbmd0aD47CgogIHR5cGUgTWF4V2lkdGg8VExlbmd0aD4gPSBEYXRhVHlwZS5WaWV3cG9ydExlbmd0aDxUTGVuZ3RoPjsKCiAgdHlwZSBNYXhab29tID0gImF1dG8iIHwgKHN0cmluZyAmIHt9KSB8IChudW1iZXIgJiB7fSk7CgogIHR5cGUgTWluSGVpZ2h0PFRMZW5ndGg+ID0gRGF0YVR5cGUuVmlld3BvcnRMZW5ndGg8VExlbmd0aD47CgogIHR5cGUgTWluV2lkdGg8VExlbmd0aD4gPSBEYXRhVHlwZS5WaWV3cG9ydExlbmd0aDxUTGVuZ3RoPjsKCiAgdHlwZSBNaW5ab29tID0gImF1dG8iIHwgKHN0cmluZyAmIHt9KSB8IChudW1iZXIgJiB7fSk7CgogIHR5cGUgT3JpZW50YXRpb24gPSAiYXV0byIgfCAibGFuZHNjYXBlIiB8ICJwb3J0cmFpdCI7CgogIHR5cGUgVXNlclpvb20gPSAiZml4ZWQiIHwgInpvb20iOwoKICB0eXBlIFZpZXdwb3J0Rml0ID0gImF1dG8iIHwgImNvbnRhaW4iIHwgImNvdmVyIjsKCiAgdHlwZSBXaWR0aDxUTGVuZ3RoPiA9IERhdGFUeXBlLlZpZXdwb3J0TGVuZ3RoPFRMZW5ndGg+IHwgKHN0cmluZyAmIHt9KTsKCiAgdHlwZSBab29tID0gImF1dG8iIHwgKHN0cmluZyAmIHt9KSB8IChudW1iZXIgJiB7fSk7Cn0KCmRlY2xhcmUgbmFtZXNwYWNlIERhdGFUeXBlIHsKICB0eXBlIEFic29sdXRlU2l6ZSA9ICJsYXJnZSIgfCAibWVkaXVtIiB8ICJzbWFsbCIgfCAieC1sYXJnZSIgfCAieC1zbWFsbCIgfCAieHgtbGFyZ2UiIHwgInh4LXNtYWxsIiB8ICJ4eHgtbGFyZ2UiOwoKICB0eXBlIEFuaW1hdGVhYmxlRmVhdHVyZSA9ICJjb250ZW50cyIgfCAic2Nyb2xsLXBvc2l0aW9uIiB8IChzdHJpbmcgJiB7fSk7CgogIHR5cGUgQXR0YWNobWVudCA9ICJmaXhlZCIgfCAibG9jYWwiIHwgInNjcm9sbCI7CgogIHR5cGUgQmdQb3NpdGlvbjxUTGVuZ3RoPiA9IFRMZW5ndGggfCAiYm90dG9tIiB8ICJjZW50ZXIiIHwgImxlZnQiIHwgInJpZ2h0IiB8ICJ0b3AiIHwgKHN0cmluZyAmIHt9KTsKCiAgdHlwZSBCZ1NpemU8VExlbmd0aD4gPSBUTGVuZ3RoIHwgImF1dG8iIHwgImNvbnRhaW4iIHwgImNvdmVyIiB8IChzdHJpbmcgJiB7fSk7CgogIHR5cGUgQmxlbmRNb2RlID0KICAgIHwgImNvbG9yIgogICAgfCAiY29sb3ItYnVybiIKICAgIHwgImNvbG9yLWRvZGdlIgogICAgfCAiZGFya2VuIgogICAgfCAiZGlmZmVyZW5jZSIKICAgIHwgImV4Y2x1c2lvbiIKICAgIHwgImhhcmQtbGlnaHQiCiAgICB8ICJodWUiCiAgICB8ICJsaWdodGVuIgogICAgfCAibHVtaW5vc2l0eSIKICAgIHwgIm11bHRpcGx5IgogICAgfCAibm9ybWFsIgogICAgfCAib3ZlcmxheSIKICAgIHwgInNhdHVyYXRpb24iCiAgICB8ICJzY3JlZW4iCiAgICB8ICJzb2Z0LWxpZ2h0IjsKCiAgdHlwZSBCb3ggPSAiYm9yZGVyLWJveCIgfCAiY29udGVudC1ib3giIHwgInBhZGRpbmctYm94IjsKCiAgdHlwZSBDb2xvciA9IE5hbWVkQ29sb3IgfCBEZXByZWNhdGVkU3lzdGVtQ29sb3IgfCAiY3VycmVudGNvbG9yIiB8IChzdHJpbmcgJiB7fSk7CgogIHR5cGUgQ29tcGF0QXV0byA9CiAgICB8ICJidXR0b24iCiAgICB8ICJjaGVja2JveCIKICAgIHwgImxpc3Rib3giCiAgICB8ICJtZW51bGlzdCIKICAgIHwgIm1ldGVyIgogICAgfCAicHJvZ3Jlc3MtYmFyIgogICAgfCAicHVzaC1idXR0b24iCiAgICB8ICJyYWRpbyIKICAgIHwgInNlYXJjaGZpZWxkIgogICAgfCAic2xpZGVyLWhvcml6b250YWwiCiAgICB8ICJzcXVhcmUtYnV0dG9uIgogICAgfCAidGV4dGFyZWEiOwoKICB0eXBlIENvbXBvc2l0ZVN0eWxlID0KICAgIHwgImNsZWFyIgogICAgfCAiY29weSIKICAgIHwgImRlc3RpbmF0aW9uLWF0b3AiCiAgICB8ICJkZXN0aW5hdGlvbi1pbiIKICAgIHwgImRlc3RpbmF0aW9uLW91dCIKICAgIHwgImRlc3RpbmF0aW9uLW92ZXIiCiAgICB8ICJzb3VyY2UtYXRvcCIKICAgIHwgInNvdXJjZS1pbiIKICAgIHwgInNvdXJjZS1vdXQiCiAgICB8ICJzb3VyY2Utb3ZlciIKICAgIHwgInhvciI7CgogIHR5cGUgQ29tcG9zaXRpbmdPcGVyYXRvciA9ICJhZGQiIHwgImV4Y2x1ZGUiIHwgImludGVyc2VjdCIgfCAic3VidHJhY3QiOwoKICB0eXBlIENvbnRlbnREaXN0cmlidXRpb24gPSAic3BhY2UtYXJvdW5kIiB8ICJzcGFjZS1iZXR3ZWVuIiB8ICJzcGFjZS1ldmVubHkiIHwgInN0cmV0Y2giOwoKICB0eXBlIENvbnRlbnRMaXN0ID0gUXVvdGUgfCAiY29udGVudHMiIHwgKHN0cmluZyAmIHt9KTsKCiAgdHlwZSBDb250ZW50UG9zaXRpb24gPSAiY2VudGVyIiB8ICJlbmQiIHwgImZsZXgtZW5kIiB8ICJmbGV4LXN0YXJ0IiB8ICJzdGFydCI7CgogIHR5cGUgQ3ViaWNCZXppZXJUaW1pbmdGdW5jdGlvbiA9ICJlYXNlIiB8ICJlYXNlLWluIiB8ICJlYXNlLWluLW91dCIgfCAiZWFzZS1vdXQiIHwgKHN0cmluZyAmIHt9KTsKCiAgdHlwZSBEYXNoYXJyYXk8VExlbmd0aD4gPSBUTGVuZ3RoIHwgKHN0cmluZyAmIHt9KSB8IChudW1iZXIgJiB7fSk7CgogIHR5cGUgRGVwcmVjYXRlZFN5c3RlbUNvbG9yID0KICAgIHwgIkFjdGl2ZUJvcmRlciIKICAgIHwgIkFjdGl2ZUNhcHRpb24iCiAgICB8ICJBcHBXb3Jrc3BhY2UiCiAgICB8ICJCYWNrZ3JvdW5kIgogICAgfCAiQnV0dG9uRmFjZSIKICAgIHwgIkJ1dHRvbkhpZ2hsaWdodCIKICAgIHwgIkJ1dHRvblNoYWRvdyIKICAgIHwgIkJ1dHRvblRleHQiCiAgICB8ICJDYXB0aW9uVGV4dCIKICAgIHwgIkdyYXlUZXh0IgogICAgfCAiSGlnaGxpZ2h0IgogICAgfCAiSGlnaGxpZ2h0VGV4dCIKICAgIHwgIkluYWN0aXZlQm9yZGVyIgogICAgfCAiSW5hY3RpdmVDYXB0aW9uIgogICAgfCAiSW5hY3RpdmVDYXB0aW9uVGV4dCIKICAgIHwgIkluZm9CYWNrZ3JvdW5kIgogICAgfCAiSW5mb1RleHQiCiAgICB8ICJNZW51IgogICAgfCAiTWVudVRleHQiCiAgICB8ICJTY3JvbGxiYXIiCiAgICB8ICJUaHJlZUREYXJrU2hhZG93IgogICAgfCAiVGhyZWVERmFjZSIKICAgIHwgIlRocmVlREhpZ2hsaWdodCIKICAgIHwgIlRocmVlRExpZ2h0U2hhZG93IgogICAgfCAiVGhyZWVEU2hhZG93IgogICAgfCAiV2luZG93IgogICAgfCAiV2luZG93RnJhbWUiCiAgICB8ICJXaW5kb3dUZXh0IjsKCiAgdHlwZSBEaXNwbGF5SW5zaWRlID0gIi1tcy1mbGV4Ym94IiB8ICItbXMtZ3JpZCIgfCAiLXdlYmtpdC1mbGV4IiB8ICJmbGV4IiB8ICJmbG93IiB8ICJmbG93LXJvb3QiIHwgImdyaWQiIHwgInJ1YnkiIHwgInRhYmxlIjsKCiAgdHlwZSBEaXNwbGF5SW50ZXJuYWwgPQogICAgfCAicnVieS1iYXNlIgogICAgfCAicnVieS1iYXNlLWNvbnRhaW5lciIKICAgIHwgInJ1YnktdGV4dCIKICAgIHwgInJ1YnktdGV4dC1jb250YWluZXIiCiAgICB8ICJ0YWJsZS1jYXB0aW9uIgogICAgfCAidGFibGUtY2VsbCIKICAgIHwgInRhYmxlLWNvbHVtbiIKICAgIHwgInRhYmxlLWNvbHVtbi1ncm91cCIKICAgIHwgInRhYmxlLWZvb3Rlci1ncm91cCIKICAgIHwgInRhYmxlLWhlYWRlci1ncm91cCIKICAgIHwgInRhYmxlLXJvdyIKICAgIHwgInRhYmxlLXJvdy1ncm91cCI7CgogIHR5cGUgRGlzcGxheUxlZ2FjeSA9ICItbXMtaW5saW5lLWZsZXhib3giIHwgIi1tcy1pbmxpbmUtZ3JpZCIgfCAiLXdlYmtpdC1pbmxpbmUtZmxleCIgfCAiaW5saW5lLWJsb2NrIiB8ICJpbmxpbmUtZmxleCIgfCAiaW5saW5lLWdyaWQiIHwgImlubGluZS1saXN0LWl0ZW0iIHwgImlubGluZS10YWJsZSI7CgogIHR5cGUgRGlzcGxheU91dHNpZGUgPSAiYmxvY2siIHwgImlubGluZSIgfCAicnVuLWluIjsKCiAgdHlwZSBFYXNpbmdGdW5jdGlvbiA9IEN1YmljQmV6aWVyVGltaW5nRnVuY3Rpb24gfCBTdGVwVGltaW5nRnVuY3Rpb24gfCAibGluZWFyIjsKCiAgdHlwZSBFYXN0QXNpYW5WYXJpYW50VmFsdWVzID0gImppczA0IiB8ICJqaXM3OCIgfCAiamlzODMiIHwgImppczkwIiB8ICJzaW1wbGlmaWVkIiB8ICJ0cmFkaXRpb25hbCI7CgogIHR5cGUgRmluYWxCZ0xheWVyPFRMZW5ndGg+ID0gQ29sb3IgfCBCZ1Bvc2l0aW9uPFRMZW5ndGg+IHwgUmVwZWF0U3R5bGUgfCBBdHRhY2htZW50IHwgQm94IHwgIm5vbmUiIHwgKHN0cmluZyAmIHt9KTsKCiAgdHlwZSBGb250U3RyZXRjaEFic29sdXRlID0KICAgIHwgImNvbmRlbnNlZCIKICAgIHwgImV4cGFuZGVkIgogICAgfCAiZXh0cmEtY29uZGVuc2VkIgogICAgfCAiZXh0cmEtZXhwYW5kZWQiCiAgICB8ICJub3JtYWwiCiAgICB8ICJzZW1pLWNvbmRlbnNlZCIKICAgIHwgInNlbWktZXhwYW5kZWQiCiAgICB8ICJ1bHRyYS1jb25kZW5zZWQiCiAgICB8ICJ1bHRyYS1leHBhbmRlZCIKICAgIHwgKHN0cmluZyAmIHt9KTsKCiAgdHlwZSBGb250V2VpZ2h0QWJzb2x1dGUgPSAiYm9sZCIgfCAibm9ybWFsIiB8IChudW1iZXIgJiB7fSkgfCAoc3RyaW5nICYge30pOwoKICB0eXBlIEdlbmVyaWNGYW1pbHkgPSAiY3Vyc2l2ZSIgfCAiZmFudGFzeSIgfCAibW9ub3NwYWNlIiB8ICJzYW5zLXNlcmlmIiB8ICJzZXJpZiI7CgogIHR5cGUgR2VvbWV0cnlCb3ggPSBCb3ggfCAiZmlsbC1ib3giIHwgIm1hcmdpbi1ib3giIHwgInN0cm9rZS1ib3giIHwgInZpZXctYm94IjsKCiAgdHlwZSBHcmlkTGluZSA9ICJhdXRvIiB8IChzdHJpbmcgJiB7fSkgfCAobnVtYmVyICYge30pOwoKICB0eXBlIExpbmVTdHlsZSA9ICJkYXNoZWQiIHwgImRvdHRlZCIgfCAiZG91YmxlIiB8ICJncm9vdmUiIHwgImhpZGRlbiIgfCAiaW5zZXQiIHwgIm5vbmUiIHwgIm91dHNldCIgfCAicmlkZ2UiIHwgInNvbGlkIjsKCiAgdHlwZSBMaW5lV2lkdGg8VExlbmd0aD4gPSBUTGVuZ3RoIHwgIm1lZGl1bSIgfCAidGhpY2siIHwgInRoaW4iOwoKICB0eXBlIE1hc2tMYXllcjxUTGVuZ3RoPiA9IFBvc2l0aW9uPFRMZW5ndGg+IHwgUmVwZWF0U3R5bGUgfCBHZW9tZXRyeUJveCB8IENvbXBvc2l0aW5nT3BlcmF0b3IgfCBNYXNraW5nTW9kZSB8ICJuby1jbGlwIiB8ICJub25lIiB8IChzdHJpbmcgJiB7fSk7CgogIHR5cGUgTWFza2luZ01vZGUgPSAiYWxwaGEiIHwgImx1bWluYW5jZSIgfCAibWF0Y2gtc291cmNlIjsKCiAgdHlwZSBOYW1lZENvbG9yID0KICAgIHwgImFsaWNlYmx1ZSIKICAgIHwgImFudGlxdWV3aGl0ZSIKICAgIHwgImFxdWEiCiAgICB8ICJhcXVhbWFyaW5lIgogICAgfCAiYXp1cmUiCiAgICB8ICJiZWlnZSIKICAgIHwgImJpc3F1ZSIKICAgIHwgImJsYWNrIgogICAgfCAiYmxhbmNoZWRhbG1vbmQiCiAgICB8ICJibHVlIgogICAgfCAiYmx1ZXZpb2xldCIKICAgIHwgImJyb3duIgogICAgfCAiYnVybHl3b29kIgogICAgfCAiY2FkZXRibHVlIgogICAgfCAiY2hhcnRyZXVzZSIKICAgIHwgImNob2NvbGF0ZSIKICAgIHwgImNvcmFsIgogICAgfCAiY29ybmZsb3dlcmJsdWUiCiAgICB8ICJjb3Juc2lsayIKICAgIHwgImNyaW1zb24iCiAgICB8ICJjeWFuIgogICAgfCAiZGFya2JsdWUiCiAgICB8ICJkYXJrY3lhbiIKICAgIHwgImRhcmtnb2xkZW5yb2QiCiAgICB8ICJkYXJrZ3JheSIKICAgIHwgImRhcmtncmVlbiIKICAgIHwgImRhcmtncmV5IgogICAgfCAiZGFya2toYWtpIgogICAgfCAiZGFya21hZ2VudGEiCiAgICB8ICJkYXJrb2xpdmVncmVlbiIKICAgIHwgImRhcmtvcmFuZ2UiCiAgICB8ICJkYXJrb3JjaGlkIgogICAgfCAiZGFya3JlZCIKICAgIHwgImRhcmtzYWxtb24iCiAgICB8ICJkYXJrc2VhZ3JlZW4iCiAgICB8ICJkYXJrc2xhdGVibHVlIgogICAgfCAiZGFya3NsYXRlZ3JheSIKICAgIHwgImRhcmtzbGF0ZWdyZXkiCiAgICB8ICJkYXJrdHVycXVvaXNlIgogICAgfCAiZGFya3Zpb2xldCIKICAgIHwgImRlZXBwaW5rIgogICAgfCAiZGVlcHNreWJsdWUiCiAgICB8ICJkaW1ncmF5IgogICAgfCAiZGltZ3JleSIKICAgIHwgImRvZGdlcmJsdWUiCiAgICB8ICJmaXJlYnJpY2siCiAgICB8ICJmbG9yYWx3aGl0ZSIKICAgIHwgImZvcmVzdGdyZWVuIgogICAgfCAiZnVjaHNpYSIKICAgIHwgImdhaW5zYm9ybyIKICAgIHwgImdob3N0d2hpdGUiCiAgICB8ICJnb2xkIgogICAgfCAiZ29sZGVucm9kIgogICAgfCAiZ3JheSIKICAgIHwgImdyZWVuIgogICAgfCAiZ3JlZW55ZWxsb3ciCiAgICB8ICJncmV5IgogICAgfCAiaG9uZXlkZXciCiAgICB8ICJob3RwaW5rIgogICAgfCAiaW5kaWFucmVkIgogICAgfCAiaW5kaWdvIgogICAgfCAiaXZvcnkiCiAgICB8ICJraGFraSIKICAgIHwgImxhdmVuZGVyIgogICAgfCAibGF2ZW5kZXJibHVzaCIKICAgIHwgImxhd25ncmVlbiIKICAgIHwgImxlbW9uY2hpZmZvbiIKICAgIHwgImxpZ2h0Ymx1ZSIKICAgIHwgImxpZ2h0Y29yYWwiCiAgICB8ICJsaWdodGN5YW4iCiAgICB8ICJsaWdodGdvbGRlbnJvZHllbGxvdyIKICAgIHwgImxpZ2h0Z3JheSIKICAgIHwgImxpZ2h0Z3JlZW4iCiAgICB8ICJsaWdodGdyZXkiCiAgICB8ICJsaWdodHBpbmsiCiAgICB8ICJsaWdodHNhbG1vbiIKICAgIHwgImxpZ2h0c2VhZ3JlZW4iCiAgICB8ICJsaWdodHNreWJsdWUiCiAgICB8ICJsaWdodHNsYXRlZ3JheSIKICAgIHwgImxpZ2h0c2xhdGVncmV5IgogICAgfCAibGlnaHRzdGVlbGJsdWUiCiAgICB8ICJsaWdodHllbGxvdyIKICAgIHwgImxpbWUiCiAgICB8ICJsaW1lZ3JlZW4iCiAgICB8ICJsaW5lbiIKICAgIHwgIm1hZ2VudGEiCiAgICB8ICJtYXJvb24iCiAgICB8ICJtZWRpdW1hcXVhbWFyaW5lIgogICAgfCAibWVkaXVtYmx1ZSIKICAgIHwgIm1lZGl1bW9yY2hpZCIKICAgIHwgIm1lZGl1bXB1cnBsZSIKICAgIHwgIm1lZGl1bXNlYWdyZWVuIgogICAgfCAibWVkaXVtc2xhdGVibHVlIgogICAgfCAibWVkaXVtc3ByaW5nZ3JlZW4iCiAgICB8ICJtZWRpdW10dXJxdW9pc2UiCiAgICB8ICJtZWRpdW12aW9sZXRyZWQiCiAgICB8ICJtaWRuaWdodGJsdWUiCiAgICB8ICJtaW50Y3JlYW0iCiAgICB8ICJtaXN0eXJvc2UiCiAgICB8ICJtb2NjYXNpbiIKICAgIHwgIm5hdmFqb3doaXRlIgogICAgfCAibmF2eSIKICAgIHwgIm9sZGxhY2UiCiAgICB8ICJvbGl2ZSIKICAgIHwgIm9saXZlZHJhYiIKICAgIHwgIm9yYW5nZSIKICAgIHwgIm9yYW5nZXJlZCIKICAgIHwgIm9yY2hpZCIKICAgIHwgInBhbGVnb2xkZW5yb2QiCiAgICB8ICJwYWxlZ3JlZW4iCiAgICB8ICJwYWxldHVycXVvaXNlIgogICAgfCAicGFsZXZpb2xldHJlZCIKICAgIHwgInBhcGF5YXdoaXAiCiAgICB8ICJwZWFjaHB1ZmYiCiAgICB8ICJwZXJ1IgogICAgfCAicGluayIKICAgIHwgInBsdW0iCiAgICB8ICJwb3dkZXJibHVlIgogICAgfCAicHVycGxlIgogICAgfCAicmViZWNjYXB1cnBsZSIKICAgIHwgInJlZCIKICAgIHwgInJvc3licm93biIKICAgIHwgInJveWFsYmx1ZSIKICAgIHwgInNhZGRsZWJyb3duIgogICAgfCAic2FsbW9uIgogICAgfCAic2FuZHlicm93biIKICAgIHwgInNlYWdyZWVuIgogICAgfCAic2Vhc2hlbGwiCiAgICB8ICJzaWVubmEiCiAgICB8ICJzaWx2ZXIiCiAgICB8ICJza3libHVlIgogICAgfCAic2xhdGVibHVlIgogICAgfCAic2xhdGVncmF5IgogICAgfCAic2xhdGVncmV5IgogICAgfCAic25vdyIKICAgIHwgInNwcmluZ2dyZWVuIgogICAgfCAic3RlZWxibHVlIgogICAgfCAidGFuIgogICAgfCAidGVhbCIKICAgIHwgInRoaXN0bGUiCiAgICB8ICJ0b21hdG8iCiAgICB8ICJ0cmFuc3BhcmVudCIKICAgIHwgInR1cnF1b2lzZSIKICAgIHwgInZpb2xldCIKICAgIHwgIndoZWF0IgogICAgfCAid2hpdGUiCiAgICB8ICJ3aGl0ZXNtb2tlIgogICAgfCAieWVsbG93IgogICAgfCAieWVsbG93Z3JlZW4iOwoKICB0eXBlIFBhZ2VTaXplID0gIkEzIiB8ICJBNCIgfCAiQTUiIHwgIkI0IiB8ICJCNSIgfCAiSklTLUI0IiB8ICJKSVMtQjUiIHwgImxlZGdlciIgfCAibGVnYWwiIHwgImxldHRlciI7CgogIHR5cGUgUGFpbnQgPSBDb2xvciB8ICJjaGlsZCIgfCAiY29udGV4dC1maWxsIiB8ICJjb250ZXh0LXN0cm9rZSIgfCAibm9uZSIgfCAoc3RyaW5nICYge30pOwoKICB0eXBlIFBvc2l0aW9uPFRMZW5ndGg+ID0gVExlbmd0aCB8ICJib3R0b20iIHwgImNlbnRlciIgfCAibGVmdCIgfCAicmlnaHQiIHwgInRvcCIgfCAoc3RyaW5nICYge30pOwoKICB0eXBlIFF1b3RlID0gImNsb3NlLXF1b3RlIiB8ICJuby1jbG9zZS1xdW90ZSIgfCAibm8tb3Blbi1xdW90ZSIgfCAib3Blbi1xdW90ZSI7CgogIHR5cGUgUmVwZWF0U3R5bGUgPSAibm8tcmVwZWF0IiB8ICJyZXBlYXQiIHwgInJlcGVhdC14IiB8ICJyZXBlYXQteSIgfCAicm91bmQiIHwgInNwYWNlIiB8IChzdHJpbmcgJiB7fSk7CgogIHR5cGUgU2VsZlBvc2l0aW9uID0gImNlbnRlciIgfCAiZW5kIiB8ICJmbGV4LWVuZCIgfCAiZmxleC1zdGFydCIgfCAic2VsZi1lbmQiIHwgInNlbGYtc3RhcnQiIHwgInN0YXJ0IjsKCiAgdHlwZSBTaW5nbGVBbmltYXRpb248VFRpbWU+ID0KICAgIHwgRWFzaW5nRnVuY3Rpb24KICAgIHwgU2luZ2xlQW5pbWF0aW9uRGlyZWN0aW9uCiAgICB8IFNpbmdsZUFuaW1hdGlvbkZpbGxNb2RlCiAgICB8IFRUaW1lCiAgICB8ICJpbmZpbml0ZSIKICAgIHwgIm5vbmUiCiAgICB8ICJwYXVzZWQiCiAgICB8ICJydW5uaW5nIgogICAgfCAoc3RyaW5nICYge30pCiAgICB8IChudW1iZXIgJiB7fSk7CgogIHR5cGUgU2luZ2xlQW5pbWF0aW9uRGlyZWN0aW9uID0gImFsdGVybmF0ZSIgfCAiYWx0ZXJuYXRlLXJldmVyc2UiIHwgIm5vcm1hbCIgfCAicmV2ZXJzZSI7CgogIHR5cGUgU2luZ2xlQW5pbWF0aW9uRmlsbE1vZGUgPSAiYmFja3dhcmRzIiB8ICJib3RoIiB8ICJmb3J3YXJkcyIgfCAibm9uZSI7CgogIHR5cGUgU2luZ2xlVHJhbnNpdGlvbjxUVGltZT4gPSBFYXNpbmdGdW5jdGlvbiB8IFRUaW1lIHwgImFsbCIgfCAibm9uZSIgfCAoc3RyaW5nICYge30pOwoKICB0eXBlIFN0ZXBUaW1pbmdGdW5jdGlvbiA9ICJzdGVwLWVuZCIgfCAic3RlcC1zdGFydCIgfCAoc3RyaW5nICYge30pOwoKICB0eXBlIFRyYWNrQnJlYWR0aDxUTGVuZ3RoPiA9IFRMZW5ndGggfCAiYXV0byIgfCAibWF4LWNvbnRlbnQiIHwgIm1pbi1jb250ZW50IiB8IChzdHJpbmcgJiB7fSk7CgogIHR5cGUgVmlld3BvcnRMZW5ndGg8VExlbmd0aD4gPSBUTGVuZ3RoIHwgImF1dG8iIHwgKHN0cmluZyAmIHt9KTsKCiAgdHlwZSBWaXN1YWxCb3ggPSAiYm9yZGVyLWJveCIgfCAiY29udGVudC1ib3giIHwgInBhZGRpbmctYm94IjsKfQo=";var DL="data:text/plain;charset=utf-8;base64,";var RL="data:text/plain;charset=utf-8;base64,Ly8gRGVmaW5pdGlvbnMgYnk6IEp1bnlvdW5nIENsYXJlIEphbmcgPGh0dHBzOi8vZ2l0aHViLmNvbS9BaWxydW4+Ci8vIFR5cGVTY3JpcHQgVmVyc2lvbjogMy4yCgppbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCcKaW1wb3J0IHsgQ29tcG9uZW50U2VsZWN0b3IsIEludGVycG9sYXRpb24gfSBmcm9tICdAZW1vdGlvbi9zZXJpYWxpemUnCmltcG9ydCB7IFByb3BzT2YsIERpc3RyaWJ1dGl2ZU9taXQsIFRoZW1lIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnCgpleHBvcnQgewogIEFycmF5SW50ZXJwb2xhdGlvbiwKICBDU1NPYmplY3QsCiAgRnVuY3Rpb25JbnRlcnBvbGF0aW9uCn0gZnJvbSAnQGVtb3Rpb24vc2VyaWFsaXplJwoKZXhwb3J0IHsgQ29tcG9uZW50U2VsZWN0b3IsIEludGVycG9sYXRpb24gfQoKLyoqIFNhbWUgYXMgU3R5bGVkT3B0aW9ucyBidXQgc2hvdWxkRm9yd2FyZFByb3AgbXVzdCBiZSBhIHR5cGUgZ3VhcmQgKi8KZXhwb3J0IGludGVyZmFjZSBGaWx0ZXJpbmdTdHlsZWRPcHRpb25zPAogIFByb3BzLAogIEZvcndhcmRlZFByb3BzIGV4dGVuZHMga2V5b2YgUHJvcHMgPSBrZXlvZiBQcm9wcwo+IHsKICBsYWJlbD86IHN0cmluZwogIHNob3VsZEZvcndhcmRQcm9wPyhwcm9wTmFtZTogUHJvcGVydHlLZXkpOiBwcm9wTmFtZSBpcyBGb3J3YXJkZWRQcm9wcwogIHRhcmdldD86IHN0cmluZwp9CgpleHBvcnQgaW50ZXJmYWNlIFN0eWxlZE9wdGlvbnM8UHJvcHM+IHsKICBsYWJlbD86IHN0cmluZwogIHNob3VsZEZvcndhcmRQcm9wPyhwcm9wTmFtZTogUHJvcGVydHlLZXkpOiBib29sZWFuCiAgdGFyZ2V0Pzogc3RyaW5nCn0KCi8qKgogKiBAdHlwZXBhcmFtIENvbXBvbmVudFByb3BzICBQcm9wcyB3aGljaCB3aWxsIGJlIGluY2x1ZGVkIHdoZW4gd2l0aENvbXBvbmVudCBpcyBjYWxsZWQKICogQHR5cGVwYXJhbSBTcGVjaWZpY0NvbXBvbmVudFByb3BzICBQcm9wcyB3aGljaCB3aWxsICpub3QqIGJlIGluY2x1ZGVkIHdoZW4gd2l0aENvbXBvbmVudCBpcyBjYWxsZWQKICovCmV4cG9ydCBpbnRlcmZhY2UgU3R5bGVkQ29tcG9uZW50PAogIENvbXBvbmVudFByb3BzIGV4dGVuZHMge30sCiAgU3BlY2lmaWNDb21wb25lbnRQcm9wcyBleHRlbmRzIHt9ID0ge30sCiAgSlNYUHJvcHMgZXh0ZW5kcyB7fSA9IHt9Cj4gZXh0ZW5kcyBSZWFjdC5GQzxDb21wb25lbnRQcm9wcyAmIFNwZWNpZmljQ29tcG9uZW50UHJvcHMgJiBKU1hQcm9wcz4sCiAgICBDb21wb25lbnRTZWxlY3RvciB7CiAgd2l0aENvbXBvbmVudDxDIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50Q2xhc3M8UmVhY3QuQ29tcG9uZW50UHJvcHM8Qz4+PigKICAgIGNvbXBvbmVudDogQwogICk6IFN0eWxlZENvbXBvbmVudDwKICAgIENvbXBvbmVudFByb3BzICYgUHJvcHNPZjxDPiwKICAgIHt9LAogICAgeyByZWY/OiBSZWFjdC5SZWY8SW5zdGFuY2VUeXBlPEM+PiB9CiAgPgogIHdpdGhDb21wb25lbnQ8QyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudFR5cGU8UmVhY3QuQ29tcG9uZW50UHJvcHM8Qz4+PigKICAgIGNvbXBvbmVudDogQwogICk6IFN0eWxlZENvbXBvbmVudDxDb21wb25lbnRQcm9wcyAmIFByb3BzT2Y8Qz4+CiAgd2l0aENvbXBvbmVudDxUYWcgZXh0ZW5kcyBrZXlvZiBKU1guSW50cmluc2ljRWxlbWVudHM+KAogICAgdGFnOiBUYWcKICApOiBTdHlsZWRDb21wb25lbnQ8Q29tcG9uZW50UHJvcHMsIEpTWC5JbnRyaW5zaWNFbGVtZW50c1tUYWddPgp9CgovKioKICogQHR5cGVwYXJhbSBDb21wb25lbnRQcm9wcyAgUHJvcHMgd2hpY2ggd2lsbCBiZSBpbmNsdWRlZCB3aGVuIHdpdGhDb21wb25lbnQgaXMgY2FsbGVkCiAqIEB0eXBlcGFyYW0gU3BlY2lmaWNDb21wb25lbnRQcm9wcyAgUHJvcHMgd2hpY2ggd2lsbCAqbm90KiBiZSBpbmNsdWRlZCB3aGVuIHdpdGhDb21wb25lbnQgaXMgY2FsbGVkCiAqLwpleHBvcnQgaW50ZXJmYWNlIENyZWF0ZVN0eWxlZENvbXBvbmVudDwKICBDb21wb25lbnRQcm9wcyBleHRlbmRzIHt9LAogIFNwZWNpZmljQ29tcG9uZW50UHJvcHMgZXh0ZW5kcyB7fSA9IHt9LAogIEpTWFByb3BzIGV4dGVuZHMge30gPSB7fQo+IHsKICAvKioKICAgKiBAdHlwZXBhcmFtIEFkZGl0aW9uYWxQcm9wcyAgQWRkaXRpb25hbCBwcm9wcyB0byBhZGQgdG8geW91ciBzdHlsZWQgY29tcG9uZW50CiAgICovCiAgPEFkZGl0aW9uYWxQcm9wcyBleHRlbmRzIHt9ID0ge30+KAogICAgLi4uc3R5bGVzOiBBcnJheTwKICAgICAgSW50ZXJwb2xhdGlvbjwKICAgICAgICBDb21wb25lbnRQcm9wcyAmCiAgICAgICAgICBTcGVjaWZpY0NvbXBvbmVudFByb3BzICYKICAgICAgICAgIEFkZGl0aW9uYWxQcm9wcyAmIHsgdGhlbWU6IFRoZW1lIH0KICAgICAgPgogICAgPgogICk6IFN0eWxlZENvbXBvbmVudDwKICAgIENvbXBvbmVudFByb3BzICYgQWRkaXRpb25hbFByb3BzLAogICAgU3BlY2lmaWNDb21wb25lbnRQcm9wcywKICAgIEpTWFByb3BzCiAgPgoKICAoCiAgICB0ZW1wbGF0ZTogVGVtcGxhdGVTdHJpbmdzQXJyYXksCiAgICAuLi5zdHlsZXM6IEFycmF5PAogICAgICBJbnRlcnBvbGF0aW9uPENvbXBvbmVudFByb3BzICYgU3BlY2lmaWNDb21wb25lbnRQcm9wcyAmIHsgdGhlbWU6IFRoZW1lIH0+CiAgICA+CiAgKTogU3R5bGVkQ29tcG9uZW50PENvbXBvbmVudFByb3BzLCBTcGVjaWZpY0NvbXBvbmVudFByb3BzLCBKU1hQcm9wcz4KCiAgLyoqCiAgICogQHR5cGVwYXJhbSBBZGRpdGlvbmFsUHJvcHMgIEFkZGl0aW9uYWwgcHJvcHMgdG8gYWRkIHRvIHlvdXIgc3R5bGVkIGNvbXBvbmVudAogICAqLwogIDxBZGRpdGlvbmFsUHJvcHMgZXh0ZW5kcyB7fT4oCiAgICB0ZW1wbGF0ZTogVGVtcGxhdGVTdHJpbmdzQXJyYXksCiAgICAuLi5zdHlsZXM6IEFycmF5PAogICAgICBJbnRlcnBvbGF0aW9uPAogICAgICAgIENvbXBvbmVudFByb3BzICYKICAgICAgICAgIFNwZWNpZmljQ29tcG9uZW50UHJvcHMgJgogICAgICAgICAgQWRkaXRpb25hbFByb3BzICYgeyB0aGVtZTogVGhlbWUgfQogICAgICA+CiAgICA+CiAgKTogU3R5bGVkQ29tcG9uZW50PAogICAgQ29tcG9uZW50UHJvcHMgJiBBZGRpdGlvbmFsUHJvcHMsCiAgICBTcGVjaWZpY0NvbXBvbmVudFByb3BzLAogICAgSlNYUHJvcHMKICA+Cn0KCi8qKgogKiBAZGVzYwogKiBUaGlzIGZ1bmN0aW9uIGFjY2VwdHMgYSBSZWFjdCBjb21wb25lbnQgb3IgdGFnICgnZGl2JywgJ2EnIGV0YykuCiAqCiAqIEBleGFtcGxlIHN0eWxlZChNeUNvbXBvbmVudCkoeyB3aWR0aDogMTAwIH0pCiAqIEBleGFtcGxlIHN0eWxlZChNeUNvbXBvbmVudCkobXlDb21wb25lbnRQcm9wcyA9PiAoeyB3aWR0aDogbXlDb21wb25lbnRQcm9wcy53aWR0aCB9KQogKiBAZXhhbXBsZSBzdHlsZWQoJ2RpdicpKHsgd2lkdGg6IDEwMCB9KQogKiBAZXhhbXBsZSBzdHlsZWQoJ2RpdicpPFByb3BzPihwcm9wcyA9PiAoeyB3aWR0aDogcHJvcHMud2lkdGggfSkKICovCmV4cG9ydCBpbnRlcmZhY2UgQ3JlYXRlU3R5bGVkIHsKICA8CiAgICBDIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50Q2xhc3M8UmVhY3QuQ29tcG9uZW50UHJvcHM8Qz4+LAogICAgRm9yd2FyZGVkUHJvcHMgZXh0ZW5kcyBrZXlvZiBSZWFjdC5Db21wb25lbnRQcm9wczxDPiA9IGtleW9mIFJlYWN0LkNvbXBvbmVudFByb3BzPEM+CiAgPigKICAgIGNvbXBvbmVudDogQywKICAgIG9wdGlvbnM6IEZpbHRlcmluZ1N0eWxlZE9wdGlvbnM8UmVhY3QuQ29tcG9uZW50UHJvcHM8Qz4sIEZvcndhcmRlZFByb3BzPgogICk6IENyZWF0ZVN0eWxlZENvbXBvbmVudDwKICAgIFBpY2s8UHJvcHNPZjxDPiwgRm9yd2FyZGVkUHJvcHM+ICYgewogICAgICB0aGVtZT86IFRoZW1lCiAgICB9LAogICAge30sCiAgICB7CiAgICAgIHJlZj86IFJlYWN0LlJlZjxJbnN0YW5jZVR5cGU8Qz4+CiAgICB9CiAgPgoKICA8QyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudENsYXNzPFJlYWN0LkNvbXBvbmVudFByb3BzPEM+Pj4oCiAgICBjb21wb25lbnQ6IEMsCiAgICBvcHRpb25zPzogU3R5bGVkT3B0aW9uczxSZWFjdC5Db21wb25lbnRQcm9wczxDPj4KICApOiBDcmVhdGVTdHlsZWRDb21wb25lbnQ8CiAgICBQcm9wc09mPEM+ICYgewogICAgICB0aGVtZT86IFRoZW1lCiAgICB9LAogICAge30sCiAgICB7CiAgICAgIHJlZj86IFJlYWN0LlJlZjxJbnN0YW5jZVR5cGU8Qz4+CiAgICB9CiAgPgoKICA8CiAgICBDIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50VHlwZTxSZWFjdC5Db21wb25lbnRQcm9wczxDPj4sCiAgICBGb3J3YXJkZWRQcm9wcyBleHRlbmRzIGtleW9mIFJlYWN0LkNvbXBvbmVudFByb3BzPEM+ID0ga2V5b2YgUmVhY3QuQ29tcG9uZW50UHJvcHM8Qz4KICA+KAogICAgY29tcG9uZW50OiBDLAogICAgb3B0aW9uczogRmlsdGVyaW5nU3R5bGVkT3B0aW9uczxSZWFjdC5Db21wb25lbnRQcm9wczxDPiwgRm9yd2FyZGVkUHJvcHM+CiAgKTogQ3JlYXRlU3R5bGVkQ29tcG9uZW50PAogICAgUGljazxQcm9wc09mPEM+LCBGb3J3YXJkZWRQcm9wcz4gJiB7CiAgICAgIHRoZW1lPzogVGhlbWUKICAgIH0KICA+CgogIDxDIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50VHlwZTxSZWFjdC5Db21wb25lbnRQcm9wczxDPj4+KAogICAgY29tcG9uZW50OiBDLAogICAgb3B0aW9ucz86IFN0eWxlZE9wdGlvbnM8UmVhY3QuQ29tcG9uZW50UHJvcHM8Qz4+CiAgKTogQ3JlYXRlU3R5bGVkQ29tcG9uZW50PAogICAgUHJvcHNPZjxDPiAmIHsKICAgICAgdGhlbWU/OiBUaGVtZQogICAgfQogID4KCiAgPAogICAgVGFnIGV4dGVuZHMga2V5b2YgSlNYLkludHJpbnNpY0VsZW1lbnRzLAogICAgRm9yd2FyZGVkUHJvcHMgZXh0ZW5kcyBrZXlvZiBKU1guSW50cmluc2ljRWxlbWVudHNbVGFnXSA9IGtleW9mIEpTWC5JbnRyaW5zaWNFbGVtZW50c1tUYWddCiAgPigKICAgIHRhZzogVGFnLAogICAgb3B0aW9uczogRmlsdGVyaW5nU3R5bGVkT3B0aW9uczxKU1guSW50cmluc2ljRWxlbWVudHNbVGFnXSwgRm9yd2FyZGVkUHJvcHM+CiAgKTogQ3JlYXRlU3R5bGVkQ29tcG9uZW50PAogICAgeyB0aGVtZT86IFRoZW1lOyBhcz86IFJlYWN0LkVsZW1lbnRUeXBlIH0sCiAgICBQaWNrPEpTWC5JbnRyaW5zaWNFbGVtZW50c1tUYWddLCBGb3J3YXJkZWRQcm9wcz4KICA+CgogIDxUYWcgZXh0ZW5kcyBrZXlvZiBKU1guSW50cmluc2ljRWxlbWVudHM+KAogICAgdGFnOiBUYWcsCiAgICBvcHRpb25zPzogU3R5bGVkT3B0aW9uczxKU1guSW50cmluc2ljRWxlbWVudHNbVGFnXT4KICApOiBDcmVhdGVTdHlsZWRDb21wb25lbnQ8CiAgICB7IHRoZW1lPzogVGhlbWU7IGFzPzogUmVhY3QuRWxlbWVudFR5cGUgfSwKICAgIEpTWC5JbnRyaW5zaWNFbGVtZW50c1tUYWddCiAgPgp9CgpkZWNsYXJlIGNvbnN0IHN0eWxlZDogQ3JlYXRlU3R5bGVkCmV4cG9ydCBkZWZhdWx0IHN0eWxlZAo=";var AL="data:text/plain;charset=utf-8;base64,Ly8gRGVmaW5pdGlvbnMgYnk6IEp1bnlvdW5nIENsYXJlIEphbmcgPGh0dHBzOi8vZ2l0aHViLmNvbS9BaWxydW4+Ci8vIFR5cGVTY3JpcHQgVmVyc2lvbjogMy4yCgppbXBvcnQgeyBUaGVtZSB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JwppbXBvcnQgeyBDcmVhdGVTdHlsZWQgYXMgQmFzZUNyZWF0ZVN0eWxlZCwgQ3JlYXRlU3R5bGVkQ29tcG9uZW50IH0gZnJvbSAnLi9iYXNlJwoKZXhwb3J0IHsKICBBcnJheUludGVycG9sYXRpb24sCiAgQ29tcG9uZW50U2VsZWN0b3IsCiAgQ1NTT2JqZWN0LAogIEZ1bmN0aW9uSW50ZXJwb2xhdGlvbiwKICBJbnRlcnBvbGF0aW9uLAogIFN0eWxlZENvbXBvbmVudCwKICBTdHlsZWRPcHRpb25zLAogIENyZWF0ZVN0eWxlZENvbXBvbmVudAp9IGZyb20gJy4vYmFzZScKCmV4cG9ydCB0eXBlIFN0eWxlZFRhZ3MgPSB7CiAgW1RhZyBpbiBrZXlvZiBKU1guSW50cmluc2ljRWxlbWVudHNdOiBDcmVhdGVTdHlsZWRDb21wb25lbnQ8CiAgICB7CiAgICAgIHRoZW1lPzogVGhlbWUKICAgICAgYXM/OiBSZWFjdC5FbGVtZW50VHlwZQogICAgfSwKICAgIEpTWC5JbnRyaW5zaWNFbGVtZW50c1tUYWddCiAgPgp9CgpleHBvcnQgaW50ZXJmYWNlIENyZWF0ZVN0eWxlZCBleHRlbmRzIEJhc2VDcmVhdGVTdHlsZWQsIFN0eWxlZFRhZ3Mge30KCmRlY2xhcmUgY29uc3Qgc3R5bGVkOiBDcmVhdGVTdHlsZWQKZXhwb3J0IGRlZmF1bHQgc3R5bGVkCg==";var FL={reactDts:TL,jsxDevRuntimeDts:IL,jsxRuntimeDts:EL,reactExpDts:kL,globalDts:LL,propTypesDts:PL,cssTypeDts:ML,framerDts:DL,emotionStyleBase:RL,emotionStyled:AL};function Kb(s,e=1,t={}){let{indent:i=" ",includeEmptyLines:n=!1}=t;if(typeof s!="string")throw new TypeError(`Expected \`input\` to be a \`string\`, got \`${typeof s}\``);if(typeof e!="number")throw new TypeError(`Expected \`count\` to be a \`number\`, got \`${typeof e}\``);if(e<0)throw new RangeError(`Expected \`count\` to be at least 0, got \`${e}\``);if(typeof i!="string")throw new TypeError(`Expected \`options.indent\` to be a \`string\`, got \`${typeof i}\``);if(e===0)return s;let o=n?/^/gm:/^(?!\s*$)/gm;return s.replace(o,i.repeat(e))}var Xb=Zr(NL(),1);function qb(s){if(typeof s!="string")throw new TypeError("Expected a string");return s.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")}var zL=/\s+at.*[(\s](.*)\)?/,CA=/^(?:(?:(?:node|node:[\w/]+|(?:(?:node:)?internal\/[\w/]*|.*node_modules\/(?:babel-polyfill|pirates)\/.*)?\w+)(?:\.js)?:\d+:\d+)|native)/,_A=typeof Xb.default.homedir=="undefined"?"":Xb.default.homedir().replace(/\\/g,"/");function Yb(s,{pretty:e=!1,basePath:t}={}){let i=t&&new RegExp(`(at | \\()${qb(t.replace(/\\/g,"/"))}`,"g");if(typeof s=="string")return s.replace(/\\/g,"/").split(`
`).filter(n=>{let o=n.match(zL);if(o===null||!o[1])return!0;let r=o[1];return r.includes(".app/Contents/Resources/electron.asar")||r.includes(".app/Contents/Resources/default_app.asar")?!1:!CA.test(r)}).filter(n=>n.trim()!=="").map(n=>(i&&(n=n.replace(i,"$1")),e&&(n=n.replace(zL,(o,r)=>o.replace(r,r.replace(_A,"~")))),n)).join(`
`)}var wA=s=>s.replace(/\s+at .*aggregate-error\/index.js:\d+:\d+\)?/g,""),eh,Cm=class extends Error{constructor(e){if(!Array.isArray(e))throw new TypeError(`Expected input to be an Array, got ${typeof e}`);e=e.map(i=>i instanceof Error?i:i!==null&&typeof i=="object"?Object.assign(new Error(i.message),i):new Error(i));let t=e.map(i=>typeof i.stack=="string"?wA(Yb(i.stack)):String(i)).join(`
`);t=`
`+Kb(t,4);super(t);nS(this,eh,void 0);St(this,"name","AggregateError");oS(this,eh,e)}get errors(){return iS(this,eh).slice()}};eh=new WeakMap;async function Zb(s,e,{concurrency:t=Number.POSITIVE_INFINITY,stopOnError:i=!0}={}){return new Promise((n,o)=>{if(s[Symbol.iterator]===void 0&&s[Symbol.asyncIterator]===void 0)throw new TypeError(`Expected \`input\` to be either an \`Iterable\` or \`AsyncIterable\`, got (${typeof s})`);if(typeof e!="function")throw new TypeError("Mapper function is required");if(!((Number.isSafeInteger(t)||t===Number.POSITIVE_INFINITY)&&t>=1))throw new TypeError(`Expected \`concurrency\` to be an integer from 1 and up or \`Infinity\`, got \`${t}\` (${typeof t})`);let r=[],a=[],l=new Map,c=!1,d=!1,h=!1,p=0,m=0,f=s[Symbol.iterator]===void 0?s[Symbol.asyncIterator]():s[Symbol.iterator](),v=w=>{c=!0,d=!0,o(w)},_=async()=>{if(d)return;let w=await f.next(),R=m;if(m++,w.done){if(h=!0,p===0&&!d){if(!i&&a.length>0){v(new Cm(a));return}if(d=!0,!l.size){n(r);return}let P=[];for(let[B,V]of r.entries())l.get(B)!==OL&&P.push(V);n(P)}return}p++,(async()=>{try{let P=await w.value;if(d)return;let B=await e(P,R);B===OL&&l.set(R,B),r[R]=B,p--,await _()}catch(P){if(i)v(P);else{a.push(P),p--;try{await _()}catch(B){v(B)}}}})()};(async()=>{for(let w=0;w<t;w++){try{await _()}catch(R){v(R);break}if(h||c)break}})()})}var OL=Symbol("skip");async function Jb(s,e){return Zb(s,t=>t(),e)}var{reactDts:TA,jsxDevRuntimeDts:EA,jsxRuntimeDts:IA,reactExpDts:kA,globalDts:LA,propTypesDts:PA,cssTypeDts:MA,framerDts:DA,emotionStyleBase:RA,emotionStyled:AA}=FL;self.MonacoEnvironment={getWorkerUrl:function(s,e){return e==="typescript"||e==="javascript"?"dist/workers/language/typescript/ts.worker.js":"dist/workers/editor/editor.worker.js"}};var HL=!1,Uhe=async({code:s,container:e})=>{if(console.log("monaco-editor"),!HL)HL=!0;else return;let t=e.attachShadow({mode:"open"}),i=document.createElement("div");t.appendChild(i),i.style.width="100%",i.style.height="100%";let n=document.createElement("style");n.innerText=` @font-face {
    font-family: codicon;
    font-display: block;
    src: url(./base/browser/ui/codicons/codicon/codicon.ttf) format("truetype");
}`,document.head.appendChild(n);let o=document.createElement("style");o.innerText=`@import url("dist/starter.css");
  @font-face {
    font-family: codicon;
    font-display: block;
    src: url(./base/browser/ui/codicons/codicon/codicon.ttf) format("truetype");
}
  
  `,t.appendChild(o),Pn.typescript.typescriptDefaults.setCompilerOptions({target:Pn.typescript.ScriptTarget.ES5,lib:["dom","dom.iterable","esnext"],allowJs:!0,skipLibCheck:!0,esModuleInterop:!0,allowSyntheticDefaultImports:!0,strict:!0,forceConsistentCasingInFileNames:!0,noFallthroughCasesInSwitch:!0,resolveJsonModule:!0,isolatedModules:!0,noEmit:!0,allowNonTsExtensions:!0,moduleResolution:Pn.typescript.ModuleResolutionKind.NodeJs,declaration:!1,module:Pn.typescript.ModuleKind.ESNext,noEmitOnError:!0,maxNodeModuleJsDepth:10,jsxImportSource:"@emotion/react",jsx:Pn.typescript.JsxEmit.ReactJSX,allowUmdGlobalAccess:!0}),Pn.typescript.typescriptDefaults.setDiagnosticsOptions({noSuggestionDiagnostics:!0,noSemanticValidation:!0,noSyntaxValidation:!0});let r=Eu.create(i,{model:Eu.createModel(s,"typescript",yg.parse("file:///app/index.tsx")),language:"typescript",useShadowDOM:!1,theme:"vs-dark",autoClosingBrackets:"languageDefined"});return window.addEventListener("resize",()=>{r.layout()}),(async()=>{let l=[{name:"react",url:TA,depend:["global","csstype","prop-types"]},{name:"react/jsx-runtime",url:IA,depend:["global","csstype","prop-types"]},{name:"react/jsx-dev-runtime",url:EA,depend:["global","csstype","prop-types"]},{name:"react-exp",url:kA,depend:[]},{name:"global",url:LA,depend:[]},{name:"prop-types",url:PA,depend:[]},{name:"csstype",url:MA,depend:[]},{name:"@emotion/base",url:RA,depend:["@emotion/react","@emotion/serialize","react"]},{name:"@emotion/styled",url:AA,depend:["@emotion/react","@emotion/serialize","react"]},{name:"@emotion/cache",url:await import("./index.d-HUD55SA3.mjs"),depend:["@emotion/utils"]},{name:"@emotion/react",url:await import("./index.d-UA6C6YHK.mjs"),depend:["@emotion/cache"]},{name:"@emotion/react/jsx-runtime",url:await import("./jsx-runtime.d-SFPFNG33.mjs"),depend:["@emotion/cache"]},{name:"@emotion/react/jsx-dev-runtime",url:await import("./jsx-dev-runtime.d-JPEYD4PV.mjs"),depend:["@emotion/cache"]},{name:"@emotion/react/jsx-namespace",url:await import("./jsx-namespace.d-AKHIITMC.mjs"),depend:["@emotion/utils","type"]},{name:"@emotion/react/theming",url:await import("./theming.d-TFBM2RB5.mjs"),depend:["@emotion/utils","type"]},{name:"@emotion/react/css-prop",url:await import("./css-prop.d-HJ7F4J56.mjs"),depend:["@emotion/utils","type"]},{name:"@emotion/react/helper",url:await import("./helper.d-L72FGGHQ.mjs"),depend:["@emotion/utils","type"]},{name:"@emotion/react/css-prop",url:await import("./css-prop.d-HJ7F4J56.mjs"),depend:["@emotion/utils","csstype"]},{name:"@emotion/react/helper",url:await import("./helper.d-L72FGGHQ.mjs"),depend:["@emotion/utils","csstype"]},{name:"@emotion/theming",url:await import("./theming.d-TFBM2RB5.mjs"),depend:["@emotion/utils","csstype"]},{name:"@emotion/serialize",url:await import("./index.d-6M6E2YAT.mjs"),depend:["@emotion/utils","csstype"]},{name:"@emotion/utils",url:await import("./index.d-CORSKMYS.mjs"),depend:[]},{name:"framer-motion",url:DA,depend:["popmotion"]}].map(({name:c,url:d})=>async()=>Pn.typescript.typescriptDefaults.addExtraLib(await(await fetch(d)).text(),`file:///node_modules/${c}/index.d.ts`));await Jb(l,{concurrency:2}),Pn.typescript.typescriptDefaults.setEagerModelSync(!0),Pn.typescript.typescriptDefaults.setDiagnosticsOptions({noSuggestionDiagnostics:!1,noSemanticValidation:!1,noSyntaxValidation:!1})})(),{editor:r,monaco:tS({},$b)}};export{Uhe as startMonaco};
/*! @license DOMPurify 2.3.1 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.3.1/LICENSE */
/*!-----------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)
 * Released under the MIT license
 * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt
 *-----------------------------------------------------------------------------*/
