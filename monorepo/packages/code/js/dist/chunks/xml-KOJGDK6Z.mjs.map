{
  "version": 3,
  "sources": ["../../../../../node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.js"],
  "sourcesContent": ["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.1(337587859b1c171314b40503171188b6cea6a32a)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __markAsModule = (target) => __defProp(target, \"__esModule\", { value: true });\nvar __reExport = (target, module, desc) => {\n  if (module && typeof module === \"object\" || typeof module === \"function\") {\n    for (let key of __getOwnPropNames(module))\n      if (!__hasOwnProp.call(target, key) && key !== \"default\")\n        __defProp(target, key, { get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable });\n  }\n  return target;\n};\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__markAsModule(monaco_editor_core_exports);\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/basic-languages/xml/xml.ts\nvar conf = {\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [[\"<\", \">\"]],\n  autoClosingPairs: [\n    { open: \"<\", close: \">\" },\n    { open: \"'\", close: \"'\" },\n    { open: '\"', close: '\"' }\n  ],\n  surroundingPairs: [\n    { open: \"<\", close: \">\" },\n    { open: \"'\", close: \"'\" },\n    { open: '\"', close: '\"' }\n  ],\n  onEnterRules: [\n    {\n      beforeText: new RegExp(`<([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n      afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n      action: {\n        indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n      }\n    },\n    {\n      beforeText: new RegExp(`<(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\n    }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".xml\",\n  ignoreCase: true,\n  qualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\n  tokenizer: {\n    root: [\n      [/[^<&]+/, \"\"],\n      { include: \"@whitespace\" },\n      [/(<)(@qualifiedName)/, [{ token: \"delimiter\" }, { token: \"tag\", next: \"@tag\" }]],\n      [\n        /(<\\/)(@qualifiedName)(\\s*)(>)/,\n        [{ token: \"delimiter\" }, { token: \"tag\" }, \"\", { token: \"delimiter\" }]\n      ],\n      [/(<\\?)(@qualifiedName)/, [{ token: \"delimiter\" }, { token: \"metatag\", next: \"@tag\" }]],\n      [/(<\\!)(@qualifiedName)/, [{ token: \"delimiter\" }, { token: \"metatag\", next: \"@tag\" }]],\n      [/<\\!\\[CDATA\\[/, { token: \"delimiter.cdata\", next: \"@cdata\" }],\n      [/&\\w+;/, \"string.escape\"]\n    ],\n    cdata: [\n      [/[^\\]]+/, \"\"],\n      [/\\]\\]>/, { token: \"delimiter.cdata\", next: \"@pop\" }],\n      [/\\]/, \"\"]\n    ],\n    tag: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, [\"attribute.name\", \"\", \"attribute.value\"]],\n      [\n        /(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/,\n        [\"attribute.name\", \"\", \"attribute.value\"]\n      ],\n      [/(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/, [\"attribute.name\", \"\", \"attribute.value\"]],\n      [/@qualifiedName/, \"attribute.name\"],\n      [/\\?>/, { token: \"delimiter\", next: \"@pop\" }],\n      [/(\\/)(>)/, [{ token: \"tag\" }, { token: \"delimiter\", next: \"@pop\" }]],\n      [/>/, { token: \"delimiter\", next: \"@pop\" }]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/<!--/, { token: \"comment\", next: \"@comment\" }]\n    ],\n    comment: [\n      [/[^<\\-]+/, \"comment.content\"],\n      [/-->/, { token: \"comment\", next: \"@pop\" }],\n      [/<!--/, \"comment.content.invalid\"],\n      [/[<\\-]/, \"comment.content\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],
  "mappings": "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",
  "names": []
}
