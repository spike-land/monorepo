{
  "version": 3,
  "sources": ["../uidV4.mjs"],
  "sourcesContent": ["let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nfunction rng() {\n  if (!getRandomValues) {\n    getRandomValues = typeof crypto !== \"undefined\" && crypto.getRandomValues &&\n        crypto.getRandomValues.bind(crypto) ||\n      typeof msCrypto !== \"undefined\" &&\n        typeof msCrypto.getRandomValues === \"function\" &&\n        msCrypto.getRandomValues.bind(msCrypto);\n    if (!getRandomValues) {\n      throw new Error(\n        \"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\",\n      );\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n\nconst __default =\n  /^(?:[\\da-f]{8}-[\\da-f]{4}-[1-5][\\da-f]{3}-[89ab][\\da-f]{3}-[\\da-f]{12}|0{8}-(?:0{4}-){3}0{12})$/i;\nfunction validate(uuid) {\n  return typeof uuid === \"string\" && __default.test(uuid);\n}\n\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 256).toString(16).slice(1));\n}\n\nfunction stringify(array) {\n  const offset = arguments.length > 1 && arguments[1] !== undefined\n    ? arguments[1]\n    : 0;\n  const uuid = (byteToHex[array[offset + 0]] + byteToHex[array[offset + 1]] +\n    byteToHex[array[offset + 2]] + byteToHex[array[offset + 3]] + \"-\" +\n    byteToHex[array[offset + 4]] + byteToHex[array[offset + 5]] + \"-\" +\n    byteToHex[array[offset + 6]] + byteToHex[array[offset + 7]] + \"-\" +\n    byteToHex[array[offset + 8]] + byteToHex[array[offset + 9]] + \"-\" +\n    byteToHex[array[offset + 10]] + byteToHex[array[offset + 11]] +\n    byteToHex[array[offset + 12]] + byteToHex[array[offset + 13]] +\n    byteToHex[array[offset + 14]] + byteToHex[array[offset + 15]])\n    .toLowerCase();\n  if (!validate(uuid)) {\n    throw new TypeError(\"Stringified UUID is invalid\");\n  }\n\n  return uuid;\n}\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)();\n  rnds[6] = rnds[6] & 15 | 64;\n  rnds[8] = rnds[8] & 63 | 128;\n  if (buf) {\n    offset = offset || 0;\n    for (let i1 = 0; i1 < 16; ++i1) {\n      buf[offset + i1] = rnds[i1];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport { v4 as default };\n"],
  "mappings": ";;;AAAA,IAAI;AACJ,IAAM,QAAQ,IAAI,WAAW;AAC7B,eAAe;AACb,MAAI,CAAC,iBAAiB;AACpB,sBAAkB,OAAO,WAAW,eAAe,OAAO,mBACtD,OAAO,gBAAgB,KAAK,WAC9B,OAAO,aAAa,eAClB,OAAO,SAAS,oBAAoB,cACpC,SAAS,gBAAgB,KAAK;AAClC,QAAI,CAAC,iBAAiB;AACpB,YAAM,IAAI,MACR;AAAA;AAAA;AAKN,SAAO,gBAAgB;AAAA;AAGzB,IAAM,YACJ;AACF,kBAAkB,MAAM;AACtB,SAAO,OAAO,SAAS,YAAY,UAAU,KAAK;AAAA;AAGpD,IAAM,YAAY;AAClB,SAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,YAAU,KAAM,KAAI,KAAK,SAAS,IAAI,MAAM;AAAA;AAG9C,mBAAmB,OAAO;AACxB,QAAM,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SACpD,UAAU,KACV;AACJ,QAAM,OAAQ,WAAU,MAAM,SAAS,MAAM,UAAU,MAAM,SAAS,MACpE,UAAU,MAAM,SAAS,MAAM,UAAU,MAAM,SAAS,MAAM,MAC9D,UAAU,MAAM,SAAS,MAAM,UAAU,MAAM,SAAS,MAAM,MAC9D,UAAU,MAAM,SAAS,MAAM,UAAU,MAAM,SAAS,MAAM,MAC9D,UAAU,MAAM,SAAS,MAAM,UAAU,MAAM,SAAS,MAAM,MAC9D,UAAU,MAAM,SAAS,OAAO,UAAU,MAAM,SAAS,OACzD,UAAU,MAAM,SAAS,OAAO,UAAU,MAAM,SAAS,OACzD,UAAU,MAAM,SAAS,OAAO,UAAU,MAAM,SAAS,MACxD;AACH,MAAI,CAAC,SAAS,OAAO;AACnB,UAAM,IAAI,UAAU;AAAA;AAGtB,SAAO;AAAA;AAGT,YAAY,SAAS,KAAK,QAAQ;AAChC,YAAU,WAAW;AACrB,QAAM,OAAO,QAAQ,UAAW,SAAQ,OAAO;AAC/C,OAAK,KAAK,KAAK,KAAK,KAAK;AACzB,OAAK,KAAK,KAAK,KAAK,KAAK;AACzB,MAAI,KAAK;AACP,aAAS,UAAU;AACnB,aAAS,KAAK,GAAG,KAAK,IAAI,EAAE,IAAI;AAC9B,UAAI,SAAS,MAAM,KAAK;AAAA;AAG1B,WAAO;AAAA;AAGT,SAAO,UAAU;AAAA;",
  "names": []
}
