"use strict";(globalThis.webpackChunkexample_browser_service_worker=globalThis.webpackChunkexample_browser_service_worker||[]).push([[119],{73737:(e,t,r)=>{e.exports=r(50536)},56922:(e,t,r)=>{r.d(t,{B:()=>Z});var s=r(37156);class n extends Error{get name(){return this.constructor.name}}class o extends Error{get name(){return this.constructor.name}}class i extends Error{get name(){return this.constructor.name}}class a{constructor(e){this.port=null,this.id=Math.random().toString(32).slice(2),this.nextID=0,this.queries=Object.create(null),e&&this.connect(e)}execute(e){const t=`${this.id}@${this.nextID++}`;return this.queries[t]=e,e.timeout>0&&e.timeout<1/0&&(e.timerID=setTimeout(a.timeout,e.timeout,this,t)),e.signal&&e.signal.addEventListener("abort",(()=>this.abort(t)),{once:!0}),this.port&&a.postQuery(this.port,t,e),e.result}connect(e){if(this.port)throw new Error("Transport is already open");this.port=e,this.port.addEventListener("message",this),this.port.start();for(const[t,r]of Object.entries(this.queries))a.postQuery(e,t,r)}disconnect(){const e=new i;for(const[t,r]of Object.entries(this.queries))r.fail(e),this.abort(t);this.port&&(this.port.removeEventListener("message",this),this.port.close())}static timeout(e,t){const{queries:r}=e,s=r[t];s&&(delete r[t],s.fail(new n("request timed out")),e.port&&e.port.postMessage({type:"abort",id:t}))}abort(e){const{queries:t}=this,r=t[e];r&&(delete t[e],r.fail(new o),this.port&&this.port.postMessage({type:"abort",id:e}),null!=r.timerID&&clearTimeout(r.timerID))}static postQuery(e,t,r){e.postMessage({type:"query",namespace:r.namespace,method:r.method,id:t,input:r.toJSON()},r.transfer())}handleEvent(e){const{id:t,result:r}=e.data,n=this.queries[t];n&&(delete this.queries[t],r.ok?n.succeed(r.value):n.fail((0,s.H)(r.error)),null!=n.timerID&&clearTimeout(n.timerID))}}class c{constructor(e,t,r){this.result=new Promise(((s,n)=>{this.succeed=s,this.fail=n,this.signal=r.signal,this.input=r,this.namespace=e,this.method=t,this.timeout=null==r.timeout?1/0:r.timeout,this.timerID=null}))}toJSON(){return this.input}transfer(){return this.input.transfer}}class u{constructor(e,t,r){this.transport=r;const s=this;for(const r of t)s[r]=t=>this.transport.execute(new c(e,r.toString(),t))}}class h{constructor(e,t,r){this.remote=new u(e,t,r)}}var d=r(84150),p=r(90066);class l extends h{constructor(e){super("block",["put","get","rm","stat"],e)}}l.prototype.get=async function(e,t={}){const{transfer:r}=t,{block:s}=await this.remote.get({...t,cid:(0,d.R)(e,r)});return s},l.prototype.put=async function(e,t={}){const{transfer:r}=t;delete t.progress;const s=await this.remote.put({...t,block:e instanceof Uint8Array?e:(0,p.G)(e,r)});return(0,d.T)(s.cid)},l.prototype.rm=async function*(e,t={}){const{transfer:r}=t,s=await this.remote.rm({...t,cids:Array.isArray(e)?e.map((e=>(0,d.R)(e,r))):[(0,d.R)(e,r)]});yield*s.map(f)},l.prototype.stat=async function(e,t={}){const{transfer:r}=t,s=await this.remote.stat({...t,cid:(0,d.R)(e,r)});return{...s,cid:(0,d.T)(s.cid)}};const f=e=>{const t=(0,d.T)(e.cid);return e.error?{cid:t,error:(0,s.H)(e.error)}:{cid:t}};var b=r(6826);class m extends h{constructor(e){super("dag",["put","get","resolve"],e)}}m.prototype.put=async function(e,t={}){const r=await this.remote.put({...t,dagNode:(0,b.p)(e,t.transfer)});return(0,d.T)(r)},m.prototype.get=async function(e,t={}){const{value:r,remainderPath:s}=await this.remote.get({...t,cid:(0,d.R)(e,t.transfer)});return{value:(0,b.S)(r),remainderPath:s}},m.prototype.resolve=async function(e,t={}){const{cid:r,remainderPath:s}=await this.remote.resolve({...t,cid:y(e,t.transfer)});return{cid:(0,d.T)(r),remainderPath:s}};const y=(e,t)=>"string"==typeof e?e:(0,d.R)(e,t);var w=r(75361);const g=async function*({port:e},t){let r=e=>{};e.onmessage=e=>r(e.data);let n=!1;try{for(;!n;){const{done:o,value:i,error:a}=await(e.postMessage({method:"next"}),new Promise((e=>r=e)));if(n=o,null!=a)throw(0,s.H)(a);null!=i&&(yield t(i))}}finally{n||e.postMessage({method:"return"}),e.close()}},x=(e,t,r)=>{const{port1:n,port2:o}=new MessageChannel,i=v(e),a=new Set;return n.onmessage=async({data:{method:e}})=>{switch(e){case"next":try{const{done:e,value:r}=await i.next();if(e)n.postMessage({type:"next",done:!0}),n.close();else{a.clear();const e=t(r,a);E(n,{type:"next",done:!1,value:e},a)}}catch(e){n.postMessage({type:"throw",error:(0,s.W)(e)}),n.close()}break;case"return":n.close(),i.return&&i.return()}},n.start(),r.add(o),{type:"RemoteIterable",port:o}},v=e=>{if(null!=e){if("function"==typeof e[Symbol.asyncIterator])return e[Symbol.asyncIterator]();if("function"==typeof e[Symbol.iterator])return e[Symbol.iterator]()}throw TypeError("Value must be async or sync iterable")},C=(e,t)=>{const{port1:r,port2:s}=new MessageChannel;return r.onmessage=({data:t})=>e.apply(null,t),t.add(s),{type:"RemoteCallback",port:s}},E=(e,t,r)=>e.postMessage(t,r);var I=r(41235),D=r(57740);function S(e){if(null!=e)return"number"==typeof e?4095&e:"0"===(e=e.toString()).substring(0,1)?4095&parseInt(e,8):4095&parseInt(e,10)}function T(e){if(null==e)return;let t;if(null!=e.secs&&(t={secs:e.secs,nsecs:e.nsecs}),null!=e.Seconds&&(t={secs:e.Seconds,nsecs:e.FractionalNanoseconds}),Array.isArray(e)&&(t={secs:e[0],nsecs:e[1]}),e instanceof Date){const r=e.getTime(),s=Math.floor(r/1e3);t={secs:s,nsecs:1e3*(r-1e3*s)}}if(Object.prototype.hasOwnProperty.call(t,"secs")){if(null!=t&&null!=t.nsecs&&(t.nsecs<0||t.nsecs>999999999))throw D(new Error("mtime-nsecs must be within the range [0,999999999]"),"ERR_INVALID_MTIME_NSECS");return t}}r(38118).Vw,parseInt("0644",8),parseInt("0755",8);var A=r(37e3);class U extends h{constructor(e){super("core",["add","addAll","cat","ls"],e)}}U.prototype.addAll=async function*(e,t={}){const{timeout:r,signal:s}=t,n=t.transfer||new Set,o=t.progress?C(t.progress,n):void 0,i=await this.remote.addAll({...t,input:B(e,n),progress:void 0,progressCallback:o,transfer:n,timeout:r,signal:s});yield*g(i.data,k)},U.prototype.add=async function(e,t={}){const{timeout:r,signal:s}=t,n=t.transfer||new Set,o=t.progress?C(t.progress,n):void 0,i=await this.remote.add({...t,input:await z(e,n),progress:void 0,progressCallback:o,transfer:n,timeout:r,signal:s});return k(i.data)},U.prototype.cat=async function*(e,t={}){const r=w.CID.asCID(e),s=r?(0,d.R)(r):e,n=await this.remote.cat({...t,path:s});yield*g(n.data,L)},U.prototype.ls=async function*(e,t={}){const r=w.CID.asCID(e),s=r?(0,d.R)(r):e,n=await this.remote.ls({...t,path:s});yield*g(n.data,P)};const k=({path:e,cid:t,mode:r,mtime:s,size:n})=>({path:e,cid:(0,d.T)(t),mode:r,mtime:s,size:n}),P=({name:e,path:t,size:r,cid:s,type:n,mode:o,mtime:i})=>({cid:(0,d.T)(s),type:n,name:e,path:t,mode:o,mtime:i,size:r}),L=e=>e,z=async(e,t)=>{if(e instanceof Blob)return e;if("string"==typeof e)return e;if(e instanceof ArrayBuffer)return e;if(ArrayBuffer.isView(e))return e;{const r=$(e);if(r)return x(await J(r),R,t);const s=N(e);if(s)return x(await J(s),V,t);const n=O(e);if(n)return x(await J(I(n)),V,t);const o=j(e);if(o)return q(o,t);throw TypeError("Unexpected input: "+typeof e)}},B=(e,t)=>{const r=$(e);if(r)return x(r,R,t);const s=N(e);if(s)return x(s,V,t);const n=O(e);if(n)return x(I(n),V,t);throw TypeError("Unexpected input: "+typeof e)},V=(e,t)=>{if(e instanceof ArrayBuffer)return e;if(ArrayBuffer.isView(e))return e;if(e instanceof Blob)return{path:"",content:e};if("string"==typeof e)return{path:"",content:e};{const r=j(e);if(r)return q(r,t);throw TypeError("Unexpected input: "+typeof e)}},R=(e,t)=>{if("number"==typeof e)throw TypeError("Iterable of numbers is not supported");if(e instanceof ArrayBuffer)return e;if(ArrayBuffer.isView(e))return e;if(e instanceof Blob)return{path:"",content:e};if("string"==typeof e)return{path:"",content:e};{const r=j(e);if(r)return q(r,t);throw TypeError("Unexpected input: "+typeof e)}},q=({path:e,mode:t,mtime:r,content:s},n)=>{const o={path:e,mode:S(t),mtime:T(r)};return s&&(o.content=M(s,n)),o},M=(e,t)=>{if(null==e)return"";if(e instanceof ArrayBuffer||ArrayBuffer.isView(e))return e;if(e instanceof Blob)return e;if("string"==typeof e)return e;{const r=$(e);if(r)return x(r,R,t);const s=N(e);if(s)return x(s,V,t);const n=O(e);if(n)return x(I(n),V,t);throw TypeError("Unexpected input: "+typeof e)}},$=e=>{const t=e;return t&&"function"==typeof t[Symbol.iterator]?t:null},N=e=>{const t=e;return t&&"function"==typeof t[Symbol.asyncIterator]?t:null},O=e=>e&&"function"==typeof e.getReader?e:null,j=e=>"object"==typeof e&&(e.path||e.content)?e:null,J=async e=>{const t=A(e),{value:r,done:s}=await t.peek();if(s)return[];if(t.push(r),Number.isInteger(r)||(n=r,ArrayBuffer.isView(n)||n instanceof ArrayBuffer)||"string"==typeof r||r instanceof String)return t;var n;throw D(new Error("Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead"),"ERR_UNEXPECTED_INPUT")};class _ extends h{constructor(e){super("files",["stat"],e)}}_.prototype.stat=async function(e,t={}){const{size:r,hash:s,withLocal:n,timeout:o,signal:i}=t,{stat:a}=await this.remote.stat({path:F(e),size:r,hash:s,withLocal:n,timeout:o,signal:i});return Q(a)};const F=e=>w.CID.asCID(e)?`/ipfs/${e.toString()}`:e.toString(),Q=e=>({...e,cid:(0,d.T)(e.cid)});class Z extends U{constructor(e){super(e),this.transport=e,this.dag=new m(this.transport),this.files=new _(this.transport),this.block=new l(this.transport)}static attach(e,t){e.transport.connect(t)}static detached(){return new Z(new a(void 0))}static from(e){return new Z(new a(e))}}},91707:(e,t,r)=>{r.d(t,{ET:()=>p,kU:()=>d});var s=r(61018),n=r(32676);class o{constructor(e,t,r){this.name=e,this.prefix=t,this.baseEncode=r}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}}class i{constructor(e,t,r){this.name=e,this.prefix=t,this.baseDecode=r}decode(e){if("string"==typeof e){if(e[0]===this.prefix)return this.baseDecode(e.slice(1));throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)}throw Error("Can only multibase decode strings")}or(e){return c(this,e)}}class a{constructor(e){this.decoders=e}or(e){return c(this,e)}decode(e){const t=e[0],r=this.decoders[t];if(r)return r.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}}const c=(e,t)=>new a({...e.decoders||{[e.prefix]:e},...t.decoders||{[t.prefix]:t}});class u{constructor(e,t,r,s){this.name=e,this.prefix=t,this.baseEncode=r,this.baseDecode=s,this.encoder=new o(e,t,r),this.decoder=new i(e,t,s)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}}const h=({name:e,prefix:t,encode:r,decode:s})=>new u(e,t,r,s),d=({prefix:e,name:t,alphabet:r})=>{const{encode:o,decode:i}=(0,s.Z)(r,t);return h({prefix:e,name:t,encode:o,decode:e=>(0,n.coerce)(i(e))})},p=({name:e,prefix:t,bitsPerChar:r,alphabet:s})=>h({prefix:t,name:e,encode:e=>((e,t,r)=>{const s="="===t[t.length-1],n=(1<<r)-1;let o="",i=0,a=0;for(let s=0;s<e.length;++s)for(a=a<<8|e[s],i+=8;i>r;)i-=r,o+=t[n&a>>i];if(i&&(o+=t[n&a<<r-i]),s)for(;o.length*r&7;)o+="=";return o})(e,s,r),decode:t=>((e,t,r,s)=>{const n={};for(let e=0;e<t.length;++e)n[t[e]]=e;let o=e.length;for(;"="===e[o-1];)--o;const i=new Uint8Array(o*r/8|0);let a=0,c=0,u=0;for(let t=0;t<o;++t){const o=n[e[t]];if(void 0===o)throw new SyntaxError(`Non-${s} character`);c=c<<r|o,a+=r,a>=8&&(a-=8,i[u++]=255&c>>a)}if(a>=r||255&c<<8-a)throw new SyntaxError("Unexpected end of data");return i})(t,s,r,e)})},19744:(e,t,r)=>{r.d(t,{base32:()=>n});var s=r(91707);const n=(0,s.ET)({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5});(0,s.ET)({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),(0,s.ET)({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),(0,s.ET)({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),(0,s.ET)({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),(0,s.ET)({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),(0,s.ET)({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),(0,s.ET)({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),(0,s.ET)({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5})},72966:(e,t,r)=>{r.d(t,{base58btc:()=>n});var s=r(91707);const n=(0,s.kU)({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"});(0,s.kU)({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"})},32676:(e,t,r)=>{r.d(t,{coerce:()=>n,equals:()=>s}),new Uint8Array(0);const s=(e,t)=>{if(e===t)return!0;if(e.byteLength!==t.byteLength)return!1;for(let r=0;r<e.byteLength;r++)if(e[r]!==t[r])return!1;return!0},n=e=>{if(e instanceof Uint8Array&&"Uint8Array"===e.constructor.name)return e;if(e instanceof ArrayBuffer)return new Uint8Array(e);if(ArrayBuffer.isView(e))return new Uint8Array(e.buffer,e.byteOffset,e.byteLength);throw new Error("Unknown type, must be binary type")}},75361:(e,t,r)=>{r.d(t,{CID:()=>u});var s=r(55558),n=r(58036),o=r(72966),i=r(19744),a=r(32676),c=r(23716);class u{constructor(e,t,r,s){this.code=t,this.version=e,this.multihash=r,this.bytes=s,this.byteOffset=s.byteOffset,this.byteLength=s.byteLength,this.asCID=this,this._baseCache=new Map,Object.defineProperties(this,{byteOffset:w,byteLength:w,code:y,version:y,multihash:y,bytes:y,_baseCache:w,asCID:w})}toV0(){if(0===this.version)return this;{const{code:e,multihash:t}=this;if(e!==l)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==f)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return u.createV0(t)}}toV1(){switch(this.version){case 0:{const{code:e,digest:t}=this.multihash,r=n.create(e,t);return u.createV1(this.code,r)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}equals(e){return e&&this.code===e.code&&this.version===e.version&&n.equals(this.multihash,e.multihash)}toString(e){const{bytes:t,version:r,_baseCache:s}=this;return 0===r?d(t,s,e||o.base58btc.encoder):p(t,s,e||i.base32.encoder)}toJSON(){return{code:this.code,version:this.version,hash:this.multihash.bytes}}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return"CID("+this.toString()+")"}static isCID(e){return g(/^0\.0/,x),!(!e||!e[m]&&e.asCID!==e)}get toBaseEncodedString(){throw new Error("Deprecated, use .toString()")}get codec(){throw new Error('"codec" property is deprecated, use integer "code" property instead')}get buffer(){throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead")}get multibaseName(){throw new Error('"multibaseName" property is deprecated')}get prefix(){throw new Error('"prefix" property is deprecated')}static asCID(e){if(e instanceof u)return e;if(null!=e&&e.asCID===e){const{version:t,code:r,multihash:s,bytes:n}=e;return new u(t,r,s,n||b(t,r,s.bytes))}if(null!=e&&!0===e[m]){const{version:t,multihash:r,code:s}=e,o=n.decode(r);return u.create(t,s,o)}return null}static create(e,t,r){if("number"!=typeof t)throw new Error("String codecs are no longer supported");switch(e){case 0:if(t!==l)throw new Error(`Version 0 CID must use dag-pb (code: ${l}) block encoding`);return new u(e,t,r,r.bytes);case 1:{const s=b(e,t,r.bytes);return new u(e,t,r,s)}default:throw new Error("Invalid version")}}static createV0(e){return u.create(0,l,e)}static createV1(e,t){return u.create(1,e,t)}static decode(e){const[t,r]=u.decodeFirst(e);if(r.length)throw new Error("Incorrect length");return t}static decodeFirst(e){const t=u.inspectBytes(e),r=t.size-t.multihashSize,s=(0,a.coerce)(e.subarray(r,r+t.multihashSize));if(s.byteLength!==t.multihashSize)throw new Error("Incorrect length");const o=s.subarray(t.multihashSize-t.digestSize),i=new n.Digest(t.multihashCode,t.digestSize,o,s);return[0===t.version?u.createV0(i):u.createV1(t.codec,i),e.subarray(t.size)]}static inspectBytes(e){let t=0;const r=()=>{const[r,n]=s.Jx(e.subarray(t));return t+=n,r};let n=r(),o=l;if(18===n?(n=0,t=0):1===n&&(o=r()),0!==n&&1!==n)throw new RangeError(`Invalid CID version ${n}`);const i=t,a=r(),c=r(),u=t+c;return{version:n,codec:o,multihashCode:a,digestSize:c,multihashSize:u-i,size:u}}static parse(e,t){const[r,s]=h(e,t),n=u.decode(s);return n._baseCache.set(r,e),n}}const h=(e,t)=>{switch(e[0]){case"Q":{const r=t||o.base58btc;return[o.base58btc.prefix,r.decode(`${o.base58btc.prefix}${e}`)]}case o.base58btc.prefix:{const r=t||o.base58btc;return[o.base58btc.prefix,r.decode(e)]}case i.base32.prefix:{const r=t||i.base32;return[i.base32.prefix,r.decode(e)]}default:if(null==t)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[e[0],t.decode(e)]}},d=(e,t,r)=>{const{prefix:s}=r;if(s!==o.base58btc.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const n=t.get(s);if(null==n){const n=r.encode(e).slice(1);return t.set(s,n),n}return n},p=(e,t,r)=>{const{prefix:s}=r,n=t.get(s);if(null==n){const n=r.encode(e);return t.set(s,n),n}return n},l=112,f=18,b=(e,t,r)=>{const n=s.P$(e),o=n+s.P$(t),i=new Uint8Array(o+r.byteLength);return s.mL(e,i,0),s.mL(t,i,n),i.set(r,o),i},m=Symbol.for("@ipld/js-cid/CID"),y={writable:!1,configurable:!1,enumerable:!0},w={writable:!1,enumerable:!1,configurable:!1},g=(e,t)=>{if(!e.test("0.0.0-dev"))throw new Error(t);c.warn(t)},x="CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n"},58036:(e,t,r)=>{r.d(t,{Digest:()=>c,create:()=>o,decode:()=>i,equals:()=>a});var s=r(32676),n=r(55558);const o=(e,t)=>{const r=t.byteLength,s=n.P$(e),o=s+n.P$(r),i=new Uint8Array(o+r);return n.mL(e,i,0),n.mL(r,i,s),i.set(t,o),new c(e,r,t,i)},i=e=>{const t=(0,s.coerce)(e),[r,o]=n.Jx(t),[i,a]=n.Jx(t.subarray(o)),u=t.subarray(o+a);if(u.byteLength!==i)throw new Error("Incorrect length");return new c(r,i,u,t)},a=(e,t)=>e===t||e.code===t.code&&e.size===t.size&&(0,s.equals)(e.bytes,t.bytes);class c{constructor(e,t,r,s){this.code=e,this.size=t,this.digest=r,this.bytes=s}}},55558:(e,t,r)=>{r.d(t,{Jx:()=>n,P$:()=>i,mL:()=>o});var s=r(12923);const n=e=>[s.Z.decode(e),s.Z.decode.bytes],o=(e,t,r=0)=>(s.Z.encode(e,t,r),t),i=e=>s.Z.encodingLength(e)}}]);