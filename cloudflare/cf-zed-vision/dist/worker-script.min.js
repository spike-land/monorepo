const corsHeaders={"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET,HEAD,POST,OPTIONS","Access-Control-Max-Age":"86400"};function json(t){return new Response(JSON.stringify(t),{headers:{...corsHeaders,"Content-Type":"application/json;charset=UTF-8"}})}function text(t){return new Response(t,{headers:{...corsHeaders,"Content-Type":"text/html;charset=UTF-8"}})}function handleOptions(t){const e=t.headers;if(e.get("Origin")!==null&&e.get("Access-Control-Request-Method")!==null&&e.get("Access-Control-Request-Headers")!==null){const o={...corsHeaders,"Access-Control-Allow-Headers":t.headers.get("Access-Control-Request-Headers")};return new Response(null,{headers:o})}else return new Response(null,{headers:{Allow:corsHeaders["Access-Control-Allow-Methods"]}})}async function handleAdmin(t,e,o,r){if(o==="/keys/"){const c=e.get("prefix"),s=await r.list({prefix:c});return json(s)}if(o==="/keys/delete/"){const c=e.get("hash"),s=await r.delete(c);return json(s)}return json({error:"not implemented"})}const sha256=async t=>Array.from(new Uint8Array(await crypto.subtle.digest("SHA-256",typeof t=="string"?new TextEncoder().encode(t):t)).slice(0,4)).map(e=>("00"+e.toString(16)).slice(-2)).join("");var getRandomValues,rnds8=new Uint8Array(16);function rng(){if(!getRandomValues&&(getRandomValues=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto!="undefined"&&typeof msCrypto.getRandomValues=="function"&&msCrypto.getRandomValues.bind(msCrypto),!getRandomValues))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return getRandomValues(rnds8)}const __default=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function validate(t){return typeof t=="string"&&__default.test(t)}for(var byteToHex=[],i=0;i<256;++i)byteToHex.push((i+256).toString(16).substr(1));function stringify(t){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,o=(byteToHex[t[e+0]]+byteToHex[t[e+1]]+byteToHex[t[e+2]]+byteToHex[t[e+3]]+"-"+byteToHex[t[e+4]]+byteToHex[t[e+5]]+"-"+byteToHex[t[e+6]]+byteToHex[t[e+7]]+"-"+byteToHex[t[e+8]]+byteToHex[t[e+9]]+"-"+byteToHex[t[e+10]]+byteToHex[t[e+11]]+byteToHex[t[e+12]]+byteToHex[t[e+13]]+byteToHex[t[e+14]]+byteToHex[t[e+15]]).toLowerCase();if(!validate(o))throw TypeError("Stringified UUID is invalid");return o}function v4(t,e,o){t=t||{};var r=t.random||(t.rng||rng)();if(r[6]=r[6]&15|64,r[8]=r[8]&63|128,e){o=o||0;for(var c=0;c<16;++c)e[o+c]=r[c];return e}return stringify(r)}const v41=()=>v4(),cid="QmaTd4hDdwSLuZwBkuLUf3ftnaEwoTN3uKcZ1Y6RD6cjqE",publicIpfsGateways=["https://ipfs.io/ipfs/:hash","https://dweb.link/ipfs/:hash","https://gateway.ipfs.io/ipfs/:hash","https://ipfs.infura.io/ipfs/:hash","https://ninetailed.ninja/ipfs/:hash","https://10.via0.com/ipfs/:hash","https://ipfs.eternum.io/ipfs/:hash","https://hardbin.com/ipfs/:hash","https://cloudflare-ipfs.com/ipfs/:hash","https://cf-ipfs.com/ipfs/:hash","https://gateway.pinata.cloud/ipfs/:hash","https://ipfs.sloppyta.co/ipfs/:hash","https://ipfs.greyh.at/ipfs/:hash","https://jorropo.ovh/ipfs/:hash","https://jorropo.net/ipfs/:hash","https://gateway.temporal.cloud/ipfs/:hash","https://ipfs.runfission.com/ipfs/:hash","https://trusti.id/ipfs/:hash","https://ipfs.overpi.com/ipfs/:hash","https://ipfs.ink/ipfs/:hash","https://gateway.ravenland.org/ipfs/:hash","https://ipfs.smartsignature.io/ipfs/:hash","https://ipfs.telos.miami/ipfs/:hash","https://robotizing.net/ipfs/:hash","https://ipfs.mttk.net/ipfs/:hash","https://ipfs.fleek.co/ipfs/:hash","https://ipfs.jbb.one/ipfs/:hash","https://jacl.tech/ipfs/:hash","https://ipfs.k1ic.com/ipfs/:hash","https://ipfs.drink.cafe/ipfs/:hash","https://ipfs.azurewebsites.net/ipfs/:hash","https://gw.ipfspin.com/ipfs/:hash","https://ipfs.denarius.io/ipfs/:hash"];function raceToSuccess(t){let e=0;return new Promise((o,r)=>t.forEach(c=>c.then(o).catch(()=>{++e===t.length&&r()})))}const diff=async(t,e)=>{const{diffChars:o}=await import("./vendor/diff.min.js"),{sha256:r}=await import("./sha256.js"),c=r(t),s=o(t,e);return{b:await c,c:s.map(h=>h.added?h.value:h.removed?-h.count:h.count)}},isDiff=t=>{if(t.length<10)return!1;const e=[...t.slice(0,8)].filter(r=>r<"0"||r>"f").length===0,o=t.slice(8);if(e&&o[0]==="["&&o[o.length-1]==="]")try{return JSON.parse(o).length>1}catch{return!1}return!1},assemble=(t,e)=>{const o=JSON.parse(e);let r=t.slice(),c="";return o.forEach(s=>{if(Number(s)===s){const h=Math.abs(s),u=r.slice(0,h);r=r.slice(h),s>0&&(c+=String(u))}else c+=String(s)}),c},getDbObj=t=>{const e={async get(o,r="string"){let c;try{if(c=await t.get(o),!c)return null}catch(h){return null}if(r==="json")try{return JSON.parse(c)}catch{return c}const s=await c;if(r==="string"){if(typeof s=="string"&&r==="string"){const h=s;if(isDiff(s)){const u=s.slice(0,8),l=s.slice(8),n=await e.get(u);return assemble(n,l)}return s}return new TextDecoder().decode(s)}return c},async put(o,r){let c;try{const h=await e.get(o);if(typeof h=="string"&&typeof r=="string"&&h.length===8&&h!==r){const u=await e.get(r),l=await e.get(h);if(typeof l=="string"){const n=await sha256(l);if(n===h){const a=await diff(u,l),f=a.b+JSON.stringify(a.c);await e.put(n,f)}}}}catch{c=""}if(c!==""&&r===c)return r;let s;return typeof r!="string"?s=new TextDecoder().decode(r):s=r,await t.put(o,s)},async delete(o){return await t.delete(o)},async clear(){return await t.clear()},async keys(){return await t.getAllKeys()}};return e};var SHAKV,USERS,LOGS,SIGNALS,USERKEYS,API_KEY;let now=0;function log(t,e={}){now=now||Date.now();const[o,r]=new Date().toLocaleTimeString("en-US").split(/:| /);return LOGS.put(String(2e12-now++),JSON.stringify({message:t,time:`${o}:${r}`,data:e}),{expirationTtl:86400*7})}async function handleCloudRequest(t){const{country:e,colo:o}=t.cf||{country:"",colo:""},r=new URL(t.url),{searchParams:c,pathname:s}=r,h=String(t.headers.get("API_KEY")||"");if(await log("request",{searchParams:c,pathname:s,country:e,colo:o}),t.method==="GET"&&h&&h==API_KEY)return handleAdmin(t,c,s,SHAKV);if(t.method==="GET"){if(s==="/robots.txt")return text("User-agent: * Disallow: /");if(s.slice(0,7)==="/signal"){const n=c.get("cid")||"",a=c.get("signal")||"",f=c.get("key")||"";if(n.length===46&&a.length===8)return await SIGNALS.put(a,n,{expirationTtl:86400*7}),json({success:!0});if(a.length===8){const p=await SIGNALS.get(a);return text(p)}return text("error....")}if(s==="/connect"&&c.get("key")){const n=c.get("key"),a=n.slice(0,8),f=n.slice(8,16),p=n.slice(16,24),g=n.slice(24,32),y=await sha256(a+f);if(!a||!f||!p||y!==g)return json({error:"auth error"});const d=await USERKEYS.get(f);if(d===null)return json({error:401});const w=await USERKEYS.get(a);if(w===null)return json({error:404,message:"token not found"});const k=await sha256(a+d),m=await sha256(w+d);return k===p?(await USERS.put(w,JSON.stringify({uuid:d,connected:f}),{expirationTtl:60}),json({success:!0})):json(m===p?{success:!0}:{error:401})}if(s==="/check"){const n=c.get("key");if(n===null)return new Response("500");const f=await(async()=>{const p=await USERKEYS.get(n);if(!p)return null;const g=await USERS.get(p,"json");return!g||g.connected?g:new Promise(y=>{const d=setInterval(async()=>{const w=await USERS.get(p,"json");(!w||w.connected)&&(clearInterval(d),y(w))},1e3)})})();return json({expired:f===null})}if(s==="/register"){const n=v41(),a=await sha256(n);return await USERS.put(n,JSON.stringify({uuid:n,uuidHash:a,registered:Date.now(),country:e,colo:o})),await log("register",{uuidHash:a}),await USERKEYS.put(a,n),json({uuid:n})}if(s==="/token"){const n=v41(),a=await sha256(n);return await USERS.put(n,JSON.stringify({uuid:n,registered:Date.now(),country:e,colo:o}),{expirationTtl:60}),await USERKEYS.put(a,n,{expirationTtl:60}),json({uuid:n,key:a})}if(s==="/create-project"){const n=t.headers.get("TOKEN"),a=v41();return await USERS.put(a,JSON.stringify({uuid:a,registered:Date.now(),country:e,colo:o})),json({uuid:a})}const u=s.substr(1),l=[...u].filter(n=>n<"0"||n>"f").length===0&&u.length===8;if(u&&l)return Response.redirect(`https://code.zed.vision/${u}/ipfs/${cid}/`,307);if(s.slice(0,6)==="/ipfs/"){const n=caches.default;let a=await n.match(t);if(!a){const f=publicIpfsGateways.sort(()=>.5-Math.random()).slice(0,8).map(p=>p.replace("/ipfs/:hash",s)).map(p=>fetch(p).then(g=>g.status===200?g:(()=>{throw new Error("Not found")})()));try{if(a=await raceToSuccess(f),typeof a=="undefined")return text("Please try again");await n.put(t,a.clone())}catch{return text("please try again")}}return a.status>399&&(a=new Response(a.statusText,{status:a.status})),a}return s==="/"?Response.redirect("https://blog.zed.vision",302):s==="/code"||s==="/code/"?Response.redirect(`https://code.zed.vision/ipfs/${cid}/`,302):text(s)}else if(t.method==="POST"){const u=String(t.headers.get("ZKEY")||""),l=u.slice(0,8),n=u.slice(8,16),a=u.slice(16,24),f=u.slice(24,32);if(!l||!n||!a||!f)return json({error:401,message:"not matching keys"});if(await sha256(l+n)!==a)return json({error:401,message:"content and userkeys are not a pain"});const g=await t.arrayBuffer(),d=(await sha256(g)).substring(0,8);if(d!==l)return json({error:401,message:`body hash not matching with the sent hash: ${d} -- ${u}`});const w=await USERKEYS.get(n);if(!w)return json({error:500,message:"user not found"});if(await sha256(l+w)!==f)return json({error:401,message:"user not verified"});await log("new html",{sha:l,uKey:n});const m=s.substr(1);if(await SHAKV.put(d,g),m){const T=await getDbObj(SHAKV).put(m,d)}return json({hash:d})}return new Response("404")}addEventListener("fetch",t=>{t.request.method==="OPTIONS"?t.respondWith(handleOptions(t.request)):t.respondWith(handleCloudRequest(t.request))});
