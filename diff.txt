diff --git a/packages/pr-tldt/main.mjs b/packages/pr-tldt/main.mjs
index 73b07a880..1cad2c6fe 100644
--- a/packages/pr-tldt/main.mjs
+++ b/packages/pr-tldt/main.mjs
@@ -19,7 +19,18 @@ const openai = new OpenAIApi(configuration);
 const app = express();
 app.use(bodyParser.text());
 
-app.post("/tldr", async (req, res) => {
+app.post("/tldr", handleTLDRRequest);
+
+const cache = {};
+
+app.use(handleErrors);
+
+const port = process.env.PORT || 3000;
+app.listen(port, () => {
+  console.log(`Server running on http://localhost:${port}`);
+});
+
+async function handleTLDRRequest(req, res) {
   if (typeof req.body !== "string") {
     res.status(400).json({ error: "Invalid input format. Expected a string." });
     return;
@@ -56,19 +67,19 @@ app.post("/tldr", async (req, res) => {
     ).filter(x => x);
 
     const promt = `
-If you find any issue, you have the developers to double check things just for making sure that everything is correct, please not even write a summary about the features.
-In case of issue, typo, error, your message starts:
-"ACTIONS NEEDED!!!" 
-Otherwise, if there are no issues: Your job is summarizing the reviews in a short, but effective message.
-
-${
+  If you find any issue, you have the developers to double check things just for making sure that everything is correct, please not even write a summary about the features.
+  In case of issue, typo, error, your message starts:
+  "ACTIONS NEEDED!!!" 
+  Otherwise, if there are no issues: Your job is summarizing the reviews in a short, but effective message.
+  
+  ${
       summaries.join(`
-
-----agent-report:
-`)
+  
+  ----agent-report:
+  `)
     }
-
-`;
+  
+  `;
 
     if (cache[promt]) return res.json(cache[promt]);
 
@@ -96,9 +107,12 @@ ${
   } catch (e) {
     res.status(500).json({ error: "Failed to generate final summary." });
   }
-});
+}
 
-const cache = {};
+function handleErrors(err, req, res, next) {
+  console.error(err.stack);
+  res.status(500).send("Something broke!");
+}
 
 async function generateSummary(diffSection, model = "gpt-3.5-turbo") {
   if (cache[diffSection]) return cache[diffSection];
@@ -123,8 +137,3 @@ app.use((err, req, res, next) => {
   console.error(err.stack);
   res.status(500).send("Something broke!");
 });
-
-const port = process.env.PORT || 3000;
-app.listen(port, () => {
-  console.log(`Server running on http://localhost:${port}`);
-});
